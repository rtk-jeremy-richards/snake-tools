{
    "00015b20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00015b20(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.00035da0();\n    if (iVar1 == 9) {\n        var_4h = fcn.00060a00(0, arg_8h, 0x8500d338, 0x8509259c);\n    }\n    else {\n        var_4h = 0;\n    }\n    return var_4h;\n}\n",
        "token_count": 116
    },
    "000173e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.000173e0(void)\n\n{\n    int16_t iVar1;\n    uint var_2a8h;\n    uint var_2a0h;\n    int16_t *var_29ch;\n    uint var_298h;\n    uint *var_294h;\n    int32_t var_290h;\n    uint var_28ch;\n    uint var_288h;\n    uint *var_284h;\n    uint var_280h;\n    uint var_27ch;\n    uint var_278h;\n    uint var_274h;\n    uint var_270h;\n    ushort var_6ah;\n    uint var_68h;\n    uint var_10h;\n    int32_t var_8h;\n    int16_t *var_4h;\n    \n    var_8h = 0;\n    if (*0x850925bc != 0) {\n        return 0;\n    }\n    *0x850925bc = 1;\n    fcn.0007f6d0(&var_298h, 0x8500d6bc);\n    var_28ch = 0x18;\n    var_288h = 0;\n    var_280h = 0x240;\n    var_284h = &var_298h;\n    var_27ch = 0;\n    var_278h = 0;\n    var_290h = fcn.0007f71e(&var_8h, 1, &var_28ch);\n    if (var_290h != 0) {\n        return var_290h;\n    }\n    var_294h = &var_270h;\n    var_298h._0_2_ = 0;\n    var_298h._2_2_ = 0x206;\n    var_290h = fcn.0007f712(var_8h, &var_298h, 0);\n    if (var_290h == 0) {\n        for (var_4h = &var_274h + (var_298h >> 1) * 2 + 2;\n            (((*var_4h == 0x5c || (*var_4h == 0x2f)) || (*var_4h == 0x20)) || (*var_4h == 9)); var_4h = var_4h + -1) {\n        }\n        var_4h[1] = 0;\n        var_4h = fcn.0007f724(&var_270h, 0x5c);\n        if (var_4h != NULL) {\n            var_29ch = var_4h;\n            do {\n                iVar1 = *var_29ch;\n                var_29ch = var_29ch + 1;\n            } while (iVar1 != 0);\n            if ((var_29ch - (var_4h + 1) >> 1) + 1U < 0x105) {\n                fcn.0007f718(0x8508fb40, var_4h + 1, 0x104);\n                fcn.0002c430(&var_68h, 0x52);\n                fcn.0007f6d6(0x8508fd48, 0x51, 0x8500d6b4, &var_68h);\n                *0x8508fdea = 0;\n                fcn.0007f6d6(&var_270h, 0x103, 0x8500d540, &var_68h);\n                var_6ah = 0;\n                fcn.0007f6d0(&var_298h, &var_270h);\n                var_28ch = 0x18;\n                var_288h = 0;\n                var_280h = 0x240;\n                var_284h = &var_298h;\n                var_27ch = 0;\n                var_278h = 0;\n                var_290h = fcn.0007f6ee(&var_8h, 0x100000, &var_28ch, &var_10h, 7, 0x21);\n                if ((var_290h == 0) && (var_290h = (**0x8500d2a0)(var_8h, 0, 0, 0, &var_274h, 0),  var_290h == 0)) {\n                    if (*(var_274h + 8) == 0) {\n                        (**0x8500d2e4)();\n                    }\n                    else {\n                        *0x850925c4 = *(*(var_274h + 8) + 0xc);\n                        (**0x8500d2e8)();\n                        *0x850925c0 = *(*(var_274h + 8) + 8);\n                        (**0x8500d2e8)();\n                        (**0x8500d2e4)();\n                        var_290h = fcn.00016250(*0x850925c0, 0x850138f0, 0x85013b70);\n                        fcn.000380a0(0x8508fdec);\n                        var_290h = fcn.00016270(0, 0x850138f0, 0x85013b70, 0xc, 1);\n                    }\n                }\n                goto code_r0x0001775d;\n            }\n        }\n        var_290h = -1;\n    }\ncode_r0x0001775d:\n    if (var_290h != 0) {\n        fcn.00017790();\n    }\n    if (var_8h != 0) {\n        fcn.0007f6c4(var_8h);\n    }\n    return var_290h;\n}\n",
        "token_count": 1293
    },
    "00067020": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00067020(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h, int32_t arg_14h, int32_t **arg_18h)\n\n{\n    int32_t *arg_8h_00;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint var_274h;\n    uint var_270h;\n    int32_t var_26ch;\n    uint var_268h;\n    int32_t *var_264h;\n    uint var_260h;\n    int32_t var_1c4h;\n    int32_t var_1c0h;\n    uint var_1bch;\n    int32_t var_1b8h;\n    int32_t var_4h;\n    \n    if (arg_8h == 0) {\n        var_26ch = 0x21590065;\n    }\n    else if (arg_10h == 0) {\n        var_26ch = 0x21590066;\n    }\n    else if (arg_18h == NULL) {\n        var_26ch = 0x2159006a;\n    }\n    else {\n        var_264h = fcn.00036360(0x8c);\n        if (var_264h == NULL) {\n            var_26ch = 0x21590004;\n        }\n        else {\n            fcn.0007f916(var_264h, 0, 0x8c);\n            arg_8h_00 = var_264h;\n            var_264h[0x22] = 1;\n            var_264h[0x1d] = 0;\n            var_264h[2] = arg_8h;\n            var_264h[1] = 0;\n            var_264h[6] = 0;\n            fcn.000655a0(&var_260h);\n            fcn.00065640(&var_260h, 0x20);\n            fcn.000656a0(&var_260h, 0);\n            fcn.000651e0(&var_260h, arg_8h, arg_10h + 0xe);\n            var_4h = 0;\n            while ((arg_8h_00[1] < arg_10h && (iVar1 = fcn.000655e0(&var_260h),  iVar1 != 0))) {\n                if ((var_1c4h == 0x1be) || (var_1c4h == 0x1bf)) {\n                    return 0x2159000e;\n                }\n                iVar1 = fcn.000656d0(&var_260h);\n                var_4h = var_4h + iVar1;\n                arg_8h_00[1] = arg_8h_00[1] + iVar1;\n            }\n            var_26ch = fcn.00067780(arg_8h_00, var_4h + 6);\n            if (var_26ch == 0) {\n                fcn.000651e0(&var_260h, arg_8h, arg_8h_00[1]);\n                arg_10h = 0;\n                var_4h = 0;\n                while ((arg_10h < arg_8h_00[1] && (iVar1 = fcn.000655e0(&var_260h),  iVar1 != 0))) {\n                    if ((var_1c4h == 0xde) && ((var_1c0h == 0x90 && (var_1bch == '\\b')))) {\n                        iVar1 = arg_8h_00[6];\n                        iVar2 = fcn.000656d0(&var_260h);\n                        var_26ch = fcn.00067780(arg_8h_00, (iVar1 + 6) - iVar2);\n                        if (var_26ch != 0) goto code_r0x000675c5;\n                        uVar6 = 0;\n                        uVar5 = 0;\n                        uVar4 = 0;\n                        puVar3 = &var_260h;\n                        iVar1 = fcn.000656d0(puVar3);\n                        var_26ch = fcn.000678e0(*arg_8h_00 + var_4h, iVar1 + arg_8h + arg_10h + var_1b8h, puVar3, uVar4\n                                                , uVar5, uVar6);\n                        if (var_26ch != 0) goto code_r0x000675c5;\n                        var_4h = var_4h + 6;\n                    }\n                    else if (((var_1c4h == 0x232) ||\n                             ((((var_1c4h == 0xe5 || (var_1c4h == 0xe4)) || (var_1c4h == 0xe2)) ||\n                              ((var_1c4h == 0x231 || (var_1c4h == 0xe6)))))) &&\n                            ((var_1c0h == 0x90 && (var_1bch == '\\b')))) {\n                        var_26ch = fcn.00067780(arg_8h_00, arg_8h_00[6] + 6);\n                        if (var_26ch != 0) goto code_r0x000675c5;\n                        *(*arg_8h_00 + var_4h) = *(arg_8h + arg_10h);\n                        *(var_4h + 1 + *arg_8h_00) = (arg_8h_00[6] - var_4h) + -8;\n                        uVar6 = 0;\n                        uVar5 = 0;\n                        uVar4 = 0;\n                        puVar3 = &var_260h;\n                        iVar1 = fcn.000656d0(puVar3);\n                        var_26ch = fcn.000678e0(*arg_8h_00 + -6 + arg_8h_00[6], iVar1 + arg_8h + arg_10h + var_1b8h, \n                                                puVar3, uVar4, uVar5, uVar6);\n                        if (var_26ch != 0) goto code_r0x000675c5;\n                        iVar1 = fcn.000656d0(&var_260h);\n                        arg_10h = iVar1 + arg_10h;\n                        iVar1 = fcn.000656d0(&var_260h);\n                        var_4h = iVar1 + var_4h;\n                    }\n                    else {\n                        uVar4 = fcn.000656d0(&var_260h);\n                        fcn.0007f904(*arg_8h_00 + var_4h, arg_8h + arg_10h, uVar4);\n                        iVar1 = fcn.000656d0(&var_260h);\n                        arg_10h = iVar1 + arg_10h;\n                        iVar1 = fcn.000656d0(&var_260h);\n                        var_4h = iVar1 + var_4h;\n                        if (((var_1c4h == 0x18) && (var_1c0h == 0x90)) && (var_1bch == ' ')) {\n                            *(*arg_8h_00 + -4 + var_4h) = (arg_8h - *arg_8h_00) + var_1b8h + arg_ch;\n                        }\n                        if (((var_1c4h == 0xde) && (var_1c0h == 0x90)) && (var_1bch == ' ')) {\n                            *(*arg_8h_00 + -4 + var_4h) = (arg_8h - *arg_8h_00) + var_1b8h + arg_ch;\n                        }\n                        if ((var_1c4h == 0x224) && (arg_10h == 1)) {\n                            iVar1 = fcn.00035da0();\n                            if (iVar1 == 3) {\n                                **arg_8h_00 = 0x55;\n                            }\n                            else if (iVar1 == 9) {\n                                **arg_8h_00 = 0x8b;\n                            }\n                        }\n                    }\n                }\n                var_26ch = fcn.000678e0(*arg_8h_00 + var_4h, arg_8h + arg_8h_00[1] + arg_ch, 0, 0, 0, 0);\n                if ((var_26ch == 0) &&\n                   ((arg_14h == 0 || (var_26ch = fcn.00067820(arg_8h, arg_8h_00[1], 0, arg_8h_00),  var_26ch == 0)))) {\n                    *arg_18h = var_264h;\n                    var_26ch = 0;\n                }\n            }\ncode_r0x000675c5:\n            if (var_26ch != 0) {\n                fcn.000675f0(&var_264h);\n            }\n        }\n    }\n    return var_26ch;\n}\n",
        "token_count": 2101
    },
    "00074940": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00074940(int32_t arg_8h, int32_t *arg_ch, int32_t *arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t var_ach;\n    uint8_t *var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    int32_t var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    \n    var_ach = fcn.00074d60(arg_8h);\n    if ((var_ach == 0) && (var_ach = fcn.0007bf30(*(arg_8h + 4), &var_a8h, &var_9ch, arg_14h, arg_18h),  var_ach == 0))\n    {\n        if (var_9ch == 0) {\n            *arg_ch = 0;\n            *arg_10h = 0;\n            var_ach = 0;\n        }\n        else if (var_9ch < 9) {\n            var_ach = 0x2159012d;\n        }\n        else {\n            puVar1 = *(arg_8h + 0x1c);\n            var_a4h = *puVar1;\n            var_a0h = puVar1[1];\n            var_90h = puVar1[2];\n            var_8ch = puVar1[3];\n            var_98h = var_a4h;\n            var_94h = var_a0h;\n            fcn.00031e80(&var_88h, 0x10, &var_98h);\n            iVar2 = fcn.00036330(var_9ch);\n            *arg_ch = iVar2;\n            if (*arg_ch == 0) {\n                var_ach = 0x21590004;\n            }\n            else {\n                fcn.00031360(var_a8h + 1, *arg_ch, var_9ch + -1, &var_88h, &var_a4h, 0);\n                *arg_10h = (var_9ch + -1) - *var_a8h;\n            }\n            fcn.0007c0d0(*(arg_8h + 4), var_a8h);\n        }\n    }\n    return var_ach;\n}\n",
        "token_count": 555
    },
    "00074ad0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.00074ad0(int32_t arg_8h, uint arg_ch, uint32_t arg_10h, int32_t *arg_14h, int32_t *arg_18h, uint arg_1ch, \n            uint arg_20h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t var_b4h;\n    uint8_t *var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    int32_t var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    char *var_8h;\n    int32_t var_4h;\n    \n    var_b4h = fcn.00074d60(arg_8h);\n    if (var_b4h == 0) {\n        if (arg_10h < 1) {\n            var_8h = NULL;\n            var_4h = 0;\n        }\n        else {\n            puVar1 = *(arg_8h + 0x1c);\n            var_ach = *puVar1;\n            var_a8h = puVar1[1];\n            var_98h = puVar1[2];\n            var_94h = puVar1[3];\n            var_a0h = var_ach;\n            var_9ch = var_a8h;\n            fcn.00031e80(&var_90h, 0x10, &var_a0h);\n            var_8h = fcn.00036330(arg_10h + 9);\n            if (var_8h == NULL) {\n                return 0x21590004;\n            }\n            fcn.00031360(arg_ch, var_8h + 1, arg_10h, &var_90h, &var_ach, 1);\n            uVar3 = arg_10h & 0x80000007;\n            if (uVar3 < 0) {\n                uVar3 = (uVar3 - 1 | 0xfffffff8) + 1;\n            }\n            var_4h = (-(uVar3 != 0) & 8) + (arg_10h + (arg_10h >> 0x1f & 7U) >> 3) * 8;\n            *var_8h = var_4h - arg_10h;\n            var_4h = var_4h + 1;\n        }\n        var_b4h = fcn.0007c000(*(arg_8h + 4), var_8h, var_4h, &var_b0h, &var_a4h, arg_1ch, arg_20h);\n        fcn.00036460(var_8h);\n        if (var_b4h == 0) {\n            if (var_a4h == 0) {\n                *arg_14h = 0;\n                *arg_18h = 0;\n                var_b4h = 0;\n            }\n            else if (var_a4h < 9) {\n                var_b4h = 0x2159012d;\n            }\n            else {\n                puVar1 = *(arg_8h + 0x1c);\n                var_ach = *puVar1;\n                var_a8h = puVar1[1];\n                var_98h = puVar1[2];\n                var_94h = puVar1[3];\n                var_a0h = var_ach;\n                var_9ch = var_a8h;\n                fcn.00031e80(&var_90h, 0x10, &var_a0h);\n                iVar2 = fcn.00036330(var_a4h);\n                *arg_14h = iVar2;\n                if (*arg_14h == 0) {\n                    var_b4h = 0x21590004;\n                }\n                else {\n                    fcn.00031360(var_b0h + 1, *arg_14h, var_a4h + -1, &var_90h, &var_ach, 0);\n                    *arg_18h = (var_a4h + -1) - *var_b0h;\n                }\n                fcn.0007c0d0(*(arg_8h + 4), var_b0h);\n            }\n        }\n    }\n    return var_b4h;\n}\n",
        "token_count": 993
    },
    "00075180": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.00075180(int32_t arg_8h, uint arg_ch, int32_t *arg_10h, int32_t *arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t var_b4h;\n    uint8_t *var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    int32_t var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8h;\n    uint var_4h;\n    \n    var_b4h = fcn.00074d60(arg_8h);\n    if ((var_b4h == 0) && (var_b4h = fcn.00074ed0(arg_8h, arg_ch, &var_8h, &var_4h),  var_b4h == 0)) {\n        var_b4h = fcn.0007c000(*(arg_8h + 4), var_8h, var_4h, &var_b0h, &var_a4h, arg_18h, arg_1ch);\n        fcn.00036460(var_8h);\n        if (var_b4h == 0) {\n            if (var_a4h == 0) {\n                *arg_10h = 0;\n                *arg_14h = 0;\n                var_b4h = 0;\n            }\n            else if (var_a4h < 9) {\n                var_b4h = 0x2159012d;\n            }\n            else {\n                puVar1 = *(arg_8h + 0x1c);\n                var_ach = *puVar1;\n                var_a8h = puVar1[1];\n                var_98h = puVar1[2];\n                var_94h = puVar1[3];\n                var_a0h = var_ach;\n                var_9ch = var_a8h;\n                fcn.00031e80(&var_90h, 0x10, &var_a0h);\n                iVar2 = fcn.00036330(var_a4h);\n                *arg_10h = iVar2;\n                if (*arg_10h == 0) {\n                    var_b4h = 0x21590004;\n                }\n                else {\n                    fcn.00031360(var_b0h + 1, *arg_10h, var_a4h + -1, &var_90h, &var_ach, 0);\n                    *arg_14h = (var_a4h + -1) - *var_b0h;\n                }\n                fcn.0007c0d0(*(arg_8h + 4), var_b0h);\n            }\n        }\n    }\n    return var_b4h;\n}\n",
        "token_count": 656
    },
    "00015b60": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00015b60(uint arg_8h)\n\n{\n    uint uVar1;\n    \n    if (*0x8509259c == 0) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = fcn.00061250(arg_8h, *0x8509259c);\n    }\n    return uVar1;\n}\n",
        "token_count": 85
    },
    "00015ba0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00015ba0(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    uint *arg_8h_00;\n    uint var_e0h;\n    int32_t var_84h;\n    uint var_80h;\n    int32_t var_28h;\n    uint var_24h;\n    \n    iVar1 = fcn.00045cc0(0x850925a0, 1, 0);\n    if (iVar1 != 1) {\n        fcn.0001d290();\n        fcn.00035c10(0x85092640, 0x104);\n        var_84h = fcn.0001e820();\n        uVar2 = fcn.0003bd60();\n        var_84h = fcn.00032db0(uVar2 & 0xffffff00 | arg_8h & 0xff);\n        if (var_84h == 0) {\n            fcn.0007f6b2(*(*0x8508fab0 + 0x1c), 0);\n        }\n        fcn.0007ee90();\n        fcn.0007e7f0();\n        fcn.0007f3d0();\n        *0x8509f0e4 = *(*0x8508fab0 + 4);\n        *0x8509f1ec = 0x85019860;\n        *0x8509f200 = 2;\n        *0x8509f208 = 1;\n        *0x8509f204 = *0x8508fab0;\n        *0x8509f0e8 = *0x8500d34c;\n        *0x8509f0ec = *0x8500d350;\n        var_28h = (-(arg_8h != 0) & 0xffffff8b) + 0x78;\n        var_84h = -1;\n        fcn.0002c780(&fcn.00015ba0::var_80h, 0x52);\n        fcn.0002c7b0(&fcn.00015ba0::var_e0h, 0x52);\n        do {\n            iVar1 = fcn.00036da0(&fcn.00015ba0::var_80h, &fcn.00015ba0::var_24h);\n            if (iVar1 == 0) {\n                arg_8h_00 = &fcn.00015ba0::var_e0h;\n                var_84h = fcn.00024150(arg_8h_00, 0);\n                if (var_84h == 0) break;\n            }\n            arg_8h_00 = 0x15cdf;\n            fcn.0005bdd0(1000);\n            iVar1 = var_28h + -1;\n            bVar3 = var_28h != 0;\n            var_28h = iVar1;\n        } while (bVar3);\n        fcn.00071be0(arg_8h_00);\n        var_84h = fcn.0001d5e0();\n        fcn.0005aed0();\n        fcn.0006a120();\n        fcn.0001de50();\n        fcn.00045ce0();\n        fcn.0004fbd0();\n    }\n    return 0;\n}\n",
        "token_count": 757
    },
    "00015d20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00015d20(void)\n\n{\n    if (*0x850925a0 != 0) {\n        fcn.0004fc70();\n        fcn.00046060(0);\n        fcn.0006a190();\n        fcn.0005b0a0();\n        fcn.0003bdf0();\n        fcn.0001d670();\n        fcn.00071c70();\n        fcn.00024750();\n        fcn.0007f4e0();\n        fcn.0007e910();\n        fcn.0007f120();\n        fcn.00033270();\n        fcn.0001ebc0();\n    }\n    return;\n}\n",
        "token_count": 154
    },
    "00015d80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00015d80(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    uint uVar2;\n    uint var_54h;\n    uint var_4ch;\n    int32_t var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint *var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_24h._0_2_ = 0xa8;\n    var_24h._2_2_ = 0xaa;\n    var_20h = 0x8500d358;\n    var_8h._0_2_ = 0x20;\n    var_8h._2_2_ = 0x22;\n    var_4h = 0x8500d404;\n    var_2ch = 0xffffffff;\n    var_48h = fcn.0001b150();\n    if (var_48h == 0) {\n        var_18h = *(*0x8508fab0 + 4);\n        var_14h = *(*0x8508fab0 + 8);\n        var_10h = *(*0x8508fab0 + 0xc);\n        var_ch = *(*0x8508fab0 + 0x10);\n        var_48h = fcn.00067a50(&fcn.00015d80::var_18h);\n        if ((var_48h == 0) && (var_48h = fcn.00015b20(*(*0x8508fab0 + 0xc)),  var_48h == 0)) {\n            uVar2 = *(*0x8508fab0 + 8);\n            arg_8h_00 = *(*0x8508fab0 + 4);\n            var_48h = fcn.00015b60(arg_8h_00);\n            if (var_48h == 0) {\n                fcn.0001d070(arg_8h_00, uVar2);\n                if (arg_ch != 0) {\n                    fcn.00016960(arg_8h);\n                }\n                var_44h = 0x18;\n                var_40h = 0;\n                var_38h = 0x40;\n                var_3ch = &fcn.00015d80::var_24h;\n                var_34h = 0;\n                var_30h = 0;\n                var_48h = fcn.0007f6ca(&fcn.00015d80::var_1ch, 2, &fcn.00015d80::var_44h);\n                if (var_48h == 0) {\n                    fcn.0007f6be(var_1ch, &fcn.00015d80::var_8h, 0, 4, &fcn.00015d80::var_2ch, 4);\n                    fcn.0007f6c4(var_1ch);\n                }\n                var_48h = fcn.000161c0();\n                if ((((var_48h == 0) &&\n                     (var_48h = fcn.00060f50(*(*0x8508fab0 + 0xc), 0x8500d428, &fcn.00015d80::var_28h),  var_48h == 0))\n                    && (var_48h = fcn.00067c30(var_28h, 0x85012020, 0x850925a4),  var_48h == 0)) &&\n                   ((((fcn.00068540(*0x850925a4),  arg_ch != 0 ||\n                      (iVar1 = fcn.00035b80(0x8500d438, &fcn.00015d80::var_4ch),  iVar1 == 0)) ||\n                     ((iVar1 = fcn.00035b80(0x8500d444, &fcn.00015d80::var_4ch),  iVar1 == 0 ||\n                      ((iVar1 = fcn.00035b80(0x8500d450, &fcn.00015d80::var_4ch),  iVar1 == 0 ||\n                       (iVar1 = fcn.00035b80(0x8500d45c, &fcn.00015d80::var_4ch),  iVar1 == 0)))))) &&\n                    (iVar1 = fcn.0001a700(0x15f8d, 0x85018c40, arg_ch),  iVar1 == 0)))) {\n                    fcn.00038370(&fcn.00015d80::var_54h);\n                }\n            }\n        }\n    }\n    if (var_48h != 0) {\n        fcn.00015fb0(1);\n    }\n    return var_48h;\n}\n",
        "token_count": 1181
    },
    "00015fb0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00015fb0(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.00035da0();\n    fcn.0001cd40();\n    fcn.00068540(*0x850925a4);\n    fcn.00068090(0x850925a4);\n    if (iVar1 < 0x1b) {\n        fcn.00054070(*0x85092618);\n    }\n    fcn.00016230();\n    fcn.0001d0f0();\n    fcn.00015b90(*(*0x8508fab0 + 4));\n    fcn.0006b4a0();\n    if (arg_8h != 0) {\n        fcn.00067ad0();\n    }\n    fcn.0001b510();\n    return;\n}\n",
        "token_count": 201
    },
    "00016020": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.00016020(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint32_t arg_20h, \n            uint arg_24h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint32_t extraout_ECX;\n    uint32_t uVar3;\n    uint var_18h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int16_t *var_4h;\n    \n    var_10h = fcn.00035da0();\n    uVar3 = extraout_ECX & 0xffffff00 | arg_20h & 0xff;\n    iVar2 = arg_ch;\n    pcVar1 = fcn.000684a0(arg_8h);\n    var_8h = (*pcVar1)(arg_8h, iVar2, arg_10h, arg_14h, arg_18h, arg_1ch, uVar3, arg_24h);\n    if (((var_8h == 0) && (arg_ch != 0)) && (*(arg_ch + 0x20) != 0)) {\n        uVar3 = *(arg_ch + 0x1c) >> 1;\n        for (var_4h = *(arg_ch + 0x20) + -2 + uVar3 * 2; (*var_4h != 0x5c && (*(arg_ch + 0x20) <= var_4h));\n            var_4h = var_4h + -1) {\n        }\n        var_4h = var_4h + 1;\n        var_ch = uVar3 - (var_4h - *(arg_ch + 0x20) >> 1);\n        iVar2 = fcn.0007f6b8(var_4h, 0x8500d46c, var_ch);\n        if ((iVar2 == 0) || (iVar2 = fcn.0007f6b8(var_4h, 0x8500d478, var_ch),  iVar2 == 0)) {\n            if (var_10h < 0x1b) {\n                fcn.00053f80(0);\n            }\n        }\n        else {\n            iVar2 = fcn.0007f6b8(var_4h, 0x8500d480, var_ch);\n            if (((((iVar2 == 0) || (iVar2 = fcn.0007f6b8(var_4h, 0x8500d48c, var_ch),  iVar2 == 0)) ||\n                 (iVar2 = fcn.0007f6b8(var_4h, 0x8500d498, var_ch),  iVar2 == 0)) ||\n                (iVar2 = fcn.0007f6b8(var_4h, 0x8500d4a4, var_ch),  iVar2 == 0)) &&\n               (iVar2 = fcn.0001a700(&var_18h, 0x85018c40, 0),  iVar2 == 0)) {\n                fcn.000383c0(&var_18h, 0);\n                fcn.00038370(&var_18h);\n            }\n        }\n    }\n    return var_8h;\n}\n",
        "token_count": 762
    },
    "000161c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.000161c0(void)\n\n{\n    int32_t var_8h;\n    uint var_4h;\n    \n    fcn.000380a0(0x850925a8);\n    var_8h = fcn.00060f50(*(*0x8508fab0 + 0xc), 0x8500d4b8, &var_4h);\n    if ((var_8h == 0) && (var_8h = fcn.00067c30(var_4h, 0x85012790, 0x850925b8),  var_8h == 0)) {\n        fcn.00068540(*0x850925b8);\n    }\n    return var_8h;\n}\n",
        "token_count": 169
    },
    "00016270": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00016270(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar1 = fcn.00036360(0x14);\n    if (puVar1 == NULL) {\n        uVar2 = 0xc000009a;\n    }\n    else {\n        puVar1[1] = arg_8h;\n        puVar1[2] = arg_ch;\n        puVar1[3] = arg_10h;\n        *(puVar1 + 4) = arg_14h;\n        *(puVar1 + 0x11) = arg_18h;\n        fcn.000382a0(0x850925a8, &var_4h, 1);\n        *puVar1 = *0x850925b4;\n        *0x850925b4 = puVar1;\n        fcn.000382d0(0x850925a8, &var_4h, 1);\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 273
    },
    "00016300": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00016300(int32_t arg_8h)\n\n{\n    int32_t **var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    fcn.000382a0(0x850925a8, &var_8h, 1);\n    var_ch = 0x850925b4;\n    do {\n        if (*var_ch == NULL) {\ncode_r0x00016360:\n            fcn.000382d0(0x850925a8, &var_8h, 1);\n            return;\n        }\n        if ((*var_ch)[1] == arg_8h) {\n            var_4h = *var_ch;\n            *var_ch = **var_ch;\n            fcn.00036460(var_4h);\n            goto code_r0x00016360;\n        }\n        var_ch = *var_ch;\n    } while( true );\n}\n",
        "token_count": 205
    },
    "00016380": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00016380(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t **var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    fcn.000382a0(0x850925a8, &var_8h, 1);\n    var_ch = 0x850925b4;\n    do {\n        if (*var_ch == NULL) {\ncode_r0x0001641c:\n            fcn.000382d0(0x850925a8, &var_8h, 1);\n            return;\n        }\n        if (((((*var_ch)[1] == arg_8h) && ((*var_ch)[2] == arg_ch)) && ((*var_ch)[3] == arg_10h)) &&\n           ((*(*var_ch + 4) == arg_14h && (*(*var_ch + 0x11) == arg_18h)))) {\n            var_4h = *var_ch;\n            *var_ch = **var_ch;\n            fcn.00036460(var_4h);\n            goto code_r0x0001641c;\n        }\n        var_ch = *var_ch;\n    } while( true );\n}\n",
        "token_count": 290
    },
    "00016440": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00016440(uint arg_8h, uint arg_ch)\n\n{\n    uint var_10h;\n    int32_t var_8h;\n    uint var_4h;\n    \n    fcn.0007f6d0(&var_10h, arg_8h);\n    var_8h = (**0x8500d2f0)(&var_10h, 0, &var_4h, arg_ch);\n    if (var_8h == 0) {\n        (**0x8500d2e8)();\n        (**0x8500d2e4)();\n    }\n    return var_8h;\n}\n",
        "token_count": 146
    },
    "00016490": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00016490(uint arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    uchar *puVar1;\n    uint uVar2;\n    uint *puVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar1 = *(arg_ch + 0x60);\n    if (arg_10h == 0) {\n        uVar2 = 0;\n    }\n    else {\n        puVar3 = fcn.00036360(0x2c);\n        if (puVar3 == NULL) {\n            *(arg_ch + 0x18) = 0xc000009a;\n            (**0x8500d2ec)();\n            uVar2 = 0xc000009a;\n        }\n        else {\n            *puVar3 = *(puVar1 + 0x1c);\n            puVar3[1] = *(puVar1 + 0x20);\n            puVar3[2] = arg_10h;\n            puVar3[3] = arg_14h;\n            puVar3[4] = *(puVar1 + 0x18);\n            puVar3[5] = arg_8h;\n            *(puVar3 + 6) = puVar1[3];\n            *(puVar3 + 0x1a) = *puVar1;\n            *(puVar3 + 0x1b) = puVar1[1];\n            *(puVar3 + 0x19) = puVar1[2];\n            puVar3[7] = *(puVar1 + 4);\n            puVar3[8] = *(puVar1 + 8);\n            puVar3[9] = *(puVar1 + 0xc);\n            puVar3[10] = *(puVar1 + 0x10);\n            *(puVar1 + 0x1c) = 0x85012590;\n            *(puVar1 + 0x20) = puVar3;\n            puVar1[3] = 0xe0;\n            uVar2 = 0;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 481
    },
    "00016590": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00016590(uint arg_8h, int32_t arg_ch, code **arg_10h)\n\n{\n    uchar *puVar1;\n    uint uVar2;\n    bool bVar3;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    *(arg_ch + 0x23) = *(arg_ch + 0x23) + -1;\n    *(arg_ch + 0x60) = *(arg_ch + 0x60) + -0x24;\n    puVar1 = *(arg_ch + 0x60);\n    uVar2 = *(puVar1 + 0x14);\n    if (arg_10h[2] == NULL) {\n        var_ch = 0;\n    }\n    else {\n        *(puVar1 + 0x18) = arg_10h[4];\n        *(puVar1 + 0x14) = arg_10h[5];\n        *puVar1 = *(arg_10h + 0x1a);\n        puVar1[1] = *(arg_10h + 0x1b);\n        puVar1[2] = *(arg_10h + 0x19);\n        *(puVar1 + 4) = arg_10h[7];\n        *(puVar1 + 8) = arg_10h[8];\n        *(puVar1 + 0xc) = arg_10h[9];\n        *(puVar1 + 0x10) = arg_10h[10];\n        puVar1[3] = *(arg_10h + 6);\n        *(puVar1 + 0x1c) = *arg_10h;\n        *(puVar1 + 0x20) = arg_10h[1];\n        var_ch = (*arg_10h[2])(arg_10h[5], arg_ch, arg_10h[3]);\n        if (var_ch == -0x3fffffea) {\n            return -0x3fffffea;\n        }\n    }\n    *(puVar1 + 0x1c) = *arg_10h;\n    *(puVar1 + 0x20) = arg_10h[1];\n    *(puVar1 + 0x14) = uVar2;\n    *(arg_ch + 0x23) = *(arg_ch + 0x23) + '\\x01';\n    *(arg_ch + 0x60) = *(arg_ch + 0x60) + 0x24;\n    if (*arg_10h != NULL) {\n        bVar3 = false;\n        if (*(arg_ch + 0x24) == '\\0') {\n            if (*(arg_ch + 0x18) < 0) {\n                if ((*(arg_10h + 6) & 0x80) != 0) {\n                    bVar3 = true;\n                }\n            }\n            else {\n                bVar3 = (*(arg_10h + 6) & 0x40) != 0;\n            }\n        }\n        else {\n            bVar3 = (*(arg_10h + 6) & 0x20) != 0;\n        }\n        if (bVar3) {\n            var_ch = (**arg_10h)(uVar2, arg_ch, arg_10h[1]);\n        }\n    }\n    fcn.00036460(arg_10h);\n    return var_ch;\n}\n",
        "token_count": 758
    },
    "00016790": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00016790(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint var_28h;\n    int32_t var_24h;\n    uint var_1dh;\n    char *var_18h;\n    uint *var_14h;\n    code *var_10h;\n    code *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = NULL;\n    var_10h = NULL;\n    var_1dh._0_1_ = '\\x01';\n    stack0xffffffe0 = 0;\n    if ((in_ECX == 0) || (in_EDX == 0)) {\n        pcVar1 = fcn.000684a0(arg_8h);\n        var_8h = (*pcVar1)();\n    }\n    else {\n        *(in_EDX + 0x23) = *(in_EDX + 0x23) + -1;\n        *(in_EDX + 0x60) = *(in_EDX + 0x60) + -0x24;\n        var_24h = in_ECX;\n        if (((*(in_EDX + 0x23) <= *(in_EDX + 0x22)) && ('\\0' < *(in_EDX + 0x23))) &&\n           (var_18h = *(in_EDX + 0x60),  var_18h != NULL)) {\n            *(var_18h + 0x14) = in_ECX;\n            fcn.00033ab0(&var_24h);\n            *(var_18h + 0x14) = var_24h;\n            fcn.000382a0(0x850925a8, &var_4h, 0);\n            for (var_14h = *0x850925b4; var_14h != NULL; var_14h = *var_14h) {\n                if (((var_14h[1] == 0) || (var_14h[1] == var_24h)) &&\n                   ((*(var_14h + 4) == '\\0' || ((*(var_14h + 4) == *var_18h && (*(var_14h + 0x11) == var_18h[1])))))) {\n                    var_ch = var_14h[2];\n                    var_10h = var_14h[3];\n                    break;\n                }\n            }\n            fcn.000382d0(0x850925a8, &var_4h, 0);\n            if ((var_ch != NULL) && (var_8h = (*var_ch)(var_24h, in_EDX, &var_1dh, &var_1dh + 1),  var_1dh == '\\0')) {\n                return var_8h;\n            }\n        }\n        *(in_EDX + 0x23) = *(in_EDX + 0x23) + '\\x01';\n        *(in_EDX + 0x60) = *(in_EDX + 0x60) + 0x24;\n        pcVar1 = fcn.000684a0(arg_8h);\n        var_8h = (*pcVar1)();\n        if (var_10h != NULL) {\n            var_8h = (*var_10h)(var_24h, in_EDX, var_8h, stack0xffffffe0);\n        }\n    }\n    return var_8h;\n}\n",
        "token_count": 791
    },
    "00016960": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00016960(int16_t *param_1)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint var_18h;\n    int16_t *var_8h;\n    uint var_73ch;\n    uint var_734h;\n    uint *var_730h;\n    uint var_72ch;\n    uint var_724h;\n    uint *var_720h;\n    uint var_718h;\n    uint var_512h;\n    uint var_50ch;\n    uint var_508h;\n    uint var_500h;\n    uint var_4fch;\n    uint32_t var_4f8h;\n    uint var_4f4h;\n    uint var_4f0h;\n    int32_t var_4ech;\n    uint var_4e8h;\n    uint var_4e4h;\n    int32_t var_4e0h;\n    uint var_4dch;\n    uint var_4d8h;\n    uint var_4d4h;\n    uint var_4d0h;\n    uint var_4cch;\n    uint var_4c8h;\n    uint var_4c4h;\n    uint var_4c0h;\n    ushort var_2bah;\n    uint var_2b8h;\n    uint var_2b4h;\n    uint var_2b0h;\n    uint var_aah;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    int32_t var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uchar *puStack28;\n    uint var_10h;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x8507ba48;\n    uStack16 = 0x8507b910;\n    var_10h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_10h;\n    puStack28 = &stack0xfffff8b4;\n    var_4f4h._0_2_ = 8;\n    var_4f4h._2_2_ = 10;\n    var_4f0h = 0x8500d4c8;\n    var_4d0h._0_2_ = 10;\n    var_4d0h._2_2_ = 0xc;\n    var_4cch = 0x8500d4d4;\n    var_2b8h._0_2_ = 0x18;\n    var_2b8h._2_2_ = 0x1a;\n    var_2b4h = 0x8500d4e0;\n    var_500h._0_2_ = 10;\n    var_500h._2_2_ = 0xc;\n    var_4fch = 0x8500d4fc;\n    var_20h._0_2_ = 0x12;\n    var_20h._2_2_ = 0x14;\n    var_1ch = 0x8500d508;\n    var_4c8h._0_2_ = 0x14;\n    var_4c8h._2_2_ = 0x16;\n    var_4c4h = 0x8500d51c;\n    var_98h._0_2_ = 10;\n    var_98h._2_2_ = 0xc;\n    var_94h = 0x8500d534;\n    fcn.0002c430(&var_90h, 100);\n    fcn.0007f6d6(&var_2b0h, 0x104, 0x8500d540, &var_90h);\n    var_aah._0_2_ = 0;\n    fcn.0002c460(&var_90h, 100);\n    fcn.0007f6d6(&var_4c0h, 0x104, 0x8500d560, &var_2b0h, &var_90h);\n    var_2bah = 0;\n    fcn.0007f6d0(&var_aah + 2, &var_2b0h);\n    var_4e8h = 0x18;\n    var_4e4h = 0;\n    var_4dch = 0x40;\n    var_4e0h = &var_aah + 2;\n    var_4d8h = 0;\n    var_4d4h = 0;\n    var_4ech = fcn.0001ed40(&var_50ch, 0xc0000000, &var_4e8h, &var_508h, 0, 2, 0, 2, 0x21, 0, 0);\n    if (var_4ech == 0) {\n        fcn.0007f6c4(var_50ch);\n    }\n    if ((*var_8h == 0) && (*(var_8h + 10) != 0)) {\n        var_4h = 0;\n        (**0x8500d2e0)(*(var_8h + 10), 8, 1);\n        var_a0h = **(var_8h + 10);\n        var_9ch = (*(var_8h + 10))[1];\n        (**0x8500d2e0)(var_a0h, var_9ch, 1);\n        fcn.0007f6d0();\n        var_4e8h = 0x18;\n        var_4e4h = 0;\n        var_4dch = 0x40;\n        var_4e0h = &var_aah + 2;\n        var_4d8h = 0;\n        var_4d4h = 0;\n        var_4ech = fcn.0001ed40(&var_50ch, 0x40000000, &var_4e8h, &var_508h, 0, 0x80, 0, 2, 0x60, 0, 0);\n        if (var_4ech == 0) {\n            var_4ech = fcn.0007f6f4(var_50ch, 0, 0, 0, &var_508h, var_a0h, var_9ch, 0, 0);\n            fcn.0007f6c4(var_50ch);\n        }\n        var_4h = 0xffffffff;\n    }\n    iVar2 = fcn.00035da0();\n    var_4f8h = 0x26 < iVar2;\n    fcn.0002c3a0(&var_90h, 100);\n    fcn.0007f6d6(&var_718h, 0x104, 0x8500d570, &var_90h);\n    fcn.0007f6d0(&var_aah + 2, &var_718h);\n    var_4e8h = 0x18;\n    var_4e4h = 0;\n    var_4dch = 0x40;\n    var_4e0h = &var_aah + 2;\n    var_4d8h = 0;\n    var_4d4h = 0;\n    var_4ech = fcn.0001cea0(&var_50ch, 0x40000000, &var_4e8h, 0, 0, 0, 0);\n    if (var_4ech == 0) {\n        var_24h = 0;\n        fcn.0001cf20(var_50ch, &var_2b8h, 0, 4, &var_24h, 4);\n        var_24h = (-(var_4f8h != 0) & 0xf) + 1;\n        fcn.0001cf20(var_50ch, &var_4f4h, 0, 4, &var_24h, 4);\n        if (var_4f8h == 0) {\n            var_24h = 1;\n        }\n        else {\n            var_24h = 2;\n        }\n        fcn.0001cf20(var_50ch, &var_4d0h, 0, 4, &var_24h, 4);\n        if (var_4f8h == 0) {\n            fcn.0001cf20(var_50ch, &var_500h, 0, 1, 0x8500d5e0, 0x20);\n        }\n        if (var_4f8h == 0) {\n            var_730h = &var_4c0h;\n            do {\n                iVar1 = *var_730h;\n                var_730h = var_730h + 2;\n            } while (iVar1 != 0);\n            fcn.0001cf20(var_50ch, &var_20h, 0, 1, &var_4c0h, (var_730h - (&var_4c0h + 2) >> 1) * 2 + 2);\n        }\n        else {\n            fcn.0002c430(&var_90h, 100);\n            fcn.0007f6d6(&var_2b0h, 0x104, 0x8500d600, &var_90h);\n            var_aah._0_2_ = 0;\n            fcn.0002c490(&var_90h, 100);\n            fcn.0007f6d6(&var_718h, 0x104, 0x8500d560, &var_2b0h, &var_90h);\n            var_512h._0_2_ = 0;\n            var_720h = &var_718h;\n            do {\n                iVar1 = *var_720h;\n                var_720h = var_720h + 2;\n            } while (iVar1 != 0);\n            fcn.0001cf20(var_50ch, &var_20h, 0, 2, &var_718h, (var_720h - (&var_718h + 2) >> 1) * 2 + 2);\n        }\n        if (var_4f8h != 0) {\n            fcn.0001cf20(var_50ch, &var_4c8h, 0, 1, 0x8500d624, 0x18);\n            var_24h = 1;\n            fcn.0001cf20(var_50ch, &var_98h, 0, 4, &var_24h, 4);\n        }\n        fcn.0007f6e2(var_50ch);\n        fcn.0007f6c4(var_50ch);\n    }\n    *in_FS_OFFSET = var_10h;\n    return;\n}\n",
        "token_count": 2529
    },
    "00017010": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00017010(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_2b8h;\n    uint var_b0h;\n    uint var_ach;\n    int32_t var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint *var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uchar var_85h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_68h;\n    \n    var_84h._0_2_ = 8;\n    var_84h._2_2_ = 10;\n    var_80h = 0x8500d63c;\n    var_78h._0_2_ = 0x68;\n    var_78h._2_2_ = 0x6a;\n    var_74h = 0x8500d648;\n    fcn.0002c430(&var_68h, 100);\n    fcn.0007f6d6(&var_2b8h, 0x104, 0x8500d540, &var_68h);\n    fcn.0007f6d0(&var_70h, &var_2b8h);\n    var_a0h = 0x18;\n    var_9ch = 0;\n    var_94h = 0x40;\n    var_98h = &var_70h;\n    var_90h = 0;\n    var_8ch = 0;\n    iVar1 = fcn.0007f6ee(&var_b0h, 0x10000000, &var_a0h, &var_ach, 0, 0);\n    if (iVar1 == 0) {\n        if (arg_8h != '\\0') {\n            fcn.0002c400(&var_68h, 100);\n            fcn.0007f6d6(&var_2b8h, 0x104, 0x8500d6b4, &var_68h);\n            fcn.0007f6d0(&var_70h, &var_2b8h);\n            var_a0h = 0x18;\n            var_9ch = var_b0h;\n            var_94h = 0x40;\n            var_98h = &var_70h;\n            var_90h = 0;\n            var_8ch = 0;\n            fcn.0007f6e8(&var_a0h);\n        }\n        fcn.0002c460(&var_68h, 100);\n        fcn.0007f6d6(&var_2b8h, 0x104, 0x8500d6b4, &var_68h);\n        fcn.0007f6d0(&var_70h, &var_2b8h);\n        var_a0h = 0x18;\n        var_9ch = var_b0h;\n        var_94h = 0x40;\n        var_98h = &var_70h;\n        var_90h = 0;\n        var_8ch = 0;\n        fcn.0007f6e8(&var_a0h);\n        if (arg_8h != '\\0') {\n            var_85h = 1;\n            fcn.0007f6dc(var_b0h, &var_ach, &var_85h, 1, 0xd);\n        }\n        fcn.0007f6c4(var_b0h);\n    }\n    fcn.0002c3a0(&var_68h, 100);\n    fcn.0007f6d6(&var_2b8h, 0x104, 0x8500d570, &var_68h);\n    fcn.0007f6d0(&var_70h, &var_2b8h);\n    var_a0h = 0x18;\n    var_9ch = 0;\n    var_94h = 0x40;\n    var_98h = &var_70h;\n    var_90h = 0;\n    var_8ch = 0;\n    var_a4h = fcn.0007f6ca(&var_b0h, 0x10000000, &var_a0h);\n    if (var_a4h == 0) {\n        var_a0h = 0x18;\n        var_9ch = var_b0h;\n        var_94h = 0x40;\n        var_98h = &var_84h;\n        var_90h = 0;\n        var_8ch = 0;\n        var_a4h = fcn.0007f6ca(&var_7ch, 0x10000000, &var_a0h);\n        if (var_a4h == 0) {\n            fcn.0007f6fa(var_7ch);\n            fcn.0007f6c4(var_7ch);\n        }\n        fcn.0007f6fa(var_b0h);\n        fcn.0007f6c4(var_b0h);\n    }\n    var_a0h = 0x18;\n    var_9ch = 0;\n    var_94h = 0x40;\n    var_98h = &var_78h;\n    var_90h = 0;\n    var_8ch = 0;\n    var_a4h = fcn.0007f6ca(&var_b0h, 0x10000000, &var_a0h);\n    if (var_a4h == 0) {\n        fcn.0007f6e2(var_b0h);\n        fcn.0007f6c4(var_b0h);\n    }\n    return;\n}\n",
        "token_count": 1348
    },
    "00017790": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00017790(void)\n\n{\n    if (*0x850925bc != 0) {\n        *0x850925bc = 0;\n        if (*0x850925c0 != 0) {\n            fcn.00016300(*0x850925c0);\n            (**0x8500d2e4)();\n            *0x850925c0 = 0;\n        }\n        fcn.00016380(0, 0x850138f0, 0x85013b70, 0xc, 1);\n        fcn.00038300(0x8508fdec);\n        if (*0x850925c4 != 0) {\n            (**0x8500d2e4)();\n            *0x850925c4 = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 182
    },
    "00017840": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00017840(void)\n\n{\n    int32_t iVar1;\n    uint var_31ch;\n    uint var_318h;\n    uint var_110h;\n    uint var_4h;\n    \n    if (((*0x850925bc != 0) && (iVar1 = fcn.000295a0(10, &var_110h, 0x104, &var_31ch),  iVar1 == 0)) &&\n       (iVar1 = fcn.000384e0(&var_110h, &var_318h, 0x104),  iVar1 != -1)) {\n        fcn.000382a0(0x8508fdec, &var_4h, 1);\n        fcn.0007f718(0x8508fdf8, &var_318h, 0x100);\n        *0x850925c8 = *0x8508fdf8 != 0;\n        fcn.000382d0(0x8508fdec, &var_4h, 1);\n    }\n    return;\n}\n",
        "token_count": 240
    },
    "000178f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000178f0(uint arg_8h, int32_t arg_ch, uchar *arg_10h, uint *arg_14h)\n\n{\n    char *pcVar1;\n    int16_t *piVar2;\n    char cVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint32_t uVar7;\n    uint var_24h;\n    uint var_1ch;\n    int16_t *var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    *arg_10h = 1;\n    if (*0x850925bc != 0) {\n        *arg_14h = 0x103;\n        cVar3 = fcn.0001f7c0();\n        if (cVar3 == '\\0') {\n            pcVar1 = *(arg_ch + 0x60);\n            if (((*pcVar1 == '\\f') && (pcVar1[1] == '\\x01')) ||\n               ((*pcVar1 == '\\0' && (iVar4 = fcn.0007f72a(),  iVar4 != *(*0x8508fab0 + 0x14))))) {\n                iVar4 = *(pcVar1 + 0x18);\n                if ((*(iVar4 + 0x34) != 0) && (*(iVar4 + 0x30) != 0)) {\n                    for (var_ch = *(iVar4 + 0x30) >> 1; (var_ch != 0 && (*(*(iVar4 + 0x34) + -2 + var_ch * 2) == 0x5c));\n                        var_ch = var_ch - 1) {\n                    }\n                    for (var_8h = 0; (*(*(iVar4 + 0x34) + var_8h * 2) == 0x5c && (var_8h < var_ch)); var_8h = var_8h + 1\n                        ) {\n                    }\n                    var_ch = var_ch - var_8h;\n                    var_18h = 0x8508fb40;\n                    piVar2 = var_18h;\n                    do {\n                        var_18h = piVar2;\n                        piVar2 = var_18h + 1;\n                    } while (*var_18h != 0);\n                    uVar7 = var_18h + 0x3d7b8260 >> 1;\n                    if ((var_ch == 0) ||\n                       (iVar5 = fcn.0007f6b8(*(iVar4 + 0x34) + var_8h * 2, 0x8508fb40, uVar7),  iVar5 != 0)) {\n                        if ((*0x850925c8 != 0) && (*pcVar1 != '\\0')) {\n                            uVar6 = fcn.00016490(arg_8h, arg_ch, 0x85013ba0, arg_14h);\n                            return uVar6;\n                        }\n                    }\n                    else if (*pcVar1 == '\\0') {\n                        for (var_8h = var_8h + uVar7; (*(*(iVar4 + 0x34) + var_8h * 2) == 0x5c && (var_8h < var_ch));\n                            var_8h = var_8h + 1) {\n                        }\n                        if ((var_ch - var_8h != 0) &&\n                           (iVar4 = fcn.0007f6b8(*(iVar4 + 0x34) + var_8h * 2, 0x8508fd48, var_ch - var_8h),  iVar4 == 0\n                           )) {\n                            *arg_10h = 0;\n                            *(arg_ch + 0x18) = 0xc0000034;\n                            (**0x8500d2ec)();\n                            return *(arg_ch + 0x18);\n                        }\n                    }\n                    else if (uVar7 == var_ch) {\n                        uVar6 = fcn.00016490(arg_8h, arg_ch, 0x85013ba0, arg_14h);\n                        return uVar6;\n                    }\n                }\n            }\n            else if (*pcVar1 == '\\n') {\n                uVar6 = fcn.00016490(arg_8h, arg_ch, 0x85013d90, 0);\n                return uVar6;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 1014
    },
    "00017ba0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00017ba0(uint param_1, int32_t param_2, int32_t *param_3)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint var_8h;\n    int32_t var_ch;\n    int32_t *var_10h;\n    uint var_18h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_10h_2;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x8507ba38;\n    uStack16 = 0x8507b910;\n    var_10h_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_10h_2;\n    if (((var_10h == NULL) || (var_ch == 0)) || (*(var_ch + 0x22) < *(var_ch + 0x23))) {\n        uVar1 = 0xc0000005;\n    }\n    else {\n        iVar4 = *(var_ch + 0x60);\n        if (((iVar4 == 0) || (*(iVar4 + 0x14) == 0)) || (*(*(iVar4 + 0x14) + 8) == 0)) {\n            uVar1 = 0xc0000005;\n        }\n        else {\n            if (*(var_ch + 0x18) == 0) {\n                iVar2 = (**0x8500d290)(*(var_ch + 0x3c), *(var_ch + 0x1c), 0, 0, 0);\n                if (iVar2 == 0) {\n                    *(var_ch + 0x18) = 0xc000009a;\n                    uVar1 = *(var_ch + 0x18);\n                    goto code_r0x00017d79;\n                }\n                var_4h = 0;\n                (**0x8500d29c)(iVar2, 0, 2);\n                iVar3 = fcn.00017eb0(*(iVar4 + 0xc), *(var_ch + 0x3c), *(var_ch + 0x1c));\n                var_4h = 0xffffffff;\n                (**0x8500d298)(iVar2);\n                (**0x8500d2a8)(iVar2);\n                if (*(var_ch + 0x18) == 0) {\n                    if ((iVar3 == -1) && ((*(iVar4 + 2) & 4) == 0)) {\n                        *(iVar4 + 2) = *(iVar4 + 2) & 0xfe;\n                        *(var_ch + 0x23) = *(var_ch + 0x23) + '\\x01';\n                        *(var_ch + 0x60) = *(var_ch + 0x60) + 0x24;\n                        iVar4 = (**0x8500d18c)();\n                        if (iVar4 != 0x103) {\n                            *var_10h = iVar4;\n                        }\n                        uVar1 = 0xc0000016;\n                        goto code_r0x00017d79;\n                    }\n                    *(var_ch + 0x1c) = iVar3;\n                }\n            }\n            uVar1 = fcn.00016760(var_8h, var_ch);\n        }\n    }\ncode_r0x00017d79:\n    *in_FS_OFFSET = var_10h_2;\n    return uVar1;\n}\n",
        "token_count": 807
    },
    "00017d90": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00017d90(uint arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    uint32_t uVar4;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((arg_ch != 0) && (*(arg_ch + 0x23) <= *(arg_ch + 0x22))) {\n        fcn.000341b0(&var_8h);\n        if (*(*(arg_ch + 0x60) + 8) == 3) {\n            iVar1 = *(arg_ch + 0xc);\n            uVar4 = fcn.0007f90a(var_8h, var_4h, *(iVar1 + 0x10) * *(iVar1 + 0x14), 0);\n            uVar2 = *(iVar1 + 8);\n            *(iVar1 + 8) = uVar4 + *(iVar1 + 8);\n            *(iVar1 + 0xc) = *(iVar1 + 0xc) + CARRY4(uVar4, uVar2);\n        }\n        else if (*(*(arg_ch + 0x60) + 8) == 7) {\n            puVar3 = *(arg_ch + 0xc);\n            uVar4 = fcn.0007f90a(var_8h, var_4h, puVar3[6] * puVar3[7], 0);\n            uVar2 = *puVar3;\n            *puVar3 = uVar4 + *puVar3;\n            puVar3[1] = puVar3[1] + CARRY4(uVar4, uVar2);\n            uVar2 = puVar3[2];\n            puVar3[2] = uVar4 + puVar3[2];\n            puVar3[3] = puVar3[3] + CARRY4(uVar4, uVar2);\n            uVar2 = puVar3[4];\n            puVar3[4] = uVar4 + puVar3[4];\n            puVar3[5] = puVar3[5] + CARRY4(uVar4, uVar2);\n        }\n    }\n    fcn.00016760(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 554
    },
    "00018180": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00018180(int32_t *arg_8h)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    uint var_50h;\n    int32_t var_4ch;\n    int32_t var_48h;\n    int32_t *var_44h;\n    int32_t *var_40h;\n    uint32_t var_3ch;\n    uint var_38h;\n    uint var_30h;\n    int32_t *var_2ch;\n    uint var_28h;\n    uint var_20h;\n    int32_t *var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    int32_t *var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    var_ch = 0;\n    var_1ch = arg_8h;\n    do {\n        iVar1 = *var_1ch;\n        var_1ch = var_1ch + 2;\n    } while (iVar1 != 0);\n    fcn.000382a0(0x8508fdec, &var_8h, 0);\n    var_4h = 0x8508fdf8;\n    do {\n        if ((var_4h == NULL) || (*var_4h == 0)) goto code_r0x0001835c;\n        var_10h = fcn.0007f700(var_4h, 0x3a);\n        if (var_10h == NULL) {\n            var_2ch = var_4h;\n            do {\n                iVar1 = *var_2ch;\n                var_2ch = var_2ch + 2;\n            } while (iVar1 != 0);\n            iVar2 = var_2ch - (var_4h + 2);\n        }\n        else {\n            iVar2 = var_10h - var_4h;\n            var_10h = var_10h + 2;\n        }\n        var_14h = iVar2 >> 1;\n        if (var_14h <= var_1ch - (arg_8h + 2) >> 1) {\n            var_40h = var_4h;\n            var_44h = arg_8h;\n            for (var_3ch = var_14h << 1; 3 < var_3ch; var_3ch = var_3ch - 4) {\n                if (*var_44h != *var_40h) goto code_r0x0001829d;\n                var_40h = var_40h + 1;\n                var_44h = var_44h + 1;\n            }\n            if (var_3ch == 0) {\ncode_r0x0001831f:\n                var_4ch = 0;\n            }\n            else {\ncode_r0x0001829d:\n                var_48h = *var_44h - *var_40h;\n                if (var_48h == 0) {\n                    if (var_3ch == 1) goto code_r0x0001831f;\n                    var_48h = *(var_44h + 1) - *(var_40h + 1);\n                    if (var_48h == 0) {\n                        if (var_3ch == 2) goto code_r0x0001831f;\n                        var_48h = *(var_44h + 2) - *(var_40h + 2);\n                        if (var_48h == 0) {\n                            if ((var_3ch == 3) || (var_48h = *(var_44h + 3) - *(var_40h + 3),  var_48h == 0))\n                            goto code_r0x0001831f;\n                        }\n                    }\n                }\n                var_4ch = 1;\n                if (var_48h < 1) {\n                    var_4ch = -1;\n                }\n            }\n            if (var_4ch == 0) {\n                var_ch = 1;\ncode_r0x0001835c:\n                fcn.000382d0(0x8508fdec, &var_8h, 0);\n                return var_ch;\n            }\n        }\n        var_4h = var_10h;\n    } while( true );\n}\n",
        "token_count": 968
    },
    "00018420": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00018420(uint arg_8h)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_2ch;\n    uint var_24h;\n    uint *var_20h;\n    uint var_18h;\n    uint *var_14h;\n    int16_t *var_10h;\n    int16_t *var_ch;\n    uint *var_8h;\n    int32_t var_4h;\n    \n    var_8h = NULL;\n    iVar2 = fcn.000209a0(arg_8h, 0x67, 4, &var_ch, &var_4h);\n    if (iVar2 == 0) {\n        uVar3 = 0x21590065;\n    }\n    else {\n        var_8h = fcn.00036330(var_4h + 8);\n        if (var_8h == NULL) {\n            uVar3 = 0x21590004;\n        }\n        else {\n            var_10h = var_ch;\n            var_14h = var_8h + 2;\n            do {\n                iVar1 = *var_10h;\n                *var_14h = iVar1;\n                var_10h = var_10h + 1;\n                var_14h = var_14h + 2;\n            } while (iVar1 != 0);\n            var_20h = var_8h + 2;\n            do {\n                iVar1 = *var_20h;\n                var_20h = var_20h + 2;\n            } while (iVar1 != 0);\n            var_8h[1] = var_20h - (var_8h + 10) >> 1;\n            fcn.000380d0(0x8508fff8, 1);\n            *var_8h = *0x85090004;\n            *0x85090004 = var_8h;\n            fcn.000381b0(0x8508fff8, 1);\n            uVar3 = 0;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 473
    },
    "00018530": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00018530(void)\n\n{\n    uint *puVar1;\n    uint var_8h;\n    uint *var_4h;\n    \n    fcn.000380d0(0x8508fff8, 1);\n    var_4h = *0x85090004;\n    while (var_4h != NULL) {\n        puVar1 = *var_4h;\n        fcn.00036460(var_4h);\n        var_4h = puVar1;\n    }\n    *0x85090004 = NULL;\n    fcn.000381b0(0x8508fff8, 1);\n    return 0;\n}\n",
        "token_count": 147
    },
    "000185a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.000185a0(int32_t arg_8h, uint arg_ch)\n\n{\n    uint16_t *puVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_5ch;\n    int32_t var_58h;\n    int32_t var_54h;\n    int32_t *var_50h;\n    int32_t *var_4ch;\n    uint32_t var_48h;\n    uint var_44h;\n    int32_t var_40h;\n    int32_t var_3ch;\n    int32_t *var_38h;\n    int32_t *var_34h;\n    uint32_t var_30h;\n    uint *var_2ch;\n    uint var_28h;\n    uint32_t var_24h;\n    int32_t *var_20h;\n    uint *var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t *var_10h;\n    int32_t var_ch;\n    int16_t *var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    var_10h = NULL;\n    var_18h._0_2_ = 0;\n    var_18h._2_2_ = 0;\n    var_14h = 0;\n    var_ch = 0;\n    if (*0x85090004 == NULL) {\n        return;\n    }\n    if (arg_8h == 0) {\n        return;\n    }\n    puVar1 = *(arg_8h + 8);\n    if (puVar1 == NULL) {\n        return;\n    }\n    if (*(puVar1 + 2) == 0) {\n        return;\n    }\n    if (*puVar1 < 2) {\n        return;\n    }\n    for (var_8h = *(puVar1 + 2) + (*puVar1 - 1 & 0xfffffffe); *var_8h == 0; var_8h = var_8h + -1) {\n    }\n    fcn.000380d0(0x8508fff8, 0);\n    for (var_1ch = *0x85090004; var_1ch != NULL; var_1ch = *var_1ch) {\n        if ((var_1ch[1] << 1 <= *puVar1) &&\n           (iVar2 = fcn.0007f6b8(var_8h + (1 - var_1ch[1]), var_1ch + 2, var_1ch[1]),  iVar2 == 0)) {\n            var_4h = 1;\n            break;\n        }\n    }\n    fcn.000381b0(0x8508fff8, 0);\n    if (var_4h == 0) goto code_r0x00018a70;\n    if (*(arg_8h + 4) == 0) {\n        var_20h = *(puVar1 + 2);\n        var_24h = *puVar1;\n        var_34h = 0x8500d6d4;\n        var_38h = var_20h;\n        for (var_30h = 8; 3 < var_30h; var_30h = var_30h - 4) {\n            if (*var_38h != *var_34h) goto code_r0x000187df;\n            var_34h = var_34h + 1;\n            var_38h = var_38h + 1;\n        }\n        if (var_30h == 0) {\ncode_r0x00018861:\n            var_40h = 0;\n        }\n        else {\ncode_r0x000187df:\n            var_3ch = *var_38h - *var_34h;\n            if (var_3ch == 0) {\n                if (var_30h == 1) goto code_r0x00018861;\n                var_3ch = *(var_38h + 1) - *(var_34h + 1);\n                if (var_3ch == 0) {\n                    if (var_30h == 2) goto code_r0x00018861;\n                    var_3ch = *(var_38h + 2) - *(var_34h + 2);\n                    if (var_3ch == 0) {\n                        if ((var_30h == 3) || (var_3ch = *(var_38h + 3) - *(var_34h + 3),  var_3ch == 0))\n                        goto code_r0x00018861;\n                    }\n                }\n            }\n            var_40h = 1;\n            if (var_3ch < 1) {\n                var_40h = -1;\n            }\n        }\n        if (var_40h == 0) {\n            var_20h = var_20h + 2;\n            var_24h = var_24h - 8;\n        }\n        if (var_24h < 2) goto code_r0x00018a70;\n    }\n    else {\n        puVar3 = &var_ch;\n        iVar2 = (**0x8500d2a0)(arg_ch, 0, **0x8500d08c, 0, puVar3, 0);\n        if (iVar2 != 0) {\n            return;\n        }\n        if (((*(var_ch + 0x34) == 0) || (*(var_ch + 0x30) < 2)) ||\n           (iVar2 = fcn.0007f730(puVar3, &var_18h, *(var_ch + 4)),  iVar2 != 0)) goto code_r0x00018a70;\n        var_24h = var_18h + *(var_ch + 0x30);\n        var_10h = fcn.00036330(var_24h);\n        if (var_10h == NULL) goto code_r0x00018a70;\n        fcn.0007f904(var_10h, var_14h, var_18h);\n        fcn.0007f904(var_18h + var_10h, *(var_ch + 0x34), *(var_ch + 0x30));\n        var_20h = var_10h;\n    }\n    fcn.000380d0(0x85090014, 0);\n    for (var_2ch = *0x85090020; var_2ch != NULL; var_2ch = *var_2ch) {\n        var_4ch = var_20h;\n        var_50h = var_2ch + 8;\n        for (var_48h = var_24h; 3 < var_48h; var_48h = var_48h - 4) {\n            if (*var_50h != *var_4ch) goto code_r0x0001890f;\n            var_4ch = var_4ch + 1;\n            var_50h = var_50h + 1;\n        }\n        if (var_48h == 0) {\ncode_r0x00018991:\n            var_58h = 0;\n        }\n        else {\ncode_r0x0001890f:\n            var_54h = *var_50h - *var_4ch;\n            if (var_54h == 0) {\n                if (var_48h == 1) goto code_r0x00018991;\n                var_54h = *(var_50h + 1) - *(var_4ch + 1);\n                if (var_54h == 0) {\n                    if (var_48h == 2) goto code_r0x00018991;\n                    var_54h = *(var_50h + 2) - *(var_4ch + 2);\n                    if (var_54h == 0) {\n                        if ((var_48h == 3) || (var_54h = *(var_50h + 3) - *(var_4ch + 3),  var_54h == 0))\n                        goto code_r0x00018991;\n                    }\n                }\n            }\n            var_58h = 1;\n            if (var_54h < 1) {\n                var_58h = -1;\n            }\n        }\n        if (var_58h == 0) break;\n    }\n    fcn.000381b0(0x85090014, 0);\n    if ((var_2ch == NULL) && (puVar3 = fcn.00036330(var_24h + 0x22),  puVar3 != NULL)) {\n        fcn.0007f904(puVar3 + 8, var_20h, var_24h);\n        *(puVar3 + (var_24h & 0xfffffffe) + 0x20) = 0;\n        puVar3[1] = 0;\n        iVar2 = fcn.000379b0(puVar3 + 2, 0x11);\n        if (iVar2 == 0) {\n            *(puVar3 + 2) = 0;\n        }\n        fcn.000380d0(0x85090014, 1);\n        *puVar3 = *0x85090020;\n        *0x85090020 = puVar3;\n        fcn.000381b0(0x85090014, 1);\n        fcn.00034dc0(0x85090008);\n    }\ncode_r0x00018a70:\n    if (var_14h != 0) {\n        (**0x8500d088)(var_14h, 0);\n    }\n    fcn.00036460(var_10h);\n    if (var_ch != 0) {\n        (**0x8500d2e4)();\n    }\n    return;\n}\n",
        "token_count": 2222
    },
    "00018ab0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00018ab0(void)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    uint var_9ch;\n    uint var_94h;\n    uint *var_90h;\n    uint var_8ch;\n    uint var_84h;\n    uint *var_80h;\n    uint *var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint *var_6ch;\n    uint *var_68h;\n    uint var_64h;\n    uint var_60h;\n    int32_t var_5ch;\n    uint *var_58h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    int32_t var_40h;\n    uint *var_3ch;\n    uint var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    uint var_24h;\n    \n    do {\n        iVar2 = fcn.00034df0(0x85090008, 3000);\n        if ((iVar2 == -1) || (*0x850925cc != 0)) {\n            return 0;\n        }\ncode_r0x00018ae0:\n        var_28h = 0;\n        iVar2 = fcn.00036f90(0);\n        fcn.000380d0(0x85090014, 1);\n        var_6ch = NULL;\n        for (var_7ch = *0x85090020; var_7ch != NULL; var_7ch = *var_7ch) {\n            if (var_7ch[1] == 0) {\n                var_7ch[1] = iVar2;\n                var_28h = 1;\n                break;\n            }\n            if (0x3b < iVar2 - var_7ch[1]) {\n                if (var_6ch == NULL) {\n                    *0x85090020 = *var_7ch;\n                }\n                else {\n                    *var_6ch = *var_7ch;\n                }\n                break;\n            }\n            var_6ch = var_7ch;\n        }\n        fcn.000381b0(0x85090014, 1);\n    } while (var_7ch == NULL);\n    if (var_28h == 0) {\n        fcn.00036460(var_7ch);\n    }\n    else {\n        var_64h = 3;\n        var_60h = 4;\n        var_80h = var_7ch + 8;\n        do {\n            iVar1 = *var_80h;\n            var_80h = var_80h + 2;\n        } while (iVar1 != 0);\n        var_5ch = (var_80h - (var_7ch + 0x22) >> 1) * 2 + 2;\n        var_58h = var_7ch + 8;\n        var_68h = &var_4ch;\n        var_48h = 0x66;\n        var_44h = 4;\n        var_3ch = &var_24h;\n        iVar2 = fcn.000384e0(var_7ch + 2, &var_24h, 0x11);\n        if (iVar2 != 0) {\n            var_24h._0_2_ = 0;\n        }\n        var_90h = &var_24h;\n        do {\n            iVar1 = *var_90h;\n            var_90h = var_90h + 2;\n        } while (iVar1 != 0);\n        var_40h = (var_90h - (&var_24h + 2) >> 1) * 2 + 2;\n        var_4ch = 0;\n        var_2ch = fcn.0001d950(0, 0x892, &var_68h, &var_70h, &var_74h, &var_30h);\n        if (var_2ch != 0) {\n            fcn.0002a200(0x99, 0, var_2ch, 0, 0);\n        }\n    }\n    goto code_r0x00018ae0;\n}\n",
        "token_count": 950
    },
    "00018d00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00018d00(int32_t *arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    if (arg_10h == 0) {\n        fcn.00036460(*arg_8h);\n        *arg_8h = 0;\n        uVar1 = 0;\n    }\n    else {\n        iVar2 = fcn.00036330(arg_10h);\n        if (iVar2 == 0) {\n            uVar1 = 0xffffffff;\n        }\n        else {\n            if (arg_10h < arg_ch) {\n                var_8h = arg_10h;\n            }\n            else {\n                var_8h = arg_ch;\n            }\n            fcn.0007f904(iVar2, *arg_8h, var_8h);\n            fcn.00036460(*arg_8h);\n            *arg_8h = iVar2;\n            uVar1 = 0;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 256
    },
    "00018d90": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00018d90(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_ch = 0;\n    if (arg_ch == NULL) {\n        var_4h = 0;\n        for (var_8h = 0; *(arg_8h + var_8h * 4) != 0; var_8h = var_8h + 1) {\n            for (var_10h = 0;\n                (*(*(arg_8h + var_8h * 4) + 0x1c) != 0 && (*(*(*(arg_8h + var_8h * 4) + 0x1c) + var_10h * 4) != 0));\n                var_10h = var_10h + 1) {\n                var_4h = var_4h + 1;\n            }\n            var_4h = var_4h + 1;\n        }\n    }\n    else {\n        var_4h = 1;\n        for (var_8h = 0; *(arg_8h + var_8h * 4) != 0; var_8h = var_8h + 1) {\n            for (var_10h = 0;\n                (*(*(arg_8h + var_8h * 4) + 0x1c) != 0 && (*(*(*(arg_8h + var_8h * 4) + 0x1c) + var_10h * 4) != 0));\n                var_10h = var_10h + 1) {\n                if (*arg_ch < *(*(*(*(arg_8h + var_8h * 4) + 0x1c) + var_10h * 4) + 4)) {\n                    var_4h = var_4h + 1;\n                    var_ch = var_ch + 1;\n                }\n            }\n            if (var_ch != 0) {\n                var_4h = var_4h + 1;\n            }\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 508
    },
    "00018f40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00018f40(int16_t **arg_8h, int32_t **arg_ch, uint noname_2, uint32_t arg_14h, int32_t *arg_18h)\n\n{\n    int16_t iVar1;\n    uint uVar2;\n    int16_t *piVar3;\n    uint var_60h;\n    int16_t *var_5ch;\n    int16_t *var_58h;\n    uint var_50h;\n    int16_t *var_4ch;\n    int16_t *var_48h;\n    uint var_44h;\n    uint var_3ch;\n    int16_t *var_38h;\n    uint var_34h;\n    uint var_2ch;\n    int16_t *var_28h;\n    uint var_24h;\n    int32_t *var_4h;\n    \n    if (arg_8h == NULL) {\n        uVar2 = 0xc0000001;\n    }\n    else if ((arg_14h == 0) || (arg_8h[6] + *arg_18h <= arg_14h)) {\n        var_28h = *arg_8h;\n        piVar3 = var_28h + 1;\n        do {\n            iVar1 = *var_28h;\n            var_28h = var_28h + 1;\n        } while (iVar1 != 0);\n        var_4h = fcn.00036330((var_28h - piVar3 >> 1) * 2 + 0x90);\n        if (var_4h == NULL) {\n            uVar2 = 0xc000009a;\n        }\n        else {\n            fcn.0007f916(var_4h, 0, 0x70);\n            var_4h[1] = var_4h + 0x8e;\n            var_38h = *arg_8h;\n            piVar3 = var_38h + 1;\n            do {\n                iVar1 = *var_38h;\n                var_38h = var_38h + 1;\n            } while (iVar1 != 0);\n            *var_4h = (var_38h - piVar3 >> 1) * 2 + 2;\n            var_48h = *arg_8h;\n            var_4ch = var_4h[1];\n            do {\n                iVar1 = *var_48h;\n                *var_4ch = iVar1;\n                var_48h = var_48h + 1;\n                var_4ch = var_4ch + 1;\n            } while (iVar1 != 0);\n            var_4h[5] = var_4h + 0x1c;\n            var_4h[4] = 0x1e;\n            var_58h = fcn.00018ed0(arg_8h[5], &var_24h);\n            var_5ch = var_4h[5];\n            do {\n                iVar1 = *var_58h;\n                *var_5ch = iVar1;\n                var_58h = var_58h + 1;\n                var_5ch = var_5ch + 1;\n            } while (iVar1 != 0);\n            var_4h[9] = var_4h + 10;\n            var_4h[8] = 4;\n            *var_4h[9] = arg_8h[6];\n            var_4h[0xd] = var_4h + 0xe;\n            var_4h[0xc] = 4;\n            *var_4h[0xd] = arg_8h[2];\n            var_4h[0x11] = var_4h + 0x12;\n            var_4h[0x10] = 4;\n            *var_4h[0x11] = arg_8h[3];\n            var_4h[0x15] = var_4h + 0x16;\n            var_4h[0x14] = 4;\n            *var_4h[0x15] = arg_8h[1];\n            var_4h[0x19] = var_4h + 0x1a;\n            var_4h[0x18] = 4;\n            *var_4h[0x19] = arg_8h[4];\n            *arg_ch = var_4h;\n            if (arg_18h != NULL) {\n                *arg_18h = *arg_18h + arg_8h[6];\n            }\n            uVar2 = 0;\n        }\n    }\n    else {\n        uVar2 = 0xc000009a;\n    }\n    return uVar2;\n}\n",
        "token_count": 1065
    },
    "000191c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000191c0(int32_t arg_8h, int32_t arg_ch, int32_t *arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    uint uVar2;\n    bool bVar3;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_1ch = 0;\n    var_14h = 0;\n    do {\n        if (*(arg_8h + var_1ch * 4) == 0) {\n            return 0;\n        }\n        arg_8h_00 = *(arg_8h + var_1ch * 4);\n        bVar3 = arg_10h == NULL;\n        if (!bVar3) {\n            var_4h = 0;\n            while( true ) {\n                if ((*(arg_8h_00 + 0x1c) == 0) || (*(*(arg_8h_00 + 0x1c) + var_4h * 4) == 0)) goto code_r0x00019257;\n                if (*arg_10h < *(*(*(arg_8h_00 + 0x1c) + var_4h * 4) + 4)) break;\n                var_4h = var_4h + 1;\n            }\n            bVar3 = true;\n        }\ncode_r0x00019257:\n        if (bVar3) {\n            fcn.00018f40(arg_8h_00, arg_ch + var_14h * 4, 1, arg_14h, arg_18h);\n            var_14h = var_14h + 1;\n            for (var_4h = 0; (*(arg_8h_00 + 0x1c) != 0 && (*(*(arg_8h_00 + 0x1c) + var_4h * 4) != 0));\n                var_4h = var_4h + 1) {\n                if ((arg_10h == NULL) || (*arg_10h < *(*(*(arg_8h_00 + 0x1c) + var_4h * 4) + 4))) {\n                    iVar1 = fcn.00018f40(*(*(arg_8h_00 + 0x1c) + var_4h * 4), arg_ch + var_14h * 4, 0, arg_14h, arg_18h)\n                    ;\n                    var_14h = var_14h + 1;\n                    if (iVar1 != 0) {\n                        uVar2 = fcn.0007f742(iVar1);\n                        return uVar2;\n                    }\n                }\n            }\n        }\n        var_1ch = var_1ch + 1;\n    } while( true );\n}\n",
        "token_count": 689
    },
    "00019340": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00019340(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t *arg_8h_00;\n    int32_t iVar1;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.00036330(0x1c);\n    if (arg_8h_00 == NULL) {\n        arg_8h_00 = NULL;\n    }\n    else {\n        *arg_8h_00 = 0;\n        arg_8h_00[1] = 0;\n        arg_8h_00[2] = 0;\n        arg_8h_00[3] = 0;\n        arg_8h_00[4] = 0;\n        arg_8h_00[5] = 0;\n        arg_8h_00[6] = 0;\n        iVar1 = fcn.00036330(arg_ch * 2 + 2);\n        *arg_8h_00 = iVar1;\n        if (*arg_8h_00 == 0) {\n            fcn.00036460(arg_8h_00);\n            arg_8h_00 = NULL;\n        }\n        else {\n            fcn.0007f904(*arg_8h_00, arg_8h, arg_ch << 1);\n            *(*arg_8h_00 + arg_ch * 2) = 0;\n        }\n    }\n    return arg_8h_00;\n}\n",
        "token_count": 331
    },
    "000193d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.000193d0(int16_t *arg_8h)\n\n{\n    int16_t iVar1;\n    int32_t *arg_8h_00;\n    int32_t iVar2;\n    uint var_24h;\n    uint var_1ch;\n    int16_t *var_18h;\n    uint var_14h;\n    uint var_ch;\n    int16_t *var_8h;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.00036330(0x20);\n    if (arg_8h_00 == NULL) {\n        arg_8h_00 = NULL;\n    }\n    else {\n        *arg_8h_00 = 0;\n        arg_8h_00[1] = 0;\n        arg_8h_00[2] = 0;\n        arg_8h_00[3] = 0;\n        arg_8h_00[4] = 0;\n        arg_8h_00[5] = 0;\n        arg_8h_00[6] = 0;\n        arg_8h_00[7] = 0;\n        if (*arg_8h == 0) {\n            iVar2 = fcn.00036330(0x208);\n            *arg_8h_00 = iVar2;\n            if (*arg_8h_00 == 0) {\n                fcn.00036460(arg_8h_00);\n                return NULL;\n            }\n            fcn.0002c220(*arg_8h_00, 0x104);\n        }\n        else {\n            var_8h = arg_8h;\n            do {\n                iVar1 = *var_8h;\n                var_8h = var_8h + 1;\n            } while (iVar1 != 0);\n            if (arg_8h[(var_8h - (arg_8h + 1) >> 1) + -1] == 0x5c) {\n                iVar2 = fcn.00036520(arg_8h);\n                *arg_8h_00 = iVar2;\n                if (*arg_8h_00 == 0) {\n                    fcn.00036460(arg_8h_00);\n                    return NULL;\n                }\n            }\n            else {\n                var_18h = arg_8h;\n                do {\n                    iVar1 = *var_18h;\n                    var_18h = var_18h + 1;\n                } while (iVar1 != 0);\n                iVar2 = fcn.00036330((var_18h - (arg_8h + 1) >> 1) * 2 + 4);\n                *arg_8h_00 = iVar2;\n                if (*arg_8h_00 == 0) {\n                    fcn.00036460(arg_8h_00);\n                    return NULL;\n                }\n                fcn.0007f736(*arg_8h_00, 0x8500d6e0, arg_8h);\n            }\n        }\n        arg_8h_00[5] = 0x10;\n    }\n    return arg_8h_00;\n}\n",
        "token_count": 705
    },
    "00019550": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00019550(uint arg_8h, int32_t *arg_ch, uint *arg_10h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_290h;\n    uint *var_288h;\n    uint var_284h;\n    uint var_280h;\n    uint *var_27ch;\n    uint var_278h;\n    uint var_274h;\n    uint var_270h;\n    int32_t var_26ch;\n    uint32_t var_268h;\n    int32_t var_264h;\n    uint32_t var_260h;\n    int32_t var_25ch;\n    uint32_t var_258h;\n    int32_t var_254h;\n    uint32_t var_250h;\n    int32_t var_24ch;\n    uint var_248h;\n    uint *var_240h;\n    int32_t var_23ch;\n    uint var_238h;\n    int32_t var_234h;\n    uint var_230h;\n    uint var_24h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    var_1ch = 0;\n    var_238h = 0x268;\n    var_288h = NULL;\n    if (arg_10h == NULL) {\n        var_26ch = 0x21590066;\n    }\n    else {\n        arg_10h[7] = 0;\n        var_23ch = fcn.00036330(0x268);\n        if (var_23ch == 0) {\n            var_26ch = 0x21590004;\n        }\n        else {\n            var_1ch = var_23ch;\n            fcn.0007f916(var_23ch, 0, var_238h);\n            var_288h = fcn.00036330(4);\n            if (var_288h == NULL) {\n                var_26ch = 0x21590004;\n            }\n            else {\n                *var_288h = 0;\n                fcn.0007f6d0(&var_10h, arg_8h);\n                fcn.000375e0(&var_230h, 0x104, *arg_10h);\n                fcn.0007f6d0(&var_290h, &var_230h);\n                var_284h = 0x18;\n                var_280h = 0;\n                var_278h = 0x40;\n                var_27ch = &var_290h;\n                var_274h = 0;\n                var_270h = 0;\n                var_234h = fcn.0001ed40(&var_8h, 0x100001, &var_284h, &var_24h, 0, 0x80, 7, 1, 0x10, 0, 0);\n                if (var_234h == 0) {\n                    var_234h = fcn.0007f74e(var_8h, &var_24h, &var_268h, 0x28, 4);\n                    if (var_234h == 0) {\n                        uVar1 = fcn.0007f90a(var_258h + 0x2ac18000, (var_254h + -0x19db1de) - (var_258h < 0xd53e8000), \n                                             10000000, 0);\n                        arg_10h[1] = uVar1;\n                        uVar1 = fcn.0007f90a(var_268h + 0x2ac18000, (var_264h + -0x19db1de) - (var_268h < 0xd53e8000), \n                                             10000000, 0);\n                        arg_10h[2] = uVar1;\n                        uVar1 = fcn.0007f90a(var_250h + 0x2ac18000, (var_24ch + -0x19db1de) - (var_250h < 0xd53e8000), \n                                             10000000, 0);\n                        arg_10h[4] = uVar1;\n                        uVar1 = fcn.0007f90a(var_260h + 0x2ac18000, (var_25ch + -0x19db1de) - (var_260h < 0xd53e8000), \n                                             10000000, 0);\n                        arg_10h[3] = uVar1;\n                        arg_10h[5] = var_248h;\n                    }\n                    arg_10h[6] = 0;\n                    var_18h = 0;\n                    var_4h = 0;\n                    while (var_234h = fcn.0007f73c(var_8h, 0, 0, 0, &var_24h, var_1ch, var_238h, 3, 1, &var_10h, \n                                                   var_18h == 0),  var_234h == 0) {\n                        if ((((*(var_23ch + 0x3c) >> 1 != 1) ||\n                             (iVar2 = fcn.0007f748(var_23ch + 0x5e, 0x8500d6e8, 1),  iVar2 != 0)) &&\n                            ((*(var_23ch + 0x3c) >> 1 != 2 ||\n                             (iVar2 = fcn.0007f748(var_23ch + 0x5e, 0x8500d6ec, 2),  iVar2 != 0)))) &&\n                           (((arg_10h[6] = arg_10h[6] + *(var_23ch + 0x28),  arg_ch == NULL ||\n                             ((*(var_23ch + 0x38) & 0x10) != 0)) ||\n                            (var_14h = fcn.0007f90a(*(var_23ch + 0x18) + 0x2ac18000, \n                                                    (*(var_23ch + 0x1c) + -0x19db1de) -\n                                                    (*(var_23ch + 0x18) < 0xd53e8000), 10000000, 0),  *arg_ch <= var_14h\n                            )))) {\n                            var_240h = var_288h;\n                            iVar2 = fcn.00018d00(&var_288h, var_4h * 4 + 4, var_4h * 4 + 8);\n                            if (iVar2 == -1) {\n                                var_288h = var_240h;\n                                var_26ch = 0x21590004;\n                                goto code_r0x00019aed;\n                            }\n                            var_288h[var_4h + 1] = 0;\n                            uVar1 = fcn.00019340(var_23ch + 0x5e, *(var_23ch + 0x3c) >> 1);\n                            var_288h[var_4h] = uVar1;\n                            if (var_288h[var_4h] == 0) {\n                                var_26ch = 0x21590004;\n                                goto code_r0x00019aed;\n                            }\n                            uVar1 = fcn.0007f90a(*(var_23ch + 0x18) + 0x2ac18000, \n                                                 (*(var_23ch + 0x1c) + -0x19db1de) - (*(var_23ch + 0x18) < 0xd53e8000), \n                                                 10000000, 0);\n                            *(var_288h[var_4h] + 4) = uVar1;\n                            uVar1 = fcn.0007f90a(*(var_23ch + 8) + 0x2ac18000, \n                                                 (*(var_23ch + 0xc) + -0x19db1de) - (*(var_23ch + 8) < 0xd53e8000), \n                                                 10000000, 0);\n                            *(var_288h[var_4h] + 8) = uVar1;\n                            uVar1 = fcn.0007f90a(*(var_23ch + 0x20) + 0x2ac18000, \n                                                 (*(var_23ch + 0x24) + -0x19db1de) - (*(var_23ch + 0x20) < 0xd53e8000), \n                                                 10000000, 0);\n                            *(var_288h[var_4h] + 0x10) = uVar1;\n                            uVar1 = fcn.0007f90a(*(var_23ch + 0x10) + 0x2ac18000, \n                                                 (*(var_23ch + 0x14) + -0x19db1de) - (*(var_23ch + 0x10) < 0xd53e8000), \n                                                 10000000, 0);\n                            *(var_288h[var_4h] + 0xc) = uVar1;\n                            *(var_288h[var_4h] + 0x14) = *(var_23ch + 0x38);\n                            if ((*(var_23ch + 0x38) & 0x10) == 0) {\n                                *(var_288h[var_4h] + 0x18) = *(var_23ch + 0x28);\n                            }\n                            else {\n                                *(var_288h[var_4h] + 0x18) = 0;\n                            }\n                            var_4h = var_4h + 1;\n                        }\n                        var_18h = var_18h + 1;\n                    }\n                    if (var_234h == -0x7ffffffa) {\n                        var_26ch = 0;\n                    }\n                    else {\n                        var_26ch = fcn.0007f742(var_234h);\n                    }\n                    if (var_26ch == 0) {\n                        arg_10h[7] = var_288h;\n                    }\n                }\n                else {\n                    var_26ch = fcn.0007f742(var_234h);\n                }\n            }\ncode_r0x00019aed:\n            if ((var_288h != NULL) && (var_26ch != 0)) {\n                for (var_18h = 0; var_288h[var_18h] != 0; var_18h = var_18h + 1) {\n                    fcn.00019ec0(var_288h[var_18h]);\n                }\n                fcn.00036460(var_288h);\n            }\n            fcn.00036460(var_1ch);\n            if (var_8h != 0) {\n                fcn.0007f6c4(var_8h);\n            }\n        }\n    }\n    return var_26ch;\n}\n",
        "token_count": 2517
    },
    "00019b70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00019b70(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar1 = *(arg_8h + 0x1c);\n    var_4h = 0;\n    for (var_8h = 0; (iVar1 != 0 && (*(iVar1 + var_8h * 4) != 0)); var_8h = var_8h + 1) {\n        if ((*(*(iVar1 + var_8h * 4) + 0x14) & arg_ch) != 0) {\n            var_4h = var_4h + 1;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 188
    },
    "00019bd0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_228h\n\nint32_t __cdecl fcn.00019bd0(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, int32_t **arg_18h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t var_228h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    var_4h = NULL;\n    if (arg_8h == 0) {\n        var_10h = 0x21590065;\n    }\n    else if (arg_18h == NULL) {\n        var_10h = 0x21590069;\n    }\n    else {\n        *arg_18h = NULL;\n        var_4h = fcn.00036330(8);\n        if (var_4h == NULL) {\n            var_10h = 0x21590004;\n        }\n        else {\n            var_4h[1] = 0;\n            iVar2 = fcn.000193d0(arg_8h);\n            *var_4h = iVar2;\n            if (*var_4h == 0) {\n                var_10h = 0x21590004;\n            }\n            else {\n                var_14h = 1;\n                for (var_8h = 0; var_4h[var_8h] != 0; var_8h = var_8h + 1) {\n                    var_10h = fcn.00019550(arg_ch, arg_14h, var_4h[var_8h]);\n                    if (var_10h != 0) goto code_r0x00019e68;\n                    if (arg_10h != '\\0') {\n                        var_228h = var_4h[var_8h];\n                        iVar2 = fcn.00019b70(var_228h, 0x10);\n                        piVar1 = var_4h;\n                        if (0 < iVar2) {\n                            iVar3 = fcn.00018d00(&var_4h, var_14h * 4 + 4, (var_14h + 1 + iVar2) * 4);\n                            if (iVar3 == -1) {\n                                var_10h = 0x21590004;\n                                var_4h = piVar1;\n                                goto code_r0x00019e68;\n                            }\n                            for (var_ch = var_14h; var_ch < var_14h + 1 + iVar2; var_ch = var_ch + 1) {\n                                var_4h[var_ch] = 0;\n                            }\n                            var_18h = 0;\n                            for (var_ch = var_14h; var_ch < var_14h + iVar2; var_ch = var_ch + 1) {\n                                while ((*(*(var_4h[var_8h] + 0x1c) + var_18h * 4) != 0 &&\n                                       ((*(*(*(var_4h[var_8h] + 0x1c) + var_18h * 4) + 0x14) & 0x10) == 0))) {\n                                    var_18h = var_18h + 1;\n                                }\n                                if (*(*(var_4h[var_8h] + 0x1c) + var_18h * 4) == 0) {\n                                    fcn.0007f6d6(&var_228h, 0x104, 0x8500d700, *var_4h[var_8h]);\n                                }\n                                else {\n                                    fcn.0007f6d6(&var_228h, 0x104, 0x8500d6f4, *var_4h[var_8h], \n                                                 **(*(var_4h[var_8h] + 0x1c) + var_18h * 4));\n                                }\n                                iVar3 = fcn.000193d0(&var_228h);\n                                var_4h[var_ch] = iVar3;\n                                if (var_4h[var_ch] == 0) {\n                                    var_10h = 0x21590004;\n                                    goto code_r0x00019e68;\n                                }\n                                var_18h = var_18h + 1;\n                            }\n                            var_14h = var_14h + iVar2;\n                        }\n                    }\n                }\n                var_10h = 0;\n                *arg_18h = var_4h;\n            }\ncode_r0x00019e68:\n            if (var_10h != 0) {\n                for (var_ch = 0; var_4h[var_ch] != 0; var_ch = var_ch + 1) {\n                    fcn.00019ef0(var_4h[var_ch]);\n                }\n                fcn.00036460(var_4h);\n            }\n        }\n    }\n    return var_10h;\n}\n",
        "token_count": 1161
    },
    "00019ec0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00019ec0(uint *arg_8h)\n\n{\n    if (arg_8h != NULL) {\n        fcn.00036460(*arg_8h);\n        fcn.00036460(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 61
    },
    "00019ef0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00019ef0(uint *arg_8h)\n\n{\n    int32_t var_4h;\n    \n    if (arg_8h != NULL) {\n        for (var_4h = 0; (arg_8h[7] != 0 && (*(arg_8h[7] + var_4h * 4) != 0)); var_4h = var_4h + 1) {\n            var_4h = *(arg_8h[7] + var_4h * 4);\n            fcn.00019ec0(var_4h);\n        }\n        fcn.00036460(*arg_8h);\n        fcn.00036460(arg_8h[7]);\n        fcn.00036460(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 197
    },
    "00019fe0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.00019fe0(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    int32_t var_8h;\n    uint var_18h;\n    int32_t var_58h;\n    int32_t var_54h;\n    int32_t var_50h;\n    int32_t var_4ch;\n    int32_t *var_45h;\n    uint var_40h;\n    int32_t var_3ch;\n    int32_t var_38h;\n    int32_t var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    int32_t *var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uchar *puStack28;\n    uint var_10h;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x8507bae8;\n    uStack16 = 0x8507b910;\n    var_10h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_10h;\n    puStack28 = &stack0xffffff94;\n    var_50h = 0;\n    iVar1 = fcn.0007f72a();\n    if (var_8h == iVar1) {\n        var_4ch = fcn.0005e530(0xffffffff, &var_45h);\n        if (((var_4ch == 0) && (var_4ch = fcn.0005e170(0xffffffff, &var_58h),  var_4ch == 0)) &&\n           ((*0x850925d0 != NULL ||\n            ((var_4ch = fcn.00035b80(0x8500d714, &var_28h),  var_4ch == 0 &&\n             (var_4ch = fcn.00060f50(var_28h, 0x8500d720, 0x850925d0),  var_4ch == 0)))))) {\n            var_4h = 0;\n            if (var_45h == '\\0') {\n                var_24h = *(var_58h + 0x1c);\n                (**0x8500d2e0)(var_24h, 0x18, 1);\n                var_54h = *var_24h;\n                (**0x8500d2e0)(var_54h, 0x20, 1);\n                do {\n                    if (((var_24h != NULL) && (var_24h[3] != 0)) && (iVar1 = fcn.0007f760(),  var_24h[3] == iVar1)) {\n                        while (0 < var_24h[2]) {\n                            (**0x850925d0)(var_24h);\n                            var_50h = var_50h + 1;\n                        }\n                    }\n                    var_54h = *(var_54h + 8) + -8;\n                    (**0x8500d2e0)(var_54h, 0x20, 1);\n                    var_24h = *(var_54h + 4);\n                    (**0x8500d2e0)(var_24h, 0x18, 1);\n                } while (var_24h != *(var_58h + 0x1c));\n            }\n            else {\n                var_1ch = var_58h;\n                unique0x00007a00 = *(var_58h + 0x1c);\n                (**0x8500d2e0)(unique0x00007a00, 0x18, 1);\n                var_20h = *stack0xffffffb8;\n                (**0x8500d2e0)(var_20h, 0x20, 1);\n                do {\n                    if (((stack0xffffffb8 != NULL) && (stack0xffffffb8[3] != 0)) &&\n                       (iVar1 = fcn.0007f760(),  stack0xffffffb8[3] == iVar1)) {\n                        while (0 < stack0xffffffb8[2]) {\n                            var_3ch = stack0xffffffb8[1];\n                            var_38h = stack0xffffffb8[2];\n                            var_34h = stack0xffffffb8[3];\n                            var_30h = stack0xffffffb8[4];\n                            var_2ch = stack0xffffffb8[5];\n                            var_40h = 0;\n                            (**0x850925d0)(&var_40h);\n                            stack0xffffffb8[1] = var_3ch;\n                            stack0xffffffb8[2] = var_38h;\n                            stack0xffffffb8[3] = var_34h;\n                            stack0xffffffb8[4] = var_30h;\n                            stack0xffffffb8[5] = var_2ch;\n                            var_50h = var_50h + 1;\n                        }\n                    }\n                    var_20h = *(var_20h + 8) + -8;\n                    (**0x8500d2e0)(var_20h, 0x20, 1);\n                    unique0x00007a00 = *(var_20h + 4);\n                    (**0x8500d2e0)(unique0x00007a00, 0x18, 1);\n                } while (stack0xffffffb8 != *(var_1ch + 0x1c));\n            }\n            var_4ch = 0;\n        }\n    }\n    else {\n        var_4ch = 0;\n    }\n    *in_FS_OFFSET = var_10h;\n    return var_4ch;\n}\n",
        "token_count": 1308
    },
    "0001a390": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.0001a390(uint arg_8h, uint arg_ch, uint32_t arg_10h, int32_t arg_14h, int32_t arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    ulong uVar3;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = 0;\n    if (arg_18h == 0) {\n        arg_1ch = 0;\n    }\n    if (arg_14h == 0) {\n        arg_14h = -0x7afe9c90;\n    }\n    var_8h = arg_8h;\n    var_4h = arg_ch;\n    var_14h = (**0x8500d100)(&var_8h, 0, &var_ch);\n    if (var_14h == 0) {\n        uVar3 = fcn.00036360(0x30);\n        iVar2 = uVar3;\n        if (iVar2 == 0) {\n            var_14h = -0x3fffffe9;\n        }\n        else {\n            (**0x8500d0c4)(iVar2, var_ch, 0, arg_14h, 0, arg_18h, uVar3 >> 0x20 & 0xffffff00 | arg_10h & 0xff, arg_1ch);\n            cVar1 = (**0x8500d0d0)(iVar2, arg_20h, 0, 0);\n            var_14h = (-(cVar1 != '\\0') & 0x3fffffff) + 0xc0000001;\n        }\n        if (var_ch != 0) {\n            (**0x8500d2e4)();\n        }\n        if ((var_14h != 0) && (iVar2 != 0)) {\n            (**0x8500d088)(iVar2, 0);\n        }\n    }\n    return var_14h;\n}\n",
        "token_count": 480
    },
    "0001a570": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0001a570(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.0007f778();\n    var_8h = 0;\n    do {\n        if (0xfff < var_8h) {\ncode_r0x0001a5de:\n            (**0x8500d0f0)((-(var_8h < 0x1000) & 0x3fffff45) + 0xc00000bb);\n            return;\n        }\n        if (*(iVar1 + var_8h) == -0x7afe9a90) {\n            iVar2 = fcn.00045cc0(0x850925d4, var_8h, 0);\n            iVar3 = fcn.00035da0();\n            if (iVar3 != 0x27) goto code_r0x0001a5de;\n            if (iVar2 != 0) {\n                fcn.00052470(0x850925d8, var_8h);\n                goto code_r0x0001a5de;\n            }\n        }\n        var_8h = var_8h + 4;\n    } while( true );\n}\n",
        "token_count": 296
    },
    "0001a600": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0001a600(code **arg_8h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar3 = fcn.0007f778();\n    var_10h = 0;\n    var_ch = 0;\n    pcVar1 = *arg_8h;\n    pcVar2 = arg_8h[1];\n    var_8h = 0;\n    var_14h = 0;\n    iVar4 = fcn.0007f77e();\n    iVar4 = iVar4 + *(*0x8508fab0 + 0xc);\n    iVar5 = fcn.00045cc0(0x850925d4, 0, 0);\n    if (iVar5 != 0) {\n        var_10h = *0x850925d4;\n        var_8h = *(iVar3 + *0x850925d4);\n        *(iVar3 + *0x850925d4) = iVar4;\n    }\n    iVar5 = fcn.00045cc0(0x850925d8, 0, 0);\n    if (iVar5 != 0) {\n        var_ch = *0x850925d8;\n        var_14h = *(iVar3 + *0x850925d8);\n        *(iVar3 + *0x850925d8) = iVar4;\n    }\n    fcn.00036460(arg_8h);\n    uVar6 = (*pcVar1)(pcVar2);\n    if (var_8h != 0) {\n        *(iVar3 + var_10h) = var_8h;\n    }\n    if (var_14h != 0) {\n        *(iVar3 + var_ch) = var_14h;\n    }\n    (**0x8500d0f0)(uVar6);\n    return;\n}\n",
        "token_count": 504
    },
    "0001a700": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0001a700(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_10h;\n    uint *var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    uVar2 = 0x850925d4;\n    iVar1 = fcn.00045cc0(0x850925d4, 0, 0);\n    if (iVar1 == 0) {\n        iVar1 = (**0x8500d0e4)(&var_10h, 0x1f03ff, 0, 0, 0, 0x85016570, 0);\n        if (iVar1 == 0) {\n            fcn.0007f772(var_10h, 0, 0);\n            fcn.0007f6c4();\n            uVar2 = var_10h;\n        }\n    }\n    var_ch = fcn.00036330(8);\n    if (var_ch == NULL) {\n        var_8h = -0x3fffff66;\n    }\n    else {\n        var_4h = arg_8h;\n        *var_ch = arg_ch;\n        var_ch[1] = arg_10h;\n        var_8h = (**0x8500d0e4)(arg_8h, 0x1f03ff, 0, 0, 0, 0x85016600, var_ch, uVar2);\n    }\n    if (var_8h == 0) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = fcn.0007f742(var_8h);\n        fcn.00036610(uVar2);\n        uVar2 = 0xffffffff;\n    }\n    return uVar2;\n}\n",
        "token_count": 417
    },
    "0001a830": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0001a830(uint arg_8h, int32_t *arg_ch, uint8_t *arg_10h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint32_t extraout_ECX;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_8h = 0;\n    uVar1 = (**0x8500d004)();\n    *arg_10h = uVar1;\n    if (*arg_10h < arg_8h) {\n        uVar1 = (**0x8500d014)();\n        *arg_10h = uVar1;\n    }\n    iVar2 = fcn.0005bd60();\n    if (iVar2 == 1) {\n        var_10h = 0;\n    }\n    else {\n        fcn.0001a2e0(0x850925dc, 0);\n        fcn.0001a2e0(0x850925e0, 0);\n        iVar2 = fcn.0005bd60();\n        var_8h = fcn.00036360(iVar2 << 5);\n        if (var_8h == 0) {\n            var_10h = 0xc0000017;\n        }\n        else {\n            uVar3 = fcn.0001a2d0();\n            for (var_4h = 0; uVar4 = fcn.0005bd60(),  var_4h < uVar4; var_4h = var_4h + 1) {\n                if (var_4h != uVar3) {\n                    (**0x8500d0d8)(var_4h * 0x20 + var_8h, 0x85016800, 0);\n                    (**0x8500d0b4)(var_4h * 0x20 + var_8h, 2);\n                    (**0x8500d0b8)(var_4h * 0x20 + var_8h, extraout_ECX & 0xffffff00 | var_4h & 0xff);\n                    (**0x8500d0f8)(var_4h * 0x20 + var_8h, 0, 0);\n                }\n            }\n            iVar2 = fcn.0005bd60();\n            iVar2 = iVar2 + -1;\n            do {\n                iVar5 = fcn.00045cc0(0x850925e0, iVar2, iVar2);\n            } while (iVar5 != iVar2);\n            var_10h = 0;\n        }\n    }\n    *arg_ch = var_8h;\n    return var_10h;\n}\n",
        "token_count": 642
    },
    "0001a980": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0001a980(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    \n    fcn.0001b570(0x850925dc);\n    do {\n        iVar1 = fcn.00045cc0(0x850925e0, 0, 0);\n    } while (iVar1 != 0);\n    if (arg_8h != 0) {\n        fcn.00036460(arg_8h);\n    }\n    (**0x8500d008)();\n    return 0;\n}\n",
        "token_count": 126
    },
    "0001a9d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0001a9d0(uint param_1, uint param_2, uint param_3, int32_t *param_4)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint var_8h;\n    uint var_ch;\n    uint var_10h;\n    int32_t *var_14h;\n    uint var_18h;\n    uint var_1ch;\n    uint var_10h_2;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x8507b9a8;\n    uStack16 = 0x8507b910;\n    var_10h_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_10h_2;\n    if (var_14h == NULL) {\n        uVar1 = 0xc000000d;\n    }\n    else {\n        iVar2 = (**0x8500d290)(var_8h, var_ch, 0, 0, 0);\n        if (iVar2 == 0) {\n            uVar1 = 0xc0000001;\n        }\n        else {\n            var_4h = 0;\n            (**0x8500d29c)(iVar2, 0, var_10h);\n            *var_14h = iVar2;\n            uVar1 = 0;\n        }\n    }\n    *in_FS_OFFSET = var_10h_2;\n    return uVar1;\n}\n",
        "token_count": 348
    },
    "0001aab0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0001aab0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    uint var_4h;\n    \n    if ((arg_8h == 0) || (arg_ch == 0)) {\n        uVar1 = 0xc0000005;\n    }\n    else {\n        (**0x8500d298)(arg_ch);\n        (**0x8500d2a8)(arg_ch);\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 120
    },
    "0001aaf0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0001aaf0(int32_t *arg_8h, uint arg_ch, uint32_t arg_10h, uint arg_14h, uint *arg_18h)\n\n{\n    int32_t iVar1;\n    ulong uVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_8h == NULL) {\n        iVar1 = -0x3fffff11;\n    }\n    else {\n        uVar2 = fcn.0001a9d0(*arg_8h, arg_ch, arg_14h, arg_18h);\n        iVar1 = uVar2;\n        if (iVar1 == 0) {\n            iVar1 = (**0x8500d0e8)(*arg_18h, uVar2 >> 0x20 & 0xffffff00 | arg_10h & 0xff, 1, 0, 0, 0x10);\n            if (iVar1 == 0) {\n                fcn.0001aab0(*arg_8h, *arg_18h);\n                iVar1 = -0x3fffffff;\n            }\n            else {\n                *arg_8h = iVar1;\n                iVar1 = 0;\n            }\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 286
    },
    "0001ab80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0001ab80(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    \n    if ((arg_8h == 0) || (arg_ch == 0)) {\n        uVar1 = 0xc0000005;\n    }\n    else {\n        (**0x8500d0b0)(arg_8h, arg_ch);\n        uVar1 = fcn.0001aab0(arg_8h, arg_ch);\n    }\n    return uVar1;\n}\n",
        "token_count": 118
    },
    "0001abc0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0001abc0(int16_t *arg_8h, int16_t *arg_ch, int32_t arg_10h, uint32_t arg_14h, uint32_t *arg_18h)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    bool bVar3;\n    uint var_288h;\n    uint var_280h;\n    uint *var_27ch;\n    uint var_278h;\n    uint var_270h;\n    uint *var_26ch;\n    uint var_268h;\n    uint var_260h;\n    int16_t *var_25ch;\n    uint32_t var_258h;\n    uint var_254h;\n    uint var_250h;\n    uint *var_24ch;\n    uint var_248h;\n    uint var_244h;\n    uint var_240h;\n    int32_t var_23ch;\n    uint32_t var_238h;\n    uint32_t var_234h;\n    uint var_22ch;\n    int32_t var_224h;\n    uint var_220h;\n    uint32_t var_21ch;\n    uint var_218h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int16_t *var_4h;\n    \n    var_23ch = 0;\n    var_ch = 0;\n    var_8h = 0;\n    var_238h = 0;\n    var_234h = 0;\n    if (((arg_8h == NULL) || (*arg_8h == 0)) || (arg_ch == NULL)) {\n        return -0x3ffffff3;\n    }\n    fcn.000375e0(&var_218h, 0x104, arg_8h);\n    fcn.0007f6d0(&var_22ch, &var_218h);\n    var_254h = 0x18;\n    var_250h = 0;\n    var_248h = 0x40;\n    var_24ch = &var_22ch;\n    var_244h = 0;\n    var_240h = 0;\n    var_224h = fcn.0001ed40(&var_ch, 0x80100000, &var_254h, &var_220h, 0, 0x80, 1, 1, 0x10, 0, 0);\n    if (var_224h != 0) {\n        return var_224h;\n    }\n    if (*arg_ch != 0) {\n        var_25ch = arg_ch;\n        do {\n            iVar1 = *var_25ch;\n            var_25ch = var_25ch + 1;\n        } while (iVar1 != 0);\n        if (arg_ch[(var_25ch - (arg_ch + 1) >> 1) + -1] != 0x5c) {\n            fcn.000375e0(&var_218h, 0x104, arg_ch);\n            goto code_r0x0001ae85;\n        }\n    }\n    iVar2 = fcn.0007f724(arg_8h, 0x5c);\n    if (iVar2 == 0) {\n        var_4h = arg_8h;\n    }\n    else {\n        var_4h = iVar2 + 2;\n    }\n    if (*arg_ch == 0) {\n        fcn.000375e0(&var_218h, 0x104, var_4h);\n    }\n    else {\n        fcn.000375e0(&var_218h, 0x104, arg_ch);\n        var_26ch = &var_218h;\n        do {\n            iVar1 = *var_26ch;\n            var_26ch = var_26ch + 2;\n        } while (iVar1 != 0);\n        fcn.0007f76c(&var_218h, 0x8500d738, 0x104 - (var_26ch - (&var_218h + 2) >> 1));\n        var_27ch = &var_218h;\n        do {\n            iVar1 = *var_27ch;\n            var_27ch = var_27ch + 2;\n        } while (iVar1 != 0);\n        fcn.0007f76c(&var_218h, var_4h, 0x104 - (var_27ch - (&var_218h + 2) >> 1));\n    }\ncode_r0x0001ae85:\n    fcn.0007f6d0(&var_22ch, &var_218h);\n    var_254h = 0x18;\n    var_250h = 0;\n    var_248h = 0x40;\n    var_24ch = &var_22ch;\n    var_244h = 0;\n    var_240h = 0;\n    var_224h = fcn.0001ed40(&var_8h, 0x40100000, &var_254h, &var_220h, 0, 0x80, 0, arg_18h != NULL, 0x10, 0, 0);\n    if (var_224h == 0) {\n        var_23ch = fcn.00036330(0x10000);\n        if (var_23ch == 0) {\n            var_224h = -0x3fffff66;\n        }\n        else {\n            if (arg_18h == NULL) {\n                var_238h = 0;\n                var_234h = 0;\n            }\n            else {\n                var_238h = *arg_18h;\n                var_234h = arg_18h[1];\n            }\n            var_21ch = 0;\n            while ((arg_10h == 0 || (iVar2 = (**0x8500d0bc)(arg_10h),  iVar2 == 0))) {\n                bVar3 = CARRY4(var_21ch, var_238h);\n                var_238h = var_21ch + var_238h;\n                var_234h = var_234h + bVar3;\n                var_224h = fcn.0007f766(var_ch, 0, 0, 0, &var_220h, var_23ch, 0x10000, &var_238h, 0);\n                if (var_224h != 0) {\n                    if (var_224h == -0x3fffffef) {\n                        var_224h = 0;\n                    }\n                    goto code_r0x0001b0e0;\n                }\n                if ((arg_10h != 0) && (iVar2 = (**0x8500d0bc)(arg_10h),  iVar2 != 0)) {\n                    var_224h = -0x3ffffee0;\n                    goto code_r0x0001b0e0;\n                }\n                var_224h = fcn.0007f6f4(var_8h, 0, 0, 0, &var_220h, var_23ch, var_21ch, &var_238h, 0);\n                if (var_224h != 0) goto code_r0x0001b0e0;\n                if (arg_14h != 0) {\n                    for (var_258h = arg_14h / 200; var_258h != 0; var_258h = var_258h - 1) {\n                        if ((arg_10h != 0) && (iVar2 = (**0x8500d0bc)(arg_10h),  iVar2 != 0)) {\n                            var_224h = -0x3ffffee0;\n                            goto code_r0x0001b0e0;\n                        }\n                        fcn.0005bdd0(200);\n                    }\n                }\n            }\n            var_224h = -0x3ffffee0;\n        }\n    }\ncode_r0x0001b0e0:\n    if (var_23ch != 0) {\n        fcn.00036460(var_23ch);\n    }\n    if (var_8h != 0) {\n        fcn.0007f6c4(var_8h);\n    }\n    if (var_ch != 0) {\n        fcn.0007f6c4(var_ch);\n    }\n    if ((var_224h == -0x3ffffee0) && (arg_18h != NULL)) {\n        *arg_18h = var_238h;\n        arg_18h[1] = var_234h;\n    }\n    return var_224h;\n}\n",
        "token_count": 1930
    },
    "0001b150": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.0001b150(void)\n\n{\n    uchar *arg_8h;\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint *arg_8h_00;\n    uint uVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t arg_8h_01;\n    uint32_t uVar6;\n    uint *puVar7;\n    uint *puVar8;\n    int32_t arg_8h_02;\n    uint var_288h;\n    uint var_284h;\n    int32_t var_280h;\n    uint var_27ch;\n    uchar *var_278h;\n    uint var_274h;\n    uchar *var_270h;\n    uint var_269h;\n    int32_t var_258h;\n    int32_t var_1cch;\n    int32_t var_1a0h;\n    int32_t var_9h;\n    uint var_4h;\n    \n    var_269h._0_1_ = 0;\n    var_9h._0_1_ = '\\0';\n    if (*0x850925e4 == NULL) {\n        uVar1 = (**0x8500d004)();\n        if (uVar1 < 2) {\n            fcn.000655a0(&var_269h + 1);\n            fcn.00065640(&var_269h + 1, 0x20);\n            fcn.000656a0(&var_269h + 1, 0);\n            *NULL = fcn.00060f50(*(*0x8508fab0 + 0xc), 0x8500d73c, &var_278h);\n            arg_8h = var_278h;\n            if (*NULL == 0) {\n                uVar6 = var_278h & 0xfff;\n                var_280h = -uVar6 + 0x1000;\n                *NULL = fcn.0001a9d0(var_278h, var_280h, 0, &var_4h);\n                if (*NULL == 0) {\n                    var_269h._0_1_ = '\\x01';\n                    arg_8h_01 = (arg_8h & 0xfffff000) + 0x1000;\n                    iVar2 = fcn.0001a9d0(arg_8h_01, 0x1000, 0, &var_274h);\n                    if (iVar2 == 0) {\n                        var_9h._0_1_ = '\\x01';\n                        var_280h = -uVar6 + 0x2000;\n                    }\n                    arg_8h_00 = fcn.00036360(0x60);\n                    if (arg_8h_00 != NULL) {\n                        var_270h = var_278h;\n                        fcn.000651e0(&var_269h + 1, var_278h, var_280h);\ncode_r0x0001b2d6:\n                        iVar2 = fcn.000655e0(&var_269h + 1);\n                        if (iVar2 == 0) {\n                            stack0xfffffff4 = -0x3fffffff;\n                            fcn.00036460(arg_8h_00);\n                        }\n                        else {\n                            if (var_1cch != 0x1be) goto code_r0x0001b3e5;\n                            stack0xfffffff4 = 0;\n                            var_270h = (var_270h - var_278h) + arg_8h_00;\n                            *var_270h = 0xc6;\n                            var_270h[1] = 0x80;\n                            *(var_270h + 2) = var_280h;\n                            var_270h[6] = 0;\n                            var_270h[7] = 0xc3;\n                            puVar7 = arg_8h_00;\n                            puVar8 = arg_8h_00 + 0xc;\n                            *0x850925e4 = arg_8h_00;\n                            for (iVar2 = 0xc; iVar2 != 0; iVar2 = iVar2 + -1) {\n                                *puVar8 = *puVar7;\n                                puVar7 = puVar7 + 1;\n                                puVar8 = puVar8 + 1;\n                            }\n                            var_270h = var_270h + 0x36;\n                            *var_270h = 1;\n                            *0x850925e8 = arg_8h_00 + 0xc;\n                        }\n                        goto code_r0x0001b445;\n                    }\n                    stack0xfffffff4 = -0x3fffff66;\ncode_r0x0001b445:\n                    if (var_269h != '\\0') {\n                        fcn.0001aab0(arg_8h, var_4h);\n                    }\n                    if (var_9h != '\\0') {\n                        fcn.0001aab0(arg_8h_01, var_274h);\n                    }\n                }\n            }\n        }\n        else {\n            *NULL = -0x3fffffff;\n        }\n    }\n    else {\n        *NULL = 0;\n    }\n    return *NULL;\ncode_r0x0001b3e5:\n    uVar3 = fcn.000656d0(&var_269h + 1);\n    iVar2 = &var_269h + 1;\n    uVar4 = fcn.000656c0(iVar2);\n    arg_8h_02 = &var_269h + 1;\n    iVar5 = fcn.000656b0(arg_8h_02);\n    fcn.0007f904(iVar5 + arg_8h_00, arg_8h_02, uVar4, iVar2, uVar3);\n    var_280h = var_1a0h;\n    iVar2 = fcn.000656d0(&var_269h + 1);\n    var_270h = var_258h - iVar2;\n    goto code_r0x0001b2d6;\n}\n",
        "token_count": 1367
    },
    "0001b490": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint32_t __cdecl fcn.0001b490(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uchar auStack8 [3];\n    uint var_1h;\n    \n    uVar1 = (**0x8500d0cc)();\n    _auStack8 = uVar1 << 0x18;\n    if (arg_8h == uVar1) {\n        uVar3 = CONCAT31(arg_8h >> 7, uVar1);\n    }\n    else {\n        while (iVar2 = fcn.00045cc0(0x850925ec, 1, 0),  iVar2 != 0) {\n            _auStack8 = 0;\n            fcn.0005bdd0(0);\n        }\n        if (arg_8h == 0) {\n            if (*0x850925e4 != NULL) {\n                (**0x850925e4)();\n            }\n        }\n        else if ((arg_8h == 1) && (*0x850925e8 != NULL)) {\n            (**0x850925e8)();\n        }\n        uVar3 = fcn.0007a2b0(0x850925ec);\n        uVar3 = uVar3 & 0xffffff00 | _auStack8 >> 0x18;\n    }\n    return uVar3;\n}\n",
        "token_count": 324
    },
    "0001b590": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0001b590(void)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    fcn.000355f0(0x85090154);\n    fcn.000355f0(0x85090024);\n    *0x8509014c = fcn.00036420(100, 4);\n    if (*0x8509014c == 0) {\n        iVar1 = -0x3fffff66;\n    }\n    else {\n        iVar1 = fcn.00067b30(1, *(*0x8508fab0 + 0xc), 0x8500d750, 0x85017a60, 0x850925f8);\n        if (iVar1 == 0) {\n            fcn.00068540(*0x850925f8);\n            iVar1 = fcn.00067b30(1, *(*0x8508fab0 + 0xc), 0x8500d75c, 0x85017cc0, 0x850925fc);\n            if (iVar1 == 0) {\n                fcn.00068540(*0x850925fc);\n                iVar1 = fcn.00067b30(1, *(*0x8508fab0 + 0xc), 0x8500d76c, 0x85017ea0, 0x85092600);\n                if (iVar1 == 0) {\n                    fcn.00068540(*0x85092600);\n                    iVar1 = fcn.00067b30(1, *(*0x8508fab0 + 0xc), 0x8500d778, 0x85017f90, 0x85092604);\n                    if (iVar1 == 0) {\n                        fcn.00068540(*0x85092604);\n                        fcn.00052470(0x85092608, 1);\n                    }\n                }\n            }\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 440
    },
    "0001b6c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0001b6c0(void)\n\n{\n    int32_t iVar1;\n    uint32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    fcn.00068540(*0x85092604);\n    fcn.00068090(0x85092604);\n    fcn.00068540(*0x85092600);\n    fcn.00068090(0x85092600);\n    fcn.00068540(*0x850925fc);\n    fcn.00068090(0x850925fc);\n    fcn.00068540(*0x850925f8);\n    fcn.00068090(0x850925f8);\n    iVar1 = fcn.00045cc0(0x85092608, 0, 1);\n    if (iVar1 != 0) {\n        while (iVar1 = fcn.00045cc0(0x8509260c, 0, 0),  iVar1 != 0) {\n            fcn.0005bdd0(1);\n        }\n        fcn.00035650(0x85090154);\n        for (var_4h = 0; var_4h < 100; var_4h = var_4h + 1) {\n            if (*(*0x8509014c + var_4h * 4) != 0) {\n                iVar1 = *(*0x8509014c + var_4h * 4);\n                for (var_ch = 0; var_ch < 100; var_ch = var_ch + 1) {\n                    fcn.00036460(*(iVar1 + 0x14 + var_ch * 0x20));\n                }\n                fcn.00036460(iVar1);\n            }\n        }\n        fcn.00036460(*0x8509014c);\n        fcn.000356c0(0x85090154);\n        fcn.00035620(0x85090154);\n        fcn.00035650(0x85090024);\n        fcn.0007f916(0x85090028, 0, 0x80);\n        fcn.000356c0(0x85090024);\n        fcn.00035620(0x85090024);\n    }\n    return;\n}\n",
        "token_count": 514
    },
    "0001b830": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.0001b830(uint32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t extraout_ECX;\n    uint32_t extraout_ECX_00;\n    uint *puVar3;\n    uint32_t var_20h;\n    uint var_1ch;\n    uint32_t var_15h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_15h._0_1_ = 0;\n    if (arg_8h == 0) {\n        uVar2 = in_EAX & 0xffffff00;\n    }\n    else {\n        fcn.0001b570(0x8509260c);\n        iVar1 = fcn.00045cc0(0x85092608, 0, 0);\n        if (iVar1 == 0) {\n            uVar2 = fcn.0007a2b0(0x8509260c);\n            uVar2 = uVar2 & 0xffffff00;\n        }\n        else {\n            var_ch = fcn.0005e660();\n            uVar2 = extraout_ECX;\n            if (arg_ch != '\\0') {\n                fcn.00035650(0x85090024);\n                for (var_4h = 0; var_4h < 0x10; var_4h = var_4h + 1) {\n                    if ((*(var_4h * 8 + -0x7af6ffd8) == arg_8h) &&\n                       ((*(var_4h * 8 + -0x7af6ffd4) == var_ch || (arg_8h < 0)))) {\n                        *(var_4h * 8 + -0x7af6ffd8) = 0;\n                        *(var_4h * 8 + -0x7af6ffd4) = 0;\n                        break;\n                    }\n                }\n                fcn.000356c0(0x85090024);\n                uVar2 = extraout_ECX_00;\n                if (var_4h < 0x10) {\n                    var_15h._0_1_ = 1;\n                }\n            }\n            if ((((arg_8h & 0x80000000) == 0x80000000) && (arg_8h != 0xfffffffe)) && (arg_8h != 0xffffffff)) {\n                var_20h = 0;\n            }\n            else {\n                var_20h = 1;\n            }\n            iVar1 = (**0x8500d2a0)(arg_8h, 0, 0, uVar2 & 0xffffff00 | var_20h, &var_10h, 0);\n            if (iVar1 == 0) {\n                *0x8 = (var_10h >> 8 ^ var_10h ^ var_10h >> 0x10 ^ var_10h >> 0x18) % 100;\n                (**0x8500d2e4)();\n            }\n            else {\n                stack0xffffffe8 = 0;\n                var_10h = 0;\n            }\n            if (var_10h == 0) {\n                uVar2 = fcn.0007a2b0(0x8509260c);\n                uVar2 = uVar2 & 0xffffff00 | var_15h;\n            }\n            else {\n                fcn.00035650(0x85090154);\n                if (((arg_ch == '\\0') || (*(var_10h - 0x14) == 1)) &&\n                   (var_8h = *(*0x8509014c + stack0xffffffe8 * 4),  var_8h != 0)) {\n                    for (var_4h = 0; var_4h < 100; var_4h = var_4h + 1) {\n                        if (*(var_8h + 4 + var_4h * 0x20) == var_10h) {\n                            fcn.00036460(*(var_8h + 0x14 + var_4h * 0x20));\n                            puVar3 = var_4h * 0x20 + var_8h;\n                            *puVar3 = 0;\n                            puVar3[1] = 0;\n                            puVar3[2] = 0;\n                            puVar3[3] = 0;\n                            puVar3[4] = 0;\n                            puVar3[5] = 0;\n                            puVar3[6] = 0;\n                            puVar3[7] = 0;\n                            break;\n                        }\n                    }\n                }\n                fcn.000356c0(0x85090154);\n                uVar2 = fcn.0007a2b0(0x8509260c);\n                uVar2 = uVar2 & 0xffffff00 | var_15h;\n            }\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 1153
    },
    "0001ba60": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2ch\n\nint32_t __cdecl fcn.0001ba60(uint arg_8h, uint arg_ch, int32_t arg_10h, int32_t arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    char cVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    var_14h = 0;\n    var_28h = 0;\n    var_18h = 0;\n    uVar5 = arg_ch;\n    iVar3 = arg_10h;\n    iVar4 = arg_14h;\n    pcVar2 = fcn.000684a0(arg_8h);\n    iVar3 = (*pcVar2)(arg_8h, uVar5, iVar3, iVar4, arg_18h, arg_1ch);\n    if ((((arg_10h == 2) || (arg_10h == 4)) && (cVar1 = fcn.0001f7c0(),  cVar1 == '\\0')) &&\n       ((iVar3 == 0 || (iVar3 == -0x7ffffffb)))) {\n        if (arg_10h == 2) {\n            var_14h = arg_14h;\n            var_8h = *(arg_14h + 0x14);\n        }\n        else {\n            var_28h = arg_14h;\n            var_8h = *(arg_14h + 0xc);\n        }\n        var_24h = fcn.00036420(4, var_8h);\n        if (var_24h == 0) {\n            var_1ch = -0x3fffff66;\n        }\n        else {\n            var_18h = fcn.00036330(0x402);\n            if (var_18h == 0) {\n                var_1ch = -0x3fffff66;\n            }\n            else {\n                var_1ch = fcn.00035ba0(arg_ch, &var_4h);\n                if (var_1ch == 0) {\n                    var_ch = 0;\n                    var_10h = 0;\n                    while (((var_ch < var_8h &&\n                            (iVar4 = fcn.0007f796(arg_8h, var_ch, 0, var_18h, 0x400, 0x85090150, var_4h), \n                            iVar4 != -0x7fffffe6)) && ((iVar4 == 0 || (iVar4 == -0x7ffffffb))))) {\n                        if (iVar4 == 0) {\n                            *(var_18h + 0x10 + (*(var_18h + 0xc) & 0xfffffffe)) = 0;\n                        }\n                        else {\n                            *(var_18h + 0x400) = 0;\n                        }\n                        cVar1 = fcn.0001c8e0(var_18h + 0x10);\n                        if (cVar1 == '\\0') {\n                            *(var_24h + var_10h * 4) = var_ch;\n                            var_10h = var_10h + 1;\n                        }\n                        var_ch = var_ch + 1;\n                    }\n                    fcn.00035bf0(arg_ch, var_4h);\n                    if (var_8h == var_10h) {\n                        fcn.00036460(var_24h);\n                        var_24h = 0;\n                    }\n                    cVar1 = fcn.0001c3d0(arg_ch, var_24h, var_10h, var_8h);\n                    if (cVar1 != '\\0') {\n                        var_24h = 0;\n                    }\n                    if (arg_10h == 2) {\n                        *(var_14h + 0x14) = var_10h;\n                    }\n                    else {\n                        *(var_28h + 0xc) = var_10h;\n                    }\n                    var_1ch = 0;\n                }\n            }\n        }\n        fcn.00036460(var_18h);\n        fcn.00036460(var_24h);\n        if (var_1ch != 0) {\n            iVar3 = var_1ch;\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 1054
    },
    "0001bcc0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.0001bcc0(uint arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, int32_t arg_20h)\n\n{\n    char cVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    cVar1 = fcn.0001f7c0();\n    if ((cVar1 != '\\0') || (arg_20h == -0x7af6feb0)) {\n        pcVar2 = fcn.000684a0(arg_8h);\n        iVar3 = (*pcVar2)(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n        return iVar3;\n    }\n    *0x850925f0 = *0x850925f0 + 1;\n    cVar1 = fcn.0001c660(arg_ch, arg_10h, &var_ch);\n    if (cVar1 != '\\0') {\n        *0x850925f4 = *0x850925f4 + 1;\n        pcVar2 = fcn.000684a0(arg_8h);\n        iVar3 = (*pcVar2)(arg_8h, arg_ch, var_ch, arg_14h, arg_18h, arg_1ch, arg_20h);\n        return iVar3;\n    }\n    iVar3 = fcn.00036330(0x402);\n    if (iVar3 == 0) {\n        return -0x3fffff66;\n    }\n    var_14h = fcn.00035ba0(arg_ch, &var_4h);\n    if (var_14h == 0) {\n        var_8h = 0;\n        var_ch = 0;\n        do {\n            var_14h = fcn.0007f796();\n            if ((var_14h != 0) && (var_14h != -0x7ffffffb)) goto code_r0x0001be44;\n            if (var_14h == 0) {\n                *(iVar3 + 0x10 + (*(iVar3 + 0xc) & 0xfffffffe)) = 0;\n            }\n            else {\n                *(iVar3 + 0x400) = 0;\n            }\n            cVar1 = fcn.0001c8e0(iVar3 + 0x10);\n            if (cVar1 == '\\0') {\n                if (var_ch == arg_10h) goto code_r0x0001be2d;\n                var_ch = var_ch + 1;\n            }\n            var_8h = var_8h + 1;\n        } while( true );\n    }\ncode_r0x0001be51:\n    fcn.00036460(iVar3);\n    if (var_14h == 0) {\n        iVar3 = var_8h;\n        pcVar2 = fcn.000684a0(arg_8h);\n        var_14h = (*pcVar2)(arg_8h, arg_ch, iVar3, arg_14h, arg_18h, arg_1ch, arg_20h);\n    }\n    return var_14h;\ncode_r0x0001be2d:\n    var_14h = 0;\ncode_r0x0001be44:\n    fcn.00035bf0(arg_ch, var_4h);\n    goto code_r0x0001be51;\n}\n",
        "token_count": 829
    },
    "0001bea0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0001bea0(uint param_1, uint param_2, uint param_3, int32_t param_4, uint param_5, uint param_6, uint param_7\n                    , int32_t *param_8)\n\n{\n    char cVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint var_8h;\n    uint var_ch;\n    uint var_10h;\n    int32_t var_18h;\n    uint var_18h_2;\n    uint var_1ch;\n    uint var_20h;\n    int32_t *var_24h;\n    int32_t *piVar4;\n    uint var_20h_2;\n    int32_t var_1ch_2;\n    uint var_10h_2;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x8507ba28;\n    uStack16 = 0x8507b910;\n    var_10h_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_10h_2;\n    iVar3 = var_18h;\n    piVar4 = var_24h;\n    pcVar2 = fcn.000684a0(var_8h);\n    iVar3 = (*pcVar2)(var_8h, var_ch, var_10h, iVar3, var_18h_2, var_1ch, var_20h, piVar4);\n    if (iVar3 == 0) {\n        if (var_24h == NULL) {\n            var_1ch_2 = 1;\n        }\n        else {\n            cVar1 = (**0x8500d0cc)();\n            if (cVar1 == '\\0') {\n                var_1ch_2 = *var_24h;\n            }\n            else {\n                var_4h = 0;\n                (**0x8500d2e0)(var_24h, 4, 1);\n                var_1ch_2 = *var_24h;\n                var_4h = 0xffffffff;\n            }\n        }\n        if (var_1ch_2 == 1) {\n            fcn.0001b830(*(var_18h + 4), 0);\n        }\n    }\n    *in_FS_OFFSET = var_10h_2;\n    return iVar3;\n}\n",
        "token_count": 548
    },
    "0001bf90": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0001bf90(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint *puVar1;\n    char cVar2;\n    code *pcVar3;\n    uint uVar4;\n    uint *var_4d8h;\n    uint var_4d4h;\n    uint var_4d0h;\n    ushort auStack1228 [2];\n    uint var_4c4h;\n    int32_t var_2c4h;\n    uint var_2c0h;\n    uint var_2b8h;\n    uint var_2b4h;\n    uint var_2b0h;\n    int32_t var_2ach;\n    uint var_2a8h;\n    uint var_2a0h;\n    uint var_29ch;\n    uint *var_298h;\n    uint var_294h;\n    uint var_290h;\n    uint var_28ch;\n    uint var_288h;\n    uint var_82h;\n    int32_t var_7ch;\n    uint var_78h;\n    uint var_20h;\n    uint var_1ch;\n    uint *var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    uVar4 = arg_10h;\n    pcVar3 = fcn.000684a0(arg_8h);\n    var_2c4h = (*pcVar3)(arg_8h, arg_ch, uVar4);\n    if ((var_2c4h == 0) && (cVar2 = (**0x8500d0cc)(),  cVar2 != '\\x01')) {\n        var_2c4h = (**0x8500d2a0)(arg_10h, 0x80000000, **0x8500d08c, 0, &var_2ach, 0);\n        if (var_2c4h == 0) {\n            var_1h._0_1_ = '\\0';\n            var_2b4h._0_2_ = 0x43;\n            while ((var_2b4h < 0x5b && (var_1h == '\\0'))) {\n                fcn.0007f736(&var_4d0h, 0x8500d784, var_2b4h);\n                fcn.0007f6d0(&var_2a8h, &var_4d0h);\n                var_2c4h = (**0x8500d2f0)(&var_2a8h, 0, &var_8h, &var_2b8h);\n                if (var_2c4h == 0) {\n                    if (*(var_2ach + 4) == *(var_8h + 4)) {\n                        var_1h._0_1_ = '\\x01';\n                    }\n                    (**0x8500d2e4)();\n                }\n                var_2b4h._0_2_ = var_2b4h + 1;\n            }\n            if ((var_1h != '\\0') && (*(var_2ach + 0x30) < 499)) {\n                fcn.0007f904(&var_4c4h, *(var_2ach + 0x34), *(var_2ach + 0x30));\n                *(&var_4d0h + (*(var_2ach + 0x30) + 0xc & 0xfffffffe)) = 0;\n                fcn.0007f6c4(arg_10h);\n                var_2b0h = fcn.0005e660();\n                fcn.00035650(0x85090024);\n                for (var_7ch = 0; var_7ch < 0x10; var_7ch = var_7ch + 1) {\n                    if (*(var_7ch * 8 + -0x7af6ffd8) == 0) {\n                        *(var_7ch * 8 + -0x7af6ffd8) = arg_10h;\n                        *(var_7ch * 8 + -0x7af6ffd4) = var_2b0h;\n                        break;\n                    }\n                }\n                if (0xf < var_7ch) {\n                    fcn.0007f70c(0x85090028, 0x85090030, 0x78);\n                    *0x850900a0 = arg_10h;\n                    *0x850900a4 = var_2b0h;\n                }\n                fcn.000356c0(0x85090024);\n                fcn.0002c2e0(&var_78h, 0x52);\n                fcn.0007f6d6(&var_288h, 0x104, 0x8500d794, &var_78h);\n                var_82h._0_2_ = 0;\n                fcn.0007f6d0(&var_2a8h, &var_288h);\n                var_20h = 0x18;\n                var_1ch = 0;\n                var_14h = 0x140;\n                var_18h = &var_2a8h;\n                var_10h = 0;\n                var_ch = 0;\n                fcn.0007f6d0(&var_2c0h, &var_4d0h);\n                var_2a0h = 0x18;\n                var_29ch = 0;\n                var_294h = 0x40;\n                var_298h = &var_2c0h;\n                var_290h = 0;\n                var_28ch = 0;\n                var_2c4h = fcn.0007f790(&var_20h, &var_2a0h);\n                if (var_2c4h == 0) {\n                    var_2c4h = fcn.0007f6ca(&var_4d4h, 0xf003f, &var_20h);\n                    if (var_2c4h == 0) {\n                        fcn.0001c9d0(var_4d4h, &var_288h, 0, 4);\n                        fcn.0007f6c4(var_4d4h);\n                    }\n                    fcn.0007f78a(&var_20h);\n                    puVar1 = &var_4d4h + 2;\n                    do {\n                        var_4d8h = puVar1;\n                        puVar1 = var_4d8h + 2;\n                    } while (*(var_4d8h + 2) != 0);\n                    *(var_4d8h + 2) = *0x8500d7cc;\n                    *(var_4d8h + 6) = *0x8500d7d0;\n                    *(var_4d8h + 10) = *0x8500d7d4;\n                    fcn.0007f6d0(&var_2c0h, &var_4d0h);\n                    var_2a0h = 0x18;\n                    var_29ch = 0;\n                    var_294h = 0x40;\n                    var_298h = &var_2c0h;\n                    var_290h = 0;\n                    var_28ch = 0;\n                    fcn.0007f6e8(&var_2a0h);\n                }\n            }\n            (**0x8500d2e4)();\n            var_2c4h = 0;\n        }\n        else {\n            var_2c4h = 0;\n        }\n    }\n    return var_2c4h;\n}\n",
        "token_count": 1782
    },
    "0001c3d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0001c3d0(uint32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint var_38h;\n    uint var_34h;\n    uint32_t var_30h;\n    int32_t var_2ch;\n    uint32_t var_28h;\n    uint32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uint32_t var_18h;\n    int32_t var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    int32_t var_4h;\n    \n    fcn.0001b570(0x8509260c);\n    iVar2 = fcn.00045cc0(0x85092608, 0, 0);\n    if (iVar2 == 0) {\n        fcn.0007a2b0(0x8509260c);\n        uVar4 = 0;\n    }\n    else {\n        uVar3 = (**0x8500d108)(&var_18h);\n        if ((((arg_8h & 0x80000000) == 0x80000000) && (arg_8h != 0xfffffffe)) && (arg_8h != 0xffffffff)) {\n            var_30h = 0;\n        }\n        else {\n            var_30h = 1;\n        }\n        iVar2 = (**0x8500d2a0)(arg_8h, 0, 0, uVar3 & 0xffffff00 | var_30h, &var_24h, 0);\n        if (iVar2 == 0) {\n            var_28h = (var_24h >> 8 ^ var_24h ^ var_24h >> 0x10 ^ var_24h >> 0x18) % 100;\n            (**0x8500d2e4)();\n        }\n        else {\n            var_28h = 0;\n            var_24h = 0;\n        }\n        if (var_24h == 0) {\n            fcn.0007a2b0(0x8509260c);\n            uVar4 = 0;\n        }\n        else {\n            fcn.00035650(0x85090154);\n            if (*(*0x8509014c + var_28h * 4) == 0) {\n                uVar4 = fcn.00036420(100, 0x20);\n                *(*0x8509014c + var_28h * 4) = uVar4;\n                if (*(*0x8509014c + var_28h * 4) == 0) {\n                    fcn.000356c0(0x85090154);\n                    fcn.0007a2b0(0x8509260c);\n                    return 0;\n                }\n            }\n            var_20h = *(*0x8509014c + var_28h * 4);\n            var_2ch = 0;\n            var_10h = 0;\n            var_ch = 0;\n            var_4h = -1;\n            for (var_1ch = 0; var_1ch < 100; var_1ch = var_1ch + 1) {\n                if (*(var_20h + 4 + var_1ch * 0x20) == 0) {\n                    var_4h = var_1ch;\n                    break;\n                }\n                puVar1 = var_20h + 8 + var_1ch * 0x20;\n                iVar2 = (var_14h - *(var_20h + 0xc + var_1ch * 0x20)) - (var_18h < *puVar1);\n                if ((var_ch <= iVar2) && ((var_ch < iVar2 || (var_10h < var_18h - *puVar1)))) {\n                    var_2ch = var_1ch;\n                    puVar1 = var_20h + 8 + var_1ch * 0x20;\n                    var_10h = var_18h - *puVar1;\n                    var_ch = (var_14h - *(var_20h + 0xc + var_1ch * 0x20)) - (var_18h < *puVar1);\n                }\n            }\n            if (var_4h != -1) {\n                var_2ch = var_4h;\n            }\n            fcn.00036460(*(var_20h + 0x14 + var_2ch * 0x20));\n            *(var_20h + 4 + var_2ch * 0x20) = var_24h;\n            *(var_20h + 0x14 + var_2ch * 0x20) = arg_ch;\n            *(var_20h + 0x10 + var_2ch * 0x20) = arg_10h;\n            *(var_20h + 0x18 + var_2ch * 0x20) = arg_14h;\n            *(var_20h + 8 + var_2ch * 0x20) = var_18h;\n            *(var_20h + 0xc + var_2ch * 0x20) = var_14h;\n            fcn.000356c0(0x85090154);\n            fcn.0007a2b0(0x8509260c);\n            uVar4 = 1;\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 1270
    },
    "0001c660": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Removing unreachable block (ram,0x0001c866)\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.0001c660(uint32_t arg_8h, uint32_t arg_ch, uint32_t *arg_10h)\n\n{\n    uint32_t *puVar1;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t extraout_ECX;\n    bool bVar6;\n    uint var_38h;\n    uint var_34h;\n    uint32_t var_30h;\n    uint32_t var_2ch;\n    uint var_28h;\n    uint32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint var_5h;\n    \n    var_5h._0_1_ = 0;\n    fcn.0001b570(0x8509260c);\n    iVar4 = fcn.00045cc0(0x85092608, 0, 0);\n    if (iVar4 == 0) {\n        uVar5 = fcn.0007a2b0(0x8509260c);\n        uVar5 = uVar5 & 0xffffff00;\n    }\n    else {\n        (**0x8500d108)(&var_10h);\n        var_2ch = 0;\n        uVar5 = extraout_ECX;\n        while( true ) {\n            if ((((arg_8h & 0x80000000) == 0x80000000) && (arg_8h != 0xfffffffe)) && (arg_8h != 0xffffffff)) {\n                var_30h = 0;\n            }\n            else {\n                var_30h = 1;\n            }\n            iVar4 = (**0x8500d2a0)(arg_8h, 0, 0, uVar5 & 0xffffff00 | var_30h, &var_24h, 0);\n            if (iVar4 == 0) {\n                (**0x8500d2e4)(var_2ch, (var_24h >> 8 ^ var_24h ^ var_24h >> 0x10 ^ var_24h >> 0x18) % 100);\n            }\n            else {\n                var_24h = 0;\n            }\n            if (var_24h == 0) break;\n            fcn.00035650(0x85090154);\n            var_20h = *(*0x8509014c + 0x14240550);\n            if (var_20h != 0) {\n                for (var_14h = 0; var_14h < 100; var_14h = var_14h + 1) {\n                    if (*(var_20h + 4 + var_14h * 0x20) == var_24h) {\n                        puVar1 = var_20h + 8 + var_14h * 0x20;\n                        piVar2 = var_20h + 0xc + var_14h * 0x20;\n                        uVar5 = var_10h < *puVar1;\n                        uVar3 = var_ch - *piVar2;\n                        bVar6 = uVar3 - uVar5 < 0;\n                        if ((bVar6) ||\n                           ((uVar3 == uVar5 || (SBORROW4(var_ch, *piVar2) != SBORROW4(uVar3, uVar5)) != bVar6 &&\n                            (var_10h - *puVar1 < 100000000)))) {\n                            if (arg_10h != NULL) {\n                                if (*(var_20h + 0x14 + var_14h * 0x20) == 0) {\n                                    *arg_10h = arg_ch;\n                                }\n                                else if (arg_ch < *(var_20h + 0x10 + var_14h * 0x20)) {\n                                    *arg_10h = *(*(var_20h + 0x14 + var_14h * 0x20) + arg_ch * 4);\n                                }\n                                else {\n                                    *arg_10h = *(var_20h + 0x18 + var_14h * 0x20);\n                                }\n                            }\n                            var_5h._0_1_ = 1;\n                        }\n                        else {\n                            fcn.000356c0(0x85090154);\n                            fcn.0001b830(arg_8h, 0);\n                            fcn.00035650(0x85090154);\n                        }\n                        break;\n                    }\n                }\n            }\n            fcn.000356c0(0x85090154);\n            if ((var_5h != 0) || (var_1ch = fcn.00036330(0x402),  var_1ch == 0)) break;\n            iVar4 = fcn.00035ba0(arg_8h, &var_5h + 1);\n            if (iVar4 == 0) {\n                fcn.0007f79c(stack0xfffffff8, 2, var_1ch, 0x400, &var_18h);\n                fcn.00035bf0(arg_8h, stack0xfffffff8);\n            }\n            fcn.00036460(var_1ch);\n            uVar5 = 0x85090155;\n            var_2ch = uVar5;\n        }\n        uVar5 = fcn.0007a2b0(0x8509260c);\n        uVar5 = uVar5 & 0xffffff00 | var_5h;\n    }\n    return uVar5;\n}\n",
        "token_count": 1388
    },
    "0001c8e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0001c8e0(uint arg_8h)\n\n{\n    int16_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_20h;\n    uint var_18h;\n    int16_t *var_14h;\n    uint var_10h;\n    uint var_8h;\n    int16_t *var_4h;\n    \n    if (*0x85092610 == 0) {\n        fcn.0002c340(0x85090158, 0x52);\n        var_4h = 0x85090158;\n        piVar1 = var_4h;\n        do {\n            var_4h = piVar1;\n            piVar1 = var_4h + 1;\n        } while (*var_4h != 0);\n        *0x85092610 = var_4h + 0x3d7b7f54 >> 1;\n        fcn.0007f6d6(0x850900a8, 0x52, 0x8500d7d8, 0x85090158);\n        var_14h = 0x850900a8;\n        piVar1 = var_14h;\n        do {\n            var_14h = piVar1;\n            piVar1 = var_14h + 1;\n        } while (*var_14h != 0);\n        *0x850901fc = var_14h + 0x3d7b7fac >> 1;\n    }\n    iVar2 = fcn.0007f748(arg_8h, 0x85090158, *0x85092610);\n    if (iVar2 == 0) {\n        uVar3 = 1;\n    }\n    else {\n        iVar2 = fcn.00037140(arg_8h, 0x850900a8, *0x850901fc);\n        if (iVar2 == 0) {\n            uVar3 = 1;\n        }\n        else {\n            uVar3 = 0;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 467
    },
    "0001c9d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.0001c9d0(uint arg_8h, int16_t *arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int16_t iVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    code *pcVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    int32_t iVar9;\n    uint uVar10;\n    uint *puVar11;\n    uint var_5ch;\n    uint var_54h;\n    int16_t *var_50h;\n    uint var_4ch;\n    uint var_44h;\n    int16_t *var_40h;\n    uint var_3ch;\n    uint var_38h;\n    int32_t var_2dh;\n    uint var_28h;\n    uint var_24h;\n    uint *var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_2dh._0_1_ = 0;\n    fcn.0001b570(0x8509260c);\n    iVar3 = fcn.00045cc0(0x85092608, 0, 0);\n    if (iVar3 == 0) {\n        uVar4 = fcn.0007a2b0(0x8509260c);\n        uVar4 = uVar4 & 0xffffff00;\n    }\n    else if (arg_10h < arg_14h) {\n        var_10h = fcn.00036330(0x402);\n        if (var_10h != 0) {\n            var_8h = 0;\n            while( true ) {\n                puVar11 = &var_4h;\n                uVar10 = 0x400;\n                uVar8 = 0;\n                uVar6 = *0x850925fc;\n                uVar7 = arg_8h;\n                iVar3 = var_8h;\n                iVar9 = var_10h;\n                pcVar5 = fcn.000684a0(*0x850925fc);\n                *NULL = (*pcVar5)(uVar6, uVar7, iVar3, uVar8, iVar9, uVar10, puVar11);\n                if (*NULL == -0x7fffffe6) break;\n                if ((*NULL != 0) && (*NULL != -0x7ffffffb)) goto code_r0x0001cc06;\n                if (*NULL == 0) {\n                    *(var_10h + 0x10 + (*(var_10h + 0xc) & 0xfffffffe)) = 0;\n                }\n                else {\n                    *(var_10h + 0x400) = 0;\n                }\n                if (arg_10h + 1 <= arg_14h) {\n                    var_40h = arg_ch;\n                    do {\n                        iVar1 = *var_40h;\n                        var_40h = var_40h + 1;\n                    } while (iVar1 != 0);\n                    var_50h = var_10h + 0x10;\n                    do {\n                        iVar1 = *var_50h;\n                        var_50h = var_50h + 1;\n                    } while (iVar1 != 0);\n                    var_ch = fcn.00036330(((var_40h - (arg_ch + 1) >> 1) + 1 + (var_50h - (var_10h + 0x12) >> 1)) * 2 +\n                                          2);\n                    if (var_ch != 0) {\n                        fcn.0007f736(var_ch, 0x8500d7ec, arg_ch, var_10h + 0x10);\n                        fcn.0007f6d0(&var_38h, var_ch);\n                        var_28h = 0x18;\n                        var_24h = 0;\n                        var_1ch = 0x140;\n                        var_20h = &var_38h;\n                        var_18h = 0;\n                        var_14h = 0;\n                        *NULL = fcn.0007f6ca(&var_3ch, 0xf003f, &var_28h);\n                        if (*NULL == 0) {\n                            cVar2 = fcn.0001c9d0(var_3ch, var_ch, arg_10h + 1, arg_14h);\n                            if (cVar2 != '\\0') {\n                                var_8h = var_8h + -1;\n                            }\n                            fcn.0007f6c4(var_3ch);\n                        }\n                        fcn.00036460(var_ch);\n                    }\n                }\n                var_8h = var_8h + 1;\n            }\n            stack0xffffffd0 = 0;\ncode_r0x0001cc06:\n            fcn.00036460(var_10h);\n        }\n        *NULL = fcn.0007f6fa(arg_8h);\n        if (*NULL == 0) {\n            var_2dh._0_1_ = 1;\n        }\n        uVar4 = fcn.0007a2b0(0x8509260c);\n        uVar4 = uVar4 & 0xffffff00 | var_2dh;\n    }\n    else {\n        uVar4 = fcn.0007a2b0(0x8509260c);\n        uVar4 = uVar4 & 0xffffff00;\n    }\n    return uVar4;\n}\n",
        "token_count": 1280
    },
    "0001cc40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0001cc40(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t var_1ch;\n    uint var_15h;\n    \n    var_15h._0_1_ = arg_8h;\n    iVar1 = fcn.00045cc0(0x85092614, 1, 0);\n    if (iVar1 == 1) {\n        var_1ch = 0;\n    }\n    else {\n        iVar1 = fcn.000379b0(&var_15h + 1, 0x11);\n        if (iVar1 == 0) {\n            var_1ch = -0x3fffffff;\n        }\n        else {\n            iVar1 = fcn.00016440(0x8500d7f8, 0x85090200);\n            if ((iVar1 == 0) || (var_1ch = fcn.00016440(0x8500d814, 0x85090200),  var_1ch == 0)) {\n                *0x85092618 = *(*0x85090200 + 8);\n                uVar3 = 0;\n                uVar2 = 0x8500d82e;\n                var_1ch = fcn.0007b160(0x8500d82e);\n                if ((var_1ch == 0) && (var_1ch = fcn.0001e660(uVar2, uVar3),  var_1ch == 0)) {\n                    if (var_15h == '\\0') {\n                        fcn.0007f7a8(0x85018da0, 0);\n                    }\n                    else {\n                        fcn.00015ba0(0);\n                    }\n                }\n                if (var_1ch != 0) {\n                    fcn.0001ead0();\n                    fcn.0007b330();\n                    (**0x8500d2e4)();\n                }\n            }\n            else {\n                fcn.00052470(0x85092614, 0);\n            }\n        }\n    }\n    return var_1ch;\n}\n",
        "token_count": 493
    },
    "0001cd40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0001cd40(void)\n\n{\n    if (*0x85092614 != 0) {\n        fcn.00015d20();\n        fcn.0007f7a8(0x85018da0, 1);\n        fcn.0001ead0();\n        fcn.0007b330();\n        (**0x8500d2e4)();\n    }\n    return;\n}\n",
        "token_count": 90
    },
    "0001ce20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0001ce20(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    if (*0x8509261c == 0) {\n        (**0x8500d120)(arg_8h, arg_ch, arg_10h);\n    }\n    else {\n        iVar2 = *0x8509261c;\n        pcVar1 = fcn.000684a0(*0x8509261c);\n        (*pcVar1)(iVar2, arg_8h, arg_ch, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 144
    },
    "0001ce60": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0001ce60(uint arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    if (*0x85092620 == 0) {\n        (**0x8500d088)(arg_8h, arg_ch);\n    }\n    else {\n        iVar2 = *0x85092620;\n        pcVar1 = fcn.000684a0(*0x85092620);\n        (*pcVar1)(iVar2, arg_8h, arg_ch);\n    }\n    return;\n}\n",
        "token_count": 125
    },
    "0001cea0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl\nfcn.0001cea0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint var_5h;\n    \n    if (*0x85092624 == 0) {\n        uVar2 = fcn.0007f7ae(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n    }\n    else {\n        uVar1 = fcn.0001b490(0);\n        iVar4 = *0x85092624;\n        pcVar3 = fcn.000684a0(*0x85092624);\n        uVar2 = (*pcVar3)(iVar4, arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n        fcn.0001b490(uVar2 & 0xffffff00 | uVar1);\n    }\n    return uVar2;\n}\n",
        "token_count": 277
    },
    "0001cf20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0001cf20(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint8_t uVar1;\n    uint uVar2;\n    code *pcVar3;\n    uint32_t extraout_ECX;\n    int32_t iVar4;\n    uint var_5h;\n    \n    if (*0x85092628 == 0) {\n        uVar2 = fcn.0007f6be(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch);\n    }\n    else {\n        uVar1 = fcn.0001b490(0);\n        iVar4 = *0x85092628;\n        pcVar3 = fcn.000684a0(*0x85092628);\n        uVar2 = (*pcVar3)(iVar4, arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch);\n        fcn.0001b490(extraout_ECX & 0xffffff00 | uVar1);\n    }\n    return uVar2;\n}\n",
        "token_count": 267
    },
    "0001cfa0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0001cfa0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint var_5h;\n    \n    if (*0x8509262c == 0) {\n        uVar2 = fcn.0007f784(arg_8h, arg_ch, arg_10h, arg_14h);\n    }\n    else {\n        uVar1 = fcn.0001b490(0);\n        iVar4 = *0x8509262c;\n        pcVar3 = fcn.000684a0(*0x8509262c);\n        uVar2 = (*pcVar3)(iVar4, arg_8h, arg_ch, arg_10h, arg_14h);\n        fcn.0001b490(uVar2 & 0xffffff00 | uVar1);\n    }\n    return uVar2;\n}\n",
        "token_count": 232
    },
    "0001d010": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0001d010(uint arg_8h, uint arg_ch)\n\n{\n    uint8_t uVar1;\n    uint uVar2;\n    code *pcVar3;\n    ulong uVar4;\n    int32_t iVar5;\n    uint var_5h;\n    \n    if (*0x85092630 == 0) {\n        uVar2 = fcn.0007f7b4(arg_8h, arg_ch);\n    }\n    else {\n        uVar1 = fcn.0001b490(0);\n        iVar5 = *0x85092630;\n        pcVar3 = fcn.000684a0(*0x85092630);\n        uVar4 = (*pcVar3)(iVar5, arg_8h, arg_ch);\n        uVar2 = uVar4;\n        fcn.0001b490(uVar4 >> 0x20 & 0xffffff00 | uVar1);\n    }\n    return uVar2;\n}\n",
        "token_count": 214
    },
    "0001d070": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nint32_t __fastcall fcn.0001d070(uint param_1)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.00066060(param_1);\n    if (iVar1 == 0) {\n        fcn.000660c0(0x8500d840, 0x8509261c);\n        fcn.000660c0(0x8500d858, 0x85092620);\n        fcn.00066100(0x8500d76c, 0x85092624);\n        fcn.00066100(0x8500d86c, 0x85092628);\n        fcn.00066100(0x8500d87c, 0x8509262c);\n        fcn.00066100(0x8500d88c, 0x85092630);\n        fcn.000660a0();\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 238
    },
    "null": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __cdecl entry0(int32_t arg_8h, uint arg_ch)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint32_t extraout_ECX;\n    int32_t var_8h;\n    uint var_1h;\n    \n    **0x8508fab0 = 0xffffffff;\n    (*0x8508fab0)[1] = *(arg_8h + 0xc);\n    (*0x8508fab0)[2] = *(arg_8h + 0x10);\n    var_8h = fcn.000359f0(0x8500d8a0, *0x8508fab0 + 3, *0x8508fab0 + 4);\n    if (var_8h == 0) {\n        *0x85092634 = (*0x8508fab0)[1];\n        *0x85092638 = *0x85092634 + -1 + (*0x8508fab0)[2];\n        if ((*0x85092634 == 0) || (*0x85092634 == *0x85092638)) {\n            var_8h = -0x3fffffd0;\n        }\n        else {\n            iVar2 = fcn.00035c10(0x85092640, 0x104);\n            uVar1 = 1 - (iVar2 != 0);\n            var_8h = fcn.0001d560(arg_8h, arg_ch, uVar1);\n            if (var_8h == 0) {\n                var_8h = fcn.00015d80(arg_8h, extraout_ECX & 0xffffff00 | uVar1);\n            }\n            if ((var_8h != 0) && (var_8h != -0x3ffffee0)) {\n                fcn.0007f6c4((*0x8508fab0)[7]);\n                (*0x8508fab0)[7] = 0;\n            }\n        }\n    }\n    return var_8h;\n}\n",
        "token_count": 471
    },
    "0001d290": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.0001d290(void)\n\n{\n    int32_t iVar1;\n    uint var_240h;\n    int32_t var_23ch;\n    uint var_238h;\n    uint var_234h;\n    uint *var_230h;\n    uint var_22ch;\n    uint var_228h;\n    uint var_224h;\n    uint var_220h;\n    uint var_21ch;\n    uint var_218h;\n    uint var_210h;\n    uint var_4h;\n    \n    var_220h._0_2_ = 0x70;\n    var_220h._2_2_ = 0x72;\n    var_21ch = 0x8500d8b0;\n    var_238h = 0x18;\n    var_234h = 0;\n    var_22ch = 0x40;\n    var_230h = &var_220h;\n    var_228h = 0;\n    var_224h = 0;\n    iVar1 = fcn.0007f7ba(&var_240h, 0x1f0003, &var_238h);\n    if (iVar1 == 0) {\n        fcn.0007f6c4(var_240h);\n        var_23ch = 0x40000000;\n    }\n    else {\n        fcn.0002c130(&var_210h, 0x104);\n        fcn.0007f6d0(&var_218h, &var_210h);\n        var_238h = 0x18;\n        var_234h = 0;\n        var_22ch = 0x40;\n        var_230h = &var_218h;\n        var_228h = 0;\n        var_224h = 0;\n        iVar1 = fcn.0007f7ba(&var_240h, 0x1f0003, &var_238h);\n        if (iVar1 == 0) {\n            fcn.0007f6c4(var_240h);\n            var_23ch = 0x40000000;\n        }\n        else {\n            var_23ch = fcn.00037f00(&var_4h);\n            if (var_23ch == 0) {\n                var_238h = 0x18;\n                var_234h = 0;\n                var_22ch = 0x240;\n                var_230h = &var_218h;\n                var_228h = var_4h;\n                var_224h = 0;\n                var_23ch = fcn.0007f7c0(*0x8508fab0 + 0x1c, 0x1f0003, &var_238h, 0, 0);\n                fcn.00038080(var_4h);\n            }\n        }\n    }\n    return var_23ch;\n}\n",
        "token_count": 656
    },
    "0001d450": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0001d450(int32_t *arg_8h, uint arg_ch)\n\n{\n    ushort *arg_8h_00;\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*arg_8h == -1) {\n        var_10h = 0;\n    }\n    else {\n        arg_8h_00 = fcn.00036360(*(*0x8508fab0 + 8));\n        if (arg_8h_00 == NULL) {\n            var_10h = -0x3fffff66;\n        }\n        else {\n            fcn.0007f904(arg_8h_00, *0x85092634, *(*0x8508fab0 + 8));\n            iVar2 = *0x85092634 + *(*0x85092634 + 0x3c);\n            var_10h = fcn.0005f970(arg_8h_00, arg_8h_00 + (*(iVar2 + 0x34) - *0x85092634));\n            if (var_10h == 0) {\n                pcVar1 = arg_8h_00 + *(iVar2 + 0x28);\n                if (pcVar1 == NULL) {\n                    var_10h = -0x3fffffff;\n                }\n                else {\n                    arg_8h[3] = arg_8h_00;\n                    var_10h = (*pcVar1)(arg_8h, arg_ch);\n                    if (var_10h == 0) {\n                        *arg_8h_00 = 0;\n                        arg_8h_00[1] = 0;\n                        *(arg_8h_00 + *(arg_8h_00 + 0x1e)) = 0;\n                        var_10h = -0x3ffffee0;\n                    }\n                }\n            }\n        }\n        if (var_10h != -0x3ffffee0) {\n            fcn.00036460(arg_8h_00);\n        }\n    }\n    return var_10h;\n}\n",
        "token_count": 490
    },
    "0001d560": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0001d560(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    if (*0x8507c637 == '\\0') {\n        iVar1 = 0;\n    }\n    else {\n        *0x8507c637 = '\\0';\n        iVar1 = fcn.0006b490();\n        if ((iVar1 == 0) && ((arg_10h == 0 || (iVar1 = fcn.0001d290(),  iVar1 == 0)))) {\n            iVar1 = fcn.00037ae0(*0x8508fab0 + 0x14);\n            if (iVar1 == 0) {\n                iVar1 = -1;\n            }\n            else {\n                iVar1 = fcn.0001d450(arg_8h, arg_ch);\n            }\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 213
    },
    "0001d5e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0001d5e0(void)\n\n{\n    char cVar1;\n    uint var_78h;\n    uint var_70h;\n    uint *var_6ch;\n    uint var_68h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0x8500d924;\n    var_4h = 0;\n    fcn.0002c3d0(&var_68h, 0x52);\n    var_6ch = &var_68h;\n    do {\n        cVar1 = *var_6ch;\n        var_6ch = var_6ch + 1;\n    } while (cVar1 != '\\0');\n    var_ch = fcn.0007c770(0x8509263c, &var_8h, &var_68h, var_6ch + (1 - (&var_68h + 1)), 1);\n    if (var_ch == 0) {\n        var_ch = fcn.0007cdf0(*0x8509263c, 0x85019690, 0, 0);\n    }\n    return var_ch;\n}\n",
        "token_count": 269
    },
    "0001d690": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0001d690(uint arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h, int32_t *arg_18h, int32_t *arg_1ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint *var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_18h = 0x21590001;\n    *arg_18h = 0;\n    *arg_1ch = 0;\n    if (arg_ch < 100) {\n        var_8h = 0;\n        while (var_8h == 0) {\n            if (*0x8508f9b4 == arg_ch) {\n                uVar3 = (**0x8508f9b8)(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, 0);\n                return uVar3;\n            }\n            var_8h = 1;\n        }\n    }\n    else {\n        var_4h = 0;\n        var_ch = 0;\n        var_14h = 0;\n        if (arg_14h == 0) {\n            var_10h = NULL;\n        }\n        else {\n            var_10h = fcn.0002fa50(arg_10h, arg_14h);\n            if (var_10h == NULL) {\n                return 0xffffffff;\n            }\n        }\n        var_18h = fcn.0002b8f0(arg_8h, arg_ch, var_10h, &var_14h, &var_4h, &var_ch, 0);\n        iVar2 = fcn.0007d560(arg_8h, &var_14h, 4, 0);\n        if (iVar2 == 0) {\n            if (0 < var_ch) {\n                iVar2 = fcn.0007d4e0(arg_8h, var_ch, 0);\n                *arg_18h = iVar2;\n                if (*arg_18h == 0) {\n                    var_18h = 0x21590004;\n                }\n                else {\n                    fcn.0007f904(*arg_18h, var_4h, var_ch);\n                    *arg_1ch = var_ch;\n                }\n            }\n        }\n        else {\n            var_18h = 0xffffffff;\n            fcn.0007d500(arg_8h, *arg_18h, 0);\n            *arg_18h = 0;\n            *arg_1ch = 0;\n        }\n        fcn.00036460(var_4h);\n        while (var_10h != NULL) {\n            puVar1 = *var_10h;\n            if (var_10h[4] != var_10h + 5) {\n                fcn.00036460(var_10h[4]);\n            }\n            fcn.00036460(var_10h);\n            var_10h = puVar1;\n        }\n    }\n    return var_18h;\n}\n",
        "token_count": 730
    },
    "0001d900": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0001d900(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    var_4h = 0;\n    iVar1 = fcn.0007d5f0(arg_8h, 0xe, &var_8h, 8, 0);\n    if (iVar1 == 0) {\n        fcn.0007cb90(0x85092848, 0);\n        *0x85092848 = var_8h;\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 155
    },
    "0001d950": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.0001d950(uint noname_0, uint arg_ch, uint arg_10h, uint *arg_14h, int32_t *arg_18h, int32_t *arg_1ch)\n\n{\n    int32_t iVar1;\n    uint var_758h;\n    int32_t var_214h;\n    int32_t var_210h;\n    uint *var_20ch;\n    uint var_208h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.0002fbb0(arg_10h, &var_758h, &var_208h);\n    if (iVar1 == 0) {\n        var_214h = -1;\n    }\n    else {\n        var_214h = fcn.0007d340(*0x85092848, arg_ch, &var_208h, &var_8h, 0);\n        if (var_214h == 0) {\n            var_214h = fcn.0007d060(*0x85092848, var_8h, &var_20ch, &var_210h, 0xffffffff, 0);\n            if (var_214h == 0) {\n                if (var_210h == 4) {\n                    *arg_14h = *var_20ch;\n                }\n                fcn.0007d2c0(*0x85092848, var_20ch);\n            }\n            var_214h = fcn.0007d1f0(*0x85092848, var_8h, &var_4h, &var_20ch, &var_210h, 0xffffffff, 0);\n            if (var_214h == 0) {\n                var_214h = var_4h;\n                if (0 < var_210h) {\n                    iVar1 = fcn.00036330(var_210h);\n                    *arg_18h = iVar1;\n                    if (*arg_18h == 0) {\n                        var_214h = 0x21590004;\n                    }\n                    else {\n                        fcn.0007f904(*arg_18h, var_20ch, var_210h);\n                        *arg_1ch = var_210h;\n                    }\n                }\n                fcn.0007d2c0(*0x85092848, var_20ch);\n            }\n        }\n    }\n    return var_214h;\n}\n",
        "token_count": 546
    },
    "0001db20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0001db20(uint noname_0, uint noname_1, uint arg_10h, uint *arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int32_t iVar1;\n    uint var_74h;\n    int32_t var_70h;\n    int32_t var_6ch;\n    int32_t var_65h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint32_t var_24h;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint *var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    *arg_14h = 3;\n    iVar1 = fcn.000209a0(arg_10h, 0x17, 4, &var_74h, 0);\n    if (iVar1 == 0) {\n        var_6ch = 0x21590065;\n    }\n    else {\n        iVar1 = fcn.00020a10(arg_10h, 0x19, 1, &var_65h, 1);\n        if (iVar1 == 0) {\n            var_65h._0_1_ = 0;\n        }\n        iVar1 = fcn.000209a0(arg_10h, 0x18, 4, &var_28h, 0);\n        if (iVar1 == 0) {\n            var_28h = 0;\n        }\n        iVar1 = fcn.00020a10(arg_10h, 0x23, 8, &var_70h, 4);\n        if (iVar1 == 0) {\n            var_70h = 0;\n        }\n        iVar1 = fcn.00020a10(arg_10h, 0x24, 2, &var_65h + 1, 4);\n        if (iVar1 == 0) {\n            stack0xffffff98 = 0;\n        }\n        var_10h = 0;\n        var_ch = NULL;\n        var_8h = 0;\n        var_4h = 0;\n        var_6ch = fcn.00019bd0(var_74h, var_28h, &stack0xffffff00 | var_65h, -(var_70h != 0) & &var_70h, &var_14h);\n        if (var_6ch == 0) {\n            iVar1 = fcn.00018d90(var_14h, -(var_70h != 0) & &var_70h);\n            var_20h = iVar1 + 1;\n            var_10h = 7;\n            var_ch = &var_60h;\n            fcn.0007f916(&var_60h);\n            var_60h = 0x1f;\n            var_5ch = 4;\n            var_58h = 0x32;\n            var_54h = 4;\n            var_50h = 0x1b;\n            var_4ch = 2;\n            var_48h = 0x33;\n            var_44h = 8;\n            var_40h = 0x34;\n            var_3ch = 8;\n            var_38h = 0x35;\n            var_34h = 8;\n            var_30h = 0x36;\n            var_2ch = 8;\n            var_4h = fcn.00036420(var_20h, 4);\n            if (var_4h == 0) {\n                var_6ch = 0x21590004;\n            }\n            else {\n                fcn.0007f916(var_4h);\n                var_18h = 0;\n                fcn.000191c0(var_14h, var_4h, -(var_70h != 0) & &var_70h, stack0xffffff98, \n                             -(stack0xffffff98 != 0) & &var_18h);\n                for (var_1ch = 0; (*(var_4h + var_1ch * 4) != 0 && (var_1ch < var_20h)); var_1ch = var_1ch + 1) {\n                }\n                var_8h = var_1ch;\n                var_6ch = fcn.0002f660(&var_10h, arg_18h, arg_1ch);\n            }\n        }\n        if (var_14h != 0) {\n            for (var_24h = 0; *(var_14h + var_24h * 4) != 0; var_24h = var_24h + 1) {\n                fcn.00019ef0(*(var_14h + var_24h * 4));\n            }\n            fcn.00036460(var_14h);\n        }\n        if (var_4h != 0) {\n            for (var_24h = 0; var_24h < var_8h; var_24h = var_24h + 1) {\n                if (*(var_4h + var_24h * 4) != 0) {\n                    fcn.00036460(*(var_4h + var_24h * 4));\n                }\n            }\n            fcn.00036460(var_4h);\n        }\n    }\n    return var_6ch;\n}\n",
        "token_count": 1336
    },
    "0001de50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0001de50(void)\n\n{\n    char cVar1;\n    char *pcVar2;\n    char *pcVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint var_44h;\n    char *var_40h;\n    char *var_3ch;\n    uint var_38h;\n    uint var_30h;\n    char *var_2ch;\n    char *var_28h;\n    uint var_24h;\n    char *var_20h;\n    char *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_18h = 0x8500d928;\n    var_14h = 0x8500d930;\n    var_10h = 0x8500d938;\n    var_ch = 0x8500d944;\n    *0x8509286c = fcn.000299b0(6, 2);\n    for (var_8h = 0; var_8h < *0x85092864; var_8h = var_8h + 1) {\n        fcn.00036460(*(*0x85092868 + var_8h * 4));\n    }\n    fcn.00036460(*0x85092868);\n    *0x85092868 = fcn.00036330(0x10);\n    if (*0x85092868 != 0) {\n        for (var_8h = 0; var_8h < 4; var_8h = var_8h + 1) {\n            var_2ch = (&var_18h)[var_8h];\n            pcVar3 = var_2ch + 1;\n            do {\n                cVar1 = *var_2ch;\n                var_2ch = var_2ch + 1;\n            } while (cVar1 != '\\0');\n            uVar4 = fcn.00036330(var_2ch + (1 - pcVar3));\n            *(*0x85092868 + var_8h * 4) = uVar4;\n            if (*(*0x85092868 + var_8h * 4) == 0) {\n                *0x85092864 = var_8h;\n                return;\n            }\n            var_3ch = (&var_18h)[var_8h];\n            var_40h = *(*0x85092868 + var_8h * 4);\n            do {\n                cVar1 = *var_3ch;\n                *var_40h = cVar1;\n                var_3ch = var_3ch + 1;\n                var_40h = var_40h + 1;\n            } while (cVar1 != '\\0');\n        }\n        *0x85092864 = var_8h;\n        iVar5 = fcn.000295a0(7, 0, 0, &var_20h);\n        if (((iVar5 == 0) && (var_20h != NULL)) && (pcVar3 = fcn.00036330(var_20h),  pcVar3 != NULL)) {\n            iVar5 = fcn.000295a0(7, pcVar3, var_20h, &var_20h);\n            if (iVar5 == 0) {\n                var_4h = 0;\n                var_1ch = pcVar3;\n                for (var_28h = pcVar3; *var_28h != '\\0'; var_28h = var_28h + 1) {\n                    if ((*var_28h == ';') && (1 < var_28h - var_1ch)) {\n                        var_1ch = var_28h + 1;\n                        var_4h = var_4h + 1;\n                    }\n                }\n                iVar5 = fcn.00018d00(0x85092868, 8, var_4h * 4 + 8);\n                var_28h = pcVar3;\n                pcVar2 = pcVar3;\n                if (iVar5 == -1) {\n                    fcn.00036460(pcVar3);\n                }\n                else {\n                    for (; var_1ch = pcVar2,  *var_28h != '\\0'; var_28h = var_28h + 1) {\n                        if ((*var_28h == ';') && (1 < var_28h - var_1ch)) {\n                            *var_28h = '\\0';\n                            var_20h = var_28h + (1 - var_1ch);\n                            uVar4 = fcn.00036330(var_20h);\n                            *(*0x85092868 + *0x85092864 * 4) = uVar4;\n                            if (*(*0x85092868 + *0x85092864 * 4) != 0) {\n                                fcn.0007f904(*(*0x85092868 + *0x85092864 * 4), var_1ch, var_20h);\n                                fcn.0007f7c6(*(*0x85092868 + *0x85092864 * 4));\n                                *0x85092864 = *0x85092864 + 1;\n                            }\n                            var_1ch = var_28h + 1;\n                        }\n                        pcVar2 = var_1ch;\n                    }\n                    fcn.00036460(pcVar3);\n                }\n            }\n            else {\n                fcn.00036460(pcVar3);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 1255
    },
    "0001e180": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0001e180(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    fcn.0001de50();\n    iVar1 = fcn.00020a10(arg_10h, 2, 2, &var_14h, 4);\n    if (iVar1 == 0) {\n        var_4h = 0;\n    }\n    else {\n        iVar1 = fcn.00020a10(arg_10h, 0x4a, 3, &var_ch, 4);\n        if (iVar1 == 0) {\n            var_ch = fcn.000299b0(6, 2);\n        }\n        fcn.000382a0(0x85092850, &var_8h, 1);\n        if (var_ch == 0) {\n            if (*0x8509285c == 0) {\n                var_4h = 0;\n            }\n            else {\n                for (var_10h = 0; (var_10h < *0x8509285c && (*(*0x85092860 + var_10h * 8) != var_14h));\n                    var_10h = var_10h + 1) {\n                }\n                for (; var_10h < *0x8509285c - 1; var_10h = var_10h + 1) {\n                    fcn.0007f70c(*0x85092860 + var_10h * 8, *0x85092860 + 8 + var_10h * 8, 8);\n                }\n                if (var_10h < *0x8509285c) {\n                    *0x8509285c = *0x8509285c - 1;\n                    fcn.00036390(0x85092860, *0x8509285c * 8 + 8, *0x8509285c * 8);\n                }\n            }\n        }\n        else {\n            for (var_10h = 0; var_10h < *0x8509285c; var_10h = var_10h + 1) {\n                if (*(*0x85092860 + var_10h * 8) == var_14h) {\n                    *(*0x85092860 + 4 + var_10h * 8) = var_ch;\n                    var_4h = 0;\n                    goto code_r0x0001e360;\n                }\n            }\n            iVar1 = fcn.00036390(0x85092860, *0x8509285c << 3, *0x8509285c * 8 + 8);\n            if (iVar1 == -1) {\n                var_4h = 0x21590004;\n            }\n            else {\n                *(*0x85092860 + *0x8509285c * 8) = var_14h;\n                *(*0x85092860 + 4 + *0x8509285c * 8) = var_ch;\n                *0x8509285c = *0x8509285c + 1;\n            }\n        }\ncode_r0x0001e360:\n        fcn.000382d0(0x85092850, &var_8h, 1);\n    }\n    return var_4h;\n}\n",
        "token_count": 800
    },
    "0001e380": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0001e380(uint noname_0, uint noname_1, uint arg_10h, uint *arg_14h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_14h != NULL) {\n        *arg_14h = 0;\n    }\n    iVar1 = fcn.00020a10(arg_10h, 2, 2, &var_ch, 4);\n    if (iVar1 == 0) {\n        uVar2 = 0x21590065;\n    }\n    else {\n        iVar1 = fcn.00020a10(arg_10h, 0x3c, 2, &var_8h, 4);\n        if (iVar1 == 0) {\n            uVar2 = 0x21590066;\n        }\n        else {\n            var_4h = fcn.0001a340(var_ch, var_8h);\n            uVar2 = fcn.0007f742(var_4h);\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 259
    },
    "0001e440": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0001e440(int32_t arg_8h)\n\n{\n    fcn.0001d260(0);\n    fcn.00017010(arg_8h == 0);\n    if (arg_8h != 0) {\n        (**(arg_8h + 0x2c))(arg_8h, 0);\n        fcn.00036460(arg_8h);\n    }\n    return 0;\n}\n",
        "token_count": 100
    },
    "0001e4c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0001e4c0(uint noname_0, uint noname_1, uint arg_10h, uint *arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    ushort *var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    *arg_14h = 0;\n    iVar1 = fcn.000209a0(arg_10h, 4, 5, &var_24h, &var_8h);\n    if (iVar1 == 0) {\n        var_4h = 0x21590065;\n    }\n    else {\n        var_4h = fcn.00060280(var_24h, var_8h);\n        if (var_4h == 0) {\n            var_18h = fcn.0005ffa0(var_24h);\n            var_20h = fcn.00036360(var_18h);\n            if (var_20h == 0) {\n                var_4h = 0x21590004;\n            }\n            else {\n                fcn.0007f916(var_20h, 0, var_18h);\n                var_4h = fcn.00060080(var_20h, var_24h);\n                if (((var_4h == 0) && (var_4h = fcn.0005f970(var_20h, var_20h),  var_4h == 0)) &&\n                   (var_4h = fcn.0005fb80(0, var_20h),  var_4h == 0)) {\n                    var_ch = fcn.00036330(0xa8);\n                    if (var_ch == NULL) {\n                        var_4h = 0x21590004;\n                    }\n                    else {\n                        *(var_ch + 6) = var_20h;\n                        *(var_ch + 8) = var_18h;\n                        *var_ch = 0;\n                        var_ch[1] = 0;\n                        *(var_ch + 10) = var_20h;\n                        *(var_ch + 4) = var_18h;\n                        var_1ch = var_24h + *(var_24h + 0x3c);\n                        *(var_ch + 0x16) = var_20h + *(var_1ch + 0x28);\n                        iVar1 = fcn.0001a700(&var_14h, 0x8501a440, var_ch);\n                        if (iVar1 == 0) {\n                            fcn.00038370(&var_14h);\n                        }\n                        var_4h = 0;\n                    }\n                }\n                if (var_4h != 0) {\n                    fcn.00036460(var_20h);\n                }\n            }\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 675
    },
    "0001e660": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nint32_t fcn.0001e660(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t var_4h;\n    \n    if (*0x8509284e != '\\0') {\n        return 0;\n    }\n    uVar3 = 0x850928bc;\n    fcn.000380a0(0x850928bc);\n    uVar2 = 0x85092850;\n    fcn.000380a0(0x85092850);\n    var_4h = fcn.0001b590(uVar2, uVar3, 0xc0000001);\n    if ((var_4h == 0) &&\n       (var_4h = fcn.00067b30(1, *(*0x8508fab0 + 0xc), 0x8500d94c, 0x8501af00, 0x8509287c),  var_4h == 0)) {\n        fcn.00068540(*0x8509287c);\n        var_4h = fcn.00067b30(1, *(*0x8508fab0 + 0xc), 0x8500d958, 0x8501b040, 0x85092870);\n        if (var_4h == 0) {\n            fcn.00068540(*0x85092870);\n            iVar1 = fcn.00035da0();\n            if (0x22 < iVar1) {\n                var_4h = fcn.00067b30(1, *(*0x8508fab0 + 0xc), 0x8500d974, 0x8501afe0, 0x85092884);\n                if (var_4h != 0) goto code_r0x0001e800;\n                fcn.00068540(*0x85092884);\n            }\n            var_4h = fcn.00067b30(1, *(*0x8508fab0 + 0xc), 0x8500d990, 0x8501ace0, 0x85092874);\n            if (var_4h == 0) {\n                fcn.00068540(*0x85092874);\n                var_4h = fcn.00067b30(1, *(*0x8508fab0 + 0xc), 0x8500d88c, 0x8501ba60, 0x85092880);\n                if (var_4h == 0) {\n                    fcn.00068540(*0x85092880);\n                    var_4h = fcn.00067c30(*0x8500d140, 0x8501ad90, 0x85092878);\n                    if (var_4h == 0) {\n                        fcn.00068540(*0x85092878);\n                        *0x8509284e = '\\x01';\n                        var_4h = 0;\n                    }\n                }\n            }\n        }\n    }\ncode_r0x0001e800:\n    if (var_4h != 0) {\n        fcn.0001ead0();\n    }\n    return var_4h;\n}\n",
        "token_count": 730
    },
    "0001e820": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0001e820(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t var_8h;\n    uint var_4h;\n    \n    if (*0x8509284f != '\\0') {\n        return 0;\n    }\n    fcn.000173e0();\n    fcn.00018380();\n    iVar1 = fcn.00035b80(0x8500d714, &fcn.0001e820::var_4h);\n    if (iVar1 != 0) {\n        return iVar1;\n    }\n    var_8h = fcn.000684e0(1, var_4h, 0x8500d998, 0x850928a0);\n    if ((((((var_8h == 0) && (var_8h = fcn.000684e0(1, var_4h, 0x8500d9b0, 0x850928a8),  var_8h == 0)) &&\n          (var_8h = fcn.000684e0(1, var_4h, 0x8500d9c4, 0x850928a4),  var_8h == 0)) &&\n         ((var_8h = fcn.000684e0(1, var_4h, 0x8500d9d4, 0x85092894),  var_8h == 0 &&\n          (var_8h = fcn.000684e0(1, var_4h, 0x8500d9e4, 0x85092898),  var_8h == 0)))) &&\n        ((var_8h = fcn.000684e0(1, var_4h, 0x8500d9f4, 0x8509289c),  var_8h == 0 &&\n         ((var_8h = fcn.000684e0(1, var_4h, 0x8500da04, 0x850928ac),  var_8h == 0 &&\n          (var_8h = fcn.000684e0(1, var_4h, 0x8500da14, 0x850928b8),  var_8h == 0)))))) &&\n       ((iVar1 = fcn.00035da0(),  iVar1 < 0x1b ||\n        (var_8h = fcn.000684e0(1, var_4h, 0x8500da30, 0x850928b0),  var_8h == 0)))) {\n        uVar2 = 0x1e9c0;\n        var_8h = fcn.00067b30(1, var_4h, 0x8500da04, 0x8501b880, 0x8509288c);\n        if (var_8h == 0) {\n            fcn.00068540(uVar2);\n            iVar1 = fcn.00035da0();\n            if (0x1a < iVar1) {\n                uVar2 = 0x1e9fd;\n                var_8h = fcn.00067b30(1, var_4h, 0x8500da44, 0x8501b930, 0x85092888);\n                if (var_8h != 0) goto code_r0x0001ea73;\n                fcn.00068540(uVar2);\n            }\n            var_8h = fcn.000684e0(1, var_4h, 0x8500da58, 0x850928b4);\n            if ((var_8h == 0) &&\n               (var_8h = fcn.00067b30(0x1ea4e, var_4h, 0x8500da58, 0x8501ac30, 0x85092890),  var_8h == 0)) {\n                fcn.00068540(*0x85092890);\n                *0x8509284f = '\\x01';\n                var_8h = 0;\n            }\n        }\n    }\ncode_r0x0001ea73:\n    if (var_8h != 0) {\n        fcn.00068540(*0x85092890);\n        fcn.00068090(0x85092890);\n        fcn.00068540(*0x85092888);\n        fcn.00068090(0x85092888);\n        fcn.00068540(*0x8509288c);\n        fcn.00068090(0x8509288c);\n    }\n    return var_8h;\n}\n",
        "token_count": 1057
    },
    "0001ec30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0001ec30(uint noname_0, int32_t arg_ch)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t extraout_ECX;\n    uint var_9h;\n    \n    if (((arg_ch == 0) || (arg_ch == 1)) || (arg_ch == 2)) {\n        var_9h._0_1_ = (**0x8500d0cc)();\n        if ((var_9h != 0) &&\n           (cVar1 = (**0x8500d13c)(*(**0x8500d14c + 0x88), *(**0x8500d14c + 0x8c), extraout_ECX & 0xffffff00 | var_9h), \n           cVar1 == '\\0')) {\n            return 0xc0000061;\n        }\n        *0x8509284d = 1;\n        iVar3 = fcn.0001a700(&var_9h + 1, 0x85019260, 0);\n        if (iVar3 == 0) {\n            fcn.000383c0(&var_9h + 1, 0);\n            fcn.00038370(&var_9h + 1);\n        }\n        fcn.0006b4a0();\n        uVar2 = (**0x850928b4)(arg_ch);\n    }\n    else {\n        uVar2 = 0xc000000d;\n    }\n    return uVar2;\n}\n",
        "token_count": 353
    },
    "0001ece0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0001ece0(uint arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint var_4h;\n    \n    if (((arg_ch != 0) && (arg_ch != -1)) && (cVar1 = fcn.0001b830(arg_ch, 1),  cVar1 != '\\0')) {\n        return 0;\n    }\n    if (*0x8509284d == '\\0') {\n        fcn.0006a260();\n    }\n    pcVar2 = fcn.000684a0(arg_8h);\n    uVar3 = (*pcVar2)(arg_8h, arg_ch);\n    return uVar3;\n}\n",
        "token_count": 170
    },
    "0001ed90": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall\nfcn.0001ed90(uint param_1, uint32_t param_2, uint param_3, int32_t param_4, int32_t param_5, uint8_t param_6, \n            uint param_7, uint param_8, uint32_t param_9, uint *param_10)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint var_8h;\n    int32_t var_ch;\n    int32_t var_10h;\n    uint var_14h;\n    uint var_18h_2;\n    uint var_1ch_2;\n    uint32_t var_20h_2;\n    uint *var_24h_2;\n    uint var_18h;\n    uint *puVar5;\n    int32_t iVar6;\n    uint uVar7;\n    int32_t var_3ch;\n    uint var_38h;\n    uint var_30h;\n    uint var_2ch;\n    uint *var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uchar *puStack28;\n    uint var_10h_2;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x8507ba18;\n    uStack16 = 0x8507b910;\n    var_10h_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_10h_2;\n    puStack28 = &stack0xffffffb0;\n    cVar1 = fcn.00033b50(var_ch, param_2 & 0xffffff00 | var_14h, &var_38h, &var_3ch);\n    if (cVar1 == '\\0') {\n        uVar2 = var_20h_2 & 0xffffff00 | var_14h;\n        iVar4 = var_ch;\n        iVar6 = var_10h;\n        puVar5 = var_24h_2;\n        pcVar3 = fcn.000684a0(var_8h);\n        var_3ch = (*pcVar3)(var_8h, iVar4, iVar6, uVar2, var_18h_2, var_1ch_2, var_20h_2, puVar5);\n        if ((((var_3ch == 0) && (var_14h == 1)) && (iVar4 = fcn.0007f72a(),  iVar4 != *(*0x8508fab0 + 0x14))) &&\n           ((var_10h == 0 || (var_10h == **0x8500d08c)))) {\n            var_4h = 0;\n            fcn.000185a0(var_ch, *var_24h_2);\n        }\n    }\n    else if (var_3ch == 0) {\n        var_30h = 0x18;\n        var_2ch = 0;\n        var_24h = *(var_ch + 0xc);\n        var_28h = &var_38h;\n        var_20h = *(var_ch + 0x10);\n        var_1ch = 0;\n        uVar7 = 0;\n        puVar5 = &var_30h;\n        pcVar3 = fcn.000684a0(var_8h);\n        var_3ch = (*pcVar3)(var_8h, puVar5, var_10h, uVar7, var_18h_2, var_1ch_2, var_20h_2, var_24h_2);\n        fcn.00034190(&var_38h);\n    }\n    *in_FS_OFFSET = var_10h_2;\n    return var_3ch;\n}\n",
        "token_count": 871
    },
    "0001efe0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0001efe0(uint arg_8h, uint arg_ch, int32_t arg_10h, uint32_t *arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint32_t *puVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = arg_10h;\n    puVar3 = arg_14h;\n    pcVar1 = fcn.000684a0(arg_8h);\n    iVar2 = (*pcVar1)(arg_8h, arg_ch, iVar2, puVar3, arg_18h, arg_1ch);\n    if ((iVar2 == 0) && (arg_10h == 0x22)) {\n        *arg_14h = *arg_14h | 0x20;\n    }\n    return iVar2;\n}\n",
        "token_count": 209
    },
    "0001f040": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0001f040(uint param_1, int32_t param_2, uint32_t *param_3, int32_t param_4, int32_t *param_5)\n\n{\n    uint32_t uVar1;\n    bool bVar2;\n    bool bVar3;\n    char cVar4;\n    code *pcVar5;\n    uint uVar6;\n    int32_t iVar7;\n    uint32_t *puVar8;\n    uint32_t *puVar9;\n    uint *in_FS_OFFSET;\n    uint var_8h;\n    int32_t var_ch;\n    uint32_t *var_10h;\n    int32_t var_14h;\n    int32_t *var_18h_2;\n    uint var_18h;\n    int32_t iVar10;\n    int32_t *piVar11;\n    uint var_64h;\n    uint var_5ch;\n    uint32_t var_58h;\n    uint32_t var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint32_t var_48h;\n    uint32_t var_44h;\n    uint var_40h;\n    uint32_t *var_3ch;\n    uint32_t *var_38h;\n    uint32_t *var_34h;\n    int32_t var_30h;\n    int32_t var_29h;\n    int32_t var_24h;\n    int32_t var_1ch;\n    uint var_10h_2;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x8507ba08;\n    uStack16 = 0x8507b910;\n    var_10h_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_10h_2;\n    var_30h = 0;\n    var_1ch = 0;\n    bVar3 = false;\n    bVar2 = false;\n    iVar7 = var_ch;\n    puVar8 = var_10h;\n    iVar10 = var_14h;\n    piVar11 = var_18h_2;\n    pcVar5 = fcn.000684a0(var_8h);\n    *NULL = (*pcVar5)(var_8h, iVar7, puVar8, iVar10, piVar11);\n    if ((*NULL != 0) || (cVar4 = fcn.0001f7c0(),  cVar4 != '\\0')) goto code_r0x0001f40e;\n    var_4h = 0;\n    cVar4 = (**0x8500d0cc)();\n    if (cVar4 == '\\0') {\ncode_r0x0001f161:\n        if (var_18h_2 == NULL) {\n            var_24h = var_14h;\n        }\n        else {\n            var_24h = *var_18h_2;\n        }\n        if (var_ch == 5) {\n            var_34h = var_10h;\n            var_3ch = NULL;\n            do {\n                if (*var_34h == 0) {\n                    var_38h = NULL;\n                }\n                else {\n                    var_38h = var_34h + *var_34h;\n                }\n                if ((var_34h[0xf] == 0) || (iVar7 = fcn.0001f600(var_34h[0xf], var_34h[0x11]),  iVar7 == 0)) {\n                    var_3ch = var_34h;\n                }\n                else if (var_3ch == NULL) {\n                    var_3ch = var_34h;\n                }\n                else if (var_38h == NULL) {\n                    *var_3ch = 0;\n                    var_38h = NULL;\n                }\n                else {\n                    *var_3ch = *var_3ch + *var_34h;\n                }\n                var_34h = var_38h;\n            } while (var_38h != NULL);\n        }\n        else if (var_ch == 0x10) {\n            uVar1 = *var_10h;\n            var_48h = 0;\n            for (var_44h = 0; var_44h < uVar1; var_44h = var_44h + 1) {\n                iVar7 = fcn.0001f780(var_10h[var_44h * 4 + 3], var_10h[var_44h * 4 + 1], \n                                     *(var_10h + var_44h * 0x10 + 10));\n                if (iVar7 == 0) {\n                    if (var_44h != var_48h) {\n                        puVar9 = var_10h + var_44h * 4 + 1;\n                        puVar8 = var_10h + var_48h * 4 + 1;\n                        *puVar8 = *puVar9;\n                        puVar8[1] = puVar9[1];\n                        puVar8[2] = puVar9[2];\n                        puVar8[3] = puVar9[3];\n                    }\n                    var_48h = var_48h + 1;\n                }\n            }\n            *var_10h = var_48h;\n            var_24h = var_48h * 4 + 4;\n        }\n        else if (var_ch == 0x40) {\n            uVar1 = *var_10h;\n            var_58h = 0;\n            for (var_54h = 0; var_54h < uVar1; var_54h = var_54h + 1) {\n                iVar7 = fcn.0001f780(var_10h[var_54h * 7 + 2], var_10h[var_54h * 7 + 3], var_10h[var_54h * 7 + 4]);\n                if (iVar7 == 0) {\n                    if (var_54h != var_58h) {\n                        puVar8 = var_10h + var_54h * 7 + 1;\n                        puVar9 = var_10h + var_58h * 7 + 1;\n                        for (iVar7 = 7; iVar7 != 0; iVar7 = iVar7 + -1) {\n                            *puVar9 = *puVar8;\n                            puVar8 = puVar8 + 1;\n                            puVar9 = puVar9 + 1;\n                        }\n                    }\n                    var_58h = var_58h + 1;\n                }\n            }\n            *var_10h = var_58h;\n            var_24h = var_58h * 4 + 4;\n        }\n        if (var_18h_2 != NULL) {\n            *var_18h_2 = var_24h;\n        }\n    }\n    else {\n        if (var_18h_2 != NULL) {\n            var_30h = (**0x8500d290)(var_18h_2, 4, 0, 0, 0);\n            if (var_30h == 0) {\n                unique0x00007a00 = -0x3fffff66;\n                goto code_r0x0001f40e;\n            }\n            uVar6 = (**0x8500d0cc)(2);\n            (**0x8500d29c)(var_30h, uVar6);\n            bVar3 = true;\n        }\n        var_1ch = (**0x8500d290)(var_10h, var_14h, 0, 0, 0);\n        if (var_1ch != 0) {\n            uVar6 = (**0x8500d0cc)(2);\n            (**0x8500d29c)(var_1ch, uVar6);\n            bVar2 = true;\n            goto code_r0x0001f161;\n        }\n        stack0xffffffd4 = -0x3fffff66;\n    }\n    var_4h = 0xffffffff;\n    if (bVar2) {\n        (**0x8500d298)(var_1ch);\n    }\n    if (var_1ch != 0) {\n        (**0x8500d2a8)(var_1ch);\n    }\n    if (bVar3) {\n        (**0x8500d298)(var_30h);\n    }\n    if (var_30h != 0) {\n        (**0x8500d2a8)(var_30h);\n    }\ncode_r0x0001f40e:\n    *in_FS_OFFSET = var_10h_2;\n    return *NULL;\n}\n",
        "token_count": 1939
    },
    "0001f430": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0001f430(uint arg_8h)\n\n{\n    char *pcVar1;\n    int32_t iVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_18h;\n    char *var_14h;\n    uint var_10h;\n    uint var_8h;\n    char *var_4h;\n    \n    if (*0x850928d0 == NULL) {\n        fcn.0002c2e0(0x85090228, 0x52);\n        var_4h = 0x85090228;\n        pcVar1 = var_4h;\n        do {\n            var_4h = pcVar1;\n            pcVar1 = var_4h + 1;\n        } while (*var_4h != '\\0');\n        *0x850928d0 = var_4h + 0x7af6fdd8;\n        fcn.0002c310(0x85090328, 0x52);\n        var_14h = 0x85090328;\n        pcVar1 = var_14h;\n        do {\n            var_14h = pcVar1;\n            pcVar1 = var_14h + 1;\n        } while (*var_14h != '\\0');\n        *0x85090224 = var_14h + 0x7af6fcd8;\n    }\n    iVar2 = fcn.0007f7cc(arg_8h, 0x85090228, *0x850928d0);\n    if ((iVar2 != 0) && (iVar2 = fcn.0007f7cc(arg_8h, 0x85090328, *0x85090224),  iVar2 != 0)) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 404
    },
    "0001f510": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0001f510(uint arg_8h)\n\n{\n    int16_t *piVar1;\n    int32_t iVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_18h;\n    int16_t *var_14h;\n    uint var_10h;\n    uint var_8h;\n    int16_t *var_4h;\n    \n    if (*0x850928d4 == 0) {\n        fcn.0002c340(0x85090380, 0x52);\n        var_4h = 0x85090380;\n        piVar1 = var_4h;\n        do {\n            var_4h = piVar1;\n            piVar1 = var_4h + 1;\n        } while (*var_4h != 0);\n        *0x850928d4 = var_4h + 0x3d7b7e40 >> 1;\n        fcn.0002c370(0x85090280, 0x52);\n        var_14h = 0x85090280;\n        piVar1 = var_14h;\n        do {\n            var_14h = piVar1;\n            piVar1 = var_14h + 1;\n        } while (*var_14h != 0);\n        *0x8509027c = var_14h + 0x3d7b7ec0 >> 1;\n    }\n    iVar2 = fcn.00037140(arg_8h, 0x85090380, *0x850928d4);\n    if ((iVar2 != 0) && (iVar2 = fcn.00037140(arg_8h, 0x85090280, *0x8509027c),  iVar2 != 0)) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 415
    },
    "0001f600": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0001f600(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t var_11ch;\n    uint var_118h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    var_ch = 0;\n    var_11ch = fcn.0001f510(arg_8h);\n    if (var_11ch == 0) {\n        fcn.000382a0(0x85092850, &var_4h, 0);\n        var_8h = *0x8509285c;\n        for (var_10h = 0; var_10h < *0x8509285c; var_10h = var_10h + 1) {\n            if (*(*0x85092860 + var_10h * 8) == arg_ch) {\n                var_ch = *(*0x85092860 + 4 + var_10h * 8);\n                break;\n            }\n        }\n        fcn.000382d0(0x85092850, &var_4h, 0);\n        if (var_8h <= var_10h) {\n            return 0;\n        }\n    }\n    else {\n        var_ch = *0x8509286c;\n    }\n    if (var_ch == 1) {\n        var_11ch = 1;\n    }\n    else if (var_ch == 0) {\n        var_11ch = 0;\n    }\n    else if (var_ch == 2) {\n        var_11ch = 0;\n        iVar1 = fcn.000379b0(&var_118h, 0x104);\n        if (iVar1 == 0) {\n            var_11ch = 1;\n        }\n        else {\n            fcn.0007f7c6(&var_118h);\n            for (var_10h = 0; var_10h < *0x85092864; var_10h = var_10h + 1) {\n                iVar1 = fcn.0007f7d2(&var_118h, *(*0x85092868 + var_10h * 4));\n                if (iVar1 != 0) {\n                    return 1;\n                }\n            }\n        }\n    }\n    return var_11ch;\n}\n",
        "token_count": 538
    },
    "0001f880": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.0001f880(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint32_t arg_28h)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t var_24h;\n    int32_t *var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = in_EAX & 0xffffff00 | arg_28h & 0xff;\n    uVar4 = arg_18h;\n    pcVar2 = fcn.000684a0(arg_8h);\n    var_1ch = (*pcVar2)(arg_8h, arg_ch, arg_10h, arg_14h, uVar4, arg_1ch, arg_20h, arg_24h, uVar1);\n    if (var_1ch == 0) {\n        iVar3 = (**0x8500d2a0)(arg_18h, 0, 0, 0, &var_24h, 0);\n        if (iVar3 == 0) {\n            var_20h = var_24h + 0x50;\n            if (*(var_24h + 0x54) == *var_20h) {\n                iVar3 = fcn.0007f75a(arg_18h, 0, &var_18h, 0x18, 0);\n                if (iVar3 == 0) {\n                    fcn.0001fae0(var_4h, var_8h, 1);\n                }\n            }\n            (**0x8500d2e4)();\n        }\n    }\n    return var_1ch;\n}\n",
        "token_count": 447
    },
    "0001f930": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0001f930(uint param_1, uint *param_2, uint param_3, uint param_4, uint param_5, uint param_6, uint param_7, \n                    uint param_8, uint param_9, uint param_10, uint param_11, uint param_12)\n\n{\n    char cVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint var_8h;\n    uint *var_ch;\n    uint var_10h;\n    uint var_14h;\n    uint var_18h_2;\n    uint var_1ch;\n    uint var_20h;\n    uint var_24h;\n    uint var_28h;\n    uint var_2ch;\n    uint var_30h;\n    uint var_18h;\n    uint *puVar4;\n    uint var_3ch;\n    uint var_38h;\n    int32_t var_34h;\n    uint var_30h_2;\n    uint var_20h_2;\n    uint var_1ch_2;\n    uchar *puStack28;\n    uint var_10h_2;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x8507bb38;\n    uStack16 = 0x8507b910;\n    var_10h_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_10h_2;\n    puStack28 = &stack0xffffffb0;\n    puVar4 = var_ch;\n    pcVar2 = fcn.000684a0(var_8h);\n    var_34h = (*pcVar2)(var_8h, puVar4, var_10h, var_14h, var_18h_2, var_1ch, var_20h, var_24h, var_28h, var_2ch, \n                        var_30h, var_18h);\n    if (var_34h == 0) {\n        cVar1 = (**0x8500d0cc)();\n        if (cVar1 == '\\0') {\n            var_3ch = *var_ch;\n        }\n        else {\n            var_4h = 0;\n            (**0x8500d2e0)(var_ch, 4, 1);\n            var_3ch = *var_ch;\n            var_4h = 0xffffffff;\n        }\n        iVar3 = fcn.00035ba0(var_3ch, &var_38h);\n        if (iVar3 == 0) {\n            iVar3 = fcn.0007f75a(var_38h, 0, &var_30h_2, 0x18, 0);\n            if (iVar3 == 0) {\n                fcn.0001fae0(var_1ch_2, var_20h_2, 1);\n            }\n            fcn.00035bf0(var_3ch, var_38h);\n        }\n    }\n    *in_FS_OFFSET = var_10h_2;\n    return var_34h;\n}\n",
        "token_count": 706
    },
    "0001fa60": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0001fa60(uint arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_ch == 0) {\n        var_24h = -1;\n    }\n    else {\n        var_24h = arg_ch;\n    }\n    iVar1 = fcn.00035ba0(var_24h, &var_1ch);\n    if (iVar1 == 0) {\n        iVar1 = fcn.0007f75a(var_1ch, 0, &var_18h, 0x18, 0);\n        if (iVar1 == 0) {\n            fcn.0001fae0(var_4h, var_8h, 0);\n        }\n        fcn.00035bf0(var_24h, var_1ch);\n    }\n    pcVar2 = fcn.000684a0(arg_8h);\n    (*pcVar2)(arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 284
    },
    "0001fae0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0001fae0(int32_t arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint var_114h;\n    uint var_110h;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.00035da0();\n    fcn.000379d0(arg_ch, &var_110h, 0x104);\n    if (arg_10h == '\\0') {\n        if ((0x1a < iVar1) && (iVar1 = fcn.0007f7a2(&var_110h, 0x8500da6c),  iVar1 == 0)) {\n            fcn.00046060(arg_ch);\n        }\n        fcn.000382a0(0x85092850, &var_4h, 1);\n        if (*0x8509285c != 0) {\n            for (var_8h = 0; (var_8h < *0x8509285c && (*(*0x85092860 + var_8h * 8) != arg_ch)); var_8h = var_8h + 1) {\n            }\n            for (; var_8h < *0x8509285c - 1; var_8h = var_8h + 1) {\n                fcn.0007f70c(*0x85092860 + var_8h * 8, *0x85092860 + 8 + var_8h * 8, 8);\n            }\n            if (var_8h < *0x8509285c) {\n                *0x8509285c = *0x8509285c - 1;\n                fcn.00036390(0x85092860, *0x8509285c * 8 + 8, *0x8509285c * 8);\n            }\n        }\n        fcn.000382d0(0x85092850, &var_4h, 1);\n        fcn.0006a630(&var_110h, arg_ch);\n        fcn.0001fd70(arg_ch, 0);\n    }\n    else {\n        for (var_8h = 0; var_8h < *0x850928c8; var_8h = var_8h + 1) {\n            if (*(*0x850928cc + var_8h * 8) == arg_8h) {\n                fcn.0001fca0(arg_ch, 0);\n            }\n        }\n        if ((0x1a < iVar1) && (iVar1 = fcn.0007f7a2(&var_110h, 0x8500da6c),  iVar1 == 0)) {\n            fcn.00045dd0(arg_ch);\n        }\n    }\n    return;\n}\n",
        "token_count": 645
    },
    "0001fe90": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0001fe90(uint arg_8h, uint *arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    char cVar1;\n    uint var_28h;\n    int32_t var_21h;\n    uint var_1ch;\n    uint *var_18h;\n    char var_11h;\n    uint var_10h;\n    uint var_9h;\n    uint var_4h;\n    \n    var_28h = 0;\n    var_1ch = 0;\n    var_10h = 0;\n    var_21h._0_1_ = '\\0';\n    var_9h._0_1_ = '\\0';\n    var_11h = '\\0';\n    if (*0x850928a0 == NULL) {\n        return 0x21590001;\n    }\n    var_18h = arg_ch;\n    var_4h = arg_18h;\n    stack0xfffffff4 = arg_10h;\n    cVar1 = (**0x8500d0cc)();\n    if (cVar1 == '\\x01') {\n        *NULL = fcn.0001aaf0(&var_18h, 4, 1, 2, &var_28h);\n        if (*NULL != 0) goto code_r0x0001ff7f;\n        var_21h._0_1_ = '\\x01';\n        *NULL = fcn.0001aaf0(&var_4h, 4, 1, 2, &var_1ch);\n        if (*NULL != 0) goto code_r0x0001ff7f;\n        var_9h._0_1_ = '\\x01';\n        *NULL = fcn.0001aaf0(&var_9h + 1, 4, 1, 2, &var_10h);\n        if (*NULL != 0) goto code_r0x0001ff7f;\n        var_11h = '\\x01';\n    }\n    *NULL = (**0x850928a0)(arg_8h, var_18h, stack0xfffffff4, arg_14h, var_4h);\n    if (*NULL == 0) {\n        *arg_ch = *var_18h;\n    }\ncode_r0x0001ff7f:\n    if (var_11h != '\\0') {\n        fcn.0001ab80(stack0xfffffff4, var_10h);\n    }\n    if (var_9h != '\\0') {\n        fcn.0001ab80(var_4h, var_1ch);\n    }\n    if (var_21h != '\\0') {\n        fcn.0001ab80(var_18h, var_28h);\n    }\n    return *NULL;\n}\n",
        "token_count": 639
    },
    "0001ffd0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.0001ffd0(uint arg_8h, uint arg_ch)\n\n{\n    uint8_t uVar1;\n    uint uVar2;\n    ulong uVar3;\n    uint var_8h;\n    uint var_1h;\n    \n    if (*0x850928a4 == NULL) {\n        uVar2 = 0x21590001;\n    }\n    else {\n        uVar1 = fcn.0001b490(0);\n        uVar3 = (**0x850928a4)(arg_8h, arg_ch);\n        uVar2 = uVar3;\n        fcn.0001b490(uVar3 >> 0x20 & 0xffffff00 | uVar1);\n    }\n    return uVar2;\n}\n",
        "token_count": 183
    },
    "00020020": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_2eh\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl\nfcn.00020020(uint *arg_8h, uint arg_ch, uint *arg_10h, uint arg_14h, uint *arg_18h, uint arg_1ch, uint arg_20h, \n            uint32_t arg_24h)\n\n{\n    uint uVar1;\n    char cVar2;\n    uint32_t extraout_ECX;\n    uint32_t extraout_ECX_00;\n    uint32_t extraout_ECX_01;\n    uint32_t uVar3;\n    uint *var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uchar auStack52 [2];\n    uint *var_2eh;\n    int32_t var_25h;\n    uint var_20h;\n    uint *var_1ch;\n    uchar auStack28 [3];\n    uint var_15h;\n    uint var_10h;\n    uchar auStack16 [3];\n    uint var_9h;\n    uint *var_4h;\n    \n    var_38h = 0;\n    var_20h = 0;\n    var_10h = 0;\n    var_4h = NULL;\n    var_34h = 0;\n    _auStack16 = auStack16;\n    _auStack28 = auStack28;\n    _auStack52 = auStack52;\n    var_25h._0_1_ = '\\0';\n    if (*0x850928ac == NULL) {\n        return 0x21590001;\n    }\n    var_3ch = arg_8h;\n    var_1ch = arg_18h;\n    stack0xffffffe8 = arg_1ch;\n    stack0xfffffff4 = arg_20h;\n    stack0xffffffd0 = arg_10h;\n    cVar2 = (**0x8500d0cc)();\n    uVar3 = extraout_ECX;\n    if (cVar2 == '\\x01') {\n        *NULL = fcn.0001aaf0(&fcn.00020020::var_3ch, 4, 1, 2, &fcn.00020020::var_38h);\n        if (*NULL != 0) goto code_r0x000201b3;\n        _auStack52 = CONCAT12(1, auStack52);\n        _auStack52 = _auStack52 & 0xff000000 | _auStack52;\n        if ((arg_18h != NULL) &&\n           (*NULL = fcn.0001aaf0(&fcn.00020020::var_1ch, 8, 1, 2, &fcn.00020020::var_20h),  *NULL != 0))\n        goto code_r0x000201b3;\n        var_4h = &fcn.00020020::var_10h;\n        stack0xfffffff4 = 0;\n        _auStack16 = 1;\n        var_10h = 0x2cc;\n        var_3ch = &fcn.00020020::var_15h + 1;\n        _auStack28 = 0x20106;\n        *NULL = fcn.0001aaf0(var_3ch, 0x2cc, 1, 0, var_4h);\n        if (*NULL != 0) goto code_r0x000201b3;\n        _auStack28 = &fcn.00020020::var_4h;\n        var_1ch = NULL;\n        var_20h = 1;\n        stack0xffffffd8 = 0x14;\n        var_3ch = &fcn.00020020::var_9h + 1;\n        stack0xffffffd0 = 0x2012b;\n        *NULL = fcn.0001aaf0(var_3ch, 0x14, 1, 0, _auStack28);\n        if (*NULL != 0) goto code_r0x000201b3;\n        _auStack52 = CONCAT13(1, _auStack52);\n        uVar3 = extraout_ECX_00;\n        if (arg_10h != NULL) {\n            unique0x00001d00 = &fcn.00020020::var_34h;\n            _auStack52 = 2;\n            var_34h = 1;\n            var_38h = 0x18;\n            var_3ch = &fcn.00020020::var_2eh + 2;\n            *NULL = fcn.0001aaf0(var_3ch, 0x18, 1, 2, unique0x00001d00);\n            if (*NULL != 0) goto code_r0x000201b3;\n            var_25h._0_1_ = '\\x01';\n            uVar3 = extraout_ECX_01;\n        }\n    }\n    *NULL = (**0x850928ac)(var_3ch, arg_ch, stack0xffffffd0, arg_14h, var_1ch, stack0xffffffe8, stack0xfffffff4, \n                           uVar3 & 0xffffff00 | arg_24h & 0xff);\n    if ((*NULL == 0) && (*arg_8h = *var_3ch,  arg_18h != NULL)) {\n        uVar1 = var_1ch[1];\n        *arg_18h = *var_1ch;\n        arg_18h[1] = uVar1;\n    }\ncode_r0x000201b3:\n    if (var_25h != '\\0') {\n        fcn.0001ab80(stack0xffffffd0, var_34h);\n    }\n    if (var_2eh._1_1_ != '\\0') {\n        fcn.0001ab80(stack0xfffffff4, var_4h);\n    }\n    if (var_15h != '\\0') {\n        fcn.0001ab80(stack0xffffffe8, var_10h);\n    }\n    if (var_9h != '\\0') {\n        fcn.0001ab80(var_1ch, var_20h);\n    }\n    if (var_2eh != '\\0') {\n        fcn.0001ab80(var_3ch, var_38h);\n    }\n    return *NULL;\n}\n",
        "token_count": 1460
    },
    "00020230": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_2ah\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl\nfcn.00020230(uint *arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h, uint arg_2ch, uint *arg_30h)\n\n{\n    char cVar1;\n    uint *var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uchar auStack48 [2];\n    int32_t var_2ah;\n    uchar auStack40 [3];\n    int32_t var_21h;\n    uint var_1ch;\n    uint *var_18h;\n    char var_11h;\n    uint var_10h;\n    uint var_9h;\n    uint var_4h;\n    \n    var_34h = 0;\n    var_1ch = 0;\n    var_10h = 0;\n    var_4h = 0;\n    var_30h = 0;\n    var_9h._0_1_ = '\\0';\n    var_11h = '\\0';\n    _auStack48 = auStack48;\n    _auStack40 = auStack40;\n    if (*0x850928b0 == NULL) {\n        return 0x21590001;\n    }\n    var_3ch = arg_8h;\n    stack0xffffffd4 = arg_10h;\n    var_18h = arg_30h;\n    var_38h = arg_30h[3];\n    unique0x00007a00 = arg_30h[7];\n    cVar1 = (**0x8500d0cc)();\n    if (cVar1 == '\\x01') {\n        *NULL = fcn.0001aaf0(&fcn.00020230::var_3ch, 4, 1, 2, &fcn.00020230::var_34h);\n        if (*NULL != 0) goto code_r0x00020481;\n        _auStack48 = CONCAT12(1, auStack48);\n        _auStack48 = _auStack48 & 0xff000000 | _auStack48;\n        if (arg_10h != 0) {\n            *NULL = fcn.0001aaf0(&fcn.00020230::var_2ah + 2, 0x18, 1, 0, &fcn.00020230::var_1ch);\n            if (*NULL != 0) goto code_r0x00020481;\n            var_9h._0_1_ = '\\x01';\n        }\n        var_18h = &fcn.00020230::var_10h;\n        var_1ch = 2;\n        stack0xffffffdc = 1;\n        _auStack40 = 0x24;\n        var_3ch = &fcn.00020230::var_18h;\n        _auStack48 = 0x20319;\n        *NULL = fcn.0001aaf0(var_3ch, 0x24, 1, 2, var_18h);\n        if (*NULL != 0) goto code_r0x00020481;\n        var_11h = '\\x01';\n        if (arg_30h[3] != 0) {\n            _auStack48 = &fcn.00020230::var_4h;\n            var_30h = 2;\n            var_34h = 1;\n            var_38h = var_18h[2];\n            var_3ch = &fcn.00020230::var_38h;\n            *NULL = fcn.0001aaf0(var_3ch, var_38h, 1, 2, _auStack48);\n            if (*NULL != 0) goto code_r0x00020481;\n            _auStack48 = CONCAT13(1, _auStack48);\n            var_18h[3] = var_38h;\n        }\n        if (arg_30h[7] != 0) {\n            var_3ch = &fcn.00020230::var_9h + 1;\n            *NULL = fcn.0001aaf0(var_3ch, var_18h[6], 1, 2, &fcn.00020230::var_30h);\n            if (*NULL != 0) goto code_r0x00020481;\n            _auStack40 = CONCAT13(1, auStack40);\n            var_18h[7] = stack0xfffffff4;\n        }\n    }\n    *NULL = (**0x850928b0)(var_3ch, arg_ch, stack0xffffffd4, arg_14h, arg_18h, arg_1ch, arg_20h, arg_24h, arg_28h, \n                           arg_2ch, var_18h);\n    if (*NULL == 0) {\n        *arg_8h = *var_3ch;\n        if ((var_2ah._1_1_ != '\\0') && (var_18h[3] != 0)) {\n            fcn.0007f904(arg_30h[3], var_18h[3], arg_30h[2]);\n        }\n        if ((var_21h != '\\0') && (var_18h[7] != 0)) {\n            fcn.0007f904(arg_30h[7], var_18h[7], arg_30h[6]);\n        }\n        if (var_11h != '\\0') {\n            arg_30h[1] = var_18h[1];\n            arg_30h[4] = var_18h[4];\n            arg_30h[5] = var_18h[5];\n            arg_30h[8] = var_18h[8];\n        }\n    }\ncode_r0x00020481:\n    if (var_21h != '\\0') {\n        fcn.0001ab80(stack0xfffffff4, var_30h);\n    }\n    if (var_2ah._1_1_ != '\\0') {\n        fcn.0001ab80(var_38h, var_4h);\n    }\n    if (var_11h != '\\0') {\n        fcn.0001ab80(var_18h, var_10h);\n    }\n    if (var_9h != '\\0') {\n        fcn.0001ab80(stack0xffffffd4, var_1ch);\n    }\n    if (var_2ah != '\\0') {\n        fcn.0001ab80(var_3ch, var_34h);\n    }\n    return *NULL;\n}\n",
        "token_count": 1580
    },
    "00020500": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.00020500(uint arg_8h, uint arg_ch)\n\n{\n    uint8_t uVar1;\n    uint uVar2;\n    ulong uVar3;\n    uint var_8h;\n    uint var_1h;\n    \n    if (*0x850928a8 == NULL) {\n        uVar2 = 0x21590001;\n    }\n    else {\n        uVar1 = fcn.0001b490(0);\n        uVar3 = (**0x850928a8)(arg_8h, arg_ch);\n        uVar2 = uVar3;\n        fcn.0001b490(uVar3 >> 0x20 & 0xffffff00 | uVar1);\n    }\n    return uVar2;\n}\n",
        "token_count": 182
    },
    "00020550": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.00020550(uint arg_8h, uint arg_ch, uint arg_10h, uint32_t arg_14h)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    uint32_t extraout_ECX;\n    uint var_8h;\n    uint var_1h;\n    \n    if (*0x85092894 == NULL) {\n        uVar1 = 0x21590001;\n    }\n    else {\n        uVar2 = fcn.0001b490(0);\n        uVar1 = (**0x85092894)(arg_8h, arg_ch, arg_10h, uVar2 & 0xffffff00 | arg_14h & 0xff);\n        fcn.0001b490(extraout_ECX & 0xffffff00 | uVar2 & 0xff);\n    }\n    return uVar1;\n}\n",
        "token_count": 211
    },
    "000205a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint32_t __cdecl fcn.000205a0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint var_8h;\n    uint var_1h;\n    \n    if (*0x85092898 == NULL) {\n        uVar2 = 0x21590001;\n    }\n    else {\n        uVar1 = fcn.0001b490(0);\n        uVar2 = (**0x85092898)(arg_8h, arg_ch, arg_10h);\n        fcn.0001b490(uVar2 & 0xffffff00 | uVar1);\n    }\n    return uVar2;\n}\n",
        "token_count": 176
    },
    "000205f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.000205f0(uint arg_8h, uint arg_ch)\n\n{\n    uint8_t uVar1;\n    uint uVar2;\n    ulong uVar3;\n    uint var_8h;\n    uint var_1h;\n    \n    if (*0x8509289c == NULL) {\n        uVar2 = 0x21590001;\n    }\n    else {\n        uVar1 = fcn.0001b490(0);\n        uVar3 = (**0x8509289c)(arg_8h, arg_ch);\n        uVar2 = uVar3;\n        fcn.0001b490(uVar3 >> 0x20 & 0xffffff00 | uVar1);\n    }\n    return uVar2;\n}\n",
        "token_count": 183
    },
    "00020640": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.00020640(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint8_t uVar1;\n    uint uVar2;\n    ulong uVar3;\n    uint var_8h;\n    uint var_1h;\n    \n    if (*0x850928b8 == NULL) {\n        uVar2 = 0x21590001;\n    }\n    else {\n        uVar1 = fcn.0001b490(0);\n        uVar3 = (**0x850928b8)(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n        uVar2 = uVar3;\n        fcn.0001b490(uVar3 >> 0x20 & 0xffffff00 | uVar1);\n    }\n    return uVar2;\n}\n",
        "token_count": 215
    },
    "000206b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.000206b0(uint32_t *arg_8h, uint32_t arg_ch, char *arg_10h, uint arg_14h, uint32_t arg_18h)\n\n{\n    int32_t iVar1;\n    uint32_t var_98h;\n    uint32_t var_94h;\n    uint var_90h;\n    uint var_4h;\n    \n    if (arg_ch < 8) {\n        var_98h = 0;\n        var_94h = 0;\n        fcn.0007f904(&var_98h, arg_8h, arg_ch);\n    }\n    else {\n        var_98h = *arg_8h;\n        var_94h = arg_8h[1];\n    }\n    var_98h = var_98h ^ arg_18h;\n    if (arg_18h != 0) {\n        fcn.00031e80(&var_90h, arg_ch, arg_8h);\n        fcn.00031360(arg_14h, arg_10h + 1, arg_18h, &var_90h, &var_98h, 1);\n    }\n    iVar1 = (-(arg_18h % 8 != 0) & 8) + (arg_18h & 0xfffffff8);\n    *arg_10h = iVar1 - arg_18h;\n    return iVar1 + 1;\n}\n",
        "token_count": 322
    },
    "00020780": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __cdecl fcn.00020780(uint noname_0, uint noname_1, uint8_t *arg_10h, int32_t arg_14h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint var_1h;\n    \n    if (arg_14h == 0) {\n        iVar2 = -1;\n    }\n    else {\n        uVar1 = *arg_10h;\n        if (uVar1 < 8) {\n            if (arg_14h - 1U < uVar1) {\n                iVar2 = -1;\n            }\n            else {\n                iVar2 = (arg_14h + -1) - uVar1;\n            }\n        }\n        else {\n            iVar2 = -1;\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 198
    },
    "000207d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.000207d0(uint32_t *arg_8h, uint32_t arg_ch, uint arg_10h, uint8_t *arg_14h, int32_t arg_18h)\n\n{\n    int32_t arg_ch_00;\n    uint var_a0h;\n    uint32_t var_9ch;\n    uint32_t var_98h;\n    uint var_91h;\n    uint32_t var_4h;\n    \n    if (arg_ch < 8) {\n        var_9ch = 0;\n        var_98h = 0;\n        fcn.0007f904(&var_9ch, arg_8h, arg_ch);\n    }\n    else {\n        var_9ch = *arg_8h;\n        var_98h = arg_8h[1];\n    }\n    var_91h._0_1_ = *arg_14h;\n    var_4h = (arg_18h + -1) - var_91h;\n    var_9ch = var_9ch ^ var_4h;\n    if (var_4h != 0) {\n        fcn.00031e80(&var_91h + 1, arg_ch, arg_8h);\n        if (var_91h == 0) {\n            fcn.00031360(arg_14h + 1, arg_10h, arg_18h + -1, &var_91h + 1, &var_9ch, 0);\n        }\n        else {\n            arg_ch_00 = fcn.00036330(arg_18h + -1);\n            if (arg_ch_00 == 0) {\n                var_4h = 0xffffffff;\n            }\n            else {\n                fcn.00031360(arg_14h + 1, arg_ch_00, arg_18h + -1, &var_91h + 1, &var_9ch, 0);\n                fcn.0007f904(arg_10h, arg_ch_00, var_4h);\n                fcn.00036460(arg_ch_00);\n            }\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 491
    },
    "000209a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000209a0(uint *arg_8h, int32_t arg_ch, int32_t arg_10h, uint *arg_14h, uint *arg_18h)\n\n{\n    uint *var_4h;\n    \n    var_4h = arg_8h;\n    while( true ) {\n        if (var_4h == NULL) {\n            return 0;\n        }\n        if (var_4h[1] == arg_ch) break;\n        var_4h = *var_4h;\n    }\n    if (var_4h[2] != arg_10h) {\n        return 0;\n    }\n    *arg_14h = var_4h[4];\n    if (arg_18h != NULL) {\n        *arg_18h = var_4h[3];\n    }\n    return 1;\n}\n",
        "token_count": 192
    },
    "00020a10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00020a10(uint *arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h, int32_t arg_18h)\n\n{\n    uint *var_4h;\n    \n    var_4h = arg_8h;\n    while( true ) {\n        if (var_4h == NULL) {\n            return 0;\n        }\n        if (var_4h[1] == arg_ch) break;\n        var_4h = *var_4h;\n    }\n    if ((var_4h[2] == arg_10h) && (var_4h[3] == arg_18h)) {\n        fcn.0007f904(arg_14h, var_4h[4], var_4h[3]);\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 193
    },
    "00020b80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00020b80(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_238h;\n    uint var_234h;\n    uint *var_230h;\n    uint var_22ch;\n    uint var_228h;\n    uint var_224h;\n    uint var_220h;\n    uint var_21ch;\n    uint var_214h;\n    uint var_210h;\n    uint var_208h;\n    \n    fcn.00037500(&var_208h, 0x104, arg_8h);\n    fcn.0007f6d0(&var_21ch, &var_208h);\n    var_238h = 0x18;\n    var_234h = 0;\n    var_22ch = 0x40;\n    var_230h = &var_21ch;\n    var_228h = 0;\n    var_224h = 0;\n    iVar1 = fcn.0001ed40(&var_214h, 0xc0100000, &var_238h, &var_210h, 0, 0, 3, (arg_ch != 0) + 1, 0x812, 0, 0);\n    if (iVar1 != 0) {\n        var_214h = 0;\n    }\n    return var_214h;\n}\n",
        "token_count": 312
    },
    "00020c60": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00020c60(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    var_10h = arg_ch;\n    var_ch = 0;\n    iVar1 = fcn.0007f6dc(arg_8h, &var_8h, &var_10h, 8, 0x14);\n    if (iVar1 == 0) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = 0xffffffff;\n    }\n    return uVar2;\n}\n",
        "token_count": 156
    },
    "00020ca0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00020ca0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_24h;\n    uint var_20h;\n    uint var_18h;\n    uint var_8h;\n    \n    iVar1 = fcn.0007f74e(arg_8h, &var_8h, &var_20h, 0x18, 5);\n    if (iVar1 != 0) {\n        var_18h = 0xffffffff;\n    }\n    return var_18h;\n}\n",
        "token_count": 121
    },
    "00020ce0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00020ce0(uint arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_ch = arg_8h;\n    var_18h = arg_14h;\n    var_14h = 0;\n    iVar1 = fcn.0007f766(arg_8h, 0, 0, 0, &var_8h, arg_ch, arg_10h, &var_18h, 0);\n    if (iVar1 == 0) {\n        if (var_4h == arg_10h) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = 0xffffffff;\n        }\n    }\n    else {\n        uVar2 = 0xffffffff;\n    }\n    return uVar2;\n}\n",
        "token_count": 240
    },
    "00020d40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00020d40(uint arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_ch = arg_8h;\n    var_18h = arg_14h;\n    var_14h = 0;\n    iVar1 = fcn.0007f6f4(arg_8h, 0, 0, 0, &var_8h, arg_ch, arg_10h, &var_18h, 0);\n    if (iVar1 == 0) {\n        if (var_4h == arg_10h) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = 0xffffffff;\n        }\n    }\n    else {\n        uVar2 = 0xffffffff;\n    }\n    return uVar2;\n}\n",
        "token_count": 242
    },
    "00020dd0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14ch\n// WARNING: Variable defined which should be unmapped: var_148h\n\nint32_t __cdecl fcn.00020dd0(uint8_t *arg_8h, int32_t arg_ch, uint32_t *arg_10h, uint arg_14h)\n\n{\n    uint8_t uVar1;\n    bool bVar2;\n    bool bVar3;\n    uint8_t *arg_8h_00;\n    uint uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    bool bVar7;\n    uint var_14ch;\n    int32_t var_148h;\n    uint8_t *var_140h;\n    uint8_t *var_13ch;\n    uint var_134h;\n    uint8_t *var_130h;\n    uint8_t *var_12ch;\n    uint var_128h;\n    uint var_124h;\n    uint *var_120h;\n    uint var_11ch;\n    uint32_t var_118h;\n    uint var_114h;\n    uint var_110h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    bVar2 = false;\n    var_4h = 0;\n    bVar3 = false;\n    var_120h = NULL;\n    if ((arg_8h == NULL) || (arg_10h == NULL)) {\n        return -1;\n    }\n    if (*0x8509f0a4 == 0) {\n        fcn.0007f916(0x8509f0a0, 0, 0x30);\n        fcn.000355f0(0x8509f0a0);\n        *0x8509f0a4 = 1;\n    }\n    arg_8h_00 = fcn.00036330(0x104);\n    if (arg_8h_00 == NULL) {\n        return 2;\n    }\n    var_12ch = arg_8h;\n    var_130h = arg_8h_00;\n    do {\n        uVar1 = *var_12ch;\n        *var_130h = uVar1;\n        var_12ch = var_12ch + 1;\n        var_130h = var_130h + 1;\n    } while (uVar1 != 0);\n    fcn.00035650(0x8509f0a0);\n    var_4h = 1;\n    *arg_10h = 0xffffffff;\n    for (var_118h = 0; var_118h < 10; var_118h = var_118h + 1) {\n        if (*(var_118h * 4 + -0x7af60f58) == 0) {\n            *arg_10h = var_118h;\n        }\n        else {\n            var_13ch = *(*(var_118h * 4 + -0x7af60f58) + 0x40);\n            var_140h = arg_8h_00;\n            do {\n                uVar1 = *var_140h;\n                bVar7 = uVar1 < *var_13ch;\n                if (uVar1 != *var_13ch) {\ncode_r0x00020faa:\n                    var_148h = (1 - bVar7) - (bVar7 != 0);\n                    goto code_r0x00020fb5;\n                }\n                if (uVar1 == 0) break;\n                uVar1 = var_140h[1];\n                bVar7 = uVar1 < var_13ch[1];\n                if (uVar1 != var_13ch[1]) goto code_r0x00020faa;\n                var_140h = var_140h + 2;\n                var_13ch = var_13ch + 2;\n            } while (uVar1 != 0);\n            var_148h = 0;\ncode_r0x00020fb5:\n            if (var_148h == 0) {\n                fcn.00036460(arg_8h_00);\n                *arg_10h = var_118h;\n                *(*(var_118h * 4 + -0x7af60f58) + 4) = *(*(var_118h * 4 + -0x7af60f58) + 4) + 1;\n                var_8h = 0;\n                goto code_r0x0002144a;\n            }\n        }\n    }\n    if (*arg_10h == 0xffffffff) {\n        var_8h = -1;\n    }\n    else {\n        var_120h = fcn.00036330(0x6c);\n        if (var_120h == NULL) {\n            var_8h = -1;\n        }\n        else {\n            fcn.0007f916(var_120h, 0, 0x6c);\n            var_120h[0x10] = arg_8h_00;\n            var_120h[0x11] = arg_14h;\n            uVar4 = (**(var_120h[0x11] + 4))(arg_8h, 0);\n            var_120h[0x12] = uVar4;\n            if (var_120h[0x12] == 0) {\n                var_8h = 3;\n            }\n            else {\n                var_120h[1] = 1;\n                while (iVar5 = (**(var_120h[0x11] + 0x14))(var_120h[0x12], var_120h + 2, 0x2c, 0),  iVar5 == 0) {\n                    uVar6 = (**(var_120h[0x11] + 0x10))(var_120h[0x12]);\n                    if (uVar6 == 0xffffffff) {\n                        var_8h = 3;\n                        goto code_r0x0002144a;\n                    }\n                    if (uVar6 < 0x2c) {\n                        var_8h = 3;\n                        goto code_r0x0002144a;\n                    }\n                    if (((var_120h[2] != uVar6) && (var_120h[2] = uVar6,  bVar2)) &&\n                       (iVar5 = fcn.00023e20(var_120h, 1),  iVar5 != 0)) {\n                        var_8h = 3;\n                        goto code_r0x0002144a;\n                    }\n                    if (((0x40000000 < var_120h[3]) || (0x40000000 < var_120h[4])) ||\n                       ((var_120h[4] <= var_120h[3] && var_120h[3] != var_120h[4] ||\n                        ((0x20000000 < var_120h[5] ||\n                         (var_120h[4] <= var_120h[3] + var_120h[5] && var_120h[3] + var_120h[5] != var_120h[4])))))) {\n                        var_8h = 3;\n                        goto code_r0x0002144a;\n                    }\n                    if (bVar2) {\n                        (**(var_120h[0x11] + 0x1c))(var_120h[0x12], 2);\n                        var_8h = fcn.00022c20(var_120h);\n                        if (var_8h != 0) goto code_r0x0002144a;\n                        bVar3 = true;\n                        var_120h[9] = 1;\n                        iVar5 = fcn.00023e20(var_120h, 0);\n                        if (iVar5 != 0) {\n                            var_8h = 3;\n                            goto code_r0x0002144a;\n                        }\n                        if (-1 < arg_ch) {\n                            fcn.00021730(*var_120h);\n                        }\n                        var_120h[0x13] = arg_ch;\n                        if ((0 < arg_ch) && (iVar5 = fcn.00034d00(var_120h + 0x14),  iVar5 != 0)) {\n                            fcn.0001a700(var_120h + 0x15, 0x8501d530, var_120h);\n                        }\n                        fcn.00035650(0x8509f0a0);\n                        var_4h = 1;\n                        *arg_10h = 0xffffffff;\n                        var_118h = 0;\n                        goto code_r0x00021402;\n                    }\n                    if ((var_120h[0xc] == 0) || (var_120h[0xc] == -0x33333334)) {\n                        uVar4 = fcn.00022b70(arg_8h_00);\n                        var_120h[0xc] = uVar4;\n                        iVar5 = fcn.00023e20(var_120h, 0);\n                        if (iVar5 != 0) {\n                            var_8h = 3;\n                            goto code_r0x0002144a;\n                        }\n                    }\n                    fcn.0007f916(&var_110h, 0, 0x104);\n                    fcn.0004a010(&var_110h, 0x103, 0x8500dab4, 0x8500da78);\n                    iVar5 = fcn.000356e0(var_120h + 0x17, &var_110h);\n                    if ((iVar5 != 0) && (iVar5 = fcn.000357d0(var_120h + 0x17, &var_110h),  iVar5 != 0)) {\n                        var_8h = -1;\n                        goto code_r0x0002144a;\n                    }\n                    fcn.000356c0(0x8509f0a0);\n                    var_4h = 0;\n                    fcn.000358b0(var_120h + 0x17);\n                    bVar2 = true;\n                }\n                var_8h = 3;\n            }\n        }\n    }\ncode_r0x0002144a:\n    if (var_4h != 0) {\n        fcn.000356c0(0x8509f0a0);\n    }\n    if ((var_120h != NULL) && (var_120h[0x12] != 0)) {\n        (**(var_120h[0x11] + 0x1c))(var_120h[0x12], 1);\n    }\n    if (bVar2) {\n        fcn.000358d0(var_120h + 0x17);\n    }\n    if (var_8h != 0) {\n        if (bVar3) {\n            fcn.00022f40(var_120h);\n        }\n        if (var_120h != NULL) {\n            if (var_120h[0x12] != 0) {\n                (**(var_120h[0x11] + 8))(var_120h[0x12]);\n            }\n            if (bVar2) {\n                fcn.00035890(var_120h + 0x17);\n            }\n            fcn.00036460(var_120h);\n        }\n        fcn.00036460(arg_8h_00);\n    }\n    return var_8h;\ncode_r0x00021402:\n    if (9 < var_118h) goto code_r0x00021443;\n    if (*(var_118h * 4 + -0x7af60f58) == 0) {\n        *arg_10h = var_118h;\n        *(*arg_10h * 4 + -0x7af60f58) = var_120h;\n        var_8h = 0;\n        goto code_r0x0002144a;\n    }\n    var_118h = var_118h + 1;\n    goto code_r0x00021402;\ncode_r0x00021443:\n    var_8h = -1;\n    goto code_r0x0002144a;\n}\n",
        "token_count": 2722
    },
    "00021530": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.00021530(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint *var_4h;\n    \n    var_4h = arg_8h;\n    if (arg_8h != NULL) {\n        while (iVar1 = fcn.00034df0(var_4h + 0x14, 1800000),  iVar1 == 0) {\n            var_4h = *var_4h;\n            fcn.00021730(var_4h);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 142
    },
    "00021590": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00021590(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    var_4h = fcn.00023cc0(&var_14h, arg_8h, 2, &var_10h);\n    if (var_4h == 0) {\n        var_8h = 1;\n        if ((arg_ch == 0) && (*(var_14h + 4) = *(var_14h + 4) + -1,  *(var_14h + 4) != 0)) goto code_r0x00021712;\n        if (0 < *(var_14h + 0x4c)) {\n            fcn.00023df0(&var_10h);\n            iVar1 = fcn.00038390(var_14h + 0x50);\n            if (iVar1 != 0) {\n                fcn.00034dc0(var_14h + 0x50);\n                iVar1 = fcn.00038390(var_14h + 0x54);\n                if (iVar1 != 0) {\n                    fcn.000383c0(var_14h + 0x54, 0);\n                }\n                fcn.00034d90(var_14h + 0x50);\n                iVar1 = fcn.00038390(var_14h + 0x54);\n                if (iVar1 != 0) {\n                    fcn.00038370(var_14h + 0x54);\n                }\n            }\n            var_4h = fcn.00023cc0(&var_14h, arg_8h, 2, &var_10h);\n        }\n    }\n    if (*(arg_8h * 4 + -0x7af60f58) != 0) {\n        (**(*(*(arg_8h * 4 + -0x7af60f58) + 0x44) + 8))(*(var_14h + 0x48));\n        fcn.00022f40(*(arg_8h * 4 + -0x7af60f58));\n        fcn.00036460(*(*(arg_8h * 4 + -0x7af60f58) + 0x40));\n    }\n    if (var_4h == 0) {\n        fcn.00023df0(&var_10h);\n        var_8h = 0;\n        fcn.00035890(var_14h + 0x5c);\n    }\n    fcn.00036460(*(arg_8h * 4 + -0x7af60f58));\n    *(arg_8h * 4 + -0x7af60f58) = 0;\ncode_r0x00021712:\n    var_4h = 0;\n    if (var_8h != 0) {\n        fcn.00023df0(&var_10h);\n    }\n    return var_4h;\n}\n",
        "token_count": 708
    },
    "00021730": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00021730(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint *puVar3;\n    uint var_130h;\n    int32_t var_12ch;\n    int32_t var_128h;\n    int32_t *var_124h;\n    int32_t *var_120h;\n    uint32_t var_11ch;\n    uint var_118h;\n    int32_t var_d4h;\n    uint var_d0h;\n    int32_t var_c8h;\n    int32_t var_a4h;\n    int32_t var_90h;\n    uint32_t var_8ch;\n    int32_t var_88h;\n    uint32_t var_84h;\n    int32_t var_80h;\n    uint var_7ch;\n    uint var_74h;\n    int32_t var_48h;\n    int32_t var_44h;\n    uint var_40h;\n    int32_t var_38h;\n    int32_t var_14h;\n    \n    var_84h = 0;\n    var_44h = fcn.00023cc0(&var_90h, arg_8h, 1, &var_7ch);\n    if (var_44h != 0) {\n        return;\n    }\n    puVar2 = var_90h + 8;\n    puVar3 = &var_74h;\n    for (iVar1 = 0xb; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar3 = *puVar2;\n        puVar2 = puVar2 + 1;\n        puVar3 = puVar3 + 1;\n    }\n    if (*(var_90h + 0x20) == 0) {\n        var_80h = fcn.000232d0(var_90h, 0);\n        if (var_80h != *(var_90h + 8)) {\n            fcn.00023330(var_90h, var_80h);\n        }\n        goto code_r0x00021c47;\n    }\n    (**(*(var_90h + 0x44) + 0x1c))(*(var_90h + 0x48), 2);\n    var_8ch = 0x2c;\n    var_48h = 0;\n    do {\n        while( true ) {\n            while( true ) {\n                if (*(var_90h + 0x1c) <= var_8ch) goto code_r0x00021a4f;\n                iVar1 = (**(*(var_90h + 0x44) + 0x14))(*(var_90h + 0x48), &var_d0h, 0x40, var_8ch);\n                if (iVar1 != 0) goto code_r0x00021c47;\n                var_84h = var_8ch + 0x40 + var_a4h;\n                if (var_84h <= var_8ch) goto code_r0x00021a4f;\n                if (var_c8h == 0xffff) break;\n                var_8ch = var_8ch + 0x40 + var_a4h;\n                var_48h = var_48h + 1;\n            }\n            if (*(var_90h + 0x1c) <= var_84h) goto code_r0x00021a4f;\n            iVar1 = (**(*(var_90h + 0x44) + 0x14))(*(var_90h + 0x48), &var_40h, 0x40, var_84h);\n            if (iVar1 != 0) goto code_r0x00021c47;\n            var_88h = var_14h + 0x40;\n            if (var_38h != 0xffff) break;\n            var_a4h = var_a4h + var_88h;\n            iVar1 = (**(*(var_90h + 0x44) + 0x18))(*(var_90h + 0x48), &var_d0h, 0x40, var_8ch);\n            if (iVar1 != 0) goto code_r0x00021c47;\n        }\n        iVar1 = (**(*(var_90h + 0x44) + 0x14))(*(var_90h + 0x48), &var_118h, 0x40, var_8ch);\n        if ((iVar1 != 0) || (var_d4h = fcn.00036330(var_88h),  var_d4h == 0)) goto code_r0x00021c47;\n        iVar1 = (**(*(var_90h + 0x44) + 0x14))(*(var_90h + 0x48), var_d4h, var_88h, var_84h);\n        if (iVar1 != 0) {\n            fcn.00036460(var_d4h);\n            goto code_r0x00021c47;\n        }\n        iVar1 = (**(*(var_90h + 0x44) + 0x18))(*(var_90h + 0x48), var_d4h, var_88h, var_8ch);\n        if (iVar1 != 0) {\n            fcn.00036460(var_d4h);\n            goto code_r0x00021c47;\n        }\n        fcn.00036460(var_d4h);\n        iVar1 = (**(*(var_90h + 0x44) + 0x18))(*(var_90h + 0x48), &var_118h, 0x40, var_8ch + 0x40 + var_14h);\n    } while (iVar1 == 0);\ncode_r0x00021a4f:\n    *(var_90h + 0x1c) = var_8ch;\n    *(var_90h + 0x18) = var_48h;\n    *(var_90h + 0x20) = 0;\n    var_120h = &var_74h;\n    var_124h = var_90h + 8;\n    for (var_11ch = 0x2c; 3 < var_11ch; var_11ch = var_11ch - 4) {\n        if (*var_124h != *var_120h) goto code_r0x00021ad8;\n        var_120h = var_120h + 1;\n        var_124h = var_124h + 1;\n    }\n    if (var_11ch == 0) {\ncode_r0x00021bae:\n        var_12ch = 0;\n    }\n    else {\ncode_r0x00021ad8:\n        var_128h = *var_124h - *var_120h;\n        if (var_128h == 0) {\n            if (var_11ch == 1) goto code_r0x00021bae;\n            var_128h = *(var_124h + 1) - *(var_120h + 1);\n            if (var_128h == 0) {\n                if (var_11ch == 2) goto code_r0x00021bae;\n                var_128h = *(var_124h + 2) - *(var_120h + 2);\n                if (var_128h == 0) {\n                    if ((var_11ch == 3) || (var_128h = *(var_124h + 3) - *(var_120h + 3),  var_128h == 0))\n                    goto code_r0x00021bae;\n                }\n            }\n        }\n        var_12ch = 1;\n        if (var_128h < 1) {\n            var_12ch = -1;\n        }\n    }\n    if ((var_12ch == 0) || (iVar1 = fcn.00023e20(var_90h, 1),  iVar1 == 0)) {\n        fcn.00022c20(var_90h);\n        var_80h = fcn.000232d0(var_90h, 0);\n        if (var_80h != *(var_90h + 8)) {\n            fcn.00023330(var_90h, var_80h);\n        }\n    }\n    else {\n        fcn.00022f40(var_90h);\n    }\ncode_r0x00021c47:\n    (**(*(var_90h + 0x44) + 0x1c))(*(var_90h + 0x48), 1);\n    fcn.00023df0(&var_7ch);\n    return;\n}\n",
        "token_count": 1950
    },
    "00021c80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00021c80(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint arg_8h_00;\n    int32_t iVar1;\n    uint arg_8h_01;\n    uint var_58h;\n    uint var_28h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_4h;\n    \n    var_4h = fcn.00023cc0(&var_10h, arg_8h, 5, &var_ch);\n    if (var_4h == 0) {\n        fcn.000240e0(var_10h, &arg_ch);\n        arg_8h_01 = *(var_10h + 0x34);\n        arg_8h_00 = fcn.00023290(arg_8h_01, arg_ch, arg_10h);\n        var_14h = fcn.000233e0(arg_8h_00, arg_8h_01);\n        if (var_14h == -1) {\n            var_4h = 5;\n        }\n        else {\n            iVar1 = (**(*(var_10h + 0x44) + 0x14))(*(var_10h + 0x48), &var_58h, 0x40, var_14h);\n            if (iVar1 == 0) {\n                var_28h = 0;\n                iVar1 = (**(*(var_10h + 0x44) + 0x18))(*(var_10h + 0x48), &var_58h, 0x40, var_14h);\n                if (iVar1 == 0) {\n                    var_4h = 0;\n                }\n                else {\n                    var_4h = 3;\n                }\n            }\n            else {\n                var_4h = 3;\n            }\n        }\n        fcn.00023df0(&var_ch);\n    }\n    return var_4h;\n}\n",
        "token_count": 461
    },
    "00021d60": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00021d60(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint32_t arg_18h, uint arg_1ch)\n\n{\n    uint arg_8h_00;\n    int32_t iVar1;\n    uint arg_8h_01;\n    uint var_58h;\n    uint auStack76 [13];\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_4h;\n    \n    if (arg_18h < 4) {\n        var_4h = fcn.00023cc0(&var_10h, arg_8h, 5, &var_ch);\n        if (var_4h == 0) {\n            fcn.000240e0(var_10h, &arg_ch);\n            arg_8h_01 = *(var_10h + 0x34);\n            arg_8h_00 = fcn.00023290(arg_8h_01, arg_ch, arg_10h);\n            var_14h = fcn.000233e0(arg_8h_00, arg_8h_01);\n            if (var_14h == -1) {\n                var_4h = 5;\n            }\n            else {\n                iVar1 = (**(*(var_10h + 0x44) + 0x14))(*(var_10h + 0x48), &var_58h, 0x40, var_14h);\n                if (iVar1 == 0) {\n                    auStack76[arg_18h] = arg_1ch;\n                    iVar1 = (**(*(var_10h + 0x44) + 0x18))(*(var_10h + 0x48), &var_58h, 0x40, var_14h);\n                    if (iVar1 == 0) {\n                        var_4h = 0;\n                    }\n                    else {\n                        var_4h = 3;\n                    }\n                }\n                else {\n                    var_4h = 3;\n                }\n            }\n            fcn.00023df0(&var_ch);\n        }\n    }\n    else {\n        var_4h = -1;\n    }\n    return var_4h;\n}\n",
        "token_count": 510
    },
    "00021e50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00021e50(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint arg_ch_00;\n    uint32_t uVar1;\n    uint arg_8h_00;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_4h;\n    \n    var_4h = fcn.00023cc0(&var_10h, arg_8h, 1, &var_ch);\n    if (var_4h == 0) {\n        fcn.000240e0(var_10h, &arg_ch);\n        arg_8h_00 = *(var_10h + 0x34);\n        arg_ch_00 = fcn.00023290(arg_8h_00, arg_ch, arg_10h);\n        fcn.00023470(var_10h, arg_ch_00, arg_8h_00);\n        if ((-1 < *(var_10h + 0x4c)) &&\n           (((1 < *(var_10h + 0x20) &&\n             (*(var_10h + 0x18) <= *(var_10h + 0x20) && *(var_10h + 0x20) != *(var_10h + 0x18))) ||\n            (uVar1 = (*(var_10h + 0x10) >> 10) / 100,  uVar1 <= *(var_10h + 0x20) && *(var_10h + 0x20) != uVar1)))) {\n            fcn.00021730(arg_8h);\n        }\n        fcn.00023df0(&var_ch);\n        var_4h = 0;\n    }\n    return var_4h;\n}\n",
        "token_count": 402
    },
    "00021f00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00021f00(uint arg_8h, uint *arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_8h = fcn.00023cc0(&var_1ch, arg_8h, 1, &var_14h);\n    if (var_8h == 0) {\n        if (arg_10h == 0) {\n            var_8h = 0;\n        }\n        else {\n            var_4h = *arg_ch;\n            fcn.000240e0(var_1ch, &var_4h);\n            var_18h = fcn.00023290(*(var_1ch + 0x34), var_4h, arg_ch[2]);\n            for (var_ch = 0; var_ch < arg_10h; var_ch = var_ch + 1) {\n                if (arg_ch[var_ch * 0x10 + 1] != -1) {\n                    fcn.000234b0(var_1ch, var_18h, arg_ch[var_ch * 0x10 + 1], 2);\n                }\n            }\n            fcn.00023650(var_18h);\n            var_8h = fcn.00023e20(var_1ch, 1);\n            if (var_8h == 0) {\n                if ((-1 < *(var_1ch + 0x4c)) &&\n                   (((1 < *(var_1ch + 0x20) &&\n                     (*(var_1ch + 0x18) <= *(var_1ch + 0x20) && *(var_1ch + 0x20) != *(var_1ch + 0x18))) ||\n                    (uVar1 = (*(var_1ch + 0x10) >> 10) / 100,  uVar1 <= *(var_1ch + 0x20) && *(var_1ch + 0x20) != uVar1)\n                    ))) {\n                    fcn.00021730(arg_8h);\n                }\n                var_8h = 0;\n            }\n        }\n        fcn.00023df0(&var_14h);\n    }\n    return var_8h;\n}\n",
        "token_count": 548
    },
    "00022030": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00022030(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, int32_t *arg_1ch)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    uint var_58h;\n    int32_t var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_2ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00023cc0(&var_14h, arg_8h, 1, &var_10h);\n    if (var_4h == 0) {\n        fcn.000240e0(var_14h, &arg_ch);\n        var_8h = fcn.00023290(*(var_14h + 0x34), arg_ch, arg_10h);\n        if (var_8h == 0) {\n            var_4h = 5;\n        }\n        else {\n            var_18h = fcn.000233e0(var_8h, arg_14h);\n            if (var_18h == -1) {\n                var_4h = 5;\n            }\n            else {\n                iVar1 = (**(*(var_14h + 0x44) + 0x14))(*(var_14h + 0x48), &var_58h, 0x40, var_18h);\n                if (iVar1 == 0) {\n                    var_50h = arg_18h;\n                    arg_8h_00 = fcn.00023290(*(var_14h + 0x34), arg_ch, arg_18h);\n                    iVar1 = fcn.000236e0(arg_8h_00);\n                    *arg_1ch = iVar1 + 1;\n                    var_54h = *arg_1ch;\n                    iVar1 = (**(*(var_14h + 0x44) + 0x18))(*(var_14h + 0x48), &var_58h, 0x40, var_18h);\n                    if (iVar1 == 0) {\n                        fcn.00023490(var_14h, var_8h, arg_14h);\n                        fcn.00023120(var_14h, arg_ch, arg_18h, var_54h, var_4ch, var_18h, var_2ch);\n                        var_4h = 0;\n                    }\n                    else {\n                        var_4h = 3;\n                    }\n                }\n                else {\n                    var_4h = 3;\n                }\n            }\n        }\n        fcn.00023df0(&var_10h);\n    }\n    return var_4h;\n}\n",
        "token_count": 651
    },
    "00022190": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl\nfcn.00022190(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h, int32_t arg_1ch, uint32_t arg_20h, \n            uint32_t *arg_24h)\n\n{\n    uint arg_8h_00;\n    int32_t iVar1;\n    uint arg_8h_01;\n    uint32_t var_5ch;\n    uint var_58h;\n    uint var_34h;\n    int32_t var_2ch;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    if ((arg_1ch == 0) || (arg_24h == NULL)) {\n        var_4h = 0xffffffff;\n    }\n    else {\n        var_4h = fcn.00023cc0(&var_10h, arg_8h, 0, &var_ch);\n        if (var_4h == 0) {\n            fcn.000240e0(var_10h, &arg_ch);\n            arg_8h_01 = *(var_10h + 0x34);\n            arg_8h_00 = fcn.00023290(arg_8h_01, arg_ch, arg_10h);\n            var_14h = fcn.000233e0(arg_8h_00, arg_8h_01);\n            if (var_14h == -1) {\n                var_4h = 5;\n            }\n            else {\n                (**(*(var_10h + 0x44) + 0x14))(*(var_10h + 0x48), &var_58h, 0x40, var_14h);\n                var_34h = fcn.00036f90(0);\n                (**(*(var_10h + 0x44) + 0x18))(*(var_10h + 0x48), &var_58h, 0x40, var_14h);\n                if (var_2ch - arg_18h < arg_20h) {\n                    var_5ch = var_2ch - arg_18h;\n                }\n                else {\n                    var_5ch = arg_20h;\n                }\n                *arg_24h = var_5ch;\n                iVar1 = (**(*(var_10h + 0x44) + 0x14))(*(var_10h + 0x48), arg_1ch, *arg_24h, var_14h + 0x40 + arg_18h);\n                var_4h = -(iVar1 != 0) & 3;\n            }\n            fcn.00023df0(&var_ch);\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 632
    },
    "000222c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.000222c0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h, int32_t arg_1ch, int32_t arg_20h)\n\n{\n    uint arg_8h_00;\n    int32_t iVar1;\n    uint arg_8h_01;\n    uint var_58h;\n    uint var_30h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_4h;\n    \n    if ((arg_1ch == 0) && (arg_20h != 0)) {\n        var_4h = -1;\n    }\n    else {\n        var_4h = fcn.00023cc0(&var_10h, arg_8h, 5, &var_ch);\n        if (var_4h == 0) {\n            fcn.000240e0(var_10h, &arg_ch);\n            arg_8h_01 = *(var_10h + 0x34);\n            arg_8h_00 = fcn.00023290(arg_8h_01, arg_ch, arg_10h);\n            var_14h = fcn.000233e0(arg_8h_00, arg_8h_01);\n            if (var_14h == -1) {\n                var_4h = 5;\n            }\n            else {\n                iVar1 = (**(*(var_10h + 0x44) + 0x14))(*(var_10h + 0x48), &var_58h, 0x40, var_14h);\n                if (iVar1 == 0) {\n                    if (var_2ch < arg_18h + arg_20h) {\n                        var_4h = 6;\n                    }\n                    else {\n                        var_30h = fcn.00036f90(0);\n                        if (var_28h < arg_18h + arg_20h) {\n                            var_28h = arg_18h + arg_20h;\n                        }\n                        iVar1 = (**(*(var_10h + 0x44) + 0x18))\n                                          (*(var_10h + 0x48), arg_1ch, arg_20h, var_14h + 0x40 + arg_18h);\n                        if (iVar1 == 0) {\n                            iVar1 = (**(*(var_10h + 0x44) + 0x18))(*(var_10h + 0x48), &var_58h, 0x40, var_14h);\n                            if (iVar1 == 0) {\n                                var_4h = 0;\n                            }\n                            else {\n                                var_4h = 3;\n                            }\n                        }\n                        else {\n                            var_4h = 3;\n                        }\n                    }\n                }\n                else {\n                    var_4h = 3;\n                }\n            }\n            fcn.00023df0(&var_ch);\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 705
    },
    "00022420": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x000224cc)\n\nint32_t __cdecl\nfcn.00022420(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint32_t arg_18h, uint *arg_1ch, int32_t *arg_20h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    int32_t var_58h;\n    uint var_54h;\n    int32_t var_4ch;\n    uint var_48h;\n    int32_t var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint32_t var_1ch;\n    int32_t var_4h;\n    \n    if (arg_20h == NULL) {\n        return -1;\n    }\n    var_4ch = fcn.00023cc0(&var_58h, arg_8h, 1, &var_54h);\n    if (var_4ch != 0) {\n        return var_4ch;\n    }\n    fcn.000240e0(var_58h, &arg_ch);\n    if (*(var_58h + 0x28) != '\\0') {\n        uVar3 = fcn.0007f8fe(*(var_58h + 0x28), 0, *(var_58h + 0x10), 0);\n        uVar1 = fcn.00023830(var_58h, arg_ch, arg_10h);\n        uVar4 = fcn.0007f8fe(uVar1 + arg_18h, (uVar1 >> 0x1f) + CARRY4(uVar1, arg_18h), 100, 0);\n        if (uVar3 < uVar4) {\n            var_4ch = 7;\n            goto code_r0x000225ca;\n        }\n    }\n    fcn.0007f916(&var_48h, 0, 0x40);\n    var_3ch = arg_14h;\n    var_48h = arg_ch;\n    var_28h = fcn.00036f90(0);\n    var_24h = 0;\n    var_1ch = arg_18h;\n    var_40h = arg_10h;\n    var_20h = 0;\n    if (arg_1ch != NULL) {\n        var_38h = *arg_1ch;\n        var_34h = arg_1ch[1];\n        var_30h = arg_1ch[2];\n        var_2ch = arg_1ch[3];\n    }\n    uVar2 = fcn.00023290(*(var_58h + 0x34), arg_ch, arg_10h);\n    var_44h = fcn.000236e0(uVar2);\n    var_44h = var_44h + 1;\n    *arg_20h = var_44h;\n    var_4h = fcn.00023710(var_58h, &var_48h);\n    if (var_4h == -1) {\n        var_4ch = 4;\n    }\n    else {\n        var_4ch = fcn.00023120(var_58h, arg_ch, arg_10h, *arg_20h, arg_14h, var_4h, arg_18h);\n        uVar2 = fcn.00023290(*(var_58h + 0x34), arg_ch, arg_10h);\n        fcn.00023650(uVar2);\n    }\ncode_r0x000225ca:\n    fcn.00023df0(&var_54h);\n    return var_4ch;\n}\n",
        "token_count": 917
    },
    "000225e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.000225e0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h)\n\n{\n    uint arg_8h_00;\n    int32_t iVar1;\n    uint arg_8h_01;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_4h;\n    \n    if (arg_18h == 0) {\n        var_4h = -1;\n    }\n    else {\n        var_4h = fcn.00023cc0(&var_10h, arg_8h, 0, &var_ch);\n        if (var_4h == 0) {\n            fcn.000240e0(var_10h, &arg_ch);\n            arg_8h_01 = *(var_10h + 0x34);\n            arg_8h_00 = fcn.00023290(arg_8h_01, arg_ch, arg_10h);\n            iVar1 = fcn.000233e0(arg_8h_00, arg_8h_01);\n            if (iVar1 == -1) {\n                var_4h = 5;\n            }\n            else {\n                iVar1 = (**(*(var_10h + 0x44) + 0x14))(*(var_10h + 0x48), arg_18h, 0x40, iVar1);\n                if (iVar1 == -1) {\n                    var_4h = 3;\n                }\n                else {\n                    var_4h = 0;\n                }\n            }\n            fcn.00023df0(&var_ch);\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 390
    },
    "000226a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.000226a0(uint arg_8h, uint arg_ch, uint arg_10h, int32_t *arg_14h, int32_t arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (arg_18h == 0) {\n        var_8h = -1;\n    }\n    else {\n        var_8h = fcn.00023cc0(&var_18h, arg_8h, 0, &var_10h);\n        if (var_8h == 0) {\n            fcn.000240e0(var_18h, &arg_ch);\n            var_8h = 5;\n            var_4h = fcn.00023290(*(var_18h + 0x34), arg_ch, arg_10h);\n            if (var_4h != 0) {\n                for (var_14h = *(var_4h + 0x10); var_14h != 0; var_14h = *(var_14h + 0x14)) {\n                    if ((arg_14h == NULL) || (*(var_14h + 8) == *arg_14h)) {\n                        iVar1 = (**(*(var_18h + 0x44) + 0x14))(*(var_18h + 0x48), arg_18h, 0x40, *(var_14h + 0xc));\n                        if (iVar1 == 0) {\n                            var_8h = 0;\n                        }\n                        break;\n                    }\n                }\n            }\n            fcn.00023df0(&var_10h);\n        }\n    }\n    return var_8h;\n}\n",
        "token_count": 419
    },
    "00022780": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00022780(uint arg_8h, uint arg_ch, uint arg_10h, uint32_t *arg_14h, int32_t *arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (arg_14h == NULL) {\n        return -1;\n    }\n    var_8h = fcn.00023cc0(&var_18h, arg_8h, 0, &var_10h);\n    if (var_8h != 0) {\n        return var_8h;\n    }\n    fcn.000240e0(var_18h, &arg_ch);\n    if (arg_18h != NULL) {\n        *arg_18h = 0;\n    }\n    *arg_14h = 0;\n    var_4h = fcn.00023290(*(var_18h + 0x34), arg_ch, arg_10h);\n    if (var_4h != 0) {\n        for (var_14h = *(var_4h + 0x10); var_14h != 0; var_14h = *(var_14h + 0x14)) {\n            *arg_14h = *arg_14h + 1;\n        }\n        if ((arg_18h != NULL) && (*arg_14h != 0)) {\n            iVar1 = fcn.00036330(*arg_14h << 6);\n            *arg_18h = iVar1;\n            if (*arg_18h == 0) {\n                var_8h = 2;\n                goto code_r0x00022a33;\n            }\n            if (((*arg_14h < 2) || (**(var_18h + 0x44) <= (*(var_18h + 0x44) + 0x20) - *(var_18h + 0x44))) ||\n               (*(*(var_18h + 0x44) + 0x20) == 0)) {\n                *arg_14h = 0;\n                for (var_14h = *(var_4h + 0x10); var_14h != 0; var_14h = *(var_14h + 0x14)) {\n                    iVar1 = (**(*(var_18h + 0x44) + 0x14))\n                                      (*(var_18h + 0x48), *arg_14h * 0x40 + *arg_18h, 0x40, *(var_14h + 0xc));\n                    if (iVar1 == -1) {\n                        var_8h = 3;\n                        fcn.00036460(*arg_18h);\n                        *arg_18h = 0;\n                        *arg_14h = 0;\n                        goto code_r0x00022a33;\n                    }\n                    *arg_14h = *arg_14h + 1;\n                }\n            }\n            else {\n                iVar1 = fcn.00036420(*arg_14h, 0xc);\n                if (iVar1 == 0) {\n                    var_8h = 2;\n                    goto code_r0x00022a33;\n                }\n                *arg_14h = 0;\n                for (var_14h = *(var_4h + 0x10); var_14h != 0; var_14h = *(var_14h + 0x14)) {\n                    *(iVar1 + *arg_14h * 0xc) = *arg_14h * 0x40 + *arg_18h;\n                    *(iVar1 + 4 + *arg_14h * 0xc) = *(var_14h + 0xc);\n                    *(iVar1 + 8 + *arg_14h * 0xc) = 0x40;\n                    *arg_14h = *arg_14h + 1;\n                }\n                iVar2 = (**(*(var_18h + 0x44) + 0x20))(*(var_18h + 0x48), iVar1, *arg_14h);\n                if (iVar2 != 0) {\n                    var_8h = 3;\n                    fcn.00036460(iVar1);\n                    fcn.00036460(*arg_18h);\n                    *arg_18h = 0;\n                    *arg_14h = 0;\n                    goto code_r0x00022a33;\n                }\n                fcn.00036460(iVar1);\n            }\n        }\n    }\n    var_8h = 0;\ncode_r0x00022a33:\n    fcn.00023df0(&var_10h);\n    return var_8h;\n}\n",
        "token_count": 1096
    },
    "00022a50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.00022a50(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h, int32_t arg_1ch, uint arg_20h)\n\n{\n    uint var_10h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if ((arg_18h == 0) && (arg_1ch != 0)) {\n        var_4h = -1;\n    }\n    else {\n        var_4h = fcn.00023cc0(0, arg_8h, 5, &var_10h);\n        if (var_4h == 0) {\n            var_4h = fcn.00022420(arg_8h, arg_ch, arg_10h, arg_14h, arg_1ch, arg_20h, &var_8h);\n            if ((var_4h == 0) &&\n               (var_4h = fcn.000222c0(arg_8h, arg_ch, arg_10h, var_8h, 0, arg_18h, arg_1ch),  var_4h != 0)) {\n                fcn.00021e50(arg_8h, arg_ch, arg_10h, var_8h);\n            }\n            fcn.00023df0(&var_10h);\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 327
    },
    "00022b10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00022b10(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_4h;\n    \n    var_4h = fcn.00023cc0(&var_10h, arg_8h, 0, &var_ch);\n    if (var_4h == 0) {\n        *(var_10h + 100) = arg_ch;\n        *(var_10h + 0x68) = arg_10h;\n        *(var_10h + 0x60) = 1;\n        fcn.00023df0(&var_ch);\n        var_4h = 0;\n    }\n    return var_4h;\n}\n",
        "token_count": 176
    },
    "00022b70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00022b70(char *arg_8h)\n\n{\n    char cVar1;\n    uint var_1ch;\n    uint var_14h;\n    char *var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    if ((arg_8h == NULL) || (*arg_8h == '\\0')) {\n        var_ch = 0;\n    }\n    else {\n        var_10h = arg_8h;\n        do {\n            cVar1 = *var_10h;\n            var_10h = var_10h + 1;\n        } while (cVar1 != '\\0');\n        var_ch = 0;\n        for (var_8h = 0; var_8h < var_10h - (arg_8h + 1); var_8h = var_8h + 1) {\n            var_ch = var_ch << 3 ^ arg_8h[var_8h];\n        }\n        var_ch = (var_10h - (arg_8h + 1)) + 1U & 0xffff ^ var_ch;\n        if (var_ch == 0) {\n            var_ch = 0xffffffff;\n        }\n    }\n    return var_ch;\n}\n",
        "token_count": 287
    },
    "00022c20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00022c20(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint var_94h;\n    int32_t var_90h;\n    int32_t var_8ch;\n    int32_t *var_88h;\n    int32_t *var_84h;\n    uint32_t var_80h;\n    int32_t var_7ch;\n    uint var_78h;\n    uint var_74h;\n    int32_t var_70h;\n    uint var_6ch;\n    int32_t var_4ch;\n    int32_t var_38h;\n    uint var_34h;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    var_38h = 0;\n    var_7ch = 0;\n    if (arg_8h == 0) {\n        return -1;\n    }\n    fcn.00022f40(arg_8h);\n    puVar3 = arg_8h + 8;\n    puVar4 = &var_34h;\n    for (iVar2 = 0xb; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    if (*(arg_8h + 8) <= *(arg_8h + 0x1c) && *(arg_8h + 0x1c) != *(arg_8h + 8)) {\n        *(arg_8h + 0x1c) = *(arg_8h + 8);\n        iVar2 = fcn.00023e20(arg_8h, 0);\n        if (iVar2 != 0) {\n            var_4h = 3;\n            goto code_r0x00022f14;\n        }\n    }\n    for (var_8h = 0x2c; var_8h < *(arg_8h + 0x1c); var_8h = var_8h + 0x40 + var_4ch) {\n        iVar2 = (**(*(arg_8h + 0x44) + 0x14))(*(arg_8h + 0x48), &var_78h, 0x40, var_8h);\n        if (iVar2 != 0) {\n            var_4h = 3;\n            goto code_r0x00022f14;\n        }\n        if (((*(arg_8h + 0x1c) <= var_8h + 0x40 && var_8h + 0x40 != *(arg_8h + 0x1c)) ||\n            (var_8h + 0x40 + var_4ch <= var_8h)) ||\n           (uVar1 = var_8h + 0x40 + var_4ch,  *(arg_8h + 0x1c) <= uVar1 && uVar1 != *(arg_8h + 0x1c))) break;\n        if (var_70h == 0xffff) {\n            var_38h = var_38h + 1;\n        }\n        else {\n            var_7ch = var_7ch + 1;\n            var_4h = fcn.00023020(arg_8h, var_78h, var_70h, var_74h);\n            if (var_4h != 0) goto code_r0x00022f14;\n            var_4h = fcn.00023120(arg_8h, var_78h, var_70h, var_74h, var_6ch, var_8h, var_4ch);\n            if (var_4h != 0) goto code_r0x00022f14;\n        }\n    }\n    *(arg_8h + 0x18) = var_7ch;\n    *(arg_8h + 0x20) = var_38h;\n    *(arg_8h + 0x1c) = var_8h;\n    var_84h = &var_34h;\n    var_88h = arg_8h + 8;\n    for (var_80h = 0x2c; 3 < var_80h; var_80h = var_80h - 4) {\n        if (*var_88h != *var_84h) goto code_r0x00022e00;\n        var_84h = var_84h + 1;\n        var_88h = var_88h + 1;\n    }\n    if (var_80h == 0) {\ncode_r0x00022ec0:\n        var_90h = 0;\n    }\n    else {\ncode_r0x00022e00:\n        var_8ch = *var_88h - *var_84h;\n        if (var_8ch == 0) {\n            if (var_80h == 1) goto code_r0x00022ec0;\n            var_8ch = *(var_88h + 1) - *(var_84h + 1);\n            if (var_8ch == 0) {\n                if (var_80h == 2) goto code_r0x00022ec0;\n                var_8ch = *(var_88h + 2) - *(var_84h + 2);\n                if (var_8ch == 0) {\n                    if ((var_80h == 3) || (var_8ch = *(var_88h + 3) - *(var_84h + 3),  var_8ch == 0))\n                    goto code_r0x00022ec0;\n                }\n            }\n        }\n        var_90h = 1;\n        if (var_8ch < 1) {\n            var_90h = -1;\n        }\n    }\n    if ((var_90h != 0) && (iVar2 = fcn.00023e20(arg_8h, 1),  iVar2 != 0)) {\n        var_4h = 3;\n    }\ncode_r0x00022f14:\n    if (var_4h != 0) {\n        puVar3 = &var_34h;\n        puVar4 = arg_8h + 8;\n        for (iVar2 = 0xb; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *puVar4 = *puVar3;\n            puVar3 = puVar3 + 1;\n            puVar4 = puVar4 + 1;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 1517
    },
    "00022f40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00022f40(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    if (arg_8h != 0) {\n        while (*(arg_8h + 0x34) != 0) {\n            var_8h = *(*(arg_8h + 0x34) + 0x10);\n            while (var_8h != 0) {\n                if (*(var_8h + 0x18) == 0) {\n                    *(arg_8h + 0x38) = *(var_8h + 0x1c);\n                }\n                else {\n                    *(*(var_8h + 0x18) + 0x1c) = *(var_8h + 0x1c);\n                }\n                if (*(var_8h + 0x1c) == 0) {\n                    *(arg_8h + 0x3c) = *(var_8h + 0x18);\n                }\n                else {\n                    *(*(var_8h + 0x1c) + 0x18) = *(var_8h + 0x18);\n                }\n                iVar1 = *(var_8h + 0x14);\n                fcn.00036460(var_8h);\n                var_8h = iVar1;\n            }\n            arg_8h_00 = *(arg_8h + 0x34);\n            *(arg_8h + 0x34) = *(*(arg_8h + 0x34) + 0x18);\n            fcn.00036460(arg_8h_00);\n        }\n        *(arg_8h + 0x34) = 0;\n    }\n    return;\n}\n",
        "token_count": 416
    },
    "00023020": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00023020(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    uint uVar1;\n    int32_t *var_4h;\n    \n    if (arg_8h == 0) {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        for (var_4h = *(arg_8h + 0x34); var_4h != NULL; var_4h = var_4h[6]) {\n            if ((*var_4h == arg_ch) && (var_4h[1] == arg_10h)) {\n                if (var_4h[3] <= arg_14h && arg_14h != var_4h[3]) {\n                    var_4h[3] = arg_14h;\n                }\n                if (arg_14h < var_4h[2]) {\n                    var_4h[2] = arg_14h;\n                }\n                goto code_r0x0002309d;\n            }\n        }\n        fcn.000230b0(arg_8h, arg_ch, arg_10h, arg_14h);\ncode_r0x0002309d:\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 294
    },
    "000230b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.000230b0(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint *puVar1;\n    uint var_4h;\n    \n    puVar1 = fcn.00036330(0x1c);\n    if (puVar1 == NULL) {\n        puVar1 = NULL;\n    }\n    else {\n        *puVar1 = arg_ch;\n        puVar1[1] = arg_10h;\n        puVar1[2] = arg_14h;\n        puVar1[3] = arg_14h;\n        puVar1[4] = 0;\n        puVar1[5] = 0;\n        puVar1[6] = *(arg_8h + 0x34);\n        *(arg_8h + 0x34) = puVar1;\n    }\n    return puVar1;\n}\n",
        "token_count": 206
    },
    "00023120": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00023120(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *arg_8h_00;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_8h == 0) {\n        uVar2 = 0xffffffff;\n    }\n    else {\n        arg_8h_00 = fcn.00036330(0x24);\n        if (arg_8h_00 == NULL) {\n            uVar2 = 2;\n        }\n        else {\n            arg_8h_00[3] = arg_1ch;\n            *arg_8h_00 = arg_14h;\n            arg_8h_00[1] = arg_20h;\n            arg_8h_00[2] = arg_18h;\n            var_ch = fcn.00023290(*(arg_8h + 0x34), arg_ch, arg_10h);\n            if ((var_ch == 0) && (var_ch = fcn.000230b0(arg_8h, arg_ch, arg_10h, 0),  var_ch == 0)) {\n                fcn.00036460(arg_8h_00);\n                return 0xffffffff;\n            }\n            if (*(var_ch + 0x10) == 0) {\n                arg_8h_00[5] = 0;\n                arg_8h_00[4] = 0;\n                *(var_ch + 0x14) = arg_8h_00;\n                *(var_ch + 0x10) = arg_8h_00;\n            }\n            else {\n                iVar1 = *(var_ch + 0x14);\n                *(iVar1 + 0x14) = arg_8h_00;\n                arg_8h_00[5] = 0;\n                arg_8h_00[4] = iVar1;\n                *(var_ch + 0x14) = arg_8h_00;\n            }\n            if (*(arg_8h + 0x38) == 0) {\n                arg_8h_00[6] = 0;\n                arg_8h_00[7] = 0;\n                *(arg_8h + 0x3c) = arg_8h_00;\n                *(arg_8h + 0x38) = arg_8h_00;\n            }\n            else {\n                *(*(arg_8h + 0x3c) + 0x1c) = arg_8h_00;\n                arg_8h_00[6] = *(arg_8h + 0x3c);\n                arg_8h_00[7] = 0;\n                *(arg_8h + 0x3c) = arg_8h_00;\n            }\n            arg_8h_00[8] = var_ch;\n            uVar2 = 0;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 705
    },
    "00023290": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00023290(int32_t *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t *var_4h;\n    \n    var_4h = arg_8h;\n    while( true ) {\n        if (var_4h == NULL) {\n            return NULL;\n        }\n        if ((*var_4h == arg_ch) && (var_4h[1] == arg_10h)) break;\n        var_4h = var_4h[6];\n    }\n    return var_4h;\n}\n",
        "token_count": 133
    },
    "00023330": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00023330(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_4h;\n    \n    if ((arg_ch < 0x40000001) && (arg_8h != 0)) {\n        fcn.00022f40(arg_8h);\n        (**(*(arg_8h + 0x44) + 0x1c))(*(arg_8h + 0x48), 2);\n        iVar2 = (**(*(arg_8h + 0x44) + 0xc))(*(arg_8h + 0x48), arg_ch);\n        if (iVar2 == 0) {\n            *(arg_8h + 8) = arg_ch;\n            iVar2 = fcn.00023e20(arg_8h, 1);\n            if (iVar2 == 0) {\n                uVar1 = fcn.00022c20(arg_8h);\n                (**(*(arg_8h + 0x44) + 0x1c))(*(arg_8h + 0x48), 1);\n            }\n            else {\n                uVar1 = 3;\n            }\n        }\n        else {\n            fcn.00022c20(arg_8h);\n            uVar1 = 0xffffffff;\n        }\n    }\n    else {\n        uVar1 = 3;\n    }\n    return uVar1;\n}\n",
        "token_count": 322
    },
    "000233e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000233e0(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.00023430(arg_8h, arg_ch);\n    if (iVar1 == 0) {\n        var_8h = 0xffffffff;\n    }\n    else if (*(iVar1 + 0xc) < 0x2c) {\n        var_8h = 0xffffffff;\n    }\n    else {\n        var_8h = *(iVar1 + 0xc);\n    }\n    return var_8h;\n}\n",
        "token_count": 142
    },
    "00023430": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00023430(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t *var_4h;\n    \n    if (arg_8h == 0) {\n        var_4h = NULL;\n    }\n    else {\n        for (var_4h = *(arg_8h + 0x10); (var_4h != NULL && (*var_4h != arg_ch)); var_4h = var_4h[5]) {\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 125
    },
    "000234b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000234b0(int32_t arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    uint var_58h;\n    uint var_50h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    if (arg_8h == 0) {\n        return;\n    }\n    if (arg_ch == 0) {\n        return;\n    }\n    var_ch = fcn.00023430(arg_ch, arg_10h);\n    if (var_ch == 0) {\n        return;\n    }\n    if (arg_14h != 0) {\n        var_14h = fcn.000233e0(arg_ch, arg_10h);\n        if (var_14h == -1) {\n            return;\n        }\n        iVar1 = (**(*(arg_8h + 0x44) + 0x14))(*(arg_8h + 0x48), &var_58h, 0x40, var_14h);\n        if (iVar1 != 0) {\n            return;\n        }\n        var_4h = var_50h;\n        var_50h = 0xffff;\n        iVar1 = (**(*(arg_8h + 0x44) + 0x18))(*(arg_8h + 0x48), &var_58h, 0x40, var_14h);\n        if (iVar1 != 0) {\n            return;\n        }\n        *(arg_8h + 0x18) = *(arg_8h + 0x18) + -1;\n        *(arg_8h + 0x20) = *(arg_8h + 0x20) + 1;\n        if (arg_14h != 2) {\n            fcn.00023e20(arg_8h, 1);\n        }\n    }\n    var_8h = *(var_ch + 0x10);\n    var_10h = *(var_ch + 0x14);\n    if (var_8h == 0) {\n        *(arg_ch + 0x10) = *(var_ch + 0x14);\n    }\n    else {\n        *(var_8h + 0x14) = var_10h;\n    }\n    if (var_10h == 0) {\n        *(arg_ch + 0x14) = var_8h;\n    }\n    else {\n        *(var_10h + 0x10) = var_8h;\n    }\n    if (*(var_ch + 0x18) == 0) {\n        *(arg_8h + 0x38) = *(var_ch + 0x1c);\n    }\n    else {\n        *(*(var_ch + 0x18) + 0x1c) = *(var_ch + 0x1c);\n    }\n    if (*(var_ch + 0x1c) == 0) {\n        *(arg_8h + 0x3c) = *(var_ch + 0x18);\n    }\n    else {\n        *(*(var_ch + 0x1c) + 0x18) = *(var_ch + 0x18);\n    }\n    fcn.00036460(var_ch);\n    if (arg_14h != 2) {\n        fcn.00023650(arg_ch);\n    }\n    return;\n}\n",
        "token_count": 783
    },
    "00023650": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00023650(int32_t arg_8h)\n\n{\n    uint32_t var_8h;\n    uint32_t *var_4h;\n    \n    if (arg_8h != 0) {\n        var_4h = *(arg_8h + 0x10);\n        if (var_4h == NULL) {\n            var_8h = 0;\n        }\n        else {\n            var_8h = *var_4h;\n        }\n        *(arg_8h + 0xc) = var_8h;\n        *(arg_8h + 8) = var_8h;\n        for (; var_4h != NULL; var_4h = var_4h[5]) {\n            if (*var_4h < *(arg_8h + 8)) {\n                *(arg_8h + 8) = *var_4h;\n            }\n            if (*(arg_8h + 0xc) <= *var_4h && *var_4h != *(arg_8h + 0xc)) {\n                *(arg_8h + 0xc) = *var_4h;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 264
    },
    "000236e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000236e0(int32_t arg_8h)\n\n{\n    uint var_4h;\n    \n    if (arg_8h == 0) {\n        var_4h = 0;\n    }\n    else {\n        var_4h = *(arg_8h + 0xc);\n    }\n    return var_4h;\n}\n",
        "token_count": 80
    },
    "00023710": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00023710(uint *arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    if ((arg_8h == NULL) || (arg_ch == 0)) {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        iVar3 = *(arg_ch + 0x2c) + 0x40;\n        if (arg_8h[2] <= arg_8h[7] + iVar3 && arg_8h[7] + iVar3 != arg_8h[2]) {\n            var_4h = fcn.000232d0(arg_8h, iVar3);\n            if (arg_8h[4] <= var_4h) {\n                fcn.00021730(*arg_8h);\n                var_4h = fcn.000232d0(arg_8h, iVar3);\n                if (arg_8h[4] <= var_4h) {\n                    return 0xffffffff;\n                }\n            }\n            iVar2 = fcn.00023330(arg_8h, var_4h);\n            if (iVar2 != 0) {\n                fcn.00021730(*arg_8h);\n                iVar2 = fcn.00023330(arg_8h, var_4h);\n                if (iVar2 != 0) {\n                    return 0xffffffff;\n                }\n            }\n        }\n        uVar1 = arg_8h[7];\n        iVar2 = (**(arg_8h[0x11] + 0x18))(arg_8h[0x12], arg_ch, 0x40, uVar1);\n        if (iVar2 == 0) {\n            arg_8h[7] = arg_8h[7] + iVar3;\n            arg_8h[6] = arg_8h[6] + 1;\n            iVar3 = fcn.00023e20(arg_8h, 1);\n            if (iVar3 != 0) {\n                uVar1 = 0xffffffff;\n            }\n        }\n        else {\n            uVar1 = 0xffffffff;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 513
    },
    "00023830": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00023830(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.00023290(*(arg_8h + 0x34), arg_ch, arg_10h);\n    if (iVar1 == 0) {\n        var_4h = 0;\n    }\n    else {\n        var_4h = 0;\n        for (var_8h = *(iVar1 + 0x10); var_8h != 0; var_8h = *(var_8h + 0x14)) {\n            var_4h = var_4h + 0x40 + *(var_8h + 4);\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 203
    },
    "00023b90": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00023b90(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    if (*0x8508f98c == -1) {\n        iVar1 = fcn.00020db0(arg_8h, arg_ch, 0x8508f98c);\n        if (iVar1 == 0) {\n            *0x850928d8 = *(*0x8508f98c * 4 + -0x7af60f58) + 8;\n            *0x850928dc = *(*(*0x8508f98c * 4 + -0x7af60f58) + 0x34);\n        }\n        else {\n            *0x8508f98c = -1;\n        }\n    }\n    else {\n        iVar1 = -1;\n    }\n    return iVar1;\n}\n",
        "token_count": 202
    },
    "00023c00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00023c00(void)\n\n{\n    int32_t var_8h;\n    uint var_4h;\n    \n    if (*0x8508f98c == -1) {\n        var_4h = 0;\n    }\n    else {\n        var_4h = fcn.00021590(*0x8508f98c, 0);\n        *0x8508f98c = -1;\n    }\n    fcn.00035650(0x8509f0a0);\n    for (var_8h = 0; (var_8h < 10 && (*(var_8h * 4 + -0x7af60f58) == 0)); var_8h = var_8h + 1) {\n    }\n    fcn.000356c0(0x8509f0a0);\n    if (9 < var_8h) {\n        fcn.00035620(0x8509f0a0);\n        *0x8509f0a4 = 0;\n    }\n    return var_4h;\n}\n",
        "token_count": 242
    },
    "00023cc0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t __cdecl fcn.00023cc0(int32_t *arg_8h, uint32_t arg_ch, int32_t arg_10h, int32_t *arg_14h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_ch < 10) {\n        while( true ) {\n            fcn.00035650(0x8509f0a0);\n            arg_8h_00 = *(arg_ch * 4 + -0x7af60f58);\n            if (arg_8h_00 == 0) break;\n            iVar1 = fcn.000358f0(arg_8h_00 + 0x5c);\n            if (iVar1 != 0) {\n                if (arg_10h != 2) {\n                    fcn.000356c0(0x8509f0a0);\n                }\n                *arg_14h = arg_8h_00 + 0x5c;\n                arg_14h[1] = arg_10h == 2;\n                if (arg_10h != 2) {\n                    iVar1 = *(arg_8h_00 + 0x2c);\n                    iVar2 = (**(*(arg_8h_00 + 0x44) + 0x14))(*(arg_8h_00 + 0x48), arg_8h_00 + 8, 0x2c, 0);\n                    if (iVar2 != 0) {\n                        fcn.00023df0(arg_14h);\n                        return 3;\n                    }\n                    if ((*(arg_8h_00 + 0x2c) != iVar1) && (iVar1 = fcn.00023e60(arg_8h_00),  iVar1 != 0)) {\n                        fcn.00023df0(arg_14h);\n                        return iVar1;\n                    }\n                }\n                if (arg_8h != NULL) {\n                    *arg_8h = arg_8h_00;\n                }\n                return 0;\n            }\n            fcn.000356c0(0x8509f0a0);\n            fcn.0005bdd0(10);\n        }\n        fcn.000356c0(0x8509f0a0);\n    }\n    return 1;\n}\n",
        "token_count": 557
    },
    "00023df0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00023df0(uint *arg_8h)\n\n{\n    fcn.000358d0(*arg_8h);\n    if (arg_8h[1] != 0) {\n        fcn.000356c0(0x8509f0a0);\n    }\n    return;\n}\n",
        "token_count": 72
    },
    "00023e60": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_54h\n// WARNING: Variable defined which should be unmapped: var_50h\n// WARNING: Variable defined which should be unmapped: var_4ch\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Variable defined which should be unmapped: var_44h\n\nint32_t __cdecl fcn.00023e60(int32_t arg_8h)\n\n{\n    uint uVar1;\n    int32_t *var_54h;\n    uint32_t var_50h;\n    int32_t *var_4ch;\n    int32_t var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    int32_t var_3ch;\n    int32_t var_1ch;\n    int32_t var_4h;\n    \n    var_50h = 0x2c;\n    var_4h = 0;\n    (**(*(arg_8h + 0x44) + 0x1c))(*(arg_8h + 0x48), 2, 0);\n    var_4ch = *(arg_8h + 0x38);\n    while (var_4ch != NULL) {\n        var_54h = var_4ch[7];\n        var_4h = (**(*(arg_8h + 0x44) + 0x14))(*(arg_8h + 0x48), &var_48h, 0x40, var_50h);\n        if (var_4h != 0) break;\n        var_4ch[3] = var_50h;\n        if (((*var_4ch == var_44h) && (var_4ch[1] == var_1ch)) && (var_4ch[2] == var_3ch)) {\n            if ((*var_4ch[8] != var_48h) || (*(var_4ch[8] + 4) != var_40h)) {\n                if ((var_40h == 0xffff) && (var_48h == *var_4ch[8])) {\n                    fcn.00023490(arg_8h, var_4ch[8], *var_4ch);\n                }\n                else {\n                    if (var_48h != *var_4ch[8]) {\n                        var_4h = -1;\n                        break;\n                    }\n                    fcn.00023490(arg_8h, var_4ch[8], var_44h);\n                    var_4h = fcn.00023120(arg_8h, var_48h, var_40h, var_44h, var_3ch, var_50h, var_1ch);\n                    if (var_4h != 0) break;\n                    uVar1 = fcn.00023290(*(arg_8h + 0x34), var_48h, var_40h);\n                    fcn.00023650(uVar1);\n                }\n            }\n        }\n        else {\n            if (var_40h != 0xffff) {\n                var_4h = -1;\n                break;\n            }\n            var_54h = var_4ch;\n        }\n        var_50h = var_50h + 0x40 + var_1ch;\n        var_4ch = var_54h;\n    }\n    if (var_4h != 0) {\ncode_r0x000240a5:\n        if (var_4h != 0) {\n            var_4h = fcn.00022c20(arg_8h);\n        }\n        (**(*(arg_8h + 0x44) + 0x1c))(*(arg_8h + 0x48), 1);\n        return var_4h;\n    }\n    do {\n        if ((*(arg_8h + 0x1c) <= var_50h) ||\n           (var_4h = (**(*(arg_8h + 0x44) + 0x14))(*(arg_8h + 0x48), &var_48h, 0x40, var_50h),  var_4h != 0))\n        goto code_r0x000240a5;\n        if (var_40h != 0xffff) {\n            var_4h = fcn.00023120(arg_8h, var_48h, var_40h, var_44h, var_3ch, var_50h, var_1ch);\n            if (var_4h != 0) goto code_r0x000240a5;\n            uVar1 = fcn.00023290(*(arg_8h + 0x34), var_48h, var_40h);\n            fcn.00023650(uVar1);\n        }\n        var_50h = var_50h + 0x40 + var_1ch;\n    } while( true );\n}\n",
        "token_count": 1096
    },
    "000240e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000240e0(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    if ((*(arg_8h + 0x60) != 0) && (*arg_ch == *(arg_8h + 100))) {\n        *arg_ch = *(arg_8h + 0x68);\n    }\n    return;\n}\n",
        "token_count": 82
    },
    "00024150": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00024150(uint *arg_8h, uint arg_ch)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    uint *arg_8h_00;\n    uint uVar3;\n    uint32_t var_988h;\n    uint var_984h;\n    int32_t var_980h;\n    int32_t var_97ch;\n    uint var_978h;\n    uint var_174h;\n    uint var_170h;\n    uint var_160h;\n    int32_t var_130h;\n    uint var_12ch;\n    uint var_11ch;\n    int32_t var_114h;\n    uint var_110h;\n    uint var_dh;\n    uchar *var_4h;\n    \n    bVar1 = false;\n    var_97ch = 0;\n    var_130h = 0;\n    if (*0x850928e0 != 0) {\n        return 0x21590064;\n    }\n    *0x8509ef5c = 0;\n    fcn.0007f7e4(0x8509ef80, arg_8h, 0x104);\n    *0x8509ef64 = arg_ch;\n    fcn.0007f7e4(&var_110h, arg_8h, 0x104);\n    var_dh._0_1_ = 0;\n    var_4h = fcn.0007f7ea(&var_110h, 0x23);\n    if (var_4h == NULL) {\n        var_980h = -1;\n    }\n    else {\n        *var_4h = 0;\n        var_4h = var_4h + 1;\n        var_980h = fcn.00036fe0(var_4h, 0, 0);\n        arg_8h = &var_110h;\n    }\n    fcn.00025080(arg_8h, 0x8500dabc, 1);\n    var_114h = fcn.00023b90(arg_8h, 1);\n    if (var_114h == 0) {\n        if (var_980h == -1) {\n            var_114h = 0;\n        }\n        else {\n            var_114h = fcn.00023920(0xfffffffe, 0xb, &var_980h, &var_170h);\n            if (var_114h == 0) {\n                fcn.00023c90(0xfffffffe, var_160h);\n            }\n            else {\n                fcn.00023c00();\n                if (var_980h != 1) {\n                    var_988h = var_114h + 0x191U | 0x21590000;\n                    goto code_r0x00024489;\n                }\n            }\n        }\n        if ((var_114h == 0) && (var_114h = fcn.00029a50(&var_12ch, 0x10, 0x229),  var_114h != 0)) {\n            fcn.00023c00();\n        }\n    }\n    if (var_114h == 0) {\n        var_988h = 0;\n    }\n    else {\n        var_988h = var_114h + 0x191U | 0x21590000;\n        iVar2 = fcn.00025080(arg_8h, 0x8500dac4, 0);\n        if ((iVar2 != 0) || (iVar2 = fcn.00023b90(arg_8h, 0),  iVar2 != 0)) goto code_r0x00024489;\n        if (var_980h != -1) {\n            iVar2 = fcn.00023920(0xfffffffe, 0xb, &var_980h, &var_170h);\n            if (iVar2 != 0) {\n                fcn.00023c00();\n                goto code_r0x00024489;\n            }\n            fcn.00023c90(0xfffffffe, var_160h);\n        }\n        iVar2 = fcn.00029a50(&var_12ch, 0x10, 0x229);\n        if (iVar2 != 0) {\n            fcn.00023c00();\n            goto code_r0x00024489;\n        }\n    }\n    var_97ch = 1;\n    fcn.0002a200(8, 0, var_988h, 0, 0);\n    fcn.000295a0(5, 0x8509284c, 0x20, &var_174h);\n    fcn.0002c870();\n    fcn.00024e80(&var_978h, 0x800);\n    uVar3 = 0;\n    arg_8h_00 = &var_978h;\n    var_988h = fcn.0007b160(arg_8h_00);\n    if (var_988h == 0) {\n        bVar1 = true;\n        var_988h = fcn.0006b490(arg_8h_00, uVar3);\n        if (var_988h == 0) {\n            var_130h = 1;\n            var_988h = fcn.0001a700(&var_11ch, 0x85020500, arg_ch);\n            if (var_988h == 0) {\n                fcn.00038370(&var_11ch);\n                var_988h = 0;\n                *0x850928e0 = 1;\n            }\n        }\n    }\ncode_r0x00024489:\n    if (var_97ch != 0) {\n        fcn.0002a200(9, 0, var_988h, 0, 0);\n    }\n    if (var_988h != 0) {\n        if (var_130h != 0) {\n            fcn.0006b4a0();\n        }\n        if (bVar1) {\n            fcn.0007b330();\n        }\n        if (var_97ch != 0) {\n            fcn.0002cc80(0xfffffffe);\n            fcn.0002c890();\n            fcn.00023c00();\n        }\n    }\n    return var_988h;\n}\n",
        "token_count": 1420
    },
    "00024500": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00024500(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    int32_t var_74h;\n    uint var_70h;\n    uint var_4h;\n    \n    fcn.00027180();\n    fcn.0002b1d0();\n    fcn.0002d8c0();\n    fcn.000248b0();\n    fcn.00026200();\n    var_70h._0_1_ = '\\0';\n    fcn.000295a0(0x22b, &fcn.00024500::var_70h, 100, &fcn.00024500::var_4h);\n    if (var_70h != '\\0') {\n        arg_8h = 0;\n    }\n    *0x8509f088 = arg_8h;\n    if (arg_8h == 0) {\n        iVar1 = fcn.00034d00(0x8509ef68);\n        if ((iVar1 == 0) || (iVar1 = fcn.00034d00(0x8509ef54),  iVar1 == 0)) {\n            var_74h = fcn.00036750();\n            goto code_r0x00024637;\n        }\n        uVar4 = 0;\n        uVar3 = 0;\n        uVar2 = 0x85021690;\n        iVar1 = fcn.0001a700(0x85090424, 0x85021690, 0);\n        if (iVar1 != 0) {\n            var_74h = fcn.00036750();\n            goto code_r0x00024637;\n        }\n        iVar1 = fcn.00034d00(0x8509ef58);\n        if ((iVar1 == 0) || (iVar1 = fcn.00034d00(0x8509f084),  iVar1 == 0)) {\n            var_74h = fcn.00036750(uVar2, uVar3, uVar4);\n            goto code_r0x00024637;\n        }\n        iVar1 = fcn.0001a700(0x85090454, 0x85021790, 0);\n        if (iVar1 != 0) {\n            var_74h = fcn.00036750();\n            goto code_r0x00024637;\n        }\n    }\n    else {\n        iVar1 = fcn.00034d00(0x8509ef60);\n        if (iVar1 == 0) {\n            var_74h = fcn.00036750();\n            goto code_r0x00024637;\n        }\n        iVar1 = fcn.0001a700(0x8509045c, 0x85021890, 0);\n        if (iVar1 != 0) {\n            var_74h = fcn.00036750();\n            goto code_r0x00024637;\n        }\n    }\n    var_74h = 0;\ncode_r0x00024637:\n    if (var_74h != 0) {\n        if (arg_8h == 0) {\n            iVar1 = fcn.00038390(0x8509ef54);\n            if (iVar1 != 0) {\n                fcn.00034d90(0x8509ef54);\n            }\n            iVar1 = fcn.00038390(0x2466d);\n            if (iVar1 != 0) {\n                fcn.00034d90(0x8509f084);\n            }\n            iVar1 = fcn.00038390(0x85090424);\n            if (iVar1 != 0) {\n                fcn.00038410(0x85090424);\n                fcn.00038370(0x85090424);\n            }\n            iVar1 = fcn.00038390(0x85090454);\n            if (iVar1 != 0) {\n                fcn.00038410(0x85090454);\n                fcn.00038370(0x85090454);\n            }\n            iVar1 = fcn.00038390(0x246c9);\n            if (iVar1 != 0) {\n                fcn.00034d90(0x8509ef68);\n            }\n            iVar1 = fcn.00038390(0x246e1);\n            if (iVar1 != 0) {\n                fcn.00034d90(0x8509ef58);\n            }\n        }\n        else {\n            iVar1 = fcn.00038390(0x8509ef60);\n            if (iVar1 != 0) {\n                fcn.00034d90(0x8509ef60);\n            }\n            iVar1 = fcn.00038390(0x8509045c);\n            if (iVar1 != 0) {\n                fcn.00038410(0x8509045c);\n                fcn.00038370(0x8509045c);\n            }\n        }\n        fcn.00024990();\n        fcn.0002d8f0();\n        fcn.000271e0();\n        fcn.0002b320();\n    }\n    return var_74h;\n}\n",
        "token_count": 1179
    },
    "00024750": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00024750(void)\n\n{\n    int32_t iVar1;\n    \n    if (*0x850928e0 != 0) {\n        fcn.0002a200(10, 0, 0, 0, 0);\n        *0x8509ef5c = 1;\n        iVar1 = fcn.00038390(0x8509ef68);\n        if (iVar1 != 0) {\n            fcn.00034dc0(0x8509ef68);\n            if (*0x8509ef50 != 0) {\n                fcn.0007cb90(0x8509ef50, 0);\n            }\n            fcn.00034df0(0x8509ef54, 0xffffffff);\n            fcn.00038370(0x85090424);\n            fcn.00034d90(0x8509ef68);\n            fcn.00034d90(0x8509ef54);\n        }\n        iVar1 = fcn.00038390(0x8509ef58);\n        if (iVar1 != 0) {\n            fcn.00034dc0(0x8509ef58);\n            fcn.00034df0(0x8509f084, 0xffffffff);\n            fcn.00038370(0x85090454);\n            fcn.00034d90(0x8509ef58);\n            fcn.00034d90(0x8509f084);\n        }\n        iVar1 = fcn.00038390(*0x8509f088);\n        if ((iVar1 != 0) && (iVar1 = fcn.00038390(0x8509ef60),  iVar1 != 0)) {\n            fcn.00034dc0(*0x8509f088);\n            fcn.00034df0(0x8509ef60, 0xffffffff);\n            fcn.00038370(0x8509045c);\n            fcn.00034d90(0x8509ef60);\n        }\n        fcn.00024990();\n        fcn.0002d8f0();\n        fcn.0002b320();\n        fcn.000271e0();\n        fcn.0006b4a0();\n        fcn.0007b330();\n        fcn.0002cc80(0xfffffffe);\n        fcn.0002c890();\n        fcn.0002a200(0xb, 0, 0, 0, 0);\n        fcn.00023c00();\n        *0x850928e0 = 0;\n    }\n    return;\n}\n",
        "token_count": 581
    },
    "000248b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.000248b0(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_214h;\n    uint var_210h;\n    uint var_110h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = fcn.000299b0(100, 0);\n    var_ch = 0;\n    for (var_8h = 0; var_8h < var_4h; var_8h = var_8h + 1) {\n        iVar1 = fcn.000295a0(var_8h + 0x65, &var_210h, 0x100, &var_214h);\n        if (iVar1 == 0) {\n            var_110h._0_1_ = 0;\n            fcn.000295a0(var_8h + 0x70, &var_110h, 0x100, &var_214h);\n            uVar2 = fcn.000249e0(&var_210h, &var_110h);\n            *(var_ch * 4 + -0x7af6fbd4) = uVar2;\n            if (*(var_ch * 4 + -0x7af6fbd4) != 0) {\n                var_ch = var_ch + 1;\n            }\n        }\n    }\n    fcn.000507c0();\n    fcn.0003b9e0();\n    fcn.00017840();\n    fcn.0003b6e0();\n    return;\n}\n",
        "token_count": 370
    },
    "00024990": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __fastcall fcn.00024990(uint param_1)\n\n{\n    uint32_t var_4h;\n    \n    fcn.0006b4a0(param_1);\n    for (var_4h = 0; var_4h < 10; var_4h = var_4h + 1) {\n        if (*(var_4h * 4 + -0x7af6fbd4) != 0) {\n            fcn.0007cb90(var_4h * 4 + -0x7af6fbd4, 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 152
    },
    "000249e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000249e0(uint arg_8h, char *arg_ch)\n\n{\n    char cVar1;\n    uchar *puVar2;\n    char *arg_ch_00;\n    uint var_5ch;\n    char *var_58h;\n    char *var_54h;\n    uint var_50h;\n    uint var_48h;\n    char *var_44h;\n    uint var_40h;\n    uint var_38h;\n    char *var_34h;\n    uint var_30h;\n    uint var_2ch;\n    char *var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    char *var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_ch = fcn.00036490(arg_8h);\n    if (var_ch == 0) {\n        var_14h = 0;\n    }\n    else {\n        puVar2 = fcn.0007f7de(var_ch, 0x2f);\n        if (puVar2 == NULL) {\n            var_18h = puVar2;\n            fcn.00036460(var_ch);\n            var_14h = 0;\n        }\n        else {\n            *puVar2 = 0;\n            var_18h = puVar2 + 1;\n            var_8h = var_ch;\n            var_4h = 0;\n            var_34h = var_18h;\n            do {\n                cVar1 = *var_34h;\n                var_34h = var_34h + 1;\n            } while (cVar1 != '\\0');\n            var_10h = fcn.0007c770(&var_14h, &var_8h, var_18h, var_34h + (1 - (puVar2 + 2)), 1);\n            fcn.00036460(var_ch);\n            if (var_10h == 0) {\n                if (arg_ch != NULL) {\n                    var_44h = arg_ch;\n                    do {\n                        cVar1 = *var_44h;\n                        var_44h = var_44h + 1;\n                    } while (cVar1 != '\\0');\n                    arg_ch_00 = fcn.00036330(var_44h + (2 - (arg_ch + 1)));\n                    if (arg_ch_00 == NULL) {\n                        fcn.0007cb90(&var_14h, 0);\n                        return 0;\n                    }\n                    var_54h = arg_ch;\n                    var_58h = arg_ch_00;\n                    do {\n                        cVar1 = *var_54h;\n                        *var_58h = cVar1;\n                        var_54h = var_54h + 1;\n                        var_58h = var_58h + 1;\n                    } while (cVar1 != '\\0');\n                    arg_ch_00[var_44h + (2 - (arg_ch + 1)) + -1] = '\\0';\n                    for (var_28h = arg_ch_00; *var_28h != '\\0'; var_28h = var_28h + 1) {\n                        if (*var_28h == ',') {\n                            *var_28h = '\\0';\n                        }\n                    }\n                    var_10h = fcn.0007cc40(var_14h, arg_ch_00, 0);\n                    if (var_10h != 0) {\n                        fcn.0002a200(8, 0, var_10h, 0, 0);\n                        fcn.00036460(arg_ch_00);\n                        fcn.0007cb90(&var_14h, 0);\n                        return 0;\n                    }\n                    fcn.00036460(arg_ch_00);\n                }\n                var_20h = 0;\n                var_1ch = 0;\n                var_24h = 0x85020e20;\n                fcn.0007ccf0(var_14h, 2, &var_24h, 0xc, 0);\n                fcn.0007ccf0(var_14h, 5, 0x85020e40, 0, 0);\n                var_10h = fcn.0007cdf0(var_14h, 0x85020c60, 0, 0);\n                if (var_10h != 0) {\n                    fcn.0002a200(8, 0, var_10h, 0, 0);\n                    fcn.0007cb90(&var_14h, 0);\n                    var_14h = 0;\n                }\n            }\n            else {\n                fcn.0002a200(8, 0, var_10h, 0, 0);\n                var_14h = 0;\n            }\n        }\n    }\n    return var_14h;\n}\n",
        "token_count": 1116
    },
    "00024c60": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00024c60(uint arg_8h, uint arg_ch, uint *arg_10h, uint32_t arg_14h, uint32_t **arg_18h, uint *arg_1ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t *puVar3;\n    uint32_t uVar4;\n    uint var_128h;\n    uint var_124h;\n    uint var_120h;\n    uint var_1ch;\n    uint32_t var_18h;\n    uint var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    if (arg_14h < 0x15) {\n        uVar1 = 0x21590064;\n    }\n    else {\n        var_1ch = *arg_10h;\n        var_18h = arg_10h[1];\n        var_14h = arg_10h[2];\n        var_10h = arg_10h[3];\n        var_ch = arg_10h[4];\n        var_8h._0_1_ = *(arg_10h + 5);\n        fcn.00024110(&var_1ch);\n        if ((var_18h & 0x80000000) == 0) {\n            if ((var_10h & 1) != 0) {\n                var_4h = fcn.000299b0(0xb, 0);\n                if (var_18h <= var_4h) {\n                    puVar3 = fcn.0007d4e0(arg_8h, 0x10, 0);\n                    if (puVar3 != NULL) {\n                        *puVar3 = 0;\n                        puVar3[1] = 0;\n                        puVar3[2] = 0;\n                        puVar3[3] = 0;\n                        *puVar3 = var_4h;\n                        uVar4 = fcn.000299b0(1, 0);\n                        puVar3[1] = uVar4;\n                        fcn.0002f610(puVar3);\n                        *arg_18h = puVar3;\n                        *arg_1ch = 0x10;\n                    }\n                    fcn.0002a200(5, 0, 0x21590202, var_1ch, var_18h);\n                    return 0x21590202;\n                }\n                fcn.000299f0(0xb, var_18h);\n            }\n            if ((var_14h == '\\x02') && (puVar3 = fcn.0007d4e0(arg_8h, 4, 0),  puVar3 != NULL)) {\n                *puVar3 = var_18h;\n                fcn.0007d650(arg_8h, puVar3);\n            }\n        }\n        else {\n            iVar2 = fcn.000299b0(3, 0);\n            if ((iVar2 != 0) && (iVar2 = fcn.0007d5f0(arg_8h, 4, &var_120h, 0x100, 0),  iVar2 == 0)) {\n                fcn.0002a900(var_18h & 0x7fffffff, &var_120h);\n            }\n        }\n        uVar1 = fcn.000272a0(arg_8h, arg_ch, arg_10h + 0x15, arg_14h - 0x15, arg_18h, arg_1ch, &var_1ch);\n    }\n    return uVar1;\n}\n",
        "token_count": 828
    },
    "00024e40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00024e40(uint noname_0, uint32_t *arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint32_t arg_8h;\n    uint var_4h;\n    \n    if (((arg_ch != NULL) && (arg_8h = *arg_ch,  arg_8h != 0)) && ((arg_8h & 0x80000000) == 0)) {\n        fcn.000279f0(arg_8h, arg_10h, arg_14h, arg_18h);\n    }\n    return;\n}\n",
        "token_count": 141
    },
    "00024e80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00024e80(int32_t arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint var_14ch;\n    uint var_144h;\n    uint *var_140h;\n    uint var_138h;\n    char *var_134h;\n    uint *var_130h;\n    uint var_12ch;\n    uint var_124h;\n    uint *var_120h;\n    char *var_11ch;\n    uint var_118h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    var_11ch = NULL;\n    var_8h = 0;\n    do {\n        if (9 < var_8h) {\ncode_r0x0002506d:\n            var_11ch[arg_8h] = '\\0';\n            return;\n        }\n        iVar2 = fcn.000295a0(var_8h + 0x191, &var_118h, 0x104, &var_4h);\n        if (iVar2 == 0) {\n            if (var_118h == '&') {\n                var_ch = fcn.00036fe0(&var_118h + 1, 0, 0);\n                if ((var_ch == 0) || (iVar2 = fcn.0002c8b0(var_ch, 0xfffffffe, 1, 0, &var_118h),  iVar2 != 0))\n                goto code_r0x00024e9c;\n            }\n            else {\n                var_ch = 0;\n            }\n            var_120h = &var_118h;\n            do {\n                cVar1 = *var_120h;\n                var_120h = var_120h + 1;\n            } while (cVar1 != '\\0');\n            if ((arg_ch - var_11ch) + -1 <= var_120h + (1 - (&var_118h + 1))) {\n                if (var_ch != 0) {\n                    fcn.0002cbb0(var_ch);\n                }\n                goto code_r0x0002506d;\n            }\n            var_130h = &var_118h;\n            var_134h = var_11ch + arg_8h;\n            do {\n                cVar1 = *var_130h;\n                *var_134h = cVar1;\n                var_130h = var_130h + 1;\n                var_134h = var_134h + 1;\n            } while (cVar1 != '\\0');\n            var_140h = &var_118h;\n            do {\n                cVar1 = *var_140h;\n                var_140h = var_140h + 1;\n            } while (cVar1 != '\\0');\n            var_11ch = var_140h + var_11ch + (1 - (&var_118h + 1));\n        }\ncode_r0x00024e9c:\n        var_8h = var_8h + 1;\n    } while( true );\n}\n",
        "token_count": 690
    },
    "00025080": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00025080(char *arg_8h, uint *arg_ch, int32_t arg_10h)\n\n{\n    char *pcVar1;\n    char cVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint *puVar6;\n    uint var_2d0h;\n    char *var_2cch;\n    char *var_2c8h;\n    uint *var_2c0h;\n    uint var_2bch;\n    uint var_2b8h;\n    uint var_2b0h;\n    char *var_2ach;\n    uint var_2a4h;\n    uint *var_2a0h;\n    char *var_29ch;\n    uint var_294h;\n    char *var_290h;\n    uint *var_28ch;\n    uint *var_284h;\n    uint var_280h;\n    uint var_27ch;\n    uint var_274h;\n    uint *var_270h;\n    uint var_268h;\n    uint *var_264h;\n    char *var_260h;\n    uint var_25ch;\n    uint var_254h;\n    uint *var_250h;\n    uint var_24ch;\n    uint var_244h;\n    char *var_240h;\n    uint var_23ch;\n    int32_t var_228h;\n    uchar uStack541;\n    uint var_218h;\n    uchar uStack277;\n    uint var_110h;\n    char *var_4h;\n    \n    var_240h = arg_8h;\n    do {\n        cVar2 = *var_240h;\n        var_240h = var_240h + 1;\n    } while (cVar2 != '\\0');\n    var_250h = arg_ch;\n    do {\n        cVar2 = *var_250h;\n        var_250h = var_250h + 1;\n    } while (cVar2 != '\\0');\n    if (var_240h + var_250h + (-(arg_ch + 1) - (arg_8h + 1)) < 0x105) {\n        var_260h = arg_8h;\n        var_264h = &var_218h;\n        do {\n            cVar2 = *var_260h;\n            *var_264h = cVar2;\n            var_260h = var_260h + 1;\n            var_264h = var_264h + 1;\n        } while (cVar2 != '\\0');\n        var_4h = fcn.00025640(&var_218h);\n        if (var_4h == NULL) {\n            var_270h = arg_ch;\n            do {\n                cVar2 = *var_270h;\n                var_270h = var_270h + 1;\n            } while (cVar2 != '\\0');\n            var_284h = &uStack541;\n            do {\n                pcVar1 = var_284h + 1;\n                var_284h = var_284h + 1;\n            } while (*pcVar1 != '\\0');\n            puVar6 = arg_ch;\n            for (uVar5 = var_270h - arg_ch >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n                *var_284h = *puVar6;\n                puVar6 = puVar6 + 1;\n                var_284h = var_284h + 1;\n            }\n            for (uVar5 = var_270h - arg_ch & 3; uVar5 != 0; uVar5 = uVar5 - 1) {\n                *var_284h = *puVar6;\n                puVar6 = puVar6 + 1;\n                var_284h = var_284h + 1;\n            }\n        }\n        else {\n            var_28ch = arg_ch;\n            var_290h = var_4h;\n            do {\n                cVar2 = *var_28ch;\n                *var_290h = cVar2;\n                var_28ch = var_28ch + 1;\n                var_290h = var_290h + 1;\n            } while (cVar2 != '\\0');\n        }\n        iVar4 = fcn.00036da0(&var_218h, &var_23ch);\n        if ((iVar4 == -1) || (var_228h == 0)) {\n            uVar3 = 0xffffffff;\n        }\n        else {\n            iVar4 = fcn.00036da0(arg_8h, &var_23ch);\n            if (iVar4 == 0) {\n                var_29ch = arg_8h;\n                var_2a0h = &var_110h;\n                do {\n                    cVar2 = *var_29ch;\n                    *var_2a0h = cVar2;\n                    var_29ch = var_29ch + 1;\n                    var_2a0h = var_2a0h + 1;\n                } while (cVar2 != '\\0');\n                var_4h = fcn.00025640(&var_110h);\n                if (var_4h == NULL) {\n                    var_2ach = 0x85010658;\n                    pcVar1 = var_2ach;\n                    do {\n                        var_2ach = pcVar1;\n                        pcVar1 = var_2ach + 1;\n                    } while (*var_2ach != '\\0');\n                    var_2c0h = &uStack277;\n                    do {\n                        pcVar1 = var_2c0h + 1;\n                        var_2c0h = var_2c0h + 1;\n                    } while (*pcVar1 != '\\0');\n                    puVar6 = 0x85010658;\n                    for (uVar5 = var_2ach + 0x7afef9a9 >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n                        *var_2c0h = *puVar6;\n                        puVar6 = puVar6 + 1;\n                        var_2c0h = var_2c0h + 1;\n                    }\n                    for (uVar5 = var_2ach + 0x7afef9a9 & 3; uVar5 != 0; uVar5 = uVar5 - 1) {\n                        *var_2c0h = *puVar6;\n                        puVar6 = puVar6 + 1;\n                        var_2c0h = var_2c0h + 1;\n                    }\n                }\n                else {\n                    var_2c8h = 0x85010658;\n                    var_2cch = var_4h;\n                    do {\n                        cVar2 = *var_2c8h;\n                        *var_2cch = cVar2;\n                        var_2c8h = var_2c8h + 1;\n                        var_2cch = var_2cch + 1;\n                    } while (cVar2 != '\\0');\n                }\n                iVar4 = fcn.00036da0(&var_110h, &var_23ch);\n                if ((iVar4 == 0) && (iVar4 = fcn.00036f30(&var_110h),  iVar4 == -1)) {\n                    return 0xffffffff;\n                }\n                iVar4 = fcn.00037820(arg_8h, &var_110h);\n                if (iVar4 == -1) {\n                    return 0xffffffff;\n                }\n                iVar4 = fcn.00025550(&var_218h, arg_8h);\n                if (iVar4 == -1) {\n                    fcn.00036f30(arg_8h);\n                    fcn.00037820(&var_110h, arg_8h);\n                    return 0xffffffff;\n                }\n            }\n            else {\n                iVar4 = fcn.00025550(&var_218h, arg_8h);\n                if (iVar4 == -1) {\n                    return 0xffffffff;\n                }\n            }\n            if (arg_10h != 0) {\n                fcn.00036f30(&var_218h);\n            }\n            uVar3 = 0;\n        }\n    }\n    else {\n        uVar3 = 0xffffffff;\n    }\n    return uVar3;\n}\n",
        "token_count": 1869
    },
    "00025550": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00025550(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_810h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.000367c0(arg_8h, 0x85010660);\n    if (var_4h != 0) {\n        var_ch = fcn.000367c0(arg_ch, 0x85010664);\n        if (var_ch == 0) {\n            fcn.00036970(var_4h);\n        }\n        else {\n            do {\n                var_8h = fcn.000369f0(&var_810h, 1, 0x800, var_4h);\n                if (var_8h == 0) {\n                    fcn.00036970(var_4h);\n                    fcn.00036970(var_ch);\n                    return 0;\n                }\n                iVar1 = fcn.00036980(&var_810h, 1, var_8h, var_ch);\n            } while (iVar1 == var_8h);\n            fcn.00036970(var_4h);\n            fcn.00036970(var_ch);\n            fcn.00036f30(arg_ch);\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 305
    },
    "00025640": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00025640(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = fcn.0007f7ea(arg_8h, 0x2e);\n    uVar1 = fcn.0007f7ea(arg_8h, 0x5c);\n    if (((var_4h != 0) && (uVar1 != 0)) && (var_4h < uVar1)) {\n        var_4h = 0;\n    }\n    return var_4h;\n}\n",
        "token_count": 144
    },
    "00025690": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00025690(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.000299b0(0xdf, 300000);\n    uVar2 = fcn.000299b0(0xe0, 9000000);\n    if (uVar1 < uVar2) {\n        uVar3 = fcn.0007f77e();\n        var_ch = uVar3 % ((uVar2 - uVar1) + 1) + uVar1;\n    }\n    else {\n        uVar3 = fcn.0007f77e();\n        var_ch = uVar3 % ((uVar1 - uVar2) + 1) + uVar2;\n    }\n    iVar4 = fcn.00034df0(0x8509ef68, var_ch >> 1);\n    if (iVar4 != -1) {\n        do {\n            if (*0x8509ef5c != 0) break;\n            fcn.00025990();\n            if (uVar1 < uVar2) {\n                uVar3 = fcn.0007f77e();\n                var_ch = uVar3 % ((uVar2 - uVar1) + 1) + uVar1;\n            }\n            else {\n                uVar3 = fcn.0007f77e();\n                var_ch = uVar3 % ((uVar1 - uVar2) + 1) + uVar2;\n            }\n            iVar4 = fcn.00034df0(0x8509ef68, var_ch);\n        } while (iVar4 != -1);\n        fcn.00034dc0(0x8509ef54);\n    }\n    return 0;\n}\n",
        "token_count": 422
    },
    "00025790": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00025790(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.000299b0(0xdf, 300000);\n    uVar2 = fcn.000299b0(0xe0, 9000000);\n    if (uVar1 < uVar2) {\n        uVar3 = fcn.0007f77e();\n        var_ch = uVar3 % ((uVar2 - uVar1) + 1) + uVar1;\n    }\n    else {\n        uVar3 = fcn.0007f77e();\n        var_ch = uVar3 % ((uVar1 - uVar2) + 1) + uVar2;\n    }\n    iVar4 = fcn.00034df0(0x8509ef58, var_ch >> 1);\n    if (iVar4 != -1) {\n        do {\n            if (*0x8509ef5c != 0) break;\n            fcn.000263d0();\n            if (uVar1 < uVar2) {\n                uVar3 = fcn.0007f77e();\n                var_ch = uVar3 % ((uVar2 - uVar1) + 1) + uVar1;\n            }\n            else {\n                uVar3 = fcn.0007f77e();\n                var_ch = uVar3 % ((uVar1 - uVar2) + 1) + uVar2;\n            }\n            iVar4 = fcn.00034df0(0x8509ef58, var_ch);\n        } while (iVar4 != -1);\n        fcn.00034dc0(0x8509f084);\n    }\n    return 0;\n}\n",
        "token_count": 423
    },
    "00025890": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00025890(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.000299b0(0xdf, 300000);\n    uVar2 = fcn.000299b0(0xe0, 9000000);\n    var_8h = fcn.00026f20();\n    var_10h = uVar1;\n    while ((iVar3 = fcn.00034df0(*0x8509f088, 0xffffffff),  iVar3 != -1 && (*0x8509ef5c == 0))) {\n        fcn.00026200();\n        iVar3 = fcn.00026f20();\n        if (iVar3 - var_8h < uVar1) {\n            fcn.0005bdd0(1000);\n        }\n        else {\n            fcn.000263d0();\n            iVar3 = fcn.00026f20();\n            if (var_10h <= iVar3 - var_8h) {\n                fcn.00025990();\n                fcn.000263d0();\n                if (uVar1 < uVar2) {\n                    uVar4 = fcn.0007f77e();\n                    var_10h = uVar4 % ((uVar2 - uVar1) + 1) + uVar1;\n                }\n                else {\n                    uVar4 = fcn.0007f77e();\n                    var_10h = uVar4 % ((uVar1 - uVar2) + 1) + uVar2;\n                }\n                var_8h = fcn.00026f20();\n            }\n        }\n    }\n    fcn.00034dc0(0x8509ef60);\n    return 0;\n}\n",
        "token_count": 437
    },
    "00025990": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_f0h\n// WARNING: Variable defined which should be unmapped: var_ech\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00025990(void)\n\n{\n    uint arg_18h;\n    int32_t iVar1;\n    bool bVar2;\n    uint32_t var_f0h;\n    uint32_t var_ech;\n    uint var_e8h;\n    uint var_e4h;\n    int32_t var_e0h;\n    int32_t var_dch;\n    uint var_d8h;\n    uint var_d4h;\n    uint32_t var_d0h;\n    uint32_t var_cch;\n    int32_t var_c8h;\n    uint32_t var_c4h;\n    uint32_t var_c0h;\n    uint32_t var_bch;\n    int32_t var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint32_t var_a4h;\n    uint32_t var_84h;\n    uint32_t var_80h;\n    uint32_t var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint32_t var_64h;\n    uint var_60h;\n    uint32_t var_53h;\n    uint var_4fh;\n    uint32_t var_4bh;\n    uint32_t var_47h;\n    int32_t var_42h;\n    uint var_3eh;\n    uint var_3ah;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_b4h = 0;\n    var_bch = 0;\n    var_d0h = 0;\n    *0x8509ef50 = 0;\n    do {\n        var_e0h = 0;\n        var_c8h = 0;\n        fcn.0007f916(&var_68h, 0, 0x52);\n        var_70h = fcn.000299b0(1, 0);\n        arg_18h = fcn.000299b0(400, 20000);\n        var_d4h = fcn.000299b0(0xe1, 0x1000);\n        var_6ch = fcn.000299b0(0xe2, 0x10000);\n        var_47h._0_1_ = 1;\n        iVar1 = fcn.000299b0(2, 0);\n        var_4bh = iVar1 + 1;\n        var_cch = 0;\n        var_c0h = 0;\n        while (iVar1 = fcn.00023920(var_70h, 0, 0, &var_b0h),  iVar1 == 0) {\n            if (var_80h < var_84h) {\n                var_4bh = var_a4h;\n                var_47h._0_1_ = 0;\n                stack0xffffffb6 = var_80h;\n                var_42h = var_84h - var_80h;\n                var_b4h = var_ach;\n                var_c8h = 1;\n                var_cch = var_a4h;\n                var_c0h = var_80h;\n                var_bch = var_84h;\n                break;\n            }\n            fcn.00025fb0(var_70h, var_ach, var_84h, var_a4h);\n        }\n        if ((*0x8509ef50 == 0) && (var_dch = fcn.00026a90(0x8509ef50, 0, &var_d0h),  var_dch != 0)) break;\n        var_60h._0_1_ = 1;\n        var_64h = var_70h | 0x80000000;\n        var_53h = var_70h;\n        var_4fh = 0;\n        var_47h._0_1_ = var_47h | 0x1a;\n        var_3eh = var_d4h;\n        var_3ah = var_6ch;\n        fcn.00024110(&var_68h);\n        fcn.00026fd0(&var_53h);\n        var_dch = fcn.0007cfa0(*0x8509ef50, 0xb, &var_68h, 0x52, &var_ch, 0);\n        if (var_dch != 0) {\n            if (var_cch == 0) {\n                var_ech = var_d0h | 0x80000000;\n            }\n            else {\n                var_ech = var_cch;\n            }\n            fcn.0002a200(2, 0, var_dch, 0, var_ech);\n            break;\n        }\n        var_dch = fcn.0007d060(*0x8509ef50, var_ch, &var_e0h, &var_c4h, arg_18h, 0);\n        if (var_dch == 0) {\n            if (var_c4h < 0x40) {\n                var_dch = 0x215901f5;\n                if (var_cch == 0) {\n                    var_f0h = var_d0h | 0x80000000;\n                }\n                else {\n                    var_f0h = var_cch;\n                }\n                fcn.0002a200(2, 0, 0x215901f5, 0, var_f0h);\n                fcn.0007d300(*0x8509ef50, var_ch);\n                break;\n            }\n            fcn.000270a0(var_e0h);\n            if (*(var_e0h + 0x30) < *(var_e0h + 0x2c)) {\n                fcn.0007d300(*0x8509ef50, var_ch);\n                break;\n            }\n            if (var_c8h == 0) {\n                var_cch = *(var_e0h + 0xc);\n                var_bch = *(var_e0h + 0x2c);\n                var_4h = fcn.000239a0(var_70h, 0, var_cch, var_bch, 0, &var_b4h);\n                if (var_4h != 0) {\n                    fcn.0002a200(2, 0, var_4h + 0x191U | 0x21590000, 0, var_cch);\n                    fcn.0007d300(*0x8509ef50, var_ch);\n                    break;\n                }\n            }\n            while (var_dch = fcn.0007d060(*0x8509ef50, var_ch, &var_d8h, &var_b8h, arg_18h, 0),  var_dch == 0) {\n                if (var_b8h == 0) goto code_r0x00025e12;\n                var_4h = fcn.000239e0(var_70h, 0, var_b4h, var_c0h, var_d8h, var_b8h);\n                fcn.0007d2c0(*0x8509ef50, var_d8h);\n                if (var_4h != 0) {\n                    fcn.0002a200(2, 0, var_dch, 0, var_cch);\n                    goto code_r0x00025e12;\n                }\n                var_c0h = var_c0h + var_b8h;\n            }\n            fcn.0002a200(2, 0, var_dch, 0, var_cch);\n        }\ncode_r0x00025e12:\n        bVar2 = false;\n        var_dch = fcn.0007d1f0(*0x8509ef50, var_ch, &var_8h, &var_d8h, &var_b8h, arg_18h, 0);\n        if (var_dch == 0) {\n            if (var_8h == 0) {\n                bVar2 = var_c0h != var_bch;\n                if (bVar2) {\n                    fcn.0002a200(2, 0, 0x215901f6, 0, var_cch);\n                    fcn.00023a70(var_70h, 0, var_b4h);\n                }\n                else {\n                    fcn.00025fb0(var_70h, var_b4h, var_bch, var_cch);\n                }\n                bVar2 = !bVar2;\n            }\n            else {\n                if ((var_8h == 0x21590196) && (var_c8h != 0)) {\n                    fcn.00023a70(var_70h, 0, var_b4h);\n                    fcn.0002a200(2, 0, var_8h, 0, var_cch);\n                }\n                if ((var_8h != 0x21590196) && (var_8h != 0x21590192)) {\n                    fcn.0002a200(2, 0, var_8h, 0, var_cch);\n                }\n            }\n            fcn.0007d2c0(*0x8509ef50, var_d8h);\n        }\n        else {\n            fcn.0002a200(2, 0, var_dch, 0, var_cch);\n        }\n        fcn.0007d2c0(*0x8509ef50, var_e0h);\n        var_e0h = 0;\n    } while (bVar2);\n    if (*0x8509ef50 != 0) {\n        fcn.0007d2c0(*0x8509ef50, var_e0h);\n        fcn.0007cb90(0x8509ef50, 0);\n    }\n    return;\n}\n",
        "token_count": 2222
    },
    "00025fb0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00025fb0(uint arg_8h, uint arg_ch, uint32_t arg_10h, uint32_t arg_14h)\n\n{\n    int32_t iVar1;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint32_t var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint32_t var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint *var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_1ch = 0;\n    var_14h = 0;\n    var_18h = 0;\n    var_10h = fcn.00036330(arg_10h);\n    if (var_10h == NULL) {\n        fcn.0002a200(3, 0, 0x21590004, 0, arg_14h);\n    }\n    else {\n        var_28h = fcn.000299b0(2, 0);\n        if (var_28h < arg_14h) {\n            var_ch = fcn.00023a20(arg_8h, 0, arg_ch, 0, var_10h, arg_10h, &arg_10h);\n            if (var_ch == 0) {\n                if (arg_10h < 0x15) {\n                    fcn.0002a200(3, 0, 0x21590064, 0, arg_14h);\n                }\n                else {\n                    var_40h = *var_10h;\n                    var_3ch = var_10h[1];\n                    var_38h = var_10h[2];\n                    var_34h = var_10h[3];\n                    var_30h = var_10h[4];\n                    var_2ch._0_1_ = *(var_10h + 5);\n                    fcn.00024110(&var_40h);\n                    if (arg_14h == var_3ch) {\n                        var_20h = 0x8508f950;\n                        if ((var_38h == '\\x02') || (var_38h == '\\x01')) {\n                            var_18h = 1;\n                            fcn.00023a70(arg_8h, 0, arg_ch);\n                        }\n                        var_8h = 0;\n                        var_4h = 0;\n                        var_24h = fcn.000272a0(&var_20h, var_40h, var_10h + 0x15, arg_10h - 0x15, &var_1ch, &var_14h, \n                                               &var_40h);\n                        if (var_18h != 0) {\n                            iVar1 = fcn.00038390(&var_8h);\n                            if (iVar1 != 0) {\n                                var_48h = 3600000;\n                                var_44h = 0;\n                                _var_48h = fcn.0007f8fe(3600000, 0, 10000, 0);\n                                iVar1 = fcn.0007f772(var_8h, 0, &var_48h);\n                                if (iVar1 == 0x102) {\n                                    fcn.0002a200(0xc, 0, 0x21590002, var_40h, var_3ch);\n                                }\n                                fcn.00038370(&var_8h);\n                            }\n                        }\n                        fcn.00036460(var_1ch);\n                        fcn.000299f0(2, arg_14h);\n                    }\n                    else {\n                        fcn.0002a200(3, 0, 0x21590064, 0, arg_14h);\n                    }\n                }\n            }\n            else {\n                fcn.0002a200(3, 0, var_ch + 0x191U | 0x21590000, 0, arg_14h);\n            }\n        }\n        else {\n            fcn.0002a200(3, 0, 0x215901f7, 0, arg_14h);\n        }\n    }\n    fcn.00036460(var_10h);\n    if (var_18h == 0) {\n        fcn.00023a70(arg_8h, 0, arg_ch);\n    }\n    return;\n}\n",
        "token_count": 1046
    },
    "000263d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.000263d0(void)\n\n{\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_1ch = 0;\n    var_4h = fcn.000238e0(0xffffffff, 1, &var_14h, &var_10h);\n    if (var_4h == 0) {\n        for (var_ch = 0; var_ch < var_14h; var_ch = var_ch + 1) {\n            var_8h = 0;\n            while ((var_8h < 3 && (var_18h = fcn.00026490(&var_1ch, var_ch * 0x40 + var_10h),  var_18h == 0))) {\n                var_8h = var_8h + 1;\n            }\n        }\n        fcn.00023b80(var_10h);\n        if (var_1ch != 0) {\n            fcn.0007cb90(&var_1ch, 0);\n        }\n    }\n    else {\n        fcn.0002a200(4, 0, var_4h + 0x191U | 0x21590000, 0, 0);\n    }\n    return;\n}\n",
        "token_count": 326
    },
    "00026490": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00026490(int32_t *arg_8h, uint *arg_ch)\n\n{\n    uint arg_24h;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint var_120h;\n    uint *var_11ch;\n    uint var_118h;\n    uint32_t var_114h;\n    uint var_110h;\n    int32_t var_100h;\n    uint32_t var_e4h;\n    uint32_t var_e0h;\n    uint var_cch;\n    uint32_t var_c8h;\n    int32_t var_c4h;\n    uint32_t var_c0h;\n    uint var_bch;\n    uint32_t var_b8h;\n    int32_t var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a4h;\n    int32_t var_a0h;\n    uint32_t var_84h;\n    uint32_t var_80h;\n    uint32_t var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint32_t var_64h;\n    uint var_60h;\n    uint var_53h;\n    uint var_4fh;\n    uint var_4bh;\n    uint32_t var_47h;\n    int32_t var_42h;\n    uint32_t var_36h;\n    int32_t var_32h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_70h = fcn.000299b0(1, 0);\n    arg_24h = fcn.000299b0(400, 20000);\n    var_4h = fcn.000299b0(0x143, 0x1000);\n    var_c8h = fcn.000299b0(0x144, 0x10000);\n    iVar1 = fcn.00023960(*arg_ch, arg_ch[2], arg_ch[1], &var_b0h);\n    if (iVar1 == 0) {\n        if (var_80h == var_84h) {\n            var_cch = var_a4h;\n            if ((*arg_8h == 0) && (var_114h = fcn.00026a90(arg_8h, 1, 0),  var_114h != 0)) {\n                if (var_114h != 0x21590064) {\n                    fcn.0002a200(4, 0, var_114h, 0, var_cch);\n                }\n                var_118h = 1;\n            }\n            else {\n                fcn.0007f916(&var_68h, 0, 0x52);\n                var_60h._0_1_ = 2;\n                var_64h = var_70h | 0x80000000;\n                var_53h = 0xffffffff;\n                var_4fh = 1;\n                var_4bh = var_cch;\n                var_47h._0_1_ = 4;\n                fcn.00024110(&var_68h);\n                fcn.00026fd0(&var_53h);\n                var_114h = fcn.0007cec0(*arg_8h, 0xb, &var_68h, 0x52, &var_ch, &var_11ch, &var_c0h, arg_24h, 0);\n                if (var_114h == 0) {\n                    fcn.0007f916(&var_68h, 0, 0x52);\n                    if (var_ch == 0) {\n                        if (var_c0h < 0x40) {\n                            fcn.0002a200(4, 0, 0x215901f5, 0, var_cch);\n                            fcn.0007d2c0(*arg_8h, var_11ch);\n                            return 1;\n                        }\n                        puVar3 = var_11ch;\n                        puVar4 = &var_110h;\n                        for (iVar1 = 0x10; iVar1 != 0; iVar1 = iVar1 + -1) {\n                            *puVar4 = *puVar3;\n                            puVar3 = puVar3 + 1;\n                            puVar4 = puVar4 + 1;\n                        }\n                        fcn.0007d2c0(*arg_8h, var_11ch);\n                        var_11ch = NULL;\n                        fcn.000270a0(&var_110h);\n                        if ((var_e4h != var_84h) || (var_100h != var_a0h)) {\n                            fcn.0002a200(4, 0, 0x21590202, 0, var_cch);\n                            return 1;\n                        }\n                        var_b8h = var_e0h;\n                    }\n                    else {\n                        fcn.0007d2c0(*arg_8h, var_11ch);\n                        var_11ch = NULL;\n                        var_b8h = 0;\n                        var_47h._0_1_ = 1;\n                        var_32h = var_a0h;\n                    }\n                    var_60h._0_1_ = 1;\n                    var_64h = var_70h | 0x80000000;\n                    var_53h = 0xffffffff;\n                    var_4fh = 1;\n                    var_4bh = var_cch;\n                    stack0xffffffb6 = var_b8h;\n                    var_42h = var_80h - var_b8h;\n                    var_36h = var_84h;\n                    fcn.00024110(&var_68h);\n                    fcn.00026fd0(&var_53h);\n                    var_114h = fcn.0007cfa0(*arg_8h, 0xc, &var_68h, 0x52, &var_6ch, 0);\n                    if (var_114h == 0) {\n                        var_c4h = fcn.00036330(var_c8h);\n                        if (var_c4h == 0) {\n                            fcn.0002a200(4, 0, 0x21590004, 0, var_cch);\n                            var_118h = 0;\n                        }\n                        else {\n                            var_114h = 0;\n                            for (; var_b8h < var_80h; var_b8h = var_b8h + var_b4h) {\n                                if (var_4h < var_c8h) {\n                                    uVar2 = fcn.0007f77e();\n                                    var_b4h = uVar2 % ((var_c8h - var_4h) + 1) + var_4h;\n                                }\n                                else {\n                                    uVar2 = fcn.0007f77e();\n                                    var_b4h = uVar2 % ((var_4h - var_c8h) + 1) + var_c8h;\n                                }\n                                if (var_80h < var_b4h + var_b8h) {\n                                    var_b4h = var_80h - var_b8h;\n                                }\n                                var_8h = fcn.00023a20(0xffffffff, 1, var_ach, var_b8h, var_c4h, var_b4h, &var_b4h);\n                                if (var_8h != 0) {\n                                    var_114h = var_8h + 0x191U | 0x21590000;\n                                    fcn.0002a200(4, 0, var_114h, 0, var_cch);\n                                    fcn.00036460(var_c4h);\n                                    return 0;\n                                }\n                                var_114h = fcn.0007d130(*arg_8h, var_6ch, var_c4h, var_b4h, 0);\n                                if (var_114h != 0) {\n                                    fcn.0002a200(4, 0, var_114h, 0, var_cch);\n                                    fcn.00036460(var_c4h);\n                                    return 0;\n                                }\n                            }\n                            fcn.00036460(var_c4h);\n                            if ((var_114h == 0) && (var_114h = fcn.0007d130(*arg_8h, var_6ch, 0, 0, 0),  var_114h != 0))\n                            {\n                                fcn.0002a200(4, 0, var_114h, 0, var_cch);\n                            }\n                            var_118h = 0;\n                            var_114h = fcn.0007d1f0(*arg_8h, var_6ch, &var_ch, &var_c4h, &var_bch, arg_24h, 0);\n                            fcn.0002a200(4, var_ch, var_114h, 0, var_cch);\n                            if ((var_114h == 0) && (fcn.0007d2c0(*arg_8h, var_c4h),  var_ch == 0)) {\n                                fcn.00023a70(0xffffffff, 1, var_ach);\n                                var_118h = 1;\n                                fcn.00026eb0(var_cch);\n                            }\n                        }\n                    }\n                    else {\n                        fcn.0002a200(4, 0, var_114h, 0, var_cch);\n                        var_118h = 0;\n                    }\n                }\n                else {\n                    fcn.0002a200(4, 0, var_114h, 0, var_cch);\n                    var_118h = 0;\n                }\n            }\n        }\n        else {\n            var_118h = 1;\n        }\n    }\n    else {\n        var_118h = 1;\n    }\n    return var_118h;\n}\n",
        "token_count": 2236
    },
    "00026a90": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00026a90(uint *arg_8h, int32_t arg_ch, int32_t *arg_10h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uchar *puVar3;\n    char *arg_ch_00;\n    char *arg_8h_00;\n    uint var_1dch;\n    char *var_1d8h;\n    uint *var_1d4h;\n    uint var_1d0h;\n    uint var_1c8h;\n    uint *var_1c4h;\n    uint var_1c0h;\n    uint var_1b8h;\n    char *var_1b4h;\n    uint var_1b0h;\n    uint var_1ach;\n    char *var_1a8h;\n    uint var_1a4h;\n    int32_t var_1a0h;\n    uint var_19ch;\n    uint var_198h;\n    uint var_118h;\n    uint *var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (arg_ch == 0) {\n        var_1a0h = fcn.000299b0(200, 0);\n    }\n    else {\n        var_1a0h = fcn.000299b0(300, 0);\n    }\n    if (var_1a0h == 0) {\n        uVar2 = 0x21590064;\n    }\n    else {\n        var_8h = fcn.0007f77e();\n        var_8h = var_8h % var_1a0h;\n        if (arg_ch == 0) {\n            var_4h = fcn.000295a0(var_8h + 0xc9, &var_198h, 0x80, &var_ch);\n        }\n        else {\n            var_4h = fcn.000295a0(var_8h + 0x12d, &var_198h, 0x80, &var_ch);\n        }\n        if (var_4h == 0) {\n            var_118h._0_1_ = '\\0';\n            if (arg_ch == 0) {\n                fcn.000295a0(var_8h + 0xd4, &var_118h, 0x100, &var_ch);\n            }\n            else {\n                fcn.000295a0(var_8h + 0x138, &var_118h, 0x100, &var_ch);\n            }\n            puVar3 = fcn.0007f7de(&var_198h, 0x2f);\n            if (puVar3 == NULL) {\n                uVar2 = 0x21590064;\n            }\n            else {\n                *puVar3 = 0;\n                var_14h = &var_198h;\n                var_10h = 0;\n                var_1b4h = puVar3 + 1;\n                do {\n                    cVar1 = *var_1b4h;\n                    var_1b4h = var_1b4h + 1;\n                } while (cVar1 != '\\0');\n                uVar2 = fcn.0007c940(arg_8h, &var_14h, puVar3 + 1, var_1b4h + (1 - (puVar3 + 2)), 1);\n                if (uVar2 == 0) {\n                    if (var_118h != '\\0') {\n                        var_1c4h = &var_118h;\n                        do {\n                            cVar1 = *var_1c4h;\n                            var_1c4h = var_1c4h + 1;\n                        } while (cVar1 != '\\0');\n                        arg_8h_00 = var_1c4h + (2 - (&var_118h + 1));\n                        arg_ch_00 = fcn.00036330(arg_8h_00);\n                        if (arg_ch_00 == NULL) {\n                            fcn.0007cb90(arg_8h, 0);\n                            return 0x21590004;\n                        }\n                        var_1d4h = &var_118h;\n                        var_1d8h = arg_ch_00;\n                        do {\n                            cVar1 = *var_1d4h;\n                            *var_1d8h = cVar1;\n                            var_1d4h = var_1d4h + 1;\n                            var_1d8h = var_1d8h + 1;\n                        } while (cVar1 != '\\0');\n                        arg_ch_00[arg_8h_00 + -1] = '\\0';\n                        for (var_1a8h = arg_ch_00; *var_1a8h != '\\0'; var_1a8h = var_1a8h + 1) {\n                            if (*var_1a8h == ',') {\n                                *var_1a8h = '\\0';\n                            }\n                        }\n                        uVar2 = fcn.0007cc40(*arg_8h, arg_ch_00, 0);\n                        if (uVar2 != 0) {\n                            fcn.00036460(arg_ch_00);\n                            fcn.0007cb90(arg_8h, 0);\n                            fcn.0002a200(1, 0, uVar2, 0, 0);\n                            return uVar2;\n                        }\n                        fcn.00036460(arg_ch_00);\n                    }\n                    if (arg_10h != NULL) {\n                        *arg_10h = var_8h + 1000000000;\n                    }\n                    uVar2 = 0;\n                }\n                else {\n                    fcn.0002a200(1, 0, uVar2, 0, 0);\n                }\n            }\n        }\n        else {\n            uVar2 = var_4h + 0x191U | 0x21590000;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 1367
    },
    "00027180": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00027180(void)\n\n{\n    fcn.000355f0(0x85090464);\n    *0x85090468 = fcn.00036420(0x1a0, 0x14);\n    if (*0x85090468 != 0) {\n        fcn.00034d00(0x85090324);\n        fcn.0001a700(0x8509046c, 0x85024ff0, 0);\n        if (*0x8509f1ec == 0) {\n            *0x8509f1ec = -0x7afdc760;\n        }\n    }\n    return;\n}\n",
        "token_count": 148
    },
    "000271e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.000271e0(void)\n\n{\n    int32_t var_4h;\n    \n    fcn.00034dc0(0x85090324);\n    fcn.000383c0(0x8509046c, 0);\n    fcn.00038370(0x8509046c);\n    fcn.00034d90(0x85090324);\n    if (*0x85090468 != 0) {\n        fcn.00035650(0x85090464);\n        for (var_4h = 0; var_4h < 0x14; var_4h = var_4h + 1) {\n            if (*(*0x85090468 + var_4h * 0x1a0) != 0) {\n                fcn.0007cb90(var_4h * 0x1a0 + *0x85090468, 0);\n            }\n        }\n        fcn.00036460(*0x85090468);\n        *0x85090468 = 0;\n        fcn.000356c0(0x85090464);\n    }\n    fcn.00035620(0x85090464);\n    return;\n}\n",
        "token_count": 269
    },
    "000272a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Switch with 1 destination removed at 0x00027301\n\nint32_t __cdecl\nfcn.000272a0(uint noname_0, int32_t arg_ch, uint arg_10h, uint arg_14h, uint *arg_18h, uint *arg_1ch, int32_t arg_20h)\n\n{\n    int32_t iVar1;\n    uint var_30h;\n    uint var_ch;\n    uint var_8h;\n    \n    var_8h = 0;\n    if (((arg_ch < 100) || (*(arg_20h + 8) == '\\x04')) ||\n       (iVar1 = fcn.00028be0(&arg_10h, &arg_14h, &var_8h),  iVar1 == 0)) {\n        if (*(arg_20h + 8) - 1 < 4) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n        fcn.0002a200(5, 0x21590001, 0, arg_ch, *(arg_20h + 4));\n        *arg_18h = 0;\n        *arg_1ch = 0;\n        fcn.00036460(var_8h);\n        iVar1 = 0x21590001;\n    }\n    return iVar1;\n}\n",
        "token_count": 310
    },
    "000275d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl\nfcn.000275d0(uint32_t arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h, int32_t *arg_18h, int32_t *arg_1ch, \n            int32_t arg_20h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint *var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint *var_10h;\n    uint32_t var_ch;\n    uint *var_8h;\n    uint32_t var_4h;\n    \n    var_18h = 0x21590001;\n    var_8h = NULL;\n    var_ch = 0;\n    var_4h = 0;\n    var_1ch = 0;\n    if (arg_ch < 100) {\n        *arg_18h = 0;\n        *arg_1ch = 0;\n        for (var_38h = 0; var_38h < 6; var_38h = var_38h + 1) {\n            if (*(var_38h * 8 + -0x7af707c0) == arg_ch) {\n                var_18h = (**(var_38h * 8 + -0x7af707bc))(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n                break;\n            }\n        }\n    }\n    else {\n        if (arg_14h == 0) {\n            var_20h = NULL;\n        }\n        else {\n            var_20h = fcn.0002fa50(arg_10h, arg_14h);\n            if (var_20h == NULL) {\n                return 0x215901f8;\n            }\n        }\n        var_14h = 0;\n        var_18h = fcn.0002b8f0(-(arg_20h != 0) & arg_8h, arg_ch, var_20h, &var_1ch, &var_8h, &var_14h, arg_20h);\n        var_ch = var_14h;\n        while (var_20h != NULL) {\n            puVar1 = *var_20h;\n            if (var_20h[4] != var_20h + 5) {\n                fcn.00036460(var_20h[4]);\n            }\n            fcn.00036460(var_20h);\n            var_20h = puVar1;\n        }\n        if (0x200 < var_ch) {\n            fcn.00037c10(0x8509ef40);\n            if ((*0x850928ec != NULL) && (*0x850928f0 != NULL)) {\n                iVar2 = (**0x850928f0)(var_ch);\n                var_4h = iVar2 + 4;\n                var_10h = fcn.00036330(var_4h);\n                if (var_10h != NULL) {\n                    uVar3 = fcn.000365c0(var_ch);\n                    *var_10h = uVar3;\n                    var_18h = (**0x850928ec)(var_10h + 1, &var_4h, var_8h, var_ch);\n                    if ((var_18h == 0) && (var_4h < var_ch)) {\n                        var_1ch = var_1ch | 0x80;\n                        fcn.00036460(var_8h);\n                        var_8h = var_10h;\n                        var_ch = var_4h + 4;\n                    }\n                    else {\n                        fcn.00036460(var_10h);\n                        var_18h = 0;\n                    }\n                }\n            }\n            fcn.00037cc0(0x8509ef40);\n        }\n        iVar2 = fcn.00029a50(&var_30h, 0x10, 0x227);\n        if (iVar2 == 0) {\n            iVar2 = fcn.00020690(&var_30h, 0x10, var_ch);\n            *arg_1ch = iVar2 + 1;\n            iVar2 = fcn.0007d4e0(arg_8h, *arg_1ch, 0);\n            *arg_18h = iVar2;\n            if (*arg_18h == 0) {\n                *arg_1ch = 0;\n                var_18h = 0x21590004;\n            }\n            else {\n                iVar2 = fcn.000206b0(&var_30h, 0x10, *arg_18h + 1, var_8h, var_ch);\n                *arg_1ch = iVar2 + 1;\n                **arg_18h = var_1ch;\n            }\n        }\n        else {\n            var_18h = 0x215901f9;\n        }\n    }\n    fcn.00036460(var_8h);\n    return var_18h;\n}\n",
        "token_count": 1177
    },
    "00027910": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00027910(int32_t *arg_8h)\n\n{\n    int32_t arg_ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    var_4h = arg_8h;\n    var_8h = 0;\n    var_ch = 0x8508f950;\n    var_10h = 0;\n    arg_ch = fcn.000275d0(&var_ch, *arg_8h, arg_8h + 4, arg_8h[3], &var_8h, &var_10h, 0);\n    if (((var_4h[1] == 3) && (*var_4h == 1)) && (arg_ch == 0)) {\n        var_14h = 0;\n    }\n    else if ((*var_4h == 1) && (arg_ch == 0x21590202)) {\n        var_14h = 0;\n    }\n    else {\n        var_14h = fcn.000279f0(var_4h[2], arg_ch, var_8h, var_10h);\n    }\n    (**0x8508f954)(&var_ch, var_8h, 0);\n    fcn.0002a200(5, arg_ch, var_14h, *var_4h, var_4h[2]);\n    fcn.00036460(arg_8h);\n    return 0;\n}\n",
        "token_count": 352
    },
    "000279f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.000279f0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_14h = 0;\n    var_10h = 0;\n    var_ch = 0;\n    var_18h = arg_ch;\n    var_4h = fcn.000238a0(0xffffffff, 1, arg_8h, arg_10h, arg_14h, &var_18h);\n    if (var_4h == 0) {\n        iVar1 = fcn.00038390(0x8509ef58);\n        if (iVar1 != 0) {\n            fcn.00034dc0(0x8509ef58);\n        }\n        var_18h = 0;\n    }\n    else {\n        var_18h = var_4h + 0x191U | 0x21590000;\n        iVar1 = fcn.000238a0(0xffffffff, 1, arg_8h, 0, 0, &var_18h);\n        if (iVar1 != 0) {\n            var_18h = iVar1 + 0x191U | 0x21590000;\n        }\n    }\n    return var_18h;\n}\n",
        "token_count": 338
    },
    "00027aa0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00027aa0(uint arg_8h, uint noname_1, int32_t arg_10h, int32_t arg_14h, int32_t *arg_18h, int32_t *arg_1ch, \n            int32_t arg_20h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    char *arg_8h_00;\n    uint var_21ch;\n    char *var_218h;\n    uint *var_214h;\n    uint var_210h;\n    uint var_208h;\n    uint *var_204h;\n    uint var_200h;\n    uint var_1f8h;\n    char *var_1f4h;\n    uint var_1f0h;\n    uint var_1ech;\n    char *var_1e8h;\n    uint var_1e4h;\n    int32_t var_1e0h;\n    char *var_1dch;\n    int32_t var_1d8h;\n    uint *var_1d4h;\n    int32_t var_1d0h;\n    int32_t var_1cch;\n    uint var_1c8h;\n    uint *var_1c4h;\n    uint var_1c0h;\n    uint var_1bch;\n    uint var_1b8h;\n    uint var_1b4h;\n    uint var_1b0h;\n    uint var_1a0h;\n    uint var_120h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_4h;\n    \n    var_1d8h = 0;\n    var_1e0h = 0;\n    iVar2 = fcn.00029a50(&fcn.00027aa0::var_1b0h, 0x10, 0x228);\n    if (iVar2 == 0) {\n        var_4h = fcn.00020920(&fcn.00027aa0::var_1b0h, 0x10, 0x195);\n        if (arg_14h < var_4h) {\n            var_1d8h = 0x21590064;\n        }\n        else {\n            iVar2 = fcn.00020780(&fcn.00027aa0::var_1b0h, 0x10, arg_10h, var_4h);\n            if ((iVar2 == 0x195) &&\n               (iVar2 = fcn.000207d0(&fcn.00027aa0::var_1b0h, 0x10, &fcn.00027aa0::var_1a0h, arg_10h, var_4h), \n               iVar2 == 0x195)) {\n                fcn.00026f90(&fcn.00027aa0::var_1a0h);\n                if (arg_20h != 0) {\n                    var_1e4h = fcn.000299b0(1, 0);\n                    var_1e4h = fcn.000365c0(var_1e4h);\n                    var_1d8h = fcn.0007d560(arg_8h, &fcn.00027aa0::var_1e4h, 4, 0);\n                    if (var_1d8h != 0) {\n                        var_1d8h = fcn.00028180(var_1d8h, arg_8h, arg_18h, arg_1ch);\n                        goto code_r0x0002814e;\n                    }\n                }\n                var_1e0h = fcn.00028d90(&fcn.00027aa0::var_1a0h);\n                if (var_1e0h == 0) {\n                    var_1d4h = &fcn.00027aa0::var_1a0h;\n                    pcVar3 = fcn.0007f7de(var_1d4h, 0x2f);\n                    if (pcVar3 == NULL) {\n                        var_1dch = pcVar3;\n                        var_1d8h = fcn.00028180(0x21590064, arg_8h, arg_18h, arg_1ch);\n                        goto code_r0x0002814e;\n                    }\n                    *pcVar3 = '\\0';\n                    var_1dch = pcVar3 + 1;\n                    var_1c4h = var_1d4h;\n                    var_1c0h = 0;\n                    var_1f4h = var_1dch;\n                    do {\n                        cVar1 = *var_1f4h;\n                        var_1f4h = var_1f4h + 1;\n                    } while (cVar1 != '\\0');\n                    var_1d8h = fcn.0007c940(&fcn.00027aa0::var_1e0h, &fcn.00027aa0::var_1c4h, var_1dch, \n                                            var_1f4h + (1 - (pcVar3 + 2)), 1);\n                    if (var_1d8h != 0) {\n                        var_1d8h = fcn.00028180(var_1d8h, arg_8h, arg_18h, arg_1ch);\n                        goto code_r0x0002814e;\n                    }\n                    var_1dch[-1] = '/';\n                    if (var_120h != '\\0') {\n                        var_204h = &fcn.00027aa0::var_120h;\n                        do {\n                            cVar1 = *var_204h;\n                            var_204h = var_204h + 1;\n                        } while (cVar1 != '\\0');\n                        arg_8h_00 = var_204h + (2 - (&fcn.00027aa0::var_120h + 1));\n                        pcVar3 = fcn.00036330(arg_8h_00);\n                        if (pcVar3 == NULL) {\n                            fcn.0007cb90(&fcn.00027aa0::var_1e0h, 0);\n                            var_1d8h = fcn.00028180(0x21590004, arg_8h, arg_18h, arg_1ch);\n                            goto code_r0x0002814e;\n                        }\n                        var_214h = &fcn.00027aa0::var_120h;\n                        var_218h = pcVar3;\n                        do {\n                            cVar1 = *var_214h;\n                            *var_218h = cVar1;\n                            var_214h = var_214h + 1;\n                            var_218h = var_218h + 1;\n                        } while (cVar1 != '\\0');\n                        pcVar3[arg_8h_00 + -1] = '\\0';\n                        for (var_1e8h = pcVar3; *var_1e8h != '\\0'; var_1e8h = var_1e8h + 1) {\n                            if (*var_1e8h == ',') {\n                                *var_1e8h = '\\0';\n                            }\n                        }\n                        var_1d8h = fcn.0007cc40(var_1e0h, pcVar3, 0);\n                        if (var_1d8h != 0) {\n                            fcn.00036460(pcVar3);\n                            fcn.0007cb90(&fcn.00027aa0::var_1e0h, 0);\n                            var_1d8h = fcn.00028180(var_1d8h, arg_8h, arg_18h, arg_1ch);\n                            goto code_r0x0002814e;\n                        }\n                        fcn.00036460(pcVar3);\n                    }\n                }\n                if (arg_20h == 0) {\n                    var_1d8h = fcn.0007cec0(var_1e0h, var_20h, arg_10h + var_4h, arg_14h - var_4h, \n                                            &fcn.00027aa0::var_1b4h, &fcn.00027aa0::var_1bch, &fcn.00027aa0::var_1d0h, \n                                            var_1ch, 0);\n                    if (var_1d8h != 0) {\n                        fcn.0007cb90(&fcn.00027aa0::var_1e0h, 0);\n                        var_1d8h = fcn.00028180(var_1d8h, arg_8h, arg_18h, arg_1ch);\n                        goto code_r0x0002814e;\n                    }\n                }\n                else {\n                    var_1d8h = fcn.0007cfa0(var_1e0h, var_20h, arg_10h + var_4h, arg_14h - var_4h, \n                                            &fcn.00027aa0::var_1b8h, 0);\n                    if (var_1d8h != 0) {\n                        fcn.0007cb90(&fcn.00027aa0::var_1e0h, 0);\n                        var_1d8h = fcn.00028180(var_1d8h, arg_8h, arg_18h, arg_1ch);\n                        goto code_r0x0002814e;\n                    }\n                    var_1cch = var_1e0h;\n                    var_1c8h = var_1b8h;\n                    var_1d8h = fcn.0007d590(arg_8h, 0xe, &fcn.00027aa0::var_1cch, 8, 0);\n                    if (var_1d8h != 0) {\n                        fcn.0007d300(var_1e0h, var_1b8h);\n                    }\n                    var_1d8h = fcn.0007d1f0(var_1e0h, var_1b8h, &fcn.00027aa0::var_1b4h, &fcn.00027aa0::var_1bch, \n                                            &fcn.00027aa0::var_1d0h, var_1ch, 0);\n                    if (var_1d8h != 0) {\n                        var_1d8h = fcn.00028180(var_1d8h, arg_8h, arg_18h, arg_1ch);\n                        goto code_r0x0002814e;\n                    }\n                }\n                if (var_1d0h == 0) {\n                    *arg_18h = 0;\n                    *arg_1ch = 0;\n                }\n                else {\n                    iVar2 = fcn.0007d4e0(arg_8h, var_1d0h, 0);\n                    *arg_18h = iVar2;\n                    if (*arg_18h == 0) {\n                        var_1d8h = 0x21590004;\n                        fcn.0007d2c0(0x280f2, var_1bch);\n                        goto code_r0x0002814e;\n                    }\n                    fcn.0007f904(*arg_18h, var_1bch, var_1d0h);\n                    *arg_1ch = var_1d0h;\n                }\n                fcn.0007d2c0(var_1e0h, var_1bch);\n                var_1d8h = var_1b4h;\n            }\n            else {\n                var_1d8h = 0x21590064;\n            }\n        }\n    }\n    else {\n        var_1d8h = 0x215901f9;\n    }\ncode_r0x0002814e:\n    if (var_1e0h != 0) {\n        fcn.00028f20(var_1e0h, &fcn.00027aa0::var_1a0h);\n    }\n    return var_1d8h;\n}\n",
        "token_count": 2723
    },
    "00028180": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00028180(uint arg_8h, uint arg_ch, uint *arg_10h, uint *arg_14h)\n\n{\n    uint *arg_8h_00;\n    uint uVar1;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.0007d4e0(arg_ch, 0x14, 0);\n    if (arg_8h_00 == NULL) {\n        *arg_10h = 0;\n        *arg_14h = 0;\n    }\n    else {\n        *arg_8h_00 = 0;\n        arg_8h_00[1] = 0;\n        arg_8h_00[2] = 0;\n        arg_8h_00[3] = 0;\n        arg_8h_00[4] = 0;\n        uVar1 = fcn.000299b0(1, 0);\n        *arg_8h_00 = uVar1;\n        arg_8h_00[1] = arg_8h;\n        fcn.0002f610(arg_8h_00);\n        *arg_10h = arg_8h_00;\n        *arg_14h = 0x14;\n    }\n    fcn.0002a200(6, arg_8h, 0, 0, 0);\n    return 0x215901f4;\n}\n",
        "token_count": 319
    },
    "00028210": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl\nfcn.00028210(uint arg_8h, uint noname_1, uint *arg_10h, uint32_t arg_14h, int32_t *arg_18h, int32_t *arg_1ch)\n\n{\n    int32_t iVar1;\n    uint var_20h;\n    uint var_1ch;\n    uint32_t var_18h;\n    uint var_14h;\n    uint *var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_1ch = 0;\n    var_14h = 0;\n    if (arg_14h < 0x3d) {\n        var_18h = 0x21590064;\n    }\n    else {\n        var_10h = arg_10h;\n        fcn.00026fd0(arg_10h);\n        var_8h = fcn.000238e0(*var_10h, var_10h[1], &var_4h, &var_1ch);\n        if (var_8h == 0) {\n            if (var_4h == 0) {\n                *arg_18h = 0;\n                *arg_1ch = 0;\n            }\n            else {\n                iVar1 = fcn.0007d4e0(arg_8h, var_4h << 6, 0);\n                if (iVar1 == 0) {\n                    var_18h = 0x21590004;\n                    goto code_r0x00028319;\n                }\n                fcn.0007f904(iVar1, var_1ch, var_4h << 6);\n                for (var_ch = 0; var_ch < var_4h; var_ch = var_ch + 1) {\n                    fcn.000270a0(var_ch * 0x40 + iVar1);\n                }\n                *arg_18h = iVar1;\n                *arg_1ch = var_4h << 6;\n            }\n            var_18h = 0;\n        }\n        else {\n            var_18h = var_8h + 0x191U | 0x21590000;\n        }\n    }\ncode_r0x00028319:\n    fcn.00023b80(var_1ch);\n    fcn.00036460(var_14h);\n    return var_18h;\n}\n",
        "token_count": 538
    },
    "00028340": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl\nfcn.00028340(uint arg_8h, uint noname_1, uint *arg_10h, uint32_t arg_14h, int32_t *arg_18h, uint *arg_1ch, \n            int32_t arg_20h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint32_t var_64h;\n    int32_t var_60h;\n    uint32_t var_5ch;\n    uint32_t var_58h;\n    uint32_t var_54h;\n    uint var_50h;\n    uint var_4ch;\n    int32_t var_20h;\n    uint var_10h;\n    uint *var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_60h = 0;\n    var_10h = 0;\n    if (arg_14h < 0x3d) {\n        var_64h = 0x21590064;\n    }\n    else {\n        var_ch = arg_10h;\n        fcn.00026fd0(arg_10h);\n        if ((var_ch[1] == 0) && (*(var_ch + 3) == '\\x1b')) {\n            fcn.0002ac50(*var_ch, var_ch[2]);\n        }\n        if ((*(var_ch + 3) & 0x10) != 0) {\n            fcn.00028b20(*var_ch, var_ch[1], var_ch[2]);\n        }\n        if ((*(var_ch + 3) & 1) == 0) {\n            var_4h = fcn.00023920(*var_ch, var_ch[1], var_ch + 2, &var_50h);\n        }\n        else {\n            var_4h = fcn.00023920(*var_ch, var_ch[1], 0, &var_50h);\n        }\n        if (var_4h == 0) {\n            var_5ch = *(var_ch + 0x11);\n            if (var_5ch == 0) {\n                var_5ch = var_20h - *(var_ch + 0xd);\n            }\n            if (arg_20h == 0) {\n                if ((*(var_ch + 3) & 4) == 0) {\n                    if (var_20h == 0) {\n                        *arg_18h = 0;\n                        *arg_1ch = 0;\n                    }\n                    else {\n                        iVar1 = fcn.0007d4e0(arg_8h, var_5ch, 0);\n                        *arg_18h = iVar1;\n                        if (*arg_18h == 0) {\n                            var_64h = 0x21590004;\n                            goto code_r0x00028737;\n                        }\n                        var_4h = fcn.00023a20(*var_ch, var_ch[1], var_4ch, *(var_ch + 0xd), *arg_18h, var_5ch, &var_8h);\n                        if (var_4h != 0) {\n                            var_64h = var_4h + 0x191U | 0x21590000;\n                            goto code_r0x00028737;\n                        }\n                        *arg_1ch = var_8h;\n                    }\n                }\n                else {\n                    iVar1 = fcn.0007d4e0(arg_8h, 0x40, 0);\n                    *arg_18h = iVar1;\n                    if (*arg_18h == 0) {\n                        var_64h = 0x21590004;\n                        goto code_r0x00028737;\n                    }\n                    fcn.000270a0(&var_50h);\n                    puVar3 = &var_50h;\n                    puVar4 = *arg_18h;\n                    for (iVar1 = 0x10; iVar1 != 0; iVar1 = iVar1 + -1) {\n                        *puVar4 = *puVar3;\n                        puVar3 = puVar3 + 1;\n                        puVar4 = puVar4 + 1;\n                    }\n                    fcn.000270a0(&var_50h);\n                    *arg_1ch = 0x40;\n                }\n            }\n            else {\n                if ((*(var_ch + 3) & 6) != 0) {\n                    fcn.000270a0(&var_50h);\n                    var_64h = fcn.0007d560(arg_8h, &var_50h, 0x40, 0);\n                    if (var_64h != 0) goto code_r0x00028737;\n                    fcn.000270a0(&var_50h);\n                }\n                if ((*(var_ch + 3) & 4) == 0) {\n                    if ((*(var_ch + 0x19) == 0) || (*(var_ch + 0x19) < *(var_ch + 0x15))) {\n                        var_64h = 0x21590064;\n                        goto code_r0x00028737;\n                    }\n                    var_60h = fcn.00036330(*(var_ch + 0x19));\n                    if (var_60h == 0) {\n                        var_64h = 0x21590004;\n                        goto code_r0x00028737;\n                    }\n                    for (var_58h = 0; var_58h < var_5ch; var_58h = var_58h + var_54h) {\n                        if (*(var_ch + 0x19) < *(var_ch + 0x15) || *(var_ch + 0x19) == *(var_ch + 0x15)) {\n                            uVar2 = fcn.0007f77e();\n                            var_54h = uVar2 % ((*(var_ch + 0x15) - *(var_ch + 0x19)) + 1U) + *(var_ch + 0x19);\n                        }\n                        else {\n                            uVar2 = fcn.0007f77e();\n                            var_54h = uVar2 % ((*(var_ch + 0x19) - *(var_ch + 0x15)) + 1U) + *(var_ch + 0x15);\n                        }\n                        if ((var_54h == 0) || (*(var_ch + 0x19) <= var_54h && var_54h != *(var_ch + 0x19))) {\n                            var_64h = 0x215901f6;\n                            goto code_r0x00028737;\n                        }\n                        var_4h = fcn.00023a20(*var_ch, var_ch[1], var_4ch, *(var_ch + 0xd) + var_58h, var_60h, var_54h, \n                                              &var_54h);\n                        if (var_4h != 0) {\n                            var_64h = var_4h + 0x191U | 0x21590000;\n                            goto code_r0x00028737;\n                        }\n                        var_64h = fcn.0007d560(arg_8h, var_60h, var_54h, 0);\n                        if (var_64h != 0) goto code_r0x00028737;\n                    }\n                    var_64h = fcn.0007d560(arg_8h, 0, 0, 0);\n                    if (var_64h != 0) goto code_r0x00028737;\n                }\n            }\n            if (((*(var_ch + 3) & 8) == 0) || (var_4h = fcn.00023a70(*var_ch, var_ch[1], var_4ch),  var_4h == 0)) {\n                var_64h = 0;\n            }\n            else {\n                var_64h = var_4h + 0x191U | 0x21590000;\n            }\n        }\n        else {\n            var_64h = var_4h + 0x191U | 0x21590000;\n        }\n    }\ncode_r0x00028737:\n    fcn.00036460(var_60h);\n    fcn.00036460(var_10h);\n    return var_64h;\n}\n",
        "token_count": 1864
    },
    "00028760": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_a0h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl\nfcn.00028760(uint arg_8h, uint noname_1, uint *arg_10h, uint32_t arg_14h, uint *arg_18h, uint *arg_1ch, int32_t arg_20h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint *puVar3;\n    uint *var_a0h;\n    uint *var_9ch;\n    uint *var_98h;\n    uint *var_94h;\n    uint var_90h;\n    uint var_8ch;\n    int32_t var_64h;\n    uint var_4ch;\n    int32_t var_48h;\n    int32_t var_44h;\n    uint var_40h;\n    int32_t var_3ch;\n    int32_t var_37h;\n    int32_t var_2bh;\n    uint var_27h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4ch = 0;\n    if (arg_14h < 0x3d) {\n        var_94h = 0x21590064;\n    }\n    else {\n        var_98h = fcn.000299b0(400, 20000);\n        puVar2 = arg_10h;\n        puVar3 = &var_48h;\n        for (iVar1 = 0xf; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *puVar3 = *puVar2;\n            puVar2 = puVar2 + 1;\n            puVar3 = puVar3 + 1;\n        }\n        *puVar3 = *puVar2;\n        fcn.00026fd0(&var_48h);\n        if (arg_20h == 0) {\n            if (var_37h == -1) {\n                var_37h = arg_14h - 0x3d;\n            }\n            if (var_2bh == -1) {\n                var_2bh = var_37h;\n            }\n        }\n        if ((var_3ch & 1) == 0) {\n            var_4h = fcn.00023920(var_48h, var_44h, &var_40h, &var_90h);\n            if (var_4h == 0) {\n                if (var_64h == var_2bh) {\ncode_r0x000288cb:\n                    if (arg_20h == 0) {\n                        if (var_37h + 0x3dU == arg_14h) {\n                            var_4h = fcn.000239e0(var_48h, var_44h, var_8ch, stack0xffffffc1, arg_10h + 0x3d, var_37h);\n                            if (var_4h == 0) {\ncode_r0x000289e4:\n                                var_94h = NULL;\n                                if (((var_44h == 0) && (iVar1 = fcn.000299b0(1, 0),  var_48h == iVar1)) &&\n                                   (iVar1 = fcn.00038390(0x8509ef68),  iVar1 != 0)) {\n                                    fcn.00034dc0(0x8509ef68);\n                                }\n                            }\n                            else {\n                                var_94h = var_4h + 0x191U | 0x21590000;\n                            }\n                        }\n                        else {\n                            var_94h = 0x21590064;\n                        }\n                    }\n                    else {\n                        var_8h = stack0xffffffc1;\n                        while( true ) {\n                            puVar2 = var_98h;\n                            var_90h = 0;\n                            var_94h = var_98h;\n                            var_98h = &var_9ch;\n                            var_9ch = &var_a0h;\n                            var_94h = fcn.0007d530(arg_8h, var_9ch, var_98h, puVar2, 0);\n                            if (var_94h != NULL) break;\n                            if (var_9ch == NULL) goto code_r0x000289e4;\n                            var_4h = fcn.000239e0(var_48h, var_44h, var_8ch, var_8h, var_a0h, var_9ch);\n                            fcn.0007d500(arg_8h, var_a0h, 0);\n                            if (var_4h != 0) {\n                                var_94h = var_4h + 0x191U | 0x21590000;\n                                break;\n                            }\n                            var_8h = var_8h + var_9ch;\n                        }\n                    }\n                }\n                else {\n                    var_94h = 0x215901f6;\n                }\n            }\n            else {\n                var_94h = var_4h + 0x191U | 0x21590000;\n            }\n        }\n        else {\n            do {\n                var_a0h = &var_90h;\n                iVar1 = fcn.00023920(var_48h, var_44h, &var_40h, var_a0h);\n                if (iVar1 != 0) {\n                    var_4h = fcn.000239a0(var_48h, var_44h, var_40h, var_2bh, &var_27h, &var_8ch);\n                    if (var_4h == 0) goto code_r0x000288cb;\n                    var_94h = var_4h + 0x191U | 0x21590000;\n                    goto code_r0x00028a1a;\n                }\n                var_4h = fcn.00023a70(var_48h, var_44h, var_8ch);\n            } while (var_4h == 0);\n            var_94h = var_4h + 0x191U | 0x21590000;\n        }\n    }\ncode_r0x00028a1a:\n    fcn.00036460(var_4ch);\n    *arg_18h = 0;\n    *arg_1ch = 0;\n    return var_94h;\n}\n",
        "token_count": 1424
    },
    "00028a50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00028a50(uint noname_0, uint noname_1, uint *arg_10h, uint32_t arg_14h)\n\n{\n    uint32_t var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_ch;\n    uint *var_8h;\n    int32_t var_4h;\n    \n    var_ch = 0;\n    if (arg_14h < 0x3d) {\n        var_54h = 0x21590064;\n    }\n    else {\n        var_8h = arg_10h;\n        fcn.00026fd0(arg_10h);\n        if ((*(var_8h + 3) & 1) == 0) {\n            var_4h = fcn.00023920(*var_8h, var_8h[1], var_8h + 2, &var_50h);\n            if (var_4h == 0) {\n                var_4h = fcn.00023a70(*var_8h, var_8h[1], var_4ch);\n            }\n        }\n        else {\n            var_4h = fcn.00028b20(*var_8h, var_8h[1], var_8h[2] + 1);\n        }\n        if (var_4h == 0) {\n            var_54h = 0;\n        }\n        else {\n            var_54h = var_4h + 0x191U | 0x21590000;\n        }\n    }\n    fcn.00036460(var_ch);\n    return var_54h;\n}\n",
        "token_count": 372
    },
    "00028b20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00028b20(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_14h = 0;\n    var_8h = fcn.000238e0(arg_8h, arg_ch, &var_4h, &var_14h);\n    if (var_8h == 0) {\n        var_10h = 0;\n        for (var_ch = 0; var_ch < var_4h; var_ch = var_ch + 1) {\n            if ((arg_10h <= *(var_14h + 0xc + var_ch * 0x40)) && ((*(var_14h + 0xc + var_ch * 0x40) & 0x80000000) == 0))\n            {\n                *(var_14h + 4 + var_ch * 0x40) = 0xffffffff;\n            }\n        }\n        fcn.00023aa0(var_14h, var_4h);\n        fcn.00023b80(var_14h);\n    }\n    else {\n        var_10h = var_8h + 0x191U | 0x21590000;\n    }\n    return var_10h;\n}\n",
        "token_count": 323
    },
    "00028be0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00028be0(int32_t *arg_8h, int32_t *arg_ch, int32_t *arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t arg_10h_00;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    *arg_10h = 0;\n    iVar1 = fcn.00029a50(&var_10h, 0x10, 0x228);\n    if (iVar1 == 0) {\n        iVar1 = fcn.00020780(&var_10h, 0x10, *arg_8h, *arg_ch);\n        if (iVar1 == -1) {\n            uVar2 = 0x215901fa;\n        }\n        else {\n            arg_10h_00 = fcn.00036330(iVar1);\n            if (arg_10h_00 == 0) {\n                uVar2 = 0x21590004;\n            }\n            else {\n                fcn.000207d0(&var_10h, 0x10, arg_10h_00, *arg_8h, *arg_ch);\n                *arg_8h = arg_10h_00;\n                *arg_ch = iVar1;\n                *arg_10h = arg_10h_00;\n                uVar2 = 0;\n            }\n        }\n    }\n    else {\n        uVar2 = 0x215901f9;\n    }\n    return uVar2;\n}\n",
        "token_count": 348
    },
    "00028cf0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00028cf0(int32_t arg_8h)\n\n{\n    fcn.00024750();\n    if (arg_8h != 0) {\n        fcn.0005bdd0(5000);\n        fcn.00024150(0x8509ef80, *0x8509ef64);\n    }\n    return 0;\n}\n",
        "token_count": 83
    },
    "00028d90": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00028d90(uint8_t *arg_8h)\n\n{\n    uint8_t uVar1;\n    bool bVar2;\n    uint var_30h;\n    int32_t var_2ch;\n    uint8_t *var_24h;\n    uint8_t *var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint8_t *var_10h;\n    uint8_t *var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    if (*0x85090468 == 0) {\n        var_8h = 0;\n    }\n    else {\n        fcn.00035650(0x85090464);\n        for (var_4h = 0; var_4h < 0x14; var_4h = var_4h + 1) {\n            if (*(*0x85090468 + var_4h * 0x1a0) != 0) {\n                var_ch = arg_8h;\n                var_10h = *0x85090468 + 4 + var_4h * 0x1a0;\n                do {\n                    uVar1 = *var_10h;\n                    bVar2 = uVar1 < *var_ch;\n                    if (uVar1 != *var_ch) {\ncode_r0x00028e45:\n                        var_18h = (1 - bVar2) - (bVar2 != 0);\n                        goto code_r0x00028e4d;\n                    }\n                    if (uVar1 == 0) break;\n                    uVar1 = var_10h[1];\n                    bVar2 = uVar1 < var_ch[1];\n                    if (uVar1 != var_ch[1]) goto code_r0x00028e45;\n                    var_10h = var_10h + 2;\n                    var_ch = var_ch + 2;\n                } while (uVar1 != 0);\n                var_18h = 0;\ncode_r0x00028e4d:\n                if (var_18h == 0) {\n                    var_20h = arg_8h + 0x80;\n                    var_24h = *0x85090468 + 0x84 + var_4h * 0x1a0;\n                    do {\n                        uVar1 = *var_24h;\n                        bVar2 = uVar1 < *var_20h;\n                        if (uVar1 != *var_20h) {\ncode_r0x00028ebe:\n                            var_2ch = (1 - bVar2) - (bVar2 != 0);\n                            goto code_r0x00028ec6;\n                        }\n                        if (uVar1 == 0) break;\n                        uVar1 = var_24h[1];\n                        bVar2 = uVar1 < var_20h[1];\n                        if (uVar1 != var_20h[1]) goto code_r0x00028ebe;\n                        var_24h = var_24h + 2;\n                        var_20h = var_20h + 2;\n                    } while (uVar1 != 0);\n                    var_2ch = 0;\ncode_r0x00028ec6:\n                    if (var_2ch == 0) {\n                        var_8h = *(*0x85090468 + var_4h * 0x1a0);\n                        *(*0x85090468 + var_4h * 0x1a0) = 0;\n                        break;\n                    }\n                }\n            }\n        }\n        fcn.000356c0(0x85090464);\n    }\n    return var_8h;\n}\n",
        "token_count": 832
    },
    "00028f20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00028f20(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    int32_t var_4h;\n    \n    if ((arg_8h == 0) || (*0x85090468 == 0)) {\n        return;\n    }\n    fcn.00035650(0x85090464);\n    var_4h = 0;\n    while( true ) {\n        if (0x13 < var_4h) goto code_r0x00028fca;\n        if (*(*0x85090468 + var_4h * 0x1a0) == 0) break;\n        var_4h = var_4h + 1;\n    }\n    *(*0x85090468 + var_4h * 0x1a0) = arg_8h;\n    puVar3 = arg_ch;\n    puVar4 = *0x85090468 + 4 + var_4h * 0x1a0;\n    for (iVar2 = 0x65; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    *puVar4 = *puVar3;\n    uVar1 = fcn.00026f20();\n    *(*0x85090468 + 0x19c + var_4h * 0x1a0) = uVar1;\n    arg_8h = 0;\ncode_r0x00028fca:\n    fcn.000356c0(0x85090464);\n    if (arg_8h == 0) {\n        return;\n    }\n    fcn.0007cb90(&arg_8h, 0);\n    return;\n}\n",
        "token_count": 436
    },
    "00028ff0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint fcn.00028ff0(void)\n\n{\n    int32_t iVar1;\n    int32_t var_4h;\n    \n    do {\n        iVar1 = fcn.00034df0(0x85090324, 30000);\n        if (iVar1 != 0) {\n            return 0;\n        }\n        fcn.00035650(0x85090464);\n        for (var_4h = 0; var_4h < 0x14; var_4h = var_4h + 1) {\n            if (*(*0x85090468 + var_4h * 0x1a0) != 0) {\n                iVar1 = fcn.00026f20();\n                if (300000 < iVar1 - *(*0x85090468 + 0x19c + var_4h * 0x1a0)) {\n                    fcn.0007cb90(var_4h * 0x1a0 + *0x85090468, 0);\n                    *(*0x85090468 + var_4h * 0x1a0) = 0;\n                    break;\n                }\n            }\n        }\n        fcn.000356c0(0x85090464);\n    } while( true );\n}\n",
        "token_count": 295
    },
    "000290b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl\nfcn.000290b0(uint arg_8h, uint noname_1, int32_t arg_10h, uint32_t arg_14h, uint noname_4, uint noname_5, \n            int32_t arg_20h)\n\n{\n    uint *puVar1;\n    uint arg_14h_00;\n    int32_t iVar2;\n    uint var_28ch;\n    uint var_288h;\n    uint var_284h;\n    uint var_280h;\n    uint var_27ch;\n    uint var_278h;\n    uint var_274h;\n    uint32_t var_270h;\n    uint *var_26ch;\n    uint var_268h;\n    int32_t var_64h;\n    int32_t var_60h;\n    uint32_t var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_5ch = 0;\n    var_270h = 0;\n    var_4h = 0;\n    var_18h = fcn.000299b0(1, 0);\n    if (arg_20h == 0) {\n        var_64h = arg_10h;\n        var_60h = 0;\n        var_14h = 0;\n        while( true ) {\n            if ((arg_14h <= var_60h) || (0x7f < var_14h)) goto code_r0x000293ec;\n            if (arg_14h < var_60h + 0x19U) break;\n            var_5ch = fcn.000365c0(*(var_64h + var_60h));\n            if (arg_14h - var_60h < var_5ch) {\n                var_270h = 0x21590201;\n                goto code_r0x000293ec;\n            }\n            var_60h = var_60h + 4;\n            puVar1 = var_64h + var_60h;\n            var_288h = *puVar1;\n            var_284h = puVar1[1];\n            var_280h = puVar1[2];\n            var_27ch = puVar1[3];\n            var_278h = puVar1[4];\n            var_274h._0_1_ = *(puVar1 + 5);\n            fcn.00024110(&var_288h);\n            if (var_4h == 0) {\n                var_ch = fcn.000238a0(var_18h, 9, var_284h, var_64h + var_60h, var_5ch, 0);\n                if (var_ch == 0) {\n                    (&var_268h)[var_14h] = var_284h;\n                }\n                else {\n                    var_270h = var_ch + 0x191U | 0x21590000;\n                    fcn.000279f0(var_284h, var_270h, 0, 0);\n                    var_4h = 1;\n                }\n            }\n            else {\n                fcn.000279f0(var_284h, 0x21590006, 0, 0);\n            }\n            var_60h = var_60h + var_5ch;\n            var_14h = var_14h + 1;\n        }\n        var_270h = 0x21590201;\n    }\n    else {\n        arg_14h_00 = fcn.000299b0(400, 20000);\n        for (var_14h = 0; var_26ch = NULL,  var_14h < 0x80; var_14h = var_14h + 1) {\n            var_270h = fcn.0007d530(arg_8h, &var_26ch, &var_5ch, arg_14h_00, 0);\n            if (var_270h != 0) {\n                var_270h = 0x21590201;\n                break;\n            }\n            if (var_5ch == 0) break;\n            if (var_5ch < 0x15) {\n                var_270h = 0x21590201;\n                break;\n            }\n            var_288h = *var_26ch;\n            var_284h = var_26ch[1];\n            var_280h = var_26ch[2];\n            var_27ch = var_26ch[3];\n            var_278h = var_26ch[4];\n            var_274h._0_1_ = *(var_26ch + 5);\n            fcn.00024110(&var_288h);\n            if (var_4h == 0) {\n                var_ch = fcn.000238a0(var_18h, 9, var_284h, var_26ch, var_5ch, 0);\n                if (var_ch == 0) {\n                    (&var_268h)[var_14h] = var_284h;\n                }\n                else {\n                    var_270h = var_ch + 0x191U | 0x21590000;\n                    fcn.000279f0(var_284h, var_270h, 0, 0);\n                    var_4h = 1;\n                }\n            }\n            else {\n                fcn.000279f0(var_284h, 0x21590006, 0, 0);\n            }\n            fcn.0007d500(arg_8h, var_26ch, 0);\n        }\n        fcn.0007d500(arg_8h, var_26ch, 0);\n    }\ncode_r0x000293ec:\n    if (var_270h == 0) {\n        for (var_10h = 0; var_10h < var_14h; var_10h = var_10h + 1) {\n            iVar2 = fcn.00023920(var_18h, 9, &var_268h + var_10h, &var_58h);\n            if ((iVar2 == 0) && (iVar2 = fcn.00023ad0(var_58h, var_50h, var_54h, 0, &var_8h),  iVar2 != 0)) {\n                fcn.00023a70(var_58h, var_50h, var_54h);\n            }\n        }\n        fcn.00026200();\n    }\n    else {\n        for (var_10h = 0; var_10h < var_14h; var_10h = var_10h + 1) {\n            iVar2 = fcn.00023920(var_18h, 9, &var_268h + var_10h, &var_58h);\n            if (iVar2 == 0) {\n                fcn.00023a70(var_58h, var_50h, var_54h);\n            }\n        }\n    }\n    return var_270h;\n}\n",
        "token_count": 1625
    },
    "00029550": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00029550(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_14h;\n    uint var_4h;\n    \n    iVar1 = fcn.00029ab0(&var_14h, 0x10);\n    if (iVar1 == 0) {\n        *arg_8h = 0xfffffffd;\n    }\n    else {\n        if (iVar1 != 5) {\n            return iVar1 + 0x191U | 0x21590000;\n        }\n        *arg_8h = 0xfffffffe;\n    }\n    return 0;\n}\n",
        "token_count": 141
    },
    "000295a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.000295a0(uint arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.000295f0(2, arg_8h, arg_ch, arg_10h, arg_14h, 0);\n    if (((iVar1 == 0) && (arg_ch != 0)) && (arg_10h != 0)) {\n        *(arg_ch + arg_10h + -1) = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 143
    },
    "000295f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.000295f0(int32_t arg_8h, uint arg_ch, uint arg_10h, uint32_t arg_14h, uint32_t *arg_18h, int32_t arg_1ch)\n\n{\n    uint32_t arg_8h_00;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_38h;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_10h = 0;\n    var_4h = 0;\n    var_8h = -2;\n    if (arg_8h == 3) {\n        var_ch = fcn.00029ab0(&var_20h, 0x10);\n        if (var_ch == 0) {\n            var_8h = -3;\n        }\n        else if (var_ch != 5) {\n            return var_ch;\n        }\n    }\n    if ((var_8h == -2) && (var_ch = fcn.00029a50(&var_20h, 0x10, 0x229),  var_ch != 0)) {\n        return var_ch;\n    }\n    if (arg_1ch == 0) {\n        var_ch = fcn.00023920(var_8h, arg_8h, &arg_ch, &var_68h);\n    }\n    else {\n        var_ch = fcn.00023960(var_8h, arg_8h, arg_ch, &var_68h);\n    }\n    if (var_ch != 0) {\n        return var_ch;\n    }\n    var_10h = fcn.00036330(var_38h);\n    if (var_10h == 0) {\n        return -1;\n    }\n    var_ch = fcn.00023a20(var_8h, arg_8h, var_64h, 0, var_10h, var_38h, &var_24h);\n    if (var_ch == 0) {\n        arg_8h_00 = fcn.00020780(&var_20h, 0x10, var_10h, var_24h);\n        if (arg_8h_00 == 0xffffffff) {\n            var_ch = -1;\n        }\n        else {\n            if (arg_14h < arg_8h_00) {\n                if (arg_14h == 0) {\n                    *arg_18h = arg_8h_00;\n                }\n                else {\n                    var_4h = fcn.00036330(arg_8h_00);\n                    if (var_4h == 0) {\n                        var_ch = -1;\n                        goto code_r0x000297bf;\n                    }\n                    fcn.000207d0(&var_20h, 0x10, var_4h, var_10h, var_24h);\n                    fcn.0007f904(arg_10h, var_4h, arg_14h);\n                    *arg_18h = arg_14h;\n                    fcn.00036460(var_4h);\n                    var_4h = 0;\n                }\n            }\n            else {\n                fcn.000207d0(&var_20h, 0x10, arg_10h, var_10h, var_24h);\n                *arg_18h = arg_8h_00;\n            }\n            var_ch = 0;\n        }\n    }\ncode_r0x000297bf:\n    fcn.00036460(var_10h);\n    fcn.00036460(var_4h);\n    return var_ch;\n}\n",
        "token_count": 842
    },
    "00029800": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00029800(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, int32_t arg_1ch)\n\n{\n    uint var_60h;\n    uint var_50h;\n    uint var_4ch;\n    uint32_t var_24h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = -2;\n    if (arg_8h == 3) {\n        var_8h = fcn.00029ab0(&var_60h, 0x10);\n        if (var_8h == 0) {\n            var_4h = -3;\n        }\n        else if (var_8h != 5) {\n            return var_8h;\n        }\n    }\n    if ((var_4h != -2) || (var_8h = fcn.00029a50(&var_60h, 0x10, 0x229),  var_8h == 0)) {\n        var_10h = fcn.00020690(&var_60h, 0x10, arg_14h);\n        var_ch = fcn.00036330(var_10h);\n        if (var_ch == 0) {\n            var_8h = -1;\n        }\n        else {\n            var_10h = fcn.000206b0(&var_60h, 0x10, var_ch, arg_10h, arg_14h);\n            if (arg_1ch == 0) {\n                var_8h = fcn.000238a0(var_4h, arg_8h, arg_ch, var_ch, var_10h, arg_18h);\n            }\n            else {\n                var_8h = fcn.00023920(var_4h, arg_8h, &arg_ch, &var_50h);\n                if (var_8h == 0) {\n                    if (var_24h < var_10h) {\n                        fcn.00023a70(var_4h, arg_8h, var_4ch);\n                        var_8h = fcn.000238a0(var_4h, arg_8h, arg_ch, var_ch, var_10h, arg_18h);\n                    }\n                    else {\n                        var_8h = fcn.00023b10(var_4h, arg_8h, var_4ch);\n                        if (var_8h == 0) {\n                            var_8h = fcn.000239e0(var_4h, arg_8h, var_4ch, 0, var_ch, var_10h);\n                        }\n                    }\n                }\n                else {\n                    var_8h = fcn.000238a0(var_4h, arg_8h, arg_ch, var_ch, var_10h, arg_18h);\n                }\n            }\n            fcn.00036460(var_ch);\n        }\n    }\n    return var_8h;\n}\n",
        "token_count": 697
    },
    "000299f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000299f0(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint var_78h;\n    uint var_70h;\n    uint *var_6ch;\n    uint var_68h;\n    \n    fcn.0007f7f0(&var_68h, 0x85010668, arg_ch);\n    var_6ch = &var_68h;\n    do {\n        cVar1 = *var_6ch;\n        var_6ch = var_6ch + 1;\n    } while (cVar1 != '\\0');\n    fcn.000297e0(arg_8h, &var_68h, var_6ch + (1 - (&var_68h + 1)));\n    return;\n}\n",
        "token_count": 175
    },
    "00029a50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00029a50(uint arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    uint var_48h;\n    uint var_44h;\n    int32_t var_18h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00023920(0xfffffffe, 2, &arg_10h, &var_48h);\n    if (var_4h == 0) {\n        if (var_18h == arg_ch) {\n            var_4h = fcn.00023a20(0xfffffffe, 2, var_44h, 0, arg_8h, arg_ch, &arg_ch);\n        }\n        else {\n            var_4h = -1;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 188
    },
    "00029ab0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00029ab0(uint arg_8h, int32_t arg_ch)\n\n{\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    int32_t var_18h;\n    int32_t var_4h;\n    \n    var_4ch = 0x229;\n    var_4h = fcn.00023920(0xfffffffd, 2, &var_4ch, &var_48h);\n    if (var_4h == 0) {\n        if (var_18h == arg_ch) {\n            var_4h = fcn.00023a20(0xfffffffd, 2, var_44h, 0, arg_8h, arg_ch, &arg_ch);\n        }\n        else {\n            var_4h = -1;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 200
    },
    "00029b10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00029b10(uint noname_0, uint noname_1, uint noname_2, uint *arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint var_440h;\n    int32_t var_43ch;\n    uint var_438h;\n    uint var_434h;\n    uint var_430h;\n    uint var_42ch;\n    uint *var_428h;\n    int32_t var_424h;\n    uint var_420h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint *var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    *arg_14h = 3;\n    var_14h = fcn.000238e0(0xfffffffe, 2, &var_18h, &var_424h);\n    if (var_14h == 0) {\n        var_438h = 0x15;\n        var_434h = 3;\n        var_430h = 0x16;\n        var_42ch = 200;\n        var_8h = 0;\n        var_4h = 0;\n        var_10h = 2;\n        var_ch = &var_438h;\n        var_4h = fcn.00036420(0x10, var_18h);\n        if (var_4h == 0) {\n            fcn.00023b80(var_424h);\n            uVar1 = 0x21590004;\n        }\n        else {\n            for (var_1ch = 0; var_1ch < var_18h; var_1ch = var_1ch + 1) {\n                if ((((*(var_424h + 0xc + var_1ch * 0x40) != 0x227) && (*(var_424h + 0xc + var_1ch * 0x40) != 0x228)) &&\n                    (*(var_424h + 0xc + var_1ch * 0x40) != 0x229)) &&\n                   ((iVar2 = fcn.000295a0(*(var_424h + 0xc + var_1ch * 0x40), &var_420h, 0x400, &var_43ch),  iVar2 == 0\n                    && (var_428h = fcn.00036330(var_10h * 0x10 + var_43ch),  var_428h != NULL)))) {\n                    fcn.0007f916(var_428h, 0, var_10h << 4);\n                    var_428h[1] = var_428h + 2;\n                    *var_428h = 4;\n                    *var_428h[1] = *(var_424h + 0xc + var_1ch * 0x40);\n                    var_428h[4] = var_43ch;\n                    var_428h[5] = var_428h + var_10h * 4;\n                    fcn.0007f904(var_428h + var_10h * 4, &var_420h, var_43ch);\n                    *(var_4h + var_8h * 4) = var_428h;\n                    var_8h = var_8h + 1;\n                }\n            }\n            uVar1 = fcn.0002f660(&var_10h, arg_18h, arg_1ch);\n            for (var_1ch = 0; var_1ch < var_8h; var_1ch = var_1ch + 1) {\n                fcn.00036460(*(var_4h + var_1ch * 4));\n            }\n            fcn.00036460(var_4h);\n            fcn.00023b80(var_424h);\n        }\n    }\n    else {\n        uVar1 = var_14h + 0x191U | 0x21590000;\n    }\n    return uVar1;\n}\n",
        "token_count": 943
    },
    "00029dc0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00029dc0(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint arg_8h;\n    char *arg_ch;\n    uint var_24h;\n    uint var_1ch;\n    char *var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = fcn.00020a10(arg_10h, 0x13, 3, &var_8h, 4);\n    if (iVar2 == 0) {\n        var_10h = 0x21590065;\n    }\n    else {\n        iVar2 = fcn.000209a0(arg_10h, 0x14, 4, &var_4h, &var_ch);\n        if (iVar2 == 0) {\n            var_10h = 0x21590066;\n        }\n        else {\n            arg_8h = fcn.000385e0(var_4h);\n            arg_ch = fcn.00036330(arg_8h);\n            if (arg_ch == NULL) {\n                var_10h = 0x21590004;\n            }\n            else {\n                fcn.00038560(var_4h, arg_ch, 0xffffffff);\n                var_18h = arg_ch;\n                do {\n                    cVar1 = *var_18h;\n                    var_18h = var_18h + 1;\n                } while (cVar1 != '\\0');\n                iVar2 = fcn.000297e0(var_8h, arg_ch, var_18h + (1 - (arg_ch + 1)));\n                if (iVar2 == 0) {\n                    var_10h = 0;\n                }\n                else {\n                    var_10h = 0x215901fb;\n                }\n                fcn.00036460(arg_ch);\n            }\n        }\n    }\n    return var_10h;\n}\n",
        "token_count": 459
    },
    "00029eb0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00029eb0(int32_t arg_8h)\n\n{\n    fcn.0002a1f0(*(arg_8h + 4), arg_8h + 0x114);\n    if (((arg_8h != 0) && (*(arg_8h + 4) != 0)) && (*(arg_8h + 0x118) != 0)) {\n        fcn.00062380(*(arg_8h + 0x11c), *(arg_8h + 4), 1);\n    }\n    return;\n}\n",
        "token_count": 128
    },
    "0002a090": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.0002a090(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t arg_10h;\n    uint uVar1;\n    uint32_t var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_8h = fcn.00036fe0(arg_8h + 1, 0, 0);\n    var_4h = fcn.000295f0(3, var_8h, 0, 0, &var_54h, 0);\n    if (var_4h == 0) {\n        arg_10h = fcn.00036330(var_54h);\n        if (arg_10h == 0) {\n            var_5ch = 0x21590004;\n        }\n        else {\n            var_4h = fcn.000295f0(3, var_8h, arg_10h, var_54h, &var_54h, 0);\n            if (var_4h == 0) {\n                var_50h._0_2_ = 0x26;\n                fcn.0007f7f6(var_8h, &var_50h + 2, 10);\n                *(arg_ch + 0x118) = 1;\n                uVar1 = fcn.0006b490(arg_10h, &var_50h, &var_50h, arg_ch + 4);\n                var_5ch = fcn.00061730(uVar1);\n            }\n            else {\n                var_5ch = var_4h + 0x191U | 0x21590000;\n            }\n            fcn.00036460(arg_10h);\n            uVar1 = fcn.0006b490();\n            *(arg_ch + 0x11c) = uVar1;\n            if (var_5ch != 0) {\n                *(arg_ch + 4) = 0;\n            }\n        }\n    }\n    else {\n        var_5ch = var_4h + 0x191U | 0x21590000;\n    }\n    return var_5ch;\n}\n",
        "token_count": 521
    },
    "0002a280": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0002a280(uint noname_0, uint noname_1, uint noname_2, uint *arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint uVar1;\n    uint var_28h;\n    uint32_t var_24h;\n    int32_t var_20h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint *var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_20h = 0;\n    *arg_14h = 3;\n    var_14h = fcn.000238e0(0xfffffffe, 4, &var_1ch, &var_20h);\n    if (var_14h == 0) {\n        var_ch = NULL;\n        var_8h = 0;\n        var_4h = 0;\n        var_10h = 7;\n        var_ch = fcn.00036420(7, 8);\n        if (var_ch == NULL) {\n            var_24h = 0x21590004;\n        }\n        else {\n            *var_ch = 1;\n            var_ch[1] = 8;\n            var_ch[2] = 0xe;\n            var_ch[3] = 3;\n            var_ch[4] = 2;\n            var_ch[5] = 7;\n            var_ch[6] = 3;\n            var_ch[7] = 7;\n            var_ch[8] = 4;\n            var_ch[9] = 2;\n            var_ch[10] = 0xf;\n            var_ch[0xb] = 2;\n            var_ch[0xc] = 5;\n            var_ch[0xd] = 2;\n            var_8h = var_1ch;\n            var_4h = fcn.00036420(var_1ch, 4);\n            if (var_4h == 0) {\n                var_24h = 0x21590004;\n            }\n            else {\n                for (var_18h = 0; var_18h < var_8h; var_18h = var_18h + 1) {\n                    uVar1 = fcn.00036420(var_10h, 0x10);\n                    *(var_4h + var_18h * 4) = uVar1;\n                    if (*(var_4h + var_18h * 4) == 0) {\n                        var_24h = 0x21590004;\n                        goto code_r0x0002a854;\n                    }\n                    *(*(var_4h + var_18h * 4) + 4) = *(var_4h + var_18h * 4) + 8;\n                    **(var_4h + var_18h * 4) = 4;\n                    **(*(var_4h + var_18h * 4) + 4) = *(var_20h + 0x20 + var_18h * 0x40);\n                    *(*(var_4h + var_18h * 4) + 0x14) = *(var_4h + var_18h * 4) + 0x18;\n                    *(*(var_4h + var_18h * 4) + 0x10) = 4;\n                    **(*(var_4h + var_18h * 4) + 0x14) = *(var_20h + 0x10 + var_18h * 0x40);\n                    *(*(var_4h + var_18h * 4) + 0x24) = *(var_4h + var_18h * 4) + 0x28;\n                    *(*(var_4h + var_18h * 4) + 0x20) = 4;\n                    **(*(var_4h + var_18h * 4) + 0x24) = *(var_20h + 0x18 + var_18h * 0x40);\n                    *(*(var_4h + var_18h * 4) + 0x34) = *(var_4h + var_18h * 4) + 0x38;\n                    *(*(var_4h + var_18h * 4) + 0x30) = 4;\n                    **(*(var_4h + var_18h * 4) + 0x34) = *(var_20h + 0x14 + var_18h * 0x40);\n                    if ((*(var_20h + 0xc + var_18h * 0x40) & 0x80000000) == 0) {\n                        *(*(var_4h + var_18h * 4) + 0x44) = *(var_4h + var_18h * 4) + 0x48;\n                        *(*(var_4h + var_18h * 4) + 0x40) = 4;\n                        **(*(var_4h + var_18h * 4) + 0x44) = *(var_20h + 0xc + var_18h * 0x40);\n                    }\n                    else {\n                        *(*(var_4h + var_18h * 4) + 0x44) = *(var_4h + var_18h * 4) + 0x48;\n                        *(*(var_4h + var_18h * 4) + 0x40) = 4;\n                        **(*(var_4h + var_18h * 4) + 0x44) = 0;\n                    }\n                    *(*(var_4h + var_18h * 4) + 0x54) = *(var_4h + var_18h * 4) + 0x58;\n                    *(*(var_4h + var_18h * 4) + 0x50) = 4;\n                    **(*(var_4h + var_18h * 4) + 0x54) = *(var_20h + 0x1c + var_18h * 0x40);\n                    if ((*(var_20h + 0xc + var_18h * 0x40) & 0x80000000) == 0) {\n                        *(*(var_4h + var_18h * 4) + 100) = *(var_4h + var_18h * 4) + 0x68;\n                        *(*(var_4h + var_18h * 4) + 0x60) = 4;\n                        **(*(var_4h + var_18h * 4) + 100) = 0;\n                    }\n                    else {\n                        *(*(var_4h + var_18h * 4) + 100) = *(var_4h + var_18h * 4) + 0x68;\n                        *(*(var_4h + var_18h * 4) + 0x60) = 4;\n                        **(*(var_4h + var_18h * 4) + 100) = *(var_20h + 0xc + var_18h * 0x40) & 0x7fffffff;\n                    }\n                }\n                var_24h = fcn.0002f660(&var_10h, arg_18h, arg_1ch);\n            }\n        }\ncode_r0x0002a854:\n        if (var_4h != 0) {\n            for (var_18h = 0; var_18h < var_8h; var_18h = var_18h + 1) {\n                fcn.00036460(*(var_4h + var_18h * 4));\n            }\n        }\n        fcn.00036460(var_ch);\n        fcn.00036460(var_4h);\n        fcn.00036460(var_20h);\n    }\n    else {\n        var_24h = var_14h + 0x191U | 0x21590000;\n    }\n    return var_24h;\n}\n",
        "token_count": 1850
    },
    "0002a900": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0002a900(uint arg_8h, int32_t *arg_ch)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint var_1a0h;\n    int32_t var_19ch;\n    int32_t var_198h;\n    int32_t *var_194h;\n    int32_t *var_190h;\n    uint32_t var_18ch;\n    uint var_188h;\n    uint var_180h;\n    int32_t *var_17ch;\n    uint var_178h;\n    uint var_170h;\n    int32_t *var_16ch;\n    uint var_168h;\n    uint var_164h;\n    int32_t var_158h;\n    int32_t var_154h;\n    uint32_t var_124h;\n    uint var_120h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_1ch = 0x100;\n    var_18h = fcn.000295f0(7, arg_8h, &var_120h, 0x100, &var_1ch, 0);\n    var_14h = 0;\n    var_ch = 0;\n    var_8h = 0;\n    var_10h = 1;\n    var_16ch = arg_ch;\n    do {\n        uVar1 = *var_16ch;\n        var_16ch = var_16ch + 1;\n    } while (uVar1 != 0);\n    iVar2 = fcn.00029800(7, arg_8h, arg_ch, var_16ch + (1 - (arg_ch + 1)), &var_14h, 1);\n    if (iVar2 != 0) {\n        return;\n    }\n    iVar2 = fcn.00023920(0xfffffffe, 7, &arg_8h, &var_168h);\n    if (iVar2 != 0) {\n        return;\n    }\n    fcn.00023b40(0xfffffffe, 7, var_164h, 0, var_158h + 1);\n    if (var_18h != 0) {\n        return;\n    }\n    var_4h = fcn.0007f7ea(&var_120h, 0x3a);\n    if (var_4h == 0) {\n        return;\n    }\n    var_124h = var_4h - &var_120h;\n    var_17ch = arg_ch;\n    do {\n        uVar1 = *var_17ch;\n        var_17ch = var_17ch + 1;\n    } while (uVar1 != 0);\n    if (((var_17ch - (arg_ch + 1) <= var_124h) || (*(arg_ch + var_124h) != 0x3a)) || (var_124h == 0))\n    goto code_r0x0002ac36;\n    var_190h = &var_120h;\n    var_194h = arg_ch;\n    for (var_18ch = var_124h - 1; 3 < var_18ch; var_18ch = var_18ch - 4) {\n        if (*var_194h != *var_190h) goto code_r0x0002ab04;\n        var_190h = var_190h + 1;\n        var_194h = var_194h + 1;\n    }\n    if (var_18ch == 0) {\ncode_r0x0002abda:\n        var_19ch = 0;\n    }\n    else {\ncode_r0x0002ab04:\n        var_198h = *var_194h - *var_190h;\n        if (var_198h == 0) {\n            if (var_18ch == 1) goto code_r0x0002abda;\n            var_198h = *(var_194h + 1) - *(var_190h + 1);\n            if (var_198h == 0) {\n                if (var_18ch == 2) goto code_r0x0002abda;\n                var_198h = *(var_194h + 2) - *(var_190h + 2);\n                if (var_198h == 0) {\n                    if ((var_18ch == 3) || (var_198h = *(var_194h + 3) - *(var_190h + 3),  var_198h == 0))\n                    goto code_r0x0002abda;\n                }\n            }\n        }\n        var_19ch = 1;\n        if (var_198h < 1) {\n            var_19ch = -1;\n        }\n    }\n    if (var_19ch == 0) {\n        fcn.00023b40(0xfffffffe, 7, var_164h, 1, var_154h + 1);\n        return;\n    }\ncode_r0x0002ac36:\n    fcn.00023b40(0xfffffffe, 7, var_164h, 1, 1);\n    return;\n}\n",
        "token_count": 1188
    },
    "0002ac90": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_158h\n\nuint32_t __cdecl fcn.0002ac90(uint noname_0, uint noname_1, uint noname_2, uint *arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint var_158h;\n    uint var_150h;\n    uint *var_14ch;\n    uint var_144h;\n    char *var_140h;\n    uint *var_13ch;\n    uint var_138h;\n    uint var_130h;\n    uint *var_12ch;\n    uint var_128h;\n    uint32_t var_28h;\n    int32_t var_24h;\n    uint32_t var_20h;\n    uint var_1ch;\n    uint32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint *var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_24h = 0;\n    *arg_14h = 3;\n    var_14h = fcn.000238e0(0xfffffffe, 7, &var_20h, &var_24h);\n    if (var_14h == 0) {\n        var_ch = NULL;\n        var_4h = 0;\n        var_10h = 6;\n        var_8h = var_20h;\n        var_ch = fcn.00036420(6, 8);\n        if (var_ch == NULL) {\n            var_28h = 0x21590004;\n        }\n        else {\n            *var_ch = 5;\n            var_ch[1] = 2;\n            var_ch[2] = 0x1c;\n            var_ch[3] = 200;\n            var_ch[4] = 0x1d;\n            var_ch[5] = 2;\n            var_ch[6] = 0x1e;\n            var_ch[7] = 2;\n            var_ch[8] = 1;\n            var_ch[9] = 8;\n            var_ch[10] = 0x5f;\n            var_ch[0xb] = 2;\n            var_4h = fcn.00036420(var_8h, 4);\n            if (var_4h == 0) {\n                var_28h = 0x21590004;\n            }\n            else {\n                for (var_18h = 0; var_18h < var_20h; var_18h = var_18h + 1) {\n                    var_14h = fcn.000295f0(7, *(var_24h + 4 + var_18h * 0x40), &var_128h, 0x100, &var_1ch, 1);\n                    if (var_14h != 0) {\n                        var_128h._0_1_ = 0;\n                    }\n                    var_12ch = &var_128h;\n                    do {\n                        cVar1 = *var_12ch;\n                        var_12ch = var_12ch + 1;\n                    } while (cVar1 != '\\0');\n                    uVar2 = fcn.00036330(var_12ch + ((var_10h * 0x10 + 1) - (&var_128h + 1)));\n                    *(var_4h + var_18h * 4) = uVar2;\n                    if (*(var_4h + var_18h * 4) == 0) {\n                        var_28h = 0x21590004;\n                        goto code_r0x0002b108;\n                    }\n                    fcn.0007f916(*(var_4h + var_18h * 4), 0, var_10h << 4);\n                    *(*(var_4h + var_18h * 4) + 4) = *(var_4h + var_18h * 4) + 8;\n                    **(var_4h + var_18h * 4) = 4;\n                    **(*(var_4h + var_18h * 4) + 4) = *(var_24h + 0xc + var_18h * 0x40);\n                    var_13ch = &var_128h;\n                    var_140h = var_10h * 0x10 + *(var_4h + var_18h * 4);\n                    do {\n                        cVar1 = *var_13ch;\n                        *var_140h = cVar1;\n                        var_13ch = var_13ch + 1;\n                        var_140h = var_140h + 1;\n                    } while (cVar1 != '\\0');\n                    *(*(var_4h + var_18h * 4) + 0x14) = var_10h * 0x10 + *(var_4h + var_18h * 4);\n                    var_14ch = &var_128h;\n                    do {\n                        cVar1 = *var_14ch;\n                        var_14ch = var_14ch + 1;\n                    } while (cVar1 != '\\0');\n                    *(*(var_4h + var_18h * 4) + 0x10) = var_14ch + (1 - (&var_128h + 1));\n                    *(*(var_4h + var_18h * 4) + 0x24) = *(var_4h + var_18h * 4) + 0x28;\n                    *(*(var_4h + var_18h * 4) + 0x20) = 4;\n                    **(*(var_4h + var_18h * 4) + 0x24) = *(var_24h + 0x10 + var_18h * 0x40);\n                    *(*(var_4h + var_18h * 4) + 0x34) = *(var_4h + var_18h * 4) + 0x38;\n                    *(*(var_4h + var_18h * 4) + 0x30) = 4;\n                    **(*(var_4h + var_18h * 4) + 0x34) = *(var_24h + 0x14 + var_18h * 0x40);\n                    *(*(var_4h + var_18h * 4) + 0x44) = *(var_4h + var_18h * 4) + 0x48;\n                    *(*(var_4h + var_18h * 4) + 0x40) = 4;\n                    **(*(var_4h + var_18h * 4) + 0x44) = *(var_24h + 0x28 + var_18h * 0x40);\n                    *(*(var_4h + var_18h * 4) + 0x54) = *(var_4h + var_18h * 4) + 0x58;\n                    *(*(var_4h + var_18h * 4) + 0x50) = 4;\n                    **(*(var_4h + var_18h * 4) + 0x54) = *(var_24h + 0x18 + var_18h * 0x40);\n                }\n                var_28h = fcn.0002f660(&var_10h, arg_18h, arg_1ch);\n            }\n        }\ncode_r0x0002b108:\n        if (var_4h != 0) {\n            for (var_18h = 0; var_18h < var_8h; var_18h = var_18h + 1) {\n                fcn.00036460(*(var_4h + var_18h * 4));\n            }\n            fcn.00036460(var_4h);\n        }\n        fcn.00036460(var_ch);\n        fcn.00023b80(var_24h);\n    }\n    else {\n        var_28h = var_14h + 0x191U | 0x21590000;\n    }\n    return var_28h;\n}\n",
        "token_count": 1857
    },
    "0002b170": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0002b170(uint noname_0, uint noname_1, uint noname_2, uint *arg_14h)\n\n{\n    uint32_t uVar1;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    *arg_14h = 0;\n    var_4h = fcn.000238e0(0xfffffffe, 7, &var_8h, &var_ch);\n    if (var_4h == 0) {\n        fcn.00023aa0(var_ch, var_8h);\n        fcn.00023b80(var_ch);\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = var_4h + 0x191U | 0x21590000;\n    }\n    return uVar1;\n}\n",
        "token_count": 194
    },
    "0002b1d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0002b1d0(void)\n\n{\n    int32_t iVar1;\n    uint var_114h;\n    int32_t var_110h;\n    uint var_10ch;\n    uint var_108h;\n    \n    fcn.00037b70(0x850905a4);\n    *0x850905b8 = fcn.0006b490();\n    *0x850905b4 = 0x8509f0e0;\n    *0x85090474 = 0x8509f0e0;\n    if (*0x8509f0e4 != *0x850905b8) {\n        fcn.0002a1f0(*0x8509f0e4, 0x8509f1f4);\n    }\n    fcn.00037b70(0x8509ef40);\n    fcn.0002ba40(0, 0, 0, 0, 0, 0, 0);\n    for (var_110h = 500; var_110h < 0x227; var_110h = var_110h + 1) {\n        iVar1 = fcn.000295a0(var_110h, &var_108h, 0x104, &var_10ch);\n        if ((iVar1 == 0) && (var_108h != '\\0')) {\n            fcn.000297e0(var_110h, 0x85010678, 8);\n            iVar1 = fcn.0002b450(&var_108h, 0);\n            fcn.0005bdd0(2000);\n            fcn.000297e0(var_110h, &var_108h, var_10ch);\n            if ((iVar1 != 0) && (iVar1 != 0x21590206)) {\n                fcn.0002a200(0xd, iVar1, 0, 0, 0xbb9aca00);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 457
    },
    "0002b320": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0002b320(void)\n\n{\n    int32_t *arg_8h;\n    uint var_4h;\n    \n    while( true ) {\n        fcn.00037da0(0x850905a4);\n        arg_8h = **0x850905b4;\n        if (arg_8h == NULL) break;\n        **0x850905b4 = *arg_8h;\n        fcn.00037e30(0x850905a4);\n        if (arg_8h[0x44] != 0) {\n            (*arg_8h[0x44])();\n        }\n        fcn.00029eb0(arg_8h);\n        fcn.00036460(arg_8h);\n    }\n    fcn.00037e30(0x850905a4);\n    fcn.00037da0(0x850905a4);\n    **0x850905b4 = 0;\n    *0x850905b4 = NULL;\n    *0x85090474 = 0;\n    fcn.00037e30(0x850905a4);\n    fcn.00037be0(0x850905a4);\n    if (*0x8509f0e4 != *0x850905b8) {\n        fcn.0002a1f0(*0x8509f0e4, 0x8509f1f4);\n    }\n    if (*0x8509047c != 0) {\n        fcn.00037da0(0x8509ef40);\n        fcn.00029eb0(0x85090478);\n        *0x8509047c = 0;\n        *0x850928ec = 0;\n        *0x850928f0 = 0;\n        fcn.00037e30(0x8509ef40);\n    }\n    fcn.00037be0(0x8509ef40);\n    return;\n}\n",
        "token_count": 452
    },
    "0002b450": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0002b450(char *arg_8h, int32_t arg_ch)\n\n{\n    int32_t *arg_8h_00;\n    int32_t iVar1;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    code *var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    var_8h = 0xffffffff;\n    fcn.00037c10(0x850905a4);\n    for (var_4h = *0x850905b4; var_4h != NULL; var_4h = *var_4h) {\n        if (var_4h[1] != *0x850905b8) {\n            fcn.0002a1f0(var_4h[1], var_4h + 0x45);\n        }\n    }\n    fcn.00037cc0(0x850905a4);\n    fcn.0002a1f0(*0x850928e4, 0x850928e8);\n    arg_8h_00 = fcn.00036330(300);\n    if (arg_8h_00 == NULL) {\n        var_10h = fcn.00036750();\n    }\n    else {\n        fcn.0007f916(arg_8h_00, 0, 300);\n        if (arg_ch == 0) {\n            if (*arg_8h == '&') {\n                var_10h = fcn.0002a090(arg_8h, arg_8h_00);\n            }\n            else {\n                var_10h = fcn.00029f80(arg_8h_00, arg_8h);\n            }\n        }\n        else {\n            var_10h = fcn.00029f30(arg_8h_00, arg_ch, arg_8h, arg_8h);\n        }\n        if ((var_10h == 0) && (var_10h = fcn.00029f10(arg_8h_00, &var_14h),  var_10h == 0)) {\n            iVar1 = arg_8h_00[1];\n            var_10h = fcn.00015b60(iVar1);\n            if (var_10h == 0) {\n                fcn.0007f7e4(arg_8h_00 + 2, arg_8h, 0x104, iVar1, var_14h);\n                *(arg_8h_00 + 0x10b) = 0;\n                fcn.00037c10(0x850905a4);\n                var_4h = *0x850905b4;\n                while (((var_4h != NULL && (var_4h[1] != arg_8h_00[1])) &&\n                       (iVar1 = fcn.0007f7a2(var_4h + 2, arg_8h_00 + 2),  iVar1 != 0))) {\n                    var_4h = *var_4h;\n                }\n                fcn.00037cc0(0x850905a4);\n                if (var_4h == NULL) {\n                    var_10h = fcn.0002a1c0(arg_8h_00, 0x85010680, &var_ch);\n                    if (var_10h == 0) {\n                        fcn.0002a1c0(arg_8h_00, 0x8501068c, arg_8h_00 + 0x43);\n                        fcn.0002a1c0(arg_8h_00, 0x8501069c, arg_8h_00 + 0x44);\n                        var_10h = (*var_ch)(*0x850905b4);\n                        if (var_10h == 0) {\n                            fcn.00037da0(0x850905a4);\n                            **0x85090474 = arg_8h_00;\n                            *0x85090474 = arg_8h_00;\n                            fcn.00037e30(0x850905a4);\n                            var_10h = 0;\n                        }\n                    }\n                }\n                else {\n                    var_10h = 0x215901fc;\n                }\n            }\n        }\n    }\n    if (var_10h != 0) {\n        if ((arg_8h_00 != NULL) && (arg_8h_00[1] != 0)) {\n            fcn.00015b90(arg_8h_00[1]);\n        }\n        fcn.00029eb0(arg_8h_00);\n        fcn.00036460(arg_8h_00);\n    }\n    fcn.00037c10(0x850905a4);\n    for (var_4h = *0x850905b4; var_4h != NULL; var_4h = *var_4h) {\n        if (var_4h[1] != *0x850905b8) {\n            fcn.0002a1f0(var_4h[1], var_4h + 0x45);\n        }\n    }\n    fcn.00037cc0(0x850905a4);\n    return var_10h;\n}\n",
        "token_count": 1184
    },
    "0002b740": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0002b740(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_10h;\n    code *var_ch;\n    uint *var_8h;\n    uint *var_4h;\n    \n    var_ch = NULL;\n    fcn.00037da0(0x850905a4);\n    var_4h = *0x850905b4;\n    var_8h = **0x850905b4;\n    do {\n        if (var_8h == NULL) {\ncode_r0x0002b7a7:\n            if (var_8h == NULL) {\n                fcn.00037e30(0x850905a4);\n                var_10h = 0x215901fd;\n            }\n            else {\n                *var_4h = *var_8h;\n                if (var_8h == *0x85090474) {\n                    *0x85090474 = var_4h;\n                }\n                fcn.00037e30(0x850905a4);\n                if (var_ch == NULL) {\n                    var_10h = 0x215901fe;\n                }\n                else {\n                    (*var_ch)();\n                    var_10h = 0;\n                }\n                fcn.00015b90(var_8h[1]);\n                fcn.00029eb0(var_8h);\n                fcn.00036460(var_8h);\n            }\n            return var_10h;\n        }\n        iVar1 = fcn.0007f7a2(var_8h + 2, arg_8h);\n        if (iVar1 == 0) {\n            var_ch = var_8h[0x44];\n            goto code_r0x0002b7a7;\n        }\n        var_4h = var_8h;\n        var_8h = *var_8h;\n    } while( true );\n}\n",
        "token_count": 423
    },
    "0002b8f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl\nfcn.0002b8f0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    int32_t var_8h;\n    uint *var_4h;\n    \n    var_8h = (*(*0x850905b4)[0x43])(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, 0x21590001);\n    if (var_8h == 0x21590001) {\n        fcn.00037c10(0x850905a4);\n        var_4h = **0x850905b4;\n        while ((var_4h != NULL &&\n               ((var_4h[0x43] == 0 ||\n                (var_8h = (*var_4h[0x43])(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h), \n                var_8h == 0x21590001))))) {\n            var_4h = *var_4h;\n        }\n        fcn.00037cc0(0x850905a4);\n    }\n    return var_8h;\n}\n",
        "token_count": 326
    },
    "0002ba40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.0002ba40(void)\n\n{\n    int32_t iVar1;\n    uint var_118h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    iVar1 = fcn.000295a0(0x22a, &var_118h, 0x104, &var_4h);\n    if (iVar1 == 0) {\n        fcn.00037da0(0x8509ef40);\n        var_8h = 1;\n        if (*0x8509047c != 0) {\n            fcn.00029eb0(0x85090478);\n            *0x850928ec = 0;\n            *0x850928f0 = 0;\n        }\n        if (var_118h == '&') {\n            var_ch = fcn.0002a090(&var_118h, 0x85090478);\n        }\n        else {\n            var_ch = fcn.00029f80(0x85090478, &var_118h);\n        }\n        if (((var_ch == 0) && (var_ch = fcn.0002a1c0(0x85090478, 0x850106a8, 0x850928ec),  var_ch == 0)) &&\n           (var_ch = fcn.0002a1c0(0x85090478, 0x850106b4, 0x850928f0),  var_ch == 0)) {\n            fcn.0002a1f0(*0x8509047c, 0x8509058c);\n            var_ch = 0;\n        }\n    }\n    else {\n        var_ch = 0x21590065;\n    }\n    if (var_ch != 0) {\n        *0x850928ec = 0;\n        *0x850928f0 = 0;\n        fcn.00029eb0(0x85090478);\n    }\n    if (var_8h != 0) {\n        fcn.00037e30(0x8509ef40);\n    }\n    return var_ch;\n}\n",
        "token_count": 497
    },
    "0002c4c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0002c4c0(uint32_t *arg_8h)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    ulong uVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.0002bb90();\n    uVar2 = fcn.0007f7fc(uVar1);\n    *arg_8h = uVar2;\n    arg_8h[1] = uVar2 >> 0x1f;\n    uVar3 = fcn.0007f8fe(*arg_8h, arg_8h[1], 0x400, 0);\n    uVar3 = fcn.0007f8fe(uVar3, 0x400, 0);\n    *arg_8h = uVar3;\n    arg_8h[1] = uVar3 >> 0x20;\n    if ((arg_8h[1] < 0) || ((-1 < arg_8h[1] && ((0 < arg_8h[1] || (0x7fffffff < *arg_8h)))))) {\n        *arg_8h = 0x6400000;\n        arg_8h[1] = 0;\n    }\n    return;\n}\n",
        "token_count": 290
    },
    "0002c560": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0002c560(uint32_t *arg_8h)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    ulong uVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.0002bbf0();\n    uVar2 = fcn.0007f7fc(uVar1);\n    *arg_8h = uVar2;\n    arg_8h[1] = uVar2 >> 0x1f;\n    uVar3 = fcn.0007f8fe(*arg_8h, arg_8h[1], 0x400, 0);\n    uVar3 = fcn.0007f8fe(uVar3, 0x400, 0);\n    *arg_8h = uVar3;\n    arg_8h[1] = uVar3 >> 0x20;\n    if ((arg_8h[1] < 0) || ((-1 < arg_8h[1] && ((0 < arg_8h[1] || (0x7fffffff < *arg_8h)))))) {\n        *arg_8h = 0x1000000;\n        arg_8h[1] = 0;\n    }\n    return;\n}\n",
        "token_count": 289
    },
    "0002c8b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0002c8b0(uint arg_8h, int32_t arg_ch, uint32_t arg_10h, int32_t arg_14h, char *arg_18h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint var_178h;\n    uint var_170h;\n    char *var_16ch;\n    uint var_168h;\n    uint32_t var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    int32_t var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    int32_t var_3ch;\n    int32_t var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    fcn.00035650(0x850905c0);\n    iVar2 = fcn.00023920(0xfffffffe, 8, &arg_8h, &var_58h);\n    if (iVar2 == 0) {\n        if (((arg_10h == 1) && (var_44h == 1)) &&\n           ((var_48h == arg_ch || (((var_48h == 0 || (var_3ch == arg_ch)) || (var_3ch == 0)))))) {\n            var_4h = fcn.000295f0(var_50h, var_54h, arg_18h, 0x104, &var_5ch, 1);\n            if (var_4h == 0) {\n                var_40h = var_40h + 1;\n                var_4h = fcn.00023b40(var_58h, var_50h, var_54h, 2, var_40h);\n                if ((var_4h == 0) && (arg_ch != 0)) {\n                    if (var_48h == 0) {\n                        var_48h = arg_ch;\n                        var_4h = fcn.00023b40(var_58h, var_50h, var_54h, 0, arg_ch);\n                    }\n                    else if (var_3ch == 0) {\n                        var_3ch = arg_ch;\n                        var_4h = fcn.00023b40(var_58h, var_50h, var_54h, 3, arg_ch);\n                    }\n                }\n            }\n            if (var_4h == 0) {\n                var_60h = 0;\n            }\n            else {\n                var_60h = var_4h + 0x191U | 0x21590000;\n            }\n        }\n        else {\n            var_60h = 0x21590064;\n        }\n    }\n    else {\n        if (*0x8508f9bc == 0) {\n            iVar2 = fcn.00037810(0x104, &var_168h);\n            if (iVar2 == 0) {\n                var_60h = fcn.00036750();\n                goto code_r0x0002cb95;\n            }\n        }\n        else if (arg_10h == 1) {\n            fcn.0002c190(&var_168h, 0x104);\n        }\n        else {\n            fcn.0002c160(&var_168h, 0x104);\n        }\n        if (arg_14h == 0) {\n            iVar2 = fcn.000376d0(&var_168h, 0x85010744, 0, arg_18h);\n            if (iVar2 == 0) {\n                var_60h = fcn.00036750();\n                goto code_r0x0002cb95;\n            }\n        }\n        else {\n            fcn.0004a010(arg_18h, 0x104, 0x85010748, &var_168h);\n        }\n        var_8h = 0;\n        var_14h = arg_ch;\n        var_10h = arg_10h;\n        var_ch = 1;\n        var_16ch = arg_18h;\n        do {\n            cVar1 = *var_16ch;\n            var_16ch = var_16ch + 1;\n        } while (cVar1 != '\\0');\n        var_4h = fcn.00029800(8, arg_8h, arg_18h, var_16ch + (1 - (arg_18h + 1)), &var_14h, 1);\n        if (var_4h == 0) {\n            if ((arg_10h & 1) == 0) {\n                var_60h = 0;\n            }\n            else {\n                var_60h = fcn.0002ce50(arg_8h, arg_18h);\n                if (var_60h != 0) {\n                    iVar2 = fcn.00023920(0xfffffffe, 8, &arg_8h, &var_58h);\n                    if (iVar2 == 0) {\n                        fcn.00023a70(var_58h, var_50h, var_54h);\n                    }\n                    fcn.00036f30(arg_18h);\n                }\n            }\n        }\n        else {\n            var_60h = var_4h + 0x191U | 0x21590000;\n            fcn.00036f30(arg_18h);\n        }\n    }\ncode_r0x0002cb95:\n    fcn.000356c0(0x850905c0);\n    return var_60h;\n}\n",
        "token_count": 1268
    },
    "0002cbb0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0002cbb0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_150h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint32_t var_2ch;\n    int32_t var_28h;\n    \n    fcn.00035650(0x850905c0);\n    iVar1 = fcn.00023920(0xfffffffe, 8, &arg_8h, &var_40h);\n    if (iVar1 == 0) {\n        if (var_28h != 0) {\n            var_28h = var_28h + -1;\n            fcn.00023b40(var_40h, var_38h, var_3ch, 2, var_28h);\n        }\n        if (var_28h == 0) {\n            iVar1 = fcn.000295f0(var_38h, var_3ch, &var_150h, 0x104, &var_44h, 1);\n            if (iVar1 == 0) {\n                if ((var_2ch & 2) != 0) {\n                    fcn.0002cf70(&var_150h, arg_8h);\n                }\n                fcn.00036f30(&var_150h);\n            }\n            fcn.00023a70(var_40h, var_38h, var_3ch);\n        }\n    }\n    fcn.000356c0(0x850905c0);\n    return;\n}\n",
        "token_count": 357
    },
    "0002cda0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0002cda0(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    var_ch = 0;\n    fcn.00035650(0x850905c0);\n    iVar1 = fcn.000238e0(0xfffffffe, 8, &var_4h, &var_ch);\n    if (iVar1 == 0) {\n        for (var_8h = 0; var_8h < var_4h; var_8h = var_8h + 1) {\n            if (arg_8h != 0) {\n                fcn.00023b40(*(var_ch + var_8h * 0x40), *(var_ch + 8 + var_8h * 0x40), *(var_ch + 4 + var_8h * 0x40), 2\n                             , 0);\n            }\n            fcn.0002cbb0(*(var_ch + 0xc + var_8h * 0x40));\n        }\n    }\n    fcn.000356c0(0x850905c0);\n    fcn.00023b80(var_ch);\n    return;\n}\n",
        "token_count": 290
    },
    "0002ce50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0002ce50(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_10h = 0;\n    var_8h = 0;\n    var_4h = fcn.000295f0(3, arg_8h, 0, 0, &var_ch, 0);\n    if (var_4h == 0) {\n        var_10h = fcn.00036330(var_ch);\n        if (var_10h == 0) {\n            var_14h = 0x21590004;\n        }\n        else {\n            var_4h = fcn.000295f0(3, arg_8h, var_10h, var_ch, &var_ch, 0);\n            if (var_4h == 0) {\n                var_8h = fcn.000367c0(arg_ch, 0x85010664);\n                if (var_8h == 0) {\n                    var_14h = fcn.00036750();\n                }\n                else {\n                    iVar1 = fcn.00036980(var_10h, 1, var_ch, var_8h);\n                    if (iVar1 == var_ch) {\n                        var_14h = 0;\n                    }\n                    else {\n                        var_14h = fcn.00036750();\n                    }\n                }\n            }\n            else {\n                var_14h = var_4h + 0x191U | 0x21590000;\n            }\n        }\n    }\n    else {\n        var_14h = var_4h + 0x191U | 0x21590000;\n    }\n    fcn.00036460(var_10h);\n    if (var_8h != 0) {\n        fcn.00036970(var_8h);\n    }\n    return var_14h;\n}\n",
        "token_count": 462
    },
    "0002cf70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0002cf70(uint arg_8h, uint arg_ch)\n\n{\n    uint arg_8h_00;\n    int32_t iVar1;\n    uint *arg_ch_00;\n    uint32_t var_38h;\n    int32_t var_34h;\n    uint var_30h;\n    int32_t var_1ch;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_34h = 0;\n    var_8h = fcn.000367c0(arg_8h, 0x85010660);\n    if (var_8h == 0) {\n        var_38h = fcn.00036750();\n    }\n    else {\n        arg_ch_00 = &var_30h;\n        arg_8h_00 = fcn.00036a60(var_8h);\n        iVar1 = fcn.00036d50(arg_8h_00, arg_ch_00);\n        if (iVar1 == -1) {\n            var_38h = fcn.00036750();\n        }\n        else {\n            var_ch = var_1ch;\n            var_34h = fcn.00036330(var_1ch);\n            if (var_34h == 0) {\n                var_38h = 0x21590004;\n            }\n            else {\n                iVar1 = fcn.000369f0(var_34h, 1, var_ch, var_8h);\n                if (iVar1 == var_ch) {\n                    var_4h = fcn.00029800(3, arg_ch, var_34h, var_ch, 0, 1);\n                    if (var_4h == 0) {\n                        var_38h = 0;\n                    }\n                    else {\n                        var_38h = var_4h + 0x191U | 0x21590000;\n                    }\n                }\n                else {\n                    var_38h = fcn.00036750();\n                }\n            }\n        }\n    }\n    fcn.00036460(var_34h);\n    if (var_8h != 0) {\n        fcn.00036970(var_8h);\n    }\n    return var_38h;\n}\n",
        "token_count": 504
    },
    "0002d080": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0002d080(uint noname_0, uint noname_1, uint noname_2, uint *arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint uVar1;\n    uint32_t var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint *var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    *arg_14h = 3;\n    var_38h = fcn.00029550(&var_14h);\n    if (var_38h == 0) {\n        var_18h = var_38h;\n        var_18h = fcn.000238e0(var_14h, 3, &var_1ch, &var_24h);\n        if (var_18h == 0) {\n            var_34h = 0x37;\n            var_30h = 2;\n            var_2ch = 0x1b;\n            var_28h = 2;\n            var_4h = 0;\n            var_10h = 2;\n            var_ch = &var_34h;\n            var_8h = var_1ch;\n            var_4h = fcn.00036420(var_1ch, 4);\n            if (var_4h == 0) {\n                var_38h = 0x21590004;\n            }\n            else {\n                for (var_20h = 0; var_20h < var_1ch; var_20h = var_20h + 1) {\n                    uVar1 = fcn.00036420(var_10h, 0x10);\n                    *(var_4h + var_20h * 4) = uVar1;\n                    if (*(var_4h + var_20h * 4) != 0) {\n                        *(*(var_4h + var_20h * 4) + 4) = *(var_4h + var_20h * 4) + 8;\n                        **(var_4h + var_20h * 4) = 4;\n                        **(*(var_4h + var_20h * 4) + 4) = *(var_24h + 0xc + var_20h * 0x40);\n                        *(*(var_4h + var_20h * 4) + 0x14) = *(var_4h + var_20h * 4) + 0x18;\n                        *(*(var_4h + var_20h * 4) + 0x10) = 4;\n                        **(*(var_4h + var_20h * 4) + 0x14) = *(var_24h + 0x30 + var_20h * 0x40);\n                    }\n                }\n                var_38h = fcn.0002f660(&var_10h, arg_18h, arg_1ch);\n            }\n            fcn.00023b80(var_24h);\n            if (var_4h != 0) {\n                for (var_20h = 0; var_20h < var_8h; var_20h = var_20h + 1) {\n                    fcn.00036460(*(var_4h + var_20h * 4));\n                }\n                fcn.00036460(var_4h);\n            }\n        }\n        else {\n            var_38h = var_18h + 0x191 | 0x21590000;\n        }\n    }\n    return var_38h;\n}\n",
        "token_count": 877
    },
    "0002d280": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.0002d280(uint noname_0, uint noname_1, uint arg_10h, uint *arg_14h, int16_t **arg_18h, int32_t *arg_1ch)\n\n{\n    char cVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    int16_t *piVar4;\n    uint var_248h;\n    uint var_240h;\n    int16_t *var_23ch;\n    uint var_238h;\n    uint var_230h;\n    uint *var_22ch;\n    uint var_228h;\n    int32_t var_11ch;\n    int32_t var_118h;\n    uint var_114h;\n    uint var_110h;\n    uint *var_10ch;\n    uint var_108h;\n    \n    *arg_14h = 2;\n    iVar3 = fcn.00020a10(arg_10h, 0x21, 2, &var_110h, 4);\n    if (iVar3 == 0) {\n        var_118h = 0x21590065;\n    }\n    else {\n        iVar3 = fcn.00020a10(arg_10h, 0x22, 3, &var_114h, 4);\n        if (iVar3 == 0) {\n            var_118h = 0x21590066;\n        }\n        else {\n            var_11ch = 0;\n            fcn.000209a0(arg_10h, 3, 4, &var_11ch, 0);\n            if (var_11ch == 0) {\n                var_10ch = NULL;\n            }\n            else {\n                fcn.00038560(var_11ch, &var_108h, 0x104);\n                var_10ch = &var_108h;\n            }\n            var_118h = fcn.0002c8b0(var_110h, 0, var_114h, var_10ch, &var_228h);\n            if (var_118h == 0) {\n                var_22ch = &var_228h;\n                do {\n                    cVar1 = *var_22ch;\n                    var_22ch = var_22ch + 1;\n                } while (cVar1 != '\\0');\n                *arg_1ch = (var_22ch - (&var_228h + 1)) * 2;\n                piVar4 = fcn.00036330(*arg_1ch + 2);\n                *arg_18h = piVar4;\n                if (*arg_18h == NULL) {\n                    *arg_1ch = 0;\n                    fcn.0002cbb0(var_110h);\n                    var_118h = 0x21590004;\n                }\n                else {\n                    fcn.000384e0(&var_228h, *arg_18h, 0xffffffff);\n                    var_23ch = *arg_18h;\n                    piVar4 = var_23ch + 1;\n                    do {\n                        iVar2 = *var_23ch;\n                        var_23ch = var_23ch + 1;\n                    } while (iVar2 != 0);\n                    *arg_1ch = (var_23ch - piVar4 >> 1) << 1;\n                }\n            }\n            else {\n                *arg_18h = NULL;\n                *arg_1ch = 0;\n            }\n        }\n    }\n    return var_118h;\n}\n",
        "token_count": 780
    },
    "0002d4e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_180h\n\nuint32_t __cdecl fcn.0002d4e0(uint noname_0, uint noname_1, uint noname_2, uint *arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_180h;\n    uint var_178h;\n    uint *var_174h;\n    uint var_16ch;\n    char *var_168h;\n    uint *var_164h;\n    uint var_160h;\n    uint var_158h;\n    uint *var_154h;\n    uint var_150h;\n    uint32_t var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint *var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_20h = 0;\n    var_10h = 0;\n    var_ch = NULL;\n    var_8h = 0;\n    var_4h = 0;\n    *arg_14h = 3;\n    var_14h = fcn.000238e0(0xfffffffe, 8, &var_18h, &var_20h);\n    if (var_14h == 0) {\n        var_40h = 0x37;\n        var_3ch = 2;\n        var_38h = 0x1f;\n        var_34h = 200;\n        var_30h = 0x38;\n        var_2ch = 3;\n        var_28h = 0x39;\n        var_24h = 2;\n        var_10h = 4;\n        var_ch = &var_40h;\n        var_8h = var_18h;\n        var_4h = fcn.00036420(var_18h, 4);\n        if (var_4h == 0) {\n            var_48h = 0x21590004;\n        }\n        else {\n            for (var_1ch = 0; var_1ch < var_18h; var_1ch = var_1ch + 1) {\n                iVar2 = fcn.000295f0(*(var_20h + 8 + var_1ch * 0x40), *(var_20h + 4 + var_1ch * 0x40), &var_150h, 0x104\n                                     , &var_44h, 1);\n                if (iVar2 == 0) {\n                    var_154h = &var_150h;\n                    do {\n                        cVar1 = *var_154h;\n                        var_154h = var_154h + 1;\n                    } while (cVar1 != '\\0');\n                    uVar3 = fcn.00036330(var_154h + ((var_10h * 0x10 + 1) - (&var_150h + 1)));\n                    *(var_4h + var_1ch * 4) = uVar3;\n                    if (*(var_4h + var_1ch * 4) != 0) {\n                        *(*(var_4h + var_1ch * 4) + 4) = *(var_4h + var_1ch * 4) + 8;\n                        **(var_4h + var_1ch * 4) = 4;\n                        **(*(var_4h + var_1ch * 4) + 4) = *(var_20h + 0xc + var_1ch * 0x40);\n                        *(*(var_4h + var_1ch * 4) + 0x14) = var_10h * 0x10 + *(var_4h + var_1ch * 4);\n                        var_164h = &var_150h;\n                        var_168h = *(*(var_4h + var_1ch * 4) + 0x14);\n                        do {\n                            cVar1 = *var_164h;\n                            *var_168h = cVar1;\n                            var_164h = var_164h + 1;\n                            var_168h = var_168h + 1;\n                        } while (cVar1 != '\\0');\n                        var_174h = &var_150h;\n                        do {\n                            cVar1 = *var_174h;\n                            var_174h = var_174h + 1;\n                        } while (cVar1 != '\\0');\n                        *(*(var_4h + var_1ch * 4) + 0x10) = var_174h + (1 - (&var_150h + 1));\n                        *(*(var_4h + var_1ch * 4) + 0x24) = *(var_4h + var_1ch * 4) + 0x28;\n                        *(*(var_4h + var_1ch * 4) + 0x20) = 4;\n                        **(*(var_4h + var_1ch * 4) + 0x24) = *(var_20h + 0x14 + var_1ch * 0x40);\n                        *(*(var_4h + var_1ch * 4) + 0x34) = *(var_4h + var_1ch * 4) + 0x38;\n                        *(*(var_4h + var_1ch * 4) + 0x30) = 4;\n                        **(*(var_4h + var_1ch * 4) + 0x34) = *(var_20h + 0x18 + var_1ch * 0x40);\n                    }\n                }\n            }\n            var_48h = fcn.0002f660(&var_10h, arg_18h, arg_1ch);\n        }\n    }\n    else {\n        var_48h = var_14h + 0x191U | 0x21590000;\n    }\n    fcn.00023b80(var_20h);\n    if (var_4h != 0) {\n        for (var_1ch = 0; var_1ch < var_8h; var_1ch = var_1ch + 1) {\n            fcn.00036460(*(var_4h + var_1ch * 4));\n        }\n        fcn.00036460(var_4h);\n    }\n    return var_48h;\n}\n",
        "token_count": 1550
    },
    "0002d940": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.0002d940(uint noname_0, uint noname_1, uint noname_2, uint *arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    uint8_t uVar3;\n    char *pcVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    uint *puVar7;\n    uint *puVar8;\n    uint var_180h;\n    char *var_17ch;\n    uint *var_178h;\n    uint var_170h;\n    char *var_16ch;\n    uint *var_168h;\n    uint var_160h;\n    char *var_15ch;\n    uint *var_158h;\n    uint var_154h;\n    uint var_14ch;\n    uint *var_148h;\n    uint var_144h;\n    uint var_13ch;\n    uint *var_138h;\n    uint var_134h;\n    uint var_12ch;\n    uint *var_128h;\n    uint var_124h;\n    uint var_11ch;\n    uint *var_118h;\n    ushort *var_110h;\n    uint *var_108h;\n    uint var_104h;\n    uint var_100h;\n    uint var_f8h;\n    uint *var_f4h;\n    ushort *var_ech;\n    uint32_t var_e8h;\n    uint32_t var_e4h;\n    uint var_deh;\n    uint var_d8h;\n    uint var_d4h;\n    uint var_d0h;\n    uint var_cch;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint32_t var_a0h;\n    int32_t var_9ch;\n    uint var_98h;\n    uint var_94h;\n    char *var_8dh;\n    uint32_t var_88h;\n    uint32_t var_84h;\n    uint var_80h;\n    char *var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint *var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    *arg_14h = 3;\n    var_d8h = 4;\n    var_d4h = 2;\n    var_d0h = 0x17;\n    var_cch = 200;\n    var_c8h = 0x19;\n    var_c4h = 200;\n    var_c0h = 0x18;\n    var_bch = 200;\n    var_ch = 0;\n    var_8h = 0;\n    var_14h = 4;\n    var_10h = &var_d8h;\n    var_18h = fcn.000238e0(0xfffffffe, 6, &var_84h, &var_9ch);\n    if (var_18h == 0) {\n        var_ch = var_84h;\n        var_8h = fcn.00036420(4, var_84h);\n        if (var_8h == 0) {\n            var_e4h = 0x21590004;\n        }\n        else {\n            for (var_88h = 0; var_88h < var_84h; var_88h = var_88h + 1) {\n                uVar2 = *(var_9ch + 0x10 + var_88h * 0x40) >> 0x10;\n                uVar3 = *(var_9ch + 0x10 + var_88h * 0x40) >> 8;\n                var_8dh._0_1_ = *(var_9ch + 0x10 + var_88h * 0x40);\n                var_a0h = *(var_9ch + 0x14 + var_88h * 0x40);\n                if ((uVar2 < 0x18) && (uVar3 < 0x3c)) {\n                    fcn.0007f7f0(&var_98h, 0x85010750, uVar2, uVar3);\n                }\n                else {\n                    var_98h = *0x8501075c;\n                    var_94h = *0x85010760;\n                }\n                if ((var_8dh & 0x7f) == 0x7f) {\n                    var_b8h._0_2_ = *0x85010764;\n                }\n                else {\n                    var_b8h._0_2_ = var_b8h & 0xff00;\n                    var_4h = 1;\n                    for (var_e8h = 0; var_e8h < 7; var_e8h = var_e8h + 1) {\n                        if ((1 << (var_e8h & 0x1f) & var_8dh) != 0) {\n                            if (var_4h == 0) {\n                                var_ech = &var_bch + 3;\n                                do {\n                                    pcVar4 = var_ech + 1;\n                                    var_ech = var_ech + 1;\n                                } while (*pcVar4 != '\\0');\n                                *var_ech = *0x85010768;\n                            }\n                            else {\n                                var_4h = 0;\n                            }\n                            puVar7 = var_e8h * 3 + -0x7af711d8;\n                            var_f4h = puVar7;\n                            do {\n                                cVar1 = *var_f4h;\n                                var_f4h = var_f4h + 1;\n                            } while (cVar1 != '\\0');\n                            var_108h = &var_bch + 3;\n                            do {\n                                pcVar4 = var_108h + 1;\n                                var_108h = var_108h + 1;\n                            } while (*pcVar4 != '\\0');\n                            puVar8 = puVar7;\n                            for (uVar6 = var_f4h - puVar7 >> 2; uVar6 != 0; uVar6 = uVar6 - 1) {\n                                *var_108h = *puVar8;\n                                puVar8 = puVar8 + 1;\n                                var_108h = var_108h + 1;\n                            }\n                            for (uVar6 = var_f4h - puVar7 & 3; uVar6 != 0; uVar6 = uVar6 - 1) {\n                                *var_108h = *puVar8;\n                                puVar8 = puVar8 + 1;\n                                var_108h = var_108h + 1;\n                            }\n                        }\n                    }\n                }\n                if ((var_a0h & 0x7fffffff) == 0x7fffffff) {\n                    var_80h._0_2_ = *0x85010764;\n                }\n                else {\n                    var_80h._0_2_ = var_80h._1_1_ << 8;\n                    var_4h = 1;\n                    for (var_e8h = 1; var_e8h < 0x20; var_e8h = var_e8h + 1) {\n                        if ((1 << (var_e8h & 0x1f) & var_a0h) != 0) {\n                            if (var_4h == 0) {\n                                var_110h = &var_84h + 3;\n                                do {\n                                    pcVar4 = var_110h + 1;\n                                    var_110h = var_110h + 1;\n                                } while (*pcVar4 != '\\0');\n                                *var_110h = *0x85010768;\n                            }\n                            else {\n                                var_4h = 0;\n                            }\n                            puVar7 = &var_80h;\n                            do {\n                                var_118h = puVar7;\n                                puVar7 = var_118h + 1;\n                            } while (*var_118h != '\\0');\n                            fcn.0007f7f0(var_118h, 0x85010668, var_e8h);\n                        }\n                    }\n                }\n                var_128h = &var_98h;\n                do {\n                    cVar1 = *var_128h;\n                    var_128h = var_128h + 1;\n                } while (cVar1 != '\\0');\n                *NULL = var_128h + (1 - (&var_98h + 1));\n                var_138h = &var_b8h;\n                do {\n                    cVar1 = *var_138h;\n                    var_138h = var_138h + 1;\n                } while (cVar1 != '\\0');\n                var_1ch = var_138h + (1 - (&var_b8h + 1));\n                var_148h = &var_80h;\n                do {\n                    cVar1 = *var_148h;\n                    var_148h = var_148h + 1;\n                } while (cVar1 != '\\0');\n                pcVar4 = var_148h + (1 - (&var_80h + 1));\n                uVar5 = fcn.00036330(*NULL + var_14h * 0x10 + var_1ch + pcVar4);\n                *(var_8h + var_88h * 4) = uVar5;\n                if (*(var_8h + var_88h * 4) == 0) {\n                    var_e4h = 0x21590004;\n                    goto code_r0x0002e1e4;\n                }\n                fcn.0007f916(*(var_8h + var_88h * 4), 0, var_14h << 4);\n                *(*(var_8h + var_88h * 4) + 4) = *(var_8h + var_88h * 4) + 8;\n                **(var_8h + var_88h * 4) = 4;\n                **(*(var_8h + var_88h * 4) + 4) = *(var_9ch + 0xc + var_88h * 0x40);\n                var_158h = &var_98h;\n                var_15ch = var_14h * 0x10 + *(var_8h + var_88h * 4);\n                do {\n                    cVar1 = *var_158h;\n                    *var_15ch = cVar1;\n                    var_158h = var_158h + 1;\n                    var_15ch = var_15ch + 1;\n                } while (cVar1 != '\\0');\n                *(*(var_8h + var_88h * 4) + 0x14) = var_14h * 0x10 + *(var_8h + var_88h * 4);\n                *(*(var_8h + var_88h * 4) + 0x10) = stack0xffffff70;\n                var_168h = &var_b8h;\n                var_16ch = stack0xffffff70 + *(var_8h + var_88h * 4) + var_14h * 0x10;\n                do {\n                    cVar1 = *var_168h;\n                    *var_16ch = cVar1;\n                    var_168h = var_168h + 1;\n                    var_16ch = var_16ch + 1;\n                } while (cVar1 != '\\0');\n                *(*(var_8h + var_88h * 4) + 0x24) = stack0xffffff70 + *(var_8h + var_88h * 4) + var_14h * 0x10;\n                *(*(var_8h + var_88h * 4) + 0x20) = var_1ch;\n                var_178h = &var_80h;\n                var_17ch = stack0xffffff70 + *(var_8h + var_88h * 4) + var_14h * 0x10 + var_1ch;\n                do {\n                    cVar1 = *var_178h;\n                    *var_17ch = cVar1;\n                    var_178h = var_178h + 1;\n                    var_17ch = var_17ch + 1;\n                } while (cVar1 != '\\0');\n                *(*(var_8h + var_88h * 4) + 0x34) = stack0xffffff70 + *(var_8h + var_88h * 4) + var_14h * 0x10 + var_1ch\n                ;\n                *(*(var_8h + var_88h * 4) + 0x30) = pcVar4;\n            }\n            var_e4h = fcn.0002f660(&var_14h, arg_18h, arg_1ch);\n        }\ncode_r0x0002e1e4:\n        if (var_8h != 0) {\n            for (var_88h = 0; var_88h < var_ch; var_88h = var_88h + 1) {\n                fcn.00036460(*(var_8h + var_88h * 4));\n            }\n            fcn.00036460(var_8h);\n        }\n        fcn.00023b80(var_9ch);\n    }\n    else {\n        var_e4h = var_18h + 0x191U | 0x21590000;\n    }\n    return var_e4h;\n}\n",
        "token_count": 3066
    },
    "0002e250": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0002e250(uint noname_0, uint noname_1, uint arg_10h, uint *arg_14h)\n\n{\n    int32_t iVar1;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    int32_t var_4h;\n    \n    *arg_14h = 0;\n    iVar1 = fcn.00020a10(arg_10h, 9, 2, &var_4ch, 4);\n    if (iVar1 == 0) {\n        while (iVar1 = fcn.00023920(0xfffffffe, 6, 0, &var_48h),  iVar1 == 0) {\n            fcn.00023a70(0xfffffffe, 6, var_44h);\n        }\n    }\n    else {\n        var_4h = fcn.00023920(0xfffffffe, 6, &var_4ch, &var_48h);\n        if (var_4h != 0) {\n            return var_4h + 0x191U | 0x21590000;\n        }\n        iVar1 = fcn.00023a70(0xfffffffe, 6, var_44h);\n        if (iVar1 != 0) {\n            return iVar1 + 0x191U | 0x21590000;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 321
    },
    "0002e2f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0002e2f0(void)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    var_4h = fcn.0002e330(1);\n    while( true ) {\n        iVar1 = fcn.00034df0(0x8509ef34, var_4h);\n        if ((iVar1 == 1) && (*0x850905c4 != 0)) break;\n        var_4h = fcn.0002e330(0);\n    }\n    return 0;\n}\n",
        "token_count": 122
    },
    "0002e330": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0002e330(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_28h;\n    uint32_t var_24h;\n    uint8_t var_1eh;\n    uint8_t var_1dh;\n    int32_t *var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    int32_t var_10h;\n    char var_9h;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    fcn.00036f90(&var_28h);\n    var_1ch = fcn.000374e0(&var_28h);\n    var_24h = (0x15180 - (var_1ch[2] * 0xe10 + var_1ch[1] * 0x3c + *var_1ch)) * 1000;\n    iVar2 = fcn.000238e0(0xfffffffe, 6, &var_4h, &var_10h);\n    if (iVar2 == 0) {\n        for (var_8h = 0; var_8h < var_4h; var_8h = var_8h + 1) {\n            var_1eh = *(var_10h + 0x10 + var_8h * 0x40) >> 0x10;\n            var_1dh = *(var_10h + 0x10 + var_8h * 0x40) >> 8;\n            uVar1 = *(var_10h + 0x10 + var_8h * 0x40);\n            var_9h = uVar1;\n            var_18h = *(var_10h + 0x14 + var_8h * 0x40);\n            if ((((var_1eh < 0x18) && (var_1dh < 0x3c)) && (var_9h != '\\0')) && (var_18h != 0)) {\n                if (((1 << (var_1ch[3] & 0x1f) & var_18h) != 0) && ((1 << (var_1ch[6] & 0x1f) & uVar1 & 0xff) != 0)) {\n                    iVar2 = (var_1eh * 0x3c + var_1dh) * 0x3c;\n                    iVar3 = var_1ch[2] * 0xe10 + var_1ch[1] * 0x3c + *var_1ch;\n                    if (iVar2 - iVar3 == 0 || iVar2 < iVar3) {\n                        var_14h = (var_1ch[2] * 0xe10 + var_1ch[1] * 0x3c + *var_1ch +\n                                  (var_1eh * 0x3c + var_1dh) * -0x3c) * 1000;\n                        if (var_14h < 0x493e1) {\n                            fcn.0002e610(*(var_10h + 0xc + var_8h * 0x40), *(var_10h + 0x18 + var_8h * 0x40), \n                                         *(var_10h + 4 + var_8h * 0x40), *(var_10h + 0x30 + var_8h * 0x40));\n                            fcn.00023a70(*(var_10h + var_8h * 0x40), *(var_10h + 8 + var_8h * 0x40), \n                                         *(var_10h + 4 + var_8h * 0x40));\n                        }\n                    }\n                    else {\n                        var_14h = ((var_1eh * 0x3c + var_1dh) * 0x3c -\n                                  (var_1ch[2] * 0xe10 + var_1ch[1] * 0x3c + *var_1ch)) * 1000;\n                        if (var_14h < var_24h) {\n                            var_24h = var_14h;\n                        }\n                    }\n                }\n            }\n            else if (arg_8h != 0) {\n                fcn.0002e610(*(var_10h + 0xc + var_8h * 0x40), *(var_10h + 0x18 + var_8h * 0x40), \n                             *(var_10h + 4 + var_8h * 0x40), *(var_10h + 0x30 + var_8h * 0x40));\n                fcn.00023a70(*(var_10h + var_8h * 0x40), *(var_10h + 8 + var_8h * 0x40), *(var_10h + 4 + var_8h * 0x40))\n                ;\n            }\n        }\n        fcn.00023b80(var_10h);\n    }\n    return var_24h;\n}\n",
        "token_count": 1168
    },
    "0002e610": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0002e610(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_14h = fcn.00036330(arg_14h);\n    if (var_14h == 0) {\n        fcn.0002a200(7, 0, 0x21590004, arg_ch, arg_8h);\n    }\n    else {\n        var_4h = fcn.00023a20(0xfffffffe, 6, arg_10h, 0, var_14h, arg_14h, &arg_14h);\n        if (var_4h == 0) {\n            var_10h = 0x8508f950;\n            var_20h = 0;\n            var_1ch = 0;\n            var_18h._0_1_ = 0;\n            var_28h = arg_8h;\n            var_2ch = arg_ch;\n            var_24h = 3;\n            var_8h = 0;\n            var_ch = 0;\n            fcn.000272a0(&var_10h, arg_ch, var_14h, arg_14h, &var_8h, &var_ch, &var_2ch);\n            fcn.00036460(var_14h);\n            fcn.00036460(var_8h);\n        }\n        else {\n            fcn.0002a200(7, 0, var_4h + 0x191U | 0x21590000, arg_ch, arg_8h);\n            fcn.00036460(var_14h);\n        }\n    }\n    return;\n}\n",
        "token_count": 467
    },
    "0002e7c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl\nfcn.0002e7c0(uint arg_8h, uint noname_1, uint arg_10h, uint *arg_14h, int32_t *arg_18h, uint32_t *arg_1ch, \n            int32_t arg_20h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t var_58h;\n    uint32_t var_54h;\n    uint32_t var_50h;\n    char var_49h;\n    uint32_t var_48h;\n    int32_t var_44h;\n    uint var_40h;\n    uint32_t var_3ch;\n    uint var_38h;\n    uint32_t var_24h;\n    int32_t var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    int16_t *var_8h;\n    int16_t *var_4h;\n    \n    var_54h = 0;\n    var_48h = 0;\n    var_3ch = 0;\n    var_58h = -1;\n    var_44h = 0;\n    *arg_14h = 1;\n    iVar1 = fcn.000209a0(arg_10h, 3, 4, &var_8h, 0);\n    if (iVar1 == 0) {\n        return 0x21590065;\n    }\n    var_14h = 0;\n    var_10h = 0xffffffff;\n    var_49h = '\\0';\n    fcn.00020a10(arg_10h, 7, 2, &var_14h, 4);\n    fcn.00020a10(arg_10h, 8, 2, &var_10h, 4);\n    fcn.00020a10(arg_10h, 0x15, 1, &var_49h, 1);\n    if ((*var_8h == 0x26) && (var_49h == '\\0')) {\n        var_8h = var_8h + 1;\n        var_49h = '\\x01';\n    }\n    if (arg_20h != 0) {\n        var_54h = 0x2000;\n        var_48h = 0x6000;\n        fcn.00020a10(arg_10h, 10, 2, &var_54h, 4);\n        fcn.00020a10(arg_10h, 0xb, 2, &var_48h, 4);\n        if ((var_48h == 0) || (var_48h < var_54h)) {\n            var_50h = 0x21590064;\n            goto code_r0x0002eb96;\n        }\n    }\n    if (var_49h == '\\0') {\n        var_58h = fcn.00036aa0(var_8h, 0);\n        if (var_58h == -1) {\n            uVar2 = fcn.00036750();\n            return uVar2;\n        }\n        if ((var_14h != 0) && (iVar1 = fcn.00036e20(var_58h, var_14h, 0),  iVar1 != var_14h)) {\n            var_50h = fcn.00036750();\n            goto code_r0x0002eb96;\n        }\n        fcn.00036d50(var_58h, &var_38h);\n        var_3ch = var_24h;\n        var_40h = 0xffffffff;\n    }\n    else {\n        if (arg_20h != 0) {\n            return 0x21590001;\n        }\n        var_40h = fcn.00037070(var_8h, &var_4h, 0);\n        if (*var_4h != 0) {\n            return 0x21590065;\n        }\n        var_ch = fcn.000295f0(3, var_40h, 0, 0, &var_3ch, 0);\n        if (var_ch != 0) {\n            return var_ch + 0x191U | 0x21590000;\n        }\n        var_58h = -1;\n    }\n    if (var_10h < var_3ch) {\n        var_3ch = var_10h;\n    }\n    if (arg_20h == 0) {\n        iVar1 = fcn.00036330(var_3ch);\n        *arg_18h = iVar1;\n        if (*arg_18h == 0) {\n            var_50h = 0x21590004;\n        }\n        else {\n            if (var_58h == -1) {\n                var_ch = fcn.000295f0(3, var_40h, *arg_18h, var_3ch, &var_3ch, 0);\n                if (var_ch != 0) {\n                    fcn.00036460(*arg_18h);\n                    *arg_18h = 0;\n                    var_50h = var_ch + 0x191U | 0x21590000;\n                    goto code_r0x0002eb96;\n                }\n            }\n            else {\n                var_3ch = fcn.00036c80(var_58h, *arg_18h, var_3ch);\n                if (var_3ch < 0) {\n                    fcn.00036460(*arg_18h);\n                    *arg_18h = 0;\n                    var_50h = fcn.00036750();\n                    goto code_r0x0002eb96;\n                }\n            }\n            *arg_1ch = var_3ch;\ncode_r0x0002eb8f:\n            var_50h = 0;\n        }\n    }\n    else {\n        var_44h = fcn.00036330(var_48h);\n        if (var_44h == 0) {\n            var_50h = 0x21590004;\n        }\n        else {\n            var_3ch = fcn.000365c0(var_3ch);\n            var_50h = fcn.0007d560(arg_8h, &var_3ch, 4, 0);\n            while (var_50h == 0) {\n                if (var_54h < var_48h) {\n                    uVar2 = fcn.0007f77e();\n                    var_3ch = uVar2 % ((var_48h - var_54h) + 1) + var_54h;\n                }\n                else {\n                    uVar2 = fcn.0007f77e();\n                    var_3ch = uVar2 % ((var_54h - var_48h) + 1) + var_48h;\n                }\n                var_3ch = fcn.00036c80(var_58h, var_44h, var_3ch);\n                if (var_3ch < 0) {\n                    var_50h = fcn.00036750();\n                    break;\n                }\n                if (var_3ch == 0) {\n                    var_50h = fcn.0007d560(arg_8h, 0, 0, 0);\n                    if (var_50h == 0) goto code_r0x0002eb8f;\n                    break;\n                }\n                var_50h = fcn.0007d560(arg_8h, var_44h, var_3ch, 0);\n            }\n        }\n    }\ncode_r0x0002eb96:\n    fcn.00036460(var_44h);\n    if (var_58h != -1) {\n        fcn.00036970(var_58h);\n    }\n    return var_50h;\n}\n",
        "token_count": 1741
    },
    "0002ebc0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl\nfcn.0002ebc0(uint arg_8h, uint noname_1, uint arg_10h, uint noname_3, uint noname_4, uint noname_5, int32_t arg_20h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint arg_14h;\n    int32_t var_2ch;\n    uint var_28h;\n    uint32_t var_24h;\n    uint var_20h;\n    uint var_19h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int16_t *var_8h;\n    int16_t *var_4h;\n    \n    iVar1 = fcn.000209a0(arg_10h, 3, 4, &var_8h, 0);\n    if (iVar1 == 0) {\n        return 0x21590065;\n    }\n    var_19h._0_1_ = '\\0';\n    fcn.00020a10(arg_10h, 0x15, 1, &var_19h, 1);\n    if ((*var_8h == 0x26) && (var_19h == '\\0')) {\n        var_8h = var_8h + 1;\n        var_19h._0_1_ = '\\x01';\n    }\n    if (var_19h == '\\0') {\n        var_2ch = fcn.00036aa0(var_8h, 0x301);\n        if (var_2ch == -1) {\n            uVar2 = fcn.00036750();\n            return uVar2;\n        }\n        stack0xffffffe4 = 0xffffffff;\n    }\n    else {\n        if (arg_20h != 0) {\n            return 0x21590001;\n        }\n        *NULL = fcn.00037070(var_8h, &var_4h, 0);\n        if (*var_4h != 0) {\n            return 0x21590065;\n        }\n        var_2ch = -1;\n    }\n    if (arg_20h == 0) {\n        iVar1 = fcn.000209a0(arg_10h, 4, 5, &var_20h, &var_14h);\n        if (iVar1 == 0) {\n            var_24h = 0x21590065;\n        }\n        else {\n            if (var_2ch == -1) {\n                var_ch = fcn.00029800(3, stack0xffffffe4, var_20h, var_14h, 0, 1);\n                if (var_ch != 0) {\n                    return var_ch + 0x191U | 0x21590000;\n                }\n            }\n            else {\n                iVar1 = fcn.00036cf0(var_2ch, var_20h, var_14h);\n                if (iVar1 < 0) {\n                    var_24h = fcn.00036750();\n                    goto code_r0x0002edb4;\n                }\n            }\ncode_r0x0002edad:\n            var_24h = 0;\n        }\n    }\n    else {\n        arg_14h = fcn.000299b0(400, 20000);\n        while (var_24h = fcn.0007d530(arg_8h, &var_20h, &var_10h, arg_14h, 0),  var_24h == 0) {\n            if (var_10h == 0) goto code_r0x0002edad;\n            iVar1 = fcn.00036cf0(var_2ch, var_20h, var_10h);\n            if (iVar1 < 0) {\n                var_24h = fcn.00036750();\n                fcn.0007d500(arg_8h, var_20h, 0);\n                break;\n            }\n            fcn.0007d500(arg_8h, var_20h, 0);\n        }\n    }\ncode_r0x0002edb4:\n    if (var_2ch != -1) {\n        fcn.00036970(var_2ch);\n    }\n    return var_24h;\n}\n",
        "token_count": 966
    },
    "0002edd0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.0002edd0(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint var_55h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_10h;\n    uint32_t var_ch;\n    int16_t *var_8h;\n    int16_t *var_4h;\n    \n    iVar1 = fcn.000209a0(arg_10h, 3, 4, &var_8h, 0);\n    if (iVar1 == 0) {\n        return 0x21590065;\n    }\n    var_55h._0_1_ = '\\0';\n    fcn.00020a10(arg_10h, 0x15, 1, &var_55h, 1);\n    if ((*var_8h == 0x26) && (var_55h == '\\0')) {\n        var_8h = var_8h + 1;\n        var_55h._0_1_ = '\\x01';\n    }\n    if (var_55h == '\\0') {\n        iVar1 = fcn.00036e80(var_8h);\n        if (iVar1 < 0) {\n            uVar2 = fcn.00036750();\n            return uVar2;\n        }\n    }\n    else {\n        *NULL = fcn.00037070(var_8h, &var_4h, 0);\n        if (*var_4h != 0) {\n            return 0x21590065;\n        }\n        var_ch = fcn.00029550(&var_10h);\n        if (var_ch != 0) {\n            return var_ch;\n        }\n        var_ch = fcn.00023920(var_10h, 3, &var_55h + 1, &var_50h);\n        if (var_ch != 0) {\n            return var_ch + 0x191 | 0x21590000;\n        }\n        iVar1 = fcn.00023a70(var_10h, 3, var_4ch);\n        if (iVar1 != 0) {\n            return iVar1 + 0x191U | 0x21590000;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 531
    },
    "0002eef0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0002eef0(uint noname_0, uint noname_1, uint noname_2, uint *arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint uVar1;\n    int32_t var_34h;\n    uint32_t var_30h;\n    uint var_2ch;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    int32_t *var_1ch;\n    uint32_t var_18h;\n    int32_t var_14h;\n    uint *var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    var_4h = NULL;\n    *arg_14h = 3;\n    var_ch = 0;\n    var_8h = 0;\n    var_14h = 2;\n    var_10h = &var_2ch;\n    var_2ch = 6;\n    uStack44 = 2;\n    uStack40 = 7;\n    uStack36 = 4;\n    var_34h = fcn.00035930(5, &var_4h);\n    if (var_34h == 0) {\n        var_30h = 0;\n        for (var_1ch = var_4h; var_30h = var_30h + 1,  *var_1ch != 0; var_1ch = var_1ch + *var_1ch) {\n        }\n        var_ch = var_30h;\n        var_8h = fcn.00036420(var_30h, 4);\n        if (var_8h == 0) {\n            var_34h = 0x21590004;\n        }\n        else {\n            var_1ch = var_4h;\n            for (var_18h = 0; var_18h < var_30h; var_18h = var_18h + 1) {\n                uVar1 = fcn.00036330(var_14h * 0x10 + 2 + *(var_1ch + 0xe));\n                *(var_8h + var_18h * 4) = uVar1;\n                if (*(var_8h + var_18h * 4) == 0) {\n                    var_34h = 0x21590004;\n                    goto code_r0x0002f0ff;\n                }\n                fcn.0007f916(*(var_8h + var_18h * 4), 0, var_14h << 4);\n                *(*(var_8h + var_18h * 4) + 4) = *(var_8h + var_18h * 4) + 8;\n                **(var_8h + var_18h * 4) = 4;\n                **(*(var_8h + var_18h * 4) + 4) = var_1ch[0x11];\n                *(*(var_8h + var_18h * 4) + 0x14) = *(var_8h + var_18h * 4) + 0x20;\n                *(*(var_8h + var_18h * 4) + 0x10) = *(var_1ch + 0xe) + 2;\n                fcn.0007f904(*(*(var_8h + var_18h * 4) + 0x14), var_1ch[0xf], *(var_1ch + 0xe));\n                *(*(var_1ch + 0xe) + *(*(var_8h + var_18h * 4) + 0x14)) = 0;\n                var_1ch = var_1ch + *var_1ch;\n            }\n            var_34h = fcn.0002f660(&var_14h, arg_18h, arg_1ch);\n        }\n    }\ncode_r0x0002f0ff:\n    if (var_8h != 0) {\n        for (var_18h = 0; var_18h < var_ch; var_18h = var_18h + 1) {\n            fcn.00036460(*(var_8h + var_18h * 4));\n        }\n    }\n    fcn.00036460(var_8h);\n    fcn.00036460(var_4h);\n    return var_34h;\n}\n",
        "token_count": 1007
    },
    "0002f160": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0002f160(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.00020a10(arg_10h, 2, 2, &var_10h, 4);\n    if (iVar1 == 0) {\n        var_ch = 0x21590065;\n    }\n    else {\n        var_8h = var_10h;\n        var_4h = 0;\n        var_2ch = 0;\n        var_28h = 0;\n        var_24h = 0;\n        var_20h = 0;\n        var_1ch = 0;\n        var_18h = 0;\n        var_ch = fcn.0001cfa0(&var_14h, 1, &var_2ch, &var_8h);\n        if (var_ch == 0) {\n            var_ch = fcn.0001d010(var_14h, 0);\n            fcn.0007f6c4(var_14h);\n        }\n        else {\n            var_ch = fcn.0007f742(var_ch);\n        }\n    }\n    return var_ch;\n}\n",
        "token_count": 354
    },
    "0002f1f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0002f1f0(uint noname_0, uint noname_1, uint noname_2, uint *arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    char cVar1;\n    int16_t iVar2;\n    int16_t *piVar3;\n    uint var_280h;\n    uint var_278h;\n    int16_t *var_274h;\n    uint var_270h;\n    uint var_268h;\n    uint *var_264h;\n    uint var_260h;\n    uint var_258h;\n    int16_t *var_254h;\n    uint var_250h;\n    uint var_248h;\n    uint *var_244h;\n    uint var_23ch;\n    uint *var_238h;\n    int16_t *var_234h;\n    uint var_230h;\n    uint *var_22ch;\n    uint var_228h;\n    uint var_224h;\n    uint var_220h;\n    uint *var_21ch;\n    int32_t var_1f0h;\n    uint *var_1ech;\n    int32_t var_1e0h;\n    uint var_1dch;\n    char *var_1d0h;\n    uint *var_1cch;\n    int32_t var_1c0h;\n    int32_t var_1bch;\n    int32_t var_1b0h;\n    uint var_1ach;\n    uint var_1a0h;\n    uint var_19ch;\n    uint var_18ch;\n    uint32_t var_188h;\n    int32_t var_184h;\n    uint var_180h;\n    uint var_17ch;\n    uint var_178h;\n    uint var_174h;\n    uint var_170h;\n    uint var_16ch;\n    uint var_168h;\n    uint var_164h;\n    uint var_160h;\n    uint var_15ch;\n    uint var_158h;\n    uint var_154h;\n    uint *var_150h;\n    uint var_14ch;\n    int32_t var_148h;\n    uint var_144h;\n    uint var_140h;\n    uint var_78h;\n    uint var_10h;\n    uint *var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    *arg_14h = 3;\n    fcn.0007f916(&var_228h, 0, 0x38);\n    var_22ch = &var_140h;\n    var_230h._0_2_ = 0;\n    var_230h._2_2_ = 200;\n    var_224h = 0x24;\n    var_220h = 0x8501076c;\n    var_21ch = &var_230h;\n    var_148h = fcn.0007f808(2, 0x85010788, &var_228h, 0, 0);\n    if (var_148h != 0) {\n        var_234h = 0x850107cc;\n        var_238h = &var_140h;\n        do {\n            iVar2 = *var_234h;\n            *var_238h = iVar2;\n            var_234h = var_234h + 1;\n            var_238h = var_238h + 2;\n        } while (iVar2 != 0);\n    }\n    var_18ch = 0;\n    var_14ch = 0;\n    var_144h = 0;\n    var_188h = 0;\n    var_184h = 0;\n    fcn.0007f80e(&var_18ch, &var_14ch, &var_144h, &var_188h);\n    var_10h = 6;\n    var_ch = &var_180h;\n    var_150h = &var_1f0h;\n    var_8h = 1;\n    var_4h = &var_150h;\n    var_180h = 9;\n    var_17ch = 4;\n    var_1ech = &var_140h;\n    var_244h = &var_140h;\n    do {\n        iVar2 = *var_244h;\n        var_244h = var_244h + 2;\n    } while (iVar2 != 0);\n    var_1f0h = (var_244h - (&var_140h + 2) >> 1) * 2 + 2;\n    var_178h = 10;\n    var_174h = 4;\n    var_1dch = 0x850107d4;\n    var_254h = 0x850107d4;\n    piVar3 = var_254h;\n    do {\n        var_254h = piVar3;\n        piVar3 = var_254h + 1;\n    } while (*var_254h != 0);\n    var_1e0h = (var_254h + 0x3d7f7c16 >> 1) * 2 + 2;\n    var_170h = 0xb;\n    var_16ch = 200;\n    fcn.0007f7f0(&var_78h, 0x850107e0, var_18ch, var_14ch, var_144h);\n    var_1cch = &var_78h;\n    var_264h = &var_78h;\n    do {\n        cVar1 = *var_264h;\n        var_264h = var_264h + 1;\n    } while (cVar1 != '\\0');\n    var_1d0h = var_264h + (1 - (&var_78h + 1));\n    var_168h = 0xc;\n    var_164h = 4;\n    if (var_184h == 0) {\n        var_1bch = -0x7afef80c;\n        var_1c0h = 2;\n    }\n    else {\n        var_1bch = var_184h;\n        var_1c0h = (var_188h & 0xffff) + 2;\n    }\n    var_160h = 0xd;\n    var_15ch = 4;\n    var_1ach = 0x850107f8;\n    var_274h = 0x850107f8;\n    piVar3 = var_274h;\n    do {\n        var_274h = piVar3;\n        piVar3 = var_274h + 1;\n    } while (*var_274h != 0);\n    var_1b0h = (var_274h + 0x3d7f7c04 >> 1) * 2 + 2;\n    var_158h = 0x88;\n    var_154h = 4;\n    var_19ch = 0x8508ee08;\n    var_1a0h = 0x1e;\n    fcn.0002f660(&var_10h, arg_18h, arg_1ch);\n    return;\n}\n",
        "token_count": 1610
    },
    "0002f660": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0002f660(uint32_t *arg_8h, uint32_t **arg_ch, int32_t *arg_10h)\n\n{\n    uint32_t *arg_8h_00;\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t *puVar3;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    var_10h = 0;\n    for (var_8h = 0; var_8h < arg_8h[2]; var_8h = var_8h + 1) {\n        for (var_1ch = 0; var_1ch < *arg_8h; var_1ch = var_1ch + 1) {\n            if (*(arg_8h[1] + 4 + var_1ch * 8) == 200) {\n                var_10h = var_10h + 4 + *(*(arg_8h[3] + var_8h * 4) + var_1ch * 0x10) * 2;\n            }\n            else {\n                var_10h = var_10h + 4 + *(*(arg_8h[3] + var_8h * 4) + var_1ch * 0x10);\n            }\n        }\n    }\n    arg_8h_00 = fcn.00036330(*arg_8h * 0x11 + 0x14 + var_10h);\n    if (arg_8h_00 == NULL) {\n        uVar1 = 0x21590004;\n    }\n    else {\n        *arg_8h_00 = 0;\n        arg_8h_00[1] = 0;\n        arg_8h_00[2] = 0;\n        arg_8h_00[3] = 0;\n        arg_8h_00[4] = 0;\n        *arg_8h_00 = *arg_8h;\n        arg_8h_00[1] = arg_8h[2];\n        fcn.0002f610(arg_8h_00);\n        puVar3 = arg_8h_00 + 5;\n        fcn.0007f916(puVar3, 0, *arg_8h * 0x11);\n        for (var_8h = 0; var_8h < *arg_8h; var_8h = var_8h + 1) {\n            *(puVar3 + var_8h * 0x11) = *(arg_8h[1] + var_8h * 8);\n            *(arg_8h_00 + var_8h * 0x11 + 0x18) = *(arg_8h[1] + 4 + var_8h * 8);\n            if ((*(arg_8h_00 + var_8h * 0x11 + 0x18) == -0x38) || (*(arg_8h_00 + var_8h * 0x11 + 0x18) == -0x37)) {\n                *(arg_8h_00 + var_8h * 0x11 + 0x18) = 4;\n            }\n            fcn.0002f640(var_8h * 0x11 + puVar3);\n        }\n        var_ch = *arg_8h * 0x11 + 0x14;\n        for (var_8h = 0; var_8h < arg_8h[2]; var_8h = var_8h + 1) {\n            for (var_1ch = 0; var_1ch < *arg_8h; var_1ch = var_1ch + 1) {\n                if (*(arg_8h[1] + 4 + var_1ch * 8) == 200) {\n                    if ((*(var_1ch * 0x10 + *(arg_8h[3] + var_8h * 4)) == 0) ||\n                       (*(*(arg_8h[3] + var_8h * 4) + 4 + var_1ch * 0x10) == 0)) {\n                        *(arg_8h_00 + var_ch) = 0;\n                        var_ch = var_ch + 4;\n                    }\n                    else {\n                        iVar2 = fcn.00038630(*(*(arg_8h[3] + var_8h * 4) + 4 + var_1ch * 0x10));\n                        uVar1 = fcn.000365c0(iVar2 * 2);\n                        *(arg_8h_00 + var_ch) = uVar1;\n                        fcn.000384e0(*(*(arg_8h[3] + var_8h * 4) + 4 + var_1ch * 0x10), arg_8h_00 + var_ch + 4, \n                                     0xffffffff);\n                        var_ch = var_ch + 4 + iVar2 * 2;\n                    }\n                }\n                else {\n                    uVar1 = fcn.000365c0(*(*(arg_8h[3] + var_8h * 4) + var_1ch * 0x10));\n                    *(arg_8h_00 + var_ch) = uVar1;\n                    fcn.0007f904(arg_8h_00 + var_ch + 4, *(*(arg_8h[3] + var_8h * 4) + 4 + var_1ch * 0x10), \n                                 *(*(arg_8h[3] + var_8h * 4) + var_1ch * 0x10));\n                    fcn.00020a80(*(arg_8h[1] + 4 + var_1ch * 8));\n                    var_ch = var_ch + 4 + *(*(arg_8h[3] + var_8h * 4) + var_1ch * 0x10);\n                }\n            }\n        }\n        *arg_ch = arg_8h_00;\n        *arg_10h = *arg_8h * 0x11 + 0x14 + var_10h;\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 1470
    },
    "0002fa50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0002fa50(uint *arg_8h, uint32_t arg_ch)\n\n{\n    int32_t *arg_8h_00;\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint var_20h;\n    int32_t *var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_1ch = NULL;\n    while( true ) {\n        if (arg_ch < 0x15) {\n            return var_1ch;\n        }\n        var_18h = *arg_8h;\n        var_14h = arg_8h[1];\n        var_10h = arg_8h[2];\n        var_ch = arg_8h[3];\n        var_8h = arg_8h[4];\n        var_4h._0_1_ = *(arg_8h + 5);\n        fcn.0002f610(&var_18h);\n        if (arg_ch - 0x15 < var_14h) break;\n        puVar1 = fcn.00036330(0x1c);\n        if (puVar1 == NULL) {\n            return var_1ch;\n        }\n        *puVar1 = 0;\n        puVar1[1] = 0;\n        puVar1[2] = 0;\n        puVar1[3] = 0;\n        puVar1[4] = 0;\n        puVar1[5] = 0;\n        puVar1[6] = 0;\n        puVar1[1] = var_18h;\n        puVar1[2] = var_10h & 0xff;\n        puVar1[3] = var_14h;\n        if (puVar1[3] < 8) {\n            puVar1[4] = puVar1 + 5;\n        }\n        else {\n            uVar2 = fcn.00036330(puVar1[3]);\n            puVar1[4] = uVar2;\n            if (puVar1[4] == 0) {\n                puVar1[3] = 0;\n            }\n        }\n        fcn.0007f904(puVar1[4], arg_8h + 0x15, var_14h);\n        arg_8h = arg_8h + 0x15 + var_14h;\n        arg_ch = (arg_ch - 0x15) - var_14h;\n        arg_8h_00 = puVar1[2];\n        iVar3 = fcn.00020a80(arg_8h_00);\n        if (iVar3 == 0) {\n            arg_8h_00[3] = 0;\n        }\n        *arg_8h_00 = var_1ch;\n        var_1ch = arg_8h_00;\n    }\n    return var_1ch;\n}\n",
        "token_count": 708
    },
    "0002fbb0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n\nuint __cdecl fcn.0002fbb0(uint *arg_8h, int32_t arg_ch, int32_t **arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint *puVar3;\n    uint *var_18h;\n    uint var_14h;\n    int32_t *var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_10h = NULL;\n    for (var_18h = arg_8h; var_18h != NULL; var_18h = *var_18h) {\n        var_18h = var_18h[2];\n        iVar1 = fcn.00020b30(var_18h);\n        if (iVar1 != 0) {\n            var_10h = var_10h + var_18h[3] + 0x15;\n        }\n    }\n    if (var_10h < 1) {\n        arg_10h[1] = NULL;\n        arg_10h[2] = NULL;\n        *arg_10h = arg_10h + 4;\n        arg_10h[5] = NULL;\n        arg_10h[6] = NULL;\n        arg_10h[4] = arg_10h + 8;\n    }\n    else {\n        piVar2 = fcn.00036330(var_10h);\n        if (piVar2 == NULL) {\n            return 0;\n        }\n        var_8h = 0;\n        for (var_18h = arg_8h; var_18h != NULL; var_18h = *var_18h) {\n            iVar1 = fcn.00020b30(var_18h[2]);\n            if (iVar1 != 0) {\n                puVar3 = piVar2 + var_8h;\n                *puVar3 = 0;\n                puVar3[1] = 0;\n                puVar3[2] = 0;\n                puVar3[3] = 0;\n                puVar3[4] = 0;\n                *(puVar3 + 5) = 0;\n                *puVar3 = var_18h[1];\n                puVar3[1] = var_18h[3];\n                *(puVar3 + 2) = *(var_18h + 2);\n                fcn.0002f610(puVar3);\n                fcn.0007f904(piVar2 + var_8h + 0x15, var_18h[4], var_18h[3]);\n                fcn.00020a80(var_18h[2]);\n                var_8h = var_8h + 0x15 + var_18h[3];\n            }\n        }\n        arg_10h[1] = piVar2;\n        arg_10h[2] = var_10h;\n        *arg_10h = arg_10h + 4;\n        arg_10h[5] = NULL;\n        arg_10h[6] = NULL;\n        arg_10h[4] = arg_10h + 8;\n    }\n    var_ch = 1;\n    var_18h = arg_8h;\n    while ((var_18h != NULL && (var_ch < 0x20))) {\n        iVar1 = fcn.00020b30(var_18h[2]);\n        if (iVar1 == 0) {\n            puVar3 = var_ch * 0x15 + arg_ch;\n            *puVar3 = 0;\n            puVar3[1] = 0;\n            puVar3[2] = 0;\n            puVar3[3] = 0;\n            puVar3[4] = 0;\n            *(puVar3 + 5) = 0;\n            *(arg_ch + var_ch * 0x15) = var_18h[1];\n            *(arg_ch + 4 + var_ch * 0x15) = var_18h[3];\n            *(arg_ch + 8 + var_ch * 0x15) = *(var_18h + 2);\n            fcn.0002f610(var_ch * 0x15 + arg_ch);\n            arg_10h[var_ch * 8 + 1] = var_ch * 0x15 + arg_ch;\n            arg_10h[var_ch * 8 + 2] = 0x15;\n            arg_10h[var_ch * 8] = arg_10h + (var_ch * 2 + 1) * 4;\n            arg_10h[(var_ch * 2 + 1) * 4 + 1] = var_18h[4];\n            arg_10h[(var_ch * 2 + 1) * 4 + 2] = var_18h[3];\n            arg_10h[(var_ch * 2 + 1) * 4] = arg_10h + (var_ch * 2 + 2) * 4;\n            var_ch = var_ch + 1;\n        }\n        var_18h = *var_18h;\n    }\n    arg_10h[(var_ch * 2 + -1) * 4] = NULL;\n    return 1;\n}\n",
        "token_count": 1194
    },
    "0002fed0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0002fed0(uint32_t *arg_8h, int32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    uint var_110h;\n    uint var_10ch;\n    uint var_108h;\n    uint var_104h;\n    uint var_100h;\n    uint var_fch;\n    uint var_f8h;\n    uint var_f4h;\n    uint var_f0h;\n    uint var_ech;\n    uint var_e8h;\n    uint var_e4h;\n    uint var_e0h;\n    uint var_dch;\n    uint var_d8h;\n    uint var_d4h;\n    uint var_d0h;\n    uint var_cch;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    uVar1 = *arg_ch + arg_8h[1];\n    uVar1 = uVar1 << (arg_ch[1] & 0x1f) | uVar1 >> (0x20U - arg_ch[1] & 0x1f);\n    var_8h = ((*((uVar1 >> 8 & 0xff) * 4 + -0x7aff19a8) ^ *((uVar1 & 0xff) * 4 + -0x7aff15a8)) -\n             *((uVar1 >> 0x18) * 4 + -0x7aff11a8)) + *((uVar1 >> 0x10 & 0xff) * 4 + -0x7aff0da8) ^ *arg_8h;\n    uVar1 = arg_ch[2] ^ var_8h;\n    uVar1 = uVar1 << (arg_ch[3] & 0x1f) | uVar1 >> (0x20U - arg_ch[3] & 0x1f);\n    var_ch = (*((uVar1 >> 8 & 0xff) * 4 + -0x7aff19a8) - *((uVar1 & 0xff) * 4 + -0x7aff15a8)) +\n             *((uVar1 >> 0x18) * 4 + -0x7aff11a8) ^ *((uVar1 >> 0x10 & 0xff) * 4 + -0x7aff0da8) ^ arg_8h[1];\n    uVar1 = arg_ch[4] - var_ch;\n    uVar1 = uVar1 << (arg_ch[5] & 0x1f) | uVar1 >> (0x20U - arg_ch[5] & 0x1f);\n    var_8h = (*((uVar1 >> 8 & 0xff) * 4 + -0x7aff19a8) + *((uVar1 & 0xff) * 4 + -0x7aff15a8) ^\n             *((uVar1 >> 0x18) * 4 + -0x7aff11a8)) - *((uVar1 >> 0x10 & 0xff) * 4 + -0x7aff0da8) ^ var_8h;\n    uVar1 = arg_ch[6] + var_8h;\n    uVar1 = uVar1 << (arg_ch[7] & 0x1f) | uVar1 >> (0x20U - arg_ch[7] & 0x1f);\n    var_ch = ((*((uVar1 >> 8 & 0xff) * 4 + -0x7aff19a8) ^ *((uVar1 & 0xff) * 4 + -0x7aff15a8)) -\n             *((uVar1 >> 0x18) * 4 + -0x7aff11a8)) + *((uVar1 >> 0x10 & 0xff) * 4 + -0x7aff0da8) ^ var_ch;\n    uVar1 = arg_ch[8] ^ var_ch;\n    uVar1 = uVar1 << (arg_ch[9] & 0x1f) | uVar1 >> (0x20U - arg_ch[9] & 0x1f);\n    var_8h = (*((uVar1 >> 8 & 0xff) * 4 + -0x7aff19a8) - *((uVar1 & 0xff) * 4 + -0x7aff15a8)) +\n             *((uVar1 >> 0x18) * 4 + -0x7aff11a8) ^ *((uVar1 >> 0x10 & 0xff) * 4 + -0x7aff0da8) ^ var_8h;\n    uVar1 = arg_ch[10] - var_8h;\n    uVar1 = uVar1 << (arg_ch[0xb] & 0x1f) | uVar1 >> (0x20U - arg_ch[0xb] & 0x1f);\n    var_ch = (*((uVar1 >> 8 & 0xff) * 4 + -0x7aff19a8) + *((uVar1 & 0xff) * 4 + -0x7aff15a8) ^\n             *((uVar1 >> 0x18) * 4 + -0x7aff11a8)) - *((uVar1 >> 0x10 & 0xff) * 4 + -0x7aff0da8) ^ var_ch;\n    uVar1 = arg_ch[0xc] + var_ch;\n    uVar1 = uVar1 << (arg_ch[0xd] & 0x1f) | uVar1 >> (0x20U - arg_ch[0xd] & 0x1f);\n    var_8h = ((*((uVar1 >> 8 & 0xff) * 4 + -0x7aff19a8) ^ *((uVar1 & 0xff) * 4 + -0x7aff15a8)) -\n             *((uVar1 >> 0x18) * 4 + -0x7aff11a8)) + *((uVar1 >> 0x10 & 0xff) * 4 + -0x7aff0da8) ^ var_8h;\n    uVar1 = arg_ch[0xe] ^ var_8h;\n    uVar1 = uVar1 << (arg_ch[0xf] & 0x1f) | uVar1 >> (0x20U - arg_ch[0xf] & 0x1f);\n    var_ch = (*((uVar1 >> 8 & 0xff) * 4 + -0x7aff19a8) - *((uVar1 & 0xff) * 4 + -0x7aff15a8)) +\n             *((uVar1 >> 0x18) * 4 + -0x7aff11a8) ^ *((uVar1 >> 0x10 & 0xff) * 4 + -0x7aff0da8) ^ var_ch;\n    uVar1 = arg_ch[0x10] - var_ch;\n    uVar1 = uVar1 << (arg_ch[0x11] & 0x1f) | uVar1 >> (0x20U - arg_ch[0x11] & 0x1f);\n    var_8h = (*((uVar1 >> 8 & 0xff) * 4 + -0x7aff19a8) + *((uVar1 & 0xff) * 4 + -0x7aff15a8) ^\n             *((uVar1 >> 0x18) * 4 + -0x7aff11a8)) - *((uVar1 >> 0x10 & 0xff) * 4 + -0x7aff0da8) ^ var_8h;\n    uVar1 = arg_ch[0x12] + var_8h;\n    uVar1 = uVar1 << (arg_ch[0x13] & 0x1f) | uVar1 >> (0x20U - arg_ch[0x13] & 0x1f);\n    var_ch = ((*((uVar1 >> 8 & 0xff) * 4 + -0x7aff19a8) ^ *((uVar1 & 0xff) * 4 + -0x7aff15a8)) -\n             *((uVar1 >> 0x18) * 4 + -0x7aff11a8)) + *((uVar1 >> 0x10 & 0xff) * 4 + -0x7aff0da8) ^ var_ch;\n    uVar1 = arg_ch[0x14] ^ var_ch;\n    uVar1 = uVar1 << (arg_ch[0x15] & 0x1f) | uVar1 >> (0x20U - arg_ch[0x15] & 0x1f);\n    var_8h = (*((uVar1 >> 8 & 0xff) * 4 + -0x7aff19a8) - *((uVar1 & 0xff) * 4 + -0x7aff15a8)) +\n             *((uVar1 >> 0x18) * 4 + -0x7aff11a8) ^ *((uVar1 >> 0x10 & 0xff) * 4 + -0x7aff0da8) ^ var_8h;\n    uVar1 = arg_ch[0x16] - var_8h << (arg_ch[0x17] & 0x1f) | arg_ch[0x16] - var_8h >> (0x20U - arg_ch[0x17] & 0x1f);\n    var_ch = (*((uVar1 >> 8 & 0xff) * 4 + -0x7aff19a8) + *((uVar1 & 0xff) * 4 + -0x7aff15a8) ^\n             *((uVar1 >> 0x18) * 4 + -0x7aff11a8)) - *((uVar1 >> 0x10 & 0xff) * 4 + -0x7aff0da8) ^ var_ch;\n    if (arg_ch[0x20] == 0) {\n        uVar1 = arg_ch[0x18] + var_ch << (arg_ch[0x19] & 0x1f) | arg_ch[0x18] + var_ch >> (0x20U - arg_ch[0x19] & 0x1f);\n        var_8h = ((*((uVar1 >> 8 & 0xff) * 4 + -0x7aff19a8) ^ *((uVar1 & 0xff) * 4 + -0x7aff15a8)) -\n                 *((uVar1 >> 0x18) * 4 + -0x7aff11a8)) + *((uVar1 >> 0x10 & 0xff) * 4 + -0x7aff0da8) ^ var_8h;\n        uVar1 = arg_ch[0x1a] ^ var_8h;\n        uVar1 = uVar1 << (arg_ch[0x1b] & 0x1f) | uVar1 >> (0x20U - arg_ch[0x1b] & 0x1f);\n        var_ch = (*((uVar1 >> 8 & 0xff) * 4 + -0x7aff19a8) - *((uVar1 & 0xff) * 4 + -0x7aff15a8)) +\n                 *((uVar1 >> 0x18) * 4 + -0x7aff11a8) ^ *((uVar1 >> 0x10 & 0xff) * 4 + -0x7aff0da8) ^ var_ch;\n        uVar1 = arg_ch[0x1c] - var_ch;\n        uVar1 = uVar1 << (arg_ch[0x1d] & 0x1f) | uVar1 >> (0x20U - arg_ch[0x1d] & 0x1f);\n        var_8h = (*((uVar1 >> 8 & 0xff) * 4 + -0x7aff19a8) + *((uVar1 & 0xff) * 4 + -0x7aff15a8) ^\n                 *((uVar1 >> 0x18) * 4 + -0x7aff11a8)) - *((uVar1 >> 0x10 & 0xff) * 4 + -0x7aff0da8) ^ var_8h;\n        uVar1 = arg_ch[0x1e] + var_8h << (arg_ch[0x1f] & 0x1f) | arg_ch[0x1e] + var_8h >> (0x20U - arg_ch[0x1f] & 0x1f);\n        var_ch = ((*((uVar1 >> 8 & 0xff) * 4 + -0x7aff19a8) ^ *((uVar1 & 0xff) * 4 + -0x7aff15a8)) -\n                 *((uVar1 >> 0x18) * 4 + -0x7aff11a8)) + *((uVar1 >> 0x10 & 0xff) * 4 + -0x7aff0da8) ^ var_ch;\n    }\n    arg_8h[1] = var_8h;\n    *arg_8h = var_ch;\n    return;\n}\n",
        "token_count": 3367
    },
    "00030910": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00030910(uint32_t *arg_8h, int32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint var_110h;\n    uint var_10ch;\n    uint var_108h;\n    uint var_104h;\n    uint var_100h;\n    uint var_fch;\n    uint var_f8h;\n    uint var_f4h;\n    uint var_f0h;\n    uint var_ech;\n    uint var_e8h;\n    uint var_e4h;\n    uint var_e0h;\n    uint var_dch;\n    uint var_d8h;\n    uint var_d4h;\n    uint var_d0h;\n    uint var_cch;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    var_8h = *arg_8h;\n    var_ch = arg_8h[1];\n    if (arg_ch[0x20] == 0) {\n        uVar4 = arg_ch[0x1e] + var_ch << (arg_ch[0x1f] & 0x1f) | arg_ch[0x1e] + var_ch >> (0x20U - arg_ch[0x1f] & 0x1f);\n        var_8h = ((*((uVar4 >> 8 & 0xff) * 4 + -0x7aff19a8) ^ *((uVar4 & 0xff) * 4 + -0x7aff15a8)) -\n                 *((uVar4 >> 0x18) * 4 + -0x7aff11a8)) + *((uVar4 >> 0x10 & 0xff) * 4 + -0x7aff0da8) ^ var_8h;\n        uVar4 = arg_ch[0x1c] - var_8h;\n        uVar4 = uVar4 << (arg_ch[0x1d] & 0x1f) | uVar4 >> (0x20U - arg_ch[0x1d] & 0x1f);\n        var_ch = (*((uVar4 >> 8 & 0xff) * 4 + -0x7aff19a8) + *((uVar4 & 0xff) * 4 + -0x7aff15a8) ^\n                 *((uVar4 >> 0x18) * 4 + -0x7aff11a8)) - *((uVar4 >> 0x10 & 0xff) * 4 + -0x7aff0da8) ^ var_ch;\n        uVar4 = arg_ch[0x1a] ^ var_ch;\n        uVar4 = uVar4 << (arg_ch[0x1b] & 0x1f) | uVar4 >> (0x20U - arg_ch[0x1b] & 0x1f);\n        var_8h = (*((uVar4 >> 8 & 0xff) * 4 + -0x7aff19a8) - *((uVar4 & 0xff) * 4 + -0x7aff15a8)) +\n                 *((uVar4 >> 0x18) * 4 + -0x7aff11a8) ^ *((uVar4 >> 0x10 & 0xff) * 4 + -0x7aff0da8) ^ var_8h;\n        uVar4 = arg_ch[0x18] + var_8h << (arg_ch[0x19] & 0x1f) | arg_ch[0x18] + var_8h >> (0x20U - arg_ch[0x19] & 0x1f);\n        var_ch = ((*((uVar4 >> 8 & 0xff) * 4 + -0x7aff19a8) ^ *((uVar4 & 0xff) * 4 + -0x7aff15a8)) -\n                 *((uVar4 >> 0x18) * 4 + -0x7aff11a8)) + *((uVar4 >> 0x10 & 0xff) * 4 + -0x7aff0da8) ^ var_ch;\n    }\n    uVar4 = arg_ch[0x16] - var_ch << (arg_ch[0x17] & 0x1f) | arg_ch[0x16] - var_ch >> (0x20U - arg_ch[0x17] & 0x1f);\n    var_8h = (*((uVar4 >> 8 & 0xff) * 4 + -0x7aff19a8) + *((uVar4 & 0xff) * 4 + -0x7aff15a8) ^\n             *((uVar4 >> 0x18) * 4 + -0x7aff11a8)) - *((uVar4 >> 0x10 & 0xff) * 4 + -0x7aff0da8) ^ var_8h;\n    uVar4 = arg_ch[0x14] ^ var_8h;\n    uVar4 = uVar4 << (arg_ch[0x15] & 0x1f) | uVar4 >> (0x20U - arg_ch[0x15] & 0x1f);\n    var_ch = (*((uVar4 >> 8 & 0xff) * 4 + -0x7aff19a8) - *((uVar4 & 0xff) * 4 + -0x7aff15a8)) +\n             *((uVar4 >> 0x18) * 4 + -0x7aff11a8) ^ *((uVar4 >> 0x10 & 0xff) * 4 + -0x7aff0da8) ^ var_ch;\n    uVar4 = arg_ch[0x12] + var_ch;\n    uVar4 = uVar4 << (arg_ch[0x13] & 0x1f) | uVar4 >> (0x20U - arg_ch[0x13] & 0x1f);\n    var_8h = ((*((uVar4 >> 8 & 0xff) * 4 + -0x7aff19a8) ^ *((uVar4 & 0xff) * 4 + -0x7aff15a8)) -\n             *((uVar4 >> 0x18) * 4 + -0x7aff11a8)) + *((uVar4 >> 0x10 & 0xff) * 4 + -0x7aff0da8) ^ var_8h;\n    uVar4 = arg_ch[0x10] - var_8h;\n    uVar4 = uVar4 << (arg_ch[0x11] & 0x1f) | uVar4 >> (0x20U - arg_ch[0x11] & 0x1f);\n    var_ch = (*((uVar4 >> 8 & 0xff) * 4 + -0x7aff19a8) + *((uVar4 & 0xff) * 4 + -0x7aff15a8) ^\n             *((uVar4 >> 0x18) * 4 + -0x7aff11a8)) - *((uVar4 >> 0x10 & 0xff) * 4 + -0x7aff0da8) ^ var_ch;\n    uVar4 = arg_ch[0xe] ^ var_ch;\n    uVar4 = uVar4 << (arg_ch[0xf] & 0x1f) | uVar4 >> (0x20U - arg_ch[0xf] & 0x1f);\n    var_8h = (*((uVar4 >> 8 & 0xff) * 4 + -0x7aff19a8) - *((uVar4 & 0xff) * 4 + -0x7aff15a8)) +\n             *((uVar4 >> 0x18) * 4 + -0x7aff11a8) ^ *((uVar4 >> 0x10 & 0xff) * 4 + -0x7aff0da8) ^ var_8h;\n    uVar4 = arg_ch[0xc] + var_8h;\n    uVar4 = uVar4 << (arg_ch[0xd] & 0x1f) | uVar4 >> (0x20U - arg_ch[0xd] & 0x1f);\n    var_ch = ((*((uVar4 >> 8 & 0xff) * 4 + -0x7aff19a8) ^ *((uVar4 & 0xff) * 4 + -0x7aff15a8)) -\n             *((uVar4 >> 0x18) * 4 + -0x7aff11a8)) + *((uVar4 >> 0x10 & 0xff) * 4 + -0x7aff0da8) ^ var_ch;\n    uVar4 = arg_ch[10] - var_ch;\n    uVar4 = uVar4 << (arg_ch[0xb] & 0x1f) | uVar4 >> (0x20U - arg_ch[0xb] & 0x1f);\n    var_8h = (*((uVar4 >> 8 & 0xff) * 4 + -0x7aff19a8) + *((uVar4 & 0xff) * 4 + -0x7aff15a8) ^\n             *((uVar4 >> 0x18) * 4 + -0x7aff11a8)) - *((uVar4 >> 0x10 & 0xff) * 4 + -0x7aff0da8) ^ var_8h;\n    uVar4 = arg_ch[8] ^ var_8h;\n    uVar4 = uVar4 << (arg_ch[9] & 0x1f) | uVar4 >> (0x20U - arg_ch[9] & 0x1f);\n    var_ch = (*((uVar4 >> 8 & 0xff) * 4 + -0x7aff19a8) - *((uVar4 & 0xff) * 4 + -0x7aff15a8)) +\n             *((uVar4 >> 0x18) * 4 + -0x7aff11a8) ^ *((uVar4 >> 0x10 & 0xff) * 4 + -0x7aff0da8) ^ var_ch;\n    uVar4 = arg_ch[6] + var_ch;\n    uVar4 = uVar4 << (arg_ch[7] & 0x1f) | uVar4 >> (0x20U - arg_ch[7] & 0x1f);\n    var_8h = ((*((uVar4 >> 8 & 0xff) * 4 + -0x7aff19a8) ^ *((uVar4 & 0xff) * 4 + -0x7aff15a8)) -\n             *((uVar4 >> 0x18) * 4 + -0x7aff11a8)) + *((uVar4 >> 0x10 & 0xff) * 4 + -0x7aff0da8) ^ var_8h;\n    uVar4 = arg_ch[4] - var_8h;\n    uVar4 = uVar4 << (arg_ch[5] & 0x1f) | uVar4 >> (0x20U - arg_ch[5] & 0x1f);\n    var_ch = (*((uVar4 >> 8 & 0xff) * 4 + -0x7aff19a8) + *((uVar4 & 0xff) * 4 + -0x7aff15a8) ^\n             *((uVar4 >> 0x18) * 4 + -0x7aff11a8)) - *((uVar4 >> 0x10 & 0xff) * 4 + -0x7aff0da8) ^ var_ch;\n    uVar4 = arg_ch[2] ^ var_ch;\n    uVar4 = uVar4 << (arg_ch[3] & 0x1f) | uVar4 >> (0x20U - arg_ch[3] & 0x1f);\n    var_8h = (*((uVar4 >> 8 & 0xff) * 4 + -0x7aff19a8) - *((uVar4 & 0xff) * 4 + -0x7aff15a8)) +\n             *((uVar4 >> 0x18) * 4 + -0x7aff11a8) ^ *((uVar4 >> 0x10 & 0xff) * 4 + -0x7aff0da8) ^ var_8h;\n    uVar4 = *arg_ch + var_8h;\n    uVar5 = uVar4 << (arg_ch[1] & 0x1f) | uVar4 >> (0x20U - arg_ch[1] & 0x1f);\n    uVar4 = *((uVar5 >> 8 & 0xff) * 4 + -0x7aff19a8);\n    uVar1 = *((uVar5 & 0xff) * 4 + -0x7aff15a8);\n    iVar2 = *((uVar5 >> 0x18) * 4 + -0x7aff11a8);\n    iVar3 = *((uVar5 >> 0x10 & 0xff) * 4 + -0x7aff0da8);\n    arg_8h[1] = var_8h;\n    *arg_8h = ((uVar4 ^ uVar1) - iVar2) + iVar3 ^ var_ch;\n    return;\n}\n",
        "token_count": 3430
    },
    "00031360": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Switch with 1 destination removed at 0x00031646\n// WARNING: Switch with 1 destination removed at 0x00031c63\n\nvoid __cdecl\nfcn.00031360(uint8_t *arg_8h, uchar *arg_ch, int32_t arg_10h, uint arg_14h, uint8_t *arg_18h, int32_t arg_1ch)\n\n{\n    uint8_t uVar1;\n    uint8_t *puVar2;\n    uint8_t *puVar3;\n    uint8_t *puVar4;\n    uint8_t *puVar5;\n    uint8_t *puVar6;\n    uint8_t *puVar7;\n    uint8_t *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    uint var_20h;\n    uint32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    if (arg_1ch == 0) {\n        var_1ch = arg_18h[7] | arg_18h[6] << 8 | arg_18h[5] << 0x10 | arg_18h[4] << 0x18;\n        var_4h = arg_18h[3] | arg_18h[2] << 8 | arg_18h[1] << 0x10 | *arg_18h << 0x18;\n        for (var_24h = arg_10h + -8; -1 < var_24h; var_24h = var_24h + -8) {\n            uVar9 = arg_8h[3] | arg_8h[2] << 8 | arg_8h[1] << 0x10 | *arg_8h << 0x18;\n            uVar10 = arg_8h[7] | arg_8h[6] << 8 | arg_8h[5] << 0x10 | arg_8h[4] << 0x18;\n            arg_8h = arg_8h + 8;\n            var_14h = uVar9;\n            var_10h = uVar10;\n            fcn.00030910(&var_14h, arg_14h);\n            var_ch = var_14h ^ var_4h;\n            var_8h = var_10h ^ var_1ch;\n            *arg_ch = var_ch >> 0x18;\n            arg_ch[1] = var_ch >> 0x10;\n            arg_ch[2] = var_ch >> 8;\n            arg_ch[3] = var_ch;\n            arg_ch[4] = var_8h >> 0x18;\n            arg_ch[5] = var_8h >> 0x10;\n            arg_ch[6] = var_8h >> 8;\n            arg_ch[7] = var_8h;\n            arg_ch = arg_ch + 8;\n            var_1ch = uVar10;\n            var_4h = uVar9;\n        }\n        if (var_24h != -8) {\n            uVar9 = arg_8h[3] | arg_8h[2] << 8 | arg_8h[1] << 0x10 | *arg_8h << 0x18;\n            var_1ch = arg_8h[7] | arg_8h[6] << 8 | arg_8h[5] << 0x10 | arg_8h[4] << 0x18;\n            var_14h = uVar9;\n            var_10h = var_1ch;\n            fcn.00030910(&var_14h, arg_14h);\n            var_4h = uVar9;\n            if (var_24h + 7U < 8) {\n                return;\n            }\n        }\n        *arg_18h = var_4h >> 0x18;\n        arg_18h[1] = var_4h >> 0x10;\n        arg_18h[2] = var_4h >> 8;\n        arg_18h[3] = var_4h;\n        arg_18h[4] = var_1ch >> 0x18;\n        arg_18h[5] = var_1ch >> 0x10;\n        arg_18h[6] = var_1ch >> 8;\n        arg_18h[7] = var_1ch;\n    }\n    else {\n        var_ch = arg_18h[3] | arg_18h[2] << 8 | arg_18h[1] << 0x10 | *arg_18h << 0x18;\n        var_8h = arg_18h[7] | arg_18h[6] << 8 | arg_18h[5] << 0x10 | arg_18h[4] << 0x18;\n        for (var_24h = arg_10h + -8; -1 < var_24h; var_24h = var_24h + -8) {\n            uVar1 = *arg_8h;\n            puVar2 = arg_8h + 1;\n            puVar3 = arg_8h + 2;\n            puVar4 = arg_8h + 3;\n            puVar5 = arg_8h + 4;\n            puVar6 = arg_8h + 5;\n            puVar7 = arg_8h + 6;\n            puVar8 = arg_8h + 7;\n            arg_8h = arg_8h + 8;\n            var_14h = (*puVar4 | *puVar3 << 8 | *puVar2 << 0x10 | uVar1 << 0x18) ^ var_ch;\n            var_10h = (*puVar8 | *puVar7 << 8 | *puVar6 << 0x10 | *puVar5 << 0x18) ^ var_8h;\n            fcn.0002fed0(&var_14h, arg_14h);\n            var_ch = var_14h;\n            var_8h = var_10h;\n            *arg_ch = var_14h >> 0x18;\n            arg_ch[1] = var_14h >> 0x10;\n            arg_ch[2] = var_14h >> 8;\n            arg_ch[3] = var_14h;\n            arg_ch[4] = var_10h >> 0x18;\n            arg_ch[5] = var_10h >> 0x10;\n            arg_ch[6] = var_10h >> 8;\n            arg_ch[7] = var_10h;\n            arg_ch = arg_ch + 8;\n        }\n        if (var_24h != -8) {\n            if (var_24h + 7U < 8) {\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n            var_14h = var_ch;\n            var_10h = var_8h;\n            fcn.0002fed0(&var_14h, arg_14h);\n            var_ch = var_14h;\n            var_8h = var_10h;\n            *arg_ch = var_14h >> 0x18;\n            arg_ch[1] = var_14h >> 0x10;\n            arg_ch[2] = var_14h >> 8;\n            arg_ch[3] = var_14h;\n            arg_ch[4] = var_10h >> 0x18;\n            arg_ch[5] = var_10h >> 0x10;\n            arg_ch[6] = var_10h >> 8;\n            arg_ch[7] = var_10h;\n        }\n        *arg_18h = var_ch >> 0x18;\n        arg_18h[1] = var_ch >> 0x10;\n        arg_18h[2] = var_ch >> 8;\n        arg_18h[3] = var_ch;\n        arg_18h[4] = var_8h >> 0x18;\n        arg_18h[5] = var_8h >> 0x10;\n        arg_18h[6] = var_8h >> 8;\n        arg_18h[7] = var_8h;\n    }\n    return;\n}\n",
        "token_count": 1982
    },
    "00032db0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00032db0(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t extraout_EDX;\n    uint *arg_8h_00;\n    uint *noname_0;\n    int32_t var_ddh;\n    uint var_d8h;\n    uint var_d4h;\n    uint *var_d0h;\n    uint var_cch;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint32_t var_b8h;\n    uint *var_b4h;\n    uint var_b0h;\n    uint var_a8h;\n    \n    if (*0x850928f4 == '\\0') {\n        if (*0x85092618 == 0) {\n            *NULL = -0x3fffffff;\n        }\n        else {\n            fcn.00032da0(0x85092928);\n            (**0x8500d0d4)(0x8509292c, 1, 0);\n            fcn.00032d80(0x85092920);\n            noname_0 = extraout_EDX & 0xffffff00 | arg_8h & 0xff;\n            *NULL = fcn.000346b0(noname_0, &var_ddh);\n            if (*NULL == 0) {\n                fcn.0002c250(&var_a8h, 0x52);\n                fcn.0007f6d0(&var_c0h, &var_a8h);\n                *NULL = (**0x8500d1a8)(*0x85092618, 0, &var_c0h, 7, 1, 0, 0x85092918);\n                if ((*NULL == 0) && (noname_0 = *0x85092918,  *NULL = fcn.00034640(*0x85092918),  *NULL == 0)) {\n                    (*0x85092918)[7] = (*0x85092918)[7] | 0x10;\n                    (*0x85092918)[7] = (*0x85092918)[7] & 0xffffff7f;\n                    noname_0 = *0x85092918;\n                    *NULL = fcn.00016250(*0x85092918, 0x8502f330, 0);\n                    if (*NULL == 0) {\n                        var_d8h = 0x18;\n                        var_d4h = 0;\n                        var_cch = 0;\n                        var_d0h = NULL;\n                        var_c8h = 0;\n                        var_c4h = 0;\n                        fcn.0002c560(0x85092910);\n                        noname_0 = 0x850928fc;\n                        *NULL = fcn.0007f826();\n                        if (*NULL == 0) {\n                            var_b8h = *0x85092910;\n                            noname_0 = *0x850928fc;\n                            *NULL = fcn.0007f814();\n                            if (*NULL == 0) {\n                                *0x85092910 = var_b8h;\n                                *0x85092914 = 0;\n                                arg_8h_00 = &var_a8h;\n                                fcn.0002c280(arg_8h_00, 0x52);\n                                fcn.0007f6d0(&var_c0h, &var_a8h);\n                                *NULL = (**0x8500d1a8)(*0x85092618, 0, &var_c0h, 7, 1, 0, 0x8509291c);\n                                if ((*NULL == 0) &&\n                                   (noname_0 = *0x8509291c,  *NULL = fcn.00034640(*0x8509291c),  *NULL == 0)) {\n                                    (*0x8509291c)[7] = (*0x8509291c)[7] | 0x10;\n                                    (*0x8509291c)[7] = (*0x8509291c)[7] & 0xffffff7f;\n                                    noname_0 = *0x8509291c;\n                                    *NULL = fcn.00016250(*0x8509291c, 0x8502f330, 0);\n                                    if (*NULL == 0) {\n                                        fcn.00034990(1, *0x85092910, 2, *0x85092910 >> 0xf, 0x20, 0x200);\n                                        *0x850928f5 = 0;\n                                        noname_0 = 0x8509293c;\n                                        *NULL = fcn.0001a700(0x8509293c, 0x850301d0, 0);\n                                        if (*NULL == 0) {\n                                            *0x850928f4 = '\\x01';\n                                            if (var_ddh == '\\0') {\n                                                fcn.0002c250(&var_a8h, 0x52);\n                                                fcn.0007f6d0(&var_c0h, &var_a8h);\n                                                var_d8h = 0x18;\n                                                var_d4h = 0;\n                                                var_cch = 0x40;\n                                                var_d0h = &var_c0h;\n                                                var_c8h = 0;\n                                                var_c4h = 0;\n                                                noname_0 = &var_b4h;\n                                                iVar1 = fcn.0007f6ee(arg_8h_00, 0x80000000, &var_d8h, &var_b0h, 7, 0);\n                                                if (iVar1 == 0) {\n                                                    fcn.0007f6c4();\n                                                    noname_0 = var_b4h;\n                                                }\n                                                else {\n                                                    var_ddh._0_1_ = '\\x01';\n                                                }\n                                            }\n                                            if (var_ddh != '\\0') {\n                                                noname_0 = NULL;\n                                                fcn.00034990(0, *0x85092908, 2, *0x85092908 >> 0xf, 0x20, 0x200);\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if (stack0xffffff20 != 0) {\n                if (*0x85092918 != NULL) {\n                    (**0x8500d184)(*0x85092918, noname_0);\n                    fcn.00016300(*0x85092918);\n                    *0x85092918 = NULL;\n                }\n                if (*0x8509291c != NULL) {\n                    (**0x8500d184)(*0x8509291c);\n                    fcn.00016300(*0x8509291c);\n                    *0x8509291c = NULL;\n                }\n                if (*0x85092904 != 0) {\n                    fcn.0007f820(0xffffffff, *0x85092904);\n                    *0x85092904 = 0;\n                }\n                if (*0x850928fc != NULL) {\n                    fcn.0007f6c4(*0x850928fc);\n                    *0x850928fc = NULL;\n                }\n            }\n        }\n    }\n    else {\n        *NULL = 0;\n    }\n    return *NULL;\n}\n",
        "token_count": 1634
    },
    "00033ab0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00033ab0(int32_t *arg_8h)\n\n{\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    do {\n        if (1 < var_8h) {\n            return 0;\n        }\n        if (((*(var_8h * 4 + -0x7af6d6e8) != 0) && (*(*(var_8h * 4 + -0x7af6d6e8) + 0x24) != 0)) &&\n           (*(*(*(var_8h * 4 + -0x7af6d6e8) + 0x24) + 8) != 0)) {\n            for (var_4h = *(*(*(var_8h * 4 + -0x7af6d6e8) + 0x24) + 8); *(var_4h + 0x10) != 0; var_4h = *(var_4h + 0x10)\n                ) {\n                if (*arg_8h == *(var_4h + 0x10)) {\n                    *arg_8h = var_4h;\n                    return 1;\n                }\n            }\n        }\n        var_8h = var_8h + 1;\n    } while( true );\n}\n",
        "token_count": 305
    },
    "00033b50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t fcn.00033b50(int32_t *param_1, char param_2, uint *param_3, uint *param_4)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint16_t uVar5;\n    uint32_t *in_FS_OFFSET;\n    uint var_18h;\n    int32_t *var_8h;\n    uint var_ch;\n    uint *var_10h_2;\n    uint *var_14h;\n    uint var_94h;\n    uint var_8ch;\n    uint *var_88h;\n    uint var_82h;\n    uint var_78h;\n    uint *var_74h;\n    uint var_70h;\n    uint var_68h;\n    uint *var_64h;\n    uint var_60h;\n    uint var_58h;\n    uint *var_54h;\n    uint var_50h;\n    uint var_48h;\n    uint *var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint *var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint32_t var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_19h;\n    uint32_t var_10h;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x8507b9f8;\n    uStack16 = 0x8507b910;\n    uVar2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_10h;\n    var_28h = 0;\n    var_34h = NULL;\n    var_19h._0_1_ = 0;\n    var_10h = uVar2;\n    if (*0x85092944 == NULL) {\n        *0x85092944 = fcn.00036330(0xa28);\n        if (*0x85092944 == NULL) {\n            uVar2 = 0;\n            goto code_r0x00034175;\n        }\n        *0x850905f0 = *0x85092944 + 0x82;\n        *0x850905e4 = *0x85092944 + 0x104;\n        *0x850905d0 = *0x85092944 + 0x186;\n        puVar3 = *0x85092944 + 0x208;\n        *0x850905dc = *0x85092944;\n        fcn.0002c250(*0x85092944, 0x104);\n        fcn.0002c280(*0x850905f0, 0x104);\n        fcn.0002c1c0(puVar3, 0x104);\n        fcn.0007f736(*0x850905e4, 0x8500d6b4, puVar3);\n        fcn.0002c1f0(puVar3, 0x104);\n        fcn.0007f736(*0x850905d0, 0x8500d6b4, puVar3);\n        var_44h = *0x850905dc;\n        do {\n            uVar5 = *var_44h;\n            var_44h = var_44h + 2;\n        } while (uVar5 != 0);\n        *0x850905d4 = (var_44h - (*0x850905dc + 2) >> 1) << 1;\n        var_54h = *0x850905f0;\n        do {\n            uVar5 = *var_54h;\n            var_54h = var_54h + 2;\n        } while (uVar5 != 0);\n        *0x850905d8 = (var_54h - (*0x850905f0 + 2) >> 1) << 1;\n        var_64h = *0x850905e4;\n        do {\n            uVar5 = *var_64h;\n            var_64h = var_64h + 2;\n        } while (uVar5 != 0);\n        *0x850905e8 = (var_64h - (*0x850905e4 + 2) >> 1) << 1;\n        var_74h = *0x850905d0;\n        do {\n            uVar5 = *var_74h;\n            var_74h = var_74h + 2;\n        } while (uVar5 != 0);\n        uVar2 = (var_74h - (*0x850905d0 + 2) >> 1) << 1;\n        *0x850905e0 = uVar2;\n    }\n    *var_14h = 0;\n    var_4h = 0;\n    if (var_8h == NULL) {\n        uVar2 = uVar2 & 0xffffff00;\n        goto code_r0x00034175;\n    }\n    if (var_ch != '\\0') {\n        uVar2 = (**0x8500d2e0)(var_8h, 0x18, 4);\n    }\n    if (*var_8h == 0x18) {\n        uVar2 = var_8h[3] & 0xfffff80d;\n        if (uVar2 == 0) {\n            puVar3 = var_8h[2];\n            if (puVar3 == NULL) {\n                uVar2 = var_8h[3] & 0xfffff800;\n                goto code_r0x00034175;\n            }\n            if (var_ch == '\\0') {\n                uVar1 = puVar3[1];\n                *var_10h_2 = *puVar3;\n                var_10h_2[1] = uVar1;\n            }\n            else {\n                if (puVar3 < **0x8500d194) {\n                    var_40h = *puVar3;\n                    var_3ch = puVar3[1];\n                }\n                else {\n                    var_40h = ***0x8500d194;\n                    var_3ch = (**0x8500d194)[1];\n                }\n                *var_10h_2 = var_40h;\n                var_10h_2[1] = var_3ch;\n                (**0x8500d2e0)(var_10h_2[1], *var_10h_2, 2);\n            }\n            uVar5 = *var_10h_2;\n            puVar3 = var_10h_2;\n            if (((uVar5 & 1) != 0) || (puVar3 = uVar5,  puVar3 == 0xfffe)) {\n                uVar2 = puVar3 & 0xffffff00;\n                goto code_r0x00034175;\n            }\n            if ((uVar5 == *0x850905d4) ||\n               ((*0x850905d4 < uVar5 && (puVar3 = *(var_10h_2[1] + (*0x850905d4 & 0xfffffffe)),  puVar3 == 0x5c)))) {\n                puVar3 = fcn.00037140(var_10h_2[1], *0x850905dc, *0x850905d4 >> 1);\n                if (puVar3 != NULL) goto code_r0x00033f12;\n                var_28h = *0x850905d4;\n                var_34h = *0x850905dc;\n                var_19h._0_1_ = 1;\n                puVar3 = *0x850905dc;\n            }\n            else {\ncode_r0x00033f12:\n                if ((uVar5 == *0x850905d8) ||\n                   ((*0x850905d8 < uVar5 && (puVar3 = *(var_10h_2[1] + (*0x850905d8 & 0xfffffffe)),  puVar3 == 0x5c))))\n                {\n                    puVar3 = fcn.00037140(var_10h_2[1], *0x850905f0, *0x850905d8 >> 1);\n                    if (puVar3 == NULL) {\n                        var_28h = *0x850905d8;\n                        var_34h = *0x850905f0;\n                        var_19h._0_1_ = 1;\n                        puVar3 = *0x850905f0;\n                        goto code_r0x0003404b;\n                    }\n                }\n                if ((uVar5 == *0x850905e8) ||\n                   ((*0x850905e8 < uVar5 && (puVar3 = *(var_10h_2[1] + (*0x850905e8 & 0xfffffffe)),  puVar3 == 0x5c))))\n                {\n                    puVar3 = fcn.00037140(var_10h_2[1], *0x850905e4, *0x850905e8 >> 1);\n                    if (puVar3 == NULL) {\n                        var_28h = *0x850905e8;\n                        var_34h = *0x850905dc;\n                        var_19h._0_1_ = 1;\n                        puVar3 = *0x850905dc;\n                        goto code_r0x0003404b;\n                    }\n                }\n                if ((uVar5 == *0x850905e0) ||\n                   ((*0x850905e0 < uVar5 && (puVar3 = *(var_10h_2[1] + (*0x850905e0 & 0xfffffffe)),  puVar3 == 0x5c))))\n                {\n                    puVar3 = fcn.00037140(var_10h_2[1], *0x850905d0, *0x850905e0 >> 1);\n                    if (puVar3 == NULL) {\n                        var_28h = *0x850905e0;\n                        var_34h = *0x850905f0;\n                        var_19h._0_1_ = 1;\n                        puVar3 = *0x850905f0;\n                    }\n                }\n            }\ncode_r0x0003404b:\n            if (var_19h != 0) {\n                var_88h = var_34h;\n                do {\n                    uVar5 = *var_88h;\n                    var_88h = var_88h + 2;\n                } while (uVar5 != 0);\n                var_94h._0_2_ = var_88h - (var_34h + 2) >> 1;\n                uVar5 = var_94h * 2;\n                *var_10h_2 = (*var_10h_2 - var_28h) + uVar5;\n                *(var_10h_2 + 2) = *var_10h_2;\n                iVar4 = fcn.00036330(*(var_10h_2 + 2));\n                if (iVar4 == 0) {\n                    *var_14h = 0xc000009a;\n                    uVar2 = var_19h;\n                    goto code_r0x00034175;\n                }\n                fcn.0007f904(iVar4, var_34h, uVar5);\n                fcn.0007f904(uVar5 + iVar4, var_10h_2[1] + var_28h, *var_10h_2 - uVar5);\n                var_10h_2[1] = iVar4;\n                puVar3 = var_10h_2;\n            }\n            uVar2 = puVar3 & 0xffffff00 | var_19h;\n            goto code_r0x00034175;\n        }\n    }\n    uVar2 = uVar2 & 0xffffff00;\ncode_r0x00034175:\n    *in_FS_OFFSET = var_10h;\n    return uVar2;\n}\n",
        "token_count": 2713
    },
    "000341d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.000341d0(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    while ((iVar1 = (**0x8500d19c)(0x8509292c, 0, 0, 0, 0),  iVar1 == 0 && (*0x850928f5 == '\\0'))) {\n        while (iVar1 = (**0x8500d190)(),  iVar1 != 0) {\n            uVar2 = fcn.00034250(iVar1 + -0x58);\n            *(iVar1 + -0x40) = uVar2;\n            (**0x8500d2ec)();\n        }\n    }\n    return 0;\n}\n",
        "token_count": 176
    },
    "00034250": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00034250(int32_t arg_8h)\n\n{\n    char cVar1;\n    int64_t iVar2;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    int32_t var_34h;\n    uint32_t var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    char *var_24h;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint32_t var_ch;\n    uint var_8h;\n    \n    var_24h = *(arg_8h + 0x60);\n    if (*(arg_8h + 0x24) == '\\0') {\n        var_1ch = *(var_24h + 0x14) != *0x85092918;\n        if (*(arg_8h + 4) == 0) {\n            var_28h = 0xc0000001;\n        }\n        else {\n            if ((*(*(arg_8h + 4) + 6) & 5) == 0) {\n                var_34h = (**0x8500d0e8)(*(arg_8h + 4), 0, 1, 0, 0, 0x10);\n            }\n            else {\n                var_34h = *(*(arg_8h + 4) + 0xc);\n            }\n            var_2ch = var_34h;\n            if (var_34h == 0) {\n                var_28h = 0xc000009a;\n            }\n            else {\n                if (*var_24h == '\\x03') {\n                    var_18h = *(var_24h + 0xc);\n                    var_14h = *(var_24h + 0x10);\n                    var_20h = *(var_24h + 4);\n                    iVar2 = fcn.0007f91c(var_18h, var_14h, 0x200, 0);\n                    if ((iVar2 != 0) || (var_20h % 0x200 != 0)) {\n                        return 0xc000000d;\n                    }\n                    var_ch = 0;\n                    while ((var_ch < var_20h &&\n                           (cVar1 = fcn.00034530(var_1ch, var_2ch + var_ch, var_18h + var_ch),  cVar1 != '\\0'))) {\n                        var_ch = var_ch + 0x200;\n                    }\n                    *(arg_8h + 0x1c) = var_ch;\n                }\n                else {\n                    var_18h = *(var_24h + 0xc);\n                    var_14h = *(var_24h + 0x10);\n                    var_30h = *(var_24h + 4);\n                    iVar2 = fcn.0007f91c(var_18h, var_14h, 0x200, 0);\n                    if ((iVar2 != 0) || (var_30h % 0x200 != 0)) {\n                        return 0xc000000d;\n                    }\n                    var_ch = 0;\n                    while ((var_ch < var_30h &&\n                           (cVar1 = fcn.00034480(var_1ch, var_2ch + var_ch, var_18h + var_ch),  cVar1 != '\\0'))) {\n                        var_ch = var_ch + 0x200;\n                    }\n                    var_2ch = *(var_1ch * 4 + -0x7af6d700) + var_18h;\n                    fcn.0007f81a(0xffffffff, &var_2ch, &var_30h, &var_8h);\n                    *(arg_8h + 0x1c) = var_ch;\n                }\n                var_28h = 0;\n            }\n        }\n    }\n    else {\n        var_28h = 0xc0000120;\n    }\n    return var_28h;\n}\n",
        "token_count": 913
    },
    "00034640": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00034640(int32_t arg_8h)\n\n{\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    \n    var_18h = fcn.0007f82c(&var_14h, 1);\n    if (var_18h == 0) {\n        var_1ch = 0x1f01ff;\n        var_28h = 0x120089;\n        var_24h = 0x120116;\n        var_20h = 0x1200a0;\n        var_2ch = 4;\n        var_18h = (**0x8500d1a0)(arg_8h, &var_2ch, &var_14h, arg_8h + 0x98, 1, &var_28h);\n    }\n    return var_18h;\n}\n",
        "token_count": 231
    },
    "000346b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.000346b0(uint noname_0, uchar *arg_ch)\n\n{\n    uint var_300h;\n    uint var_fah;\n    int32_t var_f4h;\n    uint var_f0h;\n    uint var_ech;\n    uint *var_e8h;\n    uint var_e4h;\n    uint var_e0h;\n    uint var_dch;\n    uint var_d8h;\n    uint var_d4h;\n    uint var_cch;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    int32_t var_5ch;\n    uint var_58h;\n    \n    fcn.0002c430(&var_c0h, 0x52);\n    fcn.0002c400(&var_58h, 0x52);\n    fcn.0007f6d6(&var_300h, 0x104, 0x85010800, &var_c0h, &var_58h);\n    var_fah._0_2_ = 0;\n    fcn.0007f6d0(&var_cch, &var_300h);\n    var_f0h = 0x18;\n    var_ech = 0;\n    var_e4h = 0x40;\n    var_e8h = &var_cch;\n    var_e0h = 0;\n    var_dch = 0;\n    fcn.0002c4c0(&var_d8h);\n    var_f4h = fcn.0001ed40(0x850905ec, 3, &var_f0h, &var_60h, &var_d8h, 0x80, 0, 3, 0x868, 0, 0);\n    if (var_f4h == 0) {\n        *(*0x8508fab0 + 0x18) = *0x850905ec;\n        if ((var_5ch == 2) || (var_5ch == 3)) {\n            var_68h = var_d8h;\n            var_64h = var_d4h;\n            var_f4h = fcn.0007f6dc(*0x850905ec, &var_60h, &var_68h, 8, 0x14);\n            if (var_f4h != 0) goto code_r0x000348c8;\n            *arg_ch = 1;\n        }\n        else {\n            *arg_ch = 0;\n        }\n        var_f0h = 0x18;\n        var_ech = 0;\n        var_e4h = 0;\n        var_e8h = NULL;\n        var_e0h = 0;\n        var_dch = 0;\n        var_f4h = fcn.0007f826();\n        if (var_f4h == 0) {\n            var_c4h = 0;\n            var_f4h = fcn.0007f814();\n            if (var_f4h == 0) {\n                *0x85092908 = var_c4h;\n                *0x8509290c = 0;\n            }\n        }\n    }\ncode_r0x000348c8:\n    if (var_f4h != 0) {\n        if (*0x85092900 != 0) {\n            fcn.0007f820(0xffffffff, *0x85092900);\n            *0x85092900 = 0;\n        }\n        if (*0x850928f8 != 0) {\n            fcn.0007f6c4(*0x850928f8);\n            *0x850928f8 = 0;\n        }\n        fcn.0007f6c4(*0x850905ec);\n        *0x850905ec = 0;\n    }\n    return var_f4h;\n}\n",
        "token_count": 877
    },
    "00034990": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl\nfcn.00034990(uint arg_8h, uint noname_1, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h, uint32_t arg_1ch)\n\n{\n    uchar uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint *puVar5;\n    uint var_58h;\n    uint var_4dh;\n    uchar var_49h;\n    uchar var_48h;\n    uchar var_47h;\n    uchar var_46h;\n    uchar var_45h;\n    uchar var_44h;\n    uchar var_43h;\n    uchar var_42h;\n    uchar var_41h;\n    uchar var_40h;\n    uchar var_3fh;\n    uchar var_3eh;\n    uchar var_3dh;\n    uchar var_3ch;\n    uchar var_3bh;\n    uchar var_3ah;\n    uchar var_39h;\n    uchar var_38h;\n    uchar var_37h;\n    uchar var_36h;\n    uchar var_35h;\n    uint var_34h;\n    uchar var_30h;\n    uchar var_2fh;\n    uchar var_2eh;\n    uint var_2dh;\n    uint var_29h;\n    uint var_25h;\n    uint var_1eh;\n    uint32_t var_18h;\n    uint *var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    var_14h = fcn.00036330(arg_1ch);\n    if (var_14h == NULL) {\n        uVar2 = 0;\n    }\n    else {\n        fcn.0007f916(&var_58h, 0, 0x3e);\n        var_58h._0_1_ = 0xeb;\n        var_4dh._0_1_ = arg_1ch;\n        var_4dh._1_1_ = arg_1ch >> 8;\n        iVar3 = arg_18h * arg_14h * arg_10h;\n        var_10h = iVar3 - 1;\n        var_18h = var_10h / 0xfff5;\n        if (var_18h < 0x81) {\n            if (var_18h < 0x41) {\n                if (var_18h < 0x21) {\n                    if (var_18h < 0x11) {\n                        if (var_18h < 9) {\n                            if (var_18h < 5) {\n                                if (var_18h < 3) {\n                                    if (var_18h < 2) {\n                                        var_18h = 1;\n                                    }\n                                    else {\n                                        var_18h = 2;\n                                    }\n                                }\n                                else {\n                                    var_18h = 4;\n                                }\n                            }\n                            else {\n                                var_18h = 8;\n                            }\n                        }\n                        else {\n                            var_18h = 0x10;\n                        }\n                    }\n                    else {\n                        var_18h = 0x20;\n                    }\n                }\n                else {\n                    var_18h = 0x40;\n                }\n            }\n            else {\n                var_18h = 0x80;\n            }\n            var_4dh._2_1_ = var_18h;\n            var_4dh._3_1_ = 2;\n            var_49h = 0;\n            var_8h = var_10h / var_18h;\n            var_48h = 2;\n            var_47h = 0;\n            var_46h = 2;\n            uVar1 = var_10h >> 8;\n            if (var_10h < 0x10000) {\n                var_45h = var_10h;\n                var_44h = uVar1;\n            }\n            var_43h = 0xf8;\n            var_ch = (((iVar3 + -3) - 0x4000 / arg_1ch) * 2) / (var_18h * arg_1ch + 4);\n            if ((((iVar3 + -3) - 0x4000 / arg_1ch) * 2) % (var_18h * arg_1ch + 4) != 0) {\n                var_ch = var_ch + 1;\n            }\n            var_42h = var_ch;\n            var_41h = var_ch >> 8;\n            var_40h = arg_18h;\n            var_3fh = arg_18h >> 8;\n            var_3eh = arg_10h;\n            var_3dh = arg_10h >> 8;\n            var_3ch = 1;\n            var_3bh = 0;\n            var_3ah = 0;\n            var_39h = 0;\n            if (0xffff < var_10h) {\n                var_36h = var_10h >> 0x10;\n                var_35h = var_10h >> 0x18;\n                var_38h = var_10h;\n                var_37h = uVar1;\n            }\n            var_34h._0_1_ = 0x80;\n            var_34h._2_1_ = 0x29;\n            var_34h._3_1_ = 0xe8;\n            var_30h = 0x99;\n            var_2fh = 0x9b;\n            var_2eh = 0xba;\n            var_2dh = *0x85010824;\n            var_29h = *0x85010828;\n            var_25h._0_2_ = *0x8501082c;\n            var_25h._2_1_ = *0x8501082e;\n            stack0xffffffda = *0x85010830;\n            var_1eh = *0x85010834;\n            fcn.0007f916(var_14h, 0, arg_1ch);\n            puVar4 = &var_58h;\n            puVar5 = var_14h;\n            for (iVar3 = 0xf; iVar3 != 0; iVar3 = iVar3 + -1) {\n                *puVar5 = *puVar4;\n                puVar4 = puVar4 + 1;\n                puVar5 = puVar5 + 1;\n            }\n            *puVar5 = *puVar4;\n            fcn.00034480(arg_8h, var_14h, 0);\n            fcn.0007f916(var_14h, 0, arg_1ch);\n            for (var_4h = 0; var_4h < var_ch << 1; var_4h = var_4h + 1) {\n                fcn.00034480(arg_8h, var_14h, var_4h * arg_1ch + arg_1ch * 2);\n            }\n            *var_14h = 0xf8;\n            *(var_14h + 1) = 0xff;\n            *(var_14h + 2) = 0xff;\n            *(var_14h + 3) = 0xff;\n            fcn.00034480(arg_8h, var_14h, arg_1ch << 1);\n            fcn.00034480(arg_8h, var_14h, var_ch * arg_1ch + arg_1ch * 2);\n            fcn.00036460(var_14h);\n            uVar2 = 1;\n        }\n        else {\n            fcn.00036460(var_14h);\n            uVar2 = 0;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 1750
    },
    "00034d00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00034d00(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00036360(0x10);\n    *arg_8h = iVar1;\n    iVar1 = *arg_8h;\n    if (iVar1 != 0) {\n        (**0x8500d0d4)(*arg_8h, 1, 0);\n    }\n    return iVar1 != 0;\n}\n",
        "token_count": 107
    },
    "00034d40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00034d40(int32_t *arg_8h, uint noname_1, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = fcn.00036360(0x10);\n    *arg_8h = iVar1;\n    if (*arg_8h == 0) {\n        uVar2 = 0;\n    }\n    else {\n        if (arg_10h == 0) {\n            (**0x8500d0d4)(*arg_8h, 1, 0);\n        }\n        else {\n            (**0x8500d0d4)(*arg_8h, 0, 0);\n        }\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 179
    },
    "00034d90": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00034d90(int32_t *arg_8h)\n\n{\n    if (*arg_8h != 0) {\n        fcn.00036460(*arg_8h);\n        *arg_8h = 0;\n    }\n    return;\n}\n",
        "token_count": 62
    },
    "00034dc0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00034dc0(int32_t *arg_8h)\n\n{\n    uint uVar1;\n    \n    if ((arg_8h == NULL) || (*arg_8h == 0)) {\n        uVar1 = 0;\n    }\n    else {\n        (**0x8500d0c8)(*arg_8h, 0, 0);\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 101
    },
    "00034df0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00034df0(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    uint var_10h;\n    uint var_ch;\n    uint *var_8h;\n    int32_t var_4h;\n    \n    if ((arg_8h == NULL) || (*arg_8h == 0)) {\n        iVar1 = -1;\n    }\n    else {\n        if (arg_ch == -1) {\n            var_8h = NULL;\n        }\n        else {\n            _var_10h = fcn.0007f8fe(arg_ch, arg_ch >> 0x1f, 0xffffd8f0, 0xffffffff);\n            var_8h = &var_10h;\n        }\n        var_4h = (**0x8500d19c)(*arg_8h, 0, 0, 0, var_8h);\n        if (var_4h == 0) {\n            iVar1 = 1;\n        }\n        else {\n            arg_8h_00 = fcn.0007f742(var_4h);\n            fcn.00036610(arg_8h_00);\n            iVar1 = -(var_4h != 0x102);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 301
    },
    "00034ee0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_50h\n\nchar * __cdecl fcn.00034ee0(int32_t arg_8h, int16_t *arg_ch, char *arg_10h, int32_t arg_14h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint var_50h;\n    uint var_48h;\n    char *var_44h;\n    uint var_40h;\n    uint var_38h;\n    char *var_34h;\n    uint var_30h;\n    uint var_28h;\n    char *var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (arg_14h == 0) {\n        arg_10h = NULL;\n    }\n    else {\n        fcn.0007f916(arg_10h, 0, arg_14h);\n        arg_14h = arg_14h + -1;\n        if (arg_8h == 2) {\n            fcn.0004a010(arg_10h, arg_14h, 0x8501083c, *arg_ch);\n        }\n        else if (arg_8h == 0x17) {\n            if ((((*arg_ch == 0) && (arg_ch[1] == 0)) && (arg_ch[2] == 0)) && ((arg_ch[3] == 0 && (arg_ch[4] == 0)))) {\n                if (arg_ch[5] == 0) {\n                    fcn.0004a010(arg_10h, arg_14h, 0x85010848, *(arg_ch + 6));\n                    return arg_10h;\n                }\n                if (arg_ch[5] == -1) {\n                    fcn.0004a010(arg_10h, arg_14h, 0x85010858, *(arg_ch + 6));\n                    return arg_10h;\n                }\n            }\n            var_ch = 0;\n            var_10h = 0;\n            var_14h = 0;\n            var_8h = 0;\n            for (var_4h = 0; var_4h < 8; var_4h = var_4h + 1) {\n                if (arg_ch[var_4h] == 0) {\n                    if (var_8h == 0) {\n                        var_8h = var_4h;\n                        var_14h = 1;\n                    }\n                    else {\n                        var_14h = var_14h + 1;\n                    }\n                }\n                else if (((0 < var_4h) && (arg_ch[var_4h + -1] == 0)) && ((var_10h == 0 || (var_ch < var_14h)))) {\n                    var_10h = var_8h;\n                    var_ch = var_14h;\n                }\n            }\n            *arg_10h = '[';\n            for (var_4h = 0; var_4h < 8; var_4h = var_4h + 1) {\n                var_24h = arg_10h;\n                do {\n                    cVar1 = *var_24h;\n                    var_24h = var_24h + 1;\n                } while (cVar1 != '\\0');\n                uVar2 = var_24h - (arg_10h + 1);\n                if ((var_4h == var_10h) && (var_ch != 0)) {\n                    fcn.0004a010(arg_10h + uVar2, arg_14h - uVar2, 0x85010870, var_50h);\n                }\n                else {\n                    uVar3 = uVar2;\n                    if ((var_4h <= var_10h) || (uVar3 = var_10h + var_ch,  uVar3 <= var_4h)) {\n                        if (var_4h == 7) {\n                            uVar3 = fcn.000365f0(uVar3 & 0xffff0000 | arg_ch[7]);\n                            fcn.0004a010(arg_10h + uVar2, arg_14h - uVar2, 0x85010874, uVar3 & 0xffff);\n                        }\n                        else {\n                            uVar3 = fcn.000365f0(uVar3 & 0xffff0000 | arg_ch[var_4h]);\n                            fcn.0004a010(arg_10h + uVar2, arg_14h - uVar2, 0x85010878, uVar3 & 0xffff);\n                        }\n                    }\n                }\n            }\n            var_34h = arg_10h;\n            do {\n                cVar1 = *var_34h;\n                var_34h = var_34h + 1;\n            } while (cVar1 != '\\0');\n            var_44h = arg_10h;\n            do {\n                cVar1 = *var_44h;\n                var_44h = var_44h + 1;\n            } while (cVar1 != '\\0');\n            fcn.0004a010(arg_10h + (var_44h - (arg_10h + 1)), arg_14h - (var_34h - (arg_10h + 1)), 0x8501087c, \n                         var_44h - (arg_10h + 1));\n        }\n        else {\n            arg_10h = NULL;\n        }\n    }\n    return arg_10h;\n}\n",
        "token_count": 1286
    },
    "00035270": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00035270(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    bool bVar1;\n    uint var_64h;\n    int32_t var_60h;\n    int32_t var_5ch;\n    uint var_58h;\n    char acStack66 [26];\n    char acStack40 [10];\n    uint var_1ah;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint8_t var_8h [2];\n    uint var_6h;\n    \n    var_60h = 0;\n    var_5ch = 0;\n    bVar1 = false;\n    for (var_10h = 0; var_10h < 0x1a; var_10h = var_10h + 1) {\n        *(&var_58h + var_10h) = var_10h + 'A';\n        acStack66[var_10h] = var_10h + 'a';\n    }\n    for (var_10h = 0; var_10h < 10; var_10h = var_10h + 1) {\n        acStack40[var_10h] = var_10h + '0';\n    }\n    var_1ah._0_1_ = 0x2b;\n    var_1ah._1_1_ = 0x2f;\n    do {\n        var_6h._0_1_ = 0;\n        var_8h[1] = 0;\n        var_8h[0] = 0;\n        var_ch = 0;\n        do {\n            if (2 < var_ch) goto code_r0x0003533f;\n            var_8h[var_ch] = *(arg_8h + var_60h);\n            var_ch = var_ch + 1;\n            var_60h = var_60h + 1;\n        } while (var_60h != arg_10h);\n        bVar1 = true;\ncode_r0x0003533f:\n        if (0 < var_ch) {\n            var_6h._2_2_ = CONCAT11(*(&var_58h + ((var_8h[0] & 3) << 4 | var_8h[1] >> 4)), \n                                    *(&var_58h + (var_8h[0] >> 2)));\n            stack0xfffffff8 = CONCAT12(*(&var_58h + ((var_8h[1] & 0xf) << 2 | var_6h >> 6)), var_6h._2_2_);\n            stack0xfffffff8 = CONCAT13(*(&var_58h + (var_6h & 0x3f)), stack0xfffffff8);\n            if ((var_ch < 3) && (stack0xfffffff8 = CONCAT13(0x3d, stack0xfffffff8),  var_ch < 2)) {\n                stack0xfffffff8 = CONCAT12(0x3d, var_6h._2_2_);\n                stack0xfffffff8 = CONCAT13(0x3d, stack0xfffffff8);\n            }\n        }\n        *(arg_ch + var_5ch) = stack0xfffffff8;\n        var_5ch = var_5ch + 4;\n        if (bVar1) {\n            *(arg_ch + var_5ch) = 0;\n            return var_5ch;\n        }\n    } while( true );\n}\n",
        "token_count": 792
    },
    "00035620": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00035620(int32_t *arg_8h)\n\n{\n    if ((arg_8h != NULL) && (*arg_8h != 0)) {\n        fcn.00036460(*arg_8h);\n        *arg_8h = 0;\n    }\n    return;\n}\n",
        "token_count": 70
    },
    "00035670": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00035670(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((arg_8h == NULL) || (*arg_8h == 0)) {\n        bVar2 = false;\n    }\n    else {\n        var_8h = 0;\n        var_4h = 0;\n        iVar1 = (**0x8500d19c)(*arg_8h, 0, 0, 0, &var_8h);\n        bVar2 = iVar1 == 0;\n    }\n    return bVar2;\n}\n",
        "token_count": 152
    },
    "000356e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.000356e0(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint *var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_4h;\n    \n    var_30h = fcn.00037f00(&var_10h);\n    if (var_30h == 0) {\n        var_4h = var_30h;\n        iVar1 = fcn.00038630(arg_ch);\n        iVar1 = fcn.00036330(iVar1 << 1);\n        if (iVar1 == 0) {\n            var_4h = -0x3fffff66;\n        }\n        else {\n            fcn.000384e0(arg_ch, iVar1, 0xffffffff);\n            fcn.0007f6d0(&var_ch, iVar1);\n            var_28h = 0x18;\n            var_24h = 0;\n            var_1ch = 0;\n            var_20h = &var_ch;\n            var_18h = var_10h;\n            var_14h = 0;\n            var_4h = fcn.00020550(arg_8h, 0x1f0001, &var_28h, 0);\n        }\n        fcn.00036460(iVar1);\n        fcn.00038080(var_10h);\n        if (var_4h == 0) {\n            var_30h = 0;\n        }\n        else {\n            var_30h = fcn.0007f742(var_4h);\n        }\n    }\n    return var_30h;\n}\n",
        "token_count": 422
    },
    "000357d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000357d0(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    \n    uVar3 = 0;\n    uVar2 = arg_ch;\n    iVar1 = fcn.00038630(arg_ch);\n    iVar1 = fcn.00036330(iVar1 << 1);\n    if (iVar1 == 0) {\n        uVar2 = fcn.0007f742(0xc000009a, uVar2, uVar3);\n    }\n    else {\n        fcn.000384e0(arg_ch, iVar1, 0xffffffff);\n        fcn.0007f6d0(&var_8h, iVar1);\n        var_24h = 0x18;\n        var_20h = 0;\n        var_18h = 0;\n        var_1ch = &var_8h;\n        var_14h = 0;\n        var_10h = 0;\n        var_ch = fcn.000205a0(arg_8h, 0x1f0001, &var_24h);\n        fcn.00036460(iVar1);\n        if (var_ch == 0) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = fcn.0007f742(var_ch);\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 380
    },
    "000358f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __cdecl fcn.000358f0(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    var_10h = 0;\n    var_ch = 0;\n    iVar1 = fcn.0007f772(*arg_8h, 0, &var_10h);\n    return iVar1 == 0;\n}\n",
        "token_count": 97
    },
    "00035930": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00035930(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    uint uVar1;\n    int32_t arg_8h_00;\n    int32_t iVar2;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_ch = 0x4000;\n    if (arg_ch == NULL) {\n        uVar1 = 0x21590066;\n    }\n    else {\n        do {\n            arg_8h_00 = fcn.00036330(var_ch);\n            if (arg_8h_00 == 0) {\n                return 0x21590004;\n            }\n            iVar2 = fcn.0007f832();\n            if (iVar2 == -0x3ffffffc) {\n                fcn.00036460(arg_8h_00);\n                if ((arg_8h == 6) || (arg_8h == 0xb)) {\n                    var_ch = var_4h;\n                }\n                else {\n                    var_ch = var_ch << 1;\n                }\n            }\n        } while (iVar2 == -0x3ffffffc);\n        if (iVar2 == 0) {\n            *arg_ch = arg_8h_00;\n            uVar1 = 0;\n        }\n        else {\n            fcn.00036460(arg_8h_00);\n            uVar1 = 0xffffffff;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 336
    },
    "000359f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n\nint32_t __cdecl fcn.000359f0(int32_t arg_8h, uint32_t *arg_ch, uint32_t *arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t var_14h;\n    uint32_t *var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint32_t *var_4h;\n    \n    if (arg_8h == 0) {\n        var_14h = 0x21590065;\n    }\n    else if (arg_ch == NULL) {\n        var_14h = 0x21590066;\n    }\n    else if (arg_10h == NULL) {\n        var_14h = 0x21590067;\n    }\n    else {\n        iVar1 = fcn.00035ff0(arg_8h, 0x2e);\n        if (iVar1 == 0) {\n            var_14h = 0x21590065;\n        }\n        else {\n            var_8h = fcn.00036030(arg_8h);\n            var_14h = fcn.00035930(0xb, &var_10h);\n            if (var_14h == 0) {\n                var_4h = var_10h + 1;\n                var_14h = 0x21590005;\n                for (var_ch = 0; var_ch < *var_10h; var_ch = var_ch + 1) {\n                    if (((var_ch == 0) && (iVar1 = fcn.00035f10(arg_8h, 0x8500d8a0, var_8h),  iVar1 == 0)) ||\n                       ((var_ch == 1 && (iVar1 = fcn.00035f10(arg_8h, 0x85010880, var_8h),  iVar1 == 0)))) {\ncode_r0x00035b02:\n                        iVar1 = fcn.00035f10(arg_8h, 0x8500d714, var_8h);\n                        if ((iVar1 != 0) || (var_4h[var_ch * 0x47 + 2] < 0x80000001)) {\n                            *arg_ch = var_4h[var_ch * 0x47 + 2];\n                            *arg_10h = var_4h[var_ch * 0x47 + 3];\n                            var_14h = 0;\n                            break;\n                        }\n                    }\n                    else {\n                        var_14h = var_8h;\n                        iVar1 = fcn.00035f10(var_4h + *(var_4h + var_ch * 0x11c + 0x1a) + var_ch * 0x11c + 0x1c, arg_8h\n                                             , var_8h);\n                        if (iVar1 == 0) goto code_r0x00035b02;\n                    }\n                }\n                fcn.00036460(var_10h);\n            }\n        }\n    }\n    return var_14h;\n}\n",
        "token_count": 697
    },
    "00035bf0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00035bf0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    if ((arg_8h != arg_ch) && (arg_ch != 0)) {\n        fcn.0007f6c4(arg_ch);\n    }\n    return;\n}\n",
        "token_count": 65
    },
    "00035c10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00035c10(int16_t *arg_8h, uint32_t arg_ch)\n\n{\n    int16_t iVar1;\n    uint uVar2;\n    uint var_4ch;\n    int16_t *var_48h;\n    int16_t *var_44h;\n    uint var_40h;\n    int16_t *var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint *var_2ch;\n    \n    if ((arg_8h == NULL) || (arg_ch < 5)) {\n        uVar2 = 0x21590008;\n    }\n    else {\n        fcn.0007f916(&var_38h, 0, 0x38);\n        var_44h = 0x8500d6d4;\n        var_48h = arg_8h;\n        do {\n            iVar1 = *var_44h;\n            *var_48h = iVar1;\n            var_44h = var_44h + 1;\n            var_48h = var_48h + 1;\n        } while (iVar1 != 0);\n        var_3ch = arg_8h + 4;\n        var_40h._0_2_ = 0;\n        var_40h._2_2_ = arg_ch * 2 + -8;\n        var_34h = 0x24;\n        var_30h = 0x85010888;\n        var_2ch = &var_40h;\n        uVar2 = fcn.0007f808(3, 0, &var_38h, 0, 0);\n        uVar2 = fcn.0007f742(uVar2);\n    }\n    return uVar2;\n}\n",
        "token_count": 409
    },
    "00035cd0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00035cd0(int32_t arg_8h, int32_t arg_ch, uint arg_10h, int32_t *arg_14h)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    if (((arg_8h == 0) || (arg_ch == 0)) || (arg_14h == NULL)) {\n        iVar1 = -0x3ffffff3;\n    }\n    else {\n        *arg_14h = 0;\n        iVar1 = fcn.0007f838(arg_8h, arg_ch, arg_10h, *arg_14h, 0, &var_4h);\n        if ((iVar1 == -0x3fffffdd) || (iVar1 == -0x7ffffffb)) {\n            iVar1 = fcn.00036330(var_4h);\n            *arg_14h = iVar1;\n            if (*arg_14h == 0) {\n                iVar1 = 0x21590004;\n            }\n            else {\n                iVar1 = fcn.0007f838(arg_8h, arg_ch, arg_10h, *arg_14h, var_4h, &var_4h);\n                if (iVar1 != 0) {\n                    fcn.00036460(*arg_14h);\n                }\n            }\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 317
    },
    "00035da0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00035da0(void)\n\n{\n    int32_t iVar1;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar1 = *0x85092948;\n    if (*0x85092948 == 0) {\n        fcn.0007f80e(&var_ch, &var_8h, 0, 0);\n        iVar1 = fcn.0007f75a(0xffffffff, 0x1a, &var_4h, 4, 0);\n        if (iVar1 != 0) {\n            var_4h = 0;\n        }\n        if (var_ch == 4) {\n            if (var_8h == 0) {\n                *0x85092948 = 2;\n                iVar1 = *0x85092948;\n            }\n            else {\n                *0x85092948 = 1;\n                iVar1 = *0x85092948;\n            }\n        }\n        else if (var_ch == 5) {\n            if (var_8h == 0) {\n                *0x85092948 = 3;\n                iVar1 = 3;\n            }\n            else if (var_8h == 1) {\n                *0x85092948 = (-(var_4h != 0) & 10) + 9;\n                iVar1 = *0x85092948;\n            }\n            else if (var_8h == 2) {\n                *0x85092948 = (-(var_4h != 0) & 9) + 0xe;\n                iVar1 = *0x85092948;\n            }\n            else {\n                iVar1 = 0;\n            }\n        }\n        else if (var_ch == 6) {\n            if (var_8h == 0) {\n                *0x85092948 = (-(var_4h != 0) & 0xc) + 0x1b;\n                iVar1 = *0x85092948;\n            }\n            else if (var_8h == 1) {\n                *0x85092948 = (-(var_4h != 0) & 0xc) + 0x23;\n                iVar1 = *0x85092948;\n            }\n            else if (var_8h == 2) {\n                *0x85092948 = (-(var_4h != 0) & 0xc) + 0x26;\n                iVar1 = *0x85092948;\n            }\n            else {\n                iVar1 = 0;\n            }\n        }\n        else {\n            iVar1 = 0;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 619
    },
    "00035f10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00035f10(uint8_t *arg_8h, uint8_t *arg_ch, int32_t arg_10h)\n\n{\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = 0;\n    var_8h = 0;\n    while (arg_10h != 0) {\n        var_4h = *arg_8h;\n        arg_8h = arg_8h + 1;\n        if ((0x40 < var_4h) && (var_4h < 0x5b)) {\n            var_4h = var_4h + 0x20;\n        }\n        var_8h = *arg_ch;\n        arg_ch = arg_ch + 1;\n        if ((0x40 < var_8h) && (var_8h < 0x5b)) {\n            var_8h = var_8h + 0x20;\n        }\n        if ((var_4h == 0) || (arg_10h = arg_10h + -1,  var_4h != var_8h)) break;\n    }\n    return var_4h - var_8h;\n}\n",
        "token_count": 275
    },
    "00035fb0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00035fb0(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t var_4h;\n    \n    for (var_4h = arg_10h; var_4h != 0; var_4h = var_4h + -1) {\n        *(arg_8h + var_4h + -1) = *(arg_ch + var_4h + -1);\n    }\n    return arg_8h;\n}\n",
        "token_count": 119
    },
    "00036070": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00036070(uint param_1, uint param_2, uint param_3, int32_t param_4, int32_t *param_5, int32_t param_6)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint var_8h;\n    uint var_ch;\n    uint var_10h;\n    int32_t var_14h;\n    int32_t *var_18h_2;\n    int32_t var_1ch_2;\n    uint var_18h;\n    int32_t var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    int32_t var_3ch;\n    uint var_38h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uchar *puStack28;\n    uint var_10h_2;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x8507b990;\n    uStack16 = 0x8507b910;\n    var_10h_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_10h_2;\n    puStack28 = &stack0xffffffa0;\n    var_1ch = 0;\n    var_20h = 0;\n    var_40h = 0;\n    var_3ch = 0;\n    if (var_14h == 0) {\n        var_48h = 0;\n    }\n    else {\n        var_48h = (**0x8500d2a0)(var_8h, 0, 0, 0, &var_44h, 0);\n        if (-1 < var_48h) {\n            iVar1 = (**0x8500d1c8)();\n            if (var_44h == iVar1) {\n                var_48h = 0;\n                var_4h = 1;\n                if (var_1ch_2 == 0) {\n                    fcn.0007f904(var_ch, var_10h, var_14h);\n                }\n                else {\n                    fcn.0007f904(var_10h, var_ch, var_14h);\n                }\n                if (var_18h_2 != NULL) {\n                    *var_18h_2 = var_14h;\n                }\n                var_4h = 0xffffffff;\n            }\n            else {\n                var_20h = (**0x8500d290)(var_10h, var_14h, 0, 0, 0);\n                if (var_20h == 0) {\n                    var_48h = -0x3fffff66;\n                }\n                else {\n                    (**0x8500d1cc)(var_44h, &var_38h);\n                    var_40h = 1;\n                    var_4h = 0;\n                    (**0x8500d29c)(var_20h, 0, var_1ch_2 != 0);\n                    var_3ch = 1;\n                    var_1ch = (**0x8500d0e8)(var_20h, 0, 1, 0, 0, 0x10);\n                    if (var_1ch == 0) {\n                        var_48h = -0x3fffff66;\n                        var_4h = 0xffffffff;\n                    }\n                    else {\n                        if (var_1ch_2 == 0) {\n                            fcn.0007f904(var_ch, var_1ch, var_14h);\n                        }\n                        else {\n                            fcn.0007f904(var_1ch, var_ch, var_14h);\n                        }\n                        var_4h = 0xffffffff;\n                        var_48h = 0;\n                    }\n                }\n            }\n            if (var_1ch != 0) {\n                (**0x8500d0b0)(var_1ch, var_20h);\n            }\n            if (var_3ch != 0) {\n                (**0x8500d298)(var_20h);\n            }\n            if (var_40h != 0) {\n                (**0x8500d1c4)(&var_38h);\n            }\n            if (var_20h != 0) {\n                (**0x8500d2a8)(var_20h);\n            }\n            (**0x8500d2e4)();\n        }\n    }\n    *in_FS_OFFSET = var_10h_2;\n    return var_48h;\n}\n",
        "token_count": 1022
    },
    "00036330": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00036330(int32_t arg_8h)\n\n{\n    uint var_4h;\n    \n    if (arg_8h == 0) {\n        var_4h = 0x8509027a;\n    }\n    else {\n        var_4h = fcn.0001ce20(1, arg_8h, 0x7346744e);\n    }\n    return var_4h;\n}\n",
        "token_count": 97
    },
    "00036360": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00036360(int32_t arg_8h)\n\n{\n    uint var_4h;\n    \n    if (arg_8h == 0) {\n        var_4h = 0x8509027a;\n    }\n    else {\n        var_4h = fcn.0001ce20(0, arg_8h, 0x7346744e);\n    }\n    return var_4h;\n}\n",
        "token_count": 97
    },
    "00036390": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00036390(int32_t *arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    if (arg_10h == 0) {\n        fcn.00036460(*arg_8h);\n        *arg_8h = 0;\n        uVar1 = 0;\n    }\n    else {\n        iVar2 = fcn.00036360(arg_10h);\n        if (iVar2 == 0) {\n            uVar1 = 0xffffffff;\n        }\n        else {\n            if (arg_10h < arg_ch) {\n                var_8h = arg_10h;\n            }\n            else {\n                var_8h = arg_ch;\n            }\n            fcn.0007f904(iVar2, *arg_8h, var_8h);\n            fcn.00036460(*arg_8h);\n            *arg_8h = iVar2;\n            uVar1 = 0;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 255
    },
    "00036420": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00036420(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.00036330(arg_8h * arg_ch);\n    if (iVar1 == 0) {\n        iVar1 = 0;\n    }\n    else {\n        fcn.0007f916(iVar1, 0, arg_8h * arg_ch);\n    }\n    return iVar1;\n}\n",
        "token_count": 113
    },
    "00036460": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00036460(int32_t arg_8h)\n\n{\n    if ((arg_8h != 0) && (arg_8h != -0x7af6fd86)) {\n        fcn.0001ce60(arg_8h, 0x7346744e);\n    }\n    return;\n}\n",
        "token_count": 74
    },
    "00036490": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nchar * __cdecl fcn.00036490(char *arg_8h)\n\n{\n    char cVar1;\n    char *pcVar2;\n    uint var_20h;\n    char *var_1ch;\n    char *var_18h;\n    uint var_14h;\n    uint var_ch;\n    char *var_8h;\n    uint var_4h;\n    \n    var_8h = arg_8h;\n    do {\n        cVar1 = *var_8h;\n        var_8h = var_8h + 1;\n    } while (cVar1 != '\\0');\n    pcVar2 = fcn.00036330(var_8h + (1 - (arg_8h + 1)));\n    if (pcVar2 != NULL) {\n        var_18h = arg_8h;\n        var_1ch = pcVar2;\n        do {\n            cVar1 = *var_18h;\n            *var_1ch = cVar1;\n            var_18h = var_18h + 1;\n            var_1ch = var_1ch + 1;\n        } while (cVar1 != '\\0');\n    }\n    return pcVar2;\n}\n",
        "token_count": 265
    },
    "00036520": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint16_t * __cdecl fcn.00036520(int16_t *arg_8h)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    uint var_20h;\n    int16_t *var_1ch;\n    int16_t *var_18h;\n    uint var_14h;\n    uint var_ch;\n    int16_t *var_8h;\n    uint var_4h;\n    \n    var_8h = arg_8h;\n    do {\n        iVar1 = *var_8h;\n        var_8h = var_8h + 1;\n    } while (iVar1 != 0);\n    piVar2 = fcn.00036330((var_8h - (arg_8h + 1) >> 1) * 2 + 2);\n    if (piVar2 != NULL) {\n        var_18h = arg_8h;\n        var_1ch = piVar2;\n        do {\n            iVar1 = *var_18h;\n            *var_1ch = iVar1;\n            var_18h = var_18h + 1;\n            var_1ch = var_1ch + 1;\n        } while (iVar1 != 0);\n    }\n    return piVar2;\n}\n",
        "token_count": 282
    },
    "000367c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000367c0(uint arg_8h, char *arg_ch)\n\n{\n    char cVar1;\n    uint arg_8h_00;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint *var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    uint var_20h;\n    uint32_t var_18h;\n    uint var_14h;\n    uint var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    cVar1 = *arg_ch;\n    if (cVar1 == 'a') {\n        if (arg_ch[1] != '+') {\n            var_18h = 4;\n        }\n        else {\n            var_18h = 7;\n        }\n        var_4h = arg_ch[1] != '+';\n        var_ch = 3;\n    }\n    else if (cVar1 == 'r') {\n        if (arg_ch[1] == '+') {\n            var_18h = 3;\n            var_4h = 0;\n        }\n        else {\n            var_18h = 1;\n            var_4h = 3;\n        }\n        var_ch = 1;\n    }\n    else {\n        if (cVar1 != 'w') {\n            fcn.00036610(0x16);\n            return 0;\n        }\n        if (arg_ch[1] == '+') {\n            var_18h = 3;\n        }\n        else {\n            var_18h = 2;\n        }\n        var_4h = 0;\n        var_ch = 5;\n    }\n    var_8h = fcn.00036330(0x208);\n    if (var_8h == 0) {\n        var_40h = 0;\n    }\n    else {\n        fcn.00037500(var_8h, 0x104, arg_8h);\n        fcn.0007f6d0(&var_20h, var_8h);\n        var_3ch = 0x18;\n        var_38h = 0;\n        var_30h = 0x40;\n        var_34h = &var_20h;\n        var_2ch = 0;\n        var_28h = 0;\n        var_24h = fcn.0001ed40(&var_40h, var_18h | 0x100000, &var_3ch, &var_14h, 0, 0x80, var_4h, var_ch, 0x10, 0, 0);\n        fcn.00036460(var_8h);\n        if (var_24h != 0) {\n            arg_8h_00 = fcn.0007f742(var_24h);\n            fcn.00036610(arg_8h_00);\n            var_40h = 0;\n        }\n    }\n    return var_40h;\n}\n",
        "token_count": 690
    },
    "00036980": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00036980(uint arg_8h, uint32_t arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_ch = 0xffffffff;\n    var_10h = 0xfffffffe;\n    iVar1 = fcn.0007f6f4(arg_14h, 0, 0, 0, &var_8h, arg_8h, arg_ch * arg_10h, &var_10h, 0);\n    if (iVar1 == 0) {\n        var_4h = var_4h / arg_ch;\n    }\n    else {\n        arg_8h_00 = fcn.0007f742(iVar1);\n        fcn.00036610(arg_8h_00);\n        var_4h = 0;\n    }\n    return var_4h;\n}\n",
        "token_count": 246
    },
    "000369f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.000369f0(uint arg_8h, uint32_t arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_ch = 0xffffffff;\n    var_10h = 0xfffffffe;\n    iVar1 = fcn.0007f766(arg_14h, 0, 0, 0, &var_8h, arg_8h, arg_ch * arg_10h, &var_10h, 0);\n    if (iVar1 == 0) {\n        var_4h = var_4h / arg_ch;\n    }\n    else {\n        arg_8h_00 = fcn.0007f742(iVar1);\n        fcn.00036610(arg_8h_00);\n        var_4h = 0;\n    }\n    return var_4h;\n}\n",
        "token_count": 245
    },
    "00036a70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00036a70(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_24h;\n    uint var_20h;\n    uint var_18h;\n    uint var_8h;\n    \n    iVar1 = fcn.0007f74e(arg_8h, &var_8h, &var_20h, 0x18, 5);\n    if (iVar1 != 0) {\n        var_18h = 0xffffffff;\n    }\n    return var_18h;\n}\n",
        "token_count": 121
    },
    "00036aa0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00036aa0(uint arg_8h, uint32_t arg_ch)\n\n{\n    uint arg_8h_00;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint *var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    uint var_20h;\n    uint32_t var_18h;\n    uint var_14h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_18h = 0;\n    var_4h = 0;\n    var_ch = 1;\n    if ((arg_ch & 8) != 0) {\n        var_18h = 4;\n    }\n    if (((arg_ch & 0x100) != 0) && (var_ch = 3,  (arg_ch & 0x400) != 0)) {\n        var_ch = 2;\n    }\n    if ((arg_ch & 3) == 0) {\n        var_18h = var_18h | 1;\n        var_4h = 3;\n    }\n    if ((arg_ch & 2) != 0) {\n        var_18h = var_18h | 3;\n    }\n    if ((arg_ch & 0x200) != 0) {\n        var_ch = 5;\n    }\n    if ((arg_ch & 1) != 0) {\n        var_18h = var_18h & 0xfffffffe | 2;\n    }\n    var_8h = fcn.00036330(0x208);\n    if (var_8h == 0) {\n        var_40h = 0xffffffff;\n    }\n    else {\n        fcn.000375e0(var_8h, 0x104, arg_8h);\n        fcn.0007f6d0(&var_20h, var_8h);\n        var_3ch = 0x18;\n        var_38h = 0;\n        var_30h = 0x40;\n        var_34h = &var_20h;\n        var_2ch = 0;\n        var_28h = 0;\n        var_24h = fcn.0001ed40(&var_40h, var_18h | 0x100000, &var_3ch, &var_14h, 0, 0x80, var_4h, var_ch, 0x10, 0, 0);\n        fcn.00036460(var_8h);\n        if (var_24h != 0) {\n            arg_8h_00 = fcn.0007f742(var_24h);\n            fcn.00036610(arg_8h_00);\n            var_40h = 0xffffffff;\n        }\n    }\n    return var_40h;\n}\n",
        "token_count": 661
    },
    "00036c20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00036c20(uint arg_8h, uint arg_ch)\n\n{\n    int32_t arg_8h_00;\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.00036330(0x208);\n    if (arg_8h_00 == 0) {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        fcn.00037500(arg_8h_00, 0x104, arg_8h);\n        uVar1 = fcn.00036aa0(arg_8h_00, arg_ch);\n        fcn.00036460(arg_8h_00);\n    }\n    return uVar1;\n}\n",
        "token_count": 170
    },
    "00036c80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00036c80(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = 0xffffffff;\n    var_10h = 0xfffffffe;\n    iVar1 = fcn.0007f766(arg_8h, 0, 0, 0, &var_8h, arg_ch, arg_10h, &var_10h, 0);\n    if (iVar1 != 0) {\n        if (iVar1 == -0x3fffffef) {\n            var_4h = 0;\n        }\n        else {\n            arg_8h_00 = fcn.0007f742(iVar1);\n            fcn.00036610(arg_8h_00);\n            var_4h = 0xffffffff;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 238
    },
    "00036cf0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00036cf0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = 0xffffffff;\n    var_10h = 0xfffffffe;\n    iVar1 = fcn.0007f6f4(arg_8h, 0, 0, 0, &var_8h, arg_ch, arg_10h, &var_10h, 0);\n    if (iVar1 != 0) {\n        arg_8h_00 = fcn.0007f742(iVar1);\n        fcn.00036610(arg_8h_00);\n        var_4h = 0xffffffff;\n    }\n    return var_4h;\n}\n",
        "token_count": 210
    },
    "00036e20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00036e20(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    uint var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_10h == 0) {\n        var_4h = 0;\n        var_8h = arg_ch;\n        iVar1 = fcn.0007f6dc(arg_8h, &var_10h, &var_8h, 8, 0xe);\n        if (iVar1 != 0) {\n            arg_8h_00 = fcn.0007f742(iVar1);\n            fcn.00036610(arg_8h_00);\n            arg_ch = 0xffffffff;\n        }\n    }\n    else {\n        fcn.00036610(0x16);\n        arg_ch = 0xffffffff;\n    }\n    return arg_ch;\n}\n",
        "token_count": 227
    },
    "00036e80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00036e80(uint arg_8h)\n\n{\n    uint uVar1;\n    uint var_28h;\n    uint var_24h;\n    uint *var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_4h;\n    \n    var_4h = fcn.00036330(0x208);\n    if (var_4h == 0) {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        fcn.000375e0(var_4h, 0x104, arg_8h);\n        fcn.0007f6d0(&var_ch, var_4h);\n        var_28h = 0x18;\n        var_24h = 0;\n        var_1ch = 0x40;\n        var_20h = &var_ch;\n        var_18h = 0;\n        var_14h = 0;\n        var_10h = fcn.0007f6e8(&var_28h);\n        fcn.00036460(var_4h);\n        if (var_10h == 0) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = fcn.0007f742(var_10h);\n            fcn.00036610(uVar1);\n            uVar1 = 0xffffffff;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 341
    },
    "00036f30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00036f30(uint arg_8h)\n\n{\n    int32_t arg_8h_00;\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.00036330(0x208);\n    if (arg_8h_00 == 0) {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        fcn.00037500(arg_8h_00, 0x104, arg_8h);\n        uVar1 = fcn.00036e80(arg_8h_00);\n        fcn.00036460(arg_8h_00);\n    }\n    return uVar1;\n}\n",
        "token_count": 163
    },
    "00036f90": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00036f90(uint *arg_8h)\n\n{\n    uint uVar1;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint var_4h;\n    \n    (**0x8500d108)(&var_10h);\n    uVar1 = fcn.0007f90a(var_10h + 0x2ac18000, (var_ch + -0x19db1de) - (var_10h < 0xd53e8000), 10000000, 0);\n    if (arg_8h != NULL) {\n        *arg_8h = uVar1;\n    }\n    return uVar1;\n}\n",
        "token_count": 156
    },
    "00036fe0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00036fe0(char *arg_8h, char **arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    char *var_4h;\n    \n    iVar1 = fcn.0007f84a(arg_8h, arg_10h, &var_8h);\n    if (iVar1 != 0) {\n        var_8h = 0;\n    }\n    if (arg_ch != NULL) {\n        for (var_4h = arg_8h;\n            ((('/' < *var_4h && (*var_4h < ':')) || (('`' < *var_4h && (*var_4h < 'g')))) ||\n            (('@' < *var_4h && (*var_4h < 'G')))); var_4h = var_4h + 1) {\n        }\n        *arg_ch = var_4h;\n    }\n    return var_8h;\n}\n",
        "token_count": 222
    },
    "00037070": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00037070(uint16_t *arg_8h, uint16_t **arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint var_10h;\n    uint var_8h;\n    uint16_t *var_4h;\n    \n    fcn.0007f6d0(&var_10h, arg_8h);\n    iVar1 = fcn.0007f850(&var_10h, arg_10h, &var_8h);\n    if (iVar1 != 0) {\n        var_8h = 0;\n    }\n    if (arg_ch != NULL) {\n        for (var_4h = arg_8h;\n            (((0x2f < *var_4h && (*var_4h < 0x3a)) || ((0x60 < *var_4h && (*var_4h < 0x67)))) ||\n            ((0x40 < *var_4h && (*var_4h < 0x47)))); var_4h = var_4h + 1) {\n        }\n        *arg_ch = var_4h;\n    }\n    return var_8h;\n}\n",
        "token_count": 266
    },
    "00037140": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00037140(uint16_t *arg_8h, uint16_t *arg_ch, int32_t arg_10h)\n\n{\n    int16_t iVar1;\n    int16_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    ushort extraout_var;\n    ushort extraout_var_00;\n    uint16_t *in_EDX;\n    \n    if (arg_10h != 0) {\n        for (; arg_10h != 0; arg_10h = arg_10h + -1) {\n            iVar1 = fcn.0007f844(in_EDX & 0xffff0000 | *arg_8h);\n            iVar2 = fcn.0007f844(CONCAT22(extraout_var, *arg_ch));\n            if (iVar1 != iVar2) {\n                uVar3 = fcn.0007f844(CONCAT22(extraout_var_00, *arg_8h));\n                uVar4 = fcn.0007f844(uVar3 & 0xffff0000 | *arg_ch);\n                return (uVar3 & 0xffff) - (uVar4 & 0xffff);\n            }\n            if (*arg_8h == 0) {\n                return 0;\n            }\n            arg_8h = arg_8h + 1;\n            in_EDX = arg_ch + 1;\n            arg_ch = in_EDX;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 325
    },
    "000371e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.000371e0(uint *arg_8h, ushort *arg_ch)\n\n{\n    uint uVar1;\n    uint uVar2;\n    ushort uVar3;\n    int32_t iVar4;\n    ulong uVar5;\n    uint var_28h;\n    uint var_24h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = *arg_8h;\n    uVar2 = arg_8h[1];\n    uVar5 = fcn.0007f91c(uVar1, uVar2, 10000000, 0);\n    uVar3 = fcn.0007f90a(uVar5, 10000, 0);\n    arg_ch[7] = uVar3;\n    uVar5 = fcn.0007f90a(uVar1, uVar2, 10000000, 0);\n    var_10h = fcn.0007f90a(uVar5, 0x15180, 0);\n    for (var_14h = fcn.0007f91c(uVar5, 0x15180, 0); var_14h < 0; var_14h = var_14h + 0x15180) {\n        var_10h = var_10h + -1;\n    }\n    for (; 0x1517f < var_14h; var_14h = var_14h + -0x15180) {\n        var_10h = var_10h + 1;\n    }\n    arg_ch[4] = var_14h / 0xe10;\n    arg_ch[5] = (var_14h % 0xe10) / 0x3c;\n    arg_ch[6] = (var_14h % 0xe10) % 0x3c;\n    arg_ch[2] = var_10h % 7;\n    var_ch = 0x641;\n    while( true ) {\n        iVar4 = fcn.000373c0(var_ch);\n        if (var_10h < *(iVar4 * 4 + -0x7aff1a10)) break;\n        var_ch = var_ch + 1;\n        var_10h = var_10h - *(iVar4 * 4 + -0x7aff1a10);\n    }\n    *arg_ch = var_ch;\n    iVar4 = iVar4 * 0x30 + -0x7aff1a08;\n    for (var_18h = 0; *(iVar4 + var_18h * 4) <= var_10h; var_18h = var_18h + 1) {\n        var_10h = var_10h - *(iVar4 + var_18h * 4);\n    }\n    arg_ch[1] = var_18h + 1;\n    arg_ch[3] = var_10h + 1;\n    return;\n}\n",
        "token_count": 703
    },
    "00037410": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00037410(int32_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint var_40h;\n    uint var_3ch;\n    int32_t var_34h;\n    uint var_30h;\n    uint16_t var_2ch;\n    uint16_t var_2ah;\n    uint var_28h;\n    uint16_t var_24h;\n    uint var_20h;\n    uint var_10h;\n    uint var_ch;\n    \n    _var_40h = fcn.0007f8fe(*arg_8h, *arg_8h >> 0x1f, 10000000, 0);\n    _var_40h = _var_40h + 0x19db1ded53e8000;\n    var_34h = fcn.0007f832(3, &var_20h, 0x20, 0);\n    if (var_34h == 0) {\n        _var_40h = _var_40h - CONCAT44(var_ch, var_10h);\n    }\n    fcn.000371e0(&var_40h, &var_30h);\n    arg_ch[2] = var_28h;\n    arg_ch[8] = 0;\n    arg_ch[3] = var_2ah;\n    arg_ch[1] = var_28h._2_2_;\n    arg_ch[4] = var_30h._2_2_ - 1;\n    *arg_ch = var_24h;\n    arg_ch[6] = var_2ch;\n    arg_ch[7] = 0;\n    arg_ch[5] = var_30h - 0x76c;\n    return;\n}\n",
        "token_count": 398
    },
    "00037500": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00037500(int16_t *arg_8h, int32_t arg_ch, char *arg_10h)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    uint var_14h;\n    uint var_ch;\n    int16_t *var_8h;\n    uint var_4h;\n    \n    if (*arg_10h == '\\\\') {\n        fcn.000384e0(arg_10h, arg_8h, arg_ch);\n    }\n    else if ((*arg_10h == '\\0') || (arg_10h[1] != ':')) {\n        fcn.0002c220(arg_8h, arg_ch);\n        var_8h = arg_8h;\n        do {\n            iVar1 = *var_8h;\n            var_8h = var_8h + 1;\n        } while (iVar1 != 0);\n        iVar2 = var_8h - (arg_8h + 1) >> 1;\n        fcn.0007f6d6(arg_8h + iVar2, arg_ch - iVar2, 0x8500d6b4, arg_10h);\n        arg_8h[arg_ch + -1] = 0;\n    }\n    else {\n        fcn.0007f6d6(arg_8h, arg_ch, 0x850108a0, arg_10h);\n        arg_8h[arg_ch + -1] = 0;\n    }\n    return;\n}\n",
        "token_count": 333
    },
    "000375e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000375e0(int16_t *arg_8h, int32_t arg_ch, int16_t *arg_10h)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    uint var_14h;\n    uint var_ch;\n    int16_t *var_8h;\n    uint var_4h;\n    \n    if (*arg_10h == 0x5c) {\n        fcn.0007f718(arg_8h, arg_10h, arg_ch);\n        arg_8h[arg_ch + -1] = 0;\n    }\n    else if ((*arg_10h == 0) || (arg_10h[1] != 0x3a)) {\n        fcn.0002c220(arg_8h, arg_ch);\n        var_8h = arg_8h;\n        do {\n            iVar1 = *var_8h;\n            var_8h = var_8h + 1;\n        } while (iVar1 != 0);\n        fcn.0007f76c(arg_8h, arg_10h, arg_ch - (var_8h - (arg_8h + 1) >> 1));\n        arg_8h[arg_ch + -1] = 0;\n    }\n    else {\n        iVar2 = fcn.0007f6d6(arg_8h, arg_ch, 0x850108b0, arg_10h);\n        if ((iVar2 < 0) || (iVar2 == arg_ch)) {\n            arg_8h[arg_ch + -1] = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 362
    },
    "000376d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_48h\n\nint32_t __cdecl fcn.000376d0(uint arg_8h, uint arg_ch, uint arg_10h, char *arg_14h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    uint var_48h;\n    uint var_40h;\n    char *var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint *var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_14h;\n    uint32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00036330(0x208);\n    if (var_4h == 0) {\n        iVar2 = 0;\n    }\n    else {\n        for (var_ch = 0; var_ch < 100; var_ch = var_ch + 1) {\n            fcn.0004a010(arg_14h, 0x104, 0x850108c0, arg_8h);\n            fcn.00037500(var_4h, 0x104, arg_14h);\n            fcn.0007f6d0(&var_1ch, var_4h);\n            var_34h = 0x18;\n            var_30h = 0;\n            var_28h = 0x40;\n            var_2ch = &var_1ch;\n            var_24h = 0;\n            var_20h = 0;\n            iVar2 = fcn.0001ed40(&var_8h, 2, &var_34h, &var_14h, 0, 0x100, 0, 2, 0, 0, 0);\n            if (iVar2 == 0) {\n                fcn.0007f6c4(var_8h);\n                break;\n            }\n            arg_8h_00 = fcn.0007f742(iVar2);\n            fcn.00036610(arg_8h_00);\n        }\n        fcn.00036460(var_4h);\n        var_3ch = arg_14h;\n        do {\n            cVar1 = *var_3ch;\n            var_3ch = var_3ch + 1;\n        } while (cVar1 != '\\0');\n        iVar2 = var_3ch - (arg_14h + 1);\n    }\n    return iVar2;\n}\n",
        "token_count": 594
    },
    "00037820": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00037820(uint arg_8h, int32_t arg_ch)\n\n{\n    int16_t iVar1;\n    int32_t arg_8h_00;\n    uint uVar2;\n    uchar *puVar3;\n    int32_t iVar4;\n    uint var_2ch;\n    uint var_24h;\n    int16_t *var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_4h;\n    \n    arg_8h_00 = fcn.00036c20(arg_8h, 0);\n    if (arg_8h_00 == -1) {\n        uVar2 = 0xffffffff;\n    }\n    else {\n        puVar3 = fcn.00036330(0x218);\n        if (puVar3 == NULL) {\n            fcn.00036970(arg_8h_00);\n            fcn.00036610(0xc);\n            uVar2 = 0xffffffff;\n        }\n        else {\n            *puVar3 = 0;\n            *(puVar3 + 4) = 0;\n            var_4h = fcn.0007f7ea(arg_ch, 0x5c);\n            if (var_4h != 0) {\n                arg_ch = var_4h + 1;\n            }\n            fcn.000384e0(arg_ch, puVar3 + 0xc, 0x104);\n            var_20h = puVar3 + 0xc;\n            do {\n                iVar1 = *var_20h;\n                var_20h = var_20h + 1;\n            } while (iVar1 != 0);\n            *(puVar3 + 8) = (var_20h - (puVar3 + 0xe) >> 1) << 1;\n            iVar4 = fcn.0007f6dc(arg_8h_00, &var_ch, puVar3, *(puVar3 + 8) + 0x10, 10);\n            fcn.00036970(arg_8h_00);\n            if (iVar4 == 0) {\n                uVar2 = 0;\n            }\n            else {\n                uVar2 = fcn.0007f742(iVar4);\n                fcn.00036610(uVar2);\n                uVar2 = 0xffffffff;\n            }\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 553
    },
    "000379d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000379d0(int32_t arg_8h, uchar *arg_ch, int32_t arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if ((arg_ch == NULL) || (arg_10h == 0)) {\n        return 0;\n    }\n    *arg_ch = 0;\n    if ((*0x8509294c == 0) && (cVar1 = (**0x8500d004)(),  cVar1 == '\\0')) {\n        iVar2 = (**0x8500d0e4)(&fcn.000379d0::var_4h, 0, 0, 0, 0, 0x85033950, 0x8509294c);\n        if (iVar2 != 0) {\n            return 0;\n        }\n        var_4h = 0;\n        var_8h = 0;\n        var_ch = 0x37a39;\n        fcn.0007f772();\n        var_ch = var_4h;\n        fcn.0007f6c4();\n        if (*0x8509294c == 0) {\n            *arg_ch = 0;\n            return 0;\n        }\n    }\n    if (arg_8h == 0) {\n        var_ch = (**0x8500d1c8)();\n    }\n    else {\n        cVar1 = (**0x8500d004)();\n        if (cVar1 != '\\0') {\n            return 0;\n        }\n        iVar2 = (**0x8500d1dc)(arg_8h, &fcn.000379d0::var_ch);\n        if (iVar2 != 0) {\n            return 0;\n        }\n    }\n    var_8h = var_ch + *0x8509294c;\n    fcn.0007f7e4(arg_ch, var_8h, arg_10h);\n    arg_ch[arg_10h + -1] = 0;\n    if (arg_8h != 0) {\n        (**0x8500d2e4)();\n    }\n    return 1;\n}\n",
        "token_count": 499
    },
    "00037ae0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00037ae0(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    if (*0x85092958 == 0) {\n        iVar1 = (**0x8500d0e4)(&var_4h, 0, 0, 0, 0, 0x85033b50, 0x85092958);\n        if (iVar1 != 0) {\n            return 0;\n        }\n        fcn.0007f772(var_4h, 0, 0);\n        fcn.0007f6c4(var_4h);\n        if (*0x85092958 == 0) {\n            return 0;\n        }\n    }\n    *arg_8h = *0x85092958;\n    return 1;\n}\n",
        "token_count": 189
    },
    "00037be0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00037be0(uint *arg_8h)\n\n{\n    if (arg_8h[3] != 0) {\n        fcn.00036460(arg_8h[3]);\n    }\n    *arg_8h = 0;\n    arg_8h[1] = 0;\n    arg_8h[2] = 0;\n    arg_8h[3] = 0;\n    return;\n}\n",
        "token_count": 100
    },
    "00037c10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00037c10(int32_t *arg_8h)\n\n{\n    bool bVar1;\n    uint var_8h;\n    uint var_1h;\n    \n    (**0x8500d19c)(arg_8h[3] + 0x28, 0, 0, 0, 0);\n    if ((arg_8h[1] < 1) && (arg_8h[2] != -1)) {\n        bVar1 = false;\n    }\n    else {\n        bVar1 = true;\n    }\n    if (bVar1) {\n        *arg_8h = *arg_8h + 1;\n    }\n    else {\n        arg_8h[2] = arg_8h[2] + 1;\n    }\n    (**0x8500d1b4)(arg_8h[3] + 0x28, 0);\n    if (bVar1) {\n        (**0x8500d19c)(arg_8h[3], 0, 0, 0, 0);\n    }\n    return;\n}\n",
        "token_count": 263
    },
    "00037cc0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00037cc0(int32_t *arg_8h)\n\n{\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    var_4h = 1;\n    (**0x8500d19c)(arg_8h[3] + 0x28, 0, 0, 0, 0, 0, 1);\n    arg_8h[2] = arg_8h[2] + -1;\n    if (arg_8h[2] == 0) {\n        if (arg_8h[1] < 1) {\n            if (0 < *arg_8h) {\n                arg_8h[2] = *arg_8h;\n                *arg_8h = 0;\n                var_8h = arg_8h[3];\n                var_4h = arg_8h[2];\n            }\n        }\n        else {\n            arg_8h[2] = -1;\n            arg_8h[1] = arg_8h[1] + -1;\n            var_8h = arg_8h[3] + 0x14;\n        }\n    }\n    (**0x8500d1b4)(arg_8h[3] + 0x28, 0);\n    if (var_8h != 0) {\n        (**0x8500d1e4)(var_8h, 0, var_4h, 0);\n    }\n    return;\n}\n",
        "token_count": 378
    },
    "00037da0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00037da0(int32_t arg_8h)\n\n{\n    bool bVar1;\n    uint var_4h;\n    \n    (**0x8500d19c)(*(arg_8h + 0xc) + 0x28, 0, 0, 0, 0);\n    bVar1 = *(arg_8h + 8) != 0;\n    if (bVar1) {\n        *(arg_8h + 4) = *(arg_8h + 4) + 1;\n    }\n    else {\n        *(arg_8h + 8) = 0xffffffff;\n    }\n    (**0x8500d1b4)(*(arg_8h + 0xc) + 0x28, 0);\n    if (bVar1) {\n        (**0x8500d19c)(*(arg_8h + 0xc) + 0x14, 0, 0, 0, 0);\n    }\n    return;\n}\n",
        "token_count": 226
    },
    "00037e30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00037e30(int32_t *arg_8h)\n\n{\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    var_4h = 1;\n    (**0x8500d19c)(arg_8h[3] + 0x28, 0, 0, 0, 0, 0, 1);\n    arg_8h[2] = 0;\n    if (arg_8h[1] < 1) {\n        if (0 < *arg_8h) {\n            arg_8h[2] = *arg_8h;\n            *arg_8h = 0;\n            var_8h = arg_8h[3];\n            var_4h = arg_8h[2];\n        }\n    }\n    else {\n        arg_8h[2] = -1;\n        arg_8h[1] = arg_8h[1] + -1;\n        var_8h = arg_8h[3] + 0x14;\n    }\n    (**0x8500d1b4)(arg_8h[3] + 0x28, 0);\n    if (var_8h != 0) {\n        (**0x8500d1e4)(var_8h, 0, var_4h, 0);\n    }\n    return;\n}\n",
        "token_count": 353
    },
    "00037f00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00037f00(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if (arg_8h == NULL) {\n        var_4h = -0x3fffff11;\n    }\n    else {\n        iVar1 = fcn.00035da0();\n        if (iVar1 == 0) {\n            var_4h = -0x3fffffff;\n        }\n        else {\n            iVar2 = fcn.0007f85c(1);\n            iVar3 = fcn.00036330(iVar2 + 0x24);\n            *arg_8h = iVar3;\n            if (*arg_8h == 0) {\n                var_4h = -0x3fffff66;\n            }\n            else {\n                var_4h = fcn.0007f82c(*arg_8h, 1);\n                if (((var_4h == 0) && (var_4h = fcn.0007f868(*arg_8h, 1, 0, 0),  var_4h == 0)) &&\n                   ((iVar1 == 0x1b || (iVar1 == 0x27)))) {\n                    iVar1 = *arg_8h;\n                    var_4h = fcn.0007f862(iVar1 + 0x14, iVar2 + 0x10, 2);\n                    if (var_4h == 0) {\n                        *(iVar1 + 0x18) = 1;\n                        *(iVar1 + 0x1c) = 0x11;\n                        *(iVar1 + 0x1d) = 0;\n                        *(iVar1 + 0x1e) = 0xc;\n                        *(iVar1 + 0x20) = 0;\n                        var_4h = fcn.0007f874(iVar1 + 0x24, 0x8508ecf0, 1);\n                        if (var_4h == 0) {\n                            puVar4 = fcn.0007f856(iVar1 + 0x24, 0);\n                            *puVar4 = 0x1000;\n                            var_4h = fcn.0007f86e(*arg_8h, 1, iVar1 + 0x14, 0);\n                        }\n                    }\n                }\n                if (var_4h != 0) {\n                    fcn.00036460(*arg_8h);\n                    *arg_8h = 0;\n                }\n            }\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 629
    },
    "00038080": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00038080(int32_t arg_8h)\n\n{\n    if (arg_8h != 0) {\n        fcn.00036460(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 49
    },
    "000380d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.000380d0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t var_4h;\n    \n    if (arg_ch == 0) {\n        while( true ) {\n            fcn.0001b570(arg_8h);\n            iVar1 = fcn.00045cc0(arg_8h + 4, 0, 0);\n            if (iVar1 == 0) break;\n            fcn.0007a2b0(arg_8h);\n            for (var_4h = 0; uVar2 = fcn.0007f77e(),  var_4h < uVar2 % 10; var_4h = var_4h + 1) {\n            }\n        }\n    }\n    else if (arg_ch == 1) {\n        while (iVar1 = fcn.00045cc0(arg_8h + 4, 1, 0),  iVar1 != 0) {\n            for (var_4h = 0; uVar2 = fcn.0007f77e(),  var_4h < uVar2 % 10; var_4h = var_4h + 1) {\n            }\n        }\n        do {\n            iVar1 = fcn.00045cc0(arg_8h, 0, 0);\n        } while (iVar1 != 0);\n    }\n    else if (arg_ch == 2) {\n        fcn.0001b570(arg_8h + 8);\n    }\n    return;\n}\n",
        "token_count": 375
    },
    "000381b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000381b0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    if (arg_ch == 0) {\n        fcn.0007a2b0(arg_8h);\n    }\n    else if (arg_ch == 1) {\n        fcn.0007a2b0(arg_8h + 4);\n    }\n    else if (arg_ch == 2) {\n        fcn.0007a2b0(arg_8h + 8);\n    }\n    return;\n}\n",
        "token_count": 119
    },
    "000381f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000381f0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (arg_ch == 0) {\n        fcn.0001b570(arg_8h);\n        iVar1 = fcn.00045cc0(arg_8h + 4, 0, 0);\n        if (iVar1 == 0) {\n            uVar2 = 1;\n        }\n        else {\n            fcn.0007a2b0(arg_8h);\n            uVar2 = 0;\n        }\n    }\n    else if (arg_ch == 1) {\n        iVar1 = fcn.00045cc0(arg_8h + 4, 1, 0);\n        if (iVar1 == 0) {\n            iVar1 = fcn.00045cc0(arg_8h, 0, 0);\n            if (iVar1 == 0) {\n                uVar2 = 1;\n            }\n            else {\n                fcn.0007a2b0(arg_8h + 4);\n                uVar2 = 0;\n            }\n        }\n        else {\n            uVar2 = 0;\n        }\n    }\n    else if (arg_ch == 2) {\n        fcn.0001b570(arg_8h + 8);\n        uVar2 = 1;\n    }\n    else {\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 331
    },
    "00038390": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00038390(int32_t *arg_8h)\n\n{\n    uint var_4h;\n    \n    if ((arg_8h == NULL) || (*arg_8h == 0)) {\n        var_4h = 0;\n    }\n    else {\n        var_4h = 1;\n    }\n    return var_4h;\n}\n",
        "token_count": 82
    },
    "000383c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000383c0(uint *arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_4h;\n    \n    iVar1 = fcn.0007f772(*arg_8h, 0, 0);\n    if (iVar1 == 0) {\n        if (arg_ch != NULL) {\n            *arg_ch = 0xffffffff;\n        }\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = fcn.0007f742(iVar1);\n        fcn.00036610(uVar2);\n        uVar2 = 0xffffffff;\n    }\n    return uVar2;\n}\n",
        "token_count": 156
    },
    "00038480": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00038480(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = (**0x8500d2a0)(*arg_8h, 0, **0x8500d204, 0, &var_4h, 0);\n    if (iVar1 == 0) {\n        (**0x8500d200)(var_4h, 0x1f);\n        (**0x8500d2e4)();\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = fcn.0007f742(iVar1);\n    }\n    return uVar2;\n}\n",
        "token_count": 167
    },
    "000384e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000384e0(char *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint var_18h;\n    uint var_10h;\n    char *var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if (arg_10h == 0) {\n        uVar2 = 0xffffffff;\n    }\n    else {\n        var_ch = arg_8h;\n        do {\n            cVar1 = *var_ch;\n            var_ch = var_ch + 1;\n        } while (cVar1 != '\\0');\n        iVar3 = fcn.0007f880(arg_ch, arg_10h * 2 + -2, &var_4h, arg_8h, var_ch - (arg_8h + 1));\n        if (iVar3 == 0) {\n            *(arg_ch + var_4h) = 0;\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = 0xffffffff;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 262
    },
    "00038560": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00038560(int16_t *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int16_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint var_18h;\n    uint var_10h;\n    int16_t *var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if (arg_10h == 0) {\n        uVar2 = 0xffffffff;\n    }\n    else {\n        var_ch = arg_8h;\n        do {\n            iVar1 = *var_ch;\n            var_ch = var_ch + 1;\n        } while (iVar1 != 0);\n        iVar3 = fcn.0007f87a(arg_ch, arg_10h + -1, &var_4h, arg_8h, (var_ch - (arg_8h + 1) >> 1) << 1);\n        if (iVar3 == 0) {\n            *(arg_ch + var_4h) = 0;\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = 0xffffffff;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 271
    },
    "000385e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.000385e0(int16_t *arg_8h)\n\n{\n    int16_t iVar1;\n    uint var_10h;\n    uint var_8h;\n    int16_t *var_4h;\n    \n    var_4h = arg_8h;\n    do {\n        iVar1 = *var_4h;\n        var_4h = var_4h + 1;\n    } while (iVar1 != 0);\n    return (var_4h - (arg_8h + 1) >> 1) + 1;\n}\n",
        "token_count": 129
    },
    "00038630": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nchar * __cdecl fcn.00038630(char *arg_8h)\n\n{\n    char cVar1;\n    uint var_10h;\n    uint var_8h;\n    char *var_4h;\n    \n    var_4h = arg_8h;\n    do {\n        cVar1 = *var_4h;\n        var_4h = var_4h + 1;\n    } while (cVar1 != '\\0');\n    return var_4h + (1 - (arg_8h + 1));\n}\n",
        "token_count": 118
    },
    "000386d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000386d0(uint *arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    uint *var_4h;\n    \n    var_10h = fcn.00036330(0x1a);\n    if (var_10h == 0) {\n        uVar1 = 0;\n    }\n    else {\n        fcn.00038790(var_10h);\n        var_18h = fcn.000365c0(*arg_8h);\n        var_14h = fcn.000365c0(arg_8h[1]);\n        var_4h = &var_18h;\n        for (var_8h = 0; var_8h < 8; var_8h = var_8h + 1) {\n            *(var_4h + var_8h) = *(var_4h + var_8h) ^ *(var_10h + var_8h);\n        }\n        var_ch = 10;\n        iVar2 = fcn.00035270(&var_18h, var_10h + 10, 8);\n        *(arg_ch + 4) = var_10h;\n        *(arg_ch + 8) = iVar2 + var_ch;\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 343
    },
    "00038c40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00038c40(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint *var_8h;\n    uint var_4h;\n    \n    if (arg_ch == 0) {\n        fcn.000382a0(0x85090c78, &var_4h, 0);\n    }\n    for (var_8h = *0x85090c70; (var_8h != NULL && (var_8h[2] != arg_8h)); var_8h = *var_8h) {\n    }\n    if (arg_ch == 0) {\n        fcn.000382d0(0x85090c78, &var_4h, 0);\n    }\n    return var_8h;\n}\n",
        "token_count": 177
    },
    "00038cb0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00038cb0(uint arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.000382a0(0x85090c78, &var_4h, 0);\n    iVar1 = fcn.00038c40(arg_8h, 1);\n    if (iVar1 != 0) {\n        fcn.0007f718(arg_ch, iVar1 + 0x226, arg_10h);\n        *(arg_ch + -2 + arg_10h * 2) = 0;\n    }\n    fcn.000382d0(0x85090c78, &var_4h, 0);\n    return (-(iVar1 != 0) & 0x3ffffff2) + 0xc000000e;\n}\n",
        "token_count": 208
    },
    "00038d30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00038d30(uint arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.000382a0(0x85090c78, &var_4h, 0);\n    iVar1 = fcn.00038c40(arg_8h, 1);\n    if (iVar1 != 0) {\n        fcn.0007f718(arg_ch, iVar1 + 0x26, arg_10h);\n        *(arg_ch + -2 + arg_10h * 2) = 0;\n    }\n    fcn.000382d0(0x85090c78, &var_4h, 0);\n    return (-(iVar1 != 0) & 0x3ffffff2) + 0xc000000e;\n}\n",
        "token_count": 208
    },
    "00038db0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00038db0(uint arg_8h, uint *arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_10h < 6) {\n        iVar1 = 0x21590068;\n    }\n    else {\n        fcn.000382a0(0x85090c78, &var_4h, 0);\n        iVar1 = fcn.00038c40(arg_8h, 1);\n        if (iVar1 != 0) {\n            *arg_ch = *(iVar1 + 0x20);\n            *(arg_ch + 1) = *(iVar1 + 0x24);\n        }\n        fcn.000382d0(0x85090c78, &var_4h, 0);\n        iVar1 = (-(iVar1 != 0) & 0x3ffffff2) + 0xc000000e;\n    }\n    return iVar1;\n}\n",
        "token_count": 232
    },
    "00038e30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00038e30(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.000382a0(0x85090c78, &var_4h, 0);\n    iVar1 = fcn.00038c40(arg_8h, 1);\n    if (iVar1 != 0) {\n        *arg_ch = *(iVar1 + 0x430);\n    }\n    fcn.000382d0(0x85090c78, &var_4h, 0);\n    return (-(iVar1 != 0) & 0x3ffffff2) + 0xc000000e;\n}\n",
        "token_count": 169
    },
    "00038ea0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00038ea0(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.000382a0(0x85090c78, &var_4h, 0);\n    iVar1 = fcn.00038c40(arg_8h, 1);\n    if (iVar1 != 0) {\n        *arg_ch = *(iVar1 + 4);\n    }\n    fcn.000382d0(0x85090c78, &var_4h, 0);\n    return (-(iVar1 != 0) & 0x3ffffff2) + 0xc000000e;\n}\n",
        "token_count": 167
    },
    "00038f10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00038f10(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.000382a0(0x85090c78, &var_4h, 1);\n    iVar1 = fcn.00038c40(arg_8h, 1);\n    if (iVar1 != 0) {\n        *(iVar1 + 4) = arg_ch;\n    }\n    fcn.000382d0(0x85090c78, &var_4h, 1);\n    return (-(iVar1 != 0) & 0x3ffffff2) + 0xc000000e;\n}\n",
        "token_count": 166
    },
    "00038f80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00038f80(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.000382a0(0x85090c78, &var_4h, 1);\n    iVar1 = fcn.00038c40(arg_8h, 1);\n    if (iVar1 != 0) {\n        *(iVar1 + 4) = arg_ch;\n        *(iVar1 + 0x44c) = arg_10h;\n        *(iVar1 + 0x450) = arg_14h;\n        *(iVar1 + 0x454) = arg_18h;\n        *(iVar1 + 0x458) = arg_1ch;\n    }\n    fcn.000382d0(0x85090c78, &var_4h, 1);\n    return (-(iVar1 != 0) & 0x3ffffff2) + 0xc000000e;\n}\n",
        "token_count": 255
    },
    "00039020": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00039020(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.000382a0(0x85090c78, &var_4h, 1);\n    iVar1 = fcn.00038c40(arg_8h, 1);\n    if (iVar1 != 0) {\n        if (arg_10h < 7) {\n            var_ch = arg_10h;\n        }\n        else {\n            var_ch = 6;\n        }\n        fcn.0007f904(iVar1 + 0x20, arg_ch, var_ch);\n    }\n    fcn.000382d0(0x85090c78, &var_4h, 1);\n    return (-(iVar1 != 0) & 0x3ffffff2) + 0xc000000e;\n}\n",
        "token_count": 226
    },
    "000390b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.000390b0(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.000382a0(0x85090c78, &var_4h, 1);\n    iVar1 = fcn.00038c40(arg_8h, 1);\n    if (iVar1 != 0) {\n        fcn.0007f718(iVar1 + 0x226, arg_ch, 0x100);\n        *(iVar1 + 0x424) = 0;\n    }\n    fcn.000382d0(0x85090c78, &var_4h, 1);\n    return (-(iVar1 != 0) & 0x3ffffff2) + 0xc000000e;\n}\n",
        "token_count": 193
    },
    "00039130": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00039130(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.000382a0(0x85090c78, &var_4h, 0);\n    iVar1 = fcn.00038c40(arg_8h, 1);\n    if (iVar1 != 0) {\n        *arg_ch = *(iVar1 + 0x10);\n    }\n    fcn.000382d0(0x85090c78, &var_4h, 0);\n    return (-(iVar1 != 0) & 0x3ffffff2) + 0xc000000e;\n}\n",
        "token_count": 168
    },
    "000391a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.000391a0(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.000382a0(0x85090c78, &var_4h, 0);\n    iVar1 = fcn.00038c40(arg_8h, 1);\n    if (iVar1 != 0) {\n        *arg_ch = *(iVar1 + 0x14);\n    }\n    fcn.000382d0(0x85090c78, &var_4h, 0);\n    return (-(iVar1 != 0) & 0x3ffffff2) + 0xc000000e;\n}\n",
        "token_count": 169
    },
    "00039210": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00039210(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.000382a0(0x85090c78, &var_4h, 0);\n    iVar1 = fcn.00038c40(arg_8h, 1);\n    if ((iVar1 != 0) && (*(iVar1 + 0x10) == 0)) {\n        *arg_ch = *(iVar1 + 0x448);\n    }\n    fcn.000382d0(0x85090c78, &var_4h, 0);\n    return (-(iVar1 != 0) & 0x3ffffff2) + 0xc000000e;\n}\n",
        "token_count": 182
    },
    "00039280": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00039280(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.000382a0(0x85090c78, &var_4h, 0);\n    iVar1 = fcn.00038c40(arg_8h, 1);\n    if (iVar1 != 0) {\n        *arg_ch = *(iVar1 + 0x440);\n    }\n    fcn.000382d0(0x85090c78, &var_4h, 0);\n    return (-(iVar1 != 0) & 0x3ffffff2) + 0xc000000e;\n}\n",
        "token_count": 168
    },
    "000392f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __cdecl fcn.000392f0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.000382a0(0x85090c78, &var_4h, 0);\n    iVar1 = fcn.00038c40(arg_8h, 1);\n    fcn.000382d0(0x85090c78, &var_4h, 0);\n    return iVar1 != 0;\n}\n",
        "token_count": 118
    },
    "00039340": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00039340(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0x21590005;\n    fcn.000382a0(0x85090c78, &var_8h, 0);\n    var_ch = *0x85090c70;\n    do {\n        if (var_ch == NULL) {\ncode_r0x0003939e:\n            fcn.000382d0(0x85090c78, &var_8h, 0);\n            return var_4h;\n        }\n        if (var_ch[3] == arg_8h) {\n            *arg_ch = var_ch[2];\n            var_4h = 0;\n            goto code_r0x0003939e;\n        }\n        var_ch = *var_ch;\n    } while( true );\n}\n",
        "token_count": 212
    },
    "000393c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.000393c0(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint *var_8h;\n    uint var_4h;\n    \n    fcn.000382a0(0x85090c78, &var_4h, 0);\n    var_8h = *0x85090c70;\n    do {\n        if (var_8h == NULL) {\ncode_r0x00039448:\n            fcn.000382d0(0x85090c78, &var_4h, 0);\n            return (-(var_8h != NULL) & 0x3ffffff2) + 0xc000000e;\n        }\n        if (var_8h[4] == 0) {\n            if ((var_8h[1] != 0) && (iVar1 = fcn.0003a550(var_8h[1], arg_8h),  iVar1 != 0)) {\n                *arg_ch = var_8h[2];\n                goto code_r0x00039448;\n            }\n        }\n        else if (var_8h[0x113] == arg_8h) {\n            *arg_ch = var_8h[2];\n            goto code_r0x00039448;\n        }\n        var_8h = *var_8h;\n    } while( true );\n}\n",
        "token_count": 315
    },
    "00039470": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00039470(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint *var_8h;\n    uint var_4h;\n    \n    fcn.000382a0(0x85090c78, &var_4h, 0);\n    var_8h = *0x85090c70;\n    do {\n        if (var_8h == NULL) {\ncode_r0x000394cc:\n            fcn.000382d0(0x85090c78, &var_4h, 0);\n            return (-(var_8h != NULL) & 0x3ffffff2) + 0xc000000e;\n        }\n        if ((var_8h[4] != 0) && (var_8h[0x114] == arg_8h)) {\n            *arg_ch = var_8h[2];\n            goto code_r0x000394cc;\n        }\n        var_8h = *var_8h;\n    } while( true );\n}\n",
        "token_count": 232
    },
    "00039500": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00039500(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint var_21ch;\n    uint var_218h;\n    int32_t var_210h;\n    int32_t var_20ch;\n    uint var_208h;\n    uint var_4h;\n    \n    var_210h = 0;\n    var_20ch = 0;\n    fcn.000382a0(0x85090c78, &var_4h, 0);\n    var_210h = fcn.00038c40(arg_8h, 1);\n    if (var_210h != 0) {\n        var_20ch = *(var_210h + 0x10);\n    }\n    fcn.000382d0(0x85090c78, &var_4h, 0);\n    if (var_210h == 0) {\n        uVar2 = 0xc000000e;\n    }\n    else {\n        fcn.00038db0(arg_8h, &var_218h, 6);\n        cVar1 = (**0x8500d004)();\n        if (cVar1 == '\\0') {\n            fcn.00038cb0(arg_8h, &var_208h, 0x100);\n        }\n        if (var_20ch == 0) {\n            uVar2 = fcn.00052ed0(arg_8h, arg_ch, arg_10h);\n        }\n        else {\n            uVar2 = fcn.00042390(arg_8h, arg_ch, arg_10h);\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 384
    },
    "000395f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.000395f0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = 0;\n    var_8h = 0;\n    fcn.000382a0(0x85090c78, &var_4h, 0);\n    var_ch = fcn.00038c40(arg_8h, 1);\n    if (var_ch != 0) {\n        fcn.000382a0(var_ch + 0x434, &var_10h, 1);\n        var_8h = *(var_ch + 0x428);\n        *(var_ch + 0x428) = arg_ch;\n        *(var_ch + 0x42c) = arg_10h;\n        fcn.000382d0(var_ch + 0x434, &var_10h, 1);\n    }\n    fcn.000382d0(0x85090c78, &var_4h, 0);\n    fcn.00036460(var_8h);\n    return (-(var_ch != 0) & 0x3ffffff2) + 0xc000000e;\n}\n",
        "token_count": 291
    },
    "000396b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.000396b0(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.000382a0(0x85090c78, &var_4h, 0);\n    iVar1 = fcn.00038c40(arg_8h, 1);\n    if (iVar1 != 0) {\n        *(iVar1 + 0x430) = arg_ch;\n    }\n    fcn.000382d0(0x85090c78, &var_4h, 0);\n    return (-(iVar1 != 0) & 0x3ffffff2) + 0xc000000e;\n}\n",
        "token_count": 168
    },
    "00039720": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00039720(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.000382a0(0x85090c78, &var_4h, 0);\n    iVar1 = fcn.00038c40(arg_8h, 1);\n    if (iVar1 != 0) {\n        *(iVar1 + 0x444) = arg_ch;\n        *(iVar1 + 0x448) = arg_10h;\n    }\n    fcn.000382d0(0x85090c78, &var_4h, 0);\n    return (-(iVar1 != 0) & 0x3ffffff2) + 0xc000000e;\n}\n",
        "token_count": 189
    },
    "00039790": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00039790(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.000382a0(0x85090c78, &var_4h, 0);\n    iVar1 = fcn.00038c40(arg_8h, 1);\n    if (iVar1 != 0) {\n        *(iVar1 + 0x10) = arg_ch;\n    }\n    fcn.000382d0(0x85090c78, &var_4h, 0);\n    return (-(iVar1 != 0) & 0x3ffffff2) + 0xc000000e;\n}\n",
        "token_count": 167
    },
    "00039800": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00039800(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.000382a0(0x85090c78, &var_4h, 0);\n    iVar1 = fcn.00038c40(arg_8h, 1);\n    if ((iVar1 != 0) && (*(iVar1 + 0x10) != 0)) {\n        *(iVar1 + 0x458) = arg_ch;\n    }\n    fcn.000382d0(0x85090c78, &var_4h, 0);\n    return (-(iVar1 != 0) & 0x3ffffff2) + 0xc000000e;\n}\n",
        "token_count": 181
    },
    "00039870": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00039870(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t var_8h;\n    uint var_4h;\n    \n    fcn.000382a0(0x85090c78, &var_4h, 0);\n    var_8h = fcn.00038c40(arg_8h, 1);\n    if (var_8h != 0) {\n        if (*(var_8h + 0x448) == 0) {\n            *arg_ch = *(var_8h + 0x444);\n        }\n        else {\n            var_8h = 0;\n        }\n    }\n    fcn.000382d0(0x85090c78, &var_4h, 0);\n    return (-(var_8h != 0) & 0x3ffffff2) + 0xc000000e;\n}\n",
        "token_count": 205
    },
    "000398f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.000398f0(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.000382a0(0x85090c78, &var_4h, 0);\n    iVar1 = fcn.00038c40(arg_8h, 1);\n    if ((iVar1 != 0) && (*(iVar1 + 0x10) != 0)) {\n        *arg_ch = *(iVar1 + 0x454);\n    }\n    fcn.000382d0(0x85090c78, &var_4h, 0);\n    return (-(iVar1 != 0) & 0x3ffffff2) + 0xc000000e;\n}\n",
        "token_count": 183
    },
    "00039960": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00039960(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.000382a0(0x85090c78, &var_4h, 0);\n    iVar1 = fcn.00038c40(arg_8h, 1);\n    if ((iVar1 != 0) && (*(iVar1 + 0x10) != 0)) {\n        *arg_ch = *(iVar1 + 0x450);\n    }\n    fcn.000382d0(0x85090c78, &var_4h, 0);\n    return (-(iVar1 != 0) & 0x3ffffff2) + 0xc000000e;\n}\n",
        "token_count": 182
    },
    "000399d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.000399d0(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.000382a0(0x85090c78, &var_4h, 0);\n    iVar1 = fcn.00038c40(arg_8h, 1);\n    if ((iVar1 != 0) && (*(iVar1 + 0x10) != 0)) {\n        *arg_ch = *(iVar1 + 0x458);\n    }\n    fcn.000382d0(0x85090c78, &var_4h, 0);\n    return (-(iVar1 != 0) & 0x3ffffff2) + 0xc000000e;\n}\n",
        "token_count": 183
    },
    "00039a40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00039a40(uint arg_8h, int32_t *arg_ch, uint *arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    fcn.000382a0(0x85090c78, &var_8h, 0);\n    iVar1 = fcn.00038c40(arg_8h, 1);\n    if (((iVar1 != 0) && (*arg_10h = *(iVar1 + 0x42c),  *(iVar1 + 0x428) != 0)) && (arg_ch != NULL)) {\n        iVar2 = fcn.00036360(*arg_10h);\n        *arg_ch = iVar2;\n        if (*arg_ch == 0) {\n            var_4h = 0x21590004;\n        }\n        else {\n            fcn.0007f904(*arg_ch, *(iVar1 + 0x428), *arg_10h);\n        }\n    }\n    fcn.000382d0(0x85090c78, &var_8h, 0);\n    if (iVar1 == 0) {\n        var_10h = 0xc000000e;\n    }\n    else {\n        var_10h = var_4h;\n    }\n    return var_10h;\n}\n",
        "token_count": 331
    },
    "00039b10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00039b10(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = 0;\n    fcn.000382a0(0x85090c78, &var_8h, 0);\n    iVar1 = fcn.00038c40(arg_8h, 1);\n    if ((iVar1 != 0) && (*(iVar1 + 0x428) != 0)) {\n        iVar1 = fcn.00068930(*(iVar1 + 0x428));\n        var_4h = iVar1 != 0;\n    }\n    fcn.000382d0(0x85090c78, &var_8h, 0);\n    return var_4h;\n}\n",
        "token_count": 202
    },
    "00039ba0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00039ba0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int32_t iVar1;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = 0;\n    fcn.000382a0(0x85090c78, &var_8h, 0);\n    iVar1 = fcn.00038c40(arg_8h, 1);\n    if ((iVar1 != 0) && (*(iVar1 + 0x428) != 0)) {\n        iVar1 = fcn.00069030(*(iVar1 + 0x428));\n        var_4h = iVar1 != 0;\n    }\n    fcn.000382d0(0x85090c78, &var_8h, 0);\n    return var_4h;\n}\n",
        "token_count": 220
    },
    "00039c30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00039c30(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = 0;\n    fcn.000382a0(0x85090c78, &var_8h, 0);\n    iVar1 = fcn.00038c40(arg_8h, 1);\n    if ((iVar1 != 0) && (*(iVar1 + 0x428) != 0)) {\n        iVar1 = fcn.00069890(*(iVar1 + 0x428));\n        var_4h = iVar1 != 0;\n    }\n    fcn.000382d0(0x85090c78, &var_8h, 0);\n    return var_4h;\n}\n",
        "token_count": 208
    },
    "00039cc0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00039cc0(uint arg_8h, uint *arg_ch)\n\n{\n    uint16_t uVar1;\n    uint *arg_ch_00;\n    uint uVar2;\n    int32_t iVar3;\n    bool bVar4;\n    uint var_28h;\n    int32_t var_24h;\n    uint16_t *var_1ch;\n    uint16_t *var_18h;\n    uint *var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    arg_ch_00 = fcn.00036360(0x468);\n    if (arg_ch_00 == NULL) {\n        var_ch = 0x21590004;\n    }\n    else {\n        fcn.0007f916(arg_ch_00, 0, 0x468);\n        *arg_ch_00 = 0;\n        fcn.0007f6d6(arg_ch_00 + 0x26, 0x100, 0x850108d0, arg_8h);\n        *(arg_ch_00 + 0x89) = 0;\n        fcn.0007f718(arg_ch_00 + 0x226, arg_ch_00 + 0x36, 0x100);\n        *(arg_ch_00 + 0x109) = 0;\n        if (*(arg_ch_00 + 0x226) == 0x24) {\n            arg_ch_00[5] = 1;\n        }\n        uVar2 = fcn.0003b370(arg_ch_00 + 0x226);\n        arg_ch_00[3] = uVar2;\n        arg_ch_00[0x10c] = 9;\n        fcn.0003a180(arg_ch_00 + 0x26, arg_ch_00);\n        fcn.000380a0(arg_ch_00 + 0x10d);\n        fcn.00034d00(arg_ch_00 + 6);\n        fcn.000382a0(0x85090c78, &var_8h, 1);\n        if (*0x85090c74 < 0x65) {\n            var_14h = *0x85090c70;\n            var_4h = 0;\n            while ((var_14h != NULL && (iVar3 = fcn.0007f706(arg_ch_00 + 0x26, var_14h + 0x26),  iVar3 != 0))) {\n                var_14h = *var_14h;\n                var_4h = var_4h + 1;\n            }\n            if (var_14h == NULL) {\n                arg_ch_00[2] = var_4h + 1;\n                var_18h = 0x850108e8;\n                var_1ch = arg_ch_00 + 0x226;\n                do {\n                    uVar1 = *var_1ch;\n                    bVar4 = uVar1 < *var_18h;\n                    if (uVar1 != *var_18h) {\ncode_r0x00039ecb:\n                        var_24h = (1 - bVar4) - (bVar4 != 0);\n                        goto code_r0x00039ed3;\n                    }\n                    if (uVar1 == 0) break;\n                    uVar1 = var_1ch[1];\n                    bVar4 = uVar1 < var_18h[1];\n                    if (uVar1 != var_18h[1]) goto code_r0x00039ecb;\n                    var_1ch = var_1ch + 2;\n                    var_18h = var_18h + 2;\n                } while (uVar1 != 0);\n                var_24h = 0;\ncode_r0x00039ed3:\n                if (var_24h == 0) {\n                    arg_ch_00[0x110] = 1;\n                    *0x85090c6c = arg_ch_00[2];\n                }\n                *arg_ch_00 = *0x85090c70;\n                *0x85090c74 = *0x85090c74 + 1;\n                *0x85090c70 = arg_ch_00;\n                if (arg_ch != NULL) {\n                    *arg_ch = arg_ch_00[2];\n                }\n                fcn.000382d0(0x85090c78, &var_8h, 1);\n                var_ch = 0;\n            }\n            else {\n                fcn.000382d0(0x85090c78, &var_8h, 1);\n                fcn.00036460(arg_ch_00);\n                var_ch = 0;\n            }\n        }\n        else {\n            fcn.000382d0(0x85090c78, &var_8h, 1);\n            var_ch = 0xc000008c;\n        }\n    }\n    return var_ch;\n}\n",
        "token_count": 1109
    },
    "00039f50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00039f50(int32_t arg_8h)\n\n{\n    uint *puVar1;\n    uint *var_10h;\n    uint var_ch;\n    uint *var_8h;\n    uint var_4h;\n    \n    fcn.000382a0(0x85090c78, &var_4h, 1);\n    var_10h = *0x85090c70;\n    var_8h = NULL;\n    while (var_10h != NULL) {\n        puVar1 = *var_10h;\n        if (((var_10h[4] == 0) || (arg_8h == 0)) && ((var_10h[4] != 0 || (arg_8h != 0)))) {\n            var_8h = var_10h;\n            var_10h = puVar1;\n        }\n        else {\n            if (var_8h == NULL) {\n                *0x85090c70 = *var_10h;\n            }\n            else {\n                *var_8h = *var_10h;\n            }\n            *0x85090c74 = *0x85090c74 + -1;\n            fcn.00038300(var_10h + 0x10d);\n            fcn.00034d90(var_10h + 6);\n            fcn.00036460(var_10h[0x10a]);\n            fcn.00036460(var_10h);\n            var_10h = puVar1;\n        }\n    }\n    fcn.000382d0(0x85090c78, &var_4h, 1);\n    return;\n}\n",
        "token_count": 370
    },
    "0003a040": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0003a040(uint arg_8h, uint arg_ch)\n\n{\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    fcn.000382a0(0x85090c78, &var_4h, 0);\n    var_8h = fcn.00038c40(arg_8h, 1);\n    if (var_8h != 0) {\n        *(var_8h + 0x1c) = arg_ch;\n        var_ch = *(var_8h + 0x18);\n    }\n    fcn.000382d0(0x85090c78, &var_4h, 0);\n    if (var_8h != 0) {\n        fcn.00034dc0(&var_ch);\n    }\n    return;\n}\n",
        "token_count": 200
    },
    "0003a0b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0003a0b0(uint arg_8h)\n\n{\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = 0;\n    var_4h = 0xc000000e;\n    fcn.000382a0(0x85090c78, &var_8h, 0);\n    var_ch = fcn.00038c40(arg_8h, 1);\n    if (var_ch != 0) {\n        var_10h = *(var_ch + 0x18);\n    }\n    fcn.000382d0(0x85090c78, &var_8h, 0);\n    if (var_ch == 0) {\n        var_4h = 0xc000000e;\n    }\n    else {\n        fcn.00034df0(&var_10h, 0xffffffff);\n        fcn.000382a0(0x85090c78, &var_8h, 0);\n        var_ch = fcn.00038c40(arg_8h, 1);\n        if (var_ch != 0) {\n            var_4h = *(var_ch + 0x1c);\n        }\n        fcn.000382d0(0x85090c78, &var_8h, 0);\n        if (var_ch == 0) {\n            var_4h = 0xc000000e;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 343
    },
    "0003a180": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0003a180(int16_t *arg_8h, int32_t arg_ch)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    int32_t iVar3;\n    uint var_68h;\n    uint var_60h;\n    int16_t *var_5ch;\n    uint var_58h;\n    uint var_50h;\n    int16_t *var_4ch;\n    uint var_48h;\n    uint var_40h;\n    int16_t *var_3ch;\n    uint var_38h;\n    uint var_30h;\n    int16_t *var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = 0;\n    var_ch = (**0x8500d060)();\n    if (var_ch < 0x620) {\n        var_18h = 0;\n    }\n    else if (*(arg_ch + 0x14) == 0) {\n        var_18h = fcn.0003d8e0(0x8508ebc0, 0, &var_14h);\n        if (var_18h == 0) {\n            for (var_4h = 0; *(var_14h + var_4h * 4) != 0; var_4h = var_4h + 1) {\n                var_24h = 0;\n                var_18h = fcn.0003d8e0(*(var_14h + var_4h * 4), 0, &var_24h);\n                if (var_18h != 0) {\n                    fcn.0003d880(var_14h);\n                    var_14h = 0;\n                    goto code_r0x0003a4c1;\n                }\n                for (var_1ch = 0; *(var_24h + var_1ch * 4) != 0; var_1ch = var_1ch + 1) {\n                    iVar3 = fcn.0007f724(*(var_24h + var_1ch * 4), 0x5c);\n                    if (iVar3 != 0) {\n                        var_2ch = iVar3 + 2;\n                        do {\n                            iVar1 = *var_2ch;\n                            var_2ch = var_2ch + 1;\n                        } while (iVar1 != 0);\n                        var_3ch = 0x8508ec80;\n                        piVar2 = var_3ch;\n                        do {\n                            var_3ch = piVar2;\n                            piVar2 = var_3ch + 1;\n                        } while (*var_3ch != 0);\n                        if ((var_2ch - (iVar3 + 4) >> 1 == var_3ch + 0x3d7b89c0 >> 1) &&\n                           (iVar3 = fcn.0007f706(iVar3 + 2, 0x8508ec80),  iVar3 == 0)) break;\n                    }\n                }\n                if (*(var_24h + var_1ch * 4) == 0) {\n                    fcn.0003d880(var_24h);\n                }\n                else {\n                    var_18h = fcn.0003d720(*(var_24h + var_1ch * 4), 0x8508ec90, &var_8h, &var_20h, &var_10h);\n                    if (var_18h == 0) {\n                        if ((var_8h == 1) || (var_8h == 7)) {\n                            var_4ch = arg_8h;\n                            do {\n                                iVar1 = *var_4ch;\n                                var_4ch = var_4ch + 1;\n                            } while (iVar1 != 0);\n                            if (var_4ch - (arg_8h + 1) >> 1 <= var_10h >> 1) {\n                                var_5ch = arg_8h;\n                                do {\n                                    iVar1 = *var_5ch;\n                                    var_5ch = var_5ch + 1;\n                                } while (iVar1 != 0);\n                                iVar3 = fcn.00037140(arg_8h, var_20h, var_5ch - (arg_8h + 1) >> 1);\n                                if (iVar3 == 0) {\n                                    fcn.00036460(var_20h);\n                                    fcn.0003d880(var_24h);\n                                    break;\n                                }\n                            }\n                            fcn.00036460(var_20h);\n                            fcn.0003d880(var_24h);\n                        }\n                        else {\n                            fcn.00036460(var_20h);\n                            fcn.0003d880(var_24h);\n                        }\n                    }\n                    else {\n                        fcn.0003d880(var_24h);\n                    }\n                }\n            }\n            if (*(var_14h + var_4h * 4) == 0) {\n                var_18h = -0x3fffffff;\n            }\n            else {\n                var_18h = fcn.0003d630(*(var_14h + var_4h * 4), 0x8508eca0, 4, arg_ch + 0x45c);\n                if ((var_18h == 0) &&\n                   (var_18h = fcn.0003d630(*(var_14h + var_4h * 4), 0x8508ecb0, 4, arg_ch + 0x460),  var_18h == 0)) {\n                    var_18h = fcn.0003d630(*(var_14h + var_4h * 4), 0x8508ecc8, 4, arg_ch + 0x464);\n                }\n            }\ncode_r0x0003a4c1:\n            fcn.0003d880(var_14h);\n        }\n    }\n    else {\n        var_18h = 0;\n    }\n    return var_18h;\n}\n",
        "token_count": 1420
    },
    "0003a4e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0003a4e0(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = 0xc0000001;\n    *arg_ch = 0;\n    fcn.000382a0(0x85090c78, &var_4h, 0);\n    iVar1 = fcn.00038c40(arg_8h, 1);\n    if (iVar1 != 0) {\n        *arg_ch = *(iVar1 + 0x460);\n        var_ch = 0;\n    }\n    fcn.000382d0(0x85090c78, &var_4h, 0);\n    return var_ch;\n}\n",
        "token_count": 179
    },
    "0003a550": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0003a550(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint16_t *puVar1;\n    uint16_t *puVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint16_t *puVar5;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(arg_8h + 8) == arg_ch) {\n        uVar3 = 1;\n    }\n    else {\n        puVar1 = *(arg_8h + 0x24);\n        puVar2 = *(arg_8h + 0x2c);\n        puVar5 = arg_ch + 0x10;\n        if ((((puVar1 != NULL) && (puVar5 != NULL)) && (*puVar1 == *puVar5)) &&\n           (iVar4 = fcn.00037140(*(puVar1 + 2), *(arg_ch + 0x14), *puVar5 >> 1),  iVar4 == 0)) {\n            return 1;\n        }\n        if (((puVar2 != NULL) && (puVar5 != NULL)) &&\n           ((*puVar2 == *puVar5 && (iVar4 = fcn.00037140(*(puVar2 + 2), *(arg_ch + 0x14), *puVar5 >> 1),  iVar4 == 0))))\n        {\n            return 1;\n        }\n        uVar3 = 0;\n    }\n    return uVar3;\n}\n",
        "token_count": 352
    },
    "0003a630": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.0003a630(void)\n\n{\n    int32_t iVar1;\n    uint var_40h;\n    int32_t var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint *var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_38h = fcn.00035da0();\n    var_18h._0_2_ = 0x14;\n    var_18h._2_2_ = 0x16;\n    var_14h = 0x850108fc;\n    var_10h._0_2_ = 0x1a;\n    var_10h._2_2_ = 0x1c;\n    var_ch = 0x85010914;\n    if (var_38h < 0x1b) {\n        var_4h = fcn.00035b80(0x850109b4, &var_8h);\n        if (var_4h != 0) {\n            return var_4h;\n        }\n        var_4h = fcn.00060f50(var_8h, 0x850109c0, 0x85092960);\n        if (var_4h != 0) {\n            return var_4h;\n        }\n        var_34h = 0x18;\n        var_30h = 0;\n        var_28h = 0x40;\n        var_2ch = &var_18h;\n        var_24h = 0;\n        var_20h = 0;\n        var_4h = fcn.0001ed40(0x85092980, 0x100000, &var_34h, &var_40h, 0, 0, 3, 1, 0x20, 0, 0);\n        if (var_4h != 0) {\n            return var_4h;\n        }\n        var_34h = 0x18;\n        var_30h = 0;\n        var_28h = 0x40;\n        var_2ch = &var_10h;\n        var_24h = 0;\n        var_20h = 0;\n        var_4h = fcn.0001ed40(0x85092984, 0x100000, &var_34h, &var_40h, 0, 0, 3, 1, 0x20, 0, 0);\n        if (var_4h != 0) {\n            fcn.0007f6c4(*0x85092980);\n            return var_4h;\n        }\n    }\n    else {\n        var_4h = fcn.00035b80(0x85010930, &var_1ch);\n        if (var_4h != 0) {\n            return var_4h;\n        }\n        var_4h = fcn.00060f50(var_1ch, 0x8501093c, 0x8509296c);\n        if (var_4h != 0) {\n            return var_4h;\n        }\n        var_4h = fcn.00060f50(var_1ch, 0x85010950, 0x85092970);\n        if (var_4h != 0) {\n            return var_4h;\n        }\n        var_4h = fcn.00060f50(var_1ch, 0x85010964, 0x85092964);\n        if (var_4h != 0) {\n            return var_4h;\n        }\n        var_4h = fcn.00060f50(var_1ch, 0x85010974, 0x85092968);\n        if (var_4h != 0) {\n            return var_4h;\n        }\n        var_4h = fcn.00060f50(var_1ch, 0x85010988, 0x85092974);\n        if (var_4h != 0) {\n            return var_4h;\n        }\n        var_4h = fcn.00060f50(var_1ch, 0x85010994, 0x85092978);\n        if (var_4h != 0) {\n            return var_4h;\n        }\n        iVar1 = fcn.00060f50(var_1ch, 0x850109a4, 0x8509297c);\n        if (iVar1 != 0) {\n            return iVar1;\n        }\n    }\n    *0x8509295c = 1;\n    return 0;\n}\n",
        "token_count": 1105
    },
    "0003a8b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0003a8b0(void)\n\n{\n    *0x8509295c = 0;\n    if (*0x85092984 != 0) {\n        fcn.0007f6c4(*0x85092984);\n    }\n    if (*0x85092980 != 0) {\n        fcn.0007f6c4(*0x85092980);\n    }\n    return;\n}\n",
        "token_count": 94
    },
    "0003a8f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0003a8f0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = arg_8h;\n    var_8h = 0;\n    iVar1 = fcn.0007f886(*0x85092980, 0, 0, 0, &var_14h, 0x12003c, &var_ch, 8, arg_ch, arg_10h);\n    if (iVar1 == 0) {\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 164
    },
    "0003a950": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.0003a950(uint arg_8h, uint *arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_24h;\n    int32_t var_20h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_48h = 0;\n    var_44h = 0;\n    var_40h = 0;\n    if (*0x8509295c == 0) {\n        var_4h = 0x21590001;\n    }\n    else if (*0x8509296c == 0) {\n        var_44h = arg_8h;\n        var_4h = (**0x85092960)(&var_48h, &var_3ch);\n        if (var_4h == 0) {\n            if (var_20h == 3) {\n                var_8h = arg_8h;\n            }\n            else {\n                if (var_20h != 4) {\n                    return -0x3ffffcb0;\n                }\n                var_8h = var_24h;\n            }\n            var_4h = fcn.00039340(var_38h, arg_ch);\n            if (((var_4h == 0) && (var_4h = fcn.00038db0(*arg_ch, arg_14h, arg_18h),  var_4h == 0)) &&\n               (var_4h = fcn.0003b530(var_38h, arg_10h),  var_4h == 0)) {\n                var_4h = fcn.0003a8f0(var_8h, arg_1ch, arg_20h);\n            }\n        }\n    }\n    else {\n        var_4h = fcn.0003acf0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n    }\n    return var_4h;\n}\n",
        "token_count": 505
    },
    "0003aa60": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0003aa60(uint arg_8h, uint arg_ch, int32_t *arg_10h, uint32_t *arg_14h, int32_t arg_18h)\n\n{\n    uint var_ach;\n    uint var_a8h;\n    int32_t var_a4h;\n    uint32_t *var_a0h;\n    uint32_t var_9ch;\n    int32_t var_98h;\n    uint var_94h;\n    uint var_78h;\n    uint var_30h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_a0h = NULL;\n    var_4h = 0;\n    var_8h = 0;\n    if (arg_18h == 0) {\n        var_8h = (**0x85092970)(arg_8h, arg_14h);\n    }\n    else {\n        var_8h = (**0x85092970)(arg_8h, arg_14h);\n    }\n    var_98h = var_8h;\n    if (((var_8h == 0) && (var_98h = fcn.00039340(*arg_14h, &var_4h),  var_98h == 0)) &&\n       (var_8h = var_98h,  var_98h = fcn.000399d0(var_4h, &var_a4h),  var_98h == 0)) {\n        if ((var_a4h == 1) && (*arg_10h == var_4h)) {\n            *arg_10h = var_4h;\n            var_98h = 0;\n        }\n        else {\n            var_8h = var_98h;\n            if (arg_18h == 0) {\n                var_8h = (**0x8509297c)(2, &var_a0h);\n            }\n            else {\n                var_8h = (**0x8509297c)(0x17, &var_a0h);\n            }\n            var_98h = var_8h;\n            if (var_8h == 0) {\n                var_98h = 0x2159000e;\n                var_9ch = 0xffffffff;\n                for (var_ch = 0; var_ch < *var_a0h; var_ch = var_ch + 1) {\n                    if (*(var_a0h + var_ch * 0x22 + 0x1e) != '\\0') {\n                        if ((((0 < var_a0h[var_ch * 0x22 + 0x21]) ||\n                             ((-1 < var_a0h[var_ch * 0x22 + 0x21] && (var_a0h[var_ch * 0x22 + 0x20] != 0)))) &&\n                            (var_8h = fcn.00039340(var_a0h[var_ch * 0x22 + 0x12], &var_4h),  var_8h == 0)) &&\n                           (((var_8h = fcn.000399d0(var_4h, &var_a4h),  var_8h == 0 && (var_a4h == 1)) &&\n                            (var_8h = (**0x85092964)(0, var_a0h[var_ch * 0x22 + 0x12], arg_ch, arg_8h, 0, &var_78h, \n                                                     &var_94h),  var_8h == 0)))) {\n                            if ((var_9ch == 0xffffffff) || (var_9ch < var_30h)) {\n                                var_9ch = var_30h;\n                                *arg_10h = var_4h;\n                                *arg_14h = var_a0h[var_ch * 0x22 + 0x12];\n                            }\n                            var_98h = 0;\n                        }\n                    }\n                }\n                (**0x85092978)(var_a0h);\n            }\n        }\n    }\n    return var_98h;\n}\n",
        "token_count": 922
    },
    "0003acf0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl\nfcn.0003acf0(int32_t arg_8h, uint *arg_ch, uint *arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint32_t arg_20h)\n\n{\n    uint32_t var_128h;\n    uint var_124h;\n    uint var_120h;\n    int32_t var_11ch;\n    uint var_104h;\n    uint var_f8h;\n    uint32_t var_d8h;\n    uint var_c4h;\n    int32_t var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_44h;\n    int32_t var_40h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    fcn.0007f916(&var_70h, 0, 0x68);\n    var_bch = 0;\n    var_b8h = 0;\n    var_b4h = 0;\n    var_b0h = 0;\n    var_ach = 0;\n    var_84h = 0;\n    var_80h = 0;\n    var_7ch = 0;\n    var_78h = 0;\n    var_74h = 0;\n    var_c4h = 2;\n    var_c0h = arg_8h;\n    var_8ch = 2;\n    var_88h = *arg_10h;\n    var_4h = fcn.0003aa60(&var_c4h, &var_8ch, arg_ch, &var_124h, 0);\n    if ((var_4h == 0) && (var_4h = (**0x85092964)(0, var_124h, 0, &var_c4h, 0, &var_70h, &var_a8h),  var_4h == 0)) {\n        if ((var_44h == 2) && (var_40h != 0)) {\n            var_8h = var_40h;\n        }\n        else {\n            var_8h = arg_8h;\n        }\n        var_4h = fcn.00038db0(*arg_ch, arg_14h, arg_18h);\n        if (var_4h == 0) {\n            *arg_10h = var_a4h;\n            fcn.0007f916(&var_120h, 0, 0x58);\n            fcn.0007f916(arg_1ch, 0, arg_20h);\n            var_120h._0_2_ = 2;\n            var_11ch = var_8h;\n            var_104h = var_124h;\n            var_4h = (**0x85092968)(&var_120h, &var_a8h);\n            if (var_4h == 0) {\n                if (arg_20h < var_d8h) {\n                    var_128h = arg_20h;\n                }\n                else {\n                    var_128h = var_d8h;\n                }\n                fcn.0007f904(arg_1ch, &var_f8h, var_128h);\n                var_4h = 0;\n            }\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 841
    },
    "0003af00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl\nfcn.0003af00(uint *arg_8h, uint *arg_ch, uint *arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint32_t arg_20h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint *puVar3;\n    uint32_t var_128h;\n    uint var_124h;\n    uint var_120h;\n    uint var_104h;\n    uint var_f8h;\n    uint32_t var_d8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_44h;\n    int32_t var_3ch;\n    int32_t var_38h;\n    int32_t var_34h;\n    int32_t var_30h;\n    uint *var_8h;\n    int32_t var_4h;\n    \n    if (*0x8509295c == 0) {\n        var_4h = 0x21590001;\n    }\n    else if (*0x8509296c == 0) {\n        var_4h = 0x21590001;\n    }\n    else {\n        fcn.0007f916(&var_70h, 0, 0x68);\n        var_c0h = 0;\n        var_bch = 0;\n        var_b8h = 0;\n        var_b4h = 0;\n        var_b0h = 0;\n        var_ach = 0;\n        var_8ch = 0;\n        var_88h = 0;\n        var_84h = 0;\n        var_80h = 0;\n        var_7ch = 0;\n        var_78h = 0;\n        var_74h = 0;\n        var_c4h = 0x17;\n        puVar2 = arg_8h;\n        puVar3 = &var_c4h;\n        for (iVar1 = 7; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *puVar3 = *puVar2;\n            puVar2 = puVar2 + 1;\n            puVar3 = puVar3 + 1;\n        }\n        var_8ch = CONCAT22(var_8ch._2_2_, 0x17);\n        puVar2 = arg_10h;\n        puVar3 = &var_8ch;\n        for (iVar1 = 7; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *puVar3 = *puVar2;\n            puVar2 = puVar2 + 1;\n            puVar3 = puVar3 + 1;\n        }\n        var_4h = fcn.0003aa60(&var_c4h, &var_8ch, arg_ch, &var_124h, 1);\n        if ((var_4h == 0) &&\n           (var_4h = (**0x85092964)(0, var_124h, &var_8ch, &var_c4h, 0, &var_70h, &var_a8h),  var_4h == 0)) {\n            if ((var_44h == 0x17) && ((((var_3ch != 0 || (var_38h != 0)) || (var_34h != 0)) || (var_30h != 0)))) {\n                var_8h = &var_44h;\n            }\n            else {\n                var_8h = arg_8h;\n            }\n            var_4h = fcn.00038db0(*arg_ch, arg_14h, arg_18h);\n            if (var_4h == 0) {\n                fcn.0007f916(arg_10h, 0, 0x80);\n                puVar2 = &var_a8h;\n                for (iVar1 = 7; iVar1 != 0; iVar1 = iVar1 + -1) {\n                    *arg_10h = *puVar2;\n                    puVar2 = puVar2 + 1;\n                    arg_10h = arg_10h + 1;\n                }\n                fcn.0007f916(&var_120h, 0, 0x58);\n                fcn.0007f916(arg_1ch, 0, arg_20h);\n                var_120h._0_2_ = 0x17;\n                puVar2 = var_8h;\n                puVar3 = &var_120h;\n                for (iVar1 = 7; iVar1 != 0; iVar1 = iVar1 + -1) {\n                    *puVar3 = *puVar2;\n                    puVar2 = puVar2 + 1;\n                    puVar3 = puVar3 + 1;\n                }\n                var_104h = var_124h;\n                var_4h = (**0x85092968)(&var_120h, &var_a8h);\n                if (var_4h == 0) {\n                    if (arg_20h < var_d8h) {\n                        var_128h = arg_20h;\n                    }\n                    else {\n                        var_128h = var_d8h;\n                    }\n                    fcn.0007f904(arg_1ch, &var_f8h, var_128h);\n                    var_4h = 0;\n                }\n            }\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 1313
    },
    "0003b160": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_98h\n\nuint32_t __cdecl fcn.0003b160(uint arg_8h)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    uint var_98h;\n    uint var_90h;\n    uint *var_8ch;\n    uint32_t *var_88h;\n    uint32_t var_84h;\n    uint var_80h;\n    uint var_30h;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_88h = NULL;\n    var_84h = 0xffffffff;\n    var_4h = (**0x85092974)(&var_88h);\n    if (var_4h == 0) {\n        for (var_8h = 0; var_8h < *var_88h; var_8h = var_8h + 1) {\n            fcn.0004a010(&var_30h, 0x27, 0x850109cc, var_88h[var_8h * 0x152 + 5]);\n            fcn.000384e0(&var_30h, &var_80h, 0x27);\n            var_8ch = &var_80h;\n            do {\n                iVar1 = *var_8ch;\n                var_8ch = var_8ch + 2;\n            } while (iVar1 != 0);\n            iVar2 = fcn.00037140(arg_8h, &var_80h, var_8ch - (&var_80h + 2) >> 1);\n            if (iVar2 == 0) {\n                var_84h = var_88h[var_8h * 0x152 + 4];\n                break;\n            }\n        }\n        (**0x85092978)(var_88h);\n    }\n    else {\n        var_84h = 0xffffffff;\n    }\n    return var_84h;\n}\n",
        "token_count": 443
    },
    "0003b370": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0003b370(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint var_24h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    uint32_t *var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_18h = 0xffffffff;\n    var_14h = NULL;\n    if (*0x8509295c == 0) {\n        uVar1 = 0xffffffff;\n    }\n    else if (*0x85092974 == 0) {\n        var_10h = 0x1000;\n        while( true ) {\n            fcn.00036460(var_14h);\n            var_14h = fcn.00036330(var_10h);\n            if (var_14h == NULL) break;\n            iVar2 = fcn.0007f886();\n            if (iVar2 == 0) {\n                var_ch = 0;\n                goto code_r0x0003b465;\n            }\n            if ((iVar2 != -0x7ffffffb) && (iVar2 != -0x3fffffdd)) {\n                fcn.00036460(var_14h);\n                return 0xffffffff;\n            }\n            var_10h = var_10h << 2;\n        }\n        uVar1 = 0xffffffff;\n    }\n    else {\n        uVar1 = fcn.0003b160(arg_8h);\n    }\n    return uVar1;\ncode_r0x0003b465:\n    if (*var_14h <= var_ch) {\ncode_r0x0003b519:\n        fcn.00036460(var_14h);\n        return var_18h;\n    }\n    var_1ch = 0;\n    while ((var_1ch < 0x100 && (*(var_14h + var_1ch * 2 + var_ch * 0x104 + 8) != 0x7b))) {\n        var_1ch = var_1ch + 1;\n    }\n    if ((*(var_14h + var_1ch * 2 + var_ch * 0x104 + 8) == 0x7b) &&\n       (iVar2 = fcn.0007f748(arg_8h, var_14h + var_1ch * 2 + var_ch * 0x104 + 8, 0x100 - var_1ch),  iVar2 == 0)) {\n        var_18h = var_14h[var_ch * 0x41 + 1];\n        goto code_r0x0003b519;\n    }\n    var_ch = var_ch + 1;\n    goto code_r0x0003b465;\n}\n",
        "token_count": 634
    },
    "0003b530": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0003b530(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint var_9ch;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    int32_t var_70h;\n    uint32_t var_6ch;\n    int32_t var_68h;\n    int32_t var_64h;\n    uint var_60h;\n    uint32_t var_ch;\n    \n    var_68h = 0;\n    var_80h = 0;\n    var_7ch = 0;\n    var_78h = 0;\n    var_74h = 0;\n    if (*0x8509295c == 0) {\n        var_64h = 0x21590001;\n    }\n    else {\n        var_94h = 0x301;\n        var_90h = 0;\n        var_8ch = 0x200;\n        var_88h = 0x100;\n        var_84h = 1;\n        var_64h = fcn.0007f886(*0x85092984, 0, 0, 0, &var_9ch, 0x120003, &var_94h, 0x24, &var_60h, 0x5c);\n        if (var_64h == 0) {\n            var_70h = var_ch * 0x18;\n            var_68h = fcn.00036330(var_70h);\n            if (var_68h == 0) {\n                var_64h = 0x21590004;\n            }\n            else {\n                var_94h = 0x301;\n                var_84h = 0x102;\n                var_90h = 0;\n                var_64h = fcn.0007f886(*0x85092984, 0, 0, 0, &var_9ch, 0x120003, &var_94h, 0x24, var_68h, var_70h);\n                if (var_64h == 0) {\n                    for (var_6ch = 0; var_6ch < var_ch; var_6ch = var_6ch + 1) {\n                        if (*(var_68h + 4 + var_6ch * 0x18) == arg_8h) {\n                            *arg_ch = *(var_68h + var_6ch * 0x18);\n                            break;\n                        }\n                    }\n                    if (var_6ch == var_ch) {\n                        var_64h = 0x21590005;\n                    }\n                }\n                fcn.00036460(var_68h);\n            }\n        }\n    }\n    return var_64h;\n}\n",
        "token_count": 662
    },
    "0003b6e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0003b6e0(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint var_128h;\n    char *var_124h;\n    uint *var_120h;\n    uint var_11ch;\n    uint var_118h;\n    uint32_t var_ch;\n    uint var_8h;\n    char *var_4h;\n    \n    if (*0x85092988 == 0) {\n        fcn.000380a0(0x85090c84);\n    }\n    fcn.000382a0(0x85090c84, &var_8h, 1);\n    fcn.0007f916(0x85090da8, 0, 0x208);\n    fcn.000382d0(0x85090c84, &var_8h, 1);\n    iVar2 = fcn.000295a0(0x2ff, &var_118h, 0x104, &var_11ch);\n    if (iVar2 == 0) {\n        fcn.000382a0(0x85090c84, &var_8h, 1);\n        var_120h = &var_118h;\n        var_124h = 0x85090c90;\n        do {\n            cVar1 = *var_120h;\n            *var_124h = cVar1;\n            var_120h = var_120h + 1;\n            var_124h = var_124h + 1;\n        } while (cVar1 != '\\0');\n        *0x85090d93 = 0;\n        var_ch = 0;\n        for (var_4h = 0x85090c90; (var_ch < 0x82 && (*var_4h != '\\0')); var_4h = var_4h + 1) {\n            *(var_ch * 4 + -0x7af6f258) = var_4h;\n            var_ch = var_ch + 1;\n            var_4h = fcn.0007f7de(var_4h, 0x2c);\n            if (var_4h == NULL) break;\n            *var_4h = '\\0';\n        }\n        fcn.000382d0(0x85090c84, &var_8h, 1);\n        *0x85092988 = 1;\n    }\n    return;\n}\n",
        "token_count": 542
    },
    "0003b860": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0003b860(void)\n\n{\n    uint var_d0h;\n    uint var_c8h;\n    uint var_20h;\n    uint var_1ch;\n    uint *var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    fcn.0002c2b0(&var_c8h, 0x52);\n    fcn.0007f6d0(&var_d0h, &var_c8h);\n    var_20h = 0x18;\n    var_1ch = 0;\n    var_14h = 0;\n    var_18h = &var_d0h;\n    var_10h = 0;\n    var_ch = 0;\n    var_4h = fcn.0007f7ba(&var_8h, 2, &var_20h);\n    if (var_4h == 0) {\n        var_4h = fcn.0007f88c(var_8h, 0);\n        fcn.0007f6c4(var_8h);\n    }\n    return var_4h;\n}\n",
        "token_count": 274
    },
    "0003b900": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0003b900(uint8_t *arg_8h)\n\n{\n    uint8_t uVar1;\n    bool bVar2;\n    uint var_20h;\n    int32_t var_1ch;\n    uint8_t *var_14h;\n    uint8_t *var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    if (*0x85092988 == 0) {\n        var_8h = 0;\n    }\n    else {\n        fcn.000382a0(0x85090c84, &var_4h, 0);\n        for (var_ch = 0; *(var_ch * 4 + -0x7af6f258) != 0; var_ch = var_ch + 1) {\n            var_10h = arg_8h;\n            var_14h = *(var_ch * 4 + -0x7af6f258);\n            do {\n                uVar1 = *var_14h;\n                bVar2 = uVar1 < *var_10h;\n                if (uVar1 != *var_10h) {\ncode_r0x0003b99c:\n                    var_1ch = (1 - bVar2) - (bVar2 != 0);\n                    goto code_r0x0003b9a4;\n                }\n                if (uVar1 == 0) break;\n                uVar1 = var_14h[1];\n                bVar2 = uVar1 < var_10h[1];\n                if (uVar1 != var_10h[1]) goto code_r0x0003b99c;\n                var_14h = var_14h + 2;\n                var_10h = var_10h + 2;\n            } while (uVar1 != 0);\n            var_1ch = 0;\ncode_r0x0003b9a4:\n            if (var_1ch == 0) {\n                var_8h = 1;\n                break;\n            }\n        }\n        fcn.000382d0(0x85090c84, &var_4h, 0);\n    }\n    return var_8h;\n}\n",
        "token_count": 503
    },
    "0003bae0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0003bae0(int16_t *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int16_t iVar1;\n    uint uVar2;\n    uint var_124h;\n    uint var_11ch;\n    int16_t *var_118h;\n    uint32_t var_114h;\n    uint var_110h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_118h = arg_8h;\n    do {\n        iVar1 = *var_118h;\n        var_118h = var_118h + 1;\n    } while (iVar1 != 0);\n    var_4h = var_118h - (arg_8h + 1) >> 1;\n    var_114h = 0;\n    if ((var_4h < 8) || (0x101 < var_4h)) {\n        uVar2 = 0;\n    }\n    else {\n        fcn.00038560(arg_8h, &var_110h, 0x104);\n        for (var_8h = 0; var_8h < var_4h; var_8h = var_8h + 1) {\n            var_114h = *(&var_110h + var_8h) + var_114h;\n        }\n        *(&var_110h + var_4h) = (var_114h & 0xff) / 0x1a + 'a';\n        *(&var_110h + var_4h + 1) = 'z' - (var_114h & 0xff) % 0x1a;\n        fcn.000384e0(&var_110h + var_4h, arg_ch, 2);\n        fcn.000384e0(&var_110h + var_4h + 1, arg_10h, 2);\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 449
    },
    "0003bc40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nint32_t __fastcall fcn.0003bc40(uint param_1)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.00038bd0(param_1);\n    if (iVar1 == 0) {\n        iVar1 = fcn.0003cc90();\n    }\n    return iVar1;\n}\n",
        "token_count": 95
    },
    "0003bc70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0003bc70(void)\n\n{\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = -0x3fffffff;\n    var_4h = -0x3fffffff;\n    var_ch = fcn.0003df40();\n    if (var_ch == 0) {\n        fcn.00042580();\n        var_ch = fcn.0003bea0();\n        if ((var_ch == 0) && (var_ch = fcn.000409d0(),  var_ch == 0)) {\n            var_8h = fcn.00043580(*0x85092618);\n            var_4h = fcn.00045340(*0x85092618);\n            var_ch = fcn.00041c80();\n            if (var_ch == 0) {\n                if (var_8h == 0) {\n                    var_8h = fcn.00043c50(*0x85092618);\n                }\n                if (var_8h == 0) {\n                    var_8h = fcn.0003e8d0(*0x85092618);\n                }\n                if (var_4h == 0) {\n                    var_4h = fcn.0003f660(*0x85092618);\n                }\n            }\n        }\n    }\n    if (var_ch == 0) {\n        if ((var_4h == 0) || (var_8h == 0)) {\n            var_ch = 0;\n        }\n        else {\n            var_ch = -0x3fffffff;\n        }\n    }\n    return var_ch;\n}\n",
        "token_count": 371
    },
    "0003bd60": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0003bd60(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.00035da0();\n    iVar2 = fcn.00045cc0(0x85092990, 1, 0);\n    if (iVar2 == 0) {\n        fcn.0003a630();\n        fcn.0003bc40();\n        fcn.0004b0a0(0x85035500);\n        if (iVar1 < 0x1b) {\n            var_4h = 0;\n        }\n        else {\n            var_4h = fcn.0003bc70();\n        }\n        if ((var_4h == 0) && (var_4h = fcn.00052cf0(),  var_4h == 0)) {\n            fcn.0003bf10();\n            fcn.00057570();\n        }\n        if (0x1a < iVar1) {\n            fcn.000497d0();\n        }\n    }\n    else {\n        var_4h = 0x21590006;\n    }\n    return var_4h;\n}\n",
        "token_count": 275
    },
    "0003be70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0003be70(void)\n\n{\n    if (*0x8509298c != 0) {\n        (**0x850929a0)(*0x8509298c);\n        *0x8509298c = 0;\n    }\n    return;\n}\n",
        "token_count": 60
    },
    "0003bea0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.0003bea0(void)\n\n{\n    uint var_14h;\n    uint var_10h;\n    uchar var_ch;\n    uchar var_bh;\n    ushort var_ah;\n    uint var_8h;\n    uint var_4h;\n    \n    var_14h = 0;\n    if (*0x8509298c == 0) {\n        var_10h._0_1_ = 0x80;\n        var_10h._1_1_ = 1;\n        var_10h._2_2_ = 0x10;\n        var_ch = 0;\n        var_ah = 8;\n        var_8h = 0x6f6e624c;\n        var_bh = 1;\n        var_4h = 0x640;\n        *0x8509298c = (**0x8509299c)(0, &var_10h);\n        if (*0x8509298c == 0) {\n            var_14h = 0xc0000001;\n        }\n    }\n    else {\n        var_14h = 0;\n    }\n    return var_14h;\n}\n",
        "token_count": 264
    },
    "0003bf10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0003bf10(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint var_18h;\n    int32_t var_44h;\n    uint var_40h;\n    int32_t var_3ch;\n    uint var_38h;\n    int32_t var_34h;\n    uint32_t var_30h;\n    int32_t var_2ch;\n    uint32_t var_28h;\n    uint32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uchar *puStack28;\n    uint var_10h;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x8507bb28;\n    uStack16 = 0x8507b910;\n    var_10h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_10h;\n    puStack28 = &stack0xffffffac;\n    var_38h = 0;\n    iVar1 = fcn.000238e0(0xfffffffe, 0x73, &var_24h, &var_34h);\n    if (iVar1 == 0) {\n        var_38h = (**0x8500d290)(var_34h, var_24h << 6, 0, 0, 0);\n        var_4h = 0;\n        (**0x8500d29c)(var_38h, 0, 0);\n        var_4h = 0xffffffff;\n        for (var_28h = 0; var_28h < var_24h; var_28h = var_28h + 1) {\n            iVar1 = fcn.000392f0(*(var_34h + 0xc + var_28h * 0x40));\n            if (iVar1 == 0) {\n                fcn.00023a70(*(var_34h + var_28h * 0x40), *(var_34h + 8 + var_28h * 0x40), \n                             *(var_34h + 4 + var_28h * 0x40));\n            }\n            else {\n                iVar1 = fcn.00038db0(var_28h, &var_44h, 6);\n                if (iVar1 == 0) {\n                    if ((*(var_34h + 0x14 + var_28h * 0x40) == var_44h) &&\n                       (*(var_34h + 0x18 + var_28h * 0x40) == var_40h)) {\n                        iVar1 = fcn.00038e30(var_28h, &var_3ch);\n                        if (iVar1 == 0) {\n                            var_1ch = *(var_34h + 0x10 + var_28h * 0x40);\n                            if (var_1ch != var_3ch) {\n                                iVar1 = fcn.00039130(var_28h, &var_2ch);\n                                if (iVar1 != 0) goto code_r0x0003bfc6;\n                                if (var_2ch == 0) {\n                                    fcn.00052ca0(var_28h, var_1ch);\n                                }\n                                else {\n                                    fcn.00041b00(var_28h, var_1ch);\n                                }\n                            }\n                            if (*(var_34h + 0x30 + var_28h * 0x40) == 0) {\n                                var_20h = 0;\n                                var_30h = 0;\ncode_r0x0003c231:\n                                fcn.000395f0(var_28h, var_20h, var_30h);\n                            }\n                            else {\n                                var_20h = fcn.00036360(*(var_34h + 0x30 + var_28h * 0x40));\n                                if ((var_20h != 0) &&\n                                   (iVar1 = fcn.00023a20(*(var_34h + var_28h * 0x40), *(var_34h + 8 + var_28h * 0x40), \n                                                         *(var_34h + 4 + var_28h * 0x40), 0, var_20h, \n                                                         *(var_34h + 0x30 + var_28h * 0x40), &var_30h),  iVar1 == 0)) {\n                                    if (var_30h % 8 == 0) {\n                                        var_30h = var_30h >> 3;\n                                        iVar1 = fcn.0006a010(var_20h, var_30h);\n                                        if (iVar1 != 0) goto code_r0x0003c231;\n                                        fcn.00023a70(*(var_34h + var_28h * 0x40), *(var_34h + 8 + var_28h * 0x40), \n                                                     *(var_34h + 4 + var_28h * 0x40));\n                                        fcn.00036460(var_20h);\n                                    }\n                                    else {\n                                        fcn.00023a70(*(var_34h + var_28h * 0x40), *(var_34h + 8 + var_28h * 0x40), \n                                                     *(var_34h + 4 + var_28h * 0x40));\n                                        fcn.00036460(var_20h);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        fcn.00023a70(*(var_34h + var_28h * 0x40), *(var_34h + 8 + var_28h * 0x40), \n                                     *(var_34h + 4 + var_28h * 0x40));\n                    }\n                }\n            }\ncode_r0x0003bfc6:\n        }\n        (**0x8500d298)(var_38h);\n        (**0x8500d2a8)(var_38h);\n        fcn.00023b80(var_34h);\n    }\n    *in_FS_OFFSET = var_10h;\n    return;\n}\n",
        "token_count": 1403
    },
    "0003c280": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0003c280(uint noname_0, uint noname_1, uint arg_10h, uint *arg_14h)\n\n{\n    int32_t iVar1;\n    uint var_5ch;\n    uint var_58h;\n    int32_t var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_40h;\n    uint var_3ch;\n    uint32_t var_38h;\n    uint var_34h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    *arg_14h = 0;\n    iVar1 = fcn.00020a10(arg_10h, 0x1a, 2, &var_54h, 4);\n    if (iVar1 == 0) {\n        var_8h = 0x21590065;\n    }\n    else if (var_54h == 0) {\n        var_8h = 0x21590065;\n    }\n    else {\n        iVar1 = fcn.00020a10(arg_10h, 0x1b, 3, &var_ch, 4);\n        if (iVar1 == 0) {\n            var_8h = 0x21590066;\n        }\n        else {\n            var_3ch = 0;\n            var_38h = 0;\n            var_34h = 0;\n            var_40h = var_ch;\n            var_8h = fcn.00039130(var_54h, &var_4h);\n            if (var_8h == 0) {\n                if (var_4h == 0) {\n                    var_8h = fcn.00052ca0(var_54h, var_ch);\n                }\n                else {\n                    var_8h = fcn.00041b00(var_54h, var_ch);\n                }\n                if (var_8h == 0) {\n                    fcn.000396b0(var_54h, var_ch);\n                    fcn.00038db0(var_54h, &var_5ch, 6);\n                    var_3ch = var_5ch;\n                    var_38h = var_58h;\n                    iVar1 = fcn.00023920(0xfffffffe, 0x73, &var_54h, &var_50h);\n                    if (iVar1 == 0) {\n                        fcn.00023b40(var_50h, var_48h, var_4ch, 0, var_ch);\n                    }\n                    else {\n                        fcn.000238a0(0xfffffffe, 0x73, var_54h, 0, 0, &var_40h);\n                    }\n                }\n            }\n        }\n    }\n    return var_8h;\n}\n",
        "token_count": 647
    },
    "0003c3c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0003c3c0(uint noname_0, uint noname_1, uint arg_10h, uint *arg_14h)\n\n{\n    ushort uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t var_64h;\n    int32_t var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint32_t var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint32_t var_38h;\n    uint var_34h;\n    uint32_t var_24h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_ch = 0;\n    *arg_14h = 0;\n    iVar2 = fcn.00020a10(arg_10h, 0x1a, 2, &var_60h, 4);\n    if (iVar2 == 0) {\n        var_64h = 0x21590065;\n    }\n    else if (var_60h == 0) {\n        var_64h = 0x21590065;\n    }\n    else {\n        iVar2 = fcn.000209a0(arg_10h, 0x1c, 5, &var_4h, &var_54h);\n        if (iVar2 == 0) {\n            var_4h = 0;\n            var_54h = 0;\n        }\n        if (var_4h == 0) {\n            var_ch = 0;\n        }\n        else {\n            if (var_54h % 8 != 0) {\n                return 0x21590066;\n            }\n            var_54h = var_54h >> 3;\n            for (var_8h = 0; var_8h < var_54h; var_8h = var_8h + 1) {\n                uVar1 = fcn.000365f0(var_8h & 0xffff0000 | *(var_4h + var_8h * 8));\n                *(var_4h + var_8h * 8) = uVar1;\n                uVar3 = fcn.000365c0(*(var_4h + 4 + var_8h * 8));\n                *(var_4h + 4 + var_8h * 8) = uVar3;\n            }\n            iVar2 = fcn.0006a010(var_4h, var_54h);\n            if (iVar2 == 0) {\n                return 0x21590066;\n            }\n            var_ch = fcn.00036360(var_54h << 3);\n            if (var_ch == 0) {\n                return 0x21590004;\n            }\n            fcn.0007f904(var_ch, var_4h, var_54h << 3);\n        }\n        var_64h = fcn.000395f0(var_60h, var_ch, var_54h);\n        if (var_64h == 0) {\n            var_64h = 0;\n        }\n        if (var_64h == 0) {\n            iVar2 = fcn.00023920(0xfffffffe, 0x73, &var_60h, &var_50h);\n            if (iVar2 == 0) {\n                if (var_24h < var_54h << 3) {\n                    fcn.00023a70(var_50h, var_48h, var_4ch);\n                    fcn.000238a0(var_50h, var_48h, var_44h, var_ch, var_54h << 3, &var_40h);\n                }\n                else {\n                    fcn.00023b10(var_50h, var_48h, var_4ch);\n                    fcn.000239e0(var_50h, var_48h, var_4ch, 0, var_ch, var_54h << 3);\n                }\n            }\n            else {\n                var_40h = 0;\n                var_3ch = 0;\n                var_38h = 0;\n                var_34h = 0;\n                iVar2 = fcn.00038db0(var_60h, &var_5ch, 6);\n                if ((iVar2 == 0) && (iVar2 = fcn.00038e30(var_60h, &var_40h),  iVar2 == 0)) {\n                    var_3ch = var_5ch;\n                    var_38h = var_58h;\n                    fcn.000238a0(0xfffffffe, 0x73, var_60h, var_ch, var_54h << 3, &var_40h);\n                }\n            }\n        }\n    }\n    return var_64h;\n}\n",
        "token_count": 1129
    },
    "0003c620": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0003c620(void)\n\n{\n    int32_t iVar1;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    for (var_8h = 0; var_8h < 100; var_8h = var_8h + 1) {\n        iVar1 = fcn.00039130(var_8h, &var_4h);\n        if (iVar1 == 0) {\n            if (var_4h == 0) {\n                fcn.00052c50(var_8h);\n            }\n            else {\n                fcn.00041b20(var_8h);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 160
    },
    "0003c680": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0003c680(uint noname_0, uint noname_1, uint noname_2, uint *arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_278h;\n    int16_t *var_274h;\n    int16_t *var_270h;\n    uint var_26ch;\n    uint var_264h;\n    uint *var_260h;\n    int32_t var_25ch;\n    uint var_258h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    char var_28h;\n    char var_27h;\n    uint var_24h;\n    int32_t var_20h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint *var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    *arg_14h = 3;\n    var_8h = 0;\n    var_4h = 0;\n    var_10h = 5;\n    var_ch = &var_54h;\n    var_54h = 0x27;\n    var_50h = 2;\n    var_4ch = 0x28;\n    var_48h = 4;\n    var_44h = 0x29;\n    var_40h = 3;\n    var_3ch = 0x31;\n    var_38h = 2;\n    var_34h = 0x3a;\n    var_30h = 4;\n    fcn.0003c620();\n    var_4h = 0;\n    var_1ch = 0;\n    var_18h = 0;\n    do {\n        if (99 < var_1ch) {\n            var_8h = var_18h;\n            var_25ch = fcn.0002f660(&var_10h, arg_18h, arg_1ch);\ncode_r0x0003cb25:\n            if (var_4h != 0) {\n                for (var_1ch = 0; var_1ch < var_8h; var_1ch = var_1ch + 1) {\n                    fcn.00036460(*(var_4h + var_1ch * 4));\n                }\n            }\n            fcn.00036460(var_4h);\n            return var_25ch;\n        }\n        iVar2 = fcn.000392f0(var_1ch);\n        if (iVar2 != 0) {\n            iVar2 = fcn.00018d00(&var_4h, var_18h << 2, var_18h * 4 + 4);\n            if (iVar2 == -1) {\n                var_25ch = 0x21590004;\n                goto code_r0x0003cb25;\n            }\n            var_25ch = fcn.00038cb0(var_1ch, &var_258h, 0x100);\n            if (var_25ch != 0) goto code_r0x0003cb25;\n            var_260h = &var_258h;\n            do {\n                iVar1 = *var_260h;\n                var_260h = var_260h + 2;\n            } while (iVar1 != 0);\n            var_20h = (var_260h - (&var_258h + 2) >> 1) * 2 + 2;\n            uVar3 = fcn.00036360(var_10h * 0x10 + 0x24 + var_20h);\n            *(var_4h + var_18h * 4) = uVar3;\n            if (*(var_4h + var_18h * 4) == 0) {\n                var_25ch = 0x21590004;\n                goto code_r0x0003cb25;\n            }\n            fcn.0007f916(*(var_4h + var_18h * 4), 0, var_10h << 4);\n            *(*(var_4h + var_18h * 4) + 4) = *(var_4h + var_18h * 4) + 8;\n            **(var_4h + var_18h * 4) = 4;\n            **(*(var_4h + var_18h * 4) + 4) = var_1ch;\n            *(*(var_4h + var_18h * 4) + 0x14) = var_10h * 0x10 + *(var_4h + var_18h * 4);\n            *(*(var_4h + var_18h * 4) + 0x10) = var_20h;\n            fcn.0007f904(*(*(var_4h + var_18h * 4) + 0x14), &var_258h, var_20h);\n            var_25ch = fcn.00038e30(var_1ch, &var_14h);\n            if (var_25ch != 0) goto code_r0x0003cb25;\n            *(*(var_4h + var_18h * 4) + 0x24) = *(var_4h + var_18h * 4) + 0x28;\n            *(*(var_4h + var_18h * 4) + 0x20) = 4;\n            **(*(var_4h + var_18h * 4) + 0x24) = var_14h;\n            var_25ch = fcn.00039a40(var_1ch, 0, &var_24h);\n            if (var_25ch != 0) goto code_r0x0003cb25;\n            *(*(var_4h + var_18h * 4) + 0x34) = *(var_4h + var_18h * 4) + 0x38;\n            *(*(var_4h + var_18h * 4) + 0x30) = 4;\n            **(*(var_4h + var_18h * 4) + 0x34) = var_24h;\n            var_25ch = fcn.00038db0(var_1ch, &var_2ch, 6);\n            if (var_25ch != 0) goto code_r0x0003cb25;\n            *(*(var_4h + var_18h * 4) + 0x40) = 0x24;\n            *(*(var_4h + var_18h * 4) + 0x44) = *(*(var_4h + var_18h * 4) + 0x14) + *(*(var_4h + var_18h * 4) + 0x10);\n            if ((((var_2ch == '\\0') && (var_2ch._1_1_ == '\\0')) && (var_2ch._2_1_ == '\\0')) &&\n               (((var_2ch._3_1_ == '\\0' && (var_28h == '\\0')) && (var_27h == '\\0')))) {\n                var_270h = 0x850109fc;\n                var_274h = *(*(var_4h + var_18h * 4) + 0x44);\n                do {\n                    iVar1 = *var_270h;\n                    *var_274h = iVar1;\n                    var_270h = var_270h + 1;\n                    var_274h = var_274h + 1;\n                } while (iVar1 != 0);\n            }\n            else {\n                fcn.0007f736(*(*(var_4h + var_18h * 4) + 0x44), 0x85010a20, var_2ch, var_2ch._1_1_, var_2ch._2_1_, \n                             var_2ch._3_1_, var_28h, var_27h);\n            }\n            var_18h = var_18h + 1;\n        }\n        var_1ch = var_1ch + 1;\n    } while( true );\n}\n",
        "token_count": 1946
    },
    "0003cc90": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0003cc90(void)\n\n{\n    int32_t iVar1;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    var_ch = fcn.0003d8e0(0x8508eb28, 0, &var_8h);\n    if (var_ch == 0) {\n        for (var_4h = 0; *(var_8h + var_4h * 4) != 0; var_4h = var_4h + 1) {\n            var_ch = fcn.0003d720(*(var_8h + var_4h * 4), 0x85010a5c, &var_10h, &var_18h, &var_14h);\n            if (var_ch == 0) {\n                if (var_10h == 1) {\n                    iVar1 = fcn.0007f748(var_18h, 0x85010a74, 7);\n                    if (iVar1 == 0) {\n                        fcn.00036460(var_18h);\n                    }\n                    else {\n                        iVar1 = fcn.0007f748(var_18h, 0x85010a84, 8);\n                        if (iVar1 == 0) {\n                            fcn.00036460(var_18h);\n                        }\n                        else {\n                            fcn.00039cc0(var_18h, &var_1ch);\n                            fcn.00036460(var_18h);\n                            var_ch = fcn.0003d720(*(var_8h + var_4h * 4), 0x85010a98, &var_10h, &var_18h, &var_14h);\n                            if (var_ch == 0) {\n                                if (var_10h == 1) {\n                                    fcn.000390b0(var_1ch, var_18h);\n                                }\n                                fcn.00036460(var_18h);\n                            }\n                        }\n                    }\n                }\n                else {\n                    fcn.00036460(var_18h);\n                }\n            }\n        }\n        var_ch = 0;\n    }\n    fcn.0003d880(var_8h);\n    return var_ch;\n}\n",
        "token_count": 544
    },
    "0003cdf0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0003cdf0(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t var_214h;\n    uint var_210h;\n    uint32_t var_4h;\n    \n    *arg_8h = 0;\n    for (var_4h = 0; var_4h < 100; var_4h = var_4h + 1) {\n        iVar1 = fcn.00038d30(var_4h, &var_210h, 0x104);\n        if (((iVar1 == 0) && (iVar1 = fcn.0003d150(&var_210h, 0x8508e9dc, &var_214h),  iVar1 == 0)) && (var_214h == 0))\n        {\n            *arg_8h = 1;\n            fcn.0003d2e0(&var_210h, 0x8508e9dc);\n        }\n    }\n    return;\n}\n",
        "token_count": 226
    },
    "0003ce80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_5ch\n\nint32_t __cdecl fcn.0003ce80(uint arg_8h, int16_t *arg_ch)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    uint var_5ch;\n    uint var_54h;\n    int16_t *var_50h;\n    uint var_4ch;\n    uint var_44h;\n    int16_t *var_40h;\n    uint var_3ch;\n    uint var_34h;\n    int16_t *var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    var_8h = fcn.0003d8e0(0x8508ea68, 0x85010ab0, &var_ch);\n    if (var_8h != 0) {\ncode_r0x0003d13a:\n        fcn.0003d880(var_ch);\n        return var_8h;\n    }\n    var_4h = 0;\n    do {\n        if (*(var_ch + var_4h * 4) == 0) goto code_r0x0003d127;\n        var_1ch = 0;\n        var_20h = 0;\n        var_18h = 0;\n        var_8h = fcn.0003d720(*(var_ch + var_4h * 4), 0x85010ac0, &var_14h, &var_1ch, &var_2ch);\n        if (var_8h == 0) {\n            iVar2 = fcn.0007f898(var_1ch, arg_8h);\n            if (iVar2 == 0) {\n                fcn.00036460(var_1ch);\n            }\n            else {\n                var_8h = fcn.0003d720(*(var_ch + var_4h * 4), 0x85010ad0, &var_14h, &var_20h, &var_2ch);\n                if (var_8h == 0) {\n                    var_30h = arg_ch;\n                    do {\n                        iVar1 = *var_30h;\n                        var_30h = var_30h + 1;\n                    } while (iVar1 != 0);\n                    var_10h = fcn.0003dc80(var_20h, var_2ch, arg_ch, var_30h - (arg_ch + 1) >> 1);\n                    if (var_10h == 0) {\n                        fcn.00036460(var_1ch);\n                        fcn.00036460(var_20h);\n                        var_8h = 0;\n                    }\n                    else {\n                        var_40h = arg_ch;\n                        do {\n                            iVar1 = *var_40h;\n                            var_40h = var_40h + 1;\n                        } while (iVar1 != 0);\n                        var_24h = var_10h + 2 + (var_40h - (arg_ch + 1) >> 1) * 2;\n                        var_50h = arg_ch;\n                        do {\n                            iVar1 = *var_50h;\n                            var_50h = var_50h + 1;\n                        } while (iVar1 != 0);\n                        var_28h = var_2ch - ((var_50h - (arg_ch + 1) >> 1) * 2 + 2);\n                        var_18h = fcn.00036330(var_28h);\n                        if (var_18h == 0) {\n                            var_8h = -0x3fffff66;\n                            fcn.00036460(var_1ch);\n                            fcn.00036460(var_20h);\n                        }\n                        else {\n                            fcn.0007f916(var_18h, 0, var_28h);\n                            fcn.0007f904(var_18h, var_20h, var_10h - var_20h);\n                            fcn.0007f904((var_10h - var_20h) + var_18h, var_24h, var_2ch - (var_24h - var_20h));\n                            var_8h = fcn.0003d590(*(var_ch + var_4h * 4), 0x85010ad0, var_18h, var_28h, 7);\n                            fcn.00036460(var_1ch);\n                            fcn.00036460(var_20h);\n                            fcn.00036460(var_18h);\n                        }\n                    }\ncode_r0x0003d127:\n                    if (*(var_ch + var_4h * 4) == 0) {\n                        var_8h = -0x3fffffff;\n                    }\n                    goto code_r0x0003d13a;\n                }\n                fcn.00036460(var_1ch);\n            }\n        }\n        var_4h = var_4h + 1;\n    } while( true );\n}\n",
        "token_count": 1196
    },
    "0003d150": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2ch\n\nint32_t __cdecl fcn.0003d150(uint arg_8h, int16_t *arg_ch, uint *arg_10h)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    uint var_2ch;\n    uint var_24h;\n    int16_t *var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    *arg_10h = 0;\n    var_8h = fcn.0003d8e0(0x8508ea68, 0x85010ab0, &var_ch);\n    if (var_8h != 0) {\ncode_r0x0003d2ce:\n        fcn.0003d880(var_ch);\n        return var_8h;\n    }\n    var_4h = 0;\n    do {\n        if (*(var_ch + var_4h * 4) == 0) goto code_r0x0003d2bb;\n        var_14h = 0;\n        var_18h = 0;\n        var_8h = fcn.0003d720(*(var_ch + var_4h * 4), 0x85010ac0, &var_10h, &var_14h, &var_1ch);\n        if (var_8h == 0) {\n            iVar2 = fcn.0007f898(var_14h, arg_8h);\n            if (iVar2 == 0) {\n                fcn.00036460(var_14h);\n            }\n            else {\n                var_8h = fcn.0003d720(*(var_ch + var_4h * 4), 0x85010ad0, &var_10h, &var_18h, &var_1ch);\n                if (var_8h == 0) {\n                    var_20h = arg_ch;\n                    do {\n                        iVar1 = *var_20h;\n                        var_20h = var_20h + 1;\n                    } while (iVar1 != 0);\n                    iVar2 = fcn.0003dc80(var_18h, var_1ch, arg_ch, (var_20h - (arg_ch + 1) >> 1) << 1);\n                    if (iVar2 == 0) {\n                        *arg_10h = 0;\n                    }\n                    else {\n                        *arg_10h = 1;\n                    }\n                    var_8h = 0;\n                    fcn.00036460(var_14h);\n                    fcn.00036460(var_18h);\ncode_r0x0003d2bb:\n                    if (*(var_ch + var_4h * 4) == 0) {\n                        var_8h = -0x3fffffff;\n                    }\n                    goto code_r0x0003d2ce;\n                }\n                fcn.00036460(var_14h);\n            }\n        }\n        var_4h = var_4h + 1;\n    } while( true );\n}\n",
        "token_count": 717
    },
    "0003d2e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_54h\n\nint32_t __cdecl fcn.0003d2e0(uint arg_8h, int16_t *arg_ch)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    uint var_54h;\n    uint var_4ch;\n    int16_t *var_48h;\n    uint var_44h;\n    uint var_3ch;\n    int16_t *var_38h;\n    uint var_34h;\n    uint var_2ch;\n    int16_t *var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = fcn.0003d8e0(0x8508ea68, 0x85010ab0, &var_ch);\n    if (var_8h != 0) {\ncode_r0x0003d579:\n        fcn.0003d880(var_ch);\n        return var_8h;\n    }\n    var_4h = 0;\n    do {\n        if (*(var_ch + var_4h * 4) == 0) goto code_r0x0003d566;\n        var_18h = 0;\n        var_1ch = 0;\n        var_14h = 0;\n        var_8h = fcn.0003d720(*(var_ch + var_4h * 4), 0x85010ac0, &var_10h, &var_18h, &var_24h);\n        if (var_8h == 0) {\n            iVar2 = fcn.0007f898(var_18h, arg_8h);\n            if (iVar2 == 0) {\n                fcn.00036460(var_18h);\n            }\n            else {\n                var_8h = fcn.0003d720(*(var_ch + var_4h * 4), 0x85010ad0, &var_10h, &var_1ch, &var_24h);\n                if (var_8h == 0) {\n                    var_28h = arg_ch;\n                    do {\n                        iVar1 = *var_28h;\n                        var_28h = var_28h + 1;\n                    } while (iVar1 != 0);\n                    iVar2 = fcn.0003dc80(var_1ch, var_24h, arg_ch, (var_28h - (arg_ch + 1) >> 1) << 1);\n                    if (iVar2 == 0) {\n                        var_38h = arg_ch;\n                        do {\n                            iVar1 = *var_38h;\n                            var_38h = var_38h + 1;\n                        } while (iVar1 != 0);\n                        var_20h = var_24h + 2 + (var_38h - (arg_ch + 1) >> 1) * 2;\n                        var_14h = fcn.00036330(var_20h);\n                        if (var_14h == 0) {\n                            var_8h = -0x3fffff66;\n                            fcn.00036460(var_18h);\n                            fcn.00036460(var_1ch);\n                        }\n                        else {\n                            fcn.0007f916(var_14h, 0, var_20h);\n                            fcn.0007f904(var_14h, var_1ch, var_24h);\n                            var_48h = arg_ch;\n                            do {\n                                iVar1 = *var_48h;\n                                var_48h = var_48h + 1;\n                            } while (iVar1 != 0);\n                            fcn.0007f904(var_14h + -2 + var_24h, arg_ch, (var_48h - (arg_ch + 1) >> 1) << 1);\n                            var_8h = fcn.0003d590(*(var_ch + var_4h * 4), 0x85010ad0, var_14h, var_20h, 7);\n                            fcn.00036460(var_18h);\n                            fcn.00036460(var_1ch);\n                            fcn.00036460(var_14h);\n                        }\n                    }\n                    else {\n                        var_8h = 0;\n                        fcn.00036460(var_18h);\n                        fcn.00036460(var_1ch);\n                    }\ncode_r0x0003d566:\n                    if (*(var_ch + var_4h * 4) == 0) {\n                        var_8h = -0x3fffffff;\n                    }\n                    goto code_r0x0003d579;\n                }\n                fcn.00036460(var_18h);\n            }\n        }\n        var_4h = var_4h + 1;\n    } while( true );\n}\n",
        "token_count": 1127
    },
    "0003d590": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0003d590(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint var_30h;\n    uint var_2ch;\n    uint *var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    var_ch = 0;\n    fcn.0007f6d0(&var_8h, arg_8h);\n    var_30h = 0x18;\n    var_2ch = 0;\n    var_24h = 0x140;\n    var_28h = &var_8h;\n    var_20h = 0;\n    var_1ch = 0;\n    var_10h = fcn.0007f6ca(&var_ch, 2, &var_30h);\n    if (var_10h == 0) {\n        fcn.0007f6d0(&var_18h, arg_ch);\n        var_10h = fcn.0007f6be(var_ch, &var_18h, 0, arg_18h, arg_10h, arg_14h);\n        fcn.0007f6c4(var_ch);\n    }\n    return var_10h;\n}\n",
        "token_count": 325
    },
    "0003d630": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0003d630(uint arg_8h, uint arg_ch, int32_t arg_10h, uint *arg_14h)\n\n{\n    uint var_34h;\n    uint var_30h;\n    uint *var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    var_ch = 0;\n    var_10h = 0;\n    fcn.0007f6d0(&var_8h, arg_8h);\n    var_34h = 0x18;\n    var_30h = 0;\n    var_28h = 0x140;\n    var_2ch = &var_8h;\n    var_24h = 0;\n    var_20h = 0;\n    var_14h = fcn.0007f6ca(&var_ch, 1, &var_34h);\n    if (var_14h == 0) {\n        fcn.0007f6d0(&var_1ch, arg_ch);\n        var_14h = fcn.00035cd0(var_ch, &var_1ch, 2, &var_10h);\n        fcn.0007f6c4(var_ch);\n        if (var_14h == 0) {\n            if (arg_10h == *(var_10h + 4)) {\n                if (*(var_10h + 4) == 4) {\n                    *arg_14h = *(var_10h + 0xc);\n                }\n                else {\n                    var_14h = -0x3fffffff;\n                }\n            }\n            else {\n                var_14h = -0x3fffffdc;\n            }\n        }\n        fcn.00036460(var_10h);\n    }\n    return var_14h;\n}\n",
        "token_count": 446
    },
    "0003d720": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0003d720(uint arg_8h, uint arg_ch, uint *arg_10h, int32_t *arg_14h, uint *arg_18h)\n\n{\n    int32_t iVar1;\n    uint var_34h;\n    uint var_30h;\n    uint *var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    var_ch = 0;\n    var_10h = 0;\n    *arg_14h = 0;\n    fcn.0007f6d0(&var_8h, arg_8h);\n    var_34h = 0x18;\n    var_30h = 0;\n    var_28h = 0x140;\n    var_2ch = &var_8h;\n    var_24h = 0;\n    var_20h = 0;\n    var_14h = fcn.0007f6ca(&var_ch, 1, &var_34h);\n    if (var_14h == 0) {\n        fcn.0007f6d0(&var_1ch, arg_ch);\n        var_14h = fcn.00035cd0(var_ch, &var_1ch, 2, &var_10h);\n        fcn.0007f6c4(var_ch);\n        if (var_14h == 0) {\n            if (((*(var_10h + 4) == 1) || (*(var_10h + 4) == 7)) || (*(var_10h + 4) == 2)) {\n                iVar1 = fcn.00036330(*(var_10h + 8) + 2);\n                *arg_14h = iVar1;\n                if (*arg_14h == 0) {\n                    var_14h = -0x3fffff66;\n                }\n                else {\n                    fcn.0007f916(*arg_14h, 0, *(var_10h + 8) + 2);\n                    fcn.0007f904(*arg_14h, var_10h + 0xc, *(var_10h + 8));\n                    *arg_10h = *(var_10h + 4);\n                    *arg_18h = *(var_10h + 8);\n                }\n            }\n            else {\n                var_14h = -0x3fffffff;\n            }\n        }\n        fcn.00036460(var_10h);\n    }\n    return var_14h;\n}\n",
        "token_count": 605
    },
    "0003d880": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0003d880(int32_t arg_8h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    if (arg_8h != 0) {\n        for (var_4h = 0; *(arg_8h + var_4h * 4) != 0; var_4h = var_4h + 1) {\n            fcn.00036460(*(arg_8h + var_4h * 4));\n        }\n        fcn.00036460(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 133
    },
    "0003d8e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_6ch\n\nint32_t __cdecl fcn.0003d8e0(int16_t *arg_8h, int16_t *arg_ch, int32_t *arg_10h)\n\n{\n    int16_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint var_6ch;\n    uint var_64h;\n    int16_t *var_60h;\n    int32_t var_5ch;\n    uint var_58h;\n    uint var_50h;\n    int16_t *var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint *var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    var_24h = 0;\n    var_20h = 0;\n    if (arg_8h == NULL) {\n        var_2ch = -0x3fffff11;\n    }\n    else if (arg_10h == NULL) {\n        var_2ch = -0x3fffff0f;\n    }\n    else {\n        *arg_10h = 0;\n        fcn.0007f6d0(&var_18h, arg_8h);\n        var_44h = 0x18;\n        var_40h = 0;\n        var_38h = 0x140;\n        var_3ch = &var_18h;\n        var_34h = 0;\n        var_30h = 0;\n        var_2ch = fcn.0007f6ca(&var_24h, 8, &var_44h);\n        if (var_2ch == 0) {\n            var_48h = 0x418;\n            var_8h = fcn.00036330(0x418);\n            if (var_8h == 0) {\n                var_2ch = -0x3fffffe9;\n            }\n            else {\n                var_10h = 0;\ncode_r0x0003d9b4:\n                uVar2 = var_24h;\n                var_2ch = fcn.0007f796();\n                if (var_2ch == -0x3fffffdd) {\n                    fcn.00036460(var_8h);\n                    var_48h = var_28h;\n                    var_8h = fcn.00036330(var_28h);\n                    if (var_8h == 0) {\n                        var_2ch = -0x3fffffe9;\n                        goto code_r0x0003dc43;\n                    }\n                    uVar2 = var_24h;\n                    var_2ch = fcn.0007f796();\n                }\n                if (var_2ch != -0x7fffffe6) {\n                    if (var_2ch == 0) goto code_r0x0003d9ab;\n                    goto code_r0x0003dc43;\n                }\n                var_1ch = var_10h;\n                var_20h = fcn.00036330(var_10h * 4 + 4);\n                if (var_20h == 0) {\n                    var_2ch = -0x3fffffe9;\n                    goto code_r0x0003dc43;\n                }\n                fcn.0007f916(var_20h, 0, var_1ch * 4 + 4, uVar2);\n                if (arg_ch == NULL) {\n                    var_5ch = 0;\n                }\n                else {\n                    var_4ch = arg_ch;\n                    do {\n                        iVar1 = *var_4ch;\n                        var_4ch = var_4ch + 1;\n                    } while (iVar1 != 0);\n                    var_5ch = var_4ch - (arg_ch + 1) >> 1;\n                }\n                var_ch = var_5ch;\n                var_60h = arg_8h;\n                do {\n                    iVar1 = *var_60h;\n                    var_60h = var_60h + 1;\n                } while (iVar1 != 0);\n                var_4h = var_60h - (arg_8h + 1) >> 1;\n                var_10h = 0;\n                while( true ) {\n                    var_2ch = fcn.0007f796(var_24h, var_10h, 0, var_8h, var_48h, &var_28h);\n                    if (var_2ch == -0x7fffffe6) {\n                        var_2ch = 0;\n                        goto code_r0x0003dc43;\n                    }\n                    if (var_2ch != 0) goto code_r0x0003dc43;\n                    *(var_8h + 0x10 + (*(var_8h + 0xc) & 0xfffffffe)) = 0;\n                    uVar2 = fcn.00036330((*(var_8h + 0xc) + var_ch + var_4h) * 2 + 8);\n                    *(var_20h + var_10h * 4) = uVar2;\n                    if (*(var_20h + var_10h * 4) == 0) break;\n                    if (arg_ch != NULL) {\n                        iVar3 = fcn.0007f6d6(*(var_20h + var_10h * 4), *(var_8h + 0xc) + var_ch + 4 + var_4h, 0x85010ae4\n                                             , arg_8h, var_8h + 0x10, arg_ch);\n                        if (-1 < iVar3) goto code_r0x0003db16;\n                        var_2ch = -0x3fffffff;\n                        goto code_r0x0003dc43;\n                    }\n                    iVar3 = fcn.0007f6d6(*(var_20h + var_10h * 4), *(var_8h + 0xc) + var_ch + 4 + var_4h, 0x8500d7ec, \n                                         arg_8h, var_8h + 0x10);\n                    if (iVar3 < 0) {\n                        var_2ch = -0x3fffffff;\n                        goto code_r0x0003dc43;\n                    }\ncode_r0x0003db16:\n                    var_10h = var_10h + 1;\n                }\n                var_2ch = -0x3fffffe9;\n            }\ncode_r0x0003dc43:\n            if (var_8h != 0) {\n                fcn.00036460(var_8h);\n            }\n            if (var_2ch == 0) {\n                *arg_10h = var_20h;\n            }\n            else {\n                fcn.0003d880(var_20h);\n            }\n            fcn.0007f6c4(var_24h);\n        }\n    }\n    return var_2ch;\ncode_r0x0003d9ab:\n    var_10h = var_10h + 1;\n    goto code_r0x0003d9b4;\n}\n",
        "token_count": 1693
    },
    "0003dc80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0003dc80(int32_t *arg_8h, uint32_t arg_ch, int32_t *arg_10h, uint32_t arg_14h)\n\n{\n    int32_t *piVar1;\n    uint var_40h;\n    int32_t var_3ch;\n    int32_t var_38h;\n    int32_t *var_34h;\n    int32_t *var_30h;\n    uint32_t var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t *var_1ch;\n    int32_t *var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t *var_4h;\n    \n    if ((arg_14h == 0) || (arg_ch < arg_14h)) {\n        return NULL;\n    }\n    if (arg_ch != arg_14h) {\n        if (arg_14h == 1) {\n            piVar1 = fcn.0007f892(arg_8h, *arg_10h, arg_ch);\n            return piVar1;\n        }\n        var_4h = arg_8h;\n        var_ch = (arg_ch - arg_14h) + 1;\n        do {\n            if (var_ch == 0) {\n                return NULL;\n            }\n            if ((*var_4h == *arg_10h) && (*(var_4h + (arg_14h - 1)) == *(arg_10h + (arg_14h - 1)))) {\n                if (arg_14h == 2) {\n                    return var_4h;\n                }\n                var_30h = arg_10h + 1;\n                var_34h = var_4h + 1;\n                for (var_2ch = arg_14h - 2; 3 < var_2ch; var_2ch = var_2ch - 4) {\n                    if (*var_34h != *var_30h) goto code_r0x0003de6e;\n                    var_30h = var_30h + 1;\n                    var_34h = var_34h + 1;\n                }\n                if (var_2ch == 0) {\ncode_r0x0003def0:\n                    var_3ch = 0;\n                }\n                else {\ncode_r0x0003de6e:\n                    var_38h = *var_34h - *var_30h;\n                    if (var_38h == 0) {\n                        if (var_2ch == 1) goto code_r0x0003def0;\n                        var_38h = *(var_34h + 1) - *(var_30h + 1);\n                        if (var_38h == 0) {\n                            if (var_2ch == 2) goto code_r0x0003def0;\n                            var_38h = *(var_34h + 2) - *(var_30h + 2);\n                            if (var_38h == 0) {\n                                if ((var_2ch == 3) || (var_38h = *(var_34h + 3) - *(var_30h + 3),  var_38h == 0))\n                                goto code_r0x0003def0;\n                            }\n                        }\n                    }\n                    var_3ch = 1;\n                    if (var_38h < 1) {\n                        var_3ch = -1;\n                    }\n                }\n                if (var_3ch == 0) {\n                    return var_4h;\n                }\n            }\n            var_4h = var_4h + 1;\n            var_ch = var_ch + -1;\n        } while( true );\n    }\n    var_18h = arg_10h;\n    var_1ch = arg_8h;\n    for (var_14h = arg_ch; 3 < var_14h; var_14h = var_14h - 4) {\n        if (*var_1ch != *var_18h) goto code_r0x0003dce3;\n        var_18h = var_18h + 1;\n        var_1ch = var_1ch + 1;\n    }\n    if (var_14h == 0) {\ncode_r0x0003dd65:\n        var_24h = 0;\n    }\n    else {\ncode_r0x0003dce3:\n        var_20h = *var_1ch - *var_18h;\n        if (var_20h == 0) {\n            if (var_14h == 1) goto code_r0x0003dd65;\n            var_20h = *(var_1ch + 1) - *(var_18h + 1);\n            if (var_20h == 0) {\n                if (var_14h == 2) goto code_r0x0003dd65;\n                var_20h = *(var_1ch + 2) - *(var_18h + 2);\n                if (var_20h == 0) {\n                    if ((var_14h == 3) || (var_20h = *(var_1ch + 3) - *(var_18h + 3),  var_20h == 0))\n                    goto code_r0x0003dd65;\n                }\n            }\n        }\n        var_24h = 1;\n        if (var_20h < 1) {\n            var_24h = -1;\n        }\n    }\n    if (var_24h != 0) {\n        arg_8h = NULL;\n    }\n    return arg_8h;\n}\n",
        "token_count": 1282
    },
    "0003df40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0003df40(void)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.00035b80(0x85010af8, &var_4h);\n    if (((((((iVar1 == 0) && (iVar1 = fcn.00060f50(var_4h, 0x85010b04, 0x85092994),  iVar1 == 0)) &&\n           (iVar1 = fcn.00060f50(var_4h, 0x85010b20, 0x85092998),  iVar1 == 0)) &&\n          ((iVar1 = fcn.00060f50(var_4h, 0x85010b38, 0x8509299c),  iVar1 == 0 &&\n           (iVar1 = fcn.00060f50(var_4h, 0x85010b58, 0x850929a0),  iVar1 == 0)))) &&\n         (iVar1 = fcn.00060f50(var_4h, 0x85010b74, 0x850929a4),  iVar1 == 0)) &&\n        (((((iVar1 = fcn.00060f50(var_4h, 0x85010b90, 0x850929a8),  iVar1 == 0 &&\n            (iVar1 = fcn.00060f50(var_4h, 0x85010ba8, 0x850929ac),  iVar1 == 0)) &&\n           ((iVar1 = fcn.00060f50(var_4h, 0x85010bbc, 0x850929b0),  iVar1 == 0 &&\n            (((iVar1 = fcn.00060f50(var_4h, 0x85010bcc, 0x850929b4),  iVar1 == 0 &&\n              (iVar1 = fcn.00060f50(var_4h, 0x85010be4, 0x850929b8),  iVar1 == 0)) &&\n             (iVar1 = fcn.00060f50(var_4h, 0x85010bf8, 0x850929bc),  iVar1 == 0)))))) &&\n          ((iVar1 = fcn.00060f50(var_4h, 0x85010c10, 0x850929c0),  iVar1 == 0 &&\n           (iVar1 = fcn.00060f50(var_4h, 0x85010c20, 0x850929c4),  iVar1 == 0)))) &&\n         (iVar1 = fcn.00060f50(var_4h, 0x85010c38, 0x850929c8),  iVar1 == 0)))) &&\n       ((((iVar1 = fcn.00060f50(var_4h, 0x85010c58, 0x850929cc),  iVar1 == 0 &&\n          (iVar1 = fcn.00060f50(var_4h, 0x85010c7c, 0x850929d0),  iVar1 == 0)) &&\n         ((iVar1 = fcn.00060f50(var_4h, 0x85010c9c, 0x850929d4),  iVar1 == 0 &&\n          (((iVar1 = fcn.00060f50(var_4h, 0x85010cb8, 0x850929d8),  iVar1 == 0 &&\n            (iVar1 = fcn.00060f50(var_4h, 0x85010cd4, 0x850929dc),  iVar1 == 0)) &&\n           (iVar1 = fcn.00060f50(var_4h, 0x85010cf0, 0x8509eee8),  iVar1 == 0)))))) &&\n        (((iVar1 = fcn.00060f50(var_4h, 0x85010d0c, 0x8509ef00),  iVar1 == 0 &&\n          (iVar1 = fcn.00060f50(var_4h, 0x85010d2c, 0x8509eef4),  iVar1 == 0)) &&\n         ((iVar1 = fcn.00060f50(var_4h, 0x85010d48, 0x8509ef04),  iVar1 == 0 &&\n          (((iVar1 = fcn.00060f50(var_4h, 0x85010d68, 0x8509eeec),  iVar1 == 0 &&\n            (iVar1 = fcn.00060f50(var_4h, 0x85010d7c, 0x8509eef0),  iVar1 == 0)) &&\n           ((iVar1 = fcn.00060f50(var_4h, 0x85010d90, 0x8509eefc),  iVar1 == 0 &&\n            ((iVar1 = fcn.00060f50(var_4h, 0x85010dac, 0x8509eef8),  iVar1 == 0 &&\n             (iVar1 = fcn.00060f50(var_4h, 0x85010d7c, 0x8509eef0),  iVar1 == 0)))))))))))))) {\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 1229
    },
    "0003e350": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0003e350(void)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.00035b80(0x85010dc8, &var_4h);\n    if (((((((iVar1 == 0) && (iVar1 = fcn.00060f50(var_4h, 0x85010dd8, 0x850929e0),  iVar1 == 0)) &&\n           (iVar1 = fcn.00060f50(var_4h, 0x85010df4, 0x850929e4),  iVar1 == 0)) &&\n          ((iVar1 = fcn.00060f50(var_4h, 0x85010e10, 0x850929e8),  iVar1 == 0 &&\n           (iVar1 = fcn.00060f50(var_4h, 0x85010e24, 0x850929ec),  iVar1 == 0)))) &&\n         (iVar1 = fcn.00060f50(var_4h, 0x85010e3c, 0x850929f0),  iVar1 == 0)) &&\n        (((((iVar1 = fcn.00060f50(var_4h, 0x85010e54, 0x850929f4),  iVar1 == 0 &&\n            (iVar1 = fcn.00060f50(var_4h, 0x85010e6c, 0x850929f8),  iVar1 == 0)) &&\n           ((iVar1 = fcn.00060f50(var_4h, 0x85010e7c, 0x850929fc),  iVar1 == 0 &&\n            (((iVar1 = fcn.00060f50(var_4h, 0x85010e98, 0x85092a00),  iVar1 == 0 &&\n              (iVar1 = fcn.00060f50(var_4h, 0x85010eb4, 0x85092a04),  iVar1 == 0)) &&\n             (iVar1 = fcn.00060f50(var_4h, 0x85010ec4, 0x85092a08),  iVar1 == 0)))))) &&\n          ((iVar1 = fcn.00060f50(var_4h, 0x85010ed8, 0x85092a0c),  iVar1 == 0 &&\n           (iVar1 = fcn.00060f50(var_4h, 0x85010ef0, 0x85092a10),  iVar1 == 0)))) &&\n         (iVar1 = fcn.00060f50(var_4h, 0x85010f00, 0x85092a14),  iVar1 == 0)))) &&\n       ((((iVar1 = fcn.00060f50(var_4h, 0x85010f14, 0x85092a18),  iVar1 == 0 &&\n          (iVar1 = fcn.00060f50(var_4h, 0x85010f30, 0x85092a1c),  iVar1 == 0)) &&\n         ((iVar1 = fcn.00060f50(var_4h, 0x85010f4c, 0x85092a20),  iVar1 == 0 &&\n          (((iVar1 = fcn.00060f50(var_4h, 0x85010f64, 0x85092a24),  iVar1 == 0 &&\n            (iVar1 = fcn.00060f50(var_4h, 0x85010f7c, 0x85092a28),  iVar1 == 0)) &&\n           (iVar1 = fcn.00060f50(var_4h, 0x85010fa4, 0x8509eed8),  iVar1 == 0)))))) &&\n        (((iVar1 = fcn.00060f50(var_4h, 0x85010fc0, 0x8509eed0),  iVar1 == 0 &&\n          (iVar1 = fcn.00060f50(var_4h, 0x85010fd0, 0x8509eed4),  iVar1 == 0)) &&\n         ((iVar1 = fcn.00060f50(var_4h, 0x85010ff0, 0x8509eedc),  iVar1 == 0 &&\n          (((iVar1 = fcn.00060f50(var_4h, 0x85011010, 0x8509eee4),  iVar1 == 0 &&\n            (iVar1 = fcn.00060f50(var_4h, 0x85011030, 0x8509eee0),  iVar1 == 0)) &&\n           ((iVar1 = fcn.00060f50(var_4h, 0x85010f14, 0x85092a18),  iVar1 == 0 &&\n            (iVar1 = fcn.00060f50(var_4h, 0x85011044, 0x8509eecc),  iVar1 == 0)))))))))))) {\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 1188
    },
    "0003e740": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0003e765)\n\nuint __cdecl fcn.0003e740(uint arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    uint var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    var_4h = NULL;\n    uVar2 = *(arg_ch + 2) + *(arg_ch + 3) & 0x8000000f;\n    var_4h = fcn.00036360(0xc);\n    if (var_4h == NULL) {\n        uVar1 = 0xc000009a;\n    }\n    else {\n        *var_4h = 0;\n        var_4h[1] = arg_ch;\n        var_4h[2] = arg_8h;\n        fcn.000382a0(0x8509ee80, &var_8h, 1);\n        *var_4h = *(uVar2 * 4 + -0x7af61174);\n        *(uVar2 * 4 + -0x7af61174) = var_4h;\n        fcn.000382d0(0x8509ee80, &var_8h, 1);\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 305
    },
    "0003e7f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0003e80e)\n\nuint __cdecl fcn.0003e7f0(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    uint var_10h;\n    uint var_ch;\n    uint *var_8h;\n    uint *var_4h;\n    \n    uVar2 = *(arg_8h + 2) + *(arg_8h + 3) & 0x8000000f;\n    *arg_ch = 0;\n    fcn.000382a0(0x8509ee80, &var_ch, 1);\n    var_8h = NULL;\n    var_4h = *(uVar2 * 4 + -0x7af61174);\n    do {\n        if (var_4h == NULL) {\ncode_r0x0003e894:\n            fcn.000382d0(0x8509ee80, &var_ch, 1);\n            if (var_4h == NULL) {\n                uVar1 = 0xc0000001;\n            }\n            else {\n                fcn.00036460(var_4h);\n                uVar1 = 0;\n            }\n            return uVar1;\n        }\n        if (var_4h[1] == arg_8h) {\n            if (var_8h == NULL) {\n                *(uVar2 * 4 + -0x7af61174) = *var_4h;\n            }\n            else {\n                *var_8h = *var_4h;\n            }\n            *arg_ch = var_4h[2];\n            goto code_r0x0003e894;\n        }\n        var_8h = var_4h;\n        var_4h = *var_4h;\n    } while( true );\n}\n",
        "token_count": 412
    },
    "0003e8d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0003e8d0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_10h = 0;\n    var_ch = 0;\n    if (*0x85092a30 == 0) {\n        *0x85092a34 = 0;\n        fcn.000380a0(0x85092a38);\n        fcn.0007f916(0x8509ee80, 0, 0x4c);\n        fcn.000380a0(0x8509ee80);\n        var_1ch = fcn.00042c90(arg_8h, &var_ch, &var_18h);\n        if (var_1ch == 0) {\n            (**0x8500d048)(&var_8h, 0x85092a2c, 0x100, 0x50, 0x10);\n            if (var_8h == 0) {\n                var_1ch = fcn.00035b80(0x85010af8, &var_10h);\n                if ((((var_1ch == 0) && (var_1ch = fcn.00060f50(var_10h, 0x85011054, &var_14h),  var_1ch == 0)) &&\n                    (var_1ch = fcn.00060f50(var_10h, 0x85011074, &var_20h),  var_1ch == 0)) &&\n                   ((var_1ch = fcn.00067c30(var_14h, 0x8503af50, 0x85092a44),  var_1ch == 0 &&\n                    (var_1ch = fcn.00067c30(var_20h, 0x8503ac40, 0x85092a48),  var_1ch == 0)))) {\n                    fcn.00052470(0x85092990, 1);\n                    var_4h = 0;\n                    while ((var_4h < var_18h && (var_ch != 0))) {\n                        var_2ch = *(var_ch + var_4h * 4);\n                        do {\n                            iVar1 = *(var_2ch + 8);\n                            if (iVar1 == 0) {\n                                var_2ch = 0;\n                            }\n                            else {\n                                var_2ch = *(iVar1 + 8);\n                            }\n                        } while ((var_2ch != 0) && (iVar1 != var_2ch));\n                        var_1ch = fcn.0003f210(*(*(var_ch + var_4h * 4) + *0x8509ed4c), *(iVar1 + 0xc), \n                                               *(var_ch + var_4h * 4));\n                        if ((var_1ch != 0) || (var_1ch = fcn.0003f0e0(*(var_ch + var_4h * 4)),  var_1ch != 0))\n                        goto code_r0x0003eae3;\n                        var_4h = var_4h + 1;\n                    }\n                    *0x85092a30 = 1;\n                }\n            }\n            else {\n                var_1ch = var_8h;\n            }\ncode_r0x0003eae3:\n            if (var_1ch != 0) {\n                fcn.0003eb10();\n            }\n            fcn.00036460(var_ch);\n        }\n    }\n    else {\n        var_1ch = 0;\n    }\n    return var_1ch;\n}\n",
        "token_count": 902
    },
    "0003eb10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid fcn.0003eb10(void)\n\n{\n    int32_t iVar1;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_10h = 0;\n    if (*0x85092a30 != 0) {\n        *0x85092a30 = 0;\n        while( true ) {\n            fcn.000382a0(0x85092a38, &var_4h, 0);\n            iVar1 = *0x85092a34;\n            if (*0x85092a34 != 0) {\n                var_10h = *(*0x85092a34 + 0xc);\n            }\n            fcn.000382d0(0x85092a38, &var_4h, 0);\n            if (iVar1 == 0) break;\n            fcn.0003efb0(var_10h);\n        }\n        if (*0x85092a2c != 0) {\n            (**0x8500d054)(*0x85092a2c);\n        }\n        fcn.00068090(0x85092a44);\n        fcn.00068090(0x85092a48);\n        for (var_8h = 0; var_8h < 0x10; var_8h = var_8h + 1) {\n            fcn.000382a0(0x8509ee80, &var_4h, 0);\n            while (*(var_8h * 4 + -0x7af61174) != 0) {\n                fcn.000382d0(0x8509ee80, &var_4h, 0);\n                fcn.0005bdd0(0x32);\n                fcn.000382a0(0x8509ee80, &var_4h, 0);\n            }\n            fcn.000382d0(0x8509ee80, &var_4h, 0);\n        }\n        fcn.00038300(0x8509ee80);\n        fcn.00052470(0x85092990, 0);\n    }\n    return;\n}\n",
        "token_count": 506
    },
    "0003ec40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0003ec40(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_ch = 0;\n    fcn.000382a0(0x85092a38, &var_8h, 1);\n    iVar1 = fcn.00045cc0(0x85092990, 0, 0);\n    if (iVar1 != 0) {\n        var_4h = fcn.0003f350(arg_ch, 1);\n        if (var_4h != 0) {\n            var_ch = *(var_4h + 0xc);\n        }\n    }\n    fcn.000382d0(0x85092a38, &var_8h, 1);\n    if (var_ch != 0) {\n        fcn.0003efb0(var_ch);\n    }\n    pcVar2 = fcn.000684a0(arg_8h);\n    (*pcVar2)(arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 270
    },
    "0003ecd0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0003ecd0(uint arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    code *pcVar1;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if (*(arg_10h + 0x10) == *0x85092a2c) {\n        var_4h = fcn.0003e7f0(arg_10h, &var_8h);\n        if (var_4h == 0) {\n            (**0x8500d04c)(var_8h, arg_10h);\n            pcVar1 = fcn.000684a0(arg_8h);\n            (*pcVar1)(arg_8h, arg_ch, var_8h, arg_14h);\n        }\n        else {\n            (**0x8500d05c)(arg_10h);\n        }\n    }\n    else {\n        pcVar1 = fcn.000684a0(arg_8h);\n        (*pcVar1)(arg_8h, arg_ch, arg_10h, arg_14h);\n    }\n    return;\n}\n",
        "token_count": 257
    },
    "0003ed50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0003ed50(uint arg_8h, uint arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint *puVar5;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    iVar1 = fcn.0004ca90();\n    if (iVar1 == 0) {\n        pcVar2 = fcn.000684a0(arg_8h);\n        (*pcVar2)(arg_8h, arg_ch, arg_10h, arg_14h);\n    }\n    else {\n        iVar1 = fcn.00042750(arg_ch, &var_4h);\n        if (iVar1 == 0) {\n            for (var_8h = 0; var_8h < arg_14h; var_8h = var_8h + 1) {\n                iVar1 = *(arg_10h + var_8h * 4);\n                (**0x8500d058)(&var_ch, &var_14h, *0x85092a2c);\n                if (var_ch != 0) break;\n                var_ch = fcn.0003e740(iVar1, var_14h);\n                if (var_ch != 0) {\n                    (**0x8500d05c)(var_14h);\n                    break;\n                }\n                *(var_14h + 0x18) = *(iVar1 + 0x18);\n                *(var_14h + 8) = *(iVar1 + 8);\n                *(var_14h + 0xc) = *(iVar1 + 0xc);\n                puVar4 = *(iVar1 + 0x1e) + iVar1;\n                puVar5 = *(var_14h + 0x1e) + var_14h;\n                for (iVar3 = 8; iVar3 != 0; iVar3 = iVar3 + -1) {\n                    *puVar5 = *puVar4;\n                    puVar4 = puVar4 + 1;\n                    puVar5 = puVar5 + 1;\n                }\n                (**0x8500d050)(var_14h, iVar1);\n                if (((*(iVar1 + 0x1d) & 0x80) == 0) || ((*(iVar1 + 0x1d) & 0x40) == 0)) {\n                    var_18h = 0;\n                    var_10h = 0;\n                }\n                else {\n                    var_18h = *(iVar1 + 0x18 + *(iVar1 + 0x1e));\n                    var_10h = *(iVar1 + 0x14 + *(iVar1 + 0x1e));\n                }\n                if (((var_18h != 0) || (var_10h != 0)) && ((*(var_14h + 0x1d) & 0x80) != 0)) {\n                    *(var_14h + 0x1d) = *(var_14h + 0x1d) | 0x40;\n                    *(var_14h + 0x18 + *(var_14h + 0x1e)) = var_18h;\n                    *(var_14h + 0x14 + *(var_14h + 0x1e)) = var_10h;\n                }\n                (**(var_4h + 0x54))(var_4h, &var_14h, 1);\n            }\n            if (var_8h != arg_14h) {\n                iVar1 = arg_14h - var_8h;\n                arg_10h = arg_10h + var_8h * 4;\n                pcVar2 = fcn.000684a0(arg_8h);\n                (*pcVar2)(arg_8h, arg_ch, arg_10h, iVar1);\n            }\n        }\n        else {\n            pcVar2 = fcn.000684a0(arg_8h);\n            (*pcVar2)(arg_8h, arg_ch, arg_10h, arg_14h);\n        }\n    }\n    return;\n}\n",
        "token_count": 994
    },
    "0003ef50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0003ef50(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint *arg_18h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint *puVar5;\n    uint var_4h;\n    \n    uVar4 = arg_ch;\n    puVar5 = arg_18h;\n    pcVar1 = fcn.000684a0(arg_8h);\n    iVar2 = (*pcVar1)(arg_8h, uVar4, arg_10h, arg_14h, puVar5);\n    if ((iVar2 == 0) && (iVar3 = fcn.0003f210(arg_ch, 0, *arg_18h),  iVar3 == 0)) {\n        fcn.0003f0e0(*arg_18h);\n    }\n    return iVar2;\n}\n",
        "token_count": 217
    },
    "0003efb0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0003efb0(int32_t arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t var_14h;\n    uint *var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    var_4h = NULL;\n    var_ch = 0;\n    var_14h = 0;\n    if (arg_8h == 0) {\n        uVar1 = 0xc00000ef;\n    }\n    else {\n        fcn.000382a0(0x85092a38, &var_8h, 0);\n        var_4h = fcn.0003f2e0(arg_8h, 1);\n        if (var_4h != NULL) {\n            var_ch = var_4h + 0x18;\n            var_14h = var_4h + 0x14;\n        }\n        fcn.000382d0(0x85092a38, &var_8h, 0);\n        if (var_4h == NULL) {\n            uVar1 = 0xc000000d;\n        }\n        else {\n            iVar2 = fcn.00068090(var_14h);\n            if (iVar2 == 0) {\n                fcn.00068090(var_ch);\n            }\n            fcn.000382a0(0x85092a38, &var_8h, 0);\n            var_10h = NULL;\n            for (var_4h = *0x85092a34; (var_4h != NULL && (var_4h[3] != arg_8h)); var_4h = *var_4h) {\n                var_10h = var_4h;\n            }\n            if (var_4h != NULL) {\n                if (var_10h == NULL) {\n                    *0x85092a34 = *var_4h;\n                }\n                else {\n                    *var_10h = *var_4h;\n                }\n            }\n            fcn.000382d0(0x85092a38, &var_8h, 0);\n            fcn.00036460(var_4h);\n            uVar1 = 0;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 519
    },
    "0003f0e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0003f0e0(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_24h;\n    uint var_20h;\n    int32_t *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t *var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    var_1ch = NULL;\n    var_10h = NULL;\n    fcn.000382a0(0x85092a38, &var_8h, 0);\n    iVar1 = fcn.00045cc0(0x85092990, 0, 0);\n    if ((iVar1 != 0) && (var_4h = fcn.0003f2e0(arg_8h, 1),  var_4h != 0)) {\n        var_1ch = var_4h + 0x18;\n        var_10h = var_4h + 0x14;\n    }\n    fcn.000382d0(0x85092a38, &var_8h, 0);\n    if (var_4h == 0) {\n        iVar1 = -0x3ffffff3;\n    }\n    else if ((*var_1ch == 0) && (*var_10h == 0)) {\n        if (*(arg_8h + 0x24) == 0) {\n            iVar1 = -0x3fffffff;\n        }\n        else {\n            iVar1 = *(*(arg_8h + 0x24) + *0x85092ab4);\n            if ((iVar1 == 0) || (iVar1 = fcn.00067c30(iVar1, 0x8503acd0, var_1ch),  iVar1 == 0)) {\n                iVar1 = fcn.00067c30(*(arg_8h + *0x8509ed88), 0x8503ad50, var_10h);\n                if (iVar1 != 0) {\n                    fcn.00068090(var_1ch);\n                }\n                iVar1 = 0;\n            }\n        }\n    }\n    else {\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 522
    },
    "0003f210": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0003f210(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = 0;\n    iVar1 = fcn.0003f2e0(arg_10h, 0);\n    if (iVar1 == 0) {\n        puVar2 = fcn.00036360(0x1c);\n        if (puVar2 == NULL) {\n            var_ch = 0xc000009a;\n        }\n        else {\n            *puVar2 = 0;\n            puVar2[1] = 0;\n            puVar2[2] = 0;\n            puVar2[3] = 0;\n            puVar2[4] = 0;\n            puVar2[5] = 0;\n            puVar2[6] = 0;\n            puVar2[1] = arg_8h;\n            puVar2[2] = arg_ch;\n            puVar2[3] = arg_10h;\n            fcn.000382a0(0x85092a38, &var_4h, 1);\n            iVar1 = fcn.00045cc0(0x85092990, 0, 0);\n            if (iVar1 == 0) {\n                var_ch = 0x21590006;\n            }\n            else {\n                *puVar2 = *0x85092a34;\n                *0x85092a34 = puVar2;\n            }\n            fcn.000382d0(0x85092a38, &var_4h, 1);\n        }\n    }\n    else {\n        var_ch = 0;\n    }\n    return var_ch;\n}\n",
        "token_count": 406
    },
    "0003f2e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0003f2e0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint *var_8h;\n    uint var_4h;\n    \n    if (arg_ch == 0) {\n        fcn.000382a0(0x85092a38, &var_4h, 0);\n    }\n    for (var_8h = *0x85092a34; (var_8h != NULL && (var_8h[3] != arg_8h)); var_8h = *var_8h) {\n    }\n    if (arg_ch == 0) {\n        fcn.000382d0(0x85092a38, &var_4h, 0);\n    }\n    return var_8h;\n}\n",
        "token_count": 179
    },
    "0003f350": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0003f350(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint *var_8h;\n    uint var_4h;\n    \n    if (arg_ch == 0) {\n        fcn.000382a0(0x85092a38, &var_4h, 0);\n    }\n    for (var_8h = *0x85092a34; (var_8h != NULL && (var_8h[1] != arg_8h)); var_8h = *var_8h) {\n    }\n    if (arg_ch == 0) {\n        fcn.000382d0(0x85092a38, &var_4h, 0);\n    }\n    return var_8h;\n}\n",
        "token_count": 177
    },
    "0003f3c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0003f3c0(void)\n\n{\n    uint uVar1;\n    uint var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    var_4h = NULL;\n    var_ch = 0;\n    fcn.000382a0(0x85092a38, &var_8h, 0);\n    var_4h = *0x85092a34;\n    do {\n        if (var_4h == NULL) {\ncode_r0x0003f423:\n            fcn.000382d0(0x85092a38, &var_8h, 0);\n            return var_ch;\n        }\n        uVar1 = fcn.000426d0(var_4h[2]);\n        var_4h[4] = uVar1;\n        if (var_4h[4] == 0) {\n            var_ch = 0xc0000001;\n            goto code_r0x0003f423;\n        }\n        var_4h = *var_4h;\n    } while( true );\n}\n",
        "token_count": 240
    },
    "0003f440": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0003f440(uint arg_8h)\n\n{\n    uint var_14h;\n    uint var_10h;\n    uchar var_ch;\n    uchar var_bh;\n    ushort var_ah;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*0x85092a74 == 0) {\n        var_10h._0_1_ = 0x80;\n        var_10h._1_1_ = 1;\n        var_10h._2_2_ = 0x10;\n        var_ch = 0;\n        var_ah = 8;\n        var_8h = 0x666c3650;\n        var_bh = 1;\n        var_4h = 0x5e8;\n        *0x85092a74 = (**0x8509299c)(arg_8h, &var_10h);\n    }\n    return 0;\n}\n",
        "token_count": 218
    },
    "0003f4a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0003f4a0(void)\n\n{\n    if (*0x85092a74 != 0) {\n        (**0x850929a0)(*0x85092a74);\n    }\n    *0x85092a74 = 0;\n    return;\n}\n",
        "token_count": 62
    },
    "0003f4d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0003f4f5)\n\nuint __cdecl fcn.0003f4d0(int32_t arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    uint var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    var_4h = NULL;\n    uVar2 = *(arg_8h + 2) + *(arg_8h + 3) & 0x8000000f;\n    var_4h = fcn.00036360(0x10);\n    if (var_4h == NULL) {\n        uVar1 = 0xc000009a;\n    }\n    else {\n        *var_4h = 0;\n        var_4h[2] = arg_8h;\n        var_4h[1] = arg_ch;\n        var_4h[3] = *(arg_8h + 0x10);\n        fcn.000382a0(0x8509ee20, &var_8h, 1);\n        *var_4h = *(uVar2 * 4 + -0x7af611d4);\n        *(uVar2 * 4 + -0x7af611d4) = var_4h;\n        fcn.000382d0(0x8509ee20, &var_8h, 1);\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 336
    },
    "0003f580": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0003f59e)\n\nuint __cdecl fcn.0003f580(int32_t arg_8h, int32_t arg_ch, uint *arg_10h)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    uint var_10h;\n    uint var_ch;\n    uint *var_8h;\n    uint *var_4h;\n    \n    uVar2 = *(arg_8h + 2) + *(arg_8h + 3) & 0x8000000f;\n    fcn.000382a0(0x8509ee20, &var_ch, 1);\n    var_8h = NULL;\n    var_4h = *(uVar2 * 4 + -0x7af611d4);\n    do {\n        if (var_4h == NULL) {\ncode_r0x0003f626:\n            fcn.000382d0(0x8509ee20, &var_ch, 1);\n            if (var_4h == NULL) {\n                uVar1 = 0xc0000001;\n            }\n            else {\n                fcn.00036460(var_4h);\n                uVar1 = 0;\n            }\n            return uVar1;\n        }\n        if ((var_4h[2] == arg_8h) && (var_4h[1] == arg_ch)) {\n            if (var_8h == NULL) {\n                *(uVar2 * 4 + -0x7af611d4) = *var_4h;\n            }\n            else {\n                *var_8h = *var_4h;\n            }\n            *arg_10h = var_4h[3];\n            goto code_r0x0003f626;\n        }\n        var_8h = var_4h;\n        var_4h = *var_4h;\n    } while( true );\n}\n",
        "token_count": 427
    },
    "0003f660": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0003f660(uint arg_8h)\n\n{\n    uint var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_18h = 0;\n    var_10h = 0;\n    var_24h = 0;\n    var_4h = 0;\n    var_8h = 0;\n    var_1ch = 0;\n    if (*0x85092a70 == 0) {\n        var_20h = fcn.0003f440(arg_8h);\n        if ((var_20h == 0) && (var_20h = fcn.000441e0(arg_8h, &var_1ch, &var_14h),  var_20h == 0)) {\n            fcn.000380a0(0x85092a4c);\n            fcn.0007f916(0x8509ee20, 0, 0x4c);\n            fcn.000380a0(0x8509ee20);\n            var_20h = fcn.00035b80(0x85010af8, &var_8h);\n            if ((((var_20h == 0) &&\n                 ((((var_20h = fcn.00060f50(var_8h, 0x85010d90, &var_18h),  var_20h == 0 &&\n                    (var_20h = fcn.00060f50(var_8h, 0x85010dac, &var_10h),  var_20h == 0)) &&\n                   (var_20h = fcn.00060f50(var_8h, 0x850110d8, &var_24h),  var_20h == 0)) &&\n                  ((var_20h = fcn.00060f50(var_8h, 0x850110f0, &var_4h),  var_20h == 0 &&\n                   (var_20h = fcn.00067c30(var_18h, 0x8503bba0, 0x85092a60),  var_20h == 0)))))) &&\n                (var_20h = fcn.00067c30(var_10h, 0x8503bbe0, 0x85092a64),  var_20h == 0)) &&\n               ((var_20h = fcn.00067c30(var_24h, 0x8503c100, 0x85092a68),  var_20h == 0 &&\n                (var_20h = fcn.00067c30(var_4h, 0x8503bb30, 0x85092a6c),  var_20h == 0)))) {\n                var_20h = 0;\n                for (var_ch = 0; var_ch < var_14h; var_ch = var_ch + 1) {\n                    var_20h = fcn.0003f9c0(*(var_1ch + var_ch * 4));\n                    if (var_20h != 0) goto code_r0x0003f85c;\n                }\n                *0x85092a70 = 1;\n            }\n        }\ncode_r0x0003f85c:\n        fcn.00036460(var_1ch);\n        if (var_20h != 0) {\n            fcn.0003f880();\n        }\n    }\n    else {\n        var_20h = 0;\n    }\n    return var_20h;\n}\n",
        "token_count": 848
    },
    "0003f880": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid fcn.0003f880(void)\n\n{\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    if (*0x85092a70 != 0) {\n        *0x85092a70 = 0;\n        while( true ) {\n            fcn.000382a0(0x85092a4c, &var_4h, 0);\n            if (*0x85092a58 == 0) {\n                var_10h = 0;\n            }\n            else {\n                var_10h = *(*0x85092a58 + 4);\n            }\n            fcn.000382d0(0x85092a4c, &var_4h, 0);\n            if (var_10h == 0) break;\n            fcn.0003f9a0(var_10h);\n        }\n        fcn.00068090(0x85092a64);\n        fcn.00068090(0x85092a60);\n        fcn.00068090(0x85092a68);\n        fcn.00068090(0x85092a6c);\n        for (var_8h = 0; var_8h < 0x10; var_8h = var_8h + 1) {\n            fcn.000382a0(0x8509ee20, &var_4h, 0);\n            while (*(var_8h * 4 + -0x7af611d4) != 0) {\n                fcn.000382d0(0x8509ee20, &var_4h, 0);\n                fcn.0005bdd0(0x32);\n                fcn.000382a0(0x8509ee20, &var_4h, 0);\n            }\n            fcn.000382d0(0x8509ee20, &var_4h, 0);\n        }\n        fcn.00038300(0x8509ee20);\n        fcn.0003f4a0();\n    }\n    return;\n}\n",
        "token_count": 490
    },
    "0003f9c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0003f9c0(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_10h = fcn.00040940(arg_8h);\n    if (var_10h == 0) {\n        for (var_4h = 0; var_4h < 2; var_4h = var_4h + 1) {\n            iVar1 = fcn.0007f89e();\n            if (iVar1 == 0) {\n                return 0;\n            }\n        }\n        var_10h = fcn.0003fe60(arg_8h, 4);\n        if ((((var_10h == 0) && (var_10h = fcn.0003fe60(arg_8h, 3),  var_10h == 0)) &&\n            (var_10h = fcn.0003fe60(arg_8h, 0),  var_10h == 0)) && (var_10h = fcn.0003fe60(arg_8h, 2),  var_10h == 0)) {\n            var_ch = *(arg_8h + 0xc);\n            while (((var_ch != 0 && (var_10h = fcn.00040790(var_ch, *(var_ch + 0xc), arg_8h),  var_10h == 0)) &&\n                   ((var_10h = fcn.0003fd60(var_ch, *(var_ch + 0x10c), 0),  var_10h == 0 &&\n                    (var_10h = fcn.0003fd60(var_ch, *(var_ch + 0x110), 2),  var_10h == 0))))) {\n                var_ch = *(var_ch + 4);\n            }\n        }\n        if (var_10h != 0) {\n            fcn.0003f9a0(arg_8h);\n        }\n    }\n    return var_10h;\n}\n",
        "token_count": 486
    },
    "0003fb30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0003fb30(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    code *pcVar1;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    fcn.000382a0(0x85092a4c, &var_8h, 1);\n    var_4h = fcn.00040720(arg_ch, 1);\n    if (var_4h != 0) {\n        *(var_4h + 0x18) = arg_10h;\n    }\n    fcn.000382d0(0x85092a4c, &var_8h, 1);\n    pcVar1 = fcn.000684a0(arg_8h);\n    (*pcVar1)(arg_8h, arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 214
    },
    "0003fba0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0003fba0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint *arg_18h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_4h;\n    \n    puVar3 = arg_18h;\n    pcVar1 = fcn.000684a0(arg_8h);\n    iVar2 = (*pcVar1)(arg_8h, arg_ch, arg_10h, arg_14h, puVar3);\n    if (iVar2 == 0) {\n        fcn.0003f9c0(*arg_18h);\n    }\n    return iVar2;\n}\n",
        "token_count": 165
    },
    "0003fc00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0003fc00(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = 0;\n    var_14h = 0;\n    var_10h = 0;\n    var_8h = 0;\n    fcn.000382a0(0x85092a4c, &var_4h, 1);\n    iVar1 = fcn.00040860(arg_8h, 1);\n    if (iVar1 != 0) {\n        var_ch = *(iVar1 + 0xc);\n        var_14h = *(iVar1 + 0x10);\n        var_10h = *(iVar1 + 0x18);\n        var_8h = *(iVar1 + 0x14);\n        *(iVar1 + 0x18) = 0;\n        *(iVar1 + 0x14) = 0;\n        *(iVar1 + 0xc) = 0;\n        *(iVar1 + 0x10) = 0;\n    }\n    fcn.000382d0(0x85092a4c, &var_4h, 1);\n    fcn.00068090(&var_ch);\n    fcn.00068090(&var_14h);\n    fcn.00068090(&var_10h);\n    fcn.00068090(&var_8h);\n    return 0;\n}\n",
        "token_count": 350
    },
    "0003fcd0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0003fcd0(uint arg_8h)\n\n{\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_ch = 0;\n    var_10h = 0;\n    fcn.000382a0(0x85092a4c, &var_4h, 1);\n    var_8h = fcn.00040720(arg_8h, 1);\n    if (var_8h != 0) {\n        var_ch = *(var_8h + 8);\n        var_10h = *(var_8h + 0xc);\n        *(var_8h + 8) = 0;\n        *(var_8h + 0xc) = 0;\n    }\n    fcn.000382d0(0x85092a4c, &var_4h, 1);\n    fcn.00068090(&var_ch);\n    fcn.00068090(&var_10h);\n    return 0;\n}\n",
        "token_count": 238
    },
    "0003fd60": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0003fd60(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = 0;\n    var_10h = 0;\n    if (arg_8h == 0) {\n        iVar1 = -0x3fffff11;\n    }\n    else if (arg_ch == 0) {\n        iVar1 = 0;\n    }\n    else {\n        if (arg_10h == 0) {\n            var_4h = 0x8503c1a0;\n        }\n        else {\n            if (arg_10h != 2) {\n                return -0x3fffff0f;\n            }\n            var_4h = 0x8503c310;\n        }\n        iVar1 = fcn.00068390(arg_ch, 0x50, 5, &var_14h);\n        if (iVar1 == 0) {\n            if (var_14h < 5) {\n                iVar1 = 0;\n            }\n            else {\n                fcn.000382a0(0x85092a4c, &var_8h, 1);\n                var_ch = fcn.00040720(arg_8h, 1);\n                if (var_ch != 0) {\n                    if (arg_10h == 0) {\n                        var_10h = var_ch + 8;\n                    }\n                    else if (arg_10h == 2) {\n                        var_10h = var_ch + 0xc;\n                    }\n                }\n                fcn.000382d0(0x85092a4c, &var_8h, 1);\n                iVar1 = fcn.00067c30(arg_ch, var_4h, var_10h);\n            }\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 476
    },
    "0003fe60": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Removing unreachable block (ram,0x0003fef1)\n// WARNING: Removing unreachable block (ram,0x0003fefe)\n// WARNING: Removing unreachable block (ram,0x0003ff20)\n// WARNING: Removing unreachable block (ram,0x0003ff2d)\n// WARNING: Removing unreachable block (ram,0x0003ff51)\n// WARNING: Removing unreachable block (ram,0x0003ff5d)\n// WARNING: Removing unreachable block (ram,0x0003ff91)\n// WARNING: Removing unreachable block (ram,0x0003ff26)\n// WARNING: Removing unreachable block (ram,0x0003ff18)\n// WARNING: Switch with 1 destination removed at 0x0003fe8a\n\nuint __cdecl fcn.0003fe60(uint arg_8h, uint32_t arg_ch)\n\n{\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_ch < 5) {\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    return 0;\n}\n",
        "token_count": 298
    },
    "0003ffe0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0003ffe0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.000382a0(0x85092a4c, &var_8h, 0);\n    iVar1 = fcn.000408d0(arg_10h, 1);\n    if (iVar1 == 0) {\n        fcn.000382d0(0x85092a4c, &var_8h, 0);\n        iVar1 = -0x3fffff0f;\n    }\n    else {\n        var_4h = *(iVar1 + 4);\n        fcn.000382d0(0x85092a4c, &var_8h, 0);\n        fcn.00040790(arg_ch, 0, var_4h);\n        uVar3 = arg_ch;\n        pcVar2 = fcn.000684a0(arg_8h);\n        iVar1 = (*pcVar2)(arg_8h, uVar3, arg_10h, arg_14h);\n        if (iVar1 != 0) {\n            fcn.000404b0(arg_ch);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 323
    },
    "00040080": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00040080(uint arg_8h, uint arg_ch)\n\n{\n    uint arg_8h_00;\n    int32_t iVar1;\n    code *pcVar2;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.000382a0(0x85092a4c, &var_4h, 0);\n    iVar1 = fcn.000406b0(arg_ch, 1);\n    if ((iVar1 == 0) || (*(iVar1 + 4) == 0)) {\n        fcn.000382d0(0x85092a4c, &var_4h, 0);\n    }\n    else {\n        arg_8h_00 = *(iVar1 + 0x14);\n        fcn.000382d0(0x85092a4c, &var_4h, 0);\n        pcVar2 = fcn.000684a0(arg_8h);\n        (*pcVar2)(arg_8h, arg_ch);\n        fcn.000404b0(arg_8h_00);\n    }\n    return;\n}\n",
        "token_count": 255
    },
    "00040100": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00040100(uint arg_8h, uint arg_ch, char *arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    char *pcVar4;\n    uint var_4h;\n    \n    if ((*arg_10h == -0x74) && (*(arg_10h + 2) == 0x1c)) {\n        fcn.0003fcd0(arg_ch);\n    }\n    uVar3 = arg_ch;\n    pcVar4 = arg_10h;\n    pcVar1 = fcn.000684a0(arg_8h);\n    iVar2 = (*pcVar1)(arg_8h, uVar3, pcVar4);\n    if (((iVar2 == 0) && (*arg_10h == -0x74)) && (*(arg_10h + 2) == 0x1c)) {\n        fcn.0003fd60(arg_ch, *(arg_10h + 8), 0);\n        fcn.0003fd60(arg_ch, *(arg_10h + 0xc), 2);\n    }\n    return iVar2;\n}\n",
        "token_count": 261
    },
    "000401a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000401a0(uint arg_8h, uint arg_ch, uint *arg_10h, uint arg_14h, uint32_t arg_18h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint *var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    var_1ch = 0;\n    var_10h = 0;\n    fcn.000382a0(0x85092a4c, &var_8h, 0);\n    iVar2 = fcn.000406b0(arg_ch, 1);\n    if (iVar2 != 0) {\n        var_10h = *(iVar2 + 0x14);\n        if (*(iVar2 + 8) == 0) {\n            var_20h = *(*(iVar2 + 4) + 0xc);\n        }\n        else {\n            var_20h = *(iVar2 + 8);\n        }\n        var_1ch = var_20h;\n    }\n    fcn.000382d0(0x85092a4c, &var_8h, 0);\n    if (((var_10h != 0) && (var_1ch != 0)) && (iVar2 = fcn.0004ca90(),  iVar2 != 0)) {\n        var_4h = arg_10h;\n        while( true ) {\n            if (var_4h == NULL) {\n                cVar1 = (**0x8500d004)();\n                if (cVar1 == '\\x02') {\n                    arg_18h = arg_18h | 1;\n                }\n                (**0x850929c4)(var_10h, arg_10h, arg_14h, arg_18h);\n                return;\n            }\n            iVar2 = fcn.0003f4d0(var_4h, arg_ch);\n            if (iVar2 != 0) break;\n            var_4h[4] = *0x85092a74;\n            var_4h = *var_4h;\n        }\n        for (var_14h = arg_10h; var_14h != NULL; var_14h = *var_14h) {\n            fcn.0003f580(var_14h, arg_ch, var_14h + 4);\n        }\n        pcVar3 = fcn.000684a0(arg_8h);\n        (*pcVar3)(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n        return;\n    }\n    pcVar3 = fcn.000684a0(arg_8h);\n    (*pcVar3)(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n    return;\n}\n",
        "token_count": 671
    },
    "00040310": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00040310(uint arg_8h, uint arg_ch, uint *arg_10h, uint32_t arg_14h)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    char cVar3;\n    int32_t iVar4;\n    code *pcVar5;\n    uint uVar6;\n    uint uVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    uVar2 = arg_14h;\n    var_4h = NULL;\n    var_20h = 0;\n    var_10h = 0;\n    fcn.000382a0(0x85092a4c, &var_8h, 0);\n    iVar4 = fcn.000406b0(arg_ch, 1);\n    if (iVar4 != 0) {\n        if (*(iVar4 + 0xc) == 0) {\n            var_24h = *(*(iVar4 + 4) + 0x10);\n        }\n        else {\n            var_24h = *(iVar4 + 0xc);\n        }\n        var_20h = var_24h;\n        var_10h = *(iVar4 + 0x14);\n    }\n    fcn.000382d0(0x85092a4c, &var_8h, 0);\n    if ((var_10h == 0) || (var_20h == 0)) {\n        pcVar5 = fcn.000684a0(arg_8h);\n        (*pcVar5)(arg_8h, arg_ch, arg_10h, arg_14h);\n    }\n    else {\n        for (var_4h = arg_10h; (var_4h != NULL && (var_4h[4] != *0x85092a74)); var_4h = *var_4h) {\n        }\n        if (var_4h == NULL) {\n            pcVar5 = fcn.000684a0(arg_8h);\n            (*pcVar5)(arg_8h, arg_ch, arg_10h, arg_14h);\n        }\n        else {\n            cVar3 = (**0x8500d004)();\n            if (cVar3 == '\\x02') {\n                arg_14h = arg_14h | 1;\n            }\n            var_4h = arg_10h;\n            puVar1 = var_4h;\n            while (var_4h = puVar1,  var_4h != NULL) {\n                puVar1 = *var_4h;\n                *var_4h = 0;\n                if (var_4h[4] == *0x85092a74) {\n                    iVar4 = fcn.0003f580(var_4h, arg_ch, var_4h + 4);\n                    if (iVar4 == 0) {\n                        (**0x850929c8)(var_10h, var_4h, uVar2);\n                    }\n                }\n                else {\n                    uVar6 = arg_8h;\n                    uVar7 = arg_ch;\n                    puVar8 = var_4h;\n                    uVar9 = arg_14h;\n                    pcVar5 = fcn.000684a0(arg_8h);\n                    (*pcVar5)(uVar6, uVar7, puVar8, uVar9);\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 823
    },
    "000404b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000404b0(int32_t arg_8h)\n\n{\n    uint uVar1;\n    uint *var_ch;\n    uint *var_8h;\n    uint var_4h;\n    \n    if (arg_8h == 0) {\n        uVar1 = 0x21590065;\n    }\n    else {\n        fcn.0003fcd0(arg_8h);\n        fcn.000382a0(0x85092a4c, &var_4h, 1);\n        var_8h = NULL;\n        for (var_ch = *0x85092a5c; (var_ch != NULL && (var_ch[5] != arg_8h)); var_ch = *var_ch) {\n            var_8h = var_ch;\n        }\n        if (var_ch != NULL) {\n            if (var_8h == NULL) {\n                *0x85092a5c = *var_ch;\n            }\n            else {\n                *var_8h = *var_ch;\n            }\n        }\n        fcn.000382d0(0x85092a4c, &var_4h, 1);\n        if (var_ch == NULL) {\n            uVar1 = 0xc00000ef;\n        }\n        else {\n            fcn.00036460(var_ch);\n            uVar1 = 0;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 312
    },
    "00040580": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00040580(int32_t arg_8h)\n\n{\n    uint *var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    do {\n        var_8h = 0;\n        fcn.000382a0(0x85092a4c, &var_4h, 0);\n        for (var_ch = *0x85092a5c; var_ch != NULL; var_ch = *var_ch) {\n            if (var_ch[4] == arg_8h) {\n                var_8h = var_ch[5];\n                break;\n            }\n        }\n        fcn.000382d0(0x85092a4c, &var_4h, 0);\n        if (var_8h == 0) {\n            return 0;\n        }\n        fcn.000404b0(var_8h);\n    } while( true );\n}\n",
        "token_count": 220
    },
    "00040600": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00040600(int32_t arg_8h)\n\n{\n    uint uVar1;\n    uint *var_ch;\n    uint *var_8h;\n    uint var_4h;\n    \n    fcn.0003fc00(arg_8h);\n    fcn.000382a0(0x85092a4c, &var_4h, 0);\n    var_ch = NULL;\n    for (var_8h = *0x85092a58; (var_8h != NULL && (var_8h[1] != arg_8h)); var_8h = *var_8h) {\n        var_ch = var_8h;\n    }\n    if (var_8h != NULL) {\n        if (var_ch == NULL) {\n            *0x85092a58 = *var_8h;\n        }\n        else {\n            *var_ch = *var_8h;\n        }\n    }\n    fcn.000382d0(0x85092a4c, &var_4h, 0);\n    if (var_8h == NULL) {\n        uVar1 = 0xc00000ef;\n    }\n    else {\n        fcn.00036460(var_8h);\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 291
    },
    "000406b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.000406b0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint *var_8h;\n    uint var_4h;\n    \n    if (arg_ch == 0) {\n        fcn.000382a0(0x85092a4c, &var_4h, 0);\n    }\n    for (var_8h = *0x85092a5c; (var_8h != NULL && (var_8h[6] != arg_8h)); var_8h = *var_8h) {\n    }\n    if (arg_ch == 0) {\n        fcn.000382d0(0x85092a4c, &var_4h, 0);\n    }\n    return var_8h;\n}\n",
        "token_count": 180
    },
    "00040720": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00040720(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint *var_8h;\n    uint var_4h;\n    \n    if (arg_ch == 0) {\n        fcn.000382a0(0x85092a4c, &var_4h, 0);\n    }\n    for (var_8h = *0x85092a5c; (var_8h != NULL && (var_8h[5] != arg_8h)); var_8h = *var_8h) {\n    }\n    if (arg_ch == 0) {\n        fcn.000382d0(0x85092a4c, &var_4h, 0);\n    }\n    return var_8h;\n}\n",
        "token_count": 179
    },
    "00040790": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00040790(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint *arg_8h_00;\n    int32_t iVar1;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    arg_8h_00 = fcn.00036360(0x1c);\n    if (arg_8h_00 == NULL) {\n        var_4h = -0x3fffff66;\n    }\n    else {\n        *arg_8h_00 = 0;\n        arg_8h_00[1] = 0;\n        arg_8h_00[2] = 0;\n        arg_8h_00[3] = 0;\n        arg_8h_00[4] = 0;\n        arg_8h_00[5] = 0;\n        arg_8h_00[6] = 0;\n        arg_8h_00[5] = arg_8h;\n        arg_8h_00[6] = arg_ch;\n        arg_8h_00[4] = arg_10h;\n        fcn.000382a0(0x85092a4c, &var_8h, 1);\n        iVar1 = fcn.00040860(arg_10h, 1);\n        if (iVar1 == 0) {\n            var_4h = -0x3fffff0f;\n        }\n        else {\n            arg_8h_00[1] = iVar1;\n            *arg_8h_00 = *0x85092a5c;\n            var_4h = 0;\n            *0x85092a5c = arg_8h_00;\n        }\n        fcn.000382d0(0x85092a4c, &var_8h, 1);\n        if (var_4h != 0) {\n            fcn.00036460(arg_8h_00);\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 467
    },
    "00040860": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00040860(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint *var_8h;\n    uint var_4h;\n    \n    if (arg_ch == 0) {\n        fcn.000382a0(0x85092a4c, &var_4h, 0);\n    }\n    for (var_8h = *0x85092a58; (var_8h != NULL && (var_8h[1] != arg_8h)); var_8h = *var_8h) {\n    }\n    if (arg_ch == 0) {\n        fcn.000382d0(0x85092a4c, &var_4h, 0);\n    }\n    return var_8h;\n}\n",
        "token_count": 178
    },
    "000408d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.000408d0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint *var_8h;\n    uint var_4h;\n    \n    if (arg_ch == 0) {\n        fcn.000382a0(0x85092a4c, &var_4h, 0);\n    }\n    for (var_8h = *0x85092a58; (var_8h != NULL && (var_8h[2] != arg_8h)); var_8h = *var_8h) {\n    }\n    if (arg_ch == 0) {\n        fcn.000382d0(0x85092a4c, &var_4h, 0);\n    }\n    return var_8h;\n}\n",
        "token_count": 179
    },
    "00040940": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00040940(int32_t arg_8h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar1 = fcn.00036360(0x1c);\n    if (puVar1 == NULL) {\n        uVar2 = 0xc000009a;\n    }\n    else {\n        *puVar1 = 0;\n        puVar1[1] = 0;\n        puVar1[2] = 0;\n        puVar1[3] = 0;\n        puVar1[4] = 0;\n        puVar1[5] = 0;\n        puVar1[6] = 0;\n        puVar1[1] = arg_8h;\n        puVar1[2] = *(arg_8h + 0x10);\n        fcn.000382a0(0x85092a4c, &var_4h, 1);\n        *puVar1 = *0x85092a58;\n        *0x85092a58 = puVar1;\n        fcn.000382d0(0x85092a4c, &var_4h, 1);\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 299
    },
    "000409d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.000409d0(void)\n\n{\n    uint var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_18h = 0;\n    var_4h = 0;\n    var_8h = 0;\n    var_10h = 0;\n    var_14h = 0;\n    var_ch = 0;\n    if (*0x85092a8c == 0) {\n        var_1ch = fcn.00035b80(0x85010af8, &var_20h);\n        if ((((var_1ch == 0) && (var_1ch = fcn.00060f50(var_20h, 0x85010d0c, &var_4h),  var_1ch == 0)) &&\n            (var_1ch = fcn.00060f50(var_20h, 0x85010cf0, &var_18h),  var_1ch == 0)) &&\n           (((var_1ch = fcn.00060f50(var_20h, 0x85011104, &var_8h),  var_1ch == 0 &&\n             (var_1ch = fcn.00060f50(var_20h, 0x85011128, &var_ch),  var_1ch == 0)) &&\n            ((var_1ch = fcn.00060f50(var_20h, 0x85011140, &var_10h),  var_1ch == 0 &&\n             (var_1ch = fcn.00060f50(var_20h, 0x85011154, &var_14h),  var_1ch == 0)))))) {\n            *0x85090fb0 = 0;\n            *0x85090fb4 = 0;\n            *0x85090fb8 = 0;\n            *0x85090fbc = 0;\n            *0x85090fc0 = 0;\n            fcn.000380a0(0x85090fb0);\n            var_1ch = fcn.00067c30(var_18h, 0x8503d570, 0x85092a78);\n            if (var_1ch == 0) {\n                fcn.00068540(*0x85092a78);\n                var_1ch = fcn.00067c30(var_4h, 0x8503d550, 0x85092a7c);\n                if (var_1ch == 0) {\n                    fcn.00068540(*0x85092a7c);\n                    var_1ch = fcn.00067c30(var_8h, 0x8503d640, 0x85092a88);\n                    if (var_1ch == 0) {\n                        fcn.00068540(*0x85092a88);\n                        var_1ch = fcn.00067c30(var_ch, 0x8503d610, 0x85092a84);\n                        if (var_1ch == 0) {\n                            fcn.00068540(*0x85092a84);\n                            var_1ch = fcn.00067c30(var_10h, 0x8503d5e0, 0x85092a80);\n                            if (var_1ch == 0) {\n                                fcn.00068540(*0x85092a80);\n                                *0x85092a8c = 1;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (var_1ch != 0) {\n            fcn.00040c10();\n        }\n    }\n    else {\n        var_1ch = 0;\n    }\n    return var_1ch;\n}\n",
        "token_count": 883
    },
    "00040c10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00040c10(void)\n\n{\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_ch = 0;\n    if (*0x85092a8c != 0) {\n        *0x85092a8c = 0;\n        fcn.00068540(*0x85092a80);\n        fcn.00068090(0x85092a80);\n        fcn.00068540(*0x85092a84);\n        fcn.00068090(0x85092a84);\n        fcn.00068540(*0x85092a88);\n        fcn.00068090(0x85092a88);\n        fcn.00068540(*0x85092a7c);\n        fcn.00068090(0x85092a7c);\n        fcn.00068540(*0x85092a78);\n        fcn.00068090(0x85092a78);\n        while( true ) {\n            fcn.000382a0(0x85090fb0, &var_8h, 1);\n            var_4h = *0x85090fbc;\n            if (*0x85090fbc != 0) {\n                var_ch = *(*0x85090fbc + 0xc);\n            }\n            fcn.000382d0(0x85090fb0, &var_8h, 1);\n            if (var_4h == 0) break;\n            fcn.00041230(var_ch);\n        }\n    }\n    return;\n}\n",
        "token_count": 354
    },
    "00040d00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00040d00(int32_t arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint var_8h;\n    uint *var_4h;\n    \n    var_4h = NULL;\n    var_4h = fcn.00036360(0x1c);\n    if (var_4h == NULL) {\n        uVar1 = 0xc000009a;\n    }\n    else {\n        *var_4h = 0;\n        var_4h[1] = 0;\n        var_4h[2] = 0;\n        var_4h[3] = 0;\n        var_4h[4] = 0;\n        var_4h[5] = 0;\n        var_4h[6] = 0;\n        var_4h[4] = arg_8h + *0x8509edc0;\n        var_4h[5] = arg_8h + *0x8509ee0c;\n        var_4h[3] = arg_8h;\n        var_4h[2] = arg_ch;\n        fcn.000382a0(0x85090fb0, &var_8h, 1);\n        var_4h[1] = *0x85090fc0;\n        *0x85090fc0 = *0x85090fc0 + 1;\n        *var_4h = *0x85090fbc;\n        *0x85090fbc = var_4h;\n        fcn.000382d0(0x85090fb0, &var_8h, 1);\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 387
    },
    "00040dd0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00040dd0(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t var_40h;\n    int32_t *var_3ch;\n    uint32_t var_38h;\n    int32_t *var_34h;\n    uint32_t var_30h;\n    int32_t *var_2ch;\n    uint32_t var_28h;\n    int32_t *var_24h;\n    uint32_t var_20h;\n    int32_t *var_1ch;\n    uint32_t var_18h;\n    int32_t *var_14h;\n    uint *var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    var_10h = NULL;\n    iVar2 = fcn.00045cc0(0x85092990, 0, 0);\n    if (iVar2 == 0) {\n        return 0x21590006;\n    }\n    fcn.000382a0(0x85090fb0, &var_8h, 0);\n    var_4h = fcn.00041340(arg_8h, 0);\n    if (var_4h != 0) {\n        var_10h = *(var_4h + 0x18);\n    }\n    fcn.000382d0(0x85090fb0, &var_8h, 0);\n    if (var_4h == 0) {\n        return -0x3ffffff2;\n    }\n    if (var_10h != NULL) {\n        return -0x3fffffdf;\n    }\n    var_10h = fcn.00036360(0x18);\n    if (var_10h == NULL) {\n        return 0x21590004;\n    }\n    *var_10h = 0;\n    var_10h[1] = 0;\n    var_10h[2] = 0;\n    var_10h[3] = 0;\n    var_10h[4] = 0;\n    var_10h[5] = 0;\n    var_14h = arg_8h + *0x8509edd8;\n    if (*var_14h != 0) {\n        cVar1 = (**0x8500d224)(*var_14h);\n        if (cVar1 == '\\0') {\n            var_ch = -0x3ffffffb;\n            goto code_r0x000411c2;\n        }\n        var_ch = fcn.00068390(*var_14h, 0x30, 5, &var_18h);\n        if ((var_ch != 0) || ((3 < var_18h && (var_ch = fcn.00067c30(*var_14h, 0x8503d8e0, var_10h),  var_ch != 0))))\n        goto code_r0x000411c2;\n    }\n    var_1ch = arg_8h + *0x8509ede0;\n    if (*var_1ch != 0) {\n        cVar1 = (**0x8500d224)(*var_1ch);\n        if (cVar1 == '\\0') {\n            var_ch = -0x3ffffffb;\n            goto code_r0x000411c2;\n        }\n        var_ch = fcn.00068390(*var_1ch, 0x30, 5, &var_20h);\n        if ((var_ch != 0) || ((3 < var_20h && (var_ch = fcn.00067c30(*var_1ch, 0x8503d8a0, var_10h + 2),  var_ch != 0)))\n           ) goto code_r0x000411c2;\n    }\n    var_24h = arg_8h + *0x8509ede4;\n    if (*var_24h != 0) {\n        cVar1 = (**0x8500d224)(*var_24h);\n        if (cVar1 == '\\0') {\n            var_ch = -0x3ffffffb;\n            goto code_r0x000411c2;\n        }\n        var_ch = fcn.00068390(*var_24h, 0x30, 5, &var_28h);\n        if ((var_ch != 0) || ((3 < var_28h && (var_ch = fcn.00067c30(*var_24h, 0x8503d940, var_10h + 3),  var_ch != 0)))\n           ) goto code_r0x000411c2;\n    }\n    var_2ch = arg_8h + *0x8509edf0;\n    if (*var_2ch != 0) {\n        cVar1 = (**0x8500d224)(*var_2ch);\n        if (cVar1 == '\\0') {\n            var_ch = -0x3ffffffb;\n            goto code_r0x000411c2;\n        }\n        var_ch = fcn.00068390(*var_2ch, 0x30, 5, &var_30h);\n        if ((var_ch != 0) || ((3 < var_30h && (var_ch = fcn.00067c30(*var_2ch, 0x8503d880, var_10h + 4),  var_ch != 0)))\n           ) goto code_r0x000411c2;\n    }\n    var_34h = arg_8h + *0x8509ee04;\n    if (*var_34h != 0) {\n        cVar1 = (**0x8500d224)(*var_34h);\n        if (cVar1 == '\\0') {\n            var_ch = -0x3ffffffb;\n            goto code_r0x000411c2;\n        }\n        var_ch = fcn.00068390(*var_34h, 0x30, 5, &var_38h);\n        if ((var_ch != 0) || ((3 < var_38h && (var_ch = fcn.00067c30(*var_34h, 0x8503d830, var_10h + 5),  var_ch != 0)))\n           ) goto code_r0x000411c2;\n    }\n    var_3ch = arg_8h + *0x8509edfc;\n    if (*var_3ch != 0) {\n        cVar1 = (**0x8500d224)(*var_3ch);\n        if (cVar1 == '\\0') {\n            var_ch = -0x3ffffffb;\n            goto code_r0x000411c2;\n        }\n        var_ch = fcn.00068390(*var_3ch, 0x30, 5, &var_40h);\n        if ((var_ch != 0) || ((3 < var_40h && (var_ch = fcn.00067c30(*var_3ch, 0x8503d910, var_10h + 1),  var_ch != 0)))\n           ) goto code_r0x000411c2;\n    }\n    fcn.000382a0(0x85090fb0, &var_8h, 0);\n    var_4h = fcn.00041340(arg_8h, 0);\n    if (var_4h != 0) {\n        *(var_4h + 0x18) = var_10h;\n    }\n    fcn.000382d0(0x85090fb0, &var_8h, 0);\n    var_ch = 0;\ncode_r0x000411c2:\n    if (var_ch != 0) {\n        fcn.00068090(var_10h);\n        fcn.00068090(var_10h + 2);\n        fcn.00068090(var_10h + 3);\n        fcn.00068090(var_10h + 4);\n        fcn.00068090(var_10h + 5);\n        fcn.00068090(var_10h + 1);\n        fcn.00036460(var_10h);\n    }\n    return var_ch;\n}\n",
        "token_count": 1850
    },
    "00041230": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00041230(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    var_4h = NULL;\n    var_ch = NULL;\n    if (arg_8h == 0) {\n        iVar1 = -0x3ffffff8;\n    }\n    else {\n        fcn.000382a0(0x85090fb0, &var_8h, 0);\n        var_4h = fcn.00041340(arg_8h, &var_ch);\n        if (var_4h != NULL) {\n            if (var_ch == NULL) {\n                *0x85090fbc = *var_4h;\n            }\n            else {\n                *var_ch = *var_4h;\n            }\n        }\n        fcn.000382d0(0x85090fb0, &var_8h, 0);\n        if (var_4h != NULL) {\n            if (var_4h[6] != 0) {\n                fcn.00068090(var_4h[6]);\n                fcn.00068090(var_4h[6] + 8);\n                fcn.00068090(var_4h[6] + 0xc);\n                fcn.00068090(var_4h[6] + 0x10);\n                fcn.00068090(var_4h[6] + 0x14);\n                fcn.00068090(var_4h[6] + 4);\n                fcn.00036460(var_4h[6]);\n            }\n            fcn.00036460(var_4h);\n        }\n        iVar1 = (-(var_4h != NULL) & 0x3ffffff8) + 0xc0000008;\n    }\n    return iVar1;\n}\n",
        "token_count": 420
    },
    "00041340": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00041340(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint *var_4h;\n    \n    if (arg_ch != NULL) {\n        *arg_ch = 0;\n    }\n    for (var_4h = *0x85090fbc; (var_4h != NULL && (var_4h[3] != arg_8h)); var_4h = *var_4h) {\n        if (arg_ch != NULL) {\n            *arg_ch = var_4h;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 134
    },
    "000413a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.000413a0(int32_t arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    int32_t var_8h;\n    uint var_4h;\n    \n    if (((arg_8h == 0) && (arg_ch == 0)) || ((arg_8h != 0 && (arg_ch != 0)))) {\n        var_8h = -0x3fffff11;\n    }\n    else {\n        if (arg_8h == 0) {\n            var_8h = fcn.00039470(arg_ch, &var_4h);\n        }\n        else {\n            var_8h = fcn.000393c0(arg_8h, &var_4h);\n        }\n        if (var_8h == 0) {\n            var_8h = fcn.00039800(var_4h, arg_10h);\n        }\n    }\n    return var_8h;\n}\n",
        "token_count": 217
    },
    "00041410": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_8h\n\nuint32_t __cdecl fcn.00041410(uint *arg_8h, int32_t arg_ch)\n\n{\n    uint *arg_8h_00;\n    bool bVar1;\n    int32_t iVar2;\n    int32_t arg_ch_00;\n    uint32_t uVar3;\n    uint *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    var_1ch = NULL;\n    bVar1 = false;\n    for (var_4h = *(arg_ch + 4); var_4h != NULL; var_4h = *var_4h) {\n        arg_8h_00 = var_4h[3];\n        fcn.0005b540(0);\n        iVar2 = fcn.00036360(arg_8h_00);\n        if (iVar2 != 0) {\n            arg_ch_00 = (**0x850929ac)(var_4h, arg_8h_00, iVar2, 0, 0);\n            if (arg_ch_00 == 0) {\n                fcn.00036460(iVar2);\n            }\n            else {\n                iVar2 = fcn.00039b10(arg_8h, arg_ch_00, arg_8h_00);\n                if (iVar2 != 0) {\n                    fcn.000539b0(arg_8h, 0, 0, arg_ch_00, arg_8h_00);\n                }\n                fcn.00059210(arg_8h_00, arg_ch_00, arg_ch_00 + 0xe, arg_8h_00);\n                iVar2 = fcn.0004b810(arg_8h_00, 0, 0, arg_ch_00, 0, 0);\n                var_1ch = arg_8h_00;\n                if (iVar2 == 0) {\n                    var_1ch = arg_8h_00 + 1;\n                }\n                bVar1 = iVar2 != 0;\n                fcn.00036460(0);\n                arg_8h = arg_8h_00;\n                var_4h = arg_8h_00;\n            }\n        }\n    }\n    if ((var_1ch < 1) || (!bVar1)) {\n        uVar3 = 0 < var_1ch;\n    }\n    else {\n        uVar3 = 0xffffffff;\n    }\n    return uVar3;\n}\n",
        "token_count": 679
    },
    "00041570": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t __cdecl fcn.00041570(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h, uint arg_1ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    uint uVar3;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar3 = arg_ch;\n    iVar2 = arg_18h;\n    pcVar1 = fcn.000684a0(arg_8h);\n    iVar2 = (*pcVar1)(arg_8h, uVar3, arg_10h, arg_14h, iVar2, arg_1ch, 0);\n    if (iVar2 == 0) {\n        arg_8h_00 = (**0x8500d228)(arg_ch, 0x4e4d4944);\n        if (arg_8h_00 != 0) {\n            fcn.00040d00(arg_8h_00, *(arg_18h + 5));\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 274
    },
    "00041610": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00041610(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    uVar2 = arg_ch;\n    iVar3 = arg_10h;\n    pcVar1 = fcn.000684a0(arg_8h);\n    (*pcVar1)(arg_8h, uVar2, iVar3);\n    if (arg_10h == 0) {\n        fcn.000413a0(arg_ch, 0, 1);\n    }\n    return;\n}\n",
        "token_count": 137
    },
    "00041640": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00041640(uint arg_8h, int32_t arg_ch, uint *arg_10h, uint arg_14h, uint32_t arg_18h, uint32_t arg_1ch)\n\n{\n    char cVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    uint *puVar6;\n    uint uVar7;\n    uint32_t uVar8;\n    uint32_t var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    uint *var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint *var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    var_18h = 0;\n    var_14h = 0;\n    if (((arg_18h == 0) || (arg_ch == 0)) || (arg_10h == NULL)) {\n        pcVar2 = fcn.000684a0(arg_8h);\n        (*pcVar2)(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch);\n    }\n    else {\n        var_ch = arg_18h;\n        var_10h = arg_10h;\n        iVar3 = fcn.000393c0(arg_ch, &var_24h);\n        if (((iVar3 == 0) && (iVar3 = fcn.000398f0(var_24h, &var_20h),  iVar3 == 0)) &&\n           ((var_20h != 0 &&\n            ((iVar3 = fcn.00041a10(var_20h, 0x10, &var_18h),  iVar3 == 0 &&\n             (iVar3 = fcn.00039960(var_24h, &var_14h),  iVar3 == 0)))))) {\n            var_ch = 0;\n            var_10h = NULL;\n            var_1ch = NULL;\n            var_4h = arg_10h;\n            for (var_28h = 0; var_28h < arg_18h; var_28h = var_28h + 1) {\n                iVar3 = fcn.00041410(var_24h, var_4h);\n                if (iVar3 == 0) {\n                    if (var_10h == NULL) {\n                        var_10h = var_4h;\n                    }\n                    var_ch = var_ch + 1;\n                    var_1ch = var_4h;\n                }\n                else {\n                    if (var_ch != 0) {\n                        *var_1ch = 0;\n                        uVar5 = arg_8h;\n                        iVar3 = arg_ch;\n                        puVar6 = var_10h;\n                        uVar7 = arg_14h;\n                        uVar4 = var_ch;\n                        uVar8 = arg_1ch;\n                        pcVar2 = fcn.000684a0(arg_8h);\n                        (*pcVar2)(uVar5, iVar3, puVar6, uVar7, uVar4, uVar8);\n                        *var_1ch = var_4h;\n                    }\n                    if (((arg_1ch & 2) == 0) && (var_14h != 0)) {\n                        var_8h = *var_4h;\n                        *var_4h = 0;\n                        cVar1 = (**0x8500d004)();\n                        uVar4 = cVar1 == '\\x02';\n                        uVar5 = var_18h;\n                        iVar3 = var_14h;\n                        puVar6 = var_4h;\n                        pcVar2 = fcn.000684a0(var_18h);\n                        (*pcVar2)(uVar5, iVar3, puVar6, uVar4);\n                        *var_4h = var_8h;\n                    }\n                    var_ch = 0;\n                    var_10h = NULL;\n                }\n                var_4h = *var_4h;\n            }\n        }\n        if (var_ch != 0) {\n            puVar6 = var_10h;\n            uVar4 = var_ch;\n            pcVar2 = fcn.000684a0(arg_8h);\n            (*pcVar2)(arg_8h, arg_ch, puVar6, arg_14h, uVar4, arg_1ch);\n        }\n    }\n    return;\n}\n",
        "token_count": 1003
    },
    "00041830": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00041830(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_4h;\n    \n    uVar3 = arg_ch;\n    pcVar1 = fcn.000684a0(arg_8h);\n    iVar2 = (*pcVar1)(arg_8h, uVar3, arg_10h);\n    if (iVar2 == 0) {\n        fcn.000413a0(0, arg_ch, 1);\n    }\n    else if (iVar2 == 0x103) {\n        fcn.000413a0(0, arg_ch, 3);\n    }\n    return iVar2;\n}\n",
        "token_count": 172
    },
    "000418a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.000418a0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_4h;\n    \n    uVar3 = arg_ch;\n    pcVar1 = fcn.000684a0(arg_8h);\n    iVar2 = (*pcVar1)(arg_8h, uVar3, arg_10h);\n    if (iVar2 == 0) {\n        fcn.000413a0(0, arg_ch, 3);\n    }\n    return iVar2;\n}\n",
        "token_count": 141
    },
    "00041940": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00041940(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_4h;\n    \n    uVar3 = arg_ch;\n    pcVar1 = fcn.000684a0(arg_8h);\n    iVar2 = (*pcVar1)(arg_8h, uVar3, arg_10h);\n    if (iVar2 == 0) {\n        fcn.000413a0(0, arg_ch, 1);\n    }\n    return iVar2;\n}\n",
        "token_count": 140
    },
    "00041980": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00041980(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint *var_8h;\n    uint var_4h;\n    \n    fcn.000382a0(0x85090fb0, &var_4h, 0);\n    var_8h = *0x85090fbc;\n    do {\n        if (var_8h == NULL) {\ncode_r0x000419db:\n            fcn.000382d0(0x85090fb0, &var_4h, 0);\n            return (-(var_8h != NULL) & 0x3ffffff2) + 0xc000000e;\n        }\n        if (var_8h[3] == arg_8h) {\n            if (var_8h[6] == 0) {\n                var_8h = NULL;\n            }\n            else {\n                *arg_ch = var_8h[1];\n            }\n            goto code_r0x000419db;\n        }\n        var_8h = *var_8h;\n    } while( true );\n}\n",
        "token_count": 247
    },
    "00041a10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00041a10(int32_t arg_8h, int32_t arg_ch, uint *arg_10h)\n\n{\n    uint *var_8h;\n    uint var_4h;\n    \n    fcn.000382a0(0x85090fb0, &var_4h, 0);\n    var_8h = *0x85090fbc;\n    do {\n        if (var_8h == NULL) {\ncode_r0x00041a71:\n            fcn.000382d0(0x85090fb0, &var_4h, 0);\n            return (-(var_8h != NULL) & 0x3ffffff2) + 0xc000000e;\n        }\n        if (var_8h[1] == arg_8h) {\n            if (var_8h[6] == 0) {\n                var_8h = NULL;\n            }\n            else {\n                *arg_10h = *(var_8h[6] + arg_ch);\n            }\n            goto code_r0x00041a71;\n        }\n        var_8h = *var_8h;\n    } while( true );\n}\n",
        "token_count": 265
    },
    "00041aa0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00041aa0(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.00041980(arg_18h, &var_4h);\n    if (iVar1 == 0) {\n        iVar1 = fcn.00038f80(arg_8h, arg_ch, arg_10h, arg_14h, var_4h, (arg_ch == 0) * 4 + 1);\n    }\n    return iVar1;\n}\n",
        "token_count": 153
    },
    "00041b20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00041b20(uint arg_8h)\n\n{\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00042250(arg_8h, 0, 0x1010102, &var_ch, 6);\n    if (var_4h != 0) {\n        var_ch = 0;\n        var_8h._0_2_ = 0;\n    }\n    fcn.00039020(arg_8h, &var_ch, 6);\n    return;\n}\n",
        "token_count": 142
    },
    "00041b70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00041b70(void)\n\n{\n    int32_t iVar1;\n    int32_t var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uchar var_44h;\n    uchar var_43h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.0003cdf0(&var_50h);\n    if (var_50h != 0) {\n        if (*0x85092a94 != 0) {\n            (**0x8509ef04)(*0x85092a94);\n        }\n        *0x85092a94 = 0;\n    }\n    if (*0x85092a94 == 0) {\n        fcn.0003cdf0(&var_50h);\n        fcn.0007f6d0(&var_8h, 0x8508e9dc);\n        fcn.0007f916(&var_48h, 0, 0x40);\n        var_48h._0_1_ = 0x95;\n        var_48h._2_2_ = 0x40;\n        var_48h._1_1_ = 1;\n        var_44h = 6;\n        var_43h = 0;\n        var_3ch = var_8h;\n        var_38h = var_4h;\n        var_34h = 0;\n        var_28h = 0x8503de60;\n        var_24h = 0x8503de80;\n        var_ch = 0x8503de10;\n        var_18h = 0x8503dea0;\n        var_14h = 0x850261f0;\n        var_1ch = 0;\n        var_10h = 0x8503de00;\n        var_20h = 0x8501cda0;\n        var_30h = 0x8503ddf0;\n        var_2ch = 0x8503dd50;\n        iVar1 = (**0x8509eef4)(0, &var_48h, 0x85092a94);\n        if (iVar1 != 0) {\n            *0x85092a94 = 0;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 607
    },
    "00041c80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00041c80(void)\n\n{\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00035b80(0x85010af8, &var_ch);\n    if (((var_4h == 0) && (var_4h = fcn.00060f50(var_ch, 0x85010d68, &var_8h),  var_4h == 0)) &&\n       (var_4h = fcn.00067c30(var_8h, 0x8503e1c0, 0x85092a90),  var_4h == 0)) {\n        fcn.00068540(*0x85092a90);\n        fcn.00041b70();\n    }\n    return var_4h;\n}\n",
        "token_count": 194
    },
    "00041d00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00041d00(void)\n\n{\n    fcn.0003cc00();\n    if (*0x85092a94 != 0) {\n        (**0x8509ef04)(*0x85092a94);\n        *0x85092a94 = 0;\n    }\n    fcn.00039f50(1);\n    fcn.00068540(*0x85092a90);\n    fcn.00068090(0x85092a90);\n    return 0;\n}\n",
        "token_count": 112
    },
    "00041d50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00041d50(uint noname_0, uint arg_ch)\n\n{\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_4h = arg_ch;\n    var_8h = fcn.00038ea0(arg_ch, &var_ch);\n    if ((var_8h == 0) && (var_ch != 0)) {\n        var_8h = fcn.00042250(var_4h, 1, 0x1010103, 0, 0);\n        var_8h = fcn.00042250(var_4h, 1, 0x1010e, 0, 0);\n        var_8h = (**0x8509eef0)(var_ch);\n        if (var_8h == 0x103) {\n            var_8h = fcn.0003a0b0(var_4h);\n        }\n        if (var_8h == 0) {\n            fcn.00038f80(var_4h, 0, 0, 0, 0, 5);\n        }\n    }\n    else {\n        var_8h = 0;\n    }\n    return var_8h;\n}\n",
        "token_count": 283
    },
    "00041e10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00041e10(uint noname_0, uint *arg_ch)\n\n{\n    uint *puVar1;\n    uint var_ch;\n    uint *var_8h;\n    uint var_4h;\n    \n    var_8h = arg_ch;\n    while ((var_8h != NULL && (puVar1 = *var_8h,  var_8h[4] == *0x8509298c))) {\n        (**0x850929a8)(var_8h, puVar1, var_8h, 0);\n        var_8h = puVar1;\n    }\n    return;\n}\n",
        "token_count": 187
    },
    "00041f00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00041f00(uint arg_8h)\n\n{\n    int32_t arg_ch;\n    int32_t iVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint *puVar6;\n    uint *puVar7;\n    uint *puVar8;\n    int32_t var_70h;\n    uint var_6ch;\n    uint var_68h;\n    int32_t var_40h;\n    int32_t var_3ch;\n    uint var_38h;\n    uint *var_34h;\n    uint *var_30h;\n    uint var_2ch;\n    uint *var_28h;\n    uint *var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    ushort var_10h;\n    uint var_ch;\n    int32_t var_4h;\n    \n    var_40h = 0;\n    var_3ch = 0;\n    var_14h._0_2_ = 0x888e;\n    var_14h._2_2_ = 0x8100;\n    var_10h = 0x806;\n    var_70h = fcn.00038ea0(arg_8h, &var_1ch);\n    if (var_70h == 0) {\n        if (var_1ch == 0) {\n            arg_ch = fcn.00036360(0x208);\n            if (arg_ch == 0) {\n                var_70h = 0x21590004;\n            }\n            else {\n                var_70h = fcn.00038d30(arg_8h, arg_ch, 0x104);\n                if (var_70h == 0) {\n                    fcn.0007f6d0(&var_ch, arg_ch);\n                    var_2ch = 0;\n                    var_28h = NULL;\n                    var_24h = NULL;\n                    var_20h = 0;\n                    var_38h = 0x1c0187;\n                    var_34h = &var_ch;\n                    var_30h = &var_40h;\n                    iVar1 = fcn.0003a4e0(arg_8h, &var_4h);\n                    if ((iVar1 == 0) && (var_4h != var_40h)) {\n                        var_2ch = 2;\n                        var_3ch = var_4h;\n                    }\n                    else {\n                        var_2ch = 1;\n                    }\n                    var_28h = &var_18h;\n                    var_24h = &var_14h;\n                    var_20h = 3;\n                    puVar8 = &var_1ch;\n                    puVar7 = &var_68h;\n                    puVar6 = &var_38h;\n                    uVar3 = *0x85092a90;\n                    uVar4 = *0x85092a94;\n                    uVar5 = arg_8h;\n                    pcVar2 = fcn.000684a0(*0x85092a90);\n                    var_70h = (*pcVar2)(uVar3, uVar4, uVar5, puVar6, puVar7, puVar8);\n                    if (var_70h == 0x103) {\n                        var_70h = fcn.0003a0b0(arg_8h);\n                    }\n                    if (var_70h == 0) {\n                        var_70h = fcn.00039790(arg_8h, 1);\n                        if (var_70h == 0) {\n                            iVar1 = fcn.000420c0(arg_8h, var_1ch);\n                            if (iVar1 == 0) {\n                                fcn.00041b20(arg_8h);\n                            }\n                            else {\n                                (**0x8509eef0)(var_1ch);\n                            }\n                        }\n                        else {\n                            (**0x8509eef0)(var_1ch);\n                        }\n                    }\n                    fcn.00036460(arg_ch);\n                }\n            }\n        }\n        else {\n            var_70h = 0;\n        }\n    }\n    return var_70h;\n}\n",
        "token_count": 957
    },
    "000420c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.000420c0(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t arg_8h_00;\n    uint arg_14h;\n    uint arg_8h_01;\n    int32_t var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = arg_ch;\n    do {\n        arg_8h_00 = *(var_ch + 8);\n        if (arg_8h_00 == 0) {\n            var_ch = 0;\n        }\n        else {\n            var_ch = *(arg_8h_00 + 8);\n        }\n    } while ((var_ch != 0) && (arg_8h_00 != var_ch));\n    if (arg_8h_00 == 0) {\n        var_18h = -0x3ffffff3;\n    }\n    else {\n        arg_14h = *(arg_8h_00 + 0xc);\n        arg_8h_01 = fcn.000421f0(arg_8h_00);\n        var_10h = fcn.00040dd0(arg_8h_01);\n        if ((var_10h == 0) || (var_10h == -0x3fffffdf)) {\n            var_10h = fcn.00041aa0(arg_8h, arg_ch, arg_8h_00, arg_14h, arg_8h_01);\n            if (var_10h != 0) {\n                fcn.00041230(arg_8h_01);\n                return var_10h;\n            }\n            fcn.00042870(arg_ch, 0);\n            fcn.0003f3c0();\n        }\n        if ((var_10h == -0x3fffffdf) || (var_18h = var_10h,  var_10h == 0)) {\n            var_18h = 0;\n        }\n    }\n    return var_18h;\n}\n",
        "token_count": 467
    },
    "000421f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000421f0(uint arg_8h)\n\n{\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_ch = 0;\n    var_8h = 0;\n    var_10h = 0;\n    var_4h = 0x4e4d4944;\n    (**0x8500d044)(arg_8h, &var_ch, &var_8h, 0, 0, 0);\n    if (var_8h != 0) {\n        var_10h = (**0x8500d228)(*(var_8h + 8), var_4h);\n    }\n    return var_10h;\n}\n",
        "token_count": 171
    },
    "00042250": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00042250(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    uint var_a4h;\n    int32_t var_a0h;\n    int32_t var_9ch;\n    uint var_98h;\n    int32_t var_94h;\n    uint var_90h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    int32_t var_ch;\n    uint var_8h;\n    \n    var_a0h = 0;\n    var_9ch = fcn.00038ea0(arg_8h, &var_a0h);\n    if (var_9ch == 0) {\n        if (var_a0h == 0) {\n            var_9ch = -0x3fffff63;\n        }\n        else {\n            fcn.0007f916(&var_98h, 0, 0x94);\n            iVar1 = fcn.00034d00(&var_8h);\n            if (iVar1 == 0) {\n                var_9ch = -0x3fffffff;\n            }\n            else {\n                var_98h._0_1_ = 0x96;\n                var_98h._1_1_ = 1;\n                var_98h._2_2_ = 0x8c;\n                var_94h = arg_ch;\n                var_90h = 0;\n                if (arg_ch == 0) {\n                    var_80h = arg_10h;\n                    var_7ch = arg_14h;\n                    var_78h = arg_18h;\n                }\n                else if (arg_ch == 1) {\n                    var_80h = arg_10h;\n                    var_7ch = arg_14h;\n                    var_78h = arg_18h;\n                }\n                var_9ch = (**0x850929b0)(var_a0h, &var_98h);\n                if (var_9ch == 0x103) {\n                    fcn.00034df0(&var_8h, 0xffffffff);\n                    var_9ch = var_ch;\n                }\n                fcn.00034d90(&var_8h);\n            }\n        }\n    }\n    return var_9ch;\n}\n",
        "token_count": 538
    },
    "00042390": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00042390(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_ch = 0;\n    var_18h = 0;\n    var_4h = 0;\n    var_20h = fcn.00038ea0(arg_8h, &var_ch);\n    if (var_20h == 0) {\n        if (var_ch == 0) {\n            var_20h = -0x3fffff63;\n        }\n        else {\n            var_20h = fcn.000399d0(arg_8h, &var_24h);\n            if (var_20h == 0) {\n                if (var_24h == 1) {\n                    var_18h = (**0x850929a4)(*0x8509298c, 8, 0);\n                    if (var_18h == 0) {\n                        var_20h = -0x3fffff66;\n                    }\n                    else {\n                        var_1ch = (**0x850929d8)();\n                        var_1ch = var_1ch << 0x18;\n                        *(var_18h + 100) = var_1ch;\n                        *(var_18h + 0x3c) = var_ch;\n                        *(var_18h + 0x48) = *(var_18h + 0x48) | 1;\n                        var_4h = *(var_18h + 4);\n                        if (var_4h == 0) {\n                            var_20h = -0x3fffff66;\n                        }\n                        else {\n                            var_14h = *(var_4h + 0x10);\n                            if ((*(var_14h + 6) & 5) == 0) {\n                                var_28h = (**0x8500d0e8)(var_14h, 0, 1, 0, 0, 0x20);\n                            }\n                            else {\n                                var_28h = *(var_14h + 0xc);\n                            }\n                            var_8h = var_28h;\n                            var_10h = *(var_14h + 0x14);\n                            if (((var_10h < arg_10h) || (var_14h == 0)) || (var_28h == 0)) {\n                                var_20h = -0x3fffff66;\n                            }\n                            else {\n                                fcn.0007f904(var_28h, arg_ch, arg_10h);\n                                *(var_4h + 0xc) = arg_10h;\n                                *(var_4h + 0x14) = 0;\n                                *(var_4h + 8) = 0;\n                                (**0x850929b4)(var_ch, var_18h, 0, 0);\n                                var_20h = 0;\n                            }\n                        }\n                    }\n                    if ((var_20h != 0) && (var_18h != 0)) {\n                        (**0x850929a8)(var_18h);\n                    }\n                }\n                else {\n                    var_20h = -0x3fffff5d;\n                }\n            }\n        }\n    }\n    return var_20h;\n}\n",
        "token_count": 811
    },
    "00042550": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00042550(void)\n\n{\n    if (*0x85092a98 != 0) {\n        fcn.00042870(0, 1);\n        fcn.00038300(0x8509ef28);\n        *0x85092a98 = 0;\n    }\n    return;\n}\n",
        "token_count": 71
    },
    "00042580": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00042580(void)\n\n{\n    if (*0x85092a98 == 0) {\n        *0x85092a98 = 1;\n        fcn.000380a0(0x8509ef28);\n        *0x8509ef20 = 0;\n        *0x8509ef24 = 0;\n    }\n    return;\n}\n",
        "token_count": 83
    },
    "000425c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n\nuint * __cdecl fcn.000425c0(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint *puVar3;\n    bool bVar4;\n    uint var_24h;\n    uint *var_20h;\n    uint *var_1ch;\n    uint *var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_18h = NULL;\n    var_14h = 0;\n    var_1ch = NULL;\n    var_ch = *(arg_8h + 8);\n    while (puVar3 = fcn.00036360(0x10),  puVar3 != NULL) {\n        *puVar3 = 0;\n        puVar3[1] = 0;\n        puVar3[2] = 0;\n        puVar3[3] = 0;\n        puVar3[1] = var_ch;\n        puVar3[2] = *(var_ch + 0xc);\n        iVar1 = *(var_ch + 8);\n        puVar2 = puVar3;\n        if (var_1ch != NULL) {\n            *var_1ch = puVar3;\n            puVar2 = var_1ch;\n        }\n        var_1ch = puVar2;\n        if (var_18h == NULL) {\n            var_18h = puVar3;\n        }\n        if ((iVar1 == 0) || (bVar4 = iVar1 == var_ch,  var_ch = iVar1,  bVar4)) goto code_r0x00042684;\n    }\n    var_14h = -0x3fffff66;\ncode_r0x00042684:\n    if (var_14h != 0) {\n        var_20h = var_18h;\n        while (var_20h != NULL) {\n            puVar3 = *var_20h;\n            fcn.00036460(var_20h);\n            var_20h = puVar3;\n        }\n        var_18h = NULL;\n    }\n    return var_18h;\n}\n",
        "token_count": 506
    },
    "00042750": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00042750(int32_t *arg_8h, uint *arg_ch)\n\n{\n    int32_t var_14h;\n    uint var_10h;\n    int32_t **var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    *arg_ch = 0;\n    var_14h = 0;\n    var_10h = 0xc0000001;\n    fcn.000382a0(0x8509ef28, &var_4h, 1);\n    for (var_8h = 0; var_8h < *0x8509ef20; var_8h = var_8h + 1) {\n        for (var_ch = *(*0x8509ef24 + var_8h * 0x10); var_ch != NULL; var_ch = *var_ch) {\n            if ((arg_8h == var_ch[2]) && (*var_ch != NULL)) {\n                var_14h = (*var_ch)[2];\n                break;\n            }\n        }\n        if (var_14h != 0) break;\n    }\n    if (var_14h != 0) {\n        for (var_8h = 0; var_8h < *0x8509ef20; var_8h = var_8h + 1) {\n            if (*(*0x8509ef24 + 0xc + var_8h * 0x10) == var_14h) {\n                *arg_ch = *(*0x8509ef24 + 4 + var_8h * 0x10);\n                var_10h = 0;\n                break;\n            }\n        }\n    }\n    fcn.000382d0(0x8509ef28, &var_4h, 1);\n    return var_10h;\n}\n",
        "token_count": 410
    },
    "00042870": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00042870(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *var_28h;\n    uint var_24h;\n    uint *var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_14h = 0;\n    fcn.000382a0(0x8509ef28, &var_4h, 1);\n    if (*0x8509ef24 != 0) {\n        for (var_8h = 0; var_8h < *0x8509ef20; var_8h = var_8h + 1) {\n            var_20h = *(*0x8509ef24 + var_8h * 0x10);\n            while (var_20h != NULL) {\n                puVar1 = *var_20h;\n                fcn.00036460(var_20h);\n                var_20h = puVar1;\n            }\n        }\n        fcn.00036460(*0x8509ef24);\n        *0x8509ef20 = 0;\n    }\n    *0x8509ef24 = 0;\n    if (arg_ch == 0) {\n        var_10h = 1;\n        var_ch = arg_8h;\n        while (((iVar2 = *(var_ch + 0xc4),  iVar2 != 0 && (iVar2 != var_ch)) && (iVar2 != var_ch + 0xc4))) {\n            var_10h = var_10h + 1;\n            var_ch = iVar2;\n        }\n        *0x8509ef24 = fcn.00036360(var_10h << 4);\n        if (*0x8509ef24 == 0) {\n            var_14h = -0x3fffff66;\n        }\n        else {\n            fcn.0007f916(*0x8509ef24, 0, var_10h << 4);\n            var_ch = arg_8h;\n            for (var_8h = 0; var_8h < var_10h; var_8h = var_8h + 1) {\n                *(*0x8509ef24 + 4 + var_8h * 0x10) = var_ch;\n                *(*0x8509ef24 + 8 + var_8h * 0x10) = *(var_ch + 0xc);\n                *(*0x8509ef24 + 0xc + var_8h * 0x10) = *(var_ch + 0x1c);\n                uVar3 = fcn.000425c0(var_ch);\n                *(*0x8509ef24 + var_8h * 0x10) = uVar3;\n                if (*(*0x8509ef24 + var_8h * 0x10) == 0) {\n                    var_14h = -0x3fffff66;\n                    break;\n                }\n                iVar2 = *(var_ch + 0xc4);\n                if ((iVar2 == 0) || (iVar2 == var_ch)) break;\n                var_ch = iVar2;\n            }\n        }\n        *0x8509ef20 = var_10h;\n        if ((var_14h != 0) && (*0x8509ef24 != 0)) {\n            for (var_8h = 0; var_8h < *0x8509ef20; var_8h = var_8h + 1) {\n                var_28h = *(*0x8509ef24 + var_8h * 0x10);\n                while (var_28h != NULL) {\n                    puVar1 = *var_28h;\n                    fcn.00036460(var_28h);\n                    var_28h = puVar1;\n                }\n            }\n            fcn.00036460(*0x8509ef24);\n            *0x8509ef20 = 0;\n        }\n        fcn.000382d0(0x8509ef28, &var_4h, 1);\n    }\n    else {\n        fcn.000382d0(0x8509ef28, &var_4h, 1);\n        var_14h = 0;\n    }\n    return var_14h;\n}\n",
        "token_count": 1015
    },
    "00042b20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00042b20(int32_t arg_8h, int32_t arg_ch, int32_t *arg_10h, uint32_t arg_14h)\n\n{\n    char cVar1;\n    uint var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t *var_18h;\n    int32_t *var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    do {\n        if (arg_ch - arg_14h <= var_8h) {\n            return 0xffffffff;\n        }\n        var_18h = arg_8h + var_8h;\n        cVar1 = (**0x8500d224)(var_18h);\n        if (cVar1 == '\\0') {\n            return 0xffffffff;\n        }\n        cVar1 = (**0x8500d224)(var_18h + arg_14h);\n        if (cVar1 == '\\0') {\n            return 0xffffffff;\n        }\n        var_14h = arg_10h;\n        for (var_10h = arg_14h; 3 < var_10h; var_10h = var_10h - 4) {\n            if (*var_18h != *var_14h) goto code_r0x00042bc7;\n            var_14h = var_14h + 1;\n            var_18h = var_18h + 1;\n        }\n        if (var_10h == 0) {\ncode_r0x00042c49:\n            var_20h = 0;\n        }\n        else {\ncode_r0x00042bc7:\n            var_1ch = *var_18h - *var_14h;\n            if (var_1ch == 0) {\n                if (var_10h == 1) goto code_r0x00042c49;\n                var_1ch = *(var_18h + 1) - *(var_14h + 1);\n                if (var_1ch == 0) {\n                    if (var_10h == 2) goto code_r0x00042c49;\n                    var_1ch = *(var_18h + 2) - *(var_14h + 2);\n                    if (var_1ch == 0) {\n                        if ((var_10h == 3) || (var_1ch = *(var_18h + 3) - *(var_14h + 3),  var_1ch == 0))\n                        goto code_r0x00042c49;\n                    }\n                }\n            }\n            var_20h = 1;\n            if (var_1ch < 1) {\n                var_20h = -1;\n            }\n        }\n        if (var_20h == 0) {\n            return var_8h;\n        }\n        var_8h = var_8h + 1;\n    } while( true );\n}\n",
        "token_count": 688
    },
    "00042c90": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00042c90(uint *arg_8h, int32_t *arg_ch, int32_t *arg_10h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint *puVar3;\n    uint var_15ch;\n    uint var_158h;\n    int32_t var_154h;\n    uint var_150h;\n    int32_t var_cch;\n    uint var_c8h;\n    int32_t var_c4h;\n    int32_t var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    int32_t var_a0h;\n    uint var_ch;\n    uint var_8h;\n    \n    var_c4h = 0;\n    var_cch = 0;\n    var_c0h = 0;\n    if ((arg_8h == NULL) || (arg_8h[6] == 0)) {\n        var_c4h = 0x21590065;\n    }\n    else {\n        fcn.0007f6d0(&var_8h, 0x850107f4);\n        puVar2 = arg_8h;\n        puVar3 = &var_b8h;\n        for (iVar1 = 0x2a; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *puVar3 = *puVar2;\n            puVar2 = puVar2 + 1;\n            puVar3 = puVar3 + 1;\n        }\n        var_c8h = *(var_a0h + 0x14);\n        var_c4h = fcn.00043290(arg_8h, &var_8h, &var_150h, &var_cch, &var_c0h);\n        if (var_c4h == 0) {\n            *0x8509ed40 = fcn.00042b20(var_c0h, 0xcc, &var_150h, 0x7c);\n            if (*0x8509ed40 != -1) {\n                *0x8509ed48 = *0x8509ed40 + 1;\n                *0x8509ed44 = *0x8509ed40;\n            }\n            *0x8509ed50 = fcn.000452e0(var_c0h, 0x100, 0x8503f560);\n            if (*0x8509ed50 == -1) {\n                var_c4h = 0x21590005;\n            }\n            else {\n                *0x8509ed5c = fcn.000452e0(var_c0h, 0x100, 0x8503f540);\n                if (*0x8509ed5c == -1) {\n                    var_c4h = 0x21590005;\n                }\n                else {\n                    *0x8509ed64 = fcn.000452e0(var_c0h, 0x100, 0x8503f520);\n                    if (*0x8509ed64 == -1) {\n                        var_c4h = 0x21590005;\n                    }\n                    else {\n                        *0x8509ed6c = fcn.000452e0(var_c0h, 0x100, 0x8503f500);\n                        if (*0x8509ed6c == -1) {\n                            var_c4h = 0x21590005;\n                        }\n                        else {\n                            *0x8509ed74 = fcn.000452e0(var_c0h, 0x100, 0x8503f4e0);\n                            if (*0x8509ed74 == -1) {\n                                var_c4h = 0x21590005;\n                            }\n                            else {\n                                *0x8509ed84 = fcn.000452e0(var_c0h, 0x100, 0x8503f4c0);\n                                if (*0x8509ed84 == -1) {\n                                    var_c4h = 0x21590005;\n                                }\n                                else {\n                                    *0x8509ed88 = fcn.000452e0(var_c0h, 0x100, 0x8503f4a0);\n                                    if (*0x8509ed88 == -1) {\n                                        var_c4h = 0x21590005;\n                                    }\n                                    else {\n                                        *0x8509ed78 = fcn.000452e0(var_c0h, 0x100, 0x8503f480);\n                                        if (*0x8509ed78 == -1) {\n                                            var_c4h = 0x21590005;\n                                        }\n                                        else {\n                                            *0x8509ed7c = fcn.000452e0(var_c0h, 0x100, 0x8503f460);\n                                            if (*0x8509ed7c == -1) {\n                                                var_c4h = 0x21590005;\n                                            }\n                                            else {\n                                                *0x8509ed8c = fcn.000452e0(var_c0h, 0x100, 0x8503f440);\n                                                if (*0x8509ed8c == -1) {\n                                                    var_c4h = 0x21590005;\n                                                }\n                                                else {\n                                                    *0x8509ed60 = fcn.000452e0(var_c0h, 0x100, 0x8503f420);\n                                                    if (*0x8509ed60 == -1) {\n                                                        var_c4h = 0x21590005;\n                                                    }\n                                                    else {\n                                                        *0x8509ed68 = fcn.000452e0(var_c0h, 0x100, 0x8503f400);\n                                                        if (*0x8509ed68 == -1) {\n                                                            var_c4h = 0x21590005;\n                                                        }\n                                                        else {\n                                                            *0x8509eda8 = fcn.000452e0(var_c0h, 0x100, 0x8503f3e0);\n                                                            if (*0x8509eda8 == -1) {\n                                                                var_c4h = 0x21590005;\n                                                            }\n                                                            else {\n                                                                *0x8509edac = fcn.000452e0(var_c0h, 0x100, 0x8503f3c0);\n                                                                if (*0x8509edac == -1) {\n                                                                    var_c4h = 0x21590005;\n                                                                }\n                                                                else {\n                                                                    *0x8509edb0 = fcn.000452e0(var_c0h, 0x100, \n                                                                                               0x8503f3a0);\n                                                                    if (*0x8509edb0 == -1) {\n                                                                        var_c4h = 0x21590005;\n                                                                    }\n                                                                    else {\n                                                                        *0x8509ed4c = fcn.000452e0(var_c0h, 0x100, \n                                                                                                   var_cch);\n                                                                        if (*0x8509ed4c == -1) {\n                                                                            var_c4h = 0x21590005;\n                                                                        }\n                                                                        else if (arg_ch != NULL) {\n                                                                            *arg_ch = 0;\n                                                                            *arg_10h = 0;\n                                                                            iVar1 = fcn.00036360(4);\n                                                                            *arg_ch = iVar1;\n                                                                            if (*arg_ch == 0) {\n                                                                                var_c4h = -0x3fffff66;\n                                                                            }\n                                                                            else {\n                                                                                **arg_ch = 0;\n                                                                                fcn.0001a830(2, &var_ch, &var_bch);\n                                                                                var_154h = var_c0h;\ncode_r0x0004313e:\n                                                                                if ((var_154h == 0) || (*arg_ch == 0))\n                                                                                goto code_r0x0004321c;\n                                                                                if ((var_154h == var_c0h) ||\n                                                                                   (*(var_154h + 0xe) == 0)) {\ncode_r0x0004312f:\n                                                                                    var_154h = *(var_154h + 4);\n                                                                                    goto code_r0x0004313e;\n                                                                                }\n                                                                                iVar1 = fcn.00036390(arg_ch, *arg_10h <<\n                                                                                                             2, \n                                                                                                     *arg_10h * 4 + 4);\n                                                                                if (iVar1 == 0) {\n                                                                                    *arg_ch[*arg_10h] = var_154h;\n                                                                                    *arg_10h = *arg_10h + 1;\n                                                                                    goto code_r0x0004312f;\n                                                                                }\n                                                                                var_c4h = -0x3fffff66;\n                                                                                fcn.00036460(*arg_ch);\n                                                                                *arg_ch = 0;\n                                                                                *arg_10h = 0;\ncode_r0x0004321c:\n                                                                                fcn.0001a980(var_ch, var_bch);\n                                                                            }\n                                                                        }\n                                                                    }\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (var_c0h != 0) {\n            (**0x8500d040)(var_c0h);\n        }\n        if (var_cch != 0) {\n            (**0x8500d034)(var_cch, 0);\n        }\n        *(var_a0h + 0x14) = var_c8h;\n        puVar2 = &var_b8h;\n        for (iVar1 = 0x2a; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *arg_8h = *puVar2;\n            puVar2 = puVar2 + 1;\n            arg_8h = arg_8h + 1;\n        }\n    }\n    return var_c4h;\n}\n",
        "token_count": 2155
    },
    "00043290": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00043290(uint arg_8h, uint arg_ch, uchar *arg_10h, int32_t *arg_14h, uint arg_18h)\n\n{\n    uint uVar1;\n    \n    (**0x8500d074)(arg_14h, arg_8h, arg_ch, 0);\n    if (*arg_14h == 0) {\n        uVar1 = 0xc0000001;\n    }\n    else {\n        fcn.0007f916(arg_10h, 0, 0x7c);\n        *arg_10h = 5;\n        arg_10h[1] = 1;\n        *(arg_10h + 8) = 0x8503f560;\n        *(arg_10h + 0xc) = 0;\n        *(arg_10h + 0x10) = 0;\n        *(arg_10h + 0x14) = 0x8503f540;\n        *(arg_10h + 0x1c) = 0x8503f520;\n        *(arg_10h + 0x24) = 0x8503f500;\n        *(arg_10h + 0x2c) = 0x8503f4e0;\n        *(arg_10h + 0x3c) = 0x8503f4c0;\n        *(arg_10h + 0x40) = 0x8503f4a0;\n        *(arg_10h + 0x30) = 0x8503f480;\n        *(arg_10h + 0x34) = 0x8503f460;\n        *(arg_10h + 0x44) = 0x8503f440;\n        *(arg_10h + 0x18) = 0x8503f420;\n        *(arg_10h + 0x20) = 0x8503f400;\n        *(arg_10h + 0x60) = 0x8503f3e0;\n        *(arg_10h + 100) = 0x8503f3c0;\n        *(arg_10h + 0x68) = 0x8503f3a0;\n        uVar1 = (**0x8500d038)(*arg_14h, arg_10h, 0x7c, arg_18h);\n    }\n    return uVar1;\n}\n",
        "token_count": 548
    },
    "00043580": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00043580(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint *puVar3;\n    uint var_140h;\n    int32_t var_c0h;\n    uint var_bch;\n    int32_t var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    int32_t var_98h;\n    uint var_8h;\n    \n    var_b4h = 0x4e4d4944;\n    fcn.0007f6d0(&var_8h, 0x850107f4);\n    puVar2 = arg_8h;\n    puVar3 = &var_b0h;\n    for (iVar1 = 0x2a; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar3 = *puVar2;\n        puVar2 = puVar2 + 1;\n        puVar3 = puVar3 + 1;\n    }\n    var_bch = *(var_98h + 0x14);\n    var_b8h = fcn.00043990(arg_8h, &var_8h, &var_140h);\n    if (var_b8h == 0) {\n        var_c0h = (**0x8500d228)(arg_8h, var_b4h);\n        if (var_c0h == 0) {\n            var_b8h = -0x3fffffff;\n        }\n        else {\n            *0x8509ecc0 = fcn.00042b20(var_c0h, 0xdc, &var_140h, 0x7c);\n            if (*0x8509ecc0 != -1) {\n                *0x8509ecc8 = *0x8509ecc0 + 1;\n                *0x8509ecc4 = *0x8509ecc0;\n            }\n            *0x8509eccc = fcn.000452e0(var_c0h, 0x100, 0x8503fa90);\n            if (*0x8509eccc == -1) {\n                var_b8h = 0x21590005;\n            }\n            else {\n                *0x8509ecd8 = fcn.000452e0(var_c0h, 0x100, 0x8503fab0);\n                if (*0x8509ecd8 == -1) {\n                    var_b8h = 0x21590005;\n                }\n                else {\n                    *0x8509ece0 = fcn.000452e0(var_c0h, 0x100, 0x8503fad0);\n                    if (*0x8509ece0 == -1) {\n                        var_b8h = 0x21590005;\n                    }\n                    else {\n                        *0x8509ece8 = fcn.000452e0(var_c0h, 0x100, 0x8503faf0);\n                        if (*0x8509ece8 == -1) {\n                            var_b8h = 0x21590005;\n                        }\n                        else {\n                            *0x8509ecf0 = fcn.000452e0(var_c0h, 0x100, 0x8503fb10);\n                            if (*0x8509ecf0 == -1) {\n                                var_b8h = 0x21590005;\n                            }\n                            else {\n                                *0x8509ed00 = fcn.000452e0(var_c0h, 0x100, 0x8503fb30);\n                                if (*0x8509ed00 == -1) {\n                                    var_b8h = 0x21590005;\n                                }\n                                else {\n                                    *0x8509ed04 = fcn.000452e0(var_c0h, 0x100, 0x8503fb50);\n                                    if (*0x8509ed04 == -1) {\n                                        var_b8h = 0x21590005;\n                                    }\n                                    else {\n                                        *0x8509ecf8 = fcn.000452e0(var_c0h, 0x100, 0x8503fb70);\n                                        if (*0x8509ecf8 == -1) {\n                                            var_b8h = 0x21590005;\n                                        }\n                                        else {\n                                            *0x8509ed08 = fcn.000452e0(var_c0h, 0x100, 0x8503fb90);\n                                            if (*0x8509ed08 == -1) {\n                                                var_b8h = 0x21590005;\n                                            }\n                                            else {\n                                                *0x8509ecdc = fcn.000452e0(var_c0h, 0x100, 0x8503fbb0);\n                                                if (*0x8509ecdc == -1) {\n                                                    var_b8h = 0x21590005;\n                                                }\n                                                else {\n                                                    *0x8509ece4 = fcn.000452e0(var_c0h, 0x100, 0x8503fbd0);\n                                                    if (*0x8509ece4 == -1) {\n                                                        var_b8h = 0x21590005;\n                                                    }\n                                                    else {\n                                                        *0x8509ed24 = fcn.000452e0(var_c0h, 0x100, 0x8503fbf0);\n                                                        if (*0x8509ed24 == -1) {\n                                                            var_b8h = 0x21590005;\n                                                        }\n                                                        else {\n                                                            *0x8509ed28 = fcn.000452e0(var_c0h, 0x100, 0x8503fc10);\n                                                            if (*0x8509ed28 == -1) {\n                                                                var_b8h = 0x21590005;\n                                                            }\n                                                            else {\n                                                                *0x8509ed2c = fcn.000452e0(var_c0h, 0x100, 0x8503fc30);\n                                                                if (*0x8509ed2c == -1) {\n                                                                    var_b8h = 0x21590005;\n                                                                }\n                                                                else {\n                                                                    var_b8h = 0;\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    if (*0x85092a9c != 0) {\n        (**0x8500d034)(*0x85092a9c, 0);\n    }\n    *(var_98h + 0x14) = var_bch;\n    puVar2 = &var_b0h;\n    for (iVar1 = 0x2a; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *arg_8h = *puVar2;\n        puVar2 = puVar2 + 1;\n        arg_8h = arg_8h + 1;\n    }\n    return var_b8h;\n}\n",
        "token_count": 1544
    },
    "00043990": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00043990(uint arg_8h, uint arg_ch, uchar *arg_10h)\n\n{\n    uint uVar1;\n    \n    (**0x8500d074)(0x85092a9c, arg_8h, arg_ch, 0);\n    if (*0x85092a9c == 0) {\n        uVar1 = 0xc0000001;\n    }\n    else {\n        fcn.0007f916(arg_10h, 0, 0x7c);\n        *arg_10h = 5;\n        arg_10h[1] = 1;\n        *(arg_10h + 8) = 0x8503fa90;\n        *(arg_10h + 0xc) = 0;\n        *(arg_10h + 0x10) = 0;\n        *(arg_10h + 0x14) = 0x8503fab0;\n        *(arg_10h + 0x1c) = 0x8503fad0;\n        *(arg_10h + 0x24) = 0x8503faf0;\n        *(arg_10h + 0x2c) = 0x8503fb10;\n        *(arg_10h + 0x3c) = 0x8503fb30;\n        *(arg_10h + 0x40) = 0x8503fb50;\n        *(arg_10h + 0x34) = 0x8503fb70;\n        *(arg_10h + 0x44) = 0x8503fb90;\n        *(arg_10h + 0x18) = 0x8503fbb0;\n        *(arg_10h + 0x20) = 0x8503fbd0;\n        *(arg_10h + 0x60) = 0x8503fbf0;\n        *(arg_10h + 100) = 0x8503fc10;\n        *(arg_10h + 0x68) = 0x8503fc30;\n        uVar1 = (**0x8500d030)(*0x85092a9c, arg_10h, 0x7c);\n    }\n    return uVar1;\n}\n",
        "token_count": 507
    },
    "00043c50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00043c50(void)\n\n{\n    uint var_7ch;\n    uint var_78h;\n    int32_t var_4h;\n    \n    var_7ch = 0;\n    var_4h = fcn.00043f10(&var_78h, &var_7ch);\n    if (var_4h == 0) {\n        *0x85092aac = fcn.000452e0(var_7ch, 0x100, 0x85040020);\n        if (*0x85092aac == -1) {\n            var_4h = 0x21590005;\n        }\n        else {\n            *0x85092ab0 = fcn.000452e0(var_7ch, 0x100, 0x85040040);\n            if (*0x85092ab0 == -1) {\n                var_4h = 0x21590005;\n            }\n            else {\n                *0x85092ab4 = fcn.000452e0(var_7ch, 0x100, 0x85040060);\n                if (*0x85092ab4 == -1) {\n                    var_4h = 0x21590005;\n                }\n                else {\n                    *0x85092ab8 = fcn.000452e0(var_7ch, 0x100, 0x85040080);\n                    if (*0x85092ab8 == -1) {\n                        var_4h = 0x21590005;\n                    }\n                    else {\n                        *0x85092abc = fcn.000452e0(var_7ch, 0x100, 0x850400a0);\n                        if (*0x85092abc == -1) {\n                            var_4h = 0x21590005;\n                        }\n                        else {\n                            *0x85092ac0 = fcn.000452e0(var_7ch, 0x100, 0x850400c0);\n                            if (*0x85092ac0 == -1) {\n                                var_4h = 0x21590005;\n                            }\n                            else {\n                                *0x85092ac4 = fcn.000452e0(var_7ch, 0x100, 0x850400e0);\n                                if (*0x85092ac4 == -1) {\n                                    var_4h = 0x21590005;\n                                }\n                                else {\n                                    *0x85092ac8 = fcn.000452e0(var_7ch, 0x100, 0x85040100);\n                                    if (*0x85092ac8 == -1) {\n                                        var_4h = 0x21590005;\n                                    }\n                                    else {\n                                        *0x85092acc = fcn.000452e0(var_7ch, 0x100, 0x85040120);\n                                        if (*0x85092acc == -1) {\n                                            var_4h = 0x21590005;\n                                        }\n                                        else {\n                                            *0x85092ad0 = fcn.000452e0(var_7ch, 0x100, 0x85040140);\n                                            if (*0x85092ad0 == -1) {\n                                                var_4h = 0x21590005;\n                                            }\n                                            else {\n                                                *0x85092ad4 = fcn.000452e0(var_7ch, 0x100, 0x850401a0);\n                                                if (*0x85092ad4 == -1) {\n                                                    var_4h = 0x21590005;\n                                                }\n                                                else {\n                                                    *0x85092ad8 = fcn.000452e0(var_7ch, 0x100, 0x85040160);\n                                                    if (*0x85092ad8 == -1) {\n                                                        var_4h = 0x21590005;\n                                                    }\n                                                    else {\n                                                        *0x85092adc = fcn.000452e0(var_7ch, 0x100, 0x85040180);\n                                                        if (*0x85092adc == -1) {\n                                                            var_4h = 0x21590005;\n                                                        }\n                                                        else {\n                                                            *0x85092ae0 = fcn.000452e0(var_7ch, 0x100, 0x850401c0);\n                                                            if (*0x85092ae0 == -1) {\n                                                                var_4h = 0x21590005;\n                                                            }\n                                                            else {\n                                                                var_4h = 0;\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        (**0x8500d028)(&var_4h, var_7ch);\n    }\n    return var_4h;\n}\n",
        "token_count": 1058
    },
    "000441e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.000441e0(uint *arg_8h, int32_t *arg_ch, int32_t *arg_10h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint var_134h;\n    uint var_130h;\n    uint var_12ch;\n    int32_t var_c4h;\n    uint var_c0h;\n    int32_t var_bch;\n    uint var_b8h;\n    int32_t var_a0h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    var_bch = 0;\n    var_c4h = 0;\n    if ((arg_8h == NULL) || (arg_8h[6] == 0)) {\n        var_c4h = 0x21590065;\n    }\n    else {\n        *arg_10h = 0;\n        *arg_ch = 0;\n        puVar3 = arg_8h;\n        puVar4 = &var_b8h;\n        for (iVar2 = 0x2a; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *puVar4 = *puVar3;\n            puVar3 = puVar3 + 1;\n            puVar4 = puVar4 + 1;\n        }\n        uVar1 = *(var_a0h + 0x14);\n        var_c4h = fcn.00044d40();\n        if (var_c4h == 0) {\n            var_c4h = fcn.000448f0();\n            if ((var_c4h == 0) && (var_c4h = fcn.00044f40(arg_8h, 0, &var_130h, &var_4h),  var_c4h == 0)) {\n                *0x85092af8 = fcn.00042b20(var_4h, 200, &var_130h, 0x68);\n                if (*0x85092af8 != -1) {\n                    *0x85092afc = *0x85092af8 + 4;\n                    *0x85092b00 = *0x85092af8 + 5;\n                    *0x85092b04 = *0x85092af8 + 8;\n                }\n                *0x85092b08 = fcn.000452e0(var_4h, 0x100, 0x850410c0);\n                if (*0x85092b08 == -1) {\n                    var_c4h = 0x21590005;\n                }\n                else {\n                    *0x85092b0c = fcn.000452e0(var_4h, 0x100, 0x850410e0);\n                    if (*0x85092b0c == -1) {\n                        var_c4h = 0x21590005;\n                    }\n                    else {\n                        *0x85092b10 = fcn.000452e0(var_4h, 0x100, 0x85041140);\n                        if (*0x85092b10 == -1) {\n                            var_c4h = 0x21590005;\n                        }\n                        else {\n                            *0x85092b14 = fcn.000452e0(var_4h, 0x100, 0x85041120);\n                            if (*0x85092b14 == -1) {\n                                var_c4h = 0x21590005;\n                            }\n                            else {\n                                *0x85092b18 = fcn.000452e0(var_4h, 0x100, 0x85041100);\n                                if (*0x85092b18 == -1) {\n                                    var_c4h = 0x21590005;\n                                }\n                                else {\n                                    *0x85092b1c = fcn.000452e0(var_4h, 0x100, 0x850412c0);\n                                    if (*0x85092b1c == -1) {\n                                        var_c4h = 0x21590005;\n                                    }\n                                    else {\n                                        *0x85092b20 = fcn.000452e0(var_4h, 0x100, 0x85041160);\n                                        if (*0x85092b20 == -1) {\n                                            var_c4h = 0x21590005;\n                                        }\n                                        else {\n                                            *0x85092b24 = fcn.000452e0(var_4h, 0x100, 0x850411a0);\n                                            if (*0x85092b24 == -1) {\n                                                var_c4h = 0x21590005;\n                                            }\n                                            else {\n                                                *0x85092b08 = fcn.000452e0(var_4h, 0x100, 0x850410c0);\n                                                if (*0x85092b08 == -1) {\n                                                    var_c4h = 0x21590005;\n                                                }\n                                                else {\n                                                    *0x85092b28 = fcn.000452e0(var_4h, 0x100, 0x85041180);\n                                                    if (*0x85092b28 == -1) {\n                                                        var_c4h = 0x21590005;\n                                                    }\n                                                    else {\n                                                        *0x85092b2c = fcn.000452e0(var_4h, 0x100, 0x85041240);\n                                                        if (*0x85092b2c == -1) {\n                                                            var_c4h = 0x21590005;\n                                                        }\n                                                        else {\n                                                            *0x85092b30 = fcn.000452e0(var_4h, 0x100, 0x85041260);\n                                                            if (*0x85092b30 == -1) {\n                                                                var_c4h = 0x21590005;\n                                                            }\n                                                            else {\n                                                                *0x85092b34 = fcn.000452e0(var_4h, 0x100, 0x85041220);\n                                                                if (*0x85092b34 == -1) {\n                                                                    var_c4h = 0x21590005;\n                                                                }\n                                                                else {\n                                                                    *0x85092b38 = fcn.000452e0(var_4h, 0x100, 0x85041280\n                                                                                              );\n                                                                    if (*0x85092b38 == -1) {\n                                                                        var_c4h = 0x21590005;\n                                                                    }\n                                                                    else {\n                                                                        *0x85092b3c = fcn.000452e0(var_4h, 0x100, \n                                                                                                   0x850411e0);\n                                                                        if (*0x85092b3c == -1) {\n                                                                            var_c4h = 0x21590005;\n                                                                        }\n                                                                        else {\n                                                                            *0x85092b40 = fcn.000452e0(var_4h, 0x100, \n                                                                                                       0x85041200);\n                                                                            if (*0x85092b40 == -1) {\n                                                                                var_c4h = 0x21590005;\n                                                                            }\n                                                                            else {\n                                                                                *0x85092b44 = fcn.000452e0(var_4h, 0x100\n                                                                                                           , 0x850411c0)\n                                                                                ;\n                                                                                if (*0x85092b44 == -1) {\n                                                                                    var_c4h = 0x21590005;\n                                                                                }\n                                                                                else {\n                                                                                    *0x85092b48 = fcn.000452e0(var_4h, \n                                                            0x100, 0x850412a0);\n                                                            if (*0x85092b48 == -1) {\n                                                                var_c4h = 0x21590005;\n                                                            }\n                                                            else {\n                                                                var_c4h = fcn.00044810();\n                                                                if (var_c4h != 0) {\n                                                                    return var_c4h;\n                                                                }\n                                                                fcn.0001a830(2, &var_ch, &var_c0h);\n                                                                var_8h = 0;\n                                                                for (var_bch = var_4h; var_bch != 0;\n                                                                    var_bch = *(var_bch + 4)) {\n                                                                    if (var_bch != var_4h) {\n                                                                        var_8h = var_8h + 1;\n                                                                    }\n                                                                }\n                                                                fcn.0001a980(var_ch, var_c0h);\n                                                                iVar2 = fcn.00036360(var_8h << 2);\n                                                                *arg_ch = iVar2;\n                                                                if (*arg_ch == 0) {\n                                                                    var_c4h = -0x3fffff66;\n                                                                }\n                                                                else {\n                                                                    fcn.0001a830(2, &var_ch, &var_c0h);\n                                                                    *arg_10h = 0;\n                                                                    var_bch = var_4h;\n                                                                    while ((var_bch != 0 && (*arg_10h < var_8h))) {\n                                                                        if (var_bch != var_4h) {\n                                                                            *(*arg_ch + *arg_10h * 4) = var_bch;\n                                                                            *arg_10h = *arg_10h + 1;\n                                                                        }\n                                                                        var_bch = *(var_bch + 4);\n                                                                    }\n                                                                    fcn.0001a980(var_ch, var_c0h);\n                                                                }\n                                                            }\n                                                            }\n                                                            }\n                                                            }\n                                                            }\n                                                            }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if (var_4h != 0) {\n                (**0x8509eef8)(var_4h);\n            }\n            *(var_a0h + 0x14) = uVar1;\n            puVar3 = &var_b8h;\n            for (iVar2 = 0x2a; iVar2 != 0; iVar2 = iVar2 + -1) {\n                *arg_8h = *puVar3;\n                puVar3 = puVar3 + 1;\n                arg_8h = arg_8h + 1;\n            }\n            fcn.00044840(0x8508e918, 0x8508e8a8);\n            fcn.00044840(0x8508e9f0, 0x8508e8f8);\n        }\n    }\n    return var_c4h;\n}\n",
        "token_count": 2316
    },
    "00044840": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00044840(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    uint var_22ch;\n    uint var_228h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint *var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    fcn.0007f6d6(&var_228h, 0x100, 0x8500d7ec, arg_8h, arg_ch);\n    fcn.0007f6d0(&var_8h, &var_228h);\n    var_20h = 0x18;\n    var_1ch = 0;\n    var_14h = 0x40;\n    var_18h = &var_8h;\n    var_10h = 0;\n    var_ch = 0;\n    uVar1 = fcn.0007f6ca(&var_24h, 0xf003f, &var_20h);\n    if (uVar1 == 0) {\n        uVar1 = fcn.0007f6fa(var_24h);\n    }\n    else {\n        uVar1 = -(uVar1 != 0xc0000008) & uVar1;\n    }\n    return uVar1;\n}\n",
        "token_count": 316
    },
    "000448f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.000448f0(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint var_2e4h;\n    uint var_2dch;\n    uint *var_2d8h;\n    uint var_2d4h;\n    uint var_2cch;\n    uint *var_2c8h;\n    uint var_2c4h;\n    uint var_2c0h;\n    uint var_2bch;\n    uint var_2b8h;\n    uint var_2b4h;\n    uint var_2b0h;\n    uint var_2ach;\n    uint var_2a8h;\n    uint var_2a4h;\n    uint var_2a0h;\n    uint var_29ch;\n    uint var_298h;\n    uint var_294h;\n    int32_t var_290h;\n    uint var_28ch;\n    uint var_288h;\n    uint var_284h;\n    uint var_280h;\n    uint var_278h;\n    uint var_274h;\n    uint var_270h;\n    uint var_26ch;\n    uint var_268h;\n    uint var_264h;\n    uint var_260h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    int32_t var_50h;\n    uint var_4ch;\n    uint var_30h;\n    uint var_2ch;\n    uint *var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    var_2c4h = *0x8501118c;\n    var_2c0h = *0x85011190;\n    var_2bch = *0x85011194;\n    var_18h = *0x85011198;\n    var_14h = *0x8501119c;\n    var_10h = *0x850111a0;\n    var_ch._0_1_ = *0x850111a4;\n    var_58h = *0x850111a8;\n    var_54h = *0x850111ac;\n    var_2b8h = *0x850111b0;\n    var_2b4h = *0x850111b4;\n    var_2b0h = *0x850111b8;\n    var_2ach = *0x850111bc;\n    var_2a8h = *0x850111c0;\n    var_2a4h = *0x850111c4;\n    puVar3 = 0x850111c8;\n    puVar4 = &var_4ch;\n    for (iVar2 = 7; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    var_278h = *0x850111e4;\n    var_274h = *0x850111e8;\n    var_270h = *0x850111ec;\n    var_26ch = *0x850111f0;\n    var_268h = *0x850111f4;\n    var_264h._0_2_ = *0x850111f8;\n    var_2a0h = *0x850111fc;\n    var_29ch = *0x85011200;\n    var_298h = *0x85011204;\n    var_294h = *0x85011208;\n    var_28ch = 1;\n    var_5ch = 2;\n    var_50h = 0;\n    var_284h = 2;\n    fcn.0007f6d6(&var_260h, 0x100, 0x8500d7ec, 0x8508e918, 0x8508e8a8);\n    fcn.0007f6d0(&var_8h, &var_260h);\n    var_30h = 0x18;\n    var_2ch = 0;\n    var_24h = 0x40;\n    var_28h = &var_8h;\n    var_20h = 0;\n    var_1ch = 0;\n    var_290h = fcn.0007f7ae(&var_288h, 0xf003f, &var_30h, 0, 0, 0, &var_284h);\n    if (var_290h == 0) {\n        fcn.0007f6d6(&var_260h, 0x100, 0x85010ae4, 0x8508e918, 0x8508e8a8, &var_58h);\n        fcn.0007f6d0(&var_8h, &var_260h);\n        var_30h = 0x18;\n        var_2ch = 0;\n        var_24h = 0x40;\n        var_28h = &var_8h;\n        var_20h = 0;\n        var_1ch = 0;\n        var_290h = fcn.0007f7ae(&var_50h, 0xf003f, &var_30h, 0, 0, 0, &var_284h);\n        if (var_290h == 0) {\n            fcn.0007f6d0(&var_280h, &var_2b8h);\n            var_2c8h = &var_2c4h;\n            do {\n                cVar1 = *var_2c8h;\n                var_2c8h = var_2c8h + 1;\n            } while (cVar1 != '\\0');\n            var_290h = fcn.0007f6be(var_50h, &var_280h, 0, 1, &var_2c4h, var_2c8h + (1 - (&var_2c4h + 1)));\n            if (var_290h == 0) {\n                fcn.0007f6d0(&var_280h, &var_2a0h);\n                var_2d8h = &var_18h;\n                do {\n                    cVar1 = *var_2d8h;\n                    var_2d8h = var_2d8h + 1;\n                } while (cVar1 != '\\0');\n                var_290h = fcn.0007f6be(var_50h, &var_280h, 0, 1, &var_18h, var_2d8h + (1 - (&var_18h + 1)));\n                if (var_290h == 0) {\n                    fcn.0007f6d0(&var_280h, &var_4ch);\n                    var_290h = fcn.0007f6be(var_50h, &var_280h, 0, 4, &var_28ch, 4);\n                    if (var_290h == 0) {\n                        fcn.0007f6d0(&var_280h, &var_278h);\n                        var_290h = fcn.0007f6be(var_50h, &var_280h, 0, 4, &var_5ch, 4);\n                    }\n                }\n            }\n        }\n        if (var_290h != 0) {\n            fcn.0007f6fa(var_288h);\n        }\n        fcn.0007f6c4(var_288h);\n        if (var_50h != 0) {\n            fcn.0007f6c4(var_50h);\n        }\n    }\n    return var_290h;\n}\n",
        "token_count": 1819
    },
    "00044d40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00044d40(void)\n\n{\n    int32_t var_23ch;\n    uint var_238h;\n    uint var_234h;\n    uint var_22ch;\n    uint var_228h;\n    uint var_220h;\n    int32_t var_21ch;\n    uint var_218h;\n    uint var_214h;\n    uint *var_210h;\n    uint var_20ch;\n    uint var_208h;\n    uint var_204h;\n    uint var_200h;\n    \n    var_21ch = 0;\n    var_22ch = 1;\n    var_238h = 2;\n    fcn.0007f6d6(&var_200h, 0x100, 0x8500d7ec, 0x8508e9f0, 0x8508e8f8);\n    fcn.0007f6d0(&var_228h, &var_200h);\n    var_218h = 0x18;\n    var_214h = 0;\n    var_20ch = 0x40;\n    var_210h = &var_228h;\n    var_208h = 0;\n    var_204h = 0;\n    var_23ch = fcn.0007f7ae(&var_220h, 0xf003f, &var_218h, 0, 0, 0, &var_238h);\n    if (var_23ch == 0) {\n        fcn.0007f6d6(&var_200h, 0x100, 0x85010ae4, 0x8508e9f0, 0x8508e8f8, 0x8501120c);\n        fcn.0007f6d0(&var_228h, &var_200h);\n        var_218h = 0x18;\n        var_214h = 0;\n        var_20ch = 0x40;\n        var_210h = &var_228h;\n        var_208h = 0;\n        var_204h = 0;\n        var_23ch = fcn.0007f7ae(&var_21ch, 0xf003f, &var_218h, 0, 0, 0, &var_238h);\n        if (var_23ch == 0) {\n            fcn.0007f6d0(&var_234h, 0x85011224);\n            var_23ch = fcn.0007f6be(var_21ch, &var_234h, 0, 4, &var_22ch, 4);\n        }\n        if (var_23ch != 0) {\n            fcn.0007f6fa(var_220h);\n        }\n        fcn.0007f6c4(var_220h);\n        if (var_21ch != 0) {\n            fcn.0007f6c4(var_21ch);\n        }\n    }\n    return var_23ch;\n}\n",
        "token_count": 683
    },
    "00045340": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00045340(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint *puVar3;\n    uint var_120h;\n    uint var_11ch;\n    uint var_cch;\n    int32_t var_c8h;\n    int32_t var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    int32_t var_a0h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_ch = 0;\n    if ((arg_8h == NULL) || (arg_8h[6] == 0)) {\n        var_c8h = 0x21590065;\n    }\n    else {\n        puVar2 = arg_8h;\n        puVar3 = &var_b8h;\n        for (iVar1 = 0x2a; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *puVar3 = *puVar2;\n            puVar2 = puVar2 + 1;\n            puVar3 = puVar3 + 1;\n        }\n        var_cch = *(var_a0h + 0x14);\n        var_c8h = fcn.00045940(arg_8h, 0, &var_cch, &var_120h, &var_8h);\n        if (var_c8h == 0) {\n            *0x8509edc0 = fcn.00042b20(var_8h, 0x150, &var_120h, 0x50);\n            if (*0x8509edc0 != -1) {\n                *0x8509edc4 = *0x8509edc0 + 4;\n                *0x8509edc8 = *0x8509edc0 + 5;\n                *0x8509edcc = *0x8509edc0 + 8;\n            }\n            *0x8509edd0 = fcn.000452e0(var_8h, 0x100, 0x85041ac0);\n            if (*0x8509edd0 == -1) {\n                var_c8h = 0x21590005;\n            }\n            else {\n                *0x8509edd4 = fcn.000452e0(var_8h, 0x100, 0x85041ae0);\n                if (*0x8509edd4 == -1) {\n                    var_c8h = 0x21590005;\n                }\n                else {\n                    *0x8509edd8 = fcn.000452e0(var_8h, 0x100, 0x85041aa0);\n                    if (*0x8509edd8 == -1) {\n                        var_c8h = 0x21590005;\n                    }\n                    else {\n                        *0x8509eddc = fcn.000452e0(var_8h, 0x100, 0x85041b00);\n                        if (*0x8509eddc == -1) {\n                            var_c8h = 0x21590005;\n                        }\n                        else {\n                            *0x8509ede0 = fcn.000452e0(var_8h, 0x100, 0x85041b20);\n                            if (*0x8509ede0 == -1) {\n                                var_c8h = 0x21590005;\n                            }\n                            else {\n                                *0x8509ede4 = fcn.000452e0(var_8h, 0x100, 0x85041c60);\n                                if (*0x8509ede4 == -1) {\n                                    var_c8h = 0x21590005;\n                                }\n                                else {\n                                    *0x8509ede8 = fcn.000452e0(var_8h, 0x100, 0x85041b40);\n                                    if (*0x8509ede8 == -1) {\n                                        var_c8h = 0x21590005;\n                                    }\n                                    else {\n                                        *0x8509edec = fcn.000452e0(var_8h, 0x100, 0x85041b60);\n                                        if (*0x8509edec == -1) {\n                                            var_c8h = 0x21590005;\n                                        }\n                                        else {\n                                            *0x8509edf0 = fcn.000452e0(var_8h, 0x100, 0x85041b80);\n                                            if (*0x8509edf0 == -1) {\n                                                var_c8h = 0x21590005;\n                                            }\n                                            else {\n                                                *0x8509edf4 = fcn.000452e0(var_8h, 0x100, 0x85041ba0);\n                                                if (*0x8509edf4 == -1) {\n                                                    var_c8h = 0x21590005;\n                                                }\n                                                else {\n                                                    *0x8509edf8 = fcn.000452e0(var_8h, 0x100, 0x85041bc0);\n                                                    if (*0x8509edf8 == -1) {\n                                                        var_c8h = 0x21590005;\n                                                    }\n                                                    else {\n                                                        *0x8509edfc = fcn.000452e0(var_8h, 0x100, 0x85041be0);\n                                                        if (*0x8509edfc == -1) {\n                                                            var_c8h = 0x21590005;\n                                                        }\n                                                        else {\n                                                            *0x8509ee00 = fcn.000452e0(var_8h, 0x100, 0x85041c00);\n                                                            if (*0x8509ee00 == -1) {\n                                                                var_c8h = 0x21590005;\n                                                            }\n                                                            else {\n                                                                *0x8509ee04 = fcn.000452e0(var_8h, 0x100, 0x85041c20);\n                                                                if (*0x8509ee04 == -1) {\n                                                                    var_c8h = 0x21590005;\n                                                                }\n                                                                else {\n                                                                    *0x8509ee08 = fcn.000452e0(var_8h, 0x100, 0x85041c40\n                                                                                              );\n                                                                    if (*0x8509ee08 == -1) {\n                                                                        var_c8h = 0x21590005;\n                                                                    }\n                                                                    else {\n                                                                        *0x8509ee0c = fcn.000452e0(var_8h, 0x100, \n                                                                                                   &var_cch);\n                                                                        if (*0x8509ee0c == -1) {\n                                                                            var_c8h = 0x21590005;\n                                                                        }\n                                                                        else {\n                                                                            fcn.0001a830(2, &var_10h, &var_c0h);\n                                                                            var_ch = var_8h;\n                                                                            do {\n                                                                                iVar1 = fcn.000457f0(var_ch, &var_c4h, \n                                                                                                     &var_bch);\n                                                                                if (((iVar1 == 0) && (var_c4h == 6)) &&\n                                                                                   (var_ch != var_8h)) {\n                                                                                    fcn.00040d00(var_ch, var_bch);\n                                                                                }\n                                                                                var_ch = *(var_ch + 4);\n                                                                                var_4h = var_ch;\n                                                                            } while (var_ch != 0);\n                                                                            fcn.0001a980(var_10h, var_c0h);\n                                                                        }\n                                                                    }\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            (**0x8509ef00)(var_8h);\n            *(var_a0h + 0x14) = var_cch;\n            puVar2 = &var_b8h;\n            for (iVar1 = 0x2a; iVar1 != 0; iVar1 = iVar1 + -1) {\n                *arg_8h = *puVar2;\n                puVar2 = puVar2 + 1;\n                arg_8h = arg_8h + 1;\n            }\n        }\n    }\n    return var_c8h;\n}\n",
        "token_count": 1842
    },
    "000457f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000457f0(int32_t arg_8h, int32_t *arg_ch, int32_t *arg_10h)\n\n{\n    char *pcVar1;\n    uint uVar2;\n    char *pcVar3;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar1 = arg_8h + *0x8509edc8;\n    if ((*(arg_8h + *0x8509edc4) == '\\x06') &&\n       ((((*pcVar1 == '\\0' || (*pcVar1 == '\\x01')) || (*pcVar1 == '\\x02')) || (*pcVar1 == '\\x14')))) {\n        if ((*(arg_8h + *0x8509edcc) & 1) == 0) {\n            *arg_ch = *(arg_8h + *0x8509edc4);\n            *arg_10h = *pcVar1;\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = 0x21590001;\n        }\n    }\n    else {\n        pcVar1 = arg_8h + *0x8509ecc8;\n        pcVar3 = arg_8h + *0x8509ecc4;\n        if ((*pcVar3 == '\\x05') && (((*pcVar1 == '\\0' || (*pcVar1 == '\\x01')) || (*pcVar1 == '\\x02')))) {\n            *arg_ch = *pcVar3;\n            *arg_10h = *pcVar1;\n            uVar2 = 0;\n        }\n        else if ((*pcVar3 == '\\x04') && (*pcVar1 == '\\0')) {\n            *arg_ch = *pcVar3;\n            *arg_10h = 0;\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = 0x21590001;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 447
    },
    "00045940": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00045940(uint arg_8h, uint noname_1, uint arg_10h, uchar *arg_14h, uint arg_18h)\n\n{\n    uint uVar1;\n    uint var_10h;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = (**0x8500d060)();\n    fcn.0007f6d0(&var_10h, 0x850107f4);\n    fcn.0007f916(arg_14h, 0, 0x50);\n    *arg_14h = 0x8a;\n    if ((var_4h & 0xffff) == 0) {\n        arg_14h[1] = 1;\n        *(arg_14h + 2) = 0x48;\n    }\n    else {\n        arg_14h[1] = 2;\n        *(arg_14h + 2) = 0x50;\n        *(arg_14h + 0x48) = 0x85041c80;\n        *(arg_14h + 0x4c) = 0x85041ca0;\n    }\n    arg_14h[4] = 6;\n    arg_14h[5] = var_4h;\n    arg_14h[6] = 6;\n    arg_14h[7] = 0;\n    *(arg_14h + 0xc) = 0x85041ac0;\n    *(arg_14h + 0x10) = 0x85041ae0;\n    *(arg_14h + 0x14) = 0x85041aa0;\n    *(arg_14h + 0x18) = 0x85041b00;\n    *(arg_14h + 0x1c) = 0x85041b20;\n    *(arg_14h + 0x20) = 0x85041c60;\n    *(arg_14h + 0x24) = 0x85041b40;\n    *(arg_14h + 0x28) = 0x85041b60;\n    *(arg_14h + 0x2c) = 0x85041b80;\n    *(arg_14h + 0x30) = 0x85041ba0;\n    *(arg_14h + 0x3c) = 0x85041bc0;\n    *(arg_14h + 0x40) = 0x85041be0;\n    *(arg_14h + 0x34) = 0x85041c00;\n    *(arg_14h + 0x38) = 0x85041c20;\n    *(arg_14h + 0x44) = 0x85041c40;\n    uVar1 = (**0x8509eee8)(arg_8h, &var_10h, arg_10h, arg_14h, arg_18h);\n    return uVar1;\n}\n",
        "token_count": 680
    },
    "00045ce0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00045ce0(void)\n\n{\n    int32_t iVar1;\n    uint var_114h;\n    int32_t *var_110h;\n    int32_t *var_10ch;\n    uint var_108h;\n    \n    var_110h = NULL;\n    iVar1 = fcn.00045cc0(0x85092ba4, 1, 1);\n    if (iVar1 == 1) {\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = fcn.00035930(5, &var_110h);\n        if (iVar1 == 0) {\n            var_10ch = var_110h;\n            while( true ) {\n                do {\n                    iVar1 = fcn.000379d0(var_10ch[0x11], &var_108h, 0x104);\n                } while (iVar1 == 0);\n                iVar1 = fcn.0007f7a2(&var_108h, 0x8500da6c);\n                if (iVar1 == 0) {\n                    fcn.00045dd0(var_10ch[0x11]);\n                }\n                if (*var_10ch == 0) break;\n                var_10ch = var_10ch + *var_10ch;\n            }\n            fcn.00036460(var_110h);\n            iVar1 = 0;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 319
    },
    "00045dd0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00045dd0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    \n    iVar1 = fcn.00045cc0(0x85092ba4, 1, 1);\n    if ((iVar1 != 1) && (iVar1 = fcn.0001a700(&var_8h, 0x85041e20, arg_8h),  iVar1 == 0)) {\n        fcn.00038370(&var_8h);\n    }\n    return;\n}\n",
        "token_count": 125
    },
    "00045e20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00045e20(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    var_ch = arg_8h;\n    fcn.0005bdd0(1000);\n    var_10h = fcn.0005d4f0(var_ch, 0x8501125c, &var_14h);\n    if (var_10h == 0) {\n        fcn.0005dcd0(var_ch, var_14h);\n        iVar1 = fcn.00045cc0(0x85092ba4, 1, 0);\n        if (iVar1 == 0) {\n            *0x85090fd8 = var_ch;\n            var_10h = fcn.0003e350();\n            if ((var_10h == 0) && (var_10h = fcn.0003df40(),  var_10h == 0)) {\n                fcn.00049040();\n                *0x85092b4c = *0x85092618;\n                fcn.0007f6d0(&var_8h, 0x85011264);\n                var_10h = (**0x8500d1a8)(*0x85092b4c, 0, &var_8h, 0, 0, 0, 0x85092b50);\n                if (((var_10h == 0) &&\n                    (((var_10h = fcn.000461a0(),  var_10h == 0 && (var_10h = fcn.00046100(),  var_10h == 0)) &&\n                     (var_10h = fcn.00046280(),  var_10h == 0)))) && (var_10h = fcn.00045f90(),  var_10h == 0)) {\n                    fcn.000484a0();\n                }\n            }\n            if (var_10h != 0) {\n                fcn.00052470(0x85092ba4, 0);\n            }\n        }\n        else {\n            var_10h = 0;\n        }\n    }\n    return var_10h;\n}\n",
        "token_count": 511
    },
    "00045f60": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint fcn.00045f60(void)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    while( true ) {\n        iVar1 = fcn.00034df0(0x85092bb0, 3);\n        if (iVar1 != 0) break;\n        fcn.00046280();\n    }\n    return 0;\n}\n",
        "token_count": 98
    },
    "00046000": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00046000(void)\n\n{\n    int32_t iVar1;\n    \n    if (*0x85092ba8 != 0) {\n        fcn.00034dc0(0x85092bb0);\n        iVar1 = fcn.00038420(0x85092ba8);\n        if (iVar1 == 0) {\n            fcn.0007f772(*0x85092ba8, 0, 0);\n        }\n        *0x85092ba8 = 0;\n        *0x85092bac = 0;\n        fcn.00034d90(0x85092bb0);\n    }\n    return 0;\n}\n",
        "token_count": 148
    },
    "00046060": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00046060(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.00045cc0(0x85092ba4, 1, 1);\n    if (iVar1 == 1) {\n        if ((arg_8h != 0) && (arg_8h != *0x85090fd8)) {\n            iVar1 = fcn.0005d4f0(arg_8h, 0x8501125c, &var_4h);\n            if (iVar1 != 0) {\n                return;\n            }\n            fcn.0005dcd0(arg_8h, var_4h);\n        }\n        fcn.00052470(0x85092ba4, 0);\n        fcn.00046000();\n        fcn.00046ac0();\n        fcn.000484c0();\n        fcn.00046210();\n        fcn.00046150();\n        fcn.00049070();\n        (**0x8500d184)(*0x85092b50);\n        *0x85090fd8 = 0;\n    }\n    return;\n}\n",
        "token_count": 266
    },
    "00046100": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __fastcall fcn.00046100(uint param_1)\n\n{\n    uint uVar1;\n    uint var_4h;\n    \n    *0x85092b98 = (**0x85092994)(*0x85092b4c, 0x6f6e6553, 0, param_1);\n    if (*0x85092b98 == 0) {\n        uVar1 = 0xc0000017;\n    }\n    else {\n        uVar1 = (**0x850929e0)(2, 1, 0x85092b9c);\n    }\n    return uVar1;\n}\n",
        "token_count": 154
    },
    "00046150": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00046150(void)\n\n{\n    if (*0x85092b9c != 0) {\n        (**0x850929e4)(*0x85092b9c);\n        *0x85092b9c = 0;\n    }\n    if (*0x85092b98 != 0) {\n        (**0x85092998)(*0x85092b98);\n        *0x85092b98 = 0;\n    }\n    return;\n}\n",
        "token_count": 105
    },
    "000461a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_3h\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.000461a0(void)\n\n{\n    uint uVar1;\n    uint var_10h;\n    uint var_bh;\n    uint var_7h;\n    uint var_3h;\n    \n    var_bh._1_2_ = 0;\n    var_10h._0_1_ = 0x80;\n    stack0xffffffed = 0x1001;\n    var_bh._0_1_ = 1;\n    var_7h._3_1_ = 0;\n    var_3h._0_2_ = 0;\n    var_3h._2_1_ = 0;\n    stack0xfffffff4 = 0x706e6553;\n    *0x85092ba0 = (**0x8509299c)(*0x85092b98, &var_10h);\n    if (*0x85092ba0 == 0) {\n        uVar1 = 0xc0000017;\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 258
    },
    "00046210": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00046210(void)\n\n{\n    if (*0x85092ba0 != 0) {\n        (**0x850929a0)(*0x85092ba0);\n        *0x85092ba0 = 0;\n    }\n    return;\n}\n",
        "token_count": 59
    },
    "00046280": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.00046280(void)\n\n{\n    int16_t iVar1;\n    uint var_174h;\n    uint var_16ch;\n    uint *var_168h;\n    uint var_164h;\n    uint var_15ch;\n    uint *var_158h;\n    uint var_154h;\n    uint var_14ch;\n    uint *var_148h;\n    uint var_144h;\n    uint var_13ch;\n    uint *var_138h;\n    uint var_134h;\n    uint var_12ch;\n    uint *var_128h;\n    uint var_124h;\n    uint var_11ch;\n    uint *var_118h;\n    uint var_114h;\n    uint var_10ch;\n    uint *var_108h;\n    uint var_104h;\n    uint var_fch;\n    uint *var_f8h;\n    uint var_f4h;\n    uint var_ech;\n    int16_t *var_e8h;\n    uint var_e4h;\n    uint var_dch;\n    int16_t *var_d8h;\n    uint var_d4h;\n    ushort var_d0h;\n    ushort var_ceh;\n    ushort var_cch;\n    ushort var_cah;\n    ushort var_c8h;\n    ushort var_c6h;\n    ushort var_c4h;\n    ushort var_c2h;\n    ushort var_c0h;\n    ushort var_beh;\n    ushort var_bch;\n    int32_t var_b8h;\n    uint var_b1h;\n    ushort var_ach;\n    ushort var_aah;\n    ushort var_a8h;\n    ushort var_a6h;\n    ushort var_a4h;\n    ushort var_a2h;\n    ushort var_a0h;\n    ushort var_9eh;\n    ushort var_9ch;\n    ushort var_9ah;\n    ushort var_98h;\n    ushort var_96h;\n    ushort var_94h;\n    uint var_90h;\n    ushort var_8ch;\n    ushort var_8ah;\n    ushort var_88h;\n    ushort var_86h;\n    ushort var_84h;\n    ushort var_82h;\n    ushort var_80h;\n    ushort var_7eh;\n    ushort var_7ch;\n    ushort var_7ah;\n    ushort var_78h;\n    ushort var_76h;\n    ushort var_74h;\n    uint var_70h;\n    ushort var_6ch;\n    ushort var_6ah;\n    ushort var_68h;\n    ushort var_66h;\n    ushort var_64h;\n    ushort var_62h;\n    ushort var_60h;\n    ushort var_5eh;\n    ushort var_5ch;\n    ushort var_5ah;\n    ushort var_58h;\n    ushort var_56h;\n    ushort var_54h;\n    ushort var_52h;\n    uint var_4dh;\n    uint var_48h;\n    int32_t var_3ch;\n    uint var_34h;\n    uint var_1ch;\n    ushort var_18h;\n    ushort var_16h;\n    ushort var_14h;\n    ushort var_12h;\n    ushort var_10h;\n    ushort var_eh;\n    ushort var_ch;\n    ushort var_ah;\n    ushort var_8h;\n    ushort var_6h;\n    ushort var_4h;\n    ushort var_2h;\n    \n    var_b8h = 0;\n    var_4dh._0_1_ = '\\0';\n    var_b1h._0_1_ = '\\0';\n    var_b1h._1_2_ = 0x72;\n    stack0xffffff4e = 0x6b;\n    var_ach = 0x6e;\n    var_aah = 0x67;\n    var_a8h = 0x5f;\n    var_a6h = 0x73;\n    var_a4h = 0x65;\n    var_a2h = 0x73;\n    var_a0h = 0x73;\n    var_9eh = 0x69;\n    var_9ch = 0x6f;\n    var_9ah = 0x6e;\n    var_98h = 0;\n    var_96h = 0;\n    var_94h = 0;\n    var_1ch._0_2_ = 0x73;\n    var_1ch._2_2_ = 0x74;\n    var_18h = 0x72;\n    var_16h = 0x65;\n    var_14h = 0x61;\n    var_12h = 0x6d;\n    var_10h = 0x5f;\n    var_eh = 99;\n    var_ch = 0x61;\n    var_ah = 0x6f;\n    var_8h = 0x74;\n    var_6h = 0;\n    var_4h = 0;\n    var_2h = 0;\n    var_d4h._0_2_ = 0x65;\n    var_d4h._2_2_ = 0x73;\n    var_d0h = 0x74;\n    var_ceh = 0x62;\n    var_cch = 0x6c;\n    var_cah = 0x5f;\n    var_c8h = 99;\n    var_c6h = 0x61;\n    var_c4h = 0x6f;\n    var_c2h = 0x74;\n    var_c0h = 0;\n    var_beh = 0;\n    var_bch = 0;\n    var_70h._0_2_ = 0x73;\n    var_70h._2_2_ = 0x74;\n    var_6ch = 0x72;\n    var_6ah = 0x65;\n    var_68h = 0x61;\n    var_66h = 0x6d;\n    var_64h = 0x5f;\n    var_62h = 0x66;\n    var_60h = 0x69;\n    var_5eh = 0x6c;\n    var_5ch = 0x74;\n    var_5ah = 0x65;\n    var_58h = 0x72;\n    var_56h = 0;\n    var_54h = 0;\n    var_52h = 0;\n    var_90h._0_2_ = 0x65;\n    var_90h._2_2_ = 0x73;\n    var_8ch = 0x74;\n    var_8ah = 0x62;\n    var_88h = 0x6c;\n    var_86h = 0x5f;\n    var_84h = 0x66;\n    var_82h = 0x69;\n    var_80h = 0x6c;\n    var_7eh = 0x74;\n    var_7ch = 0x65;\n    var_7ah = 0x72;\n    var_78h = 0;\n    var_76h = 0;\n    var_74h = 0;\n    stack0xffffffb0 = 0;\n    fcn.0007f916(&var_48h, 0, 0x2c);\n    var_d8h = &var_b1h + 1;\n    do {\n        iVar1 = *var_d8h;\n        var_d8h = var_d8h + 1;\n    } while (iVar1 != 0);\n    var_e8h = &var_b1h + 1;\n    do {\n        iVar1 = *var_e8h;\n        var_e8h = var_e8h + 1;\n    } while (iVar1 != 0);\n    fcn.0003bae0(&var_b1h + 1, &var_b1h + (var_e8h - (&var_b1h + 3) >> 1) * 2 + 1, \n                 &var_b1h + (var_d8h - (&var_b1h + 3) >> 1) * 2 + 3);\n    var_f8h = &var_1ch;\n    do {\n        iVar1 = *var_f8h;\n        var_f8h = var_f8h + 2;\n    } while (iVar1 != 0);\n    var_108h = &var_1ch;\n    do {\n        iVar1 = *var_108h;\n        var_108h = var_108h + 2;\n    } while (iVar1 != 0);\n    fcn.0003bae0(&var_1ch, &var_1ch + (var_108h - (&var_1ch + 2) >> 1) * 2, \n                 &var_1ch + (var_f8h - (&var_1ch + 2) >> 1) * 2 + 2);\n    var_118h = &var_d4h;\n    do {\n        iVar1 = *var_118h;\n        var_118h = var_118h + 2;\n    } while (iVar1 != 0);\n    var_128h = &var_d4h;\n    do {\n        iVar1 = *var_128h;\n        var_128h = var_128h + 2;\n    } while (iVar1 != 0);\n    fcn.0003bae0(&var_d4h, &var_d4h + (var_128h - (&var_d4h + 2) >> 1) * 2, \n                 &var_d4h + (var_118h - (&var_d4h + 2) >> 1) * 2 + 2);\n    var_138h = &var_70h;\n    do {\n        iVar1 = *var_138h;\n        var_138h = var_138h + 2;\n    } while (iVar1 != 0);\n    var_148h = &var_70h;\n    do {\n        iVar1 = *var_148h;\n        var_148h = var_148h + 2;\n    } while (iVar1 != 0);\n    fcn.0003bae0(&var_70h, &var_70h + (var_148h - (&var_70h + 2) >> 1) * 2, \n                 &var_70h + (var_138h - (&var_70h + 2) >> 1) * 2 + 2);\n    var_158h = &var_90h;\n    do {\n        iVar1 = *var_158h;\n        var_158h = var_158h + 2;\n    } while (iVar1 != 0);\n    var_168h = &var_90h;\n    do {\n        iVar1 = *var_168h;\n        var_168h = var_168h + 2;\n    } while (iVar1 != 0);\n    fcn.0003bae0(&var_90h, &var_90h + (var_168h - (&var_90h + 2) >> 1) * 2, \n                 &var_90h + (var_158h - (&var_90h + 2) >> 1) * 2 + 2);\n    var_3ch = &var_b1h + 1;\n    var_34h = 1;\n    if (*0x85092b54 == 0) {\n        fcn.00046240();\n        var_b8h = (**0x850929f8)(0, 10, 0, &var_4dh + 1, 0x85092b54);\n        if (var_b8h != 0) goto code_r0x00046a68;\n    }\n    var_4dh._0_1_ = '\\x01';\n    var_b8h = (**0x850929f0)(*0x85092b54, 0);\n    if (var_b8h == 0) {\n        var_b1h._0_1_ = '\\x01';\n        var_b8h = fcn.000471f0(0x8500dc70, 0x8500e5b0, *0x85092b50, 0x85043630, 0x85062250, 0x85044110, &var_1ch, \n                               &var_70h, 0x85092b58, 0x85092b60);\n        if ((((var_b8h == 0) &&\n             (var_b8h = fcn.000471f0(0x8500de70, 0x8500e5c0, *0x85092b50, 0x85043de0, 0x85062250, 0, &var_d4h, &var_90h\n                                     , 0x85092b68, 0x85092b70),  var_b8h == 0)) &&\n            (var_b8h = fcn.000471f0(0x8500de90, 0x8500e5e0, *0x85092b50, 0x85043f60, 0x85062250, 0, &var_d4h, &var_90h, \n                                    0x85092b88, 0x85092b90),  var_b8h == 0)) &&\n           ((var_b8h = fcn.000471f0(0x8500dc90, 0x8500e5d0, *0x85092b50, 0x85043630, 0x85062250, 0x85044110, &var_1ch, \n                                    &var_70h, 0x85092b78, 0x85092b80),  var_b8h == 0 &&\n            (var_b8h = (**0x850929f4)(*0x85092b54),  var_b8h == 0)))) {\n            var_b1h._0_1_ = '\\0';\n        }\n    }\ncode_r0x00046a68:\n    if (var_b8h != 0) {\n        if (var_b1h != '\\0') {\n            (**0x850929ec)(*0x85092b54);\n        }\n        if (var_4dh != '\\0') {\n            (**0x850929e8)(*0x85092b54);\n            *0x85092b54 = 0;\n        }\n    }\n    return var_b8h;\n}\n",
        "token_count": 3261
    },
    "00046ac0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00046ac0(void)\n\n{\n    if (*0x85092b58 != 0) {\n        (**0x850929fc)(*0x85092b58);\n    }\n    if (*0x85092b68 != 0) {\n        (**0x850929fc)(*0x85092b68);\n    }\n    if (*0x85092b78 != 0) {\n        (**0x850929fc)(*0x85092b78);\n    }\n    if (*0x85092b88 != 0) {\n        (**0x850929fc)(*0x85092b88);\n    }\n    if (*0x85092b54 != 0) {\n        (**0x850929e8)(*0x85092b54);\n    }\n    *0x85092b54 = 0;\n    return;\n}\n",
        "token_count": 184
    },
    "00046c40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00046c40(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_94h;\n    int32_t var_90h;\n    int32_t var_8ch;\n    int32_t *var_88h;\n    int32_t *var_84h;\n    uint32_t var_80h;\n    uint var_7ch;\n    int32_t var_78h;\n    int32_t var_74h;\n    int32_t *var_70h;\n    int32_t *var_6ch;\n    uint32_t var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_3ch;\n    uint32_t var_34h;\n    uint var_30h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    int32_t var_24h;\n    uint *var_20h;\n    int32_t var_1ch;\n    char var_15h;\n    uint32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    int32_t *var_4h;\n    \n    var_20h = NULL;\n    var_10h = 0;\n    var_24h = 0;\n    var_4h = NULL;\n    var_1ch = 0;\n    *0x85090fdc = *0x8500df80;\n    *0x85090fe0 = *0x8500df84;\n    *0x85090fe4 = *0x8500df88;\n    *0x85090fe8 = *0x8500df8c;\n    fcn.0007f916(&var_64h, 0, 0x30);\n    var_60h = *arg_ch;\n    var_5ch = arg_ch[1];\n    var_58h = arg_ch[2];\n    var_54h = arg_ch[3];\n    var_3ch = 0xffffffff;\n    var_50h = 1;\n    var_ch = (**0x8509eed8)(arg_8h, &var_64h, &var_10h);\n    if ((((var_ch == 0) && (var_ch = (**0x8509eed0)(arg_8h, var_10h, 0xffffffff, &var_4h, &var_8h),  var_ch == 0)) &&\n        (var_8h != 0)) && (var_20h = fcn.00036330(0x10),  var_20h != NULL)) {\n        iVar1 = *var_4h;\n        *var_20h = *(iVar1 + 0x38);\n        var_20h[1] = *(iVar1 + 0x3c);\n        var_20h[2] = *(iVar1 + 0x40);\n        var_20h[3] = *(iVar1 + 0x44);\n        var_28h = 1;\n        for (var_14h = 1; var_14h < var_8h; var_14h = var_14h + 1) {\n            var_15h = '\\0';\n            for (var_34h = 0; var_34h < var_28h; var_34h = var_34h + 1) {\n                var_68h = 0x10;\n                var_6ch = var_4h[var_14h] + 0x38;\n                var_70h = var_20h + var_34h * 4;\n                for (; 3 < var_68h; var_68h = var_68h - 4) {\n                    if (*var_70h != *var_6ch) goto code_r0x00046dec;\n                    var_6ch = var_6ch + 1;\n                    var_70h = var_70h + 1;\n                }\n                if (var_68h == 0) {\ncode_r0x00046e6e:\n                    var_78h = 0;\n                }\n                else {\ncode_r0x00046dec:\n                    var_74h = *var_70h - *var_6ch;\n                    if (var_74h == 0) {\n                        if (var_68h == 1) goto code_r0x00046e6e;\n                        var_74h = *(var_70h + 1) - *(var_6ch + 1);\n                        if (var_74h == 0) {\n                            if (var_68h == 2) goto code_r0x00046e6e;\n                            var_74h = *(var_70h + 2) - *(var_6ch + 2);\n                            if (var_74h == 0) {\n                                if ((var_68h == 3) || (var_74h = *(var_70h + 3) - *(var_6ch + 3),  var_74h == 0))\n                                goto code_r0x00046e6e;\n                            }\n                        }\n                    }\n                    var_78h = 1;\n                    if (var_74h < 1) {\n                        var_78h = -1;\n                    }\n                }\n                if (var_78h == 0) {\n                    var_15h = '\\x01';\n                    break;\n                }\n            }\n            if (var_15h == '\\0') {\n                iVar1 = fcn.00018d00(&var_20h, var_28h << 4, (var_28h + 1) * 0x10);\n                if (iVar1 < 0) goto code_r0x0004717f;\n                iVar1 = var_4h[var_14h];\n                puVar2 = var_20h + var_28h * 4;\n                *puVar2 = *(iVar1 + 0x38);\n                puVar2[1] = *(iVar1 + 0x3c);\n                puVar2[2] = *(iVar1 + 0x40);\n                puVar2[3] = *(iVar1 + 0x44);\n                var_28h = var_28h + 1;\n            }\n        }\n        if (var_28h == 1) {\n            iVar1 = *var_4h;\n            *0x85090fdc = *(iVar1 + 0x38);\n            *0x85090fe0 = *(iVar1 + 0x3c);\n            *0x85090fe4 = *(iVar1 + 0x40);\n            *0x85090fe8 = *(iVar1 + 0x44);\n        }\n        else {\n            var_ch = (**0x8509eedc)(arg_8h, 0, &var_24h);\n            if ((var_ch == 0) &&\n               (var_ch = (**0x8509eee0)(arg_8h, var_24h, 0xffffffff, &var_1ch, &var_2ch),  var_ch == 0)) {\n                var_30h._0_2_ = 0;\n                for (var_34h = 0; var_34h < var_28h; var_34h = var_34h + 1) {\n                    for (var_14h = 0; var_14h < var_2ch; var_14h = var_14h + 1) {\n                        var_80h = 0x10;\n                        var_84h = *(var_1ch + var_14h * 4);\n                        var_88h = var_20h + var_34h * 4;\n                        for (; 3 < var_80h; var_80h = var_80h - 4) {\n                            if (*var_88h != *var_84h) goto code_r0x0004701b;\n                            var_84h = var_84h + 1;\n                            var_88h = var_88h + 1;\n                        }\n                        if (var_80h == 0) {\ncode_r0x000470db:\n                            var_90h = 0;\n                        }\n                        else {\ncode_r0x0004701b:\n                            var_8ch = *var_88h - *var_84h;\n                            if (var_8ch == 0) {\n                                if (var_80h == 1) goto code_r0x000470db;\n                                var_8ch = *(var_88h + 1) - *(var_84h + 1);\n                                if (var_8ch == 0) {\n                                    if (var_80h == 2) goto code_r0x000470db;\n                                    var_8ch = *(var_88h + 2) - *(var_84h + 2);\n                                    if (var_8ch == 0) {\n                                        if ((var_80h == 3) || (var_8ch = *(var_88h + 3) - *(var_84h + 3),  var_8ch == 0)\n                                           ) goto code_r0x000470db;\n                                    }\n                                }\n                            }\n                            var_90h = 1;\n                            if (var_8ch < 1) {\n                                var_90h = -1;\n                            }\n                        }\n                        if (var_90h == 0) break;\n                    }\n                    if (var_2ch <= var_14h) break;\n                    if (var_30h < *(*(var_1ch + var_14h * 4) + 0x28)) {\n                        puVar2 = *(var_1ch + var_14h * 4);\n                        *0x85090fdc = *puVar2;\n                        *0x85090fe0 = puVar2[1];\n                        *0x85090fe4 = puVar2[2];\n                        *0x85090fe8 = puVar2[3];\n                        var_30h._0_2_ = *(*(var_1ch + var_14h * 4) + 0x28);\n                    }\n                }\n            }\n        }\n    }\ncode_r0x0004717f:\n    if (var_4h != NULL) {\n        (**0x8509eecc)(&var_4h);\n    }\n    if (var_1ch != 0) {\n        (**0x8509eecc)(&var_1ch);\n    }\n    if (var_10h != 0) {\n        (**0x8509eed4)(arg_8h, var_10h);\n    }\n    if (var_24h != 0) {\n        (**0x8509eee4)(arg_8h, var_24h);\n    }\n    if (var_20h != NULL) {\n        fcn.00036460(var_20h);\n    }\n    return 0x85090fdc;\n}\n",
        "token_count": 2462
    },
    "000471f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl\nfcn.000471f0(uint *arg_8h, uint *arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, int32_t *arg_28h, uint32_t *arg_2ch)\n\n{\n    uint *puVar1;\n    uint var_d4h;\n    int32_t var_d0h;\n    int32_t var_cch;\n    uint var_c8h;\n    uint var_c4h;\n    int32_t var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint *var_6ch;\n    uint var_68h;\n    uint *var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    var_b8h = 0;\n    fcn.0007f916(&var_b4h, 0, 0x94);\n    var_d0h = 0;\n    var_bch = 0;\n    var_20h = 0;\n    var_1ch = 0;\n    var_18h = 0;\n    var_14h = 0;\n    var_10h = 0;\n    var_ch = 0;\n    var_8h = 0;\n    var_1h._0_1_ = '\\0';\n    var_cch = 0;\n    if ((*arg_2ch | arg_2ch[1]) != 0) {\n        var_cch = (**0x85092a08)(*0x85092b54, *arg_2ch, arg_2ch[1], &var_d0h);\n    }\n    if ((var_cch == 0) && (var_d0h != 0)) {\n        (**0x8509eecc)(&var_d0h);\n        return 0;\n    }\n    *arg_2ch = 0;\n    arg_2ch[1] = 0;\n    if (*arg_28h != 0) {\n        var_cch = (**0x85092a14)(*0x85092b54, *arg_28h, &var_bch);\n        if ((var_cch != 0) || (var_bch == 0)) {\n            *arg_28h = 0;\n        }\n        if (var_bch != 0) {\n            (**0x8509eecc)(&var_bch);\n        }\n    }\n    if (*arg_28h == 0) {\n        var_cch = fcn.00046b40(arg_10h, arg_ch, arg_28h, arg_14h, arg_18h, arg_1ch);\n        if (var_cch != 0) goto code_r0x00047463;\n        var_1h._0_1_ = '\\x01';\n        var_cch = fcn.00046bb0(*0x85092b54, arg_ch, arg_8h, arg_20h, 0x850107f4);\n        if (var_cch != 0) goto code_r0x00047463;\n    }\n    var_a8h = arg_24h;\n    var_a4h = 0x850107f4;\n    var_90h = *arg_8h;\n    var_8ch = arg_8h[1];\n    var_88h = arg_8h[2];\n    var_84h = arg_8h[3];\n    puVar1 = fcn.00046c40(*0x85092b54, arg_8h);\n    var_80h = *puVar1;\n    var_7ch = puVar1[1];\n    var_78h = puVar1[2];\n    var_74h = puVar1[3];\n    var_c8h = 0xffffffff;\n    var_c4h = 0xffffffff;\n    var_70h = 4;\n    var_6ch = &var_c8h;\n    var_60h = 0x4005;\n    var_5ch = *arg_ch;\n    var_58h = arg_ch[1];\n    var_54h = arg_ch[2];\n    var_50h = arg_ch[3];\n    var_64h = &var_20h;\n    var_68h = 0;\n    var_cch = (**0x85092a04)(*0x85092b54, &var_b8h, 0, arg_2ch);\ncode_r0x00047463:\n    if (var_cch != 0) {\n        if (var_1h != '\\0') {\n            (**0x850929fc)(*arg_28h);\n        }\n        *arg_28h = 0;\n        *arg_2ch = 0;\n        arg_2ch[1] = 0;\n    }\n    return var_cch;\n}\n",
        "token_count": 1260
    },
    "000474e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000474e0(int32_t arg_8h)\n\n{\n    ushort uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    *(arg_8h + 0x1c) = arg_8h;\n    *(arg_8h + 0x20) = *(arg_8h + 0x7cc);\n    if ((((*(arg_8h + 0x7cc) == 1) || (*(arg_8h + 0x7cc) == 2)) || (*(arg_8h + 0x7cc) == 3)) || (*(arg_8h + 0x7cc) == 4)\n       ) {\n        *(arg_8h + 0x24) = *(arg_8h + 2000);\n    }\n    else {\n        *(arg_8h + 0x24) = 0;\n    }\n    if (((*(arg_8h + 0x7cc) == 6) || (*(arg_8h + 0x7cc) == 7)) || (*(arg_8h + 0x7cc) == 0xc)) {\n        if (*(*(arg_8h + 0x7fc) + 8) < 0x5dc) {\n            var_ch = *(*(arg_8h + 0x7fc) + 8);\n        }\n        else {\n            var_ch = 0x5dc;\n        }\n        *(arg_8h + 0x698) = var_ch;\n        fcn.0007f904(arg_8h + 0xbc, *(*(arg_8h + 0x7fc) + 0xc), *(arg_8h + 0x698));\n    }\n    puVar3 = arg_8h + 0x6a8;\n    puVar4 = arg_8h + 0x28;\n    for (iVar2 = 0x20; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    uVar1 = fcn.000365f0(*(arg_8h + 0x728));\n    *(arg_8h + 0xa8) = uVar1;\n    fcn.00050de0(arg_8h + 8);\n    return 0;\n}\n",
        "token_count": 572
    },
    "00047630": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00047630(int16_t *arg_8h, int32_t arg_ch, uint32_t **arg_10h, uint noname_3, uint32_t arg_18h, uint noname_5, \n            uint *arg_20h)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    ushort extraout_var;\n    uint32_t var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t **var_8h;\n    int32_t *var_4h;\n    \n    var_14h = 0;\n    var_8h = NULL;\n    var_10h = 0;\n    var_20h = 0;\n    arg_10h[4] = NULL;\n    *arg_20h = 0x2006;\n    if ((((arg_10h != NULL) && (puVar1 = *arg_10h,  puVar1 != NULL)) &&\n        ((*arg_8h != 0x14 || (*(*(arg_8h + 4) + 0x1c) != 0x8b)))) &&\n       ((((*arg_8h != 0x16 || (*(*(arg_8h + 4) + 0x1c) != 0x8b)) && (arg_18h != 0)) &&\n        (iVar2 = fcn.00049550(arg_18h),  iVar2 != 0)))) {\n        fcn.000382a0(arg_18h + 0x7e0, &var_ch, 1);\n        if ((*(arg_18h + 0x7c8) == 3) || (*(arg_18h + 0x7c8) == 1)) {\n            fcn.000382d0(arg_18h + 0x7e0, &var_ch, 1);\n        }\n        else if ((**arg_10h & 0x1f0000) == 0) {\n            if (*(arg_18h + 0x7c8) == 2) {\n                arg_10h[3] = NULL;\n                arg_10h[4] = NULL;\n                *arg_20h = 0x1001;\n                var_14h = fcn.00036360(puVar1[7]);\n                var_4h = fcn.00036360(0x10);\n                if ((var_14h == 0) || (var_4h == NULL)) {\n                    fcn.00036460(var_14h);\n                    fcn.00036460(var_4h);\n                    fcn.000382d0(arg_18h + 0x7e0, &var_ch, 1);\n                }\n                else {\n                    *var_4h = 0;\n                    var_4h[1] = 0;\n                    var_4h[2] = 0;\n                    var_4h[3] = 0;\n                    var_4h[3] = var_14h;\n                    var_4h[2] = puVar1[7];\n                    (**0x85092a1c)(puVar1, var_14h, puVar1[7], &var_1ch);\n                    if ((*arg_8h == 0x14) &&\n                       (iVar2 = fcn.0007ea00(var_14h, var_4h[2], 1, *(arg_18h + 0x734), \n                                             arg_18h & 0xffff0000 | *(arg_18h + 0x7b0), *(arg_18h + 0x6ac), \n                                             *(arg_18h + 0x728), &var_20h),  iVar2 != 0)) {\n                        var_10h = 0xc;\n                    }\n                    if (var_10h == 0) {\n                        var_10h = fcn.000503e0(var_14h, var_4h[2], 1);\n                    }\n                    if ((var_10h == 0) || (var_10h == 5)) {\n                        if (*(arg_18h + 0x7fc) == 0) {\n                            *(arg_18h + 0x7fc) = var_4h;\n                        }\n                        else {\n                            for (var_8h = *(arg_18h + 0x7fc); *var_8h != NULL; var_8h = *var_8h) {\n                            }\n                            *var_8h = var_4h;\n                        }\n                        fcn.000382d0(arg_18h + 0x7e0, &var_ch, 1);\n                        (**0x8500d0c8)(arg_18h + 0x7ec, 0, 0);\n                    }\n                    else {\n                        fcn.000382d0(arg_18h + 0x7e0, &var_ch, 1);\n                        fcn.00036460(var_4h);\n                        fcn.00036460(var_14h);\n                    }\n                }\n            }\n            else if (((*arg_8h == 0x14) && (*(*(arg_8h + 4) + 0x2c) == 0)) ||\n                    ((*arg_8h == 0x16 && (*(*(arg_8h + 4) + 0x2c) == 0)))) {\n                *(arg_18h + 0x7c8) = 1;\n                fcn.000382d0(arg_18h + 0x7e0, &var_ch, 1);\n            }\n            else {\n                var_14h = fcn.00036360(puVar1[7]);\n                if (var_14h == 0) {\n                    fcn.000382d0(arg_18h + 0x7e0, &var_ch, 1);\n                }\n                else {\n                    (**0x85092a1c)(puVar1, var_14h, puVar1[7], &var_1ch);\n                    if (puVar1[7] < 0x1000) {\n                        var_30h = puVar1[7];\n                    }\n                    else {\n                        var_30h = 0x1000;\n                    }\n                    var_18h = var_30h;\n                    if ((*arg_8h == 0x14) &&\n                       (iVar2 = fcn.0007ea00(var_14h, var_30h, *(arg_18h + 2000) == 0, *(arg_18h + 0x734), \n                                             arg_18h & 0xffff0000 | *(arg_18h + 0x7b0), *(arg_18h + 0x6ac), \n                                             *(arg_18h + 0x728), &var_20h),  iVar2 != 0)) {\n                        var_10h = 0xc;\n                    }\n                    if (var_10h == 0) {\n                        var_10h = fcn.000503e0(var_14h, var_18h, *(arg_18h + 2000) == 0);\n                        *(arg_18h + 2000) = *(arg_18h + 2000) + var_18h;\n                        if (var_10h == 0) {\n                            if (0x100 < *(arg_18h + 2000)) {\n                                *(arg_18h + 0x7c8) = 1;\n                            }\n                            fcn.000382d0(arg_18h + 0x7e0, &var_ch, 1);\n                            return;\n                        }\n                    }\n                    arg_10h[3] = NULL;\n                    arg_10h[4] = NULL;\n                    *arg_20h = 0x1001;\n                    *(arg_18h + 0x7c8) = 2;\n                    *(arg_18h + 0x7cc) = var_10h;\n                    *(arg_18h + 0x7d4) = *0x85092b58;\n                    if (*arg_8h == 0x16) {\n                        *(arg_18h + 0x7d4) = *0x85092b78;\n                    }\n                    *(arg_18h + 0x7d8) = *(arg_ch + 0x20);\n                    *(arg_18h + 0x7dc) = *(arg_ch + 0x24);\n                    if (((((*(arg_18h + 0x7cc) == 5) || (*(arg_18h + 0x7cc) == 6)) || (*(arg_18h + 0x7cc) == 7)) ||\n                        (((*(arg_18h + 0x7cc) == 1 || (*(arg_18h + 0x7cc) == 2)) ||\n                         ((*(arg_18h + 0x7cc) == 3 || ((*(arg_18h + 0x7cc) == 4 || (*(arg_18h + 0x7cc) == 0xb)))))))) ||\n                       (*(arg_18h + 0x7cc) == 0xc)) {\n                        var_4h = fcn.00036360(0x10);\n                        if (var_4h == NULL) {\n                            fcn.00036460(var_14h);\n                        }\n                        else {\n                            *var_4h = 0;\n                            var_4h[1] = 0;\n                            var_4h[2] = 0;\n                            var_4h[3] = 0;\n                            var_4h[3] = var_14h;\n                            var_4h[2] = puVar1[7];\n                            *(arg_18h + 0x7fc) = var_4h;\n                            *(arg_18h + 0xb8) = var_20h;\n                            (**0x8500d0c8)(arg_18h + 0x7ec, 0, 0);\n                            fcn.00048140(arg_18h + 0x730, CONCAT22(extraout_var, *(arg_18h + 0x7b0)), arg_18h + 0x6a8, \n                                         CONCAT22(extraout_var, *(arg_18h + 0x728)));\n                            *(arg_18h + 0x81c) = 0x850434e0;\n                            *(arg_18h + 0x820) = arg_18h;\n                            *(arg_18h + 0x814) = 0;\n                            (**0x8500d22c)(arg_18h + 0x814, 1);\n                        }\n                    }\n                    else {\n                        fcn.00036460(var_14h);\n                    }\n                    fcn.000382d0(arg_18h + 0x7e0, &var_ch, 1);\n                }\n            }\n        }\n        else {\n            fcn.000382d0(arg_18h + 0x7e0, &var_ch, 1);\n        }\n    }\n    return;\n}\n",
        "token_count": 2523
    },
    "00047cb0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00047cb0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_4h;\n    \n    iVar1 = fcn.0003b900(arg_8h);\n    if (iVar1 != 0) {\n        puVar2 = fcn.00036360(0x10);\n        if (puVar2 != NULL) {\n            *puVar2 = 0;\n            puVar2[1] = 0;\n            puVar2[2] = 0;\n            puVar2[3] = 0;\n            puVar2[2] = 0x850440f0;\n            puVar2[3] = puVar2;\n            *puVar2 = 0;\n            (**0x8500d22c)(puVar2, 1);\n        }\n    }\n    return;\n}\n",
        "token_count": 196
    },
    "00047d20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00047d20(int32_t *arg_8h, uchar *arg_ch, uint32_t arg_10h)\n\n{\n    int16_t *var_8h;\n    uint32_t var_4h;\n    \n    *arg_ch = 0;\n    var_8h = arg_8h[1] + *arg_8h;\n    var_4h = 0;\n    do {\n        if (var_8h < arg_8h[1] || var_8h == arg_8h[1]) {\n            return;\n        }\n        var_8h = var_8h + -1;\n    } while ((*var_8h == 0) || (((var_4h = var_4h + 1,  *var_8h != 0x5c && (*var_8h != 0x2f)) && (var_8h != arg_8h[1])))\n            );\n    if (arg_10h <= var_4h) {\n        var_4h = arg_10h - 1;\n    }\n    arg_ch[var_4h] = 0;\n    for (; var_4h != 0; var_4h = var_4h - 1) {\n        arg_ch[var_4h - 1] = *(var_8h + var_4h);\n    }\n    return;\n}\n",
        "token_count": 306
    },
    "00047de0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00047de0(int16_t *arg_8h, int32_t arg_ch, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint *arg_20h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    ushort extraout_var;\n    uint var_8h;\n    uint var_4h;\n    \n    *arg_20h = 0x2006;\n    if (((*arg_8h == 0x34) && (*(*(arg_8h + 4) + 0x2c) == 6)) &&\n       (arg_8h_00 = fcn.00049370(*(*(arg_8h + 4) + 0x34), *(*(arg_8h + 4) + 0x14) & 0xffff0000 | *(*(arg_8h + 4) + 0x3c)\n                                 , *(*(arg_8h + 4) + 0x14), *(arg_ch + 0x20) & 0xffff0000 | *(*(arg_8h + 4) + 0x24), \n                                 *(arg_ch + 0x20), *(arg_ch + 0x24), *(*(arg_8h + 4) + 100)),  arg_8h_00 != 0)) {\n        fcn.00047d20(*(arg_ch + 0x30), arg_8h_00 + 0x7b4, 0x11);\n        iVar1 = fcn.0005aec0();\n        if (iVar1 != 0) {\n            if (*(arg_8h_00 + 0x7b2) == 1) {\n                fcn.0005ac20(1, 7, arg_8h_00 + 0x6a8, *(arg_8h_00 + 0x728), arg_8h_00 + 0x730, *(arg_8h_00 + 0x7b0), \n                             arg_8h_00 + 0x7b4);\n            }\n            else {\n                fcn.0005ac20(0, 7, arg_8h_00 + 0x730, CONCAT22(extraout_var, *(arg_8h_00 + 0x7b0)), arg_8h_00 + 0x6a8, \n                             CONCAT22(extraout_var, *(arg_8h_00 + 0x728)), arg_8h_00 + 0x7b4);\n            }\n        }\n        iVar1 = (**0x85092a18)(*(arg_ch + 0x20), *(arg_ch + 0x24), 0x14, *0x85092b58, arg_8h_00, arg_8h_00 >> 0x1f);\n        if (iVar1 != 0) {\n            fcn.000495b0(arg_8h_00, 1);\n        }\n        fcn.00047cb0(arg_8h_00 + 0x7b4);\n    }\n    return;\n}\n",
        "token_count": 704
    },
    "00047f60": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00047f60(int16_t *arg_8h, int32_t arg_ch, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint *arg_20h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    *arg_20h = 0x2006;\n    if (((*arg_8h == 0x36) && (*(*(arg_8h + 4) + 0x2c) == 6)) &&\n       (arg_8h_00 = fcn.00049260(*(*(arg_8h + 4) + 0x34), *(*(arg_8h + 4) + 0x14) & 0xffff0000 | *(*(arg_8h + 4) + 0x3c)\n                                 , *(*(arg_8h + 4) + 0x14), *(arg_ch + 0x20) & 0xffff0000 | *(*(arg_8h + 4) + 0x24), \n                                 *(arg_ch + 0x20), *(arg_ch + 0x24), *(*(arg_8h + 4) + 100)),  arg_8h_00 != 0)) {\n        fcn.00047d20(*(arg_ch + 0x30), arg_8h_00 + 0x7b4, 0x11);\n        iVar1 = fcn.0005aec0();\n        if (iVar1 != 0) {\n            if (*(*(arg_8h + 4) + 100) == 1) {\n                fcn.0005ac20(1, 7, arg_8h_00 + 0x6a8, *(arg_8h_00 + 0x728), arg_8h_00 + 0x730, *(arg_8h_00 + 0x7b0), \n                             arg_8h_00 + 0x7b4);\n            }\n            else {\n                fcn.0005ac20(0, 7, arg_8h_00 + 0x6a8, arg_8h & 0xffff0000 | *(arg_8h_00 + 0x728), arg_8h_00 + 0x730, \n                             arg_8h & 0xffff0000 | *(arg_8h_00 + 0x7b0), arg_8h_00 + 0x7b4);\n            }\n        }\n        iVar1 = (**0x85092a18)(*(arg_ch + 0x20), *(arg_ch + 0x24), 0x16, *0x85092b78, arg_8h_00, arg_8h_00 >> 0x1f);\n        if (iVar1 != 0) {\n            fcn.000495b0(arg_8h_00, 1);\n        }\n        fcn.00047cb0(arg_8h_00 + 0x7b4);\n    }\n    return;\n}\n",
        "token_count": 707
    },
    "00048110": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00048110(uint noname_0, uint noname_1, int32_t arg_10h)\n\n{\n    uint var_4h;\n    \n    if (arg_10h != 0) {\n        fcn.000495b0(arg_10h, 0);\n    }\n    return 0;\n}\n",
        "token_count": 75
    },
    "00048140": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00048140(uint *arg_8h, uint32_t arg_ch, uint *arg_10h, uint32_t arg_14h)\n\n{\n    ushort uVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint16_t extraout_var;\n    uint *puVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((*0x85092bb4 != 0) && (puVar2 = fcn.00036360(0x110),  puVar2 != NULL)) {\n        puVar4 = puVar2 + 2;\n        for (iVar3 = 0x20; iVar3 != 0; iVar3 = iVar3 + -1) {\n            *puVar4 = *arg_8h;\n            arg_8h = arg_8h + 1;\n            puVar4 = puVar4 + 1;\n        }\n        puVar4 = puVar2 + 0x22;\n        for (iVar3 = 0x20; iVar3 != 0; iVar3 = iVar3 + -1) {\n            *puVar4 = *arg_10h;\n            arg_10h = arg_10h + 1;\n            puVar4 = puVar4 + 1;\n        }\n        uVar1 = fcn.000365f0(puVar2 & 0xffff0000 | arg_ch & 0xffff);\n        *(puVar2 + 0x42) = uVar1;\n        uVar1 = fcn.000365f0(arg_14h & 0xffff | extraout_var << 0x10);\n        *(puVar2 + 0x10a) = uVar1;\n        fcn.000382a0(0x85092bb8, &var_4h, 1);\n        *puVar2 = *0x85092bc4;\n        *0x85092bc4 = puVar2;\n        fcn.000382d0(0x85092bb8, &var_4h, 1);\n    }\n    return;\n}\n",
        "token_count": 463
    },
    "00048200": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00048200(int32_t *arg_8h, uint arg_ch, int32_t *arg_10h, uint arg_14h)\n\n{\n    uint var_3ch;\n    int32_t var_38h;\n    int32_t var_34h;\n    int32_t *var_30h;\n    int32_t *var_2ch;\n    uint32_t var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t *var_18h;\n    int32_t *var_14h;\n    uint32_t var_10h;\n    uint *var_ch;\n    uint *var_8h;\n    uint var_4h;\n    \n    if (*0x85092bb4 != 0) {\n        fcn.000382a0(0x85092bb8, &var_4h, 1);\n        var_8h = NULL;\n        for (var_ch = *0x85092bc4; var_ch != NULL; var_ch = *var_ch) {\n            var_14h = arg_8h;\n            var_18h = var_ch + 2;\n            for (var_10h = 0x80; 3 < var_10h; var_10h = var_10h - 4) {\n                if (*var_18h != *var_14h) goto code_r0x00048288;\n                var_14h = var_14h + 1;\n                var_18h = var_18h + 1;\n            }\n            if (var_10h == 0) {\ncode_r0x0004830a:\n                var_20h = 0;\n            }\n            else {\ncode_r0x00048288:\n                var_1ch = *var_18h - *var_14h;\n                if (var_1ch == 0) {\n                    if (var_10h == 1) goto code_r0x0004830a;\n                    var_1ch = *(var_18h + 1) - *(var_14h + 1);\n                    if (var_1ch == 0) {\n                        if (var_10h == 2) goto code_r0x0004830a;\n                        var_1ch = *(var_18h + 2) - *(var_14h + 2);\n                        if (var_1ch == 0) {\n                            if ((var_10h == 3) || (var_1ch = *(var_18h + 3) - *(var_14h + 3),  var_1ch == 0))\n                            goto code_r0x0004830a;\n                        }\n                    }\n                }\n                var_20h = 1;\n                if (var_1ch < 1) {\n                    var_20h = -1;\n                }\n            }\n            if ((var_20h == 0) && (*(var_ch + 0x42) == arg_ch)) {\n                var_2ch = arg_10h;\n                var_30h = var_ch + 0x22;\n                for (var_28h = 0x80; 3 < var_28h; var_28h = var_28h - 4) {\n                    if (*var_30h != *var_2ch) goto code_r0x0004838f;\n                    var_2ch = var_2ch + 1;\n                    var_30h = var_30h + 1;\n                }\n                if (var_28h == 0) {\ncode_r0x00048411:\n                    var_38h = 0;\n                }\n                else {\ncode_r0x0004838f:\n                    var_34h = *var_30h - *var_2ch;\n                    if (var_34h == 0) {\n                        if (var_28h == 1) goto code_r0x00048411;\n                        var_34h = *(var_30h + 1) - *(var_2ch + 1);\n                        if (var_34h == 0) {\n                            if (var_28h == 2) goto code_r0x00048411;\n                            var_34h = *(var_30h + 2) - *(var_2ch + 2);\n                            if (var_34h == 0) {\n                                if ((var_28h == 3) || (var_34h = *(var_30h + 3) - *(var_2ch + 3),  var_34h == 0))\n                                goto code_r0x00048411;\n                            }\n                        }\n                    }\n                    var_38h = 1;\n                    if (var_34h < 1) {\n                        var_38h = -1;\n                    }\n                }\n                if ((var_38h == 0) && (*(var_ch + 0x10a) == arg_14h)) {\n                    if (var_8h == NULL) {\n                        *0x85092bc4 = *var_ch;\n                    }\n                    else {\n                        *var_8h = *var_ch;\n                    }\n                }\n            }\n            var_8h = var_ch;\n        }\n        fcn.000382d0(0x85092bb8, &var_4h, 1);\n        fcn.00036460(0);\n    }\n    return;\n}\n",
        "token_count": 1190
    },
    "000484c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.000484c0(void)\n\n{\n    uint *arg_8h;\n    uint var_8h;\n    uint var_4h;\n    \n    *0x85092bb4 = 0;\n    fcn.000382a0(0x85092bb8, &var_4h, 1);\n    while (arg_8h = *0x85092bc4,  *0x85092bc4 != NULL) {\n        *0x85092bc4 = **0x85092bc4;\n        fcn.00036460(arg_8h);\n    }\n    fcn.000382d0(0x85092bb8, &var_4h, 1);\n    return;\n}\n",
        "token_count": 160
    },
    "00048530": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00048530(int32_t arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    uint *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    fcn.000382a0(0x85092bb8, &var_8h, 0);\n    var_ch = *0x85092bc4;\n    do {\n        if (var_ch == NULL) {\ncode_r0x000485bc:\n            fcn.000382d0(0x85092bb8, &var_8h, 0);\n            return var_4h;\n        }\n        if ((((*(var_ch + 2) == 2) && (var_ch[3] == arg_8h)) && (var_ch[0x23] == arg_10h)) &&\n           ((*(var_ch + 0x42) == arg_ch && (*(var_ch + 0x10a) == arg_14h)))) {\n            var_4h = 1;\n            goto code_r0x000485bc;\n        }\n        var_ch = *var_ch;\n    } while( true );\n}\n",
        "token_count": 269
    },
    "000485e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000485e0(int32_t arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    uint var_3ch;\n    int32_t var_38h;\n    int32_t var_34h;\n    int32_t *var_30h;\n    int32_t *var_2ch;\n    uint32_t var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t *var_18h;\n    int32_t *var_14h;\n    uint32_t var_10h;\n    uint *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    fcn.000382a0(0x85092bb8, &var_8h, 0);\n    var_ch = *0x85092bc4;\n    do {\n        if (var_ch == NULL) {\ncode_r0x0004883f:\n            fcn.000382d0(0x85092bb8, &var_8h, 0);\n            return var_4h;\n        }\n        if (((*(var_ch + 2) == 0x17) && (*(var_ch + 0x42) == arg_ch)) && (*(var_ch + 0x10a) == arg_14h)) {\n            var_14h = arg_10h + 8;\n            var_18h = var_ch + 0x24;\n            for (var_10h = 0x10; 3 < var_10h; var_10h = var_10h - 4) {\n                if (*var_18h != *var_14h) goto code_r0x00048694;\n                var_14h = var_14h + 1;\n                var_18h = var_18h + 1;\n            }\n            if (var_10h == 0) {\ncode_r0x00048716:\n                var_20h = 0;\n            }\n            else {\ncode_r0x00048694:\n                var_1ch = *var_18h - *var_14h;\n                if (var_1ch == 0) {\n                    if (var_10h == 1) goto code_r0x00048716;\n                    var_1ch = *(var_18h + 1) - *(var_14h + 1);\n                    if (var_1ch == 0) {\n                        if (var_10h == 2) goto code_r0x00048716;\n                        var_1ch = *(var_18h + 2) - *(var_14h + 2);\n                        if (var_1ch == 0) {\n                            if ((var_10h == 3) || (var_1ch = *(var_18h + 3) - *(var_14h + 3),  var_1ch == 0))\n                            goto code_r0x00048716;\n                        }\n                    }\n                }\n                var_20h = 1;\n                if (var_1ch < 1) {\n                    var_20h = -1;\n                }\n            }\n            if (var_20h == 0) {\n                var_2ch = arg_8h + 8;\n                var_30h = var_ch + 4;\n                for (var_28h = 0x10; 3 < var_28h; var_28h = var_28h - 4) {\n                    if (*var_30h != *var_2ch) goto code_r0x00048786;\n                    var_2ch = var_2ch + 1;\n                    var_30h = var_30h + 1;\n                }\n                if (var_28h == 0) {\ncode_r0x00048808:\n                    var_38h = 0;\n                }\n                else {\ncode_r0x00048786:\n                    var_34h = *var_30h - *var_2ch;\n                    if (var_34h == 0) {\n                        if (var_28h == 1) goto code_r0x00048808;\n                        var_34h = *(var_30h + 1) - *(var_2ch + 1);\n                        if (var_34h == 0) {\n                            if (var_28h == 2) goto code_r0x00048808;\n                            var_34h = *(var_30h + 2) - *(var_2ch + 2);\n                            if (var_34h == 0) {\n                                if ((var_28h == 3) || (var_34h = *(var_30h + 3) - *(var_2ch + 3),  var_34h == 0))\n                                goto code_r0x00048808;\n                            }\n                        }\n                    }\n                    var_38h = 1;\n                    if (var_34h < 1) {\n                        var_38h = -1;\n                    }\n                }\n                if (var_38h == 0) {\n                    var_4h = 1;\n                    goto code_r0x0004883f;\n                }\n            }\n        }\n        var_ch = *var_ch;\n    } while( true );\n}\n",
        "token_count": 1175
    },
    "00048860": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00048860(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.00048df0(arg_ch, arg_10h, *(arg_8h + 0x7d8), *(arg_8h + 0x7dc), *(arg_8h + 0x7d4), \n                         *(arg_8h + 0x6a8) == 0x17);\n    if (iVar1 == 0) {\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 149
    },
    "00048910": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_38h\n\nuint __cdecl fcn.00048910(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h, uint32_t *arg_14h, int32_t arg_18h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t arg_8h_00;\n    ulong uVar4;\n    uint32_t var_40h;\n    uint var_3ch;\n    uint *var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint *var_10h;\n    uint32_t var_ch;\n    uint *var_8h;\n    uint var_4h;\n    \n    *arg_14h = 0;\n    if (*(arg_8h + 0x810) != 0) {\n        return 0xc0000001;\n    }\n    while( true ) {\n        var_24h = arg_8h + 0x7ec;\n        var_20h = arg_8h + 0x800;\n        uVar4 = fcn.0007f8fe(arg_18h, arg_18h >> 0x1f, 0xffffd8f0, 0xffffffff);\n        _var_18h = uVar4;\n        iVar2 = (**0x8500d230)(2, &var_24h, 1, 0, 0, 0, &var_18h, 0);\n        if (iVar2 == 1) {\n            return 1;\n        }\n        if (iVar2 == 0x102) {\n            return 0x102;\n        }\n        fcn.000382a0(arg_8h + 0x7e0, &var_4h, 1);\n        if (*(arg_8h + 0x7fc) != 0) break;\n        fcn.000382d0(arg_8h + 0x7e0, &var_4h, 1);\n    }\n    var_8h = *(arg_8h + 0x7fc);\n    var_10h = *(arg_8h + 0x7fc);\n    var_1ch = 0;\n    do {\n        if (var_10h == NULL) {\n            *(arg_8h + 0x7fc) = 0;\ncode_r0x00048b03:\n            if (*(arg_8h + 0x7fc) != 0) {\n                (**0x8500d0c8)(arg_8h + 0x7ec, 0, 0);\n            }\n            fcn.000382d0(arg_8h + 0x7e0, &var_4h, 1);\n            if (var_8h != NULL) {\n                if (arg_10h < var_1ch) {\n                    var_40h = arg_10h;\n                }\n                else {\n                    var_40h = var_1ch;\n                }\n                *arg_14h = var_40h;\n                var_10h = var_8h;\n                for (var_ch = 0; (var_10h != NULL && (var_ch < *arg_14h)); var_ch = var_ch + *piVar1) {\n                    fcn.0007f904(arg_ch + var_ch, var_10h[3], var_10h[2]);\n                    piVar1 = var_10h + 2;\n                    var_10h = *var_10h;\n                }\n                var_38h = var_8h;\n                while (var_38h != NULL) {\n                    puVar3 = *var_38h;\n                    fcn.00036460(var_38h[3]);\n                    fcn.00036460(var_38h);\n                    var_38h = puVar3;\n                }\n                fcn.00048c60(*(arg_8h + 0x7d8), *(arg_8h + 0x7dc), *(arg_8h + 0x7d4), *(arg_8h + 0x6a8) == 0x17);\n                fcn.00048d50(*(arg_8h + 0x7d8), *(arg_8h + 0x7dc), *(arg_8h + 0x7d4), *(arg_8h + 0x6a8) == 0x17);\n            }\n            return 0;\n        }\n        var_1ch = var_1ch + var_10h[2];\n        if (arg_10h <= var_1ch) {\n            if (var_1ch == arg_10h) {\n                *(arg_8h + 0x7fc) = *var_10h;\n                *var_10h = 0;\n            }\n            else {\n                arg_8h_00 = var_1ch - arg_10h;\n                puVar3 = fcn.00036360(0x10);\n                iVar2 = fcn.00036360(arg_8h_00);\n                if ((puVar3 != NULL) && (iVar2 != 0)) {\n                    *puVar3 = 0;\n                    puVar3[1] = 0;\n                    puVar3[2] = 0;\n                    puVar3[3] = 0;\n                    fcn.0007f904(iVar2, (var_10h[3] + var_10h[2]) - arg_8h_00, arg_8h_00);\n                    puVar3[3] = iVar2;\n                    puVar3[2] = arg_8h_00;\n                    *(arg_8h + 0x7fc) = puVar3;\n                    *puVar3 = *var_10h;\n                    var_10h[2] = var_10h[2] - arg_8h_00;\n                    *var_10h = 0;\n                }\n            }\n            goto code_r0x00048b03;\n        }\n        var_10h = *var_10h;\n    } while( true );\n}\n",
        "token_count": 1504
    },
    "00048c60": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00048c60(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    var_4h = (**0x85092a28)(*0x85092ba0, 0, 0, 0, 0, 0, &var_8h);\n    if (var_4h == 0) {\n        var_4h = (**0x85092a20)(*0x85092b9c, 0, 0, arg_8h, arg_ch, arg_10h, (arg_14h != 0) * '\\x02' + '\\x14', 0x10000, \n                                var_8h, 0, 0x85044fe0, 0);\n        var_8h = 0;\n    }\n    if (var_8h != 0) {\n        (**0x85092a24)(var_8h);\n    }\n    return var_4h;\n}\n",
        "token_count": 254
    },
    "00048d00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00048d00(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    uint uVar1;\n    uint var_4h;\n    \n    uVar1 = (**0x85092a20)(*0x85092b9c, 0, 0, arg_8h, arg_ch, arg_10h, (arg_14h != 0) * '\\x02' + '\\x14', 0x90000, 0, 0, \n                           0x85044fe0, 0);\n    return uVar1;\n}\n",
        "token_count": 141
    },
    "00048d50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00048d50(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    var_4h = (**0x85092a28)(*0x85092ba0, 0, 0, 0, 0, 0, &var_8h);\n    if ((var_4h == 0) &&\n       (var_4h = (**0x85092a20)(*0x85092b9c, 0, 0, arg_8h, arg_ch, arg_10h, (arg_14h != 0) * '\\x02' + '\\x14', 3, var_8h\n                                , 0, 0x85044fe0, 0),  var_4h == 0)) {\n        var_8h = 0;\n    }\n    if (var_8h != 0) {\n        (**0x85092a24)(var_8h);\n    }\n    return var_4h;\n}\n",
        "token_count": 262
    },
    "00048df0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00048df0(uint param_1, uint param_2, uint param_3, uint param_4, uint param_5, int32_t param_6)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint var_8h;\n    uint var_ch;\n    uint var_10h;\n    uint var_14h;\n    uint var_18h_2;\n    int32_t var_1ch_2;\n    uint var_18h;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uchar *puStack28;\n    uint var_10h_2;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x8507b9e8;\n    uStack16 = 0x8507b910;\n    var_10h_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_10h_2;\n    puStack28 = &stack0xffffffb8;\n    var_2ch = 0;\n    var_1ch = 0;\n    var_20h = 0;\n    var_28h = (**0x8500d290)(var_8h, var_ch, 0, 0, 0);\n    if (var_28h == 0) {\n        var_24h = -0x3fffff66;\n    }\n    else {\n        var_1ch = fcn.00036360(0x10);\n        if (var_1ch == 0) {\n            var_24h = -0x3fffff66;\n        }\n        else {\n            var_4h = 0;\n            (**0x8500d29c)(var_28h, 0, 0);\n            var_4h = 0xffffffff;\n            var_20h = 1;\n            var_24h = (**0x85092a28)(*0x85092ba0, 0, 0, var_28h, 0, var_ch, &var_2ch);\n            if (var_24h == 0) {\n                (**0x8500d0d4)(var_1ch, 1, 0);\n                var_24h = (**0x85092a20)(*0x85092b9c, 0, 0, var_10h, var_14h, var_18h_2, \n                                         (var_1ch_2 != 0) * '\\x02' + '\\x14', 0x50000, var_2ch, var_ch, 0x85044fe0, \n                                         var_1ch);\n                if (var_24h == 0) {\n                    var_38h = 0x88ca6c00;\n                    var_34h = 0xffffffff;\n                    iVar1 = (**0x8500d19c)(var_1ch, 0, 0, 0, &var_38h);\n                    if (iVar1 == 0x102) {\n                        var_24h = -0x3fffffff;\n                    }\n                    else {\n                        var_28h = 0;\n                        var_2ch = 0;\n                    }\n                }\n            }\n        }\n        if (var_28h != 0) {\n            if (var_20h != 0) {\n                (**0x8500d298)(var_28h);\n            }\n            (**0x8500d2a8)(var_28h);\n        }\n        if ((var_2ch != 0) && (var_24h != 0)) {\n            (**0x85092a24)(var_2ch);\n        }\n        if (var_1ch != 0) {\n            fcn.00036460(var_1ch);\n        }\n    }\n    *in_FS_OFFSET = var_10h_2;\n    return var_24h;\n}\n",
        "token_count": 914
    },
    "00048fe0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00048fe0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = *(*(arg_ch + 4) + 0x10);\n    if (iVar1 != 0) {\n        (**0x8500d298)(iVar1);\n        (**0x8500d2a8)(iVar1);\n    }\n    (**0x85092a24)(arg_ch);\n    if (arg_8h != 0) {\n        (**0x8500d0c8)(arg_8h, 0, 0);\n    }\n    return;\n}\n",
        "token_count": 156
    },
    "00049040": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00049040(void)\n\n{\n    if (*0x85092bd8 == 0) {\n        *0x85092bd4 = 0;\n        fcn.000380a0(0x85092bc8);\n        *0x85092bd8 = 1;\n    }\n    return;\n}\n",
        "token_count": 71
    },
    "00049070": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00049070(void)\n\n{\n    uint *puVar1;\n    uint var_14h;\n    uint *var_10h;\n    uint *var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    if (*0x85092bd8 == 0) {\n        return;\n    }\n    *0x85092bd8 = 0;\n    fcn.000382a0(0x85092bc8, &var_8h, 0);\n    for (var_4h = *0x85092bd4; var_4h != NULL; var_4h = *var_4h) {\n        var_4h[0x204] = 1;\n        (**0x8500d0c8)(var_4h + 0x200, 0, 0);\n    }\n    fcn.000382d0(0x85092bc8, &var_8h, 0);\n    do {\n        fcn.000382a0(0x85092bc8, &var_8h, 1);\n        var_10h = NULL;\n        for (var_4h = *0x85092bd4; var_4h != NULL; var_4h = *var_4h) {\n            if (var_4h[499] == 0) {\n                if (var_10h == NULL) {\n                    *0x85092bd4 = *var_4h;\n                }\n                else {\n                    *var_10h = *var_4h;\n                }\n                break;\n            }\n            var_10h = var_4h;\n        }\n        fcn.000382d0(0x85092bc8, &var_8h, 1);\n        if (var_4h == NULL) {\n            while (fcn.000382a0(0x85092bc8, &var_8h, 0),  *0x85092bd4 != NULL) {\n                fcn.000382d0(0x85092bc8, &var_8h, 0);\n                fcn.0005bdd0(100);\n            }\n            fcn.000382d0(0x85092bc8, &var_8h, 0);\n            fcn.00038300(0x85092bc8);\n            return;\n        }\n        fcn.000382a0(var_4h + 0x1f8, &var_8h, 1);\n        var_ch = var_4h[0x1ff];\n        while (var_ch != NULL) {\n            puVar1 = *var_ch;\n            fcn.00036460(var_ch[3]);\n            fcn.00036460(var_ch);\n            var_ch = puVar1;\n        }\n        fcn.000382d0(var_4h + 0x1f8, &var_8h, 1);\n        fcn.00038300(var_4h + 0x1f8);\n        fcn.00036460(var_4h);\n    } while( true );\n}\n",
        "token_count": 681
    },
    "00049410": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint * __cdecl\nfcn.00049410(uint *arg_8h, uint arg_ch, uint *arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_8h;\n    uint *var_4h;\n    \n    var_4h = NULL;\n    if (*0x85092bd8 == 0) {\n        var_4h = NULL;\n    }\n    else {\n        var_4h = fcn.00036360(0x828);\n        if (var_4h == NULL) {\n            var_4h = NULL;\n        }\n        else {\n            fcn.0007f916(var_4h, 0, 0x828);\n            puVar2 = var_4h + 0x1aa;\n            for (iVar1 = 0x20; iVar1 != 0; iVar1 = iVar1 + -1) {\n                *puVar2 = *arg_8h;\n                arg_8h = arg_8h + 1;\n                puVar2 = puVar2 + 1;\n            }\n            *(var_4h + 0x1ca) = arg_ch;\n            puVar2 = var_4h + 0x1cc;\n            for (iVar1 = 0x20; iVar1 != 0; iVar1 = iVar1 + -1) {\n                *puVar2 = *arg_10h;\n                arg_10h = arg_10h + 1;\n                puVar2 = puVar2 + 1;\n            }\n            *(var_4h + 0x1ec) = arg_14h;\n            var_4h[0x1f2] = 0;\n            *(var_4h + 0x7b2) = arg_20h;\n            var_4h[0x1f6] = arg_18h;\n            var_4h[0x1f7] = arg_1ch;\n            fcn.000380a0(var_4h + 0x1f8);\n            (**0x8500d0d4)(var_4h + 0x1fb, 1, 0);\n            (**0x8500d0d4)(var_4h + 0x200, 1, 0);\n            fcn.000382a0(0x85092bc8, &var_8h, 1);\n            *var_4h = *0x85092bd4;\n            *0x85092bd4 = var_4h;\n            fcn.000382d0(0x85092bc8, &var_8h, 1);\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 621
    },
    "00049550": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00049550(uint *arg_8h)\n\n{\n    uint var_8h;\n    uint *var_4h;\n    \n    fcn.000382a0(0x85092bc8, &var_8h, 0);\n    for (var_4h = *0x85092bd4; (var_4h != NULL && (arg_8h != var_4h)); var_4h = *var_4h) {\n    }\n    fcn.000382d0(0x85092bc8, &var_8h, 0);\n    return var_4h != NULL;\n}\n",
        "token_count": 143
    },
    "000495b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000495b0(uint *arg_8h, int32_t arg_ch)\n\n{\n    uint *puVar1;\n    ushort extraout_var;\n    ushort extraout_var_00;\n    ushort extraout_var_01;\n    ushort uVar2;\n    uint var_14h;\n    uint *var_10h;\n    uint *var_ch;\n    uint *var_8h;\n    uint var_4h;\n    \n    if ((*0x85092bd8 != 0) || (*0x85092bd4 != NULL)) {\n        fcn.000382a0(0x85092bc8, &var_4h, 1);\n        var_10h = NULL;\n        for (var_ch = *0x85092bd4; (var_ch != NULL && (arg_8h != var_ch)); var_ch = *var_ch) {\n            var_10h = var_ch;\n        }\n        if (var_ch == NULL) {\n            fcn.000382d0(0x85092bc8, &var_4h, 1);\n        }\n        else if (((arg_ch == 0) && (arg_8h[499] != 0)) && (arg_8h[0x1f2] == 2)) {\n            fcn.000382d0(0x85092bc8, &var_4h, 1);\n        }\n        else {\n            if (var_10h == NULL) {\n                *0x85092bd4 = *arg_8h;\n            }\n            else {\n                *var_10h = *arg_8h;\n            }\n            fcn.000382d0(0x85092bc8, &var_4h, 1);\n            fcn.000382a0(arg_8h + 0x1f8, &var_4h, 1);\n            var_8h = arg_8h[0x1ff];\n            while (var_8h != NULL) {\n                puVar1 = *var_8h;\n                fcn.00036460(var_8h[3]);\n                fcn.00036460(var_8h);\n                var_8h = puVar1;\n            }\n            fcn.000382d0(arg_8h + 0x1f8, &var_4h, 1);\n            fcn.00038300(arg_8h + 0x1f8);\n            if (*(arg_8h + 0x7b2) == 1) {\n                fcn.0005ac20(1, 6, arg_8h + 0x1aa, *(arg_8h + 0x1ca), arg_8h + 0x1cc, *(arg_8h + 0x1ec), arg_8h + 0x1ed)\n                ;\n                uVar2 = extraout_var_00;\n            }\n            else {\n                fcn.0005ac20(0, 6, arg_8h + 0x1cc, CONCAT22(extraout_var, *(arg_8h + 0x1ec)), arg_8h + 0x1aa, \n                             CONCAT22(extraout_var, *(arg_8h + 0x1ca)), arg_8h + 0x1ed);\n                uVar2 = extraout_var_01;\n            }\n            fcn.00048200(arg_8h + 0x1cc, CONCAT22(uVar2, *(arg_8h + 0x1ec)), arg_8h + 0x1aa, \n                         CONCAT22(uVar2, *(arg_8h + 0x1ca)));\n            fcn.00036460(arg_8h);\n        }\n    }\n    return;\n}\n",
        "token_count": 828
    },
    "000497d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.000497d0(void)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.00016440(0x8501128c, 0x85092bdc);\n    if (iVar1 == 0) {\n        iVar1 = fcn.00016250(*0x85092bdc, 0x85045860, 0);\n        if (iVar1 == 0) {\n            iVar1 = 0;\n        }\n        else {\n            (**0x8500d2e4)();\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 136
    },
    "00049830": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00049830(void)\n\n{\n    if (*0x85092bdc != 0) {\n        fcn.00016300(*0x85092bdc);\n        (**0x8500d2e4)();\n    }\n    return;\n}\n",
        "token_count": 57
    },
    "000498f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_90h\n// WARNING: Variable defined which should be unmapped: var_8ch\n\nuint fcn.000498f0(uint param_1, int32_t param_2, int32_t param_3)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint *puVar5;\n    uint *in_FS_OFFSET;\n    uint var_18h;\n    uint var_8h;\n    int32_t var_ch;\n    int32_t var_10h_2;\n    int32_t iVar6;\n    int32_t var_90h;\n    uint var_8ch;\n    int32_t var_78h;\n    int32_t var_68h;\n    int32_t var_60h;\n    uint var_58h;\n    uint var_54h;\n    int32_t var_50h;\n    uint *var_4ch;\n    uint var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    uint var_3ch;\n    int32_t var_38h;\n    uint var_34h;\n    int32_t var_1ch;\n    uchar *puStack28;\n    uint var_10h;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x8507bad8;\n    uStack16 = 0x8507b910;\n    var_10h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_10h;\n    puStack28 = &stack0xffffff5c;\n    var_50h = *(var_ch + 0x60);\n    var_4ch = NULL;\n    var_90h = 0;\n    fcn.0007f916(&var_8ch, 0, 0x38);\n    var_38h = 0;\n    var_44h = 0;\n    var_40h = 0;\n    var_1ch = 0;\n    var_54h = 0;\n    var_48h = 0;\n    var_3ch = 0;\n    if ((var_ch == 0) || (*(var_ch + 0x22) < *(var_ch + 0x23))) {\n        uVar1 = 0xc0000005;\n        goto code_r0x00049c21;\n    }\n    if ((*(var_ch + 0x18) == 0) && (*(var_ch + 0x1c) == 0x3c)) {\n        iVar2 = (**0x8500d1c8)();\n        if (var_10h_2 != iVar2) {\n            (**0x8500d1cc)(var_10h_2, &var_34h);\n            var_40h = 1;\n        }\n        iVar2 = (**0x8500d290)(*(var_ch + 0x3c), *(var_50h + 4), 0, 0, 0);\n        var_38h = iVar2;\n        if (iVar2 == 0) {\n            var_1ch = -0x3fffff66;\n        }\n        else {\n            var_4h = 0;\n            iVar6 = 0;\n            (**0x8500d29c)(iVar2, 0, 2);\n            var_44h = 1;\n            var_4ch = (**0x8500d0e8)(var_38h, 0, 1, 0, 0, 0x10);\n            if (var_4ch == NULL) {\n                var_1ch = -0x3fffff66;\n                var_4h = 0xffffffff;\n            }\n            else if ((var_4ch[9] == 0) && (var_4ch[7] == 0x38)) {\n                puVar4 = var_4ch;\n                puVar5 = &var_90h;\n                for (iVar3 = 0xf; iVar3 != 0; iVar3 = iVar3 + -1) {\n                    *puVar5 = *puVar4;\n                    puVar4 = puVar4 + 1;\n                    puVar5 = puVar5 + 1;\n                }\n                if (var_4ch[6] != 0) {\n                    iVar6 = var_4ch[7] * var_4ch[0xe];\n                    var_78h = fcn.00049ea0(iVar2, iVar6, &var_54h);\n                    if (var_78h == 0) {\n                        var_1ch = -0x3fffff66;\n                        var_4h = 0xffffffff;\n                        goto code_r0x00049b83;\n                    }\n                }\n                if ((var_4ch[10] == 0) || (var_68h = fcn.00049ea0(iVar6, var_4ch[0xb] * var_4ch[0xe]),  var_68h != 0)) {\n                    if ((var_4ch[0xc] == 0) ||\n                       (var_60h = fcn.00049ea0(iVar6, var_4ch[0xd] * var_4ch[0xe]),  var_60h != 0)) {\n                        fcn.00049c40(&var_90h);\n                        var_4ch[0xe] = var_58h;\n                        var_4h = 0xffffffff;\n                    }\n                    else {\n                        var_1ch = -0x3fffff66;\n                        var_4h = 0xffffffff;\n                    }\n                }\n                else {\n                    var_1ch = -0x3fffff66;\n                    var_4h = 0xffffffff;\n                }\n            }\n            else {\n                var_4h = 0xffffffff;\n            }\n        }\n    }\ncode_r0x00049b83:\n    if (var_1ch != 0) {\n        *(var_ch + 0x1c) = 0;\n        *(var_ch + 0x18) = var_1ch;\n    }\n    if (var_4ch != NULL) {\n        (**0x8500d0b0)(var_4ch, var_38h);\n        var_8ch = var_54h;\n        var_90h = var_78h;\n        fcn.00049f90(var_78h, var_54h);\n        fcn.00049f90(var_68h, var_48h);\n        fcn.00049f90(var_60h, var_3ch);\n    }\n    if (var_44h != 0) {\n        (**0x8500d298)(var_38h);\n    }\n    if (var_38h != 0) {\n        (**0x8500d2a8)(var_38h);\n    }\n    if (var_40h != 0) {\n        (**0x8500d1c4)(&var_34h);\n    }\n    (**0x8500d2e4)();\n    uVar1 = fcn.00016760(var_8h, var_ch);\ncode_r0x00049c21:\n    *in_FS_OFFSET = var_10h;\n    return uVar1;\n}\n",
        "token_count": 1622
    },
    "00049c40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.00049c40(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t arg_8h_00;\n    uint uVar2;\n    uint arg_ch;\n    ushort extraout_var;\n    ushort extraout_var_00;\n    ushort uVar3;\n    int32_t var_1ch;\n    int16_t *var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    var_18h = *(arg_8h + 0x18);\n    var_ch = *(arg_8h + 0x18) + 0x1c;\n    var_10h = *(arg_8h + 0x28);\n    var_14h = *(arg_8h + 0x30);\n    var_1ch = *(arg_8h + 0x38);\n    var_4h = 0;\n    while (var_4h < *(arg_8h + 0x38)) {\n        if (*var_18h == 0x17) {\n            uVar1 = fcn.000365f0(var_18h & 0xffff0000 | *(var_ch + 2));\n            arg_8h_00 = uVar1 & 0xffff0000 | var_18h[1];\n            uVar1 = var_ch;\n            uVar2 = fcn.000365f0(arg_8h_00);\n            var_8h = fcn.000485e0(var_18h, uVar2, arg_8h_00, uVar1);\n            uVar3 = extraout_var;\n        }\n        else {\n            fcn.000365f0(var_18h & 0xffff0000 | *(var_ch + 2));\n            uVar2 = *(var_ch + 4);\n            uVar1 = var_ch & 0xffff0000 | var_18h[1];\n            arg_ch = fcn.000365f0(uVar1);\n            var_8h = fcn.00048530(*(var_18h + 2), arg_ch, uVar1, uVar2);\n            uVar3 = extraout_var_00;\n        }\n        var_1ch = CONCAT22(uVar3, var_18h[1]);\n        uVar1 = fcn.0003baa0(var_1ch);\n        if ((uVar1 | var_8h) == 0) {\n            var_18h = var_18h + *(arg_8h + 0x1c);\n            var_ch = var_ch + *(arg_8h + 0x1c);\n            var_10h = var_10h + *(arg_8h + 0x2c);\n            var_14h = var_14h + *(arg_8h + 0x34);\n            var_4h = var_4h + 1;\n        }\n        else {\n            if (*(arg_8h + 0x28) != 0) {\n                fcn.0007f904(var_10h, var_10h + *(arg_8h + 0x2c), ((*(arg_8h + 0x38) - var_4h) + -1) * *(arg_8h + 0x2c))\n                ;\n            }\n            if (*(arg_8h + 0x30) != 0) {\n                fcn.0007f904(var_14h, var_14h + *(arg_8h + 0x34), ((*(arg_8h + 0x38) - var_4h) + -1) * *(arg_8h + 0x34))\n                ;\n            }\n            fcn.0007f904(var_18h, var_18h + *(arg_8h + 0x1c), ((*(arg_8h + 0x38) - var_4h) + -1) * *(arg_8h + 0x1c));\n            *(arg_8h + 0x38) = *(arg_8h + 0x38) + -1;\n        }\n    }\n    fcn.0007f916(*(arg_8h + 0x1c) * *(arg_8h + 0x38) + *(arg_8h + 0x18), 0, \n                 (var_1ch - *(arg_8h + 0x38)) * *(arg_8h + 0x1c), var_1ch, var_18h, var_14h, var_10h);\n    fcn.0007f916(*(arg_8h + 0x2c) * *(arg_8h + 0x38) + *(arg_8h + 0x28), 0, \n                 (var_1ch - *(arg_8h + 0x38)) * *(arg_8h + 0x2c));\n    fcn.0007f916(*(arg_8h + 0x34) * *(arg_8h + 0x38) + *(arg_8h + 0x30), 0, \n                 (var_1ch - *(arg_8h + 0x38)) * *(arg_8h + 0x34));\n    return;\n}\n",
        "token_count": 1266
    },
    "00049ea0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00049ea0(uint param_1, uint param_2, int32_t *param_3)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint var_8h;\n    uint var_ch;\n    int32_t *var_10h;\n    uint var_18h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_10h_2;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x8507b980;\n    uStack16 = 0x8507b910;\n    var_10h_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_10h_2;\n    iVar1 = (**0x8500d290)(var_8h, var_ch, 0, 0, 0);\n    if (iVar1 == 0) {\n        iVar2 = 0;\n    }\n    else {\n        var_4h = 0;\n        (**0x8500d29c)(iVar1, 0, 2);\n        var_4h = 0xffffffff;\n        iVar2 = (**0x8500d0e8)(iVar1, 0, 1, 0, 0, 0x10);\n        if (iVar2 == 0) {\n            (**0x8500d298)(iVar1);\n            (**0x8500d2a8)(iVar1);\n            iVar2 = 0;\n        }\n        else {\n            *var_10h = iVar1;\n        }\n    }\n    *in_FS_OFFSET = var_10h_2;\n    return iVar2;\n}\n",
        "token_count": 390
    },
    "00049f90": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00049f90(int32_t arg_8h, int32_t arg_ch)\n\n{\n    if ((arg_8h != 0) && (arg_ch != 0)) {\n        (**0x8500d0b0)(arg_8h, arg_ch);\n        (**0x8500d298)(arg_ch);\n        (**0x8500d2a8)(arg_ch);\n    }\n    return;\n}\n",
        "token_count": 97
    },
    "00049fd0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00049fd0(int32_t arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t var_4h;\n    \n    var_4h = fcn.0007f7d8(arg_8h, arg_ch, arg_10h, arg_14h);\n    if (var_4h < 0) {\n        *(arg_8h + arg_ch + -1) = 0;\n        var_4h = arg_ch << 1;\n    }\n    return var_4h;\n}\n",
        "token_count": 134
    },
    "0004a050": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0004a050(uint16_t *arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t var_4h;\n    \n    var_4h = arg_8h[9] +\n             arg_8h[8] + arg_8h[7] + arg_8h[6] + arg_8h[5] + arg_8h[4] + arg_8h[3] + arg_8h[2] + arg_8h[1] + *arg_8h;\n    arg_8h = arg_8h + 10;\n    for (arg_ch = arg_ch + -0x14; arg_ch != 0; arg_ch = arg_ch + -4) {\n        var_4h = arg_8h[1] + *arg_8h + var_4h;\n        arg_8h = arg_8h + 2;\n    }\n    uVar1 = (var_4h >> 0x10) + (var_4h & 0xffff);\n    return ~((uVar1 >> 0x10) + uVar1);\n}\n",
        "token_count": 263
    },
    "0004a150": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0004a150(uint16_t *arg_8h, uint16_t *arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = arg_ch[9] +\n             arg_ch[8] +\n             arg_ch[7] +\n             arg_ch[6] +\n             arg_ch[5] +\n             arg_ch[4] +\n             arg_ch[3] +\n             arg_ch[2] + arg_ch[1] + *arg_ch + arg_8h[5] + arg_8h[4] + arg_8h[3] + arg_8h[2] + arg_8h[1] + *arg_8h;\n    arg_ch = arg_ch + 10;\n    for (arg_10h = arg_10h + -0x14; 0x1f < arg_10h; arg_10h = arg_10h + -0x20) {\n        var_4h = arg_ch[0xf] +\n                 arg_ch[0xe] +\n                 arg_ch[0xd] +\n                 arg_ch[0xc] +\n                 arg_ch[0xb] +\n                 arg_ch[10] +\n                 arg_ch[9] +\n                 arg_ch[8] +\n                 arg_ch[7] + arg_ch[6] + arg_ch[5] + arg_ch[4] + arg_ch[3] + arg_ch[2] + arg_ch[1] + *arg_ch + var_4h;\n        arg_ch = arg_ch + 0x10;\n    }\n    for (; 7 < arg_10h; arg_10h = arg_10h + -8) {\n        var_4h = arg_ch[3] + arg_ch[2] + arg_ch[1] + *arg_ch + var_4h;\n        arg_ch = arg_ch + 4;\n    }\n    for (; 1 < arg_10h; arg_10h = arg_10h + -2) {\n        var_4h = *arg_ch + var_4h;\n        arg_ch = arg_ch + 1;\n    }\n    if (arg_10h == 1) {\n        var_4h = *arg_ch + var_4h;\n    }\n    uVar1 = (var_4h >> 0x10) + (var_4h & 0xffff);\n    return ~((uVar1 >> 0x10) + uVar1);\n}\n",
        "token_count": 564
    },
    "0004a3e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0004a3e0(uint16_t *arg_8h, uint16_t *arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = arg_ch[9] +\n             arg_ch[8] +\n             arg_ch[7] +\n             arg_ch[6] +\n             arg_ch[5] +\n             arg_ch[4] +\n             arg_ch[3] +\n             arg_ch[2] +\n             arg_ch[1] +\n             *arg_ch + arg_8h[0x11] +\n                       arg_8h[0x10] +\n                       arg_8h[0xf] +\n                       arg_8h[0xe] +\n                       arg_8h[0xd] +\n                       arg_8h[0xc] +\n                       arg_8h[0xb] +\n                       arg_8h[10] +\n                       arg_8h[9] +\n                       arg_8h[8] +\n                       arg_8h[7] + arg_8h[6] + arg_8h[5] + arg_8h[4] + arg_8h[3] + arg_8h[2] + arg_8h[1] + *arg_8h;\n    arg_ch = arg_ch + 10;\n    for (arg_10h = arg_10h + -0x14; 0x1f < arg_10h; arg_10h = arg_10h + -0x20) {\n        var_4h = arg_ch[0xf] +\n                 arg_ch[0xe] +\n                 arg_ch[0xd] +\n                 arg_ch[0xc] +\n                 arg_ch[0xb] +\n                 arg_ch[10] +\n                 arg_ch[9] +\n                 arg_ch[8] +\n                 arg_ch[7] + arg_ch[6] + arg_ch[5] + arg_ch[4] + arg_ch[3] + arg_ch[2] + arg_ch[1] + *arg_ch + var_4h;\n        arg_ch = arg_ch + 0x10;\n    }\n    for (; 7 < arg_10h; arg_10h = arg_10h + -8) {\n        var_4h = arg_ch[3] + arg_ch[2] + arg_ch[1] + *arg_ch + var_4h;\n        arg_ch = arg_ch + 4;\n    }\n    for (; 1 < arg_10h; arg_10h = arg_10h + -2) {\n        var_4h = *arg_ch + var_4h;\n        arg_ch = arg_ch + 1;\n    }\n    if (arg_10h == 1) {\n        var_4h = *arg_ch + var_4h;\n    }\n    uVar1 = (var_4h >> 0x10) + (var_4h & 0xffff);\n    return ~((uVar1 >> 0x10) + uVar1);\n}\n",
        "token_count": 683
    },
    "0004a710": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0004a710(uint16_t *arg_8h, uint16_t *arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = arg_ch[3] +\n             arg_ch[2] +\n             arg_ch[1] +\n             *arg_ch + arg_8h[0x11] +\n                       arg_8h[0x10] +\n                       arg_8h[0xf] +\n                       arg_8h[0xe] +\n                       arg_8h[0xd] +\n                       arg_8h[0xc] +\n                       arg_8h[0xb] +\n                       arg_8h[10] +\n                       arg_8h[9] +\n                       arg_8h[8] +\n                       arg_8h[7] + arg_8h[6] + arg_8h[5] + arg_8h[4] + arg_8h[3] + arg_8h[2] + arg_8h[1] + *arg_8h;\n    arg_ch = arg_ch + 4;\n    for (arg_10h = arg_10h + -8; 0x1f < arg_10h; arg_10h = arg_10h + -0x20) {\n        var_4h = arg_ch[0xf] +\n                 arg_ch[0xe] +\n                 arg_ch[0xd] +\n                 arg_ch[0xc] +\n                 arg_ch[0xb] +\n                 arg_ch[10] +\n                 arg_ch[9] +\n                 arg_ch[8] +\n                 arg_ch[7] + arg_ch[6] + arg_ch[5] + arg_ch[4] + arg_ch[3] + arg_ch[2] + arg_ch[1] + *arg_ch + var_4h;\n        arg_ch = arg_ch + 0x10;\n    }\n    for (; 7 < arg_10h; arg_10h = arg_10h + -8) {\n        var_4h = arg_ch[3] + arg_ch[2] + arg_ch[1] + *arg_ch + var_4h;\n        arg_ch = arg_ch + 4;\n    }\n    for (; 1 < arg_10h; arg_10h = arg_10h + -2) {\n        var_4h = *arg_ch + var_4h;\n        arg_ch = arg_ch + 1;\n    }\n    if (arg_10h == 1) {\n        var_4h = *arg_ch + var_4h;\n    }\n    uVar1 = (var_4h >> 0x10) + (var_4h & 0xffff);\n    return ~((uVar1 >> 0x10) + uVar1);\n}\n",
        "token_count": 637
    },
    "0004a9f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0004a9f0(uint16_t *arg_8h, uint16_t *arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = arg_ch[3] +\n             arg_ch[2] + arg_ch[1] + *arg_ch + arg_8h[5] + arg_8h[4] + arg_8h[3] + arg_8h[2] + arg_8h[1] + *arg_8h;\n    arg_ch = arg_ch + 4;\n    for (arg_10h = arg_10h + -8; 0x1f < arg_10h; arg_10h = arg_10h + -0x20) {\n        var_4h = arg_ch[0xf] +\n                 arg_ch[0xe] +\n                 arg_ch[0xd] +\n                 arg_ch[0xc] +\n                 arg_ch[0xb] +\n                 arg_ch[10] +\n                 arg_ch[9] +\n                 arg_ch[8] +\n                 arg_ch[7] + arg_ch[6] + arg_ch[5] + arg_ch[4] + arg_ch[3] + arg_ch[2] + arg_ch[1] + *arg_ch + var_4h;\n        arg_ch = arg_ch + 0x10;\n    }\n    for (; 7 < arg_10h; arg_10h = arg_10h + -8) {\n        var_4h = arg_ch[3] + arg_ch[2] + arg_ch[1] + *arg_ch + var_4h;\n        arg_ch = arg_ch + 4;\n    }\n    for (; 1 < arg_10h; arg_10h = arg_10h + -2) {\n        var_4h = *arg_ch + var_4h;\n        arg_ch = arg_ch + 1;\n    }\n    if (arg_10h == 1) {\n        var_4h = *arg_ch + var_4h;\n    }\n    uVar1 = (var_4h >> 0x10) + (var_4h & 0xffff);\n    return ~((uVar1 >> 0x10) + uVar1);\n}\n",
        "token_count": 522
    },
    "0004ac40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0004ac40(uint16_t *arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = 0;\n    for (; 0x1f < arg_ch; arg_ch = arg_ch + -0x20) {\n        var_4h = arg_8h[0xf] +\n                 arg_8h[0xe] +\n                 arg_8h[0xd] +\n                 arg_8h[0xc] +\n                 arg_8h[0xb] +\n                 arg_8h[10] +\n                 arg_8h[9] +\n                 arg_8h[8] +\n                 arg_8h[7] + arg_8h[6] + arg_8h[5] + arg_8h[4] + arg_8h[3] + arg_8h[2] + arg_8h[1] + *arg_8h + var_4h;\n        arg_8h = arg_8h + 0x10;\n    }\n    for (; 7 < arg_ch; arg_ch = arg_ch + -8) {\n        var_4h = arg_8h[3] + arg_8h[2] + arg_8h[1] + *arg_8h + var_4h;\n        arg_8h = arg_8h + 4;\n    }\n    for (; 1 < arg_ch; arg_ch = arg_ch + -2) {\n        var_4h = *arg_8h + var_4h;\n        arg_8h = arg_8h + 1;\n    }\n    if (arg_ch == 1) {\n        var_4h = *arg_8h + var_4h;\n    }\n    uVar1 = (var_4h >> 0x10) + (var_4h & 0xffff);\n    return ~((uVar1 >> 0x10) + uVar1);\n}\n",
        "token_count": 458
    },
    "0004ae00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0004ae00(uint16_t *arg_8h, uint16_t *arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = arg_8h[0x11] +\n             arg_8h[0x10] +\n             arg_8h[0xf] +\n             arg_8h[0xe] +\n             arg_8h[0xd] +\n             arg_8h[0xc] +\n             arg_8h[0xb] +\n             arg_8h[10] +\n             arg_8h[9] +\n             arg_8h[8] + arg_8h[7] + arg_8h[6] + arg_8h[5] + arg_8h[4] + arg_8h[3] + arg_8h[2] + arg_8h[1] + *arg_8h;\n    for (; 0x1f < arg_10h; arg_10h = arg_10h + -0x20) {\n        var_4h = arg_ch[0xf] +\n                 arg_ch[0xe] +\n                 arg_ch[0xd] +\n                 arg_ch[0xc] +\n                 arg_ch[0xb] +\n                 arg_ch[10] +\n                 arg_ch[9] +\n                 arg_ch[8] +\n                 arg_ch[7] + arg_ch[6] + arg_ch[5] + arg_ch[4] + arg_ch[3] + arg_ch[2] + arg_ch[1] + *arg_ch + var_4h;\n        arg_ch = arg_ch + 0x10;\n    }\n    for (; 7 < arg_10h; arg_10h = arg_10h + -8) {\n        var_4h = arg_ch[3] + arg_ch[2] + arg_ch[1] + *arg_ch + var_4h;\n        arg_ch = arg_ch + 4;\n    }\n    for (; 1 < arg_10h; arg_10h = arg_10h + -2) {\n        var_4h = *arg_ch + var_4h;\n        arg_ch = arg_ch + 1;\n    }\n    if (arg_10h == 1) {\n        var_4h = *arg_ch + var_4h;\n    }\n    uVar1 = (var_4h >> 0x10) + (var_4h & 0xffff);\n    return ~((uVar1 >> 0x10) + uVar1);\n}\n",
        "token_count": 588
    },
    "0004b0a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_d4h\n// WARNING: Variable defined which should be unmapped: var_cch\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0004b0a0(int32_t arg_8h)\n\n{\n    char *pcVar1;\n    char cVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint *puVar7;\n    uint var_d4h;\n    uint var_cch;\n    uint *var_c8h;\n    uint *var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b0h;\n    uint *var_ach;\n    uint var_a8h;\n    int32_t var_a4h;\n    uint var_a0h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_8h == 0) {\n        uVar3 = 0xffffffff;\n    }\n    else {\n        *0x85092be0 = arg_8h;\n        for (var_a4h = 0; var_a4h < 5; var_a4h = var_a4h + 1) {\n            fcn.0002c840(&var_a0h, 0x73);\n            if (0 < var_a4h) {\n                var_24h = 0;\n                var_20h = 0;\n                var_1ch = 0;\n                var_18h = 0;\n                var_14h = 0;\n                var_10h = 0;\n                var_ch = 0;\n                var_8h = 0;\n                var_4h._0_1_ = 0;\n                fcn.0004a010(&var_24h, 0x21, 0x85010668, var_a4h);\n                var_ach = &var_24h;\n                do {\n                    cVar2 = *var_ach;\n                    var_ach = var_ach + 1;\n                } while (cVar2 != '\\0');\n                uVar5 = var_ach - &var_24h;\n                var_c0h = &var_a4h + 3;\n                do {\n                    pcVar1 = var_c0h + 1;\n                    var_c0h = var_c0h + 1;\n                } while (*pcVar1 != '\\0');\n                puVar7 = &var_24h;\n                for (uVar6 = uVar5 >> 2; uVar6 != 0; uVar6 = uVar6 - 1) {\n                    *var_c0h = *puVar7;\n                    puVar7 = puVar7 + 1;\n                    var_c0h = var_c0h + 1;\n                }\n                for (uVar5 = uVar5 & 3; uVar5 != 0; uVar5 = uVar5 - 1) {\n                    *var_c0h = *puVar7;\n                    puVar7 = puVar7 + 1;\n                    var_c0h = var_c0h + 1;\n                }\n            }\n            var_c8h = &var_a0h;\n            do {\n                cVar2 = *var_c8h;\n                var_c8h = var_c8h + 1;\n            } while (cVar2 != '\\0');\n            iVar4 = fcn.0007a300(var_a4h * 4 + -0x7af6eff4, 0x8508e328, &var_a0h, var_c8h + (1 - (&var_a0h + 1)), 1);\n            if (iVar4 != 0) {\n                for (; -1 < var_a4h; var_a4h = var_a4h + -1) {\n                    fcn.0007a660(var_a4h * 4 + -0x7af6eff4, 0);\n                }\n                return 0xffffffff;\n            }\n        }\n        fcn.00034d00(0x85090fec);\n        *0x85090ffc = 0;\n        fcn.000380a0(0x85091000);\n        *0x8509102c = 0;\n        *0x85091030 = 0;\n        fcn.000380a0(0x85090ff0);\n        *0x85091034 = 0;\n        *0x85091020 = 0;\n        *0x85091024 = 0;\n        fcn.0001a700(0x85091038, 0x850487c0, 0);\n        fcn.0001a700(0x85091060, 0x85048af0, *0x8509101c);\n        uVar3 = 0;\n    }\n    return uVar3;\n}\n",
        "token_count": 1123
    },
    "0004b330": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_8h\n\nvoid fcn.0004b330(void)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    for (var_ch = 0; var_ch < 5; var_ch = var_ch * 4 + -0x7af6eff3) {\n        fcn.0007a660(var_ch * 4 + -0x7af6eff4, 0);\n    }\n    *0x85090ffc = 1;\n    fcn.00034dc0(0x85090fec);\n    fcn.000383c0(0x85091038, 0);\n    fcn.00038370(0x85091038);\n    for (var_ch = 0; var_ch < 5; var_ch = var_ch + 1) {\n        iVar2 = fcn.00038390(var_ch * 8 + -0x7af6efc0);\n        if (iVar2 != 0) {\n            fcn.000383c0(var_ch * 8 + -0x7af6efc0, 0);\n            fcn.00038370(var_ch * 8 + -0x7af6efc0);\n        }\n    }\n    var_4h = *0x85091030;\n    while (var_4h != NULL) {\n        puVar1 = *var_4h;\n        fcn.00036460(var_4h);\n        var_4h = puVar1;\n    }\n    var_4h = *0x85091020;\n    while (var_4h != NULL) {\n        puVar1 = *var_4h;\n        fcn.00036460(var_4h);\n        var_4h = puVar1;\n    }\n    fcn.00034d90(0x85090fec);\n    return;\n}\n",
        "token_count": 451
    },
    "0004b450": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Switch with 1 destination removed at 0x0004b489 : 62 cases all go to same destination\n\nuint __cdecl fcn.0004b450(uint noname_0, uint arg_ch, uint noname_2, uint8_t *arg_14h)\n\n{\n    bool bVar1;\n    uint var_1ch;\n    uint var_18h;\n    uint var_4h;\n    \n    bVar1 = true;\n    while( true ) {\n        if (!bVar1) {\n            *arg_14h = arg_ch;\n            return 0;\n        }\n        if (arg_ch < 0x3e) break;\n        bVar1 = false;\n    }\n    // WARNING: Bad instruction - Truncating control flow here\n    halt_baddata();\n}\n",
        "token_count": 183
    },
    "0004b700": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0004b700(uint noname_0, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, uint32_t arg_18h, uint noname_5, \n            int32_t *arg_20h, uint *arg_24h, int32_t *arg_28h, uint32_t *arg_2ch, int32_t *arg_30h, ushort *arg_34h)\n\n{\n    ushort uVar1;\n    int32_t var_8h;\n    uint var_4h;\n    \n    if (arg_ch == 0) {\n        *arg_28h = arg_14h;\n        *arg_2ch = arg_18h;\n        if (arg_18h < 0xe) {\n            return 0xffffffff;\n        }\n        *arg_20h = arg_14h;\n        *arg_24h = 0xe;\n        var_8h = arg_14h;\n        *arg_2ch = *arg_2ch - 0xe;\n        *arg_30h = arg_14h + 0xe;\n    }\n    else {\n        if (arg_10h != 0xe) {\n            return 0xffffffff;\n        }\n        var_8h = arg_ch;\n        *arg_20h = arg_ch;\n        *arg_24h = 0xe;\n        *arg_28h = arg_14h;\n        *arg_2ch = arg_18h;\n        *arg_30h = arg_14h;\n    }\n    uVar1 = fcn.000365f0(arg_30h & 0xffff0000 | *(var_8h + 0xc));\n    *arg_34h = uVar1;\n    return 0;\n}\n",
        "token_count": 395
    },
    "0004b810": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Removing unreachable block (ram,0x0004c40c)\n// WARNING: Switch with 1 destination removed at 0x0004bb85\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0004b810(uint arg_8h, uint arg_ch, uint arg_10h, uint8_t *arg_14h, int32_t arg_18h, int32_t arg_1ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    uint var_104h;\n    uint var_100h;\n    uint var_fch;\n    uint var_f8h;\n    uint var_e8h;\n    uint32_t var_e4h;\n    int32_t var_e0h;\n    uint var_b8h;\n    uint var_b4h;\n    int32_t var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint32_t var_a4h;\n    uint32_t var_a0h;\n    uint *var_9ch;\n    uint var_96h;\n    int32_t var_90h;\n    uint8_t *var_8ch;\n    uint8_t *var_88h;\n    int32_t var_84h;\n    int32_t var_45h;\n    uint32_t var_34h;\n    uint32_t var_30h;\n    uint8_t *var_2ch;\n    int32_t var_28h;\n    \n    var_ach = 0;\n    var_8ch = NULL;\n    var_a8h = 0;\n    var_34h = 0;\n    var_a4h = 0;\n    var_2ch = NULL;\n    var_84h = 0;\n    var_28h = 0;\n    var_90h = 0;\n    var_88h = NULL;\n    var_a0h = 0;\n    var_9ch = NULL;\n    var_45h._0_1_ = 2;\n    stack0xffffffb8 = 0;\n    var_e0h = fcn.0004b700(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, &var_a8h, &var_e4h, &var_ach, &var_34h, \n                           &arg_14h, &var_b4h);\n    if (var_e0h != 0) {\n        return 0;\n    }\n    iVar1 = fcn.0004b7d0(arg_8h, var_a8h, arg_10h, var_34h);\n    if (iVar1 != 0) {\n        return 0;\n    }\n    if ((var_b4h != 0x800) && (var_b4h != -0x7923)) {\n        if (0x16 < var_34h) {\n            *NULL = fcn.00050480(arg_14h, 0x16);\n        }\n        goto code_r0x0004c366;\n    }\n    if (var_b4h == 0x800) {\n        if (var_34h < 0x14) goto code_r0x0004c366;\n        var_2ch = arg_14h;\n        var_30h = fcn.000365f0(*(arg_14h + 2));\n        var_30h = var_30h & 0xffff;\n        var_e4h = (*var_2ch & 0xf) << 2;\n        if ((var_e4h < 0x14) || (var_30h < var_e4h)) goto code_r0x0004c366;\n        var_96h._2_2_ = fcn.0004a050(var_2ch, var_e4h);\n        if (var_96h._2_2_ != 0) goto code_r0x0004c366;\n        uVar2 = var_96h._2_2_;\n        if (arg_1ch == 0) {\n            if (((0x2d < var_30h) && (var_30h != var_34h)) || ((var_30h < 0x2e && (var_34h < var_30h))))\n            goto code_r0x0004c366;\n            uVar2 = var_34h;\n            if (var_34h != var_30h) {\n                var_34h = var_30h;\n            }\n        }\n        var_b8h._0_2_ = fcn.000365f0(uVar2 & 0xffff0000 | *(var_2ch + 6));\n        var_96h._1_1_ = (var_b8h & 0x2000) >> 0xd;\n        var_b8h._0_2_ = var_b8h & 0x1fff;\n        if ((var_b8h != 0) || (var_96h._1_1_ != '\\0')) goto code_r0x0004c366;\n        arg_14h = arg_14h + var_e4h;\n        var_34h = var_34h - var_e4h;\n        var_96h._0_1_ = var_2ch[9];\n    }\n    else {\n        if (var_34h < 0x28) goto code_r0x0004c366;\n        var_88h = arg_14h;\n        uVar2 = fcn.000365f0(*(arg_14h + 4));\n        var_30h = (uVar2 & 0xffff) + 0x28;\n        var_e4h = 0x28;\n        if ((var_34h != var_30h) || ((arg_1ch == 0 && (var_30h < 0x2e)))) goto code_r0x0004c366;\n        arg_14h = arg_14h + 0x28;\n        var_34h = var_34h - 0x28;\n        var_96h._0_1_ = var_88h[6];\n        iVar1 = fcn.0004b450(arg_14h, arg_14h & 0xffffff00 | var_96h, var_34h, &var_96h);\n        if (iVar1 != 0) goto code_r0x0004c366;\n    }\n    if (var_96h - 1 < 0x3a) {\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    if (0x16 < var_34h) {\n        *NULL = fcn.00050480(arg_14h, 0x16);\n    }\ncode_r0x0004c366:\n    if ((stack0xffffffb8 != 0) && (arg_1ch == 0)) {\n        if ((var_45h & 0x40) == 0) {\n            if (var_2ch != NULL) {\n                *(var_2ch + 2) = 0;\n                *(var_2ch + 4) = 0;\n                *(var_2ch + 6) = 0;\n                var_2ch[8] = 0;\n                *(var_2ch + 10) = 0;\n            }\n            if (var_88h != NULL) {\n                *(var_88h + 4) = 0;\n                var_88h[7] = 0;\n                if (((var_45h & 1) != 0) && (var_9ch != NULL)) {\n                    uVar3 = fcn.000365c0(var_a0h & 0x9fffffff);\n                    *var_9ch = uVar3;\n                }\n            }\n            if (var_84h != 0) {\n                *(var_84h + 8) = 0;\n                *(var_84h + 4) = 0;\n                *(var_84h + 0x10) = 0;\n                *(var_84h + 0xc) = 0;\n                *(var_84h + 0xd) = 0;\n                *(var_84h + 0xe) = 0;\n                *(var_84h + 0x12) = 0;\n            }\n            if (var_28h != 0) {\n                *(var_28h + 6) = 0;\n                *(var_28h + 4) = 0;\n            }\n            if (((var_90h != 0) && (*(var_90h + 2) = 0,  (var_45h & 1) != 0)) && (var_9ch != NULL)) {\n                uVar3 = fcn.000365c0(var_a0h & 0x9fffffff);\n                *var_9ch = uVar3;\n            }\n        }\n        var_e4h = arg_18h - var_34h;\n        if ((stack0xffffffb8 < 1) || (4 < stack0xffffffb8)) {\n            if (stack0xffffffb8 == 10) {\n                var_b0h = 4;\n            }\n            else {\n                var_b0h = 0;\n            }\n        }\n        else {\n            arg_14h = arg_14h + 0x16;\n            var_34h = var_34h - 0x16;\n            var_b0h = stack0xffffffb8 + -1;\n        }\n        if (var_8ch == NULL) {\n            var_8ch = arg_14h;\n            var_a4h = var_34h;\n            arg_14h = NULL;\n            var_34h = 0;\n        }\n        fcn.0004c620(arg_8h, arg_ch, arg_10h, var_ach, var_e4h, var_8ch, var_a4h, var_b0h, \n                     var_34h & 0xffffff00 | var_45h, 0, arg_14h, var_34h);\n    }\n    if ((stack0xffffffb8 == 0) || ((var_45h & 0x40) != 0)) {\n        var_104h = 1;\n    }\n    else {\n        var_104h = 0;\n    }\n    return var_104h;\n}\n",
        "token_count": 2301
    },
    "0004c620": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0004c620(int32_t arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h, int32_t arg_18h, uint arg_1ch, int32_t arg_20h\n            , int32_t arg_24h, uint arg_28h, int32_t arg_2ch, uint arg_30h, int32_t arg_34h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((*0x85090ffc == 0) && (piVar2 = fcn.00036360(arg_10h + 0x30 + arg_18h + arg_20h + arg_34h),  piVar2 != NULL)) {\n        fcn.0007f916(piVar2, 0, 0x30);\n        fcn.0007f904(piVar2 + 0xc, arg_ch, arg_10h);\n        fcn.0007f904(piVar2 + arg_10h + 0x30, arg_14h, arg_18h);\n        fcn.0007f904(piVar2 + arg_18h + arg_10h + 0x30, arg_1ch, arg_20h);\n        fcn.0007f904(piVar2 + arg_20h + arg_18h + arg_10h + 0x30, arg_30h, arg_34h);\n        piVar2[1] = arg_8h;\n        piVar2[2] = piVar2 + 0xc;\n        piVar2[3] = arg_10h + arg_18h;\n        piVar2[4] = piVar2 + arg_18h + arg_10h + 0x30;\n        piVar2[5] = arg_20h;\n        piVar2[6] = arg_24h;\n        *(piVar2 + 7) = arg_28h;\n        piVar2[9] = arg_2ch;\n        piVar2[10] = piVar2 + arg_20h + arg_18h + arg_10h + 0x30;\n        piVar2[0xb] = arg_34h;\n        fcn.000382a0(0x85091000, &var_4h, 1);\n        piVar1 = piVar2;\n        if (*0x8509102c != NULL) {\n            **0x8509102c = piVar2;\n            piVar1 = *0x85091030;\n        }\n        *0x85091030 = piVar1;\n        *0x8509102c = piVar2;\n        fcn.000382d0(0x85091000, &var_4h, 1);\n        fcn.00034dc0(0x85090fec);\n    }\n    return;\n}\n",
        "token_count": 660
    },
    "0004c7c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_e8h\n// WARNING: Variable defined which should be unmapped: var_e4h\n// WARNING: Variable defined which should be unmapped: var_e0h\n\nuint fcn.0004c7c0(void)\n\n{\n    uchar uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    uint var_e8h;\n    uint var_e4h;\n    uint var_e0h;\n    int32_t var_60h;\n    uint32_t var_5ch;\n    int32_t var_58h;\n    uint var_50h;\n    uint32_t var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    while (fcn.00034df0(0x85090fec, 0xffffffff),  *0x85090ffc == 0) {\n        while( true ) {\n            fcn.000382a0(0x85091000, &fcn.0004c7c0::var_8h, 1);\n            var_4h = *0x85091030;\n            if ((*0x85091030 != NULL) && (*0x85091030 = **0x85091030,  *0x85091030 == NULL)) {\n                *0x8509102c = 0;\n            }\n            piVar4 = 0x4c82f;\n            fcn.000382d0(0x85091000, &fcn.0004c7c0::var_8h, 1);\n            if (var_4h == NULL) break;\n            if ((*(var_4h + 7) & 0x20) != 0) {\n                piVar4 = var_4h;\n                fcn.0004dcc0(var_4h);\n            }\n            if ((((*(var_4h + 7) & 1) == 0) || ((*(var_4h + 7) & 2) != 0)) && (var_4h[3] < 0x81)) {\n                fcn.0007f904(&fcn.0004c7c0::var_e0h, var_4h[2], var_4h[3], piVar4);\n                fcn.0007f916(&fcn.0004c7c0::var_e0h + var_4h[3], 0, 0x80 - var_4h[3]);\n                var_60h = var_4h[3];\n                var_5ch = *(var_4h + 7) & 9 | 2;\n                var_58h = var_4h[1];\n                iVar2 = fcn.0007ada0(*(var_4h[6] * 4 + -0x7af6eff4), var_4h[4], var_4h[5], &fcn.0004c7c0::var_e0h, 0);\n                if ((iVar2 == 0) && (iVar2 = fcn.00038390(var_4h[6] * 8 + -0x7af6efc0),  iVar2 == 0)) {\n                    fcn.0001a700(var_4h[6] * 8 + -0x7af6efc0, 0x85048af0, *(var_4h[6] * 4 + -0x7af6eff4));\n                }\n            }\n            if ((*(var_4h + 7) & 1) != 0) {\n                if (((*(var_4h + 7) & 4) == 0) || (iVar2 = fcn.0004da40(var_4h),  iVar2 == 0)) {\n                    *(var_4h + 7) = *(var_4h + 7) & 0xf9;\n                    uVar3 = fcn.0007f77e();\n                    var_4h[5] = uVar3 % 0x20 + 0x21;\n                    if (((*(var_4h + 7) & 0x10) != 0) && (3 < var_4h[5])) {\n                        var_4h[5] = 3;\n                    }\n                    for (var_ch = 0; var_ch < var_4h[5]; var_ch = var_ch + 1) {\n                        uVar1 = fcn.0007f77e();\n                        *(&fcn.0004c7c0::var_50h + var_ch) = uVar1;\n                    }\n                    var_4h[4] = &fcn.0004c7c0::var_50h;\n                    fcn.0004cc00(var_4h);\n                }\n                else {\n                    var_4h[4] = *(iVar2 + 0x10);\n                    var_4h[5] = *(iVar2 + 0x14);\n                    *(var_4h + 7) = *(var_4h + 7) & 0xfb | 2;\n                    fcn.0004cc00(var_4h);\n                    fcn.00036460(iVar2);\n                }\n            }\n            fcn.00036460(var_4h);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 1180
    },
    "0004ca90": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0004ca90(void)\n\n{\n    int32_t iVar1;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.00038460(&var_ch);\n    if (iVar1 != 0) {\n        for (var_4h = 0; var_4h < 5; var_4h = var_4h + 1) {\n            if ((*(var_4h * 8 + -0x7af6efbc) != 0) && (*(var_4h * 8 + -0x7af6efbc) == var_8h)) {\n                return 1;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 168
    },
    "0004caf0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_dch\n// WARNING: Variable defined which should be unmapped: var_d8h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0004caf0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_dch;\n    uint var_d8h;\n    uint var_d4h;\n    uint var_d0h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_3ch;\n    uint8_t var_35h;\n    uint var_34h;\n    uint *var_4h;\n    \n    var_dch = arg_8h;\n    var_4h = &var_34h;\n    while( true ) {\n        fcn.0007f916(&var_d0h, 0, 0x90);\n        if (*0x85090ffc != 0) break;\n        iVar1 = fcn.0007afa0(var_dch, &var_d4h, &var_3ch, &var_d0h, 0xffffffff, 0);\n        if (iVar1 == 0) {\n            var_35h = var_4ch;\n            fcn.0007f916(var_4h, 0, 0x30);\n            var_4h[1] = var_48h;\n            var_4h[3] = var_50h;\n            var_4h[2] = &var_d0h;\n            var_4h[4] = var_d4h;\n            var_4h[5] = var_3ch;\n            *(var_4h + 7) = var_35h;\n            if ((var_35h & 1) == 0) {\n                fcn.0004cc00(var_4h);\n            }\n            else {\n                fcn.0004d830(var_4h);\n            }\n            fcn.0007aab0(var_dch, var_d4h);\n        }\n        else {\n            var_dch = 10000;\n            fcn.0005bdd0(10000);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 481
    },
    "0004cc00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_154h\n// WARNING: Variable defined which should be unmapped: var_150h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0004cc00(int32_t arg_8h)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    ushort extraout_var;\n    ushort extraout_var_00;\n    int32_t var_154h;\n    uint var_150h;\n    uint var_14ch;\n    uint32_t var_148h;\n    int32_t var_144h;\n    uint *var_140h;\n    uint *var_13ch;\n    uint var_138h;\n    uint var_130h;\n    uint var_12ch;\n    uint var_128h;\n    uint var_124h;\n    uint var_b4h;\n    uint var_b0h;\n    uint *var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint32_t var_a0h;\n    uint *var_9ch;\n    uint var_98h;\n    uint8_t *var_18h;\n    uint *var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    var_a4h = *(arg_8h + 4);\n    if ((*(arg_8h + 0x1c) & 0x10) == 0) {\n        if (*(arg_8h + 0xc) + *(arg_8h + 0x14) < 0x3d) {\n            var_154h = 0x3c;\n        }\n        else {\n            var_154h = *(arg_8h + 0xc) + *(arg_8h + 0x14);\n        }\n        var_ach = fcn.00036360(var_154h);\n        if (var_ach == NULL) {\n            return;\n        }\n    }\n    else {\n        *(arg_8h + 0xc) = *(arg_8h + 0xc) + -4;\n        var_ach = fcn.00036360(*(arg_8h + 0xc) + 0x400);\n        if (var_ach == NULL) {\n            return;\n        }\n        var_18h = var_ach + *(arg_8h + 0xc);\n        var_9ch = var_18h + 0x200;\n        var_144h = *(arg_8h + 0x2c) + 4;\n        *var_9ch = *(arg_8h + 0x24);\n        fcn.0007f904(var_18h + 0x204, *(arg_8h + 0x28), *(arg_8h + 0x2c));\n        iVar2 = fcn.0006ea80(var_9ch, var_144h, *(arg_8h + 0x10), *(arg_8h + 0x14), (*(arg_8h + 0x1c) & 2) != 0, var_18h\n                             , &var_a8h);\n        if (iVar2 == 0) goto code_r0x0004d06d;\n        *(arg_8h + 0x14) = var_a8h;\n    }\n    fcn.0007f904(var_ach, *(arg_8h + 8), *(arg_8h + 0xc));\n    if ((*(arg_8h + 0x1c) & 0x10) == 0) {\n        fcn.0007f904(var_ach + *(arg_8h + 0xc), *(arg_8h + 0x10), *(arg_8h + 0x14));\n    }\n    var_a0h = *(arg_8h + 0xc) + *(arg_8h + 0x14);\n    if (var_a0h < 0x3c) {\n        fcn.0007f916(var_ach + var_a0h, 0, 0x3c - var_a0h);\n        var_a0h = 0x3c;\n    }\n    var_ch = *(arg_8h + 0xc);\n    var_13ch = var_ach;\n    if (var_ch < 0xe) goto code_r0x0004d06d;\n    var_140h = var_ach;\n    var_13ch = var_ach + 0xe;\n    var_ch = var_ch - 0xe;\n    fcn.0004d7d0(var_ach + 6, var_ach, 6);\n    iVar1 = fcn.000365f0(CONCAT22(extraout_var, *(var_140h + 3)));\n    if (iVar1 == 0x800) {\n        if (var_ch < 0x14) goto code_r0x0004d06d;\n        var_4h = var_13ch;\n        uVar3 = (*var_13ch & 0xf) << 2;\n        if ((uVar3 < 0x14) || (var_ch < uVar3)) goto code_r0x0004d06d;\n        fcn.0004d7d0(var_13ch + 4, var_13ch + 3, 4);\n        var_8h = var_4h[3];\n        var_10h = fcn.0003a950(var_4h[4], &var_a4h, &var_8h, &var_14ch, 6, &var_b4h, 6);\n        if (var_10h == 0) {\n            *var_140h = var_b4h;\n            *(var_140h + 1) = var_b0h;\n            *(var_140h + 6) = var_14ch;\n            *(var_140h + 10) = var_148h;\n        }\n    }\n    else {\n        iVar1 = fcn.000365f0(CONCAT22(extraout_var_00, *(var_140h + 3)));\n        if (iVar1 == -0x7923) {\n            if ((var_ch < 0x28) || (var_14h = var_13ch,  var_ch < 0x28)) goto code_r0x0004d06d;\n            fcn.0004d7d0(var_13ch + 2, var_13ch + 6, 0x10);\n            fcn.0007f916(&var_138h, 0, 0x80);\n            var_138h._0_2_ = 0x17;\n            var_130h = var_14h[6];\n            var_12ch = var_14h[7];\n            var_128h = var_14h[8];\n            var_124h = var_14h[9];\n            var_10h = fcn.0003af00(&var_138h, &var_a4h, &var_98h, &var_14ch, 6, &var_b4h, 6);\n            if (var_10h == 0) {\n                *var_140h = var_b4h;\n                *(var_140h + 1) = var_b0h;\n                *(var_140h + 6) = var_14ch;\n                *(var_140h + 10) = var_148h;\n            }\n        }\n    }\n    var_144h = arg_8h;\n    var_148h = var_ch;\n    var_10h = fcn.0004d090(var_13ch, var_ch, arg_8h);\n    if (var_10h == 0) {\n        fcn.0004d7b0(var_a4h, var_ach, var_a0h);\n    }\ncode_r0x0004d06d:\n    fcn.00036460(var_ach);\n    return;\n}\n",
        "token_count": 1787
    },
    "0004d830": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0004d830(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    uint *puVar4;\n    uint *puVar5;\n    uint var_18h;\n    uint *var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint *var_8h;\n    uint var_4h;\n    \n    fcn.000382a0(0x85090ff0, &var_4h, 1);\n    iVar1 = fcn.00026f20();\n    var_8h = NULL;\n    var_14h = *0x85091020;\n    while (var_14h != NULL) {\n        if (iVar1 - var_14h[8] < 0xea61) {\n            var_8h = var_14h;\n            var_14h = *var_14h;\n        }\n        else {\n            puVar2 = *var_14h;\n            *0x85091024 = *0x85091024 - (var_14h[5] + 0x30 + var_14h[3]);\n            puVar4 = puVar2;\n            if (var_8h != NULL) {\n                *var_8h = puVar2;\n                puVar4 = *0x85091020;\n            }\n            *0x85091020 = puVar4;\n            if (puVar2 == NULL) {\n                *0x85091034 = var_8h;\n            }\n            fcn.00036460(var_14h);\n            var_14h = puVar2;\n        }\n    }\n    fcn.000382d0(0x85090ff0, &var_4h, 1);\n    puVar2 = fcn.00036360(arg_8h[5] + 0x30 + arg_8h[3]);\n    if (puVar2 == NULL) {\n        var_18h = 0;\n    }\n    else {\n        puVar4 = arg_8h;\n        puVar5 = puVar2;\n        for (iVar1 = 0xc; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *puVar5 = *puVar4;\n            puVar4 = puVar4 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        puVar2[2] = puVar2 + 0xc;\n        puVar2[4] = puVar2[2] + puVar2[3];\n        fcn.0007f904(puVar2[2], arg_8h[2], arg_8h[3]);\n        fcn.0007f904(puVar2[4], arg_8h[4], arg_8h[5]);\n        uVar3 = fcn.00026f20();\n        puVar2[8] = uVar3;\n        *puVar2 = 0;\n        fcn.000382a0(0x85090ff0, &var_4h, 1);\n        if (*0x85091024 + 0x30 + arg_8h[5] + arg_8h[3] < 0x20001) {\n            puVar4 = puVar2;\n            if (*0x85091020 != NULL) {\n                **0x85091034 = puVar2;\n                puVar4 = *0x85091020;\n            }\n            *0x85091020 = puVar4;\n            *0x85091024 = puVar2[5] + 0x30 + puVar2[3] + *0x85091024;\n            var_18h = 1;\n            *0x85091034 = puVar2;\n        }\n        else {\n            var_18h = 0;\n        }\n        fcn.000382d0(0x85090ff0, &var_4h, 1);\n    }\n    return var_18h;\n}\n",
        "token_count": 886
    },
    "0004da40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t ** __cdecl fcn.0004da40(int32_t arg_8h)\n\n{\n    uint var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t *var_18h;\n    int32_t *var_14h;\n    uint32_t var_10h;\n    int32_t **var_ch;\n    int32_t **var_8h;\n    uint var_4h;\n    \n    fcn.000382a0(0x85090ff0, &var_4h, 1);\n    var_8h = NULL;\n    for (var_ch = *0x85091020; var_ch != NULL; var_ch = *var_ch) {\n        if (var_ch[3] == *(arg_8h + 0xc)) {\n            var_14h = *(arg_8h + 8);\n            var_18h = var_ch[2];\n            for (var_10h = *(arg_8h + 0xc); 3 < var_10h; var_10h = var_10h - 4) {\n                if (*var_18h != *var_14h) goto code_r0x0004dad1;\n                var_14h = var_14h + 1;\n                var_18h = var_18h + 1;\n            }\n            if (var_10h == 0) {\ncode_r0x0004db53:\n                var_20h = 0;\n            }\n            else {\ncode_r0x0004dad1:\n                var_1ch = *var_18h - *var_14h;\n                if (var_1ch == 0) {\n                    if (var_10h == 1) goto code_r0x0004db53;\n                    var_1ch = *(var_18h + 1) - *(var_14h + 1);\n                    if (var_1ch == 0) {\n                        if (var_10h == 2) goto code_r0x0004db53;\n                        var_1ch = *(var_18h + 2) - *(var_14h + 2);\n                        if (var_1ch == 0) {\n                            if ((var_10h == 3) || (var_1ch = *(var_18h + 3) - *(var_14h + 3),  var_1ch == 0))\n                            goto code_r0x0004db53;\n                        }\n                    }\n                }\n                var_20h = 1;\n                if (var_1ch < 1) {\n                    var_20h = -1;\n                }\n            }\n            if (var_20h == 0) break;\n        }\n        var_8h = var_ch;\n    }\n    if (var_ch != NULL) {\n        if (var_8h == NULL) {\n            *0x85091020 = *var_ch;\n        }\n        else {\n            *var_8h = *var_ch;\n        }\n        if (*var_ch == NULL) {\n            *0x85091034 = var_8h;\n        }\n        *var_ch = NULL;\n        *0x85091024 = *0x85091024 - (var_ch[5] + 0xc + var_ch[3]);\n    }\n    fcn.000382d0(0x85090ff0, &var_4h, 1);\n    return var_ch;\n}\n",
        "token_count": 760
    },
    "0004dc00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl\nfcn.0004dc00(uint arg_8h, uint arg_ch, uint8_t *arg_10h, char *arg_14h, uint32_t *arg_18h, uint32_t *arg_1ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_1ch;\n    uint var_14h;\n    char *var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar2 = fcn.0006e6f0(arg_8h, arg_ch, &var_ch, arg_14h, &var_4h);\n    if (iVar2 == 0) {\n        uVar3 = 0;\n    }\n    else {\n        if (var_4h == 0) {\n            *arg_18h = var_8h & 0x1f;\n            *arg_1ch = var_ch._3_1_;\n            *arg_10h = -((var_8h >> 5 & 1) != 0) & 2U | 0x11 | -((var_8h >> 6 & 1) != 0) & 4U;\n        }\n        else {\n            var_10h = arg_14h;\n            do {\n                cVar1 = *var_10h;\n                var_10h = var_10h + 1;\n            } while (cVar1 != '\\0');\n            *arg_18h = var_10h - (arg_14h + 1);\n            *arg_10h = 0x60;\n        }\n        uVar3 = 8;\n    }\n    return uVar3;\n}\n",
        "token_count": 395
    },
    "0004ddb0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0004ddb0(int32_t *arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint *arg_1ch, uint *arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint var_d8h;\n    int32_t var_d4h;\n    int32_t var_d0h;\n    int32_t *var_cch;\n    int32_t *var_c8h;\n    uint32_t var_c4h;\n    uint var_c0h;\n    int32_t var_bch;\n    int32_t var_b8h;\n    int32_t *var_b4h;\n    int32_t *var_b0h;\n    uint32_t var_ach;\n    uint var_a8h;\n    int32_t var_a4h;\n    int32_t var_a0h;\n    int32_t *var_9ch;\n    int32_t *var_98h;\n    uint32_t var_94h;\n    uint var_90h;\n    int32_t var_8ch;\n    int32_t var_88h;\n    int32_t *var_84h;\n    int32_t *var_80h;\n    uint32_t var_7ch;\n    uint var_78h;\n    int32_t var_74h;\n    int32_t var_70h;\n    int32_t *var_6ch;\n    int32_t *var_68h;\n    uint32_t var_64h;\n    uint var_60h;\n    int32_t var_5ch;\n    int32_t var_58h;\n    int32_t *var_54h;\n    int32_t *var_50h;\n    uint32_t var_4ch;\n    uint var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    int32_t *var_3ch;\n    int32_t *var_38h;\n    uint32_t var_34h;\n    uint var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    for (; (*arg_8h == 10 || ((*arg_8h == 0xd && (*(arg_8h + 1) == 10)))); arg_8h = arg_8h + 1) {\n        arg_ch = arg_ch + -1;\n    }\n    iVar1 = fcn.0007f892(arg_8h, 10, arg_ch);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    var_14h = iVar1 - arg_8h;\n    iVar1 = var_14h + 1;\n    if ((var_14h != 0) && (*(arg_8h + (var_14h - 1)) == 0xd)) {\n        var_14h = var_14h - 1;\n    }\n    if (var_14h < 0xe) {\n        return 0;\n    }\n    iVar2 = fcn.0007f892(arg_8h, 0x20, var_14h);\n    if (iVar2 == 0) {\n        return 0;\n    }\n    iVar2 = iVar2 - arg_8h;\n    if (iVar2 == 0) {\n        return 0;\n    }\n    if (iVar2 == 3) {\n        var_38h = 0x850112ac;\n        var_3ch = arg_8h;\n        for (var_34h = 3; 3 < var_34h; var_34h = var_34h - 4) {\n            if (*var_3ch != *var_38h) goto code_r0x0004ded3;\n            var_38h = var_38h + 1;\n            var_3ch = var_3ch + 1;\n        }\n        if (var_34h == 0) {\ncode_r0x0004df55:\n            var_44h = 0;\n        }\n        else {\ncode_r0x0004ded3:\n            var_40h = *var_3ch - *var_38h;\n            if (var_40h == 0) {\n                if (var_34h == 1) goto code_r0x0004df55;\n                var_40h = *(var_3ch + 1) - *(var_38h + 1);\n                if (var_40h == 0) {\n                    if (var_34h == 2) goto code_r0x0004df55;\n                    var_40h = *(var_3ch + 2) - *(var_38h + 2);\n                    if (var_40h == 0) {\n                        if ((var_34h == 3) || (var_40h = *(var_3ch + 3) - *(var_38h + 3),  var_40h == 0))\n                        goto code_r0x0004df55;\n                    }\n                }\n            }\n            var_44h = 1;\n            if (var_40h < 1) {\n                var_44h = -1;\n            }\n        }\n        if (var_44h != 0) goto code_r0x0004df82;\n    }\n    else {\ncode_r0x0004df82:\n        if (iVar2 != 4) {\n            return 0;\n        }\n        var_50h = 0x850112b0;\n        var_54h = arg_8h;\n        for (var_4ch = 4; 3 < var_4ch; var_4ch = var_4ch - 4) {\n            if (*var_54h != *var_50h) goto code_r0x0004dfca;\n            var_50h = var_50h + 1;\n            var_54h = var_54h + 1;\n        }\n        if (var_4ch == 0) {\ncode_r0x0004e04c:\n            var_5ch = 0;\n        }\n        else {\ncode_r0x0004dfca:\n            var_58h = *var_54h - *var_50h;\n            if (var_58h == 0) {\n                if (var_4ch == 1) goto code_r0x0004e04c;\n                var_58h = *(var_54h + 1) - *(var_50h + 1);\n                if (var_58h == 0) {\n                    if (var_4ch == 2) goto code_r0x0004e04c;\n                    var_58h = *(var_54h + 2) - *(var_50h + 2);\n                    if (var_58h == 0) {\n                        if ((var_4ch == 3) || (var_58h = *(var_54h + 3) - *(var_50h + 3),  var_58h == 0))\n                        goto code_r0x0004e04c;\n                    }\n                }\n            }\n            var_5ch = 1;\n            if (var_58h < 1) {\n                var_5ch = -1;\n            }\n        }\n        if (var_5ch != 0) {\n            return 0;\n        }\n    }\n    iVar5 = iVar2 + 1;\n    iVar3 = fcn.0007f892(arg_8h + iVar5, 0x20, arg_ch - iVar5);\n    if (iVar3 == 0) {\n        return 0;\n    }\n    uVar6 = iVar3 - (arg_8h + iVar5);\n    if (uVar6 == 0) {\n        return 0;\n    }\n    if (*(arg_8h + iVar5) != 0x2f) {\n        if (uVar6 < 8) {\n            return 0;\n        }\n        var_68h = 0x850112b8;\n        var_6ch = arg_8h + iVar5;\n        for (var_64h = 7; 3 < var_64h; var_64h = var_64h - 4) {\n            if (*var_6ch != *var_68h) goto code_r0x0004e121;\n            var_68h = var_68h + 1;\n            var_6ch = var_6ch + 1;\n        }\n        if (var_64h == 0) {\ncode_r0x0004e1a3:\n            var_74h = 0;\n        }\n        else {\ncode_r0x0004e121:\n            var_70h = *var_6ch - *var_68h;\n            if (var_70h == 0) {\n                if (var_64h == 1) goto code_r0x0004e1a3;\n                var_70h = *(var_6ch + 1) - *(var_68h + 1);\n                if (var_70h == 0) {\n                    if (var_64h == 2) goto code_r0x0004e1a3;\n                    var_70h = *(var_6ch + 2) - *(var_68h + 2);\n                    if (var_70h == 0) {\n                        if ((var_64h == 3) || (var_70h = *(var_6ch + 3) - *(var_68h + 3),  var_70h == 0))\n                        goto code_r0x0004e1a3;\n                    }\n                }\n            }\n            var_74h = 1;\n            if (var_70h < 1) {\n                var_74h = -1;\n            }\n        }\n        if (var_74h != 0) {\n            return 0;\n        }\n    }\n    iVar2 = iVar2 + 2 + uVar6;\n    if (var_14h - iVar2 != 8) {\n        return 0;\n    }\n    var_80h = 0x850112c0;\n    var_84h = arg_8h + iVar2;\n    for (var_7ch = 5; 3 < var_7ch; var_7ch = var_7ch - 4) {\n        if (*var_84h != *var_80h) goto code_r0x0004e23c;\n        var_80h = var_80h + 1;\n        var_84h = var_84h + 1;\n    }\n    if (var_7ch == 0) {\ncode_r0x0004e2e3:\n        var_8ch = 0;\n    }\n    else {\ncode_r0x0004e23c:\n        var_88h = *var_84h - *var_80h;\n        if (var_88h == 0) {\n            if (var_7ch == 1) goto code_r0x0004e2e3;\n            var_88h = *(var_84h + 1) - *(var_80h + 1);\n            if (var_88h == 0) {\n                if (var_7ch == 2) goto code_r0x0004e2e3;\n                var_88h = *(var_84h + 2) - *(var_80h + 2);\n                if (var_88h == 0) {\n                    if ((var_7ch == 3) || (var_88h = *(var_84h + 3) - *(var_80h + 3),  var_88h == 0))\n                    goto code_r0x0004e2e3;\n                }\n            }\n        }\n        var_8ch = 1;\n        if (var_88h < 1) {\n            var_8ch = -1;\n        }\n    }\n    if (var_8ch == 0) {\n        if (*(arg_8h + iVar2 + 6) == 0x2e) {\n            iVar2 = fcn.00071d50(arg_8h + iVar1, arg_ch - iVar1, arg_18h, arg_10h, arg_14h);\n            if (iVar2 == 0) {\n                uVar4 = 0;\n            }\n            else {\n                if ((arg_1ch != NULL) || (arg_20h != NULL)) {\n                    if (arg_1ch != NULL) {\n                        *arg_1ch = 0;\n                    }\n                    if (arg_20h != NULL) {\n                        *arg_20h = 0;\n                    }\ncode_r0x0004e399:\n                    var_2ch = iVar1;\n                    var_18h = fcn.0007f892(arg_8h + var_2ch, 10, var_14h - var_2ch);\n                    if (var_18h != 0) {\n                        var_18h = var_18h - arg_8h;\n                        iVar1 = var_18h + 1;\n                        if ((var_18h != 0) && (*(arg_8h + var_18h + -1) == 0xd)) {\n                            var_18h = var_18h + -1;\n                        }\n                        iVar2 = fcn.0007f892(arg_8h + var_2ch, 0x3a, var_18h - var_2ch);\n                        if (iVar2 == 0) goto code_r0x0004e8dd;\n                        var_ach = iVar2 - (arg_8h + var_2ch);\n                        if ((arg_1ch != NULL) && (var_ach == 0xe)) {\n                            var_98h = 0x8508dea0;\n                            var_9ch = arg_8h + var_2ch;\n                            for (var_94h = var_ach; 3 < var_94h; var_94h = var_94h - 4) {\n                                if (*var_9ch != *var_98h) goto code_r0x0004e495;\n                                var_98h = var_98h + 1;\n                                var_9ch = var_9ch + 1;\n                            }\n                            if (var_94h == 0) {\ncode_r0x0004e56b:\n                                var_a4h = 0;\n                            }\n                            else {\ncode_r0x0004e495:\n                                var_a0h = *var_9ch - *var_98h;\n                                if (var_a0h == 0) {\n                                    if (var_94h == 1) goto code_r0x0004e56b;\n                                    var_a0h = *(var_9ch + 1) - *(var_98h + 1);\n                                    if (var_a0h == 0) {\n                                        if (var_94h == 2) goto code_r0x0004e56b;\n                                        var_a0h = *(var_9ch + 2) - *(var_98h + 2);\n                                        if (var_a0h == 0) {\n                                            if ((var_94h == 3) ||\n                                               (var_a0h = *(var_9ch + 3) - *(var_98h + 3),  var_a0h == 0))\n                                            goto code_r0x0004e56b;\n                                        }\n                                    }\n                                }\n                                var_a4h = 1;\n                                if (var_a0h < 1) {\n                                    var_a4h = -1;\n                                }\n                            }\n                            if (var_a4h == 0) {\n                                uVar4 = fcn.00036fe0(iVar2 + 2, 0, 0);\n                                *arg_1ch = uVar4;\n                                goto code_r0x0004e399;\n                            }\n                        }\n                        if ((arg_20h != NULL) && (var_ach == 10)) {\n                            var_b0h = 0x8507c62c;\n                            var_b4h = arg_8h + var_2ch;\n                            for (; 3 < var_ach; var_ach = var_ach - 4) {\n                                if (*var_b4h != *var_b0h) goto code_r0x0004e63e;\n                                var_b0h = var_b0h + 1;\n                                var_b4h = var_b4h + 1;\n                            }\n                            if (var_ach == 0) {\ncode_r0x0004e714:\n                                var_bch = 0;\n                            }\n                            else {\ncode_r0x0004e63e:\n                                var_b8h = *var_b4h - *var_b0h;\n                                if (var_b8h == 0) {\n                                    if (var_ach == 1) goto code_r0x0004e714;\n                                    var_b8h = *(var_b4h + 1) - *(var_b0h + 1);\n                                    if (var_b8h == 0) {\n                                        if (var_ach == 2) goto code_r0x0004e714;\n                                        var_b8h = *(var_b4h + 2) - *(var_b0h + 2);\n                                        if (var_b8h == 0) {\n                                            if ((var_ach == 3) ||\n                                               (var_b8h = *(var_b4h + 3) - *(var_b0h + 3),  var_b8h == 0))\n                                            goto code_r0x0004e714;\n                                        }\n                                    }\n                                }\n                                var_bch = 1;\n                                if (var_b8h < 1) {\n                                    var_bch = -1;\n                                }\n                            }\n                            if (var_bch == 0) {\n                                var_c8h = 0x850112c8;\n                                var_cch = iVar2 + 2;\n                                for (var_c4h = 5; 3 < var_c4h; var_c4h = var_c4h - 4) {\n                                    if (*var_cch != *var_c8h) goto code_r0x0004e7b5;\n                                    var_c8h = var_c8h + 1;\n                                    var_cch = var_cch + 1;\n                                }\n                                if (var_c4h == 0) {\ncode_r0x0004e88b:\n                                    var_d4h = 0;\n                                }\n                                else {\ncode_r0x0004e7b5:\n                                    var_d0h = *var_cch - *var_c8h;\n                                    if (var_d0h == 0) {\n                                        if (var_c4h == 1) goto code_r0x0004e88b;\n                                        var_d0h = *(var_cch + 1) - *(var_c8h + 1);\n                                        if (var_d0h == 0) {\n                                            if (var_c4h == 2) goto code_r0x0004e88b;\n                                            var_d0h = *(var_cch + 2) - *(var_c8h + 2);\n                                            if (var_d0h == 0) {\n                                                if ((var_c4h == 3) ||\n                                                   (var_d0h = *(var_cch + 3) - *(var_c8h + 3),  var_d0h == 0))\n                                                goto code_r0x0004e88b;\n                                            }\n                                        }\n                                    }\n                                    var_d4h = 1;\n                                    if (var_d0h < 1) {\n                                        var_d4h = -1;\n                                    }\n                                }\n                                if (var_d4h == 0) {\n                                    *arg_20h = 1;\n                                }\n                            }\n                        }\n                        goto code_r0x0004e399;\n                    }\n                }\ncode_r0x0004e8dd:\n                uVar4 = 1;\n            }\n        }\n        else {\n            uVar4 = 0;\n        }\n    }\n    else {\n        uVar4 = 0;\n    }\n    return uVar4;\n}\n",
        "token_count": 4522
    },
    "0004e8f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_65ch\n// WARNING: Variable defined which should be unmapped: var_654h\n// WARNING: Variable defined which should be unmapped: var_650h\n// WARNING: Variable defined which should be unmapped: var_64ch\n// WARNING: Variable defined which should be unmapped: var_648h\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0004e8f0(int32_t arg_8h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint var_65ch;\n    uint var_654h;\n    uint *var_650h;\n    uint var_64ch;\n    uint var_648h;\n    uint var_5fch;\n    uint var_5f8h;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint *var_ch;\n    uint var_8h;\n    uint var_2h;\n    \n    var_14h = 0;\n    fcn.00034e80(arg_8h + 0x20, &var_648h, 0x47);\n    puVar1 = &var_648h;\n    do {\n        var_650h = puVar1;\n        puVar1 = var_650h + 1;\n    } while (*var_650h != '\\0');\n    fcn.0007f7f0(var_650h, 0x850112d0, *(arg_8h + 0xa0));\n    var_ch = fcn.00036360(0xbd0);\n    if (var_ch != NULL) {\n        fcn.0007f916(var_ch, 0, 0xbd0);\n        *var_ch = *(arg_8h + 0x10);\n        var_ch[1] = *(arg_8h + 0x14);\n        if (*(arg_8h + 0x690) < 0xbb9) {\n            var_ch[3] = 0;\n            var_ch[2] = *(arg_8h + 0x690) % 3000;\n            var_ch[4] = *(arg_8h + 0x690);\n            fcn.0007f904(var_ch + 5, arg_8h + 0xb4, *(arg_8h + 0x690));\n            while( true ) {\n                var_64ch = 0;\n                iVar2 = fcn.0004f810(&var_5f8h, &var_64ch, var_ch);\n                if ((iVar2 == 0) ||\n                   (iVar2 = fcn.0004ddb0(&var_5f8h, var_64ch, &var_14h, &var_10h, &var_8h, &var_18h, var_ch + 0x2f3), \n                   iVar2 == 0)) break;\n                if ((var_2h & 1) != 0) {\n                    fcn.0004f9b0(&var_5f8h, var_64ch, &var_648h, 1, 0);\n                }\n                iVar2 = fcn.00071f60(&var_8h, var_14h + 8, var_10h + -8, &var_648h, var_18h, var_ch);\n                if ((iVar2 != 0) || ((var_ch[0x2f3] & 1) != 0)) break;\n                fcn.00036460(var_14h);\n                var_14h = 0;\n            }\n        }\n    }\n    fcn.00036460(var_14h);\n    fcn.00036460(var_ch);\n    fcn.00053d60(*(arg_8h + 0x10), *(arg_8h + 0x14));\n    fcn.00053ee0(arg_8h);\n    return 0;\n}\n",
        "token_count": 895
    },
    "0004eb70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0004eb70(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint *puVar2;\n    char *pcVar3;\n    int32_t iVar4;\n    uint var_22ch;\n    uint var_224h;\n    uint *var_220h;\n    uint var_21ch;\n    uint var_214h;\n    uint *var_210h;\n    uint var_20ch;\n    uint var_204h;\n    uint *var_200h;\n    uint var_1fch;\n    uint var_1f8h;\n    int32_t var_1ach;\n    int32_t var_1a8h;\n    uint *var_1a4h;\n    uint var_1a0h;\n    int32_t var_9ch;\n    uint var_98h;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    char *var_4h;\n    \n    var_1ach = arg_8h;\n    var_10h = 0;\n    var_1a4h = NULL;\n    fcn.00034e80(arg_8h + 0x20, &var_1f8h, 0x47);\n    puVar2 = &var_1f8h;\n    do {\n        var_200h = puVar2;\n        puVar2 = var_200h + 1;\n    } while (*var_200h != '\\0');\n    fcn.0007f7f0(var_200h, 0x850112d0, *(var_1ach + 0xa0));\n    var_1a8h = var_1ach + 0xb4;\n    iVar4 = *(var_1ach + 0x690);\n    fcn.0004f9b0(var_1a8h, iVar4, &var_1f8h, 0, &var_10h);\n    if (*(var_1ach + 0x18) == 6) {\n        fcn.0007f7f0(&var_98h, 0x850112d8, 0xd, 0x8508e310);\n        var_210h = &var_98h;\n        do {\n            cVar1 = *var_210h;\n            var_210h = var_210h + 1;\n        } while (cVar1 != '\\0');\n        fcn.00053e00(*(var_1ach + 0x10), *(var_1ach + 0x14), &var_98h, var_210h - (&var_98h + 1));\n    }\n    else {\n        pcVar3 = fcn.0007f892(var_1a8h + 5, 0x3f, iVar4 + -5);\n        var_4h = pcVar3;\n        if (((pcVar3 != NULL) && (var_4h = pcVar3 + 0xb,  *var_4h == '&')) && (pcVar3[0xc] == 'a')) {\n            var_4h = pcVar3 + 0xd;\n            var_18h = fcn.0007f892(var_4h, 0x20, iVar4 - (var_4h - var_1a8h));\n            if ((var_18h != 0) && ((var_18h - var_4h) + 1U < 0x101)) {\n                var_9ch = fcn.000353e0(var_4h, &var_1a0h, var_18h - var_4h);\n                if (var_9ch != -1) {\n                    for (var_ch = 0; var_ch < var_9ch; var_ch = var_ch + 1) {\n                        *(&var_1a0h + var_ch) = *(&var_1a0h + var_ch) ^ *(var_ch + -0x7af72150);\n                    }\n                    *(&var_1a0h + var_9ch) = 0;\n                    fcn.0007be70(var_10h, &var_1a0h, var_9ch + 1, 0);\n                    iVar4 = fcn.0007bf30(var_10h, &var_1a4h, &var_14h, 20000, 0);\n                    if (iVar4 == 0) {\n                        if (var_14h == 4) {\n                            var_8h = *var_1a4h;\n                            fcn.0007c0d0(var_10h, var_1a4h);\n                            fcn.0007f7f0(&var_98h, 0x85011338, var_8h);\n                            var_220h = &var_98h;\n                            do {\n                                cVar1 = *var_220h;\n                                var_220h = var_220h + 1;\n                            } while (cVar1 != '\\0');\n                            iVar4 = fcn.00053e00(*(var_1ach + 0x10), *(var_1ach + 0x14), &var_98h, \n                                                 var_220h - (&var_98h + 1));\n                            if (iVar4 == 0) {\n                                while (iVar4 = fcn.0007bf30(var_10h, &var_1a4h, &var_14h, 20000, 0),  iVar4 == 0) {\n                                    iVar4 = fcn.00053e00(*(var_1ach + 0x10), *(var_1ach + 0x14), var_1a4h, var_14h);\n                                    if (iVar4 != 0) goto code_r0x0004ef88;\n                                    fcn.0007c0d0(var_10h, var_1a4h);\n                                }\n                                var_1a4h = NULL;\n                            }\n                        }\n                        else {\n                            fcn.0007c0d0(var_10h, var_1a4h);\n                        }\n                    }\n                }\n            }\n        }\n    }\ncode_r0x0004ef88:\n    fcn.00036460(var_1a4h);\n    fcn.0007b950(&var_10h, 0);\n    fcn.00053d60(*(var_1ach + 0x10), *(var_1ach + 0x14));\n    fcn.00053ee0(var_1ach);\n    return 0;\n}\n",
        "token_count": 1468
    },
    "0004efd0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nint32_t __cdecl fcn.0004efd0(uint arg_8h, uint32_t arg_ch, int32_t *arg_10h, uint32_t *arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_4h = arg_8h;\n    if (arg_ch == 0) {\n        *arg_10h = 0;\n        *arg_14h = 0;\n        var_ch = 0;\n    }\n    else {\n        iVar1 = fcn.00036330(arg_ch);\n        *arg_10h = iVar1;\n        if (*arg_10h == 0) {\n            var_ch = 0x21590004;\n        }\n        else {\n            *arg_14h = 0;\n            while (*arg_14h < arg_ch) {\n                var_8h = arg_ch - *arg_14h;\n                iVar1 = fcn.0004f4b0(var_4h, *arg_10h + *arg_14h, var_8h, &var_8h, 0);\n                if (iVar1 == 0) {\n                    var_ch = -1;\n                    goto code_r0x0004f08b;\n                }\n                if (var_8h == 0) {\n                    var_ch = -1;\n                    goto code_r0x0004f08b;\n                }\n                *arg_14h = *arg_14h + var_8h;\n            }\n            var_ch = 0;\n        }\ncode_r0x0004f08b:\n        if (var_ch != 0) {\n            fcn.00036460(*arg_10h);\n            *arg_10h = 0;\n            *arg_14h = 0;\n        }\n    }\n    return var_ch;\n}\n",
        "token_count": 462
    },
    "0004f0c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0004f0c0(uint *arg_8h, uint *arg_ch, uint *arg_10h, uint32_t arg_14h)\n\n{\n    char cVar1;\n    uchar uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint var_22ch;\n    uint var_224h;\n    uint *var_220h;\n    uint var_21ch;\n    uint var_218h;\n    uint32_t var_214h;\n    uint var_210h;\n    uint var_208h;\n    uint *var_8h;\n    uint *var_4h;\n    \n    var_8h = arg_8h;\n    if ((arg_14h == 0) && ((*(arg_ch + 6) & 2) != 0)) {\n        uVar3 = fcn.0007f77e();\n        uVar3 = uVar3 & 0x8000001f;\n        if (uVar3 < 0) {\n            uVar3 = (uVar3 - 1 | 0xffffffe0) + 1;\n        }\n        arg_14h = uVar3 * 8;\n        arg_10h = &var_8h + uVar3 * -2;\n        var_4h = arg_10h;\n        for (var_214h = 0; var_214h < arg_14h; var_214h = var_214h + 1) {\n            uVar2 = fcn.0007f77e();\n            *var_4h = uVar2;\n            var_4h = var_4h + 1;\n        }\n    }\n    if ((var_8h[0x2f3] & 1) == 0) {\n        var_21ch = 0x8501139c;\n    }\n    else {\n        var_21ch = 0x850112c8;\n    }\n    fcn.0007f7f0(&var_210h, 0x850113a8, arg_14h + 8, var_21ch);\n    var_220h = &var_210h;\n    do {\n        cVar1 = *var_220h;\n        var_220h = var_220h + 1;\n    } while (cVar1 != '\\0');\n    var_214h = var_220h - (&var_210h + 1);\n    *(&var_210h + var_214h) = *arg_ch;\n    *(&stack0xfffffdf1 + var_214h + -1) = arg_ch[1];\n    fcn.00071bb0(&var_210h + var_214h);\n    if ((arg_14h != 0) && (arg_14h < 0x208 - (var_214h + 8))) {\n        fcn.0007f70c(&var_208h + var_214h, arg_10h, arg_14h);\n        var_214h = var_214h + arg_14h;\n        arg_14h = 0;\n    }\n    iVar4 = fcn.00053e00(*var_8h, var_8h[1], &var_210h, var_214h + 8);\n    if ((iVar4 == 0) && ((arg_14h == 0 || (iVar4 = fcn.00053e00(*var_8h, var_8h[1], arg_10h, arg_14h),  iVar4 == 0)))) {\n        iVar4 = 0;\n    }\n    return iVar4;\n}\n",
        "token_count": 804
    },
    "0004f300": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0004f300(uint *arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint var_1a4h;\n    uint var_19ch;\n    uint *var_198h;\n    uint var_194h;\n    uint var_18ch;\n    uint *var_188h;\n    uint var_184h;\n    uint var_17ch;\n    uint *var_178h;\n    uint var_174h;\n    uint var_170h;\n    int32_t var_108h;\n    uint *var_104h;\n    uint var_100h;\n    \n    var_104h = arg_8h;\n    puVar3 = 0x850113e0;\n    puVar4 = &var_100h;\n    for (iVar2 = 0x12; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    *puVar4 = *puVar3;\n    fcn.0007f7f0(&var_170h, 0x8501142c, arg_ch);\n    var_178h = &var_170h;\n    do {\n        cVar1 = *var_178h;\n        var_178h = var_178h + 1;\n    } while (cVar1 != '\\0');\n    var_108h = var_178h - (&var_170h + 1);\n    puVar3 = &var_100h;\n    do {\n        var_188h = puVar3;\n        puVar3 = var_188h + 1;\n    } while (*var_188h != '\\0');\n    fcn.0007f7f0(var_188h, 0x85011440, var_108h);\n    var_198h = &var_100h;\n    do {\n        cVar1 = *var_198h;\n        var_198h = var_198h + 1;\n    } while (cVar1 != '\\0');\n    fcn.00053e00(*var_104h, var_104h[1], &var_100h, var_198h - (&var_100h + 1));\n    fcn.00053e00(*var_104h, var_104h[1], &var_170h, var_108h);\n    return;\n}\n",
        "token_count": 569
    },
    "0004f4b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0004f4b0(uint *arg_8h, int32_t arg_ch, uint32_t arg_10h, uint32_t *arg_14h, int32_t arg_18h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    if (arg_8h[4] == 0) {\n        if (arg_10h < 0xbb9) {\n            iVar2 = fcn.00053e40(*arg_8h, arg_8h[1], arg_8h + 5, 3000, &var_4h, 60000);\n            if ((iVar2 != 0) || (var_4h == 0)) {\n                return 0;\n            }\n            arg_8h[3] = 0;\n            arg_8h[2] = var_4h % 3000;\n            arg_8h[4] = var_4h;\n            if (var_4h < arg_10h) {\n                *arg_14h = var_4h;\n            }\n            else {\n                *arg_14h = arg_10h;\n            }\n            fcn.0007f904(arg_ch, arg_8h + 5, *arg_14h);\n            if (arg_18h == 0) {\n                arg_8h[3] = *arg_14h % 3000;\n                arg_8h[4] = arg_8h[4] - *arg_14h;\n            }\n        }\n        else {\n            if (arg_18h != 0) {\n                return 0;\n            }\n            iVar2 = fcn.00053e40(*arg_8h, arg_8h[1], arg_ch, arg_10h, arg_14h, 60000);\n            if ((iVar2 != 0) || (*arg_14h == 0)) {\n                return 0;\n            }\n        }\n    }\n    else {\n        if (arg_8h[4] <= arg_10h && arg_10h != arg_8h[4]) {\n            arg_10h = arg_8h[4];\n        }\n        if (arg_8h[3] < arg_8h[2]) {\n            fcn.0007f904(arg_ch, arg_8h + arg_8h[3] + 0x14, arg_10h);\n        }\n        else {\n            uVar1 = 3000 - arg_8h[3];\n            if (arg_10h < uVar1) {\n                fcn.0007f904(arg_ch, arg_8h + arg_8h[3] + 0x14, arg_10h);\n            }\n            else {\n                fcn.0007f904(arg_ch, arg_8h + arg_8h[3] + 0x14, uVar1);\n                fcn.0007f904(arg_ch + uVar1, arg_8h + 5, arg_10h - uVar1);\n            }\n        }\n        if (arg_18h == 0) {\n            arg_8h[3] = (arg_8h[3] + arg_10h) % 3000;\n            arg_8h[4] = arg_8h[4] - arg_10h;\n        }\n        *arg_14h = arg_10h;\n    }\n    return 1;\n}\n",
        "token_count": 783
    },
    "0004f6d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0004f6d0(uint *arg_8h)\n\n{\n    uint uVar1;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (arg_8h[4] == 3000) {\n        uVar1 = 0;\n    }\n    else {\n        if (arg_8h[4] == 0) {\n            arg_8h[4] = 0;\n            arg_8h[2] = 0;\n            arg_8h[3] = 0;\n            var_8h = fcn.00053e40(*arg_8h, arg_8h[1], arg_8h + 5, 3000, &var_4h, 60000);\n        }\n        else if (arg_8h[2] < arg_8h[3] || arg_8h[2] == arg_8h[3]) {\n            var_8h = fcn.00053e40(*arg_8h, arg_8h[1], arg_8h + arg_8h[2] + 0x14, arg_8h[3] - arg_8h[2], &var_4h, 60000);\n        }\n        else {\n            var_8h = fcn.00053e40(*arg_8h, arg_8h[1], arg_8h + arg_8h[2] + 0x14, 3000 - arg_8h[2], &var_4h, 60000);\n        }\n        if ((var_8h == 0) && (var_4h != 0)) {\n            arg_8h[2] = (arg_8h[2] + var_4h) % 3000;\n            arg_8h[4] = arg_8h[4] + var_4h;\n            uVar1 = 1;\n        }\n        else {\n            uVar1 = 0;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 457
    },
    "0004f810": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.0004f810(int32_t arg_8h, uint32_t *arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    do {\n        iVar1 = fcn.0004f4b0(arg_10h, arg_8h, 0x5dc, arg_ch, 1);\n        if (iVar1 == 0) {\n            return 0;\n        }\n        if (*arg_ch < 5) {\n            return 0;\n        }\n        for (var_ch = 0;\n            (var_ch < *arg_ch &&\n            ((*(arg_8h + var_ch) == '\\n' || ((*(arg_8h + var_ch) == '\\r' && (*(arg_8h + var_ch + 1) == '\\n'))))));\n            var_ch = var_ch + 1) {\n        }\n        var_4h = 0;\n        for (; var_ch < *arg_ch; var_ch = var_ch + 1) {\n            if ((*(arg_8h + var_ch) == '\\r') && (var_ch = var_ch + 1,  *arg_ch <= var_ch)) {\n                return 0;\n            }\n            if (*(arg_8h + var_ch) == '\\n') {\n                uVar2 = var_ch + 1;\n                if (*arg_ch <= uVar2) {\n                    return 0;\n                }\n                if ((*(arg_8h + uVar2) == '\\r') && (uVar2 = var_ch + 2,  *arg_ch <= var_ch + 2)) {\n                    return 0;\n                }\n                var_ch = uVar2;\n                if (*(arg_8h + var_ch) == '\\n') {\n                    var_4h = 1;\n                    break;\n                }\n            }\n        }\n        if (var_4h != 0) {\n            *arg_ch = var_ch + 1;\n            iVar1 = fcn.0004f4b0(arg_10h, arg_8h, *arg_ch, &var_8h, 0);\n            if (iVar1 == 0) {\n                return 0;\n            }\n            if (var_8h != *arg_ch) {\n                return 0;\n            }\n            return 1;\n        }\n        iVar1 = fcn.0004f6d0(arg_10h);\n        if (iVar1 == 0) {\n            return 0;\n        }\n    } while( true );\n}\n",
        "token_count": 591
    },
    "0004f9b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0004f9b0(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h, int32_t *arg_18h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint var_164h;\n    uint var_15ch;\n    uint *var_158h;\n    uint var_154h;\n    uint var_150h;\n    uint var_148h;\n    uint *var_144h;\n    uint var_140h;\n    uint var_13ch;\n    uint var_138h;\n    uint *var_b8h;\n    uint *var_b4h;\n    int32_t var_b0h;\n    uint *var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_88h;\n    int32_t var_4h;\n    \n    var_140h = 0;\n    var_4h = 0;\n    fcn.0002c810(&var_88h, 0x80);\n    var_144h = &var_88h;\n    do {\n        cVar1 = *var_144h;\n        var_144h = var_144h + 1;\n    } while (cVar1 != '\\0');\n    iVar2 = fcn.0007b640(&var_4h, 0x8508e320, 0, 0, &var_88h, var_144h + (1 - (&var_88h + 1)), 2);\n    if ((iVar2 == 0) && (iVar2 = fcn.0007bc60(var_4h, 0),  iVar2 == 0)) {\n        if (arg_14h == 0) {\n            var_154h = 0x8500d82e;\n        }\n        else {\n            var_154h = 0x85011458;\n        }\n        fcn.0004a010(&var_138h, 0x80, 0x8501145c, var_154h);\n        fcn.0007f916(&var_b8h, 0, 0x30);\n        var_b4h = &var_138h;\n        var_158h = &var_138h;\n        do {\n            cVar1 = *var_158h;\n            var_158h = var_158h + 1;\n        } while (cVar1 != '\\0');\n        var_b0h = var_158h - (&var_138h + 1);\n        var_b8h = &var_a8h;\n        var_a4h = arg_8h;\n        var_a0h = arg_ch;\n        var_a8h = &var_98h;\n        var_94h = 0x8500d82e;\n        var_90h = 1;\n        iVar2 = fcn.0007c290(var_4h, &var_b8h, 0);\n        if (iVar2 == 0) {\n            if (arg_18h != NULL) {\n                *arg_18h = var_4h;\n                var_4h = 0;\n            }\n            var_140h = 1;\n        }\n    }\n    if (var_4h != 0) {\n        fcn.0007b950(&var_4h, 0);\n    }\n    return var_140h;\n}\n",
        "token_count": 772
    },
    "0004fbd0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.0004fbd0(void)\n\n{\n    char *pcVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint var_18h;\n    uint var_10h;\n    char *var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.000295a0(0x2f1, 0x850910c0, 0x52, 0x85092be4);\n    if (var_4h == 0) {\n        iVar3 = fcn.000295a0(0x2f2, 0x85091068, 0x52, &var_8h);\n        if (iVar3 == 0) {\n            var_ch = 0x850910c0;\n            pcVar1 = var_ch;\n            do {\n                var_ch = pcVar1;\n                pcVar1 = var_ch + 1;\n            } while (*var_ch != '\\0');\n            *0x85092be4 = var_ch + 0x7af6ef40;\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = iVar3 + 0x191U | 0x21590000;\n        }\n    }\n    else {\n        uVar2 = var_4h + 0x191U | 0x21590000;\n    }\n    return uVar2;\n}\n",
        "token_count": 319
    },
    "0004fc80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0004fc80(int32_t *arg_8h, uint32_t arg_ch)\n\n{\n    uint var_64h;\n    uint var_60h;\n    int32_t var_5ch;\n    int32_t var_58h;\n    int32_t *var_54h;\n    int32_t *var_50h;\n    uint32_t var_4ch;\n    uint var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    int32_t *var_3ch;\n    int32_t *var_38h;\n    uint32_t var_34h;\n    uint var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t *var_24h;\n    int32_t *var_20h;\n    uint32_t var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t *var_ch;\n    int32_t *var_8h;\n    uint32_t var_4h;\n    \n    if (*0x85092be4 == 0) {\n        return 0;\n    }\n    if (arg_ch <= *0x85092be4 + 0x11) {\n        return 0;\n    }\n    var_8h = 0x85011464;\n    var_ch = arg_8h;\n    for (var_4h = 5; 3 < var_4h; var_4h = var_4h - 4) {\n        if (*var_ch != *var_8h) goto code_r0x0004fce2;\n        var_8h = var_8h + 1;\n        var_ch = var_ch + 1;\n    }\n    if (var_4h == 0) {\ncode_r0x0004fd64:\n        var_14h = 0;\n    }\n    else {\ncode_r0x0004fce2:\n        var_10h = *var_ch - *var_8h;\n        if (var_10h == 0) {\n            if (var_4h == 1) goto code_r0x0004fd64;\n            var_10h = *(var_ch + 1) - *(var_8h + 1);\n            if (var_10h == 0) {\n                if (var_4h == 2) goto code_r0x0004fd64;\n                var_10h = *(var_ch + 2) - *(var_8h + 2);\n                if (var_10h == 0) {\n                    if ((var_4h == 3) || (var_10h = *(var_ch + 3) - *(var_8h + 3),  var_10h == 0))\n                    goto code_r0x0004fd64;\n                }\n            }\n        }\n        var_14h = 1;\n        if (var_10h < 1) {\n            var_14h = -1;\n        }\n    }\n    if (var_14h == 0) {\n        var_20h = 0x850910c0;\n        var_24h = arg_8h + 1;\n        for (var_1ch = *0x85092be4; 3 < var_1ch; var_1ch = var_1ch - 4) {\n            if (*var_24h != *var_20h) goto code_r0x0004fdd4;\n            var_20h = var_20h + 1;\n            var_24h = var_24h + 1;\n        }\n        if (var_1ch == 0) {\ncode_r0x0004fe56:\n            var_2ch = 0;\n        }\n        else {\ncode_r0x0004fdd4:\n            var_28h = *var_24h - *var_20h;\n            if (var_28h == 0) {\n                if (var_1ch == 1) goto code_r0x0004fe56;\n                var_28h = *(var_24h + 1) - *(var_20h + 1);\n                if (var_28h == 0) {\n                    if (var_1ch == 2) goto code_r0x0004fe56;\n                    var_28h = *(var_24h + 2) - *(var_20h + 2);\n                    if (var_28h == 0) {\n                        if ((var_1ch == 3) || (var_28h = *(var_24h + 3) - *(var_20h + 3),  var_28h == 0))\n                        goto code_r0x0004fe56;\n                    }\n                }\n            }\n            var_2ch = 1;\n            if (var_28h < 1) {\n                var_2ch = -1;\n            }\n        }\n        if (var_2ch == 0) {\n            return 1;\n        }\n    }\n    var_38h = 0x8501146c;\n    var_3ch = arg_8h;\n    for (var_34h = 6; 3 < var_34h; var_34h = var_34h - 4) {\n        if (*var_3ch != *var_38h) goto code_r0x0004fec1;\n        var_38h = var_38h + 1;\n        var_3ch = var_3ch + 1;\n    }\n    if (var_34h == 0) {\ncode_r0x0004ff43:\n        var_44h = 0;\n    }\n    else {\ncode_r0x0004fec1:\n        var_40h = *var_3ch - *var_38h;\n        if (var_40h == 0) {\n            if (var_34h == 1) goto code_r0x0004ff43;\n            var_40h = *(var_3ch + 1) - *(var_38h + 1);\n            if (var_40h == 0) {\n                if (var_34h == 2) goto code_r0x0004ff43;\n                var_40h = *(var_3ch + 2) - *(var_38h + 2);\n                if (var_40h == 0) {\n                    if ((var_34h == 3) || (var_40h = *(var_3ch + 3) - *(var_38h + 3),  var_40h == 0))\n                    goto code_r0x0004ff43;\n                }\n            }\n        }\n        var_44h = 1;\n        if (var_40h < 1) {\n            var_44h = -1;\n        }\n    }\n    if (var_44h != 0) {\n        return 0;\n    }\n    var_50h = 0x850910c0;\n    var_54h = arg_8h + 5;\n    for (var_4ch = *0x85092be4; 3 < var_4ch; var_4ch = var_4ch - 4) {\n        if (*var_54h != *var_50h) goto code_r0x0004ffb3;\n        var_50h = var_50h + 1;\n        var_54h = var_54h + 1;\n    }\n    if (var_4ch == 0) {\ncode_r0x00050035:\n        var_5ch = 0;\n    }\n    else {\ncode_r0x0004ffb3:\n        var_58h = *var_54h - *var_50h;\n        if (var_58h == 0) {\n            if (var_4ch == 1) goto code_r0x00050035;\n            var_58h = *(var_54h + 1) - *(var_50h + 1);\n            if (var_58h == 0) {\n                if (var_4ch == 2) goto code_r0x00050035;\n                var_58h = *(var_54h + 2) - *(var_50h + 2);\n                if (var_58h == 0) {\n                    if ((var_4ch == 3) || (var_58h = *(var_54h + 3) - *(var_50h + 3),  var_58h == 0))\n                    goto code_r0x00050035;\n                }\n            }\n        }\n        var_5ch = 1;\n        if (var_58h < 1) {\n            var_5ch = -1;\n        }\n    }\n    if (var_5ch != 0) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 1967
    },
    "00050080": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00050080(int32_t arg_8h)\n\n{\n    char *pcVar1;\n    int32_t iVar2;\n    uint var_6e0h;\n    uint var_6d8h;\n    char *var_6d4h;\n    uint var_6d0h;\n    int32_t var_650h;\n    int32_t var_64ch;\n    uint var_648h;\n    uint var_644h;\n    uint var_640h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    int32_t var_50h;\n    uint var_4ch;\n    uint var_48h;\n    \n    var_650h = arg_8h;\n    var_648h = 0;\n    var_644h = 0;\n    var_50h = 0;\n    var_6d4h = 0x85091068;\n    pcVar1 = var_6d4h;\n    do {\n        var_6d4h = pcVar1;\n        pcVar1 = var_6d4h + 1;\n    } while (*var_6d4h != '\\0');\n    var_64ch = fcn.0007b640(&var_4ch, 0x8508de98, 0, 0, 0x85091068, var_6d4h + 0x7af6ef99, 2);\n    if (var_64ch == 0) {\n        fcn.0007f916(&var_6d0h, 0, 0x80);\n        fcn.00034e80(var_650h + 0x20, &var_48h, 0x41);\n        fcn.0004a010(&var_6d0h, 0x7f, 0x85011474, &var_48h);\n        var_64ch = fcn.0007bdc0(var_4ch, &var_6d0h, 0);\n        if ((var_64ch == 0) && (var_64ch = fcn.0007bc60(var_4ch, 0),  var_64ch == 0)) {\n            var_58h = var_4ch;\n            var_54h = *(var_650h + 0x10);\n            var_50h = *(var_650h + 0x14);\n            var_64ch = fcn.0001a700(&var_648h, 0x8504c330, &var_58h);\n            if (var_64ch == 0) {\n                if (*(var_650h + 0x690) == 0) goto code_r0x00050251;\n                var_64ch = fcn.0007be70(var_4ch, var_650h + 0xb4, *(var_650h + 0x690), 0);\n                while (var_64ch == 0) {\ncode_r0x00050251:\n                    var_64ch = fcn.00053e40(*(var_650h + 0x10), *(var_650h + 0x14), &var_640h, 0x5dc, &var_5ch, 60000);\n                    if (var_64ch != 0) break;\n                    var_64ch = fcn.0007be70(var_4ch, &var_640h, var_5ch, 0);\n                }\n            }\n        }\n    }\n    fcn.0007b950(&var_4ch, 0);\n    iVar2 = fcn.00038390(&var_648h);\n    if (iVar2 == 0) {\n        if (var_50h != 0) {\n            fcn.00053d60(*(var_650h + 0x10), *(var_650h + 0x14));\n        }\n    }\n    else {\n        fcn.000383c0(&var_648h, 0);\n        fcn.00038370(&var_648h);\n    }\n    fcn.00053ee0(var_650h);\n    return 0;\n}\n",
        "token_count": 926
    },
    "00050330": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00050330(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    var_4h = arg_8h;\n    do {\n        iVar1 = fcn.0007bf30(*var_4h, &var_ch, &var_8h, 0xffffffff, 0);\n        if (iVar1 != 0) {\ncode_r0x000503a4:\n            if (var_4h[2] != 0) {\n                fcn.00053d60(var_4h[1], var_4h[2]);\n                var_4h[2] = 0;\n            }\n            return 0;\n        }\n        iVar1 = fcn.00053e00(var_4h[1], var_4h[2], var_ch, var_8h);\n        if (iVar1 != 0) {\n            fcn.0007c0d0(*var_4h, var_ch);\n            goto code_r0x000503a4;\n        }\n        fcn.0007c0d0(*var_4h, var_ch);\n    } while( true );\n}\n",
        "token_count": 309
    },
    "000503e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.000503e0(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    if (arg_10h == 0) {\n        iVar1 = fcn.00050ef0(arg_8h, arg_ch);\n        if (iVar1 != 0) {\n            return 9;\n        }\n    }\n    else {\n        iVar1 = fcn.00050480(arg_8h, arg_ch);\n        if (iVar1 != 0) {\n            return iVar1;\n        }\n        iVar1 = fcn.000504d0(arg_8h, arg_ch);\n        if (iVar1 != 0) {\n            return iVar1;\n        }\n        iVar1 = fcn.0004dd50(arg_8h, arg_ch);\n        if (iVar1 != 0) {\n            return 5;\n        }\n        iVar1 = fcn.0004fc80(arg_8h, arg_ch);\n        if (iVar1 != 0) {\n            return 0xb;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 252
    },
    "000504d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.000504d0(int32_t *arg_8h, uint32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    uint8_t *puVar2;\n    int32_t iVar3;\n    uint var_3ch;\n    int32_t var_38h;\n    int32_t var_34h;\n    int32_t *var_30h;\n    int32_t *var_2ch;\n    uint32_t var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t *var_18h;\n    int32_t *var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint8_t var_6h;\n    uint8_t *var_4h;\n    \n    if (arg_ch < 0x1f) {\n        return 0;\n    }\n    var_14h = 0x85011464;\n    var_18h = arg_8h;\n    for (var_10h = 5; 3 < var_10h; var_10h = var_10h - 4) {\n        if (*var_18h != *var_14h) goto code_r0x0005051f;\n        var_14h = var_14h + 1;\n        var_18h = var_18h + 1;\n    }\n    if (var_10h == 0) {\ncode_r0x000505a1:\n        var_20h = 0;\n    }\n    else {\ncode_r0x0005051f:\n        var_1ch = *var_18h - *var_14h;\n        if (var_1ch == 0) {\n            if (var_10h == 1) goto code_r0x000505a1;\n            var_1ch = *(var_18h + 1) - *(var_14h + 1);\n            if (var_1ch == 0) {\n                if (var_10h == 2) goto code_r0x000505a1;\n                var_1ch = *(var_18h + 2) - *(var_14h + 2);\n                if (var_1ch == 0) {\n                    if ((var_10h == 3) || (var_1ch = *(var_18h + 3) - *(var_14h + 3),  var_1ch == 0))\n                    goto code_r0x000505a1;\n                }\n            }\n        }\n        var_20h = 1;\n        if (var_1ch < 1) {\n            var_20h = -1;\n        }\n    }\n    if (var_20h != 0) {\n        return 0;\n    }\n    puVar2 = fcn.0007f892(arg_8h + 5, 0x3f, arg_ch - 0x18);\n    if (puVar2 == NULL) {\n        return 0;\n    }\n    if (puVar2[0xb] != 0x26) {\n        return 0;\n    }\n    uVar1 = puVar2[0xc];\n    var_6h = 0;\n    for (var_ch = 0; var_4h = puVar2 + 1,  var_ch < 8; var_ch = var_ch + 1) {\n        var_6h = var_6h + *var_4h;\n        puVar2 = var_4h;\n    }\n    if (*var_4h != var_6h / 0x1a + 0x41) {\n        return 0;\n    }\n    if (puVar2[2] != 0x7a - var_6h % 0x1a) {\n        return 0;\n    }\n    iVar3 = fcn.0007f892(puVar2 + 4, 0x20, arg_ch - 0x17);\n    if (iVar3 == 0) {\n        return 0;\n    }\n    var_2ch = 0x850112c0;\n    var_30h = iVar3 + 1;\n    for (var_28h = 5; 3 < var_28h; var_28h = var_28h - 4) {\n        if (*var_30h != *var_2ch) goto code_r0x000506f6;\n        var_2ch = var_2ch + 1;\n        var_30h = var_30h + 1;\n    }\n    if (var_28h == 0) {\ncode_r0x00050778:\n        var_38h = 0;\n    }\n    else {\ncode_r0x000506f6:\n        var_34h = *var_30h - *var_2ch;\n        if (var_34h == 0) {\n            if (var_28h == 1) goto code_r0x00050778;\n            var_34h = *(var_30h + 1) - *(var_2ch + 1);\n            if (var_34h == 0) {\n                if (var_28h == 2) goto code_r0x00050778;\n                var_34h = *(var_30h + 2) - *(var_2ch + 2);\n                if (var_34h == 0) {\n                    if ((var_28h == 3) || (var_34h = *(var_30h + 3) - *(var_2ch + 3),  var_34h == 0))\n                    goto code_r0x00050778;\n                }\n            }\n        }\n        var_38h = 1;\n        if (var_34h < 1) {\n            var_38h = -1;\n        }\n    }\n    if (var_38h != 0) {\n        return 0;\n    }\n    return 7 - (uVar1 != 0x61);\n}\n",
        "token_count": 1335
    },
    "000507f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.000507f0(int32_t arg_8h)\n\n{\n    char *pcVar1;\n    char cVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint *puVar6;\n    uint var_1c4h;\n    uint var_1bch;\n    uint *var_1b8h;\n    uint *var_1b0h;\n    uint var_1ach;\n    uint var_1a8h;\n    uint var_1a0h;\n    uint *var_19ch;\n    uint var_198h;\n    int32_t var_114h;\n    int32_t var_110h;\n    uint var_10ch;\n    uint var_108h;\n    uint var_104h;\n    uint var_100h;\n    uint var_b4h;\n    uint var_b0h;\n    int32_t var_ach;\n    uint var_a8h;\n    uint var_2ch;\n    int32_t var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_114h = arg_8h;\n    var_108h = 0;\n    var_104h = 0;\n    var_ach = 0;\n    fcn.0002c7e0(&var_a8h, 0x73);\n    if (*(var_114h + 0x18) != 1) {\n        var_24h = 0;\n        var_20h = 0;\n        var_1ch = 0;\n        var_18h = 0;\n        var_14h = 0;\n        var_10h = 0;\n        var_ch = 0;\n        var_8h = 0;\n        var_4h._0_1_ = 0;\n        fcn.0004a010(&var_24h, 0x20, 0x85011494, *(var_114h + 0x18) + -1);\n        var_19ch = &var_24h;\n        do {\n            cVar2 = *var_19ch;\n            var_19ch = var_19ch + 1;\n        } while (cVar2 != '\\0');\n        uVar3 = var_19ch - &var_24h;\n        var_1b0h = &var_ach + 3;\n        do {\n            pcVar1 = var_1b0h + 1;\n            var_1b0h = var_1b0h + 1;\n        } while (*pcVar1 != '\\0');\n        puVar6 = &var_24h;\n        for (uVar5 = uVar3 >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n            *var_1b0h = *puVar6;\n            puVar6 = puVar6 + 1;\n            var_1b0h = var_1b0h + 1;\n        }\n        for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n            *var_1b0h = *puVar6;\n            puVar6 = puVar6 + 1;\n            var_1b0h = var_1b0h + 1;\n        }\n    }\n    var_1b8h = &var_a8h;\n    do {\n        cVar2 = *var_1b8h;\n        var_1b8h = var_1b8h + 1;\n    } while (cVar2 != '\\0');\n    var_110h = fcn.0007b640(&var_2ch, 0x8508de90, 0, 0, &var_a8h, var_1b8h + (1 - (&var_a8h + 1)), 2);\n    if (var_110h == 0) {\n        fcn.0007f916(&var_198h, 0, 0x80);\n        fcn.00034e80(var_114h + 0x20, &var_100h, 0x41);\n        fcn.0004a010(&var_198h, 0x7f, 0x85011498, &var_100h);\n        var_110h = fcn.0007bdc0(var_2ch, &var_198h, 0);\n        if ((var_110h == 0) && (var_110h = fcn.0007bc60(var_2ch, 0),  var_110h == 0)) {\n            var_b4h = var_2ch;\n            var_b0h = *(var_114h + 0x10);\n            var_ach = *(var_114h + 0x14);\n            var_110h = fcn.0001a700(&var_108h, 0x8504cc70, &var_b4h);\n            if (var_110h == 0) {\n                if (*(var_114h + 0x1c) != 0) {\n                    var_28h = fcn.00036330(*(var_114h + 0x1c));\n                    if (var_28h == 0) goto code_r0x00050bf2;\n                    var_110h = fcn.00050d70(*(var_114h + 0x10), *(var_114h + 0x14), var_28h, *(var_114h + 0x1c), 300000)\n                    ;\n                    fcn.00036460(var_28h);\n                    if (var_110h != 0) goto code_r0x00050bf2;\n                }\n                do {\n                    var_110h = fcn.00050d70(*(var_114h + 0x10), *(var_114h + 0x14), &var_10ch, 4, 300000);\n                    if (var_110h != 0) break;\n                    var_10ch = fcn.000365c0(var_10ch);\n                    var_28h = fcn.00036330(var_10ch);\n                    if (var_28h == 0) break;\n                    var_110h = fcn.00050d70(*(var_114h + 0x10), *(var_114h + 0x14), var_28h, var_10ch, 300000);\n                    if (var_110h != 0) {\n                        fcn.00036460(var_28h);\n                        break;\n                    }\n                    var_110h = fcn.0007be70(var_2ch, var_28h, var_10ch, 0);\n                    fcn.00036460(var_28h);\n                } while (var_110h == 0);\n            }\n        }\n    }\ncode_r0x00050bf2:\n    fcn.0007b950(&var_2ch, 0);\n    iVar4 = fcn.00038390(&var_108h);\n    if (iVar4 == 0) {\n        if (var_ach != 0) {\n            fcn.00053d60(*(var_114h + 0x10), *(var_114h + 0x14));\n        }\n    }\n    else {\n        fcn.000383c0(&var_108h, 0);\n        fcn.00038370(&var_108h);\n    }\n    fcn.00053ee0(var_114h);\n    return 0;\n}\n",
        "token_count": 1740
    },
    "00050c70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00050c70(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_10h;\n    uint var_ch;\n    uint *var_8h;\n    uint var_4h;\n    \n    var_8h = arg_8h;\n    do {\n        iVar1 = fcn.0007bf30(*var_8h, &var_4h, &var_ch, 0xffffffff, 0);\n        if (iVar1 != 0) {\ncode_r0x00050d35:\n            if (var_8h[2] != 0) {\n                fcn.00053d60(var_8h[1], var_8h[2]);\n                var_8h[2] = 0;\n            }\n            return 0;\n        }\n        var_ch = fcn.000365c0(var_ch);\n        iVar1 = fcn.00053e00(var_8h[1], var_8h[2], &var_ch, 4);\n        if (iVar1 != 0) {\n            fcn.0007c0d0(*var_8h, var_4h);\n            goto code_r0x00050d35;\n        }\n        var_ch = fcn.000365c0(var_ch);\n        iVar1 = fcn.00053e00(var_8h[1], var_8h[2], var_4h, var_ch);\n        if (iVar1 != 0) {\n            fcn.0007c0d0(*var_8h, var_4h);\n            goto code_r0x00050d35;\n        }\n        fcn.0007c0d0(*var_8h, var_4h);\n    } while( true );\n}\n",
        "token_count": 418
    },
    "00050d70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nint32_t __cdecl fcn.00050d70(uint arg_8h, uint arg_ch, int32_t arg_10h, uint32_t arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    uint var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    for (var_8h = 0; var_8h < arg_14h; var_8h = var_8h + var_4h) {\n        iVar1 = fcn.00053e40(arg_8h, arg_ch, arg_10h + var_8h, arg_14h - var_8h, &var_4h, arg_18h);\n        if (iVar1 != 0) {\n            return iVar1;\n        }\n        if (var_4h == 0) break;\n    }\n    if (var_8h == arg_14h) {\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = -1;\n    }\n    return iVar1;\n}\n",
        "token_count": 283
    },
    "00050de0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Removing unreachable block (ram,0x00050e79)\n// WARNING: Removing unreachable block (ram,0x00050e90)\n// WARNING: Removing unreachable block (ram,0x00050e99)\n// WARNING: Switch with 1 destination removed at 0x00050e2a\n\nuint __cdecl fcn.00050de0(int32_t arg_8h)\n\n{\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    fcn.00053e90(*(arg_8h + 0xa4), *(arg_8h + 0xa8), *(arg_8h + 0xac));\n    if (*(arg_8h + 0x18) - 1U < 0xc) {\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    fcn.00053ec0(*(arg_8h + 0x10), *(arg_8h + 0x14));\n    fcn.00053ee0(arg_8h);\n    return 0;\n}\n",
        "token_count": 257
    },
    "00050ef0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00050ef0(int32_t *arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    uint8_t *arg_8h_00;\n    uint var_50h;\n    int32_t var_4ch;\n    int32_t var_48h;\n    int32_t *var_44h;\n    int32_t *var_40h;\n    uint32_t var_3ch;\n    uint var_38h;\n    int32_t var_34h;\n    int32_t var_30h;\n    int32_t *var_2ch;\n    int32_t *var_28h;\n    uint32_t var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t *var_14h;\n    int32_t *var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    if (arg_ch < 0xd) {\n        return 0;\n    }\n    var_10h = 0x850114c8;\n    var_14h = arg_8h;\n    for (var_ch = 5; 3 < var_ch; var_ch = var_ch - 4) {\n        if (*var_14h != *var_10h) goto code_r0x00050f41;\n        var_10h = var_10h + 1;\n        var_14h = var_14h + 1;\n    }\n    if (var_ch == 0) {\ncode_r0x00050fc3:\n        var_1ch = 0;\n    }\n    else {\ncode_r0x00050f41:\n        var_18h = *var_14h - *var_10h;\n        if (var_18h == 0) {\n            if (var_ch == 1) goto code_r0x00050fc3;\n            var_18h = *(var_14h + 1) - *(var_10h + 1);\n            if (var_18h == 0) {\n                if (var_ch == 2) goto code_r0x00050fc3;\n                var_18h = *(var_14h + 2) - *(var_10h + 2);\n                if (var_18h == 0) {\n                    if ((var_ch == 3) || (var_18h = *(var_14h + 3) - *(var_10h + 3),  var_18h == 0))\n                    goto code_r0x00050fc3;\n                }\n            }\n        }\n        var_1ch = 1;\n        if (var_18h < 1) {\n            var_1ch = -1;\n        }\n    }\n    if (var_1ch == 0) goto code_r0x00051222;\n    var_28h = 0x850114d0;\n    var_2ch = arg_8h;\n    for (var_24h = 5; 3 < var_24h; var_24h = var_24h - 4) {\n        if (*var_2ch != *var_28h) goto code_r0x0005102e;\n        var_28h = var_28h + 1;\n        var_2ch = var_2ch + 1;\n    }\n    if (var_24h == 0) {\ncode_r0x000510b0:\n        var_34h = 0;\n    }\n    else {\ncode_r0x0005102e:\n        var_30h = *var_2ch - *var_28h;\n        if (var_30h == 0) {\n            if (var_24h == 1) goto code_r0x000510b0;\n            var_30h = *(var_2ch + 1) - *(var_28h + 1);\n            if (var_30h == 0) {\n                if (var_24h == 2) goto code_r0x000510b0;\n                var_30h = *(var_2ch + 2) - *(var_28h + 2);\n                if (var_30h == 0) {\n                    if ((var_24h == 3) || (var_30h = *(var_2ch + 3) - *(var_28h + 3),  var_30h == 0))\n                    goto code_r0x000510b0;\n                }\n            }\n        }\n        var_34h = 1;\n        if (var_30h < 1) {\n            var_34h = -1;\n        }\n    }\n    if (var_34h != 0) {\n        return 0;\n    }\n    iVar1 = fcn.0007f892(arg_8h, 10, arg_ch);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    piVar3 = iVar1 + 1;\n    arg_ch = arg_ch - (piVar3 - arg_8h);\n    if (arg_ch < 0xd) {\n        return 0;\n    }\n    var_40h = 0x850114c8;\n    var_44h = piVar3;\n    for (var_3ch = 5; 3 < var_3ch; var_3ch = var_3ch - 4) {\n        if (*var_44h != *var_40h) goto code_r0x00051167;\n        var_40h = var_40h + 1;\n        var_44h = var_44h + 1;\n    }\n    if (var_3ch == 0) {\ncode_r0x000511e9:\n        var_4ch = 0;\n    }\n    else {\ncode_r0x00051167:\n        var_48h = *var_44h - *var_40h;\n        if (var_48h == 0) {\n            if (var_3ch == 1) goto code_r0x000511e9;\n            var_48h = *(var_44h + 1) - *(var_40h + 1);\n            if (var_48h == 0) {\n                if (var_3ch == 2) goto code_r0x000511e9;\n                var_48h = *(var_44h + 2) - *(var_40h + 2);\n                if (var_48h == 0) {\n                    if ((var_3ch == 3) || (var_48h = *(var_44h + 3) - *(var_40h + 3),  var_48h == 0))\n                    goto code_r0x000511e9;\n                }\n            }\n        }\n        var_4ch = 1;\n        if (var_48h < 1) {\n            var_4ch = -1;\n        }\n    }\n    arg_8h = piVar3;\n    if (var_4ch != 0) {\n        return 0;\n    }\ncode_r0x00051222:\n    iVar1 = fcn.00037110(*(arg_8h + 5));\n    if (((iVar1 == 0x54) && (iVar1 = fcn.00037110(*(arg_8h + 6)),  iVar1 == 0x4f)) && (*(arg_8h + 7) == 0x3a)) {\n        var_4h = arg_8h + 2;\n        for (arg_ch = arg_ch - 8; (*var_4h == 0x20 && (arg_ch != 0)); arg_ch = arg_ch - 1) {\n            var_4h = var_4h + 1;\n        }\n        if (arg_ch < 4) {\n            uVar2 = 0;\n        }\n        else if (*var_4h == 0x3c) {\n            arg_8h_00 = var_4h + 1;\n            iVar1 = fcn.0007f892(arg_8h_00, 0x40, arg_ch - 1);\n            if (iVar1 == 0) {\n                uVar2 = 0;\n            }\n            else if (iVar1 - arg_8h_00 == 10) {\n                uVar2 = fcn.00038b00(arg_8h_00);\n            }\n            else {\n                uVar2 = 0;\n            }\n        }\n        else {\n            uVar2 = 0;\n        }\n    }\n    else {\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 1934
    },
    "00051300": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00051300(int32_t arg_8h)\n\n{\n    char *pcVar1;\n    char cVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint *puVar7;\n    uint *puVar8;\n    bool bVar9;\n    bool bVar10;\n    uint var_300h;\n    uint var_2f8h;\n    uint *var_2f4h;\n    uint var_2f0h;\n    uint var_2e8h;\n    uint *var_2e4h;\n    uint var_2e0h;\n    int32_t var_2dch;\n    uint *var_2d4h;\n    uint8_t *var_2d0h;\n    uint var_2cch;\n    uint var_2c4h;\n    uint *var_2c0h;\n    uint var_2bch;\n    uint var_2b4h;\n    char *var_2b0h;\n    uint var_2ach;\n    uint var_2a4h;\n    uint *var_2a0h;\n    int32_t var_29ch;\n    uint var_298h;\n    uint var_290h;\n    uint *var_28ch;\n    uint var_288h;\n    int32_t var_284h;\n    uint8_t *var_27ch;\n    uint8_t *var_278h;\n    uint var_274h;\n    uint var_26ch;\n    uint *var_268h;\n    uint *var_260h;\n    uint var_25ch;\n    uint var_258h;\n    uint var_250h;\n    uint *var_24ch;\n    uint var_248h;\n    uint var_240h;\n    uint *var_23ch;\n    uint var_238h;\n    uint var_230h;\n    char *var_22ch;\n    uint var_228h;\n    int32_t var_224h;\n    uint *var_21ch;\n    uint8_t *var_218h;\n    uint var_214h;\n    int32_t var_210h;\n    uint *var_208h;\n    uint8_t *var_204h;\n    uint var_200h;\n    uint var_1f8h;\n    uint *var_1f4h;\n    uint var_1f0h;\n    int32_t var_1ech;\n    uint *var_1e4h;\n    uint8_t *var_1e0h;\n    uint var_1dch;\n    uint var_1d4h;\n    uint *var_1d0h;\n    uint var_1cch;\n    uint var_1c4h;\n    uint *var_1c0h;\n    uint var_1bch;\n    int32_t var_1b8h;\n    int32_t var_1b4h;\n    int32_t *var_1b0h;\n    int32_t *var_1ach;\n    uint32_t var_1a8h;\n    uint var_1a4h;\n    uint var_19ch;\n    uint *var_198h;\n    uint var_194h;\n    int32_t var_190h;\n    int32_t var_18ch;\n    int32_t *var_188h;\n    int32_t *var_184h;\n    uint32_t var_180h;\n    uint var_17ch;\n    uint var_174h;\n    uint *var_170h;\n    uint var_16ch;\n    uint var_168h;\n    int32_t var_120h;\n    int32_t var_11ch;\n    uint var_118h;\n    uint var_113h;\n    uint32_t var_98h;\n    int32_t var_94h;\n    uint32_t var_90h;\n    char *var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint32_t var_80h;\n    uint var_7ch;\n    uint *var_8h;\n    uint8_t *var_4h;\n    \n    var_120h = arg_8h;\n    var_8ch = NULL;\n    fcn.00034e80(arg_8h + 0x20, &var_168h, 0x47);\n    puVar7 = &var_168h;\n    do {\n        var_170h = puVar7;\n        puVar7 = var_170h + 1;\n    } while (*var_170h != '\\0');\n    fcn.0007f7f0(var_170h, 0x850112d0, *(var_120h + 0xa0));\n    var_8h = fcn.00036330(0xbd0);\n    if (var_8h == NULL) goto code_r0x00052374;\n    fcn.0007f916(var_8h, 0, 0xbd0);\n    *var_8h = *(var_120h + 0x10);\n    var_8h[1] = *(var_120h + 0x14);\n    if (3000 < *(var_120h + 0x690)) goto code_r0x00052374;\n    var_8h[3] = 0;\n    var_8h[2] = *(var_120h + 0x690) % 3000;\n    var_8h[4] = *(var_120h + 0x690);\n    fcn.0007f904(var_8h + 5, var_120h + 0xb4, *(var_120h + 0x690));\n    var_8ch = fcn.00036330(0x2000);\n    if ((var_8ch == NULL) || (iVar4 = fcn.000523c0(var_8h, &var_118h, 0x80),  iVar4 == 0)) goto code_r0x00052374;\n    var_184h = 0x850114d0;\n    var_188h = &var_118h;\n    for (var_180h = 5; 3 < var_180h; var_180h = var_180h - 4) {\n        if (*var_188h != *var_184h) goto code_r0x00051509;\n        var_184h = var_184h + 1;\n        var_188h = var_188h + 1;\n    }\n    if (var_180h == 0) {\ncode_r0x000515df:\n        var_190h = 0;\n    }\n    else {\ncode_r0x00051509:\n        var_18ch = *var_188h - *var_184h;\n        if (var_18ch == 0) {\n            if (var_180h == 1) goto code_r0x000515df;\n            var_18ch = *(var_188h + 1) - *(var_184h + 1);\n            if (var_18ch == 0) {\n                if (var_180h == 2) goto code_r0x000515df;\n                var_18ch = *(var_188h + 2) - *(var_184h + 2);\n                if (var_18ch == 0) {\n                    if ((var_180h == 3) || (var_18ch = *(var_188h + 3) - *(var_184h + 3),  var_18ch == 0))\n                    goto code_r0x000515df;\n                }\n            }\n        }\n        var_190h = 1;\n        if (var_18ch < 1) {\n            var_190h = -1;\n        }\n    }\n    if (var_190h == 0) {\n        var_88h = *0x850114d8;\n        var_84h = *0x850114dc;\n        var_80h = *0x850114e0;\n        var_7ch = *0x850114e4;\n        var_198h = &var_88h;\n        do {\n            cVar2 = *var_198h;\n            var_198h = var_198h + 1;\n        } while (cVar2 != '\\0');\n        fcn.00053e00(*var_8h, var_8h[1], &var_88h, var_198h - (&var_88h + 1));\n        iVar4 = fcn.000523c0(var_8h, &var_118h, 0x80);\n        if (iVar4 == 0) goto code_r0x00052374;\n    }\n    var_1ach = 0x850114c8;\n    var_1b0h = &var_118h;\n    for (var_1a8h = 5; 3 < var_1a8h; var_1a8h = var_1a8h - 4) {\n        if (*var_1b0h != *var_1ach) goto code_r0x00051732;\n        var_1ach = var_1ach + 1;\n        var_1b0h = var_1b0h + 1;\n    }\n    if (var_1a8h == 0) {\ncode_r0x00051808:\n        var_1b8h = 0;\n    }\n    else {\ncode_r0x00051732:\n        var_1b4h = *var_1b0h - *var_1ach;\n        if (var_1b4h == 0) {\n            if (var_1a8h == 1) goto code_r0x00051808;\n            var_1b4h = *(var_1b0h + 1) - *(var_1ach + 1);\n            if (var_1b4h == 0) {\n                if (var_1a8h == 2) goto code_r0x00051808;\n                var_1b4h = *(var_1b0h + 2) - *(var_1ach + 2);\n                if (var_1b4h == 0) {\n                    if ((var_1a8h == 3) || (var_1b4h = *(var_1b0h + 3) - *(var_1ach + 3),  var_1b4h == 0))\n                    goto code_r0x00051808;\n                }\n            }\n        }\n        var_1b8h = 1;\n        if (var_1b4h < 1) {\n            var_1b8h = -1;\n        }\n    }\n    if (var_1b8h == 0) {\n        var_88h = *0x85011508;\n        var_84h = *0x8501150c;\n        var_80h = var_80h & 0xffffff00 | *0x85011510;\n        var_1d0h = &var_88h;\n        do {\n            cVar2 = *var_1d0h;\n            var_1d0h = var_1d0h + 1;\n        } while (cVar2 != '\\0');\n        var_11ch = fcn.00053e00(*var_8h, var_8h[1], &var_88h, var_1d0h - (&var_88h + 1));\n        if ((var_11ch == 0) && (iVar4 = fcn.000523c0(var_8h, &var_118h, 0x80),  iVar4 != 0)) {\n            var_1e0h = 0x85011514;\n            var_1e4h = &var_118h;\n            do {\n                uVar3 = *var_1e4h;\n                bVar9 = uVar3 < *var_1e0h;\n                if (uVar3 != *var_1e0h) {\ncode_r0x00051a00:\n                    var_1ech = (1 - bVar9) - (bVar9 != 0);\n                    goto code_r0x00051a0b;\n                }\n                if (uVar3 == 0) break;\n                uVar3 = *(var_1e4h + 1);\n                bVar9 = uVar3 < var_1e0h[1];\n                if (uVar3 != var_1e0h[1]) goto code_r0x00051a00;\n                var_1e4h = var_1e4h + 2;\n                var_1e0h = var_1e0h + 2;\n            } while (uVar3 != 0);\n            var_1ech = 0;\ncode_r0x00051a0b:\n            if (var_1ech == 0) {\n                puVar7 = 0x8501151c;\n                puVar8 = &var_88h;\n                for (iVar4 = 8; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar8 = *puVar7;\n                    puVar7 = puVar7 + 1;\n                    puVar8 = puVar8 + 1;\n                }\n                *puVar8 = *puVar7;\n                var_1f4h = &var_88h;\n                do {\n                    cVar2 = *var_1f4h;\n                    var_1f4h = var_1f4h + 1;\n                } while (cVar2 != '\\0');\n                var_11ch = fcn.00053e00(*var_8h, var_8h[1], &var_88h, var_1f4h - (&var_88h + 1));\n                if (var_11ch == 0) {\n                    bVar9 = false;\n                    *var_8ch = '\\0';\n                    while (iVar4 = fcn.000523c0(var_8h, &var_118h, 0x80),  iVar4 != 0) {\n                        var_204h = 0x85011540;\n                        var_208h = &var_118h;\n                        do {\n                            uVar3 = *var_208h;\n                            bVar10 = uVar3 < *var_204h;\n                            if (uVar3 != *var_204h) {\ncode_r0x00051b5c:\n                                var_210h = (1 - bVar10) - (bVar10 != 0);\n                                goto code_r0x00051b67;\n                            }\n                            if (uVar3 == 0) break;\n                            uVar3 = *(var_208h + 1);\n                            bVar10 = uVar3 < var_204h[1];\n                            if (uVar3 != var_204h[1]) goto code_r0x00051b5c;\n                            var_208h = var_208h + 2;\n                            var_204h = var_204h + 2;\n                        } while (uVar3 != 0);\n                        var_210h = 0;\ncode_r0x00051b67:\n                        if (var_210h == 0) goto code_r0x00052097;\n                        if (!bVar9) {\n                            var_218h = 0x85011544;\n                            var_21ch = &var_118h;\n                            do {\n                                uVar3 = *var_21ch;\n                                bVar10 = uVar3 < *var_218h;\n                                if (uVar3 != *var_218h) {\ncode_r0x00051c02:\n                                    var_224h = (1 - bVar10) - (bVar10 != 0);\n                                    goto code_r0x00051c0d;\n                                }\n                                if (uVar3 == 0) break;\n                                uVar3 = *(var_21ch + 1);\n                                bVar10 = uVar3 < var_218h[1];\n                                if (uVar3 != var_218h[1]) goto code_r0x00051c02;\n                                var_21ch = var_21ch + 2;\n                                var_218h = var_218h + 2;\n                            } while (uVar3 != 0);\n                            var_224h = 0;\ncode_r0x00051c0d:\n                            if (var_224h == 0) {\n                                bVar9 = true;\n                            }\n                            else {\n                                var_22ch = var_8ch;\n                                do {\n                                    cVar2 = *var_22ch;\n                                    var_22ch = var_22ch + 1;\n                                } while (cVar2 != '\\0');\n                                var_23ch = &var_118h;\n                                do {\n                                    cVar2 = *var_23ch;\n                                    var_23ch = var_23ch + 1;\n                                } while (cVar2 != '\\0');\n                                if (var_22ch + var_23ch + (-(&var_118h + 1) - (var_8ch + 1)) < 0x2000) {\n                                    var_24ch = &var_118h;\n                                    do {\n                                        cVar2 = *var_24ch;\n                                        var_24ch = var_24ch + 1;\n                                    } while (cVar2 != '\\0');\n                                    uVar6 = var_24ch - &var_118h;\n                                    var_260h = var_8ch + -1;\n                                    do {\n                                        pcVar1 = var_260h + 1;\n                                        var_260h = var_260h + 1;\n                                    } while (*pcVar1 != '\\0');\n                                    puVar7 = &var_118h;\n                                    for (uVar5 = uVar6 >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n                                        *var_260h = *puVar7;\n                                        puVar7 = puVar7 + 1;\n                                        var_260h = var_260h + 1;\n                                    }\n                                    for (uVar6 = uVar6 & 3; uVar6 != 0; uVar6 = uVar6 - 1) {\n                                        *var_260h = *puVar7;\n                                        puVar7 = puVar7 + 1;\n                                        var_260h = var_260h + 1;\n                                    }\n                                }\n                                else {\n                                    bVar9 = true;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                var_268h = &var_118h;\n                do {\n                    cVar2 = *var_268h;\n                    var_268h = var_268h + 1;\n                } while (cVar2 != '\\0');\n                if ((var_268h - (&var_118h + 1) < 6) || (iVar4 = fcn.0007f8a4(&var_118h, 0x85011548, 5),  iVar4 != 0)) {\n                    puVar7 = 0x85011588;\n                    puVar8 = &var_88h;\n                    for (iVar4 = 7; iVar4 != 0; iVar4 = iVar4 + -1) {\n                        *puVar8 = *puVar7;\n                        puVar7 = puVar7 + 1;\n                        puVar8 = puVar8 + 1;\n                    }\n                    *puVar8 = *puVar7;\n                    var_2a0h = &var_88h;\n                    do {\n                        cVar2 = *var_2a0h;\n                        var_2a0h = var_2a0h + 1;\n                    } while (cVar2 != '\\0');\n                    fcn.00053e00(*var_8h, var_8h[1], &var_88h, var_2a0h - (&var_88h + 1));\n                }\n                else {\n                    var_98h = fcn.00036fe0(&var_113h, &var_4h, 10);\n                    var_278h = 0x85011550;\n                    var_27ch = var_4h;\n                    do {\n                        uVar3 = *var_27ch;\n                        bVar9 = uVar3 < *var_278h;\n                        if (uVar3 != *var_278h) {\ncode_r0x00051e99:\n                            var_284h = (1 - bVar9) - (bVar9 != 0);\n                            goto code_r0x00051ea4;\n                        }\n                        if (uVar3 == 0) break;\n                        uVar3 = var_27ch[1];\n                        bVar9 = uVar3 < var_278h[1];\n                        if (uVar3 != var_278h[1]) goto code_r0x00051e99;\n                        var_27ch = var_27ch + 2;\n                        var_278h = var_278h + 2;\n                    } while (uVar3 != 0);\n                    var_284h = 0;\ncode_r0x00051ea4:\n                    if (var_284h == 0) {\n                        var_90h = 0;\n                        do {\n                            if (var_90h < 0x1fff) {\n                                if (var_98h - var_90h < 0x1fff) {\n                                    var_29ch = var_98h - var_90h;\n                                }\n                                else {\n                                    var_29ch = 0x1fff;\n                                }\n                                iVar4 = fcn.0004f4b0(var_8h, var_8ch, var_29ch, &var_94h, 0);\n                            }\n                            else {\n                                iVar4 = fcn.0004f4b0(var_8h, &var_118h, 0x80, &var_94h, 0);\n                            }\n                            if (iVar4 == 0) goto code_r0x00052374;\n                            var_90h = var_90h + var_94h;\n                        } while (var_90h < var_98h);\n                        var_8ch[var_90h] = '\\0';\ncode_r0x00052097:\n                        var_2b0h = var_8ch;\n                        do {\n                            cVar2 = *var_2b0h;\n                            var_2b0h = var_2b0h + 1;\n                        } while (cVar2 != '\\0');\n                        iVar4 = fcn.0004f9b0(var_8ch, var_2b0h + (1 - (var_8ch + 1)), &var_168h, 0, 0);\n                        if (iVar4 == 0) {\n                            fcn.00053e00(*var_8h, var_8h[1], 0x8500dafc, 0x33);\n                        }\n                        else {\n                            puVar7 = 0x850115a8;\n                            puVar8 = &var_88h;\n                            for (iVar4 = 7; iVar4 != 0; iVar4 = iVar4 + -1) {\n                                *puVar8 = *puVar7;\n                                puVar7 = puVar7 + 1;\n                                puVar8 = puVar8 + 1;\n                            }\n                            *puVar8 = *puVar7;\n                            *(puVar8 + 2) = *(puVar7 + 2);\n                            var_2c0h = &var_88h;\n                            do {\n                                cVar2 = *var_2c0h;\n                                var_2c0h = var_2c0h + 1;\n                            } while (cVar2 != '\\0');\n                            var_11ch = fcn.00053e00(*var_8h, var_8h[1], &var_88h, var_2c0h - (&var_88h + 1));\n                            if ((var_11ch == 0) && (iVar4 = fcn.000523c0(var_8h, &var_118h, 0x80),  iVar4 != 0)) {\n                                var_2d0h = 0x850115c8;\n                                var_2d4h = &var_118h;\n                                do {\n                                    uVar3 = *var_2d4h;\n                                    bVar9 = uVar3 < *var_2d0h;\n                                    if (uVar3 != *var_2d0h) {\ncode_r0x0005224b:\n                                        var_2dch = (1 - bVar9) - (bVar9 != 0);\n                                        goto code_r0x00052256;\n                                    }\n                                    if (uVar3 == 0) break;\n                                    uVar3 = *(var_2d4h + 1);\n                                    bVar9 = uVar3 < var_2d0h[1];\n                                    if (uVar3 != var_2d0h[1]) goto code_r0x0005224b;\n                                    var_2d4h = var_2d4h + 2;\n                                    var_2d0h = var_2d0h + 2;\n                                } while (uVar3 != 0);\n                                var_2dch = 0;\ncode_r0x00052256:\n                                if (var_2dch == 0) {\n                                    puVar7 = 0x850115d0;\n                                    puVar8 = &var_88h;\n                                    for (iVar4 = 10; iVar4 != 0; iVar4 = iVar4 + -1) {\n                                        *puVar8 = *puVar7;\n                                        puVar7 = puVar7 + 1;\n                                        puVar8 = puVar8 + 1;\n                                    }\n                                    *puVar8 = *puVar7;\n                                    *(puVar8 + 2) = *(puVar7 + 2);\n                                    var_2f4h = &var_88h;\n                                    do {\n                                        cVar2 = *var_2f4h;\n                                        var_2f4h = var_2f4h + 1;\n                                    } while (cVar2 != '\\0');\n                                    fcn.00053e00(*var_8h, var_8h[1], &var_88h, var_2f4h - (&var_88h + 1));\n                                }\n                                else {\n                                    puVar7 = 0x850114e8;\n                                    puVar8 = &var_88h;\n                                    for (iVar4 = 7; iVar4 != 0; iVar4 = iVar4 + -1) {\n                                        *puVar8 = *puVar7;\n                                        puVar7 = puVar7 + 1;\n                                        puVar8 = puVar8 + 1;\n                                    }\n                                    *puVar8 = *puVar7;\n                                    *(puVar8 + 2) = *(puVar7 + 2);\n                                    var_2e4h = &var_88h;\n                                    do {\n                                        cVar2 = *var_2e4h;\n                                        var_2e4h = var_2e4h + 1;\n                                    } while (cVar2 != '\\0');\n                                    fcn.00053e00(*var_8h, var_8h[1], &var_88h, var_2e4h - (&var_88h + 1));\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        puVar7 = 0x85011558;\n                        puVar8 = &var_88h;\n                        for (iVar4 = 0xb; iVar4 != 0; iVar4 = iVar4 + -1) {\n                            *puVar8 = *puVar7;\n                            puVar7 = puVar7 + 1;\n                            puVar8 = puVar8 + 1;\n                        }\n                        *puVar8 = *puVar7;\n                        var_28ch = &var_88h;\n                        do {\n                            cVar2 = *var_28ch;\n                            var_28ch = var_28ch + 1;\n                        } while (cVar2 != '\\0');\n                        fcn.00053e00(*var_8h, var_8h[1], &var_88h, var_28ch - (&var_88h + 1));\n                    }\n                }\n            }\n        }\n    }\n    else {\n        puVar7 = 0x850114e8;\n        puVar8 = &var_88h;\n        for (iVar4 = 7; iVar4 != 0; iVar4 = iVar4 + -1) {\n            *puVar8 = *puVar7;\n            puVar7 = puVar7 + 1;\n            puVar8 = puVar8 + 1;\n        }\n        *puVar8 = *puVar7;\n        *(puVar8 + 2) = *(puVar7 + 2);\n        var_1c0h = &var_88h;\n        do {\n            cVar2 = *var_1c0h;\n            var_1c0h = var_1c0h + 1;\n        } while (cVar2 != '\\0');\n        fcn.00053e00(*var_8h, var_8h[1], &var_88h, var_1c0h - (&var_88h + 1));\n    }\ncode_r0x00052374:\n    fcn.00036460(var_8h);\n    fcn.00036460(var_8ch);\n    fcn.00053d60(*(var_120h + 0x10), *(var_120h + 0x14));\n    fcn.00053ee0(var_120h);\n    return 0;\n}\n",
        "token_count": 6587
    },
    "000523c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nuint __cdecl fcn.000523c0(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    while( true ) {\n        iVar1 = fcn.0004f4b0(arg_8h, arg_ch, arg_10h + -1, &var_8h, 1);\n        if (iVar1 == 0) {\n            return 0;\n        }\n        var_4h = fcn.0007f892(arg_ch, 10, arg_10h);\n        if ((var_4h != 0) || (var_8h == arg_10h + -1)) break;\n        var_8h = arg_8h;\n        iVar1 = fcn.0004f6d0(arg_8h);\n        if (iVar1 == 0) {\n            return 0;\n        }\n    }\n    if (var_4h != 0) {\n        var_8h = (var_4h + 1) - arg_ch;\n    }\n    iVar1 = fcn.0004f4b0(arg_8h, arg_ch, var_8h, &var_8h, 0);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    *(arg_ch + var_8h) = 0;\n    return 1;\n}\n",
        "token_count": 342
    },
    "00052480": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00052480(int32_t arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_8h != 0) {\n        iVar2 = *(arg_8h + 8);\n        if ((*(iVar2 + 0xe8) != 0) && (*(iVar2 + 0xe8) != -0x7afb19a0)) {\n            *(iVar2 + 0x168) = *(iVar2 + 0xe8);\n            fcn.00052470(iVar2 + 0xe8, 0x8504e660);\n        }\n        if (((*(iVar2 + 0x164) != 0) && (cVar1 = fcn.00052950(*(iVar2 + 0xd8), iVar2),  cVar1 != '\\0')) &&\n           (*(iVar2 + 0x164) != -0x7afb1820)) {\n            *(iVar2 + 0x174) = *(iVar2 + 0x164);\n            fcn.00052470(iVar2 + 0x164, 0x8504e7e0);\n        }\n        fcn.000529b0(*(iVar2 + 8));\n        if (((*0x8507c58c != -1) && (arg_ch != 0)) &&\n           ((*0x85092bec == 0 &&\n            (iVar2 = fcn.00067c30(*(*(iVar2 + 8) + *0x8507c58c + 0x40), 0x8504eac0, 0x85092be8),  iVar2 == 0)))) {\n            *0x85092bec = 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 407
    },
    "000525a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000525a0(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint var_4h;\n    \n    if (arg_8h != 0) {\n        iVar2 = *(arg_8h + 8);\n        if ((*(iVar2 + 0xe8) != 0) && (*(iVar2 + 0xe8) == -0x7afb19a0)) {\n            *(iVar2 + 0xe8) = *(iVar2 + 0x168);\n        }\n        if (((*(iVar2 + 0x164) != 0) && (cVar1 = fcn.00052950(*(iVar2 + 0xd8), iVar2),  cVar1 != '\\0')) &&\n           (*(iVar2 + 0x164) == -0x7afb1820)) {\n            *(iVar2 + 0x164) = *(iVar2 + 0x174);\n        }\n        if ((*0x85092bec != 0) && (iVar2 = fcn.00068090(0x85092be8),  iVar2 == 0)) {\n            *0x85092bec = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 274
    },
    "00052660": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid __cdecl fcn.00052660(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    pcVar1 = *(arg_8h + 0x168);\n    var_14h = 0;\n    iVar2 = fcn.000393c0(arg_8h, &var_ch);\n    if (iVar2 == 0) {\n        for (var_8h = 0; var_8h < arg_10h; var_8h = var_8h + 1) {\n            iVar2 = *(*(arg_ch + var_8h * 4) + 8);\n            if (*0x10 != 0x14) {\n                if ((*(iVar2 + 6) & 5) == 0) {\n                    var_24h = (**0x8500d238)(iVar2, 0);\n                }\n                else {\n                    var_24h = *(iVar2 + 0xc);\n                }\n                var_10h = var_24h;\n            }\n            var_4h = *(iVar2 + 0x14);\n            iVar2 = fcn.0004b810(var_ch, 0, 0, var_10h, var_4h, 0);\n            if (iVar2 == 0) {\n                *(*(arg_ch + var_8h * 4) + 0x38) = 0;\n            }\n            else {\n                *(*(arg_ch + var_8h * 4) + 0x38) = 1;\n                var_14h = var_14h + 1;\n            }\n        }\n    }\n    if (var_14h == arg_10h) {\n        (*pcVar1)(arg_8h, arg_ch, arg_10h);\n    }\n    else {\n        for (var_8h = 0; var_8h < arg_10h; var_8h = var_8h + 1) {\n            if (*(*(arg_ch + var_8h * 4) + 0x38) == '\\x01') {\n                (*pcVar1)(arg_8h, arg_ch + var_8h * 4, 1);\n            }\n            else if (*(*(arg_ch + var_8h * 4) + 0x1c + *(*(arg_ch + var_8h * 4) + 0x1e)) != -0x3fffff66) {\n                fcn.00052a50(arg_8h, *(arg_ch + var_8h * 4));\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 720
    },
    "000529b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000529b0(uint8_t *arg_8h)\n\n{\n    uint var_ch;\n    uint32_t var_8h;\n    uint8_t *var_4h;\n    \n    if (*0x8507c58c == 0xffffffff) {\n        var_4h = arg_8h;\n        for (var_8h = 0; var_8h < 0x80; var_8h = var_8h + 1) {\n            if ((((2 < *var_4h) && (*var_4h < 7)) && ((var_4h[1] == 0 || (var_4h[1] == 1)))) && (*(var_4h + 4) == 0)) {\n                *0x8507c58c = var_8h;\n                break;\n            }\n            var_4h = var_4h + 1;\n        }\n        if (*0x8507c58c == 0xffffffff) {\n            return 0;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 236
    },
    "00052a50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00052a50(int32_t arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = *(arg_8h + 8);\n    if (((*0x8507c58c != -1) || (cVar1 = fcn.000529b0(iVar2),  cVar1 != '\\0')) &&\n       ((iVar2 = iVar2 + *0x8507c58c,  *(arg_ch + 0x1c + *(arg_ch + 0x1e)) != 0 || (*(iVar2 + 0x3c) != 0)))) {\n        (**(iVar2 + 0x3c))(*(arg_8h + 0xc), arg_ch);\n    }\n    return;\n}\n",
        "token_count": 196
    },
    "00052b10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00052b10(int32_t *arg_8h, int32_t *arg_ch, int32_t *arg_10h, int32_t *arg_14h, int32_t *arg_18h)\n\n{\n    uint32_t var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint *var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_14h != NULL) {\n        *arg_14h = arg_8h[2];\n    }\n    if (((arg_18h != NULL) || (arg_10h != NULL)) || (arg_ch != NULL)) {\n        if (*(arg_8h + 7) == '\\0') {\n            var_1ch = arg_8h[2];\n            var_ch = 0;\n            var_10h = 0;\n            var_14h = 0;\n            for (; var_1ch != NULL; var_1ch = *var_1ch) {\n                var_ch = var_ch + var_1ch[5];\n                if (var_1ch[5] == 0) {\n                    var_2ch = 1;\n                }\n                else {\n                    var_2ch = (var_1ch[4] + var_1ch[6] & 0xfff) + 0xfff + var_1ch[5] >> 0xc;\n                }\n                var_10h = var_10h + var_2ch;\n                var_14h = var_14h + 1;\n            }\n            arg_8h[5] = var_14h;\n            arg_8h[1] = var_ch;\n            *arg_8h = var_10h;\n            *(arg_8h + 7) = 1;\n        }\n        if (arg_ch != NULL) {\n            *arg_ch = *arg_8h;\n        }\n        if (arg_10h != NULL) {\n            *arg_10h = arg_8h[5];\n        }\n        if (arg_18h != NULL) {\n            *arg_18h = arg_8h[1];\n        }\n    }\n    return;\n}\n",
        "token_count": 527
    },
    "00052c50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00052c50(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.00053560(arg_8h, 0, 0x1010102, &var_8h, 6);\n    if (iVar1 != 0) {\n        var_8h = 0;\n        var_4h._0_2_ = 0;\n    }\n    fcn.00039020(arg_8h, &var_8h, 6);\n    return;\n}\n",
        "token_count": 149
    },
    "00052ca0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00052ca0(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t var_4h;\n    \n    if (arg_ch != 0) {\n        iVar1 = fcn.00039280(arg_8h, &var_4h);\n        if ((iVar1 != 0) && (var_4h != 0)) {\n            arg_ch = 1;\n        }\n    }\n    fcn.00053560(arg_8h, 1, 0x1010e, &arg_ch, 4);\n    return;\n}\n",
        "token_count": 136
    },
    "00052cf0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.00052cf0(void)\n\n{\n    int32_t var_7ch;\n    uint var_78h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_4h;\n    \n    fcn.000359f0(0x85010af8, 0x85091114, 0x85091118);\n    fcn.0007f916(&var_78h, 0, 0x6c);\n    var_78h._0_1_ = 5;\n    var_78h._1_1_ = 0;\n    var_70h = 0x8504f4f0;\n    var_6ch = 0x8504f510;\n    var_68h = 0x8504f0e0;\n    var_64h = 0x8504fa50;\n    var_60h = 0x850261f0;\n    var_5ch = 0x8504f600;\n    var_58h = 0x8504f630;\n    var_54h = 0x85011b90;\n    var_50h = 0x8504fb10;\n    var_4ch = 0x85011b90;\n    fcn.0007f6d0(&var_48h, 0x850115fc);\n    var_3ch = 0x8504fb20;\n    var_38h = 0x8504fb30;\n    var_34h = 0x8504fbe0;\n    (**0x8500d02c)(&var_4h, 0x85092bf0, &var_78h, 0x6c);\n    var_7ch = var_4h;\n    if (var_4h == 0) {\n        (**0x8500d020)(&var_4h, 0x85092bf8, 100, 0xc);\n        if (var_4h == 0) {\n            (**0x8500d03c)(&var_4h, 0x85092bf4, 100);\n            if (var_4h == 0) {\n                var_7ch = fcn.0007eae0();\n                if ((var_7ch == 0) && (var_7ch = fcn.00053120(),  var_7ch == 0)) {\n                    *0x850928f6 = 1;\n                    var_7ch = 0;\n                }\n            }\n            else {\n                var_7ch = var_4h;\n            }\n        }\n        else {\n            var_7ch = var_4h;\n        }\n        if (var_7ch != 0) {\n            if (*0x85092bf8 != 0) {\n                (**0x8500d054)(*0x85092bf8);\n            }\n            if (*0x85092bf4 != 0) {\n                (**0x8500d064)(*0x85092bf4);\n            }\n            (**0x8500d028)(&var_4h, *0x85092bf0);\n        }\n    }\n    return var_7ch;\n}\n",
        "token_count": 798
    },
    "00052ed0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00052ed0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t **var_18h;\n    int32_t var_14h;\n    int32_t **var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = 0;\n    var_10h = NULL;\n    if (*0x850928f6 == '\\0') {\n        var_4h = -0x3fffffff;\n    }\n    else {\n        var_4h = fcn.00039130(arg_8h, &var_8h);\n        if (var_4h == 0) {\n            if (var_8h == 0) {\n                var_4h = fcn.00038ea0(arg_8h, &var_ch);\n                if (var_4h == 0) {\n                    if (var_ch == 0) {\n                        var_4h = fcn.00053310(arg_8h);\n                        if (var_4h != 0) {\n                            return var_4h;\n                        }\n                        var_4h = fcn.00038ea0(arg_8h, &var_ch);\n                        if (var_4h != 0) {\n                            return var_4h;\n                        }\n                        if (var_ch == 0) {\n                            return -0x3fffff63;\n                        }\n                    }\n                    if ((*0x85091114 == 0) ||\n                       ((*0x85091114 <= *(var_ch + 0x54) && (*(var_ch + 0x54) < *0x85091114 + *0x85091118)))) {\n                        (**0x8500d068)(&var_4h, &var_10h, *0x85092bf4, arg_ch, arg_10h);\n                        if ((var_4h == 0) && ((**0x8500d058)(&var_4h, &var_14h, *0x85092bf8),  var_4h == 0)) {\n                            *(var_14h + 0x38) = 0;\n                            fcn.00034d00(var_14h + 0x3c);\n                            for (var_18h = var_10h; *var_18h != NULL; var_18h = *var_18h) {\n                            }\n                            if (*(var_14h + 8) == 0) {\n                                *(var_14h + 0xc) = var_18h;\n                            }\n                            *var_18h = *(var_14h + 8);\n                            *(var_14h + 8) = var_10h;\n                            *(var_14h + 0x1c) = 0;\n                            (**(var_ch + 0x54))(var_ch, &var_14h, 1);\n                            fcn.00034df0(var_14h + 0x3c, 0xffffffff);\n                            var_4h = *(var_14h + 0x1c + *(var_14h + 0x1e));\n                        }\n                        if (var_10h != NULL) {\n                            (**0x8500d2a8)(var_10h);\n                        }\n                        if (var_14h != 0) {\n                            fcn.00034d90(var_14h + 0x3c);\n                            (**0x8500d05c)(var_14h);\n                        }\n                    }\n                    else {\n                        var_4h = -0x3ffffbed;\n                    }\n                }\n            }\n            else {\n                var_4h = 0x21590001;\n            }\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 836
    },
    "00053170": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00053170(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_510h;\n    int32_t var_30ch;\n    uint var_308h;\n    uint var_10ah;\n    int32_t var_104h;\n    uint var_100h;\n    \n    var_30ch = fcn.00039130(arg_8h, &var_104h);\n    if (var_30ch == 0) {\n        if (var_104h == 0) {\n            var_30ch = fcn.000391a0(arg_8h, &var_104h);\n            if (var_30ch == 0) {\n                if (var_104h == 0) {\n                    fcn.000396b0(arg_8h, 9);\n                    var_30ch = fcn.00053310(arg_8h);\n                    if ((var_30ch == 0) && (arg_ch != 0)) {\n                        var_30ch = fcn.00053560(arg_8h, 0, 0x1010d, &var_100h, 0x100);\n                        if (var_30ch != 0) {\n                            return var_30ch;\n                        }\n                        iVar1 = fcn.00038cb0(arg_8h, &var_510h, 0x100);\n                        if (((iVar1 == 0) && (var_510h == 0x7b)) &&\n                           (iVar1 = fcn.00038d30(arg_8h, &var_510h, 0x100),  iVar1 == 0)) {\n                            fcn.0007f6d6(&var_308h, 0x100, 0x85011620, &var_100h, &var_510h);\n                        }\n                        else {\n                            fcn.0007f6d6(&var_308h, 0x100, 0x8500d6b4, &var_100h);\n                        }\n                        var_10ah._0_2_ = 0;\n                        fcn.000390b0(arg_8h, &var_308h);\n                    }\n                    var_30ch = 0;\n                }\n                else {\n                    var_30ch = 0x21590001;\n                }\n            }\n        }\n        else {\n            var_30ch = 0x21590001;\n        }\n    }\n    return var_30ch;\n}\n",
        "token_count": 562
    },
    "00053310": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00053310(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_22ch;\n    uint var_224h;\n    int32_t var_220h;\n    uint var_21ch;\n    uint var_218h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.00039130(arg_8h, &var_8h);\n    if (iVar1 == 0) {\n        if (var_8h == 0) {\n            var_220h = fcn.00038d30(arg_8h, &var_218h, 0x100);\n            if (var_220h == 0) {\n                fcn.0007f6d0(&var_22ch, &var_218h);\n                (**0x8500d01c)(&var_220h, &var_224h, &var_ch, &var_21ch, 0x8508de88, 2, *0x85092bf0, arg_8h, &var_22ch, \n                               0, 0);\n                if (var_220h == 0x103) {\n                    var_220h = fcn.0003a0b0(arg_8h);\n                }\n                if (var_220h == 0) {\n                    var_220h = fcn.00038f10(arg_8h, var_ch);\n                    if (var_220h == 0) {\n                        fcn.00039720(arg_8h, 0, 0);\n                        var_220h = fcn.00038e30(arg_8h, &var_4h);\n                        if (var_220h == 0) {\n                            var_220h = fcn.00053560(arg_8h, 1, 0x1010e, &var_4h, 4);\n                        }\n                        var_220h = fcn.00053560(arg_8h, 0, 0x1010102, &var_14h, 6);\n                        if (var_220h != 0) {\n                            var_14h = 0;\n                            var_10h._0_2_ = 0;\n                        }\n                        fcn.00039020(arg_8h, &var_14h, 6);\n                        iVar1 = fcn.00039280(arg_8h, &var_8h);\n                        if (((iVar1 == 0) && (iVar1 = fcn.00038ea0(arg_8h, &var_ch),  iVar1 == 0)) && (var_ch != 0)) {\n                            fcn.00052480(var_ch, var_8h);\n                        }\n                    }\n                    if (var_220h != 0) {\n                        (**0x8500d06c)(&var_224h, var_ch);\n                    }\n                    var_220h = 0;\n                }\n            }\n        }\n        else {\n            var_220h = 0x21590064;\n        }\n    }\n    else {\n        var_220h = 0x21590064;\n    }\n    return var_220h;\n}\n",
        "token_count": 734
    },
    "00053560": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00053560(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t var_74h;\n    uint var_70h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t var_4h;\n    \n    var_74h = 0;\n    var_4h = fcn.00038ea0(arg_8h, &var_74h);\n    if (var_4h == 0) {\n        if (var_74h == 0) {\n            var_4h = -0x3fffff63;\n        }\n        else {\n            iVar1 = fcn.00034d00(&var_10h);\n            if (iVar1 == 0) {\n                var_4h = -0x3fffffff;\n            }\n            else {\n                var_60h = arg_ch;\n                var_5ch = arg_10h;\n                var_58h = arg_14h;\n                var_54h = arg_18h;\n                fcn.0007f8f2(&var_4h, var_74h, &var_70h);\n                if (var_4h == 0x103) {\n                    fcn.00034df0(&var_10h, 0xffffffff);\n                    var_4h = var_14h;\n                }\n                fcn.00034d90(&var_10h);\n            }\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 380
    },
    "00053630": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00053630(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h, uint arg_18h, uint32_t arg_1ch, uint32_t arg_20h)\n\n{\n    int32_t iVar1;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.0005b540(0);\n    if (arg_14h == 0xe) {\n        fcn.00059210(arg_8h, arg_10h, arg_18h, arg_1ch);\n    }\n    iVar1 = fcn.00039ba0(arg_8h, arg_10h, arg_18h, arg_14h, arg_20h + arg_14h, arg_1ch + arg_14h);\n    if (iVar1 == 0) {\n        if (arg_14h == 0xe) {\n            fcn.000365f0(0x7ff);\n        }\n    }\n    else if (arg_1ch < arg_20h) {\n        iVar1 = fcn.00053720(arg_8h, arg_ch, arg_10h, arg_14h, arg_20h);\n        if (iVar1 != 0) {\n            fcn.000539b0(arg_8h, arg_10h, arg_14h, arg_18h, arg_1ch);\n        }\n    }\n    else {\n        fcn.000539b0(arg_8h, arg_10h, arg_14h, arg_18h, arg_1ch);\n    }\n    return 0;\n}\n",
        "token_count": 368
    },
    "00053720": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00053720(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    int32_t **var_20h;\n    int32_t var_1ch;\n    int32_t **var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    var_18h = NULL;\n    var_1ch = 0;\n    var_10h = fcn.00038ea0(arg_8h, &var_ch);\n    if (var_10h == 0) {\n        if (var_ch == 0) {\n            var_10h = -0x3fffff63;\n        }\n        else {\n            var_14h = fcn.00036360(arg_14h + arg_18h);\n            if (var_14h == 0) {\n                var_10h = 0x21590004;\n            }\n            else {\n                (**0x8500d068)(&var_10h, &var_4h, *0x85092bf4, var_14h, arg_14h);\n                if (var_10h == 0) {\n                    fcn.0007f904(var_14h, arg_10h, arg_14h);\n                    (**0x8500d068)(&var_10h, &var_18h, *0x85092bf4, var_14h + arg_14h, arg_18h);\n                    if ((var_10h == 0) && ((**0x8500d058)(&var_10h, &var_1ch, *0x85092bf8),  var_10h == 0)) {\n                        for (var_20h = var_18h; *var_20h != NULL; var_20h = *var_20h) {\n                        }\n                        if (*(var_1ch + 8) == 0) {\n                            *(var_1ch + 0xc) = var_20h;\n                        }\n                        *var_20h = *(var_1ch + 8);\n                        *(var_1ch + 8) = var_18h;\n                        *(var_1ch + 0x1c) = 0;\n                        *(var_1ch + 0x40) = var_4h;\n                        var_10h = (**(var_ch + 0x34))(*(var_ch + 4), arg_ch, 0, arg_18h, var_1ch, &var_8h);\n                        if (var_10h == 0) {\n                            fcn.000539b0(arg_8h, var_14h, arg_14h, var_14h + arg_14h, var_8h);\n                        }\n                        else if (var_10h == 0x103) {\n                            var_1ch = 0;\n                            var_4h = 0;\n                            var_18h = NULL;\n                            var_14h = 0;\n                            var_10h = 0;\n                        }\n                    }\n                }\n                if (var_1ch != 0) {\n                    (**0x8500d05c)(var_1ch);\n                }\n                if (var_4h != 0) {\n                    (**0x8500d2a8)(var_4h);\n                }\n                if (var_18h != NULL) {\n                    (**0x8500d2a8)(var_18h);\n                }\n                fcn.00036460(var_14h);\n            }\n        }\n    }\n    return var_10h;\n}\n",
        "token_count": 839
    },
    "00053920": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00053920(void)\n\n{\n    int32_t iVar1;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    if (*0x850928f6 != '\\0') {\n        for (var_4h = 0; var_4h < 100; var_4h = var_4h + 1) {\n            iVar1 = fcn.00038ea0(var_4h, &var_10h);\n            if (((iVar1 == 0) && (var_10h != 0)) && (iVar1 = fcn.00039280(var_4h, &var_8h),  iVar1 == 0)) {\n                fcn.00052480(var_10h, var_8h);\n                iVar1 = fcn.00039210(var_4h, &var_ch);\n                if ((iVar1 == 0) && (var_ch != 0)) {\n                    fcn.00053310(var_4h);\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 247
    },
    "00053b30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00053b30(int32_t *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_4h = arg_ch;\n    iVar1 = fcn.00038ea0(arg_ch, &var_8h);\n    if ((iVar1 == 0) && (var_8h != 0)) {\n        iVar1 = fcn.00052ca0(var_4h, 0);\n        *arg_8h = iVar1;\n        iVar1 = fcn.00053560(var_4h, 1, 0x1010103, 0, 4);\n        *arg_8h = iVar1;\n        fcn.000525a0(var_8h);\n        iVar1 = fcn.00039720(var_4h, arg_10h, 0);\n        if (iVar1 == 0) {\n            (**0x8500d06c)(arg_8h, var_8h);\n        }\n        fcn.00038f10(var_4h, 0);\n        if (*arg_8h == 0x103) {\n            iVar1 = fcn.0003a0b0(var_4h);\n            *arg_8h = iVar1;\n        }\n    }\n    else {\n        *arg_8h = 0;\n    }\n    return;\n}\n",
        "token_count": 323
    },
    "00053c00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00053c00(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t var_1ch;\n    uint32_t var_18h;\n    int32_t var_14h;\n    int32_t *var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_ch = fcn.0003a170();\n    if (var_ch != -1) {\n        fcn.00052b10(arg_8h, 0, 0, &var_10h, &var_8h);\n        var_18h = var_8h;\n        iVar1 = fcn.00038e30(var_ch, &var_4h);\n        if ((iVar1 == 0) && ((var_4h == 0x80 || (var_4h == 0x20)))) {\n            fcn.0005b540(0);\n            iVar1 = fcn.00039c30(var_ch, var_10h, var_18h, var_18h);\n            if (iVar1 != 0) {\n                if (*var_10h == 0) {\n                    if (*0x10 != 0x18) {\n                        if ((*(var_10h + 6) & 5) == 0) {\n                            var_1ch = (**0x8500d238)(var_10h, 0);\n                        }\n                        else {\n                            var_1ch = var_10h[3];\n                        }\n                        var_14h = var_1ch;\n                    }\n                    var_18h = var_10h[5];\n                    if (0xe < var_18h) {\n                        fcn.000539b0(var_ch, var_14h, 0xe, var_14h + 0xe, var_18h - 0xe);\n                    }\n                }\n                else {\n                    var_14h = fcn.00036360(var_18h);\n                    if (var_14h != 0) {\n                        iVar1 = fcn.0007f8f8(var_10h, 0, var_14h, 0, var_18h, &var_18h);\n                        if ((iVar1 == 0) && (0xe < var_18h)) {\n                            fcn.000539b0(var_ch, var_14h, 0xe, var_14h + 0xe, var_18h - 0xe);\n                        }\n                        fcn.00036460(var_14h);\n                    }\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 581
    },
    "00053d60": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_88h\n\nvoid __cdecl fcn.00053d60(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_88h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.00035da0();\n    if (iVar1 < 0x1b) {\n        fcn.00057190(arg_8h, arg_ch);\n        do {\n            iVar1 = fcn.00056d10();\n            if (iVar1 != 0) break;\n        } while (var_4h != 0);\n        fcn.00057310(arg_8h, arg_ch);\n        fcn.00053ec0(arg_8h, arg_ch);\n    }\n    else {\n        do {\n            var_88h = arg_ch;\n            iVar1 = fcn.00048910(arg_ch, &var_88h, 0x80, &var_4h, 0xffffffff);\n            if (iVar1 != 0) break;\n        } while (var_4h != 0);\n        fcn.000488c0(arg_ch);\n    }\n    return;\n}\n",
        "token_count": 262
    },
    "00053e90": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00053e90(code *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00035da0();\n    if ((iVar1 < 0x1b) && (arg_8h != NULL)) {\n        (*arg_8h)(arg_ch, arg_10h, 0, 0, 0, 0, 4);\n    }\n    return;\n}\n",
        "token_count": 107
    },
    "00053f80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00053f80(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.00045cc0(0x8509ec04, 1, 0);\n    if (iVar1 == 1) {\n        var_4h = 0;\n    }\n    else {\n        iVar1 = fcn.00035b80(0x85011634, &var_8h);\n        if (iVar1 == 0) {\n            iVar1 = fcn.00060f50(var_8h, 0x8501163c, 0x85091120);\n            if (iVar1 == 0) {\n                iVar1 = fcn.00060f50(var_8h, 0x85011650, 0x85091124);\n                if (iVar1 == 0) {\n                    var_4h = fcn.00054340();\n                    if (((var_4h == 0) && (var_4h = fcn.00016440(0x85011664, 0x85092bfc),  var_4h == 0)) &&\n                       (var_4h = fcn.00016250(*0x85092bfc, 0x850500c0, 0),  var_4h == 0)) {\n                        var_4h = 0;\n                    }\n                    if (var_4h != 0) {\n                        fcn.00054070(arg_8h);\n                        fcn.0007a2b0(0x8509ec04);\n                    }\n                }\n                else {\n                    var_4h = -0x3fffffff;\n                }\n            }\n            else {\n                var_4h = -0x3fffffff;\n            }\n        }\n        else {\n            var_4h = -0x3fffffff;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 434
    },
    "00054070": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00054070(void)\n\n{\n    if (*0x8509ec04 != 0) {\n        *0x8509ec04 = 0;\n        fcn.00054390();\n        if (*0x85092bfc != 0) {\n            fcn.00016300(*0x85092bfc);\n            (**0x8500d2e4)();\n        }\n    }\n    return;\n}\n",
        "token_count": 93
    },
    "00054340": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00054340(void)\n\n{\n    uint uVar1;\n    \n    *0x8509111c = fcn.00036360(0x4000);\n    if (*0x8509111c == 0) {\n        uVar1 = 0xc000009a;\n    }\n    else {\n        fcn.0007f916(*0x8509111c, 0, 0x4000);\n        fcn.00032da0(0x8509ecb0);\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 129
    },
    "00054390": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00054771)\n// WARNING: Removing unreachable block (ram,0x000547a1)\n// WARNING: Removing unreachable block (ram,0x000547a8)\n// WARNING: Removing unreachable block (ram,0x000547b1)\n// WARNING: Removing unreachable block (ram,0x000547c4)\n// WARNING: Removing unreachable block (ram,0x000547cd)\n// WARNING: Removing unreachable block (ram,0x000547dd)\n// WARNING: Removing unreachable block (ram,0x0005480a)\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Removing unreachable block (ram,0x00054541)\n// WARNING: Removing unreachable block (ram,0x000544a8)\n// WARNING: Removing unreachable block (ram,0x000544d8)\n// WARNING: Removing unreachable block (ram,0x000544df)\n// WARNING: Removing unreachable block (ram,0x000544e8)\n// WARNING: Removing unreachable block (ram,0x000544fb)\n// WARNING: Removing unreachable block (ram,0x00054504)\n// WARNING: Removing unreachable block (ram,0x00054514)\n// WARNING: Removing unreachable block (ram,0x00054815)\n// WARNING: Removing unreachable block (ram,0x0005454c)\n// WARNING: Removing unreachable block (ram,0x0005482c)\n// WARNING: Removing unreachable block (ram,0x00054563)\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00054390(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    int32_t var_54h;\n    int32_t var_50h;\n    int32_t var_4ch;\n    uint var_44h;\n    int32_t var_40h;\n    int32_t var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint *var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    var_14h = 0;\n    var_ch = 0;\n    if (*0x8509111c != 0) {\n        (**0x8500d0d4)(&var_28h, 0, 0);\n        for (var_8h = 0; var_8h < 0x1000; var_8h = var_8h + 1) {\ncode_r0x000543df:\n            var_18h = 0;\n            var_44h = 0;\n            var_1h._0_1_ = (**0x8500d00c)();\n            for (var_10h = *(*0x8509111c + var_8h * 4); var_10h != NULL; var_10h = *var_10h) {\n                if (((var_10h[8] != 0) && (var_10h[10] == 2)) && (*(var_10h + 0xb6) != 0)) {\n                    var_18h = var_10h[8];\n                    var_44h = var_10h[7];\n                    var_10h[8] = 0;\n                    break;\n                }\n            }\n            (**0x8500d010)();\n            if (var_18h != 0) {\n                var_40h = (**0x8500d23c)(3, var_44h, 0, 0, 0, 0, 1, &var_28h, &var_4ch);\n                if (var_40h != 0) {\n                    iVar1 = *(var_40h + 0x60);\n                    *(iVar1 + -8) = 0;\n                    *(iVar1 + -4) = 0;\n                    *(iVar1 + -0x21) = 0;\n                    iVar1 = *(var_40h + 0x60);\n                    *(iVar1 + -0x24) = 0xf;\n                    *(iVar1 + -0x23) = 6;\n                    *(iVar1 + -0x10) = var_44h;\n                    *(iVar1 + -0xc) = var_18h;\n                    *(iVar1 + -0x20) = 4;\n                    *(iVar1 + -0x1c) = 0;\n                    *(iVar1 + -0x18) = 0;\n                    *(iVar1 + -0x14) = 0;\n                    var_3ch = (**0x8500d18c)();\n                    if (var_3ch == 0x103) {\n                        (**0x8500d19c)(&var_28h, 0, 0, 0, 0);\n                        var_3ch = var_4ch;\n                    }\n                }\n                goto code_r0x000543df;\n            }\n        }\n        var_38h = 0xffb3b4c0;\n        var_34h = 0xffffffff;\n        (**0x8500d310)(0, 0, &var_38h);\n        for (var_8h = 0; var_8h < 0x1000; var_8h = var_8h + 1) {\ncode_r0x00054643:\n            var_50h = 0;\n            var_44h = 0;\n            var_2ch = 0;\n            var_1h._0_1_ = (**0x8500d00c)();\n            for (var_10h = *(*0x8509111c + var_8h * 4); var_10h != NULL; var_10h = *var_10h) {\n                var_50h = 0;\n                if ((var_10h[8] != 0) && (var_10h[10] == 1)) {\n                    for (var_54h = 0; var_54h < 0xb; var_54h = var_54h + 1) {\n                        if (var_10h[var_54h * 3 + 0xc] != 0) {\n                            var_14h = var_54h;\n                            var_50h = var_10h[var_54h * 3 + 0xc];\n                            var_ch = var_10h[var_54h * 3 + 0xd];\n                            var_44h = var_10h[7];\n                            var_2ch = var_10h[8];\n                            var_10h[var_54h * 3 + 0xc] = 0;\n                            break;\n                        }\n                    }\n                    if (var_50h != 0) break;\n                }\n            }\n            (**0x8500d010)();\n            if (var_50h != 0) {\n                var_40h = (**0x8500d23c)(3, var_44h, 0, 0, 0, 0, 1, &var_28h, &var_4ch);\n                if (var_40h != 0) {\n                    iVar1 = *(var_40h + 0x60);\n                    *(iVar1 + -8) = 0;\n                    *(iVar1 + -4) = 0;\n                    *(iVar1 + -0x21) = 0;\n                    iVar1 = *(var_40h + 0x60);\n                    *(iVar1 + -0x24) = 0xf;\n                    *(iVar1 + -0x23) = 0xb;\n                    *(iVar1 + -0x10) = var_44h;\n                    *(iVar1 + -0xc) = var_2ch;\n                    *(iVar1 + -0x20) = var_14h;\n                    *(iVar1 + -0x1c) = var_50h;\n                    *(iVar1 + -0x18) = var_ch;\n                    var_3ch = (**0x8500d18c)();\n                    if (var_3ch == 0x103) {\n                        (**0x8500d19c)(&var_28h, 0, 0, 0, 0);\n                        var_3ch = var_4ch;\n                    }\n                    var_10h = fcn.00054ce0(var_2ch, &var_1h);\n                    if (var_10h != NULL) {\n                        var_10h[var_14h * 3 + 0xc] = 0;\n                        (**0x8500d010)();\n                    }\n                }\n                goto code_r0x00054643;\n            }\n        }\n        var_1h._0_1_ = (**0x8500d00c)();\n        for (var_8h = 0; var_8h < 0x1000; var_8h = var_8h + 1) {\n            var_10h = *(*0x8509111c + var_8h * 4);\n            while (var_10h != NULL) {\n                puVar2 = *var_10h;\n                fcn.00036460(var_10h);\n                var_10h = puVar2;\n            }\n        }\n        fcn.00036460(*0x8509111c);\n        *0x8509111c = 0;\n        (**0x8500d010)();\n    }\n    return;\n}\n",
        "token_count": 2157
    },
    "00054980": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00054980(uint arg_8h, uint32_t arg_ch, uint arg_10h, uint arg_14h, uint *arg_18h, int32_t arg_1ch)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    uint var_34h;\n    uint *var_30h;\n    uint *var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint *var_20h;\n    uint var_1ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    uVar3 = (arg_ch >> 5) % 0x1000;\n    var_1h._0_1_ = 0;\n    if (arg_ch == 0) {\n        return 0xc00000f0;\n    }\n    fcn.000379b0(&var_1ch, 0x11);\n    if (arg_1ch == 0) {\n        var_1h._0_1_ = (**0x8500d00c)();\n    }\n    for (var_20h = *(*0x8509111c + uVar3 * 4); (var_20h != NULL && (var_20h[8] != arg_ch)); var_20h = *var_20h) {\n    }\n    if (var_20h == NULL) {\n        var_20h = fcn.00036360(0x164);\n        if (var_20h == NULL) {\n            var_24h = 0xc000009a;\n            goto code_r0x00054bdd;\n        }\n        fcn.0007f916(var_20h, 0, 0x164);\n        *var_20h = *(*0x8509111c + uVar3 * 4);\n        *(*0x8509111c + uVar3 * 4) = var_20h;\n        var_20h[8] = arg_ch;\n        for (var_8h = 0; var_8h < 0xb; var_8h = var_8h + 1) {\n            var_20h[var_8h * 3 + 0xb] = arg_ch;\n        }\n    }\n    else {\n        var_20h[9] = 0;\n        fcn.0007f916(var_20h + 0xb, 0, 0x84);\n        fcn.0007f916(var_20h + 0x2c, 0, 0x4b);\n        fcn.0007f916(var_20h + 0xfb, 0, 0x4b);\n        var_20h[0x52] = 0;\n        var_20h[0x53] = 0;\n        var_20h[0x54] = 0;\n        *(var_20h + 0x55) = 0;\n        *(var_20h + 0x155) = 0;\n        var_20h[0x56] = 0;\n        for (var_8h = 0; var_8h < 0xb; var_8h = var_8h + 1) {\n            var_20h[var_8h * 3 + 0xb] = arg_ch;\n        }\n    }\n    uVar2 = fcn.0007f72a();\n    var_20h[1] = uVar2;\n    var_2ch = &var_1ch;\n    var_30h = var_20h + 2;\n    do {\n        cVar1 = *var_2ch;\n        *var_30h = cVar1;\n        var_2ch = var_2ch + 1;\n        var_30h = var_30h + 1;\n    } while (cVar1 != '\\0');\n    var_20h[7] = arg_8h;\n    var_20h[10] = arg_10h;\n    var_20h[0x52] = 0x54694343;\n    var_20h[0x54] = arg_14h;\n    var_20h[0x53] = arg_ch;\n    if (arg_18h != NULL) {\n        *arg_18h = var_20h + 0x52;\n    }\n    fcn.00032d80(var_20h + 0x57);\n    var_24h = 0;\ncode_r0x00054bdd:\n    if (arg_1ch == 0) {\n        (**0x8500d010)();\n    }\n    return var_24h;\n}\n",
        "token_count": 1060
    },
    "00054c00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.00054c00(uint32_t arg_8h, uint *arg_ch)\n\n{\n    uint32_t uVar1;\n    uint var_14h;\n    uint var_10h;\n    uint *var_ch;\n    uint *var_8h;\n    uint var_1h;\n    \n    uVar1 = (arg_8h >> 5) % 0x1000;\n    if (arg_8h == 0) {\n        var_10h = 0xc00000ef;\n    }\n    else {\n        (**0x8500d00c)();\n        var_ch = NULL;\n        for (var_8h = *(*0x8509111c + uVar1 * 4); (var_8h != NULL && (var_8h[8] != arg_8h)); var_8h = *var_8h) {\n            var_ch = var_8h;\n        }\n        if (var_8h == NULL) {\n            var_10h = 0xc0000034;\n        }\n        else {\n            if (arg_ch != NULL) {\n                *arg_ch = var_8h[10];\n            }\n            if (var_ch == NULL) {\n                *(*0x8509111c + uVar1 * 4) = *var_8h;\n            }\n            else {\n                *var_ch = *var_8h;\n            }\n            fcn.00036460(var_8h);\n            var_10h = 0;\n        }\n        (**0x8500d010)();\n    }\n    return var_10h;\n}\n",
        "token_count": 364
    },
    "00054ce0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00054ce0(uint32_t arg_8h, uchar *arg_ch)\n\n{\n    uchar uVar1;\n    uint var_8h;\n    uint *var_4h;\n    \n    if ((arg_8h == 0) || (*0x8509111c == 0)) {\n        var_4h = NULL;\n    }\n    else {\n        if (arg_ch != NULL) {\n            uVar1 = (**0x8500d00c)();\n            *arg_ch = uVar1;\n        }\n        for (var_4h = *(*0x8509111c + ((arg_8h >> 5) % 0x1000) * 4); (var_4h != NULL && (var_4h[8] != arg_8h));\n            var_4h = *var_4h) {\n        }\n        if ((var_4h == NULL) && (arg_ch != NULL)) {\n            (**0x8500d010)();\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 231
    },
    "00054d80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint32_t __cdecl fcn.00054d80(uint noname_0, uint32_t arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    uint16_t extraout_var;\n    uint var_14h;\n    uint32_t var_10h;\n    uint *var_ch;\n    uint32_t var_8h;\n    uint var_1h;\n    \n    var_10h = 0;\n    (**0x8500d00c)();\n    var_8h = 0;\n    do {\n        if (0xfff < var_8h) {\ncode_r0x00054e1d:\n            (**0x8500d010)();\n            if (var_10h == 0) {\n                var_10h = fcn.0003baa0(arg_ch & 0xffff | extraout_var << 0x10);\n            }\n            return var_10h;\n        }\n        for (var_ch = *(*0x8509111c + var_8h * 4); var_ch != NULL; var_ch = *var_ch) {\n            if ((((var_ch[8] != 0) && (var_ch[10] == 2)) && (*(var_ch + 0xb6) == arg_10h)) &&\n               (*(var_ch + 0x2d) == arg_14h)) {\n                var_10h = *(var_ch + 0x55);\n                goto code_r0x00054e1d;\n            }\n        }\n        var_8h = var_8h + 1;\n    } while( true );\n}\n",
        "token_count": 365
    },
    "00054e50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00054e50(void)\n\n{\n    int32_t iVar1;\n    uint *var_10h;\n    uint32_t var_ch;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    (**0x8500d00c)();\n    for (var_ch = 0; var_ch < 0x1000; var_ch = var_ch + 1) {\n        for (var_10h = *(*0x8509111c + var_ch * 4); var_10h != NULL; var_10h = *var_10h) {\n            if (((var_10h[8] != 0) && (var_10h[10] == 2)) && (*(var_10h + 0x55) != '\\0')) {\n                var_4h = var_4h + 1;\n            }\n        }\n    }\n    (**0x8500d010)();\n    iVar1 = fcn.0003ba50();\n    return iVar1 + var_4h;\n}\n",
        "token_count": 230
    },
    "00054f00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00054f00(int32_t arg_8h, int32_t arg_ch, uint *arg_10h)\n\n{\n    uint *arg_18h;\n    int32_t iVar1;\n    uint var_3ch;\n    int32_t var_38h;\n    int32_t var_34h;\n    int32_t *var_30h;\n    int32_t *var_2ch;\n    uint32_t var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t *var_18h;\n    int32_t *var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = *(arg_8h + 0xc);\n    if (iVar1 == 0) {\n        return 1;\n    }\n    if (*(iVar1 + 5) == '\\x10') {\n        var_14h = 0x8501167c;\n        var_18h = iVar1 + 8;\n        for (var_10h = 0x10; 3 < var_10h; var_10h = var_10h - 4) {\n            if (*var_18h != *var_14h) goto code_r0x00054f6a;\n            var_14h = var_14h + 1;\n            var_18h = var_18h + 1;\n        }\n        if (var_10h == 0) {\ncode_r0x00054fec:\n            var_20h = 0;\n        }\n        else {\ncode_r0x00054f6a:\n            var_1ch = *var_18h - *var_14h;\n            if (var_1ch == 0) {\n                if (var_10h == 1) goto code_r0x00054fec;\n                var_1ch = *(var_18h + 1) - *(var_14h + 1);\n                if (var_1ch == 0) {\n                    if (var_10h == 2) goto code_r0x00054fec;\n                    var_1ch = *(var_18h + 2) - *(var_14h + 2);\n                    if (var_1ch == 0) {\n                        if ((var_10h == 3) || (var_1ch = *(var_18h + 3) - *(var_14h + 3),  var_1ch == 0))\n                        goto code_r0x00054fec;\n                    }\n                }\n            }\n            var_20h = 1;\n            if (var_1ch < 1) {\n                var_20h = -1;\n            }\n        }\n        if (var_20h == 0) {\n            iVar1 = fcn.00054980(*(arg_ch + 0x14), *(arg_ch + 0x18), 1, 0, 0, 0);\n            if (iVar1 == 0) {\n                *arg_10h = 0x850511d0;\n                arg_10h[1] = *(arg_ch + 0x18);\n                return 1;\n            }\n            *(arg_8h + 0x18) = iVar1;\n            return 0;\n        }\n    }\n    if (*(iVar1 + 5) != '\\x11') {\n        return 1;\n    }\n    var_2ch = 0x85011690;\n    var_30h = iVar1 + 8;\n    for (var_28h = 0x11; 3 < var_28h; var_28h = var_28h - 4) {\n        if (*var_30h != *var_2ch) goto code_r0x000550b4;\n        var_2ch = var_2ch + 1;\n        var_30h = var_30h + 1;\n    }\n    if (var_28h == 0) {\ncode_r0x00055136:\n        var_38h = 0;\n    }\n    else {\ncode_r0x000550b4:\n        var_34h = *var_30h - *var_2ch;\n        if (var_34h == 0) {\n            if (var_28h == 1) goto code_r0x00055136;\n            var_34h = *(var_30h + 1) - *(var_2ch + 1);\n            if (var_34h == 0) {\n                if (var_28h == 2) goto code_r0x00055136;\n                var_34h = *(var_30h + 2) - *(var_2ch + 2);\n                if (var_34h == 0) {\n                    if ((var_28h == 3) || (var_34h = *(var_30h + 3) - *(var_2ch + 3),  var_34h == 0))\n                    goto code_r0x00055136;\n                }\n            }\n        }\n        var_38h = 1;\n        if (var_34h < 1) {\n            var_38h = -1;\n        }\n    }\n    if (var_38h == 0) {\n        arg_18h = iVar1 + 9 + *(iVar1 + 5);\n        iVar1 = fcn.00054980(*(arg_ch + 0x14), *(arg_ch + 0x18), 2, *arg_18h, arg_18h, 0);\n        if (iVar1 != 0) {\n            *(arg_8h + 0x18) = iVar1;\n            return 0;\n        }\n        *arg_10h = 0x850511d0;\n        arg_10h[1] = *(arg_ch + 0x18);\n    }\n    return 1;\n}\n",
        "token_count": 1318
    },
    "000551d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000551d0(uint arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    uint16_t *puVar1;\n    int32_t iVar2;\n    uint var_38h;\n    int32_t var_34h;\n    int32_t var_30h;\n    int32_t *var_2ch;\n    int32_t *var_28h;\n    uint32_t var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uchar var_11h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = arg_10h;\n    if (*(arg_ch + 0x18) != 0) {\n        var_ch = fcn.00054c00(arg_10h, &var_4h);\n        goto code_r0x00055365;\n    }\n    var_10h = *(arg_ch + 0xc);\n    if (*(var_10h + 5) != '\\x10') goto code_r0x00055365;\n    var_28h = 0x8501167c;\n    var_2ch = var_10h + 8;\n    for (var_24h = 0x10; 3 < var_24h; var_24h = var_24h - 4) {\n        if (*var_2ch != *var_28h) goto code_r0x00055254;\n        var_28h = var_28h + 1;\n        var_2ch = var_2ch + 1;\n    }\n    if (var_24h == 0) {\ncode_r0x000552d6:\n        var_34h = 0;\n    }\n    else {\ncode_r0x00055254:\n        var_30h = *var_2ch - *var_28h;\n        if (var_30h == 0) {\n            if (var_24h == 1) goto code_r0x000552d6;\n            var_30h = *(var_2ch + 1) - *(var_28h + 1);\n            if (var_30h == 0) {\n                if (var_24h == 2) goto code_r0x000552d6;\n                var_30h = *(var_2ch + 2) - *(var_28h + 2);\n                if (var_30h == 0) {\n                    if ((var_24h == 3) || (var_30h = *(var_2ch + 3) - *(var_28h + 3),  var_30h == 0))\n                    goto code_r0x000552d6;\n                }\n            }\n        }\n        var_34h = 1;\n        if (var_30h < 1) {\n            var_34h = -1;\n        }\n    }\n    if (var_34h == 0) {\n        puVar1 = var_10h + *(var_10h + 5) + 0xd;\n        iVar2 = fcn.00054ce0(arg_10h, &var_11h);\n        if (iVar2 != 0) {\n            if (*puVar1 < 0x4c) {\n                fcn.0007f904(iVar2 + 0xfb, puVar1, *puVar1);\n            }\n            (**0x8500d010)();\n        }\n    }\ncode_r0x00055365:\n    fcn.00016760(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 808
    },
    "000553b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.000553b0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint var_15h;\n    uint32_t var_10h;\n    uint var_ch;\n    uchar var_5h;\n    uint32_t var_4h;\n    \n    var_ch = *(arg_ch + 4);\n    var_15h._0_1_ = 1;\n    var_10h = 0;\n    var_4h = 0;\n    var_5h = 0;\n    uVar1 = (**0x8500d2a0)(var_ch, 0x80000000, 0, 0, &var_10h, 0);\n    if (uVar1 == 0) {\n        var_4h = fcn.00054ce0(*(arg_ch + 0x18), &var_5h);\n        if (var_4h == 0) {\n            *(arg_8h + 0x18) = 0xc000000d;\n            var_15h._0_1_ = 0;\n            uVar1 = var_4h;\n        }\n        else {\n            *(var_4h + 0x24) = var_10h;\n            uVar1 = var_10h;\n        }\n    }\n    if (var_4h != 0) {\n        uVar1 = (**0x8500d010)();\n    }\n    if (var_10h != 0) {\n        uVar1 = (**0x8500d2e4)();\n    }\n    return uVar1 & 0xffffff00 | var_15h;\n}\n",
        "token_count": 381
    },
    "00055460": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00055460(uint noname_0, int32_t arg_ch)\n\n{\n    uchar var_5h;\n    uint32_t var_4h;\n    \n    var_4h = 0;\n    var_4h = fcn.00054ce0(*(arg_ch + 0x18), &var_5h);\n    if (var_4h != 0) {\n        *(var_4h + 0x24) = 0;\n        var_4h = (**0x8500d010)();\n    }\n    return var_4h & 0xffffff00 | 1;\n}\n",
        "token_count": 139
    },
    "000554c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.000554c0(uint noname_0, int32_t arg_ch, uint *arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_34h;\n    uint *var_30h;\n    char *var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint16_t *var_11h;\n    uint *var_ch;\n    int32_t var_8h;\n    uint *var_4h;\n    \n    var_8h = 0;\n    var_11h._0_1_ = 0;\n    if (*(arg_ch + 0x14) == *0x85092bfc) {\n        *0x8 = *(*(arg_ch + 8) + 0x14) + 4;\n        var_8h = fcn.00054ce0(*(arg_ch + 0x18), &var_11h);\n        if (var_8h != 0) {\n            if ((*(var_8h + 0x154) != '\\0') || (*(var_8h + 0x155) != '\\0')) {\n                *(var_8h + 0x154) = 0;\n                *(var_8h + 0x155) = 0;\n                *(var_8h + 0x158) = 0;\n            }\n            if (((*(var_8h + 0x24) != 0) && (iVar2 = fcn.00054ce0(*(var_8h + 0x24), 0),  iVar2 != 0)) &&\n               (*stack0xffffffec < 0x4c)) {\n                fcn.0007f904(var_8h + 0xb0, stack0xffffffec, *stack0xffffffec);\n                var_ch = stack0xffffffec + 2;\n                iVar3 = fcn.0005aec0();\n                if ((iVar3 != 0) && (var_4h = fcn.00036360(0x2d),  var_4h != NULL)) {\n                    *var_4h = *(iVar2 + 0xff);\n                    var_4h[1] = *(iVar2 + 0x103);\n                    var_4h[2] = *(iVar2 + 0x107);\n                    *(var_4h + 3) = *(iVar2 + 0x10b);\n                    *(var_4h + 0xe) = *var_ch;\n                    *(var_4h + 0x12) = var_ch[1];\n                    *(var_4h + 0x16) = var_ch[2];\n                    *(var_4h + 0x1a) = *(var_ch + 3);\n                    var_2ch = var_8h + 8;\n                    var_30h = var_4h + 7;\n                    do {\n                        cVar1 = *var_2ch;\n                        *var_30h = cVar1;\n                        var_2ch = var_2ch + 1;\n                        var_30h = var_30h + 1;\n                    } while (cVar1 != '\\0');\n                    *arg_10h = 0x850516a0;\n                    arg_10h[1] = var_4h;\n                }\n            }\n        }\n    }\n    if (var_8h != 0) {\n        (**0x8500d010)();\n    }\n    return 1;\n}\n",
        "token_count": 805
    },
    "000556a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000556a0(uint arg_8h, int32_t arg_ch, uint16_t *arg_10h)\n\n{\n    int32_t iVar1;\n    ushort extraout_var;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = *(arg_ch + 0x18);\n    if (iVar1 < -0x3ffffdc9) {\n        if (iVar1 != -0x3ffffdca) {\n            if (iVar1 == -0x3fffff4b) {\n                var_8h = 3;\n                goto code_r0x00055748;\n            }\n            if (iVar1 == -0x3ffffee0) goto code_r0x0005571b;\n            if (iVar1 != -0x3ffffdf3) goto code_r0x0005573f;\n        }\n        var_8h = 1;\n    }\n    else {\n        if (iVar1 < -0x3ffffdbe) {\n            if (iVar1 == -0x3ffffdbf) {\ncode_r0x0005571b:\n                var_8h = 2;\n                goto code_r0x00055748;\n            }\n            if ((-0x3ffffdc5 < iVar1) && (iVar1 < -0x3ffffdc0)) {\n                var_8h = 4;\n                goto code_r0x00055748;\n            }\n        }\n        else if (iVar1 == 0) {\n            var_8h = 5;\n            goto code_r0x00055748;\n        }\ncode_r0x0005573f:\n        var_8h = *(arg_ch + 0x18);\n    }\ncode_r0x00055748:\n    iVar1 = fcn.0005aec0();\n    if (iVar1 != 0) {\n        fcn.0005aba0(0, var_8h, *(arg_10h + 1), arg_10h & 0xffff0000 | *arg_10h, *(arg_10h + 8), \n                     CONCAT22(extraout_var, arg_10h[7]), arg_10h + 0xe);\n    }\n    fcn.00036460(arg_10h);\n    fcn.00016760(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 516
    },
    "000557b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.000557b0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t var_6h;\n    \n    var_6h._0_1_ = 1;\n    *NULL = fcn.00054ce0(*(arg_ch + 0x18), &var_6h + 1);\n    if (*NULL != 0) {\n        if (*(*NULL + 0x154) != '\\0') {\n            *(*(arg_8h + 0x60) + 3) = *(*(arg_8h + 0x60) + 3) | 1;\n            fcn.00053f40(*NULL + 0x15c, arg_8h + 0x58);\n            *(arg_8h + 0x18) = 0x103;\n            var_6h._0_1_ = 0;\n        }\n        *NULL = (**0x8500d010)();\n    }\n    return *NULL & 0xffffff00 | var_6h;\n}\n",
        "token_count": 245
    },
    "00055840": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.00055840(uint noname_0, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    piVar2 = arg_ch + 4;\n    iVar3 = fcn.00054ce0(*(arg_ch + 0x18), &var_1h);\n    if (((iVar3 != 0) && (-1 < *piVar2)) && (*piVar2 < 0xb)) {\n        iVar1 = iVar3 + (*piVar2 * 3 + 0xb) * 4;\n        if (*(arg_ch + 8) == 0) {\n            *(iVar1 + 4) = 0;\n            *(iVar1 + 8) = 0;\n        }\n        else {\n            for (var_14h = 0; (*(var_14h * 8 + -0x7af721b0) != -1 && (*(var_14h * 8 + -0x7af721b0) != *piVar2));\n                var_14h = var_14h + 1) {\n            }\n            if (*(var_14h * 8 + -0x7af721b0) != -1) {\n                *(iVar1 + 4) = *(arg_ch + 8);\n                *(iVar1 + 8) = *(arg_ch + 0xc);\n                if (*(var_14h * 8 + -0x7af721ac) == 0) {\n                    *(arg_ch + 8) = 0;\n                    *(arg_ch + 0xc) = 0;\n                }\n                else {\n                    *(arg_ch + 8) = *(var_14h * 8 + -0x7af721ac);\n                    *(arg_ch + 0xc) = iVar1;\n                }\n            }\n        }\n    }\n    if (iVar3 != 0) {\n        (**0x8500d010)();\n    }\n    return 1;\n}\n",
        "token_count": 490
    },
    "00055980": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00055980(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint var_78h;\n    uint var_71h;\n    uint32_t var_5h;\n    \n    var_71h._0_1_ = 1;\n    uVar1 = fcn.00054ce0(*(arg_ch + 0x18), &var_5h);\n    if (uVar1 != 0) {\n        if (*(uVar1 + 0x154) != '\\0') {\n            *(arg_8h + 0x18) = 0;\n            *(arg_8h + 0x1c) = *(arg_ch + 4);\n            var_71h._0_1_ = 0;\n        }\n        unique0x10000097 = uVar1;\n        (**0x8500d010)();\n        uVar1 = (**0x8500d004)();\n        if ((uVar1 & 0xff) == 0) {\n            fcn.000379b0(&var_71h + 1, 100);\n            uVar1 = fcn.0003b900(&var_71h + 1);\n            if (uVar1 != 0) {\n                uVar1 = fcn.0003b860();\n            }\n        }\n    }\n    return uVar1 & 0xffffff00 | var_71h;\n}\n",
        "token_count": 329
    },
    "00055a20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00055a20(int32_t arg_8h, int32_t arg_ch, uint *arg_10h)\n\n{\n    uint32_t uVar1;\n    uint var_ch;\n    uint32_t var_6h;\n    \n    var_6h._0_1_ = 1;\n    if (*(arg_ch + 4) == 0) {\n        uVar1 = CONCAT31(arg_ch + 4 >> 8, 1);\n    }\n    else {\n        *NULL = fcn.00054ce0(*(arg_ch + 0x18), &var_6h + 1);\n        if (*NULL != 0) {\n            if (*(*NULL + 0x154) == '\\0') {\n                if ((*(arg_ch + 8) & 0x80) == 0) {\n                    *arg_10h = 0x85051ab0;\n                }\n            }\n            else {\n                *(arg_8h + 0x18) = 0;\n                *(arg_8h + 0x1c) = 0;\n                var_6h._0_1_ = 0;\n            }\n            *NULL = (**0x8500d010)();\n        }\n        uVar1 = *NULL & 0xffffff00 | var_6h;\n    }\n    return uVar1;\n}\n",
        "token_count": 307
    },
    "00055ab0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl fcn.00055ab0(uint arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_9h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00054ce0(*(*(arg_ch + 0x60) + 0x18), &var_9h);\n    if (var_4h != 0) {\n        if ((*(var_4h + 0x155) == '\\0') && (*(arg_ch + 0x18) == 0)) {\n            *0x8 = var_4h + 0xb0;\n            if ((*(*(arg_ch + 4) + 6) & 5) == 0) {\n                var_1ch = (**0x8500d0e8)(*(arg_ch + 4), 0, 1, 0, 0, 0x10);\n            }\n            else {\n                var_1ch = *(*(arg_ch + 4) + 0xc);\n            }\n            cVar1 = fcn.00056a70(var_4h, *(stack0xfffffff4 + 6), *(arg_ch + 0x1c) & 0xffff0000 | *(stack0xfffffff4 + 4)\n                                 , var_1ch, *(arg_ch + 0x1c));\n            if (cVar1 != '\\0') {\n                *(arg_ch + 0x18) = 0;\n                *(arg_ch + 0x1c) = 0;\n            }\n        }\n        (**0x8500d010)();\n    }\n    fcn.00016760(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 461
    },
    "00055bb0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00055c28)\n\nbool fcn.00055bb0(int32_t param_1, int32_t param_2, uint *param_3)\n\n{\n    int32_t *piVar1;\n    bool bVar2;\n    uint32_t extraout_ECX;\n    int32_t iVar3;\n    uint *puVar4;\n    uint *puVar5;\n    uint *in_FS_OFFSET;\n    int32_t var_8h;\n    int32_t var_ch;\n    uint *var_10h;\n    uint var_18h;\n    uint *var_34h;\n    int32_t var_30h;\n    uint var_2ch;\n    int32_t var_25h;\n    uint32_t var_20h;\n    uint var_1ch;\n    uint var_10h_2;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x8507b9d8;\n    uStack16 = 0x8507b910;\n    var_10h_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_10h_2;\n    var_34h = NULL;\n    bVar2 = false;\n    stack0xffffffd8 = 0;\n    var_30h = 0;\n    *var_10h = 0;\n    var_10h[1] = 0;\n    var_4h = 0;\n    piVar1 = *(var_ch + 0x10);\n    if (piVar1 != NULL) {\n        *NULL = (**0x8500d290)(piVar1, 0x24, 0, 0, 0);\n        if (*NULL == 0) {\n            var_30h = -0x3fffffe9;\n        }\n        else {\n            (**0x8500d29c)(*NULL, extraout_ECX & 0xffffff00 | *(var_8h + 0x20), 0);\n            bVar2 = true;\n            if ((piVar1[3] == 0x100) &&\n               (((piVar1[2] == 0x100 && (piVar1[4] == 1)) ||\n                ((piVar1[2] == 0x200 && (((*piVar1 == 0x301 || (*piVar1 == 0x400)) || (*piVar1 == 0x401)))))))) {\n                for (var_20h = 0;\n                    (var_20h < *0x85092c00 &&\n                    ((*(var_20h * 0xc + -0x7af6d3fc) != *piVar1 || (*(var_20h * 0xc + -0x7af6d3f8) != piVar1[1]))));\n                    var_20h = var_20h + 1) {\n                }\n                if ((var_20h < *0x85092c00) &&\n                   (((*piVar1 == 0x301 && (*(var_20h * 0xc + -0x7af6d3f4) != 0x303)) ||\n                    (((*piVar1 == 0x400 && (*(var_20h * 0xc + -0x7af6d3f4) != 0x404)) ||\n                     ((*piVar1 == 0x401 && (*(var_20h * 0xc + -0x7af6d3f4) != 0x403)))))))) {\n                    var_30h = 0;\n                }\n                else {\n                    var_34h = fcn.00036330(0x24);\n                    if (var_34h == NULL) {\n                        var_30h = -0x3fffff66;\n                    }\n                    else {\n                        var_10h[1] = var_34h;\n                        *var_10h = 0x85051e70;\n                        puVar4 = *(var_ch + 0x10);\n                        puVar5 = var_34h;\n                        for (iVar3 = 9; iVar3 != 0; iVar3 = iVar3 + -1) {\n                            *puVar5 = *puVar4;\n                            puVar4 = puVar4 + 1;\n                            puVar5 = puVar5 + 1;\n                        }\n                    }\n                }\n            }\n        }\n    }\n    var_4h = 0xffffffff;\n    if (var_30h != 0) {\n        fcn.00036460(var_34h);\n    }\n    if (stack0xffffffd8 != 0) {\n        if (bVar2) {\n            (**0x8500d298)(stack0xffffffd8);\n        }\n        (**0x8500d2a8)(stack0xffffffd8);\n    }\n    *(var_8h + 0x18) = var_30h;\n    *in_FS_OFFSET = var_10h_2;\n    return var_30h == 0;\n}\n",
        "token_count": 1100
    },
    "00055e70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_54h\n\nvoid fcn.00055e70(uint param_1, int32_t param_2, int32_t *param_3)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t extraout_ECX;\n    uint *in_FS_OFFSET;\n    uint var_8h;\n    int32_t var_ch;\n    int32_t *var_10h;\n    uint var_18h;\n    uint var_54h;\n    uint var_50h;\n    uint var_48h;\n    int32_t *var_44h;\n    int32_t *var_40h;\n    int32_t *var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_28h;\n    uint32_t var_21h;\n    uint var_1ch;\n    uint var_10h_2;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x8507b9c8;\n    uStack16 = 0x8507b910;\n    var_10h_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_10h_2;\n    var_28h = 0;\n    bVar3 = false;\n    if (*(var_ch + 0x18) == 0) {\n        var_4h = 0;\n        piVar1 = *(var_ch + 0x3c);\n        iVar4 = *(var_ch + 0x1c);\n        if (((piVar1 != NULL) && (iVar4 != 0)) && (var_28h = (**0x8500d290)(piVar1, iVar4, 0, 0, 0),  var_28h != 0)) {\n            (**0x8500d29c)(var_28h, extraout_ECX & 0xffffff00 | *(var_ch + 0x20), 1);\n            bVar3 = true;\n            if ((var_10h[2] == 0x100) && (var_10h[4] == 1)) {\n                for (stack0xffffffdc = 0;\n                    (stack0xffffffdc < *0x85092c00 &&\n                    ((*(stack0xffffffdc * 0xc + -0x7af6d3fc) != *var_10h ||\n                     (*(stack0xffffffdc * 0xc + -0x7af6d3f8) != var_10h[1])))); *0x8 = stack0xffffffdc + 1) {\n                }\n                if ((stack0xffffffdc == *0x85092c00) && (*0x85092c00 < 0x1000)) {\n                    *(stack0xffffffdc * 0xc + -0x7af6d3fc) = *var_10h;\n                    *(stack0xffffffdc * 0xc + -0x7af6d3f8) = var_10h[1];\n                    *(stack0xffffffdc * 0xc + -0x7af6d3f4) = *piVar1;\n                    *0x85092c00 = *0x85092c00 + 1;\n                }\n            }\n            else if (*var_10h == 0x400) {\n                uVar2 = var_10h[4];\n                if (uVar2 < 0x103) {\n                    if (uVar2 == 0x102) {\n                        stack0xffffffdc = 1;\n                        var_3ch = piVar1;\n                        while (var_3ch <= piVar1 + stack0xffffffdc * -0x18 + iVar4) {\n                            iVar5 = fcn.00054d80(var_3ch[1], var_3ch[2], var_3ch[3], var_3ch[4]);\n                            if (iVar5 == 0) {\n                                var_3ch = var_3ch + 6;\n                            }\n                            else {\n                                fcn.0007f70c(var_3ch, var_3ch + 6, (iVar4 - (var_3ch - piVar1)) + -0x18);\n                                *NULL = stack0xffffffdc + 1;\n                            }\n                        }\n                        *(var_ch + 0x1c) = *(var_ch + 0x1c) + (stack0xffffffdc + -1) * -0x18;\n                    }\n                    else if (uVar2 == 1) {\n                        iVar4 = fcn.00054e50();\n                        piVar1[0xe] = piVar1[0xe] - iVar4;\n                    }\n                    else if (uVar2 == 0x101) {\n                        stack0xffffffdc = 1;\n                        var_44h = piVar1;\n                        while (var_44h <= piVar1 + stack0xffffffdc * -0x14 + iVar4) {\n                            iVar5 = fcn.00054d80(var_44h[1], var_44h[2], var_44h[3], var_44h[4]);\n                            if (iVar5 == 0) {\n                                var_44h = var_44h + 5;\n                            }\n                            else {\n                                fcn.0007f70c(var_44h, var_44h + 5, (iVar4 - (var_44h - piVar1)) + -0x14);\n                                *NULL = stack0xffffffdc + 1;\n                            }\n                        }\n                        *(var_ch + 0x1c) = *(var_ch + 0x1c) + (stack0xffffffdc + -1) * -0x14;\n                    }\n                }\n                else if (uVar2 == 0x110) {\n                    stack0xffffffdc = 0;\n                    var_40h = piVar1;\n                    while (var_40h < piVar1 + (iVar4 - stack0xffffffdc)) {\n                        iVar5 = fcn.00054d80(var_40h[2], var_40h[3], var_40h[4], var_40h[5]);\n                        if (iVar5 == 0) {\n                            var_40h = var_40h + *var_40h;\n                        }\n                        else {\n                            fcn.0007f70c(var_40h, var_40h + *var_40h, (iVar4 - (var_40h - piVar1)) - *var_40h);\n                            *0x8 = stack0xffffffdc + *var_40h;\n                        }\n                    }\n                    *(var_ch + 0x1c) = *(var_ch + 0x1c) - stack0xffffffdc;\n                }\n            }\n        }\n    }\n    var_4h = 0xffffffff;\n    if (var_28h != 0) {\n        if (bVar3) {\n            (**0x8500d298)(var_28h);\n        }\n        (**0x8500d2a8)(var_28h);\n    }\n    fcn.00036460(var_10h);\n    fcn.00016760(var_8h, var_ch);\n    *in_FS_OFFSET = var_10h_2;\n    return;\n}\n",
        "token_count": 1638
    },
    "000562e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.000562e0(int32_t *arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            int32_t *arg_24h, int32_t *arg_28h)\n\n{\n    int32_t iVar1;\n    ushort extraout_var;\n    int32_t var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint16_t *var_dh;\n    ushort *var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    var_20h = fcn.00054ce0(*arg_8h, &var_dh);\n    if (var_20h == 0) {\n        var_28h = -0x3fffff66;\n    }\n    else {\n        *0x4 = arg_10h + 4;\n        var_8h = var_20h + 0xff;\n        iVar1 = fcn.0005aec0();\n        if (iVar1 != 0) {\n            fcn.0005aba0(1, 0, *(arg_10h + 10), var_8h & 0xffff0000 | *(arg_10h + 8), *(var_8h + 1), \n                         CONCAT22(extraout_var, *var_8h), var_20h + 8);\n        }\n        (**0x8500d010)();\n        var_20h = 0;\n        var_28h = (*arg_8h[1])(arg_8h[2], arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, arg_24h, arg_28h);\n        if ((var_28h == -0x3fffffea) && (*arg_28h != 0)) {\n            var_28h = -0x3ffffec0;\n            var_4h = fcn.00054ce0(*(*(*arg_28h + 0x60) + 0x18), &var_dh);\n            if (var_4h != 0) {\n                *(var_4h + 0x154) = 0;\n                *(var_4h + 0x155) = 0;\n                *(var_4h + 0x158) = 0;\n                if (((*(var_4h + 0x24) == *arg_8h) && (*(var_4h + 0x150) == *arg_24h)) &&\n                   (*arg_24h = var_4h + 0x148,  *stack0xfffffff0 < 0x4c)) {\n                    fcn.0007f904(var_4h + 0xb0, stack0xfffffff0, *stack0xfffffff0);\n                    var_28h = -0x3fffffea;\n                }\n            }\n        }\n    }\n    if ((var_20h != 0) || (var_4h != 0)) {\n        (**0x8500d010)();\n    }\n    return var_28h;\n}\n",
        "token_count": 736
    },
    "000564b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.000564b0(int32_t arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint var_10h;\n    uint var_ch;\n    uchar var_5h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    var_4h = fcn.00054ce0(*(arg_ch + 4), &var_5h);\n    if ((var_4h == 0) || (cVar1 = *(var_4h + 0x154),  (**0x8500d010)(),  cVar1 != '\\0')) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = (**(arg_8h + 4))(*(arg_8h + 8), *(arg_ch + 8), arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n    }\n    return uVar2;\n}\n",
        "token_count": 257
    },
    "00056550": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00056550(int32_t arg_8h, int32_t arg_ch, uint arg_10h, uint32_t arg_14h, uint arg_18h, uint32_t *arg_1ch, \n            uint arg_20h, uint *arg_24h)\n\n{\n    char cVar1;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_9h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    var_4h = fcn.00054ce0(*(arg_ch + 4), &var_9h);\n    if (var_4h == 0) {\n        var_18h = (**(arg_8h + 4))(*(arg_8h + 8), *(arg_ch + 8), arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, arg_24h);\n    }\n    else {\n        *0x8 = var_4h + 0xb0;\n        if (*(var_4h + 0x154) == '\\0') {\n            if (*(var_4h + 0x155) == '\\0') {\n                cVar1 = fcn.00056a70(var_4h, *(var_4h + 0xb6), arg_14h & 0xffff0000 | *(var_4h + 0xb4), arg_20h, arg_14h\n                                    );\n                if (cVar1 == '\\0') {\n                    (**0x8500d010)();\n                    var_4h = 0;\n                    if (*(arg_8h + 4) == 0) {\n                        *arg_1ch = 0;\n                        *arg_24h = 0;\n                        var_18h = 0xc000021b;\n                    }\n                    else {\n                        var_18h = (**(arg_8h + 4))(*(arg_8h + 8), *(arg_ch + 8), arg_10h, arg_14h, arg_18h, arg_1ch, \n                                                   arg_20h, arg_24h);\n                    }\n                }\n                else {\n                    *arg_1ch = arg_14h;\n                    *arg_24h = 0;\n                    var_18h = 0;\n                }\n            }\n            else {\n                (**0x8500d010)();\n                var_4h = 0;\n                var_18h = (**(arg_8h + 4))(*(arg_8h + 8), *(arg_ch + 8), arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, \n                                           arg_24h);\n            }\n        }\n        else {\n            *arg_1ch = 0;\n            *arg_24h = 0;\n            var_18h = 0xc000021b;\n        }\n    }\n    if (var_4h != 0) {\n        (**0x8500d010)();\n    }\n    return var_18h;\n}\n",
        "token_count": 692
    },
    "00056770": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n\nuint __cdecl\nfcn.00056770(int32_t arg_8h, int32_t arg_ch, uint arg_10h, uint32_t arg_14h, int32_t arg_18h, int32_t *arg_1ch, \n            uint arg_20h)\n\n{\n    char cVar1;\n    int32_t var_28h;\n    uint32_t var_24h;\n    uint32_t var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_9h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h;\n    var_10h = arg_ch;\n    var_4h = 0;\n    var_4h = fcn.00054ce0(*(arg_ch + 4), &var_9h);\n    if (var_4h == 0) {\n        var_18h = (**(var_14h + 4))(*(var_14h + 8), *(var_10h + 8), arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n    }\n    else {\n        *0x4 = var_4h + 0xb0;\n        if (*(var_4h + 0x154) == '\\0') {\n            if (*(var_4h + 0x155) == '\\0') {\n                if (*arg_1ch == 0) {\n                    if ((*(arg_1ch + 6) & 5) == 0) {\n                        var_28h = (**0x8500d238)(arg_1ch, 0);\n                    }\n                    else {\n                        var_28h = arg_1ch[3];\n                    }\n                    var_1ch = var_28h + arg_18h;\n                    cVar1 = fcn.00056a70(var_4h, *(stack0xfffffff4 + 6), arg_14h & 0xffff0000 | *(stack0xfffffff4 + 4), \n                                         var_1ch, arg_14h);\n                    if (cVar1 == '\\0') {\n                        (**0x8500d010)();\n                        var_4h = 0;\n                        var_18h = (**(var_14h + 4))(*(var_14h + 8), *(var_10h + 8), arg_10h, arg_14h, arg_18h, arg_1ch, \n                                                    arg_20h);\n                    }\n                    else {\n                        var_18h = 0;\n                    }\n                }\n                else {\n                    var_20h = fcn.00036360(arg_14h);\n                    if (var_20h == 0) {\n                        (**0x8500d010)();\n                        var_4h = 0;\n                        var_18h = (**(var_14h + 4))(*(var_14h + 8), *(var_10h + 8), arg_10h, arg_14h, arg_18h, arg_1ch, \n                                                    arg_20h);\n                    }\n                    else {\n                        (**0x85091120)(arg_1ch, arg_18h, var_20h, 0, arg_14h, &var_24h);\n                        var_20h = var_24h;\n                        cVar1 = fcn.00056a70(var_4h, *(stack0xfffffff4 + 6), \n                                             var_24h & 0xffff0000 | *(stack0xfffffff4 + 4), var_24h, var_24h);\n                        if (cVar1 == '\\0') {\n                            (**0x8500d010)();\n                            var_4h = 0;\n                            var_18h = (**(var_14h + 4))(*(var_14h + 8), *(var_10h + 8), arg_10h, arg_14h, arg_18h, \n                                                        arg_1ch, arg_20h);\n                        }\n                        else {\n                            var_18h = 0;\n                        }\n                        fcn.00036460(var_20h);\n                    }\n                }\n            }\n            else {\n                (**0x8500d010)();\n                var_4h = 0;\n                var_18h = (**(var_14h + 4))(*(var_14h + 8), *(var_10h + 8), arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h)\n                ;\n            }\n        }\n        else {\n            var_18h = 0xc000021b;\n        }\n    }\n    if (var_4h != 0) {\n        (**0x8500d010)();\n    }\n    return var_18h;\n}\n",
        "token_count": 1125
    },
    "00056a70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00056a70(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint16_t *var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    code *var_4h;\n    \n    if ((*(arg_8h + 0x154) == '\\0') && (*(arg_8h + 0x155) == '\\0')) {\n        var_8h = *(arg_8h + 0x158) == 0;\n        var_14h = arg_8h + 0xff;\n        iVar2 = fcn.0007ea00(arg_14h, arg_18h, var_8h, *(arg_8h + 0x101), *var_14h, arg_ch, arg_10h, &var_1ch);\n        if (iVar2 == 0) {\n            var_10h = fcn.000503e0(arg_14h, arg_18h, var_8h);\n            if (var_10h == 0) {\n                *(arg_8h + 0x158) = *(arg_8h + 0x158) + arg_18h;\n                if (0x100 < *(arg_8h + 0x158)) {\n                    *(arg_8h + 0x155) = 1;\n                }\n                return 0;\n            }\n        }\n        else {\n            var_10h = 0xc;\n        }\n        (**0x8500d2e8)();\n        *(arg_8h + 0x154) = 1;\n        var_4h = NULL;\n        var_ch = 0;\n        if (((*(arg_8h + 0x24) != 0) && (var_18h = fcn.00054ce0(*(arg_8h + 0x24), 0),  var_18h != 0)) &&\n           (*(var_18h + 0x3c) != 0)) {\n            var_4h = *(var_18h + 0x3c);\n            var_ch = *(var_18h + 0x40);\n        }\n        puVar3 = fcn.00036360(0x698);\n        if (puVar3 == NULL) {\n            (**0x8500d2e4)();\n            *(arg_8h + 0x154) = 0;\n            *(arg_8h + 0x155) = 1;\n            (*var_4h)(var_ch, *(arg_8h + 0x150), 0, 0, 0, 0, 2);\n            uVar1 = 0;\n        }\n        else {\n            puVar3[6] = var_10h;\n            puVar3[4] = *(arg_8h + 0x1c);\n            puVar3[5] = *(arg_8h + 0x20);\n            fcn.0007f916(puVar3 + 8, 0, 0x80);\n            *(puVar3 + 8) = 2;\n            puVar3[9] = arg_ch;\n            *(puVar3 + 0x28) = arg_10h;\n            puVar3[0x29] = var_4h;\n            puVar3[0x2a] = var_ch;\n            puVar3[0x2b] = *(arg_8h + 0x150);\n            puVar3[0x2c] = var_1ch;\n            puVar3[0x1a4] = arg_18h;\n            if (0x5dc < puVar3[0x1a4]) {\n                puVar3[0x1a4] = 0x5dc;\n            }\n            fcn.0007f904(puVar3 + 0x2d, arg_14h, puVar3[0x1a4]);\n            puVar3[7] = 0;\n            puVar3[2] = 0x8504cde0;\n            puVar3[3] = puVar3;\n            *puVar3 = 0;\n            (**0x8500d22c)(puVar3, 1);\n            uVar1 = 1;\n        }\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 1039
    },
    "00056d10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00056eae)\n// WARNING: Removing unreachable block (ram,0x00056ea3)\n// WARNING: Removing unreachable block (ram,0x00056ec5)\n// WARNING: Removing unreachable block (ram,0x00056e0a)\n// WARNING: Removing unreachable block (ram,0x00056e3a)\n// WARNING: Removing unreachable block (ram,0x00056e41)\n// WARNING: Removing unreachable block (ram,0x00056e4a)\n// WARNING: Removing unreachable block (ram,0x00056e5d)\n// WARNING: Removing unreachable block (ram,0x00056e66)\n// WARNING: Removing unreachable block (ram,0x00056e76)\n\nuint fcn.00056d10(uint param_1, uint param_2, uint param_3, int32_t param_4, uint *param_5, uint param_6)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t arg_ch;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint var_8h;\n    uint var_ch;\n    uint var_10h;\n    int32_t var_14h;\n    uint *var_18h_2;\n    uint var_1ch_2;\n    uint var_18h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_10h_2;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x8507b970;\n    uStack16 = 0x8507b910;\n    var_10h_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_10h_2;\n    if (var_14h == 0) {\n        *var_18h_2 = 0;\n        uVar2 = 0;\n    }\n    else {\n        arg_ch = (**0x8500d23c)(3, var_8h, 0, 0, 0, 0, 1, 0, 0);\n        if (arg_ch == 0) {\n            uVar2 = 0xc000009a;\n        }\n        else {\n            iVar3 = (**0x8500d290)(var_10h, var_14h, 0, 0, arg_ch);\n            if (iVar3 == 0) {\n                (**0x8500d2ec)();\n                uVar2 = 0xc000009a;\n            }\n            else {\n                var_4h = 0;\n                (**0x8500d29c)(iVar3, 0, 2);\n                var_4h = 0xffffffff;\n                iVar1 = *(arg_ch + 0x60);\n                *(iVar1 + -8) = 0;\n                *(iVar1 + -4) = 0;\n                *(iVar1 + -0x21) = 0;\n                iVar1 = *(arg_ch + 0x60);\n                *(iVar1 + -0x24) = 0xf;\n                *(iVar1 + -0x23) = 8;\n                *(iVar1 + -0x10) = var_8h;\n                *(iVar1 + -0xc) = var_ch;\n                *(iVar1 + -0x1c) = 0;\n                *(iVar1 + -0x20) = var_14h;\n                *(arg_ch + 4) = iVar3;\n                uVar2 = fcn.00057390(var_8h, arg_ch, 0xf, var_18h_2, var_1ch_2);\n            }\n        }\n    }\n    *in_FS_OFFSET = var_10h_2;\n    return uVar2;\n}\n",
        "token_count": 868
    },
    "00056f50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x000570e5)\n// WARNING: Removing unreachable block (ram,0x000570da)\n// WARNING: Removing unreachable block (ram,0x000570fc)\n// WARNING: Removing unreachable block (ram,0x00057041)\n// WARNING: Removing unreachable block (ram,0x00057071)\n// WARNING: Removing unreachable block (ram,0x00057078)\n// WARNING: Removing unreachable block (ram,0x00057081)\n// WARNING: Removing unreachable block (ram,0x00057094)\n// WARNING: Removing unreachable block (ram,0x0005709d)\n// WARNING: Removing unreachable block (ram,0x000570ad)\n\nuint fcn.00056f50(uint param_1, uint param_2, uint param_3, int32_t param_4)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t arg_ch;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint var_8h;\n    uint var_ch;\n    uint var_10h;\n    int32_t var_14h;\n    uint var_18h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_10h_2;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x8507b960;\n    uStack16 = 0x8507b910;\n    var_10h_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_10h_2;\n    if (var_14h == 0) {\n        uVar2 = 0;\n    }\n    else {\n        arg_ch = (**0x8500d23c)(3, var_8h, 0, 0, 0, 0, 1, 0, 0);\n        if (arg_ch == 0) {\n            uVar2 = 0xc000009a;\n        }\n        else {\n            iVar3 = (**0x8500d290)(var_10h, var_14h, 0, 0, arg_ch);\n            if (iVar3 == 0) {\n                (**0x8500d2ec)();\n                uVar2 = 0xc000009a;\n            }\n            else {\n                var_4h = 0;\n                (**0x8500d29c)(iVar3, 0, 0);\n                var_4h = 0xffffffff;\n                iVar1 = *(arg_ch + 0x60);\n                *(iVar1 + -8) = 0;\n                *(iVar1 + -4) = 0;\n                *(iVar1 + -0x21) = 0;\n                iVar1 = *(arg_ch + 0x60);\n                *(iVar1 + -0x24) = 0xf;\n                *(iVar1 + -0x23) = 7;\n                *(iVar1 + -0x10) = var_8h;\n                *(iVar1 + -0xc) = var_ch;\n                *(iVar1 + -0x1c) = 0;\n                *(iVar1 + -0x20) = var_14h;\n                *(arg_ch + 4) = iVar3;\n                uVar2 = fcn.00057390(var_8h, arg_ch, 0xf, 0, 0xffffffff);\n            }\n        }\n    }\n    *in_FS_OFFSET = var_10h_2;\n    return uVar2;\n}\n",
        "token_count": 807
    },
    "00057190": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0005726b)\n// WARNING: Removing unreachable block (ram,0x00057260)\n// WARNING: Removing unreachable block (ram,0x00057282)\n// WARNING: Removing unreachable block (ram,0x000571c7)\n// WARNING: Removing unreachable block (ram,0x000571f7)\n// WARNING: Removing unreachable block (ram,0x000571fe)\n// WARNING: Removing unreachable block (ram,0x00057207)\n// WARNING: Removing unreachable block (ram,0x0005721a)\n// WARNING: Removing unreachable block (ram,0x00057223)\n// WARNING: Removing unreachable block (ram,0x00057233)\n\nuint __cdecl fcn.00057190(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t arg_ch_00;\n    uint uVar2;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_ch_00 = (**0x8500d23c)(3, arg_8h, 0, 0, 0, 0, 1, 0, 0);\n    if (arg_ch_00 == 0) {\n        uVar2 = 0xc000009a;\n    }\n    else {\n        iVar1 = *(arg_ch_00 + 0x60);\n        *(iVar1 + -8) = 0;\n        *(iVar1 + -4) = 0;\n        *(iVar1 + -0x21) = 0;\n        iVar1 = *(arg_ch_00 + 0x60);\n        *(iVar1 + -0x24) = 0xf;\n        *(iVar1 + -0x23) = 6;\n        *(iVar1 + -0x10) = arg_8h;\n        *(iVar1 + -0xc) = arg_ch;\n        *(iVar1 + -0x20) = 4;\n        *(iVar1 + -0x1c) = 0;\n        *(iVar1 + -0x18) = 0;\n        *(iVar1 + -0x14) = 0;\n        uVar2 = fcn.00057390(arg_8h, arg_ch_00, 0xf, 0, 0xffffffff);\n    }\n    return uVar2;\n}\n",
        "token_count": 527
    },
    "00057310": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00057310(uint noname_0, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_5h;\n    \n    *NULL = fcn.00054ce0(arg_ch, &var_5h);\n    if (*NULL != 0) {\n        while (*(stack0xfffffff8 + 0x15c) != stack0xfffffff8 + 0x15c) {\n            iVar1 = fcn.00053f10(stack0xfffffff8 + 0x15c);\n            *(iVar1 + -0x40) = 0;\n            (**0x8500d2ec)();\n        }\n        (**0x8500d010)();\n    }\n    return;\n}\n",
        "token_count": 172
    },
    "00057390": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00057390(int32_t arg_8h, int32_t arg_ch, uint noname_2, uint *arg_14h, int32_t arg_18h)\n\n{\n    int32_t iVar1;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_28h;\n    uint var_24h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_9h;\n    uint var_4h;\n    \n    var_9h._0_1_ = '\\0';\n    (**0x8500d0d4)(&var_24h, 0, 0);\n    *(arg_ch + 0x2c) = &var_24h;\n    *(arg_ch + 0x28) = &var_9h + 1;\n    stack0xfffffff4 = 0xc0000001;\n    if (arg_18h != -1) {\n        iVar1 = *(arg_ch + 0x60);\n        var_28h = iVar1 + -0x24;\n        *(iVar1 + -8) = 0x85053540;\n        *(iVar1 + -4) = &var_24h;\n        *(iVar1 + -0x21) = 0;\n        *(iVar1 + -0x21) = 0x40;\n        *(iVar1 + -0x21) = *(iVar1 + -0x21) | 0x80;\n        *(iVar1 + -0x21) = *(iVar1 + -0x21) | 0x20;\n    }\n    *(arg_ch + 0x23) = *(arg_ch + 0x23) + -1;\n    iVar1 = *(arg_ch + 0x60);\n    var_10h = iVar1 + -0x24;\n    *(arg_ch + 0x60) = var_10h;\n    *(iVar1 + -0x10) = arg_8h;\n    var_14h = (**(*(arg_8h + 8) + 0x38 + **(arg_ch + 0x60) * 4))(arg_8h, arg_ch);\n    if (var_14h == 0x103) {\n        if (arg_18h == -1) {\n            (**0x8500d19c)(&var_24h, 0, 0, 0, 0);\n        }\n        else {\n            _var_30h = fcn.0007f8fe(arg_18h, arg_18h >> 0x1f, 0xffffd8f0, 0xffffffff);\n            iVar1 = (**0x8500d19c)(&var_24h, 0, 0, 0, &var_30h);\n            if (iVar1 == 0x102) {\n                var_9h._0_1_ = '\\x01';\n                (**0x8500d240)(arg_ch);\n                (**0x8500d19c)(&var_24h, 0, 0, 0, 0);\n            }\n        }\n    }\n    if (arg_18h != -1) {\n        (**0x8500d2ec)();\n    }\n    var_14h = stack0xfffffff4;\n    if (var_9h != '\\0') {\n        var_14h = 0x102;\n    }\n    if (arg_14h != NULL) {\n        *arg_14h = var_4h;\n    }\n    return var_14h;\n}\n",
        "token_count": 799
    },
    "00057570": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00057570(void)\n\n{\n    int32_t iVar1;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    if (*0x8509ec18 == 0) {\n        fcn.00032da0(0x85091d70);\n        fcn.00032da0(0x85091d74);\n        fcn.00034d00(0x85091168);\n        *0x8509116c = 0;\n        *0x85091130 = 0x24;\n        *0x85091134 = 0x850116a4;\n        *0x85091138 = &var_4h;\n        iVar1 = fcn.0007f808(1, 0x850116c4, 0x8509112c, 0, 0);\n        if (iVar1 == 0) {\n            *0x85091d78 = var_4h != 0;\n        }\n        *0x8509ec18 = 1;\n    }\n    return;\n}\n",
        "token_count": 236
    },
    "00057600": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid fcn.00057600(void)\n\n{\n    int32_t iVar1;\n    uint var_1h;\n    \n    if (*0x8509ec18 != 0) {\n        *0x8509ec18 = 0;\n        *0x8509116c = 1;\n        fcn.00034dc0(0x85091168);\n        iVar1 = fcn.00038390(0x8509ec08);\n        if (iVar1 != 0) {\n            fcn.000383c0(0x8509ec08, 0);\n            fcn.00038370(0x8509ec08);\n        }\n        fcn.00034d90(0x85091168);\n        (**0x8500d00c)();\n        if (*0x85091164 != 0) {\n            fcn.00059f90(*0x85091164);\n            *0x85091164 = 0;\n        }\n        (**0x8500d010)();\n    }\n    return;\n}\n",
        "token_count": 240
    },
    "000576a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl\nfcn.000576a0(uint arg_8h, uint arg_ch, uint arg_10h, uint *arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t var_6ch;\n    int32_t var_68h;\n    int32_t var_61h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    int32_t var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_34h;\n    uint var_30h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uchar var_eh;\n    uchar var_dh;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    *arg_14h = 3;\n    iVar1 = fcn.00020a10(arg_10h, 0x1a, 2, &var_50h, 4);\n    if (iVar1 == 0) {\n        uVar2 = 0x21590065;\n    }\n    else {\n        iVar1 = fcn.000392f0(var_50h);\n        if (iVar1 == 0) {\n            uVar2 = 0x21590065;\n        }\n        else {\n            iVar1 = fcn.000209a0(arg_10h, 0x2c, 4, &var_1ch, 0);\n            if ((iVar1 == 0) || (iVar1 = fcn.00059640(var_1ch, &var_6ch),  iVar1 == 0)) {\n                uVar2 = 0x21590066;\n            }\n            else {\n                iVar1 = fcn.000209a0(arg_10h, 0x2d, 4, &var_4ch, 0);\n                if ((iVar1 == 0) || (iVar1 = fcn.00059640(var_4ch, &var_ch),  iVar1 == 0)) {\n                    uVar2 = 0x21590067;\n                }\n                else {\n                    var_61h._0_1_ = 1;\n                    fcn.00020a10(arg_10h, 0x30, 1, &var_61h, 1);\n                    var_eh = 1;\n                    fcn.00020a10(arg_10h, 0x31, 1, &var_eh, 1);\n                    iVar1 = fcn.000209a0(arg_10h, 0x2e, 4, &var_18h, 0);\n                    if (iVar1 == 0) {\n                        iVar1 = fcn.00059fd0(var_50h, var_6ch, &var_48h);\n                        if (iVar1 == 0) {\n                            return 0x2159006a;\n                        }\n                        var_8h = var_34h;\n                        var_4h._0_2_ = var_30h;\n                    }\n                    else {\n                        iVar1 = fcn.00059740(var_18h, &var_8h);\n                        if (iVar1 == 0) {\n                            return 0x2159006a;\n                        }\n                    }\n                    iVar1 = fcn.000209a0(arg_10h, 0x2f, 4, &var_5ch, 0);\n                    if (iVar1 == 0) {\n                        iVar1 = fcn.00059fd0(var_50h, var_ch, &var_48h);\n                        if (iVar1 == 0) {\n                            return 0x2159006b;\n                        }\n                        var_58h = var_34h;\n                        var_54h._0_2_ = var_30h;\n                    }\n                    else {\n                        iVar1 = fcn.00059740(var_5ch, &var_58h);\n                        if (iVar1 == 0) {\n                            return 0x2159006b;\n                        }\n                    }\n                    var_dh = (**0x8500d00c)();\n                    var_68h = -1;\n                    stack0xffffff9c = 0x21590004;\n                    for (var_14h = 0; var_14h < 0x40; var_14h = var_14h + 1) {\n                        if (*(var_14h * 0x30 + -0x7af6ee78) == 0) {\n                            if (var_68h == -1) {\n                                var_68h = var_14h;\n                            }\n                        }\n                        else if (((*(var_14h * 0x30 + -0x7af6ee78) == var_50h) &&\n                                 (*(var_14h * 0x30 + -0x7af6ee90) == var_6ch)) &&\n                                (*(var_14h * 0x30 + -0x7af6ee84) == var_ch)) {\n                            *(var_14h * 0x30 + -0x7af6ee8c) = var_8h;\n                            *(var_14h * 0x30 + -0x7af6ee88) = var_4h;\n                            *(var_14h * 0x30 + -0x7af6ee80) = var_58h;\n                            *(var_14h * 0x30 + -0x7af6ee7c) = var_54h;\n                            *(var_14h * 0x30 + -0x7af6ee73) = var_61h;\n                            *(var_14h * 0x30 + -0x7af6ee74) = var_eh;\n                            *(var_14h * 0x30 + -0x7af6ee70) = 0;\n                            *(var_14h * 0x30 + -0x7af6ee6c) = 0;\n                            stack0xffffff9c = 0;\n                            break;\n                        }\n                    }\n                    if ((0x3f < var_14h) && (var_68h != -1)) {\n                        fcn.0007f916(var_68h * 0x30 + -0x7af6ee90, 0, 0x30);\n                        *(var_68h * 0x30 + -0x7af6ee78) = var_50h;\n                        *(var_68h * 0x30 + -0x7af6ee90) = var_6ch;\n                        *(var_68h * 0x30 + -0x7af6ee84) = var_ch;\n                        *(var_68h * 0x30 + -0x7af6ee8c) = var_8h;\n                        *(var_68h * 0x30 + -0x7af6ee88) = var_4h;\n                        *(var_68h * 0x30 + -0x7af6ee80) = var_58h;\n                        *(var_68h * 0x30 + -0x7af6ee7c) = var_54h;\n                        *(var_68h * 0x30 + -0x7af6ee73) = var_61h;\n                        *(var_68h * 0x30 + -0x7af6ee74) = var_eh;\n                        stack0xffffff9c = 0;\n                    }\n                    (**0x8500d010)();\n                    if (stack0xffffff9c == 0) {\n                        iVar1 = fcn.00038390(0x8509ec08);\n                        if (iVar1 == 0) {\n                            fcn.0001a700(0x8509ec08, 0x85054c40, 0);\n                        }\n                        fcn.00034dc0(0x85091168);\n                    }\n                    uVar2 = fcn.00057a60(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch);\n                }\n            }\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 1835
    },
    "00057a60": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_f0h\n\nuint __cdecl fcn.00057a60(uint noname_0, uint noname_1, uint noname_2, uint *arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int16_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint *puVar5;\n    uint var_f0h;\n    uint var_e8h;\n    int16_t *var_e4h;\n    uint var_e0h;\n    uint var_d8h;\n    int16_t *var_d4h;\n    uint var_d0h;\n    uint var_c8h;\n    int16_t *var_c4h;\n    uint var_c0h;\n    uint var_b8h;\n    int16_t *var_b4h;\n    uint var_b0h;\n    uint var_a8h;\n    int16_t *var_a4h;\n    uint var_a0h;\n    uint var_98h;\n    int16_t *var_94h;\n    uint var_90h;\n    uint var_88h;\n    int16_t *var_84h;\n    uint var_80h;\n    uint var_78h;\n    int16_t *var_74h;\n    uint var_70h;\n    int32_t var_6ch;\n    uint var_68h;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    uchar var_15h;\n    int32_t var_14h;\n    uint *var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int16_t *var_4h;\n    \n    var_6ch = 0;\n    *arg_14h = 3;\n    var_ch = 0;\n    var_8h = 0;\n    var_14h = 9;\n    var_10h = &var_68h;\n    fcn.0007f916(&var_68h, 0, 0x48);\n    *var_10h = 0x27;\n    var_10h[1] = 2;\n    var_10h[2] = 0x3b;\n    var_10h[3] = 4;\n    var_10h[4] = 0x3d;\n    var_10h[5] = 4;\n    var_10h[6] = 0x3c;\n    var_10h[7] = 4;\n    var_10h[8] = 0x3e;\n    var_10h[9] = 4;\n    var_10h[10] = 0x3f;\n    var_10h[0xb] = 1;\n    var_10h[0xc] = 0x40;\n    var_10h[0xd] = 1;\n    var_10h[0xe] = 0x41;\n    var_10h[0xf] = 2;\n    var_10h[0x10] = 0x42;\n    var_10h[0x11] = 2;\n    var_15h = (**0x8500d00c)();\n    var_1ch = 0;\n    for (var_20h = 0; var_20h < 0x40; var_20h = var_20h + 1) {\n        if (*(var_20h * 0x30 + -0x7af6ee78) != 0) {\n            var_1ch = var_1ch + 1;\n        }\n    }\n    if (var_1ch == 0) {\n        var_70h = 0;\n        (**0x8500d010)();\n    }\n    else {\n        var_6ch = fcn.00036360(var_1ch * 0x30);\n        if (var_6ch == 0) {\n            var_70h = 0x21590004;\n            (**0x8500d010)();\n        }\n        else {\n            var_1ch = 0;\n            for (var_20h = 0; var_20h < 0x40; var_20h = var_20h + 1) {\n                if (*(var_20h * 0x30 + -0x7af6ee78) != 0) {\n                    puVar4 = var_20h * 0x30 + -0x7af6ee90;\n                    puVar5 = var_1ch * 0x30 + var_6ch;\n                    for (iVar3 = 0xc; iVar3 != 0; iVar3 = iVar3 + -1) {\n                        *puVar5 = *puVar4;\n                        puVar4 = puVar4 + 1;\n                        puVar5 = puVar5 + 1;\n                    }\n                    var_1ch = var_1ch + 1;\n                }\n            }\n            (**0x8500d010)();\n            var_ch = var_1ch;\n            var_8h = fcn.00036420(var_1ch, 4);\n            if (var_8h == 0) {\n                var_70h = 0x21590004;\n            }\n            else {\n                for (var_20h = 0; var_20h < var_1ch; var_20h = var_20h + 1) {\n                    uVar2 = fcn.00036330(var_14h * 0x10 + 0x88);\n                    *(var_8h + var_20h * 4) = uVar2;\n                    if (*(var_8h + var_20h * 4) == 0) {\n                        var_70h = 0x21590004;\n                        goto code_r0x00058317;\n                    }\n                    fcn.0007f916(*(var_8h + var_20h * 4), 0, var_14h << 4);\n                    var_4h = var_14h * 0x10 + *(var_8h + var_20h * 4);\n                    *(*(var_8h + var_20h * 4) + 4) = *(var_8h + var_20h * 4) + 8;\n                    **(var_8h + var_20h * 4) = 4;\n                    **(*(var_8h + var_20h * 4) + 4) = *(var_6ch + 0x18 + var_20h * 0x30);\n                    fcn.0007f736(var_4h, 0x850116e8, *(var_6ch + var_20h * 0x30), *(var_6ch + 1 + var_20h * 0x30), \n                                 *(var_6ch + 2 + var_20h * 0x30), *(var_6ch + 3 + var_20h * 0x30));\n                    *(*(var_8h + var_20h * 4) + 0x14) = var_4h;\n                    var_74h = var_4h;\n                    do {\n                        iVar1 = *var_74h;\n                        var_74h = var_74h + 1;\n                    } while (iVar1 != 0);\n                    *(*(var_8h + var_20h * 4) + 0x10) = (var_74h - (var_4h + 1) >> 1) * 2 + 2;\n                    var_84h = var_4h;\n                    do {\n                        iVar1 = *var_84h;\n                        var_84h = var_84h + 1;\n                    } while (iVar1 != 0);\n                    var_4h = var_4h + (var_84h - (var_4h + 1) >> 1) + 1;\n                    fcn.0007f736(var_4h, 0x85010a20, *(var_6ch + 4 + var_20h * 0x30), *(var_6ch + 5 + var_20h * 0x30), \n                                 *(var_6ch + 6 + var_20h * 0x30), *(var_6ch + 7 + var_20h * 0x30), \n                                 *(var_6ch + 8 + var_20h * 0x30), *(var_6ch + 9 + var_20h * 0x30));\n                    *(*(var_8h + var_20h * 4) + 0x24) = var_4h;\n                    var_94h = var_4h;\n                    do {\n                        iVar1 = *var_94h;\n                        var_94h = var_94h + 1;\n                    } while (iVar1 != 0);\n                    *(*(var_8h + var_20h * 4) + 0x20) = (var_94h - (var_4h + 1) >> 1) * 2 + 2;\n                    var_a4h = var_4h;\n                    do {\n                        iVar1 = *var_a4h;\n                        var_a4h = var_a4h + 1;\n                    } while (iVar1 != 0);\n                    var_4h = var_4h + (var_a4h - (var_4h + 1) >> 1) + 1;\n                    fcn.0007f736(var_4h, 0x850116e8, *(var_6ch + 0xc + var_20h * 0x30), \n                                 *(var_6ch + 0xd + var_20h * 0x30), *(var_6ch + 0xe + var_20h * 0x30), \n                                 *(var_6ch + 0xf + var_20h * 0x30));\n                    *(*(var_8h + var_20h * 4) + 0x34) = var_4h;\n                    var_b4h = var_4h;\n                    do {\n                        iVar1 = *var_b4h;\n                        var_b4h = var_b4h + 1;\n                    } while (iVar1 != 0);\n                    *(*(var_8h + var_20h * 4) + 0x30) = (var_b4h - (var_4h + 1) >> 1) * 2 + 2;\n                    var_c4h = var_4h;\n                    do {\n                        iVar1 = *var_c4h;\n                        var_c4h = var_c4h + 1;\n                    } while (iVar1 != 0);\n                    var_4h = var_4h + (var_c4h - (var_4h + 1) >> 1) + 1;\n                    fcn.0007f736(var_4h, 0x85010a20, *(var_6ch + 0x10 + var_20h * 0x30), \n                                 *(var_6ch + 0x11 + var_20h * 0x30), *(var_6ch + 0x12 + var_20h * 0x30), \n                                 *(var_6ch + 0x13 + var_20h * 0x30), *(var_6ch + 0x14 + var_20h * 0x30), \n                                 *(var_6ch + 0x15 + var_20h * 0x30));\n                    *(*(var_8h + var_20h * 4) + 0x44) = var_4h;\n                    var_d4h = var_4h;\n                    do {\n                        iVar1 = *var_d4h;\n                        var_d4h = var_d4h + 1;\n                    } while (iVar1 != 0);\n                    *(*(var_8h + var_20h * 4) + 0x40) = (var_d4h - (var_4h + 1) >> 1) * 2 + 2;\n                    var_e4h = var_4h;\n                    do {\n                        iVar1 = *var_e4h;\n                        var_e4h = var_e4h + 1;\n                    } while (iVar1 != 0);\n                    var_4h = var_4h + (var_e4h - (var_4h + 1) >> 1) + 1;\n                    *(*(var_8h + var_20h * 4) + 0x54) = *(var_8h + var_20h * 4) + 0x58;\n                    *(*(var_8h + var_20h * 4) + 0x50) = 1;\n                    **(*(var_8h + var_20h * 4) + 0x54) = *(var_6ch + 0x1d + var_20h * 0x30) != '\\0';\n                    *(*(var_8h + var_20h * 4) + 100) = *(var_8h + var_20h * 4) + 0x68;\n                    *(*(var_8h + var_20h * 4) + 0x60) = 1;\n                    **(*(var_8h + var_20h * 4) + 100) = *(var_6ch + 0x1c + var_20h * 0x30) != '\\0';\n                    *(*(var_8h + var_20h * 4) + 0x74) = *(var_8h + var_20h * 4) + 0x78;\n                    *(*(var_8h + var_20h * 4) + 0x70) = 4;\n                    **(*(var_8h + var_20h * 4) + 0x74) = *(var_6ch + 0x28 + var_20h * 0x30);\n                    *(*(var_8h + var_20h * 4) + 0x84) = *(var_8h + var_20h * 4) + 0x88;\n                    *(*(var_8h + var_20h * 4) + 0x80) = 4;\n                    **(*(var_8h + var_20h * 4) + 0x84) = *(var_6ch + 0x2c + var_20h * 0x30);\n                }\n                var_70h = fcn.0002f660(&var_14h, arg_18h, arg_1ch);\n            }\n        }\n    }\ncode_r0x00058317:\n    if (var_8h != 0) {\n        for (var_20h = 0; var_20h < var_ch; var_20h = var_20h + 1) {\n            fcn.00036460(*(var_8h + var_20h * 4));\n        }\n    }\n    fcn.00036460(var_8h);\n    if (var_6ch != 0) {\n        fcn.00036460(var_6ch);\n    }\n    return var_70h;\n}\n",
        "token_count": 3403
    },
    "00058380": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00058380(uint noname_0, uint noname_1, uint noname_2, uint *arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int16_t iVar1;\n    uint uVar2;\n    uint var_b8h;\n    uint var_b0h;\n    int16_t *var_ach;\n    uint var_a8h;\n    uint var_a0h;\n    int16_t *var_9ch;\n    uint var_98h;\n    int32_t var_94h;\n    int32_t var_90h;\n    int32_t *var_8ch;\n    int32_t *var_88h;\n    uint32_t var_84h;\n    uint var_80h;\n    uint var_78h;\n    int16_t *var_74h;\n    uint var_70h;\n    uint var_68h;\n    int16_t *var_64h;\n    uint var_60h;\n    uint var_5ch;\n    int32_t var_24h;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    uchar var_15h;\n    int32_t var_14h;\n    uint *var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int16_t *var_4h;\n    \n    var_24h = 0;\n    *arg_14h = 3;\n    var_ch = 0;\n    var_8h = 0;\n    var_14h = 7;\n    var_10h = &var_5ch;\n    fcn.0007f916(&var_5ch, 0, 0x38);\n    *var_10h = 0x3b;\n    var_10h[1] = 4;\n    var_10h[2] = 0x27;\n    var_10h[3] = 2;\n    var_10h[4] = 0x3d;\n    var_10h[5] = 4;\n    var_10h[6] = 0x41;\n    var_10h[7] = 2;\n    var_10h[8] = 0x42;\n    var_10h[9] = 2;\n    var_10h[10] = 0x43;\n    var_10h[0xb] = 2;\n    var_10h[0xc] = 1;\n    var_10h[0xd] = 8;\n    var_15h = (**0x8500d00c)();\n    fcn.0005a170(*0x85091164, &var_1ch, 0);\n    if (var_1ch != 0) {\n        var_24h = fcn.00036360(var_1ch * 0x2c);\n        if (var_24h == 0) {\n            (**0x8500d010)();\n            var_60h = 0x21590004;\n            goto code_r0x00058a95;\n        }\n        fcn.0007f916(var_24h, 0, var_1ch * 0x2c);\n        fcn.0005a170(*0x85091164, &var_1ch, var_24h);\n    }\n    (**0x8500d010)();\n    var_ch = var_1ch;\n    var_8h = fcn.00036420(var_1ch, 4);\n    if (var_8h == 0) {\n        var_60h = 0x21590004;\n    }\n    else {\n        for (var_20h = 0; var_20h < var_1ch; var_20h = var_20h + 1) {\n            uVar2 = fcn.00036330(var_14h * 0x10 + 0x44);\n            *(var_8h + var_20h * 4) = uVar2;\n            if (*(var_8h + var_20h * 4) == 0) {\n                var_60h = 0x21590004;\n                goto code_r0x00058a95;\n            }\n            fcn.0007f916(*(var_8h + var_20h * 4), 0, var_14h << 4);\n            var_4h = var_14h * 0x10 + *(var_8h + var_20h * 4);\n            fcn.0007f736(var_4h, 0x850116e8, *(var_24h + 0xc + var_20h * 0x2c), *(var_24h + 0xd + var_20h * 0x2c), \n                         *(var_24h + 0xe + var_20h * 0x2c), *(var_24h + 0xf + var_20h * 0x2c));\n            *(*(var_8h + var_20h * 4) + 4) = var_4h;\n            var_64h = var_4h;\n            do {\n                iVar1 = *var_64h;\n                var_64h = var_64h + 1;\n            } while (iVar1 != 0);\n            **(var_8h + var_20h * 4) = (var_64h - (var_4h + 1) >> 1) * 2 + 2;\n            var_74h = var_4h;\n            do {\n                iVar1 = *var_74h;\n                var_74h = var_74h + 1;\n            } while (iVar1 != 0);\n            var_4h = var_4h + (var_74h - (var_4h + 1) >> 1) + 1;\n            *(*(var_8h + var_20h * 4) + 0x14) = *(var_8h + var_20h * 4) + 0x18;\n            *(*(var_8h + var_20h * 4) + 0x10) = 4;\n            **(*(var_8h + var_20h * 4) + 0x14) = *(var_24h + 0x10 + var_20h * 0x2c);\n            var_88h = 0x8509ec10;\n            var_8ch = var_24h + 0x14 + var_20h * 0x2c;\n            for (var_84h = 6; 3 < var_84h; var_84h = var_84h - 4) {\n                if (*var_8ch != *var_88h) goto code_r0x00058708;\n                var_88h = var_88h + 1;\n                var_8ch = var_8ch + 1;\n            }\n            if (var_84h == 0) {\ncode_r0x000587de:\n                var_94h = 0;\n            }\n            else {\ncode_r0x00058708:\n                var_90h = *var_8ch - *var_88h;\n                if (var_90h == 0) {\n                    if (var_84h == 1) goto code_r0x000587de;\n                    var_90h = *(var_8ch + 1) - *(var_88h + 1);\n                    if (var_90h == 0) {\n                        if (var_84h == 2) goto code_r0x000587de;\n                        var_90h = *(var_8ch + 2) - *(var_88h + 2);\n                        if (var_90h == 0) {\n                            if ((var_84h == 3) || (var_90h = *(var_8ch + 3) - *(var_88h + 3),  var_90h == 0))\n                            goto code_r0x000587de;\n                        }\n                    }\n                }\n                var_94h = 1;\n                if (var_90h < 1) {\n                    var_94h = -1;\n                }\n            }\n            if (var_94h == 0) {\n                *var_4h = 0;\n            }\n            else {\n                fcn.0007f736(var_4h, 0x85010a20, *(var_24h + 0x14 + var_20h * 0x2c), *(var_24h + 0x15 + var_20h * 0x2c)\n                             , *(var_24h + 0x16 + var_20h * 0x2c), *(var_24h + 0x17 + var_20h * 0x2c), \n                             *(var_24h + 0x18 + var_20h * 0x2c), *(var_24h + 0x19 + var_20h * 0x2c));\n            }\n            *(*(var_8h + var_20h * 4) + 0x24) = var_4h;\n            var_9ch = var_4h;\n            do {\n                iVar1 = *var_9ch;\n                var_9ch = var_9ch + 1;\n            } while (iVar1 != 0);\n            *(*(var_8h + var_20h * 4) + 0x20) = (var_9ch - (var_4h + 1) >> 1) * 2 + 2;\n            var_ach = var_4h;\n            do {\n                iVar1 = *var_ach;\n                var_ach = var_ach + 1;\n            } while (iVar1 != 0);\n            var_4h = var_4h + (var_ach - (var_4h + 1) >> 1) + 1;\n            *(*(var_8h + var_20h * 4) + 0x34) = *(var_8h + var_20h * 4) + 0x38;\n            *(*(var_8h + var_20h * 4) + 0x30) = 4;\n            **(*(var_8h + var_20h * 4) + 0x34) = *(var_24h + 0x1c + var_20h * 0x2c);\n            *(*(var_8h + var_20h * 4) + 0x44) = *(var_8h + var_20h * 4) + 0x48;\n            *(*(var_8h + var_20h * 4) + 0x40) = 4;\n            **(*(var_8h + var_20h * 4) + 0x44) = *(var_24h + 0x20 + var_20h * 0x2c);\n            *(*(var_8h + var_20h * 4) + 0x54) = *(var_8h + var_20h * 4) + 0x58;\n            *(*(var_8h + var_20h * 4) + 0x50) = 4;\n            **(*(var_8h + var_20h * 4) + 0x54) = *(var_24h + 0x24 + var_20h * 0x2c);\n            *(*(var_8h + var_20h * 4) + 100) = *(var_8h + var_20h * 4) + 0x68;\n            *(*(var_8h + var_20h * 4) + 0x60) = 4;\n            **(*(var_8h + var_20h * 4) + 100) = *(var_24h + 0x28 + var_20h * 0x2c);\n        }\n        var_60h = fcn.0002f660(&var_14h, arg_18h, arg_1ch);\n    }\ncode_r0x00058a95:\n    if (var_8h != 0) {\n        for (var_20h = 0; var_20h < var_ch; var_20h = var_20h + 1) {\n            fcn.00036460(*(var_8h + var_20h * 4));\n        }\n    }\n    fcn.00036460(var_8h);\n    if (var_24h != 0) {\n        fcn.00036460(var_24h);\n    }\n    return var_60h;\n}\n",
        "token_count": 2826
    },
    "00058c40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_e4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00058c40(void)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    ulong uVar6;\n    int64_t iVar7;\n    uint var_e4h;\n    uint var_e0h;\n    uint var_dch;\n    uint var_d8h;\n    uint var_d4h;\n    uint var_d0h;\n    uint var_cch;\n    code *var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    ushort var_bch;\n    uint var_bah;\n    uint var_b6h;\n    uint var_ach;\n    uint var_a6h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_84h;\n    ushort var_80h;\n    uint var_7eh;\n    uint var_7ah;\n    uint var_70h;\n    uint var_6ah;\n    uint var_64h;\n    uint var_60h;\n    int32_t var_48h;\n    uint var_44h;\n    code *var_40h;\n    uint *var_3ch;\n    code *var_38h;\n    uint var_34h;\n    uint var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    uint32_t var_24h;\n    uint *var_20h;\n    int32_t var_1ch;\n    uint32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_9h;\n    int32_t var_4h;\n    \n    var_10h = 0;\n    var_4h = 0;\n    var_3ch = NULL;\n    var_20h = NULL;\n    var_2ch = 0;\n    var_28h = 0;\n    var_48h = 0;\n    var_44h = 0;\n    var_38h = NULL;\n    var_40h = NULL;\n    do {\n        if (*0x8509116c != 0) {\n            return 0;\n        }\n        do {\n            var_14h = (*0x8500d164)[1];\n            var_18h = **0x8500d164;\n        } while (var_14h != (*0x8500d164)[2]);\n        uVar3 = (**0x8500d160)();\n        _var_18h = fcn.0007f8fe(var_18h, var_14h, uVar3, 0);\n        var_9h._0_1_ = (**0x8500d00c)();\n        var_24h = 0xffffffff;\n        for (var_1ch = 0; var_1ch < 0x40; var_1ch = var_1ch + 1) {\n            if ((*(var_1ch * 0x30 + -0x7af6ee78) != 0) && (*(var_1ch * 0x30 + -0x7af6ee73) != '\\0')) {\n                iVar4 = fcn.00039130(*(var_1ch * 0x30 + -0x7af6ee78), &var_9h + 1);\n                if (iVar4 == 0) {\n                    if (stack0xfffffff4 == 0) {\n                        var_c8h = 0x850561d0;\n                        var_38h = 0x85056310;\n                        var_40h = 0x850563a0;\n                        var_3ch = &var_2ch;\n                        var_20h = &var_48h;\n                        var_2ch = 0;\n                        var_28h = 0;\n                        var_48h = 0;\n                        var_44h = 0;\n                    }\n                    else {\n                        var_c8h = 0x850563e0;\n                        var_38h = 0x850565a0;\n                        var_40h = 0x850565f0;\n                        var_3ch = &var_10h;\n                        var_20h = &var_4h;\n                        var_10h = 0;\n                        var_4h = 0;\n                    }\n                    iVar4 = *(var_1ch * 0x30 + -0x7af6ee6c);\n                    if ((var_14h < iVar4) || ((var_14h <= iVar4 && (var_18h < *(var_1ch * 0x30 + -0x7af6ee70))))) {\n                        iVar4 = *(var_1ch * 0x30 + -0x7af6ee6c);\n                        if ((var_14h <= iVar4) && ((var_14h < iVar4 || (var_18h <= *(var_1ch * 0x30 + -0x7af6ee70))))) {\n                            uVar2 = *(var_1ch * 0x30 + -0x7af6ee70);\n                            iVar7 = fcn.0007f90a(uVar2 - var_18h, \n                                                 (*(var_1ch * 0x30 + -0x7af6ee6c) - var_14h) - (uVar2 < var_18h), 10000\n                                                 , 0);\n                            if ((iVar7 < 0x100000000) && ((iVar7 < 0 || (iVar7 < var_24h)))) {\n                                uVar2 = *(var_1ch * 0x30 + -0x7af6ee70);\n                                var_24h = fcn.0007f90a(uVar2 - var_18h, \n                                                       (*(var_1ch * 0x30 + -0x7af6ee6c) - var_14h) - (uVar2 < var_18h), \n                                                       10000, 0);\n                            }\n                        }\n                    }\n                    else {\n                        iVar5 = var_1ch * 0x30;\n                        iVar4 = fcn.0007f77e();\n                        iVar4 = iVar4 % 18000 + 2000;\n                        uVar6 = fcn.0007f8fe(iVar4, iVar4 >> 0x1f, 10000, 0);\n                        puVar1 = iVar5 + -0x7af6ee70;\n                        uVar2 = *puVar1;\n                        iVar4 = *(iVar5 + -0x7af6ee6c);\n                        *(var_1ch * 0x30 + -0x7af6ee70) = uVar6 + *puVar1;\n                        *(var_1ch * 0x30 + -0x7af6ee6c) = iVar4 + (uVar6 >> 0x20) + CARRY4(uVar6, uVar2);\n                        iVar4 = (*var_c8h)(*(var_1ch * 0x30 + -0x7af6ee78), &var_c0h, var_3ch);\n                        if (iVar4 == 0) {\n                            iVar4 = fcn.00038db0(*(var_1ch * 0x30 + -0x7af6ee78), &var_34h, 6);\n                            if (iVar4 == 0) {\n                                var_bah = var_34h;\n                                var_b6h._0_2_ = var_30h;\n                                var_c0h = *(var_1ch * 0x30 + -0x7af6ee80);\n                                var_bch = *(var_1ch * 0x30 + -0x7af6ee7c);\n                                if (*(var_1ch * 0x30 + -0x7af6ee74) == '\\0') {\n                                    var_ach._0_2_ = fcn.000365f0(2);\n                                    unique0x00007a00 = *(var_1ch * 0x30 + -0x7af6ee90);\n                                    var_a0h = *(var_1ch * 0x30 + -0x7af6ee80);\n                                    var_9ch._0_2_ = *(var_1ch * 0x30 + -0x7af6ee7c);\n                                    unique0x00007a00 = *(var_1ch * 0x30 + -0x7af6ee84);\n                                }\n                                else {\n                                    var_ach._0_2_ = fcn.000365f0(1);\n                                    unique0x00007a00 = *(var_1ch * 0x30 + -0x7af6ee90);\n                                    unique0x00007a00 = *(var_1ch * 0x30 + -0x7af6ee84);\n                                }\n                                iVar4 = (*var_c8h)(*(var_1ch * 0x30 + -0x7af6ee78), &var_84h, var_20h);\n                                if (iVar4 == 0) {\n                                    var_7eh = var_34h;\n                                    var_7ah._0_2_ = var_30h;\n                                    var_84h = *(var_1ch * 0x30 + -0x7af6ee8c);\n                                    var_80h = *(var_1ch * 0x30 + -0x7af6ee88);\n                                    if (*(var_1ch * 0x30 + -0x7af6ee74) == '\\0') {\n                                        var_70h._0_2_ = fcn.000365f0(2);\n                                        unique0x00007a00 = *(var_1ch * 0x30 + -0x7af6ee84);\n                                        var_64h = *(var_1ch * 0x30 + -0x7af6ee8c);\n                                        var_60h._0_2_ = *(var_1ch * 0x30 + -0x7af6ee88);\n                                        unique0x00007a00 = *(var_1ch * 0x30 + -0x7af6ee90);\n                                    }\n                                    else {\n                                        var_70h._0_2_ = fcn.000365f0(1);\n                                        unique0x00007a00 = *(var_1ch * 0x30 + -0x7af6ee84);\n                                        unique0x00007a00 = *(var_1ch * 0x30 + -0x7af6ee90);\n                                    }\n                                    break;\n                                }\n                                (*var_40h)(var_3ch);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        (**0x8500d010)();\n        if ((((var_2ch == 0) && (var_48h == 0)) && (var_10h == 0)) && (var_4h == 0)) {\n            fcn.00034df0(0x85091168, var_24h);\n        }\n        else {\n            if ((var_2ch != 0) || (var_10h != 0)) {\n                (*var_38h)(*(var_1ch * 0x30 + -0x7af6ee78), var_3ch, 0x85011700);\n            }\n            if ((var_48h != 0) || (var_4h != 0)) {\n                (*var_38h)(*(var_1ch * 0x30 + -0x7af6ee78), var_20h, 0x85011708);\n            }\n        }\n    } while( true );\n}\n",
        "token_count": 2607
    },
    "00059210": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00059210(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    uint16_t uVar1;\n    int16_t iVar2;\n    int16_t iVar3;\n    int32_t iVar4;\n    uint var_50h;\n    int32_t var_4ch;\n    int32_t var_48h;\n    int32_t *var_44h;\n    int32_t *var_40h;\n    uint32_t var_3ch;\n    uint var_38h;\n    int32_t var_34h;\n    int32_t var_30h;\n    int32_t *var_2ch;\n    int32_t *var_28h;\n    uint32_t var_24h;\n    uint var_20h;\n    uint32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint *var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    uint var_1h;\n    \n    iVar2 = *(arg_ch + 0xc);\n    iVar3 = fcn.000365f0(0x806);\n    if ((iVar2 == iVar3) && (0x1b < arg_14h)) {\n        fcn.000598a0(arg_8h, arg_ch, arg_10h);\n    }\n    else if ((*0x85091d78 == 0) && (iVar2 = *(arg_ch + 0xc),  iVar3 = fcn.000365f0(0x800),  iVar2 == iVar3)) {\n        var_ch = arg_10h;\n        var_1h._0_1_ = (**0x8500d00c)();\n        for (var_8h = 0; var_8h < 0x40; var_8h = var_8h + 1) {\n            if (*(var_8h * 0x30 + -0x7af6ee78) == arg_8h) {\n                if ((*(var_ch + 0xc) == *(var_8h * 0x30 + -0x7af6ee90)) &&\n                   (*(var_ch + 0x10) == *(var_8h * 0x30 + -0x7af6ee84))) {\n                    var_28h = var_8h * 0x30 + -0x7af6ee8c;\n                    var_2ch = arg_ch + 6;\n                    for (var_24h = 6; 3 < var_24h; var_24h = var_24h - 4) {\n                        if (*var_2ch != *var_28h) goto code_r0x00059334;\n                        var_28h = var_28h + 1;\n                        var_2ch = var_2ch + 1;\n                    }\n                    if (var_24h == 0) {\ncode_r0x000593b6:\n                        var_34h = 0;\n                    }\n                    else {\ncode_r0x00059334:\n                        var_30h = *var_2ch - *var_28h;\n                        if (var_30h == 0) {\n                            if (var_24h == 1) goto code_r0x000593b6;\n                            var_30h = *(var_2ch + 1) - *(var_28h + 1);\n                            if (var_30h == 0) {\n                                if (var_24h == 2) goto code_r0x000593b6;\n                                var_30h = *(var_2ch + 2) - *(var_28h + 2);\n                                if (var_30h == 0) {\n                                    if ((var_24h == 3) || (var_30h = *(var_2ch + 3) - *(var_28h + 3),  var_30h == 0))\n                                    goto code_r0x000593b6;\n                                }\n                            }\n                        }\n                        var_34h = 1;\n                        if (var_30h < 1) {\n                            var_34h = -1;\n                        }\n                    }\n                    if (var_34h != 0) goto code_r0x00059427;\n                    var_20h = *(var_8h * 0x30 + -0x7af6ee80);\n                    uVar1 = *(var_8h * 0x30 + -0x7af6ee7c);\n                    *(var_8h * 0x30 + -0x7af6ee68) = *(var_8h * 0x30 + -0x7af6ee68) + 1;\ncode_r0x00059594:\n                    var_1ch = uVar1;\n                    var_18h = 0;\n                    var_14h._0_2_ = *(arg_ch + 0xc);\n                    iVar4 = fcn.00038db0(arg_8h, &var_1ch + 2, 6);\n                    if ((iVar4 == 0) && (var_10h = fcn.00036330(arg_14h + 0xe),  var_10h != NULL)) {\n                        *var_10h = var_20h;\n                        var_10h[1] = var_1ch;\n                        var_10h[2] = var_18h;\n                        *(var_10h + 3) = var_14h;\n                        fcn.0007f904(var_10h + 0xe, arg_10h, arg_14h);\n                        fcn.00039500(arg_8h, var_10h, arg_14h + 0xe);\n                        fcn.00036460(var_10h);\n                    }\n                }\n                else {\ncode_r0x00059427:\n                    if ((*(var_ch + 0xc) == *(var_8h * 0x30 + -0x7af6ee84)) &&\n                       (*(var_ch + 0x10) == *(var_8h * 0x30 + -0x7af6ee90))) {\n                        var_40h = var_8h * 0x30 + -0x7af6ee80;\n                        var_44h = arg_ch + 6;\n                        for (var_3ch = 6; 3 < var_3ch; var_3ch = var_3ch - 4) {\n                            if (*var_44h != *var_40h) goto code_r0x000594a0;\n                            var_40h = var_40h + 1;\n                            var_44h = var_44h + 1;\n                        }\n                        if (var_3ch == 0) {\ncode_r0x00059522:\n                            var_4ch = 0;\n                        }\n                        else {\ncode_r0x000594a0:\n                            var_48h = *var_44h - *var_40h;\n                            if (var_48h == 0) {\n                                if (var_3ch == 1) goto code_r0x00059522;\n                                var_48h = *(var_44h + 1) - *(var_40h + 1);\n                                if (var_48h == 0) {\n                                    if (var_3ch == 2) goto code_r0x00059522;\n                                    var_48h = *(var_44h + 2) - *(var_40h + 2);\n                                    if (var_48h == 0) {\n                                        if ((var_3ch == 3) || (var_48h = *(var_44h + 3) - *(var_40h + 3),  var_48h == 0)\n                                           ) goto code_r0x00059522;\n                                    }\n                                }\n                            }\n                            var_4ch = 1;\n                            if (var_48h < 1) {\n                                var_4ch = -1;\n                            }\n                        }\n                        if (var_4ch == 0) {\n                            var_20h = *(var_8h * 0x30 + -0x7af6ee8c);\n                            uVar1 = *(var_8h * 0x30 + -0x7af6ee88);\n                            *(var_8h * 0x30 + -0x7af6ee64) = *(var_8h * 0x30 + -0x7af6ee64) + 1;\n                            goto code_r0x00059594;\n                        }\n                    }\n                }\n            }\n        }\n        (**0x8500d010)();\n    }\n    return;\n}\n",
        "token_count": 1944
    },
    "000597e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000597e0(int32_t arg_8h)\n\n{\n    uint *puVar1;\n    uint var_18h;\n    uint *var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar1 = *(arg_8h + 8);\n    if (puVar1 == NULL) {\n        var_8h = 0;\n    }\n    else {\n        if ((*(puVar1 + 6) & 5) == 0) {\n            var_18h = (**0x8500d238)(puVar1, 0);\n        }\n        else {\n            var_18h = puVar1[3];\n        }\n        var_8h = var_18h;\n        for (var_14h = *puVar1; var_14h != NULL; var_14h = *var_14h) {\n        }\n    }\n    fcn.00036460(var_8h);\n    (**0x8500d2a8)(puVar1);\n    (**0x8500d05c)(arg_8h);\n    return;\n}\n",
        "token_count": 260
    },
    "000598a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000598a0(uint arg_8h, int32_t *arg_ch, int16_t *arg_10h)\n\n{\n    int16_t iVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    uint var_38h;\n    int32_t var_34h;\n    int32_t var_30h;\n    int32_t *var_2ch;\n    int32_t *var_28h;\n    uint32_t var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t *var_14h;\n    int32_t *var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    \n    iVar1 = *arg_10h;\n    iVar2 = fcn.000365f0(1);\n    if (iVar1 != iVar2) {\n        return;\n    }\n    iVar1 = arg_10h[1];\n    iVar2 = fcn.000365f0(0x800);\n    if (iVar1 != iVar2) {\n        return;\n    }\n    if (*(arg_10h + 2) != '\\x06') {\n        return;\n    }\n    if (*(arg_10h + 5) != '\\x04') {\n        return;\n    }\n    iVar1 = arg_10h[3];\n    iVar2 = fcn.000365f0(1);\n    if (iVar1 != iVar2) goto code_r0x00059b28;\n    var_10h = 0x8508de08;\n    var_14h = arg_ch;\n    for (var_ch = 6; 3 < var_ch; var_ch = var_ch - 4) {\n        if (*var_14h != *var_10h) goto code_r0x00059947;\n        var_10h = var_10h + 1;\n        var_14h = var_14h + 1;\n    }\n    if (var_ch == 0) {\ncode_r0x000599c9:\n        var_1ch = 0;\n    }\n    else {\ncode_r0x00059947:\n        var_18h = *var_14h - *var_10h;\n        if (var_18h == 0) {\n            if (var_ch == 1) goto code_r0x000599c9;\n            var_18h = *(var_14h + 1) - *(var_10h + 1);\n            if (var_18h == 0) {\n                if (var_ch == 2) goto code_r0x000599c9;\n                var_18h = *(var_14h + 2) - *(var_10h + 2);\n                if (var_18h == 0) {\n                    if ((var_ch == 3) || (var_18h = *(var_14h + 3) - *(var_10h + 3),  var_18h == 0))\n                    goto code_r0x000599c9;\n                }\n            }\n        }\n        var_1ch = 1;\n        if (var_18h < 1) {\n            var_1ch = -1;\n        }\n    }\n    if (var_1ch != 0) {\ncode_r0x00059b28:\n        iVar1 = arg_10h[3];\n        iVar2 = fcn.000365f0(2);\n        if (iVar1 == iVar2) {\n            fcn.00059b60(arg_8h, arg_10h + 4, *(arg_10h + 7), 0);\n        }\n        return;\n    }\n    iVar3 = fcn.00038db0(arg_8h, &var_8h, 6);\n    if (iVar3 != 0) {\n        return;\n    }\n    var_28h = &var_8h;\n    var_2ch = arg_ch + 6;\n    for (var_24h = 6; 3 < var_24h; var_24h = var_24h - 4) {\n        if (*var_2ch != *var_28h) goto code_r0x00059a4e;\n        var_28h = var_28h + 1;\n        var_2ch = var_2ch + 1;\n    }\n    if (var_24h == 0) {\ncode_r0x00059ad0:\n        var_34h = 0;\n    }\n    else {\ncode_r0x00059a4e:\n        var_30h = *var_2ch - *var_28h;\n        if (var_30h == 0) {\n            if (var_24h == 1) goto code_r0x00059ad0;\n            var_30h = *(var_2ch + 1) - *(var_28h + 1);\n            if (var_30h == 0) {\n                if (var_24h == 2) goto code_r0x00059ad0;\n                var_30h = *(var_2ch + 2) - *(var_28h + 2);\n                if (var_30h == 0) {\n                    if ((var_24h == 3) || (var_30h = *(var_2ch + 3) - *(var_28h + 3),  var_30h == 0))\n                    goto code_r0x00059ad0;\n                }\n            }\n        }\n        var_34h = 1;\n        if (var_30h < 1) {\n            var_34h = -1;\n        }\n    }\n    if (var_34h == 0) {\n        return;\n    }\n    fcn.00059b60(arg_8h, arg_10h + 4, *(arg_10h + 7), 1);\n    fcn.00059b60(arg_8h, 0, *(arg_10h + 0xc), 0);\n    return;\n}\n",
        "token_count": 1336
    },
    "00059b60": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.00059b60(int32_t *arg_8h, int32_t **arg_ch, int32_t *arg_10h, uint arg_14h)\n\n{\n    int32_t **arg_8h_00;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint var_3ch;\n    int32_t var_38h;\n    int32_t var_34h;\n    int32_t **var_30h;\n    int32_t **var_2ch;\n    uint32_t var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t **var_18h;\n    int32_t **var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    int32_t **var_8h;\n    uint var_1h;\n    \n    if (9999 < *0x85091128) {\n        return 0;\n    }\n    arg_8h_00 = fcn.00036360(0x2c);\n    if (arg_8h_00 == NULL) {\n        return 0;\n    }\n    fcn.0007f916(arg_8h_00, 0, 0x2c);\n    arg_8h_00[3] = arg_10h;\n    arg_8h_00[4] = arg_8h;\n    if (arg_ch != NULL) {\n        arg_8h_00[5] = *arg_ch;\n        *(arg_8h_00 + 6) = *(arg_ch + 1);\n    }\n    if (arg_14h == '\\0') {\n        arg_8h_00[8] = arg_8h_00[8] + 1;\n    }\n    else {\n        arg_8h_00[7] = arg_8h_00[7] + 1;\n    }\n    fcn.00036f90(arg_8h_00 + 10);\n    (**0x8500d00c)();\n    if (*0x85091128 < 10000) {\n        if (*0x85091164 != NULL) {\n            var_8h = *0x85091164;\n            while( true ) {\n                while( true ) {\n                    if ((var_8h[3] == arg_10h) && (var_8h[4] == arg_8h)) {\n                        if (arg_14h == '\\0') {\n                            var_8h[8] = var_8h[8] + 1;\n                        }\n                        else {\n                            var_8h[7] = var_8h[7] + 1;\n                        }\n                        if (arg_ch == NULL) goto code_r0x00059e93;\n                        var_10h = 6;\n                        var_14h = 0x8509ec10;\n                        var_18h = var_8h + 5;\n                        goto code_r0x00059cc3;\n                    }\n                    uVar1 = fcn.000365c0(arg_10h);\n                    uVar2 = fcn.000365c0(var_8h[3]);\n                    if (uVar1 < uVar2) break;\n                    if (var_8h[1] == NULL) {\n                        var_8h[1] = arg_8h_00;\n                        *0x85091128 = *0x85091128 + 1;\n                        arg_8h_00[2] = (*0x85091164)[2];\n                        (*0x85091164)[2] = arg_8h_00;\n                        arg_8h_00 = *0x85091164;\n                        goto code_r0x00059f70;\n                    }\n                    var_8h = var_8h[1];\n                }\n                if (*var_8h == NULL) break;\n                var_8h = *var_8h;\n            }\n            *var_8h = arg_8h_00;\n            *0x85091128 = *0x85091128 + 1;\n            arg_8h_00[2] = (*0x85091164)[2];\n            (*0x85091164)[2] = arg_8h_00;\n            arg_8h_00 = *0x85091164;\n        }\n    }\n    else {\n        fcn.00036460(arg_8h_00);\n        arg_8h_00 = *0x85091164;\n    }\n    goto code_r0x00059f70;\ncode_r0x00059cc3:\n    if (var_10h < 4) goto code_r0x00059cc9;\n    if (*var_18h != *var_14h) goto code_r0x00059cd3;\n    var_10h = var_10h - 4;\n    var_14h = var_14h + 1;\n    var_18h = var_18h + 1;\n    goto code_r0x00059cc3;\ncode_r0x00059cc9:\n    if (var_10h == 0) {\ncode_r0x00059d55:\n        var_20h = 0;\n    }\n    else {\ncode_r0x00059cd3:\n        var_1ch = *var_18h - *var_14h;\n        if (var_1ch == 0) {\n            if (var_10h == 1) goto code_r0x00059d55;\n            var_1ch = *(var_18h + 1) - *(var_14h + 1);\n            if (var_1ch == 0) {\n                if (var_10h == 2) goto code_r0x00059d55;\n                var_1ch = *(var_18h + 2) - *(var_14h + 2);\n                if (var_1ch == 0) {\n                    if ((var_10h == 3) || (var_1ch = *(var_18h + 3) - *(var_14h + 3),  var_1ch == 0))\n                    goto code_r0x00059d55;\n                }\n            }\n        }\n        var_20h = 1;\n        if (var_1ch < 1) {\n            var_20h = -1;\n        }\n    }\n    if (var_20h == 0) {\n        var_8h[5] = *arg_ch;\n        *(var_8h + 6) = *(arg_ch + 1);\n    }\n    else {\n        var_2ch = arg_ch;\n        var_30h = var_8h + 5;\n        for (var_28h = 6; 3 < var_28h; var_28h = var_28h - 4) {\n            if (*var_30h != *var_2ch) goto code_r0x00059dc2;\n            var_2ch = var_2ch + 1;\n            var_30h = var_30h + 1;\n        }\n        if (var_28h == 0) {\ncode_r0x00059e44:\n            var_38h = 0;\n        }\n        else {\ncode_r0x00059dc2:\n            var_34h = *var_30h - *var_2ch;\n            if (var_34h == 0) {\n                if (var_28h == 1) goto code_r0x00059e44;\n                var_34h = *(var_30h + 1) - *(var_2ch + 1);\n                if (var_34h == 0) {\n                    if (var_28h == 2) goto code_r0x00059e44;\n                    var_34h = *(var_30h + 2) - *(var_2ch + 2);\n                    if (var_34h == 0) {\n                        if ((var_28h == 3) || (var_34h = *(var_30h + 3) - *(var_2ch + 3),  var_34h == 0))\n                        goto code_r0x00059e44;\n                    }\n                }\n            }\n            var_38h = 1;\n            if (var_34h < 1) {\n                var_38h = -1;\n            }\n        }\n        if (var_38h != 0) {\n            var_8h[9] = var_8h[9] + 1;\n        }\n    }\ncode_r0x00059e93:\n    fcn.00036f90(var_8h + 10);\n    fcn.00036460(arg_8h_00);\n    arg_8h_00 = *0x85091164;\ncode_r0x00059f70:\n    *0x85091164 = arg_8h_00;\n    (**0x8500d010)();\n    return 1;\n}\n",
        "token_count": 2001
    },
    "00059f90": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00059f90(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_8h = arg_8h;\n    while (var_8h != 0) {\n        iVar1 = *(var_8h + 8);\n        fcn.00036460(var_8h);\n        var_8h = iVar1;\n    }\n    return;\n}\n",
        "token_count": 107
    },
    "00059fd0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nbool __cdecl fcn.00059fd0(int32_t arg_8h, int32_t arg_ch, uint *arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t *var_14h;\n    int32_t *var_10h;\n    uint32_t var_ch;\n    uint *var_8h;\n    uint var_1h;\n    \n    (**0x8500d00c)();\n    var_8h = *0x85091164;\n    while (var_8h != NULL) {\n        if ((var_8h[3] == arg_ch) && (var_8h[4] == arg_8h)) {\n            var_ch = 6;\n            var_10h = 0x8509ec10;\n            var_14h = var_8h + 5;\n            goto code_r0x0005a047;\n        }\n        uVar1 = fcn.000365c0(arg_ch);\n        uVar2 = fcn.000365c0(var_8h[3]);\n        if (uVar1 < uVar2) {\n            var_8h = *var_8h;\n        }\n        else {\n            var_8h = var_8h[1];\n        }\n    }\n    goto code_r0x0005a14f;\ncode_r0x0005a047:\n    if (var_ch < 4) goto code_r0x0005a04d;\n    if (*var_14h != *var_10h) goto code_r0x0005a057;\n    var_ch = var_ch - 4;\n    var_10h = var_10h + 1;\n    var_14h = var_14h + 1;\n    goto code_r0x0005a047;\ncode_r0x0005a04d:\n    if (var_ch == 0) {\ncode_r0x0005a0d9:\n        var_1ch = 0;\n    }\n    else {\ncode_r0x0005a057:\n        var_18h = *var_14h - *var_10h;\n        if (var_18h == 0) {\n            if (var_ch == 1) goto code_r0x0005a0d9;\n            var_18h = *(var_14h + 1) - *(var_10h + 1);\n            if (var_18h == 0) {\n                if (var_ch == 2) goto code_r0x0005a0d9;\n                var_18h = *(var_14h + 2) - *(var_10h + 2);\n                if (var_18h == 0) {\n                    if ((var_ch == 3) || (var_18h = *(var_14h + 3) - *(var_10h + 3),  var_18h == 0))\n                    goto code_r0x0005a0d9;\n                }\n            }\n        }\n        var_1ch = 1;\n        if (var_18h < 1) {\n            var_1ch = -1;\n        }\n    }\n    if (var_1ch == 0) {\n        var_8h = NULL;\n    }\n    else {\n        puVar4 = var_8h;\n        for (iVar3 = 0xb; iVar3 != 0; iVar3 = iVar3 + -1) {\n            *arg_10h = *puVar4;\n            puVar4 = puVar4 + 1;\n            arg_10h = arg_10h + 1;\n        }\n    }\ncode_r0x0005a14f:\n    (**0x8500d010)();\n    return var_8h != NULL;\n}\n",
        "token_count": 882
    },
    "0005a170": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0005a170(uint *arg_8h, int32_t *arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint *puVar3;\n    uint *var_4h;\n    \n    *arg_ch = 0;\n    for (var_4h = arg_8h; var_4h != NULL; var_4h = var_4h[2]) {\n        if (arg_10h != 0) {\n            puVar2 = var_4h;\n            puVar3 = *arg_ch * 0x2c + arg_10h;\n            for (iVar1 = 0xb; iVar1 != 0; iVar1 = iVar1 + -1) {\n                *puVar3 = *puVar2;\n                puVar2 = puVar2 + 1;\n                puVar3 = puVar3 + 1;\n            }\n        }\n        *arg_ch = *arg_ch + 1;\n    }\n    return;\n}\n",
        "token_count": 230
    },
    "0005a1d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0005a1d0(uint noname_0, int32_t arg_ch, int32_t *arg_10h)\n\n{\n    ushort uVar1;\n    uint uVar2;\n    int32_t **var_ch;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    var_4h = arg_10h;\n    (**0x8500d068)(&var_8h, arg_10h + 1, *0x85092bf4, arg_ch, 0x3c);\n    if (var_8h == 0) {\n        (**0x8500d058)(&var_8h, var_4h, *0x85092bf8);\n        if (var_8h == 0) {\n            *(*var_4h + 0x38) = 0;\n            fcn.00034d00(*var_4h + 0x3c);\n            for (var_ch = var_4h[1]; *var_ch != NULL; var_ch = *var_ch) {\n            }\n            if (*(*var_4h + 8) == 0) {\n                *(*var_4h + 0xc) = var_ch;\n            }\n            *var_ch = *(*var_4h + 8);\n            *(*var_4h + 8) = var_4h[1];\n            *(*var_4h + 0x1c) = 0;\n            fcn.0007f916(arg_ch, 0, 0x3c);\n            uVar1 = fcn.000365f0(0x806);\n            *(arg_ch + 0xc) = uVar1;\n            uVar1 = fcn.000365f0(1);\n            *(arg_ch + 0xe) = uVar1;\n            uVar1 = fcn.000365f0(0x800);\n            *(arg_ch + 0x10) = uVar1;\n            *(arg_ch + 0x12) = 6;\n            *(arg_ch + 0x13) = 4;\n            uVar2 = 0;\n        }\n        else {\n            (**0x8500d2a8)(var_4h[1]);\n            uVar2 = 0xc0000001;\n        }\n    }\n    else {\n        uVar2 = 0xc0000001;\n    }\n    return uVar2;\n}\n",
        "token_count": 537
    },
    "0005a310": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0005a310(uint arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    var_4h = arg_ch;\n    if (((*arg_ch != 0) && (iVar1 = fcn.00038ea0(arg_8h, &var_8h),  iVar1 == 0)) && (var_8h != 0)) {\n        iVar1 = (**(var_8h + 0x30))(*(var_8h + 4), *var_4h);\n        if (iVar1 == 0x103) {\n            fcn.00034df0(*var_4h + 0x3c, 0xffffffff);\n        }\n        fcn.0005a3a0(arg_ch);\n    }\n    return;\n}\n",
        "token_count": 205
    },
    "0005a3e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0005a3e0(uint arg_8h, uint *arg_ch, int32_t *arg_10h)\n\n{\n    ushort uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *var_28h;\n    int32_t var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint *var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    var_ch = 0;\n    var_24h = fcn.00038ea0(arg_8h, &var_ch);\n    if (var_24h == 0) {\n        if (var_ch == 0) {\n            var_24h = -0x3fffff63;\n        }\n        else {\n            fcn.0007f916(arg_ch, 0, 0x3c);\n            uVar1 = fcn.000365f0(0x806);\n            *(arg_ch + 3) = uVar1;\n            uVar1 = fcn.000365f0(1);\n            *(arg_ch + 0xe) = uVar1;\n            uVar1 = fcn.000365f0(0x800);\n            *(arg_ch + 4) = uVar1;\n            *(arg_ch + 0x12) = 6;\n            *(arg_ch + 0x13) = 4;\n            iVar2 = (**0x850929a4)(*0x8509298c, 8, 0);\n            if (iVar2 == 0) {\n                var_24h = -0x3fffff66;\n            }\n            else {\n                iVar3 = (**0x850929d8)();\n                *(iVar2 + 100) = iVar3 << 0x18;\n                *(iVar2 + 0x3c) = var_ch;\n                var_4h = *(iVar2 + 4);\n                if (var_4h == 0) {\n                    var_24h = -0x3fffff66;\n                }\n                else {\n                    iVar3 = *(var_4h + 0x10);\n                    if ((*(iVar3 + 6) & 5) == 0) {\n                        var_28h = (**0x8500d0e8)(iVar3, 0, 1, 0, 0, 0x20);\n                    }\n                    else {\n                        var_28h = *(iVar3 + 0xc);\n                    }\n                    var_8h = var_28h;\n                    if ((var_28h == NULL) || (*(iVar3 + 0x14) < 0x3c)) {\n                        var_24h = -0x3fffff66;\n                    }\n                    else {\n                        for (iVar3 = 0xf; iVar3 != 0; iVar3 = iVar3 + -1) {\n                            *var_28h = *arg_ch;\n                            arg_ch = arg_ch + 1;\n                            var_28h = var_28h + 1;\n                        }\n                        *(var_4h + 0xc) = 0x3c;\n                        *(var_4h + 0x14) = 0;\n                        *(var_4h + 8) = 0;\n                        *arg_10h = iVar2;\n                        var_24h = 0;\n                    }\n                }\n            }\n            if ((var_24h != 0) && (iVar2 != 0)) {\n                (**0x850929a8)(iVar2);\n            }\n        }\n    }\n    return var_24h;\n}\n",
        "token_count": 822
    },
    "0005a5a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0005a5a0(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_4h = *arg_ch;\n    if (((arg_ch != NULL) && (iVar1 = fcn.00038ea0(arg_8h, &var_8h),  iVar1 == 0)) && (var_8h != 0)) {\n        (**0x850929b4)(var_8h, var_4h, 0, 0);\n    }\n    return;\n}\n",
        "token_count": 139
    },
    "0005a610": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0005a610(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint var_4h;\n    \n    iVar2 = arg_ch;\n    pcVar1 = fcn.000684a0(arg_8h);\n    iVar2 = (*pcVar1)(arg_8h, iVar2, arg_10h, arg_14h, arg_18h);\n    if ((iVar2 != 0) && ((*(arg_ch + 4) == 0x102 || (*(arg_ch + 4) == 0x109)))) {\n        fcn.0005a6f0(arg_ch, *(arg_ch + 4) == 0x109);\n    }\n    return iVar2;\n}\n",
        "token_count": 194
    },
    "0005a680": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0005a680(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint32_t arg_1ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint var_4h;\n    \n    iVar2 = arg_ch;\n    uVar3 = arg_1ch;\n    pcVar1 = fcn.000684a0(arg_8h);\n    iVar2 = (*pcVar1)(arg_8h, iVar2, arg_10h, arg_14h, arg_18h, uVar3);\n    if (((iVar2 != 0) && ((arg_1ch & 1) != 0)) && ((*(arg_ch + 4) == 0x102 || (*(arg_ch + 4) == 0x109)))) {\n        fcn.0005a6f0(arg_ch, *(arg_ch + 4) == 0x109);\n    }\n    return iVar2;\n}\n",
        "token_count": 238
    },
    "0005a6f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0005a6f0(uint *arg_8h, uint arg_ch)\n\n{\n    int16_t iVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint var_a8h;\n    uint var_a0h;\n    uint *var_9ch;\n    uint var_98h;\n    uint var_40h;\n    int32_t var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    uint var_14h;\n    \n    cVar2 = fcn.0005b3f0(2);\n    if ((cVar2 != '\\0') && ((arg_8h[3] & 0x80000000) == 0)) {\n        var_3ch = (**0x8509ec24)(*arg_8h, 0);\n        if (var_3ch != *0x8507c4dc) {\n            *0x8507c4dc = var_3ch;\n            iVar3 = fcn.000379b0(&var_14h, 0x11);\n            if (iVar3 == 0) {\n                var_14h._0_2_ = *0x85011710;\n            }\n            fcn.00036f90(&var_40h);\n            fcn.00037410(&var_40h, &var_38h);\n            fcn.0007f736(&var_98h, 0x85011718, var_24h + 0x76c, var_28h + 1, var_2ch, var_30h, var_34h, var_38h, \n                         &var_14h);\n            var_9ch = &var_98h;\n            do {\n                iVar1 = *var_9ch;\n                var_9ch = var_9ch + 2;\n            } while (iVar1 != 0);\n            fcn.0005b3c0(2, &var_98h, (var_9ch - (&var_98h + 2) >> 1) << 1);\n        }\n        fcn.0005b3c0(2, arg_8h + 2, (-(arg_ch != '\\0') & 2) + 2);\n    }\n    return;\n}\n",
        "token_count": 547
    },
    "0005a840": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Switch with 1 destination removed at 0x0005a893 : 45 cases all go to same destination\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.0005a840(void)\n\n{\n    int32_t iVar1;\n    uint var_28h;\n    int32_t var_24h;\n    uint var_1dh;\n    uint var_1h;\n    \n    var_1dh._0_1_ = '\\0';\n    var_1h._0_1_ = '\\0';\n    if (*0x8509ec28 == -1) {\n        var_24h = 0x21590001;\n    }\n    else if (*0x8509ec28 == 0) {\n        iVar1 = fcn.00035da0();\n        if (iVar1 - 3U < 0x2d) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n        *0x8509ec28 = -1;\n        var_24h = 0x21590001;\n    }\n    else {\n        var_24h = fcn.0005b1c0(2);\n        if (var_24h == 0) {\n            var_1dh._0_1_ = '\\x01';\n            if (*0x850928f7 != '\\0') {\n                return 0x21590006;\n            }\n            var_24h = fcn.00068510(2, *0x85091d80, 0x8509ec24);\n            if (((var_24h == 0) && (var_24h = fcn.00067bc0(2, *0x8509ec28, 0x85056610, 0x8509ec1c),  var_24h == 0)) &&\n               (var_24h = fcn.00067bc0(2, *0x85091d7c, 0x85056680, 0x8509ec20),  var_24h == 0)) {\n                fcn.00068540(0x8509ec1c);\n                fcn.00068540(0x8509ec20);\n                *0x8507c4dc = 0;\n                *0x850928f7 = '\\x01';\n                var_24h = 0;\n            }\n        }\n        if (var_24h != 0) {\n            if (var_1dh != '\\0') {\n                fcn.0005b340(2, 1);\n            }\n            fcn.00068540(*0x8509ec20);\n            fcn.00068090(0x8509ec20);\n            fcn.00068540(*0x8509ec1c);\n            fcn.00068090(0x8509ec1c);\n        }\n        if (var_1h != '\\0') {\n            (**0x8500d1c4)(&var_1dh + 1);\n        }\n    }\n    return var_24h;\n}\n",
        "token_count": 699
    },
    "0005ac80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Switch with 1 destination removed at 0x0005acd1\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.0005ac80(int32_t arg_8h, uint32_t arg_ch, uint arg_10h, uint32_t arg_14h, uint arg_18h, uint32_t arg_1ch, \n            uint arg_20h)\n\n{\n    char cVar1;\n    uint16_t extraout_var;\n    uint16_t extraout_var_00;\n    bool bVar2;\n    uint var_e8h;\n    uint var_e0h;\n    uint *var_dch;\n    uint var_d8h;\n    uint var_d4h;\n    uint var_d0h;\n    uint var_cch;\n    uint var_c8h;\n    uint var_28h;\n    uint *var_1ch;\n    uint var_18h;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    if ((*0x8509ec2c == 0) && (cVar1 = (**0x8500d004)(),  cVar1 == '\\0')) {\n        fcn.0007f832();\n        *0x8509ec2c = 1;\n    }\n    if (arg_ch < 8) {\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    fcn.0007f7f0(&var_28h, 0x8501179c, arg_ch);\n    var_1ch = &var_28h;\n    (**0x8500d108)(&var_8h);\n    bVar2 = var_8h < *0x85091d98;\n    var_8h = var_8h - *0x85091d98;\n    var_4h = (var_4h - *0x85091d9c) - bVar2;\n    fcn.000371e0(&var_8h, &var_18h);\n    fcn.000365f0(arg_1ch & 0xffff | extraout_var << 0x10);\n    fcn.000365f0(arg_14h & 0xffff | extraout_var_00 << 0x10);\n    fcn.0004a010(&var_c8h, 0x9b, 0x850117ac, var_18h);\n    var_dch = &var_c8h;\n    do {\n        cVar1 = *var_dch;\n        var_dch = var_dch + 1;\n    } while (cVar1 != '\\0');\n    fcn.0005b3c0(1, &var_c8h, var_dch - (&var_c8h + 1));\n    return;\n}\n",
        "token_count": 625
    },
    "0005aed0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0005aed0(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    if (*0x8509ec16 == '\\0') {\n        fcn.000355f0(0x85091db4);\n        iVar1 = fcn.00034d00(0x85091db0);\n        if (iVar1 == 0) {\n            var_4h = -1;\n        }\n        else {\n            fcn.00032da0(0x85091d84);\n            *0x8509ec30 = fcn.00036360(0x960);\n            if (*0x8509ec30 == 0) {\n                var_4h = 0x21590004;\n            }\n            else {\n                fcn.0007f916(*0x8509ec30, 0, 0x960);\n                *0x85091db8 = 0;\n                *0x85091dbc = 0;\n                iVar1 = fcn.0001a700(0x85091da8, 0x850575a0, 0);\n                if (iVar1 == 0) {\n                    *0x8509ec16 = '\\x01';\n                    var_4h = 0;\n                }\n                else {\n                    *0x8509ec16 = '\\0';\n                    var_4h = fcn.00036750();\n                }\n                for (var_8h = 0; var_8h < 4; var_8h = var_8h + 1) {\n                    uVar2 = fcn.000299b0(*(var_8h * 0x3c + -0x7af722e0), 0);\n                    *(var_8h * 0x3c + -0x7af722dc) = uVar2;\n                    if (*(var_8h * 0x3c + -0x7af722dc) == 0) {\n                        *(var_8h * 0x3c + -0x7af722dc) = 0xffffffff;\n                    }\n                    uVar2 = fcn.000299b0(*(var_8h * 0x3c + -0x7af722d8), 0);\n                    *(var_8h * 0x3c + -0x7af722d4) = uVar2;\n                    if (*(var_8h * 0x3c + -0x7af722d4) == 0) {\n                        *(var_8h * 0x3c + -0x7af722d4) = 0xffffffff;\n                    }\n                    iVar1 = fcn.000299b0(*(var_8h * 0x3c + -0x7af722e8), 0);\n                    if (iVar1 != 0) {\n                        (**(var_8h * 0x3c + -0x7af722bc))(var_8h);\n                    }\n                }\n            }\n            if (var_4h != 0) {\n                fcn.00035620(0x85091db4);\n                fcn.00034d90(0x85091db0);\n                fcn.00036460(*0x8509ec30);\n                *0x8509ec30 = 0;\n            }\n        }\n    }\n    else {\n        var_4h = 0x21590006;\n    }\n    return var_4h;\n}\n",
        "token_count": 778
    },
    "0005b0a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid fcn.0005b0a0(void)\n\n{\n    uint32_t var_8h;\n    uint var_1h;\n    \n    if (*0x8509ec16 != '\\0') {\n        *0x8509ec16 = '\\0';\n        *0x8509027b = 1;\n        fcn.00034dc0(0x85091db0);\n        fcn.000383c0(0x85091da8, 0);\n        fcn.00038370(0x85091da8);\n        fcn.00034d90(0x85091db0);\n        for (var_8h = 0; var_8h < 4; var_8h = var_8h + 1) {\n            if (*(var_8h * 0x3c + -0x7af722e4) != 0) {\n                (**(var_8h * 0x3c + -0x7af722b8))(var_8h, 1);\n            }\n        }\n        fcn.00035620(0x85091db4);\n        (**0x8500d00c)();\n        for (var_8h = 0; var_8h < 100; var_8h = var_8h + 1) {\n            if (*(*0x8509ec30 + var_8h * 0x18) != 0) {\n                fcn.00036460(*(*0x8509ec30 + var_8h * 0x18));\n            }\n        }\n        (**0x8500d010)();\n        fcn.00036460(*0x8509ec30);\n        *0x8509ec30 = 0;\n    }\n    return;\n}\n",
        "token_count": 403
    },
    "0005b1c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0005b1c0(int32_t arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_4h;\n    \n    if (*0x8509ec16 == '\\0') {\n        var_4h = 0xffffffff;\n    }\n    else {\n        fcn.00035650(0x85091db4);\n        uVar1 = fcn.000299b0(*(arg_8h * 0x3c + -0x7af722e0), 0);\n        *(arg_8h * 0x3c + -0x7af722dc) = uVar1;\n        if (*(arg_8h * 0x3c + -0x7af722dc) == 0) {\n            *(arg_8h * 0x3c + -0x7af722dc) = 0xffffffff;\n        }\n        uVar1 = fcn.000299b0(*(arg_8h * 0x3c + -0x7af722d8), 0);\n        *(arg_8h * 0x3c + -0x7af722d4) = uVar1;\n        if (*(arg_8h * 0x3c + -0x7af722d4) == 0) {\n            *(arg_8h * 0x3c + -0x7af722d4) = 0xffffffff;\n        }\n        if (*(arg_8h * 0x3c + -0x7af722e4) == 0) {\n            uVar1 = fcn.000367c0(*(arg_8h * 0x3c + -0x7af722b0), 0x85011804);\n            *(arg_8h * 0x3c + -0x7af722b4) = uVar1;\n            if (*(arg_8h * 0x3c + -0x7af722b4) == 0) {\n                var_4h = fcn.00036750();\n            }\n            else {\n                iVar2 = arg_8h * 0x3c;\n                *(iVar2 + -0x7af722d0) = 0;\n                *(iVar2 + -0x7af722cc) = 0;\n                *(iVar2 + -0x7af722c8) = 0;\n                *(iVar2 + -0x7af722c4) = 0;\n                *(iVar2 + -0x7af722c0) = 0;\n                uVar1 = fcn.00036a60(*(arg_8h * 0x3c + -0x7af722b4));\n                uVar1 = fcn.00036a70(uVar1);\n                *(arg_8h * 0x3c + -0x7af722c0) = uVar1;\n                fcn.000299f0(*(arg_8h * 0x3c + -0x7af722e8), 1);\n                *(arg_8h * 0x3c + -0x7af722e4) = 1;\n                var_4h = 0;\n            }\n        }\n        else {\n            var_4h = 0x21590006;\n        }\n        fcn.000356c0(0x85091db4);\n    }\n    return var_4h;\n}\n",
        "token_count": 760
    },
    "0005b340": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0005b340(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    \n    if (*0x8509ec16 == '\\0') {\n        uVar1 = 0x21590006;\n    }\n    else {\n        fcn.00035650(0x85091db4);\n        if (*(arg_8h * 0x3c + -0x7af722e4) != 0) {\n            fcn.00036970(*(arg_8h * 0x3c + -0x7af722b4));\n            if (arg_ch == 0) {\n                fcn.000299f0(*(arg_8h * 0x3c + -0x7af722e8), 0);\n            }\n            *(arg_8h * 0x3c + -0x7af722e4) = 0;\n        }\n        fcn.000356c0(0x85091db4);\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 240
    },
    "0005b410": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0005b410(uint arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    uint var_20h;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (*(arg_18h * 0x3c + -0x7af722e4) != 0) {\n        var_8h = arg_18h;\n        (**0x8500d108)(&var_10h);\n        iVar1 = fcn.00036360(arg_ch + arg_14h);\n        if (iVar1 == 0) {\n            fcn.0001b570(arg_18h * 0x3c + -0x7af722c8);\n        }\n        else {\n            fcn.0007f904(iVar1, arg_8h, arg_ch);\n            fcn.0007f904(iVar1 + arg_ch, arg_10h, arg_14h);\n            (**0x8500d00c)();\n            uVar3 = (*0x85091db8 + 1) % 100;\n            if (uVar3 == *0x85091dbc) {\n                if (arg_18h == 0) {\n                    fcn.0001b570(0x8508dd38);\n                }\n            }\n            else {\n                piVar2 = *0x85091db8 * 0x18 + *0x8509ec30;\n                *piVar2 = iVar1;\n                piVar2[1] = arg_ch + arg_14h;\n                piVar2[2] = var_10h;\n                piVar2[3] = var_ch;\n                piVar2[4] = var_8h;\n                piVar2[5] = var_4h;\n                *0x85091db8 = uVar3;\n            }\n            (**0x8500d010)();\n            fcn.00034dc0(0x85091db0);\n        }\n    }\n    return;\n}\n",
        "token_count": 515
    },
    "0005b5a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0005b5a0(void)\n\n{\n    uint arg_8h;\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_1ch = fcn.00026f20();\n    while (fcn.00034df0(0x85091db0, 60000),  *0x8509027b == '\\0') {\n        while ((**0x8500d00c)(),  *0x85091db8 != *0x85091dbc) {\n            puVar2 = *0x85091dbc * 0x18 + *0x8509ec30;\n            arg_8h = *puVar2;\n            var_14h = puVar2[1];\n            var_10h = puVar2[2];\n            var_ch = puVar2[3];\n            var_8h = puVar2[4];\n            var_4h = puVar2[5];\n            puVar2 = *0x85091dbc * 0x18 + *0x8509ec30;\n            *puVar2 = 0;\n            puVar2[1] = 0;\n            puVar2[2] = 0;\n            puVar2[3] = 0;\n            puVar2[4] = 0;\n            puVar2[5] = 0;\n            *0x85091dbc = (*0x85091dbc + 1) % 100;\n            (**0x8500d010)();\n            if (*(var_8h * 0x3c + -0x7af722e4) != 0) {\n                if ((*(var_8h * 0x3c + -0x7af722c4) < *(var_8h * 0x3c + -0x7af722d4)) &&\n                   (*(var_8h * 0x3c + -0x7af722c0) < *(var_8h * 0x3c + -0x7af722dc))) {\n                    fcn.00035650(0x85091db4);\n                    if ((var_8h == 0) || (var_8h == 3)) {\n                        fcn.00036980(&var_14h, 4, 1, *(var_8h * 0x3c + -0x7af722b4));\n                        fcn.00036980(&var_10h, 8, 1, *(var_8h * 0x3c + -0x7af722b4));\n                        if (var_8h == 0) {\n                            *0x8508dd3c = *0x8508dd3c + 1;\n                        }\n                    }\n                    fcn.00036980(arg_8h, var_14h, 1, *(var_8h * 0x3c + -0x7af722b4));\n                    *(var_8h * 0x3c + -0x7af722c0) = *(var_8h * 0x3c + -0x7af722c0) + var_14h;\n                    fcn.000356c0(0x85091db4);\n                }\n                else {\n                    (**(var_8h * 0x3c + -0x7af722b8))(var_8h, 1);\n                }\n            }\n            fcn.00036460(arg_8h);\n        }\n        (**0x8500d010)();\n        iVar1 = fcn.00026f20();\n        if (59999 < iVar1 - var_1ch) {\n            fcn.0003cc60();\n            var_1ch = fcn.00026f20();\n        }\n    }\n    return 0;\n}\n",
        "token_count": 892
    },
    "0005ba60": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.0005ba60(uint arg_8h, int32_t arg_ch, uint arg_10h, uint *arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    int32_t iVar1;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    *arg_14h = 0;\n    if (*0x8509ec16 == '\\0') {\n        var_4h = 0x21590006;\n    }\n    else {\n        iVar1 = fcn.00020a10(arg_10h, 0x58, 3, &var_8h, 4);\n        if (iVar1 == 0) {\n            if (arg_ch == 0x838) {\n                var_8h = 0;\n            }\n            else if (arg_ch == 0x853) {\n                var_8h = 2;\n            }\n            else {\n                if (arg_ch != 0x857) {\n                    return 0x21590001;\n                }\n                var_8h = 1;\n            }\n        }\n        if (*(var_8h * 0x3c + -0x7af722e4) == 0) {\n            var_4h = 0x21590006;\n        }\n        else {\n            var_4h = (**(var_8h * 0x3c + -0x7af722b8))(var_8h, 0);\n            if (var_4h == 0) {\n                var_4h = fcn.0005b880(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch);\n            }\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 408
    },
    "0005bb40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0005bb40(uint noname_0, uint noname_1, uint arg_10h, uint *arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t var_54h;\n    int32_t var_50h;\n    int32_t var_4ch;\n    int32_t var_48h;\n    uint var_44h;\n    uint *var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint *var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint *var_14h;\n    uint var_10h;\n    uint *var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    *arg_14h = 0;\n    if (*0x8509ec16 == '\\0') {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        iVar2 = fcn.00020a10(arg_10h, 0x58, 3, &var_4ch, 4);\n        if (iVar2 == 0) {\n            var_4ch = 0;\n        }\n        *arg_14h = 3;\n        iVar2 = fcn.00020a10(arg_10h, 0x1d, 2, &var_48h, 4);\n        if (iVar2 != 0) {\n            if (var_48h == 0) {\n                var_50h = -1;\n            }\n            else {\n                var_50h = var_48h;\n            }\n            *(var_4ch * 0x3c + -0x7af722dc) = var_50h;\n        }\n        iVar2 = fcn.00020a10(arg_10h, 0x1e, 2, &var_48h, 4);\n        if (iVar2 != 0) {\n            if (var_48h == 0) {\n                var_54h = -1;\n            }\n            else {\n                var_54h = var_48h;\n            }\n            *(var_4ch * 0x3c + -0x7af722d4) = var_54h;\n        }\n        fcn.000299f0(*(var_4ch * 0x3c + -0x7af722e0), *(var_4ch * 0x3c + -0x7af722dc));\n        if (*(var_4ch * 0x3c + -0x7af722d8) != 0) {\n            fcn.000299f0(*(var_4ch * 0x3c + -0x7af722d8), *(var_4ch * 0x3c + -0x7af722d4));\n        }\n        var_10h = 2;\n        var_ch = &var_24h;\n        var_24h = 0x2f;\n        var_20h = 2;\n        var_1ch = 0x30;\n        var_18h = 2;\n        var_14h = &var_44h;\n        var_8h = 1;\n        var_4h = &var_14h;\n        var_38h = 0;\n        var_28h = 0;\n        var_40h = &var_3ch;\n        var_44h = 4;\n        var_3ch = *(var_4ch * 0x3c + -0x7af722dc);\n        var_30h = &var_2ch;\n        var_34h = 4;\n        var_2ch = *(var_4ch * 0x3c + -0x7af722d4);\n        uVar1 = fcn.0002f660(&var_10h, arg_18h, arg_1ch);\n    }\n    return uVar1;\n}\n",
        "token_count": 920
    },
    "0005be10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0005be10(uint arg_8h, int32_t *arg_ch)\n\n{\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = *arg_ch;\n    var_4h = arg_ch[2];\n    var_ch = fcn.0005e6c0(arg_8h, var_8h + 8, 0, &var_4h, 4);\n    if (var_ch == 0) {\n        var_ch = fcn.0005e6c0(arg_8h, var_4h, 0, &var_8h, 4);\n    }\n    return var_ch == 0;\n}\n",
        "token_count": 166
    },
    "0005be80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0005be80(uint arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_8h = arg_ch;\n    var_ch = fcn.0005e680(arg_8h, arg_ch + 8, 0, &var_4h, 4);\n    if ((((var_ch == 0) && (var_ch = fcn.0005e6c0(arg_8h, arg_10h, 0, &var_8h, 4),  var_ch == 0)) &&\n        (var_ch = fcn.0005e6c0(arg_8h, arg_10h + 8, 0, &var_4h, 4),  var_ch == 0)) &&\n       (var_ch = fcn.0005e6c0(arg_8h, var_4h, 0, &arg_10h, 4),  var_ch == 0)) {\n        var_ch = fcn.0005e6c0(arg_8h, var_8h + 8, 0, &arg_10h, 4);\n    }\n    return var_ch == 0;\n}\n",
        "token_count": 292
    },
    "0005bf50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0005bf50(uint arg_8h, int32_t *arg_ch)\n\n{\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = *arg_ch;\n    var_4h = arg_ch[1];\n    var_ch = fcn.0005e6c0(arg_8h, var_8h + 4, 0, &var_4h, 4);\n    if (var_ch == 0) {\n        var_ch = fcn.0005e6c0(arg_8h, var_4h, 0, &var_8h, 4);\n    }\n    return var_ch == 0;\n}\n",
        "token_count": 166
    },
    "0005bfc0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0005bfc0(uint arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_ch = arg_ch;\n    var_4h = arg_10h;\n    var_10h = fcn.0005e680(arg_8h, arg_ch + 4, 0, &var_8h, 4);\n    if ((((var_10h == 0) && (var_10h = fcn.0005e6c0(arg_8h, arg_10h, 0, &var_ch, 4),  var_10h == 0)) &&\n        (var_10h = fcn.0005e6c0(arg_8h, arg_10h + 4, 0, &var_8h, 4),  var_10h == 0)) &&\n       (var_10h = fcn.0005e6c0(arg_8h, var_8h, 0, &var_4h, 4),  var_10h == 0)) {\n        var_10h = fcn.0005e6c0(arg_8h, var_ch + 4, 0, &var_4h, 4);\n    }\n    return var_10h == 0;\n}\n",
        "token_count": 327
    },
    "0005c090": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.0005c090(uint param_1, int32_t param_2, int32_t *param_3)\n\n{\n    uint *in_FS_OFFSET;\n    uint var_18h;\n    uint var_8h;\n    int32_t var_ch;\n    int32_t *var_10h;\n    uint var_228h;\n    uint var_224h;\n    uint var_220h;\n    int32_t var_21ch;\n    uint var_218h;\n    uint var_214h;\n    int32_t var_200h;\n    uint var_1f0h;\n    int32_t var_1e4h;\n    uint var_1e0h;\n    uint var_1d8h;\n    int32_t var_1d0h;\n    int32_t var_1cch;\n    int32_t var_1c8h;\n    int32_t var_1a4h;\n    int32_t var_1a0h;\n    int32_t var_174h;\n    int32_t var_16ch;\n    int32_t var_168h;\n    int32_t var_164h;\n    uint var_160h;\n    int32_t var_140h;\n    uint var_120h;\n    int32_t var_108h;\n    uint var_100h;\n    uint var_f0h;\n    uint32_t var_e0h;\n    uint32_t var_dch;\n    uint32_t var_d8h;\n    uint32_t var_d4h;\n    int32_t var_d0h;\n    int32_t var_cch;\n    uint32_t var_90h;\n    uint32_t var_8ch;\n    uint32_t var_88h;\n    uint32_t var_84h;\n    int32_t var_38h;\n    uint var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    uchar *var_19h;\n    uint var_10h_2;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x8507ba98;\n    uStack16 = 0x8507b910;\n    var_10h_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_10h_2;\n    *0x10 = &stack0xfffffdc8;\n    var_20h = 0;\n    if (var_10h == NULL) {\n        var_24h = 0x21590067;\n        goto code_r0x0005c523;\n    }\n    *var_10h = 0;\n    var_24h = fcn.0005e810(&var_20h, 0x438, var_8h);\n    if ((var_24h == 0) && (var_24h = fcn.0005e580(var_20h, &var_19h),  var_24h == 0)) {\n        var_19h._0_1_ = '\\x01' - (var_19h != '\\0');\n        var_24h = fcn.0005e170(var_20h, &var_28h);\n        if (var_24h == 0) {\n            var_4h = 0;\n            if (var_19h == '\\0') {\n                var_24h = fcn.0005e680(var_20h, var_28h, 0, &var_1f0h, 0x10);\n                if (var_24h == 0) {\n                    if (var_1e4h == 0) {\n                        var_24h = -1;\n                        var_4h = 0xffffffff;\n                    }\n                    else {\n                        var_24h = fcn.0005e680(var_20h, var_1e4h, 0, &var_214h, 0x24);\n                        if (var_24h == 0) {\n                            var_21ch = var_200h;\n                            while (var_21ch != var_1e4h + 0x14) {\n                                var_24h = fcn.0005e680(var_20h, var_21ch, 0, &var_174h, 8);\n                                if (var_24h != 0) {\n                                    var_4h = 0xffffffff;\n                                    goto code_r0x0005c511;\n                                }\n                                var_24h = fcn.0005e680(var_20h, var_21ch + -8, 0, &var_1e0h, 0x48);\n                                if (var_24h != 0) {\n                                    var_4h = 0xffffffff;\n                                    goto code_r0x0005c511;\n                                }\n                                if (var_1c8h == var_ch) {\n                                    fcn.0005bf50(var_20h, &var_1e0h);\n                                    fcn.0005bf50(var_20h, &var_1d8h);\n                                    if ((var_1d0h != 0) && (var_1cch != 0)) {\n                                        fcn.0005bf50(var_20h, &var_1d0h);\n                                    }\n                                    if ((var_1a0h != 0) && (var_1a4h != 0)) {\n                                        fcn.0005bf50(var_20h, &var_1a4h);\n                                    }\n                                    *var_10h = var_21ch + -8;\n                                    break;\n                                }\n                                var_21ch = var_174h;\n                            }\n                            goto code_r0x0005c4e0;\n                        }\n                        var_4h = 0xffffffff;\n                    }\n                }\n                else {\n                    var_4h = 0xffffffff;\n                }\n            }\n            else {\n                var_24h = fcn.0005e680(var_20h, var_28h, 0, &var_120h, 0x20);\n                if (var_24h == 0) {\n                    var_16ch = var_108h;\n                    if (var_108h == 0) {\n                        var_24h = -1;\n                        var_4h = 0xffffffff;\n                    }\n                    else {\n                        var_24h = fcn.0005e680(var_20h, var_108h, 0, &var_160h, 0x40);\n                        if (var_24h == 0) {\n                            var_168h = var_140h;\n                            while (var_168h != var_16ch + 0x20) {\n                                var_24h = fcn.0005e680(var_20h, var_168h, 0, &var_38h, 0x10);\n                                if (var_24h != 0) {\n                                    var_4h = 0xffffffff;\n                                    goto code_r0x0005c511;\n                                }\n                                var_164h = var_168h + -0x10;\n                                var_24h = fcn.0005e680(var_20h, var_164h, 0, &var_100h, 0x88);\n                                if (var_24h != 0) {\n                                    var_4h = 0xffffffff;\n                                    goto code_r0x0005c511;\n                                }\n                                if ((var_d0h == var_ch) && (var_cch == 0)) {\n                                    fcn.0005be10(var_20h, &var_100h);\n                                    fcn.0005be10(var_20h, &var_f0h);\n                                    if (((var_e0h | var_dch) != 0) && ((var_d8h | var_d4h) != 0)) {\n                                        fcn.0005be10(var_20h, &var_e0h);\n                                    }\n                                    if (((var_88h | var_84h) != 0) && ((var_90h | var_8ch) != 0)) {\n                                        fcn.0005be10(var_20h, &var_90h);\n                                    }\n                                    *var_10h = var_164h;\n                                    break;\n                                }\n                                var_168h = var_38h;\n                            }\ncode_r0x0005c4e0:\n                            var_24h = (*var_10h != 0) - 1;\n                            var_4h = 0xffffffff;\n                        }\n                        else {\n                            var_4h = 0xffffffff;\n                        }\n                    }\n                }\n                else {\n                    var_4h = 0xffffffff;\n                }\n            }\n        }\n    }\ncode_r0x0005c511:\n    if (var_20h != 0) {\n        fcn.0007f6c4(var_20h);\n    }\ncode_r0x0005c523:\n    *in_FS_OFFSET = var_10h_2;\n    return var_24h;\n}\n",
        "token_count": 1992
    },
    "0005c540": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.0005c540(uint param_1, int32_t param_2, int32_t *param_3)\n\n{\n    uint *in_FS_OFFSET;\n    uint var_18h;\n    uint var_8h;\n    int32_t var_ch;\n    int32_t *var_10h;\n    uint var_220h;\n    int32_t var_21ch;\n    uint var_218h;\n    uint var_214h;\n    int32_t var_200h;\n    uint var_1f0h;\n    int32_t var_1e4h;\n    uint var_1e0h;\n    int32_t var_1c8h;\n    uint var_1a8h;\n    int32_t var_174h;\n    int32_t var_16ch;\n    int32_t var_168h;\n    int32_t var_164h;\n    uint var_160h;\n    int32_t var_140h;\n    uint var_120h;\n    int32_t var_108h;\n    uint var_100h;\n    int32_t var_d0h;\n    uint var_94h;\n    int32_t var_38h;\n    uint var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    uchar *var_19h;\n    uint var_10h_2;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x8507ba88;\n    uStack16 = 0x8507b910;\n    var_10h_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_10h_2;\n    *0x10 = &stack0xfffffdd0;\n    var_20h = 0;\n    if (var_ch == 0) {\n        var_24h = 0x21590066;\n        goto code_r0x0005c8f1;\n    }\n    if (var_10h == NULL) {\n        var_24h = 0x21590067;\n        goto code_r0x0005c8f1;\n    }\n    var_24h = fcn.0005e810(&var_20h, 0x410, var_8h);\n    if ((var_24h == 0) && (var_24h = fcn.0005e580(var_20h, &var_19h),  var_24h == 0)) {\n        var_19h._0_1_ = '\\x01' - (var_19h != '\\0');\n        var_24h = fcn.0005e170(var_20h, &var_28h);\n        if (var_24h == 0) {\n            var_4h = 0;\n            if (var_19h == '\\0') {\n                var_24h = fcn.0005e680(var_20h, var_28h, 0, &var_1f0h, 0x10);\n                if (var_24h == 0) {\n                    if (var_1e4h == 0) {\n                        var_24h = -1;\n                        var_4h = 0xffffffff;\n                    }\n                    else {\n                        var_24h = fcn.0005e680(var_20h, var_1e4h, 0, &var_214h, 0x24);\n                        if (var_24h == 0) {\n                            var_21ch = var_200h;\n                            while (var_21ch != var_1e4h + 0x14) {\n                                var_24h = fcn.0005e680(var_20h, var_21ch, 0, &var_174h, 8);\n                                if (var_24h != 0) {\n                                    var_4h = 0xffffffff;\n                                    goto code_r0x0005c8df;\n                                }\n                                var_24h = fcn.0005e680(var_20h, var_21ch + -8, 0, &var_1e0h, 0x48);\n                                if (var_24h != 0) {\n                                    var_4h = 0xffffffff;\n                                    goto code_r0x0005c8df;\n                                }\n                                if (var_1c8h == var_ch) {\n                                    *var_10h = var_1a8h;\n                                    var_24h = 0;\n                                    var_4h = 0xffffffff;\n                                    goto code_r0x0005c8df;\n                                }\n                                var_21ch = var_174h;\n                            }\n                            goto code_r0x0005c8af;\n                        }\n                        var_4h = 0xffffffff;\n                    }\n                }\n                else {\n                    var_4h = 0xffffffff;\n                }\n            }\n            else {\n                var_24h = fcn.0005e680(var_20h, var_28h, 0, &var_120h, 0x20);\n                if (var_24h == 0) {\n                    var_16ch = var_108h;\n                    if (var_108h == 0) {\n                        var_24h = -1;\n                        var_4h = 0xffffffff;\n                    }\n                    else {\n                        var_24h = fcn.0005e680(var_20h, var_108h, 0, &var_160h, 0x40);\n                        if (var_24h == 0) {\n                            var_168h = var_140h;\n                            while (var_168h != var_16ch + 0x20) {\n                                var_24h = fcn.0005e680(var_20h, var_168h, 0, &var_38h, 0x10);\n                                if (var_24h != 0) {\n                                    var_4h = 0xffffffff;\n                                    goto code_r0x0005c8df;\n                                }\n                                var_164h = var_168h + -0x10;\n                                var_24h = fcn.0005e680(var_20h, var_164h, 0, &var_100h, 0x88);\n                                if (var_24h != 0) {\n                                    var_4h = 0xffffffff;\n                                    goto code_r0x0005c8df;\n                                }\n                                if (var_d0h == var_ch) {\n                                    *var_10h = var_94h;\n                                    var_24h = 0;\n                                    var_4h = 0xffffffff;\n                                    goto code_r0x0005c8df;\n                                }\n                                var_168h = var_38h;\n                            }\ncode_r0x0005c8af:\n                            *var_10h = 0;\n                            var_24h = 0;\n                            var_4h = 0xffffffff;\n                        }\n                        else {\n                            var_4h = 0xffffffff;\n                        }\n                    }\n                }\n                else {\n                    var_4h = 0xffffffff;\n                }\n            }\n        }\n    }\ncode_r0x0005c8df:\n    if (var_20h != 0) {\n        fcn.0007f6c4(var_20h);\n    }\ncode_r0x0005c8f1:\n    *in_FS_OFFSET = var_10h_2;\n    return var_24h;\n}\n",
        "token_count": 1652
    },
    "0005c910": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.0005c910(uint param_1, uint *param_2, int32_t *param_3)\n\n{\n    int16_t iVar1;\n    uint *in_FS_OFFSET;\n    uint var_18h;\n    uint var_8h;\n    uint *var_ch;\n    int32_t *var_10h;\n    uint var_1e8h;\n    uint var_1e0h;\n    uint *var_1dch;\n    uint var_1d8h;\n    uint var_1d0h;\n    uint *var_1cch;\n    uint var_1c8h;\n    uint var_1c4h;\n    uint var_1c0h;\n    uint var_1b8h;\n    uint *var_1b4h;\n    uint var_1b0h;\n    uint var_1a8h;\n    uint *var_1a4h;\n    uint var_1a0h;\n    int32_t var_19ch;\n    uint var_198h;\n    int32_t var_18ch;\n    uint var_188h;\n    uint var_170h;\n    uint var_16ch;\n    uint var_168h;\n    uint var_164h;\n    int32_t var_160h;\n    uint var_15ch;\n    int32_t var_158h;\n    uint var_154h;\n    uint var_150h;\n    uint var_144h;\n    int32_t var_138h;\n    int32_t var_134h;\n    int32_t var_130h;\n    int32_t var_12ch;\n    int32_t var_128h;\n    int32_t var_124h;\n    int32_t var_120h;\n    int32_t var_11ch;\n    uint var_118h;\n    int32_t var_100h;\n    uint var_f8h;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b0h;\n    int32_t var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    int32_t var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_78h;\n    int32_t var_60h;\n    uint var_5ch;\n    int32_t var_58h;\n    uint var_54h;\n    int32_t var_50h;\n    uint var_4ch;\n    int32_t var_48h;\n    uint var_44h;\n    int32_t var_40h;\n    uint var_3ch;\n    int32_t var_38h;\n    uint var_34h;\n    uint var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_21h;\n    int32_t var_1ch;\n    uchar *puStack28;\n    uint var_10h_2;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x8507ba78;\n    uStack16 = 0x8507b910;\n    var_10h_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_10h_2;\n    puStack28 = &stack0xfffffe08;\n    var_28h = 0;\n    var_1ch = 0;\n    if (var_ch == NULL) {\n        var_2ch = 0x21590066;\n        goto code_r0x0005d20c;\n    }\n    if (var_10h == NULL) {\n        var_2ch = 0x21590067;\n        goto code_r0x0005d20c;\n    }\n    *var_10h = 0;\n    var_2ch = fcn.0005e810(&var_28h, 0x438, var_8h);\n    if ((var_2ch == 0) && (var_2ch = fcn.0005e580(var_28h, &var_21h),  var_2ch == 0)) {\n        var_21h._0_1_ = '\\x01' - (var_21h != '\\0');\n        var_2ch = fcn.0005e170(var_28h, &var_30h);\n        if (var_2ch == 0) {\n            var_4h = 0;\n            if (var_21h == '\\0') {\n                var_19ch = 0;\n                if ((var_ch[1] == 0) && (var_ch[5] == 0)) {\n                    var_2ch = fcn.0005e680(var_28h, var_30h, 0, &var_198h, 0x10);\n                    if (var_2ch == 0) {\n                        if (var_18ch == 0) {\n                            var_2ch = -1;\n                            var_4h = 0xffffffff;\n                        }\n                        else {\n                            fcn.0007f916(&var_188h, 0, 0x68);\n                            var_170h = *var_ch;\n                            var_168h = var_ch[2];\n                            var_144h = var_ch[3];\n                            var_154h = 0x1004;\n                            var_16ch = var_ch[4];\n                            var_150h._0_2_ = 1;\n                            var_1cch = var_ch + 6;\n                            do {\n                                iVar1 = *var_1cch;\n                                var_1cch = var_1cch + 2;\n                            } while (iVar1 != 0);\n                            var_1d8h._0_2_ = var_1cch - (var_ch + 0x1a) >> 1;\n                            var_15ch._0_2_ = var_1d8h << 1;\n                            if (var_15ch < 2) {\n                                var_15ch._0_2_ = 2;\n                                *(var_ch + 6) = 0;\n                            }\n                            var_15ch._2_2_ = var_15ch + 2;\n                            var_1dch = var_ch + 0x88;\n                            do {\n                                iVar1 = *var_1dch;\n                                var_1dch = var_1dch + 2;\n                            } while (iVar1 != 0);\n                            var_1e8h._0_2_ = var_1dch - (var_ch + 0x222) >> 1;\n                            var_164h._0_2_ = var_1e8h << 1;\n                            if (var_164h < 2) {\n                                var_164h._0_2_ = 2;\n                                *(var_ch + 6) = 0;\n                            }\n                            var_164h._2_2_ = var_164h + 2;\n                            var_19ch = 0;\n                            unique0x00002400 = var_15ch._2_2_ + 0x68 + var_164h._2_2_;\n                            var_2ch = fcn.0007f8c8(var_28h, &var_19ch, 0, &var_21h + 1, 0x3000, 4);\n                            if (var_2ch == 0) {\n                                var_1ch = var_19ch;\n                                var_158h = var_19ch + 0x68;\n                                var_2ch = fcn.0005e6c0(var_28h, var_158h, 0, var_ch + 6, var_15ch._2_2_);\n                                if (var_2ch == 0) {\n                                    var_160h = var_19ch + 0x68 + var_15ch._2_2_;\n                                    var_2ch = fcn.0005e6c0(var_28h, var_160h, 0, var_ch + 0x88, var_164h._2_2_);\n                                    if (var_2ch == 0) {\n                                        var_138h = var_19ch + 0x50;\n                                        var_134h = var_19ch + 0x50;\n                                        var_130h = var_19ch + 0x58;\n                                        var_12ch = var_19ch + 0x58;\n                                        var_128h = var_19ch + 0x60;\n                                        var_124h = var_19ch + 0x60;\n                                        var_2ch = fcn.0005e6c0(var_28h, var_19ch, 0, &var_188h, 0x68);\n                                        if (var_2ch == 0) {\n                                            fcn.0005bfc0(var_28h, var_18ch + 0xc, var_19ch);\n                                            fcn.0005bfc0(var_28h, var_18ch + 0x14, var_19ch + 8);\n                                            *var_10h = var_19ch;\n                                            goto code_r0x0005d1aa;\n                                        }\n                                        var_4h = 0xffffffff;\n                                    }\n                                    else {\n                                        var_4h = 0xffffffff;\n                                    }\n                                }\n                                else {\n                                    var_4h = 0xffffffff;\n                                }\n                            }\n                            else {\n                                var_4h = 0xffffffff;\n                            }\n                        }\n                    }\n                    else {\n                        var_4h = 0xffffffff;\n                    }\n                }\n                else {\n                    var_4h = 0xffffffff;\n                }\n            }\n            else {\n                var_11ch = 0;\n                var_2ch = fcn.0005e680(var_28h, var_30h, 0, &var_118h, 0x20);\n                if (var_2ch == 0) {\n                    var_120h = var_100h;\n                    if (var_100h == 0) {\n                        var_2ch = -1;\n                        var_4h = 0xffffffff;\n                    }\n                    else {\n                        fcn.0007f916(&var_f8h, 0, 200);\n                        var_c8h = *var_ch;\n                        var_c4h = var_ch[1];\n                        var_b8h = var_ch[2];\n                        var_78h = var_ch[3];\n                        var_90h = 0x1004;\n                        var_c0h = var_ch[4];\n                        var_bch = var_ch[5];\n                        var_8ch._0_2_ = 1;\n                        var_1a4h = var_ch + 6;\n                        do {\n                            iVar1 = *var_1a4h;\n                            var_1a4h = var_1a4h + 2;\n                        } while (iVar1 != 0);\n                        var_1b0h._0_2_ = var_1a4h - (var_ch + 0x1a) >> 1;\n                        var_a0h._0_2_ = var_1b0h << 1;\n                        if (var_a0h < 2) {\n                            var_a0h._0_2_ = 2;\n                            *(var_ch + 6) = 0;\n                        }\n                        var_a0h._2_2_ = var_a0h + 2;\n                        var_1b4h = var_ch + 0x88;\n                        do {\n                            iVar1 = *var_1b4h;\n                            var_1b4h = var_1b4h + 2;\n                        } while (iVar1 != 0);\n                        var_1c0h._0_2_ = var_1b4h - (var_ch + 0x222) >> 1;\n                        var_b0h._0_2_ = var_1c0h << 1;\n                        if (var_b0h < 2) {\n                            var_b0h._0_2_ = 2;\n                            *(var_ch + 6) = 0;\n                        }\n                        var_b0h._2_2_ = var_b0h + 2;\n                        var_11ch = 0;\n                        unique0x00002880 = var_a0h._2_2_ + 200 + var_b0h._2_2_;\n                        var_2ch = fcn.0007f8c8(var_28h, &var_11ch, 0, &var_21h + 1, 0x3000, 4);\n                        if (var_2ch == 0) {\n                            var_1ch = var_11ch;\n                            var_98h = var_11ch + 200;\n                            var_94h = 0;\n                            var_2ch = fcn.0005e6c0(var_28h, var_98h, 0, var_ch + 6, var_a0h._2_2_);\n                            if (var_2ch == 0) {\n                                var_a8h = var_11ch + 200 + var_a0h._2_2_;\n                                var_a4h = 0;\n                                var_2ch = fcn.0005e6c0(var_28h, var_a8h, 0, var_ch + 0x88, var_b0h._2_2_);\n                                if (var_2ch == 0) {\n                                    var_60h = var_11ch + 0x98;\n                                    var_5ch = 0;\n                                    var_58h = var_11ch + 0x98;\n                                    var_54h = 0;\n                                    var_50h = var_11ch + 0xa8;\n                                    var_4ch = 0;\n                                    var_48h = var_11ch + 0xa8;\n                                    var_44h = 0;\n                                    var_40h = var_11ch + 0xb8;\n                                    var_3ch = 0;\n                                    var_38h = var_11ch + 0xb8;\n                                    var_34h = 0;\n                                    var_2ch = fcn.0005e6c0(var_28h, var_11ch, 0, &var_f8h, 200);\n                                    if (var_2ch == 0) {\n                                        fcn.0005be80(var_28h, var_120h + 0x10, var_11ch);\n                                        fcn.0005be80(var_28h, var_120h + 0x20, var_11ch + 0x10);\n                                        *var_10h = var_11ch;\ncode_r0x0005d1aa:\n                                        var_2ch = 0;\n                                        var_4h = 0xffffffff;\n                                    }\n                                    else {\n                                        var_4h = 0xffffffff;\n                                    }\n                                }\n                                else {\n                                    var_4h = 0xffffffff;\n                                }\n                            }\n                            else {\n                                var_4h = 0xffffffff;\n                            }\n                        }\n                        else {\n                            var_4h = 0xffffffff;\n                        }\n                    }\n                }\n                else {\n                    var_4h = 0xffffffff;\n                }\n            }\n        }\n    }\n    if ((var_2ch != 0) && (var_1ch != 0)) {\n        stack0xffffffdc = 0;\n        fcn.0007f8bc(var_28h, &var_1ch, &var_21h + 1, 0x8000);\n    }\n    if (var_28h != 0) {\n        fcn.0007f6c4(var_28h);\n    }\ncode_r0x0005d20c:\n    *in_FS_OFFSET = var_10h_2;\n    return var_2ch;\n}\n",
        "token_count": 3530
    },
    "0005d220": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.0005d220(uint param_1, uint *param_2)\n\n{\n    uint *in_FS_OFFSET;\n    uint var_18h;\n    uint var_8h;\n    uint *var_ch;\n    uint var_158h;\n    uint32_t var_124h;\n    uint var_f0h;\n    uint32_t var_88h;\n    int32_t var_24h;\n    int32_t var_20h;\n    uchar *var_19h;\n    uint var_10h;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x8507b9b8;\n    uStack16 = 0x8507b910;\n    var_10h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_10h;\n    *0x10 = &stack0xfffffe98;\n    var_20h = 0;\n    if (var_ch == NULL) {\n        var_24h = 0x21590066;\n        goto code_r0x0005d3fd;\n    }\n    var_24h = fcn.0005e810(&var_20h, 0x438, var_8h);\n    if ((var_24h == 0) && (var_24h = fcn.0005e580(var_20h, &var_19h),  var_24h == 0)) {\n        var_19h._0_1_ = '\\x01' - (var_19h != '\\0');\n        var_4h = 0;\n        if (var_19h == '\\0') {\n            var_24h = fcn.0005e680(var_20h, *var_ch, 0, &var_158h, 0x68);\n            if (var_24h == 0) {\n                var_124h = var_124h & 0xffffefff | 0xc4000;\n                var_24h = fcn.0005e6c0(var_20h, *var_ch, 0, &var_158h, 0x68);\n                if (var_24h == 0) goto code_r0x0005d3c4;\n                var_4h = 0xffffffff;\n            }\n            else {\n                var_4h = 0xffffffff;\n            }\n        }\n        else {\n            var_24h = fcn.0005e680(var_20h, *var_ch, 0, &var_f0h, 200);\n            if (var_24h == 0) {\n                var_88h = var_88h & 0xffffefff | 0xc4000;\n                var_24h = fcn.0005e6c0(var_20h, *var_ch, 0, &var_f0h, 200);\n                if (var_24h == 0) {\ncode_r0x0005d3c4:\n                    var_24h = 0;\n                    var_4h = 0xffffffff;\n                }\n                else {\n                    var_4h = 0xffffffff;\n                }\n            }\n            else {\n                var_4h = 0xffffffff;\n            }\n        }\n    }\n    if (var_20h != 0) {\n        fcn.0007f6c4(var_20h);\n    }\ncode_r0x0005d3fd:\n    *in_FS_OFFSET = var_10h;\n    return var_24h;\n}\n",
        "token_count": 792
    },
    "0005d410": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0005d410(uint param_1, int32_t param_2)\n\n{\n    uint *in_FS_OFFSET;\n    uint var_8h;\n    int32_t var_ch;\n    uint var_18h;\n    int32_t var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uchar *puStack28;\n    uint var_10h;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x8507bac8;\n    uStack16 = 0x8507b910;\n    var_10h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_10h;\n    puStack28 = &stack0xffffffc8;\n    if (var_ch == 0) {\n        var_28h = 0x21590066;\n    }\n    else {\n        var_28h = fcn.0005c090(var_8h, var_ch, &var_20h);\n        if ((var_28h == 0) && (var_28h = fcn.0005e810(&var_24h, 0x18, var_8h),  var_28h == 0)) {\n            var_4h = 0;\n            var_1ch = 0;\n            fcn.0007f8bc(var_24h, &var_20h, &var_1ch, 0x8000);\n            fcn.0007f6c4(var_24h);\n            var_28h = 0;\n        }\n    }\n    *in_FS_OFFSET = var_10h;\n    return var_28h;\n}\n",
        "token_count": 390
    },
    "0005d4f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0005d4f0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t arg_ch_00;\n    int32_t iVar1;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_ch_00 = fcn.00036330(0x20a);\n    if (arg_ch_00 == 0) {\n        var_4h = 0x21590004;\n    }\n    else {\n        iVar1 = fcn.0007f8aa(arg_ch_00, arg_ch, 0x104);\n        if (iVar1 == -1) {\n            var_4h = 0x21590004;\n        }\n        else {\n            *(arg_ch_00 + 0x104) = 0;\n            var_4h = fcn.0005d570(arg_8h, arg_ch_00, arg_10h);\n        }\n        fcn.00036460(arg_ch_00);\n    }\n    return var_4h;\n}\n",
        "token_count": 235
    },
    "0005d570": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.0005d570(uint arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    uint var_8h;\n    uint var_1h;\n    \n    if (arg_ch == 0) {\n        uVar1 = 0x21590066;\n    }\n    else {\n        uVar2 = fcn.0007f700(arg_ch, 0x5c);\n        if (uVar2 == 0) {\n            uVar2 = fcn.0007f700(arg_ch, 0x2f);\n        }\n        uVar1 = fcn.0005d5e0(arg_8h, arg_ch, uVar2 & 0xffffff00 | uVar2 != 0, 0, arg_10h);\n    }\n    return uVar1;\n}\n",
        "token_count": 212
    },
    "0005d5e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.0005d5e0(uint param_1, int16_t *param_2, char param_3, char param_4, int32_t *param_5)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint var_18h;\n    uint var_8h;\n    int16_t *var_ch;\n    uint var_10h;\n    uint var_14h;\n    int32_t *var_18h_2;\n    uint32_t var_24ch;\n    uint32_t var_248h;\n    uint var_244h;\n    uint var_23ch;\n    int16_t *var_238h;\n    uint var_234h;\n    int32_t var_230h;\n    uint var_22ch;\n    uint *var_228h;\n    uint var_224h;\n    int32_t var_210h;\n    uint var_200h;\n    int32_t var_1f4h;\n    uint var_1f0h;\n    int32_t var_1d8h;\n    uint var_1cch;\n    uint var_1c4h;\n    int32_t var_188h;\n    int32_t var_180h;\n    int32_t var_17ch;\n    int32_t var_178h;\n    uint *var_174h;\n    uint var_170h;\n    int32_t var_150h;\n    uint var_130h;\n    int32_t var_118h;\n    uint var_110h;\n    int32_t var_e0h;\n    uint var_c8h;\n    uint var_b8h;\n    int32_t var_48h;\n    uint32_t var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    uint var_2ch;\n    int32_t var_28h;\n    uint32_t var_24h;\n    char var_1eh;\n    char var_1dh;\n    int32_t var_1ch;\n    uchar *puStack28;\n    uint var_10h_2;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x8507ba68;\n    uStack16 = 0x8507b910;\n    var_10h_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_10h_2;\n    puStack28 = &stack0xfffffda4;\n    var_1ch = 0;\n    var_238h = var_ch;\n    do {\n        iVar1 = *var_238h;\n        var_238h = var_238h + 1;\n    } while (iVar1 != 0);\n    var_38h = (var_238h - (var_ch + 1) >> 1) << 1;\n    var_28h = 0;\n    if (var_ch == NULL) {\n        var_30h = 0x21590066;\n        goto code_r0x0005dcbb;\n    }\n    if (var_18h_2 == NULL) {\n        var_30h = 0x21590069;\n        goto code_r0x0005dcbb;\n    }\n    *var_18h_2 = 0;\n    var_1ch = fcn.00036330(0x20a);\n    if (var_1ch == 0) {\n        var_30h = 0x21590004;\n        goto code_r0x0005dcbb;\n    }\n    var_30h = fcn.0005e810(&var_28h, 0x438, var_8h);\n    if ((var_30h == 0) && (var_30h = fcn.0005e580(var_28h, &var_1dh),  var_30h == 0)) {\n        var_1dh = '\\x01' - (var_1dh != '\\0');\n        var_30h = fcn.0005e530(var_28h, &var_1eh);\n        if (var_30h == 0) {\n            if (var_14h == '\\0') {\n                var_30h = fcn.0005e170(var_28h, &var_34h);\n            }\n            else {\n                var_30h = fcn.0005e1b0(var_28h, &var_34h);\n            }\n            if (var_30h == 0) {\n                var_4h = 0;\n                if ((var_1dh == '\\0') && ((var_1eh == '\\0' || (var_14h == '\\0')))) {\n                    var_30h = fcn.0005e680(var_28h, var_34h, 0, &var_200h, 0x10);\n                    if (var_30h == 0) {\n                        if (var_1f4h == 0) {\n                            var_30h = -1;\n                            var_4h = 0xffffffff;\n                        }\n                        else {\n                            var_30h = fcn.0005e680(var_28h, var_1f4h, 0, &var_224h, 0x24);\n                            if (var_30h == 0) {\n                                if (var_10h == '\\0') {\n                                    var_228h = &var_1c4h;\n                                }\n                                else {\n                                    var_228h = &var_1cch;\n                                }\n                                var_230h = var_210h;\n                                while (var_230h != var_1f4h + 0x14) {\n                                    var_30h = fcn.0005e680(var_28h, var_230h, 0, &var_188h, 8);\n                                    if (var_30h != 0) {\n                                        var_4h = 0xffffffff;\n                                        goto code_r0x0005dc9d;\n                                    }\n                                    var_30h = fcn.0005e680(var_28h, var_230h + -8, 0, &var_1f0h, 0x48);\n                                    if (var_30h != 0) {\n                                        var_4h = 0xffffffff;\n                                        goto code_r0x0005dc9d;\n                                    }\n                                    if (var_38h == *var_228h) {\n                                        if (*var_228h >> 1 < 0x104) {\n                                            var_24ch = *var_228h >> 1;\n                                        }\n                                        else {\n                                            var_24ch = 0x104;\n                                        }\n                                        var_24h = var_24ch;\n                                        iVar2 = fcn.0005e680(var_28h, var_228h[1], 0, var_1ch, var_24ch << 1);\n                                        if (iVar2 == 0) {\n                                            *(var_1ch + var_24h * 2) = 0;\n                                            iVar2 = fcn.0007f6b8(var_1ch, var_ch, var_24h);\n                                            if (iVar2 == 0) {\n                                                var_30h = fcn.0005e680(var_28h, var_230h + 0x30, 0, &var_2ch, 2);\n                                                if (var_30h != 0) {\n                                                    var_4h = 0xffffffff;\n                                                    goto code_r0x0005dc9d;\n                                                }\n                                                if (var_2ch != -1) {\n                                                    var_2ch._0_2_ = var_2ch + 1;\n                                                    var_30h = fcn.0005e6c0(var_28h, var_230h + 0x30, 0, &var_2ch, 2);\n                                                    if (var_30h != 0) {\n                                                        var_4h = 0xffffffff;\n                                                        goto code_r0x0005dc9d;\n                                                    }\n                                                }\n                                                *var_18h_2 = var_1d8h;\n                                                break;\n                                            }\n                                        }\n                                    }\n                                    var_230h = var_188h;\n                                }\ncode_r0x0005dc65:\n                                var_30h = (-(*var_18h_2 != 0) & 0xdea6fffb) + 0x21590005;\n                                var_4h = 0xffffffff;\n                            }\n                            else {\n                                var_4h = 0xffffffff;\n                            }\n                        }\n                    }\n                    else {\n                        var_4h = 0xffffffff;\n                    }\n                }\n                else {\n                    var_30h = fcn.0005e680(var_28h, var_34h, 0, &var_130h, 0x20);\n                    if (var_30h == 0) {\n                        var_180h = var_118h;\n                        if (var_118h == 0) {\n                            var_30h = -1;\n                            var_4h = 0xffffffff;\n                        }\n                        else {\n                            var_30h = fcn.0005e680(var_28h, var_118h, 0, &var_170h, 0x40);\n                            if (var_30h == 0) {\n                                if (var_10h == '\\0') {\n                                    var_174h = &var_b8h;\n                                }\n                                else {\n                                    var_174h = &var_c8h;\n                                }\n                                var_17ch = var_150h;\n                                while (var_17ch != var_180h + 0x20) {\n                                    var_30h = fcn.0005e680(var_28h, var_17ch, 0, &var_48h, 0x10);\n                                    if (var_30h != 0) {\n                                        var_4h = 0xffffffff;\n                                        goto code_r0x0005dc9d;\n                                    }\n                                    var_178h = var_17ch + -0x10;\n                                    var_30h = fcn.0005e680(var_28h, var_178h, 0, &var_110h, 0x88);\n                                    if (var_30h != 0) {\n                                        var_4h = 0xffffffff;\n                                        goto code_r0x0005dc9d;\n                                    }\n                                    if (var_38h == *var_174h) {\n                                        if (*var_174h >> 1 < 0x104) {\n                                            var_248h = *var_174h >> 1;\n                                        }\n                                        else {\n                                            var_248h = 0x104;\n                                        }\n                                        var_24h = var_248h;\n                                        iVar2 = fcn.0005e680(var_28h, var_174h[2], var_174h[3], var_1ch, var_248h << 1);\n                                        if (iVar2 == 0) {\n                                            *(var_1ch + var_24h * 2) = 0;\n                                            iVar2 = fcn.0007f6b8(var_1ch, var_ch, var_24h);\n                                            if (iVar2 == 0) {\n                                                var_30h = fcn.0005e680(var_28h, var_178h + 0x6c, 0, &var_2ch, 2);\n                                                if (var_30h != 0) {\n                                                    var_4h = 0xffffffff;\n                                                    goto code_r0x0005dc9d;\n                                                }\n                                                if (var_2ch != -1) {\n                                                    var_2ch._0_2_ = var_2ch + 1;\n                                                    var_30h = fcn.0005e6c0(var_28h, var_178h + 0x6c, 0, &var_2ch, 2);\n                                                    if (var_30h != 0) {\n                                                        var_4h = 0xffffffff;\n                                                        goto code_r0x0005dc9d;\n                                                    }\n                                                }\n                                                *var_18h_2 = var_e0h;\n                                                break;\n                                            }\n                                        }\n                                    }\n                                    var_17ch = var_48h;\n                                }\n                                goto code_r0x0005dc65;\n                            }\n                            var_4h = 0xffffffff;\n                        }\n                    }\n                    else {\n                        var_4h = 0xffffffff;\n                    }\n                }\n            }\n        }\n    }\ncode_r0x0005dc9d:\n    if (var_28h != 0) {\n        fcn.0007f6c4(var_28h);\n    }\n    fcn.00036460(var_1ch);\ncode_r0x0005dcbb:\n    *in_FS_OFFSET = var_10h_2;\n    return var_30h;\n}\n",
        "token_count": 2840
    },
    "0005dcd0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.0005dcd0(uint param_1, int32_t param_2)\n\n{\n    uint *in_FS_OFFSET;\n    uint var_18h;\n    uint var_8h;\n    int32_t var_ch;\n    uint var_228h;\n    int32_t var_224h;\n    uint var_220h;\n    uint var_21ch;\n    int32_t var_208h;\n    uint var_1f8h;\n    int32_t var_1ech;\n    uint var_1e8h;\n    int32_t var_1d0h;\n    int32_t var_17ch;\n    int32_t var_174h;\n    int32_t var_170h;\n    int32_t var_16ch;\n    uint var_168h;\n    int32_t var_148h;\n    uint var_128h;\n    int32_t var_110h;\n    uint var_108h;\n    int32_t var_d8h;\n    int32_t var_40h;\n    uint var_2ch;\n    int32_t var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    uchar *var_19h;\n    uint var_10h;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x8507ba58;\n    uStack16 = 0x8507b910;\n    var_10h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_10h;\n    *0x10 = &stack0xfffffdc8;\n    var_20h = 0;\n    if (var_ch == 0) {\n        var_28h = 0x21590066;\n        goto code_r0x0005e15c;\n    }\n    var_28h = fcn.0005e810(&var_20h, 0x438, var_8h);\n    if ((var_28h == 0) && (var_28h = fcn.0005e580(var_20h, &var_19h),  var_28h == 0)) {\n        var_19h._0_1_ = '\\x01' - (var_19h != '\\0');\n        var_28h = fcn.0005e170(var_20h, &var_2ch);\n        if (var_28h == 0) {\n            var_4h = 0;\n            if (var_19h == '\\0') {\n                var_28h = fcn.0005e680(var_20h, var_2ch, 0, &var_1f8h, 0x10);\n                if (var_28h == 0) {\n                    if (var_1ech == 0) {\n                        var_28h = -1;\n                        var_4h = 0xffffffff;\n                    }\n                    else {\n                        var_28h = fcn.0005e680(var_20h, var_1ech, 0, &var_21ch, 0x24);\n                        if (var_28h == 0) {\n                            var_224h = var_208h;\n                            while (var_224h != var_1ech + 0x14) {\n                                var_28h = fcn.0005e680(var_20h, var_224h, 0, &var_17ch, 8);\n                                if (var_28h != 0) {\n                                    var_4h = 0xffffffff;\n                                    goto code_r0x0005e14a;\n                                }\n                                var_28h = fcn.0005e680(var_20h, var_224h + -8, 0, &var_1e8h, 0x48);\n                                if (var_28h != 0) {\n                                    var_4h = 0xffffffff;\n                                    goto code_r0x0005e14a;\n                                }\n                                if (var_1d0h == var_ch) {\n                                    var_28h = fcn.0005e680(var_20h, var_224h + 0x30, 0, &var_24h, 2);\n                                    if (var_28h != 0) {\n                                        var_4h = 0xffffffff;\n                                        goto code_r0x0005e14a;\n                                    }\n                                    if ((var_24h != 0) && (var_24h != -1)) {\n                                        var_24h._0_2_ = var_24h + -1;\n                                        var_28h = fcn.0005e6c0(var_20h, var_224h + 0x30, 0, &var_24h, 2);\n                                        if (var_28h != 0) {\n                                            var_4h = 0xffffffff;\n                                            goto code_r0x0005e14a;\n                                        }\n                                    }\n                                    var_28h = 0;\n                                    var_4h = 0xffffffff;\n                                    goto code_r0x0005e14a;\n                                }\n                                var_224h = var_17ch;\n                            }\n                            goto code_r0x0005e123;\n                        }\n                        var_4h = 0xffffffff;\n                    }\n                }\n                else {\n                    var_4h = 0xffffffff;\n                }\n            }\n            else {\n                var_28h = fcn.0005e680(var_20h, var_2ch, 0, &var_128h, 0x20);\n                if (var_28h == 0) {\n                    var_174h = var_110h;\n                    if (var_110h == 0) {\n                        var_28h = -1;\n                        var_4h = 0xffffffff;\n                    }\n                    else {\n                        var_28h = fcn.0005e680(var_20h, var_110h, 0, &var_168h, 0x40);\n                        if (var_28h == 0) {\n                            var_170h = var_148h;\n                            while (var_170h != var_174h + 0x20) {\n                                var_28h = fcn.0005e680(var_20h, var_170h, 0, &var_40h, 0x10);\n                                if (var_28h != 0) {\n                                    var_4h = 0xffffffff;\n                                    goto code_r0x0005e14a;\n                                }\n                                var_16ch = var_170h + -0x10;\n                                var_28h = fcn.0005e680(var_20h, var_16ch, 0, &var_108h, 0x88);\n                                if (var_28h != 0) {\n                                    var_4h = 0xffffffff;\n                                    goto code_r0x0005e14a;\n                                }\n                                if (var_d8h == var_ch) {\n                                    var_28h = fcn.0005e680(var_20h, var_16ch + 0x6c, 0, &var_24h, 2);\n                                    if (var_28h != 0) {\n                                        var_4h = 0xffffffff;\n                                        goto code_r0x0005e14a;\n                                    }\n                                    if ((var_24h != 0) && (var_24h != -1)) {\n                                        var_24h._0_2_ = var_24h + -1;\n                                        var_28h = fcn.0005e6c0(var_20h, var_16ch + 0x6c, 0, &var_24h, 2);\n                                        if (var_28h != 0) {\n                                            var_4h = 0xffffffff;\n                                            goto code_r0x0005e14a;\n                                        }\n                                    }\n                                    var_28h = 0;\n                                    var_4h = 0xffffffff;\n                                    goto code_r0x0005e14a;\n                                }\n                                var_170h = var_40h;\n                            }\ncode_r0x0005e123:\n                            var_28h = -1;\n                            var_4h = 0xffffffff;\n                        }\n                        else {\n                            var_4h = 0xffffffff;\n                        }\n                    }\n                }\n                else {\n                    var_4h = 0xffffffff;\n                }\n            }\n        }\n    }\ncode_r0x0005e14a:\n    if (var_20h != 0) {\n        fcn.0007f6c4(var_20h);\n    }\ncode_r0x0005e15c:\n    *in_FS_OFFSET = var_10h;\n    return var_28h;\n}\n",
        "token_count": 1926
    },
    "0005e170": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0005e170(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    uint var_1h;\n    \n    iVar1 = fcn.0005e530(arg_8h, &var_1h);\n    if (iVar1 == 0) {\n        iVar1 = fcn.0005e1d0(arg_8h, var_1h == '\\0', arg_ch);\n    }\n    return iVar1;\n}\n",
        "token_count": 141
    },
    "0005e1d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_3ch\n\nint32_t __cdecl fcn.0005e1d0(int32_t arg_8h, uint arg_ch, int32_t *arg_10h)\n\n{\n    int32_t iVar1;\n    uint var_40h;\n    uint32_t var_3ch;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_4h;\n    \n    if (arg_ch != '\\0') {\n        iVar1 = fcn.0007f75a(arg_8h, 0, &var_1ch, 0x18, 0);\n        if (iVar1 != 0) {\n            return iVar1;\n        }\n        *arg_10h = var_18h;\n        return (-(*arg_10h != 0) & 0xdea6fffb) + 0x21590005;\n    }\n    var_24h = 0;\n    var_20h = 0;\n    if (arg_8h == -1) {\n        var_24h = -2;\n    }\n    else {\n        var_4h = fcn.0005e300(arg_8h, 0x48, &var_24h);\n        if (var_4h != 0) goto code_r0x0005e2dd;\n    }\n    var_4h = fcn.00020640(var_24h, 0, &var_40h, 0x1c, 0);\n    if (var_4h == 0) {\n        if ((var_3ch == 0) || (var_3ch == 0xffffdfd0)) {\n            var_4h = 0x21590005;\n        }\n        else {\n            var_4h = fcn.0005e680(arg_8h, var_3ch + 0x2030, 0xffffdfcf < var_3ch, &var_20h, 4);\n            if (var_4h == 0) {\n                *arg_10h = var_20h;\n                var_4h = (-(*arg_10h != 0) & 0xdea6fffb) + 0x21590005;\n            }\n        }\n    }\ncode_r0x0005e2dd:\n    if (var_24h != 0) {\n        fcn.0007f6c4(var_24h);\n    }\n    return var_4h;\n}\n",
        "token_count": 586
    },
    "0005e300": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0005e300(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t *var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t *var_1ch;\n    uint var_18h;\n    int32_t var_8h;\n    \n    var_40h = NULL;\n    if (arg_10h == 0) {\n        var_24h = 0x21590065;\n    }\n    else {\n        iVar1 = fcn.0007f75a(arg_8h, 0, &var_18h, 0x18, 0);\n        if (iVar1 == 0) {\n            var_20h = var_8h;\n            var_24h = fcn.00035930(5, &var_40h);\n            if (var_24h == 0) {\n                if (var_40h == NULL) {\n                    var_24h = 0x21590005;\n                }\n                else {\n                    var_24h = 0x21590005;\n                    for (var_1ch = var_40h; var_1ch != NULL; var_1ch = var_1ch + *var_1ch) {\n                        if ((var_1ch[0x11] == var_20h) && (var_1ch[1] != 0)) {\n                            var_3ch = 0x18;\n                            var_38h = 0;\n                            var_30h = 0;\n                            var_34h = 0;\n                            var_2ch = 0;\n                            var_28h = 0;\n                            iVar1 = fcn.0007f8b0(arg_10h, arg_ch, &var_3ch, var_1ch + 0x36);\n                            if (iVar1 == 0) {\n                                var_24h = 0;\n                            }\n                            else {\n                                var_24h = 0x21590008;\n                            }\n                            break;\n                        }\n                        if (*var_1ch == 0) break;\n                    }\n                }\n            }\n        }\n        else {\n            var_24h = 0x21590008;\n        }\n        if (var_40h != NULL) {\n            fcn.00036460(var_40h);\n        }\n    }\n    return var_24h;\n}\n",
        "token_count": 584
    },
    "0005e430": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0005e430(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t var_10h;\n    int32_t *var_ch;\n    int32_t *var_8h;\n    uint32_t var_4h;\n    \n    var_8h = NULL;\n    if (arg_ch == NULL) {\n        var_10h = 0x21590067;\n    }\n    else {\n        var_10h = fcn.00035930(5, &var_8h);\n        if (var_10h == 0) {\n            var_ch = var_8h;\n            do {\n                if (var_ch[0x11] == arg_8h) break;\n                var_ch = var_ch + *var_ch;\n            } while (*var_ch != 0);\n            if ((var_ch[0x11] == arg_8h) && (var_ch[1] != 0)) {\n                for (var_4h = 0; var_4h < var_ch[1]; var_4h = var_4h + 1) {\n                    *arg_ch = var_ch[var_4h * 0x10 + 0x37];\n                    iVar1 = fcn.0005e660();\n                    if ((arg_8h != iVar1) || (iVar1 = fcn.0005e670(),  *arg_ch != iVar1)) break;\n                }\n                if (var_4h < var_ch[1]) {\n                    var_10h = 0;\n                }\n                else {\n                    var_10h = 0x21590005;\n                }\n            }\n            else {\n                var_10h = 0x21590005;\n            }\n        }\n        fcn.00036460(var_8h);\n    }\n    return var_10h;\n}\n",
        "token_count": 412
    },
    "0005e530": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0005e530(uint arg_8h, uchar *arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.0007f75a(arg_8h, 0x1a, &var_4h, 4, 0);\n    if (iVar1 == -0x3ffffffd) {\n        *arg_ch = 0;\n        iVar1 = 0;\n    }\n    else if (iVar1 == 0) {\n        *arg_ch = var_4h != 0;\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 154
    },
    "0005e580": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0005e580(int32_t arg_8h, uchar *arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    uint var_1h;\n    \n    if (arg_ch == NULL) {\n        iVar1 = 0x21590066;\n    }\n    else if (arg_8h == 0) {\n        *arg_ch = 1;\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = fcn.0005e530(arg_8h, &var_1h);\n        if (iVar1 == 0) {\n            if (var_1h == '\\0') {\n                iVar1 = fcn.0005e530(0xffffffff, &var_1h);\n                if (iVar1 == 0) {\n                    if (var_1h == '\\0') {\n                        *arg_ch = 1;\n                        iVar1 = 0;\n                    }\n                    else {\n                        *arg_ch = 0;\n                        iVar1 = 0;\n                    }\n                }\n            }\n            else {\n                *arg_ch = 1;\n                iVar1 = 0;\n            }\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 288
    },
    "0005e620": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0005e620(uint arg_8h, uint arg_ch)\n\n{\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_8h = fcn.0005e810(&var_4h, 0x400, arg_8h);\n    if (var_8h == 0) {\n        var_8h = fcn.0005e580(var_4h, arg_ch);\n    }\n    return var_8h;\n}\n",
        "token_count": 113
    },
    "0005e680": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0005e680(int32_t arg_8h, uint arg_ch, uint noname_2, uint arg_14h, uint arg_18h)\n\n{\n    uint uVar1;\n    \n    if (arg_8h == 0) {\n        fcn.0007f904(arg_14h, arg_ch, arg_18h);\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = fcn.000362d0(arg_8h, arg_ch, arg_14h, arg_18h, 0);\n    }\n    return uVar1;\n}\n",
        "token_count": 137
    },
    "0005e6c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0005e6c0(int32_t arg_8h, uint arg_ch, uint noname_2, uint arg_14h, uint arg_18h)\n\n{\n    uint uVar1;\n    \n    if (arg_8h == 0) {\n        fcn.0007f904(arg_ch, arg_14h, arg_18h);\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = fcn.00036300(arg_8h, arg_ch, arg_14h, arg_18h, 0);\n    }\n    return uVar1;\n}\n",
        "token_count": 138
    },
    "0005e700": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0005e700(int32_t arg_8h, int32_t *arg_ch, int32_t *arg_10h)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    if (arg_ch == NULL) {\n        iVar1 = 0x21590066;\n    }\n    else if ((arg_10h == NULL) || (*arg_10h == 0)) {\n        iVar1 = 0x21590067;\n    }\n    else if (arg_8h == 0) {\n        iVar1 = fcn.00036360(*arg_10h);\n        *arg_ch = iVar1;\n        iVar1 = (-(*arg_ch != 0) & 0xdea6fffc) + 0x21590004;\n    }\n    else {\n        iVar1 = fcn.0007f8c8(arg_8h, arg_ch, 0, arg_10h, 0x2000, 0x40);\n        if (iVar1 != 0) {\n            *arg_ch = 0;\n            iVar1 = fcn.0007f8c8(arg_8h, arg_ch, 0, arg_10h, 0x2000, 0x40);\n            if (iVar1 != 0) {\n                return iVar1;\n            }\n        }\n        iVar1 = fcn.0007f8c8(arg_8h, arg_ch, 0, arg_10h, 0x1000, 0x40);\n    }\n    return iVar1;\n}\n",
        "token_count": 346
    },
    "0005e7d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0005e7d0(int32_t arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint var_4h;\n    \n    if (arg_8h == 0) {\n        fcn.00036460(arg_ch);\n        uVar1 = 0;\n    }\n    else {\n        var_4h = 0;\n        uVar1 = fcn.0007f8bc(arg_8h, &arg_ch, &var_4h, 0x8000);\n    }\n    return uVar1;\n}\n",
        "token_count": 127
    },
    "0005e810": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0005e810(uint *arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    uint uVar1;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    if (arg_8h == NULL) {\n        uVar1 = 0x21590065;\n    }\n    else if (arg_10h == 0) {\n        *arg_8h = 0;\n        uVar1 = 0;\n    }\n    else {\n        var_20h = 0x18;\n        var_1ch = 0;\n        var_14h = 0x200;\n        var_18h = 0;\n        var_10h = 0;\n        var_ch = 0;\n        var_8h = arg_10h;\n        var_4h = 0;\n        uVar1 = fcn.0007f784(arg_8h, arg_ch, &var_20h, &var_8h);\n    }\n    return uVar1;\n}\n",
        "token_count": 279
    },
    "0005e8b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0005e8b0(int32_t arg_8h)\n\n{\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_1ch = fcn.0005e430(*(arg_8h + 0x17), arg_8h + 0x2f);\n    if (var_1ch == 0) {\n        var_18h = 0x18;\n        var_14h = 0;\n        var_ch = 0x200;\n        var_10h = 0;\n        var_8h = 0;\n        var_4h = 0;\n        var_1ch = fcn.0007f7c0(arg_8h + 0x43, 0x10000000, &var_18h, 0, 0);\n        if (var_1ch == 0) {\n            *(arg_8h + 0x53) = 0;\n            *(arg_8h + 0x57) = 0;\n            *(arg_8h + 0x5b) = 0;\n            *(arg_8h + 0x5f) = 0;\n        }\n    }\n    return var_1ch;\n}\n",
        "token_count": 311
    },
    "0005e950": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0005e950(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_30h;\n    int32_t var_2ch;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    var_8h = fcn.0001a390(*(arg_8h + 0x17), *(arg_8h + 0x2f), 0, 0, 0x8505ab00, arg_8h, 0);\n    if (var_8h == 0) {\n        var_10h = -150000000;\n        var_ch = 0xffffffff;\n        var_8h = fcn.0007f772(*(arg_8h + 0x43), 0, &var_10h);\n        if (var_8h == 0x102) {\n            fcn.00052470(arg_8h + 0x53, 1);\n            var_10h = 100;\n            while ((iVar1 = fcn.00045cc0(arg_8h + 0x5b, 0, 0),  iVar1 != 0 && (var_10h != 0))) {\n                fcn.0005bdd0(100);\n                var_10h = var_10h + -1;\n            }\n            if ((var_10h == 0) || (iVar1 = fcn.00045cc0(arg_8h + 0x53, 0, 0),  iVar1 != 0)) {\n                *(arg_8h + 0x2b) = 0;\n            }\n        }\n        else {\n            *(arg_8h + 0x2b) = 0;\n        }\n        if (var_8h == 0) {\n            while (iVar1 = fcn.00045cc0(arg_8h + 0x5b, 0, 0),  iVar1 != 0) {\n                fcn.0005bdd0(100);\n            }\n            if ((*(arg_8h + 0x4b) | *(arg_8h + 0x4f)) == 0) {\n                var_8h = -1;\n            }\n            else {\n                var_8h = fcn.0007f83e();\n                if ((var_8h == 0) && (var_8h = fcn.00020640(var_4h, 0, &var_2ch, 0x1c, 0),  var_8h == 0)) {\n                    if (var_2ch == 1) {\n                        var_8h = 0;\n                    }\n                    else {\n                        var_8h = -0x3fffffff;\n                    }\n                }\n            }\n        }\n    }\n    if (var_4h != 0) {\n        fcn.0007f6c4(var_4h);\n    }\n    fcn.0007f6c4(*(arg_8h + 0x43));\n    return var_8h;\n}\n",
        "token_count": 704
    },
    "0005eb00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0005eb00(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_8h != 0) {\n        fcn.00052470(arg_8h + 0x5b, 1);\n        iVar1 = fcn.00045cc0(arg_8h + 0x53, 0, 0);\n        if (iVar1 == 0) {\n            iVar1 = fcn.0005ee30(*(arg_8h + 0x17), arg_8h, arg_8h + 0x4b);\n            if (iVar1 == 0) {\n                var_8h = 0xf70f2e80;\n                var_4h = 0xffffffff;\n                iVar1 = fcn.0007f772(*(arg_8h + 0x4b), 0, &var_8h);\n                if (iVar1 != 0) {\n                    fcn.00020500(*(arg_8h + 0x4b), 0);\n                    fcn.0007f6c4(*(arg_8h + 0x4b));\n                    fcn.0005bdd0(500);\n                    *(arg_8h + 0x4b) = 0;\n                    *(arg_8h + 0x4f) = 0;\n                }\n            }\n            fcn.0007f6b2(*(arg_8h + 0x43), 0);\n            fcn.00052470(arg_8h + 0x5b, 0);\n        }\n        else {\n            fcn.00052470(arg_8h + 0x53, 0);\n            fcn.00052470(arg_8h + 0x5b, 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 424
    },
    "0005ebf0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0005ebf0(uint arg_8h, uint *arg_ch, uint32_t arg_10h, uint32_t arg_14h)\n\n{\n    uint uVar1;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    *arg_ch = 0;\n    arg_ch[1] = 0;\n    arg_ch[2] = 0;\n    arg_ch[3] = 0;\n    arg_ch[4] = 0;\n    if (arg_10h < 0x100000) {\n        var_18h = 0x100000;\n    }\n    else {\n        var_18h = arg_10h;\n    }\n    var_14h = var_18h;\n    arg_ch[4] = 0;\n    var_8h = fcn.0007f8c8(arg_8h, arg_ch + 4, 0, &var_14h, 0x2000, 4);\n    if (var_8h == 0) {\n        arg_ch[2] = arg_ch[4] + var_14h;\n        if (arg_14h < 0x2000) {\n            var_1ch = 0x2000;\n        }\n        else {\n            var_1ch = arg_14h + 0x1000;\n        }\n        var_ch = var_1ch;\n        if (var_14h <= var_1ch) {\n            var_ch = var_14h - 0x1000;\n        }\n        arg_ch[3] = arg_ch[2] - var_ch;\n        var_8h = fcn.0007f8c8(arg_8h, arg_ch + 3, 0, &var_ch, 0x1000, 4);\n        if (var_8h == 0) {\n            var_ch = 0x1000;\n            var_10h = arg_ch[3];\n            var_8h = fcn.0001fe90(arg_8h, &var_10h, &var_ch, 0x104, &var_4h);\n        }\n    }\n    if (var_8h == 0) {\n        uVar1 = 0;\n    }\n    else {\n        var_ch = 0;\n        fcn.0007f8bc(arg_8h, arg_ch + 4, &var_ch, 0x8000);\n        uVar1 = fcn.0007f742(var_8h);\n    }\n    return uVar1;\n}\n",
        "token_count": 605
    },
    "0005ed40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0005ed40(uint arg_8h, uint *arg_ch, int32_t arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t var_4h;\n    \n    fcn.0007f916(arg_ch, 0, 0x2cc);\n    *arg_ch = 0x10007;\n    arg_ch[0x23] = 0;\n    arg_ch[0x24] = 0x38;\n    arg_ch[0x25] = 0x20;\n    arg_ch[0x26] = 0x20;\n    arg_ch[0x32] = 0x20;\n    arg_ch[0x2f] = 0x18;\n    arg_ch[0x30] = 0x3000;\n    arg_ch[0x31] = arg_10h + -4;\n    var_4h = fcn.0005e6c0(arg_8h, arg_ch[0x31], 0, &arg_18h, 4);\n    if (var_4h == 0) {\n        arg_ch[0x31] = arg_ch[0x31] + -4;\n        arg_ch[0x2e] = arg_14h;\n        var_4h = 0;\n    }\n    return var_4h;\n}\n",
        "token_count": 306
    },
    "0005ee30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0005ee99)\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0005ee30(uint noname_0, int32_t arg_ch, uint *arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t var_8ch;\n    int32_t var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_64h;\n    int32_t var_60h;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_49h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_20h;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    var_8ch = 0;\n    var_4h = 0;\n    var_ch = 0;\n    var_84h = 0;\n    var_18h = 0;\n    var_88h = fcn.0005e580(0xffffffff, &var_49h);\n    if ((var_88h == 0) && (var_88h = fcn.0005ebf0(0xffffffff, &var_28h, 0, 0),  var_88h == 0)) {\n        var_4h = fcn.00036330(0x500);\n        if (var_4h == 0) {\n            var_88h = 0x21590004;\n        }\n        else {\n            var_88h = fcn.0005ed40(0xffffffff, var_4h, var_20h, *(arg_ch + 0x23), *(arg_ch + 0x33));\n            if (var_88h == 0) {\n                var_44h = 0x18;\n                var_40h = 0;\n                var_38h = 0;\n                var_3ch = 0;\n                var_34h = 0;\n                var_30h = 0;\n                var_88h = fcn.00020020(&var_8h, 0x1f03ff, &var_44h, 0xffffffff, &var_14h, var_4h, &var_28h, 1);\n                if (((var_88h == 0) && (var_88h = fcn.00035ba0(var_8h, &var_8ch),  var_88h == 0)) &&\n                   (var_88h = fcn.0005f110(&var_ch),  var_88h == 0)) {\n                    iVar1 = fcn.00035ba0(var_ch, &var_84h);\n                    if (iVar1 != 0) {\n                        var_84h = var_ch;\n                    }\n                    fcn.0007f916(&var_80h, 0, 0x34);\n                    var_80h._2_2_ = 0x34;\n                    var_80h._0_2_ = 0x1c;\n                    var_64h = 0x10001;\n                    var_54h = var_14h;\n                    var_50h = var_10h;\n                    var_58h = var_8h;\n                    var_88h = fcn.0007f8b6(var_84h, &var_80h, &var_80h);\n                    if (var_88h == 0) {\n                        if (var_60h == 0) {\n                            var_2ch = 0x1f;\n                            fcn.0007f8c2(var_8ch, 2, &var_2ch, 4);\n                            var_88h = fcn.0001ffd0(var_8ch, 0);\n                        }\n                        else {\n                            var_88h = var_60h;\n                        }\n                    }\n                }\n            }\n        }\n    }\n    fcn.00035bf0(var_ch, var_84h);\n    fcn.00036460(var_4h);\n    if (var_88h == 0) {\n        if (arg_10h != NULL) {\n            *arg_10h = var_8h;\n        }\n    }\n    else {\n        if (var_8ch != 0) {\n            fcn.00020500(var_8ch, 0);\n            fcn.0007f6c4(var_8h);\n            fcn.0005bdd0(500);\n        }\n        if (var_18h != 0) {\n            stack0xffffffb4 = 0;\n            fcn.0007f8bc(0xffffffff, &var_18h, &var_49h + 1, 0x8000);\n        }\n    }\n    fcn.00035bf0(var_8h, var_8ch);\n    return var_88h;\n}\n",
        "token_count": 1163
    },
    "0005f110": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0005f110(uint *arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t var_284h;\n    uint32_t var_280h;\n    int32_t var_27ch;\n    int32_t var_278h;\n    int32_t var_274h;\n    uint var_270h;\n    uint var_269h;\n    int32_t var_1cch;\n    int32_t var_1c8h;\n    uint *var_1c0h;\n    uint var_ch;\n    char var_5h;\n    uint var_4h;\n    \n    var_4h = 0;\n    var_270h = 0;\n    var_280h = 0;\n    var_274h = 0;\n    var_269h._0_1_ = '\\0';\n    var_5h = '\\0';\n    if (arg_8h == NULL) {\n        var_27ch = 0x21590066;\n    }\n    else {\n        uVar1 = fcn.0005e660(0x85011808, 0, 1, &var_ch);\n        var_27ch = fcn.0005d5e0(uVar1);\n        if ((var_27ch == 0) && (var_27ch = fcn.00060f50(var_ch, 0x8501181c, &var_284h),  var_27ch == 0)) {\n            fcn.000655a0(&var_269h + 1);\n            fcn.00065640(&var_269h + 1, 0x20);\n            var_280h = var_284h;\n            var_278h = 0x1000 - (var_284h & 0xfff);\n            iVar2 = fcn.0001a9d0(var_284h, var_278h, 0, &var_4h);\n            if (iVar2 == 0) {\n                var_269h._0_1_ = '\\x01';\n                var_274h = (var_280h & 0xfffff000) + 0x1000;\n                iVar2 = fcn.0001a9d0(var_274h, 0x1000, 0, &var_270h);\n                if (iVar2 == 0) {\n                    var_5h = '\\x01';\n                    var_278h = var_278h + 0x1000;\n                }\n                fcn.000651e0(&var_269h + 1, var_284h, var_278h);\n                do {\n                    iVar2 = fcn.000655e0(&var_269h + 1);\n                    if (iVar2 == 0) goto code_r0x0005f2ea;\n                    if (var_1cch == 0x1be) {\n                        var_27ch = -1;\n                        goto code_r0x0005f2ea;\n                    }\n                } while ((var_1cch != 0x1ad) || (var_1c8h != 0x8d));\n                *arg_8h = *var_1c0h;\n                var_27ch = 0;\ncode_r0x0005f2ea:\n                fcn.00066020(1);\n            }\n            else {\n                var_27ch = -1;\n            }\n        }\n        if (var_5h != '\\0') {\n            fcn.0001aab0(var_274h, var_270h);\n        }\n        if (var_269h != '\\0') {\n            fcn.0001aab0(var_280h, var_4h);\n        }\n    }\n    return var_27ch;\n}\n",
        "token_count": 843
    },
    "0005f340": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0005f340(int32_t arg_8h)\n\n{\n    int32_t var_60h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint *var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint *var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    var_4h = 0;\n    var_ch = 0;\n    var_10h = 0;\n    var_44h = 0x24;\n    var_40h = 0x10003;\n    var_3ch = 8;\n    var_38h = &var_8h;\n    var_34h = 0;\n    var_30h = 0x10004;\n    var_2ch = 4;\n    var_28h = &var_ch;\n    var_24h = 0;\n    var_14h = fcn.00020230(arg_8h + 0x4b, 0x1fffff, 0, *(arg_8h + 0x1b), *(arg_8h + 0x23), *(arg_8h + 0x33), 0, 0, 0, 0\n                           , &var_44h);\n    if (var_14h == 0) {\n        var_14h = fcn.00035ba0(*(arg_8h + 0x4b), &var_10h);\n        if (var_14h == 0) {\n            var_20h = 0xf70f2e80;\n            var_1ch = 0xffffffff;\n            var_14h = fcn.0007f772(var_10h, 0, &var_20h);\n            if ((var_14h == 0) && (var_14h = fcn.00020640(var_10h, 0, &var_60h, 0x1c, 0),  var_14h == 0)) {\n                if (var_60h == 1) {\n                    var_14h = 0;\n                }\n                else {\n                    var_14h = -0x3fffffff;\n                }\n            }\n        }\n        if (var_14h != 0) {\n            fcn.00020500(var_10h, 0);\n        }\n        fcn.0007f6c4(*(arg_8h + 0x4b));\n        fcn.00035bf0(*(arg_8h + 0x4b), var_10h);\n    }\n    return var_14h;\n}\n",
        "token_count": 654
    },
    "0005f4a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0005f4a0(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t var_4h;\n    \n    *(arg_8h + 0x77) = 1;\n    var_4h = fcn.00061590(*(arg_8h + 0x17), *(arg_8h + 0xf), 0x8500d9b0, arg_8h + 0x97);\n    if (var_4h == 0) {\n        iVar1 = fcn.00035da0();\n        if (iVar1 < 0x1b) {\n            var_4h = fcn.0005e8b0(arg_8h);\n        }\n        else {\n            var_4h = fcn.00066020(arg_8h);\n        }\n        if (var_4h == 0) {\n            *(arg_8h + 0x4b) = 0;\n            *(arg_8h + 0x4f) = 0;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 249
    },
    "0005f530": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0005f530(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.00035da0();\n    if (iVar1 < 0x1b) {\n        var_4h = fcn.0005e950(arg_8h);\n    }\n    else {\n        var_4h = fcn.0005f340(arg_8h);\n    }\n    return var_4h;\n}\n",
        "token_count": 109
    },
    "0005f570": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0005f570(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    int32_t var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_91h;\n    uint var_45h;\n    uint var_41h;\n    uint var_3dh;\n    uint var_39h;\n    uint var_35h;\n    \n    var_a8h = 0;\n    var_a4h = 0;\n    fcn.0007f916(&var_a0h, 0, 0x9f);\n    if (arg_ch == 0) {\n        uVar1 = 0x21590066;\n    }\n    else {\n        var_45h = 0;\n        var_41h = arg_10h;\n        var_3dh = 0;\n        var_39h = arg_14h;\n        var_35h = 0;\n        var_a8h = arg_ch;\n        var_a4h = 0;\n        var_91h = arg_8h;\n        uVar1 = fcn.0005f6a0(&var_a8h);\n    }\n    return uVar1;\n}\n",
        "token_count": 283
    },
    "0005f600": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0005f600(uint arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    int32_t var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_91h;\n    uint var_45h;\n    int32_t var_41h;\n    uint var_3dh;\n    uint var_39h;\n    \n    var_a8h = 0;\n    var_a4h = 0;\n    fcn.0007f916(&var_a0h, 0, 0x9f);\n    if (arg_ch == 0) {\n        uVar1 = 0x21590066;\n    }\n    else if (arg_10h == 0) {\n        uVar1 = 0x21590067;\n    }\n    else {\n        var_45h = 1;\n        var_41h = arg_10h;\n        var_3dh = 0;\n        var_39h = arg_14h;\n        var_a8h = arg_ch;\n        var_a4h = 0;\n        var_91h = arg_8h;\n        uVar1 = fcn.0005f6a0(&var_a8h);\n    }\n    return uVar1;\n}\n",
        "token_count": 298
    },
    "0005f6a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0005f6a0(code **arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    if ((*(arg_8h + 0x17) == 0) ||\n       ((iVar1 = fcn.0005d570(*(arg_8h + 0x17), 0x85011808, arg_8h + 0xf),  iVar1 == 0 &&\n        (((*(arg_8h + 99) == 0 || (*(arg_8h + 0x6f) != 0)) ||\n         (iVar1 = fcn.00061590(*(arg_8h + 0x17), *(arg_8h + 0xf), 0x85011830, arg_8h + 0x9f),  iVar1 == 0)))))) {\n        if (*(arg_8h + 0x17) == 0) {\n            if (*(arg_8h + 99) == 0) {\n                iVar1 = (**arg_8h)(*(arg_8h + 0x67), *(arg_8h + 0x6f));\n            }\n            else {\n                iVar1 = (**arg_8h)(*(arg_8h + 0x67), *(arg_8h + 0x6f), 0);\n                iVar1 = (iVar1 != 0) - 1;\n            }\n        }\n        else {\n            iVar1 = fcn.0005f790(arg_8h);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 350
    },
    "0005f790": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0005f790(int32_t arg_8h)\n\n{\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    char var_dh;\n    uint32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = 0;\n    var_18h = fcn.0005e810(&var_14h, 0x47a, *(arg_8h + 0x17));\n    if ((var_18h == 0) && (var_18h = fcn.0005e580(var_14h, &var_dh),  var_18h == 0)) {\n        *(arg_8h + 0xc) = var_dh;\n        *(arg_8h + 0x1b) = var_14h;\n        *(arg_8h + 0x1f) = 0;\n        *(arg_8h + 0x2b) = 1;\n        if (var_dh == '\\0') {\n            var_18h = 0x21590064;\n        }\n        else {\n            var_4h = 0x8508dc18;\n            var_8h = 0x24c;\n            var_18h = fcn.0005e700(var_14h, &var_ch, &var_8h);\n            if ((var_18h == 0) && (var_18h = fcn.0005e6c0(var_14h, var_ch, 0, var_4h, 0xfe),  var_18h == 0)) {\n                *(arg_8h + 0x23) = var_ch;\n                *(arg_8h + 0x27) = 0;\n                var_18h = fcn.0005f4a0(arg_8h);\n                if ((var_18h == 0) &&\n                   (var_18h = fcn.0005e6c0(var_14h, var_ch + 0x1a5, (0xffffff01 < var_ch) + (0xffffff58 < var_ch + 0xfe)\n                                           , arg_8h, 0xa7),  var_18h == 0)) {\n                    *(arg_8h + 0x33) = var_ch + 0x1a5;\n                    *(arg_8h + 0x37) = 0;\n                    var_18h = fcn.0005f530(arg_8h);\n                }\n            }\n        }\n    }\n    if ((var_ch != 0) && (*(arg_8h + 0x2b) != 0)) {\n        var_8h = 0;\n        fcn.0007f8bc(var_14h, &var_ch, &var_8h, 0x8000);\n    }\n    fcn.0007f6c4(var_14h);\n    return var_18h;\n}\n",
        "token_count": 664
    },
    "0005f970": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Switch with 1 destination removed at 0x0005fa90\n\nuint __cdecl fcn.0005f970(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_2ch;\n    int32_t var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint32_t var_ch;\n    uint var_4h;\n    \n    iVar3 = arg_8h + *(arg_8h + 0x3c);\n    if (*(iVar3 + 0x18) == 0x10b) {\n        var_24h = *(iVar3 + 0xa0);\n        iVar1 = *(iVar3 + 0x34);\n        var_ch = *(iVar3 + 0x70);\n    }\n    else {\n        var_24h = *(iVar3 + 0xb0);\n        iVar1 = *(iVar3 + 0x30);\n        var_ch = *(iVar3 + 0x80);\n    }\n    if (arg_ch == iVar1) {\n        uVar2 = 0;\n    }\n    else if (var_24h == 0) {\n        if ((var_ch & 1) == 0) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = 0xffffffff;\n        }\n    }\n    else {\n        for (; var_2ch = arg_8h + var_24h,  *(var_2ch + 4) != 0; var_24h = var_24h + *(var_2ch + 4)) {\n            if ((*(var_2ch + 4) - 8U >> 1 & 0xffff) != 0) {\n                if (10 < *(var_24h + 8 + arg_8h) >> 0xc) {\n                    return 0x21590064;\n                }\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n        }\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 518
    },
    "0005fb80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_50h\n// WARNING: Variable defined which should be unmapped: var_4ch\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Variable defined which should be unmapped: var_44h\n\nint32_t __cdecl fcn.0005fb80(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t arg_14h;\n    int32_t iVar3;\n    int32_t arg_14h_00;\n    uint var_50h;\n    uint var_4ch;\n    uint32_t var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint *var_38h;\n    int32_t var_34h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_28h;\n    uint32_t var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint32_t var_10h;\n    int32_t *var_ch;\n    uint32_t *var_8h;\n    int32_t var_4h;\n    \n    var_14h = 0;\n    var_20h = 0;\n    var_2ch = 0;\n    var_4h = 0;\n    var_28h = 0;\n    arg_14h = fcn.00036330(0x148);\n    if (arg_14h == 0) {\n        var_34h = 0x21590004;\n    }\n    else {\n        arg_14h_00 = arg_14h + 0x40;\n        var_34h = fcn.0005e810(&var_2ch, 0x10, arg_8h);\n        if (var_34h == 0) {\n            var_18h = arg_ch + arg_ch[0xf];\n            if (*(var_18h + 0x18) == 0x10b) {\n                var_14h = var_18h;\n            }\n            if (*(var_18h + 0x18) != 0x10b) {\n                return 0x21590001;\n            }\n            if (var_14h == 0) {\n                iVar3 = *(var_18h + 0x80);\n                var_48h = 0;\n            }\n            else {\n                iVar3 = *(var_18h + 0x80);\n                var_48h = 0x80000000;\n            }\n            var_ch = arg_ch + iVar3;\n            if (var_ch == arg_ch) {\n                var_34h = 0;\n            }\n            else {\n                for (; var_ch[3] != 0; var_ch = var_ch + 5) {\n                    iVar3 = fcn.00018d00(&var_28h, var_4h << 2, var_4h * 4 + 4);\n                    if (iVar3 != 0) {\n                        var_34h = 0x21590004;\n                        goto code_r0x0005ff31;\n                    }\n                    if (arg_8h == 0) {\n                        var_34h = fcn.00035b80(arg_ch + var_ch[3], var_28h + var_4h * 4);\n                    }\n                    else {\n                        var_34h = fcn.00061ca0(arg_8h, arg_ch + var_ch[3], var_28h + var_4h * 4);\n                    }\n                    if (var_34h != 0) goto code_r0x0005ff31;\n                    var_4h = var_4h + 1;\n                    var_34h = fcn.0005e680(var_2ch, *(var_28h + -4 + var_4h * 4), 0, arg_14h, 0x40);\n                    if (var_34h != 0) goto code_r0x0005ff31;\n                    uVar1 = *(var_28h + -4 + var_4h * 4);\n                    uVar2 = *(arg_14h + 0x3c);\n                    var_34h = fcn.0005e680(var_2ch, uVar1 + uVar2, (uVar2 >> 0x1f) + CARRY4(uVar1, uVar2), arg_14h_00, \n                                           0xf8);\n                    if (var_34h != 0) goto code_r0x0005ff31;\n                    if (*(arg_14h + 0x58) != 0x10b) {\n                        uVar1 = *(var_28h + -4 + var_4h * 4);\n                        uVar2 = *(arg_14h + 0x3c);\n                        var_34h = fcn.0005e680(var_2ch, uVar1 + uVar2, (uVar2 >> 0x1f) + CARRY4(uVar1, uVar2), \n                                               arg_14h_00, 0x108);\n                        if (var_34h != 0) goto code_r0x0005ff31;\n                    }\n                    var_38h = arg_ch + var_ch[4];\n                    if (*var_ch == 0) {\n                        iVar3 = var_ch[4];\n                    }\n                    else {\n                        iVar3 = *var_ch;\n                    }\n                    var_8h = arg_ch + iVar3;\n                    if (var_14h == 0) {\n                        var_24h = *var_8h;\n                    }\n                    else {\n                        var_24h = *var_8h;\n                    }\n                    while (var_24h != 0) {\n                        if ((var_24h & var_48h) == 0) {\n                            var_10h = arg_ch + var_24h + 2;\n                        }\n                        else {\n                            var_10h = var_24h & 0xffff;\n                        }\n                        if (arg_8h == 0) {\n                            var_34h = fcn.00060f50(*(var_28h + -4 + var_4h * 4), var_10h, &var_20h);\n                        }\n                        else {\n                            var_34h = fcn.00060300(var_2ch, arg_14h_00, *(var_28h + -4 + var_4h * 4), arg_8h, \n                                                   *(var_28h + -4 + var_4h * 4), var_2ch, &var_20h, &var_1ch);\n                        }\n                        if (var_34h != 0) goto code_r0x0005ff31;\n                        if (var_14h == 0) {\n                            *var_38h = var_20h;\n                            var_24h = var_8h[1];\n                        }\n                        else {\n                            *var_38h = var_20h;\n                            var_24h = var_8h[1];\n                        }\n                        var_8h = var_8h + 1;\n                        var_38h = var_38h + 1;\n                    }\n                }\n                var_34h = 0;\n            }\n        }\ncode_r0x0005ff31:\n        fcn.0005e890(var_2ch);\n        if (((var_34h != 0) && (var_28h != 0)) && (arg_8h != 0)) {\n            for (; var_4h != 0; var_4h = var_4h + -1) {\n                fcn.00062380(arg_8h, *(var_28h + -4 + var_4h * 4), 1);\n            }\n        }\n        fcn.00036460(var_28h);\n        fcn.00036460(arg_14h);\n    }\n    return var_34h;\n}\n",
        "token_count": 1792
    },
    "00060080": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00060080(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    iVar2 = arg_ch + *(arg_ch + 0x3c);\n    if (*(iVar2 + 0x18) == 0x10b) {\n        var_ch = *(iVar2 + 0x38);\n        var_14h = *(iVar2 + 0x54);\n    }\n    else {\n        var_ch = *(iVar2 + 0x38);\n        var_14h = *(iVar2 + 0x54);\n    }\n    fcn.00035fb0(arg_8h, arg_ch, var_14h);\n    var_8h = iVar2 + 0x18 + *(iVar2 + 0x14);\n    for (var_4h = 0; var_4h < *(iVar2 + 6); var_4h = var_4h + 1) {\n        if (*(var_8h + 0x10) != 0) {\n            iVar1 = fcn.0005f930(*(var_8h + 0xc), var_ch);\n            fcn.00035fb0(arg_8h + iVar1, arg_ch + *(var_8h + 0x14), *(var_8h + 0x10));\n        }\n        var_8h = var_8h + 0x28;\n    }\n    return 0;\n}\n",
        "token_count": 380
    },
    "00060160": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00060160(int32_t arg_8h, uint arg_ch, uint32_t *arg_10h, int32_t *arg_14h, int32_t *arg_18h, uint *arg_1ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    iVar3 = arg_8h + *(arg_8h + 0x3c);\n    if (*(iVar3 + 0x18) == 0x10b) {\n        var_10h = *(iVar3 + 0x38);\n        var_18h = *(iVar3 + 0x54);\n    }\n    else {\n        var_10h = *(iVar3 + 0x38);\n        var_18h = *(iVar3 + 0x54);\n    }\n    var_18h = fcn.0005f930(var_18h, var_10h);\n    var_8h = iVar3 + 0x18 + *(iVar3 + 0x14);\n    var_4h = 0;\n    while( true ) {\n        if (*(iVar3 + 6) <= var_4h) {\n            return 0x21590005;\n        }\n        iVar1 = fcn.0007f8a4(var_8h, arg_ch, 8);\n        if (iVar1 == 0) break;\n        iVar1 = fcn.0005f930(*(var_8h + 8), var_10h);\n        var_18h = iVar1 + var_18h;\n        var_8h = var_8h + 0x28;\n        var_4h = var_4h + 1;\n    }\n    if (arg_10h != NULL) {\n        *arg_10h = var_4h;\n    }\n    if (arg_14h != NULL) {\n        *arg_14h = var_8h;\n    }\n    if (arg_18h != NULL) {\n        *arg_18h = arg_8h + var_18h;\n    }\n    if (arg_1ch != NULL) {\n        uVar2 = fcn.0005f930(*(var_8h + 8), var_10h);\n        *arg_1ch = uVar2;\n    }\n    return 0;\n}\n",
        "token_count": 561
    },
    "00060280": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00060280(int16_t *arg_8h, uint32_t arg_ch)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    if ((arg_ch != 0) && (arg_ch < 0x40)) {\n        return 0x21590065;\n    }\n    if (*arg_8h == 0x5a4d) {\n        if ((arg_ch != 0) && (arg_ch < *(arg_8h + 0x1e) + 0xf8U)) {\n            return 0x21590065;\n        }\n        if (*(arg_8h + *(arg_8h + 0x1e)) == 0x4550) {\n            return 0;\n        }\n    }\n    return 0x21590065;\n}\n",
        "token_count": 181
    },
    "00060300": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl\nfcn.00060300(uint arg_8h, int32_t arg_ch, uint32_t arg_10h, uint arg_14h, uint noname_4, int32_t *arg_1ch, \n            int32_t *arg_20h, uint32_t *arg_24h)\n\n{\n    uint8_t uVar1;\n    int32_t var_a0h;\n    uint var_9ch;\n    int32_t var_98h;\n    int32_t var_94h;\n    int32_t *var_90h;\n    int32_t *var_8ch;\n    uint32_t var_88h;\n    uint32_t var_84h;\n    uint var_80h;\n    uint var_78h;\n    int32_t *var_74h;\n    uint var_70h;\n    uint var_68h;\n    int32_t *var_64h;\n    int32_t var_60h;\n    uint var_5ch;\n    int32_t var_58h;\n    uint32_t *var_54h;\n    int32_t var_50h;\n    int32_t var_4ch;\n    uint32_t var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    uint32_t var_3ch;\n    uint32_t var_38h;\n    int32_t *var_34h;\n    uint var_30h;\n    uint var_20h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_34h = NULL;\n    if ((((arg_20h == NULL) || (arg_ch == 0)) || (arg_10h == 0)) || (arg_24h == NULL)) {\n        var_58h = 0x21590008;\n    }\n    else {\n        *arg_24h = arg_10h;\n        if (*(arg_ch + 0x18) == 0x10b) {\n            var_54h = arg_ch + 0x78;\n        }\n        else {\n            var_54h = arg_ch + 0x88;\n        }\n        if (*var_54h == 0) {\n            var_58h = 0x21590005;\n        }\n        else {\n            var_4ch = *var_54h + var_54h[1];\n            var_4h = arg_10h + *var_54h;\n            var_58h = fcn.0005e680(arg_8h, var_4h, 0, &var_30h, 0x28);\n            if (var_58h == 0) {\n                var_44h = arg_10h + var_14h;\n                var_50h = arg_10h + var_ch;\n                var_40h = arg_10h + var_10h;\n                var_34h = fcn.00036330(0x104);\n                if (var_34h == NULL) {\n                    var_58h = 0x21590004;\n                }\n                else if ((arg_1ch & 0xffff0000) == 0) {\n                    var_5ch._0_2_ = arg_1ch - var_20h;\n                    if (var_1ch < var_5ch) {\n                        var_58h = 0x21590005;\n                    }\n                    else {\n                        var_58h = fcn.0005e680(arg_8h, var_44h + var_5ch * 4, 0, &var_48h, 4);\n                        if (var_58h == 0) {\n                            if ((var_48h < *var_54h) || (*var_54h + var_54h[1] <= var_48h)) {\n                                *arg_20h = arg_10h + var_48h;\n                                var_58h = 0;\n                            }\n                            else {\n                                if (var_4ch - var_48h < 0x105) {\n                                    var_60h = var_4ch - var_48h;\n                                }\n                                else {\n                                    var_60h = 0x104;\n                                }\n                                var_58h = fcn.0005e680(arg_8h, arg_10h + var_48h, CARRY4(arg_10h, var_48h), var_34h, \n                                                       var_60h);\n                                if (var_58h == 0) {\n                                    var_58h = fcn.000608a0(arg_14h, arg_10h, var_34h, arg_20h, arg_24h);\n                                }\n                            }\n                        }\n                    }\n                }\n                else {\n                    var_64h = arg_1ch;\n                    do {\n                        uVar1 = *var_64h;\n                        var_64h = var_64h + 1;\n                    } while (uVar1 != 0);\n                    if (var_64h - (arg_1ch + 1) < 0x103) {\n                        var_74h = arg_1ch;\n                        do {\n                            uVar1 = *var_74h;\n                            var_74h = var_74h + 1;\n                        } while (uVar1 != 0);\n                        var_84h = var_74h - (arg_1ch + 1);\n                    }\n                    else {\n                        var_84h = 0x103;\n                    }\n                    var_8h = var_84h;\n                    var_58h = -1;\n                    for (var_3ch = 0; var_3ch < var_18h; var_3ch = var_3ch + 1) {\n                        var_58h = fcn.0005e680(arg_8h, var_50h + var_3ch * 2, 0, &var_5ch, 2);\n                        if (((var_58h != 0) ||\n                            (var_58h = fcn.0005e680(arg_8h, var_44h + var_5ch * 4, 0, &var_48h, 4),  var_58h != 0)) ||\n                           (var_58h = fcn.0005e680(arg_8h, var_40h + var_3ch * 4, 0, &var_38h, 4),  var_58h != 0))\n                        goto code_r0x0006087c;\n                        if (var_8h < var_4ch - var_38h) {\n                            var_58h = fcn.0005e680(arg_8h, arg_10h + var_38h, CARRY4(arg_10h, var_38h), var_34h, \n                                                   var_8h + 1);\n                            if (var_58h != 0) goto code_r0x0006087c;\n                            if (*(var_34h + var_8h) == 0) {\n                                var_8ch = arg_1ch;\n                                var_90h = var_34h;\n                                for (var_88h = var_8h; 3 < var_88h; var_88h = var_88h - 4) {\n                                    if (*var_90h != *var_8ch) goto code_r0x000606af;\n                                    var_8ch = var_8ch + 1;\n                                    var_90h = var_90h + 1;\n                                }\n                                if (var_88h == 0) {\ncode_r0x00060785:\n                                    var_98h = 0;\n                                }\n                                else {\ncode_r0x000606af:\n                                    var_94h = *var_90h - *var_8ch;\n                                    if (var_94h == 0) {\n                                        if (var_88h == 1) goto code_r0x00060785;\n                                        var_94h = *(var_90h + 1) - *(var_8ch + 1);\n                                        if (var_94h == 0) {\n                                            if (var_88h == 2) goto code_r0x00060785;\n                                            var_94h = *(var_90h + 2) - *(var_8ch + 2);\n                                            if (var_94h == 0) {\n                                                if ((var_88h == 3) ||\n                                                   (var_94h = *(var_90h + 3) - *(var_8ch + 3),  var_94h == 0))\n                                                goto code_r0x00060785;\n                                            }\n                                        }\n                                    }\n                                    var_98h = 1;\n                                    if (var_94h < 1) {\n                                        var_98h = -1;\n                                    }\n                                }\n                                if (var_98h == 0) {\n                                    if ((var_48h < *var_54h) || (*var_54h + var_54h[1] <= var_48h)) {\n                                        *arg_20h = arg_10h + var_48h;\n                                        var_58h = 0;\n                                    }\n                                    else {\n                                        if (var_4ch - var_48h < 0x105) {\n                                            var_a0h = var_4ch - var_48h;\n                                        }\n                                        else {\n                                            var_a0h = 0x104;\n                                        }\n                                        var_58h = fcn.0005e680(arg_8h, arg_10h + var_48h, CARRY4(arg_10h, var_48h), \n                                                               var_34h, var_a0h);\n                                        if (var_58h != 0) goto code_r0x0006087c;\n                                        var_58h = fcn.000608a0(arg_14h, arg_10h, var_34h, arg_20h, arg_24h);\n                                    }\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                    if (var_18h <= var_3ch) {\n                        var_58h = 0x21590005;\n                    }\n                }\n            }\ncode_r0x0006087c:\n            fcn.00036460(var_34h);\n        }\n    }\n    return var_58h;\n}\n",
        "token_count": 2312
    },
    "000608a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nint32_t __cdecl fcn.000608a0(int32_t arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h, int32_t *arg_18h)\n\n{\n    int32_t arg_ch_00;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uchar *var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_18h = 0;\n    var_10h = 0;\n    var_ch = fcn.0007f7ea(arg_10h, 0x2e);\n    if (var_ch == NULL) {\n        var_14h = 0x2159000d;\n    }\n    else {\n        *var_ch = 0;\n        var_ch = var_ch + 1;\n        var_10h = fcn.00036330(0x20a);\n        if (var_10h == 0) {\n            var_14h = 0x21590004;\n        }\n        else {\n            var_4h = 0;\n            while (var_8h = fcn.0007f8aa(var_10h, arg_10h, 0x104),  var_8h != -1) {\n                *(var_10h + var_8h * 2) = 0;\n                var_14h = fcn.00062990(arg_8h, var_10h, 0x20a, &var_4h);\n                if (((var_14h != 0) || (var_14h = fcn.00061d50(arg_8h, var_10h, &var_18h),  var_14h != 0)) ||\n                   ((var_18h != arg_ch && (var_14h = fcn.00060a00(arg_8h, var_18h, var_ch, arg_14h),  var_14h == 0))))\n                goto code_r0x000609d1;\n                arg_ch_00 = var_18h;\n                if (var_4h == -1) {\n                    var_14h = 0x2159000d;\n                    goto code_r0x000609d1;\n                }\n                var_18h = arg_8h;\n                fcn.00062380(arg_8h, arg_ch_00, 1);\n            }\n            var_14h = 0x21590066;\ncode_r0x000609d1:\n            fcn.00036460(var_10h);\n            if (var_14h == 0) {\n                *arg_18h = var_18h;\n            }\n        }\n    }\n    return var_14h;\n}\n",
        "token_count": 663
    },
    "00060a00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00060a00(uint arg_8h, uint32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint var_250h;\n    uint32_t var_214h;\n    int32_t var_210h;\n    uint var_20ch;\n    uint *var_208h;\n    uint var_204h;\n    int32_t var_200h;\n    uint var_1e8h;\n    uint var_108h;\n    \n    var_20ch = 0;\n    var_208h = &var_200h;\n    var_210h = fcn.0005e810(&var_20ch, 0x18, arg_8h);\n    if ((var_210h == 0) && (var_210h = fcn.0005e680(var_20ch, arg_ch, 0, &var_250h, 0x40),  var_210h == 0)) {\n        if (var_250h == 0x5a4d) {\n            var_210h = fcn.0005e680(var_20ch, arg_ch + var_214h, (var_214h >> 0x1f) + CARRY4(arg_ch, var_214h), \n                                    &var_200h, 0xf8);\n            if (var_210h == 0) {\n                if (var_200h == 0x4550) {\n                    if (var_1e8h != 0x10b) {\n                        var_210h = fcn.0005e680(var_20ch, arg_ch + var_214h, \n                                                (var_214h >> 0x1f) + CARRY4(arg_ch, var_214h), &var_108h, 0x108);\n                        if (var_210h != 0) goto code_r0x00060b76;\n                        var_208h = &var_108h;\n                    }\n                    var_210h = fcn.00060300(var_20ch, var_208h, arg_ch, arg_8h, arg_ch, arg_10h, arg_14h, &var_204h);\n                }\n                else {\n                    var_210h = -1;\n                }\n            }\n        }\n        else {\n            var_210h = -1;\n        }\n    }\ncode_r0x00060b76:\n    fcn.0005e890(var_20ch);\n    return var_210h;\n}\n",
        "token_count": 565
    },
    "00060b90": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00060b90(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t arg_ch_00;\n    int32_t iVar1;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_ch_00 = fcn.00036330(0x20a);\n    if (arg_ch_00 == 0) {\n        var_4h = 0x21590004;\n    }\n    else {\n        iVar1 = fcn.0007f8aa(arg_ch_00, arg_ch, 0x104);\n        if (iVar1 == -1) {\n            var_4h = 0x21590066;\n        }\n        else {\n            *(arg_ch_00 + iVar1 * 2) = 0;\n            var_4h = fcn.00060c20(arg_8h, arg_ch_00, arg_10h, arg_14h, arg_18h);\n        }\n        fcn.00036460(arg_ch_00);\n    }\n    return var_4h;\n}\n",
        "token_count": 256
    },
    "00060c20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00060c20(int32_t arg_8h, uint arg_ch, int32_t arg_10h, int32_t *arg_14h, int32_t *arg_18h)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int32_t var_50h;\n    uint var_4ch;\n    uint var_44h;\n    int16_t *var_40h;\n    uint var_3ch;\n    uint var_34h;\n    int16_t *var_30h;\n    uint var_2ch;\n    uint var_24h;\n    int16_t *var_20h;\n    char var_19h;\n    int32_t var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int16_t *var_4h;\n    \n    var_8h = 0xffffffff;\n    var_4h = NULL;\n    var_14h = 0;\n    var_10h = 0;\n    *arg_14h = 0;\n    var_8h = fcn.00036aa0(arg_ch, 0x8000);\n    if (var_8h == -1) {\n        var_4h = fcn.00036330(0x208);\n        if (var_4h == NULL) {\n            return 0x21590004;\n        }\n        var_18h = fcn.00035c10(var_4h, 0x104);\n        if (var_18h != 0) goto code_r0x00060eee;\n        if (arg_8h == 0) {\n            var_19h = '\\0';\n        }\n        else {\n            var_18h = fcn.0005e810(&var_14h, 0x400, arg_8h);\n            if ((var_18h != 0) || (var_18h = fcn.0005e530(0xffffffff, &var_19h),  var_18h != 0)) goto code_r0x00060eee;\n        }\n        if (var_19h == '\\0') {\n            var_20h = var_4h;\n            do {\n                iVar1 = *var_20h;\n                var_20h = var_20h + 1;\n            } while (iVar1 != 0);\n            fcn.0007f76c(var_4h, 0x85011848, 0x104 - (var_20h - (var_4h + 1) >> 1));\n        }\n        else {\n            var_30h = var_4h;\n            do {\n                iVar1 = *var_30h;\n                var_30h = var_30h + 1;\n            } while (iVar1 != 0);\n            fcn.0007f76c(var_4h, 0x85011860, 0x104 - (var_30h - (var_4h + 1) >> 1));\n        }\n        var_40h = var_4h;\n        do {\n            iVar1 = *var_40h;\n            var_40h = var_40h + 1;\n        } while (iVar1 != 0);\n        fcn.0007f76c(var_4h, arg_ch, 0x104 - (var_40h - (var_4h + 1) >> 1));\n        var_4h[0x103] = 0;\n        var_8h = fcn.00036aa0(var_4h, 0);\n        if (var_8h == -1) {\n            var_18h = 0x21590005;\n            goto code_r0x00060eee;\n        }\n    }\n    var_ch = fcn.00036a70(var_8h);\n    if (var_ch == -1) {\n        var_18h = -1;\n    }\n    else {\n        var_10h = fcn.00036330(var_ch);\n        if (var_10h == 0) {\n            var_18h = 0x21590004;\n        }\n        else {\n            iVar2 = fcn.00036c80(var_8h, var_10h, var_ch);\n            if (iVar2 == -1) {\n                var_18h = -1;\n            }\n            else {\n                var_ch = fcn.0005ffa0(var_10h);\n                iVar2 = fcn.00036330(var_ch);\n                *arg_14h = iVar2;\n                if (*arg_14h == 0) {\n                    var_18h = 0x21590004;\n                }\n                else {\n                    var_18h = fcn.00060080(*arg_14h, var_10h);\n                    if (var_18h == 0) {\n                        if (arg_10h == 0) {\n                            var_50h = *arg_14h;\n                        }\n                        else {\n                            var_50h = arg_10h;\n                        }\n                        var_18h = fcn.0005f970(*arg_14h, var_50h);\n                        if ((var_18h == 0) && (arg_18h != NULL)) {\n                            *arg_18h = var_ch;\n                        }\n                    }\n                }\n            }\n        }\n    }\ncode_r0x00060eee:\n    if (var_18h != 0) {\n        fcn.00036460(*arg_14h);\n        *arg_14h = 0;\n    }\n    fcn.00036460(var_10h);\n    fcn.0005e890(var_14h);\n    fcn.00036460(var_4h);\n    if (var_8h != -1) {\n        fcn.00036970(var_8h);\n    }\n    return var_18h;\n}\n",
        "token_count": 1308
    },
    "00060f50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00060f50(int32_t arg_8h, char *arg_ch, int32_t *arg_10h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint16_t uVar8;\n    uint32_t *puVar9;\n    int32_t iVar10;\n    int32_t iVar11;\n    uint var_48h;\n    uint var_40h;\n    char *var_3ch;\n    uint32_t var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_8h == 0) {\n        var_30h = 0x21590066;\n    }\n    else if (arg_ch == NULL) {\n        var_30h = 0x21590067;\n    }\n    else if (arg_10h == NULL) {\n        var_30h = 0x21590068;\n    }\n    else {\n        iVar6 = arg_8h + *(arg_8h + 0x3c);\n        puVar9 = iVar6 + 0x78;\n        if (*puVar9 == 0) {\n            var_30h = 0x21590005;\n        }\n        else {\n            iVar10 = arg_8h + *puVar9;\n            iVar7 = arg_8h + *(iVar10 + 0x1c);\n            iVar11 = arg_8h + *(iVar10 + 0x20);\n            if ((arg_ch & 0xffff0000) == 0) {\n                uVar8 = arg_ch - *(iVar10 + 0x10);\n                if (uVar8 < *(iVar10 + 0x14) || uVar8 == *(iVar10 + 0x14)) {\n                    uVar3 = *(iVar7 + uVar8 * 4);\n                    if ((uVar3 < *puVar9) || (*puVar9 + *(iVar6 + 0x7c) <= uVar3)) {\n                        *arg_10h = arg_8h + uVar3;\n                        var_30h = 0;\n                    }\n                    else {\n                        var_30h = fcn.000611b0(arg_8h + uVar3, arg_10h);\n                    }\n                }\n                else {\n                    var_30h = 0x21590005;\n                }\n            }\n            else {\n                var_3ch = arg_ch;\n                do {\n                    cVar1 = *var_3ch;\n                    var_3ch = var_3ch + 1;\n                } while (cVar1 != '\\0');\n                uVar3 = var_3ch - (arg_ch + 1);\n                var_30h = 0x21590005;\n                for (var_10h = 0; var_10h < *(iVar10 + 0x18); var_10h = var_10h + 1) {\n                    uVar2 = *(iVar7 + *(arg_8h + *(iVar10 + 0x24) + var_10h * 2) * 4);\n                    if ((uVar3 < (*puVar9 + *(iVar6 + 0x7c)) - *(iVar11 + var_10h * 4)) &&\n                       (iVar4 = arg_8h + *(iVar11 + var_10h * 4),  *(iVar4 + uVar3) == '\\0')) {\n                        for (var_38h = 0; (var_38h < uVar3 && (*(iVar4 + var_38h) == arg_ch[var_38h]));\n                            var_38h = var_38h + 1) {\n                        }\n                        if (uVar3 <= var_38h) {\n                            if ((*puVar9 <= uVar2) && (uVar2 < *puVar9 + *(iVar6 + 0x7c))) {\n                                uVar5 = fcn.000611b0(arg_8h + uVar2, arg_10h);\n                                return uVar5;\n                            }\n                            *arg_10h = arg_8h + uVar2;\n                            return 0;\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return var_30h;\n}\n",
        "token_count": 1034
    },
    "000611b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.000611b0(int32_t arg_8h, uint arg_ch)\n\n{\n    uint var_118h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_ch = fcn.00035ff0(arg_8h, 0x2e);\n    if (var_ch == 0) {\n        var_10h = 0x2159000d;\n    }\n    else {\n        var_ch = var_ch + 1;\n        var_4h = var_ch - arg_8h;\n        if (var_4h < 0x104) {\n            fcn.00035fb0(&var_118h, arg_8h, var_4h);\n            *(&var_118h + var_4h) = 0;\n            var_10h = fcn.00035b80(&var_118h, &var_8h);\n            if (var_10h == 0) {\n                var_10h = fcn.00060f50(var_8h, var_ch, arg_ch);\n            }\n        }\n        else {\n            var_10h = 0x2159000b;\n        }\n    }\n    return var_10h;\n}\n",
        "token_count": 290
    },
    "00061250": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00061250(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t *piVar5;\n    bool bVar6;\n    uint var_5ch;\n    int32_t var_58h;\n    uint8_t *var_50h;\n    uint8_t *var_4ch;\n    int32_t var_48h;\n    uint var_44h;\n    int32_t var_40h;\n    int32_t var_3ch;\n    uint var_38h;\n    uint var_34h;\n    int32_t *var_30h;\n    uint32_t var_2ch;\n    uint var_28h;\n    uint8_t *var_24h;\n    uint var_20h;\n    int32_t *var_1ch;\n    uint32_t *var_18h;\n    uint32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_10h = 0;\n    var_48h = 0;\n    iVar2 = arg_8h[0xf];\n    if (*(arg_8h + iVar2 + 0x18) == 0x10b) {\n        var_1ch = arg_8h + *(arg_8h + iVar2 + 0x80);\n        if (var_1ch == arg_8h) {\n            uVar4 = 0xffffffff;\n        }\n        else {\n            for (; var_1ch[3] != 0; var_1ch = var_1ch + 5) {\n                var_3ch = arg_8h + var_1ch[4];\n                if (*var_1ch == 0) {\n                    iVar3 = var_1ch[4];\n                }\n                else {\n                    iVar3 = *var_1ch;\n                }\n                var_18h = arg_8h + iVar3;\n                var_2ch = *var_18h;\n                while (var_2ch != 0) {\n                    if ((var_2ch & 0x80000000) == 0) {\n                        var_24h = arg_8h + var_2ch + 2;\n                    }\n                    else {\n                        var_24h = var_2ch + 2;\n                    }\n                    var_4ch = 0x8500d338;\n                    var_50h = var_24h;\n                    do {\n                        uVar1 = *var_50h;\n                        bVar6 = uVar1 < *var_4ch;\n                        if (uVar1 != *var_4ch) {\ncode_r0x00061367:\n                            var_58h = (1 - bVar6) - (bVar6 != 0);\n                            goto code_r0x0006136f;\n                        }\n                        if (uVar1 == 0) break;\n                        uVar1 = var_50h[1];\n                        bVar6 = uVar1 < var_4ch[1];\n                        if (uVar1 != var_4ch[1]) goto code_r0x00061367;\n                        var_50h = var_50h + 2;\n                        var_4ch = var_4ch + 2;\n                    } while (uVar1 != 0);\n                    var_58h = 0;\ncode_r0x0006136f:\n                    if (var_58h == 0) {\n                        var_48h = var_3ch;\n                        break;\n                    }\n                    var_3ch = var_3ch + 4;\n                    var_18h = var_18h + 1;\n                    var_2ch = *var_18h;\n                }\n                if (var_48h != 0) break;\n            }\n            if (var_48h == 0) {\n                uVar4 = 0x21590005;\n            }\n            else {\n                iVar3 = *(arg_8h + iVar2 + 0xa0);\n                if (iVar3 == 0) {\n                    if ((*(arg_8h + iVar2 + 0x70) & 1) == 0) {\n                        uVar4 = 0;\n                    }\n                    else {\n                        uVar4 = 0xffffffff;\n                    }\n                }\n                else {\n                    var_40h = iVar3;\n                    var_30h = arg_8h + iVar3;\n                    while (var_30h[1] != 0) {\n                        for (var_14h = 0; var_14h < (var_30h[1] - 8U >> 1 & 0xffff); var_14h = var_14h + 1) {\n                            if ((*(arg_8h + var_14h * 2 + var_40h + 8) >> 0xc == 3) &&\n                               (piVar5 = arg_8h + (*(arg_8h + var_14h * 2 + var_40h + 8) & 0xfff) + *var_30h, \n                               *piVar5 == var_48h)) {\n                                var_10h = piVar5 + -2;\n                                break;\n                            }\n                        }\n                        if (var_10h != 0) break;\n                        var_40h = var_40h + var_30h[1];\n                        var_30h = arg_8h + var_40h;\n                    }\n                    var_40h = iVar3;\n                    var_30h = arg_8h + iVar3;\n                    if (var_10h == 0) {\n                        uVar4 = 0x21590005;\n                    }\n                    else {\n                        while (var_30h[1] != 0) {\n                            iVar2 = var_30h[1];\n                            for (var_14h = 0; var_14h < (iVar2 - 8U >> 1 & 0xffff); var_14h = var_14h + 1) {\n                                if ((*(arg_8h + var_14h * 2 + var_40h + 8) >> 0xc == 3) &&\n                                   (piVar5 = arg_8h + (*(arg_8h + var_14h * 2 + var_40h + 8) & 0xfff) + *var_30h, \n                                   *piVar5 == var_10h)) {\n                                    *piVar5 = arg_ch;\n                                }\n                            }\n                            var_40h = var_40h + var_30h[1];\n                            var_30h = arg_8h + var_40h;\n                        }\n                        uVar4 = 0;\n                    }\n                }\n            }\n        }\n    }\n    else {\n        uVar4 = 0;\n    }\n    return uVar4;\n}\n",
        "token_count": 1524
    },
    "00061590": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00061590(uint arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if (arg_ch == 0) {\n        iVar1 = 0x21590066;\n    }\n    else if (arg_10h == 0) {\n        iVar1 = 0x21590067;\n    }\n    else if (arg_14h == 0) {\n        iVar1 = 0x21590068;\n    }\n    else {\n        iVar1 = fcn.0005c540(arg_8h, arg_ch, &var_4h);\n        if (iVar1 == 0) {\n            if (var_4h == 0) {\n                iVar1 = 0x21590005;\n            }\n            else {\n                iVar1 = fcn.00060a00(arg_8h, arg_ch, arg_10h, arg_14h);\n            }\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 247
    },
    "00061610": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00061610(uint arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_10h = 0;\n    var_ch = 0;\n    if (arg_ch == 0) {\n        return 0x21590066;\n    }\n    if (arg_10h != 0) {\n        var_10h = fcn.00036330(0x20a);\n        if (var_10h == 0) {\n            var_4h = 0x21590004;\n            goto code_r0x00061706;\n        }\n        iVar1 = fcn.0007f8aa(var_10h, arg_10h, 0x104);\n        if (iVar1 == -1) {\n            var_4h = 0x21590066;\n            goto code_r0x00061706;\n        }\n        *(var_10h + iVar1 * 2) = 0;\n    }\n    if (arg_14h != 0) {\n        var_ch = fcn.00036330(0x20a);\n        if (var_ch == 0) {\n            var_4h = 0x21590004;\n            goto code_r0x00061706;\n        }\n        iVar1 = fcn.0007f8aa(var_ch, arg_14h, 0x104);\n        if (iVar1 == -1) {\n            var_4h = 0x21590066;\n            goto code_r0x00061706;\n        }\n        *(var_ch + iVar1 * 2) = 0;\n    }\n    var_4h = fcn.00061730(arg_8h, arg_ch, var_10h, var_ch, arg_18h);\ncode_r0x00061706:\n    fcn.00036460(var_ch);\n    fcn.00036460(var_10h);\n    return var_4h;\n}\n",
        "token_count": 479
    },
    "00061730": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.00061730(int32_t param_1, uint32_t param_2, int32_t param_3, int32_t param_4, uint32_t *param_5)\n\n{\n    uint32_t uVar1;\n    bool bVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    int32_t var_8h;\n    uint32_t var_ch;\n    int32_t var_10h_2;\n    int32_t var_14h;\n    uint32_t *var_18h_2;\n    uint var_18h;\n    uint *arg_ch;\n    uint32_t uVar4;\n    uint uVar5;\n    int32_t var_64h;\n    int32_t var_5ch;\n    uint32_t *var_58h;\n    char var_52h;\n    char var_51h;\n    int16_t *var_50h;\n    int32_t var_4ch;\n    uint var_48h;\n    uint32_t var_44h;\n    int32_t var_40h;\n    uint var_3ch;\n    uint var_38h;\n    int32_t var_20h;\n    uchar *var_19h;\n    uint var_10h;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x8507bb18;\n    uStack16 = 0x8507b910;\n    var_10h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00061730::var_10h;\n    *0x10 = &stack0xffffff8c;\n    var_4ch = 0;\n    var_50h = NULL;\n    var_58h = NULL;\n    var_20h = 0;\n    var_5ch = 0;\n    bVar2 = false;\n    var_51h = '\\0';\n    var_44h = 0;\n    var_40h = 0;\n    var_19h._0_1_ = '\\0';\n    if (var_ch == 0) {\n        var_64h = 0x21590066;\n        goto code_r0x00061c82;\n    }\n    var_4h = 0;\n    var_64h = fcn.0005e810(&fcn.00061730::var_5ch, 0x438, var_8h);\n    if ((var_64h == 0) && (var_64h = fcn.00060280(var_ch, 0),  var_64h == 0)) {\n        var_4ch = var_ch + *(var_ch + 0x3c);\n        var_50h = var_4ch + 0x18;\n        if (((*(var_4ch + 0x5c) == 1) && (var_8h != 0)) || ((*(var_4ch + 0x5c) != 1 && (var_8h == 0)))) {\n            var_64h = 0x21590206;\n        }\n        else {\n            var_64h = fcn.0005e580(var_5ch, &stack0xffffffaa);\n            if (var_64h == 0) {\n                if (var_52h == '\\0') {\n                    var_64h = 0x21590206;\n                }\n                else if (((var_52h == '\\0') || (*var_50h != 0x20b)) && ((var_52h != '\\0' || (*var_50h != 0x10b)))) {\n                    uVar4 = var_ch;\n                    var_3ch = fcn.0005ffa0(var_ch);\n                    var_20h = fcn.00036330(var_3ch);\n                    if (var_20h == 0) {\n                        var_64h = 0x21590004;\n                    }\n                    else {\n                        fcn.0007f916(var_20h, 0, var_3ch);\n                        var_64h = fcn.00060080(var_20h, var_ch);\n                        if (var_64h == 0) {\n                            if (var_5ch != 0) {\n                                var_64h = (**0x8500d2a0)(var_5ch, 0, 0, 0, &fcn.00061730::var_40h, 0);\n                                if (var_64h < 0) goto code_r0x00061bd1;\n                                iVar3 = (**0x8500d1c8)();\n                                if (var_40h != iVar3) {\n                                    (**0x8500d1cc)(var_40h, &fcn.00061730::var_38h);\n                                    var_19h._0_1_ = '\\x01';\n                                }\n                            }\n                            var_4ch = var_20h + *(var_20h + 0x3c);\n                            var_50h = var_4ch + 0x18;\n                            var_44h = *(var_4ch + 0x34);\n                            arg_ch = &fcn.00061730::var_44h;\n                            var_64h = fcn.0005e700(var_5ch, arg_ch, &fcn.00061730::var_3ch);\n                            if (((var_64h == 0) && (var_64h = fcn.0005f970(var_20h, var_44h),  var_64h == 0)) &&\n                               (var_64h = fcn.0005e6c0(var_5ch, var_44h, 0, var_20h, var_3ch),  var_64h == 0)) {\n                                if (var_8h == 0) {\ncode_r0x00061b13:\n                                    var_64h = fcn.0005fb80(var_8h, var_20h);\n                                    if (var_64h == 0) {\n                                        bVar2 = true;\n                                        uVar5 = 0x61b51;\n                                        var_64h = fcn.0005e6c0(var_5ch, var_44h, 0, var_20h, var_3ch);\n                                        if (var_64h == 0) {\n                                            if (*(var_4ch + 0x28) != 0) {\n                                                uVar5 = 1;\n                                                var_ch = var_44h + *(var_50h + 8);\n                                                uVar4 = var_44h;\n                                                var_64h = fcn.0005f600(var_8h, var_ch, var_44h, 1);\n                                                if (var_64h != 0) goto code_r0x00061bd1;\n                                            }\n                                            if (var_8h != 0) {\n                                                fcn.0005d220(arg_ch, &fcn.00061730::var_48h, var_8h, var_ch, uVar4, \n                                                             uVar5);\n                                            }\n                                            var_64h = 0;\n                                        }\n                                    }\n                                }\n                                else {\n                                    var_58h = fcn.00036330(0x428);\n                                    if (var_58h == NULL) {\n                                        var_64h = 0x21590004;\n                                    }\n                                    else {\n                                        *var_58h = var_44h;\n                                        var_58h[1] = 0;\n                                        uVar1 = *(var_50h + 8);\n                                        var_58h[4] = var_44h + uVar1;\n                                        var_58h[5] = CARRY4(var_44h, uVar1);\n                                        var_58h[2] = *(var_50h + 0x1c);\n                                        var_58h[3] = *(var_4ch + 8);\n                                        if (var_10h_2 == 0) {\n                                            *(var_58h + 6) = 0;\n                                        }\n                                        else {\n                                            fcn.0007f718(var_58h + 6, var_10h_2, 0x104);\n                                            *(var_58h + 0x21e) = 0;\n                                        }\n                                        if (var_14h == 0) {\n                                            *(var_58h + 0x88) = 0;\n                                        }\n                                        else {\n                                            fcn.0007f718(var_58h + 0x88, var_14h, 0x104);\n                                            *(var_58h + 0x426) = 0;\n                                        }\n                                        var_64h = fcn.0005c910();\n                                        if (var_64h == 0) {\n                                            var_51h = '\\x01';\n                                            goto code_r0x00061b13;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                else {\n                    var_64h = 0x21590206;\n                }\n            }\n        }\n    }\ncode_r0x00061bd1:\n    var_4h = 0xffffffff;\n    if (var_64h == 0) {\n        if (var_18h_2 != NULL) {\n            *var_18h_2 = var_44h;\n        }\n    }\n    else {\n        if (bVar2) {\n            fcn.00062380(var_8h, var_44h, 0);\n        }\n        else if (var_44h != 0) {\n            if (var_51h != '\\0') {\n                fcn.0005d410(var_8h, var_44h);\n            }\n            fcn.0005e7d0(var_5ch, var_44h);\n        }\n        if (var_18h_2 != NULL) {\n            *var_18h_2 = 0;\n        }\n    }\n    if (var_5ch != 0) {\n        fcn.0007f6c4(var_5ch);\n    }\n    fcn.00036460(var_20h);\n    fcn.00036460(var_58h);\n    if (var_40h != 0) {\n        if (var_19h != '\\0') {\n            (**0x8500d1c4)(&fcn.00061730::var_38h);\n        }\n        (**0x8500d2e4)();\n    }\ncode_r0x00061c82:\n    *in_FS_OFFSET = var_10h;\n    return var_64h;\n}\n",
        "token_count": 2322
    },
    "00061ca0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00061ca0(uint arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t arg_ch_00;\n    int32_t iVar1;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_ch == 0) {\n        var_4h = 0x21590066;\n    }\n    else if (arg_10h == 0) {\n        var_4h = 0x21590067;\n    }\n    else {\n        arg_ch_00 = fcn.00036330(0x20a);\n        if (arg_ch_00 == 0) {\n            var_4h = 0x21590004;\n        }\n        else {\n            iVar1 = fcn.0007f8aa(arg_ch_00, arg_ch, 0x104);\n            if (iVar1 == -1) {\n                var_4h = 0x21590066;\n            }\n            else {\n                *(arg_ch_00 + iVar1 * 2) = 0;\n                var_4h = fcn.00061d50(arg_8h, arg_ch_00, arg_10h);\n            }\n            fcn.00036460(arg_ch_00);\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 296
    },
    "00061d50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00061d50(uint arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint var_1ch;\n    code *var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (arg_ch == 0) {\n        var_14h = 0x21590066;\n    }\n    else if (arg_10h == 0) {\n        var_14h = 0x21590067;\n    }\n    else {\n        var_10h = arg_8h;\n        var_ch = arg_ch;\n        var_8h = arg_10h;\n        iVar1 = fcn.00035da0();\n        if ((iVar1 < 0x1b) || (uVar2 = fcn.0005bdb0(),  0x1fff < uVar2)) {\n            iVar1 = fcn.00035da0();\n            if ((iVar1 < 0x1b) && (uVar2 = fcn.0005bdb0(),  uVar2 < 0xc00)) {\n                var_14h = 0x21590004;\n            }\n            else {\n                fcn.00061e40(&var_10h);\n                var_14h = var_4h;\n            }\n        }\n        else {\n            var_14h = fcn.00035b80(0x8500d8a0, &var_1ch);\n            if ((var_14h == 0) &&\n               ((var_14h = fcn.00060f50(var_1ch, 0x85011878, &var_18h),  var_14h == 0 &&\n                (iVar1 = (*var_18h)(0x8505de40, &var_10h, 0xe800, 1, 0),  var_14h = var_4h,  iVar1 != 0)))) {\n                var_14h = iVar1;\n            }\n        }\n    }\n    return var_14h;\n}\n",
        "token_count": 499
    },
    "00061e40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00062332)\n\nvoid __cdecl fcn.00061e40(uint *arg_8h)\n\n{\n    int16_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint var_a4h;\n    uint var_9ch;\n    int16_t *var_98h;\n    uint var_94h;\n    uint var_8ch;\n    int16_t *var_88h;\n    uint var_84h;\n    uint var_7ch;\n    int16_t *var_78h;\n    uint *var_70h;\n    uint var_6ch;\n    uint var_64h;\n    int16_t *var_60h;\n    int32_t var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint *var_4ch;\n    uint var_48h;\n    int32_t var_40h;\n    uint var_3ch;\n    int32_t var_38h;\n    int16_t *var_34h;\n    int32_t var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint *var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    char var_11h;\n    int32_t var_10h;\n    uint var_ch;\n    int16_t *var_8h;\n    uint var_4h;\n    \n    var_38h = 0;\n    var_30h = 0;\n    var_10h = 0;\n    var_ch = 0;\n    var_8h = NULL;\n    var_3ch = *arg_8h;\n    var_34h = arg_8h[1];\n    var_4ch = arg_8h[2];\n    if (var_34h != NULL) {\n        var_60h = var_34h;\n        do {\n            iVar1 = *var_60h;\n            var_60h = var_60h + 1;\n        } while (iVar1 != 0);\n        if (var_60h - (var_34h + 1) >> 1 != 0) {\n            if (var_4ch == NULL) {\n                arg_8h[3] = 0x21590067;\n                return;\n            }\n            *var_4ch = 0;\n            var_38h = fcn.00036330(0x212);\n            if (var_38h == 0) {\n                arg_8h[3] = 0x21590004;\n                return;\n            }\n            fcn.0007f718(var_38h, var_34h, 0x104);\n            *(var_38h + 0x208) = 0;\n            iVar3 = fcn.0007f724(var_38h, 0x2e);\n            if ((iVar3 == 0) || (*(iVar3 + 2) == 0x5c)) {\n                puVar2 = var_38h + -2;\n                do {\n                    var_70h = puVar2;\n                    puVar2 = var_70h + 2;\n                } while (*(var_70h + 2) != 0);\n                *(var_70h + 2) = *0x85011898;\n                *(var_70h + 6) = *0x8501189c;\n                *(var_70h + 10) = *0x850118a0;\n            }\n            var_4h = 0;\n            var_40h = fcn.00062990(var_3ch, var_38h, 0x212, &var_4h);\n            if (var_40h == 0) {\n                var_5ch = fcn.0007f724(var_38h, 0x5c);\n                if (var_5ch == 0) {\n                    var_5ch = var_38h;\n                }\n                else {\n                    var_5ch = var_5ch + 2;\n                }\n                var_40h = fcn.0005d570(var_3ch, var_5ch, var_4ch);\n                if (var_40h != 0) {\n                    fcn.0007f6d0(&var_48h, var_38h);\n                    var_2ch = 0x18;\n                    var_28h = 0;\n                    var_20h = 0x240;\n                    var_24h = &var_48h;\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_40h = fcn.0001ed40(&var_30h, 0x80000000, &var_2ch, &var_54h, 0, 0, 7, 1, 0x40, 0, 0);\n                    if (var_40h != 0) {\n                        if (var_5ch != var_38h) goto code_r0x00062320;\n                        var_8h = fcn.00036330(0x208);\n                        if (var_8h == NULL) {\n                            var_40h = 0x21590004;\n                            goto code_r0x00062320;\n                        }\n                        var_40h = fcn.00035c10(var_8h, 0x104);\n                        if ((var_40h != 0) || (var_40h = fcn.0005e530(0xffffffff, &var_11h),  var_40h != 0))\n                        goto code_r0x00062320;\n                        if (var_11h == '\\0') {\n                            var_78h = var_8h;\n                            do {\n                                iVar1 = *var_78h;\n                                var_78h = var_78h + 1;\n                            } while (iVar1 != 0);\n                            fcn.0007f76c(var_8h, 0x85011848, 0x104 - (var_78h - (var_8h + 1) >> 1));\n                        }\n                        else {\n                            var_88h = var_8h;\n                            do {\n                                iVar1 = *var_88h;\n                                var_88h = var_88h + 1;\n                            } while (iVar1 != 0);\n                            fcn.0007f76c(var_8h, 0x85011860, 0x104 - (var_88h - (var_8h + 1) >> 1));\n                        }\n                        var_98h = var_8h;\n                        do {\n                            iVar1 = *var_98h;\n                            var_98h = var_98h + 1;\n                        } while (iVar1 != 0);\n                        fcn.0007f76c(var_8h, var_38h, 0x104 - (var_98h - (var_8h + 1) >> 1));\n                        var_8h[0x103] = 0;\n                        fcn.0007f6d0(&var_48h, var_8h);\n                        var_2ch = 0x18;\n                        var_28h = 0;\n                        var_20h = 0x240;\n                        var_24h = &var_48h;\n                        var_1ch = 0;\n                        var_18h = 0;\n                        var_40h = fcn.0001ed40(&var_30h, 0x80000000, &var_2ch, &var_54h, 0, 0, 7, 1, 0x40, 0, 0);\n                        if (var_40h != 0) goto code_r0x00062320;\n                    }\n                    var_2ch = 0x18;\n                    var_28h = 0;\n                    var_20h = 0x200;\n                    var_24h = NULL;\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_40h = fcn.0007f826();\n                    if ((var_40h == 0) && (var_40h = fcn.0007f814(),  var_40h == 0)) {\n                        var_40h = fcn.00061730();\n                    }\n                }\n            }\ncode_r0x00062320:\n            fcn.00036460(var_8h);\n            if (var_10h != 0) {\n                fcn.0007f6c4(var_10h);\n            }\n            if (var_30h != 0) {\n                fcn.0007f6c4(var_30h);\n            }\n            fcn.00036460(var_38h);\n            arg_8h[3] = var_40h;\n            return;\n        }\n    }\n    arg_8h[3] = 0x21590066;\n    return;\n}\n",
        "token_count": 1979
    },
    "00062380": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00062380(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint var_1ch;\n    code *var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_10h = arg_8h;\n    var_ch = arg_ch;\n    var_8h._0_1_ = arg_10h;\n    var_4h = -1;\n    iVar1 = fcn.00035da0();\n    if ((iVar1 < 0x1b) || (uVar2 = fcn.0005bdb0(),  0x1fff < uVar2)) {\n        iVar1 = fcn.00035da0();\n        if ((iVar1 < 0x1b) && (uVar2 = fcn.0005bdb0(),  uVar2 < 0xc00)) {\n            var_14h = 0x21590004;\n        }\n        else {\n            fcn.00062450(&var_10h);\n            var_14h = var_4h;\n        }\n    }\n    else {\n        var_14h = fcn.00035b80(0x8500d8a0, &var_1ch);\n        if ((var_14h == 0) &&\n           ((var_14h = fcn.00060f50(var_1ch, 0x85011878, &var_18h),  var_14h == 0 &&\n            (iVar1 = (*var_18h)(0x8505e450, &var_10h, 0xe800, 1, 0),  var_14h = var_4h,  iVar1 != 0)))) {\n            var_14h = iVar1;\n        }\n    }\n    return var_14h;\n}\n",
        "token_count": 455
    },
    "00062450": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00062450(int32_t *param_1)\n\n{\n    uint *in_FS_OFFSET;\n    uint var_18h;\n    int32_t *var_8h;\n    uint uVar1;\n    int32_t iVar2;\n    uint var_160h;\n    uint32_t var_124h;\n    int32_t var_11ch;\n    uint32_t var_118h;\n    int32_t var_114h;\n    int32_t var_110h;\n    int32_t var_e8h;\n    uchar *puStack28;\n    uint var_10h;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x8507baf8;\n    uStack16 = 0x8507b910;\n    var_10h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00062450::var_10h;\n    puStack28 = &stack0xfffffe90;\n    var_114h = 0;\n    if (var_8h[1] == 0) {\n        var_11ch = 0x21590065;\n        puStack28 = &stack0xfffffe90;\n    }\n    else if (*var_8h == 0) {\n        var_11ch = 0;\n        puStack28 = &stack0xfffffe90;\n    }\n    else {\n        var_4h = 0;\n        iVar2 = var_8h[1];\n        var_11ch = fcn.0005c540(*var_8h, iVar2, &fcn.00062450::var_118h);\n        if (var_11ch == 0) {\n            if (var_118h == 0) {\n                var_11ch = 0;\n            }\n            else if (var_118h == 0xffffffff) {\n                var_11ch = 0;\n            }\n            else if ((var_118h == 0) || (var_11ch = fcn.0005dcd0(*var_8h, var_8h[1]),  var_11ch == 0)) {\n                if (var_118h < 2) {\n                    var_11ch = fcn.0005e810(&fcn.00062450::var_114h, 0x18, *var_8h);\n                    if ((var_11ch == 0) &&\n                       (var_11ch = fcn.0005e680(var_114h, var_8h[1], 0, &fcn.00062450::var_160h, 0x40),  var_11ch == 0))\n                    {\n                        if (var_160h == 0x5a4d) {\n                            uVar1 = 0x6263b;\n                            var_11ch = fcn.0005e680(var_114h, var_8h[1] + var_124h, \n                                                    (var_124h >> 0x1f) + CARRY4(var_8h[1], var_124h), \n                                                    &fcn.00062450::var_110h, 0xf8);\n                            if (var_11ch == 0) {\n                                if (var_110h == 0x4550) {\n                                    fcn.0007f6c4(uVar1);\n                                    var_114h = 0;\n                                    if ((((*(var_8h + 2) == '\\0') || (var_e8h == 0)) ||\n                                        (var_11ch = fcn.0005f600(*var_8h, var_8h[1] + var_e8h, var_8h[1], 0), \n                                        var_11ch == 0)) && (var_11ch = fcn.0005d410(iVar2, var_8h[1]),  var_11ch == 0))\n                                    {\n                                        var_11ch = fcn.00062780(*var_8h, &fcn.00062450::var_110h, var_8h[1]);\n                                    }\n                                }\n                                else {\n                                    var_11ch = -1;\n                                }\n                            }\n                        }\n                        else {\n                            var_11ch = -1;\n                        }\n                    }\n                }\n                else {\n                    var_11ch = 0;\n                }\n            }\n        }\n    }\n    var_4h = 0xffffffff;\n    if (var_114h != 0) {\n        fcn.0007f6c4(var_114h);\n    }\n    var_8h[3] = var_11ch;\n    *in_FS_OFFSET = var_10h;\n    return;\n}\n",
        "token_count": 1038
    },
    "00062780": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x000627de)\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.00062780(uint param_1, int32_t param_2, uint32_t param_3)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint var_18h;\n    uint var_8h;\n    int32_t var_ch;\n    uint32_t var_10h;\n    int32_t var_14ch;\n    int32_t var_148h;\n    uint var_144h;\n    uint var_140h;\n    uint var_34h;\n    uint32_t var_28h;\n    uint32_t var_20h;\n    uint var_1ch;\n    uchar *puStack28;\n    uint var_10h_2;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x8507bab8;\n    uStack16 = 0x8507b910;\n    var_10h_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_10h_2;\n    puStack28 = &stack0xfffffea4;\n    var_144h = 0;\n    var_148h = 0;\n    var_4h = 0;\n    var_20h = var_10h + *(var_ch + 0x80);\n    if (var_20h == var_10h) {\n        var_14ch = 0;\n        puStack28 = &stack0xfffffea4;\n    }\n    else {\n        var_14ch = fcn.0005e810(&var_148h, 0x18, var_8h);\n        if (var_14ch == 0) {\n            while (var_14ch = fcn.0005e680(var_148h, var_20h, 0, &var_34h, 0x14),  var_14ch == 0) {\n                if (var_28h == 0) {\n                    fcn.0005e7d0(var_148h, var_10h);\n                    var_14ch = 0;\n                    break;\n                }\n                var_14ch = fcn.0005e680(var_148h, var_10h + var_28h, CARRY4(var_10h, var_28h), &var_140h, 0x104);\n                if (var_14ch != 0) break;\n                if (var_140h != '\\0') {\n                    iVar1 = fcn.0005d4f0(var_8h, &var_140h, &var_1ch);\n                    if (iVar1 == 0) {\n                        fcn.0005dcd0(var_8h, var_1ch);\n                        fcn.00062380(var_8h, var_1ch, 1);\n                    }\n                    var_20h = var_20h + 0x14;\n                }\n            }\n        }\n    }\n    var_4h = 0xffffffff;\n    if (var_148h != 0) {\n        fcn.0007f6c4(var_148h);\n    }\n    *in_FS_OFFSET = var_10h_2;\n    return var_14ch;\n}\n",
        "token_count": 729
    },
    "00062990": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00062990(uint param_1, int32_t param_2, uint32_t param_3, uint32_t *param_4)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint var_8h;\n    int32_t var_ch;\n    uint32_t var_10h;\n    uint32_t *var_14h;\n    uint var_18h;\n    int32_t var_30h;\n    uint var_2ch;\n    uint32_t *var_28h;\n    int32_t var_24h;\n    uint32_t var_20h;\n    int32_t var_1ch;\n    uchar *puStack28;\n    uint var_10h_2;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x8507baa8;\n    uStack16 = 0x8507b910;\n    var_10h_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_10h_2;\n    puStack28 = &stack0xffffffc0;\n    if (var_ch == 0) {\n        var_30h = 0x21590066;\n    }\n    else if (var_14h == NULL) {\n        var_30h = 0x21590068;\n    }\n    else {\n        iVar1 = fcn.0007f6b8(var_ch, 0x850118a4, 4);\n        if (iVar1 == 0) {\n            var_1ch = var_ch + 8;\n            iVar1 = fcn.00060c20(var_8h, 0x850118b0, 0, &var_2ch, 0);\n            if (iVar1 == 0) {\n                var_30h = fcn.00060160(var_2ch, 0x850118d4, 0, 0, &var_24h, 0);\n                if (var_30h == 0) {\n                    var_4h = 0;\n                    var_20h = 0;\n                    while ((var_20h < *(var_24h + 4) &&\n                           (iVar1 = fcn.0007f6b8(var_1ch, var_24h + *(var_24h + 8 + var_20h * 0xc), \n                                                 *(var_24h + 0xc + var_20h * 0xc) >> 1),  iVar1 != 0))) {\n                        var_20h = var_20h + 1;\n                    }\n                    if (var_20h < *(var_24h + 4)) {\n                        var_28h = var_24h + *(var_24h + 0x10 + var_20h * 0xc);\n                        if (*var_28h == 0) {\n                            *var_14h = 0xffffffff;\n                            var_30h = 0;\n                            var_4h = 0xffffffff;\n                        }\n                        else if (*var_14h < *var_28h) {\n                            if (var_10h < var_28h[*var_14h * 4 + 4] + 2) {\n                                var_30h = 0x2159000b;\n                                var_4h = 0xffffffff;\n                            }\n                            else {\n                                fcn.0007f904(var_ch, var_24h + var_28h[*var_14h * 4 + 3], var_28h[*var_14h * 4 + 4]);\n                                *(var_ch + (var_28h[*var_14h * 4 + 4] & 0xfffffffe)) = 0;\n                                if (*var_14h < *var_28h - 1) {\n                                    *var_14h = *var_14h + 1;\n                                }\n                                else {\n                                    *var_14h = 0xffffffff;\n                                }\n                                var_30h = 0;\n                                var_4h = 0xffffffff;\n                            }\n                        }\n                        else {\n                            var_30h = 0x2159000e;\n                            var_4h = 0xffffffff;\n                        }\n                    }\n                    else {\n                        *var_14h = 0xffffffff;\n                        var_30h = 0;\n                        var_4h = 0xffffffff;\n                    }\n                }\n                fcn.00036460(var_2ch);\n            }\n            else {\n                *var_14h = 0xffffffff;\n                var_30h = 0;\n            }\n        }\n        else {\n            *var_14h = 0xffffffff;\n            var_30h = 0;\n        }\n    }\n    *in_FS_OFFSET = var_10h_2;\n    return var_30h;\n}\n",
        "token_count": 1065
    },
    "00063630": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Variable defined which should be unmapped: var_3h\n// WARNING: Switch with 1 destination removed at 0x00063a25\n// WARNING: Switch with 1 destination removed at 0x00063b11\n\nvoid __cdecl\nfcn.00063630(int32_t arg_8h, uint *arg_ch, uint arg_10h, uint arg_14h, uint *arg_18h, uint32_t arg_1ch, uint arg_20h)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    uint8_t uVar3;\n    uchar uVar4;\n    uint uVar5;\n    uint var_ch;\n    uint var_8h;\n    uint var_3h;\n    \n    fcn.00065260(arg_8h);\n    cVar1 = *(arg_8h + 0x112 + *(arg_8h + 4)) >> 6;\n    uVar2 = *(arg_8h + 0x112 + *(arg_8h + 4)) & 7;\n    uVar3 = (*(arg_8h + 0x101) & 1) << 3 | uVar2;\n    uVar4 = fcn.00062c10(arg_8h, arg_10h);\n    *(arg_ch + 1) = uVar4;\n    if (cVar1 == '\\x03') {\n        *arg_ch = 0x8c;\n        if (arg_14h == 1) {\n            uVar5 = fcn.000632f0(arg_8h, *(arg_ch + 1));\n            arg_ch[4] = uVar5;\n        }\n        else {\n            uVar5 = fcn.000634c0(arg_8h, arg_14h);\n            arg_ch[4] = uVar5;\n        }\n    }\n    else {\n        *arg_ch = 0x8d;\n        if (*(arg_8h + 0x10c) == '@') {\n            arg_ch[4] = uVar3 + 0x35;\n            if (cVar1 == '\\x01') {\n                *(arg_ch + 6) = 8;\n            }\n            else if (cVar1 == '\\x02') {\n                *(arg_ch + 6) = 0x20;\n            }\n            else if ((cVar1 == '\\0') && (uVar3 == 5)) {\n                arg_ch[4] = 0x8b;\n                *(arg_ch + 6) = 0x20;\n            }\n            else {\n                *(arg_ch + 6) = 0;\n            }\n            if (uVar2 == 4) {\n                fcn.00065260(arg_8h);\n                *(arg_ch + 0x19) = 1 << (*(arg_8h + 0x112 + *(arg_8h + 4)) >> 6) & 0xfe;\n                arg_ch[5] = (*(arg_8h + 0x112 + *(arg_8h + 4)) >> 3 & 7U | ((*(arg_8h + 0x101) & 3) >> 1) << 3) + 0x35;\n                arg_ch[4] = (*(arg_8h + 0x112 + *(arg_8h + 4)) & 7 | (*(arg_8h + 0x101) & 1) << 3) + 0x35;\n                if (arg_ch[5] == 0x39) {\n                    arg_ch[5] = 0;\n                    *(arg_ch + 0x19) = 0;\n                }\n                if ((arg_ch[4] == 0x3a) || (arg_ch[4] == 0x42)) {\n                    if (cVar1 == '\\0') {\n                        arg_ch[4] = 0;\n                    }\n                    if (cVar1 == '\\x01') {\n                        *(arg_ch + 6) = 8;\n                    }\n                    else {\n                        *(arg_ch + 6) = 0x20;\n                    }\n                }\n            }\n        }\n        else if (*(arg_8h + 0x10c) == ' ') {\n            arg_ch[4] = uVar3 + 0x25;\n            if (cVar1 == '\\x01') {\n                *(arg_ch + 6) = 8;\n            }\n            else if (cVar1 == '\\x02') {\n                *(arg_ch + 6) = 0x20;\n            }\n            else if ((cVar1 == '\\0') && (uVar3 == 5)) {\n                arg_ch[4] = 0;\n                *(arg_ch + 6) = 0x20;\n            }\n            else {\n                *(arg_ch + 6) = 0;\n            }\n            if (uVar2 == 4) {\n                fcn.00065260(arg_8h);\n                *(arg_ch + 0x19) = 1 << (*(arg_8h + 0x112 + *(arg_8h + 4)) >> 6) & 0xfe;\n                arg_ch[5] = (*(arg_8h + 0x112 + *(arg_8h + 4)) >> 3 & 7U | ((*(arg_8h + 0x101) & 3) >> 1) << 3) + 0x25;\n                arg_ch[4] = (*(arg_8h + 0x112 + *(arg_8h + 4)) & 7 | (*(arg_8h + 0x101) & 1) << 3) + 0x25;\n                if (arg_ch[5] == 0x29) {\n                    arg_ch[5] = 0;\n                    *(arg_ch + 0x19) = 0;\n                }\n                if (arg_ch[4] == 0x2a) {\n                    if (cVar1 == '\\0') {\n                        arg_ch[4] = 0;\n                    }\n                    if (cVar1 == '\\x01') {\n                        *(arg_ch + 6) = 8;\n                    }\n                    else {\n                        *(arg_ch + 6) = 0x20;\n                    }\n                }\n            }\n        }\n        else {\n            if (uVar3 < 8) {\n                return;\n            }\n            if ((cVar1 == '\\0') && (uVar3 == 6)) {\n                *(arg_ch + 6) = 0x10;\n            }\n            else if (cVar1 == '\\x01') {\n                *(arg_ch + 6) = 8;\n            }\n            else if (cVar1 == '\\x02') {\n                *(arg_ch + 6) = 0x10;\n            }\n        }\n    }\n    if (*(arg_ch + 6) - 8 < 0x39) {\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    if (arg_18h != NULL) {\n        *arg_18h = 0x8c;\n        uVar4 = fcn.00062c10(arg_8h, arg_1ch & 0xff);\n        *(arg_18h + 1) = uVar4;\n        if (arg_20h == 1) {\n            uVar5 = fcn.000632f0(arg_8h, *(arg_18h + 1));\n            arg_18h[4] = uVar5;\n        }\n        else {\n            uVar5 = fcn.000634c0(arg_8h, arg_20h);\n            arg_18h[4] = uVar5;\n        }\n    }\n    return;\n}\n",
        "token_count": 1710
    },
    "000649d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Switch with 1 destination removed at 0x00064aa4\n\nuchar __cdecl fcn.000649d0(uint32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    bool bVar2;\n    uchar uVar3;\n    uint uVar4;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    uchar *var_8h;\n    uint var_4h;\n    \n    *(arg_8h + 0xc) = 0;\n    fcn.000648e0(arg_8h);\n    fcn.00065260(arg_8h);\n    var_ch = 0;\n    bVar2 = false;\n    do {\n        if (bVar2) {\ncode_r0x00064be0:\n            fcn.00065330(arg_8h);\n            fcn.00065fd0(arg_8h);\n            if (*(arg_8h + 0x8c) == '@') {\n                *(arg_8h + 0x101) = *(arg_8h + 0x101) & (*(*(arg_8h + 0x98) + 0x1c) >> 0x10 & 0xf | 0x40);\n                *(arg_8h + 0x10a) = *(*(arg_8h + 0x98) + 0x1c) & 8;\n                *(arg_8h + 0x100) = *(*(arg_8h + 0x98) + 0x1c) & 0x10;\n                if (((*(*(arg_8h + 0x98) + 0x1c) & 0xff0000) == 0) || ((*(arg_8h + 0x101) & 0xf) >> 3 == 0)) {\n                    if (*(arg_8h + 0x103) == '\\0') {\n                        *(arg_8h + 0x10b) = (-(*(arg_8h + 0x10a) != '\\0') & 0x20U) + 0x20;\n                    }\n                    else {\n                        *(arg_8h + 0x10b) = 0x10;\n                    }\n                }\n                else {\n                    *(arg_8h + 0x10b) = 0x40;\n                }\n                *(arg_8h + 0x10c) = (-(*(arg_8h + 0x104) != '\\0') & 0xe0U) + 0x40;\n            }\n            else if (*(arg_8h + 0x8c) == ' ') {\n                *(arg_8h + 0x10b) = (-(*(arg_8h + 0x103) != '\\0') & 0xf0U) + 0x20;\n                *(arg_8h + 0x10c) = (-(*(arg_8h + 0x104) != '\\0') & 0xf0U) + 0x20;\n            }\n            else if (*(arg_8h + 0x8c) == '\\x10') {\n                *(arg_8h + 0x10b) = (-(*(arg_8h + 0x103) != '\\0') & 0x10U) + 0x10;\n                *(arg_8h + 0x10c) = (-(*(arg_8h + 0x104) != '\\0') & 0x10U) + 0x10;\n            }\n            if (((*(*(arg_8h + 0x98) + 0x1c) & 4) == 0) && (*(arg_8h + 0x103) != '\\0')) {\n                *(arg_8h + 0x100) = 1;\n            }\n            if (((*(*(arg_8h + 0x98) + 0x1c) & 1) == 0) && (*(arg_8h + 0x104) != '\\0')) {\n                *(arg_8h + 0x100) = 1;\n            }\n            *(arg_8h + 0x10f) = (*(*(arg_8h + 0x98) + 0x1c) & 0x20) != 0;\n            *(arg_8h + 0x110) = (*(*(arg_8h + 0x98) + 0x1c) & 0x40) != 0;\n            *(arg_8h + 0x111) = (*(*(arg_8h + 0x98) + 0x1c) & 0x80) != 0;\n            fcn.00063ce0(arg_8h);\n            if ((*(*(arg_8h + 0x98) + 0x1c) & 0x100) != 0) {\n                uVar4 = fcn.00062ce0(arg_8h);\n                *(arg_8h + 0x9c) = uVar4;\n            }\n            *(arg_8h + 0x10d) = 0;\n            *(arg_8h + 0x10e) = 0;\n            if ((*(arg_8h + 0x9c) == 0x18) || (*(arg_8h + 0x9c) == 0xde)) {\n                if (*(arg_8h + 0xa4) == '\\x04') {\n                    *(arg_8h + 0xa4) = 0x10;\n                    *(arg_8h + 0x10d) = 1;\n                    *(arg_8h + 0x10e) = 0;\n                }\n                else if (*(arg_8h + 0xa4) == '\\x05') {\n                    *(arg_8h + 0xa4) = 0x20;\n                    *(arg_8h + 0x10d) = 1;\n                    *(arg_8h + 0x10e) = 0;\n                }\n                else {\n                    *(arg_8h + 0x10d) = 0;\n                    *(arg_8h + 0x10e) = 1;\n                }\n            }\n            else if (*(arg_8h + 0x9c) == 0x220) {\n                uVar4 = fcn.000656e0(arg_8h & 0xffffff00 | *(arg_8h + 0x112 + *(arg_8h + 4)));\n                *(arg_8h + 0x9c) = uVar4;\n            }\n            if (*(arg_8h + 0x100) != '\\0') {\n                fcn.000648e0(arg_8h);\n                *(arg_8h + 4) = *(arg_8h + 4) - *(arg_8h + 0xc);\n                *(arg_8h + 0xc) = 0;\n                uVar3 = fcn.00065390(arg_8h);\n                *(arg_8h + 0xa8) = uVar3;\n                if (*(arg_8h + 0xa8) == 'f') {\n                    *(arg_8h + 0x9c) = 0x218;\n                }\n                else if (*(arg_8h + 0xa8) == 'g') {\n                    *(arg_8h + 0x9c) = 0x217;\n                }\n                else {\n                    *(arg_8h + 0x9c) = 0x221;\n                    *(arg_8h + 0xa0) = 0x8f;\n                    *(arg_8h + 0xa4) = 8;\n                }\n            }\n            *(arg_8h + 0x20) = *(arg_8h + 0x90);\n            *(arg_8h + 0x24) = *(arg_8h + 0x94);\n            *(arg_8h + 0x88) = 0;\n            var_8h = arg_8h + 0x212;\n            var_10h = arg_8h + 0x28;\n            for (var_ch = 0; var_ch < *(arg_8h + 0xc); var_ch = var_ch + 1) {\n                fcn.0007f7f0(var_10h, 0x850118dc, *var_8h);\n                var_10h = var_10h + 2;\n                var_8h = var_8h + 1;\n            }\n            uVar1 = *(arg_8h + 0x90);\n            *(arg_8h + 0x90) = *(arg_8h + 0xc) + *(arg_8h + 0x90);\n            *(arg_8h + 0x94) = *(arg_8h + 0x94) + CARRY4(*(arg_8h + 0xc), uVar1);\n            return *(arg_8h + 0xc);\n        }\n        if ((*(arg_8h + 0x112 + *(arg_8h + 4)) & 0xf0) == 0x40) {\n            if (*(arg_8h + 0x8c) == '@') {\n                *(arg_8h + 0x101) = *(arg_8h + 0x112 + *(arg_8h + 4));\n                fcn.00065260(arg_8h);\n            }\n            else {\n                bVar2 = true;\n            }\n        }\n        else {\n            if (*(arg_8h + 0x112 + *(arg_8h + 4)) - 0x26 < 0xce) {\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n            bVar2 = true;\n        }\n        if (0xe < var_ch) {\n            *(arg_8h + 0x100) = 1;\n            goto code_r0x00064be0;\n        }\n        var_ch = var_ch + 1;\n    } while( true );\n}\n",
        "token_count": 2270
    },
    "000655e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000655e0(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = fcn.00065220(arg_8h);\n    if (iVar1 == 0) {\n        *(arg_8h + 0x28) = 0;\n        *(arg_8h + 0x48) = 0;\n        iVar1 = fcn.000649d0(arg_8h);\n        if (iVar1 == 0) {\n            uVar2 = 0;\n        }\n        else {\n            if (*(arg_8h + 0x1c) != 0) {\n                (**(arg_8h + 0x1c))(arg_8h);\n            }\n            uVar2 = fcn.000656d0(arg_8h);\n        }\n    }\n    else {\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 211
    },
    "00065ab0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00065ab0(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    uint8_t uVar3;\n    uint32_t uVar4;\n    uint8_t uVar5;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00065260(arg_8h);\n    if (*(arg_8h + 0x109) == 'f') {\n        *(arg_8h + 0x98) = *(arg_8h + 0x112 + *(arg_8h + 4)) * 0x20 + -0x7af7d9c8;\n        if ((*(arg_8h + 0x98) != 0) && (**(arg_8h + 0x98) != 0x244)) {\n            *(arg_8h + 0x103) = 0;\n        }\n    }\n    else if (*(arg_8h + 0x109) == -0xe) {\n        *(arg_8h + 0x98) = *(arg_8h + 0x112 + *(arg_8h + 4)) * 0x20 + -0x7af7b9c8;\n        if ((*(arg_8h + 0x98) != 0) && (**(arg_8h + 0x98) != 0x244)) {\n            *(arg_8h + 0x108) = 0;\n        }\n    }\n    else if (((*(arg_8h + 0x109) == -0xd) &&\n             (*(arg_8h + 0x98) = *(arg_8h + 0x112 + *(arg_8h + 4)) * 0x20 + -0x7af7f9c8,  *(arg_8h + 0x98) != 0)) &&\n            (**(arg_8h + 0x98) != 0x244)) {\n        *(arg_8h + 0x106) = 0;\n    }\n    if ((*(arg_8h + 0x98) == 0) || (**(arg_8h + 0x98) == 0x244)) {\n        *(arg_8h + 0x98) = *(arg_8h + 0x112 + *(arg_8h + 4)) * 0x20 + -0x7af819c8;\n    }\n    if (**(arg_8h + 0x98) == 0x220) {\n        *(arg_8h + 0x98) = 0x8508db98;\n    }\n    if (**(arg_8h + 0x98) == 0x216) {\n        iVar1 = *(*(arg_8h + 0x98) + 0x1c);\n        if ((*(arg_8h + 0x109) == 'f') && (*(iVar1 * 0x10 + -0x7af76f64) != 0)) {\n            uVar4 = fcn.00065360(arg_8h);\n            *(arg_8h + 0x98) = ((uVar4 & 0xff) >> 3 & 7U) * 0x20 + *(iVar1 * 0x10 + -0x7af76f64);\n            if ((*(arg_8h + 0x98) != 0) && (**(arg_8h + 0x98) != 0x244)) {\n                *(arg_8h + 0x103) = 0;\n                return;\n            }\n        }\n        else if ((*(arg_8h + 0x109) == -0xe) && (*(iVar1 * 0x10 + -0x7af76f60) != 0)) {\n            uVar4 = fcn.00065360(arg_8h);\n            *(arg_8h + 0x98) = ((uVar4 & 0xff) >> 3 & 7U) * 0x20 + *(iVar1 * 0x10 + -0x7af76f60);\n            if ((*(arg_8h + 0x98) != 0) && (**(arg_8h + 0x98) != 0x244)) {\n                *(arg_8h + 0x108) = 0;\n                return;\n            }\n        }\n        else if ((*(arg_8h + 0x109) == -0xd) && (*(iVar1 * 0x10 + -0x7af76f5c) != 0)) {\n            uVar4 = fcn.00065360(arg_8h);\n            *(arg_8h + 0x98) = ((uVar4 & 0xff) >> 3 & 7U) * 0x20 + *(iVar1 * 0x10 + -0x7af76f5c);\n            if ((*(arg_8h + 0x98) != 0) && (**(arg_8h + 0x98) != 0x244)) {\n                *(arg_8h + 0x106) = 0;\n                return;\n            }\n        }\n        if ((*(arg_8h + 0x109) == '\\0') || (**(arg_8h + 0x98) == 0x216)) {\n            uVar4 = fcn.00065360(arg_8h);\n            *(arg_8h + 0x98) = ((uVar4 & 0xff) >> 3 & 7U) * 0x20 + *(iVar1 * 0x10 + -0x7af76f68);\n        }\n        if (*(arg_8h + 0x112 + *(arg_8h + 4)) == '\\x01') {\n            uVar4 = fcn.00065360(arg_8h);\n            uVar5 = (uVar4 & 0xff) >> 3 & 7;\n            uVar4 = fcn.00065360(arg_8h);\n            cVar2 = (uVar4 & 0xff) >> 6;\n            uVar3 = fcn.00065360(arg_8h);\n            if ((uVar5 == 3) && (cVar2 == '\\x03')) {\n                *(arg_8h + 0x98) = (uVar3 & 7) * 0x20 + -0x7af787c8;\n                fcn.00065260(arg_8h);\n            }\n            else if ((uVar5 == 7) && (cVar2 == '\\x03')) {\n                *(arg_8h + 0x98) = (uVar3 & 7) * 0x20 + -0x7af788c8;\n                fcn.00065260(arg_8h);\n            }\n            else {\n                *(arg_8h + 0x98) = uVar5 * 0x20 + -0x7af789c8;\n            }\n        }\n        else if (*(arg_8h + 0x112 + *(arg_8h + 4)) == -0x52) {\n            uVar4 = fcn.00065360(arg_8h);\n            uVar3 = (uVar4 & 0xff) >> 3 & 7;\n            uVar4 = fcn.00065360(arg_8h);\n            cVar2 = (uVar4 & 0xff) >> 6;\n            if ((uVar3 == 5) && (cVar2 == '\\x03')) {\n                *(arg_8h + 0x98) = 0x85088e38;\n                fcn.00065260(arg_8h);\n            }\n            else if ((uVar3 == 6) && (cVar2 == '\\x03')) {\n                *(arg_8h + 0x98) = 0x85088e58;\n                fcn.00065260(arg_8h);\n            }\n            else if ((uVar3 == 7) && (cVar2 == '\\x03')) {\n                *(arg_8h + 0x98) = 0x85088e78;\n                fcn.00065260(arg_8h);\n            }\n            else {\n                *(arg_8h + 0x98) = uVar3 * 0x20 + -0x7af775c8;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 1886
    },
    "00066060": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nint32_t __fastcall fcn.00066060(uint param_1)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    if (*0x8509ec5c == 0) {\n        iVar1 = 0x21590064;\n    }\n    else {\n        iVar1 = fcn.0006b490(param_1);\n        if (iVar1 == 0) {\n            *0x8509ec3c = 1;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 128
    },
    "000660a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.000660a0(void)\n\n{\n    if (*0x8509ec3c != 0) {\n        fcn.000663a0();\n        *0x8509ec3c = 0;\n    }\n    return;\n}\n",
        "token_count": 55
    },
    "000660c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.000660c0(uint arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    if (*0x8509ec3c == 0) {\n        iVar1 = 0x21590001;\n    }\n    else {\n        iVar1 = fcn.00066310(arg_8h, arg_ch);\n        if (iVar1 == 0) {\n            *(*arg_ch + 0x70) = 1;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 125
    },
    "00066100": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00066100(uint arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    if (*0x8509ec3c == 0) {\n        iVar1 = 0x21590001;\n    }\n    else {\n        iVar1 = fcn.00066280(arg_8h, arg_ch);\n        if (iVar1 == 0) {\n            *(*arg_ch + 0x70) = 1;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 124
    },
    "00066280": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00066280(uint arg_8h, int32_t *arg_ch)\n\n{\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00066610(*0x8509eca8, arg_8h, &var_8h);\n    if ((var_4h == 0) &&\n       (var_4h = fcn.00067020((*(*0x8509ec40 + var_8h * 4) - *0x8509eca8) + *0x8509ec44, *0x8509eca8 - *0x8509ec44, 6, 0\n                              , arg_ch),  var_4h == 0)) {\n        *(*arg_ch + 8) = *(*0x8509ec40 + var_8h * 4);\n    }\n    return var_4h;\n}\n",
        "token_count": 220
    },
    "00066310": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00066310(uint arg_8h, int32_t *arg_ch)\n\n{\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00060f50(*0x8509eca8, arg_8h, &var_8h);\n    if (((var_4h == 0) && (var_4h = fcn.00060f50(*0x8509ec44, arg_8h, &var_ch),  var_4h == 0)) &&\n       (var_4h = fcn.00067020(var_ch, *0x8509eca8 - *0x8509ec44, 6, 0, arg_ch),  var_4h == 0)) {\n        *(*arg_ch + 8) = var_8h;\n    }\n    return var_4h;\n}\n",
        "token_count": 214
    },
    "00066440": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00066440(uint arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_ch == 0) {\n        iVar1 = 0x21590066;\n    }\n    else if (arg_10h == 0) {\n        iVar1 = 0x21590067;\n    }\n    else if (arg_14h == 0) {\n        iVar1 = 0x21590068;\n    }\n    else if (arg_18h == 0) {\n        iVar1 = 0x21590069;\n    }\n    else {\n        iVar1 = fcn.00066610(arg_ch, arg_10h, &var_4h);\n        if (iVar1 == 0) {\n            iVar1 = fcn.000664c0(arg_8h, var_4h, arg_14h, arg_18h);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 250
    },
    "000664c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.000664c0(uint arg_8h, uint arg_ch, uint arg_10h, int32_t *arg_14h)\n\n{\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_8h = fcn.00066b30(arg_8h, arg_ch, &var_ch, &var_10h, &var_4h);\n    if (var_8h == 0) {\n        var_8h = fcn.00067c30(var_ch, arg_10h, arg_14h);\n        if (var_8h == 0) {\n            *(*arg_14h + 0x74) = arg_8h;\n        }\n        fcn.00066c40(var_10h, var_4h);\n    }\n    return var_8h;\n}\n",
        "token_count": 203
    },
    "00066530": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00066530(uint arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_ch == 0) {\n        var_ch = 0x21590066;\n    }\n    else if (arg_10h == 0) {\n        var_ch = 0x21590067;\n    }\n    else if (arg_14h == 0) {\n        var_ch = 0x21590068;\n    }\n    else {\n        var_ch = fcn.00066610(arg_ch, arg_10h, &var_4h);\n        if ((var_ch == 0) && (var_ch = fcn.00066b30(arg_8h, var_4h, arg_14h, &var_10h, &var_8h),  var_ch == 0)) {\n            fcn.00066c40(var_10h, var_8h);\n        }\n    }\n    return var_ch;\n}\n",
        "token_count": 256
    },
    "000665c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.000665c0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_8h = fcn.00066b30(arg_8h, arg_ch, arg_10h, &var_ch, &var_4h);\n    if (var_8h == 0) {\n        fcn.00066c40(var_ch, var_4h);\n    }\n    return var_8h;\n}\n",
        "token_count": 126
    },
    "00066610": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00066610(int32_t arg_8h, int32_t arg_ch, uint *arg_10h)\n\n{\n    int32_t iVar1;\n    uint var_270h;\n    uint var_26ch;\n    int32_t var_268h;\n    uint var_264h;\n    uint var_260h;\n    int32_t var_1c4h;\n    int32_t var_1c0h;\n    int32_t var_1b0h;\n    int32_t var_1a0h;\n    uint var_198h;\n    uint var_4h;\n    \n    if (arg_8h == 0) {\n        var_268h = 0x21590065;\n    }\n    else if (arg_ch == 0) {\n        var_268h = 0x21590066;\n    }\n    else if (arg_10h == NULL) {\n        var_268h = 0x21590067;\n    }\n    else {\n        var_268h = fcn.00060f50(arg_8h, arg_ch, &var_264h);\n        if (var_268h == 0) {\n            var_270h = var_264h;\n            var_4h = 0x40;\n            var_268h = fcn.00066190(&var_270h, &var_4h, 1, &var_26ch);\n            if (var_268h == 0) {\n                fcn.000655a0(&var_260h);\n                fcn.00065640(&var_260h, 0x20);\n                fcn.000656a0(&var_260h, 0);\n                fcn.000651e0(&var_260h, var_264h, 0x40);\n                var_268h = -1;\n                do {\n                    iVar1 = fcn.000655e0(&var_260h);\n                    if (iVar1 == 0) goto code_r0x0006675a;\n                } while ((((var_1c4h != 0x118) || (var_1c0h != 0x8c)) || (var_1b0h != 0x25)) || (var_1a0h != 0x8f));\n                *arg_10h = var_198h;\n                var_268h = 0;\ncode_r0x0006675a:\n                fcn.000661f0(var_270h, var_4h, var_26ch);\n            }\n        }\n    }\n    return var_268h;\n}\n",
        "token_count": 574
    },
    "00066780": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00066780(void)\n\n{\n    uint32_t *puVar1;\n    int32_t var_18h;\n    uint var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_10h = 0;\n    var_18h = fcn.00066c60(0x8509ec44);\n    if (var_18h == 0) {\n        puVar1 = fcn.00068550();\n        if (puVar1 == NULL) {\n            var_18h = 0x21590005;\n        }\n        else {\n            if ((*puVar1 < *0x8509eca8) || (*0x8509eca8 + *0x8509ecac <= *puVar1)) {\n                var_4h = 0;\n                while ((var_4h < *0x8509ecac - 8U &&\n                       ((((*(*0x8509ec44 + var_4h) != puVar1 || (*(*0x8509ec44 + var_4h + -2) != 0x5c7)) ||\n                         (var_10h = (*(*0x8509ec44 + var_4h + 4) - *0x8509eca8) + *0x8509ec44,  var_10h < *0x8509ec44))\n                        || (*0x8509ec44 + *0x8509ecac <= var_10h + puVar1[2] * 4))))) {\n                    var_4h = var_4h + 1;\n                }\n            }\n            else {\n                var_10h = (*puVar1 - *0x8509eca8) + *0x8509ec44;\n            }\n            if (var_10h == 0) {\n                var_18h = 0x21590005;\n            }\n            else {\n                *0x8509ec40 = fcn.00036330(puVar1[2] << 2);\n                if (*0x8509ec40 == 0) {\n                    var_18h = 0x21590004;\n                }\n                else {\n                    fcn.0007f904(*0x8509ec40, var_10h, puVar1[2] << 2);\n                    var_18h = 0;\n                }\n            }\n        }\n        if (var_18h != 0) {\n            fcn.00036460(*0x8509ec44);\n            *0x8509ec44 = 0;\n            fcn.00036460(*0x8509ec40);\n            *0x8509ec40 = 0;\n        }\n    }\n    return var_18h;\n}\n",
        "token_count": 619
    },
    "00066930": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00066930(uint32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_140h;\n    int32_t var_13ch;\n    uint var_138h;\n    uint32_t *var_120h;\n    uint var_11ch;\n    uint32_t *var_118h;\n    uint32_t var_114h;\n    uint var_110h;\n    int32_t iStack272;\n    int32_t var_4h;\n    \n    var_120h = NULL;\n    if (arg_8h == NULL) {\n        var_13ch = 0x21590065;\n    }\n    else if (*0x8509ec48 == 0xffffffff) {\n        var_13ch = 0x21590005;\n    }\n    else if (*0x8509ec48 == 0) {\n        *0x8509ec48 = 0xffffffff;\n        var_13ch = fcn.00035930(0x10, &var_120h);\n        if (var_13ch == 0) {\n            var_118h = var_120h + 1;\n            var_13ch = 0x21590005;\n            for (var_114h = 0; var_114h < *var_120h; var_114h = var_114h + 1) {\n                iVar1 = (**0x8500d1dc)(var_118h[var_114h * 4], &var_11ch);\n                if (iVar1 == 0) {\n                    (**0x8500d1cc)(var_11ch, &var_138h);\n                    var_4h = fcn.0007f8ce(*(var_118h + var_114h * 0x10 + 6), 1, &var_110h, 0x104, 0);\n                    (**0x8500d1c4)(&var_138h);\n                    if ((((var_4h == 0) && (iStack272 != 0)) && (var_110h == 0x20)) &&\n                       (iVar1 = fcn.0007f6b8(iStack272, 0x850118e4, 0x20),  iVar1 == 0)) {\n                        *0x8509ec48 = var_118h[var_114h * 4];\n                        *arg_8h = *0x8509ec48;\n                        (**0x8500d2e4)();\n                        var_13ch = 0;\n                        break;\n                    }\n                    (**0x8500d2e4)();\n                }\n            }\n            fcn.00036460(var_120h);\n        }\n    }\n    else {\n        *arg_8h = *0x8509ec48;\n        var_13ch = 0;\n    }\n    return var_13ch;\n}\n",
        "token_count": 644
    },
    "00066b30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00066b30(int32_t arg_8h, uint32_t arg_ch, uint *arg_10h, uint *arg_14h, uint *arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    *arg_14h = 0;\n    *arg_18h = 0;\n    if (arg_8h == 1) {\n        var_8h = fcn.00068550();\n        if (var_8h == NULL) {\n            return -1;\n        }\n    }\n    else {\n        if (arg_8h != 2) {\n            return 0x21590065;\n        }\n        iVar1 = fcn.00068560();\n        if (iVar1 == 0) {\n            return -1;\n        }\n        iVar2 = fcn.00066cf0(arg_14h, arg_18h);\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        var_8h = iVar1 + 0x10;\n        arg_ch = arg_ch - 0x1000;\n    }\n    if (arg_ch < var_8h[2] || arg_ch == var_8h[2]) {\n        if ((*0x8509ec40 == 0) || (arg_8h != 1)) {\n            *arg_10h = *(*var_8h + arg_ch * 4);\n        }\n        else {\n            *arg_10h = *(*0x8509ec40 + arg_ch * 4);\n        }\n        var_ch = 0;\n    }\n    else {\n        var_ch = 0x21590066;\n    }\n    if (var_ch != 0) {\n        fcn.00066d90(*arg_14h, *arg_18h);\n    }\n    return var_ch;\n}\n",
        "token_count": 440
    },
    "00066c60": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00066c60(uint arg_8h)\n\n{\n    int32_t var_114h;\n    uint var_110h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00035930(0xb, &var_114h);\n    if (var_4h == 0) {\n        var_8h = var_114h + 4;\n        fcn.0004a010(&var_110h, 0x104, 0x85011908, var_114h + 0x20 + *(var_114h + 0x1e));\n        var_4h = fcn.00060b90(0, &var_110h, *(var_8h + 8), arg_8h, 0);\n        fcn.00036460(var_114h);\n    }\n    return var_4h;\n}\n",
        "token_count": 212
    },
    "00066cf0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00066cf0(uint *arg_8h, int32_t *arg_ch)\n\n{\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    *arg_8h = 0;\n    *arg_ch = 0;\n    var_4h = fcn.00066930(&var_10h);\n    if (var_4h == 0) {\n        var_8h = fcn.00036360(0x18);\n        if (var_8h == 0) {\n            var_4h = 0x21590004;\n        }\n        else {\n            var_4h = (**0x8500d1dc)(var_10h, &var_ch);\n            if (var_4h == 0) {\n                (**0x8500d1cc)(var_ch, var_8h);\n                *arg_8h = var_ch;\n                *arg_ch = var_8h;\n            }\n            else {\n                fcn.00036460(var_8h);\n                var_4h = fcn.0007f742(var_4h);\n            }\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 277
    },
    "00066d90": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00066d90(int32_t arg_8h, uint arg_ch)\n\n{\n    if (arg_8h != 0) {\n        (**0x8500d1c4)(arg_ch);\n        (**0x8500d2e4)();\n        fcn.00036460(arg_ch);\n    }\n    return;\n}\n",
        "token_count": 77
    },
    "00066dc0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00066dc0(void)\n\n{\n    int32_t iVar1;\n    int32_t arg_ch;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint *in_FS_OFFSET;\n    uint var_18h;\n    uint var_284h;\n    uint var_280h;\n    uint var_27ch;\n    uint var_274h;\n    uint var_270h;\n    int32_t var_1d4h;\n    int32_t var_1d0h;\n    int32_t var_1b0h;\n    uint var_1a8h;\n    uchar *puStack28;\n    uint var_10h;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x8507bb08;\n    uStack16 = 0x8507b910;\n    var_10h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00066dc0::var_10h;\n    puStack28 = &stack0xfffffd68;\n    var_27ch = 0;\n    fcn.000655a0(&fcn.00066dc0::var_270h);\n    fcn.00065640(&fcn.00066dc0::var_270h, 0x20);\n    fcn.000656a0(&fcn.00066dc0::var_270h, 0);\n    iVar1 = (**0x8500d290)(*0x8500d26c, 0x1000, 0, 0, 0);\n    if (iVar1 == 0) {\n        var_27ch = 0;\n    }\n    else {\n        var_4h = 0;\n        (**0x8500d29c)(iVar1, 0, 0);\n        arg_ch = (**0x8500d0e8)(iVar1, 0, 1, 0, 0, 0x10);\n        if (arg_ch != 0) {\n            fcn.000651e0(&fcn.00066dc0::var_270h, arg_ch, 0x1000);\n            do {\n                iVar2 = fcn.000655e0(0x66ed8);\n                if ((((iVar2 == 0) || (var_1d4h == 0x1be)) || (var_1d4h == 0x1bf)) ||\n                   (uVar3 = fcn.000656d0(&fcn.00066dc0::var_270h),  0xfeb < uVar3)) goto code_r0x00066f86;\n            } while (((var_1d4h != 0xf4) || (var_1d0h != 0x8c)) || (var_1b0h != 0x8d));\n            var_27ch = var_1a8h;\n        }\ncode_r0x00066f86:\n        var_4h = 0xffffffff;\n        if (arg_ch != 0) {\n            (**0x8500d0b0)(arg_ch, iVar1);\n        }\n        (**0x8500d298)(iVar1);\n        if (iVar1 != 0) {\n            (**0x8500d2a8)(iVar1);\n        }\n    }\n    *in_FS_OFFSET = var_10h;\n    return var_27ch;\n}\n",
        "token_count": 759
    },
    "000675f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000675f0(int32_t **arg_8h)\n\n{\n    int32_t *arg_8h_00;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((arg_8h != NULL) && (*arg_8h != NULL)) {\n        arg_8h_00 = *arg_8h;\n        *arg_8h = NULL;\n        if (arg_8h_00[5] != arg_8h_00 + 0x10) {\n            fcn.00036460(arg_8h_00[5]);\n        }\n        if (*arg_8h_00 != arg_8h_00 + 0x57) {\n            fcn.00036460(*arg_8h_00);\n        }\n        fcn.0007f916(arg_8h_00, 0, 0x70);\n        fcn.00036460(arg_8h_00);\n    }\n    return;\n}\n",
        "token_count": 218
    },
    "00067680": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00067680(int32_t arg_8h, uint arg_ch)\n\n{\n    uint8_t uVar1;\n    uint uVar2;\n    uint var_4h;\n    \n    if ((arg_8h == 0) || (*(arg_8h + 8) == 0)) {\n        uVar2 = 0x21590066;\n    }\n    else {\n        uVar1 = fcn.00067a40();\n        if (uVar1 == 0) {\n            uVar2 = 0x21590064;\n        }\n        else {\n            uVar2 = fcn.00067990(arg_8h + 0x2cU & 0xffffff00 | uVar1, *(arg_8h + 8), 0x8507b670, 1, arg_8h + 0x2cU, \n                                 arg_ch, *(arg_8h + 0x10));\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 220
    },
    "000676f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000676f0(int32_t arg_8h)\n\n{\n    uint var_8h;\n    uint32_t var_4h;\n    \n    if (*(arg_8h + 0x70) == 0) {\n        **(arg_8h + 8) = **(arg_8h + 0x14);\n    }\n    else if (*(arg_8h + 0x70) == 1) {\n        for (var_4h = 0; var_4h < *(arg_8h + 4); var_4h = var_4h + 1) {\n            *(*(arg_8h + 8) + var_4h) = *(*(arg_8h + 0x14) + *(arg_8h + 0xc) + var_4h);\n        }\n    }\n    return;\n}\n",
        "token_count": 194
    },
    "00067780": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00067780(int32_t *arg_8h, uint32_t arg_ch)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    uint var_4h;\n    \n    arg_8h_00 = *arg_8h;\n    if (arg_ch < 0x18) {\n        *arg_8h = arg_8h + 0x57;\n    }\n    else {\n        iVar1 = fcn.00036360(arg_ch);\n        *arg_8h = iVar1;\n        if (*arg_8h == 0) {\n            return 0x21590004;\n        }\n    }\n    if ((arg_8h_00 != 0) && (arg_8h_00 != *arg_8h)) {\n        fcn.0007f904(*arg_8h, arg_8h_00, arg_8h[6]);\n    }\n    if ((arg_8h_00 != 0) && (arg_8h_00 != arg_8h + 0x57)) {\n        fcn.00036460(arg_8h_00);\n    }\n    arg_8h[6] = arg_ch;\n    return 0;\n}\n",
        "token_count": 274
    },
    "00067820": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00067820(int32_t arg_8h, uint arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    uint uVar1;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (arg_10h == 0) {\n        var_8h = arg_8h;\n        *(arg_14h + 0x10) = arg_ch;\n    }\n    else {\n        var_4h = fcn.00066260(arg_8h, arg_ch, &var_8h, arg_14h + 0x10);\n        if (var_4h != 0) {\n            return var_4h;\n        }\n    }\n    if (*(arg_14h + 0x10) < 0x18) {\n        *(arg_14h + 0x14) = arg_14h + 0x40;\n    }\n    else {\n        uVar1 = fcn.00036360(*(arg_14h + 0x10));\n        *(arg_14h + 0x14) = uVar1;\n        if (*(arg_14h + 0x14) == 0) {\n            *(arg_14h + 0x10) = 0;\n            return 0x21590004;\n        }\n    }\n    fcn.0007f904(*(arg_14h + 0x14), var_8h, *(arg_14h + 0x10));\n    *(arg_14h + 0xc) = arg_8h - var_8h;\n    return 0;\n}\n",
        "token_count": 366
    },
    "000678e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000678e0(uchar *arg_8h, uint arg_ch, int32_t arg_10h, uint *arg_14h, uint arg_18h, int32_t arg_1ch)\n\n{\n    uchar *var_4h;\n    \n    var_4h = arg_8h;\n    if (arg_14h != NULL) {\n        *arg_8h = 0x6a;\n        arg_8h[1] = arg_18h;\n        var_4h = arg_8h + 2;\n    }\n    *var_4h = 0x68;\n    fcn.00052470(var_4h + 1, arg_ch);\n    var_4h = var_4h + 5;\n    *var_4h = 0xc3;\n    if (arg_10h == 0) {\n        if (arg_14h != NULL) {\n            *arg_14h = 0;\n        }\n    }\n    else if (arg_14h != NULL) {\n        *arg_14h = var_4h;\n    }\n    if (arg_1ch != 0) {\n        while (var_4h = var_4h + 1,  var_4h <= arg_8h + arg_1ch) {\n            *var_4h = 0x90;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 313
    },
    "00067990": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl\nfcn.00067990(uint arg_8h, int32_t arg_ch, uint noname_2, int32_t arg_14h, uint *arg_18h, uint arg_1ch, int32_t arg_20h)\n\n{\n    uchar *var_8h;\n    uint var_4h;\n    \n    var_4h = CONCAT13(arg_8h, CONCAT12(0xcd, CONCAT11(arg_1ch, 0x6a)));\n    fcn.00052470(arg_ch, var_4h);\n    var_8h = arg_ch + 3;\n    if ((arg_14h != 0) && (arg_8h != -0x3d)) {\n        var_8h = arg_ch + 4;\n        *var_8h = 0xc3;\n    }\n    if (arg_14h == 0) {\n        if (arg_18h != NULL) {\n            *arg_18h = 0;\n        }\n    }\n    else if (arg_18h != NULL) {\n        *arg_18h = var_8h;\n    }\n    if (arg_20h != 0) {\n        while (var_8h = var_8h + 1,  var_8h < arg_ch + arg_20h) {\n            *var_8h = 0x90;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 322
    },
    "00067a50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00067a50(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    if (*0x8509ec5c == 0) {\n        *0x8509eca0 = *arg_8h;\n        *0x8509eca4 = arg_8h[1];\n        *0x8509eca8 = arg_8h[2];\n        *0x8509ecac = arg_8h[3];\n        iVar1 = fcn.000663c0();\n        if (iVar1 == 0) {\n            *0x8509ec5c = 1;\n            iVar1 = fcn.00066030();\n            if (iVar1 != 0) {\n                fcn.00067ad0();\n            }\n        }\n    }\n    else {\n        iVar1 = 0x21590006;\n    }\n    return iVar1;\n}\n",
        "token_count": 207
    },
    "00067ad0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00067ad0(void)\n\n{\n    uint32_t var_4h;\n    \n    if (*0x8509ec5c != 0) {\n        for (var_4h = 0; var_4h < *0x8509ec54; var_4h = var_4h + 1) {\n        }\n        fcn.00036460(*0x8509ec50);\n        fcn.00066050();\n        fcn.000663e0();\n        *0x8509ec5c = 0;\n    }\n    return;\n}\n",
        "token_count": 128
    },
    "00067b30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00067b30(uint arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, uint *arg_18h)\n\n{\n    uint uVar1;\n    \n    if (arg_18h == NULL) {\n        uVar1 = 0x21590069;\n    }\n    else {\n        *arg_18h = 0;\n        if (arg_ch == 0) {\n            uVar1 = 0x21590066;\n        }\n        else if (arg_10h == 0) {\n            uVar1 = 0x21590067;\n        }\n        else if (arg_14h == 0) {\n            uVar1 = 0x21590068;\n        }\n        else if (*0x8509ec5c == 0) {\n            uVar1 = 0x21590001;\n        }\n        else if (*0x8509ec54 == -1) {\n            uVar1 = 0x21590007;\n        }\n        else {\n            uVar1 = fcn.00066440(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 277
    },
    "00067bc0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00067bc0(uint arg_8h, uint arg_ch, int32_t arg_10h, uint *arg_14h)\n\n{\n    uint uVar1;\n    \n    if (arg_14h == NULL) {\n        uVar1 = 0x21590068;\n    }\n    else {\n        *arg_14h = 0;\n        if (arg_10h == 0) {\n            uVar1 = 0x21590067;\n        }\n        else if (*0x8509ec5c == 0) {\n            uVar1 = 0x21590001;\n        }\n        else if (*0x8509ec54 == -1) {\n            uVar1 = 0x21590007;\n        }\n        else {\n            uVar1 = fcn.000664c0(arg_8h, arg_ch, arg_10h, arg_14h);\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 211
    },
    "00067c30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00067c30(int32_t arg_8h, int32_t arg_ch, uint *arg_10h)\n\n{\n    bool bVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint arg_14h;\n    uint *arg_18h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint *var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = 0;\n    bVar1 = false;\n    var_4h = 0;\n    var_ch = 0;\n    var_18h = 0;\n    var_28h = 0;\n    var_24h = 0;\n    var_20h = 0;\n    var_10h = arg_10h;\n    if (arg_10h == NULL) {\n        return 0x21590067;\n    }\n    *arg_10h = 0;\n    if (arg_8h == 0) {\n        return 0x21590065;\n    }\n    if (arg_ch == 0) {\n        return 0x21590066;\n    }\n    if (*0x8509ec5c == 0) {\n        return 0x21590001;\n    }\n    var_1ch = fcn.00066210(&var_ch, &var_18h);\n    if (var_1ch == 0) {\n        var_4h = 1;\n        var_1ch = 0x21590005;\n        for (var_8h = 0; var_8h < *0x8509ec54; var_8h = var_8h + 1) {\n            if ((*(*0x8509ec50 + 4 + var_8h * 8) != 0) && (*(*(*0x8509ec50 + 4 + var_8h * 8) + 8) == arg_8h)) {\n                if (*(*(*0x8509ec50 + 4 + var_8h * 8) + 0x78) != arg_ch) {\n                    fcn.00066230(var_ch, var_18h);\n                    return 0x21590064;\n                }\n                *(*(*0x8509ec50 + 4 + var_8h * 8) + 0x88) = *(*(*0x8509ec50 + 4 + var_8h * 8) + 0x88) + 1;\n                var_1ch = 0;\n                *arg_10h = *(*0x8509ec50 + 4 + var_8h * 8);\n                break;\n            }\n        }\n        fcn.00066230(var_ch, var_18h);\n        var_4h = 0;\n        if (var_1ch == 0) {\n            return 0;\n        }\n        if (*0x8509ec54 == 0xff) {\n            return 0x21590007;\n        }\n        arg_18h = &var_10h;\n        arg_14h = 1;\n        uVar2 = fcn.00067770();\n        var_1ch = fcn.00067020(arg_8h, 0, uVar2, arg_14h, arg_18h);\n        if (var_1ch != 0) {\n            return var_1ch;\n        }\n        var_10h[0xd] = *var_10h;\n        var_10h[0xf] = var_10h[6];\n        var_1ch = fcn.00066250(var_10h + 0xd, var_10h + 0xf, var_10h + 0xe);\n        if (var_1ch == 0) {\n            var_10h[0x1e] = arg_ch;\n            var_10h[0x1c] = 1;\n            uVar2 = fcn.00067770();\n            var_10h[0x20] = uVar2;\n            var_10h[0x1f] = arg_8h;\n            var_1ch = fcn.00066190(var_10h + 0x1f, var_10h + 0x20, 0, var_10h + 0x21);\n            if (var_1ch == 0) {\n                var_14h = 1;\n                var_1ch = fcn.00066210(&var_ch, &var_18h);\n                if (var_1ch == 0) {\n                    var_4h = 1;\n                    var_28h = var_10h[0x1f];\n                    var_24h = var_10h[0x20];\n                    var_1ch = fcn.00066150(&var_28h, &var_24h, &var_20h);\n                    if (var_1ch == 0) {\n                        bVar1 = true;\n                        for (var_8h = 0; (var_8h < *0x8509ec54 && (*(*0x8509ec50 + 4 + var_8h * 8) != 0));\n                            var_8h = var_8h + 1) {\n                        }\n                        if (*0x8509ec54 <= var_8h) {\n                            iVar3 = fcn.00036390(0x8509ec50, *0x8509ec54 << 3, *0x8509ec54 * 8 + 8);\n                            if (iVar3 == -1) {\n                                var_1ch = 0x21590004;\n                                fcn.000676f0(var_10h);\n                                goto code_r0x00067fe0;\n                            }\n                            var_8h = *0x8509ec54;\n                            *0x8509ec54 = *0x8509ec54 + 1;\n                        }\n                        var_1ch = fcn.00067680(var_10h, var_8h);\n                        if (var_1ch == 0) {\n                            fcn.00052470(*0x8509ec50 + 4 + var_8h * 8, var_10h);\n                            fcn.00052470(*0x8509ec50 + var_8h * 8, var_10h[0x1e]);\n                        }\n                    }\n                }\n            }\n        }\n    }\ncode_r0x00067fe0:\n    if (bVar1) {\n        fcn.00066170(var_28h, var_24h, var_20h);\n    }\n    if (var_4h != 0) {\n        fcn.00066230(var_ch, var_18h);\n    }\n    if (var_1ch == 0) {\n        fcn.000661f0(var_10h[0x1f], var_10h[0x20], var_10h[0x21]);\n        var_10h[0x1f] = 0;\n        var_10h[0x20] = 0;\n        var_10h[0x21] = 0;\n        *arg_10h = var_10h;\n    }\n    else {\n        if (var_14h != 0) {\n            fcn.000661f0(var_10h[0x1f], var_10h[0x20], var_10h[0x21]);\n        }\n        fcn.000675f0(&var_10h);\n    }\n    return var_1ch;\n}\n",
        "token_count": 1725
    },
    "00068090": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00068090(int32_t *arg_8h)\n\n{\n    bool bVar1;\n    uint uVar2;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    bVar1 = false;\n    var_4h = 0;\n    var_10h = 0;\n    var_1ch = 0;\n    var_18h = 0;\n    var_34h = 0;\n    var_2ch = 0;\n    var_28h = 0;\n    var_24h = 0;\n    var_ch = 0;\n    var_14h = *arg_8h;\n    if (*0x8509ec5c == 0) {\n        return 0x21590001;\n    }\n    if ((var_14h == 0) || ((*(var_14h + 0x70) != 0 && (*(var_14h + 0x70) != 1)))) {\n        return 0x21590065;\n    }\n    var_30h = *(var_14h + 8);\n    if (((var_30h == 0) || (*(var_14h + 0x14) == 0)) || (*(var_14h + 0x10) == 0)) {\n        return 0x21590065;\n    }\n    var_20h = fcn.00066410(var_14h, &var_24h, &var_ch);\n    if (var_20h != 0) {\n        return var_20h;\n    }\n    if (*(var_14h + 0x7c) == 0) {\n        uVar2 = fcn.00067770();\n        *(var_14h + 0x80) = uVar2;\n        *(var_14h + 0x7c) = *(var_14h + 8);\n        var_20h = fcn.00066190(var_14h + 0x7c, var_14h + 0x80, 0, var_14h + 0x84);\n        if (var_20h != 0) goto code_r0x00068315;\n    }\n    var_20h = fcn.00066210(&var_10h, &var_1ch);\n    if (var_20h == 0) {\n        var_4h = 1;\n        var_34h = *(var_14h + 0x7c);\n        var_2ch = *(var_14h + 0x80);\n        var_20h = fcn.00066150(&var_34h, &var_2ch, &var_28h);\n        if (var_20h == 0) {\n            bVar1 = true;\n            var_20h = fcn.00066250();\n            if (var_20h == 0) {\n                for (var_8h = 0; var_8h < *0x8509ec54; var_8h = var_8h + 1) {\n                    if (*(*0x8509ec50 + 4 + var_8h * 8) == var_14h) {\n                        *(*(*0x8509ec50 + 4 + var_8h * 8) + 0x88) = *(*(*0x8509ec50 + 4 + var_8h * 8) + 0x88) + -1;\n                        if (*(*(*0x8509ec50 + 4 + var_8h * 8) + 0x88) != 0) {\n                            var_20h = 0;\n                            goto code_r0x00068315;\n                        }\n                        fcn.00052470(*0x8509ec50 + 4 + var_8h * 8, 0);\n                        fcn.00052470(*0x8509ec50 + var_8h * 8, 0);\n                        var_8h = 0xffffffff;\n                        break;\n                    }\n                }\n                if (var_8h == 0xffffffff) {\n                    fcn.000676f0(var_14h);\n                    var_18h = 1;\n                    var_20h = 0;\n                }\n                else {\n                    var_20h = 0x21590005;\n                }\n            }\n        }\n    }\ncode_r0x00068315:\n    if (bVar1) {\n        fcn.00066170(var_34h, var_2ch, var_28h);\n    }\n    if (var_4h != 0) {\n        fcn.00066230(var_10h, var_1ch);\n    }\n    if ((var_20h == 0) && (var_18h != 0)) {\n        fcn.000661f0(*(var_14h + 0x7c), *(var_14h + 0x80), *(var_14h + 0x84));\n        fcn.000675f0(arg_8h);\n    }\n    fcn.00066c40(var_24h, var_ch);\n    return var_20h;\n}\n",
        "token_count": 1229
    },
    "00068390": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00068390(int32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h, uint32_t *arg_14h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t var_25ch;\n    uint var_258h;\n    int32_t var_1bch;\n    \n    if (*0x8509ec5c == 0) {\n        uVar1 = 0x21590001;\n    }\n    else if (arg_8h == 0) {\n        uVar1 = 0x21590065;\n    }\n    else if (arg_14h == NULL) {\n        uVar1 = 0x21590068;\n    }\n    else {\n        fcn.000655a0(&var_258h);\n        fcn.00065640(&var_258h, 0x20);\n        fcn.000656a0(&var_258h, 0);\n        fcn.000651e0(&var_258h, arg_8h, arg_ch);\n        var_25ch = 0;\n        *arg_14h = 0;\n        while (((var_25ch < arg_ch &&\n                (((arg_10h == 0 || (*arg_14h < arg_10h)) && (iVar2 = fcn.000655e0(&var_258h),  iVar2 != 0)))) &&\n               ((*arg_14h = *arg_14h + 1,  var_1bch != 0x1be && (var_1bch != 0x1bf))))) {\n            iVar2 = fcn.000656d0(&var_258h);\n            var_25ch = iVar2 + var_25ch;\n        }\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 409
    },
    "000684a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000684a0(uint *arg_8h)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_8h[0x1c] == 0) {\n        var_8h = **arg_8h;\n    }\n    else {\n        var_8h = *arg_8h;\n    }\n    return var_8h;\n}\n",
        "token_count": 91
    },
    "000684e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000684e0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    \n    if (*0x8509ec5c == 0) {\n        uVar1 = 0x21590001;\n    }\n    else {\n        uVar1 = fcn.00066530(arg_8h, arg_ch, arg_10h, arg_14h);\n    }\n    return uVar1;\n}\n",
        "token_count": 111
    },
    "00068510": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00068510(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    \n    if (*0x8509ec5c == 0) {\n        uVar1 = 0x21590001;\n    }\n    else {\n        uVar1 = fcn.000665c0(arg_8h, arg_ch, arg_10h);\n    }\n    return uVar1;\n}\n",
        "token_count": 100
    },
    "00068570": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00068570(uint arg_8h, uint arg_ch, int32_t *arg_10h, uint *arg_14h)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.00036360(0x8c);\n    *arg_10h = iVar1;\n    if (*arg_10h == 0) {\n        iVar1 = 0x21590004;\n    }\n    else {\n        fcn.0007f916(*arg_10h, 0, 0x8c);\n        iVar1 = fcn.00068650(1, arg_8h, arg_ch, *arg_10h);\n        if (iVar1 == 0) {\n            *arg_14h = *(*arg_10h + 8);\n        }\n        else {\n            fcn.00036460(*arg_10h);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 212
    },
    "000685f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.000685f0(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    if ((arg_8h == NULL) || (*arg_8h == 0)) {\n        iVar1 = 0x21590065;\n    }\n    else {\n        iVar1 = fcn.00068650(0, 0, 0, *arg_8h);\n        if (iVar1 == 0) {\n            fcn.00036460(*arg_8h);\n            *arg_8h = 0;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 143
    },
    "00068650": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x000686be)\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00068650(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint *var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    uchar var_8h;\n    uchar var_7h;\n    int32_t var_6h;\n    \n    var_ch._0_2_ = 0;\n    var_ch._2_2_ = 0;\n    var_8h = 0;\n    var_7h = 0;\n    var_6h._0_2_ = 0;\n    if (arg_14h == 0) {\n        return 0x21590068;\n    }\n    if (arg_8h == 0) {\n        if (*(arg_14h + 0x78) == 0) {\n            return 0x21590068;\n        }\n        arg_ch = *(arg_14h + 8);\n    }\n    else {\n        if (arg_ch == 0) {\n            return 0x21590065;\n        }\n        if (arg_10h == 0) {\n            return 0x21590067;\n        }\n    }\n    iVar2 = fcn.0005bd60();\n    var_18h = fcn.00036360(iVar2 * 0x18);\n    if (var_18h == 0) {\n        var_28h = 0x21590004;\n    }\n    else {\n        iVar2 = fcn.0005bd60();\n        var_14h = iVar2 * 6 + var_18h;\n        iVar2 = fcn.0005bd60();\n        *0x18 = iVar2 * 6 + var_18h;\n        iVar2 = fcn.0005bd60();\n        *0x18 = *0x18 + iVar2 * 6;\n        var_10h = 0;\n        while (uVar3 = fcn.0005bd60(),  var_10h < uVar3) {\n            var_28h = fcn.0005bd70(var_10h, var_10h * 6 + var_18h);\n            if ((var_28h != 0) || (var_28h = fcn.0005bd90(var_10h, var_10h * 6 + var_14h),  var_28h != 0))\n            goto code_r0x00068910;\n            var_10h = var_10h + 1;\n        }\n        if (arg_8h == 0) {\n            var_ch._0_2_ = *(arg_14h + 0x40);\n            var_ch._2_2_ = *(arg_14h + 0x40) >> 0x10;\n            uVar1 = *(arg_14h + 0x44);\n            var_8h = uVar1;\n            var_7h = uVar1 >> 8;\n            var_6h._0_2_ = uVar1 >> 0x10;\n        }\n        else {\n            var_1ch = *(var_18h + 2) + arg_ch * 8;\n            uVar1 = var_1ch[1];\n            var_ch._0_2_ = *var_1ch;\n            var_ch._2_2_ = *var_1ch >> 0x10;\n            var_8h = uVar1;\n            var_7h = uVar1 >> 8;\n            var_6h._0_2_ = uVar1 >> 0x10;\n            fcn.0007f916(arg_14h, 0, 0x8c);\n            *(arg_14h + 0x70) = 0;\n            *(arg_14h + 0x78) = arg_10h;\n            *(arg_14h + 8) = arg_ch;\n            *(arg_14h + 0x40) = *var_1ch;\n            *(arg_14h + 0x44) = var_1ch[1];\n            var_6h._0_2_ = arg_10h >> 0x10;\n            var_ch._0_2_ = arg_10h;\n            var_ch._2_2_ = 8;\n            var_8h = 0;\n            var_7h = 0x8e;\n        }\n        var_10h = 0;\n        while (uVar3 = fcn.0005bd60(),  var_10h < uVar3) {\n            var_1ch = *(var_18h + 2 + var_10h * 6) + arg_ch * 8;\n            *(stack0xfffffff8 + 4 + var_10h * 0xc) = CONCAT22(var_ch._2_2_, var_ch);\n            *(stack0xfffffff8 + 8 + var_10h * 0xc) = CONCAT22(var_6h, CONCAT11(var_7h, var_8h));\n            *(stack0xfffffff8 + var_10h * 0xc) = var_1ch;\n            var_10h = var_10h + 1;\n        }\n        fcn.00066210(&var_24h, &var_20h);\n        var_10h = 0;\n        while (uVar3 = fcn.0005bd60(),  var_10h < uVar3) {\n            fcn.00052470(*(stack0xfffffff8 + var_10h * 0xc), *(stack0xfffffff8 + 4 + var_10h * 0xc));\n            fcn.00052470(*(stack0xfffffff8 + var_10h * 0xc) + 4, *(stack0xfffffff8 + 8 + var_10h * 0xc));\n            var_10h = var_10h + 1;\n        }\n        fcn.00066230(var_24h, var_20h);\n        var_28h = 0;\ncode_r0x00068910:\n        fcn.00036460(var_18h);\n    }\n    return var_28h;\n}\n",
        "token_count": 1458
    },
    "00068930": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Switch with 1 destination removed at 0x0006898d\n\nuint __cdecl fcn.00068930(uint16_t *arg_8h)\n\n{\n    uint uVar1;\n    uint var_54h;\n    uint var_ch;\n    uint var_8h;\n    \n    if (arg_8h == NULL) {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        if (*arg_8h < 0xb2) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 151
    },
    "00069030": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Switch with 1 destination removed at 0x0006908d\n\nuint __cdecl fcn.00069030(uint16_t *arg_8h)\n\n{\n    uint uVar1;\n    uint var_54h;\n    uint var_ch;\n    uint var_8h;\n    \n    if (arg_8h == NULL) {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        if (*arg_8h < 0xb2) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 151
    },
    "00069890": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Switch with 1 destination removed at 0x000698f9\n\nuint __cdecl fcn.00069890(uint16_t *arg_8h)\n\n{\n    uint uVar1;\n    uint var_8ch;\n    uint var_ch;\n    uint var_8h;\n    \n    if (arg_8h == NULL) {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        if (*arg_8h < 0xb2) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 151
    },
    "0006a010": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0006a010(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint16_t *puVar1;\n    int32_t iVar2;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    while( true ) {\n        if (arg_ch <= var_8h) {\n            return (*(arg_8h + -8 + arg_ch * 8) & 7) == 6;\n        }\n        puVar1 = arg_8h + var_8h * 8;\n        if ((*puVar1 & 7) == 5) {\n            iVar2 = var_8h + 1;\n            if ((*puVar1 & 0xf0) == 0) {\n                if (arg_ch <= iVar2 + *(puVar1 + 2)) {\n                    return false;\n                }\n            }\n            else if ((arg_ch <= *(puVar1 + 1) + iVar2) || (arg_ch <= *(puVar1 + 3) + iVar2)) {\n                return false;\n            }\n        }\n        if ((((*puVar1 & 7) == 2) || (((*puVar1 & 7) == 0 && ((*puVar1 & 0xe0) == 0x60)))) &&\n           ((0xf < *(puVar1 + 2) || (*(puVar1 + 2) < 0)))) break;\n        if ((*puVar1 == 0x34) && (*(puVar1 + 2) == 0)) {\n            return false;\n        }\n        var_8h = var_8h + 1;\n    }\n    return false;\n}\n",
        "token_count": 378
    },
    "0006a120": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nint32_t __fastcall fcn.0006a120(uint param_1)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    fcn.0007f916(0x85091dc0, 0, 0x660, param_1);\n    fcn.000355f0(0x85091dc0);\n    fcn.000380a0(0x85091dc4);\n    *0x8509ec60 = 1;\n    iVar1 = fcn.0001a700(0x85092420, 0x850668f0, 0);\n    if (iVar1 != 0) {\n        fcn.00038300(0x85091dc4);\n        fcn.00035620(0x85091dc0);\n    }\n    return iVar1;\n}\n",
        "token_count": 199
    },
    "0006a190": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0006a190(void)\n\n{\n    if (*0x8509ec60 != 0) {\n        *0x8509ec60 = 0;\n        fcn.000383c0(0x85092420, 0);\n        fcn.00038370(0x85092420);\n        fcn.0006b2d0();\n        fcn.00035650(0x85091dc0);\n        fcn.000356c0(0x85091dc0);\n        fcn.00038300(0x85091dc4);\n        fcn.00035620(0x85091dc0);\n        fcn.00036460(*0x8509241c);\n        fcn.0007f916(0x85091dc0, 0, 0x660);\n    }\n    return;\n}\n",
        "token_count": 187
    },
    "0006a260": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_40h\n\nvoid fcn.0006a260(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint var_40h;\n    uint var_38h;\n    uint *var_34h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    uint *var_20h;\n    uint var_1ch;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint *var_4h;\n    \n    var_24h = 0;\n    var_20h = NULL;\n    if ((*0x8509ec60 != 0) && (iVar2 = fcn.00045cc0(0x85091dd0, 1, 0),  iVar2 == 0)) {\n        iVar2 = fcn.00019f70();\n        if ((iVar2 != 0) &&\n           ((iVar3 = fcn.000379b0(&var_1ch, 0x10),  iVar3 != 0 && (iVar3 = fcn.00035670(0x85091dc0),  iVar3 != 0)))) {\n            for (var_ch = 0; var_ch < 0x32; var_ch = var_ch + 1) {\n                if ((*(var_ch * 0x20 + -0x7af6e217) != '\\0') && (*(var_ch * 0x20 + -0x7af6e218) != '\\0')) {\n                    var_34h = &var_1ch;\n                    do {\n                        cVar1 = *var_34h;\n                        var_34h = var_34h + 1;\n                    } while (cVar1 != '\\0');\n                    var_8h = var_34h - (&var_1ch + 1);\n                    var_28h = *(var_ch * 0x20 + -0x7af6e22c) + -1;\n                    while ((var_28h != 0 &&\n                           (((var_28h = var_28h + 1,  *(var_28h + var_8h) != ',' && (*(var_28h + var_8h) != '\\0')) ||\n                            (iVar3 = fcn.0007f7cc(&var_1ch, var_28h, var_8h),  iVar3 != 0))))) {\n                        var_28h = fcn.0007f7de(var_28h, 0x2c);\n                    }\n                    if (var_28h != 0) {\n                        var_4h = NULL;\n                        for (var_20h = *(var_ch * 0x20 + -0x7af6e210); var_20h != NULL; var_20h = *var_20h) {\n                            if ((var_20h[5] != 0) && (iVar3 = fcn.000381f0(0x85091dc4, 1),  iVar3 != 0)) {\n                                if (var_4h == NULL) {\n                                    *(var_ch * 0x20 + -0x7af6e210) = *var_20h;\n                                }\n                                else {\n                                    *var_4h = *var_20h;\n                                }\n                                fcn.000381b0(0x85091dc4, 1);\n                                fcn.00036460(var_20h);\n                                fcn.000356c0(0x85091dc0);\n                                goto code_r0x0006a622;\n                            }\n                            if (var_20h[2] == iVar2) break;\n                            var_4h = var_20h;\n                        }\n                        if (var_20h == NULL) {\n                            var_20h = fcn.00036360(0x24);\n                            if (var_20h == NULL) break;\n                            *var_20h = *(var_ch * 0x20 + -0x7af6e210);\n                            *(var_ch * 0x20 + -0x7af6e210) = var_20h;\n                            var_20h[2] = iVar2;\n                            var_20h[6] = 0;\n                            uVar4 = fcn.00036f90(0);\n                            var_20h[1] = uVar4;\n                            var_20h[3] = 0;\n                            var_20h[4] = 0;\n                            var_20h[5] = 0;\n                            var_20h[7] = 0;\n                            var_20h[8] = 0;\n                        }\n                        else if (((var_20h[6] == 0) && (var_20h[3] == 0)) && (var_20h[4] == 0)) {\n                            iVar3 = fcn.00036f90(0);\n                            if (iVar3 < var_20h[1]) {\n                                var_20h[1] = iVar3;\n                            }\n                            if (((0x13 < iVar3 - var_20h[1]) &&\n                                ((*(var_ch * 0x20 + -0x7af6e216) == '\\0' ||\n                                 (iVar3 = fcn.00045cc0(var_ch * 0x20 + -0x7af6e214, 0, 0),  iVar3 < 1)))) &&\n                               ((*(var_ch * 0x20 + -0x7af6e21c) == 0 ||\n                                (iVar3 = fcn.0006a210(*(var_ch * 0x20 + -0x7af6e21c)),  iVar3 != 0)))) {\n                                fcn.0001b570(var_ch * 0x20 + -0x7af6e214);\n                                fcn.000380d0(0x85091dc4, 0);\n                                var_24h = var_ch * 0x20 + -0x7af6e22c;\n                                var_20h[3] = 1;\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n            fcn.000356c0(0x85091dc0);\n            if (((var_ch < 0x32) && (var_20h != NULL)) &&\n               (iVar2 = fcn.0006a830(var_24h, var_20h, 0x85066fd0, 0),  iVar2 != 0)) {\n                var_20h[3] = 0;\n                fcn.000381b0(0x85091dc4, 0);\n            }\n        }\ncode_r0x0006a622:\n        fcn.0007a2b0(0x85091dd0);\n    }\n    return;\n}\n",
        "token_count": 1601
    },
    "0006a630": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0006a630(char *arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    bool bVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_28h;\n    uint var_20h;\n    char *var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint *var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    var_ch = NULL;\n    if (*0x8509ec60 != 0) {\ncode_r0x0006a64b:\n        bVar2 = false;\n        fcn.00035650(0x85091dc0);\n        for (var_8h = 0; var_8h < 0x32; var_8h = var_8h + 1) {\n            if ((*(var_8h * 0x20 + -0x7af6e217) != '\\0') && (*(var_8h * 0x20 + -0x7af6e218) != '\\0')) {\n                var_14h = *(var_8h * 0x20 + -0x7af6e22c);\n                var_1ch = arg_8h;\n                do {\n                    cVar1 = *var_1ch;\n                    var_1ch = var_1ch + 1;\n                } while (cVar1 != '\\0');\n                iVar4 = var_1ch - (arg_8h + 1);\n                var_18h = 0;\n                while (((*(var_14h + iVar4) != ',' && (*(var_14h + iVar4) != '\\0')) ||\n                       (iVar3 = fcn.0007f7cc(arg_8h, var_14h, iVar4),  iVar3 != 0))) {\n                    var_14h = fcn.0007f7de(var_14h, 0x2c);\n                    var_18h = var_18h + 1 + iVar4;\n                    if ((var_14h == 0) || (0x103 < var_18h + iVar4)) break;\n                }\n                if (var_14h != 0) {\n                    for (var_ch = *(var_8h * 0x20 + -0x7af6e210); var_ch != NULL; var_ch = *var_ch) {\n                        if (var_ch[2] == arg_ch) {\n                            if ((var_ch[6] != 0) && (var_ch[5] == 0)) {\n                                var_ch[5] = 1;\n                                fcn.00019fe0(arg_ch);\n                                fcn.000380d0(0x85091dc4, 0);\n                                bVar2 = true;\n                                break;\n                            }\n                            var_ch[5] = 1;\n                        }\n                    }\n                    if (bVar2) break;\n                }\n            }\n        }\n        fcn.000356c0(0x85091dc0);\n        if (bVar2) {\n            iVar4 = fcn.0006a830(var_8h * 0x20 + -0x7af6e22c, var_ch, 0x85067230, 1);\n            if (iVar4 != 0) {\n                fcn.000381b0(0x85091dc4, 0);\n            }\n            goto code_r0x0006a64b;\n        }\n    }\n    return;\n}\n",
        "token_count": 787
    },
    "0006a830": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0006a830(uint arg_8h, uint arg_ch, code *arg_10h, int32_t arg_14h)\n\n{\n    uint *arg_10h_00;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_4h;\n    \n    var_4h = fcn.00019fc0();\n    if (var_4h == 0) {\n        arg_10h_00 = fcn.00036330(0xc);\n        if (arg_10h_00 == NULL) {\n            var_4h = 0x21590004;\n        }\n        else {\n            *arg_10h_00 = arg_8h;\n            arg_10h_00[1] = arg_ch;\n            if (arg_14h == 0) {\n                fcn.0001b570(0x85091dd0);\n                var_4h = fcn.0001a700(&var_ch, arg_10h, arg_10h_00);\n                if (var_4h != 0) {\n                    fcn.00036460(arg_10h_00);\n                    fcn.0007a2b0(0x85091dd0);\n                    return var_4h;\n                }\n                fcn.00038480(&var_ch);\n                fcn.00038370(&var_ch);\n            }\n            else {\n                (*arg_10h)(arg_10h_00);\n            }\n            var_4h = 0;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 348
    },
    "0006a8f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint fcn.0006a8f0(void)\n\n{\n    int32_t iVar1;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    while( true ) {\n        if (*0x8509ec60 == 0) {\n            return 0;\n        }\n        iVar1 = fcn.0006a970(&var_4h, &var_8h);\n        if (iVar1 != 0) {\n            fcn.0006b2d0();\n            fcn.0006abe0(var_4h, var_8h);\n        }\n        if (*0x8509ec60 == 0) break;\n        fcn.0005bdd0(1000);\n    }\n    return 0;\n}\n",
        "token_count": 181
    },
    "0006a970": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n\nuint32_t __cdecl fcn.0006a970(int32_t **arg_8h, uint32_t *arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t *var_18h;\n    int32_t *var_14h;\n    uint32_t var_10h;\n    uint *var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    piVar1 = fcn.00036330(13000);\n    *arg_8h = piVar1;\n    if (*arg_8h == NULL) {\n        return 0;\n    }\n    *arg_ch = 0;\n    var_8h = 0x28b;\n    while ((var_8h < 0x2be && (*arg_ch + 0x104 < 13000))) {\n        iVar2 = fcn.000295a0(var_8h, *arg_8h + *arg_ch, 0x104, &var_4h);\n        if (iVar2 == 0) {\n            *arg_ch = var_4h + -1 + *arg_ch;\n        }\n        *(*arg_8h + *arg_ch) = 0;\n        *arg_ch = *arg_ch + 1;\n        var_8h = var_8h + 1;\n    }\n    fcn.00035650(0x85091dc0);\n    if ((*0x8509241c != NULL) && (*arg_ch == *0x85092414)) {\n        var_10h = *arg_ch;\n        var_14h = *0x8509241c;\n        var_18h = *arg_8h;\n        for (; 3 < var_10h; var_10h = var_10h - 4) {\n            if (*var_18h != *var_14h) goto code_r0x0006aa88;\n            var_14h = var_14h + 1;\n            var_18h = var_18h + 1;\n        }\n        if (var_10h == 0) {\ncode_r0x0006ab0a:\n            var_20h = 0;\n        }\n        else {\ncode_r0x0006aa88:\n            var_1ch = *var_18h - *var_14h;\n            if (var_1ch == 0) {\n                if (var_10h == 1) goto code_r0x0006ab0a;\n                var_1ch = *(var_18h + 1) - *(var_14h + 1);\n                if (var_1ch == 0) {\n                    if (var_10h == 2) goto code_r0x0006ab0a;\n                    var_1ch = *(var_18h + 2) - *(var_14h + 2);\n                    if (var_1ch == 0) {\n                        if ((var_10h == 3) || (var_1ch = *(var_18h + 3) - *(var_14h + 3),  var_1ch == 0))\n                        goto code_r0x0006ab0a;\n                    }\n                }\n            }\n            var_20h = 1;\n            if (var_1ch < 1) {\n                var_20h = -1;\n            }\n        }\n        if (var_20h == 0) {\n            for (var_8h = 0; var_8h < 0x32; var_8h = var_8h + 1) {\n                if ((*(var_8h * 0x20 + -0x7af6e217) != '\\0') && (*(var_8h * 0x20 + -0x7af6e218) != '\\0')) {\n                    for (var_ch = *(var_8h * 0x20 + -0x7af6e210); var_ch != NULL; var_ch = *var_ch) {\n                        var_ch[3] = 0;\n                    }\n                }\n            }\n            var_8h = 0;\n            goto code_r0x0006abaa;\n        }\n    }\n    var_8h = 1;\ncode_r0x0006abaa:\n    fcn.000356c0(0x85091dc0);\n    if (var_8h == 0) {\n        fcn.00036460(*arg_8h);\n    }\n    return var_8h;\n}\n",
        "token_count": 1084
    },
    "0006abe0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0006abe0(uint8_t *arg_8h, int32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    uint8_t *puVar4;\n    char *pcVar5;\n    bool bVar6;\n    uint var_28h;\n    int32_t var_24h;\n    uint8_t *var_1ch;\n    uint8_t *var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint8_t *var_8h;\n    uint var_4h;\n    \n    iVar2 = fcn.00036330(arg_ch);\n    if (iVar2 != 0) {\n        fcn.0007f904(iVar2, arg_8h, arg_ch);\n        fcn.00035650(0x85091dc0);\n        fcn.00036460(*0x8509241c);\n        *0x85092418 = arg_8h;\n        *0x85092414 = arg_ch;\n        puVar4 = arg_8h + arg_ch;\n        var_14h = 0;\n        *0x8509241c = iVar2;\n        while (arg_8h < puVar4) {\n            for (var_8h = arg_8h; (*var_8h != 0 && (var_8h < puVar4)); var_8h = var_8h + 1) {\n            }\n            if ((*arg_8h != 0) && (puVar3 = fcn.0007f7de(arg_8h, 0x23),  puVar3 != NULL)) {\n                *puVar3 = 0;\n                var_18h = 0x85011920;\n                var_1ch = arg_8h;\n                do {\n                    uVar1 = *var_1ch;\n                    bVar6 = uVar1 < *var_18h;\n                    if (uVar1 != *var_18h) {\ncode_r0x0006ad14:\n                        var_24h = (1 - bVar6) - (bVar6 != 0);\n                        goto code_r0x0006ad1c;\n                    }\n                    if (uVar1 == 0) break;\n                    uVar1 = var_1ch[1];\n                    bVar6 = uVar1 < var_18h[1];\n                    if (uVar1 != var_18h[1]) goto code_r0x0006ad14;\n                    var_1ch = var_1ch + 2;\n                    var_18h = var_18h + 2;\n                } while (uVar1 != 0);\n                var_24h = 0;\ncode_r0x0006ad1c:\n                if (var_24h == 0) {\n                    *(var_14h * 0x20 + -0x7af6e22c) = puVar3 + 1;\n                    puVar3 = fcn.0007f7de(puVar3 + 1, 0x23);\n                    if (puVar3 != NULL) {\n                        *puVar3 = 0;\n                        *(var_14h * 0x20 + -0x7af6e224) = puVar3 + 1;\n                        puVar3 = fcn.0007f7de(puVar3 + 1, 0x23);\n                        if (puVar3 != NULL) {\n                            *puVar3 = 0;\n                            *(var_14h * 0x20 + -0x7af6e220) = puVar3 + 1;\n                            puVar3 = fcn.0007f7de(puVar3 + 1, 0x23);\n                            if (puVar3 != NULL) {\n                                *puVar3 = 0;\n                                pcVar5 = puVar3 + 1;\n                                if ((puVar3[2] == '#') || (puVar3[2] == '\\0')) {\n                                    if ((*pcVar5 == '1') || ((*pcVar5 == 'y' || (*pcVar5 == 'Y')))) {\n                                        *(var_14h * 0x20 + -0x7af6e216) = 1;\n                                    }\n                                    else {\n                                        if (((*pcVar5 != '0') && (*pcVar5 != 'n')) && (*pcVar5 != 'N'))\n                                        goto code_r0x0006aedd;\n                                        *(var_14h * 0x20 + -0x7af6e216) = 0;\n                                    }\n                                    puVar3 = fcn.0007f7de(pcVar5, 0x23);\n                                    if (puVar3 == NULL) {\n                                        *(var_14h * 0x20 + -0x7af6e21c) = 0;\n                                    }\n                                    else {\n                                        *puVar3 = 0;\n                                        *(var_14h * 0x20 + -0x7af6e21c) = puVar3 + 1;\n                                    }\n                                    *(var_14h * 0x20 + -0x7af6e217) = 1;\n                                    *(var_14h * 0x20 + -0x7af6e218) = 1;\n                                    *(var_14h * 0x20 + -0x7af6e214) = 0;\n                                    *(var_14h * 0x20 + -0x7af6e210) = 0;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\ncode_r0x0006aedd:\n            var_14h = var_14h + 1;\n            arg_8h = var_8h + 1;\n        }\n        fcn.000356c0(0x85091dc0);\n    }\n    return;\n}\n",
        "token_count": 1300
    },
    "0006af10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0006af10(uint arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    int32_t arg_10h_00;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_8h = fcn.00036fe0(arg_ch + 1, 0, 0);\n    var_4h = fcn.000295f0(3, var_8h, 0, 0, &var_ch, 0);\n    if (var_4h == 0) {\n        arg_10h_00 = fcn.00036330(var_ch);\n        if (arg_10h_00 == 0) {\n            var_4h = 0x21590004;\n        }\n        else {\n            var_4h = fcn.000295f0(3, var_8h, arg_10h_00, var_ch, &var_ch, 0);\n            if (var_4h == 0) {\n                var_4h = fcn.00061610(arg_8h, arg_10h_00, arg_ch, arg_ch, arg_10h);\n            }\n            fcn.00036460(arg_10h_00);\n        }\n    }\n    else {\n        var_4h = var_4h + 0x191 | 0x21590000;\n    }\n    return var_4h;\n}\n",
        "token_count": 333
    },
    "0006afd0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0006afd0(int32_t *arg_8h)\n\n{\n    uint var_ch;\n    int32_t var_5h;\n    \n    *NULL = fcn.0005e620(*(arg_8h[1] + 8), &var_5h);\n    if (*NULL == 0) {\n        if (var_5h == '\\0') {\n            *(*arg_8h + 4) = *(*arg_8h + 0xc);\n        }\n        else {\n            *(*arg_8h + 4) = *(*arg_8h + 8);\n        }\n        if (**(*arg_8h + 4) == '\\0') {\n            stack0xfffffff8 = 0x21590206;\n        }\n        else {\n            if (**(*arg_8h + 4) == '&') {\n                *NULL = fcn.0006af10(*(arg_8h[1] + 8), *(*arg_8h + 4), arg_8h[1] + 0x18);\n            }\n            else {\n                *NULL = fcn.00061ca0(*(arg_8h[1] + 8), *(*arg_8h + 4), arg_8h[1] + 0x18);\n            }\n            if (stack0xfffffff8 == 0) {\n                *NULL = fcn.00061590(*(arg_8h[1] + 8), *(arg_8h[1] + 0x18), 0x85010680, arg_8h[1] + 0x1c);\n                if (*NULL == 0) {\n                    fcn.00061590(*(arg_8h[1] + 8), *(arg_8h[1] + 0x18), 0x8501069c, arg_8h[1] + 0x20);\n                    *NULL = fcn.0005f570(*(arg_8h[1] + 8), *(arg_8h[1] + 0x1c), 0, 0);\n                    if (*NULL == 0) {\n                        *(arg_8h[1] + 0xc) = 0;\n                    }\n                    else {\n                        fcn.00062380(*(arg_8h[1] + 8), *(arg_8h[1] + 0x18), 1);\n                        fcn.0002a200(0x10, 0, stack0xfffffff8, 0, ***arg_8h);\n                    }\n                }\n                else {\n                    fcn.00062380(*(arg_8h[1] + 8), *(arg_8h[1] + 0x18), 1);\n                }\n            }\n            else {\n                fcn.0002a200(0xf, 0, stack0xfffffff8, 0, ***arg_8h);\n            }\n        }\n    }\n    if (stack0xfffffff8 != 0) {\n        *(arg_8h[1] + 0x18) = 0;\n        *(arg_8h[1] + 0x1c) = 0;\n        *(arg_8h[1] + 0x20) = 0;\n        *(arg_8h[1] + 0xc) = 1;\n        if (stack0xfffffff8 == 0x21590206) {\n            *(arg_8h[1] + 0x10) = 1;\n        }\n        fcn.0007a2b0(*arg_8h + 0x18);\n    }\n    fcn.000381b0(0x85091dc4, 0);\n    fcn.00036460(arg_8h);\n    fcn.0007a2b0(0x85091dd0);\n    return 0;\n}\n",
        "token_count": 860
    },
    "0006b230": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0006b230(int32_t *arg_8h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    if (*(arg_8h[1] + 0x20) != 0) {\n        var_4h = fcn.0005f570(*(arg_8h[1] + 8), *(arg_8h[1] + 0x20), 0, 0);\n    }\n    if (var_4h == 0) {\n        fcn.00062380(*(arg_8h[1] + 8), *(arg_8h[1] + 0x18), 1);\n    }\n    fcn.0007a2b0(*arg_8h + 0x18);\n    fcn.000381b0(0x85091dc4, 0);\n    fcn.00036460(arg_8h);\n    return 0;\n}\n",
        "token_count": 223
    },
    "0006b2d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid fcn.0006b2d0(void)\n\n{\n    int32_t iVar1;\n    int32_t var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint *var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_10h = 0;\n    var_14h = 0;\n    do {\n        var_18h = 0;\n        var_4h = -1;\n        while( true ) {\n            fcn.00035650(0x85091dc0);\n            iVar1 = fcn.000381f0(0x85091dc4, 1);\n            if (iVar1 != 0) break;\n            fcn.000356c0(0x85091dc0);\n            var_18h = 0x14;\n            fcn.0005bdd0(0x14);\n        }\n        for (var_8h = 0; var_8h < 0x32; var_8h = var_8h + 1) {\n            *(var_8h * 0x20 + -0x7af6e218) = 0;\n            if (*(var_8h * 0x20 + -0x7af6e217) != '\\0') {\n                for (var_ch = *(var_8h * 0x20 + -0x7af6e210); var_ch != NULL; var_ch = *var_ch) {\n                    if ((var_ch[6] != 0) && (var_ch[5] == 0)) {\n                        var_10h = var_ch[8];\n                        var_14h = var_ch[2];\n                        var_18h = var_ch[6];\n                        var_ch[3] = 1;\n                        var_ch[6] = 0;\n                        break;\n                    }\n                }\n                if (var_18h != 0) break;\n                fcn.00036460(*(var_8h * 0x20 + -0x7af6e210));\n                *(var_8h * 0x20 + -0x7af6e217) = 0;\n            }\n        }\n        if (0x31 < var_8h) {\n            *0x85092414 = 0;\n            fcn.00036460(*0x85092418);\n            var_4h = 0;\n        }\n        fcn.000381b0(0x85091dc4, 1);\n        fcn.000356c0(0x85091dc0);\n        if (var_4h == 0) {\n            return;\n        }\n        if (var_18h != 0) {\n            if (var_10h != 0) {\n                var_4h = fcn.0005f570(var_14h, var_10h, 0, 0);\n            }\n            if (var_4h == 0) {\n                fcn.00062380(var_14h, var_18h, 1);\n            }\n        }\n    } while( true );\n}\n",
        "token_count": 700
    },
    "0006b4b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0006b778)\n// WARNING: Removing unreachable block (ram,0x0006b76d)\n// WARNING: Removing unreachable block (ram,0x0006b78f)\n// WARNING: Removing unreachable block (ram,0x0006b6d4)\n// WARNING: Removing unreachable block (ram,0x0006b704)\n// WARNING: Removing unreachable block (ram,0x0006b70b)\n// WARNING: Removing unreachable block (ram,0x0006b714)\n// WARNING: Removing unreachable block (ram,0x0006b727)\n// WARNING: Removing unreachable block (ram,0x0006b730)\n// WARNING: Removing unreachable block (ram,0x0006b740)\n\nint32_t __cdecl\nfcn.0006b4b0(int32_t *arg_8h, char *arg_ch, int32_t arg_10h, uint noname_3, int32_t arg_18h, uint noname_5, \n            uint32_t arg_20h)\n\n{\n    int16_t iVar1;\n    uint arg_ch_00;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    int32_t iVar3;\n    uint uVar4;\n    uint var_38h;\n    int16_t *var_34h;\n    int16_t *var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    arg_8h_00 = fcn.00036360(0x140);\n    if (arg_8h_00 == 0) {\n        var_14h = 0x21590004;\n    }\n    else {\n        fcn.0007f916(arg_8h_00, 0, 0x140);\n        if ((arg_ch == NULL) || (*arg_ch == '\\0')) {\n            var_30h = 0x85011664;\n            var_34h = arg_8h_00 + 0x1e;\n            do {\n                iVar1 = *var_30h;\n                *var_34h = iVar1;\n                var_30h = var_30h + 1;\n                var_34h = var_34h + 1;\n            } while (iVar1 != 0);\n        }\n        else {\n            iVar3 = fcn.0007f6d6(arg_8h_00 + 0x1e, 0x40, 0x8501070c, arg_ch);\n            if (iVar3 < 0) {\n                *(arg_8h_00 + 0x9c) = 0;\n            }\n        }\n        if (arg_10h == 0) {\n            fcn.0007daa0(arg_8h_00 + 0xe4, arg_8h_00 + 0x124);\n            *(arg_8h_00 + 0x128) = 0xffffffff;\n        }\n        else {\n            var_14h = fcn.0007d960(arg_10h, (arg_20h & 1) != 0, arg_8h_00 + 0xe4, arg_8h_00 + 0x124);\n            if (var_14h != 0) goto code_r0x0006b81a;\n            fcn.000355f0(arg_8h_00 + 0x18);\n        }\n        iVar3 = fcn.0007ddb0(arg_8h_00 + 0x1e, arg_8h_00 + 0xe4, *(arg_8h_00 + 0x124), arg_8h_00 + 0xc, arg_8h_00 + 0x10\n                            );\n        if (iVar3 == 0) {\n            if (arg_18h != 0) {\n                var_14h = fcn.0007d960(arg_18h, (arg_20h & 2) != 0, arg_8h_00 + 0x9e, arg_8h_00 + 0xe0);\n                if (var_14h != 0) goto code_r0x0006b81a;\n                iVar3 = fcn.0007dd00(arg_8h_00 + 0x1e, *(arg_8h_00 + 4), arg_8h_00 + 8);\n                if (iVar3 != 0) {\n                    var_14h = fcn.0007f742(iVar3);\n                    goto code_r0x0006b81a;\n                }\n                arg_ch_00 = *(*(arg_8h_00 + 8) + 4);\n                iVar3 = (**0x8500d23c)(3, arg_ch_00, 0, 0, 0, 0, 1, 0, 0);\n                if (iVar3 == 0) {\n                    var_14h = 0x21590004;\n                    goto code_r0x0006b81a;\n                }\n                iVar2 = *(iVar3 + 0x60);\n                *(iVar2 + -8) = 0;\n                *(iVar2 + -4) = 0;\n                *(iVar2 + -0x21) = 0;\n                iVar2 = *(iVar3 + 0x60);\n                *(iVar2 + -0x24) = 0xf;\n                *(iVar2 + -0x23) = 1;\n                *(iVar2 + -0x10) = arg_ch_00;\n                *(iVar2 + -0xc) = *(arg_8h_00 + 8);\n                *(iVar2 + -0x20) = *(arg_8h_00 + 0xc);\n                uVar4 = 0x6b7f4;\n                iVar3 = fcn.0007dba0(iVar3, arg_ch_00, &fcn.0006b4b0::var_8h, 0xffffffff);\n                if (iVar3 != 0) {\n                    var_14h = fcn.0007f742(uVar4);\n                    goto code_r0x0006b81a;\n                }\n            }\n            *arg_8h = arg_8h_00;\n            var_14h = 0;\n        }\n        else {\n            var_14h = fcn.0007f742(iVar3);\n        }\n    }\ncode_r0x0006b81a:\n    if ((var_14h != 0) && (arg_8h_00 != 0)) {\n        if (*(arg_8h_00 + 4) != 0) {\n            fcn.0007f6c4(*(arg_8h_00 + 4));\n        }\n        if (*(arg_8h_00 + 0xc) != 0) {\n            fcn.0007f6c4(*(arg_8h_00 + 0x10));\n        }\n        fcn.00036460(arg_8h_00);\n    }\n    return var_14h;\n}\n",
        "token_count": 1609
    },
    "0006b870": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0006b965)\n// WARNING: Removing unreachable block (ram,0x0006b95a)\n// WARNING: Removing unreachable block (ram,0x0006b97c)\n// WARNING: Removing unreachable block (ram,0x0006b8c1)\n// WARNING: Removing unreachable block (ram,0x0006b8f1)\n// WARNING: Removing unreachable block (ram,0x0006b8f8)\n// WARNING: Removing unreachable block (ram,0x0006b901)\n// WARNING: Removing unreachable block (ram,0x0006b914)\n// WARNING: Removing unreachable block (ram,0x0006b91d)\n// WARNING: Removing unreachable block (ram,0x0006b92d)\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid __cdecl fcn.0006b870(int32_t arg_8h)\n\n{\n    uint arg_ch;\n    int32_t iVar1;\n    int32_t arg_8h_00;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_4h;\n    \n    *(arg_8h + 0x1c) = 1;\n    if (*(arg_8h + 8) != 0) {\n        arg_ch = *(*(arg_8h + 8) + 4);\n        arg_8h_00 = (**0x8500d23c)(3, arg_ch, 0, 0, 0, 0, 1, 0, 0);\n        if (arg_8h_00 != 0) {\n            iVar1 = *(arg_8h_00 + 0x60);\n            *(iVar1 + -8) = 0;\n            *(iVar1 + -4) = 0;\n            *(iVar1 + -0x21) = 0;\n            iVar1 = *(arg_8h_00 + 0x60);\n            *(iVar1 + -0x24) = 0xf;\n            *(iVar1 + -0x23) = 6;\n            *(iVar1 + -0x10) = arg_ch;\n            *(iVar1 + -0xc) = *(arg_8h + 8);\n            *(iVar1 + -0x20) = 4;\n            *(iVar1 + -0x1c) = 0;\n            *(iVar1 + -0x18) = 0;\n            *(iVar1 + -0x14) = 0;\n            fcn.0007dba0(arg_8h_00, arg_ch, &var_ch, 0xffffffff);\n        }\n    }\n    var_4h = *(arg_8h + 4);\n    *(arg_8h + 4) = 0;\n    if (var_4h != 0) {\n        fcn.0007f6c4(var_4h);\n    }\n    var_4h = *(arg_8h + 0xc);\n    *(arg_8h + 4) = 0;\n    if (var_4h != 0) {\n        fcn.0007f6c4(var_4h);\n    }\n    if (*(arg_8h + 300) != 0) {\n        *(arg_8h + 300) = 0;\n    }\n    var_4h = *(arg_8h + 0x14);\n    *(arg_8h + 0x14) = 0;\n    if (var_4h != 0) {\n        fcn.0007f6c4(var_4h);\n        fcn.00035650(arg_8h + 0x18);\n        fcn.000356c0(arg_8h + 0x18);\n    }\n    return;\n}\n",
        "token_count": 913
    },
    "0006baa0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0006baa0(int32_t arg_8h)\n\n{\n    if (*(arg_8h + 0x124) != 0) {\n        fcn.00035620(arg_8h + 0x18);\n    }\n    fcn.00036460(arg_8h);\n    return;\n}\n",
        "token_count": 74
    },
    "0006bad0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0006bbe1)\n// WARNING: Removing unreachable block (ram,0x0006bbd6)\n// WARNING: Removing unreachable block (ram,0x0006bbf7)\n// WARNING: Removing unreachable block (ram,0x0006bb3e)\n// WARNING: Removing unreachable block (ram,0x0006bb6e)\n// WARNING: Removing unreachable block (ram,0x0006bb75)\n// WARNING: Removing unreachable block (ram,0x0006bb7e)\n// WARNING: Removing unreachable block (ram,0x0006bb90)\n// WARNING: Removing unreachable block (ram,0x0006bb99)\n// WARNING: Removing unreachable block (ram,0x0006bba9)\n\nuint __cdecl fcn.0006bad0(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    \n    var_28h = 0;\n    var_24h = 0;\n    var_20h = 0;\n    var_1ch = 0;\n    var_18h = *(arg_8h + 0xe0);\n    var_14h = arg_8h + 0x9e;\n    uVar2 = *(*(arg_8h + 8) + 4);\n    var_10h = (**0x8500d23c)(3, uVar2, 0, 0, 0, 0, 1, 0, 0);\n    if (var_10h == 0) {\n        uVar2 = 0x21590004;\n    }\n    else {\n        iVar1 = *(var_10h + 0x60);\n        *(iVar1 + -8) = 0;\n        *(iVar1 + -4) = 0;\n        *(iVar1 + -0x21) = 0;\n        iVar1 = *(var_10h + 0x60);\n        *(iVar1 + -0x24) = 0xf;\n        *(iVar1 + -0x23) = 3;\n        *(iVar1 + -0x10) = uVar2;\n        *(iVar1 + -0xc) = *(arg_8h + 8);\n        *(iVar1 + -0x1c) = &var_28h;\n        *(iVar1 + -0x18) = 0;\n        *(iVar1 + -0x14) = 0;\n        var_ch = fcn.0007dba0(var_10h, uVar2, &var_8h, 0xffffffff);\n        if (var_ch == -0x3ffffdca) {\n            uVar2 = 0x21590003;\n        }\n        else {\n            *(arg_8h + 300) = 1;\n            if (*(arg_8h + 0x130) != 0) {\n                fcn.0006c980(arg_8h);\n            }\n            uVar2 = fcn.0007f742(var_ch);\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 774
    },
    "0006bcc0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0006c0f9)\n// WARNING: Removing unreachable block (ram,0x0006be13)\n// WARNING: Removing unreachable block (ram,0x0006be4f)\n// WARNING: Removing unreachable block (ram,0x0006be59)\n// WARNING: Removing unreachable block (ram,0x0006be62)\n// WARNING: Removing unreachable block (ram,0x0006be7a)\n// WARNING: Removing unreachable block (ram,0x0006be83)\n// WARNING: Removing unreachable block (ram,0x0006be99)\n// WARNING: Removing unreachable block (ram,0x0006befc)\n// WARNING: Removing unreachable block (ram,0x0006bed2)\n// WARNING: Removing unreachable block (ram,0x0006bee0)\n// WARNING: Removing unreachable block (ram,0x0006c0eb)\n// WARNING: Removing unreachable block (ram,0x0006c116)\n// WARNING: Removing unreachable block (ram,0x0006c02b)\n// WARNING: Removing unreachable block (ram,0x0006c067)\n// WARNING: Removing unreachable block (ram,0x0006c071)\n// WARNING: Removing unreachable block (ram,0x0006c07a)\n// WARNING: Removing unreachable block (ram,0x0006c093)\n// WARNING: Removing unreachable block (ram,0x0006c09c)\n// WARNING: Removing unreachable block (ram,0x0006c0b2)\n\nint32_t __cdecl fcn.0006bcc0(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int16_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint var_bch;\n    int16_t *var_b8h;\n    int16_t *var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    int32_t var_74h;\n    int32_t var_70h;\n    int32_t var_6ch;\n    uint var_68h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint *var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    \n    if (*(arg_8h + 0x128) == -1) {\n        var_70h = 0x21590065;\n    }\n    else {\n        var_74h = fcn.00036330(0x140);\n        if (var_74h == 0) {\n            var_70h = 0x21590004;\n        }\n        else {\n            fcn.00035650(arg_8h + 0x18);\n            fcn.0007f916(var_74h, 0, 0x140);\n            var_b4h = arg_8h + 0x1e;\n            var_b8h = var_74h + 0x1e;\n            do {\n                iVar1 = *var_b4h;\n                *var_b8h = iVar1;\n                var_b4h = var_b4h + 1;\n                var_b8h = var_b8h + 1;\n            } while (iVar1 != 0);\n            uVar4 = fcn.0007dd00(var_74h + 0x1e, var_74h + 4, var_74h + 8);\n            var_ch = uVar4;\n            if (uVar4 == 0) {\n                *(arg_8h + 0x14) = *(var_74h + 4);\n                uVar2 = *(*(var_74h + 8) + 4);\n                uVar4 = 0;\n                var_6ch = (**0x8500d23c)(3, uVar2, 0, 0, 0, 0, 1, 0, 0);\n                if (var_6ch == 0) {\n                    var_70h = 0x21590004;\n                }\n                else {\n                    iVar3 = *(var_6ch + 0x60);\n                    *(iVar3 + -8) = 0;\n                    *(iVar3 + -4) = 0;\n                    *(iVar3 + -0x21) = 0;\n                    iVar3 = *(var_6ch + 0x60);\n                    *(iVar3 + -0x24) = 0xf;\n                    *(iVar3 + -0x23) = 1;\n                    *(iVar3 + -0x10) = uVar2;\n                    *(iVar3 + -0xc) = *(var_74h + 8);\n                    *(iVar3 + -0x20) = *(arg_8h + 0xc);\n                    uVar4 = fcn.0007dba0(var_6ch, uVar2, &fcn.0006bcc0::var_8h, 0xffffffff);\n                    var_ch = uVar4;\n                    if (uVar4 == 0) {\n                        var_8ch = 0;\n                        var_88h = 0;\n                        var_84h = 0;\n                        var_80h = 0;\n                        var_7ch = 0;\n                        var_78h = 0;\n                        var_24h = 0;\n                        var_20h = 0;\n                        var_1ch = 0;\n                        var_18h = 0;\n                        var_10h = &fcn.0006bcc0::var_68h;\n                        var_14h = 0x40;\n                        uVar2 = *(*(var_74h + 8) + 4);\n                        var_6ch = (**0x8500d23c)(3, uVar2, 0, 0, 0, 0, 1, 0, 0);\n                        if (var_6ch == 0) {\n                            uVar4 = var_ch;\n                            var_70h = fcn.0007f742();\n                        }\n                        else {\n                            iVar3 = *(var_6ch + 0x60);\n                            *(iVar3 + -8) = 0;\n                            *(iVar3 + -4) = 0;\n                            *(iVar3 + -0x21) = 0;\n                            iVar3 = *(var_6ch + 0x60);\n                            *(iVar3 + -0x24) = 0xf;\n                            *(iVar3 + -0x23) = 4;\n                            *(iVar3 + -0x10) = uVar2;\n                            *(iVar3 + -0xc) = *(var_74h + 8);\n                            *(iVar3 + -0x20) = 0;\n                            *(iVar3 + -0x1c) = &fcn.0006bcc0::var_8ch;\n                            *(iVar3 + -0x18) = &fcn.0006bcc0::var_24h;\n                            uVar4 = 0x6c1b8;\n                            uVar5 = fcn.0007dba0(0x6c1b8, uVar2, &fcn.0006bcc0::var_8h, 0xffffffff);\n                            var_ch = uVar5;\n                            if (*(arg_8h + 0x14) == 0) {\n                                var_70h = 0x21590006;\n                            }\n                            else if (uVar5 == 0) {\n                                *(var_74h + 0x128) = 0xffffffff;\n                                if (var_14h < 0x41) {\n                                    uVar4 = var_14h;\n                                    fcn.0007f904(var_74h + 0x9e, var_10h, var_14h);\n                                    *(var_74h + 0xe0) = var_14h;\n                                }\n                                *arg_ch = var_74h;\n                                var_70h = 0;\n                            }\n                            else {\n                                var_70h = fcn.0007f742(uVar5);\n                                uVar4 = uVar5;\n                            }\n                        }\n                    }\n                    else {\n                        var_70h = fcn.0007f742();\n                    }\n                }\n            }\n            else {\n                var_70h = fcn.0007f742(uVar4);\n            }\n            if ((var_70h != 0) && (var_74h != 0)) {\n                if (*(var_74h + 4) != 0) {\n                    fcn.0007f6c4(*(var_74h + 4), uVar4);\n                }\n                fcn.00036460(var_74h);\n            }\n            *(arg_8h + 0x14) = 0;\n            fcn.000356c0(arg_8h + 0x18);\n        }\n    }\n    return var_70h;\n}\n",
        "token_count": 2060
    },
    "0006c320": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0006c4ab)\n// WARNING: Removing unreachable block (ram,0x0006c4a0)\n// WARNING: Removing unreachable block (ram,0x0006c4c1)\n// WARNING: Removing unreachable block (ram,0x0006c408)\n// WARNING: Removing unreachable block (ram,0x0006c438)\n// WARNING: Removing unreachable block (ram,0x0006c43f)\n// WARNING: Removing unreachable block (ram,0x0006c448)\n// WARNING: Removing unreachable block (ram,0x0006c45a)\n// WARNING: Removing unreachable block (ram,0x0006c463)\n// WARNING: Removing unreachable block (ram,0x0006c473)\n\nuint fcn.0006c320(int32_t param_1, uint param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t arg_8h;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    int32_t var_8h;\n    uint var_ch;\n    int32_t var_10h;\n    uint var_18h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uchar *puStack28;\n    uint var_10h_2;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x8507b950;\n    uStack16 = 0x8507b910;\n    var_10h_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_10h_2;\n    puStack28 = &stack0xffffffac;\n    if (var_10h == 0) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = *(*(var_8h + 8) + 4);\n        arg_8h = (**0x8500d23c)(3, uVar2, 0, 0, 0, 0, 1, 0, 0);\n        if (arg_8h == 0) {\n            uVar2 = 0x21590004;\n        }\n        else {\n            iVar3 = (**0x8500d290)(var_ch, var_10h, 0, 0, arg_8h);\n            if (iVar3 == 0) {\n                (**0x8500d2ec)();\n                uVar2 = 0x21590004;\n            }\n            else {\n                var_4h = 0;\n                (**0x8500d29c)(iVar3, 0, 0);\n                var_4h = 0xffffffff;\n                iVar1 = *(arg_8h + 0x60);\n                *(iVar1 + -8) = 0;\n                *(iVar1 + -4) = 0;\n                *(iVar1 + -0x21) = 0;\n                iVar1 = *(arg_8h + 0x60);\n                *(iVar1 + -0x24) = 0xf;\n                *(iVar1 + -0x23) = 7;\n                *(iVar1 + -0x10) = uVar2;\n                *(iVar1 + -0xc) = *(var_8h + 8);\n                *(iVar1 + -0x1c) = 0;\n                *(iVar1 + -0x20) = var_10h;\n                *(arg_8h + 4) = iVar3;\n                uVar2 = fcn.0007dba0(arg_8h, uVar2, &var_20h, 0xffffffff);\n                uVar2 = fcn.0007f742(uVar2);\n            }\n        }\n    }\n    *in_FS_OFFSET = var_10h_2;\n    return uVar2;\n}\n",
        "token_count": 905
    },
    "0006c560": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0006c667)\n// WARNING: Removing unreachable block (ram,0x0006c697)\n// WARNING: Removing unreachable block (ram,0x0006c69e)\n// WARNING: Removing unreachable block (ram,0x0006c6a7)\n// WARNING: Removing unreachable block (ram,0x0006c6ba)\n// WARNING: Removing unreachable block (ram,0x0006c6c3)\n// WARNING: Removing unreachable block (ram,0x0006c6d3)\n// WARNING: Removing unreachable block (ram,0x0006c700)\n// WARNING: Removing unreachable block (ram,0x0006c70b)\n// WARNING: Removing unreachable block (ram,0x0006c722)\n\nuint fcn.0006c560(int32_t param_1, int32_t param_2, int32_t *param_3, uint param_4, uint32_t param_5)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    int32_t var_8h;\n    int32_t var_ch;\n    int32_t *var_10h;\n    uint var_14h;\n    uint32_t var_18h_2;\n    uint var_18h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    uchar *puStack28;\n    uint var_10h_2;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x8507b940;\n    uStack16 = 0x8507b910;\n    var_10h_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_10h_2;\n    puStack28 = &stack0xffffffa8;\n    if (*var_10h == 0) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = *(*(var_8h + 8) + 4);\n        var_30h = 0;\n        do {\n            if (*var_10h <= var_30h) break;\n            iVar3 = (**0x8500d23c)(3, uVar2, 0, 0, 0, 0, 1, 0, 0);\n            if (iVar3 == 0) {\n                uVar2 = 0x21590004;\n                goto code_r0x0006c7f3;\n            }\n            iVar4 = (**0x8500d290)(var_ch + var_30h, *var_10h - var_30h, 0, 0, iVar3);\n            if (iVar4 == 0) {\n                (**0x8500d2ec)();\n                uVar2 = 0x21590004;\n                goto code_r0x0006c7f3;\n            }\n            var_4h = 0;\n            (**0x8500d29c)(iVar4, 0, 2);\n            var_4h = 0xffffffff;\n            iVar1 = *(iVar3 + 0x60);\n            *(iVar1 + -8) = 0;\n            *(iVar1 + -4) = 0;\n            *(iVar1 + -0x21) = 0;\n            iVar1 = *(iVar3 + 0x60);\n            *(iVar1 + -0x24) = 0xf;\n            *(iVar1 + -0x23) = 8;\n            *(iVar1 + -0x10) = uVar2;\n            *(iVar1 + -0xc) = *(var_8h + 8);\n            *(iVar1 + -0x1c) = 0;\n            *(iVar1 + -0x20) = *var_10h - var_30h;\n            *(iVar3 + 4) = iVar4;\n            iVar3 = fcn.0007dba0(iVar3, uVar2, &var_20h, var_14h);\n            if (iVar3 != 0) {\n                if (iVar3 == 0x102) {\n                    uVar2 = 0x21590002;\n                }\n                else {\n                    uVar2 = fcn.0007f742(iVar3);\n                }\n                goto code_r0x0006c7f3;\n            }\n            if (var_1ch == 0) {\n                uVar2 = 0x21590003;\n                goto code_r0x0006c7f3;\n            }\n            var_30h = var_30h + var_1ch;\n        } while ((var_18h_2 & 1) != 0);\n        *var_10h = var_30h;\n        uVar2 = 0;\n    }\ncode_r0x0006c7f3:\n    *in_FS_OFFSET = var_10h_2;\n    return uVar2;\n}\n",
        "token_count": 1167
    },
    "0006c810": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0006c810(int32_t arg_8h, int32_t arg_ch, char **arg_10h, char *arg_14h)\n\n{\n    char cVar1;\n    ushort uVar2;\n    uint uVar3;\n    uint32_t in_EDX;\n    uint var_48h;\n    char **var_44h;\n    uint *var_40h;\n    uint var_3ch;\n    uint var_34h;\n    uint *var_30h;\n    uint var_2ch;\n    uint var_24h;\n    uint *var_20h;\n    uint var_1ch;\n    uint var_18h;\n    \n    if ((arg_ch == 4) || (arg_ch == 3)) {\n        uVar2 = fcn.000365f0(in_EDX & 0xffff0000 | *(arg_8h + 0xa6));\n        fcn.0007f7f0(&var_18h, 0x85011938, *(arg_8h + 0xa8), *(arg_8h + 0xa9), *(arg_8h + 0xaa), *(arg_8h + 0xab), uVar2\n                    );\n        if (arg_ch == 3) {\n            if (arg_14h != 0x4) {\n                return 0x21590064;\n            }\n            var_20h = &var_18h;\n            do {\n                cVar1 = *var_20h;\n                var_20h = var_20h + 1;\n            } while (cVar1 != '\\0');\n            *arg_10h = var_20h + (1 - (&var_18h + 1));\n        }\n        else {\n            if (arg_14h < 1) {\n                return 0x21590064;\n            }\n            var_30h = &var_18h;\n            do {\n                cVar1 = *var_30h;\n                var_30h = var_30h + 1;\n            } while (cVar1 != '\\0');\n            if (arg_14h < var_30h + (1 - (&var_18h + 1))) {\n                fcn.0007f7e4(arg_10h, &var_18h, arg_14h + -1);\n                *(arg_10h + arg_14h + -1) = '\\0';\n            }\n            else {\n                var_40h = &var_18h;\n                var_44h = arg_10h;\n                do {\n                    cVar1 = *var_40h;\n                    *var_44h = cVar1;\n                    var_40h = var_40h + 1;\n                    var_44h = var_44h + 1;\n                } while (cVar1 != '\\0');\n            }\n        }\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = 0x21590001;\n    }\n    return uVar3;\n}\n",
        "token_count": 663
    },
    "0006c9d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0006c9d0(int32_t *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint32_t arg_18h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.00036330(0x30);\n    if (arg_8h_00 == 0) {\n        iVar1 = 0x21590004;\n    }\n    else {\n        fcn.0007f916(arg_8h_00, 0, 0x30);\n        var_8h = arg_ch;\n        var_4h = 0;\n        iVar1 = fcn.0007b640(arg_8h_00 + 4, &var_8h, arg_10h, arg_14h, 0, 0, (arg_18h & 1) != 0);\n        if (iVar1 == 0) {\n            *(arg_8h_00 + 0xc) = 1;\n            fcn.000355f0(arg_8h_00 + 0x14);\n            fcn.000355f0(arg_8h_00 + 0x18);\n            fcn.000355f0(arg_8h_00 + 0x1c);\n            *arg_8h = arg_8h_00;\n            iVar1 = 0;\n        }\n        else {\n            fcn.00036460(arg_8h_00);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 378
    },
    "0006caa0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0006caa0(int32_t *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint32_t arg_18h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    uint uVar2;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.00036330(0x30);\n    if (arg_8h_00 == 0) {\n        iVar1 = 0x21590004;\n    }\n    else {\n        fcn.0007f916(arg_8h_00, 0, 0x30);\n        uVar2 = fcn.00036330(arg_14h);\n        *(arg_8h_00 + 0x20) = uVar2;\n        if (*(arg_8h_00 + 0x20) == 0) {\n            fcn.00036460(arg_8h_00);\n            iVar1 = 0x21590004;\n        }\n        else {\n            fcn.0007f904(*(arg_8h_00 + 0x20), arg_10h, arg_14h);\n            *(arg_8h_00 + 0x24) = arg_14h;\n            *(arg_8h_00 + 0x28) = arg_18h;\n            uVar2 = fcn.00036490(arg_ch);\n            *(arg_8h_00 + 0x2c) = uVar2;\n            if (*(arg_8h_00 + 0x2c) == 0) {\n                fcn.00036460(*(arg_8h_00 + 0x20));\n                fcn.00036460(arg_8h_00);\n                iVar1 = 0x21590004;\n            }\n            else {\n                var_8h = arg_ch;\n                var_4h = 0;\n                iVar1 = fcn.0007b640(arg_8h_00 + 8, &var_8h, 0, 0, arg_10h, arg_14h, -((arg_18h & 1) != 0) & 2);\n                if (iVar1 == 0) {\n                    *(arg_8h_00 + 0xc) = 0;\n                    fcn.000355f0(arg_8h_00 + 0x14);\n                    fcn.000355f0(arg_8h_00 + 0x18);\n                    *arg_8h = arg_8h_00;\n                    iVar1 = 0;\n                }\n                else {\n                    fcn.00036460(arg_8h_00);\n                }\n            }\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 631
    },
    "0006cc20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0006cc20(int32_t arg_8h)\n\n{\n    fcn.00035620(arg_8h + 0x18);\n    fcn.00035620(arg_8h + 0x14);\n    if (*(arg_8h + 0xc) != 0) {\n        fcn.00035620(arg_8h + 0x1c);\n    }\n    fcn.00036460(*(arg_8h + 0x20));\n    fcn.00036460(*(arg_8h + 0x2c));\n    fcn.00036460(arg_8h);\n    return;\n}\n",
        "token_count": 144
    },
    "0006cc80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0006cc80(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    var_4h = 0;\n    if (*(arg_8h + 4) != 0) {\n        var_8h = fcn.0007bdc0(*(arg_8h + 4), arg_ch, 0);\n    }\n    if (*(arg_8h + 8) != 0) {\n        var_4h = fcn.0007bdc0(*(arg_8h + 8), arg_ch, 0);\n    }\n    if (var_8h == 0) {\n        var_ch = var_4h;\n    }\n    else {\n        var_ch = var_8h;\n    }\n    return var_ch;\n}\n",
        "token_count": 207
    },
    "0006ccf0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0006ccf0(int32_t arg_8h, uint arg_ch)\n\n{\n    if (*(arg_8h + 8) == 0) {\n        fcn.0007bd10(*(arg_8h + 4), arg_ch, 0);\n    }\n    else {\n        fcn.0007bd10(*(arg_8h + 8), arg_ch, 0);\n    }\n    return;\n}\n",
        "token_count": 98
    },
    "0006cd30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0006cd30(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    if (*(arg_8h + 8) == 0) {\n        if (*(arg_8h + 4) == 0) {\n            fcn.0007c5e0(arg_ch, arg_10h, arg_14h, arg_18h);\n        }\n        else {\n            fcn.0007bb80(*(arg_8h + 4), arg_ch, arg_10h, arg_14h, arg_18h);\n        }\n    }\n    else {\n        fcn.0007bb80(*(arg_8h + 8), arg_ch, arg_10h, arg_14h, arg_18h);\n    }\n    return;\n}\n",
        "token_count": 190
    },
    "0006cda0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0006cda0(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0x21590001;\n    var_4h = 0x21590001;\n    if (*(arg_8h + 4) != 0) {\n        var_8h = fcn.0007c110(*(arg_8h + 4), arg_ch, arg_10h, arg_14h, 0);\n    }\n    if (*(arg_8h + 8) != 0) {\n        var_4h = fcn.0007c110(*(arg_8h + 8), arg_ch, arg_10h, arg_14h, 0);\n    }\n    if (var_8h == 0) {\n        var_ch = var_8h;\n    }\n    else {\n        var_ch = var_4h;\n    }\n    return var_ch;\n}\n",
        "token_count": 246
    },
    "0006ce20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0006ce20(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    if (*(arg_8h + 8) == 0) {\n        fcn.0007c1d0(*(arg_8h + 4), arg_ch, arg_10h, arg_14h, 0);\n    }\n    else {\n        fcn.0007c1d0(*(arg_8h + 8), arg_ch, arg_10h, arg_14h, 0);\n    }\n    return;\n}\n",
        "token_count": 133
    },
    "0006cf70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl\nfcn.0006cf70(int32_t arg_8h, int32_t arg_ch, uint arg_10h, uint8_t **arg_14h, int32_t *arg_18h, int32_t arg_1ch, \n            int32_t arg_20h)\n\n{\n    uint *var_38h;\n    uint *var_34h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint8_t *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_2h;\n    \n    var_10h = NULL;\n    if (*(arg_8h + 0xc) == 0) {\n        if (*(arg_8h + 0x10) == 0) {\n            if (*(arg_8h + 8) == 0) {\n                var_ch = *(arg_8h + 0x2c);\n                var_8h = 0;\n                var_18h = fcn.0007b640(arg_8h + 8, &var_ch, 0, 0, *(arg_8h + 0x20), *(arg_8h + 0x24), \n                                       -((*(arg_8h + 0x28) & 1) != 0) & 2);\n                if (var_18h != 0) {\n                    return var_18h;\n                }\n            }\n            if ((arg_1ch != 0) && (arg_20h == 0)) {\n                return 0x21590002;\n            }\n            var_18h = fcn.0007bc60(*(arg_8h + 8), 0);\n            if (var_18h != 0) {\n                fcn.0007b950(arg_8h + 8, 0);\n                return var_18h;\n            }\n            *(arg_8h + 0x10) = 1;\n        }\n    }\n    else if (*(arg_8h + 8) == 0) {\n        if ((arg_1ch != 0) && (arg_20h == 0)) {\n            return 0x21590002;\n        }\n        fcn.00035650(arg_8h + 0x1c);\n        if (*(arg_8h + 8) == 0) {\n            var_18h = fcn.0007ba00(*(arg_8h + 4), arg_8h + 8, 0);\n        }\n        else {\n            var_18h = 0;\n        }\n        fcn.000356c0(arg_8h + 0x1c);\n        if (var_18h != 0) {\n            return var_18h;\n        }\n    }\n    var_18h = 0x21590064;\n    if (arg_ch != 0) {\n        var_2ch = 0;\n        var_1ch = 0;\n        var_2h._0_1_ = 0x90;\n        var_34h = &var_2h;\n        var_30h = 1;\n        var_38h = &var_28h;\n        var_24h = arg_10h;\n        var_20h = 0x90;\n        var_28h = arg_ch;\n        var_18h = fcn.0007c290(*(arg_8h + 8), &var_38h, 0);\n        if (var_18h != 0) goto code_r0x0006d244;\n    }\n    if (arg_1ch != 0) {\n        var_18h = fcn.0007bf30(*(arg_8h + 8), &var_10h, &var_14h, arg_20h, 0);\n        if (var_18h == 0) {\n            if (var_14h < 1) {\n                var_18h = 0x2159000a;\n            }\n            else {\n                var_2h._0_1_ = *var_10h;\n                if (var_14h < var_2h + 1) {\n                    var_18h = 0x2159000a;\n                }\n                else {\n                    *arg_14h = var_10h + var_2h + 1;\n                    *arg_18h = var_14h - (var_2h + 1);\n                    var_2h._1_1_ = var_2h;\n                    if (0x90 < var_2h) {\n                        var_2h._1_1_ = 0x90;\n                    }\n                    fcn.0007f904(arg_1ch, var_10h + 1, var_2h._1_1_);\n                    fcn.0007f916(var_2h._1_1_ + arg_1ch, 0, 0x90 - var_2h._1_1_);\n                    if (*arg_18h == 0) {\n                        *arg_14h = NULL;\n                    }\n                    else {\n                        var_10h[var_2h] = var_2h;\n                        var_10h = NULL;\n                    }\n                }\n            }\n        }\n        else if ((var_18h != 0x21590002) && (fcn.0007b950(arg_8h + 8, 0),  *(arg_8h + 0xc) == 0)) {\n            *(arg_8h + 0x10) = 0;\n        }\n    }\ncode_r0x0006d244:\n    if (var_18h != 0) {\n        fcn.0007c0d0(*(arg_8h + 8), var_10h);\n        fcn.0007b950(arg_8h + 8, 0);\n        if (*(arg_8h + 0xc) == 0) {\n            *(arg_8h + 0x10) = 0;\n        }\n    }\n    return var_18h;\n}\n",
        "token_count": 1405
    },
    "0006d290": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.0006d290(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t arg_ch_00;\n    uint var_8h;\n    uint var_1h;\n    \n    arg_ch_00 = (arg_ch + -1) - *(arg_ch + -1);\n    if (*(arg_8h + 8) == 0) {\n        fcn.0007c0d0(*(arg_8h + 4), arg_ch_00);\n    }\n    else {\n        fcn.0007c0d0(*(arg_8h + 8), arg_ch_00);\n    }\n    return;\n}\n",
        "token_count": 162
    },
    "0006d2f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0006d2f0(uint *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.0006d3c0(arg_8h, 0x138, arg_ch, arg_10h, arg_14h, 0, 0, arg_18h);\n    if ((iVar1 == 0) && (iVar1 = fcn.0006dde0(*arg_8h, 1),  iVar1 != 0)) {\n        fcn.0006d5f0(*arg_8h);\n    }\n    return iVar1;\n}\n",
        "token_count": 169
    },
    "0006d350": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.0006d350(int32_t *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.0006d3c0(arg_8h, 0x144, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n    if (iVar1 == 0) {\n        *(*arg_8h + 4) = 1;\n        iVar1 = fcn.0006dde0(*arg_8h, 1);\n        if (iVar1 != 0) {\n            fcn.0006d5f0(*arg_8h);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 203
    },
    "0006d3c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.0006d3c0(int32_t *arg_8h, uint arg_ch, char *arg_10h, int32_t arg_14h, uint noname_4, int32_t arg_1ch, uint noname_6\n            , uint32_t arg_24h)\n\n{\n    int16_t iVar1;\n    int32_t arg_8h_00;\n    int32_t iVar2;\n    uint var_18h;\n    int16_t *var_14h;\n    int16_t *var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.00036360(arg_ch);\n    if (arg_8h_00 == 0) {\n        var_ch = 0x21590004;\n    }\n    else {\n        fcn.0007f916(arg_8h_00, 0, arg_ch);\n        *(arg_8h_00 + 0x11c) = 0xffff;\n        if ((arg_10h == NULL) || (*arg_10h == '\\0')) {\n            var_10h = 0x85011948;\n            var_14h = arg_8h_00 + 0x12;\n            do {\n                iVar1 = *var_10h;\n                *var_14h = iVar1;\n                var_10h = var_10h + 1;\n                var_14h = var_14h + 1;\n            } while (iVar1 != 0);\n        }\n        else {\n            iVar2 = fcn.0007f6d6(arg_8h_00 + 0x12, 0x40, 0x8501070c, arg_10h);\n            if (iVar2 < 0) {\n                *(arg_8h_00 + 0x90) = 0;\n            }\n        }\n        if (arg_14h == 0) {\n            fcn.0007daa0(arg_8h_00 + 0xd8, arg_8h_00 + 0x118);\n        }\n        else {\n            var_ch = fcn.0007d960(arg_14h, (arg_24h & 1) != 0, arg_8h_00 + 0xd8, arg_8h_00 + 0x118);\n            if (var_ch != 0) goto code_r0x0006d575;\n        }\n        iVar2 = fcn.0007ddb0(arg_8h_00 + 0x12, arg_8h_00 + 0xd8, *(arg_8h_00 + 0x118), arg_8h_00 + 8, arg_8h_00 + 0xc);\n        if (iVar2 == 0) {\n            if ((arg_1ch == 0) ||\n               (var_ch = fcn.0007d960(arg_1ch, (arg_24h & 2) != 0, arg_8h_00 + 0x92, arg_8h_00 + 0xd4),  var_ch == 0)) {\n                fcn.00079310(arg_8h_00 + 0x120);\n                var_ch = 0;\n                *arg_8h = arg_8h_00;\n            }\n        }\n        else {\n            var_ch = fcn.0007f742(iVar2);\n        }\n    }\ncode_r0x0006d575:\n    if ((var_ch != 0) && (arg_8h_00 != 0)) {\n        if (*(arg_8h_00 + 8) != 0) {\n            fcn.0007f6c4(*(arg_8h_00 + 8));\n        }\n        fcn.00036460(arg_8h_00);\n    }\n    return var_ch;\n}\n",
        "token_count": 866
    },
    "0006d5b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0006d5b0(int32_t arg_8h)\n\n{\n    fcn.0006dde0(arg_8h, 0);\n    *(arg_8h + 0x10) = 1;\n    while (0 < *(arg_8h + 0x134)) {\n        fcn.00034dc0(arg_8h + 300);\n        fcn.0005bdd0(0);\n    }\n    return;\n}\n",
        "token_count": 104
    },
    "0006d5f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0006d5f0(int32_t arg_8h)\n\n{\n    if (*(arg_8h + 8) != 0) {\n        fcn.0007f6c4(*(arg_8h + 8));\n    }\n    fcn.00079350(arg_8h + 0x120, 1);\n    fcn.00036460(arg_8h);\n    return;\n}\n",
        "token_count": 95
    },
    "0006d640": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0006d640(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_88h;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = arg_ch;\n    do {\n        do {\n            while( true ) {\n                iVar1 = fcn.0007d710(&var_4h, &var_88h, 0x80, &var_8h);\n                if (iVar1 == 0) {\n                    return 0;\n                }\n                iVar1 = fcn.0007f7a2(&var_88h, 0x85011924);\n                if ((iVar1 != 0) || (*(arg_8h + 4) == '\\0')) break;\n                uVar2 = fcn.00038670(var_8h, arg_8h + 0x138);\n                *(arg_8h + 0x140) = uVar2;\n            }\n            iVar1 = fcn.0007f7a2(&var_88h, 0x85011960);\n        } while (iVar1 != 0);\n        uVar2 = fcn.00036fe0(var_8h, 0, 0);\n        *(arg_8h + 0x11c) = uVar2;\n    } while (*(arg_8h + 0x11c) != 0);\n    return 0x21590066;\n}\n",
        "token_count": 333
    },
    "0006d7c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0006d7c0(int32_t arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((*(arg_8h + 0x140) == 0) || ((arg_10h & 0x10000) != 0)) {\n        var_4h = fcn.0006d850(arg_8h, arg_ch);\n    }\n    else {\n        var_14h = 0;\n        var_10h = 0;\n        var_ch = 0;\n        var_8h = 0;\n        if (*(arg_8h + 0x140) != 0) {\n            fcn.000386d0(arg_8h + 0x138, &var_14h);\n        }\n        var_14h = arg_ch;\n        var_4h = fcn.0006d850(arg_8h, &var_14h);\n        fcn.00036460(var_10h);\n    }\n    return var_4h;\n}\n",
        "token_count": 263
    },
    "0006d8b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0006dad7)\n// WARNING: Removing unreachable block (ram,0x0006dacc)\n// WARNING: Removing unreachable block (ram,0x0006daee)\n// WARNING: Removing unreachable block (ram,0x0006da33)\n// WARNING: Removing unreachable block (ram,0x0006da63)\n// WARNING: Removing unreachable block (ram,0x0006da6a)\n// WARNING: Removing unreachable block (ram,0x0006da73)\n// WARNING: Removing unreachable block (ram,0x0006da86)\n// WARNING: Removing unreachable block (ram,0x0006da8f)\n// WARNING: Removing unreachable block (ram,0x0006da9f)\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.0006d8b0(int32_t param_1, uint *param_2, int32_t param_3)\n\n{\n    uint arg_ch;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    int32_t var_8h;\n    uint *var_ch;\n    int32_t var_10h;\n    uint var_18h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint *var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    ushort var_58h;\n    uint var_56h;\n    uint var_52h;\n    uint var_4eh;\n    int32_t var_48h;\n    int32_t var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint *var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    uint var_20h;\n    uchar *puStack28;\n    uint var_10h_2;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x8507b930;\n    uStack16 = 0x8507b910;\n    var_10h_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_10h_2;\n    puStack28 = &stack0xffffff70;\n    arg_ch = *(*(var_8h + 0xc) + 4);\n    var_48h = (**0x8500d23c)(3, arg_ch, 0, 0, 0, 0, 1, 0, 0);\n    if (var_48h == 0) {\n        var_64h = 0x21590004;\n    }\n    else {\n        var_28h = 0;\n        for (var_68h = var_ch; var_68h != NULL; var_68h = *var_68h) {\n            if (var_68h[2] != 0) {\n                var_44h = (**0x8500d290)(var_68h[1], var_68h[2], var_68h != var_ch, 0, var_48h);\n                if (var_44h == 0) {\n                    (**0x8500d2ec)();\n                    var_64h = 0x21590004;\n                    goto code_r0x0006db87;\n                }\n                var_4h = 0;\n                (**0x8500d29c)(var_44h, 0, 0);\n                var_4h = 0xffffffff;\n                var_28h = var_28h + var_68h[2];\n            }\n        }\n        var_60h = 1;\n        var_5ch._0_2_ = 0xe;\n        var_5ch._2_2_ = 2;\n        var_56h = *(var_10h + 4);\n        var_58h = *(var_10h + 2);\n        var_52h = 0;\n        var_4eh = 0;\n        var_40h = 0;\n        var_3ch = 0;\n        var_38h = 0;\n        var_34h = 0;\n        var_2ch = &var_60h;\n        var_30h = 0x16;\n        iVar1 = *(var_48h + 0x60);\n        *(iVar1 + -8) = 0;\n        *(iVar1 + -4) = 0;\n        *(iVar1 + -0x21) = 0;\n        iVar1 = *(var_48h + 0x60);\n        *(iVar1 + -0x24) = 0xf;\n        *(iVar1 + -0x23) = 9;\n        *(iVar1 + -0x10) = arg_ch;\n        *(iVar1 + -0xc) = *(var_8h + 0xc);\n        *(iVar1 + -0x20) = var_28h;\n        *(iVar1 + -0x1c) = &var_40h;\n        *(var_48h + 4) = *(var_48h + 4);\n        var_24h = fcn.0007dba0(var_48h, arg_ch, &var_20h, 0xffffffff);\n        var_64h = fcn.0007f742(var_24h);\n        if (var_24h == -0x3ffffdfa) {\n            var_64h = 0x2159000b;\n        }\n    }\ncode_r0x0006db87:\n    *in_FS_OFFSET = var_10h_2;\n    return var_64h;\n}\n",
        "token_count": 1284
    },
    "0006dba0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.0006dba0(int32_t arg_8h, int32_t *arg_ch, uint *arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    do {\n        if (*(arg_8h + 0x10) != '\\0') {\n            return 0x21590006;\n        }\n        iVar1 = fcn.000794d0(&var_ch, &var_8h, arg_8h + 0x120, arg_14h);\n        if (iVar1 == 0) {\n            *arg_ch = var_ch;\n            *arg_10h = var_8h;\n            return 0;\n        }\n        fcn.0001b570(arg_8h + 0x134);\n        var_4h = fcn.00034df0(arg_8h + 300, arg_18h);\n        var_ch = arg_8h + 0x134;\n        fcn.0007a2b0(var_ch);\n        if (var_4h == 0) {\n            return 0x21590002;\n        }\n    } while (var_4h != -1);\n    return 0xffffffff;\n}\n",
        "token_count": 309
    },
    "0006dc70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0006dc70(int32_t arg_8h, int32_t arg_ch, char **arg_10h, char *arg_14h)\n\n{\n    char cVar1;\n    ushort uVar2;\n    uint uVar3;\n    uint32_t in_EDX;\n    uint var_48h;\n    char **var_44h;\n    uint *var_40h;\n    uint var_3ch;\n    uint var_34h;\n    uint *var_30h;\n    uint var_2ch;\n    uint var_24h;\n    uint *var_20h;\n    uint var_1ch;\n    uint var_18h;\n    \n    if ((arg_ch == 4) || (arg_ch == 3)) {\n        uVar2 = fcn.000365f0(in_EDX & 0xffff0000 | *(arg_8h + 0x9a));\n        fcn.0007f7f0(&var_18h, 0x85011938, *(arg_8h + 0x9c), *(arg_8h + 0x9d), *(arg_8h + 0x9e), *(arg_8h + 0x9f), uVar2\n                    );\n        if (arg_ch == 3) {\n            if (arg_14h != 0x4) {\n                return 0x21590064;\n            }\n            var_20h = &var_18h;\n            do {\n                cVar1 = *var_20h;\n                var_20h = var_20h + 1;\n            } while (cVar1 != '\\0');\n            *arg_10h = var_20h + (1 - (&var_18h + 1));\n        }\n        else {\n            if (arg_14h < 1) {\n                return 0x21590064;\n            }\n            var_30h = &var_18h;\n            do {\n                cVar1 = *var_30h;\n                var_30h = var_30h + 1;\n            } while (cVar1 != '\\0');\n            if (arg_14h < var_30h + (1 - (&var_18h + 1))) {\n                fcn.0007f7e4(arg_10h, &var_18h, arg_14h + -1);\n                *(arg_10h + arg_14h + -1) = '\\0';\n            }\n            else {\n                var_40h = &var_18h;\n                var_44h = arg_10h;\n                do {\n                    cVar1 = *var_40h;\n                    *var_44h = cVar1;\n                    var_40h = var_40h + 1;\n                    var_44h = var_44h + 1;\n                } while (cVar1 != '\\0');\n            }\n        }\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = 0x21590001;\n    }\n    return uVar3;\n}\n",
        "token_count": 670
    },
    "0006dde0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0006decd)\n// WARNING: Removing unreachable block (ram,0x0006dec2)\n// WARNING: Removing unreachable block (ram,0x0006dee4)\n// WARNING: Removing unreachable block (ram,0x0006de29)\n// WARNING: Removing unreachable block (ram,0x0006de59)\n// WARNING: Removing unreachable block (ram,0x0006de60)\n// WARNING: Removing unreachable block (ram,0x0006de69)\n// WARNING: Removing unreachable block (ram,0x0006de7c)\n// WARNING: Removing unreachable block (ram,0x0006de85)\n// WARNING: Removing unreachable block (ram,0x0006de95)\n\nuint __cdecl fcn.0006dde0(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t arg_8h_00;\n    uint uVar2;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    uVar2 = *(*(arg_8h + 0xc) + 4);\n    arg_8h_00 = (**0x8500d23c)(3, *(*(arg_8h + 0xc) + 4), 0, 0, 0, 0, 1, 0, 0);\n    if (arg_8h_00 == 0) {\n        uVar2 = 0x21590004;\n    }\n    else {\n        iVar1 = *(arg_8h_00 + 0x60);\n        *(iVar1 + -8) = 0;\n        *(iVar1 + -4) = 0;\n        *(iVar1 + -0x21) = 0;\n        iVar1 = *(arg_8h_00 + 0x60);\n        *(iVar1 + -0x24) = 0xf;\n        *(iVar1 + -0x23) = 0xb;\n        *(iVar1 + -0x10) = uVar2;\n        *(iVar1 + -0xc) = *(arg_8h + 0xc);\n        *(iVar1 + -0x20) = 4;\n        *(iVar1 + -0x1c) = -(arg_ch != '\\0') & 0x85069f70;\n        *(iVar1 + -0x18) = arg_8h;\n        uVar2 = fcn.0007dba0(arg_8h_00, uVar2, &var_8h, 0xffffffff);\n    }\n    return uVar2;\n}\n",
        "token_count": 600
    },
    "0006df70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0006e2d9)\n// WARNING: Removing unreachable block (ram,0x0006e2a3)\n// WARNING: Removing unreachable block (ram,0x0006e2ce)\n// WARNING: Removing unreachable block (ram,0x0006e2d5)\n// WARNING: Removing unreachable block (ram,0x0006e2ec)\n// WARNING: Removing unreachable block (ram,0x0006e2f0)\n\nint32_t __cdecl\nfcn.0006df70(uint32_t arg_8h, uint32_t arg_ch, int32_t *arg_10h, uint noname_3, uint noname_4, uint32_t arg_1ch, \n            uint arg_20h, int32_t arg_24h, uint *arg_28h, uint arg_2ch, int32_t *arg_30h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint var_50h;\n    int32_t var_4ch;\n    int32_t var_48h;\n    int32_t *var_44h;\n    int32_t *var_40h;\n    uint32_t var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    uint *var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_20h = 0;\n    var_1ch = NULL;\n    uVar4 = *(arg_8h + 0x128) + arg_24h;\n    if (*(arg_8h + 0x11c) <= uVar4 && uVar4 != *(arg_8h + 0x11c)) {\n        return -0x3ffffde5;\n    }\n    fcn.0007da30(arg_10h, &var_10h);\n    if (*(arg_8h + 4) == '\\0') goto code_r0x0006e0c4;\n    var_40h = arg_8h + 0x92;\n    var_44h = arg_10h;\n    for (var_3ch = arg_ch; 3 < var_3ch; var_3ch = var_3ch - 4) {\n        if (*var_44h != *var_40h) goto code_r0x0006e00f;\n        var_40h = var_40h + 1;\n        var_44h = var_44h + 1;\n    }\n    if (var_3ch == 0) {\ncode_r0x0006e091:\n        var_4ch = 0;\n    }\n    else {\ncode_r0x0006e00f:\n        var_48h = *var_44h - *var_40h;\n        if (var_48h == 0) {\n            if (var_3ch == 1) goto code_r0x0006e091;\n            var_48h = *(var_44h + 1) - *(var_40h + 1);\n            if (var_48h == 0) {\n                if (var_3ch == 2) goto code_r0x0006e091;\n                var_48h = *(var_44h + 2) - *(var_40h + 2);\n                if (var_48h == 0) {\n                    if ((var_3ch == 3) || (var_48h = *(var_44h + 3) - *(var_40h + 3),  var_48h == 0))\n                    goto code_r0x0006e091;\n                }\n            }\n        }\n        var_4ch = 1;\n        if (var_48h < 1) {\n            var_4ch = -1;\n        }\n    }\n    if (var_4ch != 0) {\n        return -0x3ffffde5;\n    }\ncode_r0x0006e0c4:\n    if ((arg_1ch & 0x400) == 0) {\n        var_14h = (**0x8500d278)(arg_8h & 0xffffff00 | *(*(*(arg_8h + 0xc) + 4) + 0x30), 0);\n        if (var_14h == 0) {\n            var_28h = -0x3fffff66;\n        }\n        else {\n            var_1ch = fcn.00036360(0x70);\n            if (var_1ch == NULL) {\n                var_28h = -0x3fffff66;\n            }\n            else {\n                uVar3 = fcn.00036360(arg_24h);\n                var_1ch[5] = uVar3;\n                if (var_1ch[5] == 0) {\n                    var_28h = -0x3fffff66;\n                }\n                else {\n                    var_20h = (**0x8500d290)(var_1ch[5], arg_24h, 0, 0, var_14h);\n                    if (var_20h == 0) {\n                        var_28h = -0x3fffff66;\n                    }\n                    else {\n                        (**0x8500d270)(var_20h);\n                        var_1ch[4] = arg_8h;\n                        *var_1ch = var_10h;\n                        var_1ch[1] = var_ch;\n                        var_1ch[2] = var_8h;\n                        var_1ch[3] = var_4h;\n                        var_1ch[6] = 0;\n                        var_1ch[7] = 0;\n                        var_1ch[8] = 0;\n                        var_1ch[9] = 0;\n                        var_1ch[10] = 0;\n                        var_1ch[0xb] = 0;\n                        var_1ch[0xb] = var_1ch + 0xc;\n                        var_1ch[10] = 0x40;\n                        iVar1 = *(var_14h + 0x60);\n                        *(iVar1 + -8) = 0x8506a420;\n                        *(iVar1 + -4) = var_1ch;\n                        *(iVar1 + -0x21) = 0;\n                        *(iVar1 + -0x21) = 0x40;\n                        *(iVar1 + -0x21) = *(iVar1 + -0x21) | 0x80;\n                        *(iVar1 + -0x21) = *(iVar1 + -0x21) | 0x20;\n                        iVar1 = *(var_14h + 0x60);\n                        *(iVar1 + -0x24) = 0xf;\n                        *(iVar1 + -0x23) = 10;\n                        *(iVar1 + -0x10) = *(*(arg_8h + 0xc) + 4);\n                        *(iVar1 + -0xc) = *(arg_8h + 0xc);\n                        *(iVar1 + -0x20) = arg_24h;\n                        *(iVar1 + -0x1c) = 0;\n                        *(iVar1 + -0x18) = var_1ch + 6;\n                        *(iVar1 + -0x14) = 0x20;\n                        *(var_14h + 4) = var_20h;\n                        *(var_14h + 0x23) = *(var_14h + 0x23) + -1;\n                        *(var_14h + 0x60) = *(var_14h + 0x60) + -0x24;\n                        *arg_30h = var_14h;\n                        *arg_28h = 0;\n                        var_28h = -0x3fffffea;\n                        var_14h = 0;\n                        var_20h = 0;\n                        var_1ch = NULL;\n                    }\n                }\n            }\n        }\n        if (var_1ch != NULL) {\n            fcn.00036460(var_1ch[5]);\n            fcn.00036460(var_1ch);\n        }\n        if (var_20h != 0) {\n            (**0x8500d2a8)(var_20h);\n        }\n        if (var_14h != 0) {\n            (**0x8500d274)(var_14h);\n        }\n        if (var_28h != -0x3fffffea) {\n            var_28h = -0x3ffffde5;\n        }\n    }\n    else {\n        iVar1 = fcn.00036360(arg_20h);\n        if (iVar1 != 0) {\n            fcn.0007f904(iVar1, arg_2ch, arg_20h);\n            iVar2 = fcn.000793e0(iVar1, arg_20h, arg_8h + 0x120, &var_10h);\n            if (iVar2 == 0) {\n                *arg_28h = arg_20h;\n                return 0;\n            }\n            fcn.00036460(iVar1);\n        }\n        var_28h = -0x3ffffde5;\n    }\n    return var_28h;\n}\n",
        "token_count": 2129
    },
    "0006e420": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0006e420(uint noname_0, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    if (*(arg_ch + 0x18) == 0) {\n        iVar1 = fcn.000793e0(*(arg_10h + 0x14), *(arg_ch + 0x1c), *(arg_10h + 0x10) + 0x120, arg_10h);\n        if (iVar1 == 0) {\n            *(arg_10h + 0x14) = 0;\n        }\n    }\n    if (*(arg_10h + 0x14) != 0) {\n        fcn.00036460(*(arg_10h + 0x14));\n    }\n    fcn.00036460(arg_10h);\n    (**0x8500d2a8)(*(arg_ch + 4));\n    (**0x8500d274)(arg_ch);\n    return 0xc0000016;\n}\n",
        "token_count": 237
    },
    "0006e4b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0006e4b0(int32_t arg_8h, int32_t arg_ch, uchar *arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint8_t var_5h;\n    uint var_4h;\n    \n    var_18h = 0;\n    var_ch = 0;\n    *arg_10h = 0;\n    for (var_14h = 0; var_14h < arg_ch; var_14h = var_14h + 1) {\n        iVar1 = fcn.0007f7de(0x8500dad4, *(arg_8h + var_14h));\n        if (iVar1 != 0) {\n            var_5h = iVar1 + 0x2c;\n            if (0x1f < var_5h) {\n                var_5h = 0x1f;\n            }\n            for (var_10h = 0; var_10h < 5; var_10h = var_10h + 1) {\n                arg_10h[var_18h] =\n                     arg_10h[var_18h] | ((var_5h & 1 << (var_10h & 0x1f)) >> (var_10h & 0x1f)) << (var_ch & 0x1f);\n                var_ch = var_ch + 1;\n                if ((7 < var_ch) && (var_ch = 0,  var_14h < arg_ch + -1)) {\n                    var_18h = var_18h + 1;\n                    arg_10h[var_18h] = 0;\n                }\n            }\n        }\n    }\n    return var_18h + 1;\n}\n",
        "token_count": 424
    },
    "0006e5b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0006e5b0(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    var_ch = 0;\n    var_8h = 0;\n    for (var_4h = 0; var_4h < arg_ch << 3; var_4h = var_4h + 1) {\n        var_8h = ((*(arg_8h + (var_4h >> 3)) & 1 << var_4h % 8) >> var_4h % 8) << var_4h % 0x1c | var_8h;\n        if (var_4h % 0x1c == 0x1b) {\n            *(arg_10h + var_ch * 4) = var_ch << 0x1c | var_8h;\n            var_ch = var_ch + 1;\n            var_8h = 0;\n        }\n    }\n    if (var_4h % 0x1c != 0x1b) {\n        for (; var_4h % 0x1c != 0x1b; var_4h = var_4h + 1) {\n            uVar1 = fcn.0007f77e();\n            uVar1 = uVar1 & 0x80000001;\n            if (uVar1 < 0) {\n                uVar1 = (uVar1 - 1 | 0xfffffffe) + 1;\n            }\n            if (uVar1 == 1) {\n                var_8h = 1 << var_4h % 0x1c | var_8h;\n            }\n        }\n        *(arg_10h + var_ch * 4) = var_ch << 0x1c | var_8h;\n        var_ch = var_ch + 1;\n    }\n    return var_ch;\n}\n",
        "token_count": 462
    },
    "0006e6f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0006e6f0(int32_t arg_8h, uint32_t arg_ch, uint32_t *arg_10h, int32_t arg_14h, uint *arg_18h)\n\n{\n    int16_t iVar1;\n    uint uVar2;\n    uint32_t arg_8h_00;\n    uint32_t in_EDX;\n    uint32_t uVar3;\n    ushort extraout_var;\n    uint var_50h;\n    uint var_4ch;\n    uint32_t var_48h;\n    uint8_t uStack72;\n    uchar auStack71 [23];\n    uint16_t *var_2ch;\n    uint32_t var_28h;\n    uint var_24h;\n    uint8_t *var_20h;\n    uint32_t var_1ch;\n    uint8_t var_15h;\n    int32_t var_14h;\n    uint var_10h;\n    uint8_t var_9h;\n    uint16_t *var_8h;\n    uint32_t var_4h;\n    \n    if ((arg_ch < 0xc) || (0x200 < arg_ch)) {\n        uVar2 = 0;\n    }\n    else {\n        var_14h = arg_8h;\n        if (*(arg_8h + 2) < '\\0') {\n            uVar2 = 0;\n        }\n        else if ((*(arg_8h + 2) >> 3 & 0xf) == 0) {\n            iVar1 = fcn.000365f0(in_EDX & 0xffff0000 | *(arg_8h + 4));\n            if (iVar1 == 1) {\n                var_20h = var_14h + 0xc;\n                if (arg_ch == 0xc) {\n                    uVar2 = 0;\n                }\n                else {\n                    uVar3 = *var_20h;\n                    arg_8h_00 = var_14h + 0xd;\n                    var_28h = arg_ch - 0xd;\n                    if (uVar3 == 0) {\n                        uVar2 = 0;\n                    }\n                    else {\n                        var_2ch = arg_8h_00;\n                        if (((arg_18h == NULL) || (uVar3 != 10)) ||\n                           (arg_8h_00 = fcn.00038b00(arg_8h_00),  arg_8h_00 == 0)) {\n                            if ((uVar3 < 8) || (0x2d < uVar3)) {\n                                uVar2 = 0;\n                            }\n                            else if (uVar3 < var_28h) {\n                                var_1ch = 0;\n                                while (var_1ch < uVar3) {\n                                    if ((((var_1ch == 8) || (var_1ch == 0xd)) ||\n                                        ((var_1ch == 0x12 || (var_1ch == 0x17)))) && (var_1ch < uVar3 - 1)) {\n                                        if (*(var_2ch + var_1ch) != '-') {\n                                            return 0;\n                                        }\n                                    }\n                                    else if (((*(var_2ch + var_1ch) < 0x30) || (0x39 < *(var_2ch + var_1ch))) &&\n                                            ((*(var_2ch + var_1ch) < 0x61 || (0x7a < *(var_2ch + var_1ch))))) {\n                                        return 0;\n                                    }\n                                    arg_8h_00 = var_1ch + 1;\n                                    var_1ch = arg_8h_00;\n                                }\n                                var_2ch = var_2ch + uVar3;\n                                var_28h = var_28h - uVar3;\n                                while (var_28h != 0) {\n                                    uVar3 = *var_2ch;\n                                    var_2ch = var_2ch + 1;\n                                    arg_8h_00 = var_28h - 1;\n                                    if (arg_8h_00 <= uVar3) {\n                                        return 0;\n                                    }\n                                    var_28h = arg_8h_00;\n                                    if (uVar3 == 0) break;\n                                    var_2ch = var_2ch + uVar3;\n                                    arg_8h_00 = arg_8h_00 - uVar3;\n                                    var_28h = arg_8h_00;\n                                }\n                                if (var_28h < 4) {\n                                    uVar2 = 0;\n                                }\n                                else {\n                                    var_8h = var_2ch;\n                                    var_24h._0_2_ = fcn.000365f0(arg_8h_00 & 0xffff0000 | *var_2ch);\n                                    var_10h._0_2_ = fcn.000365f0(CONCAT22(extraout_var, var_8h[1]));\n                                    if (var_24h == 1) {\n                                        if (var_10h == 1) {\n                                            var_4h = fcn.0006e4b0(var_20h + 1, *var_20h, &var_48h);\n                                            if (var_4h < 5) {\n                                                uVar2 = 0;\n                                            }\n                                            else {\n                                                var_9h = var_48h._2_1_;\n                                                for (var_1ch = 0; var_1ch < var_4h; var_1ch = var_1ch + 1) {\n                                                    *(&var_48h + var_1ch) = *(&var_48h + var_1ch) ^ var_9h >> 1;\n                                                }\n                                                var_48h = var_48h & 0xff00ffff;\n                                                var_15h = 0;\n                                                for (var_1ch = 0; var_1ch < var_4h; var_1ch = var_1ch + 1) {\n                                                    var_15h = var_15h + *(&var_48h + var_1ch);\n                                                }\n                                                if (var_9h == var_15h) {\n                                                    if ((uStack72 & 0x1f) < 0x1a) {\n                                                        *arg_10h = var_48h;\n                                                        *(arg_10h + 1) = uStack72;\n                                                        if (arg_14h != 0) {\n                                                            fcn.0007f904(arg_14h, auStack71, uStack72 & 0x1f);\n                                                        }\n                                                        if (arg_18h != NULL) {\n                                                            *arg_18h = 0;\n                                                        }\n                                                        uVar2 = 1;\n                                                    }\n                                                    else {\n                                                        uVar2 = 0;\n                                                    }\n                                                }\n                                                else {\n                                                    uVar2 = 0;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            uVar2 = 0;\n                                        }\n                                    }\n                                    else {\n                                        uVar2 = 0;\n                                    }\n                                }\n                            }\n                            else {\n                                uVar2 = 0;\n                            }\n                        }\n                        else {\n                            *arg_18h = 1;\n                            fcn.0007f904(arg_14h, var_2ch, 10);\n                            *(arg_14h + 10) = 0;\n                            uVar2 = 1;\n                        }\n                    }\n                }\n            }\n            else {\n                uVar2 = 0;\n            }\n        }\n        else {\n            uVar2 = 0;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 1680
    },
    "0006ea80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Heritage AFTER dead removal. Example location: s0xffffff8c : 0x0006ead0\n// WARNING: Could not reconcile some variable overlaps\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl\nfcn.0006ea80(int32_t arg_8h, uint arg_ch, uint arg_10h, uint32_t arg_14h, int32_t arg_18h, uint32_t arg_1ch, \n            int32_t *arg_20h)\n\n{\n    ushort uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint8_t *var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint8_t uStack116;\n    uchar auStack115 [31];\n    uint8_t *var_50h;\n    uint8_t var_49h;\n    uint32_t var_48h;\n    uint var_44h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint8_t var_ah;\n    uint8_t var_9h;\n    uint32_t var_8h;\n    uint *var_4h;\n    \n    if (arg_14h < 0x1d) {\n        iVar3 = fcn.0006e6f0(arg_8h, arg_ch, &var_14h, 0, 0);\n        if (iVar3 == 0) {\n            uVar2 = 0;\n        }\n        else {\n            var_74h = var_14h;\n            uStack116 = var_10h & 0x80 | arg_14h & 0x1f | (arg_18h != 0) << 5;\n    // WARNING: Ignoring partial resolution of indirect\n            var_74h._2_1_ = 0;\n            fcn.0007f904(auStack115, arg_10h, arg_14h);\n            var_8h = arg_14h + 5;\n            var_9h = 0;\n            for (var_1ch = 0; var_1ch < arg_14h + 5; var_1ch = var_1ch + 1) {\n                var_9h = var_9h + *(&var_74h + var_1ch);\n            }\n            for (var_1ch = 0; var_1ch < var_8h; var_1ch = var_1ch + 1) {\n                *(&var_74h + var_1ch) = *(&var_74h + var_1ch) ^ var_9h >> 1;\n            }\n            var_48h = fcn.0006e5b0(&var_74h, var_8h, &var_44h);\n            var_49h = *(arg_8h + 0xc);\n            if (var_49h == 0) {\n                uVar2 = 0;\n            }\n            else {\n                var_50h = var_49h + arg_8h + 0xd;\n                for (var_7ch = var_50h; *var_7ch != 0; var_7ch = var_7ch + *var_7ch + 1) {\n                }\n                var_7ch = var_7ch + (5 - arg_8h);\n                if (var_7ch < 0x81) {\n                    fcn.0007f904(arg_1ch, arg_8h, var_7ch);\n                    var_18h = arg_1ch;\n                    *(arg_1ch + 2) = *(arg_1ch + 2) | 0x80;\n                    *(arg_1ch + 3) = *(arg_1ch + 3) | 0x80;\n                    *(arg_1ch + 2) = *(arg_1ch + 2) | 4;\n                    *(arg_1ch + 3) = *(arg_1ch + 3) & 0xf0;\n                    uVar1 = fcn.000365f0(arg_1ch & 0xffff0000 | var_48h & 0xffff);\n                    *(var_18h + 6) = uVar1;\n                    *(var_18h + 8) = 0;\n                    *(var_18h + 10) = 0;\n                    var_4h = var_7ch + arg_1ch;\n                    var_ah = 0xc;\n                    for (var_1ch = 0; var_1ch < var_48h; var_1ch = var_1ch + 1) {\n                        *var_4h = 0xc0;\n                        *(var_4h + 1) = var_ah;\n                        var_4h = var_4h + 2;\n                        uVar1 = fcn.000365f0(1);\n                        *var_4h = uVar1;\n                        var_4h = var_4h + 2;\n                        uVar1 = fcn.000365f0(1);\n                        *var_4h = uVar1;\n                        var_4h = var_4h + 2;\n                        uVar2 = fcn.000365c0(0x3c);\n                        *var_4h = uVar2;\n                        var_4h = var_4h + 1;\n                        uVar1 = fcn.000365f0(4);\n                        *var_4h = uVar1;\n                        var_4h = var_4h + 2;\n                        *var_4h = (&var_44h)[var_1ch];\n                        uVar2 = fcn.000365c0((&var_44h)[var_1ch]);\n                        *var_4h = uVar2;\n                        var_4h = var_4h + 1;\n                    }\n                    *arg_20h = var_4h - arg_1ch;\n                    uVar2 = 1;\n                }\n                else {\n                    uVar2 = 0;\n                }\n            }\n        }\n    }\n    else {\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 1382
    },
    "0006edf0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0006edf0(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    if (*(arg_8h + 0xc) == 0) {\n        fcn.0007bdc0(*(arg_8h + 0x14), arg_ch, arg_10h);\n    }\n    else {\n        (**(arg_8h + 0xc))(arg_8h, arg_ch, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 112
    },
    "0006eec0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0006eec0(int32_t *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint32_t arg_18h)\n\n{\n    int32_t arg_10h_00;\n    uint uVar1;\n    int32_t iVar2;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_10h_00 = fcn.00036330(0x168);\n    if (arg_10h_00 == 0) {\n        var_10h = 0x21590004;\n    }\n    else {\n        fcn.0007f916(arg_10h_00, 0, 0x168);\n        *(arg_10h_00 + 4) = 0x8506b130;\n        *(arg_10h_00 + 8) = 0x8506b0c0;\n        *(arg_10h_00 + 0xc) = 0x8506bb00;\n        *(arg_10h_00 + 0x10) = 0x8506bbf0;\n        var_ch = 0;\n        if ((arg_18h & 1) != 0) {\n            var_ch = 2;\n        }\n        var_8h = arg_ch;\n        var_4h = 0;\n        var_10h = fcn.0007b640(arg_10h_00 + 0x14, &var_8h, 0, 0, arg_10h, arg_14h, var_ch);\n        if (var_10h == 0) {\n            uVar1 = fcn.00036490(arg_ch);\n            *(arg_10h_00 + 0x34) = uVar1;\n            if (*(arg_10h_00 + 0x34) == 0) {\n                var_10h = 0x21590004;\n            }\n            else {\n                uVar1 = fcn.00036330(arg_14h);\n                *(arg_10h_00 + 0x30) = uVar1;\n                if (*(arg_10h_00 + 0x30) == 0) {\n                    var_10h = 0x21590004;\n                }\n                else {\n                    fcn.0007f904(*(arg_10h_00 + 0x30), arg_10h, arg_14h);\n                    *(arg_10h_00 + 0x38) = arg_14h;\n                    *(arg_10h_00 + 0x3c) = var_ch;\n                    iVar2 = fcn.00034d00(arg_10h_00 + 0x50);\n                    if (iVar2 == 0) {\n                        var_10h = fcn.00036750();\n                    }\n                    else {\n                        iVar2 = fcn.0001a700(arg_10h_00 + 0x48, 0x8506c290, arg_10h_00);\n                        if (iVar2 == 0) {\n                            fcn.000355f0(arg_10h_00 + 0x44);\n                            fcn.00037b70(arg_10h_00 + 0x1c);\n                            *arg_8h = arg_10h_00;\n                            var_10h = 0;\n                        }\n                        else {\n                            var_10h = fcn.00036750();\n                        }\n                    }\n                }\n            }\n        }\n    }\n    if ((var_10h != 0) && (arg_10h_00 != 0)) {\n        iVar2 = fcn.00038390(arg_10h_00 + 0x50);\n        if (iVar2 != 0) {\n            fcn.00034d90(arg_10h_00 + 0x50);\n        }\n        fcn.00036460(*(arg_10h_00 + 0x34));\n        fcn.00036460(*(arg_10h_00 + 0x30));\n        fcn.0007b950(arg_10h_00 + 0x14, 0);\n        fcn.00036460(arg_10h_00);\n    }\n    return var_10h;\n}\n",
        "token_count": 955
    },
    "0006f0c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0006f0c0(int32_t arg_8h)\n\n{\n    uint *var_4h;\n    \n    fcn.00037c10(arg_8h + 0x1c);\n    for (var_4h = *(arg_8h + 0x18); var_4h != NULL; var_4h = *var_4h) {\n        fcn.0007b950(var_4h + 2, 0);\n    }\n    fcn.00037cc0(arg_8h + 0x1c);\n    if (*(arg_8h + 0x15c) != 0) {\n        fcn.0007b950(arg_8h + 0x160, 0);\n    }\n    return;\n}\n",
        "token_count": 190
    },
    "0006f130": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0006f130(int32_t arg_8h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint var_10h;\n    uint var_ch;\n    uint *var_8h;\n    uint *var_4h;\n    \n    var_8h = *(arg_8h + 0x40);\n    while (var_8h != NULL) {\n        puVar1 = *var_8h;\n        fcn.00036460(var_8h);\n        var_8h = puVar1;\n    }\n    var_4h = *(arg_8h + 0x18);\n    while (var_4h != NULL) {\n        puVar1 = *var_4h;\n        fcn.00036460(var_4h);\n        var_4h = puVar1;\n    }\n    iVar2 = fcn.00038390(arg_8h + 0x48);\n    if (iVar2 != 0) {\n        fcn.00034dc0(arg_8h + 0x50);\n        fcn.000383c0(arg_8h + 0x48, 0);\n        fcn.00034d90(arg_8h + 0x50);\n        fcn.00038370(arg_8h + 0x48);\n    }\n    fcn.00035650(arg_8h + 0x44);\n    if (*(arg_8h + 0x15c) == 0) {\n        while (*(arg_8h + 0x158) != *(arg_8h + 0x154)) {\n            uVar3 = *(arg_8h + 0x158) & 0x8000001f;\n            if (uVar3 < 0) {\n                uVar3 = (uVar3 - 1 | 0xffffffe0) + 1;\n            }\n            *(arg_8h + 0x158) = uVar3;\n            fcn.0007b950(arg_8h + 0x54 + *(arg_8h + 0x158) * 8, 0);\n            uVar3 = *(arg_8h + 0x158) + 1U & 0x8000001f;\n            if (uVar3 < 0) {\n                uVar3 = (uVar3 - 1 | 0xffffffe0) + 1;\n            }\n            *(arg_8h + 0x158) = uVar3;\n        }\n    }\n    else {\n        fcn.0007b950(arg_8h + 0x160, 0);\n    }\n    fcn.00036460(*(arg_8h + 0x34));\n    fcn.00036460(*(arg_8h + 0x30));\n    fcn.000356c0(arg_8h + 0x44);\n    fcn.00035620(arg_8h + 0x44);\n    fcn.0007b950(arg_8h + 0x14, 0);\n    fcn.00037be0(arg_8h + 0x1c);\n    fcn.00036460(arg_8h);\n    return;\n}\n",
        "token_count": 718
    },
    "0006f320": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl\nfcn.0006f320(uint arg_8h, uint arg_ch, uint arg_10h, uint *arg_14h, int32_t *arg_18h, uint32_t *arg_1ch, uint arg_20h)\n\n{\n    uint *puVar1;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    var_18h = fcn.0006ff40(arg_8h, &var_4h, 0);\n    if (var_18h == 0) {\n        var_24h = 0;\n        var_20h = arg_ch;\n        var_1ch = 1;\n        fcn.0002f610(&var_24h);\n        var_8h = 0;\n        var_ch = 0xc;\n        var_10h = &var_24h;\n        var_14h = arg_10h;\n        var_18h = fcn.0007c3b0(var_4h, &var_14h, arg_18h, arg_1ch, arg_20h, 0);\n        if (var_18h == 0) {\n            if (*arg_1ch < 0xc) {\n                fcn.0007c0d0(var_4h, *arg_18h);\n                *arg_18h = 0;\n                *arg_1ch = 0;\n                var_18h = 0x2159000a;\n            }\n            else {\n                puVar1 = *arg_18h;\n                var_24h = *puVar1;\n                var_20h = puVar1[1];\n                var_1ch = puVar1[2];\n                fcn.0002f610(&var_24h);\n                if (var_1ch == '\\x02') {\n                    *arg_14h = var_20h;\n                    *arg_1ch = *arg_1ch - 0xc;\n                    if (*arg_1ch < 1) {\n                        fcn.0007c0d0(var_4h, *arg_18h);\n                        *arg_18h = 0;\n                        *arg_1ch = 0;\n                    }\n                    else {\n                        *arg_18h = *arg_18h + 0xc;\n                        *(*arg_18h + -0xc) = var_4h;\n                    }\n                    var_18h = 0;\n                }\n                else {\n                    fcn.0007c0d0(var_4h, *arg_18h);\n                    *arg_18h = 0;\n                    *arg_1ch = 0;\n                    var_18h = 0x2159000a;\n                }\n            }\n        }\n    }\n    fcn.00070190(arg_8h, &var_4h, var_18h == 0);\n    return var_18h;\n}\n",
        "token_count": 708
    },
    "0006f500": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0006f500(uint arg_8h, uint arg_ch, uint arg_10h, uint *arg_14h, uint32_t arg_18h)\n\n{\n    uint var_30h;\n    uint var_2ch;\n    uint32_t var_28h;\n    int32_t var_24h;\n    uint var_20h;\n    uint *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_24h = 0;\n    var_4h = 0;\n    while ((var_4h < 5 && (var_24h = fcn.0006fcc0(arg_8h, &var_8h, arg_14h),  var_24h == 0))) {\n        while (var_24h = fcn.0007bf30(var_8h, &var_ch, &var_10h, 0, 0),  var_24h == 0) {\n            fcn.0007c0d0(var_8h, var_ch);\n        }\n        if (var_24h == 0x21590002) {\n            var_30h = *arg_14h;\n            var_2ch = arg_ch;\n            var_28h = (arg_18h & 1) != 0;\n            fcn.0002f610(&var_30h);\n            var_14h = 0;\n            var_18h = 0xc;\n            var_1ch = &var_30h;\n            var_20h = arg_10h;\n            var_24h = fcn.0007c290(var_8h, &var_20h, 0);\n            if (var_24h == 0) {\n                return 0;\n            }\n            fcn.0006fe70(arg_8h, *arg_14h, 0);\n            *arg_14h = 0;\n        }\n        else {\n            fcn.0006fe70(arg_8h, *arg_14h, 0);\n        }\n        var_4h = var_4h + 1;\n    }\n    return var_24h;\n}\n",
        "token_count": 512
    },
    "0006f670": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0006f670(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint *var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_1ch = 0;\n    var_20h = arg_ch;\n    var_18h = 3;\n    fcn.0002f610(&var_20h);\n    var_8h = 0;\n    var_ch = 0xc;\n    var_10h = &var_20h;\n    var_14h = arg_10h;\n    var_4h = fcn.0006fe00(arg_8h, arg_ch);\n    if (var_4h == 0) {\n        uVar1 = 0x21590006;\n    }\n    else {\n        uVar1 = fcn.0007c290(var_4h, &var_14h, 0);\n    }\n    return uVar1;\n}\n",
        "token_count": 258
    },
    "0006f6f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0006f6f0(uint arg_8h, int32_t arg_ch, int32_t **arg_10h, uint32_t *arg_14h, uint arg_18h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.0006fe00(arg_8h, arg_ch);\n    if (var_4h == 0) {\n        var_8h = 0x21590006;\n    }\n    else {\n        while (var_8h = fcn.0007bf30(var_4h, arg_10h, arg_14h, arg_18h, 0),  var_8h == 0) {\n            if (*arg_14h < 0xc) {\n                fcn.0007c0d0(var_4h, *arg_10h);\n                *arg_10h = NULL;\n                *arg_14h = 0;\n                fcn.0006fe70(arg_8h, arg_ch, 0);\n                return 0x2159000a;\n            }\n            piVar1 = *arg_10h;\n            var_14h = *piVar1;\n            var_10h = piVar1[1];\n            var_ch = piVar1[2];\n            fcn.0002f610(&var_14h);\n            if (var_ch != '\\x06') {\n                if ((var_14h == arg_ch) && ((var_ch == '\\x02' || (var_ch == '\\x03')))) {\n                    if (var_ch == '\\x02') {\n                        iVar2 = fcn.000703d0(arg_8h, arg_ch, *arg_10h, *arg_14h);\n                        if (iVar2 == 0) {\n                            fcn.0007c0d0(var_4h, *arg_10h);\n                        }\n                        *arg_10h = NULL;\n                        *arg_14h = 0;\n                        return 0x21590006;\n                    }\n                    *arg_14h = *arg_14h - 0xc;\n                    if (*arg_14h < 1) {\n                        fcn.0007c0d0(var_4h, *arg_10h);\n                        *arg_10h = NULL;\n                        *arg_14h = 0;\n                    }\n                    else {\n                        *arg_10h = *arg_10h + 3;\n                        (*arg_10h)[-3] = var_4h;\n                    }\n                    return 0;\n                }\n                fcn.0007c0d0(var_4h, *arg_10h);\n                *arg_10h = NULL;\n                *arg_14h = 0;\n                fcn.0006fe70(arg_8h, arg_ch, 0);\n                return 0x2159000a;\n            }\n            fcn.0007c0d0(var_4h, *arg_10h);\n        }\n    }\n    return var_8h;\n}\n",
        "token_count": 728
    },
    "0006f8c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl\nfcn.0006f8c0(uint arg_8h, int32_t arg_ch, int32_t *arg_10h, int32_t **arg_14h, uint32_t *arg_18h, uint arg_1ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    *arg_14h = NULL;\n    *arg_18h = 0;\n    iVar2 = fcn.00070450(arg_8h, arg_ch, arg_14h, arg_18h, &var_4h);\n    if (iVar2 == 0) {\n        var_4h = fcn.0006fe00(arg_8h, arg_ch);\n        if (var_4h == 0) {\n            return 0x21590006;\n        }\n        while (var_8h = fcn.0007bf30(var_4h, arg_14h, arg_18h, arg_1ch, 0),  var_8h == 0) {\n            if (*arg_18h < 0xc) {\n                var_8h = 0x2159000a;\n                break;\n            }\n            piVar1 = *arg_14h;\n            var_14h = *piVar1;\n            var_10h = piVar1[1];\n            var_ch = piVar1[2];\n            fcn.0002f610(&var_14h);\n            if (var_ch == '\\x06') {\n                fcn.0007c0d0(var_4h, *arg_14h);\n            }\n            else {\n                if ((var_ch == '\\x02') && (var_14h == arg_ch)) goto code_r0x0006f9f5;\n                if ((var_ch != '\\x03') || (var_14h != arg_ch)) {\n                    var_8h = 0x2159000a;\n                    break;\n                }\n                fcn.0007c0d0(var_4h, *arg_14h);\n            }\n        }\n    }\n    else {\n        piVar1 = *arg_14h;\n        var_14h = *piVar1;\n        var_10h = piVar1[1];\n        var_ch = piVar1[2];\n        fcn.0002f610(&var_14h);\ncode_r0x0006f9f5:\n        *arg_10h = var_10h;\n        *arg_18h = *arg_18h - 0xc;\n        if (*arg_18h < 1) {\n            fcn.0007c0d0(var_4h, *arg_14h);\n            *arg_14h = NULL;\n            *arg_18h = 0;\n        }\n        else {\n            *arg_14h = *arg_14h + 3;\n            (*arg_14h)[-3] = var_4h;\n        }\n        var_8h = 0;\n    }\n    if ((var_8h != 0) && (*arg_14h != NULL)) {\n        fcn.0007c0d0(var_4h, *arg_14h);\n        *arg_14h = NULL;\n        *arg_18h = 0;\n    }\n    fcn.0006fe70(arg_8h, arg_ch, var_8h == 0);\n    return var_8h;\n}\n",
        "token_count": 825
    },
    "0006fad0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0006fad0(uint noname_0, int32_t arg_ch)\n\n{\n    uint var_4h;\n    \n    if (arg_ch != 0) {\n        fcn.0007c0d0(*(arg_ch + -0xc), arg_ch + -0xc);\n    }\n    return;\n}\n",
        "token_count": 73
    },
    "0006fb00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0006fb00(int32_t arg_8h, char *arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint *puVar3;\n    uint var_20h;\n    uint var_18h;\n    char *var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    char *var_4h;\n    \n    if (arg_ch == NULL) {\n        uVar2 = 0;\n    }\n    else {\n        var_4h = arg_ch;\n        while (*var_4h != '\\0') {\n            var_14h = var_4h;\n            do {\n                cVar1 = *var_14h;\n                var_14h = var_14h + 1;\n                var_4h = var_14h;\n            } while (cVar1 != '\\0');\n        }\n        puVar3 = fcn.00036330(var_4h + (0x15 - arg_ch));\n        if (puVar3 == NULL) {\n            uVar2 = 0x21590004;\n        }\n        else {\n            fcn.0007f904(puVar3 + 5, arg_ch, var_4h + (1 - arg_ch));\n            puVar3[1] = 0;\n            puVar3[4] = arg_10h;\n            fcn.00035650(arg_8h + 0x44);\n            *puVar3 = *(arg_8h + 0x40);\n            *(arg_8h + 0x40) = puVar3;\n            fcn.000356c0(arg_8h + 0x44);\n            uVar2 = 0;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 399
    },
    "0006fbf0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0006fbf0(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, uint arg_18h)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_10h == 0) {\n        uVar1 = 0;\n    }\n    else if ((arg_ch == 0xf) && (arg_14h == 0xc)) {\n        uVar1 = fcn.00071970(arg_8h, arg_10h);\n    }\n    else {\n        puVar2 = fcn.00036330(arg_14h + 0x14);\n        if (puVar2 == NULL) {\n            uVar1 = 0x21590004;\n        }\n        else {\n            fcn.0007f904(puVar2 + 5, arg_10h, arg_14h);\n            puVar2[1] = 1;\n            puVar2[2] = arg_ch;\n            puVar2[3] = arg_14h;\n            puVar2[4] = arg_18h;\n            fcn.00035650(arg_8h + 0x44);\n            *puVar2 = *(arg_8h + 0x40);\n            *(arg_8h + 0x40) = puVar2;\n            fcn.000356c0(arg_8h + 0x44);\n            uVar1 = 0;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 358
    },
    "0006fcc0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0006fcc0(int32_t arg_8h, uint *arg_ch, uint *arg_10h)\n\n{\n    uint uVar1;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint *var_8h;\n    uint *var_4h;\n    \n    var_4h = fcn.00036330(0x14);\n    if (var_4h == NULL) {\n        var_10h = 0x21590004;\n    }\n    else {\n        *var_4h = 0;\n        var_4h[1] = 0;\n        var_4h[2] = 0;\n        var_4h[3] = 0;\n        var_4h[4] = 0;\n        var_10h = fcn.0006ff40(arg_8h, var_4h + 2, &var_ch);\n        if (var_10h == 0) {\n            fcn.00037da0(arg_8h + 0x1c);\n            do {\n                uVar1 = fcn.0007f77e();\n                var_4h[1] = uVar1;\n                for (var_8h = *(arg_8h + 0x18); (var_8h != NULL && (var_4h[1] != var_8h[1])); var_8h = *var_8h) {\n                }\n            } while (var_8h != NULL);\n            *var_4h = *(arg_8h + 0x18);\n            *(arg_8h + 0x18) = var_4h;\n            *arg_ch = var_4h[2];\n            *arg_10h = var_4h[1];\n            fcn.00037e30(arg_8h + 0x1c);\n            if (var_ch == 0) {\n                var_10h = 0;\n            }\n            else {\n                var_10h = fcn.0007bc60(*arg_ch, 0);\n                if (var_10h != 0) {\n                    fcn.0006fe70(arg_8h, *arg_10h, 0);\n                    *arg_ch = 0;\n                    *arg_10h = 0;\n                }\n            }\n        }\n        else {\n            fcn.00036460(var_4h);\n        }\n    }\n    return var_10h;\n}\n",
        "token_count": 546
    },
    "0006fe00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0006fe00(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint var_8h;\n    uint *var_4h;\n    \n    var_8h = 0;\n    fcn.00037c10(arg_8h + 0x1c);\n    for (var_4h = *(arg_8h + 0x18); (var_4h != NULL && (var_4h[1] != arg_ch)); var_4h = *var_4h) {\n    }\n    if (var_4h != NULL) {\n        var_8h = var_4h[2];\n    }\n    fcn.00037cc0(arg_8h + 0x1c);\n    return var_8h;\n}\n",
        "token_count": 176
    },
    "0006fe70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0006fe70(int32_t arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    uint *var_ch;\n    uint *var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    fcn.00037da0(arg_8h + 0x1c);\n    var_8h = NULL;\n    for (var_ch = *(arg_8h + 0x18); (var_ch != NULL && (var_ch[1] != arg_ch)); var_ch = *var_ch) {\n        var_8h = var_ch;\n    }\n    if (var_ch != NULL) {\n        if (var_8h == NULL) {\n            *(arg_8h + 0x18) = *var_ch;\n        }\n        else {\n            *var_8h = *var_ch;\n        }\n        if (var_ch[3] != 0) {\n            fcn.0007c0d0(var_ch[2], var_ch[3]);\n        }\n        var_4h = var_ch[2];\n        fcn.00036460(var_ch);\n    }\n    fcn.00037e30(arg_8h + 0x1c);\n    if (var_4h != 0) {\n        fcn.00070190(arg_8h, &var_4h, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 317
    },
    "0006ff40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0006ff40(int32_t arg_8h, uint *arg_ch, uint *arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t var_10h;\n    uint *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_10h != NULL) {\n        *arg_10h = 0;\n    }\n    fcn.00035650(arg_8h + 0x44);\n    if (*(arg_8h + 0x15c) == 0) {\n        if (*(arg_8h + 0x154) == *(arg_8h + 0x158)) {\n            var_8h = *(arg_8h + 0x34);\n            var_4h = 0;\n            var_10h = fcn.0007b640(arg_ch, &var_8h, 0, 0, *(arg_8h + 0x30), *(arg_8h + 0x38), *(arg_8h + 0x3c));\n            if (var_10h == 0) {\n                for (var_ch = *(arg_8h + 0x40); var_ch != NULL; var_ch = *var_ch) {\n                    if (var_ch[1] == 0) {\n                        var_10h = fcn.0007bdc0(*arg_ch, var_ch + 5, var_ch[4]);\n                        if (var_10h != 0) {\n                            fcn.0007b950(arg_ch, 0);\n                            goto code_r0x0007013d;\n                        }\n                    }\n                    else {\n                        fcn.0007c110(*arg_ch, var_ch[2], var_ch + 5, var_ch[3], var_ch[4]);\n                    }\n                }\n                var_10h = 0;\n            }\ncode_r0x0007013d:\n            fcn.000356c0(arg_8h + 0x44);\n            if (var_10h == 0) {\n                if (arg_10h == NULL) {\n                    var_10h = fcn.0007bc60(*arg_ch, 0);\n                    if (var_10h != 0) {\n                        fcn.0007b950(arg_ch, 0);\n                    }\n                }\n                else {\n                    *arg_10h = 1;\n                }\n            }\n        }\n        else {\n            uVar1 = *(arg_8h + 0x158) & 0x8000001f;\n            if (uVar1 < 0) {\n                uVar1 = (uVar1 - 1 | 0xffffffe0) + 1;\n            }\n            *(arg_8h + 0x158) = uVar1;\n            *arg_ch = *(arg_8h + 0x54 + *(arg_8h + 0x158) * 8);\n            *(arg_8h + 0x54 + *(arg_8h + 0x158) * 8) = 0;\n            *(arg_8h + 0x58 + *(arg_8h + 0x158) * 8) = 0xffffffff;\n            uVar1 = *(arg_8h + 0x158) + 1U & 0x8000001f;\n            if (uVar1 < 0) {\n                uVar1 = (uVar1 - 1 | 0xffffffe0) + 1;\n            }\n            *(arg_8h + 0x158) = uVar1;\n            fcn.000356c0(arg_8h + 0x44);\n            var_10h = 0;\n        }\n    }\n    else {\n        if (*(arg_8h + 0x164) == 0) {\n            if (*(arg_8h + 0x160) == 0) {\n                var_10h = 0x21590003;\n            }\n            else {\n                *arg_ch = *(arg_8h + 0x160);\n                *(arg_8h + 0x164) = 1;\n                var_10h = 0;\n            }\n        }\n        else {\n            var_10h = 0x21590064;\n        }\n        fcn.000356c0(arg_8h + 0x44);\n    }\n    return var_10h;\n}\n",
        "token_count": 976
    },
    "00070190": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00070190(int32_t arg_8h, uint *arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint var_4h;\n    \n    if (arg_10h == 0) {\n        fcn.0007b950(arg_ch, 0);\n        if (*(arg_8h + 0x15c) != 0) {\n            *(arg_8h + 0x160) = 0;\n            *(arg_8h + 0x164) = 0;\n        }\n    }\n    else {\n        fcn.00035650(arg_8h + 0x44);\n        if (*(arg_8h + 0x15c) == 0) {\n            uVar1 = *(arg_8h + 0x154) + 1U & 0x8000001f;\n            if (uVar1 < 0) {\n                uVar1 = (uVar1 - 1 | 0xffffffe0) + 1;\n            }\n            if (uVar1 == *(arg_8h + 0x158)) {\n                fcn.0007b950(arg_ch, 0);\n            }\n            else {\n                *(arg_8h + 0x54 + *(arg_8h + 0x154) * 8) = *arg_ch;\n                uVar2 = fcn.00026f20();\n                *(arg_8h + 0x58 + *(arg_8h + 0x154) * 8) = uVar2;\n                *(arg_8h + 0x154) = uVar1;\n                *arg_ch = 0;\n            }\n        }\n        else {\n            *(arg_8h + 0x164) = 0;\n            *arg_ch = 0;\n        }\n        fcn.000356c0(arg_8h + 0x44);\n    }\n    return;\n}\n",
        "token_count": 436
    },
    "000703d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __cdecl fcn.000703d0(int32_t arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint *var_8h;\n    uint var_4h;\n    \n    fcn.00037c10(arg_8h + 0x1c);\n    for (var_8h = *(arg_8h + 0x18); (var_8h != NULL && (var_8h[1] != arg_ch)); var_8h = *var_8h) {\n    }\n    if (var_8h != NULL) {\n        var_8h[3] = arg_10h;\n        var_8h[4] = arg_14h;\n    }\n    fcn.00037cc0(arg_8h + 0x1c);\n    return var_8h != NULL;\n}\n",
        "token_count": 196
    },
    "00070450": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00070450(int32_t arg_8h, int32_t arg_ch, uint *arg_10h, uint *arg_14h, uint *arg_18h)\n\n{\n    bool bVar1;\n    uint var_8h;\n    uint *var_4h;\n    \n    bVar1 = false;\n    fcn.00037c10(arg_8h + 0x1c);\n    for (var_4h = *(arg_8h + 0x18); (var_4h != NULL && (var_4h[1] != arg_ch)); var_4h = *var_4h) {\n    }\n    if (var_4h != NULL) {\n        *arg_10h = var_4h[3];\n        *arg_14h = var_4h[4];\n        *arg_18h = var_4h[2];\n        bVar1 = var_4h[3] != 0;\n        var_4h[3] = 0;\n        var_4h[4] = 0;\n    }\n    fcn.00037cc0(arg_8h + 0x1c);\n    return bVar1;\n}\n",
        "token_count": 268
    },
    "000704f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.000704f0(int32_t *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint32_t arg_18h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    uint var_18h;\n    uint var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    arg_8h_00 = fcn.00036330(0x150);\n    if (arg_8h_00 == 0) {\n        iVar1 = 0x21590004;\n    }\n    else {\n        fcn.0007f916(arg_8h_00, 0, 0x150);\n        *(arg_8h_00 + 4) = 0x8506c6f0;\n        *(arg_8h_00 + 8) = 0x8506c610;\n        *(arg_8h_00 + 0xc) = 0x8506c7f0;\n        *(arg_8h_00 + 0x10) = 0x8506c8d0;\n        var_ch = arg_ch;\n        var_8h = 0;\n        var_10h = (arg_18h & 1) != 0;\n        iVar1 = fcn.0007b640(arg_8h_00 + 0x14, &var_ch, arg_10h, arg_14h, 0, 0, var_10h);\n        if (iVar1 == 0) {\n            fcn.000355f0(arg_8h_00 + 0x18);\n            fcn.000355f0(arg_8h_00 + 0x130);\n            for (var_4h = 0; var_4h < 0xb; var_4h = var_4h + 1) {\n                *(arg_8h_00 + 0x38 + var_4h * 0x18) = arg_8h_00;\n            }\n            *arg_8h = arg_8h_00;\n            iVar1 = 0;\n        }\n        else {\n            fcn.00036460(arg_8h_00);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 526
    },
    "00070940": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00070940(int32_t arg_8h, int32_t arg_ch)\n\n{\n    if (arg_ch != 0) {\n        fcn.0007c0d0(*(*(arg_8h + 4) + 0xc), arg_ch + -0xc);\n    }\n    return;\n}\n",
        "token_count": 73
    },
    "00070970": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00070970(int32_t arg_8h, int32_t *arg_ch, uint32_t *arg_10h, uint arg_14h)\n\n{\n    uint *puVar1;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if (*(*(*(arg_8h + 4) + 0x10) + 0x24) == 0) {\n        if (*(arg_8h + 8) == 0) {\n            var_4h = 0x21590001;\n        }\n        else if (*(arg_8h + 0x10) == 0) {\n            while (var_4h = fcn.0007bf30(*(*(arg_8h + 4) + 0xc), arg_ch, arg_10h, arg_14h, 1),  var_4h == 0) {\n                if (*arg_10h < 0xc) {\n                    fcn.0007c0d0(*(*(arg_8h + 4) + 0xc), *arg_ch);\n                    *arg_ch = 0;\n                    *arg_10h = 0;\n                    *(arg_8h + 0x10) = 1;\n                    *(arg_8h + 0x14) = 0x2159000a;\n                    return *(arg_8h + 0x14);\n                }\n                puVar1 = *arg_ch;\n                var_10h = *puVar1;\n                var_ch = puVar1[1];\n                var_8h = puVar1[2];\n                fcn.0002f610(&var_10h);\n                if (var_8h != '\\x06') {\n                    if (var_8h != '\\x03') {\n                        fcn.0007c0d0(*(*(arg_8h + 4) + 0xc), *arg_ch);\n                        *arg_ch = 0;\n                        *arg_10h = 0;\n                        if (var_8h == '\\x04') {\n                            *(arg_8h + 0x10) = 1;\n                            *(arg_8h + 0x14) = 0x21590006;\n                        }\n                        else {\n                            *(arg_8h + 0x10) = 1;\n                            *(arg_8h + 0x14) = 0x2159000a;\n                        }\n                        return *(arg_8h + 0x14);\n                    }\n                    *arg_10h = *arg_10h - 0xc;\n                    if (*arg_10h < 1) {\n                        fcn.0007c0d0(*(*(arg_8h + 4) + 0xc), *arg_ch);\n                        *arg_ch = 0;\n                        *arg_10h = 0;\n                    }\n                    else {\n                        *arg_ch = *arg_ch + 0xc;\n                    }\n                    return 0;\n                }\n                var_10h = *(*(arg_8h + 4) + 0xc);\n                fcn.0007c0d0(var_10h, *arg_ch);\n            }\n            if (var_4h == 0x21590003) {\n                var_4h = 0x21590006;\n            }\n            if (var_4h != 0x21590002) {\n                *(arg_8h + 0x10) = 1;\n                *(arg_8h + 0x14) = var_4h;\n            }\n        }\n        else {\n            var_4h = *(arg_8h + 0x14);\n        }\n    }\n    else {\n        var_4h = 0x21590006;\n    }\n    return var_4h;\n}\n",
        "token_count": 884
    },
    "00070bb0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00070bb0(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint *var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_10h = arg_8h;\n    var_ch = 0;\n    if ((*(arg_8h[4] + 0x138) != 0) &&\n       (var_18h = (**(arg_8h[4] + 0x138))(*(arg_8h[4] + 0x20), arg_8h + 5),  var_18h != 0)) {\n        *var_10h = 3;\n        if (*(var_10h[4] + 0x134) != 0) {\n            (**(var_10h[4] + 0x134))(var_10h[5], var_18h, 4);\n        }\n        return 0;\n    }\n    var_10h[3] = 0;\n    do {\n        if (var_10h[3] == 0) {\n            while( true ) {\n                *var_10h = 1;\n                fcn.00035650(var_10h[4] + 0x18);\n                if (*(var_10h[4] + 0x24) != 0) break;\n                var_18h = fcn.0007ba00(*(var_10h[4] + 0x14), var_10h + 3, 0);\n                var_ch = var_10h[4] + 0x18;\n                fcn.000356c0(var_ch);\n                if (var_18h == 0) goto code_r0x00070d10;\n                *var_10h = 3;\n                if ((*(var_10h[4] + 0x24) == 0) && (*(var_10h[4] + 0x134) != 0)) {\n                    (**(var_10h[4] + 0x134))(var_10h[5], var_18h, 0);\n                }\n                if (*(var_10h[4] + 0x24) != 0) goto code_r0x00070d10;\n                var_10h = 0xa;\n                var_14h = 0x70d07;\n                fcn.0005bdd0(10);\n            }\n            var_ch = var_10h[4] + 0x18;\n            fcn.000356c0(var_ch);\ncode_r0x00070d10:\n            if (*(var_10h[4] + 0x24) != 0) {\n                var_10h = NULL;\n                var_14h = 0xc;\n                var_18h = 0x70d2a;\n                fcn.0007b950(0xc, 0);\n                if (*(*(var_10h + 0x10) + 0x13c) == 0) {\n                    return 0;\n                }\n                var_18h = *(var_10h + 0x14);\n                var_1ch = *(*(var_10h + 0x10) + 0x20);\n                var_20h = 0x70ee7;\n                (**(*(var_10h + 0x10) + 0x13c))();\n                return 0;\n            }\n            var_20h = var_10h[4] + 0x130;\n            var_14h = 0x70d40;\n            fcn.00035650(var_20h);\n            *var_10h = 2;\n            var_14h = 0;\n            var_ch = 0;\n            var_4h = -1;\n            for (var_8h = 0; var_8h < 0xb; var_8h = var_8h + 1) {\n                if (*(var_10h[4] + 0x28 + var_8h * 0x18) == 1) {\n                    var_ch = var_ch + 1;\n                }\n                else if ((*(var_10h[4] + 0x28 + var_8h * 0x18) == 0) && (var_14h = var_14h + 1,  var_4h == -1)) {\n                    var_4h = var_8h;\n                }\n            }\n            if ((var_ch == 0) && (var_4h != -1)) {\n                var_14h = 0;\n                var_18h = var_10h[4] + 0x28 + var_4h * 0x18;\n                var_1ch = 0x8506cbb0;\n                var_20h = var_10h[4] + 0x2c + var_4h * 0x18;\n                var_24h = 0x70df8;\n                iVar1 = fcn.0001a700(var_20h, 0x8506cbb0, var_18h);\n                if (iVar1 == 0) {\n                    *(var_10h[4] + 0x28 + var_4h * 0x18) = 1;\n                    var_ch = var_ch + 1;\n                }\n            }\n            var_24h = var_10h[4] + 0x130;\n            fcn.000356c0(var_24h);\n        }\n        if (var_ch == 0) {\n            var_1ch = CONCAT31(var_1ch._1_3_, 5);\n            var_20h = 0x21590007;\n            fcn.0002f610(&fcn.00070bb0::var_24h);\n            fcn.0007be70(var_10h[3], &fcn.00070bb0::var_24h, 0xc, 0);\n            fcn.0007b950(var_10h + 3, 0);\n            if (*(var_10h[4] + 0x134) != 0) {\n                (**(var_10h[4] + 0x134))(var_10h[5], 0x21590007, 3);\n            }\n        }\n        else {\n            var_18h = fcn.00070ef0(var_10h);\n            if (var_18h != 0) {\n                fcn.0007b950(var_10h + 3, 0);\n            }\n        }\n    } while( true );\n}\n",
        "token_count": 1633
    },
    "00070ef0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00070ef0(int32_t arg_8h)\n\n{\n    uint *var_120h;\n    uint var_11ch;\n    int32_t var_118h;\n    uint var_114h;\n    int32_t var_110h;\n    uint32_t var_10ch;\n    uint var_108h;\n    int32_t var_104h;\n    uint var_100h;\n    uint var_fch;\n    uint *var_4ch;\n    int32_t *var_48h;\n    uint var_44h;\n    uint *var_40h;\n    uint var_38h;\n    uint *var_34h;\n    uint *var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_ch = 0;\n    var_38h = 0;\n    var_8h = 0;\n    fcn.0007f916(&var_108h, 0, 0xcc);\n    var_108h = 0x8507c3cc;\n    var_110h = fcn.0007bf30(*(arg_8h + 0xc), &var_120h, &var_10ch, 600000, 0);\n    if (var_110h == 0) {\n        if (var_10ch < 0xc) {\n            var_110h = 0x2159000a;\n            if ((*(*(arg_8h + 0x10) + 0x24) == 0) && (*(*(arg_8h + 0x10) + 0x134) != 0)) {\n                (**(*(arg_8h + 0x10) + 0x134))(*(arg_8h + 0x14), 0x2159000a, 5);\n            }\n        }\n        else {\n            var_11ch = *var_120h;\n            var_118h = var_120h[1];\n            var_114h = var_120h[2];\n            fcn.0002f610(&var_11ch);\n            if ((var_114h == '\\0') || (var_114h == '\\x01')) {\n                var_104h = arg_8h;\n                var_fch = var_11ch;\n                if (var_114h != '\\x01') {\n                    var_100h = 1;\n                }\n                var_40h = var_120h;\n                if (*(*(arg_8h + 0x10) + 0x148) == 0) {\n                    var_110h = fcn.0007c110(*(arg_8h + 0xc), 9, 0, 0, 0);\n                    if (var_110h == 0) {\n                        var_8h = 1;\n                        var_4h = 0;\n                    }\n                    else {\n                        var_4h = var_110h;\n                        if (*(*(arg_8h + 0x10) + 0x14c) == 0) {\n                            var_8h = 0;\n                            var_4h = 0;\n                        }\n                    }\n                }\n                else {\n                    var_8h = 0;\n                    var_4h = 0;\n                }\n                if ((var_4h == 0) &&\n                   (var_4h = (**(*(arg_8h + 0x10) + 0x1c))\n                                       (&var_108h, var_118h, var_120h + 3, var_10ch - 0xc, &var_38h, &var_ch, \n                                        *(*(arg_8h + 0x10) + 0x20)),  var_8h != 0)) {\n                    var_110h = fcn.0007c110(*(arg_8h + 0xc), 10, 0, 0, 0);\n                }\n                do {\n                    var_110h = fcn.0007bf30(*(arg_8h + 0xc), &var_10h, &var_14h, 0, 0);\n                    if (var_110h != 0) break;\n                    fcn.0007c0d0(*(arg_8h + 0xc), var_10h);\n                } while (0 < var_14h);\n                if (var_110h == 0x21590002) {\n                    var_11ch = var_fch;\n                    var_118h = var_4h;\n                    var_114h = 2;\n                    fcn.0002f610(&var_11ch);\n                    var_28h = 0;\n                    var_24h = 0;\n                    var_18h = 0;\n                    var_2ch = 0xc;\n                    var_30h = &var_11ch;\n                    if (var_4ch == NULL) {\n                        var_34h = &var_24h;\n                    }\n                    else {\n                        var_34h = var_4ch;\n                        *var_48h = &var_24h;\n                    }\n                    var_1ch = var_ch;\n                    var_20h = var_38h;\n                    var_110h = fcn.0007c290(*(arg_8h + 0xc), &var_34h, 0);\n                }\n                if (var_110h == 0x21590003) {\n                    var_110h = 0x21590006;\n                }\n                if (var_110h == 0) {\n                    if (*(*(arg_8h + 0x10) + 0x144) != 0) {\n                        (**(*(arg_8h + 0x10) + 0x144))(*(arg_8h + 0x14), var_44h, var_4h, var_38h, var_ch);\n                    }\n                }\n                else {\n                    if ((*(*(arg_8h + 0x10) + 0x24) == 0) && (*(*(arg_8h + 0x10) + 0x134) != 0)) {\n                        (**(*(arg_8h + 0x10) + 0x134))(*(arg_8h + 0x14), var_110h, 2);\n                    }\n                    if (*(*(arg_8h + 0x10) + 0x140) != 0) {\n                        (**(*(arg_8h + 0x10) + 0x140))(*(arg_8h + 0x14), var_44h, var_4h, var_38h, var_ch);\n                    }\n                }\n                fcn.000714b0(&var_108h);\n            }\n            else {\n                var_110h = 0x2159000a;\n                if ((*(*(arg_8h + 0x10) + 0x24) == 0) && (*(*(arg_8h + 0x10) + 0x134) != 0)) {\n                    (**(*(arg_8h + 0x10) + 0x134))(*(arg_8h + 0x14), 0x2159000a, 5);\n                }\n            }\n        }\n        fcn.00036460(var_38h);\n        fcn.00036460(var_44h);\n        if (*(arg_8h + 0xc) != 0) {\n            fcn.0007c0d0(*(arg_8h + 0xc), var_120h);\n        }\n    }\n    else if ((((var_110h != 0x21590003) && (var_110h != 0x21590002)) && (*(*(arg_8h + 0x10) + 0x24) == 0)) &&\n            (*(*(arg_8h + 0x10) + 0x134) != 0)) {\n        (**(*(arg_8h + 0x10) + 0x134))(*(arg_8h + 0x14), var_110h, 1);\n    }\n    return var_110h;\n}\n",
        "token_count": 1862
    },
    "000713b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.000713b0(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(arg_8h + 0xb8) < 10) {\n        iVar2 = fcn.00036330(arg_ch);\n        if (iVar2 == 0) {\n            piVar1 = NULL;\n        }\n        else {\n            piVar1 = arg_8h + 0x18 + *(arg_8h + 0xb8) * 0x10;\n            *(arg_8h + 0xb8) = *(arg_8h + 0xb8) + 1;\n            if (arg_10h == 0) {\n                *piVar1 = *(arg_8h + 0xbc);\n                *(arg_8h + 0xbc) = piVar1;\n                if (*piVar1 == 0) {\n                    *(arg_8h + 0xc0) = piVar1;\n                }\n            }\n            else if (*(arg_8h + 0xc0) == 0) {\n                *(arg_8h + 0xbc) = piVar1;\n                *(arg_8h + 0xc0) = piVar1;\n            }\n            else {\n                **(arg_8h + 0xc0) = piVar1;\n                *(arg_8h + 0xc0) = piVar1;\n            }\n            piVar1[1] = iVar2;\n            piVar1[2] = arg_ch;\n        }\n    }\n    else {\n        piVar1 = NULL;\n    }\n    return piVar1;\n}\n",
        "token_count": 396
    },
    "00071500": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00071500(int32_t arg_8h, uint arg_ch)\n\n{\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(*(*(arg_8h + 4) + 0x10) + 0x24) == 0) {\n        if (*(arg_8h + 8) == 0) {\n            var_14h = 0x21590001;\n        }\n        else if (*(arg_8h + 0x10) == 0) {\n            var_1ch = 0;\n            var_20h = *(arg_8h + 0xc);\n            var_18h = 3;\n            fcn.0002f610(&var_20h);\n            var_4h = 0;\n            var_8h = 0xc;\n            var_ch = &var_20h;\n            var_10h = arg_ch;\n            var_14h = fcn.0007c290(*(*(arg_8h + 4) + 0xc), &var_10h, 0);\n            if (var_14h == 0x21590003) {\n                var_14h = 0x21590006;\n            }\n        }\n        else {\n            var_14h = *(arg_8h + 0x14);\n        }\n    }\n    else {\n        var_14h = 0x21590006;\n    }\n    return var_14h;\n}\n",
        "token_count": 369
    },
    "000717b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.000717b0(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint *var_4h;\n    \n    var_4h = arg_8h;\n    var_ch = fcn.0007ceb0(*arg_8h);\n    while( true ) {\n        do {\n            iVar1 = fcn.0007f77e();\n            var_8h = fcn.0007d060(var_4h[1], var_4h[2], &var_14h, &var_10h, iVar1 % 6000 + 2000, 0);\n            if ((var_8h != 0) && (var_4h[3] != 0)) {\n                var_8h = 0x21590006;\n            }\n        } while (var_8h == 0x21590002);\n        if (var_8h != 0) break;\n        var_8h = (**(var_ch + 0xc))(*var_4h, var_14h, var_10h, 0);\n        fcn.0007d2c0(var_4h[1], var_14h);\n        if (var_8h != 0) {\ncode_r0x00071883:\n            var_4h[3] = 1;\n            return 0;\n        }\n    }\n    if ((var_8h != 0x21590006) && (var_4h[3] == 0)) {\n        fcn.0007d300(var_4h[1], var_4h[2]);\n    }\n    goto code_r0x00071883;\n}\n",
        "token_count": 476
    },
    "000718a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000718a0(uint *arg_8h)\n\n{\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint *var_4h;\n    \n    var_4h = arg_8h;\n    var_ch = fcn.0007ceb0(*arg_8h);\n    while( true ) {\n        do {\n            var_8h = (**(var_ch + 8))(*var_4h, &var_14h, &var_10h, 100, 0);\n            if ((var_8h != 0) && (var_4h[3] != 0)) {\n                var_8h = 0x21590006;\n            }\n        } while (var_8h == 0x21590002);\n        if (var_8h != 0) break;\n        var_8h = fcn.0007d130(var_4h[1], var_4h[2], var_14h, var_10h, 0);\n        (**(var_ch + 4))(*var_4h, var_14h, 0);\n        if (var_8h != 0) {\ncode_r0x0007195c:\n            var_4h[3] = 1;\n            return 0;\n        }\n    }\n    if (var_4h[3] == 0) {\n        fcn.0007d300(var_4h[1], var_4h[2]);\n    }\n    goto code_r0x0007195c;\n}\n",
        "token_count": 358
    },
    "00071970": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00071970(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_16ch;\n    uint var_168h;\n    uint var_164h;\n    uint var_160h;\n    int32_t var_15ch;\n    uint *var_158h;\n    uint var_154h;\n    uint var_150h;\n    uint var_134h;\n    uint var_130h;\n    uint var_8h;\n    \n    fcn.0007f916(&var_150h, 0, 0x150);\n    var_134h = *arg_ch;\n    var_130h = arg_ch[1];\n    var_8h = 1;\n    var_168h = 0;\n    var_164h = 0;\n    var_160h = 0;\n    var_15ch = 0;\n    var_154h = 0;\n    var_158h = &var_150h;\n    var_15ch = fcn.0006fe00(arg_8h, arg_ch[2]);\n    if (var_15ch == 0) {\n        iVar1 = 0x21590003;\n    }\n    else {\n        do {\n            iVar1 = fcn.00070ef0(&var_168h);\n        } while (iVar1 == 0);\n        fcn.0006fe70(arg_8h, arg_ch[2], 1);\n    }\n    return iVar1;\n}\n",
        "token_count": 331
    },
    "00071a50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00071a50(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t arg_8h_00;\n    uint uVar1;\n    int32_t iVar2;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.00036330(0x168);\n    if (arg_8h_00 == 0) {\n        uVar1 = 0x21590004;\n    }\n    else {\n        fcn.0007f916(arg_8h_00, 0, 0x168);\n        *(arg_8h_00 + 4) = 0x8506b130;\n        *(arg_8h_00 + 8) = 0x8506b0c0;\n        *(arg_8h_00 + 0xc) = 0x8506bb00;\n        *(arg_8h_00 + 0x10) = 0x8506bbf0;\n        iVar2 = fcn.0007cb00(arg_8h_00, 0x8507c4e0);\n        if (iVar2 == 0) {\n            fcn.00036460(arg_8h_00);\n            uVar1 = 0x21590004;\n        }\n        else {\n            fcn.000355f0(arg_8h_00 + 0x44);\n            fcn.00037b70(arg_8h_00 + 0x1c);\n            *(arg_8h_00 + 0x15c) = 1;\n            *(arg_8h_00 + 0x160) = *(*(arg_8h + 4) + 0xc);\n            fcn.0007c0d0(*(*(arg_8h + 4) + 0xc), *(arg_8h + 200));\n            *(*(arg_8h + 4) + 0xc) = 0;\n            *(arg_8h + 200) = 0;\n            *arg_ch = 0;\n            arg_ch[1] = 0;\n            *arg_ch = arg_8h_00;\n            uVar1 = 0;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 498
    },
    "00071c70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00071c70(void)\n\n{\n    uint var_ch;\n    uint *var_8h;\n    uint *var_4h;\n    \n    if (*0x8509ec64 != 0) {\n        fcn.00034dc0(0x85092430);\n        fcn.000383c0(0x85092428, &var_ch);\n        fcn.00038370(0x85092428);\n        fcn.00034d90(0x85092430);\n        fcn.00037c10(0x85092434);\n        var_4h = *0x85092444;\n        while (var_4h != NULL) {\n            fcn.0007b950(var_4h + 2, 0);\n            fcn.00035650(var_4h + 3);\n            fcn.000356c0(var_4h + 3);\n            fcn.00035620(var_4h + 3);\n            var_8h = *var_4h;\n            fcn.00036460(var_4h);\n            var_4h = var_8h;\n        }\n        *0x85092444 = NULL;\n        fcn.00037cc0(0x85092434);\n        fcn.00037be0(0x85092434);\n        *0x8509ec64 = 0;\n    }\n    return;\n}\n",
        "token_count": 310
    },
    "00071d50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00071d50(int32_t arg_8h, uint32_t arg_ch, uint *arg_10h, uint *arg_14h, uint32_t *arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *arg_ch_00;\n    uint32_t uVar3;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    char var_dh;\n    int32_t var_ch;\n    uint *var_8h;\n    uint32_t var_4h;\n    \n    var_18h = 0;\ncode_r0x00071d64:\n    do {\n        if (arg_ch <= var_18h) {\n            return 0;\n        }\n        iVar1 = fcn.0007f892(arg_8h + var_18h, 0xd, (arg_ch - var_18h) + -1);\n        if (iVar1 == 0) {\n            return 0;\n        }\n        if (*(iVar1 + 1) != '\\n') {\n            return 0;\n        }\n        var_4h = iVar1 - (arg_8h + var_18h);\n        if (var_4h == 0) {\n            return 0;\n        }\n        var_ch = fcn.0007f892(arg_8h + var_18h, 0x3a, var_4h + -1);\n        if (var_ch == 0) {\n            return 0;\n        }\n        if (*(var_ch + 1) != ' ') {\n            return 0;\n        }\n        var_ch = var_ch + 2;\n        var_4h = iVar1 - var_ch;\n        if (((var_4h < 0x1a) || (iVar2 = fcn.000388c0(var_ch, 0x16, &var_20h),  iVar2 == 0)) || (var_20h != *0x8507c5dc)\n           ) {\n            if (((var_4h < 0xe) || (iVar2 = fcn.00038a20(var_ch),  iVar2 == 0)) || (*0x8507c36c == 0)) {\n                var_18h = (iVar1 - arg_8h) + 2;\n                goto code_r0x00071d64;\n            }\n            var_ch = var_ch + 10;\n            var_4h = var_4h - 10;\n        }\n        else {\n            var_ch = var_ch + 0x16;\n            var_4h = var_4h - 0x16;\n        }\n        arg_ch_00 = fcn.00036360(var_4h);\n        if (arg_ch_00 == NULL) {\n            return 0;\n        }\n        uVar3 = fcn.000353e0(var_ch, arg_ch_00, var_4h);\n        if ((uVar3 != 0xffffffff) && (3 < uVar3)) {\n            *arg_10h = *arg_ch_00;\n            arg_10h[1] = arg_ch_00[1];\n            fcn.00071bb0(arg_10h);\n            var_8h = arg_10h;\n            var_dh = '\\0';\n            for (var_14h = 0; var_14h < 7; var_14h = var_14h + 1) {\n                var_dh = var_dh + *var_8h;\n                var_8h = var_8h + 1;\n            }\n            if (*(arg_10h + 7) == var_dh) {\n                *arg_14h = arg_ch_00;\n                *arg_18h = uVar3;\n                return 1;\n            }\n        }\n        fcn.00036460(arg_ch_00);\n        var_18h = (iVar1 - arg_8h) + 2;\n    } while( true );\n}\n",
        "token_count": 911
    },
    "00071f60": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl\nfcn.00071f60(int32_t *arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h, int32_t arg_18h, uint arg_1ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    uint32_t var_2ch;\n    int32_t var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint *var_1ch;\n    uint *var_18h;\n    uint32_t var_14h;\n    uint8_t var_dh;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint *var_4h;\n    \n    var_24h = 0;\n    var_18h = NULL;\n    if ((arg_10h == 0) && (arg_18h != 0)) {\n        arg_ch = 0;\n    }\n    if ((*(arg_8h + 6) & 1) == 0) {\n        var_ch = *arg_8h;\n    }\n    else {\n        var_28h = fcn.000722e0(&fcn.00071f60::var_ch, arg_14h, *(arg_8h + 6), arg_ch, arg_10h);\n        if (var_28h != 0) goto code_r0x00072295;\n    }\n    fcn.00037c10(0x85092434);\n    var_1ch = NULL;\n    for (var_18h = *0x85092444; (var_18h != NULL && (var_18h[1] != var_ch)); var_18h = *var_18h) {\n        var_1ch = var_18h;\n    }\n    if (var_18h == NULL) {\n        fcn.00037cc0(0x85092434);\n        var_28h = 6;\n    }\n    else if ((*(arg_8h + 6) & 8) == 0) {\n        fcn.00035650(var_18h + 3);\n        fcn.00037cc0(0x85092434);\n        uVar1 = fcn.00026f20();\n        var_18h[6] = uVar1;\n        if ((*(arg_8h + 6) & 2) == 0) {\n            if (arg_ch == 0) {\n                var_28h = fcn.0004efd0(arg_1ch, arg_18h, &fcn.00071f60::var_8h, &fcn.00071f60::arg_10h);\n                if (var_28h != 0) goto code_r0x00072295;\n                arg_ch = var_8h;\n            }\n            else {\n                var_8h = 0;\n            }\n            var_28h = fcn.0007be70(0x72122, arg_ch, arg_10h, 0);\n            fcn.00036460(var_8h);\n            if (var_28h != 0) goto code_r0x00072295;\n        }\n        var_30h = 0;\n        var_2ch = 0;\n        if ((*(arg_8h + 6) & 4) == 0) {\n            var_24h = 0;\n            var_20h = 0;\n            var_2ch._2_2_ = 2;\n        }\n        else {\n            iVar2 = fcn.00026f20();\n            var_28h = fcn.0007bf30(var_18h[2], &fcn.00071f60::var_24h, &fcn.00071f60::var_20h, var_18h[4], 0);\n            iVar3 = fcn.00026f20();\n            if (var_28h == 0x21590002) {\n                var_24h = 0;\n                var_20h = 0;\n                var_2ch._0_3_ = CONCAT12(2, var_2ch);\n                var_2ch = var_2ch & 0xff000000 | var_2ch;\n                uVar4 = fcn.0007f77e();\n                var_18h[4] = uVar4 % var_18h[5] + var_18h[4];\n            }\n            else {\n                if (var_28h != 0) goto code_r0x00072295;\n                var_18h[4] = var_18h[4] + (iVar3 - iVar2) >> 1;\n            }\n            if (*0x8507c2d4 < var_18h[4]) {\n                var_18h[4] = *0x8507c234;\n            }\n        }\n        if ((*(arg_8h + 6) & 1) != 0) {\n            var_2ch._2_2_ = var_2ch._2_1_ | 1;\n        }\n        var_30h = var_ch;\n        var_2ch = CONCAT22(var_2ch._2_2_, *(arg_8h + 1));\n        var_4h = &fcn.00071f60::var_30h;\n        var_dh = 0;\n        for (var_14h = 0; var_14h < 7; var_14h = var_14h + 1) {\n            var_dh = var_dh + *var_4h;\n            var_4h = var_4h + 1;\n        }\n        var_2ch = var_2ch & 0xffffff | var_dh << 0x18;\n        var_28h = fcn.0004f0c0(arg_1ch, &fcn.00071f60::var_30h, var_24h, var_20h);\n        uVar1 = fcn.00026f20();\n        var_18h[6] = uVar1;\n    }\n    else {\n        if (var_1ch == NULL) {\n            *0x85092444 = *var_18h;\n        }\n        else {\n            *var_1ch = *var_18h;\n        }\n        fcn.00037cc0(0x85092434);\n        fcn.00035650(var_18h + 3);\n        fcn.0007b950(var_18h + 2, 0);\n        fcn.000356c0(var_18h + 3);\n        fcn.00035620(var_18h + 3);\n        fcn.00036460(var_18h);\n        var_18h = NULL;\n        var_28h = 0x4ca;\n    }\ncode_r0x00072295:\n    if (var_18h != NULL) {\n        fcn.0007c0d0(var_18h[2], var_24h);\n        fcn.000356c0(var_18h + 3);\n    }\n    if (var_28h != 0) {\n        fcn.0004f300(arg_1ch, var_28h);\n    }\n    return var_28h;\n}\n",
        "token_count": 1663
    },
    "000722e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.000722e0(int32_t *arg_8h, uint arg_ch, uint32_t arg_10h, uint *arg_14h, char *arg_18h)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uchar uVar3;\n    uint32_t uVar4;\n    uint *arg_8h_00;\n    int32_t iVar5;\n    uint uVar6;\n    char *pcVar7;\n    uint var_1f8h;\n    uint var_1f0h;\n    uint *var_1ech;\n    uint var_1e8h;\n    uint var_1e0h;\n    uint *var_1dch;\n    uint var_1d8h;\n    uint var_1d0h;\n    uint *var_1cch;\n    uint var_1c8h;\n    uint var_1c0h;\n    uint *var_1bch;\n    uint var_1b8h;\n    uint var_1b0h;\n    uint *var_1ach;\n    uint *var_1a8h;\n    uint var_1a4h;\n    uint var_1a0h;\n    uint *var_19ch;\n    uint var_198h;\n    uint var_194h;\n    uint var_190h;\n    uint *var_10ch;\n    uint var_108h;\n    uint *var_8h;\n    uint var_4h;\n    \n    uVar4 = (arg_10h & 0x30) >> 4;\n    arg_8h_00 = fcn.00036330(0x1c);\n    if (arg_8h_00 == NULL) {\n        iVar5 = 0x21590004;\n    }\n    else {\n        *arg_8h_00 = 0;\n        arg_8h_00[1] = 0;\n        arg_8h_00[2] = 0;\n        arg_8h_00[3] = 0;\n        arg_8h_00[4] = 0;\n        arg_8h_00[5] = 0;\n        arg_8h_00[6] = 0;\n        fcn.000355f0(arg_8h_00 + 3);\n        arg_8h_00[4] = *0x8507c234;\n        arg_8h_00[5] = *0x8507c31c;\n        do {\n            uVar3 = fcn.0007f77e();\n            *arg_8h = uVar3;\n            uVar3 = fcn.0007f77e();\n            *(arg_8h + 1) = uVar3;\n            uVar3 = fcn.0007f77e();\n            *(arg_8h + 2) = uVar3;\n            uVar3 = fcn.0007f77e();\n            *(arg_8h + 3) = uVar3;\n            fcn.00037c10(0x85092434);\n            for (var_10ch = *0x85092444; (var_10ch != NULL && (var_10ch[1] != *arg_8h)); var_10ch = *var_10ch) {\n            }\n            fcn.00037cc0(0x85092434);\n        } while (var_10ch != NULL);\n        arg_8h_00[1] = *arg_8h;\n        if (arg_18h == NULL) {\n            var_8h = 0x8501148c;\n        }\n        else {\n            var_8h = arg_14h;\n            var_1ach = arg_14h;\n            pcVar7 = arg_14h + 1;\n            do {\n                cVar1 = *var_1ach;\n                var_1ach = var_1ach + 1;\n            } while (cVar1 != '\\0');\n            if (arg_18h < var_1ach + (1 - pcVar7)) {\n                fcn.00036460(arg_8h_00);\n                return 0x21590065;\n            }\n            arg_14h = arg_14h + var_1ach + (1 - pcVar7);\n            arg_18h = arg_18h + -(var_1ach + (1 - pcVar7));\n        }\n        var_4h = 0;\n        if (arg_18h == NULL) {\n            fcn.0002c7e0(&var_190h, 0x80);\n            if (uVar4 != 0) {\n                puVar2 = &var_190h;\n                do {\n                    var_1cch = puVar2;\n                    puVar2 = var_1cch + 1;\n                } while (*var_1cch != '\\0');\n                fcn.0007f7f0(var_1cch, 0x85010668, uVar4);\n            }\n            var_19ch = &var_190h;\n        }\n        else {\n            var_19ch = arg_14h;\n            var_1bch = arg_14h;\n            do {\n                cVar1 = *var_1bch;\n                var_1bch = var_1bch + 1;\n            } while (cVar1 != '\\0');\n            pcVar7 = var_1bch - (arg_14h + 1);\n            if (arg_18h < pcVar7) {\n                fcn.00036460(arg_8h_00);\n                return 0x21590066;\n            }\n            arg_14h = arg_14h + pcVar7 + 1;\n            arg_18h = arg_18h + -(pcVar7 + 1);\n        }\n        var_1dch = var_19ch;\n        do {\n            cVar1 = *var_1dch;\n            var_1dch = var_1dch + 1;\n        } while (cVar1 != '\\0');\n        iVar5 = fcn.0007b640(arg_8h_00 + 2, &var_8h, 0, 0, var_19ch, var_1dch + (1 - (var_19ch + 1)), 2);\n        if (iVar5 == 0) {\n            if (arg_18h == NULL) {\n                iVar5 = fcn.0007f7de(arg_ch, 0x3d);\n                if (iVar5 != 0) {\n                    fcn.0007b950(arg_8h_00 + 2, 0);\n                    fcn.00036460(arg_8h_00);\n                    return 0x21590064;\n                }\n                fcn.0004a010(&var_108h, 0x100, 0x8501198c, arg_ch);\n                var_1a8h = &var_108h;\n            }\n            else {\n                var_1a8h = arg_14h;\n                var_1ech = arg_14h;\n                do {\n                    cVar1 = *var_1ech;\n                    var_1ech = var_1ech + 1;\n                } while (cVar1 != '\\0');\n                if (arg_18h < var_1ech - (arg_14h + 1)) {\n                    fcn.00036460(arg_8h_00);\n                    return 0x21590067;\n                }\n            }\n            iVar5 = fcn.0007bdc0(arg_8h_00[2], var_1a8h, 0);\n            if (iVar5 == 0) {\n                iVar5 = fcn.0007bc60(arg_8h_00[2], 0);\n                if (iVar5 == 0) {\n                    uVar6 = fcn.00026f20();\n                    arg_8h_00[6] = uVar6;\n                    fcn.00037da0(0x85092434);\n                    *arg_8h_00 = *0x85092444;\n                    *0x85092444 = arg_8h_00;\n                    fcn.00037e30(0x85092434);\n                    iVar5 = 0;\n                }\n                else {\n                    fcn.0007b950(arg_8h_00 + 2, 0);\n                    fcn.00036460(arg_8h_00);\n                }\n            }\n            else {\n                fcn.0007b950(arg_8h_00 + 2, 0);\n                fcn.00036460(arg_8h_00);\n            }\n        }\n        else {\n            fcn.00036460(arg_8h_00);\n        }\n    }\n    return iVar5;\n}\n",
        "token_count": 1941
    },
    "000728d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.000728d0(void)\n\n{\n    int32_t iVar1;\n    uint *var_8h;\n    uint *var_4h;\n    \ncode_r0x000728d6:\n    iVar1 = fcn.00034df0(0x85092430, 60000);\n    if (iVar1 != 0) {\n        return 0;\n    }\n    do {\n        fcn.00037da0(0x85092434);\n        var_8h = NULL;\n        for (var_4h = *0x85092444; var_4h != NULL; var_4h = *var_4h) {\n            iVar1 = fcn.00026f20();\n            if (900000 < iVar1 - var_4h[6]) {\n                if (var_8h == NULL) {\n                    *0x85092444 = *var_4h;\n                }\n                else {\n                    *var_8h = *var_4h;\n                }\n                break;\n            }\n            var_8h = var_4h;\n        }\n        fcn.00037e30(0x85092434);\n        if (var_4h == NULL) goto code_r0x000728d6;\n        fcn.00035650(var_4h + 3);\n        fcn.0007b950(var_4h + 2, 0);\n        fcn.000356c0(var_4h + 3);\n        fcn.00035620(var_4h + 3);\n        fcn.00036460(var_4h);\n    } while( true );\n}\n",
        "token_count": 355
    },
    "000729d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.000729d0(void)\n\n{\n    uint *puVar1;\n    uint *var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    fcn.00035650(0x85092548);\n    for (var_8h = 0; var_8h < 0x40; var_8h = var_8h + 1) {\n        var_ch = *(var_8h * 4 + -0x7af6dbb8);\n        while (var_ch != NULL) {\n            puVar1 = *var_ch;\n            fcn.00036460(var_ch);\n            var_ch = puVar1;\n        }\n        *(var_8h * 4 + -0x7af6dbb8) = 0;\n    }\n    fcn.000356c0(0x85092548);\n    fcn.00035620(0x85092548);\n    return;\n}\n",
        "token_count": 211
    },
    "00072a50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00072a50(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar2 = ((arg_8h >> 5) + arg_ch) % 0x40;\n    puVar1 = fcn.00036330(0xc);\n    if (puVar1 != NULL) {\n        *puVar1 = 0;\n        puVar1[1] = 0;\n        puVar1[2] = 0;\n        puVar1[1] = arg_8h;\n        puVar1[2] = arg_ch;\n        fcn.00035650(0x85092548);\n        *puVar1 = *(uVar2 * 4 + -0x7af6dbb8);\n        *(uVar2 * 4 + -0x7af6dbb8) = puVar1;\n        fcn.000356c0(0x85092548);\n    }\n    return puVar1 != NULL;\n}\n",
        "token_count": 248
    },
    "00072ae0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00072ae0(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    var_ch = 0;\n    uVar1 = ((arg_8h >> 5) + arg_ch) % 0x40;\n    fcn.00035650(0x85092548);\n    var_4h = NULL;\n    var_10h = *(uVar1 * 4 + -0x7af6dbb8);\n    do {\n        if (var_10h == NULL) {\ncode_r0x00072b84:\n            fcn.000356c0(0x85092548);\n            return var_ch;\n        }\n        if ((var_10h[1] == arg_8h) && (var_10h[2] == arg_ch)) {\n            if (var_4h == NULL) {\n                *(uVar1 * 4 + -0x7af6dbb8) = *var_10h;\n            }\n            else {\n                *var_4h = *var_10h;\n            }\n            fcn.00036460(var_10h);\n            var_ch = 1;\n            goto code_r0x00072b84;\n        }\n        var_4h = var_10h;\n        var_10h = *var_10h;\n    } while( true );\n}\n",
        "token_count": 334
    },
    "00072ba0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00072ba0(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    uint *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    fcn.00035650(0x85092548);\n    var_ch = *((((arg_8h >> 5) + arg_ch) % 0x40) * 4 + -0x7af6dbb8);\n    do {\n        if (var_ch == NULL) {\ncode_r0x00072c0a:\n            fcn.000356c0(0x85092548);\n            return var_8h;\n        }\n        if ((var_ch[1] == arg_8h) && (var_ch[2] == arg_ch)) {\n            var_8h = 1;\n            goto code_r0x00072c0a;\n        }\n        var_ch = *var_ch;\n    } while( true );\n}\n",
        "token_count": 218
    },
    "00072c20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.00072c20(uint *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint32_t arg_20h)\n\n{\n    int32_t iVar1;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    var_4h = fcn.00036330(0x14);\n    if (var_4h == NULL) {\n        iVar1 = 0x21590004;\n    }\n    else {\n        *var_4h = 0;\n        var_4h[1] = 0;\n        var_4h[2] = 0;\n        var_4h[3] = 0;\n        var_4h[4] = 0;\n        var_ch = arg_ch;\n        var_8h = 0;\n        iVar1 = fcn.000795e0(var_4h + 1, &var_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h & 3 | 0x10000);\n        if (iVar1 == 0) {\n            fcn.000355f0(var_4h + 2);\n            *arg_8h = var_4h;\n        }\n        else {\n            fcn.00036460(var_4h);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 332
    },
    "00072d20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00072d20(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint var_ch;\n    int32_t var_8h;\n    uint *var_4h;\n    \n    var_8h = fcn.00079950(*(arg_8h + 4), &var_ch, 0);\n    if (var_8h == 0) {\n        var_4h = fcn.00036330(0x14);\n        if (var_4h == NULL) {\n            fcn.000798a0(&var_ch, 0);\n            var_8h = 0x21590004;\n        }\n        else {\n            *var_4h = 0;\n            var_4h[1] = 0;\n            var_4h[2] = 0;\n            var_4h[3] = 0;\n            var_4h[4] = 0;\n            var_4h[1] = var_ch;\n            var_4h[4] = *(arg_8h + 0x10);\n            fcn.000355f0(var_4h + 2);\n            *arg_ch = var_4h;\n            var_8h = 0;\n        }\n    }\n    return var_8h;\n}\n",
        "token_count": 288
    },
    "00072ea0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00072ea0(int32_t arg_8h, int32_t *arg_ch, int32_t *arg_10h, uint arg_14h, uint32_t arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t var_8h;\n    uint var_4h;\n    \n    if (*(arg_8h + 0xc) == 0) {\n        if (*(arg_8h + 0x10) == 0) {\n            *arg_10h = 0;\n            var_4h = 4;\n            var_8h = fcn.00079e80(*(arg_8h + 4), arg_10h, &var_4h, arg_14h, 1);\n            if (var_8h == 0) {\n                iVar1 = fcn.000365c0(*arg_10h);\n                *arg_10h = iVar1;\n                if (*arg_10h < 0) {\n                    fcn.000798a0(arg_8h + 4, 0);\n                    *(arg_8h + 0xc) = 1;\n                    var_8h = 0x2159000a;\n                }\n                else {\n                    iVar1 = fcn.00036330(*arg_10h);\n                    *arg_ch = iVar1;\n                    if (*arg_ch == 0) {\n                        fcn.000798a0(arg_8h + 4, 0);\n                        *(arg_8h + 0xc) = 1;\n                        var_8h = 0x21590004;\n                    }\n                    else if (*arg_10h != 0) {\n                        if ((arg_18h & 1) == 0) {\n                            var_8h = fcn.00079e80(*(arg_8h + 4), *arg_ch, arg_10h, 60000, 1);\n                        }\n                        else {\n                            var_8h = fcn.00079e80(*(arg_8h + 4), *arg_ch, arg_10h, arg_14h, 1);\n                        }\n                        if (var_8h != 0) {\n                            fcn.00036460(*arg_ch);\n                            *arg_ch = 0;\n                            *(arg_8h + 0xc) = 1;\n                            fcn.000798a0(arg_8h + 4, 0);\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            *arg_10h = 0x800;\n            iVar1 = fcn.00036330(*arg_10h);\n            *arg_ch = iVar1;\n            if (*arg_ch == 0) {\n                *arg_10h = 0;\n                var_8h = 0x21590004;\n            }\n            else {\n                var_8h = fcn.00079e80(*(arg_8h + 4), *arg_ch, arg_10h, arg_14h, 0);\n                if (var_8h != 0) {\n                    fcn.00036460(*arg_ch);\n                    *arg_ch = 0;\n                    *arg_10h = 0;\n                }\n            }\n        }\n    }\n    else {\n        var_8h = 0x21590065;\n    }\n    return var_8h;\n}\n",
        "token_count": 737
    },
    "00073170": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00073170(int32_t arg_8h, uint *arg_ch, uint arg_10h)\n\n{\n    uint var_1ch;\n    uint *var_18h;\n    int32_t var_14h;\n    uint *var_10h;\n    uint *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(arg_8h + 0x10) == 0) {\n        var_14h = 0;\n        for (var_18h = arg_ch; var_18h != NULL; var_18h = *var_18h) {\n            var_14h = var_14h + var_18h[2];\n        }\n        var_14h = fcn.000365c0(var_14h);\n        var_4h = 0;\n        var_ch = &var_14h;\n        var_8h = 4;\n        var_10h = arg_ch;\n        var_1ch = fcn.0007a0c0(*(arg_8h + 4), &var_10h, arg_10h);\n    }\n    else {\n        var_1ch = fcn.0007a0c0(*(arg_8h + 4), arg_ch, arg_10h);\n    }\n    return var_1ch;\n}\n",
        "token_count": 297
    },
    "00073210": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00073210(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.00073170(arg_8h, arg_ch, 0);\n    if (iVar1 == 0) {\n        iVar1 = fcn.00072ea0(arg_8h, arg_10h, arg_14h, arg_18h, 0);\n    }\n    return iVar1;\n}\n",
        "token_count": 129
    },
    "00073250": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.00073250(int32_t *arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h, int32_t arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    int32_t var_54h;\n    uint var_50h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_10h = fcn.00036330(0xf8);\n    if (var_10h == 0) {\n        var_54h = 0x21590004;\n        goto code_r0x000733df;\n    }\n    fcn.0007f916(var_10h, 0, 0xf8);\n    fcn.000355f0(var_10h + 0xd0);\n    fcn.000355f0(var_10h + 0xd8);\n    fcn.00034d00(var_10h + 0xd4);\n    var_8h = arg_ch;\n    var_4h = 0;\n    if (arg_18h == 0) {\n        if (arg_10h == 0) {\n            var_54h = 0x21590064;\n            goto code_r0x000733df;\n        }\n        var_54h = fcn.0007a300(var_10h + 8, &var_8h, arg_10h, arg_14h, arg_20h);\n        if (var_54h != 0) goto code_r0x000733df;\n        *(var_10h + 0xc) = *(var_10h + 8);\n    }\n    else {\n        var_54h = fcn.0007a330(var_10h + 4, &var_8h, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n        if (var_54h != 0) goto code_r0x000733df;\n        *(var_10h + 0xc) = *(var_10h + 4);\n    }\n    if ((arg_10h != 0) && (arg_18h == 0)) {\n        fcn.0007f7f0(&var_50h, 0x850119bc, 0x9fff6, 0);\n        fcn.0007a710(*(var_10h + 0xc), &var_50h, 0);\n        for (var_ch = 0; var_ch < 10; var_ch = var_ch + 1) {\n            fcn.00073960(var_10h);\n        }\n        fcn.0001a700(var_10h + 0x10, 0x8506fd20, var_10h);\n    }\n    *(var_10h + 0xe8) = 1;\n    *arg_8h = var_10h;\ncode_r0x000733df:\n    if ((var_54h != 0) && (var_10h != 0)) {\n        if (*(var_10h + 0xc) != 0) {\n            fcn.0007a660(var_10h + 0xc, 0);\n        }\n        fcn.00034d90(var_10h + 0xd4);\n        fcn.00035620(var_10h + 0xd0);\n        fcn.00035620(var_10h + 0xd8);\n        fcn.00036460(var_10h);\n    }\n    return var_54h;\n}\n",
        "token_count": 811
    },
    "00073450": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00073450(int32_t arg_8h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint *var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    fcn.00035650(arg_8h + 0xd0);\n    for (var_4h = *(arg_8h + 0xc4); var_4h != 0; var_4h = *(var_4h + 0xb8)) {\n        fcn.00035650(var_4h + 0xd0);\n        *(var_4h + 0xb4) = 0x21590006;\n        fcn.000356c0(var_4h + 0xd0);\n    }\n    fcn.000356c0(arg_8h + 0xd0);\n    *(arg_8h + 0xb4) = 0x21590006;\n    fcn.00034dc0(arg_8h + 0xd4);\n    if (*(arg_8h + 0xa8) != 0) {\n        fcn.00035650(arg_8h + 0xd0);\n        var_ch = *(arg_8h + 0xa8);\n        while (var_ch != NULL) {\n            puVar1 = *var_ch;\n            fcn.0007aab0(*(arg_8h + 0xc), var_ch[1]);\n            fcn.00036460(var_ch);\n            var_ch = puVar1;\n        }\n        *(arg_8h + 0xa8) = 0;\n        *(arg_8h + 0xac) = 0;\n        fcn.000356c0(arg_8h + 0xd0);\n    }\n    if (*(arg_8h + 0xe8) != 0) {\n        fcn.0007a660(arg_8h + 0xc, 0);\n    }\n    iVar2 = fcn.00038390(arg_8h + 0x10);\n    if (iVar2 != 0) {\n        fcn.000383c0(arg_8h + 0x10, 0);\n    }\n    return;\n}\n",
        "token_count": 489
    },
    "000735a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000735a0(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    int32_t var_4h;\n    \n    while( true ) {\n        while (iVar1 = fcn.00035670(arg_8h + 0xd0),  iVar1 == 0) {\n            fcn.0005bdd0(1);\n        }\n        if (*(arg_8h + 0xc0) == 0) break;\n        iVar1 = fcn.00035670(*(arg_8h + 0xc0) + 0xd0);\n        if (iVar1 != 0) goto code_r0x00073613;\n        fcn.000356c0(arg_8h + 0xd0);\n        fcn.0005bdd0(1);\n    }\n    fcn.000356c0(arg_8h + 0xd0);\ncode_r0x00073613:\n    if (*(arg_8h + 0xc0) != 0) {\n        if (*(arg_8h + 0xb8) == 0) {\n            *(*(arg_8h + 0xc0) + 200) = *(arg_8h + 0xbc);\n        }\n        else {\n            *(*(arg_8h + 0xb8) + 0xbc) = *(arg_8h + 0xbc);\n        }\n        if (*(arg_8h + 0xbc) == 0) {\n            *(*(arg_8h + 0xc0) + 0xc4) = *(arg_8h + 0xb8);\n        }\n        else {\n            *(*(arg_8h + 0xbc) + 0xb8) = *(arg_8h + 0xb8);\n        }\n        fcn.000356c0(*(arg_8h + 0xc0) + 0xd0);\n        fcn.000356c0(arg_8h + 0xd0);\n    }\n    if (*(arg_8h + 0xc4) != 0) {\n        fcn.00035650(arg_8h + 0xd0);\n        iVar1 = *(arg_8h + 0xc4);\n        while (var_4h = iVar1,  var_4h != 0) {\n            iVar1 = *(var_4h + 0xb8);\n            if ((*(var_4h + 0xe4) != 0) || (*(var_4h + 0xe0) != 0)) {\n                fcn.000735a0(var_4h);\n            }\n        }\n        *(arg_8h + 0xcc) = 0;\n        for (var_4h = *(arg_8h + 0xc4); var_4h != 0; var_4h = *(var_4h + 0xb8)) {\n            fcn.00035650(var_4h + 0xd0);\n            *(var_4h + 0xc0) = 0;\n            *(var_4h + 0xbc) = 0;\n            *(var_4h + 0xb8) = 0;\n            fcn.000356c0(var_4h + 0xd0);\n        }\n        *(arg_8h + 200) = 0;\n        *(arg_8h + 0xc4) = 0;\n        fcn.000356c0(arg_8h + 0xd0);\n    }\n    fcn.00034d90(arg_8h + 0xd4);\n    fcn.00035620(arg_8h + 0xd0);\n    fcn.00035620(arg_8h + 0xd8);\n    iVar1 = fcn.00038390(arg_8h + 0x10);\n    if (iVar1 != 0) {\n        fcn.00038370(arg_8h + 0x10);\n    }\n    fcn.00036460(arg_8h);\n    return;\n}\n",
        "token_count": 892
    },
    "00073830": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00073830(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    uint uVar1;\n    int32_t var_4h;\n    \n    if (*(arg_8h + 0xb4) == 0) {\n        fcn.00035650(arg_8h + 0xd0);\n        if ((*(arg_8h + 0xcc) == 0) && (fcn.00073960(arg_8h),  *(arg_8h + 0xcc) == 0)) {\n            uVar1 = 0x21590004;\n        }\n        else {\n            while( true ) {\n                for (var_4h = *(arg_8h + 0xc4); (var_4h != 0 && (*(var_4h + 0xe0) == 0)); var_4h = *(var_4h + 0xb8)) {\n                }\n                if (var_4h != 0) {\n                    *(var_4h + 0xe0) = 0;\n                    *arg_ch = var_4h;\n                    fcn.00073960(arg_8h);\n                    if (*(arg_8h + 0xcc) < 10) {\n                        fcn.00073960(arg_8h);\n                    }\n                    fcn.000356c0(arg_8h + 0xd0);\n                    return 0;\n                }\n                fcn.000356c0(arg_8h + 0xd0);\n                fcn.00034df0(arg_8h + 0xd4, 0xffffffff);\n                if (*(arg_8h + 0xb4) != 0) break;\n                fcn.00035650(arg_8h + 0xd0);\n            }\n            uVar1 = *(arg_8h + 0xb4);\n        }\n    }\n    else {\n        uVar1 = *(arg_8h + 0xb4);\n    }\n    return uVar1;\n}\n",
        "token_count": 439
    },
    "00073960": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00073960(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_4h;\n    \n    iVar1 = fcn.00036330(0xf8);\n    if (iVar1 == 0) {\n        uVar2 = 0x21590004;\n    }\n    else {\n        fcn.0007f916(iVar1, 0, 0xf8);\n        fcn.000355f0(iVar1 + 0xd0);\n        fcn.000355f0(iVar1 + 0xd8);\n        fcn.00034d00(iVar1 + 0xd4);\n        *(iVar1 + 8) = *(arg_8h + 8);\n        *(iVar1 + 0xc) = *(arg_8h + 0xc);\n        *(iVar1 + 0xe4) = 1;\n        fcn.00035650(arg_8h + 0xd0);\n        *(iVar1 + 0xbc) = *(arg_8h + 200);\n        if (*(arg_8h + 200) != 0) {\n            *(*(arg_8h + 200) + 0xb8) = iVar1;\n        }\n        *(arg_8h + 200) = iVar1;\n        if (*(arg_8h + 0xc4) == 0) {\n            *(arg_8h + 0xc4) = *(arg_8h + 200);\n        }\n        *(arg_8h + 0xcc) = *(arg_8h + 0xcc) + 1;\n        *(iVar1 + 0xc0) = arg_8h;\n        fcn.000356c0(arg_8h + 0xd0);\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 413
    },
    "00073ad0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00073ad0(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_4h;\n    \n    if (*(arg_8h + 4) == 0) {\n        var_4h = fcn.0007ada0(*(arg_8h + 8), arg_ch, arg_10h, arg_8h + 0x18, 0);\n    }\n    else {\n        var_4h = fcn.0007aaf0(*(arg_8h + 4), arg_ch, arg_10h, 0);\n    }\n    return var_4h;\n}\n",
        "token_count": 146
    },
    "00073b30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00073b30(int32_t arg_8h, uint *arg_ch, uint *arg_10h, int32_t arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if (*(arg_8h + 0xb4) == 0) {\n        if (*(arg_8h + 4) == 0) {\n            fcn.00035650(arg_8h + 0xd8);\n            if (*(arg_8h + 0xb4) == 0) {\n                var_ch = 0x21590002;\n                for (var_4h = 0; var_4h < 2; var_4h = var_4h + 1) {\n                    fcn.00035650(arg_8h + 0xd0);\n                    if (*(arg_8h + 0xa8) != 0) {\n                        *arg_ch = *(*(arg_8h + 0xa8) + 4);\n                        *arg_10h = *(*(arg_8h + 0xa8) + 8);\n                        *(arg_8h + 0xb0) = *(arg_8h + 0xb0) - *(*(arg_8h + 0xa8) + 8);\n                        iVar1 = **(arg_8h + 0xa8);\n                        fcn.00036460(*(arg_8h + 0xa8));\n                        *(arg_8h + 0xa8) = iVar1;\n                        if (iVar1 == 0) {\n                            *(arg_8h + 0xac) = 0;\n                        }\n                        fcn.000356c0(arg_8h + 0xd0);\n                        var_ch = 0;\n                        break;\n                    }\n                    if (*(arg_8h + 0xb4) != 0) {\n                        var_ch = *(arg_8h + 0xb4);\n                        fcn.000356c0(arg_8h + 0xd0);\n                        break;\n                    }\n                    fcn.000356c0(arg_8h + 0xd0);\n                    if (arg_14h == 0) break;\n                    iVar1 = fcn.00034df0(arg_8h + 0xd4, 0);\n                    if (iVar1 == 0) {\n                        fcn.00034df0(arg_8h + 0xd4, arg_14h);\n                    }\n                    else {\n                        var_4h = var_4h + -1;\n                    }\n                }\n                fcn.000356c0(arg_8h + 0xd8);\n            }\n            else {\n                fcn.000356c0(arg_8h + 0xd8);\n                var_ch = *(arg_8h + 0xb4);\n            }\n        }\n        else {\n            var_ch = fcn.0007abb0(*(arg_8h + 4), arg_ch, arg_10h, arg_14h, arg_18h);\n        }\n    }\n    else {\n        var_ch = *(arg_8h + 0xb4);\n    }\n    return var_ch;\n}\n",
        "token_count": 713
    },
    "00073d20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00073d20(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint *puVar3;\n    uint var_d0h;\n    int32_t var_cch;\n    int32_t var_c8h;\n    int32_t *var_c4h;\n    int32_t *var_c0h;\n    uint32_t var_bch;\n    uint var_b8h;\n    uint *var_b4h;\n    uint var_b0h;\n    uint *var_ach;\n    int32_t var_a8h;\n    uint *var_a4h;\n    uint var_a0h;\n    int32_t var_9ch;\n    uint var_98h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = arg_8h;\ncode_r0x00073d31:\n    do {\n        var_a8h = fcn.0007afa0(*(var_4h + 8), &var_a0h, &var_9ch, &var_98h, 0xffffffff, 0);\n        if (var_a8h != 0) {\n            *(var_4h + 0xb4) = var_a8h;\n            fcn.00035650(var_4h + 0xd0);\n            for (var_8h = *(var_4h + 0xc4); var_8h != 0; var_8h = *(var_8h + 0xb8)) {\n                fcn.00035650(var_8h + 0xd0);\n                *(var_8h + 0xb4) = var_a8h;\n                fcn.00034dc0(var_8h + 0xd4);\n                fcn.000356c0(var_8h + 0xd0);\n            }\n            fcn.000356c0(var_4h + 0xd0);\n            return 0;\n        }\n        fcn.00035650(var_4h + 0xd0);\n        for (var_8h = *(var_4h + 0xc4); var_8h != 0; var_8h = *(var_8h + 0xb8)) {\n            if (*(var_8h + 0xe4) == 0) {\n                var_c0h = var_8h + 0x18;\n                var_c4h = &var_98h;\n                for (var_bch = 0x90; 3 < var_bch; var_bch = var_bch - 4) {\n                    if (*var_c4h != *var_c0h) goto code_r0x00073e0d;\n                    var_c0h = var_c0h + 1;\n                    var_c4h = var_c4h + 1;\n                }\n                if (var_bch == 0) {\ncode_r0x00073ee3:\n                    var_cch = 0;\n                }\n                else {\ncode_r0x00073e0d:\n                    var_c8h = *var_c4h - *var_c0h;\n                    if (var_c8h == 0) {\n                        if (var_bch == 1) goto code_r0x00073ee3;\n                        var_c8h = *(var_c4h + 1) - *(var_c0h + 1);\n                        if (var_c8h == 0) {\n                            if (var_bch == 2) goto code_r0x00073ee3;\n                            var_c8h = *(var_c4h + 2) - *(var_c0h + 2);\n                            if (var_c8h == 0) {\n                                if ((var_bch == 3) || (var_c8h = *(var_c4h + 3) - *(var_c0h + 3),  var_c8h == 0))\n                                goto code_r0x00073ee3;\n                            }\n                        }\n                    }\n                    var_cch = 1;\n                    if (var_c8h < 1) {\n                        var_cch = -1;\n                    }\n                }\n                if (var_cch == 0) break;\n            }\n        }\n        if (var_8h != 0) {\ncode_r0x00074063:\n            if (var_8h == 0) {\n                fcn.0007aab0(*(var_4h + 0xc), var_a0h);\n                if (*(var_4h + 0xf4) != 0) {\n                    var_b8h = *(var_4h + 8);\n                    var_b4h = &var_98h;\n                    (**(var_4h + 0xf4))(*(var_4h + 0xec), var_a0h, var_9ch, 0x85070490, &var_b8h);\n                }\n            }\n            else {\n                fcn.00035650(var_8h + 0xd0);\n                if (*(var_8h + 0xb4) != 0) {\n                    fcn.000356c0(var_8h + 0xd0);\n                    fcn.000356c0(var_4h + 0xd0);\n                    fcn.0007aab0(*(var_4h + 0xc), var_a0h);\n                    goto code_r0x00073d31;\n                }\n                if (*(var_8h + 0xb0) + var_9ch < 0x100000) {\n                    var_a4h = fcn.00036330(0x10);\n                    if (var_a4h == NULL) {\n                        fcn.0007aab0(*(var_4h + 0xc), var_a0h);\n                    }\n                    else {\n                        *var_a4h = 0;\n                        var_a4h[1] = 0;\n                        var_a4h[2] = 0;\n                        var_a4h[3] = 0;\n                        var_a4h[1] = var_a0h;\n                        var_a4h[2] = var_9ch;\n                        if (*(var_8h + 0xac) == 0) {\n                            *(var_8h + 0xa8) = var_a4h;\n                        }\n                        else {\n                            **(var_8h + 0xac) = var_a4h;\n                        }\n                        *(var_8h + 0xac) = var_a4h;\n                        *(var_8h + 0xb0) = *(var_8h + 0xb0) + var_9ch;\n                        fcn.00034dc0(var_8h + 0xd4);\n                    }\n                }\n                else {\n                    fcn.0007aab0(*(var_4h + 0xc), var_a0h);\n                }\n                fcn.000356c0(var_8h + 0xd0);\n            }\n            fcn.000356c0(var_4h + 0xd0);\n            goto code_r0x00073d31;\n        }\n        if ((*(var_4h + 0xf0) == 0) || (iVar1 = (**(var_4h + 0xf0))(*(var_4h + 0xec), var_a0h, var_9ch),  iVar1 != 0)) {\n            var_8h = *(var_4h + 0xc4);\ncode_r0x00073ffd:\n            if (var_8h != 0) {\n                if (*(var_8h + 0xe4) == 0) break;\n                puVar2 = &var_98h;\n                puVar3 = var_8h + 0x18;\n                for (iVar1 = 0x24; iVar1 != 0; iVar1 = iVar1 + -1) {\n                    *puVar3 = *puVar2;\n                    puVar2 = puVar2 + 1;\n                    puVar3 = puVar3 + 1;\n                }\n                *(var_8h + 0xe4) = 0;\n                *(var_8h + 0xe0) = 1;\n                *(var_4h + 0xcc) = *(var_4h + 0xcc) + -1;\n                fcn.00034dc0(var_4h + 0xd4);\n            }\n            goto code_r0x00074063;\n        }\n        fcn.000356c0(var_4h + 0xd0);\n        if (*(var_4h + 0xf4) != 0) {\n            var_b0h = *(var_4h + 8);\n            var_ach = &var_98h;\n            (**(var_4h + 0xf4))(*(var_4h + 0xec), var_a0h, var_9ch, 0x85070490, &var_b0h);\n        }\n        fcn.0007aab0(*(var_4h + 0xc), var_a0h);\n    } while( true );\n    var_8h = *(var_8h + 0xb8);\n    goto code_r0x00073ffd;\n}\n",
        "token_count": 2020
    },
    "000742d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.000742d0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.00073ad0(arg_8h, arg_ch, arg_10h);\n    if (iVar1 == 0) {\n        iVar1 = fcn.00073b30(arg_8h, arg_14h, arg_18h, arg_1ch, arg_20h);\n    }\n    return iVar1;\n}\n",
        "token_count": 147
    },
    "00074400": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00074400(int32_t arg_8h, uint arg_ch)\n\n{\n    uint var_4h;\n    \n    if (*(arg_8h + 4) == 0) {\n        var_4h = fcn.0007ae60(*(arg_8h + 8), arg_ch, arg_8h + 0x18, 0);\n    }\n    else {\n        var_4h = fcn.0007ac80(*(arg_8h + 4), arg_ch, 0);\n    }\n    return var_4h;\n}\n",
        "token_count": 128
    },
    "00074450": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00074450(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.00074400(arg_8h, arg_ch);\n    if (iVar1 == 0) {\n        iVar1 = fcn.00073b30(arg_8h, arg_10h, arg_14h, arg_18h, arg_1ch);\n    }\n    return iVar1;\n}\n",
        "token_count": 134
    },
    "000744d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.000744d0(int32_t *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    int32_t iVar1;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00036330(0x40);\n    if (var_4h == 0) {\n        iVar1 = 0x21590004;\n    }\n    else {\n        fcn.0007f916(var_4h, 0, 0x40);\n        *(var_4h + 0xc) = *0x8507c3bc;\n        *(var_4h + 0x10) = *0x8507c3c0;\n        *(var_4h + 0x14) = *0x8507c3c4;\n        *(var_4h + 0x18) = *0x8507c3c8;\n        fcn.000355f0(var_4h + 0x28);\n        var_ch = arg_ch;\n        var_8h = 0;\n        iVar1 = fcn.0007b640(var_4h + 4, &var_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n        if (iVar1 == 0) {\n            *arg_8h = var_4h;\n        }\n        else {\n            fcn.00036460(var_4h);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 380
    },
    "00074600": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00074600(int32_t arg_8h, int32_t *arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    var_8h = fcn.0007ba00(*(arg_8h + 4), &var_4h, arg_10h);\n    if (var_8h == 0) {\n        iVar1 = fcn.00036330(0x40);\n        *arg_ch = iVar1;\n        if (*arg_ch == 0) {\n            var_8h = 0x21590004;\n        }\n        else {\n            fcn.0007f916(*arg_ch, 0, 0x40);\n            *(*arg_ch + 4) = var_4h;\n            *(*arg_ch + 8) = 2;\n            iVar1 = *arg_ch;\n            *(iVar1 + 0xc) = *(arg_8h + 0xc);\n            *(iVar1 + 0x10) = *(arg_8h + 0x10);\n            *(iVar1 + 0x14) = *(arg_8h + 0x14);\n            *(iVar1 + 0x18) = *(arg_8h + 0x18);\n            *(*arg_ch + 0x2c) = *(arg_8h + 0x2c);\n            fcn.000355f0(*arg_ch + 0x28);\n        }\n        if (var_8h != 0) {\n            fcn.0007b950(arg_ch, 0);\n            *arg_ch = 0;\n        }\n    }\n    return var_8h;\n}\n",
        "token_count": 392
    },
    "000747c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.000747c0(int32_t arg_8h, uint arg_ch, uint32_t arg_10h, uint arg_14h)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    int32_t var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    char *var_8h;\n    int32_t var_4h;\n    \n    var_ach = fcn.00074d60(arg_8h);\n    if (var_ach == 0) {\n        if (arg_10h < 1) {\n            if (arg_10h == 0) {\n                var_ach = fcn.0007be70(*(arg_8h + 4), arg_ch, 0, arg_14h);\n            }\n            else {\n                var_ach = 0x21590068;\n            }\n        }\n        else {\n            puVar1 = *(arg_8h + 0x1c);\n            var_a8h = *puVar1;\n            var_a4h = puVar1[1];\n            var_98h = puVar1[2];\n            var_94h = puVar1[3];\n            var_a0h = var_a8h;\n            var_9ch = var_a4h;\n            fcn.00031e80(&var_90h, 0x10, &var_a0h);\n            var_8h = fcn.00036330(arg_10h + 9);\n            if (var_8h == NULL) {\n                var_ach = 0x21590004;\n            }\n            else {\n                fcn.00031360(arg_ch, var_8h + 1, arg_10h, &var_90h, &var_a8h, 1);\n                uVar2 = arg_10h & 0x80000007;\n                if (uVar2 < 0) {\n                    uVar2 = (uVar2 - 1 | 0xfffffff8) + 1;\n                }\n                var_4h = (-(uVar2 != 0) & 8) + (arg_10h + (arg_10h >> 0x1f & 7U) >> 3) * 8;\n                *var_8h = var_4h - arg_10h;\n                var_ach = fcn.0007be70(*(arg_8h + 4), var_8h, var_4h + 1, arg_14h);\n                fcn.00036460(var_8h);\n            }\n        }\n    }\n    return var_ach;\n}\n",
        "token_count": 619
    },
    "00074d60": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00074d60(int32_t arg_8h)\n\n{\n    uint var_4h;\n    \n    if (*(arg_8h + 0x24) == 1) {\n        var_4h = 0;\n    }\n    else {\n        fcn.00035650(arg_8h + 0x28);\n        if (*(arg_8h + 0x24) == 0) {\n            *(arg_8h + 0x1c) = arg_8h + 0xc;\n            *(arg_8h + 0x20) = 0x10;\n            *(arg_8h + 0x24) = 1;\n            var_4h = 0;\n        }\n        else if (*(arg_8h + 0x24) == 1) {\n            var_4h = 0;\n        }\n        else {\n            var_4h = 0x2159012d;\n        }\n        fcn.000356c0(arg_8h + 0x28);\n    }\n    return var_4h;\n}\n",
        "token_count": 240
    },
    "00074de0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00074de0(int32_t arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t var_8h;\n    uint var_4h;\n    \n    if (arg_ch == 1) {\n        if (arg_14h == 0x10) {\n            fcn.0007f904(arg_8h + 0x30, arg_10h, 0x10);\n            var_8h = 0;\n        }\n        else {\n            var_8h = 0x21590064;\n        }\n    }\n    else {\n        var_8h = 0;\n    }\n    iVar1 = fcn.0007c110(*(arg_8h + 4), arg_ch, arg_10h, arg_14h, arg_18h);\n    if (var_8h != 0) {\n        iVar1 = var_8h;\n    }\n    return iVar1;\n}\n",
        "token_count": 236
    },
    "00074e60": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00074e60(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.00074d60(arg_8h);\n    if ((iVar1 == 0) && (iVar1 = fcn.00074ed0(arg_8h, arg_ch, &var_8h, &var_4h),  iVar1 == 0)) {\n        iVar1 = fcn.0007be70(*(arg_8h + 4), var_8h, var_4h, arg_10h);\n        fcn.00036460(var_8h);\n    }\n    return iVar1;\n}\n",
        "token_count": 179
    },
    "00074ed0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00074ed0(int32_t arg_8h, uint *arg_ch, char **arg_10h, int32_t *arg_14h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    uint var_c0h;\n    uint var_b8h;\n    uint var_b4h;\n    uint *var_b0h;\n    uint32_t var_ach;\n    int32_t var_a8h;\n    int32_t var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    char *var_8h;\n    int32_t var_4h;\n    \n    var_a8h = 0;\n    for (var_b0h = arg_ch; var_b0h != NULL; var_b0h = *var_b0h) {\n        var_a8h = var_a8h + var_b0h[2];\n    }\n    if (var_a8h == 0) {\n        *arg_10h = NULL;\n        *arg_14h = 0;\n        uVar2 = 0;\n    }\n    else {\n        puVar1 = *(arg_8h + 0x1c);\n        var_b8h = *puVar1;\n        var_b4h = puVar1[1];\n        var_98h = puVar1[2];\n        var_94h = puVar1[3];\n        var_a0h = var_b8h;\n        var_9ch = var_b4h;\n        fcn.00031e80(&var_90h, 0x10, &var_a0h);\n        var_8h = fcn.00036330(var_a8h + 9);\n        if (var_8h == NULL) {\n            uVar2 = 0x21590004;\n        }\n        else {\n            var_4h = 1;\n            var_ach = 0;\n            var_b0h = arg_ch;\n            var_a4h = 0;\n            while (var_b0h != NULL) {\n                if (8 - var_ach < var_b0h[2] - var_a4h) {\n                    fcn.0007f904(&var_c0h + var_ach, var_b0h[1] + var_a4h, 8 - var_ach);\n                    var_a4h = (8 - var_ach) + var_a4h;\n                    var_ach = 8;\n                }\n                else {\n                    fcn.0007f904(&var_c0h + var_ach, var_b0h[1] + var_a4h, var_b0h[2] - var_a4h);\n                    var_ach = (var_b0h[2] - var_a4h) + var_ach;\n                    var_b0h = *var_b0h;\n                    var_a4h = 0;\n                }\n                if ((var_ach == 8) || (var_b0h == NULL)) {\n                    fcn.00031360(&var_c0h, var_8h + var_4h, var_ach, &var_90h, &var_b8h, 1);\n                    while( true ) {\n                        uVar3 = var_ach & 0x80000007;\n                        if (uVar3 < 0) {\n                            uVar3 = (uVar3 - 1 | 0xfffffff8) + 1;\n                        }\n                        if (uVar3 == 0) break;\n                        var_ach = var_ach + 1;\n                    }\n                    var_4h = var_4h + var_ach;\n                    var_ach = 0;\n                }\n            }\n            *var_8h = (var_4h + -1) - var_a8h;\n            *arg_10h = var_8h;\n            *arg_14h = var_4h;\n            uVar2 = 0;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 900
    },
    "00075350": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.00075350(int32_t *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    int32_t iVar1;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00036330(0x38);\n    if (var_4h == 0) {\n        iVar1 = 0x21590004;\n    }\n    else {\n        fcn.0007f916(var_4h, 0, 0x38);\n        var_ch = arg_ch;\n        var_8h = 0;\n        iVar1 = fcn.0007b640(var_4h + 4, &var_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n        if (iVar1 == 0) {\n            *(var_4h + 0x10) = 0;\n            *(var_4h + 0xc) = 0x1000000;\n            fcn.000355f0(var_4h + 0x2c);\n            fcn.000355f0(var_4h + 0x30);\n            *arg_8h = var_4h;\n        }\n        else {\n            fcn.00036460(var_4h);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 343
    },
    "00075410": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00075410(int32_t arg_8h)\n\n{\n    uint *var_4h;\n    \n    fcn.00035620(arg_8h + 0x2c);\n    fcn.00035620(arg_8h + 0x30);\n    for (var_4h = *(arg_8h + 0x34); var_4h != NULL; var_4h = *var_4h) {\n        fcn.00036460(var_4h[1]);\n    }\n    fcn.00076460(*(arg_8h + 0x34));\n    fcn.00036460(arg_8h);\n    return;\n}\n",
        "token_count": 151
    },
    "00075480": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00075480(uint32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_28h;\n    uint *var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.0007bc60(*(arg_8h + 4), arg_ch);\n    if ((iVar1 == 0) && (*(arg_8h + 8) = 1,  *(arg_8h + 0x28) != 0)) {\n        var_4h._0_1_ = 1;\n        var_4h._1_2_ = fcn.000365f0(arg_8h & 0xffff0000 | *(arg_8h + 0x28));\n        var_18h = 0;\n        var_14h = 0;\n        var_8h = 0;\n        var_20h = 0x8500dad0;\n        var_1ch = 3;\n        var_24h = &var_14h;\n        var_10h = &var_4h;\n        var_ch = 3;\n        iVar1 = fcn.0007c290(*(arg_8h + 4), &var_24h, 0);\n    }\n    return iVar1;\n}\n",
        "token_count": 348
    },
    "00075530": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00075530(int32_t arg_8h, int32_t *arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.0007ba00(*(arg_8h + 4), &var_8h, arg_10h);\n    if (iVar1 == 0) {\n        var_4h = fcn.00036330(0x38);\n        if (var_4h == 0) {\n            iVar1 = 0x21590004;\n        }\n        else {\n            fcn.0007f916(var_4h, 0, 0x38);\n            *(var_4h + 4) = var_8h;\n            *(var_4h + 0xc) = *(arg_8h + 0xc);\n            *(var_4h + 0x10) = *(arg_8h + 0x10);\n            *(var_4h + 0x14) = *(arg_8h + 0x14);\n            *(var_4h + 0x18) = *(arg_8h + 0x18);\n            *(var_4h + 0x1c) = *(arg_8h + 0x1c);\n            *(var_4h + 0x20) = *(arg_8h + 0x20);\n            *(var_4h + 0x24) = *(arg_8h + 0x24);\n            fcn.000355f0(var_4h + 0x2c);\n            fcn.000355f0(var_4h + 0x30);\n            *(var_4h + 8) = 1;\n            *arg_ch = var_4h;\n            iVar1 = 0;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 432
    },
    "00075610": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00075610(int32_t arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t **ppiVar3;\n    uint var_58h;\n    uint *var_54h;\n    uint8_t *var_50h;\n    uint var_4ch;\n    uint var_48h;\n    int32_t **var_44h;\n    uint var_40h;\n    int32_t *var_3ch;\n    int32_t *var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    uint *var_2ch;\n    uint *var_28h;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t **var_14h;\n    int32_t var_10h;\n    uint8_t var_9h;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    var_14h = NULL;\n    if (*(arg_8h + 8) == 0) {\n        var_30h = 0x21590003;\n    }\n    else {\n        if (*(arg_8h + 0x24) == 0) {\n            arg_ch = fcn.00076570(arg_ch, arg_10h);\n            var_8h = arg_ch;\n            if (arg_ch == 0) {\n                return 0x21590004;\n            }\n        }\n        else {\n            var_8h = 0;\n        }\n        var_30h = fcn.000760d0(arg_8h, arg_ch, arg_10h, &var_14h, &var_18h);\n        if (var_30h == 0) {\n            if (var_18h < 0x7fff) {\n                if (var_18h < 0x10) {\n                    var_1ch = 1;\n                    iVar1 = fcn.0007f77e();\n                    var_4h = iVar1 % 7 + 1;\n                    for (var_44h = var_14h; var_44h != NULL; var_44h = *var_44h) {\n                        var_44h[3] = var_4h;\n                        uVar2 = fcn.0007f77e();\n                        uVar2 = uVar2 & 0x80000007;\n                        if (uVar2 < 0) {\n                            uVar2 = (uVar2 - 1 | 0xfffffff8) + 1;\n                        }\n                        var_4h = var_4h + uVar2 + 1;\n                    }\n                }\n                else if (var_18h < 0x7f) {\n                    var_1ch = 1;\n                    var_4h = 0x1;\n                    for (var_44h = var_14h; var_44h != NULL; var_44h = *var_44h) {\n                        var_44h[3] = var_4h;\n                        var_4h = var_4h + 1;\n                    }\n                }\n                else if (var_18h < 0x100) {\n                    var_1ch = 0;\n                    uVar2 = fcn.0007f77e();\n                    uVar2 = uVar2 & 0x8000007f;\n                    if (uVar2 < 0) {\n                        uVar2 = (uVar2 - 1 | 0xffffff80) + 1;\n                    }\n                    var_4h = uVar2 + 1;\n                    for (var_44h = var_14h; var_44h != NULL; var_44h = *var_44h) {\n                        var_44h[3] = var_4h;\n                        uVar2 = fcn.0007f77e();\n                        uVar2 = uVar2 & 0x8000007f;\n                        if (uVar2 < 0) {\n                            uVar2 = (uVar2 - 1 | 0xffffff80) + 1;\n                        }\n                        var_4h = var_4h + uVar2 + 1;\n                    }\n                }\n                else {\n                    var_1ch = 0;\n                    var_4h = 0x1;\n                    for (var_44h = var_14h; var_44h != NULL; var_44h = *var_44h) {\n                        var_44h[3] = var_4h;\n                        var_4h = var_4h + 1;\n                    }\n                }\n                fcn.00076280(var_14h, var_18h);\n                var_54h = NULL;\n                var_50h = NULL;\n                var_4ch = 0;\n                var_48h = 0;\n                var_2ch = NULL;\n                var_28h = NULL;\n                var_24h = 0;\n                var_20h = 0;\n                var_40h = 0;\n                var_3ch = NULL;\n                var_38h = NULL;\n                var_34h = 0;\n                var_30h = 0;\n                fcn.00035650(arg_8h + 0x2c);\n                var_44h = var_14h;\n                var_10h = 0;\n                do {\n                    while( true ) {\n                        if (var_44h == NULL) goto code_r0x000759fe;\n                        if (var_1ch == 0) {\n                            var_9h = 0xff;\n                            var_58h._0_2_ = *(var_44h + 3);\n                            ppiVar3 = var_44h;\n                            if (*var_44h == NULL) {\n                                ppiVar3 = var_58h | 0x8000;\n                                var_58h._0_2_ = ppiVar3;\n                            }\n                            var_50h = &var_9h;\n                            var_4ch = 1;\n                            var_54h = &var_2ch;\n                            var_58h._0_2_ = fcn.000365f0(ppiVar3 & 0xffff0000 | var_58h);\n                            var_28h = &var_58h;\n                            var_24h = 2;\n                            var_2ch = &var_40h;\n                            var_3ch = var_44h[1];\n                            var_38h = var_44h[2];\n                        }\n                        else {\n                            var_9h = *(var_44h + 3);\n                            if (*var_44h == NULL) {\n                                var_9h = var_9h | 0x80;\n                            }\n                            var_50h = &var_9h;\n                            var_4ch = 1;\n                            var_54h = &var_40h;\n                            var_3ch = var_44h[1];\n                            var_38h = var_44h[2];\n                        }\n                        if (*(arg_8h + 0xc) < var_44h[2]) {\n                            var_30h = 0x2159000b;\n                        }\n                        else {\n                            var_30h = fcn.0007c290(*(arg_8h + 4), &var_54h, arg_14h);\n                            if ((var_30h != 0) && (var_30h != 0x2159000b)) {\n                                if (var_44h != var_14h) {\n                                    *(arg_8h + 8) = 0;\n                                }\n                                goto code_r0x000759fe;\n                            }\n                        }\n                        if (var_30h == 0x2159000b) break;\n                        if (*(arg_8h + 0x10) < var_44h[2]) {\n                            *(arg_8h + 0x10) = var_44h[2];\n                        }\n                        var_44h = *var_44h;\n                        var_10h = var_10h + 1;\n                    }\n                    if (*(arg_8h + 0xc) == *(arg_8h + 0x10)) {\n                        *(arg_8h + 0x10) = 0;\n                    }\n                    else if (var_44h[2] < *(arg_8h + 0xc)) {\n                        *(arg_8h + 0xc) = var_44h[2];\n                    }\n                    var_30h = fcn.00076320(arg_8h, var_44h);\n                } while (var_30h == 0);\n                if (var_44h != var_14h) {\n                    *(arg_8h + 8) = 0;\n                }\ncode_r0x000759fe:\n                fcn.000356c0(arg_8h + 0x2c);\n                fcn.00076460(var_14h);\n                fcn.00036460(var_8h);\n            }\n            else {\n                fcn.00076460(var_14h);\n                var_30h = 0x2159000b;\n            }\n        }\n        else {\n            fcn.00036460(var_8h);\n        }\n    }\n    return var_30h;\n}\n",
        "token_count": 2085
    },
    "00075a30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00075a30(int32_t arg_8h, int32_t *arg_ch, uint32_t *arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint16_t uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    uint *var_24h;\n    uint8_t *var_20h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    int32_t var_14h;\n    uint *var_10h;\n    uint32_t var_ch;\n    uint *var_8h;\n    uint var_1h;\n    \n    var_20h = NULL;\n    if (*(arg_8h + 8) == 0) {\n        var_28h = 0x21590003;\n    }\n    else {\n        *arg_ch = 0;\n        fcn.00035650(arg_8h + 0x30);\n        var_8h = *(arg_8h + 0x34);\n        *(arg_8h + 0x34) = 0;\n        var_14h = 0;\n        while (var_28h = fcn.0007bf30(*(arg_8h + 4), &var_20h, &var_ch, arg_14h, arg_18h),  var_28h == 0) {\n            if (var_ch == 0) {\n                *(arg_8h + 8) = 0;\n                var_28h = 0x2159000a;\n                goto code_r0x00075d1a;\n            }\n            var_18h = 0;\n            var_1h._0_1_ = *var_20h;\n            if (var_1h == 0xff) {\n                if (var_ch < 3) {\n                    *(arg_8h + 8) = 0;\n                    var_28h = 0x2159000a;\n                    goto code_r0x00075d1a;\n                }\n                uVar1 = fcn.000365f0(var_20h & 0xffff0000 | *(var_20h + 1));\n                var_18h = (uVar1 & 0x8000) != 0;\n                var_1ch = uVar1 & 0x7fff;\n                var_2ch = 3;\n                if (uVar1 != 0xffff) goto code_r0x00075bd9;\n                iVar3 = fcn.000768f0(arg_8h, var_20h + 3, var_ch - 3);\n                if (iVar3 == 0) {\n                    var_28h = 0x2159000a;\n                    goto code_r0x00075d1a;\n                }\n                fcn.0007c0d0(*(arg_8h + 4), var_20h);\n            }\n            else {\n                var_18h = (var_1h & 0x80) != 0;\n                var_1ch = var_1h & 0x7f;\n                var_2ch = 1;\ncode_r0x00075bd9:\n                if ((var_8h == NULL) || (var_8h[3] != var_1ch)) {\n                    var_10h = fcn.00036330(0x10);\n                    if (var_10h == NULL) {\n                        var_28h = 0x21590004;\n                        goto code_r0x00075d1a;\n                    }\n                    *var_10h = 0;\n                    var_10h[1] = 0;\n                    var_10h[2] = 0;\n                    var_10h[3] = 0;\n                    uVar2 = fcn.00036330(var_ch - var_2ch);\n                    var_10h[1] = uVar2;\n                    if (var_10h[1] == 0) {\n                        fcn.00036460(var_10h);\n                        var_28h = 0x21590004;\n                        goto code_r0x00075d1a;\n                    }\n                    var_10h[2] = var_ch - var_2ch;\n                    var_10h[3] = var_1ch;\n                    fcn.0007f904(var_10h[1], var_20h + var_2ch, var_ch - var_2ch);\n                    *var_10h = var_8h;\n                    var_8h = var_10h;\n                }\n                else {\n                    iVar3 = fcn.00018d00(var_8h + 1, var_8h[2], (var_ch - var_2ch) + var_8h[2]);\n                    if (iVar3 != 0) {\n                        var_28h = 0x21590004;\n                        goto code_r0x00075d1a;\n                    }\n                    fcn.0007f904(var_8h[1] + var_8h[2], var_20h + var_2ch, var_ch - var_2ch);\n                    var_8h[2] = (var_ch - var_2ch) + var_8h[2];\n                }\n                if (var_18h != 0) goto code_r0x00075d1a;\n                fcn.0007c0d0(*(arg_8h + 4), var_20h);\n                var_20h = NULL;\n            }\n            var_14h = var_14h + 1;\n        }\n        if (var_28h == 0x21590002) {\n            *(arg_8h + 0x34) = var_8h;\n            var_8h = NULL;\n        }\ncode_r0x00075d1a:\n        fcn.000356c0(arg_8h + 0x30);\n        fcn.0007c0d0(*(arg_8h + 4), var_20h);\n        if (var_28h == 0) {\n            fcn.00076490(var_8h);\n            var_ch = 0;\n            for (var_24h = var_8h; var_24h != NULL; var_24h = *var_24h) {\n                var_ch = var_ch + var_24h[2];\n            }\n            iVar3 = fcn.00036330(var_ch);\n            *arg_ch = iVar3;\n            if (*arg_ch == 0) {\n                var_28h = 0x21590004;\n            }\n            else {\n                var_ch = 0;\n                for (var_24h = var_8h; var_24h != NULL; var_24h = *var_24h) {\n                    fcn.0007f904(*arg_ch + var_ch, var_24h[1], var_24h[2]);\n                    var_ch = var_ch + var_24h[2];\n                }\n                if ((*(arg_8h + 0x24) != 0) || (var_28h = fcn.00076710(*arg_ch, var_ch),  var_28h == 0)) {\n                    *arg_10h = var_ch;\n                }\n            }\n        }\n        for (var_24h = var_8h; var_24h != NULL; var_24h = *var_24h) {\n            fcn.00036460(var_24h[1]);\n        }\n        fcn.00076460(var_8h);\n        if (var_28h != 0) {\n            fcn.00036460(*arg_ch);\n            *arg_ch = 0;\n            *arg_10h = 0;\n        }\n    }\n    return var_28h;\n}\n",
        "token_count": 1767
    },
    "00075e90": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00075e90(int32_t arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    if (arg_ch == 1) {\n        if (arg_14h == 0x10) {\n            fcn.0007f904(arg_8h + 0x14, arg_10h, 0x10);\n            var_8h = 0;\n        }\n        else {\n            var_8h = 0x21590064;\n        }\n    }\n    iVar1 = fcn.0007c110(*(arg_8h + 4), arg_ch, arg_10h, arg_14h, arg_18h);\n    if (var_8h != 0) {\n        iVar1 = var_8h;\n    }\n    return iVar1;\n}\n",
        "token_count": 231
    },
    "00075f40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_94h\n// WARNING: Variable defined which should be unmapped: var_90h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00075f40(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t var_94h;\n    uint var_90h;\n    char *var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_8h = arg_ch;\ncode_r0x00075f4f:\n    do {\n        iVar1 = fcn.0007d710(&var_8h, &var_90h, 0x80, &var_ch);\n        if (iVar1 == 0) {\n            var_94h = 0;\ncode_r0x0007604d:\n            if (var_94h == 0) {\n                var_94h = fcn.0007bdc0(*(arg_8h + 4), arg_ch, arg_10h);\n            }\n            return var_94h;\n        }\n        iVar1 = fcn.0007f7a2(&var_90h, 0x850119d4);\n        if (iVar1 == 0) {\n            var_4h = fcn.0007f7fc(var_ch);\n            if (var_4h < 1) {\n                var_94h = 0x21590066;\n                goto code_r0x0007604d;\n            }\n            *(arg_8h + 0x10) = var_4h;\n            *(arg_8h + 0xc) = var_4h;\n            goto code_r0x00075f4f;\n        }\n        iVar1 = fcn.0007f7a2(&var_90h, 0x850119e0);\n        if ((iVar1 == 0) && ((*var_ch == '1' || (*var_ch == 'Y')))) {\n            *(arg_8h + 0x24) = 1;\n        }\n        else {\n            iVar1 = fcn.0007f7a2(&var_90h, 0x850119f4);\n            if (iVar1 == 0) {\n                var_4h = fcn.0007f7fc(var_ch);\n                if (var_4h < 1) {\n                    var_94h = 0x21590066;\n                    goto code_r0x0007604d;\n                }\n                *(arg_8h + 0x28) = var_4h;\n            }\n        }\n    } while( true );\n}\n",
        "token_count": 593
    },
    "00076080": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.00076080(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    int32_t var_4h;\n    \n    var_4h = fcn.00075610(arg_8h, arg_ch, arg_10h, 0);\n    if (var_4h == 0) {\n        var_4h = fcn.00075a30(arg_8h, arg_14h, arg_18h, arg_1ch, arg_20h);\n    }\n    return var_4h;\n}\n",
        "token_count": 151
    },
    "000760d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000760d0(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, uint *arg_14h, int32_t *arg_18h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_ch = 0;\n    if (arg_10h == 0) {\n        puVar1 = fcn.00036330(0x10);\n        if (puVar1 == NULL) {\n            fcn.00076460(*arg_14h);\n            *arg_14h = 0;\n            uVar2 = 0x21590004;\n        }\n        else {\n            *puVar1 = 0;\n            puVar1[1] = 0;\n            puVar1[2] = 0;\n            puVar1[3] = 0;\n            *arg_14h = puVar1;\n            *arg_18h = 1;\n            uVar2 = 0;\n        }\n    }\n    else {\n        *arg_14h = 0;\n        *arg_18h = 0;\n        var_10h = NULL;\n        for (; var_ch < arg_10h; var_ch = var_ch + var_4h) {\n            if (*(arg_8h + 0xc) == *(arg_8h + 0x10)) {\n                if (*(arg_8h + 0xc) - *(arg_8h + 0x10) < 0x400) {\n                    var_4h = *(arg_8h + 0xc);\n                }\n                else {\n                    iVar3 = fcn.0007f77e();\n                    var_4h = *(arg_8h + 0xc) - iVar3 % 0x401;\n                }\n            }\n            else {\n                iVar3 = fcn.0007f77e();\n                var_4h = iVar3 % ((*(arg_8h + 0xc) - *(arg_8h + 0x10)) + 1) + *(arg_8h + 0x10);\n            }\n            if (arg_10h - var_ch < var_4h) {\n                var_4h = arg_10h - var_ch;\n            }\n            puVar1 = fcn.00036330(0x10);\n            if (puVar1 == NULL) {\n                fcn.00076460(*arg_14h);\n                *arg_14h = 0;\n                return 0x21590004;\n            }\n            *puVar1 = 0;\n            puVar1[1] = 0;\n            puVar1[2] = 0;\n            puVar1[3] = 0;\n            puVar1[1] = arg_ch + var_ch;\n            puVar1[2] = var_4h;\n            if (var_10h == NULL) {\n                *arg_14h = puVar1;\n            }\n            else {\n                *var_10h = puVar1;\n            }\n            *arg_18h = *arg_18h + 1;\n            var_10h = puVar1;\n        }\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 748
    },
    "00076280": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00076280(uint *arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint *var_10h;\n    uint *var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if (1 < arg_ch) {\n        for (var_10h = arg_8h; var_10h != NULL; var_10h = *var_10h) {\n            iVar1 = fcn.0007f77e();\n            var_ch = arg_8h;\n            for (var_4h = 0; (var_ch != NULL && (var_4h != iVar1 % arg_ch)); var_4h = var_4h + 1) {\n                var_ch = *var_ch;\n            }\n            if (var_ch == NULL) {\n                return;\n            }\n            if ((var_ch != var_10h) && (var_ch[3] != var_10h[3])) {\n                fcn.000764f0(var_10h, var_ch);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 245
    },
    "00076320": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00076320(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint uVar4;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar1 = (*(arg_8h + 0xc) + *(arg_8h + 0x10)) / 2;\n    if ((arg_ch[2] <= iVar1) || (var_ch = iVar1,  iVar1 <= arg_ch[2] + (arg_ch[2] >> 0x1f & 3U) >> 2)) {\n        var_ch = arg_ch[2] / 2;\n    }\n    var_8h = arg_ch[2] - var_ch;\n    if ((0x400 < var_ch) && (var_8h + 0x400 <= iVar1)) {\n        iVar2 = fcn.0007f77e();\n        var_ch = var_ch - iVar2 % 0x401;\n        var_8h = arg_ch[2] - var_ch;\n    }\n    if ((0x400 < var_8h) && (var_ch + 0x400 <= iVar1)) {\n        iVar1 = fcn.0007f77e();\n        var_8h = var_8h - iVar1 % 0x401;\n        var_ch = arg_ch[2] - var_8h;\n    }\n    puVar3 = fcn.00036330(0x10);\n    if (puVar3 == NULL) {\n        uVar4 = 0x21590004;\n    }\n    else {\n        *puVar3 = 0;\n        puVar3[1] = 0;\n        puVar3[2] = 0;\n        puVar3[3] = 0;\n        puVar3[2] = var_8h;\n        puVar3[3] = arg_ch[3];\n        puVar3[1] = arg_ch[1] + var_ch;\n        arg_ch[2] = var_ch;\n        *puVar3 = *arg_ch;\n        *arg_ch = puVar3;\n        uVar4 = 0;\n    }\n    return uVar4;\n}\n",
        "token_count": 514
    },
    "00076460": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00076460(uint *arg_8h)\n\n{\n    uint *puVar1;\n    uint var_4h;\n    \n    while (arg_8h != NULL) {\n        puVar1 = *arg_8h;\n        fcn.00036460(arg_8h);\n        arg_8h = puVar1;\n    }\n    return;\n}\n",
        "token_count": 83
    },
    "00076490": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00076490(int32_t **arg_8h)\n\n{\n    int32_t **var_8h;\n    int32_t **var_4h;\n    \n    for (var_4h = arg_8h; *var_4h != NULL; var_4h = *var_4h) {\n        for (var_8h = *var_4h; var_8h != NULL; var_8h = *var_8h) {\n            if (var_8h[3] < var_4h[3]) {\n                fcn.000764f0(var_4h, var_8h);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 154
    },
    "00076570": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00076570(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint8_t var_9h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.00036330(arg_ch);\n    if (iVar1 == 0) {\n        iVar1 = 0;\n    }\n    else if (arg_ch < 0xb) {\n        fcn.0007f904(iVar1, arg_8h, arg_ch);\n    }\n    else {\n        var_24h = arg_ch;\n        var_1ch = 0;\n        do {\n            var_1ch = var_24h % 10 + var_1ch;\n            var_24h = var_24h / 10;\n        } while (0 < var_24h);\n        var_8h = 0;\n        var_18h = 0;\n        var_9h = 0;\n        for (var_10h = 0; var_10h < arg_ch / var_1ch; var_10h = var_10h + 1) {\n            for (var_4h = 0; var_4h < 8; var_4h = var_4h + 1) {\n                for (var_14h = 0; var_14h < var_1ch; var_14h = var_14h + 1) {\n                    var_9h = var_9h | ((*(arg_8h + (arg_ch / var_1ch) * var_14h + var_10h) & 1 << (var_4h & 0x1f)) >>\n                                      (var_4h & 0x1f)) << (var_18h & 0x1f);\n                    var_18h = var_18h + 1;\n                    if (7 < var_18h) {\n                        *(iVar1 + var_8h) = var_9h;\n                        var_8h = var_8h + 1;\n                        var_9h = 0;\n                        var_18h = 0;\n                    }\n                }\n            }\n        }\n        var_10h = 0;\n        for (; var_8h < arg_ch; var_8h = var_8h + 1) {\n            *(iVar1 + var_8h) = *(arg_8h + var_8h) ^ *(iVar1 + var_10h);\n            var_10h = var_10h + 1;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 634
    },
    "00076710": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00076710(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    uint8_t *arg_8h_00;\n    int32_t iVar2;\n    uint8_t var_21h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (arg_ch < 0xb) {\n        uVar1 = 0;\n    }\n    else {\n        arg_8h_00 = fcn.00036330(arg_ch);\n        if (arg_8h_00 == NULL) {\n            uVar1 = 0x21590004;\n        }\n        else {\n            fcn.0007f904(arg_8h_00, arg_8h, arg_ch);\n            fcn.0007f916(arg_8h, 0, arg_ch);\n            var_20h = arg_ch;\n            var_1ch = 0;\n            do {\n                var_1ch = var_20h % 10 + var_1ch;\n                var_20h = var_20h / 10;\n            } while (0 < var_20h);\n            iVar2 = arg_ch / var_1ch;\n            var_8h = 0;\n            var_21h = *arg_8h_00;\n            var_ch = 1;\n            for (var_10h = 0; var_10h < iVar2; var_10h = var_10h + 1) {\n                for (var_4h = 0; var_4h < 8; var_4h = var_4h + 1) {\n                    for (var_18h = 0; var_18h < var_1ch; var_18h = var_18h + 1) {\n                        *(arg_8h + iVar2 * var_18h + var_10h) =\n                             *(arg_8h + iVar2 * var_18h + var_10h) |\n                             ((var_21h & 1 << (var_8h & 0x1f)) >> (var_8h & 0x1f)) << (var_4h & 0x1f);\n                        var_8h = var_8h + 1;\n                        if (7 < var_8h) {\n                            var_21h = arg_8h_00[var_ch];\n                            var_ch = var_ch + 1;\n                            var_8h = 0;\n                        }\n                    }\n                }\n            }\n            var_10h = 0;\n            for (var_ch = var_ch + -1; var_ch < arg_ch; var_ch = var_ch + 1) {\n                *(arg_8h + var_ch) = arg_8h_00[var_ch] ^ arg_8h_00[var_10h];\n                var_10h = var_10h + 1;\n            }\n            fcn.00036460(arg_8h_00);\n            uVar1 = 0;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 724
    },
    "000768f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.000768f0(int32_t arg_8h, unkbyte3 *arg_ch, int32_t arg_10h)\n\n{\n    uint16_t uVar1;\n    uint var_8h;\n    uint var_1h;\n    \n    if (arg_10h == 0) {\n        return 0;\n    }\n    if (*arg_ch == '\\x01') {\n        if (arg_10h != 3) {\n            return 0;\n        }\n        var_8h._1_2_ = *arg_ch >> 8;\n        uVar1 = fcn.000365f0(arg_ch & 0xffff0000 | var_8h._1_2_);\n        if (uVar1 == 0) {\n            return 0;\n        }\n        *(arg_8h + 0x10) = uVar1;\n        *(arg_8h + 0xc) = *(arg_8h + 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 247
    },
    "00076970": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.00076970(int32_t *arg_8h, uint noname_1, char *arg_10h, char *arg_14h, char *arg_18h, char *arg_1ch, \n            uint32_t arg_20h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint var_38h;\n    uint var_30h;\n    char *var_2ch;\n    uint var_28h;\n    uint var_20h;\n    char *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_4h;\n    \n    var_4h = fcn.00036330(0x3c);\n    if (var_4h == 0) {\n        var_10h = 0x21590004;\n        goto code_r0x00076b08;\n    }\n    fcn.0007f916(var_4h, 0, 0x3c);\n    if (arg_10h != NULL) {\n        if ((arg_20h & 1) == 0) {\n            var_10h = 0x215900c9;\n            goto code_r0x00076b08;\n        }\n        if (arg_10h[arg_14h + -1] == '\\0') {\n            var_1ch = arg_10h;\n            do {\n                cVar1 = *var_1ch;\n                var_1ch = var_1ch + 1;\n            } while (cVar1 != '\\0');\n            if (var_1ch + (1 - (arg_10h + 1)) == arg_14h) {\n                fcn.0007f8e6(&var_ch, arg_10h);\n                iVar2 = fcn.0007f8da(var_4h + 4, &var_ch, 1);\n                if (iVar2 != 0) {\n                    var_10h = 0x21590004;\n                    goto code_r0x00076b08;\n                }\n                fcn.000355f0(var_4h + 0x20);\n                goto code_r0x00076a58;\n            }\n        }\n        var_10h = 0x21590067;\n        goto code_r0x00076b08;\n    }\ncode_r0x00076a58:\n    if (arg_18h == NULL) {\ncode_r0x00076af9:\n        *arg_8h = var_4h;\n        var_10h = 0;\n    }\n    else {\n        if ((arg_20h & 2) == 0) {\n            var_10h = 0x215900cb;\n            goto code_r0x00076b08;\n        }\n        if (arg_18h[arg_1ch + -1] == '\\0') {\n            var_2ch = arg_18h;\n            do {\n                cVar1 = *var_2ch;\n                var_2ch = var_2ch + 1;\n            } while (cVar1 != '\\0');\n            if (var_2ch + (1 - (arg_18h + 1)) == arg_1ch) {\n                fcn.0007f8e6(&var_ch, arg_18h);\n                iVar2 = fcn.0007f8da(var_4h + 0xc, &var_ch, 1);\n                if (iVar2 != 0) {\n                    var_10h = 0x21590004;\n                    goto code_r0x00076b08;\n                }\n                goto code_r0x00076af9;\n            }\n        }\n        var_10h = 0x21590069;\n    }\ncode_r0x00076b08:\n    if ((var_10h != 0) && (var_4h != 0)) {\n        fcn.0007f8ec(var_4h + 4);\n        fcn.0007f8ec(var_4h + 0xc);\n        fcn.00036460(var_4h);\n    }\n    return var_10h;\n}\n",
        "token_count": 926
    },
    "00076b50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00076b50(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    *(arg_8h + 0x18) = 1;\n    iVar1 = *(arg_8h + 0x14);\n    *(arg_8h + 0x14) = 0;\n    if (iVar1 != 0) {\n        fcn.0007f6c4(iVar1);\n    }\n    iVar1 = *(arg_8h + 0x1c);\n    *(arg_8h + 0x1c) = 0;\n    if (iVar1 != 0) {\n        fcn.0007f6c4(iVar1);\n        fcn.00035650(arg_8h + 0x20);\n        fcn.000356c0(arg_8h + 0x20);\n    }\n    return;\n}\n",
        "token_count": 206
    },
    "00076bc0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00076bc0(int32_t arg_8h)\n\n{\n    if (*(arg_8h + 8) != 0) {\n        fcn.00035620(arg_8h + 0x20);\n    }\n    fcn.0007f8ec(arg_8h + 4);\n    fcn.0007f8ec(arg_8h + 0xc);\n    fcn.00036460(*(arg_8h + 0x2c));\n    fcn.00036460(*(arg_8h + 0x38));\n    fcn.00036460(arg_8h);\n    return;\n}\n",
        "token_count": 143
    },
    "00076c20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Switch with 1 destination removed at 0x00076ca7\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00076c20(int32_t arg_8h)\n\n{\n    uint uVar1;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((*(arg_8h + 0x14) == 0) && (*(arg_8h + 0x10) != 0)) {\n        var_38h = 0x18;\n        var_34h = 0;\n        var_2ch = 0x40;\n        var_30h = arg_8h + 0xc;\n        var_28h = 0;\n        if (0 < *(arg_8h + 0x24)) {\n            var_20h = 0xc;\n            var_18h._0_1_ = 0;\n            var_18h._1_1_ = 0;\n            if (*(arg_8h + 0x24) - 1U < 4) {\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n        }\n        var_24h = 0;\n        var_14h = fcn.0001ed40(arg_8h + 0x14, 0xc0000000, &var_38h, &var_10h, 0, 0, 0, 1, 0, 0, 0);\n        if (var_14h == 0) {\n            var_8h = 1;\n            var_4h = 0;\n            var_14h = fcn.0007f6dc(*(arg_8h + 0x14), &var_10h, &var_8h, 8, 0x17);\n            if (var_14h == 0) {\n                uVar1 = 0;\n            }\n            else {\n                fcn.0007f6c4(*(arg_8h + 0x14));\n                *(arg_8h + 0x14) = 0;\n                uVar1 = fcn.0007f742(var_14h);\n            }\n        }\n        else {\n            uVar1 = fcn.0007f742(var_14h);\n        }\n    }\n    else {\n        uVar1 = 0x21590065;\n    }\n    return uVar1;\n}\n",
        "token_count": 628
    },
    "00076d80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_60h\n// WARNING: Variable defined which should be unmapped: var_44h\n\nint32_t __cdecl fcn.00076d80(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    int32_t var_60h;\n    uint *var_5ch;\n    uint var_58h;\n    uint var_54h;\n    int32_t var_50h;\n    uint var_4ch;\n    uint var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    int32_t var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint *var_4h;\n    \n    var_4h = NULL;\n    var_10h = 0;\n    var_40h = 0;\n    uVar3 = 0;\n    var_3ch = fcn.0007f7c0(&fcn.00076d80::var_5ch, 0x10000000, 0, 1, 0);\n    if (var_3ch != 0) {\n        iVar1 = fcn.0007f742(var_3ch);\n        return iVar1;\n    }\n    iVar1 = fcn.00037f00(&fcn.00076d80::var_10h);\n    var_3ch = iVar1;\n    if (iVar1 == 0) {\n        var_58h = 0x18;\n        var_54h = 0;\n        var_4ch = 0x40;\n        var_50h = arg_8h + 4;\n        var_48h = var_10h;\n        var_44h = 0;\n        var_14h = 0;\n        var_38h = 1;\n        var_34h = 1;\n        var_30h = 0;\n        var_2ch = 0xff;\n        var_28h = 0x1000;\n        var_24h = 0x1000;\n        var_20h = 0xfff85ee0;\n        var_1ch = 0xffffffff;\n        var_18h = 1;\n        iVar1 = (**0x8500d148)(&fcn.00076d80::var_4h, 0xc0000000, &fcn.00076d80::var_58h, &fcn.00076d80::var_ch, 0, 0, 3\n                               , 3, 0, 0, 0, 1, &fcn.00076d80::var_38h, 0);\n        var_3ch = iVar1;\n        if (iVar1 == 0) {\n            var_44h = arg_8h + 0x20;\n            var_48h = 0x76ec3;\n            fcn.00035650(var_44h);\n            if (*(arg_8h + 0x18) == '\\0') {\n                *(arg_8h + 0x1c) = var_4h;\n                var_48h = 0;\n                var_4ch = 0;\n                var_50h = 0;\n                var_54h = 0;\n                var_58h = 0x110008;\n                var_5ch = &fcn.00076d80::var_ch;\n                puVar2 = var_4h;\n                var_3ch = fcn.0007f8e0(uVar3, var_5ch, 0, 0);\n                if (var_3ch == 0x103) {\n                    puVar2 = var_5ch;\n                    var_3ch = fcn.0007f772(var_5ch, 0, 0);\n                    if (var_3ch != 0) {\n                        var_60h = fcn.0007f742(var_3ch);\n                        var_4h = *(arg_8h + 0x1c);\n                        *(arg_8h + 0x1c) = 0;\n                        iVar1 = arg_8h + 0x20;\n                        fcn.000356c0(iVar1);\n                        goto code_r0x00077062;\n                    }\n                    var_3ch = var_ch;\n                }\n                if (var_3ch == 0) {\n                    if (*(arg_8h + 0x1c) == 0) {\n                        var_60h = 0x21590006;\n                        iVar1 = arg_8h + 0x20;\n                        fcn.000356c0(iVar1);\n                    }\n                    else {\n                        *(arg_8h + 0x1c) = 0;\n                        iVar1 = arg_8h + 0x20;\n                        fcn.000356c0(iVar1);\n                        var_40h = fcn.00036330(0x3c);\n                        if (var_40h == 0) {\n                            var_60h = 0x21590004;\n                        }\n                        else {\n                            fcn.0007f916(var_40h, 0, 0x3c, iVar1, puVar2);\n                            *(var_40h + 0x14) = var_4h;\n                            *(var_40h + 0x28) = *(arg_8h + 0x28);\n                            *(var_40h + 0x34) = *(arg_8h + 0x34);\n                            if (*(arg_8h + 0x38) != 0) {\n                                uVar3 = fcn.00036490(*(arg_8h + 0x38));\n                                *(var_40h + 0x38) = uVar3;\n                                if (*(var_40h + 0x38) != 0) {\n                                    var_60h = 0x21590004;\n                                    goto code_r0x00077062;\n                                }\n                            }\n                            *arg_ch = var_40h;\n                            var_60h = 0;\n                        }\n                    }\n                }\n                else {\n                    var_60h = fcn.0007f742(var_3ch);\n                    var_4h = *(arg_8h + 0x1c);\n                    *(arg_8h + 0x1c) = 0;\n                    iVar1 = arg_8h + 0x20;\n                    fcn.000356c0(iVar1);\n                }\n            }\n            else {\n                iVar1 = arg_8h + 0x20;\n                var_4ch = 0x76eda;\n                fcn.000356c0(iVar1);\n                var_60h = 0x21590006;\n            }\n        }\n        else {\n            var_48h = 0x76eaf;\n            var_60h = fcn.0007f742();\n        }\n    }\n    else {\n        var_60h = fcn.0007f742(iVar1);\n    }\ncode_r0x00077062:\n    if (var_60h != 0) {\n        if (var_4h != NULL) {\n            fcn.0007f6c4(var_4h, iVar1);\n        }\n        fcn.00036460(var_40h);\n    }\n    fcn.00038080(var_10h);\n    fcn.0007f6c4(var_5ch);\n    return var_60h;\n}\n",
        "token_count": 1728
    },
    "000770a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_b4h\n// WARNING: Variable defined which should be unmapped: var_b0h\n// WARNING: Variable defined which should be unmapped: var_a8h\n\nuint __cdecl fcn.000770a0(int32_t arg_8h, uint arg_ch)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    bool bVar4;\n    uint var_b4h;\n    int32_t var_b0h;\n    uint *var_a8h;\n    uint8_t *var_a4h;\n    uint var_a0h;\n    int32_t var_9ch;\n    uint *var_94h;\n    uint8_t *var_90h;\n    uint var_8ch;\n    uint var_88h;\n    char *var_8h;\n    uint var_4h;\n    \n    var_4h = arg_ch;\ncode_r0x000770af:\n    do {\n        iVar2 = fcn.0007d710(&var_4h, &var_88h, 0x80, &var_8h);\n        if (iVar2 == 0) {\n            return 0;\n        }\n        var_90h = 0x85011a04;\n        var_94h = &var_88h;\n        do {\n            uVar1 = *var_94h;\n            bVar4 = uVar1 < *var_90h;\n            if (uVar1 != *var_90h) {\ncode_r0x00077144:\n                var_9ch = (1 - bVar4) - (bVar4 != 0);\n                goto code_r0x0007714f;\n            }\n            if (uVar1 == 0) break;\n            uVar1 = *(var_94h + 1);\n            bVar4 = uVar1 < var_90h[1];\n            if (uVar1 != var_90h[1]) goto code_r0x00077144;\n            var_94h = var_94h + 2;\n            var_90h = var_90h + 2;\n        } while (uVar1 != 0);\n        var_9ch = 0;\ncode_r0x0007714f:\n        if ((var_9ch == 0) && ((*var_8h == '1' || (*var_8h == 'Y')))) {\n            if (*(arg_8h + 0x2c) != 0) {\n                return 0x21590064;\n            }\n            *(arg_8h + 0x28) = 1;\n            goto code_r0x000770af;\n        }\n        var_a4h = 0x85011a14;\n        var_a8h = &var_88h;\n        do {\n            uVar1 = *var_a8h;\n            bVar4 = uVar1 < *var_a4h;\n            if (uVar1 != *var_a4h) {\ncode_r0x00077215:\n                var_b0h = (1 - bVar4) - (bVar4 != 0);\n                goto code_r0x00077220;\n            }\n            if (uVar1 == 0) break;\n            uVar1 = *(var_a8h + 1);\n            bVar4 = uVar1 < var_a4h[1];\n            if (uVar1 != var_a4h[1]) goto code_r0x00077215;\n            var_a8h = var_a8h + 2;\n            var_a4h = var_a4h + 2;\n        } while (uVar1 != 0);\n        var_b0h = 0;\ncode_r0x00077220:\n        if (var_b0h == 0) {\n            if (*(arg_8h + 0x38) != 0) {\n                return 0x21590064;\n            }\n            *(arg_8h + 0x34) = 1;\n            uVar3 = fcn.00036490(var_8h);\n            *(arg_8h + 0x38) = uVar3;\n            if (*(arg_8h + 0x38) == 0) {\n                return 0x21590004;\n            }\n        }\n        else {\n            iVar2 = fcn.0007f7a2(&var_88h, 0x85011a24);\n            if (iVar2 == 0) {\n                iVar2 = fcn.00037110(*var_8h);\n                if (iVar2 == 0x41) {\n                    *(arg_8h + 0x24) = 1;\n                }\n                else {\n                    iVar2 = fcn.00037110(*var_8h);\n                    if (iVar2 == 0x49) {\n                        iVar2 = fcn.00037110(var_8h[1]);\n                        if (iVar2 == 0x44) {\n                            *(arg_8h + 0x24) = 2;\n                        }\n                        else {\n                            iVar2 = fcn.00037110(var_8h[1]);\n                            if (iVar2 != 0x4d) {\n                                return 0x21590066;\n                            }\n                            *(arg_8h + 0x24) = 3;\n                        }\n                    }\n                    else {\n                        iVar2 = fcn.00037110(*var_8h);\n                        if (iVar2 != 0x44) {\n                            return 0x21590066;\n                        }\n                        *(arg_8h + 0x24) = 4;\n                    }\n                }\n            }\n        }\n    } while( true );\n}\n",
        "token_count": 1247
    },
    "00077370": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00077370(int32_t arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    uint var_24h;\n    uint var_1ch;\n    char *var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (*(arg_8h + 0x14) == 0) {\n        iVar2 = 0x21590065;\n    }\n    else {\n        iVar2 = fcn.00052470(arg_8h + 0x34, 0);\n        if (iVar2 != 0) {\n            var_18h = *(arg_8h + 0x38);\n            pcVar3 = var_18h + 1;\n            do {\n                cVar1 = *var_18h;\n                var_18h = var_18h + 1;\n            } while (cVar1 != '\\0');\n            iVar2 = fcn.00077370(arg_8h, *(arg_8h + 0x38), var_18h + (1 - pcVar3));\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n        }\n        if (arg_10h == 0) {\n            iVar2 = 0;\n        }\n        else {\n            var_ch = fcn.0007f7c0(&var_10h, 0x10000000, 0, 1, 0);\n            if (var_ch == 0) {\n                var_ch = fcn.0007f6f4(*(arg_8h + 0x14), var_10h, 0, 0, &var_8h, arg_ch, arg_10h, 0, 0);\n                if (var_ch == 0x103) {\n                    var_ch = fcn.0007f772(var_10h, 0, 0);\n                    if (var_ch != 0) {\n                        fcn.0007f6c4(var_10h);\n                        iVar2 = fcn.0007f742(var_ch);\n                        return iVar2;\n                    }\n                    var_ch = var_8h;\n                }\n                fcn.0007f6c4(var_10h);\n                if ((var_ch == 0) && (var_4h != arg_10h)) {\n                    iVar2 = -1;\n                }\n                else if ((var_ch == -0x3ffffeb5) || (var_ch == -0x3fffff50)) {\n                    iVar2 = 0x21590003;\n                }\n                else {\n                    iVar2 = fcn.0007f742(var_ch);\n                }\n            }\n            else {\n                iVar2 = fcn.0007f742(var_ch);\n            }\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 661
    },
    "000774d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.000774d0(int32_t arg_8h, int32_t *arg_ch, uint32_t *arg_10h, uint32_t arg_14h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    char *pcVar6;\n    int32_t iVar7;\n    bool bVar8;\n    ulong uVar9;\n    int64_t iVar10;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_50h;\n    char *var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint32_t var_24h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    *arg_ch = 0;\n    if (*(arg_8h + 0x14) == 0) {\n        return 0x21590065;\n    }\n    iVar4 = fcn.00052470(arg_8h + 0x34, 0);\n    if (iVar4 != 0) {\n        var_4ch = *(arg_8h + 0x38);\n        pcVar6 = var_4ch + 1;\n        do {\n            cVar1 = *var_4ch;\n            var_4ch = var_4ch + 1;\n        } while (cVar1 != '\\0');\n        iVar4 = fcn.00077370(arg_8h, *(arg_8h + 0x38), var_4ch + (1 - pcVar6));\n        if (iVar4 != 0) {\n            return iVar4;\n        }\n    }\n    iVar4 = fcn.00052470(arg_8h + 0x28, 0);\n    if ((iVar4 != 0) && (iVar4 = fcn.000774d0(arg_8h, arg_8h + 0x2c, arg_8h + 0x30, arg_14h),  iVar4 != 0)) {\n        return iVar4;\n    }\n    do {\n        uVar2 = (*0x8500d164)[1];\n        uVar3 = **0x8500d164;\n    } while (uVar2 != (*0x8500d164)[2]);\n    while( true ) {\n        var_18h = fcn.0007f8e0(*(arg_8h + 0x14), 0, 0, 0, &var_14h, 0x11400c, 0, 0, &var_30h, 0x14);\n        if (var_18h == 0x103) {\n            var_18h = fcn.0007f772(*(arg_8h + 0x14), 0, 0);\n            if (var_18h != 0) {\n                iVar4 = fcn.0007f742(var_18h);\n                return iVar4;\n            }\n            var_18h = var_14h;\n        }\n        if ((var_18h != 0) && (var_18h != -0x7ffffffb)) {\n            if (*(arg_8h + 0x18) != '\\0') {\n                return 0x21590006;\n            }\n            if ((var_18h != -0x3ffffeb5) && (var_18h != -0x3fffff50)) {\n                iVar4 = fcn.0007f742(var_18h);\n                return iVar4;\n            }\n            return 0x21590003;\n        }\n        var_1ch = var_24h;\n        if (var_24h != 0) break;\n        do {\n            var_4h = (*0x8500d164)[1];\n            var_8h = **0x8500d164;\n        } while (var_4h != (*0x8500d164)[2]);\n        if (arg_14h != 0xffffffff) {\n            bVar8 = var_8h < uVar3;\n            iVar7 = var_8h - uVar3;\n            iVar4 = var_4h - uVar2;\n            uVar5 = (**0x8500d160)();\n            uVar9 = fcn.0007f8fe(iVar7, iVar4 - bVar8, uVar5, 0);\n            iVar10 = fcn.0007f90a(uVar9, 10000, 0);\n            if ((-1 < iVar10) && ((0xffffffff < iVar10 || (arg_14h < iVar10)))) {\n                return 0x21590002;\n            }\n        }\n        fcn.0005bdd0(10);\n    }\n    iVar4 = fcn.00036330(var_24h);\n    *arg_ch = iVar4;\n    if (*arg_ch == 0) {\n        return 0x21590004;\n    }\n    *arg_10h = var_1ch;\n    var_18h = fcn.0007f7c0(&var_34h, 0x10000000, 0, 1, 0);\n    if (var_18h == 0) {\n        var_ch = 0;\n        while( true ) {\n            if (var_1ch <= var_ch) {\n                fcn.0007f6c4(var_34h);\n                return 0;\n            }\n            var_18h = fcn.0007f766(*(arg_8h + 0x14), var_34h, 0, 0, &var_14h, *arg_ch + var_ch, var_1ch - var_ch, 0, 0);\n            if (var_18h == 0x103) {\n                var_18h = fcn.0007f772(var_34h, 0, 0);\n                if (var_18h != 0) {\n                    fcn.00036460(*arg_ch);\n                    *arg_ch = 0;\n                    *arg_10h = 0;\n                    fcn.0007f6c4(var_34h);\n                    iVar4 = fcn.0007f742(var_18h);\n                    return iVar4;\n                }\n                var_18h = var_14h;\n            }\n            if (var_18h != 0) break;\n            var_ch = var_ch + var_10h;\n        }\n        fcn.00036460(*arg_ch);\n        *arg_ch = 0;\n        *arg_10h = 0;\n        fcn.0007f6c4(var_34h);\n        if (*(arg_8h + 0x18) != '\\0') {\n            return 0x21590006;\n        }\n        if ((var_18h != -0x3fffff50) && (var_18h != -0x3fffff4f)) {\n            iVar4 = fcn.0007f742(var_18h);\n            return iVar4;\n        }\n        return 0x21590003;\n    }\n    fcn.00036460(*arg_ch);\n    *arg_ch = 0;\n    *arg_10h = 0;\n    iVar4 = fcn.0007f742(var_18h);\n    return iVar4;\n}\n",
        "token_count": 1714
    },
    "000778d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.000778d0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int32_t var_4h;\n    \n    var_4h = fcn.00077370(arg_8h, arg_ch, arg_10h);\n    if (var_4h == 0) {\n        var_4h = fcn.000774d0(arg_8h, arg_14h, arg_18h, arg_1ch);\n    }\n    return var_4h;\n}\n",
        "token_count": 138
    },
    "00077bb0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.00077bb0(int32_t *arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h, int32_t arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00036330(0x74);\n    if (var_4h == 0) {\n        var_10h = 0x21590004;\n    }\n    else {\n        fcn.0007f916(var_4h, 0, 0x74);\n        var_ch = arg_ch;\n        var_8h = 0;\n        var_10h = fcn.0007b640(var_4h + 4, &var_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n        if (var_10h == 0) {\n            if ((arg_10h != 0) && (arg_18h == 0)) {\n                var_1ch = var_4h;\n                var_18h = 0x85074710;\n                var_14h = 0x85074770;\n                fcn.0007c110(*(var_4h + 4), 6, &var_1ch, 0xc, 0);\n            }\n            *(var_4h + 0x34) = 5;\n            *(var_4h + 0x38) = 30000;\n            *(var_4h + 0x3c) = 1000;\n            *(var_4h + 0x40) = 4;\n            if (arg_18h != 0) {\n                *(var_4h + 0x44) = 1;\n            }\n            fcn.000355f0(var_4h + 0x48);\n            fcn.000355f0(var_4h + 0x1c);\n            fcn.000355f0(var_4h + 0x18);\n            fcn.00034d00(var_4h + 0x54);\n            *arg_8h = var_4h;\n        }\n        else {\n            fcn.00036460(var_4h);\n        }\n    }\n    return var_10h;\n}\n",
        "token_count": 566
    },
    "00077ce0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00077ce0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t var_14h;\n    uchar var_10h;\n    uchar var_fh [3];\n    uint *var_ch;\n    uint *var_8h;\n    int32_t var_4h;\n    \n    if (*(arg_8h + 0x10) == 3) {\n        if (arg_ch == 1) {\n            var_fh[0] = 0x20;\n            var_10h = *(arg_8h + 0x14);\n            var_fh[1] = fcn.0007f77e();\n            fcn.00078320(arg_8h, 0, 1, &var_10h);\n        }\n        else {\n            fcn.00078100(arg_8h, 0, 0, 2);\n            *(arg_8h + 0x10) = 0;\n        }\n    }\n    if (*(arg_8h + 8) != 0) {\n        *(arg_8h + 8) = 0;\n    }\n    *(arg_8h + 0xc) = 1;\n    fcn.00035650(arg_8h + 0x48);\n    if (*(arg_8h + 0x60) != 0) {\n        var_ch = *(arg_8h + 0x60);\n        while (var_ch != NULL) {\n            var_8h = *var_ch;\n            fcn.0007c0d0(*(arg_8h + 4), var_ch[1]);\n            fcn.00036460(var_ch);\n            var_ch = var_8h;\n        }\n        *(arg_8h + 0x60) = 0;\n        *(arg_8h + 100) = 0;\n    }\n    fcn.000356c0(arg_8h + 0x48);\n    fcn.0007b950(arg_8h + 4, 0);\n    var_4h = 0;\n    do {\n        fcn.00035650(arg_8h + 0x48);\n        if ((*(arg_8h + 0x4c) == 0) && (*(arg_8h + 0x50) == 0)) {\n            var_14h = 1;\n        }\n        else {\n            var_14h = 0;\n        }\n        var_4h = var_14h;\n        fcn.000356c0(arg_8h + 0x48);\n        if (var_4h == 0) {\n            fcn.00034dc0(arg_8h + 0x54);\n            fcn.0005bdd0(10);\n        }\n    } while (var_4h == 0);\n    return;\n}\n",
        "token_count": 624
    },
    "00077ea0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00077ea0(int32_t arg_8h, uint arg_ch)\n\n{\n    uchar uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_4h;\n    \n    if (*(arg_8h + 8) == 0) {\n        iVar2 = fcn.0007bc60(*(arg_8h + 4), arg_ch);\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        *(arg_8h + 0x20) = *(arg_8h + 0x3c);\n        *(arg_8h + 8) = 1;\n        uVar3 = fcn.00026f20();\n        *(arg_8h + 0x70) = uVar3;\n        *(arg_8h + 0x6c) = *(arg_8h + 0x70);\n    }\n    if (*(arg_8h + 0x10) == 0) {\n        uVar1 = fcn.0007f77e();\n        *(arg_8h + 0x14) = uVar1;\n        *(arg_8h + 0x10) = 2;\n        iVar2 = fcn.00078100(arg_8h, 0, 0, 1);\n        if (iVar2 != 0) {\n            *(arg_8h + 0x10) = 0;\n            return iVar2;\n        }\n        *(arg_8h + 0x10) = 3;\n    }\n    return 0;\n}\n",
        "token_count": 351
    },
    "00077f60": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00077f60(int32_t arg_8h, int32_t *arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.0007ba00(*(arg_8h + 4), &var_8h, arg_10h);\n    if (iVar1 == 0) {\n        var_4h = fcn.00036330(0x74);\n        if (var_4h == 0) {\n            iVar1 = 0x21590004;\n        }\n        else {\n            fcn.0007f916(var_4h, 0, 0x74);\n            *(var_4h + 4) = var_8h;\n            fcn.000355f0(var_4h + 0x48);\n            fcn.000355f0(var_4h + 0x1c);\n            fcn.000355f0(var_4h + 0x18);\n            fcn.00034d00(var_4h + 0x54);\n            *(var_4h + 8) = 1;\n            *(var_4h + 0x10) = 1;\n            *(var_4h + 0x34) = *(arg_8h + 0x34);\n            *(var_4h + 0x38) = *(arg_8h + 0x38);\n            *(var_4h + 0x3c) = *(arg_8h + 0x3c);\n            *(var_4h + 0x40) = *(arg_8h + 0x40);\n            *(var_4h + 0x44) = *(arg_8h + 0x44);\n            *(var_4h + 0x20) = *(arg_8h + 0x3c);\n            uVar2 = fcn.00026f20();\n            *(var_4h + 0x70) = uVar2;\n            *(var_4h + 0x6c) = *(var_4h + 0x70);\n            *arg_ch = var_4h;\n            iVar1 = 0;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 525
    },
    "00078080": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00078080(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    \n    if (*(arg_8h + 0xc) == 0) {\n        if (*(arg_8h + 8) == 0) {\n            uVar1 = 0x21590003;\n        }\n        else {\n            uVar1 = fcn.000788c0(arg_8h, 2, 0, arg_ch, arg_10h, arg_14h);\n        }\n    }\n    else {\n        uVar1 = 0x21590006;\n    }\n    return uVar1;\n}\n",
        "token_count": 156
    },
    "00078100": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00078100(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    char in_stack_ffffffef;\n    int32_t var_ch;\n    uint var_4h;\n    \n    var_1ch = 0x21590002;\n    fcn.00035650(arg_8h + 0x18);\n    if (*(arg_8h + 0xc) == 0) {\n        if (*(arg_8h + 8) == 0) {\n            fcn.000356c0(arg_8h + 0x18);\n            var_1ch = 0x21590003;\n        }\n        else {\n            var_20h._0_1_ = *(arg_8h + 0x14);\n            var_20h._1_1_ = arg_14h;\n            uVar1 = fcn.0007f77e();\n            uVar1 = uVar1 & 0x8000007f;\n            if (uVar1 < 0) {\n                uVar1 = (uVar1 - 1 | 0xffffff80) + 1;\n            }\n            var_20h._2_1_ = uVar1;\n            for (var_ch = 0; var_ch < *(arg_8h + 0x34); var_ch = var_ch + 1) {\n                var_18h = fcn.00026f20();\n                var_1ch = fcn.00078320(arg_8h, arg_ch, arg_10h, &var_20h);\n                if (var_1ch != 0) break;\n                var_1ch = fcn.000788c0(arg_8h, 1, &stack0xffffffef, 0, 0, *(arg_8h + 0x20) << 1);\n                if (var_1ch == 0) {\n                    if (in_stack_ffffffef == uVar1) {\n                        iVar2 = fcn.00026f20();\n                        var_14h = iVar2 - var_18h;\n                        if (var_14h < 100) {\n                            var_14h = 100;\n                        }\n                        *(arg_8h + 0x20) = *(arg_8h + 0x20) + var_14h >> 1;\n                        if (60000 < *(arg_8h + 0x20)) {\n                            *(arg_8h + 0x20) = 60000;\n                        }\n                        *(arg_8h + 0x14) = *(arg_8h + 0x14) + '\\x01';\n                        var_1ch = 0;\n                        break;\n                    }\n                    var_ch = var_ch + -1;\n                }\n                else {\n                    if (var_1ch != 0x21590002) break;\n                    if (var_ch < *(arg_8h + 0x34) + -1) {\n                        if (*(arg_8h + 0x20) < *(arg_8h + 0x3c)) {\n                            *(arg_8h + 0x20) = *(arg_8h + 0x3c);\n                        }\n                        else {\n                            *(arg_8h + 0x20) = *(arg_8h + 0x20) + *(arg_8h + 0x3c);\n                        }\n                    }\n                    else {\n                        var_1ch = 0x21590002;\n                    }\n                }\n            }\n            if (var_1ch == 0x21590002) {\n                *(arg_8h + 0x10) = 0;\n                *(arg_8h + 8) = 0;\n                var_20h._1_1_ = 0x20;\n                fcn.00078320(arg_8h, 0, 0, &var_20h);\n            }\n            fcn.000356c0(arg_8h + 0x18);\n        }\n    }\n    else {\n        fcn.000356c0(arg_8h + 0x18);\n        var_1ch = 0x21590006;\n    }\n    return var_1ch;\n}\n",
        "token_count": 1056
    },
    "00078320": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00078320(int32_t arg_8h, uint *arg_ch, uint32_t arg_10h, uint arg_14h)\n\n{\n    uchar uVar1;\n    int32_t iVar2;\n    uint var_130h;\n    uint *var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint *var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (arg_8h == 0) {\n        var_ch = 0x21590065;\n    }\n    else {\n        var_20h = 0;\n        var_1ch = 0;\n        var_18h = NULL;\n        var_14h = 0;\n        var_10h = 0;\n        var_28h = arg_14h;\n        var_24h = 3;\n        if (((arg_10h & 8) == 0) && (arg_ch == NULL)) {\n            var_2ch = &var_1ch;\n            iVar2 = fcn.0007f77e();\n            var_8h = iVar2 % *(arg_8h + 0x40) + 1;\n            for (var_4h = 0; var_4h < var_8h; var_4h = var_4h + 1) {\n                uVar1 = fcn.0007f77e();\n                *(&var_130h + var_4h) = uVar1;\n            }\n            var_18h = &var_130h;\n            var_14h = var_8h;\n        }\n        else {\n            var_2ch = arg_ch;\n        }\n        fcn.00077b70(arg_14h);\n        var_ch = fcn.0007c290(*(arg_8h + 4), &var_2ch, arg_10h);\n        fcn.00077b70(arg_14h);\n    }\n    return var_ch;\n}\n",
        "token_count": 479
    },
    "00078430": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00078430(int32_t arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    if (arg_ch == 1) {\n        if (arg_14h == 0x10) {\n            fcn.0007f904(arg_8h + 0x24, arg_10h, 0x10);\n            var_8h = 0;\n        }\n        else {\n            var_8h = 0x21590064;\n        }\n    }\n    iVar1 = fcn.0007c110(*(arg_8h + 4), arg_ch, arg_10h, arg_14h, arg_18h);\n    if (var_8h != 0) {\n        iVar1 = var_8h;\n    }\n    return iVar1;\n}\n",
        "token_count": 230
    },
    "000784b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_94h\n// WARNING: Variable defined which should be unmapped: var_90h\n\nint32_t __cdecl fcn.000784b0(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t var_94h;\n    uint var_90h;\n    char *var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_8h = arg_ch;\ncode_r0x000784bf:\n    do {\n        iVar1 = fcn.0007d710(&var_8h, &var_90h, 0x80, &var_ch);\n        if (iVar1 == 0) {\n            var_94h = 0;\ncode_r0x00078665:\n            if (var_94h == 0) {\n                var_94h = fcn.0007bdc0(*(arg_8h + 4), arg_ch, arg_10h);\n            }\n            return var_94h;\n        }\n        iVar1 = fcn.0007f7a2(&var_90h, 0x85011a30);\n        if (iVar1 == 0) {\n            var_4h = fcn.0007f7fc(var_ch);\n            if (var_4h < 1) {\n                var_94h = 0x21590066;\n                goto code_r0x00078665;\n            }\n            *(arg_8h + 0x34) = var_4h;\n            goto code_r0x000784bf;\n        }\n        iVar1 = fcn.0007f7a2(&var_90h, 0x85011a44);\n        if (iVar1 == 0) {\n            var_4h = fcn.0007f7fc(var_ch);\n            var_4h = var_4h * 1000;\n            if (var_4h < 1) {\n                var_94h = 0x21590066;\n                goto code_r0x00078665;\n            }\n            *(arg_8h + 0x38) = var_4h;\n        }\n        else {\n            iVar1 = fcn.0007f7a2(&var_90h, 0x85011a58);\n            if (iVar1 == 0) {\n                var_4h = fcn.0007f7fc(var_ch);\n                var_4h = var_4h * 1000;\n                if (var_4h < 1) {\n                    var_94h = 0x21590066;\n                    goto code_r0x00078665;\n                }\n                *(arg_8h + 0x3c) = var_4h;\n            }\n            else {\n                iVar1 = fcn.0007f7a2(&var_90h, 0x85011a68);\n                if (iVar1 == 0) {\n                    var_4h = fcn.0007f7fc(var_ch);\n                    if (var_4h < 1) {\n                        var_94h = 0x21590066;\n                        goto code_r0x00078665;\n                    }\n                    if (0x100 < var_4h) {\n                        var_4h = 0x100;\n                    }\n                    *(arg_8h + 0x40) = var_4h;\n                }\n                else {\n                    iVar1 = fcn.0007f7a2(&var_90h, 0x85011a7c);\n                    if ((iVar1 == 0) && ((*var_ch == 'Y' || (*var_ch == '1')))) {\n                        *(arg_8h + 0x44) = 0;\n                    }\n                }\n            }\n        }\n    } while( true );\n}\n",
        "token_count": 849
    },
    "00078840": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00078840(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int32_t var_4h;\n    \n    fcn.00035650(arg_8h + 0x18);\n    fcn.00035650(arg_8h + 0x1c);\n    var_4h = fcn.00078820(arg_8h, arg_ch, 0);\n    if (var_4h == 0) {\n        var_4h = fcn.00078080(arg_8h, arg_10h, arg_14h, arg_18h);\n    }\n    fcn.000356c0(arg_8h + 0x1c);\n    fcn.000356c0(arg_8h + 0x18);\n    return var_4h;\n}\n",
        "token_count": 208
    },
    "000788c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.000788c0(int32_t arg_8h, int32_t arg_ch, uchar *arg_10h, int32_t *arg_14h, int32_t *arg_18h, uint32_t arg_1ch)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    fcn.00035650(arg_8h + 0x48);\n    do {\n        if (*(arg_8h + 0xc) != 0) {\n            var_14h = 0x21590006;\ncode_r0x00078b0e:\n            fcn.000356c0(arg_8h + 0x48);\n            return var_14h;\n        }\n        if (*(arg_8h + 8) == 0) {\n            var_14h = 0x21590003;\n            goto code_r0x00078b0e;\n        }\n        if ((arg_ch == 1) && (*(arg_8h + 0x5c) != 0)) {\n            *arg_10h = *(arg_8h + 0x58);\n            *(arg_8h + 0x5c) = 0;\n            var_14h = 0;\n            goto code_r0x00078b0e;\n        }\n        if ((arg_ch == 2) && (*(arg_8h + 0x60) != 0)) {\n            *arg_14h = *(*(arg_8h + 0x60) + 4) + 3;\n            *arg_18h = *(*(arg_8h + 0x60) + 8) + -3;\n            *(arg_8h + 0x68) = *(arg_8h + 0x68) - *(*(arg_8h + 0x60) + 8);\n            iVar1 = **(arg_8h + 0x60);\n            fcn.00036460(*(arg_8h + 0x60));\n            *(arg_8h + 0x60) = iVar1;\n            if (iVar1 == 0) {\n                *(arg_8h + 100) = 0;\n            }\n            if (*arg_18h == 0) {\n                fcn.00078410(arg_8h, *arg_14h);\n                *arg_14h = 0;\n            }\n            var_14h = 0;\n            goto code_r0x00078b0e;\n        }\n        bVar2 = *(arg_8h + 0x4c) != 0;\n        if (bVar2) {\n            *(arg_8h + 0x50) = *(arg_8h + 0x50) + 1;\n        }\n        else {\n            *(arg_8h + 0x4c) = 1;\n        }\n        fcn.000356c0(arg_8h + 0x48);\n        if (!bVar2) {\n            var_14h = fcn.00078b30(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch);\n            fcn.00035650(arg_8h + 0x48);\n            *(arg_8h + 0x4c) = 0;\n            fcn.00034dc0(arg_8h + 0x54);\n            goto code_r0x00078b0e;\n        }\n        if (arg_1ch == 0) {\n            var_14h = 0x21590002;\n            goto code_r0x00078b0e;\n        }\n        if (arg_1ch != 0xffffffff) {\n            var_8h = fcn.00026f20();\n        }\n        iVar1 = fcn.00034df0(arg_8h + 0x54, arg_1ch);\n        if (iVar1 == 0) {\n            var_14h = 0x21590002;\n            fcn.00035650(arg_8h + 0x48);\n            *(arg_8h + 0x50) = *(arg_8h + 0x50) + -1;\n            goto code_r0x00078b0e;\n        }\n        if (arg_1ch != 0xffffffff) {\n            iVar1 = fcn.00026f20();\n            if (arg_1ch < iVar1 - var_8h) {\n                arg_1ch = 0;\n            }\n            else {\n                arg_1ch = arg_1ch - (iVar1 - var_8h);\n            }\n        }\n        fcn.00035650(arg_8h + 0x48);\n        *(arg_8h + 0x50) = *(arg_8h + 0x50) + -1;\n    } while( true );\n}\n",
        "token_count": 1116
    },
    "00078b30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl\nfcn.00078b30(int32_t arg_8h, int32_t arg_ch, uchar *arg_10h, unkuint3 **arg_14h, int32_t *arg_18h, uint32_t arg_1ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    bool bVar5;\n    uint32_t var_38h;\n    uint32_t var_34h;\n    uint32_t var_30h;\n    int32_t var_2ch;\n    uint *var_28h;\n    uint var_24h;\n    unkuint3 *var_20h;\n    int32_t var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    var_20h = NULL;\n    var_1ch = 0;\n    while( true ) {\n        if (*(arg_8h + 0xc) != 0) {\n            var_2ch = 0x21590006;\n            goto code_r0x000792ef;\n        }\n        if (*(arg_8h + 8) == 0) break;\n        if ((*(arg_8h + 0x44) == 0) || (*(arg_8h + 0x10) != 3)) {\n            var_30h = 0;\n        }\n        else {\n            iVar2 = fcn.00026f20();\n            var_4h = iVar2 - *(arg_8h + 0x6c);\n            uVar1 = *(arg_8h + 0x38);\n            uVar3 = fcn.0007f77e();\n            var_8h = (uVar1 >> 1) + 1 + uVar3 % *(arg_8h + 0x38);\n            var_30h = var_8h < var_4h;\n        }\n        if (var_30h != 0) {\n            var_24h._0_2_ = var_24h & 0xff00 | *(arg_8h + 0x14);\n            var_24h._2_1_ = fcn.0007f77e();\n            var_24h._0_2_ = CONCAT11(0x10, var_24h);\n            var_2ch = fcn.00078320(arg_8h, 0, 0, &var_24h);\n            if (var_2ch != 0) goto code_r0x000792ef;\n            uVar4 = fcn.00026f20();\n            *(arg_8h + 0x6c) = uVar4;\n        }\n        iVar2 = fcn.00026f20();\n        var_ch = iVar2 - *(arg_8h + 0x70);\n        if (var_ch < *(arg_8h + 0x38) * *(arg_8h + 0x34)) {\n            var_34h = *(arg_8h + 0x38) * *(arg_8h + 0x34) - var_ch;\n        }\n        else {\n            var_34h = 0;\n        }\n        bVar5 = var_34h <= arg_1ch;\n        if (!bVar5) {\n            var_34h = arg_1ch;\n        }\n        var_14h = bVar5;\n        if (arg_1ch != 0xffffffff) {\n            var_1ch = fcn.00026f20();\n        }\n        var_2ch = fcn.0007bf30(*(arg_8h + 4), &var_20h, &var_18h, var_34h, 0);\n        if (arg_1ch != 0xffffffff) {\n            iVar2 = fcn.00026f20();\n            var_10h = iVar2 - var_1ch;\n            if (var_10h < arg_1ch) {\n                arg_1ch = arg_1ch - var_10h;\n            }\n            else {\n                arg_1ch = 0;\n            }\n        }\n        if (var_2ch == 0) {\n            if (var_18h < 3) {\n                if ((*(arg_8h + 0x10) == 2) || (*(arg_8h + 0x10) == 1)) {\n                    var_2ch = 0x2159000a;\n                    goto code_r0x000792ef;\n                }\n                fcn.0007c0d0(*(arg_8h + 4), var_20h);\n                var_20h = NULL;\n            }\n            else {\n                var_38h = var_38h & 0xff000000 | *var_20h;\n                fcn.00077b70(&var_38h);\n                if ((var_38h & 0x4000) == 0) {\n                    uVar4 = fcn.00026f20();\n                    *(arg_8h + 0x70) = uVar4;\n                    var_24h._0_1_ = var_38h;\n                    if ((((*(arg_8h + 0x10) == 2) || (*(arg_8h + 0x10) == 1)) && ((var_38h & 0x100) == 0)) &&\n                       ((var_38h & 0x2000) == 0)) {\n                        if (*(arg_8h + 0x10) != 2) {\n                            var_24h._2_1_ = var_38h._2_1_;\n                            var_24h._0_2_ = CONCAT11(0x20, var_24h);\n                            fcn.00078320(arg_8h, 0, 0, &var_24h);\n                        }\n                        fcn.0007c0d0(*(arg_8h + 4), var_20h);\n                        var_20h = NULL;\n                    }\n                    else if (((*(arg_8h + 0x10) == 0) && ((var_38h & 0x200) == 0)) && ((var_38h & 0x2000) == 0)) {\n                        var_24h._2_1_ = var_38h._2_1_;\n                        var_24h._0_2_ = CONCAT11(2, var_24h);\n                        fcn.00078320(arg_8h, 0, 0, &var_24h);\n                        fcn.0007c0d0(*(arg_8h + 4), var_20h);\n                        var_20h = NULL;\n                    }\n                    else {\n                        if ((((*(arg_8h + 0x10) == 1) && ((var_38h & 0x100) != 0)) && ((var_38h & 0x400) == 0)) ||\n                           ((*(arg_8h + 0x10) == 3 &&\n                            ((((var_38h & 0x1000) != 0 || ((var_38h & 0x100) != 0)) && ((var_38h & 0x400) == 0)))))) {\n                            var_24h._2_1_ = var_38h._2_1_;\n                            var_24h._0_2_ = var_38h | 0x400;\n                            var_2ch = fcn.00078320(arg_8h, 0, 0, &var_24h);\n                            if (var_2ch != 0) goto code_r0x000792ef;\n                            if (((var_38h & 0x100) != 0) && (*(arg_8h + 0x10) == 1)) {\n                                *(arg_8h + 0x15) = var_38h + '\\x01';\n                                *(arg_8h + 0x10) = 3;\n                            }\n                        }\n                        if (((*(arg_8h + 0x10) == 3) || (*(arg_8h + 0x10) == 2)) &&\n                           (((var_38h & 0x400) != 0 &&\n                            (((var_38h & 0x1000) == 0 && ((var_38h & 0xff) == *(arg_8h + 0x14))))))) {\n                            if (((var_38h & 0x100) != 0) && (*(arg_8h + 0x10) == 2)) {\n                                *(arg_8h + 0x10) = 3;\n                            }\n                            if (arg_ch == 1) {\n                                *arg_10h = var_38h._2_1_;\n                                var_2ch = 0;\n                                goto code_r0x000792ef;\n                            }\n                            fcn.00035650(arg_8h + 0x48);\n                            *(arg_8h + 0x58) = var_38h._2_1_;\n                            *(arg_8h + 0x5c) = 1;\n                            fcn.00034dc0(arg_8h + 0x54);\n                            fcn.000356c0(arg_8h + 0x48);\n                        }\n                        if (((var_38h & 0x2000) != 0) &&\n                           (((var_38h & 0xff) == *(arg_8h + 0x14) || ((var_38h & 0xff) == *(arg_8h + 0x15))))) {\n                            *(arg_8h + 0x10) = 0;\n                            var_2ch = 0x21590003;\n                            goto code_r0x000792ef;\n                        }\n                        if ((*(arg_8h + 0x10) == 3) && ((var_38h & 0x800) != 0)) {\n                            var_24h._0_1_ = var_38h;\n                            if ((var_38h & 0xff) == *(arg_8h + 0x15)) {\n                                if (arg_ch == 2) {\n                                    var_24h._2_1_ = var_38h._2_1_;\n                                    var_24h._0_2_ = CONCAT11(4, var_24h);\n                                    var_2ch = fcn.00078320(arg_8h, 0, 0, &var_24h);\n                                    if (var_2ch == 0) {\n                                        *(arg_8h + 0x15) = *(arg_8h + 0x15) + '\\x01';\n                                        *arg_14h = var_20h + 1;\n                                        *arg_18h = var_18h - 3;\n                                        var_20h = NULL;\n                                        var_2ch = 0;\n                                    }\n                                    goto code_r0x000792ef;\n                                }\n                                var_38h = arg_8h + 0x48;\n                                fcn.00035650(var_38h);\n                                if (*(arg_8h + 0xc) != 0) {\n                                    var_2ch = 0x21590006;\n                                    fcn.000356c0(arg_8h + 0x48);\n                                    goto code_r0x000792ef;\n                                }\n                                if (*(arg_8h + 8) == 0) {\n                                    var_2ch = 0x21590003;\n                                    fcn.000356c0(arg_8h + 0x48);\n                                    goto code_r0x000792ef;\n                                }\n                                if ((*(arg_8h + 0x68) + var_18h < 0x100000) &&\n                                   (var_28h = fcn.00036330(0x10),  var_28h != NULL)) {\n                                    var_24h._2_1_ = var_38h._2_1_;\n                                    var_24h._0_1_ = var_38h;\n                                    var_24h._0_2_ = CONCAT11(4, var_24h);\n                                    var_2ch = fcn.00078320(arg_8h, 0, 0, &var_24h);\n                                    if (var_2ch != 0) {\n                                        fcn.000356c0(arg_8h + 0x48);\n                                        goto code_r0x000792ef;\n                                    }\n                                    *var_28h = 0;\n                                    var_28h[1] = 0;\n                                    var_28h[2] = 0;\n                                    var_28h[3] = 0;\n                                    var_28h[1] = var_20h;\n                                    var_28h[2] = var_18h;\n                                    var_20h = NULL;\n                                    if (*(arg_8h + 100) == 0) {\n                                        *(arg_8h + 0x60) = var_28h;\n                                    }\n                                    else {\n                                        **(arg_8h + 100) = var_28h;\n                                    }\n                                    *(arg_8h + 100) = var_28h;\n                                    *(arg_8h + 0x68) = *(arg_8h + 0x68) + var_18h;\n                                    var_38h = arg_8h + 0x54;\n                                    fcn.00034dc0(var_38h);\n                                    *(arg_8h + 0x15) = *(arg_8h + 0x15) + '\\x01';\n                                }\n                                fcn.000356c0(arg_8h + 0x48);\n                            }\n                            else {\n                                if (*(arg_8h + 0x15) - (var_38h & 0xff) < 0x7f) {\n                                    var_24h._2_1_ = var_38h._2_1_;\n                                    var_24h._0_2_ = CONCAT11(4, var_24h);\n                                    var_2ch = fcn.00078320(arg_8h, 0, 0, &var_24h);\n                                }\n                                else {\n                                    var_24h._2_1_ = var_38h._2_1_;\n                                    var_24h._0_2_ = CONCAT11(0x20, var_24h);\n                                    var_2ch = fcn.00078320(arg_8h, 0, 0, &var_24h);\n                                }\n                                if (var_2ch != 0) goto code_r0x000792ef;\n                            }\n                        }\n                        if (((var_38h & 0x200) != 0) && ((var_38h & 0xff) == *(arg_8h + 0x15))) {\n                            var_24h._2_1_ = var_38h._2_1_;\n                            var_24h._0_1_ = var_38h;\n                            var_24h._0_2_ = CONCAT11(4, var_24h);\n                            var_2ch = fcn.00078320(arg_8h, 0, 0, &var_24h);\n                            if (var_2ch != 0) goto code_r0x000792ef;\n                            *(arg_8h + 0x10) = 0;\n                            *(arg_8h + 8) = 0;\n                            fcn.00034dc0(arg_8h + 0x54);\n                        }\n                        fcn.0007c0d0(*(arg_8h + 4), var_20h);\n                        var_20h = NULL;\n                    }\n                }\n                else {\n                    if ((*(arg_8h + 0x10) == 2) || (*(arg_8h + 0x10) == 1)) {\n                        var_2ch = 0x2159000a;\n                        goto code_r0x000792ef;\n                    }\n                    fcn.0007c0d0(*(arg_8h + 4), var_20h);\n                    var_20h = NULL;\n                }\n            }\n        }\n        else {\n            if (var_2ch != 0x21590002) goto code_r0x000792ef;\n            iVar2 = fcn.00026f20();\n            var_ch = iVar2 - *(arg_8h + 0x70);\n            if (*(arg_8h + 0x38) * *(arg_8h + 0x34) <= var_ch) {\n                *(arg_8h + 8) = 0;\n                goto code_r0x000792ef;\n            }\n            if ((var_14h == 0) || (arg_1ch == 0)) goto code_r0x000792ef;\n        }\n    }\n    var_2ch = 0x21590003;\ncode_r0x000792ef:\n    fcn.0007c0d0(*(arg_8h + 4), var_20h);\n    return var_2ch;\n}\n",
        "token_count": 3862
    },
    "00079350": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00079350(uint *arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    uint *var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    (**0x8500d00c)();\n    var_ch = *arg_8h;\n    while (var_ch != NULL) {\n        puVar1 = *var_ch;\n        if (arg_ch != '\\0') {\n            fcn.00036460(var_ch[1]);\n        }\n        fcn.00036460(var_ch);\n        var_ch = puVar1;\n    }\n    (**0x8500d010)();\n    fcn.00034d90(arg_8h + 3);\n    *arg_8h = 0;\n    arg_8h[1] = 0;\n    arg_8h[2] = 0;\n    arg_8h[3] = 0;\n    arg_8h[4] = 0;\n    return;\n}\n",
        "token_count": 235
    },
    "000793e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.000793e0(int32_t arg_8h, int32_t arg_ch, int32_t *arg_10h, uint *arg_14h)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    uint var_8h;\n    uint var_1h;\n    \n    if (((arg_8h == 0) || (arg_10h == NULL)) || (arg_14h == NULL)) {\n        uVar1 = 0x21590064;\n    }\n    else {\n        puVar2 = fcn.00036360(0x1c);\n        if (puVar2 == NULL) {\n            uVar1 = 0x21590004;\n        }\n        else {\n            puVar2[1] = arg_8h;\n            puVar2[2] = arg_ch;\n            *puVar2 = 0;\n            puVar2[3] = *arg_14h;\n            puVar2[4] = arg_14h[1];\n            puVar2[5] = arg_14h[2];\n            puVar2[6] = arg_14h[3];\n            (**0x8500d00c)();\n            if (*arg_10h == 0) {\n                arg_10h[1] = puVar2;\n                *arg_10h = puVar2;\n            }\n            else {\n                *arg_10h[1] = puVar2;\n                arg_10h[1] = puVar2;\n            }\n            arg_10h[2] = arg_10h[2] + arg_ch;\n            (**0x8500d010)();\n            fcn.00034dc0(arg_10h + 3);\n            uVar1 = 0;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 413
    },
    "000794d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.000794d0(uint *arg_8h, uint *arg_ch, int32_t *arg_10h, uint *arg_14h)\n\n{\n    int32_t *arg_8h_00;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    if (((arg_10h == NULL) || (arg_ch == NULL)) || (arg_14h == NULL)) {\n        var_8h = 0x21590064;\n    }\n    else {\n        (**0x8500d00c)();\n        if (*arg_10h == 0) {\n            var_8h = 0xffffffff;\n        }\n        else {\n            arg_8h_00 = *arg_10h;\n            *arg_8h = arg_8h_00[1];\n            *arg_ch = arg_8h_00[2];\n            *arg_14h = arg_8h_00[3];\n            arg_14h[1] = arg_8h_00[4];\n            arg_14h[2] = arg_8h_00[5];\n            arg_14h[3] = arg_8h_00[6];\n            *arg_10h = *arg_8h_00;\n            if (*arg_10h == 0) {\n                arg_10h[1] = 0;\n            }\n            arg_10h[2] = arg_10h[2] - arg_8h_00[2];\n            fcn.00036460(arg_8h_00);\n            var_8h = 0;\n        }\n        (**0x8500d010)();\n    }\n    return var_8h;\n}\n",
        "token_count": 395
    },
    "000795e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.000795e0(int32_t **arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint32_t arg_20h)\n\n{\n    char cVar1;\n    char *arg_8h_00;\n    int32_t *arg_8h_01;\n    int32_t iVar2;\n    char *pcVar3;\n    uint32_t uVar4;\n    uint var_2ch;\n    uint var_24h;\n    char *var_20h;\n    uint var_1ch;\n    uchar *var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    *arg_8h = NULL;\n    var_8h = 0;\n    while( true ) {\n        if (*(arg_ch + var_8h * 4) == 0) {\n            return 0x21590005;\n        }\n        arg_8h_00 = fcn.00036490(*(arg_ch + var_8h * 4));\n        if (arg_8h_00 == NULL) {\n            return 0x21590004;\n        }\n        var_18h = fcn.0007f7de(arg_8h_00, 0x2e);\n        if (var_18h != NULL) {\n            *var_18h = 0;\n            var_18h = var_18h + 1;\n        }\n        pcVar3 = arg_8h_00;\n        uVar4 = arg_20h;\n        var_14h = fcn.0007b410(arg_8h_00);\n        if (var_14h == 0) {\n            fcn.00036460(arg_8h_00);\n            var_10h = 0x21590005;\n            if ((*0x8509ec68 != 0) &&\n               (var_10h = (**(*0x8509ec68 + 0xc))\n                                    (arg_8h, *(arg_ch + var_8h * 4), arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, pcVar3\n                                     , uVar4),  var_10h == 0)) {\n                var_14h = *0x8509ec68;\n            }\n            if ((var_14h == 0) && (var_10h != 0x21590005)) {\n                return var_10h;\n            }\n        }\n        else {\n            if (var_18h == NULL) {\n                var_20h = arg_8h_00;\n                do {\n                    cVar1 = *var_20h;\n                    var_20h = var_20h + 1;\n                } while (cVar1 != '\\0');\n                var_ch = var_20h - (arg_8h_00 + 1);\n            }\n            else {\n                var_ch = var_18h - arg_8h_00;\n            }\n            fcn.00036460(arg_8h_00);\n            var_10h = (**(var_14h + 0xc))(arg_8h, *(arg_ch + var_8h * 4) + var_ch, arg_10h, arg_14h, arg_18h, arg_1ch, \n                                          arg_20h & 0xfffeffff);\n        }\n        if (var_14h != 0) break;\n        var_8h = var_8h + 1;\n    }\n    if (var_10h != 0) {\n        return var_10h;\n    }\n    if (*arg_8h != NULL) {\n        arg_8h_01 = fcn.00036330(0x10);\n        if (arg_8h_01 == NULL) {\n            (**(var_14h + 0x10))(*arg_8h, 0);\n            (**(var_14h + 0x14))(*arg_8h, 0);\n            *arg_8h = NULL;\n            return 0x21590004;\n        }\n        *arg_8h_01 = var_14h;\n        arg_8h_01[1] = 0;\n        arg_8h_01[2] = 0;\n        arg_8h_01[3] = 1;\n        **arg_8h = arg_8h_01;\n        iVar2 = fcn.00072a50(*arg_8h, 1);\n        if (iVar2 != 0) {\n            fcn.0001b570(0x8509254c);\n            return 0;\n        }\n        fcn.00036460(arg_8h_01);\n        (**(var_14h + 0x10))(*arg_8h, 0);\n        (**(var_14h + 0x14))(*arg_8h, 0);\n        *arg_8h = NULL;\n        return 0x21590004;\n    }\n    (**(var_14h + 0x10))(*arg_8h, 0);\n    (**(var_14h + 0x14))(*arg_8h, 0);\n    return -1;\n}\n",
        "token_count": 1194
    },
    "000798a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000798a0(int32_t **arg_8h, int32_t arg_ch)\n\n{\n    int32_t **arg_8h_00;\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h_00 = *arg_8h;\n    fcn.00035650(0x85092550);\n    iVar2 = fcn.00072ba0(arg_8h_00, 1);\n    if (iVar2 == 0) {\n        fcn.000356c0(0x85092550);\n        *arg_8h = NULL;\n    }\n    else {\n        piVar1 = *arg_8h_00;\n        if (piVar1[1] == 0) {\n            piVar1[2] = arg_ch;\n            piVar1[1] = 1;\n            fcn.000356c0(0x85092550);\n            (**(**arg_8h_00 + 0x10))(arg_8h_00, arg_ch);\n            fcn.0007a240(arg_8h_00);\n            *arg_8h = NULL;\n        }\n        else {\n            fcn.000356c0(0x85092550);\n            *arg_8h = NULL;\n        }\n    }\n    return;\n}\n",
        "token_count": 308
    },
    "00079950": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t __cdecl fcn.00079950(int32_t **arg_8h, uint *arg_ch, uint arg_10h)\n\n{\n    int32_t *arg_8h_00;\n    int32_t iVar1;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.0007a1e0(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x1c) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x1c) != 0)) {\n            var_4h = (**(**arg_8h + 0x1c))(arg_8h, arg_ch, arg_10h);\n            if (var_4h == 0) {\n                arg_8h_00 = fcn.00036330(0x10);\n                if (arg_8h_00 == NULL) {\n                    fcn.0007a240(arg_8h);\n                    (**(**arg_8h + 0x14))(*arg_ch, 0);\n                    *arg_ch = 0;\n                    return 0x21590004;\n                }\n                *arg_8h_00 = **arg_8h;\n                arg_8h_00[1] = 0;\n                arg_8h_00[2] = 0;\n                arg_8h_00[3] = 1;\n                **arg_ch = arg_8h_00;\n                iVar1 = fcn.00072a50(*arg_ch, 1);\n                if (iVar1 == 0) {\n                    fcn.00036460(arg_8h_00);\n                    (**(**arg_8h + 0x14))(*arg_ch, 0);\n                    *arg_ch = 0;\n                    var_4h = 0x21590004;\n                }\n                else {\n                    fcn.0001b570(0x8509254c);\n                }\n            }\n            else if ((*arg_8h)[1] != 0) {\n                var_4h = 0x21590006;\n            }\n            fcn.0007a240(arg_8h);\n        }\n        else {\n            fcn.0007a240(arg_8h);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 559
    },
    "00079ad0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.00079ad0(int32_t **arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    if (arg_8h == NULL) {\n        var_4h = fcn.0007c5e0(arg_ch, arg_10h, arg_14h, arg_18h);\n    }\n    else {\n        var_4h = fcn.0007a1e0(arg_8h);\n        if (var_4h == 0) {\n            if (((**arg_8h + 0x30) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x30) != 0)) {\n                var_4h = (**(**arg_8h + 0x30))(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n                if (var_4h == 0) {\n                    var_4h = fcn.0007c5e0(arg_ch, arg_10h, arg_14h, arg_18h);\n                }\n                fcn.0007a240(arg_8h);\n            }\n            else {\n                fcn.0007a240(arg_8h);\n                var_4h = 0x21590001;\n            }\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 350
    },
    "00079bb0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.00079bb0(int32_t **arg_8h, uint arg_ch)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.0007a1e0(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x18) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x18) != 0)) {\n            var_4h = (**(**arg_8h + 0x18))(arg_8h, arg_ch);\n            if ((var_4h != 0) && ((*arg_8h)[1] != 0)) {\n                var_4h = 0x21590006;\n            }\n            fcn.0007a240(arg_8h);\n        }\n        else {\n            fcn.0007a240(arg_8h);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 259
    },
    "00079c60": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.00079c60(int32_t **arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.0007a1e0(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x20) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x20) != 0)) {\n            var_4h = (**(**arg_8h + 0x20))(arg_8h, arg_ch, arg_10h);\n            if ((var_4h != 0) && ((*arg_8h)[1] != 0)) {\n                var_4h = 0x21590006;\n            }\n            fcn.0007a240(arg_8h);\n        }\n        else {\n            fcn.0007a240(arg_8h);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 270
    },
    "00079d10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.00079d10(int32_t **arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.0007a1e0(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x24) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x24) != 0)) {\n            var_4h = (**(**arg_8h + 0x24))(arg_8h, arg_ch, arg_10h);\n            if ((var_4h != 0) && ((*arg_8h)[1] != 0)) {\n                var_4h = 0x21590006;\n            }\n            fcn.0007a240(arg_8h);\n        }\n        else {\n            fcn.0007a240(arg_8h);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 270
    },
    "00079dc0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.00079dc0(int32_t **arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.0007a1e0(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x28) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x28) != 0)) {\n            var_4h = (**(**arg_8h + 0x28))(arg_8h, arg_ch, arg_10h, arg_14h);\n            if ((var_4h != 0) && ((*arg_8h)[1] != 0)) {\n                var_4h = 0x21590006;\n            }\n            fcn.0007a240(arg_8h);\n        }\n        else {\n            fcn.0007a240(arg_8h);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 281
    },
    "00079e80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.00079e80(int32_t **arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.0007a1e0(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x2c) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x2c) != 0)) {\n            var_4h = (**(**arg_8h + 0x2c))(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n            if ((var_4h != 0) && ((*arg_8h)[1] != 0)) {\n                var_4h = 0x21590006;\n            }\n            fcn.0007a240(arg_8h);\n        }\n        else {\n            fcn.0007a240(arg_8h);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 295
    },
    "00079f40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.00079f40(int32_t **arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.0007a1e0(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x34) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x34) != 0)) {\n            var_4h = (**(**arg_8h + 0x34))(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n            if ((var_4h != 0) && ((*arg_8h)[1] != 0)) {\n                var_4h = 0x21590006;\n            }\n            fcn.0007a240(arg_8h);\n        }\n        else {\n            fcn.0007a240(arg_8h);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 292
    },
    "0007a000": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.0007a000(int32_t **arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.0007a1e0(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x38) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x38) != 0)) {\n            var_4h = (**(**arg_8h + 0x38))(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n            if ((var_4h != 0) && ((*arg_8h)[1] != 0)) {\n                var_4h = 0x21590006;\n            }\n            fcn.0007a240(arg_8h);\n        }\n        else {\n            fcn.0007a240(arg_8h);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 292
    },
    "0007a0c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0007a0c0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t arg_ch_00;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = fcn.0007a130(arg_8h, arg_ch, arg_10h);\n    if (var_ch == 0x21590001) {\n        arg_ch_00 = fcn.0007b560(arg_ch, &var_4h);\n        if (arg_ch_00 == 0) {\n            var_ch = 0x21590004;\n        }\n        else {\n            var_ch = fcn.00079dc0(arg_8h, arg_ch_00, var_4h, arg_10h);\n            fcn.00036460(arg_ch_00);\n        }\n    }\n    return var_ch;\n}\n",
        "token_count": 204
    },
    "0007a130": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.0007a130(int32_t **arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.0007a1e0(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x3c) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x3c) != 0)) {\n            var_4h = (**(**arg_8h + 0x3c))(arg_8h, arg_ch, arg_10h);\n            if ((var_4h != 0) && ((*arg_8h)[1] != 0)) {\n                var_4h = 0x21590006;\n            }\n            fcn.0007a240(arg_8h);\n        }\n        else {\n            fcn.0007a240(arg_8h);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 273
    },
    "0007a1e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0007a1e0(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    fcn.00035650(0x85092550);\n    iVar1 = fcn.00072ba0(arg_8h, 1);\n    if (iVar1 == 0) {\n        var_4h = 0x21590065;\n    }\n    else if (*(*arg_8h + 4) == 0) {\n        fcn.0007b0d0(arg_8h);\n        var_4h = 0;\n    }\n    else {\n        var_4h = 0x21590006;\n    }\n    fcn.000356c0(0x85092550);\n    return var_4h;\n}\n",
        "token_count": 181
    },
    "0007a240": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0007a240(int32_t **arg_8h)\n\n{\n    int32_t *arg_8h_00;\n    int32_t iVar1;\n    uint var_4h;\n    \n    arg_8h_00 = *arg_8h;\n    if ((0 < arg_8h_00[3]) && (iVar1 = fcn.0007a2b0(arg_8h_00 + 3),  iVar1 == 0)) {\n        fcn.00072ae0(arg_8h, 1);\n        (**(**arg_8h + 0x14))(arg_8h, arg_8h_00[2]);\n        fcn.00036460(arg_8h_00);\n        fcn.0007a2b0(0x8509254c);\n    }\n    return;\n}\n",
        "token_count": 189
    },
    "0007a360": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.0007a360(int32_t **arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            int32_t arg_24h)\n\n{\n    char cVar1;\n    char *arg_8h_00;\n    int32_t *arg_8h_01;\n    int32_t iVar2;\n    char *pcVar3;\n    uint uVar4;\n    uint var_2ch;\n    uint var_24h;\n    char *var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uchar *var_4h;\n    \n    *arg_8h = NULL;\n    var_ch = 0;\n    while( true ) {\n        if (*(arg_ch + var_ch * 4) == 0) {\n            return 0x21590005;\n        }\n        arg_8h_00 = fcn.00036490(*(arg_ch + var_ch * 4));\n        if (arg_8h_00 == NULL) {\n            return 0x21590004;\n        }\n        var_4h = fcn.0007f7de(arg_8h_00, 0x2e);\n        if (var_4h != NULL) {\n            *var_4h = 0;\n            var_4h = var_4h + 1;\n        }\n        pcVar3 = arg_8h_00;\n        uVar4 = arg_20h;\n        var_1ch = fcn.0007b470(arg_8h_00);\n        if (var_1ch == 0) {\n            fcn.00036460(arg_8h_00);\n            var_18h = 0x21590005;\n            if (*0x8509ec6c != 0) {\n                if (arg_24h == 0) {\n                    var_18h = (**(*0x8509ec6c + 0xc))(arg_8h, *(arg_ch + var_ch * 4), arg_10h, arg_14h, arg_20h);\n                }\n                else {\n                    var_18h = (**(*0x8509ec6c + 0x10))\n                                        (arg_8h, *(arg_ch + var_ch * 4), arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, \n                                         pcVar3, uVar4);\n                }\n                if (var_18h == 0) {\n                    var_1ch = *0x8509ec6c;\n                }\n            }\n        }\n        else {\n            if (var_4h == NULL) {\n                var_20h = arg_8h_00;\n                do {\n                    cVar1 = *var_20h;\n                    var_20h = var_20h + 1;\n                } while (cVar1 != '\\0');\n                var_14h = var_20h - (arg_8h_00 + 1);\n            }\n            else {\n                var_14h = var_4h - arg_8h_00;\n            }\n            fcn.00036460(arg_8h_00);\n            if (arg_24h == 0) {\n                var_18h = (**(var_1ch + 0xc))(arg_8h, *(arg_ch + var_ch * 4) + var_14h, arg_10h, arg_14h, arg_20h);\n            }\n            else {\n                var_18h = (**(var_1ch + 0x10))\n                                    (arg_8h, *(arg_ch + var_ch * 4) + var_14h, arg_10h, arg_14h, arg_18h, arg_1ch, \n                                     arg_20h);\n            }\n        }\n        if (var_1ch != 0) break;\n        var_ch = var_ch + 1;\n    }\n    if (var_18h != 0) {\n        return var_18h;\n    }\n    if (*arg_8h != NULL) {\n        arg_8h_01 = fcn.00036330(0x10);\n        if (arg_8h_01 == NULL) {\n            (**(var_1ch + 0x14))(*arg_8h, 0);\n            (**(var_1ch + 0x18))(*arg_8h, 0);\n            *arg_8h = NULL;\n            return 0x21590004;\n        }\n        *arg_8h_01 = var_1ch;\n        arg_8h_01[1] = 0;\n        arg_8h_01[2] = 0;\n        arg_8h_01[3] = 1;\n        **arg_8h = arg_8h_01;\n        iVar2 = fcn.00072a50(*arg_8h, 4);\n        if (iVar2 != 0) {\n            fcn.0001b570(0x85092554);\n            return 0;\n        }\n        fcn.00036460(arg_8h_01);\n        (**(var_1ch + 0x14))(*arg_8h, 0);\n        (**(var_1ch + 0x18))(*arg_8h, 0);\n        *arg_8h = NULL;\n        return 0x21590004;\n    }\n    (**(var_1ch + 0x14))(*arg_8h, 0);\n    (**(var_1ch + 0x18))(*arg_8h, 0);\n    return -1;\n}\n",
        "token_count": 1301
    },
    "0007a660": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0007a660(int32_t **arg_8h, int32_t arg_ch)\n\n{\n    int32_t **arg_8h_00;\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h_00 = *arg_8h;\n    fcn.00035650(0x85092558);\n    iVar2 = fcn.00072ba0(arg_8h_00, 4);\n    if (iVar2 == 0) {\n        fcn.000356c0(0x85092558);\n        *arg_8h = NULL;\n    }\n    else {\n        piVar1 = *arg_8h_00;\n        if (piVar1[1] == 0) {\n            piVar1[2] = arg_ch;\n            piVar1[1] = 1;\n            fcn.000356c0(0x85092558);\n            (**(**arg_8h_00 + 0x14))(arg_8h_00, arg_ch);\n            fcn.0007b0f0(arg_8h_00);\n            *arg_8h = NULL;\n        }\n        else {\n            fcn.000356c0(0x85092558);\n            *arg_8h = NULL;\n        }\n    }\n    return;\n}\n",
        "token_count": 310
    },
    "0007a710": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.0007a710(int32_t **arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.0007b070(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x1c) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x1c) != 0)) {\n            var_4h = (**(**arg_8h + 0x1c))(arg_8h, arg_ch, arg_10h);\n            if ((var_4h != 0) && ((*arg_8h)[1] != 0)) {\n                var_4h = 0x21590006;\n            }\n            fcn.0007b0f0(arg_8h);\n        }\n        else {\n            fcn.0007b0f0(arg_8h);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 275
    },
    "0007a7c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.0007a7c0(int32_t **arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.0007b070(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x20) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x20) != 0)) {\n            var_4h = (**(**arg_8h + 0x20))(arg_8h, arg_ch, arg_10h);\n            if ((var_4h != 0) && ((*arg_8h)[1] != 0)) {\n                var_4h = 0x21590006;\n            }\n            fcn.0007b0f0(arg_8h);\n        }\n        else {\n            fcn.0007b0f0(arg_8h);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 274
    },
    "0007a870": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0007a870(int32_t **arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t var_4h;\n    \n    iVar1 = fcn.0007b070(arg_8h);\n    if (iVar1 == 0) {\n        if (((**arg_8h + 0x24) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x24) != 0)) {\n            var_4h = (**(**arg_8h + 0x24))(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n            if (var_4h == 0) {\n                var_4h = fcn.0007c5e0(arg_ch, arg_10h, arg_14h, arg_18h);\n            }\n            fcn.0007b0f0(arg_8h);\n        }\n        else {\n            fcn.0007b0f0(arg_8h);\n            var_4h = 0x21590001;\n        }\n    }\n    else {\n        var_4h = fcn.0007c5e0(arg_ch, arg_10h, arg_14h, arg_18h);\n    }\n    return var_4h;\n}\n",
        "token_count": 319
    },
    "0007a930": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.0007a930(int32_t **arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.0007b070(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x28) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x28) != 0)) {\n            var_4h = (**(**arg_8h + 0x28))(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n            if ((var_4h != 0) && ((*arg_8h)[1] != 0)) {\n                var_4h = 0x21590006;\n            }\n            fcn.0007b0f0(arg_8h);\n        }\n        else {\n            fcn.0007b0f0(arg_8h);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 294
    },
    "0007a9f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.0007a9f0(int32_t **arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.0007b070(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x2c) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x2c) != 0)) {\n            var_4h = (**(**arg_8h + 0x2c))(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n            if ((var_4h != 0) && ((*arg_8h)[1] != 0)) {\n                var_4h = 0x21590006;\n            }\n            fcn.0007b0f0(arg_8h);\n        }\n        else {\n            fcn.0007b0f0(arg_8h);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 299
    },
    "0007aab0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0007aab0(int32_t **arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00072ba0(arg_8h, 4);\n    if ((iVar1 != 0) && (arg_ch != 0)) {\n        (**(**arg_8h + 0x30))(arg_8h, arg_ch);\n        fcn.0007b0f0(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 114
    },
    "0007aaf0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.0007aaf0(int32_t **arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.0007b070(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x34) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x34) != 0)) {\n            var_4h = (**(**arg_8h + 0x34))(arg_8h, arg_ch, arg_10h, arg_14h);\n            if ((var_4h != 0) && ((*arg_8h)[1] != 0)) {\n                var_4h = 0x21590006;\n            }\n            fcn.0007b0f0(arg_8h);\n        }\n        else {\n            fcn.0007b0f0(arg_8h);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 284
    },
    "0007abb0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.0007abb0(int32_t **arg_8h, int32_t *arg_ch, uint *arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.0007b070(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x38) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x38) != 0)) {\n            var_4h = (**(**arg_8h + 0x38))(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n            if ((var_4h != 0) || (*arg_ch == 0)) {\n                if ((*arg_8h)[1] != 0) {\n                    var_4h = 0x21590006;\n                }\n                fcn.0007b0f0(arg_8h);\n                *arg_ch = 0;\n                *arg_10h = 0;\n            }\n        }\n        else {\n            fcn.0007b0f0(arg_8h);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 328
    },
    "0007ac80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0007ac80(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t arg_ch_00;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = fcn.0007acf0(arg_8h, arg_ch, arg_10h);\n    if (var_ch == 0x21590001) {\n        arg_ch_00 = fcn.0007b560(arg_ch, &var_4h);\n        if (arg_ch_00 == 0) {\n            var_ch = 0x21590004;\n        }\n        else {\n            var_ch = fcn.0007aaf0(arg_8h, arg_ch_00, var_4h, arg_10h);\n            fcn.00036460(arg_ch_00);\n        }\n    }\n    return var_ch;\n}\n",
        "token_count": 203
    },
    "0007acf0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.0007acf0(int32_t **arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.0007b070(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x3c) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x3c) != 0)) {\n            var_4h = (**(**arg_8h + 0x3c))(arg_8h, arg_ch, arg_10h);\n            if ((var_4h != 0) && ((*arg_8h)[1] != 0)) {\n                var_4h = 0x21590006;\n            }\n            fcn.0007b0f0(arg_8h);\n        }\n        else {\n            fcn.0007b0f0(arg_8h);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 275
    },
    "0007ada0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.0007ada0(int32_t **arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.0007b070(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x40) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x40) != 0)) {\n            var_4h = (**(**arg_8h + 0x40))(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n            if ((var_4h != 0) && ((*arg_8h)[1] != 0)) {\n                var_4h = 0x21590006;\n            }\n            fcn.0007b0f0(arg_8h);\n        }\n        else {\n            fcn.0007b0f0(arg_8h);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 294
    },
    "0007ae60": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0007ae60(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t arg_ch_00;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = fcn.0007aee0(arg_8h, arg_ch, arg_10h, arg_14h);\n    if (var_ch == 0x21590001) {\n        arg_ch_00 = fcn.0007b560(arg_ch, &var_4h);\n        if (arg_ch_00 == 0) {\n            var_ch = 0x21590004;\n        }\n        else {\n            var_ch = fcn.0007ada0(arg_8h, arg_ch_00, var_4h, arg_10h, arg_14h);\n            fcn.00036460(arg_ch_00);\n        }\n    }\n    return var_ch;\n}\n",
        "token_count": 219
    },
    "0007aee0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.0007aee0(int32_t **arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.0007b070(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x44) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x44) != 0)) {\n            var_4h = (**(**arg_8h + 0x44))(arg_8h, arg_ch, arg_10h, arg_14h);\n            if ((var_4h != 0) && ((*arg_8h)[1] != 0)) {\n                var_4h = 0x21590006;\n            }\n            fcn.0007b0f0(arg_8h);\n        }\n        else {\n            fcn.0007b0f0(arg_8h);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 284
    },
    "0007afa0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.0007afa0(int32_t **arg_8h, int32_t *arg_ch, uint *arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.0007b070(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x48) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x48) != 0)) {\n            var_4h = (**(**arg_8h + 0x48))(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch);\n            if ((var_4h != 0) || (*arg_ch == 0)) {\n                if ((*arg_8h)[1] != 0) {\n                    var_4h = 0x21590006;\n                }\n                fcn.0007b0f0(arg_8h);\n                *arg_ch = 0;\n                *arg_10h = 0;\n            }\n        }\n        else {\n            fcn.0007b0f0(arg_8h);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 339
    },
    "0007b070": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0007b070(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    fcn.00035650(0x85092558);\n    iVar1 = fcn.00072ba0(arg_8h, 4);\n    if (iVar1 == 0) {\n        var_4h = 0x21590065;\n    }\n    else if (*(*arg_8h + 4) == 0) {\n        fcn.0007b0d0(arg_8h);\n        var_4h = 0;\n    }\n    else {\n        var_4h = 0x21590006;\n    }\n    fcn.000356c0(0x85092558);\n    return var_4h;\n}\n",
        "token_count": 179
    },
    "0007b0f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0007b0f0(int32_t **arg_8h)\n\n{\n    int32_t *arg_8h_00;\n    int32_t iVar1;\n    uint var_4h;\n    \n    arg_8h_00 = *arg_8h;\n    if ((0 < arg_8h_00[3]) && (iVar1 = fcn.0007a2b0(arg_8h_00 + 3),  iVar1 == 0)) {\n        fcn.00072ae0(arg_8h, 4);\n        (**(**arg_8h + 0x18))(arg_8h, arg_8h_00[2]);\n        fcn.00036460(arg_8h_00);\n        fcn.0007a2b0(0x85092554);\n    }\n    return;\n}\n",
        "token_count": 190
    },
    "0007b160": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0007b256)\n// WARNING: Removing unreachable block (ram,0x0007b265)\n// WARNING: Removing unreachable block (ram,0x0007b27e)\n// WARNING: Removing unreachable block (ram,0x0007b28d)\n// WARNING: Removing unreachable block (ram,0x0007b275)\n// WARNING: Removing unreachable block (ram,0x0007b2a3)\n// WARNING: Removing unreachable block (ram,0x0007b2b5)\n// WARNING: Removing unreachable block (ram,0x0007b2ac)\n// WARNING: Removing unreachable block (ram,0x0007b2d1)\n// WARNING: Removing unreachable block (ram,0x0007b2dc)\n// WARNING: Removing unreachable block (ram,0x0007b2e2)\n// WARNING: Removing unreachable block (ram,0x0007b305)\n// WARNING: Removing unreachable block (ram,0x0007b263)\n\nuint __cdecl fcn.0007b160(char *arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_2ch;\n    uint var_24h;\n    char *var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    char *var_4h;\n    \n    iVar2 = fcn.0001b570(0x8509ec70);\n    if (iVar2 < 2) {\n        fcn.000729c0();\n        iVar2 = *0x8507c23c;\n        for (var_18h = 0; *(iVar2 + var_18h * 0xc) != 0; var_18h = var_18h + 1) {\n            iVar3 = (**(*(iVar2 + 8 + var_18h * 0xc) + 4))();\n            if (iVar3 != 0) {\n                *(iVar2 + 8 + var_18h * 0xc) = 0;\n            }\n        }\n        var_4h = arg_8h;\n        while ((var_4h != NULL && (*var_4h != '\\0'))) {\n            var_20h = var_4h;\n            do {\n                cVar1 = *var_20h;\n                var_20h = var_20h + 1;\n                var_4h = var_20h;\n            } while (cVar1 != '\\0');\n        }\n        fcn.000795b0();\n        fcn.0007b610();\n        fcn.0007c740();\n        fcn.0007a2d0();\n    }\n    return 0;\n}\n",
        "token_count": 626
    },
    "0007b330": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0007b330(void)\n\n{\n    int32_t iVar1;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.0007a2b0(0x8509ec70);\n    if (iVar1 == 0) {\n        for (var_4h = 0; var_4h < 10; var_4h = var_4h + 1) {\n            if (*(var_4h * 8 + -0x7af83dc4) != 0) {\n                iVar1 = *(var_4h * 8 + -0x7af83dc4);\n                for (var_ch = 0; *(iVar1 + var_ch * 0xc) != 0; var_ch = var_ch + 1) {\n                    if (*(iVar1 + 8 + var_ch * 0xc) != 0) {\n                        (**(*(iVar1 + 8 + var_ch * 0xc) + 8))();\n                    }\n                }\n                if (*(var_4h * 8 + -0x7af83dc8) != 0) {\n                    *(var_4h * 8 + -0x7af83dc8) = 0;\n                    *(var_4h * 8 + -0x7af83dc4) = 0;\n                }\n            }\n        }\n        fcn.000795d0();\n        fcn.0007b630();\n        fcn.0007c760();\n        fcn.0007a2f0();\n        fcn.000729d0();\n    }\n    return;\n}\n",
        "token_count": 364
    },
    "0007b490": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint8_t * __cdecl fcn.0007b490(uint8_t *arg_8h, uint8_t *arg_ch)\n\n{\n    uint8_t uVar1;\n    bool bVar2;\n    uint var_1ch;\n    int32_t var_18h;\n    uint8_t *var_10h;\n    uint8_t *var_ch;\n    uint8_t **var_8h;\n    int32_t var_4h;\n    \n    var_4h = 9;\n    do {\n        if (var_4h < 0) {\n            return NULL;\n        }\n        for (var_8h = *(var_4h * 8 + -0x7af83dc4); (var_8h != NULL && (*var_8h != NULL)); var_8h = var_8h + 3) {\n            var_ch = arg_8h;\n            var_10h = *var_8h;\n            do {\n                uVar1 = *var_10h;\n                bVar2 = uVar1 < *var_ch;\n                if (uVar1 != *var_ch) {\ncode_r0x0007b523:\n                    var_18h = (1 - bVar2) - (bVar2 != 0);\n                    goto code_r0x0007b52b;\n                }\n                if (uVar1 == 0) break;\n                uVar1 = var_10h[1];\n                bVar2 = uVar1 < var_ch[1];\n                if (uVar1 != var_ch[1]) goto code_r0x0007b523;\n                var_10h = var_10h + 2;\n                var_ch = var_ch + 2;\n            } while (uVar1 != 0);\n            var_18h = 0;\ncode_r0x0007b52b:\n            if ((var_18h == 0) && (var_8h[1] == arg_ch)) {\n                return var_8h[2];\n            }\n        }\n        var_4h = var_4h + -1;\n    } while( true );\n}\n",
        "token_count": 463
    },
    "0007b560": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0007b560(uint *arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    uint *var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    *arg_ch = 0;\n    for (var_ch = arg_8h; var_ch != NULL; var_ch = *var_ch) {\n        *arg_ch = *arg_ch + var_ch[2];\n    }\n    iVar1 = fcn.00036330(*arg_ch);\n    if (iVar1 == 0) {\n        iVar1 = 0;\n    }\n    else {\n        var_4h = 0;\n        for (var_ch = arg_8h; var_ch != NULL; var_ch = *var_ch) {\n            fcn.0007f904(iVar1 + var_4h, var_ch[1], var_ch[2]);\n            var_4h = var_4h + var_ch[2];\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 228
    },
    "0007b640": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.0007b640(int32_t **arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    char cVar1;\n    char *arg_8h_00;\n    int32_t *arg_8h_01;\n    int32_t iVar2;\n    char *pcVar3;\n    uint uVar4;\n    uint var_2ch;\n    uint var_24h;\n    char *var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uchar *var_4h;\n    \n    *arg_8h = NULL;\n    var_8h = 0;\n    while( true ) {\n        if (*(arg_ch + var_8h * 4) == 0) {\n            return 0x21590005;\n        }\n        arg_8h_00 = fcn.00036490(*(arg_ch + var_8h * 4));\n        if (arg_8h_00 == NULL) {\n            return 0x21590004;\n        }\n        var_4h = fcn.0007f7de(arg_8h_00, 0x2e);\n        if (var_4h != NULL) {\n            *var_4h = 0;\n            var_4h = var_4h + 1;\n        }\n        pcVar3 = arg_8h_00;\n        uVar4 = arg_20h;\n        var_18h = fcn.0007b430(arg_8h_00);\n        if (var_18h == 0) {\n            fcn.00036460(arg_8h_00);\n            var_1ch = 0x21590005;\n            if ((*0x8507c228 != 0) &&\n               (var_1ch = (**(*0x8507c228 + 0xc))\n                                    (arg_8h, *(arg_ch + var_8h * 4), arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, pcVar3\n                                     , uVar4),  var_1ch == 0)) {\n                var_18h = *0x8507c228;\n            }\n            if (((var_1ch == 0x21590005) && (*0x8507c230 != 0)) &&\n               (var_1ch = (**(*0x8507c230 + 0xc))\n                                    (arg_8h, *(arg_ch + var_8h * 4), arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h), \n               var_1ch == 0)) {\n                var_18h = *0x8507c230;\n            }\n            if ((var_18h == 0) && (var_1ch != 0x21590005)) {\n                return var_1ch;\n            }\n        }\n        else {\n            if (var_4h == NULL) {\n                var_20h = arg_8h_00;\n                do {\n                    cVar1 = *var_20h;\n                    var_20h = var_20h + 1;\n                } while (cVar1 != '\\0');\n                var_10h = var_20h - (arg_8h_00 + 1);\n            }\n            else {\n                var_10h = var_4h - arg_8h_00;\n            }\n            fcn.00036460(arg_8h_00);\n            var_1ch = (**(var_18h + 0xc))(arg_8h, *(arg_ch + var_8h * 4) + var_10h, arg_10h, arg_14h, arg_18h, arg_1ch, \n                                          arg_20h);\n        }\n        if (var_18h != 0) break;\n        var_8h = var_8h + 1;\n    }\n    if (var_1ch != 0) {\n        return var_1ch;\n    }\n    if (*arg_8h != NULL) {\n        arg_8h_01 = fcn.00036330(0x10);\n        if (arg_8h_01 == NULL) {\n            (**(var_18h + 0x10))(*arg_8h, 0);\n            (**(var_18h + 0x14))(*arg_8h, 0);\n            *arg_8h = NULL;\n            return 0x21590004;\n        }\n        *arg_8h_01 = var_18h;\n        arg_8h_01[1] = 0;\n        arg_8h_01[2] = 0;\n        arg_8h_01[3] = 1;\n        **arg_8h = arg_8h_01;\n        iVar2 = fcn.00072a50(*arg_8h, 2);\n        if (iVar2 != 0) {\n            fcn.0001b570(0x8509255c);\n            return 0;\n        }\n        fcn.00036460(arg_8h_01);\n        (**(var_18h + 0x10))(*arg_8h, 0);\n        (**(var_18h + 0x14))(*arg_8h, 0);\n        *arg_8h = NULL;\n        return 0x21590004;\n    }\n    (**(var_18h + 0x10))(*arg_8h, 0);\n    (**(var_18h + 0x14))(*arg_8h, 0);\n    return -1;\n}\n",
        "token_count": 1309
    },
    "0007b950": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0007b950(int32_t **arg_8h, int32_t arg_ch)\n\n{\n    int32_t **arg_8h_00;\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h_00 = *arg_8h;\n    fcn.00035650(0x85092560);\n    iVar2 = fcn.00072ba0(arg_8h_00, 2);\n    if (iVar2 == 0) {\n        fcn.000356c0(0x85092560);\n        *arg_8h = NULL;\n    }\n    else {\n        piVar1 = *arg_8h_00;\n        if (piVar1[1] == 0) {\n            piVar1[2] = arg_ch;\n            piVar1[1] = 1;\n            fcn.000356c0(0x85092560);\n            (**(**arg_8h_00 + 0x10))(arg_8h_00, arg_ch);\n            fcn.0007c570(arg_8h_00);\n            *arg_8h = NULL;\n        }\n        else {\n            fcn.000356c0(0x85092560);\n            *arg_8h = NULL;\n        }\n    }\n    return;\n}\n",
        "token_count": 308
    },
    "0007ba00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t __cdecl fcn.0007ba00(int32_t **arg_8h, uint *arg_ch, uint arg_10h)\n\n{\n    int32_t *arg_8h_00;\n    int32_t iVar1;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.0007c510(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x1c) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x1c) != 0)) {\n            var_4h = (**(**arg_8h + 0x1c))(arg_8h, arg_ch, arg_10h);\n            if (var_4h == 0) {\n                arg_8h_00 = fcn.00036330(0x10);\n                if (arg_8h_00 == NULL) {\n                    fcn.0007c570(arg_8h);\n                    (**(**arg_8h + 0x14))(*arg_ch, 0);\n                    *arg_ch = 0;\n                    return 0x21590004;\n                }\n                *arg_8h_00 = **arg_8h;\n                arg_8h_00[1] = 0;\n                arg_8h_00[2] = 0;\n                arg_8h_00[3] = 1;\n                **arg_ch = arg_8h_00;\n                iVar1 = fcn.00072a50(*arg_ch, 2);\n                if (iVar1 == 0) {\n                    fcn.00036460(arg_8h_00);\n                    (**(**arg_8h + 0x14))(*arg_ch, 0);\n                    *arg_ch = 0;\n                    var_4h = 0x21590004;\n                }\n                else {\n                    fcn.0001b570(0x8509255c);\n                }\n            }\n            else if ((*arg_8h)[1] != 0) {\n                var_4h = 0x21590006;\n            }\n            fcn.0007c570(arg_8h);\n        }\n        else {\n            fcn.0007c570(arg_8h);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 558
    },
    "0007bb80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.0007bb80(int32_t **arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    if (arg_8h == NULL) {\n        var_4h = fcn.0007c5e0(arg_ch, arg_10h, arg_14h, arg_18h);\n    }\n    else {\n        var_4h = fcn.0007c510(arg_8h);\n        if (var_4h == 0) {\n            if (((**arg_8h + 0x38) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x38) != 0)) {\n                var_4h = (**(**arg_8h + 0x38))(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n                if (var_4h == 0) {\n                    var_4h = fcn.0007c5e0(arg_ch, arg_10h, arg_14h, arg_18h);\n                }\n                fcn.0007c570(arg_8h);\n            }\n            else {\n                fcn.0007c570(arg_8h);\n                var_4h = 0x21590001;\n            }\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 348
    },
    "0007bc60": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.0007bc60(int32_t **arg_8h, uint arg_ch)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.0007c510(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x18) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x18) != 0)) {\n            var_4h = (**(**arg_8h + 0x18))(arg_8h, arg_ch);\n            if ((var_4h != 0) && ((*arg_8h)[1] != 0)) {\n                var_4h = 0x21590006;\n            }\n            fcn.0007c570(arg_8h);\n        }\n        else {\n            fcn.0007c570(arg_8h);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 257
    },
    "0007bd10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.0007bd10(int32_t **arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.0007c510(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x20) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x20) != 0)) {\n            var_4h = (**(**arg_8h + 0x20))(arg_8h, arg_ch, arg_10h);\n            if ((var_4h != 0) && ((*arg_8h)[1] != 0)) {\n                var_4h = 0x21590006;\n            }\n            fcn.0007c570(arg_8h);\n        }\n        else {\n            fcn.0007c570(arg_8h);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 268
    },
    "0007bdc0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.0007bdc0(int32_t **arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.0007c510(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x24) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x24) != 0)) {\n            var_4h = (**(**arg_8h + 0x24))(arg_8h, arg_ch, arg_10h);\n            if ((var_4h != 0) && ((*arg_8h)[1] != 0)) {\n                var_4h = 0x21590006;\n            }\n            fcn.0007c570(arg_8h);\n        }\n        else {\n            fcn.0007c570(arg_8h);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 269
    },
    "0007be70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.0007be70(int32_t **arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.0007c510(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x28) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x28) != 0)) {\n            var_4h = (**(**arg_8h + 0x28))(arg_8h, arg_ch, arg_10h, arg_14h);\n            if ((var_4h != 0) && ((*arg_8h)[1] != 0)) {\n                var_4h = 0x21590006;\n            }\n            fcn.0007c570(arg_8h);\n        }\n        else {\n            fcn.0007c570(arg_8h);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 279
    },
    "0007bf30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.0007bf30(int32_t **arg_8h, int32_t *arg_ch, uint *arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.0007c510(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x2c) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x2c) != 0)) {\n            var_4h = (**(**arg_8h + 0x2c))(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n            if ((var_4h != 0) || (*arg_ch == 0)) {\n                if ((*arg_8h)[1] != 0) {\n                    var_4h = 0x21590006;\n                }\n                fcn.0007c570(arg_8h);\n                *arg_ch = 0;\n                *arg_10h = 0;\n            }\n        }\n        else {\n            fcn.0007c570(arg_8h);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 327
    },
    "0007c000": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl\nfcn.0007c000(int32_t **arg_8h, uint arg_ch, uint arg_10h, int32_t *arg_14h, uint *arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.0007c510(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x30) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x30) != 0)) {\n            var_4h = (**(**arg_8h + 0x30))(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n            if ((var_4h != 0) || (*arg_14h == 0)) {\n                if ((*arg_8h)[1] != 0) {\n                    var_4h = 0x21590006;\n                }\n                fcn.0007c570(arg_8h);\n                *arg_14h = 0;\n                *arg_18h = 0;\n            }\n        }\n        else {\n            fcn.0007c570(arg_8h);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 350
    },
    "0007c0d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0007c0d0(int32_t **arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00072ba0(arg_8h, 2);\n    if ((iVar1 != 0) && (arg_ch != 0)) {\n        (**(**arg_8h + 0x34))(arg_8h, arg_ch);\n        fcn.0007c570(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 114
    },
    "0007c110": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.0007c110(int32_t **arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.0007c510(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x3c) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x3c) != 0)) {\n            var_4h = (**(**arg_8h + 0x3c))(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n            if ((var_4h != 0) && ((*arg_8h)[1] != 0)) {\n                var_4h = 0x21590006;\n            }\n            fcn.0007c570(arg_8h);\n        }\n        else {\n            fcn.0007c570(arg_8h);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 293
    },
    "0007c1d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.0007c1d0(int32_t **arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.0007c510(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x40) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x40) != 0)) {\n            var_4h = (**(**arg_8h + 0x40))(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n            if ((var_4h != 0) && ((*arg_8h)[1] != 0)) {\n                var_4h = 0x21590006;\n            }\n            fcn.0007c570(arg_8h);\n        }\n        else {\n            fcn.0007c570(arg_8h);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 292
    },
    "0007c290": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0007c290(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t arg_ch_00;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = fcn.0007c300(arg_8h, arg_ch, arg_10h);\n    if (var_ch == 0x21590001) {\n        arg_ch_00 = fcn.0007b560(arg_ch, &var_4h);\n        if (arg_ch_00 == 0) {\n            var_ch = 0x21590004;\n        }\n        else {\n            var_ch = fcn.0007be70(arg_8h, arg_ch_00, var_4h, arg_10h);\n            fcn.00036460(arg_ch_00);\n        }\n    }\n    return var_ch;\n}\n",
        "token_count": 202
    },
    "0007c300": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.0007c300(int32_t **arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.0007c510(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x44) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x44) != 0)) {\n            var_4h = (**(**arg_8h + 0x44))(arg_8h, arg_ch, arg_10h);\n            if ((var_4h != 0) && ((*arg_8h)[1] != 0)) {\n                var_4h = 0x21590006;\n            }\n            fcn.0007c570(arg_8h);\n        }\n        else {\n            fcn.0007c570(arg_8h);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 268
    },
    "0007c3b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0007c3b0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int32_t arg_ch_00;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = fcn.0007c440(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch);\n    if (var_ch == 0x21590001) {\n        arg_ch_00 = fcn.0007b560(arg_ch, &var_4h);\n        if (arg_ch_00 == 0) {\n            var_ch = 0x21590004;\n        }\n        else {\n            var_ch = fcn.0007c000(arg_8h, arg_ch_00, var_4h, arg_10h, arg_14h, arg_18h, arg_1ch);\n            fcn.00036460(arg_ch_00);\n        }\n    }\n    return var_ch;\n}\n",
        "token_count": 252
    },
    "0007c440": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.0007c440(int32_t **arg_8h, uint arg_ch, int32_t *arg_10h, uint *arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.0007c510(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x48) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x48) != 0)) {\n            var_4h = (**(**arg_8h + 0x48))(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch);\n            if ((var_4h != 0) || (*arg_10h == 0)) {\n                if ((*arg_8h)[1] != 0) {\n                    var_4h = 0x21590006;\n                }\n                fcn.0007c570(arg_8h);\n                *arg_10h = 0;\n                *arg_14h = 0;\n            }\n        }\n        else {\n            fcn.0007c570(arg_8h);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 339
    },
    "0007c510": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0007c510(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    fcn.00035650(0x85092560);\n    iVar1 = fcn.00072ba0(arg_8h, 2);\n    if (iVar1 == 0) {\n        var_4h = 0x21590065;\n    }\n    else if (*(*arg_8h + 4) == 0) {\n        fcn.0007b0d0(arg_8h);\n        var_4h = 0;\n    }\n    else {\n        var_4h = 0x21590006;\n    }\n    fcn.000356c0(0x85092560);\n    return var_4h;\n}\n",
        "token_count": 179
    },
    "0007c570": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0007c570(int32_t **arg_8h)\n\n{\n    int32_t *arg_8h_00;\n    int32_t iVar1;\n    uint var_4h;\n    \n    arg_8h_00 = *arg_8h;\n    if ((0 < arg_8h_00[3]) && (iVar1 = fcn.0007a2b0(arg_8h_00 + 3),  iVar1 == 0)) {\n        fcn.00072ae0(arg_8h, 2);\n        (**(**arg_8h + 0x14))(arg_8h, arg_8h_00[2]);\n        fcn.00036460(arg_8h_00);\n        fcn.0007a2b0(0x8509255c);\n    }\n    return;\n}\n",
        "token_count": 189
    },
    "0007c5e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0007c5e0(uint32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    bool bVar1;\n    uint32_t uVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    bVar1 = false;\n    while( true ) {\n        if (bVar1) {\n            return 0;\n        }\n        uVar2 = arg_8h >> 0x1f;\n        if (*0x8507c190 == arg_8h) break;\n        if (arg_8h == 0xffffffff) {\n            fcn.0004a010(arg_10h, arg_14h, 0x85011af8, arg_ch);\n        }\n        else if ((arg_8h ^ uVar2) - uVar2 < 0x186a1) {\n            fcn.0004a010(arg_10h, arg_14h, 0x85011af8, arg_ch);\n        }\n        else {\n            fcn.0004a010(arg_10h, arg_14h, 0x85011b04, arg_ch);\n        }\n        bVar1 = true;\n    }\n    if (arg_8h == 0xffffffff) {\n        fcn.0004a010(arg_10h, arg_14h, 0x85011adc, arg_ch);\n    }\n    else if ((arg_8h ^ uVar2) - uVar2 < 0x186a1) {\n        fcn.0004a010(arg_10h, arg_14h, 0x85011adc, arg_ch);\n    }\n    else {\n        fcn.0004a010(arg_10h, arg_14h, 0x85011ae8, arg_ch);\n    }\n    return 1;\n}\n",
        "token_count": 411
    },
    "0007c770": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0007c770(uint *arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    char cVar1;\n    char *arg_8h_00;\n    int32_t iVar2;\n    char *pcVar3;\n    uint uVar4;\n    uint var_28h;\n    uint var_20h;\n    char *var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uchar *var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    *arg_8h = 0;\n    var_4h = 0;\n    while( true ) {\n        if (*(arg_ch + var_4h * 4) == 0) {\n            return 0x21590005;\n        }\n        arg_8h_00 = fcn.00036490(*(arg_ch + var_4h * 4));\n        if (arg_8h_00 == NULL) {\n            return 0x21590004;\n        }\n        var_10h = fcn.0007f7de(arg_8h_00, 0x2e);\n        if (var_10h != NULL) {\n            *var_10h = 0;\n            var_10h = var_10h + 1;\n        }\n        pcVar3 = arg_8h_00;\n        uVar4 = arg_18h;\n        var_18h = fcn.0007b450(arg_8h_00);\n        if (var_18h == 0) {\n            fcn.00036460(arg_8h_00);\n            var_ch = 0x21590005;\n            if ((*0x8507c22c != 0) &&\n               (var_ch = (**(*0x8507c22c + 0xc))\n                                   (arg_8h, *(arg_ch + var_4h * 4), arg_10h, arg_14h, arg_18h, pcVar3, uVar4), \n               var_ch == 0)) {\n                var_18h = *0x8507c22c;\n            }\n            if ((var_18h == 0) && (var_ch != 0x21590005)) {\n                return var_ch;\n            }\n        }\n        else {\n            if (var_10h == NULL) {\n                var_1ch = arg_8h_00;\n                do {\n                    cVar1 = *var_1ch;\n                    var_1ch = var_1ch + 1;\n                } while (cVar1 != '\\0');\n                var_8h = var_1ch - (arg_8h_00 + 1);\n            }\n            else {\n                var_8h = var_10h - arg_8h_00;\n            }\n            fcn.00036460(arg_8h_00);\n            var_ch = (**(var_18h + 0xc))(arg_8h, *(arg_ch + var_4h * 4) + var_8h, arg_10h, arg_14h, arg_18h);\n        }\n        if (var_18h != 0) break;\n        var_4h = var_4h + 1;\n    }\n    if (var_ch != 0) {\n        return var_ch;\n    }\n    iVar2 = fcn.0007cb00(*arg_8h, var_18h);\n    if (iVar2 != 0) {\n        return 0;\n    }\n    (**(var_18h + 0x18))(*arg_8h, 0);\n    *arg_8h = 0;\n    return 0x21590004;\n}\n",
        "token_count": 845
    },
    "0007c940": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0007c940(uint *arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    char cVar1;\n    char *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint var_28h;\n    uint var_20h;\n    char *var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uchar *var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    *arg_8h = 0;\n    var_4h = 0;\n    while( true ) {\n        if (*(arg_ch + var_4h * 4) == 0) {\n            return 0x21590005;\n        }\n        var_1ch = fcn.00036490(*(arg_ch + var_4h * 4));\n        if (var_1ch == NULL) {\n            return 0x21590004;\n        }\n        var_10h = fcn.0007f7de(var_1ch, 0x2e);\n        if (var_10h != NULL) {\n            *var_10h = 0;\n            var_10h = var_10h + 1;\n        }\n        pcVar2 = var_1ch;\n        uVar4 = arg_18h;\n        var_18h = fcn.0007b450(var_1ch);\n        fcn.00036460(var_1ch);\n        if (var_18h == 0) {\n            var_ch = 0x21590005;\n            if ((*0x8507c22c != 0) &&\n               (var_ch = (**(*0x8507c22c + 0x10))\n                                   (arg_8h, *(arg_ch + var_4h * 4), arg_10h, arg_14h, arg_18h, pcVar2, uVar4), \n               var_ch == 0)) {\n                var_18h = *0x8507c22c;\n            }\n            if ((var_18h == 0) && (var_ch != 0x21590005)) {\n                return var_ch;\n            }\n        }\n        else {\n            if (var_10h == NULL) {\n                pcVar2 = var_1ch + 1;\n                do {\n                    cVar1 = *var_1ch;\n                    var_1ch = var_1ch + 1;\n                } while (cVar1 != '\\0');\n                var_8h = var_1ch - pcVar2;\n            }\n            else {\n                var_8h = var_10h - var_1ch;\n            }\n            var_ch = (**(var_18h + 0x10))(arg_8h, *(arg_ch + var_4h * 4) + var_8h, arg_10h, arg_14h, arg_18h);\n        }\n        if (var_18h != 0) break;\n        var_4h = var_4h + 1;\n    }\n    if (var_ch != 0) {\n        return var_ch;\n    }\n    iVar3 = fcn.0007cb00(*arg_8h, var_18h);\n    if (iVar3 != 0) {\n        return 0;\n    }\n    (**(var_18h + 0x18))(*arg_8h, 0);\n    *arg_8h = 0;\n    return 0x21590004;\n}\n",
        "token_count": 802
    },
    "0007cb00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0007cb00(int32_t *arg_8h, uint arg_ch)\n\n{\n    uint *arg_8h_00;\n    uint uVar1;\n    int32_t iVar2;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.00036330(0x10);\n    if (arg_8h_00 == NULL) {\n        uVar1 = 0;\n    }\n    else {\n        *arg_8h_00 = arg_ch;\n        arg_8h_00[1] = 0;\n        arg_8h_00[2] = 0;\n        arg_8h_00[3] = 1;\n        *arg_8h = arg_8h_00;\n        iVar2 = fcn.00072a50(arg_8h, 3);\n        if (iVar2 == 0) {\n            fcn.00036460(arg_8h_00);\n            *arg_8h = 0;\n            uVar1 = 0;\n        }\n        else {\n            fcn.0001b570(0x85092564);\n            uVar1 = 1;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 269
    },
    "0007cb90": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0007cb90(int32_t **arg_8h, int32_t arg_ch)\n\n{\n    int32_t **arg_8h_00;\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h_00 = *arg_8h;\n    fcn.00035650(0x85092568);\n    iVar2 = fcn.00072ba0(arg_8h_00, 3);\n    if (iVar2 == 0) {\n        fcn.000356c0(0x85092568);\n        *arg_8h = NULL;\n    }\n    else {\n        piVar1 = *arg_8h_00;\n        if (piVar1[1] == 0) {\n            piVar1[2] = arg_ch;\n            piVar1[1] = 1;\n            fcn.000356c0(0x85092568);\n            (**(**arg_8h_00 + 0x14))(arg_8h_00, arg_ch);\n            fcn.0007d6a0(arg_8h_00);\n            *arg_8h = NULL;\n        }\n        else {\n            fcn.000356c0(0x85092568);\n            *arg_8h = NULL;\n        }\n    }\n    return;\n}\n",
        "token_count": 310
    },
    "0007cc40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.0007cc40(int32_t **arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.0007d480(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x20) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x20) != 0)) {\n            var_4h = (**(**arg_8h + 0x20))(arg_8h, arg_ch, arg_10h);\n            if ((var_4h != 0) && ((*arg_8h)[1] != 0)) {\n                var_4h = 0x21590006;\n            }\n            fcn.0007d6a0(arg_8h);\n        }\n        else {\n            fcn.0007d6a0(arg_8h);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 272
    },
    "0007ccf0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.0007ccf0(int32_t **arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.0007d480(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x48) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x48) != 0)) {\n            var_4h = (**(**arg_8h + 0x48))(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n            if ((var_4h != 0) && ((*arg_8h)[1] != 0)) {\n                var_4h = 0x21590006;\n            }\n            fcn.0007d6a0(arg_8h);\n        }\n        else {\n            fcn.0007d6a0(arg_8h);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 295
    },
    "0007cdf0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.0007cdf0(int32_t **arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.0007d480(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x28) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x28) != 0)) {\n            var_4h = (**(**arg_8h + 0x28))(arg_8h, arg_ch, arg_10h, arg_14h);\n            if ((var_4h != 0) && ((*arg_8h)[1] != 0)) {\n                var_4h = 0x21590006;\n            }\n            fcn.0007d6a0(arg_8h);\n        }\n        else {\n            fcn.0007d6a0(arg_8h);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 283
    },
    "0007cec0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl\nfcn.0007cec0(int32_t **arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, int32_t *arg_1ch, uint *arg_20h, \n            uint arg_24h, uint arg_28h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.0007d480(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x2c) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x2c) != 0)) {\n            var_4h = (**(**arg_8h + 0x2c))\n                               (arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, arg_24h, arg_28h);\n            if ((var_4h != 0) || (*arg_1ch == 0)) {\n                if ((*arg_8h)[1] != 0) {\n                    var_4h = 0x21590006;\n                }\n                fcn.0007d6a0(arg_8h);\n                *arg_1ch = 0;\n                *arg_20h = 0;\n            }\n        }\n        else {\n            fcn.0007d6a0(arg_8h);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 383
    },
    "0007cfa0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.0007cfa0(int32_t **arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.0007d480(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x30) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x30) != 0)) {\n            var_4h = (**(**arg_8h + 0x30))(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch);\n            if ((var_4h != 0) && ((*arg_8h)[1] != 0)) {\n                var_4h = 0x21590006;\n            }\n            fcn.0007d6a0(arg_8h);\n        }\n        else {\n            fcn.0007d6a0(arg_8h);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 306
    },
    "0007d060": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.0007d060(int32_t **arg_8h, uint arg_ch, int32_t *arg_10h, uint *arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.0007d480(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x34) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x34) != 0)) {\n            var_4h = (**(**arg_8h + 0x34))(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch);\n            if ((var_4h != 0) || (*arg_10h == 0)) {\n                if ((*arg_8h)[1] != 0) {\n                    var_4h = 0x21590006;\n                }\n                fcn.0007d6a0(arg_8h);\n                *arg_10h = 0;\n                *arg_14h = 0;\n            }\n        }\n        else {\n            fcn.0007d6a0(arg_8h);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 343
    },
    "0007d130": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.0007d130(int32_t **arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.0007d480(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x38) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x38) != 0)) {\n            var_4h = (**(**arg_8h + 0x38))(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n            if ((var_4h != 0) && ((*arg_8h)[1] != 0)) {\n                var_4h = 0x21590006;\n            }\n            fcn.0007d6a0(arg_8h);\n        }\n        else {\n            fcn.0007d6a0(arg_8h);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 294
    },
    "0007d1f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl\nfcn.0007d1f0(int32_t **arg_8h, uint arg_ch, uint arg_10h, int32_t *arg_14h, uint *arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.0007d480(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x3c) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x3c) != 0)) {\n            var_4h = (**(**arg_8h + 0x3c))(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n            if ((var_4h != 0) || (*arg_14h == 0)) {\n                if ((*arg_8h)[1] != 0) {\n                    var_4h = 0x21590006;\n                }\n                fcn.0007d6a0(arg_8h);\n                *arg_14h = 0;\n                *arg_18h = 0;\n            }\n        }\n        else {\n            fcn.0007d6a0(arg_8h);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 359
    },
    "0007d2c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0007d2c0(int32_t **arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00072ba0(arg_8h, 3);\n    if ((iVar1 != 0) && (arg_ch != 0)) {\n        (**(**arg_8h + 0x44))(arg_8h, arg_ch);\n        fcn.0007d6a0(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 116
    },
    "0007d340": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0007d340(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t arg_10h_00;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = fcn.0007d3c0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n    if (var_ch == 0x21590001) {\n        arg_10h_00 = fcn.0007b560(arg_10h, &var_4h);\n        if (arg_10h_00 == 0) {\n            var_ch = 0x21590004;\n        }\n        else {\n            var_ch = fcn.0007cfa0(arg_8h, arg_ch, arg_10h_00, var_4h, arg_14h, arg_18h);\n            fcn.00036460(arg_10h_00);\n        }\n    }\n    return var_ch;\n}\n",
        "token_count": 247
    },
    "0007d3c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.0007d3c0(int32_t **arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.0007d480(arg_8h);\n    if (var_4h == 0) {\n        if (((**arg_8h + 0x50) - **arg_8h < ***arg_8h) && (*(**arg_8h + 0x50) != 0)) {\n            var_4h = (**(**arg_8h + 0x50))(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n            if ((var_4h != 0) && ((*arg_8h)[1] != 0)) {\n                var_4h = 0x21590006;\n            }\n            fcn.0007d6a0(arg_8h);\n        }\n        else {\n            fcn.0007d6a0(arg_8h);\n            var_4h = 0x21590001;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 296
    },
    "0007d480": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0007d480(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    fcn.00035650(0x85092568);\n    iVar1 = fcn.00072ba0(arg_8h, 3);\n    if (iVar1 == 0) {\n        var_4h = 0x21590065;\n    }\n    else if (*(*arg_8h + 4) == 0) {\n        fcn.0007b0d0(arg_8h);\n        var_4h = 0;\n    }\n    else {\n        var_4h = 0x21590006;\n    }\n    fcn.000356c0(0x85092568);\n    return var_4h;\n}\n",
        "token_count": 179
    },
    "0007d590": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0007d590(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_4h;\n    \n    iVar1 = fcn.0007ceb0(arg_8h);\n    if ((*(iVar1 + 0x10) < 0x29) || (*(iVar1 + 0x28) == 0)) {\n        uVar2 = 0x21590001;\n    }\n    else {\n        uVar2 = (**(iVar1 + 0x28))(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n    }\n    return uVar2;\n}\n",
        "token_count": 174
    },
    "0007d5f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0007d5f0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_4h;\n    \n    iVar1 = fcn.0007ceb0(arg_8h);\n    if ((*(iVar1 + 0x10) < 0x2d) || (*(iVar1 + 0x2c) == 0)) {\n        uVar2 = 0x21590001;\n    }\n    else {\n        uVar2 = (**(iVar1 + 0x2c))(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n    }\n    return uVar2;\n}\n",
        "token_count": 179
    },
    "0007d650": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0007d650(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_4h;\n    \n    iVar1 = fcn.0007ceb0(arg_8h);\n    if ((*(iVar1 + 0x10) < 0x31) || (*(iVar1 + 0x30) == 0)) {\n        uVar2 = 0x21590001;\n    }\n    else {\n        uVar2 = (**(iVar1 + 0x30))(arg_8h, arg_ch);\n    }\n    return uVar2;\n}\n",
        "token_count": 141
    },
    "0007d6a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0007d6a0(int32_t **arg_8h)\n\n{\n    int32_t *arg_8h_00;\n    int32_t iVar1;\n    uint var_4h;\n    \n    arg_8h_00 = *arg_8h;\n    if ((0 < arg_8h_00[3]) && (iVar1 = fcn.0007a2b0(arg_8h_00 + 3),  iVar1 == 0)) {\n        fcn.00072ae0(arg_8h, 3);\n        (**(**arg_8h + 0x18))(arg_8h, arg_8h_00[2]);\n        fcn.00036460(arg_8h_00);\n        fcn.0007a2b0(0x85092564);\n    }\n    return;\n}\n",
        "token_count": 190
    },
    "0007d710": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0007d710(char **arg_8h, int32_t arg_ch, uint32_t arg_10h, char **arg_14h)\n\n{\n    char cVar1;\n    uint uVar2;\n    char *pcVar3;\n    uint var_28h;\n    uint var_20h;\n    char *var_1ch;\n    uint var_18h;\n    uint var_10h;\n    char *var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    if (**arg_8h == '\\0') {\n        uVar2 = 0;\n    }\n    else {\n        var_8h = fcn.0007f7de(*arg_8h, 0x3d);\n        if (var_8h == 0) {\n            if (arg_10h != 0) {\n                fcn.0007f7e4(arg_ch, *arg_8h, arg_10h);\n                *(arg_ch + arg_10h + -1) = 0;\n            }\n            var_ch = *arg_8h;\n            pcVar3 = var_ch + 1;\n            do {\n                cVar1 = *var_ch;\n                var_ch = var_ch + 1;\n            } while (cVar1 != '\\0');\n            *arg_14h = *arg_8h + (var_ch - pcVar3);\n        }\n        else {\n            var_8h = var_8h - *arg_8h;\n            if (arg_10h != 0) {\n                if (arg_10h < var_8h + 1U) {\n                    var_8h = arg_10h - 1;\n                }\n                fcn.0007f904(arg_ch, *arg_8h, var_8h);\n                *(arg_ch + var_8h) = 0;\n            }\n            *arg_14h = *arg_8h + var_8h + 1;\n        }\n        var_1ch = *arg_8h;\n        pcVar3 = var_1ch + 1;\n        do {\n            cVar1 = *var_1ch;\n            var_1ch = var_1ch + 1;\n        } while (cVar1 != '\\0');\n        *arg_8h = *arg_8h + var_1ch + (1 - pcVar3);\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 546
    },
    "0007d840": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0007d840(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.0007f7fc(arg_8h);\n    iVar2 = fcn.0007f7de(arg_8h, 0x2e);\n    if (iVar2 == 0) {\n        uVar1 = 0;\n    }\n    else {\n        iVar3 = fcn.0007f7fc(iVar2 + 1);\n        iVar2 = fcn.0007f7de(iVar2 + 1, 0x2e);\n        if (iVar2 == 0) {\n            uVar1 = 0;\n        }\n        else {\n            iVar4 = fcn.0007f7fc(iVar2 + 1);\n            iVar2 = fcn.0007f7de(iVar2 + 1, 0x2e);\n            if (iVar2 == 0) {\n                uVar1 = 0;\n            }\n            else {\n                iVar2 = fcn.0007f7fc(iVar2 + 1);\n                if (((((uVar1 < 0) || (0xff < uVar1)) || (iVar3 < 0)) || ((0xff < iVar3 || (iVar4 < 0)))) ||\n                   ((0xff < iVar4 || ((iVar2 < 0 || (0xff < iVar2)))))) {\n                    uVar1 = 0;\n                }\n                else {\n                    uVar1 = iVar3 << 8 | uVar1 | iVar4 << 0x10 | iVar2 << 0x18;\n                }\n            }\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 427
    },
    "0007d960": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0007d960(int32_t arg_8h, uint arg_ch, uint *arg_10h, uint *arg_14h)\n\n{\n    ushort uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if (arg_ch == '\\0') {\n        uVar2 = 0x215900c8;\n    }\n    else {\n        var_14h._2_2_ = 0;\n        var_10h._0_2_ = 0;\n        var_4h = fcn.0007f7ea(arg_8h, 0x3a, 0);\n        if (var_4h == 0) {\n            var_4h = arg_8h;\n        }\n        else {\n            iVar3 = fcn.0007d840(arg_8h);\n            var_14h._2_2_ = iVar3;\n            var_10h._0_2_ = iVar3 >> 0x10;\n            if (iVar3 == 0) {\n                return 0x215900c8;\n            }\n            var_4h = var_4h + 1;\n        }\n        uVar2 = fcn.0007f7fc(var_4h);\n        uVar1 = fcn.000365f0(uVar2);\n        *arg_10h = 1;\n        *(arg_10h + 1) = 0xe;\n        *(arg_10h + 6) = 2;\n        arg_10h[2] = CONCAT22(var_14h._2_2_, uVar1);\n        arg_10h[3] = var_10h;\n        arg_10h[4] = 0;\n        *(arg_10h + 5) = 0;\n        *arg_14h = 0x16;\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 484
    },
    "0007da30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0007da30(int32_t *arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    uint var_4h;\n    \n    if (*arg_8h == 1) {\n        if (*(arg_8h + 6) == 2) {\n            *arg_ch = 2;\n            *arg_ch = 0;\n            arg_ch[1] = 0;\n            arg_ch[2] = 0;\n            arg_ch[3] = 0;\n            arg_ch[1] = *(arg_8h + 10);\n            *(arg_ch + 2) = *(arg_8h + 2);\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = 0xc0000001;\n        }\n    }\n    else {\n        uVar1 = 0xc0000001;\n    }\n    return uVar1;\n}\n",
        "token_count": 201
    },
    "0007dae0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0007dae0(uint arg_8h, uint arg_ch, uint arg_10h, uint *arg_14h, uint arg_18h)\n\n{\n    uint var_2ch;\n    uint var_28h;\n    uint *var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_8h;\n    \n    fcn.0007f6d0(&var_10h, arg_8h);\n    var_2ch = 0x18;\n    var_28h = 0;\n    var_20h = 0x40;\n    var_24h = &var_10h;\n    var_1ch = 0;\n    var_18h = 0;\n    var_14h = fcn.0001ed40(arg_14h, 0xc0000000, &var_2ch, &var_8h, 0, 0x80, 3, 3, 0, arg_10h, arg_ch);\n    if ((var_14h == 0) && (var_14h = (**0x8500d2a0)(*arg_14h, 0xc0000000, 0, 0, arg_18h, 0),  var_14h != 0)) {\n        fcn.0007f6c4(*arg_14h);\n        *arg_14h = 0;\n    }\n    return var_14h;\n}\n",
        "token_count": 354
    },
    "0007dd00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0007dd00(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t arg_10h_00;\n    uint uVar1;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_10h_00 = fcn.00036330(0x21);\n    if (arg_10h_00 == 0) {\n        uVar1 = 0xc000009a;\n    }\n    else {\n        fcn.0007f916(arg_10h_00, 0, 0x21);\n        *(arg_10h_00 + 5) = 0x11;\n        *(arg_10h_00 + 8) = *0x85011690;\n        *(arg_10h_00 + 0xc) = *0x85011694;\n        *(arg_10h_00 + 0x10) = *0x85011698;\n        *(arg_10h_00 + 0x14) = *0x8501169c;\n        *(arg_10h_00 + 0x18) = *0x850116a0;\n        *(arg_10h_00 + 6) = 4;\n        uVar1 = fcn.0007dae0(arg_8h, 0x21, arg_10h_00, arg_ch, arg_10h);\n        fcn.00036460(arg_10h_00);\n    }\n    return uVar1;\n}\n",
        "token_count": 341
    },
    "0007ddb0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0007ddb0(uint arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t arg_8h_00;\n    int32_t arg_10h_00;\n    uint uVar1;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h_00 = arg_10h + 0x1c;\n    arg_10h_00 = fcn.00036330(arg_8h_00);\n    if (arg_10h_00 == 0) {\n        uVar1 = 0xc000009a;\n    }\n    else {\n        fcn.0007f916(arg_10h_00, 0, arg_8h_00);\n        *(arg_10h_00 + 5) = 0x10;\n        *(arg_10h_00 + 8) = *0x8501167c;\n        *(arg_10h_00 + 0xc) = *0x85011680;\n        *(arg_10h_00 + 0x10) = *0x85011684;\n        *(arg_10h_00 + 0x14) = *0x85011688;\n        *(arg_10h_00 + 0x18) = *0x8501168c;\n        *(arg_10h_00 + 6) = arg_10h;\n        fcn.0007f904(arg_10h_00 + 0x19, arg_ch, arg_10h);\n        uVar1 = fcn.0007dae0(arg_8h, arg_8h_00, arg_10h_00, arg_14h, arg_18h);\n        fcn.00036460(arg_10h_00);\n    }\n    return uVar1;\n}\n",
        "token_count": 423
    },
    "0007de80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0007de80(int32_t param_1, uint *param_2)\n\n{\n    uint uVar1;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (param_1 == 0x3ea) {\n        if (*0x8509ec74 == 0) {\n            fcn.000380a0(0x8509256c);\n            *0x85092578 = 0x85079f50;\n            *0x8509257c = 0x85079ff0;\n            *0x85092580 = 0x8507a0d0;\n            *0x85092584 = 0x8507a460;\n            *0x85092588 = 0x8507a620;\n            *0x8509258c = 0x8507a1b0;\n            *0x85092590 = 0x8507a440;\n            *0x85092594 = 0x8507a6e0;\n            *0x85092598 = 0;\n            *0x8509ec74 = 1;\n        }\n        fcn.000382a0(0x8509256c, &var_4h, 1);\n        *param_2 = 0x85092578;\n        fcn.000382d0(0x8509256c, &var_4h, 1);\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = 0x21590001;\n    }\n    return uVar1;\n}\n",
        "token_count": 353
    },
    "0007df50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0007df50(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t in_EDX;\n    uint var_14h;\n    uint var_10h;\n    uint *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.000382a0(0x8509256c, &var_8h, 1);\n    var_ch = *0x85092598;\n    do {\n        if (var_ch == NULL) {\ncode_r0x0007dfb6:\n            fcn.000382d0(0x8509256c, &var_8h, 1);\n            return (-(var_ch != NULL) & 0xdea6fffb) + 0x21590005;\n        }\n        if ((var_ch[1] == in_EDX) && (var_ch[2] == arg_8h)) {\n            var_ch[6] = var_ch[6] + 1;\n            *arg_ch = var_ch;\n            goto code_r0x0007dfb6;\n        }\n        var_ch = *var_ch;\n    } while( true );\n}\n",
        "token_count": 261
    },
    "0007dff0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0007dff0(uint *param_1)\n\n{\n    uint var_10h;\n    uint *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (param_1 != NULL) {\n        fcn.000382a0(0x8509256c, &var_4h, 1);\n        param_1[6] = param_1[6] + -1;\n        if (param_1[6] == 0) {\n            if (*0x85092598 == param_1) {\n                *0x85092598 = *param_1;\n            }\n            else {\n                for (var_ch = *0x85092598; var_ch != NULL; var_ch = *var_ch) {\n                    if (*var_ch == param_1) {\n                        *var_ch = *param_1;\n                        break;\n                    }\n                }\n            }\n        }\n        fcn.000382d0(0x8509256c, &var_4h, 1);\n        if (param_1[6] < 1) {\n            fcn.00036460(param_1[4]);\n            fcn.00036460(param_1[3]);\n            fcn.00036460(param_1);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 289
    },
    "0007e0d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0007e0d0(int32_t param_1, int32_t *param_2)\n\n{\n    uint uVar1;\n    uint var_1ch;\n    uint var_18h;\n    code **var_14h;\n    uint var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_14h = NULL;\n    if (param_2[2] == 1) {\n        if (*(param_1 + 0xc) == 0) {\n            uVar1 = 0x21590064;\n        }\n        else {\n            for (var_ch = 0; var_ch < **(param_1 + 0xc); var_ch = var_ch + 1) {\n                if (*(*(*(param_1 + 0xc) + 4) + 4 + var_ch * 0x14) == *param_2) {\n                    var_14h = var_ch * 0x14 + *(*(param_1 + 0xc) + 4);\n                    break;\n                }\n            }\n            if (var_14h == NULL) {\n                uVar1 = 0x21590064;\n            }\n            else if ((var_14h[2] == param_2[1]) && (var_14h[4] == param_2[3])) {\n                uVar1 = (**var_14h)();\n            }\n            else {\n                uVar1 = 0x21590064;\n            }\n        }\n    }\n    else {\n        uVar1 = 0x21590064;\n    }\n    return uVar1;\n}\n",
        "token_count": 362
    },
    "0007e1b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0007e1b0(int32_t arg_8h, int32_t *arg_ch, int32_t *arg_10h, uint *arg_14h)\n\n{\n    uint uVar1;\n    uint *arg_8h_00;\n    uint *puVar2;\n    int32_t in_EDX;\n    uint *puVar3;\n    uint var_14h;\n    uint var_10h;\n    uint *var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    fcn.000382a0(0x8509256c, &var_4h, 0);\n    for (var_ch = *0x85092598; (var_ch != NULL && ((var_ch[1] != in_EDX || (var_ch[2] != arg_8h)))); var_ch = *var_ch) {\n    }\n    fcn.000382d0(0x8509256c, &var_4h, 0);\n    if (var_ch == NULL) {\n        arg_8h_00 = fcn.00036360(0x1c);\n        if (arg_8h_00 == NULL) {\n            uVar1 = 0x21590004;\n        }\n        else {\n            arg_8h_00[1] = in_EDX;\n            arg_8h_00[2] = arg_8h;\n            arg_8h_00[6] = 1;\n            arg_8h_00[4] = 0;\n            arg_8h_00[3] = 0;\n            arg_8h_00[5] = 0;\n            if (arg_ch != NULL) {\n                uVar1 = fcn.00036360(*arg_ch * 0x14 + 8);\n                arg_8h_00[3] = uVar1;\n                if (arg_8h_00[3] == 0) {\n                    fcn.00036460(arg_8h_00);\n                    return 0x21590004;\n                }\n                *arg_8h_00[3] = *arg_ch;\n                *(arg_8h_00[3] + 4) = arg_8h_00[3] + 8;\n                for (var_8h = 0; var_8h < *arg_8h_00[3]; var_8h = var_8h + 1) {\n                    puVar2 = arg_ch[1] + var_8h * 0x14;\n                    puVar3 = *(arg_8h_00[3] + 4) + var_8h * 0x14;\n                    *puVar3 = *puVar2;\n                    puVar3[1] = puVar2[1];\n                    puVar3[2] = puVar2[2];\n                    puVar3[3] = puVar2[3];\n                    puVar3[4] = puVar2[4];\n                }\n            }\n            if (arg_10h != NULL) {\n                uVar1 = fcn.00036360(*arg_10h * 0x14 + 8);\n                arg_8h_00[4] = uVar1;\n                if (arg_8h_00[4] == 0) {\n                    fcn.00036460(arg_8h_00[3]);\n                    fcn.00036460(arg_8h_00);\n                    return 0x21590004;\n                }\n                *arg_8h_00[4] = *arg_10h;\n                *(arg_8h_00[4] + 4) = arg_8h_00[4] + 8;\n                for (var_8h = 0; var_8h < *arg_8h_00[4]; var_8h = var_8h + 1) {\n                    puVar3 = arg_10h[1] + var_8h * 0x14;\n                    puVar2 = *(arg_8h_00[4] + 4) + var_8h * 0x14;\n                    *puVar2 = *puVar3;\n                    puVar2[1] = puVar3[1];\n                    puVar2[2] = puVar3[2];\n                    puVar2[3] = puVar3[3];\n                    puVar2[4] = puVar3[4];\n                }\n            }\n            fcn.000382a0(0x8509256c, &var_4h, 1);\n            *arg_8h_00 = *0x85092598;\n            *0x85092598 = arg_8h_00;\n            fcn.000382d0(0x8509256c, &var_4h, 1);\n            *arg_14h = arg_8h_00;\n            uVar1 = 0;\n        }\n    }\n    else {\n        uVar1 = 0x215901fc;\n    }\n    return uVar1;\n}\n",
        "token_count": 1116
    },
    "0007e460": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0007e460(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t **arg_14h)\n\n{\n    int32_t *arg_8h_00;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    int32_t *var_8h;\n    int32_t **var_4h;\n    \n    if (arg_ch != 1) {\n        return 0x21590064;\n    }\n    arg_8h_00 = fcn.00036360(0x10);\n    if (arg_8h_00 == NULL) {\n        return 0x21590004;\n    }\n    fcn.000382a0(0x8509256c, &var_ch, 1);\n    var_10h = 0;\n    while( true ) {\n        if (**(in_ECX + 0x10) <= var_10h) goto code_r0x0007e5fe;\n        var_8h = var_10h * 0x14 + *(*(in_ECX + 0x10) + 4);\n        if (((*var_8h == in_EDX) && (var_8h[1] == arg_8h)) && (var_8h[2] == 1)) break;\n        var_10h = var_10h + 1;\n    }\n    for (var_4h = *(in_ECX + 0x14); var_4h != NULL; var_4h = *var_4h) {\n        if (((*var_8h == *var_4h[2]) && (var_8h[1] == var_4h[2][1])) &&\n           ((var_8h[2] == var_4h[2][2] && (var_4h[2][4] != 0)))) {\n            fcn.000382d0(0x8509256c, &var_ch, 1);\n            fcn.00036460(arg_8h_00);\n            return 0x21590209;\n        }\n    }\n    arg_8h_00[1] = in_ECX;\n    arg_8h_00[2] = var_8h;\n    arg_8h_00[3] = arg_10h;\n    *arg_8h_00 = 0;\n    if (*(in_ECX + 0x14) == 0) {\n        *(in_ECX + 0x14) = arg_8h_00;\n    }\n    else {\n        for (var_4h = *(in_ECX + 0x14); *var_4h != NULL; var_4h = *var_4h) {\n        }\n        *var_4h = arg_8h_00;\n    }\n    *(in_ECX + 0x18) = *(in_ECX + 0x18) + 1;\ncode_r0x0007e5fe:\n    fcn.000382d0(0x8509256c, &var_ch, 1);\n    *arg_14h = arg_8h_00;\n    return 0;\n}\n",
        "token_count": 750
    },
    "0007e620": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0007e620(uint *param_1)\n\n{\n    int32_t iVar1;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint *var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    if (param_1 != NULL) {\n        fcn.000382a0(0x8509256c, &var_8h, 1);\n        iVar1 = param_1[1];\n        var_4h = *(iVar1 + 0x14);\n        var_ch = NULL;\n        for (; var_4h != NULL; var_4h = *var_4h) {\n            if (var_4h == param_1) {\n                if (var_ch == NULL) {\n                    *(iVar1 + 0x14) = *var_4h;\n                }\n                else {\n                    *var_ch = *var_4h;\n                }\n                fcn.00036460(var_4h);\n                *(iVar1 + 0x18) = *(iVar1 + 0x18) + -1;\n                break;\n            }\n            var_ch = param_1;\n        }\n        fcn.000382d0(0x8509256c, &var_8h, 1);\n    }\n    return 0;\n}\n",
        "token_count": 297
    },
    "0007e6e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0007e6e0(uint *param_1, int32_t *param_2)\n\n{\n    int32_t *piVar1;\n    uint var_20h;\n    uint var_1ch;\n    uint *var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint *var_4h;\n    \n    var_8h = 0x21590005;\n    if (param_1 == NULL) {\n        var_8h = 0x21590001;\n    }\n    else {\n        fcn.000382a0(0x8509256c, &var_ch, 0);\n        for (var_4h = *0x85092598; (var_4h != NULL && (var_4h != param_1)); var_4h = *var_4h) {\n        }\n        if (var_4h == NULL) {\n            var_8h = 0x21590001;\n        }\n        else if (param_1[5] == 0) {\n            var_8h = 0x21590005;\n        }\n        else {\n            var_18h = param_1[5];\n            while ((var_18h != NULL &&\n                   ((((piVar1 = var_18h[2],  *piVar1 != *param_2 || (piVar1[1] != param_2[1])) ||\n                     (piVar1[2] != param_2[2])) ||\n                    ((piVar1[3] != param_2[3] || (var_8h = (*var_18h[3])(),  var_8h != 0x2159020a))))))) {\n                var_18h = *var_18h;\n            }\n        }\n        fcn.000382d0(0x8509256c, &var_ch, 0);\n    }\n    return var_8h;\n}\n",
        "token_count": 441
    },
    "0007e7f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0007e7f0(void)\n\n{\n    uint var_64h;\n    uint *var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    var_8h = 3;\n    var_4h = &var_5ch;\n    var_58h = *0x8507c160;\n    var_54h = *0x8507c164;\n    var_50h = *0x8507c168;\n    var_4ch = *0x8507c16c;\n    var_5ch = 0x8507a940;\n    var_44h = *0x8507c170;\n    var_40h = *0x8507c174;\n    var_3ch = *0x8507c178;\n    var_38h = *0x8507c17c;\n    var_48h = 0x8507a990;\n    var_30h = *0x8507c180;\n    var_2ch = *0x8507c184;\n    var_28h = *0x8507c188;\n    var_24h = *0x8507c18c;\n    var_34h = 0x8507a9d0;\n    var_64h = 1;\n    var_60h = &var_20h;\n    var_20h = *0x8507c14c;\n    var_1ch = *0x8507c150;\n    var_18h = *0x8507c154;\n    var_14h = *0x8507c158;\n    var_10h = *0x8507c15c;\n    var_ch = fcn.0007de80();\n    if (var_ch == 0) {\n        var_ch = (**(*0x8509ec78 + 0x14))(1, &var_8h, &var_64h, 0x8509ec7c);\n    }\n    return var_ch;\n}\n",
        "token_count": 594
    },
    "0007e910": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0007e910(void)\n\n{\n    uint uVar1;\n    \n    if (*0x8509ec78 == 0) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = (**(*0x8509ec78 + 0x18))();\n    }\n    return uVar1;\n}\n",
        "token_count": 75
    },
    "0007ea00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0007eac0)\n\nuint __cdecl\nfcn.0007ea00(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (((*0x8509ec78 != 0) && (*0x8509ec7c != 0)) && (*0x8509ec78 != 0)) {\n        (**(*0x8509ec78 + 0x1c))();\n    }\n    return 0;\n}\n",
        "token_count": 253
    },
    "0007eae0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0007eae0(void)\n\n{\n    uint var_64h;\n    uint *var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    var_8h = 1;\n    var_4h = &var_5ch;\n    var_58h = *0x8507c13c;\n    var_54h = *0x8507c140;\n    var_50h = *0x8507c144;\n    var_4ch = *0x8507c148;\n    var_5ch = 0x8507ae60;\n    var_64h = 3;\n    var_60h = &var_48h;\n    var_48h = *0x8507c100;\n    var_44h = *0x8507c104;\n    var_40h = *0x8507c108;\n    var_3ch = *0x8507c10c;\n    var_38h = *0x8507c110;\n    var_34h = *0x8507c114;\n    var_30h = *0x8507c118;\n    var_2ch = *0x8507c11c;\n    var_28h = *0x8507c120;\n    var_24h = *0x8507c124;\n    var_20h = *0x8507c128;\n    var_1ch = *0x8507c12c;\n    var_18h = *0x8507c130;\n    var_14h = *0x8507c134;\n    var_10h = *0x8507c138;\n    var_ch = fcn.0007de80();\n    if (var_ch == 0) {\n        var_ch = (**(*0x8509ec80 + 0x14))(1, &var_8h, &var_64h, 0x8509ec84);\n    }\n    return var_ch;\n}\n",
        "token_count": 589
    },
    "0007ec00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0007ec00(void)\n\n{\n    uint uVar1;\n    \n    if (*0x8509ec80 == 0) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = (**(*0x8509ec80 + 0x18))();\n    }\n    return uVar1;\n}\n",
        "token_count": 75
    },
    "0007ec30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0007ec30(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (((*0x8509ec80 != 0) && (*0x8509ec84 != 0)) && (*0x8509ec80 != 0)) {\n        (**(*0x8509ec80 + 0x1c))();\n    }\n    return 0;\n}\n",
        "token_count": 181
    },
    "0007ece0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0007ece0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (((*0x8509ec80 != 0) && (*0x8509ec84 != 0)) && (*0x8509ec80 != 0)) {\n        (**(*0x8509ec80 + 0x1c))();\n    }\n    return 0;\n}\n",
        "token_count": 207
    },
    "0007eda0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0007eda0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (((*0x8509ec80 != 0) && (*0x8509ec84 != 0)) && (*0x8509ec80 != 0)) {\n        (**(*0x8509ec80 + 0x1c))();\n    }\n    return 0;\n}\n",
        "token_count": 207
    },
    "0007ee90": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0007ee90(void)\n\n{\n    uint var_f0h;\n    uint var_ech;\n    uint var_e8h;\n    uint var_e4h;\n    uint var_e0h;\n    uint var_dch;\n    uint var_d8h;\n    uint var_d4h;\n    uint var_d0h;\n    uint var_cch;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    var_8h = 0xb;\n    var_4h = &var_f0h;\n    var_ech = *0x8507c050;\n    var_e8h = *0x8507c054;\n    var_e4h = *0x8507c058;\n    var_e0h = *0x8507c05c;\n    var_f0h = 0x8507b140;\n    var_d8h = *0x8507c060;\n    var_d4h = *0x8507c064;\n    var_d0h = *0x8507c068;\n    var_cch = *0x8507c06c;\n    var_dch = 0x8507b180;\n    var_c4h = *0x8507c070;\n    var_c0h = *0x8507c074;\n    var_bch = *0x8507c078;\n    var_b8h = *0x8507c07c;\n    var_c8h = 0x8507b1b0;\n    var_b0h = *0x8507c080;\n    var_ach = *0x8507c084;\n    var_a8h = *0x8507c088;\n    var_a4h = *0x8507c08c;\n    var_b4h = 0x8507b200;\n    var_9ch = *0x8507c090;\n    var_98h = *0x8507c094;\n    var_94h = *0x8507c098;\n    var_90h = *0x8507c09c;\n    var_a0h = 0x8507b230;\n    var_88h = *0x8507c0a0;\n    var_84h = *0x8507c0a4;\n    var_80h = *0x8507c0a8;\n    var_7ch = *0x8507c0ac;\n    var_8ch = 0x8507b260;\n    var_74h = *0x8507c0b0;\n    var_70h = *0x8507c0b4;\n    var_6ch = *0x8507c0b8;\n    var_68h = *0x8507c0bc;\n    var_78h = 0x8507b2b0;\n    var_60h = *0x8507c0c0;\n    var_5ch = *0x8507c0c4;\n    var_58h = *0x8507c0c8;\n    var_54h = *0x8507c0cc;\n    var_64h = 0x8507b300;\n    var_4ch = *0x8507c0d0;\n    var_48h = *0x8507c0d4;\n    var_44h = *0x8507c0d8;\n    var_40h = *0x8507c0dc;\n    var_50h = 0x8507b330;\n    var_38h = *0x8507c0e0;\n    var_34h = *0x8507c0e4;\n    var_30h = *0x8507c0e8;\n    var_2ch = *0x8507c0ec;\n    var_3ch = 0x8507b370;\n    var_24h = *0x8507c0f0;\n    var_20h = *0x8507c0f4;\n    var_1ch = *0x8507c0f8;\n    var_18h = *0x8507c0fc;\n    var_28h = 0x8507b3a0;\n    var_ch = fcn.0007de80();\n    if (var_ch == 0) {\n        var_ch = (**(*0x8509ec88 + 0x14))(1, &var_8h, 0, 0x8509ec8c);\n    }\n    return var_ch;\n}\n",
        "token_count": 1325
    },
    "0007f120": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0007f120(void)\n\n{\n    if (*0x8509ec88 != 0) {\n        (**(*0x8509ec88 + 0x18))();\n    }\n    return;\n}\n",
        "token_count": 48
    },
    "0007f2b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0007f2b0(int32_t param_1)\n\n{\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(param_1 + 0x18) == 0) {\n        var_ch = 0;\n    }\n    else {\n        var_ch = param_1 + 0x1c;\n    }\n    fcn.00023920(*(param_1 + 0x10), *(param_1 + 0x14), var_ch, param_1 + 0x20);\n    return;\n}\n",
        "token_count": 131
    },
    "0007f3d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0007f3d0(void)\n\n{\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    var_8h = 4;\n    var_4h = &var_60h;\n    var_5ch = *0x8507c010;\n    var_58h = *0x8507c014;\n    var_54h = *0x8507c018;\n    var_50h = *0x8507c01c;\n    var_60h = 0x8507b500;\n    var_48h = *0x8507c020;\n    var_44h = *0x8507c024;\n    var_40h = *0x8507c028;\n    var_3ch = *0x8507c02c;\n    var_4ch = 0x8507b540;\n    var_34h = *0x8507c030;\n    var_30h = *0x8507c034;\n    var_2ch = *0x8507c038;\n    var_28h = *0x8507c03c;\n    var_38h = 0x8507b570;\n    var_20h = *0x8507c040;\n    var_1ch = *0x8507c044;\n    var_18h = *0x8507c048;\n    var_14h = *0x8507c04c;\n    var_24h = 0x8507b5b0;\n    var_ch = fcn.0007de80();\n    if (var_ch == 0) {\n        var_ch = (**(*0x8509ec90 + 0x14))(1, &var_8h, 0, 0x8509ec94);\n    }\n    return var_ch;\n}\n",
        "token_count": 553
    },
    "0007f4e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0007f4e0(void)\n\n{\n    if (*0x8509ec90 != 0) {\n        (**(*0x8509ec90 + 0x18))();\n    }\n    return;\n}\n",
        "token_count": 50
    },
    "00034e80": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00034e80(uint16_t *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    \n    if (*arg_8h == 2) {\n        uVar1 = fcn.00034ee0(2, arg_8h + 2, arg_ch, arg_10h);\n    }\n    else if (*arg_8h == 0x17) {\n        uVar1 = fcn.00034ee0(*arg_8h, arg_8h + 4, arg_ch, arg_10h);\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 154
    },
    "000382a0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000382a0(uint arg_8h, uint8_t *arg_ch, uint arg_10h)\n\n{\n    uint8_t uVar1;\n    \n    uVar1 = (**0x8500d004)();\n    *arg_ch = uVar1;\n    if (*arg_ch < 2) {\n        (**0x8500d000)();\n    }\n    fcn.000380d0(arg_8h, arg_10h);\n    return;\n}\n",
        "token_count": 105
    },
    "000382d0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000382d0(uint arg_8h, uint8_t *arg_ch, uint arg_10h)\n\n{\n    fcn.000381b0(arg_8h, arg_10h);\n    if (*arg_ch < 2) {\n        (**0x8500d008)();\n    }\n    return;\n}\n",
        "token_count": 74
    },
    "00038300": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00038300(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    fcn.000382a0(arg_8h, &var_4h, 1);\n    do {\n        iVar1 = fcn.00045cc0(arg_8h + 8, 0, 0);\n    } while (iVar1 != 0);\n    fcn.00052470(arg_8h, 0);\n    fcn.00052470(arg_8h + 4, 0);\n    fcn.00052470(arg_8h + 8, 0);\n    if (var_4h < 2) {\n        (**0x8500d008)();\n    }\n    return;\n}\n",
        "token_count": 182
    },
    "00066410": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00066410(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    \n    if (*(arg_8h + 0x74) == 2) {\n        uVar1 = fcn.00066cf0(arg_ch, arg_10h);\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 96
    },
    "00070720": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.00070720(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    fcn.00035650(arg_8h + 0x130);\n    for (var_4h = 0; var_4h < 2; var_4h = var_4h + 1) {\n        iVar1 = fcn.0001a700(arg_8h + 0x2c + var_4h * 0x18, 0x8506cbb0, arg_8h + 0x28 + var_4h * 0x18);\n        if (iVar1 == 0) {\n            *(arg_8h + 0x28 + var_4h * 0x18) = 1;\n        }\n        else {\n            *(arg_8h + 0x28 + var_4h * 0x18) = 3;\n            var_8h = var_8h + 1;\n        }\n    }\n    fcn.000356c0(arg_8h + 0x130);\n    if (var_8h == 2) {\n        uVar2 = 0x21590007;\n    }\n    else {\n        *(arg_8h + 0x1c) = arg_ch;\n        *(arg_8h + 0x20) = arg_10h;\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 397
    },
    "000708d0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000708d0(int32_t arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    uint uVar1;\n    \n    if ((arg_ch == 2) && (arg_14h == 0xc)) {\n        fcn.0007f904(arg_8h + 0x134, arg_10h, 0xc);\n        uVar1 = 0;\n    }\n    else if (arg_ch == 5) {\n        *(arg_8h + 0x140) = arg_10h;\n        uVar1 = 0;\n    }\n    else if (arg_ch == 0xb) {\n        *(arg_8h + 0x144) = arg_10h;\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = 0x21590001;\n    }\n    return uVar1;\n}\n",
        "token_count": 208
    },
    "00050480": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00050480(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    iVar1 = fcn.000388c0(arg_8h, arg_ch, &var_8h);\n    if ((iVar1 != 0) && (var_8h == *0x8507c5dc)) {\n        if (var_4h == 0xc001ba5e) {\n            return 1;\n        }\n        if (var_4h < 4) {\n            return var_4h + 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 156
    },
    "00078710": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00078710(uint noname_0, unkuint3 *arg_ch, uint32_t arg_10h)\n\n{\n    uint uVar1;\n    uint32_t in_ECX;\n    uint32_t var_4h;\n    \n    if (arg_10h < 3) {\n        uVar1 = 0;\n    }\n    else {\n        var_4h = in_ECX & 0xff000000 | *arg_ch;\n        fcn.00077b70(&var_4h);\n        if ((var_4h & 0x4000) == 0) {\n            if (((var_4h & 0x100) == 0) || ((var_4h & 0x400) != 0)) {\n                uVar1 = 0;\n            }\n            else {\n                uVar1 = 1;\n            }\n        }\n        else {\n            uVar1 = 0;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 215
    },
    "0001ef00": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0001ef00(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h, uint arg_2ch)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    code *pcVar2;\n    uint arg_ch_00;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    if (((arg_ch != -1) && (arg_ch != -2)) && (iVar1 = fcn.00035ba0(arg_ch, &var_4h),  iVar1 == 0)) {\n        iVar1 = (**0x8500d2a0)(var_4h, 0, **0x8500d08c, 0, &var_8h, 0);\n        if (iVar1 == 0) {\n            if ((((*(var_8h + 0x2c) & 0x400000) != 0) && (iVar1 = fcn.00017820(*(var_8h + 4)),  iVar1 != 0)) &&\n               (iVar1 = fcn.0005e660(),  iVar1 != *(*0x8508fab0 + 0x14))) {\n                arg_ch_00 = 0;\n                arg_8h_00 = fcn.0005e660();\n                fcn.0001fca0(arg_8h_00, arg_ch_00);\n            }\n            (**0x8500d2e4)();\n        }\n        fcn.00035bf0(arg_ch, var_4h);\n    }\n    pcVar2 = fcn.000684a0(arg_8h);\n    (*pcVar2)(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, arg_24h, arg_28h, arg_2ch);\n    return;\n}\n",
        "token_count": 468
    },
    "0001fca0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0001fca0(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    fcn.000382a0(0x850928bc, &var_4h, 1);\n    for (var_8h = 0; (var_8h < *0x850928c8 && (*(*0x850928cc + var_8h * 8) != arg_8h)); var_8h = var_8h + 1) {\n    }\n    if ((*0x850928c8 <= var_8h) &&\n       (iVar1 = fcn.00036390(0x850928cc, *0x850928c8 << 3, *0x850928c8 * 8 + 8),  iVar1 != -1)) {\n        *(*0x850928cc + *0x850928c8 * 8) = arg_8h;\n        *(*0x850928cc + 4 + *0x850928c8 * 8) = arg_ch;\n        *0x850928c8 = *0x850928c8 + 1;\n    }\n    fcn.000382d0(0x850928bc, &var_4h, 1);\n    return;\n}\n",
        "token_count": 304
    },
    "000238a0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000238a0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint uVar1;\n    \n    if (*0x8508f98c == -1) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = fcn.00022a50(*0x8508f98c, arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch);\n    }\n    return uVar1;\n}\n",
        "token_count": 139
    },
    "000238e0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000238e0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    \n    if (*0x8508f98c == -1) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = fcn.00022780(*0x8508f98c, arg_8h, arg_ch, arg_10h, arg_14h);\n    }\n    return uVar1;\n}\n",
        "token_count": 116
    },
    "00023920": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00023920(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    \n    if (*0x8508f98c == -1) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = fcn.000226a0(*0x8508f98c, arg_8h, arg_ch, arg_10h, arg_14h);\n    }\n    return uVar1;\n}\n",
        "token_count": 116
    },
    "00023960": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00023960(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    \n    if (*0x8508f98c == -1) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = fcn.000225e0(*0x8508f98c, arg_8h, arg_ch, arg_10h, arg_14h);\n    }\n    return uVar1;\n}\n",
        "token_count": 116
    },
    "000239a0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000239a0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint uVar1;\n    \n    if (*0x8508f98c == -1) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = fcn.00022420(*0x8508f98c, arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch);\n    }\n    return uVar1;\n}\n",
        "token_count": 138
    },
    "000239e0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000239e0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint uVar1;\n    \n    if (*0x8508f98c == -1) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = fcn.000222c0(*0x8508f98c, arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch);\n    }\n    return uVar1;\n}\n",
        "token_count": 139
    },
    "00023a20": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00023a20(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    uint uVar1;\n    \n    if (*0x8508f98c == -1) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = fcn.00022190(*0x8508f98c, arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n    }\n    return uVar1;\n}\n",
        "token_count": 149
    },
    "00023a70": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00023a70(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    \n    if (*0x8508f98c == -1) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = fcn.00021e50(*0x8508f98c, arg_8h, arg_ch, arg_10h);\n    }\n    return uVar1;\n}\n",
        "token_count": 106
    },
    "00023aa0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00023aa0(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    \n    if (*0x8508f98c == -1) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = fcn.00021f00(*0x8508f98c, arg_8h, arg_ch);\n    }\n    return uVar1;\n}\n",
        "token_count": 95
    },
    "00023ad0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00023ad0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint uVar1;\n    \n    if (*0x8508f98c == -1) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = fcn.00022030(*0x8508f98c, arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n    }\n    return uVar1;\n}\n",
        "token_count": 127
    },
    "00023b10": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00023b10(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    \n    if (*0x8508f98c == -1) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = fcn.00021c80(*0x8508f98c, arg_8h, arg_ch, arg_10h);\n    }\n    return uVar1;\n}\n",
        "token_count": 106
    },
    "00023b40": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00023b40(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint uVar1;\n    \n    if (*0x8508f98c == -1) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = fcn.00021d60(*0x8508f98c, arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n    }\n    return uVar1;\n}\n",
        "token_count": 128
    },
    "00023c90": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00023c90(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    \n    if (*0x8508f98c == -1) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = fcn.00022b10(*0x8508f98c, arg_8h, arg_ch);\n    }\n    return uVar1;\n}\n",
        "token_count": 95
    },
    "00035ba0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00035ba0(uint32_t arg_8h, uint32_t *arg_ch)\n\n{\n    uint uVar1;\n    \n    if ((((arg_8h & 0x80000000) == 0x80000000) && (arg_8h != 0xfffffffe)) && (arg_8h != 0xffffffff)) {\n        *arg_ch = arg_8h;\n        *arg_ch = arg_8h;\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = fcn.0007f83e(0xffffffff, arg_8h, 0xffffffff, arg_ch, 0, 0x200, 2);\n    }\n    return uVar1;\n}\n",
        "token_count": 163
    },
    "00036d50": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00036d50(uint arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    \n    *arg_ch = 0;\n    arg_ch[1] = 0;\n    arg_ch[2] = 0;\n    arg_ch[3] = 0;\n    arg_ch[4] = 0;\n    arg_ch[5] = 0;\n    arg_ch[6] = 0;\n    arg_ch[7] = 0;\n    arg_ch[8] = 0;\n    uVar1 = fcn.00036a70(arg_8h);\n    arg_ch[5] = uVar1;\n    if (arg_ch[5] == -1) {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 190
    },
    "00036da0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00036da0(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t arg_8h_00;\n    uint uVar1;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.00036c20(arg_8h, 0);\n    if (arg_8h_00 == -1) {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        *arg_ch = 0;\n        arg_ch[1] = 0;\n        arg_ch[2] = 0;\n        arg_ch[3] = 0;\n        arg_ch[4] = 0;\n        arg_ch[5] = 0;\n        arg_ch[6] = 0;\n        arg_ch[7] = 0;\n        arg_ch[8] = 0;\n        uVar1 = fcn.00036a70(arg_8h_00);\n        arg_ch[5] = uVar1;\n        fcn.00036970(arg_8h_00);\n        if (arg_ch[5] == -1) {\n            uVar1 = 0xffffffff;\n        }\n        else {\n            uVar1 = 0;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 277
    },
    "000527e0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.000527e0(int32_t arg_8h, uint arg_ch, uint arg_10h, uint *arg_14h, int32_t arg_18h, uint arg_1ch, int32_t arg_20h, \n            int32_t arg_24h)\n\n{\n    int16_t iVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint *var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    code *var_4h;\n    \n    if (*0x8507c53c != -1) {\n        var_ch = *(arg_8h + *0x8507c53c);\n        var_4h = *(var_ch + 0x174);\n        iVar3 = fcn.000393c0(var_ch, &var_8h);\n        if (iVar3 != 0) {\n            (*var_4h)(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, arg_24h);\n        }\n        if (arg_20h == arg_24h) {\n            iVar3 = fcn.0004b810(var_8h, arg_14h, arg_18h, arg_1ch, arg_24h, 0);\n            if (iVar3 != 0) {\n                (*var_4h)(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, arg_24h);\n            }\n        }\n        else {\n            iVar3 = fcn.0004b810(var_8h, arg_14h, arg_18h, arg_1ch, arg_20h, 1);\n            if (iVar3 == 0) {\n                if (arg_18h == 0xe) {\n                    var_10h = arg_14h;\n                    iVar1 = *(arg_14h + 3);\n                    iVar2 = fcn.000365f0(0x800);\n                    if (iVar1 == iVar2) {\n                        var_20h = *var_10h;\n                        var_1ch = var_10h[1];\n                        var_18h = var_10h[2];\n                        var_14h._0_2_ = *(var_10h + 3);\n                        var_14h._0_2_ = fcn.000365f0(0x7ff);\n                        (*var_4h)(arg_8h, arg_ch, arg_10h, &var_20h, 0xe, arg_1ch, arg_20h, arg_24h);\n                    }\n                }\n            }\n            else {\n                (*var_4h)(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, arg_24h);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 703
    },
    "00052950": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00052950(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t var_8h;\n    uint var_4h;\n    \n    if (*0x8507c53c == 0xffffffff) {\n        for (var_8h = 0; var_8h < 0x400; var_8h = var_8h + 1) {\n            if (*(arg_8h + var_8h) == arg_ch) {\n                *0x8507c53c = var_8h;\n                break;\n            }\n        }\n        if (*0x8507c53c == 0xffffffff) {\n            return 0;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 164
    },
    "00065260": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00065260(code **arg_8h)\n\n{\n    uint32_t var_4h;\n    \n    if (*(arg_8h + 1) == *(arg_8h + 5)) {\n        var_4h = *(arg_8h + 6);\n        if (var_4h == 0) {\n            var_4h = (**arg_8h)(arg_8h);\n            if (var_4h != 0xffffffff) {\n                *(arg_8h + 5) = *(arg_8h + 5) + '\\x01';\n                *(arg_8h + 1) = *(arg_8h + 5);\n                *(arg_8h + *(arg_8h + 5) + 0x112) = var_4h;\n                goto code_r0x00065301;\n            }\n        }\n        *(arg_8h + 0x40) = 1;\n        *(arg_8h + 6) = 1;\n        var_4h = var_4h & 0xffffff00;\n    }\n    else {\n        *(arg_8h + 1) = *(arg_8h + 1) + '\\x01';\n        var_4h = *(arg_8h + *(arg_8h + 1) + 0x112);\ncode_r0x00065301:\n        *(arg_8h + *(arg_8h + 3) + 0x212) = var_4h;\n        *(arg_8h + 3) = *(arg_8h + 3) + '\\x01';\n        var_4h = arg_8h & 0xffffff00 | var_4h & 0xff;\n    }\n    return var_4h;\n}\n",
        "token_count": 405
    },
    "0007dba0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0007dba0(int32_t arg_8h, uint arg_ch, int32_t *arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    int32_t var_5h;\n    \n    var_5h._0_1_ = '\\0';\n    (**0x8500d0d4)(&var_18h, 0, 0);\n    *(arg_8h + 0x2c) = &var_18h;\n    *(arg_8h + 0x28) = arg_10h;\n    if (arg_14h != -1) {\n        iVar1 = *(arg_8h + 0x60);\n        var_1ch = iVar1 + -0x24;\n        *(iVar1 + -8) = 0x85053540;\n        *(iVar1 + -4) = &var_18h;\n        *(iVar1 + -0x21) = 0;\n        *(iVar1 + -0x21) = 0x40;\n        *(iVar1 + -0x21) = *(iVar1 + -0x21) | 0x80;\n        *(iVar1 + -0x21) = *(iVar1 + -0x21) | 0x20;\n    }\n    *NULL = (**0x8500d18c)();\n    if (*NULL == 0x103) {\n        if (arg_14h == -1) {\n            (**0x8500d19c)(&var_18h, 0, 0, 0, 0);\n        }\n        else {\n            _var_28h = fcn.0007f8fe(arg_14h, arg_14h >> 0x1f, 0xffffd8f0, 0xffffffff);\n            iVar1 = (**0x8500d19c)(&var_18h, 0, 0, 0, &var_28h);\n            if (iVar1 == 0x102) {\n                var_5h._0_1_ = '\\x01';\n                (**0x8500d240)(arg_8h);\n                (**0x8500d19c)(&var_18h, 0, 0, 0, 0);\n            }\n        }\n    }\n    if (arg_14h != -1) {\n        (**0x8500d2ec)();\n    }\n    if (stack0xfffffff8 == 0x103) {\n        unique0x00007a00 = *arg_10h;\n    }\n    if (var_5h != '\\0') {\n        stack0xfffffff8 = 0x102;\n    }\n    return stack0xfffffff8;\n}\n",
        "token_count": 643
    },
    "00038790": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00038790(uint8_t *arg_8h)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    int32_t var_ch;\n    uint8_t *var_6h;\n    \n    do {\n        var_6h._0_1_ = 0;\n        stack0xfffffff8 = arg_8h;\n        for (var_ch = 0; var_ch < 8; var_ch = var_ch + 1) {\n            iVar1 = fcn.0007f77e();\n            uVar2 = iVar1 % 0x3e;\n            if (uVar2 < 10) {\n                *stack0xfffffff8 = uVar2 + 0x30;\n            }\n            else if (uVar2 - 10 < 0x1a) {\n                *stack0xfffffff8 = uVar2 + 0x37;\n            }\n            else {\n                *stack0xfffffff8 = uVar2 + 0x3d;\n            }\n            var_6h._0_1_ = var_6h + *stack0xfffffff8;\n            *0x8 = stack0xfffffff8 + 1;\n        }\n    } while ((((*arg_8h == 0x41) && (arg_8h[1] == *arg_8h + 1)) && (arg_8h[2] == arg_8h[1] + 1)) &&\n            (arg_8h[3] == arg_8h[2] + 1));\n    *stack0xfffffff8 = var_6h / 0x1a + 0x41;\n    stack0xfffffff8[1] = 0x7a - var_6h % 0x1a;\n    return;\n}\n",
        "token_count": 406
    },
    "00031e80": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00031e80(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    uint32_t uVar13;\n    uint32_t uVar14;\n    uint32_t uVar15;\n    uint32_t uVar16;\n    uint32_t uVar17;\n    uint32_t var_12ch;\n    uint32_t var_128h;\n    uint32_t var_124h;\n    uint32_t var_120h;\n    uint var_11ch;\n    uint var_118h;\n    uint var_114h;\n    uint var_110h;\n    uint var_10ch;\n    uint var_108h;\n    uint var_104h;\n    uint var_100h;\n    uint var_fch;\n    uint var_f8h;\n    uint var_f4h;\n    uint var_f0h;\n    uint var_ech;\n    uint var_e8h;\n    uint var_e4h;\n    uint var_e0h;\n    uint var_dch;\n    uint var_d8h;\n    uint var_98h;\n    uint32_t *var_58h;\n    int32_t var_54h;\n    int32_t var_50h;\n    int32_t var_4ch;\n    int32_t var_48h;\n    uint32_t var_44h;\n    int32_t var_40h;\n    int32_t var_3ch;\n    int32_t var_38h;\n    uint32_t var_34h;\n    uint32_t var_30h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    uint32_t var_24h;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    for (var_54h = 0; var_54h < 0x10; var_54h = var_54h + 1) {\n        (&var_50h)[var_54h] = 0;\n    }\n    if (0x10 < arg_ch) {\n        arg_ch = 0x10;\n    }\n    for (var_54h = 0; var_54h < arg_ch; var_54h = var_54h + 1) {\n        (&var_50h)[var_54h] = *(arg_10h + var_54h);\n    }\n    if (arg_ch < 0xb) {\n        *(arg_8h + 0x80) = 1;\n    }\n    else {\n        *(arg_8h + 0x80) = 0;\n    }\n    var_58h = &var_d8h;\n    var_12ch = var_50h << 0x18 | var_4ch << 0x10 | var_48h << 8 | var_44h;\n    var_128h = var_40h << 0x18 | var_3ch << 0x10 | var_38h << 8 | var_34h;\n    var_124h = var_30h << 0x18 | var_2ch << 0x10 | var_28h << 8 | var_24h;\n    var_120h = var_20h << 0x18 | var_1ch << 0x10 | var_18h << 8 | var_14h;\n    while( true ) {\n        uVar8 = var_12ch ^ *(var_1ch * 4 + -0x7aff09a8) ^ *(var_14h * 4 + -0x7aff05a8) ^ *(var_20h * 4 + -0x7aff01a8) ^\n                *(var_18h * 4 + -0x7afefda8) ^ *(var_30h * 4 + -0x7aff01a8);\n        uVar1 = uVar8 & 0xff;\n        uVar5 = uVar8 >> 8 & 0xff;\n        uVar9 = uVar8 >> 0x10 & 0xff;\n        uVar2 = uVar8 >> 0x18;\n        uVar10 = var_124h ^ *(uVar2 * 4 + -0x7aff09a8) ^ *(uVar5 * 4 + -0x7aff05a8) ^ *(uVar9 * 4 + -0x7aff01a8) ^\n                 *(uVar1 * 4 + -0x7afefda8) ^ *(var_28h * 4 + -0x7afefda8);\n        uVar3 = uVar10 & 0xff;\n        uVar6 = uVar10 >> 8 & 0xff;\n        uVar11 = uVar10 >> 0x10 & 0xff;\n        uVar4 = uVar10 >> 0x18;\n        uVar12 = var_120h ^ *(uVar3 * 4 + -0x7aff09a8) ^ *(uVar6 * 4 + -0x7aff05a8) ^ *(uVar11 * 4 + -0x7aff01a8) ^\n                 *(uVar4 * 4 + -0x7afefda8) ^ *(var_2ch * 4 + -0x7aff09a8);\n        uVar7 = uVar12 >> 8 & 0xff;\n        uVar13 = uVar12 >> 0x10 & 0xff;\n        uVar14 = var_128h ^ *(uVar7 * 4 + -0x7aff09a8) ^ *(uVar13 * 4 + -0x7aff05a8) ^\n                 *((uVar12 & 0xff) * 4 + -0x7aff01a8) ^ *((uVar12 >> 0x18) * 4 + -0x7afefda8) ^\n                 *(var_24h * 4 + -0x7aff05a8);\n        *var_58h = *((uVar12 >> 0x18) * 4 + -0x7aff09a8) ^ *(uVar13 * 4 + -0x7aff05a8) ^ *(uVar3 * 4 + -0x7aff01a8) ^\n                   *(uVar6 * 4 + -0x7afefda8) ^ *(uVar5 * 4 + -0x7aff09a8);\n        var_58h[1] = *(uVar7 * 4 + -0x7aff09a8) ^ *((uVar12 & 0xff) * 4 + -0x7aff05a8) ^ *(uVar11 * 4 + -0x7aff01a8) ^\n                     *(uVar4 * 4 + -0x7afefda8) ^ *(uVar6 * 4 + -0x7aff05a8);\n        var_58h[2] = *((uVar14 >> 0x18) * 4 + -0x7aff09a8) ^ *((uVar14 >> 0x10 & 0xff) * 4 + -0x7aff05a8) ^\n                     *(uVar1 * 4 + -0x7aff01a8) ^ *(uVar5 * 4 + -0x7afefda8) ^ *(uVar13 * 4 + -0x7aff01a8);\n        var_58h[3] = *((uVar14 >> 8 & 0xff) * 4 + -0x7aff09a8) ^ *((uVar14 & 0xff) * 4 + -0x7aff05a8) ^\n                     *(uVar9 * 4 + -0x7aff01a8) ^ *(uVar2 * 4 + -0x7afefda8) ^ *((uVar14 >> 0x18) * 4 + -0x7afefda8);\n        uVar6 = uVar12 ^ *(uVar11 * 4 + -0x7aff09a8) ^ *(uVar3 * 4 + -0x7aff05a8) ^ *(uVar4 * 4 + -0x7aff01a8) ^\n                *(uVar6 * 4 + -0x7afefda8) ^ *(uVar2 * 4 + -0x7aff01a8);\n        uVar13 = uVar6 & 0xff;\n        uVar2 = uVar6 >> 8 & 0xff;\n        uVar7 = uVar6 >> 0x10 & 0xff;\n        uVar8 = uVar8 ^ *((uVar6 >> 0x18) * 4 + -0x7aff09a8) ^ *(uVar2 * 4 + -0x7aff05a8) ^ *(uVar7 * 4 + -0x7aff01a8) ^\n                *(uVar13 * 4 + -0x7afefda8) ^ *(uVar5 * 4 + -0x7afefda8);\n        uVar15 = uVar8 & 0xff;\n        uVar3 = uVar8 >> 8 & 0xff;\n        uVar5 = uVar8 >> 0x10 & 0xff;\n        uVar9 = uVar10 ^ *(uVar15 * 4 + -0x7aff09a8) ^ *(uVar3 * 4 + -0x7aff05a8) ^ *(uVar5 * 4 + -0x7aff01a8) ^\n                *((uVar8 >> 0x18) * 4 + -0x7afefda8) ^ *(uVar9 * 4 + -0x7aff09a8);\n        uVar16 = uVar9 & 0xff;\n        uVar4 = uVar9 >> 8 & 0xff;\n        uVar10 = uVar9 >> 0x10 & 0xff;\n        uVar17 = uVar9 >> 0x18;\n        uVar11 = uVar14 ^ *(uVar4 * 4 + -0x7aff09a8) ^ *(uVar10 * 4 + -0x7aff05a8) ^ *(uVar16 * 4 + -0x7aff01a8) ^\n                 *(uVar17 * 4 + -0x7afefda8) ^ *(uVar1 * 4 + -0x7aff05a8);\n        uVar1 = uVar11 >> 8 & 0xff;\n        uVar12 = uVar11 >> 0x10 & 0xff;\n        var_58h[4] = *(uVar13 * 4 + -0x7aff09a8) ^ *(uVar2 * 4 + -0x7aff05a8) ^ *((uVar11 >> 0x18) * 4 + -0x7aff01a8) ^\n                     *(uVar12 * 4 + -0x7afefda8) ^ *(uVar17 * 4 + -0x7aff09a8);\n        var_58h[5] = *(uVar7 * 4 + -0x7aff09a8) ^ *((uVar6 >> 0x18) * 4 + -0x7aff05a8) ^ *(uVar1 * 4 + -0x7aff01a8) ^\n                     *((uVar11 & 0xff) * 4 + -0x7afefda8) ^ *(uVar12 * 4 + -0x7aff05a8);\n        var_58h[6] = *(uVar15 * 4 + -0x7aff09a8) ^ *(uVar3 * 4 + -0x7aff05a8) ^ *(uVar17 * 4 + -0x7aff01a8) ^\n                     *(uVar10 * 4 + -0x7afefda8) ^ *(uVar13 * 4 + -0x7aff01a8);\n        var_58h[7] = *(uVar5 * 4 + -0x7aff09a8) ^ *((uVar8 >> 0x18) * 4 + -0x7aff05a8) ^ *(uVar4 * 4 + -0x7aff01a8) ^\n                     *(uVar16 * 4 + -0x7afefda8) ^ *(uVar15 * 4 + -0x7afefda8);\n        uVar1 = uVar6 ^ *(uVar12 * 4 + -0x7aff09a8) ^ *((uVar11 & 0xff) * 4 + -0x7aff05a8) ^\n                *((uVar11 >> 0x18) * 4 + -0x7aff01a8) ^ *(uVar1 * 4 + -0x7afefda8) ^ *(uVar17 * 4 + -0x7aff01a8);\n        uVar12 = uVar1 & 0xff;\n        uVar15 = uVar1 >> 8 & 0xff;\n        uVar2 = uVar1 >> 0x10 & 0xff;\n        uVar13 = uVar1 >> 0x18;\n        uVar3 = uVar9 ^ *(uVar13 * 4 + -0x7aff09a8) ^ *(uVar15 * 4 + -0x7aff05a8) ^ *(uVar2 * 4 + -0x7aff01a8) ^\n                *(uVar12 * 4 + -0x7afefda8) ^ *(uVar4 * 4 + -0x7afefda8);\n        uVar9 = uVar3 & 0xff;\n        uVar17 = uVar3 >> 8 & 0xff;\n        uVar4 = uVar3 >> 0x10 & 0xff;\n        uVar14 = uVar3 >> 0x18;\n        uVar5 = uVar11 ^ *(uVar9 * 4 + -0x7aff09a8) ^ *(uVar17 * 4 + -0x7aff05a8) ^ *(uVar4 * 4 + -0x7aff01a8) ^\n                *(uVar14 * 4 + -0x7afefda8) ^ *(uVar10 * 4 + -0x7aff09a8);\n        uVar10 = uVar5 >> 8 & 0xff;\n        uVar6 = uVar5 >> 0x10 & 0xff;\n        uVar7 = uVar8 ^ *(uVar10 * 4 + -0x7aff09a8) ^ *(uVar6 * 4 + -0x7aff05a8) ^ *((uVar5 & 0xff) * 4 + -0x7aff01a8) ^\n                *((uVar5 >> 0x18) * 4 + -0x7afefda8) ^ *(uVar16 * 4 + -0x7aff05a8);\n        var_58h[8] = *(uVar12 * 4 + -0x7aff09a8) ^ *(uVar15 * 4 + -0x7aff05a8) ^ *((uVar7 >> 0x18) * 4 + -0x7aff01a8) ^\n                     *((uVar7 >> 0x10 & 0xff) * 4 + -0x7afefda8) ^ *(uVar6 * 4 + -0x7aff09a8);\n        var_58h[9] = *(uVar2 * 4 + -0x7aff09a8) ^ *(uVar13 * 4 + -0x7aff05a8) ^ *((uVar7 >> 8 & 0xff) * 4 + -0x7aff01a8)\n                     ^ *((uVar7 & 0xff) * 4 + -0x7afefda8) ^ *((uVar7 >> 0x18) * 4 + -0x7aff05a8);\n        var_58h[10] = *(uVar9 * 4 + -0x7aff09a8) ^ *(uVar17 * 4 + -0x7aff05a8) ^ *((uVar5 >> 0x18) * 4 + -0x7aff01a8) ^\n                      *(uVar6 * 4 + -0x7afefda8) ^ *(uVar15 * 4 + -0x7aff01a8);\n        var_58h[0xb] = *(uVar4 * 4 + -0x7aff09a8) ^ *(uVar14 * 4 + -0x7aff05a8) ^ *(uVar10 * 4 + -0x7aff01a8) ^\n                       *((uVar5 & 0xff) * 4 + -0x7afefda8) ^ *(uVar17 * 4 + -0x7afefda8);\n        var_12ch = uVar5 ^ *(uVar4 * 4 + -0x7aff09a8) ^ *(uVar9 * 4 + -0x7aff05a8) ^ *(uVar14 * 4 + -0x7aff01a8) ^\n                   *(uVar17 * 4 + -0x7afefda8) ^ *(uVar13 * 4 + -0x7aff01a8);\n        uVar4 = var_12ch & 0xff;\n        uVar5 = var_12ch >> 8 & 0xff;\n        uVar8 = var_12ch >> 0x10 & 0xff;\n        var_128h = uVar1 ^ *((var_12ch >> 0x18) * 4 + -0x7aff09a8) ^ *(uVar5 * 4 + -0x7aff05a8) ^\n                   *(uVar8 * 4 + -0x7aff01a8) ^ *(uVar4 * 4 + -0x7afefda8) ^ *(uVar15 * 4 + -0x7afefda8);\n        uVar1 = var_128h & 0xff;\n        uVar6 = var_128h >> 8 & 0xff;\n        uVar9 = var_128h >> 0x10 & 0xff;\n        var_124h = uVar3 ^ *(uVar1 * 4 + -0x7aff09a8) ^ *(uVar6 * 4 + -0x7aff05a8) ^ *(uVar9 * 4 + -0x7aff01a8) ^\n                   *((var_128h >> 0x18) * 4 + -0x7afefda8) ^ *(uVar2 * 4 + -0x7aff09a8);\n        var_24h = var_124h & 0xff;\n        var_28h = var_124h >> 8 & 0xff;\n        var_2ch = var_124h >> 0x10 & 0xff;\n        var_30h = var_124h >> 0x18;\n        var_120h = uVar7 ^ *(var_28h * 4 + -0x7aff09a8) ^ *(var_2ch * 4 + -0x7aff05a8) ^ *(var_24h * 4 + -0x7aff01a8) ^\n                   *(var_30h * 4 + -0x7afefda8) ^ *(uVar12 * 4 + -0x7aff05a8);\n        var_14h = var_120h & 0xff;\n        var_18h = var_120h >> 8 & 0xff;\n        var_1ch = var_120h >> 0x10 & 0xff;\n        var_20h = var_120h >> 0x18;\n        var_58h[0xc] = *(var_30h * 4 + -0x7aff09a8) ^ *(var_2ch * 4 + -0x7aff05a8) ^ *(uVar1 * 4 + -0x7aff01a8) ^\n                       *(uVar6 * 4 + -0x7afefda8) ^ *(uVar4 * 4 + -0x7aff09a8);\n        var_58h[0xd] = *(var_28h * 4 + -0x7aff09a8) ^ *(var_24h * 4 + -0x7aff05a8) ^ *(uVar9 * 4 + -0x7aff01a8) ^\n                       *((var_128h >> 0x18) * 4 + -0x7afefda8) ^ *(uVar1 * 4 + -0x7aff05a8);\n        var_58h[0xe] = *(var_20h * 4 + -0x7aff09a8) ^ *(var_1ch * 4 + -0x7aff05a8) ^ *(uVar4 * 4 + -0x7aff01a8) ^\n                       *(uVar5 * 4 + -0x7afefda8) ^ *(var_30h * 4 + -0x7aff01a8);\n        var_58h[0xf] = *(var_18h * 4 + -0x7aff09a8) ^ *(var_14h * 4 + -0x7aff05a8) ^ *(uVar8 * 4 + -0x7aff01a8) ^\n                       *((var_12ch >> 0x18) * 4 + -0x7afefda8) ^ *(var_1ch * 4 + -0x7afefda8);\n        if (var_58h != &var_d8h) break;\n        var_58h = var_58h + 0x10;\n    }\n    for (var_54h = 0; var_54h < 0x10; var_54h = var_54h + 1) {\n        *(arg_8h + var_54h * 8) = (&var_d8h)[var_54h];\n        *(arg_8h + 4 + var_54h * 8) = (&var_98h)[var_54h] + 0x10 & 0x1f;\n    }\n    return;\n}\n",
        "token_count": 5157
    },
    "000388c0": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000388c0(uint8_t *arg_8h, uint32_t arg_ch, uint *arg_10h)\n\n{\n    uint uVar1;\n    uint var_210h;\n    uint var_20ch;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint8_t var_5h;\n    uint8_t *var_4h;\n    \n    if (10 < arg_ch) {\n        var_4h = arg_8h;\n        var_5h = 0;\n        for (var_ch = 0; var_ch < 8; var_ch = var_ch + 1) {\n            if ((*var_4h < 0x21) || (0x7f < *var_4h)) {\n                return 0;\n            }\n            var_5h = var_5h + *var_4h;\n            var_4h = var_4h + 1;\n        }\n        var_10h = arg_ch;\n        if (0x200 < arg_ch - 10) {\n            var_10h = 0x20a;\n        }\n        if ((*var_4h == var_5h / 0x1a + 0x41) && (var_4h[1] == 0x7a - var_5h % 0x1a)) {\n            var_10h = fcn.000353e0(arg_8h + 10, &var_210h, var_10h - 10);\n            if (var_10h == 8) {\n                for (var_ch = 0; var_ch < var_10h; var_ch = var_ch + 1) {\n                    *(&var_210h + var_ch) = *(&var_210h + var_ch) ^ arg_8h[var_ch];\n                }\n                uVar1 = fcn.000365c0(var_210h);\n                *arg_10h = uVar1;\n                uVar1 = fcn.000365c0(var_20ch);\n                arg_10h[1] = uVar1;\n                return 1;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 481
    },
    "0003b9e0": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint fcn.0003b9e0(void)\n\n{\n    ushort uVar1;\n    int32_t arg_8h;\n    uint32_t var_4h;\n    \n    *0x85090d94 = 0;\n    *0x85090d98 = 0;\n    *0x85090d9c = 0;\n    *0x85090da0 = 0;\n    *0x85090da4 = 0;\n    var_4h = 0;\n    while (var_4h < 10) {\n        arg_8h = fcn.000299b0(var_4h + 0x2f3, 0);\n        uVar1 = fcn.000365f0(arg_8h);\n        *(arg_8h * 2 + -0x7af6f26c) = uVar1;\n        var_4h = arg_8h + 1;\n    }\n    return 0;\n}\n",
        "token_count": 229
    },
    "0003ba50": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nint32_t fcn.0003ba50(void)\n\n{\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    for (var_8h = 0; var_8h < 10; var_8h = var_8h + 1) {\n        var_4h = (*(var_8h * 2 + -0x7af6f26c) != 0) + var_4h;\n    }\n    return var_4h;\n}\n",
        "token_count": 120
    },
    "0003baa0": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0003baa0(uint arg_8h)\n\n{\n    uint32_t var_4h;\n    \n    var_4h = 0;\n    while( true ) {\n        if (9 < var_4h) {\n            return 0;\n        }\n        if (*(var_4h * 2 + -0x7af6f26c) == arg_8h) break;\n        var_4h = var_4h + 1;\n    }\n    return 1;\n}\n",
        "token_count": 113
    },
    "00077950": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Switch with 1 destination removed at 0x00077979\n\nuint __cdecl fcn.00077950(uint noname_0, int32_t arg_ch)\n\n{\n    uint var_4h;\n    \n    if (10 < arg_ch - 3U) {\n        return 0x21590001;\n    }\n    // WARNING: Bad instruction - Truncating control flow here\n    halt_baddata();\n}\n",
        "token_count": 102
    },
    "00020a80": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Switch with 1 destination removed at 0x00020aa5\n\nuint __cdecl fcn.00020a80(int32_t arg_8h)\n\n{\n    uint var_10h;\n    \n    if (7 < arg_8h - 2U) {\n        return 1;\n    }\n    // WARNING: Bad instruction - Truncating control flow here\n    halt_baddata();\n}\n",
        "token_count": 98
    },
    "00020b30": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Switch with 1 destination removed at 0x00020b53\n\nuint __cdecl fcn.00020b30(int32_t arg_8h)\n\n{\n    uint var_4h;\n    \n    if (7 < arg_8h - 2U) {\n        return 0;\n    }\n    // WARNING: Bad instruction - Truncating control flow here\n    halt_baddata();\n}\n",
        "token_count": 98
    },
    "00017eb0": {
        "rules": [
            "parse credit card information/3266979fad224c5386fccfb7f2b301b7"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Switch with 1 destination removed at 0x00017eeb\n\nuint __cdecl fcn.00017eb0(int32_t arg_8h, uint noname_1, uint arg_10h)\n\n{\n    uint var_22ch;\n    \n    if (0x25 < arg_8h - 1U) {\n        return arg_10h;\n    }\n    // WARNING: Bad instruction - Truncating control flow here\n    halt_baddata();\n}\n",
        "token_count": 114
    },
    "000632f0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Switch with 1 destination removed at 0x00063323 : 61 cases all go to same destination\n\nuint __cdecl fcn.000632f0(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.00062c10(arg_8h, arg_ch);\n    if (0x3c < iVar1 - 4U) {\n        return 0;\n    }\n    // WARNING: Bad instruction - Truncating control flow here\n    halt_baddata();\n}\n",
        "token_count": 135
    },
    "000658f0": {
        "rules": [
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b",
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000658f0(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    uint32_t uVar3;\n    \n    *(arg_8h + 0x98) = *(arg_8h + 0x112 + *(arg_8h + 4)) * 0x20 + -0x7af839c8;\n    if (*(arg_8h + 0x112 + *(arg_8h + 4)) == -0x70) {\n        if ((*(arg_8h + 0x8c) != '@') || ((*(arg_8h + 0x101) & 1) == 0)) {\n            if (*(arg_8h + 0x106) == '\\0') {\n                *(arg_8h + 0x98) = 0x8508dbb8;\n            }\n            else {\n                *(arg_8h + 0x98) = 0x8508dbd8;\n                *(arg_8h + 0x106) = 0;\n            }\n        }\n    }\n    else if ((*(arg_8h + 0x8c) == '@') && (**(arg_8h + 0x98) == 0xf)) {\n        *(arg_8h + 0x98) = 0x8508dbf8;\n    }\n    else if (**(arg_8h + 0x98) == 0x216) {\n        iVar1 = *(*(arg_8h + 0x98) + 0x1c);\n        uVar3 = fcn.00065360(arg_8h);\n        *(arg_8h + 0x98) = ((uVar3 & 0xff) >> 3 & 7U) * 0x20 + *(iVar1 * 0x10 + -0x7af76f68);\n    }\n    else if (**(arg_8h + 0x98) == 0x21f) {\n        uVar2 = fcn.00065360(arg_8h);\n        if (uVar2 < 0xc0) {\n            uVar2 = *(arg_8h + 0x112 + *(arg_8h + 4));\n            uVar3 = fcn.00065360(arg_8h);\n            *(arg_8h + 0x98) = ((uVar3 & 0xff) >> 3 & 7U) * 0x20 + *(uVar2 * 4 + -0x7af72808);\n        }\n        else {\n            uVar2 = *(arg_8h + 0x112 + *(arg_8h + 4));\n            uVar3 = fcn.00065360(arg_8h);\n            *(arg_8h + 0x98) = ((uVar3 & 0xff) - 0xc0) * 0x20 + *(uVar2 * 4 + -0x7af727e8);\n            fcn.00065260(arg_8h);\n        }\n    }\n    return;\n}\n",
        "token_count": 691
    },
    "00059740": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00059740(int16_t *arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint var_ch;\n    int32_t var_8h;\n    int16_t *var_4h;\n    \n    var_4h = arg_8h;\n    var_8h = 0;\n    while( true ) {\n        if (5 < var_8h) {\n            return 1;\n        }\n        uVar1 = fcn.00037070(var_4h, &var_4h, 0x10);\n        if (0xff < uVar1) break;\n        if (var_8h < 5) {\n            if ((*var_4h != 0x2d) && (*var_4h != 0x3a)) {\n                return 0;\n            }\n            var_4h = var_4h + 1;\n        }\n        else if (*var_4h != 0) {\n            return 0;\n        }\n        var_ch._0_1_ = uVar1;\n        *(arg_ch + var_8h) = var_ch;\n        var_8h = var_8h + 1;\n    }\n    return 0;\n}\n",
        "token_count": 284
    },
    "00020690": {
        "rules": [
            "hash data using aphash/10489b186fc44711a1078750698db7a9",
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00020690(uint noname_0, uint noname_1, int32_t arg_10h)\n\n{\n    return (arg_10h + 7U & 0xfffffff8) + 1;\n}\n",
        "token_count": 56
    },
    "000633f0": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.000633f0(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    \n    if ((arg_ch < 0x26) || (0x2d < arg_ch)) {\n        arg_ch = arg_ch - 0x1e;\n    }\n    else {\n        arg_ch = arg_ch - 0x26 | (*(arg_8h + 0x101) & 1) << 3;\n    }\n    if (*(arg_8h + 0x10b) == '\\x10') {\n        iVar1 = arg_ch + 0x15;\n    }\n    else if ((*(arg_8h + 0x8c) == ' ') ||\n            (((*(arg_8h + 0x10b) == ' ' && ((*(arg_8h + 0x101) & 0xf) >> 3 == 0)) && (*(arg_8h + 0x10a) == '\\0')))) {\n        iVar1 = arg_ch + 0x25;\n    }\n    else {\n        iVar1 = arg_ch + 0x35;\n    }\n    return iVar1;\n}\n",
        "token_count": 261
    },
    "0006ceb0": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0006ceb0(int32_t arg_8h, uint arg_ch, uint arg_10h, uint32_t arg_14h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_4h;\n    \n    if ((arg_14h & 1) == 0) {\n        fcn.00035650(arg_8h + 0x18);\n    }\n    else {\n        iVar1 = fcn.00035670(arg_8h + 0x18);\n        if (iVar1 == 0) {\n            return 0x21590002;\n        }\n    }\n    uVar2 = fcn.0006cf70(arg_8h, arg_ch, arg_10h, 0, 0, 0, 0);\n    fcn.000356c0(arg_8h + 0x18);\n    return uVar2;\n}\n",
        "token_count": 202
    },
    "00062c10": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Switch with 1 destination removed at 0x00062c32\n\nint32_t __cdecl fcn.00062c10(uint noname_0, int32_t arg_ch)\n\n{\n    uint var_4h;\n    \n    if (6 < arg_ch - 1U) {\n        return arg_ch;\n    }\n    // WARNING: Bad instruction - Truncating control flow here\n    halt_baddata();\n}\n",
        "token_count": 102
    },
    "00074370": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00074370(int32_t arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    uint uVar1;\n    \n    if (arg_ch == 6) {\n        if (arg_14h == 0xc) {\n            fcn.0007f904(arg_8h + 0xec, arg_10h, 0xc);\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = 0x21590064;\n        }\n    }\n    else {\n        uVar1 = fcn.0007a930(*(arg_8h + 0xc), arg_ch, arg_10h, arg_14h, 0);\n    }\n    return uVar1;\n}\n",
        "token_count": 174
    },
    "000353e0": {
        "rules": [
            "search for credit card data/212a26c2b8d740cd9f6579dba482d653",
            "parse credit card information/92c3fd9898ba41b4bad3ffb6188f4688"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.000353e0(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t var_120h;\n    uint var_11ch;\n    uint var_118h;\n    int32_t var_114h;\n    uint var_110h;\n    uint var_e5h;\n    uint var_e1h;\n    uint var_d3h;\n    char acStack211 [32];\n    char acStack179 [163];\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_114h = 0;\n    fcn.0007f916(&var_110h, 0x80, 0xff);\n    for (var_ch = 0x41; var_ch < 0x5b; var_ch = var_ch + 1) {\n        *(&var_110h + var_ch) = var_ch + -0x41;\n    }\n    for (var_ch = 0x61; var_ch < 0x7b; var_ch = var_ch + 1) {\n        *(&var_110h + var_ch) = var_ch + -0x47;\n    }\n    for (var_ch = 0x30; var_ch < 0x3a; var_ch = var_ch + 1) {\n        *(&var_110h + var_ch) = var_ch + '\\x04';\n    }\n    var_e5h._0_1_ = 0x3e;\n    var_e1h._0_1_ = 0x3f;\n    var_d3h._0_1_ = 0;\n    uVar1 = arg_10h & 0x80000003;\n    if (uVar1 < 0) {\n        uVar1 = (uVar1 - 1 | 0xfffffffc) + 1;\n    }\n    if (uVar1 == 0) {\n        for (var_ch = 0; var_ch < arg_10h; var_ch = var_ch + 4) {\n            var_4h = arg_8h + var_ch;\n            for (var_8h = 0; var_8h < 4; var_8h = var_8h + 1) {\n                *(&var_118h + var_8h) = *(&var_110h + *(var_4h + var_8h));\n            }\n            var_11ch._0_1_ = var_118h << 2 | var_118h._1_1_ >> 4;\n            var_11ch._1_1_ = var_118h._1_1_ << 4 | var_118h._2_1_ >> 2;\n            var_11ch._2_1_ = var_118h._2_1_ << 6 | var_118h._3_1_;\n            if (*(var_4h + 2) == '=') {\n                var_120h = 1;\n            }\n            else {\n                var_120h = (*(var_4h + 3) != '=') + 2;\n            }\n            var_8h = var_120h;\n            fcn.0007f904(arg_ch + var_114h, &var_11ch, var_120h);\n            var_114h = var_114h + var_8h;\n        }\n        *(arg_ch + var_114h) = 0;\n    }\n    else {\n        var_114h = -1;\n    }\n    return var_114h;\n}\n",
        "token_count": 811
    },
    "0002e720": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0002e720(uint noname_0, uint noname_1, uint noname_2, uint *arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint var_30h;\n    uint *var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint *var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint *var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    *arg_14h = 3;\n    var_14h = fcn.000299b0(1, 0);\n    var_20h = 5;\n    var_1ch = 2;\n    var_28h = 0;\n    var_24h = 0;\n    var_2ch = &var_14h;\n    var_30h = 4;\n    var_18h = &var_30h;\n    var_10h = 1;\n    var_ch = &var_20h;\n    var_8h = 1;\n    var_4h = &var_18h;\n    fcn.0002f660(&var_10h, arg_18h, arg_1ch);\n    return;\n}\n",
        "token_count": 302
    },
    "0005aba0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0005aba0(uint arg_8h, uint arg_ch, uint32_t arg_10h, uint32_t arg_14h, uint32_t arg_18h, uint32_t arg_1ch, \n            uint32_t arg_20h)\n\n{\n    uint16_t extraout_var;\n    uint var_30h;\n    uint var_18h;\n    \n    fcn.0004a010(&var_30h, 0x16, 0x8501083c, arg_10h & 0xff);\n    fcn.0004a010(&var_18h, 0x16, 0x8501083c, arg_18h & 0xff);\n    fcn.0005ac80(arg_8h, arg_ch, &var_30h, arg_20h & 0xffff0000 | arg_14h & 0xffff, &var_18h, \n                 arg_1ch & 0xffff | extraout_var << 0x10, arg_20h);\n    return;\n}\n",
        "token_count": 236
    },
    "00029f80": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00029f80(int32_t arg_8h, char *arg_ch)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t arg_10h;\n    uint *arg_ch_00;\n    uint var_10ch;\n    uint var_108h;\n    \n    if ((((*arg_ch == '\\\\') && (arg_ch[1] == '\\\\')) && (arg_ch[2] == '.')) && (arg_ch[3] == '\\\\')) {\n        fcn.0004a010(&var_108h, 0x104, 0x8501066c, arg_ch + 4);\n    }\n    else if (((*arg_ch == '\\\\') && (arg_ch[1] == '?')) && ((arg_ch[2] == '?' && (arg_ch[3] == '\\\\')))) {\n        fcn.0004a010(&var_108h, 0x104, 0x85010674, arg_ch);\n    }\n    else {\n        fcn.0004a010(&var_108h, 0x104, 0x8501066c, arg_ch);\n    }\n    *(arg_8h + 0x118) = 1;\n    arg_10h = arg_8h + 4;\n    arg_ch_00 = &var_108h;\n    uVar1 = fcn.0006b490();\n    uVar1 = fcn.00061ca0(uVar1, arg_ch_00, arg_10h);\n    uVar2 = fcn.0006b490();\n    *(arg_8h + 0x11c) = uVar2;\n    return uVar1;\n}\n",
        "token_count": 370
    },
    "00078770": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\n// WARNING: Heritage AFTER dead removal. Example location: s0xfffffff1 : 0x000787a6\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __cdecl fcn.00078770(uint noname_0, uint32_t *arg_ch, uint32_t arg_10h, code *arg_14h, uint arg_18h)\n\n{\n    uchar uVar1;\n    int32_t iVar2;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint32_t var_ch;\n    uint32_t var_4h;\n    \n    if (3 < arg_10h) {\n        var_ch = *arg_ch;\n        fcn.00077b70(&var_ch);\n        if ((var_ch & 0x4000) == 0) {\n    // WARNING: Ignoring partial resolution of indirect\n            var_ch._1_1_ = 0x20;\n            fcn.00077b70(&var_ch);\n            iVar2 = fcn.0007f77e();\n            for (var_4h = 0; var_4h < iVar2 % 5; var_4h = var_4h + 1) {\n                uVar1 = fcn.0007f77e();\n                *(&var_ch + var_4h + 3) = uVar1;\n            }\n            (*arg_14h)(arg_18h, &var_ch, iVar2 % 5 + 4);\n        }\n    }\n    return;\n}\n",
        "token_count": 338
    },
    "00059640": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00059640(int16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int16_t *var_4h;\n    \n    var_4h = arg_8h;\n    uVar1 = fcn.00037070(arg_8h, &var_4h, 10);\n    if (*var_4h == 0x2e) {\n        var_4h = var_4h + 1;\n        uVar3 = fcn.00037070(var_4h, &var_4h, 10);\n        if (*var_4h == 0x2e) {\n            var_4h = var_4h + 1;\n            uVar4 = fcn.00037070(var_4h, &var_4h, 10);\n            if (*var_4h == 0x2e) {\n                var_4h = var_4h + 1;\n                uVar5 = fcn.00037070(var_4h, 0, 10);\n                if ((((uVar1 < 0x100) && (uVar3 < 0x100)) && (uVar4 < 0x100)) && (uVar5 < 0x100)) {\n                    *arg_ch = uVar3 << 8 | uVar1 | uVar4 << 0x10 | uVar5 << 0x18;\n                    uVar2 = 1;\n                }\n                else {\n                    uVar2 = 0;\n                }\n            }\n            else {\n                uVar2 = 0;\n            }\n        }\n        else {\n            uVar2 = 0;\n        }\n    }\n    else {\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 452
    },
    "000653e0": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.000653e0(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.00065260(arg_8h);\n    uVar2 = fcn.00065260(arg_8h);\n    uVar3 = fcn.00065260(arg_8h);\n    iVar4 = fcn.00065260(arg_8h);\n    return iVar4 << 0x18 | (uVar3 & 0xff) << 0x10 | (uVar2 & 0xff) << 8 | uVar1 & 0xff;\n}\n",
        "token_count": 176
    },
    "000653a0": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nushort __cdecl fcn.000653a0(uint arg_8h)\n\n{\n    uchar uVar1;\n    uchar uVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.00065260(arg_8h);\n    uVar2 = fcn.00065260(arg_8h);\n    return CONCAT11(uVar2, uVar1);\n}\n",
        "token_count": 90
    },
    "00053600": {
        "rules": [
            "PEB access/35f28d23090149119036cdb16976bf66"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00053600(uint noname_0, int32_t arg_ch, uint arg_10h)\n\n{\n    uint var_4h;\n    \n    *(arg_ch + 0x5c) = arg_10h;\n    fcn.00034dc0(arg_ch + 0x60);\n    return;\n}\n",
        "token_count": 74
    },
    "00017b70": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00017b70(uint noname_0, uint noname_1, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t var_8h;\n    uint var_4h;\n    \n    if (arg_14h == 0x103) {\n        var_8h = arg_10h;\n    }\n    else {\n        var_8h = arg_14h;\n    }\n    return var_8h;\n}\n",
        "token_count": 110
    },
    "0001a4c0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0001a4c0(uint32_t arg_8h, code *arg_ch, uint arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t extraout_ECX;\n    uint var_3dh;\n    code *var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    uint var_20h;\n    \n    var_3dh._0_1_ = (**0x8500d000)();\n    uVar1 = fcn.0001a2d0();\n    if (arg_8h == uVar1) {\n        var_24h = (*arg_ch)(arg_10h);\n    }\n    else {\n        (**0x8500d0d4)(&var_3dh + 1, 0, 0);\n        var_2ch = arg_ch;\n        var_28h = arg_10h;\n        (**0x8500d0d8)(&var_20h, 0x85016480, &var_3dh + 1);\n        (**0x8500d0b4)(&var_20h, 2);\n        (**0x8500d0b8)(&var_20h, extraout_ECX & 0xffffff00 | arg_8h & 0xff);\n        (**0x8500d0f8)(&var_20h, 0, 0);\n        do {\n            iVar2 = (**0x8500d0bc)(&var_3dh + 1);\n        } while (iVar2 == 0);\n    }\n    (**0x8500d008)();\n    return (-(var_24h != 0) & 0x3fffffff) + 0xc0000001;\n}\n",
        "token_count": 407
    },
    "0001d860": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.0001d860(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    iVar1 = fcn.000278a0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n    if (iVar1 == 0x21590001) {\n        for (var_4h = 0; var_4h < 0x1e; var_4h = var_4h + 1) {\n            if (*(var_4h * 8 + -0x7af70640) == arg_ch) {\n                iVar1 = (**(var_4h * 8 + -0x7af7063c))(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n                return iVar1;\n            }\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 271
    },
    "0001f7c0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuchar fcn.0001f7c0(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_6ch;\n    uint var_68h;\n    uint32_t var_ch;\n    uint var_5h;\n    \n    iVar1 = fcn.0005e660();\n    if (iVar1 == *(*0x8508fab0 + 0x14)) {\n        var_5h._0_1_ = 0;\n    }\n    else {\n        iVar2 = fcn.000379b0(&var_68h, 0x52);\n        if ((iVar2 != 0) && (iVar2 = fcn.0001f430(&var_68h),  iVar2 != 0)) {\n            return 1;\n        }\n        var_5h._0_1_ = 0;\n        if (*0x8509284e == '\\0') {\n            var_5h._0_1_ = 0;\n        }\n        else {\n            fcn.000382a0(0x850928bc, &var_5h + 1, 0);\n            for (var_ch = 0; var_ch < *0x850928c8; var_ch = var_ch + 1) {\n                if (*(*0x850928cc + var_ch * 8) == iVar1) {\n                    var_5h._0_1_ = 1;\n                    break;\n                }\n            }\n            fcn.000382d0(0x850928bc, &var_5h + 1, 0);\n        }\n    }\n    return var_5h;\n}\n",
        "token_count": 367
    },
    "0001fd70": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0001fd70(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    fcn.000382a0(0x850928bc, &var_4h, 1);\n    for (var_8h = 0; var_8h < *0x850928c8; var_8h = var_8h + 1) {\n        if (*(*0x850928cc + var_8h * 8) == arg_8h) {\n            if ((arg_ch != '\\0') && (*(*0x850928cc + 4 + var_8h * 8) == '\\0')) break;\n            for (var_ch = var_8h; iVar2 = *0x850928cc,  var_ch < *0x850928c8 - 1; var_ch = var_ch + 1) {\n                iVar1 = *0x850928cc + 0xc;\n                *(*0x850928cc + var_ch * 8) = *(*0x850928cc + 8 + var_ch * 8);\n                *(iVar2 + 4 + var_ch * 8) = *(iVar1 + var_ch * 8);\n            }\n            *0x850928c8 = *0x850928c8 - 1;\n            fcn.00036390(0x850928cc, *0x850928c8 * 8 + 8, *0x850928c8 * 8);\n        }\n    }\n    fcn.000382d0(0x850928bc, &var_4h, 1);\n    return;\n}\n",
        "token_count": 394
    },
    "00026200": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00026200(void)\n\n{\n    int32_t iVar1;\n    int32_t var_20h;\n    uint var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_1ch = fcn.000299b0(1, 0);\n    iVar1 = fcn.000238e0(var_1ch, 0, &var_14h, &var_20h);\n    if (iVar1 == 0) {\n        for (var_18h = 0; var_18h < var_14h; var_18h = var_18h + 1) {\n            if (*(var_20h + 0x30 + var_18h * 0x40) == *(var_20h + 0x2c + var_18h * 0x40)) {\n                fcn.00025fb0(*(var_20h + var_18h * 0x40), *(var_20h + 4 + var_18h * 0x40), \n                             *(var_20h + 0x2c + var_18h * 0x40), *(var_20h + 0xc + var_18h * 0x40));\n            }\n            else {\n                iVar1 = fcn.00036f90(0);\n                if (iVar1 - *(var_20h + 0x20 + var_18h * 0x40) < 0x93a81) {\n                    if (var_18h == var_14h - 1) break;\n                    fcn.0002a200(5, 0, 0x215901f6, 0, *(var_20h + 0xc + var_18h * 0x40));\n                    fcn.00023a70(*(var_20h + var_18h * 0x40), *(var_20h + 8 + var_18h * 0x40), \n                                 *(var_20h + 4 + var_18h * 0x40));\n                }\n                else {\n                    fcn.00023a70(*(var_20h + var_18h * 0x40), *(var_20h + 8 + var_18h * 0x40), \n                                 *(var_20h + 4 + var_18h * 0x40));\n                    fcn.0002a200(5, 0x21590204, 0x21590002, 0, *(var_20h + 0xc + var_18h * 0x40));\n                    var_ch = 0;\n                    var_8h = 0;\n                    var_4h = 0;\n                    var_10h = 0x21590204;\n                    fcn.000238a0(0xffffffff, 1, *(var_20h + 0xc + var_18h * 0x40), 0, 0, var_20h + 0x10 + var_18h * 0x40\n                                );\n                }\n            }\n        }\n        fcn.00023b80(var_20h);\n    }\n    return;\n}\n",
        "token_count": 733
    },
    "0002a200": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0002a200(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h;\n    var_10h = arg_ch;\n    var_ch = arg_10h;\n    var_8h = arg_14h;\n    var_4h = fcn.000238a0(0xfffffffe, 4, arg_18h, 0, 0, &var_14h);\n    if (var_4h == 4) {\n        iVar1 = fcn.000299b0(2, 0);\n        fcn.00028b20(0xfffffffe, 4, iVar1 + 1);\n        fcn.000238a0(0xfffffffe, 4, arg_18h, 0, 0, &var_14h);\n    }\n    return;\n}\n",
        "token_count": 258
    },
    "00034480": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00034480(int32_t arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    uint uVar1;\n    uint32_t var_90h;\n    uint var_8ch;\n    uint var_88h;\n    \n    if ((arg_10h % 0x200 == 0) && (arg_10h <= *(arg_8h * 8 + -0x7af6d6f8) - 0x200U)) {\n        fcn.00031e80(&var_88h, 0x10, 0x8508edf8);\n        var_8ch = *0x8508edfc;\n        var_90h = *0x8508edf8 & 0xffffff00 | arg_10h >> 9 & 0xff;\n        fcn.00031360(arg_ch, *(arg_8h * 4 + -0x7af6d700) + arg_10h, 0x200, &var_88h, &var_90h, 1);\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 270
    },
    "00034530": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00034530(int32_t arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    uint uVar1;\n    uint32_t var_99h;\n    uint var_94h;\n    uint var_90h;\n    int32_t var_4h;\n    \n    if ((arg_10h % 0x200 == 0) && (arg_10h <= *(arg_8h * 8 + -0x7af6d6f8) - 0x200U)) {\n        var_99h._0_1_ = '\\x01';\n        for (var_4h = 0; var_4h < 0x200; var_4h = var_4h + 1) {\n            if (*(*(arg_8h * 4 + -0x7af6d700) + arg_10h + var_4h) != '\\0') {\n                var_99h._0_1_ = '\\0';\n                break;\n            }\n        }\n        if (var_99h == '\\0') {\n            fcn.00031e80(&var_90h, 0x10, 0x8508edf8);\n            var_94h = *0x8508edfc;\n            stack0xffffff64 = *0x8508edf8 & 0xffffff00 | arg_10h >> 9 & 0xff;\n            fcn.00031360(*(arg_8h * 4 + -0x7af6d700) + arg_10h, arg_ch, 0x200, &var_90h, &var_99h + 1, 0);\n            uVar1 = 1;\n        }\n        else {\n            fcn.0007f916(arg_ch, 0, 0x200);\n            uVar1 = 1;\n        }\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 446
    },
    "00038a20": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00038a20(uint8_t *arg_8h)\n\n{\n    uint var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    var_1h._0_1_ = 0;\n    var_8h = 0;\n    while( true ) {\n        if (7 < var_8h) {\n            if ((*arg_8h == var_1h / 0x1a + 0x41) && (arg_8h[1] == 0x7a - var_1h % 0x1a)) {\n                var_ch = 1;\n            }\n            else {\n                var_ch = 0;\n            }\n            return var_ch;\n        }\n        if ((((*arg_8h < 0x41) || (0x5a < *arg_8h)) && ((*arg_8h < 0x61 || (0x7a < *arg_8h)))) &&\n           ((*arg_8h < 0x30 || (0x39 < *arg_8h)))) break;\n        var_1h._0_1_ = var_1h + *arg_8h;\n        var_8h = var_8h + 1;\n        arg_8h = arg_8h + 1;\n    }\n    return 0;\n}\n",
        "token_count": 324
    },
    "00038b00": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00038b00(uint8_t *arg_8h)\n\n{\n    uint var_10h;\n    uint8_t var_9h;\n    int32_t var_8h;\n    uint var_1h;\n    \n    var_1h._0_1_ = 0;\n    var_8h = 0;\n    while( true ) {\n        if (7 < var_8h) {\n            if ((*arg_8h == var_1h / 0x1a + 0x61) && (arg_8h[1] == 0x7a - var_1h % 0x1a)) {\n                var_10h = 1;\n            }\n            else {\n                var_10h = 0;\n            }\n            return var_10h;\n        }\n        var_9h = *arg_8h;\n        if ((0x40 < var_9h) && (var_9h < 0x5b)) {\n            var_9h = var_9h + 0x20;\n        }\n        if ((var_9h < 0x61) || (0x7a < var_9h)) break;\n        var_1h._0_1_ = var_1h + var_9h;\n        var_8h = var_8h + 1;\n        arg_8h = arg_8h + 1;\n    }\n    return 0;\n}\n",
        "token_count": 346
    },
    "00049860": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00049860(int32_t arg_8h, int32_t arg_ch, uchar *arg_10h)\n\n{\n    char *pcVar1;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    var_8h = 0;\n    *arg_10h = 1;\n    if ((((arg_8h == *0x85092bdc) && (pcVar1 = *(arg_ch + 0x60),  *pcVar1 == '\\x0e')) && (*(pcVar1 + 4) == 0x3c)) &&\n       ((*(pcVar1 + 0xc) == 0x12001b || (*(pcVar1 + 0xc) == 0x12000f)))) {\n        var_4h = 0x850458f0;\n        var_8h = (**0x8500d1c8)();\n        (**0x8500d2e8)();\n    }\n    fcn.00016490(arg_8h, arg_ch, var_4h, var_8h);\n    return;\n}\n",
        "token_count": 255
    },
    "0004d090": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Switch with 1 destination removed at 0x0004d1f5\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0004d090(uint8_t *arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    uint8_t uVar1;\n    ushort uVar2;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_6dh;\n    uint var_68h;\n    uint var_3ch;\n    uint var_2ch;\n    \n    if ((*arg_8h & 0xf0) >> 4 == 4) {\n        uVar1 = *arg_8h;\n        *(arg_8h + 6) = 0;\n        arg_8h[8] = 0x80;\n        *0x85091028 = *0x85091028 + 1;\n        uVar2 = fcn.000365f0(arg_8h & 0xffff0000 | *0x85091028);\n        *(arg_8h + 4) = uVar2;\n        uVar2 = fcn.000365f0(*(arg_10h + 0xc) + -0xe + *(arg_10h + 0x14));\n        *(arg_8h + 2) = uVar2;\n        *(arg_8h + 10) = 0;\n        uVar2 = fcn.0004a050(arg_8h, (uVar1 & 0xf) << 2);\n        *(arg_8h + 10) = uVar2;\n        var_6dh._0_1_ = arg_8h[9];\n    }\n    else {\n        *(arg_8h + 4) = *(arg_10h + 0xc) + -0x36;\n        uVar2 = fcn.000365f0(*(arg_8h + 4) + *(arg_10h + 0x14));\n        *(arg_8h + 4) = uVar2;\n        arg_8h[7] = 0x80;\n        var_6dh._0_1_ = arg_8h[6];\n    }\n    if (0x39 < var_6dh - 1) {\n        return 0;\n    }\n    // WARNING: Bad instruction - Truncating control flow here\n    halt_baddata();\n}\n",
        "token_count": 546
    },
    "0004dcc0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0004dcc0(int32_t arg_8h)\n\n{\n    int16_t iVar1;\n    int16_t iVar2;\n    uint var_58h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_ch = *(arg_8h + 8);\n    iVar1 = *(var_ch + 0xc);\n    iVar2 = fcn.000365f0(0x800);\n    if (iVar1 == iVar2) {\n        var_4h = *(arg_8h + 8) + 0xe;\n        fcn.00034ee0(2, *(arg_8h + 8) + 0x1a, &var_58h, 0x41);\n    }\n    else {\n        var_8h = *(arg_8h + 8) + 0xe;\n        fcn.00034ee0(0x17, *(arg_8h + 8) + 0x16, &var_58h, 0x41);\n    }\n    fcn.0004f9b0(*(arg_8h + 0x10), *(arg_8h + 0x14), &var_58h, 0, 0);\n    return;\n}\n",
        "token_count": 290
    },
    "000539b0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.000539b0(uint arg_8h, uint *arg_ch, int32_t arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int16_t iVar1;\n    int16_t iVar2;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    fcn.0005b570(0);\n    if (arg_10h == 0xe) {\n        var_4h = arg_ch;\n        iVar1 = *(arg_ch + 3);\n        iVar2 = fcn.000365f0(0x7ff);\n        if (iVar1 == iVar2) {\n            var_14h = *var_4h;\n            var_10h = var_4h[1];\n            var_ch = var_4h[2];\n            var_8h._0_2_ = *(var_4h + 3);\n            var_8h._0_2_ = fcn.000365f0(0x800);\n            fcn.0004b810(arg_8h, &var_14h, 0xe, arg_14h, arg_18h, 0);\n            return;\n        }\n    }\n    fcn.0005b410(arg_ch, arg_10h, arg_14h, arg_18h, 0);\n    return;\n}\n",
        "token_count": 328
    },
    "000540c0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Switch with 1 destination removed at 0x000540fe\n\nuint __cdecl fcn.000540c0(uint arg_8h, int32_t arg_ch, uchar *arg_10h)\n\n{\n    uint uVar1;\n    uint var_18h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    *arg_10h = 1;\n    if (0x12 < **(arg_ch + 0x60)) {\n        uVar1 = fcn.00016490(arg_8h, arg_ch, 0, 0);\n        return uVar1;\n    }\n    // WARNING: Bad instruction - Truncating control flow here\n    halt_baddata();\n}\n",
        "token_count": 179
    },
    "0005ffa0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0005ffa0(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    arg_8h = arg_8h + *(arg_8h + 0x3c);\n    if (*(arg_8h + 0x18) == 0x10b) {\n        var_4h = *(arg_8h + 0x38);\n        var_18h = *(arg_8h + 0x54);\n        var_1ch = *(arg_8h + 0x50);\n    }\n    else {\n        var_4h = *(arg_8h + 0x38);\n        var_18h = *(arg_8h + 0x54);\n        var_1ch = *(arg_8h + 0x50);\n    }\n    var_18h = fcn.0005f930(var_18h, var_4h);\n    var_ch = arg_8h + 0x18 + *(arg_8h + 0x14);\n    for (var_8h = 0; var_8h < *(arg_8h + 6); var_8h = var_8h + 1) {\n        iVar1 = fcn.0005f930(*(var_ch + 8), var_4h);\n        var_18h = iVar1 + var_18h;\n        var_ch = var_ch + 0x28;\n    }\n    if (var_18h < var_1ch) {\n        var_20h = var_1ch;\n    }\n    else {\n        var_20h = var_18h;\n    }\n    return var_20h;\n}\n",
        "token_count": 436
    },
    "00062ce0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Switch with 1 destination removed at 0x00062d6f\n// WARNING: Switch with 1 destination removed at 0x00062d96\n// WARNING: Switch with 1 destination removed at 0x00062e7a\n// WARNING: Switch with 1 destination removed at 0x00062ea4\n\nuint __cdecl fcn.00062ce0(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(arg_8h + 0x10b) == ' ') {\n        iVar1 = *(arg_8h + 0x9c);\n        if (iVar1 < 0xd5) {\n            if (iVar1 == 0xd4) {\n                return 0xd3;\n            }\n            if (iVar1 == 0x19) {\n                return 0x5a;\n            }\n            if (iVar1 == 0x39) {\n                return 0x36;\n            }\n            if (iVar1 == 0x59) {\n                return 0x5b;\n            }\n        }\n        else if (iVar1 < 0x188) {\n            if (iVar1 == 0x187) {\n                return 0x188;\n            }\n            if (iVar1 - 0xd9U < 0xad) {\n                return;\n            }\n        }\n        else if (iVar1 - 0x1aeU < 0x47) {\n            return;\n        }\n    }\n    if (*(arg_8h + 0x10b) == '@') {\n        iVar1 = *(arg_8h + 0x9c);\n        if (iVar1 < 0x104) {\n            if (iVar1 == 0x103) {\n                return 0x102;\n            }\n            if (iVar1 - 0x19U < 0xc1) {\n                return;\n            }\n        }\n        else if (iVar1 - 0x135U < 0xc0) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n    }\n    if ((*(arg_8h + 0x10c) == ' ') && (*(arg_8h + 0x9c) == 0xdc)) {\n        uVar2 = 0xdd;\n    }\n    else if ((*(arg_8h + 0x10c) == '@') && (*(arg_8h + 0x9c) == 0xdc)) {\n        uVar2 = 0xdf;\n    }\n    else {\n        uVar2 = *(arg_8h + 0x9c);\n    }\n    return uVar2;\n}\n",
        "token_count": 623
    },
    "00063490": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00063490(int32_t arg_8h, int32_t arg_ch)\n\n{\n    if (*(arg_8h + 0x10b) == '\\x10') {\n        arg_ch = arg_ch + -0x19;\n    }\n    else {\n        arg_ch = arg_ch + -9;\n    }\n    return arg_ch;\n}\n",
        "token_count": 82
    },
    "000634c0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Switch with 1 destination removed at 0x000634dc\n\nuint __cdecl fcn.000634c0(uint noname_0, int32_t arg_ch)\n\n{\n    uint var_4h;\n    \n    if (4 < arg_ch - 2U) {\n        return 0;\n    }\n    // WARNING: Bad instruction - Truncating control flow here\n    halt_baddata();\n}\n",
        "token_count": 99
    },
    "00063540": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Switch with 1 destination removed at 0x00063583\n\nvoid __cdecl fcn.00063540(uint arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    uchar uVar1;\n    uint var_4h;\n    \n    uVar1 = fcn.00062c10(arg_8h, arg_ch);\n    *(arg_10h + 1) = uVar1;\n    *arg_10h = 0x8f;\n    if (0x38 < *(arg_10h + 1) - 8) {\n        return;\n    }\n    // WARNING: Bad instruction - Truncating control flow here\n    halt_baddata();\n}\n",
        "token_count": 163
    },
    "00063ce0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Switch with 1 destination removed at 0x00063d71\n\nvoid __cdecl fcn.00063ce0(int32_t arg_8h)\n\n{\n    uint var_24h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (0x50 < *(*(arg_8h + 0x98) + 4) - 1U) {\n        *(arg_8h + 0xe0) = 0;\n        *(arg_8h + 0xc0) = 0;\n        *(arg_8h + 0xa0) = 0;\n        return;\n    }\n    // WARNING: Bad instruction - Truncating control flow here\n    halt_baddata();\n}\n",
        "token_count": 205
    },
    "000656e0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Switch with 1 destination removed at 0x0006570b\n\nuint __cdecl fcn.000656e0(uint arg_8h)\n\n{\n    uint var_4h;\n    \n    if (0xb3 < arg_8h - 0xc) {\n        return 0;\n    }\n    // WARNING: Bad instruction - Truncating control flow here\n    halt_baddata();\n}\n",
        "token_count": 98
    },
    "00070290": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nuint __cdecl fcn.00070290(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = arg_8h;\n    do {\n        iVar1 = fcn.00034df0(var_8h + 0x50, 30000);\n        if (iVar1 != 0) {\n            return 0;\n        }\n        fcn.00035650(var_8h + 0x44);\n        if (*(var_8h + 0x154) != *(var_8h + 0x158)) {\n            var_4h = *(var_8h + 0x154) + -1;\n            if (var_4h < 0) {\n                var_4h = 0x1f;\n            }\n            while (*(var_8h + 0x158) != var_4h) {\n                uVar2 = *(var_8h + 0x158) & 0x8000001f;\n                if (uVar2 < 0) {\n                    uVar2 = (uVar2 - 1 | 0xffffffe0) + 1;\n                }\n                *(var_8h + 0x158) = uVar2;\n                iVar1 = fcn.00026f20();\n                if (iVar1 - *(var_8h + 0x58 + *(var_8h + 0x158) * 8) < 300000) break;\n                fcn.0007b950(var_8h + 0x54 + *(var_8h + 0x158) * 8, 0);\n                *(var_8h + 0x54 + *(var_8h + 0x158) * 8) = 0;\n                *(var_8h + 0x58 + *(var_8h + 0x158) * 8) = 0xffffffff;\n                uVar2 = *(var_8h + 0x158) + 1U & 0x8000001f;\n                if (uVar2 < 0) {\n                    uVar2 = (uVar2 - 1 | 0xffffffe0) + 1;\n                }\n                *(var_8h + 0x158) = uVar2;\n            }\n        }\n        var_8h = var_8h + 0x44;\n        fcn.000356c0(var_8h);\n    } while( true );\n}\n",
        "token_count": 585
    },
    "00018ed0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00018ed0(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t var_4h;\n    \n    for (var_4h = 0; var_4h < 0xe; var_4h = var_4h + 1) {\n        if ((arg_8h & *(var_4h * 8 + -0x7af70548)) == 0) {\n            *(arg_ch + var_4h * 2) = 0x2d;\n        }\n        else {\n            *(arg_ch + var_4h * 2) = *(var_4h * 8 + -0x7af70544);\n        }\n    }\n    *(arg_ch + var_4h * 2) = 0;\n    return arg_ch;\n}\n",
        "token_count": 185
    },
    "0001a370": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0001a370(uint arg_8h)\n\n{\n    fcn.00036460(arg_8h);\n    return;\n}\n",
        "token_count": 34
    },
    "0001b510": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0001b510(void)\n\n{\n    uint arg_8h;\n    int32_t iVar1;\n    uint var_4h;\n    \n    while( true ) {\n        iVar1 = fcn.00045cc0(0x850925ec, 1, 0);\n        arg_8h = *0x850925e4;\n        if (iVar1 == 0) break;\n        fcn.0005bdd0(0);\n    }\n    *0x850925e4 = 0;\n    *0x850925e8 = 0;\n    fcn.00036460(arg_8h);\n    fcn.0007a2b0(0x850925ec);\n    return;\n}\n",
        "token_count": 175
    },
    "0001cda0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0001cda0(uint noname_0, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint var_1ch;\n    uint var_14h;\n    \n    if (((arg_10h != '\\0') && (iVar1 = fcn.000379d0(arg_ch, &var_14h, 0x11),  iVar1 != 0)) &&\n       (iVar1 = fcn.0007f7a2(&var_14h, 0x8500d830),  iVar1 == 0)) {\n        fcn.0001a700(&var_1ch, 0x85011ba0, 1);\n        fcn.00038370(&var_1ch);\n        fcn.0001a700(&var_1ch, 0x85018d80, 0);\n        fcn.00038370(&var_1ch);\n    }\n    return;\n}\n",
        "token_count": 214
    },
    "0001ead0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __fastcall fcn.0001ead0(uint param_1)\n\n{\n    uint32_t var_4h;\n    \n    if (*0x8509284e != '\\0') {\n        *0x8509284e = '\\0';\n        fcn.00068540(*0x85092878, param_1);\n        fcn.00068090(0x85092878);\n        fcn.00068540(*0x85092880);\n        fcn.00068090(0x85092880);\n        fcn.00068540(*0x85092874);\n        fcn.00068090(0x85092874);\n        fcn.00068540(*0x85092884);\n        fcn.00068090(0x85092884);\n        fcn.00068540(*0x85092870);\n        fcn.00068090(0x85092870);\n        fcn.00068540(*0x8509287c);\n        fcn.00068090(0x8509287c);\n        fcn.0001b6c0();\n        for (var_4h = 0; var_4h < *0x85092864; var_4h = var_4h + 1) {\n            fcn.00036460(*(*0x85092868 + var_4h * 4));\n        }\n        fcn.00036460(*0x85092868);\n    }\n    return;\n}\n",
        "token_count": 336
    },
    "00021570": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00021570(uint arg_8h)\n\n{\n    fcn.00036460(arg_8h);\n    return;\n}\n",
        "token_count": 33
    },
    "000232d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.000232d0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t var_4h;\n    \n    uVar1 = *(arg_8h + 0x1c) + arg_ch;\n    if (uVar1 < *(arg_8h + 0xc) || uVar1 == *(arg_8h + 0xc)) {\n        var_4h = *(arg_8h + 0xc);\n    }\n    else {\n        var_4h = (((uVar1 - *(arg_8h + 0xc)) + -1 + *(arg_8h + 0x14)) / *(arg_8h + 0x14)) * *(arg_8h + 0x14) +\n                 *(arg_8h + 0xc);\n    }\n    return var_4h;\n}\n",
        "token_count": 203
    },
    "00023e20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00023e20(int32_t arg_8h, int32_t arg_ch)\n\n{\n    *(arg_8h + 0x2c) = *(arg_8h + 0x2c) + arg_ch;\n    (**(*(arg_8h + 0x44) + 0x18))(*(arg_8h + 0x48), arg_8h + 8, 0x2c, 0);\n    return;\n}\n",
        "token_count": 107
    },
    "00024e20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00024e20(uint noname_0, uint arg_ch, int32_t arg_10h)\n\n{\n    fcn.0002a200(arg_10h + 100, 0, arg_ch, 0, 0);\n    return;\n}\n",
        "token_count": 62
    },
    "00026e60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00026e60(uint noname_0, uint arg_ch)\n\n{\n    fcn.00036330(arg_ch);\n    return;\n}\n",
        "token_count": 36
    },
    "00026e80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00026e80(uint noname_0, uint arg_ch)\n\n{\n    fcn.00036460(arg_ch);\n    return;\n}\n",
        "token_count": 36
    },
    "00026fd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00026fd0(uint *arg_8h)\n\n{\n    uint uVar1;\n    int32_t var_4h;\n    \n    uVar1 = fcn.000365c0(*arg_8h);\n    *arg_8h = uVar1;\n    uVar1 = fcn.000365c0(arg_8h[1]);\n    arg_8h[1] = uVar1;\n    uVar1 = fcn.000365c0(arg_8h[2]);\n    arg_8h[2] = uVar1;\n    uVar1 = fcn.000365c0(*(arg_8h + 0xd));\n    *(arg_8h + 0xd) = uVar1;\n    uVar1 = fcn.000365c0(*(arg_8h + 0x11));\n    *(arg_8h + 0x11) = uVar1;\n    uVar1 = fcn.000365c0(*(arg_8h + 0x15));\n    *(arg_8h + 0x15) = uVar1;\n    uVar1 = fcn.000365c0(*(arg_8h + 0x19));\n    *(arg_8h + 0x19) = uVar1;\n    uVar1 = fcn.000365c0(*(arg_8h + 0x1d));\n    *(arg_8h + 0x1d) = uVar1;\n    for (var_4h = 0; var_4h < 4; var_4h = var_4h + 1) {\n        uVar1 = fcn.000365c0(*(arg_8h + var_4h * 4 + 0x21));\n        *(arg_8h + var_4h * 4 + 0x21) = uVar1;\n    }\n    return;\n}\n",
        "token_count": 423
    },
    "000270a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000270a0(uint *arg_8h)\n\n{\n    uint uVar1;\n    int32_t var_4h;\n    \n    uVar1 = fcn.000365c0(*arg_8h);\n    *arg_8h = uVar1;\n    uVar1 = fcn.000365c0(arg_8h[1]);\n    arg_8h[1] = uVar1;\n    uVar1 = fcn.000365c0(arg_8h[2]);\n    arg_8h[2] = uVar1;\n    uVar1 = fcn.000365c0(arg_8h[3]);\n    arg_8h[3] = uVar1;\n    uVar1 = fcn.000365c0(arg_8h[8]);\n    arg_8h[8] = uVar1;\n    uVar1 = fcn.000365c0(arg_8h[9]);\n    arg_8h[9] = uVar1;\n    uVar1 = fcn.000365c0(arg_8h[10]);\n    arg_8h[10] = uVar1;\n    uVar1 = fcn.000365c0(arg_8h[0xb]);\n    arg_8h[0xb] = uVar1;\n    uVar1 = fcn.000365c0(arg_8h[0xc]);\n    arg_8h[0xc] = uVar1;\n    for (var_4h = 0; var_4h < 4; var_4h = var_4h + 1) {\n        uVar1 = fcn.000365c0(arg_8h[var_4h + 4]);\n        arg_8h[var_4h + 4] = uVar1;\n    }\n    return;\n}\n",
        "token_count": 405
    },
    "000278a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.000278a0(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    uint uVar1;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = 0;\n    while( true ) {\n        if (0x1b < var_4h) {\n            return 0x21590001;\n        }\n        if (*(var_4h * 8 + -0x7af70790) == arg_ch) break;\n        var_4h = var_4h + 1;\n    }\n    uVar1 = (**(var_4h * 8 + -0x7af7078c))(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n    return uVar1;\n}\n",
        "token_count": 222
    },
    "000299b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000299b0(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_70h;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.000295a0(arg_8h, &var_70h, 100, &var_8h);\n    if (iVar1 == 0) {\n        arg_ch = fcn.00036fe0(&var_70h, &var_4h, 0);\n    }\n    return arg_ch;\n}\n",
        "token_count": 126
    },
    "00029f30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00029f30(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    uint var_4h;\n    \n    uVar1 = fcn.0006b490();\n    *(arg_8h + 0x11c) = uVar1;\n    *(arg_8h + 0x118) = 1;\n    uVar1 = fcn.00061610(*(arg_8h + 0x11c), arg_ch, arg_10h, arg_14h, arg_8h + 4);\n    return uVar1;\n}\n",
        "token_count": 148
    },
    "0002a8c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0002a8c0(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t var_4h;\n    \n    iVar1 = fcn.00020a10(arg_10h, 0x11, 2, &var_4h, 4);\n    if (iVar1 == 0) {\n        uVar2 = 0x21590065;\n    }\n    else {\n        uVar2 = fcn.00028b20(0xfffffffe, 4, var_4h + 1);\n    }\n    return uVar2;\n}\n",
        "token_count": 152
    },
    "0002bb90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0002bb90(void)\n\n{\n    uint32_t var_4h;\n    \n    if (*0x8508f7bf != '\\0') {\n        for (var_4h = 0; var_4h < 0x40; var_4h = var_4h + 1) {\n            *(var_4h + 0x8508f780) = *(var_4h + 0x8508f780) ^ *(var_4h + 0x8508f740);\n        }\n    }\n    return 0x8508f780;\n}\n",
        "token_count": 132
    },
    "0002bbf0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0002bbf0(void)\n\n{\n    uint32_t var_4h;\n    \n    if (*0x8508f83f != '\\0') {\n        for (var_4h = 0; var_4h < 0x40; var_4h = var_4h + 1) {\n            *(var_4h + 0x8508f800) = *(var_4h + 0x8508f800) ^ *(var_4h + 0x8508f7c0);\n        }\n    }\n    return 0x8508f800;\n}\n",
        "token_count": 135
    },
    "0002bc50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0002bc50(void)\n\n{\n    uint32_t var_4h;\n    \n    if (*0x8508f0bf != '\\0') {\n        for (var_4h = 0; var_4h < 0x40; var_4h = var_4h + 1) {\n            *(var_4h + 0x8508f080) = *(var_4h + 0x8508f080) ^ *(var_4h + 0x8508f040);\n        }\n    }\n    return 0x8508f080;\n}\n",
        "token_count": 132
    },
    "0002bcb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0002bcb0(void)\n\n{\n    uint32_t var_4h;\n    \n    if (*0x8508f13f != '\\0') {\n        for (var_4h = 0; var_4h < 0x40; var_4h = var_4h + 1) {\n            *(var_4h + 0x8508f100) = *(var_4h + 0x8508f100) ^ *(var_4h + 0x8508f0c0);\n        }\n    }\n    return 0x8508f100;\n}\n",
        "token_count": 135
    },
    "0002bd10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0002bd10(void)\n\n{\n    uint32_t var_4h;\n    \n    if (*0x8508f1bf != '\\0') {\n        for (var_4h = 0; var_4h < 0x40; var_4h = var_4h + 1) {\n            *(var_4h + 0x8508f180) = *(var_4h + 0x8508f180) ^ *(var_4h + 0x8508f140);\n        }\n    }\n    return 0x8508f180;\n}\n",
        "token_count": 132
    },
    "0002bd70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0002bd70(void)\n\n{\n    uint32_t var_4h;\n    \n    if (*0x8508f23f != '\\0') {\n        for (var_4h = 0; var_4h < 0x40; var_4h = var_4h + 1) {\n            *(var_4h + 0x8508f200) = *(var_4h + 0x8508f200) ^ *(var_4h + 0x8508f1c0);\n        }\n    }\n    return 0x8508f200;\n}\n",
        "token_count": 134
    },
    "0002bdd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0002bdd0(void)\n\n{\n    uint32_t var_4h;\n    \n    if (*0x8508f2bf != '\\0') {\n        for (var_4h = 0; var_4h < 0x40; var_4h = var_4h + 1) {\n            *(var_4h + 0x8508f280) = *(var_4h + 0x8508f280) ^ *(var_4h + 0x8508f240);\n        }\n    }\n    return 0x8508f280;\n}\n",
        "token_count": 132
    },
    "0002be30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0002be30(void)\n\n{\n    uint32_t var_4h;\n    \n    if (*0x8508f33f != '\\0') {\n        for (var_4h = 0; var_4h < 0x40; var_4h = var_4h + 1) {\n            *(var_4h + 0x8508f300) = *(var_4h + 0x8508f300) ^ *(var_4h + 0x8508f2c0);\n        }\n    }\n    return 0x8508f300;\n}\n",
        "token_count": 134
    },
    "0002be90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0002be90(void)\n\n{\n    uint32_t var_4h;\n    \n    if (*0x8508f43f != '\\0') {\n        for (var_4h = 0; var_4h < 0x40; var_4h = var_4h + 1) {\n            *(var_4h + 0x8508f400) = *(var_4h + 0x8508f400) ^ *(var_4h + 0x8508f3c0);\n        }\n    }\n    return 0x8508f400;\n}\n",
        "token_count": 134
    },
    "0002bef0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0002bef0(void)\n\n{\n    uint32_t var_4h;\n    \n    if (*0x8508f4bf != '\\0') {\n        for (var_4h = 0; var_4h < 0x40; var_4h = var_4h + 1) {\n            *(var_4h + 0x8508f480) = *(var_4h + 0x8508f480) ^ *(var_4h + 0x8508f440);\n        }\n    }\n    return 0x8508f480;\n}\n",
        "token_count": 132
    },
    "0002bf50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0002bf50(void)\n\n{\n    uint32_t var_4h;\n    \n    if (*0x8508f53f != '\\0') {\n        for (var_4h = 0; var_4h < 0x40; var_4h = var_4h + 1) {\n            *(var_4h + 0x8508f500) = *(var_4h + 0x8508f500) ^ *(var_4h + 0x8508f4c0);\n        }\n    }\n    return 0x8508f500;\n}\n",
        "token_count": 134
    },
    "0002bfb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0002bfb0(void)\n\n{\n    uint32_t var_4h;\n    \n    if (*0x8508f5bf != '\\0') {\n        for (var_4h = 0; var_4h < 0x40; var_4h = var_4h + 1) {\n            *(var_4h + 0x8508f580) = *(var_4h + 0x8508f580) ^ *(var_4h + 0x8508f540);\n        }\n    }\n    return 0x8508f580;\n}\n",
        "token_count": 133
    },
    "0002c010": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0002c010(void)\n\n{\n    uint32_t var_4h;\n    \n    if (*0x8508f63f != '\\0') {\n        for (var_4h = 0; var_4h < 0x40; var_4h = var_4h + 1) {\n            *(var_4h + 0x8508f600) = *(var_4h + 0x8508f600) ^ *(var_4h + 0x8508f5c0);\n        }\n    }\n    return 0x8508f600;\n}\n",
        "token_count": 134
    },
    "0002c070": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0002c070(void)\n\n{\n    uint32_t var_4h;\n    \n    if (*0x8508f6bf != '\\0') {\n        for (var_4h = 0; var_4h < 0x40; var_4h = var_4h + 1) {\n            *(var_4h + 0x8508f680) = *(var_4h + 0x8508f680) ^ *(var_4h + 0x8508f640);\n        }\n    }\n    return 0x8508f680;\n}\n",
        "token_count": 132
    },
    "0002c0d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0002c0d0(void)\n\n{\n    uint32_t var_4h;\n    \n    if (*0x8508f73f != '\\0') {\n        for (var_4h = 0; var_4h < 0x40; var_4h = var_4h + 1) {\n            *(var_4h + 0x8508f700) = *(var_4h + 0x8508f700) ^ *(var_4h + 0x8508f6c0);\n        }\n    }\n    return 0x8508f700;\n}\n",
        "token_count": 136
    },
    "0002c130": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0002c130(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0002bc50();\n    fcn.0007f6d6(arg_8h, arg_ch, 0x850106c4, uVar1);\n    *(arg_8h + -2 + arg_ch * 2) = 0;\n    return;\n}\n",
        "token_count": 100
    },
    "0002c160": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0002c160(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0002bcb0();\n    fcn.0007f802(arg_8h, arg_ch, 0x850106f0, uVar1);\n    *(arg_8h + arg_ch + -1) = 0;\n    return;\n}\n",
        "token_count": 96
    },
    "0002c190": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0002c190(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0002bd10();\n    fcn.0007f802(arg_8h, arg_ch, 0x850106f0, uVar1);\n    *(arg_8h + arg_ch + -1) = 0;\n    return;\n}\n",
        "token_count": 95
    },
    "0002c1c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0002c1c0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0002bcb0();\n    fcn.0007f802(arg_8h, arg_ch, 0x8501066c, uVar1);\n    *(arg_8h + arg_ch + -1) = 0;\n    return;\n}\n",
        "token_count": 98
    },
    "0002c1f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0002c1f0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0002bd10();\n    fcn.0007f802(arg_8h, arg_ch, 0x8501066c, uVar1);\n    *(arg_8h + arg_ch + -1) = 0;\n    return;\n}\n",
        "token_count": 97
    },
    "0002c220": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0002c220(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0002bcb0();\n    fcn.0007f6d6(arg_8h, arg_ch, 0x850106fc, uVar1);\n    *(arg_8h + -2 + arg_ch * 2) = 0;\n    return;\n}\n",
        "token_count": 100
    },
    "0002c250": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0002c250(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0002bd70();\n    fcn.0007f6d6(arg_8h, arg_ch, 0x8501070c, uVar1);\n    *(arg_8h + -2 + arg_ch * 2) = 0;\n    return;\n}\n",
        "token_count": 100
    },
    "0002c280": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0002c280(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0002bdd0();\n    fcn.0007f6d6(arg_8h, arg_ch, 0x8501070c, uVar1);\n    *(arg_8h + -2 + arg_ch * 2) = 0;\n    return;\n}\n",
        "token_count": 100
    },
    "0002c2b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0002c2b0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0002be30();\n    fcn.0007f6d6(arg_8h, arg_ch, 0x850106c4, uVar1);\n    *(arg_8h + -2 + arg_ch * 2) = 0;\n    return;\n}\n",
        "token_count": 102
    },
    "0002c2e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0002c2e0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0002be90(arg_ch);\n    fcn.0007f7e4(arg_8h, uVar1);\n    *(arg_8h + arg_ch + -1) = 0;\n    return;\n}\n",
        "token_count": 90
    },
    "0002c310": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0002c310(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0002bef0(arg_ch);\n    fcn.0007f7e4(arg_8h, uVar1);\n    *(arg_8h + arg_ch + -1) = 0;\n    return;\n}\n",
        "token_count": 88
    },
    "0002c340": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0002c340(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0002be90();\n    fcn.0007f6d6(arg_8h, arg_ch, 0x8500d6b4, uVar1);\n    *(arg_8h + -2 + arg_ch * 2) = 0;\n    return;\n}\n",
        "token_count": 102
    },
    "0002c370": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0002c370(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0002bef0();\n    fcn.0007f6d6(arg_8h, arg_ch, 0x8500d6b4, uVar1);\n    *(arg_8h + -2 + arg_ch * 2) = 0;\n    return;\n}\n",
        "token_count": 102
    },
    "0002c3a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0002c3a0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0002be90();\n    fcn.0007f802(arg_8h, arg_ch, 0x85010674, uVar1);\n    *(arg_8h + arg_ch + -1) = 0;\n    return;\n}\n",
        "token_count": 96
    },
    "0002c3d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0002c3d0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0002bf50();\n    fcn.0007f802(arg_8h, arg_ch, 0x85010724, uVar1);\n    *(arg_8h + arg_ch + -1) = 0;\n    return;\n}\n",
        "token_count": 96
    },
    "0002c400": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0002c400(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0002bfb0(arg_ch);\n    fcn.0007f7e4(arg_8h, uVar1);\n    *(arg_8h + arg_ch + -1) = 0;\n    return;\n}\n",
        "token_count": 89
    },
    "0002c430": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0002c430(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0002c010(arg_ch);\n    fcn.0007f7e4(arg_8h, uVar1);\n    *(arg_8h + arg_ch + -1) = 0;\n    return;\n}\n",
        "token_count": 88
    },
    "0002c460": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0002c460(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0002c070(arg_ch);\n    fcn.0007f7e4(arg_8h, uVar1);\n    *(arg_8h + arg_ch + -1) = 0;\n    return;\n}\n",
        "token_count": 88
    },
    "0002c490": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0002c490(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0002c0d0(arg_ch);\n    fcn.0007f7e4(arg_8h, uVar1);\n    *(arg_8h + arg_ch + -1) = 0;\n    return;\n}\n",
        "token_count": 90
    },
    "0002c600": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0002c600(void)\n\n{\n    uint32_t var_4h;\n    \n    if (*0x8508eebf != '\\0') {\n        for (var_4h = 0; var_4h < 0x40; var_4h = var_4h + 1) {\n            *(var_4h + 0x8508ee80) = *(var_4h + 0x8508ee80) ^ *(var_4h + 0x8508ee40);\n        }\n    }\n    return 0x8508ee80;\n}\n",
        "token_count": 131
    },
    "0002c660": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0002c660(void)\n\n{\n    uint32_t var_4h;\n    \n    if (*0x8508ef3f != '\\0') {\n        for (var_4h = 0; var_4h < 0x40; var_4h = var_4h + 1) {\n            *(var_4h + 0x8508ef00) = *(var_4h + 0x8508ef00) ^ *(var_4h + 0x8508eec0);\n        }\n    }\n    return 0x8508ef00;\n}\n",
        "token_count": 132
    },
    "0002c6c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0002c6c0(void)\n\n{\n    uint32_t var_4h;\n    \n    if (*0x8508efbf != '\\0') {\n        for (var_4h = 0; var_4h < 0x40; var_4h = var_4h + 1) {\n            *(var_4h + 0x8508ef80) = *(var_4h + 0x8508ef80) ^ *(var_4h + 0x8508ef40);\n        }\n    }\n    return 0x8508ef80;\n}\n",
        "token_count": 133
    },
    "0002c720": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0002c720(void)\n\n{\n    uint32_t var_4h;\n    \n    if (*0x8508f03f != '\\0') {\n        for (var_4h = 0; var_4h < 0x40; var_4h = var_4h + 1) {\n            *(var_4h + 0x8508f000) = *(var_4h + 0x8508f000) ^ *(var_4h + 0x8508efc0);\n        }\n    }\n    return 0x8508f000;\n}\n",
        "token_count": 133
    },
    "0002c780": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0002c780(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0002c600(arg_ch);\n    fcn.0007f7e4(arg_8h, uVar1);\n    *(arg_8h + arg_ch + -1) = 0;\n    return;\n}\n",
        "token_count": 88
    },
    "0002c7b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0002c7b0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0002c600();\n    fcn.0007f802(arg_8h, arg_ch, 0x8501073c, uVar1);\n    *(arg_8h + arg_ch + -1) = 0;\n    return;\n}\n",
        "token_count": 97
    },
    "0002c7e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0002c7e0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0002c660();\n    fcn.0007f802(arg_8h, arg_ch, 0x85010724, uVar1);\n    *(arg_8h + arg_ch + -1) = 0;\n    return;\n}\n",
        "token_count": 96
    },
    "0002c810": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0002c810(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0002c6c0();\n    fcn.0007f802(arg_8h, arg_ch, 0x85010724, uVar1);\n    *(arg_8h + arg_ch + -1) = 0;\n    return;\n}\n",
        "token_count": 96
    },
    "0002c840": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0002c840(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0002c720();\n    fcn.0007f802(arg_8h, arg_ch, 0x85010724, uVar1);\n    *(arg_8h + arg_ch + -1) = 0;\n    return;\n}\n",
        "token_count": 94
    },
    "0002cc80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0002cc80(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    var_ch = 0;\n    fcn.00035650(0x850905c0);\n    iVar1 = fcn.000238e0(0xfffffffe, 8, &var_4h, &var_ch);\n    if (iVar1 == 0) {\n        for (var_8h = 0; var_8h < var_4h; var_8h = var_8h + 1) {\n            if ((*(var_ch + 0x10 + var_8h * 0x40) == arg_8h) || (*(var_ch + 0x1c + var_8h * 0x40) == arg_8h)) {\n                if (*(var_ch + 0x10 + var_8h * 0x40) == arg_8h) {\n                    fcn.00023b40(*(var_ch + var_8h * 0x40), *(var_ch + 8 + var_8h * 0x40), *(var_ch + 4 + var_8h * 0x40)\n                                 , 0, 0);\n                }\n                else {\n                    fcn.00023b40(*(var_ch + var_8h * 0x40), *(var_ch + 8 + var_8h * 0x40), *(var_ch + 4 + var_8h * 0x40)\n                                 , 3, 0);\n                }\n                fcn.0002cbb0(*(var_ch + 0xc + var_8h * 0x40));\n            }\n        }\n    }\n    fcn.000356c0(0x850905c0);\n    fcn.00023b80(var_ch);\n    return;\n}\n",
        "token_count": 432
    },
    "00034190": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00034190(int32_t arg_8h)\n\n{\n    fcn.00036460(*(arg_8h + 4));\n    return;\n}\n",
        "token_count": 39
    },
    "00035ff0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nchar * __cdecl fcn.00035ff0(char *arg_8h, int32_t arg_ch)\n\n{\n    char *var_4h;\n    \n    var_4h = NULL;\n    for (; *arg_8h != '\\0'; arg_8h = arg_8h + 1) {\n        if (*arg_8h == arg_ch) {\n            var_4h = arg_8h;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 104
    },
    "00036030": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00036030(char *arg_8h)\n\n{\n    int32_t var_4h;\n    \n    var_4h = 0;\n    for (; *arg_8h != '\\0'; arg_8h = arg_8h + 1) {\n        var_4h = var_4h + 1;\n    }\n    return var_4h;\n}\n",
        "token_count": 89
    },
    "00036610": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00036610(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    bool bVar3;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint var_1h;\n    \n    (**0x8500d00c)();\n    var_10h = 0xffffffff;\n    var_ch = 0;\n    var_18h = 0;\n    for (var_14h = 0; var_14h < 100; var_14h = var_14h + 1) {\n        uVar1 = *(var_14h * 0x10 + -0x7af6f9ec);\n        if ((uVar1 <= var_ch) && ((uVar1 < var_ch || (*(var_14h * 0x10 + -0x7af6f9f0) < var_10h)))) {\n            var_10h = *(var_14h * 0x10 + -0x7af6f9f0);\n            var_ch = *(var_14h * 0x10 + -0x7af6f9ec);\n            var_18h = var_14h;\n        }\n    }\n    uVar2 = fcn.0007f760();\n    *(var_18h * 0x10 + -0x7af6f9f8) = uVar2;\n    *(var_18h * 0x10 + -0x7af6f9f4) = arg_8h;\n    *(var_18h * 0x10 + -0x7af6f9f0) = *0x85092950;\n    *(var_18h * 0x10 + -0x7af6f9ec) = *0x85092954;\n    bVar3 = 0xfffffffe < *0x85092950;\n    *0x85092950 = *0x85092950 + 1;\n    *0x85092954 = *0x85092954 + bVar3;\n    if ((*0x85092950 | *0x85092954) == 0) {\n        for (var_14h = 0; var_14h < 100; var_14h = var_14h + 1) {\n            *(var_14h * 0x10 + -0x7af6f9f0) = 0;\n            *(var_14h * 0x10 + -0x7af6f9ec) = 0;\n        }\n    }\n    (**0x8500d010)();\n    return;\n}\n",
        "token_count": 622
    },
    "00036750": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint fcn.00036750(void)\n\n{\n    int32_t iVar1;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    var_ch = 0xffffffff;\n    (**0x8500d00c)();\n    var_8h = 0;\n    do {\n        if (99 < var_8h) {\ncode_r0x000367aa:\n            (**0x8500d010)();\n            return var_ch;\n        }\n        iVar1 = fcn.0007f760();\n        if (*(var_8h * 0x10 + -0x7af6f9f8) == iVar1) {\n            var_ch = *(var_8h * 0x10 + -0x7af6f9f4);\n            goto code_r0x000367aa;\n        }\n        var_8h = var_8h + 1;\n    } while( true );\n}\n",
        "token_count": 221
    },
    "00037950": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00037950(uint32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    iVar1 = (**0x8500d1c8)();\n    var_4h = 0;\n    do {\n        if (0x2fff < var_4h) {\ncode_r0x000379a0:\n            (**0x8500d0f0)(0);\n            return;\n        }\n        iVar2 = fcn.0007f7cc(0x850108c8, iVar1 + var_4h, 6);\n        if (iVar2 == 0) {\n            *arg_8h = var_4h;\n            goto code_r0x000379a0;\n        }\n        var_4h = var_4h + 1;\n    } while( true );\n}\n",
        "token_count": 205
    },
    "00037b70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00037b70(uint *arg_8h)\n\n{\n    uint uVar1;\n    \n    *arg_8h = 0;\n    arg_8h[1] = 0;\n    arg_8h[2] = 0;\n    arg_8h[3] = 0;\n    uVar1 = fcn.00036360(0x48);\n    arg_8h[3] = uVar1;\n    (**0x8500d1b0)(arg_8h[3] + 0x28, 0);\n    (**0x8500d1e0)(arg_8h[3], 0, 0x7fffffff);\n    (**0x8500d1e0)(arg_8h[3] + 0x14, 0, 0x7fffffff);\n    return;\n}\n",
        "token_count": 192
    },
    "00038670": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00038670(uint arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    char *var_4h;\n    \n    uVar1 = fcn.00036fe0(arg_8h, &var_4h, 0x10);\n    *arg_ch = uVar1;\n    if (*var_4h == '.') {\n        uVar1 = fcn.00036fe0(var_4h + 1, &var_4h, 0x10);\n        arg_ch[1] = uVar1;\n    }\n    else {\n        arg_ch[1] = 0;\n    }\n    return 1;\n}\n",
        "token_count": 149
    },
    "0003cc00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0003cc00(void)\n\n{\n    int32_t iVar1;\n    uint var_208h;\n    uint32_t var_4h;\n    \n    for (var_4h = 0; var_4h < 100; var_4h = var_4h + 1) {\n        iVar1 = fcn.00038d30(var_4h, &var_208h, 0x100);\n        if (iVar1 == 0) {\n            fcn.0003ce80(&var_208h, 0x8508e9dc);\n        }\n    }\n    return;\n}\n",
        "token_count": 137
    },
    "00041ea0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00041ea0(uint noname_0, int32_t arg_ch, uint arg_10h)\n\n{\n    uint var_4h;\n    \n    *(arg_ch + 0x8c) = arg_10h;\n    fcn.00034dc0(arg_ch + 0x90);\n    return;\n}\n",
        "token_count": 75
    },
    "00041ed0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint fcn.00041ed0(void)\n\n{\n    uint32_t var_4h;\n    \n    for (var_4h = 0; var_4h < 100; var_4h = var_4h + 1) {\n        fcn.00041f00(var_4h);\n    }\n    return 0;\n}\n",
        "token_count": 92
    },
    "000426d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000426d0(int32_t arg_8h)\n\n{\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_ch = 0;\n    fcn.000382a0(0x8509ef28, &var_4h, 1);\n    var_8h = 0;\n    do {\n        if (*0x8509ef20 <= var_8h) {\ncode_r0x00042736:\n            fcn.000382d0(0x8509ef28, &var_4h, 1);\n            return var_ch;\n        }\n        if (*(*0x8509ef24 + 0xc + var_8h * 0x10) == arg_8h) {\n            var_ch = *(*0x8509ef24 + 4 + var_8h * 0x10);\n            goto code_r0x00042736;\n        }\n        var_8h = var_8h + 1;\n    } while( true );\n}\n",
        "token_count": 232
    },
    "00043f10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00043f10(uchar *arg_8h, uint *arg_ch)\n\n{\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0x240022;\n    var_4h = 0x85011168;\n    *arg_ch = 0;\n    fcn.0007f916(arg_8h, 0, 0x6c);\n    *arg_8h = 5;\n    arg_8h[1] = 1;\n    *(arg_8h + 0x30) = var_8h;\n    *(arg_8h + 0x34) = var_4h;\n    *(arg_8h + 8) = 0x85040020;\n    *(arg_8h + 0xc) = 0x85040040;\n    *(arg_8h + 0x10) = 0x85040060;\n    *(arg_8h + 0x14) = 0x85040080;\n    *(arg_8h + 0x18) = 0x850400a0;\n    *(arg_8h + 0x1c) = 0x850400c0;\n    *(arg_8h + 0x20) = 0x850400e0;\n    *(arg_8h + 0x24) = 0x85040100;\n    *(arg_8h + 0x28) = 0x85040120;\n    *(arg_8h + 0x2c) = 0x85040140;\n    *(arg_8h + 0x38) = 0x850401a0;\n    *(arg_8h + 0x3c) = 0x85040160;\n    *(arg_8h + 0x40) = 0x85040180;\n    *(arg_8h + 0x48) = 0;\n    *(arg_8h + 0x44) = 0x850401c0;\n    (**0x8500d02c)(&var_ch, arg_ch, arg_8h, 0x6c);\n    return var_ch;\n}\n",
        "token_count": 493
    },
    "00044f40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251",
            "enumerate PE sections"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00044f40(uint arg_8h, uint noname_1, uchar *arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.0007f916(arg_10h, 0, 0x68);\n    *arg_10h = 0x8b;\n    *(arg_10h + 2) = 0x68;\n    arg_10h[1] = 1;\n    arg_10h[4] = 6;\n    arg_10h[5] = 0;\n    arg_10h[6] = 1;\n    arg_10h[7] = 0;\n    *(arg_10h + 8) = 0;\n    fcn.0007f6d0(&var_8h, 0x8508e8a8);\n    *(arg_10h + 0xc) = var_8h;\n    *(arg_10h + 0x10) = var_4h;\n    fcn.0007f6d0(&var_10h, 0x8508e8a8);\n    *(arg_10h + 0x14) = var_10h;\n    *(arg_10h + 0x18) = var_ch;\n    fcn.0007f6d0(&var_18h, 0x8508e8f8);\n    *(arg_10h + 0x1c) = var_18h;\n    *(arg_10h + 0x20) = var_14h;\n    *(arg_10h + 0x24) = 0x850410c0;\n    *(arg_10h + 0x2c) = 0x850410e0;\n    *(arg_10h + 0x30) = 0x85041140;\n    *(arg_10h + 0x34) = 0x85041120;\n    *(arg_10h + 0x38) = 0x85041100;\n    *(arg_10h + 0x28) = 0x850412c0;\n    *(arg_10h + 0x50) = 0x85041160;\n    *(arg_10h + 0x54) = 0x850411a0;\n    *(arg_10h + 0x58) = 0x85041180;\n    *(arg_10h + 0x3c) = 0x85041240;\n    *(arg_10h + 0x4c) = 0x85041260;\n    *(arg_10h + 0x40) = 0x85041220;\n    *(arg_10h + 0x48) = 0x85041280;\n    *(arg_10h + 0x5c) = 0x850411e0;\n    *(arg_10h + 0x60) = 0x85041200;\n    *(arg_10h + 100) = 0x850411c0;\n    *(arg_10h + 0x44) = 0x850412a0;\n    uVar1 = (**0x8509eefc)(arg_8h, arg_10h, arg_10h, arg_14h);\n    return uVar1;\n}\n",
        "token_count": 789
    },
    "000452e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.000452e0(int32_t arg_8h, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    char cVar1;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    while( true ) {\n        if (arg_ch <= var_8h) {\n            return 0xffffffff;\n        }\n        cVar1 = (**0x8500d224)(arg_8h + var_8h);\n        if (cVar1 == '\\0') break;\n        if (*(arg_8h + var_8h) == arg_10h) {\n            return var_8h;\n        }\n        var_8h = var_8h + 4;\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 186
    },
    "00046bb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00046bb0(uint arg_8h, uint *arg_ch, uint *arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    var_4h = 0;\n    var_44h = 0;\n    fcn.0007f916(&var_40h, 0, 0x38);\n    var_8h = arg_14h;\n    var_4h = arg_18h;\n    var_44h = *arg_ch;\n    var_40h = arg_ch[1];\n    var_3ch = arg_ch[2];\n    var_38h = arg_ch[3];\n    var_34h = arg_14h;\n    var_30h = arg_18h;\n    var_1ch = *arg_10h;\n    var_18h = arg_10h[1];\n    var_14h = arg_10h[2];\n    var_10h = arg_10h[3];\n    (**0x85092a10)(arg_8h, &var_44h, 0, 0);\n    return;\n}\n",
        "token_count": 344
    },
    "000480f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000480f0(uint arg_8h)\n\n{\n    fcn.0003b860();\n    fcn.00036460(arg_8h);\n    return 0;\n}\n",
        "token_count": 45
    },
    "00049260": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.00049260(int32_t arg_8h, uint32_t arg_ch, int32_t arg_10h, uint32_t arg_14h, uint arg_18h, uint arg_1ch, \n            uint arg_20h)\n\n{\n    uint32_t uVar1;\n    uint32_t arg_8h_00;\n    uint arg_ch_00;\n    uint32_t extraout_ECX;\n    uint32_t arg_8h_01;\n    uint *arg_14h_00;\n    uint32_t var_108h;\n    uint32_t var_104h;\n    uint var_100h;\n    ushort auStack252 [60];\n    uint var_80h;\n    ushort auStack124 [60];\n    \n    var_100h._0_2_ = 0;\n    fcn.0007f916(&var_100h + 2, 0, 0x7e);\n    var_80h._0_2_ = 0;\n    fcn.0007f916(&var_80h + 2, 0, 0x7e);\n    var_80h._0_2_ = 0x17;\n    uVar1 = extraout_ECX;\n    for (var_104h = 0; var_104h < 8; var_104h = var_104h + 1) {\n        uVar1 = var_104h & 0xffff0000;\n        auStack124[var_104h] = *(arg_10h + var_104h * 2);\n    }\n    var_100h._0_2_ = 0x17;\n    for (var_108h = 0; var_108h < 8; var_108h = var_108h + 1) {\n        auStack252[var_108h] = *(arg_8h + var_108h * 2);\n        uVar1 = var_108h;\n    }\n    arg_8h_01 = uVar1 & 0xffff0000 | arg_14h & 0xffff;\n    uVar1 = fcn.000365f0(arg_8h_01);\n    arg_14h_00 = &var_80h;\n    arg_8h_00 = uVar1 & 0xffff0000 | arg_ch & 0xffff;\n    arg_ch_00 = fcn.000365f0(arg_8h_00);\n    fcn.00049410(&var_100h, arg_ch_00, arg_8h_00, arg_14h_00, uVar1, arg_8h_01, arg_18h);\n    return;\n}\n",
        "token_count": 599
    },
    "00049370": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.00049370(uint arg_8h, uint32_t arg_ch, uint arg_10h, uint32_t arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    uint32_t arg_18h_00;\n    uint32_t arg_8h_00;\n    uint arg_ch_00;\n    uint16_t extraout_var;\n    uint32_t arg_8h_01;\n    uint *arg_14h_00;\n    uint var_100h;\n    uint var_fch;\n    uint var_80h;\n    uint var_7ch;\n    \n    var_100h._0_2_ = 0;\n    fcn.0007f916(&var_100h + 2, 0, 0x7e);\n    var_80h._0_2_ = 0;\n    fcn.0007f916(&var_80h + 2, 0, 0x7e);\n    var_80h._0_2_ = 2;\n    var_7ch = fcn.000365c0(arg_10h);\n    var_100h._0_2_ = 2;\n    var_fch = fcn.000365c0(arg_8h);\n    arg_8h_01 = arg_14h & 0xffff | extraout_var << 0x10;\n    arg_18h_00 = fcn.000365f0(arg_8h_01);\n    arg_14h_00 = &var_80h;\n    arg_8h_00 = arg_18h_00 & 0xffff0000 | arg_ch & 0xffff;\n    arg_ch_00 = fcn.000365f0(arg_8h_00);\n    fcn.00049410(&var_100h, arg_ch_00, arg_8h_00, arg_14h_00, arg_18h_00, arg_8h_01, arg_18h);\n    return;\n}\n",
        "token_count": 459
    },
    "0004a010": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0004a010(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.00049fd0(arg_8h, arg_ch, arg_10h, &arg_14h);\n    return uVar1;\n}\n",
        "token_count": 93
    },
    "0004d7d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0004d7d0(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    uchar uVar1;\n    uint var_10h;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    for (var_8h = 0; var_8h < arg_10h; var_8h = var_8h + 1) {\n        uVar1 = *(arg_8h + var_8h);\n        *(arg_8h + var_8h) = *(arg_ch + var_8h);\n        *(arg_ch + var_8h) = uVar1;\n    }\n    return;\n}\n",
        "token_count": 160
    },
    "0004dd50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0004dd50(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    \n    var_10h = 0;\n    iVar1 = fcn.0004ddb0(arg_8h, arg_ch, &var_10h, &var_ch, &var_8h, 0, 0);\n    if ((iVar1 == 0) || (var_ch < 8)) {\n        var_18h = 0;\n    }\n    else {\n        var_18h = 1;\n    }\n    fcn.00036460(var_10h);\n    return var_18h;\n}\n",
        "token_count": 178
    },
    "00052ac0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00052ac0(uint arg_8h, uint arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    int32_t arg_8h_00;\n    code *pcVar1;\n    uint32_t var_4h;\n    \n    var_4h = 0;\n    while (var_4h < arg_14h) {\n        arg_8h_00 = *(arg_10h + var_4h * 4);\n        fcn.00053c00(arg_8h_00);\n        var_4h = arg_8h_00 + 1;\n    }\n    pcVar1 = fcn.000684a0(arg_8h);\n    (*pcVar1)(arg_8h, arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 205
    },
    "000530e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000530e0(uint noname_0, int32_t arg_ch, uint arg_10h)\n\n{\n    *(arg_ch + 0x1c + *(arg_ch + 0x1e)) = arg_10h;\n    fcn.00034dc0(arg_ch + 0x3c);\n    if (*(arg_ch + 0x38) == 0x70724152) {\n        fcn.000597e0(arg_ch);\n    }\n    return;\n}\n",
        "token_count": 111
    },
    "00053120": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00053120(void)\n\n{\n    uint32_t var_4h;\n    \n    fcn.00039cc0(0x8501160c, 0);\n    fcn.00039cc0(0x850108e8, 0);\n    for (var_4h = 0; var_4h < 100; var_4h = var_4h + 1) {\n        fcn.00053170(var_4h, 1);\n    }\n    return 0;\n}\n",
        "token_count": 115
    },
    "00053a50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00053a50(uint arg_8h, int32_t arg_ch, uint noname_2, uint arg_14h)\n\n{\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_8h = arg_8h;\n    var_4h = *(arg_ch + 0x40);\n    if (*0x10 != 0x14) {\n        if ((*(var_4h + 6) & 5) == 0) {\n            var_1ch = (**0x8500d238)(var_4h, 0);\n        }\n        else {\n            var_1ch = *(var_4h + 0xc);\n        }\n        var_10h = var_1ch;\n    }\n    var_ch = *(var_4h + 0x14);\n    fcn.00052b10(arg_ch, 0, 0, &var_14h, &var_18h);\n    fcn.000539b0(var_8h, var_10h, var_ch, var_10h + var_ch, arg_14h);\n    (**0x8500d05c)(arg_ch);\n    (**0x8500d2a8)(var_4h);\n    (**0x8500d2a8)(var_14h);\n    fcn.00036460(var_10h);\n    return;\n}\n",
        "token_count": 349
    },
    "00053ee0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00053ee0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00035da0();\n    if (iVar1 < 0x1b) {\n        fcn.00036460(arg_8h);\n    }\n    else {\n        fcn.000474b0(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 87
    },
    "00058af0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00058af0(uint noname_0, uint noname_1, uint arg_10h, uint *arg_14h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uchar var_5h;\n    uint var_4h;\n    \n    *arg_14h = 0;\n    iVar1 = fcn.00020a10(arg_10h, 0x1a, 2, &var_18h, 4);\n    if (iVar1 == 0) {\n        uVar2 = 0x21590065;\n    }\n    else {\n        iVar1 = fcn.000209a0(arg_10h, 0x2c, 4, &var_10h, 0);\n        if ((iVar1 != 0) && (iVar1 = fcn.00059640(var_10h, &var_20h),  iVar1 != 0)) {\n            iVar1 = fcn.000209a0(arg_10h, 0x2d, 4, &var_14h, 0);\n            if ((iVar1 == 0) || (iVar1 = fcn.00059640(var_14h, &var_4h),  iVar1 == 0)) {\n                return 0x21590067;\n            }\n            iVar1 = fcn.000392f0(var_18h);\n            if (iVar1 == 0) {\n                return 0x21590065;\n            }\n            var_5h = (**0x8500d00c)();\n            var_1ch = 0x21590005;\n            var_ch = 0;\n            do {\n                if (0x3f < var_ch) {\ncode_r0x00058c1f:\n                    (**0x8500d010)();\n                    return var_1ch;\n                }\n                if (*(var_ch * 0x30 + -0x7af6ee78) == var_18h) {\n                    *(var_ch * 0x30 + -0x7af6ee78) = 0;\n                    iVar1 = fcn.00038390(0x8509ec08);\n                    if (iVar1 == 0) {\n                        fcn.0001a700(0x8509ec08, 0x85054c40, 0);\n                    }\n                    fcn.00034dc0(0x85091168);\n                    var_1ch = 0;\n                    goto code_r0x00058c1f;\n                }\n                var_ch = var_ch + 1;\n            } while( true );\n        }\n        uVar2 = 0x21590066;\n    }\n    return uVar2;\n}\n",
        "token_count": 636
    },
    "0005a3a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0005a3a0(int32_t *arg_8h)\n\n{\n    uint var_4h;\n    \n    fcn.00034d90(*arg_8h + 0x3c);\n    (**0x8500d2a8)(arg_8h[1]);\n    (**0x8500d05c)(*arg_8h);\n    return;\n}\n",
        "token_count": 88
    },
    "0005b540": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0005b540(int32_t arg_8h)\n\n{\n    *(arg_8h * 0x3c + -0x7af722d0) = *(arg_8h * 0x3c + -0x7af722d0) + 1;\n    return;\n}\n",
        "token_count": 72
    },
    "0005b570": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0005b570(int32_t arg_8h)\n\n{\n    *(arg_8h * 0x3c + -0x7af722cc) = *(arg_8h * 0x3c + -0x7af722cc) + 1;\n    return;\n}\n",
        "token_count": 70
    },
    "0005b880": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0005b880(uint noname_0, uint noname_1, uint arg_10h, uint *arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t var_94h;\n    uint var_90h;\n    uint *var_8ch;\n    uint var_88h;\n    uint var_80h;\n    uint *var_7ch;\n    uint var_78h;\n    uint var_70h;\n    uint *var_6ch;\n    uint var_68h;\n    uint var_60h;\n    uint *var_5ch;\n    uint var_58h;\n    uint var_50h;\n    uint *var_4ch;\n    uint var_48h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint *var_14h;\n    uint var_10h;\n    uint *var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    *arg_14h = 0;\n    if (*0x8509ec16 == '\\0') {\n        uVar1 = 0x21590006;\n    }\n    else {\n        iVar2 = fcn.00020a10(arg_10h, 0x58, 3, &var_94h, 4);\n        if (iVar2 == 0) {\n            var_94h = 0;\n        }\n        *arg_14h = 3;\n        var_10h = 5;\n        var_ch = &var_3ch;\n        var_3ch = 0x2a;\n        var_38h = 2;\n        var_34h = 0x2b;\n        var_30h = 2;\n        var_2ch = 0x2c;\n        var_28h = 2;\n        var_24h = 0x2d;\n        var_20h = 2;\n        var_1ch = 0x2e;\n        var_18h = 2;\n        var_14h = &var_90h;\n        var_8h = 1;\n        var_4h = &var_14h;\n        fcn.0007f916(&var_90h, 0, 0x50);\n        var_8ch = &var_88h;\n        var_90h = 4;\n        var_88h = *(var_94h * 0x3c + -0x7af722d0);\n        var_7ch = &var_78h;\n        var_80h = 4;\n        var_78h = *(var_94h * 0x3c + -0x7af722cc);\n        var_6ch = &var_68h;\n        var_70h = 4;\n        var_68h = *(var_94h * 0x3c + -0x7af722c8);\n        var_5ch = &var_58h;\n        var_60h = 4;\n        var_58h = *(var_94h * 0x3c + -0x7af722c4);\n        var_4ch = &var_48h;\n        var_50h = 4;\n        var_48h = *(var_94h * 0x3c + -0x7af722c0);\n        uVar1 = fcn.0002f660(&var_10h, arg_18h, arg_1ch);\n    }\n    return uVar1;\n}\n",
        "token_count": 848
    },
    "0005f930": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0005f930(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t var_4h;\n    \n    if (arg_8h % arg_ch == 0) {\n        var_4h = arg_8h;\n    }\n    else {\n        var_4h = (arg_8h / arg_ch + 1) * arg_ch;\n    }\n    return var_4h;\n}\n",
        "token_count": 101
    },
    "000648e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000648e0(int32_t arg_8h)\n\n{\n    *(arg_8h + 0x100) = 0;\n    *(arg_8h + 0x102) = 0;\n    *(arg_8h + 0x103) = 0;\n    *(arg_8h + 0x104) = 0;\n    *(arg_8h + 0x105) = 0;\n    *(arg_8h + 0x108) = 0;\n    *(arg_8h + 0x106) = 0;\n    *(arg_8h + 0x102) = 0;\n    *(arg_8h + 0x101) = 0;\n    *(arg_8h + 0x109) = 0;\n    *(arg_8h + 0x9c) = 0x24c;\n    *(arg_8h + 0x98) = 0;\n    *(arg_8h + 0xa0) = 0;\n    *(arg_8h + 0xa4) = 0;\n    *(arg_8h + 0xa8) = 0;\n    *(arg_8h + 0xac) = 0;\n    *(arg_8h + 0xb0) = 0;\n    *(arg_8h + 0xb4) = 0;\n    *(arg_8h + 0xb8) = 0;\n    *(arg_8h + 0xbc) = 0;\n    *(arg_8h + 0xc0) = 0;\n    *(arg_8h + 0xc4) = 0;\n    *(arg_8h + 200) = 0;\n    *(arg_8h + 0xcc) = 0;\n    *(arg_8h + 0xd0) = 0;\n    *(arg_8h + 0xd4) = 0;\n    *(arg_8h + 0xd8) = 0;\n    *(arg_8h + 0xdc) = 0;\n    *(arg_8h + 0xe0) = 0;\n    *(arg_8h + 0xe4) = 0;\n    *(arg_8h + 0xe8) = 0;\n    *(arg_8h + 0xec) = 0;\n    *(arg_8h + 0xf0) = 0;\n    *(arg_8h + 0xf4) = 0;\n    *(arg_8h + 0xf8) = 0;\n    *(arg_8h + 0xfc) = 0;\n    return;\n}\n",
        "token_count": 596
    },
    "000651a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint32_t __cdecl fcn.000651a0(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint var_1h;\n    \n    if (*(arg_8h + 0x10) < *(arg_8h + 0x14)) {\n        uVar1 = **(arg_8h + 0x10);\n        *(arg_8h + 0x10) = *(arg_8h + 0x10) + 1;\n    }\n    else {\n        uVar1 = 0xffffffff;\n    }\n    return uVar1;\n}\n",
        "token_count": 148
    },
    "000651e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000651e0(uint *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    *arg_8h = 0x850611a0;\n    arg_8h[4] = arg_ch;\n    arg_8h[5] = arg_ch + arg_10h;\n    *(arg_8h + 1) = 0;\n    *(arg_8h + 5) = 0;\n    *(arg_8h + 3) = 0;\n    return;\n}\n",
        "token_count": 123
    },
    "000655a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000655a0(int32_t arg_8h)\n\n{\n    fcn.0007f916(arg_8h, 0, 600);\n    fcn.00065640(arg_8h, 0x10);\n    *(arg_8h + 0x9c) = 0x215;\n    fcn.00065680(arg_8h, 0, 0);\n    return;\n}\n",
        "token_count": 97
    },
    "000656c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.000656c0(int32_t arg_8h)\n\n{\n    return arg_8h + 0x212;\n}\n",
        "token_count": 35
    },
    "00066190": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00066190(uint *arg_8h, uint *arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = *arg_ch;\n    uVar2 = *arg_8h;\n    uVar3 = fcn.0001a9d0(uVar2, uVar1, (-(arg_10h != 0) & 0xfffffffe) + 2, arg_14h);\n    *arg_8h = uVar2;\n    *arg_ch = uVar1;\n    return uVar3;\n}\n",
        "token_count": 169
    },
    "000663a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.000663a0(void)\n\n{\n    fcn.00036460(*0x8509ec44);\n    *0x8509ec44 = 0;\n    return;\n}\n",
        "token_count": 43
    },
    "000663e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.000663e0(void)\n\n{\n    fcn.00036460(*0x8509ec44);\n    fcn.00036460(*0x8509ec40);\n    return;\n}\n",
        "token_count": 46
    },
    "0006c280": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0006c280(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_88h;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = arg_ch;\n    while (iVar1 = fcn.0007d710(&var_4h, &var_88h, 0x80, &var_8h),  iVar1 != 0) {\n        iVar1 = fcn.0007f7a2(&var_88h, 0x85011924);\n        if (iVar1 == 0) {\n            uVar2 = fcn.00038670(var_8h, arg_8h + 0x134);\n            *(arg_8h + 0x130) = uVar2;\n        }\n        else {\n            iVar1 = fcn.0007f7a2(&var_88h, 0x8501192c);\n            if (iVar1 == 0) {\n                uVar2 = fcn.00036fe0(var_8h, 0, 0);\n                *(arg_8h + 0x13c) = uVar2;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 286
    },
    "0006c980": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0006c980(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    iVar1 = fcn.000386d0(arg_8h + 0x134, &var_10h);\n    if (iVar1 != 0) {\n        fcn.0006c320(arg_8h, var_ch, var_8h, 0);\n        fcn.00036460(var_ch);\n    }\n    return;\n}\n",
        "token_count": 124
    },
    "0006cbf0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0006cbf0(int32_t arg_8h)\n\n{\n    fcn.0007b950(arg_8h + 4, 0);\n    fcn.0007b950(arg_8h + 8, 0);\n    return;\n}\n",
        "token_count": 63
    },
    "0006cf20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0006cf20(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint uVar1;\n    uint var_4h;\n    \n    fcn.00035650(arg_8h + 0x14);\n    uVar1 = fcn.0006cf70(arg_8h, 0, 0, arg_ch, arg_10h, arg_14h, arg_18h);\n    fcn.000356c0(arg_8h + 0x14);\n    return uVar1;\n}\n",
        "token_count": 139
    },
    "0006d750": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0006d750(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    \n    var_9ch = arg_ch;\n    var_98h = arg_10h;\n    var_94h = arg_14h;\n    var_a0h = 0;\n    fcn.0007da30(arg_8h + 0x92, &var_90h);\n    fcn.0006d8b0(arg_8h, &var_a0h, &var_90h);\n    return;\n}\n",
        "token_count": 167
    },
    "0006d850": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0006d850(int32_t arg_8h, uint arg_ch)\n\n{\n    uint var_90h;\n    \n    fcn.0007da30(arg_8h + 0x92, &var_90h);\n    fcn.0006d8b0(arg_8h, arg_ch, &var_90h);\n    return;\n}\n",
        "token_count": 84
    },
    "00070610": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00070610(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t var_4h;\n    \n    *(arg_8h + 0x24) = 1;\n    fcn.00035650(arg_8h + 0x130);\n    for (var_4h = 0; var_4h < 0xb; var_4h = var_4h + 1) {\n        fcn.0007b950(arg_8h + 0x34 + var_4h * 0x18, 1);\n    }\n    fcn.0007b950(arg_8h + 0x14, 0);\n    for (var_4h = 0; var_4h < 0xb; var_4h = var_4h + 1) {\n        iVar1 = fcn.00038390(arg_8h + 0x2c + var_4h * 0x18);\n        if (iVar1 != 0) {\n            fcn.000383c0(arg_8h + 0x2c + var_4h * 0x18, 0);\n            fcn.00038370(arg_8h + 0x2c + var_4h * 0x18);\n            *(arg_8h + 0x28 + var_4h * 0x18) = 3;\n        }\n    }\n    fcn.000356c0(arg_8h + 0x130);\n    return;\n}\n",
        "token_count": 360
    },
    "000706f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000706f0(int32_t arg_8h)\n\n{\n    fcn.00035620(arg_8h + 0x130);\n    fcn.00035620(arg_8h + 0x18);\n    fcn.00036460(arg_8h);\n    return;\n}\n",
        "token_count": 70
    },
    "000707f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_90h\n\nvoid __cdecl fcn.000707f0(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint *var_90h;\n    char *var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_8h = arg_8h;\n    var_4h = arg_ch;\n    while( true ) {\n        var_90h = &var_4h;\n        iVar1 = fcn.0007d710(var_90h, &var_90h, 0x80, &var_ch);\n        if (iVar1 == 0) break;\n        iVar1 = fcn.0007f7a2(&var_90h, 0x85011968);\n        if ((iVar1 == 0) && ((iVar1 = fcn.00037110(*var_ch),  iVar1 == 0x59 || (*var_ch == '1')))) {\n            *(var_8h + 0x148) = 1;\n        }\n        else {\n            iVar1 = fcn.0007f7a2(&var_90h, 0x85011978);\n            if ((iVar1 == 0) && ((iVar1 = fcn.00037110(*var_ch),  iVar1 == 0x59 || (*var_ch == '1')))) {\n                *(var_8h + 0x14c) = 1;\n            }\n        }\n    }\n    fcn.0007bdc0(*(arg_8h + 0x14), arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 376
    },
    "000714b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000714b0(int32_t arg_8h)\n\n{\n    int32_t var_4h;\n    \n    for (var_4h = 0; var_4h < *(arg_8h + 0xb8); var_4h = var_4h + 1) {\n        fcn.00036460(*(arg_8h + 0x1c + var_4h * 0x10));\n    }\n    return;\n}\n",
        "token_count": 106
    },
    "00071be0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00071be0(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_4h;\n    \n    fcn.00037b70(0x85092434);\n    uVar1 = fcn.00036f90(&var_4h);\n    fcn.0007f8d4(uVar1);\n    iVar2 = fcn.00034d00(0x85092430);\n    if (iVar2 == 0) {\n        fcn.00037be0(0x85092434);\n        uVar1 = 0;\n    }\n    else {\n        iVar2 = fcn.0001a700(0x85092428, 0x8506e8d0, 0);\n        if (iVar2 == 0) {\n            *0x8509ec64 = 1;\n            uVar1 = 1;\n        }\n        else {\n            fcn.00037be0(0x85092434);\n            fcn.00034d90(0x85092430);\n            uVar1 = 0;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 251
    },
    "00072cc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00072cc0(int32_t arg_8h)\n\n{\n    fcn.000798a0(arg_8h + 4, 0);\n    return;\n}\n",
        "token_count": 43
    },
    "00072ce0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00072ce0(int32_t arg_8h)\n\n{\n    fcn.00035620(arg_8h + 8);\n    fcn.00036460(arg_8h);\n    return;\n}\n",
        "token_count": 51
    },
    "00072dd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_88h\n\nvoid __cdecl fcn.00072dd0(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint *var_88h;\n    char *var_8h;\n    uint var_4h;\n    \n    var_4h = arg_ch;\n    while( true ) {\n        var_88h = &var_4h;\n        iVar1 = fcn.0007d710(var_88h, &var_88h, 0x80, &var_8h);\n        if (iVar1 == 0) break;\n        iVar1 = fcn.0007f7a2(&var_88h, 0x850119b8);\n        if ((iVar1 == 0) && ((*var_8h == '1' || (iVar1 = fcn.00037110(*var_8h),  iVar1 == 0x59)))) {\n            *(arg_8h + 0x10) = 1;\n        }\n    }\n    fcn.00079d10(*(arg_8h + 4), arg_ch, 0);\n    return;\n}\n",
        "token_count": 262
    },
    "00074590": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00074590(int32_t arg_8h, uint arg_ch)\n\n{\n    fcn.0007b950(arg_8h + 4, arg_ch);\n    return;\n}\n",
        "token_count": 46
    },
    "000745b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000745b0(int32_t arg_8h)\n\n{\n    fcn.00035620(arg_8h + 0x28);\n    fcn.00036460(arg_8h);\n    return;\n}\n",
        "token_count": 53
    },
    "000746e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_88h\n\nvoid __cdecl fcn.000746e0(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint *var_88h;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = arg_ch;\n    while( true ) {\n        var_88h = &var_4h;\n        iVar1 = fcn.0007d710(var_88h, &var_88h, 0x80, &var_8h);\n        if (iVar1 == 0) break;\n        iVar1 = fcn.0007f7a2(&var_88h, 0x850119cc);\n        if (iVar1 == 0) {\n            *(arg_8h + 0xc) = 0;\n            *(arg_8h + 0x10) = 0;\n            *(arg_8h + 0x14) = 0;\n            *(arg_8h + 0x18) = 0;\n            fcn.0007f7e4(arg_8h + 0xc, var_8h, 0x10);\n        }\n        else {\n            iVar1 = fcn.0007f7a2(&var_88h, 0x850119d0);\n            if (iVar1 == 0) {\n                *(arg_8h + 0xc) = 0;\n                *(arg_8h + 0x10) = 0;\n                *(arg_8h + 0x14) = 0;\n                *(arg_8h + 0x18) = 0;\n                fcn.0007f7e4(arg_8h + 0xc, var_8h, 0x10);\n                *(arg_8h + 0x2c) = 1;\n            }\n        }\n    }\n    fcn.0007bdc0(*(arg_8h + 4), arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 462
    },
    "00075e70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00075e70(uint noname_0, uint arg_ch)\n\n{\n    fcn.00036460(arg_ch);\n    return;\n}\n",
        "token_count": 36
    },
    "00077e50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00077e50(int32_t arg_8h)\n\n{\n    fcn.00034d90(arg_8h + 0x54);\n    fcn.00035620(arg_8h + 0x48);\n    fcn.00035620(arg_8h + 0x1c);\n    fcn.00035620(arg_8h + 0x18);\n    fcn.00036460(arg_8h);\n    return;\n}\n",
        "token_count": 106
    },
    "00079310": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00079310(uint *arg_8h)\n\n{\n    *arg_8h = 0;\n    arg_8h[1] = 0;\n    arg_8h[2] = 0;\n    arg_8h[3] = 0;\n    arg_8h[4] = 0;\n    fcn.00032da0(arg_8h + 4);\n    fcn.00034d00(arg_8h + 3);\n    return;\n}\n",
        "token_count": 112
    },
    "0007b0d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0007b0d0(int32_t *arg_8h)\n\n{\n    fcn.0001b570(*arg_8h + 0xc);\n    return;\n}\n",
        "token_count": 45
    },
    "0007daa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0007daa0(uint *arg_8h, uint *arg_ch)\n\n{\n    *arg_8h = 1;\n    *(arg_8h + 1) = 0xe;\n    *(arg_8h + 6) = 2;\n    arg_8h[2] = 0;\n    arg_8h[3] = 0;\n    arg_8h[4] = 0;\n    *(arg_8h + 5) = 0;\n    *arg_ch = 0x16;\n    return;\n}\n",
        "token_count": 128
    },
    "0007e940": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0007e940(int32_t param_1)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00053e40(*(param_1 + 0x10), *(param_1 + 0x14), *(param_1 + 0x20), *(param_1 + 0x18), param_1 + 0x24, \n                 *(param_1 + 0x1c));\n    return;\n}\n",
        "token_count": 108
    },
    "0007f140": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0007f140(int32_t param_1)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.000295a0(*(param_1 + 0x10), *(param_1 + 0x18), *(param_1 + 0x14), param_1 + 0x1c);\n    return;\n}\n",
        "token_count": 86
    },
    "0007f1b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0007f1b0(int32_t param_1)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.000295f0(*(param_1 + 0x10), *(param_1 + 0x14), *(param_1 + 0x20), *(param_1 + 0x18), param_1 + 0x24, \n                 *(param_1 + 0x1c));\n    return;\n}\n",
        "token_count": 110
    },
    "0007f260": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0007f260(int32_t param_1)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00029800(*(param_1 + 0x10), *(param_1 + 0x14), *(param_1 + 0x18), *(param_1 + 0x1c), param_1 + 0x24, \n                 *(param_1 + 0x34));\n    return;\n}\n",
        "token_count": 107
    },
    "0007f330": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0007f330(int32_t param_1)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.000238e0(*(param_1 + 0x10), *(param_1 + 0x14), param_1 + 0x18, param_1 + 0x1c);\n    return;\n}\n",
        "token_count": 85
    },
    "0007f500": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0007f500(int32_t param_1)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00061730(*(param_1 + 0x10), *(param_1 + 0x14), *(param_1 + 0x18), *(param_1 + 0x1c), param_1 + 0x20);\n    return;\n}\n",
        "token_count": 95
    },
    "0007f570": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0007f570(int32_t param_1)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00061590(*(param_1 + 0x10), *(param_1 + 0x14), *(param_1 + 0x18), param_1 + 0x1c);\n    return;\n}\n",
        "token_count": 85
    },
    "00065220": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00065220(int32_t arg_8h)\n\n{\n    uint var_4h;\n    \n    if ((*(arg_8h + 4) == *(arg_8h + 5)) && (*(arg_8h + 0x18) != '\\0')) {\n        var_4h = 1;\n    }\n    else {\n        var_4h = 0;\n    }\n    return var_4h;\n}\n",
        "token_count": 99
    },
    "00065450": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nulong __cdecl fcn.00065450(uint arg_8h)\n\n{\n    uchar uVar1;\n    uint32_t uVar2;\n    ulong uVar3;\n    ulong uVar4;\n    ulong uVar5;\n    ulong uVar6;\n    ulong uVar7;\n    ulong uVar8;\n    ulong uVar9;\n    uint uVar10;\n    uint uVar11;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar11 = arg_8h;\n    uVar2 = fcn.00065260(arg_8h);\n    uVar10 = arg_8h;\n    uVar1 = fcn.00065260(arg_8h);\n    uVar3 = fcn.0007f922(uVar10, uVar11, uVar1, 0);\n    fcn.00065260(arg_8h);\n    uVar4 = fcn.0007f922();\n    fcn.00065260(arg_8h);\n    uVar5 = fcn.0007f922();\n    fcn.00065260(arg_8h);\n    uVar6 = fcn.0007f922();\n    fcn.00065260(arg_8h);\n    uVar7 = fcn.0007f922();\n    fcn.00065260(arg_8h);\n    uVar8 = fcn.0007f922();\n    fcn.00065260(arg_8h);\n    uVar9 = fcn.0007f922();\n    return CONCAT44(uVar9 >> 0x20 |\n                    uVar8 >> 0x20 | uVar7 >> 0x20 | uVar6 >> 0x20 | uVar5 >> 0x20 | uVar4 >> 0x20 | uVar3 >> 0x20, \n                    uVar9 | uVar8 | uVar7 | uVar6 | uVar5 | uVar4 | uVar3 | uVar2 & 0xff);\n}\n",
        "token_count": 478
    },
    "00065fd0": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00065fd0(int32_t arg_8h)\n\n{\n    fcn.00065260(arg_8h);\n    if (*(arg_8h + 0x112 + *(arg_8h + 4)) == '\\x0f') {\n        fcn.00065ab0(arg_8h);\n    }\n    else {\n        fcn.000658f0(arg_8h);\n    }\n    *(arg_8h + 0x9c) = **(arg_8h + 0x98);\n    return;\n}\n",
        "token_count": 124
    },
    "0001a480": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0001a480(uint noname_0, int32_t arg_ch)\n\n{\n    uint uVar1;\n    uint var_4h;\n    \n    uVar1 = (**(arg_ch + 0x10))(*(arg_ch + 0x14));\n    *(arg_ch + 0x18) = uVar1;\n    (**0x8500d0c8)(arg_ch, 0, 0);\n    return;\n}\n",
        "token_count": 101
    },
    "0007e990": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0007e990(int32_t param_1)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00053e00(*(param_1 + 0x10), *(param_1 + 0x14), *(param_1 + 0x18), *(param_1 + 0x1c));\n    return;\n}\n",
        "token_count": 87
    },
    "0007ee60": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0007ee60(int32_t param_1)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.0004d7b0(*(param_1 + 0x10), *(param_1 + 0x14), *(param_1 + 0x18));\n    return;\n}\n",
        "token_count": 78
    },
    "0007f200": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0007f200(int32_t param_1)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.000297e0(*(param_1 + 0x10), *(param_1 + 0x14), *(param_1 + 0x18));\n    return;\n}\n",
        "token_count": 76
    },
    "0007f370": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0007f370(int32_t param_1)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00023a70(*(param_1 + 0x10), *(param_1 + 0x14), *(param_1 + 0x18));\n    return;\n}\n",
        "token_count": 76
    },
    "0007f540": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0007f540(int32_t param_1, uint32_t param_2)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00062380(*(param_1 + 0x10), *(param_1 + 0x14), param_2 & 0xffffff00 | *(param_1 + 0x18));\n    return;\n}\n",
        "token_count": 91
    },
    "0007f5b0": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0007f5b0(int32_t param_1)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.0005f570(*(param_1 + 0x10), *(param_1 + 0x14), *(param_1 + 0x18), *(param_1 + 0x1c));\n    return;\n}\n",
        "token_count": 89
    },
    "0001a2e0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0001a2e0(uint32_t *arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = *arg_8h;\n    while( true ) {\n        LOCK();\n        if (uVar1 == *arg_8h) break;\n        uVar1 = *arg_8h;\n    }\n    *arg_8h = uVar1 & arg_ch;\n    return;\n}\n",
        "token_count": 104
    },
    "0001a800": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0001a800(void)\n\n{\n    int32_t iVar1;\n    \n    fcn.0001b570(0x850925e0);\n    do {\n        iVar1 = fcn.00045cc0(0x850925dc, 1, 1);\n    } while (iVar1 == 0);\n    fcn.0007a2b0(0x850925e0);\n    return;\n}\n",
        "token_count": 95
    },
    "00026eb0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00026eb0(uint arg_8h)\n\n{\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_20h = 0;\n    var_8h = 0;\n    var_1ch = 9;\n    var_18h = 2;\n    var_10h = &var_ch;\n    var_14h = 4;\n    var_ch = arg_8h;\n    fcn.0002b8f0(0, 0x403, &var_20h, &var_4h, 0, 0, 0);\n    return;\n}\n",
        "token_count": 181
    },
    "00026f20": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_8h\n\nvoid fcn.00026f20(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    ulong uVar4;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    do {\n        iVar1 = (*0x8500d164)[1];\n        uVar2 = **0x8500d164;\n    } while (iVar1 != (*0x8500d164)[2]);\n    uVar3 = (**0x8500d160)(*0x8500d164, uVar2);\n    uVar4 = fcn.0007f8fe(uVar2, iVar1, uVar3, 0);\n    fcn.0007f90a(uVar4, 10000, 0);\n    return;\n}\n",
        "token_count": 209
    }
}